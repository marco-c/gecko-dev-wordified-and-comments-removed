#
include
"
mozilla
/
dom
/
WebTransportSendStream
.
h
"
#
include
"
mozilla
/
dom
/
UnderlyingSinkCallbackHelpers
.
h
"
#
include
"
mozilla
/
dom
/
WritableStream
.
h
"
using
namespace
mozilla
:
:
ipc
;
namespace
mozilla
:
:
dom
{
WebTransportSendStream
:
:
WebTransportSendStream
(
nsIGlobalObject
*
aGlobal
)
:
WritableStream
(
aGlobal
WritableStream
:
:
HoldDropJSObjectsCaller
:
:
Implicit
)
{
}
JSObject
*
WebTransportSendStream
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
WebTransportSendStream_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
already_AddRefed
<
WebTransportSendStream
>
WebTransportSendStream
:
:
Create
(
WebTransport
*
aWebTransport
nsIGlobalObject
*
aGlobal
DataPipeSender
*
sender
ErrorResult
&
aRv
)
{
AutoJSAPI
jsapi
;
if
(
!
jsapi
.
Init
(
aGlobal
)
)
{
return
nullptr
;
}
JSContext
*
cx
=
jsapi
.
cx
(
)
;
auto
stream
=
MakeRefPtr
<
WebTransportSendStream
>
(
aGlobal
)
;
nsCOMPtr
<
nsIAsyncOutputStream
>
outputStream
=
sender
;
auto
algorithms
=
MakeRefPtr
<
WritableStreamToOutput
>
(
stream
-
>
GetParentObject
(
)
outputStream
)
;
RefPtr
<
QueuingStrategySize
>
writableSizeAlgorithm
;
stream
-
>
SetUpNative
(
cx
*
algorithms
Nothing
(
)
writableSizeAlgorithm
aRv
)
;
aWebTransport
-
>
mSendStreams
.
AppendElement
(
stream
)
;
return
stream
.
forget
(
)
;
}
already_AddRefed
<
Promise
>
WebTransportSendStream
:
:
GetStats
(
)
{
RefPtr
<
Promise
>
promise
=
Promise
:
:
CreateInfallible
(
WritableStream
:
:
mGlobal
)
;
promise
-
>
MaybeRejectWithNotSupportedError
(
"
GetStats
isn
'
t
supported
yet
"
)
;
return
promise
.
forget
(
)
;
}
}
