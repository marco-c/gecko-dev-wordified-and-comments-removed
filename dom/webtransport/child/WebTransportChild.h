#
ifndef
DOM_WEBTRANSPORT_WEBTRANSPORTCHILD_H_
#
define
DOM_WEBTRANSPORT_WEBTRANSPORTCHILD_H_
#
include
"
nsISupportsImpl
.
h
"
#
include
"
mozilla
/
dom
/
PWebTransportChild
.
h
"
#
include
"
mozilla
/
ipc
/
DataPipe
.
h
"
namespace
mozilla
:
:
dom
{
class
WebTransport
;
class
WebTransportChild
:
public
PWebTransportChild
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
WebTransportChild
)
explicit
WebTransportChild
(
WebTransport
*
aTransport
)
:
mTransport
(
aTransport
)
{
}
virtual
void
CloseAll
(
)
;
void
Shutdown
(
bool
aClose
)
;
:
:
mozilla
:
:
ipc
:
:
IPCResult
RecvCloseAll
(
CloseAllResolver
&
&
aResolver
)
;
:
:
mozilla
:
:
ipc
:
:
IPCResult
RecvRemoteClosed
(
const
bool
&
aCleanly
const
uint32_t
&
aCode
const
nsACString
&
aReason
)
;
:
:
mozilla
:
:
ipc
:
:
IPCResult
RecvIncomingBidirectionalStream
(
const
RefPtr
<
mozilla
:
:
ipc
:
:
DataPipeReceiver
>
&
aIncoming
const
RefPtr
<
mozilla
:
:
ipc
:
:
DataPipeSender
>
&
aOutgoing
)
;
:
:
mozilla
:
:
ipc
:
:
IPCResult
RecvIncomingUnidirectionalStream
(
const
RefPtr
<
mozilla
:
:
ipc
:
:
DataPipeReceiver
>
&
aStream
)
;
protected
:
WebTransport
*
mTransport
;
virtual
~
WebTransportChild
(
)
{
MOZ_ASSERT
(
!
mTransport
)
;
}
}
;
}
#
endif
