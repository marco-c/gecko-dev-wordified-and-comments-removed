"
use
strict
"
;
let
{
TestUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
TestUtils
.
sys
.
mjs
"
)
;
add_task
(
async
function
(
)
{
let
endConsoleListening
=
TestUtils
.
listenForConsoleMessages
(
)
;
let
workerCompleteDeferred
=
Promise
.
withResolvers
(
)
;
const
worker
=
new
ChromeWorker
(
"
resource
:
/
/
test
/
worker
.
mjs
"
)
;
worker
.
onmessage
=
workerCompleteDeferred
.
resolve
;
worker
.
postMessage
(
{
}
)
;
await
workerCompleteDeferred
.
promise
;
let
messages
=
await
endConsoleListening
(
)
;
Assert
.
equal
(
messages
.
length
2
"
Should
have
received
two
messages
"
)
;
Assert
.
equal
(
messages
[
0
]
.
level
"
error
"
"
Should
be
an
error
message
"
)
;
Assert
.
equal
(
messages
[
0
]
.
prefix
"
testPrefix
"
"
Should
have
the
correct
prefix
"
)
;
Assert
.
equal
(
messages
[
0
]
.
arguments
[
0
]
"
Console
.
maxLogLevelPref
is
not
supported
within
workers
!
"
"
Should
have
the
correct
message
text
"
)
;
Assert
.
equal
(
messages
[
1
]
.
level
"
warn
"
"
Should
be
a
warning
message
"
)
;
Assert
.
equal
(
messages
[
1
]
.
prefix
"
testPrefix
"
"
Should
have
the
correct
prefix
"
)
;
Assert
.
equal
(
messages
[
1
]
.
arguments
[
0
]
"
Test
Warn
"
"
Should
have
the
correct
message
text
"
)
;
}
)
;
