const
{
BackgroundTasksTestUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
BackgroundTasksTestUtils
.
sys
.
mjs
"
)
;
BackgroundTasksTestUtils
.
init
(
this
)
;
const
do_backgroundtask
=
BackgroundTasksTestUtils
.
do_backgroundtask
.
bind
(
BackgroundTasksTestUtils
)
;
add_task
(
async
function
test_console_to_mozlog
(
)
{
const
lines
=
[
]
;
const
promise
=
do_backgroundtask
(
"
console
"
{
onStdoutLine
:
(
line
_proc
)
=
>
{
dump
(
STDOUT
:
{
line
}
)
;
lines
.
push
(
line
)
;
}
extraEnv
:
{
MOZ_LOG
:
"
console
:
5
my
-
prefix
:
2
"
}
}
)
;
const
exitCode
=
await
promise
;
is
(
exitCode
0
)
;
const
pidLine
=
lines
.
find
(
line
=
>
line
.
includes
(
"
CONSOLE
-
PID
"
)
)
;
ok
(
pidLine
"
Found
the
line
where
the
parent
process
PID
is
logged
"
)
;
const
[
pid
]
=
pidLine
.
split
(
"
:
"
)
;
ok
(
pid
"
Got
the
pid
out
of
the
PID
line
"
)
;
const
threadPrefix
=
[
Parent
{
pid
}
:
Main
Thread
]
:
;
const
expectedLogs
=
[
I
/
console
log
:
"
foo
"
D
/
console
debug
:
"
bar
"
E
/
my
-
prefix
error
:
(
{
shouldLogError
:
true
shouldLogLog
:
true
}
)
W
/
my
-
prefix
warn
:
"
warning
"
]
;
for
(
const
expected
of
expectedLogs
)
{
ok
(
lines
.
some
(
line
=
>
line
.
includes
(
{
threadPrefix
}
{
expected
}
)
)
Found
{
expected
}
)
;
}
ok
(
!
lines
.
some
(
line
=
>
line
.
includes
(
"
not
-
logged
"
)
)
"
Logs
blocked
by
too
verbose
level
aren
'
t
visible
in
stdout
"
)
;
}
)
;
