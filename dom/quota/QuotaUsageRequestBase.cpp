#
include
"
QuotaUsageRequestBase
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
PQuotaRequest
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
QuotaManager
.
h
"
namespace
mozilla
:
:
dom
:
:
quota
{
void
QuotaUsageRequestBase
:
:
SendResults
(
)
{
AssertIsOnOwningThread
(
)
;
if
(
IsActorDestroyed
(
)
)
{
if
(
NS_SUCCEEDED
(
mResultCode
)
)
{
mResultCode
=
NS_ERROR_FAILURE
;
}
}
else
{
if
(
mCanceled
)
{
mResultCode
=
NS_ERROR_FAILURE
;
}
UsageRequestResponse
response
;
if
(
NS_SUCCEEDED
(
mResultCode
)
)
{
GetResponse
(
response
)
;
}
else
{
response
=
mResultCode
;
}
Unused
<
<
PQuotaUsageRequestParent
:
:
Send__delete__
(
this
response
)
;
}
}
void
QuotaUsageRequestBase
:
:
ActorDestroy
(
ActorDestroyReason
aWhy
)
{
AssertIsOnOwningThread
(
)
;
NoteActorDestroyed
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
QuotaUsageRequestBase
:
:
RecvCancel
(
)
{
AssertIsOnOwningThread
(
)
;
if
(
mCanceled
.
exchange
(
true
)
)
{
NS_WARNING
(
"
Canceled
more
than
once
?
!
"
)
;
return
IPC_FAIL
(
this
"
Request
canceled
more
than
once
"
)
;
}
return
IPC_OK
(
)
;
}
}
