#
include
"
nsISupports
.
idl
"
%
{
C
+
+
namespace
mozilla
:
:
dom
:
:
quota
{
class
UsageInfo
;
}
%
}
[
ref
]
native
UsageInfoRef
(
mozilla
:
:
dom
:
:
quota
:
:
UsageInfo
)
;
[
scriptable
uuid
(
4d8def75
-
014e
-
404d
-
bf30
-
e2f0Bfcf4d89
)
]
interface
nsIQuotaFullOriginMetadataResult
:
nsISupports
{
readonly
attribute
ACString
suffix
;
readonly
attribute
ACString
group
;
readonly
attribute
ACString
origin
;
readonly
attribute
ACString
storageOrigin
;
readonly
attribute
ACString
persistenceType
;
readonly
attribute
boolean
persisted
;
readonly
attribute
long
long
lastAccessTime
;
}
;
[
scriptable
uuid
(
d8c9328b
-
9aa8
-
4f5d
-
90e6
-
482de4a6d5b8
)
]
interface
nsIQuotaUsageResult
:
nsISupports
{
readonly
attribute
ACString
origin
;
readonly
attribute
boolean
persisted
;
readonly
attribute
unsigned
long
long
usage
;
readonly
attribute
unsigned
long
long
lastAccessed
;
}
;
[
scriptable
builtinclass
uuid
(
96df03d2
-
116a
-
493f
-
bb0b
-
118c212a6b32
)
]
interface
nsIQuotaOriginUsageResult
:
nsISupports
{
readonly
attribute
unsigned
long
long
databaseUsage
;
readonly
attribute
unsigned
long
long
fileUsage
;
readonly
attribute
unsigned
long
long
usage
;
readonly
attribute
boolean
databaseUsageIsExplicit
;
readonly
attribute
boolean
fileUsageIsExplicit
;
readonly
attribute
boolean
totalUsageIsExplicit
;
[
notxpcom
nostdcall
]
readonly
attribute
UsageInfoRef
usageInfo
;
}
;
[
scriptable
uuid
(
9827fc69
-
7ea9
-
48ef
-
b30d
-
2e2ae0451ec0
)
]
interface
nsIQuotaEstimateResult
:
nsISupports
{
readonly
attribute
unsigned
long
long
usage
;
readonly
attribute
unsigned
long
long
limit
;
}
;
