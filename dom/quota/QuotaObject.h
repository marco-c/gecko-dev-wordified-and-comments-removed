#
ifndef
mozilla_dom_quota_quotaobject_h__
#
define
mozilla_dom_quota_quotaobject_h__
#
include
"
mozilla
/
dom
/
quota
/
QuotaCommon
.
h
"
#
include
"
nsDataHashtable
.
h
"
#
include
"
PersistenceType
.
h
"
BEGIN_QUOTA_NAMESPACE
class
OriginInfo
;
class
QuotaManager
;
class
QuotaObject
{
friend
class
OriginInfo
;
friend
class
QuotaManager
;
public
:
void
AddRef
(
)
;
void
Release
(
)
;
const
nsAString
&
Path
(
)
const
{
return
mPath
;
}
bool
MaybeUpdateSize
(
int64_t
aSize
bool
aTruncate
)
;
void
DisableQuotaCheck
(
)
;
void
EnableQuotaCheck
(
)
;
private
:
QuotaObject
(
OriginInfo
*
aOriginInfo
const
nsAString
&
aPath
int64_t
aSize
)
:
mOriginInfo
(
aOriginInfo
)
mPath
(
aPath
)
mSize
(
aSize
)
mQuotaCheckDisabled
(
false
)
{
MOZ_COUNT_CTOR
(
QuotaObject
)
;
}
~
QuotaObject
(
)
{
MOZ_COUNT_DTOR
(
QuotaObject
)
;
}
already_AddRefed
<
QuotaObject
>
LockedAddRef
(
)
{
AssertCurrentThreadOwnsQuotaMutex
(
)
;
+
+
mRefCnt
;
RefPtr
<
QuotaObject
>
result
=
dont_AddRef
(
this
)
;
return
result
.
forget
(
)
;
}
mozilla
:
:
ThreadSafeAutoRefCnt
mRefCnt
;
OriginInfo
*
mOriginInfo
;
nsString
mPath
;
int64_t
mSize
;
bool
mQuotaCheckDisabled
;
}
;
END_QUOTA_NAMESPACE
#
endif
