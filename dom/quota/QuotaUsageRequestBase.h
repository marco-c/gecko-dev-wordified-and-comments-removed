#
ifndef
DOM_QUOTA_QUOTAUSAGEREQUESTBASE_H_
#
define
DOM_QUOTA_QUOTAUSAGEREQUESTBASE_H_
#
include
"
NormalOriginOperationBase
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
PersistenceType
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
PQuotaUsageRequestParent
.
h
"
class
nsIFile
;
namespace
mozilla
{
template
<
typename
V
typename
E
>
class
Result
;
namespace
dom
:
:
quota
{
struct
OriginMetadata
;
class
UsageInfo
;
class
UsageRequestResponse
;
class
QuotaUsageRequestBase
:
public
NormalOriginOperationBase
public
PQuotaUsageRequestParent
{
protected
:
QuotaUsageRequestBase
(
MovingNotNull
<
RefPtr
<
QuotaManager
>
>
aQuotaManager
const
char
*
aName
)
:
NormalOriginOperationBase
(
std
:
:
move
(
aQuotaManager
)
aName
)
{
}
mozilla
:
:
Result
<
UsageInfo
nsresult
>
GetUsageForOrigin
(
QuotaManager
&
aQuotaManager
PersistenceType
aPersistenceType
const
OriginMetadata
&
aOriginMetadata
)
;
virtual
void
GetResponse
(
UsageRequestResponse
&
aResponse
)
=
0
;
private
:
mozilla
:
:
Result
<
UsageInfo
nsresult
>
GetUsageForOriginEntries
(
QuotaManager
&
aQuotaManager
PersistenceType
aPersistenceType
const
OriginMetadata
&
aOriginMetadata
nsIFile
&
aDirectory
bool
aInitialized
)
;
void
SendResults
(
)
override
;
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvCancel
(
)
final
;
}
;
}
}
#
endif
