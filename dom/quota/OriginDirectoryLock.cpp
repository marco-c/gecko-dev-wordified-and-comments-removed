#
include
"
OriginDirectoryLock
.
h
"
#
include
<
utility
>
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
NotNull
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
Nullable
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
CommonMetadata
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
DirectoryLockCategory
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
OriginScope
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
PersistenceScope
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
QuotaManager
.
h
"
namespace
mozilla
:
:
dom
:
:
quota
{
RefPtr
<
OriginDirectoryLock
>
OriginDirectoryLock
:
:
CreateForEviction
(
MovingNotNull
<
RefPtr
<
QuotaManager
>
>
aQuotaManager
PersistenceType
aPersistenceType
const
quota
:
:
OriginMetadata
&
aOriginMetadata
)
{
MOZ_ASSERT
(
aPersistenceType
!
=
PERSISTENCE_TYPE_INVALID
)
;
MOZ_ASSERT
(
!
aOriginMetadata
.
mOrigin
.
IsEmpty
(
)
)
;
MOZ_ASSERT
(
!
aOriginMetadata
.
mStorageOrigin
.
IsEmpty
(
)
)
;
return
MakeRefPtr
<
OriginDirectoryLock
>
(
std
:
:
move
(
aQuotaManager
)
PersistenceScope
:
:
CreateFromValue
(
aPersistenceType
)
OriginScope
:
:
FromOrigin
(
aOriginMetadata
)
ClientStorageScope
:
:
CreateFromNull
(
)
true
true
ShouldUpdateLockIdTableFlag
:
:
No
DirectoryLockCategory
:
:
UninitOrigins
)
;
}
}
