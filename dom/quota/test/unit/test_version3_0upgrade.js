var
testGenerator
=
testSteps
(
)
;
function
*
testSteps
(
)
{
const
origins
=
[
"
storage
/
default
/
chrome
/
"
"
storage
/
default
/
http
+
+
+
www
.
mozilla
.
org
/
"
]
;
const
paddingFilePath
=
"
cache
/
.
padding
"
;
info
(
"
Clearing
"
)
;
clear
(
continueToNextStepSync
)
;
yield
undefined
;
installPackage
(
"
version3_0upgrade_profile
"
)
;
info
(
"
Checking
padding
file
before
upgrade
(
QM
version
2
.
0
)
"
)
;
for
(
let
origin
of
origins
)
{
let
paddingFile
=
getRelativeFile
(
origin
+
paddingFilePath
)
;
let
exists
=
paddingFile
.
exists
(
)
;
ok
(
!
exists
"
Padding
file
doesn
'
t
exist
"
)
;
}
info
(
"
Initializing
"
)
;
let
request
=
init
(
continueToNextStepSync
)
;
yield
undefined
;
ok
(
request
.
resultCode
=
=
NS_OK
"
Initialization
succeeded
"
)
;
info
(
"
Checking
padding
files
after
upgrade
(
QM
version
3
.
0
)
"
)
;
for
(
let
origin
of
origins
)
{
let
paddingFile
=
getRelativeFile
(
origin
+
paddingFilePath
)
;
let
exists
=
paddingFile
.
exists
(
)
;
ok
(
exists
"
Padding
file
does
exist
"
)
;
info
(
"
Reading
out
contents
of
padding
file
"
)
;
File
.
createFromNsIFile
(
paddingFile
)
.
then
(
grabArgAndContinueHandler
)
;
let
domFile
=
yield
undefined
;
let
fileReader
=
new
FileReader
(
)
;
fileReader
.
onload
=
continueToNextStepSync
;
fileReader
.
readAsArrayBuffer
(
domFile
)
;
yield
undefined
;
let
paddingFileInfo
=
new
Float64Array
(
fileReader
.
result
)
;
ok
(
paddingFileInfo
.
length
=
=
1
"
Padding
file
does
take
64
bytes
.
"
)
;
ok
(
paddingFileInfo
[
0
]
=
=
0
"
Padding
size
does
default
to
zero
.
"
)
;
}
finishTest
(
)
;
}
