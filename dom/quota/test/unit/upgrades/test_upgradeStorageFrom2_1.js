async
function
testSteps
(
)
{
const
filePaths
=
[
"
storage
/
default
/
chrome
+
+
+
content
+
browser
.
xul
"
"
storage
/
default
/
moz
-
safe
-
about
+
+
+
home
"
"
storage
/
default
/
about
+
home
+
1
"
"
storage
/
default
/
about
+
home
+
1
+
q
"
"
storage
/
default
/
about
+
reader
+
url
=
https
%
3A
%
2F
%
2Fexample
.
com
"
"
storage
/
default
/
https
+
+
+
example
.
com
/
asmjs
"
"
storage
/
default
/
https
+
+
+
example
.
com
/
idb
/
UUID123
.
tmp
"
]
;
const
packages
=
[
"
version2_1_profile
"
"
.
.
/
defaultStorageDirectory_shared
"
]
;
info
(
"
Clearing
"
)
;
let
request
=
clear
(
)
;
await
requestFinished
(
request
)
;
info
(
"
Installing
packages
"
)
;
installPackages
(
packages
)
;
info
(
"
Verifying
storage
"
)
;
verifyStorage
(
packages
"
afterInstall
"
)
;
info
(
"
Checking
files
and
directories
before
upgrade
(
storage
version
2
.
1
)
"
)
;
for
(
const
filePath
of
filePaths
)
{
let
file
=
getRelativeFile
(
filePath
)
;
let
exists
=
file
.
exists
(
)
;
ok
(
exists
"
File
or
directory
does
exist
"
)
;
}
info
(
"
Initializing
"
)
;
request
=
init
(
)
;
await
requestFinished
(
request
)
;
info
(
"
Verifying
storage
"
)
;
verifyStorage
(
packages
"
afterInit
"
)
;
info
(
"
Checking
files
and
directories
after
upgrade
"
)
;
for
(
const
filePath
of
filePaths
)
{
let
file
=
getRelativeFile
(
filePath
)
;
let
exists
=
file
.
exists
(
)
;
ok
(
!
exists
"
File
or
directory
does
not
exist
"
)
;
}
}
