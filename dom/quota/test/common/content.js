const
NS_ERROR_STORAGE_BUSY
=
SpecialPowers
.
Cr
.
NS_ERROR_STORAGE_BUSY
;
loadScript
(
"
dom
/
quota
/
test
/
common
/
global
.
js
"
)
;
function
clearAllDatabases
(
callback
)
{
let
qms
=
SpecialPowers
.
Services
.
qms
;
let
principal
=
SpecialPowers
.
wrap
(
document
)
.
nodePrincipal
;
let
request
=
qms
.
clearStoragesForPrincipal
(
principal
)
;
let
cb
=
SpecialPowers
.
wrapCallback
(
callback
)
;
request
.
callback
=
cb
;
return
request
;
}
function
getSimpleDatabase
(
)
{
let
connection
=
SpecialPowers
.
Cc
[
"
mozilla
.
org
/
dom
/
sdb
-
connection
;
1
"
]
.
createInstance
(
SpecialPowers
.
Ci
.
nsISDBConnection
)
;
let
principal
=
SpecialPowers
.
wrap
(
document
)
.
nodePrincipal
;
connection
.
init
(
principal
)
;
return
connection
;
}
async
function
requestFinished
(
request
)
{
await
new
Promise
(
function
(
resolve
)
{
request
.
callback
=
SpecialPowers
.
wrapCallback
(
function
(
)
{
resolve
(
)
;
}
)
;
}
)
;
if
(
request
.
resultCode
!
=
SpecialPowers
.
Cr
.
NS_OK
)
{
throw
new
RequestError
(
request
.
resultCode
request
.
resultName
)
;
}
return
request
.
result
;
}
