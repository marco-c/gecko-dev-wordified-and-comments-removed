#
ifndef
DOM_QUOTA_PRINCIPALUTILS_H_
#
define
DOM_QUOTA_PRINCIPALUTILS_H_
#
include
<
cstdint
>
#
include
"
nsStringFwd
.
h
"
class
nsIPrincipal
;
class
nsPIDOMWindowOuter
;
enum
class
nsresult
:
uint32_t
;
namespace
mozilla
{
template
<
typename
V
typename
E
>
class
Result
;
}
namespace
mozilla
:
:
ipc
{
class
PrincipalInfo
;
}
namespace
mozilla
:
:
dom
:
:
quota
{
struct
PrincipalMetadata
;
class
QuotaManager
;
bool
IsPrincipalInfoValid
(
const
mozilla
:
:
ipc
:
:
PrincipalInfo
&
aPrincipalInfo
)
;
Result
<
PrincipalMetadata
nsresult
>
GetInfoFromValidatedPrincipalInfo
(
QuotaManager
&
aQuotaManager
const
mozilla
:
:
ipc
:
:
PrincipalInfo
&
aPrincipalInfo
)
;
Result
<
mozilla
:
:
ipc
:
:
PrincipalInfo
nsresult
>
PrincipalMetadataToPrincipalInfo
(
const
PrincipalMetadata
&
aPrincipalMetadata
)
;
nsAutoCString
GetGroupFromValidatedPrincipalInfo
(
const
mozilla
:
:
ipc
:
:
PrincipalInfo
&
aPrincipalInfo
)
;
nsAutoCString
GetOriginFromValidatedPrincipalInfo
(
const
mozilla
:
:
ipc
:
:
PrincipalInfo
&
aPrincipalInfo
)
;
Result
<
PrincipalMetadata
nsresult
>
GetInfoFromPrincipal
(
nsIPrincipal
*
aPrincipal
)
;
Result
<
PrincipalMetadata
nsresult
>
GetInfoFromWindow
(
nsPIDOMWindowOuter
*
aWindow
)
;
Result
<
nsAutoCString
nsresult
>
GetOriginFromPrincipal
(
nsIPrincipal
*
aPrincipal
)
;
Result
<
nsAutoCString
nsresult
>
GetOriginFromWindow
(
nsPIDOMWindowOuter
*
aWindow
)
;
nsLiteralCString
GetGroupForChrome
(
)
;
nsLiteralCString
GetOriginForChrome
(
)
;
PrincipalMetadata
GetInfoForChrome
(
)
;
}
#
endif
