#
ifndef
mozilla_dom_quota_QuotaManagerService_h
#
define
mozilla_dom_quota_QuotaManagerService_h
#
include
<
cstdint
>
#
include
"
ErrorList
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
HalBatteryInformation
.
h
"
#
include
"
mozilla
/
dom
/
ipc
/
IdType
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
nsIQuotaManagerService
.
h
"
#
include
"
nsISupports
.
h
"
#
define
QUOTAMANAGER_SERVICE_CONTRACTID
\
"
mozilla
.
org
/
dom
/
quota
-
manager
-
service
;
1
"
class
nsIPrincipal
;
class
nsIQuotaRequest
;
class
nsIQuotaUsageCallback
;
class
nsIQuotaUsageRequest
;
namespace
mozilla
{
namespace
ipc
{
class
PBackgroundChild
;
}
namespace
hal
{
class
BatteryInformation
;
}
namespace
dom
{
namespace
quota
{
class
QuotaChild
;
class
QuotaManager
;
class
QuotaManagerService
final
:
public
nsIQuotaManagerService
public
nsIObserver
public
hal
:
:
BatteryObserver
{
typedef
mozilla
:
:
ipc
:
:
PBackgroundChild
PBackgroundChild
;
class
BackgroundCreateCallback
;
class
PendingRequestInfo
;
class
UsageRequestInfo
;
class
RequestInfo
;
class
IdleMaintenanceInfo
;
QuotaChild
*
mBackgroundActor
;
bool
mBackgroundActorFailed
;
bool
mIdleObserverRegistered
;
public
:
static
QuotaManagerService
*
GetOrCreate
(
)
;
static
QuotaManagerService
*
Get
(
)
;
static
already_AddRefed
<
QuotaManagerService
>
FactoryCreate
(
)
;
void
ClearBackgroundActor
(
)
;
void
AbortOperationsForProcess
(
ContentParentId
aContentParentId
)
;
private
:
QuotaManagerService
(
)
;
~
QuotaManagerService
(
)
;
nsresult
Init
(
)
;
void
Destroy
(
)
;
nsresult
EnsureBackgroundActor
(
)
;
nsresult
InitiateRequest
(
PendingRequestInfo
&
aInfo
)
;
void
PerformIdleMaintenance
(
)
;
void
RemoveIdleObserver
(
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSIQUOTAMANAGERSERVICE
NS_DECL_NSIOBSERVER
void
Notify
(
const
hal
:
:
BatteryInformation
&
aBatteryInfo
)
override
;
}
;
}
}
}
#
endif
