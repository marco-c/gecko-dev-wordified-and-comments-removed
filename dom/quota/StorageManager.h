#
ifndef
mozilla_dom_StorageManager_h
#
define
mozilla_dom_StorageManager_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsWrapperCache
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Promise
;
struct
StorageEstimate
;
class
StorageManager
final
:
public
nsISupports
public
nsWrapperCache
{
nsCOMPtr
<
nsIGlobalObject
>
mOwner
;
public
:
static
bool
PrefEnabled
(
JSContext
*
aCx
JSObject
*
aObj
)
;
explicit
StorageManager
(
nsIGlobalObject
*
aGlobal
)
;
nsIGlobalObject
*
GetParentObject
(
)
const
{
return
mOwner
;
}
already_AddRefed
<
Promise
>
Persisted
(
ErrorResult
&
aRv
)
;
already_AddRefed
<
Promise
>
Persist
(
ErrorResult
&
aRv
)
;
already_AddRefed
<
Promise
>
Estimate
(
ErrorResult
&
aRv
)
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
StorageManager
)
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
private
:
~
StorageManager
(
)
;
}
;
}
}
#
endif
