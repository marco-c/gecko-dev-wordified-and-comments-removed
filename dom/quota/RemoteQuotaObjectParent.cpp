#
include
"
RemoteQuotaObjectParent
.
h
"
#
include
"
CanonicalQuotaObject
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
RemoteQuotaObjectParentTracker
.
h
"
#
include
"
mozilla
/
ipc
/
BackgroundParent
.
h
"
namespace
mozilla
:
:
dom
:
:
quota
{
RemoteQuotaObjectParent
:
:
RemoteQuotaObjectParent
(
RefPtr
<
CanonicalQuotaObject
>
aCanonicalQuotaObject
nsCOMPtr
<
RemoteQuotaObjectParentTracker
>
aTracker
)
:
mCanonicalQuotaObject
(
std
:
:
move
(
aCanonicalQuotaObject
)
)
mTracker
(
std
:
:
move
(
aTracker
)
)
{
}
RemoteQuotaObjectParent
:
:
~
RemoteQuotaObjectParent
(
)
{
MOZ_ASSERT
(
!
CanSend
(
)
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
RemoteQuotaObjectParent
:
:
RecvMaybeUpdateSize
(
int64_t
aSize
bool
aTruncate
bool
*
aResult
)
{
MOZ_ASSERT
(
!
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
!
mozilla
:
:
ipc
:
:
IsOnBackgroundThread
(
)
)
;
MOZ_ASSERT
(
!
GetCurrentThreadWorkerPrivate
(
)
)
;
*
aResult
=
mCanonicalQuotaObject
-
>
MaybeUpdateSize
(
aSize
aTruncate
)
;
return
IPC_OK
(
)
;
}
void
RemoteQuotaObjectParent
:
:
ActorDestroy
(
ActorDestroyReason
aWhy
)
{
mCanonicalQuotaObject
=
nullptr
;
if
(
mTracker
)
{
mTracker
-
>
UnregisterRemoteQuotaObjectParent
(
WrapNotNullUnchecked
(
this
)
)
;
}
}
}
