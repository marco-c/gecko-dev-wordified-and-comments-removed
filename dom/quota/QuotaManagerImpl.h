#
ifndef
DOM_QUOTA_QUOTAMANAGERIMPL_H_
#
define
DOM_QUOTA_QUOTAMANAGERIMPL_H_
#
include
"
GroupInfo
.
h
"
#
include
"
GroupInfoPair
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
QuotaManager
.
h
"
#
include
"
OriginInfo
.
h
"
namespace
mozilla
:
:
dom
:
:
quota
{
template
<
typename
P
>
void
QuotaManager
:
:
CollectPendingOriginsForListing
(
P
aPredicate
)
{
MutexAutoLock
lock
(
mQuotaMutex
)
;
for
(
const
auto
&
entry
:
mGroupInfoPairs
)
{
const
auto
&
pair
=
entry
.
GetData
(
)
;
MOZ_ASSERT
(
!
entry
.
GetKey
(
)
.
IsEmpty
(
)
)
;
MOZ_ASSERT
(
pair
)
;
RefPtr
<
GroupInfo
>
groupInfo
=
pair
-
>
LockedGetGroupInfo
(
PERSISTENCE_TYPE_DEFAULT
)
;
if
(
groupInfo
)
{
for
(
const
auto
&
originInfo
:
groupInfo
-
>
mOriginInfos
)
{
if
(
!
originInfo
-
>
mDirectoryExists
)
{
aPredicate
(
originInfo
)
;
}
}
}
}
}
template
<
typename
F
>
void
QuotaManager
:
:
MaybeRecordQuotaManagerShutdownStepWith
(
F
&
&
aFunc
)
{
if
(
IsShuttingDown
(
)
)
{
RecordShutdownStep
(
Nothing
{
}
std
:
:
forward
<
F
>
(
aFunc
)
(
)
)
;
}
}
}
#
endif
