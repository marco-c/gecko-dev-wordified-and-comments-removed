#
ifndef
mozilla_dom_WebAuthentication_h
#
define
mozilla_dom_WebAuthentication_h
#
include
"
mozilla
/
dom
/
WebAuthenticationBinding
.
h
"
namespace
mozilla
{
namespace
dom
{
struct
Account
;
class
ArrayBufferViewOrArrayBuffer
;
struct
AssertionOptions
;
struct
ScopedCredentialOptions
;
struct
ScopedCredentialParameters
;
}
}
namespace
mozilla
{
namespace
dom
{
class
WebAuthentication
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
WebAuthentication
)
explicit
WebAuthentication
(
nsPIDOMWindowInner
*
aParent
)
;
nsPIDOMWindowInner
*
GetParentObject
(
)
const
{
return
mParent
;
}
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
already_AddRefed
<
Promise
>
MakeCredential
(
JSContext
*
aCx
const
Account
&
accountInformation
const
Sequence
<
ScopedCredentialParameters
>
&
cryptoParameters
const
ArrayBufferViewOrArrayBuffer
&
attestationChallenge
const
ScopedCredentialOptions
&
options
)
;
already_AddRefed
<
Promise
>
GetAssertion
(
const
ArrayBufferViewOrArrayBuffer
&
assertionChallenge
const
AssertionOptions
&
options
)
;
private
:
~
WebAuthentication
(
)
;
already_AddRefed
<
Promise
>
CreatePromise
(
)
;
nsresult
GetOrigin
(
nsAString
&
aOrigin
)
;
nsCOMPtr
<
nsPIDOMWindowInner
>
mParent
;
}
;
}
}
#
endif
