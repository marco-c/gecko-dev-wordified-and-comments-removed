#
include
"
nsISupports
.
idl
"
#
include
"
nsIU2FTokenManager
.
idl
"
typedef
long
COSEAlgorithmIdentifier
;
[
uuid
(
2fc8febe
-
a277
-
11ed
-
bda2
-
8f6495a5e75c
)
]
interface
nsICtapRegisterArgs
:
nsISupports
{
readonly
attribute
AString
origin
;
readonly
attribute
Array
<
octet
>
clientDataHash
;
readonly
attribute
AString
rpId
;
[
must_use
]
readonly
attribute
AString
rpName
;
[
must_use
]
readonly
attribute
Array
<
octet
>
userId
;
[
must_use
]
readonly
attribute
AString
userName
;
[
must_use
]
readonly
attribute
AString
userDisplayName
;
[
must_use
]
readonly
attribute
Array
<
COSEAlgorithmIdentifier
>
coseAlgs
;
readonly
attribute
Array
<
Array
<
octet
>
>
excludeList
;
[
must_use
]
readonly
attribute
bool
hmacCreateSecret
;
[
must_use
]
readonly
attribute
bool
requireResidentKey
;
[
must_use
]
readonly
attribute
AString
userVerification
;
[
must_use
]
readonly
attribute
AString
authenticatorAttachment
;
readonly
attribute
uint32_t
timeoutMS
;
[
must_use
]
readonly
attribute
AString
attestationConveyancePreference
;
}
;
[
uuid
(
2e621cf4
-
a277
-
11ed
-
ae00
-
bf41a54ef553
)
]
interface
nsICtapSignArgs
:
nsISupports
{
readonly
attribute
AString
origin
;
readonly
attribute
AString
rpId
;
readonly
attribute
Array
<
octet
>
clientDataHash
;
readonly
attribute
Array
<
Array
<
octet
>
>
allowList
;
[
must_use
]
readonly
attribute
bool
hmacCreateSecret
;
[
must_use
]
readonly
attribute
AString
appId
;
[
must_use
]
readonly
attribute
Array
<
octet
>
appIdHash
;
[
must_use
]
readonly
attribute
AString
userVerification
;
readonly
attribute
unsigned
long
timeoutMS
;
}
;
[
uuid
(
0567c384
-
a728
-
11ed
-
85f7
-
030324a370f0
)
]
interface
nsICtapRegisterResult
:
nsISupports
{
readonly
attribute
nsresult
status
;
readonly
attribute
Array
<
octet
>
attestationObject
;
readonly
attribute
Array
<
octet
>
credentialId
;
}
;
[
uuid
(
05fff816
-
a728
-
11ed
-
b9ac
-
ff38cc2c8c28
)
]
interface
nsICtapSignResult
:
nsISupports
{
readonly
attribute
nsresult
status
;
readonly
attribute
Array
<
octet
>
credentialId
;
readonly
attribute
Array
<
octet
>
authenticatorData
;
readonly
attribute
Array
<
octet
>
signature
;
[
must_use
]
readonly
attribute
Array
<
octet
>
userHandle
;
[
must_use
]
readonly
attribute
ACString
userName
;
readonly
attribute
Array
<
octet
>
rpIdHash
;
}
;
[
scriptable
uuid
(
c0744f48
-
ad64
-
11ed
-
b515
-
cf5149f4d6a6
)
]
interface
nsIWebAuthnController
:
nsIU2FTokenManager
{
void
pinCallback
(
in
uint64_t
aTransactionId
in
ACString
aPin
)
;
void
signatureSelectionCallback
(
in
uint64_t
aTransactionId
in
uint64_t
aIndex
)
;
[
noscript
]
void
sendPromptNotificationPreformatted
(
in
uint64_t
aTransactionId
in
ACString
aJSON
)
;
[
noscript
]
void
finishRegister
(
in
uint64_t
aTransactionId
in
nsICtapRegisterResult
aResult
)
;
[
noscript
]
void
finishSign
(
in
uint64_t
aTransactionId
in
Array
<
nsICtapSignResult
>
aResult
)
;
}
;
[
uuid
(
e236a9b4
-
a26f
-
11ed
-
b6cc
-
07a9834e19b1
)
]
interface
nsIWebAuthnTransport
:
nsISupports
{
attribute
nsIWebAuthnController
controller
;
void
makeCredential
(
in
uint64_t
aTransactionId
in
uint64_t
browsingContextId
in
nsICtapRegisterArgs
args
)
;
void
getAssertion
(
in
uint64_t
aTransactionId
in
uint64_t
browsingContextId
in
nsICtapSignArgs
args
)
;
[
noscript
]
void
pinCallback
(
in
uint64_t
aTransactionId
in
ACString
aPin
)
;
[
noscript
]
void
cancel
(
)
;
}
;
