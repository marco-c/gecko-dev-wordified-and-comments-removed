#
ifndef
mozilla_dom_WebAuthnManagerBase_h
#
define
mozilla_dom_WebAuthnManagerBase_h
#
include
"
mozilla
/
dom
/
PWebAuthnTransaction
.
h
"
#
include
"
nsIDOMEventListener
.
h
"
namespace
mozilla
{
namespace
dom
{
class
WebAuthnTransactionChild
;
class
WebAuthnManagerBase
:
public
nsIDOMEventListener
{
public
:
NS_DECL_NSIDOMEVENTLISTENER
explicit
WebAuthnManagerBase
(
nsPIDOMWindowInner
*
aParent
)
;
virtual
void
FinishMakeCredential
(
const
uint64_t
&
aTransactionId
const
WebAuthnMakeCredentialResult
&
aResult
)
=
0
;
virtual
void
FinishGetAssertion
(
const
uint64_t
&
aTransactionId
const
WebAuthnGetAssertionResult
&
aResult
)
=
0
;
virtual
void
RequestAborted
(
const
uint64_t
&
aTransactionId
const
nsresult
&
aError
)
=
0
;
void
ActorDestroyed
(
)
;
protected
:
~
WebAuthnManagerBase
(
)
;
virtual
void
CancelTransaction
(
const
nsresult
&
aError
)
=
0
;
void
ListenForVisibilityEvents
(
)
;
void
StopListeningForVisibilityEvents
(
)
;
bool
MaybeCreateBackgroundActor
(
)
;
nsCOMPtr
<
nsPIDOMWindowInner
>
mParent
;
RefPtr
<
WebAuthnTransactionChild
>
mChild
;
}
;
}
}
#
endif
