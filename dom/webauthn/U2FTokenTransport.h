#
ifndef
mozilla_dom_U2FTokenTransport_h
#
define
mozilla_dom_U2FTokenTransport_h
#
include
"
mozilla
/
dom
/
PWebAuthnTransaction
.
h
"
namespace
mozilla
{
namespace
dom
{
typedef
MozPromise
<
nsresult
nsresult
false
>
ResultPromise
;
class
U2FTokenTransport
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
U2FTokenTransport
)
;
U2FTokenTransport
(
)
{
}
virtual
RefPtr
<
ResultPromise
>
Register
(
const
nsTArray
<
WebAuthnScopedCredentialDescriptor
>
&
aDescriptors
const
nsTArray
<
uint8_t
>
&
aApplication
const
nsTArray
<
uint8_t
>
&
aChallenge
nsTArray
<
uint8_t
>
&
aRegistration
)
=
0
;
virtual
RefPtr
<
ResultPromise
>
Sign
(
const
nsTArray
<
WebAuthnScopedCredentialDescriptor
>
&
aDescriptors
const
nsTArray
<
uint8_t
>
&
aApplication
const
nsTArray
<
uint8_t
>
&
aChallenge
nsTArray
<
uint8_t
>
&
aKeyHandle
nsTArray
<
uint8_t
>
&
aSignature
)
=
0
;
virtual
void
Cancel
(
)
=
0
;
protected
:
virtual
~
U2FTokenTransport
(
)
=
default
;
}
;
}
}
#
endif
