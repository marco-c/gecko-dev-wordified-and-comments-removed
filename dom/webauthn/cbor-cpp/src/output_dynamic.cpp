#
include
"
output_dynamic
.
h
"
#
include
<
string
.
h
>
#
include
<
stdlib
.
h
>
using
namespace
cbor
;
void
output_dynamic
:
:
init
(
unsigned
int
initalCapacity
)
{
this
-
>
_capacity
=
initalCapacity
;
this
-
>
_buffer
=
new
unsigned
char
[
initalCapacity
]
;
this
-
>
_offset
=
0
;
}
output_dynamic
:
:
output_dynamic
(
)
{
init
(
256
)
;
}
output_dynamic
:
:
output_dynamic
(
unsigned
int
inital_capacity
)
{
init
(
inital_capacity
)
;
}
output_dynamic
:
:
~
output_dynamic
(
)
{
delete
_buffer
;
}
unsigned
char
*
output_dynamic
:
:
data
(
)
{
return
_buffer
;
}
unsigned
int
output_dynamic
:
:
size
(
)
{
return
_offset
;
}
void
output_dynamic
:
:
put_byte
(
unsigned
char
value
)
{
if
(
_offset
<
_capacity
)
{
_buffer
[
_offset
+
+
]
=
value
;
}
else
{
_capacity
*
=
2
;
_buffer
=
(
unsigned
char
*
)
realloc
(
_buffer
_capacity
)
;
_buffer
[
_offset
+
+
]
=
value
;
}
}
void
output_dynamic
:
:
put_bytes
(
const
unsigned
char
*
data
int
size
)
{
while
(
_offset
+
size
>
_capacity
)
{
_capacity
*
=
2
;
_buffer
=
(
unsigned
char
*
)
realloc
(
_buffer
_capacity
)
;
}
memcpy
(
_buffer
+
_offset
data
size
)
;
_offset
+
=
size
;
}
