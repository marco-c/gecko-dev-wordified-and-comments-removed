#
ifndef
mozilla_dom_WebAuthnArgs_H_
#
define
mozilla_dom_WebAuthnArgs_H_
#
include
"
mozilla
/
dom
/
WebAuthnTransactionChild
.
h
"
#
include
"
mozilla
/
ipc
/
BackgroundParent
.
h
"
#
include
"
nsIWebAuthnArgs
.
h
"
namespace
mozilla
:
:
dom
{
class
WebAuthnRegisterArgs
final
:
public
nsIWebAuthnRegisterArgs
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIWEBAUTHNREGISTERARGS
explicit
WebAuthnRegisterArgs
(
const
WebAuthnMakeCredentialInfo
&
aInfo
)
:
mInfo
(
aInfo
)
mCredProps
(
false
)
mHmacCreateSecret
(
false
)
mMinPinLength
(
false
)
{
for
(
const
WebAuthnExtension
&
ext
:
mInfo
.
Extensions
(
)
)
{
switch
(
ext
.
type
(
)
)
{
case
WebAuthnExtension
:
:
TWebAuthnExtensionCredProps
:
mCredProps
=
ext
.
get_WebAuthnExtensionCredProps
(
)
.
credProps
(
)
;
break
;
case
WebAuthnExtension
:
:
TWebAuthnExtensionHmacSecret
:
mHmacCreateSecret
=
ext
.
get_WebAuthnExtensionHmacSecret
(
)
.
hmacCreateSecret
(
)
;
break
;
case
WebAuthnExtension
:
:
TWebAuthnExtensionMinPinLength
:
mMinPinLength
=
ext
.
get_WebAuthnExtensionMinPinLength
(
)
.
minPinLength
(
)
;
break
;
case
WebAuthnExtension
:
:
TWebAuthnExtensionAppId
:
break
;
case
WebAuthnExtension
:
:
T__None
:
break
;
}
}
}
private
:
~
WebAuthnRegisterArgs
(
)
=
default
;
const
WebAuthnMakeCredentialInfo
mInfo
;
bool
mCredProps
;
bool
mHmacCreateSecret
;
bool
mMinPinLength
;
}
;
class
WebAuthnSignArgs
final
:
public
nsIWebAuthnSignArgs
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIWEBAUTHNSIGNARGS
explicit
WebAuthnSignArgs
(
const
WebAuthnGetAssertionInfo
&
aInfo
)
:
mInfo
(
aInfo
)
{
}
private
:
~
WebAuthnSignArgs
(
)
=
default
;
const
WebAuthnGetAssertionInfo
mInfo
;
}
;
}
#
endif
