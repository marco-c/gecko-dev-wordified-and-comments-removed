#
ifndef
mozilla_dom_worklet_WorkletThread_h
#
define
mozilla_dom_worklet_WorkletThread_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
CondVar
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsThread
.
h
"
class
nsIRunnable
;
namespace
mozilla
{
namespace
dom
{
class
WorkletThread
final
:
public
nsThread
{
public
:
NS_DECL_ISUPPORTS_INHERITED
static
already_AddRefed
<
WorkletThread
>
Create
(
)
;
static
WorkletThread
*
Get
(
)
;
static
bool
IsOnWorkletThread
(
)
;
static
void
AssertIsOnWorkletThread
(
)
;
static
JSPrincipals
*
GetWorkerPrincipal
(
)
;
JSContext
*
GetJSContext
(
)
const
;
nsresult
DispatchRunnable
(
already_AddRefed
<
nsIRunnable
>
aRunnable
)
;
void
Terminate
(
)
;
private
:
WorkletThread
(
)
;
~
WorkletThread
(
)
;
void
RunEventLoop
(
JSRuntime
*
aParentRuntime
)
;
class
PrimaryRunnable
;
void
TerminateInternal
(
)
;
class
TerminateRunnable
;
NS_IMETHOD
Dispatch
(
already_AddRefed
<
nsIRunnable
>
aRunnable
uint32_t
aFlags
)
override
;
NS_IMETHOD
DispatchFromScript
(
nsIRunnable
*
aRunnable
uint32_t
aFlags
)
override
;
NS_IMETHOD
DelayedDispatch
(
already_AddRefed
<
nsIRunnable
>
uint32_t
)
override
;
JSContext
*
mJSContext
;
}
;
}
}
#
endif
