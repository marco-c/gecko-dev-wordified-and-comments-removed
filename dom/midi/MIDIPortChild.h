#
ifndef
mozilla_dom_MIDIPortChild_h
#
define
mozilla_dom_MIDIPortChild_h
#
include
"
mozilla
/
dom
/
MIDIPortInterface
.
h
"
#
include
"
mozilla
/
dom
/
PMIDIPortChild
.
h
"
namespace
mozilla
:
:
dom
{
class
MIDIPort
;
class
MIDIPortInfo
;
class
MIDIPortChild
final
:
public
PMIDIPortChild
public
MIDIPortInterface
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
MIDIPortChild
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvReceive
(
nsTArray
<
MIDIMessage
>
&
&
aMsgs
)
;
virtual
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvUpdateStatus
(
const
uint32_t
&
aDeviceState
const
uint32_t
&
aConnectionState
)
;
MIDIPortChild
(
const
MIDIPortInfo
&
aPortInfo
bool
aSysexEnabled
MIDIPort
*
aPort
)
;
nsresult
GenerateStableId
(
const
nsACString
&
aOrigin
)
;
const
nsString
&
StableId
(
)
{
return
mStableId
;
}
;
void
SetActorAlive
(
)
;
void
Teardown
(
)
;
void
DetachOwner
(
)
{
mDOMPort
=
nullptr
;
}
private
:
~
MIDIPortChild
(
)
=
default
;
MIDIPort
*
mDOMPort
;
nsString
mStableId
;
bool
mActorWasAlive
;
}
;
}
#
endif
