IPDL_SOURCES
+
=
[
"
MIDITypes
.
ipdlh
"
"
PMIDIManager
.
ipdl
"
"
PMIDIPort
.
ipdl
"
]
EXPORTS
.
mozilla
.
dom
+
=
[
"
MIDIAccess
.
h
"
"
MIDIAccessManager
.
h
"
"
MIDIInput
.
h
"
"
MIDIInputMap
.
h
"
"
MIDIManagerChild
.
h
"
"
MIDIManagerParent
.
h
"
"
MIDIMessageEvent
.
h
"
"
MIDIMessageQueue
.
h
"
"
MIDIOutput
.
h
"
"
MIDIOutputMap
.
h
"
"
MIDIPermissionRequest
.
h
"
"
MIDIPlatformRunnables
.
h
"
"
MIDIPlatformService
.
h
"
"
MIDIPort
.
h
"
"
MIDIPortChild
.
h
"
"
MIDIPortInterface
.
h
"
"
MIDIPortParent
.
h
"
"
MIDIUtils
.
h
"
]
UNIFIED_SOURCES
+
=
[
"
MIDIAccess
.
cpp
"
"
MIDIAccessManager
.
cpp
"
"
MIDIInput
.
cpp
"
"
MIDIInputMap
.
cpp
"
"
MIDILog
.
cpp
"
"
MIDIManagerChild
.
cpp
"
"
MIDIManagerParent
.
cpp
"
"
MIDIMessageEvent
.
cpp
"
"
MIDIMessageQueue
.
cpp
"
"
MIDIOutput
.
cpp
"
"
MIDIOutputMap
.
cpp
"
"
MIDIPermissionRequest
.
cpp
"
"
MIDIPlatformRunnables
.
cpp
"
"
MIDIPlatformService
.
cpp
"
"
MIDIPort
.
cpp
"
"
MIDIPortChild
.
cpp
"
"
MIDIPortInterface
.
cpp
"
"
MIDIPortParent
.
cpp
"
"
MIDIUtils
.
cpp
"
"
TestMIDIPlatformService
.
cpp
"
]
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
if
CONFIG
[
"
MOZ_WEBMIDI_MIDIR_IMPL
"
]
:
DEFINES
[
"
MOZ_WEBMIDI_MIDIR_IMPL
"
]
=
True
DIRS
+
=
[
"
midir_impl
"
]
UNIFIED_SOURCES
+
=
[
"
midirMIDIPlatformService
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
Linux
"
:
OS_LIBS
+
=
[
"
asound
"
]
UNIFIED_SOURCES
+
=
[
"
AlsaCompatibility
.
cpp
"
]
FINAL_LIBRARY
=
"
xul
"
LOCAL_INCLUDES
+
=
[
"
/
dom
/
base
"
]
MOCHITEST_MANIFESTS
+
=
[
"
tests
/
mochitest
.
toml
"
]
BROWSER_CHROME_MANIFESTS
+
=
[
"
tests
/
browser
.
toml
"
]
