#
ifndef
mozilla_dom_MIDIMessageEvent_h
#
define
mozilla_dom_MIDIMessageEvent_h
#
include
<
cstdint
>
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
TimeStamp
.
h
"
#
include
"
mozilla
/
dom
/
Event
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsStringFwd
.
h
"
#
include
"
nsTArray
.
h
"
struct
JSContext
;
namespace
mozilla
{
namespace
dom
{
struct
MIDIMessageEventInit
;
class
MIDIMessageEvent
final
:
public
Event
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED
(
MIDIMessageEvent
Event
)
protected
:
explicit
MIDIMessageEvent
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
)
;
JS
:
:
Heap
<
JSObject
*
>
mData
;
public
:
virtual
MIDIMessageEvent
*
AsMIDIMessageEvent
(
)
;
virtual
JSObject
*
WrapObjectInternal
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
MIDIMessageEvent
>
Constructor
(
EventTarget
*
aOwner
const
class
TimeStamp
&
aReceivedTime
const
nsTArray
<
uint8_t
>
&
aData
)
;
static
already_AddRefed
<
MIDIMessageEvent
>
Constructor
(
const
GlobalObject
&
aGlobal
const
nsAString
&
aType
const
MIDIMessageEventInit
&
aEventInitDict
ErrorResult
&
aRv
)
;
void
GetData
(
JSContext
*
cx
JS
:
:
MutableHandle
<
JSObject
*
>
aData
ErrorResult
&
aRv
)
;
private
:
~
MIDIMessageEvent
(
)
;
nsTArray
<
uint8_t
>
mRawData
;
}
;
}
}
#
endif
