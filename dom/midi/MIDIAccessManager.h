#
ifndef
mozilla_dom_MIDIAccessManager_h
#
define
mozilla_dom_MIDIAccessManager_h
#
include
"
nsPIDOMWindow
.
h
"
#
include
"
mozilla
/
dom
/
MIDITypes
.
h
"
#
include
"
mozilla
/
Observer
.
h
"
namespace
mozilla
{
namespace
dom
{
class
MIDIAccess
;
class
MIDIManagerChild
;
struct
MIDIOptions
;
class
MIDIPortChangeEvent
;
class
MIDIPortInfo
;
class
Promise
;
class
MIDIAccessManager
final
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
MIDIAccessManager
)
;
already_AddRefed
<
Promise
>
RequestMIDIAccess
(
nsPIDOMWindowInner
*
aWindow
const
MIDIOptions
&
aOptions
ErrorResult
&
aRv
)
;
void
CreateMIDIAccess
(
nsPIDOMWindowInner
*
aWindow
bool
aNeedsSysex
Promise
*
aPromise
)
;
static
MIDIAccessManager
*
Get
(
)
;
static
bool
IsRunning
(
)
;
void
Update
(
const
MIDIPortList
&
aEvent
)
;
bool
AddObserver
(
Observer
<
MIDIPortList
>
*
aObserver
)
;
void
RemoveObserver
(
Observer
<
MIDIPortList
>
*
aObserver
)
;
private
:
MIDIAccessManager
(
)
;
~
MIDIAccessManager
(
)
;
bool
mHasPortList
;
MIDIPortList
mPortList
;
nsTArray
<
RefPtr
<
MIDIAccess
>
>
mAccessHolder
;
ObserverList
<
MIDIPortList
>
mChangeObservers
;
RefPtr
<
MIDIManagerChild
>
mChild
;
}
;
}
}
#
endif
