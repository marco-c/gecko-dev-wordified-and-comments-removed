#
ifndef
mozilla_dom_MIDIPortParent_h
#
define
mozilla_dom_MIDIPortParent_h
#
include
"
mozilla
/
dom
/
PMIDIPortParent
.
h
"
#
include
"
mozilla
/
dom
/
MIDIPortBinding
.
h
"
#
include
"
mozilla
/
dom
/
MIDIPortInterface
.
h
"
namespace
mozilla
{
namespace
dom
{
class
MIDIPortParent
final
:
public
PMIDIPortParent
public
MIDIPortInterface
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
MIDIPortParent
)
;
void
ActorDestroy
(
ActorDestroyReason
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvSend
(
nsTArray
<
MIDIMessage
>
&
&
aMsg
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvOpen
(
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvClose
(
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvClear
(
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvShutdown
(
)
override
;
MOZ_IMPLICIT
MIDIPortParent
(
const
MIDIPortInfo
&
aPortInfo
const
bool
aSysexEnabled
)
;
bool
SendUpdateStatus
(
const
MIDIPortDeviceState
&
aState
const
MIDIPortConnectionState
&
aConnection
)
;
uint32_t
GetInternalId
(
)
const
{
return
mInternalId
;
}
void
Teardown
(
)
;
protected
:
~
MIDIPortParent
(
)
=
default
;
nsTArray
<
MIDIMessage
>
mMessageQueue
;
const
uint32_t
mInternalId
;
}
;
}
}
#
endif
