#
ifndef
mozilla_dom_PrioEncoder_h
#
define
mozilla_dom_PrioEncoder_h
#
include
"
mozilla
/
dom
/
PrioEncoderBinding
.
h
"
#
include
"
mozilla
/
dom
/
RootedDictionary
.
h
"
class
nsIGlobalObject
;
using
SECKEYPublicKey
=
struct
SECKEYPublicKeyStr
;
using
PublicKey
=
SECKEYPublicKey
*
;
namespace
mozilla
{
namespace
dom
{
class
PrioEncoder
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
PrioEncoder
)
static
nsresult
EncodeNative
(
const
nsCString
&
aBatchID
const
nsTArray
<
bool
>
&
aData
nsCString
&
aResult
nsCString
&
bResult
)
;
static
void
Encode
(
GlobalObject
&
aGlobal
const
nsCString
&
aBatchID
const
PrioParams
&
aPrioParams
RootedDictionary
<
PrioEncodedData
>
&
aData
ErrorResult
&
aRv
)
;
const
static
uint32_t
gNumBooleans
=
2046
;
static
nsresult
SetKeys
(
const
char
*
aKeyA
=
nullptr
const
char
*
aKeyB
=
nullptr
)
;
private
:
PrioEncoder
(
)
;
~
PrioEncoder
(
)
;
static
PublicKey
sPublicKeyA
;
static
PublicKey
sPublicKeyB
;
static
StaticRefPtr
<
PrioEncoder
>
sSingleton
;
static
bool
IsValidHexPublicKey
(
mozilla
:
:
Span
<
const
char
>
)
;
static
nsresult
LazyInitSingleton
(
)
;
}
;
}
}
#
endif
