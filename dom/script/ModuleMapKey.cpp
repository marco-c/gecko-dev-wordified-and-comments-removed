#
include
"
ModuleMapKey
.
h
"
using
namespace
mozilla
:
:
dom
;
ModuleMapKey
:
:
ModuleMapKey
(
const
nsIURI
*
aURI
nsIGlobalObject
*
aWebExtGlobal
)
:
nsURIHashKey
(
aURI
)
mWebExtGlobal
(
aWebExtGlobal
)
{
}
ModuleMapKey
:
:
ModuleMapKey
(
const
ModuleMapKey
*
aKey
)
:
nsURIHashKey
(
aKey
-
>
mKey
)
{
*
this
=
*
aKey
;
}
ModuleMapKey
:
:
ModuleMapKey
(
ModuleMapKey
&
&
aToMove
)
noexcept
:
nsURIHashKey
(
std
:
:
move
(
aToMove
)
)
{
mWebExtGlobal
=
std
:
:
move
(
aToMove
.
mWebExtGlobal
)
;
}
bool
ModuleMapKey
:
:
KeyEquals
(
KeyTypePointer
aOther
)
const
{
if
(
mWebExtGlobal
!
=
aOther
-
>
mWebExtGlobal
)
{
return
false
;
}
return
nsURIHashKey
:
:
KeyEquals
(
static_cast
<
const
nsURIHashKey
*
>
(
aOther
)
-
>
GetKey
(
)
)
;
}
PLDHashNumber
ModuleMapKey
:
:
HashKey
(
KeyTypePointer
aKey
)
{
PLDHashNumber
hash
=
nsURIHashKey
:
:
HashKey
(
aKey
-
>
mKey
)
;
hash
=
AddToHash
(
hash
reinterpret_cast
<
uintptr_t
>
(
aKey
-
>
mWebExtGlobal
.
get
(
)
)
)
;
return
hash
;
}
