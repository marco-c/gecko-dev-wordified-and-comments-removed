#
ifndef
dom_ipc_MemMapSnapshot_h
#
define
dom_ipc_MemMapSnapshot_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
RangedPtr
.
h
"
#
include
"
mozilla
/
Result
.
h
"
#
include
"
base
/
shared_memory
.
h
"
namespace
mozilla
{
namespace
loader
{
class
AutoMemMap
;
}
namespace
ipc
{
class
MOZ_RAII
MemMapSnapshot
{
public
:
Result
<
Ok
nsresult
>
Init
(
size_t
aSize
)
;
Result
<
Ok
nsresult
>
Finalize
(
loader
:
:
AutoMemMap
&
aMap
)
;
template
<
typename
T
>
RangedPtr
<
T
>
Get
(
)
{
MOZ_ASSERT
(
mInitialized
)
;
return
{
static_cast
<
T
*
>
(
mMem
.
memory
(
)
)
mMem
.
max_size
(
)
/
sizeof
(
T
)
}
;
}
private
:
base
:
:
SharedMemory
mMem
;
bool
mInitialized
=
false
;
}
;
}
}
#
endif
