#
include
"
AppProcessChecker
.
h
"
#
include
"
nsIPermissionManager
.
h
"
namespace
mozilla
{
namespace
dom
{
class
PContentParent
;
}
}
class
nsIPrincipal
;
namespace
mozilla
{
#
if
DEBUG
#
define
LOG
(
.
.
.
)
printf_stderr
(
__VA_ARGS__
)
#
else
#
define
LOG
(
.
.
.
)
#
endif
bool
AssertAppProcess
(
mozilla
:
:
dom
:
:
PBrowserParent
*
aActor
AssertAppProcessType
aType
const
char
*
aCapability
)
{
return
true
;
}
bool
AssertAppStatus
(
mozilla
:
:
dom
:
:
PBrowserParent
*
aActor
unsigned
short
aStatus
)
{
return
true
;
}
bool
AssertAppProcess
(
const
mozilla
:
:
dom
:
:
TabContext
&
aContext
AssertAppProcessType
aType
const
char
*
aCapability
)
{
return
true
;
}
bool
AssertAppStatus
(
const
mozilla
:
:
dom
:
:
TabContext
&
aContext
unsigned
short
aStatus
)
{
return
true
;
}
bool
AssertAppProcess
(
mozilla
:
:
dom
:
:
PContentParent
*
aActor
AssertAppProcessType
aType
const
char
*
aCapability
)
{
return
true
;
}
bool
AssertAppStatus
(
mozilla
:
:
dom
:
:
PContentParent
*
aActor
unsigned
short
aStatus
)
{
return
true
;
}
bool
AssertAppProcess
(
mozilla
:
:
hal_sandbox
:
:
PHalParent
*
aActor
AssertAppProcessType
aType
const
char
*
aCapability
)
{
return
true
;
}
bool
AssertAppPrincipal
(
mozilla
:
:
dom
:
:
PContentParent
*
aActor
nsIPrincipal
*
aPrincipal
)
{
return
true
;
}
uint32_t
CheckPermission
(
mozilla
:
:
dom
:
:
PContentParent
*
aActor
nsIPrincipal
*
aPrincipal
const
char
*
aPermission
)
{
return
nsIPermissionManager
:
:
ALLOW_ACTION
;
}
}
