#
include
"
ContentProcessHost
.
h
"
namespace
mozilla
{
namespace
dom
{
using
namespace
ipc
;
ContentProcessHost
:
:
ContentProcessHost
(
ContentParent
*
aContentParent
ChildPrivileges
aPrivileges
)
:
GeckoChildProcessHost
(
GeckoProcessType_Content
aPrivileges
)
mHasLaunched
(
false
)
mContentParent
(
aContentParent
)
{
MOZ_COUNT_CTOR
(
ContentProcessHost
)
;
}
ContentProcessHost
:
:
~
ContentProcessHost
(
)
{
MOZ_COUNT_DTOR
(
ContentProcessHost
)
;
}
bool
ContentProcessHost
:
:
Launch
(
StringVector
aExtraOpts
)
{
MOZ_ASSERT
(
!
mHasLaunched
)
;
MOZ_ASSERT
(
mContentParent
)
;
if
(
!
GeckoChildProcessHost
:
:
AsyncLaunch
(
aExtraOpts
)
)
{
mHasLaunched
=
true
;
return
false
;
}
return
true
;
}
void
ContentProcessHost
:
:
OnChannelConnected
(
int32_t
aPid
)
{
MOZ_ASSERT
(
!
NS_IsMainThread
(
)
)
;
mContentParent
-
>
SetOtherProcessId
(
aPid
)
;
mHasLaunched
=
true
;
GeckoChildProcessHost
:
:
OnChannelConnected
(
aPid
)
;
}
void
ContentProcessHost
:
:
OnChannelError
(
)
{
MOZ_ASSERT
(
!
NS_IsMainThread
(
)
)
;
mHasLaunched
=
true
;
GeckoChildProcessHost
:
:
OnChannelError
(
)
;
}
}
}
