#
ifndef
mozilla_dom_ipc_VsyncParent_h
#
define
mozilla_dom_ipc_VsyncParent_h
#
include
"
mozilla
/
dom
/
PVsyncParent
.
h
"
#
include
"
mozilla
/
VsyncDispatcher
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
VsyncSource
.
h
"
class
nsIThread
;
namespace
mozilla
:
:
dom
{
class
VsyncParent
final
:
public
PVsyncParent
public
VsyncObserver
{
friend
class
PVsyncParent
;
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
VsyncParent
override
)
public
:
VsyncParent
(
)
;
void
UpdateVsyncSource
(
const
RefPtr
<
gfx
:
:
VsyncSource
>
&
aVsyncSource
)
;
private
:
virtual
~
VsyncParent
(
)
=
default
;
void
NotifyVsync
(
const
VsyncEvent
&
aVsync
)
override
;
virtual
void
ActorDestroy
(
ActorDestroyReason
aActorDestroyReason
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvObserve
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvUnobserve
(
)
;
void
DispatchVsyncEvent
(
const
VsyncEvent
&
aVsync
)
;
void
UpdateVsyncRate
(
)
;
bool
IsOnInitialThread
(
)
;
void
AssertIsOnInitialThread
(
)
;
bool
mObservingVsync
;
bool
mDestroyed
;
nsCOMPtr
<
nsIThread
>
mInitialThread
;
RefPtr
<
gfx
:
:
VsyncSource
>
mVsyncSource
;
RefPtr
<
RefreshTimerVsyncDispatcher
>
mVsyncDispatcher
;
}
;
}
#
endif
