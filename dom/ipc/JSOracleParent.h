#
ifndef
mozilla_dom_JSOracleParent
#
define
mozilla_dom_JSOracleParent
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
mozilla
/
ProcInfo
.
h
"
#
include
"
mozilla
/
dom
/
PJSOracleParent
.
h
"
namespace
mozilla
:
:
ipc
{
class
UtilityProcessParent
;
}
namespace
mozilla
:
:
dom
{
class
JSOracleParent
final
:
public
PJSOracleParent
{
public
:
JSOracleParent
(
)
=
default
;
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
JSOracleParent
override
)
;
static
void
WithJSOracle
(
const
std
:
:
function
<
void
(
JSOracleParent
*
aParent
)
>
&
aCallback
)
;
UtilityActorName
GetActorName
(
)
{
return
UtilityActorName
:
:
JSOracle
;
}
void
ActorDestroy
(
ActorDestroyReason
aReason
)
override
;
nsresult
BindToUtilityProcess
(
const
RefPtr
<
mozilla
:
:
ipc
:
:
UtilityProcessParent
>
&
aUtilityParent
)
;
void
Bind
(
Endpoint
<
PJSOracleParent
>
&
&
aEndpoint
)
;
private
:
~
JSOracleParent
(
)
=
default
;
static
JSOracleParent
*
GetSingleton
(
)
;
using
JSOraclePromise
=
GenericNonExclusivePromise
;
RefPtr
<
JSOraclePromise
>
StartJSOracle
(
)
;
}
;
}
#
endif
