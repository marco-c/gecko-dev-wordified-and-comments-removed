#
ifndef
mozilla_dom_permission_message_utils_h__
#
define
mozilla_dom_permission_message_utils_h__
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
mozilla
/
ipc
/
IPDLParamTraits
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIPrincipal
.
h
"
namespace
mozilla
:
:
ipc
{
template
<
>
struct
IPDLParamTraits
<
nsIPrincipal
*
>
{
static
void
Write
(
IPC
:
:
MessageWriter
*
aWriter
IProtocol
*
aActor
nsIPrincipal
*
aParam
)
;
static
bool
Read
(
IPC
:
:
MessageReader
*
aReader
IProtocol
*
aActor
RefPtr
<
nsIPrincipal
>
*
aResult
)
;
static
bool
Read
(
IPC
:
:
MessageReader
*
aReader
IProtocol
*
aActor
nsCOMPtr
<
nsIPrincipal
>
*
aResult
)
{
RefPtr
<
nsIPrincipal
>
result
;
if
(
!
Read
(
aReader
aActor
&
result
)
)
{
return
false
;
}
*
aResult
=
std
:
:
move
(
result
)
;
return
true
;
}
}
;
}
#
endif
