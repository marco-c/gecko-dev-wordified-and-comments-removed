#
ifndef
mozilla_dom_MemoryReportRequest_h_
#
define
mozilla_dom_MemoryReportRequest_h_
#
include
"
mozilla
/
dom
/
MemoryReportTypes
.
h
"
#
include
"
mozilla
/
ipc
/
FileDescriptor
.
h
"
#
include
"
nsISupports
.
h
"
class
nsMemoryReporterManager
;
namespace
mozilla
{
namespace
dom
{
class
MaybeFileDesc
;
class
MemoryReportRequestHost
final
{
public
:
explicit
MemoryReportRequestHost
(
uint32_t
aGeneration
)
;
~
MemoryReportRequestHost
(
)
;
void
RecvReport
(
const
MemoryReport
&
aReport
)
;
void
Finish
(
uint32_t
aGeneration
)
;
private
:
const
uint32_t
mGeneration
;
RefPtr
<
nsMemoryReporterManager
>
mReporterManager
;
bool
mSuccess
;
}
;
class
MemoryReportRequestClient
final
:
public
nsIRunnable
{
public
:
NS_DECL_ISUPPORTS
static
void
Start
(
uint32_t
aGeneration
bool
aAnonymize
bool
aMinimizeMemoryUsage
const
MaybeFileDesc
&
aDMDFile
const
nsACString
&
aProcessString
)
;
NS_IMETHOD
Run
(
)
override
;
private
:
MemoryReportRequestClient
(
uint32_t
aGeneration
bool
aAnonymize
const
MaybeFileDesc
&
aDMDFile
const
nsACString
&
aProcessString
)
;
private
:
~
MemoryReportRequestClient
(
)
;
uint32_t
mGeneration
;
bool
mAnonymize
;
mozilla
:
:
ipc
:
:
FileDescriptor
mDMDFile
;
nsCString
mProcessString
;
}
;
}
}
#
endif
