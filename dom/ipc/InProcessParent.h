#
ifndef
mozilla_dom_InProcessParent_h
#
define
mozilla_dom_InProcessParent_h
#
include
"
mozilla
/
dom
/
PInProcessParent
.
h
"
#
include
"
mozilla
/
dom
/
JSProcessActorParent
.
h
"
#
include
"
mozilla
/
dom
/
ProcessActor
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
nsIDOMProcessParent
.
h
"
namespace
mozilla
{
namespace
dom
{
class
PWindowGlobalParent
;
class
PWindowGlobalChild
;
class
InProcessChild
;
class
InProcessParent
final
:
public
nsIDOMProcessParent
public
nsIObserver
public
PInProcessParent
public
ProcessActor
{
public
:
friend
class
InProcessChild
;
friend
class
PInProcessParent
;
NS_DECL_ISUPPORTS
NS_DECL_NSIDOMPROCESSPARENT
NS_DECL_NSIOBSERVER
static
InProcessParent
*
Singleton
(
)
;
static
IProtocol
*
ChildActorFor
(
IProtocol
*
aActor
)
;
const
nsAString
&
GetRemoteType
(
)
const
override
{
return
VoidString
(
)
;
}
;
JSActor
:
:
Type
GetSide
(
)
override
{
return
JSActor
:
:
Type
:
:
Parent
;
}
private
:
virtual
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
~
InProcessParent
(
)
=
default
;
static
void
Startup
(
)
;
static
void
Shutdown
(
)
;
static
StaticRefPtr
<
InProcessParent
>
sSingleton
;
static
bool
sShutdown
;
nsRefPtrHashtable
<
nsCStringHashKey
JSProcessActorParent
>
mProcessActors
;
}
;
}
}
#
endif
