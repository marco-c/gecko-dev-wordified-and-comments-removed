#
include
"
mozilla
/
dom
/
JSWindowActorService
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
namespace
mozilla
{
namespace
dom
{
struct
WindowActorOptions
;
namespace
{
StaticRefPtr
<
JSWindowActorService
>
gJSWindowActorService
;
}
JSWindowActorService
:
:
JSWindowActorService
(
)
{
MOZ_ASSERT
(
XRE_IsParentProcess
(
)
)
;
}
JSWindowActorService
:
:
~
JSWindowActorService
(
)
{
MOZ_ASSERT
(
XRE_IsParentProcess
(
)
)
;
}
already_AddRefed
<
JSWindowActorService
>
JSWindowActorService
:
:
GetSingleton
(
)
{
if
(
!
gJSWindowActorService
)
{
gJSWindowActorService
=
new
JSWindowActorService
(
)
;
ClearOnShutdown
(
&
gJSWindowActorService
)
;
}
RefPtr
<
JSWindowActorService
>
service
=
gJSWindowActorService
.
get
(
)
;
return
service
.
forget
(
)
;
}
void
JSWindowActorService
:
:
RegisterWindowActor
(
const
nsAString
&
aName
const
WindowActorOptions
&
aOptions
ErrorResult
&
aRv
)
{
MOZ_ASSERT
(
XRE_IsParentProcess
(
)
)
;
auto
entry
=
mDescriptors
.
LookupForAdd
(
aName
)
;
if
(
entry
)
{
aRv
.
Throw
(
NS_ERROR_DOM_NOT_SUPPORTED_ERR
)
;
return
;
}
entry
.
OrInsert
(
[
&
]
{
return
&
aOptions
;
}
)
;
}
}
}
