#
include
"
mozilla
/
dom
/
CSPMessageUtils
.
h
"
#
include
"
mozilla
/
ipc
/
PBackgroundSharedTypes
.
h
"
#
include
"
nsSerializationHelper
.
h
"
#
include
"
mozilla
/
ipc
/
BackgroundUtils
.
h
"
namespace
IPC
{
using
namespace
mozilla
:
:
ipc
;
void
ParamTraits
<
nsIContentSecurityPolicy
*
>
:
:
Write
(
Message
*
aMsg
nsIContentSecurityPolicy
*
aParam
)
{
bool
isNull
=
!
aParam
;
WriteParam
(
aMsg
isNull
)
;
if
(
isNull
)
{
return
;
}
CSPInfo
csp
;
mozilla
:
:
Unused
<
<
NS_WARN_IF
(
NS_FAILED
(
CSPToCSPInfo
(
aParam
&
csp
)
)
)
;
IPDLParamTraits
<
CSPInfo
>
:
:
Write
(
aMsg
nullptr
csp
)
;
}
bool
ParamTraits
<
nsIContentSecurityPolicy
*
>
:
:
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
RefPtr
<
nsIContentSecurityPolicy
>
*
aResult
)
{
bool
isNull
;
if
(
!
ReadParam
(
aMsg
aIter
&
isNull
)
)
{
return
false
;
}
if
(
isNull
)
{
*
aResult
=
nullptr
;
return
true
;
}
CSPInfo
csp
;
if
(
!
IPDLParamTraits
<
CSPInfo
>
:
:
Read
(
aMsg
aIter
nullptr
&
csp
)
)
{
return
false
;
}
*
aResult
=
CSPInfoToCSP
(
csp
nullptr
nullptr
)
;
return
*
aResult
;
}
}
