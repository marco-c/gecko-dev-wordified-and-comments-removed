#
ifndef
mozilla_dom_URLClassifierChild_h
#
define
mozilla_dom_URLClassifierChild_h
#
include
"
mozilla
/
dom
/
PURLClassifierChild
.
h
"
#
include
"
mozilla
/
dom
/
PURLClassifierLocalChild
.
h
"
#
include
"
nsIURIClassifier
.
h
"
namespace
mozilla
{
namespace
dom
{
template
<
typename
BaseProtocol
>
class
URLClassifierChildBase
:
public
BaseProtocol
{
public
:
URLClassifierChildBase
(
)
=
default
;
void
SetCallback
(
nsIURIClassifierCallback
*
aCallback
)
{
mCallback
=
aCallback
;
}
mozilla
:
:
ipc
:
:
IPCResult
Recv__delete__
(
const
MaybeInfo
&
aInfo
const
nsresult
&
aResult
)
override
{
MOZ_ASSERT
(
mCallback
)
;
if
(
aInfo
.
type
(
)
=
=
MaybeInfo
:
:
TClassifierInfo
)
{
mCallback
-
>
OnClassifyComplete
(
aResult
aInfo
.
get_ClassifierInfo
(
)
.
list
(
)
aInfo
.
get_ClassifierInfo
(
)
.
provider
(
)
aInfo
.
get_ClassifierInfo
(
)
.
fullhash
(
)
)
;
}
return
IPC_OK
(
)
;
}
private
:
~
URLClassifierChildBase
(
)
=
default
;
nsCOMPtr
<
nsIURIClassifierCallback
>
mCallback
;
}
;
using
URLClassifierChild
=
URLClassifierChildBase
<
PURLClassifierChild
>
;
using
URLClassifierLocalChild
=
URLClassifierChildBase
<
PURLClassifierLocalChild
>
;
}
}
#
endif
