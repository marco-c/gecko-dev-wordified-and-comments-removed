#
ifndef
mozilla_dom_JSWindowActorChild_h
#
define
mozilla_dom_JSWindowActorChild_h
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsWrapperCache
.
h
"
namespace
mozilla
{
namespace
dom
{
class
WindowGlobalChild
;
}
}
namespace
mozilla
{
namespace
dom
{
class
JSWindowActorChild
final
:
public
nsWrapperCache
{
public
:
NS_INLINE_DECL_CYCLE_COLLECTING_NATIVE_REFCOUNTING
(
JSWindowActorChild
)
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_NATIVE_CLASS
(
JSWindowActorChild
)
protected
:
~
JSWindowActorChild
(
)
=
default
;
public
:
nsISupports
*
GetParentObject
(
)
const
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
JSWindowActorChild
>
Constructor
(
GlobalObject
&
aGlobal
ErrorResult
&
aRv
)
{
return
MakeAndAddRef
<
JSWindowActorChild
>
(
)
;
}
WindowGlobalChild
*
Manager
(
)
const
;
void
Init
(
const
nsAString
&
aName
WindowGlobalChild
*
aManager
)
;
void
SendAsyncMessage
(
JSContext
*
aCx
const
nsAString
&
aMessageName
JS
:
:
Handle
<
JS
:
:
Value
>
aObj
JS
:
:
Handle
<
JS
:
:
Value
>
aTransfers
ErrorResult
&
aRv
)
;
private
:
nsString
mName
;
RefPtr
<
WindowGlobalChild
>
mManager
;
}
;
}
}
#
endif
