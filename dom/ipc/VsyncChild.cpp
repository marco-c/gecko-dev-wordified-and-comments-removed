#
include
"
VsyncChild
.
h
"
#
include
"
mozilla
/
SchedulerGroup
.
h
"
#
include
"
mozilla
/
VsyncDispatcher
.
h
"
#
include
"
nsThreadUtils
.
h
"
namespace
mozilla
:
:
dom
{
VsyncChild
:
:
VsyncChild
(
)
:
mIsShutdown
(
false
)
mVsyncRate
(
TimeDuration
:
:
Forever
(
)
)
lastVsyncRateTime
(
TimeStamp
(
)
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
}
VsyncChild
:
:
~
VsyncChild
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
}
void
VsyncChild
:
:
AddChildRefreshTimer
(
VsyncObserver
*
aVsyncObserver
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
!
mObservers
.
Contains
(
aVsyncObserver
)
)
;
if
(
mIsShutdown
)
{
return
;
}
if
(
mObservers
.
IsEmpty
(
)
)
{
Unused
<
<
PVsyncChild
:
:
SendObserve
(
)
;
}
mObservers
.
AppendElement
(
std
:
:
move
(
aVsyncObserver
)
)
;
}
void
VsyncChild
:
:
RemoveChildRefreshTimer
(
VsyncObserver
*
aVsyncObserver
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
if
(
mIsShutdown
)
{
return
;
}
if
(
mObservers
.
RemoveElement
(
aVsyncObserver
)
&
&
mObservers
.
IsEmpty
(
)
)
{
Unused
<
<
PVsyncChild
:
:
SendUnobserve
(
)
;
}
}
void
VsyncChild
:
:
ActorDestroy
(
ActorDestroyReason
aActorDestroyReason
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
!
mIsShutdown
)
;
mIsShutdown
=
true
;
if
(
!
mObservers
.
IsEmpty
(
)
)
{
Unused
<
<
PVsyncChild
:
:
SendUnobserve
(
)
;
}
mObservers
.
Clear
(
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
VsyncChild
:
:
RecvNotify
(
const
VsyncEvent
&
aVsync
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
!
mIsShutdown
)
;
SchedulerGroup
:
:
MarkVsyncRan
(
)
;
for
(
VsyncObserver
*
observer
:
mObservers
.
ForwardRange
(
)
)
{
observer
-
>
NotifyVsync
(
aVsync
)
;
}
return
IPC_OK
(
)
;
}
TimeDuration
VsyncChild
:
:
GetVsyncRate
(
)
{
if
(
lastVsyncRateTime
.
IsNull
(
)
|
|
(
TimeStamp
:
:
Now
(
)
-
lastVsyncRateTime
)
.
ToMilliseconds
(
)
>
250
)
{
PVsyncChild
:
:
SendRequestVsyncRate
(
)
;
lastVsyncRateTime
=
TimeStamp
:
:
Now
(
)
;
}
return
mVsyncRate
;
}
mozilla
:
:
ipc
:
:
IPCResult
VsyncChild
:
:
RecvVsyncRate
(
const
float
&
aVsyncRate
)
{
mVsyncRate
=
TimeDuration
:
:
FromMilliseconds
(
aVsyncRate
)
;
return
IPC_OK
(
)
;
}
}
