#
ifndef
mozilla_dom_WebIDLGlobalNameHash_h__
#
define
mozilla_dom_WebIDLGlobalNameHash_h__
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
namespace
mozilla
{
namespace
dom
{
struct
WebIDLNameTableEntry
;
namespace
constructors
{
namespace
id
{
enum
ID
:
uint16_t
;
}
}
class
WebIDLGlobalNameHash
{
public
:
static
void
Init
(
)
;
static
void
Shutdown
(
)
;
typedef
bool
(
*
ConstructorEnabled
)
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
obj
)
;
static
void
Register
(
uint16_t
aNameOffset
uint16_t
aNameLength
CreateInterfaceObjectsMethod
aCreate
ConstructorEnabled
aEnabled
constructors
:
:
id
:
:
ID
aConstructorId
)
;
static
void
Remove
(
const
char
*
aName
uint32_t
aLength
)
;
static
bool
DefineIfEnabled
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aObj
JS
:
:
Handle
<
jsid
>
aId
JS
:
:
MutableHandle
<
JS
:
:
PropertyDescriptor
>
aDesc
bool
*
aFound
)
;
static
bool
MayResolve
(
jsid
aId
)
;
enum
NameType
{
AllNames
UnresolvedNamesOnly
}
;
static
bool
GetNames
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aObj
NameType
aNameType
JS
:
:
AutoIdVector
&
aNames
)
;
private
:
friend
struct
WebIDLNameTableEntry
;
static
const
uint32_t
sCount
;
static
const
char
sNames
[
]
;
}
;
}
}
#
endif
