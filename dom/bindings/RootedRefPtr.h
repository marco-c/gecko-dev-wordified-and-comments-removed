#
ifndef
mozilla_RootedRefPtr_h__
#
define
mozilla_RootedRefPtr_h__
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
js
/
GCPolicyAPI
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
namespace
JS
{
template
<
typename
T
>
struct
GCPolicy
<
RefPtr
<
T
>
>
{
static
RefPtr
<
T
>
initial
(
)
{
return
RefPtr
<
T
>
(
)
;
}
static
void
trace
(
JSTracer
*
trc
RefPtr
<
T
>
*
tp
const
char
*
name
)
{
if
(
*
tp
)
{
(
*
tp
)
-
>
Trace
(
trc
)
;
}
}
}
;
}
namespace
js
{
template
<
typename
T
typename
Wrapper
>
struct
WrappedPtrOperations
<
RefPtr
<
T
>
Wrapper
>
{
operator
T
*
(
)
const
{
return
static_cast
<
const
Wrapper
*
>
(
this
)
-
>
get
(
)
;
}
}
;
}
#
endif
