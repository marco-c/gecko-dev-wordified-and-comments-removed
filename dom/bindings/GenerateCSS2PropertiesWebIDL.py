import
sys
import
string
import
argparse
def
generateLine
(
propName
extendedAttrs
)
:
    
return
"
[
%
s
]
attribute
DOMString
%
s
;
\
n
"
%
(
"
"
.
join
(
extendedAttrs
)
                                                 
propName
)
def
generate
(
output
idlFilename
)
:
    
propList
=
eval
(
sys
.
stdin
.
read
(
)
)
    
props
=
"
"
    
for
[
name
prop
id
flags
pref
proptype
]
in
propList
:
        
if
"
CSS_PROPERTY_INTERNAL
"
in
flags
:
            
continue
        
extendedAttrs
=
[
"
Throws
"
"
TreatNullAs
=
EmptyString
"
]
        
if
pref
is
not
"
"
:
            
extendedAttrs
.
append
(
'
Pref
=
"
%
s
"
'
%
pref
)
        
if
(
prop
.
startswith
(
"
Webkit
"
)
)
:
            
props
+
=
generateLine
(
prop
extendedAttrs
)
        
if
not
prop
.
startswith
(
"
Moz
"
)
:
            
prop
=
prop
[
0
]
.
lower
(
)
+
prop
[
1
:
]
        
props
+
=
generateLine
(
prop
extendedAttrs
)
        
if
prop
!
=
name
and
name
[
0
]
!
=
"
-
"
:
            
extendedAttrs
.
append
(
'
BinaryName
=
"
%
s
"
'
%
prop
)
            
props
+
=
generateLine
(
"
_
"
+
name
extendedAttrs
)
    
idlFile
=
open
(
idlFilename
"
r
"
)
    
idlTemplate
=
idlFile
.
read
(
)
    
idlFile
.
close
(
)
    
output
.
write
(
"
/
*
THIS
IS
AN
AUTOGENERATED
FILE
.
DO
NOT
EDIT
*
/
\
n
\
n
"
+
                 
string
.
Template
(
idlTemplate
)
.
substitute
(
{
"
props
"
:
props
}
)
+
'
\
n
'
)
def
main
(
)
:
    
parser
=
argparse
.
ArgumentParser
(
)
    
parser
.
add_argument
(
'
idlFilename
'
help
=
'
IDL
property
file
template
'
)
    
args
=
parser
.
parse_args
(
)
    
generate
(
sys
.
stdout
args
.
idlFilename
)
if
__name__
=
=
'
__main__
'
:
    
main
(
)
