#
ifndef
mozilla_RootedOwningNonNull_h__
#
define
mozilla_RootedOwningNonNull_h__
#
include
"
mozilla
/
OwningNonNull
.
h
"
#
include
"
js
/
GCPolicyAPI
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
namespace
JS
{
template
<
typename
T
>
struct
GCPolicy
<
mozilla
:
:
OwningNonNull
<
T
>
>
{
typedef
mozilla
:
:
OwningNonNull
<
T
>
SmartPtrType
;
static
SmartPtrType
initial
(
)
{
return
SmartPtrType
(
)
;
}
static
void
trace
(
JSTracer
*
trc
SmartPtrType
*
tp
const
char
*
name
)
{
if
(
(
*
tp
)
.
isInitialized
(
)
)
{
(
*
tp
)
-
>
Trace
(
trc
)
;
}
}
}
;
}
namespace
js
{
template
<
typename
T
>
struct
RootedBase
<
mozilla
:
:
OwningNonNull
<
T
>
>
{
typedef
mozilla
:
:
OwningNonNull
<
T
>
SmartPtrType
;
operator
SmartPtrType
&
(
)
const
{
auto
&
self
=
*
static_cast
<
const
JS
:
:
Rooted
<
SmartPtrType
>
*
>
(
this
)
;
return
self
.
get
(
)
;
}
operator
T
&
(
)
const
{
auto
&
self
=
*
static_cast
<
const
JS
:
:
Rooted
<
SmartPtrType
>
*
>
(
this
)
;
return
self
.
get
(
)
;
}
}
;
}
#
endif
