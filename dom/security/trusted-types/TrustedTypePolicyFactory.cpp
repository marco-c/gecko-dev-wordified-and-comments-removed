#
include
"
mozilla
/
dom
/
TrustedTypePolicyFactory
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
TrustedTypePolicy
.
h
"
namespace
mozilla
:
:
dom
{
NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE
(
TrustedTypePolicyFactory
mGlobalObject
)
JSObject
*
TrustedTypePolicyFactory
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
TrustedTypePolicyFactory_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
already_AddRefed
<
TrustedTypePolicy
>
TrustedTypePolicyFactory
:
:
CreatePolicy
(
const
nsAString
&
aPolicyName
const
TrustedTypePolicyOptions
&
aPolicyOptions
)
{
TrustedTypePolicy
:
:
Options
options
;
if
(
aPolicyOptions
.
mCreateHTML
.
WasPassed
(
)
)
{
options
.
mCreateHTMLCallback
=
&
aPolicyOptions
.
mCreateHTML
.
Value
(
)
;
}
if
(
aPolicyOptions
.
mCreateScript
.
WasPassed
(
)
)
{
options
.
mCreateScriptCallback
=
&
aPolicyOptions
.
mCreateScript
.
Value
(
)
;
}
if
(
aPolicyOptions
.
mCreateScriptURL
.
WasPassed
(
)
)
{
options
.
mCreateScriptURLCallback
=
&
aPolicyOptions
.
mCreateScriptURL
.
Value
(
)
;
}
RefPtr
<
TrustedTypePolicy
>
policy
=
MakeRefPtr
<
TrustedTypePolicy
>
(
this
aPolicyName
std
:
:
move
(
options
)
)
;
mCreatedPolicyNames
.
AppendElement
(
aPolicyName
)
;
return
policy
.
forget
(
)
;
}
#
define
IS_TRUSTED_TYPE_IMPL
(
_trustedTypeSuffix
)
\
bool
TrustedTypePolicyFactory
:
:
Is
#
#
_trustedTypeSuffix
(
\
JSContext
*
const
JS
:
:
Handle
<
JS
:
:
Value
>
&
aValue
)
const
{
\
/
*
*
\
*
No
need
to
check
the
internal
slot
.
\
*
Ensured
by
the
corresponding
test
:
\
*
<
https
:
/
/
searchfox
.
org
/
mozilla
-
central
/
rev
/
b60cb73160843adb5a5a3ec8058e75a69b46acf7
/
testing
/
web
-
platform
/
tests
/
trusted
-
types
/
TrustedTypePolicyFactory
-
isXXX
.
html
>
\
*
/
\
return
aValue
.
isObject
(
)
&
&
\
IS_INSTANCE_OF
(
Trusted
#
#
_trustedTypeSuffix
&
aValue
.
toObject
(
)
)
;
\
}
IS_TRUSTED_TYPE_IMPL
(
HTML
)
;
IS_TRUSTED_TYPE_IMPL
(
Script
)
;
IS_TRUSTED_TYPE_IMPL
(
ScriptURL
)
;
UniquePtr
<
TrustedHTML
>
TrustedTypePolicyFactory
:
:
EmptyHTML
(
)
{
dom
:
:
PreserveWrapper
(
this
)
;
return
MakeUnique
<
TrustedHTML
>
(
EmptyString
(
)
)
;
}
UniquePtr
<
TrustedScript
>
TrustedTypePolicyFactory
:
:
EmptyScript
(
)
{
dom
:
:
PreserveWrapper
(
this
)
;
return
MakeUnique
<
TrustedScript
>
(
EmptyString
(
)
)
;
}
}
