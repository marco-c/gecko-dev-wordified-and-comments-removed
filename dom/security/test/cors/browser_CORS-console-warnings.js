"
use
strict
"
;
function
console_observer
(
subject
topic
data
)
{
var
message
=
subject
.
wrappedJSObject
.
arguments
[
0
]
;
ok
(
false
message
)
;
}
var
webconsole
=
null
;
var
messages_seen
=
0
;
var
expected_messages
=
50
;
function
on_new_message
(
msgObj
)
{
let
text
=
msgObj
.
message
;
if
(
text
.
match
(
"
Cross
-
Origin
Request
Blocked
:
"
)
)
{
ok
(
true
"
message
is
:
"
+
text
)
;
messages_seen
+
+
;
}
}
async
function
do_cleanup
(
)
{
Services
.
console
.
unregisterListener
(
on_new_message
)
;
await
unsetCookiePref
(
)
;
}
function
setCookiePref
(
)
{
return
new
Promise
(
resolve
=
>
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
network
.
cookie
.
cookieBehavior
"
0
]
]
}
resolve
)
)
;
}
function
unsetCookiePref
(
)
{
return
new
Promise
(
resolve
=
>
{
SpecialPowers
.
popPrefEnv
(
resolve
)
;
}
)
;
}
add_task
(
async
function
(
)
{
requestLongerTimeout
(
4
)
;
registerCleanupFunction
(
do_cleanup
)
;
await
setCookiePref
(
)
;
Services
.
console
.
registerListener
(
on_new_message
)
;
let
test_uri
=
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
dom
/
security
/
test
/
cors
/
file_cors_logging_test
.
html
"
;
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
blank
"
)
;
BrowserTestUtils
.
startLoadingURIString
(
gBrowser
test_uri
)
;
await
BrowserTestUtils
.
waitForLocationChange
(
gBrowser
test_uri
+
"
#
finished
"
)
;
Assert
.
greater
(
messages_seen
0
"
Saw
"
+
messages_seen
+
"
messages
.
"
)
;
messages_seen
=
0
;
let
test_two_uri
=
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
dom
/
security
/
test
/
cors
/
file_bug1456721
.
html
"
;
BrowserTestUtils
.
startLoadingURIString
(
gBrowser
test_two_uri
)
;
await
BrowserTestUtils
.
waitForLocationChange
(
gBrowser
test_two_uri
+
"
#
finishedTestTwo
"
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
messages_seen
>
0
)
;
Assert
.
greater
(
messages_seen
0
"
Saw
"
+
messages_seen
+
"
messages
.
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
