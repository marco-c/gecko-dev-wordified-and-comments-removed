"
use
strict
"
;
const
EMPTY_URL
=
"
http
:
/
/
example
.
com
/
browser
/
dom
/
security
/
test
/
https
-
first
/
file_empty
.
html
"
;
const
SUBDOCUMENT_URL
=
"
https
:
/
/
example
.
com
/
browser
/
dom
/
security
/
test
/
https
-
first
/
file_subdocument_downgrade
.
sjs
"
;
add_task
(
async
function
test_subdocument_downgrade
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
dom
.
security
.
https_first
"
true
]
[
"
security
.
mixed_content
.
block_active_content
"
false
]
]
}
)
;
await
BrowserTestUtils
.
withNewTab
(
EMPTY_URL
async
browser
=
>
{
await
SpecialPowers
.
spawn
(
browser
[
SUBDOCUMENT_URL
]
async
SUBDOCUMENT_URL
=
>
{
function
isCrossOriginIframe
(
iframe
)
{
try
{
return
!
iframe
.
contentDocument
;
}
catch
(
e
)
{
return
true
;
}
}
const
subdocument
=
content
.
document
.
createElement
(
"
iframe
"
)
;
subdocument
.
src
=
SUBDOCUMENT_URL
;
const
loadPromise
=
new
Promise
(
resolve
=
>
{
subdocument
.
addEventListener
(
"
load
"
(
)
=
>
{
ok
(
!
isCrossOriginIframe
(
subdocument
)
"
Subdocument
should
not
be
downgraded
"
)
;
resolve
(
)
;
}
)
;
}
)
;
content
.
document
.
body
.
appendChild
(
subdocument
)
;
await
loadPromise
;
}
)
;
}
)
;
}
)
;
