'
use
strict
'
;
var
expected_telemetry
=
{
"
histograms
"
:
{
"
MIXED_CONTENT_HSTS_PRIMING_RESULT
"
:
0
"
MIXED_CONTENT_HSTS_PRIMING_REQUESTS
"
:
1
}
"
keyed
-
histograms
"
:
{
}
}
;
add_task
(
async
function
(
)
{
Observer
.
add_observers
(
Services
)
;
registerCleanupFunction
(
do_cleanup
)
;
test_servers
[
'
localhost
-
ip
'
]
=
{
host
:
'
127
.
0
.
0
.
2
'
response
:
true
id
:
'
localhost
-
ip
'
}
;
test_settings
.
block_active
.
result
[
'
localhost
-
ip
'
]
=
'
blocked
'
;
let
which
=
"
block_active
"
;
SetupPrefTestEnvironment
(
which
)
;
clear_hists
(
expected_telemetry
)
;
await
execute_test
(
"
localhost
-
ip
"
test_settings
[
which
]
.
mimetype
)
;
test_telemetry
(
expected_telemetry
)
;
SpecialPowers
.
popPrefEnv
(
)
;
}
)
;
