"
use
strict
"
;
const
{
ManifestObtainer
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
ManifestObtainer
.
jsm
"
)
;
const
path
=
"
/
tests
/
dom
/
security
/
test
/
csp
/
"
;
const
mixedContent
=
{
path
}
file_web_manifest_mixed_content
.
html
;
const
server
=
{
path
}
file_testserver
.
sjs
;
const
secureURL
=
new
URL
(
https
:
/
/
example
.
com
{
server
}
)
;
const
tests
=
[
{
expected
:
"
Mixed
Content
Blocker
prevents
fetching
manifest
.
"
get
tabURL
(
)
{
const
url
=
new
URL
(
secureURL
)
;
url
.
searchParams
.
append
(
"
file
"
mixedContent
)
;
return
url
.
href
;
}
run
(
error
)
{
const
check
=
/
NetworkError
when
attempting
to
fetch
resource
/
.
test
(
error
.
message
)
;
ok
(
check
this
.
expected
)
;
}
}
]
;
add_task
(
async
function
(
)
{
const
testPromises
=
tests
.
map
(
(
test
)
=
>
{
const
tabOptions
=
{
gBrowser
url
:
test
.
tabURL
skipAnimation
:
true
}
;
return
BrowserTestUtils
.
withNewTab
(
tabOptions
(
browser
)
=
>
testObtainingManifest
(
browser
test
)
)
;
}
)
;
await
Promise
.
all
(
testPromises
)
;
}
)
;
async
function
testObtainingManifest
(
aBrowser
aTest
)
{
try
{
await
ManifestObtainer
.
browserObtainManifest
(
aBrowser
)
;
}
catch
(
e
)
{
aTest
.
run
(
e
)
;
}
}
