#
ifndef
nsHTTPSOnlyUtils_h___
#
define
nsHTTPSOnlyUtils_h___
#
include
"
nsIScriptError
.
h
"
class
nsHTTPSOnlyUtils
{
public
:
static
bool
IsHttpsOnlyModeEnabled
(
bool
aFromPrivateWindow
)
;
static
bool
ShouldUpgradeRequest
(
nsIURI
*
aURI
nsILoadInfo
*
aLoadInfo
)
;
static
bool
ShouldUpgradeWebSocket
(
nsIURI
*
aURI
int32_t
aInnerWindowId
bool
aFromPrivateWindow
uint32_t
aHttpsOnlyStatus
)
;
static
bool
CouldBeHttpsOnlyError
(
nsIChannel
*
aChannel
nsresult
aError
)
;
static
void
LogLocalizedString
(
const
char
*
aName
const
nsTArray
<
nsString
>
&
aParams
uint32_t
aFlags
uint64_t
aInnerWindowID
bool
aFromPrivateWindow
nsIURI
*
aURI
=
nullptr
)
;
static
bool
TestHttpsOnlySitePermission
(
nsIPrincipal
*
aPrincipal
)
;
private
:
static
void
LogMessage
(
const
nsAString
&
aMessage
uint32_t
aFlags
uint64_t
aInnerWindowID
bool
aFromPrivateWindow
nsIURI
*
aURI
=
nullptr
)
;
static
bool
OnionException
(
nsIURI
*
aURI
)
;
static
bool
LoopbackOrLocalException
(
nsIURI
*
aURI
)
;
}
;
#
endif
