with
Files
(
"
*
"
)
:
BUG_COMPONENT
=
(
"
Core
"
"
DOM
:
Security
"
)
TEST_DIRS
+
=
[
"
test
"
]
DIRS
+
=
[
"
featurepolicy
"
"
sanitizer
"
"
trusted
-
types
"
]
EXPORTS
.
mozilla
.
dom
+
=
[
"
CSPEvalChecker
.
h
"
"
CSPViolationData
.
h
"
"
DomSecurityIPCUtils
.
h
"
"
DOMSecurityMonitor
.
h
"
"
FramingChecker
.
h
"
"
IntegrityPolicy
.
h
"
"
nsContentSecurityManager
.
h
"
"
nsContentSecurityUtils
.
h
"
"
nsCSPContext
.
h
"
"
nsCSPParser
.
h
"
"
nsCSPService
.
h
"
"
nsCSPUtils
.
h
"
"
nsHTTPSOnlyStreamListener
.
h
"
"
nsHTTPSOnlyUtils
.
h
"
"
nsMixedContentBlocker
.
h
"
"
PolicyTokenizer
.
h
"
"
ReferrerInfo
.
h
"
"
SecFetch
.
h
"
"
SRICheck
.
h
"
"
SRILogHelper
.
h
"
"
SRIMetadata
.
h
"
]
EXPORTS
+
=
[
"
nsContentSecurityManager
.
h
"
"
nsContentSecurityUtils
.
h
"
"
nsMixedContentBlocker
.
h
"
"
ReferrerInfo
.
h
"
]
UNIFIED_SOURCES
+
=
[
"
CSPEvalChecker
.
cpp
"
"
CSPViolationData
.
cpp
"
"
DOMSecurityMonitor
.
cpp
"
"
FramingChecker
.
cpp
"
"
IntegrityPolicy
.
cpp
"
"
nsContentSecurityManager
.
cpp
"
"
nsContentSecurityUtils
.
cpp
"
"
nsCSPContext
.
cpp
"
"
nsCSPParser
.
cpp
"
"
nsCSPService
.
cpp
"
"
nsCSPUtils
.
cpp
"
"
nsHTTPSOnlyStreamListener
.
cpp
"
"
nsHTTPSOnlyUtils
.
cpp
"
"
nsMixedContentBlocker
.
cpp
"
"
PolicyTokenizer
.
cpp
"
"
ReferrerInfo
.
cpp
"
"
SecFetch
.
cpp
"
"
SRICheck
.
cpp
"
"
SRIMetadata
.
cpp
"
]
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
FINAL_LIBRARY
=
"
xul
"
LOCAL_INCLUDES
+
=
[
"
/
caps
"
"
/
docshell
/
base
"
"
/
netwerk
/
base
"
"
/
netwerk
/
protocol
/
data
"
"
/
netwerk
/
protocol
/
http
"
]
include
(
"
/
tools
/
fuzzing
/
libfuzzer
-
config
.
mozbuild
"
)
if
CONFIG
[
"
FUZZING_INTERFACES
"
]
:
TEST_DIRS
+
=
[
"
fuzztest
"
]
XPIDL_SOURCES
+
=
[
"
nsIHttpsOnlyModePermission
.
idl
"
]
XPIDL_MODULE
=
"
dom_security
"
