#
ifndef
_mozilla_dom_ClientDOMUtil_h
#
define
_mozilla_dom_ClientDOMUtil_h
#
include
"
mozilla
/
dom
/
ClientIPCTypes
.
h
"
#
include
"
mozilla
/
dom
/
ClientOpPromise
.
h
"
#
include
"
mozilla
/
dom
/
WorkerPrivate
.
h
"
#
include
"
mozilla
/
dom
/
workers
/
bindings
/
WorkerHolderToken
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
{
namespace
dom
{
template
<
typename
Func
typename
Arg
typename
Resolve
typename
Reject
>
void
StartClientManagerOp
(
Func
aFunc
const
Arg
&
aArg
nsISerialEventTarget
*
aTarget
Resolve
aResolve
Reject
aReject
)
{
using
mozilla
:
:
dom
:
:
workers
:
:
Closing
;
using
mozilla
:
:
dom
:
:
workers
:
:
GetCurrentThreadWorkerPrivate
;
using
mozilla
:
:
dom
:
:
workers
:
:
WorkerHolderToken
;
RefPtr
<
WorkerHolderToken
>
token
;
if
(
!
NS_IsMainThread
(
)
)
{
token
=
WorkerHolderToken
:
:
Create
(
GetCurrentThreadWorkerPrivate
(
)
Closing
)
;
}
RefPtr
<
ClientOpPromise
>
promise
=
aFunc
(
aArg
aTarget
)
;
promise
-
>
Then
(
aTarget
__func__
[
aResolve
token
]
(
const
ClientOpResult
&
aResult
)
{
if
(
token
&
&
token
-
>
IsShuttingDown
(
)
)
{
return
;
}
aResolve
(
aResult
)
;
}
[
aReject
token
]
(
nsresult
aResult
)
{
if
(
token
&
&
token
-
>
IsShuttingDown
(
)
)
{
return
;
}
aReject
(
aResult
)
;
}
)
;
}
}
}
#
endif
