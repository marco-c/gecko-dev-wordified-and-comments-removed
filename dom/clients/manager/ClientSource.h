#
ifndef
_mozilla_dom_ClientSource_h
#
define
_mozilla_dom_ClientSource_h
#
include
"
mozilla
/
dom
/
ClientInfo
.
h
"
#
include
"
mozilla
/
dom
/
ClientThing
.
h
"
class
nsIDocShell
;
class
nsPIDOMWindowInner
;
namespace
mozilla
{
namespace
dom
{
class
ClientManager
;
class
ClientSourceChild
;
class
ClientSourceConstructorArgs
;
class
ClientSourceExecutionReadyArgs
;
class
PClientManagerChild
;
namespace
workers
{
class
WorkerPrivate
;
}
class
ClientSource
final
:
public
ClientThing
<
ClientSourceChild
>
{
friend
class
ClientManager
;
NS_DECL_OWNINGTHREAD
RefPtr
<
ClientManager
>
mManager
;
nsCOMPtr
<
nsISerialEventTarget
>
mEventTarget
;
Variant
<
Nothing
RefPtr
<
nsPIDOMWindowInner
>
nsCOMPtr
<
nsIDocShell
>
mozilla
:
:
dom
:
:
workers
:
:
WorkerPrivate
*
>
mOwner
;
ClientInfo
mClientInfo
;
void
Shutdown
(
)
;
void
ExecutionReady
(
const
ClientSourceExecutionReadyArgs
&
aArgs
)
;
mozilla
:
:
dom
:
:
workers
:
:
WorkerPrivate
*
GetWorkerPrivate
(
)
const
;
nsIDocShell
*
GetDocShell
(
)
const
;
ClientSource
(
ClientManager
*
aManager
nsISerialEventTarget
*
aEventTarget
const
ClientSourceConstructorArgs
&
aArgs
)
;
void
Activate
(
PClientManagerChild
*
aActor
)
;
public
:
~
ClientSource
(
)
;
nsPIDOMWindowInner
*
GetInnerWindow
(
)
const
;
void
WorkerExecutionReady
(
mozilla
:
:
dom
:
:
workers
:
:
WorkerPrivate
*
aWorkerPrivate
)
;
nsresult
WindowExecutionReady
(
nsPIDOMWindowInner
*
aInnerWindow
)
;
nsresult
DocShellExecutionReady
(
nsIDocShell
*
aDocShell
)
;
const
ClientInfo
&
Info
(
)
const
;
nsISerialEventTarget
*
EventTarget
(
)
const
;
}
;
}
}
#
endif
