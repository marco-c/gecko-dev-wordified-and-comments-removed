#
include
"
ClientHandleOpChild
.
h
"
namespace
mozilla
{
namespace
dom
{
void
ClientHandleOpChild
:
:
ActorDestroy
(
ActorDestroyReason
aReason
)
{
mRejectCallback
(
NS_ERROR_DOM_ABORT_ERR
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
ClientHandleOpChild
:
:
Recv__delete__
(
const
ClientOpResult
&
aResult
)
{
if
(
aResult
.
type
(
)
=
=
ClientOpResult
:
:
Tnsresult
&
&
NS_FAILED
(
aResult
.
get_nsresult
(
)
)
)
{
mRejectCallback
(
aResult
.
get_nsresult
(
)
)
;
return
IPC_OK
(
)
;
}
mResolveCallback
(
aResult
)
;
return
IPC_OK
(
)
;
}
ClientHandleOpChild
:
:
ClientHandleOpChild
(
const
ClientOpConstructorArgs
&
aArgs
const
ClientOpCallback
&
&
aResolveCallback
const
ClientOpCallback
&
&
aRejectCallback
)
:
mResolveCallback
(
Move
(
aResolveCallback
)
)
mRejectCallback
(
Move
(
aRejectCallback
)
)
{
MOZ_DIAGNOSTIC_ASSERT
(
mResolveCallback
)
;
MOZ_DIAGNOSTIC_ASSERT
(
mRejectCallback
)
;
}
}
}
