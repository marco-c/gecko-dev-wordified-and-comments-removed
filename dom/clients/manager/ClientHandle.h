#
ifndef
_mozilla_dom_ClientHandle_h
#
define
_mozilla_dom_ClientHandle_h
#
include
"
mozilla
/
dom
/
ClientInfo
.
h
"
#
include
"
mozilla
/
dom
/
ClientOpPromise
.
h
"
#
include
"
mozilla
/
dom
/
ClientThing
.
h
"
#
include
"
mozilla
/
MozPromise
.
h
"
#
ifdef
XP_WIN
#
undef
PostMessage
#
endif
namespace
mozilla
{
namespace
dom
{
class
ClientManager
;
class
ClientHandleChild
;
class
ClientOpConstructorArgs
;
class
PClientManagerChild
;
class
ServiceWorkerDescriptor
;
namespace
ipc
{
class
StructuredCloneData
;
}
class
ClientHandle
final
:
public
ClientThing
<
ClientHandleChild
>
{
friend
class
ClientManager
;
friend
class
ClientHandleChild
;
RefPtr
<
ClientManager
>
mManager
;
nsCOMPtr
<
nsISerialEventTarget
>
mSerialEventTarget
;
ClientInfo
mClientInfo
;
~
ClientHandle
(
)
;
void
Shutdown
(
)
;
already_AddRefed
<
ClientOpPromise
>
StartOp
(
const
ClientOpConstructorArgs
&
aArgs
)
;
void
ExecutionReady
(
const
ClientInfo
&
aClientInfo
)
;
ClientHandle
(
ClientManager
*
aManager
nsISerialEventTarget
*
aSerialEventTarget
const
ClientInfo
&
aClientInfo
)
;
void
Activate
(
PClientManagerChild
*
aActor
)
;
public
:
const
ClientInfo
&
Info
(
)
const
;
RefPtr
<
GenericPromise
>
Control
(
const
ServiceWorkerDescriptor
&
aServiceWorker
)
;
RefPtr
<
ClientStatePromise
>
Focus
(
)
;
RefPtr
<
GenericPromise
>
PostMessage
(
ipc
:
:
StructuredCloneData
&
aData
const
ServiceWorkerDescriptor
&
aSource
)
;
NS_INLINE_DECL_REFCOUNTING
(
ClientHandle
)
;
}
;
}
}
#
endif
