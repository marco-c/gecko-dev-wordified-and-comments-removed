#
include
"
ClientOpenWindowOpActors
.
h
"
#
include
"
ClientOpenWindowOpChild
.
h
"
#
include
"
mozilla
/
dom
/
PClientOpenWindowOpParent
.
h
"
namespace
mozilla
{
namespace
dom
{
PClientOpenWindowOpChild
*
AllocClientOpenWindowOpChild
(
)
{
return
new
ClientOpenWindowOpChild
(
)
;
}
void
InitClientOpenWindowOpChild
(
PClientOpenWindowOpChild
*
aActor
const
ClientOpenWindowArgs
&
aArgs
)
{
auto
actor
=
static_cast
<
ClientOpenWindowOpChild
*
>
(
aActor
)
;
actor
-
>
Init
(
aArgs
)
;
}
bool
DeallocClientOpenWindowOpChild
(
PClientOpenWindowOpChild
*
aActor
)
{
delete
aActor
;
return
true
;
}
PClientOpenWindowOpParent
*
AllocClientOpenWindowOpParent
(
const
ClientOpenWindowArgs
&
aArgs
)
{
MOZ_CRASH
(
"
ClientOpenWindowOpParent
must
be
explicitly
allocated
"
)
;
return
nullptr
;
}
bool
DeallocClientOpenWindowOpParent
(
PClientOpenWindowOpParent
*
aActor
)
{
delete
aActor
;
return
true
;
}
}
}
