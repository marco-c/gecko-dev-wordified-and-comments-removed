#
ifndef
_mozilla_dom_ClientHandleParent_h
#
define
_mozilla_dom_ClientHandleParent_h
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
PClientHandleParent
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
namespace
mozilla
{
namespace
dom
{
class
ClientManagerService
;
class
ClientSourceParent
;
typedef
MozPromise
<
ClientSourceParent
*
CopyableErrorResult
false
>
SourcePromise
;
class
ClientHandleParent
final
:
public
PClientHandleParent
{
RefPtr
<
ClientManagerService
>
mService
;
ClientSourceParent
*
mSource
;
MozPromiseHolder
<
SourcePromise
>
mSourcePromiseHolder
;
MozPromiseRequestHolder
<
SourcePromise
>
mSourcePromiseRequestHolder
;
nsID
mClientId
;
PrincipalInfo
mPrincipalInfo
;
mozilla
:
:
ipc
:
:
IPCResult
RecvTeardown
(
)
override
;
void
ActorDestroy
(
ActorDestroyReason
aReason
)
override
;
PClientHandleOpParent
*
AllocPClientHandleOpParent
(
const
ClientOpConstructorArgs
&
aArgs
)
override
;
bool
DeallocPClientHandleOpParent
(
PClientHandleOpParent
*
aActor
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvPClientHandleOpConstructor
(
PClientHandleOpParent
*
aActor
const
ClientOpConstructorArgs
&
aArgs
)
override
;
public
:
ClientHandleParent
(
)
;
~
ClientHandleParent
(
)
;
void
Init
(
const
IPCClientInfo
&
aClientInfo
)
;
void
FoundSource
(
ClientSourceParent
*
aSource
)
;
ClientSourceParent
*
GetSource
(
)
const
;
RefPtr
<
SourcePromise
>
EnsureSource
(
)
;
}
;
}
}
#
endif
