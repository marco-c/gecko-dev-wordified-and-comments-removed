#
include
"
ClientHandleOpParent
.
h
"
#
include
"
ClientHandleParent
.
h
"
#
include
"
ClientSourceParent
.
h
"
namespace
mozilla
{
namespace
dom
{
ClientSourceParent
*
ClientHandleOpParent
:
:
GetSource
(
)
const
{
auto
handle
=
static_cast
<
ClientHandleParent
*
>
(
Manager
(
)
)
;
return
handle
-
>
GetSource
(
)
;
}
void
ClientHandleOpParent
:
:
ActorDestroy
(
ActorDestroyReason
aReason
)
{
mPromiseRequestHolder
.
DisconnectIfExists
(
)
;
}
void
ClientHandleOpParent
:
:
Init
(
const
ClientOpConstructorArgs
&
aArgs
)
{
ClientSourceParent
*
source
=
GetSource
(
)
;
if
(
!
source
)
{
Unused
<
<
PClientHandleOpParent
:
:
Send__delete__
(
this
NS_ERROR_DOM_ABORT_ERR
)
;
return
;
}
RefPtr
<
ClientOpPromise
>
p
=
source
-
>
StartOp
(
aArgs
)
;
p
-
>
Then
(
GetCurrentThreadSerialEventTarget
(
)
__func__
[
this
]
(
const
ClientOpResult
&
aResult
)
{
mPromiseRequestHolder
.
Complete
(
)
;
Unused
<
<
PClientHandleOpParent
:
:
Send__delete__
(
this
aResult
)
;
}
[
this
]
(
nsresult
aRv
)
{
mPromiseRequestHolder
.
Complete
(
)
;
Unused
<
<
PClientHandleOpParent
:
:
Send__delete__
(
this
aRv
)
;
}
)
-
>
Track
(
mPromiseRequestHolder
)
;
}
}
}
