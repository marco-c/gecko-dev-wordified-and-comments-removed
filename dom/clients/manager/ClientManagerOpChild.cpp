#
include
"
ClientManagerOpChild
.
h
"
#
include
"
mozilla
/
ipc
/
ProtocolUtils
.
h
"
namespace
mozilla
{
namespace
dom
{
void
ClientManagerOpChild
:
:
ActorDestroy
(
ActorDestroyReason
aReason
)
{
if
(
mPromise
)
{
mPromise
-
>
Reject
(
NS_ERROR_ABORT
__func__
)
;
mPromise
=
nullptr
;
}
}
mozilla
:
:
ipc
:
:
IPCResult
ClientManagerOpChild
:
:
Recv__delete__
(
const
ClientOpResult
&
aResult
)
{
if
(
aResult
.
type
(
)
=
=
ClientOpResult
:
:
Tnsresult
&
&
NS_FAILED
(
aResult
.
get_nsresult
(
)
)
)
{
mPromise
-
>
Reject
(
aResult
.
get_nsresult
(
)
__func__
)
;
mPromise
=
nullptr
;
return
IPC_OK
(
)
;
}
mPromise
-
>
Resolve
(
aResult
__func__
)
;
mPromise
=
nullptr
;
return
IPC_OK
(
)
;
}
ClientManagerOpChild
:
:
ClientManagerOpChild
(
const
ClientOpConstructorArgs
&
aArgs
ClientOpPromise
:
:
Private
*
aPromise
)
:
mPromise
(
aPromise
)
{
MOZ_DIAGNOSTIC_ASSERT
(
mPromise
)
;
}
ClientManagerOpChild
:
:
~
ClientManagerOpChild
(
)
{
MOZ_DIAGNOSTIC_ASSERT
(
!
mPromise
)
;
}
}
}
