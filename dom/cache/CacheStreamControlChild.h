#
ifndef
mozilla_dom_cache_CacheStreamControlChild_h
#
define
mozilla_dom_cache_CacheStreamControlChild_h
#
include
"
mozilla
/
dom
/
cache
/
ActorChild
.
h
"
#
include
"
mozilla
/
dom
/
cache
/
PCacheStreamControlChild
.
h
"
#
include
"
mozilla
/
dom
/
cache
/
StreamControl
.
h
"
#
include
"
nsTObserverArray
.
h
"
namespace
mozilla
{
namespace
ipc
{
class
AutoIPCStream
;
}
namespace
dom
{
namespace
cache
{
class
ReadStream
;
class
CacheStreamControlChild
final
:
public
PCacheStreamControlChild
public
StreamControl
public
ActorChild
{
friend
class
PCacheStreamControlChild
;
public
:
CacheStreamControlChild
(
)
;
~
CacheStreamControlChild
(
)
;
virtual
void
StartDestroy
(
)
override
;
virtual
void
SerializeControl
(
CacheReadStream
*
aReadStreamOut
)
override
;
virtual
void
SerializeStream
(
CacheReadStream
*
aReadStreamOut
nsIInputStream
*
aStream
nsTArray
<
UniquePtr
<
mozilla
:
:
ipc
:
:
AutoIPCStream
>
>
&
aStreamCleanupList
)
override
;
virtual
void
OpenStream
(
const
nsID
&
aId
InputStreamResolver
&
&
aResolver
)
override
;
private
:
virtual
void
NoteClosedAfterForget
(
const
nsID
&
aId
)
override
;
#
ifdef
DEBUG
virtual
void
AssertOwningThread
(
)
override
;
#
endif
virtual
void
ActorDestroy
(
ActorDestroyReason
aReason
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvClose
(
const
nsID
&
aId
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvCloseAll
(
)
;
bool
mDestroyStarted
;
bool
mDestroyDelayed
;
NS_DECL_OWNINGTHREAD
}
;
}
}
}
#
endif
