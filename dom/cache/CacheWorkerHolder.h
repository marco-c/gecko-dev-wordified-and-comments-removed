#
ifndef
mozilla_dom_cache_CacheWorkerHolder_h
#
define
mozilla_dom_cache_CacheWorkerHolder_h
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
mozilla
/
dom
/
WorkerHolder
.
h
"
namespace
mozilla
{
class
WorkerPrivate
;
namespace
dom
{
namespace
cache
{
class
ActorChild
;
class
CacheWorkerHolder
final
:
public
WorkerHolder
{
public
:
static
already_AddRefed
<
CacheWorkerHolder
>
Create
(
WorkerPrivate
*
aWorkerPrivate
Behavior
aBehavior
)
;
static
already_AddRefed
<
CacheWorkerHolder
>
PreferBehavior
(
CacheWorkerHolder
*
aCurrentHolder
Behavior
aBehavior
)
;
void
AddActor
(
ActorChild
*
aActor
)
;
void
RemoveActor
(
ActorChild
*
aActor
)
;
bool
Notified
(
)
const
;
virtual
bool
Notify
(
WorkerStatus
aStatus
)
override
;
private
:
explicit
CacheWorkerHolder
(
Behavior
aBehavior
)
;
~
CacheWorkerHolder
(
)
;
nsTArray
<
ActorChild
*
>
mActorList
;
bool
mNotified
;
public
:
NS_INLINE_DECL_REFCOUNTING
(
mozilla
:
:
dom
:
:
cache
:
:
CacheWorkerHolder
)
}
;
}
}
}
#
endif
