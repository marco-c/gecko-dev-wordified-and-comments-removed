#
ifndef
GPU_SwapChain_H_
#
define
GPU_SwapChain_H_
#
include
"
nsWrapperCache
.
h
"
#
include
"
ObjectModel
.
h
"
#
include
"
mozilla
/
webrender
/
WebRenderAPI
.
h
"
namespace
mozilla
{
namespace
dom
{
struct
GPUExtent3DDict
;
struct
GPUSwapChainDescriptor
;
}
namespace
webgpu
{
class
Device
;
class
Texture
;
class
SwapChain
final
:
public
ObjectBase
public
ChildOf
<
Device
>
{
public
:
GPU_DECL_CYCLE_COLLECTION
(
SwapChain
)
GPU_DECL_JS_WRAP
(
SwapChain
)
SwapChain
(
const
dom
:
:
GPUSwapChainDescriptor
&
aDesc
const
dom
:
:
GPUExtent3DDict
&
aExtent3D
wr
:
:
ExternalImageId
aExternalImageId
gfx
:
:
SurfaceFormat
aFormat
)
;
RefPtr
<
Device
>
GetParent
(
)
const
;
void
Destroy
(
wr
:
:
ExternalImageId
aExternalImageId
)
;
const
gfx
:
:
SurfaceFormat
mGfxFormat
;
const
uint8_t
mFormat
;
const
uint32_t
mUsage
;
const
nsIntSize
mSize
;
private
:
virtual
~
SwapChain
(
)
;
void
Cleanup
(
)
;
RefPtr
<
Texture
>
mTexture
;
public
:
RefPtr
<
Texture
>
GetCurrentTexture
(
)
;
}
;
}
}
#
endif
