#
ifndef
WEBGPU_TYPES_H_
#
define
WEBGPU_TYPES_H_
#
include
<
cstdint
>
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
namespace
mozilla
:
:
webgpu
{
using
RawId
=
uint64_t
;
using
BufferAddress
=
uint64_t
;
struct
ScopedError
{
bool
operationError
=
false
;
nsCString
validationMessage
;
}
;
using
MaybeScopedError
=
Maybe
<
ScopedError
>
;
enum
class
WebGPUCompilationMessageType
{
Error
Warning
Info
}
;
struct
WebGPUCompilationMessage
{
nsString
message
;
uint64_t
lineNum
=
0
;
uint64_t
linePos
=
0
;
uint64_t
offset
=
0
;
uint64_t
length
=
0
;
WebGPUCompilationMessageType
messageType
=
WebGPUCompilationMessageType
:
:
Error
;
}
;
class
StringHelper
{
public
:
explicit
StringHelper
(
const
dom
:
:
Optional
<
nsString
>
&
aWide
)
{
if
(
aWide
.
WasPassed
(
)
)
{
mNarrow
=
Some
(
NS_ConvertUTF16toUTF8
(
aWide
.
Value
(
)
)
)
;
}
}
const
nsACString
*
Get
(
)
const
{
if
(
mNarrow
.
isSome
(
)
)
{
return
mNarrow
.
ptr
(
)
;
}
return
nullptr
;
}
private
:
Maybe
<
NS_ConvertUTF16toUTF8
>
mNarrow
;
}
;
}
#
endif
