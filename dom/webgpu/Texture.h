#
ifndef
GPU_Texture_H_
#
define
GPU_Texture_H_
#
include
"
nsWrapperCache
.
h
"
#
include
"
ObjectModel
.
h
"
#
include
"
mozilla
/
webgpu
/
WebGPUTypes
.
h
"
#
include
"
mozilla
/
WeakPtr
.
h
"
namespace
mozilla
{
namespace
dom
{
struct
GPUTextureDescriptor
;
struct
GPUTextureViewDescriptor
;
class
HTMLCanvasElement
;
}
namespace
webgpu
{
namespace
ffi
{
struct
WGPUTextureViewDescriptor
;
}
class
Device
;
class
TextureView
;
class
Texture
final
:
public
ObjectBase
public
ChildOf
<
Device
>
{
public
:
GPU_DECL_CYCLE_COLLECTION
(
Texture
)
GPU_DECL_JS_WRAP
(
Texture
)
Texture
(
Device
*
const
aParent
RawId
aId
const
dom
:
:
GPUTextureDescriptor
&
aDesc
)
;
Device
*
GetParentDevice
(
)
{
return
mParent
;
}
const
RawId
mId
;
const
Maybe
<
uint8_t
>
mBytesPerBlock
;
WeakPtr
<
dom
:
:
HTMLCanvasElement
>
mTargetCanvasElement
;
private
:
virtual
~
Texture
(
)
;
void
Cleanup
(
)
;
public
:
already_AddRefed
<
TextureView
>
CreateView
(
const
dom
:
:
GPUTextureViewDescriptor
&
aDesc
)
;
void
Destroy
(
)
;
}
;
}
}
#
endif
