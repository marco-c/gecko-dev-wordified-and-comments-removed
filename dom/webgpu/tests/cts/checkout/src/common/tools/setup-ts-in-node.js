const
path
=
require
(
'
path
'
)
;
require
(
'
ts
-
node
'
)
.
register
(
{
project
:
path
.
resolve
(
__dirname
'
.
.
/
.
.
/
.
.
/
tsconfig
.
json
'
)
compilerOptions
:
{
module
:
'
commonjs
'
}
transpileOnly
:
true
}
)
;
const
Module
=
require
(
'
module
'
)
;
const
resolveFilename
=
Module
.
_resolveFilename
;
Module
.
_resolveFilename
=
(
request
parentModule
isMain
)
=
>
{
do
{
if
(
request
.
startsWith
(
'
.
'
)
&
&
parentModule
.
filename
.
endsWith
(
'
.
ts
'
)
)
{
if
(
request
.
endsWith
(
'
/
index
.
js
'
)
)
{
throw
new
Error
(
"
Avoid
the
name
index
.
js
;
we
don
'
t
have
Node
-
style
path
resolution
:
"
+
request
)
;
}
if
(
request
.
endsWith
(
'
.
node
'
)
)
{
break
;
}
if
(
!
request
.
endsWith
(
'
.
js
'
)
)
{
throw
new
Error
(
'
All
relative
imports
must
end
in
.
js
:
'
+
request
)
;
}
try
{
const
tsRequest
=
request
.
substring
(
0
request
.
length
-
'
.
js
'
.
length
)
+
'
.
ts
'
;
return
resolveFilename
.
call
(
this
tsRequest
parentModule
isMain
)
;
}
catch
(
ex
)
{
break
;
}
}
}
while
(
0
)
;
return
resolveFilename
.
call
(
this
request
parentModule
isMain
)
;
}
;
process
.
on
(
'
unhandledRejection
'
ex
=
>
{
throw
ex
;
}
)
;
