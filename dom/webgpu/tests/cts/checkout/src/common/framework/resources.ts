let
baseResourcePath
=
'
/
_mozilla
/
webgpu
/
resources
'
;
let
crossOriginHost
=
'
'
;
function
getAbsoluteBaseResourcePath
(
path
:
string
)
{
if
(
path
[
0
]
=
=
=
'
/
'
)
{
return
path
;
}
const
relparts
=
window
.
location
.
pathname
.
split
(
'
/
'
)
;
relparts
.
pop
(
)
;
const
pathparts
=
path
.
split
(
'
/
'
)
;
let
i
;
for
(
i
=
0
;
i
<
pathparts
.
length
;
+
+
i
)
{
switch
(
pathparts
[
i
]
)
{
case
'
'
:
break
;
case
'
.
'
:
break
;
case
'
.
.
'
:
relparts
.
pop
(
)
;
break
;
default
:
relparts
.
push
(
pathparts
[
i
]
)
;
break
;
}
}
return
relparts
.
join
(
'
/
'
)
;
}
function
runningOnLocalHost
(
)
:
boolean
{
const
hostname
=
window
.
location
.
hostname
;
return
hostname
=
=
=
'
localhost
'
|
|
hostname
=
=
=
'
127
.
0
.
0
.
1
'
|
|
hostname
=
=
=
'
:
:
1
'
;
}
export
function
getCrossOriginResourcePath
(
pathRelativeToResourcesDir
:
string
onlineUrl
=
'
'
)
{
if
(
crossOriginHost
!
=
=
'
'
)
{
return
(
crossOriginHost
+
getAbsoluteBaseResourcePath
(
baseResourcePath
)
+
'
/
'
+
pathRelativeToResourcesDir
)
;
}
if
(
runningOnLocalHost
(
)
)
{
let
crossOriginHostName
=
'
'
;
if
(
location
.
hostname
=
=
=
'
localhost
'
)
{
crossOriginHostName
=
'
http
:
/
/
127
.
0
.
0
.
1
'
;
}
else
{
crossOriginHostName
=
'
http
:
/
/
localhost
'
;
}
return
(
crossOriginHostName
+
'
:
'
+
location
.
port
+
getAbsoluteBaseResourcePath
(
baseResourcePath
)
+
'
/
'
+
pathRelativeToResourcesDir
)
;
}
return
onlineUrl
;
}
export
function
getResourcePath
(
pathRelativeToResourcesDir
:
string
)
{
return
baseResourcePath
+
'
/
'
+
pathRelativeToResourcesDir
;
}
export
function
setBaseResourcePath
(
path
:
string
)
{
baseResourcePath
=
path
;
}
export
function
setCrossOriginHost
(
host
:
string
)
{
crossOriginHost
=
host
;
}
