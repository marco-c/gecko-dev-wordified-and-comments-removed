import
{
assert
}
from
'
.
.
/
util
/
util
.
js
'
;
export
type
TestConfig
=
{
enableDebugLogs
:
boolean
;
maxSubcasesInFlight
:
number
;
subcasesBetweenAttemptingGC
:
number
;
testHeartbeatCallback
:
(
)
=
>
void
;
noRaceWithRejectOnTimeout
:
boolean
;
frameworkDebugLog
?
:
(
msg
:
string
)
=
>
void
;
unrollConstEvalLoops
:
boolean
;
compatibility
:
boolean
;
forceFallbackAdapter
:
boolean
;
enforceDefaultLimits
:
boolean
;
blockAllFeatures
:
boolean
;
logToWebSocket
:
boolean
;
}
;
export
const
globalTestConfig
:
TestConfig
=
{
enableDebugLogs
:
false
maxSubcasesInFlight
:
100
subcasesBetweenAttemptingGC
:
5000
testHeartbeatCallback
:
(
)
=
>
{
}
noRaceWithRejectOnTimeout
:
false
unrollConstEvalLoops
:
false
compatibility
:
false
forceFallbackAdapter
:
false
enforceDefaultLimits
:
false
blockAllFeatures
:
false
logToWebSocket
:
false
}
;
export
function
isCompatibilityDevice
(
device
:
GPUDevice
)
{
if
(
globalTestConfig
.
compatibility
)
{
assert
(
!
device
.
features
.
has
(
'
core
-
features
-
and
-
limits
'
)
)
;
}
return
globalTestConfig
.
compatibility
;
}
