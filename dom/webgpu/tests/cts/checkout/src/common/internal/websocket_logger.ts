let
connection
:
Promise
<
WebSocket
|
'
failed
'
>
|
WebSocket
|
'
failed
'
|
'
uninitialized
'
=
'
uninitialized
'
;
export
function
logToWebsocket
(
msg
:
string
)
{
if
(
connection
=
=
=
'
failed
'
)
{
return
;
}
if
(
connection
=
=
=
'
uninitialized
'
)
{
connection
=
new
Promise
(
resolve
=
>
{
if
(
typeof
WebSocket
=
=
=
'
undefined
'
)
{
resolve
(
'
failed
'
)
;
return
;
}
const
ws
=
new
WebSocket
(
'
ws
:
/
/
localhost
:
59497
/
optional_cts_websocket_logger
'
)
;
ws
.
onopen
=
(
)
=
>
{
resolve
(
ws
)
;
}
;
ws
.
onerror
=
(
)
=
>
{
connection
=
'
failed
'
;
resolve
(
'
failed
'
)
;
}
;
ws
.
onclose
=
(
)
=
>
{
connection
=
'
failed
'
;
resolve
(
'
failed
'
)
;
}
;
}
)
;
void
connection
.
then
(
resolved
=
>
{
connection
=
resolved
;
}
)
;
}
void
(
async
(
)
=
>
{
const
ws
=
await
connection
;
if
(
ws
!
=
=
'
failed
'
)
{
ws
.
send
(
msg
)
;
}
}
)
(
)
;
}
