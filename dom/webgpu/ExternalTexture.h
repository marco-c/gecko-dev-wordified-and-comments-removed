#
ifndef
ExternalTexture_H_
#
define
ExternalTexture_H_
#
include
"
mozilla
/
gfx
/
Point
.
h
"
#
include
"
mozilla
/
layers
/
LayersSurfaces
.
h
"
#
include
"
mozilla
/
webgpu
/
ffi
/
wgpu
.
h
"
namespace
mozilla
{
namespace
ipc
{
class
Shmem
;
}
namespace
webgpu
{
class
ExternalTexture
{
public
:
static
UniquePtr
<
ExternalTexture
>
Create
(
const
uint32_t
aWidth
const
uint32_t
aHeight
const
struct
ffi
:
:
WGPUTextureFormat
aFormat
)
;
ExternalTexture
(
const
uint32_t
aWidth
const
uint32_t
aHeight
const
struct
ffi
:
:
WGPUTextureFormat
aFormat
)
;
virtual
~
ExternalTexture
(
)
;
virtual
void
*
GetExternalTextureHandle
(
)
{
return
nullptr
;
}
virtual
Maybe
<
layers
:
:
SurfaceDescriptor
>
ToSurfaceDescriptor
(
)
=
0
;
virtual
void
GetSnapshot
(
const
ipc
:
:
Shmem
&
aDestShmem
const
gfx
:
:
IntSize
&
aSize
)
{
}
gfx
:
:
IntSize
GetSize
(
)
{
return
gfx
:
:
IntSize
(
mWidth
mHeight
)
;
}
void
SetTextureRaw
(
ffi
:
:
WGPUTextureRaw
*
aTextureRaw
)
;
ffi
:
:
WGPUTextureRaw
*
GetTextureRaw
(
)
{
return
mTextureRaw
;
}
const
uint32_t
mWidth
;
const
uint32_t
mHeight
;
const
struct
ffi
:
:
WGPUTextureFormat
mFormat
;
protected
:
ffi
:
:
WGPUTextureRaw
*
mTextureRaw
=
nullptr
;
}
;
}
}
#
endif
