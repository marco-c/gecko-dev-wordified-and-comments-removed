#
ifndef
GPU_INSTANCE_H_
#
define
GPU_INSTANCE_H_
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
ObjectModel
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Promise
;
struct
GPURequestAdapterOptions
;
}
namespace
webgpu
{
class
Adapter
;
class
GPUAdapter
;
class
WebGPUChild
;
class
Instance
final
:
public
nsWrapperCache
{
public
:
GPU_DECL_CYCLE_COLLECTION
(
Instance
)
GPU_DECL_JS_WRAP
(
Instance
)
static
RefPtr
<
Instance
>
Create
(
nsIGlobalObject
*
aOwner
)
;
already_AddRefed
<
dom
:
:
Promise
>
RequestAdapter
(
const
dom
:
:
GPURequestAdapterOptions
&
aOptions
ErrorResult
&
aRv
)
;
private
:
explicit
Instance
(
nsIGlobalObject
*
aOwner
WebGPUChild
*
aBridge
)
;
virtual
~
Instance
(
)
;
nsCOMPtr
<
nsIGlobalObject
>
mOwner
;
const
RefPtr
<
WebGPUChild
>
mBridge
;
public
:
nsIGlobalObject
*
GetParentObject
(
)
const
{
return
mOwner
.
get
(
)
;
}
RefPtr
<
WebGPUChild
>
GetBridge
(
)
const
;
}
;
}
}
#
endif
