#
ifndef
GPU_Error_H_
#
define
GPU_Error_H_
#
include
"
ObjectModel
.
h
"
#
include
"
js
/
Value
.
h
"
#
include
"
mozilla
/
WeakPtr
.
h
"
#
include
"
nsIGlobalObject
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
GlobalObject
;
}
namespace
webgpu
{
class
Error
:
public
nsWrapperCache
public
SupportsWeakPtr
{
protected
:
nsCOMPtr
<
nsIGlobalObject
>
mGlobal
;
nsString
mMessage
;
public
:
GPU_DECL_CYCLE_COLLECTION
(
Error
)
Error
(
nsIGlobalObject
*
const
aGlobal
const
nsAString
&
aMessage
)
;
Error
(
nsIGlobalObject
*
const
aGlobal
const
nsACString
&
aMessage
)
;
protected
:
virtual
~
Error
(
)
=
default
;
virtual
void
Cleanup
(
)
{
}
public
:
void
GetMessage
(
nsAString
&
aMessage
)
const
{
aMessage
=
mMessage
;
}
nsIGlobalObject
*
GetParentObject
(
)
const
{
return
mGlobal
;
}
virtual
JSObject
*
WrapObject
(
JSContext
*
JS
:
:
Handle
<
JSObject
*
>
)
=
0
;
}
;
}
}
#
endif
