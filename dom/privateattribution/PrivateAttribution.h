#
ifndef
mozilla_dom_PrivateAttribution_h
#
define
mozilla_dom_PrivateAttribution_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
{
class
ErrorResult
;
}
namespace
mozilla
:
:
dom
{
struct
PrivateAttributionImpressionOptions
;
struct
PrivateAttributionConversionOptions
;
class
PrivateAttribution
final
:
public
nsWrapperCache
{
public
:
NS_INLINE_DECL_CYCLE_COLLECTING_NATIVE_REFCOUNTING
(
PrivateAttribution
)
NS_DECL_CYCLE_COLLECTION_NATIVE_WRAPPERCACHE_CLASS
(
PrivateAttribution
)
explicit
PrivateAttribution
(
nsIGlobalObject
*
aGlobal
)
;
static
already_AddRefed
<
PrivateAttribution
>
Create
(
nsIGlobalObject
&
aGlobal
)
;
nsIGlobalObject
*
GetParentObject
(
)
const
{
return
mOwner
;
}
JSObject
*
WrapObject
(
JSContext
*
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
void
SaveImpression
(
const
PrivateAttributionImpressionOptions
&
ErrorResult
&
)
;
void
MeasureConversion
(
const
PrivateAttributionConversionOptions
&
ErrorResult
&
)
;
private
:
static
bool
ShouldRecord
(
)
;
[
[
nodiscard
]
]
bool
GetSourceHostIfNonPrivate
(
nsACString
&
ErrorResult
&
)
;
~
PrivateAttribution
(
)
;
nsCOMPtr
<
nsIGlobalObject
>
mOwner
;
}
;
}
#
endif
