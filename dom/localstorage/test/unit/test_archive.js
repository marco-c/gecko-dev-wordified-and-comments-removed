var
testGenerator
=
testSteps
(
)
;
function
*
testSteps
(
)
{
const
lsArchiveFile
=
"
storage
/
ls
-
archive
.
sqlite
"
;
const
principalInfo
=
{
url
:
"
http
:
/
/
example
.
com
"
attrs
:
{
}
}
;
function
checkStorage
(
)
{
let
principal
=
getPrincipal
(
principalInfo
.
url
principalInfo
.
attrs
)
;
let
storage
=
getLocalStorage
(
principal
)
;
try
{
storage
.
open
(
)
;
ok
(
true
"
Did
not
throw
"
)
;
}
catch
(
ex
)
{
ok
(
false
"
Should
not
have
thrown
"
)
;
}
}
info
(
"
Setting
pref
"
)
;
Services
.
prefs
.
setBoolPref
(
"
dom
.
storage
.
next_gen
"
true
)
;
info
(
"
Clearing
"
)
;
clear
(
continueToNextStepSync
)
;
yield
undefined
;
let
archiveFile
=
getRelativeFile
(
lsArchiveFile
)
;
archiveFile
.
create
(
Ci
.
nsIFile
.
DIRECTORY_TYPE
parseInt
(
"
0755
"
8
)
)
;
checkStorage
(
)
;
info
(
"
Clearing
"
)
;
clear
(
continueToNextStepSync
)
;
yield
undefined
;
let
ostream
=
Cc
[
"
mozilla
.
org
/
network
/
file
-
output
-
stream
;
1
"
]
.
createInstance
(
Ci
.
nsIFileOutputStream
)
;
ostream
.
init
(
archiveFile
-
1
parseInt
(
"
0644
"
8
)
0
)
;
ostream
.
write
(
"
foobar
"
6
)
;
ostream
.
close
(
)
;
checkStorage
(
)
;
info
(
"
Clearing
"
)
;
clear
(
continueToNextStepSync
)
;
yield
undefined
;
info
(
"
Installing
package
"
)
;
installPackage
(
"
archive_profile
"
)
;
let
fileSize
=
archiveFile
.
fileSize
;
ok
(
fileSize
>
0
"
archive
file
size
is
greater
than
zero
"
)
;
checkStorage
(
)
;
finishTest
(
)
;
}
