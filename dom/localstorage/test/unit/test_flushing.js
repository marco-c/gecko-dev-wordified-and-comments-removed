add_task
(
async
function
testSteps
(
)
{
const
principal1
=
getPrincipal
(
"
http
:
/
/
example1
.
com
"
)
;
const
usageFile1
=
getRelativeFile
(
"
storage
/
default
/
http
+
+
+
example1
.
com
/
ls
/
usage
"
)
;
const
principal2
=
getPrincipal
(
"
http
:
/
/
example2
.
com
"
)
;
const
data
=
{
key
:
"
foo
"
value
:
"
bar
"
}
;
const
flushSleepTimeSec
=
6
;
info
(
"
Setting
prefs
"
)
;
Services
.
prefs
.
setBoolPref
(
"
dom
.
storage
.
next_gen
"
true
)
;
info
(
"
Getting
storage
1
"
)
;
let
storage1
=
getLocalStorage
(
principal1
)
;
info
(
"
Adding
item
"
)
;
storage1
.
setItem
(
data
.
key
data
.
value
)
;
info
(
"
Creating
usage
as
a
directory
"
)
;
usageFile1
.
create
(
Ci
.
nsIFile
.
DIRECTORY_TYPE
parseInt
(
"
0755
"
8
)
)
;
info
(
"
Getting
storage
2
"
)
;
let
storage2
=
getLocalStorage
(
principal2
)
;
info
(
"
Adding
item
"
)
;
storage2
.
setItem
(
data
.
key
data
.
value
)
;
info
(
"
Sleeping
for
"
+
flushSleepTimeSec
+
"
seconds
to
let
all
flushes
"
+
"
finish
"
)
;
await
new
Promise
(
function
(
resolve
)
{
setTimeout
(
resolve
flushSleepTimeSec
*
1000
)
;
}
)
;
info
(
"
Resetting
"
)
;
let
request
=
reset
(
)
;
await
requestFinished
(
request
)
;
}
)
;
