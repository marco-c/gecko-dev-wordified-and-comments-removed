#
include
"
LocalStorageManager2
.
h
"
#
include
"
LSObject
.
h
"
namespace
mozilla
{
namespace
dom
{
LocalStorageManager2
:
:
LocalStorageManager2
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
NextGenLocalStorageEnabled
(
)
)
;
}
LocalStorageManager2
:
:
~
LocalStorageManager2
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
}
NS_IMPL_ISUPPORTS
(
LocalStorageManager2
nsIDOMStorageManager
)
NS_IMETHODIMP
LocalStorageManager2
:
:
PrecacheStorage
(
nsIPrincipal
*
aPrincipal
Storage
*
*
_retval
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
aPrincipal
)
;
MOZ_ASSERT
(
_retval
)
;
return
NS_ERROR_NOT_IMPLEMENTED
;
}
NS_IMETHODIMP
LocalStorageManager2
:
:
CreateStorage
(
mozIDOMWindow
*
aWindow
nsIPrincipal
*
aPrincipal
const
nsAString
&
aDocumentURI
bool
aPrivate
Storage
*
*
_retval
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
aPrincipal
)
;
MOZ_ASSERT
(
_retval
)
;
return
NS_ERROR_NOT_IMPLEMENTED
;
}
NS_IMETHODIMP
LocalStorageManager2
:
:
GetStorage
(
mozIDOMWindow
*
aWindow
nsIPrincipal
*
aPrincipal
bool
aPrivate
Storage
*
*
_retval
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
aPrincipal
)
;
MOZ_ASSERT
(
_retval
)
;
return
NS_ERROR_NOT_IMPLEMENTED
;
}
NS_IMETHODIMP
LocalStorageManager2
:
:
CloneStorage
(
Storage
*
aStorageToCloneFrom
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
aStorageToCloneFrom
)
;
return
NS_ERROR_NOT_IMPLEMENTED
;
}
NS_IMETHODIMP
LocalStorageManager2
:
:
CheckStorage
(
nsIPrincipal
*
aPrincipal
Storage
*
aStorage
bool
*
_retval
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
aPrincipal
)
;
MOZ_ASSERT
(
aStorage
)
;
MOZ_ASSERT
(
_retval
)
;
return
NS_ERROR_NOT_IMPLEMENTED
;
}
}
}
