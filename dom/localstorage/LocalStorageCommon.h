#
ifndef
mozilla_dom_localstorage_LocalStorageCommon_h
#
define
mozilla_dom_localstorage_LocalStorageCommon_h
#
include
<
cstdint
>
#
include
"
ErrorList
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
QuotaCommon
.
h
"
#
include
"
nsLiteralString
.
h
"
#
include
"
nsStringFwd
.
h
"
#
define
LS_TRY
QM_TRY
#
define
LS_TRY_UNWRAP
QM_TRY_UNWRAP
#
define
LS_TRY_INSPECT
QM_TRY_INSPECT
#
define
LS_TRY_RETURN
QM_TRY_RETURN
#
define
LS_FAIL
QM_FAIL
namespace
mozilla
{
class
LogModule
;
namespace
ipc
{
class
PrincipalInfo
;
}
namespace
dom
{
extern
const
char16_t
*
kLocalStorageType
;
class
MOZ_STACK_CLASS
LSNotifyInfo
{
bool
mChanged
;
nsString
mOldValue
;
public
:
LSNotifyInfo
(
)
:
mChanged
(
false
)
{
}
bool
changed
(
)
const
{
return
mChanged
;
}
bool
&
changed
(
)
{
return
mChanged
;
}
const
nsString
&
oldValue
(
)
const
{
return
mOldValue
;
}
nsString
&
oldValue
(
)
{
return
mOldValue
;
}
}
;
void
MaybeEnableNextGenLocalStorage
(
)
;
bool
NextGenLocalStorageEnabled
(
)
;
bool
CachedNextGenLocalStorageEnabled
(
)
;
Result
<
std
:
:
pair
<
nsCString
nsCString
>
nsresult
>
GenerateOriginKey2
(
const
mozilla
:
:
ipc
:
:
PrincipalInfo
&
aPrincipalInfo
)
;
LogModule
*
GetLocalStorageLogger
(
)
;
}
}
#
endif
