"
use
strict
"
;
const
kServiceContractID
=
"
mozilla
.
org
/
dom
/
push
/
test
/
PushServiceHandler
;
1
"
;
let
pushService
=
Cc
[
"
mozilla
.
org
/
push
/
Service
;
1
"
]
.
getService
(
Ci
.
nsIPushService
)
;
add_test
(
function
test_service_instantiation
(
)
{
do_load_manifest
(
"
PushServiceHandler
.
manifest
"
)
;
let
scope
=
"
test
-
scope
"
;
let
pushNotifier
=
Cc
[
"
mozilla
.
org
/
push
/
Notifier
;
1
"
]
.
getService
(
Ci
.
nsIPushNotifier
)
;
let
principal
=
Services
.
scriptSecurityManager
.
getSystemPrincipal
(
)
;
pushNotifier
.
notifyPush
(
scope
principal
)
;
let
handlerService
=
Cc
[
kServiceContractID
]
.
getService
(
Ci
.
nsISupports
)
.
wrappedJSObject
;
equal
(
handlerService
.
observed
.
length
1
)
;
equal
(
handlerService
.
observed
[
0
]
.
topic
pushService
.
pushTopic
)
;
equal
(
handlerService
.
observed
[
0
]
.
data
scope
)
;
pushNotifier
.
notifySubscriptionChange
(
scope
principal
)
;
equal
(
handlerService
.
observed
.
length
2
)
;
equal
(
handlerService
.
observed
[
1
]
.
topic
pushService
.
subscriptionChangeTopic
)
;
equal
(
handlerService
.
observed
[
1
]
.
data
scope
)
;
run_next_test
(
)
;
}
)
;
