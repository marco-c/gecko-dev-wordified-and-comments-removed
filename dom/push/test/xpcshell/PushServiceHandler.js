"
use
strict
"
;
const
{
ComponentUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
ComponentUtils
.
jsm
"
)
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
let
pushService
=
Cc
[
"
mozilla
.
org
/
push
/
Service
;
1
"
]
.
getService
(
Ci
.
nsIPushService
)
;
function
PushServiceHandler
(
)
{
this
.
wrappedJSObject
=
this
;
this
.
observed
=
[
]
;
Services
.
obs
.
addObserver
(
this
pushService
.
pushTopic
)
;
Services
.
obs
.
addObserver
(
this
pushService
.
subscriptionChangeTopic
)
;
Services
.
obs
.
addObserver
(
this
pushService
.
subscriptionModifiedTopic
)
;
}
PushServiceHandler
.
prototype
=
{
classID
:
Components
.
ID
(
"
{
bb7c5199
-
c0f7
-
4976
-
9f6d
-
1306e32c5591
}
"
)
QueryInterface
:
ChromeUtils
.
generateQI
(
[
]
)
observe
(
subject
topic
data
)
{
this
.
observed
.
push
(
{
subject
topic
data
}
)
;
}
}
;
this
.
NSGetFactory
=
ComponentUtils
.
generateNSGetFactory
(
[
PushServiceHandler
]
)
;
