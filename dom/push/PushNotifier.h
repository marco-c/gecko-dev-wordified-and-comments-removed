#
ifndef
mozilla_dom_PushNotifier_h
#
define
mozilla_dom_PushNotifier_h
#
include
"
nsIPushNotifier
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsIPrincipal
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
{
namespace
dom
{
class
PushNotifier
final
:
public
nsIPushNotifier
{
public
:
PushNotifier
(
)
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS
(
PushNotifier
nsIPushNotifier
)
NS_DECL_NSIPUSHNOTIFIER
private
:
virtual
~
PushNotifier
(
)
;
nsresult
NotifyPush
(
const
nsACString
&
aScope
nsIPrincipal
*
aPrincipal
const
nsAString
&
aMessageId
const
Maybe
<
nsTArray
<
uint8_t
>
>
&
aData
)
;
nsresult
DoNotifyObservers
(
nsISupports
*
aSubject
const
char
*
aTopic
const
nsACString
&
aScope
)
;
bool
ShouldNotifyWorkers
(
nsIPrincipal
*
aPrincipal
)
;
}
;
class
PushData
final
:
public
nsIPushData
{
public
:
explicit
PushData
(
const
nsTArray
<
uint8_t
>
&
aData
)
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS
(
PushData
nsIPushData
)
NS_DECL_NSIPUSHDATA
private
:
virtual
~
PushData
(
)
;
nsresult
EnsureDecodedText
(
)
;
nsTArray
<
uint8_t
>
mData
;
nsString
mDecodedText
;
}
;
class
PushMessage
final
:
public
nsIPushMessage
{
public
:
PushMessage
(
nsIPrincipal
*
aPrincipal
nsIPushData
*
aData
)
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS
(
PushMessage
nsIPushMessage
)
NS_DECL_NSIPUSHMESSAGE
private
:
virtual
~
PushMessage
(
)
;
nsCOMPtr
<
nsIPrincipal
>
mPrincipal
;
nsCOMPtr
<
nsIPushData
>
mData
;
}
;
}
}
#
endif
