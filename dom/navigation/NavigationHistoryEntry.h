#
ifndef
mozilla_dom_NavigationHistoryEntry_h___
#
define
mozilla_dom_NavigationHistoryEntry_h___
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
class
nsIGlobalObject
;
class
nsStructuredCloneContainer
;
namespace
mozilla
:
:
dom
{
class
SessionHistoryInfo
;
class
NavigationHistoryEntry
final
:
public
DOMEventTargetHelper
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
NavigationHistoryEntry
DOMEventTargetHelper
)
NavigationHistoryEntry
(
nsIGlobalObject
*
aGlobal
const
SessionHistoryInfo
*
aSHInfo
int64_t
aIndex
)
;
void
GetUrl
(
nsAString
&
aResult
)
const
;
void
GetKey
(
nsAString
&
aResult
)
const
;
void
GetId
(
nsAString
&
aResult
)
const
;
int64_t
Index
(
)
const
;
bool
SameDocument
(
)
const
;
void
GetState
(
JSContext
*
aCx
JS
:
:
MutableHandle
<
JS
:
:
Value
>
aResult
ErrorResult
&
aRv
)
const
;
void
SetState
(
nsStructuredCloneContainer
*
aState
)
;
IMPL_EVENT_HANDLER
(
dispose
)
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
bool
IsSameEntry
(
const
SessionHistoryInfo
*
aSHInfo
)
const
;
bool
SharesDocumentWith
(
const
SessionHistoryInfo
&
aSHInfo
)
const
;
const
nsID
&
Key
(
)
const
;
nsStructuredCloneContainer
*
GetNavigationState
(
)
const
;
void
ResetIndexForDisposal
(
)
;
private
:
~
NavigationHistoryEntry
(
)
;
Document
*
GetAssociatedDocument
(
)
const
;
bool
HasActiveDocument
(
)
const
;
UniquePtr
<
SessionHistoryInfo
>
mSHInfo
;
int64_t
mIndex
;
}
;
}
#
endif
