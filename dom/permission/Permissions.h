#
ifndef
mozilla_dom_Permissions_h_
#
define
mozilla_dom_Permissions_h_
#
include
"
nsISupports
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
mozilla
/
GlobalTeardownObserver
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
Promise
;
class
PermissionStatus
;
struct
PermissionSetParameters
;
class
Permissions
final
:
public
GlobalTeardownObserver
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_WRAPPERCACHE_CLASS
(
Permissions
)
explicit
Permissions
(
nsIGlobalObject
*
aGlobal
)
;
nsIGlobalObject
*
GetParentObject
(
)
const
{
return
GetOwnerGlobal
(
)
;
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
already_AddRefed
<
Promise
>
Query
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aPermission
ErrorResult
&
aRv
)
;
already_AddRefed
<
PermissionStatus
>
ParseSetParameters
(
JSContext
*
aCx
const
PermissionSetParameters
&
aParameters
ErrorResult
&
aRv
)
;
private
:
~
Permissions
(
)
;
}
;
}
}
#
endif
