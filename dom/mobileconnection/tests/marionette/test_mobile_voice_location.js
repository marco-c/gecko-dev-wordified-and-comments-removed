MARIONETTE_TIMEOUT
=
60000
;
MARIONETTE_HEAD_JS
=
"
head
.
js
"
;
function
verifyVoiceCellLocationInfo
(
aLac
aCid
)
{
let
cell
=
mobileConnection
.
voice
.
cell
;
ok
(
cell
"
location
available
"
)
;
is
(
cell
.
gsmLocationAreaCode
aLac
"
check
voice
.
cell
.
gsmLocationAreaCode
"
)
;
is
(
cell
.
gsmCellId
aCid
"
check
voice
.
cell
.
gsmCellId
"
)
;
}
function
testVoiceCellLocationUpdate
(
aLac
aCid
)
{
log
(
"
Test
cell
location
with
lac
=
"
+
aLac
+
"
and
cid
=
"
+
aCid
)
;
return
setEmulatorGsmLocationAndWait
(
aLac
aCid
true
false
)
.
then
(
(
)
=
>
verifyVoiceCellLocationInfo
(
aLac
aCid
)
)
;
}
startTestCommon
(
function
(
)
{
return
getEmulatorGsmLocation
(
)
.
then
(
function
(
aResult
)
{
log
(
"
Test
initial
voice
location
info
"
)
;
verifyVoiceCellLocationInfo
(
aResult
.
lac
aResult
.
cid
)
;
return
Promise
.
resolve
(
)
.
then
(
(
)
=
>
testVoiceCellLocationUpdate
(
100
100
)
)
.
then
(
(
)
=
>
testVoiceCellLocationUpdate
(
2000
2000
)
)
.
then
(
(
)
=
>
testVoiceCellLocationUpdate
(
aResult
.
lac
aResult
.
cid
)
)
;
}
)
;
}
)
;
