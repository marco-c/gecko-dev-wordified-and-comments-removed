#
ifndef
DOM_FS_FILESYSTEMFILEHANDLE_H_
#
define
DOM_FS_FILESYSTEMFILEHANDLE_H_
#
include
"
mozilla
/
dom
/
FileSystemHandle
.
h
"
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
struct
FileSystemCreateWritableOptions
;
class
FileSystemFileHandle
final
:
public
FileSystemHandle
{
public
:
FileSystemFileHandle
(
nsIGlobalObject
*
aGlobal
RefPtr
<
FileSystemActorHolder
>
&
aActor
const
fs
:
:
FileSystemEntryMetadata
&
aMetadata
fs
:
:
FileSystemRequestHandler
*
aRequestHandler
)
;
FileSystemFileHandle
(
nsIGlobalObject
*
aGlobal
RefPtr
<
FileSystemActorHolder
>
&
aActor
const
fs
:
:
FileSystemEntryMetadata
&
aMetadata
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
FileSystemFileHandle
FileSystemHandle
)
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
FileSystemHandleKind
Kind
(
)
const
override
;
already_AddRefed
<
Promise
>
GetFile
(
ErrorResult
&
aError
)
;
already_AddRefed
<
Promise
>
CreateWritable
(
const
FileSystemCreateWritableOptions
&
aOptions
ErrorResult
&
aError
)
;
already_AddRefed
<
Promise
>
CreateSyncAccessHandle
(
ErrorResult
&
aError
)
;
private
:
~
FileSystemFileHandle
(
)
=
default
;
}
;
}
}
#
endif
