#
ifndef
DOM_FS_FILESYSTEMTHREADSAFESTREAMOWNER_H_
#
define
DOM_FS_FILESYSTEMTHREADSAFESTREAMOWNER_H_
#
include
"
nsCOMPtr
.
h
"
class
nsIOutputStream
;
class
nsIRandomAccessStream
;
namespace
mozilla
:
:
dom
{
class
FileSystemWritableFileStream
;
namespace
fs
{
class
FileSystemThreadSafeStreamOwner
{
public
:
FileSystemThreadSafeStreamOwner
(
FileSystemWritableFileStream
*
aWritableFileStream
nsCOMPtr
<
nsIRandomAccessStream
>
&
&
aStream
)
;
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
FileSystemThreadSafeStreamOwner
)
nsresult
Truncate
(
uint64_t
aSize
)
;
nsresult
Seek
(
uint64_t
aPosition
)
;
void
Close
(
)
;
nsCOMPtr
<
nsIOutputStream
>
OutputStream
(
)
;
protected
:
virtual
~
FileSystemThreadSafeStreamOwner
(
)
=
default
;
private
:
#
ifdef
MOZ_DIAGNOSTIC_ASSERT_ENABLED
FileSystemWritableFileStream
*
MOZ_NON_OWNING_REF
mWritableFileStream
;
#
endif
nsCOMPtr
<
nsIRandomAccessStream
>
mStream
;
bool
mClosed
;
}
;
}
}
#
endif
