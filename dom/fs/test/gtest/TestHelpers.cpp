#
include
"
TestHelpers
.
h
"
#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
CommonMetadata
.
h
"
#
include
"
nsString
.
h
"
namespace
testing
:
:
internal
{
GTEST_API_
:
:
testing
:
:
AssertionResult
CmpHelperSTREQ
(
const
char
*
s1_expression
const
char
*
s2_expression
const
nsAString
&
s1
const
nsAString
&
s2
)
{
if
(
s1
.
Equals
(
s2
)
)
{
return
:
:
testing
:
:
AssertionSuccess
(
)
;
}
return
:
:
testing
:
:
internal
:
:
EqFailure
(
s1_expression
s2_expression
std
:
:
string
(
NS_ConvertUTF16toUTF8
(
s1
)
.
get
(
)
)
std
:
:
string
(
NS_ConvertUTF16toUTF8
(
s2
)
.
get
(
)
)
false
)
;
}
GTEST_API_
:
:
testing
:
:
AssertionResult
CmpHelperSTREQ
(
const
char
*
s1_expression
const
char
*
s2_expression
const
nsACString
&
s1
const
nsACString
&
s2
)
{
if
(
s1
.
Equals
(
s2
)
)
{
return
:
:
testing
:
:
AssertionSuccess
(
)
;
}
return
:
:
testing
:
:
internal
:
:
EqFailure
(
s1_expression
s2_expression
std
:
:
string
(
s1
)
std
:
:
string
(
s2
)
false
)
;
}
}
namespace
mozilla
:
:
dom
:
:
fs
:
:
test
{
quota
:
:
OriginMetadata
GetTestOriginMetadata
(
)
{
return
quota
:
:
OriginMetadata
{
"
"
_ns
"
example
.
com
"
_ns
"
http
:
/
/
example
.
com
"
_ns
"
http
:
/
/
example
.
com
"
_ns
false
quota
:
:
PERSISTENCE_TYPE_DEFAULT
}
;
}
quota
:
:
ClientMetadata
GetTestClientMetadata
(
)
{
return
quota
:
:
ClientMetadata
{
GetTestOriginMetadata
(
)
quota
:
:
Client
:
:
FILESYSTEM
}
;
}
const
Origin
&
GetTestOrigin
(
)
{
static
const
Origin
origin
=
"
http
:
/
/
example
.
com
"
_ns
;
return
origin
;
}
}
