#
include
"
FileSystemFileHandle
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
dom
/
FileSystemFileHandleBinding
.
h
"
#
include
"
mozilla
/
dom
/
FileSystemHandleBinding
.
h
"
#
include
"
mozilla
/
dom
/
Promise
.
h
"
namespace
mozilla
:
:
dom
{
NS_IMPL_ISUPPORTS_CYCLE_COLLECTION_INHERITED_0
(
FileSystemFileHandle
FileSystemHandle
)
NS_IMPL_CYCLE_COLLECTION_INHERITED
(
FileSystemFileHandle
FileSystemHandle
)
JSObject
*
FileSystemFileHandle
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
FileSystemFileHandle_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
FileSystemHandleKind
FileSystemFileHandle
:
:
Kind
(
)
{
return
FileSystemHandleKind
:
:
File
;
}
already_AddRefed
<
Promise
>
FileSystemFileHandle
:
:
GetFile
(
)
{
IgnoredErrorResult
rv
;
RefPtr
<
Promise
>
promise
=
Promise
:
:
Create
(
GetParentObject
(
)
rv
)
;
if
(
rv
.
Failed
(
)
)
{
return
nullptr
;
}
promise
-
>
MaybeReject
(
NS_ERROR_NOT_IMPLEMENTED
)
;
return
promise
.
forget
(
)
;
}
already_AddRefed
<
Promise
>
FileSystemFileHandle
:
:
CreateWritable
(
const
FileSystemCreateWritableOptions
&
aOptions
)
{
IgnoredErrorResult
rv
;
RefPtr
<
Promise
>
promise
=
Promise
:
:
Create
(
GetParentObject
(
)
rv
)
;
if
(
rv
.
Failed
(
)
)
{
return
nullptr
;
}
promise
-
>
MaybeReject
(
NS_ERROR_NOT_IMPLEMENTED
)
;
return
promise
.
forget
(
)
;
}
already_AddRefed
<
Promise
>
FileSystemFileHandle
:
:
CreateSyncAccessHandle
(
)
{
IgnoredErrorResult
rv
;
RefPtr
<
Promise
>
promise
=
Promise
:
:
Create
(
GetParentObject
(
)
rv
)
;
if
(
rv
.
Failed
(
)
)
{
return
nullptr
;
}
promise
-
>
MaybeReject
(
NS_ERROR_NOT_IMPLEMENTED
)
;
return
promise
.
forget
(
)
;
}
}
