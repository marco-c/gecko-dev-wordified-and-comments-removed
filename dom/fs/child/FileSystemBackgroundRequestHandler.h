#
ifndef
DOM_FS_CHILD_FILESYSTEMBACKGROUNDREQUESTHANDLER_H_
#
define
DOM_FS_CHILD_FILESYSTEMBACKGROUNDREQUESTHANDLER_H_
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
dom
/
FileSystemManagerChild
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
ForwardDecls
.
h
"
#
include
"
mozilla
/
ipc
/
PBackgroundChild
.
h
"
template
<
class
T
>
class
RefPtr
;
namespace
mozilla
{
namespace
ipc
{
class
PrincipalInfo
;
}
namespace
dom
{
namespace
fs
{
class
FileSystemChildFactory
;
}
class
FileSystemBackgroundRequestHandler
{
public
:
explicit
FileSystemBackgroundRequestHandler
(
fs
:
:
FileSystemChildFactory
*
aChildFactory
)
;
explicit
FileSystemBackgroundRequestHandler
(
RefPtr
<
FileSystemManagerChild
>
aFileSystemManagerChild
)
;
FileSystemBackgroundRequestHandler
(
)
;
NS_INLINE_DECL_REFCOUNTING
(
FileSystemBackgroundRequestHandler
)
void
ClearActor
(
)
;
void
Shutdown
(
)
;
const
RefPtr
<
FileSystemManagerChild
>
&
FileSystemManagerChildStrongRef
(
)
const
;
virtual
RefPtr
<
FileSystemManagerChild
:
:
ActorPromise
>
CreateFileSystemManagerChild
(
const
mozilla
:
:
ipc
:
:
PrincipalInfo
&
aPrincipalInfo
)
;
protected
:
virtual
~
FileSystemBackgroundRequestHandler
(
)
;
const
UniquePtr
<
fs
:
:
FileSystemChildFactory
>
mChildFactory
;
MozPromiseRequestHolder
<
mozilla
:
:
ipc
:
:
PBackgroundChild
:
:
CreateFileSystemManagerParentPromise
>
mCreateFileSystemManagerParentPromiseRequestHolder
;
MozPromiseHolder
<
FileSystemManagerChild
:
:
ActorPromise
>
mCreateFileSystemManagerChildPromiseHolder
;
RefPtr
<
FileSystemManagerChild
>
mFileSystemManagerChild
;
FlippedOnce
<
false
>
mShutdown
;
bool
mCreatingFileSystemManagerChild
;
}
;
}
}
#
endif
