#
include
"
FileSystemDirectoryIterator
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
dom
/
FileSystemDirectoryIteratorBinding
.
h
"
#
include
"
mozilla
/
dom
/
Promise
.
h
"
namespace
mozilla
:
:
dom
{
FileSystemDirectoryIterator
:
:
FileSystemDirectoryIterator
(
nsIGlobalObject
*
aGlobal
)
:
mGlobal
(
aGlobal
)
{
}
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
FileSystemDirectoryIterator
)
NS_WRAPPERCACHE_INTERFACE_MAP_ENTRY
NS_INTERFACE_MAP_ENTRY
(
nsISupports
)
NS_INTERFACE_MAP_END
NS_IMPL_CYCLE_COLLECTING_ADDREF
(
FileSystemDirectoryIterator
)
;
NS_IMPL_CYCLE_COLLECTING_RELEASE
(
FileSystemDirectoryIterator
)
;
NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE
(
FileSystemDirectoryIterator
mGlobal
)
;
nsIGlobalObject
*
FileSystemDirectoryIterator
:
:
GetParentObject
(
)
const
{
return
mGlobal
;
}
JSObject
*
FileSystemDirectoryIterator
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
FileSystemDirectoryIterator_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
already_AddRefed
<
Promise
>
FileSystemDirectoryIterator
:
:
Next
(
)
{
IgnoredErrorResult
rv
;
RefPtr
<
Promise
>
promise
=
Promise
:
:
Create
(
GetParentObject
(
)
rv
)
;
if
(
rv
.
Failed
(
)
)
{
return
nullptr
;
}
promise
-
>
MaybeReject
(
NS_ERROR_NOT_IMPLEMENTED
)
;
return
promise
.
forget
(
)
;
}
}
