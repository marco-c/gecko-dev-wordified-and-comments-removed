#
include
"
FileSystemQuotaClientImpl
.
h
"
#
include
"
datamodel
/
FileSystemDataManager
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
CommonMetadata
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
UsageInfo
.
h
"
namespace
mozilla
:
:
dom
:
:
fs
:
:
usage
{
Result
<
quota
:
:
UsageInfo
nsresult
>
GetUsageForOrigin
(
quota
:
:
PersistenceType
aPersistenceType
const
quota
:
:
OriginMetadata
&
aOriginMetadata
const
Atomic
<
bool
>
&
aCanceled
)
{
quota
:
:
AssertIsOnIOThread
(
)
;
auto
toNSResult
=
[
]
(
const
auto
&
aRv
)
{
return
aRv
.
NSResult
(
)
;
}
;
QM_TRY_UNWRAP
(
fs
:
:
data
:
:
FileSystemDataManager
*
dm
fs
:
:
data
:
:
FileSystemDataManager
:
:
CreateFileSystemDataManager
(
aOriginMetadata
.
mOrigin
)
.
mapErr
(
toNSResult
)
)
;
UniquePtr
<
fs
:
:
data
:
:
FileSystemDataManager
>
access
(
dm
)
;
QM_TRY_UNWRAP
(
int64_t
usage
access
-
>
GetUsage
(
)
.
mapErr
(
toNSResult
)
)
;
quota
:
:
UsageInfo
usageInfo
{
quota
:
:
DatabaseUsageType
(
Some
(
usage
)
)
}
;
return
usageInfo
;
}
nsresult
AboutToClearOrigins
(
const
Nullable
<
quota
:
:
PersistenceType
>
&
aPersistenceType
const
quota
:
:
OriginScope
&
aOriginScope
)
{
return
NS_OK
;
}
void
StartIdleMaintenance
(
)
{
}
void
StopIdleMaintenance
(
)
{
}
}
