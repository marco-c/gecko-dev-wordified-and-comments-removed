#
ifndef
DOM_FS_PARENT_DATAMODEL_FILESYSTEMDATABASEMANAGERVERSION002_H_
#
define
DOM_FS_PARENT_DATAMODEL_FILESYSTEMDATABASEMANAGERVERSION002_H_
#
include
"
FileSystemDatabaseManagerVersion001
.
h
"
namespace
mozilla
:
:
dom
:
:
fs
:
:
data
{
class
FileSystemDatabaseManagerVersion002
:
public
FileSystemDatabaseManagerVersion001
{
public
:
FileSystemDatabaseManagerVersion002
(
FileSystemDataManager
*
aDataManager
FileSystemConnection
&
&
aConnection
UniquePtr
<
FileSystemFileManager
>
&
&
aFileManager
const
EntryId
&
aRootEntry
)
:
FileSystemDatabaseManagerVersion001
(
aDataManager
std
:
:
move
(
aConnection
)
std
:
:
move
(
aFileManager
)
aRootEntry
)
{
}
static
nsresult
RescanTrackedUsages
(
const
FileSystemConnection
&
aConnection
const
quota
:
:
OriginMetadata
&
aOriginMetadata
)
;
static
Result
<
Usage
QMResult
>
GetFileUsage
(
const
FileSystemConnection
&
aConnection
)
;
Result
<
EntryId
QMResult
>
GetEntryId
(
const
FileSystemChildMetadata
&
aHandle
)
const
override
;
Result
<
EntryId
QMResult
>
GetEntryId
(
const
FileId
&
aFileId
)
const
override
;
Result
<
FileId
QMResult
>
EnsureFileId
(
const
EntryId
&
aEntryId
)
override
;
Result
<
FileId
QMResult
>
EnsureTemporaryFileId
(
const
EntryId
&
aEntryId
)
override
;
Result
<
FileId
QMResult
>
GetFileId
(
const
EntryId
&
aEntryId
)
const
override
;
nsresult
MergeFileId
(
const
EntryId
&
aEntryId
const
FileId
&
aFileId
bool
aAbort
)
override
;
Result
<
EntryId
QMResult
>
MoveEntry
(
const
FileSystemEntryMetadata
&
aHandle
const
FileSystemChildMetadata
&
aNewDesignation
)
override
;
Result
<
EntryId
QMResult
>
RenameEntry
(
const
FileSystemEntryMetadata
&
aHandle
const
Name
&
aNewName
)
override
;
protected
:
Result
<
Usage
QMResult
>
GetUsagesOfDescendants
(
const
EntryId
&
aEntryId
)
const
override
;
Result
<
nsTArray
<
FileId
>
QMResult
>
FindFilesUnderEntry
(
const
EntryId
&
aEntryId
)
const
override
;
Result
<
bool
QMResult
>
DoesFileIdExist
(
const
FileId
&
aFileId
)
const
override
;
nsresult
RemoveFileId
(
const
FileId
&
aFileId
)
override
;
}
;
}
#
endif
