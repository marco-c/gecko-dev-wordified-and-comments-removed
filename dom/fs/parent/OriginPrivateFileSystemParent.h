#
ifndef
DOM_FS_PARENT_ORIGINPRIVATEFILESYSTEMPARENT_H_
#
define
DOM_FS_PARENT_ORIGINPRIVATEFILESYSTEMPARENT_H_
#
include
"
ErrorList
.
h
"
#
include
"
mozilla
/
dom
/
PBackgroundFileSystemParent
.
h
"
#
include
"
mozilla
/
dom
/
POriginPrivateFileSystemParent
.
h
"
#
include
"
mozilla
/
TaskQueue
.
h
"
#
include
"
nsISupports
.
h
"
namespace
mozilla
{
extern
LazyLogModule
gOPFSLog
;
}
#
define
LOG
(
args
)
MOZ_LOG
(
mozilla
:
:
gOPFSLog
mozilla
:
:
LogLevel
:
:
Verbose
args
)
#
define
LOG_DEBUG
(
args
)
\
MOZ_LOG
(
mozilla
:
:
gOPFSLog
mozilla
:
:
LogLevel
:
:
Debug
args
)
namespace
mozilla
:
:
dom
:
:
fs
:
:
data
{
class
FileSystemDataManager
;
}
namespace
mozilla
:
:
dom
{
class
OriginPrivateFileSystemParent
:
public
POriginPrivateFileSystemParent
{
public
:
OriginPrivateFileSystemParent
(
TaskQueue
*
aTaskQueue
fs
:
:
data
:
:
FileSystemDataManager
*
aData
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGetDirectoryHandle
(
FileSystemGetHandleRequest
&
&
aRequest
GetDirectoryHandleResolver
&
&
aResolver
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGetFileHandle
(
FileSystemGetHandleRequest
&
&
aRequest
GetFileHandleResolver
&
&
aResolver
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGetFile
(
FileSystemGetFileRequest
&
&
aRequest
GetFileResolver
&
&
aResolver
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvResolve
(
FileSystemResolveRequest
&
&
aRequest
ResolveResolver
&
&
aResolver
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGetEntries
(
FileSystemGetEntriesRequest
&
&
aRequest
GetEntriesResolver
&
&
aResolver
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvRemoveEntry
(
FileSystemRemoveEntryRequest
&
&
aRequest
RemoveEntryResolver
&
&
aResolver
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvCloseFile
(
FileSystemGetFileRequest
&
&
aRequest
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGetAccessHandle
(
FileSystemGetFileRequest
&
&
aRequest
GetAccessHandleResolver
&
&
aResolver
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGetWritable
(
FileSystemGetFileRequest
&
&
aRequest
GetWritableResolver
&
&
aResolver
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvNeedQuota
(
FileSystemQuotaRequest
&
&
aRequest
NeedQuotaResolver
&
&
aResolver
)
;
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
OriginPrivateFileSystemParent
)
protected
:
virtual
~
OriginPrivateFileSystemParent
(
)
;
private
:
RefPtr
<
TaskQueue
>
mTaskQueue
;
UniquePtr
<
fs
:
:
data
:
:
FileSystemDataManager
>
mData
;
}
;
}
#
endif
