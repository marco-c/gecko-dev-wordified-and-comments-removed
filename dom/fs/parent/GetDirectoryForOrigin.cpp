#
include
"
GetDirectoryForOrigin
.
h
"
#
include
"
FileSystemHashSource
.
h
"
#
include
"
mozilla
/
Result
.
h
"
#
include
"
mozilla
/
ResultExtensions
.
h
"
#
include
"
mozilla
/
dom
/
QMResult
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
QuotaCommon
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
QuotaManager
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
ResultExtensions
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsDirectoryServiceDefs
.
h
"
#
include
"
nsIFile
.
h
"
namespace
mozilla
:
:
dom
:
:
fs
{
Result
<
nsCOMPtr
<
nsIFile
>
QMResult
>
GetDirectoryForOrigin
(
const
quota
:
:
QuotaManager
&
aQuotaManager
const
Origin
&
aOrigin
)
{
QM_TRY_UNWRAP
(
auto
directory
QM_TO_RESULT_TRANSFORM
(
quota
:
:
QM_NewLocalFile
(
aQuotaManager
.
GetBasePath
(
)
)
)
)
;
QM_TRY
(
QM_TO_RESULT
(
directory
-
>
Append
(
u
"
opfs
-
storage
"
_ns
)
)
)
;
QM_TRY_UNWRAP
(
auto
originHash
data
:
:
FileSystemHashSource
:
:
GenerateHash
(
"
parent
"
_ns
NS_ConvertUTF8toUTF16
(
aOrigin
)
)
)
;
QM_TRY_UNWRAP
(
auto
encodedOrigin
data
:
:
FileSystemHashSource
:
:
EncodeHash
(
originHash
)
)
;
QM_TRY
(
QM_TO_RESULT
(
directory
-
>
Append
(
encodedOrigin
)
)
)
;
return
directory
;
}
}
