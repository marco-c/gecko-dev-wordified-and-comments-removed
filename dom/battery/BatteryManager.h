#
ifndef
mozilla_dom_battery_BatteryManager_h
#
define
mozilla_dom_battery_BatteryManager_h
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
#
include
"
mozilla
/
HalBatteryInformation
.
h
"
namespace
mozilla
{
namespace
hal
{
class
BatteryInformation
;
}
namespace
dom
:
:
battery
{
class
BatteryManager
:
public
DOMEventTargetHelper
public
hal
:
:
BatteryObserver
{
public
:
explicit
BatteryManager
(
nsPIDOMWindowInner
*
aWindow
)
;
void
Init
(
)
;
void
Shutdown
(
)
;
void
Notify
(
const
hal
:
:
BatteryInformation
&
aBatteryInfo
)
override
;
nsPIDOMWindowInner
*
GetParentObject
(
)
const
{
return
GetOwner
(
)
;
}
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
bool
Charging
(
)
const
;
double
ChargingTime
(
)
const
;
double
DischargingTime
(
)
const
;
double
Level
(
)
const
;
IMPL_EVENT_HANDLER
(
chargingchange
)
IMPL_EVENT_HANDLER
(
chargingtimechange
)
IMPL_EVENT_HANDLER
(
dischargingtimechange
)
IMPL_EVENT_HANDLER
(
levelchange
)
private
:
void
UpdateFromBatteryInfo
(
const
hal
:
:
BatteryInformation
&
aBatteryInfo
)
;
double
mLevel
;
bool
mCharging
;
double
mRemainingTime
;
}
;
}
}
#
endif
