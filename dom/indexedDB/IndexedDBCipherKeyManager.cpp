#
include
"
IndexedDBCipherKeyManager
.
h
"
#
include
"
mozilla
/
dom
/
quota
/
QuotaCommon
.
h
"
namespace
mozilla
:
:
dom
:
:
indexedDB
{
Maybe
<
CipherKey
>
IndexedDBCipherKeyManager
:
:
Get
(
const
nsACString
&
aKeyId
)
{
auto
lockedCipherKeys
=
mCipherKeys
.
Lock
(
)
;
MOZ_ASSERT
(
!
mInvalidated
)
;
return
lockedCipherKeys
-
>
MaybeGet
(
aKeyId
)
;
}
CipherKey
IndexedDBCipherKeyManager
:
:
Ensure
(
const
nsACString
&
aKeyId
)
{
auto
lockedCipherKeys
=
mCipherKeys
.
Lock
(
)
;
MOZ_ASSERT
(
!
mInvalidated
)
;
return
lockedCipherKeys
-
>
LookupOrInsertWith
(
aKeyId
[
]
{
QM_TRY_RETURN
(
IndexedDBCipherStrategy
:
:
GenerateKey
(
)
[
]
(
const
auto
&
)
{
MOZ_RELEASE_ASSERT
(
false
)
;
return
CipherKey
{
}
;
}
)
;
}
)
;
}
bool
IndexedDBCipherKeyManager
:
:
Invalidated
(
)
{
auto
lockedCipherKeys
=
mCipherKeys
.
Lock
(
)
;
return
mInvalidated
;
}
void
IndexedDBCipherKeyManager
:
:
Invalidate
(
)
{
auto
lockedCipherKeys
=
mCipherKeys
.
Lock
(
)
;
mInvalidated
.
Flip
(
)
;
lockedCipherKeys
-
>
Clear
(
)
;
}
}
