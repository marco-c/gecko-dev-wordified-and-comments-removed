#
ifndef
mozilla_dom_indexeddb_actorsparent_h__
#
define
mozilla_dom_indexeddb_actorsparent_h__
#
include
"
nscore
.
h
"
#
include
<
stdint
.
h
>
#
include
"
mozilla
/
dom
/
indexedDB
/
PermissionRequestBase
.
h
"
#
include
"
mozilla
/
dom
/
PBrowserParent
.
h
"
template
<
class
>
struct
already_AddRefed
;
class
nsIPrincipal
;
namespace
mozilla
{
namespace
dom
{
class
Element
;
class
FileHandleThreadPool
;
namespace
quota
{
class
Client
;
}
namespace
indexedDB
{
class
FileManager
;
class
LoggingInfo
;
class
PBackgroundIDBFactoryParent
;
class
PBackgroundIndexedDBUtilsParent
;
PBackgroundIDBFactoryParent
*
AllocPBackgroundIDBFactoryParent
(
const
LoggingInfo
&
aLoggingInfo
)
;
bool
RecvPBackgroundIDBFactoryConstructor
(
PBackgroundIDBFactoryParent
*
aActor
const
LoggingInfo
&
aLoggingInfo
)
;
bool
DeallocPBackgroundIDBFactoryParent
(
PBackgroundIDBFactoryParent
*
aActor
)
;
PBackgroundIndexedDBUtilsParent
*
AllocPBackgroundIndexedDBUtilsParent
(
)
;
bool
DeallocPBackgroundIndexedDBUtilsParent
(
PBackgroundIndexedDBUtilsParent
*
aActor
)
;
bool
RecvFlushPendingFileDeletions
(
)
;
already_AddRefed
<
mozilla
:
:
dom
:
:
quota
:
:
Client
>
CreateQuotaClient
(
)
;
FileHandleThreadPool
*
GetFileHandleThreadPool
(
)
;
class
PermissionRequestHelper
final
:
public
PermissionRequestBase
{
public
:
PermissionRequestHelper
(
Element
*
aOwnerElement
nsIPrincipal
*
aPrincipal
PBrowserParent
:
:
IndexedDBPermissionRequestResolver
&
aResolver
)
:
PermissionRequestBase
(
aOwnerElement
aPrincipal
)
mResolver
(
aResolver
)
{
}
protected
:
~
PermissionRequestHelper
(
)
override
=
default
;
private
:
PBrowserParent
:
:
IndexedDBPermissionRequestResolver
mResolver
;
void
OnPromptComplete
(
PermissionValue
aPermissionValue
)
override
;
}
;
nsresult
AsyncDeleteFile
(
FileManager
*
aFileManager
int64_t
aFileId
)
;
}
}
}
#
endif
