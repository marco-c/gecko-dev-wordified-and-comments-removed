#
ifndef
mozilla_dom_indexeddb_actorsparent_h__
#
define
mozilla_dom_indexeddb_actorsparent_h__
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
PBrowserParent
.
h
"
#
include
"
nsIPermissionManager
.
h
"
class
nsIPrincipal
;
namespace
mozilla
:
:
dom
{
class
Element
;
class
FileHandleThreadPool
;
namespace
quota
{
class
Client
;
}
namespace
indexedDB
{
enum
class
PermissionValue
{
kPermissionAllowed
=
nsIPermissionManager
:
:
ALLOW_ACTION
kPermissionDenied
=
nsIPermissionManager
:
:
DENY_ACTION
kPermissionPrompt
=
nsIPermissionManager
:
:
PROMPT_ACTION
}
;
class
LoggingInfo
;
class
PBackgroundIDBFactoryParent
;
class
PBackgroundIndexedDBUtilsParent
;
already_AddRefed
<
PBackgroundIDBFactoryParent
>
AllocPBackgroundIDBFactoryParent
(
const
LoggingInfo
&
aLoggingInfo
const
nsACString
&
aSystemLocale
)
;
bool
RecvPBackgroundIDBFactoryConstructor
(
PBackgroundIDBFactoryParent
*
aActor
const
LoggingInfo
&
aLoggingInfo
const
nsACString
&
aSystemLocale
)
;
bool
DeallocPBackgroundIDBFactoryParent
(
PBackgroundIDBFactoryParent
*
aActor
)
;
PBackgroundIndexedDBUtilsParent
*
AllocPBackgroundIndexedDBUtilsParent
(
)
;
bool
DeallocPBackgroundIndexedDBUtilsParent
(
PBackgroundIndexedDBUtilsParent
*
aActor
)
;
bool
RecvFlushPendingFileDeletions
(
)
;
RefPtr
<
mozilla
:
:
dom
:
:
quota
:
:
Client
>
CreateQuotaClient
(
)
;
FileHandleThreadPool
*
GetFileHandleThreadPool
(
)
;
}
}
#
endif
