var
testGenerator
=
testSteps
(
)
;
function
*
testSteps
(
)
{
const
name
=
this
.
window
?
window
.
location
.
pathname
:
"
test_wasm_put_get_values
.
js
"
;
const
objectStoreName
=
"
Wasm
"
;
const
wasmData
=
{
key
:
1
value
:
null
}
;
if
(
!
isWasmSupported
(
)
)
{
finishTest
(
)
;
return
;
}
let
binary
=
new
Uint8Array
(
[
0
97
115
109
1
0
0
0
1
5
1
96
0
1
127
3
2
1
0
7
7
1
3
114
117
110
0
0
10
6
1
4
0
65
13
11
]
)
;
wasmData
.
value
=
getWasmModule
(
binary
)
;
info
(
"
Opening
database
"
)
;
let
request
=
indexedDB
.
open
(
name
)
;
request
.
onerror
=
errorHandler
;
request
.
onupgradeneeded
=
continueToNextStepSync
;
request
.
onsuccess
=
unexpectedSuccessHandler
;
yield
undefined
;
request
.
onupgradeneeded
=
unexpectedSuccessHandler
;
request
.
onsuccess
=
continueToNextStepSync
;
info
(
"
Creating
objectStore
"
)
;
request
.
result
.
createObjectStore
(
objectStoreName
)
;
yield
undefined
;
let
db
=
request
.
result
;
db
.
onerror
=
errorHandler
;
info
(
"
Testing
failure
to
store
wasm
"
)
;
let
objectStore
=
db
.
transaction
(
[
objectStoreName
]
"
readwrite
"
)
.
objectStore
(
objectStoreName
)
;
let
failed
=
false
;
try
{
objectStore
.
add
(
wasmData
.
value
wasmData
.
key
)
;
}
catch
(
err
)
{
failed
=
true
;
ok
(
err
instanceof
DOMException
"
caught
right
error
type
"
)
;
is
(
err
.
name
"
DataCloneError
"
"
caught
right
error
name
"
)
;
}
ok
(
failed
"
error
was
thrown
"
)
;
finishTest
(
)
;
}
