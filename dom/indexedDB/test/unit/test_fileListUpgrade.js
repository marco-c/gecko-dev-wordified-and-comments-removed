var
testGenerator
=
testSteps
(
)
;
function
*
testSteps
(
)
{
const
testName
=
"
fileListUpgrade
"
;
clearAllDatabases
(
continueToNextStepSync
)
;
yield
undefined
;
info
(
"
Installing
profile
"
)
;
installPackagedProfile
(
testName
+
"
_profile
"
)
;
info
(
"
Opening
existing
database
with
a
filelist
"
)
;
let
request
=
indexedDB
.
open
(
testName
)
;
request
.
onerror
=
errorHandler
;
request
.
onupgradeneeded
=
unexpectedSuccessHandler
;
request
.
onsuccess
=
grabEventAndContinueHandler
;
let
event
=
yield
undefined
;
info
(
"
Database
version
"
+
event
.
target
.
result
.
version
)
;
let
db
=
event
.
target
.
result
;
is
(
db
.
version
3
"
Correct
db
version
"
)
;
let
transaction
=
db
.
transaction
(
[
"
FileLists
"
]
)
;
transaction
.
oncomplete
=
grabEventAndContinueHandler
;
let
objectStore
=
transaction
.
objectStore
(
"
FileLists
"
)
;
request
=
objectStore
.
openCursor
(
)
;
request
.
onerror
=
errorHandler
;
request
.
onupgradeneeded
=
unexpectedSuccessHandler
;
var
cursorItems
=
0
;
const
expectedValues
=
new
Set
(
[
'
{
"
key
"
:
"
A
"
"
idx
"
:
0
"
fileList
"
:
{
"
0
"
:
{
}
"
1
"
:
{
}
"
2
"
:
{
}
}
"
blob
"
:
{
}
}
'
'
{
"
key
"
:
"
C
"
"
idx
"
:
2
"
fileList
"
:
{
"
0
"
:
{
}
"
1
"
:
{
}
"
2
"
:
{
}
}
"
blob
"
:
{
}
}
'
]
)
;
request
.
onsuccess
=
event
=
>
{
let
cursor
=
event
.
target
.
result
;
if
(
cursor
)
{
cursorItems
=
cursorItems
+
1
;
const
actualValue
=
JSON
.
stringify
(
cursor
.
value
)
;
ok
(
expectedValues
.
has
(
actualValue
)
"
Is
value
as
expected
?
"
)
;
cursor
.
continue
(
)
;
}
else
{
testGenerator
.
next
(
)
;
}
}
;
yield
undefined
;
is
(
cursorItems
expectedValues
.
size
"
Did
we
get
expected
number
of
items
?
"
)
;
finishTest
(
)
;
yield
undefined
;
}
