const
{
PrincipalUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
dom
/
quota
/
test
/
modules
/
PrincipalUtils
.
sys
.
mjs
"
)
;
const
{
IndexedDBUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
dom
/
indexedDB
/
test
/
modules
/
IndexedDBUtils
.
sys
.
mjs
"
)
;
async
function
testSteps
(
)
{
const
principal
=
PrincipalUtils
.
createPrincipal
(
"
https
:
/
/
example
.
com
"
)
;
const
name
=
"
multipleOpensInParallel
"
;
info
(
"
Opening
databases
"
)
;
{
const
startTime
=
Cu
.
now
(
)
;
const
openPromises
=
[
]
;
for
(
let
index
=
0
;
index
<
1000
;
index
+
+
)
{
const
request
=
indexedDB
.
openForPrincipal
(
principal
name
)
;
const
openPromise
=
IndexedDBUtils
.
requestFinished
(
request
)
;
openPromises
.
push
(
openPromise
)
;
}
const
databases
=
await
Promise
.
all
(
openPromises
)
;
for
(
const
database
of
databases
)
{
database
.
close
(
)
;
}
const
endTime
=
Cu
.
now
(
)
;
const
timeDelta
=
endTime
-
startTime
;
info
(
Opened
databases
in
{
timeDelta
}
msec
)
;
}
info
(
"
Deleting
database
"
)
;
{
const
startTime
=
Cu
.
now
(
)
;
const
request
=
indexedDB
.
deleteForPrincipal
(
principal
name
)
;
await
IndexedDBUtils
.
requestFinished
(
request
)
;
const
endTime
=
Cu
.
now
(
)
;
const
timeDelta
=
endTime
-
startTime
;
info
(
Deleted
database
in
{
timeDelta
}
msec
)
;
}
}
