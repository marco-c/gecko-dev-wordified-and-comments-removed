#
ifndef
mozilla_dom_indexeddb_fileinfot_h__
#
define
mozilla_dom_indexeddb_fileinfot_h__
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsCOMPtr
.
h
"
namespace
mozilla
{
namespace
dom
{
namespace
indexedDB
{
template
<
typename
FileManager
>
class
FileInfoT
final
{
public
:
using
AutoLock
=
typename
FileManager
:
:
AutoLock
;
FileInfoT
(
const
typename
FileManager
:
:
FileManagerGuard
&
aGuard
RefPtr
<
FileManager
>
aFileManager
const
int64_t
aFileId
const
nsrefcnt
aInitialDBRefCnt
=
0
)
;
void
AddRef
(
)
;
void
Release
(
const
bool
aSyncDeleteFile
=
false
)
;
void
UpdateDBRefs
(
int32_t
aDelta
)
;
void
GetReferences
(
int32_t
*
aRefCnt
int32_t
*
aDBRefCnt
)
;
FileManager
*
Manager
(
)
const
;
int64_t
Id
(
)
const
;
nsCOMPtr
<
nsIFile
>
GetFileForFileInfo
(
)
const
;
bool
LockedClearDBRefs
(
const
typename
FileManager
:
:
FileManagerGuard
&
aGuard
)
;
private
:
void
UpdateReferences
(
ThreadSafeAutoRefCnt
&
aRefCount
int32_t
aDelta
bool
aSyncDeleteFile
=
false
)
;
void
Cleanup
(
)
;
const
int64_t
mFileId
;
ThreadSafeAutoRefCnt
mRefCnt
;
ThreadSafeAutoRefCnt
mDBRefCnt
;
const
RefPtr
<
FileManager
>
mFileManager
;
}
;
}
}
}
#
endif
