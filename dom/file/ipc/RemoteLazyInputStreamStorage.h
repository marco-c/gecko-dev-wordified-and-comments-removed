#
ifndef
mozilla_dom_RemoteLazyInputStreamStorage_h
#
define
mozilla_dom_RemoteLazyInputStreamStorage_h
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsClassHashtable
.
h
"
#
include
"
nsIObserver
.
h
"
class
nsIInputStream
;
struct
nsID
;
namespace
mozilla
{
namespace
dom
{
class
RemoteLazyInputStreamParentCallback
;
class
RemoteLazyInputStreamStorage
final
:
public
nsIObserver
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIOBSERVER
static
void
Initialize
(
)
;
static
RemoteLazyInputStreamStorage
*
Get
(
)
;
void
AddStream
(
nsIInputStream
*
aInputStream
const
nsID
&
aID
uint64_t
aSize
uint64_t
aChildID
)
;
nsCOMPtr
<
nsIInputStream
>
ForgetStream
(
const
nsID
&
aID
)
;
bool
HasStream
(
const
nsID
&
aID
)
;
void
GetStream
(
const
nsID
&
aID
uint64_t
aStart
uint64_t
aLength
nsIInputStream
*
*
aInputStream
)
;
void
StoreCallback
(
const
nsID
&
aID
RemoteLazyInputStreamParentCallback
*
aCallback
)
;
already_AddRefed
<
RemoteLazyInputStreamParentCallback
>
TakeCallback
(
const
nsID
&
aID
)
;
private
:
RemoteLazyInputStreamStorage
(
)
=
default
;
~
RemoteLazyInputStreamStorage
(
)
=
default
;
struct
StreamData
{
nsCOMPtr
<
nsIInputStream
>
mInputStream
;
RefPtr
<
RemoteLazyInputStreamParentCallback
>
mCallback
;
uint64_t
mChildID
;
uint64_t
mSize
;
}
;
nsClassHashtable
<
nsIDHashKey
StreamData
>
mStorage
;
}
;
}
}
#
endif
