#
include
"
mozilla
/
dom
/
TextClause
.
h
"
#
include
"
mozilla
/
dom
/
TextClauseBinding
.
h
"
#
include
"
mozilla
/
TextEvents
.
h
"
namespace
mozilla
{
namespace
dom
{
NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE_0
(
TextClause
)
NS_IMPL_CYCLE_COLLECTING_ADDREF
(
TextClause
)
NS_IMPL_CYCLE_COLLECTING_RELEASE
(
TextClause
)
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
TextClause
)
NS_WRAPPERCACHE_INTERFACE_MAP_ENTRY
NS_INTERFACE_MAP_ENTRY
(
nsISupports
)
NS_INTERFACE_MAP_END
TextClause
:
:
TextClause
(
nsPIDOMWindowInner
*
aOwner
const
TextRange
&
aRange
const
TextRange
*
aTargetRange
)
:
mOwner
(
aOwner
)
mIsTargetClause
(
false
)
{
MOZ_ASSERT
(
aOwner
)
;
mStartOffset
=
aRange
.
mStartOffset
;
mEndOffset
=
aRange
.
mEndOffset
;
if
(
aRange
.
IsClause
(
)
)
{
mIsCaret
=
false
;
if
(
aTargetRange
&
&
aTargetRange
-
>
mStartOffset
=
=
mStartOffset
)
{
mIsTargetClause
=
true
;
}
}
else
{
mIsCaret
=
true
;
}
}
JSObject
*
TextClause
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
TextClause_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
TextClause
:
:
~
TextClause
(
)
=
default
;
}
}
