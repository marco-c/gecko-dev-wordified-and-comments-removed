#
ifndef
mozilla_PendingFullscreenEvent_h_
#
define
mozilla_PendingFullscreenEvent_h_
#
include
"
nsContentUtils
.
h
"
class
nsIDocument
;
namespace
mozilla
{
enum
class
FullscreenEventType
{
Change
Error
}
;
class
PendingFullscreenEvent
{
public
:
PendingFullscreenEvent
(
FullscreenEventType
aType
nsIDocument
*
aDoc
)
:
mDocument
(
aDoc
)
mType
(
aType
)
{
MOZ_ASSERT
(
aDoc
)
;
}
nsIDocument
*
Document
(
)
const
{
return
mDocument
;
}
void
Dispatch
(
)
{
#
ifdef
DEBUG
MOZ_ASSERT
(
!
mDispatched
)
;
mDispatched
=
true
;
#
endif
nsString
name
;
switch
(
mType
)
{
case
FullscreenEventType
:
:
Change
:
name
=
NS_LITERAL_STRING
(
"
fullscreenchange
"
)
;
break
;
case
FullscreenEventType
:
:
Error
:
name
=
NS_LITERAL_STRING
(
"
fullscreenerror
"
)
;
break
;
}
Unused
<
<
nsContentUtils
:
:
DispatchTrustedEvent
(
mDocument
mDocument
name
CanBubble
:
:
eYes
Cancelable
:
:
eNo
Composed
:
:
eYes
)
;
}
private
:
nsCOMPtr
<
nsIDocument
>
mDocument
;
FullscreenEventType
mType
;
#
ifdef
DEBUG
bool
mDispatched
=
false
;
#
endif
}
;
}
#
endif
