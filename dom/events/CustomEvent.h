#
ifndef
CustomEvent_h__
#
define
CustomEvent_h__
#
include
"
mozilla
/
dom
/
Event
.
h
"
namespace
mozilla
{
namespace
dom
{
struct
CustomEventInit
;
class
CustomEvent
final
:
public
Event
{
private
:
virtual
~
CustomEvent
(
)
;
JS
:
:
Heap
<
JS
:
:
Value
>
mDetail
;
public
:
explicit
CustomEvent
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
nsPresContext
*
aPresContext
=
nullptr
mozilla
:
:
WidgetEvent
*
aEvent
=
nullptr
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED
(
CustomEvent
Event
)
static
already_AddRefed
<
CustomEvent
>
Constructor
(
const
GlobalObject
&
aGlobal
const
nsAString
&
aType
const
CustomEventInit
&
aParam
)
;
virtual
JSObject
*
WrapObjectInternal
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
CustomEvent
*
AsCustomEvent
(
)
override
{
return
this
;
}
void
GetDetail
(
JSContext
*
aCx
JS
:
:
MutableHandle
<
JS
:
:
Value
>
aRetval
)
;
void
InitCustomEvent
(
JSContext
*
aCx
const
nsAString
&
aType
bool
aCanBubble
bool
aCancelable
JS
:
:
Handle
<
JS
:
:
Value
>
aDetail
)
;
}
;
}
}
already_AddRefed
<
mozilla
:
:
dom
:
:
CustomEvent
>
NS_NewDOMCustomEvent
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
nsPresContext
*
aPresContext
mozilla
:
:
WidgetEvent
*
aEvent
)
;
#
endif
