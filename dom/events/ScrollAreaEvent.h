#
ifndef
mozilla_dom_ScrollAreaEvent_h_
#
define
mozilla_dom_ScrollAreaEvent_h_
#
include
"
mozilla
/
dom
/
DOMRect
.
h
"
#
include
"
mozilla
/
dom
/
ScrollAreaEventBinding
.
h
"
#
include
"
mozilla
/
dom
/
UIEvent
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
EventForwards
.
h
"
namespace
mozilla
:
:
dom
{
class
ScrollAreaEvent
:
public
UIEvent
{
public
:
ScrollAreaEvent
(
EventTarget
*
aOwner
nsPresContext
*
aPresContext
InternalScrollAreaEvent
*
aEvent
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
ScrollAreaEvent
UIEvent
)
void
Serialize
(
IPC
:
:
MessageWriter
*
aWriter
bool
aSerializeInterfaceType
)
override
;
bool
Deserialize
(
IPC
:
:
MessageReader
*
aReader
)
override
;
virtual
JSObject
*
WrapObjectInternal
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
{
return
ScrollAreaEvent_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
float
X
(
)
const
{
return
mClientArea
-
>
Left
(
)
;
}
float
Y
(
)
const
{
return
mClientArea
-
>
Top
(
)
;
}
float
Width
(
)
const
{
return
mClientArea
-
>
Width
(
)
;
}
float
Height
(
)
const
{
return
mClientArea
-
>
Height
(
)
;
}
void
InitScrollAreaEvent
(
const
nsAString
&
aType
bool
aCanBubble
bool
aCancelable
nsGlobalWindowInner
*
aView
int32_t
aDetail
float
aX
float
aY
float
aWidth
float
aHeight
)
;
protected
:
~
ScrollAreaEvent
(
)
=
default
;
RefPtr
<
DOMRect
>
mClientArea
;
}
;
}
already_AddRefed
<
mozilla
:
:
dom
:
:
ScrollAreaEvent
>
NS_NewDOMScrollAreaEvent
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
nsPresContext
*
aPresContext
mozilla
:
:
InternalScrollAreaEvent
*
aEvent
)
;
#
endif
