#
ifndef
mozilla_dom_BeforeUnloadEvent_h_
#
define
mozilla_dom_BeforeUnloadEvent_h_
#
include
"
mozilla
/
dom
/
BeforeUnloadEventBinding
.
h
"
#
include
"
mozilla
/
dom
/
Event
.
h
"
namespace
mozilla
{
namespace
dom
{
class
BeforeUnloadEvent
:
public
Event
{
public
:
BeforeUnloadEvent
(
EventTarget
*
aOwner
nsPresContext
*
aPresContext
WidgetEvent
*
aEvent
)
:
Event
(
aOwner
aPresContext
aEvent
)
{
}
virtual
BeforeUnloadEvent
*
AsBeforeUnloadEvent
(
)
override
{
return
this
;
}
virtual
JSObject
*
WrapObjectInternal
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
{
return
BeforeUnloadEventBinding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
NS_DECL_ISUPPORTS_INHERITED
void
GetReturnValue
(
nsAString
&
aReturnValue
)
;
void
SetReturnValue
(
const
nsAString
&
aReturnValue
)
;
protected
:
~
BeforeUnloadEvent
(
)
{
}
nsString
mText
;
}
;
}
}
already_AddRefed
<
mozilla
:
:
dom
:
:
BeforeUnloadEvent
>
NS_NewDOMBeforeUnloadEvent
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
nsPresContext
*
aPresContext
mozilla
:
:
WidgetEvent
*
aEvent
)
;
#
endif
