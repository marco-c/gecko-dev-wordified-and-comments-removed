#
ifndef
mozilla_InputEventOptions_h
#
define
mozilla_InputEventOptions_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
TextEvents
.
h
"
#
include
"
mozilla
/
dom
/
DataTransfer
.
h
"
#
include
"
mozilla
/
dom
/
StaticRange
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
struct
MOZ_STACK_CLASS
InputEventOptions
final
{
InputEventOptions
(
)
=
default
;
explicit
InputEventOptions
(
const
InputEventOptions
&
aOther
)
=
delete
;
InputEventOptions
(
InputEventOptions
&
&
aOther
)
=
default
;
explicit
InputEventOptions
(
const
nsAString
&
aData
)
:
mData
(
aData
)
mDataTransfer
(
nullptr
)
{
}
explicit
InputEventOptions
(
dom
:
:
DataTransfer
*
aDataTransfer
)
:
mDataTransfer
(
aDataTransfer
)
{
MOZ_ASSERT
(
mDataTransfer
)
;
MOZ_ASSERT
(
mDataTransfer
-
>
IsReadOnly
(
)
)
;
}
InputEventOptions
(
const
nsAString
&
aData
OwningNonNullStaticRangeArray
&
&
aTargetRanges
)
:
mData
(
aData
)
mDataTransfer
(
nullptr
)
mTargetRanges
(
std
:
:
move
(
aTargetRanges
)
)
{
}
InputEventOptions
(
dom
:
:
DataTransfer
*
aDataTransfer
OwningNonNullStaticRangeArray
&
&
aTargetRanges
)
:
mDataTransfer
(
aDataTransfer
)
mTargetRanges
(
std
:
:
move
(
aTargetRanges
)
)
{
MOZ_ASSERT
(
mDataTransfer
)
;
MOZ_ASSERT
(
mDataTransfer
-
>
IsReadOnly
(
)
)
;
}
nsString
mData
;
dom
:
:
DataTransfer
*
mDataTransfer
;
OwningNonNullStaticRangeArray
mTargetRanges
;
}
;
}
#
endif
