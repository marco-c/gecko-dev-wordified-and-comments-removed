#
ifndef
nsXULPrototypeCache_h__
#
define
nsXULPrototypeCache_h__
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
nsJSThingHashtable
.
h
"
#
include
"
nsInterfaceHashtable
.
h
"
#
include
"
nsRefPtrHashtable
.
h
"
#
include
"
nsURIHashKey
.
h
"
#
include
"
nsXULPrototypeDocument
.
h
"
#
include
"
nsIInputStream
.
h
"
#
include
"
nsIStorageStream
.
h
"
#
include
"
mozilla
/
scache
/
StartupCache
.
h
"
class
nsIHandleReportCallback
;
namespace
mozilla
{
class
StyleSheet
;
}
class
nsXULPrototypeCache
:
public
nsIObserver
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIOBSERVER
bool
IsCached
(
nsIURI
*
aURI
)
{
return
GetPrototype
(
aURI
)
!
=
nullptr
;
}
void
AbortCaching
(
)
;
bool
IsEnabled
(
)
;
void
Flush
(
)
;
nsXULPrototypeDocument
*
GetPrototype
(
nsIURI
*
aURI
)
;
nsresult
PutPrototype
(
nsXULPrototypeDocument
*
aDocument
)
;
JSScript
*
GetScript
(
nsIURI
*
aURI
)
;
nsresult
PutScript
(
nsIURI
*
aURI
JS
:
:
Handle
<
JSScript
*
>
aScriptObject
)
;
mozilla
:
:
StyleSheet
*
GetStyleSheet
(
nsIURI
*
aURI
)
;
nsresult
PutStyleSheet
(
mozilla
:
:
StyleSheet
*
aStyleSheet
)
;
nsresult
WritePrototype
(
nsXULPrototypeDocument
*
aPrototypeDocument
)
;
nsresult
GetInputStream
(
nsIURI
*
aURI
nsIObjectInputStream
*
*
objectInput
)
;
nsresult
FinishInputStream
(
nsIURI
*
aURI
)
;
nsresult
GetOutputStream
(
nsIURI
*
aURI
nsIObjectOutputStream
*
*
objectOutput
)
;
nsresult
FinishOutputStream
(
nsIURI
*
aURI
)
;
nsresult
HasData
(
nsIURI
*
aURI
bool
*
exists
)
;
static
nsXULPrototypeCache
*
GetInstance
(
)
;
static
nsXULPrototypeCache
*
MaybeGetInstance
(
)
{
return
sInstance
;
}
static
void
ReleaseGlobals
(
)
{
NS_IF_RELEASE
(
sInstance
)
;
}
void
MarkInCCGeneration
(
uint32_t
aGeneration
)
;
void
MarkInGC
(
JSTracer
*
aTrc
)
;
void
FlushScripts
(
)
;
static
void
CollectMemoryReports
(
nsIHandleReportCallback
*
aHandleReport
nsISupports
*
aData
)
;
protected
:
friend
nsresult
NS_NewXULPrototypeCache
(
nsISupports
*
aOuter
REFNSIID
aIID
void
*
*
aResult
)
;
nsXULPrototypeCache
(
)
;
virtual
~
nsXULPrototypeCache
(
)
;
static
nsXULPrototypeCache
*
sInstance
;
using
StyleSheetTable
=
nsRefPtrHashtable
<
nsURIHashKey
mozilla
:
:
StyleSheet
>
;
nsRefPtrHashtable
<
nsURIHashKey
nsXULPrototypeDocument
>
mPrototypeTable
;
StyleSheetTable
mStyleSheetTable
;
nsJSThingHashtable
<
nsURIHashKey
JSScript
*
>
mScriptTable
;
nsTHashtable
<
nsURIHashKey
>
mStartupCacheURITable
;
nsInterfaceHashtable
<
nsURIHashKey
nsIStorageStream
>
mOutputStreamTable
;
nsInterfaceHashtable
<
nsURIHashKey
nsIObjectInputStream
>
mInputStreamTable
;
nsresult
BeginCaching
(
nsIURI
*
aDocumentURI
)
;
}
;
#
endif
