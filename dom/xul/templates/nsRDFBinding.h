#
ifndef
nsRDFBinding_h__
#
define
nsRDFBinding_h__
#
include
"
nsAtom
.
h
"
#
include
"
nsIRDFResource
.
h
"
#
include
"
nsISupportsImpl
.
h
"
class
nsXULTemplateResultRDF
;
class
nsBindingValues
;
class
RDFBinding
{
public
:
RefPtr
<
nsAtom
>
mSubjectVariable
;
nsCOMPtr
<
nsIRDFResource
>
mPredicate
;
RefPtr
<
nsAtom
>
mTargetVariable
;
bool
mHasDependency
;
RDFBinding
*
mNext
;
private
:
friend
class
RDFBindingSet
;
RDFBinding
(
nsAtom
*
aSubjectVariable
nsIRDFResource
*
aPredicate
nsAtom
*
aTargetVariable
)
:
mSubjectVariable
(
aSubjectVariable
)
mPredicate
(
aPredicate
)
mTargetVariable
(
aTargetVariable
)
mHasDependency
(
false
)
mNext
(
nullptr
)
{
MOZ_COUNT_CTOR
(
RDFBinding
)
;
}
~
RDFBinding
(
)
{
MOZ_COUNT_DTOR
(
RDFBinding
)
;
}
}
;
class
RDFBindingSet
final
{
private
:
~
RDFBindingSet
(
)
;
int32_t
mCount
;
RDFBinding
*
mFirst
;
public
:
RDFBindingSet
(
)
:
mCount
(
0
)
mFirst
(
nullptr
)
{
MOZ_COUNT_CTOR
(
RDFBindingSet
)
;
}
NS_INLINE_DECL_REFCOUNTING
(
RDFBindingSet
)
int32_t
Count
(
)
const
{
return
mCount
;
}
nsresult
AddBinding
(
nsAtom
*
aVar
nsAtom
*
aRef
nsIRDFResource
*
aPredicate
)
;
bool
SyncAssignments
(
nsIRDFResource
*
aSubject
nsIRDFResource
*
aPredicate
nsIRDFNode
*
aTarget
nsAtom
*
aMemberVariable
nsXULTemplateResultRDF
*
aResult
nsBindingValues
&
aBindingValues
)
;
void
AddDependencies
(
nsIRDFResource
*
aSubject
nsXULTemplateResultRDF
*
aResult
)
;
void
RemoveDependencies
(
nsIRDFResource
*
aSubject
nsXULTemplateResultRDF
*
aResult
)
;
int32_t
LookupTargetIndex
(
nsAtom
*
aTargetVariable
RDFBinding
*
*
aBinding
)
;
}
;
class
nsBindingValues
{
protected
:
RefPtr
<
RDFBindingSet
>
mBindings
;
nsCOMPtr
<
nsIRDFNode
>
*
mValues
;
public
:
nsBindingValues
(
)
:
mBindings
(
nullptr
)
mValues
(
nullptr
)
{
MOZ_COUNT_CTOR
(
nsBindingValues
)
;
}
~
nsBindingValues
(
)
;
void
ClearBindingSet
(
)
;
RDFBindingSet
*
GetBindingSet
(
)
{
return
mBindings
;
}
nsresult
SetBindingSet
(
RDFBindingSet
*
aBindings
)
;
nsCOMPtr
<
nsIRDFNode
>
*
ValuesArray
(
)
{
return
mValues
;
}
void
GetAssignmentFor
(
nsXULTemplateResultRDF
*
aResult
nsAtom
*
aVar
nsIRDFNode
*
*
aValue
)
;
void
RemoveDependencies
(
nsIRDFResource
*
aSubject
nsXULTemplateResultRDF
*
aResult
)
;
}
;
#
endif
