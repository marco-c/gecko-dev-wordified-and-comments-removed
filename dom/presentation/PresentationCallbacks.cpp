#
include
"
mozilla
/
dom
/
Promise
.
h
"
#
include
"
PresentationCallbacks
.
h
"
#
include
"
PresentationSession
.
h
"
using
namespace
mozilla
;
using
namespace
mozilla
:
:
dom
;
NS_IMPL_ISUPPORTS
(
PresentationRequesterCallback
nsIPresentationServiceCallback
)
PresentationRequesterCallback
:
:
PresentationRequesterCallback
(
nsPIDOMWindow
*
aWindow
const
nsAString
&
aUrl
const
nsAString
&
aSessionId
Promise
*
aPromise
)
:
mWindow
(
aWindow
)
mSessionId
(
aSessionId
)
mPromise
(
aPromise
)
{
MOZ_ASSERT
(
mWindow
)
;
MOZ_ASSERT
(
mPromise
)
;
MOZ_ASSERT
(
!
mSessionId
.
IsEmpty
(
)
)
;
}
PresentationRequesterCallback
:
:
~
PresentationRequesterCallback
(
)
{
}
NS_IMETHODIMP
PresentationRequesterCallback
:
:
NotifySuccess
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
nsRefPtr
<
PresentationSession
>
session
=
PresentationSession
:
:
Create
(
mWindow
mSessionId
PresentationSessionState
:
:
Connected
)
;
if
(
!
session
)
{
mPromise
-
>
MaybeReject
(
NS_ERROR_DOM_ABORT_ERR
)
;
return
NS_OK
;
}
mPromise
-
>
MaybeResolve
(
session
)
;
return
NS_OK
;
}
NS_IMETHODIMP
PresentationRequesterCallback
:
:
NotifyError
(
nsresult
aError
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
mPromise
-
>
MaybeReject
(
aError
)
;
return
NS_OK
;
}
