"
use
strict
"
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Messaging
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
NETWORKHELPER_CID
=
Components
.
ID
(
"
{
5fb96caa
-
6d49
-
4f6b
-
9a4b
-
65dd0d51f92d
}
"
)
;
function
PresentationNetworkHelper
(
)
{
}
PresentationNetworkHelper
.
prototype
=
{
classID
:
NETWORKHELPER_CID
QueryInterface
:
XPCOMUtils
.
generateQI
(
[
Ci
.
nsIPresentationNetworkHelper
]
)
getWifiIPAddress
:
function
(
aListener
)
{
EventDispatcher
.
instance
.
sendRequestForResult
(
{
type
:
"
Wifi
:
GetIPAddress
"
}
)
.
then
(
result
=
>
aListener
.
onGetWifiIPAddress
(
result
)
err
=
>
aListener
.
onError
(
err
)
)
;
}
}
;
this
.
NSGetFactory
=
XPCOMUtils
.
generateNSGetFactory
(
[
PresentationNetworkHelper
]
)
;
