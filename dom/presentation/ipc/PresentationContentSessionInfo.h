#
ifndef
mozilla_dom_PresentationContentSessionInfo_h
#
define
mozilla_dom_PresentationContentSessionInfo_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIPresentationSessionTransport
.
h
"
namespace
mozilla
{
namespace
dom
{
class
PresentationContentSessionInfo
final
:
public
nsIPresentationSessionTransportCallback
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIPRESENTATIONSESSIONTRANSPORTCALLBACK
PresentationContentSessionInfo
(
const
nsAString
&
aSessionId
uint8_t
aRole
nsIPresentationSessionTransport
*
aTransport
)
:
mSessionId
(
aSessionId
)
mRole
(
aRole
)
mTransport
(
aTransport
)
{
MOZ_ASSERT
(
XRE_IsContentProcess
(
)
)
;
MOZ_ASSERT
(
!
aSessionId
.
IsEmpty
(
)
)
;
MOZ_ASSERT
(
aRole
=
=
nsIPresentationService
:
:
ROLE_CONTROLLER
|
|
aRole
=
=
nsIPresentationService
:
:
ROLE_RECEIVER
)
;
MOZ_ASSERT
(
aTransport
)
;
}
nsresult
Init
(
)
;
nsresult
Send
(
const
nsAString
&
aData
)
;
nsresult
SendBinaryMsg
(
const
nsACString
&
aData
)
;
nsresult
SendBlob
(
Blob
*
aBlob
)
;
nsresult
Close
(
nsresult
aReason
)
;
private
:
virtual
~
PresentationContentSessionInfo
(
)
{
}
nsString
mSessionId
;
uint8_t
mRole
;
nsCOMPtr
<
nsIPresentationSessionTransport
>
mTransport
;
}
;
}
}
#
endif
