"
use
strict
"
;
const
{
EventDispatcher
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Messaging
.
jsm
"
)
;
function
PresentationNetworkHelper
(
)
{
}
PresentationNetworkHelper
.
prototype
=
{
QueryInterface
:
ChromeUtils
.
generateQI
(
[
Ci
.
nsIPresentationNetworkHelper
]
)
getWifiIPAddress
(
aListener
)
{
EventDispatcher
.
instance
.
sendRequestForResult
(
{
type
:
"
Wifi
:
GetIPAddress
"
}
)
.
then
(
result
=
>
aListener
.
onGetWifiIPAddress
(
result
)
err
=
>
aListener
.
onError
(
err
)
)
;
}
}
;
var
EXPORTED_SYMBOLS
=
[
"
PresentationNetworkHelper
"
]
;
