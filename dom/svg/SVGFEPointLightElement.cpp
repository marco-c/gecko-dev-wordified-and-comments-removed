#
include
"
mozilla
/
dom
/
SVGFEPointLightElement
.
h
"
#
include
"
mozilla
/
dom
/
SVGFEPointLightElementBinding
.
h
"
#
include
"
mozilla
/
SVGFilterInstance
.
h
"
NS_IMPL_NS_NEW_SVG_ELEMENT
(
FEPointLight
)
using
namespace
mozilla
:
:
gfx
;
namespace
mozilla
:
:
dom
{
JSObject
*
SVGFEPointLightElement
:
:
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
SVGFEPointLightElement_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
SVGElement
:
:
NumberInfo
SVGFEPointLightElement
:
:
sNumberInfo
[
3
]
=
{
{
nsGkAtoms
:
:
x
0
}
{
nsGkAtoms
:
:
y
0
}
{
nsGkAtoms
:
:
z
0
}
}
;
NS_IMPL_ELEMENT_CLONE_WITH_INIT
(
SVGFEPointLightElement
)
bool
SVGFEPointLightElement
:
:
AttributeAffectsRendering
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
)
const
{
return
aNameSpaceID
=
=
kNameSpaceID_None
&
&
(
aAttribute
=
=
nsGkAtoms
:
:
x
|
|
aAttribute
=
=
nsGkAtoms
:
:
y
|
|
aAttribute
=
=
nsGkAtoms
:
:
z
)
;
}
LightType
SVGFEPointLightElement
:
:
ComputeLightAttributes
(
SVGFilterInstance
*
aInstance
nsTArray
<
float
>
&
aFloatAttributes
)
{
Point3D
lightPos
;
GetAnimatedNumberValues
(
&
lightPos
.
x
&
lightPos
.
y
&
lightPos
.
z
nullptr
)
;
lightPos
=
aInstance
-
>
ConvertLocation
(
lightPos
)
;
aFloatAttributes
.
SetLength
(
kPointLightNumAttributes
)
;
aFloatAttributes
[
kPointLightPositionXIndex
]
=
lightPos
.
x
;
aFloatAttributes
[
kPointLightPositionYIndex
]
=
lightPos
.
y
;
aFloatAttributes
[
kPointLightPositionZIndex
]
=
lightPos
.
z
;
return
LightType
:
:
Point
;
}
already_AddRefed
<
DOMSVGAnimatedNumber
>
SVGFEPointLightElement
:
:
X
(
)
{
return
mNumberAttributes
[
ATTR_X
]
.
ToDOMAnimatedNumber
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedNumber
>
SVGFEPointLightElement
:
:
Y
(
)
{
return
mNumberAttributes
[
ATTR_Y
]
.
ToDOMAnimatedNumber
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedNumber
>
SVGFEPointLightElement
:
:
Z
(
)
{
return
mNumberAttributes
[
ATTR_Z
]
.
ToDOMAnimatedNumber
(
this
)
;
}
SVGElement
:
:
NumberAttributesInfo
SVGFEPointLightElement
:
:
GetNumberInfo
(
)
{
return
NumberAttributesInfo
(
mNumberAttributes
sNumberInfo
ArrayLength
(
sNumberInfo
)
)
;
}
}
