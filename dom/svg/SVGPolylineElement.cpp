#
include
"
mozilla
/
dom
/
SVGPolylineElement
.
h
"
#
include
"
mozilla
/
dom
/
SVGPolylineElementBinding
.
h
"
#
include
"
mozilla
/
dom
/
SVGAnimatedLength
.
h
"
#
include
"
mozilla
/
gfx
/
2D
.
h
"
using
namespace
mozilla
:
:
gfx
;
NS_IMPL_NS_NEW_SVG_ELEMENT
(
Polyline
)
namespace
mozilla
:
:
dom
{
JSObject
*
SVGPolylineElement
:
:
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
SVGPolylineElement_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
SVGPolylineElement
:
:
SVGPolylineElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
SVGPolylineElementBase
(
std
:
:
move
(
aNodeInfo
)
)
{
}
NS_IMPL_ELEMENT_CLONE_WITH_INIT
(
SVGPolylineElement
)
already_AddRefed
<
Path
>
SVGPolylineElement
:
:
BuildPath
(
PathBuilder
*
aBuilder
)
{
const
SVGPointList
&
points
=
mPoints
.
GetAnimValue
(
)
;
if
(
points
.
IsEmpty
(
)
)
{
return
nullptr
;
}
float
zoom
=
UserSpaceMetrics
:
:
GetZoom
(
this
)
;
aBuilder
-
>
MoveTo
(
points
[
0
]
*
zoom
)
;
for
(
uint32_t
i
=
1
;
i
<
points
.
Length
(
)
;
+
+
i
)
{
aBuilder
-
>
LineTo
(
points
[
i
]
*
zoom
)
;
}
return
aBuilder
-
>
Finish
(
)
;
}
}
