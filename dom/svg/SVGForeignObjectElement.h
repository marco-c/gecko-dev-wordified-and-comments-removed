#
ifndef
mozilla_dom_SVGForeignObjectElement_h
#
define
mozilla_dom_SVGForeignObjectElement_h
#
include
"
mozilla
/
dom
/
SVGGraphicsElement
.
h
"
#
include
"
nsCSSPropertyID
.
h
"
#
include
"
SVGAnimatedLength
.
h
"
nsresult
NS_NewSVGForeignObjectElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
;
class
nsSVGForeignObjectFrame
;
namespace
mozilla
{
namespace
dom
{
class
SVGForeignObjectElement
final
:
public
SVGGraphicsElement
{
friend
class
:
:
nsSVGForeignObjectFrame
;
protected
:
friend
nsresult
(
:
:
NS_NewSVGForeignObjectElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
)
;
explicit
SVGForeignObjectElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
;
virtual
JSObject
*
WrapNode
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
public
:
virtual
gfxMatrix
PrependLocalTransformsTo
(
const
gfxMatrix
&
aMatrix
SVGTransformTypes
aWhich
=
eAllTransforms
)
const
override
;
virtual
bool
HasValidDimensions
(
)
const
override
;
NS_IMETHOD_
(
bool
)
IsAttributeMapped
(
const
nsAtom
*
name
)
const
override
;
virtual
nsresult
Clone
(
dom
:
:
NodeInfo
*
nsINode
*
*
aResult
)
const
override
;
static
nsCSSPropertyID
GetCSSPropertyIdForAttrEnum
(
uint8_t
aAttrEnum
)
;
already_AddRefed
<
DOMSVGAnimatedLength
>
X
(
)
;
already_AddRefed
<
DOMSVGAnimatedLength
>
Y
(
)
;
already_AddRefed
<
DOMSVGAnimatedLength
>
Width
(
)
;
already_AddRefed
<
DOMSVGAnimatedLength
>
Height
(
)
;
protected
:
virtual
LengthAttributesInfo
GetLengthInfo
(
)
override
;
enum
{
ATTR_X
ATTR_Y
ATTR_WIDTH
ATTR_HEIGHT
}
;
SVGAnimatedLength
mLengthAttributes
[
4
]
;
static
LengthInfo
sLengthInfo
[
4
]
;
}
;
}
}
#
endif
