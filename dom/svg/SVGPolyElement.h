#
ifndef
DOM_SVG_SVGPOLYELEMENT_H_
#
define
DOM_SVG_SVGPOLYELEMENT_H_
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
SVGAnimatedPointList
.
h
"
#
include
"
SVGGeometryElement
.
h
"
namespace
mozilla
{
namespace
dom
{
class
DOMSVGPointList
;
typedef
SVGGeometryElement
SVGPolyElementBase
;
class
SVGPolyElement
:
public
SVGPolyElementBase
{
protected
:
explicit
SVGPolyElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
;
virtual
~
SVGPolyElement
(
)
=
default
;
public
:
NS_INLINE_DECL_REFCOUNTING_INHERITED
(
SVGPolyElement
SVGPolyElementBase
)
NS_IMETHOD_
(
bool
)
IsAttributeMapped
(
const
nsAtom
*
name
)
const
override
;
virtual
SVGAnimatedPointList
*
GetAnimatedPointList
(
)
override
{
return
&
mPoints
;
}
virtual
nsStaticAtom
*
GetPointListAttrName
(
)
const
override
{
return
nsGkAtoms
:
:
points
;
}
virtual
bool
HasValidDimensions
(
)
const
override
;
virtual
bool
AttributeDefinesGeometry
(
const
nsAtom
*
aName
)
override
;
virtual
bool
IsMarkable
(
)
override
{
return
true
;
}
virtual
void
GetMarkPoints
(
nsTArray
<
SVGMark
>
*
aMarks
)
override
;
virtual
bool
GetGeometryBounds
(
Rect
*
aBounds
const
StrokeOptions
&
aStrokeOptions
const
Matrix
&
aToBoundsSpace
const
Matrix
*
aToNonScalingStrokeSpace
=
nullptr
)
override
;
already_AddRefed
<
DOMSVGPointList
>
Points
(
)
;
already_AddRefed
<
DOMSVGPointList
>
AnimatedPoints
(
)
;
protected
:
SVGAnimatedPointList
mPoints
;
}
;
}
}
#
endif
