#
ifndef
mozilla_dom_SVGFEPointLightElement_h
#
define
mozilla_dom_SVGFEPointLightElement_h
#
include
"
SVGFilters
.
h
"
#
include
"
nsSVGNumber2
.
h
"
nsresult
NS_NewSVGFEPointLightElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
;
namespace
mozilla
{
namespace
dom
{
typedef
SVGFELightElement
SVGFEPointLightElementBase
;
class
SVGFEPointLightElement
:
public
SVGFEPointLightElementBase
{
friend
nsresult
(
:
:
NS_NewSVGFEPointLightElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
)
;
protected
:
explicit
SVGFEPointLightElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
SVGFEPointLightElementBase
(
std
:
:
move
(
aNodeInfo
)
)
{
}
virtual
JSObject
*
WrapNode
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
public
:
virtual
mozilla
:
:
gfx
:
:
LightType
ComputeLightAttributes
(
nsSVGFilterInstance
*
aInstance
nsTArray
<
float
>
&
aFloatAttributes
)
override
;
virtual
bool
AttributeAffectsRendering
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
)
const
override
;
virtual
nsresult
Clone
(
dom
:
:
NodeInfo
*
nsINode
*
*
aResult
)
const
override
;
already_AddRefed
<
DOMSVGAnimatedNumber
>
X
(
)
;
already_AddRefed
<
DOMSVGAnimatedNumber
>
Y
(
)
;
already_AddRefed
<
DOMSVGAnimatedNumber
>
Z
(
)
;
protected
:
virtual
NumberAttributesInfo
GetNumberInfo
(
)
override
;
enum
{
ATTR_X
ATTR_Y
ATTR_Z
}
;
nsSVGNumber2
mNumberAttributes
[
3
]
;
static
NumberInfo
sNumberInfo
[
3
]
;
}
;
}
}
#
endif
