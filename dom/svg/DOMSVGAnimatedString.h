#
ifndef
DOM_SVG_DOMSVGANIMATEDSTRING_H_
#
define
DOM_SVG_DOMSVGANIMATEDSTRING_H_
#
include
"
mozilla
/
SVGAnimatedClassOrString
.
h
"
#
include
"
mozilla
/
dom
/
SVGElement
.
h
"
namespace
mozilla
:
:
dom
{
class
OwningTrustedScriptURLOrString
;
class
TrustedScriptURLOrString
;
class
DOMSVGAnimatedString
final
:
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_NATIVE_CLASS
(
DOMSVGAnimatedString
)
NS_INLINE_DECL_CYCLE_COLLECTING_NATIVE_REFCOUNTING
(
DOMSVGAnimatedString
)
DOMSVGAnimatedString
(
SVGAnimatedClassOrString
*
aVal
SVGElement
*
aSVGElement
)
:
mVal
(
aVal
)
mSVGElement
(
aSVGElement
)
{
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
SVGElement
*
GetParentObject
(
)
const
{
return
mSVGElement
;
}
void
GetBaseVal
(
OwningTrustedScriptURLOrString
&
aResult
)
{
mVal
-
>
GetBaseValue
(
aResult
mSVGElement
)
;
}
MOZ_CAN_RUN_SCRIPT
void
SetBaseVal
(
const
TrustedScriptURLOrString
&
aValue
ErrorResult
&
aRv
)
{
RefPtr
<
SVGElement
>
svgElement
=
mSVGElement
;
mVal
-
>
SetBaseValue
(
aValue
svgElement
true
aRv
)
;
}
void
GetAnimVal
(
nsAString
&
aResult
)
{
mSVGElement
-
>
FlushAnimations
(
)
;
mVal
-
>
GetAnimValue
(
aResult
mSVGElement
)
;
}
private
:
~
DOMSVGAnimatedString
(
)
{
mVal
-
>
RemoveTearoff
(
)
;
}
SVGAnimatedClassOrString
*
mVal
;
RefPtr
<
SVGElement
>
mSVGElement
;
}
;
}
#
endif
