#
ifndef
mozilla_dom_SVGGraphicsElement_h
#
define
mozilla_dom_SVGGraphicsElement_h
#
include
"
mozilla
/
dom
/
SVGTests
.
h
"
#
include
"
mozilla
/
dom
/
SVGTransformableElement
.
h
"
namespace
mozilla
{
namespace
dom
{
typedef
SVGTransformableElement
SVGGraphicsElementBase
;
class
SVGGraphicsElement
:
public
SVGGraphicsElementBase
public
SVGTests
{
protected
:
explicit
SVGGraphicsElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
;
~
SVGGraphicsElement
(
)
=
default
;
public
:
NS_DECL_ISUPPORTS_INHERITED
bool
Autofocus
(
)
const
{
return
GetBoolAttr
(
nsGkAtoms
:
:
autofocus
)
;
}
void
SetAutofocus
(
bool
aAutofocus
)
{
SetBoolAttr
(
nsGkAtoms
:
:
autofocus
aAutofocus
)
;
}
bool
IsFocusableInternal
(
int32_t
*
aTabIndex
bool
aWithMouse
)
override
;
nsresult
BindToTree
(
BindContext
&
nsINode
&
aParent
)
override
;
SVGElement
*
AsSVGElement
(
)
final
{
return
this
;
}
protected
:
bool
IsSVGFocusable
(
bool
*
aIsFocusable
int32_t
*
aTabIndex
)
;
template
<
typename
T
>
bool
IsInLengthInfo
(
const
nsAtom
*
aAttribute
const
T
&
aLengthInfos
)
const
{
for
(
auto
const
&
e
:
aLengthInfos
)
{
if
(
e
.
mName
=
=
aAttribute
)
{
return
true
;
}
}
return
false
;
}
}
;
}
}
#
endif
