#
ifndef
DOM_SVG_DOMSVGANGLE_H_
#
define
DOM_SVG_DOMSVGANGLE_H_
#
include
"
nsWrapperCache
.
h
"
#
include
"
SVGElement
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
namespace
mozilla
{
class
SVGAnimatedOrient
;
namespace
dom
{
class
SVGSVGElement
;
class
DOMSVGAngle
final
:
public
nsWrapperCache
{
public
:
enum
class
AngleType
:
int8_t
{
BaseValue
AnimValue
CreatedValue
}
;
NS_INLINE_DECL_CYCLE_COLLECTING_NATIVE_REFCOUNTING
(
DOMSVGAngle
)
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_NATIVE_CLASS
(
DOMSVGAngle
)
DOMSVGAngle
(
SVGAnimatedOrient
*
aVal
SVGElement
*
aSVGElement
AngleType
aType
)
:
mVal
(
aVal
)
mSVGElement
(
aSVGElement
)
mType
(
aType
)
{
}
explicit
DOMSVGAngle
(
SVGSVGElement
*
aSVGElement
)
;
SVGElement
*
GetParentObject
(
)
{
return
mSVGElement
;
}
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
uint16_t
UnitType
(
)
const
;
float
Value
(
)
const
;
void
GetValueAsString
(
nsAString
&
aValue
)
;
void
SetValue
(
float
aValue
ErrorResult
&
rv
)
;
float
ValueInSpecifiedUnits
(
)
const
;
void
SetValueInSpecifiedUnits
(
float
aValue
ErrorResult
&
rv
)
;
void
SetValueAsString
(
const
nsAString
&
aValue
ErrorResult
&
rv
)
;
void
NewValueSpecifiedUnits
(
uint16_t
unitType
float
value
ErrorResult
&
rv
)
;
void
ConvertToSpecifiedUnits
(
uint16_t
unitType
ErrorResult
&
rv
)
;
protected
:
~
DOMSVGAngle
(
)
;
SVGAnimatedOrient
*
mVal
;
RefPtr
<
SVGElement
>
mSVGElement
;
AngleType
mType
;
}
;
}
}
#
endif
