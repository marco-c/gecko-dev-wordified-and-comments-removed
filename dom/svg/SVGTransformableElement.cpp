#
include
"
SVGTransformableElement
.
h
"
#
include
"
DOMSVGAnimatedTransformList
.
h
"
#
include
"
nsContentUtils
.
h
"
#
include
"
nsIFrame
.
h
"
using
namespace
mozilla
:
:
gfx
;
namespace
mozilla
:
:
dom
{
already_AddRefed
<
DOMSVGAnimatedTransformList
>
SVGTransformableElement
:
:
Transform
(
)
{
return
DOMSVGAnimatedTransformList
:
:
GetDOMWrapper
(
GetAnimatedTransformList
(
DO_ALLOCATE
)
this
)
;
}
bool
SVGTransformableElement
:
:
IsAttributeMapped
(
const
nsAtom
*
aAttribute
)
const
{
return
aAttribute
=
=
nsGkAtoms
:
:
transform
|
|
SVGElement
:
:
IsAttributeMapped
(
aAttribute
)
;
}
bool
SVGTransformableElement
:
:
IsEventAttributeNameInternal
(
nsAtom
*
aName
)
{
return
nsContentUtils
:
:
IsEventAttributeName
(
aName
EventNameType_SVGGraphic
)
;
}
const
gfx
:
:
Matrix
*
SVGTransformableElement
:
:
GetAnimateMotionTransform
(
)
const
{
return
mAnimateMotionTransform
.
get
(
)
;
}
void
SVGTransformableElement
:
:
SetAnimateMotionTransform
(
const
gfx
:
:
Matrix
*
aMatrix
)
{
if
(
(
!
aMatrix
&
&
!
mAnimateMotionTransform
)
|
|
(
aMatrix
&
&
mAnimateMotionTransform
&
&
aMatrix
-
>
FuzzyEquals
(
*
mAnimateMotionTransform
)
)
)
{
return
;
}
mAnimateMotionTransform
=
aMatrix
?
MakeUnique
<
gfx
:
:
Matrix
>
(
*
aMatrix
)
:
nullptr
;
DidAnimateTransformList
(
)
;
nsIFrame
*
frame
=
GetPrimaryFrame
(
)
;
if
(
frame
)
{
frame
-
>
SchedulePaint
(
)
;
}
}
SVGAnimatedTransformList
*
SVGTransformableElement
:
:
GetAnimatedTransformList
(
uint32_t
aFlags
)
{
if
(
!
mTransforms
&
&
(
aFlags
&
DO_ALLOCATE
)
)
{
mTransforms
=
MakeUnique
<
SVGAnimatedTransformList
>
(
)
;
}
return
mTransforms
.
get
(
)
;
}
}
