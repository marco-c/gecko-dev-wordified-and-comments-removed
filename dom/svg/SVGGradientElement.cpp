#
include
"
mozilla
/
dom
/
SVGGradientElement
.
h
"
#
include
"
DOMSVGAnimatedTransformList
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
ArrayUtils
.
h
"
#
include
"
mozilla
/
dom
/
SVGElement
.
h
"
#
include
"
mozilla
/
dom
/
SVGGradientElementBinding
.
h
"
#
include
"
mozilla
/
dom
/
SVGLengthBinding
.
h
"
#
include
"
mozilla
/
dom
/
SVGLinearGradientElementBinding
.
h
"
#
include
"
mozilla
/
dom
/
SVGRadialGradientElementBinding
.
h
"
#
include
"
mozilla
/
dom
/
SVGUnitTypesBinding
.
h
"
#
include
"
nsGkAtoms
.
h
"
NS_IMPL_NS_NEW_SVG_ELEMENT
(
LinearGradient
)
NS_IMPL_NS_NEW_SVG_ELEMENT
(
RadialGradient
)
namespace
mozilla
:
:
dom
{
using
namespace
SVGGradientElement_Binding
;
using
namespace
SVGUnitTypes_Binding
;
SVGEnumMapping
SVGGradientElement
:
:
sSpreadMethodMap
[
]
=
{
{
nsGkAtoms
:
:
pad
SVG_SPREADMETHOD_PAD
}
{
nsGkAtoms
:
:
reflect
SVG_SPREADMETHOD_REFLECT
}
{
nsGkAtoms
:
:
repeat
SVG_SPREADMETHOD_REPEAT
}
{
nullptr
0
}
}
;
SVGElement
:
:
EnumInfo
SVGGradientElement
:
:
sEnumInfo
[
2
]
=
{
{
nsGkAtoms
:
:
gradientUnits
sSVGUnitTypesMap
SVG_UNIT_TYPE_OBJECTBOUNDINGBOX
}
{
nsGkAtoms
:
:
spreadMethod
sSpreadMethodMap
SVG_SPREADMETHOD_PAD
}
}
;
SVGElement
:
:
StringInfo
SVGGradientElement
:
:
sStringInfo
[
2
]
=
{
{
nsGkAtoms
:
:
href
kNameSpaceID_None
true
}
{
nsGkAtoms
:
:
href
kNameSpaceID_XLink
true
}
}
;
SVGGradientElement
:
:
SVGGradientElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
SVGGradientElementBase
(
std
:
:
move
(
aNodeInfo
)
)
{
}
SVGElement
:
:
EnumAttributesInfo
SVGGradientElement
:
:
GetEnumInfo
(
)
{
return
EnumAttributesInfo
(
mEnumAttributes
sEnumInfo
std
:
:
size
(
sEnumInfo
)
)
;
}
SVGElement
:
:
StringAttributesInfo
SVGGradientElement
:
:
GetStringInfo
(
)
{
return
StringAttributesInfo
(
mStringAttributes
sStringInfo
std
:
:
size
(
sStringInfo
)
)
;
}
already_AddRefed
<
DOMSVGAnimatedEnumeration
>
SVGGradientElement
:
:
GradientUnits
(
)
{
return
mEnumAttributes
[
GRADIENTUNITS
]
.
ToDOMAnimatedEnum
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedTransformList
>
SVGGradientElement
:
:
GradientTransform
(
)
{
return
DOMSVGAnimatedTransformList
:
:
GetDOMWrapper
(
GetAnimatedTransformList
(
DO_ALLOCATE
)
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedEnumeration
>
SVGGradientElement
:
:
SpreadMethod
(
)
{
return
mEnumAttributes
[
SPREADMETHOD
]
.
ToDOMAnimatedEnum
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedString
>
SVGGradientElement
:
:
Href
(
)
{
return
mStringAttributes
[
HREF
]
.
IsExplicitlySet
(
)
?
mStringAttributes
[
HREF
]
.
ToDOMAnimatedString
(
this
)
:
mStringAttributes
[
XLINK_HREF
]
.
ToDOMAnimatedString
(
this
)
;
}
JSObject
*
SVGLinearGradientElement
:
:
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
SVGLinearGradientElement_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
SVGElement
:
:
LengthInfo
SVGLinearGradientElement
:
:
sLengthInfo
[
4
]
=
{
{
nsGkAtoms
:
:
x1
0
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
X
}
{
nsGkAtoms
:
:
y1
0
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
Y
}
{
nsGkAtoms
:
:
x2
100
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
X
}
{
nsGkAtoms
:
:
y2
0
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
Y
}
}
;
SVGLinearGradientElement
:
:
SVGLinearGradientElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
SVGLinearGradientElementBase
(
std
:
:
move
(
aNodeInfo
)
)
{
}
NS_IMPL_ELEMENT_CLONE_WITH_INIT
(
SVGLinearGradientElement
)
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGLinearGradientElement
:
:
X1
(
)
{
return
mLengthAttributes
[
ATTR_X1
]
.
ToDOMAnimatedLength
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGLinearGradientElement
:
:
Y1
(
)
{
return
mLengthAttributes
[
ATTR_Y1
]
.
ToDOMAnimatedLength
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGLinearGradientElement
:
:
X2
(
)
{
return
mLengthAttributes
[
ATTR_X2
]
.
ToDOMAnimatedLength
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGLinearGradientElement
:
:
Y2
(
)
{
return
mLengthAttributes
[
ATTR_Y2
]
.
ToDOMAnimatedLength
(
this
)
;
}
SVGAnimatedTransformList
*
SVGGradientElement
:
:
GetAnimatedTransformList
(
uint32_t
aFlags
)
{
if
(
!
mGradientTransform
&
&
(
aFlags
&
DO_ALLOCATE
)
)
{
mGradientTransform
=
MakeUnique
<
SVGAnimatedTransformList
>
(
)
;
}
return
mGradientTransform
.
get
(
)
;
}
SVGElement
:
:
LengthAttributesInfo
SVGLinearGradientElement
:
:
GetLengthInfo
(
)
{
return
LengthAttributesInfo
(
mLengthAttributes
sLengthInfo
std
:
:
size
(
sLengthInfo
)
)
;
}
JSObject
*
SVGRadialGradientElement
:
:
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
SVGRadialGradientElement_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
SVGElement
:
:
LengthInfo
SVGRadialGradientElement
:
:
sLengthInfo
[
6
]
=
{
{
nsGkAtoms
:
:
cx
50
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
X
}
{
nsGkAtoms
:
:
cy
50
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
Y
}
{
nsGkAtoms
:
:
r
50
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
XY
}
{
nsGkAtoms
:
:
fx
50
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
X
}
{
nsGkAtoms
:
:
fy
50
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
Y
}
{
nsGkAtoms
:
:
fr
0
SVGLength_Binding
:
:
SVG_LENGTHTYPE_PERCENTAGE
SVGContentUtils
:
:
XY
}
}
;
SVGRadialGradientElement
:
:
SVGRadialGradientElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
SVGRadialGradientElementBase
(
std
:
:
move
(
aNodeInfo
)
)
{
}
NS_IMPL_ELEMENT_CLONE_WITH_INIT
(
SVGRadialGradientElement
)
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGRadialGradientElement
:
:
Cx
(
)
{
return
mLengthAttributes
[
ATTR_CX
]
.
ToDOMAnimatedLength
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGRadialGradientElement
:
:
Cy
(
)
{
return
mLengthAttributes
[
ATTR_CY
]
.
ToDOMAnimatedLength
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGRadialGradientElement
:
:
R
(
)
{
return
mLengthAttributes
[
ATTR_R
]
.
ToDOMAnimatedLength
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGRadialGradientElement
:
:
Fx
(
)
{
return
mLengthAttributes
[
ATTR_FX
]
.
ToDOMAnimatedLength
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGRadialGradientElement
:
:
Fy
(
)
{
return
mLengthAttributes
[
ATTR_FY
]
.
ToDOMAnimatedLength
(
this
)
;
}
already_AddRefed
<
DOMSVGAnimatedLength
>
SVGRadialGradientElement
:
:
Fr
(
)
{
return
mLengthAttributes
[
ATTR_FR
]
.
ToDOMAnimatedLength
(
this
)
;
}
bool
SVGGradientElement
:
:
IsAttributeMapped
(
const
nsAtom
*
aAttribute
)
const
{
return
aAttribute
=
=
nsGkAtoms
:
:
gradientTransform
|
|
SVGElement
:
:
IsAttributeMapped
(
aAttribute
)
;
}
SVGElement
:
:
LengthAttributesInfo
SVGRadialGradientElement
:
:
GetLengthInfo
(
)
{
return
LengthAttributesInfo
(
mLengthAttributes
sLengthInfo
std
:
:
size
(
sLengthInfo
)
)
;
}
}
