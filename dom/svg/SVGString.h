#
ifndef
__NS_SVGSTRING_H__
#
define
__NS_SVGSTRING_H__
#
include
"
nsAutoPtr
.
h
"
#
include
"
nsError
.
h
"
#
include
"
mozilla
/
dom
/
SVGAnimatedString
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
namespace
mozilla
{
namespace
dom
{
class
SVGElement
;
}
class
SVGString
{
public
:
typedef
mozilla
:
:
dom
:
:
SVGElement
SVGElement
;
void
Init
(
uint8_t
aAttrEnum
)
{
mAnimVal
=
nullptr
;
mAttrEnum
=
aAttrEnum
;
mIsBaseSet
=
false
;
}
void
SetBaseValue
(
const
nsAString
&
aValue
SVGElement
*
aSVGElement
bool
aDoSetAttr
)
;
void
GetBaseValue
(
nsAString
&
aValue
const
SVGElement
*
aSVGElement
)
const
{
aSVGElement
-
>
GetStringBaseValue
(
mAttrEnum
aValue
)
;
}
void
SetAnimValue
(
const
nsAString
&
aValue
SVGElement
*
aSVGElement
)
;
void
GetAnimValue
(
nsAString
&
aValue
const
SVGElement
*
aSVGElement
)
const
;
bool
IsExplicitlySet
(
)
const
{
return
!
!
mAnimVal
|
|
mIsBaseSet
;
}
already_AddRefed
<
mozilla
:
:
dom
:
:
SVGAnimatedString
>
ToDOMAnimatedString
(
SVGElement
*
aSVGElement
)
;
mozilla
:
:
UniquePtr
<
nsISMILAttr
>
ToSMILAttr
(
SVGElement
*
aSVGElement
)
;
private
:
nsAutoPtr
<
nsString
>
mAnimVal
;
uint8_t
mAttrEnum
;
bool
mIsBaseSet
;
public
:
struct
DOMAnimatedString
final
:
public
mozilla
:
:
dom
:
:
SVGAnimatedString
{
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
DOMAnimatedString
)
DOMAnimatedString
(
SVGString
*
aVal
SVGElement
*
aSVGElement
)
:
mozilla
:
:
dom
:
:
SVGAnimatedString
(
aSVGElement
)
mVal
(
aVal
)
{
}
SVGString
*
mVal
;
void
GetBaseVal
(
nsAString
&
aResult
)
override
{
mVal
-
>
GetBaseValue
(
aResult
mSVGElement
)
;
}
void
SetBaseVal
(
const
nsAString
&
aValue
)
override
{
mVal
-
>
SetBaseValue
(
aValue
mSVGElement
true
)
;
}
void
GetAnimVal
(
nsAString
&
aResult
)
override
{
mSVGElement
-
>
FlushAnimations
(
)
;
mVal
-
>
GetAnimValue
(
aResult
mSVGElement
)
;
}
private
:
virtual
~
DOMAnimatedString
(
)
;
}
;
struct
SMILString
:
public
nsISMILAttr
{
public
:
SMILString
(
SVGString
*
aVal
SVGElement
*
aSVGElement
)
:
mVal
(
aVal
)
mSVGElement
(
aSVGElement
)
{
}
SVGString
*
mVal
;
SVGElement
*
mSVGElement
;
virtual
nsresult
ValueFromString
(
const
nsAString
&
aStr
const
mozilla
:
:
dom
:
:
SVGAnimationElement
*
aSrcElement
nsSMILValue
&
aValue
bool
&
aPreventCachingOfSandwich
)
const
override
;
virtual
nsSMILValue
GetBaseValue
(
)
const
override
;
virtual
void
ClearAnimValue
(
)
override
;
virtual
nsresult
SetAnimValue
(
const
nsSMILValue
&
aValue
)
override
;
}
;
}
;
}
#
endif
