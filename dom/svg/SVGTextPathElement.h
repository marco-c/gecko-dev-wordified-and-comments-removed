#
ifndef
DOM_SVG_SVGTEXTPATHELEMENT_H_
#
define
DOM_SVG_SVGTEXTPATHELEMENT_H_
#
include
"
SVGAnimatedEnumeration
.
h
"
#
include
"
SVGAnimatedLength
.
h
"
#
include
"
SVGAnimatedPathSegList
.
h
"
#
include
"
SVGAnimatedString
.
h
"
#
include
"
mozilla
/
dom
/
SVGTextContentElement
.
h
"
class
nsAtom
;
class
nsIContent
;
nsresult
NS_NewSVGTextPathElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
;
namespace
mozilla
{
namespace
dom
{
static
const
uint16_t
TEXTPATH_SIDETYPE_LEFT
=
1
;
static
const
uint16_t
TEXTPATH_SIDETYPE_RIGHT
=
2
;
typedef
SVGTextContentElement
SVGTextPathElementBase
;
class
SVGTextPathElement
final
:
public
SVGTextPathElementBase
{
friend
class
mozilla
:
:
SVGTextFrame
;
protected
:
friend
nsresult
(
:
:
NS_NewSVGTextPathElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
)
;
explicit
SVGTextPathElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
;
virtual
JSObject
*
WrapNode
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
public
:
NS_IMETHOD_
(
bool
)
IsAttributeMapped
(
const
nsAtom
*
aAttribute
)
const
override
;
virtual
nsresult
Clone
(
dom
:
:
NodeInfo
*
nsINode
*
*
aResult
)
const
override
;
SVGAnimatedPathSegList
*
GetAnimPathSegList
(
)
override
{
return
&
mPath
;
}
nsStaticAtom
*
GetPathDataAttrName
(
)
const
override
{
return
nsGkAtoms
:
:
path
;
}
already_AddRefed
<
DOMSVGAnimatedLength
>
StartOffset
(
)
;
already_AddRefed
<
DOMSVGAnimatedEnumeration
>
Method
(
)
;
already_AddRefed
<
DOMSVGAnimatedEnumeration
>
Spacing
(
)
;
already_AddRefed
<
DOMSVGAnimatedEnumeration
>
Side
(
)
;
already_AddRefed
<
DOMSVGAnimatedString
>
Href
(
)
;
void
HrefAsString
(
nsAString
&
aHref
)
;
protected
:
virtual
LengthAttributesInfo
GetLengthInfo
(
)
override
;
virtual
EnumAttributesInfo
GetEnumInfo
(
)
override
;
virtual
StringAttributesInfo
GetStringInfo
(
)
override
;
enum
{
STARTOFFSET
=
1
}
;
SVGAnimatedLength
mLengthAttributes
[
2
]
;
virtual
SVGAnimatedLength
*
LengthAttributes
(
)
override
{
return
mLengthAttributes
;
}
static
LengthInfo
sLengthInfo
[
2
]
;
enum
{
METHOD
=
1
SPACING
SIDE
}
;
SVGAnimatedEnumeration
mEnumAttributes
[
4
]
;
virtual
SVGAnimatedEnumeration
*
EnumAttributes
(
)
override
{
return
mEnumAttributes
;
}
static
SVGEnumMapping
sMethodMap
[
]
;
static
SVGEnumMapping
sSpacingMap
[
]
;
static
SVGEnumMapping
sSideMap
[
]
;
static
EnumInfo
sEnumInfo
[
4
]
;
enum
{
HREF
XLINK_HREF
}
;
SVGAnimatedString
mStringAttributes
[
2
]
;
static
StringInfo
sStringInfo
[
2
]
;
SVGAnimatedPathSegList
mPath
;
}
;
}
}
#
endif
