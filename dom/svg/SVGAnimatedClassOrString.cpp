#
include
"
SVGAnimatedClassOrString
.
h
"
#
include
"
DOMSVGAnimatedString
.
h
"
#
include
"
SVGAttrTearoffTable
.
h
"
#
include
"
mozilla
/
dom
/
TrustedScriptURL
.
h
"
#
include
"
mozilla
/
dom
/
UnionTypes
.
h
"
namespace
mozilla
{
MOZ_CONSTINIT
static
SVGAttrTearoffTable
<
SVGAnimatedClassOrString
dom
:
:
DOMSVGAnimatedString
>
sSVGAnimatedClassOrStringTearoffTable
;
already_AddRefed
<
dom
:
:
DOMSVGAnimatedString
>
SVGAnimatedClassOrString
:
:
ToDOMAnimatedString
(
SVGElement
*
aSVGElement
)
{
RefPtr
<
dom
:
:
DOMSVGAnimatedString
>
domAnimatedString
=
sSVGAnimatedClassOrStringTearoffTable
.
GetTearoff
(
this
)
;
if
(
!
domAnimatedString
)
{
domAnimatedString
=
new
dom
:
:
DOMSVGAnimatedString
(
this
aSVGElement
)
;
sSVGAnimatedClassOrStringTearoffTable
.
AddTearoff
(
this
domAnimatedString
)
;
}
return
domAnimatedString
.
forget
(
)
;
}
void
SVGAnimatedClassOrString
:
:
RemoveTearoff
(
)
{
sSVGAnimatedClassOrStringTearoffTable
.
RemoveTearoff
(
this
)
;
}
void
SVGAnimatedClassOrString
:
:
SetBaseValue
(
const
TrustedScriptURLOrString
&
aValue
SVGElement
*
aSVGElement
bool
aDoSetAttr
ErrorResult
&
)
{
const
nsAString
&
stringValue
=
aValue
.
IsString
(
)
?
aValue
.
GetAsString
(
)
:
aValue
.
GetAsTrustedScriptURL
(
)
.
mData
;
SetBaseValue
(
stringValue
aSVGElement
aDoSetAttr
)
;
}
void
SVGAnimatedClassOrString
:
:
GetBaseValue
(
OwningTrustedScriptURLOrString
&
aValue
const
SVGElement
*
aSVGElement
)
const
{
GetBaseValue
(
aValue
.
SetAsString
(
)
aSVGElement
)
;
}
}
