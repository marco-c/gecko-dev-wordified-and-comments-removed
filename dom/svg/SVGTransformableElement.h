#
ifndef
SVGTransformableElement_h
#
define
SVGTransformableElement_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
nsSVGAnimatedTransformList
.
h
"
#
include
"
nsSVGElement
.
h
"
#
include
"
gfxMatrix
.
h
"
#
include
"
mozilla
/
gfx
/
Matrix
.
h
"
namespace
mozilla
{
namespace
dom
{
class
SVGAnimatedTransformList
;
class
SVGGraphicsElement
;
class
SVGMatrix
;
class
SVGIRect
;
struct
SVGBoundingBoxOptions
;
class
SVGTransformableElement
:
public
nsSVGElement
{
public
:
explicit
SVGTransformableElement
(
already_AddRefed
<
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
nsSVGElement
(
std
:
:
move
(
aNodeInfo
)
)
{
}
virtual
~
SVGTransformableElement
(
)
{
}
virtual
nsresult
Clone
(
dom
:
:
NodeInfo
*
nsINode
*
*
aResult
)
const
override
=
0
;
already_AddRefed
<
SVGAnimatedTransformList
>
Transform
(
)
;
nsSVGElement
*
GetNearestViewportElement
(
)
;
nsSVGElement
*
GetFarthestViewportElement
(
)
;
MOZ_CAN_RUN_SCRIPT
already_AddRefed
<
SVGIRect
>
GetBBox
(
const
SVGBoundingBoxOptions
&
aOptions
ErrorResult
&
rv
)
;
already_AddRefed
<
SVGMatrix
>
GetCTM
(
)
;
already_AddRefed
<
SVGMatrix
>
GetScreenCTM
(
)
;
already_AddRefed
<
SVGMatrix
>
GetTransformToElement
(
SVGGraphicsElement
&
aElement
ErrorResult
&
rv
)
;
NS_IMETHOD_
(
bool
)
IsAttributeMapped
(
const
nsAtom
*
aAttribute
)
const
override
;
nsChangeHint
GetAttributeChangeHint
(
const
nsAtom
*
aAttribute
int32_t
aModType
)
const
override
;
virtual
bool
IsEventAttributeNameInternal
(
nsAtom
*
aName
)
override
;
virtual
gfxMatrix
PrependLocalTransformsTo
(
const
gfxMatrix
&
aMatrix
SVGTransformTypes
aWhich
=
eAllTransforms
)
const
override
;
virtual
const
gfx
:
:
Matrix
*
GetAnimateMotionTransform
(
)
const
override
;
virtual
void
SetAnimateMotionTransform
(
const
gfx
:
:
Matrix
*
aMatrix
)
override
;
virtual
nsSVGAnimatedTransformList
*
GetAnimatedTransformList
(
uint32_t
aFlags
=
0
)
override
;
virtual
nsAtom
*
GetTransformListAttrName
(
)
const
override
{
return
nsGkAtoms
:
:
transform
;
}
virtual
bool
IsTransformable
(
)
override
{
return
true
;
}
protected
:
static
gfxMatrix
GetUserToParentTransform
(
const
gfx
:
:
Matrix
*
aAnimateMotionTransform
const
nsSVGAnimatedTransformList
*
aTransforms
)
;
nsAutoPtr
<
nsSVGAnimatedTransformList
>
mTransforms
;
nsAutoPtr
<
gfx
:
:
Matrix
>
mAnimateMotionTransform
;
}
;
}
}
#
endif
