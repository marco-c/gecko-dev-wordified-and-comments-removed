#
ifndef
mozilla_dom_SVGFEMergeNodeElement_h
#
define
mozilla_dom_SVGFEMergeNodeElement_h
#
include
"
SVGFilters
.
h
"
nsresult
NS_NewSVGFEMergeNodeElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
;
namespace
mozilla
{
namespace
dom
{
typedef
SVGFEUnstyledElement
SVGFEMergeNodeElementBase
;
class
SVGFEMergeNodeElement
:
public
SVGFEMergeNodeElementBase
{
friend
nsresult
(
:
:
NS_NewSVGFEMergeNodeElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
)
;
protected
:
explicit
SVGFEMergeNodeElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
SVGFEMergeNodeElementBase
(
std
:
:
move
(
aNodeInfo
)
)
{
}
virtual
JSObject
*
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
public
:
virtual
nsresult
Clone
(
dom
:
:
NodeInfo
*
nsINode
*
*
aResult
)
const
override
;
virtual
bool
AttributeAffectsRendering
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
)
const
override
;
const
SVGString
*
GetIn1
(
)
{
return
&
mStringAttributes
[
IN1
]
;
}
already_AddRefed
<
SVGAnimatedString
>
In1
(
)
;
protected
:
virtual
StringAttributesInfo
GetStringInfo
(
)
override
;
enum
{
IN1
}
;
SVGString
mStringAttributes
[
1
]
;
static
StringInfo
sStringInfo
[
1
]
;
}
;
}
}
#
endif
