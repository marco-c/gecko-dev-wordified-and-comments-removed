#
ifndef
DOM_SVG_SVGFECOLORMATRIXELEMENT_H_
#
define
DOM_SVG_SVGFECOLORMATRIXELEMENT_H_
#
include
"
SVGAnimatedNumberList
.
h
"
#
include
"
SVGAnimatedEnumeration
.
h
"
#
include
"
SVGFilters
.
h
"
nsresult
NS_NewSVGFEColorMatrixElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
;
namespace
mozilla
{
namespace
dom
{
class
DOMSVGAnimatedNumberList
;
using
SVGFEColorMatrixElementBase
=
SVGFE
;
class
SVGFEColorMatrixElement
:
public
SVGFEColorMatrixElementBase
{
friend
nsresult
(
:
:
NS_NewSVGFEColorMatrixElement
(
nsIContent
*
*
aResult
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
)
;
protected
:
explicit
SVGFEColorMatrixElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
SVGFEColorMatrixElementBase
(
std
:
:
move
(
aNodeInfo
)
)
{
}
virtual
JSObject
*
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
public
:
virtual
FilterPrimitiveDescription
GetPrimitiveDescription
(
SVGFilterInstance
*
aInstance
const
IntRect
&
aFilterSubregion
const
nsTArray
<
bool
>
&
aInputsAreTainted
nsTArray
<
RefPtr
<
SourceSurface
>
>
&
aInputImages
)
override
;
virtual
bool
AttributeAffectsRendering
(
int32_t
aNameSpaceID
nsAtom
*
aAttribute
)
const
override
;
virtual
SVGAnimatedString
&
GetResultImageName
(
)
override
{
return
mStringAttributes
[
RESULT
]
;
}
virtual
void
GetSourceImageNames
(
nsTArray
<
SVGStringInfo
>
&
aSources
)
override
;
virtual
nsresult
Clone
(
dom
:
:
NodeInfo
*
nsINode
*
*
aResult
)
const
override
;
already_AddRefed
<
DOMSVGAnimatedString
>
In1
(
)
;
already_AddRefed
<
DOMSVGAnimatedEnumeration
>
Type
(
)
;
already_AddRefed
<
DOMSVGAnimatedNumberList
>
Values
(
)
;
protected
:
virtual
EnumAttributesInfo
GetEnumInfo
(
)
override
;
virtual
StringAttributesInfo
GetStringInfo
(
)
override
;
virtual
NumberListAttributesInfo
GetNumberListInfo
(
)
override
;
enum
{
TYPE
}
;
SVGAnimatedEnumeration
mEnumAttributes
[
1
]
;
static
SVGEnumMapping
sTypeMap
[
]
;
static
EnumInfo
sEnumInfo
[
1
]
;
enum
{
RESULT
IN1
}
;
SVGAnimatedString
mStringAttributes
[
2
]
;
static
StringInfo
sStringInfo
[
2
]
;
enum
{
VALUES
}
;
SVGAnimatedNumberList
mNumberListAttributes
[
1
]
;
static
NumberListInfo
sNumberListInfo
[
1
]
;
}
;
}
}
#
endif
