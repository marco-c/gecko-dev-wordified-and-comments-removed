#
include
"
mozilla
/
dom
/
SVGDiscardElement
.
h
"
#
include
"
mozilla
/
dom
/
SVGDiscardElementBinding
.
h
"
#
include
"
mozilla
/
StaticPrefs_svg
.
h
"
NS_IMPL_NS_NEW_SVG_ELEMENT
(
Discard
)
namespace
mozilla
:
:
dom
{
JSObject
*
SVGDiscardElement
:
:
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
SVGDiscardElement_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
SVGDiscardElement
:
:
SVGDiscardElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
SVGAnimationElement
(
std
:
:
move
(
aNodeInfo
)
)
{
}
NS_IMPL_ELEMENT_CLONE_WITH_INIT
(
SVGDiscardElement
)
SMILAnimationFunction
&
SVGDiscardElement
:
:
AnimationFunction
(
)
{
return
mAnimationFunction
;
}
bool
SVGDiscardElement
:
:
GetTargetAttributeName
(
int32_t
*
aNamespaceID
nsAtom
*
*
aLocalName
)
const
{
*
aNamespaceID
=
kNameSpaceID_None
;
*
aLocalName
=
nsGkAtoms
:
:
_undefined
;
return
true
;
}
void
SVGDiscardElement
:
:
AddDiscards
(
nsTObserverArray
<
RefPtr
<
Element
>
>
&
aDiscards
)
{
if
(
!
StaticPrefs
:
:
svg_discard_enabled
(
)
)
{
return
;
}
if
(
RefPtr
<
Element
>
target
=
GetTargetElementContent
(
)
)
{
aDiscards
.
AppendElementUnlessExists
(
target
)
;
}
aDiscards
.
AppendElementUnlessExists
(
this
)
;
}
}
