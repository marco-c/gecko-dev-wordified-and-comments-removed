#
ifndef
mozilla_dom_FetchConsumer_h
#
define
mozilla_dom_FetchConsumer_h
class
nsIThread
;
namespace
mozilla
{
namespace
dom
{
namespace
workers
{
class
WorkerPrivate
;
class
WorkerHolder
;
}
template
<
class
Derived
>
class
FetchBody
;
template
<
class
Derived
>
class
FetchBodyConsumer
final
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
FetchBodyConsumer
<
Derived
>
)
static
already_AddRefed
<
FetchBodyConsumer
<
Derived
>
>
Create
(
FetchBody
<
Derived
>
*
aBody
)
;
void
ReleaseObject
(
)
;
FetchBody
<
Derived
>
*
Body
(
)
const
{
return
mBody
;
}
private
:
explicit
FetchBodyConsumer
(
FetchBody
<
Derived
>
*
aBody
)
;
~
FetchBodyConsumer
(
)
;
void
AssertIsOnTargetThread
(
)
const
;
bool
RegisterWorkerHolder
(
workers
:
:
WorkerPrivate
*
aWorkerPrivate
)
;
nsCOMPtr
<
nsIThread
>
mTargetThread
;
RefPtr
<
FetchBody
<
Derived
>
>
mBody
;
UniquePtr
<
workers
:
:
WorkerHolder
>
mWorkerHolder
;
}
;
}
}
#
endif
