#
ifndef
mozilla_dom_AbortController_h
#
define
mozilla_dom_AbortController_h
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
AbortSignal
;
class
AbortController
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
AbortController
)
static
already_AddRefed
<
AbortController
>
Constructor
(
const
GlobalObject
&
aGlobal
ErrorResult
&
aRv
)
;
explicit
AbortController
(
nsIGlobalObject
*
aGlobal
)
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
nsIGlobalObject
*
GetParentObject
(
)
const
;
AbortSignal
*
Signal
(
)
;
void
Abort
(
JSContext
*
aCx
JS
:
:
Handle
<
JS
:
:
Value
>
aReason
)
;
private
:
~
AbortController
(
)
;
nsCOMPtr
<
nsIGlobalObject
>
mGlobal
;
RefPtr
<
AbortSignal
>
mSignal
;
bool
mAborted
;
JS
:
:
Heap
<
JS
:
:
Value
>
mReason
;
}
;
}
}
#
endif
