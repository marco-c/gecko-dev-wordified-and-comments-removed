#
include
"
PerformanceWorker
.
h
"
#
include
"
mozilla
/
dom
/
DOMPrefs
.
h
"
#
include
"
mozilla
/
dom
/
WorkerPrivate
.
h
"
namespace
mozilla
{
namespace
dom
{
PerformanceWorker
:
:
PerformanceWorker
(
WorkerPrivate
*
aWorkerPrivate
)
:
Performance
(
aWorkerPrivate
-
>
UsesSystemPrincipal
(
)
)
mWorkerPrivate
(
aWorkerPrivate
)
{
mWorkerPrivate
-
>
AssertIsOnWorkerThread
(
)
;
}
PerformanceWorker
:
:
~
PerformanceWorker
(
)
{
mWorkerPrivate
-
>
AssertIsOnWorkerThread
(
)
;
}
void
PerformanceWorker
:
:
InsertUserEntry
(
PerformanceEntry
*
aEntry
)
{
if
(
DOMPrefs
:
:
PerformanceLoggingEnabled
(
)
)
{
nsAutoCString
uri
;
nsCOMPtr
<
nsIURI
>
scriptURI
=
mWorkerPrivate
-
>
GetResolvedScriptURI
(
)
;
if
(
!
scriptURI
|
|
NS_FAILED
(
scriptURI
-
>
GetHost
(
uri
)
)
)
{
uri
.
AssignLiteral
(
"
none
"
)
;
}
Performance
:
:
LogEntry
(
aEntry
uri
)
;
}
Performance
:
:
InsertUserEntry
(
aEntry
)
;
}
TimeStamp
PerformanceWorker
:
:
CreationTimeStamp
(
)
const
{
return
mWorkerPrivate
-
>
CreationTimeStamp
(
)
;
}
DOMHighResTimeStamp
PerformanceWorker
:
:
CreationTime
(
)
const
{
return
mWorkerPrivate
-
>
CreationTime
(
)
;
}
uint64_t
PerformanceWorker
:
:
GetRandomTimelineSeed
(
)
{
return
mWorkerPrivate
-
>
GetRandomTimelineSeed
(
)
;
}
}
}
