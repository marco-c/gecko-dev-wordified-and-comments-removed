#
ifndef
mozilla_dom_PerformanceStorageWorker_h
#
define
mozilla_dom_PerformanceStorageWorker_h
#
include
"
PerformanceStorage
.
h
"
namespace
mozilla
{
namespace
dom
{
class
WorkerHolder
;
namespace
workers
{
class
WorkerPrivate
;
}
class
PerformanceProxyData
;
class
PerformanceStorageWorker
final
:
public
PerformanceStorage
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
PerformanceStorageWorker
override
)
static
already_AddRefed
<
PerformanceStorageWorker
>
Create
(
workers
:
:
WorkerPrivate
*
aWorkerPrivate
)
;
void
InitializeOnWorker
(
)
;
void
ShutdownOnWorker
(
)
;
void
AddEntry
(
nsIHttpChannel
*
aChannel
nsITimedChannel
*
aTimedChannel
)
override
;
void
AddEntryOnWorker
(
UniquePtr
<
PerformanceProxyData
>
&
&
aData
)
;
private
:
explicit
PerformanceStorageWorker
(
workers
:
:
WorkerPrivate
*
aWorkerPrivate
)
;
~
PerformanceStorageWorker
(
)
;
Mutex
mMutex
;
workers
:
:
WorkerPrivate
*
mWorkerPrivate
;
enum
{
eInitializing
eReady
eTerminated
}
mState
;
UniquePtr
<
WorkerHolder
>
mWorkerHolder
;
}
;
}
}
#
endif
