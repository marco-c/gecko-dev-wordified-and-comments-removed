#
ifndef
mozilla_dom_PerformanceStorageWorker_h
#
define
mozilla_dom_PerformanceStorageWorker_h
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
PerformanceStorage
.
h
"
namespace
mozilla
:
:
dom
{
class
WeakWorkerRef
;
class
WorkerPrivate
;
class
PerformanceProxyData
;
class
PerformanceStorageWorker
final
:
public
PerformanceStorage
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
PerformanceStorageWorker
override
)
static
already_AddRefed
<
PerformanceStorageWorker
>
Create
(
WorkerPrivate
*
aWorkerPrivate
)
;
void
ShutdownOnWorker
(
)
;
void
AddEntry
(
nsIHttpChannel
*
aChannel
nsITimedChannel
*
aTimedChannel
)
override
;
void
AddEntry
(
const
nsString
&
aEntryName
const
nsString
&
aInitiatorType
UniquePtr
<
PerformanceTimingData
>
&
&
aData
)
override
;
void
AddEntryOnWorker
(
UniquePtr
<
PerformanceProxyData
>
&
&
aData
)
;
private
:
PerformanceStorageWorker
(
)
;
~
PerformanceStorageWorker
(
)
;
Mutex
mMutex
;
RefPtr
<
WeakWorkerRef
>
mWorkerRef
MOZ_GUARDED_BY
(
mMutex
)
;
}
;
}
#
endif
