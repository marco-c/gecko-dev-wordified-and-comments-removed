#
include
"
mozilla
/
dom
/
PerformanceNavigationTiming
.
h
"
#
include
"
mozilla
/
dom
/
PerformanceNavigationTimingBinding
.
h
"
using
namespace
mozilla
:
:
dom
;
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
PerformanceNavigationTiming
)
NS_INTERFACE_MAP_END_INHERITING
(
PerformanceResourceTiming
)
NS_IMPL_ADDREF_INHERITED
(
PerformanceNavigationTiming
PerformanceResourceTiming
)
NS_IMPL_RELEASE_INHERITED
(
PerformanceNavigationTiming
PerformanceResourceTiming
)
JSObject
*
PerformanceNavigationTiming
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
PerformanceNavigationTimingBinding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
DOMHighResTimeStamp
PerformanceNavigationTiming
:
:
UnloadEventStart
(
)
const
{
return
mTiming
-
>
GetDOMTiming
(
)
-
>
GetUnloadEventStartHighRes
(
)
;
}
DOMHighResTimeStamp
PerformanceNavigationTiming
:
:
UnloadEventEnd
(
)
const
{
return
mTiming
-
>
GetDOMTiming
(
)
-
>
GetUnloadEventEndHighRes
(
)
;
}
DOMHighResTimeStamp
PerformanceNavigationTiming
:
:
DomInteractive
(
)
const
{
return
mTiming
-
>
GetDOMTiming
(
)
-
>
GetDomInteractiveHighRes
(
)
;
}
DOMHighResTimeStamp
PerformanceNavigationTiming
:
:
DomContentLoadedEventStart
(
)
const
{
return
mTiming
-
>
GetDOMTiming
(
)
-
>
GetDomContentLoadedEventStartHighRes
(
)
;
}
DOMHighResTimeStamp
PerformanceNavigationTiming
:
:
DomContentLoadedEventEnd
(
)
const
{
return
mTiming
-
>
GetDOMTiming
(
)
-
>
GetDomContentLoadedEventEndHighRes
(
)
;
}
DOMHighResTimeStamp
PerformanceNavigationTiming
:
:
DomComplete
(
)
const
{
return
mTiming
-
>
GetDOMTiming
(
)
-
>
GetDomCompleteHighRes
(
)
;
}
DOMHighResTimeStamp
PerformanceNavigationTiming
:
:
LoadEventStart
(
)
const
{
return
mTiming
-
>
GetDOMTiming
(
)
-
>
GetLoadEventStartHighRes
(
)
;
}
DOMHighResTimeStamp
PerformanceNavigationTiming
:
:
LoadEventEnd
(
)
const
{
return
mTiming
-
>
GetDOMTiming
(
)
-
>
GetLoadEventEndHighRes
(
)
;
}
NavigationType
PerformanceNavigationTiming
:
:
Type
(
)
const
{
switch
(
mTiming
-
>
GetDOMTiming
(
)
-
>
GetType
(
)
)
{
case
nsDOMNavigationTiming
:
:
TYPE_NAVIGATE
:
return
NavigationType
:
:
Navigate
;
break
;
case
nsDOMNavigationTiming
:
:
TYPE_RELOAD
:
return
NavigationType
:
:
Reload
;
break
;
case
nsDOMNavigationTiming
:
:
TYPE_BACK_FORWARD
:
return
NavigationType
:
:
Back_forward
;
break
;
default
:
return
NavigationType
:
:
Navigate
;
}
}
uint16_t
PerformanceNavigationTiming
:
:
RedirectCount
(
)
const
{
return
mTiming
-
>
GetRedirectCount
(
)
;
}
