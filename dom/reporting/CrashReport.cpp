#
include
"
mozilla
/
dom
/
CrashReport
.
h
"
#
include
"
mozilla
/
dom
/
Navigator
.
h
"
#
include
"
mozilla
/
dom
/
ReportingHeader
.
h
"
#
include
"
mozilla
/
dom
/
ReportDeliver
.
h
"
#
include
"
mozilla
/
JSONStringWriteFuncs
.
h
"
#
include
"
nsIPrincipal
.
h
"
#
include
"
nsIURIMutator
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
:
:
dom
{
bool
CrashReport
:
:
Deliver
(
nsIPrincipal
*
aPrincipal
bool
aIsOOM
)
{
MOZ_ASSERT
(
aPrincipal
)
;
nsAutoCString
endpoint_url
;
ReportingHeader
:
:
GetEndpointForReport
(
u
"
default
"
_ns
aPrincipal
endpoint_url
)
;
if
(
endpoint_url
.
IsEmpty
(
)
)
{
return
false
;
}
nsCString
safe_origin_spec
;
aPrincipal
-
>
GetExposableSpec
(
safe_origin_spec
)
;
ReportDeliver
:
:
ReportData
data
;
data
.
mType
=
u
"
crash
"
_ns
;
data
.
mGroupName
=
u
"
default
"
_ns
;
CopyUTF8toUTF16
(
safe_origin_spec
data
.
mURL
)
;
data
.
mCreationTime
=
TimeStamp
:
:
Now
(
)
;
Navigator
:
:
GetUserAgent
(
nullptr
nullptr
Nothing
(
)
data
.
mUserAgent
)
;
data
.
mPrincipal
=
aPrincipal
;
data
.
mFailures
=
0
;
data
.
mEndpointURL
=
endpoint_url
;
JSONStringWriteFunc
body
;
JSONWriter
writer
{
body
}
;
writer
.
Start
(
)
;
if
(
aIsOOM
)
{
writer
.
StringProperty
(
"
reason
"
"
oom
"
)
;
}
writer
.
End
(
)
;
data
.
mReportBodyJSON
=
std
:
:
move
(
body
)
.
StringRRef
(
)
;
ReportDeliver
:
:
Fetch
(
data
)
;
return
true
;
}
}
