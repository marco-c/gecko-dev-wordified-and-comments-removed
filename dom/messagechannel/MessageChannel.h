#
ifndef
mozilla_dom_MessageChannel_h
#
define
mozilla_dom_MessageChannel_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
nsCOMPtr
.
h
"
class
nsPIDOMWindow
;
namespace
mozilla
{
namespace
dom
{
class
MessagePort
;
class
MessageChannel
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
MessageChannel
)
nsPIDOMWindow
*
GetParentObject
(
)
const
{
return
mWindow
;
}
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
MessageChannel
>
Constructor
(
const
GlobalObject
&
aGlobal
ErrorResult
&
aRv
)
;
static
already_AddRefed
<
MessageChannel
>
Constructor
(
nsPIDOMWindow
*
aWindow
ErrorResult
&
aRv
)
;
MessagePort
*
Port1
(
)
const
{
return
mPort1
;
}
MessagePort
*
Port2
(
)
const
{
return
mPort2
;
}
private
:
explicit
MessageChannel
(
nsPIDOMWindow
*
aWindow
)
;
~
MessageChannel
(
)
;
nsCOMPtr
<
nsPIDOMWindow
>
mWindow
;
RefPtr
<
MessagePort
>
mPort1
;
RefPtr
<
MessagePort
>
mPort2
;
}
;
}
}
#
endif
