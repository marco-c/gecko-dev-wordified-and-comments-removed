const
URL
=
"
https
:
/
/
example
.
com
/
browser
/
dom
/
tests
/
browser
/
prevent_return_key
.
html
"
;
function
awaitAndCloseAlertDialog
(
)
{
return
new
Promise
(
resolve
=
>
{
function
onDialogShown
(
node
)
{
Services
.
obs
.
removeObserver
(
onDialogShown
"
tabmodal
-
dialog
-
loaded
"
)
;
let
button
=
node
.
ui
.
button0
;
button
.
click
(
)
;
resolve
(
)
;
}
Services
.
obs
.
addObserver
(
onDialogShown
"
tabmodal
-
dialog
-
loaded
"
)
;
}
)
;
}
add_task
(
async
function
(
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
URL
)
;
let
browser
=
tab
.
linkedBrowser
;
await
ContentTask
.
spawn
(
browser
null
async
function
(
)
{
let
input
=
content
.
document
.
getElementById
(
"
input
"
)
;
input
.
focus
(
)
;
input
.
value
=
"
abcd
"
;
}
)
;
let
dialogShown
=
awaitAndCloseAlertDialog
(
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Enter
"
)
;
await
dialogShown
;
await
ContentTask
.
spawn
(
browser
null
async
function
(
)
{
let
result
=
content
.
document
.
getElementById
(
"
result
"
)
.
innerHTML
;
info
(
"
submit
result
:
"
+
result
)
;
is
(
result
"
not
submitted
"
"
form
should
not
have
submitted
"
)
;
}
)
;
gBrowser
.
removeCurrentTab
(
)
;
}
)
;
