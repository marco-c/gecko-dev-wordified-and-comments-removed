add_task
(
function
*
(
)
{
let
tabs
=
[
gBrowser
.
selectedTab
BrowserTestUtils
.
addTab
(
gBrowser
)
]
;
let
testingList
=
[
{
uri
:
"
data
:
text
/
html
<
!
DOCTYPE
html
>
<
html
>
<
body
>
<
input
autofocus
id
=
'
target
'
>
<
/
body
>
<
/
html
>
"
tagName
:
"
INPUT
"
}
]
;
tabs
[
0
]
.
linkedBrowser
.
focus
(
)
;
let
loadedPromise
=
BrowserTestUtils
.
browserLoaded
(
tabs
[
1
]
.
linkedBrowser
)
;
tabs
[
1
]
.
linkedBrowser
.
loadURI
(
testingList
[
0
]
.
uri
)
;
yield
loadedPromise
;
for
(
var
i
=
0
;
i
<
testingList
.
length
;
+
+
i
)
{
let
tagName
=
yield
ContentTask
.
spawn
(
tabs
[
i
+
1
]
.
linkedBrowser
null
function
*
(
)
{
return
content
.
document
.
activeElement
.
tagName
;
}
)
;
is
(
tagName
testingList
[
i
]
.
tagName
"
The
background
tab
'
s
focused
element
should
be
"
+
testingList
[
i
]
.
tagName
)
;
}
is
(
document
.
activeElement
tabs
[
0
]
.
linkedBrowser
"
The
background
tab
'
s
focused
element
should
not
cause
the
tab
to
be
focused
"
)
;
for
(
let
i
=
1
;
i
<
tabs
.
length
;
i
+
+
)
{
yield
BrowserTestUtils
.
removeTab
(
tabs
[
i
]
)
;
}
}
)
;
