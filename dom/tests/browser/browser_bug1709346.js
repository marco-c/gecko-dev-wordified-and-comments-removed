add_task
(
async
function
remove_subframe_in_cross_site_frame
(
)
{
await
BrowserTestUtils
.
withNewTab
(
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
dom
/
tests
/
browser
/
file_empty_cross_site_frame
.
html
"
async
browser
=
>
{
is
(
XULBrowserWindow
.
isBusy
false
"
browser
is
not
busy
after
the
tab
finishes
loading
"
)
;
await
SpecialPowers
.
spawn
(
browser
.
browsingContext
.
children
[
0
]
[
]
async
(
)
=
>
{
let
frame
=
content
.
document
.
createElement
(
"
iframe
"
)
;
frame
.
src
=
"
slow
.
sjs
"
;
content
.
document
.
body
.
appendChild
(
frame
)
;
frame
.
addEventListener
(
"
load
"
function
(
)
{
ok
(
false
"
load
should
not
finish
before
the
frame
is
removed
"
)
;
}
)
;
}
)
;
is
(
XULBrowserWindow
.
isBusy
true
"
browser
should
be
busy
after
the
load
starts
"
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
async
(
)
=
>
{
content
.
document
.
querySelector
(
"
iframe
"
)
.
remove
(
)
;
}
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
!
XULBrowserWindow
.
isBusy
"
Browser
should
no
longer
be
busy
after
the
frame
is
removed
"
)
;
}
)
;
}
)
;
