const
TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
dom
/
tests
/
browser
/
test_largeAllocation
.
html
"
;
function
expectProcessCreated
(
)
{
let
os
=
Cc
[
"
mozilla
.
org
/
observer
-
service
;
1
"
]
.
getService
(
Ci
.
nsIObserverService
)
;
return
new
Promise
(
resolve
=
>
{
let
topic
=
"
ipc
:
content
-
created
"
;
function
observer
(
)
{
os
.
removeObserver
(
observer
topic
)
;
ok
(
true
"
Expect
process
created
"
)
;
resolve
(
)
;
}
os
.
addObserver
(
observer
topic
)
;
}
)
;
}
add_task
(
function
*
(
)
{
yield
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
dom
.
largeAllocationHeader
.
enabled
"
true
]
]
}
)
;
yield
BrowserTestUtils
.
withNewTab
(
"
about
:
blank
"
function
*
(
aBrowser
)
{
let
epc
=
expectProcessCreated
(
)
;
yield
ContentTask
.
spawn
(
aBrowser
TEST_URI
TEST_URI
=
>
{
content
.
document
.
location
=
TEST_URI
;
}
)
;
yield
epc
;
yield
ContentTask
.
spawn
(
aBrowser
null
(
)
=
>
{
let
arrayBuffer
=
new
ArrayBuffer
(
1024
*
1024
*
1024
)
;
ok
(
arrayBuffer
"
Successfully
allocated
a
gigabyte
of
memory
in
content
process
"
)
;
}
)
;
}
)
;
}
)
;
