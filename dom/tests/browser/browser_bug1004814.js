add_task
(
async
function
(
)
{
const
TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
dom
/
tests
/
browser
/
test_bug1004814
.
html
"
;
await
BrowserTestUtils
.
withNewTab
(
TEST_URI
async
aBrowser
=
>
{
let
duration
=
await
ContentTask
.
spawn
(
aBrowser
null
function
(
opts
)
{
return
new
Promise
(
resolve
=
>
{
let
ConsoleObserver
=
{
QueryInterface
:
ChromeUtils
.
generateQI
(
[
Ci
.
nsIObserver
]
)
observe
(
aSubject
aTopic
aData
)
{
var
obj
=
aSubject
.
wrappedJSObject
;
if
(
obj
.
arguments
.
length
!
=
1
|
|
obj
.
arguments
[
0
]
!
=
"
bug1004814
"
|
|
obj
.
level
!
=
"
timeEnd
"
)
{
return
;
}
Services
.
obs
.
removeObserver
(
this
"
console
-
api
-
log
-
event
"
)
;
resolve
(
obj
.
timer
.
duration
)
;
}
}
;
Services
.
obs
.
addObserver
(
ConsoleObserver
"
console
-
api
-
log
-
event
"
)
;
var
w
=
new
content
.
Worker
(
"
worker_bug1004814
.
js
"
)
;
w
.
postMessage
(
true
)
;
}
)
;
}
)
;
ok
(
duration
>
0
"
ConsoleEvent
.
timer
.
duration
>
0
:
"
+
duration
+
"
~
200ms
"
)
;
}
)
;
}
)
;
