"
use
strict
"
;
const
EMPTY_URI
=
"
https
:
/
/
test1
.
example
.
com
/
browser
/
dom
/
tests
/
browser
/
file_empty
.
html
"
;
const
TEST_URI
=
"
https
:
/
/
test1
.
example
.
com
/
browser
/
dom
/
tests
/
browser
/
file_bug1685807
.
html
"
;
add_task
(
async
function
setup
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
privacy
.
window
.
name
.
update
.
enabled
"
true
]
]
}
)
;
}
)
;
add_task
(
async
function
doTests
(
)
{
for
(
let
testDocDomain
of
[
false
true
]
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
EMPTY_URI
)
;
let
browser
=
tab
.
linkedBrowser
;
let
loadedPromise
=
BrowserTestUtils
.
browserLoaded
(
browser
false
"
about
:
blank
"
)
;
SpecialPowers
.
spawn
(
browser
[
TEST_URI
testDocDomain
]
(
aTestURI
aTestDocDomain
)
=
>
{
content
.
name
=
"
Test
"
;
if
(
aTestDocDomain
)
{
content
.
document
.
domain
=
"
example
.
com
"
;
}
content
.
open
(
aTestURI
)
;
}
)
;
await
loadedPromise
;
await
SpecialPowers
.
spawn
(
browser
[
testDocDomain
]
aTestDocDomain
=
>
{
if
(
aTestDocDomain
)
{
is
(
content
.
name
"
"
"
The
window
.
name
should
be
reset
.
"
)
;
}
else
{
is
(
content
.
name
"
Test
"
"
The
window
.
name
shouldn
'
t
be
reset
.
"
)
;
}
}
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
}
)
;
