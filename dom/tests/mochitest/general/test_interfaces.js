var
ecmaGlobals
=
[
"
Array
"
"
ArrayBuffer
"
"
Atomics
"
"
Boolean
"
{
name
:
"
ByteLengthQueuingStrategy
"
disabled
:
!
SpecialPowers
.
Cu
.
getJSTestingFunctions
(
)
.
streamsAreEnabled
(
)
}
{
name
:
"
CountQueuingStrategy
"
disabled
:
!
SpecialPowers
.
Cu
.
getJSTestingFunctions
(
)
.
streamsAreEnabled
(
)
}
"
DataView
"
"
Date
"
"
Error
"
"
EvalError
"
"
Float32Array
"
"
Float64Array
"
"
Function
"
{
name
:
"
Infinity
"
xbl
:
false
}
"
Int16Array
"
"
Int32Array
"
"
Int8Array
"
"
InternalError
"
"
Intl
"
"
JSON
"
"
Map
"
"
Math
"
{
name
:
"
NaN
"
xbl
:
false
}
"
Number
"
"
Object
"
"
Promise
"
"
Proxy
"
"
RangeError
"
{
name
:
"
ReadableStream
"
disabled
:
!
SpecialPowers
.
Cu
.
getJSTestingFunctions
(
)
.
streamsAreEnabled
(
)
}
"
ReferenceError
"
"
Reflect
"
"
RegExp
"
"
Set
"
"
SharedArrayBuffer
"
{
name
:
"
SIMD
"
nightly
:
true
}
"
StopIteration
"
"
String
"
"
Symbol
"
"
SyntaxError
"
{
name
:
"
TypedObject
"
nightly
:
true
}
"
TypeError
"
"
Uint16Array
"
"
Uint32Array
"
"
Uint8Array
"
"
Uint8ClampedArray
"
"
URIError
"
"
WeakMap
"
"
WeakSet
"
{
name
:
"
WebAssembly
"
disabled
:
!
SpecialPowers
.
Cu
.
getJSTestingFunctions
(
)
.
wasmIsSupported
(
)
}
]
;
var
legacyMozPrefixedInterfaces
=
[
"
mozContact
"
"
mozRTCIceCandidate
"
"
mozRTCPeerConnection
"
"
mozRTCSessionDescription
"
]
;
var
interfaceNamesInGlobalScope
=
[
"
AbortController
"
"
AbortSignal
"
"
AnalyserNode
"
{
name
:
"
Animation
"
}
{
name
:
"
AnimationEffectReadOnly
"
release
:
false
}
{
name
:
"
AnimationEffectTiming
"
release
:
false
}
{
name
:
"
AnimationEffectTimingReadOnly
"
release
:
false
}
"
AnimationEvent
"
{
name
:
"
AnimationPlaybackEvent
"
release
:
false
}
{
name
:
"
AnimationTimeline
"
release
:
false
}
"
Attr
"
"
Audio
"
"
AudioBuffer
"
"
AudioContext
"
"
AudioBufferSourceNode
"
"
AudioDestinationNode
"
"
AudioListener
"
"
AudioNode
"
"
AudioParam
"
"
AudioProcessingEvent
"
"
AudioScheduledSourceNode
"
"
AudioStreamTrack
"
"
BarProp
"
"
BaseAudioContext
"
"
BatteryManager
"
"
BeforeUnloadEvent
"
"
BiquadFilterNode
"
"
Blob
"
"
BlobEvent
"
{
name
:
"
BoxObject
"
xbl
:
true
}
"
BroadcastChannel
"
"
Cache
"
"
CacheStorage
"
"
CanvasCaptureMediaStream
"
"
CanvasGradient
"
"
CanvasPattern
"
"
CanvasRenderingContext2D
"
"
CaretPosition
"
"
CDATASection
"
"
ChannelMergerNode
"
"
ChannelSplitterNode
"
"
CharacterData
"
{
name
:
"
ChromeNodeList
"
xbl
:
true
}
{
name
:
"
ChromeWindow
"
xbl
:
true
}
"
ClipboardEvent
"
"
CloseEvent
"
{
name
:
"
CommandEvent
"
xbl
:
true
}
"
Comment
"
"
CompositionEvent
"
"
ConstantSourceNode
"
"
ConvolverNode
"
"
Crypto
"
"
CryptoKey
"
"
CSS
"
"
CSS2Properties
"
{
name
:
"
CSSAnimation
"
release
:
false
}
"
CSSConditionRule
"
"
CSSCounterStyleRule
"
"
CSSFontFaceRule
"
"
CSSFontFeatureValuesRule
"
"
CSSGroupingRule
"
"
CSSImportRule
"
"
CSSKeyframeRule
"
"
CSSKeyframesRule
"
"
CSSMediaRule
"
"
CSSMozDocumentRule
"
"
CSSNamespaceRule
"
"
CSSPageRule
"
"
CSSPrimitiveValue
"
{
name
:
"
CSSPseudoElement
"
release
:
false
}
"
CSSRule
"
"
CSSRuleList
"
"
CSSStyleDeclaration
"
"
CSSStyleRule
"
"
CSSStyleSheet
"
"
CSSSupportsRule
"
{
name
:
"
CSSTransition
"
release
:
false
}
"
CSSValue
"
"
CSSValueList
"
"
CustomElementRegistry
"
"
CustomEvent
"
"
DataChannel
"
"
DataTransfer
"
"
DataTransferItem
"
"
DataTransferItemList
"
"
DelayNode
"
"
DesktopNotification
"
"
DesktopNotificationCenter
"
"
DeviceLightEvent
"
"
DeviceMotionEvent
"
"
DeviceOrientationEvent
"
"
DeviceProximityEvent
"
"
Directory
"
"
Document
"
"
DocumentFragment
"
{
name
:
"
DocumentTimeline
"
release
:
false
}
"
DocumentType
"
{
name
:
"
DOMConstructor
"
xbl
:
true
}
"
DOMCursor
"
"
DOMError
"
"
DOMException
"
"
DOMImplementation
"
"
DOMMatrix
"
"
DOMMatrixReadOnly
"
"
DOMParser
"
"
DOMPoint
"
"
DOMPointReadOnly
"
"
DOMQuad
"
"
DOMRect
"
"
DOMRectList
"
"
DOMRectReadOnly
"
"
DOMRequest
"
"
DOMStringList
"
"
DOMStringMap
"
"
DOMTokenList
"
"
DragEvent
"
"
DynamicsCompressorNode
"
"
Element
"
"
ErrorEvent
"
"
Event
"
"
EventSource
"
"
EventTarget
"
"
External
"
"
File
"
"
FileList
"
"
FileReader
"
"
FileSystem
"
"
FileSystemDirectoryEntry
"
"
FileSystemDirectoryReader
"
"
FileSystemEntry
"
"
FileSystemFileEntry
"
"
FocusEvent
"
"
FormData
"
"
FontFace
"
"
FontFaceSet
"
"
FontFaceSetLoadEvent
"
"
GainNode
"
"
Gamepad
"
"
GamepadAxisMoveEvent
"
"
GamepadButtonEvent
"
"
GamepadButton
"
"
GamepadEvent
"
"
GamepadHapticActuator
"
"
GamepadPose
"
"
HashChangeEvent
"
"
Headers
"
"
History
"
"
HTMLAllCollection
"
"
HTMLAnchorElement
"
"
HTMLAreaElement
"
"
HTMLAudioElement
"
"
HTMLBaseElement
"
"
HTMLBodyElement
"
"
HTMLBRElement
"
"
HTMLButtonElement
"
"
HTMLCanvasElement
"
"
HTMLCollection
"
{
name
:
"
HTMLContentElement
"
stylo
:
false
}
"
HTMLDataElement
"
"
HTMLDataListElement
"
"
HTMLDetailsElement
"
{
name
:
"
HTMLDialogElement
"
disabled
:
true
}
"
HTMLDirectoryElement
"
"
HTMLDivElement
"
"
HTMLDListElement
"
"
HTMLDocument
"
"
HTMLElement
"
"
HTMLEmbedElement
"
"
HTMLFieldSetElement
"
"
HTMLFontElement
"
"
HTMLFormControlsCollection
"
"
HTMLFormElement
"
"
HTMLFrameElement
"
"
HTMLFrameSetElement
"
"
HTMLHeadElement
"
"
HTMLHeadingElement
"
"
HTMLHRElement
"
"
HTMLHtmlElement
"
"
HTMLIFrameElement
"
"
HTMLImageElement
"
"
HTMLInputElement
"
"
HTMLLabelElement
"
"
HTMLLegendElement
"
"
HTMLLIElement
"
"
HTMLLinkElement
"
"
HTMLMapElement
"
"
HTMLMediaElement
"
"
HTMLMenuElement
"
"
HTMLMenuItemElement
"
"
HTMLMetaElement
"
"
HTMLMeterElement
"
"
HTMLModElement
"
"
HTMLObjectElement
"
"
HTMLOListElement
"
"
HTMLOptGroupElement
"
"
HTMLOptionElement
"
"
HTMLOptionsCollection
"
"
HTMLOutputElement
"
"
HTMLParagraphElement
"
"
HTMLParamElement
"
"
HTMLPreElement
"
"
HTMLPictureElement
"
"
HTMLProgressElement
"
"
HTMLQuoteElement
"
"
HTMLScriptElement
"
"
HTMLSelectElement
"
"
HTMLSourceElement
"
"
HTMLSpanElement
"
"
HTMLStyleElement
"
"
HTMLTableCaptionElement
"
"
HTMLTableCellElement
"
"
HTMLTableColElement
"
"
HTMLTableElement
"
"
HTMLTableRowElement
"
"
HTMLTableSectionElement
"
"
HTMLTemplateElement
"
"
HTMLTextAreaElement
"
"
HTMLTimeElement
"
"
HTMLTitleElement
"
"
HTMLTrackElement
"
"
HTMLUListElement
"
"
HTMLUnknownElement
"
"
HTMLVideoElement
"
{
name
:
"
IdleDeadline
"
}
"
IDBCursor
"
"
IDBCursorWithValue
"
"
IDBDatabase
"
"
IDBFactory
"
"
IDBFileHandle
"
"
IDBFileRequest
"
"
IDBIndex
"
"
IDBKeyRange
"
"
IDBMutableFile
"
"
IDBObjectStore
"
"
IDBOpenDBRequest
"
"
IDBRequest
"
"
IDBTransaction
"
"
IDBVersionChangeEvent
"
"
IIRFilterNode
"
"
Image
"
"
ImageBitmap
"
"
ImageBitmapRenderingContext
"
{
name
:
"
ImageCapture
"
disabled
:
true
}
{
name
:
"
ImageCaptureErrorEvent
"
disabled
:
true
}
"
ImageData
"
"
InputEvent
"
"
InstallTrigger
"
"
IntersectionObserver
"
"
IntersectionObserverEntry
"
"
KeyEvent
"
"
KeyboardEvent
"
{
name
:
"
KeyframeEffectReadOnly
"
release
:
false
}
{
name
:
"
KeyframeEffect
"
release
:
false
}
"
LocalMediaStream
"
"
Location
"
"
MediaDeviceInfo
"
"
MediaDevices
"
"
MediaElementAudioSourceNode
"
"
MediaError
"
"
MediaKeyError
"
"
MediaEncryptedEvent
"
"
MediaKeys
"
"
MediaKeySession
"
"
MediaKeySystemAccess
"
"
MediaKeyMessageEvent
"
"
MediaKeyStatusMap
"
"
MediaList
"
"
MediaQueryList
"
"
MediaQueryListEvent
"
"
MediaRecorder
"
"
MediaRecorderErrorEvent
"
"
MediaSource
"
"
MediaStream
"
"
MediaStreamAudioDestinationNode
"
"
MediaStreamAudioSourceNode
"
"
MediaStreamEvent
"
"
MediaStreamTrackEvent
"
"
MediaStreamTrack
"
{
name
:
"
MenuBoxObject
"
xbl
:
true
}
"
MessageChannel
"
"
MessageEvent
"
"
MessagePort
"
"
MimeType
"
"
MimeTypeArray
"
"
MouseEvent
"
"
MouseScrollEvent
"
"
mozRTCIceCandidate
"
"
mozRTCPeerConnection
"
"
mozRTCSessionDescription
"
"
MutationEvent
"
"
MutationObserver
"
"
MutationRecord
"
"
NamedNodeMap
"
"
Navigator
"
{
name
:
"
NetworkInformation
"
desktop
:
false
}
"
Node
"
"
NodeFilter
"
"
NodeIterator
"
"
NodeList
"
"
Notification
"
{
name
:
"
OffscreenCanvas
"
disabled
:
true
}
"
OfflineAudioCompletionEvent
"
"
OfflineAudioContext
"
"
OfflineResourceList
"
"
Option
"
"
OscillatorNode
"
"
PageTransitionEvent
"
"
PaintRequest
"
"
PaintRequestList
"
"
PannerNode
"
"
Path2D
"
"
Performance
"
"
PerformanceEntry
"
"
PerformanceMark
"
"
PerformanceMeasure
"
"
PerformanceNavigation
"
"
PerformanceObserver
"
"
PerformanceObserverEntryList
"
"
PerformanceResourceTiming
"
"
PerformanceTiming
"
"
PeriodicWave
"
"
Permissions
"
"
PermissionStatus
"
"
Plugin
"
"
PluginArray
"
{
name
:
"
PointerEvent
"
nightly
:
true
desktop
:
true
android
:
false
}
"
PopStateEvent
"
"
PopupBlockedEvent
"
{
name
:
"
PopupBoxObject
"
xbl
:
true
}
{
name
:
"
Presentation
"
desktop
:
false
release
:
false
}
{
name
:
"
PresentationAvailability
"
desktop
:
false
release
:
false
}
{
name
:
"
PresentationConnection
"
desktop
:
false
release
:
false
}
{
name
:
"
PresentationConnectionAvailableEvent
"
desktop
:
false
release
:
false
}
{
name
:
"
PresentationConnectionCloseEvent
"
desktop
:
false
release
:
false
}
{
name
:
"
PresentationConnectionList
"
desktop
:
false
release
:
false
}
{
name
:
"
PresentationReceiver
"
desktop
:
false
release
:
false
}
{
name
:
"
PresentationRequest
"
desktop
:
false
release
:
false
}
"
ProcessingInstruction
"
"
ProgressEvent
"
"
PushManager
"
"
PushSubscription
"
"
PushSubscriptionOptions
"
"
RadioNodeList
"
"
Range
"
"
Rect
"
"
Request
"
"
Response
"
"
RGBColor
"
"
RTCCertificate
"
"
RTCDataChannelEvent
"
"
RTCDTMFSender
"
"
RTCDTMFToneChangeEvent
"
"
RTCIceCandidate
"
"
RTCPeerConnection
"
"
RTCPeerConnectionIceEvent
"
"
RTCRtpReceiver
"
"
RTCRtpSender
"
"
RTCSessionDescription
"
"
RTCStatsReport
"
"
RTCTrackEvent
"
"
Screen
"
"
ScreenOrientation
"
"
ScriptProcessorNode
"
"
ScrollAreaEvent
"
"
Selection
"
"
ServiceWorker
"
"
ServiceWorkerContainer
"
"
ServiceWorkerRegistration
"
{
name
:
"
ScopedCredential
"
disabled
:
true
}
{
name
:
"
ScopedCredentialInfo
"
disabled
:
true
}
{
name
:
"
ShadowRoot
"
stylo
:
false
}
"
SharedWorker
"
{
name
:
"
SimpleGestureEvent
"
xbl
:
true
}
{
name
:
"
SimpleTest
"
xbl
:
false
}
"
SourceBuffer
"
"
SourceBufferList
"
{
name
:
"
SpeechSynthesisErrorEvent
"
android
:
false
}
{
name
:
"
SpeechSynthesisEvent
"
android
:
false
}
{
name
:
"
SpeechSynthesis
"
android
:
false
}
{
name
:
"
SpeechSynthesisUtterance
"
android
:
false
}
{
name
:
"
SpeechSynthesisVoice
"
android
:
false
}
{
name
:
"
SpecialPowers
"
xbl
:
false
}
"
StereoPannerNode
"
"
Storage
"
"
StorageEvent
"
{
name
:
"
StorageManager
"
isSecureContext
:
true
android
:
false
}
"
StyleSheet
"
"
StyleSheetList
"
"
SubtleCrypto
"
"
SVGAElement
"
"
SVGAngle
"
"
SVGAnimatedAngle
"
"
SVGAnimatedBoolean
"
"
SVGAnimatedEnumeration
"
"
SVGAnimatedInteger
"
"
SVGAnimatedLength
"
"
SVGAnimatedLengthList
"
"
SVGAnimatedNumber
"
"
SVGAnimatedNumberList
"
"
SVGAnimatedPreserveAspectRatio
"
"
SVGAnimatedRect
"
"
SVGAnimatedString
"
"
SVGAnimatedTransformList
"
"
SVGAnimateElement
"
"
SVGAnimateMotionElement
"
"
SVGAnimateTransformElement
"
"
SVGAnimationElement
"
"
SVGCircleElement
"
"
SVGClipPathElement
"
"
SVGComponentTransferFunctionElement
"
"
SVGDefsElement
"
"
SVGDescElement
"
"
SVGElement
"
"
SVGEllipseElement
"
"
SVGFEBlendElement
"
"
SVGFEColorMatrixElement
"
"
SVGFEComponentTransferElement
"
"
SVGFECompositeElement
"
"
SVGFEConvolveMatrixElement
"
"
SVGFEDiffuseLightingElement
"
"
SVGFEDisplacementMapElement
"
"
SVGFEDistantLightElement
"
"
SVGFEDropShadowElement
"
"
SVGFEFloodElement
"
"
SVGFEFuncAElement
"
"
SVGFEFuncBElement
"
"
SVGFEFuncGElement
"
"
SVGFEFuncRElement
"
"
SVGFEGaussianBlurElement
"
"
SVGFEImageElement
"
"
SVGFEMergeElement
"
"
SVGFEMergeNodeElement
"
"
SVGFEMorphologyElement
"
"
SVGFEOffsetElement
"
"
SVGFEPointLightElement
"
"
SVGFESpecularLightingElement
"
"
SVGFESpotLightElement
"
"
SVGFETileElement
"
"
SVGFETurbulenceElement
"
"
SVGFilterElement
"
"
SVGForeignObjectElement
"
"
SVGGElement
"
"
SVGGeometryElement
"
"
SVGGradientElement
"
"
SVGGraphicsElement
"
"
SVGImageElement
"
"
SVGLength
"
"
SVGLengthList
"
"
SVGLinearGradientElement
"
"
SVGLineElement
"
"
SVGMarkerElement
"
"
SVGMaskElement
"
"
SVGMatrix
"
"
SVGMetadataElement
"
"
SVGMPathElement
"
"
SVGNumber
"
"
SVGNumberList
"
"
SVGPathElement
"
"
SVGPathSeg
"
"
SVGPathSegArcAbs
"
"
SVGPathSegArcRel
"
"
SVGPathSegClosePath
"
"
SVGPathSegCurvetoCubicAbs
"
"
SVGPathSegCurvetoCubicRel
"
"
SVGPathSegCurvetoCubicSmoothAbs
"
"
SVGPathSegCurvetoCubicSmoothRel
"
"
SVGPathSegCurvetoQuadraticAbs
"
"
SVGPathSegCurvetoQuadraticRel
"
"
SVGPathSegCurvetoQuadraticSmoothAbs
"
"
SVGPathSegCurvetoQuadraticSmoothRel
"
"
SVGPathSegLinetoAbs
"
"
SVGPathSegLinetoHorizontalAbs
"
"
SVGPathSegLinetoHorizontalRel
"
"
SVGPathSegLinetoRel
"
"
SVGPathSegLinetoVerticalAbs
"
"
SVGPathSegLinetoVerticalRel
"
"
SVGPathSegList
"
"
SVGPathSegMovetoAbs
"
"
SVGPathSegMovetoRel
"
"
SVGPatternElement
"
"
SVGPoint
"
"
SVGPointList
"
"
SVGPolygonElement
"
"
SVGPolylineElement
"
"
SVGPreserveAspectRatio
"
"
SVGRadialGradientElement
"
"
SVGRect
"
"
SVGRectElement
"
"
SVGScriptElement
"
"
SVGSetElement
"
"
SVGStopElement
"
"
SVGStringList
"
"
SVGStyleElement
"
"
SVGSVGElement
"
"
SVGSwitchElement
"
"
SVGSymbolElement
"
"
SVGTextContentElement
"
"
SVGTextElement
"
"
SVGTextPathElement
"
"
SVGTextPositioningElement
"
"
SVGTitleElement
"
"
SVGTransform
"
"
SVGTransformList
"
"
SVGTSpanElement
"
"
SVGUnitTypes
"
"
SVGUseElement
"
"
SVGViewElement
"
"
SVGZoomAndPan
"
"
Text
"
"
TextDecoder
"
"
TextEncoder
"
"
TextMetrics
"
"
TextTrack
"
"
TextTrackCue
"
"
TextTrackCueList
"
"
TextTrackList
"
"
TimeEvent
"
"
TimeRanges
"
"
Touch
"
"
TouchEvent
"
"
TouchList
"
"
TrackEvent
"
"
TransitionEvent
"
{
name
:
"
TreeColumn
"
xbl
:
true
}
{
name
:
"
TreeColumns
"
xbl
:
true
}
{
name
:
"
TreeContentView
"
xbl
:
true
}
"
TreeWalker
"
{
name
:
"
U2F
"
disabled
:
true
}
"
UIEvent
"
"
URL
"
"
URLSearchParams
"
"
UserProximityEvent
"
"
ValidityState
"
"
VideoPlaybackQuality
"
"
VideoStreamTrack
"
{
name
:
"
VRDisplay
"
releaseNonWindows
:
false
}
{
name
:
"
VRDisplayCapabilities
"
releaseNonWindows
:
false
}
{
name
:
"
VRDisplayEvent
"
releaseNonWindows
:
false
}
{
name
:
"
VREyeParameters
"
releaseNonWindows
:
false
}
{
name
:
"
VRFieldOfView
"
releaseNonWindows
:
false
}
{
name
:
"
VRFrameData
"
releaseNonWindows
:
false
}
{
name
:
"
VRPose
"
releaseNonWindows
:
false
}
{
name
:
"
VRStageParameters
"
releaseNonWindows
:
false
}
"
VTTCue
"
{
name
:
"
VTTRegion
"
disabled
:
true
}
"
WaveShaperNode
"
{
name
:
"
WebAuthnAssertion
"
disabled
:
true
}
{
name
:
"
WebAuthnAttestation
"
disabled
:
true
}
{
name
:
"
WebAuthentication
"
disabled
:
true
}
"
WebGLActiveInfo
"
"
WebGLBuffer
"
"
WebGLContextEvent
"
"
WebGLFramebuffer
"
"
WebGLProgram
"
"
WebGLQuery
"
"
WebGLRenderbuffer
"
"
WebGLRenderingContext
"
"
WebGL2RenderingContext
"
"
WebGLSampler
"
"
WebGLShader
"
"
WebGLShaderPrecisionFormat
"
"
WebGLSync
"
"
WebGLTexture
"
"
WebGLTransformFeedback
"
"
WebGLUniformLocation
"
"
WebGLVertexArrayObject
"
"
WebKitCSSMatrix
"
"
WebSocket
"
"
WheelEvent
"
"
Window
"
"
Worker
"
"
XMLDocument
"
"
XMLHttpRequest
"
"
XMLHttpRequestEventTarget
"
"
XMLHttpRequestUpload
"
"
XMLSerializer
"
"
XMLStylesheetProcessingInstruction
"
"
XPathEvaluator
"
"
XPathExpression
"
"
XPathResult
"
"
XSLTProcessor
"
{
name
:
"
XULButtonElement
"
xbl
:
true
}
{
name
:
"
XULCheckboxElement
"
xbl
:
true
}
{
name
:
"
XULCommandEvent
"
xbl
:
true
}
{
name
:
"
XULControlElement
"
xbl
:
true
}
{
name
:
"
XULDocument
"
xbl
:
true
}
{
name
:
"
XULElement
"
xbl
:
true
}
{
name
:
"
XULLabeledControlElement
"
xbl
:
true
}
{
name
:
"
XULPopupElement
"
xbl
:
true
}
{
name
:
"
XULTemplateBuilder
"
xbl
:
true
}
{
name
:
"
XULTreeBuilder
"
xbl
:
true
}
{
name
:
"
XULTreeBuilderObserver
"
xbl
:
true
}
]
;
function
createInterfaceMap
(
isXBLScope
)
{
var
version
=
SpecialPowers
.
Cc
[
"
mozilla
.
org
/
xre
/
app
-
info
;
1
"
]
.
getService
(
SpecialPowers
.
Ci
.
nsIXULAppInfo
)
.
version
;
var
isNightly
=
version
.
endsWith
(
"
a1
"
)
;
var
isRelease
=
!
version
.
includes
(
"
a
"
)
;
var
isDesktop
=
!
/
Mobile
|
Tablet
/
.
test
(
navigator
.
userAgent
)
;
var
isMac
=
/
Mac
OS
/
.
test
(
navigator
.
oscpu
)
;
var
isWindows
=
/
Windows
/
.
test
(
navigator
.
oscpu
)
;
var
isAndroid
=
navigator
.
userAgent
.
includes
(
"
Android
"
)
;
var
isLinux
=
/
Linux
/
.
test
(
navigator
.
oscpu
)
&
&
!
isAndroid
;
var
isStylo
=
SpecialPowers
.
DOMWindowUtils
.
isStyledByServo
;
var
isSecureContext
=
window
.
isSecureContext
;
var
interfaceMap
=
{
}
;
function
addInterfaces
(
interfaces
)
{
for
(
var
entry
of
interfaces
)
{
if
(
typeof
(
entry
)
=
=
=
"
string
"
)
{
interfaceMap
[
entry
]
=
true
;
}
else
{
ok
(
!
(
"
pref
"
in
entry
)
"
Bogus
pref
annotation
for
"
+
entry
.
name
)
;
if
(
(
entry
.
nightly
=
=
=
!
isNightly
)
|
|
(
entry
.
nightlyAndroid
=
=
=
!
(
isAndroid
&
&
isNightly
)
&
&
isAndroid
)
|
|
(
entry
.
xbl
=
=
=
!
isXBLScope
)
|
|
(
entry
.
desktop
=
=
=
!
isDesktop
)
|
|
(
entry
.
windows
=
=
=
!
isWindows
)
|
|
(
entry
.
releaseNonWindows
=
=
=
!
isRelease
&
&
!
isWindows
)
|
|
(
entry
.
mac
=
=
=
!
isMac
)
|
|
(
entry
.
linux
=
=
=
!
isLinux
)
|
|
(
entry
.
android
=
=
=
!
isAndroid
&
&
!
entry
.
nightlyAndroid
)
|
|
(
entry
.
stylo
=
=
=
!
isStylo
)
|
|
(
entry
.
release
=
=
=
!
isRelease
)
|
|
(
entry
.
isSecureContext
=
=
=
!
isSecureContext
)
|
|
entry
.
disabled
)
{
interfaceMap
[
entry
.
name
]
=
false
;
}
else
{
interfaceMap
[
entry
.
name
]
=
true
;
}
}
}
}
addInterfaces
(
ecmaGlobals
)
;
addInterfaces
(
interfaceNamesInGlobalScope
)
;
if
(
isXBLScope
)
{
interfaceMap
[
"
QueryInterface
"
]
=
true
;
}
return
interfaceMap
;
}
function
runTest
(
isXBLScope
)
{
var
interfaceMap
=
createInterfaceMap
(
isXBLScope
)
;
for
(
var
name
of
Object
.
getOwnPropertyNames
(
window
)
)
{
if
(
!
/
^
[
A
-
Z
]
/
.
test
(
name
)
&
&
legacyMozPrefixedInterfaces
.
indexOf
(
name
)
<
0
)
{
continue
;
}
ok
(
interfaceMap
[
name
]
"
If
this
is
failing
:
DANGER
are
you
sure
you
want
to
expose
the
new
interface
"
+
name
+
"
to
all
webpages
as
a
property
on
the
window
(
XBL
:
"
+
isXBLScope
+
"
)
?
Do
not
make
a
change
to
this
file
without
a
"
+
"
review
from
a
DOM
peer
for
that
specific
change
!
!
!
(
or
a
JS
peer
for
changes
to
ecmaGlobals
)
"
)
;
delete
interfaceMap
[
name
]
;
}
for
(
var
name
of
Object
.
keys
(
interfaceMap
)
)
{
ok
(
name
in
window
=
=
=
interfaceMap
[
name
]
name
+
"
should
"
+
(
interfaceMap
[
name
]
?
"
"
:
"
NOT
"
)
+
"
be
defined
on
the
"
+
(
isXBLScope
?
"
XBL
"
:
"
global
"
)
+
"
scope
"
)
;
if
(
!
interfaceMap
[
name
]
)
{
delete
interfaceMap
[
name
]
;
}
}
if
(
isXBLScope
)
{
todo_is
(
Object
.
keys
(
interfaceMap
)
.
length
0
"
The
following
interface
(
s
)
are
not
enumerated
:
"
+
Object
.
keys
(
interfaceMap
)
.
join
(
"
"
)
)
;
}
else
{
is
(
Object
.
keys
(
interfaceMap
)
.
length
0
"
The
following
interface
(
s
)
are
not
enumerated
:
"
+
Object
.
keys
(
interfaceMap
)
.
join
(
"
"
)
)
;
}
}
runTest
(
false
)
;
SimpleTest
.
waitForExplicitFinish
(
)
;
