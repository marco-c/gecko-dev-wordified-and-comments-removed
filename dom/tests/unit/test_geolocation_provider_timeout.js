const
{
HttpServer
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
httpd
.
js
"
)
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
var
httpserver
=
null
;
var
geolocation
=
null
;
function
geoHandler
(
metadata
response
)
{
response
.
processAsync
(
)
;
}
function
successCallback
(
)
{
Assert
.
ok
(
false
)
;
do_test_finished
(
)
;
}
function
errorCallback
(
)
{
Assert
.
ok
(
true
)
;
do_test_finished
(
)
;
}
function
run_test
(
)
{
do_test_pending
(
)
;
do_get_profile
(
)
;
httpserver
=
new
HttpServer
(
)
;
httpserver
.
registerPathHandler
(
"
/
geo
"
geoHandler
)
;
httpserver
.
start
(
-
1
)
;
Services
.
prefs
.
setCharPref
(
"
geo
.
provider
.
network
.
url
"
"
http
:
/
/
localhost
:
"
+
httpserver
.
identity
.
primaryPort
+
"
/
geo
"
)
;
Services
.
prefs
.
setBoolPref
(
"
geo
.
provider
.
network
.
scan
"
false
)
;
Services
.
prefs
.
setIntPref
(
"
geo
.
provider
.
network
.
timeout
"
5
)
;
geolocation
=
Cc
[
"
mozilla
.
org
/
geolocation
;
1
"
]
.
getService
(
Ci
.
nsISupports
)
;
geolocation
.
getCurrentPosition
(
successCallback
errorCallback
)
;
}
