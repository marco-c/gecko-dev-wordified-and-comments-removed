#
ifndef
mozilla_dom_WebIdentityHandler_h
#
define
mozilla_dom_WebIdentityHandler_h
#
include
"
mozilla
/
dom
/
AbortFollower
.
h
"
#
include
"
mozilla
/
dom
/
CredentialManagementBinding
.
h
"
#
include
"
mozilla
/
dom
/
WebIdentityChild
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsPIDOMWindow
.
h
"
namespace
mozilla
:
:
dom
{
class
WebIdentityHandler
final
:
public
AbortFollower
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS
(
WebIdentityHandler
)
explicit
WebIdentityHandler
(
nsPIDOMWindowInner
*
aWindow
)
:
mWindow
(
aWindow
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
aWindow
)
;
}
bool
MaybeCreateActor
(
)
;
void
ActorDestroyed
(
)
;
void
RunAbortAlgorithm
(
)
override
;
void
GetCredential
(
const
CredentialRequestOptions
&
aOptions
bool
aSameOriginWithAncestors
const
RefPtr
<
Promise
>
&
aPromise
)
;
void
PreventSilentAccess
(
const
RefPtr
<
Promise
>
&
aPromise
)
;
void
Disconnect
(
const
IdentityCredentialDisconnectOptions
&
aOptions
const
RefPtr
<
Promise
>
&
aPromise
)
;
void
SetLoginStatus
(
const
LoginStatus
&
aStatus
const
RefPtr
<
Promise
>
&
aPromise
)
;
private
:
~
WebIdentityHandler
(
)
;
nsCOMPtr
<
nsPIDOMWindowInner
>
mWindow
;
RefPtr
<
WebIdentityChild
>
mActor
;
RefPtr
<
Promise
>
mGetPromise
;
}
;
}
#
endif
