"
use
strict
"
;
let
test_path
=
"
/
tests
/
dom
/
credentialmanagement
/
identity
/
tests
/
mochitest
"
;
async
function
setupTest
(
testName
idp_origin
=
"
https
:
/
/
example
.
net
"
)
{
await
clearIdentityCredentialStorage
(
)
;
let
idp_api
=
idp_origin
+
test_path
;
ok
(
window
.
location
.
pathname
.
includes
(
testName
)
Must
set
the
right
test
name
when
setting
up
.
Test
name
"
{
testName
}
"
must
be
in
URL
path
"
{
window
.
location
.
pathname
}
"
)
;
let
fetchPromise
=
fetch
(
{
idp_api
}
/
server_manifest
.
sjs
?
set_test
=
{
testName
}
)
;
let
focusPromise
=
SimpleTest
.
promiseFocus
(
)
;
window
.
open
(
{
idp_api
}
/
helper_set_cookie
.
html
"
_blank
"
)
;
await
focusPromise
;
return
fetchPromise
;
}
async
function
clearIdentityCredentialStorage
(
)
{
return
SpecialPowers
.
spawnChrome
(
[
]
(
)
=
>
{
let
icStorageService
=
Cc
[
"
mozilla
.
org
/
browser
/
identity
-
credential
-
storage
-
service
;
1
"
]
.
getService
(
Ci
.
nsIIdentityCredentialStorageService
)
;
icStorageService
.
clear
(
)
;
}
)
;
}
