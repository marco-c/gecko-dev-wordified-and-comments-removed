#
include
"
mozilla
/
dom
/
CDATASection
.
h
"
#
include
"
mozilla
/
dom
/
CDATASectionBinding
.
h
"
#
include
"
mozilla
/
IntegerPrintfMacros
.
h
"
namespace
mozilla
{
namespace
dom
{
CDATASection
:
:
~
CDATASection
(
)
=
default
;
JSObject
*
CDATASection
:
:
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
CDATASection_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
bool
CDATASection
:
:
IsNodeOfType
(
uint32_t
aFlags
)
const
{
return
false
;
}
already_AddRefed
<
CharacterData
>
CDATASection
:
:
CloneDataNode
(
mozilla
:
:
dom
:
:
NodeInfo
*
aNodeInfo
bool
aCloneText
)
const
{
RefPtr
<
mozilla
:
:
dom
:
:
NodeInfo
>
ni
=
aNodeInfo
;
auto
*
nim
=
ni
-
>
NodeInfoManager
(
)
;
RefPtr
<
CDATASection
>
it
=
new
(
nim
)
CDATASection
(
ni
.
forget
(
)
)
;
if
(
aCloneText
)
{
it
-
>
mText
=
mText
;
}
return
it
.
forget
(
)
;
}
#
ifdef
MOZ_DOM_LIST
void
CDATASection
:
:
List
(
FILE
*
out
int32_t
aIndent
)
const
{
int32_t
index
;
for
(
index
=
aIndent
;
-
-
index
>
=
0
;
)
fputs
(
"
"
out
)
;
fprintf
(
out
"
CDATASection
refcount
=
%
"
PRIuPTR
"
<
"
mRefCnt
.
get
(
)
)
;
nsAutoString
tmp
;
ToCString
(
tmp
0
mText
.
GetLength
(
)
)
;
fputs
(
NS_LossyConvertUTF16toASCII
(
tmp
)
.
get
(
)
out
)
;
fputs
(
"
>
\
n
"
out
)
;
}
void
CDATASection
:
:
DumpContent
(
FILE
*
out
int32_t
aIndent
bool
aDumpAll
)
const
{
}
#
endif
}
}
