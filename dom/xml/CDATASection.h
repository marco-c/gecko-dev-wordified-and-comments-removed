#
ifndef
mozilla_dom_CDATASection_h
#
define
mozilla_dom_CDATASection_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
Text
.
h
"
namespace
mozilla
{
namespace
dom
{
class
CDATASection
final
:
public
Text
{
private
:
void
Init
(
)
{
MOZ_ASSERT
(
mNodeInfo
-
>
NodeType
(
)
=
=
CDATA_SECTION_NODE
"
Bad
NodeType
in
aNodeInfo
"
)
;
}
virtual
~
CDATASection
(
)
;
public
:
explicit
CDATASection
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
)
:
Text
(
std
:
:
move
(
aNodeInfo
)
)
{
Init
(
)
;
}
explicit
CDATASection
(
nsNodeInfoManager
*
aNodeInfoManager
)
:
Text
(
aNodeInfoManager
-
>
GetNodeInfo
(
nsGkAtoms
:
:
cdataTagName
nullptr
kNameSpaceID_None
CDATA_SECTION_NODE
)
)
{
Init
(
)
;
}
NS_INLINE_DECL_REFCOUNTING_INHERITED
(
CDATASection
Text
)
virtual
bool
IsNodeOfType
(
uint32_t
aFlags
)
const
override
;
virtual
already_AddRefed
<
CharacterData
>
CloneDataNode
(
mozilla
:
:
dom
:
:
NodeInfo
*
aNodeInfo
bool
aCloneText
)
const
override
;
#
ifdef
MOZ_DOM_LIST
virtual
void
List
(
FILE
*
out
int32_t
aIndent
)
const
override
;
virtual
void
DumpContent
(
FILE
*
out
int32_t
aIndent
bool
aDumpAll
)
const
override
;
#
endif
protected
:
virtual
JSObject
*
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
}
;
}
}
#
endif
