#
ifndef
mozilla_dom_PaymentRequestUpdateEvent_h
#
define
mozilla_dom_PaymentRequestUpdateEvent_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
Event
.
h
"
#
include
"
mozilla
/
dom
/
PaymentRequestUpdateEventBinding
.
h
"
#
include
"
mozilla
/
dom
/
PromiseNativeHandler
.
h
"
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
Promise
;
class
PaymentRequest
;
class
PaymentRequestUpdateEvent
:
public
Event
public
PromiseNativeHandler
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED
(
PaymentRequestUpdateEvent
Event
)
explicit
PaymentRequestUpdateEvent
(
EventTarget
*
aOwner
)
;
virtual
JSObject
*
WrapObjectInternal
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
virtual
void
ResolvedCallback
(
JSContext
*
aCx
JS
:
:
Handle
<
JS
:
:
Value
>
aValue
)
override
;
virtual
void
RejectedCallback
(
JSContext
*
aCx
JS
:
:
Handle
<
JS
:
:
Value
>
aValue
)
override
;
static
already_AddRefed
<
PaymentRequestUpdateEvent
>
Constructor
(
EventTarget
*
aOwner
const
nsAString
&
aType
const
PaymentRequestUpdateEventInit
&
aEventInitDict
)
;
static
already_AddRefed
<
PaymentRequestUpdateEvent
>
Constructor
(
const
GlobalObject
&
aGlobal
const
nsAString
&
aType
const
PaymentRequestUpdateEventInit
&
aEventInitDict
)
;
void
UpdateWith
(
Promise
&
aPromise
ErrorResult
&
aRv
)
;
void
SetRequest
(
PaymentRequest
*
aRequest
)
;
protected
:
~
PaymentRequestUpdateEvent
(
)
;
bool
mWaitForUpdate
;
RefPtr
<
PaymentRequest
>
mRequest
;
}
;
}
}
#
endif
