#
ifndef
mozilla_dom_PaymentRequestManager_h
#
define
mozilla_dom_PaymentRequestManager_h
#
include
"
nsISupports
.
h
"
#
include
"
PaymentRequest
.
h
"
#
include
"
mozilla
/
dom
/
PaymentRequestBinding
.
h
"
#
include
"
mozilla
/
dom
/
PaymentRequestUpdateEventBinding
.
h
"
#
include
"
mozilla
/
dom
/
PaymentResponseBinding
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
dom
{
class
PaymentRequestChild
;
class
IPCPaymentActionRequest
;
class
PaymentRequestManager
final
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
PaymentRequestManager
)
static
already_AddRefed
<
PaymentRequestManager
>
GetSingleton
(
)
;
already_AddRefed
<
PaymentRequest
>
GetPaymentRequestById
(
const
nsAString
&
aRequestId
)
;
nsresult
CreatePayment
(
nsPIDOMWindowInner
*
aWindow
const
Sequence
<
PaymentMethodData
>
&
aMethodData
const
PaymentDetailsInit
&
aDetails
const
PaymentOptions
&
aOptions
PaymentRequest
*
*
aRequest
)
;
nsresult
CanMakePayment
(
const
nsAString
&
aRequestId
)
;
nsresult
ShowPayment
(
const
nsAString
&
aRequestId
)
;
nsresult
AbortPayment
(
const
nsAString
&
aRequestId
)
;
nsresult
CompletePayment
(
const
nsAString
&
aRequestId
const
PaymentComplete
&
aComplete
)
;
nsresult
UpdatePayment
(
const
nsAString
&
aRequestId
const
PaymentDetailsUpdate
&
aDetails
)
;
nsresult
RespondPayment
(
const
IPCPaymentActionResponse
&
aResponse
)
;
nsresult
ChangeShippingAddress
(
const
nsAString
&
aRequestId
const
IPCPaymentAddress
&
aAddress
)
;
nsresult
ChangeShippingOption
(
const
nsAString
&
aRequestId
const
nsAString
&
aOption
)
;
nsresult
ReleasePaymentChild
(
PaymentRequestChild
*
aPaymentChild
)
;
private
:
PaymentRequestManager
(
)
=
default
;
~
PaymentRequestManager
(
)
=
default
;
nsresult
GetPaymentChild
(
PaymentRequest
*
aRequest
PaymentRequestChild
*
*
aPaymentChild
)
;
nsresult
ReleasePaymentChild
(
PaymentRequest
*
aRequest
)
;
nsresult
SendRequestPayment
(
PaymentRequest
*
aRequest
const
IPCPaymentActionRequest
&
action
bool
aReleaseAfterSend
=
false
)
;
nsTArray
<
RefPtr
<
PaymentRequest
>
>
mRequestQueue
;
nsRefPtrHashtable
<
nsRefPtrHashKey
<
PaymentRequest
>
PaymentRequestChild
>
mPaymentChildHash
;
RefPtr
<
PaymentRequest
>
mShowingRequest
;
}
;
}
}
#
endif
