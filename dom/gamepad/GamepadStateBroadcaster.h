#
ifndef
DOM_GAMEPAD_GAMEPADSTATEBROADCASTER_H_
#
define
DOM_GAMEPAD_GAMEPADSTATEBROADCASTER_H_
#
include
"
mozilla
/
dom
/
GamepadBinding
.
h
"
#
include
"
mozilla
/
dom
/
GamepadHandle
.
h
"
#
include
"
mozilla
/
dom
/
GamepadLightIndicatorBinding
.
h
"
#
include
"
mozilla
/
dom
/
GamepadPoseState
.
h
"
#
include
"
mozilla
/
dom
/
GamepadTouchState
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
namespace
mozilla
:
:
ipc
{
class
IProtocol
;
}
namespace
mozilla
:
:
dom
{
class
GamepadStateBroadcastReceiverInfo
;
class
GamepadStateBroadcaster
{
public
:
static
Maybe
<
GamepadStateBroadcaster
>
Create
(
)
;
bool
AddReceiverAndGenerateRemoteInfo
(
const
mozilla
:
:
ipc
:
:
IProtocol
*
aActor
GamepadStateBroadcastReceiverInfo
*
aOut
)
;
void
RemoveReceiver
(
const
mozilla
:
:
ipc
:
:
IProtocol
*
aActor
)
;
GamepadStateBroadcaster
(
GamepadStateBroadcaster
&
&
aOther
)
noexcept
;
GamepadStateBroadcaster
&
operator
=
(
GamepadStateBroadcaster
&
&
aOther
)
noexcept
;
GamepadStateBroadcaster
(
const
GamepadStateBroadcaster
&
)
=
delete
;
GamepadStateBroadcaster
&
operator
=
(
const
GamepadStateBroadcaster
&
)
=
delete
;
~
GamepadStateBroadcaster
(
)
;
private
:
class
Impl
;
GamepadStateBroadcaster
(
)
;
explicit
GamepadStateBroadcaster
(
UniquePtr
<
Impl
>
aImpl
)
;
UniquePtr
<
Impl
>
mImpl
;
}
;
}
#
endif
