#
include
"
mozilla
/
dom
/
PGamepadEventChannelChild
.
h
"
#
include
"
nsRefPtrHashtable
.
h
"
#
ifndef
mozilla_dom_GamepadEventChannelChild_h_
#
define
mozilla_dom_GamepadEventChannelChild_h_
namespace
mozilla
{
namespace
dom
{
class
GamepadEventChannelChild
final
:
public
PGamepadEventChannelChild
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
GamepadEventChannelChild
override
)
static
already_AddRefed
<
GamepadEventChannelChild
>
Create
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGamepadUpdate
(
const
GamepadChangeEvent
&
aGamepadEvent
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvReplyGamepadPromise
(
const
uint32_t
&
aPromiseID
)
;
void
AddPromise
(
const
uint32_t
&
aID
dom
:
:
Promise
*
aPromise
)
;
GamepadEventChannelChild
(
const
GamepadEventChannelChild
&
)
=
delete
;
GamepadEventChannelChild
(
GamepadEventChannelChild
&
&
)
=
delete
;
GamepadEventChannelChild
&
operator
=
(
const
GamepadEventChannelChild
&
)
=
delete
;
GamepadEventChannelChild
&
operator
=
(
GamepadEventChannelChild
&
&
)
=
delete
;
private
:
GamepadEventChannelChild
(
)
=
default
;
~
GamepadEventChannelChild
(
)
=
default
;
nsRefPtrHashtable
<
nsUint32HashKey
dom
:
:
Promise
>
mPromiseList
;
}
;
}
}
#
endif
