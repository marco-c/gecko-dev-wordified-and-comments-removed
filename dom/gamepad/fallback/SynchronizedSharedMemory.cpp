#
include
"
mozilla
/
dom
/
SynchronizedSharedMemory
.
h
"
#
include
"
mozilla
/
dom
/
SynchronizedSharedMemoryRemoteInfo
.
h
"
namespace
mozilla
:
:
dom
{
class
SynchronizedSharedMemoryDetail
:
:
Impl
{
}
;
Maybe
<
SynchronizedSharedMemoryDetail
>
SynchronizedSharedMemoryDetail
:
:
CreateNew
(
uint32_t
)
{
return
Nothing
{
}
;
}
void
SynchronizedSharedMemoryDetail
:
:
LockMutex
(
)
{
MOZ_CRASH
(
"
Should
never
be
called
"
)
;
}
void
SynchronizedSharedMemoryDetail
:
:
UnlockMutex
(
)
{
MOZ_CRASH
(
"
Should
never
be
called
"
)
;
}
void
*
SynchronizedSharedMemoryDetail
:
:
GetPtr
(
)
const
{
MOZ_CRASH
(
"
Should
never
be
called
"
)
;
}
Maybe
<
SynchronizedSharedMemoryDetail
>
SynchronizedSharedMemoryDetail
:
:
CreateFromRemoteInfo
(
const
SynchronizedSharedMemoryRemoteInfo
&
)
{
return
Nothing
{
}
;
}
bool
SynchronizedSharedMemoryDetail
:
:
GenerateRemoteInfo
(
const
mozilla
:
:
ipc
:
:
IProtocol
*
SynchronizedSharedMemoryRemoteInfo
*
)
{
MOZ_CRASH
(
"
Should
never
be
called
"
)
;
}
bool
SynchronizedSharedMemoryDetail
:
:
GenerateTestRemoteInfo
(
SynchronizedSharedMemoryRemoteInfo
*
)
{
MOZ_CRASH
(
"
Should
never
be
called
"
)
;
}
SynchronizedSharedMemoryDetail
:
:
SynchronizedSharedMemoryDetail
(
)
=
default
;
SynchronizedSharedMemoryDetail
:
:
~
SynchronizedSharedMemoryDetail
(
)
=
default
;
SynchronizedSharedMemoryDetail
:
:
SynchronizedSharedMemoryDetail
(
UniquePtr
<
Impl
>
aImpl
)
:
mImpl
(
std
:
:
move
(
aImpl
)
)
{
}
SynchronizedSharedMemoryDetail
:
:
SynchronizedSharedMemoryDetail
(
SynchronizedSharedMemoryDetail
&
&
)
=
default
;
SynchronizedSharedMemoryDetail
&
SynchronizedSharedMemoryDetail
:
:
operator
=
(
SynchronizedSharedMemoryDetail
&
&
)
=
default
;
}
