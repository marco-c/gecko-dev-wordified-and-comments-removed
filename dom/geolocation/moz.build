with
Files
(
"
*
*
"
)
:
BUG_COMPONENT
=
(
"
Core
"
"
DOM
:
Geolocation
"
)
EXPORTS
+
=
[
"
nsGeoPositionIPCSerialiser
.
h
"
]
EXPORTS
.
mozilla
.
dom
+
=
[
"
Geolocation
.
h
"
"
GeolocationCoordinates
.
h
"
"
GeolocationIPCUtils
.
h
"
"
GeolocationPosition
.
h
"
"
GeolocationPositionError
.
h
"
"
GeolocationSystem
.
h
"
]
SOURCES
+
=
[
"
Geolocation
.
cpp
"
"
GeolocationCoordinates
.
cpp
"
"
GeolocationPosition
.
cpp
"
"
GeolocationPositionError
.
cpp
"
]
UNIFIED_SOURCES
+
=
[
"
GeolocationSystem
.
cpp
"
"
MLSFallback
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
and
CONFIG
[
"
MOZ_BUILD_APP
"
]
=
=
"
browser
"
:
EXTRA_JS_MODULES
+
=
[
"
GeolocationUIUtilsWin
.
sys
.
mjs
"
]
XPCOM_MANIFESTS
+
=
[
"
components
.
conf
"
]
XPIDL_SOURCES
+
=
[
"
nsIGeolocationUIUtilsWin
.
idl
"
]
XPIDL_MODULE
=
"
dom_geolocation
"
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
FINAL_LIBRARY
=
"
xul
"
LOCAL_INCLUDES
+
=
[
"
/
dom
/
base
"
"
/
dom
/
ipc
"
]
if
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
android
"
:
LOCAL_INCLUDES
+
=
[
"
/
dom
/
system
/
android
"
]
elif
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
cocoa
"
:
LOCAL_INCLUDES
+
=
[
"
/
dom
/
system
/
mac
"
]
elif
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
windows
"
:
LOCAL_INCLUDES
+
=
[
"
/
dom
/
system
/
windows
/
location
"
]
elif
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
gtk
"
:
if
CONFIG
[
"
MOZ_ENABLE_DBUS
"
]
:
LOCAL_INCLUDES
+
=
[
"
/
dom
/
system
/
linux
"
]
CXXFLAGS
+
=
CONFIG
[
"
MOZ_GTK3_CFLAGS
"
]
