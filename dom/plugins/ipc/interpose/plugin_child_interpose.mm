#
if
!
defined
(
__LP64__
)
#
include
<
dlfcn
.
h
>
#
import
<
Carbon
/
Carbon
.
h
>
#
if
!
defined
(
__QUICKDRAWAPI__
)
struct
Cursor
;
extern
"
C
"
void
SetCursor
(
const
Cursor
*
crsr
)
__attribute__
(
(
weak_import
)
)
;
#
endif
BOOL
(
*
OnSetThemeCursorPtr
)
(
ThemeCursor
)
=
NULL
;
BOOL
(
*
OnSetCursorPtr
)
(
const
Cursor
*
)
=
NULL
;
BOOL
(
*
OnHideCursorPtr
)
(
)
=
NULL
;
BOOL
(
*
OnShowCursorPtr
)
(
)
=
NULL
;
static
BOOL
loadXULPtrs
(
)
{
if
(
!
OnSetThemeCursorPtr
)
{
OnSetThemeCursorPtr
=
(
BOOL
(
*
)
(
ThemeCursor
)
)
dlsym
(
RTLD_DEFAULT
"
mac_plugin_interposing_child_OnSetThemeCursor
"
)
;
}
if
(
!
OnSetCursorPtr
)
{
OnSetCursorPtr
=
(
BOOL
(
*
)
(
const
Cursor
*
)
)
dlsym
(
RTLD_DEFAULT
"
mac_plugin_interposing_child_OnSetCursor
"
)
;
}
if
(
!
OnHideCursorPtr
)
{
OnHideCursorPtr
=
(
BOOL
(
*
)
(
)
)
dlsym
(
RTLD_DEFAULT
"
mac_plugin_interposing_child_OnHideCursor
"
)
;
}
if
(
!
OnShowCursorPtr
)
{
OnShowCursorPtr
=
(
BOOL
(
*
)
(
)
)
dlsym
(
RTLD_DEFAULT
"
mac_plugin_interposing_child_OnShowCursor
"
)
;
}
return
(
OnSetCursorPtr
&
&
OnSetThemeCursorPtr
&
&
OnHideCursorPtr
&
&
OnShowCursorPtr
)
;
}
static
OSStatus
MacPluginChildSetThemeCursor
(
ThemeCursor
cursor
)
{
if
(
loadXULPtrs
(
)
)
{
OnSetThemeCursorPtr
(
cursor
)
;
}
return
:
:
SetThemeCursor
(
cursor
)
;
}
static
void
MacPluginChildSetCursor
(
const
Cursor
*
cursor
)
{
if
(
:
:
SetCursor
)
{
if
(
loadXULPtrs
(
)
)
{
OnSetCursorPtr
(
cursor
)
;
}
:
:
SetCursor
(
cursor
)
;
}
}
static
CGError
MacPluginChildCGDisplayHideCursor
(
CGDirectDisplayID
display
)
{
if
(
loadXULPtrs
(
)
)
{
OnHideCursorPtr
(
)
;
}
return
:
:
CGDisplayHideCursor
(
display
)
;
}
static
CGError
MacPluginChildCGDisplayShowCursor
(
CGDirectDisplayID
display
)
{
if
(
loadXULPtrs
(
)
)
{
OnShowCursorPtr
(
)
;
}
return
:
:
CGDisplayShowCursor
(
display
)
;
}
#
pragma
mark
-
struct
interpose_substitution
{
const
void
*
replacement
;
const
void
*
original
;
}
;
#
define
INTERPOSE_FUNCTION
(
function
)
\
{
\
reinterpret_cast
<
const
void
*
>
(
MacPluginChild
#
#
function
)
\
reinterpret_cast
<
const
void
*
>
(
function
)
\
}
__attribute__
(
(
used
)
)
static
const
interpose_substitution
substitutions
[
]
__attribute__
(
(
section
(
"
__DATA
__interpose
"
)
)
)
=
{
INTERPOSE_FUNCTION
(
SetThemeCursor
)
INTERPOSE_FUNCTION
(
CGDisplayHideCursor
)
INTERPOSE_FUNCTION
(
CGDisplayShowCursor
)
INTERPOSE_FUNCTION
(
SetCursor
)
}
;
#
endif
