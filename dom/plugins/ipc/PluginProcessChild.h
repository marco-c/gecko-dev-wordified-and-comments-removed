#
ifndef
dom_plugins_PluginProcessChild_h
#
define
dom_plugins_PluginProcessChild_h
1
#
include
"
mozilla
/
ipc
/
ProcessChild
.
h
"
#
include
"
mozilla
/
plugins
/
PluginModuleChild
.
h
"
#
if
defined
(
XP_WIN
)
#
include
"
mozilla
/
mscom
/
ProcessRuntime
.
h
"
#
endif
namespace
mozilla
{
namespace
plugins
{
class
PluginProcessChild
:
public
mozilla
:
:
ipc
:
:
ProcessChild
{
protected
:
typedef
mozilla
:
:
ipc
:
:
ProcessChild
ProcessChild
;
public
:
explicit
PluginProcessChild
(
ProcessId
aParentPid
)
:
ProcessChild
(
aParentPid
)
mPlugin
(
true
)
{
}
virtual
~
PluginProcessChild
(
)
{
}
virtual
bool
Init
(
int
aArgc
char
*
aArgv
[
]
)
override
;
virtual
void
CleanUp
(
)
override
;
protected
:
static
PluginProcessChild
*
current
(
)
{
return
static_cast
<
PluginProcessChild
*
>
(
ProcessChild
:
:
current
(
)
)
;
}
private
:
#
if
defined
(
XP_WIN
)
mozilla
:
:
mscom
:
:
ProcessRuntime
mCOMRuntime
;
#
endif
PluginModuleChild
mPlugin
;
DISALLOW_EVIL_CONSTRUCTORS
(
PluginProcessChild
)
;
}
;
}
}
#
endif
