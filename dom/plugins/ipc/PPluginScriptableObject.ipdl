include
protocol
PPluginInstance
;
include
PluginTypes
;
using
struct
mozilla
:
:
void_t
from
"
mozilla
/
ipc
/
IPCCore
.
h
"
;
using
struct
mozilla
:
:
null_t
from
"
mozilla
/
ipc
/
IPCCore
.
h
"
;
namespace
mozilla
{
namespace
plugins
{
union
Variant
{
void_t
;
null_t
;
bool
;
int
;
double
;
nsCString
;
nullable
PPluginScriptableObject
;
}
;
intr
protocol
PPluginScriptableObject
{
manager
PPluginInstance
;
both
:
async
__delete__
(
)
;
parent
:
intr
NPN_Evaluate
(
nsCString
aScript
)
returns
(
Variant
aResult
bool
aSuccess
)
;
child
:
intr
Invalidate
(
)
;
both
:
intr
HasMethod
(
PluginIdentifier
aId
)
returns
(
bool
aHasMethod
)
;
intr
Invoke
(
PluginIdentifier
aId
Variant
[
]
aArgs
)
returns
(
Variant
aResult
bool
aSuccess
)
;
intr
InvokeDefault
(
Variant
[
]
aArgs
)
returns
(
Variant
aResult
bool
aSuccess
)
;
intr
HasProperty
(
PluginIdentifier
aId
)
returns
(
bool
aHasProperty
)
;
intr
SetProperty
(
PluginIdentifier
aId
Variant
aValue
)
returns
(
bool
aSuccess
)
;
intr
RemoveProperty
(
PluginIdentifier
aId
)
returns
(
bool
aSuccess
)
;
intr
Enumerate
(
)
returns
(
PluginIdentifier
[
]
aProperties
bool
aSuccess
)
;
intr
Construct
(
Variant
[
]
aArgs
)
returns
(
Variant
aResult
bool
aSuccess
)
;
async
Protect
(
)
;
async
Unprotect
(
)
;
parent
:
intr
GetParentProperty
(
PluginIdentifier
aId
)
returns
(
Variant
aResult
bool
aSuccess
)
;
child
:
intr
GetChildProperty
(
PluginIdentifier
aId
)
returns
(
bool
aHasProperty
bool
aHasMethod
Variant
aResult
bool
aSuccess
)
;
}
;
}
}
