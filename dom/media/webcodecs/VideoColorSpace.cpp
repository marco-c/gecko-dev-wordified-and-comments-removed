#
include
"
mozilla
/
dom
/
VideoColorSpace
.
h
"
#
include
"
mozilla
/
dom
/
VideoColorSpaceBinding
.
h
"
namespace
mozilla
:
:
dom
{
NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE_0
(
VideoColorSpace
)
NS_IMPL_CYCLE_COLLECTING_ADDREF
(
VideoColorSpace
)
NS_IMPL_CYCLE_COLLECTING_RELEASE
(
VideoColorSpace
)
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
VideoColorSpace
)
NS_WRAPPERCACHE_INTERFACE_MAP_ENTRY
NS_INTERFACE_MAP_ENTRY
(
nsISupports
)
NS_INTERFACE_MAP_END
VideoColorSpace
:
:
VideoColorSpace
(
)
{
}
VideoColorSpace
:
:
~
VideoColorSpace
(
)
{
}
nsIGlobalObject
*
VideoColorSpace
:
:
GetParentObject
(
)
const
{
return
nullptr
;
}
JSObject
*
VideoColorSpace
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
VideoColorSpace_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
already_AddRefed
<
VideoColorSpace
>
VideoColorSpace
:
:
Constructor
(
const
GlobalObject
&
global
const
VideoColorSpaceInit
&
init
ErrorResult
&
aRv
)
{
aRv
.
Throw
(
NS_ERROR_DOM_NOT_SUPPORTED_ERR
)
;
return
nullptr
;
}
Nullable
<
VideoColorPrimaries
>
VideoColorSpace
:
:
GetPrimaries
(
)
const
{
return
nullptr
;
}
Nullable
<
VideoTransferCharacteristics
>
VideoColorSpace
:
:
GetTransfer
(
)
const
{
return
nullptr
;
}
Nullable
<
VideoMatrixCoefficients
>
VideoColorSpace
:
:
GetMatrix
(
)
const
{
return
nullptr
;
}
Nullable
<
bool
>
VideoColorSpace
:
:
GetFullRange
(
)
const
{
return
nullptr
;
}
void
VideoColorSpace
:
:
ToJSON
(
JSContext
*
cx
JS
:
:
MutableHandle
<
JSObject
*
>
aRetVal
)
{
}
}
