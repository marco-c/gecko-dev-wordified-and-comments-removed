#
include
"
WebCodecsUtils
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
CheckedInt
.
h
"
#
include
"
nsDebug
.
h
"
namespace
mozilla
:
:
dom
{
template
<
class
T
>
Result
<
Span
<
uint8_t
>
nsresult
>
GetArrayBufferData
(
const
T
&
aBuffer
)
{
aBuffer
.
ComputeState
(
)
;
CheckedInt
<
size_t
>
byteLength
(
sizeof
(
typename
T
:
:
element_type
)
)
;
byteLength
*
=
aBuffer
.
Length
(
)
;
if
(
NS_WARN_IF
(
!
byteLength
.
isValid
(
)
)
)
{
return
Err
(
NS_ERROR_INVALID_ARG
)
;
}
return
Span
<
uint8_t
>
(
aBuffer
.
Data
(
)
byteLength
.
value
(
)
)
;
}
Result
<
Span
<
uint8_t
>
nsresult
>
GetSharedArrayBufferData
(
const
MaybeSharedArrayBufferViewOrMaybeSharedArrayBuffer
&
aBuffer
)
{
if
(
aBuffer
.
IsArrayBufferView
(
)
)
{
return
GetArrayBufferData
(
aBuffer
.
GetAsArrayBufferView
(
)
)
;
}
MOZ_ASSERT
(
aBuffer
.
IsArrayBuffer
(
)
)
;
return
GetArrayBufferData
(
aBuffer
.
GetAsArrayBuffer
(
)
)
;
}
Result
<
Span
<
uint8_t
>
nsresult
>
GetSharedArrayBufferData
(
const
OwningMaybeSharedArrayBufferViewOrMaybeSharedArrayBuffer
&
aBuffer
)
{
if
(
aBuffer
.
IsArrayBufferView
(
)
)
{
return
GetArrayBufferData
(
aBuffer
.
GetAsArrayBufferView
(
)
)
;
}
MOZ_ASSERT
(
aBuffer
.
IsArrayBuffer
(
)
)
;
return
GetArrayBufferData
(
aBuffer
.
GetAsArrayBuffer
(
)
)
;
}
}
