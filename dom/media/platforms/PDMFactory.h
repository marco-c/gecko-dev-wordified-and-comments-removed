#
if
!
defined
(
PDMFactory_h_
)
#
define
PDMFactory_h_
#
include
"
PlatformDecoderModule
.
h
"
namespace
mozilla
{
class
PDMFactory
:
public
PlatformDecoderModule
{
public
:
PDMFactory
(
)
;
virtual
~
PDMFactory
(
)
;
static
void
Init
(
)
;
already_AddRefed
<
MediaDataDecoder
>
CreateDecoder
(
const
TrackInfo
&
aConfig
FlushableTaskQueue
*
aTaskQueue
MediaDataDecoderCallback
*
aCallback
layers
:
:
LayersBackend
aLayersBackend
=
layers
:
:
LayersBackend
:
:
LAYERS_NONE
layers
:
:
ImageContainer
*
aImageContainer
=
nullptr
)
override
;
bool
SupportsMimeType
(
const
nsACString
&
aMimeType
)
override
;
ConversionRequired
DecoderNeedsConversion
(
const
TrackInfo
&
aConfig
)
const
override
{
MOZ_CRASH
(
"
Should
never
reach
this
function
"
)
;
return
ConversionRequired
:
:
kNeedNone
;
}
protected
:
already_AddRefed
<
MediaDataDecoder
>
CreateVideoDecoder
(
const
VideoInfo
&
aConfig
layers
:
:
LayersBackend
aLayersBackend
layers
:
:
ImageContainer
*
aImageContainer
FlushableTaskQueue
*
aVideoTaskQueue
MediaDataDecoderCallback
*
aCallback
)
override
{
MOZ_CRASH
(
"
Should
never
reach
this
function
"
)
;
return
nullptr
;
}
already_AddRefed
<
MediaDataDecoder
>
CreateAudioDecoder
(
const
AudioInfo
&
aConfig
FlushableTaskQueue
*
aAudioTaskQueue
MediaDataDecoderCallback
*
aCallback
)
override
{
MOZ_CRASH
(
"
Should
never
reach
this
function
"
)
;
return
nullptr
;
}
private
:
already_AddRefed
<
PlatformDecoderModule
>
CreatePDM
(
)
;
static
bool
sUseBlankDecoder
;
static
bool
sGonkDecoderEnabled
;
static
bool
sAndroidMCDecoderPreferred
;
static
bool
sAndroidMCDecoderEnabled
;
static
bool
sGMPDecoderEnabled
;
static
bool
sEnableFuzzingWrapper
;
static
uint32_t
sVideoOutputMinimumInterval_ms
;
static
bool
sDontDelayInputExhausted
;
nsRefPtr
<
PlatformDecoderModule
>
mCurrentPDM
;
}
;
}
#
endif
