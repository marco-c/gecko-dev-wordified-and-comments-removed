#
ifndef
__D3D11TextureWrapper_h__
#
define
__D3D11TextureWrapper_h__
#
include
<
functional
>
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
gfx
/
Types
.
h
"
struct
AVFrame
;
struct
AVBufferRef
;
struct
ID3D11Texture2D
;
namespace
mozilla
{
struct
FFmpegLibWrapper
;
class
D3D11TextureWrapper
final
{
public
:
D3D11TextureWrapper
(
AVFrame
*
aAVFrame
FFmpegLibWrapper
*
aLib
ID3D11Texture2D
*
aTexture
const
gfx
:
:
SurfaceFormat
aFormat
const
unsigned
int
aArrayIdx
std
:
:
function
<
void
(
)
>
&
&
aReleaseMethod
)
;
D3D11TextureWrapper
(
D3D11TextureWrapper
&
&
aWrapper
)
=
delete
;
D3D11TextureWrapper
(
const
D3D11TextureWrapper
&
&
aWrapper
)
=
delete
;
~
D3D11TextureWrapper
(
)
;
ID3D11Texture2D
*
GetTexture
(
)
const
{
return
mTexture
;
}
const
gfx
:
:
SurfaceFormat
mFormat
;
const
unsigned
int
mArrayIdx
;
const
std
:
:
function
<
void
(
)
>
mReleaseMethod
;
private
:
FFmpegLibWrapper
*
mLib
;
ID3D11Texture2D
*
mTexture
;
AVBufferRef
*
mHWAVBuffer
;
}
;
}
#
endif
