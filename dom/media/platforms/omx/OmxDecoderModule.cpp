#
include
"
OmxDecoderModule
.
h
"
#
include
"
OmxDataDecoder
.
h
"
#
include
"
OmxPlatformLayer
.
h
"
namespace
mozilla
{
already_AddRefed
<
MediaDataDecoder
>
OmxDecoderModule
:
:
CreateVideoDecoder
(
const
VideoInfo
&
aConfig
mozilla
:
:
layers
:
:
LayersBackend
aLayersBackend
mozilla
:
:
layers
:
:
ImageContainer
*
aImageContainer
FlushableTaskQueue
*
aVideoTaskQueue
MediaDataDecoderCallback
*
aCallback
DecoderDoctorDiagnostics
*
aDiagnostics
)
{
RefPtr
<
OmxDataDecoder
>
decoder
=
new
OmxDataDecoder
(
aConfig
aCallback
aImageContainer
)
;
return
decoder
.
forget
(
)
;
}
already_AddRefed
<
MediaDataDecoder
>
OmxDecoderModule
:
:
CreateAudioDecoder
(
const
AudioInfo
&
aConfig
FlushableTaskQueue
*
aAudioTaskQueue
MediaDataDecoderCallback
*
aCallback
DecoderDoctorDiagnostics
*
aDiagnostics
)
{
RefPtr
<
OmxDataDecoder
>
decoder
=
new
OmxDataDecoder
(
aConfig
aCallback
nullptr
)
;
return
decoder
.
forget
(
)
;
}
void
OmxDecoderModule
:
:
Init
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
"
Must
be
on
main
thread
.
"
)
;
}
PlatformDecoderModule
:
:
ConversionRequired
OmxDecoderModule
:
:
DecoderNeedsConversion
(
const
TrackInfo
&
aConfig
)
const
{
return
kNeedNone
;
}
bool
OmxDecoderModule
:
:
SupportsMimeType
(
const
nsACString
&
aMimeType
DecoderDoctorDiagnostics
*
aDiagnostics
)
const
{
return
OmxPlatformLayer
:
:
SupportsMimeType
(
aMimeType
)
;
}
}
