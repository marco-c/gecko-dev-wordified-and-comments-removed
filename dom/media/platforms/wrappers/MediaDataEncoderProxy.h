#
if
!
defined
(
MediaDataEncoderProxy_h_
)
#
define
MediaDataEncoderProxy_h_
#
include
"
PlatformEncoderModule
.
h
"
#
include
"
mozilla
/
Atomics
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsThreadUtils
.
h
"
#
include
"
nscore
.
h
"
namespace
mozilla
{
class
MediaDataEncoderProxy
final
:
public
MediaDataEncoder
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
MediaDataEncoderProxy
final
)
;
explicit
MediaDataEncoderProxy
(
already_AddRefed
<
MediaDataEncoder
>
aProxyEncoder
already_AddRefed
<
nsISerialEventTarget
>
aProxyThread
)
;
RefPtr
<
InitPromise
>
Init
(
)
override
;
RefPtr
<
EncodePromise
>
Encode
(
const
MediaData
*
aSample
)
override
;
RefPtr
<
ReconfigurationPromise
>
Reconfigure
(
const
RefPtr
<
const
EncoderConfigurationChangeList
>
&
aConfigurationChanges
)
override
;
RefPtr
<
EncodePromise
>
Drain
(
)
override
;
RefPtr
<
ShutdownPromise
>
Shutdown
(
)
override
;
RefPtr
<
GenericPromise
>
SetBitrate
(
uint32_t
aBitsPerSec
)
override
;
bool
IsHardwareAccelerated
(
nsACString
&
aFailureReason
)
const
override
;
nsCString
GetDescriptionName
(
)
const
override
;
protected
:
virtual
~
MediaDataEncoderProxy
(
)
;
private
:
RefPtr
<
MediaDataEncoder
>
mProxyEncoder
;
const
nsCOMPtr
<
nsISerialEventTarget
>
mProxyThread
;
#
if
defined
(
DEBUG
)
Atomic
<
bool
>
mIsShutdown
=
Atomic
<
bool
>
(
false
)
;
#
endif
}
;
}
#
endif
