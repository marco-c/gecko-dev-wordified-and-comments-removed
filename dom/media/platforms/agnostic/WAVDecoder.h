#
if
!
defined
(
WaveDecoder_h_
)
#
define
WaveDecoder_h_
#
include
"
PlatformDecoderModule
.
h
"
namespace
mozilla
{
DDLoggedTypeDeclNameAndBase
(
WaveDataDecoder
MediaDataDecoder
)
;
class
WaveDataDecoder
final
:
public
MediaDataDecoder
public
DecoderDoctorLifeLogger
<
WaveDataDecoder
>
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
WaveDataDecoder
final
)
;
explicit
WaveDataDecoder
(
const
CreateDecoderParams
&
aParams
)
;
static
bool
IsWave
(
const
nsACString
&
aMimeType
)
;
RefPtr
<
InitPromise
>
Init
(
)
override
;
RefPtr
<
DecodePromise
>
Decode
(
MediaRawData
*
aSample
)
override
;
RefPtr
<
DecodePromise
>
Drain
(
)
override
;
RefPtr
<
FlushPromise
>
Flush
(
)
override
;
RefPtr
<
ShutdownPromise
>
Shutdown
(
)
override
;
nsCString
GetDescriptionName
(
)
const
override
{
return
"
wave
audio
decoder
"
_ns
;
}
nsCString
GetCodecName
(
)
const
override
{
return
"
wave
"
_ns
;
}
private
:
~
WaveDataDecoder
(
)
=
default
;
const
AudioInfo
mInfo
;
nsCOMPtr
<
nsISerialEventTarget
>
mThread
;
}
;
}
#
endif
