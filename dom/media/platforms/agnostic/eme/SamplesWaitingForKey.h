#
ifndef
SamplesWaitingForKey_h_
#
define
SamplesWaitingForKey_h_
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
namespace
mozilla
{
typedef
nsTArray
<
uint8_t
>
CencKeyId
;
class
CDMProxy
;
class
MediaRawData
;
class
SamplesWaitingForKey
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
SamplesWaitingForKey
)
typedef
MozPromise
<
RefPtr
<
MediaRawData
>
bool
true
>
WaitForKeyPromise
;
explicit
SamplesWaitingForKey
(
CDMProxy
*
aProxy
)
;
RefPtr
<
WaitForKeyPromise
>
WaitIfKeyNotUsable
(
MediaRawData
*
aSample
)
;
void
NotifyUsable
(
const
CencKeyId
&
aKeyId
)
;
void
Flush
(
)
;
protected
:
~
SamplesWaitingForKey
(
)
;
private
:
Mutex
mMutex
;
RefPtr
<
CDMProxy
>
mProxy
;
struct
SampleEntry
{
RefPtr
<
MediaRawData
>
mSample
;
MozPromiseHolder
<
WaitForKeyPromise
>
mPromise
;
}
;
nsTArray
<
SampleEntry
>
mSamples
;
}
;
}
#
endif
