#
ifndef
SamplesWaitingForKey_h_
#
define
SamplesWaitingForKey_h_
#
include
"
mozilla
/
TaskQueue
.
h
"
#
include
"
PlatformDecoderModule
.
h
"
namespace
mozilla
{
typedef
nsTArray
<
uint8_t
>
CencKeyId
;
class
CDMProxy
;
class
SamplesWaitingForKey
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
SamplesWaitingForKey
)
explicit
SamplesWaitingForKey
(
MediaDataDecoder
*
aDecoder
MediaDataDecoderCallback
*
aCallback
TaskQueue
*
aTaskQueue
CDMProxy
*
aProxy
)
;
bool
WaitIfKeyNotUsable
(
MediaRawData
*
aSample
)
;
void
NotifyUsable
(
const
CencKeyId
&
aKeyId
)
;
void
Flush
(
)
;
void
BreakCycles
(
)
;
protected
:
~
SamplesWaitingForKey
(
)
;
private
:
Mutex
mMutex
;
RefPtr
<
MediaDataDecoder
>
mDecoder
;
MediaDataDecoderCallback
*
mDecoderCallback
;
RefPtr
<
TaskQueue
>
mTaskQueue
;
RefPtr
<
CDMProxy
>
mProxy
;
nsTArray
<
RefPtr
<
MediaRawData
>
>
mSamples
;
}
;
}
#
endif
