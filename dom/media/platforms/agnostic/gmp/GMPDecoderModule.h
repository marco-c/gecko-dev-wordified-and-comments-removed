#
if
!
defined
(
GMPDecoderModule_h_
)
#
define
GMPDecoderModule_h_
#
include
"
PlatformDecoderModule
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
define
SHARED_GMP_DECODING_NODE_ID
NS_LITERAL_CSTRING
(
"
gmp
-
shared
-
decoding
"
)
namespace
mozilla
{
class
GMPDecoderModule
:
public
PlatformDecoderModule
{
public
:
GMPDecoderModule
(
)
;
virtual
~
GMPDecoderModule
(
)
;
already_AddRefed
<
MediaDataDecoder
>
CreateVideoDecoder
(
const
VideoInfo
&
aConfig
layers
:
:
LayersBackend
aLayersBackend
layers
:
:
ImageContainer
*
aImageContainer
FlushableTaskQueue
*
aVideoTaskQueue
MediaDataDecoderCallback
*
aCallback
DecoderDoctorDiagnostics
*
aDiagnostics
)
override
;
already_AddRefed
<
MediaDataDecoder
>
CreateAudioDecoder
(
const
AudioInfo
&
aConfig
FlushableTaskQueue
*
aAudioTaskQueue
MediaDataDecoderCallback
*
aCallback
DecoderDoctorDiagnostics
*
aDiagnostics
)
override
;
ConversionRequired
DecoderNeedsConversion
(
const
TrackInfo
&
aConfig
)
const
override
;
bool
SupportsMimeType
(
const
nsACString
&
aMimeType
DecoderDoctorDiagnostics
*
aDiagnostics
)
const
override
;
static
void
Init
(
)
;
static
const
Maybe
<
nsCString
>
PreferredGMP
(
const
nsACString
&
aMimeType
)
;
static
bool
SupportsMimeType
(
const
nsACString
&
aMimeType
const
Maybe
<
nsCString
>
&
aGMP
)
;
static
void
UpdateUsableCodecs
(
)
;
}
;
}
#
endif
