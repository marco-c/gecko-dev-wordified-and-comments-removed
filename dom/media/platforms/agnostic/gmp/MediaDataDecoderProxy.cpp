#
include
"
MediaDataDecoderProxy
.
h
"
namespace
mozilla
{
RefPtr
<
MediaDataDecoder
:
:
InitPromise
>
MediaDataDecoderProxy
:
:
Init
(
)
{
MOZ_ASSERT
(
!
mIsShutdown
)
;
RefPtr
<
MediaDataDecoderProxy
>
self
=
this
;
return
InvokeAsync
(
mProxyThread
__func__
[
self
this
]
(
)
{
return
mProxyDecoder
-
>
Init
(
)
;
}
)
;
}
RefPtr
<
MediaDataDecoder
:
:
DecodePromise
>
MediaDataDecoderProxy
:
:
Decode
(
MediaRawData
*
aSample
)
{
MOZ_ASSERT
(
!
IsOnProxyThread
(
)
)
;
MOZ_ASSERT
(
!
mIsShutdown
)
;
RefPtr
<
MediaDataDecoderProxy
>
self
=
this
;
RefPtr
<
MediaRawData
>
sample
=
aSample
;
return
InvokeAsync
(
mProxyThread
__func__
[
self
this
sample
]
(
)
{
return
mProxyDecoder
-
>
Decode
(
sample
)
;
}
)
;
}
RefPtr
<
MediaDataDecoder
:
:
FlushPromise
>
MediaDataDecoderProxy
:
:
Flush
(
)
{
MOZ_ASSERT
(
!
IsOnProxyThread
(
)
)
;
MOZ_ASSERT
(
!
mIsShutdown
)
;
RefPtr
<
MediaDataDecoderProxy
>
self
=
this
;
return
InvokeAsync
(
mProxyThread
__func__
[
self
this
]
(
)
{
return
mProxyDecoder
-
>
Flush
(
)
;
}
)
;
}
RefPtr
<
MediaDataDecoder
:
:
DecodePromise
>
MediaDataDecoderProxy
:
:
Drain
(
)
{
MOZ_ASSERT
(
!
IsOnProxyThread
(
)
)
;
MOZ_ASSERT
(
!
mIsShutdown
)
;
RefPtr
<
MediaDataDecoderProxy
>
self
=
this
;
return
InvokeAsync
(
mProxyThread
__func__
[
self
this
]
(
)
{
return
mProxyDecoder
-
>
Drain
(
)
;
}
)
;
}
RefPtr
<
ShutdownPromise
>
MediaDataDecoderProxy
:
:
Shutdown
(
)
{
MOZ_ASSERT
(
!
IsOnProxyThread
(
)
)
;
MOZ_ASSERT
(
!
mIsShutdown
)
;
#
if
defined
(
DEBUG
)
mIsShutdown
=
true
;
#
endif
RefPtr
<
MediaDataDecoderProxy
>
self
=
this
;
return
InvokeAsync
(
mProxyThread
__func__
[
self
this
]
(
)
{
return
mProxyDecoder
-
>
Shutdown
(
)
;
}
)
;
}
}
