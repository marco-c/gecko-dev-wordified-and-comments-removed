#
if
!
defined
(
AOMDecoder_h_
)
#
define
AOMDecoder_h_
#
include
"
PlatformDecoderModule
.
h
"
#
include
"
mozilla
/
Span
.
h
"
#
include
<
stdint
.
h
>
#
include
"
aom
/
aom_decoder
.
h
"
namespace
mozilla
{
class
AOMDecoder
:
public
MediaDataDecoder
{
public
:
explicit
AOMDecoder
(
const
CreateDecoderParams
&
aParams
)
;
RefPtr
<
InitPromise
>
Init
(
)
override
;
RefPtr
<
DecodePromise
>
Decode
(
MediaRawData
*
aSample
)
override
;
RefPtr
<
DecodePromise
>
Drain
(
)
override
;
RefPtr
<
FlushPromise
>
Flush
(
)
override
;
RefPtr
<
ShutdownPromise
>
Shutdown
(
)
override
;
const
char
*
GetDescriptionName
(
)
const
override
{
return
"
libaom
(
AV1
)
video
decoder
"
;
}
static
bool
IsAV1
(
const
nsACString
&
aMimeType
)
;
static
bool
IsSupportedCodec
(
const
nsAString
&
aCodecType
)
;
static
bool
IsKeyframe
(
Span
<
const
uint8_t
>
aBuffer
)
;
static
gfx
:
:
IntSize
GetFrameSize
(
Span
<
const
uint8_t
>
aBuffer
)
;
private
:
~
AOMDecoder
(
)
;
RefPtr
<
DecodePromise
>
ProcessDecode
(
MediaRawData
*
aSample
)
;
const
RefPtr
<
layers
:
:
ImageContainer
>
mImageContainer
;
const
RefPtr
<
TaskQueue
>
mTaskQueue
;
aom_codec_ctx_t
mCodec
;
const
VideoInfo
&
mInfo
;
}
;
}
#
endif
