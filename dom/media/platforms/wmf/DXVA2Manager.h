#
if
!
defined
(
DXVA2Manager_h_
)
#
define
DXVA2Manager_h_
#
include
"
WMF
.
h
"
#
include
"
MediaInfo
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
nsRect
.
h
"
namespace
mozilla
{
namespace
layers
{
class
Image
;
class
ImageContainer
;
class
KnowsCompositor
;
}
class
DXVA2Manager
{
public
:
static
DXVA2Manager
*
CreateD3D9DXVA
(
layers
:
:
KnowsCompositor
*
aKnowsCompositor
nsACString
&
aFailureReason
)
;
static
DXVA2Manager
*
CreateD3D11DXVA
(
layers
:
:
KnowsCompositor
*
aKnowsCompositor
nsACString
&
aFailureReason
)
;
virtual
IUnknown
*
GetDXVADeviceManager
(
)
=
0
;
virtual
HRESULT
CopyToImage
(
IMFSample
*
aVideoSample
const
nsIntRect
&
aRegion
layers
:
:
Image
*
*
aOutImage
)
=
0
;
virtual
HRESULT
ConfigureForSize
(
uint32_t
aWidth
uint32_t
aHeight
)
{
return
S_OK
;
}
virtual
bool
IsD3D11
(
)
{
return
false
;
}
virtual
~
DXVA2Manager
(
)
;
virtual
bool
SupportsConfig
(
IMFMediaType
*
aType
float
aFramerate
)
=
0
;
virtual
bool
CreateDXVA2Decoder
(
const
VideoInfo
&
aVideoInfo
nsACString
&
aFailureReason
)
=
0
;
protected
:
Mutex
mLock
;
DXVA2Manager
(
)
;
bool
IsUnsupportedResolution
(
const
uint32_t
&
aWidth
const
uint32_t
&
aHeight
const
float
&
aFramerate
)
const
;
bool
mIsAMDPreUVD4
;
}
;
}
#
endif
