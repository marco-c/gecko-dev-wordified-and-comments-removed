#
if
!
defined
(
WMFAudioOutputSource_h_
)
#
define
WMFAudioOutputSource_h_
#
include
"
MFTDecoder
.
h
"
#
include
"
WMF
.
h
"
#
include
"
WMFDecoderModule
.
h
"
#
include
"
WMFMediaDataDecoder
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
namespace
mozilla
{
class
WMFAudioMFTManager
:
public
MFTManager
{
public
:
explicit
WMFAudioMFTManager
(
const
AudioInfo
&
aConfig
)
;
~
WMFAudioMFTManager
(
)
;
bool
Init
(
)
;
HRESULT
Input
(
MediaRawData
*
aSample
)
override
;
HRESULT
Output
(
int64_t
aStreamOffset
RefPtr
<
MediaData
>
&
aOutput
)
override
;
void
Shutdown
(
)
override
;
TrackInfo
:
:
TrackType
GetType
(
)
override
{
return
TrackInfo
:
:
kAudioTrack
;
}
nsCString
GetDescriptionName
(
)
const
override
{
return
"
wmf
audio
decoder
"
_ns
;
}
nsCString
GetCodecName
(
)
const
override
;
private
:
HRESULT
UpdateOutputType
(
)
;
bool
IsPartialOutput
(
const
media
:
:
TimeUnit
&
aNewOutputDuration
const
bool
aIsRateChangedToHigher
)
const
;
uint32_t
mAudioChannels
;
AudioConfig
:
:
ChannelLayout
:
:
ChannelMap
mChannelsMap
;
uint32_t
mAudioRate
;
nsTArray
<
BYTE
>
mUserData
;
WMFStreamType
mStreamType
;
const
GUID
&
GetMediaSubtypeGUID
(
)
;
media
:
:
TimeUnit
mLastInputTime
=
media
:
:
TimeUnit
:
:
Zero
(
)
;
media
:
:
TimeUnit
mLastOutputDuration
=
media
:
:
TimeUnit
:
:
Zero
(
)
;
bool
mFirstFrame
=
true
;
uint64_t
mTotalMediaFrames
=
0
;
uint32_t
mEncoderDelay
=
0
;
uint32_t
mRemainingEncoderDelay
=
0
;
}
;
}
#
endif
