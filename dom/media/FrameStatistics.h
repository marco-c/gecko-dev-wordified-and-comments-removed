#
ifndef
FrameStatistics_h_
#
define
FrameStatistics_h_
namespace
mozilla
{
struct
FrameStatisticsData
{
uint64_t
mParsedFrames
=
0
;
uint64_t
mDecodedFrames
=
0
;
uint64_t
mPresentedFrames
=
0
;
uint64_t
mDroppedFrames
=
0
;
}
;
class
FrameStatistics
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
FrameStatistics
)
;
FrameStatistics
(
)
:
mReentrantMonitor
(
"
FrameStats
"
)
{
}
FrameStatisticsData
GetFrameStatisticsData
(
)
const
{
ReentrantMonitorAutoEnter
mon
(
mReentrantMonitor
)
;
return
mFrameStatisticsData
;
}
uint64_t
GetParsedFrames
(
)
const
{
ReentrantMonitorAutoEnter
mon
(
mReentrantMonitor
)
;
return
mFrameStatisticsData
.
mParsedFrames
;
}
uint64_t
GetDecodedFrames
(
)
const
{
ReentrantMonitorAutoEnter
mon
(
mReentrantMonitor
)
;
return
mFrameStatisticsData
.
mDecodedFrames
;
}
uint64_t
GetPresentedFrames
(
)
const
{
ReentrantMonitorAutoEnter
mon
(
mReentrantMonitor
)
;
return
mFrameStatisticsData
.
mPresentedFrames
;
}
uint64_t
GetDroppedFrames
(
)
const
{
ReentrantMonitorAutoEnter
mon
(
mReentrantMonitor
)
;
return
mFrameStatisticsData
.
mDroppedFrames
;
}
void
NotifyDecodedFrames
(
uint64_t
aParsed
uint64_t
aDecoded
uint64_t
aDropped
)
{
if
(
aParsed
=
=
0
&
&
aDecoded
=
=
0
&
&
aDropped
=
=
0
)
{
return
;
}
ReentrantMonitorAutoEnter
mon
(
mReentrantMonitor
)
;
mFrameStatisticsData
.
mParsedFrames
+
=
aParsed
;
mFrameStatisticsData
.
mDecodedFrames
+
=
aDecoded
;
mFrameStatisticsData
.
mDroppedFrames
+
=
aDropped
;
}
void
NotifyPresentedFrame
(
)
{
ReentrantMonitorAutoEnter
mon
(
mReentrantMonitor
)
;
+
+
mFrameStatisticsData
.
mPresentedFrames
;
}
private
:
~
FrameStatistics
(
)
{
}
mutable
ReentrantMonitor
mReentrantMonitor
;
FrameStatisticsData
mFrameStatisticsData
;
}
;
}
#
endif
