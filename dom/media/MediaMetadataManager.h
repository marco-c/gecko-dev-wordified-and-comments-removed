#
if
!
defined
(
MediaMetadataManager_h__
)
#
define
MediaMetadataManager_h__
#
include
"
mozilla
/
AbstractThread
.
h
"
#
include
"
mozilla
/
LinkedList
.
h
"
#
include
"
MediaEventSource
.
h
"
#
include
"
TimeUnits
.
h
"
#
include
"
VideoUtils
.
h
"
namespace
mozilla
{
class
TimedMetadata
;
typedef
MediaEventProducerExc
<
TimedMetadata
>
TimedMetadataEventProducer
;
typedef
MediaEventSourceExc
<
TimedMetadata
>
TimedMetadataEventSource
;
class
TimedMetadata
:
public
LinkedListElement
<
TimedMetadata
>
{
public
:
TimedMetadata
(
const
media
:
:
TimeUnit
&
aPublishTime
UniquePtr
<
MetadataTags
>
&
&
aTags
UniquePtr
<
MediaInfo
>
&
&
aInfo
)
:
mPublishTime
(
aPublishTime
)
mTags
(
std
:
:
move
(
aTags
)
)
mInfo
(
std
:
:
move
(
aInfo
)
)
{
}
TimedMetadata
(
TimedMetadata
&
&
aOther
)
:
mPublishTime
(
aOther
.
mPublishTime
)
mTags
(
std
:
:
move
(
aOther
.
mTags
)
)
mInfo
(
std
:
:
move
(
aOther
.
mInfo
)
)
{
}
media
:
:
TimeUnit
mPublishTime
;
UniquePtr
<
MetadataTags
>
mTags
;
UniquePtr
<
MediaInfo
>
mInfo
;
}
;
class
MediaMetadataManager
{
public
:
~
MediaMetadataManager
(
)
{
TimedMetadata
*
element
;
while
(
(
element
=
mMetadataQueue
.
popFirst
(
)
)
!
=
nullptr
)
{
delete
element
;
}
}
void
Connect
(
TimedMetadataEventSource
&
aEvent
AbstractThread
*
aThread
)
{
mListener
=
aEvent
.
Connect
(
aThread
this
&
MediaMetadataManager
:
:
OnMetadataQueued
)
;
}
void
Disconnect
(
)
{
mListener
.
Disconnect
(
)
;
}
TimedMetadataEventSource
&
TimedMetadataEvent
(
)
{
return
mTimedMetadataEvent
;
}
void
DispatchMetadataIfNeeded
(
const
media
:
:
TimeUnit
&
aCurrentTime
)
{
TimedMetadata
*
metadata
=
mMetadataQueue
.
getFirst
(
)
;
while
(
metadata
&
&
aCurrentTime
>
=
metadata
-
>
mPublishTime
)
{
mTimedMetadataEvent
.
Notify
(
std
:
:
move
(
*
metadata
)
)
;
delete
mMetadataQueue
.
popFirst
(
)
;
metadata
=
mMetadataQueue
.
getFirst
(
)
;
}
}
protected
:
void
OnMetadataQueued
(
TimedMetadata
&
&
aMetadata
)
{
mMetadataQueue
.
insertBack
(
new
TimedMetadata
(
std
:
:
move
(
aMetadata
)
)
)
;
}
LinkedList
<
TimedMetadata
>
mMetadataQueue
;
MediaEventListener
mListener
;
TimedMetadataEventProducer
mTimedMetadataEvent
;
}
;
}
#
endif
