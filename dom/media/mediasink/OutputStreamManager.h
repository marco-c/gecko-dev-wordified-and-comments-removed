#
ifndef
OutputStreamManager_h
#
define
OutputStreamManager_h
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
class
MediaInputPort
;
class
MediaStream
;
class
MediaStreamGraph
;
class
OutputStreamManager
;
class
ProcessedMediaStream
;
class
OutputStreamData
{
public
:
~
OutputStreamData
(
)
;
void
Init
(
OutputStreamManager
*
aOwner
ProcessedMediaStream
*
aStream
)
;
void
Connect
(
MediaStream
*
aStream
)
;
bool
Disconnect
(
)
;
bool
Equals
(
MediaStream
*
aStream
)
const
;
MediaStreamGraph
*
Graph
(
)
const
;
private
:
OutputStreamManager
*
mOwner
;
RefPtr
<
ProcessedMediaStream
>
mStream
;
RefPtr
<
MediaInputPort
>
mPort
;
}
;
class
OutputStreamManager
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
OutputStreamManager
)
;
public
:
void
Add
(
ProcessedMediaStream
*
aStream
bool
aFinishWhenEnded
)
;
void
Remove
(
MediaStream
*
aStream
)
;
bool
IsEmpty
(
)
const
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
return
mStreams
.
IsEmpty
(
)
;
}
void
Connect
(
MediaStream
*
aStream
)
;
void
Disconnect
(
)
;
MediaStreamGraph
*
Graph
(
)
const
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
return
!
IsEmpty
(
)
?
mStreams
[
0
]
.
Graph
(
)
:
nullptr
;
}
private
:
~
OutputStreamManager
(
)
{
}
RefPtr
<
MediaStream
>
mInputStream
;
nsTArray
<
OutputStreamData
>
mStreams
;
}
;
}
#
endif
