#
ifndef
MediaSink_h_
#
define
MediaSink_h_
#
include
"
mozilla
/
nsRefPtr
.
h
"
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
MediaInfo
.
h
"
namespace
mozilla
{
class
TimeStamp
;
namespace
media
{
class
MediaSink
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
MediaSink
)
;
typedef
mozilla
:
:
TrackInfo
:
:
TrackType
TrackType
;
struct
PlaybackParams
{
PlaybackParams
(
)
:
mVolume
(
1
.
0
)
mPlaybackRate
(
1
.
0
)
mPreservesPitch
(
true
)
{
}
double
mVolume
;
double
mPlaybackRate
;
bool
mPreservesPitch
;
}
;
virtual
const
PlaybackParams
&
GetPlaybackParams
(
)
const
=
0
;
virtual
void
SetPlaybackParams
(
const
PlaybackParams
&
aParams
)
=
0
;
virtual
nsRefPtr
<
GenericPromise
>
OnEnded
(
TrackType
aType
)
=
0
;
virtual
int64_t
GetEndTime
(
TrackType
aType
)
const
=
0
;
virtual
int64_t
GetPosition
(
TimeStamp
*
aTimeStamp
=
nullptr
)
const
=
0
;
virtual
bool
HasUnplayedFrames
(
TrackType
aType
)
const
=
0
;
virtual
void
SetVolume
(
double
aVolume
)
{
}
virtual
void
SetPlaybackRate
(
double
aPlaybackRate
)
{
}
virtual
void
SetPreservesPitch
(
bool
aPreservesPitch
)
{
}
virtual
void
SetPlaying
(
bool
aPlaying
)
=
0
;
virtual
void
Start
(
int64_t
aStartTime
const
MediaInfo
&
aInfo
)
=
0
;
virtual
void
Stop
(
)
=
0
;
virtual
bool
IsStarted
(
)
const
=
0
;
virtual
void
Shutdown
(
)
{
}
protected
:
virtual
~
MediaSink
(
)
{
}
}
;
}
}
#
endif
