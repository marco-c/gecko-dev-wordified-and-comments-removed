#
ifndef
mozilla_CamerasTypes_h
#
define
mozilla_CamerasTypes_h
#
include
"
PerformanceRecorder
.
h
"
#
include
"
ipc
/
EnumSerializer
.
h
"
namespace
mozilla
:
:
camera
{
enum
CaptureEngine
:
int
{
InvalidEngine
=
0
ScreenEngine
BrowserEngine
WinEngine
CameraEngine
MaxEngine
}
;
enum
class
CamerasAccessStatus
{
Granted
=
1
RequestRequired
Rejected
Error
}
;
TrackingId
:
:
Source
CaptureEngineToTrackingSourceStr
(
const
CaptureEngine
&
aEngine
)
;
}
namespace
IPC
{
template
<
>
struct
ParamTraits
<
mozilla
:
:
camera
:
:
CaptureEngine
>
:
public
ContiguousEnumSerializer
<
mozilla
:
:
camera
:
:
CaptureEngine
mozilla
:
:
camera
:
:
CaptureEngine
:
:
InvalidEngine
mozilla
:
:
camera
:
:
CaptureEngine
:
:
MaxEngine
>
{
}
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
camera
:
:
CamerasAccessStatus
>
:
public
ContiguousEnumSerializerInclusive
<
mozilla
:
:
camera
:
:
CamerasAccessStatus
mozilla
:
:
camera
:
:
CamerasAccessStatus
:
:
Granted
mozilla
:
:
camera
:
:
CamerasAccessStatus
:
:
Error
>
{
}
;
}
#
endif
