#
ifndef
DOM_MEDIA_SYSTEMSERVICES_OBJC_VIDEO_CAPTURE_VIDEO_CAPTURE2_H_
#
define
DOM_MEDIA_SYSTEMSERVICES_OBJC_VIDEO_CAPTURE_VIDEO_CAPTURE2_H_
#
import
"
components
/
capturer
/
RTCCameraVideoCapturer
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
api
/
sequence_checker
.
h
"
#
include
"
MediaEventSource
.
h
"
#
include
"
modules
/
video_capture
/
video_capture_impl
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
StateWatching
.
h
"
#
include
"
PerformanceRecorder
.
h
"
interface
VideoCaptureAdapter
:
NSObject
<
RTCVideoCapturerDelegate
>
{
public
mozilla
:
:
MediaEventProducerExc
<
__strong
RTCVideoFrame
*
_Nullable
>
frameEvent
;
}
end
namespace
webrtc
:
:
videocapturemodule
{
class
VideoCaptureAvFoundation
:
public
VideoCaptureImpl
{
public
:
VideoCaptureAvFoundation
(
AVCaptureDevice
*
_Nonnull
aDevice
)
;
virtual
~
VideoCaptureAvFoundation
(
)
;
static
rtc
:
:
scoped_refptr
<
VideoCaptureModule
>
Create
(
const
char
*
_Nullable
aDeviceUniqueIdUTF8
)
;
int32_t
StartCapture
(
const
VideoCaptureCapability
&
aCapability
)
override
;
int32_t
StopCapture
(
)
override
;
bool
CaptureStarted
(
)
override
;
int32_t
CaptureSettings
(
VideoCaptureCapability
&
aSettings
)
override
;
void
OnFrame
(
__strong
RTCVideoFrame
*
_Nonnull
aFrame
)
;
void
SetTrackingId
(
uint32_t
aTrackingIdProcId
)
override
;
private
:
void
ProcessNextFrame
(
)
;
SequenceChecker
mChecker
;
const
RefPtr
<
mozilla
:
:
AbstractThread
>
mCallbackThread
;
AVCaptureDevice
*
_Nonnull
const
mDevice
RTC_GUARDED_BY
(
mChecker
)
;
VideoCaptureAdapter
*
_Nonnull
const
mAdapter
RTC_GUARDED_BY
(
mChecker
)
;
RTCCameraVideoCapturer
*
_Nonnull
const
mCapturer
RTC_GUARDED_BY
(
mChecker
)
;
mozilla
:
:
WatchManager
<
VideoCaptureAvFoundation
>
mWatchManager
RTC_GUARDED_BY
(
mChecker
)
;
mozilla
:
:
Watchable
<
__strong
RTCVideoFrame
*
_Nullable
>
mNextFrameToProcess
RTC_GUARDED_BY
(
mChecker
)
;
mozilla
:
:
Maybe
<
VideoCaptureCapability
>
mCapability
RTC_GUARDED_BY
(
mChecker
)
;
mozilla
:
:
Maybe
<
mozilla
:
:
CaptureStage
:
:
ImageType
>
mImageType
RTC_GUARDED_BY
(
mChecker
)
;
mozilla
:
:
Maybe
<
mozilla
:
:
TrackingId
>
mTrackingId
RTC_GUARDED_BY
(
mChecker
)
;
mozilla
:
:
MediaEventListener
mFrameListener
RTC_GUARDED_BY
(
mChecker
)
;
mozilla
:
:
PerformanceRecorderMulti
<
mozilla
:
:
CaptureStage
>
mCaptureRecorder
RTC_GUARDED_BY
(
mChecker
)
;
mozilla
:
:
PerformanceRecorderMulti
<
mozilla
:
:
CopyVideoStage
>
mConversionRecorder
RTC_GUARDED_BY
(
mChecker
)
;
}
;
}
#
endif
