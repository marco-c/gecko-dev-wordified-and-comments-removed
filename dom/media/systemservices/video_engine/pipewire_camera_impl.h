#
ifndef
WEBRTC_MODULES_VIDEO_CAPTURE_PIPEWIRE_CAMERA_IMPL_H_
#
define
WEBRTC_MODULES_VIDEO_CAPTURE_PIPEWIRE_CAMERA_IMPL_H_
#
include
"
modules
/
video_capture
/
linux
/
camera_portal
.
h
"
#
include
"
modules
/
video_capture
/
video_capture_options
.
h
"
#
include
"
mozilla
/
MozPromise
.
h
"
namespace
mozilla
{
class
CameraPortalImpl
:
public
webrtc
:
:
CameraPortal
:
:
PortalNotifier
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
CameraPortalImpl
)
CameraPortalImpl
(
)
=
default
;
using
CameraPortalPromise
=
MozPromise
<
int
nsresult
true
>
;
RefPtr
<
CameraPortalPromise
>
Start
(
)
;
private
:
~
CameraPortalImpl
(
)
=
default
;
void
OnCameraRequestResult
(
webrtc
:
:
xdg_portal
:
:
RequestResponse
result
int
fd
)
override
;
std
:
:
unique_ptr
<
webrtc
:
:
CameraPortal
>
mPortal
=
nullptr
;
MozPromiseHolder
<
CameraPortalPromise
>
mPromiseHolder
;
}
;
class
VideoCaptureOptionsImpl
:
webrtc
:
:
VideoCaptureOptions
:
:
Callback
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
VideoCaptureOptionsImpl
)
VideoCaptureOptionsImpl
(
)
;
using
VideoCaptureOptionsInitPromise
=
MozPromise
<
nsresult
nsresult
true
>
;
RefPtr
<
VideoCaptureOptionsInitPromise
>
Init
(
int
fd
)
;
std
:
:
unique_ptr
<
webrtc
:
:
VideoCaptureOptions
>
ReleaseOptions
(
)
;
private
:
~
VideoCaptureOptionsImpl
(
)
=
default
;
void
OnInitialized
(
webrtc
:
:
VideoCaptureOptions
:
:
Status
status
)
override
;
std
:
:
unique_ptr
<
webrtc
:
:
VideoCaptureOptions
>
mCaptureOptions
;
MozPromiseHolder
<
VideoCaptureOptionsInitPromise
>
mPromiseHolder
;
}
;
}
#
endif
