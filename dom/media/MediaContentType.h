#
ifndef
MediaContentType_h_
#
define
MediaContentType_h_
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
{
class
MediaContentType
{
public
:
explicit
MediaContentType
(
const
nsAString
&
aType
)
;
explicit
MediaContentType
(
const
nsACString
&
aType
)
;
bool
IsValid
(
)
const
{
return
!
GetMIMEType
(
)
.
IsEmpty
(
)
;
}
const
nsACString
&
GetMIMEType
(
)
const
{
return
mMIMEType
;
}
bool
HaveCodecs
(
)
const
{
return
mHaveCodecs
;
}
const
nsAString
&
GetCodecs
(
)
const
{
return
mCodecs
;
}
Maybe
<
int32_t
>
GetWidth
(
)
const
{
return
GetMaybeNumber
(
mWidth
)
;
}
Maybe
<
int32_t
>
GetHeight
(
)
const
{
return
GetMaybeNumber
(
mHeight
)
;
}
Maybe
<
int32_t
>
GetFramerate
(
)
const
{
return
GetMaybeNumber
(
mFramerate
)
;
}
Maybe
<
int32_t
>
GetBitrate
(
)
const
{
return
GetMaybeNumber
(
mBitrate
)
;
}
private
:
void
Populate
(
const
nsAString
&
aType
)
;
Maybe
<
int32_t
>
GetMaybeNumber
(
int32_t
aNumber
)
const
{
return
(
aNumber
<
0
)
?
Maybe
<
int32_t
>
(
Nothing
(
)
)
:
Some
(
int32_t
(
aNumber
)
)
;
}
nsCString
mMIMEType
;
bool
mHaveCodecs
;
nsString
mCodecs
;
int32_t
mWidth
;
int32_t
mHeight
;
int32_t
mFramerate
;
int32_t
mBitrate
;
}
;
}
#
endif
