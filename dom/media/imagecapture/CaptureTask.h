#
ifndef
CAPTURETASK_H
#
define
CAPTURETASK_H
#
include
"
MediaStreamGraph
.
h
"
#
include
"
PrincipalChangeObserver
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Blob
;
class
ImageCapture
;
class
MediaStreamTrack
;
}
class
CaptureTask
:
public
MediaStreamListener
public
dom
:
:
PrincipalChangeObserver
<
dom
:
:
MediaStreamTrack
>
{
public
:
void
NotifyQueuedTrackChanges
(
MediaStreamGraph
*
aGraph
TrackID
aID
StreamTime
aTrackOffset
uint32_t
aTrackEvents
const
MediaSegment
&
aQueuedMedia
MediaStream
*
aInputStream
TrackID
aInputTrackID
)
override
;
void
NotifyEvent
(
MediaStreamGraph
*
aGraph
MediaStreamGraphEvent
aEvent
)
override
;
void
PrincipalChanged
(
dom
:
:
MediaStreamTrack
*
aMediaStreamTrack
)
override
;
nsresult
TaskComplete
(
already_AddRefed
<
dom
:
:
Blob
>
aBlob
nsresult
aRv
)
;
void
AttachStream
(
)
;
void
DetachStream
(
)
;
CaptureTask
(
dom
:
:
ImageCapture
*
aImageCapture
TrackID
aTrackID
)
:
mImageCapture
(
aImageCapture
)
mTrackID
(
aTrackID
)
mImageGrabbedOrTrackEnd
(
false
)
mPrincipalChanged
(
false
)
{
}
protected
:
virtual
~
CaptureTask
(
)
{
}
void
PostTrackEndEvent
(
)
;
RefPtr
<
dom
:
:
ImageCapture
>
mImageCapture
;
TrackID
mTrackID
;
bool
mImageGrabbedOrTrackEnd
;
bool
mPrincipalChanged
;
}
;
}
#
endif
