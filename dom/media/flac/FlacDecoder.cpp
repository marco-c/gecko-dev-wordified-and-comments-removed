#
include
"
FlacDecoder
.
h
"
#
include
"
FlacDemuxer
.
h
"
#
include
"
MediaContentType
.
h
"
#
include
"
MediaDecoderStateMachine
.
h
"
#
include
"
MediaFormatReader
.
h
"
#
include
"
MediaPrefs
.
h
"
namespace
mozilla
{
MediaDecoder
*
FlacDecoder
:
:
Clone
(
MediaDecoderOwner
*
aOwner
)
{
if
(
!
IsEnabled
(
)
)
{
return
nullptr
;
}
return
new
FlacDecoder
(
aOwner
)
;
}
MediaDecoderStateMachine
*
FlacDecoder
:
:
CreateStateMachine
(
)
{
RefPtr
<
MediaDecoderReader
>
reader
=
new
MediaFormatReader
(
this
new
FlacDemuxer
(
GetResource
(
)
)
)
;
return
new
MediaDecoderStateMachine
(
this
reader
)
;
}
bool
FlacDecoder
:
:
IsEnabled
(
)
{
#
ifdef
MOZ_FFVPX
return
MediaPrefs
:
:
FlacEnabled
(
)
;
#
else
return
false
;
#
endif
}
bool
FlacDecoder
:
:
IsSupportedType
(
const
MediaContentType
&
aContentType
)
{
return
IsEnabled
(
)
&
&
(
aContentType
.
Type
(
)
=
=
MEDIAMIMETYPE
(
"
audio
/
flac
"
)
|
|
aContentType
.
Type
(
)
=
=
MEDIAMIMETYPE
(
"
audio
/
x
-
flac
"
)
|
|
aContentType
.
Type
(
)
=
=
MEDIAMIMETYPE
(
"
application
/
x
-
flac
"
)
)
;
}
}
