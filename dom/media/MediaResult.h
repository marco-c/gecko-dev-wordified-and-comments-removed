#
ifndef
MediaResult_h_
#
define
MediaResult_h_
#
include
"
nsError
.
h
"
#
include
"
nsPrintfCString
.
h
"
namespace
mozilla
{
class
MediaResult
{
public
:
MOZ_IMPLICIT
MediaResult
(
nsresult
aResult
)
:
mCode
(
aResult
)
{
}
MediaResult
(
nsresult
aResult
const
nsACString
&
aMessage
)
:
mCode
(
aResult
)
mMessage
(
aMessage
)
{
}
MediaResult
(
nsresult
aResult
const
char
*
aMessage
)
:
mCode
(
aResult
)
mMessage
(
aMessage
)
{
}
MediaResult
(
const
MediaResult
&
aOther
)
=
default
;
MediaResult
(
MediaResult
&
&
aOther
)
=
default
;
MediaResult
&
operator
=
(
const
MediaResult
&
aOther
)
=
default
;
MediaResult
&
operator
=
(
MediaResult
&
&
aOther
)
=
default
;
nsresult
Code
(
)
const
{
return
mCode
;
}
const
nsCString
&
Message
(
)
const
{
return
mMessage
;
}
bool
operator
=
=
(
nsresult
aResult
)
const
{
return
aResult
=
=
mCode
;
}
bool
operator
!
=
(
nsresult
aResult
)
const
{
return
aResult
!
=
mCode
;
}
operator
nsresult
(
)
const
{
return
mCode
;
}
nsCString
Description
(
)
const
{
if
(
NS_SUCCEEDED
(
mCode
)
)
{
return
nsCString
(
)
;
}
return
nsPrintfCString
(
"
0x
%
08x
:
%
s
"
mCode
mMessage
.
get
(
)
)
;
}
private
:
nsresult
mCode
;
nsCString
mMessage
;
}
;
#
define
RESULT_DETAIL
(
arg
.
.
.
)
nsPrintfCString
(
"
%
s
:
"
arg
__func__
#
#
__VA_ARGS__
)
}
#
endif
