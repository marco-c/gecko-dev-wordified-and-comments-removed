#
include
"
RtspOmxReader
.
h
"
#
include
"
AbstractMediaDecoder
.
h
"
#
include
"
MediaDecoderStateMachine
.
h
"
#
include
"
OmxDecoder
.
h
"
#
include
"
RtspExtractor
.
h
"
#
include
"
RtspMediaResource
.
h
"
#
include
"
RtspOmxDecoder
.
h
"
using
namespace
android
;
namespace
mozilla
{
nsresult
RtspOmxReader
:
:
InitOmxDecoder
(
)
{
if
(
!
mOmxDecoder
.
get
(
)
)
{
NS_ASSERTION
(
mDecoder
"
RtspOmxReader
mDecoder
is
null
.
"
)
;
NS_ASSERTION
(
mDecoder
-
>
GetResource
(
)
"
RtspOmxReader
mDecoder
-
>
GetResource
(
)
is
null
.
"
)
;
mExtractor
=
new
RtspExtractor
(
mRtspResource
)
;
mOmxDecoder
=
new
OmxDecoder
(
mDecoder
OwnerThread
(
)
)
;
if
(
!
mOmxDecoder
-
>
Init
(
mExtractor
)
)
{
return
NS_ERROR_FAILURE
;
}
}
return
NS_OK
;
}
RefPtr
<
MediaDecoderReader
:
:
SeekPromise
>
RtspOmxReader
:
:
Seek
(
SeekTarget
aTarget
int64_t
aEndTime
)
{
if
(
mRtspResource
)
{
mRtspResource
-
>
SeekTime
(
aTarget
.
mTime
)
;
mRtspResource
-
>
EnablePlayoutDelay
(
)
;
}
mEnsureActiveFromSeek
=
true
;
return
MediaOmxReader
:
:
Seek
(
aTarget
aEndTime
)
;
}
void
RtspOmxReader
:
:
SetIdle
(
)
{
MediaOmxReader
:
:
SetIdle
(
)
;
if
(
mRtspResource
)
{
nsIStreamingProtocolController
*
controller
=
mRtspResource
-
>
GetMediaStreamController
(
)
;
if
(
controller
)
{
controller
-
>
Pause
(
)
;
}
mRtspResource
-
>
SetSuspend
(
true
)
;
}
}
void
RtspOmxReader
:
:
EnsureActive
(
)
{
if
(
mRtspResource
)
{
nsIStreamingProtocolController
*
controller
=
mRtspResource
-
>
GetMediaStreamController
(
)
;
if
(
controller
&
&
!
mEnsureActiveFromSeek
)
{
controller
-
>
Play
(
)
;
}
mEnsureActiveFromSeek
=
false
;
mRtspResource
-
>
SetSuspend
(
false
)
;
}
MediaOmxReader
:
:
EnsureActive
(
)
;
}
RefPtr
<
MediaDecoderReader
:
:
MetadataPromise
>
RtspOmxReader
:
:
AsyncReadMetadata
(
)
{
mRtspResource
-
>
DisablePlayoutDelay
(
)
;
RefPtr
<
MediaDecoderReader
:
:
MetadataPromise
>
p
=
MediaOmxReader
:
:
AsyncReadMetadata
(
)
;
SetIdle
(
)
;
return
p
;
}
void
RtspOmxReader
:
:
HandleResourceAllocated
(
)
{
MediaOmxReader
:
:
HandleResourceAllocated
(
)
;
mRtspResource
-
>
EnablePlayoutDelay
(
)
;
}
}
