#
ifndef
MEDIA_STREAM_SOURCE_H
#
define
MEDIA_STREAM_SOURCE_H
#
include
<
stdint
.
h
>
#
include
<
stagefright
/
DataSource
.
h
>
#
include
<
stagefright
/
MediaSource
.
h
>
#
include
"
MediaResource
.
h
"
#
include
"
nsAutoPtr
.
h
"
namespace
android
{
class
MediaStreamSource
:
public
DataSource
{
typedef
mozilla
:
:
MediaResource
MediaResource
;
typedef
mozilla
:
:
MediaResourceIndex
MediaResourceIndex
;
Mutex
mLock
;
MediaResourceIndex
mResource
;
public
:
MediaStreamSource
(
MediaResource
*
aResource
)
;
status_t
initCheck
(
)
const
override
;
ssize_t
readAt
(
off64_t
offset
void
*
data
size_t
size
)
override
;
status_t
getSize
(
off64_t
*
size
)
override
;
uint32_t
flags
(
)
override
{
return
kWantsPrefetching
;
}
int64_t
Tell
(
)
;
virtual
ssize_t
readAt
(
off_t
offset
void
*
data
size_t
size
)
{
return
readAt
(
static_cast
<
off64_t
>
(
offset
)
data
size
)
;
}
virtual
status_t
getSize
(
off_t
*
size
)
{
off64_t
size64
;
status_t
status
=
getSize
(
&
size64
)
;
*
size
=
size64
;
return
status
;
}
virtual
~
MediaStreamSource
(
)
;
private
:
MediaStreamSource
(
const
MediaStreamSource
&
)
;
MediaStreamSource
&
operator
=
(
const
MediaStreamSource
&
)
;
}
;
}
#
endif
