#
include
"
MediaKeySystemAccessPermissionRequest
.
h
"
#
include
"
nsGlobalWindowInner
.
h
"
namespace
mozilla
{
namespace
dom
{
NS_IMPL_CYCLE_COLLECTION_INHERITED
(
MediaKeySystemAccessPermissionRequest
ContentPermissionRequestBase
)
NS_IMPL_ISUPPORTS_CYCLE_COLLECTION_INHERITED_0
(
MediaKeySystemAccessPermissionRequest
ContentPermissionRequestBase
)
already_AddRefed
<
MediaKeySystemAccessPermissionRequest
>
MediaKeySystemAccessPermissionRequest
:
:
Create
(
nsPIDOMWindowInner
*
aWindow
)
{
AssertIsOnMainThread
(
)
;
if
(
!
aWindow
)
{
return
nullptr
;
}
nsGlobalWindowInner
*
innerWindow
=
nsGlobalWindowInner
:
:
Cast
(
aWindow
)
;
if
(
!
innerWindow
-
>
GetPrincipal
(
)
)
{
return
nullptr
;
}
RefPtr
<
MediaKeySystemAccessPermissionRequest
>
request
=
new
MediaKeySystemAccessPermissionRequest
(
innerWindow
)
;
return
request
.
forget
(
)
;
}
MediaKeySystemAccessPermissionRequest
:
:
MediaKeySystemAccessPermissionRequest
(
nsGlobalWindowInner
*
aWindow
)
:
ContentPermissionRequestBase
(
aWindow
-
>
GetPrincipal
(
)
aWindow
"
media
.
eme
.
require
-
app
-
approval
"
_ns
"
media
-
key
-
system
-
access
"
_ns
)
{
}
MediaKeySystemAccessPermissionRequest
:
:
~
MediaKeySystemAccessPermissionRequest
(
)
{
AssertIsOnMainThread
(
)
;
Cancel
(
)
;
}
already_AddRefed
<
MediaKeySystemAccessPermissionRequest
:
:
RequestPromise
>
MediaKeySystemAccessPermissionRequest
:
:
GetPromise
(
)
{
return
mPromiseHolder
.
Ensure
(
__func__
)
;
}
nsresult
MediaKeySystemAccessPermissionRequest
:
:
Start
(
)
{
MediaKeySystemAccessPermissionRequest
:
:
PromptResult
promptResult
=
CheckPromptPrefs
(
)
;
if
(
promptResult
=
=
MediaKeySystemAccessPermissionRequest
:
:
PromptResult
:
:
Granted
)
{
return
Allow
(
JS
:
:
UndefinedHandleValue
)
;
}
if
(
promptResult
=
=
MediaKeySystemAccessPermissionRequest
:
:
PromptResult
:
:
Denied
)
{
return
Cancel
(
)
;
}
return
nsContentPermissionUtils
:
:
AskPermission
(
this
mWindow
)
;
}
NS_IMETHODIMP
MediaKeySystemAccessPermissionRequest
:
:
Allow
(
JS
:
:
HandleValue
aChoices
)
{
AssertIsOnMainThread
(
)
;
mPromiseHolder
.
ResolveIfExists
(
true
__func__
)
;
return
NS_OK
;
}
NS_IMETHODIMP
MediaKeySystemAccessPermissionRequest
:
:
Cancel
(
)
{
AssertIsOnMainThread
(
)
;
mPromiseHolder
.
RejectIfExists
(
false
__func__
)
;
return
NS_OK
;
}
}
}
