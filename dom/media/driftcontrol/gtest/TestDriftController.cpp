#
include
"
gtest
/
gtest
.
h
"
#
include
"
DriftController
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
using
namespace
mozilla
;
TEST
(
TestDriftController
Basic
)
{
constexpr
uint32_t
buffered
=
5
*
480
;
constexpr
uint32_t
bufferedLow
=
3
*
480
;
constexpr
uint32_t
bufferedHigh
=
7
*
480
;
DriftController
c
(
48000
48000
media
:
:
TimeUnit
:
:
FromSeconds
(
0
.
05
)
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000U
)
;
const
auto
oneSec
=
media
:
:
TimeUnit
(
48000
48000
)
;
c
.
UpdateClock
(
oneSec
oneSec
buffered
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedLow
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
47952u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedHigh
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedHigh
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48048u
)
;
}
TEST
(
TestDriftController
BasicResampler
)
{
constexpr
uint32_t
buffered
=
5
*
480
;
constexpr
uint32_t
bufferedLow
=
3
*
480
;
constexpr
uint32_t
bufferedHigh
=
7
*
480
;
DriftController
c
(
48000
24000
media
:
:
TimeUnit
:
:
FromSeconds
(
0
.
05
)
)
;
const
auto
oneSec
=
media
:
:
TimeUnit
(
48000
48000
)
;
c
.
UpdateClock
(
oneSec
oneSec
buffered
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedLow
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
47952u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedHigh
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedHigh
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48048u
)
;
}
TEST
(
TestDriftController
BufferedInput
)
{
constexpr
uint32_t
buffered
=
5
*
480
;
constexpr
uint32_t
bufferedLow
=
3
*
480
;
constexpr
uint32_t
bufferedHigh
=
7
*
480
;
DriftController
c
(
48000
48000
media
:
:
TimeUnit
:
:
FromSeconds
(
0
.
05
)
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
const
auto
oneSec
=
media
:
:
TimeUnit
(
48000
48000
)
;
c
.
UpdateClock
(
oneSec
oneSec
buffered
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
0
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
47952u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedLow
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
buffered
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedHigh
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48048u
)
;
}
TEST
(
TestDriftController
BufferedInputWithResampling
)
{
constexpr
uint32_t
buffered
=
5
*
480
;
constexpr
uint32_t
bufferedLow
=
3
*
480
;
constexpr
uint32_t
bufferedHigh
=
7
*
480
;
DriftController
c
(
48000
24000
media
:
:
TimeUnit
:
:
FromSeconds
(
0
.
05
)
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
const
auto
oneSec
=
media
:
:
TimeUnit
(
24000
24000
)
;
c
.
UpdateClock
(
oneSec
oneSec
buffered
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
0
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
47952u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedLow
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
buffered
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedHigh
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48048u
)
;
}
TEST
(
TestDriftController
SmallError
)
{
constexpr
uint32_t
buffered
=
5
*
480
;
constexpr
uint32_t
bufferedLow
=
buffered
-
48
;
constexpr
uint32_t
bufferedHigh
=
buffered
+
48
;
DriftController
c
(
48000
48000
media
:
:
TimeUnit
:
:
FromSeconds
(
0
.
05
)
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
const
auto
oneSec
=
media
:
:
TimeUnit
(
48000
48000
)
;
c
.
UpdateClock
(
oneSec
oneSec
buffered
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedLow
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedHigh
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
c
.
UpdateClock
(
oneSec
oneSec
bufferedHigh
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000u
)
;
}
TEST
(
TestDriftController
SmallBufferedFrames
)
{
constexpr
uint32_t
bufferedLow
=
3
*
480
;
DriftController
c
(
48000
48000
media
:
:
TimeUnit
:
:
FromSeconds
(
0
.
05
)
)
;
media
:
:
TimeUnit
oneSec
=
media
:
:
TimeUnit
:
:
FromSeconds
(
1
)
;
media
:
:
TimeUnit
hundredMillis
=
oneSec
/
10
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000U
)
;
for
(
uint32_t
i
=
0
;
i
<
9
;
+
+
i
)
{
c
.
UpdateClock
(
hundredMillis
hundredMillis
bufferedLow
0
)
;
}
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
48000U
)
;
c
.
UpdateClock
(
hundredMillis
hundredMillis
bufferedLow
0
)
;
EXPECT_EQ
(
c
.
GetCorrectedSourceRate
(
)
47952U
)
;
}
