#
ifndef
DOM_MEDIA_DRIFTCONTROL_CLOCKDRIFT_H_
#
define
DOM_MEDIA_DRIFTCONTROL_CLOCKDRIFT_H_
#
include
"
mozilla
/
RollingMean
.
h
"
#
include
<
algorithm
>
#
include
<
cstdint
>
#
include
"
MediaSegment
.
h
"
namespace
mozilla
{
class
ClockDrift
final
{
public
:
ClockDrift
(
uint32_t
aSourceRate
uint32_t
aTargetRate
uint32_t
aDesiredBuffering
)
;
float
GetCorrection
(
)
{
return
mCorrection
;
}
uint32_t
NumCorrectionChanges
(
)
const
{
return
mNumCorrectionChanges
;
}
void
UpdateClock
(
uint32_t
aSourceFrames
uint32_t
aTargetFrames
uint32_t
aBufferedFrames
uint32_t
aRemainingFrames
)
;
private
:
void
CalculateCorrection
(
float
aCalculationWeight
uint32_t
aBufferedFrames
uint32_t
aRemainingFrames
)
;
public
:
const
uint8_t
mPlotId
;
const
uint32_t
mSourceRate
;
const
uint32_t
mTargetRate
;
const
uint32_t
mAdjustmentIntervalMs
=
1000
;
const
uint32_t
mDesiredBuffering
;
private
:
float
mCorrection
=
1
.
0
;
uint32_t
mNumCorrectionChanges
=
0
;
RollingMean
<
TrackTime
TrackTime
>
mMeasuredSourceLatency
;
RollingMean
<
TrackTime
TrackTime
>
mMeasuredTargetLatency
;
uint32_t
mSourceClock
=
0
;
uint32_t
mTargetClock
=
0
;
TrackTime
mTotalTargetClock
=
0
;
}
;
}
#
endif
