#
ifndef
mozilla_dom_SpeechSynthesisService_h
#
define
mozilla_dom_SpeechSynthesisService_h
#
include
"
nsISpeechService
.
h
"
#
include
"
mozilla
/
java
/
SpeechSynthesisServiceNatives
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
namespace
mozilla
{
namespace
dom
{
class
SpeechSynthesisService
final
:
public
nsISpeechService
public
java
:
:
SpeechSynthesisService
:
:
Natives
<
SpeechSynthesisService
>
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSISPEECHSERVICE
SpeechSynthesisService
(
)
{
}
;
void
Setup
(
)
;
static
void
DoneRegisteringVoices
(
)
;
static
void
RegisterVoice
(
jni
:
:
String
:
:
Param
aUri
jni
:
:
String
:
:
Param
aName
jni
:
:
String
:
:
Param
aLocale
bool
aIsNetwork
bool
aIsDefault
)
;
static
void
DispatchStart
(
jni
:
:
String
:
:
Param
aUtteranceId
)
;
static
void
DispatchEnd
(
jni
:
:
String
:
:
Param
aUtteranceId
)
;
static
void
DispatchError
(
jni
:
:
String
:
:
Param
aUtteranceId
)
;
static
void
DispatchBoundary
(
jni
:
:
String
:
:
Param
aUtteranceId
int32_t
aStart
int32_t
aEnd
)
;
static
SpeechSynthesisService
*
GetInstance
(
bool
aCreate
=
true
)
;
static
already_AddRefed
<
SpeechSynthesisService
>
GetInstanceForService
(
)
;
static
StaticRefPtr
<
SpeechSynthesisService
>
sSingleton
;
private
:
virtual
~
SpeechSynthesisService
(
)
{
}
;
nsCOMPtr
<
nsISpeechTask
>
mTask
;
nsCString
mTaskUtteranceId
;
TimeStamp
mTaskStartTime
;
uint32_t
mTaskTextLength
;
uint32_t
mTaskTextOffset
;
}
;
}
}
#
endif
