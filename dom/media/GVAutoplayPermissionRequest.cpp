#
include
"
GVAutoplayPermissionRequest
.
h
"
namespace
mozilla
{
namespace
dom
{
using
RType
=
GVAutoplayRequestType
;
using
RStatus
=
GVAutoplayRequestStatus
;
NS_IMPL_CYCLE_COLLECTION_INHERITED
(
GVAutoplayPermissionRequest
ContentPermissionRequestBase
)
NS_IMPL_ISUPPORTS_CYCLE_COLLECTION_INHERITED_0
(
GVAutoplayPermissionRequest
ContentPermissionRequestBase
)
already_AddRefed
<
GVAutoplayPermissionRequest
>
GVAutoplayPermissionRequest
:
:
CreateRequest
(
nsGlobalWindowInner
*
aWindow
RType
aType
)
{
if
(
!
aWindow
|
|
!
aWindow
-
>
GetPrincipal
(
)
)
{
return
nullptr
;
}
RefPtr
<
GVAutoplayPermissionRequest
>
request
=
new
GVAutoplayPermissionRequest
(
aWindow
aType
)
;
return
request
.
forget
(
)
;
}
GVAutoplayPermissionRequest
:
:
GVAutoplayPermissionRequest
(
nsGlobalWindowInner
*
aWindow
RType
aType
)
:
ContentPermissionRequestBase
(
aWindow
-
>
GetPrincipal
(
)
aWindow
NS_LITERAL_CSTRING
(
"
"
)
aType
=
=
RType
:
:
eAUDIBLE
?
NS_LITERAL_CSTRING
(
"
autoplay
-
media
-
audible
"
)
:
NS_LITERAL_CSTRING
(
"
autoplay
-
media
-
inaudible
"
)
)
mType
(
aType
)
{
}
GVAutoplayPermissionRequest
:
:
~
GVAutoplayPermissionRequest
(
)
{
Cancel
(
)
;
}
NS_IMETHODIMP
GVAutoplayPermissionRequest
:
:
Cancel
(
)
{
return
NS_OK
;
}
NS_IMETHODIMP
GVAutoplayPermissionRequest
:
:
Allow
(
JS
:
:
HandleValue
aChoices
)
{
return
NS_OK
;
}
}
}
