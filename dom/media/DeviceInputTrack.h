#
ifndef
DOM_MEDIA_DEVICEINPUTTRACK_H_
#
define
DOM_MEDIA_DEVICEINPUTTRACK_H_
#
include
"
AudioSegment
.
h
"
#
include
"
MediaTrackGraph
.
h
"
namespace
mozilla
{
class
NativeInputTrack
:
public
ProcessedMediaTrack
{
~
NativeInputTrack
(
)
=
default
;
explicit
NativeInputTrack
(
TrackRate
aSampleRate
)
:
ProcessedMediaTrack
(
aSampleRate
MediaSegment
:
:
AUDIO
new
AudioSegment
(
)
)
mIsBufferingAppended
(
false
)
{
}
public
:
static
NativeInputTrack
*
Create
(
MediaTrackGraphImpl
*
aGraph
)
;
size_t
AddUser
(
)
;
size_t
RemoveUser
(
)
;
void
DestroyImpl
(
)
override
;
void
ProcessInput
(
GraphTime
aFrom
GraphTime
aTo
uint32_t
aFlags
)
override
;
uint32_t
NumberOfChannels
(
)
const
override
;
void
NotifyOutputData
(
MediaTrackGraphImpl
*
aGraph
AudioDataValue
*
aBuffer
size_t
aFrames
TrackRate
aRate
uint32_t
aChannels
)
;
void
NotifyInputStopped
(
MediaTrackGraphImpl
*
aGraph
)
;
void
NotifyInputData
(
MediaTrackGraphImpl
*
aGraph
const
AudioDataValue
*
aBuffer
size_t
aFrames
TrackRate
aRate
uint32_t
aChannels
uint32_t
aAlreadyBuffered
)
;
void
DeviceChanged
(
MediaTrackGraphImpl
*
aGraph
)
;
NativeInputTrack
*
AsNativeInputTrack
(
)
override
{
return
this
;
}
public
:
nsTArray
<
RefPtr
<
AudioDataListener
>
>
mDataUsers
;
private
:
bool
mIsBufferingAppended
;
AudioSegment
mPendingData
;
uint32_t
mInputChannels
=
0
;
int32_t
mUserCount
=
0
;
}
;
}
#
endif
