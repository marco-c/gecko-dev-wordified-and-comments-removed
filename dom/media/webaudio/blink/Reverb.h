#
ifndef
Reverb_h
#
define
Reverb_h
#
include
"
AudioBlock
.
h
"
#
include
"
ReverbConvolver
.
h
"
#
include
"
mozilla
/
MemoryReporting
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsTArray
.
h
"
namespace
WebCore
{
using
mozilla
:
:
UniquePtr
;
class
Reverb
{
public
:
enum
{
MaxFrameSize
=
256
}
;
Reverb
(
const
mozilla
:
:
AudioChunk
&
impulseResponseBuffer
size_t
maxFFTSize
bool
useBackgroundThreads
bool
normalize
float
sampleRate
bool
*
aAllocationFailure
)
;
void
process
(
const
mozilla
:
:
AudioBlock
*
sourceBus
mozilla
:
:
AudioBlock
*
destinationBus
)
;
size_t
impulseResponseLength
(
)
const
{
return
m_impulseResponseLength
;
}
size_t
sizeOfIncludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
const
;
private
:
bool
initialize
(
const
nsTArray
<
const
float
*
>
&
impulseResponseBuffer
size_t
impulseResponseBufferLength
size_t
maxFFTSize
bool
useBackgroundThreads
)
;
size_t
m_impulseResponseLength
;
nsTArray
<
UniquePtr
<
ReverbConvolver
>
>
m_convolvers
;
mozilla
:
:
AudioBlock
m_tempBuffer
;
}
;
}
#
endif
