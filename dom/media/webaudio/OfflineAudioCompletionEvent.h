#
ifndef
mozilla_dom_OfflineAudioCompletionEvent_h
#
define
mozilla_dom_OfflineAudioCompletionEvent_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
dom
/
BindingUtils
.
h
"
#
include
"
mozilla
/
dom
/
Event
.
h
"
#
include
"
mozilla
/
dom
/
OfflineAudioCompletionEventBinding
.
h
"
struct
JSContext
;
namespace
mozilla
{
namespace
dom
{
class
OfflineAudioCompletionEvent
:
public
Event
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED
(
OfflineAudioCompletionEvent
Event
)
protected
:
virtual
~
OfflineAudioCompletionEvent
(
)
;
explicit
OfflineAudioCompletionEvent
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
)
;
RefPtr
<
AudioBuffer
>
mRenderedBuffer
;
public
:
virtual
OfflineAudioCompletionEvent
*
AsOfflineAudioCompletionEvent
(
)
override
;
virtual
JSObject
*
WrapObjectInternal
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
OfflineAudioCompletionEvent
>
Constructor
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
const
nsAString
&
aType
const
OfflineAudioCompletionEventInit
&
aEventInitDict
)
;
static
already_AddRefed
<
OfflineAudioCompletionEvent
>
Constructor
(
const
GlobalObject
&
aGlobal
const
nsAString
&
aType
const
OfflineAudioCompletionEventInit
&
aEventInitDict
ErrorResult
&
aRv
)
;
AudioBuffer
*
RenderedBuffer
(
)
const
;
}
;
}
}
#
endif
