#
ifndef
ChannelSplitterNode_h_
#
define
ChannelSplitterNode_h_
#
include
"
AudioNode
.
h
"
namespace
mozilla
{
namespace
dom
{
class
AudioContext
;
struct
ChannelSplitterOptions
;
class
ChannelSplitterNode
final
:
public
AudioNode
{
public
:
static
already_AddRefed
<
ChannelSplitterNode
>
Create
(
AudioContext
&
aAudioContext
const
ChannelSplitterOptions
&
aOptions
ErrorResult
&
aRv
)
;
NS_INLINE_DECL_REFCOUNTING_INHERITED
(
ChannelSplitterNode
AudioNode
)
static
already_AddRefed
<
ChannelSplitterNode
>
Constructor
(
const
GlobalObject
&
aGlobal
AudioContext
&
aAudioContext
const
ChannelSplitterOptions
&
aOptions
ErrorResult
&
aRv
)
{
return
Create
(
aAudioContext
aOptions
aRv
)
;
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
uint16_t
NumberOfOutputs
(
)
const
override
{
return
mOutputCount
;
}
const
char
*
NodeType
(
)
const
override
{
return
"
ChannelSplitterNode
"
;
}
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
override
{
return
aMallocSizeOf
(
this
)
+
SizeOfExcludingThis
(
aMallocSizeOf
)
;
}
private
:
ChannelSplitterNode
(
AudioContext
*
aContext
uint16_t
aOutputCount
)
;
~
ChannelSplitterNode
(
)
=
default
;
const
uint16_t
mOutputCount
;
}
;
}
}
#
endif
