#
include
"
AudioBlock
.
h
"
namespace
mozilla
{
void
AllocateAudioBlock
(
uint32_t
aChannelCount
AudioChunk
*
aChunk
)
{
if
(
aChunk
-
>
mBuffer
&
&
!
aChunk
-
>
mBuffer
-
>
IsShared
(
)
&
&
aChunk
-
>
ChannelCount
(
)
=
=
aChannelCount
)
{
MOZ_ASSERT
(
aChunk
-
>
mBufferFormat
=
=
AUDIO_FORMAT_FLOAT32
)
;
MOZ_ASSERT
(
aChunk
-
>
mDuration
=
=
WEBAUDIO_BLOCK_SIZE
)
;
aChunk
-
>
mVolume
=
1
.
0f
;
return
;
}
CheckedInt
<
size_t
>
size
=
WEBAUDIO_BLOCK_SIZE
;
size
*
=
aChannelCount
;
size
*
=
sizeof
(
float
)
;
if
(
!
size
.
isValid
(
)
)
{
MOZ_CRASH
(
)
;
}
nsRefPtr
<
SharedBuffer
>
buffer
=
SharedBuffer
:
:
Create
(
size
.
value
(
)
)
;
aChunk
-
>
mDuration
=
WEBAUDIO_BLOCK_SIZE
;
aChunk
-
>
mChannelData
.
SetLength
(
aChannelCount
)
;
float
*
data
=
static_cast
<
float
*
>
(
buffer
-
>
Data
(
)
)
;
for
(
uint32_t
i
=
0
;
i
<
aChannelCount
;
+
+
i
)
{
aChunk
-
>
mChannelData
[
i
]
=
data
+
i
*
WEBAUDIO_BLOCK_SIZE
;
}
aChunk
-
>
mBuffer
=
buffer
.
forget
(
)
;
aChunk
-
>
mVolume
=
1
.
0f
;
aChunk
-
>
mBufferFormat
=
AUDIO_FORMAT_FLOAT32
;
}
}
