#
ifndef
MediaStreamAudioDestinationNode_h_
#
define
MediaStreamAudioDestinationNode_h_
#
include
"
AudioNode
.
h
"
namespace
mozilla
{
namespace
dom
{
class
AudioContext
;
struct
AudioNodeOptions
;
class
MediaStreamAudioDestinationNode
final
:
public
AudioNode
{
public
:
static
already_AddRefed
<
MediaStreamAudioDestinationNode
>
Create
(
AudioContext
&
aAudioContext
const
AudioNodeOptions
&
aOptions
ErrorResult
&
aRv
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
MediaStreamAudioDestinationNode
AudioNode
)
static
already_AddRefed
<
MediaStreamAudioDestinationNode
>
Constructor
(
const
GlobalObject
&
aGlobal
AudioContext
&
aAudioContext
const
AudioNodeOptions
&
aOptions
ErrorResult
&
aRv
)
{
return
Create
(
aAudioContext
aOptions
aRv
)
;
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
uint16_t
NumberOfOutputs
(
)
const
final
override
{
return
0
;
}
void
DestroyMediaStream
(
)
override
;
DOMMediaStream
*
DOMStream
(
)
const
{
return
mDOMStream
;
}
const
char
*
NodeType
(
)
const
override
{
return
"
MediaStreamAudioDestinationNode
"
;
}
size_t
SizeOfExcludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
override
;
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
override
;
private
:
explicit
MediaStreamAudioDestinationNode
(
AudioContext
*
aContext
)
;
~
MediaStreamAudioDestinationNode
(
)
=
default
;
RefPtr
<
DOMMediaStream
>
mDOMStream
;
RefPtr
<
MediaInputPort
>
mPort
;
}
;
}
}
#
endif
