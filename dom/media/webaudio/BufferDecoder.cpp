#
include
"
BufferDecoder
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
MediaResource
.
h
"
namespace
mozilla
{
NS_IMPL_ISUPPORTS0
(
BufferDecoder
)
BufferDecoder
:
:
BufferDecoder
(
MediaResource
*
aResource
)
:
mResource
(
aResource
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_COUNT_CTOR
(
BufferDecoder
)
;
}
BufferDecoder
:
:
~
BufferDecoder
(
)
{
MOZ_COUNT_DTOR
(
BufferDecoder
)
;
}
void
BufferDecoder
:
:
BeginDecoding
(
TaskQueue
*
aTaskQueueIdentity
)
{
MOZ_ASSERT
(
!
mTaskQueueIdentity
&
&
aTaskQueueIdentity
)
;
mTaskQueueIdentity
=
aTaskQueueIdentity
;
}
bool
BufferDecoder
:
:
OnStateMachineTaskQueue
(
)
const
{
return
true
;
}
MediaResource
*
BufferDecoder
:
:
GetResource
(
)
const
{
return
mResource
;
}
void
BufferDecoder
:
:
NotifyBytesConsumed
(
int64_t
aBytes
int64_t
aOffset
)
{
}
void
BufferDecoder
:
:
NotifyDecodedFrames
(
uint32_t
aParsed
uint32_t
aDecoded
uint32_t
aDropped
)
{
}
void
BufferDecoder
:
:
SetMediaSeekable
(
bool
aMediaSeekable
)
{
}
VideoFrameContainer
*
BufferDecoder
:
:
GetVideoFrameContainer
(
)
{
return
nullptr
;
}
layers
:
:
ImageContainer
*
BufferDecoder
:
:
GetImageContainer
(
)
{
return
nullptr
;
}
bool
BufferDecoder
:
:
IsTransportSeekable
(
)
{
return
false
;
}
bool
BufferDecoder
:
:
IsMediaSeekable
(
)
{
return
false
;
}
void
BufferDecoder
:
:
MetadataLoaded
(
nsAutoPtr
<
MediaInfo
>
aInfo
nsAutoPtr
<
MetadataTags
>
aTags
MediaDecoderEventVisibility
aEventVisibility
)
{
}
void
BufferDecoder
:
:
FirstFrameLoaded
(
nsAutoPtr
<
MediaInfo
>
aInfo
MediaDecoderEventVisibility
aEventVisibility
)
{
}
void
BufferDecoder
:
:
OnReadMetadataCompleted
(
)
{
}
MediaDecoderOwner
*
BufferDecoder
:
:
GetOwner
(
)
{
return
nullptr
;
}
}
