#
ifndef
MediaContainerType_h_
#
define
MediaContainerType_h_
#
include
"
MediaMIMETypes
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
{
class
MediaContainerType
{
public
:
explicit
MediaContainerType
(
const
MediaMIMEType
&
aType
)
:
mExtendedMIMEType
(
aType
)
{
}
explicit
MediaContainerType
(
MediaMIMEType
&
&
aType
)
:
mExtendedMIMEType
(
Move
(
aType
)
)
{
}
explicit
MediaContainerType
(
const
MediaExtendedMIMEType
&
aType
)
:
mExtendedMIMEType
(
aType
)
{
}
explicit
MediaContainerType
(
MediaExtendedMIMEType
&
&
aType
)
:
mExtendedMIMEType
(
Move
(
aType
)
)
{
}
const
MediaMIMEType
&
Type
(
)
const
{
return
mExtendedMIMEType
.
Type
(
)
;
}
const
MediaExtendedMIMEType
&
ExtendedType
(
)
const
{
return
mExtendedMIMEType
;
}
const
nsCString
&
OriginalString
(
)
const
{
return
mExtendedMIMEType
.
OriginalString
(
)
;
}
size_t
SizeOfExcludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
const
;
private
:
MediaExtendedMIMEType
mExtendedMIMEType
;
}
;
Maybe
<
MediaContainerType
>
MakeMediaContainerType
(
const
nsAString
&
aType
)
;
Maybe
<
MediaContainerType
>
MakeMediaContainerType
(
const
nsACString
&
aType
)
;
Maybe
<
MediaContainerType
>
MakeMediaContainerType
(
const
char
*
aType
)
;
}
#
endif
