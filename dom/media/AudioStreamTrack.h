#
ifndef
AUDIOSTREAMTRACK_H_
#
define
AUDIOSTREAMTRACK_H_
#
include
"
MediaStreamTrack
.
h
"
#
include
"
DOMMediaStream
.
h
"
#
include
"
CrossGraphPort
.
h
"
#
include
"
nsClassHashtable
.
h
"
namespace
mozilla
:
:
dom
{
class
AudioStreamTrack
:
public
MediaStreamTrack
{
public
:
AudioStreamTrack
(
nsPIDOMWindowInner
*
aWindow
mozilla
:
:
MediaTrack
*
aInputTrack
MediaStreamTrackSource
*
aSource
MediaStreamTrackState
aReadyState
=
MediaStreamTrackState
:
:
Live
bool
aMuted
=
false
const
MediaTrackConstraints
&
aConstraints
=
MediaTrackConstraints
(
)
)
:
MediaStreamTrack
(
aWindow
aInputTrack
aSource
aReadyState
aMuted
aConstraints
)
{
}
AudioStreamTrack
*
AsAudioStreamTrack
(
)
override
{
return
this
;
}
const
AudioStreamTrack
*
AsAudioStreamTrack
(
)
const
override
{
return
this
;
}
RefPtr
<
GenericPromise
>
AddAudioOutput
(
void
*
aKey
AudioDeviceInfo
*
aSink
)
;
void
RemoveAudioOutput
(
void
*
aKey
)
;
void
SetAudioOutputVolume
(
void
*
aKey
float
aVolume
)
;
void
GetKind
(
nsAString
&
aKind
)
override
{
aKind
.
AssignLiteral
(
"
audio
"
)
;
}
void
GetLabel
(
nsAString
&
aLabel
CallerType
aCallerType
)
override
;
protected
:
already_AddRefed
<
MediaStreamTrack
>
CloneInternal
(
)
override
;
}
;
}
#
endif
