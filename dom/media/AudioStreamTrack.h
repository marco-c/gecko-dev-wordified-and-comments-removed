#
ifndef
AUDIOSTREAMTRACK_H_
#
define
AUDIOSTREAMTRACK_H_
#
include
"
MediaStreamTrack
.
h
"
#
include
"
DOMMediaStream
.
h
"
namespace
mozilla
{
namespace
dom
{
class
AudioStreamTrack
:
public
MediaStreamTrack
{
public
:
AudioStreamTrack
(
DOMMediaStream
*
aStream
TrackID
aTrackID
TrackID
aInputTrackID
MediaStreamTrackSource
*
aSource
const
MediaTrackConstraints
&
aConstraints
=
MediaTrackConstraints
(
)
)
:
MediaStreamTrack
(
aStream
aTrackID
aInputTrackID
aSource
aConstraints
)
{
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
AudioStreamTrack
*
AsAudioStreamTrack
(
)
override
{
return
this
;
}
const
AudioStreamTrack
*
AsAudioStreamTrack
(
)
const
override
{
return
this
;
}
void
GetKind
(
nsAString
&
aKind
)
override
{
aKind
.
AssignLiteral
(
"
audio
"
)
;
}
protected
:
already_AddRefed
<
MediaStreamTrack
>
CloneInternal
(
DOMMediaStream
*
aOwningStream
TrackID
aTrackID
)
override
{
return
do_AddRef
(
new
AudioStreamTrack
(
aOwningStream
aTrackID
mInputTrackID
mSource
mConstraints
)
)
;
}
}
;
}
}
#
endif
