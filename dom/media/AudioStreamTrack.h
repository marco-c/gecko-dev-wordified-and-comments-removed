#
ifndef
AUDIOSTREAMTRACK_H_
#
define
AUDIOSTREAMTRACK_H_
#
include
"
MediaStreamTrack
.
h
"
#
include
"
DOMMediaStream
.
h
"
namespace
mozilla
{
namespace
dom
{
class
AudioStreamTrack
:
public
MediaStreamTrack
{
public
:
AudioStreamTrack
(
nsPIDOMWindowInner
*
aWindow
MediaStream
*
aInputStream
TrackID
aTrackID
MediaStreamTrackSource
*
aSource
const
MediaTrackConstraints
&
aConstraints
=
MediaTrackConstraints
(
)
)
:
MediaStreamTrack
(
aWindow
aInputStream
aTrackID
aSource
aConstraints
)
{
}
AudioStreamTrack
*
AsAudioStreamTrack
(
)
override
{
return
this
;
}
const
AudioStreamTrack
*
AsAudioStreamTrack
(
)
const
override
{
return
this
;
}
void
AddAudioOutput
(
void
*
aKey
)
;
void
RemoveAudioOutput
(
void
*
aKey
)
;
void
SetAudioOutputVolume
(
void
*
aKey
float
aVolume
)
;
void
GetKind
(
nsAString
&
aKind
)
override
{
aKind
.
AssignLiteral
(
"
audio
"
)
;
}
void
GetLabel
(
nsAString
&
aLabel
CallerType
aCallerType
)
override
;
protected
:
already_AddRefed
<
MediaStreamTrack
>
CloneInternal
(
)
override
{
return
do_AddRef
(
new
AudioStreamTrack
(
mWindow
Ended
(
)
?
nullptr
:
mInputStream
.
get
(
)
mTrackID
mSource
mConstraints
)
)
;
}
}
;
}
}
#
endif
