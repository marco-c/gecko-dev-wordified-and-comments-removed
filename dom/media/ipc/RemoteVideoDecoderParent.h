#
ifndef
include_dom_media_ipc_RemoteVideoDecoderParent_h
#
define
include_dom_media_ipc_RemoteVideoDecoderParent_h
#
include
"
mozilla
/
PRemoteVideoDecoderParent
.
h
"
namespace
mozilla
{
class
RemoteDecoderManagerParent
;
using
mozilla
:
:
ipc
:
:
IPCResult
;
class
RemoteVideoDecoderParent
final
:
public
PRemoteVideoDecoderParent
{
friend
class
PRemoteVideoDecoderParent
;
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
RemoteVideoDecoderParent
)
RemoteVideoDecoderParent
(
RemoteDecoderManagerParent
*
aParent
const
VideoInfo
&
aVideoInfo
float
aFramerate
const
CreateDecoderParams
:
:
OptionSet
&
aOptions
TaskQueue
*
aManagerTaskQueue
TaskQueue
*
aDecodeTaskQueue
bool
*
aSuccess
nsCString
*
aErrorDescription
)
;
void
Destroy
(
)
;
IPCResult
RecvInit
(
)
;
IPCResult
RecvInput
(
const
MediaRawDataIPDL
&
aData
)
;
IPCResult
RecvFlush
(
)
;
IPCResult
RecvDrain
(
)
;
IPCResult
RecvShutdown
(
)
;
IPCResult
RecvSetSeekThreshold
(
const
int64_t
&
aTime
)
;
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
private
:
bool
OnManagerThread
(
)
;
void
Error
(
const
MediaResult
&
aError
)
;
~
RemoteVideoDecoderParent
(
)
;
void
ProcessDecodedData
(
const
MediaDataDecoder
:
:
DecodedData
&
aData
)
;
RefPtr
<
RemoteDecoderManagerParent
>
mParent
;
RefPtr
<
RemoteVideoDecoderParent
>
mIPDLSelfRef
;
RefPtr
<
TaskQueue
>
mManagerTaskQueue
;
RefPtr
<
TaskQueue
>
mDecodeTaskQueue
;
RefPtr
<
MediaDataDecoder
>
mDecoder
;
bool
mDestroyed
;
VideoInfo
mVideoInfo
;
}
;
}
#
endif
