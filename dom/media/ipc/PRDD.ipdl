include
GraphicsMessages
;
include
MemoryReportTypes
;
include
PrefsTypes
;
include
protocol
PProfiler
;
include
protocol
PRemoteDecoderManager
;
include
protocol
PVideoBridge
;
#
if
defined
(
MOZ_SANDBOX
)
&
&
defined
(
MOZ_DEBUG
)
&
&
defined
(
ENABLE_TESTS
)
include
protocol
PSandboxTesting
;
#
endif
using
mozilla
:
:
dom
:
:
NativeThreadId
from
"
mozilla
/
dom
/
NativeThreadId
.
h
"
;
[
MoveOnly
]
using
mozilla
:
:
UntrustedModulesData
from
"
mozilla
/
UntrustedModulesData
.
h
"
;
[
MoveOnly
]
using
mozilla
:
:
ModulePaths
from
"
mozilla
/
UntrustedModulesData
.
h
"
;
[
MoveOnly
]
using
mozilla
:
:
ModulesMapResult
from
"
mozilla
/
UntrustedModulesData
.
h
"
;
using
mozilla
:
:
PDMFactory
:
:
MediaCodecsSupported
from
"
PDMFactory
.
h
"
;
namespace
mozilla
{
protocol
PRDD
{
parent
:
async
Init
(
GfxVarUpdate
[
]
vars
FileDescriptor
?
sandboxBroker
bool
canRecordReleaseTelemetry
)
;
async
InitProfiler
(
Endpoint
<
PProfilerChild
>
endpoint
)
;
async
NewContentRemoteDecoderManager
(
Endpoint
<
PRemoteDecoderManagerParent
>
endpoint
)
;
async
RequestMemoryReport
(
uint32_t
generation
bool
anonymize
bool
minimizeMemoryUsage
FileDescriptor
?
DMDFile
)
returns
(
uint32_t
aGeneration
)
;
async
PreferenceUpdate
(
Pref
pref
)
;
async
UpdateVar
(
GfxVarUpdate
var
)
;
async
InitVideoBridge
(
Endpoint
<
PVideoBridgeChild
>
endpoint
bool
createHardwareDevice
ContentDeviceData
contentDeviceData
)
;
async
GetUntrustedModulesData
(
)
returns
(
UntrustedModulesData
?
data
)
;
#
if
defined
(
MOZ_SANDBOX
)
&
&
defined
(
MOZ_DEBUG
)
&
&
defined
(
ENABLE_TESTS
)
async
InitSandboxTesting
(
Endpoint
<
PSandboxTestingChild
>
aEndpoint
)
;
#
endif
child
:
async
InitCrashReporter
(
NativeThreadId
threadId
)
;
async
AddMemoryReport
(
MemoryReport
aReport
)
;
async
GetModulesTrust
(
ModulePaths
aModPaths
bool
aRunAtNormalPriority
)
returns
(
ModulesMapResult
?
modMapResult
)
;
async
UpdateMediaCodecsSupported
(
MediaCodecsSupported
aSupported
)
;
}
;
}
