#
ifndef
include_dom_media_ipc_RemoteDecoderModule_h
#
define
include_dom_media_ipc_RemoteDecoderModule_h
#
include
"
PlatformDecoderModule
.
h
"
namespace
mozilla
{
enum
class
RemoteMediaIn
;
class
RemoteDecoderModule
:
public
PlatformDecoderModule
{
template
<
typename
T
typename
.
.
.
Args
>
friend
already_AddRefed
<
T
>
MakeAndAddRef
(
Args
&
&
.
.
.
)
;
public
:
const
char
*
Name
(
)
const
override
;
static
already_AddRefed
<
PlatformDecoderModule
>
Create
(
RemoteMediaIn
aLocation
)
;
media
:
:
DecodeSupportSet
SupportsMimeType
(
const
nsACString
&
aMimeType
DecoderDoctorDiagnostics
*
aDiagnostics
)
const
override
;
media
:
:
DecodeSupportSet
Supports
(
const
SupportDecoderParams
&
aParams
DecoderDoctorDiagnostics
*
aDiagnostics
)
const
override
;
RefPtr
<
CreateDecoderPromise
>
AsyncCreateDecoder
(
const
CreateDecoderParams
&
aParams
)
override
;
already_AddRefed
<
MediaDataDecoder
>
CreateVideoDecoder
(
const
CreateDecoderParams
&
aParams
)
override
{
MOZ_CRASH
(
"
Not
available
"
)
;
}
already_AddRefed
<
MediaDataDecoder
>
CreateAudioDecoder
(
const
CreateDecoderParams
&
aParams
)
override
{
MOZ_CRASH
(
"
Not
available
"
)
;
}
private
:
explicit
RemoteDecoderModule
(
RemoteMediaIn
aLocation
)
;
const
RemoteMediaIn
mLocation
;
}
;
}
#
endif
