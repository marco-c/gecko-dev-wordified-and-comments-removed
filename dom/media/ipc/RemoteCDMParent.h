#
ifndef
include_dom_media_ipc_RemoteCDMParent_h
#
define
include_dom_media_ipc_RemoteCDMParent_h
#
include
"
mozilla
/
PRemoteCDMParent
.
h
"
namespace
mozilla
{
class
RemoteCDMParent
:
public
PRemoteCDMParent
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
RemoteCDMParent
final
)
;
RemoteCDMParent
(
)
=
default
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvInit
(
const
RemoteCDMInitRequestIPDL
&
request
InitResolver
&
&
aResolver
)
=
0
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvCreateSession
(
RemoteCDMCreateSessionRequestIPDL
&
&
aRequest
CreateSessionResolver
&
&
aResolver
)
=
0
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvLoadSession
(
const
RemoteCDMLoadSessionRequestIPDL
&
aRequest
LoadSessionResolver
&
&
aResolver
)
=
0
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvUpdateSession
(
const
RemoteCDMUpdateSessionRequestIPDL
&
aRequest
UpdateSessionResolver
&
&
aResolver
)
=
0
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvRemoveSession
(
const
nsString
&
aSessionId
RemoveSessionResolver
&
&
aResolver
)
=
0
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvCloseSession
(
const
nsString
&
aSessionId
CloseSessionResolver
&
&
aResolver
)
=
0
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvSetServerCertificate
(
mozilla
:
:
Span
<
uint8_t
const
>
aCertificate
SetServerCertificateResolver
&
&
aResolver
)
=
0
;
protected
:
virtual
~
RemoteCDMParent
(
)
=
default
;
}
;
}
#
endif
