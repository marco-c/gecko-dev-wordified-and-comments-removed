include
"
mozilla
/
dom
/
MediaIPCUtils
.
h
"
;
include
protocol
PRemoteMediaManager
;
using
mozilla
:
:
MediaDataDecoder
:
:
ConversionRequired
from
"
PlatformDecoderModule
.
h
"
;
using
mozilla
:
:
TrackInfo
:
:
TrackType
from
"
MediaInfo
.
h
"
;
using
mozilla
:
:
layers
:
:
LayersBackend
from
"
mozilla
/
layers
/
LayersTypes
.
h
"
;
using
mozilla
:
:
MediaResult
from
"
MediaResult
.
h
"
;
[
RefCounted
]
using
class
mozilla
:
:
ArrayOfRemoteMediaRawData
from
"
mozilla
/
RemoteMediaData
.
h
"
;
[
RefCounted
]
using
class
mozilla
:
:
ArrayOfRemoteAudioData
from
"
mozilla
/
RemoteMediaData
.
h
"
;
[
RefCounted
]
using
class
mozilla
:
:
ArrayOfRemoteVideoData
from
"
mozilla
/
RemoteMediaData
.
h
"
;
include
PMediaDecoderParams
;
include
LayersSurfaces
;
namespace
mozilla
{
union
DecodedOutputIPDL
{
nullable
ArrayOfRemoteAudioData
;
nullable
ArrayOfRemoteVideoData
;
}
;
struct
InitCompletionIPDL
{
TrackType
type
;
nsCString
decoderDescription
;
nsCString
decoderProcessName
;
nsCString
decoderCodecName
;
bool
hardware
;
nsCString
hardwareReason
;
ConversionRequired
conversion
;
bool
shouldDecoderAlwaysBeRecycled
;
}
;
union
InitResultIPDL
{
MediaResult
;
InitCompletionIPDL
;
}
;
union
DecodeResultIPDL
{
MediaResult
;
DecodedOutputIPDL
;
}
;
[
ManualDealloc
]
async
protocol
PRemoteDecoder
{
manager
PRemoteMediaManager
;
parent
:
async
Construct
(
)
returns
(
MediaResult
result
)
;
async
Init
(
)
returns
(
InitResultIPDL
result
)
;
async
Decode
(
nullable
ArrayOfRemoteMediaRawData
data
)
returns
(
DecodeResultIPDL
result
)
;
async
Flush
(
)
returns
(
MediaResult
error
)
;
async
Drain
(
)
returns
(
DecodeResultIPDL
result
)
;
async
Shutdown
(
)
returns
(
bool
unused
)
;
async
SetSeekThreshold
(
TimeUnit
time
)
;
async
__delete__
(
)
;
}
;
}
