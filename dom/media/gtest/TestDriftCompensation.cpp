#
include
"
gtest
/
gtest
.
h
"
#
include
"
DriftCompensation
.
h
"
#
include
"
mozilla
/
SpinEventLoopUntil
.
h
"
using
namespace
mozilla
;
class
DriftCompensatorTest
:
public
:
:
testing
:
:
Test
{
public
:
const
TrackRate
mRate
=
44100
;
const
TimeStamp
mStart
;
const
RefPtr
<
DriftCompensator
>
mComp
;
DriftCompensatorTest
(
)
:
mStart
(
TimeStamp
:
:
Now
(
)
)
mComp
(
MakeRefPtr
<
DriftCompensator
>
(
GetCurrentSerialEventTarget
(
)
mRate
)
)
{
mComp
-
>
NotifyAudioStart
(
mStart
)
;
{
bool
updated
=
false
;
NS_DispatchToCurrentThread
(
NS_NewRunnableFunction
(
__func__
[
&
]
{
updated
=
true
;
}
)
)
;
SpinEventLoopUntil
(
"
DriftCompensatorTest
:
:
DriftCompensatorTest
"
_ns
[
&
]
{
return
updated
;
}
)
;
}
}
TimeStamp
Past
(
TimeStamp
aNow
)
{
return
mStart
+
(
aNow
-
mStart
)
/
(
int64_t
)
2
;
}
TimeStamp
Future
(
TimeStamp
aNow
)
{
return
mStart
+
(
aNow
-
mStart
)
*
2
;
}
}
;
TEST_F
(
DriftCompensatorTest
Initialized
)
{
EXPECT_EQ
(
mComp
-
>
GetVideoTime
(
mStart
mStart
)
mStart
)
;
}
TEST_F
(
DriftCompensatorTest
SlowerAudio
)
{
mComp
-
>
NotifyAudio
(
mRate
*
10
)
;
TimeStamp
now
=
mStart
+
TimeDuration
:
:
FromSeconds
(
20
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
mStart
)
-
mStart
)
.
ToSeconds
(
)
0
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
Past
(
now
)
)
-
mStart
)
.
ToSeconds
(
)
5
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
now
)
-
mStart
)
.
ToSeconds
(
)
10
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
Future
(
now
)
)
-
mStart
)
.
ToSeconds
(
)
20
.
0
)
;
}
TEST_F
(
DriftCompensatorTest
NoDrift
)
{
mComp
-
>
NotifyAudio
(
mRate
*
10
)
;
TimeStamp
now
=
mStart
+
TimeDuration
:
:
FromSeconds
(
10
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
mStart
)
-
mStart
)
.
ToSeconds
(
)
0
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
Past
(
now
)
)
-
mStart
)
.
ToSeconds
(
)
5
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
now
)
-
mStart
)
.
ToSeconds
(
)
10
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
Future
(
now
)
)
-
mStart
)
.
ToSeconds
(
)
20
.
0
)
;
}
TEST_F
(
DriftCompensatorTest
NoProgress
)
{
mComp
-
>
NotifyAudio
(
mRate
*
10
)
;
TimeStamp
now
=
mStart
;
TimeStamp
future
=
mStart
+
TimeDuration
:
:
FromSeconds
(
5
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
mStart
)
-
mStart
)
.
ToSeconds
(
)
0
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
future
)
-
mStart
)
.
ToSeconds
(
)
5
.
0
)
;
}
TEST_F
(
DriftCompensatorTest
FasterAudio
)
{
mComp
-
>
NotifyAudio
(
mRate
*
20
)
;
TimeStamp
now
=
mStart
+
TimeDuration
:
:
FromSeconds
(
10
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
mStart
)
-
mStart
)
.
ToSeconds
(
)
0
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
Past
(
now
)
)
-
mStart
)
.
ToSeconds
(
)
10
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
now
)
-
mStart
)
.
ToSeconds
(
)
20
.
0
)
;
EXPECT_EQ
(
(
mComp
-
>
GetVideoTime
(
now
Future
(
now
)
)
-
mStart
)
.
ToSeconds
(
)
40
.
0
)
;
}
