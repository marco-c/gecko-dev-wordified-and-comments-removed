#
include
"
MP3Decoder
.
h
"
#
include
"
MediaContainerType
.
h
"
#
include
"
MediaDecoderStateMachine
.
h
"
#
include
"
MediaFormatReader
.
h
"
#
include
"
MP3Demuxer
.
h
"
#
include
"
PDMFactory
.
h
"
namespace
mozilla
{
ChannelMediaDecoder
*
MP3Decoder
:
:
Clone
(
MediaDecoderInit
&
aInit
)
{
if
(
!
IsEnabled
(
)
)
{
return
nullptr
;
}
return
new
MP3Decoder
(
aInit
)
;
}
MediaDecoderStateMachine
*
MP3Decoder
:
:
CreateStateMachine
(
)
{
MediaDecoderReaderInit
init
(
this
)
;
mReader
=
new
MediaFormatReader
(
init
new
MP3Demuxer
(
mResource
)
)
;
return
new
MediaDecoderStateMachine
(
this
mReader
)
;
}
bool
MP3Decoder
:
:
IsEnabled
(
)
{
RefPtr
<
PDMFactory
>
platform
=
new
PDMFactory
(
)
;
return
platform
-
>
SupportsMimeType
(
NS_LITERAL_CSTRING
(
"
audio
/
mpeg
"
)
nullptr
)
;
}
bool
MP3Decoder
:
:
IsSupportedType
(
const
MediaContainerType
&
aContainerType
)
{
if
(
aContainerType
.
Type
(
)
=
=
MEDIAMIMETYPE
(
"
audio
/
mp3
"
)
|
|
aContainerType
.
Type
(
)
=
=
MEDIAMIMETYPE
(
"
audio
/
mpeg
"
)
)
{
return
IsEnabled
(
)
&
&
(
aContainerType
.
ExtendedType
(
)
.
Codecs
(
)
.
IsEmpty
(
)
|
|
aContainerType
.
ExtendedType
(
)
.
Codecs
(
)
=
=
"
mp3
"
)
;
}
return
false
;
}
}
