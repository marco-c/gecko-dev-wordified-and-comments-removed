#
ifndef
GMPVideoEncodedFrameImpl_h_
#
define
GMPVideoEncodedFrameImpl_h_
#
include
"
gmp
-
errors
.
h
"
#
include
"
gmp
-
video
-
frame
.
h
"
#
include
"
gmp
-
video
-
frame
-
encoded
.
h
"
#
include
"
mozilla
/
ipc
/
Shmem
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
class
CryptoSample
;
namespace
gmp
{
class
GMPVideoHostImpl
;
class
GMPVideoEncodedFrameData
;
class
GMPVideoEncodedFrameImpl
:
public
GMPVideoEncodedFrame
{
friend
struct
IPC
:
:
ParamTraits
<
mozilla
:
:
gmp
:
:
GMPVideoEncodedFrameImpl
>
;
public
:
explicit
GMPVideoEncodedFrameImpl
(
GMPVideoHostImpl
*
aHost
)
;
GMPVideoEncodedFrameImpl
(
const
GMPVideoEncodedFrameData
&
aFrameData
ipc
:
:
Shmem
&
&
aShmemBuffer
GMPVideoHostImpl
*
aHost
)
;
GMPVideoEncodedFrameImpl
(
const
GMPVideoEncodedFrameData
&
aFrameData
nsTArray
<
uint8_t
>
&
&
aArrayBuffer
GMPVideoHostImpl
*
aHost
)
;
virtual
~
GMPVideoEncodedFrameImpl
(
)
;
void
DoneWithAPI
(
)
;
static
bool
CheckFrameData
(
const
GMPVideoEncodedFrameData
&
aFrameData
size_t
aBufferSize
)
;
void
RelinquishFrameData
(
GMPVideoEncodedFrameData
&
aFrameData
)
;
bool
RelinquishFrameData
(
GMPVideoEncodedFrameData
&
aFrameData
ipc
:
:
Shmem
&
aShmem
)
;
bool
RelinquishFrameData
(
GMPVideoEncodedFrameData
&
aFrameData
nsTArray
<
uint8_t
>
&
aArrayBuffer
)
;
GMPVideoFrameFormat
GetFrameFormat
(
)
override
;
void
Destroy
(
)
override
;
GMPErr
CreateEmptyFrame
(
uint32_t
aSize
)
override
;
GMPErr
CopyFrame
(
const
GMPVideoEncodedFrame
&
aFrame
)
override
;
void
SetEncodedWidth
(
uint32_t
aEncodedWidth
)
override
;
uint32_t
EncodedWidth
(
)
override
;
void
SetEncodedHeight
(
uint32_t
aEncodedHeight
)
override
;
uint32_t
EncodedHeight
(
)
override
;
void
SetTimeStamp
(
uint64_t
aTimeStamp
)
override
;
uint64_t
TimeStamp
(
)
override
;
void
SetDuration
(
uint64_t
aDuration
)
override
;
uint64_t
Duration
(
)
const
override
;
void
SetFrameType
(
GMPVideoFrameType
aFrameType
)
override
;
GMPVideoFrameType
FrameType
(
)
override
;
void
SetAllocatedSize
(
uint32_t
aNewSize
)
override
;
uint32_t
AllocatedSize
(
)
override
;
void
SetSize
(
uint32_t
aSize
)
override
;
uint32_t
Size
(
)
override
;
void
SetCompleteFrame
(
bool
aCompleteFrame
)
override
;
bool
CompleteFrame
(
)
override
;
const
uint8_t
*
Buffer
(
)
const
override
;
uint8_t
*
Buffer
(
)
override
;
GMPBufferType
BufferType
(
)
const
override
;
void
SetBufferType
(
GMPBufferType
aBufferType
)
override
;
private
:
void
DestroyBuffer
(
)
;
uint32_t
mEncodedWidth
;
uint32_t
mEncodedHeight
;
uint64_t
mTimeStamp
;
uint64_t
mDuration
;
GMPVideoFrameType
mFrameType
;
uint32_t
mSize
;
bool
mCompleteFrame
;
GMPVideoHostImpl
*
mHost
;
nsTArray
<
uint8_t
>
mArrayBuffer
;
ipc
:
:
Shmem
mShmemBuffer
;
GMPBufferType
mBufferType
;
}
;
}
}
#
endif
