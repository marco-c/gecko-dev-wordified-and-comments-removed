#
ifndef
WidevineVideoFrame_h_
#
define
WidevineVideoFrame_h_
#
include
<
vector
>
#
include
"
content_decryption_module
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
stddef
.
h
"
namespace
mozilla
{
class
WidevineVideoFrame
:
public
cdm
:
:
VideoFrame
{
public
:
WidevineVideoFrame
(
)
;
WidevineVideoFrame
(
WidevineVideoFrame
&
&
other
)
;
~
WidevineVideoFrame
(
)
;
void
SetFormat
(
cdm
:
:
VideoFormat
aFormat
)
override
;
cdm
:
:
VideoFormat
Format
(
)
const
override
;
void
SetSize
(
cdm
:
:
Size
aSize
)
override
;
cdm
:
:
Size
Size
(
)
const
override
;
void
SetFrameBuffer
(
cdm
:
:
Buffer
*
aFrameBuffer
)
override
;
cdm
:
:
Buffer
*
FrameBuffer
(
)
override
;
void
SetPlaneOffset
(
cdm
:
:
VideoPlane
aPlane
uint32_t
aOffset
)
override
;
uint32_t
PlaneOffset
(
cdm
:
:
VideoPlane
aPlane
)
override
;
void
SetStride
(
cdm
:
:
VideoPlane
aPlane
uint32_t
aStride
)
override
;
uint32_t
Stride
(
cdm
:
:
VideoPlane
aPlane
)
override
;
void
SetTimestamp
(
int64_t
aTimestamp
)
override
;
int64_t
Timestamp
(
)
const
override
;
[
[
nodiscard
]
]
bool
InitToBlack
(
int32_t
aWidth
int32_t
aHeight
int64_t
aTimeStamp
)
;
protected
:
cdm
:
:
VideoFormat
mFormat
;
cdm
:
:
Size
mSize
;
cdm
:
:
Buffer
*
mBuffer
;
uint32_t
mPlaneOffsets
[
cdm
:
:
kMaxPlanes
]
;
uint32_t
mPlaneStrides
[
cdm
:
:
kMaxPlanes
]
;
int64_t
mTimestamp
;
}
;
}
#
endif
