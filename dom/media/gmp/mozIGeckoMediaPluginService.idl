#
include
"
nsISupports
.
idl
"
#
include
"
nsIThread
.
idl
"
%
{
C
+
+
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsString
.
h
"
class
GMPDecryptorProxy
;
class
GMPVideoDecoderProxy
;
class
GMPVideoEncoderProxy
;
class
GMPVideoHost
;
namespace
mozilla
{
class
GMPCrashHelper
;
}
template
<
class
T
>
class
GMPGetterCallback
{
public
:
GMPGetterCallback
(
)
{
MOZ_COUNT_CTOR
(
GMPGetterCallback
<
T
>
)
;
}
virtual
~
GMPGetterCallback
(
)
{
MOZ_COUNT_DTOR
(
GMPGetterCallback
<
T
>
)
;
}
virtual
void
Done
(
T
*
)
=
0
;
}
;
template
<
class
T
>
class
GMPVideoGetterCallback
{
public
:
GMPVideoGetterCallback
(
)
{
MOZ_COUNT_CTOR
(
GMPVideoGetterCallback
<
T
>
)
;
}
virtual
~
GMPVideoGetterCallback
(
)
{
MOZ_COUNT_DTOR
(
GMPVideoGetterCallback
<
T
>
)
;
}
virtual
void
Done
(
T
*
GMPVideoHost
*
)
=
0
;
}
;
typedef
GMPGetterCallback
<
GMPDecryptorProxy
>
GetGMPDecryptorCallback
;
typedef
GMPVideoGetterCallback
<
GMPVideoDecoderProxy
>
GetGMPVideoDecoderCallback
;
typedef
GMPVideoGetterCallback
<
GMPVideoEncoderProxy
>
GetGMPVideoEncoderCallback
;
class
GetNodeIdCallback
{
public
:
MOZ_COUNTED_DEFAULT_CTOR
(
GetNodeIdCallback
)
MOZ_COUNTED_DTOR_VIRTUAL
(
GetNodeIdCallback
)
virtual
void
Done
(
nsresult
aResult
const
nsACString
&
aNodeId
)
=
0
;
}
;
%
}
[
ptr
]
native
TagArray
(
nsTArray
<
nsCString
>
)
;
native
GetGMPDecryptorCallback
(
mozilla
:
:
UniquePtr
<
GetGMPDecryptorCallback
>
&
&
)
;
native
GetGMPVideoDecoderCallback
(
mozilla
:
:
UniquePtr
<
GetGMPVideoDecoderCallback
>
&
&
)
;
native
GetGMPVideoEncoderCallback
(
mozilla
:
:
UniquePtr
<
GetGMPVideoEncoderCallback
>
&
&
)
;
native
GetNodeIdCallback
(
mozilla
:
:
UniquePtr
<
GetNodeIdCallback
>
&
&
)
;
native
GMPCrashHelperPtr
(
mozilla
:
:
GMPCrashHelper
*
)
;
[
scriptable
uuid
(
44d362ae
-
937a
-
4803
-
bee6
-
f2512a0149d1
)
]
interface
mozIGeckoMediaPluginService
:
nsISupports
{
readonly
attribute
nsIThread
thread
;
void
RunPluginCrashCallbacks
(
in
unsigned
long
pluginId
in
ACString
pluginName
)
;
[
noscript
]
boolean
hasPluginForAPI
(
in
ACString
api
in
TagArray
tags
)
;
[
noscript
]
void
getGMPVideoDecoder
(
in
GMPCrashHelperPtr
helper
in
TagArray
tags
[
optional
]
in
ACString
nodeId
in
GetGMPVideoDecoderCallback
callback
)
;
[
noscript
]
void
getDecryptingGMPVideoDecoder
(
in
GMPCrashHelperPtr
helper
in
TagArray
tags
in
ACString
nodeId
in
GetGMPVideoDecoderCallback
callback
)
;
[
noscript
]
void
getGMPVideoEncoder
(
in
GMPCrashHelperPtr
helper
in
TagArray
tags
[
optional
]
in
ACString
nodeId
in
GetGMPVideoEncoderCallback
callback
)
;
[
noscript
]
void
getNodeId
(
in
AString
origin
in
AString
topLevelOrigin
in
AString
gmpName
in
GetNodeIdCallback
callback
)
;
}
;
