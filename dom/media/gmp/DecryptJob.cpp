#
include
"
DecryptJob
.
h
"
namespace
mozilla
{
void
DecryptJob
:
:
PostResult
(
DecryptStatus
aResult
)
{
nsTArray
<
uint8_t
>
empty
;
PostResult
(
aResult
empty
)
;
}
void
DecryptJob
:
:
PostResult
(
DecryptStatus
aResult
const
nsTArray
<
uint8_t
>
&
aDecryptedData
)
{
if
(
aDecryptedData
.
Length
(
)
!
=
mSample
-
>
Size
(
)
)
{
NS_WARNING
(
"
CDM
returned
incorrect
number
of
decrypted
bytes
"
)
;
}
if
(
aResult
=
=
Ok
)
{
UniquePtr
<
MediaRawDataWriter
>
writer
(
mSample
-
>
CreateWriter
(
)
)
;
PodCopy
(
writer
-
>
Data
(
)
aDecryptedData
.
Elements
(
)
std
:
:
min
<
size_t
>
(
aDecryptedData
.
Length
(
)
mSample
-
>
Size
(
)
)
)
;
}
else
if
(
aResult
=
=
NoKeyErr
)
{
NS_WARNING
(
"
CDM
returned
NoKeyErr
"
)
;
}
else
{
nsAutoCString
str
(
"
CDM
returned
decode
failure
DecryptStatus
=
"
)
;
str
.
AppendInt
(
aResult
)
;
NS_WARNING
(
str
.
get
(
)
)
;
}
mPromise
.
Resolve
(
DecryptResult
(
aResult
mSample
)
__func__
)
;
}
}
