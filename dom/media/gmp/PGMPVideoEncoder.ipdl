include
protocol
PGMPContent
;
include
GMPTypes
;
using
GMPVideoCodec
from
"
gmp
-
video
-
codec
.
h
"
;
using
GMPVideoFrameType
from
"
gmp
-
video
-
frame
-
encoded
.
h
"
;
using
GMPErr
from
"
gmp
-
errors
.
h
"
;
include
"
GMPMessageUtils
.
h
"
;
include
"
GMPVideoEncoderChild
.
h
"
;
namespace
mozilla
{
namespace
gmp
{
[
RefCounted
ChildImpl
=
"
GMPVideoEncoderChild
"
ParentImpl
=
virtual
]
sync
protocol
PGMPVideoEncoder
{
manager
PGMPContent
;
child
:
async
InitEncode
(
GMPVideoCodec
aCodecSettings
uint8_t
[
]
aCodecSpecific
int32_t
aNumberOfCores
uint32_t
aMaxPayloadSize
)
;
async
Encode
(
GMPVideoi420FrameData
aInputFrame
uint8_t
[
]
aCodecSpecificInfo
GMPVideoFrameType
[
]
aFrameTypes
)
;
async
SetChannelParameters
(
uint32_t
aPacketLoss
uint32_t
aRTT
)
;
async
SetRates
(
uint32_t
aNewBitRate
uint32_t
aFrameRate
)
;
async
SetPeriodicKeyFrames
(
bool
aEnable
)
;
async
EncodingComplete
(
)
;
async
ChildShmemForPool
(
Shmem
aEncodedBuffer
)
;
parent
:
async
__delete__
(
)
;
async
Encoded
(
GMPVideoEncodedFrameData
aEncodedFrame
uint8_t
[
]
aCodecSpecificInfo
)
;
async
Error
(
GMPErr
aErr
)
;
async
Shutdown
(
)
;
async
ParentShmemForPool
(
Shmem
aFrameBuffer
)
;
sync
NeedShmem
(
uint32_t
aEncodedBufferSize
)
returns
(
Shmem
aMem
)
;
}
;
}
}
