#
ifndef
GMPStorageParent_h_
#
define
GMPStorageParent_h_
#
include
"
mozilla
/
gmp
/
PGMPStorageParent
.
h
"
#
include
"
GMPStorage
.
h
"
namespace
mozilla
{
namespace
gmp
{
class
GMPParent
;
class
GMPStorageParent
:
public
PGMPStorageParent
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
GMPStorageParent
)
GMPStorageParent
(
const
nsCString
&
aNodeId
GMPParent
*
aPlugin
)
;
nsresult
Init
(
)
;
void
Shutdown
(
)
;
protected
:
bool
RecvOpen
(
const
nsCString
&
aRecordName
)
override
;
bool
RecvRead
(
const
nsCString
&
aRecordName
)
override
;
bool
RecvWrite
(
const
nsCString
&
aRecordName
InfallibleTArray
<
uint8_t
>
&
&
aBytes
)
override
;
bool
RecvGetRecordNames
(
)
override
;
bool
RecvClose
(
const
nsCString
&
aRecordName
)
override
;
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
private
:
~
GMPStorageParent
(
)
{
}
RefPtr
<
GMPStorage
>
mStorage
;
const
nsCString
mNodeId
;
RefPtr
<
GMPParent
>
mPlugin
;
bool
mShutdown
;
}
;
}
}
#
endif
