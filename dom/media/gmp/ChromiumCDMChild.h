#
ifndef
ChromiumCDMChild_h_
#
define
ChromiumCDMChild_h_
#
include
"
mozilla
/
gmp
/
PChromiumCDMChild
.
h
"
namespace
mozilla
{
namespace
gmp
{
class
GMPContentChild
;
class
ChromiumCDMChild
:
public
PChromiumCDMChild
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
ChromiumCDMChild
)
;
explicit
ChromiumCDMChild
(
GMPContentChild
*
aPlugin
)
;
protected
:
~
ChromiumCDMChild
(
)
{
}
ipc
:
:
IPCResult
RecvInit
(
const
bool
&
aAllowDistinctiveIdentifier
const
bool
&
aAllowPersistentState
)
override
;
ipc
:
:
IPCResult
RecvSetServerCertificate
(
const
uint32_t
&
aPromiseId
nsTArray
<
uint8_t
>
&
&
aServerCert
)
override
;
ipc
:
:
IPCResult
RecvCreateSessionAndGenerateRequest
(
const
uint32_t
&
aPromiseId
const
uint32_t
&
aSessionType
const
uint32_t
&
aInitDataType
nsTArray
<
uint8_t
>
&
&
aInitData
)
override
;
ipc
:
:
IPCResult
RecvUpdateSession
(
const
uint32_t
&
aPromiseId
const
nsCString
&
aSessionId
nsTArray
<
uint8_t
>
&
&
aResponse
)
override
;
ipc
:
:
IPCResult
RecvCloseSession
(
const
uint32_t
&
aPromiseId
const
nsCString
&
aSessionId
)
override
;
ipc
:
:
IPCResult
RecvRemoveSession
(
const
uint32_t
&
aPromiseId
const
nsCString
&
aSessionId
)
override
;
ipc
:
:
IPCResult
RecvDecrypt
(
const
CDMInputBuffer
&
aBuffer
)
override
;
ipc
:
:
IPCResult
RecvInitializeVideoDecoder
(
const
CDMVideoDecoderConfig
&
aConfig
)
override
;
ipc
:
:
IPCResult
RecvDeinitializeVideoDecoder
(
)
override
;
ipc
:
:
IPCResult
RecvResetVideoDecoder
(
)
override
;
ipc
:
:
IPCResult
RecvDecryptAndDecodeFrame
(
const
CDMInputBuffer
&
aBuffer
)
override
;
ipc
:
:
IPCResult
RecvDestroy
(
)
override
;
GMPContentChild
*
mPlugin
;
}
;
}
}
#
endif
