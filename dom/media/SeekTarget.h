#
ifndef
SEEK_TARGET_H
#
define
SEEK_TARGET_H
#
include
"
TimeUnits
.
h
"
namespace
mozilla
{
enum
class
MediaDecoderEventVisibility
:
int8_t
{
Observable
Suppressed
}
;
struct
SeekTarget
{
enum
Type
{
Invalid
PrevSyncPoint
Accurate
}
;
SeekTarget
(
)
:
mTime
(
-
1
.
0
)
mType
(
SeekTarget
:
:
Invalid
)
mEventVisibility
(
MediaDecoderEventVisibility
:
:
Observable
)
{
}
SeekTarget
(
int64_t
aTimeUsecs
Type
aType
MediaDecoderEventVisibility
aEventVisibility
=
MediaDecoderEventVisibility
:
:
Observable
)
:
mTime
(
aTimeUsecs
)
mType
(
aType
)
mEventVisibility
(
aEventVisibility
)
{
}
SeekTarget
(
const
SeekTarget
&
aOther
)
:
mTime
(
aOther
.
mTime
)
mType
(
aOther
.
mType
)
mEventVisibility
(
aOther
.
mEventVisibility
)
{
}
bool
IsValid
(
)
const
{
return
mType
!
=
SeekTarget
:
:
Invalid
;
}
void
Reset
(
)
{
mTime
=
-
1
;
mType
=
SeekTarget
:
:
Invalid
;
}
int64_t
mTime
;
Type
mType
;
MediaDecoderEventVisibility
mEventVisibility
;
}
;
}
#
endif
