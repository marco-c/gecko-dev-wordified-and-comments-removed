#
ifndef
BIT_WRITER_H_
#
define
BIT_WRITER_H_
#
include
"
mozilla
/
RefPtr
.
h
"
namespace
mozilla
{
class
MediaByteBuffer
;
class
BitWriter
{
public
:
explicit
BitWriter
(
MediaByteBuffer
*
aBuffer
)
;
virtual
~
BitWriter
(
)
;
void
WriteBits
(
uint64_t
aValue
size_t
aBits
)
;
void
WriteBit
(
bool
aValue
)
{
WriteBits
(
aValue
1
)
;
}
void
WriteU8
(
uint8_t
aValue
)
{
WriteBits
(
aValue
8
)
;
}
void
WriteU32
(
uint32_t
aValue
)
{
WriteBits
(
aValue
32
)
;
}
void
WriteU64
(
uint64_t
aValue
)
{
WriteBits
(
aValue
64
)
;
}
void
WriteUE
(
uint32_t
aValue
)
;
void
WriteULEB128
(
uint64_t
aValue
)
;
void
CloseWithRbspTrailing
(
)
;
void
AdvanceBytes
(
uint32_t
aByteOffset
)
;
size_t
BitCount
(
)
const
{
return
mPosition
*
8
+
mBitIndex
;
}
private
:
RefPtr
<
MediaByteBuffer
>
mBuffer
;
size_t
mPosition
=
0
;
uint8_t
mBitIndex
=
0
;
}
;
}
#
endif
