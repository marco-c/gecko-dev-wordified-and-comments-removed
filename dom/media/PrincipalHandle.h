#
ifndef
DOM_MEDIA_PRINCIPALHANDLE_H_
#
define
DOM_MEDIA_PRINCIPALHANDLE_H_
#
include
"
nsIPrincipal
.
h
"
#
include
"
nsProxyRelease
.
h
"
namespace
mozilla
{
typedef
nsMainThreadPtrHandle
<
nsIPrincipal
>
PrincipalHandle
;
inline
PrincipalHandle
MakePrincipalHandle
(
nsIPrincipal
*
aPrincipal
)
{
RefPtr
<
nsMainThreadPtrHolder
<
nsIPrincipal
>
>
holder
=
new
nsMainThreadPtrHolder
<
nsIPrincipal
>
(
"
MakePrincipalHandle
:
:
nsIPrincipal
"
aPrincipal
)
;
return
PrincipalHandle
(
holder
)
;
}
#
define
PRINCIPAL_HANDLE_NONE
nullptr
inline
nsIPrincipal
*
GetPrincipalFromHandle
(
const
PrincipalHandle
&
aPrincipalHandle
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
return
aPrincipalHandle
.
get
(
)
;
}
inline
bool
PrincipalHandleMatches
(
const
PrincipalHandle
&
aPrincipalHandle
nsIPrincipal
*
aOther
)
{
if
(
!
aOther
)
{
return
false
;
}
nsIPrincipal
*
principal
=
GetPrincipalFromHandle
(
aPrincipalHandle
)
;
if
(
!
principal
)
{
return
false
;
}
bool
result
;
if
(
NS_FAILED
(
principal
-
>
Equals
(
aOther
&
result
)
)
)
{
NS_ERROR
(
"
Principal
check
failed
"
)
;
return
false
;
}
return
result
;
}
}
#
endif
