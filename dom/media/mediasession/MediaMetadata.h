#
ifndef
mozilla_dom_MediaMetadata_h
#
define
mozilla_dom_MediaMetadata_h
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
{
namespace
dom
{
struct
MediaImage
;
struct
MediaMetadataInit
;
class
MediaMetadata
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
MediaMetadata
)
nsIGlobalObject
*
GetParentObject
(
)
const
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
MediaMetadata
>
Constructor
(
const
GlobalObject
&
aGlobal
const
MediaMetadataInit
&
aInit
ErrorResult
&
aRv
)
;
void
GetTitle
(
nsString
&
aRetVal
)
const
;
void
SetTitle
(
const
nsAString
&
aTitle
)
;
void
GetArtist
(
nsString
&
aRetVal
)
const
;
void
SetArtist
(
const
nsAString
&
aArtist
)
;
void
GetAlbum
(
nsString
&
aRetVal
)
const
;
void
SetAlbum
(
const
nsAString
&
aAlbum
)
;
void
GetArtwork
(
JSContext
*
aCx
nsTArray
<
JSObject
*
>
&
aRetVal
ErrorResult
&
aRv
)
const
;
void
SetArtwork
(
JSContext
*
aCx
const
Sequence
<
JSObject
*
>
&
aArtwork
ErrorResult
&
aRv
)
;
private
:
MediaMetadata
(
)
=
default
;
~
MediaMetadata
(
)
=
default
;
}
;
}
}
#
endif
