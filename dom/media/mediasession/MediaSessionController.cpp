#
include
"
MediaSessionController
.
h
"
#
include
"
mozilla
/
dom
/
BrowsingContext
.
h
"
mozilla
:
:
LazyLogModule
gMediaSession
(
"
MediaSession
"
)
;
#
undef
LOG
#
define
LOG
(
msg
.
.
.
)
\
MOZ_LOG
(
gMediaSession
LogLevel
:
:
Debug
\
(
"
MediaSessionController
=
%
p
"
msg
this
#
#
__VA_ARGS__
)
)
namespace
mozilla
{
namespace
dom
{
MediaSessionController
:
:
MediaSessionController
(
uint64_t
aContextId
)
:
mTopLevelBCId
(
aContextId
)
{
MOZ_DIAGNOSTIC_ASSERT
(
XRE_IsParentProcess
(
)
"
MediaSessionController
only
runs
on
Chrome
process
!
"
)
;
}
void
MediaSessionController
:
:
NotifySessionCreated
(
uint64_t
aSessionContextId
)
{
if
(
mMetadataMap
.
Contains
(
aSessionContextId
)
)
{
return
;
}
Maybe
<
MediaMetadataBase
>
empty
;
LOG
(
"
Session
%
"
PRId64
"
has
been
created
"
aSessionContextId
)
;
mMetadataMap
.
Put
(
aSessionContextId
empty
)
;
UpdateActiveMediaSessionContextId
(
)
;
}
void
MediaSessionController
:
:
NotifySessionDestroyed
(
uint64_t
aSessionContextId
)
{
if
(
!
mMetadataMap
.
Contains
(
aSessionContextId
)
)
{
return
;
}
LOG
(
"
Session
%
"
PRId64
"
has
been
destroyed
"
aSessionContextId
)
;
mMetadataMap
.
Remove
(
aSessionContextId
)
;
UpdateActiveMediaSessionContextId
(
)
;
}
void
MediaSessionController
:
:
UpdateMetadata
(
uint64_t
aSessionContextId
MediaMetadataBase
&
aMetadata
)
{
if
(
!
mMetadataMap
.
Contains
(
aSessionContextId
)
)
{
return
;
}
LOG
(
"
Update
metadata
for
session
%
"
PRId64
aSessionContextId
)
;
mMetadataMap
.
GetValue
(
aSessionContextId
)
-
>
emplace
(
aMetadata
)
;
}
void
MediaSessionController
:
:
UpdateActiveMediaSessionContextId
(
)
{
uint64_t
candidateId
=
0
;
if
(
mActiveMediaSessionContextId
&
&
mMetadataMap
.
Contains
(
*
mActiveMediaSessionContextId
)
)
{
candidateId
=
*
mActiveMediaSessionContextId
;
}
for
(
auto
iter
=
mMetadataMap
.
ConstIter
(
)
;
!
iter
.
Done
(
)
;
iter
.
Next
(
)
)
{
if
(
RefPtr
<
BrowsingContext
>
bc
=
BrowsingContext
:
:
Get
(
iter
.
Key
(
)
)
;
bc
-
>
IsTopContent
(
)
)
{
candidateId
=
iter
.
Key
(
)
;
break
;
}
if
(
!
candidateId
)
{
candidateId
=
iter
.
Key
(
)
;
}
}
if
(
mActiveMediaSessionContextId
&
&
*
mActiveMediaSessionContextId
=
=
candidateId
)
{
LOG
(
"
Active
session
%
"
PRId64
"
keeps
unchanged
"
*
mActiveMediaSessionContextId
)
;
return
;
}
mActiveMediaSessionContextId
=
Some
(
candidateId
)
;
LOG
(
"
Session
%
"
PRId64
"
becomes
active
session
"
*
mActiveMediaSessionContextId
)
;
}
MediaMetadataBase
MediaSessionController
:
:
CreateDefaultMetadata
(
)
const
{
return
MediaMetadataBase
(
)
;
}
MediaMetadataBase
MediaSessionController
:
:
GetCurrentMediaMetadata
(
)
const
{
if
(
mActiveMediaSessionContextId
)
{
Maybe
<
MediaMetadataBase
>
metadata
=
mMetadataMap
.
Get
(
*
mActiveMediaSessionContextId
)
;
return
metadata
?
*
metadata
:
CreateDefaultMetadata
(
)
;
}
return
CreateDefaultMetadata
(
)
;
}
}
}
