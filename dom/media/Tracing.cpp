#
include
"
Tracing
.
h
"
#
include
<
inttypes
.
h
>
using
namespace
mozilla
;
using
TracingPhase
=
mozilla
:
:
AsyncLogger
:
:
TracingPhase
;
mozilla
:
:
AsyncLogger
gAudioCallbackTraceLogger
;
static
std
:
:
atomic
<
int
>
gTracingStarted
(
0
)
;
void
StartAudioCallbackTracing
(
)
{
#
ifdef
MOZ_REAL_TIME_TRACING
int
cnt
=
gTracingStarted
.
fetch_add
(
1
std
:
:
memory_order_seq_cst
)
;
if
(
cnt
=
=
0
)
{
gAudioCallbackTraceLogger
.
Start
(
)
;
}
#
endif
}
void
StopAudioCallbackTracing
(
)
{
#
ifdef
MOZ_REAL_TIME_TRACING
int
cnt
=
gTracingStarted
.
fetch_sub
(
1
std
:
:
memory_order_seq_cst
)
;
if
(
cnt
=
=
1
)
{
gAudioCallbackTraceLogger
.
Stop
(
)
;
}
#
endif
}
void
AutoTracer
:
:
PrintEvent
(
const
char
*
aName
const
char
*
aCategory
const
char
*
aComment
TracingPhase
aPhase
)
{
#
ifdef
MOZ_REAL_TIME_TRACING
mLogger
.
Log
(
aName
aCategory
aComment
aPhase
)
;
#
endif
}
void
AutoTracer
:
:
PrintDuration
(
const
char
*
aName
const
char
*
aCategory
uint64_t
aDuration
uint64_t
aFrames
uint64_t
aSampleRate
)
{
#
ifdef
MOZ_REAL_TIME_TRACING
mLogger
.
LogDuration
(
aName
aCategory
aDuration
aFrames
aSampleRate
)
;
#
endif
}
AutoTracer
:
:
AutoTracer
(
AsyncLogger
&
aLogger
const
char
*
aLocation
DurationType
aDurationType
uint64_t
aFrames
uint64_t
aSampleRate
)
:
mLogger
(
aLogger
)
mLocation
(
aLocation
)
mComment
(
nullptr
)
mDurationType
(
aDurationType
)
{
MOZ_ASSERT
(
aDurationType
=
=
DurationType
:
:
FRAME_COUNT
)
;
if
(
aLogger
.
Enabled
(
)
)
{
float
durationUS
=
(
static_cast
<
float
>
(
aFrames
)
/
aSampleRate
)
*
1e6
;
PrintDuration
(
aLocation
"
perf
"
durationUS
aFrames
aSampleRate
)
;
}
}
AutoTracer
:
:
AutoTracer
(
AsyncLogger
&
aLogger
const
char
*
aLocation
DurationType
aDurationType
const
char
*
aComment
)
:
mLogger
(
aLogger
)
mLocation
(
aLocation
)
mComment
(
aComment
)
mDurationType
(
aDurationType
)
{
MOZ_ASSERT
(
aDurationType
=
=
DurationType
:
:
ELAPSED_TIME
)
;
if
(
aLogger
.
Enabled
(
)
)
{
PrintEvent
(
aLocation
"
perf
"
mComment
AsyncLogger
:
:
TracingPhase
:
:
BEGIN
)
;
}
}
AutoTracer
:
:
~
AutoTracer
(
)
{
if
(
mDurationType
=
=
DurationType
:
:
ELAPSED_TIME
)
{
if
(
mLogger
.
Enabled
(
)
)
{
PrintEvent
(
mLocation
"
perf
"
mComment
AsyncLogger
:
:
TracingPhase
:
:
END
)
;
}
}
}
