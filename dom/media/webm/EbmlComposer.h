#
ifndef
EbmlComposer_h_
#
define
EbmlComposer_h_
#
include
"
nsTArray
.
h
"
#
include
"
ContainerWriter
.
h
"
namespace
mozilla
{
class
EbmlComposer
{
public
:
EbmlComposer
(
)
=
default
;
void
SetVideoConfig
(
uint32_t
aWidth
uint32_t
aHeight
uint32_t
aDisplayWidth
uint32_t
aDisplayHeight
)
;
void
SetAudioConfig
(
uint32_t
aSampleFreq
uint32_t
aChannels
)
;
void
SetAudioCodecPrivateData
(
nsTArray
<
uint8_t
>
&
aBufs
)
{
mCodecPrivateData
.
AppendElements
(
aBufs
)
;
}
void
GenerateHeader
(
)
;
nsresult
WriteSimpleBlock
(
EncodedFrame
*
aFrame
)
;
void
ExtractBuffer
(
nsTArray
<
nsTArray
<
uint8_t
>
>
*
aDestBufs
uint32_t
aFlag
=
0
)
;
bool
WritingCluster
(
)
const
{
return
!
mCurrentCluster
.
IsEmpty
(
)
;
}
private
:
void
FinishCluster
(
)
;
nsTArray
<
nsTArray
<
uint8_t
>
>
mCurrentCluster
;
uint64_t
mCurrentClusterLengthLoc
=
0
;
uint64_t
mCurrentClusterTimecode
=
0
;
nsTArray
<
nsTArray
<
uint8_t
>
>
mFinishedClusters
;
bool
mMetadataFinished
=
false
;
int
mWidth
=
0
;
int
mHeight
=
0
;
int
mDisplayWidth
=
0
;
int
mDisplayHeight
=
0
;
bool
mHasVideo
=
false
;
float
mSampleFreq
=
0
;
int
mChannels
=
0
;
bool
mHasAudio
=
false
;
nsTArray
<
uint8_t
>
mCodecPrivateData
;
}
;
}
#
endif
