#
ifndef
WebMWriter_h_
#
define
WebMWriter_h_
#
include
"
ContainerWriter
.
h
"
namespace
mozilla
{
class
EbmlComposer
;
class
VorbisMetadata
:
public
TrackMetadataBase
{
public
:
nsTArray
<
uint8_t
>
mData
;
int32_t
mChannels
;
float
mSamplingFrequency
;
MetadataKind
GetKind
(
)
const
override
{
return
METADATA_VORBIS
;
}
}
;
class
VP8Metadata
:
public
TrackMetadataBase
{
public
:
int32_t
mWidth
;
int32_t
mHeight
;
int32_t
mDisplayWidth
;
int32_t
mDisplayHeight
;
MetadataKind
GetKind
(
)
const
override
{
return
METADATA_VP8
;
}
}
;
class
WebMWriter
:
public
ContainerWriter
{
public
:
WebMWriter
(
)
;
virtual
~
WebMWriter
(
)
;
nsresult
WriteEncodedTrack
(
const
nsTArray
<
RefPtr
<
EncodedFrame
>
>
&
aData
uint32_t
aFlags
=
0
)
override
;
nsresult
GetContainerData
(
nsTArray
<
nsTArray
<
uint8_t
>
>
*
aOutputBufs
uint32_t
aFlags
=
0
)
override
;
nsresult
SetMetadata
(
const
nsTArray
<
RefPtr
<
TrackMetadataBase
>
>
&
aMetadata
)
override
;
private
:
UniquePtr
<
EbmlComposer
>
mEbmlComposer
;
}
;
}
#
endif
