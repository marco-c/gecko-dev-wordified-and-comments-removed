#
include
"
ADTSDecoder
.
h
"
#
include
"
MediaContainerType
.
h
"
#
include
"
PDMFactory
.
h
"
namespace
mozilla
{
bool
ADTSDecoder
:
:
IsEnabled
(
)
{
RefPtr
<
PDMFactory
>
platform
=
new
PDMFactory
(
)
;
return
platform
-
>
SupportsMimeType
(
"
audio
/
mp4a
-
latm
"
_ns
nullptr
)
;
}
bool
ADTSDecoder
:
:
IsSupportedType
(
const
MediaContainerType
&
aContainerType
)
{
if
(
aContainerType
.
Type
(
)
=
=
MEDIAMIMETYPE
(
"
audio
/
aac
"
)
|
|
aContainerType
.
Type
(
)
=
=
MEDIAMIMETYPE
(
"
audio
/
aacp
"
)
|
|
aContainerType
.
Type
(
)
=
=
MEDIAMIMETYPE
(
"
audio
/
x
-
aac
"
)
)
{
return
IsEnabled
(
)
&
&
(
aContainerType
.
ExtendedType
(
)
.
Codecs
(
)
.
IsEmpty
(
)
|
|
aContainerType
.
ExtendedType
(
)
.
Codecs
(
)
=
=
"
aac
"
)
;
}
return
false
;
}
nsTArray
<
UniquePtr
<
TrackInfo
>
>
ADTSDecoder
:
:
GetTracksInfo
(
const
MediaContainerType
&
aType
)
{
nsTArray
<
UniquePtr
<
TrackInfo
>
>
tracks
;
if
(
!
IsSupportedType
(
aType
)
)
{
return
tracks
;
}
tracks
.
AppendElement
(
CreateTrackInfoWithMIMETypeAndContainerTypeExtraParameters
(
"
audio
/
mp4a
-
latm
"
_ns
aType
)
)
;
return
tracks
;
}
}
