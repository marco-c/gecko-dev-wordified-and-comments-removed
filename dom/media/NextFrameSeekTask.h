#
ifndef
NEXTFRAME_SEEK_TASK_H
#
define
NEXTFRAME_SEEK_TASK_H
#
include
"
SeekTask
.
h
"
#
include
"
MediaDecoderReader
.
h
"
namespace
mozilla
{
namespace
media
{
class
NextFrameSeekTask
final
:
public
SeekTask
{
public
:
NextFrameSeekTask
(
const
void
*
aDecoderID
AbstractThread
*
aThread
MediaDecoderReaderWrapper
*
aReader
const
SeekTarget
&
aTarget
const
MediaInfo
&
aInfo
const
media
:
:
TimeUnit
&
aDuration
int64_t
aCurrentTime
MediaQueue
<
MediaData
>
&
aAudioQueue
MediaQueue
<
MediaData
>
&
aVideoQueue
)
;
void
Discard
(
)
override
;
RefPtr
<
SeekTaskPromise
>
Seek
(
const
media
:
:
TimeUnit
&
aDuration
)
override
;
int64_t
CalculateNewCurrentTime
(
)
const
override
;
void
HandleAudioDecoded
(
MediaData
*
aAudio
)
override
;
void
HandleVideoDecoded
(
MediaData
*
aVideo
TimeStamp
aDecodeStart
)
override
;
void
HandleNotDecoded
(
MediaData
:
:
Type
aType
const
MediaResult
&
aError
)
override
;
void
HandleAudioWaited
(
MediaData
:
:
Type
aType
)
override
;
void
HandleVideoWaited
(
MediaData
:
:
Type
aType
)
override
;
void
HandleNotWaited
(
const
WaitForDataRejectValue
&
aRejection
)
override
;
~
NextFrameSeekTask
(
)
;
MediaQueue
<
MediaData
>
&
mAudioQueue
;
MediaQueue
<
MediaData
>
&
mVideoQueue
;
const
int64_t
mCurrentTime
;
media
:
:
TimeUnit
mDuration
;
}
;
}
}
#
endif
