#
include
"
DecoderDoctorDiagnostics
.
h
"
#
include
"
mozilla
/
Logging
.
h
"
static
mozilla
:
:
LazyLogModule
sDecoderDoctorLog
(
"
DecoderDoctor
"
)
;
#
define
DD_LOG
(
level
arg
.
.
.
)
MOZ_LOG
(
sDecoderDoctorLog
level
(
arg
#
#
__VA_ARGS__
)
)
#
define
DD_DEBUG
(
arg
.
.
.
)
DD_LOG
(
mozilla
:
:
LogLevel
:
:
Debug
arg
#
#
__VA_ARGS__
)
#
define
DD_WARN
(
arg
.
.
.
)
DD_LOG
(
mozilla
:
:
LogLevel
:
:
Warning
arg
#
#
__VA_ARGS__
)
namespace
mozilla
{
void
DecoderDoctorDiagnostics
:
:
StoreDiagnostics
(
nsIDocument
*
aDocument
const
nsAString
&
aFormat
const
char
*
aCallSite
)
{
if
(
NS_WARN_IF
(
!
aDocument
)
)
{
DD_WARN
(
"
DecoderDoctorDiagnostics
[
%
p
]
:
:
StoreDiagnostics
(
nsIDocument
*
aDocument
=
nullptr
format
=
'
%
s
'
call
site
'
%
s
'
)
"
this
NS_ConvertUTF16toUTF8
(
aFormat
)
.
get
(
)
aCallSite
)
;
return
;
}
DD_DEBUG
(
"
DecoderDoctorDiagnostics
[
%
p
]
:
:
StoreDiagnostics
(
nsIDocument
*
aDocument
=
%
p
format
=
'
%
s
'
call
site
'
%
s
'
)
"
this
aDocument
NS_ConvertUTF16toUTF8
(
aFormat
)
.
get
(
)
aCallSite
)
;
}
}
