#
ifndef
AllocationHandle_h
#
define
AllocationHandle_h
#
include
<
cstdint
>
#
include
<
limits
>
#
include
"
MediaEnginePrefs
.
h
"
#
include
"
MediaManager
.
h
"
#
include
"
MediaTrackConstraints
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
ipc
/
PBackgroundSharedTypes
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
{
class
AllocationHandle
{
~
AllocationHandle
(
)
=
default
;
public
:
static
uint64_t
GetUniqueId
(
)
{
static
uint64_t
sId
=
0
;
MOZ_ASSERT
(
MediaManager
:
:
GetIfExists
(
)
)
;
MOZ_ASSERT
(
MediaManager
:
:
GetIfExists
(
)
-
>
IsInMediaThread
(
)
)
;
MOZ_RELEASE_ASSERT
(
sId
<
std
:
:
numeric_limits
<
decltype
(
sId
)
>
:
:
max
(
)
)
;
return
sId
+
+
;
}
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
AllocationHandle
)
;
AllocationHandle
(
)
=
delete
;
AllocationHandle
(
const
dom
:
:
MediaTrackConstraints
&
aConstraints
const
ipc
:
:
PrincipalInfo
&
aPrincipalInfo
const
nsString
&
aDeviceId
)
:
mId
(
GetUniqueId
(
)
)
mDeviceId
(
aDeviceId
)
mPrincipalInfo
(
aPrincipalInfo
)
mConstraints
(
aConstraints
)
{
}
const
uint64_t
mId
;
const
nsString
mDeviceId
;
const
ipc
:
:
PrincipalInfo
mPrincipalInfo
;
NormalizedConstraints
mConstraints
;
}
;
}
#
endif
