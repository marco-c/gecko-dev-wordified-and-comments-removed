#
ifndef
MediaEnginePrefs_h
#
define
MediaEnginePrefs_h
#
include
<
stdint
.
h
>
#
include
<
string
.
h
>
namespace
mozilla
{
class
MediaEnginePrefs
{
public
:
static
const
int
DEFAULT_VIDEO_FPS
=
30
;
static
const
int
DEFAULT_43_VIDEO_WIDTH
=
640
;
static
const
int
DEFAULT_43_VIDEO_HEIGHT
=
480
;
static
const
int
DEFAULT_169_VIDEO_WIDTH
=
1280
;
static
const
int
DEFAULT_169_VIDEO_HEIGHT
=
720
;
MediaEnginePrefs
(
)
:
mWidth
(
0
)
mHeight
(
0
)
mFPS
(
0
)
mFreq
(
0
)
mAecOn
(
false
)
mUseAecMobile
(
false
)
mAgcOn
(
false
)
mHPFOn
(
false
)
mNoiseOn
(
false
)
mTransientOn
(
false
)
mResidualEchoOn
(
false
)
mAgc2Forced
(
false
)
mAgc
(
0
)
mNoise
(
0
)
mChannels
(
0
)
{
}
int32_t
mWidth
;
int32_t
mHeight
;
int32_t
mFPS
;
int32_t
mFreq
;
bool
mAecOn
;
bool
mUseAecMobile
;
bool
mAgcOn
;
bool
mHPFOn
;
bool
mNoiseOn
;
bool
mTransientOn
;
bool
mResidualEchoOn
;
bool
mAgc2Forced
;
int32_t
mAgc
;
int32_t
mNoise
;
int32_t
mChannels
;
bool
operator
=
=
(
const
MediaEnginePrefs
&
aRhs
)
{
return
memcmp
(
this
&
aRhs
sizeof
(
MediaEnginePrefs
)
)
=
=
0
;
}
;
int32_t
GetWidth
(
bool
aHD
=
false
)
const
{
return
mWidth
?
mWidth
:
(
mHeight
?
(
mHeight
*
GetDefWidth
(
aHD
)
)
/
GetDefHeight
(
aHD
)
:
GetDefWidth
(
aHD
)
)
;
}
int32_t
GetHeight
(
bool
aHD
=
false
)
const
{
return
mHeight
?
mHeight
:
(
mWidth
?
(
mWidth
*
GetDefHeight
(
aHD
)
)
/
GetDefWidth
(
aHD
)
:
GetDefHeight
(
aHD
)
)
;
}
private
:
static
int32_t
GetDefWidth
(
bool
aHD
=
false
)
{
if
(
aHD
)
{
return
DEFAULT_169_VIDEO_WIDTH
;
}
return
DEFAULT_43_VIDEO_WIDTH
;
}
static
int32_t
GetDefHeight
(
bool
aHD
=
false
)
{
if
(
aHD
)
{
return
DEFAULT_169_VIDEO_HEIGHT
;
}
return
DEFAULT_43_VIDEO_HEIGHT
;
}
}
;
}
#
endif
