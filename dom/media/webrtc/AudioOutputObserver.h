#
ifndef
AUDIOOUTPUTOBSERVER_H_
#
define
AUDIOOUTPUTOBSERVER_H_
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
AudioMixer
.
h
"
#
include
"
MediaData
.
h
"
namespace
webrtc
{
class
SingleRwFifo
;
}
namespace
mozilla
{
typedef
struct
FarEndAudioChunk_
{
uint16_t
mSamples
;
bool
mOverrun
;
int16_t
mData
[
1
]
;
}
FarEndAudioChunk
;
class
AudioOutputObserver
{
public
:
AudioOutputObserver
(
)
;
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
AudioOutputObserver
)
;
void
Clear
(
)
;
void
InsertFarEnd
(
const
AudioDataValue
*
aBuffer
uint32_t
aFrames
bool
aOverran
int
aFreq
int
aChannels
)
;
uint32_t
PlayoutFrequency
(
)
{
return
mPlayoutFreq
;
}
uint32_t
PlayoutChannels
(
)
{
return
mPlayoutChannels
;
}
FarEndAudioChunk
*
Pop
(
)
;
uint32_t
Size
(
)
;
private
:
virtual
~
AudioOutputObserver
(
)
;
uint32_t
mPlayoutFreq
;
uint32_t
mPlayoutChannels
;
nsAutoPtr
<
webrtc
:
:
SingleRwFifo
>
mPlayoutFifo
;
uint32_t
mChunkSize
;
FarEndAudioChunk
*
mSaved
;
uint32_t
mSamplesSaved
;
AlignedAudioBuffer
mDownmixBuffer
;
}
;
extern
StaticRefPtr
<
AudioOutputObserver
>
gFarendObserver
;
}
#
endif
