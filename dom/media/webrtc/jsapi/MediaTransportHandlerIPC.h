#
ifndef
_MTRANSPORTHANDLER_IPC_H__
#
define
_MTRANSPORTHANDLER_IPC_H__
#
include
"
jsapi
/
MediaTransportHandler
.
h
"
#
include
"
mozilla
/
dom
/
PMediaTransportChild
.
h
"
namespace
mozilla
{
class
MediaTransportChild
;
class
MediaTransportHandlerIPC
final
:
public
MediaTransportHandler
{
public
:
explicit
MediaTransportHandlerIPC
(
)
;
void
Initialize
(
)
override
;
RefPtr
<
IceLogPromise
>
GetIceLog
(
const
nsCString
&
aPattern
)
override
;
void
ClearIceLog
(
)
override
;
void
EnterPrivateMode
(
)
override
;
void
ExitPrivateMode
(
)
override
;
void
CreateIceCtx
(
const
std
:
:
string
&
aName
)
override
;
nsresult
SetIceConfig
(
const
nsTArray
<
dom
:
:
RTCIceServer
>
&
aIceServers
dom
:
:
RTCIceTransportPolicy
aIcePolicy
)
override
;
void
SetProxyConfig
(
NrSocketProxyConfig
&
&
aProxyConfig
)
override
;
void
EnsureProvisionalTransport
(
const
std
:
:
string
&
aTransportId
const
std
:
:
string
&
aLocalUfrag
const
std
:
:
string
&
aLocalPwd
int
aComponentCount
)
override
;
void
SetTargetForDefaultLocalAddressLookup
(
const
std
:
:
string
&
aTargetIp
uint16_t
aTargetPort
)
override
;
void
StartIceGathering
(
bool
aDefaultRouteOnly
bool
aObfuscateHostAddresses
const
nsTArray
<
NrIceStunAddr
>
&
aStunAddrs
)
override
;
void
ActivateTransport
(
const
std
:
:
string
&
aTransportId
const
std
:
:
string
&
aLocalUfrag
const
std
:
:
string
&
aLocalPwd
size_t
aComponentCount
const
std
:
:
string
&
aUfrag
const
std
:
:
string
&
aPassword
const
nsTArray
<
uint8_t
>
&
aKeyDer
const
nsTArray
<
uint8_t
>
&
aCertDer
SSLKEAType
aAuthType
bool
aDtlsClient
const
DtlsDigestList
&
aDigests
bool
aPrivacyRequested
)
override
;
void
RemoveTransportsExcept
(
const
std
:
:
set
<
std
:
:
string
>
&
aTransportIds
)
override
;
void
StartIceChecks
(
bool
aIsControlling
const
std
:
:
vector
<
std
:
:
string
>
&
aIceOptions
)
override
;
void
SendPacket
(
const
std
:
:
string
&
aTransportId
MediaPacket
&
&
aPacket
)
override
;
void
AddIceCandidate
(
const
std
:
:
string
&
aTransportId
const
std
:
:
string
&
aCandidate
const
std
:
:
string
&
aUfrag
const
std
:
:
string
&
aObfuscatedAddress
)
override
;
void
UpdateNetworkState
(
bool
aOnline
)
override
;
RefPtr
<
dom
:
:
RTCStatsPromise
>
GetIceStats
(
const
std
:
:
string
&
aTransportId
DOMHighResTimeStamp
aNow
)
override
;
private
:
friend
class
MediaTransportChild
;
void
Destroy
(
)
override
;
virtual
~
MediaTransportHandlerIPC
(
)
;
RefPtr
<
MediaTransportChild
>
mChild
;
typedef
MozPromise
<
bool
nsCString
false
>
InitPromise
;
RefPtr
<
InitPromise
>
mInitPromise
;
nsCOMPtr
<
nsISerialEventTarget
>
mThread
;
}
;
}
#
endif
