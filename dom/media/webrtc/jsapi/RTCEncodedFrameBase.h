#
ifndef
MOZILLA_DOM_MEDIA_WEBRTC_JSAPI_RTCENCODEDFRAMEBASE_H_
#
define
MOZILLA_DOM_MEDIA_WEBRTC_JSAPI_RTCENCODEDFRAMEBASE_H_
#
include
<
memory
>
#
include
"
api
/
frame_transformer_interface
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
dom
/
TypedArray
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
:
:
dom
{
class
RTCRtpScriptTransformer
;
class
RTCEncodedFrameBase
:
public
nsISupports
public
nsWrapperCache
{
public
:
explicit
RTCEncodedFrameBase
(
nsIGlobalObject
*
aGlobal
std
:
:
unique_ptr
<
webrtc
:
:
TransformableFrameInterface
>
aFrame
uint64_t
aCounter
)
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
RTCEncodedFrameBase
)
unsigned
long
Timestamp
(
)
const
;
void
SetData
(
const
ArrayBuffer
&
aData
)
;
void
GetData
(
JSContext
*
aCx
JS
:
:
Rooted
<
JSObject
*
>
*
aObj
)
;
uint64_t
GetCounter
(
)
const
;
virtual
bool
CheckOwner
(
RTCRtpScriptTransformer
*
aOwner
)
const
=
0
;
std
:
:
unique_ptr
<
webrtc
:
:
TransformableFrameInterface
>
TakeFrame
(
)
;
virtual
bool
IsVideo
(
)
const
=
0
;
protected
:
virtual
~
RTCEncodedFrameBase
(
)
;
RefPtr
<
nsIGlobalObject
>
mGlobal
;
std
:
:
unique_ptr
<
webrtc
:
:
TransformableFrameInterface
>
mFrame
;
const
uint64_t
mCounter
=
0
;
const
unsigned
long
mTimestamp
=
0
;
JS
:
:
Heap
<
JSObject
*
>
mData
;
}
;
}
#
endif
