#
ifndef
MOZILLA_DOM_MEDIA_WEBRTC_JSAPI_RTCICETRANSPORT_H_
#
define
MOZILLA_DOM_MEDIA_WEBRTC_JSAPI_RTCICETRANSPORT_H_
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
transport
/
transportlayer
.
h
"
class
nsPIDOMWindowInner
;
namespace
mozilla
:
:
dom
{
enum
class
RTCIceTransportState
:
uint8_t
;
enum
class
RTCIceGathererState
:
uint8_t
;
class
RTCIceTransport
:
public
DOMEventTargetHelper
{
public
:
explicit
RTCIceTransport
(
nsPIDOMWindowInner
*
aWindow
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
RTCIceTransport
DOMEventTargetHelper
)
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
IMPL_EVENT_HANDLER
(
statechange
)
IMPL_EVENT_HANDLER
(
gatheringstatechange
)
RTCIceTransportState
State
(
)
const
{
return
mState
;
}
RTCIceGathererState
GatheringState
(
)
const
{
return
mGatheringState
;
}
void
SetState
(
RTCIceTransportState
aState
)
;
void
SetGatheringState
(
RTCIceGathererState
aState
)
;
void
FireStateChangeEvent
(
)
;
void
FireGatheringStateChangeEvent
(
)
;
private
:
virtual
~
RTCIceTransport
(
)
=
default
;
RTCIceTransportState
mState
;
RTCIceGathererState
mGatheringState
;
}
;
}
#
endif
