#
include
"
RTCStatsIdGenerator
.
h
"
#
include
"
mozilla
/
RandomNum
.
h
"
#
include
<
iostream
>
namespace
mozilla
{
RTCStatsIdGenerator
:
:
RTCStatsIdGenerator
(
)
:
mSalt
(
RandomUint64
(
)
.
valueOr
(
0xa5a5a5a5
)
)
mCounter
(
0
)
{
}
nsString
RTCStatsIdGenerator
:
:
Id
(
const
nsString
&
aKey
)
{
if
(
!
aKey
.
Length
(
)
)
{
MOZ_ASSERT
(
aKey
.
Length
(
)
"
Stats
IDs
should
never
be
empty
.
"
)
;
return
aKey
;
}
if
(
mAllocated
.
find
(
aKey
)
=
=
mAllocated
.
end
(
)
)
{
mAllocated
[
aKey
]
=
Generate
(
)
;
}
return
mAllocated
[
aKey
]
;
}
nsString
RTCStatsIdGenerator
:
:
Generate
(
)
{
auto
random
=
RandomUint64
(
)
.
valueOr
(
0x1a22
)
;
auto
idNum
=
static_cast
<
uint32_t
>
(
mSalt
^
(
(
mCounter
+
+
<
<
16
)
|
random
)
)
;
nsString
id
;
id
.
AppendInt
(
idNum
16
)
;
return
id
;
}
}
