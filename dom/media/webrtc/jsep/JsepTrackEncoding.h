#
ifndef
_JESPTRACKENCODING_H_
#
define
_JESPTRACKENCODING_H_
#
include
"
jsep
/
JsepCodecDescription
.
h
"
#
include
"
common
/
EncodingConstraints
.
h
"
#
include
<
vector
>
namespace
mozilla
{
class
JsepTrackEncoding
{
public
:
JsepTrackEncoding
(
)
=
default
;
JsepTrackEncoding
(
const
JsepTrackEncoding
&
orig
)
:
mConstraints
(
orig
.
mConstraints
)
mRid
(
orig
.
mRid
)
{
for
(
const
auto
&
codec
:
orig
.
mCodecs
)
{
mCodecs
.
emplace_back
(
codec
-
>
Clone
(
)
)
;
}
}
const
std
:
:
vector
<
UniquePtr
<
JsepCodecDescription
>
>
&
GetCodecs
(
)
const
{
return
mCodecs
;
}
void
AddCodec
(
const
JsepCodecDescription
&
codec
)
{
mCodecs
.
emplace_back
(
codec
.
Clone
(
)
)
;
}
bool
HasFormat
(
const
std
:
:
string
&
format
)
const
{
for
(
const
auto
&
codec
:
mCodecs
)
{
if
(
codec
-
>
mDefaultPt
=
=
format
)
{
return
true
;
}
}
return
false
;
}
EncodingConstraints
mConstraints
;
std
:
:
string
mRid
;
bool
mPaused
=
false
;
private
:
std
:
:
vector
<
UniquePtr
<
JsepCodecDescription
>
>
mCodecs
;
}
;
}
#
endif
