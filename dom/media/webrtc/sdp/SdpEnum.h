#
ifndef
_SDPENUM_H_
#
define
_SDPENUM_H_
#
include
<
ostream
>
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
TypedEnumBits
.
h
"
namespace
mozilla
:
:
sdp
{
enum
NetType
{
kNetTypeNone
kInternet
}
;
inline
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
os
sdp
:
:
NetType
t
)
{
switch
(
t
)
{
case
sdp
:
:
kNetTypeNone
:
MOZ_ASSERT
(
false
)
;
return
os
<
<
"
NONE
"
;
case
sdp
:
:
kInternet
:
return
os
<
<
"
IN
"
;
}
MOZ_CRASH
(
"
Unknown
NetType
"
)
;
}
enum
AddrType
{
kAddrTypeNone
kIPv4
kIPv6
}
;
inline
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
os
sdp
:
:
AddrType
t
)
{
switch
(
t
)
{
case
sdp
:
:
kAddrTypeNone
:
MOZ_ASSERT
(
false
)
;
return
os
<
<
"
NONE
"
;
case
sdp
:
:
kIPv4
:
return
os
<
<
"
IP4
"
;
case
sdp
:
:
kIPv6
:
return
os
<
<
"
IP6
"
;
}
MOZ_CRASH
(
"
Unknown
AddrType
"
)
;
}
enum
Direction
{
kSend
=
1
kRecv
=
2
}
;
MOZ_MAKE_ENUM_CLASS_BITWISE_OPERATORS
(
Direction
)
;
inline
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
os
sdp
:
:
Direction
d
)
{
switch
(
d
)
{
case
sdp
:
:
kSend
:
return
os
<
<
"
send
"
;
case
sdp
:
:
kRecv
:
return
os
<
<
"
recv
"
;
}
MOZ_CRASH
(
"
Unknown
Direction
"
)
;
}
enum
SdpType
{
kOffer
kAnswer
}
;
}
#
endif
