include
(
'
/
media
/
webrtc
/
webrtc
.
mozbuild
'
)
with
Files
(
'
*
'
)
:
BUG_COMPONENT
=
(
'
Core
'
'
WebRTC
:
Audio
/
Video
'
)
with
Files
(
'
PeerIdentity
.
*
'
)
:
BUG_COMPONENT
=
(
'
Core
'
'
WebRTC
:
Signaling
'
)
XPIDL_MODULE
=
'
content_webrtc
'
EXPORTS
+
=
[
'
CubebDeviceEnumerator
.
h
'
'
MediaEngine
.
h
'
'
MediaEngineDefault
.
h
'
'
MediaEnginePrefs
.
h
'
'
MediaEngineSource
.
h
'
'
MediaTrackConstraints
.
h
'
'
SineWaveGenerator
.
h
'
]
SOURCES
+
=
[
'
CubebDeviceEnumerator
.
cpp
'
]
if
CONFIG
[
'
MOZ_WEBRTC
'
]
:
EXPORTS
+
=
[
'
MediaEngineRemoteVideoSource
.
h
'
'
MediaEngineWebRTC
.
h
'
'
MediaEngineWebRTCAudio
.
h
'
]
EXPORTS
.
mozilla
.
dom
+
=
[
'
RTCIdentityProviderRegistrar
.
h
'
]
UNIFIED_SOURCES
+
=
[
'
MediaEngineRemoteVideoSource
.
cpp
'
'
MediaEngineWebRTCAudio
.
cpp
'
'
RTCCertificate
.
cpp
'
'
RTCIdentityProviderRegistrar
.
cpp
'
]
SOURCES
+
=
[
'
MediaEngineWebRTC
.
cpp
'
]
LOCAL_INCLUDES
+
=
[
'
.
.
'
'
/
dom
/
base
'
'
/
dom
/
media
'
'
/
media
/
libyuv
/
libyuv
/
include
'
'
/
media
/
webrtc
/
signaling
/
src
/
common
'
'
/
media
/
webrtc
/
signaling
/
src
/
common
/
browser_logging
'
'
/
media
/
webrtc
/
trunk
'
'
/
media
/
webrtc
/
trunk
/
webrtc
'
]
PREPROCESSED_IPDL_SOURCES
+
=
[
'
PMediaTransport
.
ipdl
'
'
PWebrtcGlobal
.
ipdl
'
]
XPIDL_SOURCES
+
=
[
'
nsITabSource
.
idl
'
]
UNIFIED_SOURCES
+
=
[
'
MediaEngineDefault
.
cpp
'
'
MediaEngineSource
.
cpp
'
'
MediaTrackConstraints
.
cpp
'
'
PeerIdentity
.
cpp
'
]
EXPORTS
.
mozilla
+
=
[
'
PeerIdentity
.
h
'
]
EXPORTS
.
mozilla
.
dom
+
=
[
'
RTCCertificate
.
h
'
]
include
(
'
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
'
)
CXXFLAGS
+
=
[
'
-
Wno
-
error
=
attributes
'
'
-
Wno
-
error
=
shadow
'
]
DEFINES
[
'
TRACING
'
]
=
True
FINAL_LIBRARY
=
'
xul
'
