#
ifndef
MEDIAENGINEWEBRTC_H_
#
define
MEDIAENGINEWEBRTC_H_
#
include
"
AudioDeviceInfo
.
h
"
#
include
"
CamerasChild
.
h
"
#
include
"
CubebUtils
.
h
"
#
include
"
DOMMediaStream
.
h
"
#
include
"
MediaEngine
.
h
"
#
include
"
MediaEnginePrefs
.
h
"
#
include
"
MediaEngineSource
.
h
"
#
include
"
MediaEngineWrapper
.
h
"
#
include
"
MediaTrackGraph
.
h
"
#
include
"
NullTransport
.
h
"
#
include
"
VideoSegment
.
h
"
#
include
"
VideoUtils
.
h
"
#
include
"
CubebDeviceEnumerator
.
h
"
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
mozilla
/
Sprintf
.
h
"
#
include
"
mozilla
/
StaticMutex
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
dom
/
File
.
h
"
#
include
"
mozilla
/
dom
/
MediaStreamTrackBinding
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsComponentManagerUtils
.
h
"
#
include
"
nsDirectoryServiceDefs
.
h
"
#
include
"
nsRefPtrHashtable
.
h
"
#
include
"
nsThreadUtils
.
h
"
#
include
"
prcvar
.
h
"
#
include
"
prthread
.
h
"
#
include
"
modules
/
video_capture
/
video_capture_defines
.
h
"
namespace
mozilla
{
class
MediaEngineWebRTC
:
public
MediaEngine
{
public
:
MediaEngineWebRTC
(
)
;
void
SetFakeDeviceChangeEventsEnabled
(
bool
aEnable
)
override
;
void
Shutdown
(
)
override
;
void
EnumerateDevices
(
dom
:
:
MediaSourceEnum
MediaSinkEnum
nsTArray
<
RefPtr
<
MediaDevice
>
>
*
)
override
;
MediaEventSource
<
void
>
&
DeviceListChangeEvent
(
)
override
{
return
mDeviceListChangeEvent
;
}
private
:
~
MediaEngineWebRTC
(
)
=
default
;
void
EnumerateVideoDevices
(
camera
:
:
CaptureEngine
aCapEngine
nsTArray
<
RefPtr
<
MediaDevice
>
>
*
)
;
void
EnumerateMicrophoneDevices
(
nsTArray
<
RefPtr
<
MediaDevice
>
>
*
)
;
void
EnumerateSpeakerDevices
(
nsTArray
<
RefPtr
<
MediaDevice
>
>
*
)
;
void
DeviceListChanged
(
)
{
mDeviceListChangeEvent
.
Notify
(
)
;
}
static
void
FakeDeviceChangeEventTimerTick
(
nsITimer
*
aTimer
void
*
aClosure
)
;
MediaEventListener
mCameraListChangeListener
;
MediaEventListener
mMicrophoneListChangeListener
;
MediaEventListener
mSpeakerListChangeListener
;
MediaEventProducer
<
void
>
mDeviceListChangeEvent
;
nsCOMPtr
<
nsITimer
>
mFakeDeviceChangeEventTimer
;
}
;
}
#
endif
