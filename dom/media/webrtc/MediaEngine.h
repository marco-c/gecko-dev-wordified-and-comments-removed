#
ifndef
MEDIAENGINE_H_
#
define
MEDIAENGINE_H_
#
include
"
DOMMediaStream
.
h
"
#
include
"
MediaEventSource
.
h
"
#
include
"
MediaTrackGraph
.
h
"
#
include
"
MediaTrackConstraints
.
h
"
#
include
"
mozilla
/
dom
/
MediaStreamTrackBinding
.
h
"
#
include
"
mozilla
/
dom
/
VideoStreamTrack
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
ThreadSafeWeakPtr
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Blob
;
}
class
AllocationHandle
;
class
MediaDevice
;
class
MediaEngineSource
;
enum
MediaSinkEnum
{
Speaker
Other
}
;
enum
{
kVideoTrack
=
1
kAudioTrack
=
2
kTrackCount
}
;
class
MediaEngine
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
MediaEngine
)
NS_DECL_OWNINGEVENTTARGET
void
AssertIsOnOwningThread
(
)
const
{
NS_ASSERT_OWNINGTHREAD
(
MediaEngine
)
;
}
virtual
void
EnumerateDevices
(
dom
:
:
MediaSourceEnum
MediaSinkEnum
nsTArray
<
RefPtr
<
MediaDevice
>
>
*
)
=
0
;
virtual
void
Shutdown
(
)
=
0
;
virtual
void
SetFakeDeviceChangeEventsEnabled
(
bool
aEnable
)
{
MOZ_DIAGNOSTIC_ASSERT
(
false
"
Fake
events
may
not
have
started
/
stopped
"
)
;
}
virtual
MediaEventSource
<
void
>
&
DeviceListChangeEvent
(
)
=
0
;
protected
:
virtual
~
MediaEngine
(
)
=
default
;
}
;
}
#
endif
