#
include
"
transportlayerlog
.
h
"
#
include
"
logging
.
h
"
namespace
mozilla
{
MOZ_MTLOG_MODULE
(
"
mtransport
"
)
void
TransportLayerLogging
:
:
WasInserted
(
)
{
if
(
downward_
)
{
downward_
-
>
SignalStateChange
.
connect
(
this
&
TransportLayerLogging
:
:
StateChange
)
;
downward_
-
>
SignalPacketReceived
.
connect
(
this
&
TransportLayerLogging
:
:
PacketReceived
)
;
TL_SET_STATE
(
downward_
-
>
state
(
)
)
;
}
}
TransportResult
TransportLayerLogging
:
:
SendPacket
(
MediaPacket
&
packet
)
{
MOZ_MTLOG
(
ML_DEBUG
LAYER_INFO
<
<
"
SendPacket
(
"
<
<
packet
.
len
(
)
<
<
"
)
"
)
;
if
(
downward_
)
{
return
downward_
-
>
SendPacket
(
packet
)
;
}
return
static_cast
<
TransportResult
>
(
packet
.
len
(
)
)
;
}
void
TransportLayerLogging
:
:
StateChange
(
TransportLayer
*
layer
State
state
)
{
MOZ_MTLOG
(
ML_DEBUG
LAYER_INFO
<
<
"
Received
StateChange
to
"
<
<
state
)
;
TL_SET_STATE
(
state
)
;
}
void
TransportLayerLogging
:
:
PacketReceived
(
TransportLayer
*
layer
MediaPacket
&
packet
)
{
MOZ_MTLOG
(
ML_DEBUG
LAYER_INFO
<
<
"
PacketReceived
(
"
<
<
packet
.
len
(
)
<
<
"
)
"
)
;
SignalPacketReceived
(
this
packet
)
;
}
}
