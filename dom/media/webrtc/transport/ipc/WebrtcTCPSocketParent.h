#
ifndef
mozilla_net_WebrtcTCPSocketParent_h
#
define
mozilla_net_WebrtcTCPSocketParent_h
#
include
"
mozilla
/
net
/
PWebrtcTCPSocketParent
.
h
"
#
include
"
WebrtcTCPSocketCallback
.
h
"
class
nsIAuthPromptProvider
;
namespace
mozilla
:
:
net
{
class
WebrtcTCPSocket
;
class
WebrtcTCPSocketParent
:
public
PWebrtcTCPSocketParent
public
WebrtcTCPSocketCallback
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
WebrtcTCPSocketParent
override
)
mozilla
:
:
ipc
:
:
IPCResult
RecvAsyncOpen
(
const
nsACString
&
aHost
const
int
&
aPort
const
nsACString
&
aLocalAddress
const
int
&
aLocalPort
const
bool
&
aUseTls
const
Maybe
<
WebrtcProxyConfig
>
&
aProxyConfig
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvWrite
(
nsTArray
<
uint8_t
>
&
&
aWriteData
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvClose
(
)
override
;
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
explicit
WebrtcTCPSocketParent
(
const
Maybe
<
dom
:
:
TabId
>
&
aTabId
)
;
void
OnClose
(
nsresult
aReason
)
override
;
void
OnConnected
(
const
nsACString
&
aProxyType
)
override
;
void
OnRead
(
nsTArray
<
uint8_t
>
&
&
bytes
)
override
;
void
AddIPDLReference
(
)
{
AddRef
(
)
;
}
void
ReleaseIPDLReference
(
)
{
Release
(
)
;
}
protected
:
virtual
~
WebrtcTCPSocketParent
(
)
;
private
:
void
CleanupChannel
(
)
;
RefPtr
<
WebrtcTCPSocket
>
mChannel
;
}
;
}
#
endif
