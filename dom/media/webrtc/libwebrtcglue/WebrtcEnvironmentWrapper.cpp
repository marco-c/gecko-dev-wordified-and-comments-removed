#
include
"
WebrtcEnvironmentWrapper
.
h
"
#
include
"
WebrtcTaskQueueWrapper
.
h
"
#
include
"
api
/
environment
/
environment_factory
.
h
"
namespace
mozilla
{
RefPtr
<
WebrtcEnvironmentWrapper
>
WebrtcEnvironmentWrapper
:
:
Create
(
const
dom
:
:
RTCStatsTimestampMaker
&
aTimestampMaker
)
{
RefPtr
<
WebrtcEnvironmentWrapper
>
wrapper
=
new
WebrtcEnvironmentWrapper
(
MakeUnique
<
webrtc
:
:
RtcEventLogNull
>
(
)
MakeUnique
<
SharedThreadPoolWebRtcTaskQueueFactory
>
(
)
WrapUnique
(
new
webrtc
:
:
MozTrialsConfig
(
)
)
aTimestampMaker
)
;
return
wrapper
;
}
WebrtcEnvironmentWrapper
:
:
WebrtcEnvironmentWrapper
(
UniquePtr
<
webrtc
:
:
RtcEventLog
>
&
&
aEventLog
UniquePtr
<
webrtc
:
:
TaskQueueFactory
>
&
&
aTaskQueueFactory
UniquePtr
<
webrtc
:
:
FieldTrialsView
>
&
&
aTrials
const
dom
:
:
RTCStatsTimestampMaker
&
aTimestampMaker
)
:
mEventLog
(
std
:
:
move
(
aEventLog
)
)
mTaskQueueFactory
(
std
:
:
move
(
aTaskQueueFactory
)
)
mTrials
(
std
:
:
move
(
aTrials
)
)
mClock
(
aTimestampMaker
)
mEnv
(
webrtc
:
:
CreateEnvironment
(
mEventLog
.
get
(
)
mClock
.
GetRealTimeClockRaw
(
)
mTaskQueueFactory
.
get
(
)
mTrials
.
get
(
)
)
)
{
}
}
