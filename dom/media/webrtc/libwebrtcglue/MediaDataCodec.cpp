#
include
"
MediaDataCodec
.
h
"
#
include
"
PDMFactory
.
h
"
#
include
"
WebrtcGmpVideoCodec
.
h
"
#
include
"
WebrtcMediaDataDecoderCodec
.
h
"
#
include
"
WebrtcMediaDataEncoderCodec
.
h
"
#
include
"
mozilla
/
StaticPrefs_media
.
h
"
namespace
mozilla
{
WebrtcVideoEncoder
*
MediaDataCodec
:
:
CreateEncoder
(
webrtc
:
:
VideoCodecType
aCodecType
)
{
return
WebrtcMediaDataEncoder
:
:
CanCreate
(
aCodecType
)
?
new
WebrtcVideoEncoderProxy
(
new
WebrtcMediaDataEncoder
(
)
)
:
nullptr
;
}
WebrtcVideoDecoder
*
MediaDataCodec
:
:
CreateDecoder
(
webrtc
:
:
VideoCodecType
aCodecType
)
{
switch
(
aCodecType
)
{
case
webrtc
:
:
VideoCodecType
:
:
kVideoCodecVP8
:
case
webrtc
:
:
VideoCodecType
:
:
kVideoCodecVP9
:
if
(
!
StaticPrefs
:
:
media_navigator_mediadatadecoder_vpx_enabled
(
)
)
{
return
nullptr
;
}
break
;
case
webrtc
:
:
VideoCodecType
:
:
kVideoCodecH264
:
if
(
!
StaticPrefs
:
:
media_navigator_mediadatadecoder_h264_enabled
(
)
)
{
return
nullptr
;
}
break
;
default
:
return
nullptr
;
}
nsAutoCString
codec
;
switch
(
aCodecType
)
{
case
webrtc
:
:
VideoCodecType
:
:
kVideoCodecVP8
:
codec
=
"
video
/
vp8
"
;
break
;
case
webrtc
:
:
VideoCodecType
:
:
kVideoCodecVP9
:
codec
=
"
video
/
vp9
"
;
break
;
case
webrtc
:
:
VideoCodecType
:
:
kVideoCodecH264
:
codec
=
"
video
/
avc
"
;
break
;
default
:
return
nullptr
;
}
RefPtr
<
PDMFactory
>
pdm
=
new
PDMFactory
(
)
;
if
(
!
pdm
-
>
SupportsMimeType
(
codec
)
)
{
return
nullptr
;
}
return
new
WebrtcMediaDataDecoder
(
codec
)
;
}
}
