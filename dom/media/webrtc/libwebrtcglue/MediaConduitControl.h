#
ifndef
DOM_MEDIA_WEBRTC_LIBWEBRTCGLUE_MEDIACONDUITCONTROL_H_
#
define
DOM_MEDIA_WEBRTC_LIBWEBRTCGLUE_MEDIACONDUITCONTROL_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
CodecConfig
.
h
"
#
include
"
FrameTransformerProxy
.
h
"
#
include
"
RtpRtcpConfig
.
h
"
#
include
"
api
/
rtp_parameters
.
h
"
#
include
"
api
/
video_codecs
/
video_codec
.
h
"
#
include
"
jsapi
/
RTCDTMFSender
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
StateMirroring
.
h
"
#
include
"
mozilla
/
dom
/
RTCRtpParametersBinding
.
h
"
namespace
mozilla
{
using
RtpExtList
=
std
:
:
vector
<
webrtc
:
:
RtpExtension
>
;
using
Ssrc
=
uint32_t
;
using
Ssrcs
=
std
:
:
vector
<
uint32_t
>
;
class
MediaConduitControlInterface
{
public
:
virtual
Canonical
<
bool
>
&
CanonicalReceiving
(
)
=
0
;
virtual
Canonical
<
bool
>
&
CanonicalTransmitting
(
)
=
0
;
virtual
Canonical
<
Ssrcs
>
&
CanonicalLocalSsrcs
(
)
=
0
;
virtual
Canonical
<
std
:
:
string
>
&
CanonicalLocalCname
(
)
=
0
;
virtual
Canonical
<
std
:
:
string
>
&
CanonicalMid
(
)
=
0
;
virtual
Canonical
<
Ssrc
>
&
CanonicalRemoteSsrc
(
)
=
0
;
virtual
Canonical
<
std
:
:
string
>
&
CanonicalSyncGroup
(
)
=
0
;
virtual
Canonical
<
RtpExtList
>
&
CanonicalLocalRecvRtpExtensions
(
)
=
0
;
virtual
Canonical
<
RtpExtList
>
&
CanonicalLocalSendRtpExtensions
(
)
=
0
;
virtual
Canonical
<
RefPtr
<
FrameTransformerProxy
>
>
&
CanonicalFrameTransformerProxySend
(
)
=
0
;
virtual
Canonical
<
RefPtr
<
FrameTransformerProxy
>
>
&
CanonicalFrameTransformerProxyRecv
(
)
=
0
;
}
;
class
AudioConduitControlInterface
:
public
MediaConduitControlInterface
{
public
:
virtual
Canonical
<
Maybe
<
AudioCodecConfig
>
>
&
CanonicalAudioSendCodec
(
)
=
0
;
virtual
Canonical
<
std
:
:
vector
<
AudioCodecConfig
>
>
&
CanonicalAudioRecvCodecs
(
)
=
0
;
virtual
MediaEventSource
<
DtmfEvent
>
&
OnDtmfEvent
(
)
=
0
;
}
;
class
VideoConduitControlInterface
:
public
MediaConduitControlInterface
{
public
:
virtual
Canonical
<
Ssrcs
>
&
CanonicalLocalVideoRtxSsrcs
(
)
=
0
;
virtual
Canonical
<
Ssrc
>
&
CanonicalRemoteVideoRtxSsrc
(
)
=
0
;
virtual
Canonical
<
Maybe
<
VideoCodecConfig
>
>
&
CanonicalVideoSendCodec
(
)
=
0
;
virtual
Canonical
<
Maybe
<
RtpRtcpConfig
>
>
&
CanonicalVideoSendRtpRtcpConfig
(
)
=
0
;
virtual
Canonical
<
std
:
:
vector
<
VideoCodecConfig
>
>
&
CanonicalVideoRecvCodecs
(
)
=
0
;
virtual
Canonical
<
Maybe
<
RtpRtcpConfig
>
>
&
CanonicalVideoRecvRtpRtcpConfig
(
)
=
0
;
virtual
Canonical
<
webrtc
:
:
VideoCodecMode
>
&
CanonicalVideoCodecMode
(
)
=
0
;
virtual
Canonical
<
webrtc
:
:
DegradationPreference
>
&
CanonicalVideoDegradationPreference
(
)
=
0
;
}
;
}
#
endif
