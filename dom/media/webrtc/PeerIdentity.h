#
ifndef
PeerIdentity_h
#
define
PeerIdentity_h
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsString
.
h
"
template
<
class
T
>
class
nsCOMPtr
;
class
nsIIDNService
;
namespace
mozilla
{
class
PeerIdentity
final
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
PeerIdentity
)
explicit
PeerIdentity
(
const
nsAString
&
aPeerIdentity
)
:
mPeerIdentity
(
aPeerIdentity
)
{
}
bool
Equals
(
const
PeerIdentity
&
aOther
)
const
;
bool
Equals
(
const
nsAString
&
aOtherString
)
const
;
const
nsString
&
ToString
(
)
const
{
return
mPeerIdentity
;
}
private
:
~
PeerIdentity
(
)
=
default
;
static
void
GetUser
(
const
nsAString
&
aPeerIdentity
nsAString
&
aUser
)
;
static
void
GetHost
(
const
nsAString
&
aPeerIdentity
nsAString
&
aHost
)
;
static
void
GetNormalizedHost
(
const
nsCOMPtr
<
nsIIDNService
>
&
aIdnService
const
nsAString
&
aHost
nsACString
&
aNormalizedHost
)
;
nsString
mPeerIdentity
;
}
;
inline
bool
operator
=
=
(
const
PeerIdentity
&
aOne
const
PeerIdentity
&
aTwo
)
{
return
aOne
.
Equals
(
aTwo
)
;
}
inline
bool
operator
=
=
(
const
PeerIdentity
&
aOne
const
nsAString
&
aString
)
{
return
aOne
.
Equals
(
aString
)
;
}
inline
bool
operator
!
=
(
const
PeerIdentity
&
aOne
const
PeerIdentity
&
aTwo
)
{
return
!
aOne
.
Equals
(
aTwo
)
;
}
inline
bool
operator
!
=
(
const
PeerIdentity
&
aOne
const
nsAString
&
aString
)
{
return
!
aOne
.
Equals
(
aString
)
;
}
}
#
endif
