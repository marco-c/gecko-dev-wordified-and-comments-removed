#
ifndef
DOM_MEDIA_MEDIACONTROL_FETCHIMAGEHELPER_H_
#
define
DOM_MEDIA_MEDIACONTROL_FETCHIMAGEHELPER_H_
#
include
"
imgIContainer
.
h
"
#
include
"
imgITools
.
h
"
#
include
"
mozilla
/
dom
/
MediaSessionBinding
.
h
"
#
include
"
mozilla
/
MozPromise
.
h
"
namespace
mozilla
{
namespace
dom
{
using
ImagePromise
=
MozPromise
<
nsCOMPtr
<
imgIContainer
>
bool
true
>
;
class
FetchImageHelper
final
{
public
:
explicit
FetchImageHelper
(
const
MediaImage
&
aImage
)
;
~
FetchImageHelper
(
)
;
RefPtr
<
ImagePromise
>
FetchImage
(
)
;
void
AbortFetchingImage
(
)
;
bool
IsFetchingImage
(
)
const
;
private
:
class
ImageFetchListener
final
:
public
imgIContainerCallback
{
public
:
NS_DECL_ISUPPORTS
ImageFetchListener
(
)
=
default
;
nsresult
FetchDecodedImageFromURI
(
nsIURI
*
aURI
FetchImageHelper
*
aHelper
)
;
void
Clear
(
)
;
bool
IsFetchingImage
(
)
const
;
NS_IMETHOD
OnImageReady
(
imgIContainer
*
aImage
nsresult
aStatus
)
override
;
private
:
~
ImageFetchListener
(
)
;
FetchImageHelper
*
MOZ_NON_OWNING_REF
mHelper
=
nullptr
;
nsCOMPtr
<
nsIChannel
>
mChannel
;
}
;
void
ClearListenerIfNeeded
(
)
;
void
HandleFetchSuccess
(
imgIContainer
*
aImage
)
;
void
HandleFetchFail
(
)
;
nsString
mSrc
;
MozPromiseHolder
<
ImagePromise
>
mPromise
;
RefPtr
<
ImageFetchListener
>
mListener
;
}
;
}
}
#
endif
