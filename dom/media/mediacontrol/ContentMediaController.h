#
ifndef
DOM_MEDIA_MEDIACONTROL_CONTENTMEDIACONTROLLER_H_
#
define
DOM_MEDIA_MEDIACONTROL_CONTENTMEDIACONTROLLER_H_
#
include
"
MediaControlKeysEvent
.
h
"
namespace
mozilla
{
namespace
dom
{
class
BrowsingContext
;
enum
class
ControlledMediaState
:
uint32_t
{
eStarted
ePlayed
ePaused
eStopped
}
;
enum
class
MediaAudibleState
:
bool
{
eInaudible
=
false
eAudible
=
true
}
;
class
ContentControlKeyEventReceiver
{
public
:
NS_INLINE_DECL_PURE_VIRTUAL_REFCOUNTING
static
ContentControlKeyEventReceiver
*
Get
(
BrowsingContext
*
aBC
)
;
virtual
void
HandleEvent
(
MediaControlKeysEvent
aKeyEvent
)
=
0
;
virtual
BrowsingContext
*
GetBrowsingContext
(
)
const
{
return
nullptr
;
}
}
;
class
ContentMediaAgent
{
public
:
NS_INLINE_DECL_PURE_VIRTUAL_REFCOUNTING
static
ContentMediaAgent
*
Get
(
BrowsingContext
*
aBC
)
;
virtual
void
NotifyMediaStateChanged
(
const
ContentControlKeyEventReceiver
*
aMedia
ControlledMediaState
aState
)
=
0
;
virtual
void
NotifyAudibleStateChanged
(
const
ContentControlKeyEventReceiver
*
aMedia
MediaAudibleState
aState
)
=
0
;
virtual
void
NotifyPictureInPictureModeChanged
(
const
ContentControlKeyEventReceiver
*
aMedia
bool
aEnabled
)
=
0
;
virtual
void
AddReceiver
(
ContentControlKeyEventReceiver
*
aReceiver
)
=
0
;
virtual
void
RemoveReceiver
(
ContentControlKeyEventReceiver
*
aReceiver
)
=
0
;
}
;
class
ContentMediaController
final
:
public
ContentMediaAgent
public
ContentControlKeyEventReceiver
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
ContentMediaController
override
)
explicit
ContentMediaController
(
uint64_t
aId
)
;
void
AddReceiver
(
ContentControlKeyEventReceiver
*
aListener
)
override
;
void
RemoveReceiver
(
ContentControlKeyEventReceiver
*
aListener
)
override
;
void
NotifyMediaStateChanged
(
const
ContentControlKeyEventReceiver
*
aMedia
ControlledMediaState
aState
)
override
;
void
NotifyAudibleStateChanged
(
const
ContentControlKeyEventReceiver
*
aMedia
MediaAudibleState
aState
)
override
;
void
NotifyPictureInPictureModeChanged
(
const
ContentControlKeyEventReceiver
*
aMedia
bool
aEnabled
)
override
;
void
HandleEvent
(
MediaControlKeysEvent
aEvent
)
override
;
private
:
~
ContentMediaController
(
)
=
default
;
nsTArray
<
RefPtr
<
ContentControlKeyEventReceiver
>
>
mReceivers
;
uint64_t
mTopLevelBrowsingContextId
;
}
;
}
}
#
endif
