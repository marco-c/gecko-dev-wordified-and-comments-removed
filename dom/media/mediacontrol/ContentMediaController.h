#
ifndef
DOM_MEDIA_MEDIACONTROL_CONTENTMEDIACONTROLLER_H_
#
define
DOM_MEDIA_MEDIACONTROL_CONTENTMEDIACONTROLLER_H_
#
include
"
MediaControlKeysEvent
.
h
"
#
include
"
MediaStatusManager
.
h
"
namespace
mozilla
{
namespace
dom
{
class
BrowsingContext
;
class
ContentControlKeyEventReceiver
{
public
:
NS_INLINE_DECL_PURE_VIRTUAL_REFCOUNTING
static
ContentControlKeyEventReceiver
*
Get
(
BrowsingContext
*
aBC
)
;
virtual
void
HandleEvent
(
MediaControlKeysEvent
aKeyEvent
)
=
0
;
}
;
class
ContentMediaAgent
:
public
IMediaInfoUpdater
{
public
:
static
ContentMediaAgent
*
Get
(
BrowsingContext
*
aBC
)
;
void
NotifyMediaPlaybackChanged
(
uint64_t
aBrowsingContextId
MediaPlaybackState
aState
)
override
;
void
NotifyMediaAudibleChanged
(
uint64_t
aBrowsingContextId
MediaAudibleState
aState
)
override
;
void
SetIsInPictureInPictureMode
(
uint64_t
aBrowsingContextId
bool
aIsInPictureInPictureMode
)
override
;
virtual
void
AddReceiver
(
ContentControlKeyEventReceiver
*
aReceiver
)
=
0
;
virtual
void
RemoveReceiver
(
ContentControlKeyEventReceiver
*
aReceiver
)
=
0
;
protected
:
void
SetDeclaredPlaybackState
(
uint64_t
aBrowsingContextId
MediaSessionPlaybackState
aState
)
override
{
}
;
void
NotifySessionCreated
(
uint64_t
aBrowsingContextId
)
override
{
}
;
void
NotifySessionDestroyed
(
uint64_t
aBrowsingContextId
)
override
{
}
;
void
UpdateMetadata
(
uint64_t
aBrowsingContextId
const
Maybe
<
MediaMetadataBase
>
&
aMetadata
)
override
{
}
;
}
;
class
ContentMediaController
final
:
public
ContentMediaAgent
public
ContentControlKeyEventReceiver
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
ContentMediaController
override
)
explicit
ContentMediaController
(
uint64_t
aId
)
;
void
AddReceiver
(
ContentControlKeyEventReceiver
*
aListener
)
override
;
void
RemoveReceiver
(
ContentControlKeyEventReceiver
*
aListener
)
override
;
void
HandleEvent
(
MediaControlKeysEvent
aEvent
)
override
;
private
:
~
ContentMediaController
(
)
=
default
;
nsTArray
<
RefPtr
<
ContentControlKeyEventReceiver
>
>
mReceivers
;
uint64_t
mTopLevelBrowsingContextId
;
}
;
}
}
#
endif
