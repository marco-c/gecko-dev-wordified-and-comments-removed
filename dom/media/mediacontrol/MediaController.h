#
ifndef
DOM_MEDIA_MEDIACONTROL_MEDIACONTROLLER_H_
#
define
DOM_MEDIA_MEDIACONTROL_MEDIACONTROLLER_H_
#
include
"
ContentMediaController
.
h
"
#
include
"
MediaEventSource
.
h
"
#
include
"
mozilla
/
dom
/
MediaSessionController
.
h
"
#
include
"
mozilla
/
LinkedList
.
h
"
#
include
"
nsDataHashtable
.
h
"
#
include
"
nsISupportsImpl
.
h
"
namespace
mozilla
{
namespace
dom
{
class
BrowsingContext
;
enum
class
MediaControlKeysEvent
:
uint32_t
;
class
MediaController
final
:
public
MediaSessionController
public
LinkedListElement
<
RefPtr
<
MediaController
>
>
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
MediaController
override
)
;
explicit
MediaController
(
uint64_t
aContextId
)
;
void
Focus
(
)
;
void
Play
(
)
;
void
Pause
(
)
;
void
Stop
(
)
;
void
PrevTrack
(
)
;
void
NextTrack
(
)
;
void
SeekBackward
(
)
;
void
SeekForward
(
)
;
void
SetIsInPictureInPictureMode
(
bool
aIsInPictureInPictureMode
)
;
bool
IsInPictureInPictureMode
(
)
const
;
void
Shutdown
(
)
;
bool
IsAudible
(
)
const
;
uint64_t
ControlledMediaNum
(
)
const
;
MediaSessionPlaybackState
GetState
(
)
const
;
void
SetDeclaredPlaybackState
(
uint64_t
aSessionContextId
MediaSessionPlaybackState
aState
)
override
;
void
NotifyMediaPlaybackChanged
(
MediaPlaybackState
aState
)
;
void
NotifyMediaAudibleChanged
(
MediaAudibleState
aState
)
;
private
:
~
MediaController
(
)
;
void
UpdateMediaControlKeysEventToContentMediaIfNeeded
(
MediaControlKeysEvent
aEvent
)
;
void
IncreaseControlledMediaNum
(
)
;
void
DecreaseControlledMediaNum
(
)
;
void
IncreasePlayingControlledMediaNum
(
)
;
void
DecreasePlayingControlledMediaNum
(
)
;
void
Activate
(
)
;
void
Deactivate
(
)
;
void
SetGuessedPlayState
(
MediaSessionPlaybackState
aState
)
;
void
UpdateActualPlaybackState
(
)
;
MediaAudibleState
mAudibleState
=
MediaAudibleState
:
:
eInaudible
;
bool
mIsRegisteredToService
=
false
;
int64_t
mControlledMediaNum
=
0
;
int64_t
mPlayingControlledMediaNum
=
0
;
bool
mShutdown
=
false
;
bool
mIsInPictureInPictureMode
=
false
;
MediaSessionPlaybackState
mGuessedPlaybackState
=
MediaSessionPlaybackState
:
:
None
;
MediaSessionPlaybackState
mActualPlaybackState
=
MediaSessionPlaybackState
:
:
None
;
}
;
}
}
#
endif
