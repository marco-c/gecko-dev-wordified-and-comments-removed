#
include
"
FlushableTaskQueue
.
h
"
namespace
mozilla
{
void
FlushableTaskQueue
:
:
Flush
(
)
{
MonitorAutoLock
mon
(
mQueueMonitor
)
;
AutoSetFlushing
autoFlush
(
this
)
;
FlushLocked
(
)
;
AwaitIdleLocked
(
)
;
}
nsresult
FlushableTaskQueue
:
:
FlushAndDispatch
(
already_AddRefed
<
nsIRunnable
>
aRunnable
)
{
MonitorAutoLock
mon
(
mQueueMonitor
)
;
AutoSetFlushing
autoFlush
(
this
)
;
FlushLocked
(
)
;
nsCOMPtr
<
nsIRunnable
>
r
=
dont_AddRef
(
aRunnable
.
take
(
)
)
;
nsresult
rv
=
DispatchLocked
(
r
.
forget
(
)
IgnoreFlushing
AssertDispatchSuccess
)
;
NS_ENSURE_SUCCESS
(
rv
rv
)
;
AwaitIdleLocked
(
)
;
return
NS_OK
;
}
void
FlushableTaskQueue
:
:
FlushLocked
(
)
{
MOZ_ASSERT_IF
(
AbstractThread
:
:
GetCurrent
(
)
!
AbstractThread
:
:
GetCurrent
(
)
-
>
TailDispatcher
(
)
.
HasTasksFor
(
this
)
)
;
mQueueMonitor
.
AssertCurrentThreadOwns
(
)
;
MOZ_ASSERT
(
mIsFlushing
)
;
while
(
!
mTasks
.
empty
(
)
)
{
mTasks
.
pop
(
)
;
}
}
}
