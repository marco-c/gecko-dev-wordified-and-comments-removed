#
ifndef
MOZILLA_RESOURCEQUEUE_H_
#
define
MOZILLA_RESOURCEQUEUE_H_
#
include
"
nsDeque
.
h
"
#
include
"
MediaData
.
h
"
namespace
mozilla
{
class
ErrorResult
;
struct
ResourceItem
{
ResourceItem
(
MediaByteBuffer
*
aData
uint64_t
aOffset
)
;
size_t
SizeOfIncludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
;
RefPtr
<
MediaByteBuffer
>
mData
;
uint64_t
mOffset
;
}
;
class
ResourceQueue
:
private
nsDeque
{
public
:
ResourceQueue
(
)
;
uint64_t
GetOffset
(
)
;
uint64_t
GetLength
(
)
;
void
CopyData
(
uint64_t
aOffset
uint32_t
aCount
char
*
aDest
)
;
void
AppendItem
(
MediaByteBuffer
*
aData
)
;
uint32_t
Evict
(
uint64_t
aOffset
uint32_t
aSizeToEvict
ErrorResult
&
aRv
)
;
uint32_t
EvictBefore
(
uint64_t
aOffset
ErrorResult
&
aRv
)
;
uint32_t
EvictAll
(
)
;
size_t
SizeOfExcludingThis
(
MallocSizeOf
aMallocSizeOf
)
const
;
#
if
defined
(
DEBUG
)
void
Dump
(
const
char
*
aPath
)
;
#
endif
const
uint8_t
*
GetContiguousAccess
(
int64_t
aOffset
size_t
aSize
)
;
private
:
ResourceItem
*
ResourceAt
(
uint32_t
aIndex
)
const
;
uint32_t
GetAtOffset
(
uint64_t
aOffset
uint32_t
*
aResourceOffset
)
const
;
ResourceItem
*
PopFront
(
)
;
uint64_t
mLogicalLength
;
uint64_t
mOffset
;
}
;
}
#
endif
