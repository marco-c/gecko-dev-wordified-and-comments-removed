#
ifndef
MOZILLA_KEY_VALUE_STORAGE_H
#
define
MOZILLA_KEY_VALUE_STORAGE_H
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
nsIKeyValue
.
h
"
namespace
mozilla
{
class
KeyValueStorage
final
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
KeyValueStorage
)
RefPtr
<
GenericPromise
>
Put
(
const
nsACString
&
aName
const
nsACString
&
aKey
int32_t
aValue
)
;
typedef
MozPromise
<
int32_t
nsresult
true
>
GetPromise
;
RefPtr
<
GetPromise
>
Get
(
const
nsACString
&
aName
const
nsACString
&
aKey
)
;
RefPtr
<
GenericPromise
>
Clear
(
const
nsACString
&
aName
)
;
private
:
RefPtr
<
GenericPromise
>
Init
(
)
;
RefPtr
<
GenericPromise
>
Put
(
const
nsACString
&
aKey
int32_t
aValue
)
;
RefPtr
<
GetPromise
>
Get
(
const
nsACString
&
aKey
)
;
RefPtr
<
GenericPromise
>
Clear
(
)
;
~
KeyValueStorage
(
)
=
default
;
RefPtr
<
nsIKeyValueDatabase
>
mDatabase
;
nsCString
mDatabaseName
;
}
;
}
#
endif
