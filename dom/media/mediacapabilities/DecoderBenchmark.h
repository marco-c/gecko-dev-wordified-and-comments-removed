#
ifndef
MOZILLA_DECODER_BENCHMARK_H
#
define
MOZILLA_DECODER_BENCHMARK_H
#
include
"
FrameStatistics
.
h
"
#
include
"
mozilla
/
BenchmarkStorageChild
.
h
"
#
include
"
mozilla
/
KeyValueStorage
.
h
"
namespace
mozilla
{
typedef
KeyValueStorage
:
:
GetPromise
BenchmarkScorePromise
;
struct
DecoderBenchmarkInfo
final
{
const
nsCString
mContentType
;
const
int32_t
mWidth
;
const
int32_t
mHeight
;
const
int32_t
mFrameRate
;
const
uint32_t
mBitDepth
;
}
;
class
DecoderBenchmark
final
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
DecoderBenchmark
)
public
:
void
Store
(
const
DecoderBenchmarkInfo
&
aBenchInfo
RefPtr
<
FrameStatistics
>
aStats
)
;
static
RefPtr
<
BenchmarkScorePromise
>
Get
(
const
DecoderBenchmarkInfo
&
aBenchInfo
)
;
static
void
CheckVersion
(
const
nsACString
&
aDecoderName
)
;
private
:
void
StoreScore
(
const
nsACString
&
aDecoderName
const
nsACString
&
aKey
RefPtr
<
FrameStatistics
>
aStats
)
;
RefPtr
<
BenchmarkScorePromise
>
GetScore
(
const
nsACString
&
aDecoderName
const
nsACString
&
aKey
)
;
void
Put
(
const
nsACString
&
aDecoderName
const
nsACString
&
aKey
int32_t
aValue
)
;
RefPtr
<
BenchmarkScorePromise
>
Get
(
const
nsACString
&
aDecoderName
const
nsACString
&
aKey
)
;
~
DecoderBenchmark
(
)
=
default
;
uint64_t
mLastParsedFrames
=
0
;
uint64_t
mLastDroppedFrames
=
0
;
}
;
}
#
endif
