#
ifndef
TRACING_H
#
define
TRACING_H
#
include
<
cstdint
>
#
include
"
AsyncLogger
.
h
"
#
include
<
mozilla
/
Attributes
.
h
>
#
if
defined
(
_WIN32
)
#
include
<
process
.
h
>
#
define
getpid
(
)
_getpid
(
)
#
else
#
include
<
unistd
.
h
>
#
endif
#
if
defined
(
_MSC_VER
)
#
define
FUNCTION_SIGNATURE
__FUNCSIG__
#
elif
defined
(
__GNUC__
)
#
define
FUNCTION_SIGNATURE
__PRETTY_FUNCTION__
#
endif
#
ifdef
TRACING
#
define
TRACE_AUDIO_CALLBACK
(
)
\
AutoTracer
trace
(
gMSGTraceLogger
FUNCTION_SIGNATURE
getpid
(
)
0
)
;
#
define
TRACE_AUDIO_CALLBACK_BUDGET
(
aFrames
aSampleRate
)
\
AutoTracer
budget
(
gMSGTraceLogger
"
Real
-
time
budget
"
getpid
(
)
1
\
AutoTracer
:
:
EventType
:
:
BUDGET
aFrames
aSampleRate
)
;
#
define
TRACE
(
)
\
AutoTracer
trace
(
gMSGTraceLogger
FUNCTION_SIGNATURE
getpid
(
)
\
std
:
:
hash
<
std
:
:
thread
:
:
id
>
{
}
(
std
:
:
this_thread
:
:
get_id
(
)
)
)
;
#
define
TRACE_COMMENT
(
aComment
)
\
AutoTracer
trace
(
gMSGTraceLogger
FUNCTION_SIGNATURE
getpid
(
)
\
std
:
:
hash
<
std
:
:
thread
:
:
id
>
{
}
(
std
:
:
this_thread
:
:
get_id
(
)
)
\
AutoTracer
:
:
EventType
:
:
DURATION
\
aComment
)
;
#
else
#
define
TRACE_AUDIO_CALLBACK
(
)
#
define
TRACE_AUDIO_CALLBACK_BUDGET
(
aFrames
aSampleRate
)
#
define
TRACE
(
)
#
define
TRACE_COMMENT
(
aComment
)
#
endif
class
MOZ_RAII
AutoTracer
{
public
:
enum
class
EventType
{
DURATION
BUDGET
}
;
AutoTracer
(
mozilla
:
:
AsyncLogger
&
aLogger
const
char
*
aLocation
uint64_t
aPID
uint64_t
aTID
EventType
aEventType
=
EventType
:
:
DURATION
const
char
*
aComment
=
nullptr
)
;
AutoTracer
(
mozilla
:
:
AsyncLogger
&
aLogger
const
char
*
aLocation
uint64_t
aPID
uint64_t
aTID
EventType
aEventType
uint64_t
aSampleRate
uint64_t
aFrames
)
;
~
AutoTracer
(
)
;
private
:
uint64_t
NowInUs
(
)
;
enum
class
TracingPhase
{
BEGIN
END
COMPLETE
}
;
const
char
TRACING_PHASE_STRINGS
[
3
]
=
{
'
B
'
'
E
'
'
X
'
}
;
void
PrintEvent
(
const
char
*
aName
const
char
*
aCategory
const
char
*
aComment
TracingPhase
aPhase
uint64_t
aTime
uint64_t
aPID
uint64_t
aThread
)
;
void
PrintBudget
(
const
char
*
aName
const
char
*
aCategory
const
char
*
aComment
uint64_t
aDuration
uint64_t
aPID
uint64_t
aThread
uint64_t
aFrames
)
;
mozilla
:
:
AsyncLogger
&
mLogger
;
const
char
*
mLocation
;
const
char
*
mComment
;
const
EventType
mEventType
;
const
uint64_t
mPID
;
const
uint64_t
mTID
;
}
;
#
if
defined
(
_WIN32
)
#
undef
getpid
#
endif
#
endif
