#
include
"
MediaShutdownManager
.
h
"
#
include
"
nsContentUtils
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
MediaDecoder
.
h
"
#
include
"
mozilla
/
Logging
.
h
"
namespace
mozilla
{
extern
LazyLogModule
gMediaDecoderLog
;
#
define
DECODER_LOG
(
type
msg
)
MOZ_LOG
(
gMediaDecoderLog
type
msg
)
NS_IMPL_ISUPPORTS
(
MediaShutdownManager
nsIObserver
)
MediaShutdownManager
:
:
MediaShutdownManager
(
)
:
mIsObservingShutdown
(
false
)
mIsDoingXPCOMShutDown
(
false
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_COUNT_CTOR
(
MediaShutdownManager
)
;
}
MediaShutdownManager
:
:
~
MediaShutdownManager
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_COUNT_DTOR
(
MediaShutdownManager
)
;
}
StaticRefPtr
<
MediaShutdownManager
>
MediaShutdownManager
:
:
sInstance
;
MediaShutdownManager
&
MediaShutdownManager
:
:
Instance
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
if
(
!
sInstance
)
{
sInstance
=
new
MediaShutdownManager
(
)
;
}
return
*
sInstance
;
}
void
MediaShutdownManager
:
:
EnsureCorrectShutdownObserverState
(
)
{
bool
needShutdownObserver
=
mDecoders
.
Count
(
)
>
0
;
if
(
needShutdownObserver
!
=
mIsObservingShutdown
)
{
mIsObservingShutdown
=
needShutdownObserver
;
if
(
mIsObservingShutdown
)
{
nsContentUtils
:
:
RegisterShutdownObserver
(
this
)
;
}
else
{
nsContentUtils
:
:
UnregisterShutdownObserver
(
this
)
;
sInstance
=
nullptr
;
}
}
}
void
MediaShutdownManager
:
:
Register
(
MediaDecoder
*
aDecoder
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_DIAGNOSTIC_ASSERT
(
!
mIsDoingXPCOMShutDown
)
;
MOZ_ASSERT
(
!
mDecoders
.
Contains
(
aDecoder
)
)
;
mDecoders
.
PutEntry
(
aDecoder
)
;
MOZ_ASSERT
(
mDecoders
.
Contains
(
aDecoder
)
)
;
MOZ_ASSERT
(
mDecoders
.
Count
(
)
>
0
)
;
EnsureCorrectShutdownObserverState
(
)
;
}
void
MediaShutdownManager
:
:
Unregister
(
MediaDecoder
*
aDecoder
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
mDecoders
.
Contains
(
aDecoder
)
)
;
mDecoders
.
RemoveEntry
(
aDecoder
)
;
EnsureCorrectShutdownObserverState
(
)
;
}
NS_IMETHODIMP
MediaShutdownManager
:
:
Observe
(
nsISupports
*
aSubjet
const
char
*
aTopic
const
char16_t
*
someData
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
if
(
strcmp
(
aTopic
NS_XPCOM_SHUTDOWN_OBSERVER_ID
)
=
=
0
)
{
Shutdown
(
)
;
}
return
NS_OK
;
}
void
MediaShutdownManager
:
:
Shutdown
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
sInstance
)
;
DECODER_LOG
(
LogLevel
:
:
Debug
(
"
MediaShutdownManager
:
:
Shutdown
(
)
start
.
.
.
"
)
)
;
mIsDoingXPCOMShutDown
=
true
;
DebugOnly
<
uint32_t
>
oldCount
=
mDecoders
.
Count
(
)
;
MOZ_ASSERT
(
oldCount
>
0
)
;
for
(
auto
iter
=
mDecoders
.
Iter
(
)
;
!
iter
.
Done
(
)
;
iter
.
Next
(
)
)
{
iter
.
Get
(
)
-
>
GetKey
(
)
-
>
Shutdown
(
)
;
MOZ_ASSERT
(
mDecoders
.
Count
(
)
=
=
oldCount
)
;
}
while
(
sInstance
)
{
NS_ProcessNextEvent
(
NS_GetCurrentThread
(
)
true
)
;
}
DECODER_LOG
(
LogLevel
:
:
Debug
(
"
MediaShutdownManager
:
:
Shutdown
(
)
end
.
"
)
)
;
}
}
