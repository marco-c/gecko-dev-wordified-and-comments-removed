#
include
"
mozilla
/
Logging
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
nsContentUtils
.
h
"
#
include
"
MediaDecoder
.
h
"
#
include
"
MediaShutdownManager
.
h
"
namespace
mozilla
{
extern
LazyLogModule
gMediaDecoderLog
;
#
define
DECODER_LOG
(
type
msg
)
MOZ_LOG
(
gMediaDecoderLog
type
msg
)
NS_IMPL_ISUPPORTS
(
MediaShutdownManager
nsIAsyncShutdownBlocker
)
MediaShutdownManager
:
:
MediaShutdownManager
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
}
MediaShutdownManager
:
:
~
MediaShutdownManager
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
}
StaticRefPtr
<
MediaShutdownManager
>
MediaShutdownManager
:
:
sInstance
;
MediaShutdownManager
&
MediaShutdownManager
:
:
Instance
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_DIAGNOSTIC_ASSERT
(
sInstance
)
;
return
*
sInstance
;
}
static
nsCOMPtr
<
nsIAsyncShutdownClient
>
GetShutdownBarrier
(
)
{
nsCOMPtr
<
nsIAsyncShutdownService
>
svc
=
services
:
:
GetAsyncShutdown
(
)
;
MOZ_RELEASE_ASSERT
(
svc
)
;
nsCOMPtr
<
nsIAsyncShutdownClient
>
barrier
;
nsresult
rv
=
svc
-
>
GetProfileBeforeChange
(
getter_AddRefs
(
barrier
)
)
;
if
(
!
barrier
)
{
rv
=
svc
-
>
GetXpcomWillShutdown
(
getter_AddRefs
(
barrier
)
)
;
}
MOZ_RELEASE_ASSERT
(
NS_SUCCEEDED
(
rv
)
)
;
MOZ_RELEASE_ASSERT
(
barrier
)
;
return
barrier
.
forget
(
)
;
}
void
MediaShutdownManager
:
:
InitStatics
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
static
bool
sInitDone
=
false
;
if
(
sInitDone
)
{
return
;
}
sInitDone
=
true
;
sInstance
=
new
MediaShutdownManager
(
)
;
nsresult
rv
=
GetShutdownBarrier
(
)
-
>
AddBlocker
(
sInstance
NS_LITERAL_STRING
(
__FILE__
)
__LINE__
NS_LITERAL_STRING
(
"
MediaShutdownManager
shutdown
"
)
)
;
if
(
NS_FAILED
(
rv
)
)
{
MOZ_CRASH_UNSAFE_PRINTF
(
"
Failed
to
add
shutdown
blocker
!
rv
=
%
x
"
uint32_t
(
rv
)
)
;
}
}
void
MediaShutdownManager
:
:
RemoveBlocker
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
mIsDoingXPCOMShutDown
)
;
MOZ_ASSERT
(
mDecoders
.
Count
(
)
=
=
0
)
;
GetShutdownBarrier
(
)
-
>
RemoveBlocker
(
this
)
;
sInstance
=
nullptr
;
DECODER_LOG
(
LogLevel
:
:
Debug
(
"
MediaShutdownManager
:
:
BlockShutdown
(
)
end
.
"
)
)
;
}
void
MediaShutdownManager
:
:
Register
(
MediaDecoder
*
aDecoder
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_RELEASE_ASSERT
(
!
mIsDoingXPCOMShutDown
)
;
MOZ_ASSERT
(
!
mDecoders
.
Contains
(
aDecoder
)
)
;
mDecoders
.
PutEntry
(
aDecoder
)
;
MOZ_ASSERT
(
mDecoders
.
Contains
(
aDecoder
)
)
;
MOZ_ASSERT
(
mDecoders
.
Count
(
)
>
0
)
;
}
void
MediaShutdownManager
:
:
Unregister
(
MediaDecoder
*
aDecoder
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
mDecoders
.
Contains
(
aDecoder
)
)
;
mDecoders
.
RemoveEntry
(
aDecoder
)
;
if
(
mIsDoingXPCOMShutDown
&
&
mDecoders
.
Count
(
)
=
=
0
)
{
RemoveBlocker
(
)
;
}
}
NS_IMETHODIMP
MediaShutdownManager
:
:
GetName
(
nsAString
&
aName
)
{
aName
=
NS_LITERAL_STRING
(
"
MediaShutdownManager
:
shutdown
"
)
;
return
NS_OK
;
}
NS_IMETHODIMP
MediaShutdownManager
:
:
GetState
(
nsIPropertyBag
*
*
)
{
return
NS_OK
;
}
NS_IMETHODIMP
MediaShutdownManager
:
:
BlockShutdown
(
nsIAsyncShutdownClient
*
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
sInstance
)
;
DECODER_LOG
(
LogLevel
:
:
Debug
(
"
MediaShutdownManager
:
:
BlockShutdown
(
)
start
.
.
.
"
)
)
;
mIsDoingXPCOMShutDown
=
true
;
auto
oldCount
=
mDecoders
.
Count
(
)
;
if
(
oldCount
=
=
0
)
{
RemoveBlocker
(
)
;
return
NS_OK
;
}
for
(
auto
iter
=
mDecoders
.
Iter
(
)
;
!
iter
.
Done
(
)
;
iter
.
Next
(
)
)
{
iter
.
Get
(
)
-
>
GetKey
(
)
-
>
NotifyXPCOMShutdown
(
)
;
MOZ_ASSERT
(
mDecoders
.
Count
(
)
=
=
oldCount
)
;
}
return
NS_OK
;
}
}
