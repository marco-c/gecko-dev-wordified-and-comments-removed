interface
nsITreeSelection
;
interface
mixin
TreeView
{
readonly
attribute
long
rowCount
;
[
SetterThrows
]
attribute
nsITreeSelection
?
selection
;
[
Throws
]
DOMString
getRowProperties
(
long
row
)
;
[
Throws
]
DOMString
getCellProperties
(
long
row
TreeColumn
column
)
;
DOMString
getColumnProperties
(
TreeColumn
column
)
;
[
Throws
]
boolean
isContainer
(
long
row
)
;
[
Throws
]
boolean
isContainerOpen
(
long
row
)
;
[
Throws
]
boolean
isContainerEmpty
(
long
row
)
;
[
Throws
]
boolean
isSeparator
(
long
row
)
;
boolean
isSorted
(
)
;
const
short
DROP_BEFORE
=
-
1
;
const
short
DROP_ON
=
0
;
const
short
DROP_AFTER
=
1
;
[
Throws
]
boolean
canDrop
(
long
row
long
orientation
DataTransfer
?
dataTransfer
)
;
[
Throws
]
undefined
drop
(
long
row
long
orientation
DataTransfer
?
dataTransfer
)
;
[
Throws
]
long
getParentIndex
(
long
row
)
;
[
Throws
]
boolean
hasNextSibling
(
long
row
long
afterIndex
)
;
[
Throws
]
long
getLevel
(
long
row
)
;
[
Throws
]
DOMString
getImageSrc
(
long
row
TreeColumn
column
)
;
[
Throws
]
DOMString
getCellValue
(
long
row
TreeColumn
column
)
;
[
Throws
]
DOMString
getCellText
(
long
row
TreeColumn
column
)
;
[
Throws
]
undefined
setTree
(
XULTreeElement
?
tree
)
;
[
Throws
]
undefined
toggleOpenState
(
long
row
)
;
[
Throws
]
undefined
cycleHeader
(
TreeColumn
column
)
;
undefined
selectionChanged
(
)
;
undefined
cycleCell
(
long
row
TreeColumn
column
)
;
[
Throws
]
boolean
isEditable
(
long
row
TreeColumn
column
)
;
[
Throws
]
undefined
setCellValue
(
long
row
TreeColumn
column
DOMString
value
)
;
[
Throws
]
undefined
setCellText
(
long
row
TreeColumn
column
DOMString
value
)
;
}
;
