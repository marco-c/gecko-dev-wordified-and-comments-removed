#
ifndef
mozilla_dom_power_PowerManagerService_h
#
define
mozilla_dom_power_PowerManagerService_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsHashKeys
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsIDOMWakeLockListener
.
h
"
#
include
"
nsIPowerManagerService
.
h
"
#
include
"
mozilla
/
HalWakeLockInformation
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
mozilla
/
dom
/
WakeLock
.
h
"
namespace
mozilla
{
namespace
dom
{
class
ContentParent
;
namespace
power
{
class
PowerManagerService
:
public
nsIPowerManagerService
public
hal
:
:
WakeLockObserver
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIPOWERMANAGERSERVICE
PowerManagerService
(
)
=
default
;
static
already_AddRefed
<
PowerManagerService
>
GetInstance
(
)
;
void
Init
(
)
;
void
Notify
(
const
hal
:
:
WakeLockInformation
&
aWakeLockInfo
)
override
;
already_AddRefed
<
WakeLock
>
NewWakeLock
(
const
nsAString
&
aTopic
nsPIDOMWindowInner
*
aWindow
mozilla
:
:
ErrorResult
&
aRv
)
;
private
:
~
PowerManagerService
(
)
;
void
ComputeWakeLockState
(
const
hal
:
:
WakeLockInformation
&
aWakeLockInfo
nsAString
&
aState
)
;
static
StaticRefPtr
<
PowerManagerService
>
sSingleton
;
nsTArray
<
nsCOMPtr
<
nsIDOMMozWakeLockListener
>
>
mWakeLockListeners
;
}
;
}
}
}
#
endif
