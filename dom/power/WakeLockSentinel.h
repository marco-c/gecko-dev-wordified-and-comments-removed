#
ifndef
DOM_WAKELOCKSENTINEL_H_
#
define
DOM_WAKELOCKSENTINEL_H_
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
#
include
"
mozilla
/
dom
/
WakeLockBinding
.
h
"
namespace
mozilla
:
:
dom
{
class
Promise
;
}
namespace
mozilla
:
:
dom
{
class
WakeLockSentinel
final
:
public
DOMEventTargetHelper
{
public
:
WakeLockSentinel
(
nsIGlobalObject
*
aOwnerWindow
WakeLockType
aType
)
:
DOMEventTargetHelper
(
aOwnerWindow
)
mType
(
aType
)
{
}
protected
:
~
WakeLockSentinel
(
)
{
MOZ_DIAGNOSTIC_ASSERT
(
mReleased
)
;
MOZ_DIAGNOSTIC_ASSERT
(
!
mHoldsActualLock
)
;
}
public
:
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
bool
Released
(
)
const
;
WakeLockType
Type
(
)
const
{
return
mType
;
}
MOZ_CAN_RUN_SCRIPT
already_AddRefed
<
Promise
>
ReleaseLock
(
ErrorResult
&
aRv
)
;
MOZ_CAN_RUN_SCRIPT
void
NotifyLockReleased
(
)
;
IMPL_EVENT_HANDLER
(
release
)
;
void
AcquireActualLock
(
)
;
private
:
WakeLockType
mType
;
bool
mReleased
=
false
;
bool
mHoldsActualLock
=
false
;
TimeStamp
mAcquireTime
;
}
;
}
#
endif
