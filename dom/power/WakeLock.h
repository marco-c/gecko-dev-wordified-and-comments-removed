#
ifndef
mozilla_dom_power_WakeLock_h
#
define
mozilla_dom_power_WakeLock_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIDOMEventListener
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsWeakReference
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
class
nsPIDOMWindowInner
;
namespace
mozilla
{
namespace
dom
{
class
ContentParent
;
class
WakeLock
final
:
public
nsIDOMEventListener
public
nsIObserver
public
nsSupportsWeakReference
{
public
:
NS_DECL_NSIDOMEVENTLISTENER
NS_DECL_NSIOBSERVER
NS_DECL_ISUPPORTS
WakeLock
(
)
;
nsresult
Init
(
const
nsAString
&
aTopic
nsPIDOMWindowInner
*
aWindow
)
;
nsresult
Init
(
const
nsAString
&
aTopic
ContentParent
*
aContentParent
)
;
nsPIDOMWindowInner
*
GetParentObject
(
)
const
;
void
GetTopic
(
nsAString
&
aTopic
)
;
void
Unlock
(
ErrorResult
&
aRv
)
;
private
:
virtual
~
WakeLock
(
)
;
void
DoUnlock
(
)
;
void
DoLock
(
)
;
void
AttachEventListener
(
)
;
void
DetachEventListener
(
)
;
bool
mLocked
;
bool
mHidden
;
uint64_t
mContentParentID
;
nsString
mTopic
;
nsWeakPtr
mWindow
;
}
;
}
}
#
endif
