#
ifndef
mozilla_dom_XRInputSourceArray_h_
#
define
mozilla_dom_XRInputSourceArray_h_
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
#
include
"
mozilla
/
dom
/
WebXRBinding
.
h
"
#
include
"
gfxVR
.
h
"
namespace
mozilla
{
namespace
gfx
{
struct
VRControllerState
;
}
namespace
dom
{
class
XRInputSource
;
class
XRInputSourceArray
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
XRInputSourceArray
)
explicit
XRInputSourceArray
(
nsISupports
*
aParent
)
;
nsISupports
*
GetParentObject
(
)
const
{
return
mParent
;
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
XRInputSource
*
IndexedGetter
(
uint32_t
aIndex
bool
&
aFound
)
;
uint32_t
Length
(
)
;
void
Setup
(
XRSession
*
aSession
RefPtr
<
gfx
:
:
VRDisplayClient
>
aDisplayClient
)
;
void
Update
(
XRSession
*
aSession
)
;
void
Clear
(
)
;
protected
:
virtual
~
XRInputSourceArray
(
)
=
default
;
nsCOMPtr
<
nsISupports
>
mParent
;
nsTArray
<
RefPtr
<
XRInputSource
>
>
mInputSources
;
}
;
}
}
#
endif
