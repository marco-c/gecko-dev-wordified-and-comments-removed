#
include
"
mozilla
/
dom
/
XRViewerPose
.
h
"
#
include
"
mozilla
/
dom
/
XRView
.
h
"
namespace
mozilla
{
namespace
dom
{
NS_IMPL_CYCLE_COLLECTION_CLASS
(
XRViewerPose
)
NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN_INHERITED
(
XRViewerPose
XRPose
)
NS_IMPL_CYCLE_COLLECTION_TRAVERSE
(
mViews
)
NS_IMPL_CYCLE_COLLECTION_TRAVERSE_END
NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN_INHERITED
(
XRViewerPose
XRPose
)
NS_IMPL_CYCLE_COLLECTION_UNLINK
(
mViews
)
NS_IMPL_CYCLE_COLLECTION_UNLINK_END
NS_IMPL_ISUPPORTS_CYCLE_COLLECTION_INHERITED_0
(
XRViewerPose
XRPose
)
XRViewerPose
:
:
XRViewerPose
(
nsISupports
*
aParent
XRRigidTransform
*
aTransform
bool
aEmulatedPosition
const
nsTArray
<
RefPtr
<
XRView
>
>
&
aViews
)
:
XRPose
(
aParent
aTransform
aEmulatedPosition
)
mViews
(
aViews
.
Clone
(
)
)
{
}
JSObject
*
XRViewerPose
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
XRViewerPose_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
RefPtr
<
XRView
>
&
XRViewerPose
:
:
GetEye
(
int32_t
aIndex
)
{
return
mViews
.
ElementAt
(
aIndex
)
;
}
void
XRViewerPose
:
:
GetViews
(
nsTArray
<
RefPtr
<
XRView
>
>
&
aResult
)
{
aResult
=
mViews
.
Clone
(
)
;
}
}
}
