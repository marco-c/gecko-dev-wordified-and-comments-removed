#
ifndef
mozilla_dom_XRInputSource_h_
#
define
mozilla_dom_XRInputSource_h_
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
#
include
"
mozilla
/
dom
/
WebXRBinding
.
h
"
#
include
"
gfxVR
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Gamepad
;
class
XRSpace
;
enum
class
XRHandedness
:
uint8_t
;
enum
class
XRTargetRayMode
:
uint8_t
;
class
XRInputSource
final
:
public
nsWrapperCache
{
public
:
NS_INLINE_DECL_CYCLE_COLLECTING_NATIVE_REFCOUNTING
(
XRInputSource
)
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_NATIVE_CLASS
(
XRInputSource
)
explicit
XRInputSource
(
nsISupports
*
aParent
)
;
nsISupports
*
GetParentObject
(
)
const
{
return
mParent
;
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
XRHandedness
Handedness
(
)
;
XRTargetRayMode
TargetRayMode
(
)
;
XRSpace
*
TargetRaySpace
(
)
;
XRSpace
*
GetGripSpace
(
)
;
void
GetProfiles
(
nsTArray
<
nsString
>
&
aResult
)
;
Gamepad
*
GetGamepad
(
)
;
protected
:
virtual
~
XRInputSource
(
)
=
default
;
nsCOMPtr
<
nsISupports
>
mParent
;
}
;
}
}
#
endif
