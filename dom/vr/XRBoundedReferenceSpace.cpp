#
include
"
mozilla
/
dom
/
XRBoundedReferenceSpace
.
h
"
#
include
"
mozilla
/
dom
/
XRRigidTransform
.
h
"
#
include
"
mozilla
/
dom
/
DOMPoint
.
h
"
namespace
mozilla
{
namespace
dom
{
XRBoundedReferenceSpace
:
:
XRBoundedReferenceSpace
(
nsIGlobalObject
*
aParent
XRSession
*
aSession
XRNativeOrigin
*
aNativeOrigin
)
:
XRReferenceSpace
(
aParent
aSession
aNativeOrigin
XRReferenceSpaceType
:
:
Bounded_floor
)
{
}
JSObject
*
XRBoundedReferenceSpace
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
XRBoundedReferenceSpace_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
void
XRBoundedReferenceSpace
:
:
GetBoundsGeometry
(
nsTArray
<
RefPtr
<
DOMPointReadOnly
>
>
&
result
)
{
}
already_AddRefed
<
XRReferenceSpace
>
XRBoundedReferenceSpace
:
:
GetOffsetReferenceSpace
(
const
XRRigidTransform
&
aOriginOffset
)
{
RefPtr
<
XRBoundedReferenceSpace
>
offsetReferenceSpace
=
new
XRBoundedReferenceSpace
(
GetParentObject
(
)
mSession
mNativeOrigin
)
;
gfx
:
:
QuaternionDouble
otherOrientation
=
aOriginOffset
.
RawOrientation
(
)
;
offsetReferenceSpace
-
>
mOriginOffsetOrientation
=
mOriginOffsetOrientation
*
otherOrientation
;
offsetReferenceSpace
-
>
mOriginOffsetPosition
=
otherOrientation
.
RotatePoint
(
mOriginOffsetPosition
)
+
aOriginOffset
.
RawPosition
(
)
;
return
offsetReferenceSpace
.
forget
(
)
;
}
}
}
