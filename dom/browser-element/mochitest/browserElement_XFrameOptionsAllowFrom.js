"
use
strict
"
;
SimpleTest
.
waitForExplicitFinish
(
)
;
browserElementTestHelpers
.
setEnabledPref
(
true
)
;
browserElementTestHelpers
.
addPermission
(
)
;
var
initialScreenshotArrayBuffer
=
null
;
function
arrayBuffersEqual
(
a
b
)
{
var
x
=
new
Int8Array
(
a
)
;
var
y
=
new
Int8Array
(
b
)
;
if
(
x
.
length
!
=
y
.
length
)
{
return
false
;
}
for
(
var
i
=
0
;
i
<
x
.
length
;
i
+
+
)
{
if
(
x
[
i
]
!
=
y
[
i
]
)
{
return
false
;
}
}
return
true
;
}
function
runTest
(
)
{
var
count
=
0
;
var
iframe
=
document
.
createElement
(
'
iframe
'
)
;
iframe
.
setAttribute
(
'
mozbrowser
'
'
true
'
)
;
iframe
.
height
=
'
1000px
'
;
var
step1
stepfinish
;
iframe
.
addEventListener
(
'
mozbrowsershowmodalprompt
'
function
(
e
)
{
switch
(
e
.
detail
.
message
)
{
case
'
step
1
'
:
step1
=
SpecialPowers
.
snapshotWindow
(
iframe
.
contentWindow
)
;
break
;
case
'
step
2
'
:
ok
(
false
'
cross
origin
page
loaded
'
)
;
break
;
case
'
finish
'
:
stepfinish
=
SpecialPowers
.
snapshotWindow
(
iframe
.
contentWindow
)
;
ok
(
step1
.
toDataURL
(
)
=
=
stepfinish
.
toDataURL
(
)
"
Screenshots
should
be
identical
"
)
;
SimpleTest
.
finish
(
)
;
}
}
)
;
document
.
body
.
appendChild
(
iframe
)
;
iframe
.
src
=
'
http
:
/
/
example
.
com
/
tests
/
dom
/
browser
-
element
/
mochitest
/
file_browserElement_XFrameOptionsAllowFrom
.
html
'
;
}
addEventListener
(
'
testready
'
runTest
)
;
