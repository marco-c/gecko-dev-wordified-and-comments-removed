#
ifndef
mozilla_dom_CountQueuingStrategy_h
#
define
mozilla_dom_CountQueuingStrategy_h
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
dom
/
QueuingStrategyBinding
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
nsIGlobalObject
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Function
;
}
}
namespace
mozilla
{
namespace
dom
{
class
CountQueuingStrategy
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
CountQueuingStrategy
)
public
:
explicit
CountQueuingStrategy
(
nsISupports
*
aGlobal
double
aHighWaterMark
)
:
mGlobal
(
do_QueryInterface
(
aGlobal
)
)
mHighWaterMark
(
aHighWaterMark
)
{
}
protected
:
~
CountQueuingStrategy
(
)
=
default
;
nsCOMPtr
<
nsIGlobalObject
>
mGlobal
;
public
:
nsIGlobalObject
*
GetParentObject
(
)
const
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
CountQueuingStrategy
>
Constructor
(
const
GlobalObject
&
aGlobal
const
QueuingStrategyInit
&
aInit
)
;
double
HighWaterMark
(
)
const
{
return
mHighWaterMark
;
}
already_AddRefed
<
Function
>
GetSize
(
ErrorResult
&
aRv
)
;
private
:
double
mHighWaterMark
=
0
.
0
;
}
;
}
}
#
endif
