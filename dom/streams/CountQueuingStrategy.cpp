#
include
"
mozilla
/
dom
/
CountQueuingStrategy
.
h
"
#
include
"
mozilla
/
dom
/
QueuingStrategyBinding
.
h
"
#
include
"
nsCOMPtr
.
h
"
namespace
mozilla
{
namespace
dom
{
NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE
(
CountQueuingStrategy
mGlobal
)
NS_IMPL_CYCLE_COLLECTING_ADDREF
(
CountQueuingStrategy
)
NS_IMPL_CYCLE_COLLECTING_RELEASE
(
CountQueuingStrategy
)
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
CountQueuingStrategy
)
NS_WRAPPERCACHE_INTERFACE_MAP_ENTRY
NS_INTERFACE_MAP_ENTRY
(
nsISupports
)
NS_INTERFACE_MAP_END
already_AddRefed
<
CountQueuingStrategy
>
CountQueuingStrategy
:
:
Constructor
(
const
GlobalObject
&
aGlobal
const
QueuingStrategyInit
&
aInit
)
{
RefPtr
<
CountQueuingStrategy
>
strategy
=
new
CountQueuingStrategy
(
aGlobal
.
GetAsSupports
(
)
aInit
.
mHighWaterMark
)
;
return
strategy
.
forget
(
)
;
}
nsIGlobalObject
*
CountQueuingStrategy
:
:
GetParentObject
(
)
const
{
return
mGlobal
;
}
JSObject
*
CountQueuingStrategy
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
CountQueuingStrategy_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
}
}
