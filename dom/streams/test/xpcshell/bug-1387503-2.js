let
fnFinished
=
false
;
let
g
;
add_task
(
async
function
test
(
)
{
g
=
newGlobal
(
)
;
g
.
parent
=
this
;
g
.
hit
=
false
;
g
.
info
=
info
;
g
.
eval
(
var
dbg
=
new
Debugger
(
parent
)
;
dbg
.
onDebuggerStatement
=
(
_frame
exc
)
=
>
{
hit
=
true
;
info
(
"
hit
"
)
;
return
null
}
;
)
;
async
function
fn
(
)
{
await
1
;
try
{
new
ReadableStream
(
{
start
(
controller
)
{
controller
.
enqueue
(
"
FIRST
POST
"
)
;
}
}
{
size
(
)
{
debugger
;
}
}
)
;
}
finally
{
fnFinished
=
true
;
}
}
fn
(
)
.
then
(
(
)
=
>
info
(
"
Resolved
"
)
)
.
catch
(
(
)
=
>
info
(
"
Rejected
"
)
)
;
}
)
;
add_task
(
(
)
=
>
{
equal
(
g
.
hit
true
"
We
hit
G
"
)
;
equal
(
fnFinished
false
"
We
didn
'
t
hit
the
finally
block
"
)
;
}
)
;
