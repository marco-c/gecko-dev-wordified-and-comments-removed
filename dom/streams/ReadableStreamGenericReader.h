#
ifndef
mozilla_dom_ReadableStreamGenericReader_h
#
define
mozilla_dom_ReadableStreamGenericReader_h
#
include
"
mozilla
/
dom
/
Promise
.
h
"
#
include
"
mozilla
/
dom
/
ReadableStream
.
h
"
namespace
mozilla
{
namespace
dom
{
class
ReadableStreamBYOBReader
;
class
ReadableStreamGenericReader
:
public
nsISupports
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
ReadableStreamGenericReader
)
explicit
ReadableStreamGenericReader
(
nsCOMPtr
<
nsIGlobalObject
>
aGlobal
)
:
mGlobal
(
std
:
:
move
(
aGlobal
)
)
{
}
nsIGlobalObject
*
GetParentObject
(
)
const
{
return
mGlobal
;
}
virtual
bool
IsDefault
(
)
=
0
;
virtual
bool
IsBYOB
(
)
=
0
;
virtual
ReadableStreamDefaultReader
*
AsDefault
(
)
=
0
;
virtual
ReadableStreamBYOBReader
*
AsBYOB
(
)
=
0
;
Promise
*
ClosedPromise
(
)
{
return
mClosedPromise
;
}
void
SetClosedPromise
(
already_AddRefed
<
Promise
>
&
&
aClosedPromise
)
{
mClosedPromise
=
aClosedPromise
;
}
ReadableStream
*
GetStream
(
)
{
return
mStream
;
}
void
SetStream
(
already_AddRefed
<
ReadableStream
>
&
&
aStream
)
{
mStream
=
aStream
;
}
void
SetStream
(
ReadableStream
*
aStream
)
{
RefPtr
<
ReadableStream
>
stream
(
aStream
)
;
SetStream
(
stream
.
forget
(
)
)
;
}
protected
:
virtual
~
ReadableStreamGenericReader
(
)
=
default
;
nsCOMPtr
<
nsIGlobalObject
>
mGlobal
;
RefPtr
<
Promise
>
mClosedPromise
;
RefPtr
<
ReadableStream
>
mStream
;
}
;
}
}
#
endif
