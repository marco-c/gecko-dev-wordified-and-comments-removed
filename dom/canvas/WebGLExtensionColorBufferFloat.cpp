#
include
"
WebGLExtensions
.
h
"
#
include
"
GLContext
.
h
"
#
include
"
mozilla
/
dom
/
WebGLRenderingContextBinding
.
h
"
#
include
"
WebGLContext
.
h
"
#
include
"
WebGLFormats
.
h
"
#
ifdef
FOO
#
error
FOO
is
already
defined
!
We
use
FOO
(
)
macros
to
keep
things
succinct
in
this
file
.
#
endif
namespace
mozilla
{
WebGLExtensionColorBufferFloat
:
:
WebGLExtensionColorBufferFloat
(
WebGLContext
*
webgl
)
:
WebGLExtensionBase
(
webgl
)
{
MOZ_ASSERT
(
IsSupported
(
webgl
)
"
Don
'
t
construct
extension
if
unsupported
.
"
)
;
auto
&
fua
=
webgl
-
>
mFormatUsage
;
auto
fnUpdateUsage
=
[
&
fua
]
(
GLenum
sizedFormat
webgl
:
:
EffectiveFormat
effFormat
)
{
auto
usage
=
fua
-
>
EditUsage
(
effFormat
)
;
usage
-
>
SetRenderable
(
)
;
fua
-
>
AllowRBFormat
(
sizedFormat
usage
)
;
}
;
#
define
FOO
(
x
)
fnUpdateUsage
(
LOCAL_GL_
#
#
x
webgl
:
:
EffectiveFormat
:
:
x
)
FOO
(
RGBA32F
)
;
#
undef
FOO
#
ifdef
DEBUG
const
auto
gl
=
webgl
-
>
gl
;
float
was
[
4
]
=
{
}
;
gl
-
>
fGetFloatv
(
LOCAL_GL_COLOR_CLEAR_VALUE
was
)
;
const
float
test
[
4
]
=
{
-
1
.
0
0
2
.
0
255
.
0
}
;
gl
-
>
fClearColor
(
test
[
0
]
test
[
1
]
test
[
2
]
test
[
3
]
)
;
float
now
[
4
]
=
{
}
;
gl
-
>
fGetFloatv
(
LOCAL_GL_COLOR_CLEAR_VALUE
now
)
;
const
bool
ok
=
now
[
0
]
=
=
test
[
0
]
&
&
now
[
1
]
=
=
test
[
1
]
&
&
now
[
2
]
=
=
test
[
2
]
&
&
now
[
3
]
=
=
test
[
3
]
;
if
(
!
ok
)
{
printf_stderr
(
"
COLOR_CLEAR_VALUE
:
now
{
%
f
%
f
%
f
%
f
}
!
=
test
{
%
f
%
f
%
f
%
f
}
\
n
"
test
[
0
]
test
[
1
]
test
[
2
]
test
[
3
]
now
[
0
]
now
[
1
]
now
[
2
]
now
[
3
]
)
;
MOZ_ASSERT
(
false
)
;
}
gl
-
>
fClearColor
(
was
[
0
]
was
[
1
]
was
[
2
]
was
[
3
]
)
;
#
endif
}
WebGLExtensionColorBufferFloat
:
:
~
WebGLExtensionColorBufferFloat
(
)
{
}
bool
WebGLExtensionColorBufferFloat
:
:
IsSupported
(
const
WebGLContext
*
webgl
)
{
const
auto
&
gl
=
webgl
-
>
gl
;
if
(
gl
-
>
IsANGLE
(
)
)
{
return
true
;
}
return
gl
-
>
IsSupported
(
gl
:
:
GLFeature
:
:
renderbuffer_color_float
)
&
&
gl
-
>
IsSupported
(
gl
:
:
GLFeature
:
:
frag_color_float
)
;
}
IMPL_WEBGL_EXTENSION_GOOP
(
WebGLExtensionColorBufferFloat
WEBGL_color_buffer_float
)
}
