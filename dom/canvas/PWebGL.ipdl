include
protocol
PCompositorBridge
;
include
protocol
PLayerTransaction
;
using
mozilla
:
:
layers
:
:
CompositableHandle
from
"
mozilla
/
layers
/
LayersTypes
.
h
"
;
using
mozilla
:
:
webgl
:
:
ContextLossReason
from
"
mozilla
/
dom
/
WebGLIpdl
.
h
"
;
using
std
:
:
string
from
"
ipc
/
IPCMessageUtils
.
h
"
;
using
mozilla
:
:
webgl
:
:
InitContextDesc
from
"
mozilla
/
dom
/
WebGLIpdl
.
h
"
;
using
mozilla
:
:
webgl
:
:
InitContextResult
from
"
mozilla
/
dom
/
WebGLIpdl
.
h
"
;
using
mozilla
:
:
HostWebGLCommandSinkP
from
"
mozilla
/
dom
/
WebGLCrossProcessCommandQueue
.
h
"
;
using
mozilla
:
:
HostWebGLCommandSinkI
from
"
mozilla
/
dom
/
WebGLCrossProcessCommandQueue
.
h
"
;
using
mozilla
:
:
dom
:
:
IpdlQueueBuffer
from
"
mozilla
/
dom
/
IpdlQueue
.
h
"
;
using
mozilla
:
:
dom
:
:
IpdlQueueBuffers
from
"
mozilla
/
dom
/
IpdlQueue
.
h
"
;
namespace
mozilla
{
namespace
dom
{
sync
refcounted
protocol
PWebGL
{
manager
PCompositorBridge
;
parent
:
sync
Initialize
(
InitContextDesc
desc
UniquePtr
<
HostWebGLCommandSinkP
>
sinkP
UniquePtr
<
HostWebGLCommandSinkI
>
sinkI
)
returns
(
InitContextResult
res
)
;
async
__delete__
(
)
;
sync
UpdateCompositableHandle
(
PLayerTransaction
aLayerTrans
CompositableHandle
aHandle
)
;
sync
ExchangeIpdlQueueData
(
IpdlQueueBuffer
aMsg
)
returns
(
IpdlQueueBuffers
aResponse
)
;
child
:
async
JsWarning
(
string
text
)
;
async
OnContextLoss
(
ContextLossReason
aReason
)
;
both
:
async
TransmitIpdlQueueData
(
IpdlQueueBuffer
aData
)
;
}
;
}
}
