#
ifndef
MOZILLA_PARAMTRAITS_TIEDFIELDS_H
#
define
MOZILLA_PARAMTRAITS_TIEDFIELDS_H
#
include
"
TiedFields
.
h
"
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
mozilla
/
ipc
/
IPDLParamTraits
.
h
"
namespace
IPC
{
template
<
class
T
>
struct
ParamTraits_TiedFields
{
static_assert
(
mozilla
:
:
AssertTiedFieldsAreExhaustive
<
T
>
(
)
)
;
static
void
Write
(
MessageWriter
*
const
writer
const
T
&
in
)
{
const
auto
&
fields
=
mozilla
:
:
TiedFields
(
in
)
;
mozilla
:
:
MapTuple
(
fields
[
&
]
(
const
auto
&
field
)
{
WriteParam
(
writer
field
)
;
return
true
;
}
)
;
}
static
bool
Read
(
MessageReader
*
const
reader
T
*
const
out
)
{
const
auto
&
fields
=
mozilla
:
:
TiedFields
(
*
out
)
;
bool
ok
=
true
;
mozilla
:
:
MapTuple
(
fields
[
&
]
(
auto
&
field
)
{
if
(
ok
)
{
ok
&
=
ReadParam
(
reader
&
field
)
;
}
return
true
;
}
)
;
return
ok
;
}
}
;
template
<
class
U
size_t
N
>
struct
ParamTraits
<
mozilla
:
:
PaddingField
<
U
N
>
>
final
:
public
ParamTraits_TiedFields
<
mozilla
:
:
PaddingField
<
U
N
>
>
{
}
;
}
#
endif
