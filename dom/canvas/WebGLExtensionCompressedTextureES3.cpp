#
include
"
WebGLExtensions
.
h
"
#
include
"
GLContext
.
h
"
#
include
"
mozilla
/
dom
/
WebGLRenderingContextBinding
.
h
"
#
include
"
WebGLContext
.
h
"
#
include
"
WebGLFormats
.
h
"
namespace
mozilla
{
WebGLExtensionCompressedTextureES3
:
:
WebGLExtensionCompressedTextureES3
(
WebGLContext
*
webgl
)
:
WebGLExtensionBase
(
webgl
)
{
RefPtr
<
WebGLContext
>
webgl_
=
webgl
;
const
auto
fnAdd
=
[
&
webgl_
]
(
GLenum
sizedFormat
webgl
:
:
EffectiveFormat
effFormat
)
{
auto
&
fua
=
webgl_
-
>
mFormatUsage
;
auto
usage
=
fua
-
>
EditUsage
(
effFormat
)
;
usage
-
>
isFilterable
=
true
;
fua
-
>
AllowSizedTexFormat
(
sizedFormat
usage
)
;
webgl_
-
>
mCompressedTextureFormats
.
AppendElement
(
sizedFormat
)
;
}
;
#
define
FOO
(
x
)
LOCAL_GL_
#
#
x
webgl
:
:
EffectiveFormat
:
:
x
fnAdd
(
FOO
(
COMPRESSED_R11_EAC
)
)
;
fnAdd
(
FOO
(
COMPRESSED_SIGNED_R11_EAC
)
)
;
fnAdd
(
FOO
(
COMPRESSED_RG11_EAC
)
)
;
fnAdd
(
FOO
(
COMPRESSED_SIGNED_RG11_EAC
)
)
;
fnAdd
(
FOO
(
COMPRESSED_RGB8_ETC2
)
)
;
fnAdd
(
FOO
(
COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
)
)
;
fnAdd
(
FOO
(
COMPRESSED_RGBA8_ETC2_EAC
)
)
;
fnAdd
(
FOO
(
COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
)
)
;
fnAdd
(
FOO
(
COMPRESSED_SRGB8_ETC2
)
)
;
fnAdd
(
FOO
(
COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
)
)
;
#
undef
FOO
}
WebGLExtensionCompressedTextureES3
:
:
~
WebGLExtensionCompressedTextureES3
(
)
{
}
IMPL_WEBGL_EXTENSION_GOOP
(
WebGLExtensionCompressedTextureES3
WEBGL_compressed_texture_etc
)
}
