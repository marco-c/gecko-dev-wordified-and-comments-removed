#
ifndef
WEBGL_SHADER_PRECISION_FORMAT_H_
#
define
WEBGL_SHADER_PRECISION_FORMAT_H_
#
include
"
GLTypes
.
h
"
#
include
"
nsISupports
.
h
"
namespace
mozilla
{
namespace
ipc
{
template
<
typename
T
>
struct
PcqParamTraits
;
}
;
class
WebGLShaderPrecisionFormat
final
{
public
:
WebGLShaderPrecisionFormat
(
GLint
rangeMin
GLint
rangeMax
GLint
precision
)
:
mRangeMin
(
rangeMin
)
mRangeMax
(
rangeMax
)
mPrecision
(
precision
)
{
}
GLint
RangeMin
(
)
const
{
return
mRangeMin
;
}
GLint
RangeMax
(
)
const
{
return
mRangeMax
;
}
GLint
Precision
(
)
const
{
return
mPrecision
;
}
protected
:
friend
struct
mozilla
:
:
ipc
:
:
PcqParamTraits
<
WebGLShaderPrecisionFormat
>
;
GLint
mRangeMin
;
GLint
mRangeMax
;
GLint
mPrecision
;
}
;
class
ClientWebGLShaderPrecisionFormat
final
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
ClientWebGLShaderPrecisionFormat
)
bool
WrapObject
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
givenProto
JS
:
:
MutableHandle
<
JSObject
*
>
reflector
)
;
ClientWebGLShaderPrecisionFormat
(
GLint
rangeMin
GLint
rangeMax
GLint
precision
)
:
mSPF
(
rangeMin
rangeMax
precision
)
{
}
ClientWebGLShaderPrecisionFormat
(
const
WebGLShaderPrecisionFormat
&
aOther
)
:
mSPF
(
aOther
.
RangeMin
(
)
aOther
.
RangeMax
(
)
aOther
.
Precision
(
)
)
{
}
GLint
RangeMin
(
)
const
{
return
mSPF
.
RangeMin
(
)
;
}
GLint
RangeMax
(
)
const
{
return
mSPF
.
RangeMax
(
)
;
}
GLint
Precision
(
)
const
{
return
mSPF
.
Precision
(
)
;
}
WebGLShaderPrecisionFormat
&
GetObject
(
)
{
return
mSPF
;
}
protected
:
~
ClientWebGLShaderPrecisionFormat
(
)
{
}
WebGLShaderPrecisionFormat
mSPF
;
}
;
}
#
endif
