#
ifndef
WEBGL_RENDERBUFFER_H_
#
define
WEBGL_RENDERBUFFER_H_
#
include
"
mozilla
/
LinkedList
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
WebGLFramebufferAttachable
.
h
"
#
include
"
WebGLObjectModel
.
h
"
#
include
"
WebGLStrongTypes
.
h
"
namespace
mozilla
{
namespace
webgl
{
struct
FormatUsageInfo
;
}
class
WebGLRenderbuffer
final
:
public
nsWrapperCache
public
WebGLRefCountedObject
<
WebGLRenderbuffer
>
public
LinkedListElement
<
WebGLRenderbuffer
>
public
WebGLRectangleObject
public
WebGLContextBoundObject
public
WebGLFramebufferAttachable
{
public
:
explicit
WebGLRenderbuffer
(
WebGLContext
*
webgl
)
;
void
Delete
(
)
;
bool
HasUninitializedImageData
(
)
const
{
MOZ_ASSERT
(
mImageDataStatus
!
=
WebGLImageDataStatus
:
:
NoImageData
)
;
return
mImageDataStatus
=
=
WebGLImageDataStatus
:
:
UninitializedImageData
;
}
bool
IsDefined
(
)
const
{
if
(
!
mFormat
)
{
MOZ_ASSERT
(
!
mWidth
&
&
!
mHeight
)
;
return
false
;
}
return
true
;
}
GLsizei
Samples
(
)
const
{
return
mSamples
;
}
GLuint
PrimaryGLName
(
)
const
{
return
mPrimaryRB
;
}
const
webgl
:
:
FormatUsageInfo
*
Format
(
)
const
{
return
mFormat
;
}
int64_t
MemoryUsage
(
)
const
;
WebGLContext
*
GetParentObject
(
)
const
{
return
mContext
;
}
void
BindRenderbuffer
(
)
const
;
void
RenderbufferStorage
(
GLsizei
samples
const
webgl
:
:
FormatUsageInfo
*
format
GLsizei
width
GLsizei
height
)
;
void
FramebufferRenderbuffer
(
GLenum
attachment
)
const
;
GLint
GetRenderbufferParameter
(
RBTarget
target
RBParam
pname
)
const
;
virtual
JSObject
*
WrapObject
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
givenProto
)
override
;
NS_INLINE_DECL_CYCLE_COLLECTING_NATIVE_REFCOUNTING
(
WebGLRenderbuffer
)
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_NATIVE_CLASS
(
WebGLRenderbuffer
)
protected
:
~
WebGLRenderbuffer
(
)
{
DeleteOnce
(
)
;
}
GLuint
mPrimaryRB
;
GLuint
mSecondaryRB
;
const
webgl
:
:
FormatUsageInfo
*
mFormat
;
WebGLImageDataStatus
mImageDataStatus
;
GLsizei
mSamples
;
bool
mIsUsingSecondary
;
#
ifdef
ANDROID
bool
mIsRB
;
#
endif
friend
class
WebGLContext
;
friend
class
WebGLFramebuffer
;
friend
class
WebGLFBAttachPoint
;
}
;
}
#
endif
