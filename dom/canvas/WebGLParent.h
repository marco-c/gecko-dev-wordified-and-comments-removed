#
ifndef
WEBGLPARENT_H_
#
define
WEBGLPARENT_H_
#
include
"
mozilla
/
GfxMessageUtils
.
h
"
#
include
"
mozilla
/
dom
/
PWebGLParent
.
h
"
#
include
"
mozilla
/
dom
/
WebGLCrossProcessCommandQueue
.
h
"
#
include
"
mozilla
/
dom
/
WebGLErrorQueue
.
h
"
#
include
"
mozilla
/
WeakPtr
.
h
"
namespace
mozilla
{
class
HostWebGLContext
;
namespace
layers
{
class
SharedSurfaceTextureClient
;
}
namespace
dom
{
class
WebGLParent
:
public
PWebGLParent
public
SupportsWeakPtr
<
WebGLParent
>
{
public
:
MOZ_DECLARE_WEAKREFERENCE_TYPENAME
(
WebGLParent
)
static
WebGLParent
*
Create
(
WebGLVersion
aVersion
UniquePtr
<
mozilla
:
:
HostWebGLCommandSink
>
&
&
aCommandSink
UniquePtr
<
mozilla
:
:
HostWebGLErrorSource
>
&
&
aErrorSource
)
;
already_AddRefed
<
layers
:
:
SharedSurfaceTextureClient
>
GetVRFrame
(
)
;
protected
:
friend
PWebGLParent
;
WebGLParent
(
UniquePtr
<
HostWebGLContext
>
&
&
aHost
)
;
bool
BeginCommandQueueDrain
(
)
;
static
bool
MaybeRunCommandQueue
(
const
WeakPtr
<
WebGLParent
>
&
weakWebGLParent
)
;
bool
RunCommandQueue
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvUpdateCompositableHandle
(
layers
:
:
PLayerTransactionParent
*
aLayerTransaction
const
CompositableHandle
&
aHandle
)
;
mozilla
:
:
ipc
:
:
IPCResult
Recv__delete__
(
)
override
;
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
UniquePtr
<
HostWebGLContext
>
mHost
;
RefPtr
<
Runnable
>
mRunCommandsRunnable
;
}
;
}
}
#
endif
