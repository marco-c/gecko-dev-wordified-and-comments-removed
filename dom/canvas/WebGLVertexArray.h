#
ifndef
WEBGL_VERTEX_ARRAY_H_
#
define
WEBGL_VERTEX_ARRAY_H_
#
include
<
vector
>
#
include
"
CacheInvalidator
.
h
"
#
include
"
WebGLObjectModel
.
h
"
#
include
"
WebGLStrongTypes
.
h
"
#
include
"
WebGLVertexAttribData
.
h
"
namespace
mozilla
{
class
WebGLVertexArrayFake
;
namespace
webgl
{
struct
LinkedProgramInfo
;
}
class
WebGLVertexArray
:
public
WebGLContextBoundObject
public
CacheInvalidator
{
MOZ_DECLARE_REFCOUNTED_VIRTUAL_TYPENAME
(
WebGLVertexArray
override
)
public
:
static
WebGLVertexArray
*
Create
(
WebGLContext
*
webgl
)
;
protected
:
explicit
WebGLVertexArray
(
WebGLContext
*
webgl
)
;
public
:
virtual
void
BindVertexArray
(
)
=
0
;
bool
mHasBeenBound
=
false
;
protected
:
std
:
:
vector
<
WebGLVertexAttribData
>
mAttribs
;
RefPtr
<
WebGLBuffer
>
mElementArrayBuffer
;
friend
class
ScopedDrawHelper
;
friend
class
WebGLContext
;
friend
class
WebGLVertexArrayFake
;
friend
class
WebGL2Context
;
friend
struct
webgl
:
:
LinkedProgramInfo
;
}
;
}
#
endif
