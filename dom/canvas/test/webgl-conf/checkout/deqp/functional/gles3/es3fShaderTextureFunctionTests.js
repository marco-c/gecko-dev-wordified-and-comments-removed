'
use
strict
'
;
goog
.
provide
(
'
functional
.
gles3
.
es3fShaderTextureFunctionTests
'
)
;
goog
.
require
(
'
framework
.
delibs
.
debase
.
deMath
'
)
;
goog
.
require
(
'
framework
.
opengl
.
gluTextureUtil
'
)
;
goog
.
require
(
'
framework
.
opengl
.
gluTexture
'
)
;
goog
.
require
(
'
framework
.
opengl
.
gluShaderProgram
'
)
;
goog
.
require
(
'
framework
.
opengl
.
gluShaderUtil
'
)
;
goog
.
require
(
'
framework
.
common
.
tcuMatrix
'
)
;
goog
.
require
(
'
framework
.
common
.
tcuSurface
'
)
;
goog
.
require
(
'
framework
.
common
.
tcuTestCase
'
)
;
goog
.
require
(
'
framework
.
common
.
tcuTexture
'
)
;
goog
.
require
(
'
framework
.
common
.
tcuTextureUtil
'
)
;
goog
.
require
(
'
modules
.
shared
.
glsShaderRenderCase
'
)
;
goog
.
scope
(
function
(
)
{
var
es3fShaderTextureFunctionTests
=
functional
.
gles3
.
es3fShaderTextureFunctionTests
;
var
deMath
=
framework
.
delibs
.
debase
.
deMath
;
var
tcuMatrix
=
framework
.
common
.
tcuMatrix
;
var
tcuTestCase
=
framework
.
common
.
tcuTestCase
;
var
tcuSurface
=
framework
.
common
.
tcuSurface
;
var
tcuTexture
=
framework
.
common
.
tcuTexture
;
var
tcuTextureUtil
=
framework
.
common
.
tcuTextureUtil
;
var
gluTextureUtil
=
framework
.
opengl
.
gluTextureUtil
;
var
gluTexture
=
framework
.
opengl
.
gluTexture
;
var
gluShaderProgram
=
framework
.
opengl
.
gluShaderProgram
;
var
gluShaderUtil
=
framework
.
opengl
.
gluShaderUtil
;
var
glsShaderRenderCase
=
modules
.
shared
.
glsShaderRenderCase
;
es3fShaderTextureFunctionTests
.
TexFunction
=
{
TEXTURE
:
0
TEXTUREPROJ
:
1
TEXTUREPROJ3
:
2
TEXTURELOD
:
3
TEXTUREPROJLOD
:
4
TEXTUREPROJLOD3
:
5
TEXTUREGRAD
:
6
TEXTUREPROJGRAD
:
7
TEXTUREPROJGRAD3
:
8
TEXELFETCH
:
9
}
;
es3fShaderTextureFunctionTests
.
functionHasAutoLod
=
function
(
shaderType
function_
)
{
return
shaderType
=
=
=
gluShaderProgram
.
shaderType
.
FRAGMENT
&
&
(
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
)
;
}
;
es3fShaderTextureFunctionTests
.
functionHasProj
=
function
(
function_
)
{
return
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
;
}
;
es3fShaderTextureFunctionTests
.
functionHasGrad
=
function
(
function_
)
{
return
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
;
}
;
es3fShaderTextureFunctionTests
.
functionHasLod
=
function
(
function_
)
{
return
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
;
}
;
es3fShaderTextureFunctionTests
.
TextureLookupSpec
=
function
(
func
minCoord
maxCoord
useBias
minLodBias
maxLodBias
minDX
maxDX
minDY
maxDY
useOffset
offset
)
{
this
.
func
=
func
;
this
.
minCoord
=
minCoord
;
this
.
maxCoord
=
maxCoord
;
this
.
useBias
=
useBias
;
this
.
minLodBias
=
minLodBias
;
this
.
maxLodBias
=
maxLodBias
;
this
.
minDX
=
minDX
;
this
.
maxDX
=
maxDX
;
this
.
minDY
=
minDY
;
this
.
maxDY
=
maxDY
;
this
.
useOffset
=
useOffset
;
this
.
offset
=
offset
;
}
;
es3fShaderTextureFunctionTests
.
TextureType
=
{
TEXTURETYPE_2D
:
0
TEXTURETYPE_CUBE_MAP
:
1
TEXTURETYPE_2D_ARRAY
:
2
TEXTURETYPE_3D
:
3
}
;
es3fShaderTextureFunctionTests
.
TextureSpec
=
function
(
type
format
width
height
depth
numLevels
sampler
)
{
this
.
type
=
type
;
this
.
format
=
format
;
this
.
width
=
width
;
this
.
height
=
height
;
this
.
depth
=
depth
;
this
.
numLevels
=
numLevels
;
this
.
sampler
=
sampler
;
}
;
es3fShaderTextureFunctionTests
.
TexLookupParams
=
function
(
)
{
this
.
lod
=
0
;
this
.
offset
=
[
0
0
0
]
;
this
.
scale
=
[
1
.
0
1
.
0
1
.
0
1
.
0
]
;
this
.
bias
=
[
0
.
0
0
.
0
0
.
0
0
.
0
]
;
}
;
es3fShaderTextureFunctionTests
.
LodMode
=
{
EXACT
:
0
MIN_BOUND
:
1
MAX_BOUND
:
2
}
;
es3fShaderTextureFunctionTests
.
DEFAULT_LOD_MODE
=
es3fShaderTextureFunctionTests
.
LodMode
.
EXACT
;
es3fShaderTextureFunctionTests
.
computeLodFromDerivates_UV
=
function
(
dudx
dvdx
dudy
dvdy
)
{
var
mode
=
es3fShaderTextureFunctionTests
.
DEFAULT_LOD_MODE
;
var
p
;
switch
(
mode
)
{
case
es3fShaderTextureFunctionTests
.
LodMode
.
EXACT
:
p
=
Math
.
max
(
Math
.
sqrt
(
dudx
*
dudx
+
dvdx
*
dvdx
)
Math
.
sqrt
(
dudy
*
dudy
+
dvdy
*
dvdy
)
)
;
break
;
case
es3fShaderTextureFunctionTests
.
LodMode
.
MIN_BOUND
:
case
es3fShaderTextureFunctionTests
.
LodMode
.
MAX_BOUND
:
var
mu
=
Math
.
max
(
Math
.
abs
(
dudx
)
Math
.
abs
(
dudy
)
)
;
var
mv
=
Math
.
max
(
Math
.
abs
(
dvdx
)
Math
.
abs
(
dvdy
)
)
;
p
=
mode
=
=
=
es3fShaderTextureFunctionTests
.
LodMode
.
MIN_BOUND
?
Math
.
max
(
mu
mv
)
:
mu
+
mv
;
break
;
default
:
throw
new
Error
(
'
LOD_MODE
not
supported
.
'
)
;
}
return
Math
.
log2
(
p
)
;
}
;
es3fShaderTextureFunctionTests
.
computeLodFromDerivates_UVW
=
function
(
dudx
dvdx
dwdx
dudy
dvdy
dwdy
)
{
var
mode
=
es3fShaderTextureFunctionTests
.
DEFAULT_LOD_MODE
;
var
p
;
switch
(
mode
)
{
case
es3fShaderTextureFunctionTests
.
LodMode
.
EXACT
:
p
=
Math
.
max
(
Math
.
sqrt
(
dudx
*
dudx
+
dvdx
*
dvdx
+
dwdx
*
dwdx
)
Math
.
sqrt
(
dudy
*
dudy
+
dvdy
*
dvdy
+
dwdy
*
dwdy
)
)
;
break
;
case
es3fShaderTextureFunctionTests
.
LodMode
.
MIN_BOUND
:
case
es3fShaderTextureFunctionTests
.
LodMode
.
MAX_BOUND
:
var
mu
=
Math
.
max
(
Math
.
abs
(
dudx
)
Math
.
abs
(
dudy
)
)
;
var
mv
=
Math
.
max
(
Math
.
abs
(
dvdx
)
Math
.
abs
(
dvdy
)
)
;
var
mw
=
Math
.
max
(
Math
.
abs
(
dwdx
)
Math
.
abs
(
dwdy
)
)
;
p
=
mode
=
=
=
es3fShaderTextureFunctionTests
.
LodMode
.
MIN_BOUND
?
Math
.
max
(
mu
mv
mw
)
:
(
mu
+
mv
+
mw
)
;
break
;
default
:
throw
new
Error
(
'
LOD_MODE
not
supported
.
'
)
;
}
return
Math
.
log2
(
p
)
;
}
;
es3fShaderTextureFunctionTests
.
computeLodFromDerivates
=
function
(
dudx
dvdx
dwdxOrdudy
dudyOrdvdy
dvdy
dwdy
)
{
if
(
arguments
.
length
=
=
=
4
)
return
es3fShaderTextureFunctionTests
.
computeLodFromDerivates_UV
(
dudx
dvdx
dwdxOrdudy
dudyOrdvdy
)
;
else
return
es3fShaderTextureFunctionTests
.
computeLodFromDerivates_UVW
(
dudx
dvdx
dwdxOrdudy
dudyOrdvdy
(
dvdy
)
(
dwdy
)
)
;
}
;
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
=
function
(
c
)
{
var
w
=
c
.
textures
[
0
]
.
tex2D
.
getWidth
(
)
;
var
h
=
c
.
textures
[
0
]
.
tex2D
.
getHeight
(
)
;
return
es3fShaderTextureFunctionTests
.
computeLodFromDerivates
(
c
.
in_
[
1
]
[
0
]
*
w
c
.
in_
[
1
]
[
1
]
*
h
c
.
in_
[
2
]
[
0
]
*
w
c
.
in_
[
2
]
[
1
]
*
h
)
;
}
;
es3fShaderTextureFunctionTests
.
computeLodFromGrad2DArray
=
function
(
c
)
{
var
w
=
c
.
textures
[
0
]
.
tex2DArray
.
getWidth
(
)
;
var
h
=
c
.
textures
[
0
]
.
tex2DArray
.
getHeight
(
)
;
return
es3fShaderTextureFunctionTests
.
computeLodFromDerivates
(
c
.
in_
[
1
]
[
0
]
*
w
c
.
in_
[
1
]
[
1
]
*
h
c
.
in_
[
2
]
[
0
]
*
w
c
.
in_
[
2
]
[
1
]
*
h
)
;
}
;
es3fShaderTextureFunctionTests
.
computeLodFromGrad3D
=
function
(
c
)
{
var
w
=
c
.
textures
[
0
]
.
tex3D
.
getWidth
(
)
;
var
h
=
c
.
textures
[
0
]
.
tex3D
.
getHeight
(
)
;
var
d
=
c
.
textures
[
0
]
.
tex3D
.
getDepth
(
)
;
return
es3fShaderTextureFunctionTests
.
computeLodFromDerivates
(
c
.
in_
[
1
]
[
0
]
*
w
c
.
in_
[
1
]
[
1
]
*
h
c
.
in_
[
1
]
[
2
]
*
d
c
.
in_
[
2
]
[
0
]
*
w
c
.
in_
[
2
]
[
1
]
*
h
c
.
in_
[
2
]
[
2
]
*
d
)
;
}
;
es3fShaderTextureFunctionTests
.
computeLodFromGradCube
=
function
(
c
)
{
var
m
=
Math
.
abs
(
c
.
in_
[
0
]
[
2
]
)
;
var
d
=
c
.
textures
[
0
]
.
texCube
.
getSize
(
)
;
var
s
=
d
/
(
2
.
0
*
m
)
;
var
t
=
d
/
(
2
.
0
*
m
)
;
return
es3fShaderTextureFunctionTests
.
computeLodFromDerivates
(
c
.
in_
[
1
]
[
0
]
*
s
c
.
in_
[
1
]
[
1
]
*
t
c
.
in_
[
2
]
[
0
]
*
s
c
.
in_
[
2
]
[
1
]
*
t
)
;
}
;
es3fShaderTextureFunctionTests
.
TexEvalFunc
;
es3fShaderTextureFunctionTests
.
texture2D
=
function
(
c
s
t
lod
)
{
return
c
.
textures
[
0
]
.
tex2D
.
getView
(
)
.
sample
(
c
.
textures
[
0
]
.
sampler
[
s
t
]
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
textureCube
=
function
(
c
s
t
r
lod
)
{
return
c
.
textures
[
0
]
.
texCube
.
getView
(
)
.
sample
(
c
.
textures
[
0
]
.
sampler
[
s
t
r
]
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
texture2DArray
=
function
(
c
s
t
r
lod
)
{
return
c
.
textures
[
0
]
.
tex2DArray
.
getView
(
)
.
sample
(
c
.
textures
[
0
]
.
sampler
[
s
t
r
]
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
texture3D
=
function
(
c
s
t
r
lod
)
{
return
c
.
textures
[
0
]
.
tex3D
.
getView
(
)
.
sample
(
c
.
textures
[
0
]
.
sampler
[
s
t
r
]
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
texture2DShadow
=
function
(
c
ref
s
t
lod
)
{
return
c
.
textures
[
0
]
.
tex2D
.
getView
(
)
.
sampleCompare
(
c
.
textures
[
0
]
.
sampler
ref
[
s
t
]
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
textureCubeShadow
=
function
(
c
ref
s
t
r
lod
)
{
return
c
.
textures
[
0
]
.
texCube
.
getView
(
)
.
sampleCompare
(
c
.
textures
[
0
]
.
sampler
ref
[
s
t
r
]
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
texture2DArrayShadow
=
function
(
c
ref
s
t
r
lod
)
{
return
c
.
textures
[
0
]
.
tex2DArray
.
getView
(
)
.
sampleCompare
(
c
.
textures
[
0
]
.
sampler
ref
[
s
t
r
]
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
texture2DOffset
=
function
(
c
s
t
lod
offset
)
{
return
c
.
textures
[
0
]
.
tex2D
.
getView
(
)
.
sampleOffset
(
c
.
textures
[
0
]
.
sampler
[
s
t
]
lod
offset
)
;
}
;
es3fShaderTextureFunctionTests
.
texture2DArrayOffset
=
function
(
c
s
t
r
lod
offset
)
{
return
c
.
textures
[
0
]
.
tex2DArray
.
getView
(
)
.
sampleOffset
(
c
.
textures
[
0
]
.
sampler
[
s
t
r
]
lod
offset
)
;
}
;
es3fShaderTextureFunctionTests
.
texture3DOffset
=
function
(
c
s
t
r
lod
offset
)
{
return
c
.
textures
[
0
]
.
tex3D
.
getView
(
)
.
sampleOffset
(
c
.
textures
[
0
]
.
sampler
[
s
t
r
]
lod
offset
)
;
}
;
es3fShaderTextureFunctionTests
.
texture2DShadowOffset
=
function
(
c
ref
s
t
lod
offset
)
{
return
c
.
textures
[
0
]
.
tex2D
.
getView
(
)
.
sampleCompareOffset
(
c
.
textures
[
0
]
.
sampler
ref
[
s
t
]
lod
offset
)
;
}
;
es3fShaderTextureFunctionTests
.
texture2DArrayShadowOffset
=
function
(
c
ref
s
t
r
lod
offset
)
{
return
c
.
textures
[
0
]
.
tex2DArray
.
getView
(
)
.
sampleCompareOffset
(
c
.
textures
[
0
]
.
sampler
ref
[
s
t
r
]
lod
offset
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2D
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
p
.
lod
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTextureCube
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
textureCube
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArray
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DArray
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3D
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3D
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTextureCubeBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
textureCube
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DArray
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3D
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProj3
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
2
]
p
.
lod
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Bias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
2
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProj
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DProj
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DProjBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DLod
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTextureCubeLod
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
textureCube
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLod
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DArray
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DLod
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3D
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DProjLod
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
1
]
[
0
]
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
p
.
lod
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DArrayOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3DOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
p
.
offset
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DOffsetBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffsetBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DArrayOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DOffsetBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3DOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
p
.
offset
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DLodOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLodOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DArrayOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DLodOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3DOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
c
.
in_
[
1
]
[
0
]
p
.
offset
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Offset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
2
]
p
.
lod
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProj3OffsetBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
2
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffsetBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
p
.
offset
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffsetBias
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
p
.
offset
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3Offset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjLodOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DProjLodOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
1
]
[
0
]
p
.
offset
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadow
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadow
(
c
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
p
.
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowBias
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadow
(
c
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTextureCubeShadow
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
textureCubeShadow
(
c
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTextureCubeShadowBias
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
textureCubeShadow
(
c
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayShadow
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DArrayShadow
(
c
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
p
.
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowLod
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadow
(
c
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
1
]
[
0
]
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowLodOffset
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadowOffset
(
c
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProj
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadow
(
c
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjBias
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadow
(
c
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjLod
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadow
(
c
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
1
]
[
0
]
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjLodOffset
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadowOffset
(
c
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowOffset
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadowOffset
(
c
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
p
.
lod
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowOffsetBias
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadowOffset
(
c
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjOffset
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadowOffset
(
c
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjOffsetBias
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadowOffset
(
c
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
p
.
lod
+
c
.
in_
[
1
]
[
0
]
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DGrad
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTextureCubeGrad
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
textureCube
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGradCube
(
c
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGrad
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DArray
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2DArray
(
c
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DGrad
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3D
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad3D
(
c
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowGrad
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadow
(
c
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTextureCubeShadowGrad
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
textureCubeShadow
(
c
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGradCube
(
c
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayShadowGrad
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DArrayShadow
(
c
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2DArray
(
c
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DGradOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGradOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DArrayOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2DArray
(
c
)
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DGradOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3DOffset
(
c
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad3D
(
c
)
p
.
offset
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowGradOffset
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadowOffset
(
c
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DArrayShadowGradOffset
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DArrayShadowOffset
(
c
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
c
.
in_
[
0
]
[
1
]
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2DArray
(
c
)
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjGrad
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadow
(
c
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjGradOffset
=
function
(
c
p
)
{
c
.
color
[
0
]
=
es3fShaderTextureFunctionTests
.
texture2DShadowOffset
(
c
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DProjGrad
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3D
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad3D
(
c
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3Offset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
2
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
2
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture2DProjGradOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture2DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad2D
(
c
)
deMath
.
swizzle
(
p
.
offset
[
0
1
]
)
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexture3DProjGradOffset
=
function
(
c
p
)
{
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
es3fShaderTextureFunctionTests
.
texture3DOffset
(
c
c
.
in_
[
0
]
[
0
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
1
]
/
c
.
in_
[
0
]
[
3
]
c
.
in_
[
0
]
[
2
]
/
c
.
in_
[
0
]
[
3
]
es3fShaderTextureFunctionTests
.
computeLodFromGrad3D
(
c
)
p
.
offset
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexelFetch2D
=
function
(
c
p
)
{
var
x
=
Math
.
trunc
(
c
.
in_
[
0
]
[
0
]
)
+
p
.
offset
[
0
]
;
var
y
=
Math
.
trunc
(
c
.
in_
[
0
]
[
1
]
)
+
p
.
offset
[
1
]
;
var
lod
=
Math
.
trunc
(
c
.
in_
[
1
]
[
0
]
)
;
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
c
.
textures
[
0
]
.
tex2D
.
getLevel
(
lod
)
.
getPixel
(
x
y
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexelFetch2DArray
=
function
(
c
p
)
{
var
x
=
Math
.
trunc
(
c
.
in_
[
0
]
[
0
]
)
+
p
.
offset
[
0
]
;
var
y
=
Math
.
trunc
(
c
.
in_
[
0
]
[
1
]
)
+
p
.
offset
[
1
]
;
var
l
=
Math
.
trunc
(
c
.
in_
[
0
]
[
2
]
)
;
var
lod
=
Math
.
trunc
(
c
.
in_
[
1
]
[
0
]
)
;
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
c
.
textures
[
0
]
.
tex2DArray
.
getLevel
(
lod
)
.
getPixel
(
x
y
l
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
evalTexelFetch3D
=
function
(
c
p
)
{
var
x
=
Math
.
trunc
(
c
.
in_
[
0
]
[
0
]
)
+
p
.
offset
[
0
]
;
var
y
=
Math
.
trunc
(
c
.
in_
[
0
]
[
1
]
)
+
p
.
offset
[
1
]
;
var
z
=
Math
.
trunc
(
c
.
in_
[
0
]
[
2
]
)
+
p
.
offset
[
2
]
;
var
lod
=
Math
.
trunc
(
c
.
in_
[
1
]
[
0
]
)
;
c
.
color
=
deMath
.
add
(
deMath
.
multiply
(
c
.
textures
[
0
]
.
tex3D
.
getLevel
(
lod
)
.
getPixel
(
x
y
z
)
p
.
scale
)
p
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
TexLookupEvaluator
=
function
(
evalFunc
lookupParams
)
{
this
.
m_evalFunc
=
evalFunc
;
this
.
m_lookupParams
=
lookupParams
;
}
;
es3fShaderTextureFunctionTests
.
TexLookupEvaluator
.
prototype
=
Object
.
create
(
glsShaderRenderCase
.
ShaderEvaluator
.
prototype
)
;
es3fShaderTextureFunctionTests
.
TexLookupEvaluator
.
prototype
.
constructor
=
es3fShaderTextureFunctionTests
.
TexLookupEvaluator
;
es3fShaderTextureFunctionTests
.
TexLookupEvaluator
.
prototype
.
evaluate
=
function
(
ctx
)
{
this
.
m_evalFunc
(
ctx
this
.
m_lookupParams
)
;
}
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
=
function
(
name
desc
lookup
texture
evalFunc
isVertexCase
)
{
glsShaderRenderCase
.
ShaderRenderCase
.
call
(
this
name
desc
isVertexCase
)
;
this
.
m_lookupSpec
=
lookup
;
this
.
m_textureSpec
=
texture
;
this
.
m_lookupParams
=
new
es3fShaderTextureFunctionTests
.
TexLookupParams
(
)
;
this
.
m_evaluator
=
new
es3fShaderTextureFunctionTests
.
TexLookupEvaluator
(
evalFunc
this
.
m_lookupParams
)
;
this
.
m_texture2D
=
null
;
this
.
m_textureCube
=
null
;
this
.
m_texture2DArray
=
null
;
this
.
m_texture3D
=
null
;
}
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
.
prototype
=
Object
.
create
(
glsShaderRenderCase
.
ShaderRenderCase
.
prototype
)
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
.
prototype
.
constructor
=
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
.
prototype
.
init
=
function
(
)
{
var
s
=
deMath
.
subtract
(
this
.
m_lookupSpec
.
maxCoord
this
.
m_lookupSpec
.
minCoord
)
;
var
b
=
this
.
m_lookupSpec
.
minCoord
;
var
baseCoordTrans
=
[
s
[
0
]
0
.
0
0
.
0
b
[
0
]
0
.
0
s
[
1
]
0
.
b
[
1
]
s
[
2
]
/
2
.
0
-
s
[
2
]
/
2
.
0
0
.
0
s
[
2
]
/
2
.
0
+
b
[
2
]
-
s
[
3
]
/
2
.
0
s
[
3
]
/
2
.
0
0
.
0
s
[
3
]
/
2
.
0
+
b
[
3
]
]
;
this
.
m_userAttribTransforms
.
push
(
tcuMatrix
.
matrixFromArray
(
4
4
baseCoordTrans
)
)
;
var
hasLodBias
=
es3fShaderTextureFunctionTests
.
functionHasLod
(
this
.
m_lookupSpec
.
func
)
|
|
this
.
m_lookupSpec
.
useBias
;
var
isGrad
=
es3fShaderTextureFunctionTests
.
functionHasGrad
(
this
.
m_lookupSpec
.
func
)
;
assertMsgOptions
(
!
isGrad
|
|
!
hasLodBias
'
Assert
Error
.
expected
:
isGrad
|
|
hasLodBias
=
=
=
false
'
false
true
)
;
if
(
hasLodBias
)
{
s
=
this
.
m_lookupSpec
.
maxLodBias
-
this
.
m_lookupSpec
.
minLodBias
;
b
=
this
.
m_lookupSpec
.
minLodBias
;
var
lodCoordTrans
=
[
s
/
2
.
0
s
/
2
.
0
0
.
0
b
0
.
0
0
.
0
0
.
0
0
.
0
0
.
0
0
.
0
0
.
0
0
.
0
0
.
0
0
.
0
0
.
0
0
.
0
]
;
this
.
m_userAttribTransforms
.
push
(
tcuMatrix
.
matrixFromArray
(
4
4
lodCoordTrans
)
)
;
}
else
if
(
isGrad
)
{
var
sx
=
deMath
.
subtract
(
this
.
m_lookupSpec
.
maxDX
this
.
m_lookupSpec
.
minDX
)
;
var
sy
=
deMath
.
subtract
(
this
.
m_lookupSpec
.
maxDY
this
.
m_lookupSpec
.
minDY
)
;
var
gradDxTrans
=
[
sx
[
0
]
/
2
.
0
sx
[
0
]
/
2
.
0
0
.
0
this
.
m_lookupSpec
.
minDX
[
0
]
sx
[
1
]
/
2
.
0
sx
[
1
]
/
2
.
0
0
.
0
this
.
m_lookupSpec
.
minDX
[
1
]
sx
[
2
]
/
2
.
0
sx
[
2
]
/
2
.
0
0
.
0
this
.
m_lookupSpec
.
minDX
[
2
]
0
.
0
0
.
0
0
.
0
0
.
0
]
;
var
gradDyTrans
=
[
-
sy
[
0
]
/
2
.
0
-
sy
[
0
]
/
2
.
0
0
.
0
this
.
m_lookupSpec
.
maxDY
[
0
]
-
sy
[
1
]
/
2
.
0
-
sy
[
1
]
/
2
.
0
0
.
0
this
.
m_lookupSpec
.
maxDY
[
1
]
-
sy
[
2
]
/
2
.
0
-
sy
[
2
]
/
2
.
0
0
.
0
this
.
m_lookupSpec
.
maxDY
[
2
]
0
.
0
0
.
0
0
.
0
0
.
0
]
;
this
.
m_userAttribTransforms
.
push
(
tcuMatrix
.
matrixFromArray
(
4
4
gradDxTrans
)
)
;
this
.
m_userAttribTransforms
.
push
(
tcuMatrix
.
matrixFromArray
(
4
4
gradDyTrans
)
)
;
}
this
.
initShaderSources
(
)
;
this
.
initTexture
(
)
;
this
.
postinit
(
)
;
}
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
.
prototype
.
initTexture
=
function
(
)
{
var
texCubeSwz
=
[
[
0
0
1
1
]
[
1
1
0
0
]
[
0
1
0
1
]
[
1
0
1
0
]
[
0
1
1
0
]
[
1
0
0
1
]
]
;
assertMsgOptions
(
texCubeSwz
.
length
=
=
=
6
'
Cube
should
have
6
faces
.
'
false
true
)
;
var
levelStep
;
var
cScale
;
var
cBias
;
var
baseCellSize
;
var
fA
;
var
fB
;
var
colorA
;
var
colorB
;
var
dudx
;
var
dvdy
;
var
texFmt
=
gluTextureUtil
.
mapGLInternalFormat
(
this
.
m_textureSpec
.
format
)
;
var
fmtInfo
=
tcuTextureUtil
.
getTextureFormatInfo
(
texFmt
)
;
var
viewportSize
=
this
.
getViewportSize
(
)
;
var
isProj
=
es3fShaderTextureFunctionTests
.
functionHasProj
(
this
.
m_lookupSpec
.
func
)
;
var
isAutoLod
=
es3fShaderTextureFunctionTests
.
functionHasAutoLod
(
this
.
m_isVertexCase
?
gluShaderProgram
.
shaderType
.
VERTEX
:
gluShaderProgram
.
shaderType
.
FRAGMENT
this
.
m_lookupSpec
.
func
)
;
var
proj
=
isProj
?
1
.
0
/
this
.
m_lookupSpec
.
minCoord
[
this
.
m_lookupSpec
.
func
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
?
2
:
3
]
:
1
.
0
;
switch
(
this
.
m_textureSpec
.
type
)
{
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
:
levelStep
=
isAutoLod
?
0
.
0
:
1
.
0
/
Math
.
max
(
1
this
.
m_textureSpec
.
numLevels
-
1
)
;
cScale
=
deMath
.
subtract
(
fmtInfo
.
valueMax
fmtInfo
.
valueMin
)
;
cBias
=
fmtInfo
.
valueMin
;
baseCellSize
=
Math
.
min
(
this
.
m_textureSpec
.
width
/
4
this
.
m_textureSpec
.
height
/
4
)
;
this
.
m_texture2D
=
gluTexture
.
texture2DFromInternalFormat
(
gl
this
.
m_textureSpec
.
format
this
.
m_textureSpec
.
width
this
.
m_textureSpec
.
height
)
;
for
(
var
level
=
0
;
level
<
this
.
m_textureSpec
.
numLevels
;
level
+
+
)
{
fA
=
level
*
levelStep
;
fB
=
1
.
0
-
fA
;
colorA
=
deMath
.
add
(
cBias
deMath
.
multiply
(
cScale
[
fA
fB
fA
fB
]
)
)
;
colorB
=
deMath
.
add
(
cBias
deMath
.
multiply
(
cScale
[
fB
fA
fB
fA
]
)
)
;
this
.
m_texture2D
.
getRefTexture
(
)
.
allocLevel
(
level
)
;
tcuTextureUtil
.
fillWithGrid
(
this
.
m_texture2D
.
getRefTexture
(
)
.
getLevel
(
level
)
Math
.
max
(
1
baseCellSize
>
>
level
)
colorA
colorB
)
;
}
this
.
m_texture2D
.
upload
(
)
;
dudx
=
(
this
.
m_lookupSpec
.
maxCoord
[
0
]
-
this
.
m_lookupSpec
.
minCoord
[
0
]
)
*
proj
*
this
.
m_textureSpec
.
width
/
viewportSize
[
0
]
;
dvdy
=
(
this
.
m_lookupSpec
.
maxCoord
[
1
]
-
this
.
m_lookupSpec
.
minCoord
[
1
]
)
*
proj
*
this
.
m_textureSpec
.
height
/
viewportSize
[
1
]
;
this
.
m_lookupParams
.
lod
=
es3fShaderTextureFunctionTests
.
computeLodFromDerivates
(
dudx
0
.
0
0
.
0
dvdy
)
;
this
.
m_textures
.
push
(
new
glsShaderRenderCase
.
TextureBinding
(
this
.
m_texture2D
this
.
m_textureSpec
.
sampler
)
)
;
break
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
:
levelStep
=
isAutoLod
?
0
.
0
:
1
.
0
/
Math
.
max
(
1
this
.
m_textureSpec
.
numLevels
-
1
)
;
cScale
=
deMath
.
subtract
(
fmtInfo
.
valueMax
fmtInfo
.
valueMin
)
;
cBias
=
fmtInfo
.
valueMin
;
var
cCorner
=
deMath
.
add
(
cBias
deMath
.
scale
(
cScale
0
.
5
)
)
;
baseCellSize
=
Math
.
min
(
this
.
m_textureSpec
.
width
/
4
this
.
m_textureSpec
.
height
/
4
)
;
assertMsgOptions
(
this
.
m_textureSpec
.
width
=
=
=
this
.
m_textureSpec
.
height
'
Expected
width
=
=
=
height
'
false
true
)
;
this
.
m_textureCube
=
gluTexture
.
cubeFromInternalFormat
(
gl
this
.
m_textureSpec
.
format
this
.
m_textureSpec
.
width
)
;
for
(
var
level
=
0
;
level
<
this
.
m_textureSpec
.
numLevels
;
level
+
+
)
{
fA
=
level
*
levelStep
;
fB
=
1
.
0
-
fA
;
var
f
=
[
fA
fB
]
;
for
(
var
face
=
0
;
face
<
6
;
face
+
+
)
{
var
swzA
=
texCubeSwz
[
face
]
;
var
swzB
=
deMath
.
subtract
(
[
1
1
1
1
]
swzA
)
;
colorA
=
deMath
.
add
(
cBias
deMath
.
multiply
(
cScale
deMath
.
swizzle
(
f
[
swzA
[
0
]
swzA
[
1
]
swzA
[
2
]
swzA
[
3
]
]
)
)
)
;
colorB
=
deMath
.
add
(
cBias
deMath
.
multiply
(
cScale
deMath
.
swizzle
(
f
[
swzB
[
0
]
swzB
[
1
]
swzB
[
2
]
swzB
[
3
]
]
)
)
)
;
this
.
m_textureCube
.
getRefTexture
(
)
.
allocLevel
(
face
level
)
;
var
access
=
this
.
m_textureCube
.
getRefTexture
(
)
.
getLevelFace
(
level
face
)
;
var
lastPix
=
access
.
getWidth
(
)
-
1
;
tcuTextureUtil
.
fillWithGrid
(
access
Math
.
max
(
1
baseCellSize
>
>
level
)
colorA
colorB
)
;
access
.
setPixel
(
cCorner
0
0
)
;
access
.
setPixel
(
cCorner
0
lastPix
)
;
access
.
setPixel
(
cCorner
lastPix
0
)
;
access
.
setPixel
(
cCorner
lastPix
lastPix
)
;
}
}
this
.
m_textureCube
.
upload
(
)
;
assertMsgOptions
(
Math
.
abs
(
this
.
m_lookupSpec
.
minCoord
[
2
]
-
this
.
m_lookupSpec
.
maxCoord
[
2
]
)
<
0
.
005
'
Expected
abs
(
minCoord
-
maxCoord
)
<
0
.
005
'
false
true
)
;
assertMsgOptions
(
Math
.
abs
(
this
.
m_lookupSpec
.
minCoord
[
0
]
)
<
Math
.
abs
(
this
.
m_lookupSpec
.
minCoord
[
2
]
)
&
&
Math
.
abs
(
this
.
m_lookupSpec
.
maxCoord
[
0
]
)
<
Math
.
abs
(
this
.
m_lookupSpec
.
minCoord
[
2
]
)
'
Assert
error
:
minCoord
maxCoord
'
false
true
)
;
assertMsgOptions
(
Math
.
abs
(
this
.
m_lookupSpec
.
minCoord
[
1
]
)
<
Math
.
abs
(
this
.
m_lookupSpec
.
minCoord
[
2
]
)
&
&
Math
.
abs
(
this
.
m_lookupSpec
.
maxCoord
[
1
]
)
<
Math
.
abs
(
this
.
m_lookupSpec
.
minCoord
[
2
]
)
'
Assert
error
:
minCoord
maxCoord
'
false
true
)
;
var
c00
=
tcuTexture
.
getCubeFaceCoords
(
[
this
.
m_lookupSpec
.
minCoord
[
0
]
*
proj
this
.
m_lookupSpec
.
minCoord
[
1
]
*
proj
this
.
m_lookupSpec
.
minCoord
[
2
]
*
proj
]
)
;
var
c10
=
tcuTexture
.
getCubeFaceCoords
(
[
this
.
m_lookupSpec
.
maxCoord
[
0
]
*
proj
this
.
m_lookupSpec
.
minCoord
[
1
]
*
proj
this
.
m_lookupSpec
.
minCoord
[
2
]
*
proj
]
)
;
var
c01
=
tcuTexture
.
getCubeFaceCoords
(
[
this
.
m_lookupSpec
.
minCoord
[
0
]
*
proj
this
.
m_lookupSpec
.
maxCoord
[
1
]
*
proj
this
.
m_lookupSpec
.
minCoord
[
2
]
*
proj
]
)
;
dudx
=
(
c10
.
s
-
c00
.
s
)
*
this
.
m_textureSpec
.
width
/
viewportSize
[
0
]
;
dvdy
=
(
c01
.
t
-
c00
.
t
)
*
this
.
m_textureSpec
.
height
/
viewportSize
[
1
]
;
this
.
m_lookupParams
.
lod
=
es3fShaderTextureFunctionTests
.
computeLodFromDerivates
(
dudx
0
.
0
0
.
0
dvdy
)
;
this
.
m_textures
.
push
(
new
glsShaderRenderCase
.
TextureBinding
(
this
.
m_textureCube
this
.
m_textureSpec
.
sampler
)
)
;
break
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
:
var
layerStep
=
1
.
0
/
this
.
m_textureSpec
.
depth
;
levelStep
=
isAutoLod
?
0
.
0
:
1
.
0
/
(
Math
.
max
(
1
this
.
m_textureSpec
.
numLevels
-
1
)
*
this
.
m_textureSpec
.
depth
)
;
cScale
=
deMath
.
subtract
(
fmtInfo
.
valueMax
fmtInfo
.
valueMin
)
;
cBias
=
fmtInfo
.
valueMin
;
baseCellSize
=
Math
.
min
(
this
.
m_textureSpec
.
width
/
4
this
.
m_textureSpec
.
height
/
4
)
;
this
.
m_texture2DArray
=
gluTexture
.
texture2DArrayFromInternalFormat
(
gl
this
.
m_textureSpec
.
format
this
.
m_textureSpec
.
width
this
.
m_textureSpec
.
height
this
.
m_textureSpec
.
depth
)
;
for
(
var
level
=
0
;
level
<
this
.
m_textureSpec
.
numLevels
;
level
+
+
)
{
this
.
m_texture2DArray
.
getRefTexture
(
)
.
allocLevel
(
level
)
;
var
levelAccess
=
this
.
m_texture2DArray
.
getRefTexture
(
)
.
getLevel
(
level
)
;
for
(
var
layer
=
0
;
layer
<
levelAccess
.
getDepth
(
)
;
layer
+
+
)
{
fA
=
layer
*
layerStep
+
level
*
levelStep
;
fB
=
1
.
0
-
fA
;
colorA
=
deMath
.
add
(
cBias
deMath
.
multiply
(
cScale
[
fA
fB
fA
fB
]
)
)
;
colorB
=
deMath
.
add
(
cBias
deMath
.
multiply
(
cScale
[
fB
fA
fB
fA
]
)
)
;
tcuTextureUtil
.
fillWithGrid
(
tcuTextureUtil
.
getSubregion
(
levelAccess
0
0
layer
levelAccess
.
getWidth
(
)
levelAccess
.
getHeight
(
)
1
)
Math
.
max
(
1
baseCellSize
>
>
level
)
colorA
colorB
)
;
}
}
this
.
m_texture2DArray
.
upload
(
)
;
dudx
=
(
this
.
m_lookupSpec
.
maxCoord
[
0
]
-
this
.
m_lookupSpec
.
minCoord
[
0
]
)
*
proj
*
this
.
m_textureSpec
.
width
/
viewportSize
[
0
]
;
dvdy
=
(
this
.
m_lookupSpec
.
maxCoord
[
1
]
-
this
.
m_lookupSpec
.
minCoord
[
1
]
)
*
proj
*
this
.
m_textureSpec
.
height
/
viewportSize
[
1
]
;
this
.
m_lookupParams
.
lod
=
es3fShaderTextureFunctionTests
.
computeLodFromDerivates
(
dudx
0
.
0
0
.
0
dvdy
)
;
this
.
m_textures
.
push
(
new
glsShaderRenderCase
.
TextureBinding
(
this
.
m_texture2DArray
this
.
m_textureSpec
.
sampler
)
)
;
break
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
:
levelStep
=
isAutoLod
?
0
.
0
:
1
.
0
/
Math
.
max
(
1
this
.
m_textureSpec
.
numLevels
-
1
)
;
cScale
=
deMath
.
subtract
(
fmtInfo
.
valueMax
fmtInfo
.
valueMin
)
;
cBias
=
fmtInfo
.
valueMin
;
baseCellSize
=
Math
.
min
(
this
.
m_textureSpec
.
width
/
2
this
.
m_textureSpec
.
height
/
2
this
.
m_textureSpec
.
depth
/
2
)
;
this
.
m_texture3D
=
gluTexture
.
texture3DFromInternalFormat
(
gl
this
.
m_textureSpec
.
format
this
.
m_textureSpec
.
width
this
.
m_textureSpec
.
height
this
.
m_textureSpec
.
depth
)
;
for
(
var
level
=
0
;
level
<
this
.
m_textureSpec
.
numLevels
;
level
+
+
)
{
fA
=
level
*
levelStep
;
fB
=
1
.
0
-
fA
;
colorA
=
deMath
.
add
(
cBias
deMath
.
multiply
(
cScale
[
fA
fB
fA
fB
]
)
)
;
colorB
=
deMath
.
add
(
cBias
deMath
.
multiply
(
cScale
[
fB
fA
fB
fA
]
)
)
;
this
.
m_texture3D
.
getRefTexture
(
)
.
allocLevel
(
level
)
;
tcuTextureUtil
.
fillWithGrid
(
this
.
m_texture3D
.
getRefTexture
(
)
.
getLevel
(
level
)
Math
.
max
(
1
baseCellSize
>
>
level
)
colorA
colorB
)
;
}
this
.
m_texture3D
.
upload
(
)
;
dudx
=
(
this
.
m_lookupSpec
.
maxCoord
[
0
]
-
this
.
m_lookupSpec
.
minCoord
[
0
]
)
*
proj
*
this
.
m_textureSpec
.
width
/
viewportSize
[
0
]
;
dvdy
=
(
this
.
m_lookupSpec
.
maxCoord
[
1
]
-
this
.
m_lookupSpec
.
minCoord
[
1
]
)
*
proj
*
this
.
m_textureSpec
.
height
/
viewportSize
[
1
]
;
var
dwdx
=
(
this
.
m_lookupSpec
.
maxCoord
[
2
]
-
this
.
m_lookupSpec
.
minCoord
[
2
]
)
*
0
.
5
*
proj
*
this
.
m_textureSpec
.
depth
/
viewportSize
[
0
]
;
var
dwdy
=
(
this
.
m_lookupSpec
.
maxCoord
[
2
]
-
this
.
m_lookupSpec
.
minCoord
[
2
]
)
*
0
.
5
*
proj
*
this
.
m_textureSpec
.
depth
/
viewportSize
[
1
]
;
this
.
m_lookupParams
.
lod
=
es3fShaderTextureFunctionTests
.
computeLodFromDerivates
(
dudx
0
.
0
dwdx
0
.
0
dvdy
dwdy
)
;
this
.
m_textures
.
push
(
new
glsShaderRenderCase
.
TextureBinding
(
this
.
m_texture3D
this
.
m_textureSpec
.
sampler
)
)
;
break
;
default
:
throw
new
Error
(
'
Texture
type
not
supported
.
'
)
;
}
this
.
m_lookupParams
.
scale
=
fmtInfo
.
lookupScale
;
this
.
m_lookupParams
.
bias
=
fmtInfo
.
lookupBias
;
this
.
m_lookupParams
.
offset
=
this
.
m_lookupSpec
.
offset
;
}
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
.
prototype
.
initShaderSources
=
function
(
)
{
var
function_
=
this
.
m_lookupSpec
.
func
;
var
isVtxCase
=
this
.
m_isVertexCase
;
var
isProj
=
es3fShaderTextureFunctionTests
.
functionHasProj
(
function_
)
;
var
isGrad
=
es3fShaderTextureFunctionTests
.
functionHasGrad
(
function_
)
;
var
isShadow
=
this
.
m_textureSpec
.
sampler
.
compare
!
=
=
tcuTexture
.
CompareMode
.
COMPAREMODE_NONE
;
var
is2DProj4
=
!
isShadow
&
&
this
.
m_textureSpec
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
&
&
(
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
|
|
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
)
;
var
isIntCoord
=
function_
=
=
=
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
;
var
hasLodBias
=
es3fShaderTextureFunctionTests
.
functionHasLod
(
this
.
m_lookupSpec
.
func
)
|
|
this
.
m_lookupSpec
.
useBias
;
var
texCoordComps
=
this
.
m_textureSpec
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
?
2
:
3
;
var
extraCoordComps
=
(
isProj
?
(
is2DProj4
?
2
:
1
)
:
0
)
+
(
isShadow
?
1
:
0
)
;
var
coordType
=
gluShaderUtil
.
getDataTypeVector
(
gluShaderUtil
.
DataType
.
FLOAT
texCoordComps
+
extraCoordComps
)
;
var
coordPrec
=
gluShaderUtil
.
precision
.
PRECISION_HIGHP
;
var
coordTypeName
=
gluShaderUtil
.
getDataTypeName
(
coordType
)
;
var
coordPrecName
=
gluShaderUtil
.
getPrecisionName
(
coordPrec
)
;
var
texFmt
=
gluTextureUtil
.
mapGLInternalFormat
(
this
.
m_textureSpec
.
format
)
;
var
samplerType
=
null
;
var
gradType
=
(
this
.
m_textureSpec
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
|
|
this
.
m_textureSpec
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
)
?
gluShaderUtil
.
DataType
.
FLOAT_VEC3
:
gluShaderUtil
.
DataType
.
FLOAT_VEC2
;
var
gradTypeName
=
gluShaderUtil
.
getDataTypeName
(
gradType
)
;
var
baseFuncName
=
'
'
;
assertMsgOptions
(
!
isGrad
|
|
!
hasLodBias
'
Expected
!
isGrad
|
|
!
hasLodBias
'
false
true
)
;
switch
(
this
.
m_textureSpec
.
type
)
{
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
:
samplerType
=
isShadow
?
gluShaderUtil
.
DataType
.
SAMPLER_2D_SHADOW
:
gluTextureUtil
.
getSampler2DType
(
texFmt
)
;
break
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
:
samplerType
=
isShadow
?
gluShaderUtil
.
DataType
.
SAMPLER_CUBE_SHADOW
:
gluTextureUtil
.
getSamplerCubeType
(
texFmt
)
;
break
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
:
samplerType
=
isShadow
?
gluShaderUtil
.
DataType
.
SAMPLER_2D_ARRAY_SHADOW
:
gluTextureUtil
.
getSampler2DArrayType
(
texFmt
)
;
break
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
:
assertMsgOptions
(
!
isShadow
'
Expected
!
isShadow
'
false
true
)
;
samplerType
=
gluTextureUtil
.
getSampler3DType
(
texFmt
)
;
break
;
default
:
throw
new
Error
(
'
Unexpected
type
.
'
)
;
}
switch
(
this
.
m_lookupSpec
.
func
)
{
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
:
baseFuncName
=
'
texture
'
;
break
;
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
:
baseFuncName
=
'
textureProj
'
;
break
;
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
:
baseFuncName
=
'
textureProj
'
;
break
;
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
:
baseFuncName
=
'
textureLod
'
;
break
;
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
:
baseFuncName
=
'
textureProjLod
'
;
break
;
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
:
baseFuncName
=
'
textureProjLod
'
;
break
;
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
:
baseFuncName
=
'
textureGrad
'
;
break
;
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
:
baseFuncName
=
'
textureProjGrad
'
;
break
;
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
:
baseFuncName
=
'
textureProjGrad
'
;
break
;
case
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
:
baseFuncName
=
'
texelFetch
'
;
break
;
default
:
throw
new
Error
(
'
Unexpected
function
.
'
)
;
}
var
vert
=
'
'
;
var
frag
=
'
'
;
var
op
=
'
'
;
vert
+
=
'
#
version
300
es
\
n
'
+
'
in
highp
vec4
a_position
;
\
n
'
+
'
in
'
+
coordPrecName
+
'
'
+
coordTypeName
+
'
a_in0
;
\
n
'
;
if
(
isGrad
)
{
vert
+
=
'
in
'
+
coordPrecName
+
'
'
+
gradTypeName
+
'
a_in1
;
\
n
'
;
vert
+
=
'
in
'
+
coordPrecName
+
'
'
+
gradTypeName
+
'
a_in2
;
\
n
'
;
}
else
if
(
hasLodBias
)
vert
+
=
'
in
'
+
coordPrecName
+
'
float
a_in1
;
\
n
'
;
frag
+
=
'
#
version
300
es
\
n
'
+
'
layout
(
location
=
0
)
out
mediump
vec4
o_color
;
\
n
'
;
if
(
isVtxCase
)
{
vert
+
=
'
out
mediump
vec4
v_color
;
\
n
'
;
frag
+
=
'
in
mediump
vec4
v_color
;
\
n
'
;
}
else
{
vert
+
=
'
out
'
+
coordPrecName
+
'
'
+
coordTypeName
+
'
v_texCoord
;
\
n
'
;
frag
+
=
'
in
'
+
coordPrecName
+
'
'
+
coordTypeName
+
'
v_texCoord
;
\
n
'
;
if
(
isGrad
)
{
vert
+
=
'
out
'
+
coordPrecName
+
'
'
+
gradTypeName
+
'
v_gradX
;
\
n
'
;
vert
+
=
'
out
'
+
coordPrecName
+
'
'
+
gradTypeName
+
'
v_gradY
;
\
n
'
;
frag
+
=
'
in
'
+
coordPrecName
+
'
'
+
gradTypeName
+
'
v_gradX
;
\
n
'
;
frag
+
=
'
in
'
+
coordPrecName
+
'
'
+
gradTypeName
+
'
v_gradY
;
\
n
'
;
}
if
(
hasLodBias
)
{
vert
+
=
'
out
'
+
coordPrecName
+
'
float
v_lodBias
;
\
n
'
;
frag
+
=
'
in
'
+
coordPrecName
+
'
float
v_lodBias
;
\
n
'
;
}
}
op
+
=
'
uniform
highp
'
+
gluShaderUtil
.
getDataTypeName
(
samplerType
)
+
'
u_sampler
;
\
n
'
+
'
uniform
highp
vec4
u_scale
;
\
n
'
+
'
uniform
highp
vec4
u_bias
;
\
n
'
;
vert
+
=
isVtxCase
?
op
:
'
'
;
frag
+
=
isVtxCase
?
'
'
:
op
;
op
=
'
'
;
vert
+
=
'
\
nvoid
main
(
)
\
n
{
\
n
'
+
'
\
tgl_Position
=
a_position
;
\
n
'
;
frag
+
=
'
\
nvoid
main
(
)
\
n
{
\
n
'
;
if
(
isVtxCase
)
vert
+
=
'
\
tv_color
=
'
;
else
frag
+
=
'
\
to_color
=
'
;
var
texCoord
=
isVtxCase
?
'
a_in0
'
:
'
v_texCoord
'
;
var
gradX
=
isVtxCase
?
'
a_in1
'
:
'
v_gradX
'
;
var
gradY
=
isVtxCase
?
'
a_in2
'
:
'
v_gradY
'
;
var
lodBias
=
isVtxCase
?
'
a_in1
'
:
'
v_lodBias
'
;
op
+
=
'
vec4
(
'
+
baseFuncName
;
if
(
this
.
m_lookupSpec
.
useOffset
)
op
+
=
'
Offset
'
;
op
+
=
'
(
u_sampler
'
;
if
(
isIntCoord
)
op
+
=
'
ivec
'
+
(
texCoordComps
+
extraCoordComps
)
+
'
(
'
;
op
+
=
texCoord
;
if
(
isIntCoord
)
op
+
=
'
)
'
;
if
(
isGrad
)
op
+
=
'
'
+
gradX
+
'
'
+
gradY
;
if
(
es3fShaderTextureFunctionTests
.
functionHasLod
(
function_
)
)
{
if
(
isIntCoord
)
op
+
=
'
int
(
'
+
lodBias
+
'
)
'
;
else
op
+
=
'
'
+
lodBias
;
}
if
(
this
.
m_lookupSpec
.
useOffset
)
{
var
offsetComps
=
this
.
m_textureSpec
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
?
3
:
2
;
op
+
=
'
ivec
'
+
offsetComps
+
'
(
'
;
for
(
var
ndx
=
0
;
ndx
<
offsetComps
;
ndx
+
+
)
{
if
(
ndx
!
=
=
0
)
op
+
=
'
'
;
op
+
=
this
.
m_lookupSpec
.
offset
[
ndx
]
;
}
op
+
=
'
)
'
;
}
if
(
this
.
m_lookupSpec
.
useBias
)
op
+
=
'
'
+
lodBias
;
op
+
=
'
)
'
;
if
(
isShadow
)
op
+
=
'
0
.
0
0
.
0
1
.
0
)
'
;
else
op
+
=
'
)
*
u_scale
+
u_bias
'
;
op
+
=
'
;
\
n
'
;
vert
+
=
isVtxCase
?
op
:
'
'
;
frag
+
=
isVtxCase
?
'
'
:
op
;
op
=
'
'
;
if
(
isVtxCase
)
frag
+
=
'
\
to_color
=
v_color
;
\
n
'
;
else
{
vert
+
=
'
\
tv_texCoord
=
a_in0
;
\
n
'
;
if
(
isGrad
)
{
vert
+
=
'
\
tv_gradX
=
a_in1
;
\
n
'
;
vert
+
=
'
\
tv_gradY
=
a_in2
;
\
n
'
;
}
else
if
(
hasLodBias
)
vert
+
=
'
\
tv_lodBias
=
a_in1
;
\
n
'
;
}
vert
+
=
'
}
\
n
'
;
frag
+
=
'
}
\
n
'
;
this
.
m_vertShaderSource
=
vert
;
this
.
m_fragShaderSource
=
frag
;
}
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
.
prototype
.
deinit
=
function
(
)
{
this
.
m_program
=
null
;
this
.
m_texture2D
=
null
;
this
.
m_textureCube
=
null
;
this
.
m_texture2DArray
=
null
;
this
.
m_texture3D
=
null
;
}
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
.
prototype
.
setupUniforms
=
function
(
programID
constCoords
)
{
gl
.
uniform1i
(
gl
.
getUniformLocation
(
programID
'
u_sampler
'
)
0
)
;
gl
.
uniform4fv
(
gl
.
getUniformLocation
(
programID
'
u_scale
'
)
this
.
m_lookupParams
.
scale
)
;
gl
.
uniform4fv
(
gl
.
getUniformLocation
(
programID
'
u_bias
'
)
this
.
m_lookupParams
.
bias
)
;
}
;
es3fShaderTextureFunctionTests
.
TestSize
=
function
(
textureSize
lod
lodBase
expectedSize
)
{
this
.
textureSize
=
textureSize
;
this
.
lod
=
lod
;
this
.
lodBase
=
lodBase
;
this
.
expectedSize
=
expectedSize
;
}
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
=
function
(
name
desc
samplerType
texture
isVertexCase
)
{
tcuTestCase
.
DeqpTest
.
call
(
this
name
desc
)
;
this
.
m_samplerTypeStr
=
samplerType
;
this
.
m_textureSpec
=
texture
;
this
.
m_isVertexCase
=
isVertexCase
;
this
.
m_has3DSize
=
texture
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
|
|
texture
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
;
this
.
m_program
=
null
;
this
.
m_iterationCounter
=
0
;
}
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
=
Object
.
create
(
tcuTestCase
.
DeqpTest
.
prototype
)
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
.
constructor
=
es3fShaderTextureFunctionTests
.
TextureSizeCase
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
.
deinit
=
function
(
)
{
this
.
freeShader
(
)
;
}
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
.
iterate
=
function
(
)
{
var
currentIteration
=
this
.
m_iterationCounter
+
+
;
var
testSizes
=
[
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
1
2
1
]
1
0
[
1
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
1
2
1
]
0
0
[
1
2
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
1
3
2
]
0
0
[
1
3
2
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
1
3
2
]
1
0
[
1
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
31
18
]
0
0
[
100
31
18
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
31
18
]
1
0
[
50
15
9
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
31
18
]
2
0
[
25
7
4
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
31
18
]
3
0
[
12
3
2
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
31
18
]
4
0
[
6
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
31
18
]
5
0
[
3
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
31
18
]
6
0
[
1
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
128
32
]
0
0
[
100
128
32
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
128
32
]
1
0
[
50
64
16
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
128
32
]
2
0
[
25
32
8
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
128
32
]
3
0
[
12
16
4
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
128
32
]
4
0
[
6
8
2
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
128
32
]
5
0
[
3
4
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
128
32
]
6
0
[
1
2
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
128
32
]
7
0
[
1
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
128
64
32
]
0
0
[
128
64
32
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
128
64
32
]
1
0
[
64
32
16
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
128
64
32
]
2
0
[
32
16
8
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
128
64
32
]
3
0
[
16
8
4
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
128
64
32
]
4
0
[
8
4
2
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
128
64
32
]
5
0
[
4
2
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
128
64
32
]
6
0
[
2
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
128
64
32
]
7
0
[
1
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
1
1
1
]
0
0
[
1
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
64
64
64
]
0
0
[
64
64
64
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
64
64
64
]
1
0
[
32
32
32
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
64
64
64
]
2
0
[
16
16
16
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
64
64
64
]
3
0
[
8
8
8
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
64
64
64
]
4
0
[
4
4
4
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
100
31
18
]
3
1
[
6
1
1
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
128
64
32
]
3
1
[
8
4
2
]
)
new
es3fShaderTextureFunctionTests
.
TestSize
(
[
64
64
64
]
1
1
[
16
16
16
]
)
]
;
var
lastIterationIndex
=
testSizes
.
length
+
1
;
if
(
currentIteration
=
=
=
0
)
{
return
this
.
initShader
(
)
?
tcuTestCase
.
IterateResult
.
CONTINUE
:
tcuTestCase
.
IterateResult
.
STOP
;
}
else
if
(
currentIteration
=
=
=
lastIterationIndex
)
{
this
.
freeShader
(
)
;
return
tcuTestCase
.
IterateResult
.
STOP
;
}
else
{
if
(
!
this
.
testTextureSize
(
testSizes
[
currentIteration
-
1
]
)
)
testFailedOptions
(
'
Fail
:
Case
'
+
(
currentIteration
-
1
)
+
'
Got
unexpected
texture
size
'
false
)
;
else
testPassedOptions
(
'
Pass
'
true
)
;
return
tcuTestCase
.
IterateResult
.
CONTINUE
;
}
}
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
.
initShader
=
function
(
)
{
var
vertSrc
=
this
.
genVertexShader
(
)
;
var
fragSrc
=
this
.
genFragmentShader
(
)
;
assertMsgOptions
(
this
.
m_program
=
=
=
null
'
Program
should
be
null
'
false
true
)
;
this
.
m_program
=
new
gluShaderProgram
.
ShaderProgram
(
gl
gluShaderProgram
.
makeVtxFragSources
(
vertSrc
fragSrc
)
)
;
if
(
!
this
.
m_program
.
isOk
(
)
)
{
testFailedOptions
(
'
Fail
:
Shader
failed
'
false
)
;
return
false
;
}
return
true
;
}
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
.
freeShader
=
function
(
)
{
this
.
m_program
=
null
;
}
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
.
testTextureSize
=
function
(
testSize
)
{
var
triangle
=
[
-
1
-
1
0
1
4
-
1
0
1
-
1
4
0
1
]
;
var
positionLoc
=
gl
.
getAttribLocation
(
this
.
m_program
.
getProgram
(
)
'
a_position
'
)
;
var
samplerLoc
=
gl
.
getUniformLocation
(
this
.
m_program
.
getProgram
(
)
'
u_sampler
'
)
;
var
sizeLoc
=
gl
.
getUniformLocation
(
this
.
m_program
.
getProgram
(
)
'
u_texSize
'
)
;
var
lodLoc
=
gl
.
getUniformLocation
(
this
.
m_program
.
getProgram
(
)
'
u_lod
'
)
;
var
textureTarget
=
this
.
getGLTextureTarget
(
)
;
var
isSquare
=
testSize
.
textureSize
[
0
]
=
=
=
testSize
.
textureSize
[
1
]
;
var
is2DLodValid
=
(
testSize
.
textureSize
[
0
]
>
>
(
testSize
.
lod
+
testSize
.
lodBase
)
)
!
=
=
0
|
|
(
testSize
.
textureSize
[
1
]
>
>
(
testSize
.
lod
+
testSize
.
lodBase
)
)
!
=
=
0
;
var
success
=
true
;
var
errorValue
;
if
(
this
.
m_textureSpec
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
&
&
!
isSquare
)
return
true
;
if
(
this
.
m_textureSpec
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
&
&
!
is2DLodValid
)
return
true
;
if
(
this
.
m_textureSpec
.
type
=
=
=
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
&
&
!
is2DLodValid
)
return
true
;
gl
.
useProgram
(
this
.
m_program
.
getProgram
(
)
)
;
gl
.
uniform1i
(
samplerLoc
0
)
;
gl
.
clearColor
(
0
.
5
0
.
5
0
.
5
1
.
0
)
;
gl
.
viewport
(
0
0
1
1
)
;
var
triangleGlBuffer
=
gl
.
createBuffer
(
)
;
gl
.
bindBuffer
(
gl
.
ARRAY_BUFFER
triangleGlBuffer
)
;
gl
.
bufferData
(
gl
.
ARRAY_BUFFER
new
Float32Array
(
triangle
)
gl
.
STATIC_DRAW
)
;
gl
.
vertexAttribPointer
(
positionLoc
4
gl
.
FLOAT
false
0
0
)
;
gl
.
enableVertexAttribArray
(
positionLoc
)
;
var
maxLevel
=
testSize
.
lod
+
testSize
.
lodBase
;
var
levels
=
maxLevel
+
1
;
var
texId
=
null
;
texId
=
gl
.
createTexture
(
)
;
gl
.
bindTexture
(
textureTarget
texId
)
;
gl
.
texParameteri
(
textureTarget
gl
.
TEXTURE_MIN_FILTER
gl
.
NEAREST
)
;
gl
.
texParameteri
(
textureTarget
gl
.
TEXTURE_MAG_FILTER
gl
.
NEAREST
)
;
gl
.
texParameteri
(
textureTarget
gl
.
TEXTURE_BASE_LEVEL
testSize
.
lodBase
)
;
switch
(
this
.
m_textureSpec
.
type
)
{
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
:
gl
.
uniform3iv
(
sizeLoc
testSize
.
expectedSize
)
;
gl
.
uniform1iv
(
lodLoc
[
testSize
.
lod
]
)
;
gl
.
texStorage3D
(
textureTarget
levels
this
.
m_textureSpec
.
format
testSize
.
textureSize
[
0
]
testSize
.
textureSize
[
1
]
testSize
.
textureSize
[
2
]
)
;
break
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
:
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
:
gl
.
uniform2iv
(
sizeLoc
testSize
.
expectedSize
.
slice
(
0
2
)
)
;
gl
.
uniform1iv
(
lodLoc
[
testSize
.
lod
]
)
;
gl
.
texStorage2D
(
textureTarget
levels
this
.
m_textureSpec
.
format
testSize
.
textureSize
[
0
]
testSize
.
textureSize
[
1
]
)
;
break
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
:
var
expectedSize
=
[
testSize
.
expectedSize
[
0
]
testSize
.
expectedSize
[
1
]
testSize
.
textureSize
[
2
]
]
;
gl
.
uniform3iv
(
sizeLoc
expectedSize
)
;
gl
.
uniform1iv
(
lodLoc
[
testSize
.
lod
]
)
;
gl
.
texStorage3D
(
textureTarget
levels
this
.
m_textureSpec
.
format
testSize
.
textureSize
[
0
]
testSize
.
textureSize
[
1
]
testSize
.
textureSize
[
2
]
)
;
break
;
default
:
throw
new
Error
(
'
Type
not
supported
'
)
;
}
var
colorTolerance
=
0
.
1
;
var
sample
=
new
tcuSurface
.
Surface
(
1
1
)
;
var
outputColor
;
gl
.
clear
(
gl
.
COLOR_BUFFER_BIT
)
;
gl
.
drawArrays
(
gl
.
TRIANGLES
0
3
)
;
gl
.
finish
(
)
;
sample
.
readViewport
(
gl
[
0
0
1
1
]
)
;
outputColor
=
sample
.
getAccess
(
)
.
getPixel
(
0
0
)
;
if
(
outputColor
[
0
]
>
=
1
.
0
-
colorTolerance
&
&
outputColor
[
1
]
>
=
1
.
0
-
colorTolerance
&
&
outputColor
[
2
]
>
=
1
.
0
-
colorTolerance
)
bufferedLogToConsole
(
'
Passed
'
)
;
else
{
bufferedLogToConsole
(
'
Failed
'
)
;
success
=
false
;
}
gl
.
bindTexture
(
textureTarget
null
)
;
gl
.
deleteTexture
(
texId
)
;
gl
.
useProgram
(
null
)
;
return
success
;
}
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
.
genVertexShader
=
function
(
)
{
var
vert
=
'
'
;
vert
+
=
'
#
version
300
es
\
n
'
+
'
in
highp
vec4
a_position
;
\
n
'
;
if
(
this
.
m_isVertexCase
)
{
vert
+
=
'
out
mediump
vec4
v_color
;
\
n
'
+
'
uniform
highp
'
+
this
.
m_samplerTypeStr
+
'
u_sampler
;
\
n
'
+
'
uniform
highp
ivec
'
+
(
this
.
m_has3DSize
?
3
:
2
)
+
'
u_texSize
;
\
n
'
+
'
uniform
highp
int
u_lod
;
\
n
'
;
}
vert
+
=
'
void
main
(
)
\
n
{
\
n
'
;
if
(
this
.
m_isVertexCase
)
vert
+
=
'
v_color
=
(
textureSize
(
u_sampler
u_lod
)
=
=
u_texSize
?
vec4
(
1
.
0
1
.
0
1
.
0
1
.
0
)
:
vec4
(
0
.
0
0
.
0
0
.
0
1
.
0
)
)
;
\
n
'
;
vert
+
=
'
gl_Position
=
a_position
;
\
n
'
+
'
}
\
n
'
;
return
vert
;
}
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
.
genFragmentShader
=
function
(
)
{
var
frag
=
'
'
;
frag
+
=
'
#
version
300
es
\
n
'
+
'
layout
(
location
=
0
)
out
mediump
vec4
o_color
;
\
n
'
;
if
(
this
.
m_isVertexCase
)
frag
+
=
'
in
mediump
vec4
v_color
;
\
n
'
;
if
(
!
this
.
m_isVertexCase
)
{
frag
+
=
'
uniform
highp
'
+
this
.
m_samplerTypeStr
+
'
u_sampler
;
\
n
'
+
'
uniform
highp
ivec
'
+
(
this
.
m_has3DSize
?
3
:
2
)
+
'
u_texSize
;
\
n
'
+
'
uniform
highp
int
u_lod
;
\
n
'
;
}
frag
+
=
'
void
main
(
)
\
n
{
\
n
'
;
if
(
!
this
.
m_isVertexCase
)
frag
+
=
'
o_color
=
(
textureSize
(
u_sampler
u_lod
)
=
=
u_texSize
?
vec4
(
1
.
0
1
.
0
1
.
0
1
.
0
)
:
vec4
(
0
.
0
0
.
0
0
.
0
1
.
0
)
)
;
\
n
'
;
else
frag
+
=
'
o_color
=
v_color
;
\
n
'
;
frag
+
=
'
}
\
n
'
;
return
frag
;
}
;
es3fShaderTextureFunctionTests
.
TextureSizeCase
.
prototype
.
getGLTextureTarget
=
function
(
)
{
switch
(
this
.
m_textureSpec
.
type
)
{
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
:
return
gl
.
TEXTURE_2D
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
:
return
gl
.
TEXTURE_CUBE_MAP
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
:
return
gl
.
TEXTURE_2D_ARRAY
;
case
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
:
return
gl
.
TEXTURE_3D
;
default
:
throw
new
Error
(
'
Texture
Type
not
supported
.
'
)
;
}
}
;
es3fShaderTextureFunctionTests
.
TestSpec
;
es3fShaderTextureFunctionTests
.
getCaseSpec
=
function
(
name
func
minCoord
maxCoord
useBias
minLodBias
maxLodBias
useOffset
offset
texSpec
evalFunc
flags
)
{
return
new
es3fShaderTextureFunctionTests
.
TexFuncCaseSpec
(
name
new
es3fShaderTextureFunctionTests
.
TextureLookupSpec
(
func
minCoord
maxCoord
useBias
minLodBias
maxLodBias
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
useOffset
offset
)
texSpec
evalFunc
flags
)
;
}
;
es3fShaderTextureFunctionTests
.
getGradCaseSpec
=
function
(
name
func
minCoord
maxCoord
mindx
maxdx
mindy
maxdy
useOffset
offset
texSpec
evalFunc
flags
)
{
return
new
es3fShaderTextureFunctionTests
.
TexFuncCaseSpec
(
name
new
es3fShaderTextureFunctionTests
.
TextureLookupSpec
(
func
minCoord
maxCoord
false
0
.
0
0
.
0
mindx
maxdx
mindy
maxdy
useOffset
offset
)
texSpec
evalFunc
flags
)
;
}
;
es3fShaderTextureFunctionTests
.
CaseFlags
=
{
VERTEX
:
1
FRAGMENT
:
2
BOTH
:
3
}
;
es3fShaderTextureFunctionTests
.
TexFuncCaseSpec
=
function
(
name
lookupSpec
texSpec
evalFunc
flags
)
{
this
.
name
=
name
;
this
.
lookupSpec
=
lookupSpec
;
this
.
texSpec
=
texSpec
;
this
.
evalFunc
=
evalFunc
;
this
.
flags
=
flags
;
}
;
es3fShaderTextureFunctionTests
.
createCaseGroup
=
function
(
parent
groupName
groupDesc
cases
)
{
var
group
=
tcuTestCase
.
newTest
(
groupName
groupDesc
)
;
parent
.
addChild
(
group
)
;
for
(
var
ndx
=
0
;
ndx
<
cases
.
length
;
ndx
+
+
)
{
var
name
=
cases
[
ndx
]
.
name
;
if
(
cases
[
ndx
]
.
flags
&
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
group
.
addChild
(
new
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
(
name
+
'
_vertex
'
'
'
cases
[
ndx
]
.
lookupSpec
cases
[
ndx
]
.
texSpec
cases
[
ndx
]
.
evalFunc
true
)
)
;
if
(
cases
[
ndx
]
.
flags
&
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
group
.
addChild
(
new
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionCase
(
name
+
'
_fragment
'
'
'
cases
[
ndx
]
.
lookupSpec
cases
[
ndx
]
.
texSpec
cases
[
ndx
]
.
evalFunc
false
)
)
;
}
}
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionTests
=
function
(
)
{
tcuTestCase
.
DeqpTest
.
call
(
this
'
texture_functions
'
'
Texture
Access
Function
Tests
'
)
;
}
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionTests
.
prototype
=
Object
.
create
(
tcuTestCase
.
DeqpTest
.
prototype
)
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionTests
.
prototype
.
constructor
=
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionTests
;
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionTests
.
prototype
.
init
=
function
(
)
{
var
samplerNearestNoMipmap
=
new
tcuTexture
.
Sampler
(
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
FilterMode
.
NEAREST
tcuTexture
.
FilterMode
.
NEAREST
0
.
0
true
tcuTexture
.
CompareMode
.
COMPAREMODE_NONE
0
[
0
.
0
0
.
0
0
.
0
0
.
0
]
true
)
;
var
samplerLinearNoMipmap
=
new
tcuTexture
.
Sampler
(
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
FilterMode
.
LINEAR
tcuTexture
.
FilterMode
.
LINEAR
0
.
0
true
tcuTexture
.
CompareMode
.
COMPAREMODE_NONE
0
[
0
.
0
0
.
0
0
.
0
0
.
0
]
true
)
;
var
samplerNearestMipmap
=
new
tcuTexture
.
Sampler
(
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
FilterMode
.
NEAREST_MIPMAP_NEAREST
tcuTexture
.
FilterMode
.
NEAREST
0
.
0
true
tcuTexture
.
CompareMode
.
COMPAREMODE_NONE
0
[
0
.
0
0
.
0
0
.
0
0
.
0
]
true
)
;
var
samplerLinearMipmap
=
new
tcuTexture
.
Sampler
(
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
FilterMode
.
LINEAR_MIPMAP_NEAREST
tcuTexture
.
FilterMode
.
LINEAR
0
.
0
true
tcuTexture
.
CompareMode
.
COMPAREMODE_NONE
0
[
0
.
0
0
.
0
0
.
0
0
.
0
]
true
)
;
var
samplerShadowNoMipmap
=
new
tcuTexture
.
Sampler
(
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
FilterMode
.
NEAREST
tcuTexture
.
FilterMode
.
NEAREST
0
.
0
true
tcuTexture
.
CompareMode
.
COMPAREMODE_LESS
0
[
0
.
0
0
.
0
0
.
0
0
.
0
]
true
)
;
var
samplerShadowMipmap
=
new
tcuTexture
.
Sampler
(
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
FilterMode
.
NEAREST_MIPMAP_NEAREST
tcuTexture
.
FilterMode
.
NEAREST
0
.
0
true
tcuTexture
.
CompareMode
.
COMPAREMODE_LESS
0
[
0
.
0
0
.
0
0
.
0
0
.
0
]
true
)
;
var
samplerTexelFetch
=
new
tcuTexture
.
Sampler
(
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
WrapMode
.
REPEAT_GL
tcuTexture
.
FilterMode
.
NEAREST_MIPMAP_NEAREST
tcuTexture
.
FilterMode
.
NEAREST
0
.
0
false
tcuTexture
.
CompareMode
.
COMPAREMODE_NONE
0
[
0
.
0
0
.
0
0
.
0
0
.
0
]
true
)
;
var
tex2DFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA8
256
256
1
1
samplerLinearNoMipmap
)
;
var
tex2DFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA16F
256
256
1
1
samplerLinearNoMipmap
)
;
var
tex2DInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA8I
256
256
1
1
samplerNearestNoMipmap
)
;
var
tex2DUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA8UI
256
256
1
1
samplerNearestNoMipmap
)
;
var
tex2DMipmapFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA8
256
256
1
9
samplerLinearMipmap
)
;
var
tex2DMipmapFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA16F
256
256
1
9
samplerLinearMipmap
)
;
var
tex2DMipmapInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA8I
256
256
1
9
samplerNearestMipmap
)
;
var
tex2DMipmapUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA8UI
256
256
1
9
samplerNearestMipmap
)
;
var
tex2DShadow
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
DEPTH_COMPONENT16
256
256
1
9
samplerShadowNoMipmap
)
;
var
tex2DMipmapShadow
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
DEPTH_COMPONENT16
256
256
1
9
samplerShadowMipmap
)
;
var
tex2DTexelFetchFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA8
256
256
1
9
samplerTexelFetch
)
;
var
tex2DTexelFetchFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA16F
256
256
1
9
samplerTexelFetch
)
;
var
tex2DTexelFetchInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA8I
256
256
1
9
samplerTexelFetch
)
;
var
tex2DTexelFetchUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D
gl
.
RGBA8UI
256
256
1
9
samplerTexelFetch
)
;
var
texCubeFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
RGBA8
256
256
1
1
samplerLinearNoMipmap
)
;
var
texCubeFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
RGBA16F
256
256
1
1
samplerLinearNoMipmap
)
;
var
texCubeInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
RGBA8I
256
256
1
1
samplerNearestNoMipmap
)
;
var
texCubeUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
RGBA8UI
256
256
1
1
samplerNearestNoMipmap
)
;
var
texCubeMipmapFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
RGBA8
256
256
1
9
samplerLinearMipmap
)
;
var
texCubeMipmapFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
RGBA16F
128
128
1
8
samplerLinearMipmap
)
;
var
texCubeMipmapInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
RGBA8I
256
256
1
9
samplerNearestMipmap
)
;
var
texCubeMipmapUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
RGBA8UI
256
256
1
9
samplerNearestMipmap
)
;
var
texCubeShadow
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
DEPTH_COMPONENT16
256
256
1
1
samplerShadowNoMipmap
)
;
var
texCubeMipmapShadow
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_CUBE_MAP
gl
.
DEPTH_COMPONENT16
256
256
1
9
samplerShadowMipmap
)
;
var
tex2DArrayFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA8
128
128
4
1
samplerLinearNoMipmap
)
;
var
tex2DArrayFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA16F
128
128
4
1
samplerLinearNoMipmap
)
;
var
tex2DArrayInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA8I
128
128
4
1
samplerNearestNoMipmap
)
;
var
tex2DArrayUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA8UI
128
128
4
1
samplerNearestNoMipmap
)
;
var
tex2DArrayMipmapFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA8
128
128
4
8
samplerLinearMipmap
)
;
var
tex2DArrayMipmapFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA16F
128
128
4
8
samplerLinearMipmap
)
;
var
tex2DArrayMipmapInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA8I
128
128
4
8
samplerNearestMipmap
)
;
var
tex2DArrayMipmapUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA8UI
128
128
4
8
samplerNearestMipmap
)
;
var
tex2DArrayShadow
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
DEPTH_COMPONENT16
128
128
4
1
samplerShadowNoMipmap
)
;
var
tex2DArrayMipmapShadow
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
DEPTH_COMPONENT16
128
128
4
8
samplerShadowMipmap
)
;
var
tex2DArrayTexelFetchFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA8
128
128
4
8
samplerTexelFetch
)
;
var
tex2DArrayTexelFetchFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA16F
128
128
4
8
samplerTexelFetch
)
;
var
tex2DArrayTexelFetchInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA8I
128
128
4
8
samplerTexelFetch
)
;
var
tex2DArrayTexelFetchUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_2D_ARRAY
gl
.
RGBA8UI
128
128
4
8
samplerTexelFetch
)
;
var
tex3DFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA8
64
32
32
1
samplerLinearNoMipmap
)
;
var
tex3DFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA16F
64
32
32
1
samplerLinearNoMipmap
)
;
var
tex3DInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA8I
64
32
32
1
samplerNearestNoMipmap
)
;
var
tex3DUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA8UI
64
32
32
1
samplerNearestNoMipmap
)
;
var
tex3DMipmapFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA8
64
32
32
7
samplerLinearMipmap
)
;
var
tex3DMipmapFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA16F
64
32
32
7
samplerLinearMipmap
)
;
var
tex3DMipmapInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA8I
64
32
32
7
samplerNearestMipmap
)
;
var
tex3DMipmapUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA8UI
64
32
32
7
samplerNearestMipmap
)
;
var
tex3DTexelFetchFixed
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA8
64
32
32
7
samplerTexelFetch
)
;
var
tex3DTexelFetchFloat
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA16F
64
32
32
7
samplerTexelFetch
)
;
var
tex3DTexelFetchInt
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA8I
64
32
32
7
samplerTexelFetch
)
;
var
tex3DTexelFetchUint
=
new
es3fShaderTextureFunctionTests
.
TextureSpec
(
es3fShaderTextureFunctionTests
.
TextureType
.
TEXTURETYPE_3D
gl
.
RGBA8UI
64
32
32
7
samplerTexelFetch
)
;
var
testGroup
=
tcuTestCase
.
runner
.
testCases
;
var
textureCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DFixed
es3fShaderTextureFunctionTests
.
evalTexture2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DFloat
es3fShaderTextureFunctionTests
.
evalTexture2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DInt
es3fShaderTextureFunctionTests
.
evalTexture2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DUint
es3fShaderTextureFunctionTests
.
evalTexture2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercube_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeFixed
es3fShaderTextureFunctionTests
.
evalTextureCube
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercube_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeMipmapFixed
es3fShaderTextureFunctionTests
.
evalTextureCube
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercube_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeFloat
es3fShaderTextureFunctionTests
.
evalTextureCube
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercube_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeMipmapFloat
es3fShaderTextureFunctionTests
.
evalTextureCube
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isamplercube
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeInt
es3fShaderTextureFunctionTests
.
evalTextureCube
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isamplercube
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeMipmapInt
es3fShaderTextureFunctionTests
.
evalTextureCube
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usamplercube
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeUint
es3fShaderTextureFunctionTests
.
evalTextureCube
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usamplercube
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeMipmapUint
es3fShaderTextureFunctionTests
.
evalTextureCube
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercube_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
texCubeMipmapFixed
es3fShaderTextureFunctionTests
.
evalTextureCubeBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercube_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
texCubeMipmapFloat
es3fShaderTextureFunctionTests
.
evalTextureCubeBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isamplercube_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
texCubeMipmapInt
es3fShaderTextureFunctionTests
.
evalTextureCubeBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usamplercube_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
texCubeMipmapUint
es3fShaderTextureFunctionTests
.
evalTextureCubeBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayInt
es3fShaderTextureFunctionTests
.
evalTexture2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayUint
es3fShaderTextureFunctionTests
.
evalTexture2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DArrayMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArrayBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DArrayMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArrayBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DArrayMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DArrayBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DArrayMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DArrayBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DFixed
es3fShaderTextureFunctionTests
.
evalTexture3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DFloat
es3fShaderTextureFunctionTests
.
evalTexture3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DInt
es3fShaderTextureFunctionTests
.
evalTexture3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DUint
es3fShaderTextureFunctionTests
.
evalTexture3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
true
-
2
.
0
1
.
0
false
[
0
0
0
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
true
-
2
.
0
1
.
0
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadow
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadow
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercubeshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
1
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeShadow
es3fShaderTextureFunctionTests
.
evalTextureCubeShadow
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercubeshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
1
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
texCubeMipmapShadow
es3fShaderTextureFunctionTests
.
evalTextureCubeShadow
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercubeshadow_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
1
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
texCubeMipmapShadow
es3fShaderTextureFunctionTests
.
evalTextureCubeShadowBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darrayshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
1
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayShadow
es3fShaderTextureFunctionTests
.
evalTexture2DArrayShadow
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darrayshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
1
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DArrayShadow
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
texture
'
'
texture
(
)
Tests
'
textureCases
)
;
var
textureOffsetCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DFixed
es3fShaderTextureFunctionTests
.
evalTexture2DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DFloat
es3fShaderTextureFunctionTests
.
evalTexture2DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DInt
es3fShaderTextureFunctionTests
.
evalTexture2DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DUint
es3fShaderTextureFunctionTests
.
evalTexture2DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DFixed
es3fShaderTextureFunctionTests
.
evalTexture2DOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
true
-
2
.
0
2
.
0
true
[
7
-
8
0
]
tex2DFloat
es3fShaderTextureFunctionTests
.
evalTexture2DOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DInt
es3fShaderTextureFunctionTests
.
evalTexture2DOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
true
-
2
.
0
2
.
0
true
[
7
-
8
0
]
tex2DUint
es3fShaderTextureFunctionTests
.
evalTexture2DOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DArrayFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DArrayMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DArrayFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DArrayMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DArrayInt
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DArrayMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DArrayUint
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DArrayMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DArrayFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
true
-
2
.
0
2
.
0
true
[
7
-
8
0
]
tex2DArrayFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DArrayInt
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
true
-
2
.
0
2
.
0
true
[
7
-
8
0
]
tex2DArrayUint
es3fShaderTextureFunctionTests
.
evalTexture2DArrayOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
3
]
tex3DFixed
es3fShaderTextureFunctionTests
.
evalTexture3DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
true
[
7
3
-
8
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
true
[
3
-
8
7
]
tex3DFloat
es3fShaderTextureFunctionTests
.
evalTexture3DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
3
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
true
[
7
3
-
8
]
tex3DInt
es3fShaderTextureFunctionTests
.
evalTexture3DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
true
[
3
-
8
7
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
3
]
tex3DUint
es3fShaderTextureFunctionTests
.
evalTexture3DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
0
.
0
0
.
0
true
[
7
3
-
8
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
true
-
2
.
0
1
.
0
true
[
-
8
7
3
]
tex3DFixed
es3fShaderTextureFunctionTests
.
evalTexture3DOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
true
-
2
.
0
1
.
0
true
[
7
3
-
8
]
tex3DFloat
es3fShaderTextureFunctionTests
.
evalTexture3DOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
true
-
2
.
0
2
.
0
true
[
3
-
8
7
]
tex3DInt
es3fShaderTextureFunctionTests
.
evalTexture3DOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
true
-
2
.
0
2
.
0
true
[
-
8
7
3
]
tex3DUint
es3fShaderTextureFunctionTests
.
evalTexture3DOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURE
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
textureoffset
'
'
textureOffset
(
)
Tests
'
textureOffsetCases
)
;
var
textureProjCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProj3
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProj3
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProj3
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProj3
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DInt
es3fShaderTextureFunctionTests
.
evalTexture2DProj3
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProj3
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DUint
es3fShaderTextureFunctionTests
.
evalTexture2DProj3
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProj3
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Bias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Bias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec3_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Bias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec3_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Bias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DInt
es3fShaderTextureFunctionTests
.
evalTexture2DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DUint
es3fShaderTextureFunctionTests
.
evalTexture2DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec4_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec4_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DInt
es3fShaderTextureFunctionTests
.
evalTexture3DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DUint
es3fShaderTextureFunctionTests
.
evalTexture3DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
true
-
2
.
0
1
.
0
false
[
0
0
0
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProjBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
true
-
2
.
0
1
.
0
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DProjBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
2
0
.
6
0
.
0
1
.
5
]
[
-
2
.
25
-
3
.
45
1
.
5
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
2
0
.
6
0
.
0
1
.
5
]
[
-
2
.
25
-
3
.
45
1
.
5
1
.
5
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProj
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
2
0
.
6
0
.
0
1
.
5
]
[
-
2
.
25
-
3
.
45
1
.
5
1
.
5
]
true
-
2
.
0
2
.
0
false
[
0
0
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
textureproj
'
'
textureProj
(
)
Tests
'
textureProjCases
)
;
var
textureProjOffsetCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DInt
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DUint
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProj3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProj3OffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
true
-
2
.
0
2
.
0
true
[
7
-
8
0
]
tex2DFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProj3OffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec3_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DInt
es3fShaderTextureFunctionTests
.
evalTexture2DProj3OffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec3_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
true
-
2
.
0
2
.
0
true
[
7
-
8
0
]
tex2DUint
es3fShaderTextureFunctionTests
.
evalTexture2DProj3OffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
true
-
2
.
0
2
.
0
true
[
7
-
8
0
]
tex2DFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec4_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec4_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
true
-
2
.
0
2
.
0
true
[
7
-
8
0
]
tex2DUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
true
[
-
8
7
3
]
tex3DFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
true
[
7
3
-
8
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
true
[
3
-
8
7
]
tex3DFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
true
[
-
8
7
3
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
true
[
7
3
-
8
]
tex3DInt
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
true
[
3
-
8
7
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
true
[
-
8
7
3
]
tex3DUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
0
.
0
0
.
0
true
[
7
3
-
8
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_bias_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
true
-
2
.
0
2
.
0
true
[
-
8
7
3
]
tex3DFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_bias_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
true
-
2
.
0
2
.
0
true
[
7
3
-
8
]
tex3DFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
true
-
2
.
0
2
.
0
true
[
3
-
8
7
]
tex3DInt
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
true
-
2
.
0
2
.
0
true
[
-
8
7
3
]
tex3DUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
2
0
.
6
0
.
0
1
.
5
]
[
-
2
.
25
-
3
.
45
1
.
5
1
.
5
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
2
0
.
6
0
.
0
1
.
5
]
[
-
2
.
25
-
3
.
45
1
.
5
1
.
5
]
false
0
.
0
0
.
0
true
[
7
-
8
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow_bias
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJ
[
0
.
2
0
.
6
0
.
0
1
.
5
]
[
-
2
.
25
-
3
.
45
1
.
5
1
.
5
]
true
-
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjOffsetBias
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
textureprojoffset
'
'
textureOffsetProj
(
)
Tests
'
textureProjOffsetCases
)
;
var
textureLodCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercube_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
texCubeMipmapFixed
es3fShaderTextureFunctionTests
.
evalTextureCubeLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
samplercube_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
texCubeMipmapFloat
es3fShaderTextureFunctionTests
.
evalTextureCubeLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isamplercube
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
texCubeMipmapInt
es3fShaderTextureFunctionTests
.
evalTextureCubeLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usamplercube
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
texCubeMipmapUint
es3fShaderTextureFunctionTests
.
evalTextureCubeLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
-
1
.
0
8
.
0
false
[
0
0
0
]
tex2DArrayMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
-
1
.
0
8
.
0
false
[
0
0
0
]
tex2DArrayMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
-
1
.
0
8
.
0
false
[
0
0
0
]
tex2DArrayMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
-
1
.
0
8
.
0
false
[
0
0
0
]
tex2DArrayMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
-
1
.
0
7
.
0
false
[
0
0
0
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
-
1
.
0
7
.
0
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
-
1
.
0
7
.
0
false
[
0
0
0
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
-
1
.
0
7
.
0
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
texturelod
'
'
textureLod
(
)
Tests
'
textureLodCases
)
;
var
textureLodOffsetCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
-
1
.
0
9
.
0
true
[
-
8
7
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
-
1
.
0
9
.
0
true
[
7
-
8
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
-
1
.
0
9
.
0
true
[
-
8
7
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
false
-
1
.
0
9
.
0
true
[
7
-
8
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
-
1
.
0
8
.
0
true
[
-
8
7
0
]
tex2DArrayMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
-
1
.
0
8
.
0
true
[
7
-
8
0
]
tex2DArrayMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
-
1
.
0
8
.
0
true
[
-
8
7
0
]
tex2DArrayMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
false
-
1
.
0
8
.
0
true
[
7
-
8
0
]
tex2DArrayMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DArrayLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
-
1
.
0
7
.
0
true
[
-
8
7
3
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
-
1
.
0
7
.
0
true
[
7
3
-
8
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
-
1
.
0
7
.
0
true
[
3
-
8
7
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
false
-
1
.
0
7
.
0
true
[
-
8
7
3
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTURELOD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
false
-
1
.
0
9
.
0
true
[
-
8
7
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
texturelodoffset
'
'
textureLodOffset
(
)
Tests
'
textureLodOffsetCases
)
;
var
textureProjLodCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
-
1
.
0
7
.
0
false
[
0
0
0
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProjLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
-
1
.
0
7
.
0
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
-
1
.
0
7
.
0
false
[
0
0
0
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DProjLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
-
1
.
0
7
.
0
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
2
0
.
6
0
.
0
1
.
5
]
[
-
2
.
25
-
3
.
45
1
.
5
1
.
5
]
false
-
1
.
0
9
.
0
false
[
0
0
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjLod
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
textureprojlod
'
'
textureProjLod
(
)
Tests
'
textureProjLodCases
)
;
var
textureProjLodOffsetCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
-
1
.
0
9
.
0
true
[
-
8
7
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec3_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
-
1
.
0
9
.
0
true
[
7
-
8
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
-
1
.
0
9
.
0
true
[
-
8
7
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
false
-
1
.
0
9
.
0
true
[
7
-
8
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjLod3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
-
1
.
0
9
.
0
true
[
-
8
7
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_vec4_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
-
1
.
0
9
.
0
true
[
7
-
8
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
-
1
.
0
9
.
0
true
[
-
8
7
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
false
-
1
.
0
9
.
0
true
[
7
-
8
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
-
1
.
0
7
.
0
true
[
-
8
7
3
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProjLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
-
1
.
0
7
.
0
true
[
7
3
-
8
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
-
1
.
0
7
.
0
true
[
3
-
8
7
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DProjLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
false
-
1
.
0
7
.
0
true
[
-
8
7
3
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJLOD
[
0
.
2
0
.
6
0
.
0
1
.
5
]
[
-
2
.
25
-
3
.
45
1
.
5
1
.
5
]
false
-
1
.
0
9
.
0
true
[
-
8
7
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjLodOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
textureprojlodoffset
'
'
textureProjLodOffset
(
)
Tests
'
textureProjLodOffsetCases
)
;
var
textureGradCases
=
[
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
samplercube_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
texCubeMipmapFixed
es3fShaderTextureFunctionTests
.
evalTextureCubeGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
samplercube_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
texCubeMipmapFloat
es3fShaderTextureFunctionTests
.
evalTextureCubeGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isamplercube
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
false
[
0
0
0
]
texCubeMipmapInt
es3fShaderTextureFunctionTests
.
evalTextureCubeGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usamplercube
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
0
-
1
.
0
-
1
.
01
0
.
0
]
[
1
.
0
1
.
0
-
1
.
01
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
false
[
0
0
0
]
texCubeMipmapUint
es3fShaderTextureFunctionTests
.
evalTextureCubeGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DArrayMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DArrayMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DArrayMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
false
[
0
0
0
]
tex2DArrayMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
2
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
false
[
0
0
0
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
-
0
.
2
]
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
samplercubeshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
0
-
1
.
0
1
.
01
0
.
0
]
[
1
.
0
1
.
0
1
.
01
1
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
texCubeMipmapShadow
es3fShaderTextureFunctionTests
.
evalTextureCubeShadowGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2darrayshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
1
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DArrayMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DArrayShadowGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2darrayshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
1
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
false
[
0
0
0
]
tex2DArrayMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DArrayShadowGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
texturegrad
'
'
textureGrad
(
)
Tests
'
textureGradCases
)
;
var
textureGradOffsetCases
=
[
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
7
-
8
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
true
[
7
-
8
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DArrayMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
7
-
8
0
]
tex2DArrayMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DArrayMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
true
[
7
-
8
0
]
tex2DArrayMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DArrayGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
-
8
7
3
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
7
3
-
8
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
2
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
3
-
8
7
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
true
[
-
8
7
3
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
true
[
7
3
-
8
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
1
.
4
0
.
1
0
.
0
]
[
1
.
5
2
.
3
2
.
3
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
-
0
.
2
]
true
[
3
-
8
7
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
0
.
2
-
0
.
4
0
.
0
0
.
0
]
[
1
.
5
2
.
3
1
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
7
-
8
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2darrayshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
1
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DArrayMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DArrayShadowGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2darrayshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREGRAD
[
-
1
.
2
-
0
.
4
-
0
.
5
0
.
0
]
[
1
.
5
2
.
3
3
.
5
1
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
true
[
7
-
8
0
]
tex2DArrayMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DArrayShadowGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
texturegradoffset
'
'
textureGradOffset
(
)
Tests
'
textureGradOffsetCases
)
;
var
textureProjGradCases
=
[
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_vec3_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_vec3_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_vec4_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_vec4_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
false
[
0
0
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
2
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
false
[
0
0
0
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
-
0
.
2
]
false
[
0
0
0
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
2
0
.
6
0
.
0
-
1
.
5
]
[
-
2
.
25
-
3
.
45
-
1
.
5
-
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
false
[
0
0
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
2
0
.
6
0
.
0
-
1
.
5
]
[
-
2
.
25
-
3
.
45
-
1
.
5
-
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
false
[
0
0
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjGrad
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
textureprojgrad
'
'
textureProjGrad
(
)
Tests
'
textureProjGradCases
)
;
var
textureProjGradOffsetCases
=
[
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_vec3_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_vec3_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
7
-
8
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler2d_vec3
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD3
[
-
0
.
3
-
0
.
6
1
.
5
0
.
0
]
[
2
.
25
3
.
45
1
.
5
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
true
[
7
-
8
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjGrad3Offset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_vec4_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture2DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2d_vec4_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
7
-
8
0
]
tex2DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture2DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture2DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler2d_vec4
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
-
0
.
3
-
0
.
6
0
.
0
1
.
5
]
[
2
.
25
3
.
45
0
.
0
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
true
[
7
-
8
0
]
tex2DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture2DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
-
8
7
3
]
tex3DMipmapFixed
es3fShaderTextureFunctionTests
.
evalTexture3DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
7
3
-
8
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
2
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
3
-
8
7
]
tex3DMipmapFloat
es3fShaderTextureFunctionTests
.
evalTexture3DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
-
0
.
2
0
.
0
0
.
0
]
true
[
-
8
7
3
]
tex3DMipmapInt
es3fShaderTextureFunctionTests
.
evalTexture3DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
2
0
.
0
]
true
[
7
3
-
8
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
9
1
.
05
-
0
.
08
-
0
.
75
]
[
-
1
.
13
-
1
.
7
-
1
.
7
-
0
.
75
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
-
0
.
2
]
true
[
3
-
8
7
]
tex3DMipmapUint
es3fShaderTextureFunctionTests
.
evalTexture3DProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
2
0
.
6
0
.
0
-
1
.
5
]
[
-
2
.
25
-
3
.
45
-
1
.
5
-
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
2
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
true
[
-
8
7
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
VERTEX
)
es3fShaderTextureFunctionTests
.
getGradCaseSpec
(
'
sampler2dshadow
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXTUREPROJGRAD
[
0
.
2
0
.
6
0
.
0
-
1
.
5
]
[
-
2
.
25
-
3
.
45
-
1
.
5
-
1
.
5
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
0
.
0
0
.
0
]
[
0
.
0
-
0
.
2
0
.
0
]
true
[
7
-
8
0
]
tex2DMipmapShadow
es3fShaderTextureFunctionTests
.
evalTexture2DShadowProjGradOffset
es3fShaderTextureFunctionTests
.
CaseFlags
.
FRAGMENT
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
textureprojgradoffset
'
'
textureProjGradOffset
(
)
Tests
'
textureProjGradOffsetCases
)
;
var
texelFetchCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
255
.
9
255
.
9
0
.
0
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DTexelFetchFixed
es3fShaderTextureFunctionTests
.
evalTexelFetch2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
127
.
9
127
.
9
0
.
0
0
.
0
]
false
1
.
0
1
.
0
false
[
0
0
0
]
tex2DTexelFetchFloat
es3fShaderTextureFunctionTests
.
evalTexelFetch2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
63
.
9
63
.
9
0
.
0
0
.
0
]
false
2
.
0
2
.
0
false
[
0
0
0
]
tex2DTexelFetchInt
es3fShaderTextureFunctionTests
.
evalTexelFetch2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
15
.
9
15
.
9
0
.
0
0
.
0
]
false
4
.
0
4
.
0
false
[
0
0
0
]
tex2DTexelFetchUint
es3fShaderTextureFunctionTests
.
evalTexelFetch2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
127
.
9
127
.
9
3
.
9
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex2DArrayTexelFetchFixed
es3fShaderTextureFunctionTests
.
evalTexelFetch2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
63
.
9
63
.
9
3
.
9
0
.
0
]
false
1
.
0
1
.
0
false
[
0
0
0
]
tex2DArrayTexelFetchFloat
es3fShaderTextureFunctionTests
.
evalTexelFetch2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
31
.
9
31
.
9
3
.
9
0
.
0
]
false
2
.
0
2
.
0
false
[
0
0
0
]
tex2DArrayTexelFetchInt
es3fShaderTextureFunctionTests
.
evalTexelFetch2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
15
.
9
15
.
9
3
.
9
0
.
0
]
false
3
.
0
3
.
0
false
[
0
0
0
]
tex2DArrayTexelFetchUint
es3fShaderTextureFunctionTests
.
evalTexelFetch2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
63
.
9
31
.
9
31
.
9
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DTexelFetchFixed
es3fShaderTextureFunctionTests
.
evalTexelFetch3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
31
.
9
15
.
9
15
.
9
0
.
0
]
false
1
.
0
1
.
0
false
[
0
0
0
]
tex3DTexelFetchFloat
es3fShaderTextureFunctionTests
.
evalTexelFetch3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
15
.
9
7
.
9
7
.
9
0
.
0
]
false
2
.
0
2
.
0
false
[
0
0
0
]
tex3DTexelFetchInt
es3fShaderTextureFunctionTests
.
evalTexelFetch3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
0
.
0
0
.
0
0
.
0
0
.
0
]
[
63
.
9
31
.
9
31
.
9
0
.
0
]
false
0
.
0
0
.
0
false
[
0
0
0
]
tex3DTexelFetchUint
es3fShaderTextureFunctionTests
.
evalTexelFetch3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
texelfetch
'
'
texelFetch
(
)
Tests
'
texelFetchCases
)
;
var
texelFetchOffsetCases
=
[
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
8
.
0
-
7
.
0
0
.
0
0
.
0
]
[
263
.
9
248
.
9
0
.
0
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DTexelFetchFixed
es3fShaderTextureFunctionTests
.
evalTexelFetch2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
-
7
.
0
8
.
0
0
.
0
0
.
0
]
[
120
.
9
135
.
9
0
.
0
0
.
0
]
false
1
.
0
1
.
0
true
[
7
-
8
0
]
tex2DTexelFetchFloat
es3fShaderTextureFunctionTests
.
evalTexelFetch2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
8
.
0
-
7
.
0
0
.
0
0
.
0
]
[
71
.
9
56
.
9
0
.
0
0
.
0
]
false
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DTexelFetchInt
es3fShaderTextureFunctionTests
.
evalTexelFetch2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
-
7
.
0
8
.
0
0
.
0
0
.
0
]
[
8
.
9
23
.
9
0
.
0
0
.
0
]
false
4
.
0
4
.
0
true
[
7
-
8
0
]
tex2DTexelFetchUint
es3fShaderTextureFunctionTests
.
evalTexelFetch2D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
8
.
0
-
7
.
0
0
.
0
0
.
0
]
[
135
.
9
120
.
9
3
.
9
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
0
]
tex2DArrayTexelFetchFixed
es3fShaderTextureFunctionTests
.
evalTexelFetch2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler2darray_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
-
7
.
0
8
.
0
0
.
0
0
.
0
]
[
56
.
9
71
.
9
3
.
9
0
.
0
]
false
1
.
0
1
.
0
true
[
7
-
8
0
]
tex2DArrayTexelFetchFloat
es3fShaderTextureFunctionTests
.
evalTexelFetch2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
8
.
0
-
7
.
0
0
.
0
0
.
0
]
[
39
.
9
24
.
9
3
.
9
0
.
0
]
false
2
.
0
2
.
0
true
[
-
8
7
0
]
tex2DArrayTexelFetchInt
es3fShaderTextureFunctionTests
.
evalTexelFetch2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler2darray
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
-
7
.
0
8
.
0
0
.
0
0
.
0
]
[
8
.
9
23
.
9
3
.
9
0
.
0
]
false
3
.
0
3
.
0
true
[
7
-
8
0
]
tex2DArrayTexelFetchUint
es3fShaderTextureFunctionTests
.
evalTexelFetch2DArray
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_fixed
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
8
.
0
-
7
.
0
-
3
.
0
0
.
0
]
[
71
.
9
24
.
9
28
.
9
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
3
]
tex3DTexelFetchFixed
es3fShaderTextureFunctionTests
.
evalTexelFetch3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
sampler3d_float
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
-
7
.
0
-
3
.
0
8
.
0
0
.
0
]
[
24
.
9
12
.
9
23
.
9
0
.
0
]
false
1
.
0
1
.
0
true
[
7
3
-
8
]
tex3DTexelFetchFloat
es3fShaderTextureFunctionTests
.
evalTexelFetch3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
isampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
-
3
.
0
8
.
0
-
7
.
0
0
.
0
]
[
12
.
9
15
.
9
0
.
9
0
.
0
]
false
2
.
0
2
.
0
true
[
3
-
8
7
]
tex3DTexelFetchInt
es3fShaderTextureFunctionTests
.
evalTexelFetch3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
es3fShaderTextureFunctionTests
.
getCaseSpec
(
'
usampler3d
'
es3fShaderTextureFunctionTests
.
TexFunction
.
TEXELFETCH
[
8
.
0
-
7
.
0
-
3
.
0
0
.
0
]
[
71
.
9
24
.
9
28
.
9
0
.
0
]
false
0
.
0
0
.
0
true
[
-
8
7
3
]
tex3DTexelFetchUint
es3fShaderTextureFunctionTests
.
evalTexelFetch3D
es3fShaderTextureFunctionTests
.
CaseFlags
.
BOTH
)
]
;
es3fShaderTextureFunctionTests
.
createCaseGroup
(
this
'
texelfetchoffset
'
'
texelFetchOffset
(
)
Tests
'
texelFetchOffsetCases
)
;
var
TextureSizeCaseSpec
=
function
(
name
samplerName
textureSpec
)
{
this
.
name
=
name
;
this
.
samplerName
=
samplerName
;
this
.
textureSpec
=
textureSpec
;
}
;
var
textureSizeCases
=
[
new
TextureSizeCaseSpec
(
'
sampler2d_fixed
'
'
sampler2D
'
tex2DFixed
)
new
TextureSizeCaseSpec
(
'
sampler2d_float
'
'
sampler2D
'
tex2DFloat
)
new
TextureSizeCaseSpec
(
'
isampler2d
'
'
isampler2D
'
tex2DInt
)
new
TextureSizeCaseSpec
(
'
usampler2d
'
'
usampler2D
'
tex2DUint
)
new
TextureSizeCaseSpec
(
'
sampler2dshadow
'
'
sampler2DShadow
'
tex2DShadow
)
new
TextureSizeCaseSpec
(
'
sampler3d_fixed
'
'
sampler3D
'
tex3DFixed
)
new
TextureSizeCaseSpec
(
'
sampler3d_float
'
'
sampler3D
'
tex3DFloat
)
new
TextureSizeCaseSpec
(
'
isampler3d
'
'
isampler3D
'
tex3DInt
)
new
TextureSizeCaseSpec
(
'
usampler3d
'
'
usampler3D
'
tex3DUint
)
new
TextureSizeCaseSpec
(
'
samplercube_fixed
'
'
samplerCube
'
texCubeFixed
)
new
TextureSizeCaseSpec
(
'
samplercube_float
'
'
samplerCube
'
texCubeFloat
)
new
TextureSizeCaseSpec
(
'
isamplercube
'
'
isamplerCube
'
texCubeInt
)
new
TextureSizeCaseSpec
(
'
usamplercube
'
'
usamplerCube
'
texCubeUint
)
new
TextureSizeCaseSpec
(
'
samplercubeshadow
'
'
samplerCubeShadow
'
texCubeShadow
)
new
TextureSizeCaseSpec
(
'
sampler2darray_fixed
'
'
sampler2DArray
'
tex2DArrayFixed
)
new
TextureSizeCaseSpec
(
'
sampler2darray_float
'
'
sampler2DArray
'
tex2DArrayFloat
)
new
TextureSizeCaseSpec
(
'
isampler2darray
'
'
isampler2DArray
'
tex2DArrayInt
)
new
TextureSizeCaseSpec
(
'
usampler2darray
'
'
usampler2DArray
'
tex2DArrayUint
)
new
TextureSizeCaseSpec
(
'
sampler2darrayshadow
'
'
sampler2DArrayShadow
'
tex2DArrayShadow
)
]
;
var
group
=
tcuTestCase
.
newTest
(
'
texturesize
'
'
textureSize
(
)
Tests
'
)
;
testGroup
.
addChild
(
group
)
;
for
(
var
ndx
=
0
;
ndx
<
textureSizeCases
.
length
;
+
+
ndx
)
{
group
.
addChild
(
new
es3fShaderTextureFunctionTests
.
TextureSizeCase
(
textureSizeCases
[
ndx
]
.
name
+
'
_vertex
'
'
'
textureSizeCases
[
ndx
]
.
samplerName
textureSizeCases
[
ndx
]
.
textureSpec
true
)
)
;
group
.
addChild
(
new
es3fShaderTextureFunctionTests
.
TextureSizeCase
(
textureSizeCases
[
ndx
]
.
name
+
'
_fragment
'
'
'
textureSizeCases
[
ndx
]
.
samplerName
textureSizeCases
[
ndx
]
.
textureSpec
false
)
)
;
}
}
;
es3fShaderTextureFunctionTests
.
run
=
function
(
context
range
)
{
gl
=
context
;
var
state
=
tcuTestCase
.
runner
;
state
.
setRoot
(
new
es3fShaderTextureFunctionTests
.
ShaderTextureFunctionTests
(
)
)
;
if
(
range
)
state
.
setRange
(
range
)
;
setCurrentTestName
(
state
.
testCases
.
fullName
(
)
)
;
description
(
state
.
testCases
.
getDescription
(
)
)
;
try
{
tcuTestCase
.
runTestCases
(
)
;
}
catch
(
err
)
{
testFailedOptions
(
'
Failed
to
es3fShaderTextureFunctionTests
.
run
tests
'
false
)
;
tcuTestCase
.
runner
.
terminate
(
)
;
}
}
;
}
)
;
