'
use
strict
'
;
goog
.
provide
(
'
functional
.
gles3
.
es3fBuiltinPrecisionTests
'
)
;
goog
.
require
(
'
framework
.
common
.
tcuTestCase
'
)
;
goog
.
require
(
'
framework
.
opengl
.
gluShaderProgram
'
)
;
goog
.
require
(
'
modules
.
shared
.
glsBuiltinPrecisionTests
'
)
;
goog
.
scope
(
function
(
)
{
var
es3fBuiltinPrecisionTests
=
functional
.
gles3
.
es3fBuiltinPrecisionTests
;
var
glsBuiltinPrecisionTests
=
modules
.
shared
.
glsBuiltinPrecisionTests
;
var
tcuTestCase
=
framework
.
common
.
tcuTestCase
;
var
gluShaderProgram
=
framework
.
opengl
.
gluShaderProgram
;
es3fBuiltinPrecisionTests
.
createBuiltinPrecisionTests
=
function
(
context
caseId
)
{
var
group
=
tcuTestCase
.
newTest
(
'
precision
'
'
Builtin
precision
tests
'
)
;
var
shaderTypes
=
[
]
;
var
es3Cases
=
glsBuiltinPrecisionTests
.
createES3BuiltinCases
(
caseId
)
;
shaderTypes
.
push
(
gluShaderProgram
.
shaderType
.
VERTEX
)
;
shaderTypes
.
push
(
gluShaderProgram
.
shaderType
.
FRAGMENT
)
;
glsBuiltinPrecisionTests
.
addBuiltinPrecisionTests
(
es3Cases
shaderTypes
group
)
;
return
group
;
}
;
es3fBuiltinPrecisionTests
.
run
=
function
(
context
caseId
)
{
gl
=
context
;
var
state
=
tcuTestCase
.
runner
;
var
test
=
es3fBuiltinPrecisionTests
.
createBuiltinPrecisionTests
(
context
caseId
)
;
var
testName
=
test
.
fullName
(
)
;
var
testDescription
=
test
.
getDescription
(
)
=
=
=
undefined
?
'
'
:
test
.
getDescription
(
)
;
state
.
testName
=
testName
;
state
.
setRoot
(
test
)
;
setCurrentTestName
(
testName
)
;
description
(
testDescription
)
;
try
{
test
.
init
(
)
;
tcuTestCase
.
runTestCases
(
)
;
}
catch
(
err
)
{
bufferedLogToConsole
(
'
Exception
:
'
+
err
)
;
testFailedOptions
(
'
Failed
to
es3fAttribLocationTests
.
run
tests
'
false
)
;
tcuTestCase
.
runner
.
terminate
(
)
;
}
}
;
}
)
;
