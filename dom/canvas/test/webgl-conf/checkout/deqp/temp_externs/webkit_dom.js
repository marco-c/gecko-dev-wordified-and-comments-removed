Element
.
prototype
.
scrollIntoViewIfNeeded
=
function
(
opt_center
)
{
}
;
function
MemoryInfo
(
)
{
}
;
MemoryInfo
.
prototype
.
totalJSHeapSize
;
MemoryInfo
.
prototype
.
usedJSHeapSize
;
MemoryInfo
.
prototype
.
jsHeapSizeLimit
;
function
ScriptProfileNode
(
)
{
}
;
ScriptProfileNode
.
prototype
.
functionName
;
ScriptProfileNode
.
prototype
.
url
;
ScriptProfileNode
.
prototype
.
lineNumber
;
ScriptProfileNode
.
prototype
.
totalTime
;
ScriptProfileNode
.
prototype
.
selfTime
;
ScriptProfileNode
.
prototype
.
numberOfCalls
;
ScriptProfileNode
.
prototype
.
children
;
ScriptProfileNode
.
prototype
.
visible
;
ScriptProfileNode
.
prototype
.
callUID
;
function
ScriptProfile
(
)
{
}
;
ScriptProfile
.
prototype
.
title
;
ScriptProfile
.
prototype
.
uid
;
ScriptProfile
.
prototype
.
head
;
function
Console
(
)
{
}
;
Console
.
prototype
.
assert
=
function
(
condition
var_args
)
{
}
;
Console
.
prototype
.
error
=
function
(
var_args
)
{
}
;
Console
.
prototype
.
info
=
function
(
var_args
)
{
}
;
Console
.
prototype
.
log
=
function
(
var_args
)
{
}
;
Console
.
prototype
.
warn
=
function
(
var_args
)
{
}
;
Console
.
prototype
.
debug
=
function
(
var_args
)
{
}
;
Console
.
prototype
.
dir
=
function
(
value
)
{
}
;
Console
.
prototype
.
dirxml
=
function
(
var_args
)
{
}
;
Console
.
prototype
.
table
=
function
(
data
opt_columns
)
{
}
;
Console
.
prototype
.
trace
=
function
(
)
{
}
;
Console
.
prototype
.
count
=
function
(
value
)
{
}
;
Console
.
prototype
.
markTimeline
=
function
(
value
)
{
}
;
Console
.
prototype
.
profile
=
function
(
opt_title
)
{
}
;
Console
.
prototype
.
profiles
;
Console
.
prototype
.
profileEnd
=
function
(
opt_title
)
{
}
;
Console
.
prototype
.
time
=
function
(
name
)
{
}
;
Console
.
prototype
.
timeEnd
=
function
(
name
)
{
}
;
Console
.
prototype
.
timeStamp
=
function
(
value
)
{
}
;
Console
.
prototype
.
group
=
function
(
var_args
)
{
}
;
Console
.
prototype
.
groupCollapsed
=
function
(
var_args
)
{
}
;
Console
.
prototype
.
groupEnd
=
function
(
)
{
}
;
Console
.
prototype
.
clear
=
function
(
)
{
}
;
Console
.
prototype
.
memory
;
Window
.
prototype
.
console
;
var
console
;
Window
.
prototype
.
devicePixelRatio
;
Selection
.
prototype
.
baseNode
;
Selection
.
prototype
.
baseOffset
;
Selection
.
prototype
.
extentNode
;
Selection
.
prototype
.
extentOffset
;
Selection
.
prototype
.
type
;
Selection
.
prototype
.
empty
=
function
(
)
{
}
;
Selection
.
prototype
.
setBaseAndExtent
=
function
(
baseNode
baseOffset
extentNode
extentOffset
)
{
}
;
Selection
.
prototype
.
modify
=
function
(
alter
direction
granularity
)
{
}
;
ViewCSS
.
prototype
.
getMatchedCSSRules
=
function
(
element
pseudoElement
opt_authorOnly
)
{
}
;
Document
.
prototype
.
getCSSCanvasContext
=
function
(
contextId
name
width
height
)
{
}
;
