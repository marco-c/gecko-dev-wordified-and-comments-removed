function
HTMLSpanElement
(
)
{
}
Window
.
prototype
.
Components
;
Window
.
prototype
.
content
;
Window
.
prototype
.
closed
;
Window
.
prototype
.
controllers
;
Window
.
prototype
.
crypto
;
Window
.
prototype
.
defaultStatus
;
Window
.
prototype
.
dialogArguments
;
Window
.
prototype
.
directories
;
Window
.
prototype
.
frameElement
;
Window
.
prototype
.
frames
;
Window
.
prototype
.
fullScreen
;
Window
.
prototype
.
globalStorage
;
Window
.
prototype
.
history
;
Window
.
prototype
.
length
;
Window
.
prototype
.
location
;
Window
.
prototype
.
locationbar
;
Window
.
prototype
.
menubar
;
Window
.
prototype
.
name
;
Window
.
prototype
.
navigator
;
Window
.
prototype
.
opener
;
Window
.
prototype
.
parent
;
Window
.
prototype
.
personalbar
;
Window
.
prototype
.
pkcs11
;
Window
.
prototype
.
returnValue
;
Window
.
prototype
.
scrollbars
;
Window
.
prototype
.
scrollMaxX
;
Window
.
prototype
.
scrollMaxY
;
Window
.
prototype
.
self
;
Window
.
prototype
.
sessionStorage
;
Window
.
prototype
.
sidebar
;
Window
.
prototype
.
status
;
Window
.
prototype
.
statusbar
;
Window
.
prototype
.
toolbar
;
Window
.
prototype
.
top
;
Window
.
prototype
.
window
;
Window
.
prototype
.
alert
=
function
(
message
)
{
}
;
function
atob
(
encodedData
)
{
}
Window
.
prototype
.
back
=
function
(
)
{
}
;
Window
.
prototype
.
blur
=
function
(
)
{
}
;
function
btoa
(
stringToEncode
)
{
}
Window
.
prototype
.
captureEvents
;
Window
.
prototype
.
close
=
function
(
)
{
}
;
Window
.
prototype
.
find
;
Window
.
prototype
.
focus
=
function
(
)
{
}
;
Window
.
prototype
.
forward
=
function
(
)
{
}
;
Window
.
prototype
.
getAttention
=
function
(
)
{
}
;
Window
.
prototype
.
getSelection
=
function
(
)
{
}
;
Window
.
prototype
.
home
=
function
(
)
{
}
;
Window
.
prototype
.
openDialog
;
Window
.
prototype
.
releaseEvents
;
Window
.
prototype
.
scrollByLines
;
Window
.
prototype
.
scrollByPages
;
Window
.
prototype
.
showModalDialog
;
Window
.
prototype
.
sizeToContent
;
Window
.
prototype
.
stop
=
function
(
)
{
}
;
Window
.
prototype
.
updateCommands
;
Document
.
prototype
.
alinkColor
;
Document
.
prototype
.
anchors
;
Document
.
prototype
.
applets
;
Document
.
prototype
.
async
;
Document
.
prototype
.
baseURI
;
Document
.
prototype
.
baseURIObject
;
Document
.
prototype
.
bgColor
;
Document
.
prototype
.
body
;
Document
.
prototype
.
characterSet
;
Document
.
prototype
.
compatMode
;
Document
.
prototype
.
contentType
;
Document
.
prototype
.
cookie
;
Document
.
prototype
.
defaultView
;
Document
.
prototype
.
designMode
;
Document
.
prototype
.
documentURIObject
;
Document
.
prototype
.
domain
;
Document
.
prototype
.
embeds
;
Document
.
prototype
.
fgColor
;
Document
.
prototype
.
firstChild
;
Document
.
prototype
.
forms
;
Document
.
prototype
.
height
;
Document
.
prototype
.
images
;
Document
.
prototype
.
lastModified
;
Document
.
prototype
.
linkColor
;
Document
.
prototype
.
links
;
Document
.
prototype
.
location
;
Document
.
prototype
.
namespaceURI
;
Document
.
prototype
.
nodePrincipal
;
Document
.
prototype
.
plugins
;
Document
.
prototype
.
popupNode
;
Document
.
prototype
.
referrer
;
Document
.
prototype
.
styleSheets
;
Document
.
prototype
.
title
;
Document
.
prototype
.
tooltipNode
;
Document
.
prototype
.
URL
;
Document
.
prototype
.
vlinkColor
;
Document
.
prototype
.
width
;
Document
.
prototype
.
clear
=
function
(
)
{
}
;
Document
.
prototype
.
close
;
Document
.
prototype
.
createElementNS
=
function
(
namespaceURI
qualifiedName
opt_typeExtension
)
{
}
;
Document
.
prototype
.
createEvent
=
function
(
type
)
{
}
;
Document
.
prototype
.
createNSResolver
;
Document
.
prototype
.
createRange
=
function
(
)
{
}
;
Document
.
prototype
.
createTreeWalker
;
Document
.
prototype
.
evaluate
;
Document
.
prototype
.
execCommand
;
Document
.
prototype
.
getElementById
=
function
(
s
)
{
}
;
Document
.
prototype
.
getElementsByClassName
=
function
(
name
)
{
}
;
Document
.
prototype
.
getElementsByName
=
function
(
name
)
{
}
;
Document
.
prototype
.
getElementsByTagNameNS
=
function
(
namespace
name
)
{
}
;
Document
.
prototype
.
importNode
=
function
(
externalNode
deep
)
{
}
;
Document
.
prototype
.
load
=
function
(
uri
)
{
}
;
Document
.
prototype
.
open
;
Document
.
prototype
.
queryCommandEnabled
;
Document
.
prototype
.
queryCommandIndeterm
;
Document
.
prototype
.
queryCommandState
;
Document
.
prototype
.
queryCommandSupported
;
Document
.
prototype
.
queryCommandValue
;
Document
.
prototype
.
write
=
function
(
text
)
{
}
;
Document
.
prototype
.
writeln
=
function
(
text
)
{
}
;
Document
.
prototype
.
ononline
;
Document
.
prototype
.
onoffline
;
Document
.
prototype
.
getBoxObjectFor
=
function
(
element
)
{
}
;
Range
.
prototype
.
createContextualFragment
;
Range
.
prototype
.
isPointInRange
;
Range
.
prototype
.
comparePoint
;
Range
.
prototype
.
intersectsNode
;
Range
.
prototype
.
compareNode
;
function
Selection
(
)
{
}
Selection
.
prototype
.
anchorNode
;
Selection
.
prototype
.
anchorOffset
;
Selection
.
prototype
.
focusNode
;
Selection
.
prototype
.
focusOffset
;
Selection
.
prototype
.
isCollapsed
;
Selection
.
prototype
.
rangeCount
;
Selection
.
prototype
.
addRange
=
function
(
range
)
{
}
;
Selection
.
prototype
.
getRangeAt
=
function
(
index
)
{
}
;
Selection
.
prototype
.
collapse
=
function
(
node
index
)
{
}
;
Selection
.
prototype
.
collapseToEnd
=
function
(
)
{
}
;
Selection
.
prototype
.
collapseToStart
=
function
(
)
{
}
;
Selection
.
prototype
.
containsNode
=
function
(
node
partlyContained
)
{
}
;
Selection
.
prototype
.
deleteFromDocument
=
function
(
)
{
}
;
Selection
.
prototype
.
extend
=
function
(
parentNode
offset
)
{
}
;
Selection
.
prototype
.
removeAllRanges
=
function
(
)
{
}
;
Selection
.
prototype
.
removeRange
=
function
(
range
)
{
}
;
Selection
.
prototype
.
selectAllChildren
;
Selection
.
prototype
.
selectionLanguageChange
;
Element
.
prototype
.
attributes
;
Element
.
prototype
.
baseURIObject
;
Element
.
prototype
.
childNodes
;
Element
.
prototype
.
children
;
Element
.
prototype
.
className
;
Element
.
prototype
.
dir
;
Element
.
prototype
.
firebugIgnore
;
Element
.
prototype
.
firstChild
;
Element
.
prototype
.
id
;
Element
.
prototype
.
innerHTML
;
Element
.
prototype
.
lang
;
Element
.
prototype
.
lastChild
;
Element
.
prototype
.
localName
;
Element
.
prototype
.
name
;
Element
.
prototype
.
namespaceURI
;
Element
.
prototype
.
nextSibling
;
Element
.
prototype
.
nodeName
;
Element
.
prototype
.
nodePrincipal
;
Element
.
prototype
.
nodeType
;
Element
.
prototype
.
nodeValue
;
Element
.
prototype
.
ownerDocument
;
Element
.
prototype
.
parentNode
;
Element
.
prototype
.
prefix
;
Element
.
prototype
.
previousSibling
;
Element
.
prototype
.
style
;
Element
.
prototype
.
tabIndex
;
Element
.
prototype
.
textContent
;
Element
.
prototype
.
title
;
Element
.
prototype
.
appendChild
=
function
(
child
)
{
}
;
Element
.
prototype
.
cloneNode
=
function
(
deep
)
{
}
;
Element
.
prototype
.
dispatchEvent
=
function
(
event
)
{
}
;
Element
.
prototype
.
blur
=
function
(
)
{
}
;
Element
.
prototype
.
click
=
function
(
)
{
}
;
Element
.
prototype
.
focus
=
function
(
)
{
}
;
Element
.
prototype
.
hasAttributes
=
function
(
)
{
}
;
Element
.
prototype
.
hasChildNodes
=
function
(
)
{
}
;
Element
.
prototype
.
insertBefore
=
function
(
insertedNode
adjacentNode
)
{
}
;
Element
.
prototype
.
normalize
=
function
(
)
{
}
;
Element
.
prototype
.
removeChild
=
function
(
removedNode
)
{
}
;
Element
.
prototype
.
removeEventListener
=
function
(
type
handler
opt_useCapture
)
{
}
;
Element
.
prototype
.
replaceChild
=
function
(
insertedNode
replacedNode
)
{
}
;
HTMLInputElement
.
prototype
.
selectionStart
;
HTMLInputElement
.
prototype
.
selectionEnd
;
HTMLInputElement
.
prototype
.
setSelectionRange
=
function
(
selectionStart
selectionEnd
)
{
}
;
HTMLTextAreaElement
.
prototype
.
selectionStart
;
HTMLTextAreaElement
.
prototype
.
selectionEnd
;
HTMLTextAreaElement
.
prototype
.
setSelectionRange
=
function
(
selectionStart
selectionEnd
)
{
}
;
function
Navigator
(
)
{
}
Navigator
.
prototype
.
appCodeName
;
Navigator
.
prototype
.
appName
;
Navigator
.
prototype
.
appVersion
;
Navigator
.
prototype
.
buildID
;
Navigator
.
prototype
.
cookieEnabled
;
Navigator
.
prototype
.
language
;
Navigator
.
prototype
.
mimeTypes
;
Navigator
.
prototype
.
onLine
;
Navigator
.
prototype
.
oscpu
;
Navigator
.
prototype
.
platform
;
Navigator
.
prototype
.
plugins
;
Navigator
.
prototype
.
product
;
Navigator
.
prototype
.
productSub
;
Navigator
.
prototype
.
securityPolicy
;
Navigator
.
prototype
.
sendBeacon
=
function
(
url
opt_data
)
{
}
;
Navigator
.
prototype
.
userAgent
;
Navigator
.
prototype
.
vendor
;
Navigator
.
prototype
.
vendorSub
;
Navigator
.
prototype
.
javaEnabled
=
function
(
)
{
}
;
function
PluginArray
(
)
{
}
PluginArray
.
prototype
.
length
;
PluginArray
.
prototype
.
item
=
function
(
index
)
{
}
;
PluginArray
.
prototype
.
namedItem
=
function
(
name
)
{
}
;
PluginArray
.
prototype
.
refresh
=
function
(
reloadDocuments
)
{
}
;
function
MimeTypeArray
(
)
{
}
MimeTypeArray
.
prototype
.
item
=
function
(
index
)
{
}
;
MimeTypeArray
.
prototype
.
length
;
MimeTypeArray
.
prototype
.
namedItem
=
function
(
name
)
{
}
;
function
MimeType
(
)
{
}
MimeType
.
prototype
.
description
;
MimeType
.
prototype
.
enabledPlugin
;
MimeType
.
prototype
.
suffixes
;
MimeType
.
prototype
.
type
;
function
Plugin
(
)
{
}
Plugin
.
prototype
.
description
;
Plugin
.
prototype
.
filename
;
Plugin
.
prototype
.
length
;
Plugin
.
prototype
.
name
;
function
BoxObject
(
)
{
}
BoxObject
.
prototype
.
element
;
BoxObject
.
prototype
.
screenX
;
BoxObject
.
prototype
.
screenY
;
BoxObject
.
prototype
.
x
;
BoxObject
.
prototype
.
y
;
BoxObject
.
prototype
.
width
;
HTMLImageElement
.
prototype
.
naturalWidth
;
HTMLImageElement
.
prototype
.
naturalHeight
;
function
getComputedStyle
(
element
pseudoElt
)
{
}
