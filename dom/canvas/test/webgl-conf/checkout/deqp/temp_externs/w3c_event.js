function
EventTarget
(
)
{
}
EventTarget
.
prototype
.
addEventListener
=
function
(
type
listener
useCapture
)
{
}
;
EventTarget
.
prototype
.
removeEventListener
=
function
(
type
listener
useCapture
)
{
}
;
EventTarget
.
prototype
.
dispatchEvent
=
function
(
evt
)
{
}
;
function
EventListener
(
)
{
}
EventListener
.
prototype
.
handleEvent
=
function
(
evt
)
{
}
;
var
EventInit
;
function
Event
(
type
opt_eventInitDict
)
{
}
Event
.
AT_TARGET
;
Event
.
BUBBLING_PHASE
;
Event
.
CAPTURING_PHASE
;
Event
.
prototype
.
type
;
Event
.
prototype
.
target
;
Event
.
prototype
.
currentTarget
;
Event
.
prototype
.
eventPhase
;
Event
.
prototype
.
bubbles
;
Event
.
prototype
.
cancelable
;
Event
.
prototype
.
timeStamp
;
Event
.
prototype
.
path
;
Event
.
prototype
.
stopPropagation
=
function
(
)
{
}
;
Event
.
prototype
.
preventDefault
=
function
(
)
{
}
;
Event
.
prototype
.
initEvent
=
function
(
eventTypeArg
canBubbleArg
cancelableArg
)
{
}
;
var
CustomEventInit
;
function
CustomEvent
(
type
opt_eventInitDict
)
{
}
CustomEvent
.
prototype
.
initCustomEvent
=
function
(
eventType
bubbles
cancelable
detail
)
{
}
;
CustomEvent
.
prototype
.
detail
;
function
DocumentEvent
(
)
{
}
DocumentEvent
.
prototype
.
createEvent
=
function
(
eventType
)
{
}
;
var
UIEventInit
;
function
UIEvent
(
type
opt_eventInitDict
)
{
}
UIEvent
.
prototype
.
detail
;
UIEvent
.
prototype
.
initUIEvent
=
function
(
typeArg
canBubbleArg
cancelableArg
viewArg
detailArg
)
{
}
;
var
MouseEventInit
;
function
MouseEvent
(
type
opt_eventInitDict
)
{
}
MouseEvent
.
prototype
.
screenX
;
MouseEvent
.
prototype
.
screenY
;
MouseEvent
.
prototype
.
clientX
;
MouseEvent
.
prototype
.
clientY
;
MouseEvent
.
prototype
.
ctrlKey
;
MouseEvent
.
prototype
.
shiftKey
;
MouseEvent
.
prototype
.
altKey
;
MouseEvent
.
prototype
.
metaKey
;
MouseEvent
.
prototype
.
button
;
MouseEvent
.
prototype
.
relatedTarget
;
function
MutationEvent
(
)
{
}
MutationEvent
.
prototype
.
relatedNode
;
MutationEvent
.
prototype
.
prevValue
;
MutationEvent
.
prototype
.
newValue
;
MutationEvent
.
prototype
.
attrName
;
MutationEvent
.
prototype
.
attrChange
;
MutationEvent
.
prototype
.
initMutationEvent
=
function
(
typeArg
canBubbleArg
cancelableArg
relatedNodeArg
prevValueArg
newValueArg
attrNameArg
attrChangeArg
)
{
}
;
var
KeyboardEventInit
;
function
KeyboardEvent
(
type
opt_eventInitDict
)
{
}
KeyboardEvent
.
prototype
.
keyIdentifier
;
KeyboardEvent
.
prototype
.
ctrlKey
;
KeyboardEvent
.
prototype
.
shiftKey
;
KeyboardEvent
.
prototype
.
altKey
;
KeyboardEvent
.
prototype
.
metaKey
;
KeyboardEvent
.
prototype
.
getModifierState
=
function
(
keyIdentifierArg
)
{
}
;
