function
XPathException
(
)
{
}
XPathException
.
INVALID_EXPRESSION_ERR
=
52
;
XPathException
.
TYPE_ERR
=
52
;
XPathException
.
prototype
.
code
;
function
XPathEvaluator
(
)
{
}
XPathEvaluator
.
prototype
.
createExpression
=
function
(
expr
opt_resolver
)
{
}
;
XPathEvaluator
.
prototype
.
createNSResolver
=
function
(
nodeResolver
)
{
}
;
XPathEvaluator
.
prototype
.
evaluate
=
function
(
expr
contextNode
opt_resolver
opt_type
opt_result
)
{
}
;
function
XPathExpression
(
)
{
}
XPathExpression
.
prototype
.
evaluate
=
function
(
contextNode
opt_type
opt_result
)
{
}
;
function
XPathNSResolver
(
)
{
}
XPathNSResolver
.
prototype
.
lookupNamespaceURI
=
function
(
prefix
)
{
}
;
function
XPathResult
(
)
{
}
XPathResult
.
prototype
.
booleanValue
;
XPathResult
.
prototype
.
invalidInteratorState
;
XPathResult
.
prototype
.
numberValue
;
XPathResult
.
prototype
.
resultType
;
XPathResult
.
prototype
.
singleNodeValue
;
XPathResult
.
prototype
.
snapshotLength
;
XPathResult
.
prototype
.
stringValue
;
XPathResult
.
prototype
.
iterateNext
=
function
(
)
{
}
;
XPathResult
.
prototype
.
snapshotItem
=
function
(
index
)
{
}
;
XPathResult
.
ANY_TYPE
=
0
;
XPathResult
.
NUMBER_TYPE
=
1
;
XPathResult
.
STRING_TYPE
=
2
;
XPathResult
.
BOOLEAN_TYPE
=
3
;
XPathResult
.
UNORDERED_NODE_ITERATOR_TYPE
=
4
;
XPathResult
.
ORDERED_NODE_ITERATOR_TYPE
=
5
;
XPathResult
.
UNORDERED_NODE_SNAPSHOT_TYPE
=
6
;
XPathResult
.
ORDERED_NODE_SNAPSHOT_TYPE
=
7
;
XPathResult
.
ANY_UNORDERED_NODE_TYPE
=
8
;
XPathResult
.
FIRST_ORDERED_NODE_TYPE
=
9
;
function
XPathNamespace
(
)
{
}
XPathNamespace
.
prototype
.
ownerElement
;
XPathNamespace
.
XPATH_NAMESPACE_NODE
=
13
;
function
XMLHttpRequest
(
)
{
}
XMLHttpRequest
.
prototype
.
addEventListener
=
function
(
type
listener
opt_useCapture
)
{
}
;
XMLHttpRequest
.
prototype
.
removeEventListener
=
function
(
type
listener
opt_useCapture
)
{
}
;
XMLHttpRequest
.
prototype
.
dispatchEvent
=
function
(
evt
)
{
}
;
XMLHttpRequest
.
prototype
.
open
=
function
(
method
url
opt_async
opt_user
opt_password
)
{
}
;
XMLHttpRequest
.
prototype
.
setRequestHeader
=
function
(
header
value
)
{
}
;
XMLHttpRequest
.
prototype
.
send
=
function
(
opt_data
)
{
}
;
XMLHttpRequest
.
prototype
.
abort
=
function
(
)
{
}
;
XMLHttpRequest
.
prototype
.
getAllResponseHeaders
=
function
(
)
{
}
;
XMLHttpRequest
.
prototype
.
getResponseHeader
=
function
(
header
)
{
}
;
XMLHttpRequest
.
prototype
.
responseText
;
XMLHttpRequest
.
prototype
.
responseXML
;
XMLHttpRequest
.
prototype
.
readyState
;
XMLHttpRequest
.
prototype
.
status
;
XMLHttpRequest
.
prototype
.
statusText
;
XMLHttpRequest
.
prototype
.
onreadystatechange
;
XMLHttpRequest
.
prototype
.
onerror
;
function
FormData
(
opt_form
)
{
}
FormData
.
prototype
.
append
=
function
(
name
value
)
{
}
;
