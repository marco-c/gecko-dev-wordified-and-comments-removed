function
XMLDOMDocument
(
)
{
}
XMLDOMDocument
.
prototype
.
async
;
XMLDOMDocument
.
prototype
.
ondataavailable
;
XMLDOMDocument
.
prototype
.
onreadystatechange
;
XMLDOMDocument
.
prototype
.
ontransformnode
;
XMLDOMDocument
.
prototype
.
parseError
;
XMLDOMDocument
.
prototype
.
preserveWhiteSpace
;
XMLDOMDocument
.
prototype
.
readyState
;
XMLDOMDocument
.
prototype
.
resolveExternals
;
XMLDOMDocument
.
prototype
.
setProperty
=
function
(
name
value
)
{
}
;
XMLDOMDocument
.
prototype
.
url
;
XMLDOMDocument
.
prototype
.
validateOnParse
;
XMLDOMDocument
.
prototype
.
abort
=
function
(
)
{
}
;
XMLDOMDocument
.
prototype
.
createNode
=
function
(
type
name
namespaceURI
)
{
}
;
XMLDOMDocument
.
prototype
.
load
=
function
(
xmlSource
)
{
}
;
XMLDOMDocument
.
prototype
.
loadXML
=
function
(
xmlString
)
{
}
;
XMLDOMDocument
.
prototype
.
nodeFromID
=
function
(
id
)
{
}
;
Node
.
prototype
.
baseName
;
Node
.
prototype
.
dataType
;
Node
.
prototype
.
definition
;
Node
.
prototype
.
document
;
Node
.
prototype
.
insertAdjacentHTML
=
function
(
sWhere
sText
)
{
}
;
Node
.
prototype
.
nodeTypedValue
;
Node
.
prototype
.
nodeTypeString
;
Node
.
prototype
.
parsed
;
Node
.
prototype
.
parentElement
;
Node
.
prototype
.
specified
;
Node
.
prototype
.
text
;
Node
.
prototype
.
xml
;
Node
.
prototype
.
selectNodes
=
function
(
expression
)
{
}
;
Node
.
prototype
.
selectSingleNode
=
function
(
expression
)
{
}
;
Node
.
prototype
.
transformNode
=
function
(
stylesheet
)
{
}
;
Node
.
prototype
.
transformNodeToObject
=
function
(
stylesheet
outputObject
)
{
}
;
Node
.
prototype
.
removeNode
=
function
(
opt_bRemoveChildren
)
{
}
;
function
ClipboardData
(
)
{
}
ClipboardData
.
prototype
.
clearData
=
function
(
opt_type
)
{
}
;
ClipboardData
.
prototype
.
setData
=
function
(
type
data
)
{
}
;
ClipboardData
.
prototype
.
getData
=
function
(
type
)
{
}
;
var
window
;
Window
.
prototype
.
clipboardData
;
Window
.
prototype
.
dialogHeight
;
Window
.
prototype
.
dialogLeft
;
Window
.
prototype
.
dialogTop
;
Window
.
prototype
.
dialogWidth
;
Window
.
prototype
.
event
;
Window
.
prototype
.
maxConnectionsPer1_0Server
;
Window
.
prototype
.
maxConnectionsPerServer
;
Window
.
prototype
.
offscreenBuffering
;
Window
.
prototype
.
screenLeft
;
Window
.
prototype
.
screenTop
;
Window
.
prototype
.
attachEvent
;
Window
.
prototype
.
createPopup
;
Window
.
prototype
.
detachEvent
;
Window
.
prototype
.
execScript
;
Window
.
prototype
.
focus
;
Window
.
prototype
.
moveBy
=
function
(
x
y
)
{
}
;
Window
.
prototype
.
moveTo
=
function
(
x
y
)
{
}
;
Window
.
prototype
.
navigate
;
Window
.
prototype
.
open
=
function
(
opt_url
opt_windowName
opt_windowFeatures
opt_replace
)
{
}
;
Window
.
prototype
.
print
=
function
(
)
{
}
;
Window
.
prototype
.
resizeBy
=
function
(
width
height
)
{
}
;
Window
.
prototype
.
resizeTo
=
function
(
width
height
)
{
}
;
Window
.
prototype
.
setActive
;
Window
.
prototype
.
showHelp
;
Window
.
prototype
.
showModelessDialog
;
Window
.
prototype
.
external
;
function
History
(
)
{
}
;
History
.
prototype
.
go
=
function
(
delta
)
{
}
;
History
.
prototype
.
back
=
function
(
opt_distance
)
{
}
;
History
.
prototype
.
length
;
History
.
prototype
.
forward
=
function
(
)
{
}
;
HTMLFrameElement
.
prototype
.
allowTransparency
;
HTMLFrameElement
.
prototype
.
contentWindow
;
HTMLIFrameElement
.
prototype
.
allowTransparency
;
HTMLIFrameElement
.
prototype
.
contentWindow
;
HTMLBodyElement
.
prototype
.
createControlRange
;
HTMLScriptElement
.
prototype
.
readyState
;
HTMLIFrameElement
.
prototype
.
readyState
;
HTMLImageElement
.
prototype
.
readyState
;
HTMLObjectElement
.
prototype
.
readyState
;
function
ControlRange
(
)
{
}
ControlRange
.
prototype
.
add
;
ControlRange
.
prototype
.
addElement
;
ControlRange
.
prototype
.
execCommand
;
ControlRange
.
prototype
.
item
;
ControlRange
.
prototype
.
queryCommandEnabled
;
ControlRange
.
prototype
.
queryCommandIndeterm
;
ControlRange
.
prototype
.
queryCommandState
;
ControlRange
.
prototype
.
queryCommandSupported
;
ControlRange
.
prototype
.
queryCommandValue
;
ControlRange
.
prototype
.
remove
;
ControlRange
.
prototype
.
scrollIntoView
;
ControlRange
.
prototype
.
select
;
function
TextRange
(
)
{
}
TextRange
.
prototype
.
boundingHeight
;
TextRange
.
prototype
.
boundingLeft
;
TextRange
.
prototype
.
boundingTop
;
TextRange
.
prototype
.
boundingWidth
;
TextRange
.
prototype
.
htmlText
;
TextRange
.
prototype
.
offsetLeft
;
TextRange
.
prototype
.
offsetTop
;
TextRange
.
prototype
.
text
;
TextRange
.
prototype
.
collapse
;
TextRange
.
prototype
.
compareEndPoints
;
TextRange
.
prototype
.
duplicate
;
TextRange
.
prototype
.
execCommand
;
TextRange
.
prototype
.
expand
;
TextRange
.
prototype
.
findText
;
TextRange
.
prototype
.
getBookmark
;
TextRange
.
prototype
.
getBoundingClientRect
;
TextRange
.
prototype
.
getClientRects
;
TextRange
.
prototype
.
inRange
;
TextRange
.
prototype
.
isEqual
;
TextRange
.
prototype
.
move
;
TextRange
.
prototype
.
moveEnd
;
TextRange
.
prototype
.
moveStart
;
TextRange
.
prototype
.
moveToBookmark
;
TextRange
.
prototype
.
moveToElementText
;
TextRange
.
prototype
.
moveToPoint
;
TextRange
.
prototype
.
parentElement
;
TextRange
.
prototype
.
pasteHTML
;
TextRange
.
prototype
.
queryCommandEnabled
;
TextRange
.
prototype
.
queryCommandIndeterm
;
TextRange
.
prototype
.
queryCommandState
;
TextRange
.
prototype
.
queryCommandSupported
;
TextRange
.
prototype
.
queryCommandValue
;
TextRange
.
prototype
.
scrollIntoView
;
TextRange
.
prototype
.
select
;
TextRange
.
prototype
.
setEndPoint
;
Selection
.
prototype
.
clear
=
function
(
)
{
}
;
Selection
.
prototype
.
createRange
=
function
(
)
{
}
;
Selection
.
prototype
.
createRangeCollection
=
function
(
)
{
}
;
function
controlRange
(
)
{
}
Document
.
prototype
.
loadXML
;
Document
.
prototype
.
activeElement
;
Document
.
prototype
.
charset
;
Document
.
prototype
.
cookie
;
Document
.
prototype
.
defaultCharset
;
Document
.
prototype
.
dir
;
Document
.
prototype
.
documentMode
;
Document
.
prototype
.
expando
;
Document
.
prototype
.
fileCreatedDate
;
Document
.
prototype
.
fileModifiedDate
;
Document
.
prototype
.
fileSize
;
Document
.
prototype
.
parentWindow
;
Document
.
prototype
.
protocol
;
HTMLDocument
.
prototype
.
readyState
;
Document
.
prototype
.
selection
;
Document
.
prototype
.
uniqueID
;
Document
.
prototype
.
URLUnencoded
;
Document
.
prototype
.
XMLDocument
;
Document
.
prototype
.
XSLDocument
;
Document
.
prototype
.
attachEvent
;
Document
.
prototype
.
createEventObject
;
Document
.
prototype
.
createStyleSheet
;
Document
.
prototype
.
detachEvent
;
Document
.
prototype
.
focus
;
Document
.
prototype
.
hasFocus
=
function
(
)
{
}
;
Document
.
prototype
.
mergeAttributes
;
Document
.
prototype
.
recalc
;
Document
.
prototype
.
releaseCapture
;
Document
.
prototype
.
setActive
;
Document
.
prototype
.
all
;
Document
.
prototype
.
childNodes
;
Document
.
prototype
.
frames
;
Document
.
prototype
.
namespaces
;
Document
.
prototype
.
scripts
;
Element
.
prototype
.
addBehavior
=
function
(
sUrl
)
{
}
;
Element
.
prototype
.
attachEvent
;
Element
.
prototype
.
canHaveChildren
;
Element
.
prototype
.
classid
;
Element
.
prototype
.
componentFromPoint
=
function
(
iCoordX
iCoordY
)
{
}
;
Element
.
prototype
.
contentEditable
;
Element
.
prototype
.
createTextRange
;
Element
.
prototype
.
currentStyle
;
Element
.
prototype
.
detachEvent
;
Element
.
prototype
.
doScroll
=
function
(
opt_action
)
{
}
;
Element
.
prototype
.
fireEvent
;
Element
.
prototype
.
hideFocus
;
Element
.
prototype
.
innerText
;
Element
.
prototype
.
isContentEditable
;
Element
.
prototype
.
load
;
Element
.
prototype
.
msSetPointerCapture
=
function
(
pointerId
)
{
}
;
Element
.
prototype
.
msReleasePointerCapture
=
function
(
pointerId
)
{
}
;
Element
.
prototype
.
onbeforedeactivate
;
Element
.
prototype
.
onmouseenter
;
Element
.
prototype
.
onmouseleave
;
Element
.
prototype
.
onselectstart
;
Element
.
prototype
.
outerHTML
;
Element
.
prototype
.
releaseCapture
=
function
(
)
{
}
;
Element
.
prototype
.
removeBehavior
=
function
(
iID
)
{
}
;
Element
.
prototype
.
runtimeStyle
;
Element
.
prototype
.
save
=
function
(
sStoreName
)
{
}
;
Element
.
prototype
.
setCapture
=
function
(
opt_bContainerCapture
)
{
}
;
Element
.
prototype
.
sourceIndex
;
Element
.
prototype
.
unselectable
;
function
HTMLFiltersCollection
(
)
{
}
HTMLFiltersCollection
.
prototype
.
length
;
Element
.
prototype
.
filters
;
function
HTMLFilter
(
)
{
}
HTMLFilter
.
prototype
.
apply
=
function
(
)
{
}
;
function
AlphaFilter
(
)
{
}
AlphaFilter
.
prototype
.
Opacity
;
function
AlphaImageLoaderFilter
(
)
{
}
AlphaImageLoaderFilter
.
prototype
.
sizingMethod
;
function
Location
(
)
{
}
Location
.
prototype
.
ancestorOrigins
;
Location
.
prototype
.
hash
;
Location
.
prototype
.
host
;
Location
.
prototype
.
hostname
;
Location
.
prototype
.
href
;
Location
.
prototype
.
origin
;
Location
.
prototype
.
pathname
;
Location
.
prototype
.
port
;
Location
.
prototype
.
protocol
;
Location
.
prototype
.
search
;
Location
.
prototype
.
assign
=
function
(
url
)
{
}
;
Location
.
prototype
.
reload
=
function
(
opt_forceReload
)
{
}
;
Location
.
prototype
.
replace
=
function
(
url
)
{
}
;
function
RuntimeObject
(
opt_str
)
{
}
HTMLStyleElement
.
prototype
.
styleSheet
;
function
XDomainRequest
(
)
{
}
XDomainRequest
.
prototype
.
abort
=
function
(
)
{
}
;
XDomainRequest
.
prototype
.
open
=
function
(
bstrMethod
bstrUrl
)
{
}
;
XDomainRequest
.
prototype
.
send
=
function
(
varBody
)
{
}
;
XDomainRequest
.
prototype
.
onerror
;
XDomainRequest
.
prototype
.
onload
;
XDomainRequest
.
prototype
.
onprogress
;
XDomainRequest
.
prototype
.
ontimeout
;
XDomainRequest
.
prototype
.
responseText
;
XDomainRequest
.
prototype
.
timeout
;
XDomainRequest
.
prototype
.
contentType
;
Navigator
.
prototype
.
browserLanguage
;
Navigator
.
prototype
.
msPointerEnabled
;
Screen
.
prototype
.
deviceXDPI
;
Screen
.
prototype
.
logicalXDPI
;
Screen
.
prototype
.
logicalYDPI
;
