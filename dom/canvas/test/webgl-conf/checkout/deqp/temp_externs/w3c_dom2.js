function
HTMLCollection
(
)
{
}
HTMLCollection
.
prototype
.
length
;
HTMLCollection
.
prototype
.
item
=
function
(
index
)
{
}
;
function
HTMLOptionsCollection
(
)
{
}
HTMLOptionsCollection
.
prototype
.
length
;
HTMLOptionsCollection
.
prototype
.
item
=
function
(
index
)
{
}
;
function
HTMLDocument
(
)
{
}
HTMLDocument
.
prototype
.
title
;
HTMLDocument
.
prototype
.
referrer
;
HTMLDocument
.
prototype
.
domain
;
HTMLDocument
.
prototype
.
URL
;
HTMLDocument
.
prototype
.
body
;
HTMLDocument
.
prototype
.
images
;
HTMLDocument
.
prototype
.
applets
;
HTMLDocument
.
prototype
.
links
;
HTMLDocument
.
prototype
.
forms
;
HTMLDocument
.
prototype
.
anchors
;
HTMLDocument
.
prototype
.
cookie
;
HTMLDocument
.
prototype
.
open
=
function
(
)
{
}
;
HTMLDocument
.
prototype
.
close
=
function
(
)
{
}
;
HTMLDocument
.
prototype
.
write
=
function
(
text
)
{
}
;
HTMLDocument
.
prototype
.
writeln
=
function
(
text
)
{
}
;
HTMLDocument
.
prototype
.
getElementsByName
=
function
(
elementName
)
{
}
;
HTMLDocument
.
prototype
.
createNodeIterator
=
function
(
root
whatToShow
filter
entityReferenceExpansion
)
{
}
;
HTMLDocument
.
prototype
.
createTreeWalker
=
function
(
root
whatToShow
filter
entityReferenceExpansion
)
{
}
;
var
TraversalDocument
;
function
NodeFilter
(
)
{
}
NodeFilter
.
SHOW_ALL
;
NodeFilter
.
SHOW_ATTRIBUTE
;
NodeFilter
.
SHOW_CDATA_SECTION
;
NodeFilter
.
SHOW_COMMENT
;
NodeFilter
.
SHOW_DOCUMENT
;
NodeFilter
.
SHOW_DOCUMENT_FRAGMENT
;
NodeFilter
.
SHOW_DOCUMENT_TYPE
;
NodeFilter
.
SHOW_ELEMENT
;
NodeFilter
.
SHOW_ENTITY
;
NodeFilter
.
SHOW_ENTITY_REFERENCE
;
NodeFilter
.
SHOW_NOTATION
;
NodeFilter
.
SHOW_PROCESSING_INSTRUCTION
;
NodeFilter
.
SHOW_TEXT
;
NodeFilter
.
FILTER_ACCEPT
;
NodeFilter
.
FILTER_REJECT
;
NodeFilter
.
FILTER_SKIP
;
NodeFilter
.
prototype
.
acceptNode
=
function
(
n
)
{
}
;
function
NodeIterator
(
)
{
}
NodeIterator
.
prototype
.
detach
=
function
(
)
{
}
;
NodeIterator
.
prototype
.
nextNode
=
function
(
)
{
}
;
NodeIterator
.
prototype
.
previousNode
=
function
(
)
{
}
;
function
TreeWalker
(
)
{
}
TreeWalker
.
prototype
.
firstChild
=
function
(
)
{
}
;
TreeWalker
.
prototype
.
lastChild
=
function
(
)
{
}
;
TreeWalker
.
prototype
.
nextNode
=
function
(
)
{
}
;
TreeWalker
.
prototype
.
nextSibling
=
function
(
)
{
}
;
TreeWalker
.
prototype
.
parentNode
=
function
(
)
{
}
;
TreeWalker
.
prototype
.
previousNode
=
function
(
)
{
}
;
TreeWalker
.
prototype
.
previousSibling
=
function
(
)
{
}
;
TreeWalker
.
prototype
.
root
;
TreeWalker
.
prototype
.
whatToShow
;
TreeWalker
.
prototype
.
filter
;
TreeWalker
.
prototype
.
expandEntityReference
;
TreeWalker
.
prototype
.
currentNode
;
function
HTMLElement
(
)
{
}
HTMLElement
.
prototype
.
id
;
HTMLElement
.
prototype
.
title
;
HTMLElement
.
prototype
.
lang
;
HTMLElement
.
prototype
.
dir
;
HTMLElement
.
prototype
.
className
;
function
HTMLHtmlElement
(
)
{
}
HTMLHtmlElement
.
prototype
.
version
;
function
HTMLHeadElement
(
)
{
}
HTMLHeadElement
.
prototype
.
profile
;
function
HTMLLinkElement
(
)
{
}
HTMLLinkElement
.
prototype
.
disabled
;
HTMLLinkElement
.
prototype
.
charset
;
HTMLLinkElement
.
prototype
.
href
;
HTMLLinkElement
.
prototype
.
hreflang
;
HTMLLinkElement
.
prototype
.
media
;
HTMLLinkElement
.
prototype
.
rel
;
HTMLLinkElement
.
prototype
.
rev
;
HTMLLinkElement
.
prototype
.
target
;
HTMLLinkElement
.
prototype
.
type
;
HTMLLinkElement
.
prototype
.
sheet
;
function
HTMLTitleElement
(
)
{
}
HTMLTitleElement
.
prototype
.
text
;
function
HTMLMetaElement
(
)
{
}
HTMLMetaElement
.
prototype
.
content
;
HTMLMetaElement
.
prototype
.
httpEquiv
;
HTMLMetaElement
.
prototype
.
name
;
HTMLMetaElement
.
prototype
.
scheme
;
function
HTMLBaseElement
(
)
{
}
HTMLBaseElement
.
prototype
.
href
;
HTMLBaseElement
.
prototype
.
target
;
function
HTMLIsIndexElement
(
)
{
}
HTMLIsIndexElement
.
prototype
.
form
;
HTMLIsIndexElement
.
prototype
.
prompt
;
function
HTMLStyleElement
(
)
{
}
HTMLStyleElement
.
prototype
.
disabled
;
HTMLStyleElement
.
prototype
.
media
;
HTMLStyleElement
.
prototype
.
type
;
HTMLStyleElement
.
prototype
.
sheet
;
function
HTMLBodyElement
(
)
{
}
HTMLBodyElement
.
prototype
.
aLink
;
HTMLBodyElement
.
prototype
.
background
;
HTMLBodyElement
.
prototype
.
bgColor
;
HTMLBodyElement
.
prototype
.
link
;
HTMLBodyElement
.
prototype
.
text
;
HTMLBodyElement
.
prototype
.
vLink
;
function
HTMLFormElement
(
)
{
}
HTMLFormElement
.
prototype
.
elements
;
HTMLFormElement
.
prototype
.
length
;
HTMLFormElement
.
prototype
.
name
;
HTMLFormElement
.
prototype
.
acceptCharset
;
HTMLFormElement
.
prototype
.
action
;
HTMLFormElement
.
prototype
.
enctype
;
HTMLFormElement
.
prototype
.
method
;
HTMLFormElement
.
prototype
.
target
;
HTMLFormElement
.
prototype
.
submit
=
function
(
)
{
}
;
HTMLFormElement
.
prototype
.
reset
=
function
(
)
{
}
;
function
HTMLSelectElement
(
)
{
}
HTMLSelectElement
.
prototype
.
type
;
HTMLSelectElement
.
prototype
.
selectedIndex
;
HTMLSelectElement
.
prototype
.
value
;
HTMLSelectElement
.
prototype
.
length
;
HTMLSelectElement
.
prototype
.
form
;
HTMLSelectElement
.
prototype
.
options
;
HTMLSelectElement
.
prototype
.
disabled
;
HTMLSelectElement
.
prototype
.
multiple
;
HTMLSelectElement
.
prototype
.
name
;
HTMLSelectElement
.
prototype
.
size
;
HTMLSelectElement
.
prototype
.
tabIndex
;
HTMLSelectElement
.
prototype
.
add
=
function
(
element
before
)
{
}
;
HTMLSelectElement
.
prototype
.
blur
=
function
(
)
{
}
;
HTMLSelectElement
.
prototype
.
focus
=
function
(
)
{
}
;
HTMLSelectElement
.
prototype
.
remove
=
function
(
index
)
{
}
;
function
HTMLOptGroupElement
(
)
{
}
HTMLOptGroupElement
.
prototype
.
disabled
;
HTMLOptGroupElement
.
prototype
.
label
;
function
HTMLOptionElement
(
)
{
}
HTMLOptionElement
.
prototype
.
defaultSelected
;
HTMLOptionElement
.
prototype
.
disabled
;
HTMLOptionElement
.
prototype
.
form
;
HTMLOptionElement
.
prototype
.
index
;
HTMLOptionElement
.
prototype
.
label
;
HTMLOptionElement
.
prototype
.
selected
;
HTMLOptionElement
.
prototype
.
text
;
HTMLOptionElement
.
prototype
.
value
;
function
HTMLInputElement
(
)
{
}
HTMLInputElement
.
prototype
.
accept
;
HTMLInputElement
.
prototype
.
accessKey
;
HTMLInputElement
.
prototype
.
align
;
HTMLInputElement
.
prototype
.
alt
;
HTMLInputElement
.
prototype
.
checked
;
HTMLInputElement
.
prototype
.
defaultChecked
;
HTMLInputElement
.
prototype
.
defaultValue
;
HTMLInputElement
.
prototype
.
disabled
;
HTMLInputElement
.
prototype
.
form
;
HTMLInputElement
.
prototype
.
maxLength
;
HTMLInputElement
.
prototype
.
name
;
HTMLInputElement
.
prototype
.
readOnly
;
HTMLInputElement
.
prototype
.
size
;
HTMLInputElement
.
prototype
.
src
;
HTMLInputElement
.
prototype
.
tabIndex
;
HTMLInputElement
.
prototype
.
type
;
HTMLInputElement
.
prototype
.
useMap
;
HTMLInputElement
.
prototype
.
value
;
HTMLInputElement
.
prototype
.
blur
=
function
(
)
{
}
;
HTMLInputElement
.
prototype
.
click
=
function
(
)
{
}
;
HTMLInputElement
.
prototype
.
focus
=
function
(
)
{
}
;
HTMLInputElement
.
prototype
.
select
=
function
(
)
{
}
;
function
HTMLTextAreaElement
(
)
{
}
HTMLTextAreaElement
.
prototype
.
accessKey
;
HTMLTextAreaElement
.
prototype
.
cols
;
HTMLTextAreaElement
.
prototype
.
defaultValue
;
HTMLTextAreaElement
.
prototype
.
disabled
;
HTMLTextAreaElement
.
prototype
.
form
;
HTMLTextAreaElement
.
prototype
.
name
;
HTMLTextAreaElement
.
prototype
.
readOnly
;
HTMLTextAreaElement
.
prototype
.
rows
;
HTMLTextAreaElement
.
prototype
.
tabIndex
;
HTMLTextAreaElement
.
prototype
.
type
;
HTMLTextAreaElement
.
prototype
.
value
;
HTMLTextAreaElement
.
prototype
.
blur
=
function
(
)
{
}
;
HTMLTextAreaElement
.
prototype
.
focus
=
function
(
)
{
}
;
HTMLTextAreaElement
.
prototype
.
select
=
function
(
)
{
}
;
function
HTMLButtonElement
(
)
{
}
HTMLButtonElement
.
prototype
.
accessKey
;
HTMLButtonElement
.
prototype
.
disabled
;
HTMLButtonElement
.
prototype
.
form
;
HTMLButtonElement
.
prototype
.
name
;
HTMLButtonElement
.
prototype
.
tabIndex
;
HTMLButtonElement
.
prototype
.
type
;
HTMLButtonElement
.
prototype
.
value
;
function
HTMLLabelElement
(
)
{
}
HTMLLabelElement
.
prototype
.
accessKey
;
HTMLLabelElement
.
prototype
.
form
;
HTMLLabelElement
.
prototype
.
htmlFor
;
function
HTMLFieldSetElement
(
)
{
}
HTMLFieldSetElement
.
prototype
.
form
;
function
HTMLLegendElement
(
)
{
}
HTMLLegendElement
.
prototype
.
accessKey
;
HTMLLegendElement
.
prototype
.
align
;
HTMLLegendElement
.
prototype
.
form
;
function
HTMLUListElement
(
)
{
}
HTMLUListElement
.
prototype
.
compact
;
HTMLUListElement
.
prototype
.
type
;
function
HTMLOListElement
(
)
{
}
HTMLOListElement
.
prototype
.
compact
;
HTMLOListElement
.
prototype
.
start
;
HTMLOListElement
.
prototype
.
type
;
function
HTMLDListElement
(
)
{
}
HTMLDListElement
.
prototype
.
compact
;
function
HTMLDirectoryElement
(
)
{
}
HTMLDirectoryElement
.
prototype
.
compact
;
function
HTMLMenuElement
(
)
{
}
HTMLMenuElement
.
prototype
.
compact
;
function
HTMLLIElement
(
)
{
}
HTMLLIElement
.
prototype
.
type
;
HTMLLIElement
.
prototype
.
value
;
function
HTMLDivElement
(
)
{
}
HTMLDivElement
.
prototype
.
align
;
function
HTMLParagraphElement
(
)
{
}
HTMLParagraphElement
.
prototype
.
align
;
function
HTMLHeadingElement
(
)
{
}
HTMLHeadingElement
.
prototype
.
align
;
function
HTMLQuoteElement
(
)
{
}
HTMLQuoteElement
.
prototype
.
cite
;
function
HTMLPreElement
(
)
{
}
HTMLPreElement
.
prototype
.
width
;
function
HTMLBRElement
(
)
{
}
HTMLBRElement
.
prototype
.
clear
;
function
HTMLBaseFontElement
(
)
{
}
HTMLBaseFontElement
.
prototype
.
color
;
HTMLBaseFontElement
.
prototype
.
face
;
HTMLBaseFontElement
.
prototype
.
size
;
function
HTMLFontElement
(
)
{
}
HTMLFontElement
.
prototype
.
color
;
HTMLFontElement
.
prototype
.
face
;
HTMLFontElement
.
prototype
.
size
;
function
HTMLHRElement
(
)
{
}
HTMLHRElement
.
prototype
.
align
;
HTMLHRElement
.
prototype
.
noShade
;
HTMLHRElement
.
prototype
.
size
;
HTMLHRElement
.
prototype
.
width
;
function
HTMLModElement
(
)
{
}
HTMLModElement
.
prototype
.
cite
;
HTMLModElement
.
prototype
.
dateTime
;
function
HTMLAnchorElement
(
)
{
}
HTMLAnchorElement
.
prototype
.
accessKey
;
HTMLAnchorElement
.
prototype
.
charset
;
HTMLAnchorElement
.
prototype
.
coords
;
HTMLAnchorElement
.
prototype
.
href
;
HTMLAnchorElement
.
prototype
.
hreflang
;
HTMLAnchorElement
.
prototype
.
name
;
HTMLAnchorElement
.
prototype
.
rel
;
HTMLAnchorElement
.
prototype
.
rev
;
HTMLAnchorElement
.
prototype
.
shape
;
HTMLAnchorElement
.
prototype
.
tabIndex
;
HTMLAnchorElement
.
prototype
.
target
;
HTMLAnchorElement
.
prototype
.
type
;
HTMLAnchorElement
.
prototype
.
blur
=
function
(
)
{
}
;
HTMLAnchorElement
.
prototype
.
focus
=
function
(
)
{
}
;
function
HTMLImageElement
(
)
{
}
HTMLImageElement
.
prototype
.
align
;
HTMLImageElement
.
prototype
.
alt
;
HTMLImageElement
.
prototype
.
border
;
HTMLImageElement
.
prototype
.
height
;
HTMLImageElement
.
prototype
.
hspace
;
HTMLImageElement
.
prototype
.
isMap
;
HTMLImageElement
.
prototype
.
longDesc
;
HTMLImageElement
.
prototype
.
lowSrc
;
HTMLImageElement
.
prototype
.
name
;
HTMLImageElement
.
prototype
.
src
;
HTMLImageElement
.
prototype
.
useMap
;
HTMLImageElement
.
prototype
.
vspace
;
HTMLImageElement
.
prototype
.
width
;
function
HTMLObjectElement
(
)
{
}
HTMLObjectElement
.
prototype
.
align
;
HTMLObjectElement
.
prototype
.
archive
;
HTMLObjectElement
.
prototype
.
border
;
HTMLObjectElement
.
prototype
.
code
;
HTMLObjectElement
.
prototype
.
codeBase
;
HTMLObjectElement
.
prototype
.
codeType
;
HTMLObjectElement
.
prototype
.
contentDocument
;
HTMLObjectElement
.
prototype
.
data
;
HTMLObjectElement
.
prototype
.
declare
;
HTMLObjectElement
.
prototype
.
form
;
HTMLObjectElement
.
prototype
.
height
;
HTMLObjectElement
.
prototype
.
hspace
;
HTMLObjectElement
.
prototype
.
name
;
HTMLObjectElement
.
prototype
.
standby
;
HTMLObjectElement
.
prototype
.
tabIndex
;
HTMLObjectElement
.
prototype
.
type
;
HTMLObjectElement
.
prototype
.
useMap
;
HTMLObjectElement
.
prototype
.
vspace
;
HTMLObjectElement
.
prototype
.
width
;
function
HTMLParamElement
(
)
{
}
HTMLParamElement
.
prototype
.
name
;
HTMLParamElement
.
prototype
.
type
;
HTMLParamElement
.
prototype
.
value
;
HTMLParamElement
.
prototype
.
valueType
;
function
HTMLAppletElement
(
)
{
}
HTMLAppletElement
.
prototype
.
align
;
HTMLAppletElement
.
prototype
.
alt
;
HTMLAppletElement
.
prototype
.
archive
;
HTMLAppletElement
.
prototype
.
code
;
HTMLAppletElement
.
prototype
.
codeBase
;
HTMLAppletElement
.
prototype
.
height
;
HTMLAppletElement
.
prototype
.
hspace
;
HTMLAppletElement
.
prototype
.
name
;
HTMLAppletElement
.
prototype
.
object
;
HTMLAppletElement
.
prototype
.
vspace
;
HTMLAppletElement
.
prototype
.
width
;
function
HTMLMapElement
(
)
{
}
HTMLMapElement
.
prototype
.
areas
;
HTMLMapElement
.
prototype
.
name
;
function
HTMLAreaElement
(
)
{
}
HTMLAreaElement
.
prototype
.
accessKey
;
HTMLAreaElement
.
prototype
.
alt
;
HTMLAreaElement
.
prototype
.
coords
;
HTMLAreaElement
.
prototype
.
href
;
HTMLAreaElement
.
prototype
.
noHref
;
HTMLAreaElement
.
prototype
.
shape
;
HTMLAreaElement
.
prototype
.
tabIndex
;
HTMLAreaElement
.
prototype
.
target
;
function
HTMLScriptElement
(
)
{
}
HTMLScriptElement
.
prototype
.
charset
;
HTMLScriptElement
.
prototype
.
defer
;
HTMLScriptElement
.
prototype
.
event
;
HTMLScriptElement
.
prototype
.
htmlFor
;
HTMLScriptElement
.
prototype
.
src
;
HTMLScriptElement
.
prototype
.
text
;
HTMLScriptElement
.
prototype
.
type
;
function
HTMLTableElement
(
)
{
}
HTMLTableElement
.
prototype
.
align
;
HTMLTableElement
.
prototype
.
bgColor
;
HTMLTableElement
.
prototype
.
border
;
HTMLTableElement
.
prototype
.
caption
;
HTMLTableElement
.
prototype
.
cellPadding
;
HTMLTableElement
.
prototype
.
cellSpacing
;
HTMLTableElement
.
prototype
.
frame
;
HTMLTableElement
.
prototype
.
rows
;
HTMLTableElement
.
prototype
.
rules
;
HTMLTableElement
.
prototype
.
summary
;
HTMLTableElement
.
prototype
.
tBodies
;
HTMLTableElement
.
prototype
.
tFoot
;
HTMLTableElement
.
prototype
.
tHead
;
HTMLTableElement
.
prototype
.
width
;
HTMLTableElement
.
prototype
.
createCaption
=
function
(
)
{
}
;
HTMLTableElement
.
prototype
.
createTFoot
=
function
(
)
{
}
;
HTMLTableElement
.
prototype
.
createTHead
=
function
(
)
{
}
;
HTMLTableElement
.
prototype
.
deleteCaption
=
function
(
)
{
}
;
HTMLTableElement
.
prototype
.
deleteRow
=
function
(
index
)
{
}
;
HTMLTableElement
.
prototype
.
deleteTFoot
=
function
(
)
{
}
;
HTMLTableElement
.
prototype
.
deleteTHead
=
function
(
)
{
}
;
HTMLTableElement
.
prototype
.
insertRow
=
function
(
index
)
{
}
;
function
HTMLTableCaptionElement
(
)
{
}
HTMLTableCaptionElement
.
prototype
.
align
;
function
HTMLTableColElement
(
)
{
}
HTMLTableColElement
.
prototype
.
align
;
HTMLTableColElement
.
prototype
.
ch
;
HTMLTableColElement
.
prototype
.
chOff
;
HTMLTableColElement
.
prototype
.
span
;
HTMLTableColElement
.
prototype
.
vAlign
;
HTMLTableColElement
.
prototype
.
width
;
function
HTMLTableSectionElement
(
)
{
}
HTMLTableSectionElement
.
prototype
.
align
;
HTMLTableSectionElement
.
prototype
.
ch
;
HTMLTableSectionElement
.
prototype
.
chOff
;
HTMLTableSectionElement
.
prototype
.
rows
;
HTMLTableSectionElement
.
prototype
.
vAlign
;
HTMLTableSectionElement
.
prototype
.
deleteRow
=
function
(
index
)
{
}
;
HTMLTableSectionElement
.
prototype
.
insertRow
=
function
(
index
)
{
}
;
function
HTMLTableRowElement
(
)
{
}
HTMLTableRowElement
.
prototype
.
align
;
HTMLTableRowElement
.
prototype
.
bgColor
;
HTMLTableRowElement
.
prototype
.
cells
;
HTMLTableRowElement
.
prototype
.
ch
;
HTMLTableRowElement
.
prototype
.
chOff
;
HTMLTableRowElement
.
prototype
.
rowIndex
;
HTMLTableRowElement
.
prototype
.
sectionRowIndex
;
HTMLTableRowElement
.
prototype
.
vAlign
;
HTMLTableRowElement
.
prototype
.
deleteCell
=
function
(
index
)
{
}
;
HTMLTableRowElement
.
prototype
.
insertCell
=
function
(
index
)
{
}
;
function
HTMLTableCellElement
(
)
{
}
HTMLTableCellElement
.
prototype
.
abbr
;
HTMLTableCellElement
.
prototype
.
align
;
HTMLTableCellElement
.
prototype
.
axis
;
HTMLTableCellElement
.
prototype
.
bgColor
;
HTMLTableCellElement
.
prototype
.
cellIndex
;
HTMLTableCellElement
.
prototype
.
ch
;
HTMLTableCellElement
.
prototype
.
chOff
;
HTMLTableCellElement
.
prototype
.
colSpan
;
HTMLTableCellElement
.
prototype
.
headers
;
HTMLTableCellElement
.
prototype
.
height
;
HTMLTableCellElement
.
prototype
.
noWrap
;
HTMLTableCellElement
.
prototype
.
rowSpan
;
HTMLTableCellElement
.
prototype
.
scope
;
HTMLTableCellElement
.
prototype
.
vAlign
;
HTMLTableCellElement
.
prototype
.
width
;
function
HTMLFrameSetElement
(
)
{
}
HTMLFrameSetElement
.
prototype
.
cols
;
HTMLFrameSetElement
.
prototype
.
rows
;
function
HTMLFrameElement
(
)
{
}
HTMLFrameElement
.
prototype
.
contentDocument
;
HTMLFrameElement
.
prototype
.
frameBorder
;
HTMLFrameElement
.
prototype
.
longDesc
;
HTMLFrameElement
.
prototype
.
marginHeight
;
HTMLFrameElement
.
prototype
.
marginWidth
;
HTMLFrameElement
.
prototype
.
name
;
HTMLFrameElement
.
prototype
.
noResize
;
HTMLFrameElement
.
prototype
.
scrolling
;
HTMLFrameElement
.
prototype
.
src
;
function
HTMLIFrameElement
(
)
{
}
HTMLIFrameElement
.
prototype
.
align
;
HTMLIFrameElement
.
prototype
.
contentDocument
;
HTMLIFrameElement
.
prototype
.
frameBorder
;
HTMLIFrameElement
.
prototype
.
height
;
HTMLIFrameElement
.
prototype
.
longDesc
;
HTMLIFrameElement
.
prototype
.
marginHeight
;
HTMLIFrameElement
.
prototype
.
marginWidth
;
HTMLIFrameElement
.
prototype
.
name
;
HTMLIFrameElement
.
prototype
.
scrolling
;
HTMLIFrameElement
.
prototype
.
src
;
HTMLIFrameElement
.
prototype
.
width
;
DOMException
.
INVALID_STATE_ERR
=
11
;
DOMException
.
SYNTAX_ERR
=
12
;
DOMException
.
INVALID_MODIFICATION_ERR
=
13
;
DOMException
.
NAMESPACE_ERR
=
14
;
DOMException
.
INVALID_ACCESS_ERR
=
15
;
