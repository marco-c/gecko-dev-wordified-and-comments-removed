'
use
strict
'
;
goog
.
provide
(
'
framework
.
common
.
tcuMatrixUtil
'
)
;
goog
.
require
(
'
framework
.
common
.
tcuMatrix
'
)
;
goog
.
scope
(
function
(
)
{
var
tcuMatrixUtil
=
framework
.
common
.
tcuMatrixUtil
;
var
tcuMatrix
=
framework
.
common
.
tcuMatrix
;
tcuMatrixUtil
.
translationMatrix
=
function
(
translation
)
{
var
len
=
translation
.
length
;
var
res
=
new
tcuMatrix
.
Matrix
(
len
+
1
len
+
1
)
;
for
(
var
row
=
0
;
row
<
len
;
row
+
+
)
res
.
set
(
row
len
translation
[
row
]
)
;
return
res
;
}
;
tcuMatrixUtil
.
flatten
=
function
(
a
)
{
if
(
a
[
0
]
instanceof
Array
)
{
var
merged
=
[
]
;
return
merged
.
concat
.
apply
(
merged
a
)
;
}
if
(
a
[
0
]
instanceof
tcuMatrix
.
Matrix
)
{
var
m
=
a
[
0
]
;
var
rows
=
m
.
rows
;
var
cols
=
m
.
cols
;
var
size
=
a
.
length
;
var
result
=
[
]
;
for
(
var
col
=
0
;
col
<
cols
;
col
+
+
)
for
(
var
i
=
0
;
i
<
size
;
i
+
+
)
result
.
push
(
a
[
i
]
.
getColumn
(
col
)
)
;
return
[
]
.
concat
.
apply
(
[
]
result
)
;
}
if
(
typeof
(
a
[
0
]
)
=
=
=
'
number
'
)
return
a
;
throw
new
Error
(
'
Invalid
input
'
)
;
}
;
}
)
;
