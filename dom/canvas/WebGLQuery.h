#
ifndef
WEBGL_QUERY_H_
#
define
WEBGL_QUERY_H_
#
include
"
mozilla
/
LinkedList
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
WebGLObjectModel
.
h
"
#
include
"
nsThreadUtils
.
h
"
namespace
mozilla
{
namespace
webgl
{
class
AvailabilityRunnable
;
}
class
WebGLQuery
final
:
public
WebGLRefCountedObject
<
WebGLQuery
>
public
LinkedListElement
<
WebGLQuery
>
{
friend
class
webgl
:
:
AvailabilityRunnable
;
friend
class
WebGLRefCountedObject
<
WebGLQuery
>
;
public
:
const
GLuint
mGLName
;
private
:
GLenum
mTarget
;
WebGLRefPtr
<
WebGLQuery
>
*
mActiveSlot
;
bool
mCanBeAvailable
=
false
;
public
:
GLenum
Target
(
)
const
{
return
mTarget
;
}
bool
IsActive
(
)
const
{
return
bool
(
mActiveSlot
)
;
}
NS_INLINE_DECL_REFCOUNTING
(
WebGLQuery
)
explicit
WebGLQuery
(
WebGLContext
*
webgl
)
;
private
:
~
WebGLQuery
(
)
{
DeleteOnce
(
)
;
}
;
void
Delete
(
)
;
public
:
void
BeginQuery
(
GLenum
target
WebGLRefPtr
<
WebGLQuery
>
&
slot
)
;
void
DeleteQuery
(
)
;
void
EndQuery
(
)
;
MaybeWebGLVariant
GetQueryParameter
(
GLenum
pname
)
const
;
bool
IsQuery
(
)
const
;
void
QueryCounter
(
GLenum
target
)
;
}
;
}
#
endif
