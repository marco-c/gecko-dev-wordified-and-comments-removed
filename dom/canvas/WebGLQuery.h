#
ifndef
WEBGL_QUERY_H_
#
define
WEBGL_QUERY_H_
#
include
"
WebGLObjectModel
.
h
"
#
include
"
nsThreadUtils
.
h
"
namespace
mozilla
{
namespace
webgl
{
class
AvailabilityRunnable
;
}
class
WebGLQuery
final
:
public
WebGLContextBoundObject
{
friend
class
webgl
:
:
AvailabilityRunnable
;
MOZ_DECLARE_REFCOUNTED_VIRTUAL_TYPENAME
(
WebGLQuery
override
)
public
:
const
GLuint
mGLName
;
private
:
GLenum
mTarget
;
RefPtr
<
WebGLQuery
>
*
mActiveSlot
;
bool
mCanBeAvailable
=
false
;
public
:
GLenum
Target
(
)
const
{
return
mTarget
;
}
bool
IsActive
(
)
const
{
return
bool
(
mActiveSlot
)
;
}
explicit
WebGLQuery
(
WebGLContext
*
webgl
)
;
private
:
~
WebGLQuery
(
)
override
;
public
:
void
BeginQuery
(
GLenum
target
RefPtr
<
WebGLQuery
>
&
slot
)
;
void
EndQuery
(
)
;
Maybe
<
double
>
GetQueryParameter
(
GLenum
pname
)
const
;
void
QueryCounter
(
)
;
}
;
}
#
endif
