#
include
"
DrawTargetWebglInternal
.
h
"
#
include
"
SourceSurfaceWebgl
.
h
"
namespace
mozilla
:
:
gfx
{
SourceSurfaceWebgl
:
:
SourceSurfaceWebgl
(
DrawTargetWebgl
*
aDT
)
:
mFormat
(
aDT
-
>
GetFormat
(
)
)
mSize
(
aDT
-
>
GetSize
(
)
)
mDT
(
aDT
)
mSharedContext
(
aDT
-
>
mSharedContext
)
{
}
SourceSurfaceWebgl
:
:
SourceSurfaceWebgl
(
const
RefPtr
<
SharedContextWebgl
>
&
aSharedContext
)
:
mSharedContext
(
aSharedContext
)
{
}
SourceSurfaceWebgl
:
:
~
SourceSurfaceWebgl
(
)
{
if
(
mHandle
)
{
mHandle
-
>
ClearSurface
(
)
;
}
}
inline
bool
SourceSurfaceWebgl
:
:
EnsureData
(
)
{
if
(
mData
)
{
return
true
;
}
if
(
!
mDT
)
{
if
(
!
mHandle
|
|
!
mSharedContext
)
{
return
false
;
}
mData
=
mSharedContext
-
>
ReadSnapshot
(
mHandle
)
;
}
else
{
mData
=
mDT
-
>
ReadSnapshot
(
)
;
}
return
!
!
mData
;
}
uint8_t
*
SourceSurfaceWebgl
:
:
GetData
(
)
{
if
(
!
EnsureData
(
)
)
{
return
nullptr
;
}
return
mData
-
>
GetData
(
)
;
}
int32_t
SourceSurfaceWebgl
:
:
Stride
(
)
{
if
(
!
EnsureData
(
)
)
{
return
0
;
}
return
mData
-
>
Stride
(
)
;
}
bool
SourceSurfaceWebgl
:
:
Map
(
MapType
aType
MappedSurface
*
aMappedSurface
)
{
if
(
!
EnsureData
(
)
)
{
return
false
;
}
return
mData
-
>
Map
(
aType
aMappedSurface
)
;
}
void
SourceSurfaceWebgl
:
:
Unmap
(
)
{
if
(
mData
)
{
mData
-
>
Unmap
(
)
;
}
}
void
SourceSurfaceWebgl
:
:
DrawTargetWillChange
(
bool
aNeedHandle
)
{
MOZ_ASSERT
(
mDT
)
;
if
(
(
!
mData
|
|
aNeedHandle
)
&
&
!
mHandle
)
{
mHandle
=
mDT
-
>
CopySnapshot
(
)
;
if
(
mHandle
)
{
mHandle
-
>
SetSurface
(
this
)
;
}
else
{
EnsureData
(
)
;
}
}
mDT
=
nullptr
;
}
void
SourceSurfaceWebgl
:
:
GiveTexture
(
RefPtr
<
TextureHandle
>
aHandle
)
{
MOZ_ASSERT
(
mDT
)
;
MOZ_ASSERT
(
!
mHandle
)
;
mHandle
=
aHandle
.
forget
(
)
;
mHandle
-
>
SetSurface
(
this
)
;
mDT
=
nullptr
;
}
void
SourceSurfaceWebgl
:
:
SetHandle
(
TextureHandle
*
aHandle
)
{
MOZ_ASSERT
(
!
mHandle
)
;
mFormat
=
aHandle
-
>
GetFormat
(
)
;
mSize
=
aHandle
-
>
GetSize
(
)
;
mHandle
=
aHandle
;
mHandle
-
>
SetSurface
(
this
)
;
}
void
SourceSurfaceWebgl
:
:
OnUnlinkTexture
(
SharedContextWebgl
*
aContext
)
{
MOZ_ASSERT
(
!
mDT
)
;
MOZ_ASSERT
(
mHandle
|
|
mData
)
;
if
(
!
mData
)
{
mData
=
aContext
-
>
ReadSnapshot
(
mHandle
)
;
}
mHandle
=
nullptr
;
}
already_AddRefed
<
SourceSurface
>
SourceSurfaceWebgl
:
:
ExtractSubrect
(
const
IntRect
&
aRect
)
{
if
(
!
(
mDT
|
|
(
mHandle
&
&
mSharedContext
)
)
|
|
aRect
.
IsEmpty
(
)
|
|
!
GetRect
(
)
.
Contains
(
aRect
)
)
{
return
nullptr
;
}
RefPtr
<
TextureHandle
>
subHandle
;
RefPtr
<
SharedContextWebgl
>
sharedContext
;
if
(
mDT
)
{
subHandle
=
mDT
-
>
CopySnapshot
(
aRect
)
;
if
(
!
subHandle
)
{
return
nullptr
;
}
sharedContext
=
mDT
-
>
mSharedContext
;
}
else
{
sharedContext
=
mSharedContext
;
if
(
!
sharedContext
)
{
return
nullptr
;
}
subHandle
=
sharedContext
-
>
CopySnapshot
(
aRect
mHandle
)
;
if
(
!
subHandle
)
{
return
nullptr
;
}
}
RefPtr
<
SourceSurfaceWebgl
>
surface
=
new
SourceSurfaceWebgl
(
sharedContext
)
;
surface
-
>
SetHandle
(
subHandle
)
;
return
surface
.
forget
(
)
;
}
}
