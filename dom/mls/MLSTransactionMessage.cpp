#
include
"
nsTArray
.
h
"
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
ipc
/
IPCMessageUtilsSpecializations
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
security
/
mls
/
mls_gk_ffi_generated
.
h
"
#
include
"
MLSTransactionMessage
.
h
"
#
include
"
mozilla
/
dom
/
MLSTransactionMessage
.
h
"
using
namespace
mozilla
:
:
security
:
:
mls
;
void
IPC
:
:
ParamTraits
<
mozilla
:
:
security
:
:
mls
:
:
GkReceived
>
:
:
Write
(
MessageWriter
*
aWriter
const
paramType
&
aValue
)
{
IPC
:
:
WriteParam
(
aWriter
aValue
.
tag
)
;
switch
(
aValue
.
tag
)
{
case
paramType
:
:
Tag
:
:
ApplicationMessage
:
IPC
:
:
WriteParam
(
aWriter
aValue
.
application_message
.
_0
)
;
break
;
case
paramType
:
:
Tag
:
:
GroupIdEpoch
:
IPC
:
:
WriteParam
(
aWriter
aValue
.
group_id_epoch
.
_0
)
;
break
;
case
paramType
:
:
Tag
:
:
CommitOutput
:
IPC
:
:
WriteParam
(
aWriter
aValue
.
commit_output
.
_0
)
;
break
;
default
:
break
;
}
}
bool
IPC
:
:
ParamTraits
<
mozilla
:
:
security
:
:
mls
:
:
GkReceived
>
:
:
Read
(
MessageReader
*
aReader
paramType
*
aResult
)
{
MOZ_ASSERT
(
aResult
-
>
tag
=
=
paramType
:
:
Tag
:
:
None
"
Clobbering
already
-
initialized
result
"
)
;
if
(
!
IPC
:
:
ReadParam
(
aReader
&
aResult
-
>
tag
)
)
{
aResult
-
>
tag
=
paramType
:
:
Tag
:
:
None
;
return
false
;
}
switch
(
aResult
-
>
tag
)
{
case
paramType
:
:
Tag
:
:
None
:
return
true
;
case
paramType
:
:
Tag
:
:
ApplicationMessage
:
new
(
&
aResult
-
>
application_message
)
paramType
:
:
ApplicationMessage_Body
;
return
IPC
:
:
ReadParam
(
aReader
&
aResult
-
>
application_message
.
_0
)
;
case
paramType
:
:
Tag
:
:
GroupIdEpoch
:
new
(
&
aResult
-
>
group_id_epoch
)
paramType
:
:
GroupIdEpoch_Body
;
return
IPC
:
:
ReadParam
(
aReader
&
aResult
-
>
group_id_epoch
.
_0
)
;
case
paramType
:
:
Tag
:
:
CommitOutput
:
new
(
&
aResult
-
>
commit_output
)
paramType
:
:
CommitOutput_Body
;
return
IPC
:
:
ReadParam
(
aReader
&
aResult
-
>
commit_output
.
_0
)
;
}
return
false
;
}
