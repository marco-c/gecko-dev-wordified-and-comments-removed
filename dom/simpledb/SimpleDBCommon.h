#
ifndef
mozilla_dom_simpledb_SimpledbCommon_h
#
define
mozilla_dom_simpledb_SimpledbCommon_h
#
include
"
mozilla
/
dom
/
quota
/
QuotaCommon
.
h
"
#
define
SDB_TRY_GLUE
(
.
.
.
)
\
QM_TRY_META
(
mozilla
:
:
dom
:
:
simpledb
MOZ_UNIQUE_VAR
(
tryResult
)
#
#
__VA_ARGS__
)
#
define
SDB_TRY
(
.
.
.
)
SDB_TRY_GLUE
(
__VA_ARGS__
)
#
ifdef
DEBUG
#
define
SDB_DEBUG_TRY
(
.
.
.
)
SDB_TRY
(
__VA_ARGS__
)
#
else
#
define
SDB_DEBUG_TRY
(
.
.
.
)
#
endif
#
define
SDB_TRY_VAR_GLUE
(
.
.
.
)
\
QM_TRY_VAR_META
(
mozilla
:
:
dom
:
:
simpledb
MOZ_UNIQUE_VAR
(
tryResult
)
\
#
#
__VA_ARGS__
)
#
define
SDB_TRY_VAR
(
.
.
.
)
SDB_TRY_VAR_GLUE
(
__VA_ARGS__
)
#
ifdef
DEBUG
#
define
SDB_DEBUG_TRY_VAR
(
.
.
.
)
SDB_TRY_VAR
(
__VA_ARGS__
)
#
else
#
define
SDB_DEBUG_TRY_VAR
(
.
.
.
)
#
endif
#
define
SDB_FAIL_GLUE
(
.
.
.
)
QM_FAIL_META
(
mozilla
:
:
dom
:
:
simpledb
#
#
__VA_ARGS__
)
#
define
SDB_FAIL
(
.
.
.
)
SDB_FAIL_GLUE
(
__VA_ARGS__
)
#
ifdef
DEBUG
#
define
SDB_DEBUG_FAIL
(
.
.
.
)
SDB_FAIL
(
__VA_ARGS__
)
#
else
#
define
SDB_DEBUG_FAIL
(
.
.
.
)
#
endif
namespace
mozilla
{
namespace
dom
{
extern
const
char
*
kPrefSimpleDBEnabled
;
namespace
simpledb
{
void
HandleError
(
const
nsLiteralCString
&
aExpr
const
nsLiteralCString
&
aSourceFile
int32_t
aSourceLine
)
;
}
}
}
#
endif
