#
include
"
ServiceWorkerParent
.
h
"
#
include
"
ServiceWorkerProxy
.
h
"
namespace
mozilla
{
namespace
dom
{
using
mozilla
:
:
ipc
:
:
IPCResult
;
void
ServiceWorkerParent
:
:
ActorDestroy
(
ActorDestroyReason
aReason
)
{
if
(
mProxy
)
{
mProxy
-
>
RevokeActor
(
this
)
;
mProxy
=
nullptr
;
}
}
IPCResult
ServiceWorkerParent
:
:
RecvTeardown
(
)
{
MaybeSendDelete
(
)
;
return
IPC_OK
(
)
;
}
ServiceWorkerParent
:
:
ServiceWorkerParent
(
)
:
mDeleteSent
(
false
)
{
}
ServiceWorkerParent
:
:
~
ServiceWorkerParent
(
)
{
MOZ_DIAGNOSTIC_ASSERT
(
!
mProxy
)
;
}
void
ServiceWorkerParent
:
:
Init
(
const
IPCServiceWorkerDescriptor
&
aDescriptor
)
{
MOZ_DIAGNOSTIC_ASSERT
(
!
mProxy
)
;
mProxy
=
new
ServiceWorkerProxy
(
ServiceWorkerDescriptor
(
aDescriptor
)
)
;
mProxy
-
>
Init
(
this
)
;
}
void
ServiceWorkerParent
:
:
MaybeSendDelete
(
)
{
if
(
mDeleteSent
)
{
return
;
}
mDeleteSent
=
true
;
Unused
<
<
Send__delete__
(
this
)
;
}
}
}
