let
clientId
;
addEventListener
(
"
fetch
"
function
(
event
)
{
event
.
respondWith
(
(
async
function
(
)
{
if
(
event
.
request
.
url
.
includes
(
"
getClients
"
)
)
{
try
{
await
self
.
clients
.
matchAll
(
)
;
}
catch
(
e
)
{
}
}
else
if
(
event
.
request
.
url
.
includes
(
"
getClient
-
stage1
"
)
)
{
let
clients
=
await
self
.
clients
.
matchAll
(
)
;
clientId
=
clients
[
0
]
.
id
;
}
else
if
(
event
.
request
.
url
.
includes
(
"
getClient
-
stage2
"
)
)
{
try
{
await
self
.
clients
.
get
(
clientId
)
;
}
catch
(
e
)
{
}
}
return
await
fetch
(
event
.
request
)
;
}
)
(
)
)
;
}
)
;
addEventListener
(
"
activate
"
function
(
event
)
{
event
.
waitUntil
(
clients
.
claim
(
)
)
;
}
)
;
