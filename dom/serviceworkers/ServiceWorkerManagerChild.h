#
ifndef
mozilla_dom_ServiceWorkerManagerChild_h
#
define
mozilla_dom_ServiceWorkerManagerChild_h
#
include
"
mozilla
/
dom
/
PServiceWorkerManagerChild
.
h
"
#
include
"
mozilla
/
ipc
/
BackgroundUtils
.
h
"
namespace
mozilla
{
class
OriginAttributes
;
namespace
ipc
{
class
BackgroundChildImpl
;
}
namespace
dom
{
class
ServiceWorkerManagerChild
final
:
public
PServiceWorkerManagerChild
{
friend
class
mozilla
:
:
ipc
:
:
BackgroundChildImpl
;
public
:
NS_INLINE_DECL_REFCOUNTING
(
ServiceWorkerManagerChild
)
void
ManagerShuttingDown
(
)
{
mShuttingDown
=
true
;
}
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvNotifyRegister
(
const
ServiceWorkerRegistrationData
&
aData
)
override
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvNotifySoftUpdate
(
const
OriginAttributes
&
aOriginAttributes
const
nsString
&
aScope
)
override
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvNotifyUnregister
(
const
PrincipalInfo
&
aPrincipalInfo
const
nsString
&
aScope
)
override
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvNotifyRemove
(
const
nsCString
&
aHost
)
override
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvNotifyRemoveAll
(
)
override
;
virtual
PServiceWorkerUpdaterChild
*
AllocPServiceWorkerUpdaterChild
(
const
OriginAttributes
&
originAttributes
const
nsCString
&
scope
)
override
;
virtual
bool
DeallocPServiceWorkerUpdaterChild
(
PServiceWorkerUpdaterChild
*
aActor
)
override
;
private
:
ServiceWorkerManagerChild
(
)
:
mShuttingDown
(
false
)
{
}
~
ServiceWorkerManagerChild
(
)
{
}
bool
mShuttingDown
;
}
;
}
}
#
endif
