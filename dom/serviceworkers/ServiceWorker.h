#
ifndef
mozilla_dom_serviceworker_h__
#
define
mozilla_dom_serviceworker_h__
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
dom
/
ServiceWorkerBinding
.
h
"
#
include
"
mozilla
/
dom
/
ServiceWorkerDescriptor
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
{
namespace
dom
{
class
ServiceWorkerInfo
;
class
ServiceWorkerManager
;
class
SharedWorker
;
bool
ServiceWorkerVisible
(
JSContext
*
aCx
JSObject
*
aObj
)
;
class
ServiceWorker
final
:
public
DOMEventTargetHelper
{
public
:
NS_DECL_ISUPPORTS_INHERITED
IMPL_EVENT_HANDLER
(
statechange
)
IMPL_EVENT_HANDLER
(
error
)
static
already_AddRefed
<
ServiceWorker
>
Create
(
nsIGlobalObject
*
aOwner
const
ServiceWorkerDescriptor
&
aDescriptor
)
;
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
ServiceWorkerState
State
(
)
const
;
void
SetState
(
ServiceWorkerState
aState
)
;
void
GetScriptURL
(
nsString
&
aURL
)
const
;
#
ifdef
XP_WIN
#
undef
PostMessage
#
endif
void
PostMessage
(
JSContext
*
aCx
JS
:
:
Handle
<
JS
:
:
Value
>
aMessage
const
Sequence
<
JSObject
*
>
&
aTransferable
ErrorResult
&
aRv
)
;
private
:
ServiceWorker
(
nsIGlobalObject
*
aWindow
const
ServiceWorkerDescriptor
&
aDescriptor
ServiceWorkerInfo
*
aInfo
)
;
~
ServiceWorker
(
)
;
ServiceWorkerDescriptor
mDescriptor
;
const
RefPtr
<
ServiceWorkerInfo
>
mInfo
;
}
;
}
}
#
endif
