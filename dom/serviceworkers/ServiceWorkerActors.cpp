#
include
"
ServiceWorkerActors
.
h
"
#
include
"
ServiceWorkerChild
.
h
"
#
include
"
ServiceWorkerContainerChild
.
h
"
#
include
"
ServiceWorkerContainerParent
.
h
"
#
include
"
ServiceWorkerParent
.
h
"
#
include
"
ServiceWorkerRegistrationChild
.
h
"
#
include
"
ServiceWorkerRegistrationParent
.
h
"
namespace
mozilla
{
namespace
dom
{
PServiceWorkerChild
*
AllocServiceWorkerChild
(
)
{
MOZ_CRASH
(
"
should
not
be
called
"
)
;
}
bool
DeallocServiceWorkerChild
(
PServiceWorkerChild
*
aActor
)
{
auto
actor
=
static_cast
<
ServiceWorkerChild
*
>
(
aActor
)
;
delete
actor
;
return
true
;
}
PServiceWorkerParent
*
AllocServiceWorkerParent
(
)
{
return
new
ServiceWorkerParent
(
)
;
}
bool
DeallocServiceWorkerParent
(
PServiceWorkerParent
*
aActor
)
{
auto
actor
=
static_cast
<
ServiceWorkerParent
*
>
(
aActor
)
;
delete
actor
;
return
true
;
}
void
InitServiceWorkerParent
(
PServiceWorkerParent
*
aActor
const
IPCServiceWorkerDescriptor
&
aDescriptor
)
{
auto
actor
=
static_cast
<
ServiceWorkerParent
*
>
(
aActor
)
;
actor
-
>
Init
(
aDescriptor
)
;
}
PServiceWorkerContainerChild
*
AllocServiceWorkerContainerChild
(
)
{
return
new
ServiceWorkerContainerChild
(
)
;
}
bool
DeallocServiceWorkerContainerChild
(
PServiceWorkerContainerChild
*
aActor
)
{
auto
actor
=
static_cast
<
ServiceWorkerContainerChild
*
>
(
aActor
)
;
delete
actor
;
return
true
;
}
PServiceWorkerContainerParent
*
AllocServiceWorkerContainerParent
(
)
{
return
new
ServiceWorkerContainerParent
(
)
;
}
bool
DeallocServiceWorkerContainerParent
(
PServiceWorkerContainerParent
*
aActor
)
{
auto
actor
=
static_cast
<
ServiceWorkerContainerParent
*
>
(
aActor
)
;
delete
actor
;
return
true
;
}
void
InitServiceWorkerContainerParent
(
PServiceWorkerContainerParent
*
aActor
)
{
auto
actor
=
static_cast
<
ServiceWorkerContainerParent
*
>
(
aActor
)
;
actor
-
>
Init
(
)
;
}
PServiceWorkerRegistrationChild
*
AllocServiceWorkerRegistrationChild
(
)
{
return
new
ServiceWorkerRegistrationChild
(
)
;
}
bool
DeallocServiceWorkerRegistrationChild
(
PServiceWorkerRegistrationChild
*
aActor
)
{
auto
actor
=
static_cast
<
ServiceWorkerRegistrationChild
*
>
(
aActor
)
;
delete
actor
;
return
true
;
}
PServiceWorkerRegistrationParent
*
AllocServiceWorkerRegistrationParent
(
)
{
return
new
ServiceWorkerRegistrationParent
(
)
;
}
bool
DeallocServiceWorkerRegistrationParent
(
PServiceWorkerRegistrationParent
*
aActor
)
{
auto
actor
=
static_cast
<
ServiceWorkerRegistrationParent
*
>
(
aActor
)
;
delete
actor
;
return
true
;
}
void
InitServiceWorkerRegistrationParent
(
PServiceWorkerRegistrationParent
*
aActor
const
IPCServiceWorkerRegistrationDescriptor
&
aDescriptor
)
{
auto
actor
=
static_cast
<
ServiceWorkerRegistrationParent
*
>
(
aActor
)
;
actor
-
>
Init
(
aDescriptor
)
;
}
}
}
