#
ifndef
mozilla_dom_fetcheventopproxyparent_h__
#
define
mozilla_dom_fetcheventopproxyparent_h__
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
PFetchEventOpProxyParent
.
h
"
namespace
mozilla
{
namespace
dom
{
class
FetchEventOpParent
;
class
PRemoteWorkerParent
;
class
ServiceWorkerFetchEventOpArgs
;
class
FetchEventOpProxyParent
final
:
public
PFetchEventOpProxyParent
{
friend
class
PFetchEventOpProxyParent
;
public
:
static
void
Create
(
PRemoteWorkerParent
*
aManager
const
ServiceWorkerFetchEventOpArgs
&
aArgs
RefPtr
<
FetchEventOpParent
>
aReal
)
;
~
FetchEventOpProxyParent
(
)
;
private
:
explicit
FetchEventOpProxyParent
(
RefPtr
<
FetchEventOpParent
>
&
&
aReal
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvAsyncLog
(
const
nsCString
&
aScriptSpec
const
uint32_t
&
aLineNumber
const
uint32_t
&
aColumnNumber
const
nsCString
&
aMessageName
nsTArray
<
nsString
>
&
&
aParams
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvRespondWith
(
const
IPCFetchEventRespondWithResult
&
aResult
)
;
mozilla
:
:
ipc
:
:
IPCResult
Recv__delete__
(
const
ServiceWorkerFetchEventOpResult
&
aResult
)
;
void
ActorDestroy
(
ActorDestroyReason
)
override
;
RefPtr
<
FetchEventOpParent
>
mReal
;
}
;
}
}
#
endif
