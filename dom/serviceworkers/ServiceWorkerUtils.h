#
ifndef
_mozilla_dom_ServiceWorkerUtils_h
#
define
_mozilla_dom_ServiceWorkerUtils_h
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
mozilla
/
dom
/
ServiceWorkerRegistrationDescriptor
.
h
"
#
include
"
nsTArray
.
h
"
class
nsIURI
;
namespace
mozilla
{
class
CopyableErrorResult
;
namespace
dom
{
class
ClientInfo
;
class
ServiceWorkerRegistrationData
;
class
ServiceWorkerRegistrationDescriptor
;
typedef
MozPromise
<
ServiceWorkerRegistrationDescriptor
CopyableErrorResult
false
>
ServiceWorkerRegistrationPromise
;
typedef
MozPromise
<
nsTArray
<
ServiceWorkerRegistrationDescriptor
>
CopyableErrorResult
false
>
ServiceWorkerRegistrationListPromise
;
typedef
std
:
:
function
<
void
(
const
ServiceWorkerRegistrationDescriptor
&
)
>
ServiceWorkerRegistrationCallback
;
typedef
std
:
:
function
<
void
(
const
nsTArray
<
ServiceWorkerRegistrationDescriptor
>
&
)
>
ServiceWorkerRegistrationListCallback
;
typedef
std
:
:
function
<
void
(
bool
)
>
ServiceWorkerBoolCallback
;
typedef
std
:
:
function
<
void
(
ErrorResult
&
&
)
>
ServiceWorkerFailureCallback
;
bool
ServiceWorkerParentInterceptEnabled
(
)
;
bool
ServiceWorkerRegistrationDataIsValid
(
const
ServiceWorkerRegistrationData
&
aData
)
;
void
ServiceWorkerScopeAndScriptAreValid
(
const
ClientInfo
&
aClientInfo
nsIURI
*
aScopeURI
nsIURI
*
aScriptURI
ErrorResult
&
aRv
)
;
}
}
#
endif
