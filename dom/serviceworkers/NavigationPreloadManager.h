#
ifndef
mozilla_dom_NavigationPreloadManager_h
#
define
mozilla_dom_NavigationPreloadManager_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
mozilla
/
dom
/
ServiceWorkerRegistration
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
{
namespace
dom
{
class
Promise
;
class
NavigationPreloadManager
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
NavigationPreloadManager
)
static
bool
IsValidHeader
(
const
nsACString
&
aHeader
)
;
NavigationPreloadManager
(
nsCOMPtr
<
nsIGlobalObject
>
&
&
aGlobal
RefPtr
<
ServiceWorkerRegistration
:
:
Inner
>
&
aInner
)
;
nsIGlobalObject
*
GetParentObject
(
)
const
{
return
mGlobal
;
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
already_AddRefed
<
Promise
>
Enable
(
)
;
already_AddRefed
<
Promise
>
Disable
(
)
;
already_AddRefed
<
Promise
>
SetHeaderValue
(
const
nsACString
&
aHeader
)
;
already_AddRefed
<
Promise
>
GetState
(
)
;
private
:
~
NavigationPreloadManager
(
)
=
default
;
already_AddRefed
<
Promise
>
SetEnabled
(
bool
aEnabled
)
;
nsCOMPtr
<
nsIGlobalObject
>
mGlobal
;
RefPtr
<
ServiceWorkerRegistration
:
:
Inner
>
mInner
;
}
;
}
}
#
endif
