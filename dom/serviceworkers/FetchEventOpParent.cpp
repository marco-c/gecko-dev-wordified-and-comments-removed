#
include
"
FetchEventOpParent
.
h
"
#
include
"
nsDebug
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
mozilla
/
dom
/
FetchEventOpProxyParent
.
h
"
#
include
"
mozilla
/
dom
/
RemoteWorkerControllerParent
.
h
"
#
include
"
mozilla
/
dom
/
RemoteWorkerParent
.
h
"
#
include
"
mozilla
/
ipc
/
BackgroundParent
.
h
"
namespace
mozilla
{
using
namespace
ipc
;
namespace
dom
{
void
FetchEventOpParent
:
:
Initialize
(
const
ServiceWorkerFetchEventOpArgs
&
aArgs
)
{
AssertIsInMainProcess
(
)
;
AssertIsOnBackgroundThread
(
)
;
RemoteWorkerControllerParent
*
manager
=
static_cast
<
RemoteWorkerControllerParent
*
>
(
Manager
(
)
)
;
MOZ_ASSERT
(
manager
)
;
RefPtr
<
RemoteWorkerParent
>
proxyManager
=
manager
-
>
GetRemoteWorkerParent
(
)
;
if
(
NS_WARN_IF
(
!
proxyManager
)
)
{
Unused
<
<
Send__delete__
(
this
NS_ERROR_DOM_ABORT_ERR
)
;
return
;
}
FetchEventOpProxyParent
:
:
Create
(
proxyManager
.
get
(
)
aArgs
this
)
;
}
void
FetchEventOpParent
:
:
ActorDestroy
(
ActorDestroyReason
)
{
AssertIsOnBackgroundThread
(
)
;
}
}
}
