#
ifndef
mozilla_dom_serviceworkershutdownblocker_h__
#
define
mozilla_dom_serviceworkershutdownblocker_h__
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIAsyncShutdown
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
mozilla
/
MozPromise
.
h
"
namespace
mozilla
{
namespace
dom
{
class
ServiceWorkerShutdownBlocker
final
:
public
nsIAsyncShutdownBlocker
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIASYNCSHUTDOWNBLOCKER
static
already_AddRefed
<
ServiceWorkerShutdownBlocker
>
CreateAndRegisterOn
(
nsIAsyncShutdownClient
*
aShutdownBarrier
)
;
void
WaitOnPromise
(
GenericNonExclusivePromise
*
aPromise
)
;
void
StopAcceptingPromises
(
)
;
private
:
ServiceWorkerShutdownBlocker
(
)
;
~
ServiceWorkerShutdownBlocker
(
)
;
void
MaybeUnblockShutdown
(
)
;
uint32_t
PromiseSettled
(
)
;
bool
IsAcceptingPromises
(
)
const
;
uint32_t
GetPendingPromises
(
)
const
;
struct
AcceptingPromises
{
uint32_t
mPendingPromises
=
0
;
}
;
struct
NotAcceptingPromises
{
explicit
NotAcceptingPromises
(
AcceptingPromises
aPreviousState
)
;
uint32_t
mPendingPromises
=
0
;
}
;
Variant
<
AcceptingPromises
NotAcceptingPromises
>
mState
;
nsCOMPtr
<
nsIAsyncShutdownClient
>
mShutdownClient
;
}
;
}
}
#
endif
