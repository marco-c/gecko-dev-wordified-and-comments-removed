#
ifndef
mozilla_dom_XPathEvaluator_h
#
define
mozilla_dom_XPathEvaluator_h
#
include
"
mozilla
/
dom
/
NonRefcountedDOMObject
.
h
"
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
Document
.
h
"
class
nsINode
;
class
txIParseContext
;
class
txResultRecycler
;
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
GlobalObject
;
class
XPathExpression
;
class
XPathNSResolver
;
class
XPathResult
;
class
XPathEvaluator
final
:
public
NonRefcountedDOMObject
{
public
:
explicit
XPathEvaluator
(
Document
*
aDocument
=
nullptr
)
;
~
XPathEvaluator
(
)
;
bool
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
JS
:
:
MutableHandle
<
JSObject
*
>
aReflector
)
;
Document
*
GetParentObject
(
)
{
return
mDocument
;
}
static
UniquePtr
<
XPathEvaluator
>
Constructor
(
const
GlobalObject
&
aGlobal
)
;
UniquePtr
<
XPathExpression
>
CreateExpression
(
const
nsAString
&
aExpression
XPathNSResolver
*
aResolver
ErrorResult
&
rv
)
;
UniquePtr
<
XPathExpression
>
CreateExpression
(
const
nsAString
&
aExpression
nsINode
*
aResolver
ErrorResult
&
aRv
)
;
UniquePtr
<
XPathExpression
>
CreateExpression
(
const
nsAString
&
aExpression
txIParseContext
*
aContext
Document
*
aDocument
ErrorResult
&
aRv
)
;
nsINode
*
CreateNSResolver
(
nsINode
&
aNodeResolver
)
{
return
&
aNodeResolver
;
}
already_AddRefed
<
XPathResult
>
Evaluate
(
JSContext
*
aCx
const
nsAString
&
aExpression
nsINode
&
aContextNode
XPathNSResolver
*
aResolver
uint16_t
aType
JS
:
:
Handle
<
JSObject
*
>
aResult
ErrorResult
&
rv
)
;
private
:
WeakPtr
<
Document
>
mDocument
;
RefPtr
<
txResultRecycler
>
mRecycler
;
}
;
}
}
#
endif
