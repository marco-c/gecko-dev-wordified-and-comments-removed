ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
EXSLT_REGEXP_CID
=
Components
.
ID
(
"
{
18a03189
-
067b
-
4978
-
b4f1
-
bafe35292ed6
}
"
)
;
function
txEXSLTRegExFunctions
(
)
{
}
var
SingletonInstance
=
null
;
txEXSLTRegExFunctions
.
prototype
=
{
classID
:
EXSLT_REGEXP_CID
QueryInterface
:
XPCOMUtils
.
generateQI
(
[
Ci
.
txIEXSLTRegExFunctions
]
)
match
:
function
(
str
regex
flags
doc
)
{
var
docFrag
=
doc
.
createDocumentFragment
(
)
;
var
re
=
new
RegExp
(
regex
flags
)
;
var
matches
=
str
.
match
(
re
)
;
if
(
matches
!
=
null
)
{
for
(
var
i
=
0
;
i
<
matches
.
length
;
+
+
i
)
{
var
match
=
matches
[
i
]
;
var
elem
=
doc
.
createElementNS
(
null
"
match
"
)
;
var
text
=
doc
.
createTextNode
(
match
?
match
:
'
'
)
;
elem
.
appendChild
(
text
)
;
docFrag
.
appendChild
(
elem
)
;
}
}
return
docFrag
;
}
replace
:
function
(
str
regex
flags
replace
)
{
var
re
=
new
RegExp
(
regex
flags
)
;
return
str
.
replace
(
re
replace
)
;
}
test
:
function
(
str
regex
flags
)
{
var
re
=
new
RegExp
(
regex
flags
)
;
return
re
.
test
(
str
)
;
}
}
this
.
NSGetFactory
=
XPCOMUtils
.
generateNSGetFactory
(
[
txEXSLTRegExFunctions
]
)
;
