#
ifndef
mozilla_dom_FileSystemBase_h
#
define
mozilla_dom_FileSystemBase_h
#
include
"
nsString
.
h
"
#
include
"
Directory
.
h
"
namespace
mozilla
{
namespace
dom
{
class
BlobImpl
;
class
FileSystemBase
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
FileSystemBase
)
FileSystemBase
(
)
;
virtual
void
Shutdown
(
)
;
virtual
void
SerializeDOMPath
(
nsAString
&
aOutput
)
const
=
0
;
virtual
already_AddRefed
<
FileSystemBase
>
Clone
(
)
=
0
;
virtual
bool
ShouldCreateDirectory
(
)
=
0
;
virtual
nsISupports
*
GetParentObject
(
)
const
;
virtual
void
GetDirectoryName
(
nsIFile
*
aFile
nsAString
&
aRetval
ErrorResult
&
aRv
)
const
;
void
GetDOMPath
(
nsIFile
*
aFile
nsAString
&
aRetval
ErrorResult
&
aRv
)
const
;
const
nsAString
&
LocalRootPath
(
)
const
{
return
mLocalRootPath
;
}
bool
IsShutdown
(
)
const
{
return
mShutdown
;
}
virtual
bool
IsSafeFile
(
nsIFile
*
aFile
)
const
;
virtual
bool
IsSafeDirectory
(
Directory
*
aDir
)
const
;
bool
GetRealPath
(
BlobImpl
*
aFile
nsIFile
*
*
aPath
)
const
;
virtual
void
Unlink
(
)
{
}
virtual
void
Traverse
(
nsCycleCollectionTraversalCallback
&
cb
)
{
}
void
AssertIsOnOwningThread
(
)
const
;
protected
:
virtual
~
FileSystemBase
(
)
;
nsString
mLocalRootPath
;
bool
mShutdown
;
#
ifdef
DEBUG
PRThread
*
mOwningThread
;
#
endif
}
;
}
}
#
endif
