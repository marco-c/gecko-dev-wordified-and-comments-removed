#
ifndef
mozilla_dom_OSFileSystem_h
#
define
mozilla_dom_OSFileSystem_h
#
include
"
mozilla
/
dom
/
FileSystemBase
.
h
"
namespace
mozilla
{
namespace
dom
{
class
OSFileSystem
final
:
public
FileSystemBase
{
public
:
explicit
OSFileSystem
(
const
nsAString
&
aRootDir
)
;
void
Init
(
nsIGlobalObject
*
aGlobal
)
;
virtual
already_AddRefed
<
FileSystemBase
>
Clone
(
)
override
;
virtual
bool
ShouldCreateDirectory
(
)
override
{
MOZ_CRASH
(
"
This
should
not
be
called
.
"
)
;
return
false
;
}
virtual
nsIGlobalObject
*
GetParentObject
(
)
const
override
;
virtual
bool
IsSafeFile
(
nsIFile
*
aFile
)
const
override
;
virtual
bool
IsSafeDirectory
(
Directory
*
aDir
)
const
override
;
virtual
void
SerializeDOMPath
(
nsAString
&
aOutput
)
const
override
;
virtual
void
Unlink
(
)
override
;
virtual
void
Traverse
(
nsCycleCollectionTraversalCallback
&
cb
)
override
;
private
:
virtual
~
OSFileSystem
(
)
=
default
;
nsCOMPtr
<
nsIGlobalObject
>
mGlobal
;
}
;
class
OSFileSystemParent
final
:
public
FileSystemBase
{
public
:
explicit
OSFileSystemParent
(
const
nsAString
&
aRootDir
)
;
virtual
already_AddRefed
<
FileSystemBase
>
Clone
(
)
override
{
MOZ_CRASH
(
"
This
should
not
be
called
on
the
PBackground
thread
.
"
)
;
return
nullptr
;
}
virtual
bool
ShouldCreateDirectory
(
)
override
{
return
false
;
}
virtual
nsIGlobalObject
*
GetParentObject
(
)
const
override
{
MOZ_CRASH
(
"
This
should
not
be
called
on
the
PBackground
thread
.
"
)
;
return
nullptr
;
}
virtual
void
GetDirectoryName
(
nsIFile
*
aFile
nsAString
&
aRetval
ErrorResult
&
aRv
)
const
override
{
MOZ_CRASH
(
"
This
should
not
be
called
on
the
PBackground
thread
.
"
)
;
}
virtual
bool
IsSafeFile
(
nsIFile
*
aFile
)
const
override
{
return
true
;
}
virtual
bool
IsSafeDirectory
(
Directory
*
aDir
)
const
override
{
MOZ_CRASH
(
"
This
should
not
be
called
on
the
PBackground
thread
.
"
)
;
return
true
;
}
virtual
void
SerializeDOMPath
(
nsAString
&
aOutput
)
const
override
{
MOZ_CRASH
(
"
This
should
not
be
called
on
the
PBackground
thread
.
"
)
;
}
virtual
void
Unlink
(
)
override
{
MOZ_CRASH
(
"
This
should
not
be
called
on
the
PBackground
thread
.
"
)
;
}
virtual
void
Traverse
(
nsCycleCollectionTraversalCallback
&
cb
)
override
{
MOZ_CRASH
(
"
This
should
not
be
called
on
the
PBackground
thread
.
"
)
;
}
private
:
virtual
~
OSFileSystemParent
(
)
=
default
;
}
;
}
}
#
endif
