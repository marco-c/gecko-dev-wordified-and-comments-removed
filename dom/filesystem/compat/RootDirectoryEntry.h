#
ifndef
mozilla_dom_RootDirectoryEntry_h
#
define
mozilla_dom_RootDirectoryEntry_h
#
include
"
mozilla
/
dom
/
DirectoryEntry
.
h
"
namespace
mozilla
{
namespace
dom
{
class
RootDirectoryEntry
final
:
public
DirectoryEntry
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
RootDirectoryEntry
DirectoryEntry
)
RootDirectoryEntry
(
nsIGlobalObject
*
aGlobalObject
const
Sequence
<
RefPtr
<
FileSystemEntry
>
>
&
aEntries
FileSystem
*
aFileSystem
)
;
virtual
void
GetName
(
nsAString
&
aName
ErrorResult
&
aRv
)
const
override
;
virtual
void
GetFullPath
(
nsAString
&
aFullPath
ErrorResult
&
aRv
)
const
override
;
virtual
already_AddRefed
<
DirectoryReader
>
CreateReader
(
)
const
override
;
private
:
~
RootDirectoryEntry
(
)
;
virtual
void
GetInternal
(
const
nsAString
&
aPath
const
FileSystemFlags
&
aFlag
const
Optional
<
OwningNonNull
<
EntryCallback
>
>
&
aSuccessCallback
const
Optional
<
OwningNonNull
<
ErrorCallback
>
>
&
aErrorCallback
GetInternalType
aType
)
const
override
;
void
Error
(
const
Optional
<
OwningNonNull
<
ErrorCallback
>
>
&
aErrorCallback
nsresult
aError
)
const
;
Sequence
<
RefPtr
<
FileSystemEntry
>
>
mEntries
;
}
;
}
}
#
endif
