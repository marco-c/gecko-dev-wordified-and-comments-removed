#
ifndef
mozilla_dom_DirectoryReader_h
#
define
mozilla_dom_DirectoryReader_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
{
namespace
dom
{
class
Directory
;
class
FileSystem
;
class
DirectoryReader
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
DirectoryReader
)
explicit
DirectoryReader
(
nsIGlobalObject
*
aGlobalObject
FileSystem
*
aFileSystem
Directory
*
aDirectory
)
;
nsIGlobalObject
*
GetParentObject
(
)
const
{
return
mParent
;
}
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
virtual
void
ReadEntries
(
EntriesCallback
&
aSuccessCallback
const
Optional
<
OwningNonNull
<
ErrorCallback
>
>
&
aErrorCallback
ErrorResult
&
aRv
)
;
protected
:
virtual
~
DirectoryReader
(
)
;
private
:
nsCOMPtr
<
nsIGlobalObject
>
mParent
;
RefPtr
<
FileSystem
>
mFileSystem
;
RefPtr
<
Directory
>
mDirectory
;
bool
mAlreadyRead
;
}
;
}
}
#
endif
