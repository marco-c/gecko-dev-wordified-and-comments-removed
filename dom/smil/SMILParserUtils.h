#
ifndef
NS_SMILPARSERUTILS_H_
#
define
NS_SMILPARSERUTILS_H_
#
include
"
nsTArray
.
h
"
#
include
"
nsStringFwd
.
h
"
class
nsISMILAttr
;
namespace
mozilla
{
class
SMILKeySpline
;
class
SMILRepeatCount
;
class
SMILTimeValue
;
class
SMILTimeValueSpecParams
;
class
SMILValue
;
namespace
dom
{
class
SVGAnimationElement
;
}
class
SMILParserUtils
{
public
:
class
MOZ_STACK_CLASS
GenericValueParser
{
public
:
virtual
bool
Parse
(
const
nsAString
&
aValueStr
)
=
0
;
}
;
static
const
nsDependentSubstring
TrimWhitespace
(
const
nsAString
&
aString
)
;
static
bool
ParseKeySplines
(
const
nsAString
&
aSpec
FallibleTArray
<
SMILKeySpline
>
&
aKeySplines
)
;
static
bool
ParseSemicolonDelimitedProgressList
(
const
nsAString
&
aSpec
bool
aNonDecreasing
FallibleTArray
<
double
>
&
aArray
)
;
static
bool
ParseValues
(
const
nsAString
&
aSpec
const
mozilla
:
:
dom
:
:
SVGAnimationElement
*
aSrcElement
const
nsISMILAttr
&
aAttribute
FallibleTArray
<
SMILValue
>
&
aValuesArray
bool
&
aPreventCachingOfSandwich
)
;
static
bool
ParseValuesGeneric
(
const
nsAString
&
aSpec
GenericValueParser
&
aParser
)
;
static
bool
ParseRepeatCount
(
const
nsAString
&
aSpec
SMILRepeatCount
&
aResult
)
;
static
bool
ParseTimeValueSpecParams
(
const
nsAString
&
aSpec
SMILTimeValueSpecParams
&
aResult
)
;
static
bool
ParseClockValue
(
const
nsAString
&
aSpec
SMILTimeValue
*
aResult
)
;
static
int32_t
CheckForNegativeNumber
(
const
nsAString
&
aStr
)
;
}
;
}
#
endif
