#
ifndef
NS_SMILTARGETIDENTIFIER_H_
#
define
NS_SMILTARGETIDENTIFIER_H_
#
include
"
mozilla
/
dom
/
Element
.
h
"
namespace
mozilla
{
struct
SMILTargetIdentifier
{
SMILTargetIdentifier
(
)
:
mElement
(
nullptr
)
mAttributeName
(
nullptr
)
mAttributeNamespaceID
(
kNameSpaceID_Unknown
)
{
}
inline
bool
Equals
(
const
SMILTargetIdentifier
&
aOther
)
const
{
return
(
aOther
.
mElement
=
=
mElement
&
&
aOther
.
mAttributeName
=
=
mAttributeName
&
&
aOther
.
mAttributeNamespaceID
=
=
mAttributeNamespaceID
)
;
}
RefPtr
<
mozilla
:
:
dom
:
:
Element
>
mElement
;
RefPtr
<
nsAtom
>
mAttributeName
;
int32_t
mAttributeNamespaceID
;
}
;
class
nsSMILWeakTargetIdentifier
{
public
:
nsSMILWeakTargetIdentifier
(
)
:
mElement
(
nullptr
)
mAttributeName
(
nullptr
)
{
}
nsSMILWeakTargetIdentifier
&
operator
=
(
const
SMILTargetIdentifier
&
aOther
)
{
mElement
=
aOther
.
mElement
;
mAttributeName
=
aOther
.
mAttributeName
;
return
*
this
;
}
inline
bool
Equals
(
const
SMILTargetIdentifier
&
aOther
)
const
{
return
(
aOther
.
mElement
=
=
mElement
&
&
aOther
.
mAttributeName
=
=
mAttributeName
)
;
}
private
:
const
nsIContent
*
mElement
;
const
nsAtom
*
mAttributeName
;
}
;
}
#
endif
