#
ifndef
mozilla_dom_HTMLMapElement_h
#
define
mozilla_dom_HTMLMapElement_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsGenericHTMLElement
.
h
"
#
include
"
nsGkAtoms
.
h
"
class
nsContentList
;
namespace
mozilla
{
namespace
dom
{
class
HTMLMapElement
final
:
public
nsGenericHTMLElement
{
public
:
explicit
HTMLMapElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
aNodeInfo
)
;
NS_DECL_ISUPPORTS_INHERITED
virtual
nsresult
Clone
(
mozilla
:
:
dom
:
:
NodeInfo
*
aNodeInfo
nsINode
*
*
aResult
bool
aPreallocateChildren
)
const
override
;
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED_NO_UNLINK
(
HTMLMapElement
nsGenericHTMLElement
)
void
GetName
(
nsAString
&
aValue
)
{
GetHTMLAttr
(
nsGkAtoms
:
:
name
aValue
)
;
}
void
SetName
(
const
nsAString
&
aName
ErrorResult
&
aError
)
{
SetHTMLAttr
(
nsGkAtoms
:
:
name
aName
aError
)
;
}
nsIHTMLCollection
*
Areas
(
)
;
virtual
JSObject
*
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
protected
:
~
HTMLMapElement
(
)
{
}
RefPtr
<
nsContentList
>
mAreas
;
}
;
}
}
#
endif
