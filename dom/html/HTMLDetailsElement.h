#
ifndef
mozilla_dom_HTMLDetailsElement_h
#
define
mozilla_dom_HTMLDetailsElement_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsGenericHTMLElement
.
h
"
namespace
mozilla
{
namespace
dom
{
class
HTMLDetailsElement
final
:
public
nsGenericHTMLElement
{
public
:
using
NodeInfo
=
mozilla
:
:
dom
:
:
NodeInfo
;
explicit
HTMLDetailsElement
(
already_AddRefed
<
NodeInfo
>
&
aNodeInfo
)
:
nsGenericHTMLElement
(
aNodeInfo
)
{
}
NS_IMPL_FROMCONTENT_HTML_WITH_TAG
(
HTMLDetailsElement
details
)
nsresult
Clone
(
NodeInfo
*
aNodeInfo
nsINode
*
*
aResult
)
const
override
;
nsChangeHint
GetAttributeChangeHint
(
const
nsIAtom
*
aAttribute
int32_t
aModType
)
const
override
;
bool
Open
(
)
const
{
return
GetBoolAttr
(
nsGkAtoms
:
:
open
)
;
}
void
SetOpen
(
bool
aOpen
ErrorResult
&
aError
)
{
SetHTMLBoolAttr
(
nsGkAtoms
:
:
open
aOpen
aError
)
;
}
protected
:
virtual
~
HTMLDetailsElement
(
)
;
JSObject
*
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
}
;
}
}
#
endif
