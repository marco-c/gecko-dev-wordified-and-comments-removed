#
ifndef
InputType_h__
#
define
InputType_h__
#
include
<
stdint
.
h
>
#
include
"
mozilla
/
Decimal
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsError
.
h
"
inline
mozilla
:
:
Decimal
NS_floorModulo
(
mozilla
:
:
Decimal
x
mozilla
:
:
Decimal
y
)
{
return
(
x
-
y
*
(
x
/
y
)
.
floor
(
)
)
;
}
namespace
mozilla
{
namespace
dom
{
class
HTMLInputElement
;
}
}
struct
DoNotDelete
;
class
nsIFrame
;
class
InputType
{
public
:
static
mozilla
:
:
UniquePtr
<
InputType
DoNotDelete
>
Create
(
mozilla
:
:
dom
:
:
HTMLInputElement
*
aInputElement
uint8_t
aType
void
*
aMemory
)
;
virtual
~
InputType
(
)
{
}
static
const
mozilla
:
:
Decimal
kStepAny
;
void
DropReference
(
)
;
virtual
bool
IsTooLong
(
)
const
;
virtual
bool
IsTooShort
(
)
const
;
virtual
bool
IsValueMissing
(
)
const
;
virtual
bool
HasTypeMismatch
(
)
const
;
virtual
bool
HasPatternMismatch
(
)
const
;
virtual
bool
IsRangeOverflow
(
)
const
;
virtual
bool
IsRangeUnderflow
(
)
const
;
virtual
bool
HasStepMismatch
(
bool
aUseZeroIfValueNaN
)
const
;
virtual
bool
HasBadInput
(
)
const
;
virtual
nsresult
MinMaxStepAttrChanged
(
)
;
virtual
bool
ConvertStringToNumber
(
nsAString
&
aValue
mozilla
:
:
Decimal
&
aResultValue
)
const
;
virtual
bool
ConvertNumberToString
(
mozilla
:
:
Decimal
aValue
nsAString
&
aResultString
)
const
;
protected
:
explicit
InputType
(
mozilla
:
:
dom
:
:
HTMLInputElement
*
aInputElement
)
:
mInputElement
(
aInputElement
)
{
}
virtual
bool
IsMutable
(
)
const
;
bool
IsValueEmpty
(
)
const
;
void
GetNonFileValueInternal
(
nsAString
&
aValue
)
const
;
nsresult
SetValueInternal
(
const
nsAString
&
aValue
uint32_t
aFlags
)
;
mozilla
:
:
Decimal
GetStepBase
(
)
const
;
nsIFrame
*
GetPrimaryFrame
(
)
const
;
bool
ParseDate
(
const
nsAString
&
aValue
uint32_t
*
aYear
uint32_t
*
aMonth
uint32_t
*
aDay
)
const
;
bool
ParseTime
(
const
nsAString
&
aValue
uint32_t
*
aResult
)
const
;
bool
ParseMonth
(
const
nsAString
&
aValue
uint32_t
*
aYear
uint32_t
*
aMonth
)
const
;
bool
ParseWeek
(
const
nsAString
&
aValue
uint32_t
*
aYear
uint32_t
*
aWeek
)
const
;
bool
ParseDateTimeLocal
(
const
nsAString
&
aValue
uint32_t
*
aYear
uint32_t
*
aMonth
uint32_t
*
aDay
uint32_t
*
aTime
)
const
;
int32_t
MonthsSinceJan1970
(
uint32_t
aYear
uint32_t
aMonth
)
const
;
double
DaysSinceEpochFromWeek
(
uint32_t
aYear
uint32_t
aWeek
)
const
;
uint32_t
DayOfWeek
(
uint32_t
aYear
uint32_t
aMonth
uint32_t
aDay
bool
isoWeek
)
const
;
uint32_t
MaximumWeekInYear
(
uint32_t
aYear
)
const
;
mozilla
:
:
dom
:
:
HTMLInputElement
*
mInputElement
;
}
;
struct
DoNotDelete
{
void
operator
(
)
(
:
:
InputType
*
p
)
{
p
-
>
~
InputType
(
)
;
}
}
;
#
endif
