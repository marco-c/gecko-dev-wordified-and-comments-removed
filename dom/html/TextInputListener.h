#
ifndef
mozilla_TextInputListener_h
#
define
mozilla_TextInputListener_h
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsIDOMEventListener
.
h
"
#
include
"
nsStringFwd
.
h
"
#
include
"
nsWeakReference
.
h
"
class
nsIFrame
;
class
nsISelection
;
class
nsITextControlElement
;
class
nsTextControlFrame
;
namespace
mozilla
{
class
TextInputListener
final
:
public
nsIDOMEventListener
public
nsSupportsWeakReference
{
public
:
explicit
TextInputListener
(
nsITextControlElement
*
aTextControlElement
)
;
void
SetFrame
(
nsIFrame
*
aTextControlFrame
)
{
mFrame
=
aTextControlFrame
;
}
void
SettingValue
(
bool
aValue
)
{
mSettingValue
=
aValue
;
}
void
SetValueChanged
(
bool
aSetValueChanged
)
{
mSetValueChanged
=
aSetValueChanged
;
}
void
HandleValueChanged
(
nsTextControlFrame
*
aFrame
=
nullptr
)
;
void
OnEditActionHandled
(
)
;
void
OnSelectionChange
(
Selection
&
aSelection
int16_t
aReason
)
;
void
StartToListenToSelectionChange
(
)
{
mListeningToSelectionChange
=
true
;
}
void
EndListeningToSelectionChange
(
)
{
mListeningToSelectionChange
=
false
;
}
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS
(
TextInputListener
nsIDOMEventListener
)
NS_DECL_NSIDOMEVENTLISTENER
protected
:
virtual
~
TextInputListener
(
)
=
default
;
nsresult
UpdateTextInputCommands
(
const
nsAString
&
aCommandsToUpdate
nsISelection
*
aSelection
=
nullptr
int16_t
aReason
=
0
)
;
protected
:
nsIFrame
*
mFrame
;
nsITextControlElement
*
const
mTxtCtrlElement
;
bool
mSelectionWasCollapsed
;
bool
mHadUndoItems
;
bool
mHadRedoItems
;
bool
mSettingValue
;
bool
mSetValueChanged
;
bool
mListeningToSelectionChange
;
}
;
}
#
endif
