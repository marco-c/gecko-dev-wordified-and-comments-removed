"
use
strict
"
;
const
kTestPage
=
"
http
:
/
/
example
.
org
/
browser
/
dom
/
html
/
test
/
submission_flush
.
html
"
;
const
kPostActionPage
=
"
http
:
/
/
example
.
org
/
browser
/
dom
/
html
/
test
/
post_action_page
.
html
"
;
const
kFormId
=
"
test_form
"
;
const
kFrameId
=
"
test_frame
"
;
const
kSubmitButtonId
=
"
submit_button
"
;
async
function
runTest
(
aTestActions
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
kTestPage
)
;
registerCleanupFunction
(
(
)
=
>
BrowserTestUtils
.
removeTab
(
tab
)
)
;
let
frame_url
=
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
{
kFormId
kFrameId
kSubmitButtonId
aTestActions
}
]
async
function
(
{
kFormId
kFrameId
kSubmitButtonId
aTestActions
}
)
{
let
form
=
content
.
document
.
getElementById
(
kFormId
)
;
form
.
addEventListener
(
"
submit
"
event
=
>
{
form
.
submit
(
)
;
if
(
aTestActions
.
setattr
)
{
for
(
let
{
attr
value
}
of
aTestActions
.
setattr
)
{
form
.
setAttribute
(
attr
value
)
;
}
}
if
(
aTestActions
.
unsetattr
)
{
for
(
let
attr
of
aTestActions
.
unsetattr
)
{
form
.
removeAttribute
(
attr
)
;
}
}
}
{
capture
:
true
once
:
true
}
)
;
content
.
document
.
getElementById
(
kSubmitButtonId
)
.
click
(
)
;
let
frame
=
content
.
document
.
getElementById
(
kFrameId
)
;
await
new
Promise
(
resolve
=
>
{
frame
.
addEventListener
(
"
load
"
resolve
{
once
:
true
}
)
;
}
)
;
return
frame
.
contentWindow
.
location
.
href
;
}
)
;
is
(
frame_url
kPostActionPage
"
Form
should
have
submitted
with
correct
target
and
action
"
)
;
}
add_task
(
async
function
(
)
{
info
(
"
Changing
action
should
flush
pending
submissions
"
)
;
await
runTest
(
{
setattr
:
[
{
attr
:
"
action
"
value
:
"
about
:
blank
"
}
]
}
)
;
}
)
;
add_task
(
async
function
(
)
{
info
(
"
Changing
target
should
flush
pending
submissions
"
)
;
await
runTest
(
{
setattr
:
[
{
attr
:
"
target
"
value
:
"
_blank
"
}
]
}
)
;
}
)
;
add_task
(
async
function
(
)
{
info
(
"
Unsetting
action
should
flush
pending
submissions
"
)
;
await
runTest
(
{
unsetattr
:
[
"
action
"
]
}
)
;
}
)
;
add_task
(
async
function
(
)
{
info
(
"
Unsetting
target
should
flush
pending
submissions
"
)
;
await
runTest
(
{
unsetattr
:
[
"
target
"
]
}
)
;
}
)
;
