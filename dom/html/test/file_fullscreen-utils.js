function
inFullscreenMode
(
win
)
{
return
win
.
outerWidth
=
=
win
.
screen
.
width
&
&
win
.
outerHeight
=
=
win
.
screen
.
height
;
}
function
inNormalMode
(
win
)
{
return
win
.
outerWidth
=
=
win
.
normalSize
.
w
&
&
win
.
outerHeight
=
=
win
.
normalSize
.
h
;
}
function
addFullscreenChangeContinuation
(
type
callback
inDoc
)
{
var
doc
=
inDoc
|
|
document
;
var
topWin
=
doc
.
defaultView
.
top
;
if
(
!
topWin
.
normalSize
)
{
topWin
.
normalSize
=
{
w
:
window
.
outerWidth
h
:
window
.
outerHeight
}
;
}
function
checkCondition
(
)
{
if
(
type
=
=
"
enter
"
)
{
return
inFullscreenMode
(
topWin
)
;
}
else
if
(
type
=
=
"
exit
"
)
{
return
topWin
.
document
.
mozFullScreenElement
|
|
inNormalMode
(
topWin
)
;
}
else
{
throw
"
'
type
'
must
be
either
'
enter
'
or
'
exit
'
.
"
;
}
}
function
invokeCallback
(
event
)
{
requestAnimationFrame
(
(
)
=
>
setTimeout
(
(
)
=
>
callback
(
event
)
0
)
0
)
;
}
function
onFullscreenChange
(
event
)
{
doc
.
removeEventListener
(
"
mozfullscreenchange
"
onFullscreenChange
false
)
;
if
(
checkCondition
(
)
)
{
invokeCallback
(
event
)
;
return
;
}
function
onResize
(
)
{
if
(
checkCondition
(
)
)
{
topWin
.
removeEventListener
(
"
resize
"
onResize
false
)
;
invokeCallback
(
event
)
;
}
}
topWin
.
addEventListener
(
"
resize
"
onResize
false
)
;
}
doc
.
addEventListener
(
"
mozfullscreenchange
"
onFullscreenChange
false
)
;
}
function
addFullscreenErrorContinuation
(
callback
inDoc
)
{
var
doc
=
inDoc
|
|
document
;
var
listener
=
function
(
event
)
{
doc
.
removeEventListener
(
"
mozfullscreenerror
"
listener
false
)
;
setTimeout
(
function
(
)
{
callback
(
event
)
;
}
0
)
;
}
;
doc
.
addEventListener
(
"
mozfullscreenerror
"
listener
false
)
;
}
