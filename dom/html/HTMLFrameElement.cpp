#
include
"
mozilla
/
dom
/
HTMLFrameElement
.
h
"
#
include
"
mozilla
/
dom
/
HTMLFrameElementBinding
.
h
"
class
nsIDOMDocument
;
NS_IMPL_NS_NEW_HTML_ELEMENT_CHECK_PARSER
(
Frame
)
namespace
mozilla
{
namespace
dom
{
HTMLFrameElement
:
:
HTMLFrameElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
aNodeInfo
FromParser
aFromParser
)
:
nsGenericHTMLFrameElement
(
aNodeInfo
aFromParser
)
{
}
HTMLFrameElement
:
:
~
HTMLFrameElement
(
)
{
}
NS_IMPL_ISUPPORTS_INHERITED0
(
HTMLFrameElement
nsGenericHTMLFrameElement
)
NS_IMPL_ELEMENT_CLONE
(
HTMLFrameElement
)
bool
HTMLFrameElement
:
:
ParseAttribute
(
int32_t
aNamespaceID
nsIAtom
*
aAttribute
const
nsAString
&
aValue
nsAttrValue
&
aResult
)
{
if
(
aNamespaceID
=
=
kNameSpaceID_None
)
{
if
(
aAttribute
=
=
nsGkAtoms
:
:
bordercolor
)
{
return
aResult
.
ParseColor
(
aValue
)
;
}
if
(
aAttribute
=
=
nsGkAtoms
:
:
frameborder
)
{
return
ParseFrameborderValue
(
aValue
aResult
)
;
}
if
(
aAttribute
=
=
nsGkAtoms
:
:
marginwidth
)
{
return
aResult
.
ParseSpecialIntValue
(
aValue
)
;
}
if
(
aAttribute
=
=
nsGkAtoms
:
:
marginheight
)
{
return
aResult
.
ParseSpecialIntValue
(
aValue
)
;
}
if
(
aAttribute
=
=
nsGkAtoms
:
:
scrolling
)
{
return
ParseScrollingValue
(
aValue
aResult
)
;
}
}
return
nsGenericHTMLFrameElement
:
:
ParseAttribute
(
aNamespaceID
aAttribute
aValue
aResult
)
;
}
JSObject
*
HTMLFrameElement
:
:
WrapNode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
HTMLFrameElementBinding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
}
}
