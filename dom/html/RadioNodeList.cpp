#
include
"
mozilla
/
dom
/
RadioNodeList
.
h
"
#
include
"
mozilla
/
dom
/
BindingUtils
.
h
"
#
include
"
mozilla
/
dom
/
RadioNodeListBinding
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
HTMLInputElement
.
h
"
namespace
mozilla
:
:
dom
{
JSObject
*
RadioNodeList
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
RadioNodeList_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
HTMLInputElement
*
GetAsRadio
(
nsIContent
*
node
)
{
auto
*
el
=
HTMLInputElement
:
:
FromNode
(
node
)
;
if
(
el
&
&
el
-
>
ControlType
(
)
=
=
FormControlType
:
:
InputRadio
)
{
return
el
;
}
return
nullptr
;
}
void
RadioNodeList
:
:
GetValue
(
nsString
&
retval
CallerType
aCallerType
)
{
for
(
uint32_t
i
=
0
;
i
<
Length
(
)
;
i
+
+
)
{
HTMLInputElement
*
maybeRadio
=
GetAsRadio
(
Item
(
i
)
)
;
if
(
maybeRadio
&
&
maybeRadio
-
>
Checked
(
)
)
{
maybeRadio
-
>
GetValue
(
retval
aCallerType
)
;
return
;
}
}
retval
.
Truncate
(
)
;
}
void
RadioNodeList
:
:
SetValue
(
const
nsAString
&
value
CallerType
aCallerType
)
{
for
(
uint32_t
i
=
0
;
i
<
Length
(
)
;
i
+
+
)
{
HTMLInputElement
*
maybeRadio
=
GetAsRadio
(
Item
(
i
)
)
;
if
(
!
maybeRadio
)
{
continue
;
}
nsString
curval
=
nsString
(
)
;
maybeRadio
-
>
GetValue
(
curval
aCallerType
)
;
if
(
curval
.
Equals
(
value
)
)
{
maybeRadio
-
>
SetChecked
(
true
)
;
return
;
}
}
}
NS_IMPL_ISUPPORTS_INHERITED
(
RadioNodeList
nsSimpleContentList
RadioNodeList
)
}
