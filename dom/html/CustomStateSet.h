#
ifndef
mozilla_dom_CustomStateSet_h
#
define
mozilla_dom_CustomStateSet_h
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
nsCOMPtr
.
h
"
namespace
mozilla
:
:
dom
{
class
HTMLElement
;
class
GlobalObject
;
class
CustomStateSet
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_WRAPPERCACHE_CLASS
(
CustomStateSet
)
explicit
CustomStateSet
(
HTMLElement
*
aTarget
)
;
nsISupports
*
GetParentObject
(
)
const
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
MOZ_CAN_RUN_SCRIPT_BOUNDARY
already_AddRefed
<
CustomStateSet
>
Constructor
(
const
GlobalObject
&
aGlobal
ErrorResult
&
aRv
)
;
MOZ_CAN_RUN_SCRIPT
void
Clear
(
ErrorResult
&
aRv
)
;
MOZ_CAN_RUN_SCRIPT
bool
Delete
(
const
nsAString
&
aState
ErrorResult
&
aRv
)
;
MOZ_CAN_RUN_SCRIPT
void
Add
(
const
nsAString
&
aState
ErrorResult
&
aRv
)
;
private
:
virtual
~
CustomStateSet
(
)
=
default
;
RefPtr
<
HTMLElement
>
mTarget
;
}
;
}
#
endif
