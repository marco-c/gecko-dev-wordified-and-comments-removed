#
ifndef
nsControllerCommandTable_h_
#
define
nsControllerCommandTable_h_
#
include
"
nsIControllerCommandTable
.
h
"
#
include
"
nsWeakReference
.
h
"
#
include
"
nsInterfaceHashtable
.
h
"
class
nsIControllerCommand
;
class
nsControllerCommandTable
final
:
public
nsIControllerCommandTable
public
nsSupportsWeakReference
{
public
:
nsControllerCommandTable
(
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSICONTROLLERCOMMANDTABLE
static
already_AddRefed
<
nsControllerCommandTable
>
CreateEditorCommandTable
(
)
;
static
already_AddRefed
<
nsControllerCommandTable
>
CreateEditingCommandTable
(
)
;
static
already_AddRefed
<
nsControllerCommandTable
>
CreateHTMLEditorCommandTable
(
)
;
static
already_AddRefed
<
nsControllerCommandTable
>
CreateHTMLEditorDocStateCommandTable
(
)
;
static
already_AddRefed
<
nsControllerCommandTable
>
CreateWindowCommandTable
(
)
;
protected
:
virtual
~
nsControllerCommandTable
(
)
;
nsInterfaceHashtable
<
nsCStringHashKey
nsIControllerCommand
>
mCommandsTable
;
bool
mMutable
;
}
;
nsControllerCommandTable
*
nsIControllerCommandTable
:
:
AsControllerCommandTable
(
)
{
return
static_cast
<
nsControllerCommandTable
*
>
(
this
)
;
}
const
nsControllerCommandTable
*
nsIControllerCommandTable
:
:
AsControllerCommandTable
(
)
const
{
return
static_cast
<
const
nsControllerCommandTable
*
>
(
this
)
;
}
#
endif
