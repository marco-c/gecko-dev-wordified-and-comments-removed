#
include
"
nsISupports
.
idl
"
#
include
"
nsIObserver
.
idl
"
#
include
"
nsICommandParams
.
idl
"
interface
mozIDOMWindowProxy
;
%
{
C
+
+
class
nsCommandManager
;
%
}
[
scriptable
builtinclass
uuid
(
bb5a1730
-
d83b
-
4fa2
-
831b
-
35b9d5842e84
)
]
interface
nsICommandManager
:
nsISupports
{
void
addCommandObserver
(
in
nsIObserver
aCommandObserver
in
string
aCommandToObserve
)
;
void
removeCommandObserver
(
in
nsIObserver
aCommandObserver
in
string
aCommandObserved
)
;
boolean
isCommandSupported
(
in
string
aCommandName
in
mozIDOMWindowProxy
aTargetWindow
)
;
boolean
isCommandEnabled
(
in
string
aCommandName
in
mozIDOMWindowProxy
aTargetWindow
)
;
void
getCommandState
(
in
string
aCommandName
in
mozIDOMWindowProxy
aTargetWindow
in
nsICommandParams
aCommandParams
)
;
[
can_run_script
]
void
doCommand
(
in
string
aCommandName
in
nsICommandParams
aCommandParams
in
mozIDOMWindowProxy
aTargetWindow
)
;
%
{
C
+
+
inline
nsCommandManager
*
AsCommandManager
(
)
;
inline
const
nsCommandManager
*
AsCommandManager
(
)
const
;
%
}
}
;
