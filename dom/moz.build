with
Files
(
"
*
*
"
)
:
BUG_COMPONENT
=
(
"
Core
"
"
DOM
:
Core
&
HTML
"
)
with
Files
(
"
plugins
/
*
*
"
)
:
BUG_COMPONENT
=
(
"
Core
"
"
Plug
-
ins
"
)
JAR_MANIFESTS
+
=
[
'
jar
.
mn
'
]
interfaces
=
[
'
base
'
'
html
'
'
events
'
'
sidebar
'
'
xul
'
'
security
'
'
storage
'
'
geolocation
'
'
notification
'
'
push
'
'
payments
'
]
DIRS
+
=
[
'
interfaces
/
'
+
i
for
i
in
interfaces
]
DIRS
+
=
[
'
abort
'
'
animation
'
'
base
'
'
bindings
'
'
battery
'
'
browser
-
element
'
'
cache
'
'
canvas
'
'
webgpu
'
'
chrome
-
webidl
'
'
clients
'
'
commandhandler
'
'
credentialmanagement
'
'
crypto
'
'
debugger
'
'
encoding
'
'
events
'
'
fetch
'
'
file
'
'
filehandle
'
'
filesystem
'
'
flex
'
'
gamepad
'
'
geolocation
'
'
grid
'
'
html
'
'
jsurl
'
'
mathml
'
'
media
'
'
midi
'
'
notification
'
'
offline
'
'
power
'
'
push
'
'
quota
'
'
security
'
'
storage
'
'
svg
'
'
locales
'
'
network
'
'
permission
'
'
plugins
/
base
'
'
plugins
/
ipc
'
'
prototype
'
'
indexedDB
'
'
system
'
'
ipc
'
'
workers
'
'
audiochannel
'
'
broadcastchannel
'
'
messagechannel
'
'
promise
'
'
smil
'
'
url
'
'
webauthn
'
'
webidl
'
'
webshare
'
'
xml
'
'
xslt
'
'
xul
'
'
manifest
'
'
vr
'
'
u2f
'
'
console
'
'
performance
'
'
webbrowserpersist
'
'
xhr
'
'
worklet
'
'
script
'
'
payments
'
'
websocket
'
'
serviceworkers
'
'
simpledb
'
'
reporting
'
'
localstorage
'
'
prio
'
'
l10n
'
]
if
CONFIG
[
'
OS_ARCH
'
]
=
=
'
WINNT
'
:
DIRS
+
=
[
'
plugins
/
ipc
/
hangui
'
]
DIRS
+
=
[
'
presentation
'
]
TEST_DIRS
+
=
[
'
tests
'
'
imptests
'
]
if
CONFIG
[
'
MOZ_WIDGET_TOOLKIT
'
]
in
(
'
gtk
'
'
cocoa
'
'
windows
'
)
:
TEST_DIRS
+
=
[
'
plugins
/
test
'
]
SPHINX_TREES
[
'
/
dom
'
]
=
'
docs
'
