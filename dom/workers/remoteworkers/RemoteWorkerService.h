#
ifndef
mozilla_dom_RemoteWorkerService_h
#
define
mozilla_dom_RemoteWorkerService_h
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
DataMutex
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
nsISupportsImpl
.
h
"
class
nsIThread
;
namespace
mozilla
:
:
dom
{
class
RemoteWorkerService
;
class
RemoteWorkerServiceChild
;
class
RemoteWorkerServiceShutdownBlocker
;
class
RemoteWorkerServiceKeepAlive
{
public
:
explicit
RemoteWorkerServiceKeepAlive
(
RemoteWorkerServiceShutdownBlocker
*
aBlocker
)
;
private
:
~
RemoteWorkerServiceKeepAlive
(
)
;
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
RemoteWorkerServiceKeepAlive
)
;
RefPtr
<
RemoteWorkerServiceShutdownBlocker
>
mBlocker
;
}
;
class
RemoteWorkerService
final
:
public
nsIObserver
{
friend
class
RemoteWorkerServiceShutdownBlocker
;
friend
class
RemoteWorkerServiceKeepAlive
;
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIOBSERVER
static
void
Initialize
(
)
;
static
nsIThread
*
Thread
(
)
;
static
already_AddRefed
<
RemoteWorkerServiceKeepAlive
>
MaybeGetKeepAlive
(
)
;
private
:
RemoteWorkerService
(
)
;
~
RemoteWorkerService
(
)
;
nsresult
InitializeOnMainThread
(
)
;
void
InitializeOnTargetThread
(
)
;
void
CloseActorOnTargetThread
(
)
;
void
BeginShutdown
(
)
;
void
FinishShutdown
(
)
;
nsCOMPtr
<
nsIThread
>
mThread
;
RefPtr
<
RemoteWorkerServiceChild
>
mActor
;
DataMutex
<
RefPtr
<
RemoteWorkerServiceKeepAlive
>
>
mKeepAlive
;
RefPtr
<
RemoteWorkerServiceShutdownBlocker
>
mShutdownBlocker
;
}
;
}
#
endif
