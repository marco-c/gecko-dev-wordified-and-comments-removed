#
ifndef
mozilla_dom_workers_scriptloader_h__
#
define
mozilla_dom_workers_scriptloader_h__
#
include
"
mozilla
/
dom
/
WorkerCommon
.
h
"
#
include
"
nsIContentPolicy
.
h
"
#
include
"
nsStringFwd
.
h
"
class
nsIPrincipal
;
class
nsIURI
;
class
nsIDocument
;
class
nsILoadGroup
;
class
nsIChannel
;
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
struct
WorkerLoadInfo
;
class
WorkerPrivate
;
enum
WorkerScriptType
{
WorkerScript
DebuggerScript
}
;
namespace
workerinternals
{
nsresult
ChannelFromScriptURLMainThread
(
nsIPrincipal
*
aPrincipal
nsIURI
*
aBaseURI
nsIDocument
*
aParentDoc
nsILoadGroup
*
aLoadGroup
const
nsAString
&
aScriptURL
nsIURI
*
aResolvedScriptURL
const
Maybe
<
ClientInfo
>
&
aClientInfo
nsContentPolicyType
aContentPolicyType
bool
aDefaultURIEncoding
nsIChannel
*
*
aChannel
)
;
nsresult
ChannelFromScriptURLWorkerThread
(
JSContext
*
aCx
WorkerPrivate
*
aParent
const
nsAString
&
aScriptURL
WorkerLoadInfo
&
aLoadInfo
)
;
void
ReportLoadError
(
ErrorResult
&
aRv
nsresult
aLoadResult
const
nsAString
&
aScriptURL
)
;
void
LoadMainScript
(
WorkerPrivate
*
aWorkerPrivate
const
nsAString
&
aScriptURL
WorkerScriptType
aWorkerScriptType
ErrorResult
&
aRv
)
;
void
Load
(
WorkerPrivate
*
aWorkerPrivate
const
nsTArray
<
nsString
>
&
aScriptURLs
WorkerScriptType
aWorkerScriptType
ErrorResult
&
aRv
)
;
}
}
}
#
endif
