function
workerTestExec
(
script
)
{
SimpleTest
.
waitForExplicitFinish
(
)
;
var
worker
=
new
Worker
(
'
worker_wrapper
.
js
'
)
;
worker
.
onmessage
=
function
(
event
)
{
if
(
event
.
data
.
type
=
=
'
finish
'
)
{
SimpleTest
.
finish
(
)
;
}
else
if
(
event
.
data
.
type
=
=
'
status
'
)
{
ok
(
event
.
data
.
status
event
.
data
.
msg
)
;
}
else
if
(
event
.
data
.
type
=
=
'
getHelperData
'
)
{
const
version
=
SpecialPowers
.
Cc
[
"
mozilla
.
org
/
xre
/
app
-
info
;
1
"
]
.
getService
(
SpecialPowers
.
Ci
.
nsIXULAppInfo
)
.
version
;
const
isNightly
=
version
.
endsWith
(
"
a1
"
)
;
const
isEarlyBetaOrEarlier
=
SpecialPowers
.
EARLY_BETA_OR_EARLIER
;
const
isRelease
=
!
version
.
includes
(
"
a
"
)
;
const
isDesktop
=
!
/
Mobile
|
Tablet
/
.
test
(
navigator
.
userAgent
)
;
const
isMac
=
/
Mac
OS
/
.
test
(
navigator
.
oscpu
)
;
const
isWindows
=
/
Windows
/
.
test
(
navigator
.
oscpu
)
;
const
isAndroid
=
navigator
.
userAgent
.
includes
(
"
Android
"
)
;
const
isLinux
=
/
Linux
/
.
test
(
navigator
.
oscpu
)
&
&
!
isAndroid
;
const
isInsecureContext
=
!
window
.
isSecureContext
;
const
isFennec
=
isAndroid
&
&
SpecialPowers
.
Cc
[
"
mozilla
.
org
/
android
/
bridge
;
1
"
]
.
getService
(
SpecialPowers
.
Ci
.
nsIAndroidBridge
)
.
isFennec
;
const
result
=
{
version
isNightly
isEarlyBetaOrEarlier
isRelease
isDesktop
isMac
isWindows
isAndroid
isLinux
isInsecureContext
isFennec
}
;
worker
.
postMessage
(
{
type
:
'
returnHelperData
'
result
}
)
;
}
}
worker
.
onerror
=
function
(
event
)
{
ok
(
false
'
Worker
had
an
error
:
'
+
event
.
data
)
;
SimpleTest
.
finish
(
)
;
}
;
worker
.
postMessage
(
{
script
:
script
}
)
;
}
