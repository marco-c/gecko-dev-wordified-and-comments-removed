"
use
strict
"
;
let
stringBundleService
=
SpecialPowers
.
Cc
[
"
mozilla
.
org
/
intl
/
stringbundle
;
1
"
]
.
getService
(
SpecialPowers
.
Ci
.
nsIStringBundleService
)
;
let
localizer
=
stringBundleService
.
createBundle
(
"
chrome
:
/
/
global
/
locale
/
dom
/
dom
.
properties
"
)
;
function
expect_console_message
(
)
{
let
expectations
=
[
]
;
for
(
let
i
=
0
;
i
<
arguments
.
length
;
i
+
=
2
)
{
let
msgId
=
arguments
[
i
]
;
let
args
=
arguments
[
i
+
1
]
;
if
(
args
.
length
=
=
=
0
)
{
expectations
.
push
(
{
errorMessage
:
localizer
.
GetStringFromName
(
msgId
)
}
)
;
}
else
{
expectations
.
push
(
{
errorMessage
:
localizer
.
formatStringFromName
(
msgId
args
args
.
length
)
}
)
;
}
}
return
new
Promise
(
resolve
=
>
{
SimpleTest
.
monitorConsole
(
resolve
expectations
)
;
}
)
;
}
let
expect_console_messages
=
expect_console_message
;
function
wait_for_expected_message
(
expectedPromise
)
{
SimpleTest
.
endMonitorConsole
(
)
;
return
expectedPromise
;
}
function
make_absolute_url
(
relUrl
)
{
return
new
URL
(
relUrl
window
.
location
)
.
href
;
}
