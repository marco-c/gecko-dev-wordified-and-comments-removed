#
ifndef
mozilla_dom_workers_NetworkLoadHandler_h__
#
define
mozilla_dom_workers_NetworkLoadHandler_h__
#
include
"
nsIStreamLoader
.
h
"
#
include
"
mozilla
/
dom
/
ScriptLoadInfo
.
h
"
namespace
mozilla
:
:
dom
:
:
workerinternals
:
:
loader
{
class
WorkerScriptLoader
;
class
NetworkLoadHandler
final
:
public
nsIStreamLoaderObserver
public
nsIRequestObserver
{
public
:
NS_DECL_ISUPPORTS
NetworkLoadHandler
(
WorkerScriptLoader
*
aLoader
ScriptLoadInfo
&
aLoadInfo
)
;
NS_IMETHOD
OnStreamComplete
(
nsIStreamLoader
*
aLoader
nsISupports
*
aContext
nsresult
aStatus
uint32_t
aStringLen
const
uint8_t
*
aString
)
override
;
nsresult
DataReceivedFromNetwork
(
nsIStreamLoader
*
aLoader
nsresult
aStatus
uint32_t
aStringLen
const
uint8_t
*
aString
)
;
NS_IMETHOD
OnStartRequest
(
nsIRequest
*
aRequest
)
override
;
nsresult
PrepareForRequest
(
nsIRequest
*
aRequest
)
;
NS_IMETHOD
OnStopRequest
(
nsIRequest
*
aRequest
nsresult
aStatusCode
)
override
{
return
NS_OK
;
}
private
:
~
NetworkLoadHandler
(
)
=
default
;
RefPtr
<
WorkerScriptLoader
>
mLoader
;
WorkerPrivate
*
const
mWorkerPrivate
;
ScriptLoadInfo
&
mLoadInfo
;
}
;
}
#
endif
