#
ifndef
mozilla_dom_workers_WorkerHolder_h
#
define
mozilla_dom_workers_WorkerHolder_h
#
include
"
mozilla
/
dom
/
workers
/
Workers
.
h
"
BEGIN_WORKERS_NAMESPACE
#
ifdef
Status
#
undef
Status
#
endif
enum
Status
{
Pending
=
0
Running
Closing
Terminating
Canceling
Killing
Dead
}
;
class
WorkerHolder
{
public
:
NS_DECL_OWNINGTHREAD
enum
Behavior
{
AllowIdleShutdownStart
PreventIdleShutdownStart
}
;
explicit
WorkerHolder
(
Behavior
aBehavior
=
PreventIdleShutdownStart
)
;
virtual
~
WorkerHolder
(
)
;
bool
HoldWorker
(
WorkerPrivate
*
aWorkerPrivate
Status
aFailStatus
)
;
void
ReleaseWorker
(
)
;
virtual
bool
Notify
(
Status
aStatus
)
=
0
;
Behavior
GetBehavior
(
)
const
;
protected
:
void
ReleaseWorkerInternal
(
)
;
WorkerPrivate
*
MOZ_NON_OWNING_REF
mWorkerPrivate
;
private
:
void
AssertIsOwningThread
(
)
const
;
const
Behavior
mBehavior
;
}
;
END_WORKERS_NAMESPACE
#
endif
