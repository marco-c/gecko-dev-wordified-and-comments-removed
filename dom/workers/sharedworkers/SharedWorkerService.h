#
ifndef
mozilla_dom_SharedWorkerService_h
#
define
mozilla_dom_SharedWorkerService_h
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
ipc
{
class
PrincipalInfo
;
}
namespace
dom
{
class
MessagePortIdentifier
;
class
RemoteWorkerData
;
class
SharedWorkerManager
;
class
SharedWorkerParent
;
class
SharedWorkerService
final
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
SharedWorkerService
)
;
static
already_AddRefed
<
SharedWorkerService
>
GetOrCreate
(
)
;
static
SharedWorkerService
*
Get
(
)
;
void
GetOrCreateWorkerManager
(
SharedWorkerParent
*
aActor
const
RemoteWorkerData
&
aData
uint64_t
aWindowID
const
MessagePortIdentifier
&
aPortIdentifier
)
;
void
GetOrCreateWorkerManagerOnMainThread
(
nsIEventTarget
*
aBackgroundEventTarget
SharedWorkerParent
*
aActor
const
RemoteWorkerData
&
aData
uint64_t
aWindowID
const
MessagePortIdentifier
&
aPortIdentifier
)
;
void
RemoveWorkerManager
(
SharedWorkerManager
*
aManager
)
;
void
RemoveWorkerManagerOnMainThread
(
SharedWorkerManager
*
aManager
)
;
private
:
SharedWorkerService
(
)
;
~
SharedWorkerService
(
)
;
void
ErrorPropagationOnMainThread
(
nsIEventTarget
*
aBackgroundEventTarget
SharedWorkerParent
*
aActor
nsresult
aError
)
;
nsTArray
<
RefPtr
<
SharedWorkerManager
>
>
mWorkerManagers
;
}
;
}
}
#
endif
