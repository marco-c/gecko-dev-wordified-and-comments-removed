#
include
"
SharedWorkerChild
.
h
"
namespace
mozilla
{
using
namespace
ipc
;
namespace
dom
{
SharedWorkerChild
:
:
SharedWorkerChild
(
)
:
mParent
(
nullptr
)
mActive
(
true
)
{
}
SharedWorkerChild
:
:
~
SharedWorkerChild
(
)
=
default
;
void
SharedWorkerChild
:
:
ActorDestroy
(
ActorDestroyReason
aWhy
)
{
mActive
=
false
;
}
void
SharedWorkerChild
:
:
SendClose
(
)
{
if
(
mActive
)
{
mActive
=
false
;
PSharedWorkerChild
:
:
SendClose
(
)
;
}
}
void
SharedWorkerChild
:
:
SendSuspend
(
)
{
if
(
mActive
)
{
PSharedWorkerChild
:
:
SendSuspend
(
)
;
}
}
void
SharedWorkerChild
:
:
SendResume
(
)
{
if
(
mActive
)
{
PSharedWorkerChild
:
:
SendResume
(
)
;
}
}
void
SharedWorkerChild
:
:
SendFreeze
(
)
{
if
(
mActive
)
{
PSharedWorkerChild
:
:
SendFreeze
(
)
;
}
}
void
SharedWorkerChild
:
:
SendThaw
(
)
{
if
(
mActive
)
{
PSharedWorkerChild
:
:
SendThaw
(
)
;
}
}
IPCResult
SharedWorkerChild
:
:
RecvError
(
const
nsresult
&
aError
)
{
MOZ_ASSERT
(
mActive
)
;
if
(
mParent
)
{
mParent
-
>
ErrorPropagation
(
aError
)
;
}
return
IPC_OK
(
)
;
}
}
}
