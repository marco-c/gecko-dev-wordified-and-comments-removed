#
ifndef
mozilla_dom_SharedWorkerManager_h
#
define
mozilla_dom_SharedWorkerManager_h
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsTArray
.
h
"
class
nsIPrincipal
;
namespace
mozilla
{
namespace
dom
{
class
SharedWorkerLoadInfo
;
class
SharedWorkerParent
;
class
WorkerPrivate
;
class
SharedWorkerManager
final
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
SharedWorkerManager
)
;
SharedWorkerManager
(
const
SharedWorkerLoadInfo
&
aInfo
nsIPrincipal
*
aPrincipal
nsIPrincipal
*
aLoadingPrincipal
)
;
nsresult
CreateWorkerOnMainThread
(
)
;
nsresult
ConnectPortOnMainThread
(
const
MessagePortIdentifier
&
aPortIdentifier
)
;
bool
MatchOnMainThread
(
const
nsACString
&
aDomain
const
nsACString
&
aScriptURL
const
nsAString
&
aName
nsIPrincipal
*
aLoadingPrincipal
)
const
;
void
CloseOnMainThread
(
)
;
void
FreezeOnMainThread
(
)
;
void
ThawOnMainThread
(
)
;
void
SuspendOnMainThread
(
)
;
void
ResumeOnMainThread
(
)
;
void
AddActor
(
SharedWorkerParent
*
aParent
)
;
void
RemoveActor
(
SharedWorkerParent
*
aParent
)
;
void
UpdateSuspend
(
)
;
void
UpdateFrozen
(
)
;
bool
IsSecureContext
(
)
const
;
private
:
~
SharedWorkerManager
(
)
;
SharedWorkerLoadInfo
mInfo
;
nsCOMPtr
<
nsIPrincipal
>
mPrincipal
;
nsCOMPtr
<
nsIPrincipal
>
mLoadingPrincipal
;
nsTArray
<
SharedWorkerParent
*
>
mActors
;
RefPtr
<
WorkerPrivate
>
mWorkerPrivate
;
}
;
}
}
#
endif
