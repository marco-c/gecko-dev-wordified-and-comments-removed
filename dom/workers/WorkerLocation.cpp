#
include
"
mozilla
/
dom
/
WorkerLocation
.
h
"
#
include
"
mozilla
/
dom
/
WorkerLocationBinding
.
h
"
namespace
mozilla
:
:
dom
{
NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE_0
(
WorkerLocation
)
NS_IMPL_CYCLE_COLLECTION_ROOT_NATIVE
(
WorkerLocation
AddRef
)
NS_IMPL_CYCLE_COLLECTION_UNROOT_NATIVE
(
WorkerLocation
Release
)
already_AddRefed
<
WorkerLocation
>
WorkerLocation
:
:
Create
(
WorkerPrivate
:
:
LocationInfo
&
aInfo
)
{
RefPtr
<
WorkerLocation
>
location
=
new
WorkerLocation
(
NS_ConvertUTF8toUTF16
(
aInfo
.
mHref
)
NS_ConvertUTF8toUTF16
(
aInfo
.
mProtocol
)
NS_ConvertUTF8toUTF16
(
aInfo
.
mHost
)
NS_ConvertUTF8toUTF16
(
aInfo
.
mHostname
)
NS_ConvertUTF8toUTF16
(
aInfo
.
mPort
)
NS_ConvertUTF8toUTF16
(
aInfo
.
mPathname
)
NS_ConvertUTF8toUTF16
(
aInfo
.
mSearch
)
NS_ConvertUTF8toUTF16
(
aInfo
.
mHash
)
aInfo
.
mOrigin
)
;
return
location
.
forget
(
)
;
}
JSObject
*
WorkerLocation
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
WorkerLocation_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
}
