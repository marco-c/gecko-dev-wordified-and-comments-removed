#
ifndef
mozilla_dom_workers_WorkerError_h
#
define
mozilla_dom_workers_WorkerError_h
#
include
"
WorkerCommon
.
h
"
#
include
"
jsapi
.
h
"
namespace
mozilla
{
class
DOMEventTargetHelper
;
namespace
dom
{
class
WorkerErrorBase
{
public
:
nsString
mMessage
;
nsString
mFilename
;
uint32_t
mLineNumber
;
uint32_t
mColumnNumber
;
uint32_t
mErrorNumber
;
WorkerErrorBase
(
)
:
mLineNumber
(
0
)
mColumnNumber
(
0
)
mErrorNumber
(
0
)
{
}
void
AssignErrorBase
(
JSErrorBase
*
aReport
)
;
}
;
class
WorkerErrorNote
:
public
WorkerErrorBase
{
public
:
void
AssignErrorNote
(
JSErrorNotes
:
:
Note
*
aNote
)
;
}
;
namespace
workers
{
class
WorkerPrivate
;
}
class
WorkerErrorReport
:
public
WorkerErrorBase
{
public
:
nsString
mLine
;
uint32_t
mFlags
;
JSExnType
mExnType
;
bool
mMutedError
;
nsTArray
<
WorkerErrorNote
>
mNotes
;
WorkerErrorReport
(
)
:
mFlags
(
0
)
mExnType
(
JSEXN_ERR
)
mMutedError
(
false
)
{
}
void
AssignErrorReport
(
JSErrorReport
*
aReport
)
;
static
void
ReportError
(
JSContext
*
aCx
workers
:
:
WorkerPrivate
*
aWorkerPrivate
bool
aFireAtScope
DOMEventTargetHelper
*
aTarget
const
WorkerErrorReport
&
aReport
uint64_t
aInnerWindowId
JS
:
:
Handle
<
JS
:
:
Value
>
aException
=
JS
:
:
NullHandleValue
)
;
static
void
LogErrorToConsole
(
const
WorkerErrorReport
&
aReport
uint64_t
aInnerWindowId
)
;
}
;
}
}
#
endif
