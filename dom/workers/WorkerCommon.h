#
ifndef
mozilla_dom_workers_WorkerCommon_h
#
define
mozilla_dom_workers_WorkerCommon_h
#
include
"
jsapi
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
ServiceWorkerDescriptor
.
h
"
class
nsPIDOMWindowInner
;
namespace
mozilla
{
namespace
dom
{
class
WorkerPrivate
;
WorkerPrivate
*
GetWorkerPrivateFromContext
(
JSContext
*
aCx
)
;
WorkerPrivate
*
GetCurrentThreadWorkerPrivate
(
)
;
bool
IsCurrentThreadRunningWorker
(
)
;
bool
IsCurrentThreadRunningChromeWorker
(
)
;
JSContext
*
GetCurrentWorkerThreadJSContext
(
)
;
JSObject
*
GetCurrentThreadWorkerGlobal
(
)
;
JSObject
*
GetCurrentThreadWorkerDebuggerGlobal
(
)
;
void
CancelWorkersForWindow
(
const
nsPIDOMWindowInner
&
aWindow
)
;
void
FreezeWorkersForWindow
(
const
nsPIDOMWindowInner
&
aWindow
)
;
void
ThawWorkersForWindow
(
const
nsPIDOMWindowInner
&
aWindow
)
;
void
SuspendWorkersForWindow
(
const
nsPIDOMWindowInner
&
aWindow
)
;
void
ResumeWorkersForWindow
(
const
nsPIDOMWindowInner
&
aWindow
)
;
void
PropagateFirstPartyStorageAccessGrantedToWorkers
(
const
nsPIDOMWindowInner
&
aWindow
)
;
bool
IsWorkerGlobal
(
JSObject
*
global
)
;
bool
IsWorkerDebuggerGlobal
(
JSObject
*
global
)
;
bool
IsWorkerDebuggerSandbox
(
JSObject
*
object
)
;
}
}
#
endif
