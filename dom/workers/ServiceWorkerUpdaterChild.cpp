#
include
"
ServiceWorkerUpdaterChild
.
h
"
namespace
mozilla
{
namespace
dom
{
namespace
workers
{
ServiceWorkerUpdaterChild
:
:
ServiceWorkerUpdaterChild
(
GenericPromise
*
aPromise
Runnable
*
aSuccessRunnable
Runnable
*
aFailureRunnable
)
:
mSuccessRunnable
(
aSuccessRunnable
)
mFailureRunnable
(
aFailureRunnable
)
{
MOZ_ASSERT
(
aPromise
)
;
MOZ_ASSERT
(
aSuccessRunnable
)
;
MOZ_ASSERT
(
aFailureRunnable
)
;
aPromise
-
>
Then
(
AbstractThread
:
:
GetCurrent
(
)
__func__
[
this
]
(
)
{
mPromiseHolder
.
Complete
(
)
;
Unused
<
<
Send__delete__
(
this
)
;
}
)
.
Track
(
mPromiseHolder
)
;
}
mozilla
:
:
ipc
:
:
IPCResult
ServiceWorkerUpdaterChild
:
:
RecvProceed
(
const
bool
&
aAllowed
)
{
if
(
aAllowed
)
{
mSuccessRunnable
-
>
Run
(
)
;
}
else
{
mFailureRunnable
-
>
Run
(
)
;
}
return
IPC_OK
(
)
;
}
void
ServiceWorkerUpdaterChild
:
:
ActorDestroy
(
ActorDestroyReason
aWhy
)
{
mPromiseHolder
.
DisconnectIfExists
(
)
;
}
}
}
}
