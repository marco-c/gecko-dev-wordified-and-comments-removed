#
include
"
WorkerHolder
.
h
"
#
include
"
WorkerPrivate
.
h
"
BEGIN_WORKERS_NAMESPACE
WorkerHolder
:
:
WorkerHolder
(
)
:
mWorkerPrivate
(
nullptr
)
{
}
WorkerHolder
:
:
~
WorkerHolder
(
)
{
ReleaseWorkerInternal
(
)
;
MOZ_ASSERT
(
mWorkerPrivate
=
=
nullptr
)
;
}
bool
WorkerHolder
:
:
HoldWorker
(
WorkerPrivate
*
aWorkerPrivate
)
{
MOZ_ASSERT
(
aWorkerPrivate
)
;
aWorkerPrivate
-
>
AssertIsOnWorkerThread
(
)
;
if
(
!
aWorkerPrivate
-
>
AddHolder
(
this
)
)
{
return
false
;
}
mWorkerPrivate
=
aWorkerPrivate
;
return
true
;
}
void
WorkerHolder
:
:
ReleaseWorker
(
)
{
MOZ_ASSERT
(
mWorkerPrivate
)
;
ReleaseWorkerInternal
(
)
;
}
void
WorkerHolder
:
:
ReleaseWorkerInternal
(
)
{
if
(
mWorkerPrivate
)
{
mWorkerPrivate
-
>
RemoveHolder
(
this
)
;
mWorkerPrivate
=
nullptr
;
}
}
END_WORKERS_NAMESPACE
