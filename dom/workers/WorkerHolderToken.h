#
ifndef
mozilla_dom_workers_WorkerHolderToken_h
#
define
mozilla_dom_workers_WorkerHolderToken_h
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
WorkerHolder
.
h
"
BEGIN_WORKERS_NAMESPACE
class
WorkerPrivate
;
class
WorkerHolderToken
final
:
public
WorkerHolder
{
public
:
class
Listener
{
public
:
virtual
void
WorkerShuttingDown
(
)
=
0
;
}
;
static
already_AddRefed
<
WorkerHolderToken
>
Create
(
workers
:
:
WorkerPrivate
*
aWorkerPrivate
Status
aShutdownStatus
Behavior
aBehavior
=
PreventIdleShutdownStart
)
;
void
AddListener
(
Listener
*
aListener
)
;
void
RemoveListener
(
Listener
*
aListener
)
;
bool
IsShuttingDown
(
)
const
;
WorkerPrivate
*
GetWorkerPrivate
(
)
const
;
private
:
WorkerHolderToken
(
Status
aShutdownStatus
Behavior
aBehavior
)
;
~
WorkerHolderToken
(
)
;
virtual
bool
Notify
(
workers
:
:
Status
aStatus
)
override
;
nsTArray
<
Listener
*
>
mListenerList
;
const
Status
mShutdownStatus
;
bool
mShuttingDown
;
public
:
NS_INLINE_DECL_REFCOUNTING
(
WorkerHolderToken
)
}
;
END_WORKERS_NAMESPACE
#
endif
