#
ifndef
mozilla_dom_textencoder_h_
#
define
mozilla_dom_textencoder_h_
#
include
"
mozilla
/
dom
/
NonRefcountedDOMObject
.
h
"
#
include
"
mozilla
/
dom
/
TextEncoderBinding
.
h
"
#
include
"
mozilla
/
dom
/
TypedArray
.
h
"
#
include
"
mozilla
/
Encoding
.
h
"
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
TextEncoder
final
:
public
NonRefcountedDOMObject
{
public
:
static
TextEncoder
*
Constructor
(
const
GlobalObject
&
aGlobal
)
{
return
new
TextEncoder
(
)
;
}
TextEncoder
(
)
{
}
virtual
~
TextEncoder
(
)
{
}
bool
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
JS
:
:
MutableHandle
<
JSObject
*
>
aReflector
)
{
return
TextEncoder_Binding
:
:
Wrap
(
aCx
this
aGivenProto
aReflector
)
;
}
public
:
void
GetEncoding
(
nsAString
&
aEncoding
)
;
void
Encode
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aObj
const
nsAString
&
aString
JS
:
:
MutableHandle
<
JSObject
*
>
aRetval
ErrorResult
&
aRv
)
;
void
EncodeInto
(
const
nsAString
&
aSrc
const
Uint8Array
&
aDst
TextEncoderEncodeIntoResult
&
aResult
)
;
}
;
}
}
#
endif
