#
ifndef
mozilla_ComputedTiming_h
#
define
mozilla_ComputedTiming_h
#
include
"
mozilla
/
dom
/
Nullable
.
h
"
#
include
"
mozilla
/
StickyTimeDuration
.
h
"
#
ifdef
None
#
undef
None
#
endif
#
include
"
mozilla
/
dom
/
AnimationEffectReadOnlyBinding
.
h
"
namespace
mozilla
{
struct
ComputedTiming
{
StickyTimeDuration
mActiveDuration
;
StickyTimeDuration
mEndTime
;
Nullable
<
double
>
mProgress
;
uint64_t
mCurrentIteration
=
0
;
double
mIterations
=
1
.
0
;
double
mIterationStart
=
0
.
0
;
StickyTimeDuration
mDuration
;
dom
:
:
FillMode
mFill
=
dom
:
:
FillMode
:
:
None
;
bool
FillsForwards
(
)
const
{
MOZ_ASSERT
(
mFill
!
=
dom
:
:
FillMode
:
:
Auto
"
mFill
should
not
be
Auto
in
ComputedTiming
.
"
)
;
return
mFill
=
=
dom
:
:
FillMode
:
:
Both
|
|
mFill
=
=
dom
:
:
FillMode
:
:
Forwards
;
}
bool
FillsBackwards
(
)
const
{
MOZ_ASSERT
(
mFill
!
=
dom
:
:
FillMode
:
:
Auto
"
mFill
should
not
be
Auto
in
ComputedTiming
.
"
)
;
return
mFill
=
=
dom
:
:
FillMode
:
:
Both
|
|
mFill
=
=
dom
:
:
FillMode
:
:
Backwards
;
}
enum
class
AnimationPhase
{
Null
Before
Active
After
}
;
AnimationPhase
mPhase
=
AnimationPhase
:
:
Null
;
}
;
}
#
endif
