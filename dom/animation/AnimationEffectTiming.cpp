#
include
"
mozilla
/
dom
/
AnimationEffectTiming
.
h
"
#
include
"
mozilla
/
dom
/
AnimatableBinding
.
h
"
#
include
"
mozilla
/
dom
/
AnimationEffectTimingBinding
.
h
"
namespace
mozilla
{
namespace
dom
{
JSObject
*
AnimationEffectTiming
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
AnimationEffectTimingBinding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
void
AnimationEffectTiming
:
:
NotifyTimingUpdate
(
)
{
if
(
mEffect
)
{
mEffect
-
>
NotifySpecifiedTimingUpdated
(
)
;
}
}
void
AnimationEffectTiming
:
:
SetEndDelay
(
double
aEndDelay
)
{
TimeDuration
endDelay
=
TimeDuration
:
:
FromMilliseconds
(
aEndDelay
)
;
if
(
mTiming
.
mEndDelay
=
=
endDelay
)
{
return
;
}
mTiming
.
mEndDelay
=
endDelay
;
NotifyTimingUpdate
(
)
;
}
void
AnimationEffectTiming
:
:
SetDuration
(
const
UnrestrictedDoubleOrString
&
aDuration
)
{
Maybe
<
StickyTimeDuration
>
newDuration
;
if
(
aDuration
.
IsUnrestrictedDouble
(
)
)
{
newDuration
.
emplace
(
StickyTimeDuration
:
:
FromMilliseconds
(
aDuration
.
GetAsUnrestrictedDouble
(
)
)
)
;
}
if
(
mTiming
.
mDuration
=
=
newDuration
)
{
return
;
}
mTiming
.
mDuration
=
newDuration
;
NotifyTimingUpdate
(
)
;
}
}
}
