#
ifndef
mozilla_dom_ScrollTimeline_h
#
define
mozilla_dom_ScrollTimeline_h
#
include
"
mozilla
/
dom
/
AnimationTimeline
.
h
"
#
include
"
mozilla
/
HashTable
.
h
"
#
include
"
mozilla
/
ServoStyleConsts
.
h
"
#
include
"
mozilla
/
TimingParams
.
h
"
#
include
"
mozilla
/
WritingModes
.
h
"
#
define
SCROLL_TIMELINE_DURATION_MILLISEC
100000
namespace
mozilla
{
namespace
dom
{
class
Document
;
class
Element
;
class
ScrollTimeline
final
:
public
AnimationTimeline
{
public
:
ScrollTimeline
(
)
=
delete
;
ScrollTimeline
(
Document
*
aDocument
Element
*
aScroller
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED
(
ScrollTimeline
AnimationTimeline
)
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
{
return
nullptr
;
}
Nullable
<
TimeDuration
>
GetCurrentTimeAsDuration
(
)
const
override
;
bool
TracksWallclockTime
(
)
const
override
{
return
false
;
}
Nullable
<
TimeDuration
>
ToTimelineTime
(
const
TimeStamp
&
aTimeStamp
)
const
override
{
return
nullptr
;
}
TimeStamp
ToTimeStamp
(
const
TimeDuration
&
aTimelineTime
)
const
override
{
return
{
}
;
}
Document
*
GetDocument
(
)
const
override
{
return
mDocument
;
}
bool
IsScrollTimeline
(
)
const
override
{
return
true
;
}
void
ScheduleAnimations
(
)
{
Tick
(
)
;
}
static
const
TimingParams
&
GetTiming
(
)
{
static
TimingParams
sTiming
=
TimingParams
(
SCROLL_TIMELINE_DURATION_MILLISEC
0
.
0
1
.
0
PlaybackDirection
:
:
Normal
FillMode
:
:
Both
)
;
return
sTiming
;
}
protected
:
virtual
~
ScrollTimeline
(
)
{
Teardown
(
)
;
}
private
:
void
Teardown
(
)
{
UnregisterFromScrollSource
(
)
;
}
void
RegisterWithScrollSource
(
)
;
void
UnregisterFromScrollSource
(
)
;
layers
:
:
ScrollDirection
GetPhysicalOrientation
(
WritingMode
aWM
)
const
{
return
mDirection
=
=
StyleScrollDirection
:
:
Horizontal
|
|
(
!
aWM
.
IsVertical
(
)
&
&
mDirection
=
=
StyleScrollDirection
:
:
Inline
)
|
|
(
aWM
.
IsVertical
(
)
&
&
(
mDirection
=
=
StyleScrollDirection
:
:
Block
|
|
mDirection
=
=
StyleScrollDirection
:
:
Auto
)
)
?
layers
:
:
ScrollDirection
:
:
eHorizontal
:
layers
:
:
ScrollDirection
:
:
eVertical
;
}
RefPtr
<
Document
>
mDocument
;
RefPtr
<
Element
>
mSource
;
StyleScrollDirection
mDirection
;
}
;
class
ScrollTimelineSet
{
public
:
using
NonOwningScrollTimelineSet
=
HashSet
<
ScrollTimeline
*
>
;
~
ScrollTimelineSet
(
)
=
default
;
static
ScrollTimelineSet
*
GetScrollTimelineSet
(
Element
*
aElement
)
;
static
ScrollTimelineSet
*
GetOrCreateScrollTimelineSet
(
Element
*
aElement
)
;
static
void
DestroyScrollTimelineSet
(
Element
*
aElement
)
;
void
AddScrollTimeline
(
ScrollTimeline
&
aScrollTimeline
)
{
Unused
<
<
mScrollTimelines
.
put
(
&
aScrollTimeline
)
;
}
void
RemoveScrollTimeline
(
ScrollTimeline
&
aScrollTimeline
)
{
mScrollTimelines
.
remove
(
&
aScrollTimeline
)
;
}
bool
IsEmpty
(
)
const
{
return
mScrollTimelines
.
empty
(
)
;
}
void
ScheduleAnimations
(
)
const
{
for
(
auto
iter
=
mScrollTimelines
.
iter
(
)
;
!
iter
.
done
(
)
;
iter
.
next
(
)
)
{
iter
.
get
(
)
-
>
ScheduleAnimations
(
)
;
}
}
private
:
ScrollTimelineSet
(
)
=
default
;
NonOwningScrollTimelineSet
mScrollTimelines
;
}
;
}
}
#
endif
