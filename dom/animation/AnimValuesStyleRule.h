#
ifndef
mozilla_AnimValuesStyleRule_h
#
define
mozilla_AnimValuesStyleRule_h
#
include
"
mozilla
/
StyleAnimationValue
.
h
"
#
include
"
nsCSSPropertyID
.
h
"
#
include
"
nsCSSPropertyIDSet
.
h
"
#
include
"
nsDataHashtable
.
h
"
#
include
"
nsHashKeys
.
h
"
#
include
"
nsIStyleRule
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsRuleNode
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
class
AnimValuesStyleRule
final
:
public
nsIStyleRule
{
public
:
AnimValuesStyleRule
(
)
:
mStyleBits
(
0
)
{
}
NS_DECL_ISUPPORTS
void
MapRuleInfoInto
(
nsRuleData
*
aRuleData
)
override
;
bool
MightMapInheritedStyleData
(
)
override
;
bool
GetDiscretelyAnimatedCSSValue
(
nsCSSPropertyID
aProperty
nsCSSValue
*
aValue
)
override
;
#
ifdef
DEBUG
void
List
(
FILE
*
out
=
stdout
int32_t
aIndent
=
0
)
const
override
;
#
endif
void
AddValue
(
nsCSSPropertyID
aProperty
const
StyleAnimationValue
&
aValue
)
;
void
AddValue
(
nsCSSPropertyID
aProperty
StyleAnimationValue
&
&
aValue
)
;
bool
HasValue
(
nsCSSPropertyID
aProperty
)
const
{
return
mAnimationValues
.
Contains
(
aProperty
)
;
}
bool
GetValue
(
nsCSSPropertyID
aProperty
StyleAnimationValue
&
aValue
)
const
;
private
:
~
AnimValuesStyleRule
(
)
{
}
nsDataHashtable
<
nsUint32HashKey
StyleAnimationValue
>
mAnimationValues
;
uint32_t
mStyleBits
;
}
;
}
#
endif
