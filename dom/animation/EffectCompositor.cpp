#
include
"
EffectCompositor
.
h
"
#
include
"
mozilla
/
dom
/
Animation
.
h
"
#
include
"
mozilla
/
dom
/
KeyframeEffect
.
h
"
#
include
"
mozilla
/
AnimationUtils
.
h
"
#
include
"
mozilla
/
EffectSet
.
h
"
#
include
"
nsLayoutUtils
.
h
"
using
mozilla
:
:
dom
:
:
Animation
;
using
mozilla
:
:
dom
:
:
KeyframeEffectReadOnly
;
namespace
mozilla
{
nsTArray
<
RefPtr
<
dom
:
:
Animation
>
>
EffectCompositor
:
:
GetAnimationsForCompositor
(
const
nsIFrame
*
aFrame
nsCSSProperty
aProperty
)
{
nsTArray
<
RefPtr
<
dom
:
:
Animation
>
>
result
;
if
(
!
nsLayoutUtils
:
:
AreAsyncAnimationsEnabled
(
)
)
{
if
(
nsLayoutUtils
:
:
IsAnimationLoggingEnabled
(
)
)
{
nsCString
message
;
message
.
AppendLiteral
(
"
Performance
warning
:
Async
animations
are
"
"
disabled
"
)
;
AnimationUtils
:
:
LogAsyncAnimationFailure
(
message
)
;
}
return
result
;
}
if
(
aFrame
-
>
RefusedAsyncAnimation
(
)
)
{
return
result
;
}
EffectSet
*
effects
=
EffectSet
:
:
GetEffectSet
(
aFrame
)
;
if
(
!
effects
)
{
return
result
;
}
for
(
KeyframeEffectReadOnly
*
effect
:
*
effects
)
{
MOZ_ASSERT
(
effect
&
&
effect
-
>
GetAnimation
(
)
)
;
Animation
*
animation
=
effect
-
>
GetAnimation
(
)
;
if
(
!
animation
-
>
IsPlaying
(
)
)
{
continue
;
}
if
(
effect
-
>
ShouldBlockCompositorAnimations
(
aFrame
)
)
{
result
.
Clear
(
)
;
return
result
;
}
if
(
!
effect
-
>
HasAnimationOfProperty
(
aProperty
)
)
{
continue
;
}
result
.
AppendElement
(
animation
)
;
}
return
result
;
}
}
