#
ifndef
mozilla_dom_MutableFile_h
#
define
mozilla_dom_MutableFile_h
#
include
"
mozilla
/
dom
/
FileHandleCommon
.
h
"
#
include
"
nscore
.
h
"
template
<
class
>
struct
already_AddRefed
;
class
nsISupports
;
class
nsString
;
struct
PRThread
;
namespace
mozilla
{
namespace
dom
{
class
BackgroundMutableFileChildBase
;
class
BlobImpl
;
class
File
;
class
FileHandleBase
;
class
MutableFileBase
:
public
RefCountedThreadObject
{
protected
:
BackgroundMutableFileChildBase
*
mBackgroundActor
;
public
:
BackgroundMutableFileChildBase
*
GetBackgroundActor
(
)
const
{
AssertIsOnOwningThread
(
)
;
return
mBackgroundActor
;
}
void
ClearBackgroundActor
(
)
{
AssertIsOnOwningThread
(
)
;
mBackgroundActor
=
nullptr
;
}
virtual
const
nsString
&
Name
(
)
const
=
0
;
virtual
const
nsString
&
Type
(
)
const
=
0
;
virtual
bool
IsInvalidated
(
)
=
0
;
virtual
already_AddRefed
<
File
>
CreateFileFor
(
BlobImpl
*
aBlobImpl
FileHandleBase
*
aFileHandle
)
=
0
;
protected
:
MutableFileBase
(
DEBUGONLY
(
PRThread
*
aOwningThread
)
BackgroundMutableFileChildBase
*
aActor
)
;
virtual
~
MutableFileBase
(
)
;
}
;
}
}
#
endif
