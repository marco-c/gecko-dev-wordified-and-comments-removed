#
ifndef
WriteStumbleOnThread_H
#
define
WriteStumbleOnThread_H
#
include
"
mozilla
/
Atomics
.
h
"
class
DeleteRunnable
;
class
WriteStumbleOnThread
:
public
nsRunnable
{
public
:
explicit
WriteStumbleOnThread
(
const
nsCString
&
aDesc
)
:
mDesc
(
aDesc
)
{
}
NS_IMETHODIMP
Run
(
)
override
;
static
void
UploadEnded
(
bool
deleteUploadFile
)
;
private
:
friend
class
DeleteRunnable
;
enum
class
Partition
{
Begining
Middle
End
Unknown
}
;
enum
class
UploadFileStatus
{
NoFile
Exists
ExistsAndReadyToUpload
}
;
~
WriteStumbleOnThread
(
)
{
}
Partition
GetWritePosition
(
)
;
UploadFileStatus
GetUploadFileStatus
(
)
;
void
WriteJSON
(
Partition
aPart
)
;
void
Upload
(
)
;
nsCString
mDesc
;
static
mozilla
:
:
Atomic
<
bool
>
sIsAlreadyRunning
;
struct
UploadFreqGuard
{
int
attempts
;
int
daySinceEpoch
;
}
;
static
UploadFreqGuard
sUploadFreqGuard
;
}
;
#
endif
