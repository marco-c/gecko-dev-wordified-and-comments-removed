#
ifndef
mozilla_dom_MobileMessageThread_h
#
define
mozilla_dom_MobileMessageThread_h
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsPIDOMWindow
;
namespace
mozilla
{
namespace
dom
{
namespace
mobilemessage
{
class
MobileMessageThreadInternal
;
}
class
MobileMessageThread
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
MobileMessageThread
)
MobileMessageThread
(
nsPIDOMWindow
*
aWindow
mobilemessage
:
:
MobileMessageThreadInternal
*
aThread
)
;
nsPIDOMWindow
*
GetParentObject
(
)
const
{
return
mWindow
;
}
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
uint64_t
Id
(
)
const
;
void
GetLastMessageSubject
(
nsString
&
aRetVal
)
const
;
void
GetBody
(
nsString
&
aRetVal
)
const
;
uint64_t
UnreadCount
(
)
const
;
void
GetParticipants
(
nsTArray
<
nsString
>
&
aRetVal
)
const
;
DOMTimeStamp
Timestamp
(
)
const
;
void
GetLastMessageType
(
nsString
&
aRetVal
)
const
;
private
:
MobileMessageThread
(
)
=
delete
;
~
MobileMessageThread
(
)
;
nsCOMPtr
<
nsPIDOMWindow
>
mWindow
;
RefPtr
<
mobilemessage
:
:
MobileMessageThreadInternal
>
mThread
;
}
;
}
}
#
endif
