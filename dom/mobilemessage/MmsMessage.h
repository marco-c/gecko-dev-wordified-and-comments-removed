#
ifndef
mozilla_dom_MmsMessage_h
#
define
mozilla_dom_MmsMessage_h
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsPIDOMWindowInner
;
namespace
mozilla
{
namespace
dom
{
namespace
mobilemessage
{
class
MmsMessageInternal
;
}
struct
MmsAttachment
;
struct
MmsDeliveryInfo
;
class
MmsMessage
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
MmsMessage
)
MmsMessage
(
nsPIDOMWindowInner
*
aWindow
mobilemessage
:
:
MmsMessageInternal
*
aMessage
)
;
nsPIDOMWindowInner
*
GetParentObject
(
)
const
{
return
mWindow
;
}
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
void
GetType
(
nsString
&
aRetVal
)
const
;
int32_t
Id
(
)
const
;
uint64_t
ThreadId
(
)
const
;
void
GetIccId
(
nsString
&
aRetVal
)
const
;
void
GetDelivery
(
nsString
&
aRetVal
)
const
;
void
GetDeliveryInfo
(
nsTArray
<
MmsDeliveryInfo
>
&
aRetVal
)
const
;
void
GetSender
(
nsString
&
aRetVal
)
const
;
void
GetReceivers
(
nsTArray
<
nsString
>
&
aRetVal
)
const
;
uint64_t
Timestamp
(
)
const
;
uint64_t
SentTimestamp
(
)
const
;
bool
Read
(
)
const
;
void
GetSubject
(
nsString
&
aRetVal
)
const
;
void
GetSmil
(
nsString
&
aRetVal
)
const
;
void
GetAttachments
(
nsTArray
<
MmsAttachment
>
&
aRetVal
)
const
;
uint64_t
ExpiryDate
(
)
const
;
bool
ReadReportRequested
(
)
const
;
private
:
MmsMessage
(
)
=
delete
;
~
MmsMessage
(
)
;
nsCOMPtr
<
nsPIDOMWindowInner
>
mWindow
;
RefPtr
<
mobilemessage
:
:
MmsMessageInternal
>
mMessage
;
}
;
}
}
#
endif
