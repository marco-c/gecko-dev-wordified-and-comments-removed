#
include
"
mozilla
/
SourceLocation
.
h
"
#
include
"
nsContentUtils
.
h
"
#
include
"
jsapi
.
h
"
namespace
mozilla
{
SourceLocation
:
:
SourceLocation
(
)
=
default
;
SourceLocation
:
:
~
SourceLocation
(
)
=
default
;
SourceLocation
:
:
SourceLocation
(
nsCString
&
&
aResource
uint32_t
aLine
uint32_t
aCol
nsCString
&
&
aSourceLine
)
:
mResource
(
std
:
:
move
(
aResource
)
)
mLine
(
aLine
)
mColumn
(
aCol
)
mSourceLine
(
std
:
:
move
(
aSourceLine
)
)
{
}
SourceLocation
:
:
SourceLocation
(
nsCOMPtr
<
nsIURI
>
&
&
aResource
uint32_t
aLine
uint32_t
aCol
nsCString
&
&
aSourceLine
)
:
mResource
(
std
:
:
move
(
aResource
)
)
mLine
(
aLine
)
mColumn
(
aCol
)
mSourceLine
(
std
:
:
move
(
aSourceLine
)
)
{
}
JSCallingLocation
JSCallingLocation
:
:
Get
(
)
{
return
Get
(
nsContentUtils
:
:
GetCurrentJSContext
(
)
)
;
}
JSCallingLocation
JSCallingLocation
:
:
Get
(
JSContext
*
aCx
)
{
JSCallingLocation
result
;
if
(
!
aCx
)
{
return
result
;
}
JS
:
:
AutoFilename
filename
;
uint32_t
line
;
JS
:
:
ColumnNumberOneOrigin
column
;
if
(
!
JS
:
:
DescribeScriptedCaller
(
aCx
&
filename
&
line
&
column
)
)
{
return
result
;
}
nsCString
file
;
if
(
!
file
.
Assign
(
filename
.
get
(
)
fallible
)
)
{
return
result
;
}
result
.
mResource
=
AsVariant
(
std
:
:
move
(
file
)
)
;
result
.
mLine
=
line
;
result
.
mColumn
=
column
.
oneOriginValue
(
)
;
return
result
;
}
}
