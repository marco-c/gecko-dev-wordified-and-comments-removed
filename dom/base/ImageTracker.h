#
ifndef
mozilla_dom_ImageTracker
#
define
mozilla_dom_ImageTracker
#
include
"
nsDataHashtable
.
h
"
#
include
"
nsHashKeys
.
h
"
class
imgIRequest
;
namespace
mozilla
{
struct
MediaFeatureChange
;
}
namespace
mozilla
{
namespace
dom
{
class
ImageTracker
{
public
:
ImageTracker
(
)
;
ImageTracker
(
const
ImageTracker
&
)
=
delete
;
ImageTracker
&
operator
=
(
const
ImageTracker
&
)
=
delete
;
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
ImageTracker
)
nsresult
Add
(
imgIRequest
*
aImage
)
;
enum
{
REQUEST_DISCARD
=
0x1
}
;
nsresult
Remove
(
imgIRequest
*
aImage
uint32_t
aFlags
=
0
)
;
nsresult
SetLockingState
(
bool
aLocked
)
;
void
SetAnimatingState
(
bool
aAnimating
)
;
void
RequestDiscardAll
(
)
;
void
MediaFeatureValuesChangedAllDocuments
(
const
MediaFeatureChange
&
)
;
private
:
~
ImageTracker
(
)
;
nsDataHashtable
<
nsPtrHashKey
<
imgIRequest
>
uint32_t
>
mImages
;
bool
mLocking
;
bool
mAnimating
;
}
;
}
}
#
endif
