#
ifndef
nsTreeSanitizer_h_
#
define
nsTreeSanitizer_h_
#
include
"
nsIPrincipal
.
h
"
#
include
"
mozilla
/
dom
/
Element
.
h
"
class
nsIContent
;
class
MOZ_STACK_CLASS
nsTreeSanitizer
{
public
:
explicit
nsTreeSanitizer
(
uint32_t
aFlags
=
0
)
;
static
void
InitializeStatics
(
)
;
static
void
ReleaseStatics
(
)
;
void
Sanitize
(
mozilla
:
:
dom
:
:
DocumentFragment
*
aFragment
)
;
void
Sanitize
(
nsIDocument
*
aDocument
)
;
private
:
bool
mAllowStyles
;
bool
mAllowComments
;
bool
mDropNonCSSPresentation
;
bool
mDropForms
;
bool
mCidEmbedsOnly
;
bool
mDropMedia
;
bool
mFullDocument
;
bool
mLogRemovals
;
class
AtomsTable
:
public
nsTHashtable
<
nsPtrHashKey
<
const
nsStaticAtom
>
>
{
public
:
explicit
AtomsTable
(
uint32_t
aLength
)
:
nsTHashtable
<
nsPtrHashKey
<
const
nsStaticAtom
>
>
(
aLength
)
{
}
bool
Contains
(
nsAtom
*
aAtom
)
{
return
aAtom
-
>
IsStatic
(
)
&
&
GetEntry
(
aAtom
-
>
AsStatic
(
)
)
;
}
}
;
void
SanitizeChildren
(
nsINode
*
aRoot
)
;
bool
MustFlatten
(
int32_t
aNamespace
nsAtom
*
aLocal
)
;
bool
MustPrune
(
int32_t
aNamespace
nsAtom
*
aLocal
mozilla
:
:
dom
:
:
Element
*
aElement
)
;
bool
IsURL
(
const
nsStaticAtom
*
const
*
aURLs
nsAtom
*
aLocalName
)
;
void
SanitizeAttributes
(
mozilla
:
:
dom
:
:
Element
*
aElement
AtomsTable
*
aAllowed
const
nsStaticAtom
*
const
*
aURLs
bool
aAllowXLink
bool
aAllowStyle
bool
aAllowDangerousSrc
)
;
bool
SanitizeURL
(
mozilla
:
:
dom
:
:
Element
*
aElement
int32_t
aNamespace
nsAtom
*
aLocalName
)
;
bool
SanitizeStyleDeclaration
(
mozilla
:
:
DeclarationBlock
*
aDeclaration
)
;
bool
SanitizeStyleSheet
(
const
nsAString
&
aOriginal
nsAString
&
aSanitized
nsIDocument
*
aDocument
nsIURI
*
aBaseURI
)
;
void
RemoveAllAttributes
(
mozilla
:
:
dom
:
:
Element
*
aElement
)
;
void
LogMessage
(
const
char
*
aMessage
nsIDocument
*
aDoc
Element
*
aElement
=
nullptr
nsAtom
*
aAttr
=
nullptr
)
;
static
AtomsTable
*
sElementsHTML
;
static
AtomsTable
*
sAttributesHTML
;
static
AtomsTable
*
sPresAttributesHTML
;
static
AtomsTable
*
sElementsSVG
;
static
AtomsTable
*
sAttributesSVG
;
static
AtomsTable
*
sElementsMathML
;
static
AtomsTable
*
sAttributesMathML
;
static
nsIPrincipal
*
sNullPrincipal
;
}
;
#
endif
