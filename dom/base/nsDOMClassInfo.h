#
ifndef
nsDOMClassInfo_h___
#
define
nsDOMClassInfo_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsDOMClassInfoID
.
h
"
#
include
"
nsIXPCScriptable
.
h
"
#
include
"
nsIScriptGlobalObject
.
h
"
#
include
"
js
/
Class
.
h
"
#
include
"
js
/
Id
.
h
"
#
include
"
nsIXPConnect
.
h
"
#
ifdef
XP_WIN
#
undef
GetClassName
#
endif
struct
nsGlobalNameStruct
;
class
nsGlobalWindowInner
;
class
nsGlobalWindowOuter
;
struct
nsDOMClassInfoData
;
typedef
nsIClassInfo
*
(
*
nsDOMClassInfoConstructorFnc
)
(
nsDOMClassInfoData
*
aData
)
;
typedef
nsresult
(
*
nsDOMConstructorFunc
)
(
nsISupports
*
*
aNewObject
)
;
struct
nsDOMClassInfoData
{
const
char16_t
*
mNameUTF16
;
const
js
:
:
ClassOps
mClassOps
;
const
js
:
:
Class
mClass
;
nsDOMClassInfoConstructorFnc
mConstructorFptr
;
nsIClassInfo
*
mCachedClassInfo
;
const
nsIID
*
mProtoChainInterface
;
const
nsIID
*
*
mInterfaces
;
uint32_t
mScriptableFlags
:
31
;
uint32_t
mHasClassInterface
:
1
;
bool
mDisabled
:
1
;
#
ifdef
DEBUG
uint32_t
mDebugID
;
#
endif
}
;
class
nsWindowSH
;
class
nsDOMClassInfo
:
public
nsXPCClassInfo
{
friend
class
nsWindowSH
;
protected
:
virtual
~
nsDOMClassInfo
(
)
{
}
;
public
:
explicit
nsDOMClassInfo
(
nsDOMClassInfoData
*
aData
)
;
NS_DECL_NSIXPCSCRIPTABLE
NS_DECL_ISUPPORTS
NS_DECL_NSICLASSINFO
static
nsresult
Init
(
)
;
static
void
ShutDown
(
)
;
static
nsIClassInfo
*
doCreate
(
nsDOMClassInfoData
*
aData
)
{
return
new
nsDOMClassInfo
(
aData
)
;
}
static
bool
ObjectIsNativeWrapper
(
JSContext
*
cx
JSObject
*
obj
)
;
protected
:
const
nsDOMClassInfoData
*
mData
;
virtual
void
PreserveWrapper
(
nsISupports
*
aNative
)
override
{
}
static
nsIXPConnect
*
sXPConnect
;
static
nsresult
DefineStaticJSVals
(
)
;
static
bool
sIsInitialized
;
public
:
static
jsid
sConstructor_id
;
static
jsid
sWrappedJSObject_id
;
}
;
typedef
nsDOMClassInfo
nsDOMGenericSH
;
class
nsEventTargetSH
:
public
nsDOMGenericSH
{
protected
:
explicit
nsEventTargetSH
(
nsDOMClassInfoData
*
aData
)
:
nsDOMGenericSH
(
aData
)
{
}
virtual
~
nsEventTargetSH
(
)
{
}
public
:
NS_IMETHOD
PreCreate
(
nsISupports
*
nativeObj
JSContext
*
cx
JSObject
*
globalObj
JSObject
*
*
parentObj
)
override
;
virtual
void
PreserveWrapper
(
nsISupports
*
aNative
)
override
;
}
;
class
nsWindowSH
{
protected
:
static
nsresult
GlobalResolve
(
nsGlobalWindowInner
*
aWin
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
obj
JS
:
:
Handle
<
jsid
>
id
JS
:
:
MutableHandle
<
JS
:
:
PropertyDescriptor
>
desc
)
;
friend
class
nsGlobalWindowInner
;
friend
class
nsGlobalWindowOuter
;
public
:
static
bool
NameStructEnabled
(
JSContext
*
aCx
nsGlobalWindowInner
*
aWin
const
nsAString
&
aName
const
nsGlobalNameStruct
&
aNameStruct
)
;
}
;
class
nsEventListenerThisTranslator
:
public
nsIXPCFunctionThisTranslator
{
virtual
~
nsEventListenerThisTranslator
(
)
{
}
public
:
nsEventListenerThisTranslator
(
)
{
}
NS_DECL_ISUPPORTS
NS_DECL_NSIXPCFUNCTIONTHISTRANSLATOR
}
;
#
endif
