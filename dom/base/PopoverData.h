#
ifndef
mozilla_dom_PopoverData_h
#
define
mozilla_dom_PopoverData_h
#
include
"
Element
.
h
"
#
include
"
nsINode
.
h
"
#
include
"
nsIRunnable
.
h
"
#
include
"
nsIWeakReferenceUtils
.
h
"
#
include
"
nsStringFwd
.
h
"
#
include
"
nsThreadUtils
.
h
"
namespace
mozilla
:
:
dom
{
enum
class
PopoverAttributeState
:
uint8_t
{
None
Auto
Manual
}
;
enum
class
PopoverVisibilityState
:
uint8_t
{
Hidden
Showing
}
;
class
PopoverToggleEventTask
:
public
Runnable
{
public
:
explicit
PopoverToggleEventTask
(
nsWeakPtr
aElement
PopoverVisibilityState
aOldState
)
;
MOZ_CAN_RUN_SCRIPT_BOUNDARY
NS_IMETHOD
Run
(
)
override
;
PopoverVisibilityState
GetOldState
(
)
const
{
return
mOldState
;
}
private
:
nsWeakPtr
mElement
;
PopoverVisibilityState
mOldState
;
}
;
class
PopoverData
{
public
:
PopoverData
(
)
=
default
;
~
PopoverData
(
)
=
default
;
PopoverAttributeState
GetPopoverAttributeState
(
)
const
{
return
mState
;
}
void
SetPopoverAttributeState
(
PopoverAttributeState
aState
)
{
mState
=
aState
;
}
PopoverVisibilityState
GetPopoverVisibilityState
(
)
const
{
return
mVisibilityState
;
}
void
SetPopoverVisibilityState
(
PopoverVisibilityState
aVisibilityState
)
{
mVisibilityState
=
aVisibilityState
;
}
nsWeakPtr
GetPreviouslyFocusedElement
(
)
const
{
return
mPreviouslyFocusedElement
;
}
void
SetPreviouslyFocusedElement
(
nsWeakPtr
aPreviouslyFocusedElement
)
{
mPreviouslyFocusedElement
=
aPreviouslyFocusedElement
;
}
RefPtr
<
Element
>
GetInvoker
(
)
const
{
return
do_QueryReferent
(
mInvokerElement
)
;
}
void
SetInvoker
(
Element
*
aInvokerElement
)
{
mInvokerElement
=
do_GetWeakReference
(
static_cast
<
nsINode
*
>
(
aInvokerElement
)
)
;
}
PopoverToggleEventTask
*
GetToggleEventTask
(
)
const
{
return
mTask
;
}
void
SetToggleEventTask
(
PopoverToggleEventTask
*
aTask
)
{
mTask
=
aTask
;
}
void
ClearToggleEventTask
(
)
{
mTask
=
nullptr
;
}
bool
IsHiding
(
)
const
{
return
mIsHiding
;
}
void
SetIsHiding
(
bool
aIsHiding
)
{
mIsHiding
=
aIsHiding
;
}
private
:
PopoverVisibilityState
mVisibilityState
=
PopoverVisibilityState
:
:
Hidden
;
PopoverAttributeState
mState
=
PopoverAttributeState
:
:
None
;
nsWeakPtr
mPreviouslyFocusedElement
=
nullptr
;
nsWeakPtr
mInvokerElement
;
bool
mIsHiding
=
false
;
RefPtr
<
PopoverToggleEventTask
>
mTask
;
}
;
}
#
endif
