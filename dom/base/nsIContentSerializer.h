#
ifndef
nsIContentSerializer_h
#
define
nsIContentSerializer_h
#
include
"
nsISupports
.
h
"
#
include
"
nsStringFwd
.
h
"
class
nsIContent
;
namespace
mozilla
{
class
Encoding
;
namespace
dom
{
class
Comment
;
class
Document
;
class
DocumentType
;
class
Element
;
class
ProcessingInstruction
;
}
}
#
define
NS_ICONTENTSERIALIZER_IID
\
{
\
0xb1ee32f2
0xb8c4
0x49b9
{
\
0x93
0xdf
0xb6
0xfa
0xb5
0xd5
0x46
0x88
\
}
\
}
class
nsIContentSerializer
:
public
nsISupports
{
public
:
NS_DECLARE_STATIC_IID_ACCESSOR
(
NS_ICONTENTSERIALIZER_IID
)
NS_IMETHOD
Init
(
uint32_t
flags
uint32_t
aWrapColumn
const
mozilla
:
:
Encoding
*
aEncoding
bool
aIsCopying
bool
aIsWholeDocument
bool
*
aNeedsPerformatScanning
)
=
0
;
NS_IMETHOD
AppendText
(
nsIContent
*
aText
int32_t
aStartOffset
int32_t
aEndOffset
nsAString
&
aStr
)
=
0
;
NS_IMETHOD
AppendCDATASection
(
nsIContent
*
aCDATASection
int32_t
aStartOffset
int32_t
aEndOffset
nsAString
&
aStr
)
=
0
;
NS_IMETHOD
AppendProcessingInstruction
(
mozilla
:
:
dom
:
:
ProcessingInstruction
*
aPI
int32_t
aStartOffset
int32_t
aEndOffset
nsAString
&
aStr
)
=
0
;
NS_IMETHOD
AppendComment
(
mozilla
:
:
dom
:
:
Comment
*
aComment
int32_t
aStartOffset
int32_t
aEndOffset
nsAString
&
aStr
)
=
0
;
NS_IMETHOD
AppendDoctype
(
mozilla
:
:
dom
:
:
DocumentType
*
aDoctype
nsAString
&
aStr
)
=
0
;
NS_IMETHOD
AppendElementStart
(
mozilla
:
:
dom
:
:
Element
*
aElement
mozilla
:
:
dom
:
:
Element
*
aOriginalElement
nsAString
&
aStr
)
=
0
;
NS_IMETHOD
AppendElementEnd
(
mozilla
:
:
dom
:
:
Element
*
aElement
nsAString
&
aStr
)
=
0
;
NS_IMETHOD
Flush
(
nsAString
&
aStr
)
=
0
;
NS_IMETHOD
AppendDocumentStart
(
mozilla
:
:
dom
:
:
Document
*
aDocument
nsAString
&
aStr
)
=
0
;
NS_IMETHOD
ScanElementForPreformat
(
mozilla
:
:
dom
:
:
Element
*
aElement
)
=
0
;
NS_IMETHOD
ForgetElementForPreformat
(
mozilla
:
:
dom
:
:
Element
*
aElement
)
=
0
;
}
;
NS_DEFINE_STATIC_IID_ACCESSOR
(
nsIContentSerializer
NS_ICONTENTSERIALIZER_IID
)
#
define
NS_CONTENTSERIALIZER_CONTRACTID_PREFIX
\
"
mozilla
.
org
/
layout
/
contentserializer
;
1
?
mimetype
=
"
#
endif
