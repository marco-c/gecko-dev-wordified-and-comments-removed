#
ifndef
mozilla_dom_PlacesVisit_h
#
define
mozilla_dom_PlacesVisit_h
#
include
"
mozilla
/
dom
/
PlacesEvent
.
h
"
namespace
mozilla
{
namespace
dom
{
class
PlacesVisit
final
:
public
PlacesEvent
{
public
:
explicit
PlacesVisit
(
)
:
PlacesEvent
(
PlacesEventType
:
:
Page_visited
)
{
}
static
already_AddRefed
<
PlacesVisit
>
Constructor
(
const
GlobalObject
&
aGlobal
ErrorResult
&
aRv
)
{
RefPtr
<
PlacesVisit
>
event
=
new
PlacesVisit
(
)
;
return
event
.
forget
(
)
;
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
{
return
PlacesVisit_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
const
PlacesVisit
*
AsPlacesVisit
(
)
const
override
{
return
this
;
}
void
GetUrl
(
nsString
&
aUrl
)
{
aUrl
=
mUrl
;
}
uint64_t
VisitId
(
)
{
return
mVisitId
;
}
uint64_t
VisitTime
(
)
{
return
mVisitTime
;
}
uint64_t
ReferringVisitId
(
)
{
return
mReferringVisitId
;
}
uint64_t
TransitionType
(
)
{
return
mTransitionType
;
}
void
GetPageGuid
(
nsTString
<
char
>
&
aPageGuid
)
{
aPageGuid
=
mPageGuid
;
}
uint64_t
Frecency
(
)
{
return
mFrecency
;
}
bool
Hidden
(
)
{
return
mHidden
;
}
uint32_t
VisitCount
(
)
{
return
mVisitCount
;
}
uint32_t
TypedCount
(
)
{
return
mTypedCount
;
}
void
GetLastKnownTitle
(
nsString
&
aLastKnownTitle
)
{
aLastKnownTitle
=
mLastKnownTitle
;
}
nsString
mUrl
;
uint64_t
mVisitId
;
uint64_t
mVisitTime
;
uint64_t
mReferringVisitId
;
uint32_t
mTransitionType
;
nsCString
mPageGuid
;
int64_t
mFrecency
;
bool
mHidden
;
uint32_t
mVisitCount
;
uint32_t
mTypedCount
;
nsString
mLastKnownTitle
;
private
:
~
PlacesVisit
(
)
=
default
;
}
;
}
}
#
endif
