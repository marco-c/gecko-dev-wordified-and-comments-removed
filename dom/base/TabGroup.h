#
ifndef
TabGroup_h
#
define
TabGroup_h
#
include
"
nsISupports
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsIPrincipal
.
h
"
#
include
"
nsTHashtable
.
h
"
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
namespace
mozilla
{
namespace
dom
{
class
DocGroup
;
class
TabGroup
final
:
public
nsISupports
{
private
:
class
HashEntry
:
public
nsCStringHashKey
{
public
:
DocGroup
*
mDocGroup
;
explicit
HashEntry
(
const
nsACString
*
aKey
)
;
}
;
typedef
nsTHashtable
<
HashEntry
>
DocGroupMap
;
public
:
typedef
DocGroupMap
:
:
Iterator
Iterator
;
friend
class
DocGroup
;
NS_DECL_THREADSAFE_ISUPPORTS
static
TabGroup
*
GetChromeTabGroup
(
)
;
TabGroup
(
)
;
already_AddRefed
<
DocGroup
>
GetDocGroup
(
const
nsACString
&
aKey
)
;
already_AddRefed
<
DocGroup
>
AddDocument
(
const
nsACString
&
aKey
nsIDocument
*
aDocument
)
;
static
already_AddRefed
<
TabGroup
>
Join
(
nsPIDOMWindowOuter
*
aWindow
TabGroup
*
aTabGroup
)
;
void
Leave
(
nsPIDOMWindowOuter
*
aWindow
)
;
Iterator
Iter
(
)
{
return
mDocGroups
.
Iter
(
)
;
}
nsresult
FindItemWithName
(
const
nsAString
&
aName
nsIDocShellTreeItem
*
aRequestor
nsIDocShellTreeItem
*
aOriginalRequestor
nsIDocShellTreeItem
*
*
aFoundItem
)
;
private
:
~
TabGroup
(
)
;
DocGroupMap
mDocGroups
;
nsTArray
<
nsPIDOMWindowOuter
*
>
mWindows
;
}
;
}
}
#
endif
