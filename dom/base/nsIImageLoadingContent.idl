#
include
"
imgINotificationObserver
.
idl
"
%
{
C
+
+
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
Visibility
.
h
"
%
}
interface
imgIRequest
;
interface
nsIChannel
;
interface
nsIStreamListener
;
interface
nsIURI
;
interface
nsIFrame
;
[
ref
]
native
MaybeOnNonvisible
(
const
mozilla
:
:
Maybe
<
mozilla
:
:
OnNonvisible
>
)
;
native
Visibility
(
mozilla
:
:
Visibility
)
;
[
scriptable
builtinclass
uuid
(
0357123d
-
9224
-
4d12
-
a47e
-
868c32689777
)
]
interface
nsIImageLoadingContent
:
imgINotificationObserver
{
const
long
UNKNOWN_REQUEST
=
-
1
;
const
long
CURRENT_REQUEST
=
0
;
const
long
PENDING_REQUEST
=
1
;
[
notxpcom
nostdcall
]
void
setLoadingEnabled
(
in
boolean
aEnabled
)
;
[
notxpcom
nostdcall
]
void
addNativeObserver
(
in
imgINotificationObserver
aObserver
)
;
[
notxpcom
nostdcall
]
void
removeNativeObserver
(
in
imgINotificationObserver
aObserver
)
;
[
noscript
]
imgIRequest
getRequest
(
in
long
aRequestType
)
;
[
notxpcom
]
void
frameCreated
(
in
nsIFrame
aFrame
)
;
[
notxpcom
]
void
frameDestroyed
(
in
nsIFrame
aFrame
)
;
[
noscript
]
long
getRequestType
(
in
imgIRequest
aRequest
)
;
[
noscript
infallible
]
readonly
attribute
nsIURI
currentURI
;
[
noscript
]
nsIStreamListener
loadImageWithChannel
(
in
nsIChannel
aChannel
)
;
[
notxpcom
nostdcall
]
void
forceImageState
(
in
boolean
aForce
in
unsigned
long
long
aState
)
;
[
noscript
notxpcom
]
void
onVisibilityChange
(
in
Visibility
aNewVisibility
in
MaybeOnNonvisible
aNonvisibleAction
)
;
}
;
