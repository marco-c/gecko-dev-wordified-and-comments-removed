#
ifndef
mozilla_dom_shadowroot_h__
#
define
mozilla_dom_shadowroot_h__
#
include
"
mozilla
/
dom
/
DocumentFragment
.
h
"
#
include
"
mozilla
/
dom
/
StyleSheetList
.
h
"
#
include
"
mozilla
/
StyleSheet
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsIContentInlines
.
h
"
#
include
"
nsIdentifierMapEntry
.
h
"
#
include
"
nsTHashtable
.
h
"
class
nsAtom
;
class
nsIContent
;
class
nsXBLPrototypeBinding
;
namespace
mozilla
{
namespace
dom
{
class
Element
;
class
HTMLContentElement
;
class
ShadowRootStyleSheetList
;
class
ShadowRoot
final
:
public
DocumentFragment
public
nsStubMutationObserver
{
friend
class
ShadowRootStyleSheetList
;
public
:
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
ShadowRoot
DocumentFragment
)
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_NSIMUTATIONOBSERVER_ATTRIBUTECHANGED
NS_DECL_NSIMUTATIONOBSERVER_CONTENTAPPENDED
NS_DECL_NSIMUTATIONOBSERVER_CONTENTINSERTED
NS_DECL_NSIMUTATIONOBSERVER_CONTENTREMOVED
ShadowRoot
(
Element
*
aElement
bool
aClosed
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
&
aNodeInfo
nsXBLPrototypeBinding
*
aProtoBinding
)
;
Element
*
Host
(
)
;
ShadowRootMode
Mode
(
)
{
return
mMode
;
}
bool
IsClosed
(
)
{
return
mMode
=
=
ShadowRootMode
:
:
Closed
;
}
void
AddToIdTable
(
Element
*
aElement
nsAtom
*
aId
)
;
void
RemoveFromIdTable
(
Element
*
aElement
nsAtom
*
aId
)
;
void
InsertSheet
(
StyleSheet
*
aSheet
nsIContent
*
aLinkingContent
)
;
void
RemoveSheet
(
StyleSheet
*
aSheet
)
;
bool
ApplyAuthorStyles
(
)
;
void
SetApplyAuthorStyles
(
bool
aApplyAuthorStyles
)
;
StyleSheetList
*
StyleSheets
(
)
;
void
DistributeAllNodes
(
)
;
private
:
const
HTMLContentElement
*
DistributeSingleNode
(
nsIContent
*
aContent
)
;
const
HTMLContentElement
*
RemoveDistributedNode
(
nsIContent
*
aContent
)
;
bool
RedistributeElement
(
Element
*
)
;
void
DistributionChanged
(
)
;
bool
IsPooledNode
(
nsIContent
*
aChild
)
const
;
public
:
void
AddInsertionPoint
(
HTMLContentElement
*
aInsertionPoint
)
;
void
RemoveInsertionPoint
(
HTMLContentElement
*
aInsertionPoint
)
;
void
SetInsertionPointChanged
(
)
{
mInsertionPointChanged
=
true
;
}
void
SetAssociatedBinding
(
nsXBLBinding
*
aBinding
)
{
mAssociatedBinding
=
aBinding
;
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
ShadowRoot
*
FromNode
(
nsINode
*
aNode
)
;
static
void
RemoveDestInsertionPoint
(
nsIContent
*
aInsertionPoint
nsTArray
<
nsIContent
*
>
&
aDestInsertionPoints
)
;
Element
*
GetElementById
(
const
nsAString
&
aElementId
)
;
already_AddRefed
<
nsContentList
>
GetElementsByTagName
(
const
nsAString
&
aNamespaceURI
)
;
already_AddRefed
<
nsContentList
>
GetElementsByTagNameNS
(
const
nsAString
&
aNamespaceURI
const
nsAString
&
aLocalName
)
;
already_AddRefed
<
nsContentList
>
GetElementsByClassName
(
const
nsAString
&
aClasses
)
;
void
GetInnerHTML
(
nsAString
&
aInnerHTML
)
;
void
SetInnerHTML
(
const
nsAString
&
aInnerHTML
ErrorResult
&
aError
)
;
void
StyleSheetChanged
(
)
;
bool
IsComposedDocParticipant
(
)
{
return
mIsComposedDocParticipant
;
}
void
SetIsComposedDocParticipant
(
bool
aIsComposedDocParticipant
)
{
mIsComposedDocParticipant
=
aIsComposedDocParticipant
;
}
protected
:
virtual
~
ShadowRoot
(
)
;
ShadowRootMode
mMode
;
nsTArray
<
HTMLContentElement
*
>
mInsertionPoints
;
nsTHashtable
<
nsIdentifierMapEntry
>
mIdentifierMap
;
nsXBLPrototypeBinding
*
mProtoBinding
;
RefPtr
<
nsXBLBinding
>
mAssociatedBinding
;
RefPtr
<
ShadowRootStyleSheetList
>
mStyleSheetList
;
bool
mInsertionPointChanged
;
bool
mIsComposedDocParticipant
;
nsresult
Clone
(
mozilla
:
:
dom
:
:
NodeInfo
*
aNodeInfo
nsINode
*
*
aResult
bool
aPreallocateChildren
)
const
override
;
}
;
class
ShadowRootStyleSheetList
:
public
StyleSheetList
{
public
:
explicit
ShadowRootStyleSheetList
(
ShadowRoot
*
aShadowRoot
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
ShadowRootStyleSheetList
StyleSheetList
)
virtual
nsINode
*
GetParentObject
(
)
const
override
{
return
mShadowRoot
;
}
uint32_t
Length
(
)
override
;
StyleSheet
*
IndexedGetter
(
uint32_t
aIndex
bool
&
aFound
)
override
;
protected
:
virtual
~
ShadowRootStyleSheetList
(
)
;
RefPtr
<
ShadowRoot
>
mShadowRoot
;
}
;
}
}
#
endif
