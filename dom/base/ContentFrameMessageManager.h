#
ifndef
mozilla_dom_ContentFrameMessageManager_h
#
define
mozilla_dom_ContentFrameMessageManager_h
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
#
include
"
mozilla
/
dom
/
MessageManagerGlobal
.
h
"
#
include
"
mozilla
/
dom
/
ResolveSystemBinding
.
h
"
#
include
"
nsContentUtils
.
h
"
#
include
"
xpcpublic
.
h
"
namespace
mozilla
{
namespace
dom
{
class
ContentFrameMessageManager
:
public
DOMEventTargetHelper
public
MessageManagerGlobal
{
public
:
using
DOMEventTargetHelper
:
:
AddRef
;
using
DOMEventTargetHelper
:
:
Release
;
virtual
already_AddRefed
<
nsPIDOMWindowOuter
>
GetContent
(
ErrorResult
&
aError
)
=
0
;
virtual
already_AddRefed
<
nsIDocShell
>
GetDocShell
(
ErrorResult
&
aError
)
=
0
;
virtual
already_AddRefed
<
nsIEventTarget
>
GetTabEventTarget
(
)
=
0
;
virtual
uint64_t
ChromeOuterWindowID
(
)
=
0
;
nsFrameMessageManager
*
GetMessageManager
(
)
{
return
mMessageManager
;
}
void
DisconnectMessageManager
(
)
{
mMessageManager
-
>
Disconnect
(
)
;
mMessageManager
=
nullptr
;
}
JSObject
*
GetOrCreateWrapper
(
)
;
protected
:
explicit
ContentFrameMessageManager
(
nsFrameMessageManager
*
aMessageManager
)
:
DOMEventTargetHelper
(
xpc
:
:
NativeGlobal
(
xpc
:
:
PrivilegedJunkScope
(
)
)
)
MessageManagerGlobal
(
aMessageManager
)
{
}
}
;
}
}
#
endif
