#
ifndef
nsDOMWindowUtils_h_
#
define
nsDOMWindowUtils_h_
#
include
"
nsWeakReference
.
h
"
#
include
"
nsIDOMWindowUtils
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
BasicEvents
.
h
"
class
nsGlobalWindowOuter
;
class
nsIPresShell
;
class
nsIWidget
;
class
nsPresContext
;
class
nsView
;
struct
nsPoint
;
namespace
mozilla
{
namespace
dom
{
class
Document
;
class
Element
;
}
namespace
layers
{
class
LayerTransactionChild
;
class
WebRenderBridgeChild
;
}
}
class
nsTranslationNodeList
final
:
public
nsITranslationNodeList
{
public
:
nsTranslationNodeList
(
)
{
mNodes
.
SetCapacity
(
1000
)
;
mNodeIsRoot
.
SetCapacity
(
1000
)
;
mLength
=
0
;
}
NS_DECL_ISUPPORTS
NS_DECL_NSITRANSLATIONNODELIST
void
AppendElement
(
nsINode
*
aElement
bool
aIsRoot
)
{
mNodes
.
AppendElement
(
aElement
)
;
mNodeIsRoot
.
AppendElement
(
aIsRoot
)
;
mLength
+
+
;
}
private
:
~
nsTranslationNodeList
(
)
{
}
nsTArray
<
nsCOMPtr
<
nsINode
>
>
mNodes
;
nsTArray
<
bool
>
mNodeIsRoot
;
uint32_t
mLength
;
}
;
class
nsDOMWindowUtils
final
:
public
nsIDOMWindowUtils
public
nsSupportsWeakReference
{
typedef
mozilla
:
:
widget
:
:
TextEventDispatcher
TextEventDispatcher
;
public
:
explicit
nsDOMWindowUtils
(
nsGlobalWindowOuter
*
aWindow
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSIDOMWINDOWUTILS
protected
:
~
nsDOMWindowUtils
(
)
;
nsWeakPtr
mWindow
;
nsIWidget
*
GetWidget
(
nsPoint
*
aOffset
=
nullptr
)
;
nsIWidget
*
GetWidgetForElement
(
mozilla
:
:
dom
:
:
Element
*
aElement
)
;
nsIPresShell
*
GetPresShell
(
)
;
nsPresContext
*
GetPresContext
(
)
;
mozilla
:
:
dom
:
:
Document
*
GetDocument
(
)
;
mozilla
:
:
layers
:
:
LayerTransactionChild
*
GetLayerTransaction
(
)
;
mozilla
:
:
layers
:
:
WebRenderBridgeChild
*
GetWebRenderBridge
(
)
;
MOZ_CAN_RUN_SCRIPT
NS_IMETHOD
SendMouseEventCommon
(
const
nsAString
&
aType
float
aX
float
aY
int32_t
aButton
int32_t
aClickCount
int32_t
aModifiers
bool
aIgnoreRootScrollFrame
float
aPressure
unsigned
short
aInputSourceArg
uint32_t
aIdentifier
bool
aToWindow
bool
*
aPreventDefault
bool
aIsDOMEventSynthesized
bool
aIsWidgetEventSynthesized
int32_t
aButtons
)
;
MOZ_CAN_RUN_SCRIPT
NS_IMETHOD
SendTouchEventCommon
(
const
nsAString
&
aType
uint32_t
*
aIdentifiers
int32_t
*
aXs
int32_t
*
aYs
uint32_t
*
aRxs
uint32_t
*
aRys
float
*
aRotationAngles
float
*
aForces
uint32_t
aCount
int32_t
aModifiers
bool
aIgnoreRootScrollFrame
bool
aToWindow
bool
*
aPreventDefault
)
;
}
;
#
endif
