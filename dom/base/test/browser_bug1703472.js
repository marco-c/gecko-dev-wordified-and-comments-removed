const
BASE_URL
=
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
dom
/
base
/
test
/
"
;
add_task
(
async
function
bug1703472
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
dom
.
block_multiple_popups
"
true
]
[
"
dom
.
disable_open_during_load
"
true
]
]
}
)
;
await
BrowserTestUtils
.
withNewTab
(
BASE_URL
+
"
file_bug1703472
.
html
"
async
function
(
browser
)
{
info
(
"
Opening
popup
"
)
;
let
win
=
await
newFocusedWindow
(
function
(
)
{
return
BrowserTestUtils
.
synthesizeMouseAtCenter
(
"
#
openWindow
"
{
}
browser
)
;
}
)
;
info
(
"
re
-
focusing
the
original
window
"
)
;
{
let
focusBack
=
BrowserTestUtils
.
waitForEvent
(
window
"
focus
"
true
)
;
window
.
focus
(
)
;
await
focusBack
;
is
(
Services
.
focus
.
focusedWindow
window
"
should
focus
back
"
)
;
}
info
(
"
Trying
to
steal
focus
without
interaction
"
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
function
(
)
{
content
.
document
.
querySelector
(
"
#
focusWindow
"
)
.
click
(
)
;
}
)
;
await
new
Promise
(
resolve
=
>
{
setTimeout
(
resolve
500
)
;
}
)
;
is
(
Services
.
focus
.
focusedWindow
window
"
should
still
be
focused
"
)
;
info
(
"
Trying
to
move
focus
with
user
interaction
"
)
;
{
let
focus
=
BrowserTestUtils
.
waitForEvent
(
win
"
focus
"
true
)
;
await
BrowserTestUtils
.
synthesizeMouseAtCenter
(
"
#
focusWindow
"
{
}
browser
)
;
await
focus
;
is
(
Services
.
focus
.
focusedWindow
win
"
should
focus
back
"
)
;
}
win
.
close
(
)
;
}
)
;
}
)
;
