var
fullscreenChangeEnters
=
0
;
addLoadEvent
(
function
(
)
{
info
(
Resetting
fullscreen
enter
count
.
)
;
fullscreenChangeEnters
=
0
;
}
)
;
function
setFullscreenChangeEnters
(
enters
)
{
info
(
Setting
fullscreen
enter
count
to
{
enters
}
.
)
;
fullscreenChangeEnters
=
enters
;
}
function
inFullscreenMode
(
win
)
{
return
win
.
document
.
fullscreenElement
;
}
function
addFullscreenChangeContinuation
(
type
callback
inDoc
)
{
var
doc
=
inDoc
|
|
document
;
var
topWin
=
doc
.
defaultView
.
top
;
function
checkCondition
(
)
{
if
(
type
=
=
"
enter
"
)
{
fullscreenChangeEnters
+
+
;
return
inFullscreenMode
(
topWin
)
;
}
else
if
(
type
=
=
"
exit
"
)
{
fullscreenChangeEnters
-
-
;
return
fullscreenChangeEnters
?
inFullscreenMode
(
topWin
)
:
!
inFullscreenMode
(
topWin
)
;
}
throw
new
Error
(
"
'
type
'
must
be
either
'
enter
'
or
'
exit
'
.
"
)
;
}
function
invokeCallback
(
event
)
{
requestAnimationFrame
(
(
)
=
>
setTimeout
(
(
)
=
>
callback
(
event
)
0
)
0
)
;
}
function
onFullscreenChange
(
event
)
{
doc
.
removeEventListener
(
"
fullscreenchange
"
onFullscreenChange
)
;
ok
(
checkCondition
(
)
Should
{
type
}
fullscreen
.
)
;
invokeCallback
(
event
)
;
}
doc
.
addEventListener
(
"
fullscreenchange
"
onFullscreenChange
)
;
}
function
addFullscreenErrorContinuation
(
callback
inDoc
)
{
let
doc
=
inDoc
|
|
document
;
let
listener
=
function
(
event
)
{
doc
.
removeEventListener
(
"
fullscreenerror
"
listener
)
;
requestAnimationFrame
(
(
)
=
>
setTimeout
(
(
)
=
>
callback
(
event
)
0
)
0
)
;
}
;
doc
.
addEventListener
(
"
fullscreenerror
"
listener
)
;
}
function
waitForLoadAndPaint
(
win
callback
)
{
win
.
addEventListener
(
"
MozAfterPaint
"
function
(
)
{
if
(
win
.
document
.
readyState
=
=
"
complete
"
)
{
callback
(
)
;
}
else
{
win
.
addEventListener
(
"
load
"
callback
{
once
:
true
}
)
;
}
}
{
once
:
true
}
)
;
}
