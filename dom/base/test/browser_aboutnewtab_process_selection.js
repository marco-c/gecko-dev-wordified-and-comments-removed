const
TEST_URL
=
"
http
:
/
/
www
.
example
.
com
/
browser
/
dom
/
base
/
test
/
dummy
.
html
"
;
var
ppmm
=
Services
.
ppmm
;
add_task
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
"
set
"
:
[
[
"
dom
.
ipc
.
processPrelaunch
.
enabled
"
false
]
[
"
dom
.
ipc
.
processCount
"
10
]
[
"
dom
.
ipc
.
keepProcessesAlive
.
web
"
10
]
]
}
)
;
}
)
;
async
function
ensurePreloaded
(
gBrowser
)
{
gBrowser
.
_createPreloadBrowser
(
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
{
return
gBrowser
.
_preloadedBrowser
.
contentDocument
.
readyState
=
=
"
complete
"
;
}
)
;
}
add_task
(
async
function
(
)
{
if
(
!
gMultiProcessBrowser
)
return
;
ppmm
.
releaseCachedProcesses
(
)
;
await
ensurePreloaded
(
gBrowser
)
;
const
{
childCount
:
originalChildCount
}
=
ppmm
;
BrowserOpenTab
(
)
;
let
tab1
=
gBrowser
.
selectedTab
;
await
ensurePreloaded
(
gBrowser
)
;
is
(
ppmm
.
childCount
originalChildCount
"
Preloaded
browser
should
not
create
a
new
content
process
.
"
)
BrowserOpenTab
(
)
;
let
tab2
=
gBrowser
.
selectedTab
;
await
ensurePreloaded
(
gBrowser
)
;
is
(
ppmm
.
childCount
originalChildCount
"
Preloaded
browser
should
(
still
)
not
create
a
new
content
process
.
"
)
tab2
.
linkedBrowser
.
loadURI
(
TEST_URL
)
;
await
BrowserTestUtils
.
browserLoaded
(
tab2
.
linkedBrowser
false
TEST_URL
)
;
is
(
ppmm
.
childCount
originalChildCount
+
1
"
Navigating
away
from
the
preloaded
browser
(
parent
side
)
should
create
a
new
content
process
.
"
)
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab1
)
;
await
ContentTask
.
spawn
(
tab1
.
linkedBrowser
null
async
function
(
)
{
const
TEST_URL
=
"
http
:
/
/
www
.
example
.
com
/
browser
/
dom
/
base
/
test
/
dummy
.
html
"
;
content
.
location
.
href
=
TEST_URL
;
}
)
;
await
BrowserTestUtils
.
browserLoaded
(
tab1
.
linkedBrowser
false
TEST_URL
)
;
is
(
ppmm
.
childCount
originalChildCount
+
2
"
Navigating
away
from
the
preloaded
browser
(
child
side
)
should
create
a
new
content
process
.
"
)
await
BrowserTestUtils
.
removeTab
(
tab1
)
;
await
BrowserTestUtils
.
removeTab
(
tab2
)
;
gBrowser
.
removePreloadedBrowser
(
)
;
ppmm
.
releaseCachedProcesses
(
)
;
}
)
;
