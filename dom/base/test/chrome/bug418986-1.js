var
test
=
function
(
isContent
)
{
SimpleTest
.
waitForExplicitFinish
(
)
;
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
security
.
allow_eval_with_system_principal
"
true
]
]
}
)
;
if
(
!
isContent
)
{
let
{
ww
}
=
SpecialPowers
.
Services
;
window
.
chromeWindow
=
ww
.
activeWindow
;
}
let
checkPair
=
function
(
a
b
)
{
is
(
eval
(
a
)
eval
(
b
)
a
+
"
should
be
equal
to
"
+
b
)
;
}
;
let
prefVals
=
(
function
*
(
)
{
yield
false
;
yield
true
;
}
)
(
)
;
let
nextTest
=
function
(
)
{
let
{
value
:
prefValue
done
}
=
prefVals
.
next
(
)
;
if
(
done
)
{
SimpleTest
.
finish
(
)
;
return
;
}
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
privacy
.
resistFingerprinting
"
prefValue
]
]
}
function
(
)
{
let
sizes
=
[
[
1920
1080
]
[
3840
2160
]
[
7680
4320
]
]
;
let
screenSize
;
for
(
let
s
of
sizes
)
{
screenSize
=
s
;
if
(
window
.
outerWidth
<
=
s
[
0
]
&
&
window
.
outerHeight
<
=
s
[
1
]
)
{
break
;
}
}
let
availOffset
=
0
;
if
(
SpecialPowers
.
Services
.
appinfo
.
OS
=
=
"
WINNT
"
)
{
availOffset
=
48
;
}
else
if
(
SpecialPowers
.
Services
.
appinfo
.
OS
=
=
"
Darwin
"
)
{
availOffset
=
76
;
}
let
pairs
=
[
[
"
screenX
"
0
]
[
"
screenY
"
0
]
[
"
mozInnerScreenX
"
0
]
[
"
mozInnerScreenY
"
0
]
[
"
screen
.
pixelDepth
"
24
]
[
"
screen
.
colorDepth
"
24
]
[
"
screen
.
availWidth
"
screenSize
[
0
]
]
[
"
screen
.
availHeight
"
screenSize
[
1
]
-
availOffset
]
[
"
screen
.
left
"
0
]
[
"
screen
.
top
"
0
]
[
"
screen
.
availLeft
"
0
]
[
"
screen
.
availTop
"
0
]
[
"
screen
.
width
"
screenSize
[
0
]
]
[
"
screen
.
height
"
screenSize
[
1
]
]
[
"
devicePixelRatio
"
2
]
]
;
let
resisting
=
prefValue
&
&
isContent
;
pairs
.
map
(
function
(
[
item
onVal
]
)
{
if
(
resisting
)
{
checkPair
(
"
window
.
"
+
item
onVal
)
;
}
else
if
(
!
isContent
&
&
!
item
.
startsWith
(
"
moz
"
)
)
{
checkPair
(
"
window
.
"
+
item
"
chromeWindow
.
"
+
item
)
;
}
}
)
;
if
(
!
isContent
&
&
!
resisting
)
{
ok
(
window
.
mozInnerScreenX
>
=
chromeWindow
.
mozInnerScreenX
"
mozInnerScreenX
"
)
;
ok
(
window
.
mozInnerScreenY
>
=
chromeWindow
.
mozInnerScreenY
"
mozInnerScreenY
"
)
;
}
nextTest
(
)
;
}
)
;
}
;
nextTest
(
)
;
}
;
