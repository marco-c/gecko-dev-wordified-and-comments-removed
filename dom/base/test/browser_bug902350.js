const
PREF_ACTIVE
=
"
security
.
mixed_content
.
block_active_content
"
;
const
gHttpTestRoot
=
"
https
:
/
/
example
.
com
/
browser
/
dom
/
base
/
test
/
"
;
var
origBlockActive
;
var
gTestBrowser
=
null
;
registerCleanupFunction
(
function
(
)
{
Services
.
prefs
.
setBoolPref
(
PREF_ACTIVE
origBlockActive
)
;
}
)
;
function
MixedTestsCompleted
(
)
{
gBrowser
.
removeCurrentTab
(
)
;
window
.
focus
(
)
;
finish
(
)
;
}
function
test
(
)
{
waitForExplicitFinish
(
)
;
origBlockActive
=
Services
.
prefs
.
getBoolPref
(
PREF_ACTIVE
)
;
Services
.
prefs
.
setBoolPref
(
PREF_ACTIVE
true
)
;
var
newTab
=
gBrowser
.
addTab
(
)
;
gBrowser
.
selectedTab
=
newTab
;
gTestBrowser
=
gBrowser
.
selectedBrowser
;
newTab
.
linkedBrowser
.
stop
(
)
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
true
)
.
then
(
MixedTest1A
)
;
var
url
=
gHttpTestRoot
+
"
file_bug902350
.
html
"
;
gTestBrowser
.
loadURI
(
url
)
;
}
function
MixedTest1A
(
)
{
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
true
)
.
then
(
MixedTest1B
)
;
}
function
MixedTest1B
(
)
{
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
.
then
(
MixedTest1C
)
;
ContentTask
.
spawn
(
gTestBrowser
null
function
(
)
{
var
frame
=
content
.
document
.
getElementById
(
"
testing_frame
"
)
;
var
topTarget
=
frame
.
contentWindow
.
document
.
getElementById
(
"
topTarget
"
)
;
topTarget
.
click
(
)
;
}
)
;
let
{
gIdentityHandler
}
=
gTestBrowser
.
ownerGlobal
;
ok
(
!
gIdentityHandler
.
_identityBox
.
classList
.
contains
(
"
mixedActiveBlocked
"
)
"
Mixed
Content
Doorhanger
did
not
appear
when
trying
to
navigate
top
"
)
;
}
function
MixedTest1C
(
)
{
ContentTask
.
spawn
(
gTestBrowser
null
function
(
)
{
Assert
.
equal
(
content
.
location
.
href
"
http
:
/
/
example
.
com
/
"
"
Navigating
to
insecure
domain
through
target
=
'
_top
'
failed
.
"
)
}
)
.
then
(
MixedTestsCompleted
)
;
}
