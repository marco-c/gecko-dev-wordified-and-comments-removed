#
ifndef
nsContentListDeclarations_h
#
define
nsContentListDeclarations_h
#
include
<
stdint
.
h
>
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsStringFwd
.
h
"
class
nsContentList
;
class
nsAtom
;
class
nsIContent
;
class
nsINode
;
namespace
mozilla
:
:
dom
{
class
Element
;
}
#
define
kNameSpaceID_Wildcard
INT32_MIN
using
nsContentListMatchFunc
=
bool
(
*
)
(
mozilla
:
:
dom
:
:
Element
*
aElement
int32_t
aNamespaceID
nsAtom
*
aAtom
void
*
aData
)
;
using
nsContentListDestroyFunc
=
void
(
*
)
(
void
*
aData
)
;
using
nsFuncStringContentListDataAllocator
=
void
*
(
*
)
(
nsINode
*
aRootNode
const
nsString
*
aString
)
;
already_AddRefed
<
nsContentList
>
NS_GetContentList
(
nsINode
*
aRootNode
int32_t
aMatchNameSpaceId
const
nsAString
&
aTagname
)
;
template
<
class
ListType
>
already_AddRefed
<
nsContentList
>
GetFuncStringContentList
(
nsINode
*
aRootNode
nsContentListMatchFunc
aFunc
nsContentListDestroyFunc
aDestroyFunc
nsFuncStringContentListDataAllocator
aDataAllocator
const
nsAString
&
aString
)
;
#
endif
