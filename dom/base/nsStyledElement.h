#
ifndef
__NS_STYLEDELEMENT_H_
#
define
__NS_STYLEDELEMENT_H_
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
dom
/
Element
.
h
"
namespace
mozilla
{
class
DeclarationBlock
;
}
#
define
NS_STYLED_ELEMENT_IID
\
{
0xacbd9ea6
0x15aa
0x4f37
\
{
0x8c
0xe0
0x35
0x1e
0xd7
0x21
0xca
0xe9
}
}
typedef
mozilla
:
:
dom
:
:
Element
nsStyledElementBase
;
class
nsStyledElement
:
public
nsStyledElementBase
{
protected
:
inline
explicit
nsStyledElement
(
already_AddRefed
<
mozilla
:
:
dom
:
:
NodeInfo
>
&
aNodeInfo
)
:
nsStyledElementBase
(
aNodeInfo
)
{
}
public
:
NS_IMETHOD
QueryInterface
(
REFNSIID
aIID
void
*
*
aInstancePtr
)
override
;
virtual
nsresult
SetInlineStyleDeclaration
(
mozilla
:
:
DeclarationBlock
*
aDeclaration
const
nsAString
*
aSerialized
bool
aNotify
)
override
;
nsICSSDeclaration
*
Style
(
)
;
NS_DECLARE_STATIC_IID_ACCESSOR
(
NS_STYLED_ELEMENT_IID
)
protected
:
nsICSSDeclaration
*
GetExistingStyle
(
)
;
void
ParseStyleAttribute
(
const
nsAString
&
aValue
nsAttrValue
&
aResult
bool
aForceInDataDoc
)
;
virtual
bool
ParseAttribute
(
int32_t
aNamespaceID
nsAtom
*
aAttribute
const
nsAString
&
aValue
nsAttrValue
&
aResult
)
override
;
friend
class
mozilla
:
:
dom
:
:
Element
;
nsresult
ReparseStyleAttribute
(
bool
aForceInDataDoc
bool
aForceIfAlreadyParsed
)
;
virtual
void
NodeInfoChanged
(
nsIDocument
*
aOldDoc
)
override
;
virtual
nsresult
BeforeSetAttr
(
int32_t
aNamespaceID
nsAtom
*
aName
const
nsAttrValueOrString
*
aValue
bool
aNotify
)
override
;
}
;
NS_DEFINE_STATIC_IID_ACCESSOR
(
nsStyledElement
NS_STYLED_ELEMENT_IID
)
#
endif
