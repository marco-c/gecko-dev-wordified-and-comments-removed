#
include
"
mozilla
/
ArrayUtils
.
h
"
#
include
"
jsapi
.
h
"
#
include
"
jsfriendapi
.
h
"
#
include
"
WrapperFactory
.
h
"
#
include
"
AccessCheck
.
h
"
#
include
"
XrayWrapper
.
h
"
#
include
"
xpcpublic
.
h
"
#
include
"
xpcprivate
.
h
"
#
include
"
xpc_make_class
.
h
"
#
include
"
XPCWrapper
.
h
"
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
#
include
"
mozilla
/
dom
/
RegisterBindings
.
h
"
#
include
"
nscore
.
h
"
#
include
"
nsDOMClassInfo
.
h
"
#
include
"
nsIDOMClassInfo
.
h
"
#
include
"
nsCRT
.
h
"
#
include
"
nsCRTGlue
.
h
"
#
include
"
nsICategoryManager
.
h
"
#
include
"
nsIComponentRegistrar
.
h
"
#
include
"
nsXPCOM
.
h
"
#
include
"
nsISimpleEnumerator
.
h
"
#
include
"
nsISupportsPrimitives
.
h
"
#
include
"
nsIXPConnect
.
h
"
#
include
"
xptcall
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsGlobalWindow
.
h
"
#
include
"
nsIContent
.
h
"
#
include
"
nsIDocument
.
h
"
#
include
"
nsIDOMDocument
.
h
"
#
include
"
nsIDOMEvent
.
h
"
#
include
"
nsIDOMEventListener
.
h
"
#
include
"
nsContentUtils
.
h
"
#
include
"
nsIDOMGlobalPropertyInitializer
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Telemetry
.
h
"
#
include
"
nsIDOMWindow
.
h
"
#
include
"
nsPIDOMWindow
.
h
"
#
include
"
nsError
.
h
"
#
include
"
nsIDOMEventTarget
.
h
"
#
include
"
nsMemory
.
h
"
#
include
"
nsIEventListenerService
.
h
"
#
include
"
mozilla
/
dom
/
TouchEvent
.
h
"
#
include
"
nsWrapperCacheInlines
.
h
"
#
include
"
mozilla
/
dom
/
HTMLCollectionBinding
.
h
"
#
include
"
nsDebug
.
h
"
#
include
"
mozilla
/
dom
/
BindingUtils
.
h
"
#
include
"
mozilla
/
Likely
.
h
"
#
include
"
nsIInterfaceInfoManager
.
h
"
#
ifdef
MOZ_TIME_MANAGER
#
include
"
TimeManager
.
h
"
#
endif
using
namespace
mozilla
;
using
namespace
mozilla
:
:
dom
;
bool
nsDOMClassInfo
:
:
sIsInitialized
=
false
;
nsresult
nsDOMClassInfo
:
:
Init
(
)
{
static_assert
(
sizeof
(
uintptr_t
)
=
=
sizeof
(
void
*
)
"
BAD
!
You
'
ll
need
to
adjust
the
size
of
uintptr_t
to
the
"
"
size
of
a
pointer
on
your
platform
.
"
)
;
NS_ENSURE_TRUE
(
!
sIsInitialized
NS_ERROR_ALREADY_INITIALIZED
)
;
sIsInitialized
=
true
;
return
NS_OK
;
}
void
nsDOMClassInfo
:
:
ShutDown
(
)
{
sIsInitialized
=
false
;
}
