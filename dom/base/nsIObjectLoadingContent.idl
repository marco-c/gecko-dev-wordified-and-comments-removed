#
include
"
nsISupports
.
idl
"
interface
nsIChannel
;
interface
nsIRequest
;
interface
nsIFrame
;
interface
nsIObjectFrame
;
interface
nsIPluginTag
;
interface
nsIURI
;
webidl
BrowsingContext
;
%
{
C
+
+
class
nsNPAPIPluginInstance
;
%
}
[
ptr
]
native
nsNPAPIPluginInstancePtr
(
nsNPAPIPluginInstance
)
;
[
scriptable
builtinclass
uuid
(
2eb3195e
-
3eea
-
4083
-
bb1d
-
d2d70fa35ccb
)
]
interface
nsIObjectLoadingContent
:
nsISupports
{
const
unsigned
long
TYPE_LOADING
=
0
;
const
unsigned
long
TYPE_IMAGE
=
1
;
const
unsigned
long
TYPE_PLUGIN
=
2
;
const
unsigned
long
TYPE_FAKE_PLUGIN
=
3
;
const
unsigned
long
TYPE_DOCUMENT
=
4
;
const
unsigned
long
TYPE_NULL
=
5
;
const
unsigned
long
PLUGIN_ACTIVE
=
0xFF
;
const
unsigned
long
PLUGIN_UNSUPPORTED
=
0
;
const
unsigned
long
PLUGIN_ALTERNATE
=
1
;
const
unsigned
long
PLUGIN_DISABLED
=
2
;
const
unsigned
long
PLUGIN_BLOCKLISTED
=
3
;
const
unsigned
long
PLUGIN_OUTDATED
=
4
;
const
unsigned
long
PLUGIN_CRASHED
=
5
;
const
unsigned
long
PLUGIN_SUPPRESSED
=
6
;
const
unsigned
long
PLUGIN_CLICK_TO_PLAY
=
8
;
const
unsigned
long
PLUGIN_VULNERABLE_UPDATABLE
=
9
;
const
unsigned
long
PLUGIN_VULNERABLE_NO_UPDATE
=
10
;
const
unsigned
long
PLUGIN_CLICK_TO_PLAY_QUIET
=
11
;
const
unsigned
long
PLUGIN_PERMISSION_PROMPT_ACTION_QUIET
=
8
;
readonly
attribute
ACString
actualType
;
readonly
attribute
unsigned
long
displayedType
;
unsigned
long
getContentTypeForMIMEType
(
in
AUTF8String
aMimeType
)
;
[
notxpcom
nostdcall
]
readonly
attribute
nsNPAPIPluginInstancePtr
pluginInstance
;
[
noscript
]
void
hasNewFrame
(
in
nsIObjectFrame
aFrame
)
;
[
noscript
]
nsIFrame
getPrintFrame
(
)
;
[
noscript
]
void
pluginDestroyed
(
)
;
[
noscript
]
void
pluginCrashed
(
in
nsIPluginTag
pluginTag
in
AString
pluginDumpID
in
boolean
submittedCrashReport
)
;
void
reload
(
in
boolean
aClearActivation
)
;
readonly
attribute
boolean
activated
;
[
noscript
]
void
stopPluginInstance
(
)
;
[
noscript
]
void
syncStartPluginInstance
(
)
;
[
noscript
]
void
asyncStartPluginInstance
(
)
;
[
noscript
]
void
initializeFromChannel
(
in
nsIRequest
request
)
;
readonly
attribute
nsIURI
srcURI
;
void
skipFakePlugins
(
)
;
[
noscript
]
BrowsingContext
upgradeLoadToDocument
(
in
nsIChannel
channel
)
;
}
;
