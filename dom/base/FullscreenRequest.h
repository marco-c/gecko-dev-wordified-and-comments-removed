#
ifndef
mozilla_FullscreenRequest_h
#
define
mozilla_FullscreenRequest_h
#
include
"
mozilla
/
LinkedList
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
dom
/
Element
.
h
"
#
include
"
nsIDocument
.
h
"
namespace
mozilla
{
struct
FullscreenRequest
:
public
LinkedListElement
<
FullscreenRequest
>
{
static
UniquePtr
<
FullscreenRequest
>
Create
(
Element
*
aElement
dom
:
:
CallerType
aCallerType
)
{
return
WrapUnique
(
new
FullscreenRequest
(
aElement
aCallerType
true
)
)
;
}
static
UniquePtr
<
FullscreenRequest
>
CreateForRemote
(
Element
*
aElement
)
{
return
WrapUnique
(
new
FullscreenRequest
(
aElement
dom
:
:
CallerType
:
:
NonSystem
false
)
)
;
}
FullscreenRequest
(
const
FullscreenRequest
&
)
=
delete
;
~
FullscreenRequest
(
)
{
MOZ_COUNT_DTOR
(
FullscreenRequest
)
;
}
dom
:
:
Element
*
Element
(
)
const
{
return
mElement
;
}
nsIDocument
*
Document
(
)
const
{
return
mDocument
;
}
private
:
RefPtr
<
dom
:
:
Element
>
mElement
;
RefPtr
<
nsIDocument
>
mDocument
;
public
:
const
dom
:
:
CallerType
mCallerType
;
const
bool
mShouldNotifyNewOrigin
;
private
:
FullscreenRequest
(
dom
:
:
Element
*
aElement
dom
:
:
CallerType
aCallerType
bool
aShouldNotifyNewOrigin
)
:
mElement
(
aElement
)
mDocument
(
aElement
-
>
OwnerDoc
(
)
)
mCallerType
(
aCallerType
)
mShouldNotifyNewOrigin
(
aShouldNotifyNewOrigin
)
{
MOZ_COUNT_CTOR
(
FullscreenRequest
)
;
}
}
;
}
#
endif
