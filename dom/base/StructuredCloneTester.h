#
ifndef
mozilla_dom_StructuredCloneTester_h
#
define
mozilla_dom_StructuredCloneTester_h
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsWrapperCache
.
h
"
struct
JSStructuredCloneReader
;
struct
JSStructuredCloneWriter
;
class
nsIGlobalObject
;
namespace
mozilla
{
class
ErrorResult
;
namespace
dom
{
class
GlobalObject
;
class
StructuredCloneTester
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
StructuredCloneTester
)
static
already_AddRefed
<
StructuredCloneTester
>
Constructor
(
const
GlobalObject
&
aGlobal
const
bool
aSerializable
const
bool
aDeserializable
)
;
bool
Serializable
(
)
const
;
bool
Deserializable
(
)
const
;
static
already_AddRefed
<
StructuredCloneTester
>
ReadStructuredClone
(
JSContext
*
aCx
nsIGlobalObject
*
aGlobal
JSStructuredCloneReader
*
aReader
)
;
bool
WriteStructuredClone
(
JSContext
*
aCx
JSStructuredCloneWriter
*
aWriter
)
const
;
nsISupports
*
GetParentObject
(
)
const
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
private
:
StructuredCloneTester
(
nsISupports
*
aParent
const
bool
aSerializable
const
bool
aDeserializable
)
;
~
StructuredCloneTester
(
)
=
default
;
nsCOMPtr
<
nsISupports
>
mParent
;
bool
mSerializable
;
bool
mDeserializable
;
}
;
}
}
#
endif
