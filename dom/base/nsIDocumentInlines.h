#
ifndef
nsIDocumentInlines_h
#
define
nsIDocumentInlines_h
#
include
"
nsIDocument
.
h
"
#
include
"
mozilla
/
dom
/
HTMLBodyElement
.
h
"
#
include
"
nsStyleSheetService
.
h
"
inline
mozilla
:
:
dom
:
:
HTMLBodyElement
*
nsIDocument
:
:
GetBodyElement
(
)
{
return
static_cast
<
mozilla
:
:
dom
:
:
HTMLBodyElement
*
>
(
GetHtmlChildElement
(
nsGkAtoms
:
:
body
)
)
;
}
template
<
typename
T
>
size_t
nsIDocument
:
:
FindDocStyleSheetInsertionPoint
(
const
nsTArray
<
RefPtr
<
T
>
>
&
aDocSheets
T
*
aSheet
)
{
nsStyleSheetService
*
sheetService
=
nsStyleSheetService
:
:
GetInstance
(
)
;
int32_t
newDocIndex
=
GetIndexOfStyleSheet
(
aSheet
)
;
int32_t
count
=
aDocSheets
.
Length
(
)
;
int32_t
index
;
for
(
index
=
0
;
index
<
count
;
index
+
+
)
{
T
*
sheet
=
aDocSheets
[
index
]
;
int32_t
sheetDocIndex
=
GetIndexOfStyleSheet
(
sheet
)
;
if
(
sheetDocIndex
>
newDocIndex
)
break
;
mozilla
:
:
StyleSheetHandle
sheetHandle
=
sheet
;
if
(
sheetDocIndex
<
0
)
{
if
(
sheetService
)
{
auto
&
authorSheets
=
*
sheetService
-
>
AuthorStyleSheets
(
)
;
if
(
authorSheets
.
IndexOf
(
sheetHandle
)
!
=
authorSheets
.
NoIndex
)
{
break
;
}
}
if
(
sheetHandle
=
=
GetFirstAdditionalAuthorSheet
(
)
)
{
break
;
}
}
}
return
size_t
(
index
)
;
}
#
endif
