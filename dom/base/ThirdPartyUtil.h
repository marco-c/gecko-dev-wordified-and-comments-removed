#
ifndef
ThirdPartyUtil_h__
#
define
ThirdPartyUtil_h__
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsString
.
h
"
#
include
"
mozIThirdPartyUtil
.
h
"
#
include
"
nsEffectiveTLDService
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
class
nsIURI
;
class
nsPIDOMWindowOuter
;
class
ThirdPartyUtil
final
:
public
mozIThirdPartyUtil
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_MOZITHIRDPARTYUTIL
nsresult
Init
(
)
;
static
void
Startup
(
)
;
static
ThirdPartyUtil
*
GetInstance
(
)
;
private
:
~
ThirdPartyUtil
(
)
;
bool
IsThirdPartyInternal
(
const
nsCString
&
aFirstDomain
const
nsCString
&
aSecondDomain
)
{
return
aFirstDomain
!
=
aSecondDomain
;
}
nsresult
IsThirdPartyInternal
(
const
nsCString
&
aFirstDomain
nsIURI
*
aSecondURI
bool
*
aResult
)
;
nsCString
GetBaseDomainFromWindow
(
nsPIDOMWindowOuter
*
aWindow
)
;
RefPtr
<
nsEffectiveTLDService
>
mTLDService
;
}
;
#
endif
