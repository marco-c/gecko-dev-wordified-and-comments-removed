#
ifndef
mozilla_dom_BindContext_h__
#
define
mozilla_dom_BindContext_h__
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsXBLBinding
.
h
"
#
include
"
mozilla
/
dom
/
Element
.
h
"
#
include
"
mozilla
/
dom
/
ShadowRoot
.
h
"
namespace
mozilla
{
namespace
dom
{
struct
MOZ_STACK_CLASS
BindContext
final
{
bool
SubtreeRootChanges
(
)
const
{
return
mSubtreeRootChanges
;
}
Element
*
GetBindingParent
(
)
const
{
return
mBindingParent
;
}
explicit
BindContext
(
nsINode
&
aParentNode
)
:
mSubtreeRootChanges
(
true
)
mBindingParent
(
aParentNode
.
IsContent
(
)
?
static_cast
<
Element
*
>
(
aParentNode
.
AsContent
(
)
-
>
GetBindingParent
(
)
)
:
nullptr
)
{
}
explicit
BindContext
(
ShadowRoot
&
aShadowRoot
)
:
mSubtreeRootChanges
(
false
)
mBindingParent
(
aShadowRoot
.
Host
(
)
)
{
}
enum
ForNativeAnonymous
{
ForNativeAnonymous
}
;
BindContext
(
Element
&
aParentElement
enum
ForNativeAnonymous
)
:
mSubtreeRootChanges
(
true
)
mBindingParent
(
&
aParentElement
)
{
}
BindContext
(
nsXBLBinding
&
aBinding
Element
&
aParentElement
)
:
mSubtreeRootChanges
(
true
)
mBindingParent
(
aBinding
.
GetBoundElement
(
)
)
{
}
private
:
const
bool
mSubtreeRootChanges
;
Element
*
const
mBindingParent
;
}
;
}
}
#
endif
