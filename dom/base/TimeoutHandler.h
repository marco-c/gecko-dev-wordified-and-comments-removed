#
ifndef
mozilla_dom_timeout_handler_h
#
define
mozilla_dom_timeout_handler_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsITimeoutHandler
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
namespace
mozilla
{
namespace
dom
{
class
TimeoutHandler
:
public
nsITimeoutHandler
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS
(
TimeoutHandler
)
MOZ_CAN_RUN_SCRIPT
virtual
void
Call
(
)
override
;
virtual
void
GetLocation
(
const
char
*
*
aFileName
uint32_t
*
aLineNo
uint32_t
*
aColumn
)
override
;
virtual
void
MarkForCC
(
)
override
{
}
protected
:
TimeoutHandler
(
)
:
mFileName
(
"
"
)
mLineNo
(
0
)
mColumn
(
0
)
{
}
explicit
TimeoutHandler
(
JSContext
*
aCx
)
;
virtual
~
TimeoutHandler
(
)
{
}
private
:
TimeoutHandler
(
const
TimeoutHandler
&
)
=
delete
;
TimeoutHandler
&
operator
=
(
const
TimeoutHandler
&
)
=
delete
;
TimeoutHandler
&
operator
=
(
const
TimeoutHandler
&
&
)
=
delete
;
nsCString
mFileName
;
uint32_t
mLineNo
;
uint32_t
mColumn
;
}
;
}
}
#
endif
