#
ifndef
nsChildContentList_h__
#
define
nsChildContentList_h__
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsINodeList
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
class
nsIContent
;
class
nsINode
;
class
nsAttrChildContentList
:
public
nsINodeList
{
public
:
explicit
nsAttrChildContentList
(
nsINode
*
aNode
)
:
mNode
(
aNode
)
{
}
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SKIPPABLE_WRAPPERCACHE_CLASS
(
nsAttrChildContentList
)
virtual
JSObject
*
WrapObject
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
virtual
int32_t
IndexOf
(
nsIContent
*
aContent
)
override
;
virtual
nsIContent
*
Item
(
uint32_t
aIndex
)
override
;
uint32_t
Length
(
)
override
;
nsINode
*
GetParentObject
(
)
final
{
return
mNode
;
}
virtual
void
InvalidateCacheIfAvailable
(
)
{
}
protected
:
virtual
~
nsAttrChildContentList
(
)
=
default
;
private
:
RefPtr
<
nsINode
>
mNode
;
}
;
class
nsParentNodeChildContentList
final
:
public
nsAttrChildContentList
{
public
:
explicit
nsParentNodeChildContentList
(
nsINode
*
aNode
)
:
nsAttrChildContentList
(
aNode
)
mIsCacheValid
(
false
)
{
ValidateCache
(
)
;
}
virtual
int32_t
IndexOf
(
nsIContent
*
aContent
)
override
;
virtual
nsIContent
*
Item
(
uint32_t
aIndex
)
override
;
uint32_t
Length
(
)
override
;
void
InvalidateCacheIfAvailable
(
)
final
{
InvalidateCache
(
)
;
}
void
InvalidateCache
(
)
{
mIsCacheValid
=
false
;
mCachedChildArray
.
Clear
(
)
;
}
private
:
~
nsParentNodeChildContentList
(
)
=
default
;
bool
ValidateCache
(
)
;
bool
mIsCacheValid
;
AutoTArray
<
nsIContent
*
8
>
mCachedChildArray
;
}
;
#
endif
