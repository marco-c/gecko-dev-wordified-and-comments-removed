#
ifndef
nsHistory_h___
#
define
nsHistory_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
mozilla
/
dom
/
HistoryBinding
.
h
"
#
include
"
mozilla
/
dom
/
ChildSHistory
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsIWeakReferenceUtils
.
h
"
#
include
"
nsPIDOMWindow
.
h
"
#
include
"
nsStringFwd
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsIDocShell
;
class
nsISHistory
;
class
nsIWeakReference
;
class
nsPIDOMWindowInner
;
class
nsHistory
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
nsHistory
)
public
:
explicit
nsHistory
(
nsPIDOMWindowInner
*
aInnerWindow
)
;
nsPIDOMWindowInner
*
GetParentObject
(
)
const
;
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
uint32_t
GetLength
(
mozilla
:
:
ErrorResult
&
aRv
)
const
;
mozilla
:
:
dom
:
:
ScrollRestoration
GetScrollRestoration
(
mozilla
:
:
ErrorResult
&
aRv
)
;
void
SetScrollRestoration
(
mozilla
:
:
dom
:
:
ScrollRestoration
aMode
mozilla
:
:
ErrorResult
&
aRv
)
;
void
GetState
(
JSContext
*
aCx
JS
:
:
MutableHandle
<
JS
:
:
Value
>
aResult
mozilla
:
:
ErrorResult
&
aRv
)
const
;
void
Go
(
int32_t
aDelta
mozilla
:
:
dom
:
:
CallerType
aCallerType
mozilla
:
:
ErrorResult
&
aRv
)
;
void
Back
(
mozilla
:
:
dom
:
:
CallerType
aCallerType
mozilla
:
:
ErrorResult
&
aRv
)
;
void
Forward
(
mozilla
:
:
dom
:
:
CallerType
aCallerType
mozilla
:
:
ErrorResult
&
aRv
)
;
void
PushState
(
JSContext
*
aCx
JS
:
:
Handle
<
JS
:
:
Value
>
aData
const
nsAString
&
aTitle
const
nsAString
&
aUrl
mozilla
:
:
dom
:
:
CallerType
aCallerType
mozilla
:
:
ErrorResult
&
aRv
)
;
void
ReplaceState
(
JSContext
*
aCx
JS
:
:
Handle
<
JS
:
:
Value
>
aData
const
nsAString
&
aTitle
const
nsAString
&
aUrl
mozilla
:
:
dom
:
:
CallerType
aCallerType
mozilla
:
:
ErrorResult
&
aRv
)
;
protected
:
virtual
~
nsHistory
(
)
;
void
PushOrReplaceState
(
JSContext
*
aCx
JS
:
:
Handle
<
JS
:
:
Value
>
aData
const
nsAString
&
aTitle
const
nsAString
&
aUrl
mozilla
:
:
dom
:
:
CallerType
aCallerType
mozilla
:
:
ErrorResult
&
aRv
bool
aReplace
)
;
already_AddRefed
<
mozilla
:
:
dom
:
:
ChildSHistory
>
GetSessionHistory
(
)
const
;
nsWeakPtr
mInnerWindow
;
}
;
#
endif
