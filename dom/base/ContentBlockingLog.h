#
ifndef
mozilla_dom_ContentBlockingLog_h
#
define
mozilla_dom_ContentBlockingLog_h
#
include
"
mozilla
/
Pair
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsClassHashtable
.
h
"
#
include
"
nsHashKeys
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
dom
{
class
ContentBlockingLog
final
{
typedef
nsTArray
<
mozilla
:
:
Pair
<
uint32_t
bool
>
>
OriginLog
;
public
:
ContentBlockingLog
(
)
=
default
;
~
ContentBlockingLog
(
)
=
default
;
void
RecordLog
(
const
nsAString
&
aOrigin
uint32_t
aType
bool
aBlocked
)
{
if
(
aOrigin
.
IsVoid
(
)
)
{
return
;
}
auto
entry
=
mLog
.
LookupForAdd
(
aOrigin
)
;
if
(
entry
)
{
entry
.
Data
(
)
-
>
AppendElement
(
mozilla
:
:
MakePair
(
aType
aBlocked
)
)
;
}
else
{
entry
.
OrInsert
(
[
=
]
{
auto
log
(
MakeUnique
<
OriginLog
>
(
)
)
;
log
-
>
AppendElement
(
mozilla
:
:
MakePair
(
aType
aBlocked
)
)
;
return
log
.
release
(
)
;
}
)
;
}
}
private
:
nsClassHashtable
<
nsStringHashKey
OriginLog
>
mLog
;
}
;
}
}
#
endif
