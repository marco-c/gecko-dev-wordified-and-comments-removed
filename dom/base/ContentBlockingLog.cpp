#
include
"
ContentBlockingLog
.
h
"
#
include
"
mozilla
/
RandomNum
.
h
"
#
include
"
mozilla
/
Telemetry
.
h
"
#
include
"
mozilla
/
XorShift128PlusRNG
.
h
"
namespace
mozilla
{
namespace
dom
{
static
constexpr
double
kRatioReportUser
=
0
.
01
;
static
constexpr
double
kRatioReportDocument
=
0
.
0014
;
static
bool
IsReportingPerUserEnabled
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
static
Maybe
<
bool
>
sIsReportingEnabled
;
if
(
sIsReportingEnabled
.
isSome
(
)
)
{
return
sIsReportingEnabled
.
value
(
)
;
}
nsAutoCString
cachedClientId
;
if
(
NS_FAILED
(
Preferences
:
:
GetCString
(
"
toolkit
.
telemetry
.
cachedClientID
"
cachedClientId
)
)
)
{
return
false
;
}
nsID
clientId
;
if
(
!
clientId
.
Parse
(
cachedClientId
.
get
(
)
)
)
{
return
false
;
}
static_assert
(
sizeof
(
nsID
)
=
=
16
"
nsID
is
128
-
bit
"
)
;
uint64_t
*
init
=
reinterpret_cast
<
uint64_t
*
>
(
&
clientId
)
;
non_crypto
:
:
XorShift128PlusRNG
rng
(
init
[
0
]
init
[
1
]
)
;
sIsReportingEnabled
.
emplace
(
rng
.
nextDouble
(
)
<
=
kRatioReportUser
)
;
return
sIsReportingEnabled
.
value
(
)
;
}
static
bool
IsReportingPerDocumentEnabled
(
)
{
constexpr
double
boundary
=
kRatioReportDocument
*
std
:
:
numeric_limits
<
uint64_t
>
:
:
max
(
)
;
Maybe
<
uint64_t
>
randomNum
=
RandomUint64
(
)
;
return
randomNum
.
isSome
(
)
&
&
randomNum
.
value
(
)
<
=
boundary
;
}
static
bool
IsReportingEnabled
(
)
{
if
(
StaticPrefs
:
:
telemetry_origin_telemetry_test_mode_enabled
(
)
)
{
return
true
;
}
else
if
(
!
StaticPrefs
:
:
privacy_trackingprotection_origin_telemetry_enabled
(
)
)
{
return
false
;
}
return
IsReportingPerUserEnabled
(
)
&
&
IsReportingPerDocumentEnabled
(
)
;
}
void
ContentBlockingLog
:
:
ReportLog
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
if
(
!
IsReportingEnabled
(
)
)
{
return
;
}
for
(
const
auto
&
originEntry
:
mLog
)
{
if
(
!
originEntry
.
mData
)
{
continue
;
}
for
(
const
auto
&
logEntry
:
Reversed
(
originEntry
.
mData
-
>
mLogs
)
)
{
if
(
logEntry
.
mType
!
=
nsIWebProgressListener
:
:
STATE_COOKIES_BLOCKED_TRACKER
)
{
continue
;
}
bool
isBlocked
=
logEntry
.
mBlocked
;
auto
metricId
=
isBlocked
?
Telemetry
:
:
OriginMetricID
:
:
ContentBlocking_Blocked
:
Telemetry
:
:
OriginMetricID
:
:
ContentBlocking_Exempt
;
if
(
StaticPrefs
:
:
telemetry_origin_telemetry_test_mode_enabled
(
)
)
{
metricId
=
isBlocked
?
Telemetry
:
:
OriginMetricID
:
:
ContentBlocking_Blocked_TestOnly
:
Telemetry
:
:
OriginMetricID
:
:
ContentBlocking_Exempt_TestOnly
;
}
Telemetry
:
:
RecordOrigin
(
metricId
originEntry
.
mOrigin
)
;
break
;
}
}
}
}
}
