#
include
"
mozilla
/
dom
/
AnimationFrameProvider
.
h
"
#
include
"
nsThreadUtils
.
h
"
namespace
mozilla
:
:
dom
{
FrameRequest
:
:
FrameRequest
(
FrameRequestCallback
&
aCallback
uint32_t
aHandle
)
:
mCallback
(
&
aCallback
)
mHandle
(
aHandle
)
{
LogFrameRequestCallback
:
:
LogDispatch
(
mCallback
)
;
}
FrameRequest
:
:
~
FrameRequest
(
)
=
default
;
nsresult
FrameRequestManager
:
:
Schedule
(
FrameRequestCallback
&
aCallback
uint32_t
*
aHandle
)
{
if
(
mCallbackCounter
=
=
UINT32_MAX
)
{
return
NS_ERROR_NOT_AVAILABLE
;
}
int32_t
newHandle
=
+
+
mCallbackCounter
;
mCallbacks
.
AppendElement
(
FrameRequest
(
aCallback
newHandle
)
)
;
*
aHandle
=
newHandle
;
return
NS_OK
;
}
bool
FrameRequestManager
:
:
Cancel
(
uint32_t
aHandle
)
{
if
(
mCallbacks
.
RemoveElementSorted
(
aHandle
)
)
{
return
true
;
}
Unused
<
<
mCanceledCallbacks
.
put
(
aHandle
)
;
return
false
;
}
void
FrameRequestManager
:
:
Unlink
(
)
{
mCallbacks
.
Clear
(
)
;
}
void
FrameRequestManager
:
:
Traverse
(
nsCycleCollectionTraversalCallback
&
aCB
)
{
for
(
auto
&
i
:
mCallbacks
)
{
NS_CYCLE_COLLECTION_NOTE_EDGE_NAME
(
aCB
"
FrameRequestManager
:
:
mCallbacks
[
i
]
"
)
;
aCB
.
NoteXPCOMChild
(
i
.
mCallback
)
;
}
}
}
