#
ifndef
mozilla_dom_GridLine_h
#
define
mozilla_dom_GridLine_h
#
include
"
mozilla
/
dom
/
GridBinding
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsWrapperCache
.
h
"
namespace
mozilla
{
namespace
dom
{
class
GridLines
;
class
GridLine
:
public
nsISupports
public
nsWrapperCache
{
public
:
explicit
GridLine
(
GridLines
*
aParent
)
;
protected
:
virtual
~
GridLine
(
)
;
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
GridLine
)
void
GetNames
(
nsTArray
<
nsCString
>
&
aNames
)
const
;
void
GetNames
(
nsTArray
<
nsString
>
&
aNames
)
const
;
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
GridLines
*
GetParentObject
(
)
{
return
mParent
;
}
double
Start
(
)
const
;
double
Breadth
(
)
const
;
GridDeclaration
Type
(
)
const
;
uint32_t
Number
(
)
const
;
int32_t
NegativeNumber
(
)
const
;
void
SetLineValues
(
const
nsTArray
<
nsCString
>
&
aNames
double
aStart
double
aBreadth
uint32_t
aNumber
int32_t
aNegativeNumber
GridDeclaration
aType
)
;
void
SetLineNames
(
const
nsTArray
<
nsCString
>
&
aNames
)
;
protected
:
RefPtr
<
GridLines
>
mParent
;
nsTArray
<
nsCString
>
mNames
;
double
mStart
;
double
mBreadth
;
GridDeclaration
mType
;
uint32_t
mNumber
;
int32_t
mNegativeNumber
;
}
;
}
}
#
endif
