#
include
"
GridTrack
.
h
"
#
include
"
GridTracks
.
h
"
#
include
"
mozilla
/
dom
/
GridBinding
.
h
"
namespace
mozilla
{
namespace
dom
{
NS_IMPL_CYCLE_COLLECTION_WRAPPERCACHE
(
GridTrack
mParent
)
NS_IMPL_CYCLE_COLLECTING_ADDREF
(
GridTrack
)
NS_IMPL_CYCLE_COLLECTING_RELEASE
(
GridTrack
)
NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION
(
GridTrack
)
NS_WRAPPERCACHE_INTERFACE_MAP_ENTRY
NS_INTERFACE_MAP_ENTRY
(
nsISupports
)
NS_INTERFACE_MAP_END
GridTrack
:
:
GridTrack
(
GridTracks
*
aParent
)
:
mParent
(
aParent
)
mStart
(
0
.
0
)
mBreadth
(
0
.
0
)
mType
(
GridTrackType
:
:
Implicit
)
mState
(
GridTrackState
:
:
Static
)
{
MOZ_ASSERT
(
aParent
"
Should
never
be
instantiated
with
a
null
GridTracks
"
)
;
}
GridTrack
:
:
~
GridTrack
(
)
{
}
JSObject
*
GridTrack
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
GridTrackBinding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
double
GridTrack
:
:
Start
(
)
const
{
return
mStart
;
}
double
GridTrack
:
:
Breadth
(
)
const
{
return
mBreadth
;
}
GridTrackType
GridTrack
:
:
Type
(
)
const
{
return
mType
;
}
GridTrackState
GridTrack
:
:
State
(
)
const
{
return
mState
;
}
void
GridTrack
:
:
SetTrackValues
(
double
aStart
double
aBreadth
GridTrackType
aType
GridTrackState
aState
)
{
mStart
=
aStart
;
mBreadth
=
aBreadth
;
mType
=
aType
;
mState
=
aState
;
}
}
}
