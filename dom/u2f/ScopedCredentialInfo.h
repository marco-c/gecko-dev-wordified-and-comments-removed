#
ifndef
mozilla_dom_ScopedCredentialInfo_h
#
define
mozilla_dom_ScopedCredentialInfo_h
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
mozilla
/
ErrorResult
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsWrapperCache
.
h
"
namespace
mozilla
{
namespace
dom
{
class
CryptoKey
;
class
ScopedCredential
;
class
WebAuthnAttestation
;
}
}
namespace
mozilla
{
namespace
dom
{
class
ScopedCredentialInfo
final
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
ScopedCredentialInfo
)
public
:
ScopedCredentialInfo
(
WebAuthentication
*
aParent
)
;
protected
:
~
ScopedCredentialInfo
(
)
;
public
:
WebAuthentication
*
GetParentObject
(
)
const
{
return
mParent
;
}
virtual
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
already_AddRefed
<
ScopedCredential
>
Credential
(
)
const
;
already_AddRefed
<
WebAuthnAttestation
>
Attestation
(
)
const
;
void
SetCredential
(
RefPtr
<
ScopedCredential
>
)
;
void
SetAttestation
(
RefPtr
<
WebAuthnAttestation
>
)
;
private
:
RefPtr
<
WebAuthentication
>
mParent
;
RefPtr
<
WebAuthnAttestation
>
mAttestation
;
RefPtr
<
ScopedCredential
>
mCredential
;
}
;
}
}
#
endif
