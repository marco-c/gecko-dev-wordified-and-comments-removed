#
include
"
USBToken
.
h
"
namespace
mozilla
{
namespace
dom
{
USBToken
:
:
USBToken
(
)
:
mInitialized
(
false
)
{
}
USBToken
:
:
~
USBToken
(
)
{
}
nsresult
USBToken
:
:
Init
(
)
{
MOZ_ASSERT
(
!
mInitialized
)
;
if
(
mInitialized
)
{
return
NS_OK
;
}
mInitialized
=
true
;
return
NS_OK
;
}
const
nsString
USBToken
:
:
mVersion
=
NS_LITERAL_STRING
(
"
U2F_V2
"
)
;
bool
USBToken
:
:
IsCompatibleVersion
(
const
nsString
&
aVersionParam
)
const
{
MOZ_ASSERT
(
mInitialized
)
;
return
mVersion
=
=
aVersionParam
;
}
bool
USBToken
:
:
IsRegistered
(
const
CryptoBuffer
&
aKeyHandle
)
const
{
MOZ_ASSERT
(
mInitialized
)
;
return
false
;
}
nsresult
USBToken
:
:
Register
(
const
Optional
<
Nullable
<
int32_t
>
>
&
opt_timeoutSeconds
const
CryptoBuffer
&
const
CryptoBuffer
&
CryptoBuffer
&
aRegistrationData
)
const
{
MOZ_ASSERT
(
mInitialized
)
;
return
NS_ERROR_NOT_AVAILABLE
;
}
nsresult
USBToken
:
:
Sign
(
const
Optional
<
Nullable
<
int32_t
>
>
&
opt_timeoutSeconds
const
CryptoBuffer
&
aApplicationParam
const
CryptoBuffer
&
aChallengeParam
const
CryptoBuffer
&
aKeyHandle
CryptoBuffer
&
aSignatureData
)
const
{
MOZ_ASSERT
(
mInitialized
)
;
return
NS_ERROR_NOT_AVAILABLE
;
}
}
}
