#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
dom
/
L10nOverlays
.
h
"
#
include
"
mozilla
/
dom
/
Document
.
h
"
#
include
"
mozilla
/
dom
/
L10nOverlaysBinding
.
h
"
#
include
"
mozilla
/
dom
/
Element
.
h
"
#
include
"
mozilla
/
NullPrincipal
.
h
"
#
include
"
nsNetUtil
.
h
"
using
mozilla
:
:
NullPrincipal
;
using
namespace
mozilla
:
:
dom
;
static
already_AddRefed
<
Document
>
SetUpDocument
(
)
{
nsCOMPtr
<
nsIURI
>
uri
;
NS_NewURI
(
getter_AddRefs
(
uri
)
"
about
:
blank
"
)
;
nsCOMPtr
<
nsIPrincipal
>
principal
=
NullPrincipal
:
:
CreateWithoutOriginAttributes
(
)
;
nsCOMPtr
<
Document
>
document
;
nsresult
rv
=
NS_NewDOMDocument
(
getter_AddRefs
(
document
)
EmptyString
(
)
EmptyString
(
)
nullptr
uri
uri
principal
false
nullptr
DocumentFlavorHTML
)
;
if
(
NS_WARN_IF
(
NS_FAILED
(
rv
)
)
)
{
return
nullptr
;
}
return
document
.
forget
(
)
;
}
TEST
(
DOM_L10n_Overlays
Initial
)
{
mozilla
:
:
ErrorResult
rv
;
nsCOMPtr
<
Document
>
doc
=
SetUpDocument
(
)
;
RefPtr
<
Element
>
elem
=
doc
-
>
CreateHTMLElement
(
nsGkAtoms
:
:
div
)
;
RefPtr
<
Element
>
span
=
doc
-
>
CreateHTMLElement
(
nsGkAtoms
:
:
a
)
;
span
-
>
SetAttribute
(
NS_LITERAL_STRING
(
"
data
-
l10n
-
name
"
)
NS_LITERAL_STRING
(
"
link
"
)
rv
)
;
span
-
>
SetAttribute
(
NS_LITERAL_STRING
(
"
href
"
)
NS_LITERAL_STRING
(
"
https
:
/
/
www
.
mozilla
.
org
"
)
rv
)
;
elem
-
>
AppendChild
(
*
span
rv
)
;
L10nValue
translation
;
translation
.
mValue
.
AssignLiteral
(
"
Hello
<
a
data
-
l10n
-
name
=
\
"
link
\
"
>
World
<
/
a
>
.
"
)
;
nsTArray
<
L10nOverlaysError
>
errors
;
L10nOverlays
:
:
TranslateElement
(
*
elem
translation
errors
rv
)
;
nsAutoString
textContent
;
elem
-
>
GetInnerHTML
(
textContent
rv
)
;
ASSERT_STREQ
(
NS_ConvertUTF16toUTF8
(
textContent
)
.
get
(
)
"
Hello
<
a
data
-
l10n
-
name
=
\
"
link
\
"
"
"
href
=
\
"
https
:
/
/
www
.
mozilla
.
org
\
"
>
World
<
/
a
>
.
"
)
;
}
