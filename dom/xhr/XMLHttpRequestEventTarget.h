#
ifndef
mozilla_dom_XMLHttpRequestEventTarget_h
#
define
mozilla_dom_XMLHttpRequestEventTarget_h
#
include
"
mozilla
/
DOMEventTargetHelper
.
h
"
namespace
mozilla
{
namespace
dom
{
class
XMLHttpRequestEventTarget
:
public
DOMEventTargetHelper
{
protected
:
explicit
XMLHttpRequestEventTarget
(
DOMEventTargetHelper
*
aOwner
)
:
DOMEventTargetHelper
(
aOwner
)
{
}
explicit
XMLHttpRequestEventTarget
(
nsIGlobalObject
*
aGlobalObject
)
:
DOMEventTargetHelper
(
aGlobalObject
)
{
}
virtual
~
XMLHttpRequestEventTarget
(
)
=
default
;
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
XMLHttpRequestEventTarget
DOMEventTargetHelper
)
mozilla
:
:
Maybe
<
EventCallbackDebuggerNotificationType
>
GetDebuggerNotificationType
(
)
const
override
;
IMPL_EVENT_HANDLER
(
loadstart
)
IMPL_EVENT_HANDLER
(
progress
)
IMPL_EVENT_HANDLER
(
abort
)
IMPL_EVENT_HANDLER
(
error
)
IMPL_EVENT_HANDLER
(
load
)
IMPL_EVENT_HANDLER
(
timeout
)
IMPL_EVENT_HANDLER
(
loadend
)
nsISupports
*
GetParentObject
(
)
const
{
return
GetOwner
(
)
;
}
virtual
void
DisconnectFromOwner
(
)
override
;
}
;
}
}
#
endif
