#
include
"
XMLHttpRequestString
.
h
"
#
include
"
nsISupportsImpl
.
h
"
namespace
mozilla
{
namespace
dom
{
class
XMLHttpRequestStringBuffer
final
{
friend
class
XMLHttpRequestStringWriterHelper
;
public
:
NS_INLINE_DECL_REFCOUNTING
(
XMLHttpRequestStringBuffer
)
uint32_t
Length
(
)
{
return
mData
.
Length
(
)
;
}
void
Append
(
const
nsAString
&
aString
)
{
mData
.
Append
(
aString
)
;
}
void
GetAsString
(
nsAString
&
aString
)
{
aString
=
mData
;
}
size_t
SizeOfThis
(
MallocSizeOf
aMallocSizeOf
)
const
{
return
mData
.
SizeOfExcludingThisIfUnshared
(
aMallocSizeOf
)
;
}
private
:
~
XMLHttpRequestStringBuffer
(
)
{
}
nsString
&
Data
(
)
{
return
mData
;
}
nsString
mData
;
}
;
XMLHttpRequestString
:
:
XMLHttpRequestString
(
)
:
mBuffer
(
new
XMLHttpRequestStringBuffer
(
)
)
{
}
XMLHttpRequestString
:
:
~
XMLHttpRequestString
(
)
{
}
void
XMLHttpRequestString
:
:
Truncate
(
)
{
mBuffer
=
new
XMLHttpRequestStringBuffer
(
)
;
}
uint32_t
XMLHttpRequestString
:
:
Length
(
)
const
{
return
mBuffer
-
>
Length
(
)
;
}
void
XMLHttpRequestString
:
:
Append
(
const
nsAString
&
aString
)
{
mBuffer
-
>
Append
(
aString
)
;
}
void
XMLHttpRequestString
:
:
GetAsString
(
nsAString
&
aString
)
const
{
return
mBuffer
-
>
GetAsString
(
aString
)
;
}
size_t
XMLHttpRequestString
:
:
SizeOfThis
(
MallocSizeOf
aMallocSizeOf
)
const
{
return
mBuffer
-
>
SizeOfThis
(
aMallocSizeOf
)
;
}
bool
XMLHttpRequestString
:
:
IsEmpty
(
)
const
{
return
!
mBuffer
-
>
Length
(
)
;
}
XMLHttpRequestStringWriterHelper
:
:
XMLHttpRequestStringWriterHelper
(
XMLHttpRequestString
&
aString
)
:
mBuffer
(
aString
.
mBuffer
)
{
}
bool
XMLHttpRequestStringWriterHelper
:
:
AddCapacity
(
int32_t
aCapacity
)
{
return
mBuffer
-
>
Data
(
)
.
SetCapacity
(
mBuffer
-
>
Length
(
)
+
aCapacity
fallible
)
;
}
char16_t
*
XMLHttpRequestStringWriterHelper
:
:
EndOfExistingData
(
)
{
return
mBuffer
-
>
Data
(
)
.
BeginWriting
(
)
+
mBuffer
-
>
Length
(
)
;
}
void
XMLHttpRequestStringWriterHelper
:
:
AddLength
(
int32_t
aLength
)
{
mBuffer
-
>
Data
(
)
.
SetLength
(
mBuffer
-
>
Length
(
)
+
aLength
)
;
}
}
}
