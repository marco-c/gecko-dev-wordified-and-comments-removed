"
use
strict
"
;
const
GleanTest
=
new
Proxy
(
{
async
testResetFOG
(
)
{
return
SpecialPowers
.
spawnChrome
(
[
]
async
(
)
=
>
{
await
Services
.
fog
.
testFlushAllChildren
(
)
;
Services
.
fog
.
testResetFOG
(
)
;
}
)
;
}
async
flush
(
)
{
return
SpecialPowers
.
spawnChrome
(
[
]
async
(
)
=
>
{
await
Services
.
fog
.
testFlushAllChildren
(
)
;
}
)
;
}
}
{
get
(
gleanTestObj
gleanTestProp
)
{
if
(
gleanTestProp
in
gleanTestObj
)
{
return
gleanTestObj
[
gleanTestProp
]
;
}
return
new
Proxy
(
{
}
{
get
(
categoryObj
categoryProp
)
{
return
new
Proxy
(
{
}
{
get
(
metricObj
metricProp
)
{
return
{
async
testGetValue
(
)
{
return
SpecialPowers
.
spawnChrome
(
[
gleanTestProp
categoryProp
metricProp
]
async
(
categoryName
metricName
label
)
=
>
{
await
Services
.
fog
.
testFlushAllChildren
(
)
;
const
window
=
this
.
browsingContext
.
topChromeWindow
;
return
window
.
Glean
[
categoryName
]
[
metricName
]
[
label
]
.
testGetValue
(
)
;
}
)
;
}
}
;
}
}
)
;
}
}
)
;
}
}
)
;
