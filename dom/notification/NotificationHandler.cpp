#
include
"
NotificationHandler
.
h
"
#
include
"
mozilla
/
dom
/
ClientIPCTypes
.
h
"
#
include
"
mozilla
/
dom
/
ClientOpenWindowUtils
.
h
"
#
include
"
mozilla
/
dom
/
DOMTypes
.
h
"
#
include
"
mozilla
/
dom
/
ServiceWorkerManager
.
h
"
#
include
"
mozilla
/
ipc
/
PBackgroundSharedTypes
.
h
"
namespace
mozilla
:
:
dom
:
:
notification
{
nsresult
RespondOnClick
(
nsIPrincipal
*
aPrincipal
const
nsAString
&
aScope
const
IPCNotification
&
aNotification
const
nsAString
&
aActionName
)
{
RefPtr
<
ServiceWorkerManager
>
swm
=
ServiceWorkerManager
:
:
GetInstance
(
)
;
if
(
!
swm
)
{
return
NS_ERROR_FAILURE
;
}
nsAutoCString
originSuffix
;
MOZ_TRY
(
aPrincipal
-
>
GetOriginSuffix
(
originSuffix
)
)
;
nsresult
rv
=
swm
-
>
SendNotificationClickEvent
(
originSuffix
aScope
aNotification
aActionName
)
;
if
(
NS_FAILED
(
rv
)
)
{
return
OpenWindowFor
(
aPrincipal
)
;
}
return
NS_OK
;
}
nsresult
OpenWindowFor
(
nsIPrincipal
*
aPrincipal
)
{
nsAutoCString
origin
;
MOZ_TRY
(
aPrincipal
-
>
GetOrigin
(
origin
)
)
;
mozilla
:
:
ipc
:
:
PrincipalInfo
info
{
}
;
MOZ_TRY
(
PrincipalToPrincipalInfo
(
aPrincipal
&
info
)
)
;
(
void
)
ClientOpenWindow
(
nullptr
ClientOpenWindowArgs
(
info
Nothing
(
)
"
"
_ns
origin
)
)
;
return
NS_OK
;
}
}
