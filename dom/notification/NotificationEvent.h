#
ifndef
DOM_NOTIFICATIONEVENT_H_
#
define
DOM_NOTIFICATIONEVENT_H_
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
BindingUtils
.
h
"
#
include
"
mozilla
/
dom
/
NotificationEventBinding
.
h
"
#
include
"
mozilla
/
dom
/
ServiceWorkerEvents
.
h
"
struct
JSContext
;
namespace
mozilla
:
:
dom
{
class
NotificationEvent
:
public
ExtendableEvent
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS_INHERITED
(
NotificationEvent
ExtendableEvent
)
protected
:
virtual
~
NotificationEvent
(
)
;
explicit
NotificationEvent
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
)
;
RefPtr
<
Notification
>
mNotification
;
nsString
mAction
;
public
:
NotificationEvent
*
AsNotificationEvent
(
)
override
;
JSObject
*
WrapObjectInternal
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
already_AddRefed
<
NotificationEvent
>
Constructor
(
mozilla
:
:
dom
:
:
EventTarget
*
aOwner
const
nsAString
&
aType
const
NotificationEventInit
&
aEventInitDict
)
;
static
already_AddRefed
<
NotificationEvent
>
Constructor
(
const
GlobalObject
&
aGlobal
const
nsAString
&
aType
const
NotificationEventInit
&
aEventInitDict
)
;
Notification
*
Notification_
(
)
const
;
void
GetAction
(
nsString
&
aRetVal
)
const
;
}
;
}
#
endif
