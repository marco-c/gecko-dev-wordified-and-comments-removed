#
ifndef
nsJSProtocolHandler_h___
#
define
nsJSProtocolHandler_h___
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsIProtocolHandler
.
h
"
#
include
"
nsITextToSubURI
.
h
"
#
include
"
nsIURI
.
h
"
#
include
"
nsIMutable
.
h
"
#
include
"
nsISerializable
.
h
"
#
include
"
nsIClassInfo
.
h
"
#
include
"
nsSimpleURI
.
h
"
#
define
NS_JSPROTOCOLHANDLER_CID
\
{
/
*
bfc310d2
-
38a0
-
11d3
-
8cd3
-
0060b0fc14a3
*
/
\
0xbfc310d2
\
0x38a0
\
0x11d3
\
{
0x8c
0xd3
0x00
0x60
0xb0
0xfc
0x14
0xa3
}
\
}
#
define
NS_JSURI_CID
\
{
/
*
58f089ee
-
512a
-
42d2
-
a935
-
d0c874128930
*
/
\
0x58f089ee
\
0x512a
\
0x42d2
\
{
0xa9
0x35
0xd0
0xc8
0x74
0x12
0x89
0x30
}
\
}
#
define
NS_JSPROTOCOLHANDLER_CONTRACTID
\
NS_NETWORK_PROTOCOL_CONTRACTID_PREFIX
"
javascript
"
class
nsJSProtocolHandler
:
public
nsIProtocolHandler
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIPROTOCOLHANDLER
nsJSProtocolHandler
(
)
;
static
nsresult
Create
(
nsISupports
*
aOuter
REFNSIID
aIID
void
*
*
aResult
)
;
nsresult
Init
(
)
;
protected
:
virtual
~
nsJSProtocolHandler
(
)
;
nsresult
EnsureUTF8Spec
(
const
nsCString
&
aSpec
const
char
*
aCharset
nsACString
&
aUTF8Spec
)
;
nsCOMPtr
<
nsITextToSubURI
>
mTextToSubURI
;
}
;
class
nsJSURI
final
:
public
mozilla
:
:
net
:
:
nsSimpleURI
{
public
:
using
mozilla
:
:
net
:
:
nsSimpleURI
:
:
Read
;
using
mozilla
:
:
net
:
:
nsSimpleURI
:
:
Write
;
nsJSURI
(
)
{
}
explicit
nsJSURI
(
nsIURI
*
aBaseURI
)
:
mBaseURI
(
aBaseURI
)
{
}
nsIURI
*
GetBaseURI
(
)
const
{
return
mBaseURI
;
}
NS_DECL_ISUPPORTS_INHERITED
virtual
mozilla
:
:
net
:
:
nsSimpleURI
*
StartClone
(
RefHandlingEnum
refHandlingMode
const
nsACString
&
newRef
)
override
;
NS_IMETHOD
Mutate
(
nsIURIMutator
*
*
_retval
)
override
;
NS_IMETHOD
Read
(
nsIObjectInputStream
*
aStream
)
override
;
NS_IMETHOD
Write
(
nsIObjectOutputStream
*
aStream
)
override
;
NS_DECL_NSIIPCSERIALIZABLEURI
NS_IMETHOD
GetClassIDNoAlloc
(
nsCID
*
aClassIDNoAlloc
)
override
;
protected
:
virtual
~
nsJSURI
(
)
{
}
virtual
nsresult
EqualsInternal
(
nsIURI
*
other
RefHandlingEnum
refHandlingMode
bool
*
result
)
override
;
private
:
nsCOMPtr
<
nsIURI
>
mBaseURI
;
public
:
class
Mutator
final
:
public
nsIURIMutator
public
BaseURIMutator
<
nsJSURI
>
{
NS_DECL_ISUPPORTS
NS_FORWARD_SAFE_NSIURISETTERS_RET
(
mURI
)
NS_DEFINE_NSIMUTATOR_COMMON
explicit
Mutator
(
)
{
}
private
:
virtual
~
Mutator
(
)
{
}
friend
class
nsJSURI
;
}
;
}
;
#
endif
