#
ifndef
mozilla_dom_bluetooth_BluetoothUtils_h
#
define
mozilla_dom_bluetooth_BluetoothUtils_h
#
include
"
BluetoothCommon
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
namespace
mozilla
{
namespace
dom
{
class
GattPermissions
;
class
GattCharacteristicProperties
;
}
}
BEGIN_BLUETOOTH_NAMESPACE
class
BluetoothNamedValue
;
class
BluetoothReplyRunnable
;
class
BluetoothValue
;
void
AddressToString
(
const
BluetoothAddress
&
aAddress
nsAString
&
aString
)
;
nsresult
StringToAddress
(
const
nsAString
&
aString
BluetoothAddress
&
aAddress
)
;
nsresult
PinCodeToString
(
const
BluetoothPinCode
&
aPinCode
nsAString
&
aString
)
;
nsresult
StringToPinCode
(
const
nsAString
&
aString
BluetoothPinCode
&
aPinCode
)
;
nsresult
StringToPropertyType
(
const
nsAString
&
aString
BluetoothPropertyType
&
aType
)
;
nsresult
NamedValueToProperty
(
const
BluetoothNamedValue
&
aIn
BluetoothProperty
&
aProperty
)
;
void
RemoteNameToString
(
const
BluetoothRemoteName
&
aRemoteName
nsAString
&
aString
)
;
nsresult
StringToServiceName
(
const
nsAString
&
aString
BluetoothServiceName
&
aServiceName
)
;
void
UuidToString
(
const
BluetoothUuid
&
aUuid
nsAString
&
aString
)
;
void
StringToUuid
(
const
nsAString
&
aString
BluetoothUuid
&
aUuid
)
;
nsresult
GenerateUuid
(
BluetoothUuid
&
aUuid
)
;
nsresult
GenerateUuid
(
nsAString
&
aUuidString
)
;
void
GattPermissionsToDictionary
(
BluetoothGattAttrPerm
aBits
GattPermissions
&
aPermissions
)
;
void
GattPermissionsToBits
(
const
GattPermissions
&
aPermissions
BluetoothGattAttrPerm
&
aBits
)
;
void
GattPropertiesToDictionary
(
BluetoothGattCharProp
aBits
GattCharacteristicProperties
&
aProperties
)
;
void
GattPropertiesToBits
(
const
GattCharacteristicProperties
&
aProperties
BluetoothGattCharProp
&
aBits
)
;
void
GeneratePathFromGattId
(
const
BluetoothGattId
&
aId
nsAString
&
aPath
)
;
void
RegisterBluetoothSignalHandler
(
const
nsAString
&
aPath
BluetoothSignalObserver
*
aHandler
)
;
void
UnregisterBluetoothSignalHandler
(
const
nsAString
&
aPath
BluetoothSignalObserver
*
aHandler
)
;
bool
BroadcastSystemMessage
(
const
nsAString
&
aType
const
BluetoothValue
&
aData
)
;
bool
BroadcastSystemMessage
(
const
nsAString
&
aType
const
InfallibleTArray
<
BluetoothNamedValue
>
&
aData
)
;
void
DispatchReplySuccess
(
BluetoothReplyRunnable
*
aRunnable
)
;
void
DispatchReplySuccess
(
BluetoothReplyRunnable
*
aRunnable
const
BluetoothValue
&
aValue
)
;
void
DispatchReplyError
(
BluetoothReplyRunnable
*
aRunnable
const
nsAString
&
aErrorStr
)
;
void
DispatchReplyError
(
BluetoothReplyRunnable
*
aRunnable
const
enum
BluetoothStatus
aStatus
)
;
void
DispatchStatusChangedEvent
(
const
nsAString
&
aType
const
nsAString
&
aDeviceAddress
bool
aStatus
)
;
void
AppendNamedValue
(
InfallibleTArray
<
BluetoothNamedValue
>
&
aArray
const
char
*
aName
const
BluetoothValue
&
aValue
)
;
void
InsertNamedValue
(
InfallibleTArray
<
BluetoothNamedValue
>
&
aArray
uint8_t
aIndex
const
char
*
aName
const
BluetoothValue
&
aValue
)
;
END_BLUETOOTH_NAMESPACE
#
endif
