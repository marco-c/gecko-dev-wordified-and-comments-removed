#
ifndef
mozilla_dom_bluetooth_bluedroid_BluetoothMapBMessage_h
#
define
mozilla_dom_bluetooth_bluedroid_BluetoothMapBMessage_h
#
include
"
BluetoothCommon
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
nsRefPtrHashtable
.
h
"
#
include
"
nsTArray
.
h
"
BEGIN_BLUETOOTH_NAMESPACE
enum
BMsgParserState
{
BMSG_PARSING_STATE_INVALID
BMSG_PARSING_STATE_BEGIN_BMSG
BMSG_PARSING_STATE_VERSION
BMSG_PARSING_STATE_STATUS
BMSG_PARSING_STATE_TYPE
BMSG_PARSING_STATE_FOLDER
BMSG_PARSING_STATE_ORIGINATOR
BMSG_PARSING_STATE_VCARD
BMSG_PARSING_STATE_BEGIN_ENVELOPE
BMSG_PARSING_STATE_RECIPIENT
BMSG_PARSING_STATE_BEGIN_BODY
BMSG_PARSING_STATE_BEGIN_MSG
}
;
class
VCard
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
VCard
)
VCard
(
)
;
void
Parse
(
const
nsAutoCString
&
aCurrLine
)
;
void
GetName
(
nsACString
&
aName
)
;
void
GetFormattedName
(
nsACString
&
aFormattedName
)
;
void
GetTelephone
(
nsACString
&
aTelephone
)
;
void
GetEmail
(
nsACString
&
aEmail
)
;
void
Dump
(
)
;
private
:
~
VCard
(
)
;
nsCString
mName
;
nsCString
mFormattedName
;
nsCString
mTelephone
;
nsCString
mEmail
;
}
;
class
BluetoothMapBMessage
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
BluetoothMapBMessage
)
BluetoothMapBMessage
(
uint8_t
*
aObexBody
int
aLength
)
;
void
GetRecipients
(
nsTArray
<
RefPtr
<
VCard
>
>
&
aRecipients
)
;
void
GetOriginators
(
nsTArray
<
RefPtr
<
VCard
>
>
&
aRecipients
)
;
void
GetBody
(
nsACString
&
aBody
)
;
void
Dump
(
)
;
private
:
~
BluetoothMapBMessage
(
)
;
void
ProcessDecode
(
const
char
*
aBody
)
;
void
ParseBeginBmsg
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseVersion
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseStatus
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseType
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseFolder
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseOriginator
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseVCard
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseEnvelope
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseRecipient
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseBody
(
const
nsAutoCString
&
aCurrLine
)
;
void
ParseBMsg
(
const
nsAutoCString
&
aCurrLine
)
;
bool
mReadStatus
;
nsCString
mFolderName
;
int
mPartId
;
nsCString
mEncoding
;
nsCString
mCharset
;
nsCString
mLanguage
;
nsCString
mBMsgLength
;
nsCString
mBMsgBody
;
nsCString
mType
;
enum
BMsgParserState
mState
;
enum
BMsgParserState
mUnwindState
;
int
mEnvelopeLevel
;
nsTArray
<
RefPtr
<
VCard
>
>
mOriginators
;
nsTArray
<
RefPtr
<
VCard
>
>
mRecipients
;
}
;
END_BLUETOOTH_NAMESPACE
#
endif
