#
include
"
SessionStorageObserver
.
h
"
namespace
mozilla
{
namespace
dom
{
namespace
{
SessionStorageObserver
*
gSessionStorageObserver
=
nullptr
;
}
SessionStorageObserver
:
:
SessionStorageObserver
(
)
:
mActor
(
nullptr
)
{
AssertIsOnOwningThread
(
)
;
MOZ_ASSERT
(
NextGenLocalStorageEnabled
(
)
)
;
MOZ_ASSERT
(
!
gSessionStorageObserver
)
;
gSessionStorageObserver
=
this
;
}
SessionStorageObserver
:
:
~
SessionStorageObserver
(
)
{
AssertIsOnOwningThread
(
)
;
if
(
mActor
)
{
mActor
-
>
SendDeleteMeInternal
(
)
;
MOZ_ASSERT
(
!
mActor
"
SendDeleteMeInternal
should
have
cleared
!
"
)
;
}
MOZ_ASSERT
(
gSessionStorageObserver
)
;
gSessionStorageObserver
=
nullptr
;
}
SessionStorageObserver
*
SessionStorageObserver
:
:
Get
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MOZ_ASSERT
(
NextGenLocalStorageEnabled
(
)
)
;
return
gSessionStorageObserver
;
}
void
SessionStorageObserver
:
:
SetActor
(
SessionStorageObserverChild
*
aActor
)
{
AssertIsOnOwningThread
(
)
;
MOZ_ASSERT
(
aActor
)
;
MOZ_ASSERT
(
!
mActor
)
;
mActor
=
aActor
;
}
}
}
