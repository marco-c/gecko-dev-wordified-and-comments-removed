use
libc
:
:
{
c_int
uint64_t
}
;
pub
fn
virtual_size
(
)
-
>
Option
<
u64
>
{
let
mut
virtual_size
:
u64
=
0
;
let
mut
rv
;
unsafe
{
rv
=
TaskBasicInfoVirtualSize
(
&
mut
virtual_size
)
;
}
if
rv
=
=
0
{
Some
(
virtual_size
)
}
else
{
None
}
}
pub
fn
resident_size
(
)
-
>
Option
<
u64
>
{
let
mut
resident_size
:
u64
=
0
;
let
mut
rv
;
unsafe
{
rv
=
TaskBasicInfoResidentSize
(
&
mut
resident_size
)
;
}
if
rv
=
=
0
{
Some
(
resident_size
)
}
else
{
None
}
}
#
[
link
(
name
=
"
task_info
"
)
]
extern
{
fn
TaskBasicInfoVirtualSize
(
virtual_size
:
*
mut
uint64_t
)
-
>
c_int
;
fn
TaskBasicInfoResidentSize
(
resident_size
:
*
mut
uint64_t
)
-
>
c_int
;
}
#
[
cfg
(
test
)
]
mod
test
{
use
super
:
:
*
;
#
[
test
]
fn
test_stuff
(
)
{
assert
!
(
virtual_size
(
)
.
unwrap
(
)
>
0
)
;
assert
!
(
resident_size
(
)
.
unwrap
(
)
>
0
)
;
}
}
