use
azure
:
:
azure_hl
:
:
DrawTarget
;
use
azure
:
:
azure
:
:
AzGLContext
;
use
geom
:
:
rect
:
:
Rect
;
use
geom
:
:
size
:
:
Size2D
;
use
extra
:
:
arc
;
#
[
deriving
(
Clone
)
]
pub
struct
LayerBuffer
{
draw_target
:
DrawTarget
rect
:
Rect
<
f32
>
screen_pos
:
Rect
<
uint
>
resolution
:
f32
stride
:
uint
}
pub
struct
LayerBufferSet
{
buffers
:
~
[
LayerBuffer
]
}
#
[
deriving
(
Eq
)
]
pub
enum
RenderState
{
IdleRenderState
RenderingRenderState
}
pub
enum
ReadyState
{
Loading
PerformingLayout
FinishedLoading
}
pub
trait
RenderListener
{
fn
get_gl_context
(
&
self
)
-
>
AzGLContext
;
fn
new_layer
(
&
self
Size2D
<
uint
>
uint
)
;
fn
resize_layer
(
&
self
Size2D
<
uint
>
)
;
fn
delete_layer
(
&
self
)
;
fn
paint
(
&
self
id
:
uint
layer_buffer_set
:
arc
:
:
ARC
<
LayerBufferSet
>
new_size
:
Size2D
<
uint
>
)
;
fn
set_render_state
(
&
self
render_state
:
RenderState
)
;
}
pub
trait
ScriptListener
:
Clone
{
fn
set_ready_state
(
&
self
ReadyState
)
;
}
