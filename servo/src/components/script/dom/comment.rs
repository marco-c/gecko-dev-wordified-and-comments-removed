use
dom
:
:
bindings
:
:
codegen
:
:
CommentBinding
;
use
dom
:
:
bindings
:
:
utils
:
:
{
DOMString
Fallible
}
;
use
dom
:
:
characterdata
:
:
CharacterData
;
use
dom
:
:
document
:
:
AbstractDocument
;
use
dom
:
:
node
:
:
{
AbstractNode
CommentNodeTypeId
Node
}
;
use
dom
:
:
window
:
:
Window
;
pub
struct
Comment
{
element
:
CharacterData
}
impl
Comment
{
pub
fn
new_inherited
(
text
:
~
str
document
:
AbstractDocument
)
-
>
Comment
{
Comment
{
element
:
CharacterData
:
:
new_inherited
(
CommentNodeTypeId
text
document
)
}
}
pub
fn
new
(
text
:
~
str
document
:
AbstractDocument
)
-
>
AbstractNode
{
let
node
=
Comment
:
:
new_inherited
(
text
document
)
;
Node
:
:
reflect_node
(
mut
node
document
CommentBinding
:
:
Wrap
)
}
pub
fn
Constructor
(
owner
:
mut
Window
data
:
DOMString
)
-
>
Fallible
<
AbstractNode
>
{
Ok
(
Comment
:
:
new
(
data
owner
.
Document
(
)
)
)
}
}
