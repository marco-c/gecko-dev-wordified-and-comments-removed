use
dom
:
:
bindings
:
:
js
:
:
JS
;
use
dom
:
:
bindings
:
:
utils
:
:
{
Reflectable
trace_reflector
Reflector
}
;
use
js
:
:
jsapi
:
:
JSTracer
;
use
std
:
:
cast
;
use
extra
:
:
serialize
:
:
{
Encodable
Encoder
}
;
impl
<
T
:
Reflectable
+
Encodable
<
S
>
S
:
Encoder
>
Encodable
<
S
>
for
JS
<
T
>
{
fn
encode
(
&
self
s
:
&
mut
S
)
{
let
s
:
&
mut
JSTracer
=
unsafe
{
cast
:
:
transmute
(
s
)
}
;
trace_reflector
(
s
"
"
self
.
reflector
(
)
)
;
}
}
impl
<
S
:
Encoder
>
Encodable
<
S
>
for
Reflector
{
fn
encode
(
&
self
_s
:
&
mut
S
)
{
}
}
