use
dom
:
:
bindings
:
:
codegen
:
:
HTMLUnknownElementBinding
;
use
dom
:
:
bindings
:
:
utils
:
:
DOMString
;
use
dom
:
:
document
:
:
AbstractDocument
;
use
dom
:
:
element
:
:
HTMLUnknownElementTypeId
;
use
dom
:
:
htmlelement
:
:
HTMLElement
;
use
dom
:
:
node
:
:
{
AbstractNode
Node
}
;
pub
struct
HTMLUnknownElement
{
htmlelement
:
HTMLElement
}
impl
HTMLUnknownElement
{
pub
fn
new_inherited
(
localName
:
DOMString
document
:
AbstractDocument
)
-
>
HTMLUnknownElement
{
HTMLUnknownElement
{
htmlelement
:
HTMLElement
:
:
new_inherited
(
HTMLUnknownElementTypeId
localName
document
)
}
}
pub
fn
new
(
localName
:
DOMString
document
:
AbstractDocument
)
-
>
AbstractNode
{
let
element
=
HTMLUnknownElement
:
:
new_inherited
(
localName
document
)
;
Node
:
:
reflect_node
(
mut
element
document
HTMLUnknownElementBinding
:
:
Wrap
)
}
}
