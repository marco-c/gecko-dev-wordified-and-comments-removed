use
dom
:
:
bindings
:
:
utils
:
:
{
Reflectable
Reflector
}
;
use
script_task
:
:
page_from_context
;
use
js
:
:
jsapi
:
:
JSContext
;
pub
struct
WindowProxy
{
reflector_
:
Reflector
}
impl
WindowProxy
{
pub
fn
new
(
)
-
>
mut
WindowProxy
{
mut
WindowProxy
{
reflector_
:
Reflector
:
:
new
(
)
}
}
}
impl
Reflectable
for
WindowProxy
{
fn
reflector
<
'
a
>
(
&
'
a
self
)
-
>
&
'
a
Reflector
{
&
self
.
reflector_
}
fn
mut_reflector
<
'
a
>
(
&
'
a
mut
self
)
-
>
&
'
a
mut
Reflector
{
&
mut
self
.
reflector_
}
fn
GetParentObject
(
&
self
cx
:
*
JSContext
)
-
>
Option
<
mut
Reflectable
>
{
let
page
=
page_from_context
(
cx
)
;
unsafe
{
Some
(
(
*
page
)
.
frame
.
get_ref
(
)
.
window
as
mut
Reflectable
)
}
}
}
