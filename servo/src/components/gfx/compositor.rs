use
azure
:
:
azure_hl
:
:
{
DrawTarget
}
;
use
geom
:
:
rect
:
:
Rect
;
use
geom
:
:
size
:
:
Size2D
;
pub
struct
LayerBuffer
{
draw_target
:
DrawTarget
rect
:
Rect
<
uint
>
screen_pos
:
Rect
<
uint
>
stride
:
uint
}
pub
struct
LayerBufferSet
{
buffers
:
~
[
LayerBuffer
]
}
#
[
deriving
(
Eq
)
]
pub
enum
RenderState
{
IdleRenderState
RenderingRenderState
}
pub
trait
Compositor
{
fn
paint
(
&
self
layer_buffer_set
:
LayerBufferSet
new_size
:
Size2D
<
uint
>
)
;
fn
set_render_state
(
&
self
render_state
:
RenderState
)
;
}
