#
!
[
crate_name
=
"
layout_traits
"
]
#
!
[
crate_type
=
"
rlib
"
]
#
!
[
comment
=
"
The
Servo
Parallel
Browser
Project
"
]
#
!
[
license
=
"
MPL
"
]
extern
crate
gfx
;
extern
crate
script_traits
;
extern
crate
servo_msg
=
"
msg
"
;
extern
crate
servo_net
=
"
net
"
;
extern
crate
servo_util
=
"
util
"
;
use
gfx
:
:
font_cache_task
:
:
FontCacheTask
;
use
gfx
:
:
render_task
:
:
RenderChan
;
use
servo_msg
:
:
constellation_msg
:
:
{
ConstellationChan
PipelineId
}
;
use
servo_msg
:
:
constellation_msg
:
:
Failure
;
use
servo_net
:
:
image_cache_task
:
:
ImageCacheTask
;
use
servo_util
:
:
opts
:
:
Opts
;
use
servo_util
:
:
time
:
:
TimeProfilerChan
;
use
script_traits
:
:
{
ScriptControlChan
OpaqueScriptLayoutChannel
}
;
use
std
:
:
comm
:
:
Sender
;
pub
enum
LayoutControlMsg
{
ExitNowMsg
}
pub
struct
LayoutControlChan
(
pub
Sender
<
LayoutControlMsg
>
)
;
pub
trait
LayoutTaskFactory
{
fn
create
(
_phantom
:
Option
<
&
mut
Self
>
id
:
PipelineId
chan
:
OpaqueScriptLayoutChannel
pipeline_port
:
Receiver
<
LayoutControlMsg
>
constellation_chan
:
ConstellationChan
failure_msg
:
Failure
script_chan
:
ScriptControlChan
render_chan
:
RenderChan
img_cache_task
:
ImageCacheTask
font_cache_task
:
FontCacheTask
opts
:
Opts
time_profiler_chan
:
TimeProfilerChan
shutdown_chan
:
Sender
<
(
)
>
)
;
}
