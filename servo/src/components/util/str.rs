pub
type
DOMString
=
~
str
;
pub
fn
null_str_as_empty
(
s
:
&
Option
<
DOMString
>
)
-
>
DOMString
{
/
/
We
don
'
t
use
map_default
because
it
would
allocate
~
"
"
even
for
Some
.
match
*
s
{
Some
(
ref
s
)
=
>
s
.
clone
(
)
None
=
>
~
"
"
}
}
pub
fn
null_str_as_empty_ref
<
'
a
>
(
s
:
&
'
a
Option
<
DOMString
>
)
-
>
&
'
a
str
{
match
*
s
{
Some
(
ref
s
)
=
>
s
.
as_slice
(
)
None
=
>
&
'
a
"
"
}
}
