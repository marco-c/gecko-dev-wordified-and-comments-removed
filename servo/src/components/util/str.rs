use
std
:
:
iter
:
:
Filter
;
use
std
:
:
str
:
:
CharSplits
;
pub
type
DOMString
=
String
;
pub
type
StaticCharVec
=
&
'
static
[
char
]
;
pub
type
StaticStringVec
=
&
'
static
[
&
'
static
str
]
;
pub
fn
null_str_as_empty
(
s
:
&
Option
<
DOMString
>
)
-
>
DOMString
{
match
*
s
{
Some
(
ref
s
)
=
>
s
.
clone
(
)
None
=
>
"
"
.
to_string
(
)
}
}
pub
fn
null_str_as_empty_ref
<
'
a
>
(
s
:
&
'
a
Option
<
DOMString
>
)
-
>
&
'
a
str
{
match
*
s
{
Some
(
ref
s
)
=
>
s
.
as_slice
(
)
None
=
>
"
"
}
}
pub
fn
is_whitespace
(
s
:
&
str
)
-
>
bool
{
s
.
chars
(
)
.
all
(
|
c
|
match
c
{
'
\
u0020
'
|
'
\
u0009
'
|
'
\
u000D
'
|
'
\
u000A
'
=
>
true
_
=
>
false
}
)
}
pub
static
HTML_SPACE_CHARACTERS
:
StaticCharVec
=
&
[
'
\
u0020
'
'
\
u0009
'
'
\
u000a
'
'
\
u000c
'
'
\
u000d
'
]
;
pub
fn
split_html_space_chars
<
'
a
>
(
s
:
&
'
a
str
)
-
>
Filter
<
'
a
&
'
a
str
CharSplits
<
'
a
StaticCharVec
>
>
{
s
.
split
(
HTML_SPACE_CHARACTERS
)
.
filter
(
|
&
split
|
!
split
.
is_empty
(
)
)
}
