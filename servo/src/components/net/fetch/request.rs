use
url
:
:
Url
;
use
http
:
:
method
:
:
{
Get
Method
}
;
use
http
:
:
headers
:
:
request
:
:
HeaderCollection
;
pub
enum
Context
{
Audio
Beacon
CSPreport
Download
Embed
Eventsource
Favicon
Fetch
Font
Form
Frame
Hyperlink
IFrame
Image
ImageSet
Import
Internal
Location
Manifest
Object
Ping
Plugin
Prefetch
Script
ServiceWorker
SharedWorker
Subresource
Style
Track
Video
Worker
XMLHttpRequest
XSLT
}
pub
enum
ContextFrameType
{
Auxiliary
TopLevel
Nested
ContextNone
}
pub
enum
Referer
{
RefererNone
Client
RefererUrl
(
Url
)
}
pub
enum
RequestMode
{
SameOrigin
NoCORS
CORSMode
ForcedPreflightMode
}
pub
enum
CredentialsMode
{
Omit
CredentialsSameOrigin
Include
}
pub
enum
ResponseTainting
{
Basic
CORSTainting
Opaque
}
pub
struct
Request
{
pub
method
:
Method
pub
url
:
Url
pub
headers
:
HeaderCollection
pub
unsafe_request
:
bool
pub
body
:
Option
<
Vec
<
u8
>
>
pub
preserve_content_codings
:
bool
pub
skip_service_worker
:
bool
pub
context
:
Context
pub
context_frame_type
:
ContextFrameType
pub
origin
:
Option
<
Url
>
pub
force_origin_header
:
bool
pub
same_origin_data
:
bool
pub
referer
:
Referer
pub
authentication
:
bool
pub
sync
:
bool
pub
mode
:
RequestMode
pub
credentials_mode
:
CredentialsMode
pub
use_url_credentials
:
bool
pub
manual_redirect
:
bool
pub
redirect_count
:
uint
pub
response_tainting
:
ResponseTainting
}
impl
Request
{
pub
fn
new
(
url
:
Url
context
:
Context
)
-
>
Request
{
Request
{
method
:
Get
url
:
url
headers
:
HeaderCollection
:
:
new
(
)
unsafe_request
:
false
body
:
None
preserve_content_codings
:
false
skip_service_worker
:
false
context
:
context
context_frame_type
:
ContextNone
origin
:
None
force_origin_header
:
false
same_origin_data
:
false
referer
:
Client
authentication
:
false
sync
:
false
mode
:
NoCORS
credentials_mode
:
Omit
use_url_credentials
:
false
manual_redirect
:
false
redirect_count
:
0
response_tainting
:
Basic
}
}
}
