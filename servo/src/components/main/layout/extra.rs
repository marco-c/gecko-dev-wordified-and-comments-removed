use
layout
:
:
util
:
:
{
DisplayBoxes
LayoutData
LayoutDataAccess
}
;
use
script
:
:
dom
:
:
node
:
:
{
AbstractNode
LayoutView
}
;
use
servo_util
:
:
tree
:
:
TreeNodeRef
;
use
std
:
:
cast
;
pub
trait
LayoutAuxMethods
{
fn
initialize_layout_data
(
self
)
;
fn
initialize_style_for_subtree
(
self
)
;
}
impl
LayoutAuxMethods
for
AbstractNode
<
LayoutView
>
{
fn
initialize_layout_data
(
self
)
{
unsafe
{
let
node
=
cast
:
:
transmute_mut
(
self
.
node
(
)
)
;
if
node
.
layout_data
.
is_none
(
)
{
node
.
layout_data
=
Some
(
~
LayoutData
:
:
new
(
)
as
~
Any
)
}
else
{
self
.
layout_data
(
)
.
boxes
.
set
(
DisplayBoxes
:
:
init
(
)
)
;
}
}
}
fn
initialize_style_for_subtree
(
self
)
{
for
n
in
self
.
traverse_preorder
(
)
{
n
.
initialize_layout_data
(
)
;
}
}
}
