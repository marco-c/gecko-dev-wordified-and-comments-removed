use
extra
:
:
url
:
:
Url
;
use
std
:
:
cell
:
:
Cell
;
use
newcss
:
:
stylesheet
:
:
Stylesheet
;
use
newcss
:
:
select
:
:
SelectCtx
;
use
newcss
:
:
types
:
:
OriginUA
;
use
newcss
:
:
util
:
:
DataStream
;
pub
fn
new_css_select_ctx
(
)
-
>
SelectCtx
{
let
mut
ctx
=
SelectCtx
:
:
new
(
)
;
ctx
.
append_sheet
(
html4_default_style
(
)
OriginUA
)
;
ctx
.
append_sheet
(
servo_default_style
(
)
OriginUA
)
;
return
ctx
;
}
fn
html4_default_style
(
)
-
>
Stylesheet
{
Stylesheet
:
:
new
(
default_url
(
"
html4_style
"
)
style_stream
(
html4_default_style_str
(
)
)
)
}
fn
servo_default_style
(
)
-
>
Stylesheet
{
Stylesheet
:
:
new
(
default_url
(
"
servo_style
"
)
style_stream
(
servo_default_style_str
(
)
)
)
}
fn
default_url
(
name
:
&
str
)
-
>
Url
{
FromStr
:
:
from_str
(
fmt
!
(
"
http
:
/
/
%
s
"
name
)
)
.
unwrap
(
)
}
fn
style_stream
(
style
:
&
str
)
-
>
DataStream
{
let
style
=
Cell
:
:
new
(
style
.
as_bytes
(
)
.
to_owned
(
)
)
;
let
d
:
DataStream
=
|
|
if
!
style
.
is_empty
(
)
{
Some
(
style
.
take
(
)
)
}
else
{
None
}
;
return
d
;
}
fn
html4_default_style_str
(
)
-
>
&
'
static
str
{
include_str
!
(
"
user
-
agent
.
css
"
)
}
fn
servo_default_style_str
(
)
-
>
&
'
static
str
{
"
*
{
border
-
width
:
0px
;
}
"
}
