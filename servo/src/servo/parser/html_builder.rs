import
dom
:
:
rcu
:
:
writer_methods
;
import
dom
:
:
base
:
:
{
methods
rd_tree_ops
wr_tree_ops
}
;
import
dom
=
dom
:
:
base
;
import
parser
=
parser
:
:
html
;
import
html
:
:
token
;
fn
build_dom
(
scope
:
dom
:
:
node_scope
stream
:
port
<
token
>
)
-
>
dom
:
:
node
{
let
mut
cur
=
scope
.
new_node
(
dom
:
:
nk_div
)
;
loop
{
let
token
=
stream
.
recv
(
)
;
#
debug
[
"
token
=
%
?
"
token
]
;
alt
token
{
parser
:
:
to_eof
{
break
;
}
parser
:
:
to_start_tag
(
_
)
{
let
new_node
=
scope
.
new_node
(
dom
:
:
nk_div
)
;
scope
.
add_child
(
cur
new_node
)
;
cur
=
new_node
;
}
parser
:
:
to_end_tag
(
_
)
{
cur
=
scope
.
get_parent
(
cur
)
.
get
(
)
;
}
parser
:
:
to_text
(
_
)
{
}
parser
:
:
to_doctype
{
}
}
}
ret
cur
;
}
