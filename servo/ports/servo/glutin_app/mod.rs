pub
mod
window
;
use
compositing
:
:
windowing
:
:
WindowEvent
;
use
servo_config
:
:
opts
;
use
std
:
:
rc
:
:
Rc
;
pub
trait
NestedEventLoopListener
{
fn
handle_event_from_nested_event_loop
(
&
mut
self
event
:
WindowEvent
)
-
>
bool
;
}
pub
fn
create_window
(
)
-
>
Rc
<
window
:
:
Window
>
{
let
opts
=
opts
:
:
get
(
)
;
let
foreground
=
opts
.
output_file
.
is_none
(
)
&
&
!
opts
.
headless
;
window
:
:
Window
:
:
new
(
foreground
opts
.
initial_window_size
)
}
