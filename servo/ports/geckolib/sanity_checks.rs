#
!
[
allow
(
unused_imports
)
]
use
std
:
:
mem
;
macro_rules
!
check_enum_value
{
(
a
:
expr
b
:
expr
)
=
>
{
unsafe
{
mem
:
:
transmute
:
:
<
[
u32
;
a
as
usize
]
[
u32
;
b
as
usize
]
>
(
[
0
;
a
as
usize
]
)
;
}
}
}
macro_rules
!
check_enum_value_non_static
{
(
a
:
expr
b
:
expr
)
=
>
{
assert_eq
!
(
a
as
usize
b
as
usize
)
;
}
}
#
[
test
]
fn
assert_restyle_hints_match
(
)
{
use
style
:
:
restyle_hints
:
:
*
;
use
gecko_bindings
:
:
structs
:
:
nsRestyleHint
;
check_enum_value_non_static
!
(
nsRestyleHint
:
:
eRestyle_Self
RESTYLE_SELF
.
bits
(
)
)
;
check_enum_value_non_static
!
(
nsRestyleHint
:
:
eRestyle_SomeDescendants
RESTYLE_DESCENDANTS
.
bits
(
)
)
;
check_enum_value_non_static
!
(
nsRestyleHint
:
:
eRestyle_LaterSiblings
RESTYLE_LATER_SIBLINGS
.
bits
(
)
)
;
}
