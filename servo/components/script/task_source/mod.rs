pub
mod
dom_manipulation
;
pub
mod
file_reading
;
pub
mod
history_traversal
;
pub
mod
networking
;
pub
mod
performance_timeline
;
pub
mod
user_interaction
;
use
dom
:
:
globalscope
:
:
GlobalScope
;
use
std
:
:
result
:
:
Result
;
use
task
:
:
{
TaskCanceller
TaskOnce
}
;
pub
trait
TaskSource
{
fn
queue_with_canceller
<
T
>
(
&
self
task
:
T
canceller
:
&
TaskCanceller
)
-
>
Result
<
(
)
(
)
>
where
T
:
TaskOnce
+
'
static
;
fn
queue
<
T
>
(
&
self
task
:
T
global
:
&
GlobalScope
)
-
>
Result
<
(
)
(
)
>
where
T
:
TaskOnce
+
'
static
{
self
.
queue_with_canceller
(
task
&
global
.
task_canceller
(
)
)
}
}
