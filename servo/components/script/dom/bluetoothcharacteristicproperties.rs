use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
BluetoothCharacteristicPropertiesBinding
;
use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
BluetoothCharacteristicPropertiesBinding
:
:
BluetoothCharacteristicPropertiesMethods
;
use
dom
:
:
bindings
:
:
global
:
:
GlobalRef
;
use
dom
:
:
bindings
:
:
js
:
:
Root
;
use
dom
:
:
bindings
:
:
reflector
:
:
{
Reflector
reflect_dom_object
}
;
#
[
dom_struct
]
pub
struct
BluetoothCharacteristicProperties
{
reflector_
:
Reflector
broadcast
:
bool
read
:
bool
write_without_response
:
bool
write
:
bool
notify
:
bool
indicate
:
bool
authenticated_signed_writes
:
bool
reliable_write
:
bool
writable_auxiliaries
:
bool
}
impl
BluetoothCharacteristicProperties
{
pub
fn
new_inherited
(
broadcast
:
bool
read
:
bool
write_without_response
:
bool
write
:
bool
notify
:
bool
indicate
:
bool
authenticated_signed_writes
:
bool
reliable_write
:
bool
writable_auxiliaries
:
bool
)
-
>
BluetoothCharacteristicProperties
{
BluetoothCharacteristicProperties
{
reflector_
:
Reflector
:
:
new
(
)
broadcast
:
broadcast
read
:
read
write_without_response
:
write_without_response
write
:
write
notify
:
notify
indicate
:
indicate
authenticated_signed_writes
:
authenticated_signed_writes
reliable_write
:
reliable_write
writable_auxiliaries
:
writable_auxiliaries
}
}
pub
fn
new
(
global
:
GlobalRef
broadcast
:
bool
read
:
bool
writeWithoutResponse
:
bool
write
:
bool
notify
:
bool
indicate
:
bool
authenticatedSignedWrites
:
bool
reliableWrite
:
bool
writableAuxiliaries
:
bool
)
-
>
Root
<
BluetoothCharacteristicProperties
>
{
reflect_dom_object
(
box
BluetoothCharacteristicProperties
:
:
new_inherited
(
broadcast
read
writeWithoutResponse
write
notify
indicate
authenticatedSignedWrites
reliableWrite
writableAuxiliaries
)
global
BluetoothCharacteristicPropertiesBinding
:
:
Wrap
)
}
}
impl
BluetoothCharacteristicPropertiesMethods
for
BluetoothCharacteristicProperties
{
fn
Broadcast
(
&
self
)
-
>
bool
{
self
.
broadcast
}
fn
Read
(
&
self
)
-
>
bool
{
self
.
read
}
fn
WriteWithoutResponse
(
&
self
)
-
>
bool
{
self
.
write_without_response
}
fn
Write
(
&
self
)
-
>
bool
{
self
.
write
}
fn
Notify
(
&
self
)
-
>
bool
{
self
.
notify
}
fn
Indicate
(
&
self
)
-
>
bool
{
self
.
indicate
}
fn
AuthenticatedSignedWrites
(
&
self
)
-
>
bool
{
self
.
authenticated_signed_writes
}
fn
ReliableWrite
(
&
self
)
-
>
bool
{
self
.
reliable_write
}
fn
WritableAuxiliaries
(
&
self
)
-
>
bool
{
self
.
writable_auxiliaries
}
}
