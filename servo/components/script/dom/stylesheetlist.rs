use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
StyleSheetListBinding
;
use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
StyleSheetListBinding
:
:
StyleSheetListMethods
;
use
dom
:
:
bindings
:
:
js
:
:
{
JS
Root
}
;
use
dom
:
:
bindings
:
:
reflector
:
:
{
Reflector
reflect_dom_object
}
;
use
dom
:
:
document
:
:
Document
;
use
dom
:
:
stylesheet
:
:
StyleSheet
;
use
dom
:
:
window
:
:
Window
;
use
dom_struct
:
:
dom_struct
;
#
[
dom_struct
]
pub
struct
StyleSheetList
{
reflector_
:
Reflector
document
:
JS
<
Document
>
}
impl
StyleSheetList
{
#
[
allow
(
unrooted_must_root
)
]
fn
new_inherited
(
doc
:
JS
<
Document
>
)
-
>
StyleSheetList
{
StyleSheetList
{
reflector_
:
Reflector
:
:
new
(
)
document
:
doc
}
}
#
[
allow
(
unrooted_must_root
)
]
pub
fn
new
(
window
:
&
Window
document
:
JS
<
Document
>
)
-
>
Root
<
StyleSheetList
>
{
reflect_dom_object
(
box
StyleSheetList
:
:
new_inherited
(
document
)
window
StyleSheetListBinding
:
:
Wrap
)
}
}
impl
StyleSheetListMethods
for
StyleSheetList
{
fn
Length
(
&
self
)
-
>
u32
{
self
.
document
.
stylesheet_count
(
)
as
u32
}
fn
Item
(
&
self
index
:
u32
)
-
>
Option
<
Root
<
StyleSheet
>
>
{
self
.
document
.
stylesheet_at
(
index
as
usize
)
.
map
(
Root
:
:
upcast
)
}
fn
IndexedGetter
(
&
self
index
:
u32
)
-
>
Option
<
Root
<
StyleSheet
>
>
{
self
.
Item
(
index
)
}
}
