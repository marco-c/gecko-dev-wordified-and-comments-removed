use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
HTMLMeterElementBinding
:
:
{
self
HTMLMeterElementMethods
}
;
use
dom
:
:
bindings
:
:
inheritance
:
:
Castable
;
use
dom
:
:
bindings
:
:
root
:
:
DomRoot
;
use
dom
:
:
document
:
:
Document
;
use
dom
:
:
htmlelement
:
:
HTMLElement
;
use
dom
:
:
node
:
:
Node
;
use
dom
:
:
nodelist
:
:
NodeList
;
use
dom_struct
:
:
dom_struct
;
use
html5ever
:
:
{
LocalName
Prefix
}
;
#
[
dom_struct
]
pub
struct
HTMLMeterElement
{
htmlelement
:
HTMLElement
}
impl
HTMLMeterElement
{
fn
new_inherited
(
local_name
:
LocalName
prefix
:
Option
<
Prefix
>
document
:
&
Document
)
-
>
HTMLMeterElement
{
HTMLMeterElement
{
htmlelement
:
HTMLElement
:
:
new_inherited
(
local_name
prefix
document
)
}
}
#
[
allow
(
unrooted_must_root
)
]
pub
fn
new
(
local_name
:
LocalName
prefix
:
Option
<
Prefix
>
document
:
&
Document
)
-
>
DomRoot
<
HTMLMeterElement
>
{
Node
:
:
reflect_node
(
Box
:
:
new
(
HTMLMeterElement
:
:
new_inherited
(
local_name
prefix
document
)
)
document
HTMLMeterElementBinding
:
:
Wrap
)
}
}
impl
HTMLMeterElementMethods
for
HTMLMeterElement
{
fn
Labels
(
&
self
)
-
>
DomRoot
<
NodeList
>
{
self
.
upcast
:
:
<
HTMLElement
>
(
)
.
labels
(
)
}
}
