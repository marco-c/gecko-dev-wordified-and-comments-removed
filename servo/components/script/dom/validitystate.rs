use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
ValidityStateBinding
;
use
dom
:
:
bindings
:
:
global
:
:
GlobalRef
;
use
dom
:
:
bindings
:
:
js
:
:
Root
;
use
dom
:
:
bindings
:
:
utils
:
:
{
Reflector
reflect_dom_object
}
;
use
dom
:
:
window
:
:
Window
;
#
[
dom_struct
]
#
[
derive
(
HeapSizeOf
)
]
pub
struct
ValidityState
{
reflector_
:
Reflector
state
:
u8
}
impl
ValidityState
{
fn
new_inherited
(
)
-
>
ValidityState
{
ValidityState
{
reflector_
:
Reflector
:
:
new
(
)
state
:
0
}
}
pub
fn
new
(
window
:
&
Window
)
-
>
Root
<
ValidityState
>
{
reflect_dom_object
(
box
ValidityState
:
:
new_inherited
(
)
GlobalRef
:
:
Window
(
window
)
ValidityStateBinding
:
:
Wrap
)
}
}
