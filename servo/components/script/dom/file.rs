use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
FileBinding
;
use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
FileBinding
:
:
FileMethods
;
use
dom
:
:
bindings
:
:
global
:
:
GlobalRef
;
use
dom
:
:
bindings
:
:
js
:
:
Root
;
use
dom
:
:
bindings
:
:
reflector
:
:
reflect_dom_object
;
use
dom
:
:
blob
:
:
Blob
;
use
std
:
:
sync
:
:
Arc
;
use
util
:
:
str
:
:
DOMString
;
#
[
dom_struct
]
pub
struct
File
{
blob
:
Blob
name
:
DOMString
}
impl
File
{
fn
new_inherited
(
_file_bits
:
&
Blob
name
:
DOMString
)
-
>
File
{
File
{
blob
:
Blob
:
:
new_inherited
(
Arc
:
:
new
(
Vec
:
:
new
(
)
)
None
None
"
"
)
name
:
name
}
}
pub
fn
new
(
global
:
GlobalRef
file_bits
:
&
Blob
name
:
DOMString
)
-
>
Root
<
File
>
{
reflect_dom_object
(
box
File
:
:
new_inherited
(
file_bits
name
)
global
FileBinding
:
:
Wrap
)
}
pub
fn
name
(
&
self
)
-
>
&
DOMString
{
&
self
.
name
}
}
impl
FileMethods
for
File
{
fn
Name
(
&
self
)
-
>
DOMString
{
self
.
name
.
clone
(
)
}
}
