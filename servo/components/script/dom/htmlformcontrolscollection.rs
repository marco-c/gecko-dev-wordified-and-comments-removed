use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
HTMLCollectionBinding
:
:
HTMLCollectionMethods
;
use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
HTMLFormControlsCollectionBinding
;
use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
HTMLFormControlsCollectionBinding
:
:
HTMLFormControlsCollectionMethods
;
use
dom
:
:
bindings
:
:
global
:
:
GlobalRef
;
use
dom
:
:
bindings
:
:
js
:
:
Root
;
use
dom
:
:
bindings
:
:
reflector
:
:
reflect_dom_object
;
use
dom
:
:
element
:
:
Element
;
use
dom
:
:
htmlcollection
:
:
{
CollectionFilter
HTMLCollection
}
;
use
dom
:
:
node
:
:
Node
;
use
dom
:
:
window
:
:
Window
;
use
util
:
:
str
:
:
DOMString
;
#
[
dom_struct
]
pub
struct
HTMLFormControlsCollection
{
collection
:
HTMLCollection
}
impl
HTMLFormControlsCollection
{
fn
new_inherited
(
root
:
&
Node
filter
:
Box
<
CollectionFilter
+
'
static
>
)
-
>
HTMLFormControlsCollection
{
HTMLFormControlsCollection
{
collection
:
HTMLCollection
:
:
new_inherited
(
root
filter
)
}
}
pub
fn
new
(
window
:
&
Window
root
:
&
Node
filter
:
Box
<
CollectionFilter
+
'
static
>
)
-
>
Root
<
HTMLFormControlsCollection
>
{
reflect_dom_object
(
box
HTMLFormControlsCollection
:
:
new_inherited
(
root
filter
)
GlobalRef
:
:
Window
(
window
)
HTMLFormControlsCollectionBinding
:
:
Wrap
)
}
pub
fn
Length
(
&
self
)
-
>
u32
{
self
.
collection
.
Length
(
)
}
}
impl
HTMLFormControlsCollectionMethods
for
HTMLFormControlsCollection
{
fn
NamedGetter
(
&
self
name
:
DOMString
found
:
&
mut
bool
)
-
>
Option
<
Root
<
Element
>
>
{
self
.
collection
.
NamedGetter
(
name
found
)
}
fn
SupportedPropertyNames
(
&
self
)
-
>
Vec
<
DOMString
>
{
self
.
collection
.
SupportedPropertyNames
(
)
}
fn
IndexedGetter
(
&
self
index
:
u32
found
:
&
mut
bool
)
-
>
Option
<
Root
<
Element
>
>
{
self
.
collection
.
IndexedGetter
(
index
found
)
}
}
