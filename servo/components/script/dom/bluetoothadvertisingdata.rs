use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
BluetoothAdvertisingDataBinding
;
use
dom
:
:
bindings
:
:
codegen
:
:
Bindings
:
:
BluetoothAdvertisingDataBinding
:
:
BluetoothAdvertisingDataMethods
;
use
dom
:
:
bindings
:
:
global
:
:
GlobalRef
;
use
dom
:
:
bindings
:
:
js
:
:
Root
;
use
dom
:
:
bindings
:
:
reflector
:
:
{
Reflector
reflect_dom_object
}
;
#
[
dom_struct
]
pub
struct
BluetoothAdvertisingData
{
reflector_
:
Reflector
appearance
:
Option
<
u16
>
tx_power
:
Option
<
i8
>
rssi
:
Option
<
i8
>
}
impl
BluetoothAdvertisingData
{
pub
fn
new_inherited
(
appearance
:
Option
<
u16
>
tx_power
:
Option
<
i8
>
rssi
:
Option
<
i8
>
)
-
>
BluetoothAdvertisingData
{
BluetoothAdvertisingData
{
reflector_
:
Reflector
:
:
new
(
)
appearance
:
appearance
tx_power
:
tx_power
rssi
:
rssi
}
}
pub
fn
new
(
global
:
GlobalRef
appearance
:
Option
<
u16
>
txPower
:
Option
<
i8
>
rssi
:
Option
<
i8
>
)
-
>
Root
<
BluetoothAdvertisingData
>
{
reflect_dom_object
(
box
BluetoothAdvertisingData
:
:
new_inherited
(
appearance
txPower
rssi
)
global
BluetoothAdvertisingDataBinding
:
:
Wrap
)
}
}
impl
BluetoothAdvertisingDataMethods
for
BluetoothAdvertisingData
{
fn
GetAppearance
(
&
self
)
-
>
Option
<
u16
>
{
self
.
appearance
}
fn
GetTxPower
(
&
self
)
-
>
Option
<
i8
>
{
self
.
tx_power
}
fn
GetRssi
(
&
self
)
-
>
Option
<
i8
>
{
self
.
rssi
}
}
