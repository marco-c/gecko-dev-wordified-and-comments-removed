use
dom
:
:
bindings
:
:
error
:
:
{
Error
Fallible
}
;
use
dom
:
:
bindings
:
:
global
:
:
GlobalRef
;
use
dom
:
:
bindings
:
:
utils
:
:
Reflector
;
use
util
:
:
str
:
:
DOMString
;
use
cssparser
:
:
serialize_identifier
;
#
[
dom_struct
]
pub
struct
CSS
{
reflector_
:
Reflector
}
impl
CSS
{
pub
fn
Escape
(
_
:
GlobalRef
ident
:
DOMString
)
-
>
Fallible
<
DOMString
>
{
if
ident
.
bytes
(
)
.
any
(
|
b
|
b
=
=
b
'
\
0
'
)
{
return
Err
(
Error
:
:
InvalidCharacter
)
;
}
let
mut
escaped
=
DOMString
:
:
new
(
)
;
serialize_identifier
(
&
ident
&
mut
escaped
)
.
unwrap
(
)
;
Ok
(
escaped
)
}
}
