use
std
:
:
collections
:
:
LinkedList
;
use
std
:
:
mem
;
pub
fn
split_off_head
<
T
>
(
list
:
&
mut
LinkedList
<
T
>
)
-
>
LinkedList
<
T
>
{
let
tail
=
list
.
split_off
(
1
)
;
mem
:
:
replace
(
list
tail
)
}
#
[
inline
]
pub
fn
prepend_from
<
T
>
(
this
:
&
mut
LinkedList
<
T
>
other
:
&
mut
LinkedList
<
T
>
)
{
other
.
append
(
this
)
;
mem
:
:
swap
(
this
other
)
;
}
