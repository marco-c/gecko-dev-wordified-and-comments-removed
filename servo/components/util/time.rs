use
std
:
:
time
:
:
Duration
;
use
std
:
:
{
u32
u64
}
;
pub
const
NANOS_PER_SEC
:
u32
=
1_000_000_000
;
pub
fn
duration_from_seconds
(
secs
:
f64
)
-
>
Duration
{
let
whole_secs
=
secs
.
trunc
(
)
;
assert
!
(
whole_secs
>
=
0
.
0
&
&
whole_secs
<
=
u64
:
:
MAX
as
f64
)
;
let
nanos
=
(
secs
.
fract
(
)
*
(
NANOS_PER_SEC
as
f64
)
)
.
trunc
(
)
;
assert
!
(
nanos
>
=
0
.
0
&
&
nanos
<
=
u32
:
:
MAX
as
f64
)
;
Duration
:
:
new
(
whole_secs
as
u64
nanos
as
u32
)
}
pub
fn
duration_from_nanoseconds
(
nanos
:
u64
)
-
>
Duration
{
let
secs
=
nanos
/
NANOS_PER_SEC
as
u64
;
let
subsec_nanos
=
nanos
%
NANOS_PER_SEC
as
u64
;
assert
!
(
subsec_nanos
<
=
u32
:
:
MAX
as
u64
)
;
Duration
:
:
new
(
secs
subsec_nanos
as
u32
)
}
