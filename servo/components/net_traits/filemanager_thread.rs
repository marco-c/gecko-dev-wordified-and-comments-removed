use
blob_url_store
:
:
BlobURLStoreMsg
;
use
ipc_channel
:
:
ipc
:
:
IpcSender
;
use
std
:
:
path
:
:
PathBuf
;
use
super
:
:
{
LoadConsumer
LoadData
}
;
#
[
derive
(
Clone
Debug
Deserialize
Serialize
)
]
pub
struct
SelectedFileId
(
pub
String
)
;
#
[
derive
(
Debug
Deserialize
Serialize
)
]
pub
struct
SelectedFile
{
pub
id
:
SelectedFileId
pub
filename
:
PathBuf
pub
modified
:
u64
pub
type_string
:
String
}
#
[
derive
(
Clone
Debug
Deserialize
Serialize
)
]
pub
struct
FilterPattern
(
pub
String
)
;
#
[
derive
(
Deserialize
Serialize
)
]
pub
enum
FileManagerThreadMsg
{
SelectFile
(
Vec
<
FilterPattern
>
IpcSender
<
FileManagerResult
<
SelectedFile
>
>
)
SelectFiles
(
Vec
<
FilterPattern
>
IpcSender
<
FileManagerResult
<
Vec
<
SelectedFile
>
>
>
)
ReadFile
(
IpcSender
<
FileManagerResult
<
Vec
<
u8
>
>
>
SelectedFileId
)
DeleteFileID
(
SelectedFileId
)
BlobURLStoreMsg
(
BlobURLStoreMsg
)
LoadBlob
(
LoadData
LoadConsumer
)
Exit
}
pub
type
FileManagerResult
<
T
>
=
Result
<
T
FileManagerThreadError
>
;
#
[
derive
(
Debug
Deserialize
Serialize
)
]
pub
enum
FileManagerThreadError
{
InvalidSelection
UserCancelled
FileInfoProcessingError
ReadFileError
}
