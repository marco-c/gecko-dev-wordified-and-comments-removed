#
!
[
crate_name
=
"
devtools_traits
"
]
#
!
[
crate_type
=
"
rlib
"
]
#
!
[
comment
=
"
The
Servo
Parallel
Browser
Project
"
]
#
!
[
license
=
"
MPL
"
]
#
!
[
allow
(
non_snake_case
)
]
extern
crate
"
msg
"
as
servo_msg
;
use
servo_msg
:
:
constellation_msg
:
:
PipelineId
;
pub
type
DevtoolsControlChan
=
Sender
<
DevtoolsControlMsg
>
;
pub
type
DevtoolsControlPort
=
Receiver
<
DevtoolScriptControlMsg
>
;
pub
enum
DevtoolsControlMsg
{
NewGlobal
(
PipelineId
Sender
<
DevtoolScriptControlMsg
>
)
ServerExitMsg
}
pub
enum
EvaluateJSReply
{
VoidValue
NullValue
BooleanValue
(
bool
)
NumberValue
(
f64
)
StringValue
(
String
)
ActorValue
(
String
)
}
pub
struct
AttrInfo
{
pub
namespace
:
String
pub
name
:
String
pub
value
:
String
}
pub
struct
NodeInfo
{
pub
uniqueId
:
String
pub
baseURI
:
String
pub
parent
:
String
pub
nodeType
:
uint
pub
namespaceURI
:
String
pub
nodeName
:
String
pub
numChildren
:
uint
pub
name
:
String
pub
publicId
:
String
pub
systemId
:
String
pub
attrs
:
Vec
<
AttrInfo
>
pub
isDocumentElement
:
bool
pub
shortValue
:
String
pub
incompleteValue
:
bool
}
pub
enum
DevtoolScriptControlMsg
{
EvaluateJS
(
PipelineId
String
Sender
<
EvaluateJSReply
>
)
GetRootNode
(
PipelineId
Sender
<
NodeInfo
>
)
GetDocumentElement
(
PipelineId
Sender
<
NodeInfo
>
)
GetChildren
(
PipelineId
String
Sender
<
Vec
<
NodeInfo
>
>
)
GetLayout
(
PipelineId
String
Sender
<
(
f32
f32
)
>
)
}
pub
enum
ScriptDevtoolControlMsg
{
ReportConsoleMsg
(
String
)
}
