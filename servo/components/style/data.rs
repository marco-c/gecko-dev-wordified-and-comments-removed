use
properties
:
:
ComputedValues
;
use
selector_impl
:
:
PseudoElement
;
use
std
:
:
collections
:
:
HashMap
;
use
std
:
:
hash
:
:
BuildHasherDefault
;
use
std
:
:
sync
:
:
Arc
;
use
std
:
:
sync
:
:
atomic
:
:
AtomicIsize
;
pub
struct
PrivateStyleData
{
pub
style
:
Option
<
Arc
<
ComputedValues
>
>
pub
per_pseudo
:
HashMap
<
PseudoElement
Arc
<
ComputedValues
>
BuildHasherDefault
<
:
:
fnv
:
:
FnvHasher
>
>
pub
parallel
:
DomParallelInfo
}
impl
PrivateStyleData
{
pub
fn
new
(
)
-
>
Self
{
PrivateStyleData
{
style
:
None
per_pseudo
:
HashMap
:
:
with_hasher
(
Default
:
:
default
(
)
)
parallel
:
DomParallelInfo
:
:
new
(
)
}
}
}
#
[
cfg_attr
(
feature
=
"
servo
"
derive
(
HeapSizeOf
)
)
]
pub
struct
DomParallelInfo
{
pub
children_to_process
:
AtomicIsize
}
impl
DomParallelInfo
{
pub
fn
new
(
)
-
>
DomParallelInfo
{
DomParallelInfo
{
children_to_process
:
AtomicIsize
:
:
new
(
0
)
}
}
}
