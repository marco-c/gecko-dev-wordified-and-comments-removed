use
values
:
:
computed
:
:
Number
;
use
values
:
:
computed
:
:
length
:
:
{
LengthOrPercentage
NonNegativeLength
}
;
use
values
:
:
generics
:
:
box_
:
:
AnimationIterationCount
as
GenericAnimationIterationCount
;
use
values
:
:
generics
:
:
box_
:
:
Perspective
as
GenericPerspective
;
use
values
:
:
generics
:
:
box_
:
:
VerticalAlign
as
GenericVerticalAlign
;
pub
use
values
:
:
specified
:
:
box_
:
:
{
AnimationName
Contain
Display
OverflowClipBox
}
;
pub
use
values
:
:
specified
:
:
box_
:
:
{
OverscrollBehavior
ScrollSnapType
TouchAction
WillChange
}
;
pub
type
VerticalAlign
=
GenericVerticalAlign
<
LengthOrPercentage
>
;
pub
type
AnimationIterationCount
=
GenericAnimationIterationCount
<
Number
>
;
impl
AnimationIterationCount
{
#
[
inline
]
pub
fn
one
(
)
-
>
Self
{
GenericAnimationIterationCount
:
:
Number
(
1
.
0
)
}
}
pub
type
Perspective
=
GenericPerspective
<
NonNegativeLength
>
;
