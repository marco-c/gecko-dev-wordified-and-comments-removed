use
crate
:
:
values
:
:
computed
:
:
{
Angle
LengthPercentage
}
;
use
crate
:
:
values
:
:
generics
:
:
motion
:
:
{
GenericOffsetPath
GenericOffsetPosition
}
;
use
crate
:
:
Zero
;
pub
type
OffsetPath
=
GenericOffsetPath
<
Angle
>
;
pub
type
OffsetPosition
=
GenericOffsetPosition
<
LengthPercentage
LengthPercentage
>
;
#
[
inline
]
fn
is_auto_zero_angle
(
auto
:
&
bool
angle
:
&
Angle
)
-
>
bool
{
*
auto
&
&
angle
.
is_zero
(
)
}
#
[
derive
(
Animate
Clone
ComputeSquaredDistance
Copy
Debug
Deserialize
MallocSizeOf
PartialEq
Serialize
ToAnimatedZero
ToCss
ToResolvedValue
)
]
#
[
repr
(
C
)
]
pub
struct
OffsetRotate
{
#
[
animation
(
constant
)
]
#
[
css
(
represents_keyword
)
]
pub
auto
:
bool
#
[
css
(
contextual_skip_if
=
"
is_auto_zero_angle
"
)
]
pub
angle
:
Angle
}
impl
OffsetRotate
{
#
[
inline
]
pub
fn
auto
(
)
-
>
Self
{
OffsetRotate
{
auto
:
true
angle
:
Zero
:
:
zero
(
)
}
}
}
