use
super
:
:
{
Animate
Procedure
ToAnimatedZero
}
;
use
crate
:
:
values
:
:
computed
:
:
font
:
:
FontVariationSettings
;
use
crate
:
:
values
:
:
distance
:
:
{
ComputeSquaredDistance
SquaredDistance
}
;
impl
Animate
for
FontVariationSettings
{
#
[
inline
]
fn
animate
(
&
self
other
:
&
Self
procedure
:
Procedure
)
-
>
Result
<
Self
(
)
>
{
let
result
:
Box
<
[
_
]
>
=
super
:
:
lists
:
:
by_computed_value
:
:
animate
(
&
self
.
0
&
other
.
0
procedure
)
?
;
Ok
(
Self
(
result
)
)
}
}
impl
ComputeSquaredDistance
for
FontVariationSettings
{
#
[
inline
]
fn
compute_squared_distance
(
&
self
other
:
&
Self
)
-
>
Result
<
SquaredDistance
(
)
>
{
super
:
:
lists
:
:
by_computed_value
:
:
squared_distance
(
&
self
.
0
&
other
.
0
)
}
}
impl
ToAnimatedZero
for
FontVariationSettings
{
#
[
inline
]
fn
to_animated_zero
(
&
self
)
-
>
Result
<
Self
(
)
>
{
Err
(
(
)
)
}
}
