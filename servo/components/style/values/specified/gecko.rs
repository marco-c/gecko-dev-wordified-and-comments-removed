use
cssparser
:
:
Parser
;
use
parser
:
:
{
Parse
ParserContext
}
;
use
values
:
:
generics
:
:
gecko
:
:
ScrollSnapPoint
as
GenericScrollSnapPoint
;
use
values
:
:
specified
:
:
length
:
:
LengthOrPercentage
;
pub
type
ScrollSnapPoint
=
GenericScrollSnapPoint
<
LengthOrPercentage
>
;
impl
Parse
for
ScrollSnapPoint
{
fn
parse
(
context
:
&
ParserContext
input
:
&
mut
Parser
)
-
>
Result
<
Self
(
)
>
{
if
input
.
try
(
|
i
|
i
.
expect_ident_matching
(
"
none
"
)
)
.
is_ok
(
)
{
return
Ok
(
GenericScrollSnapPoint
:
:
None
)
;
}
input
.
expect_function_matching
(
"
repeat
"
)
?
;
let
length
=
input
.
parse_nested_block
(
|
i
|
{
LengthOrPercentage
:
:
parse_non_negative
(
context
i
)
}
)
?
;
Ok
(
GenericScrollSnapPoint
:
:
Repeat
(
length
)
)
}
}
