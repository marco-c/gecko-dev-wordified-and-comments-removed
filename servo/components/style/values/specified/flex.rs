use
cssparser
:
:
Parser
;
use
parser
:
:
{
Parse
ParserContext
}
;
use
style_traits
:
:
ParseError
;
use
values
:
:
generics
:
:
flex
:
:
FlexBasis
as
GenericFlexBasis
;
use
values
:
:
specified
:
:
length
:
:
LengthOrPercentage
;
pub
type
FlexBasis
=
GenericFlexBasis
<
LengthOrPercentage
>
;
impl
Parse
for
FlexBasis
{
fn
parse
<
'
i
'
t
>
(
context
:
&
ParserContext
input
:
&
mut
Parser
<
'
i
'
t
>
)
-
>
Result
<
Self
ParseError
<
'
i
>
>
{
if
let
Ok
(
length
)
=
input
.
try
(
|
i
|
LengthOrPercentage
:
:
parse_non_negative
(
context
i
)
)
{
return
Ok
(
GenericFlexBasis
:
:
Length
(
length
)
)
;
}
try_match_ident_ignore_ascii_case
!
{
input
.
expect_ident
(
)
?
"
auto
"
=
>
Ok
(
GenericFlexBasis
:
:
Auto
)
"
content
"
=
>
Ok
(
GenericFlexBasis
:
:
Content
)
}
}
}
