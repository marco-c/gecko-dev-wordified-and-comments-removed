use
std
:
:
fmt
;
use
style_traits
:
:
ToCss
;
#
[
derive
(
Clone
Copy
Debug
HasViewportPercentage
PartialEq
ToComputedValue
)
]
pub
enum
ScrollSnapPoint
<
LengthOrPercentage
>
{
None
Repeat
(
LengthOrPercentage
)
}
impl
<
L
>
ScrollSnapPoint
<
L
>
{
#
[
inline
]
pub
fn
none
(
)
-
>
Self
{
ScrollSnapPoint
:
:
None
}
#
[
inline
]
pub
fn
repeated
(
&
self
)
-
>
Option
<
&
L
>
{
match
*
self
{
ScrollSnapPoint
:
:
None
=
>
None
ScrollSnapPoint
:
:
Repeat
(
ref
length
)
=
>
Some
(
length
)
}
}
}
impl
<
L
>
ToCss
for
ScrollSnapPoint
<
L
>
where
L
:
ToCss
{
fn
to_css
<
W
>
(
&
self
dest
:
&
mut
W
)
-
>
fmt
:
:
Result
where
W
:
fmt
:
:
Write
{
match
*
self
{
ScrollSnapPoint
:
:
None
=
>
dest
.
write_str
(
"
none
"
)
ScrollSnapPoint
:
:
Repeat
(
ref
length
)
=
>
{
dest
.
write_str
(
"
repeat
(
"
)
?
;
length
.
to_css
(
dest
)
?
;
dest
.
write_str
(
"
)
"
)
}
}
}
}
