use
values
:
:
computed
:
:
{
Context
ToComputedValue
}
;
#
[
derive
(
Clone
Copy
Debug
HasViewportPercentage
PartialEq
)
]
#
[
cfg_attr
(
feature
=
"
servo
"
derive
(
HeapSizeOf
)
)
]
pub
struct
Position
<
H
V
>
{
pub
horizontal
:
H
pub
vertical
:
V
}
impl
<
H
V
>
Position
<
H
V
>
{
pub
fn
new
(
horizontal
:
H
vertical
:
V
)
-
>
Self
{
Self
{
horizontal
:
horizontal
vertical
:
vertical
}
}
}
impl
<
H
:
ToComputedValue
V
:
ToComputedValue
>
ToComputedValue
for
Position
<
H
V
>
{
type
ComputedValue
=
Position
<
<
H
as
ToComputedValue
>
:
:
ComputedValue
<
V
as
ToComputedValue
>
:
:
ComputedValue
>
;
#
[
inline
]
fn
to_computed_value
(
&
self
context
:
&
Context
)
-
>
Self
:
:
ComputedValue
{
Position
{
horizontal
:
self
.
horizontal
.
to_computed_value
(
context
)
vertical
:
self
.
vertical
.
to_computed_value
(
context
)
}
}
#
[
inline
]
fn
from_computed_value
(
computed
:
&
Self
:
:
ComputedValue
)
-
>
Self
{
Self
{
horizontal
:
ToComputedValue
:
:
from_computed_value
(
&
computed
.
horizontal
)
vertical
:
ToComputedValue
:
:
from_computed_value
(
&
computed
.
vertical
)
}
}
}
