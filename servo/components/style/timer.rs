#
!
[
deny
(
missing_docs
)
]
use
time
;
#
[
derive
(
Clone
Debug
)
]
enum
TimerMode
{
Test
(
f64
)
Current
}
#
[
derive
(
Clone
Debug
)
]
pub
struct
Timer
{
mode
:
TimerMode
}
impl
Timer
{
#
[
inline
]
pub
fn
new
(
)
-
>
Self
{
Timer
{
mode
:
TimerMode
:
:
Current
}
}
#
[
inline
]
pub
fn
test_mode
(
)
-
>
Self
{
Timer
{
mode
:
TimerMode
:
:
Test
(
0
.
)
}
}
pub
fn
seconds
(
&
self
)
-
>
f64
{
match
self
.
mode
{
TimerMode
:
:
Test
(
test_value
)
=
>
test_value
TimerMode
:
:
Current
=
>
time
:
:
precise_time_s
(
)
}
}
pub
fn
increment
(
&
mut
self
by
:
f64
)
{
match
self
.
mode
{
TimerMode
:
:
Test
(
ref
mut
val
)
=
>
*
val
+
=
by
TimerMode
:
:
Current
=
>
panic
!
(
"
Timer
:
:
increment
called
for
a
non
-
test
mode
timer
.
This
is
a
bug
.
"
)
}
}
}
