use
cssparser
:
:
SourceLocation
;
use
shared_lock
:
:
{
SharedRwLockReadGuard
ToCssWithGuard
}
;
use
std
:
:
fmt
;
use
style_traits
:
:
ToCss
;
use
stylearc
:
:
Arc
;
use
stylesheets
:
:
stylesheet
:
:
Stylesheet
;
use
values
:
:
specified
:
:
url
:
:
SpecifiedUrl
;
#
[
derive
(
Debug
)
]
pub
struct
ImportRule
{
pub
url
:
SpecifiedUrl
pub
stylesheet
:
Arc
<
Stylesheet
>
pub
source_location
:
SourceLocation
}
impl
Clone
for
ImportRule
{
fn
clone
(
&
self
)
-
>
ImportRule
{
let
stylesheet
:
&
Stylesheet
=
&
*
self
.
stylesheet
;
ImportRule
{
url
:
self
.
url
.
clone
(
)
stylesheet
:
Arc
:
:
new
(
stylesheet
.
clone
(
)
)
source_location
:
self
.
source_location
.
clone
(
)
}
}
}
impl
ToCssWithGuard
for
ImportRule
{
fn
to_css
<
W
>
(
&
self
guard
:
&
SharedRwLockReadGuard
dest
:
&
mut
W
)
-
>
fmt
:
:
Result
where
W
:
fmt
:
:
Write
{
dest
.
write_str
(
"
import
"
)
?
;
self
.
url
.
to_css
(
dest
)
?
;
let
media
=
self
.
stylesheet
.
media
.
read_with
(
guard
)
;
if
!
media
.
is_empty
(
)
{
dest
.
write_str
(
"
"
)
?
;
media
.
to_css
(
dest
)
?
;
}
dest
.
write_str
(
"
;
"
)
}
}
