use
super
:
:
{
Component
ComponentName
Multiplier
}
;
#
[
derive
(
Clone
Copy
Debug
MallocSizeOf
PartialEq
)
]
pub
enum
DataType
{
Length
Number
Percentage
LengthPercentage
Color
Image
Url
Integer
Angle
Time
Resolution
TransformFunction
CustomIdent
TransformList
String
}
impl
DataType
{
pub
fn
unpremultiply
(
&
self
)
-
>
Option
<
Component
>
{
match
*
self
{
DataType
:
:
TransformList
=
>
Some
(
Component
{
name
:
ComponentName
:
:
DataType
(
DataType
:
:
TransformFunction
)
multiplier
:
Some
(
Multiplier
:
:
Space
)
}
)
_
=
>
None
}
}
pub
fn
from_str
(
ty
:
&
str
)
-
>
Option
<
Self
>
{
Some
(
match
ty
.
as_bytes
(
)
{
b
"
length
"
=
>
DataType
:
:
Length
b
"
number
"
=
>
DataType
:
:
Number
b
"
percentage
"
=
>
DataType
:
:
Percentage
b
"
length
-
percentage
"
=
>
DataType
:
:
LengthPercentage
b
"
color
"
=
>
DataType
:
:
Color
b
"
image
"
=
>
DataType
:
:
Image
b
"
url
"
=
>
DataType
:
:
Url
b
"
integer
"
=
>
DataType
:
:
Integer
b
"
angle
"
=
>
DataType
:
:
Angle
b
"
time
"
=
>
DataType
:
:
Time
b
"
resolution
"
=
>
DataType
:
:
Resolution
b
"
transform
-
function
"
=
>
DataType
:
:
TransformFunction
b
"
custom
-
ident
"
=
>
DataType
:
:
CustomIdent
b
"
transform
-
list
"
=
>
DataType
:
:
TransformList
b
"
string
"
=
>
DataType
:
:
String
_
=
>
return
None
}
)
}
}
