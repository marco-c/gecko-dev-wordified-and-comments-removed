use
crate
:
:
context
:
:
QuirksMode
;
use
crate
:
:
media_queries
:
:
Device
;
use
crate
:
:
shared_lock
:
:
SharedRwLockReadGuard
;
use
crate
:
:
stylesheets
:
:
{
DocumentRule
ImportRule
MediaRule
}
;
use
crate
:
:
stylesheets
:
:
{
NestedRuleIterationCondition
Stylesheet
SupportsRule
}
;
use
fxhash
:
:
FxHashSet
;
#
[
derive
(
Clone
Copy
Debug
Eq
Hash
MallocSizeOf
PartialEq
)
]
pub
struct
MediaListKey
(
usize
)
;
impl
MediaListKey
{
pub
fn
from_raw
(
k
:
usize
)
-
>
Self
{
MediaListKey
(
k
)
}
}
pub
trait
ToMediaListKey
:
Sized
{
#
[
allow
(
unsafe_code
)
]
fn
to_media_list_key
(
&
self
)
-
>
MediaListKey
{
use
std
:
:
mem
;
MediaListKey
(
unsafe
{
mem
:
:
transmute
(
self
as
*
const
Self
)
}
)
}
}
impl
ToMediaListKey
for
Stylesheet
{
}
impl
ToMediaListKey
for
ImportRule
{
}
impl
ToMediaListKey
for
MediaRule
{
}
#
[
derive
(
Debug
MallocSizeOf
PartialEq
)
]
pub
struct
EffectiveMediaQueryResults
{
set
:
FxHashSet
<
MediaListKey
>
}
impl
EffectiveMediaQueryResults
{
pub
fn
new
(
)
-
>
Self
{
Self
{
set
:
FxHashSet
:
:
default
(
)
}
}
pub
fn
clear
(
&
mut
self
)
{
self
.
set
.
clear
(
)
}
pub
fn
was_effective
<
T
>
(
&
self
item
:
&
T
)
-
>
bool
where
T
:
ToMediaListKey
{
self
.
set
.
contains
(
&
item
.
to_media_list_key
(
)
)
}
pub
fn
saw_effective
<
T
>
(
&
mut
self
item
:
&
T
)
where
T
:
ToMediaListKey
{
self
.
set
.
insert
(
item
.
to_media_list_key
(
)
)
;
}
}
pub
struct
PotentiallyEffectiveMediaRules
;
impl
NestedRuleIterationCondition
for
PotentiallyEffectiveMediaRules
{
fn
process_import
(
_
:
&
SharedRwLockReadGuard
_
:
&
Device
_
:
QuirksMode
_
:
&
ImportRule
)
-
>
bool
{
true
}
fn
process_media
(
_
:
&
SharedRwLockReadGuard
_
:
&
Device
_
:
QuirksMode
_
:
&
MediaRule
)
-
>
bool
{
true
}
fn
process_document
(
guard
:
&
SharedRwLockReadGuard
device
:
&
Device
quirks_mode
:
QuirksMode
rule
:
&
DocumentRule
)
-
>
bool
{
use
crate
:
:
stylesheets
:
:
EffectiveRules
;
EffectiveRules
:
:
process_document
(
guard
device
quirks_mode
rule
)
}
fn
process_supports
(
guard
:
&
SharedRwLockReadGuard
device
:
&
Device
quirks_mode
:
QuirksMode
rule
:
&
SupportsRule
)
-
>
bool
{
use
crate
:
:
stylesheets
:
:
EffectiveRules
;
EffectiveRules
:
:
process_supports
(
guard
device
quirks_mode
rule
)
}
}
