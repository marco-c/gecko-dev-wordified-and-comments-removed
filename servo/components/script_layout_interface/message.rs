use
{
OpaqueStyleAndLayoutData
TrustedNodeAddress
PendingImage
}
;
use
app_units
:
:
Au
;
use
euclid
:
:
{
Point2D
Rect
}
;
use
gfx_traits
:
:
Epoch
;
use
ipc_channel
:
:
ipc
:
:
{
IpcReceiver
IpcSender
}
;
use
metrics
:
:
PaintTimeMetrics
;
use
msg
:
:
constellation_msg
:
:
PipelineId
;
use
net_traits
:
:
image_cache
:
:
ImageCache
;
use
profile_traits
:
:
mem
:
:
ReportsChan
;
use
rpc
:
:
LayoutRPC
;
use
script_traits
:
:
{
ConstellationControlMsg
LayoutControlMsg
LayoutMsg
as
ConstellationMsg
}
;
use
script_traits
:
:
{
ScrollState
UntrustedNodeAddress
WindowSizeData
}
;
use
script_traits
:
:
Painter
;
use
servo_arc
:
:
Arc
as
ServoArc
;
use
servo_atoms
:
:
Atom
;
use
servo_url
:
:
ServoUrl
;
use
std
:
:
sync
:
:
Arc
;
use
std
:
:
sync
:
:
mpsc
:
:
{
Receiver
Sender
}
;
use
style
:
:
context
:
:
{
QuirksMode
ReflowGoal
}
;
use
style
:
:
properties
:
:
PropertyId
;
use
style
:
:
selector_parser
:
:
PseudoElement
;
use
style
:
:
stylesheets
:
:
Stylesheet
;
pub
enum
Msg
{
AddStylesheet
(
ServoArc
<
Stylesheet
>
)
SetQuirksMode
(
QuirksMode
)
Reflow
(
ScriptReflow
)
GetRPC
(
Sender
<
Box
<
LayoutRPC
+
Send
>
>
)
TickAnimations
AdvanceClockMs
(
i32
bool
)
ReapStyleAndLayoutData
(
OpaqueStyleAndLayoutData
)
CollectReports
(
ReportsChan
)
PrepareToExit
(
Sender
<
(
)
>
)
ExitNow
GetCurrentEpoch
(
IpcSender
<
Epoch
>
)
GetWebFontLoadState
(
IpcSender
<
bool
>
)
CreateLayoutThread
(
NewLayoutThreadInfo
)
SetFinalUrl
(
ServoUrl
)
SetScrollStates
(
Vec
<
ScrollState
>
)
UpdateScrollStateFromScript
(
ScrollState
)
RegisterPaint
(
Atom
Vec
<
Atom
>
Arc
<
Painter
>
)
SetNavigationStart
(
f64
)
}
#
[
derive
(
Debug
PartialEq
)
]
pub
enum
ReflowQueryType
{
NoQuery
ContentBoxQuery
(
TrustedNodeAddress
)
ContentBoxesQuery
(
TrustedNodeAddress
)
NodeOverflowQuery
(
TrustedNodeAddress
)
HitTestQuery
(
Point2D
<
f32
>
bool
)
NodeScrollRootIdQuery
(
TrustedNodeAddress
)
NodeGeometryQuery
(
TrustedNodeAddress
)
NodeScrollGeometryQuery
(
TrustedNodeAddress
)
ResolvedStyleQuery
(
TrustedNodeAddress
Option
<
PseudoElement
>
PropertyId
)
OffsetParentQuery
(
TrustedNodeAddress
)
MarginStyleQuery
(
TrustedNodeAddress
)
TextIndexQuery
(
TrustedNodeAddress
i32
i32
)
NodesFromPoint
(
Point2D
<
f32
>
)
}
pub
struct
Reflow
{
pub
goal
:
ReflowGoal
pub
page_clip_rect
:
Rect
<
Au
>
}
#
[
derive
(
Default
)
]
pub
struct
ReflowComplete
{
pub
pending_images
:
Vec
<
PendingImage
>
pub
newly_transitioning_nodes
:
Vec
<
UntrustedNodeAddress
>
}
pub
struct
ScriptReflow
{
pub
reflow_info
:
Reflow
pub
document
:
TrustedNodeAddress
pub
document_stylesheets
:
Vec
<
ServoArc
<
Stylesheet
>
>
pub
stylesheets_changed
:
bool
pub
window_size
:
WindowSizeData
pub
script_join_chan
:
Sender
<
ReflowComplete
>
pub
query_type
:
ReflowQueryType
pub
dom_count
:
u32
}
pub
struct
NewLayoutThreadInfo
{
pub
id
:
PipelineId
pub
url
:
ServoUrl
pub
is_parent
:
bool
pub
layout_pair
:
(
Sender
<
Msg
>
Receiver
<
Msg
>
)
pub
pipeline_port
:
IpcReceiver
<
LayoutControlMsg
>
pub
constellation_chan
:
IpcSender
<
ConstellationMsg
>
pub
script_chan
:
IpcSender
<
ConstellationControlMsg
>
pub
image_cache
:
Arc
<
ImageCache
>
pub
content_process_shutdown_chan
:
Option
<
IpcSender
<
(
)
>
>
pub
layout_threads
:
usize
pub
paint_time_metrics
:
PaintTimeMetrics
}
