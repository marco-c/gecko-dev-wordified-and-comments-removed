use
app_units
:
:
Au
;
use
euclid
:
:
point
:
:
Point2D
;
use
euclid
:
:
rect
:
:
Rect
;
use
gfx_traits
:
:
{
Epoch
LayerId
}
;
use
ipc_channel
:
:
ipc
:
:
{
IpcReceiver
IpcSender
}
;
use
msg
:
:
constellation_msg
:
:
{
PanicMsg
PipelineId
}
;
use
net_traits
:
:
image_cache_thread
:
:
ImageCacheThread
;
use
profile_traits
:
:
mem
:
:
ReportsChan
;
use
rpc
:
:
LayoutRPC
;
use
script_traits
:
:
{
ConstellationControlMsg
LayoutControlMsg
}
;
use
script_traits
:
:
{
LayoutMsg
as
ConstellationMsg
StackingContextScrollState
WindowSizeData
}
;
use
std
:
:
sync
:
:
Arc
;
use
std
:
:
sync
:
:
mpsc
:
:
{
Receiver
Sender
}
;
use
string_cache
:
:
Atom
;
use
style
:
:
context
:
:
ReflowGoal
;
use
style
:
:
selector_impl
:
:
PseudoElement
;
use
style
:
:
stylesheets
:
:
Stylesheet
;
use
url
:
:
Url
;
use
util
:
:
ipc
:
:
OptionalOpaqueIpcSender
;
use
{
OpaqueStyleAndLayoutData
TrustedNodeAddress
}
;
pub
enum
Msg
{
AddStylesheet
(
Arc
<
Stylesheet
>
)
SetQuirksMode
Reflow
(
ScriptReflow
)
GetRPC
(
Sender
<
Box
<
LayoutRPC
+
Send
>
>
)
TickAnimations
AdvanceClockMs
(
i32
)
ReflowWithNewlyLoadedWebFont
SetVisibleRects
(
Vec
<
(
LayerId
Rect
<
Au
>
)
>
)
ReapStyleAndLayoutData
(
OpaqueStyleAndLayoutData
)
CollectReports
(
ReportsChan
)
PrepareToExit
(
Sender
<
(
)
>
)
ExitNow
GetCurrentEpoch
(
IpcSender
<
Epoch
>
)
GetWebFontLoadState
(
IpcSender
<
bool
>
)
CreateLayoutThread
(
NewLayoutThreadInfo
)
SetFinalUrl
(
Url
)
SetStackingContextScrollStates
(
Vec
<
StackingContextScrollState
>
)
}
#
[
derive
(
PartialEq
)
]
pub
enum
ReflowQueryType
{
NoQuery
ContentBoxQuery
(
TrustedNodeAddress
)
ContentBoxesQuery
(
TrustedNodeAddress
)
NodeOverflowQuery
(
TrustedNodeAddress
)
HitTestQuery
(
Point2D
<
f32
>
bool
)
NodeGeometryQuery
(
TrustedNodeAddress
)
NodeLayerIdQuery
(
TrustedNodeAddress
)
NodeScrollGeometryQuery
(
TrustedNodeAddress
)
ResolvedStyleQuery
(
TrustedNodeAddress
Option
<
PseudoElement
>
Atom
)
OffsetParentQuery
(
TrustedNodeAddress
)
MarginStyleQuery
(
TrustedNodeAddress
)
}
pub
struct
Reflow
{
pub
goal
:
ReflowGoal
pub
page_clip_rect
:
Rect
<
Au
>
}
pub
struct
ScriptReflow
{
pub
reflow_info
:
Reflow
pub
document
:
TrustedNodeAddress
pub
document_stylesheets
:
Vec
<
Arc
<
Stylesheet
>
>
pub
stylesheets_changed
:
bool
pub
window_size
:
WindowSizeData
pub
script_join_chan
:
Sender
<
(
)
>
pub
query_type
:
ReflowQueryType
}
impl
Drop
for
ScriptReflow
{
fn
drop
(
&
mut
self
)
{
self
.
script_join_chan
.
send
(
(
)
)
.
unwrap
(
)
;
}
}
pub
struct
NewLayoutThreadInfo
{
pub
id
:
PipelineId
pub
url
:
Url
pub
is_parent
:
bool
pub
layout_pair
:
(
Sender
<
Msg
>
Receiver
<
Msg
>
)
pub
pipeline_port
:
IpcReceiver
<
LayoutControlMsg
>
pub
constellation_chan
:
IpcSender
<
ConstellationMsg
>
pub
panic_chan
:
IpcSender
<
PanicMsg
>
pub
script_chan
:
IpcSender
<
ConstellationControlMsg
>
pub
image_cache_thread
:
ImageCacheThread
pub
paint_chan
:
OptionalOpaqueIpcSender
pub
content_process_shutdown_chan
:
IpcSender
<
(
)
>
}
