use
ipc_channel
:
:
SerializeError
;
use
ipc_channel
:
:
ipc
:
:
IpcSender
;
use
script_traits
:
:
ConstellationControlMsg
;
use
std
:
:
marker
:
:
PhantomData
;
use
std
:
:
rc
:
:
Rc
;
pub
struct
EventLoop
{
script_chan
:
IpcSender
<
ConstellationControlMsg
>
dont_send_or_sync
:
PhantomData
<
Rc
<
(
)
>
>
}
impl
Drop
for
EventLoop
{
fn
drop
(
&
mut
self
)
{
let
_
=
self
.
script_chan
.
send
(
ConstellationControlMsg
:
:
ExitScriptThread
)
;
}
}
impl
EventLoop
{
pub
fn
new
(
script_chan
:
IpcSender
<
ConstellationControlMsg
>
)
-
>
Rc
<
EventLoop
>
{
Rc
:
:
new
(
EventLoop
{
script_chan
:
script_chan
dont_send_or_sync
:
PhantomData
}
)
}
pub
fn
send
(
&
self
msg
:
ConstellationControlMsg
)
-
>
Result
<
(
)
SerializeError
>
{
self
.
script_chan
.
send
(
msg
)
}
pub
fn
sender
(
&
self
)
-
>
IpcSender
<
ConstellationControlMsg
>
{
self
.
script_chan
.
clone
(
)
}
}
