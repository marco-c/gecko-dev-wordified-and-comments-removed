use
geom
:
:
rect
:
:
Rect
;
use
geom
:
:
size
:
:
TypedSize2D
;
use
geom
:
:
scale_factor
:
:
ScaleFactor
;
use
hyper
:
:
header
:
:
Headers
;
use
hyper
:
:
method
:
:
Method
;
use
layers
:
:
geometry
:
:
DevicePixel
;
use
servo_util
:
:
cursor
:
:
Cursor
;
use
servo_util
:
:
geometry
:
:
{
PagePx
ViewportPx
}
;
use
std
:
:
comm
:
:
{
channel
Sender
Receiver
}
;
use
url
:
:
Url
;
#
[
deriving
(
Clone
)
]
pub
struct
ConstellationChan
(
pub
Sender
<
Msg
>
)
;
impl
ConstellationChan
{
pub
fn
new
(
)
-
>
(
Receiver
<
Msg
>
ConstellationChan
)
{
let
(
chan
port
)
=
channel
(
)
;
(
port
ConstellationChan
(
chan
)
)
}
}
#
[
deriving
(
PartialEq
Eq
Copy
)
]
pub
enum
IFrameSandboxState
{
IFrameSandboxed
IFrameUnsandboxed
}
#
[
deriving
(
Clone
Copy
)
]
pub
struct
Failure
{
pub
pipeline_id
:
PipelineId
pub
subpage_id
:
Option
<
SubpageId
>
}
#
[
deriving
(
Copy
)
]
pub
struct
WindowSizeData
{
pub
initial_viewport
:
TypedSize2D
<
ViewportPx
f32
>
pub
visible_viewport
:
TypedSize2D
<
PagePx
f32
>
pub
device_pixel_ratio
:
ScaleFactor
<
ViewportPx
DevicePixel
f32
>
}
#
[
deriving
(
PartialEq
Eq
Copy
Clone
)
]
pub
enum
KeyState
{
Pressed
Released
Repeated
}
#
[
deriving
(
Show
PartialEq
Eq
Copy
Clone
)
]
pub
enum
Key
{
Space
Apostrophe
Comma
Minus
Period
Slash
Num0
Num1
Num2
Num3
Num4
Num5
Num6
Num7
Num8
Num9
Semicolon
Equal
A
B
C
D
E
F
G
H
I
J
K
L
M
N
O
P
Q
R
S
T
U
V
W
X
Y
Z
LeftBracket
Backslash
RightBracket
GraveAccent
World1
World2
Escape
Enter
Tab
Backspace
Insert
Delete
Right
Left
Down
Up
PageUp
PageDown
Home
End
CapsLock
ScrollLock
NumLock
PrintScreen
Pause
F1
F2
F3
F4
F5
F6
F7
F8
F9
F10
F11
F12
F13
F14
F15
F16
F17
F18
F19
F20
F21
F22
F23
F24
F25
Kp0
Kp1
Kp2
Kp3
Kp4
Kp5
Kp6
Kp7
Kp8
Kp9
KpDecimal
KpDivide
KpMultiply
KpSubtract
KpAdd
KpEnter
KpEqual
LeftShift
LeftControl
LeftAlt
LeftSuper
RightShift
RightControl
RightAlt
RightSuper
Menu
}
bitflags
!
{
#
[
deriving
(
Copy
)
]
flags
KeyModifiers
:
u8
{
const
SHIFT
=
0x01
const
CONTROL
=
0x02
const
ALT
=
0x04
const
SUPER
=
0x08
}
}
pub
enum
Msg
{
Exit
Failure
(
Failure
)
InitLoadUrl
(
Url
)
LoadComplete
FrameRect
(
PipelineId
SubpageId
Rect
<
f32
>
)
LoadUrl
(
PipelineId
LoadData
)
ScriptLoadedURLInIFrame
(
Url
PipelineId
SubpageId
IFrameSandboxState
)
Navigate
(
NavigationDirection
)
PainterReady
(
PipelineId
)
ResizedWindow
(
WindowSizeData
)
KeyEvent
(
Key
KeyState
KeyModifiers
)
GetPipelineTitle
(
PipelineId
)
SetCursor
(
Cursor
)
}
#
[
deriving
(
Clone
)
]
pub
struct
LoadData
{
pub
url
:
Url
pub
method
:
Method
pub
headers
:
Headers
pub
data
:
Option
<
Vec
<
u8
>
>
}
impl
LoadData
{
pub
fn
new
(
url
:
Url
)
-
>
LoadData
{
LoadData
{
url
:
url
method
:
Method
:
:
Get
headers
:
Headers
:
:
new
(
)
data
:
None
}
}
}
#
[
deriving
(
Clone
PartialEq
Eq
Copy
Hash
Show
)
]
pub
enum
NavigationType
{
Load
Navigate
}
#
[
deriving
(
Clone
PartialEq
Eq
Copy
Hash
Show
)
]
pub
enum
NavigationDirection
{
Forward
Back
}
#
[
deriving
(
Clone
PartialEq
Eq
Copy
Hash
Show
)
]
pub
struct
PipelineId
(
pub
uint
)
;
#
[
deriving
(
Clone
PartialEq
Eq
Copy
Hash
Show
)
]
pub
struct
SubpageId
(
pub
uint
)
;
#
[
deriving
(
Copy
)
]
pub
enum
PipelineExitType
{
PipelineOnly
Complete
}
