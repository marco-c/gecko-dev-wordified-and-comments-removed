from
__future__
import
absolute_import
print_function
import
json
import
sys
from
subprocess
import
Popen
PIPE
TEST_CMD
=
[
    
"
.
/
mach
"
    
"
test
-
wpt
"
    
"
-
-
release
"
    
"
-
-
processes
=
24
"
    
"
-
-
binary
-
arg
=
-
-
random
-
pipeline
-
closure
-
probability
=
0
.
1
"
    
"
-
-
binary
-
arg
=
-
-
random
-
pipeline
-
closure
-
seed
=
123
"
    
"
-
-
binary
-
arg
=
-
-
multiprocess
"
    
"
-
-
binary
-
arg
=
-
-
soft
-
fail
"
    
"
-
-
log
-
raw
=
-
"
    
"
content
-
security
-
policy
"
]
test_results
=
Popen
(
TEST_CMD
stdout
=
PIPE
)
any_crashes
=
False
for
line
in
test_results
.
stdout
:
    
report
=
json
.
loads
(
line
.
decode
(
'
utf
-
8
'
)
)
    
if
report
.
get
(
"
action
"
)
=
=
"
process_output
"
:
        
print
(
"
{
}
-
{
}
"
.
format
(
report
.
get
(
"
thread
"
)
report
.
get
(
"
data
"
)
)
)
    
status
=
report
.
get
(
"
status
"
)
    
if
status
:
        
print
(
"
{
}
-
{
}
-
{
}
"
.
format
(
report
.
get
(
"
thread
"
)
status
report
.
get
(
"
test
"
)
)
)
        
if
status
=
=
"
CRASH
"
:
            
any_crashes
=
True
if
any_crashes
:
    
sys
.
exit
(
1
)
