#
ifndef
mozilla_WindowsDllBlocklistCommon_h
#
define
mozilla_WindowsDllBlocklistCommon_h
#
include
<
stdint
.
h
>
#
include
"
mozilla
/
ArrayUtils
.
h
"
namespace
mozilla
{
template
<
typename
StrType
>
struct
DllBlockInfoT
{
StrType
mName
;
uint64_t
mMaxVersion
;
enum
Flags
{
FLAGS_DEFAULT
=
0
BLOCK_WIN8PLUS_ONLY
=
1
<
<
0
BLOCK_WIN8_ONLY
=
1
<
<
1
USE_TIMESTAMP
=
1
<
<
2
CHILD_PROCESSES_ONLY
=
1
<
<
3
BROWSER_PROCESS_ONLY
=
1
<
<
4
}
mFlags
;
bool
IsVersionBlocked
(
const
uint64_t
aOther
)
const
{
if
(
mMaxVersion
=
=
ALL_VERSIONS
)
{
return
true
;
}
return
aOther
<
=
mMaxVersion
;
}
static
const
uint64_t
ALL_VERSIONS
=
(
uint64_t
)
-
1LL
;
static
const
uint64_t
UNVERSIONED
=
0ULL
;
}
;
}
#
if
defined
(
_MSC_VER
)
&
&
!
defined
(
__clang__
)
#
define
MAKE_VERSION
(
a
b
c
d
)
\
(
(
a
#
#
ULL
<
<
48
)
+
(
b
#
#
ULL
<
<
32
)
+
(
c
#
#
ULL
<
<
16
)
+
d
#
#
ULL
)
#
else
static
inline
constexpr
uint64_t
MAKE_VERSION
(
uint16_t
a
uint16_t
b
uint16_t
c
uint16_t
d
)
{
return
static_cast
<
uint64_t
>
(
a
)
<
<
48
|
static_cast
<
uint64_t
>
(
b
)
<
<
32
|
static_cast
<
uint64_t
>
(
c
)
<
<
16
|
static_cast
<
uint64_t
>
(
d
)
;
}
#
endif
#
if
!
defined
(
DLL_BLOCKLIST_STRING_TYPE
)
#
error
"
You
must
define
DLL_BLOCKLIST_STRING_TYPE
"
#
endif
#
define
DLL_BLOCKLIST_DEFINITIONS_BEGIN_NAMED
(
name
)
\
using
DllBlockInfo
=
mozilla
:
:
DllBlockInfoT
<
DLL_BLOCKLIST_STRING_TYPE
>
;
\
static
const
DllBlockInfo
name
[
]
=
{
#
define
DLL_BLOCKLIST_DEFINITIONS_BEGIN
\
DLL_BLOCKLIST_DEFINITIONS_BEGIN_NAMED
(
gWindowsDllBlocklist
)
#
define
DLL_BLOCKLIST_DEFINITIONS_END
\
{
}
\
}
\
;
#
define
DECLARE_POINTER_TO_FIRST_DLL_BLOCKLIST_ENTRY_FOR
(
name
list
)
\
const
DllBlockInfo
*
name
=
&
list
[
0
]
#
define
DECLARE_POINTER_TO_FIRST_DLL_BLOCKLIST_ENTRY
(
name
)
\
DECLARE_POINTER_TO_FIRST_DLL_BLOCKLIST_ENTRY_FOR
(
name
gWindowsDllBlocklist
)
#
define
DECLARE_POINTER_TO_LAST_DLL_BLOCKLIST_ENTRY_FOR
(
name
list
)
\
const
DllBlockInfo
*
name
=
&
list
[
mozilla
:
:
ArrayLength
(
list
)
-
1
]
#
define
DECLARE_POINTER_TO_LAST_DLL_BLOCKLIST_ENTRY
(
name
)
\
DECLARE_POINTER_TO_LAST_DLL_BLOCKLIST_ENTRY_FOR
(
name
gWindowsDllBlocklist
)
#
define
DECLARE_DLL_BLOCKLIST_NUM_ENTRIES_FOR
(
name
list
)
\
const
size_t
name
=
mozilla
:
:
ArrayLength
(
list
)
-
1
#
define
DECLARE_DLL_BLOCKLIST_NUM_ENTRIES
(
name
)
\
DECLARE_DLL_BLOCKLIST_NUM_ENTRIES_FOR
(
name
gWindowsDllBlocklist
)
#
endif
