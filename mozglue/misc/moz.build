FINAL_LIBRARY
=
'
mozglue
'
EXPORTS
.
mozilla
+
=
[
'
AutoProfilerLabel
.
h
'
'
decimal
/
Decimal
.
h
'
'
decimal
/
DoubleConversion
.
h
'
'
PlatformConditionVariable
.
h
'
'
PlatformMutex
.
h
'
'
Printf
.
h
'
'
StackWalk
.
h
'
'
TimeStamp
.
h
'
]
EXPORTS
.
mozilla
.
glue
+
=
[
'
Debug
.
h
'
'
WinUtils
.
h
'
]
if
CONFIG
[
'
OS_ARCH
'
]
=
=
'
WINNT
'
:
EXPORTS
.
mozilla
+
=
[
'
StackWalk_windows
.
h
'
'
TimeStamp_windows
.
h
'
]
SOURCES
+
=
[
'
AutoProfilerLabel
.
cpp
'
'
Printf
.
cpp
'
'
StackWalk
.
cpp
'
'
TimeStamp
.
cpp
'
]
OS_LIBS
+
=
CONFIG
[
'
REALTIME_LIBS
'
]
if
CONFIG
[
'
OS_ARCH
'
]
=
=
'
WINNT
'
:
DIRS
+
=
[
'
interceptor
'
]
EXPORTS
+
=
[
'
nsWindowsDllInterceptor
.
h
'
]
EXPORTS
.
mozilla
+
=
[
'
DynamicallyLinkedFunctionPtr
.
h
'
'
ImportDir
.
h
'
'
NativeNt
.
h
'
'
WindowsMapRemoteView
.
h
'
'
WindowsProcessMitigations
.
h
'
]
EXPORTS
.
mozilla
.
glue
+
=
[
'
WindowsUnicode
.
h
'
]
SOURCES
+
=
[
'
TimeStamp_windows
.
cpp
'
'
WindowsMapRemoteView
.
cpp
'
'
WindowsProcessMitigations
.
cpp
'
'
WindowsUnicode
.
cpp
'
]
OS_LIBS
+
=
[
'
dbghelp
'
]
elif
CONFIG
[
'
HAVE_CLOCK_MONOTONIC
'
]
:
SOURCES
+
=
[
'
TimeStamp_posix
.
cpp
'
]
elif
CONFIG
[
'
OS_ARCH
'
]
=
=
'
Darwin
'
:
SOURCES
+
=
[
'
TimeStamp_darwin
.
cpp
'
]
elif
CONFIG
[
'
COMPILE_ENVIRONMENT
'
]
:
error
(
'
No
TimeStamp
implementation
on
this
platform
.
Build
will
not
succeed
'
)
if
CONFIG
[
'
OS_ARCH
'
]
=
=
'
WINNT
'
:
SOURCES
+
=
[
'
ConditionVariable_windows
.
cpp
'
'
Mutex_windows
.
cpp
'
]
else
:
SOURCES
+
=
[
'
ConditionVariable_posix
.
cpp
'
'
Mutex_posix
.
cpp
'
]
if
CONFIG
[
'
MOZ_LINKER
'
]
or
CONFIG
[
'
MOZ_WIDGET_TOOLKIT
'
]
=
=
'
android
'
:
LOCAL_INCLUDES
+
=
[
'
/
mozglue
/
linker
'
]
SOURCES
+
=
[
'
decimal
/
Decimal
.
cpp
'
]
if
CONFIG
[
'
CC_TYPE
'
]
=
=
'
clang
'
:
SOURCES
[
'
decimal
/
Decimal
.
cpp
'
]
.
flags
+
=
[
'
-
Wno
-
implicit
-
fallthrough
'
]
