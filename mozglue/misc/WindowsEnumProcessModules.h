#
ifndef
mozilla_WindowsEnumProcessModules_h
#
define
mozilla_WindowsEnumProcessModules_h
#
include
<
windows
.
h
>
#
include
<
psapi
.
h
>
#
include
"
mozilla
/
FunctionRef
.
h
"
#
include
"
mozilla
/
NativeNt
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
WinHeaderOnlyUtils
.
h
"
namespace
mozilla
{
inline
bool
EnumerateProcessModules
(
const
FunctionRef
<
void
(
const
wchar_t
*
HMODULE
)
>
&
aCallback
)
{
DWORD
modulesSize
;
if
(
!
:
:
EnumProcessModules
(
nt
:
:
kCurrentProcess
nullptr
0
&
modulesSize
)
)
{
return
false
;
}
DWORD
modulesNum
=
modulesSize
/
sizeof
(
HMODULE
)
;
UniquePtr
<
HMODULE
[
]
>
modules
=
MakeUnique
<
HMODULE
[
]
>
(
modulesNum
)
;
if
(
!
:
:
EnumProcessModules
(
nt
:
:
kCurrentProcess
modules
.
get
(
)
modulesNum
*
sizeof
(
HMODULE
)
&
modulesSize
)
)
{
return
false
;
}
if
(
modulesSize
/
sizeof
(
HMODULE
)
<
modulesNum
)
{
modulesNum
=
modulesSize
/
sizeof
(
HMODULE
)
;
}
for
(
DWORD
i
=
0
;
i
<
modulesNum
;
+
+
i
)
{
UniquePtr
<
wchar_t
[
]
>
modulePath
=
GetFullModulePath
(
modules
[
i
]
)
;
if
(
!
modulePath
)
{
continue
;
}
aCallback
(
modulePath
.
get
(
)
modules
[
i
]
)
;
}
return
true
;
}
}
#
endif
