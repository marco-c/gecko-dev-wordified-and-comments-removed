#
include
"
mozilla
/
Atomics
.
h
"
#
include
"
mozilla
/
TimeStamp
.
h
"
#
include
<
stdio
.
h
>
#
include
<
string
.
h
>
#
include
<
stdlib
.
h
>
namespace
mozilla
{
struct
TimeStampInitialization
{
TimeStamp
mFirstTimeStamp
;
TimeStamp
mProcessCreation
;
TimeStampInitialization
(
)
{
TimeStamp
:
:
Startup
(
)
;
mFirstTimeStamp
=
TimeStamp
:
:
Now
(
)
;
}
;
~
TimeStampInitialization
(
)
{
TimeStamp
:
:
Shutdown
(
)
;
}
;
}
;
static
bool
sFuzzyfoxEnabled
;
bool
TimeStamp
:
:
GetFuzzyfoxEnabled
(
)
{
return
sFuzzyfoxEnabled
;
}
void
TimeStamp
:
:
SetFuzzyfoxEnabled
(
bool
aValue
)
{
sFuzzyfoxEnabled
=
aValue
;
}
#
ifdef
XP_WIN
static
Atomic
<
uint64_t
>
sCanonicalGTC
;
static
Atomic
<
uint64_t
>
sCanonicalQPC
;
static
Atomic
<
bool
>
sCanonicalHasQPC
;
#
else
static
Atomic
<
uint64_t
>
sCanonicalNowTimeStamp
;
#
endif
static
Atomic
<
int64_t
>
sCanonicalNowTime
;
static
TimeStampInitialization
sInitOnce
;
MFBT_API
TimeStamp
TimeStamp
:
:
ProcessCreation
(
bool
*
aIsInconsistent
)
{
if
(
aIsInconsistent
)
{
*
aIsInconsistent
=
false
;
}
if
(
sInitOnce
.
mProcessCreation
.
IsNull
(
)
)
{
char
*
mozAppRestart
=
getenv
(
"
MOZ_APP_RESTART
"
)
;
TimeStamp
ts
;
if
(
mozAppRestart
&
&
(
strcmp
(
mozAppRestart
"
"
)
!
=
0
)
)
{
ts
=
sInitOnce
.
mFirstTimeStamp
;
}
else
{
TimeStamp
now
=
Now
(
)
;
uint64_t
uptime
=
ComputeProcessUptime
(
)
;
ts
=
now
-
TimeDuration
:
:
FromMicroseconds
(
uptime
)
;
if
(
(
ts
>
sInitOnce
.
mFirstTimeStamp
)
|
|
(
uptime
=
=
0
)
)
{
if
(
aIsInconsistent
)
{
*
aIsInconsistent
=
true
;
}
ts
=
sInitOnce
.
mFirstTimeStamp
;
}
}
sInitOnce
.
mProcessCreation
=
ts
;
}
return
sInitOnce
.
mProcessCreation
;
}
void
TimeStamp
:
:
RecordProcessRestart
(
)
{
sInitOnce
.
mProcessCreation
=
TimeStamp
(
)
;
}
MFBT_API
TimeStamp
TimeStamp
:
:
NowFuzzy
(
TimeStampValue
aValue
)
{
#
ifdef
XP_WIN
TimeStampValue
canonicalNow
=
TimeStampValue
(
sCanonicalGTC
sCanonicalQPC
sCanonicalHasQPC
true
)
;
#
else
TimeStampValue
canonicalNow
=
TimeStampValue
(
sCanonicalNowTimeStamp
)
;
#
endif
if
(
TimeStamp
:
:
GetFuzzyfoxEnabled
(
)
)
{
if
(
MOZ_LIKELY
(
!
canonicalNow
.
IsNull
(
)
)
)
{
return
TimeStamp
(
canonicalNow
)
;
}
}
else
if
(
MOZ_UNLIKELY
(
canonicalNow
>
aValue
)
)
{
return
TimeStamp
(
canonicalNow
)
;
}
return
TimeStamp
(
aValue
)
;
}
MFBT_API
void
TimeStamp
:
:
UpdateFuzzyTimeStamp
(
TimeStamp
aValue
)
{
#
ifdef
XP_WIN
sCanonicalGTC
=
aValue
.
mValue
.
mGTC
;
sCanonicalQPC
=
aValue
.
mValue
.
mQPC
;
sCanonicalHasQPC
=
aValue
.
mValue
.
mHasQPC
;
#
else
sCanonicalNowTimeStamp
=
aValue
.
mValue
.
mTimeStamp
;
#
endif
}
MFBT_API
int64_t
TimeStamp
:
:
NowFuzzyTime
(
)
{
return
sCanonicalNowTime
;
}
MFBT_API
void
TimeStamp
:
:
UpdateFuzzyTime
(
int64_t
aValue
)
{
sCanonicalNowTime
=
aValue
;
}
}
