#
include
"
WindowsUnicode
.
h
"
#
include
<
windows
.
h
>
#
include
<
winternl
.
h
>
#
include
<
string
.
h
>
namespace
mozilla
{
namespace
glue
{
mozilla
:
:
UniquePtr
<
char
[
]
>
WideToUTF8
(
const
wchar_t
*
aStr
const
size_t
aStrLenExclNul
)
{
int
numConv
=
:
:
WideCharToMultiByte
(
CP_UTF8
0
aStr
aStrLenExclNul
nullptr
0
nullptr
nullptr
)
;
if
(
!
numConv
)
{
return
nullptr
;
}
auto
buf
=
mozilla
:
:
MakeUnique
<
char
[
]
>
(
numConv
+
1
)
;
numConv
=
:
:
WideCharToMultiByte
(
CP_UTF8
0
aStr
aStrLenExclNul
buf
.
get
(
)
numConv
nullptr
nullptr
)
;
if
(
!
numConv
)
{
return
nullptr
;
}
buf
[
numConv
]
=
0
;
return
buf
;
}
mozilla
:
:
UniquePtr
<
char
[
]
>
WideToUTF8
(
const
wchar_t
*
aStr
)
{
return
WideToUTF8
(
aStr
wcslen
(
aStr
)
)
;
}
mozilla
:
:
UniquePtr
<
char
[
]
>
WideToUTF8
(
const
std
:
:
wstring
&
aStr
)
{
return
WideToUTF8
(
aStr
.
data
(
)
aStr
.
length
(
)
)
;
}
mozilla
:
:
UniquePtr
<
char
[
]
>
WideToUTF8
(
PCUNICODE_STRING
aStr
)
{
if
(
!
aStr
)
{
return
nullptr
;
}
return
WideToUTF8
(
aStr
-
>
Buffer
aStr
-
>
Length
/
sizeof
(
WCHAR
)
)
;
}
}
}
