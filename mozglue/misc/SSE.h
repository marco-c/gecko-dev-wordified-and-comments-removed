#
ifndef
mozilla_SSE_h_
#
define
mozilla_SSE_h_
#
include
"
mozilla
/
Types
.
h
"
#
if
defined
(
__GNUC__
)
&
&
(
defined
(
__i386__
)
|
|
defined
(
__x86_64__
)
)
#
ifdef
__MMX__
#
define
MOZILLA_PRESUME_MMX
1
#
endif
#
ifdef
__SSE__
#
define
MOZILLA_PRESUME_SSE
1
#
endif
#
ifdef
__SSE2__
#
define
MOZILLA_PRESUME_SSE2
1
#
endif
#
ifdef
__SSE3__
#
define
MOZILLA_PRESUME_SSE3
1
#
endif
#
ifdef
__SSSE3__
#
define
MOZILLA_PRESUME_SSSE3
1
#
endif
#
ifdef
__SSE4A__
#
define
MOZILLA_PRESUME_SSE4A
1
#
endif
#
ifdef
__SSE4_1__
#
define
MOZILLA_PRESUME_SSE4_1
1
#
endif
#
ifdef
__SSE4_2__
#
define
MOZILLA_PRESUME_SSE4_2
1
#
endif
#
ifdef
__AVX__
#
define
MOZILLA_PRESUME_AVX
1
#
endif
#
ifdef
__AVX2__
#
define
MOZILLA_PRESUME_AVX2
1
#
endif
#
ifdef
__AVXVNNI__
#
define
MOZILLA_PRESUME_AVXVNNI
1
#
endif
#
ifdef
__AES__
#
define
MOZILLA_PRESUME_AES
1
#
endif
#
ifdef
__SHA__
#
define
MOZILLA_PRESUME_SHA
1
#
endif
#
ifdef
__SHA512__
#
define
MOZILLA_PRESUME_SHA512
1
#
endif
#
ifdef
HAVE_CPUID_H
#
define
MOZILLA_SSE_HAVE_CPUID_DETECTION
#
endif
#
elif
defined
(
_MSC_VER
)
&
&
(
defined
(
_M_IX86
)
|
|
defined
(
_M_AMD64
)
)
#
define
MOZILLA_SSE_HAVE_CPUID_DETECTION
#
if
defined
(
_M_IX86_FP
)
#
if
_M_IX86_FP
>
=
1
#
define
MOZILLA_PRESUME_SSE
#
endif
#
if
_M_IX86_FP
>
=
2
#
define
MOZILLA_PRESUME_SSE2
#
endif
#
elif
defined
(
_M_AMD64
)
#
define
MOZILLA_PRESUME_SSE
#
define
MOZILLA_PRESUME_SSE2
#
endif
#
elif
defined
(
__SUNPRO_CC
)
&
&
(
defined
(
__i386
)
|
|
defined
(
__x86_64__
)
)
#
define
MOZILLA_SSE_HAVE_CPUID_DETECTION
#
if
defined
(
__x86_64__
)
#
define
MOZILLA_PRESUME_MMX
#
define
MOZILLA_PRESUME_SSE
#
define
MOZILLA_PRESUME_SSE2
#
endif
#
endif
namespace
mozilla
{
namespace
sse_private
{
#
if
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
if
!
defined
(
MOZILLA_PRESUME_MMX
)
extern
bool
MFBT_DATA
mmx_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_SSE
)
extern
bool
MFBT_DATA
sse_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_SSE2
)
extern
bool
MFBT_DATA
sse2_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_SSE3
)
extern
bool
MFBT_DATA
sse3_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_SSSE3
)
extern
bool
MFBT_DATA
ssse3_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_SSE4A
)
extern
bool
MFBT_DATA
sse4a_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_SSE4_1
)
extern
bool
MFBT_DATA
sse4_1_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_SSE4_2
)
extern
bool
MFBT_DATA
sse4_2_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_FMA3
)
extern
bool
MFBT_DATA
fma3_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_AVX
)
extern
bool
MFBT_DATA
avx_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_AVX2
)
extern
bool
MFBT_DATA
avx2_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_AVXVNNI
)
extern
bool
MFBT_DATA
avxvnni_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_AES
)
extern
bool
MFBT_DATA
aes_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_SHA
)
extern
bool
MFBT_DATA
sha_enabled
;
#
endif
#
if
!
defined
(
MOZILLA_PRESUME_SHA512
)
extern
bool
MFBT_DATA
sha512_enabled
;
#
endif
extern
bool
MFBT_DATA
has_constant_tsc
;
#
endif
}
#
ifdef
HAVE_CPUID_H
MOZ_EXPORT
uint64_t
xgetbv
(
uint32_t
xcr
)
;
#
endif
#
if
defined
(
MOZILLA_PRESUME_MMX
)
#
define
MOZILLA_MAY_SUPPORT_MMX
1
inline
bool
supports_mmx
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
if
!
(
defined
(
_MSC_VER
)
&
&
defined
(
_M_AMD64
)
)
#
define
MOZILLA_MAY_SUPPORT_MMX
1
#
endif
inline
bool
supports_mmx
(
)
{
return
sse_private
:
:
mmx_enabled
;
}
#
else
inline
bool
supports_mmx
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_SSE
)
#
define
MOZILLA_MAY_SUPPORT_SSE
1
inline
bool
supports_sse
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_SSE
1
inline
bool
supports_sse
(
)
{
return
sse_private
:
:
sse_enabled
;
}
#
else
inline
bool
supports_sse
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_SSE2
)
#
define
MOZILLA_MAY_SUPPORT_SSE2
1
inline
bool
supports_sse2
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_SSE2
1
inline
bool
supports_sse2
(
)
{
return
sse_private
:
:
sse2_enabled
;
}
#
else
inline
bool
supports_sse2
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_SSE3
)
#
define
MOZILLA_MAY_SUPPORT_SSE3
1
inline
bool
supports_sse3
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_SSE3
1
inline
bool
supports_sse3
(
)
{
return
sse_private
:
:
sse3_enabled
;
}
#
else
inline
bool
supports_sse3
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_SSSE3
)
#
define
MOZILLA_MAY_SUPPORT_SSSE3
1
inline
bool
supports_ssse3
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_SSSE3
1
inline
bool
supports_ssse3
(
)
{
return
sse_private
:
:
ssse3_enabled
;
}
#
else
inline
bool
supports_ssse3
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_SSE4A
)
#
define
MOZILLA_MAY_SUPPORT_SSE4A
1
inline
bool
supports_sse4a
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_SSE4A
1
inline
bool
supports_sse4a
(
)
{
return
sse_private
:
:
sse4a_enabled
;
}
#
else
inline
bool
supports_sse4a
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_SSE4_1
)
#
define
MOZILLA_MAY_SUPPORT_SSE4_1
1
inline
bool
supports_sse4_1
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_SSE4_1
1
inline
bool
supports_sse4_1
(
)
{
return
sse_private
:
:
sse4_1_enabled
;
}
#
else
inline
bool
supports_sse4_1
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_SSE4_2
)
#
define
MOZILLA_MAY_SUPPORT_SSE4_2
1
inline
bool
supports_sse4_2
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_SSE4_2
1
inline
bool
supports_sse4_2
(
)
{
return
sse_private
:
:
sse4_2_enabled
;
}
#
else
inline
bool
supports_sse4_2
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_FMA3
)
#
define
MOZILLA_MAY_SUPPORT_FMA3
1
inline
bool
supports_fma3
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_FMA3
1
inline
bool
supports_fma3
(
)
{
return
sse_private
:
:
fma3_enabled
;
}
#
else
inline
bool
supports_fma3
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_AVX
)
#
define
MOZILLA_MAY_SUPPORT_AVX
1
inline
bool
supports_avx
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_AVX
1
inline
bool
supports_avx
(
)
{
return
sse_private
:
:
avx_enabled
;
}
#
else
inline
bool
supports_avx
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_AVX2
)
#
define
MOZILLA_MAY_SUPPORT_AVX2
1
inline
bool
supports_avx2
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_AVX2
1
inline
bool
supports_avx2
(
)
{
return
sse_private
:
:
avx2_enabled
;
}
#
else
inline
bool
supports_avx2
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_AVXVNNI
)
#
define
MOZILLA_MAY_SUPPORT_AVXVNNI
1
inline
bool
supports_avxvnni
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_AVXVNNI
1
inline
bool
supports_avxvnni
(
)
{
return
sse_private
:
:
avxvnni_enabled
;
}
#
else
inline
bool
supports_avxvnni
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_AES
)
#
define
MOZILLA_MAY_SUPPORT_AES
1
inline
bool
supports_aes
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_AES
1
inline
bool
supports_aes
(
)
{
return
sse_private
:
:
aes_enabled
;
}
#
else
inline
bool
supports_aes
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_SHA
)
#
define
MOZILLA_MAY_SUPPORT_SHA
1
inline
bool
supports_sha
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_SHA
1
inline
bool
supports_sha
(
)
{
return
sse_private
:
:
sha_enabled
;
}
#
else
inline
bool
supports_sha
(
)
{
return
false
;
}
#
endif
#
if
defined
(
MOZILLA_PRESUME_SHA512
)
#
define
MOZILLA_MAY_SUPPORT_SHA512
1
inline
bool
supports_sha512
(
)
{
return
true
;
}
#
elif
defined
(
MOZILLA_SSE_HAVE_CPUID_DETECTION
)
#
define
MOZILLA_MAY_SUPPORT_SHA512
1
inline
bool
supports_sha512
(
)
{
return
sse_private
:
:
sha512_enabled
;
}
#
else
inline
bool
supports_sha512
(
)
{
return
false
;
}
#
endif
#
ifdef
MOZILLA_SSE_HAVE_CPUID_DETECTION
inline
bool
has_constant_tsc
(
)
{
return
sse_private
:
:
has_constant_tsc
;
}
#
else
inline
bool
has_constant_tsc
(
)
{
return
false
;
}
#
endif
}
#
endif
