#
ifndef
mozilla_interceptor_Arm64_h
#
define
mozilla_interceptor_Arm64_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
Result
.
h
"
#
include
"
mozilla
/
Types
.
h
"
namespace
mozilla
{
namespace
interceptor
{
namespace
arm64
{
struct
LoadInfo
{
LoadInfo
(
const
uintptr_t
aAbsAddress
const
uint8_t
aDestReg
)
:
mAbsAddress
(
aAbsAddress
)
mDestReg
(
aDestReg
)
{
MOZ_ASSERT
(
aDestReg
<
32
)
;
}
uintptr_t
mAbsAddress
;
uint8_t
mDestReg
;
}
;
enum
class
PCRelCheckError
{
InstructionNotPCRel
NoDecoderAvailable
}
;
MFBT_API
Result
<
LoadInfo
PCRelCheckError
>
CheckForPCRel
(
const
uintptr_t
aPC
const
uint32_t
aInst
)
;
inline
static
uint32_t
BuildUnconditionalBranchToRegister
(
const
uint32_t
aReg
)
{
MOZ_ASSERT
(
aReg
<
32
)
;
return
0xD61F0000
|
(
aReg
<
<
5
)
;
}
}
}
}
#
endif
