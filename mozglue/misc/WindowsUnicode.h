#
ifndef
mozilla_glue_WindowsUnicode_h
#
define
mozilla_glue_WindowsUnicode_h
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
<
string
>
struct
_UNICODE_STRING
;
namespace
mozilla
{
namespace
glue
{
mozilla
:
:
UniquePtr
<
char
[
]
>
WideToUTF8
(
const
wchar_t
*
aStr
const
size_t
aStrLenExclNul
)
;
mozilla
:
:
UniquePtr
<
char
[
]
>
WideToUTF8
(
const
wchar_t
*
aStr
)
;
mozilla
:
:
UniquePtr
<
char
[
]
>
WideToUTF8
(
const
std
:
:
wstring
&
aStr
)
;
mozilla
:
:
UniquePtr
<
char
[
]
>
WideToUTF8
(
const
_UNICODE_STRING
*
aStr
)
;
#
if
defined
(
bstr_t
)
inline
mozilla
:
:
UniquePtr
<
char
[
]
>
WideToUTF8
(
const
_bstr_t
&
aStr
)
{
return
WideToUTF8
(
static_cast
<
const
wchar_t
*
>
(
aStr
)
aStr
.
length
(
)
)
;
}
#
endif
}
}
#
endif
