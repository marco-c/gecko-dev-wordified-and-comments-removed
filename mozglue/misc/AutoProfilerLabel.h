#
ifndef
mozilla_AutoProfilerLabel_h
#
define
mozilla_AutoProfilerLabel_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Types
.
h
"
#
include
<
tuple
>
namespace
mozilla
{
typedef
void
*
(
*
ProfilerLabelEnter
)
(
const
char
*
aLabel
const
char
*
aDynamicString
void
*
aSp
)
;
typedef
void
(
*
ProfilerLabelExit
)
(
void
*
EntryContext
)
;
MFBT_API
void
RegisterProfilerLabelEnterExit
(
ProfilerLabelEnter
aEnter
ProfilerLabelExit
aExit
)
;
#
ifdef
IMPL_MFBT
class
MOZ_RAII
AutoProfilerLabel
{
public
:
AutoProfilerLabel
(
const
char
*
aLabel
const
char
*
aDynamicString
)
;
~
AutoProfilerLabel
(
)
;
private
:
void
*
mEntryContext
;
uint32_t
mGeneration
;
}
;
using
ProfilerLabel
=
std
:
:
tuple
<
void
*
uint32_t
>
;
bool
IsProfilerPresent
(
)
;
ProfilerLabel
ProfilerLabelBegin
(
const
char
*
aLabelName
const
char
*
aDynamicString
void
*
aSp
)
;
void
ProfilerLabelEnd
(
const
ProfilerLabel
&
aLabel
)
;
inline
bool
IsValidProfilerLabel
(
const
ProfilerLabel
&
aLabel
)
{
return
!
!
std
:
:
get
<
0
>
(
aLabel
)
;
}
#
endif
}
#
endif
