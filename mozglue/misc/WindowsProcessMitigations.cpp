#
include
"
mozilla
/
WindowsProcessMitigations
.
h
"
#
include
<
processthreadsapi
.
h
>
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
DynamicallyLinkedFunctionPtr
.
h
"
#
if
(
_WIN32_WINNT
<
0x0602
)
BOOL
WINAPI
GetProcessMitigationPolicy
(
HANDLE
hProcess
PROCESS_MITIGATION_POLICY
MitigationPolicy
PVOID
lpBuffer
SIZE_T
dwLength
)
;
#
endif
namespace
mozilla
{
static
decltype
(
&
:
:
GetProcessMitigationPolicy
)
FetchGetProcessMitigationPolicyFunc
(
)
{
static
const
StaticDynamicallyLinkedFunctionPtr
<
decltype
(
&
:
:
GetProcessMitigationPolicy
)
>
pGetProcessMitigationPolicy
(
L
"
kernel32
.
dll
"
"
GetProcessMitigationPolicy
"
)
;
return
pGetProcessMitigationPolicy
;
}
static
bool
sWin32kLockedDownInPolicy
=
false
;
MFBT_API
bool
IsWin32kLockedDown
(
)
{
static
bool
sWin32kLockedDown
=
[
]
(
)
{
auto
pGetProcessMitigationPolicy
=
FetchGetProcessMitigationPolicyFunc
(
)
;
PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
polInfo
;
if
(
!
pGetProcessMitigationPolicy
|
|
!
pGetProcessMitigationPolicy
(
:
:
GetCurrentProcess
(
)
ProcessSystemCallDisablePolicy
&
polInfo
sizeof
(
polInfo
)
)
)
{
return
sWin32kLockedDownInPolicy
;
}
MOZ_RELEASE_ASSERT
(
!
sWin32kLockedDownInPolicy
|
|
!
!
polInfo
.
DisallowWin32kSystemCalls
"
Win32k
Lockdown
enabled
in
sandbox
policy
but
not
process
.
"
)
;
return
!
!
polInfo
.
DisallowWin32kSystemCalls
;
}
(
)
;
return
sWin32kLockedDown
;
}
MFBT_API
void
SetWin32kLockedDownInPolicy
(
)
{
sWin32kLockedDownInPolicy
=
true
;
}
MFBT_API
bool
IsDynamicCodeDisabled
(
)
{
auto
pGetProcessMitigationPolicy
=
FetchGetProcessMitigationPolicyFunc
(
)
;
if
(
!
pGetProcessMitigationPolicy
)
{
return
false
;
}
PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
polInfo
;
if
(
!
pGetProcessMitigationPolicy
(
:
:
GetCurrentProcess
(
)
ProcessDynamicCodePolicy
&
polInfo
sizeof
(
polInfo
)
)
)
{
return
false
;
}
return
polInfo
.
ProhibitDynamicCode
;
}
MFBT_API
bool
IsEafPlusEnabled
(
)
{
auto
pGetProcessMitigationPolicy
=
FetchGetProcessMitigationPolicyFunc
(
)
;
if
(
!
pGetProcessMitigationPolicy
)
{
return
false
;
}
PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
polInfo
;
if
(
!
pGetProcessMitigationPolicy
(
:
:
GetCurrentProcess
(
)
ProcessPayloadRestrictionPolicy
&
polInfo
sizeof
(
polInfo
)
)
)
{
return
false
;
}
return
polInfo
.
EnableExportAddressFilterPlus
;
}
}
