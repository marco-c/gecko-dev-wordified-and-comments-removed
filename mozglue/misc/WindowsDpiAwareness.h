#
ifndef
WindowsDpiAwareness_h_
#
define
WindowsDpiAwareness_h_
#
include
<
windows
.
h
>
#
if
!
defined
(
DPI_AWARENESS_CONTEXT_DECLARED
)
&
&
\
!
defined
(
DPI_AWARENESS_CONTEXT_UNAWARE
)
DECLARE_HANDLE
(
DPI_AWARENESS_CONTEXT
)
;
typedef
enum
DPI_AWARENESS
{
DPI_AWARENESS_INVALID
=
-
1
DPI_AWARENESS_UNAWARE
=
0
DPI_AWARENESS_SYSTEM_AWARE
=
1
DPI_AWARENESS_PER_MONITOR_AWARE
=
2
}
DPI_AWARENESS
;
#
define
DPI_AWARENESS_CONTEXT_UNAWARE
(
(
DPI_AWARENESS_CONTEXT
)
-
1
)
#
define
DPI_AWARENESS_CONTEXT_SYSTEM_AWARE
(
(
DPI_AWARENESS_CONTEXT
)
-
2
)
#
define
DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE
(
(
DPI_AWARENESS_CONTEXT
)
-
3
)
#
define
DPI_AWARENESS_CONTEXT_DECLARED
#
endif
typedef
DPI_AWARENESS_CONTEXT
(
WINAPI
*
SetThreadDpiAwarenessContextProc
)
(
DPI_AWARENESS_CONTEXT
)
;
typedef
BOOL
(
WINAPI
*
EnableNonClientDpiScalingProc
)
(
HWND
)
;
typedef
int
(
WINAPI
*
GetSystemMetricsForDpiProc
)
(
int
UINT
)
;
#
endif
