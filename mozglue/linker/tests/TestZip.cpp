#
include
<
cstdio
>
#
include
<
unistd
.
h
>
#
include
"
Zip
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
extern
"
C
"
void
report_mapping
(
)
{
}
extern
"
C
"
void
delete_mapping
(
)
{
}
const
char
*
test_entries
[
]
=
{
"
baz
"
"
foo
"
"
bar
"
"
qux
"
}
;
const
char
*
no_central_dir_entries
[
]
=
{
"
a
"
"
b
"
"
c
"
"
d
"
}
;
int
main
(
int
argc
char
*
argv
[
]
)
{
if
(
argc
!
=
2
)
{
fprintf
(
stderr
"
TEST
-
FAIL
|
TestZip
|
Expecting
the
directory
containing
test
Zips
\
n
"
)
;
return
1
;
}
chdir
(
argv
[
1
]
)
;
Zip
:
:
Stream
s
;
RefPtr
<
Zip
>
z
=
ZipCollection
:
:
GetZip
(
"
test
.
zip
"
)
;
for
(
auto
&
entry
:
test_entries
)
{
if
(
!
z
-
>
GetStream
(
entry
&
s
)
)
{
fprintf
(
stderr
"
TEST
-
UNEXPECTED
-
FAIL
|
TestZip
|
test
.
zip
:
Couldn
'
t
get
entry
"
"
\
"
%
s
\
"
\
n
"
entry
)
;
return
1
;
}
}
fprintf
(
stderr
"
TEST
-
PASS
|
TestZip
|
test
.
zip
could
be
accessed
fully
\
n
"
)
;
z
=
ZipCollection
:
:
GetZip
(
"
no_central_dir
.
zip
"
)
;
for
(
auto
&
entry
:
no_central_dir_entries
)
{
if
(
!
z
-
>
GetStream
(
entry
&
s
)
)
{
fprintf
(
stderr
"
TEST
-
UNEXPECTED
-
FAIL
|
TestZip
|
no_central_dir
.
zip
:
Couldn
'
t
"
"
get
entry
\
"
%
s
\
"
\
n
"
entry
)
;
return
1
;
}
}
fprintf
(
stderr
"
TEST
-
PASS
|
TestZip
|
no_central_dir
.
zip
could
be
accessed
in
order
\
n
"
)
;
return
0
;
}
