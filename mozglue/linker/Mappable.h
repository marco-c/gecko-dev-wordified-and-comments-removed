#
ifndef
Mappable_h
#
define
Mappable_h
#
include
<
optional
>
#
include
"
mozilla
/
RefCounted
.
h
"
#
include
"
Utils
.
h
"
class
Mappable
:
public
mozilla
:
:
RefCounted
<
Mappable
>
{
public
:
MOZ_DECLARE_REFCOUNTED_TYPENAME
(
Mappable
)
~
Mappable
(
)
{
}
MemoryRange
mmap
(
const
void
*
addr
size_t
length
int
prot
int
flags
off_t
offset
)
;
private
:
void
munmap
(
void
*
addr
size_t
length
)
{
:
:
munmap
(
addr
length
)
;
}
friend
class
Mappable1stPagePtr
;
friend
class
LibHandle
;
public
:
void
finalize
(
)
;
size_t
GetLength
(
)
const
;
static
Mappable
*
Create
(
const
char
*
path
)
;
protected
:
explicit
Mappable
(
int
fd
)
:
fd
(
fd
)
{
}
private
:
std
:
:
optional
<
AutoCloseFD
>
fd
;
}
;
#
endif
