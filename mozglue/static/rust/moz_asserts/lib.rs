pub
const
NIGHTLY_BUILD
:
bool
=
cfg
!
(
feature
=
"
nightly
"
)
;
pub
const
MOZ_DIAGNOSTIC_ASSERT_ENABLED
:
bool
=
cfg
!
(
feature
=
"
diagnostic
"
)
;
#
[
macro_export
]
macro_rules
!
nightly_assert
{
(
(
arg
:
tt
)
*
)
=
>
(
if
crate
:
:
NIGHTLY_BUILD
{
assert
!
(
(
arg
)
*
)
;
}
)
}
#
[
macro_export
]
macro_rules
!
nightly_assert_eq
{
(
(
arg
:
tt
)
*
)
=
>
(
if
crate
:
:
NIGHTLY_BUILD
{
assert_eq
!
(
(
arg
)
*
)
;
}
)
}
#
[
macro_export
]
macro_rules
!
nightly_assert_ne
{
(
(
arg
:
tt
)
*
)
=
>
(
if
crate
:
:
NIGHTLY_BUILD
{
assert_ne
!
(
(
arg
)
*
)
;
}
)
}
#
[
macro_export
]
macro_rules
!
nightly_panic
{
(
(
arg
:
tt
)
*
)
=
>
(
if
crate
:
:
NIGHTLY_BUILD
{
panic
!
(
(
arg
)
*
)
;
}
)
}
#
[
macro_export
]
macro_rules
!
nightly_unreachable
{
(
(
arg
:
tt
)
*
)
=
>
{
if
crate
:
:
NIGHTLY_BUILD
{
unreachable
!
(
(
arg
)
*
)
;
}
else
{
std
:
:
hint
:
:
unreachable_unchecked
(
)
}
}
}
#
[
macro_export
]
macro_rules
!
diagnostic_assert
{
(
(
arg
:
tt
)
*
)
=
>
(
if
crate
:
:
MOZ_DIAGNOSTIC_ASSERT_ENABLED
{
assert
!
(
(
arg
)
*
)
;
}
)
}
#
[
macro_export
]
macro_rules
!
diagnostic_assert_eq
{
(
(
arg
:
tt
)
*
)
=
>
(
if
crate
:
:
MOZ_DIAGNOSTIC_ASSERT_ENABLED
{
assert_eq
!
(
(
arg
)
*
)
;
}
)
}
#
[
macro_export
]
macro_rules
!
diagnostic_assert_ne
{
(
(
arg
:
tt
)
*
)
=
>
(
if
crate
:
:
MOZ_DIAGNOSTIC_ASSERT_ENABLED
{
assert_ne
!
(
(
arg
)
*
)
;
}
)
}
#
[
macro_export
]
macro_rules
!
diagnostic_unreachable
{
(
(
arg
:
tt
)
*
)
=
>
{
if
crate
:
:
MOZ_DIAGNOSTIC_ASSERT_ENABLED
{
unreachable
!
(
(
arg
)
*
)
;
}
else
{
std
:
:
hint
:
:
unreachable_unchecked
(
)
}
}
}
