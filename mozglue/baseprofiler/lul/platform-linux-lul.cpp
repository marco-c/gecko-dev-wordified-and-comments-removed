#
include
"
BaseProfiler
.
h
"
#
ifdef
MOZ_GECKO_PROFILER
#
include
<
stdio
.
h
>
#
include
<
signal
.
h
>
#
include
<
string
.
h
>
#
include
<
stdlib
.
h
>
#
include
<
time
.
h
>
#
include
"
platform
.
h
"
#
include
"
PlatformMacros
.
h
"
#
include
"
LulMain
.
h
"
#
include
"
BaseProfilerSharedLibraries
.
h
"
#
include
"
AutoObjectMapper
.
h
"
void
read_procmaps
(
lul
:
:
LUL
*
aLUL
)
{
MOZ_ASSERT
(
aLUL
-
>
CountMappings
(
)
=
=
0
)
;
#
if
defined
(
GP_OS_linux
)
|
|
defined
(
GP_OS_android
)
SharedLibraryInfo
info
=
SharedLibraryInfo
:
:
GetInfoForSelf
(
)
;
for
(
size_t
i
=
0
;
i
<
info
.
GetSize
(
)
;
i
+
+
)
{
const
SharedLibrary
&
lib
=
info
.
GetEntry
(
i
)
;
std
:
:
string
nativePath
=
lib
.
GetDebugPath
(
)
;
#
if
defined
(
MOZ_LINKER
)
AutoObjectMapperFaultyLib
mapper
(
aLUL
-
>
mLog
)
;
#
else
AutoObjectMapperPOSIX
mapper
(
aLUL
-
>
mLog
)
;
#
endif
void
*
image
=
nullptr
;
size_t
size
=
0
;
bool
ok
=
mapper
.
Map
(
&
image
&
size
nativePath
)
;
if
(
ok
&
&
image
&
&
size
>
0
)
{
aLUL
-
>
NotifyAfterMap
(
lib
.
GetStart
(
)
lib
.
GetEnd
(
)
-
lib
.
GetStart
(
)
nativePath
.
c_str
(
)
image
)
;
}
else
if
(
!
ok
&
&
lib
.
GetDebugName
(
)
.
empty
(
)
)
{
aLUL
-
>
NotifyExecutableArea
(
lib
.
GetStart
(
)
lib
.
GetEnd
(
)
-
lib
.
GetStart
(
)
)
;
}
}
#
else
#
error
"
Unknown
platform
"
#
endif
}
void
logging_sink_for_LUL
(
const
char
*
str
)
{
}
#
endif
