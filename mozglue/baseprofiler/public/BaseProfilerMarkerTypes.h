#
ifndef
BaseProfilerMarkerTypes_h
#
define
BaseProfilerMarkerTypes_h
#
include
"
mozilla
/
BaseProfilerMarkers
.
h
"
#
ifdef
MOZ_GECKO_PROFILER
namespace
mozilla
:
:
baseprofiler
:
:
markers
{
struct
MediaSampleMarker
{
static
constexpr
Span
<
const
char
>
MarkerTypeName
(
)
{
return
MakeStringSpan
(
"
MediaSample
"
)
;
}
static
void
StreamJSONMarkerData
(
SpliceableJSONWriter
&
aWriter
int64_t
aSampleStartTimeUs
int64_t
aSampleEndTimeUs
)
{
aWriter
.
IntProperty
(
"
sampleStartTimeUs
"
aSampleStartTimeUs
)
;
aWriter
.
IntProperty
(
"
sampleEndTimeUs
"
aSampleEndTimeUs
)
;
}
static
MarkerSchema
MarkerTypeDisplay
(
)
{
using
MS
=
MarkerSchema
;
MS
schema
{
MS
:
:
Location
:
:
markerChart
MS
:
:
Location
:
:
markerTable
}
;
schema
.
AddKeyLabelFormat
(
"
sampleStartTimeUs
"
"
Sample
start
time
"
MS
:
:
Format
:
:
microseconds
)
;
schema
.
AddKeyLabelFormat
(
"
sampleEndTimeUs
"
"
Sample
end
time
"
MS
:
:
Format
:
:
microseconds
)
;
return
schema
;
}
}
;
struct
ContentBuildMarker
{
static
constexpr
Span
<
const
char
>
MarkerTypeName
(
)
{
return
MakeStringSpan
(
"
CONTENT_FULL_PAINT_TIME
"
)
;
}
static
void
StreamJSONMarkerData
(
SpliceableJSONWriter
&
aWriter
)
{
}
static
MarkerSchema
MarkerTypeDisplay
(
)
{
using
MS
=
MarkerSchema
;
MS
schema
{
MS
:
:
Location
:
:
markerChart
MS
:
:
Location
:
:
markerTable
}
;
return
schema
;
}
}
;
}
#
endif
#
endif
