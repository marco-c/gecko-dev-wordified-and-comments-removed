#
ifndef
ProfileBufferIndex_h
#
define
ProfileBufferIndex_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
<
cstddef
>
#
include
<
cstdint
>
namespace
mozilla
{
using
ProfileBufferIndex
=
uint64_t
;
class
ProfileBufferBlockIndex
{
public
:
ProfileBufferBlockIndex
(
)
:
mBlockIndex
(
0
)
{
}
MOZ_IMPLICIT
ProfileBufferBlockIndex
(
std
:
:
nullptr_t
)
:
mBlockIndex
(
0
)
{
}
explicit
operator
bool
(
)
const
{
return
mBlockIndex
!
=
0
;
}
[
[
nodiscard
]
]
bool
operator
=
=
(
const
ProfileBufferBlockIndex
&
aRhs
)
const
{
return
mBlockIndex
=
=
aRhs
.
mBlockIndex
;
}
[
[
nodiscard
]
]
bool
operator
!
=
(
const
ProfileBufferBlockIndex
&
aRhs
)
const
{
return
mBlockIndex
!
=
aRhs
.
mBlockIndex
;
}
[
[
nodiscard
]
]
bool
operator
<
(
const
ProfileBufferBlockIndex
&
aRhs
)
const
{
return
mBlockIndex
<
aRhs
.
mBlockIndex
;
}
[
[
nodiscard
]
]
bool
operator
<
=
(
const
ProfileBufferBlockIndex
&
aRhs
)
const
{
return
mBlockIndex
<
=
aRhs
.
mBlockIndex
;
}
[
[
nodiscard
]
]
bool
operator
>
(
const
ProfileBufferBlockIndex
&
aRhs
)
const
{
return
mBlockIndex
>
aRhs
.
mBlockIndex
;
}
[
[
nodiscard
]
]
bool
operator
>
=
(
const
ProfileBufferBlockIndex
&
aRhs
)
const
{
return
mBlockIndex
>
=
aRhs
.
mBlockIndex
;
}
[
[
nodiscard
]
]
ProfileBufferIndex
ConvertToProfileBufferIndex
(
)
const
{
return
mBlockIndex
;
}
[
[
nodiscard
]
]
static
ProfileBufferBlockIndex
CreateFromProfileBufferIndex
(
ProfileBufferIndex
aIndex
)
{
return
ProfileBufferBlockIndex
(
aIndex
)
;
}
private
:
explicit
ProfileBufferBlockIndex
(
ProfileBufferIndex
aBlockIndex
)
:
mBlockIndex
(
aBlockIndex
)
{
}
ProfileBufferIndex
mBlockIndex
;
}
;
}
#
endif
