#
ifndef
ProfileBufferEntryKinds_h
#
define
ProfileBufferEntryKinds_h
#
include
<
cstdint
>
namespace
mozilla
{
static
constexpr
size_t
ProfileBufferEntryNumChars
=
8
;
#
define
FOR_EACH_PROFILE_BUFFER_ENTRY_KIND
(
MACRO
)
\
MACRO
(
CategoryPair
int
sizeof
(
int
)
)
\
MACRO
(
CollectionStart
double
sizeof
(
double
)
)
\
MACRO
(
CollectionEnd
double
sizeof
(
double
)
)
\
MACRO
(
Label
const
char
*
sizeof
(
const
char
*
)
)
\
MACRO
(
FrameFlags
uint64_t
sizeof
(
uint64_t
)
)
\
MACRO
(
DynamicStringFragment
char
*
ProfileBufferEntryNumChars
)
\
MACRO
(
JitReturnAddr
void
*
sizeof
(
void
*
)
)
\
MACRO
(
InnerWindowID
uint64_t
sizeof
(
uint64_t
)
)
\
MACRO
(
LineNumber
int
sizeof
(
int
)
)
\
MACRO
(
ColumnNumber
int
sizeof
(
int
)
)
\
MACRO
(
NativeLeafAddr
void
*
sizeof
(
void
*
)
)
\
MACRO
(
Pause
double
sizeof
(
double
)
)
\
MACRO
(
Resume
double
sizeof
(
double
)
)
\
MACRO
(
PauseSampling
double
sizeof
(
double
)
)
\
MACRO
(
ResumeSampling
double
sizeof
(
double
)
)
\
MACRO
(
Responsiveness
double
sizeof
(
double
)
)
\
MACRO
(
ThreadId
int
sizeof
(
int
)
)
\
MACRO
(
Time
double
sizeof
(
double
)
)
\
MACRO
(
TimeBeforeCompactStack
double
sizeof
(
double
)
)
\
MACRO
(
CounterId
void
*
sizeof
(
void
*
)
)
\
MACRO
(
CounterKey
uint64_t
sizeof
(
uint64_t
)
)
\
MACRO
(
Number
uint64_t
sizeof
(
uint64_t
)
)
\
MACRO
(
Count
int64_t
sizeof
(
int64_t
)
)
\
MACRO
(
ProfilerOverheadTime
double
sizeof
(
double
)
)
\
MACRO
(
ProfilerOverheadDuration
double
sizeof
(
double
)
)
using
ProfileBufferEntryKindUnderlyingType
=
uint8_t
;
enum
class
ProfileBufferEntryKind
:
ProfileBufferEntryKindUnderlyingType
{
INVALID
=
0
#
define
KIND
(
KIND
TYPE
SIZE
)
KIND
FOR_EACH_PROFILE_BUFFER_ENTRY_KIND
(
KIND
)
#
undef
KIND
LEGACY_LIMIT
Marker
=
LEGACY_LIMIT
UnresponsiveDurationMs
CompactStack
MODERN_LIMIT
}
;
}
#
endif
