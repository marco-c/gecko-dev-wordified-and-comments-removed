#
include
"
mozilla
/
BaseAndGeckoProfilerDetail
.
h
"
#
include
<
cstring
>
#
include
<
string
>
#
include
<
string_view
>
namespace
mozilla
:
:
profiler
:
:
detail
{
constexpr
std
:
:
string_view
scPidPrefix
=
"
pid
:
"
;
[
[
nodiscard
]
]
MFBT_API
bool
FilterHasPid
(
const
char
*
aFilter
baseprofiler
:
:
BaseProfilerProcessId
aPid
)
{
if
(
strncmp
(
aFilter
scPidPrefix
.
data
(
)
scPidPrefix
.
length
(
)
)
!
=
0
)
{
return
false
;
}
const
std
:
:
string
pidString
=
std
:
:
to_string
(
aPid
.
ToNumber
(
)
)
;
return
pidString
=
=
(
aFilter
+
scPidPrefix
.
length
(
)
)
;
}
[
[
nodiscard
]
]
MFBT_API
bool
FiltersExcludePid
(
Span
<
const
char
*
const
>
aFilters
baseprofiler
:
:
BaseProfilerProcessId
aPid
)
{
if
(
aFilters
.
empty
(
)
)
{
return
false
;
}
for
(
const
char
*
const
filter
:
aFilters
)
{
if
(
strncmp
(
filter
scPidPrefix
.
data
(
)
scPidPrefix
.
length
(
)
)
!
=
0
)
{
return
false
;
}
}
const
std
:
:
string
pidString
=
std
:
:
to_string
(
aPid
.
ToNumber
(
)
)
;
for
(
const
char
*
const
filter
:
aFilters
)
{
if
(
pidString
=
=
(
filter
+
scPidPrefix
.
length
(
)
)
)
{
return
false
;
}
}
return
true
;
}
}
