#
include
<
windows
.
h
>
#
include
<
winternl
.
h
>
#
include
<
io
.
h
>
#
include
<
intrin
.
h
>
#
include
<
setjmp
.
h
>
#
include
"
WindowsCFGStatus
.
h
"
jmp_buf
env
;
#
pragma
optimize
(
"
"
off
)
void
not_entry_point
(
)
{
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
__nop
(
)
;
longjmp
(
env
1
)
;
return
;
}
#
pragma
optimize
(
"
"
on
)
typedef
void
(
*
fn_ptr
)
(
)
;
MFBT_API
bool
CFG_DisabledOrCrash
(
)
{
int
val
=
setjmp
(
env
)
;
if
(
val
=
=
0
)
{
fn_ptr
slide_to_the_left
=
(
fn_ptr
)
(
(
uintptr_t
)
(
not_entry_point
)
+
0x20
)
;
slide_to_the_left
(
)
;
}
return
false
;
}
