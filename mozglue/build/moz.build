if
CONFIG
[
"
JS_STANDALONE
"
]
and
not
CONFIG
[
"
MOZ_MEMORY
"
]
:
Library
(
"
mozglue
"
)
elif
CONFIG
[
"
OS_TARGET
"
]
in
(
"
WINNT
"
"
Darwin
"
"
Android
"
)
:
SharedLibrary
(
"
mozglue
"
)
else
:
Library
(
"
mozglue
"
)
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
Android
"
:
LDFLAGS
+
=
[
"
-
Wl
-
-
version
-
script
%
s
/
mozglue
.
ver
"
%
SRCDIR
]
SOURCES
+
=
[
"
BionicGlue
.
cpp
"
]
if
CONFIG
[
"
MOZ_ASAN
"
]
:
SOURCES
+
=
[
"
AsanOptions
.
cpp
"
]
if
CONFIG
[
"
MOZ_UBSAN
"
]
:
SOURCES
+
=
[
"
UbsanOptions
.
cpp
"
]
if
CONFIG
[
"
MOZ_TSAN
"
]
:
SOURCES
+
=
[
"
TsanOptions
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
:
if
CONFIG
[
"
MOZ_MEMORY
"
]
:
DEFFILE
=
"
mozglue
.
def
"
DELAYLOAD_DLLS
+
=
[
"
oleaut32
.
dll
"
"
ole32
.
dll
"
"
user32
.
dll
"
"
winmm
.
dll
"
]
if
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
:
if
CONFIG
[
"
MOZ_MEMORY
"
]
and
FORCE_SHARED_LIB
:
pass
else
:
NoVisibilityFlags
(
)
SOURCES
+
=
[
"
dummy
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
:
LOCAL_INCLUDES
+
=
[
"
/
memory
/
build
"
]
EXPORTS
.
mozilla
+
=
[
"
arm
.
h
"
"
mips
.
h
"
"
ppc
.
h
"
"
SSE
.
h
"
]
if
CONFIG
[
"
CPU_ARCH
"
]
.
startswith
(
"
x86
"
)
:
SOURCES
+
=
[
"
SSE
.
cpp
"
]
if
CONFIG
[
"
CPU_ARCH
"
]
=
=
"
arm
"
:
SOURCES
+
=
[
"
arm
.
cpp
"
]
if
CONFIG
[
"
CPU_ARCH
"
]
.
startswith
(
"
mips
"
)
:
SOURCES
+
=
[
"
mips
.
cpp
"
]
if
CONFIG
[
"
CPU_ARCH
"
]
.
startswith
(
"
ppc
"
)
:
SOURCES
+
=
[
"
ppc
.
cpp
"
]
if
CONFIG
[
"
MOZ_LINKER
"
]
:
USE_LIBS
+
=
[
"
zlib
"
]
USE_LIBS
+
=
[
"
mfbt
"
]
if
CONFIG
[
"
OS_ARCH
"
]
=
=
"
WINNT
"
:
RCINCLUDE
=
"
/
mozglue
/
mozglue
.
rc
"
if
not
CONFIG
[
"
HAVE_64BIT_BUILD
"
]
:
EXPORTS
+
=
[
"
IAccessible32
.
manifest
"
]
EXPORTS
+
=
[
"
IAccessible64
.
manifest
"
]
LIBRARY_DEFINES
[
"
IMPL_MFBT
"
]
=
True
LIBRARY_DEFINES
[
"
MOZ_HAS_MOZGLUE
"
]
=
True
if
CONFIG
[
"
MOZ_LINKER
"
]
and
CONFIG
[
"
CPU_ARCH
"
]
=
=
"
arm
"
:
LDFLAGS
+
=
[
"
-
Wl
-
version
-
script
%
s
/
arm
-
eabi
-
filter
"
%
SRCDIR
]
DIST_INSTALL
=
True
include
(
"
replace_malloc
.
mozbuild
"
)
