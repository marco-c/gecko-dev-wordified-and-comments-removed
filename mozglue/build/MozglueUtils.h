#
ifndef
mozilla_glue_MozglueUtils_h
#
define
mozilla_glue_MozglueUtils_h
#
include
<
windows
.
h
>
#
include
"
mozilla
/
Attributes
.
h
"
namespace
mozilla
{
namespace
glue
{
class
MOZ_RAII
AutoSharedLock
final
{
public
:
explicit
AutoSharedLock
(
SRWLOCK
&
aLock
)
:
mLock
(
aLock
)
{
:
:
AcquireSRWLockShared
(
&
aLock
)
;
}
~
AutoSharedLock
(
)
{
:
:
ReleaseSRWLockShared
(
&
mLock
)
;
}
AutoSharedLock
(
const
AutoSharedLock
&
)
=
delete
;
AutoSharedLock
(
AutoSharedLock
&
&
)
=
delete
;
AutoSharedLock
&
operator
=
(
const
AutoSharedLock
&
)
=
delete
;
AutoSharedLock
&
operator
=
(
AutoSharedLock
&
&
)
=
delete
;
private
:
SRWLOCK
&
mLock
;
}
;
class
MOZ_RAII
AutoExclusiveLock
final
{
public
:
explicit
AutoExclusiveLock
(
SRWLOCK
&
aLock
)
:
mLock
(
aLock
)
{
:
:
AcquireSRWLockExclusive
(
&
aLock
)
;
}
~
AutoExclusiveLock
(
)
{
:
:
ReleaseSRWLockExclusive
(
&
mLock
)
;
}
AutoExclusiveLock
(
const
AutoExclusiveLock
&
)
=
delete
;
AutoExclusiveLock
(
AutoExclusiveLock
&
&
)
=
delete
;
AutoExclusiveLock
&
operator
=
(
const
AutoExclusiveLock
&
)
=
delete
;
AutoExclusiveLock
&
operator
=
(
AutoExclusiveLock
&
&
)
=
delete
;
private
:
SRWLOCK
&
mLock
;
}
;
}
}
#
endif
