#
ifndef
mozilla_net_StunAddrsRequestChild_h
#
define
mozilla_net_StunAddrsRequestChild_h
#
include
"
mozilla
/
net
/
PStunAddrsRequestChild
.
h
"
class
nsIEventTarget
;
namespace
mozilla
{
namespace
net
{
class
StunAddrsListener
{
public
:
virtual
void
OnStunAddrsAvailable
(
const
NrIceStunAddrArray
&
addrs
)
=
0
;
NS_IMETHOD_
(
MozExternalRefCountType
)
AddRef
(
)
;
NS_IMETHOD_
(
MozExternalRefCountType
)
Release
(
)
;
protected
:
virtual
~
StunAddrsListener
(
)
{
}
ThreadSafeAutoRefCnt
mRefCnt
;
NS_DECL_OWNINGTHREAD
}
;
class
StunAddrsRequestChild
final
:
public
PStunAddrsRequestChild
{
public
:
explicit
StunAddrsRequestChild
(
StunAddrsListener
*
listener
nsIEventTarget
*
mainThreadEventTarget
)
;
NS_IMETHOD_
(
MozExternalRefCountType
)
AddRef
(
)
;
NS_IMETHOD_
(
MozExternalRefCountType
)
Release
(
)
;
void
AddIPDLReference
(
)
{
AddRef
(
)
;
}
void
ReleaseIPDLReference
(
)
{
Release
(
)
;
}
void
Cancel
(
)
;
protected
:
virtual
~
StunAddrsRequestChild
(
)
{
}
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvOnStunAddrsAvailable
(
const
NrIceStunAddrArray
&
addrs
)
override
;
RefPtr
<
StunAddrsListener
>
mListener
;
ThreadSafeAutoRefCnt
mRefCnt
;
NS_DECL_OWNINGTHREAD
}
;
}
}
#
endif
