#
ifndef
webrtc_tcp_socket_wrapper__
#
define
webrtc_tcp_socket_wrapper__
#
include
<
memory
>
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
mozilla
/
net
/
WebrtcTCPSocketCallback
.
h
"
class
nsIEventTarget
;
namespace
mozilla
{
class
NrSocketProxyConfig
;
namespace
net
{
class
WebrtcTCPSocketChild
;
class
WebrtcTCPSocketWrapper
:
public
WebrtcTCPSocketCallback
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
WebrtcTCPSocketWrapper
override
)
explicit
WebrtcTCPSocketWrapper
(
WebrtcTCPSocketCallback
*
aCallbacks
)
;
virtual
void
AsyncOpen
(
const
nsCString
&
aHost
const
int
&
aPort
const
nsCString
&
aLocalAddress
const
int
&
aLocalPort
const
std
:
:
shared_ptr
<
NrSocketProxyConfig
>
&
aConfig
)
;
virtual
void
SendWrite
(
nsTArray
<
uint8_t
>
&
&
aReadData
)
;
virtual
void
Close
(
)
;
virtual
void
OnClose
(
nsresult
aReason
)
override
;
virtual
void
OnConnected
(
)
override
;
virtual
void
OnRead
(
nsTArray
<
uint8_t
>
&
&
aReadData
)
override
;
protected
:
RefPtr
<
WebrtcTCPSocketCallback
>
mProxyCallbacks
;
RefPtr
<
WebrtcTCPSocketChild
>
mWebrtcTCPSocket
;
nsCOMPtr
<
nsIEventTarget
>
mMainThread
;
nsCOMPtr
<
nsIEventTarget
>
mSocketThread
;
virtual
~
WebrtcTCPSocketWrapper
(
)
;
}
;
}
}
#
endif
