#
include
"
mediapacket
.
h
"
#
include
<
cstring
>
namespace
mozilla
{
void
MediaPacket
:
:
Copy
(
const
uint8_t
*
data
size_t
len
size_t
capacity
)
{
if
(
capacity
<
len
)
{
capacity
=
len
;
}
data_
.
reset
(
new
uint8_t
[
capacity
]
)
;
len_
=
len
;
capacity_
=
capacity
;
memcpy
(
data_
.
get
(
)
data
len
)
;
}
static
bool
IsRtp
(
const
uint8_t
*
data
size_t
len
)
{
if
(
len
<
2
)
return
false
;
if
(
(
data
[
1
]
<
192
)
|
|
(
data
[
1
]
>
207
)
)
return
true
;
if
(
data
[
1
]
=
=
192
)
return
false
;
if
(
data
[
1
]
=
=
193
)
return
true
;
if
(
data
[
1
]
=
=
194
)
return
true
;
if
(
data
[
1
]
=
=
195
)
return
false
;
if
(
(
data
[
1
]
>
195
)
&
&
(
data
[
1
]
<
200
)
)
return
true
;
if
(
(
data
[
1
]
>
=
200
)
&
&
(
data
[
1
]
<
=
207
)
)
return
false
;
MOZ_ASSERT
(
false
)
;
return
true
;
}
void
MediaPacket
:
:
Categorize
(
)
{
SetType
(
MediaPacket
:
:
UNCLASSIFIED
)
;
if
(
!
data_
|
|
len_
<
4
)
{
return
;
}
if
(
data_
[
0
]
>
=
20
&
&
data_
[
0
]
<
=
63
)
{
SetType
(
MediaPacket
:
:
DTLS
)
;
}
else
if
(
data_
[
0
]
>
127
&
&
data_
[
0
]
<
192
)
{
if
(
IsRtp
(
data_
.
get
(
)
len_
)
)
{
SetType
(
MediaPacket
:
:
SRTP
)
;
}
else
{
SetType
(
MediaPacket
:
:
SRTCP
)
;
}
}
}
}
