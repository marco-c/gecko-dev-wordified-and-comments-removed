#
ifndef
webrtc_proxy_channel_wrapper__
#
define
webrtc_proxy_channel_wrapper__
#
include
<
memory
>
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
mozilla
/
net
/
WebrtcProxyChannelCallback
.
h
"
class
nsIEventTarget
;
namespace
mozilla
{
class
NrSocketProxyConfig
;
namespace
net
{
class
WebrtcProxyChannelChild
;
class
WebrtcProxyChannelWrapper
:
public
WebrtcProxyChannelCallback
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
WebrtcProxyChannelWrapper
override
)
explicit
WebrtcProxyChannelWrapper
(
WebrtcProxyChannelCallback
*
aCallbacks
)
;
virtual
void
AsyncOpen
(
const
nsCString
&
aHost
const
int
&
aPort
const
std
:
:
shared_ptr
<
NrSocketProxyConfig
>
&
aConfig
)
;
virtual
void
SendWrite
(
nsTArray
<
uint8_t
>
&
&
aReadData
)
;
virtual
void
Close
(
)
;
virtual
void
OnClose
(
nsresult
aReason
)
override
;
virtual
void
OnConnected
(
)
override
;
virtual
void
OnRead
(
nsTArray
<
uint8_t
>
&
&
aReadData
)
override
;
protected
:
RefPtr
<
WebrtcProxyChannelCallback
>
mProxyCallbacks
;
RefPtr
<
WebrtcProxyChannelChild
>
mWebrtcProxyChannel
;
nsCOMPtr
<
nsIEventTarget
>
mMainThread
;
nsCOMPtr
<
nsIEventTarget
>
mSocketThread
;
virtual
~
WebrtcProxyChannelWrapper
(
)
;
}
;
}
}
#
endif
