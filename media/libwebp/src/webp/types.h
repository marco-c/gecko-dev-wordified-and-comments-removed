#
ifndef
WEBP_WEBP_TYPES_H_
#
define
WEBP_WEBP_TYPES_H_
#
include
<
stddef
.
h
>
#
ifndef
_MSC_VER
#
include
<
inttypes
.
h
>
#
if
defined
(
__cplusplus
)
|
|
!
defined
(
__STRICT_ANSI__
)
|
|
\
(
defined
(
__STDC_VERSION__
)
&
&
__STDC_VERSION__
>
=
199901L
)
#
define
WEBP_INLINE
inline
#
else
#
define
WEBP_INLINE
#
endif
#
else
typedef
signed
char
int8_t
;
typedef
unsigned
char
uint8_t
;
typedef
signed
short
int16_t
;
typedef
unsigned
short
uint16_t
;
typedef
signed
int
int32_t
;
typedef
unsigned
int
uint32_t
;
typedef
unsigned
long
long
int
uint64_t
;
typedef
long
long
int
int64_t
;
#
define
WEBP_INLINE
__forceinline
#
endif
#
ifndef
WEBP_NODISCARD
#
if
defined
(
WEBP_ENABLE_NODISCARD
)
&
&
WEBP_ENABLE_NODISCARD
#
if
(
defined
(
__cplusplus
)
&
&
__cplusplus
>
=
201703L
)
|
|
\
(
defined
(
__STDC_VERSION__
)
&
&
__STDC_VERSION__
>
=
202311L
)
#
define
WEBP_NODISCARD
[
[
nodiscard
]
]
#
else
#
if
defined
(
__clang__
)
&
&
defined
(
__has_attribute
)
#
if
__has_attribute
(
warn_unused_result
)
#
define
WEBP_NODISCARD
__attribute__
(
(
warn_unused_result
)
)
#
else
#
define
WEBP_NODISCARD
#
endif
#
else
#
define
WEBP_NODISCARD
#
endif
#
endif
#
else
#
define
WEBP_NODISCARD
#
endif
#
endif
#
ifndef
WEBP_EXTERN
#
if
defined
(
_WIN32
)
&
&
defined
(
WEBP_DLL
)
#
define
WEBP_EXTERN
__declspec
(
dllexport
)
#
elif
defined
(
__GNUC__
)
&
&
__GNUC__
>
=
4
#
define
WEBP_EXTERN
extern
__attribute__
(
(
visibility
(
"
default
"
)
)
)
#
else
#
define
WEBP_EXTERN
extern
#
endif
#
endif
#
define
WEBP_ABI_IS_INCOMPATIBLE
(
a
b
)
(
(
(
a
)
>
>
8
)
!
=
(
(
b
)
>
>
8
)
)
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
WEBP_NODISCARD
WEBP_EXTERN
void
*
WebPMalloc
(
size_t
size
)
;
WEBP_EXTERN
void
WebPFree
(
void
*
ptr
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
