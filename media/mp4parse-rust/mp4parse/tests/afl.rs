extern
crate
mp4parse
;
use
std
:
:
io
:
:
Cursor
;
#
[
test
]
fn
fuzz_2
(
)
{
let
mut
c
=
Cursor
:
:
new
(
b
"
\
x00
\
x00
\
x00
\
x04
\
xa6
\
x00
\
x04
\
xa6
"
.
to_vec
(
)
)
;
let
mut
context
=
mp4parse
:
:
MediaContext
:
:
new
(
)
;
let
_
=
mp4parse
:
:
read_mp4
(
&
mut
c
&
mut
context
)
;
}
#
[
test
]
fn
fuzz_4
(
)
{
let
mut
c
=
Cursor
:
:
new
(
b
"
\
x00
\
x00
\
x00
\
x01
\
x30
\
x30
\
x30
\
x30
\
x00
\
x00
\
x00
\
x00
\
x00
\
x00
\
x00
\
x00
"
.
to_vec
(
)
)
;
let
mut
context
=
mp4parse
:
:
MediaContext
:
:
new
(
)
;
let
_
=
mp4parse
:
:
read_mp4
(
&
mut
c
&
mut
context
)
;
}
#
[
test
]
fn
fuzz_5
(
)
{
let
mut
c
=
Cursor
:
:
new
(
b
"
\
x30
\
x30
\
x30
\
x30
\
x66
\
x74
\
x79
\
x70
\
x30
\
x30
\
x30
\
x30
\
x30
\
x30
\
x30
\
x30
"
.
to_vec
(
)
)
;
let
mut
context
=
mp4parse
:
:
MediaContext
:
:
new
(
)
;
let
_
=
mp4parse
:
:
read_mp4
(
&
mut
c
&
mut
context
)
;
}
#
[
test
]
fn
fuzz_6
(
)
{
let
mut
c
=
Cursor
:
:
new
(
b
"
\
x00
\
x00
\
x00
\
x13
\
x66
\
x74
\
x79
\
x70
\
x30
\
x30
\
x30
\
x30
\
x30
\
x30
\
x30
\
x30
"
.
to_vec
(
)
)
;
let
mut
context
=
mp4parse
:
:
MediaContext
:
:
new
(
)
;
let
_
=
mp4parse
:
:
read_mp4
(
&
mut
c
&
mut
context
)
;
}
