use
futures
:
:
{
Poll
Sink
Stream
}
;
use
std
:
:
io
;
mod
client
;
mod
driver
;
mod
server
;
pub
use
self
:
:
client
:
:
{
bind_client
Client
ClientProxy
Response
}
;
pub
use
self
:
:
server
:
:
{
bind_server
Server
}
;
pub
trait
Handler
{
type
In
;
type
Out
;
type
Transport
:
'
static
+
Stream
<
Item
=
Self
:
:
In
Error
=
io
:
:
Error
>
+
Sink
<
SinkItem
=
Self
:
:
Out
SinkError
=
io
:
:
Error
>
;
fn
transport
(
&
mut
self
)
-
>
&
mut
Self
:
:
Transport
;
fn
consume
(
&
mut
self
message
:
Self
:
:
In
)
-
>
io
:
:
Result
<
(
)
>
;
fn
produce
(
&
mut
self
)
-
>
Poll
<
Option
<
Self
:
:
Out
>
io
:
:
Error
>
;
fn
has_in_flight
(
&
self
)
-
>
bool
;
}
