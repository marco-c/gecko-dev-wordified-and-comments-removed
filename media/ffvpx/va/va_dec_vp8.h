#
ifndef
VA_DEC_VP8_H
#
define
VA_DEC_VP8_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
typedef
struct
_VABoolCoderContextVPX
{
uint8_t
range
;
uint8_t
value
;
uint8_t
count
;
}
VABoolCoderContextVPX
;
typedef
struct
_VAPictureParameterBufferVP8
{
uint32_t
frame_width
;
uint32_t
frame_height
;
VASurfaceID
last_ref_frame
;
VASurfaceID
golden_ref_frame
;
VASurfaceID
alt_ref_frame
;
VASurfaceID
out_of_loop_frame
;
union
{
struct
{
uint32_t
key_frame
:
1
;
uint32_t
version
:
3
;
uint32_t
segmentation_enabled
:
1
;
uint32_t
update_mb_segmentation_map
:
1
;
uint32_t
update_segment_feature_data
:
1
;
uint32_t
filter_type
:
1
;
uint32_t
sharpness_level
:
3
;
uint32_t
loop_filter_adj_enable
:
1
;
uint32_t
mode_ref_lf_delta_update
:
1
;
uint32_t
sign_bias_golden
:
1
;
uint32_t
sign_bias_alternate
:
1
;
uint32_t
mb_no_coeff_skip
:
1
;
uint32_t
loop_filter_disable
:
1
;
}
bits
;
uint32_t
value
;
}
pic_fields
;
uint8_t
mb_segment_tree_probs
[
3
]
;
uint8_t
loop_filter_level
[
4
]
;
int8_t
loop_filter_deltas_ref_frame
[
4
]
;
int8_t
loop_filter_deltas_mode
[
4
]
;
uint8_t
prob_skip_false
;
uint8_t
prob_intra
;
uint8_t
prob_last
;
uint8_t
prob_gf
;
uint8_t
y_mode_probs
[
4
]
;
uint8_t
uv_mode_probs
[
3
]
;
uint8_t
mv_probs
[
2
]
[
19
]
;
VABoolCoderContextVPX
bool_coder_ctx
;
uint32_t
va_reserved
[
VA_PADDING_LOW
]
;
}
VAPictureParameterBufferVP8
;
typedef
struct
_VASliceParameterBufferVP8
{
uint32_t
slice_data_size
;
uint32_t
slice_data_offset
;
uint32_t
slice_data_flag
;
uint32_t
macroblock_offset
;
uint8_t
num_of_partitions
;
uint32_t
partition_size
[
9
]
;
uint32_t
va_reserved
[
VA_PADDING_LOW
]
;
}
VASliceParameterBufferVP8
;
typedef
struct
_VAProbabilityDataBufferVP8
{
uint8_t
dct_coeff_probs
[
4
]
[
8
]
[
3
]
[
11
]
;
uint32_t
va_reserved
[
VA_PADDING_LOW
]
;
}
VAProbabilityDataBufferVP8
;
typedef
struct
_VAIQMatrixBufferVP8
{
uint16_t
quantization_index
[
4
]
[
6
]
;
uint32_t
va_reserved
[
VA_PADDING_LOW
]
;
}
VAIQMatrixBufferVP8
;
#
ifdef
__cplusplus
}
#
endif
#
endif
