#
ifndef
AVCODEC_DECODE_H
#
define
AVCODEC_DECODE_H
#
include
"
libavutil
/
buffer
.
h
"
#
include
"
libavutil
/
frame
.
h
"
#
include
"
libavutil
/
hwcontext
.
h
"
#
include
"
avcodec
.
h
"
typedef
struct
FrameDecodeData
{
int
(
*
post_process
)
(
void
*
logctx
AVFrame
*
frame
)
;
void
*
post_process_opaque
;
void
(
*
post_process_opaque_free
)
(
void
*
opaque
)
;
void
*
hwaccel_priv
;
void
(
*
hwaccel_priv_free
)
(
void
*
priv
)
;
}
FrameDecodeData
;
int
ff_decode_get_packet
(
AVCodecContext
*
avctx
AVPacket
*
pkt
)
;
int
ff_decode_frame_props_from_pkt
(
const
AVCodecContext
*
avctx
AVFrame
*
frame
const
AVPacket
*
pkt
)
;
int
ff_decode_frame_props
(
AVCodecContext
*
avctx
AVFrame
*
frame
)
;
int
ff_decode_get_hw_frames_ctx
(
AVCodecContext
*
avctx
enum
AVHWDeviceType
dev_type
)
;
int
ff_attach_decode_data
(
AVFrame
*
frame
)
;
int
ff_copy_palette
(
void
*
dst
const
AVPacket
*
src
void
*
logctx
)
;
int
ff_set_dimensions
(
AVCodecContext
*
s
int
width
int
height
)
;
int
ff_set_sar
(
AVCodecContext
*
avctx
AVRational
sar
)
;
int
ff_get_format
(
AVCodecContext
*
avctx
const
enum
AVPixelFormat
*
fmt
)
;
int
ff_get_buffer
(
AVCodecContext
*
avctx
AVFrame
*
frame
int
flags
)
;
#
define
FF_REGET_BUFFER_FLAG_READONLY
1
/
/
/
<
the
returned
buffer
does
not
need
to
be
writable
int
ff_reget_buffer
(
AVCodecContext
*
avctx
AVFrame
*
frame
int
flags
)
;
int
ff_side_data_update_matrix_encoding
(
AVFrame
*
frame
enum
AVMatrixEncoding
matrix_encoding
)
;
int
ff_hwaccel_frame_priv_alloc
(
AVCodecContext
*
avctx
void
*
*
hwaccel_picture_private
AVBufferRef
*
*
hwaccel_priv_buf
)
;
#
endif
