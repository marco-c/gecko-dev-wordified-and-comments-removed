#
ifndef
AVCODEC_CBS_H
#
define
AVCODEC_CBS_H
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
"
libavutil
/
buffer
.
h
"
#
include
"
codec_id
.
h
"
#
include
"
codec_par
.
h
"
#
include
"
packet
.
h
"
struct
AVCodecContext
;
struct
CodedBitstreamType
;
typedef
uint32_t
CodedBitstreamUnitType
;
typedef
struct
CodedBitstreamUnit
{
CodedBitstreamUnitType
type
;
uint8_t
*
data
;
size_t
data_size
;
size_t
data_bit_padding
;
AVBufferRef
*
data_ref
;
void
*
content
;
AVBufferRef
*
content_ref
;
}
CodedBitstreamUnit
;
typedef
struct
CodedBitstreamFragment
{
uint8_t
*
data
;
size_t
data_size
;
size_t
data_bit_padding
;
AVBufferRef
*
data_ref
;
int
nb_units
;
int
nb_units_allocated
;
CodedBitstreamUnit
*
units
;
}
CodedBitstreamFragment
;
typedef
struct
CodedBitstreamContext
{
void
*
log_ctx
;
const
struct
CodedBitstreamType
*
codec
;
void
*
priv_data
;
const
CodedBitstreamUnitType
*
decompose_unit_types
;
int
nb_decompose_unit_types
;
int
trace_enable
;
int
trace_level
;
uint8_t
*
write_buffer
;
size_t
write_buffer_size
;
}
CodedBitstreamContext
;
extern
const
enum
AVCodecID
ff_cbs_all_codec_ids
[
]
;
int
ff_cbs_init
(
CodedBitstreamContext
*
*
ctx
enum
AVCodecID
codec_id
void
*
log_ctx
)
;
void
ff_cbs_flush
(
CodedBitstreamContext
*
ctx
)
;
void
ff_cbs_close
(
CodedBitstreamContext
*
*
ctx
)
;
int
ff_cbs_read_extradata
(
CodedBitstreamContext
*
ctx
CodedBitstreamFragment
*
frag
const
AVCodecParameters
*
par
)
;
int
ff_cbs_read_extradata_from_codec
(
CodedBitstreamContext
*
ctx
CodedBitstreamFragment
*
frag
const
struct
AVCodecContext
*
avctx
)
;
int
ff_cbs_read_packet_side_data
(
CodedBitstreamContext
*
ctx
CodedBitstreamFragment
*
frag
const
AVPacket
*
pkt
)
;
int
ff_cbs_read_packet
(
CodedBitstreamContext
*
ctx
CodedBitstreamFragment
*
frag
const
AVPacket
*
pkt
)
;
int
ff_cbs_read
(
CodedBitstreamContext
*
ctx
CodedBitstreamFragment
*
frag
const
uint8_t
*
data
size_t
size
)
;
int
ff_cbs_write_fragment_data
(
CodedBitstreamContext
*
ctx
CodedBitstreamFragment
*
frag
)
;
int
ff_cbs_write_extradata
(
CodedBitstreamContext
*
ctx
AVCodecParameters
*
par
CodedBitstreamFragment
*
frag
)
;
int
ff_cbs_write_packet
(
CodedBitstreamContext
*
ctx
AVPacket
*
pkt
CodedBitstreamFragment
*
frag
)
;
void
ff_cbs_fragment_reset
(
CodedBitstreamFragment
*
frag
)
;
void
ff_cbs_fragment_free
(
CodedBitstreamFragment
*
frag
)
;
int
ff_cbs_alloc_unit_content
(
CodedBitstreamUnit
*
unit
size_t
size
void
(
*
free
)
(
void
*
opaque
uint8_t
*
content
)
)
;
int
ff_cbs_alloc_unit_content2
(
CodedBitstreamContext
*
ctx
CodedBitstreamUnit
*
unit
)
;
int
ff_cbs_insert_unit_content
(
CodedBitstreamFragment
*
frag
int
position
CodedBitstreamUnitType
type
void
*
content
AVBufferRef
*
content_buf
)
;
int
ff_cbs_append_unit_data
(
CodedBitstreamFragment
*
frag
CodedBitstreamUnitType
type
uint8_t
*
data
size_t
data_size
AVBufferRef
*
data_buf
)
;
void
ff_cbs_delete_unit
(
CodedBitstreamFragment
*
frag
int
position
)
;
int
ff_cbs_make_unit_refcounted
(
CodedBitstreamContext
*
ctx
CodedBitstreamUnit
*
unit
)
;
int
ff_cbs_make_unit_writable
(
CodedBitstreamContext
*
ctx
CodedBitstreamUnit
*
unit
)
;
#
endif
