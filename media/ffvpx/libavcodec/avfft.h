#
ifndef
AVCODEC_AVFFT_H
#
define
AVCODEC_AVFFT_H
#
include
"
libavutil
/
attributes
.
h
"
#
include
"
version_major
.
h
"
#
if
FF_API_AVFFT
typedef
float
FFTSample
;
typedef
struct
FFTComplex
{
FFTSample
re
im
;
}
FFTComplex
;
typedef
struct
FFTContext
FFTContext
;
attribute_deprecated
FFTContext
*
av_fft_init
(
int
nbits
int
inverse
)
;
attribute_deprecated
void
av_fft_permute
(
FFTContext
*
s
FFTComplex
*
z
)
;
attribute_deprecated
void
av_fft_calc
(
FFTContext
*
s
FFTComplex
*
z
)
;
attribute_deprecated
void
av_fft_end
(
FFTContext
*
s
)
;
attribute_deprecated
FFTContext
*
av_mdct_init
(
int
nbits
int
inverse
double
scale
)
;
attribute_deprecated
void
av_imdct_calc
(
FFTContext
*
s
FFTSample
*
output
const
FFTSample
*
input
)
;
attribute_deprecated
void
av_imdct_half
(
FFTContext
*
s
FFTSample
*
output
const
FFTSample
*
input
)
;
attribute_deprecated
void
av_mdct_calc
(
FFTContext
*
s
FFTSample
*
output
const
FFTSample
*
input
)
;
attribute_deprecated
void
av_mdct_end
(
FFTContext
*
s
)
;
enum
RDFTransformType
{
DFT_R2C
IDFT_C2R
IDFT_R2C
DFT_C2R
}
;
typedef
struct
RDFTContext
RDFTContext
;
attribute_deprecated
RDFTContext
*
av_rdft_init
(
int
nbits
enum
RDFTransformType
trans
)
;
attribute_deprecated
void
av_rdft_calc
(
RDFTContext
*
s
FFTSample
*
data
)
;
attribute_deprecated
void
av_rdft_end
(
RDFTContext
*
s
)
;
typedef
struct
DCTContext
DCTContext
;
enum
DCTTransformType
{
DCT_II
=
0
DCT_III
DCT_I
DST_I
}
;
attribute_deprecated
DCTContext
*
av_dct_init
(
int
nbits
enum
DCTTransformType
type
)
;
attribute_deprecated
void
av_dct_calc
(
DCTContext
*
s
FFTSample
*
data
)
;
attribute_deprecated
void
av_dct_end
(
DCTContext
*
s
)
;
#
endif
#
endif
