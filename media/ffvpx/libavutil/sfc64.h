#
ifndef
AVUTIL_SFC64_H
#
define
AVUTIL_SFC64_H
#
include
<
inttypes
.
h
>
typedef
struct
FFSFC64
{
uint64_t
a
b
c
counter
;
}
FFSFC64
;
static
inline
uint64_t
ff_sfc64_get
(
FFSFC64
*
s
)
{
uint64_t
tmp
=
s
-
>
a
+
s
-
>
b
+
s
-
>
counter
+
+
;
s
-
>
a
=
s
-
>
b
^
(
s
-
>
b
>
>
11
)
;
s
-
>
b
=
s
-
>
c
+
(
s
-
>
c
<
<
3
)
;
s
-
>
c
=
(
s
-
>
c
<
<
24
|
s
-
>
c
>
>
40
)
+
tmp
;
return
tmp
;
}
static
inline
uint64_t
ff_sfc64_reverse_get
(
FFSFC64
*
s
)
{
uint64_t
prev_c
=
s
-
>
b
*
0x8E38E38E38E38E39
;
uint64_t
tmp
=
s
-
>
c
-
(
prev_c
<
<
24
|
prev_c
>
>
40
)
;
s
-
>
b
=
s
-
>
a
^
(
s
-
>
a
>
>
11
)
;
s
-
>
b
^
=
s
-
>
b
>
>
22
;
s
-
>
b
^
=
s
-
>
b
>
>
44
;
s
-
>
a
=
tmp
-
s
-
>
b
-
-
-
s
-
>
counter
;
s
-
>
c
=
prev_c
;
return
tmp
;
}
static
inline
void
ff_sfc64_init
(
FFSFC64
*
s
uint64_t
seeda
uint64_t
seedb
uint64_t
seedc
int
rounds
)
{
s
-
>
a
=
seeda
;
s
-
>
b
=
seedb
;
s
-
>
c
=
seedc
;
s
-
>
counter
=
1
;
while
(
rounds
-
-
)
ff_sfc64_get
(
s
)
;
}
#
endif
