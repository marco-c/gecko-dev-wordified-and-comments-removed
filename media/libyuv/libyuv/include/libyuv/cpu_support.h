#
ifndef
INCLUDE_LIBYUV_CPU_SUPPORT_H_
#
define
INCLUDE_LIBYUV_CPU_SUPPORT_H_
#
ifdef
__cplusplus
namespace
libyuv
{
extern
"
C
"
{
#
endif
#
if
defined
(
__pnacl__
)
|
|
defined
(
__CLR_VER
)
|
|
\
(
defined
(
__native_client__
)
&
&
defined
(
__x86_64__
)
)
|
|
\
(
defined
(
__i386__
)
&
&
!
defined
(
__SSE__
)
&
&
!
defined
(
__clang__
)
)
#
define
LIBYUV_DISABLE_X86
#
endif
#
if
defined
(
__native_client__
)
#
define
LIBYUV_DISABLE_NEON
#
endif
#
if
defined
(
__has_feature
)
#
if
__has_feature
(
memory_sanitizer
)
&
&
!
defined
(
LIBYUV_DISABLE_NEON
)
#
define
LIBYUV_DISABLE_NEON
#
endif
#
if
__has_feature
(
memory_sanitizer
)
&
&
!
defined
(
LIBYUV_DISABLE_X86
)
#
define
LIBYUV_DISABLE_X86
#
endif
#
endif
#
if
defined
(
__clang__
)
&
&
defined
(
__aarch64__
)
&
&
!
defined
(
LIBYUV_DISABLE_NEON
)
#
if
(
__clang_major__
<
3
)
|
|
(
__clang_major__
=
=
3
&
&
(
__clang_minor__
<
5
)
)
#
define
LIBYUV_DISABLE_NEON
#
endif
#
endif
#
if
defined
(
__GNUC__
)
&
&
!
defined
(
LIBYUV_ENABLE_ROWWIN
)
&
&
\
(
defined
(
__x86_64__
)
|
|
defined
(
__i386__
)
)
#
if
(
__GNUC__
>
4
)
|
|
(
__GNUC__
=
=
4
&
&
(
__GNUC_MINOR__
>
=
7
)
)
#
define
GCC_HAS_AVX2
1
#
endif
#
endif
#
if
defined
(
__clang__
)
&
&
!
defined
(
LIBYUV_ENABLE_ROWWIN
)
&
&
\
(
defined
(
__x86_64__
)
|
|
defined
(
__i386__
)
)
#
if
(
__clang_major__
>
3
)
|
|
(
__clang_major__
=
=
3
&
&
(
__clang_minor__
>
=
4
)
)
#
define
CLANG_HAS_AVX2
1
#
endif
#
endif
#
if
defined
(
__clang__
)
&
&
!
defined
(
LIBYUV_ENABLE_ROWWIN
)
&
&
\
(
defined
(
__x86_64__
)
|
|
defined
(
__i386__
)
)
#
if
(
__clang_major__
>
=
7
)
&
&
!
defined
(
__APPLE__
)
#
define
CLANG_HAS_AVX512
1
#
endif
#
endif
#
if
defined
(
_M_IX86
)
&
&
\
(
!
defined
(
__clang__
)
|
|
defined
(
LIBYUV_ENABLE_ROWWIN
)
)
&
&
\
defined
(
_MSC_VER
)
&
&
_MSC_VER
>
=
1700
#
define
VISUALC_HAS_AVX2
1
#
endif
#
if
!
defined
(
LIBYUV_DISABLE_SME
)
&
&
defined
(
__aarch64__
)
&
&
\
defined
(
__linux__
)
&
&
defined
(
__clang__
)
&
&
(
__clang_major__
>
=
19
)
#
define
CLANG_HAS_SME
1
#
endif
#
ifdef
__cplusplus
}
}
#
endif
#
endif
