#
ifndef
INCLUDE_LIBYUV_COMPARE_ROW_H_
#
define
INCLUDE_LIBYUV_COMPARE_ROW_H_
#
include
"
libyuv
/
basic_types
.
h
"
#
ifdef
__cplusplus
namespace
libyuv
{
extern
"
C
"
{
#
endif
#
if
defined
(
__pnacl__
)
|
|
defined
(
__CLR_VER
)
|
|
\
(
defined
(
__i386__
)
&
&
!
defined
(
__SSE__
)
&
&
!
defined
(
__clang__
)
)
#
define
LIBYUV_DISABLE_X86
#
endif
#
if
defined
(
__has_feature
)
#
if
__has_feature
(
memory_sanitizer
)
#
define
LIBYUV_DISABLE_X86
#
endif
#
endif
#
if
defined
(
_M_IX86
)
&
&
!
defined
(
__clang__
)
&
&
defined
(
_MSC_VER
)
&
&
\
_MSC_VER
>
=
1700
#
define
VISUALC_HAS_AVX2
1
#
endif
#
if
defined
(
__clang__
)
&
&
(
defined
(
__x86_64__
)
|
|
defined
(
__i386__
)
)
#
if
(
__clang_major__
>
3
)
|
|
(
__clang_major__
=
=
3
&
&
(
__clang_minor__
>
=
4
)
)
#
define
CLANG_HAS_AVX2
1
#
endif
#
endif
#
if
!
defined
(
LIBYUV_DISABLE_X86
)
&
&
defined
(
_M_IX86
)
&
&
\
(
defined
(
VISUALC_HAS_AVX2
)
|
|
defined
(
CLANG_HAS_AVX2
)
)
#
define
HAS_HASHDJB2_AVX2
#
endif
#
if
!
defined
(
LIBYUV_DISABLE_X86
)
&
&
\
(
defined
(
__x86_64__
)
|
|
(
defined
(
__i386__
)
|
|
defined
(
_M_IX86
)
)
)
#
define
HAS_HASHDJB2_SSE41
#
define
HAS_SUMSQUAREERROR_SSE2
#
endif
#
if
!
defined
(
LIBYUV_DISABLE_X86
)
&
&
defined
(
_M_IX86
)
&
&
\
(
defined
(
VISUALC_HAS_AVX2
)
|
|
defined
(
CLANG_HAS_AVX2
)
)
#
define
HAS_HASHDJB2_AVX2
#
define
HAS_SUMSQUAREERROR_AVX2
#
endif
#
if
!
defined
(
LIBYUV_DISABLE_NEON
)
&
&
\
(
defined
(
__ARM_NEON__
)
|
|
defined
(
LIBYUV_NEON
)
|
|
defined
(
__aarch64__
)
)
#
define
HAS_SUMSQUAREERROR_NEON
#
endif
uint32
SumSquareError_C
(
const
uint8
*
src_a
const
uint8
*
src_b
int
count
)
;
uint32
SumSquareError_SSE2
(
const
uint8
*
src_a
const
uint8
*
src_b
int
count
)
;
uint32
SumSquareError_AVX2
(
const
uint8
*
src_a
const
uint8
*
src_b
int
count
)
;
uint32
SumSquareError_NEON
(
const
uint8
*
src_a
const
uint8
*
src_b
int
count
)
;
uint32
HashDjb2_C
(
const
uint8
*
src
int
count
uint32
seed
)
;
uint32
HashDjb2_SSE41
(
const
uint8
*
src
int
count
uint32
seed
)
;
uint32
HashDjb2_AVX2
(
const
uint8
*
src
int
count
uint32
seed
)
;
#
ifdef
__cplusplus
}
}
#
endif
#
endif
