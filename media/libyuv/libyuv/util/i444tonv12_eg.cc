#
include
"
libyuv
/
convert
.
h
"
#
include
<
stdio
.
h
>
#
include
<
string
.
h
>
int
main
(
int
char
*
*
)
{
unsigned
char
src_i444
[
640
*
400
*
3
]
;
unsigned
char
dst_nv12
[
640
*
400
*
3
/
2
]
;
for
(
size_t
i
=
0
;
i
<
sizeof
(
src_i444
)
;
+
+
i
)
{
src_i444
[
i
]
=
i
&
255
;
}
memset
(
dst_nv12
0
sizeof
(
dst_nv12
)
)
;
libyuv
:
:
I444ToNV12
(
&
src_i444
[
0
]
640
&
src_i444
[
640
*
400
]
640
&
src_i444
[
640
*
400
*
2
]
640
&
dst_nv12
[
0
]
640
&
dst_nv12
[
640
*
400
]
640
640
400
)
;
int
checksum
=
0
;
for
(
size_t
i
=
0
;
i
<
sizeof
(
dst_nv12
)
;
+
+
i
)
{
checksum
+
=
dst_nv12
[
i
]
;
}
printf
(
"
checksum
%
x
%
s
\
n
"
checksum
checksum
=
=
0x2ec0c00
?
"
PASS
"
:
"
FAIL
"
)
;
return
0
;
}
