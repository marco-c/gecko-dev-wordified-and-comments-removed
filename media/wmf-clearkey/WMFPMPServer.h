#
ifndef
DOM_MEDIA_PLATFORM_WMF_CLEARKEY_WMFPMPSERVER_H
#
define
DOM_MEDIA_PLATFORM_WMF_CLEARKEY_WMFPMPSERVER_H
#
include
<
mfidl
.
h
>
#
include
<
windows
.
h
>
#
include
<
windows
.
media
.
protection
.
h
>
#
include
<
wrl
.
h
>
#
include
"
MFCDMExtra
.
h
"
namespace
mozilla
{
class
WMFPMPServer
final
:
public
Microsoft
:
:
WRL
:
:
RuntimeClass
<
Microsoft
:
:
WRL
:
:
RuntimeClassFlags
<
Microsoft
:
:
WRL
:
:
ClassicCom
>
ABI
:
:
Windows
:
:
Media
:
:
Protection
:
:
IMediaProtectionPMPServer
IMFGetService
Microsoft
:
:
WRL
:
:
FtmBase
>
{
public
:
WMFPMPServer
(
)
=
default
;
~
WMFPMPServer
(
)
=
default
;
WMFPMPServer
(
const
WMFPMPServer
&
)
=
delete
;
WMFPMPServer
&
operator
=
(
const
WMFPMPServer
&
)
=
delete
;
HRESULT
RuntimeClassInitialize
(
ABI
:
:
Windows
:
:
Foundation
:
:
Collections
:
:
IPropertySet
*
aPropertyPmp
)
;
STDMETHODIMP
GetIids
(
ULONG
*
aIidCount
IID
*
*
aIids
)
override
;
STDMETHODIMP
GetRuntimeClassName
(
HSTRING
*
aClassName
)
override
;
STDMETHODIMP
GetTrustLevel
(
TrustLevel
*
aTrustLevel
)
override
;
STDMETHODIMP
get_Properties
(
ABI
:
:
Windows
:
:
Foundation
:
:
Collections
:
:
IPropertySet
*
*
aPpProperties
)
override
;
STDMETHODIMP
GetService
(
REFGUID
aGuidService
REFIID
aRiid
LPVOID
*
aObject
)
override
;
private
:
Microsoft
:
:
WRL
:
:
ComPtr
<
ABI
:
:
Windows
:
:
Foundation
:
:
Collections
:
:
IPropertySet
>
mPropertyPmp
;
Microsoft
:
:
WRL
:
:
ComPtr
<
IMFPMPServer
>
mPmpServer
;
Microsoft
:
:
WRL
:
:
ComPtr
<
IMFPMPHost
>
mPmpHost
;
Microsoft
:
:
WRL
:
:
ComPtr
<
IMFMediaSession
>
mMediaSession
;
}
;
}
#
endif
