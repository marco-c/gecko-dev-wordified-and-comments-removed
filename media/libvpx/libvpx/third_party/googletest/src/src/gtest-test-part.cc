#
include
"
gtest
/
gtest
-
test
-
part
.
h
"
#
include
"
gtest
/
internal
/
gtest
-
port
.
h
"
#
include
"
src
/
gtest
-
internal
-
inl
.
h
"
namespace
testing
{
using
internal
:
:
GetUnitTestImpl
;
std
:
:
string
TestPartResult
:
:
ExtractSummary
(
const
char
*
message
)
{
const
char
*
const
stack_trace
=
strstr
(
message
internal
:
:
kStackTraceMarker
)
;
return
stack_trace
=
=
nullptr
?
message
:
std
:
:
string
(
message
stack_trace
)
;
}
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
os
const
TestPartResult
&
result
)
{
return
os
<
<
internal
:
:
FormatFileLocation
(
result
.
file_name
(
)
result
.
line_number
(
)
)
<
<
"
"
<
<
(
result
.
type
(
)
=
=
TestPartResult
:
:
kSuccess
?
"
Success
"
:
result
.
type
(
)
=
=
TestPartResult
:
:
kSkip
?
"
Skipped
"
:
result
.
type
(
)
=
=
TestPartResult
:
:
kFatalFailure
?
"
Fatal
failure
"
:
"
Non
-
fatal
failure
"
)
<
<
"
:
\
n
"
<
<
result
.
message
(
)
<
<
std
:
:
endl
;
}
void
TestPartResultArray
:
:
Append
(
const
TestPartResult
&
result
)
{
array_
.
push_back
(
result
)
;
}
const
TestPartResult
&
TestPartResultArray
:
:
GetTestPartResult
(
int
index
)
const
{
if
(
index
<
0
|
|
index
>
=
size
(
)
)
{
printf
(
"
\
nInvalid
index
(
%
d
)
into
TestPartResultArray
.
\
n
"
index
)
;
internal
:
:
posix
:
:
Abort
(
)
;
}
return
array_
[
static_cast
<
size_t
>
(
index
)
]
;
}
int
TestPartResultArray
:
:
size
(
)
const
{
return
static_cast
<
int
>
(
array_
.
size
(
)
)
;
}
namespace
internal
{
HasNewFatalFailureHelper
:
:
HasNewFatalFailureHelper
(
)
:
has_new_fatal_failure_
(
false
)
original_reporter_
(
GetUnitTestImpl
(
)
-
>
GetTestPartResultReporterForCurrentThread
(
)
)
{
GetUnitTestImpl
(
)
-
>
SetTestPartResultReporterForCurrentThread
(
this
)
;
}
HasNewFatalFailureHelper
:
:
~
HasNewFatalFailureHelper
(
)
{
GetUnitTestImpl
(
)
-
>
SetTestPartResultReporterForCurrentThread
(
original_reporter_
)
;
}
void
HasNewFatalFailureHelper
:
:
ReportTestPartResult
(
const
TestPartResult
&
result
)
{
if
(
result
.
fatally_failed
(
)
)
has_new_fatal_failure_
=
true
;
original_reporter_
-
>
ReportTestPartResult
(
result
)
;
}
}
}
