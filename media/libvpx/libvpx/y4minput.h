#
ifndef
VPX_Y4MINPUT_H_
#
define
VPX_Y4MINPUT_H_
#
include
<
stdio
.
h
>
#
include
"
vpx
/
vpx_image
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
typedef
struct
y4m_input
y4m_input
;
typedef
void
(
*
y4m_convert_func
)
(
y4m_input
*
_y4m
unsigned
char
*
_dst
unsigned
char
*
_src
)
;
struct
y4m_input
{
int
pic_w
;
int
pic_h
;
int
fps_n
;
int
fps_d
;
int
par_n
;
int
par_d
;
char
interlace
;
int
src_c_dec_h
;
int
src_c_dec_v
;
int
dst_c_dec_h
;
int
dst_c_dec_v
;
char
chroma_type
[
16
]
;
size_t
dst_buf_sz
;
size_t
dst_buf_read_sz
;
size_t
aux_buf_sz
;
size_t
aux_buf_read_sz
;
y4m_convert_func
convert
;
unsigned
char
*
dst_buf
;
unsigned
char
*
aux_buf
;
enum
vpx_img_fmt
vpx_fmt
;
int
bps
;
unsigned
int
bit_depth
;
}
;
int
y4m_input_open
(
y4m_input
*
_y4m
FILE
*
_fin
char
*
_skip
int
_nskip
int
only_420
)
;
void
y4m_input_close
(
y4m_input
*
_y4m
)
;
int
y4m_input_fetch_frame
(
y4m_input
*
_y4m
FILE
*
_fin
vpx_image_t
*
img
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
