#
ifndef
VPX_DSP_PPC_TRANSPOSE_VSX_H_
#
define
VPX_DSP_PPC_TRANSPOSE_VSX_H_
#
include
"
.
/
vpx_config
.
h
"
#
include
"
vpx_dsp
/
ppc
/
types_vsx
.
h
"
static
INLINE
void
vpx_transpose_s16_8x8
(
int16x8_t
v
[
8
]
)
{
int16x8_t
b0
b1
b2
b3
b4
b5
b6
b7
;
int16x8_t
c0
c1
c2
c3
c4
c5
c6
c7
;
b0
=
vec_mergeh
(
v
[
0
]
v
[
4
]
)
;
b1
=
vec_mergel
(
v
[
0
]
v
[
4
]
)
;
b2
=
vec_mergeh
(
v
[
1
]
v
[
5
]
)
;
b3
=
vec_mergel
(
v
[
1
]
v
[
5
]
)
;
b4
=
vec_mergeh
(
v
[
2
]
v
[
6
]
)
;
b5
=
vec_mergel
(
v
[
2
]
v
[
6
]
)
;
b6
=
vec_mergeh
(
v
[
3
]
v
[
7
]
)
;
b7
=
vec_mergel
(
v
[
3
]
v
[
7
]
)
;
c0
=
vec_mergeh
(
b0
b4
)
;
c1
=
vec_mergel
(
b0
b4
)
;
c2
=
vec_mergeh
(
b1
b5
)
;
c3
=
vec_mergel
(
b1
b5
)
;
c4
=
vec_mergeh
(
b2
b6
)
;
c5
=
vec_mergel
(
b2
b6
)
;
c6
=
vec_mergeh
(
b3
b7
)
;
c7
=
vec_mergel
(
b3
b7
)
;
v
[
0
]
=
vec_mergeh
(
c0
c4
)
;
v
[
1
]
=
vec_mergel
(
c0
c4
)
;
v
[
2
]
=
vec_mergeh
(
c1
c5
)
;
v
[
3
]
=
vec_mergel
(
c1
c5
)
;
v
[
4
]
=
vec_mergeh
(
c2
c6
)
;
v
[
5
]
=
vec_mergel
(
c2
c6
)
;
v
[
6
]
=
vec_mergeh
(
c3
c7
)
;
v
[
7
]
=
vec_mergel
(
c3
c7
)
;
}
#
endif
