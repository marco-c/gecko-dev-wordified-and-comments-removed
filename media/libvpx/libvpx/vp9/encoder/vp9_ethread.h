#
ifndef
VP9_ENCODER_VP9_ETHREAD_H_
#
define
VP9_ENCODER_VP9_ETHREAD_H_
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
define
MAX_NUM_TILE_COLS
(
1
<
<
6
)
#
define
MAX_NUM_TILE_ROWS
4
#
define
MAX_NUM_THREADS
80
struct
VP9_COMP
;
struct
ThreadData
;
typedef
struct
EncWorkerData
{
struct
VP9_COMP
*
cpi
;
struct
ThreadData
*
td
;
int
start
;
int
thread_id
;
int
tile_completion_status
[
MAX_NUM_TILE_COLS
]
;
}
EncWorkerData
;
typedef
struct
VP9RowMTSyncData
{
#
if
CONFIG_MULTITHREAD
pthread_mutex_t
*
mutex_
;
pthread_cond_t
*
cond_
;
#
endif
int
*
cur_col
;
int
sync_range
;
int
rows
;
}
VP9RowMTSync
;
void
vp9_encode_tiles_mt
(
struct
VP9_COMP
*
cpi
)
;
void
vp9_encode_tiles_row_mt
(
struct
VP9_COMP
*
cpi
)
;
void
vp9_encode_fp_row_mt
(
struct
VP9_COMP
*
cpi
)
;
void
vp9_row_mt_sync_read
(
VP9RowMTSync
*
const
row_mt_sync
int
r
int
c
)
;
void
vp9_row_mt_sync_write
(
VP9RowMTSync
*
const
row_mt_sync
int
r
int
c
const
int
cols
)
;
void
vp9_row_mt_sync_read_dummy
(
VP9RowMTSync
*
const
row_mt_sync
int
r
int
c
)
;
void
vp9_row_mt_sync_write_dummy
(
VP9RowMTSync
*
const
row_mt_sync
int
r
int
c
const
int
cols
)
;
void
vp9_row_mt_sync_mem_alloc
(
VP9RowMTSync
*
row_mt_sync
struct
VP9Common
*
cm
int
rows
)
;
void
vp9_row_mt_sync_mem_dealloc
(
VP9RowMTSync
*
row_mt_sync
)
;
void
vp9_temporal_filter_row_mt
(
struct
VP9_COMP
*
cpi
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
