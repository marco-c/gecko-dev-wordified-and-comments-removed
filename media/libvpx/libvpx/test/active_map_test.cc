#
include
<
climits
>
#
include
<
vector
>
#
include
"
third_party
/
googletest
/
src
/
include
/
gtest
/
gtest
.
h
"
#
include
"
test
/
codec_factory
.
h
"
#
include
"
test
/
encode_test_driver
.
h
"
#
include
"
test
/
i420_video_source
.
h
"
#
include
"
test
/
util
.
h
"
namespace
{
class
ActiveMapTest
:
public
:
:
libvpx_test
:
:
EncoderTest
public
:
:
libvpx_test
:
:
CodecTestWith2Params
<
libvpx_test
:
:
TestMode
int
>
{
protected
:
static
const
int
kWidth
=
208
;
static
const
int
kHeight
=
144
;
ActiveMapTest
(
)
:
EncoderTest
(
GET_PARAM
(
0
)
)
{
}
virtual
~
ActiveMapTest
(
)
{
}
virtual
void
SetUp
(
)
{
InitializeConfig
(
)
;
SetMode
(
GET_PARAM
(
1
)
)
;
cpu_used_
=
GET_PARAM
(
2
)
;
}
virtual
void
PreEncodeFrameHook
(
:
:
libvpx_test
:
:
VideoSource
*
video
:
:
libvpx_test
:
:
Encoder
*
encoder
)
{
if
(
video
-
>
frame
(
)
=
=
1
)
{
encoder
-
>
Control
(
VP8E_SET_CPUUSED
cpu_used_
)
;
}
else
if
(
video
-
>
frame
(
)
=
=
3
)
{
vpx_active_map_t
map
=
vpx_active_map_t
(
)
;
uint8_t
active_map
[
9
*
13
]
=
{
1
1
1
1
0
0
0
0
1
1
0
0
0
1
1
1
1
0
0
0
0
1
1
0
0
0
1
1
1
1
0
0
0
0
1
1
0
0
0
1
1
1
1
0
0
0
0
1
1
0
0
0
0
0
0
0
1
1
0
0
0
1
0
1
1
0
0
0
0
1
1
0
0
1
0
1
0
1
0
0
0
0
0
0
1
1
1
0
1
0
1
0
0
0
0
0
0
1
1
0
1
0
1
1
1
1
1
1
0
0
0
0
1
1
1
1
0
}
;
map
.
cols
=
(
kWidth
+
15
)
/
16
;
map
.
rows
=
(
kHeight
+
15
)
/
16
;
ASSERT_EQ
(
map
.
cols
13u
)
;
ASSERT_EQ
(
map
.
rows
9u
)
;
map
.
active_map
=
active_map
;
encoder
-
>
Control
(
VP8E_SET_ACTIVEMAP
&
map
)
;
}
else
if
(
video
-
>
frame
(
)
=
=
15
)
{
vpx_active_map_t
map
=
vpx_active_map_t
(
)
;
map
.
cols
=
(
kWidth
+
15
)
/
16
;
map
.
rows
=
(
kHeight
+
15
)
/
16
;
map
.
active_map
=
NULL
;
encoder
-
>
Control
(
VP8E_SET_ACTIVEMAP
&
map
)
;
}
}
int
cpu_used_
;
}
;
TEST_P
(
ActiveMapTest
Test
)
{
cfg_
.
g_lag_in_frames
=
0
;
cfg_
.
rc_target_bitrate
=
400
;
cfg_
.
rc_resize_allowed
=
0
;
cfg_
.
g_pass
=
VPX_RC_ONE_PASS
;
cfg_
.
rc_end_usage
=
VPX_CBR
;
cfg_
.
kf_max_dist
=
90000
;
:
:
libvpx_test
:
:
I420VideoSource
video
(
"
hantro_odd
.
yuv
"
kWidth
kHeight
30
1
0
20
)
;
ASSERT_NO_FATAL_FAILURE
(
RunLoop
(
&
video
)
)
;
}
VP9_INSTANTIATE_TEST_CASE
(
ActiveMapTest
:
:
testing
:
:
Values
(
:
:
libvpx_test
:
:
kRealTime
)
:
:
testing
:
:
Range
(
0
9
)
)
;
}
