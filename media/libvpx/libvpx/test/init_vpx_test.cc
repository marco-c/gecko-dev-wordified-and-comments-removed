#
include
"
test
/
init_vpx_test
.
h
"
#
include
<
string
>
#
include
"
third_party
/
googletest
/
src
/
include
/
gtest
/
gtest
.
h
"
#
include
"
.
/
vpx_config
.
h
"
#
if
VPX_ARCH_X86
|
|
VPX_ARCH_X86_64
#
include
"
vpx_ports
/
x86
.
h
"
#
endif
extern
"
C
"
{
#
if
CONFIG_VP8
extern
void
vp8_rtcd
(
)
;
#
endif
#
if
CONFIG_VP9
extern
void
vp9_rtcd
(
)
;
#
endif
extern
void
vpx_dsp_rtcd
(
)
;
extern
void
vpx_scale_rtcd
(
)
;
}
#
if
VPX_ARCH_X86
|
|
VPX_ARCH_X86_64
static
void
append_negative_gtest_filter
(
const
char
*
str
)
{
std
:
:
string
filter
=
GTEST_FLAG_GET
(
filter
)
;
if
(
filter
.
find
(
'
-
'
)
=
=
std
:
:
string
:
:
npos
)
filter
+
=
'
-
'
;
filter
+
=
str
;
GTEST_FLAG_SET
(
filter
filter
)
;
}
#
endif
namespace
libvpx_test
{
void
init_vpx_test
(
)
{
#
if
VPX_ARCH_X86
|
|
VPX_ARCH_X86_64
const
int
simd_caps
=
x86_simd_caps
(
)
;
if
(
!
(
simd_caps
&
HAS_MMX
)
)
append_negative_gtest_filter
(
"
:
MMX
.
*
:
MMX
/
*
"
)
;
if
(
!
(
simd_caps
&
HAS_SSE
)
)
append_negative_gtest_filter
(
"
:
SSE
.
*
:
SSE
/
*
"
)
;
if
(
!
(
simd_caps
&
HAS_SSE2
)
)
append_negative_gtest_filter
(
"
:
SSE2
.
*
:
SSE2
/
*
"
)
;
if
(
!
(
simd_caps
&
HAS_SSE3
)
)
append_negative_gtest_filter
(
"
:
SSE3
.
*
:
SSE3
/
*
"
)
;
if
(
!
(
simd_caps
&
HAS_SSSE3
)
)
{
append_negative_gtest_filter
(
"
:
SSSE3
.
*
:
SSSE3
/
*
"
)
;
}
if
(
!
(
simd_caps
&
HAS_SSE4_1
)
)
{
append_negative_gtest_filter
(
"
:
SSE4_1
.
*
:
SSE4_1
/
*
"
)
;
}
if
(
!
(
simd_caps
&
HAS_AVX
)
)
append_negative_gtest_filter
(
"
:
AVX
.
*
:
AVX
/
*
"
)
;
if
(
!
(
simd_caps
&
HAS_AVX2
)
)
append_negative_gtest_filter
(
"
:
AVX2
.
*
:
AVX2
/
*
"
)
;
if
(
!
(
simd_caps
&
HAS_AVX512
)
)
{
append_negative_gtest_filter
(
"
:
AVX512
.
*
:
AVX512
/
*
"
)
;
}
#
endif
#
if
!
CONFIG_SHARED
#
if
CONFIG_VP8
vp8_rtcd
(
)
;
#
endif
#
if
CONFIG_VP9
vp9_rtcd
(
)
;
#
endif
vpx_dsp_rtcd
(
)
;
vpx_scale_rtcd
(
)
;
#
endif
}
}
