with
Files
(
'
*
'
)
:
BUG_COMPONENT
=
(
'
Core
'
'
Audio
/
Video
'
)
EXPORTS
.
theora
+
=
[
'
include
/
theora
/
codec
.
h
'
'
include
/
theora
/
theoradec
.
h
'
'
include
/
theora
/
theoraenc
.
h
'
]
AllowCompilerWarnings
(
)
FINAL_LIBRARY
=
'
gkmedias
'
DEFINES
[
'
THEORA_DISABLE_ENCODE
'
]
=
True
CFLAGS
+
=
[
'
-
Wno
-
type
-
limits
'
]
if
CONFIG
[
'
CC_TYPE
'
]
in
(
'
clang
'
'
clang
-
cl
'
)
:
CFLAGS
+
=
[
'
-
Wno
-
shift
-
negative
-
value
'
'
-
Wno
-
tautological
-
compare
'
]
if
CONFIG
[
'
CC_TYPE
'
]
=
=
'
clang
-
cl
'
:
CFLAGS
+
=
[
'
-
Wno
-
parentheses
'
'
-
Wno
-
pointer
-
sign
'
]
UNIFIED_SOURCES
+
=
[
'
lib
/
bitpack
.
c
'
'
lib
/
decinfo
.
c
'
'
lib
/
decode
.
c
'
'
lib
/
dequant
.
c
'
'
lib
/
fragment
.
c
'
'
lib
/
huffdec
.
c
'
'
lib
/
idct
.
c
'
'
lib
/
info
.
c
'
'
lib
/
internal
.
c
'
'
lib
/
quant
.
c
'
'
lib
/
state
.
c
'
]
LOCAL_INCLUDES
+
=
[
'
include
'
]
if
CONFIG
[
'
INTEL_ARCHITECTURE
'
]
:
if
CONFIG
[
'
OS_ARCH
'
]
!
=
'
SunOS
'
:
if
CONFIG
[
'
CC_TYPE
'
]
=
=
'
clang
-
cl
'
:
pass
elif
CONFIG
[
'
OS_ARCH
'
]
!
=
'
WINNT
'
or
CONFIG
[
'
CPU_ARCH
'
]
!
=
'
x86_64
'
:
DEFINES
[
'
OC_X86_ASM
'
]
=
True
if
CONFIG
[
'
CPU_ARCH
'
]
=
=
'
x86_64
'
:
DEFINES
[
'
OC_X86_64_ASM
'
]
=
True
if
CONFIG
[
'
CC_TYPE
'
]
=
=
'
clang
-
cl
'
:
pass
else
:
SOURCES
+
=
[
'
lib
/
x86
/
mmxfrag
.
c
'
'
lib
/
x86
/
mmxidct
.
c
'
'
lib
/
x86
/
mmxstate
.
c
'
'
lib
/
x86
/
sse2idct
.
c
'
'
lib
/
x86
/
x86cpu
.
c
'
'
lib
/
x86
/
x86state
.
c
'
]
if
CONFIG
[
'
GNU_AS
'
]
:
if
CONFIG
[
'
CPU_ARCH
'
]
=
=
'
arm
'
:
SOURCES
+
=
[
'
lib
/
arm
/
armcpu
.
c
'
'
lib
/
arm
/
armstate
.
c
'
]
for
var
in
(
'
OC_ARM_ASM
'
'
OC_ARM_ASM_EDSP
'
'
OC_ARM_ASM_MEDIA
'
'
OC_ARM_ASM_NEON
'
)
:
DEFINES
[
var
]
=
True
if
CONFIG
[
'
OS_TARGET
'
]
=
=
'
Android
'
:
DEFINES
[
'
__linux__
'
]
=
True
SOURCES
+
=
[
'
!
%
s
.
s
'
%
f
for
f
in
[
'
armbits
-
gnu
'
'
armfrag
-
gnu
'
'
armidct
-
gnu
'
'
armloop
-
gnu
'
]
]
ASFLAGS
+
=
[
'
-
march
=
armv7
-
a
'
]
ASFLAGS
+
=
CONFIG
[
'
NEON_FLAGS
'
]
if
CONFIG
[
'
CC_TYPE
'
]
=
=
'
clang
'
:
ASFLAGS
+
=
[
'
-
no
-
integrated
-
as
'
]
