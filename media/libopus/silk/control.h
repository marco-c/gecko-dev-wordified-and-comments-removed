#
ifndef
SILK_CONTROL_H
#
define
SILK_CONTROL_H
#
include
"
typedef
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
define
FLAG_DECODE_NORMAL
0
#
define
FLAG_PACKET_LOST
1
#
define
FLAG_DECODE_LBRR
2
typedef
struct
{
opus_int32
nChannelsAPI
;
opus_int32
nChannelsInternal
;
opus_int32
API_sampleRate
;
opus_int32
maxInternalSampleRate
;
opus_int32
minInternalSampleRate
;
opus_int32
desiredInternalSampleRate
;
opus_int
payloadSize_ms
;
opus_int32
bitRate
;
opus_int
packetLossPercentage
;
opus_int
complexity
;
opus_int
useInBandFEC
;
opus_int
useDRED
;
opus_int
LBRR_coded
;
opus_int
useDTX
;
opus_int
useCBR
;
opus_int
maxBits
;
opus_int
toMono
;
opus_int
opusCanSwitch
;
opus_int
reducedDependency
;
opus_int32
internalSampleRate
;
opus_int
allowBandwidthSwitch
;
opus_int
inWBmodeWithoutVariableLP
;
opus_int
stereoWidth_Q14
;
opus_int
switchReady
;
opus_int
signalType
;
opus_int
offset
;
}
silk_EncControlStruct
;
typedef
struct
{
opus_int32
nChannelsAPI
;
opus_int32
nChannelsInternal
;
opus_int32
API_sampleRate
;
opus_int32
internalSampleRate
;
opus_int
payloadSize_ms
;
opus_int
prevPitchLag
;
opus_int
enable_deep_plc
;
#
ifdef
ENABLE_OSCE
opus_int
osce_method
;
#
ifdef
ENABLE_OSCE_BWE
opus_int
enable_osce_bwe
;
opus_int
osce_extended_mode
;
opus_int
prev_osce_extended_mode
;
#
endif
#
endif
}
silk_DecControlStruct
;
#
ifdef
__cplusplus
}
#
endif
#
endif
