#
ifndef
_SDPERRORHOLDER_H_
#
define
_SDPERRORHOLDER_H_
#
include
<
vector
>
#
include
<
string
>
namespace
mozilla
{
class
SdpErrorHolder
{
public
:
SdpErrorHolder
(
)
{
}
virtual
~
SdpErrorHolder
(
)
{
}
void
AddParseError
(
size_t
line
const
std
:
:
string
&
message
)
{
mErrors
.
push_back
(
std
:
:
make_pair
(
line
message
)
)
;
}
void
AddParseWarnings
(
size_t
line
const
std
:
:
string
&
message
)
{
mWarnings
.
push_back
(
std
:
:
make_pair
(
line
message
)
)
;
}
void
ClearParseErrors
(
)
{
mErrors
.
clear
(
)
;
}
void
ClearParseWarnings
(
)
{
mWarnings
.
clear
(
)
;
}
const
std
:
:
vector
<
std
:
:
pair
<
size_t
std
:
:
string
>
>
&
GetParseErrors
(
)
const
{
return
mErrors
;
}
const
std
:
:
vector
<
std
:
:
pair
<
size_t
std
:
:
string
>
>
&
GetParseWarnings
(
)
const
{
return
mWarnings
;
}
private
:
std
:
:
vector
<
std
:
:
pair
<
size_t
std
:
:
string
>
>
mErrors
;
std
:
:
vector
<
std
:
:
pair
<
size_t
std
:
:
string
>
>
mWarnings
;
}
;
}
#
endif
