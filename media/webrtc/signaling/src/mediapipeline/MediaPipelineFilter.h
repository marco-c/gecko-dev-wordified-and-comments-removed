#
ifndef
mediapipelinefilter_h__
#
define
mediapipelinefilter_h__
#
include
<
cstddef
>
#
include
<
stdint
.
h
>
#
include
<
string
>
#
include
<
set
>
namespace
webrtc
{
struct
RTPHeader
;
}
namespace
mozilla
{
class
MediaPipelineFilter
{
public
:
MediaPipelineFilter
(
)
;
bool
Filter
(
const
webrtc
:
:
RTPHeader
&
header
uint32_t
correlator
=
0
)
;
bool
FilterSenderReport
(
const
unsigned
char
*
data
size_t
len
)
const
;
void
AddRemoteSSRC
(
uint32_t
ssrc
)
;
void
AddRemoteRtpStreamId
(
const
std
:
:
string
&
rtp_strm_id
)
;
void
AddUniquePT
(
uint8_t
payload_type
)
;
void
SetCorrelator
(
uint32_t
correlator
)
;
void
Update
(
const
MediaPipelineFilter
&
filter_update
)
;
static
const
uint8_t
SENDER_REPORT_T
=
200
;
private
:
static
const
size_t
PT_OFFSET
=
1
;
static
const
size_t
FIRST_SSRC_OFFSET
=
4
;
uint32_t
correlator_
;
std
:
:
set
<
uint32_t
>
remote_ssrc_set_
;
std
:
:
set
<
uint8_t
>
payload_type_set_
;
std
:
:
set
<
std
:
:
string
>
remote_rid_set_
;
}
;
}
#
endif
