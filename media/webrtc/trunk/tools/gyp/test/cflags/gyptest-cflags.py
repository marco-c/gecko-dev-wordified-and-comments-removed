"
"
"
Verifies
the
use
of
the
environment
during
regeneration
when
the
gyp
file
changes
specifically
via
build
of
an
executable
with
C
preprocessor
definition
specified
by
CFLAGS
.
In
this
test
gyp
and
build
both
run
in
same
local
environment
.
"
"
"
import
TestGyp
FORMATS
=
(
'
make
'
'
ninja
'
)
test
=
TestGyp
.
TestGyp
(
formats
=
FORMATS
)
with
TestGyp
.
LocalEnv
(
{
'
CFLAGS
'
:
'
'
                       
'
GYP_CROSSCOMPILE
'
:
'
1
'
}
)
:
  
test
.
run_gyp
(
'
cflags
.
gyp
'
)
  
test
.
build
(
'
cflags
.
gyp
'
)
expect
=
"
"
"
FOO
not
defined
\
n
"
"
"
test
.
run_built_executable
(
'
cflags
'
stdout
=
expect
)
test
.
run_built_executable
(
'
cflags_host
'
stdout
=
expect
)
test
.
sleep
(
)
with
TestGyp
.
LocalEnv
(
{
'
CFLAGS
'
:
'
-
DFOO
=
1
'
                       
'
GYP_CROSSCOMPILE
'
:
'
1
'
}
)
:
  
test
.
run_gyp
(
'
cflags
.
gyp
'
)
  
test
.
build
(
'
cflags
.
gyp
'
)
expect
=
"
"
"
FOO
defined
\
n
"
"
"
test
.
run_built_executable
(
'
cflags
'
stdout
=
expect
)
expect
=
"
"
"
FOO
not
defined
\
n
"
"
"
test
.
run_built_executable
(
'
cflags_host
'
stdout
=
expect
)
test
.
sleep
(
)
with
TestGyp
.
LocalEnv
(
{
'
CFLAGS_host
'
:
'
-
DFOO
=
1
'
                       
'
GYP_CROSSCOMPILE
'
:
'
1
'
}
)
:
  
test
.
run_gyp
(
'
cflags
.
gyp
'
)
  
test
.
build
(
'
cflags
.
gyp
'
)
expect
=
"
"
"
FOO
defined
\
n
"
"
"
test
.
run_built_executable
(
'
cflags_host
'
stdout
=
expect
)
test
.
sleep
(
)
with
TestGyp
.
LocalEnv
(
{
'
CFLAGS
'
:
'
'
}
)
:
  
test
.
run_gyp
(
'
cflags
.
gyp
'
)
  
test
.
build
(
'
cflags
.
gyp
'
)
expect
=
"
"
"
FOO
not
defined
\
n
"
"
"
test
.
run_built_executable
(
'
cflags
'
stdout
=
expect
)
test
.
sleep
(
)
with
TestGyp
.
LocalEnv
(
{
'
CFLAGS
'
:
'
-
DFOO
=
1
'
}
)
:
  
test
.
run_gyp
(
'
cflags
.
gyp
'
)
  
test
.
build
(
'
cflags
.
gyp
'
)
expect
=
"
"
"
FOO
defined
\
n
"
"
"
test
.
run_built_executable
(
'
cflags
'
stdout
=
expect
)
test
.
pass_test
(
)
