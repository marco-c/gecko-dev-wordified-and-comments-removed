#
ifndef
CALL_RTCP_DEMUXER_H_
#
define
CALL_RTCP_DEMUXER_H_
#
include
<
map
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
call
/
ssrc_binding_observer
.
h
"
#
include
"
rtc_base
/
basictypes
.
h
"
namespace
webrtc
{
class
RtcpPacketSinkInterface
;
class
RtcpDemuxer
:
public
SsrcBindingObserver
{
public
:
RtcpDemuxer
(
)
;
~
RtcpDemuxer
(
)
override
;
void
AddSink
(
uint32_t
sender_ssrc
RtcpPacketSinkInterface
*
sink
)
;
void
AddSink
(
const
std
:
:
string
&
rsid
RtcpPacketSinkInterface
*
sink
)
;
void
AddBroadcastSink
(
RtcpPacketSinkInterface
*
sink
)
;
void
RemoveSink
(
const
RtcpPacketSinkInterface
*
sink
)
;
void
RemoveBroadcastSink
(
const
RtcpPacketSinkInterface
*
sink
)
;
void
OnRtcpPacket
(
rtc
:
:
ArrayView
<
const
uint8_t
>
packet
)
;
void
OnSsrcBoundToRsid
(
const
std
:
:
string
&
rsid
uint32_t
ssrc
)
override
;
private
:
std
:
:
multimap
<
uint32_t
RtcpPacketSinkInterface
*
>
ssrc_sinks_
;
std
:
:
multimap
<
std
:
:
string
RtcpPacketSinkInterface
*
>
rsid_sinks_
;
std
:
:
vector
<
RtcpPacketSinkInterface
*
>
broadcast_sinks_
;
}
;
}
#
endif
