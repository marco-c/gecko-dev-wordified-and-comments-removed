#
ifndef
WEBRTC_VOICE_ENGINE_FILE_PLAYER_H_
#
define
WEBRTC_VOICE_ENGINE_FILE_PLAYER_H_
#
include
<
memory
>
#
include
"
webrtc
/
common_types
.
h
"
#
include
"
webrtc
/
modules
/
include
/
module_common_types
.
h
"
#
include
"
webrtc
/
typedefs
.
h
"
namespace
webrtc
{
class
FileCallback
;
class
FilePlayer
{
public
:
enum
{
MAX_AUDIO_BUFFER_IN_SAMPLES
=
60
*
32
}
;
enum
{
MAX_AUDIO_BUFFER_IN_BYTES
=
MAX_AUDIO_BUFFER_IN_SAMPLES
*
2
}
;
static
std
:
:
unique_ptr
<
FilePlayer
>
CreateFilePlayer
(
const
uint32_t
instanceID
const
FileFormats
fileFormat
)
;
virtual
~
FilePlayer
(
)
=
default
;
virtual
int
Get10msAudioFromFile
(
int16_t
*
outBuffer
size_t
*
lengthInSamples
int
frequencyInHz
)
=
0
;
virtual
int32_t
RegisterModuleFileCallback
(
FileCallback
*
callback
)
=
0
;
virtual
int32_t
StartPlayingFile
(
const
char
*
fileName
bool
loop
uint32_t
startPosition
float
volumeScaling
uint32_t
notification
uint32_t
stopPosition
const
CodecInst
*
codecInst
)
=
0
;
virtual
int32_t
StartPlayingFile
(
InStream
*
sourceStream
uint32_t
startPosition
float
volumeScaling
uint32_t
notification
uint32_t
stopPosition
const
CodecInst
*
codecInst
)
=
0
;
virtual
int32_t
StopPlayingFile
(
)
=
0
;
virtual
bool
IsPlayingFile
(
)
const
=
0
;
virtual
int32_t
GetPlayoutPosition
(
uint32_t
*
durationMs
)
=
0
;
virtual
int32_t
AudioCodec
(
CodecInst
*
audioCodec
)
const
=
0
;
virtual
int32_t
Frequency
(
)
const
=
0
;
virtual
int32_t
SetAudioScaling
(
float
scaleFactor
)
=
0
;
}
;
}
#
endif
