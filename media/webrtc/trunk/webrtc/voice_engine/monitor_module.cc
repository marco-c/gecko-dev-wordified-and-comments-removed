#
include
"
webrtc
/
base
/
timeutils
.
h
"
#
include
"
webrtc
/
voice_engine
/
monitor_module
.
h
"
namespace
webrtc
{
namespace
voe
{
MonitorModule
:
:
MonitorModule
(
)
:
_observerPtr
(
NULL
)
_lastProcessTime
(
rtc
:
:
TimeMillis
(
)
)
{
}
MonitorModule
:
:
~
MonitorModule
(
)
{
}
int32_t
MonitorModule
:
:
RegisterObserver
(
MonitorObserver
&
observer
)
{
rtc
:
:
CritScope
lock
(
&
_callbackCritSect
)
;
if
(
_observerPtr
)
{
return
-
1
;
}
_observerPtr
=
&
observer
;
return
0
;
}
int32_t
MonitorModule
:
:
DeRegisterObserver
(
)
{
rtc
:
:
CritScope
lock
(
&
_callbackCritSect
)
;
if
(
!
_observerPtr
)
{
return
0
;
}
_observerPtr
=
NULL
;
return
0
;
}
int64_t
MonitorModule
:
:
TimeUntilNextProcess
(
)
{
int64_t
now
=
rtc
:
:
TimeMillis
(
)
;
const
int64_t
kAverageProcessUpdateTimeMs
=
1000
;
return
kAverageProcessUpdateTimeMs
-
(
now
-
_lastProcessTime
)
;
}
void
MonitorModule
:
:
Process
(
)
{
_lastProcessTime
=
rtc
:
:
TimeMillis
(
)
;
rtc
:
:
CritScope
lock
(
&
_callbackCritSect
)
;
if
(
_observerPtr
)
{
_observerPtr
-
>
OnPeriodicProcess
(
)
;
}
}
}
}
