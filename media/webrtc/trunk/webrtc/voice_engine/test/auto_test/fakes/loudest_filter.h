#
ifndef
WEBRTC_VOICE_ENGINE_TEST_AUTO_TEST_FAKES_LOUDEST_FILTER_H_
#
define
WEBRTC_VOICE_ENGINE_TEST_AUTO_TEST_FAKES_LOUDEST_FILTER_H_
#
include
<
map
>
#
include
"
webrtc
/
base
/
timeutils
.
h
"
#
include
"
webrtc
/
common_types
.
h
"
namespace
voetest
{
class
LoudestFilter
{
public
:
bool
ForwardThisPacket
(
const
webrtc
:
:
RTPHeader
&
rtp_header
)
;
private
:
struct
Status
{
void
Set
(
int
audio_level
uint32_t
last_time_ms
)
{
this
-
>
audio_level
=
audio_level
;
this
-
>
last_time_ms
=
last_time_ms
;
}
int
audio_level
;
uint32_t
last_time_ms
;
}
;
void
RemoveTimeoutStreams
(
uint32_t
time_ms
)
;
unsigned
int
FindQuietestStream
(
)
;
std
:
:
map
<
unsigned
int
Status
>
stream_levels_
;
const
int32_t
kStreamTimeOutMs
=
5000
;
const
size_t
kMaxMixSize
=
3
;
const
int
kInvalidAudioLevel
=
128
;
}
;
}
#
endif
