#
ifndef
WEBRTC_VOICE_ENGINE_VOE_RTP_RTCP_IMPL_H
#
define
WEBRTC_VOICE_ENGINE_VOE_RTP_RTCP_IMPL_H
#
include
"
webrtc
/
voice_engine
/
include
/
voe_rtp_rtcp
.
h
"
#
include
"
webrtc
/
voice_engine
/
shared_data
.
h
"
namespace
webrtc
{
class
VoERTP_RTCPImpl
:
public
VoERTP_RTCP
{
public
:
int
SetRTCPStatus
(
int
channel
bool
enable
)
override
;
int
GetRTCPStatus
(
int
channel
bool
&
enabled
)
override
;
int
SetRTCP_CNAME
(
int
channel
const
char
cName
[
256
]
)
override
;
int
GetRemoteRTCP_CNAME
(
int
channel
char
cName
[
256
]
)
override
;
int
GetRemoteRTCPData
(
int
channel
unsigned
int
&
NTPHigh
unsigned
int
&
NTPLow
unsigned
int
&
timestamp
unsigned
int
&
playoutTimestamp
unsigned
int
*
jitter
=
NULL
unsigned
short
*
fractionLost
=
NULL
)
override
;
int
SetLocalSSRC
(
int
channel
unsigned
int
ssrc
)
override
;
int
GetLocalSSRC
(
int
channel
unsigned
int
&
ssrc
)
override
;
int
GetRemoteSSRC
(
int
channel
unsigned
int
&
ssrc
)
override
;
int
SetSendAudioLevelIndicationStatus
(
int
channel
bool
enable
unsigned
char
id
)
override
;
int
SetReceiveAudioLevelIndicationStatus
(
int
channel
bool
enable
unsigned
char
id
)
override
;
int
SetSendAbsoluteSenderTimeStatus
(
int
channel
bool
enable
unsigned
char
id
)
override
;
int
SetReceiveAbsoluteSenderTimeStatus
(
int
channel
bool
enable
unsigned
char
id
)
override
;
int
GetRTPStatistics
(
int
channel
unsigned
int
&
averageJitterMs
unsigned
int
&
maxJitterMs
unsigned
int
&
discardedPackets
)
override
;
int
GetRTCPStatistics
(
int
channel
CallStatistics
&
stats
)
override
;
int
GetRemoteRTCPReportBlocks
(
int
channel
std
:
:
vector
<
ReportBlock
>
*
report_blocks
)
override
;
int
SetREDStatus
(
int
channel
bool
enable
int
redPayloadtype
=
-
1
)
override
;
int
GetREDStatus
(
int
channel
bool
&
enabled
int
&
redPayloadtype
)
override
;
int
SetNACKStatus
(
int
channel
bool
enable
int
maxNoPackets
)
override
;
protected
:
VoERTP_RTCPImpl
(
voe
:
:
SharedData
*
shared
)
;
~
VoERTP_RTCPImpl
(
)
override
;
private
:
voe
:
:
SharedData
*
_shared
;
}
;
}
#
endif
