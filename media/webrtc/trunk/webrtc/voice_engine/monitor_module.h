#
ifndef
WEBRTC_VOICE_ENGINE_MONITOR_MODULE_H
#
define
WEBRTC_VOICE_ENGINE_MONITOR_MODULE_H
#
include
"
webrtc
/
base
/
criticalsection
.
h
"
#
include
"
webrtc
/
base
/
thread_annotations
.
h
"
#
include
"
webrtc
/
modules
/
include
/
module
.
h
"
#
include
"
webrtc
/
typedefs
.
h
"
#
include
"
webrtc
/
voice_engine
/
voice_engine_defines
.
h
"
class
MonitorObserver
{
public
:
virtual
void
OnPeriodicProcess
(
)
=
0
;
protected
:
virtual
~
MonitorObserver
(
)
{
}
}
;
namespace
webrtc
{
namespace
voe
{
class
MonitorModule
:
public
Module
{
public
:
int32_t
RegisterObserver
(
MonitorObserver
&
observer
)
;
int32_t
DeRegisterObserver
(
)
;
MonitorModule
(
)
;
virtual
~
MonitorModule
(
)
;
public
:
int64_t
TimeUntilNextProcess
(
)
override
;
void
Process
(
)
override
;
private
:
rtc
:
:
CriticalSection
_callbackCritSect
;
MonitorObserver
*
_observerPtr
GUARDED_BY
(
_callbackCritSect
)
;
int64_t
_lastProcessTime
;
}
;
}
}
#
endif
