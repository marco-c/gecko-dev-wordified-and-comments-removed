#
ifndef
WEBRTC_VOICE_ENGINE_FILE_RECORDER_H_
#
define
WEBRTC_VOICE_ENGINE_FILE_RECORDER_H_
#
include
<
memory
>
#
include
"
webrtc
/
common_types
.
h
"
#
include
"
webrtc
/
modules
/
include
/
module_common_types
.
h
"
#
include
"
webrtc
/
modules
/
media_file
/
media_file_defines
.
h
"
#
include
"
webrtc
/
typedefs
.
h
"
namespace
webrtc
{
class
FileRecorder
{
public
:
static
std
:
:
unique_ptr
<
FileRecorder
>
CreateFileRecorder
(
const
uint32_t
instanceID
const
FileFormats
fileFormat
)
;
virtual
~
FileRecorder
(
)
=
default
;
virtual
int32_t
RegisterModuleFileCallback
(
FileCallback
*
callback
)
=
0
;
virtual
FileFormats
RecordingFileFormat
(
)
const
=
0
;
virtual
int32_t
StartRecordingAudioFile
(
const
char
*
fileName
const
CodecInst
&
codecInst
uint32_t
notification
)
=
0
;
virtual
int32_t
StartRecordingAudioFile
(
OutStream
*
destStream
const
CodecInst
&
codecInst
uint32_t
notification
)
=
0
;
virtual
int32_t
StopRecording
(
)
=
0
;
virtual
bool
IsRecording
(
)
const
=
0
;
virtual
int32_t
codec_info
(
CodecInst
*
codecInst
)
const
=
0
;
virtual
int32_t
RecordAudioToFile
(
const
AudioFrame
&
frame
)
=
0
;
}
;
}
#
endif
