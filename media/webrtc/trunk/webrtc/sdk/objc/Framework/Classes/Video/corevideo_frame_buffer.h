#
ifndef
SDK_OBJC_FRAMEWORK_CLASSES_VIDEO_COREVIDEO_FRAME_BUFFER_H_
#
define
SDK_OBJC_FRAMEWORK_CLASSES_VIDEO_COREVIDEO_FRAME_BUFFER_H_
#
include
<
CoreVideo
/
CoreVideo
.
h
>
#
include
<
vector
>
#
include
"
common_video
/
include
/
video_frame_buffer
.
h
"
namespace
webrtc
{
class
CoreVideoFrameBuffer
:
public
VideoFrameBuffer
{
public
:
explicit
CoreVideoFrameBuffer
(
CVPixelBufferRef
pixel_buffer
)
;
CoreVideoFrameBuffer
(
CVPixelBufferRef
pixel_buffer
int
adapted_width
int
adapted_height
int
crop_width
int
crop_height
int
crop_x
int
crop_y
)
;
~
CoreVideoFrameBuffer
(
)
override
;
CVPixelBufferRef
pixel_buffer
(
)
{
return
pixel_buffer_
;
}
bool
RequiresCropping
(
)
const
;
bool
CropAndScaleTo
(
std
:
:
vector
<
uint8_t
>
*
tmp_buffer
CVPixelBufferRef
output_pixel_buffer
)
const
;
private
:
Type
type
(
)
const
override
;
int
width
(
)
const
override
;
int
height
(
)
const
override
;
rtc
:
:
scoped_refptr
<
I420BufferInterface
>
ToI420
(
)
override
;
CVPixelBufferRef
pixel_buffer_
;
const
int
width_
;
const
int
height_
;
const
int
buffer_width_
;
const
int
buffer_height_
;
const
int
crop_width_
;
const
int
crop_height_
;
const
int
crop_x_
;
const
int
crop_y_
;
}
;
}
#
endif
