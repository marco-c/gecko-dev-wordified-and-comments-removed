#
ifndef
SDK_OBJC_FRAMEWORK_CLASSES_PEERCONNECTION_OBJC_VIDEO_ENCODER_FACTORY_H_
#
define
SDK_OBJC_FRAMEWORK_CLASSES_PEERCONNECTION_OBJC_VIDEO_ENCODER_FACTORY_H_
#
import
<
Foundation
/
Foundation
.
h
>
#
include
"
api
/
video_codecs
/
video_encoder_factory
.
h
"
#
include
"
media
/
engine
/
webrtcvideoencoderfactory
.
h
"
protocol
RTCVideoEncoderFactory
;
namespace
webrtc
{
class
ObjCVideoEncoderFactory
:
public
VideoEncoderFactory
public
cricket
:
:
WebRtcVideoEncoderFactory
{
public
:
explicit
ObjCVideoEncoderFactory
(
id
<
RTCVideoEncoderFactory
>
)
;
~
ObjCVideoEncoderFactory
(
)
;
id
<
RTCVideoEncoderFactory
>
wrapped_encoder_factory
(
)
const
;
std
:
:
vector
<
SdpVideoFormat
>
GetSupportedFormats
(
)
const
override
;
std
:
:
unique_ptr
<
VideoEncoder
>
CreateVideoEncoder
(
const
SdpVideoFormat
&
format
)
override
;
CodecInfo
QueryVideoEncoder
(
const
SdpVideoFormat
&
format
)
const
override
;
webrtc
:
:
VideoEncoder
*
CreateVideoEncoder
(
const
cricket
:
:
VideoCodec
&
codec
)
override
;
const
std
:
:
vector
<
cricket
:
:
VideoCodec
>
&
supported_codecs
(
)
const
override
;
void
DestroyVideoEncoder
(
webrtc
:
:
VideoEncoder
*
encoder
)
override
;
private
:
id
<
RTCVideoEncoderFactory
>
encoder_factory_
;
mutable
std
:
:
vector
<
cricket
:
:
VideoCodec
>
supported_codecs_
;
}
;
}
#
endif
