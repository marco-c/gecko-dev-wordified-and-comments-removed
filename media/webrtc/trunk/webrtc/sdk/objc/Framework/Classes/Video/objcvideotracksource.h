#
ifndef
SDK_OBJC_FRAMEWORK_CLASSES_VIDEO_OBJCVIDEOTRACKSOURCE_H_
#
define
SDK_OBJC_FRAMEWORK_CLASSES_VIDEO_OBJCVIDEOTRACKSOURCE_H_
#
include
"
WebRTC
/
RTCMacros
.
h
"
#
include
"
media
/
base
/
adaptedvideotracksource
.
h
"
#
include
"
rtc_base
/
timestampaligner
.
h
"
RTC_FWD_DECL_OBJC_CLASS
(
RTCVideoFrame
)
;
namespace
webrtc
{
class
ObjcVideoTrackSource
:
public
rtc
:
:
AdaptedVideoTrackSource
{
public
:
ObjcVideoTrackSource
(
)
;
bool
is_screencast
(
)
const
override
{
return
false
;
}
rtc
:
:
Optional
<
bool
>
needs_denoising
(
)
const
override
{
return
rtc
:
:
Optional
<
bool
>
(
false
)
;
}
SourceState
state
(
)
const
override
{
return
SourceState
:
:
kLive
;
}
bool
remote
(
)
const
override
{
return
false
;
}
void
OnCapturedFrame
(
RTCVideoFrame
*
frame
)
;
void
OnOutputFormatRequest
(
int
width
int
height
int
fps
)
;
private
:
rtc
:
:
VideoBroadcaster
broadcaster_
;
rtc
:
:
TimestampAligner
timestamp_aligner_
;
}
;
}
#
endif
