#
import
"
WebRTC
/
RTCPeerConnection
.
h
"
#
include
"
webrtc
/
api
/
peerconnectioninterface
.
h
"
NS_ASSUME_NONNULL_BEGIN
namespace
webrtc
{
class
PeerConnectionDelegateAdapter
:
public
PeerConnectionObserver
{
public
:
PeerConnectionDelegateAdapter
(
RTCPeerConnection
*
peerConnection
)
;
virtual
~
PeerConnectionDelegateAdapter
(
)
;
void
OnSignalingChange
(
PeerConnectionInterface
:
:
SignalingState
new_state
)
override
;
void
OnAddStream
(
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
stream
)
override
;
void
OnRemoveStream
(
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
stream
)
override
;
void
OnDataChannel
(
rtc
:
:
scoped_refptr
<
DataChannelInterface
>
data_channel
)
override
;
void
OnRenegotiationNeeded
(
)
override
;
void
OnIceConnectionChange
(
PeerConnectionInterface
:
:
IceConnectionState
new_state
)
override
;
void
OnIceGatheringChange
(
PeerConnectionInterface
:
:
IceGatheringState
new_state
)
override
;
void
OnIceCandidate
(
const
IceCandidateInterface
*
candidate
)
override
;
void
OnIceCandidatesRemoved
(
const
std
:
:
vector
<
cricket
:
:
Candidate
>
&
candidates
)
override
;
private
:
__weak
RTCPeerConnection
*
peer_connection_
;
}
;
}
interface
RTCPeerConnection
(
)
property
(
nonatomic
readonly
)
rtc
:
:
scoped_refptr
<
webrtc
:
:
PeerConnectionInterface
>
nativePeerConnection
;
-
(
instancetype
)
initWithFactory
:
(
RTCPeerConnectionFactory
*
)
factory
configuration
:
(
RTCConfiguration
*
)
configuration
constraints
:
(
RTCMediaConstraints
*
)
constraints
delegate
:
(
nullable
id
<
RTCPeerConnectionDelegate
>
)
delegate
NS_DESIGNATED_INITIALIZER
;
+
(
webrtc
:
:
PeerConnectionInterface
:
:
SignalingState
)
nativeSignalingStateForState
:
(
RTCSignalingState
)
state
;
+
(
RTCSignalingState
)
signalingStateForNativeState
:
(
webrtc
:
:
PeerConnectionInterface
:
:
SignalingState
)
nativeState
;
+
(
NSString
*
)
stringForSignalingState
:
(
RTCSignalingState
)
state
;
+
(
webrtc
:
:
PeerConnectionInterface
:
:
IceConnectionState
)
nativeIceConnectionStateForState
:
(
RTCIceConnectionState
)
state
;
+
(
RTCIceConnectionState
)
iceConnectionStateForNativeState
:
(
webrtc
:
:
PeerConnectionInterface
:
:
IceConnectionState
)
nativeState
;
+
(
NSString
*
)
stringForIceConnectionState
:
(
RTCIceConnectionState
)
state
;
+
(
webrtc
:
:
PeerConnectionInterface
:
:
IceGatheringState
)
nativeIceGatheringStateForState
:
(
RTCIceGatheringState
)
state
;
+
(
RTCIceGatheringState
)
iceGatheringStateForNativeState
:
(
webrtc
:
:
PeerConnectionInterface
:
:
IceGatheringState
)
nativeState
;
+
(
NSString
*
)
stringForIceGatheringState
:
(
RTCIceGatheringState
)
state
;
+
(
webrtc
:
:
PeerConnectionInterface
:
:
StatsOutputLevel
)
nativeStatsOutputLevelForLevel
:
(
RTCStatsOutputLevel
)
level
;
end
NS_ASSUME_NONNULL_END
