#
ifndef
SDK_ANDROID_SRC_JNI_PC_SDPOBSERVER_JNI_H_
#
define
SDK_ANDROID_SRC_JNI_PC_SDPOBSERVER_JNI_H_
#
include
<
memory
>
#
include
<
string
>
#
include
"
api
/
peerconnectioninterface
.
h
"
#
include
"
sdk
/
android
/
src
/
jni
/
jni_helpers
.
h
"
namespace
webrtc
{
namespace
jni
{
template
<
class
T
>
class
SdpObserverJni
:
public
T
{
public
:
SdpObserverJni
(
JNIEnv
*
jni
jobject
j_observer
std
:
:
unique_ptr
<
MediaConstraintsInterface
>
constraints
)
:
constraints_
(
std
:
:
move
(
constraints
)
)
j_observer_global_
(
jni
j_observer
)
j_observer_class_
(
jni
GetObjectClass
(
jni
j_observer
)
)
{
}
virtual
~
SdpObserverJni
(
)
{
}
virtual
void
OnSuccess
(
)
{
ScopedLocalRefFrame
local_ref_frame
(
jni
(
)
)
;
jmethodID
m
=
GetMethodID
(
jni
(
)
*
j_observer_class_
"
onSetSuccess
"
"
(
)
V
"
)
;
jni
(
)
-
>
CallVoidMethod
(
*
j_observer_global_
m
)
;
CHECK_EXCEPTION
(
jni
(
)
)
<
<
"
error
during
CallVoidMethod
"
;
}
virtual
void
OnSuccess
(
SessionDescriptionInterface
*
desc
)
{
ScopedLocalRefFrame
local_ref_frame
(
jni
(
)
)
;
jmethodID
m
=
GetMethodID
(
jni
(
)
*
j_observer_class_
"
onCreateSuccess
"
"
(
Lorg
/
webrtc
/
SessionDescription
;
)
V
"
)
;
jobject
j_sdp
=
NativeToJavaSessionDescription
(
jni
(
)
desc
)
;
jni
(
)
-
>
CallVoidMethod
(
*
j_observer_global_
m
j_sdp
)
;
CHECK_EXCEPTION
(
jni
(
)
)
<
<
"
error
during
CallVoidMethod
"
;
delete
desc
;
}
MediaConstraintsInterface
*
constraints
(
)
{
return
constraints_
.
get
(
)
;
}
protected
:
void
DoOnFailure
(
const
std
:
:
string
&
op
const
std
:
:
string
&
error
)
{
jmethodID
m
=
GetMethodID
(
jni
(
)
*
j_observer_class_
"
on
"
+
op
+
"
Failure
"
"
(
Ljava
/
lang
/
String
;
)
V
"
)
;
jstring
j_error_string
=
NativeToJavaString
(
jni
(
)
error
)
;
jni
(
)
-
>
CallVoidMethod
(
*
j_observer_global_
m
j_error_string
)
;
CHECK_EXCEPTION
(
jni
(
)
)
<
<
"
error
during
CallVoidMethod
"
;
}
JNIEnv
*
jni
(
)
{
return
AttachCurrentThreadIfNeeded
(
)
;
}
private
:
std
:
:
unique_ptr
<
MediaConstraintsInterface
>
constraints_
;
const
ScopedGlobalRef
<
jobject
>
j_observer_global_
;
const
ScopedGlobalRef
<
jclass
>
j_observer_class_
;
}
;
class
CreateSdpObserverJni
:
public
SdpObserverJni
<
CreateSessionDescriptionObserver
>
{
public
:
CreateSdpObserverJni
(
JNIEnv
*
jni
jobject
j_observer
std
:
:
unique_ptr
<
MediaConstraintsInterface
>
constraints
)
:
SdpObserverJni
(
jni
j_observer
std
:
:
move
(
constraints
)
)
{
}
void
OnFailure
(
const
std
:
:
string
&
error
)
override
{
ScopedLocalRefFrame
local_ref_frame
(
jni
(
)
)
;
SdpObserverJni
:
:
DoOnFailure
(
std
:
:
string
(
"
Create
"
)
error
)
;
}
}
;
class
SetSdpObserverJni
:
public
SdpObserverJni
<
SetSessionDescriptionObserver
>
{
public
:
SetSdpObserverJni
(
JNIEnv
*
jni
jobject
j_observer
std
:
:
unique_ptr
<
MediaConstraintsInterface
>
constraints
)
:
SdpObserverJni
(
jni
j_observer
std
:
:
move
(
constraints
)
)
{
}
void
OnFailure
(
const
std
:
:
string
&
error
)
override
{
ScopedLocalRefFrame
local_ref_frame
(
jni
(
)
)
;
SdpObserverJni
:
:
DoOnFailure
(
std
:
:
string
(
"
Set
"
)
error
)
;
}
}
;
}
}
#
endif
