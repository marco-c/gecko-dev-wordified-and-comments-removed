#
ifndef
SDK_ANDROID_SRC_JNI_PC_PEERCONNECTIONOBSERVER_JNI_H_
#
define
SDK_ANDROID_SRC_JNI_PC_PEERCONNECTIONOBSERVER_JNI_H_
#
include
<
pc
/
mediastreamobserver
.
h
>
#
include
<
map
>
#
include
<
memory
>
#
include
<
vector
>
#
include
"
api
/
peerconnectioninterface
.
h
"
#
include
"
sdk
/
android
/
src
/
jni
/
jni_helpers
.
h
"
#
include
"
sdk
/
android
/
src
/
jni
/
pc
/
mediaconstraints_jni
.
h
"
namespace
webrtc
{
namespace
jni
{
class
PeerConnectionObserverJni
:
public
PeerConnectionObserver
public
sigslot
:
:
has_slots
<
>
{
public
:
PeerConnectionObserverJni
(
JNIEnv
*
jni
jobject
j_observer
)
;
virtual
~
PeerConnectionObserverJni
(
)
;
void
OnIceCandidate
(
const
IceCandidateInterface
*
candidate
)
override
;
void
OnIceCandidatesRemoved
(
const
std
:
:
vector
<
cricket
:
:
Candidate
>
&
candidates
)
override
;
void
OnSignalingChange
(
PeerConnectionInterface
:
:
SignalingState
new_state
)
override
;
void
OnIceConnectionChange
(
PeerConnectionInterface
:
:
IceConnectionState
new_state
)
override
;
void
OnIceConnectionReceivingChange
(
bool
receiving
)
override
;
void
OnIceGatheringChange
(
PeerConnectionInterface
:
:
IceGatheringState
new_state
)
override
;
void
OnAddStream
(
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
stream
)
override
;
void
OnRemoveStream
(
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
stream
)
override
;
void
OnDataChannel
(
rtc
:
:
scoped_refptr
<
DataChannelInterface
>
channel
)
override
;
void
OnRenegotiationNeeded
(
)
override
;
void
OnAddTrack
(
rtc
:
:
scoped_refptr
<
RtpReceiverInterface
>
receiver
const
std
:
:
vector
<
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
>
&
streams
)
override
;
void
SetConstraints
(
std
:
:
unique_ptr
<
MediaConstraintsInterface
>
constraints
)
;
const
MediaConstraintsInterface
*
constraints
(
)
{
return
constraints_
.
get
(
)
;
}
private
:
typedef
std
:
:
map
<
MediaStreamInterface
*
jobject
>
NativeToJavaStreamsMap
;
typedef
std
:
:
map
<
RtpReceiverInterface
*
jobject
>
NativeToJavaRtpReceiverMap
;
typedef
std
:
:
map
<
MediaStreamTrackInterface
*
jobject
>
NativeToJavaMediaTrackMap
;
typedef
std
:
:
map
<
MediaStreamTrackInterface
*
RtpReceiverInterface
*
>
NativeMediaStreamTrackToNativeRtpReceiver
;
void
DisposeRemoteStream
(
const
NativeToJavaStreamsMap
:
:
iterator
&
it
)
;
void
DisposeRtpReceiver
(
const
NativeToJavaRtpReceiverMap
:
:
iterator
&
it
)
;
jobject
GetOrCreateJavaStream
(
const
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
&
stream
)
;
jobjectArray
NativeToJavaMediaStreamArray
(
JNIEnv
*
jni
const
std
:
:
vector
<
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
>
&
streams
)
;
void
AddNativeAudioTrackToJavaStream
(
rtc
:
:
scoped_refptr
<
AudioTrackInterface
>
track
jobject
j_stream
)
;
void
AddNativeVideoTrackToJavaStream
(
rtc
:
:
scoped_refptr
<
VideoTrackInterface
>
track
jobject
j_stream
)
;
void
OnAudioTrackAddedToStream
(
AudioTrackInterface
*
track
MediaStreamInterface
*
stream
)
;
void
OnVideoTrackAddedToStream
(
VideoTrackInterface
*
track
MediaStreamInterface
*
stream
)
;
void
OnAudioTrackRemovedFromStream
(
AudioTrackInterface
*
track
MediaStreamInterface
*
stream
)
;
void
OnVideoTrackRemovedFromStream
(
VideoTrackInterface
*
track
MediaStreamInterface
*
stream
)
;
const
ScopedGlobalRef
<
jobject
>
j_observer_global_
;
const
ScopedGlobalRef
<
jclass
>
j_observer_class_
;
const
ScopedGlobalRef
<
jclass
>
j_rtp_receiver_class_
;
const
jmethodID
j_rtp_receiver_ctor_
;
NativeToJavaStreamsMap
remote_streams_
;
NativeToJavaRtpReceiverMap
rtp_receivers_
;
std
:
:
unique_ptr
<
MediaConstraintsInterface
>
constraints_
;
std
:
:
vector
<
std
:
:
unique_ptr
<
webrtc
:
:
MediaStreamObserver
>
>
stream_observers_
;
}
;
}
}
#
endif
