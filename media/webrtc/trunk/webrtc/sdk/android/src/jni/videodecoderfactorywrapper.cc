#
include
"
sdk
/
android
/
src
/
jni
/
videodecoderfactorywrapper
.
h
"
#
include
"
api
/
video_codecs
/
sdp_video_format
.
h
"
#
include
"
api
/
video_codecs
/
video_decoder
.
h
"
#
include
"
common_types
.
h
"
#
include
"
rtc_base
/
logging
.
h
"
#
include
"
sdk
/
android
/
src
/
jni
/
wrappednativecodec
.
h
"
namespace
webrtc
{
namespace
jni
{
VideoDecoderFactoryWrapper
:
:
VideoDecoderFactoryWrapper
(
JNIEnv
*
jni
jobject
decoder_factory
)
:
decoder_factory_
(
jni
decoder_factory
)
{
jclass
decoder_factory_class
=
jni
-
>
GetObjectClass
(
*
decoder_factory_
)
;
create_decoder_method_
=
jni
-
>
GetMethodID
(
decoder_factory_class
"
createDecoder
"
"
(
Ljava
/
lang
/
String
;
)
Lorg
/
webrtc
/
VideoDecoder
;
"
)
;
}
std
:
:
unique_ptr
<
VideoDecoder
>
VideoDecoderFactoryWrapper
:
:
CreateVideoDecoder
(
const
SdpVideoFormat
&
format
)
{
JNIEnv
*
jni
=
AttachCurrentThreadIfNeeded
(
)
;
ScopedLocalRefFrame
local_ref_frame
(
jni
)
;
jstring
name
=
NativeToJavaString
(
jni
format
.
name
)
;
jobject
decoder
=
jni
-
>
CallObjectMethod
(
*
decoder_factory_
create_decoder_method_
name
)
;
return
decoder
!
=
nullptr
?
JavaToNativeVideoDecoder
(
jni
decoder
)
:
nullptr
;
}
std
:
:
vector
<
SdpVideoFormat
>
VideoDecoderFactoryWrapper
:
:
GetSupportedFormats
(
)
const
{
return
std
:
:
vector
<
SdpVideoFormat
>
(
)
;
}
}
}
