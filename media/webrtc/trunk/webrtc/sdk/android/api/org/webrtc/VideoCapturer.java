package
org
.
webrtc
;
import
android
.
content
.
Context
;
import
java
.
util
.
List
;
public
interface
VideoCapturer
{
public
interface
CapturerObserver
{
void
onCapturerStarted
(
boolean
success
)
;
void
onCapturerStopped
(
)
;
void
onByteBufferFrameCaptured
(
byte
[
]
data
int
width
int
height
int
rotation
long
timeStamp
)
;
void
onTextureFrameCaptured
(
int
width
int
height
int
oesTextureId
float
[
]
transformMatrix
int
rotation
long
timestamp
)
;
}
static
class
AndroidVideoTrackSourceObserver
implements
CapturerObserver
{
private
final
long
nativeSource
;
public
AndroidVideoTrackSourceObserver
(
long
nativeSource
)
{
this
.
nativeSource
=
nativeSource
;
}
Override
public
void
onCapturerStarted
(
boolean
success
)
{
nativeCapturerStarted
(
nativeSource
success
)
;
}
Override
public
void
onCapturerStopped
(
)
{
nativeCapturerStopped
(
nativeSource
)
;
}
Override
public
void
onByteBufferFrameCaptured
(
byte
[
]
data
int
width
int
height
int
rotation
long
timeStamp
)
{
nativeOnByteBufferFrameCaptured
(
nativeSource
data
data
.
length
width
height
rotation
timeStamp
)
;
}
Override
public
void
onTextureFrameCaptured
(
int
width
int
height
int
oesTextureId
float
[
]
transformMatrix
int
rotation
long
timestamp
)
{
nativeOnTextureFrameCaptured
(
nativeSource
width
height
oesTextureId
transformMatrix
rotation
timestamp
)
;
}
private
native
void
nativeCapturerStarted
(
long
nativeSource
boolean
success
)
;
private
native
void
nativeCapturerStopped
(
long
nativeSource
)
;
private
native
void
nativeOnByteBufferFrameCaptured
(
long
nativeSource
byte
[
]
data
int
length
int
width
int
height
int
rotation
long
timeStamp
)
;
private
native
void
nativeOnTextureFrameCaptured
(
long
nativeSource
int
width
int
height
int
oesTextureId
float
[
]
transformMatrix
int
rotation
long
timestamp
)
;
}
void
initialize
(
SurfaceTextureHelper
surfaceTextureHelper
Context
applicationContext
CapturerObserver
capturerObserver
)
;
void
startCapture
(
int
width
int
height
int
framerate
)
;
void
stopCapture
(
)
throws
InterruptedException
;
void
changeCaptureFormat
(
int
width
int
height
int
framerate
)
;
void
dispose
(
)
;
boolean
isScreencast
(
)
;
}
