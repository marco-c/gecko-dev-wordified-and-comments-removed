package
org
.
webrtc
;
import
org
.
webrtc
.
EncodedImage
;
public
interface
VideoEncoder
{
public
class
Settings
{
public
final
int
numberOfCores
;
public
final
int
width
;
public
final
int
height
;
public
final
int
startBitrate
;
public
final
int
maxFramerate
;
public
final
boolean
automaticResizeOn
;
CalledByNative
(
"
Settings
"
)
public
Settings
(
int
numberOfCores
int
width
int
height
int
startBitrate
int
maxFramerate
boolean
automaticResizeOn
)
{
this
.
numberOfCores
=
numberOfCores
;
this
.
width
=
width
;
this
.
height
=
height
;
this
.
startBitrate
=
startBitrate
;
this
.
maxFramerate
=
maxFramerate
;
this
.
automaticResizeOn
=
automaticResizeOn
;
}
}
public
class
EncodeInfo
{
public
final
EncodedImage
.
FrameType
[
]
frameTypes
;
CalledByNative
(
"
EncodeInfo
"
)
public
EncodeInfo
(
EncodedImage
.
FrameType
[
]
frameTypes
)
{
this
.
frameTypes
=
frameTypes
;
}
}
public
class
CodecSpecificInfo
{
}
public
class
CodecSpecificInfoVP8
extends
CodecSpecificInfo
{
}
public
class
CodecSpecificInfoVP9
extends
CodecSpecificInfo
{
}
public
class
CodecSpecificInfoH264
extends
CodecSpecificInfo
{
}
public
class
BitrateAllocation
{
public
final
int
[
]
[
]
bitratesBbs
;
CalledByNative
(
"
BitrateAllocation
"
)
public
BitrateAllocation
(
int
[
]
[
]
bitratesBbs
)
{
this
.
bitratesBbs
=
bitratesBbs
;
}
public
int
getSum
(
)
{
int
sum
=
0
;
for
(
int
[
]
spatialLayer
:
bitratesBbs
)
{
for
(
int
bitrate
:
spatialLayer
)
{
sum
+
=
bitrate
;
}
}
return
sum
;
}
}
public
class
ScalingSettings
{
public
final
boolean
on
;
public
final
Integer
low
;
public
final
Integer
high
;
public
ScalingSettings
(
boolean
on
)
{
this
.
on
=
on
;
this
.
low
=
null
;
this
.
high
=
null
;
}
public
ScalingSettings
(
boolean
on
int
low
int
high
)
{
this
.
on
=
on
;
this
.
low
=
low
;
this
.
high
=
high
;
}
}
public
interface
Callback
{
void
onEncodedFrame
(
EncodedImage
frame
CodecSpecificInfo
info
)
;
}
CalledByNative
VideoCodecStatus
initEncode
(
Settings
settings
Callback
encodeCallback
)
;
CalledByNative
VideoCodecStatus
release
(
)
;
CalledByNative
VideoCodecStatus
encode
(
VideoFrame
frame
EncodeInfo
info
)
;
CalledByNative
VideoCodecStatus
setChannelParameters
(
short
packetLoss
long
roundTripTimeMs
)
;
CalledByNative
VideoCodecStatus
setRateAllocation
(
BitrateAllocation
allocation
int
framerate
)
;
CalledByNative
ScalingSettings
getScalingSettings
(
)
;
CalledByNative
String
getImplementationName
(
)
;
}
