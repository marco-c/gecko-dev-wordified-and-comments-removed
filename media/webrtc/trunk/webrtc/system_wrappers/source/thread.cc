#
include
"
webrtc
/
system_wrappers
/
interface
/
thread_wrapper
.
h
"
#
if
defined
(
_WIN32
)
#
include
"
webrtc
/
system_wrappers
/
source
/
thread_win
.
h
"
#
else
#
include
"
webrtc
/
system_wrappers
/
source
/
thread_posix
.
h
"
#
endif
namespace
webrtc
{
#
if
defined
(
_WIN32
)
typedef
ThreadWindows
ThreadType
;
#
else
typedef
ThreadPosix
ThreadType
;
#
endif
rtc
:
:
scoped_ptr
<
ThreadWrapper
>
ThreadWrapper
:
:
CreateThread
(
ThreadRunFunction
func
void
*
obj
const
char
*
thread_name
)
{
return
rtc
:
:
scoped_ptr
<
ThreadWrapper
>
(
new
ThreadType
(
func
obj
thread_name
)
)
.
Pass
(
)
;
}
rtc
:
:
scoped_ptr
<
ThreadWrapper
>
ThreadWrapper
:
:
CreateUIThread
(
ThreadRunFunction
func
void
*
obj
const
char
*
thread_name
)
{
#
if
defined
(
_WIN32
)
return
rtc
:
:
scoped_ptr
<
ThreadWrapper
>
(
new
ThreadWindowsUI
(
func
obj
thread_name
)
)
.
Pass
(
)
;
#
else
return
rtc
:
:
scoped_ptr
<
ThreadWrapper
>
(
new
ThreadType
(
func
obj
thread_name
)
)
.
Pass
(
)
;
#
endif
}
bool
ThreadWrapper
:
:
RequestCallbackTimer
(
unsigned
int
milliseconds
)
{
return
false
;
}
}
