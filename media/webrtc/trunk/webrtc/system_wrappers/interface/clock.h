#
ifndef
WEBRTC_SYSTEM_WRAPPERS_INTERFACE_CLOCK_H_
#
define
WEBRTC_SYSTEM_WRAPPERS_INTERFACE_CLOCK_H_
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
system_wrappers
/
interface
/
rw_lock_wrapper
.
h
"
#
include
"
webrtc
/
typedefs
.
h
"
namespace
webrtc
{
const
uint32_t
kNtpJan1970
=
2208988800UL
;
const
double
kMagicNtpFractionalUnit
=
4
.
294967296E
+
9
;
class
Clock
{
public
:
virtual
~
Clock
(
)
{
}
virtual
int64_t
TimeInMilliseconds
(
)
const
=
0
;
virtual
int64_t
TimeInMicroseconds
(
)
const
=
0
;
virtual
void
CurrentNtp
(
uint32_t
&
seconds
uint32_t
&
fractions
)
const
=
0
;
virtual
int64_t
CurrentNtpInMilliseconds
(
)
const
=
0
;
static
int64_t
NtpToMs
(
uint32_t
seconds
uint32_t
fractions
)
;
static
Clock
*
GetRealTimeClock
(
)
;
}
;
class
SimulatedClock
:
public
Clock
{
public
:
explicit
SimulatedClock
(
int64_t
initial_time_us
)
;
~
SimulatedClock
(
)
override
;
int64_t
TimeInMilliseconds
(
)
const
override
;
int64_t
TimeInMicroseconds
(
)
const
override
;
void
CurrentNtp
(
uint32_t
&
seconds
uint32_t
&
fractions
)
const
override
;
int64_t
CurrentNtpInMilliseconds
(
)
const
override
;
void
AdvanceTimeMilliseconds
(
int64_t
milliseconds
)
;
void
AdvanceTimeMicroseconds
(
int64_t
microseconds
)
;
private
:
int64_t
time_us_
;
rtc
:
:
scoped_ptr
<
RWLockWrapper
>
lock_
;
}
;
}
;
#
endif
