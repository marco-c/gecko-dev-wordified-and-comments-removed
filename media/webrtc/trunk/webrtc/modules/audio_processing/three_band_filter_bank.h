#
ifndef
MODULES_AUDIO_PROCESSING_THREE_BAND_FILTER_BANK_H_
#
define
MODULES_AUDIO_PROCESSING_THREE_BAND_FILTER_BANK_H_
#
include
<
cstring
>
#
include
<
memory
>
#
include
<
vector
>
#
include
"
common_audio
/
sparse_fir_filter
.
h
"
namespace
webrtc
{
class
ThreeBandFilterBank
final
{
public
:
explicit
ThreeBandFilterBank
(
size_t
length
)
;
~
ThreeBandFilterBank
(
)
;
void
Analysis
(
const
float
*
in
size_t
length
float
*
const
*
out
)
;
void
Synthesis
(
const
float
*
const
*
in
size_t
split_length
float
*
out
)
;
private
:
void
DownModulate
(
const
float
*
in
size_t
split_length
size_t
offset
float
*
const
*
out
)
;
void
UpModulate
(
const
float
*
const
*
in
size_t
split_length
size_t
offset
float
*
out
)
;
std
:
:
vector
<
float
>
in_buffer_
;
std
:
:
vector
<
float
>
out_buffer_
;
std
:
:
vector
<
std
:
:
unique_ptr
<
SparseFIRFilter
>
>
analysis_filters_
;
std
:
:
vector
<
std
:
:
unique_ptr
<
SparseFIRFilter
>
>
synthesis_filters_
;
std
:
:
vector
<
std
:
:
vector
<
float
>
>
dct_modulation_
;
}
;
}
#
endif
