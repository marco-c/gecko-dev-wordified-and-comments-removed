#
ifndef
MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_BIQUAD_FILTER_H_
#
define
MODULES_AUDIO_PROCESSING_LEVEL_CONTROLLER_BIQUAD_FILTER_H_
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
rtc_base
/
arraysize
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
namespace
webrtc
{
class
BiQuadFilter
{
public
:
struct
BiQuadCoefficients
{
float
b
[
3
]
;
float
a
[
2
]
;
}
;
BiQuadFilter
(
)
=
default
;
void
Initialize
(
const
BiQuadCoefficients
&
coefficients
)
{
coefficients_
=
coefficients
;
}
void
Process
(
rtc
:
:
ArrayView
<
const
float
>
x
rtc
:
:
ArrayView
<
float
>
y
)
;
private
:
struct
BiQuadState
{
BiQuadState
(
)
{
std
:
:
fill
(
b
b
+
arraysize
(
b
)
0
.
f
)
;
std
:
:
fill
(
a
a
+
arraysize
(
a
)
0
.
f
)
;
}
float
b
[
2
]
;
float
a
[
2
]
;
}
;
BiQuadState
biquad_state_
;
BiQuadCoefficients
coefficients_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
BiQuadFilter
)
;
}
;
}
#
endif
