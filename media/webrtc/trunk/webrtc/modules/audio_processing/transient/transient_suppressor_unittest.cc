#
include
"
webrtc
/
modules
/
audio_processing
/
transient
/
transient_suppressor
.
h
"
#
include
"
testing
/
gtest
/
include
/
gtest
/
gtest
.
h
"
#
include
"
webrtc
/
modules
/
audio_processing
/
transient
/
common
.
h
"
namespace
webrtc
{
TEST
(
TransientSuppressorTest
TypingDetectionLogicWorksAsExpectedForMono
)
{
static
const
int
kNumChannels
=
1
;
TransientSuppressor
ts
;
ts
.
Initialize
(
ts
:
:
kSampleRate16kHz
ts
:
:
kSampleRate16kHz
kNumChannels
)
;
EXPECT_FALSE
(
ts
.
detection_enabled_
)
;
ts
.
UpdateKeypress
(
true
)
;
EXPECT_TRUE
(
ts
.
detection_enabled_
)
;
for
(
int
time_ms
=
0
;
time_ms
<
3990
;
time_ms
+
=
ts
:
:
kChunkSizeMs
)
{
ts
.
UpdateKeypress
(
false
)
;
EXPECT_TRUE
(
ts
.
detection_enabled_
)
;
}
ts
.
UpdateKeypress
(
false
)
;
EXPECT_FALSE
(
ts
.
detection_enabled_
)
;
for
(
int
i
=
0
;
i
<
100
;
+
+
i
)
{
EXPECT_FALSE
(
ts
.
suppression_enabled_
)
;
ts
.
UpdateKeypress
(
true
)
;
EXPECT_TRUE
(
ts
.
detection_enabled_
)
;
EXPECT_FALSE
(
ts
.
suppression_enabled_
)
;
for
(
int
time_ms
=
0
;
time_ms
<
990
;
time_ms
+
=
ts
:
:
kChunkSizeMs
)
{
ts
.
UpdateKeypress
(
false
)
;
EXPECT_TRUE
(
ts
.
detection_enabled_
)
;
EXPECT_FALSE
(
ts
.
suppression_enabled_
)
;
}
ts
.
UpdateKeypress
(
false
)
;
}
ts
.
UpdateKeypress
(
true
)
;
EXPECT_FALSE
(
ts
.
suppression_enabled_
)
;
ts
.
UpdateKeypress
(
true
)
;
EXPECT_TRUE
(
ts
.
suppression_enabled_
)
;
for
(
int
i
=
0
;
i
<
100
;
+
+
i
)
{
for
(
int
time_ms
=
0
;
time_ms
<
1000
;
time_ms
+
=
ts
:
:
kChunkSizeMs
)
{
ts
.
UpdateKeypress
(
false
)
;
EXPECT_TRUE
(
ts
.
detection_enabled_
)
;
EXPECT_TRUE
(
ts
.
suppression_enabled_
)
;
}
ts
.
UpdateKeypress
(
true
)
;
EXPECT_TRUE
(
ts
.
detection_enabled_
)
;
EXPECT_TRUE
(
ts
.
suppression_enabled_
)
;
}
for
(
int
time_ms
=
0
;
time_ms
<
3990
;
time_ms
+
=
ts
:
:
kChunkSizeMs
)
{
ts
.
UpdateKeypress
(
false
)
;
EXPECT_TRUE
(
ts
.
detection_enabled_
)
;
EXPECT_TRUE
(
ts
.
suppression_enabled_
)
;
}
for
(
int
time_ms
=
0
;
time_ms
<
1000
;
time_ms
+
=
ts
:
:
kChunkSizeMs
)
{
ts
.
UpdateKeypress
(
false
)
;
EXPECT_FALSE
(
ts
.
detection_enabled_
)
;
EXPECT_FALSE
(
ts
.
suppression_enabled_
)
;
}
}
}
