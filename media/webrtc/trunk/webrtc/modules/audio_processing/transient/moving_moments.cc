#
include
"
webrtc
/
modules
/
audio_processing
/
transient
/
moving_moments
.
h
"
#
include
<
math
.
h
>
#
include
<
string
.
h
>
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
namespace
webrtc
{
MovingMoments
:
:
MovingMoments
(
size_t
length
)
:
length_
(
length
)
queue_
(
)
sum_
(
0
.
0
)
sum_of_squares_
(
0
.
0
)
{
assert
(
length
>
0
)
;
for
(
size_t
i
=
0
;
i
<
length
;
+
+
i
)
{
queue_
.
push
(
0
.
0
)
;
}
}
MovingMoments
:
:
~
MovingMoments
(
)
{
}
void
MovingMoments
:
:
CalculateMoments
(
const
float
*
in
size_t
in_length
float
*
first
float
*
second
)
{
assert
(
in
&
&
in_length
>
0
&
&
first
&
&
second
)
;
for
(
size_t
i
=
0
;
i
<
in_length
;
+
+
i
)
{
const
float
old_value
=
queue_
.
front
(
)
;
queue_
.
pop
(
)
;
queue_
.
push
(
in
[
i
]
)
;
sum_
+
=
in
[
i
]
-
old_value
;
sum_of_squares_
+
=
in
[
i
]
*
in
[
i
]
-
old_value
*
old_value
;
first
[
i
]
=
sum_
/
length_
;
second
[
i
]
=
sum_of_squares_
/
length_
;
}
}
}
