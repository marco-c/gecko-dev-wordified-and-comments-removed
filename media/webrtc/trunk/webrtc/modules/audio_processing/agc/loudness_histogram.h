#
ifndef
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LOUDNESS_HISTOGRAM_H_
#
define
WEBRTC_MODULES_AUDIO_PROCESSING_AGC_LOUDNESS_HISTOGRAM_H_
#
include
<
string
.
h
>
#
include
<
memory
>
#
include
"
webrtc
/
typedefs
.
h
"
namespace
webrtc
{
class
LoudnessHistogram
{
public
:
static
LoudnessHistogram
*
Create
(
)
;
static
LoudnessHistogram
*
Create
(
int
window_size
)
;
~
LoudnessHistogram
(
)
;
void
Update
(
double
rms
double
activity_probability
)
;
void
Reset
(
)
;
double
CurrentRms
(
)
const
;
double
AudioContent
(
)
const
;
int
num_updates
(
)
const
{
return
num_updates_
;
}
private
:
LoudnessHistogram
(
)
;
explicit
LoudnessHistogram
(
int
window
)
;
int
GetBinIndex
(
double
rms
)
;
void
RemoveOldestEntryAndUpdate
(
)
;
void
InsertNewestEntryAndUpdate
(
int
activity_prob_q10
int
hist_index
)
;
void
UpdateHist
(
int
activity_prob_q10
int
hist_index
)
;
void
RemoveTransient
(
)
;
static
const
int
kHistSize
=
77
;
int
num_updates_
;
int64_t
audio_content_q10_
;
int64_t
bin_count_q10_
[
kHistSize
]
;
std
:
:
unique_ptr
<
int
[
]
>
activity_probability_
;
std
:
:
unique_ptr
<
int
[
]
>
hist_bin_index_
;
int
buffer_index_
;
int
buffer_is_full_
;
int
len_circular_buffer_
;
int
len_high_activity_
;
}
;
}
#
endif
