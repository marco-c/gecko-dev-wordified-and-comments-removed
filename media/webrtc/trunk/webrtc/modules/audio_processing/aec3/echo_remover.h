#
ifndef
MODULES_AUDIO_PROCESSING_AEC3_ECHO_REMOVER_H_
#
define
MODULES_AUDIO_PROCESSING_AEC3_ECHO_REMOVER_H_
#
include
<
vector
>
#
include
"
api
/
optional
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
echo_path_variability
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
render_buffer
.
h
"
#
include
"
modules
/
audio_processing
/
include
/
audio_processing
.
h
"
namespace
webrtc
{
class
EchoRemover
{
public
:
static
EchoRemover
*
Create
(
const
EchoCanceller3Config
&
config
int
sample_rate_hz
)
;
virtual
~
EchoRemover
(
)
=
default
;
virtual
void
GetMetrics
(
EchoControl
:
:
Metrics
*
metrics
)
const
=
0
;
virtual
void
ProcessCapture
(
const
rtc
:
:
Optional
<
size_t
>
&
echo_path_delay_samples
const
EchoPathVariability
&
echo_path_variability
bool
capture_signal_saturation
const
RenderBuffer
&
render_buffer
std
:
:
vector
<
std
:
:
vector
<
float
>
>
*
capture
)
=
0
;
virtual
void
UpdateEchoLeakageStatus
(
bool
leakage_detected
)
=
0
;
}
;
}
#
endif
