#
ifndef
MODULES_AUDIO_PROCESSING_AEC3_SUBTRACTOR_H_
#
define
MODULES_AUDIO_PROCESSING_AEC3_SUBTRACTOR_H_
#
include
<
array
>
#
include
<
algorithm
>
#
include
<
vector
>
#
include
"
modules
/
audio_processing
/
aec3
/
adaptive_fir_filter
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
aec3_common
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
aec3_fft
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
aec_state
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
echo_path_variability
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
main_filter_update_gain
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
render_buffer
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
shadow_filter_update_gain
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
subtractor_output
.
h
"
#
include
"
modules
/
audio_processing
/
logging
/
apm_data_dumper
.
h
"
#
include
"
modules
/
audio_processing
/
utility
/
ooura_fft
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
namespace
webrtc
{
class
Subtractor
{
public
:
Subtractor
(
ApmDataDumper
*
data_dumper
Aec3Optimization
optimization
)
;
~
Subtractor
(
)
;
void
Process
(
const
RenderBuffer
&
render_buffer
const
rtc
:
:
ArrayView
<
const
float
>
capture
const
RenderSignalAnalyzer
&
render_signal_analyzer
const
AecState
&
aec_state
SubtractorOutput
*
output
)
;
void
HandleEchoPathChange
(
const
EchoPathVariability
&
echo_path_variability
)
;
const
std
:
:
vector
<
std
:
:
array
<
float
kFftLengthBy2Plus1
>
>
&
FilterFrequencyResponse
(
)
const
{
return
main_filter_
.
FilterFrequencyResponse
(
)
;
}
const
std
:
:
array
<
float
kAdaptiveFilterTimeDomainLength
>
&
FilterImpulseResponse
(
)
const
{
return
main_filter_
.
FilterImpulseResponse
(
)
;
}
bool
ConvergedFilter
(
)
const
{
return
converged_filter_
;
}
private
:
const
Aec3Fft
fft_
;
ApmDataDumper
*
data_dumper_
;
const
Aec3Optimization
optimization_
;
AdaptiveFirFilter
main_filter_
;
AdaptiveFirFilter
shadow_filter_
;
MainFilterUpdateGain
G_main_
;
ShadowFilterUpdateGain
G_shadow_
;
bool
converged_filter_
=
false
;
RTC_DISALLOW_IMPLICIT_CONSTRUCTORS
(
Subtractor
)
;
}
;
}
#
endif
