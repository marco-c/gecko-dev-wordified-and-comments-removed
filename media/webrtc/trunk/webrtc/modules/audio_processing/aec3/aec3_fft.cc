#
include
"
modules
/
audio_processing
/
aec3
/
aec3_fft
.
h
"
#
include
<
algorithm
>
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
void
Aec3Fft
:
:
ZeroPaddedFft
(
rtc
:
:
ArrayView
<
const
float
>
x
FftData
*
X
)
const
{
RTC_DCHECK
(
X
)
;
RTC_DCHECK_EQ
(
kFftLengthBy2
x
.
size
(
)
)
;
std
:
:
array
<
float
kFftLength
>
fft
;
std
:
:
fill
(
fft
.
begin
(
)
fft
.
begin
(
)
+
kFftLengthBy2
0
.
f
)
;
std
:
:
copy
(
x
.
begin
(
)
x
.
end
(
)
fft
.
begin
(
)
+
kFftLengthBy2
)
;
Fft
(
&
fft
X
)
;
}
void
Aec3Fft
:
:
PaddedFft
(
rtc
:
:
ArrayView
<
const
float
>
x
rtc
:
:
ArrayView
<
float
>
x_old
FftData
*
X
)
const
{
RTC_DCHECK
(
X
)
;
RTC_DCHECK_EQ
(
kFftLengthBy2
x
.
size
(
)
)
;
RTC_DCHECK_EQ
(
kFftLengthBy2
x_old
.
size
(
)
)
;
std
:
:
array
<
float
kFftLength
>
fft
;
std
:
:
copy
(
x_old
.
begin
(
)
x_old
.
end
(
)
fft
.
begin
(
)
)
;
std
:
:
copy
(
x
.
begin
(
)
x
.
end
(
)
fft
.
begin
(
)
+
x_old
.
size
(
)
)
;
std
:
:
copy
(
x
.
begin
(
)
x
.
end
(
)
x_old
.
begin
(
)
)
;
Fft
(
&
fft
X
)
;
}
}
