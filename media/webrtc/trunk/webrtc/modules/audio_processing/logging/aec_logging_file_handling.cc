#
include
"
webrtc
/
modules
/
audio_processing
/
logging
/
aec_logging_file_handling
.
h
"
#
include
<
stdint
.
h
>
#
include
<
stdio
.
h
>
#
include
"
webrtc
/
base
/
checks
.
h
"
#
include
"
webrtc
/
base
/
stringutils
.
h
"
#
include
"
webrtc
/
common_audio
/
wav_file
.
h
"
#
include
"
webrtc
/
typedefs
.
h
"
#
ifdef
WEBRTC_AEC_DEBUG_DUMP
void
WebRtcAec_ReopenWav
(
const
char
*
name
int
instance_index
int
count
int
sample_rate
rtc_WavWriter
*
*
wav_file
)
{
if
(
*
wav_file
)
{
if
(
rtc_WavSampleRate
(
*
wav_file
)
=
=
sample_rate
)
return
;
rtc_WavClose
(
*
wav_file
)
;
}
char
filename
[
64
]
;
int
written
=
rtc
:
:
sprintfn
(
filename
sizeof
(
filename
)
"
%
s
%
d
-
%
d
.
wav
"
name
instance_index
count
)
;
RTC_DCHECK_GE
(
written
0
)
;
RTC_DCHECK_LT
(
static_cast
<
size_t
>
(
written
)
sizeof
(
filename
)
)
;
*
wav_file
=
rtc_WavOpen
(
filename
sample_rate
1
)
;
}
void
WebRtcAec_RawFileOpen
(
const
char
*
name
int
instance_index
int
counter
FILE
*
*
file
)
{
char
filename
[
64
]
;
int
written
=
rtc
:
:
sprintfn
(
filename
sizeof
(
filename
)
"
%
s
%
d
-
%
d
.
dat
"
name
instance_index
counter
)
;
RTC_DCHECK_GE
(
written
0
)
;
RTC_DCHECK_LT
(
static_cast
<
size_t
>
(
written
)
sizeof
(
filename
)
)
;
*
file
=
fopen
(
filename
"
wb
"
)
;
}
#
endif
