#
ifndef
MODULES_AUDIO_PROCESSING_UTILITY_OOURA_FFT_H_
#
define
MODULES_AUDIO_PROCESSING_UTILITY_OOURA_FFT_H_
#
include
"
typedefs
.
h
"
namespace
webrtc
{
#
if
defined
(
WEBRTC_ARCH_X86_FAMILY
)
void
cft1st_128_SSE2
(
float
*
a
)
;
void
cftmdl_128_SSE2
(
float
*
a
)
;
void
rftfsub_128_SSE2
(
float
*
a
)
;
void
rftbsub_128_SSE2
(
float
*
a
)
;
#
endif
#
if
defined
(
MIPS_FPU_LE
)
void
cft1st_128_mips
(
float
*
a
)
;
void
cftmdl_128_mips
(
float
*
a
)
;
void
rftfsub_128_mips
(
float
*
a
)
;
void
rftbsub_128_mips
(
float
*
a
)
;
#
endif
#
if
defined
(
WEBRTC_HAS_NEON
)
void
cft1st_128_neon
(
float
*
a
)
;
void
cftmdl_128_neon
(
float
*
a
)
;
void
rftfsub_128_neon
(
float
*
a
)
;
void
rftbsub_128_neon
(
float
*
a
)
;
#
endif
class
OouraFft
{
public
:
OouraFft
(
)
;
~
OouraFft
(
)
;
void
Fft
(
float
*
a
)
const
;
void
InverseFft
(
float
*
a
)
const
;
private
:
void
cft1st_128
(
float
*
a
)
const
;
void
cftmdl_128
(
float
*
a
)
const
;
void
rftfsub_128
(
float
*
a
)
const
;
void
rftbsub_128
(
float
*
a
)
const
;
void
cftfsub_128
(
float
*
a
)
const
;
void
cftbsub_128
(
float
*
a
)
const
;
void
bitrv2_128
(
float
*
a
)
const
;
bool
use_sse2_
;
}
;
}
#
endif
