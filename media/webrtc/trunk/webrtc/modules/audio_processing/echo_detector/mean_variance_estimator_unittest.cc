#
include
"
webrtc
/
modules
/
audio_processing
/
echo_detector
/
mean_variance_estimator
.
h
"
#
include
"
webrtc
/
test
/
gtest
.
h
"
namespace
webrtc
{
TEST
(
MeanVarianceEstimatorTests
InsertTwoValues
)
{
MeanVarianceEstimator
test_estimator
;
test_estimator
.
Update
(
3
.
f
)
;
test_estimator
.
Update
(
5
.
f
)
;
EXPECT_GT
(
test_estimator
.
mean
(
)
0
.
f
)
;
EXPECT_GT
(
test_estimator
.
std_deviation
(
)
0
.
f
)
;
test_estimator
.
Clear
(
)
;
EXPECT_EQ
(
test_estimator
.
mean
(
)
0
.
f
)
;
EXPECT_EQ
(
test_estimator
.
std_deviation
(
)
0
.
f
)
;
}
TEST
(
MeanVarianceEstimatorTests
InsertZeroes
)
{
MeanVarianceEstimator
test_estimator
;
for
(
size_t
i
=
0
;
i
<
20000
;
i
+
+
)
{
test_estimator
.
Update
(
0
.
f
)
;
}
EXPECT_EQ
(
test_estimator
.
mean
(
)
0
.
f
)
;
EXPECT_EQ
(
test_estimator
.
std_deviation
(
)
0
.
f
)
;
}
TEST
(
MeanVarianceEstimatorTests
ConstantValueTest
)
{
MeanVarianceEstimator
test_estimator
;
for
(
size_t
i
=
0
;
i
<
20000
;
i
+
+
)
{
test_estimator
.
Update
(
3
.
f
)
;
}
EXPECT_NEAR
(
3
.
0f
test_estimator
.
mean
(
)
0
.
01f
)
;
EXPECT_NEAR
(
0
.
0f
test_estimator
.
std_deviation
(
)
0
.
01f
)
;
}
TEST
(
MeanVarianceEstimatorTests
AlternatingValueTest
)
{
MeanVarianceEstimator
test_estimator
;
for
(
size_t
i
=
0
;
i
<
20000
;
i
+
+
)
{
test_estimator
.
Update
(
1
.
f
)
;
test_estimator
.
Update
(
-
1
.
f
)
;
}
EXPECT_NEAR
(
0
.
0f
test_estimator
.
mean
(
)
0
.
01f
)
;
EXPECT_NEAR
(
1
.
0f
test_estimator
.
std_deviation
(
)
0
.
01f
)
;
}
}
