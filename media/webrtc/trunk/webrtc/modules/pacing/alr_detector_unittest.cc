#
include
"
webrtc
/
modules
/
pacing
/
alr_detector
.
h
"
#
include
"
webrtc
/
test
/
gtest
.
h
"
namespace
{
constexpr
int
kEstimatedBitrateBps
=
300000
;
}
namespace
webrtc
{
class
AlrDetectorTest
:
public
testing
:
:
Test
{
public
:
void
SetUp
(
)
override
{
alr_detector_
.
SetEstimatedBitrate
(
kEstimatedBitrateBps
)
;
}
void
SimulateOutgoingTraffic
(
int
interval_ms
int
usage_percentage
)
{
const
int
kTimeStepMs
=
10
;
for
(
int
t
=
0
;
t
<
interval_ms
;
t
+
=
kTimeStepMs
)
{
now_ms
+
=
kTimeStepMs
;
alr_detector_
.
OnBytesSent
(
kEstimatedBitrateBps
*
usage_percentage
*
kTimeStepMs
/
(
8
*
100
*
1000
)
now_ms
)
;
}
int
remainder_ms
=
interval_ms
%
kTimeStepMs
;
now_ms
+
=
remainder_ms
;
if
(
remainder_ms
>
0
)
{
alr_detector_
.
OnBytesSent
(
kEstimatedBitrateBps
*
usage_percentage
*
remainder_ms
/
(
8
*
100
*
1000
)
remainder_ms
)
;
}
}
protected
:
AlrDetector
alr_detector_
;
int64_t
now_ms
=
1
;
}
;
TEST_F
(
AlrDetectorTest
AlrDetection
)
{
EXPECT_FALSE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
500
90
)
;
EXPECT_FALSE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
500
20
)
;
EXPECT_TRUE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
500
40
)
;
EXPECT_TRUE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
500
60
)
;
EXPECT_FALSE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
}
TEST_F
(
AlrDetectorTest
ShortSpike
)
{
EXPECT_FALSE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
500
20
)
;
EXPECT_TRUE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
100
150
)
;
EXPECT_TRUE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
200
20
)
;
EXPECT_TRUE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
500
60
)
;
EXPECT_FALSE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
}
TEST_F
(
AlrDetectorTest
BandwidthEstimateChanges
)
{
EXPECT_FALSE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
500
20
)
;
EXPECT_TRUE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
alr_detector_
.
SetEstimatedBitrate
(
kEstimatedBitrateBps
/
5
)
;
EXPECT_TRUE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
SimulateOutgoingTraffic
(
10
20
)
;
EXPECT_FALSE
(
alr_detector_
.
GetApplicationLimitedRegionStartTime
(
)
)
;
}
}
