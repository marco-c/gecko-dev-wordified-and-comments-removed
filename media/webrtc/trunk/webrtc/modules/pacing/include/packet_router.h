#
ifndef
WEBRTC_MODULES_PACING_INCLUDE_PACKET_ROUTER_H_
#
define
WEBRTC_MODULES_PACING_INCLUDE_PACKET_ROUTER_H_
#
include
<
list
>
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
base
/
thread_annotations
.
h
"
#
include
"
webrtc
/
common_types
.
h
"
#
include
"
webrtc
/
modules
/
pacing
/
include
/
paced_sender
.
h
"
namespace
webrtc
{
class
CriticalSectionWrapper
;
class
RTPFragmentationHeader
;
class
RtpRtcp
;
struct
RTPVideoHeader
;
class
PacketRouter
:
public
PacedSender
:
:
Callback
{
public
:
PacketRouter
(
)
;
virtual
~
PacketRouter
(
)
;
void
AddRtpModule
(
RtpRtcp
*
rtp_module
)
;
void
RemoveRtpModule
(
RtpRtcp
*
rtp_module
)
;
bool
TimeToSendPacket
(
uint32_t
ssrc
uint16_t
sequence_number
int64_t
capture_timestamp
bool
retransmission
)
override
;
size_t
TimeToSendPadding
(
size_t
bytes
)
override
;
private
:
rtc
:
:
scoped_ptr
<
CriticalSectionWrapper
>
crit_
;
std
:
:
list
<
RtpRtcp
*
>
rtp_modules_
GUARDED_BY
(
crit_
.
get
(
)
)
;
DISALLOW_COPY_AND_ASSIGN
(
PacketRouter
)
;
}
;
}
#
endif
