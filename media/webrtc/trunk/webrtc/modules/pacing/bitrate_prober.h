#
ifndef
WEBRTC_MODULES_PACING_BITRATE_PROBER_H_
#
define
WEBRTC_MODULES_PACING_BITRATE_PROBER_H_
#
include
<
queue
>
#
include
"
webrtc
/
base
/
basictypes
.
h
"
#
include
"
webrtc
/
typedefs
.
h
"
namespace
webrtc
{
class
BitrateProber
{
public
:
BitrateProber
(
)
;
void
SetEnabled
(
bool
enable
)
;
bool
IsProbing
(
)
const
;
void
OnIncomingPacket
(
size_t
packet_size
)
;
void
CreateProbeCluster
(
int
bitrate_bps
)
;
int
TimeUntilNextProbe
(
int64_t
now_ms
)
;
int
CurrentClusterId
(
)
const
;
size_t
RecommendedMinProbeSize
(
)
const
;
void
ProbeSent
(
int64_t
now_ms
size_t
probe_size
)
;
private
:
enum
class
ProbingState
{
kDisabled
kInactive
kActive
kSuspended
}
;
struct
ProbeCluster
{
int
min_probes
=
0
;
int
sent_probes
=
0
;
int
min_bytes
=
0
;
int
sent_bytes
=
0
;
int
bitrate_bps
=
0
;
int
id
=
-
1
;
}
;
void
ResetState
(
)
;
ProbingState
probing_state_
;
std
:
:
queue
<
ProbeCluster
>
clusters_
;
size_t
probe_size_last_sent_
;
int64_t
time_last_probe_sent_ms_
;
int
next_cluster_id_
;
}
;
}
#
endif
