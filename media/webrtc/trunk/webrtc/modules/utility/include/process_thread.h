#
ifndef
WEBRTC_MODULES_UTILITY_INCLUDE_PROCESS_THREAD_H_
#
define
WEBRTC_MODULES_UTILITY_INCLUDE_PROCESS_THREAD_H_
#
include
<
memory
>
#
include
"
webrtc
/
typedefs
.
h
"
#
if
defined
(
WEBRTC_WIN
)
#
include
"
webrtc
/
base
/
task_queue
.
h
"
#
else
namespace
rtc
{
class
QueuedTask
;
}
#
endif
namespace
webrtc
{
class
Module
;
class
ProcessThread
{
public
:
virtual
~
ProcessThread
(
)
;
static
std
:
:
unique_ptr
<
ProcessThread
>
Create
(
const
char
*
thread_name
)
;
virtual
void
Start
(
)
=
0
;
virtual
void
Stop
(
)
=
0
;
virtual
void
WakeUp
(
Module
*
module
)
=
0
;
virtual
void
PostTask
(
std
:
:
unique_ptr
<
rtc
:
:
QueuedTask
>
task
)
=
0
;
virtual
void
RegisterModule
(
Module
*
module
)
=
0
;
virtual
void
DeRegisterModule
(
Module
*
module
)
=
0
;
}
;
}
#
endif
