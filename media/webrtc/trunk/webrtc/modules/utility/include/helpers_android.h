#
ifndef
MODULES_UTILITY_INCLUDE_HELPERS_ANDROID_H_
#
define
MODULES_UTILITY_INCLUDE_HELPERS_ANDROID_H_
#
include
<
jni
.
h
>
#
include
<
string
>
#
define
CHECK_EXCEPTION
(
jni
)
\
RTC_CHECK
(
!
jni
-
>
ExceptionCheck
(
)
)
\
<
<
(
jni
-
>
ExceptionDescribe
(
)
jni
-
>
ExceptionClear
(
)
"
"
)
namespace
webrtc
{
JNIEnv
*
GetEnv
(
JavaVM
*
jvm
)
;
jlong
PointerTojlong
(
void
*
ptr
)
;
jmethodID
GetMethodID
(
JNIEnv
*
jni
jclass
c
const
char
*
name
const
char
*
signature
)
;
jmethodID
GetStaticMethodID
(
JNIEnv
*
jni
jclass
c
const
char
*
name
const
char
*
signature
)
;
jclass
FindClass
(
JNIEnv
*
jni
const
char
*
name
)
;
jobject
NewGlobalRef
(
JNIEnv
*
jni
jobject
o
)
;
void
DeleteGlobalRef
(
JNIEnv
*
jni
jobject
o
)
;
std
:
:
string
GetThreadId
(
)
;
std
:
:
string
GetThreadInfo
(
)
;
class
AttachThreadScoped
{
public
:
explicit
AttachThreadScoped
(
JavaVM
*
jvm
)
;
~
AttachThreadScoped
(
)
;
JNIEnv
*
env
(
)
;
private
:
bool
attached_
;
JavaVM
*
jvm_
;
JNIEnv
*
env_
;
}
;
template
<
class
T
>
class
ScopedGlobalRef
{
public
:
ScopedGlobalRef
(
JNIEnv
*
jni
T
obj
)
:
jni_
(
jni
)
obj_
(
static_cast
<
T
>
(
NewGlobalRef
(
jni
obj
)
)
)
{
}
~
ScopedGlobalRef
(
)
{
DeleteGlobalRef
(
jni_
obj_
)
;
}
T
operator
*
(
)
const
{
return
obj_
;
}
private
:
JNIEnv
*
jni_
;
T
obj_
;
}
;
}
#
endif
