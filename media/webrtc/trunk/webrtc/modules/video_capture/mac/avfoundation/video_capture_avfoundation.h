#
ifndef
WEBRTC_MODULES_VIDEO_CAPTURE_MAIN_SOURCE_MAC_AVFOUNDATION_VIDEO_CAPTURE_AVFOUNDATION_H_
#
define
WEBRTC_MODULES_VIDEO_CAPTURE_MAIN_SOURCE_MAC_AVFOUNDATION_VIDEO_CAPTURE_AVFOUNDATION_H_
#
import
<
AVFoundation
/
AVFoundation
.
h
>
#
include
<
stdio
.
h
>
#
include
"
webrtc
/
modules
/
video_capture
/
device_info_impl
.
h
"
#
include
"
webrtc
/
modules
/
video_capture
/
mac
/
avfoundation
/
video_capture_avfoundation_utility
.
h
"
#
include
"
webrtc
/
modules
/
video_capture
/
video_capture_impl
.
h
"
class
VideoCaptureMacAVFoundationObjC
;
class
VideoCaptureMacAVFoundationInfoObjC
;
namespace
webrtc
{
namespace
videocapturemodule
{
class
VideoCaptureMacAVFoundation
:
public
VideoCaptureImpl
{
public
:
VideoCaptureMacAVFoundation
(
const
int32_t
id
)
;
virtual
~
VideoCaptureMacAVFoundation
(
)
;
static
void
Destroy
(
VideoCaptureModule
*
module
)
;
int32_t
Init
(
const
int32_t
id
const
char
*
deviceUniqueIdUTF8
)
;
virtual
int32_t
StartCapture
(
const
VideoCaptureCapability
&
capability
)
;
virtual
int32_t
StopCapture
(
)
;
virtual
bool
CaptureStarted
(
)
;
int32_t
CaptureSettings
(
VideoCaptureCapability
&
settings
)
;
protected
:
int32_t
SetCameraOutput
(
)
;
private
:
VideoCaptureMacAVFoundationObjC
*
_captureDevice
;
VideoCaptureMacAVFoundationInfoObjC
*
_captureInfo
;
bool
_isCapturing
;
int32_t
_id
;
int32_t
_captureWidth
;
int32_t
_captureHeight
;
int32_t
_captureFrameRate
;
RawVideoType
_captureRawType
;
char
_currentDeviceNameUTF8
[
MAX_NAME_LENGTH
]
;
char
_currentDeviceUniqueIdUTF8
[
MAX_NAME_LENGTH
]
;
char
_currentDeviceProductUniqueIDUTF8
[
MAX_NAME_LENGTH
]
;
int32_t
_frameCount
;
}
;
}
}
#
endif
