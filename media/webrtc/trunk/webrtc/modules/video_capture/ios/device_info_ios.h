#
ifndef
WEBRTC_MODULES_VIDEO_CAPTURE_IOS_DEVICE_INFO_IOS_H_
#
define
WEBRTC_MODULES_VIDEO_CAPTURE_IOS_DEVICE_INFO_IOS_H_
#
include
"
webrtc
/
modules
/
video_capture
/
device_info_impl
.
h
"
#
include
<
map
>
namespace
webrtc
{
namespace
videocapturemodule
{
class
DeviceInfoIos
:
public
DeviceInfoImpl
{
public
:
explicit
DeviceInfoIos
(
const
int32_t
device_id
)
;
virtual
~
DeviceInfoIos
(
)
;
int32_t
Init
(
)
override
;
uint32_t
NumberOfDevices
(
)
override
;
int32_t
GetDeviceName
(
uint32_t
deviceNumber
char
*
deviceNameUTF8
uint32_t
deviceNameLength
char
*
deviceUniqueIdUTF8
uint32_t
deviceUniqueIdUTF8Length
char
*
productUniqueIdUTF8
=
0
uint32_t
productUniqueIdUTF8Length
=
0
)
override
;
int32_t
NumberOfCapabilities
(
const
char
*
deviceUniqueIdUTF8
)
override
;
int32_t
GetCapability
(
const
char
*
deviceUniqueIdUTF8
const
uint32_t
deviceCapabilityNumber
VideoCaptureCapability
&
capability
)
override
;
int32_t
DisplayCaptureSettingsDialogBox
(
const
char
*
deviceUniqueIdUTF8
const
char
*
dialogTitleUTF8
void
*
parentWindow
uint32_t
positionX
uint32_t
positionY
)
override
;
int32_t
GetOrientation
(
const
char
*
deviceUniqueIdUTF8
VideoRotation
&
orientation
)
override
;
int32_t
CreateCapabilityMap
(
const
char
*
device_unique_id_utf8
)
override
;
private
:
std
:
:
map
<
std
:
:
string
VideoCaptureCapabilities
>
_capabilitiesMap
;
}
;
}
}
#
endif
