#
ifndef
WEBRTC_MODULES_VIDEO_PROCESSING_INCLUDE_VIDEO_PROCESSING_H_
#
define
WEBRTC_MODULES_VIDEO_PROCESSING_INCLUDE_VIDEO_PROCESSING_H_
#
include
"
webrtc
/
modules
/
include
/
module_common_types
.
h
"
#
include
"
webrtc
/
modules
/
video_processing
/
include
/
video_processing_defines
.
h
"
#
include
"
webrtc
/
video_frame
.
h
"
namespace
webrtc
{
class
VideoProcessing
{
public
:
struct
FrameStats
{
uint32_t
hist
[
256
]
;
uint32_t
mean
;
uint32_t
sum
;
uint32_t
num_pixels
;
uint32_t
sub_sampling_factor
;
}
;
enum
BrightnessWarning
{
kNoWarning
kDarkWarning
kBrightWarning
}
;
static
VideoProcessing
*
Create
(
)
;
virtual
~
VideoProcessing
(
)
{
}
static
void
GetFrameStats
(
const
VideoFrame
&
frame
FrameStats
*
stats
)
;
static
bool
ValidFrameStats
(
const
FrameStats
&
stats
)
;
static
void
ClearFrameStats
(
FrameStats
*
stats
)
;
static
void
Brighten
(
int
delta
VideoFrame
*
frame
)
;
virtual
int32_t
Deflickering
(
VideoFrame
*
frame
FrameStats
*
stats
)
=
0
;
virtual
int32_t
BrightnessDetection
(
const
VideoFrame
&
frame
const
FrameStats
&
stats
)
=
0
;
virtual
void
EnableTemporalDecimation
(
bool
enable
)
=
0
;
virtual
int32_t
SetTargetResolution
(
uint32_t
width
uint32_t
height
uint32_t
frame_rate
)
=
0
;
virtual
void
SetTargetFramerate
(
int
frame_rate
)
=
0
;
virtual
uint32_t
GetDecimatedFrameRate
(
)
=
0
;
virtual
uint32_t
GetDecimatedWidth
(
)
const
=
0
;
virtual
uint32_t
GetDecimatedHeight
(
)
const
=
0
;
virtual
void
SetInputFrameResampleMode
(
VideoFrameResampling
resampling_mode
)
=
0
;
virtual
void
EnableDenosing
(
bool
enable
)
=
0
;
virtual
const
VideoFrame
*
PreprocessFrame
(
const
VideoFrame
&
frame
)
=
0
;
virtual
VideoContentMetrics
*
GetContentMetrics
(
)
const
=
0
;
virtual
void
EnableContentAnalysis
(
bool
enable
)
=
0
;
}
;
}
#
endif
