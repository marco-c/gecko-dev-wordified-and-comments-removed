#
ifndef
WEBRTC_MODULES_REMOTE_BITRATE_ESTIMATOR_OVERUSE_ESTIMATOR_H_
#
define
WEBRTC_MODULES_REMOTE_BITRATE_ESTIMATOR_OVERUSE_ESTIMATOR_H_
#
include
<
list
>
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
#
include
"
webrtc
/
common_types
.
h
"
#
include
"
webrtc
/
modules
/
remote_bitrate_estimator
/
include
/
bwe_defines
.
h
"
namespace
webrtc
{
class
OveruseEstimator
{
public
:
explicit
OveruseEstimator
(
const
OverUseDetectorOptions
&
options
)
;
~
OveruseEstimator
(
)
;
void
Update
(
int64_t
t_delta
double
ts_delta
int
size_delta
BandwidthUsage
current_hypothesis
)
;
double
var_noise
(
)
const
{
return
var_noise_
;
}
double
offset
(
)
const
{
return
offset_
;
}
unsigned
int
num_of_deltas
(
)
const
{
return
num_of_deltas_
;
}
private
:
double
UpdateMinFramePeriod
(
double
ts_delta
)
;
void
UpdateNoiseEstimate
(
double
residual
double
ts_delta
bool
stable_state
)
;
OverUseDetectorOptions
options_
;
uint16_t
num_of_deltas_
;
double
slope_
;
double
offset_
;
double
prev_offset_
;
double
E_
[
2
]
[
2
]
;
double
process_noise_
[
2
]
;
double
avg_noise_
;
double
var_noise_
;
std
:
:
list
<
double
>
ts_delta_hist_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
OveruseEstimator
)
;
}
;
}
#
endif
