#
ifndef
WEBRTC_MODULES_REMOTE_BITRATE_ESTIMATOR_INCLUDE_MOCK_MOCK_REMOTE_BITRATE_ESTIMATOR_H_
#
define
WEBRTC_MODULES_REMOTE_BITRATE_ESTIMATOR_INCLUDE_MOCK_MOCK_REMOTE_BITRATE_ESTIMATOR_H_
#
include
<
vector
>
#
include
"
webrtc
/
modules
/
remote_bitrate_estimator
/
include
/
remote_bitrate_estimator
.
h
"
#
include
"
webrtc
/
test
/
gmock
.
h
"
namespace
webrtc
{
class
MockRemoteBitrateObserver
:
public
RemoteBitrateObserver
{
public
:
MOCK_METHOD2
(
OnReceiveBitrateChanged
void
(
const
std
:
:
vector
<
uint32_t
>
&
ssrcs
uint32_t
bitrate
)
)
;
}
;
class
MockRemoteBitrateEstimator
:
public
RemoteBitrateEstimator
{
public
:
MOCK_METHOD1
(
IncomingPacketFeedbackVector
void
(
const
std
:
:
vector
<
PacketInfo
>
&
)
)
;
MOCK_METHOD3
(
IncomingPacket
void
(
int64_t
size_t
const
RTPHeader
&
)
)
;
MOCK_METHOD1
(
RemoveStream
void
(
uint32_t
)
)
;
MOCK_CONST_METHOD2
(
LatestEstimate
bool
(
std
:
:
vector
<
uint32_t
>
*
uint32_t
*
)
)
;
MOCK_METHOD2
(
OnRttUpdate
void
(
int64_t
int64_t
)
)
;
MOCK_METHOD0
(
TimeUntilNextProcess
int64_t
(
)
)
;
MOCK_METHOD0
(
Process
void
(
)
)
;
MOCK_METHOD1
(
SetMinBitrate
void
(
int
)
)
;
}
;
}
#
endif
