#
include
<
string
>
#
include
<
vector
>
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
modules
/
video_coding
/
main
/
interface
/
video_coding_defines
.
h
"
#
include
"
webrtc
/
modules
/
video_coding
/
main
/
test
/
rtp_player
.
h
"
class
NullEventFactory
;
namespace
webrtc
{
class
Clock
;
class
CriticalSectionWrapper
;
namespace
rtpplayer
{
class
VcmPayloadSinkFactory
:
public
PayloadSinkFactoryInterface
{
public
:
VcmPayloadSinkFactory
(
const
std
:
:
string
&
base_out_filename
Clock
*
clock
bool
protection_enabled
VCMVideoProtection
protection_method
int64_t
rtt_ms
uint32_t
render_delay_ms
uint32_t
min_playout_delay_ms
)
;
virtual
~
VcmPayloadSinkFactory
(
)
;
virtual
PayloadSinkInterface
*
Create
(
RtpStreamInterface
*
stream
)
;
int
DecodeAndProcessAll
(
bool
decode_dual_frame
)
;
bool
ProcessAll
(
)
;
bool
DecodeAll
(
)
;
private
:
class
VcmPayloadSink
;
friend
class
VcmPayloadSink
;
typedef
std
:
:
vector
<
VcmPayloadSink
*
>
Sinks
;
void
Remove
(
VcmPayloadSink
*
sink
)
;
std
:
:
string
base_out_filename_
;
Clock
*
clock_
;
bool
protection_enabled_
;
VCMVideoProtection
protection_method_
;
int64_t
rtt_ms_
;
uint32_t
render_delay_ms_
;
uint32_t
min_playout_delay_ms_
;
rtc
:
:
scoped_ptr
<
NullEventFactory
>
null_event_factory_
;
rtc
:
:
scoped_ptr
<
CriticalSectionWrapper
>
crit_sect_
;
Sinks
sinks_
;
DISALLOW_IMPLICIT_CONSTRUCTORS
(
VcmPayloadSinkFactory
)
;
}
;
}
}
