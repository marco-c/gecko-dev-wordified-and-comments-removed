#
ifndef
MODULES_VIDEO_CODING_CODECS_TEST_STATS_H_
#
define
MODULES_VIDEO_CODING_CODECS_TEST_STATS_H_
#
include
<
vector
>
#
include
"
common_types
.
h
"
namespace
webrtc
{
namespace
test
{
struct
FrameStatistic
{
explicit
FrameStatistic
(
int
frame_number
)
:
frame_number
(
frame_number
)
{
}
const
int
frame_number
=
0
;
int64_t
encode_start_ns
=
0
;
int
encode_return_code
=
0
;
bool
encoding_successful
=
false
;
int
encode_time_us
=
0
;
int
bitrate_kbps
=
0
;
size_t
encoded_frame_size_bytes
=
0
;
webrtc
:
:
FrameType
frame_type
=
kVideoFrameDelta
;
rtc
:
:
Optional
<
size_t
>
max_nalu_length
;
int64_t
decode_start_ns
=
0
;
int
decode_return_code
=
0
;
bool
decoding_successful
=
false
;
int
decode_time_us
=
0
;
int
decoded_width
=
0
;
int
decoded_height
=
0
;
int
qp
=
-
1
;
int
packets_dropped
=
0
;
size_t
total_packets
=
0
;
size_t
manipulated_length
=
0
;
float
psnr
=
0
.
0
;
float
ssim
=
0
.
0
;
}
;
class
Stats
{
public
:
Stats
(
)
=
default
;
~
Stats
(
)
=
default
;
FrameStatistic
*
AddFrame
(
)
;
FrameStatistic
*
GetFrame
(
int
frame_number
)
;
size_t
size
(
)
const
;
void
PrintSummary
(
)
const
;
private
:
std
:
:
vector
<
FrameStatistic
>
stats_
;
}
;
}
}
#
endif
