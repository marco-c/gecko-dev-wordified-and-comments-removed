#
ifndef
MODULES_CONGESTION_CONTROLLER_ACKNOWLEDGED_BITRATE_ESTIMATOR_H_
#
define
MODULES_CONGESTION_CONTROLLER_ACKNOWLEDGED_BITRATE_ESTIMATOR_H_
#
include
<
memory
>
#
include
<
vector
>
#
include
"
api
/
optional
.
h
"
#
include
"
modules
/
congestion_controller
/
bitrate_estimator
.
h
"
namespace
webrtc
{
struct
PacketFeedback
;
class
AcknowledgedBitrateEstimator
{
public
:
explicit
AcknowledgedBitrateEstimator
(
std
:
:
unique_ptr
<
BitrateEstimator
>
bitrate_estimator
)
;
AcknowledgedBitrateEstimator
(
)
;
void
IncomingPacketFeedbackVector
(
const
std
:
:
vector
<
PacketFeedback
>
&
packet_feedback_vector
)
;
rtc
:
:
Optional
<
uint32_t
>
bitrate_bps
(
)
const
;
void
SetAlrEndedTimeMs
(
int64_t
alr_ended_time_ms
)
;
private
:
void
MaybeExpectFastRateChange
(
int64_t
packet_arrival_time_ms
)
;
rtc
:
:
Optional
<
int64_t
>
alr_ended_time_ms_
;
std
:
:
unique_ptr
<
BitrateEstimator
>
bitrate_estimator_
;
}
;
}
#
endif
