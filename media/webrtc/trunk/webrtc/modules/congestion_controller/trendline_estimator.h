#
ifndef
WEBRTC_MODULES_CONGESTION_CONTROLLER_TRENDLINE_ESTIMATOR_H_
#
define
WEBRTC_MODULES_CONGESTION_CONTROLLER_TRENDLINE_ESTIMATOR_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
list
>
#
include
<
utility
>
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
namespace
webrtc
{
class
TrendlineEstimator
{
public
:
TrendlineEstimator
(
size_t
window_size
double
smoothing_coef
double
threshold_gain
)
;
~
TrendlineEstimator
(
)
;
void
Update
(
double
recv_delta_ms
double
send_delta_ms
int64_t
arrival_time_ms
)
;
double
trendline_slope
(
)
const
{
return
trendline_
*
threshold_gain_
;
}
unsigned
int
num_of_deltas
(
)
const
{
return
num_of_deltas_
;
}
private
:
const
size_t
window_size_
;
const
double
smoothing_coef_
;
const
double
threshold_gain_
;
unsigned
int
num_of_deltas_
;
int64_t
first_arrival_time_ms
;
double
accumulated_delay_
;
double
smoothed_delay_
;
std
:
:
list
<
std
:
:
pair
<
double
double
>
>
delay_hist_
;
double
trendline_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
TrendlineEstimator
)
;
}
;
}
#
endif
