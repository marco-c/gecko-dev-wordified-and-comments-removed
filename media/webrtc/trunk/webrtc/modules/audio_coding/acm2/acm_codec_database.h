#
ifndef
WEBRTC_MODULES_AUDIO_CODING_ACM2_ACM_CODEC_DATABASE_H_
#
define
WEBRTC_MODULES_AUDIO_CODING_ACM2_ACM_CODEC_DATABASE_H_
#
include
"
webrtc
/
common_types
.
h
"
#
include
"
webrtc
/
engine_configurations
.
h
"
#
include
"
webrtc
/
modules
/
audio_coding
/
acm2
/
rent_a_codec
.
h
"
#
include
"
webrtc
/
modules
/
audio_coding
/
neteq
/
include
/
neteq
.
h
"
namespace
webrtc
{
namespace
acm2
{
class
ACMCodecDB
{
public
:
static
const
int
kMaxNumCodecs
=
50
;
static
const
int
kMaxNumPacketSize
=
6
;
struct
CodecSettings
{
int
num_packet_sizes
;
int
packet_sizes_samples
[
kMaxNumPacketSize
]
;
int
basic_block_samples
;
size_t
channel_support
;
}
;
static
int
CodecNumber
(
const
CodecInst
&
codec_inst
)
;
static
int
CodecId
(
const
CodecInst
&
codec_inst
)
;
static
int
CodecId
(
const
char
*
payload_name
int
frequency
size_t
channels
)
;
static
int
ReceiverCodecNumber
(
const
CodecInst
&
codec_inst
)
;
static
const
CodecInst
database_
[
kMaxNumCodecs
]
;
static
const
CodecSettings
codec_settings_
[
kMaxNumCodecs
]
;
static
const
NetEqDecoder
neteq_decoders_
[
kMaxNumCodecs
]
;
}
;
}
}
#
endif
