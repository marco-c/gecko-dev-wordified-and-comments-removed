#
ifndef
WEBRTC_MODULES_AUDIO_CODING_CODECS_ILBC_INTERFACE_AUDIO_ENCODER_ILBC_H_
#
define
WEBRTC_MODULES_AUDIO_CODING_CODECS_ILBC_INTERFACE_AUDIO_ENCODER_ILBC_H_
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
modules
/
audio_coding
/
codecs
/
audio_encoder
.
h
"
#
include
"
webrtc
/
modules
/
audio_coding
/
codecs
/
ilbc
/
interface
/
ilbc
.
h
"
namespace
webrtc
{
class
AudioEncoderIlbc
:
public
AudioEncoder
{
public
:
struct
Config
{
Config
(
)
:
payload_type
(
102
)
frame_size_ms
(
30
)
{
}
int
payload_type
;
int
frame_size_ms
;
}
;
explicit
AudioEncoderIlbc
(
const
Config
&
config
)
;
~
AudioEncoderIlbc
(
)
override
;
int
SampleRateHz
(
)
const
override
;
int
NumChannels
(
)
const
override
;
size_t
MaxEncodedBytes
(
)
const
override
;
int
Num10MsFramesInNextPacket
(
)
const
override
;
int
Max10MsFramesInAPacket
(
)
const
override
;
protected
:
EncodedInfo
EncodeInternal
(
uint32_t
rtp_timestamp
const
int16_t
*
audio
size_t
max_encoded_bytes
uint8_t
*
encoded
)
override
;
private
:
size_t
RequiredOutputSizeBytes
(
)
const
;
static
const
int
kMaxSamplesPerPacket
=
480
;
const
int
payload_type_
;
const
int
num_10ms_frames_per_packet_
;
int
num_10ms_frames_buffered_
;
uint32_t
first_timestamp_in_buffer_
;
int16_t
input_buffer_
[
kMaxSamplesPerPacket
]
;
IlbcEncoderInstance
*
encoder_
;
}
;
}
#
endif
