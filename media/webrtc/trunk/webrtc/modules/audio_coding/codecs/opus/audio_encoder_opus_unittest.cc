#
include
"
testing
/
gtest
/
include
/
gtest
/
gtest
.
h
"
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
modules
/
audio_coding
/
codecs
/
opus
/
interface
/
audio_encoder_opus
.
h
"
namespace
webrtc
{
class
AudioEncoderOpusTest
:
public
:
:
testing
:
:
Test
{
protected
:
AudioEncoderOpusTest
(
)
:
opus_
(
new
AudioEncoderOpus
(
AudioEncoderOpus
:
:
Config
(
)
)
)
{
}
void
TestSetPacketLossRate
(
double
from
double
to
double
expected_return
)
{
ASSERT_TRUE
(
opus_
)
;
for
(
double
loss
=
from
;
loss
<
=
to
;
(
to
>
=
from
)
?
loss
+
=
0
.
01
:
loss
-
=
0
.
01
)
{
opus_
-
>
SetProjectedPacketLossRate
(
loss
)
;
EXPECT_DOUBLE_EQ
(
expected_return
opus_
-
>
packet_loss_rate
(
)
)
;
}
}
rtc
:
:
scoped_ptr
<
AudioEncoderOpus
>
opus_
;
}
;
namespace
{
const
double
kPacketLossRate20
=
0
.
20
;
const
double
kPacketLossRate10
=
0
.
10
;
const
double
kPacketLossRate5
=
0
.
05
;
const
double
kPacketLossRate1
=
0
.
01
;
const
double
kLossRate20Margin
=
0
.
02
;
const
double
kLossRate10Margin
=
0
.
01
;
const
double
kLossRate5Margin
=
0
.
01
;
}
TEST_F
(
AudioEncoderOpusTest
PacketLossRateOptimized
)
{
TestSetPacketLossRate
(
0
.
0
0
.
0
0
.
0
)
;
TestSetPacketLossRate
(
kPacketLossRate1
kPacketLossRate5
+
kLossRate5Margin
-
0
.
01
kPacketLossRate1
)
;
TestSetPacketLossRate
(
kPacketLossRate5
+
kLossRate5Margin
kPacketLossRate10
+
kLossRate10Margin
-
0
.
01
kPacketLossRate5
)
;
TestSetPacketLossRate
(
kPacketLossRate10
+
kLossRate10Margin
kPacketLossRate20
+
kLossRate20Margin
-
0
.
01
kPacketLossRate10
)
;
TestSetPacketLossRate
(
kPacketLossRate20
+
kLossRate20Margin
1
.
0
kPacketLossRate20
)
;
TestSetPacketLossRate
(
kPacketLossRate20
+
kLossRate20Margin
kPacketLossRate20
-
kLossRate20Margin
kPacketLossRate20
)
;
TestSetPacketLossRate
(
kPacketLossRate20
-
kLossRate20Margin
-
0
.
01
kPacketLossRate10
-
kLossRate10Margin
kPacketLossRate10
)
;
TestSetPacketLossRate
(
kPacketLossRate10
-
kLossRate10Margin
-
0
.
01
kPacketLossRate5
-
kLossRate5Margin
kPacketLossRate5
)
;
TestSetPacketLossRate
(
kPacketLossRate5
-
kLossRate5Margin
-
0
.
01
kPacketLossRate1
kPacketLossRate1
)
;
TestSetPacketLossRate
(
0
.
0
0
.
0
0
.
0
)
;
}
}
