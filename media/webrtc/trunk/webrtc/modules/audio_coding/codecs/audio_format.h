#
ifndef
WEBRTC_MODULES_AUDIO_CODING_CODECS_AUDIO_FORMAT_H_
#
define
WEBRTC_MODULES_AUDIO_CODING_CODECS_AUDIO_FORMAT_H_
#
include
<
map
>
#
include
<
ostream
>
#
include
<
string
>
#
include
<
utility
>
namespace
webrtc
{
struct
SdpAudioFormat
{
using
Parameters
=
std
:
:
map
<
std
:
:
string
std
:
:
string
>
;
SdpAudioFormat
(
const
SdpAudioFormat
&
)
;
SdpAudioFormat
(
SdpAudioFormat
&
&
)
;
SdpAudioFormat
(
const
char
*
name
int
clockrate_hz
int
num_channels
)
;
SdpAudioFormat
(
const
char
*
name
int
clockrate_hz
int
num_channels
Parameters
&
&
param
)
;
~
SdpAudioFormat
(
)
;
SdpAudioFormat
&
operator
=
(
const
SdpAudioFormat
&
)
;
SdpAudioFormat
&
operator
=
(
SdpAudioFormat
&
&
)
;
friend
bool
operator
=
=
(
const
SdpAudioFormat
&
a
const
SdpAudioFormat
&
b
)
;
friend
bool
operator
!
=
(
const
SdpAudioFormat
&
a
const
SdpAudioFormat
&
b
)
{
return
!
(
a
=
=
b
)
;
}
std
:
:
string
name
;
int
clockrate_hz
;
int
num_channels
;
Parameters
parameters
;
}
;
void
swap
(
SdpAudioFormat
&
a
SdpAudioFormat
&
b
)
;
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
os
const
SdpAudioFormat
&
saf
)
;
struct
AudioCodecSpec
{
SdpAudioFormat
format
;
bool
allow_comfort_noise
;
}
;
}
#
endif
