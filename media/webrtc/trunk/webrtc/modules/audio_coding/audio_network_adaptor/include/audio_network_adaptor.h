#
ifndef
WEBRTC_MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_INCLUDE_AUDIO_NETWORK_ADAPTOR_H_
#
define
WEBRTC_MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_INCLUDE_AUDIO_NETWORK_ADAPTOR_H_
#
include
"
webrtc
/
base
/
optional
.
h
"
namespace
webrtc
{
class
AudioNetworkAdaptor
{
public
:
struct
EncoderRuntimeConfig
{
EncoderRuntimeConfig
(
)
;
EncoderRuntimeConfig
(
const
EncoderRuntimeConfig
&
other
)
;
~
EncoderRuntimeConfig
(
)
;
rtc
:
:
Optional
<
int
>
bitrate_bps
;
rtc
:
:
Optional
<
int
>
frame_length_ms
;
rtc
:
:
Optional
<
float
>
uplink_packet_loss_fraction
;
rtc
:
:
Optional
<
bool
>
enable_fec
;
rtc
:
:
Optional
<
bool
>
enable_dtx
;
rtc
:
:
Optional
<
size_t
>
num_channels
;
}
;
virtual
~
AudioNetworkAdaptor
(
)
=
default
;
virtual
void
SetUplinkBandwidth
(
int
uplink_bandwidth_bps
)
=
0
;
virtual
void
SetUplinkPacketLossFraction
(
float
uplink_packet_loss_fraction
)
=
0
;
virtual
void
SetRtt
(
int
rtt_ms
)
=
0
;
virtual
void
SetTargetAudioBitrate
(
int
target_audio_bitrate_bps
)
=
0
;
virtual
void
SetOverhead
(
size_t
overhead_bytes_per_packet
)
=
0
;
virtual
EncoderRuntimeConfig
GetEncoderRuntimeConfig
(
)
=
0
;
virtual
void
StartDebugDump
(
FILE
*
file_handle
)
=
0
;
virtual
void
StopDebugDump
(
)
=
0
;
}
;
}
#
endif
