#
ifndef
MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_CHANNEL_CONTROLLER_H_
#
define
MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_CHANNEL_CONTROLLER_H_
#
include
"
modules
/
audio_coding
/
audio_network_adaptor
/
controller
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
namespace
webrtc
{
class
ChannelController
final
:
public
Controller
{
public
:
struct
Config
{
Config
(
size_t
num_encoder_channels
size_t
intial_channels_to_encode
int
channel_1_to_2_bandwidth_bps
int
channel_2_to_1_bandwidth_bps
)
;
size_t
num_encoder_channels
;
size_t
intial_channels_to_encode
;
int
channel_1_to_2_bandwidth_bps
;
int
channel_2_to_1_bandwidth_bps
;
}
;
explicit
ChannelController
(
const
Config
&
config
)
;
~
ChannelController
(
)
override
;
void
UpdateNetworkMetrics
(
const
NetworkMetrics
&
network_metrics
)
override
;
void
MakeDecision
(
AudioEncoderRuntimeConfig
*
config
)
override
;
private
:
const
Config
config_
;
size_t
channels_to_encode_
;
rtc
:
:
Optional
<
int
>
uplink_bandwidth_bps_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
ChannelController
)
;
}
;
}
#
endif
