#
ifndef
MODULES_AUDIO_CODING_NETEQ_DELAY_MANAGER_H_
#
define
MODULES_AUDIO_CODING_NETEQ_DELAY_MANAGER_H_
#
include
<
string
.
h
>
#
include
<
memory
>
#
include
<
vector
>
#
include
"
modules
/
audio_coding
/
neteq
/
tick_timer
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
#
include
"
typedefs
.
h
"
namespace
webrtc
{
class
DelayPeakDetector
;
class
DelayManager
{
public
:
typedef
std
:
:
vector
<
int
>
IATVector
;
DelayManager
(
size_t
max_packets_in_buffer
DelayPeakDetector
*
peak_detector
const
TickTimer
*
tick_timer
)
;
virtual
~
DelayManager
(
)
;
virtual
const
IATVector
&
iat_vector
(
)
const
;
virtual
int
Update
(
uint16_t
sequence_number
uint32_t
timestamp
int
sample_rate_hz
)
;
virtual
int
CalculateTargetLevel
(
int
iat_packets
)
;
virtual
int
SetPacketAudioLength
(
int
length_ms
)
;
virtual
void
Reset
(
)
;
virtual
double
EstimatedClockDriftPpm
(
)
const
;
virtual
bool
PeakFound
(
)
const
;
virtual
void
ResetPacketIatCount
(
)
;
virtual
void
BufferLimits
(
int
*
lower_limit
int
*
higher_limit
)
const
;
virtual
int
TargetLevel
(
)
const
;
virtual
void
LastDecodedWasCngOrDtmf
(
bool
it_was
)
;
virtual
void
RegisterEmptyPacket
(
)
;
static
IATVector
ScaleHistogram
(
const
IATVector
&
histogram
int
old_packet_length
int
new_packet_length
)
;
virtual
bool
SetMinimumDelay
(
int
delay_ms
)
;
virtual
bool
SetMaximumDelay
(
int
delay_ms
)
;
virtual
int
least_required_delay_ms
(
)
const
;
virtual
int
base_target_level
(
)
const
;
virtual
void
set_streaming_mode
(
bool
value
)
;
virtual
int
last_pack_cng_or_dtmf
(
)
const
;
virtual
void
set_last_pack_cng_or_dtmf
(
int
value
)
;
private
:
static
const
int
kLimitProbability
=
53687091
;
static
const
int
kLimitProbabilityStreaming
=
536871
;
static
const
int
kMaxStreamingPeakPeriodMs
=
600000
;
static
const
int
kCumulativeSumDrift
=
2
;
static
const
int
kIatFactor_
=
32745
;
static
const
int
kMaxIat
=
64
;
void
ResetHistogram
(
)
;
void
UpdateCumulativeSums
(
int
packet_len_ms
uint16_t
sequence_number
)
;
void
UpdateHistogram
(
size_t
iat_packets
)
;
void
LimitTargetLevel
(
)
;
bool
first_packet_received_
;
const
size_t
max_packets_in_buffer_
;
IATVector
iat_vector_
;
int
iat_factor_
;
const
TickTimer
*
tick_timer_
;
std
:
:
unique_ptr
<
TickTimer
:
:
Stopwatch
>
packet_iat_stopwatch_
;
int
base_target_level_
;
int
target_level_
;
int
packet_len_ms_
;
bool
streaming_mode_
;
uint16_t
last_seq_no_
;
uint32_t
last_timestamp_
;
int
minimum_delay_ms_
;
int
least_required_delay_ms_
;
int
maximum_delay_ms_
;
int
iat_cumulative_sum_
;
int
max_iat_cumulative_sum_
;
std
:
:
unique_ptr
<
TickTimer
:
:
Stopwatch
>
max_iat_stopwatch_
;
DelayPeakDetector
&
peak_detector_
;
int
last_pack_cng_or_dtmf_
;
const
bool
frame_length_change_experiment_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
DelayManager
)
;
}
;
}
#
endif
