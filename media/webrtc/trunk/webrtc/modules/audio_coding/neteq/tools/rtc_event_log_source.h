#
ifndef
WEBRTC_MODULES_AUDIO_CODING_NETEQ_TOOLS_RTC_EVENT_LOG_SOURCE_H_
#
define
WEBRTC_MODULES_AUDIO_CODING_NETEQ_TOOLS_RTC_EVENT_LOG_SOURCE_H_
#
include
<
memory
>
#
include
<
string
>
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
#
include
"
webrtc
/
logging
/
rtc_event_log
/
rtc_event_log_parser
.
h
"
#
include
"
webrtc
/
modules
/
audio_coding
/
neteq
/
tools
/
packet_source
.
h
"
#
include
"
webrtc
/
modules
/
rtp_rtcp
/
include
/
rtp_rtcp_defines
.
h
"
namespace
webrtc
{
class
RtpHeaderParser
;
namespace
test
{
class
Packet
;
class
RtcEventLogSource
:
public
PacketSource
{
public
:
static
RtcEventLogSource
*
Create
(
const
std
:
:
string
&
file_name
)
;
virtual
~
RtcEventLogSource
(
)
;
virtual
bool
RegisterRtpHeaderExtension
(
RTPExtensionType
type
uint8_t
id
)
;
std
:
:
unique_ptr
<
Packet
>
NextPacket
(
)
override
;
int64_t
NextAudioOutputEventMs
(
)
;
private
:
RtcEventLogSource
(
)
;
bool
OpenFile
(
const
std
:
:
string
&
file_name
)
;
size_t
rtp_packet_index_
=
0
;
size_t
audio_output_index_
=
0
;
ParsedRtcEventLog
parsed_stream_
;
std
:
:
unique_ptr
<
RtpHeaderParser
>
parser_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
RtcEventLogSource
)
;
}
;
}
}
#
endif
