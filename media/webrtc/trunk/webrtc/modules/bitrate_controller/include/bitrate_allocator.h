#
ifndef
WEBRTC_MODULES_BITRATE_CONTROLLER_INCLUDE_BITRATE_ALLOCATOR_H_
#
define
WEBRTC_MODULES_BITRATE_CONTROLLER_INCLUDE_BITRATE_ALLOCATOR_H_
#
include
<
list
>
#
include
<
map
>
#
include
<
utility
>
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
base
/
thread_annotations
.
h
"
#
include
"
webrtc
/
system_wrappers
/
interface
/
critical_section_wrapper
.
h
"
namespace
webrtc
{
class
BitrateObserver
;
class
BitrateAllocator
{
public
:
BitrateAllocator
(
)
;
void
OnNetworkChanged
(
uint32_t
target_bitrate
uint8_t
fraction_loss
int64_t
rtt
)
;
int
AddBitrateObserver
(
BitrateObserver
*
observer
uint32_t
start_bitrate_bps
uint32_t
min_bitrate_bps
uint32_t
max_bitrate_bps
int
*
new_observer_bitrate_bps
)
;
void
RemoveBitrateObserver
(
BitrateObserver
*
observer
)
;
void
GetMinMaxBitrateSumBps
(
int
*
min_bitrate_sum_bps
int
*
max_bitrate_sum_bps
)
const
;
void
EnforceMinBitrate
(
bool
enforce_min_bitrate
)
;
private
:
struct
BitrateConfiguration
{
BitrateConfiguration
(
uint32_t
start_bitrate
uint32_t
min_bitrate
uint32_t
max_bitrate
)
:
start_bitrate_
(
start_bitrate
)
min_bitrate_
(
min_bitrate
)
max_bitrate_
(
max_bitrate
)
{
}
uint32_t
start_bitrate_
;
uint32_t
min_bitrate_
;
uint32_t
max_bitrate_
;
}
;
struct
ObserverConfiguration
{
ObserverConfiguration
(
BitrateObserver
*
observer
uint32_t
bitrate
)
:
observer_
(
observer
)
min_bitrate_
(
bitrate
)
{
}
BitrateObserver
*
observer_
;
uint32_t
min_bitrate_
;
}
;
typedef
std
:
:
pair
<
BitrateObserver
*
BitrateConfiguration
>
BitrateObserverConfiguration
;
typedef
std
:
:
list
<
BitrateObserverConfiguration
>
BitrateObserverConfList
;
typedef
std
:
:
multimap
<
uint32_t
ObserverConfiguration
>
ObserverSortingMap
;
typedef
std
:
:
map
<
BitrateObserver
*
int
>
ObserverBitrateMap
;
BitrateObserverConfList
:
:
iterator
FindObserverConfigurationPair
(
const
BitrateObserver
*
observer
)
EXCLUSIVE_LOCKS_REQUIRED
(
crit_sect_
)
;
ObserverBitrateMap
AllocateBitrates
(
)
EXCLUSIVE_LOCKS_REQUIRED
(
crit_sect_
)
;
ObserverBitrateMap
NormalRateAllocation
(
uint32_t
bitrate
uint32_t
sum_min_bitrates
)
EXCLUSIVE_LOCKS_REQUIRED
(
crit_sect_
)
;
ObserverBitrateMap
LowRateAllocation
(
uint32_t
bitrate
)
EXCLUSIVE_LOCKS_REQUIRED
(
crit_sect_
)
;
rtc
:
:
scoped_ptr
<
CriticalSectionWrapper
>
crit_sect_
;
BitrateObserverConfList
bitrate_observers_
GUARDED_BY
(
crit_sect_
)
;
bool
bitrate_observers_modified_
GUARDED_BY
(
crit_sect_
)
;
bool
enforce_min_bitrate_
GUARDED_BY
(
crit_sect_
)
;
uint32_t
last_bitrate_bps_
GUARDED_BY
(
crit_sect_
)
;
uint8_t
last_fraction_loss_
GUARDED_BY
(
crit_sect_
)
;
int64_t
last_rtt_
GUARDED_BY
(
crit_sect_
)
;
}
;
}
#
endif
