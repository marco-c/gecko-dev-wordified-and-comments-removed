#
ifndef
WEBRTC_MODULES_AUDIO_DEVICE_ANDROID_OPENSLES_RECORDER_H_
#
define
WEBRTC_MODULES_AUDIO_DEVICE_ANDROID_OPENSLES_RECORDER_H_
#
include
<
SLES
/
OpenSLES
.
h
>
#
include
<
SLES
/
OpenSLES_Android
.
h
>
#
include
<
SLES
/
OpenSLES_AndroidConfiguration
.
h
>
#
include
<
memory
>
#
include
"
webrtc
/
base
/
thread_checker
.
h
"
#
include
"
webrtc
/
modules
/
audio_device
/
android
/
audio_common
.
h
"
#
include
"
webrtc
/
modules
/
audio_device
/
android
/
audio_manager
.
h
"
#
include
"
webrtc
/
modules
/
audio_device
/
android
/
opensles_common
.
h
"
#
include
"
webrtc
/
modules
/
audio_device
/
include
/
audio_device_defines
.
h
"
#
include
"
webrtc
/
modules
/
audio_device
/
audio_device_generic
.
h
"
#
include
"
webrtc
/
modules
/
utility
/
include
/
helpers_android
.
h
"
namespace
webrtc
{
class
FineAudioBuffer
;
class
OpenSLESRecorder
{
public
:
static
const
int
kNumOfOpenSLESBuffers
=
2
;
explicit
OpenSLESRecorder
(
AudioManager
*
audio_manager
)
;
~
OpenSLESRecorder
(
)
;
int
Init
(
)
;
int
Terminate
(
)
;
int
InitRecording
(
)
;
bool
RecordingIsInitialized
(
)
const
{
return
initialized_
;
}
int
StartRecording
(
)
;
int
StopRecording
(
)
;
bool
Recording
(
)
const
{
return
recording_
;
}
void
AttachAudioBuffer
(
AudioDeviceBuffer
*
audio_buffer
)
;
int
EnableBuiltInAEC
(
bool
enable
)
;
int
EnableBuiltInAGC
(
bool
enable
)
;
int
EnableBuiltInNS
(
bool
enable
)
;
private
:
bool
ObtainEngineInterface
(
)
;
bool
CreateAudioRecorder
(
)
;
void
DestroyAudioRecorder
(
)
;
void
AllocateDataBuffers
(
)
;
static
void
SimpleBufferQueueCallback
(
SLAndroidSimpleBufferQueueItf
caller
void
*
context
)
;
void
ReadBufferQueue
(
)
;
bool
EnqueueAudioBuffer
(
)
;
SLuint32
GetRecordState
(
)
const
;
SLAndroidSimpleBufferQueueState
GetBufferQueueState
(
)
const
;
SLuint32
GetBufferCount
(
)
;
void
LogBufferState
(
)
const
;
rtc
:
:
ThreadChecker
thread_checker_
;
rtc
:
:
ThreadChecker
thread_checker_opensles_
;
AudioManager
*
const
audio_manager_
;
const
AudioParameters
audio_parameters_
;
AudioDeviceBuffer
*
audio_device_buffer_
;
SLDataFormat_PCM
pcm_format_
;
bool
initialized_
;
bool
recording_
;
SLEngineItf
engine_
;
webrtc
:
:
ScopedSLObjectItf
recorder_object_
;
SLRecordItf
recorder_
;
SLAndroidSimpleBufferQueueItf
simple_buffer_queue_
;
std
:
:
unique_ptr
<
FineAudioBuffer
>
fine_audio_buffer_
;
std
:
:
unique_ptr
<
std
:
:
unique_ptr
<
SLint8
[
]
>
[
]
>
audio_buffers_
;
int
buffer_index_
;
uint32_t
last_rec_time_
;
void
*
opensles_lib_
;
typedef
SLresult
(
*
slCreateEngine_t
)
(
SLObjectItf
*
SLuint32
const
SLEngineOption
*
SLuint32
const
SLInterfaceID
*
const
SLboolean
*
)
;
slCreateEngine_t
slCreateEngine_
;
SLInterfaceID
SL_IID_ENGINE_
;
SLInterfaceID
SL_IID_ANDROIDCONFIGURATION_
;
SLInterfaceID
SL_IID_ANDROIDSIMPLEBUFFERQUEUE_
;
SLInterfaceID
SL_IID_RECORD_
;
}
;
}
#
endif
