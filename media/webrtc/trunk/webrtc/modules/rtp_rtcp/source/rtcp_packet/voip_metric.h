#
ifndef
MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_VOIP_METRIC_H_
#
define
MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_VOIP_METRIC_H_
#
include
"
modules
/
include
/
module_common_types
.
h
"
#
include
"
rtc_base
/
basictypes
.
h
"
namespace
webrtc
{
namespace
rtcp
{
class
VoipMetric
{
public
:
static
const
uint8_t
kBlockType
=
7
;
static
const
uint16_t
kBlockLength
=
8
;
static
const
size_t
kLength
=
4
*
(
kBlockLength
+
1
)
;
VoipMetric
(
)
;
VoipMetric
(
const
VoipMetric
&
)
=
default
;
~
VoipMetric
(
)
{
}
VoipMetric
&
operator
=
(
const
VoipMetric
&
)
=
default
;
void
Parse
(
const
uint8_t
*
buffer
)
;
void
Create
(
uint8_t
*
buffer
)
const
;
void
SetMediaSsrc
(
uint32_t
ssrc
)
{
ssrc_
=
ssrc
;
}
void
SetVoipMetric
(
const
RTCPVoIPMetric
&
voip_metric
)
{
voip_metric_
=
voip_metric
;
}
uint32_t
ssrc
(
)
const
{
return
ssrc_
;
}
const
RTCPVoIPMetric
&
voip_metric
(
)
const
{
return
voip_metric_
;
}
private
:
uint32_t
ssrc_
;
RTCPVoIPMetric
voip_metric_
;
}
;
}
}
#
endif
