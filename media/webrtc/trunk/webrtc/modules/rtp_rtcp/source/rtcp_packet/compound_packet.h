#
ifndef
WEBRTC_MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_COMPOUND_PACKET_H_
#
define
WEBRTC_MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_COMPOUND_PACKET_H_
#
include
<
vector
>
#
include
"
webrtc
/
base
/
basictypes
.
h
"
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
#
include
"
webrtc
/
modules
/
rtp_rtcp
/
source
/
rtcp_packet
.
h
"
namespace
webrtc
{
namespace
rtcp
{
class
CompoundPacket
:
public
RtcpPacket
{
public
:
CompoundPacket
(
)
{
}
~
CompoundPacket
(
)
override
{
}
void
Append
(
RtcpPacket
*
packet
)
;
size_t
BlockLength
(
)
const
override
;
bool
Create
(
uint8_t
*
packet
size_t
*
index
size_t
max_length
RtcpPacket
:
:
PacketReadyCallback
*
callback
)
const
override
;
protected
:
std
:
:
vector
<
RtcpPacket
*
>
appended_packets_
;
private
:
RTC_DISALLOW_COPY_AND_ASSIGN
(
CompoundPacket
)
;
}
;
}
}
#
endif
