#
include
"
webrtc
/
modules
/
rtp_rtcp
/
source
/
rtcp_packet
/
pli
.
h
"
#
include
"
webrtc
/
base
/
checks
.
h
"
#
include
"
webrtc
/
base
/
logging
.
h
"
using
webrtc
:
:
RTCPUtility
:
:
RtcpCommonHeader
;
namespace
webrtc
{
namespace
rtcp
{
bool
Pli
:
:
Parse
(
const
RtcpCommonHeader
&
header
const
uint8_t
*
payload
)
{
RTC_DCHECK
(
header
.
packet_type
=
=
kPacketType
)
;
RTC_DCHECK
(
header
.
count_or_format
=
=
kFeedbackMessageType
)
;
if
(
header
.
payload_size_bytes
<
kCommonFeedbackLength
)
{
LOG
(
LS_WARNING
)
<
<
"
Packet
is
too
small
to
be
a
valid
PLI
packet
"
;
return
false
;
}
ParseCommonFeedback
(
payload
)
;
return
true
;
}
bool
Pli
:
:
Create
(
uint8_t
*
packet
size_t
*
index
size_t
max_length
RtcpPacket
:
:
PacketReadyCallback
*
callback
)
const
{
while
(
*
index
+
BlockLength
(
)
>
max_length
)
{
if
(
!
OnBufferFull
(
packet
index
callback
)
)
return
false
;
}
CreateHeader
(
kFeedbackMessageType
kPacketType
HeaderLength
(
)
packet
index
)
;
CreateCommonFeedback
(
packet
+
*
index
)
;
*
index
+
=
kCommonFeedbackLength
;
return
true
;
}
}
}
