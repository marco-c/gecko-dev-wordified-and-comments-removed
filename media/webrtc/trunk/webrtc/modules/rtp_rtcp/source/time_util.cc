#
include
"
webrtc
/
modules
/
rtp_rtcp
/
source
/
time_util
.
h
"
#
include
<
algorithm
>
namespace
webrtc
{
namespace
{
inline
int64_t
DivideRoundToNearest
(
int64_t
x
uint32_t
y
)
{
return
(
x
+
y
/
2
)
/
y
;
}
}
int64_t
CompactNtpRttToMs
(
uint32_t
compact_ntp_interval
)
{
if
(
compact_ntp_interval
>
0x80000000
)
return
1
;
int64_t
value
=
static_cast
<
int64_t
>
(
compact_ntp_interval
)
;
int64_t
ms
=
DivideRoundToNearest
(
value
*
1000
1
<
<
16
)
;
return
std
:
:
max
<
int64_t
>
(
ms
1
)
;
}
}
