#
ifndef
WEBRTC_MODULES_RTP_RTCP_SOURCE_SSRC_DATABASE_H_
#
define
WEBRTC_MODULES_RTP_RTCP_SOURCE_SSRC_DATABASE_H_
#
include
<
set
>
#
include
"
webrtc
/
base
/
random
.
h
"
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
system_wrappers
/
include
/
static_instance
.
h
"
#
include
"
webrtc
/
typedefs
.
h
"
namespace
webrtc
{
class
CriticalSectionWrapper
;
class
SSRCDatabase
{
public
:
static
SSRCDatabase
*
GetSSRCDatabase
(
)
;
static
void
ReturnSSRCDatabase
(
)
;
uint32_t
CreateSSRC
(
)
;
void
RegisterSSRC
(
uint32_t
ssrc
)
;
void
ReturnSSRC
(
uint32_t
ssrc
)
;
protected
:
SSRCDatabase
(
)
;
virtual
~
SSRCDatabase
(
)
;
static
SSRCDatabase
*
CreateInstance
(
)
{
return
new
SSRCDatabase
(
)
;
}
private
:
friend
SSRCDatabase
*
GetStaticInstance
<
SSRCDatabase
>
(
CountOperation
count_operation
)
;
rtc
:
:
scoped_ptr
<
CriticalSectionWrapper
>
crit_
;
Random
random_
GUARDED_BY
(
crit_
)
;
std
:
:
set
<
uint32_t
>
ssrcs_
GUARDED_BY
(
crit_
)
;
}
;
}
#
endif
