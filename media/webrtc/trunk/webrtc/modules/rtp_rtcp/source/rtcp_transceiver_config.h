#
ifndef
MODULES_RTP_RTCP_SOURCE_RTCP_TRANSCEIVER_CONFIG_H_
#
define
MODULES_RTP_RTCP_SOURCE_RTCP_TRANSCEIVER_CONFIG_H_
#
include
<
string
>
#
include
"
modules
/
rtp_rtcp
/
include
/
rtp_rtcp_defines
.
h
"
#
include
"
rtc_base
/
task_queue
.
h
"
namespace
webrtc
{
class
ReceiveStatisticsProvider
;
class
Transport
;
struct
RtcpTransceiverConfig
{
RtcpTransceiverConfig
(
)
;
RtcpTransceiverConfig
(
const
RtcpTransceiverConfig
&
)
;
RtcpTransceiverConfig
&
operator
=
(
const
RtcpTransceiverConfig
&
)
;
~
RtcpTransceiverConfig
(
)
;
bool
Validate
(
)
const
;
std
:
:
string
debug_id
;
uint32_t
feedback_ssrc
=
1
;
std
:
:
string
cname
;
size_t
max_packet_size
=
1200
;
Transport
*
outgoing_transport
=
nullptr
;
rtc
:
:
TaskQueue
*
task_queue
=
nullptr
;
ReceiveStatisticsProvider
*
receive_statistics
=
nullptr
;
RtcpMode
rtcp_mode
=
RtcpMode
:
:
kCompound
;
int
initial_report_delay_ms
=
500
;
int
report_period_ms
=
1000
;
bool
schedule_periodic_compound_packets
=
true
;
}
;
}
#
endif
