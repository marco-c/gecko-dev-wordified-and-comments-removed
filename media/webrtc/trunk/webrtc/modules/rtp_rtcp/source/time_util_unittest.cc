#
include
"
webrtc
/
modules
/
rtp_rtcp
/
source
/
time_util
.
h
"
#
include
"
webrtc
/
test
/
gtest
.
h
"
namespace
webrtc
{
TEST
(
TimeUtilTest
CompactNtp
)
{
const
uint32_t
kNtpSec
=
0x12345678
;
const
uint32_t
kNtpFrac
=
0x23456789
;
const
NtpTime
kNtp
(
kNtpSec
kNtpFrac
)
;
const
uint32_t
kNtpMid
=
0x56782345
;
EXPECT_EQ
(
kNtpMid
CompactNtp
(
kNtp
)
)
;
}
TEST
(
TimeUtilTest
CompactNtpRttToMs
)
{
const
NtpTime
ntp1
(
0x12345
0x23456
)
;
const
NtpTime
ntp2
(
0x12654
0x64335
)
;
int64_t
ms_diff
=
ntp2
.
ToMs
(
)
-
ntp1
.
ToMs
(
)
;
uint32_t
ntp_diff
=
CompactNtp
(
ntp2
)
-
CompactNtp
(
ntp1
)
;
int64_t
ntp_to_ms_diff
=
CompactNtpRttToMs
(
ntp_diff
)
;
EXPECT_NEAR
(
ms_diff
ntp_to_ms_diff
1
)
;
}
TEST
(
TimeUtilTest
CompactNtpRttToMsWithWrap
)
{
const
NtpTime
ntp1
(
0x1ffff
0x23456
)
;
const
NtpTime
ntp2
(
0x20000
0x64335
)
;
int64_t
ms_diff
=
ntp2
.
ToMs
(
)
-
ntp1
.
ToMs
(
)
;
ASSERT_GT
(
ntp2
.
ToMs
(
)
ntp1
.
ToMs
(
)
)
;
ASSERT_LT
(
CompactNtp
(
ntp2
)
CompactNtp
(
ntp1
)
)
;
uint32_t
ntp_diff
=
CompactNtp
(
ntp2
)
-
CompactNtp
(
ntp1
)
;
int64_t
ntp_to_ms_diff
=
CompactNtpRttToMs
(
ntp_diff
)
;
EXPECT_NEAR
(
ms_diff
ntp_to_ms_diff
1
)
;
}
TEST
(
TimeUtilTest
CompactNtpRttToMsLarge
)
{
const
NtpTime
ntp1
(
0x10000
0x00006
)
;
const
NtpTime
ntp2
(
0x17fff
0xffff5
)
;
int64_t
ms_diff
=
ntp2
.
ToMs
(
)
-
ntp1
.
ToMs
(
)
;
ASSERT_NEAR
(
ms_diff
(
(
1
<
<
15
)
-
1
)
*
1000
1
)
;
uint32_t
ntp_diff
=
CompactNtp
(
ntp2
)
-
CompactNtp
(
ntp1
)
;
int64_t
ntp_to_ms_diff
=
CompactNtpRttToMs
(
ntp_diff
)
;
EXPECT_NEAR
(
ms_diff
ntp_to_ms_diff
1
)
;
}
TEST
(
TimeUtilTest
CompactNtpRttToMsNegative
)
{
const
NtpTime
ntp1
(
0x20000
0x23456
)
;
const
NtpTime
ntp2
(
0x1ffff
0x64335
)
;
int64_t
ms_diff
=
ntp2
.
ToMs
(
)
-
ntp1
.
ToMs
(
)
;
ASSERT_GT
(
0
ms_diff
)
;
uint32_t
ntp_diff
=
CompactNtp
(
ntp2
)
-
CompactNtp
(
ntp1
)
;
int64_t
ntp_to_ms_diff
=
CompactNtpRttToMs
(
ntp_diff
)
;
EXPECT_EQ
(
1
ntp_to_ms_diff
)
;
}
}
