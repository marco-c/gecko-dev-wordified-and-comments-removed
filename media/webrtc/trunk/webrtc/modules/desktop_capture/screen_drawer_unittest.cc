#
include
"
webrtc
/
modules
/
desktop_capture
/
screen_drawer
.
h
"
#
include
<
stdint
.
h
>
#
include
"
webrtc
/
base
/
random
.
h
"
#
include
"
webrtc
/
base
/
timeutils
.
h
"
#
include
"
webrtc
/
system_wrappers
/
include
/
logging
.
h
"
#
include
"
webrtc
/
system_wrappers
/
include
/
sleep
.
h
"
#
include
"
webrtc
/
test
/
gtest
.
h
"
namespace
webrtc
{
TEST
(
ScreenDrawerTest
DISABLED_DrawRectangles
)
{
std
:
:
unique_ptr
<
ScreenDrawer
>
drawer
=
ScreenDrawer
:
:
Create
(
)
;
if
(
!
drawer
)
{
LOG
(
LS_WARNING
)
<
<
"
No
ScreenDrawer
implementation
for
current
platform
.
"
;
return
;
}
if
(
drawer
-
>
DrawableRegion
(
)
.
is_empty
(
)
)
{
LOG
(
LS_WARNING
)
<
<
"
ScreenDrawer
of
current
platform
does
not
provide
a
"
"
non
-
empty
DrawableRegion
(
)
.
"
;
return
;
}
DesktopRect
rect
=
drawer
-
>
DrawableRegion
(
)
;
Random
random
(
rtc
:
:
TimeMicros
(
)
)
;
for
(
int
i
=
0
;
i
<
100
;
i
+
+
)
{
int
left
=
random
.
Rand
(
rect
.
left
(
)
rect
.
right
(
)
-
2
)
;
int
top
=
random
.
Rand
(
rect
.
top
(
)
rect
.
bottom
(
)
-
2
)
;
drawer
-
>
DrawRectangle
(
DesktopRect
:
:
MakeLTRB
(
left
top
random
.
Rand
(
left
+
1
rect
.
right
(
)
)
random
.
Rand
(
top
+
1
rect
.
bottom
(
)
)
)
RgbaColor
(
random
.
Rand
<
uint8_t
>
(
)
random
.
Rand
<
uint8_t
>
(
)
random
.
Rand
<
uint8_t
>
(
)
random
.
Rand
<
uint8_t
>
(
)
)
)
;
if
(
i
=
=
50
)
{
SleepMs
(
10000
)
;
}
}
SleepMs
(
10000
)
;
}
}
