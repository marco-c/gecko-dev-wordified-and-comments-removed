#
ifndef
WEBRTC_MODULES_DESKTOP_CAPTURE_DESKTOP_CAPTURER_DIFFER_WRAPPER_H_
#
define
WEBRTC_MODULES_DESKTOP_CAPTURE_DESKTOP_CAPTURER_DIFFER_WRAPPER_H_
#
include
<
memory
>
#
include
"
webrtc
/
modules
/
desktop_capture
/
desktop_capturer
.
h
"
#
include
"
webrtc
/
modules
/
desktop_capture
/
shared_desktop_frame
.
h
"
namespace
webrtc
{
class
DesktopCapturerDifferWrapper
:
public
DesktopCapturer
public
DesktopCapturer
:
:
Callback
{
public
:
explicit
DesktopCapturerDifferWrapper
(
std
:
:
unique_ptr
<
DesktopCapturer
>
base_capturer
)
;
~
DesktopCapturerDifferWrapper
(
)
override
;
void
Start
(
DesktopCapturer
:
:
Callback
*
callback
)
override
;
void
Stop
(
)
override
;
void
SetSharedMemoryFactory
(
std
:
:
unique_ptr
<
SharedMemoryFactory
>
shared_memory_factory
)
override
;
void
CaptureFrame
(
)
override
;
void
SetExcludedWindow
(
WindowId
window
)
override
;
bool
GetSourceList
(
SourceList
*
screens
)
override
;
bool
SelectSource
(
SourceId
id
)
override
;
bool
FocusOnSelectedSource
(
)
override
;
private
:
void
OnCaptureResult
(
Result
result
std
:
:
unique_ptr
<
DesktopFrame
>
frame
)
override
;
const
std
:
:
unique_ptr
<
DesktopCapturer
>
base_capturer_
;
DesktopCapturer
:
:
Callback
*
callback_
;
std
:
:
unique_ptr
<
SharedDesktopFrame
>
last_frame_
;
}
;
}
#
endif
