#
include
"
modules
/
desktop_capture
/
win
/
desktop_device_info_win
.
h
"
#
include
"
modules
/
desktop_capture
/
win
/
screen_capture_utils
.
h
"
#
include
"
modules
/
desktop_capture
/
win
/
win_shared
.
h
"
#
include
<
inttypes
.
h
>
#
include
<
stdio
.
h
>
#
include
<
VersionHelpers
.
h
>
WINBASEAPI
BOOL
WINAPI
QueryFullProcessImageName
(
HANDLE
hProcess
DWORD
dwFlags
LPWSTR
lpExeName
PDWORD
lpdwSize
)
;
DWORD
WINAPI
GetProcessImageFileName
(
HANDLE
hProcess
LPTSTR
lpImageFileName
DWORD
nSize
)
;
namespace
webrtc
{
DesktopDeviceInfo
*
DesktopDeviceInfoImpl
:
:
Create
(
)
{
DesktopDeviceInfoWin
*
pDesktopDeviceInfo
=
new
DesktopDeviceInfoWin
(
)
;
if
(
pDesktopDeviceInfo
&
&
pDesktopDeviceInfo
-
>
Init
(
)
!
=
0
)
{
delete
pDesktopDeviceInfo
;
pDesktopDeviceInfo
=
nullptr
;
}
return
pDesktopDeviceInfo
;
}
DesktopDeviceInfoWin
:
:
DesktopDeviceInfoWin
(
)
{
}
DesktopDeviceInfoWin
:
:
~
DesktopDeviceInfoWin
(
)
{
}
void
DesktopDeviceInfoWin
:
:
MultiMonitorScreenshare
(
)
{
#
if
!
defined
(
MULTI_MONITOR_SCREENSHARE
)
DesktopDisplayDevice
*
desktop_device_info
=
new
DesktopDisplayDevice
;
if
(
desktop_device_info
)
{
desktop_device_info
-
>
setScreenId
(
webrtc
:
:
kFullDesktopScreenId
)
;
desktop_device_info
-
>
setDeviceName
(
"
Primary
Monitor
"
)
;
char
idStr
[
64
]
;
_snprintf_s
(
idStr
sizeof
(
idStr
)
sizeof
(
idStr
)
-
1
"
%
"
PRIdPTR
desktop_device_info
-
>
getScreenId
(
)
)
;
desktop_device_info
-
>
setUniqueIdName
(
idStr
)
;
desktop_display_list_
[
desktop_device_info
-
>
getScreenId
(
)
]
=
desktop_device_info
;
}
#
else
DesktopCapturer
:
:
SourceList
screens
;
webrtc
:
:
GetScreenList
(
&
screens
)
;
auto
num_of_screens
=
screens
.
size
(
)
;
for
(
decltype
(
num_of_screens
)
i
=
0
;
i
<
num_of_screens
;
+
+
i
)
{
DesktopDisplayDevice
*
desktop_device_info
=
new
DesktopDisplayDevice
;
if
(
desktop_device_info
)
{
desktop_device_info
-
>
setScreenId
(
screens
[
i
]
.
id
)
;
if
(
1
>
=
num_of_screens
)
{
desktop_device_info
-
>
setDeviceName
(
"
Primary
Monitor
"
)
;
}
else
{
char
nameStr
[
64
]
;
_snprintf_s
(
nameStr
sizeof
(
nameStr
)
sizeof
(
nameStr
)
-
1
"
Screen
%
"
PRIdPTR
i
+
1
)
;
desktop_device_info
-
>
setDeviceName
(
nameStr
)
;
}
char
idStr
[
64
]
;
_snprintf_s
(
idStr
sizeof
(
idStr
)
sizeof
(
idStr
)
-
1
"
%
"
PRIdPTR
desktop_device_info
-
>
getScreenId
(
)
)
;
desktop_device_info
-
>
setUniqueIdName
(
idStr
)
;
desktop_display_list_
[
desktop_device_info
-
>
getScreenId
(
)
]
=
desktop_device_info
;
}
}
#
endif
}
void
DesktopDeviceInfoWin
:
:
InitializeScreenList
(
)
{
MultiMonitorScreenshare
(
)
;
}
}
