#
ifndef
WEBRTC_VIDEO_FRAME_H_
#
define
WEBRTC_VIDEO_FRAME_H_
#
include
"
webrtc
/
api
/
video
/
video_frame
.
h
"
#
include
"
webrtc
/
api
/
video
/
i420_buffer
.
h
"
#
include
"
webrtc
/
common_types
.
h
"
#
include
"
webrtc
/
typedefs
.
h
"
namespace
webrtc
{
class
EncodedImage
{
public
:
static
const
size_t
kBufferPaddingBytesH264
;
static
size_t
GetBufferPaddingBytes
(
VideoCodecType
codec_type
)
;
EncodedImage
(
)
:
EncodedImage
(
nullptr
0
0
)
{
}
EncodedImage
(
uint8_t
*
buffer
size_t
length
size_t
size
)
:
_buffer
(
buffer
)
_length
(
length
)
_size
(
size
)
{
}
struct
AdaptReason
{
AdaptReason
(
)
:
bw_resolutions_disabled
(
-
1
)
{
}
int
bw_resolutions_disabled
;
}
;
uint32_t
_encodedWidth
=
0
;
uint32_t
_encodedHeight
=
0
;
uint32_t
_timeStamp
=
0
;
int64_t
ntp_time_ms_
=
0
;
int64_t
capture_time_ms_
=
0
;
FrameType
_frameType
=
kVideoFrameDelta
;
uint8_t
*
_buffer
;
size_t
_length
;
size_t
_size
;
VideoRotation
rotation_
=
kVideoRotation_0
;
bool
_completeFrame
=
false
;
AdaptReason
adapt_reason_
;
int
qp_
=
-
1
;
PlayoutDelay
playout_delay_
=
{
-
1
-
1
}
;
}
;
}
#
endif
