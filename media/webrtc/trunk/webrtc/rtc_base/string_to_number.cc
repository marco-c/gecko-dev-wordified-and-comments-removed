#
include
<
cerrno
>
#
include
<
cstdlib
>
#
include
"
rtc_base
/
string_to_number
.
h
"
namespace
rtc
{
namespace
string_to_number_internal
{
rtc
:
:
Optional
<
signed_type
>
ParseSigned
(
const
char
*
str
int
base
)
{
RTC_DCHECK
(
str
)
;
if
(
isdigit
(
str
[
0
]
)
|
|
str
[
0
]
=
=
'
-
'
)
{
char
*
end
=
nullptr
;
errno
=
0
;
const
signed_type
value
=
std
:
:
strtoll
(
str
&
end
base
)
;
if
(
end
&
&
*
end
=
=
'
\
0
'
&
&
errno
=
=
0
)
{
return
value
;
}
}
return
rtc
:
:
nullopt
;
}
rtc
:
:
Optional
<
unsigned_type
>
ParseUnsigned
(
const
char
*
str
int
base
)
{
RTC_DCHECK
(
str
)
;
if
(
isdigit
(
str
[
0
]
)
|
|
str
[
0
]
=
=
'
-
'
)
{
const
bool
is_negative
=
str
[
0
]
=
=
'
-
'
;
char
*
end
=
nullptr
;
errno
=
0
;
const
unsigned_type
value
=
std
:
:
strtoull
(
str
&
end
base
)
;
if
(
end
&
&
*
end
=
=
'
\
0
'
&
&
errno
=
=
0
&
&
(
value
=
=
0
|
|
!
is_negative
)
)
{
return
value
;
}
}
return
rtc
:
:
nullopt
;
}
}
}
