#
ifndef
WEBRTC_BASE_RTCCERTIFICATE_H_
#
define
WEBRTC_BASE_RTCCERTIFICATE_H_
#
include
"
webrtc
/
base
/
basictypes
.
h
"
#
include
"
webrtc
/
base
/
refcount
.
h
"
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
base
/
scoped_ref_ptr
.
h
"
#
include
"
webrtc
/
base
/
sslidentity
.
h
"
namespace
rtc
{
class
RTCCertificate
:
public
RefCountInterface
{
public
:
static
scoped_refptr
<
RTCCertificate
>
Create
(
scoped_ptr
<
SSLIdentity
>
identity
)
;
uint64_t
Expires
(
)
const
;
bool
HasExpired
(
uint64_t
now
)
const
;
const
SSLCertificate
&
ssl_certificate
(
)
const
;
SSLIdentity
*
identity
(
)
const
{
return
identity_
.
get
(
)
;
}
protected
:
explicit
RTCCertificate
(
SSLIdentity
*
identity
)
;
~
RTCCertificate
(
)
override
;
private
:
scoped_ptr
<
SSLIdentity
>
identity_
;
}
;
}
#
endif
