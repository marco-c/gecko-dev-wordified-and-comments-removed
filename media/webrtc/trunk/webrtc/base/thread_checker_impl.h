#
ifndef
WEBRTC_BASE_THREAD_CHECKER_IMPL_H_
#
define
WEBRTC_BASE_THREAD_CHECKER_IMPL_H_
#
if
defined
(
WEBRTC_POSIX
)
#
include
<
pthread
.
h
>
#
include
<
unistd
.
h
>
#
endif
#
include
"
webrtc
/
base
/
criticalsection
.
h
"
namespace
rtc
{
#
if
defined
(
WEBRTC_WIN
)
typedef
DWORD
PlatformThreadId
;
typedef
DWORD
PlatformThreadRef
;
#
elif
defined
(
WEBRTC_POSIX
)
typedef
pid_t
PlatformThreadId
;
typedef
pthread_t
PlatformThreadRef
;
#
endif
PlatformThreadId
CurrentThreadId
(
)
;
PlatformThreadRef
CurrentThreadRef
(
)
;
bool
IsThreadRefEqual
(
const
PlatformThreadRef
&
a
const
PlatformThreadRef
&
b
)
;
class
ThreadCheckerImpl
{
public
:
ThreadCheckerImpl
(
)
;
~
ThreadCheckerImpl
(
)
;
bool
CalledOnValidThread
(
)
const
;
void
DetachFromThread
(
)
;
private
:
mutable
CriticalSection
lock_
;
mutable
PlatformThreadRef
valid_thread_
;
}
;
}
#
endif
