#
ifndef
WEBRTC_BASE_SEQUENCED_TASK_CHECKER_H_
#
define
WEBRTC_BASE_SEQUENCED_TASK_CHECKER_H_
#
define
ENABLE_SEQUENCED_TASK_CHECKER
RTC_DCHECK_IS_ON
#
include
"
webrtc
/
base
/
checks
.
h
"
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
#
include
"
webrtc
/
base
/
thread_annotations
.
h
"
#
include
"
webrtc
/
base
/
sequenced_task_checker_impl
.
h
"
namespace
rtc
{
class
SequencedTaskCheckerDoNothing
{
public
:
bool
CalledSequentially
(
)
const
{
return
true
;
}
void
Detach
(
)
{
}
}
;
#
if
ENABLE_SEQUENCED_TASK_CHECKER
class
LOCKABLE
SequencedTaskChecker
:
public
SequencedTaskCheckerImpl
{
}
;
#
else
class
LOCKABLE
SequencedTaskChecker
:
public
SequencedTaskCheckerDoNothing
{
}
;
#
endif
namespace
internal
{
class
SCOPED_LOCKABLE
SequencedTaskCheckerScope
{
public
:
explicit
SequencedTaskCheckerScope
(
const
SequencedTaskChecker
*
checker
)
EXCLUSIVE_LOCK_FUNCTION
(
checker
)
;
~
SequencedTaskCheckerScope
(
)
UNLOCK_FUNCTION
(
)
;
}
;
}
#
define
RTC_DCHECK_CALLED_SEQUENTIALLY
(
x
)
\
rtc
:
:
internal
:
:
SequencedTaskCheckerScope
checker
(
x
)
#
undef
ENABLE_SEQUENCED_TASK_CHECKER
}
#
endif
