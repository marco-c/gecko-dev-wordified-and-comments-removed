#
if
HAVE_CONFIG_H
#
include
"
config
.
h
"
#
endif
#
include
"
webrtc
/
base
/
ssladapter
.
h
"
#
include
"
webrtc
/
base
/
sslconfig
.
h
"
#
if
SSL_USE_OPENSSL
#
include
"
openssladapter
.
h
"
#
endif
namespace
rtc
{
SSLAdapter
*
SSLAdapter
:
:
Create
(
AsyncSocket
*
socket
)
{
#
if
SSL_USE_OPENSSL
return
new
OpenSSLAdapter
(
socket
)
;
#
else
delete
socket
;
return
NULL
;
#
endif
}
#
if
SSL_USE_OPENSSL
bool
InitializeSSL
(
VerificationCallback
callback
)
{
return
OpenSSLAdapter
:
:
InitializeSSL
(
callback
)
;
}
bool
InitializeSSLThread
(
)
{
return
OpenSSLAdapter
:
:
InitializeSSLThread
(
)
;
}
bool
CleanupSSL
(
)
{
return
OpenSSLAdapter
:
:
CleanupSSL
(
)
;
}
#
else
bool
InitializeSSL
(
VerificationCallback
callback
)
{
return
true
;
}
bool
InitializeSSLThread
(
)
{
return
true
;
}
bool
CleanupSSL
(
)
{
return
true
;
}
#
endif
}
