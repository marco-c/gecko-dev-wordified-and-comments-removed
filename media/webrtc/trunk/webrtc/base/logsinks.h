#
ifndef
WEBRTC_BASE_FILE_ROTATING_LOG_SINK_H_
#
define
WEBRTC_BASE_FILE_ROTATING_LOG_SINK_H_
#
include
<
string
>
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
#
include
"
webrtc
/
base
/
filerotatingstream
.
h
"
#
include
"
webrtc
/
base
/
logging
.
h
"
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
namespace
rtc
{
class
FileRotatingLogSink
:
public
LogSink
{
public
:
FileRotatingLogSink
(
const
std
:
:
string
&
log_dir_path
const
std
:
:
string
&
log_prefix
size_t
max_log_size
size_t
num_log_files
)
;
~
FileRotatingLogSink
(
)
override
;
void
OnLogMessage
(
const
std
:
:
string
&
message
)
override
;
virtual
bool
Init
(
)
;
bool
DisableBuffering
(
)
;
protected
:
explicit
FileRotatingLogSink
(
FileRotatingStream
*
stream
)
;
private
:
scoped_ptr
<
FileRotatingStream
>
stream_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
FileRotatingLogSink
)
;
}
;
class
CallSessionFileRotatingLogSink
:
public
FileRotatingLogSink
{
public
:
CallSessionFileRotatingLogSink
(
const
std
:
:
string
&
log_dir_path
size_t
max_total_log_size
)
;
~
CallSessionFileRotatingLogSink
(
)
override
;
private
:
RTC_DISALLOW_COPY_AND_ASSIGN
(
CallSessionFileRotatingLogSink
)
;
}
;
}
#
endif
