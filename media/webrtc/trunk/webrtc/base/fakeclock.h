#
ifndef
WEBRTC_BASE_FAKECLOCK_H_
#
define
WEBRTC_BASE_FAKECLOCK_H_
#
include
"
webrtc
/
base
/
criticalsection
.
h
"
#
include
"
webrtc
/
base
/
timedelta
.
h
"
#
include
"
webrtc
/
base
/
timeutils
.
h
"
namespace
rtc
{
class
FakeClock
:
public
ClockInterface
{
public
:
~
FakeClock
(
)
override
{
}
int64_t
TimeNanos
(
)
const
override
;
void
SetTimeNanos
(
int64_t
nanos
)
;
void
SetTimeMicros
(
int64_t
micros
)
{
SetTimeNanos
(
kNumNanosecsPerMicrosec
*
micros
)
;
}
void
AdvanceTime
(
TimeDelta
delta
)
;
void
AdvanceTimeMicros
(
int64_t
micros
)
{
AdvanceTime
(
rtc
:
:
TimeDelta
:
:
FromMicroseconds
(
micros
)
)
;
}
private
:
CriticalSection
lock_
;
int64_t
time_
GUARDED_BY
(
lock_
)
=
0
;
}
;
class
ScopedFakeClock
:
public
FakeClock
{
public
:
ScopedFakeClock
(
)
;
~
ScopedFakeClock
(
)
override
;
private
:
ClockInterface
*
prev_clock_
;
}
;
}
#
endif
