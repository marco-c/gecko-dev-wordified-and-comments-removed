#
ifndef
WEBRTC_BASE_REFCOUNT_H_
#
define
WEBRTC_BASE_REFCOUNT_H_
#
include
<
string
.
h
>
#
include
"
webrtc
/
base
/
atomicops
.
h
"
namespace
rtc
{
class
RefCountInterface
{
public
:
virtual
int
AddRef
(
)
const
=
0
;
virtual
int
Release
(
)
const
=
0
;
protected
:
virtual
~
RefCountInterface
(
)
{
}
}
;
template
<
class
T
>
class
RefCountedObject
:
public
T
{
public
:
RefCountedObject
(
)
:
ref_count_
(
0
)
{
}
template
<
typename
P
>
explicit
RefCountedObject
(
P
p
)
:
T
(
p
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
>
RefCountedObject
(
P1
p1
P2
p2
)
:
T
(
p1
p2
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
typename
P3
>
RefCountedObject
(
P1
p1
P2
p2
P3
p3
)
:
T
(
p1
p2
p3
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
typename
P3
typename
P4
>
RefCountedObject
(
P1
p1
P2
p2
P3
p3
P4
p4
)
:
T
(
p1
p2
p3
p4
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
typename
P3
typename
P4
typename
P5
>
RefCountedObject
(
P1
p1
P2
p2
P3
p3
P4
p4
P5
p5
)
:
T
(
p1
p2
p3
p4
p5
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
typename
P3
typename
P4
typename
P5
typename
P6
>
RefCountedObject
(
P1
p1
P2
p2
P3
p3
P4
p4
P5
p5
P6
p6
)
:
T
(
p1
p2
p3
p4
p5
p6
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
typename
P3
typename
P4
typename
P5
typename
P6
typename
P7
>
RefCountedObject
(
P1
p1
P2
p2
P3
p3
P4
p4
P5
p5
P6
p6
P7
p7
)
:
T
(
p1
p2
p3
p4
p5
p6
p7
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
typename
P3
typename
P4
typename
P5
typename
P6
typename
P7
typename
P8
>
RefCountedObject
(
P1
p1
P2
p2
P3
p3
P4
p4
P5
p5
P6
p6
P7
p7
P8
p8
)
:
T
(
p1
p2
p3
p4
p5
p6
p7
p8
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
typename
P3
typename
P4
typename
P5
typename
P6
typename
P7
typename
P8
typename
P9
>
RefCountedObject
(
P1
p1
P2
p2
P3
p3
P4
p4
P5
p5
P6
p6
P7
p7
P8
p8
P9
p9
)
:
T
(
p1
p2
p3
p4
p5
p6
p7
p8
p9
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
typename
P3
typename
P4
typename
P5
typename
P6
typename
P7
typename
P8
typename
P9
typename
P10
>
RefCountedObject
(
P1
p1
P2
p2
P3
p3
P4
p4
P5
p5
P6
p6
P7
p7
P8
p8
P9
p9
P10
p10
)
:
T
(
p1
p2
p3
p4
p5
p6
p7
p8
p9
p10
)
ref_count_
(
0
)
{
}
template
<
typename
P1
typename
P2
typename
P3
typename
P4
typename
P5
typename
P6
typename
P7
typename
P8
typename
P9
typename
P10
typename
P11
>
RefCountedObject
(
P1
p1
P2
p2
P3
p3
P4
p4
P5
p5
P6
p6
P7
p7
P8
p8
P9
p9
P10
p10
P11
p11
)
:
T
(
p1
p2
p3
p4
p5
p6
p7
p8
p9
p10
p11
)
ref_count_
(
0
)
{
}
virtual
int
AddRef
(
)
const
{
return
AtomicOps
:
:
Increment
(
&
ref_count_
)
;
}
virtual
int
Release
(
)
const
{
int
count
=
AtomicOps
:
:
Decrement
(
&
ref_count_
)
;
if
(
!
count
)
{
delete
this
;
}
return
count
;
}
virtual
bool
HasOneRef
(
)
const
{
return
AtomicOps
:
:
AcquireLoad
(
&
ref_count_
)
=
=
1
;
}
protected
:
virtual
~
RefCountedObject
(
)
{
}
mutable
volatile
int
ref_count_
;
}
;
}
#
endif
