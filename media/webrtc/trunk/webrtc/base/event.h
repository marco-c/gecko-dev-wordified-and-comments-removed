#
ifndef
WEBRTC_BASE_EVENT_H__
#
define
WEBRTC_BASE_EVENT_H__
#
if
defined
(
WEBRTC_WIN
)
#
include
"
webrtc
/
base
/
win32
.
h
"
#
elif
defined
(
WEBRTC_POSIX
)
#
include
<
pthread
.
h
>
#
else
#
error
"
Must
define
either
WEBRTC_WIN
or
WEBRTC_POSIX
.
"
#
endif
#
include
"
webrtc
/
base
/
basictypes
.
h
"
namespace
rtc
{
class
Event
{
public
:
static
const
int
kForever
=
-
1
;
Event
(
bool
manual_reset
bool
initially_signaled
)
;
~
Event
(
)
;
void
Set
(
)
;
void
Reset
(
)
;
bool
Wait
(
int
milliseconds
)
;
private
:
#
if
defined
(
WEBRTC_WIN
)
HANDLE
event_handle_
;
#
elif
defined
(
WEBRTC_POSIX
)
pthread_mutex_t
event_mutex_
;
pthread_cond_t
event_cond_
;
const
bool
is_manual_reset_
;
bool
event_status_
;
#
endif
}
;
}
#
endif
