#
include
"
webrtc
/
base
/
rtccertificate
.
h
"
#
include
"
webrtc
/
base
/
checks
.
h
"
namespace
rtc
{
scoped_refptr
<
RTCCertificate
>
RTCCertificate
:
:
Create
(
scoped_ptr
<
SSLIdentity
>
identity
)
{
return
new
RefCountedObject
<
RTCCertificate
>
(
identity
.
release
(
)
)
;
}
RTCCertificate
:
:
RTCCertificate
(
SSLIdentity
*
identity
)
:
identity_
(
identity
)
{
RTC_DCHECK
(
identity_
)
;
}
RTCCertificate
:
:
~
RTCCertificate
(
)
{
}
uint64_t
RTCCertificate
:
:
Expires
(
)
const
{
int64_t
expires
=
ssl_certificate
(
)
.
CertificateExpirationTime
(
)
;
if
(
expires
!
=
-
1
)
return
static_cast
<
uint64_t
>
(
expires
)
*
kNumMillisecsPerSec
;
return
0
;
}
bool
RTCCertificate
:
:
HasExpired
(
uint64_t
now
)
const
{
return
Expires
(
)
<
=
now
;
}
const
SSLCertificate
&
RTCCertificate
:
:
ssl_certificate
(
)
const
{
return
identity_
-
>
certificate
(
)
;
}
}
