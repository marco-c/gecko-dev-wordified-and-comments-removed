#
include
"
webrtc
/
test
/
histogram
.
h
"
#
include
<
map
>
#
include
"
webrtc
/
system_wrappers
/
interface
/
metrics
.
h
"
namespace
webrtc
{
namespace
{
std
:
:
map
<
std
:
:
string
int
>
histograms_
;
}
namespace
metrics
{
Histogram
*
HistogramFactoryGetCounts
(
const
std
:
:
string
&
name
int
min
int
max
int
bucket_count
)
{
return
NULL
;
}
Histogram
*
HistogramFactoryGetEnumeration
(
const
std
:
:
string
&
name
int
boundary
)
{
return
NULL
;
}
void
HistogramAdd
(
Histogram
*
histogram_pointer
const
std
:
:
string
&
name
int
sample
)
{
histograms_
[
name
]
=
sample
;
}
}
namespace
test
{
int
LastHistogramSample
(
const
std
:
:
string
&
name
)
{
std
:
:
map
<
std
:
:
string
int
>
:
:
const_iterator
it
=
histograms_
.
find
(
name
)
;
if
(
it
=
=
histograms_
.
end
(
)
)
{
return
-
1
;
}
return
it
-
>
second
;
}
}
}
