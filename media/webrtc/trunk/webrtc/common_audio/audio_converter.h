#
ifndef
WEBRTC_COMMON_AUDIO_AUDIO_CONVERTER_H_
#
define
WEBRTC_COMMON_AUDIO_AUDIO_CONVERTER_H_
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
namespace
webrtc
{
class
AudioConverter
{
public
:
static
rtc
:
:
scoped_ptr
<
AudioConverter
>
Create
(
int
src_channels
int
src_frames
int
dst_channels
int
dst_frames
)
;
virtual
~
AudioConverter
(
)
{
}
;
virtual
void
Convert
(
const
float
*
const
*
src
size_t
src_size
float
*
const
*
dst
size_t
dst_capacity
)
=
0
;
int
src_channels
(
)
const
{
return
src_channels_
;
}
int
src_frames
(
)
const
{
return
src_frames_
;
}
int
dst_channels
(
)
const
{
return
dst_channels_
;
}
int
dst_frames
(
)
const
{
return
dst_frames_
;
}
protected
:
AudioConverter
(
)
;
AudioConverter
(
int
src_channels
int
src_frames
int
dst_channels
int
dst_frames
)
;
void
CheckSizes
(
size_t
src_size
size_t
dst_capacity
)
const
;
private
:
const
int
src_channels_
;
const
int
src_frames_
;
const
int
dst_channels_
;
const
int
dst_frames_
;
DISALLOW_COPY_AND_ASSIGN
(
AudioConverter
)
;
}
;
}
#
endif
