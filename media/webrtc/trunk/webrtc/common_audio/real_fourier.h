#
ifndef
WEBRTC_COMMON_AUDIO_REAL_FOURIER_H_
#
define
WEBRTC_COMMON_AUDIO_REAL_FOURIER_H_
#
include
<
complex
>
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
system_wrappers
/
interface
/
aligned_malloc
.
h
"
namespace
webrtc
{
class
RealFourier
{
public
:
typedef
rtc
:
:
scoped_ptr
<
float
[
]
AlignedFreeDeleter
>
fft_real_scoper
;
typedef
rtc
:
:
scoped_ptr
<
std
:
:
complex
<
float
>
[
]
AlignedFreeDeleter
>
fft_cplx_scoper
;
static
const
int
kFftBufferAlignment
;
static
rtc
:
:
scoped_ptr
<
RealFourier
>
Create
(
int
fft_order
)
;
virtual
~
RealFourier
(
)
{
}
;
static
int
FftOrder
(
int
length
)
;
static
int
FftLength
(
int
order
)
;
static
int
ComplexLength
(
int
order
)
;
static
fft_real_scoper
AllocRealBuffer
(
int
count
)
;
static
fft_cplx_scoper
AllocCplxBuffer
(
int
count
)
;
virtual
void
Forward
(
const
float
*
src
std
:
:
complex
<
float
>
*
dest
)
const
=
0
;
virtual
void
Inverse
(
const
std
:
:
complex
<
float
>
*
src
float
*
dest
)
const
=
0
;
virtual
int
order
(
)
const
=
0
;
}
;
}
#
endif
