#
ifndef
WEBRTC_P2P_BASE_PACKETSOCKETFACTORY_H_
#
define
WEBRTC_P2P_BASE_PACKETSOCKETFACTORY_H_
#
include
"
webrtc
/
base
/
proxyinfo
.
h
"
namespace
rtc
{
class
AsyncPacketSocket
;
class
AsyncResolverInterface
;
class
PacketSocketFactory
{
public
:
enum
Options
{
OPT_SSLTCP
=
0x01
OPT_TLS
=
0x02
OPT_STUN
=
0x04
}
;
PacketSocketFactory
(
)
{
}
virtual
~
PacketSocketFactory
(
)
{
}
virtual
AsyncPacketSocket
*
CreateUdpSocket
(
const
SocketAddress
&
address
uint16
min_port
uint16
max_port
)
=
0
;
virtual
AsyncPacketSocket
*
CreateServerTcpSocket
(
const
SocketAddress
&
local_address
uint16
min_port
uint16
max_port
int
opts
)
=
0
;
virtual
AsyncPacketSocket
*
CreateClientTcpSocket
(
const
SocketAddress
&
local_address
const
SocketAddress
&
remote_address
const
ProxyInfo
&
proxy_info
const
std
:
:
string
&
user_agent
int
opts
)
=
0
;
virtual
AsyncResolverInterface
*
CreateAsyncResolver
(
)
=
0
;
private
:
DISALLOW_EVIL_CONSTRUCTORS
(
PacketSocketFactory
)
;
}
;
}
#
endif
