#
ifndef
WEBRTC_P2P_BASE_PACKETTRANSPORTINTERFACE_H_
#
define
WEBRTC_P2P_BASE_PACKETTRANSPORTINTERFACE_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
webrtc
/
base
/
sigslot
.
h
"
#
include
"
webrtc
/
base
/
socket
.
h
"
namespace
cricket
{
class
TransportChannel
;
}
namespace
rtc
{
struct
PacketOptions
;
struct
PacketTime
;
struct
SentPacket
;
class
PacketTransportInterface
:
public
sigslot
:
:
has_slots
<
>
{
public
:
virtual
~
PacketTransportInterface
(
)
{
}
virtual
const
std
:
:
string
debug_name
(
)
const
=
0
;
virtual
bool
writable
(
)
const
=
0
;
virtual
bool
receiving
(
)
const
=
0
;
virtual
int
SendPacket
(
const
char
*
data
size_t
len
const
rtc
:
:
PacketOptions
&
options
int
flags
=
0
)
=
0
;
virtual
int
SetOption
(
rtc
:
:
Socket
:
:
Option
opt
int
value
)
=
0
;
virtual
bool
GetOption
(
rtc
:
:
Socket
:
:
Option
opt
int
*
value
)
{
return
false
;
}
virtual
int
GetError
(
)
=
0
;
sigslot
:
:
signal1
<
PacketTransportInterface
*
>
SignalWritableState
;
sigslot
:
:
signal1
<
PacketTransportInterface
*
>
SignalReadyToSend
;
sigslot
:
:
signal1
<
PacketTransportInterface
*
>
SignalReceivingState
;
sigslot
:
:
signal5
<
PacketTransportInterface
*
const
char
*
size_t
const
rtc
:
:
PacketTime
&
int
>
SignalReadPacket
;
sigslot
:
:
signal2
<
PacketTransportInterface
*
const
rtc
:
:
SentPacket
&
>
SignalSentPacket
;
}
;
}
#
endif
