#
ifndef
WEBRTC_P2P_BASE_BASICPACKETSOCKETFACTORY_H_
#
define
WEBRTC_P2P_BASE_BASICPACKETSOCKETFACTORY_H_
#
include
"
webrtc
/
p2p
/
base
/
packetsocketfactory
.
h
"
namespace
rtc
{
class
AsyncSocket
;
class
SocketFactory
;
class
Thread
;
class
BasicPacketSocketFactory
:
public
PacketSocketFactory
{
public
:
BasicPacketSocketFactory
(
)
;
explicit
BasicPacketSocketFactory
(
Thread
*
thread
)
;
explicit
BasicPacketSocketFactory
(
SocketFactory
*
socket_factory
)
;
~
BasicPacketSocketFactory
(
)
override
;
AsyncPacketSocket
*
CreateUdpSocket
(
const
SocketAddress
&
local_address
uint16_t
min_port
uint16_t
max_port
)
override
;
AsyncPacketSocket
*
CreateServerTcpSocket
(
const
SocketAddress
&
local_address
uint16_t
min_port
uint16_t
max_port
int
opts
)
override
;
AsyncPacketSocket
*
CreateClientTcpSocket
(
const
SocketAddress
&
local_address
const
SocketAddress
&
remote_address
const
ProxyInfo
&
proxy_info
const
std
:
:
string
&
user_agent
int
opts
)
override
;
AsyncResolverInterface
*
CreateAsyncResolver
(
)
override
;
private
:
int
BindSocket
(
AsyncSocket
*
socket
const
SocketAddress
&
local_address
uint16_t
min_port
uint16_t
max_port
)
;
SocketFactory
*
socket_factory
(
)
;
Thread
*
thread_
;
SocketFactory
*
socket_factory_
;
}
;
}
#
endif
