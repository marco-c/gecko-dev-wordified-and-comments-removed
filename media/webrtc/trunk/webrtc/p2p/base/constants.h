#
ifndef
WEBRTC_P2P_BASE_CONSTANTS_H_
#
define
WEBRTC_P2P_BASE_CONSTANTS_H_
#
include
<
string
>
namespace
cricket
{
extern
const
char
CN_AUDIO
[
]
;
extern
const
char
CN_VIDEO
[
]
;
extern
const
char
CN_DATA
[
]
;
extern
const
char
CN_OTHER
[
]
;
extern
const
char
GROUP_TYPE_BUNDLE
[
]
;
extern
const
char
NS_JINGLE_ICE_UDP
[
]
;
extern
const
char
NS_GINGLE_P2P
[
]
;
extern
const
char
NS_GINGLE_RAW
[
]
;
extern
const
char
ICE_OPTION_GICE
[
]
;
extern
const
int
ICE_UFRAG_LENGTH
;
extern
const
int
ICE_PWD_LENGTH
;
extern
const
size_t
ICE_UFRAG_MIN_LENGTH
;
extern
const
size_t
ICE_PWD_MIN_LENGTH
;
extern
const
size_t
ICE_UFRAG_MAX_LENGTH
;
extern
const
size_t
ICE_PWD_MAX_LENGTH
;
extern
const
size_t
GICE_UFRAG_MAX_LENGTH
;
extern
const
int
ICE_CANDIDATE_COMPONENT_RTP
;
extern
const
int
ICE_CANDIDATE_COMPONENT_RTCP
;
extern
const
int
ICE_CANDIDATE_COMPONENT_DEFAULT
;
extern
const
char
NS_JINGLE_RTP
[
]
;
extern
const
char
NS_JINGLE_DRAFT_SCTP
[
]
;
extern
const
char
GICE_CHANNEL_NAME_RTP
[
]
;
extern
const
char
GICE_CHANNEL_NAME_RTCP
[
]
;
extern
const
char
GICE_CHANNEL_NAME_VIDEO_RTP
[
]
;
extern
const
char
GICE_CHANNEL_NAME_VIDEO_RTCP
[
]
;
extern
const
char
GICE_CHANNEL_NAME_DATA_RTP
[
]
;
extern
const
char
GICE_CHANNEL_NAME_DATA_RTCP
[
]
;
extern
const
char
CONNECTIONROLE_ACTIVE_STR
[
]
;
extern
const
char
CONNECTIONROLE_PASSIVE_STR
[
]
;
extern
const
char
CONNECTIONROLE_ACTPASS_STR
[
]
;
extern
const
char
CONNECTIONROLE_HOLDCONN_STR
[
]
;
}
#
endif
