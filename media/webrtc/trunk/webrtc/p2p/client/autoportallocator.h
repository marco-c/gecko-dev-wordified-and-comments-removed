#
ifndef
WEBRTC_P2P_CLIENT_AUTOPORTALLOCATOR_H_
#
define
WEBRTC_P2P_CLIENT_AUTOPORTALLOCATOR_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
webrtc
/
p2p
/
client
/
httpportallocator
.
h
"
#
include
"
webrtc
/
base
/
sigslot
.
h
"
class
AutoPortAllocator
:
public
cricket
:
:
HttpPortAllocator
{
public
:
AutoPortAllocator
(
rtc
:
:
NetworkManager
*
network_manager
const
std
:
:
string
&
user_agent
)
:
cricket
:
:
HttpPortAllocator
(
network_manager
user_agent
)
{
}
void
SetXmppClient
(
buzz
:
:
XmppClient
*
client
)
{
buzz
:
:
JingleInfoTask
*
jit
=
new
buzz
:
:
JingleInfoTask
(
client
)
;
jit
-
>
SignalJingleInfo
.
connect
(
this
&
AutoPortAllocator
:
:
OnJingleInfo
)
;
jit
-
>
Start
(
)
;
jit
-
>
RefreshJingleInfoNow
(
)
;
}
private
:
void
OnJingleInfo
(
const
std
:
:
string
&
token
const
std
:
:
vector
<
std
:
:
string
>
&
relay_hosts
const
std
:
:
vector
<
rtc
:
:
SocketAddress
>
&
stun_hosts
)
{
SetRelayToken
(
token
)
;
SetStunHosts
(
stun_hosts
)
;
SetRelayHosts
(
relay_hosts
)
;
}
}
;
#
endif
