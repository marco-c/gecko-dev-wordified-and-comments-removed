#
ifndef
WEBRTC_SOUND_SOUNDSYSTEMINTERFACE_H_
#
define
WEBRTC_SOUND_SOUNDSYSTEMINTERFACE_H_
#
include
<
vector
>
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
namespace
rtc
{
class
SoundDeviceLocator
;
class
SoundInputStreamInterface
;
class
SoundOutputStreamInterface
;
class
SoundSystemInterface
{
public
:
typedef
std
:
:
vector
<
SoundDeviceLocator
*
>
SoundDeviceLocatorList
;
enum
SampleFormat
{
FORMAT_S16LE
=
0
}
;
enum
Flags
{
FLAG_REPORT_LATENCY
=
(
1
<
<
0
)
}
;
struct
OpenParams
{
SampleFormat
format
;
unsigned
int
freq
;
unsigned
int
channels
;
int
flags
;
int
latency
;
}
;
static
const
int
kNoLatencyRequirements
=
-
1
;
static
const
int
kLowLatency
=
0
;
static
const
int
kMaxVolume
=
255
;
static
const
int
kMinVolume
=
0
;
static
void
ClearSoundDeviceLocatorList
(
SoundDeviceLocatorList
*
devices
)
;
virtual
~
SoundSystemInterface
(
)
{
}
virtual
bool
Init
(
)
=
0
;
virtual
void
Terminate
(
)
=
0
;
virtual
bool
EnumeratePlaybackDevices
(
SoundDeviceLocatorList
*
devices
)
=
0
;
virtual
bool
EnumerateCaptureDevices
(
SoundDeviceLocatorList
*
devices
)
=
0
;
virtual
bool
GetDefaultPlaybackDevice
(
SoundDeviceLocator
*
*
device
)
=
0
;
virtual
bool
GetDefaultCaptureDevice
(
SoundDeviceLocator
*
*
device
)
=
0
;
virtual
SoundOutputStreamInterface
*
OpenPlaybackDevice
(
const
SoundDeviceLocator
*
device
const
OpenParams
&
params
)
=
0
;
virtual
SoundInputStreamInterface
*
OpenCaptureDevice
(
const
SoundDeviceLocator
*
device
const
OpenParams
&
params
)
=
0
;
virtual
const
char
*
GetName
(
)
const
=
0
;
protected
:
SoundSystemInterface
(
)
{
}
private
:
DISALLOW_COPY_AND_ASSIGN
(
SoundSystemInterface
)
;
}
;
}
#
endif
