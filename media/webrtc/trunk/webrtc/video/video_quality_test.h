#
ifndef
WEBRTC_VIDEO_VIDEO_QUALITY_TEST_H_
#
define
WEBRTC_VIDEO_VIDEO_QUALITY_TEST_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
webrtc
/
test
/
call_test
.
h
"
#
include
"
webrtc
/
test
/
frame_generator
.
h
"
#
include
"
webrtc
/
test
/
testsupport
/
trace_to_stderr
.
h
"
namespace
webrtc
{
class
VideoQualityTest
:
public
test
:
:
CallTest
{
public
:
struct
Params
{
struct
{
size_t
width
;
size_t
height
;
int32_t
fps
;
int
min_bitrate_bps
;
int
target_bitrate_bps
;
int
max_bitrate_bps
;
std
:
:
string
codec
;
int
num_temporal_layers
;
int
selected_tl
;
int
min_transmit_bps
;
Call
:
:
Config
:
:
BitrateConfig
call_bitrate_config
;
bool
send_side_bwe
;
}
common
;
struct
{
std
:
:
string
clip_name
;
}
video
;
struct
{
bool
enabled
;
int32_t
slide_change_interval
;
int32_t
scroll_duration
;
}
screenshare
;
struct
{
std
:
:
string
test_label
;
double
avg_psnr_threshold
;
double
avg_ssim_threshold
;
int
test_durations_secs
;
std
:
:
string
graph_data_output_filename
;
std
:
:
string
graph_title
;
}
analyzer
;
FakeNetworkPipe
:
:
Config
pipe
;
bool
logs
;
struct
{
std
:
:
vector
<
VideoStream
>
streams
;
size_t
selected_stream
;
int
num_spatial_layers
;
int
selected_sl
;
std
:
:
vector
<
SpatialLayer
>
spatial_layers
;
}
ss
;
}
;
VideoQualityTest
(
)
;
void
RunWithAnalyzer
(
const
Params
&
params
)
;
void
RunWithVideoRenderer
(
const
Params
&
params
)
;
static
void
FillScalabilitySettings
(
Params
*
params
const
std
:
:
vector
<
std
:
:
string
>
&
stream_descriptors
size_t
selected_stream
int
num_spatial_layers
int
selected_sl
const
std
:
:
vector
<
std
:
:
string
>
&
sl_descriptors
)
;
protected
:
void
TestBody
(
)
override
;
std
:
:
string
GenerateGraphTitle
(
)
const
;
void
CheckParams
(
)
;
static
VideoStream
DefaultVideoStream
(
const
Params
&
params
)
;
static
std
:
:
vector
<
int
>
ParseCSV
(
const
std
:
:
string
&
str
)
;
void
CreateCapturer
(
VideoCaptureInput
*
input
)
;
void
SetupCommon
(
Transport
*
send_transport
Transport
*
recv_transport
)
;
void
SetupScreenshare
(
)
;
rtc
:
:
scoped_ptr
<
test
:
:
VideoCapturer
>
capturer_
;
rtc
:
:
scoped_ptr
<
test
:
:
TraceToStderr
>
trace_to_stderr_
;
rtc
:
:
scoped_ptr
<
test
:
:
FrameGenerator
>
frame_generator_
;
rtc
:
:
scoped_ptr
<
VideoEncoder
>
encoder_
;
VideoCodecUnion
codec_settings_
;
Clock
*
const
clock_
;
Params
params_
;
}
;
}
#
endif
