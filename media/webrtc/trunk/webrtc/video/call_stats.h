#
ifndef
WEBRTC_VIDEO_CALL_STATS_H_
#
define
WEBRTC_VIDEO_CALL_STATS_H_
#
include
<
list
>
#
include
"
webrtc
/
base
/
constructormagic
.
h
"
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
modules
/
include
/
module
.
h
"
#
include
"
webrtc
/
system_wrappers
/
include
/
clock
.
h
"
namespace
webrtc
{
class
CallStatsObserver
;
class
CriticalSectionWrapper
;
class
RtcpRttStats
;
class
CallStats
:
public
Module
{
public
:
friend
class
RtcpObserver
;
explicit
CallStats
(
Clock
*
clock
)
;
~
CallStats
(
)
;
int64_t
TimeUntilNextProcess
(
)
override
;
int32_t
Process
(
)
override
;
RtcpRttStats
*
rtcp_rtt_stats
(
)
const
;
void
RegisterStatsObserver
(
CallStatsObserver
*
observer
)
;
void
DeregisterStatsObserver
(
CallStatsObserver
*
observer
)
;
struct
RttTime
{
RttTime
(
int64_t
new_rtt
int64_t
rtt_time
)
:
rtt
(
new_rtt
)
time
(
rtt_time
)
{
}
const
int64_t
rtt
;
const
int64_t
time
;
}
;
protected
:
void
OnRttUpdate
(
int64_t
rtt
)
;
int64_t
avg_rtt_ms
(
)
const
;
private
:
Clock
*
const
clock_
;
rtc
:
:
scoped_ptr
<
CriticalSectionWrapper
>
crit_
;
rtc
:
:
scoped_ptr
<
RtcpRttStats
>
rtcp_rtt_stats_
;
int64_t
last_process_time_
;
int64_t
max_rtt_ms_
;
int64_t
avg_rtt_ms_
;
std
:
:
list
<
RttTime
>
reports_
;
std
:
:
list
<
CallStatsObserver
*
>
observers_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
CallStats
)
;
}
;
}
#
endif
