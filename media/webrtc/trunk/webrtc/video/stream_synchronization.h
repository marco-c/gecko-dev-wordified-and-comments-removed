#
ifndef
VIDEO_STREAM_SYNCHRONIZATION_H_
#
define
VIDEO_STREAM_SYNCHRONIZATION_H_
#
include
<
list
>
#
include
"
system_wrappers
/
include
/
rtp_to_ntp_estimator
.
h
"
#
include
"
typedefs
.
h
"
namespace
webrtc
{
class
StreamSynchronization
{
public
:
struct
Measurements
{
Measurements
(
)
:
latest_receive_time_ms
(
0
)
latest_timestamp
(
0
)
{
}
RtpToNtpEstimator
rtp_to_ntp
;
int64_t
latest_receive_time_ms
;
uint32_t
latest_timestamp
;
}
;
StreamSynchronization
(
int
video_stream_id
int
audio_stream_id
)
;
bool
ComputeDelays
(
int
relative_delay_ms
int
current_audio_delay_ms
int
*
extra_audio_delay_ms
int
*
total_video_delay_target_ms
)
;
static
bool
ComputeRelativeDelay
(
const
Measurements
&
audio_measurement
const
Measurements
&
video_measurement
int
*
relative_delay_ms
)
;
void
SetTargetBufferingDelay
(
int
target_delay_ms
)
;
private
:
struct
SynchronizationDelays
{
int
extra_video_delay_ms
=
0
;
int
last_video_delay_ms
=
0
;
int
extra_audio_delay_ms
=
0
;
int
last_audio_delay_ms
=
0
;
}
;
SynchronizationDelays
channel_delay_
;
const
int
video_stream_id_
;
const
int
audio_stream_id_
;
int
base_target_delay_ms_
;
int
avg_diff_ms_
;
}
;
}
#
endif
