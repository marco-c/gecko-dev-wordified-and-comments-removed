#
include
<
string
>
#
include
"
testing
/
gtest
/
include
/
gtest
/
gtest
.
h
"
#
include
"
webrtc
/
common_video
/
interface
/
i420_buffer_pool
.
h
"
namespace
webrtc
{
TEST
(
TestI420BufferPool
SimpleFrameReuse
)
{
I420BufferPool
pool
;
rtc
:
:
scoped_refptr
<
VideoFrameBuffer
>
buffer
=
pool
.
CreateBuffer
(
16
16
)
;
EXPECT_EQ
(
16
buffer
-
>
width
(
)
)
;
EXPECT_EQ
(
16
buffer
-
>
height
(
)
)
;
const
uint8_t
*
y_ptr
=
buffer
-
>
data
(
kYPlane
)
;
const
uint8_t
*
u_ptr
=
buffer
-
>
data
(
kUPlane
)
;
const
uint8_t
*
v_ptr
=
buffer
-
>
data
(
kVPlane
)
;
buffer
=
nullptr
;
buffer
=
pool
.
CreateBuffer
(
16
16
)
;
EXPECT_EQ
(
y_ptr
buffer
-
>
data
(
kYPlane
)
)
;
EXPECT_EQ
(
u_ptr
buffer
-
>
data
(
kUPlane
)
)
;
EXPECT_EQ
(
v_ptr
buffer
-
>
data
(
kVPlane
)
)
;
EXPECT_EQ
(
16
buffer
-
>
width
(
)
)
;
EXPECT_EQ
(
16
buffer
-
>
height
(
)
)
;
}
TEST
(
TestI420BufferPool
FailToReuse
)
{
I420BufferPool
pool
;
rtc
:
:
scoped_refptr
<
VideoFrameBuffer
>
buffer
=
pool
.
CreateBuffer
(
16
16
)
;
const
uint8_t
*
u_ptr
=
buffer
-
>
data
(
kUPlane
)
;
const
uint8_t
*
v_ptr
=
buffer
-
>
data
(
kVPlane
)
;
buffer
=
nullptr
;
buffer
=
pool
.
CreateBuffer
(
32
16
)
;
EXPECT_EQ
(
32
buffer
-
>
width
(
)
)
;
EXPECT_EQ
(
16
buffer
-
>
height
(
)
)
;
EXPECT_NE
(
u_ptr
buffer
-
>
data
(
kUPlane
)
)
;
EXPECT_NE
(
v_ptr
buffer
-
>
data
(
kVPlane
)
)
;
}
TEST
(
TestI420BufferPool
ExclusiveOwner
)
{
I420BufferPool
pool
;
rtc
:
:
scoped_refptr
<
VideoFrameBuffer
>
buffer
=
pool
.
CreateBuffer
(
16
16
)
;
EXPECT_TRUE
(
buffer
-
>
HasOneRef
(
)
)
;
}
TEST
(
TestI420BufferPool
FrameValidAfterPoolDestruction
)
{
rtc
:
:
scoped_refptr
<
VideoFrameBuffer
>
buffer
;
{
I420BufferPool
pool
;
buffer
=
pool
.
CreateBuffer
(
16
16
)
;
}
EXPECT_TRUE
(
buffer
-
>
HasOneRef
(
)
)
;
EXPECT_EQ
(
16
buffer
-
>
width
(
)
)
;
EXPECT_EQ
(
16
buffer
-
>
height
(
)
)
;
memset
(
buffer
-
>
data
(
kYPlane
)
0xA5
16
*
buffer
-
>
stride
(
kYPlane
)
)
;
}
}
