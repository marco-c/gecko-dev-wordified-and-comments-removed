#
ifndef
WEBRTC_VIDEO_FRAME_BUFFER_H_
#
define
WEBRTC_VIDEO_FRAME_BUFFER_H_
#
include
"
webrtc
/
base
/
callback
.
h
"
#
include
"
webrtc
/
base
/
refcount
.
h
"
#
include
"
webrtc
/
base
/
scoped_ptr
.
h
"
#
include
"
webrtc
/
base
/
scoped_ref_ptr
.
h
"
#
include
"
webrtc
/
common_video
/
interface
/
native_handle
.
h
"
#
include
"
webrtc
/
system_wrappers
/
interface
/
aligned_malloc
.
h
"
namespace
webrtc
{
enum
PlaneType
{
kYPlane
=
0
kUPlane
=
1
kVPlane
=
2
kNumOfPlanes
=
3
}
;
class
VideoFrameBuffer
:
public
rtc
:
:
RefCountInterface
{
public
:
virtual
bool
HasOneRef
(
)
const
=
0
;
virtual
int
width
(
)
const
=
0
;
virtual
int
height
(
)
const
=
0
;
virtual
const
uint8_t
*
data
(
PlaneType
type
)
const
=
0
;
virtual
uint8_t
*
data
(
PlaneType
type
)
=
0
;
virtual
int
stride
(
PlaneType
type
)
const
=
0
;
virtual
rtc
:
:
scoped_refptr
<
NativeHandle
>
native_handle
(
)
const
=
0
;
protected
:
virtual
~
VideoFrameBuffer
(
)
;
}
;
class
I420Buffer
:
public
VideoFrameBuffer
{
public
:
I420Buffer
(
int
width
int
height
)
;
I420Buffer
(
int
width
int
height
int
stride_y
int
stride_u
int
stride_v
)
;
int
width
(
)
const
override
;
int
height
(
)
const
override
;
const
uint8_t
*
data
(
PlaneType
type
)
const
override
;
uint8_t
*
data
(
PlaneType
type
)
override
;
int
stride
(
PlaneType
type
)
const
override
;
rtc
:
:
scoped_refptr
<
NativeHandle
>
native_handle
(
)
const
override
;
protected
:
~
I420Buffer
(
)
override
;
private
:
const
int
width_
;
const
int
height_
;
const
int
stride_y_
;
const
int
stride_u_
;
const
int
stride_v_
;
const
rtc
:
:
scoped_ptr
<
uint8_t
AlignedFreeDeleter
>
data_
;
}
;
class
TextureBuffer
:
public
VideoFrameBuffer
{
public
:
TextureBuffer
(
const
rtc
:
:
scoped_refptr
<
NativeHandle
>
&
native_handle
int
width
int
height
)
;
int
width
(
)
const
override
;
int
height
(
)
const
override
;
const
uint8_t
*
data
(
PlaneType
type
)
const
override
;
uint8_t
*
data
(
PlaneType
type
)
override
;
int
stride
(
PlaneType
type
)
const
override
;
rtc
:
:
scoped_refptr
<
NativeHandle
>
native_handle
(
)
const
override
;
private
:
friend
class
rtc
:
:
RefCountedObject
<
TextureBuffer
>
;
~
TextureBuffer
(
)
override
;
const
rtc
:
:
scoped_refptr
<
NativeHandle
>
native_handle_
;
const
int
width_
;
const
int
height_
;
}
;
class
WrappedI420Buffer
:
public
webrtc
:
:
VideoFrameBuffer
{
public
:
WrappedI420Buffer
(
int
desired_width
int
desired_height
int
width
int
height
const
uint8_t
*
y_plane
int
y_stride
const
uint8_t
*
u_plane
int
u_stride
const
uint8_t
*
v_plane
int
v_stride
const
rtc
:
:
Callback0
<
void
>
&
no_longer_used
)
;
int
width
(
)
const
override
;
int
height
(
)
const
override
;
const
uint8_t
*
data
(
PlaneType
type
)
const
override
;
uint8_t
*
data
(
PlaneType
type
)
override
;
int
stride
(
PlaneType
type
)
const
override
;
rtc
:
:
scoped_refptr
<
NativeHandle
>
native_handle
(
)
const
override
;
private
:
friend
class
rtc
:
:
RefCountedObject
<
WrappedI420Buffer
>
;
~
WrappedI420Buffer
(
)
override
;
int
width_
;
int
height_
;
const
uint8_t
*
y_plane_
;
const
uint8_t
*
u_plane_
;
const
uint8_t
*
v_plane_
;
const
int
y_stride_
;
const
int
u_stride_
;
const
int
v_stride_
;
rtc
:
:
Callback0
<
void
>
no_longer_used_cb_
;
}
;
}
#
endif
