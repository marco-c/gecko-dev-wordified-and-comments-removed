#
include
"
api
/
proxy
.
h
"
namespace
webrtc
{
namespace
internal
{
SynchronousMethodCall
:
:
SynchronousMethodCall
(
rtc
:
:
MessageHandler
*
proxy
)
:
e_
(
)
proxy_
(
proxy
)
{
}
SynchronousMethodCall
:
:
~
SynchronousMethodCall
(
)
=
default
;
void
SynchronousMethodCall
:
:
Invoke
(
const
rtc
:
:
Location
&
posted_from
rtc
:
:
Thread
*
t
)
{
if
(
t
-
>
IsCurrent
(
)
)
{
proxy_
-
>
OnMessage
(
nullptr
)
;
}
else
{
e_
.
reset
(
new
rtc
:
:
Event
(
false
false
)
)
;
t
-
>
Post
(
posted_from
this
0
)
;
e_
-
>
Wait
(
rtc
:
:
Event
:
:
kForever
)
;
}
}
void
SynchronousMethodCall
:
:
OnMessage
(
rtc
:
:
Message
*
)
{
proxy_
-
>
OnMessage
(
nullptr
)
;
e_
-
>
Set
(
)
;
}
}
}
