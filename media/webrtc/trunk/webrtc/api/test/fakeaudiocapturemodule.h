#
ifndef
WEBRTC_API_TEST_FAKEAUDIOCAPTUREMODULE_H_
#
define
WEBRTC_API_TEST_FAKEAUDIOCAPTUREMODULE_H_
#
include
<
memory
>
#
include
"
webrtc
/
base
/
basictypes
.
h
"
#
include
"
webrtc
/
base
/
criticalsection
.
h
"
#
include
"
webrtc
/
base
/
messagehandler
.
h
"
#
include
"
webrtc
/
base
/
scoped_ref_ptr
.
h
"
#
include
"
webrtc
/
common_types
.
h
"
#
include
"
webrtc
/
modules
/
audio_device
/
include
/
audio_device
.
h
"
namespace
rtc
{
class
Thread
;
}
class
FakeAudioCaptureModule
:
public
webrtc
:
:
AudioDeviceModule
public
rtc
:
:
MessageHandler
{
public
:
typedef
uint16_t
Sample
;
static
const
size_t
kNumberSamples
=
440
;
static
const
size_t
kNumberBytesPerSample
=
sizeof
(
Sample
)
;
static
rtc
:
:
scoped_refptr
<
FakeAudioCaptureModule
>
Create
(
)
;
int
frames_received
(
)
const
;
int64_t
TimeUntilNextProcess
(
)
override
;
void
Process
(
)
override
;
int32_t
ActiveAudioLayer
(
AudioLayer
*
audio_layer
)
const
override
;
ErrorCode
LastError
(
)
const
override
;
int32_t
RegisterEventObserver
(
webrtc
:
:
AudioDeviceObserver
*
event_callback
)
override
;
int32_t
RegisterAudioCallback
(
webrtc
:
:
AudioTransport
*
audio_callback
)
override
;
int32_t
Init
(
)
override
;
int32_t
Terminate
(
)
override
;
bool
Initialized
(
)
const
override
;
int16_t
PlayoutDevices
(
)
override
;
int16_t
RecordingDevices
(
)
override
;
int32_t
PlayoutDeviceName
(
uint16_t
index
char
name
[
webrtc
:
:
kAdmMaxDeviceNameSize
]
char
guid
[
webrtc
:
:
kAdmMaxGuidSize
]
)
override
;
int32_t
RecordingDeviceName
(
uint16_t
index
char
name
[
webrtc
:
:
kAdmMaxDeviceNameSize
]
char
guid
[
webrtc
:
:
kAdmMaxGuidSize
]
)
override
;
int32_t
SetPlayoutDevice
(
uint16_t
index
)
override
;
int32_t
SetPlayoutDevice
(
WindowsDeviceType
device
)
override
;
int32_t
SetRecordingDevice
(
uint16_t
index
)
override
;
int32_t
SetRecordingDevice
(
WindowsDeviceType
device
)
override
;
int32_t
PlayoutIsAvailable
(
bool
*
available
)
override
;
int32_t
InitPlayout
(
)
override
;
bool
PlayoutIsInitialized
(
)
const
override
;
int32_t
RecordingIsAvailable
(
bool
*
available
)
override
;
int32_t
InitRecording
(
)
override
;
bool
RecordingIsInitialized
(
)
const
override
;
int32_t
StartPlayout
(
)
override
;
int32_t
StopPlayout
(
)
override
;
bool
Playing
(
)
const
override
;
int32_t
StartRecording
(
)
override
;
int32_t
StopRecording
(
)
override
;
bool
Recording
(
)
const
override
;
int32_t
SetAGC
(
bool
enable
)
override
;
bool
AGC
(
)
const
override
;
int32_t
SetWaveOutVolume
(
uint16_t
volume_left
uint16_t
volume_right
)
override
;
int32_t
WaveOutVolume
(
uint16_t
*
volume_left
uint16_t
*
volume_right
)
const
override
;
int32_t
InitSpeaker
(
)
override
;
bool
SpeakerIsInitialized
(
)
const
override
;
int32_t
InitMicrophone
(
)
override
;
bool
MicrophoneIsInitialized
(
)
const
override
;
int32_t
SpeakerVolumeIsAvailable
(
bool
*
available
)
override
;
int32_t
SetSpeakerVolume
(
uint32_t
volume
)
override
;
int32_t
SpeakerVolume
(
uint32_t
*
volume
)
const
override
;
int32_t
MaxSpeakerVolume
(
uint32_t
*
max_volume
)
const
override
;
int32_t
MinSpeakerVolume
(
uint32_t
*
min_volume
)
const
override
;
int32_t
SpeakerVolumeStepSize
(
uint16_t
*
step_size
)
const
override
;
int32_t
MicrophoneVolumeIsAvailable
(
bool
*
available
)
override
;
int32_t
SetMicrophoneVolume
(
uint32_t
volume
)
override
;
int32_t
MicrophoneVolume
(
uint32_t
*
volume
)
const
override
;
int32_t
MaxMicrophoneVolume
(
uint32_t
*
max_volume
)
const
override
;
int32_t
MinMicrophoneVolume
(
uint32_t
*
min_volume
)
const
override
;
int32_t
MicrophoneVolumeStepSize
(
uint16_t
*
step_size
)
const
override
;
int32_t
SpeakerMuteIsAvailable
(
bool
*
available
)
override
;
int32_t
SetSpeakerMute
(
bool
enable
)
override
;
int32_t
SpeakerMute
(
bool
*
enabled
)
const
override
;
int32_t
MicrophoneMuteIsAvailable
(
bool
*
available
)
override
;
int32_t
SetMicrophoneMute
(
bool
enable
)
override
;
int32_t
MicrophoneMute
(
bool
*
enabled
)
const
override
;
int32_t
MicrophoneBoostIsAvailable
(
bool
*
available
)
override
;
int32_t
SetMicrophoneBoost
(
bool
enable
)
override
;
int32_t
MicrophoneBoost
(
bool
*
enabled
)
const
override
;
int32_t
StereoPlayoutIsAvailable
(
bool
*
available
)
const
override
;
int32_t
SetStereoPlayout
(
bool
enable
)
override
;
int32_t
StereoPlayout
(
bool
*
enabled
)
const
override
;
int32_t
StereoRecordingIsAvailable
(
bool
*
available
)
const
override
;
int32_t
SetStereoRecording
(
bool
enable
)
override
;
int32_t
StereoRecording
(
bool
*
enabled
)
const
override
;
int32_t
SetRecordingChannel
(
const
ChannelType
channel
)
override
;
int32_t
RecordingChannel
(
ChannelType
*
channel
)
const
override
;
int32_t
SetPlayoutBuffer
(
const
BufferType
type
uint16_t
size_ms
=
0
)
override
;
int32_t
PlayoutBuffer
(
BufferType
*
type
uint16_t
*
size_ms
)
const
override
;
int32_t
PlayoutDelay
(
uint16_t
*
delay_ms
)
const
override
;
int32_t
RecordingDelay
(
uint16_t
*
delay_ms
)
const
override
;
int32_t
CPULoad
(
uint16_t
*
load
)
const
override
;
int32_t
StartRawOutputFileRecording
(
const
char
pcm_file_name_utf8
[
webrtc
:
:
kAdmMaxFileNameSize
]
)
override
;
int32_t
StopRawOutputFileRecording
(
)
override
;
int32_t
StartRawInputFileRecording
(
const
char
pcm_file_name_utf8
[
webrtc
:
:
kAdmMaxFileNameSize
]
)
override
;
int32_t
StopRawInputFileRecording
(
)
override
;
int32_t
SetRecordingSampleRate
(
const
uint32_t
samples_per_sec
)
override
;
int32_t
RecordingSampleRate
(
uint32_t
*
samples_per_sec
)
const
override
;
int32_t
SetPlayoutSampleRate
(
const
uint32_t
samples_per_sec
)
override
;
int32_t
PlayoutSampleRate
(
uint32_t
*
samples_per_sec
)
const
override
;
int32_t
ResetAudioDevice
(
)
override
;
int32_t
SetLoudspeakerStatus
(
bool
enable
)
override
;
int32_t
GetLoudspeakerStatus
(
bool
*
enabled
)
const
override
;
bool
BuiltInAECIsAvailable
(
)
const
override
{
return
false
;
}
int32_t
EnableBuiltInAEC
(
bool
enable
)
override
{
return
-
1
;
}
bool
BuiltInAGCIsAvailable
(
)
const
override
{
return
false
;
}
int32_t
EnableBuiltInAGC
(
bool
enable
)
override
{
return
-
1
;
}
bool
BuiltInNSIsAvailable
(
)
const
override
{
return
false
;
}
int32_t
EnableBuiltInNS
(
bool
enable
)
override
{
return
-
1
;
}
#
if
defined
(
WEBRTC_IOS
)
int
GetPlayoutAudioParameters
(
webrtc
:
:
AudioParameters
*
params
)
const
override
{
return
-
1
;
}
int
GetRecordAudioParameters
(
webrtc
:
:
AudioParameters
*
params
)
const
override
{
return
-
1
;
}
#
endif
void
OnMessage
(
rtc
:
:
Message
*
msg
)
override
;
protected
:
explicit
FakeAudioCaptureModule
(
)
;
virtual
~
FakeAudioCaptureModule
(
)
;
private
:
bool
Initialize
(
)
;
void
SetSendBuffer
(
int
value
)
;
void
ResetRecBuffer
(
)
;
bool
CheckRecBuffer
(
int
value
)
;
bool
ShouldStartProcessing
(
)
;
void
UpdateProcessing
(
bool
start
)
;
void
StartProcessP
(
)
;
void
ProcessFrameP
(
)
;
void
ReceiveFrameP
(
)
;
void
SendFrameP
(
)
;
int64_t
last_process_time_ms_
;
webrtc
:
:
AudioTransport
*
audio_callback_
;
bool
recording_
;
bool
playing_
;
bool
play_is_initialized_
;
bool
rec_is_initialized_
;
uint32_t
current_mic_level_
;
bool
started_
;
int64_t
next_frame_time_
;
std
:
:
unique_ptr
<
rtc
:
:
Thread
>
process_thread_
;
char
rec_buffer_
[
kNumberSamples
*
kNumberBytesPerSample
]
;
char
send_buffer_
[
kNumberSamples
*
kNumberBytesPerSample
]
;
int
frames_received_
;
rtc
:
:
CriticalSection
crit_
;
rtc
:
:
CriticalSection
crit_callback_
;
}
;
#
endif
