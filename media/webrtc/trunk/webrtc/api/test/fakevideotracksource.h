#
ifndef
WEBRTC_API_TEST_FAKEVIDEOTRACKSOURCE_H_
#
define
WEBRTC_API_TEST_FAKEVIDEOTRACKSOURCE_H_
#
include
"
webrtc
/
api
/
mediastreaminterface
.
h
"
#
include
"
webrtc
/
api
/
videotracksource
.
h
"
#
include
"
webrtc
/
media
/
base
/
fakevideocapturer
.
h
"
namespace
webrtc
{
class
FakeVideoTrackSource
:
public
VideoTrackSource
{
public
:
static
rtc
:
:
scoped_refptr
<
FakeVideoTrackSource
>
Create
(
bool
is_screencast
)
{
return
new
rtc
:
:
RefCountedObject
<
FakeVideoTrackSource
>
(
is_screencast
)
;
}
static
rtc
:
:
scoped_refptr
<
FakeVideoTrackSource
>
Create
(
)
{
return
Create
(
false
)
;
}
cricket
:
:
FakeVideoCapturer
*
fake_video_capturer
(
)
{
return
&
fake_video_capturer_
;
}
bool
is_screencast
(
)
const
override
{
return
is_screencast_
;
}
protected
:
explicit
FakeVideoTrackSource
(
bool
is_screencast
)
:
VideoTrackSource
(
&
fake_video_capturer_
false
)
is_screencast_
(
is_screencast
)
{
}
virtual
~
FakeVideoTrackSource
(
)
{
}
private
:
cricket
:
:
FakeVideoCapturer
fake_video_capturer_
;
const
bool
is_screencast_
;
}
;
}
#
endif
