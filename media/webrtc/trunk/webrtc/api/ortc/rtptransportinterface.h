#
ifndef
API_ORTC_RTPTRANSPORTINTERFACE_H_
#
define
API_ORTC_RTPTRANSPORTINTERFACE_H_
#
include
<
string
>
#
include
"
api
/
optional
.
h
"
#
include
"
api
/
ortc
/
packettransportinterface
.
h
"
#
include
"
api
/
rtcerror
.
h
"
#
include
"
common_types
.
h
"
namespace
webrtc
{
class
RtpTransportAdapter
;
struct
RtcpParameters
final
{
rtc
:
:
Optional
<
uint32_t
>
ssrc
;
std
:
:
string
cname
;
bool
reduced_size
=
false
;
bool
mux
=
true
;
bool
operator
=
=
(
const
RtcpParameters
&
o
)
const
{
return
ssrc
=
=
o
.
ssrc
&
&
cname
=
=
o
.
cname
&
&
reduced_size
=
=
o
.
reduced_size
&
&
mux
=
=
o
.
mux
;
}
bool
operator
!
=
(
const
RtcpParameters
&
o
)
const
{
return
!
(
*
this
=
=
o
)
;
}
}
;
struct
RtpTransportParameters
final
{
RtcpParameters
rtcp
;
RtpKeepAliveConfig
keepalive
;
bool
operator
=
=
(
const
RtpTransportParameters
&
o
)
const
{
return
rtcp
=
=
o
.
rtcp
&
&
keepalive
=
=
o
.
keepalive
;
}
bool
operator
!
=
(
const
RtpTransportParameters
&
o
)
const
{
return
!
(
*
this
=
=
o
)
;
}
}
;
class
RtpTransportInterface
{
public
:
virtual
~
RtpTransportInterface
(
)
{
}
virtual
PacketTransportInterface
*
GetRtpPacketTransport
(
)
const
=
0
;
virtual
PacketTransportInterface
*
GetRtcpPacketTransport
(
)
const
=
0
;
virtual
RTCError
SetParameters
(
const
RtpTransportParameters
&
parameters
)
=
0
;
virtual
RtpTransportParameters
GetParameters
(
)
const
=
0
;
protected
:
virtual
RtpTransportAdapter
*
GetInternal
(
)
=
0
;
friend
class
OrtcFactory
;
friend
class
OrtcRtpSenderAdapter
;
friend
class
OrtcRtpReceiverAdapter
;
friend
class
RtpTransportControllerAdapter
;
friend
class
RtpTransportAdapter
;
}
;
}
#
endif
