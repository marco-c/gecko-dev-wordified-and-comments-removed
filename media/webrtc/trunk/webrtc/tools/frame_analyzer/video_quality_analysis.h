#
ifndef
WEBRTC_TOOLS_FRAME_ANALYZER_VIDEO_QUALITY_ANALYSIS_H_
#
define
WEBRTC_TOOLS_FRAME_ANALYZER_VIDEO_QUALITY_ANALYSIS_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
libyuv
/
compare
.
h
"
#
include
"
libyuv
/
convert
.
h
"
namespace
webrtc
{
namespace
test
{
struct
AnalysisResult
{
AnalysisResult
(
)
{
}
AnalysisResult
(
int
frame_number
double
psnr_value
double
ssim_value
)
:
frame_number
(
frame_number
)
psnr_value
(
psnr_value
)
ssim_value
(
ssim_value
)
{
}
int
frame_number
;
double
psnr_value
;
double
ssim_value
;
}
;
struct
ResultsContainer
{
ResultsContainer
(
)
;
~
ResultsContainer
(
)
;
std
:
:
vector
<
AnalysisResult
>
frames
;
}
;
enum
VideoAnalysisMetricsType
{
kPSNR
kSSIM
}
;
void
RunAnalysis
(
const
char
*
reference_file_name
const
char
*
test_file_name
const
char
*
stats_file_reference_name
const
char
*
stats_file_test_name
int
width
int
height
ResultsContainer
*
results
)
;
double
CalculateMetrics
(
VideoAnalysisMetricsType
video_metrics_type
const
uint8_t
*
ref_frame
const
uint8_t
*
test_frame
int
width
int
height
)
;
void
PrintAnalysisResults
(
const
std
:
:
string
&
label
ResultsContainer
*
results
)
;
void
PrintAnalysisResults
(
FILE
*
output
const
std
:
:
string
&
label
ResultsContainer
*
results
)
;
void
PrintMaxRepeatedAndSkippedFrames
(
const
std
:
:
string
&
label
const
std
:
:
string
&
stats_file_ref_name
const
std
:
:
string
&
stats_file_test_name
)
;
void
PrintMaxRepeatedAndSkippedFrames
(
FILE
*
output
const
std
:
:
string
&
label
const
std
:
:
string
&
stats_file_ref_name
const
std
:
:
string
&
stats_file_test_name
)
;
bool
GetNextStatsLine
(
FILE
*
stats_file
char
*
line
)
;
int
GetI420FrameSize
(
int
width
int
height
)
;
int
ExtractFrameSequenceNumber
(
std
:
:
string
line
)
;
bool
IsThereBarcodeError
(
std
:
:
string
line
)
;
int
ExtractDecodedFrameNumber
(
std
:
:
string
line
)
;
bool
ExtractFrameFromYuvFile
(
const
char
*
i420_file_name
int
width
int
height
int
frame_number
uint8_t
*
result_frame
)
;
bool
ExtractFrameFromY4mFile
(
const
char
*
i420_file_name
int
width
int
height
int
frame_number
uint8_t
*
result_frame
)
;
}
}
#
endif
