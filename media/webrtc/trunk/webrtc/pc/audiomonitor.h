#
ifndef
WEBRTC_PC_AUDIOMONITOR_H_
#
define
WEBRTC_PC_AUDIOMONITOR_H_
#
include
<
vector
>
#
include
<
utility
>
#
include
"
webrtc
/
base
/
sigslot
.
h
"
#
include
"
webrtc
/
base
/
thread
.
h
"
#
include
"
webrtc
/
p2p
/
base
/
port
.
h
"
namespace
cricket
{
class
VoiceChannel
;
struct
AudioInfo
{
int
input_level
;
int
output_level
;
typedef
std
:
:
vector
<
std
:
:
pair
<
uint32_t
int
>
>
StreamList
;
StreamList
active_streams
;
}
;
class
AudioMonitor
:
public
rtc
:
:
MessageHandler
public
sigslot
:
:
has_slots
<
>
{
public
:
AudioMonitor
(
VoiceChannel
*
voice_channel
rtc
:
:
Thread
*
monitor_thread
)
;
~
AudioMonitor
(
)
;
void
Start
(
int
cms
)
;
void
Stop
(
)
;
VoiceChannel
*
voice_channel
(
)
;
rtc
:
:
Thread
*
monitor_thread
(
)
;
sigslot
:
:
signal2
<
AudioMonitor
*
const
AudioInfo
&
>
SignalUpdate
;
protected
:
void
OnMessage
(
rtc
:
:
Message
*
message
)
;
void
PollVoiceChannel
(
)
;
AudioInfo
audio_info_
;
VoiceChannel
*
voice_channel_
;
rtc
:
:
Thread
*
monitoring_thread_
;
rtc
:
:
CriticalSection
crit_
;
uint32_t
rate_
;
bool
monitoring_
;
}
;
}
#
endif
