#
include
"
webrtc
/
base
/
gunit
.
h
"
#
include
"
webrtc
/
media
/
base
/
testutils
.
h
"
#
include
"
webrtc
/
pc
/
rtcpmuxfilter
.
h
"
TEST
(
RtcpMuxFilterTest
DemuxRtcpSender
)
{
cricket
:
:
RtcpMuxFilter
filter
;
const
char
data
[
]
=
{
0
73
0
0
}
;
const
int
len
=
4
;
EXPECT_FALSE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
filter
.
SetOffer
(
true
cricket
:
:
CS_LOCAL
)
;
EXPECT_TRUE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
filter
.
SetAnswer
(
true
cricket
:
:
CS_REMOTE
)
;
EXPECT_TRUE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
}
TEST
(
RtcpMuxFilterTest
DemuxRtcpReceiver
)
{
cricket
:
:
RtcpMuxFilter
filter
;
const
char
data
[
]
=
{
0
73
0
0
}
;
const
int
len
=
4
;
EXPECT_FALSE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
;
EXPECT_FALSE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
filter
.
SetAnswer
(
true
cricket
:
:
CS_LOCAL
)
;
EXPECT_TRUE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
}
TEST
(
RtcpMuxFilterTest
DemuxRtcpSenderProvisionalAnswer
)
{
cricket
:
:
RtcpMuxFilter
filter
;
const
char
data
[
]
=
{
0
73
0
0
}
;
const
int
len
=
4
;
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
;
filter
.
SetProvisionalAnswer
(
false
cricket
:
:
CS_LOCAL
)
;
EXPECT_FALSE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
filter
.
SetProvisionalAnswer
(
true
cricket
:
:
CS_LOCAL
)
;
EXPECT_TRUE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
filter
.
SetAnswer
(
true
cricket
:
:
CS_LOCAL
)
;
EXPECT_TRUE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
}
TEST
(
RtcpMuxFilterTest
DemuxRtcpReceiverProvisionalAnswer
)
{
cricket
:
:
RtcpMuxFilter
filter
;
const
char
data
[
]
=
{
0
73
0
0
}
;
const
int
len
=
4
;
filter
.
SetOffer
(
true
cricket
:
:
CS_LOCAL
)
;
filter
.
SetProvisionalAnswer
(
false
cricket
:
:
CS_REMOTE
)
;
EXPECT_TRUE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
filter
.
SetProvisionalAnswer
(
true
cricket
:
:
CS_REMOTE
)
;
EXPECT_TRUE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
filter
.
SetAnswer
(
true
cricket
:
:
CS_REMOTE
)
;
EXPECT_TRUE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
}
TEST
(
RtcpMuxFilterTest
IsActiveSender
)
{
cricket
:
:
RtcpMuxFilter
filter
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsFullyActive
(
)
)
;
filter
.
SetOffer
(
true
cricket
:
:
CS_LOCAL
)
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsFullyActive
(
)
)
;
filter
.
SetAnswer
(
true
cricket
:
:
CS_REMOTE
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_TRUE
(
filter
.
IsFullyActive
(
)
)
;
}
TEST
(
RtcpMuxFilterTest
ReceivePrAnswer
)
{
cricket
:
:
RtcpMuxFilter
filter
;
filter
.
SetOffer
(
true
cricket
:
:
CS_LOCAL
)
;
EXPECT_TRUE
(
filter
.
SetProvisionalAnswer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsFullyActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetProvisionalAnswer
(
false
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsFullyActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_TRUE
(
filter
.
IsFullyActive
(
)
)
;
}
TEST
(
RtcpMuxFilterTest
IsActiveReceiver
)
{
cricket
:
:
RtcpMuxFilter
filter
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsFullyActive
(
)
)
;
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsFullyActive
(
)
)
;
filter
.
SetAnswer
(
true
cricket
:
:
CS_LOCAL
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_TRUE
(
filter
.
IsFullyActive
(
)
)
;
}
TEST
(
RtcpMuxFilterTest
SendPrAnswer
)
{
cricket
:
:
RtcpMuxFilter
filter
;
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
;
EXPECT_TRUE
(
filter
.
SetProvisionalAnswer
(
true
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsFullyActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetProvisionalAnswer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsFullyActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
true
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
IsProvisionallyActive
(
)
)
;
EXPECT_TRUE
(
filter
.
IsFullyActive
(
)
)
;
}
TEST
(
RtcpMuxFilterTest
EnableFilterDuringUpdate
)
{
cricket
:
:
RtcpMuxFilter
filter
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetOffer
(
false
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
true
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
SetOffer
(
false
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_FALSE
(
filter
.
SetAnswer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
}
TEST
(
RtcpMuxFilterTest
SetOfferTwice
)
{
cricket
:
:
RtcpMuxFilter
filter
;
EXPECT_TRUE
(
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
true
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
cricket
:
:
RtcpMuxFilter
filter2
;
EXPECT_TRUE
(
filter2
.
SetOffer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter2
.
SetOffer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter2
.
SetAnswer
(
false
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_FALSE
(
filter2
.
IsActive
(
)
)
;
}
TEST
(
RtcpMuxFilterTest
EnableFilterTwiceDuringUpdate
)
{
cricket
:
:
RtcpMuxFilter
filter
;
EXPECT_TRUE
(
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
true
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
true
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
}
TEST
(
RtcpMuxFilterTest
KeepFilterDisabledDuringUpdate
)
{
cricket
:
:
RtcpMuxFilter
filter
;
EXPECT_TRUE
(
filter
.
SetOffer
(
false
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetOffer
(
false
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_FALSE
(
filter
.
IsActive
(
)
)
;
}
TEST
(
RtcpMuxFilterTest
SetActiveCantDeactivate
)
{
cricket
:
:
RtcpMuxFilter
filter
;
const
char
data
[
]
=
{
0
73
0
0
}
;
const
int
len
=
4
;
filter
.
SetActive
(
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
DemuxRtcp
(
data
len
)
)
;
EXPECT_FALSE
(
filter
.
SetOffer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetOffer
(
true
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
SetProvisionalAnswer
(
false
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetProvisionalAnswer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
SetAnswer
(
false
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
SetOffer
(
false
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetOffer
(
true
cricket
:
:
CS_REMOTE
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
SetProvisionalAnswer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetProvisionalAnswer
(
true
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_FALSE
(
filter
.
SetAnswer
(
false
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
EXPECT_TRUE
(
filter
.
SetAnswer
(
true
cricket
:
:
CS_LOCAL
)
)
;
EXPECT_TRUE
(
filter
.
IsActive
(
)
)
;
}
