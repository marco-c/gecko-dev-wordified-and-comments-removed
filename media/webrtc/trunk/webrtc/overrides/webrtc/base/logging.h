#
ifndef
THIRD_PARTY_LIBJINGLE_OVERRIDES_WEBRTC_BASE_LOGGING_H_
#
define
THIRD_PARTY_LIBJINGLE_OVERRIDES_WEBRTC_BASE_LOGGING_H_
#
include
"
third_party
/
webrtc
/
overrides
/
webrtc
/
base
/
diagnostic_logging
.
h
"
#
if
defined
(
LOGGING_INSIDE_WEBRTC
)
#
define
DIAGNOSTIC_LOG
(
sev
ctx
err
.
.
.
)
\
rtc
:
:
DiagnosticLogMessage
(
\
__FILE__
__LINE__
sev
VLOG_IS_ON
(
sev
)
\
rtc
:
:
ERRCTX_
#
#
ctx
err
#
#
__VA_ARGS__
)
.
stream
(
)
#
define
LOG_CHECK_LEVEL
(
sev
)
VLOG_IS_ON
(
rtc
:
:
sev
)
#
define
LOG_CHECK_LEVEL_V
(
sev
)
VLOG_IS_ON
(
sev
)
#
define
LOG_V
(
sev
)
DIAGNOSTIC_LOG
(
sev
NONE
0
)
#
undef
LOG
#
define
LOG
(
sev
)
DIAGNOSTIC_LOG
(
rtc
:
:
sev
NONE
0
)
#
if
defined
(
__GNUC__
)
&
&
defined
(
_DEBUG
)
#
define
LOG_F
(
sev
)
LOG
(
sev
)
<
<
__PRETTY_FUNCTION__
<
<
"
:
"
#
else
#
define
LOG_F
(
sev
)
LOG
(
sev
)
<
<
__FUNCTION__
<
<
"
:
"
#
endif
#
define
LOG_E
(
sev
ctx
err
.
.
.
)
\
DIAGNOSTIC_LOG
(
rtc
:
:
sev
ctx
err
#
#
__VA_ARGS__
)
#
undef
LOG_ERRNO_EX
#
define
LOG_ERRNO_EX
(
sev
err
)
LOG_E
(
sev
ERRNO
err
)
#
undef
LOG_ERRNO
#
define
LOG_ERRNO
(
sev
)
LOG_ERRNO_EX
(
sev
errno
)
#
if
defined
(
WEBRTC_WIN
)
#
define
LOG_GLE_EX
(
sev
err
)
LOG_E
(
sev
HRESULT
err
)
#
define
LOG_GLE
(
sev
)
LOG_GLE_EX
(
sev
GetLastError
(
)
)
#
define
LOG_GLEM
(
sev
mod
)
LOG_E
(
sev
HRESULT
GetLastError
(
)
mod
)
#
define
LOG_ERR_EX
(
sev
err
)
LOG_GLE_EX
(
sev
err
)
#
define
LOG_ERR
(
sev
)
LOG_GLE
(
sev
)
#
define
LAST_SYSTEM_ERROR
(
:
:
GetLastError
(
)
)
#
else
#
define
LOG_ERR_EX
(
sev
err
)
LOG_ERRNO_EX
(
sev
err
)
#
define
LOG_ERR
(
sev
)
LOG_ERRNO
(
sev
)
#
define
LAST_SYSTEM_ERROR
(
errno
)
#
endif
#
undef
PLOG
#
define
PLOG
(
sev
err
)
LOG_ERR_EX
(
sev
err
)
#
endif
#
endif
