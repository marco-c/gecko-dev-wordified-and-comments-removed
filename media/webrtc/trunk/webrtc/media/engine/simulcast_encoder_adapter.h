#
ifndef
MEDIA_ENGINE_SIMULCAST_ENCODER_ADAPTER_H_
#
define
MEDIA_ENGINE_SIMULCAST_ENCODER_ADAPTER_H_
#
include
<
memory
>
#
include
<
stack
>
#
include
<
string
>
#
include
<
utility
>
#
include
<
vector
>
#
include
"
media
/
engine
/
webrtcvideoencoderfactory
.
h
"
#
include
"
modules
/
video_coding
/
codecs
/
vp8
/
include
/
vp8
.
h
"
#
include
"
rtc_base
/
atomicops
.
h
"
#
include
"
rtc_base
/
sequenced_task_checker
.
h
"
namespace
webrtc
{
class
SimulcastRateAllocator
;
class
VideoEncoderFactory
;
class
SimulcastEncoderAdapter
:
public
VP8Encoder
{
public
:
explicit
SimulcastEncoderAdapter
(
VideoEncoderFactory
*
factory
)
;
explicit
SimulcastEncoderAdapter
(
cricket
:
:
WebRtcVideoEncoderFactory
*
factory
)
;
virtual
~
SimulcastEncoderAdapter
(
)
;
int
Release
(
)
override
;
int
InitEncode
(
const
VideoCodec
*
inst
int
number_of_cores
size_t
max_payload_size
)
override
;
int
Encode
(
const
VideoFrame
&
input_image
const
CodecSpecificInfo
*
codec_specific_info
const
std
:
:
vector
<
FrameType
>
*
frame_types
)
override
;
int
RegisterEncodeCompleteCallback
(
EncodedImageCallback
*
callback
)
override
;
int
SetChannelParameters
(
uint32_t
packet_loss
int64_t
rtt
)
override
;
int
SetRateAllocation
(
const
BitrateAllocation
&
bitrate
uint32_t
new_framerate
)
override
;
EncodedImageCallback
:
:
Result
OnEncodedImage
(
size_t
stream_idx
const
EncodedImage
&
encoded_image
const
CodecSpecificInfo
*
codec_specific_info
const
RTPFragmentationHeader
*
fragmentation
)
;
VideoEncoder
:
:
ScalingSettings
GetScalingSettings
(
)
const
override
;
bool
SupportsNativeHandle
(
)
const
override
;
const
char
*
ImplementationName
(
)
const
override
;
private
:
struct
StreamInfo
{
StreamInfo
(
std
:
:
unique_ptr
<
VideoEncoder
>
encoder
std
:
:
unique_ptr
<
EncodedImageCallback
>
callback
uint16_t
width
uint16_t
height
bool
send_stream
)
:
encoder
(
std
:
:
move
(
encoder
)
)
callback
(
std
:
:
move
(
callback
)
)
width
(
width
)
height
(
height
)
key_frame_request
(
false
)
send_stream
(
send_stream
)
{
}
std
:
:
unique_ptr
<
VideoEncoder
>
encoder
;
std
:
:
unique_ptr
<
EncodedImageCallback
>
callback
;
uint16_t
width
;
uint16_t
height
;
bool
key_frame_request
;
bool
send_stream
;
}
;
static
void
PopulateStreamCodec
(
const
webrtc
:
:
VideoCodec
&
inst
int
stream_index
uint32_t
start_bitrate_kbps
bool
highest_resolution_stream
webrtc
:
:
VideoCodec
*
stream_codec
)
;
bool
Initialized
(
)
const
;
void
DestroyStoredEncoders
(
)
;
volatile
int
inited_
;
VideoEncoderFactory
*
const
factory_
;
cricket
:
:
WebRtcVideoEncoderFactory
*
const
cricket_factory_
;
VideoCodec
codec_
;
std
:
:
vector
<
StreamInfo
>
streaminfos_
;
EncodedImageCallback
*
encoded_complete_callback_
;
std
:
:
string
implementation_name_
;
rtc
:
:
SequencedTaskChecker
encoder_queue_
;
std
:
:
stack
<
std
:
:
unique_ptr
<
VideoEncoder
>
>
stored_encoders_
;
}
;
}
#
endif
