#
ifndef
MEDIA_BASE_MEDIACONSTANTS_H_
#
define
MEDIA_BASE_MEDIACONSTANTS_H_
#
include
<
string
>
namespace
cricket
{
extern
const
int
kVideoCodecClockrate
;
extern
const
int
kDataCodecClockrate
;
extern
const
int
kDataMaxBandwidth
;
extern
const
float
kHighSystemCpuThreshold
;
extern
const
float
kLowSystemCpuThreshold
;
extern
const
float
kProcessCpuThreshold
;
extern
const
char
kRtxCodecName
[
]
;
extern
const
char
kRedCodecName
[
]
;
extern
const
char
kUlpfecCodecName
[
]
;
extern
const
char
kFlexfecCodecName
[
]
;
extern
const
char
kFlexfecFmtpRepairWindow
[
]
;
extern
const
char
kCodecParamAssociatedPayloadType
[
]
;
extern
const
char
kOpusCodecName
[
]
;
extern
const
char
kIsacCodecName
[
]
;
extern
const
char
kL16CodecName
[
]
;
extern
const
char
kG722CodecName
[
]
;
extern
const
char
kIlbcCodecName
[
]
;
extern
const
char
kPcmuCodecName
[
]
;
extern
const
char
kPcmaCodecName
[
]
;
extern
const
char
kCnCodecName
[
]
;
extern
const
char
kDtmfCodecName
[
]
;
extern
const
char
kCodecParamPTime
[
]
;
extern
const
char
kCodecParamMaxPTime
[
]
;
extern
const
char
kCodecParamMinPTime
[
]
;
extern
const
char
kCodecParamSPropStereo
[
]
;
extern
const
char
kCodecParamStereo
[
]
;
extern
const
char
kCodecParamUseInbandFec
[
]
;
extern
const
char
kCodecParamUseDtx
[
]
;
extern
const
char
kCodecParamMaxAverageBitrate
[
]
;
extern
const
char
kCodecParamMaxPlaybackRate
[
]
;
extern
const
char
kCodecParamSctpProtocol
[
]
;
extern
const
char
kCodecParamSctpStreams
[
]
;
extern
const
char
kParamValueTrue
[
]
;
extern
const
char
kParamValueEmpty
[
]
;
extern
const
int
kOpusDefaultMaxPTime
;
extern
const
int
kOpusDefaultPTime
;
extern
const
int
kOpusDefaultMinPTime
;
extern
const
int
kOpusDefaultSPropStereo
;
extern
const
int
kOpusDefaultStereo
;
extern
const
int
kOpusDefaultUseInbandFec
;
extern
const
int
kOpusDefaultUseDtx
;
extern
const
int
kOpusDefaultMaxPlaybackRate
;
extern
const
int
kPreferredMaxPTime
;
extern
const
int
kPreferredMinPTime
;
extern
const
int
kPreferredSPropStereo
;
extern
const
int
kPreferredStereo
;
extern
const
int
kPreferredUseInbandFec
;
extern
const
char
kRtcpFbParamNack
[
]
;
extern
const
char
kRtcpFbNackParamPli
[
]
;
extern
const
char
kRtcpFbParamRemb
[
]
;
extern
const
char
kRtcpFbParamTransportCc
[
]
;
extern
const
char
kRtcpFbParamCcm
[
]
;
extern
const
char
kRtcpFbCcmParamFir
[
]
;
extern
const
char
kCodecParamMaxBitrate
[
]
;
extern
const
char
kCodecParamMinBitrate
[
]
;
extern
const
char
kCodecParamStartBitrate
[
]
;
extern
const
char
kCodecParamMaxQuantization
[
]
;
extern
const
char
kCodecParamPort
[
]
;
extern
const
int
kGoogleRtpDataCodecPlType
;
extern
const
char
kGoogleRtpDataCodecName
[
]
;
extern
const
int
kGoogleSctpDataCodecPlType
;
extern
const
char
kGoogleSctpDataCodecName
[
]
;
extern
const
char
kComfortNoiseCodecName
[
]
;
extern
const
char
kVp8CodecName
[
]
;
extern
const
char
kVp9CodecName
[
]
;
extern
const
char
kH264CodecName
[
]
;
extern
const
char
kH264FmtpProfileLevelId
[
]
;
extern
const
char
kH264FmtpLevelAsymmetryAllowed
[
]
;
extern
const
char
kH264FmtpPacketizationMode
[
]
;
extern
const
char
kH264FmtpSpropParameterSets
[
]
;
extern
const
char
kH264ProfileLevelConstrainedBaseline
[
]
;
extern
const
int
kDefaultVideoMaxFramerate
;
}
#
endif
