#
ifndef
WEBRTC_VIDEO_ENGINE_VIE_NETWORK_IMPL_H_
#
define
WEBRTC_VIDEO_ENGINE_VIE_NETWORK_IMPL_H_
#
include
"
webrtc
/
typedefs
.
h
"
#
include
"
webrtc
/
video_engine
/
include
/
vie_network
.
h
"
#
include
"
webrtc
/
video_engine
/
vie_ref_count
.
h
"
namespace
webrtc
{
class
ViESharedData
;
class
ViENetworkImpl
:
public
ViENetwork
public
ViERefCount
{
public
:
int
Release
(
)
override
;
void
SetBitrateConfig
(
int
video_channel
int
min_bitrate_bps
int
start_bitrate_bps
int
max_bitrate_bps
)
override
;
void
SetNetworkTransmissionState
(
const
int
video_channel
const
bool
is_transmitting
)
override
;
int
RegisterSendTransport
(
const
int
video_channel
Transport
&
transport
)
override
;
int
DeregisterSendTransport
(
const
int
video_channel
)
override
;
int
ReceivedRTPPacket
(
const
int
video_channel
const
void
*
data
const
size_t
length
const
PacketTime
&
packet_time
)
override
;
int
ReceivedRTCPPacket
(
const
int
video_channel
const
void
*
data
const
size_t
length
)
override
;
int
SetMTU
(
int
video_channel
unsigned
int
mtu
)
override
;
int
ReceivedBWEPacket
(
const
int
video_channel
int64_t
arrival_time_ms
size_t
payload_size
const
RTPHeader
&
header
)
override
;
protected
:
explicit
ViENetworkImpl
(
ViESharedData
*
shared_data
)
;
virtual
~
ViENetworkImpl
(
)
;
private
:
ViESharedData
*
shared_data_
;
}
;
}
#
endif
