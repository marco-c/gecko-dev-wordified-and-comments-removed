ASFLAGS
+
=
[
'
-
I
%
s
/
third_party
/
dav1d
/
src
/
'
%
TOPSRCDIR
'
-
DHAVE_AVX512ICL
=
1
'
]
LOCAL_INCLUDES
+
=
[
'
/
third_party
/
dav1d
/
'
'
/
third_party
/
dav1d
/
include
/
'
'
/
third_party
/
dav1d
/
src
/
'
]
DEFINES
[
'
DAV1D_API
'
]
=
'
'
CFLAGS
+
=
[
'
-
I
%
s
/
dist
/
include
/
dav1d
/
'
%
TOPOBJDIR
]
stack_alignment
=
0
if
CONFIG
[
'
TARGET_CPU
'
]
=
=
'
x86
'
:
if
CONFIG
[
'
OS_TARGET
'
]
=
=
'
WINNT
'
:
stack_alignment
=
4
ASFLAGS
+
=
[
'
-
I
%
s
/
media
/
libdav1d
/
asm
/
x86_32
/
win
/
'
%
TOPSRCDIR
]
else
:
ASFLAGS
+
=
[
'
-
I
%
s
/
media
/
libdav1d
/
asm
/
x86_32
/
'
%
TOPSRCDIR
]
stack_alignment
=
16
if
CONFIG
[
'
CC_TYPE
'
]
=
=
'
clang
'
:
CFLAGS
+
=
[
'
-
mstack
-
alignment
=
16
'
]
elif
CONFIG
[
'
CC_TYPE
'
]
=
=
'
gcc
'
:
CFLAGS
+
=
[
'
-
mpreferred
-
stack
-
boundary
=
4
'
]
elif
CONFIG
[
'
TARGET_CPU
'
]
=
=
'
x86_64
'
:
stack_alignment
=
16
if
CONFIG
[
'
OS_TARGET
'
]
=
=
'
Darwin
'
:
ASFLAGS
+
=
[
'
-
I
%
s
/
media
/
libdav1d
/
asm
/
x86_64
/
osx
/
'
%
TOPSRCDIR
]
elif
CONFIG
[
'
OS_TARGET
'
]
=
=
'
WINNT
'
:
ASFLAGS
+
=
[
'
-
I
%
s
/
media
/
libdav1d
/
asm
/
x86_64
/
win
/
'
%
TOPSRCDIR
]
else
:
ASFLAGS
+
=
[
'
-
I
%
s
/
media
/
libdav1d
/
asm
/
x86_64
/
linux
/
'
%
TOPSRCDIR
]
elif
CONFIG
[
'
TARGET_CPU
'
]
=
=
'
aarch64
'
:
stack_alignment
=
16
ASFLAGS
+
=
[
'
-
I
%
s
/
dist
/
include
/
dav1d
/
'
%
TOPOBJDIR
]
else
:
error
(
'
Cpu
arch
%
s
is
not
expected
'
%
CONFIG
[
'
TARGET_CPU
'
]
)
if
stack_alignment
=
=
0
:
error
(
'
Stack
alignment
cannot
be
zero
.
'
)
DEFINES
[
'
STACK_ALIGNMENT
'
]
=
stack_alignment
if
CONFIG
[
'
TARGET_CPU
'
]
in
(
'
x86
'
'
x86_64
'
)
:
ASFLAGS
+
=
[
'
-
Dprivate_prefix
=
dav1d
'
]
SOURCES
+
=
[
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
cpu
.
c
'
]
EXPORTS
.
dav1d
+
=
[
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
cpu
.
h
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
msac
.
h
'
]
if
CONFIG
[
'
TARGET_CPU
'
]
=
=
'
x86_64
'
:
SOURCES
+
=
[
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
cdef16_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
cdef16_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
cdef_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
cdef_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
filmgrain16_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
filmgrain16_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
filmgrain_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
filmgrain_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
ipred16_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
ipred_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
ipred_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
itx16_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
itx16_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
itx_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
itx_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
loopfilter16_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
loopfilter16_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
loopfilter_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
loopfilter_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
looprestoration16_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
looprestoration16_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
looprestoration_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
looprestoration_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
mc16_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
mc16_avx512
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
mc_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
mc_avx512
.
asm
'
]
SOURCES
+
=
[
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
cdef16_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
cdef_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
cpuid
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
filmgrain16_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
filmgrain_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
ipred16_avx2
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
ipred16_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
ipred_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
itx16_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
itx_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
loopfilter16_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
loopfilter_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
looprestoration16_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
looprestoration_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
mc16_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
mc_sse
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
msac
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
pal
.
asm
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
refmvs
.
asm
'
]
relative_path
=
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
x86
/
'
bitdepth_basenames
=
[
]
for
f
in
bitdepth_basenames
:
SOURCES
+
=
[
'
!
16bd_
%
s
'
%
f
]
GeneratedFile
(
'
16bd_
%
s
'
%
f
script
=
'
.
.
/
generate_source
.
py
'
entry_point
=
'
add_define
'
inputs
=
[
relative_path
+
f
]
flags
=
[
'
BITDEPTH
'
'
16
'
]
)
SOURCES
+
=
[
'
!
8bd_
%
s
'
%
f
]
GeneratedFile
(
'
8bd_
%
s
'
%
f
script
=
'
.
.
/
generate_source
.
py
'
entry_point
=
'
add_define
'
inputs
=
[
relative_path
+
f
]
flags
=
[
'
BITDEPTH
'
'
8
'
]
)
elif
CONFIG
[
'
TARGET_CPU
'
]
=
=
'
arm
'
or
CONFIG
[
'
TARGET_CPU
'
]
=
=
'
aarch64
'
:
SOURCES
+
=
[
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
cpu
.
c
'
]
EXPORTS
+
=
[
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
asm
-
offsets
.
h
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
cpu
.
h
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
msac
.
h
'
]
relative_path
=
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
'
bitdepth_basenames
=
[
]
for
f
in
bitdepth_basenames
:
SOURCES
+
=
[
'
!
16bd_
%
s
'
%
f
]
GeneratedFile
(
'
16bd_
%
s
'
%
f
script
=
'
.
.
/
generate_source
.
py
'
entry_point
=
'
add_define
'
inputs
=
[
relative_path
+
f
]
flags
=
[
'
BITDEPTH
'
'
16
'
]
)
SOURCES
+
=
[
'
!
8bd_
%
s
'
%
f
]
GeneratedFile
(
'
8bd_
%
s
'
%
f
script
=
'
.
.
/
generate_source
.
py
'
entry_point
=
'
add_define
'
inputs
=
[
relative_path
+
f
]
flags
=
[
'
BITDEPTH
'
'
8
'
]
)
if
CONFIG
[
'
TARGET_CPU
'
]
=
=
'
aarch64
'
:
SOURCES
+
=
[
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
cdef
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
cdef16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
cdef_tmpl
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
filmgrain
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
filmgrain16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
ipred
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
ipred16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
itx
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
itx16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
loopfilter
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
loopfilter16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
looprestoration
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
looprestoration16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
looprestoration_common
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
looprestoration_tmpl
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
mc
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
mc16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
mc_dotprod
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
msac
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
64
/
refmvs
.
S
'
]
elif
CONFIG
[
'
TARGET_CPU
'
]
=
=
'
arm
'
:
SOURCES
+
=
[
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
cdef
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
cdef16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
cdef_tmpl
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
filmgrain
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
filmgrain16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
ipred
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
ipred16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
itx
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
itx16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
loopfilter
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
loopfilter16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
looprestoration
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
looprestoration16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
looprestoration_common
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
looprestoration_tmpl
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
mc
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
mc16
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
msac
.
S
'
'
.
.
/
.
.
/
.
.
/
third_party
/
dav1d
/
src
/
arm
/
32
/
refmvs
.
S
'
]
if
CONFIG
[
'
TARGET_CPU
'
]
in
(
'
x86
'
'
x86_64
'
)
:
USE_NASM
=
True
elif
CONFIG
[
'
TARGET_CPU
'
]
=
=
'
aarch64
'
and
CONFIG
[
'
OS_TARGET
'
]
=
=
'
WINNT
'
:
USE_INTEGRATED_CLANGCL_AS
=
True
FINAL_LIBRARY
=
'
xul
'
AllowCompilerWarnings
(
)
