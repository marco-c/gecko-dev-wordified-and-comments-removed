private
:
inline
void
silentCarriageReturn
(
)
{
nextCharOnNewLine
=
true
;
lastCR
=
true
;
}
inline
void
silentLineFeed
(
)
{
nextCharOnNewLine
=
true
;
}
inline
char16_t
checkChar
(
char16_t
*
buf
int32_t
pos
)
{
char16_t
c
=
buf
[
pos
]
;
if
(
MOZ_UNLIKELY
(
nextCharOnNewLine
)
)
{
line
+
+
;
col
=
1
;
nextCharOnNewLine
=
false
;
}
else
if
(
MOZ_LIKELY
(
!
NS_IS_LOW_SURROGATE
(
c
)
)
)
{
col
+
+
;
}
return
c
;
}
int32_t
col
;
bool
nextCharOnNewLine
;
public
:
inline
int32_t
getColumnNumber
(
)
{
return
col
;
}
inline
void
setColumnNumberAndResetNextLine
(
int32_t
aCol
)
{
col
=
aCol
;
nextCharOnNewLine
=
false
;
}
inline
nsHtml5HtmlAttributes
*
GetAttributes
(
)
{
return
attributes
;
}
bool
EnsureBufferSpace
(
int32_t
aLength
)
;
bool
TemplatePushedOrHeadPopped
(
)
;
void
RememberGt
(
int32_t
aPos
)
;
void
AtKilobyteBoundary
(
)
{
suspendAfterCurrentTokenIfNotInText
(
)
;
}
bool
IsInTokenStartedAtKilobyteBoundary
(
)
{
return
suspensionAfterCurrentNonTextTokenPending
(
)
;
}
mozilla
:
:
UniquePtr
<
nsHtml5Highlighter
>
mViewSource
;
void
StartPlainText
(
)
;
void
EnableViewSource
(
nsHtml5Highlighter
*
aHighlighter
)
;
bool
ShouldFlushViewSource
(
)
;
mozilla
:
:
Result
<
bool
nsresult
>
FlushViewSource
(
)
;
void
StartViewSource
(
const
nsAutoString
&
aTitle
)
;
void
StartViewSourceCharacters
(
)
;
[
[
nodiscard
]
]
bool
EndViewSource
(
)
;
void
RewindViewSource
(
)
;
void
SetViewSourceOpSink
(
nsAHtml5TreeOpSink
*
aOpSink
)
;
void
errGarbageAfterLtSlash
(
)
;
void
errLtSlashGt
(
)
;
void
errWarnLtSlashInRcdata
(
)
;
void
errCharRefLacksSemicolon
(
)
;
void
errNoDigitsInNCR
(
)
;
void
errGtInSystemId
(
)
;
void
errGtInPublicId
(
)
;
void
errNamelessDoctype
(
)
;
void
errConsecutiveHyphens
(
)
;
void
errPrematureEndOfComment
(
)
;
void
errBogusComment
(
)
;
void
errUnquotedAttributeValOrNull
(
char16_t
c
)
;
void
errSlashNotFollowedByGt
(
)
;
void
errNoSpaceBetweenAttributes
(
)
;
void
errLtOrEqualsOrGraveInUnquotedAttributeOrNull
(
char16_t
c
)
;
void
errAttributeValueMissing
(
)
;
void
errBadCharBeforeAttributeNameOrNull
(
char16_t
c
)
;
void
errEqualsSignBeforeAttributeName
(
)
;
void
errBadCharAfterLt
(
char16_t
c
)
;
void
errLtGt
(
)
;
void
errProcessingInstruction
(
)
;
void
errUnescapedAmpersandInterpretedAsCharacterReference
(
)
;
void
errNotSemicolonTerminated
(
)
;
void
errNoNamedCharacterMatch
(
)
;
void
errQuoteBeforeAttributeName
(
char16_t
c
)
;
void
errQuoteOrLtInAttributeNameOrNull
(
char16_t
c
)
;
void
errExpectedPublicId
(
)
;
void
errBogusDoctype
(
)
;
void
maybeErrAttributesOnEndTag
(
nsHtml5HtmlAttributes
*
attrs
)
;
void
maybeErrSlashInEndTag
(
bool
selfClosing
)
;
char16_t
errNcrNonCharacter
(
char16_t
ch
)
;
void
errAstralNonCharacter
(
int32_t
ch
)
;
void
errNcrSurrogate
(
)
;
char16_t
errNcrControlChar
(
char16_t
ch
)
;
void
errNcrCr
(
)
;
void
errNcrInC1Range
(
)
;
void
errEofInPublicId
(
)
;
void
errEofInComment
(
)
;
void
errEofInDoctype
(
)
;
void
errEofInAttributeValue
(
)
;
void
errEofInAttributeName
(
)
;
void
errEofWithoutGt
(
)
;
void
errEofInTagName
(
)
;
void
errEofInEndTag
(
)
;
void
errEofAfterLt
(
)
;
void
errNcrOutOfRange
(
)
;
void
errNcrUnassigned
(
)
;
void
errDuplicateAttribute
(
)
;
void
errEofInSystemId
(
)
;
void
errExpectedSystemId
(
)
;
void
errMissingSpaceBeforeDoctypeName
(
)
;
void
errNestedComment
(
)
;
void
errNcrControlChar
(
)
;
void
errNcrZero
(
)
;
void
errNoSpaceBetweenDoctypeSystemKeywordAndQuote
(
)
;
void
errNoSpaceBetweenPublicAndSystemIds
(
)
;
void
errNoSpaceBetweenDoctypePublicKeywordAndQuote
(
)
;
