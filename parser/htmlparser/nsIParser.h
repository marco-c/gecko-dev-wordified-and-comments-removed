#
ifndef
NS_IPARSER___
#
define
NS_IPARSER___
#
include
"
nsISupports
.
h
"
#
include
"
nsIStreamListener
.
h
"
#
include
"
nsIDTD
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsIAtom
.
h
"
#
include
"
nsParserBase
.
h
"
#
define
NS_IPARSER_IID
\
{
0x2c4ad90a
0x740e
0x4212
\
{
0xba
0x3f
0xfe
0xac
0xda
0x4b
0x92
0x9e
}
}
#
define
NS_IDEBUG_DUMP_CONTENT_IID
\
{
0x41421c60
0x310a
0x11d4
\
{
0x81
0x6f
0x0
0x0
0x64
0x65
0x73
0x74
}
}
class
nsIContentSink
;
class
nsIRequestObserver
;
class
nsString
;
class
nsIURI
;
class
nsIChannel
;
class
nsIContent
;
enum
eParserCommands
{
eViewNormal
eViewSource
eViewFragment
eViewErrors
}
;
enum
eParserDocType
{
ePlainText
=
0
eXML
eHTML_Quirks
eHTML_Strict
}
;
enum
eStreamState
{
eNone
eOnStart
eOnDataAvail
eOnStop
}
;
class
nsIParser
:
public
nsParserBase
{
public
:
NS_DECLARE_STATIC_IID_ACCESSOR
(
NS_IPARSER_IID
)
NS_IMETHOD_
(
void
)
SetContentSink
(
nsIContentSink
*
aSink
)
=
0
;
NS_IMETHOD_
(
nsIContentSink
*
)
GetContentSink
(
void
)
=
0
;
NS_IMETHOD_
(
void
)
GetCommand
(
nsCString
&
aCommand
)
=
0
;
NS_IMETHOD_
(
void
)
SetCommand
(
const
char
*
aCommand
)
=
0
;
NS_IMETHOD_
(
void
)
SetCommand
(
eParserCommands
aParserCommand
)
=
0
;
NS_IMETHOD_
(
void
)
SetDocumentCharset
(
const
nsACString
&
aCharset
int32_t
aSource
)
=
0
;
NS_IMETHOD_
(
void
)
GetDocumentCharset
(
nsACString
&
oCharset
int32_t
&
oSource
)
=
0
;
NS_IMETHOD
GetChannel
(
nsIChannel
*
*
aChannel
)
override
=
0
;
NS_IMETHOD
GetDTD
(
nsIDTD
*
*
aDTD
)
=
0
;
virtual
nsIStreamListener
*
GetStreamListener
(
)
=
0
;
NS_IMETHOD
ContinueInterruptedParsing
(
)
=
0
;
NS_IMETHOD_
(
void
)
BlockParser
(
)
=
0
;
NS_IMETHOD_
(
void
)
UnblockParser
(
)
=
0
;
NS_IMETHOD_
(
void
)
ContinueInterruptedParsingAsync
(
)
=
0
;
NS_IMETHOD_
(
bool
)
IsParserEnabled
(
)
override
=
0
;
NS_IMETHOD_
(
bool
)
IsComplete
(
)
=
0
;
NS_IMETHOD
Parse
(
nsIURI
*
aURL
nsIRequestObserver
*
aListener
=
nullptr
void
*
aKey
=
0
nsDTDMode
aMode
=
eDTDMode_autodetect
)
=
0
;
NS_IMETHOD
Terminate
(
void
)
=
0
;
NS_IMETHOD
ParseFragment
(
const
nsAString
&
aSourceBuffer
nsTArray
<
nsString
>
&
aTagStack
)
=
0
;
NS_IMETHOD
BuildModel
(
void
)
=
0
;
NS_IMETHOD
CancelParsingEvents
(
)
=
0
;
virtual
void
Reset
(
)
=
0
;
virtual
bool
IsInsertionPointDefined
(
)
=
0
;
virtual
void
PushDefinedInsertionPoint
(
)
=
0
;
virtual
void
PopDefinedInsertionPoint
(
)
=
0
;
virtual
void
MarkAsNotScriptCreated
(
const
char
*
aCommand
)
=
0
;
virtual
bool
IsScriptCreated
(
)
=
0
;
}
;
NS_DEFINE_STATIC_IID_ACCESSOR
(
nsIParser
NS_IPARSER_IID
)
#
define
NS_IPARSER_FLAG_XML
0x00000200
#
define
NS_IPARSER_FLAG_HTML
0x00000400
#
endif
