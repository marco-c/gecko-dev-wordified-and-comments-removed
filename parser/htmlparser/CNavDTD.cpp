#
include
"
nsISupports
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsIParser
.
h
"
#
include
"
CNavDTD
.
h
"
#
include
"
nsIHTMLContentSink
.
h
"
NS_IMPL_ISUPPORTS
(
CNavDTD
nsIDTD
)
;
CNavDTD
:
:
CNavDTD
(
)
{
}
CNavDTD
:
:
~
CNavDTD
(
)
{
}
NS_IMETHODIMP
CNavDTD
:
:
WillBuildModel
(
const
CParserContext
&
aParserContext
nsIContentSink
*
aSink
)
{
return
NS_OK
;
}
NS_IMETHODIMP
CNavDTD
:
:
BuildModel
(
nsIContentSink
*
aSink
)
{
nsCOMPtr
<
nsIHTMLContentSink
>
sink
=
do_QueryInterface
(
aSink
)
;
if
(
!
sink
)
{
return
NS_ERROR_HTMLPARSER_STOPPARSING
;
}
nsresult
rv
=
sink
-
>
OpenContainer
(
nsIHTMLContentSink
:
:
eHTML
)
;
NS_ENSURE_SUCCESS
(
rv
rv
)
;
rv
=
sink
-
>
OpenContainer
(
nsIHTMLContentSink
:
:
eBody
)
;
NS_ENSURE_SUCCESS
(
rv
rv
)
;
rv
=
sink
-
>
CloseContainer
(
nsIHTMLContentSink
:
:
eBody
)
;
MOZ_ASSERT
(
NS_SUCCEEDED
(
rv
)
)
;
rv
=
sink
-
>
CloseContainer
(
nsIHTMLContentSink
:
:
eHTML
)
;
MOZ_ASSERT
(
NS_SUCCEEDED
(
rv
)
)
;
return
NS_OK
;
}
NS_IMETHODIMP
CNavDTD
:
:
DidBuildModel
(
nsresult
anErrorCode
)
{
return
NS_OK
;
}
NS_IMETHODIMP_
(
void
)
CNavDTD
:
:
Terminate
(
)
{
}
NS_IMETHODIMP_
(
int32_t
)
CNavDTD
:
:
GetType
(
)
{
return
NS_IPARSER_FLAG_HTML
;
}
NS_IMETHODIMP_
(
nsDTDMode
)
CNavDTD
:
:
GetMode
(
)
const
{
return
eDTDMode_quirks
;
}
