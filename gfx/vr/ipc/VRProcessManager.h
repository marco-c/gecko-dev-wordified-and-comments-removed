#
ifndef
GFX_VR_PROCESS_MANAGER_H
#
define
GFX_VR_PROCESS_MANAGER_H
#
include
"
VRProcessParent
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
VRManagerChild
;
class
PVRGPUChild
;
class
VRChild
;
class
VRProcessManager
final
:
public
VRProcessParent
:
:
Listener
{
public
:
static
VRProcessManager
*
Get
(
)
;
static
void
Initialize
(
)
;
static
void
Shutdown
(
)
;
~
VRProcessManager
(
)
;
void
LaunchVRProcess
(
)
;
bool
CreateGPUBridges
(
base
:
:
ProcessId
aOtherProcess
mozilla
:
:
ipc
:
:
Endpoint
<
PVRGPUChild
>
*
aOutVRBridge
)
;
VRChild
*
GetVRChild
(
)
;
virtual
void
OnProcessLaunchComplete
(
VRProcessParent
*
aParent
)
override
;
virtual
void
OnProcessUnexpectedShutdown
(
VRProcessParent
*
aParent
)
override
;
private
:
VRProcessManager
(
)
;
DISALLOW_COPY_AND_ASSIGN
(
VRProcessManager
)
;
bool
CreateGPUVRManager
(
base
:
:
ProcessId
aOtherProcess
mozilla
:
:
ipc
:
:
Endpoint
<
PVRGPUChild
>
*
aOutEndpoint
)
;
void
OnXPCOMShutdown
(
)
;
void
CleanShutdown
(
)
;
void
DestroyProcess
(
)
;
void
DisableVRProcess
(
const
char
*
aMessage
)
;
class
Observer
final
:
public
nsIObserver
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIOBSERVER
explicit
Observer
(
VRProcessManager
*
aManager
)
;
protected
:
~
Observer
(
)
{
}
VRProcessManager
*
mManager
;
}
;
friend
class
Observer
;
RefPtr
<
Observer
>
mObserver
;
VRProcessParent
*
mProcess
;
}
;
}
}
#
endif
