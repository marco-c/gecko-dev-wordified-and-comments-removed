#
ifndef
mozilla_gfx_vr_VRMessageUtils_h
#
define
mozilla_gfx_vr_VRMessageUtils_h
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
mozilla
/
ArrayUtils
.
h
"
#
include
"
mozilla
/
GfxMessageUtils
.
h
"
#
include
"
mozilla
/
dom
/
GamepadMessageUtils
.
h
"
#
include
"
VRManager
.
h
"
#
include
"
gfxVR
.
h
"
namespace
IPC
{
template
<
>
struct
ParamTraits
<
mozilla
:
:
gfx
:
:
VRControllerType
>
:
public
ContiguousEnumSerializer
<
mozilla
:
:
gfx
:
:
VRControllerType
mozilla
:
:
gfx
:
:
VRControllerType
:
:
_empty
mozilla
:
:
gfx
:
:
VRControllerType
:
:
_end
>
{
}
;
static_assert
(
std
:
:
is_pod
<
mozilla
:
:
gfx
:
:
VRHMDSensorState
>
:
:
value
"
mozilla
:
:
gfx
:
:
VRHMDSensorState
must
be
a
POD
type
.
"
)
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
gfx
:
:
VRHMDSensorState
>
:
public
PlainOldDataSerializer
<
mozilla
:
:
gfx
:
:
VRHMDSensorState
>
{
}
;
static_assert
(
std
:
:
is_pod
<
mozilla
:
:
gfx
:
:
VRDisplayInfo
>
:
:
value
"
mozilla
:
:
gfx
:
:
VRDisplayInfo
must
be
a
POD
type
.
"
)
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
gfx
:
:
VRDisplayInfo
>
:
public
PlainOldDataSerializer
<
mozilla
:
:
gfx
:
:
VRDisplayInfo
>
{
}
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
gfx
:
:
VRSubmitFrameResultInfo
>
{
typedef
mozilla
:
:
gfx
:
:
VRSubmitFrameResultInfo
paramType
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
{
WriteParam
(
aMsg
aParam
.
mBase64Image
)
;
WriteParam
(
aMsg
aParam
.
mFormat
)
;
WriteParam
(
aMsg
aParam
.
mWidth
)
;
WriteParam
(
aMsg
aParam
.
mHeight
)
;
WriteParam
(
aMsg
aParam
.
mFrameNum
)
;
}
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
{
if
(
!
ReadParam
(
aMsg
aIter
&
(
aResult
-
>
mBase64Image
)
)
|
|
!
ReadParam
(
aMsg
aIter
&
(
aResult
-
>
mFormat
)
)
|
|
!
ReadParam
(
aMsg
aIter
&
(
aResult
-
>
mWidth
)
)
|
|
!
ReadParam
(
aMsg
aIter
&
(
aResult
-
>
mHeight
)
)
|
|
!
ReadParam
(
aMsg
aIter
&
(
aResult
-
>
mFrameNum
)
)
)
{
return
false
;
}
return
true
;
}
}
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
gfx
:
:
VRDisplayCapabilityFlags
>
:
public
BitFlagsEnumSerializer
<
mozilla
:
:
gfx
:
:
VRDisplayCapabilityFlags
mozilla
:
:
gfx
:
:
VRDisplayCapabilityFlags
:
:
Cap_All
>
{
}
;
}
#
endif
