#
ifndef
GFX_VR_GPU_PARENT_H
#
define
GFX_VR_GPU_PARENT_H
#
include
"
mozilla
/
gfx
/
PVRGPUParent
.
h
"
#
include
"
VRService
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
VRGPUParent
final
:
public
PVRGPUParent
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
VRGPUParent
final
)
friend
class
PVRGPUParent
;
public
:
static
RefPtr
<
VRGPUParent
>
CreateForGPU
(
Endpoint
<
PVRGPUParent
>
&
&
aEndpoint
)
;
virtual
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
bool
IsClosed
(
)
;
protected
:
void
Bind
(
Endpoint
<
PVRGPUParent
>
&
&
aEndpoint
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvStartVRService
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvStopVRService
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvPuppetReset
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvPuppetSubmit
(
const
nsTArray
<
uint64_t
>
&
aBuffer
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvPuppetCheckForCompletion
(
)
;
private
:
explicit
VRGPUParent
(
ipc
:
:
EndpointProcInfo
aChildProcess
)
;
~
VRGPUParent
(
)
;
void
DeferredDestroy
(
)
;
#
if
!
defined
(
MOZ_WIDGET_ANDROID
)
RefPtr
<
VRService
>
mVRService
;
#
endif
bool
mClosed
;
DISALLOW_COPY_AND_ASSIGN
(
VRGPUParent
)
;
}
;
}
}
#
endif
