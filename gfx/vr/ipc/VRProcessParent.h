#
ifndef
GFX_VR_PROCESS_PARENT_H
#
define
GFX_VR_PROCESS_PARENT_H
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
ipc
/
GeckoChildProcessHost
.
h
"
#
include
"
mozilla
/
ipc
/
TaskFactory
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
VRChild
;
class
VRProcessParent
final
:
public
mozilla
:
:
ipc
:
:
GeckoChildProcessHost
{
public
:
explicit
VRProcessParent
(
)
;
~
VRProcessParent
(
)
;
bool
Launch
(
)
;
void
Shutdown
(
)
;
void
DestroyProcess
(
)
;
bool
CanShutdown
(
)
override
{
return
true
;
}
void
OnChannelError
(
)
override
;
void
OnChannelConnected
(
int32_t
peer_pid
)
override
;
void
OnChannelConnectedTask
(
)
;
void
OnChannelErrorTask
(
)
;
void
OnChannelClosed
(
)
;
base
:
:
ProcessId
OtherPid
(
)
;
VRChild
*
GetActor
(
)
const
{
return
mVRChild
.
get
(
)
;
}
private
:
DISALLOW_COPY_AND_ASSIGN
(
VRProcessParent
)
;
void
InitAfterConnect
(
bool
aSucceeded
)
;
void
KillHard
(
const
char
*
aReason
)
;
UniquePtr
<
VRChild
>
mVRChild
;
mozilla
:
:
ipc
:
:
TaskFactory
<
VRProcessParent
>
mTaskFactory
;
nsCOMPtr
<
nsIThread
>
mLaunchThread
;
bool
mChannelClosed
;
}
;
}
}
#
endif
