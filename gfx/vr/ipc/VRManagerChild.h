#
ifndef
MOZILLA_GFX_VR_VRMANAGERCHILD_H
#
define
MOZILLA_GFX_VR_VRMANAGERCHILD_H
#
include
"
mozilla
/
gfx
/
PVRManagerChild
.
h
"
#
include
"
ThreadSafeRefcountingWithMainThreadDestruction
.
h
"
namespace
mozilla
{
namespace
dom
{
class
Navigator
;
class
VRDevice
;
}
namespace
gfx
{
class
VRDeviceProxy
;
class
VRManagerChild
:
public
PVRManagerChild
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING_WITH_MAIN_THREAD_DESTRUCTION
(
VRManagerChild
)
bool
GetVRDevices
(
nsTArray
<
RefPtr
<
VRDeviceProxy
>
>
&
aDevices
)
;
bool
RefreshVRDevicesWithCallback
(
dom
:
:
Navigator
*
aNavigator
)
;
static
VRManagerChild
*
StartUpInChildProcess
(
Transport
*
aTransport
ProcessId
aOtherProcess
)
;
static
void
StartUpSameProcess
(
)
;
static
void
ShutDown
(
)
;
static
VRManagerChild
*
Get
(
)
;
protected
:
explicit
VRManagerChild
(
)
;
~
VRManagerChild
(
)
;
void
Destroy
(
)
;
static
void
DeferredDestroy
(
RefPtr
<
VRManagerChild
>
aVRManagerChild
)
;
virtual
bool
RecvUpdateDeviceInfo
(
nsTArray
<
VRDeviceUpdate
>
&
&
aDeviceUpdates
)
override
;
virtual
bool
RecvUpdateDeviceSensors
(
nsTArray
<
VRSensorUpdate
>
&
&
aDeviceSensorUpdates
)
override
;
friend
class
layers
:
:
CompositorChild
;
private
:
nsTArray
<
RefPtr
<
VRDeviceProxy
>
>
mDevices
;
nsTArray
<
dom
:
:
Navigator
*
>
mNavigatorCallbacks
;
}
;
}
}
#
endif
