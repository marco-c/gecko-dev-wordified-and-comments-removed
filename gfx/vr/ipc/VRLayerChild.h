#
ifndef
GFX_VR_LAYERCHILD_H
#
define
GFX_VR_LAYERCHILD_H
#
include
"
VRManagerChild
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
gfx
/
PVRLayerChild
.
h
"
#
include
"
gfxVR
.
h
"
class
nsICanvasRenderingContextInternal
;
namespace
mozilla
{
class
WebGLContext
;
namespace
dom
{
class
HTMLCanvasElement
;
}
namespace
layers
{
class
SharedSurfaceTextureClient
;
}
namespace
gl
{
class
SurfaceFactory
;
}
namespace
gfx
{
class
VRLayerChild
:
public
PVRLayerChild
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
VRLayerChild
)
public
:
static
PVRLayerChild
*
CreateIPDLActor
(
)
;
static
bool
DestroyIPDLActor
(
PVRLayerChild
*
actor
)
;
void
Initialize
(
dom
:
:
HTMLCanvasElement
*
aCanvasElement
const
gfx
:
:
Rect
&
aLeftEyeRect
const
gfx
:
:
Rect
&
aRightEyeRect
)
;
void
SubmitFrame
(
const
VRDisplayInfo
&
aDisplayInfo
)
;
bool
IsIPCOpen
(
)
;
private
:
VRLayerChild
(
)
;
virtual
~
VRLayerChild
(
)
;
void
ClearSurfaces
(
)
;
virtual
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
RefPtr
<
dom
:
:
HTMLCanvasElement
>
mCanvasElement
;
bool
mIPCOpen
;
void
AddIPDLReference
(
)
;
void
ReleaseIPDLReference
(
)
;
gfx
:
:
Rect
mLeftEyeRect
;
gfx
:
:
Rect
mRightEyeRect
;
uint64_t
mLastSubmittedFrameId
;
}
;
}
}
#
endif
