#
ifndef
GFX_VR_DISPLAY_LOCAL_H
#
define
GFX_VR_DISPLAY_LOCAL_H
#
include
"
gfxVR
.
h
"
#
include
"
VRDisplayHost
.
h
"
#
if
defined
(
XP_WIN
)
#
include
<
d3d11_1
.
h
>
#
elif
defined
(
XP_MACOSX
)
class
MacIOSurface
;
#
endif
namespace
mozilla
{
namespace
gfx
{
class
VRThread
;
class
VRDisplayLocal
:
public
VRDisplayHost
{
public
:
#
if
defined
(
XP_WIN
)
virtual
bool
SubmitFrame
(
ID3D11Texture2D
*
aSource
const
IntSize
&
aSize
const
gfx
:
:
Rect
&
aLeftEyeRect
const
gfx
:
:
Rect
&
aRightEyeRect
)
=
0
;
#
elif
defined
(
XP_MACOSX
)
virtual
bool
SubmitFrame
(
MacIOSurface
*
aMacIOSurface
const
IntSize
&
aSize
const
gfx
:
:
Rect
&
aLeftEyeRect
const
gfx
:
:
Rect
&
aRightEyeRect
)
=
0
;
#
elif
defined
(
MOZ_WIDGET_ANDROID
)
virtual
bool
SubmitFrame
(
const
mozilla
:
:
layers
:
:
SurfaceTextureDescriptor
&
aSurface
const
gfx
:
:
Rect
&
aLeftEyeRect
const
gfx
:
:
Rect
&
aRightEyeRect
)
=
0
;
#
endif
protected
:
explicit
VRDisplayLocal
(
VRDeviceType
aType
)
;
virtual
~
VRDisplayLocal
(
)
;
private
:
bool
SubmitFrame
(
const
layers
:
:
SurfaceDescriptor
&
aTexture
uint64_t
aFrameId
const
gfx
:
:
Rect
&
aLeftEyeRect
const
gfx
:
:
Rect
&
aRightEyeRect
)
final
;
}
;
}
}
#
endif
