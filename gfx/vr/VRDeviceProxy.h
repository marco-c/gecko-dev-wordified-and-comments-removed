#
ifndef
GFX_VR_PROXY_H
#
define
GFX_VR_PROXY_H
#
include
"
nsIScreen
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
gfxVR
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
VRManagerChild
;
class
VRDeviceProxy
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
VRDeviceProxy
)
explicit
VRDeviceProxy
(
const
VRDeviceUpdate
&
aDeviceUpdate
)
;
void
UpdateDeviceInfo
(
const
VRDeviceUpdate
&
aDeviceUpdate
)
;
void
UpdateSensorState
(
const
VRHMDSensorState
&
aSensorState
)
;
const
VRDeviceInfo
&
GetDeviceInfo
(
)
const
{
return
mDeviceInfo
;
}
virtual
VRHMDSensorState
GetSensorState
(
)
;
virtual
VRHMDSensorState
GetImmediateSensorState
(
)
;
bool
SetFOV
(
const
VRFieldOfView
&
aFOVLeft
const
VRFieldOfView
&
aFOVRight
double
zNear
double
zFar
)
;
virtual
void
ZeroSensor
(
)
;
nsIScreen
*
GetScreen
(
)
{
return
mScreen
;
}
protected
:
virtual
~
VRDeviceProxy
(
)
;
VRDeviceInfo
mDeviceInfo
;
VRHMDSensorState
mSensorState
;
nsCOMPtr
<
nsIScreen
>
mScreen
;
static
already_AddRefed
<
nsIScreen
>
MakeFakeScreen
(
const
IntRect
&
aScreenRect
)
;
}
;
}
}
#
endif
