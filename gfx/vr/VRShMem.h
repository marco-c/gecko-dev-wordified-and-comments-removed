#
ifndef
GFX_VR_VRSHMEM_H
#
define
GFX_VR_VRSHMEM_H
#
include
"
moz_external_vr
.
h
"
#
include
"
base
/
process
.
h
"
#
include
<
functional
>
namespace
mozilla
{
namespace
gfx
{
class
VRShMem
final
{
public
:
VRShMem
(
volatile
VRExternalShmem
*
aShmem
bool
aSameProcess
bool
aIsParentProcess
)
;
~
VRShMem
(
)
=
default
;
void
CreateShMem
(
)
;
void
CloseShMem
(
)
;
bool
JoinShMem
(
)
;
void
LeaveShMem
(
)
;
void
PushBrowserState
(
VRBrowserState
&
aBrowserState
bool
aNotifyCond
)
;
void
PullBrowserState
(
mozilla
:
:
gfx
:
:
VRBrowserState
&
aState
)
;
void
PushSystemState
(
const
mozilla
:
:
gfx
:
:
VRSystemState
&
aState
)
;
void
PullSystemState
(
VRDisplayState
&
aDisplayState
VRHMDSensorState
&
aSensorState
VRControllerState
(
&
aControllerState
)
[
kVRControllerMaxCount
]
bool
&
aEnumerationCompleted
const
std
:
:
function
<
bool
(
)
>
&
aWaitCondition
=
nullptr
)
;
private
:
volatile
VRExternalShmem
*
mExternalShmem
=
nullptr
;
bool
mSameProcess
=
false
;
#
if
defined
(
XP_WIN
)
bool
mIsParentProcess
=
false
;
#
endif
#
if
defined
(
XP_MACOSX
)
int
mShmemFD
;
#
elif
defined
(
XP_WIN
)
base
:
:
ProcessHandle
mShmemFile
;
base
:
:
ProcessHandle
mMutex
;
#
endif
#
if
!
defined
(
MOZ_WIDGET_ANDROID
)
int64_t
mBrowserGeneration
=
0
;
#
endif
}
;
}
}
#
endif
