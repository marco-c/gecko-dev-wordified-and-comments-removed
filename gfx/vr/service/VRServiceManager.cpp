#
include
"
VRServiceManager
.
h
"
#
include
"
VRGPUChild
.
h
"
#
include
"
mozilla
/
gfx
/
GPUParent
.
h
"
namespace
mozilla
{
namespace
gfx
{
VRServiceManager
:
:
VRServiceManager
(
)
#
if
!
defined
(
MOZ_WIDGET_ANDROID
)
:
mVRService
(
nullptr
)
#
endif
{
}
VRServiceManager
&
VRServiceManager
:
:
Get
(
)
{
static
VRServiceManager
instance
;
return
instance
;
}
void
VRServiceManager
:
:
CreateVRProcess
(
)
{
RefPtr
<
Runnable
>
task
=
NS_NewRunnableFunction
(
"
GPUParent
:
:
SendCreateVRProcess
"
[
]
(
)
-
>
void
{
gfx
:
:
GPUParent
*
gpu
=
GPUParent
:
:
GetSingleton
(
)
;
MOZ_ASSERT
(
gpu
)
;
Unused
<
<
gpu
-
>
SendCreateVRProcess
(
)
;
}
)
;
NS_DispatchToMainThread
(
task
.
forget
(
)
)
;
}
void
VRServiceManager
:
:
ShutdownVRProcess
(
)
{
if
(
VRGPUChild
:
:
IsCreated
(
)
)
{
VRGPUChild
*
vrGPUChild
=
VRGPUChild
:
:
Get
(
)
;
vrGPUChild
-
>
SendStopVRService
(
)
;
vrGPUChild
-
>
Close
(
)
;
VRGPUChild
:
:
Shutdown
(
)
;
}
if
(
gfxPrefs
:
:
VRProcessEnabled
(
)
)
{
gfx
:
:
GPUParent
*
gpu
=
GPUParent
:
:
GetSingleton
(
)
;
MOZ_ASSERT
(
gpu
)
;
Unused
<
<
gpu
-
>
SendShutdownVRProcess
(
)
;
}
}
void
VRServiceManager
:
:
CreateService
(
)
{
if
(
!
gfxPrefs
:
:
VRProcessEnabled
(
)
)
{
mVRService
=
VRService
:
:
Create
(
)
;
}
}
void
VRServiceManager
:
:
Start
(
)
{
if
(
mVRService
)
{
mVRService
-
>
Start
(
)
;
}
}
void
VRServiceManager
:
:
Stop
(
)
{
if
(
mVRService
)
{
mVRService
-
>
Stop
(
)
;
}
}
void
VRServiceManager
:
:
Shutdown
(
)
{
Stop
(
)
;
mVRService
=
nullptr
;
}
void
VRServiceManager
:
:
Refresh
(
)
{
if
(
mVRService
)
{
mVRService
-
>
Refresh
(
)
;
}
}
bool
VRServiceManager
:
:
IsServiceValid
(
)
{
return
(
mVRService
!
=
nullptr
)
;
}
VRExternalShmem
*
VRServiceManager
:
:
GetAPIShmem
(
)
{
#
if
!
defined
(
MOZ_WIDGET_ANDROID
)
return
mVRService
-
>
GetAPIShmem
(
)
;
#
endif
return
nullptr
;
}
}
}
