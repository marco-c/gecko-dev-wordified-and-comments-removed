#
ifndef
PIXMAN_ARM_ASM_H
#
define
PIXMAN_ARM_ASM_H
#
ifdef
HAVE_CONFIG_H
#
include
"
pixman
-
config
.
h
"
#
endif
#
if
defined
(
__ARM_FEATURE_BTI_DEFAULT
)
&
&
__ARM_FEATURE_BTI_DEFAULT
=
=
1
#
define
BTI_C
hint
34
/
*
bti
c
:
for
calls
IE
bl
instructions
*
/
#
define
GNU_PROPERTY_AARCH64_BTI
1
/
*
bit
0
GNU
Notes
is
for
BTI
support
*
/
#
else
#
define
BTI_C
#
define
GNU_PROPERTY_AARCH64_BTI
0
#
endif
#
if
defined
(
__ARM_FEATURE_PAC_DEFAULT
)
#
if
__ARM_FEATURE_PAC_DEFAULT
&
1
#
define
SIGN_LR
hint
25
/
*
paciasp
:
sign
with
the
A
key
*
/
#
define
VERIFY_LR
hint
29
/
*
autiasp
:
verify
with
the
b
key
*
/
#
elif
__ARM_FEATURE_PAC_DEFAULT
&
2
#
define
SIGN_LR
hint
27
/
*
pacibsp
:
sign
with
the
b
key
*
/
#
define
VERIFY_LR
hint
31
/
*
autibsp
:
verify
with
the
b
key
*
/
#
endif
#
define
GNU_PROPERTY_AARCH64_POINTER_AUTH
2
/
*
bit
1
GNU
Notes
is
for
PAC
support
*
/
#
else
#
define
SIGN_LR
BTI_C
#
define
VERIFY_LR
#
define
GNU_PROPERTY_AARCH64_POINTER_AUTH
0
#
endif
#
if
GNU_PROPERTY_AARCH64_BTI
!
=
0
|
|
GNU_PROPERTY_AARCH64_POINTER_AUTH
!
=
0
.
pushsection
.
note
.
gnu
.
property
"
a
"
;
.
balign
8
;
.
long
4
;
.
long
0x10
;
.
long
0x5
;
.
asciz
"
GNU
"
;
.
long
0xc0000000
;
.
long
4
;
.
long
(
GNU_PROPERTY_AARCH64_BTI
|
GNU_PROPERTY_AARCH64_POINTER_AUTH
)
;
.
long
0
;
.
popsection
;
#
endif
.
macro
pixman_asm_function_impl
fname
#
ifdef
ASM_HAVE_FUNC_DIRECTIVE
.
func
\
fname
#
endif
.
global
\
fname
#
ifdef
__ELF__
.
hidden
\
fname
.
type
\
fname
%
function
#
endif
\
fname
:
SIGN_LR
.
endm
.
macro
pixman_asm_function
fname
#
ifdef
ASM_LEADING_UNDERSCORE
pixman_asm_function_impl
_
\
fname
#
else
pixman_asm_function_impl
\
fname
#
endif
.
endm
.
macro
pixman_syntax_unified
#
ifdef
ASM_HAVE_SYNTAX_UNIFIED
.
syntax
unified
#
endif
.
endm
.
macro
pixman_end_asm_function
#
ifdef
ASM_HAVE_FUNC_DIRECTIVE
.
endfunc
#
endif
.
endm
#
endif
