#
ifndef
CAIRO_MEMPOOL_PRIVATE_H
#
define
CAIRO_MEMPOOL_PRIVATE_H
#
include
"
cairo
-
compiler
-
private
.
h
"
#
include
"
cairo
-
error
-
private
.
h
"
#
include
<
stddef
.
h
>
CAIRO_BEGIN_DECLS
typedef
struct
_cairo_mempool
cairo_mempool_t
;
struct
_cairo_mempool
{
char
*
base
;
struct
_cairo_memblock
{
int
bits
;
cairo_list_t
link
;
}
*
blocks
;
cairo_list_t
free
[
32
]
;
unsigned
char
*
map
;
unsigned
int
num_blocks
;
int
min_bits
;
int
num_sizes
;
int
max_free_bits
;
size_t
free_bytes
;
size_t
max_bytes
;
}
;
cairo_private
cairo_status_t
_cairo_mempool_init
(
cairo_mempool_t
*
pool
void
*
base
size_t
bytes
int
min_bits
int
num_sizes
)
;
cairo_private
void
*
_cairo_mempool_alloc
(
cairo_mempool_t
*
pi
size_t
bytes
)
;
cairo_private
void
_cairo_mempool_free
(
cairo_mempool_t
*
pi
void
*
storage
)
;
cairo_private
void
_cairo_mempool_fini
(
cairo_mempool_t
*
pool
)
;
CAIRO_END_DECLS
#
endif
