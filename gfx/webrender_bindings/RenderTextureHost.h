#
ifndef
MOZILLA_GFX_RENDERTEXTUREHOST_H
#
define
MOZILLA_GFX_RENDERTEXTUREHOST_H
#
include
"
GLConsts
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
mozilla
/
gfx
/
2D
.
h
"
#
include
"
mozilla
/
layers
/
LayersSurfaces
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
webrender
/
webrender_ffi
.
h
"
namespace
mozilla
{
namespace
gl
{
class
GLContext
;
}
namespace
wr
{
class
RenderDXGITextureHostOGL
;
class
RenderBufferTextureHost
;
class
RenderTextureHostOGL
;
void
ActivateBindAndTexParameteri
(
gl
:
:
GLContext
*
aGL
GLenum
aActiveTexture
GLenum
aBindTarget
GLuint
aBindTexture
wr
:
:
ImageRendering
aRendering
)
;
class
RenderTextureHost
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
RenderTextureHost
)
public
:
RenderTextureHost
(
)
;
virtual
wr
:
:
WrExternalImage
Lock
(
uint8_t
aChannelIndex
gl
:
:
GLContext
*
aGL
wr
:
:
ImageRendering
aRendering
)
=
0
;
virtual
void
Unlock
(
)
=
0
;
virtual
void
ClearCachedResources
(
)
{
}
virtual
void
PrepareForUse
(
)
{
}
virtual
void
NofityForUse
(
)
{
}
virtual
void
NotifyNotUsed
(
)
{
}
virtual
RenderDXGITextureHostOGL
*
AsRenderDXGITextureHostOGL
(
)
{
return
nullptr
;
}
protected
:
virtual
~
RenderTextureHost
(
)
;
bool
IsFilterUpdateNecessary
(
wr
:
:
ImageRendering
aRendering
)
;
wr
:
:
ImageRendering
mCachedRendering
;
}
;
}
}
#
endif
