#
include
"
RenderCompositor
.
h
"
#
include
"
GLContext
.
h
"
#
include
"
mozilla
/
gfx
/
gfxVars
.
h
"
#
include
"
mozilla
/
layers
/
SyncObject
.
h
"
#
include
"
mozilla
/
webrender
/
RenderCompositorOGL
.
h
"
#
include
"
mozilla
/
widget
/
CompositorWidget
.
h
"
#
ifdef
XP_WIN
#
include
"
mozilla
/
webrender
/
RenderCompositorANGLE
.
h
"
#
endif
#
if
defined
(
MOZ_WAYLAND
)
|
|
defined
(
MOZ_WIDGET_ANDROID
)
#
include
"
mozilla
/
webrender
/
RenderCompositorEGL
.
h
"
#
endif
namespace
mozilla
{
namespace
wr
{
UniquePtr
<
RenderCompositor
>
RenderCompositor
:
:
Create
(
RefPtr
<
widget
:
:
CompositorWidget
>
&
&
aWidget
)
{
#
ifdef
XP_WIN
if
(
gfx
:
:
gfxVars
:
:
UseWebRenderANGLE
(
)
)
{
return
RenderCompositorANGLE
:
:
Create
(
std
:
:
move
(
aWidget
)
)
;
}
#
endif
#
if
defined
(
MOZ_WAYLAND
)
|
|
defined
(
MOZ_WIDGET_ANDROID
)
UniquePtr
<
RenderCompositor
>
eglCompositor
=
RenderCompositorEGL
:
:
Create
(
aWidget
)
;
if
(
eglCompositor
)
{
return
eglCompositor
;
}
#
endif
return
RenderCompositorOGL
:
:
Create
(
std
:
:
move
(
aWidget
)
)
;
}
RenderCompositor
:
:
RenderCompositor
(
RefPtr
<
widget
:
:
CompositorWidget
>
&
&
aWidget
)
:
mWidget
(
aWidget
)
{
}
RenderCompositor
:
:
~
RenderCompositor
(
)
{
}
bool
RenderCompositor
:
:
MakeCurrent
(
)
{
return
gl
(
)
-
>
MakeCurrent
(
)
;
}
}
}
