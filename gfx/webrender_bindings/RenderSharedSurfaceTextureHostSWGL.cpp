#
include
"
RenderSharedSurfaceTextureHostSWGL
.
h
"
#
include
"
mozilla
/
layers
/
SourceSurfaceSharedData
.
h
"
namespace
mozilla
{
namespace
wr
{
RenderSharedSurfaceTextureHostSWGL
:
:
RenderSharedSurfaceTextureHostSWGL
(
gfx
:
:
SourceSurfaceSharedDataWrapper
*
aSurface
)
:
mSurface
(
aSurface
)
{
MOZ_COUNT_CTOR_INHERITED
(
RenderSharedSurfaceTextureHostSWGL
RenderTextureHostSWGL
)
;
MOZ_ASSERT
(
aSurface
)
;
}
RenderSharedSurfaceTextureHostSWGL
:
:
~
RenderSharedSurfaceTextureHostSWGL
(
)
{
MOZ_COUNT_DTOR_INHERITED
(
RenderSharedSurfaceTextureHostSWGL
RenderTextureHostSWGL
)
;
}
size_t
RenderSharedSurfaceTextureHostSWGL
:
:
GetPlaneCount
(
)
{
return
1
;
}
bool
RenderSharedSurfaceTextureHostSWGL
:
:
MapPlane
(
uint8_t
aChannelIndex
PlaneInfo
&
aPlaneInfo
)
{
if
(
NS_WARN_IF
(
!
mSurface
-
>
Map
(
gfx
:
:
DataSourceSurface
:
:
MapType
:
:
READ
&
mMap
)
)
)
{
return
false
;
}
aPlaneInfo
.
mData
=
mMap
.
mData
;
aPlaneInfo
.
mStride
=
mMap
.
mStride
;
aPlaneInfo
.
mSize
=
mSurface
-
>
GetSize
(
)
;
aPlaneInfo
.
mFormat
=
mSurface
-
>
GetFormat
(
)
;
return
true
;
}
void
RenderSharedSurfaceTextureHostSWGL
:
:
UnmapPlanes
(
)
{
mSurface
-
>
Unmap
(
)
;
}
}
}
