#
include
"
RenderTextureHostWrapper
.
h
"
#
include
"
mozilla
/
gfx
/
Logging
.
h
"
#
include
"
mozilla
/
webrender
/
RenderThread
.
h
"
namespace
mozilla
{
namespace
wr
{
RenderTextureHostWrapper
:
:
RenderTextureHostWrapper
(
ExternalImageId
aExternalImageId
)
:
mExternalImageId
(
aExternalImageId
)
{
MOZ_COUNT_CTOR_INHERITED
(
RenderTextureHostWrapper
RenderTextureHost
)
;
}
RenderTextureHostWrapper
:
:
~
RenderTextureHostWrapper
(
)
{
MOZ_COUNT_DTOR_INHERITED
(
RenderTextureHostWrapper
RenderTextureHost
)
;
}
void
RenderTextureHostWrapper
:
:
EnsureTextureHost
(
)
{
if
(
!
mTextureHost
)
{
mTextureHost
=
RenderThread
:
:
Get
(
)
-
>
GetRenderTexture
(
mExternalImageId
)
;
MOZ_ASSERT
(
mTextureHost
)
;
if
(
!
mTextureHost
)
{
gfxCriticalNoteOnce
<
<
"
Failed
to
get
RenderTextureHost
for
extId
:
"
<
<
AsUint64
(
mExternalImageId
)
;
}
}
}
wr
:
:
WrExternalImage
RenderTextureHostWrapper
:
:
Lock
(
uint8_t
aChannelIndex
gl
:
:
GLContext
*
aGL
wr
:
:
ImageRendering
aRendering
)
{
EnsureTextureHost
(
)
;
if
(
!
mTextureHost
)
{
return
InvalidToWrExternalImage
(
)
;
}
return
mTextureHost
-
>
Lock
(
aChannelIndex
aGL
aRendering
)
;
}
void
RenderTextureHostWrapper
:
:
Unlock
(
)
{
if
(
mTextureHost
)
{
mTextureHost
-
>
Unlock
(
)
;
}
}
void
RenderTextureHostWrapper
:
:
ClearCachedResources
(
)
{
if
(
mTextureHost
)
{
mTextureHost
-
>
ClearCachedResources
(
)
;
}
}
RenderMacIOSurfaceTextureHostOGL
*
RenderTextureHostWrapper
:
:
AsRenderMacIOSurfaceTextureHostOGL
(
)
{
EnsureTextureHost
(
)
;
if
(
!
mTextureHost
)
{
return
nullptr
;
}
return
mTextureHost
-
>
AsRenderMacIOSurfaceTextureHostOGL
(
)
;
}
RenderDXGITextureHostOGL
*
RenderTextureHostWrapper
:
:
AsRenderDXGITextureHostOGL
(
)
{
EnsureTextureHost
(
)
;
if
(
!
mTextureHost
)
{
return
nullptr
;
}
return
mTextureHost
-
>
AsRenderDXGITextureHostOGL
(
)
;
}
}
}
