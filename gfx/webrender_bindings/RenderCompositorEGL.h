#
ifndef
MOZILLA_GFX_RENDERCOMPOSITOR_EGL_H
#
define
MOZILLA_GFX_RENDERCOMPOSITOR_EGL_H
#
include
"
GLTypes
.
h
"
#
include
"
mozilla
/
webrender
/
RenderCompositor
.
h
"
namespace
mozilla
{
namespace
wr
{
class
RenderCompositorEGL
:
public
RenderCompositor
{
public
:
static
UniquePtr
<
RenderCompositor
>
Create
(
RefPtr
<
widget
:
:
CompositorWidget
>
aWidget
)
;
RenderCompositorEGL
(
RefPtr
<
gl
:
:
GLContext
>
aGL
RefPtr
<
widget
:
:
CompositorWidget
>
aWidget
)
;
virtual
~
RenderCompositorEGL
(
)
;
bool
BeginFrame
(
)
override
;
void
EndFrame
(
)
override
;
void
WaitForGPU
(
)
override
;
void
Pause
(
)
override
;
bool
Resume
(
)
override
;
gl
:
:
GLContext
*
gl
(
)
const
override
{
return
mGL
;
}
bool
MakeCurrent
(
)
override
;
bool
UseANGLE
(
)
const
override
{
return
false
;
}
LayoutDeviceIntSize
GetBufferSize
(
)
override
;
protected
:
static
already_AddRefed
<
gl
:
:
GLContext
>
CreateGLContext
(
RefPtr
<
widget
:
:
CompositorWidget
>
aWidget
)
;
static
EGLSurface
CreateEGLSurface
(
widget
:
:
CompositorWidget
*
aWidget
)
;
void
DestroyEGLSurface
(
)
;
const
RefPtr
<
gl
:
:
GLContext
>
mGL
;
EGLSurface
mEGLSurface
;
}
;
}
}
#
endif
