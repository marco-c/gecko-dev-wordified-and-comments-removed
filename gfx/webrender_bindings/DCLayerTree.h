#
ifndef
MOZILLA_GFX_DCLAYER_TREE_H
#
define
MOZILLA_GFX_DCLAYER_TREE_H
#
include
<
windows
.
h
>
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
struct
IDCompositionDevice2
;
struct
IDCompositionTarget
;
struct
IDCompositionVisual2
;
struct
IDXGISwapChain1
;
namespace
mozilla
{
namespace
wr
{
#
if
!
defined
(
__MINGW32__
)
class
DCLayerTree
{
public
:
static
UniquePtr
<
DCLayerTree
>
Create
(
HWND
aHwnd
)
;
explicit
DCLayerTree
(
IDCompositionDevice2
*
aCompositionDevice
)
;
~
DCLayerTree
(
)
;
void
SetDefaultSwapChain
(
IDXGISwapChain1
*
aSwapChain
)
;
void
MaybeUpdateDebug
(
)
;
protected
:
bool
Initialize
(
HWND
aHwnd
)
;
bool
MaybeUpdateDebugCounter
(
)
;
bool
MaybeUpdateDebugVisualRedrawRegions
(
)
;
RefPtr
<
IDCompositionDevice2
>
mCompositionDevice
;
RefPtr
<
IDCompositionTarget
>
mCompositionTarget
;
RefPtr
<
IDCompositionVisual2
>
mRootVisual
;
RefPtr
<
IDCompositionVisual2
>
mDefaultSwapChainVisual
;
bool
mDebugCounter
;
bool
mDebugVisualRedrawRegions
;
}
;
#
else
class
DCLayerTree
{
public
:
static
UniquePtr
<
DCLayerTree
>
Create
(
HWND
aHwnd
)
{
return
nullptr
;
}
void
SetDefaultSwapChain
(
IDXGISwapChain1
*
aSwapChain
)
{
}
void
MaybeUpdateDebug
(
)
{
}
}
;
#
endif
}
}
#
endif
