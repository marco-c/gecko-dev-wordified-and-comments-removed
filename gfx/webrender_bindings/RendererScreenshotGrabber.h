#
ifndef
mozilla_layers_RendererScreenshotGrabber_h
#
define
mozilla_layers_RendererScreenshotGrabber_h
#
include
"
mozilla
/
TimeStamp
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
gfx
/
Point
.
h
"
#
include
"
mozilla
/
layers
/
ProfilerScreenshots
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
wr
{
class
RendererScreenshotGrabber
final
{
public
:
RendererScreenshotGrabber
(
)
;
void
MaybeGrabScreenshot
(
Renderer
*
aRenderer
const
gfx
:
:
IntSize
&
aWindowSize
)
;
void
MaybeProcessQueue
(
Renderer
*
aRenderer
)
;
private
:
void
Destroy
(
Renderer
*
aRenderer
)
;
void
GrabScreenshot
(
Renderer
*
aRenderer
const
gfx
:
:
IntSize
&
aWindowSize
)
;
void
ProcessQueue
(
Renderer
*
aRenderer
)
;
struct
QueueItem
{
mozilla
:
:
TimeStamp
mTimeStamp
;
AsyncScreenshotHandle
mHandle
;
gfx
:
:
IntSize
mScreenshotSize
;
gfx
:
:
IntSize
mWindowSize
;
uintptr_t
mWindowIdentifier
;
}
;
gfx
:
:
IntSize
mMaxScreenshotSize
;
nsTArray
<
QueueItem
>
mQueue
;
Maybe
<
QueueItem
>
mCurrentFrameQueueItem
;
UniquePtr
<
mozilla
:
:
layers
:
:
ProfilerScreenshots
>
mProfilerScreenshots
;
}
;
}
}
#
endif
