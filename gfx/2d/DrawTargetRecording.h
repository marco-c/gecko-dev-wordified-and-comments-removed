#
ifndef
MOZILLA_GFX_DRAWTARGETRECORDING_H_
#
define
MOZILLA_GFX_DRAWTARGETRECORDING_H_
#
include
"
2D
.
h
"
#
include
"
DrawEventRecorder
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
DrawTargetRecording
:
public
DrawTarget
{
public
:
MOZ_DECLARE_REFCOUNTED_VIRTUAL_TYPENAME
(
DrawTargetRecording
override
)
DrawTargetRecording
(
DrawEventRecorder
*
aRecorder
DrawTarget
*
aDT
IntSize
aSize
bool
aHasData
=
false
)
;
~
DrawTargetRecording
(
)
;
virtual
DrawTargetType
GetType
(
)
const
override
{
return
mFinalDT
-
>
GetType
(
)
;
}
virtual
BackendType
GetBackendType
(
)
const
override
{
return
BackendType
:
:
RECORDING
;
}
virtual
bool
IsRecording
(
)
const
override
{
return
true
;
}
virtual
already_AddRefed
<
SourceSurface
>
Snapshot
(
)
override
;
virtual
already_AddRefed
<
SourceSurface
>
IntoLuminanceSource
(
LuminanceType
aLuminanceType
float
aOpacity
)
override
;
virtual
void
DetachAllSnapshots
(
)
override
;
virtual
IntSize
GetSize
(
)
const
override
{
return
mSize
;
}
virtual
void
Flush
(
)
override
{
mFinalDT
-
>
Flush
(
)
;
}
virtual
void
FlushItem
(
const
IntRect
&
aBounds
)
override
;
virtual
void
DrawSurface
(
SourceSurface
*
aSurface
const
Rect
&
aDest
const
Rect
&
aSource
const
DrawSurfaceOptions
&
aSurfOptions
=
DrawSurfaceOptions
(
)
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
DrawDependentSurface
(
uint64_t
aId
const
Rect
&
aDest
const
DrawSurfaceOptions
&
aSurfOptions
=
DrawSurfaceOptions
(
)
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
DrawFilter
(
FilterNode
*
aNode
const
Rect
&
aSourceRect
const
Point
&
aDestPoint
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
DrawSurfaceWithShadow
(
SourceSurface
*
aSurface
const
Point
&
aDest
const
Color
&
aColor
const
Point
&
aOffset
Float
aSigma
CompositionOp
aOperator
)
override
;
virtual
void
ClearRect
(
const
Rect
&
aRect
)
override
;
virtual
void
CopySurface
(
SourceSurface
*
aSurface
const
IntRect
&
aSourceRect
const
IntPoint
&
aDestination
)
override
;
virtual
void
FillRect
(
const
Rect
&
aRect
const
Pattern
&
aPattern
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
StrokeRect
(
const
Rect
&
aRect
const
Pattern
&
aPattern
const
StrokeOptions
&
aStrokeOptions
=
StrokeOptions
(
)
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
StrokeLine
(
const
Point
&
aStart
const
Point
&
aEnd
const
Pattern
&
aPattern
const
StrokeOptions
&
aStrokeOptions
=
StrokeOptions
(
)
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
Stroke
(
const
Path
*
aPath
const
Pattern
&
aPattern
const
StrokeOptions
&
aStrokeOptions
=
StrokeOptions
(
)
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
Fill
(
const
Path
*
aPath
const
Pattern
&
aPattern
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
FillGlyphs
(
ScaledFont
*
aFont
const
GlyphBuffer
&
aBuffer
const
Pattern
&
aPattern
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
Mask
(
const
Pattern
&
aSource
const
Pattern
&
aMask
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
MaskSurface
(
const
Pattern
&
aSource
SourceSurface
*
aMask
Point
aOffset
const
DrawOptions
&
aOptions
=
DrawOptions
(
)
)
override
;
virtual
void
PushClip
(
const
Path
*
aPath
)
override
;
virtual
void
PushClipRect
(
const
Rect
&
aRect
)
override
;
virtual
void
PopClip
(
)
override
;
virtual
void
PushLayer
(
bool
aOpaque
Float
aOpacity
SourceSurface
*
aMask
const
Matrix
&
aMaskTransform
const
IntRect
&
aBounds
=
IntRect
(
)
bool
aCopyBackground
=
false
)
override
;
virtual
void
PushLayerWithBlend
(
bool
aOpaque
Float
aOpacity
SourceSurface
*
aMask
const
Matrix
&
aMaskTransform
const
IntRect
&
aBounds
=
IntRect
(
)
bool
aCopyBackground
=
false
CompositionOp
aCompositionOp
=
CompositionOp
:
:
OP_OVER
)
override
;
virtual
void
PopLayer
(
)
override
;
virtual
already_AddRefed
<
SourceSurface
>
CreateSourceSurfaceFromData
(
unsigned
char
*
aData
const
IntSize
&
aSize
int32_t
aStride
SurfaceFormat
aFormat
)
const
override
;
virtual
already_AddRefed
<
SourceSurface
>
OptimizeSourceSurface
(
SourceSurface
*
aSurface
)
const
override
;
virtual
already_AddRefed
<
SourceSurface
>
CreateSourceSurfaceFromNativeSurface
(
const
NativeSurface
&
aSurface
)
const
override
;
virtual
already_AddRefed
<
DrawTarget
>
CreateSimilarDrawTarget
(
const
IntSize
&
aSize
SurfaceFormat
aFormat
)
const
override
;
bool
CanCreateSimilarDrawTarget
(
const
IntSize
&
aSize
SurfaceFormat
aFormat
)
const
override
;
virtual
RefPtr
<
DrawTarget
>
CreateClippedDrawTarget
(
const
IntSize
&
aMaxSize
const
Matrix
&
aTransform
SurfaceFormat
aFormat
)
const
override
;
virtual
already_AddRefed
<
PathBuilder
>
CreatePathBuilder
(
FillRule
aFillRule
=
FillRule
:
:
FILL_WINDING
)
const
override
;
virtual
already_AddRefed
<
GradientStops
>
CreateGradientStops
(
GradientStop
*
aStops
uint32_t
aNumStops
ExtendMode
aExtendMode
=
ExtendMode
:
:
CLAMP
)
const
override
;
virtual
already_AddRefed
<
FilterNode
>
CreateFilter
(
FilterType
aType
)
override
;
virtual
void
SetTransform
(
const
Matrix
&
aTransform
)
override
;
virtual
void
*
GetNativeSurface
(
NativeSurfaceType
aType
)
override
{
return
mFinalDT
-
>
GetNativeSurface
(
aType
)
;
}
virtual
bool
IsCurrentGroupOpaque
(
)
override
{
return
mFinalDT
-
>
IsCurrentGroupOpaque
(
)
;
}
private
:
DrawTargetRecording
(
const
DrawTargetRecording
*
aDT
IntSize
aSize
SurfaceFormat
aFormat
)
;
Path
*
GetPathForPathRecording
(
const
Path
*
aPath
)
const
;
already_AddRefed
<
PathRecording
>
EnsurePathStored
(
const
Path
*
aPath
)
;
void
EnsurePatternDependenciesStored
(
const
Pattern
&
aPattern
)
;
RefPtr
<
DrawEventRecorderPrivate
>
mRecorder
;
RefPtr
<
DrawTarget
>
mFinalDT
;
IntSize
mSize
;
}
;
}
}
#
endif
