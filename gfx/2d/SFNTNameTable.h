#
ifndef
mozilla_gfx_SFNTNameTable_h
#
define
mozilla_gfx_SFNTNameTable_h
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
Vector
.
h
"
#
include
"
u16string
.
h
"
#
include
<
functional
>
namespace
mozilla
{
namespace
gfx
{
struct
NameHeader
;
struct
NameRecord
;
enum
ENameDecoder
:
int
;
typedef
Vector
<
std
:
:
function
<
ENameDecoder
(
const
NameRecord
*
)
>
>
NameRecordMatchers
;
class
SFNTNameTable
final
{
public
:
static
UniquePtr
<
SFNTNameTable
>
Create
(
const
uint8_t
*
aNameData
uint32_t
aDataLength
)
;
bool
GetU16FullName
(
mozilla
:
:
u16string
&
aU16FullName
)
;
private
:
SFNTNameTable
(
const
NameHeader
*
aNameHeader
const
uint8_t
*
aNameData
uint32_t
aDataLength
)
;
bool
ReadU16Name
(
const
NameRecordMatchers
&
aMatchers
mozilla
:
:
u16string
&
aU16Name
)
;
bool
ReadU16NameFromU16Record
(
const
NameRecord
*
aNameRecord
mozilla
:
:
u16string
&
aU16Name
)
;
#
if
defined
(
XP_MACOSX
)
bool
ReadU16NameFromMacRomanRecord
(
const
NameRecord
*
aNameRecord
mozilla
:
:
u16string
&
aU16Name
)
;
#
endif
const
NameRecord
*
mFirstRecord
;
const
NameRecord
*
mEndOfRecords
;
const
uint8_t
*
mStringData
;
const
uint32_t
mStringDataLength
;
}
;
}
}
#
endif
