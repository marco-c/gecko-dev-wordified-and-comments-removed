#
ifndef
MOZILLA_GFX_REFPTRSKIA_H_
#
define
MOZILLA_GFX_REFPTRSKIA_H_
namespace
mozilla
{
namespace
gfx
{
template
<
typename
T
>
class
RefPtrSkia
{
public
:
RefPtrSkia
(
)
:
fObj
(
NULL
)
{
}
explicit
RefPtrSkia
(
T
*
obj
)
:
fObj
(
obj
)
{
SkSafeRef
(
fObj
)
;
}
RefPtrSkia
(
const
RefPtrSkia
&
o
)
:
fObj
(
o
.
fObj
)
{
SkSafeRef
(
fObj
)
;
}
~
RefPtrSkia
(
)
{
SkSafeUnref
(
fObj
)
;
}
RefPtrSkia
&
operator
=
(
const
RefPtrSkia
&
rp
)
{
SkRefCnt_SafeAssign
(
fObj
rp
.
fObj
)
;
return
*
this
;
}
RefPtrSkia
&
operator
=
(
T
*
obj
)
{
SkRefCnt_SafeAssign
(
fObj
obj
)
;
return
*
this
;
}
T
*
get
(
)
const
{
return
fObj
;
}
T
&
operator
*
(
)
const
{
return
*
fObj
;
}
T
*
operator
-
>
(
)
const
{
return
fObj
;
}
RefPtrSkia
&
adopt
(
T
*
obj
)
{
SkSafeUnref
(
fObj
)
;
fObj
=
obj
;
return
*
this
;
}
typedef
T
*
RefPtrSkia
:
:
*
unspecified_bool_type
;
operator
unspecified_bool_type
(
)
const
{
return
fObj
?
&
RefPtrSkia
:
:
fObj
:
NULL
;
}
private
:
T
*
fObj
;
}
;
}
}
#
endif
