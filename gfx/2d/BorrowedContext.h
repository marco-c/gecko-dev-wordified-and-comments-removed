#
ifndef
_MOZILLA_GFX_BORROWED_CONTEXT_H
#
define
_MOZILLA_GFX_BORROWED_CONTEXT_H
#
include
"
2D
.
h
"
#
ifdef
MOZ_X11
#
include
<
X11
/
Xlib
.
h
>
#
include
"
X11UndefineNone
.
h
"
#
endif
namespace
mozilla
{
namespace
gfx
{
#
ifdef
MOZ_X11
class
BorrowedXlibDrawable
{
public
:
BorrowedXlibDrawable
(
)
:
mDT
(
nullptr
)
mDisplay
(
nullptr
)
mDrawable
(
X11None
)
mScreen
(
nullptr
)
mVisual
(
nullptr
)
{
}
explicit
BorrowedXlibDrawable
(
DrawTarget
*
aDT
)
:
mDT
(
nullptr
)
mDisplay
(
nullptr
)
mDrawable
(
X11None
)
mScreen
(
nullptr
)
mVisual
(
nullptr
)
{
Init
(
aDT
)
;
}
bool
Init
(
DrawTarget
*
aDT
)
;
void
Finish
(
)
;
~
BorrowedXlibDrawable
(
)
{
MOZ_ASSERT
(
!
mDrawable
)
;
}
Display
*
GetDisplay
(
)
const
{
return
mDisplay
;
}
Drawable
GetDrawable
(
)
const
{
return
mDrawable
;
}
Screen
*
GetScreen
(
)
const
{
return
mScreen
;
}
Visual
*
GetVisual
(
)
const
{
return
mVisual
;
}
IntSize
GetSize
(
)
const
{
return
mSize
;
}
Point
GetOffset
(
)
const
{
return
mOffset
;
}
private
:
DrawTarget
*
mDT
;
Display
*
mDisplay
;
Drawable
mDrawable
;
Screen
*
mScreen
;
Visual
*
mVisual
;
IntSize
mSize
;
Point
mOffset
;
}
;
#
endif
#
ifdef
XP_DARWIN
class
BorrowedCGContext
{
public
:
BorrowedCGContext
(
)
:
cg
(
nullptr
)
mDT
(
nullptr
)
{
}
explicit
BorrowedCGContext
(
DrawTarget
*
aDT
)
:
mDT
(
aDT
)
{
MOZ_ASSERT
(
aDT
"
Caller
should
check
for
nullptr
"
)
;
cg
=
BorrowCGContextFromDrawTarget
(
aDT
)
;
}
CGContextRef
Init
(
DrawTarget
*
aDT
)
{
MOZ_ASSERT
(
aDT
"
Caller
should
check
for
nullptr
"
)
;
MOZ_ASSERT
(
!
mDT
"
Can
'
t
initialize
twice
!
"
)
;
mDT
=
aDT
;
cg
=
BorrowCGContextFromDrawTarget
(
aDT
)
;
return
cg
;
}
void
Finish
(
)
{
if
(
cg
)
{
ReturnCGContextToDrawTarget
(
mDT
cg
)
;
cg
=
nullptr
;
}
}
~
BorrowedCGContext
(
)
{
MOZ_ASSERT
(
!
cg
)
;
}
CGContextRef
cg
;
private
:
static
CGContextRef
BorrowCGContextFromDrawTarget
(
DrawTarget
*
aDT
)
;
static
void
ReturnCGContextToDrawTarget
(
DrawTarget
*
aDT
CGContextRef
cg
)
;
DrawTarget
*
mDT
;
}
;
#
endif
}
}
#
endif
