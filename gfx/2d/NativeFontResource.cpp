#
include
"
2D
.
h
"
#
include
"
nsIMemoryReporter
.
h
"
namespace
mozilla
{
namespace
gfx
{
static
Atomic
<
size_t
>
gTotalNativeFontResourceData
;
NativeFontResource
:
:
NativeFontResource
(
size_t
aDataLength
)
:
mDataLength
(
aDataLength
)
{
gTotalNativeFontResourceData
+
=
mDataLength
;
}
NativeFontResource
:
:
~
NativeFontResource
(
)
{
gTotalNativeFontResourceData
-
=
mDataLength
;
}
class
NativeFontResourceDataMemoryReporter
final
:
public
nsIMemoryReporter
{
~
NativeFontResourceDataMemoryReporter
(
)
=
default
;
public
:
NS_DECL_ISUPPORTS
NS_IMETHOD
CollectReports
(
nsIHandleReportCallback
*
aHandleReport
nsISupports
*
aData
bool
aAnonymize
)
override
{
MOZ_COLLECT_REPORT
(
"
explicit
/
gfx
/
native
-
font
-
resource
-
data
"
KIND_HEAP
UNITS_BYTES
gTotalNativeFontResourceData
"
Total
memory
used
by
native
font
API
resource
data
.
"
)
;
return
NS_OK
;
}
}
;
NS_IMPL_ISUPPORTS
(
NativeFontResourceDataMemoryReporter
nsIMemoryReporter
)
void
NativeFontResource
:
:
RegisterMemoryReporter
(
)
{
RegisterStrongMemoryReporter
(
new
NativeFontResourceDataMemoryReporter
)
;
}
}
}
