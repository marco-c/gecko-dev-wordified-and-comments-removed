#
include
"
UnscaledFontFreeType
.
h
"
#
include
FT_TRUETYPE_TABLES_H
namespace
mozilla
{
namespace
gfx
{
bool
UnscaledFontFreeType
:
:
GetFontFileData
(
FontFileDataOutput
aDataCallback
void
*
aBaton
)
{
bool
success
=
false
;
FT_ULong
length
=
0
;
if
(
FT_Load_Sfnt_Table
(
mFace
0
0
nullptr
&
length
)
=
=
FT_Err_Ok
)
{
uint8_t
*
fontData
=
new
uint8_t
[
length
]
;
if
(
FT_Load_Sfnt_Table
(
mFace
0
0
fontData
&
length
)
=
=
FT_Err_Ok
)
{
aDataCallback
(
fontData
length
0
aBaton
)
;
success
=
true
;
}
delete
[
]
fontData
;
}
return
success
;
}
bool
UnscaledFontFreeType
:
:
GetFontDescriptor
(
FontDescriptorOutput
aCb
void
*
aBaton
)
{
if
(
mFile
.
empty
(
)
)
{
return
false
;
}
const
char
*
path
=
mFile
.
c_str
(
)
;
size_t
pathLength
=
strlen
(
path
)
+
1
;
size_t
dataLength
=
sizeof
(
FontDescriptor
)
+
pathLength
;
uint8_t
*
data
=
new
uint8_t
[
dataLength
]
;
FontDescriptor
*
desc
=
reinterpret_cast
<
FontDescriptor
*
>
(
data
)
;
desc
-
>
mPathLength
=
pathLength
;
desc
-
>
mIndex
=
mIndex
;
memcpy
(
data
+
sizeof
(
FontDescriptor
)
path
pathLength
)
;
aCb
(
data
dataLength
aBaton
)
;
delete
[
]
data
;
return
true
;
}
}
}
