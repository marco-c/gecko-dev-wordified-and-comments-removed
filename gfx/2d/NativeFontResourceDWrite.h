#
ifndef
mozilla_gfx_NativeFontResourceDWrite_h
#
define
mozilla_gfx_NativeFontResourceDWrite_h
#
include
<
dwrite
.
h
>
#
include
"
2D
.
h
"
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
NativeFontResourceDWrite
final
:
public
NativeFontResource
{
public
:
MOZ_DECLARE_REFCOUNTED_VIRTUAL_TYPENAME
(
NativeFontResourceDWrite
)
static
already_AddRefed
<
NativeFontResourceDWrite
>
Create
(
uint8_t
*
aFontData
uint32_t
aDataLength
bool
aNeedsCairo
)
;
already_AddRefed
<
ScaledFont
>
CreateScaledFont
(
uint32_t
aIndex
Float
aGlyphSize
const
uint8_t
*
aInstanceData
uint32_t
aInstanceDataLength
)
final
;
private
:
NativeFontResourceDWrite
(
IDWriteFactory
*
aFactory
already_AddRefed
<
IDWriteFontFile
>
aFontFile
DWRITE_FONT_FACE_TYPE
aFaceType
uint32_t
aNumberOfFaces
bool
aNeedsCairo
)
:
mFactory
(
aFactory
)
mFontFile
(
aFontFile
)
mFaceType
(
aFaceType
)
mNumberOfFaces
(
aNumberOfFaces
)
mNeedsCairo
(
aNeedsCairo
)
{
}
IDWriteFactory
*
mFactory
;
RefPtr
<
IDWriteFontFile
>
mFontFile
;
DWRITE_FONT_FACE_TYPE
mFaceType
;
uint32_t
mNumberOfFaces
;
bool
mNeedsCairo
;
}
;
}
}
#
endif
