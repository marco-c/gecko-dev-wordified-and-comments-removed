#
include
"
NativeFontResourceMac
.
h
"
#
include
"
UnscaledFontMac
.
h
"
#
include
"
Types
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
ifdef
MOZ_WIDGET_UIKIT
#
include
<
CoreFoundation
/
CoreFoundation
.
h
>
#
endif
#
include
"
nsCocoaFeatures
.
h
"
namespace
mozilla
{
namespace
gfx
{
already_AddRefed
<
NativeFontResourceMac
>
NativeFontResourceMac
:
:
Create
(
uint8_t
*
aFontData
uint32_t
aDataLength
)
{
CFDataRef
data
=
CFDataCreate
(
kCFAllocatorDefault
aFontData
aDataLength
)
;
if
(
!
data
)
{
return
nullptr
;
}
CTFontDescriptorRef
ctFontDesc
=
CTFontManagerCreateFontDescriptorFromData
(
data
)
;
CFRelease
(
data
)
;
CTFontRef
ctFont
=
CTFontCreateWithFontDescriptor
(
ctFontDesc
0
NULL
)
;
CGFontRef
fontRef
=
CTFontCopyGraphicsFont
(
ctFont
NULL
)
;
CFRelease
(
ctFont
)
;
if
(
!
fontRef
)
{
return
nullptr
;
}
RefPtr
<
NativeFontResourceMac
>
fontResource
=
new
NativeFontResourceMac
(
ctFontDesc
fontRef
aDataLength
)
;
return
fontResource
.
forget
(
)
;
}
already_AddRefed
<
UnscaledFont
>
NativeFontResourceMac
:
:
CreateUnscaledFont
(
uint32_t
aIndex
const
uint8_t
*
aInstanceData
uint32_t
aInstanceDataLength
)
{
RefPtr
<
UnscaledFont
>
unscaledFont
=
new
UnscaledFontMac
(
mFontDescRef
mFontRef
true
)
;
return
unscaledFont
.
forget
(
)
;
}
}
}
