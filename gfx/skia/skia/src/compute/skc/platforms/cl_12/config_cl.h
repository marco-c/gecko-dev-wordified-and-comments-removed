#
pragma
once
#
include
"
block_pool_cl
.
h
"
struct
skc_config
{
struct
{
struct
{
skc_uint
size
;
skc_uint
subbufs
;
}
host
;
struct
{
skc_uint
size
;
skc_uint
subbufs
;
}
device
;
}
suballocator
;
struct
{
skc_uint
size
;
}
scheduler
;
struct
{
skc_uint
bytes
;
skc_uint
words
;
}
subblock
;
struct
{
skc_uint
bytes
;
skc_uint
words
;
skc_uint
subblocks
;
}
block
;
union
skc_block_pool_size
block_pool
;
struct
{
cl_command_queue_properties
cq_props
;
skc_uint
size
;
}
cq_pool
;
struct
{
skc_uint
size
;
skc_uint
width
;
skc_uint
recs
;
}
handle_pool
;
struct
{
skc_uint
width
;
skc_uint
height
;
skc_uint
ratio
;
}
tile
;
struct
{
struct
{
skc_uint
count
;
}
buffer
;
struct
{
skc_uint
count
;
}
subbuf
;
struct
{
size_t
buffer
;
size_t
subbuf
;
}
block
;
struct
{
size_t
buffer
;
size_t
subbuf
;
}
command
;
}
paths_copy
;
struct
{
struct
{
skc_uint
elem_count
;
skc_uint
snap_count
;
}
path_ids
;
struct
{
skc_uint
elem_count
;
skc_uint
snap_count
;
}
transforms
;
struct
{
skc_uint
elem_count
;
skc_uint
snap_count
;
}
clips
;
struct
{
skc_uint
elem_count
;
skc_uint
snap_count
;
}
fill
;
struct
{
skc_uint
elem_count
;
skc_uint
snap_count
;
}
raster_ids
;
struct
{
skc_uint
cmds
;
}
expand
;
struct
{
skc_uint
keys
;
}
rasterize
;
}
raster_cohort
;
struct
{
struct
{
skc_uint
elem_count
;
skc_uint
snap_count
;
}
cmds
;
struct
{
skc_uint
elem_count
;
}
raster_ids
;
struct
{
skc_uint
elem_count
;
}
keys
;
}
composition
;
}
;
