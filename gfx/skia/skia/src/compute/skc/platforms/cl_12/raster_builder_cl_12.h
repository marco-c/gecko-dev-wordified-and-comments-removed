#
ifndef
SKC_RASTER_BUILDER_CL_12_ONCE
#
define
SKC_RASTER_BUILDER_CL_12_ONCE
#
include
"
types
.
h
"
#
include
"
macros
.
h
"
#
include
"
common
.
h
"
#
define
SKC_CMD_RASTERIZE_BITS_TRANSFORM
12
#
define
SKC_CMD_RASTERIZE_BITS_CLIP
12
#
define
SKC_CMD_RASTERIZE_BITS_COHORT
8
SKC_STATIC_ASSERT
(
SKC_CMD_RASTERIZE_BITS_TRANSFORM
=
=
SKC_CMD_FILL_BITS_TRANSFORM
)
;
SKC_STATIC_ASSERT
(
SKC_CMD_RASTERIZE_BITS_CLIP
=
=
SKC_CMD_FILL_BITS_CLIP
)
;
SKC_STATIC_ASSERT
(
SKC_CMD_RASTERIZE_BITS_COHORT
=
=
SKC_CMD_FILL_BITS_COHORT
)
;
union
skc_cmd_rasterize
{
skc_ulong
u64
;
skc_uint2
u32v2
;
struct
{
skc_uint
nodeword
;
#
if
defined
(
__OPENCL_C_VERSION__
)
skc_uint
tcc
;
#
else
skc_uint
transform
:
SKC_CMD_RASTERIZE_BITS_TRANSFORM
;
skc_uint
clip
:
SKC_CMD_RASTERIZE_BITS_CLIP
;
skc_uint
cohort
:
SKC_CMD_RASTERIZE_BITS_COHORT
;
#
endif
}
;
}
;
SKC_STATIC_ASSERT
(
sizeof
(
union
skc_cmd_rasterize
)
=
=
sizeof
(
skc_uint2
)
)
;
#
define
SKC_CMD_RASTERIZE_HI_OFFSET_COHORT
(
SKC_CMD_RASTERIZE_BITS_TRANSFORM
+
SKC_CMD_RASTERIZE_BITS_CLIP
)
#
define
SKC_CMD_RASTERIZE_MASK_COHORT
(
c
)
(
(
c
)
.
u32v2
.
hi
&
SKC_BITS_TO_MASK_AT
(
SKC_CMD_RASTERIZE_BITS_COHORT
SKC_CMD_RASTERIZE_HI_OFFSET_COHORT
)
)
#
define
SKC_CMD_RASTERIZE_GET_TRANSFORM
(
c
)
(
(
c
)
.
u32v2
.
hi
&
SKC_BITS_TO_MASK
(
SKC_CMD_RASTERIZE_BITS_TRANSFORM
)
)
#
define
SKC_CMD_RASTERIZE_GET_CLIP
(
c
)
SKC_BFE
(
(
c
)
.
tcc
SKC_CMD_RASTERIZE_BITS_CLIP
SKC_CMD_RASTERIZE_BITS_TRANSFORM
)
#
define
SKC_CMD_RASTERIZE_GET_COHORT
(
c
)
(
(
c
)
.
u32v2
.
hi
>
>
SKC_CMD_RASTERIZE_HI_OFFSET_COHORT
)
#
define
SKC_TTSK_SIZE_COHORT
(
1
<
<
SKC_CMD_RASTERIZE_BITS_COHORT
)
union
skc_raster_cohort_meta_in
{
skc_uint4
u32v4
;
struct
{
skc_uint
blocks
;
skc_uint
offset
;
skc_uint
pk
;
skc_uint
rk
;
}
;
}
;
union
skc_raster_cohort_meta_out
{
skc_uint4
u32v4
;
struct
{
skc_uint
blocks
;
skc_uint
offset
;
skc_uint
nodes
;
skc_uint
keys
;
}
;
}
;
union
skc_raster_cohort_meta_inout
{
union
skc_raster_cohort_meta_in
in
;
union
skc_raster_cohort_meta_out
out
;
}
;
struct
skc_raster_cohort_meta
{
union
skc_raster_cohort_meta_inout
inout
[
SKC_TTSK_SIZE_COHORT
]
;
skc_uint
reads
[
SKC_TTSK_SIZE_COHORT
]
;
}
;
#
define
SKC_RASTER_COHORT_META_OFFSET_READS
(
SKC_OFFSET_OF
(
struct
skc_raster_cohort_meta
reads
)
/
sizeof
(
skc_uint
)
)
struct
skc_raster_cohort_atomic
{
skc_uint
cmds
;
skc_uint
keys
;
}
;
#
define
SKC_RASTER_COHORT_ATOMIC_OFFSET_CMDS
0
#
define
SKC_RASTER_COHORT_ATOMIC_OFFSET_KEYS
1
#
define
SKC_RASTER_COHORT_ATOMIC_OFFSET_CMDS_CALC
(
SKC_OFFSET_OF
(
struct
skc_raster_cohort_atomic
cmds
)
/
sizeof
(
skc_uint
)
)
#
define
SKC_RASTER_COHORT_ATOMIC_OFFSET_KEYS_CALC
(
SKC_OFFSET_OF
(
struct
skc_raster_cohort_atomic
keys
)
/
sizeof
(
skc_uint
)
)
SKC_STATIC_ASSERT
(
SKC_RASTER_COHORT_ATOMIC_OFFSET_CMDS
=
=
SKC_RASTER_COHORT_ATOMIC_OFFSET_CMDS_CALC
)
;
SKC_STATIC_ASSERT
(
SKC_RASTER_COHORT_ATOMIC_OFFSET_KEYS
=
=
SKC_RASTER_COHORT_ATOMIC_OFFSET_KEYS_CALC
)
;
#
endif
