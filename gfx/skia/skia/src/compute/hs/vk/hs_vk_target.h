#
pragma
once
#
include
<
stdint
.
h
>
#
include
"
common
/
macros
.
h
"
struct
hs_vk_target_config
{
struct
{
uint8_t
threads_log2
;
uint8_t
width_log2
;
uint8_t
height
;
}
slab
;
struct
{
uint8_t
key
;
uint8_t
val
;
}
words
;
struct
{
uint8_t
slabs
;
}
block
;
struct
{
struct
{
uint8_t
scale_min
;
uint8_t
scale_max
;
}
fm
;
struct
{
uint8_t
scale_min
;
uint8_t
scale_max
;
}
hm
;
}
merge
;
uint8_t
pad
[
2
]
;
}
;
STATIC_ASSERT_MACRO
(
sizeof
(
struct
hs_vk_target_config
)
=
=
12
"
modules
.
bytes
[
]
must
start
on
a
32
-
bit
boundary
"
)
;
struct
hs_vk_target
{
struct
hs_vk_target_config
config
;
uint8_t
modules
[
]
;
}
;
