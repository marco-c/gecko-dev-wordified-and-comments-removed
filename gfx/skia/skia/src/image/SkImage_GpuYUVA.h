#
ifndef
SkImage_GpuYUVA_DEFINED
#
define
SkImage_GpuYUVA_DEFINED
#
include
"
GrBackendSurface
.
h
"
#
include
"
GrContext
.
h
"
#
include
"
SkCachedData
.
h
"
#
include
"
SkImage_GpuBase
.
h
"
#
include
"
SkYUVAIndex
.
h
"
class
GrTexture
;
class
SkImage_GpuYUVA
:
public
SkImage_GpuBase
{
public
:
SkImage_GpuYUVA
(
sk_sp
<
GrContext
>
uint32_t
uniqueID
SkYUVColorSpace
sk_sp
<
GrTextureProxy
>
proxies
[
]
const
SkYUVAIndex
yuvaIndices
[
4
]
SkISize
size
GrSurfaceOrigin
sk_sp
<
SkColorSpace
>
SkBudgeted
)
;
~
SkImage_GpuYUVA
(
)
override
;
SkImageInfo
onImageInfo
(
)
const
override
;
GrTextureProxy
*
peekProxy
(
)
const
override
{
return
this
-
>
asTextureProxyRef
(
)
.
get
(
)
;
}
sk_sp
<
GrTextureProxy
>
asTextureProxyRef
(
)
const
override
;
static
sk_sp
<
SkImage
>
MakePromiseYUVATexture
(
GrContext
*
context
SkYUVColorSpace
yuvColorSpace
const
GrBackendFormat
yuvaFormats
[
]
const
SkYUVAIndex
yuvaIndices
[
4
]
SkISize
imageSize
GrSurfaceOrigin
imageOrigin
sk_sp
<
SkColorSpace
>
imageColorSpace
TextureFulfillProc
textureFulfillProc
TextureReleaseProc
textureReleaseProc
PromiseDoneProc
promiseDoneProc
TextureContext
textureContexts
[
]
)
;
static
sk_sp
<
SkImage
>
MakeFromYUVATextures
(
GrContext
*
context
SkYUVColorSpace
yuvColorSpace
const
GrBackendTexture
yuvaTextures
[
]
SkYUVAIndex
yuvaIndices
[
4
]
SkISize
imageSize
GrSurfaceOrigin
imageOrigin
sk_sp
<
SkColorSpace
>
imageColorSpace
)
;
private
:
sk_sp
<
GrTextureProxy
>
fProxies
[
4
]
;
SkYUVAIndex
fYUVAIndices
[
4
]
;
sk_sp
<
GrTextureProxy
>
fRGBProxy
;
const
SkYUVColorSpace
fYUVColorSpace
;
GrSurfaceOrigin
fOrigin
;
typedef
SkImage_GpuBase
INHERITED
;
}
;
#
endif
