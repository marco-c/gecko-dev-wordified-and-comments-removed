#
ifndef
SkDisplayEvent_DEFINED
#
define
SkDisplayEvent_DEFINED
#
include
"
SkDisplayable
.
h
"
#
include
"
SkMemberInfo
.
h
"
#
include
"
SkIntArray
.
h
"
#
include
"
SkKey
.
h
"
class
SkEvent
;
class
SkDisplayEvent
:
public
SkDisplayable
{
DECLARE_DISPLAY_MEMBER_INFO
(
Event
)
;
enum
Kind
{
kNo_kind
kKeyChar
kKeyPress
kKeyPressUp
kMouseDown
kMouseDrag
kMouseMove
kMouseUp
kOnEnd
kOnload
kUser
}
;
SkDisplayEvent
(
)
;
virtual
~
SkDisplayEvent
(
)
;
bool
addChild
(
SkAnimateMaker
&
SkDisplayable
*
child
)
override
;
bool
contains
(
SkDisplayable
*
)
override
;
SkDisplayable
*
contains
(
const
SkString
&
)
override
;
#
ifdef
SK_DEBUG
void
dumpEvent
(
SkAnimateMaker
*
)
;
#
endif
bool
enableEvent
(
SkAnimateMaker
&
)
;
bool
getProperty
(
int
index
SkScriptValue
*
)
const
override
;
void
onEndElement
(
SkAnimateMaker
&
maker
)
override
;
void
populateInput
(
SkAnimateMaker
&
const
SkEvent
&
fEvent
)
;
bool
setProperty
(
int
index
SkScriptValue
&
)
override
;
protected
:
SkKey
code
;
SkBool
disable
;
Kind
kind
;
SkString
target
;
SkScalar
x
;
SkScalar
y
;
SkTDDisplayableArray
fChildren
;
mutable
SkString
fKeyString
;
SkKey
fLastCode
;
SkKey
fMax
;
SkDisplayable
*
fTarget
;
private
:
void
deleteMembers
(
)
;
friend
class
SkEvents
;
typedef
SkDisplayable
INHERITED
;
}
;
#
endif
