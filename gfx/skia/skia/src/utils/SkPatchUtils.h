#
ifndef
SkPatchUtils_DEFINED
#
define
SkPatchUtils_DEFINED
#
include
"
SkColorPriv
.
h
"
#
include
"
SkMatrix
.
h
"
class
SK_API
SkPatchUtils
{
public
:
struct
VertexData
{
int
fVertexCount
fIndexCount
;
SkPoint
*
fPoints
;
SkPoint
*
fTexCoords
;
uint32_t
*
fColors
;
uint16_t
*
fIndices
;
VertexData
(
)
:
fVertexCount
(
0
)
fIndexCount
(
0
)
fPoints
(
nullptr
)
fTexCoords
(
nullptr
)
fColors
(
nullptr
)
fIndices
(
nullptr
)
{
}
~
VertexData
(
)
{
delete
[
]
fPoints
;
delete
[
]
fTexCoords
;
delete
[
]
fColors
;
delete
[
]
fIndices
;
}
}
;
enum
CubicCtrlPts
{
kTopP0_CubicCtrlPts
=
0
kTopP1_CubicCtrlPts
=
1
kTopP2_CubicCtrlPts
=
2
kTopP3_CubicCtrlPts
=
3
kRightP0_CubicCtrlPts
=
3
kRightP1_CubicCtrlPts
=
4
kRightP2_CubicCtrlPts
=
5
kRightP3_CubicCtrlPts
=
6
kBottomP0_CubicCtrlPts
=
9
kBottomP1_CubicCtrlPts
=
8
kBottomP2_CubicCtrlPts
=
7
kBottomP3_CubicCtrlPts
=
6
kLeftP0_CubicCtrlPts
=
0
kLeftP1_CubicCtrlPts
=
11
kLeftP2_CubicCtrlPts
=
10
kLeftP3_CubicCtrlPts
=
9
}
;
enum
Corner
{
kTopLeft_Corner
=
0
kTopRight_Corner
kBottomRight_Corner
kBottomLeft_Corner
}
;
enum
{
kNumCtrlPts
=
12
kNumCorners
=
4
kNumPtsCubic
=
4
}
;
static
SkISize
GetLevelOfDetail
(
const
SkPoint
cubics
[
12
]
const
SkMatrix
*
matrix
)
;
static
void
getTopCubic
(
const
SkPoint
cubics
[
12
]
SkPoint
points
[
4
]
)
;
static
void
getBottomCubic
(
const
SkPoint
cubics
[
12
]
SkPoint
points
[
4
]
)
;
static
void
getLeftCubic
(
const
SkPoint
cubics
[
12
]
SkPoint
points
[
4
]
)
;
static
void
getRightCubic
(
const
SkPoint
cubics
[
12
]
SkPoint
points
[
4
]
)
;
static
bool
getVertexData
(
SkPatchUtils
:
:
VertexData
*
data
const
SkPoint
cubics
[
12
]
const
SkColor
colors
[
4
]
const
SkPoint
texCoords
[
4
]
int
lodX
int
lodY
)
;
}
;
#
endif
