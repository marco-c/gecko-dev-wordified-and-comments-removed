#
ifndef
SkMD5_DEFINED
#
define
SkMD5_DEFINED
#
include
"
SkTypes
.
h
"
#
include
"
SkEndian
.
h
"
#
include
"
SkStream
.
h
"
class
SkMD5
:
public
SkWStream
{
public
:
SkMD5
(
)
;
bool
write
(
const
void
*
buffer
size_t
size
)
override
{
this
-
>
update
(
reinterpret_cast
<
const
uint8_t
*
>
(
buffer
)
size
)
;
return
true
;
}
size_t
bytesWritten
(
)
const
override
{
return
SkToSizeT
(
this
-
>
byteCount
)
;
}
void
update
(
const
uint8_t
*
input
size_t
length
)
;
struct
Digest
{
uint8_t
data
[
16
]
;
bool
operator
=
=
(
Digest
const
&
other
)
const
{
return
0
=
=
memcmp
(
data
other
.
data
sizeof
(
data
)
)
;
}
bool
operator
!
=
(
Digest
const
&
other
)
const
{
return
0
!
=
memcmp
(
data
other
.
data
sizeof
(
data
)
)
;
}
}
;
void
finish
(
Digest
&
digest
)
;
private
:
uint64_t
byteCount
;
uint32_t
state
[
4
]
;
uint8_t
buffer
[
64
]
;
}
;
#
endif
