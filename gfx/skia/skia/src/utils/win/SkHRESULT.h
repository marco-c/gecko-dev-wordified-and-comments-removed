#
ifndef
SkHRESULT_DEFINED
#
define
SkHRESULT_DEFINED
#
include
"
include
/
core
/
SkTypes
.
h
"
#
ifdef
SK_BUILD_FOR_WIN
#
include
"
src
/
base
/
SkLeanWindows
.
h
"
void
SkTraceHR
(
const
char
*
file
unsigned
long
line
HRESULT
hr
const
char
*
msg
)
;
#
ifdef
SK_DEBUG
#
define
SK_TRACEHR
(
_hr
_msg
)
SkTraceHR
(
__FILE__
__LINE__
_hr
_msg
)
#
else
#
define
SK_TRACEHR
(
_hr
_msg
)
sk_ignore_unused_variable
(
_hr
)
#
endif
#
define
HR_GENERAL
(
_ex
_msg
_ret
)
do
{
\
HRESULT
_hr
=
_ex
;
\
if
(
FAILED
(
_hr
)
)
{
\
SK_TRACEHR
(
_hr
_msg
)
;
\
return
_ret
;
\
}
\
}
while
(
false
)
#
define
HR
(
ex
)
HR_GENERAL
(
ex
nullptr
_hr
)
#
define
HRM
(
ex
msg
)
HR_GENERAL
(
ex
msg
_hr
)
#
define
HRB
(
ex
)
HR_GENERAL
(
ex
nullptr
false
)
#
define
HRBM
(
ex
msg
)
HR_GENERAL
(
ex
msg
false
)
#
define
HRN
(
ex
)
HR_GENERAL
(
ex
nullptr
nullptr
)
#
define
HRNM
(
ex
msg
)
HR_GENERAL
(
ex
msg
nullptr
)
#
define
HRV
(
ex
)
HR_GENERAL
(
ex
nullptr
)
#
define
HRVM
(
ex
msg
)
HR_GENERAL
(
ex
msg
)
#
define
HRZ
(
ex
)
HR_GENERAL
(
ex
nullptr
0
)
#
define
HRZM
(
ex
msg
)
HR_GENERAL
(
ex
msg
0
)
#
endif
#
endif
