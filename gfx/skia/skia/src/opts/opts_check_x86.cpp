#
include
"
SkBitmapProcState_opts_SSE2
.
h
"
#
include
"
SkBitmapProcState_opts_SSSE3
.
h
"
#
include
"
SkBitmapScaler
.
h
"
#
include
"
SkBlitMask
.
h
"
#
include
"
SkBlitRow
.
h
"
#
include
"
SkBlitRow_opts_SSE2
.
h
"
#
include
"
SkCpu
.
h
"
void
SkBitmapProcState
:
:
platformProcs
(
)
{
if
(
!
SkCpu
:
:
Supports
(
SkCpu
:
:
SSE2
)
)
{
return
;
}
const
bool
ssse3
=
SkCpu
:
:
Supports
(
SkCpu
:
:
SSSE3
)
;
if
(
fSampleProc32
=
=
S32_opaque_D32_filter_DX
)
{
if
(
ssse3
)
{
fSampleProc32
=
S32_opaque_D32_filter_DX_SSSE3
;
}
else
{
fSampleProc32
=
S32_opaque_D32_filter_DX_SSE2
;
}
}
else
if
(
fSampleProc32
=
=
S32_alpha_D32_filter_DX
)
{
if
(
ssse3
)
{
fSampleProc32
=
S32_alpha_D32_filter_DX_SSSE3
;
}
else
{
fSampleProc32
=
S32_alpha_D32_filter_DX_SSE2
;
}
}
if
(
fMatrixProc
=
=
ClampX_ClampY_filter_scale
)
{
fMatrixProc
=
ClampX_ClampY_filter_scale_SSE2
;
}
else
if
(
fMatrixProc
=
=
ClampX_ClampY_nofilter_scale
)
{
fMatrixProc
=
ClampX_ClampY_nofilter_scale_SSE2
;
}
}
static
const
SkBlitRow
:
:
Proc32
platform_32_procs_SSE2
[
]
=
{
nullptr
S32_Blend_BlitRow32_SSE2
nullptr
S32A_Blend_BlitRow32_SSE2
}
;
SkBlitRow
:
:
Proc32
SkBlitRow
:
:
PlatformProcs32
(
unsigned
flags
)
{
if
(
SkCpu
:
:
Supports
(
SkCpu
:
:
SSE2
)
)
{
return
platform_32_procs_SSE2
[
flags
]
;
}
else
{
return
nullptr
;
}
}
SkBlitMask
:
:
BlitLCD16RowProc
SkBlitMask
:
:
PlatformBlitRowProcs16
(
bool
isOpaque
)
{
if
(
SkCpu
:
:
Supports
(
SkCpu
:
:
SSE2
)
)
{
if
(
isOpaque
)
{
return
SkBlitLCD16OpaqueRow_SSE2
;
}
else
{
return
SkBlitLCD16Row_SSE2
;
}
}
else
{
return
nullptr
;
}
}
SkBlitMask
:
:
RowProc
SkBlitMask
:
:
PlatformRowProcs
(
SkColorType
SkMask
:
:
Format
RowFlags
)
{
return
nullptr
;
}
