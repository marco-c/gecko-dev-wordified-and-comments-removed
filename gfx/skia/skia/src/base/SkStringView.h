#
ifndef
SkStringView_DEFINED
#
define
SkStringView_DEFINED
#
include
<
cstring
>
#
include
<
string_view
>
namespace
skstd
{
inline
constexpr
bool
starts_with
(
std
:
:
string_view
str
std
:
:
string_view
prefix
)
{
if
(
prefix
.
length
(
)
>
str
.
length
(
)
)
{
return
false
;
}
return
prefix
.
length
(
)
=
=
0
|
|
!
memcmp
(
str
.
data
(
)
prefix
.
data
(
)
prefix
.
length
(
)
)
;
}
inline
constexpr
bool
starts_with
(
std
:
:
string_view
str
std
:
:
string_view
:
:
value_type
c
)
{
return
!
str
.
empty
(
)
&
&
str
.
front
(
)
=
=
c
;
}
inline
constexpr
bool
ends_with
(
std
:
:
string_view
str
std
:
:
string_view
suffix
)
{
if
(
suffix
.
length
(
)
>
str
.
length
(
)
)
{
return
false
;
}
return
suffix
.
length
(
)
=
=
0
|
|
!
memcmp
(
str
.
data
(
)
+
str
.
length
(
)
-
suffix
.
length
(
)
suffix
.
data
(
)
suffix
.
length
(
)
)
;
}
inline
constexpr
bool
ends_with
(
std
:
:
string_view
str
std
:
:
string_view
:
:
value_type
c
)
{
return
!
str
.
empty
(
)
&
&
str
.
back
(
)
=
=
c
;
}
inline
constexpr
bool
contains
(
std
:
:
string_view
str
std
:
:
string_view
needle
)
{
return
str
.
find
(
needle
)
!
=
std
:
:
string_view
:
:
npos
;
}
inline
constexpr
bool
contains
(
std
:
:
string_view
str
std
:
:
string_view
:
:
value_type
c
)
{
return
str
.
find
(
c
)
!
=
std
:
:
string_view
:
:
npos
;
}
}
#
endif
