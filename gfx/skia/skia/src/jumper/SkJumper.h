#
ifndef
SkJumper_DEFINED
#
define
SkJumper_DEFINED
#
if
defined
(
JUMPER
)
&
&
(
defined
(
__aarch64__
)
|
|
defined
(
__arm__
)
)
#
define
memcpy
__builtin_memcpy
using
int8_t
=
signed
char
;
using
uint8_t
=
unsigned
char
;
using
int16_t
=
signed
short
;
using
uint16_t
=
unsigned
short
;
using
int32_t
=
signed
int
;
using
uint32_t
=
unsigned
int
;
#
if
defined
(
__aarch64__
)
using
int64_t
=
signed
long
;
using
uint64_t
=
unsigned
long
;
using
size_t
=
uint64_t
;
#
else
using
int64_t
=
signed
long
long
;
using
uint64_t
=
unsigned
long
long
;
using
size_t
=
uint32_t
;
#
endif
#
define
__CLANG_STDINT_H
#
define
_STDINT_H_
#
else
#
include
<
string
.
h
>
#
include
<
stdint
.
h
>
#
endif
static
const
int
SkJumper_kMaxStride
=
8
;
struct
SkJumper_constants
{
float
iota
[
SkJumper_kMaxStride
]
;
}
;
struct
SkJumper_GatherCtx
{
const
void
*
pixels
;
const
uint32_t
*
ctable
;
int
stride
;
}
;
struct
SkJumper_SamplerCtx
{
float
x
[
SkJumper_kMaxStride
]
;
float
y
[
SkJumper_kMaxStride
]
;
float
fx
[
SkJumper_kMaxStride
]
;
float
fy
[
SkJumper_kMaxStride
]
;
float
scalex
[
SkJumper_kMaxStride
]
;
float
scaley
[
SkJumper_kMaxStride
]
;
}
;
#
endif
