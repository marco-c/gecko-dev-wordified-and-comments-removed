#
ifndef
SkPDFDocumentPriv_DEFINED
#
define
SkPDFDocumentPriv_DEFINED
#
include
"
SkCanvas
.
h
"
#
include
"
SkPDFDocument
.
h
"
#
include
"
SkPDFCanon
.
h
"
#
include
"
SkPDFFont
.
h
"
#
include
"
SkPDFMetadata
.
h
"
class
SkPDFDevice
;
class
SkPDFTag
;
const
char
*
SkPDFGetNodeIdKey
(
)
;
struct
SkPDFObjectSerializer
{
SkPDFObjNumMap
fObjNumMap
;
std
:
:
vector
<
int32_t
>
fOffsets
;
sk_sp
<
SkPDFObject
>
fInfoDict
;
size_t
fBaseOffset
;
size_t
fNextToBeSerialized
;
SkPDFObjectSerializer
(
)
;
~
SkPDFObjectSerializer
(
)
;
SkPDFObjectSerializer
(
SkPDFObjectSerializer
&
&
)
;
SkPDFObjectSerializer
&
operator
=
(
SkPDFObjectSerializer
&
&
)
;
SkPDFObjectSerializer
(
const
SkPDFObjectSerializer
&
)
=
delete
;
SkPDFObjectSerializer
&
operator
=
(
const
SkPDFObjectSerializer
&
)
=
delete
;
void
addObjectRecursively
(
const
sk_sp
<
SkPDFObject
>
&
)
;
void
serializeHeader
(
SkWStream
*
const
SkPDF
:
:
Metadata
&
)
;
void
serializeObjects
(
SkWStream
*
)
;
void
serializeFooter
(
SkWStream
*
const
sk_sp
<
SkPDFObject
>
sk_sp
<
SkPDFObject
>
)
;
int32_t
offset
(
SkWStream
*
)
;
}
;
class
SkPDFDocument
:
public
SkDocument
{
public
:
SkPDFDocument
(
SkWStream
*
SkPDF
:
:
Metadata
)
;
~
SkPDFDocument
(
)
override
;
SkCanvas
*
onBeginPage
(
SkScalar
SkScalar
)
override
;
void
onEndPage
(
)
override
;
void
onClose
(
SkWStream
*
)
override
;
void
onAbort
(
)
override
;
void
serialize
(
const
sk_sp
<
SkPDFObject
>
&
)
;
SkPDFCanon
*
canon
(
)
{
return
&
fCanon
;
}
void
registerFont
(
SkPDFFont
*
f
)
{
fFonts
.
add
(
f
)
;
}
const
SkPDF
:
:
Metadata
&
metadata
(
)
const
{
return
fMetadata
;
}
sk_sp
<
SkPDFDict
>
getPage
(
int
pageIndex
)
const
;
int
getMarkIdForNodeId
(
int
nodeId
)
;
private
:
sk_sp
<
SkPDFTag
>
recursiveBuildTagTree
(
const
SkPDF
:
:
StructureElementNode
&
node
sk_sp
<
SkPDFTag
>
parent
)
;
SkPDFObjectSerializer
fObjectSerializer
;
SkPDFCanon
fCanon
;
SkCanvas
fCanvas
;
std
:
:
vector
<
sk_sp
<
SkPDFDict
>
>
fPages
;
SkTHashSet
<
SkPDFFont
*
>
fFonts
;
sk_sp
<
SkPDFDict
>
fDests
;
sk_sp
<
SkPDFDevice
>
fPageDevice
;
sk_sp
<
SkPDFObject
>
fID
;
sk_sp
<
SkPDFObject
>
fXMP
;
SkPDF
:
:
Metadata
fMetadata
;
SkScalar
fRasterScale
=
1
;
SkScalar
fInverseRasterScale
=
1
;
sk_sp
<
SkPDFTag
>
fTagRoot
;
SkTArray
<
SkTArray
<
sk_sp
<
SkPDFTag
>
>
>
fMarksPerPage
;
SkTHashMap
<
int
sk_sp
<
SkPDFTag
>
>
fNodeIdToTag
;
void
reset
(
)
;
}
;
#
endif
