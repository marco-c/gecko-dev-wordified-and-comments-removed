#
ifndef
SkKeyedImage_DEFINED
#
define
SkKeyedImage_DEFINED
#
include
"
include
/
core
/
SkImage
.
h
"
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
src
/
pdf
/
SkBitmapKey
.
h
"
class
SkBitmap
;
struct
SkIRect
;
class
SkKeyedImage
{
public
:
SkKeyedImage
(
)
{
}
SkKeyedImage
(
sk_sp
<
SkImage
>
)
;
SkKeyedImage
(
const
SkBitmap
&
)
;
SkKeyedImage
(
SkKeyedImage
&
&
)
=
default
;
SkKeyedImage
(
const
SkKeyedImage
&
)
=
default
;
SkKeyedImage
&
operator
=
(
SkKeyedImage
&
&
)
=
default
;
SkKeyedImage
&
operator
=
(
const
SkKeyedImage
&
)
=
default
;
explicit
operator
bool
(
)
const
{
return
fImage
!
=
nullptr
;
}
const
SkBitmapKey
&
key
(
)
const
{
return
fKey
;
}
const
sk_sp
<
SkImage
>
&
image
(
)
const
{
return
fImage
;
}
sk_sp
<
SkImage
>
release
(
)
;
SkKeyedImage
subset
(
SkIRect
subset
)
const
;
private
:
sk_sp
<
SkImage
>
fImage
;
SkBitmapKey
fKey
=
{
{
0
0
0
0
}
0
}
;
}
;
SkBitmapKey
SkBitmapKeyFromImage
(
const
SkImage
*
)
;
#
endif
