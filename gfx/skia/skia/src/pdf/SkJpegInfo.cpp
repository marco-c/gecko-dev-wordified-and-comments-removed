#
include
"
SkData
.
h
"
#
include
"
SkJpegInfo
.
h
"
namespace
{
class
JpegSegment
{
public
:
JpegSegment
(
const
SkData
*
skdata
)
:
fData
(
static_cast
<
const
char
*
>
(
skdata
-
>
data
(
)
)
)
fSize
(
skdata
-
>
size
(
)
)
fOffset
(
0
)
fLength
(
0
)
{
}
bool
read
(
)
{
if
(
!
this
-
>
readBigendianUint16
(
&
fMarker
)
)
{
return
false
;
}
if
(
JpegSegment
:
:
StandAloneMarker
(
fMarker
)
)
{
fLength
=
0
;
fBuffer
=
nullptr
;
return
true
;
}
if
(
!
this
-
>
readBigendianUint16
(
&
fLength
)
|
|
fLength
<
2
)
{
return
false
;
}
fLength
-
=
2
;
if
(
fOffset
+
fLength
>
fSize
)
{
return
false
;
}
fBuffer
=
&
fData
[
fOffset
]
;
fOffset
+
=
fLength
;
return
true
;
}
bool
isSOF
(
)
{
return
(
fMarker
&
0xFFF0
)
=
=
0xFFC0
&
&
fMarker
!
=
0xFFC4
&
&
fMarker
!
=
0xFFC8
&
&
fMarker
!
=
0xFFCC
;
}
uint16_t
marker
(
)
{
return
fMarker
;
}
uint16_t
length
(
)
{
return
fLength
;
}
const
char
*
data
(
)
{
return
fBuffer
;
}
static
uint16_t
GetBigendianUint16
(
const
char
*
ptr
)
{
return
(
static_cast
<
uint8_t
>
(
ptr
[
0
]
)
<
<
8
)
|
static_cast
<
uint8_t
>
(
ptr
[
1
]
)
;
}
private
:
const
char
*
const
fData
;
const
size_t
fSize
;
size_t
fOffset
;
const
char
*
fBuffer
;
uint16_t
fMarker
;
uint16_t
fLength
;
bool
readBigendianUint16
(
uint16_t
*
value
)
{
if
(
fOffset
+
2
>
fSize
)
{
return
false
;
}
*
value
=
JpegSegment
:
:
GetBigendianUint16
(
&
fData
[
fOffset
]
)
;
fOffset
+
=
2
;
return
true
;
}
static
bool
StandAloneMarker
(
uint16_t
marker
)
{
return
(
marker
&
0xFFF8
)
=
=
0xFFD0
|
|
marker
=
=
0xFFD8
|
|
marker
=
=
0xFFD9
|
|
marker
=
=
0xFF01
;
}
}
;
}
bool
SkIsJFIF
(
const
SkData
*
skdata
SkJFIFInfo
*
info
)
{
static
const
uint16_t
kSOI
=
0xFFD8
;
static
const
uint16_t
kAPP0
=
0xFFE0
;
JpegSegment
segment
(
skdata
)
;
if
(
!
segment
.
read
(
)
|
|
segment
.
marker
(
)
!
=
kSOI
)
{
return
false
;
}
if
(
!
segment
.
read
(
)
|
|
segment
.
marker
(
)
!
=
kAPP0
)
{
return
false
;
}
static
const
char
kJfif
[
]
=
{
'
J
'
'
F
'
'
I
'
'
F
'
'
\
0
'
}
;
SkASSERT
(
segment
.
data
(
)
)
;
if
(
SkToSizeT
(
segment
.
length
(
)
)
<
sizeof
(
kJfif
)
|
|
0
!
=
memcmp
(
segment
.
data
(
)
kJfif
sizeof
(
kJfif
)
)
)
{
return
false
;
}
do
{
if
(
!
segment
.
read
(
)
)
{
return
false
;
}
}
while
(
!
segment
.
isSOF
(
)
)
;
if
(
segment
.
length
(
)
<
6
)
{
return
false
;
}
if
(
8
!
=
segment
.
data
(
)
[
0
]
)
{
return
false
;
}
int
numberOfComponents
=
segment
.
data
(
)
[
5
]
;
if
(
numberOfComponents
!
=
1
&
&
numberOfComponents
!
=
3
)
{
return
false
;
}
if
(
info
)
{
info
-
>
fSize
.
set
(
JpegSegment
:
:
GetBigendianUint16
(
&
segment
.
data
(
)
[
3
]
)
JpegSegment
:
:
GetBigendianUint16
(
&
segment
.
data
(
)
[
1
]
)
)
;
if
(
numberOfComponents
=
=
3
)
{
info
-
>
fType
=
SkJFIFInfo
:
:
kYCbCr
;
}
else
{
info
-
>
fType
=
SkJFIFInfo
:
:
kGrayscale
;
}
}
return
true
;
}
