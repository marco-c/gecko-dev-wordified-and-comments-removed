#
ifndef
SkPDFTag_DEFINED
#
define
SkPDFTag_DEFINED
#
include
"
include
/
core
/
SkSpan
.
h
"
#
include
"
include
/
core
/
SkString
.
h
"
#
include
"
include
/
docs
/
SkPDFDocument
.
h
"
#
include
"
include
/
private
/
base
/
SkTArray
.
h
"
#
include
"
src
/
base
/
SkArenaAlloc
.
h
"
#
include
"
src
/
core
/
SkTHash
.
h
"
#
include
"
src
/
pdf
/
SkPDFTypes
.
h
"
#
include
<
cstddef
>
class
SkPDFDocument
;
struct
SkPDFStructElem
;
struct
SkPoint
;
class
SkPDFStructTree
{
public
:
SkPDFStructTree
(
SkPDF
:
:
StructureElementNode
*
SkPDF
:
:
Metadata
:
:
Outline
)
;
SkPDFStructTree
(
const
SkPDFStructTree
&
)
=
delete
;
SkPDFStructTree
&
operator
=
(
const
SkPDFStructTree
&
)
=
delete
;
SkPDFStructTree
(
SkPDFStructTree
&
&
)
=
delete
;
SkPDFStructTree
&
operator
=
(
SkPDFStructTree
&
&
)
=
delete
;
~
SkPDFStructTree
(
)
;
class
Mark
{
SkPDFStructElem
*
fStructElem
;
size_t
fMarkIndex
;
public
:
Mark
(
SkPDFStructElem
*
structElem
size_t
markIndex
)
:
fStructElem
(
structElem
)
fMarkIndex
(
markIndex
)
{
}
Mark
(
)
:
Mark
(
nullptr
0
)
{
}
Mark
(
const
Mark
&
)
=
default
;
Mark
&
operator
=
(
const
Mark
&
)
=
default
;
Mark
(
Mark
&
&
)
=
default
;
Mark
&
operator
=
(
Mark
&
&
)
=
default
;
explicit
operator
bool
(
)
const
{
return
fStructElem
;
}
int
mcid
(
)
const
;
int
elemId
(
)
const
;
SkString
structType
(
)
const
;
void
accumulate
(
SkPoint
)
;
}
;
SkPDFStructTree
:
:
Mark
createMarkForElemId
(
int
elemId
unsigned
pageIndex
)
;
int
createStructParentKeyForElemId
(
int
elemId
SkPDFIndirectReference
contentItemRef
unsigned
pageIndex
)
;
void
addStructElemTitle
(
int
elemId
SkSpan
<
const
char
>
)
;
SkPDFIndirectReference
emitStructTreeRoot
(
SkPDFDocument
*
doc
)
const
;
SkPDFIndirectReference
makeOutline
(
SkPDFDocument
*
doc
)
const
;
SkString
getRootLanguage
(
)
;
struct
IDTreeEntry
{
int
elemId
;
SkPDFIndirectReference
structElemRef
;
}
;
private
:
void
move
(
SkPDF
:
:
StructureElementNode
&
node
SkPDFStructElem
*
structElem
bool
wantTitle
)
;
SkArenaAlloc
fArena
;
skia_private
:
:
THashMap
<
int
SkPDFStructElem
*
>
fStructElemForElemId
;
SkPDFStructElem
*
fRoot
=
nullptr
;
SkPDF
:
:
Metadata
:
:
Outline
fOutline
=
SkPDF
:
:
Metadata
:
:
Outline
:
:
None
;
skia_private
:
:
TArray
<
skia_private
:
:
TArray
<
SkPDFStructElem
*
>
>
fStructElemForMcidForPage
;
skia_private
:
:
TArray
<
SkPDFStructElem
*
>
fStructElemForContentItem
;
}
;
#
endif
