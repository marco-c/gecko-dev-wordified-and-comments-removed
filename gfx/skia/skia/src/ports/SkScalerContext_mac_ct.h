#
ifndef
SkScalerContext_mac_ct_DEFINED
#
define
SkScalerContext_mac_ct_DEFINED
#
include
"
include
/
core
/
SkTypes
.
h
"
#
if
defined
(
SK_BUILD_FOR_MAC
)
|
|
defined
(
SK_BUILD_FOR_IOS
)
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
core
/
SkSize
.
h
"
#
include
"
src
/
base
/
SkAutoMalloc
.
h
"
#
include
"
src
/
core
/
SkScalerContext
.
h
"
#
include
"
src
/
utils
/
mac
/
SkUniqueCFRef
.
h
"
#
ifdef
SK_BUILD_FOR_MAC
#
import
<
ApplicationServices
/
ApplicationServices
.
h
>
#
endif
#
ifdef
SK_BUILD_FOR_IOS
#
include
<
CoreText
/
CoreText
.
h
>
#
include
<
CoreText
/
CTFontManager
.
h
>
#
include
<
CoreGraphics
/
CoreGraphics
.
h
>
#
include
<
CoreFoundation
/
CoreFoundation
.
h
>
#
endif
#
include
<
memory
>
class
SkDescriptor
;
class
SkGlyph
;
class
SkPath
;
class
SkTypeface_Mac
;
struct
SkFontMetrics
;
typedef
uint32_t
CGRGBPixel
;
class
SkScalerContext_Mac
:
public
SkScalerContext
{
public
:
SkScalerContext_Mac
(
sk_sp
<
SkTypeface_Mac
>
const
SkScalerContextEffects
&
const
SkDescriptor
*
)
;
protected
:
GlyphMetrics
generateMetrics
(
const
SkGlyph
&
SkArenaAlloc
*
)
override
;
void
generateImage
(
const
SkGlyph
&
void
*
)
override
;
bool
generatePath
(
const
SkGlyph
&
glyph
SkPath
*
path
bool
*
modified
)
override
;
void
generateFontMetrics
(
SkFontMetrics
*
)
override
;
private
:
class
Offscreen
{
public
:
Offscreen
(
SkColor
foregroundColor
)
;
CGRGBPixel
*
getCG
(
const
SkScalerContext_Mac
&
context
const
SkGlyph
&
glyph
CGGlyph
glyphID
size_t
*
rowBytesPtr
bool
generateA8FromLCD
bool
lightOnDark
)
;
private
:
enum
{
kSize
=
32
*
32
*
sizeof
(
CGRGBPixel
)
}
;
SkAutoSMalloc
<
kSize
>
fImageStorage
;
SkUniqueCFRef
<
CGColorSpaceRef
>
fRGBSpace
;
SkUniqueCFRef
<
CGContextRef
>
fCG
;
SkUniqueCFRef
<
CGColorRef
>
fCGForegroundColor
;
SkColor
fSKForegroundColor
;
SkISize
fSize
;
bool
fDoAA
;
bool
fDoLCD
;
}
;
Offscreen
fOffscreen
;
SkUniqueCFRef
<
CTFontRef
>
fCTFont
;
CGAffineTransform
fTransform
;
CGAffineTransform
fInvTransform
;
SkUniqueCFRef
<
CGFontRef
>
fCGFont
;
const
bool
fDoSubPosition
;
friend
class
Offscreen
;
using
INHERITED
=
SkScalerContext
;
}
;
#
endif
#
endif
