#
ifndef
SKSL_ASTPARAMETER
#
define
SKSL_ASTPARAMETER
#
include
"
SkSLASTPositionNode
.
h
"
#
include
"
SkSLASTType
.
h
"
#
include
"
.
.
/
ir
/
SkSLModifiers
.
h
"
namespace
SkSL
{
struct
ASTParameter
:
public
ASTPositionNode
{
ASTParameter
(
int
offset
Modifiers
modifiers
std
:
:
unique_ptr
<
ASTType
>
type
StringFragment
name
std
:
:
vector
<
int
>
sizes
)
:
INHERITED
(
offset
)
fModifiers
(
modifiers
)
fType
(
std
:
:
move
(
type
)
)
fName
(
name
)
fSizes
(
std
:
:
move
(
sizes
)
)
{
}
String
description
(
)
const
override
{
String
result
=
fModifiers
.
description
(
)
+
fType
-
>
description
(
)
+
"
"
+
fName
;
for
(
int
size
:
fSizes
)
{
result
+
=
"
[
"
+
to_string
(
size
)
+
"
]
"
;
}
return
result
;
}
const
Modifiers
fModifiers
;
const
std
:
:
unique_ptr
<
ASTType
>
fType
;
const
StringFragment
fName
;
const
std
:
:
vector
<
int
>
fSizes
;
typedef
ASTPositionNode
INHERITED
;
}
;
}
#
endif
