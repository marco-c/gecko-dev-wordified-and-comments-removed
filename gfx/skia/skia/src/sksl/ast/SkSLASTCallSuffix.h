#
ifndef
SKSL_ASTCALLSUFFIX
#
define
SKSL_ASTCALLSUFFIX
#
include
<
sstream
>
#
include
<
vector
>
#
include
"
SkSLASTSuffix
.
h
"
namespace
SkSL
{
struct
ASTCallSuffix
:
public
ASTSuffix
{
ASTCallSuffix
(
Position
position
std
:
:
vector
<
std
:
:
unique_ptr
<
ASTExpression
>
>
arguments
)
:
INHERITED
(
position
ASTSuffix
:
:
kCall_Kind
)
fArguments
(
std
:
:
move
(
arguments
)
)
{
}
std
:
:
string
description
(
)
const
override
{
std
:
:
string
result
(
"
(
"
)
;
std
:
:
string
separator
=
"
"
;
for
(
size_t
i
=
0
;
i
<
fArguments
.
size
(
)
;
+
+
i
)
{
result
+
=
separator
;
separator
=
"
"
;
result
+
=
fArguments
[
i
]
-
>
description
(
)
;
}
result
+
=
"
)
"
;
return
result
;
}
std
:
:
vector
<
std
:
:
unique_ptr
<
ASTExpression
>
>
fArguments
;
typedef
ASTSuffix
INHERITED
;
}
;
}
#
endif
