#
include
"
src
/
base
/
SkEnumBitMask
.
h
"
#
include
"
src
/
sksl
/
SkSLAnalysis
.
h
"
#
include
"
src
/
sksl
/
analysis
/
SkSLProgramUsage
.
h
"
#
include
"
src
/
sksl
/
ir
/
SkSLModifierFlags
.
h
"
#
include
"
src
/
sksl
/
ir
/
SkSLVariable
.
h
"
#
include
"
src
/
sksl
/
transform
/
SkSLTransform
.
h
"
namespace
SkSL
{
class
Expression
;
ModifierFlags
Transform
:
:
AddConstToVarModifiers
(
const
Variable
&
var
const
Expression
*
initialValue
const
ProgramUsage
*
usage
)
{
ModifierFlags
flags
=
var
.
modifierFlags
(
)
;
if
(
flags
.
isConst
(
)
)
{
return
flags
;
}
if
(
!
initialValue
|
|
!
Analysis
:
:
IsCompileTimeConstant
(
*
initialValue
)
)
{
return
flags
;
}
ProgramUsage
:
:
VariableCounts
counts
=
usage
-
>
get
(
var
)
;
if
(
counts
.
fWrite
!
=
1
)
{
return
flags
;
}
return
flags
|
ModifierFlag
:
:
kConst
;
}
}
