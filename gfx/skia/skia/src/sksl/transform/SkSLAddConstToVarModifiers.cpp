#
include
"
include
/
private
/
SkSLModifiers
.
h
"
#
include
"
src
/
sksl
/
SkSLAnalysis
.
h
"
#
include
"
src
/
sksl
/
SkSLContext
.
h
"
#
include
"
src
/
sksl
/
SkSLModifiersPool
.
h
"
#
include
"
src
/
sksl
/
analysis
/
SkSLProgramUsage
.
h
"
#
include
"
src
/
sksl
/
ir
/
SkSLVariable
.
h
"
#
include
"
src
/
sksl
/
transform
/
SkSLTransform
.
h
"
namespace
SkSL
{
class
Expression
;
const
Modifiers
*
Transform
:
:
AddConstToVarModifiers
(
const
Context
&
context
const
Variable
&
var
const
Expression
*
initialValue
const
ProgramUsage
*
usage
)
{
const
Modifiers
*
modifiers
=
&
var
.
modifiers
(
)
;
if
(
modifiers
-
>
fFlags
&
Modifiers
:
:
kConst_Flag
)
{
return
modifiers
;
}
if
(
!
initialValue
|
|
!
Analysis
:
:
IsCompileTimeConstant
(
*
initialValue
)
)
{
return
modifiers
;
}
ProgramUsage
:
:
VariableCounts
counts
=
usage
-
>
get
(
var
)
;
if
(
counts
.
fWrite
!
=
1
)
{
return
modifiers
;
}
Modifiers
constModifiers
=
*
modifiers
;
constModifiers
.
fFlags
|
=
Modifiers
:
:
kConst_Flag
;
return
context
.
fModifiersPool
-
>
add
(
constModifiers
)
;
}
}
