#
ifndef
SKVMDEBUGTRACE
#
define
SKVMDEBUGTRACE
#
include
"
include
/
sksl
/
SkSLDebugTrace
.
h
"
#
include
"
include
/
core
/
SkPoint
.
h
"
#
include
"
src
/
sksl
/
tracing
/
SkSLDebugInfo
.
h
"
#
include
"
src
/
sksl
/
tracing
/
SkSLTraceHook
.
h
"
#
include
<
cstdint
>
#
include
<
memory
>
#
include
<
string
>
#
include
<
vector
>
class
SkStream
;
class
SkWStream
;
namespace
SkSL
{
class
SkVMDebugTrace
:
public
DebugTrace
{
public
:
void
setTraceCoord
(
const
SkIPoint
&
coord
)
;
void
setSource
(
std
:
:
string
source
)
;
bool
readTrace
(
SkStream
*
r
)
;
void
writeTrace
(
SkWStream
*
w
)
const
override
;
void
dump
(
SkWStream
*
o
)
const
override
;
std
:
:
string
getSlotComponentSuffix
(
int
slotIndex
)
const
;
std
:
:
string
getSlotValue
(
int
slotIndex
int32_t
value
)
const
;
double
interpretValueBits
(
int
slotIndex
int32_t
valueBits
)
const
;
std
:
:
string
slotValueToString
(
int
slotIndex
double
value
)
const
;
SkIPoint
fTraceCoord
=
{
}
;
std
:
:
vector
<
SlotDebugInfo
>
fSlotInfo
;
std
:
:
vector
<
FunctionDebugInfo
>
fFuncInfo
;
std
:
:
vector
<
TraceInfo
>
fTraceInfo
;
std
:
:
vector
<
std
:
:
string
>
fSource
;
std
:
:
unique_ptr
<
SkSL
:
:
TraceHook
>
fTraceHook
;
}
;
}
#
endif
