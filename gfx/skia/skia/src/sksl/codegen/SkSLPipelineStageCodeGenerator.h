#
ifndef
SKSL_PIPELINESTAGECODEGENERATOR
#
define
SKSL_PIPELINESTAGECODEGENERATOR
#
include
"
include
/
core
/
SkTypes
.
h
"
#
if
defined
(
SKSL_STANDALONE
)
|
|
defined
(
SK_GANESH
)
|
|
defined
(
SK_GRAPHITE
)
#
include
<
string
>
namespace
SkSL
{
struct
Program
;
class
VarDeclaration
;
namespace
PipelineStage
{
class
Callbacks
{
public
:
virtual
~
Callbacks
(
)
=
default
;
virtual
std
:
:
string
getMainName
(
)
{
return
"
main
"
;
}
virtual
std
:
:
string
getMangledName
(
const
char
*
name
)
{
return
name
;
}
virtual
void
defineFunction
(
const
char
*
declaration
const
char
*
body
bool
isMain
)
=
0
;
virtual
void
declareFunction
(
const
char
*
declaration
)
=
0
;
virtual
void
defineStruct
(
const
char
*
definition
)
=
0
;
virtual
void
declareGlobal
(
const
char
*
declaration
)
=
0
;
virtual
std
:
:
string
declareUniform
(
const
VarDeclaration
*
)
=
0
;
virtual
std
:
:
string
sampleShader
(
int
index
std
:
:
string
coords
)
=
0
;
virtual
std
:
:
string
sampleColorFilter
(
int
index
std
:
:
string
color
)
=
0
;
virtual
std
:
:
string
sampleBlender
(
int
index
std
:
:
string
src
std
:
:
string
dst
)
=
0
;
virtual
std
:
:
string
toLinearSrgb
(
std
:
:
string
color
)
=
0
;
virtual
std
:
:
string
fromLinearSrgb
(
std
:
:
string
color
)
=
0
;
}
;
void
ConvertProgram
(
const
Program
&
program
const
char
*
sampleCoords
const
char
*
inputColor
const
char
*
destColor
Callbacks
*
callbacks
)
;
}
}
#
endif
#
endif
