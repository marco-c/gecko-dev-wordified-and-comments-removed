#
ifndef
SKSL_THREADCONTEXT
#
define
SKSL_THREADCONTEXT
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
"
include
/
sksl
/
SkSLErrorReporter
.
h
"
#
include
"
include
/
sksl
/
SkSLPosition
.
h
"
#
include
"
src
/
sksl
/
SkSLContext
.
h
"
#
include
"
src
/
sksl
/
SkSLProgramSettings
.
h
"
#
include
"
src
/
sksl
/
ir
/
SkSLProgram
.
h
"
#
include
<
cstdint
>
#
include
<
memory
>
#
include
<
string_view
>
#
include
<
vector
>
namespace
SkSL
{
class
Compiler
;
class
ModifiersPool
;
class
Pool
;
class
ProgramElement
;
class
SymbolTable
;
class
Variable
;
enum
class
ProgramKind
:
int8_t
;
struct
Modifiers
;
struct
Module
;
namespace
dsl
{
class
DSLCore
;
}
class
ThreadContext
{
public
:
ThreadContext
(
SkSL
:
:
Compiler
*
compiler
SkSL
:
:
ProgramKind
kind
const
SkSL
:
:
ProgramSettings
&
settings
const
SkSL
:
:
Module
*
module
bool
isModule
)
;
~
ThreadContext
(
)
;
static
bool
IsActive
(
)
;
static
SkSL
:
:
Compiler
&
Compiler
(
)
{
return
*
Instance
(
)
.
fCompiler
;
}
static
SkSL
:
:
Context
&
Context
(
)
;
static
const
SkSL
:
:
ProgramSettings
&
Settings
(
)
;
static
SkSL
:
:
Program
:
:
Inputs
&
Inputs
(
)
{
return
Instance
(
)
.
fInputs
;
}
static
std
:
:
vector
<
std
:
:
unique_ptr
<
SkSL
:
:
ProgramElement
>
>
&
ProgramElements
(
)
{
return
Instance
(
)
.
fProgramElements
;
}
static
std
:
:
vector
<
const
ProgramElement
*
>
&
SharedElements
(
)
{
return
Instance
(
)
.
fSharedElements
;
}
static
std
:
:
shared_ptr
<
SkSL
:
:
SymbolTable
>
&
SymbolTable
(
)
;
static
std
:
:
unique_ptr
<
Pool
>
&
MemoryPool
(
)
{
return
Instance
(
)
.
fPool
;
}
static
std
:
:
unique_ptr
<
ModifiersPool
>
&
GetModifiersPool
(
)
{
return
Instance
(
)
.
fModifiersPool
;
}
static
const
std
:
:
unique_ptr
<
ProgramConfig
>
&
GetProgramConfig
(
)
{
return
Instance
(
)
.
fConfig
;
}
static
bool
IsModule
(
)
{
return
GetProgramConfig
(
)
-
>
fIsBuiltinCode
;
}
static
const
SkSL
:
:
Modifiers
*
Modifiers
(
const
SkSL
:
:
Modifiers
&
modifiers
)
;
struct
RTAdjustData
{
const
Variable
*
fVar
=
nullptr
;
const
Variable
*
fInterfaceBlock
=
nullptr
;
int
fFieldIndex
=
-
1
;
}
;
static
RTAdjustData
&
RTAdjustState
(
)
;
static
ErrorReporter
&
GetErrorReporter
(
)
{
return
*
Context
(
)
.
fErrors
;
}
static
void
SetErrorReporter
(
ErrorReporter
*
errorReporter
)
;
static
void
ReportError
(
std
:
:
string_view
msg
Position
pos
=
Position
{
}
)
;
static
ThreadContext
&
Instance
(
)
;
static
void
SetInstance
(
std
:
:
unique_ptr
<
ThreadContext
>
instance
)
;
private
:
class
DefaultErrorReporter
:
public
ErrorReporter
{
void
handleError
(
std
:
:
string_view
msg
Position
pos
)
override
;
}
;
void
setupSymbolTable
(
)
;
std
:
:
unique_ptr
<
SkSL
:
:
ProgramConfig
>
fConfig
;
std
:
:
unique_ptr
<
SkSL
:
:
ModifiersPool
>
fModifiersPool
;
SkSL
:
:
Compiler
*
fCompiler
;
std
:
:
unique_ptr
<
Pool
>
fPool
;
SkSL
:
:
ProgramConfig
*
fOldConfig
;
SkSL
:
:
ModifiersPool
*
fOldModifiersPool
;
std
:
:
vector
<
std
:
:
unique_ptr
<
SkSL
:
:
ProgramElement
>
>
fProgramElements
;
std
:
:
vector
<
const
SkSL
:
:
ProgramElement
*
>
fSharedElements
;
DefaultErrorReporter
fDefaultErrorReporter
;
ErrorReporter
&
fOldErrorReporter
;
ProgramSettings
fSettings
;
RTAdjustData
fRTAdjust
;
Program
:
:
Inputs
fInputs
;
friend
class
dsl
:
:
DSLCore
;
}
;
}
#
endif
