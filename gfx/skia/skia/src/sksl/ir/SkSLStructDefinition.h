#
ifndef
SKSL_STRUCTDEFINITION
#
define
SKSL_STRUCTDEFINITION
#
include
"
include
/
private
/
base
/
SkTArray
.
h
"
#
include
"
src
/
sksl
/
SkSLPosition
.
h
"
#
include
"
src
/
sksl
/
ir
/
SkSLIRNode
.
h
"
#
include
"
src
/
sksl
/
ir
/
SkSLProgramElement
.
h
"
#
include
"
src
/
sksl
/
ir
/
SkSLType
.
h
"
#
include
<
memory
>
#
include
<
string
>
#
include
<
string_view
>
namespace
SkSL
{
class
Context
;
class
StructDefinition
final
:
public
ProgramElement
{
public
:
inline
static
constexpr
Kind
kIRNodeKind
=
Kind
:
:
kStructDefinition
;
StructDefinition
(
Position
pos
const
Type
&
type
)
:
INHERITED
(
pos
kIRNodeKind
)
fType
(
&
type
)
{
}
static
std
:
:
unique_ptr
<
StructDefinition
>
Convert
(
const
Context
&
context
Position
pos
std
:
:
string_view
name
skia_private
:
:
TArray
<
Field
>
fields
)
;
static
std
:
:
unique_ptr
<
StructDefinition
>
Make
(
Position
pos
const
Type
&
type
)
;
const
Type
&
type
(
)
const
{
return
*
fType
;
}
std
:
:
string
description
(
)
const
override
;
private
:
const
Type
*
fType
=
nullptr
;
using
INHERITED
=
ProgramElement
;
}
;
}
#
endif
