#
ifndef
SKSL_FORSTATEMENT
#
define
SKSL_FORSTATEMENT
#
include
"
SkSLExpression
.
h
"
#
include
"
SkSLStatement
.
h
"
#
include
"
SkSLSymbolTable
.
h
"
namespace
SkSL
{
struct
ForStatement
:
public
Statement
{
ForStatement
(
int
offset
std
:
:
unique_ptr
<
Statement
>
initializer
std
:
:
unique_ptr
<
Expression
>
test
std
:
:
unique_ptr
<
Expression
>
next
std
:
:
unique_ptr
<
Statement
>
statement
std
:
:
shared_ptr
<
SymbolTable
>
symbols
)
:
INHERITED
(
offset
kFor_Kind
)
fSymbols
(
symbols
)
fInitializer
(
std
:
:
move
(
initializer
)
)
fTest
(
std
:
:
move
(
test
)
)
fNext
(
std
:
:
move
(
next
)
)
fStatement
(
std
:
:
move
(
statement
)
)
{
}
String
description
(
)
const
override
{
String
result
(
"
for
(
"
)
;
if
(
fInitializer
)
{
result
+
=
fInitializer
-
>
description
(
)
;
}
result
+
=
"
"
;
if
(
fTest
)
{
result
+
=
fTest
-
>
description
(
)
;
}
result
+
=
"
;
"
;
if
(
fNext
)
{
result
+
=
fNext
-
>
description
(
)
;
}
result
+
=
"
)
"
+
fStatement
-
>
description
(
)
;
return
result
;
}
const
std
:
:
shared_ptr
<
SymbolTable
>
fSymbols
;
std
:
:
unique_ptr
<
Statement
>
fInitializer
;
std
:
:
unique_ptr
<
Expression
>
fTest
;
std
:
:
unique_ptr
<
Expression
>
fNext
;
std
:
:
unique_ptr
<
Statement
>
fStatement
;
typedef
Statement
INHERITED
;
}
;
}
#
endif
