#
include
"
src
/
sksl
/
ir
/
SkSLExtension
.
h
"
#
include
"
include
/
private
/
base
/
SkAssert
.
h
"
#
include
"
src
/
sksl
/
SkSLContext
.
h
"
#
include
"
src
/
sksl
/
SkSLErrorReporter
.
h
"
#
include
"
src
/
sksl
/
SkSLProgramSettings
.
h
"
namespace
SkSL
{
std
:
:
unique_ptr
<
Extension
>
Extension
:
:
Convert
(
const
Context
&
context
Position
pos
std
:
:
string_view
name
std
:
:
string_view
behaviorText
)
{
if
(
ProgramConfig
:
:
IsRuntimeEffect
(
context
.
fConfig
-
>
fKind
)
)
{
context
.
fErrors
-
>
error
(
pos
"
unsupported
directive
'
#
extension
'
"
)
;
return
nullptr
;
}
if
(
behaviorText
=
=
"
disable
"
)
{
return
nullptr
;
}
if
(
behaviorText
!
=
"
require
"
&
&
behaviorText
!
=
"
enable
"
&
&
behaviorText
!
=
"
warn
"
)
{
context
.
fErrors
-
>
error
(
pos
"
expected
'
require
'
'
enable
'
'
warn
'
or
'
disable
'
"
)
;
return
nullptr
;
}
return
Extension
:
:
Make
(
context
pos
name
)
;
}
std
:
:
unique_ptr
<
Extension
>
Extension
:
:
Make
(
const
Context
&
context
Position
pos
std
:
:
string_view
name
)
{
SkASSERT
(
!
ProgramConfig
:
:
IsRuntimeEffect
(
context
.
fConfig
-
>
fKind
)
)
;
return
std
:
:
make_unique
<
SkSL
:
:
Extension
>
(
pos
name
)
;
}
}
