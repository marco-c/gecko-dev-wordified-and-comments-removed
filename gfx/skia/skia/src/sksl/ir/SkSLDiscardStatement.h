#
ifndef
SKSL_DISCARDSTATEMENT
#
define
SKSL_DISCARDSTATEMENT
#
include
"
include
/
private
/
SkSLIRNode
.
h
"
#
include
"
include
/
private
/
SkSLStatement
.
h
"
#
include
"
include
/
sksl
/
SkSLPosition
.
h
"
#
include
<
memory
>
#
include
<
string
>
namespace
SkSL
{
class
Context
;
class
DiscardStatement
final
:
public
Statement
{
public
:
inline
static
constexpr
Kind
kIRNodeKind
=
Kind
:
:
kDiscard
;
DiscardStatement
(
Position
pos
)
:
INHERITED
(
pos
kIRNodeKind
)
{
}
static
std
:
:
unique_ptr
<
Statement
>
Convert
(
const
Context
&
context
Position
pos
)
;
static
std
:
:
unique_ptr
<
Statement
>
Make
(
const
Context
&
context
Position
pos
)
;
std
:
:
unique_ptr
<
Statement
>
clone
(
)
const
override
;
std
:
:
string
description
(
)
const
override
{
return
"
discard
;
"
;
}
private
:
using
INHERITED
=
Statement
;
}
;
}
#
endif
