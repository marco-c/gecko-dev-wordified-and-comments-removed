#
include
"
include
/
effects
/
SkHighContrastFilter
.
h
"
#
include
"
include
/
core
/
SkAlphaType
.
h
"
#
include
"
include
/
core
/
SkColorFilter
.
h
"
#
include
"
include
/
core
/
SkColorSpace
.
h
"
#
include
"
include
/
core
/
SkData
.
h
"
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
"
include
/
effects
/
SkRuntimeEffect
.
h
"
#
include
"
include
/
private
/
base
/
SkTPin
.
h
"
#
include
"
src
/
core
/
SkColorFilterPriv
.
h
"
#
include
"
src
/
core
/
SkKnownRuntimeEffects
.
h
"
#
include
<
cfloat
>
sk_sp
<
SkColorFilter
>
SkHighContrastFilter
:
:
Make
(
const
SkHighContrastConfig
&
config
)
{
if
(
!
config
.
isValid
(
)
)
{
return
nullptr
;
}
struct
Uniforms
{
float
grayscale
invertStyle
contrast
;
}
;
float
c
=
SkTPin
(
config
.
fContrast
-
1
.
0f
+
FLT_EPSILON
+
1
.
0f
-
FLT_EPSILON
)
;
Uniforms
uniforms
=
{
config
.
fGrayscale
?
1
.
0f
:
0
.
0f
(
float
)
config
.
fInvertStyle
(
1
+
c
)
/
(
1
-
c
)
}
;
const
SkRuntimeEffect
*
highContrastEffect
=
GetKnownRuntimeEffect
(
SkKnownRuntimeEffects
:
:
StableKey
:
:
kHighContrast
)
;
const
SkAlphaType
kUnpremul
=
kUnpremul_SkAlphaType
;
return
SkColorFilterPriv
:
:
WithWorkingFormat
(
highContrastEffect
-
>
makeColorFilter
(
SkData
:
:
MakeWithCopy
(
&
uniforms
sizeof
(
uniforms
)
)
)
&
SkNamedTransferFn
:
:
kLinear
nullptr
&
kUnpremul
)
;
}
