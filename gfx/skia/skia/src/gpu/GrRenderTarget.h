#
ifndef
GrRenderTarget_DEFINED
#
define
GrRenderTarget_DEFINED
#
include
"
include
/
core
/
SkRect
.
h
"
#
include
"
include
/
gpu
/
GrSurface
.
h
"
class
GrCaps
;
class
GrRenderTargetPriv
;
class
GrStencilAttachment
;
class
GrBackendRenderTarget
;
class
GrRenderTarget
:
virtual
public
GrSurface
{
public
:
using
GrSurface
:
:
setRequiresManualMSAAResolve
;
using
GrSurface
:
:
requiresManualMSAAResolve
;
virtual
bool
alwaysClearStencil
(
)
const
{
return
false
;
}
GrRenderTarget
*
asRenderTarget
(
)
override
{
return
this
;
}
const
GrRenderTarget
*
asRenderTarget
(
)
const
override
{
return
this
;
}
int
numSamples
(
)
const
{
return
fSampleCnt
;
}
virtual
GrBackendRenderTarget
getBackendRenderTarget
(
)
const
=
0
;
virtual
bool
canAttemptStencilAttachment
(
)
const
=
0
;
GrRenderTargetPriv
renderTargetPriv
(
)
;
const
GrRenderTargetPriv
renderTargetPriv
(
)
const
;
protected
:
GrRenderTarget
(
GrGpu
*
const
SkISize
&
GrPixelConfig
int
sampleCount
GrProtected
GrStencilAttachment
*
=
nullptr
)
;
~
GrRenderTarget
(
)
override
;
void
onAbandon
(
)
override
;
void
onRelease
(
)
override
;
private
:
virtual
bool
completeStencilAttachment
(
)
=
0
;
friend
class
GrRenderTargetPriv
;
int
fSampleCnt
;
int
fSamplePatternKey
;
sk_sp
<
GrStencilAttachment
>
fStencilAttachment
;
typedef
GrSurface
INHERITED
;
}
;
#
endif
