#
include
"
GrTextureRenderTargetProxy
.
h
"
GrTextureRenderTargetProxy
:
:
GrTextureRenderTargetProxy
(
const
GrCaps
&
caps
const
GrSurfaceDesc
&
desc
SkBackingFit
fit
SkBudgeted
budgeted
uint32_t
flags
)
:
GrSurfaceProxy
(
desc
fit
budgeted
flags
)
GrTextureProxy
(
desc
fit
budgeted
nullptr
0
flags
)
GrRenderTargetProxy
(
caps
desc
fit
budgeted
flags
)
{
}
GrTextureRenderTargetProxy
:
:
GrTextureRenderTargetProxy
(
sk_sp
<
GrSurface
>
surf
)
:
GrSurfaceProxy
(
surf
SkBackingFit
:
:
kExact
)
GrTextureProxy
(
sk_ref_sp
(
surf
-
>
asTexture
(
)
)
)
GrRenderTargetProxy
(
sk_ref_sp
(
surf
-
>
asRenderTarget
(
)
)
)
{
SkASSERT
(
surf
-
>
asTexture
(
)
)
;
SkASSERT
(
surf
-
>
asRenderTarget
(
)
)
;
}
size_t
GrTextureRenderTargetProxy
:
:
onGpuMemorySize
(
)
const
{
if
(
fTarget
)
{
return
fTarget
-
>
gpuMemorySize
(
)
;
}
return
GrSurface
:
:
ComputeSize
(
fDesc
fDesc
.
fSampleCnt
+
1
true
SkBackingFit
:
:
kApprox
=
=
fFit
)
;
}
