#
ifndef
GrPathRendererChain_DEFINED
#
define
GrPathRendererChain_DEFINED
#
include
"
GrPathRenderer
.
h
"
#
include
"
GrTypesPriv
.
h
"
#
include
"
SkTypes
.
h
"
#
include
"
SkTArray
.
h
"
class
GrContext
;
class
GrCoverageCountingPathRenderer
;
class
GrPathRendererChain
:
public
SkNoncopyable
{
public
:
struct
Options
{
bool
fAllowPathMaskCaching
=
false
;
GpuPathRenderers
fGpuPathRenderers
=
GpuPathRenderers
:
:
kDefault
;
}
;
GrPathRendererChain
(
GrContext
*
context
const
Options
&
)
;
enum
class
DrawType
{
kColor
kStencil
kStencilAndColor
}
;
GrPathRenderer
*
getPathRenderer
(
const
GrPathRenderer
:
:
CanDrawPathArgs
&
args
DrawType
drawType
GrPathRenderer
:
:
StencilSupport
*
stencilSupport
)
;
GrCoverageCountingPathRenderer
*
getCoverageCountingPathRenderer
(
)
{
return
fCoverageCountingPathRenderer
;
}
private
:
enum
{
kPreAllocCount
=
8
}
;
SkSTArray
<
kPreAllocCount
sk_sp
<
GrPathRenderer
>
>
fChain
;
GrCoverageCountingPathRenderer
*
fCoverageCountingPathRenderer
=
nullptr
;
}
;
#
endif
