#
ifndef
GrDebugMarkerOp_DEFINED
#
define
GrDebugMarkerOp_DEFINED
#
include
"
src
/
gpu
/
GrRenderTargetProxy
.
h
"
#
include
"
src
/
gpu
/
ops
/
GrOp
.
h
"
class
GrOpFlushState
;
class
GrRecordingContext
;
class
GrDebugMarkerOp
final
:
public
GrOp
{
public
:
DEFINE_OP_CLASS_ID
static
std
:
:
unique_ptr
<
GrOp
>
Make
(
GrRecordingContext
*
GrRenderTargetProxy
*
const
SkString
&
)
;
const
char
*
name
(
)
const
override
{
return
"
DebugMarker
"
;
}
#
ifdef
SK_DEBUG
SkString
dumpInfo
(
)
const
override
{
SkString
string
;
string
.
append
(
INHERITED
:
:
dumpInfo
(
)
)
;
return
string
;
}
#
endif
private
:
friend
class
GrOpMemoryPool
;
GrDebugMarkerOp
(
GrRenderTargetProxy
*
proxy
const
SkString
&
str
)
:
INHERITED
(
ClassID
(
)
)
fStr
(
str
)
{
this
-
>
makeFullScreen
(
proxy
)
;
}
void
onPrepare
(
GrOpFlushState
*
)
override
{
}
void
onExecute
(
GrOpFlushState
*
const
SkRect
&
chainBounds
)
override
;
SkString
fStr
;
typedef
GrOp
INHERITED
;
}
;
#
endif
