#
ifndef
GrTextureOp_DEFINED
#
define
GrTextureOp_DEFINED
#
include
"
include
/
core
/
SkCanvas
.
h
"
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
private
/
GrTypesPriv
.
h
"
#
include
"
src
/
gpu
/
GrColor
.
h
"
#
include
"
src
/
gpu
/
GrRenderTargetContext
.
h
"
#
include
"
src
/
gpu
/
GrSamplerState
.
h
"
class
GrColorSpaceXform
;
class
GrDrawOp
;
class
GrTextureProxy
;
struct
SkRect
;
class
SkMatrix
;
namespace
GrTextureOp
{
enum
class
Saturate
:
bool
{
kNo
=
false
kYes
=
true
}
;
std
:
:
unique_ptr
<
GrDrawOp
>
Make
(
GrRecordingContext
*
sk_sp
<
GrTextureProxy
>
GrColorType
srcColorType
sk_sp
<
GrColorSpaceXform
>
GrSamplerState
:
:
Filter
const
SkPMColor4f
&
Saturate
SkBlendMode
GrAAType
GrQuadAAFlags
const
GrQuad
&
deviceQuad
const
GrQuad
&
localQuad
const
SkRect
*
domain
=
nullptr
)
;
std
:
:
unique_ptr
<
GrDrawOp
>
MakeSet
(
GrRecordingContext
*
const
GrRenderTargetContext
:
:
TextureSetEntry
[
]
int
cnt
GrSamplerState
:
:
Filter
Saturate
GrAAType
SkCanvas
:
:
SrcRectConstraint
const
SkMatrix
&
viewMatrix
sk_sp
<
GrColorSpaceXform
>
textureXform
)
;
}
#
endif
