#
ifndef
GrClearStencilClipOp_DEFINED
#
define
GrClearStencilClipOp_DEFINED
#
include
"
GrFixedClip
.
h
"
#
include
"
GrGpu
.
h
"
#
include
"
GrGpuCommandBuffer
.
h
"
#
include
"
GrOp
.
h
"
#
include
"
GrOpFlushState
.
h
"
#
include
"
GrRenderTarget
.
h
"
class
GrClearStencilClipOp
final
:
public
GrOp
{
public
:
DEFINE_OP_CLASS_ID
static
std
:
:
unique_ptr
<
GrOp
>
Make
(
const
GrFixedClip
&
clip
bool
insideStencilMask
GrRenderTargetContext
*
rtc
)
{
if
(
!
rtc
-
>
accessRenderTarget
(
)
)
{
return
nullptr
;
}
return
std
:
:
unique_ptr
<
GrOp
>
(
new
GrClearStencilClipOp
(
clip
insideStencilMask
rtc
)
)
;
}
const
char
*
name
(
)
const
override
{
return
"
ClearStencilClip
"
;
}
SkString
dumpInfo
(
)
const
override
{
SkString
string
(
"
Scissor
[
"
)
;
if
(
fClip
.
scissorEnabled
(
)
)
{
const
SkIRect
&
r
=
fClip
.
scissorRect
(
)
;
string
.
appendf
(
"
L
:
%
d
T
:
%
d
R
:
%
d
B
:
%
d
"
r
.
fLeft
r
.
fTop
r
.
fRight
r
.
fBottom
)
;
}
string
.
appendf
(
"
]
IC
:
%
d
rtID
:
%
d
proxyID
:
%
d
"
fInsideStencilMask
fRenderTarget
.
get
(
)
-
>
uniqueID
(
)
.
asUInt
(
)
fProxyUniqueID
.
asUInt
(
)
)
;
string
.
append
(
INHERITED
:
:
dumpInfo
(
)
)
;
return
string
;
}
private
:
GrClearStencilClipOp
(
const
GrFixedClip
&
clip
bool
insideStencilMask
GrRenderTargetContext
*
rtc
)
:
INHERITED
(
ClassID
(
)
)
fClip
(
clip
)
fInsideStencilMask
(
insideStencilMask
)
fProxyUniqueID
(
rtc
-
>
asSurfaceProxy
(
)
-
>
uniqueID
(
)
)
{
const
SkRect
&
bounds
=
fClip
.
scissorEnabled
(
)
?
SkRect
:
:
Make
(
fClip
.
scissorRect
(
)
)
:
SkRect
:
:
MakeIWH
(
rtc
-
>
width
(
)
rtc
-
>
height
(
)
)
;
this
-
>
setBounds
(
bounds
HasAABloat
:
:
kNo
IsZeroArea
:
:
kNo
)
;
fRenderTarget
.
reset
(
rtc
-
>
accessRenderTarget
(
)
)
;
}
bool
onCombineIfPossible
(
GrOp
*
t
const
GrCaps
&
caps
)
override
{
return
false
;
}
void
onPrepare
(
GrOpFlushState
*
)
override
{
}
void
onExecute
(
GrOpFlushState
*
state
)
override
{
state
-
>
commandBuffer
(
)
-
>
clearStencilClip
(
fRenderTarget
.
get
(
)
fClip
fInsideStencilMask
)
;
}
const
GrFixedClip
fClip
;
const
bool
fInsideStencilMask
;
GrSurfaceProxy
:
:
UniqueID
fProxyUniqueID
;
GrPendingIOResource
<
GrRenderTarget
kWrite_GrIOType
>
fRenderTarget
;
typedef
GrOp
INHERITED
;
}
;
#
endif
