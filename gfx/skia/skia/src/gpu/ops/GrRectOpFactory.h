#
ifndef
GrRectOpFactory_DEFINED
#
define
GrRectOpFactory_DEFINED
#
include
<
memory
>
#
include
"
GrTypes
.
h
"
enum
class
GrAAType
:
unsigned
;
class
GrDrawOp
;
class
GrPaint
;
struct
GrUserStencilSettings
;
class
SkMatrix
;
struct
SkRect
;
class
SkStrokeRec
;
namespace
GrRectOpFactory
{
std
:
:
unique_ptr
<
GrDrawOp
>
MakeAAFill
(
GrContext
*
GrPaint
&
&
const
SkMatrix
&
const
SkRect
&
const
GrUserStencilSettings
*
=
nullptr
)
;
std
:
:
unique_ptr
<
GrDrawOp
>
MakeAAFillWithLocalMatrix
(
GrContext
*
GrPaint
&
&
const
SkMatrix
&
viewMatrix
const
SkMatrix
&
localMatrix
const
SkRect
&
)
;
std
:
:
unique_ptr
<
GrDrawOp
>
MakeAAFillWithLocalRect
(
GrContext
*
GrPaint
&
&
const
SkMatrix
&
const
SkRect
&
rect
const
SkRect
&
localRect
)
;
std
:
:
unique_ptr
<
GrDrawOp
>
MakeNonAAFill
(
GrContext
*
GrPaint
&
&
const
SkMatrix
&
viewMatrix
const
SkRect
&
rect
GrAAType
const
GrUserStencilSettings
*
=
nullptr
)
;
std
:
:
unique_ptr
<
GrDrawOp
>
MakeNonAAFillWithLocalMatrix
(
GrContext
*
GrPaint
&
&
const
SkMatrix
&
viewMatrix
const
SkMatrix
&
localMatrix
const
SkRect
&
GrAAType
const
GrUserStencilSettings
*
=
nullptr
)
;
std
:
:
unique_ptr
<
GrDrawOp
>
MakeNonAAFillWithLocalRect
(
GrContext
*
GrPaint
&
&
const
SkMatrix
&
const
SkRect
&
rect
const
SkRect
&
localRect
GrAAType
)
;
std
:
:
unique_ptr
<
GrDrawOp
>
MakeAAStroke
(
GrContext
*
GrPaint
&
&
const
SkMatrix
&
const
SkRect
&
const
SkStrokeRec
&
)
;
std
:
:
unique_ptr
<
GrDrawOp
>
MakeAAFillNestedRects
(
GrContext
*
GrPaint
&
&
const
SkMatrix
&
const
SkRect
rects
[
2
]
)
;
std
:
:
unique_ptr
<
GrDrawOp
>
MakeNonAAStroke
(
GrContext
*
GrPaint
&
&
const
SkMatrix
&
const
SkRect
&
const
SkStrokeRec
&
GrAAType
)
;
}
#
endif
