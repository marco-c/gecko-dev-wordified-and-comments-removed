#
ifndef
GrSoftwarePathRenderer_DEFINED
#
define
GrSoftwarePathRenderer_DEFINED
#
include
"
GrPathRenderer
.
h
"
class
GrProxyProvider
;
class
GrSoftwarePathRenderer
:
public
GrPathRenderer
{
public
:
GrSoftwarePathRenderer
(
GrProxyProvider
*
proxyProvider
bool
allowCaching
)
:
fProxyProvider
(
proxyProvider
)
fAllowCaching
(
allowCaching
)
{
}
private
:
static
void
DrawNonAARect
(
GrRenderTargetContext
*
renderTargetContext
GrPaint
&
&
paint
const
GrUserStencilSettings
&
userStencilSettings
const
GrClip
&
clip
const
SkMatrix
&
viewMatrix
const
SkRect
&
rect
const
SkMatrix
&
localMatrix
)
;
static
void
DrawAroundInvPath
(
GrRenderTargetContext
*
renderTargetContext
GrPaint
&
&
paint
const
GrUserStencilSettings
&
userStencilSettings
const
GrClip
&
clip
const
SkMatrix
&
viewMatrix
const
SkIRect
&
devClipBounds
const
SkIRect
&
devPathBounds
)
;
static
void
DrawToTargetWithShapeMask
(
sk_sp
<
GrTextureProxy
>
proxy
GrRenderTargetContext
*
renderTargetContext
GrPaint
&
&
paint
const
GrUserStencilSettings
&
userStencilSettings
const
GrClip
&
clip
const
SkMatrix
&
viewMatrix
const
SkIPoint
&
textureOriginInDeviceSpace
const
SkIRect
&
deviceSpaceRectToDraw
)
;
StencilSupport
onGetStencilSupport
(
const
GrShape
&
)
const
override
{
return
GrPathRenderer
:
:
kNoSupport_StencilSupport
;
}
CanDrawPath
onCanDrawPath
(
const
CanDrawPathArgs
&
)
const
override
;
bool
onDrawPath
(
const
DrawPathArgs
&
)
override
;
private
:
GrProxyProvider
*
fProxyProvider
;
bool
fAllowCaching
;
typedef
GrPathRenderer
INHERITED
;
}
;
#
endif
