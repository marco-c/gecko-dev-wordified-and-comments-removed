#
ifndef
GrRenderTargetProxyPriv_DEFINED
#
define
GrRenderTargetProxyPriv_DEFINED
#
include
"
src
/
gpu
/
GrRenderTargetProxy
.
h
"
class
GrRenderTargetProxyPriv
{
public
:
void
setGLRTFBOIDIs0
(
)
{
SkASSERT
(
!
fRenderTargetProxy
-
>
requiresManualMSAAResolve
(
)
)
;
SkASSERT
(
!
fRenderTargetProxy
-
>
asTextureProxy
(
)
)
;
fRenderTargetProxy
-
>
setGLRTFBOIDIs0
(
)
;
}
bool
glRTFBOIDIs0
(
)
const
{
return
fRenderTargetProxy
-
>
glRTFBOIDIs0
(
)
;
}
private
:
explicit
GrRenderTargetProxyPriv
(
GrRenderTargetProxy
*
renderTargetProxy
)
:
fRenderTargetProxy
(
renderTargetProxy
)
{
}
GrRenderTargetProxyPriv
(
const
GrRenderTargetProxyPriv
&
)
{
}
GrRenderTargetProxyPriv
&
operator
=
(
const
GrRenderTargetProxyPriv
&
)
;
const
GrRenderTargetProxyPriv
*
operator
&
(
)
const
;
GrRenderTargetProxyPriv
*
operator
&
(
)
;
GrRenderTargetProxy
*
fRenderTargetProxy
;
friend
class
GrRenderTargetProxy
;
}
;
inline
GrRenderTargetProxyPriv
GrRenderTargetProxy
:
:
rtPriv
(
)
{
return
GrRenderTargetProxyPriv
(
this
)
;
}
inline
const
GrRenderTargetProxyPriv
GrRenderTargetProxy
:
:
rtPriv
(
)
const
{
return
GrRenderTargetProxyPriv
(
const_cast
<
GrRenderTargetProxy
*
>
(
this
)
)
;
}
#
endif
