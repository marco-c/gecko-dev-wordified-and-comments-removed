#
ifndef
GrTextureContext_DEFINED
#
define
GrTextureContext_DEFINED
#
include
"
GrSurfaceContext
.
h
"
#
include
"
.
.
/
private
/
GrTextureProxy
.
h
"
class
GrContext
;
class
GrDrawingManager
;
class
GrSurface
;
class
GrTextureOpList
;
class
GrTextureProxy
;
struct
SkIPoint
;
struct
SkIRect
;
class
SK_API
GrTextureContext
:
public
GrSurfaceContext
{
public
:
~
GrTextureContext
(
)
override
;
GrSurfaceProxy
*
asSurfaceProxy
(
)
override
{
return
fTextureProxy
.
get
(
)
;
}
const
GrSurfaceProxy
*
asSurfaceProxy
(
)
const
override
{
return
fTextureProxy
.
get
(
)
;
}
sk_sp
<
GrSurfaceProxy
>
asSurfaceProxyRef
(
)
override
{
return
fTextureProxy
;
}
GrTextureProxy
*
asTextureProxy
(
)
override
{
return
fTextureProxy
.
get
(
)
;
}
sk_sp
<
GrTextureProxy
>
asTextureProxyRef
(
)
override
{
return
fTextureProxy
;
}
GrRenderTargetProxy
*
asRenderTargetProxy
(
)
override
;
sk_sp
<
GrRenderTargetProxy
>
asRenderTargetProxyRef
(
)
override
;
protected
:
GrTextureContext
(
GrContext
*
GrDrawingManager
*
sk_sp
<
GrTextureProxy
>
sk_sp
<
SkColorSpace
>
GrAuditTrail
*
GrSingleOwner
*
)
;
SkDEBUGCODE
(
void
validate
(
)
const
;
)
private
:
friend
class
GrDrawingManager
;
bool
onCopy
(
GrSurfaceProxy
*
src
const
SkIRect
&
srcRect
const
SkIPoint
&
dstPoint
)
override
;
GrTextureOpList
*
getOpList
(
)
;
sk_sp
<
GrTextureProxy
>
fTextureProxy
;
GrTextureOpList
*
fOpList
;
typedef
GrSurfaceContext
INHERITED
;
}
;
#
endif
