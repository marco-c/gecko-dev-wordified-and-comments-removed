#
ifndef
GrDawnRenderTarget_DEFINED
#
define
GrDawnRenderTarget_DEFINED
#
include
"
include
/
gpu
/
dawn
/
GrDawnTypes
.
h
"
#
include
"
src
/
gpu
/
GrRenderTarget
.
h
"
class
GrDawnGpu
;
class
GrDawnRenderTarget
:
public
GrRenderTarget
{
public
:
static
sk_sp
<
GrDawnRenderTarget
>
MakeWrapped
(
GrDawnGpu
*
const
SkISize
&
size
GrPixelConfig
config
int
sampleCnt
const
GrDawnImageInfo
&
)
;
~
GrDawnRenderTarget
(
)
override
;
bool
canAttemptStencilAttachment
(
)
const
override
{
return
true
;
}
GrBackendRenderTarget
getBackendRenderTarget
(
)
const
override
;
GrBackendFormat
backendFormat
(
)
const
override
;
dawn
:
:
Texture
texture
(
)
const
{
return
fInfo
.
fTexture
;
}
protected
:
GrDawnRenderTarget
(
GrDawnGpu
*
gpu
const
SkISize
&
size
GrPixelConfig
config
int
sampleCnt
const
GrDawnImageInfo
&
info
)
;
void
onAbandon
(
)
override
;
void
onRelease
(
)
override
;
void
onSetRelease
(
sk_sp
<
GrRefCntedCallback
>
releaseHelper
)
override
{
}
size_t
onGpuMemorySize
(
)
const
override
;
static
GrDawnRenderTarget
*
Create
(
GrDawnGpu
*
const
GrSurfaceDesc
&
int
sampleCnt
const
GrDawnImageInfo
&
)
;
bool
completeStencilAttachment
(
)
override
;
GrDawnImageInfo
fInfo
;
typedef
GrRenderTarget
INHERITED
;
}
;
#
endif
