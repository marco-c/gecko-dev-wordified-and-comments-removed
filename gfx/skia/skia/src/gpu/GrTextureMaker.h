#
ifndef
GrTextureMaker_DEFINED
#
define
GrTextureMaker_DEFINED
#
include
"
GrTextureProducer
.
h
"
class
GrTextureMaker
:
public
GrTextureProducer
{
public
:
enum
class
AllowedTexGenType
:
bool
{
kCheap
kAny
}
;
std
:
:
unique_ptr
<
GrFragmentProcessor
>
createFragmentProcessor
(
const
SkMatrix
&
textureMatrix
const
SkRect
&
constraintRect
FilterConstraint
filterConstraint
bool
coordsLimitedToConstraintRect
const
GrSamplerState
:
:
Filter
*
filterOrNullForBicubic
SkColorSpace
*
dstColorSpace
)
override
;
protected
:
GrTextureMaker
(
GrContext
*
context
int
width
int
height
bool
isAlphaOnly
)
:
INHERITED
(
context
width
height
isAlphaOnly
)
{
}
virtual
sk_sp
<
GrTextureProxy
>
refOriginalTextureProxy
(
bool
willBeMipped
SkColorSpace
*
dstColorSpace
AllowedTexGenType
genType
)
=
0
;
virtual
sk_sp
<
SkColorSpace
>
getColorSpace
(
SkColorSpace
*
dstColorSpace
)
=
0
;
GrContext
*
context
(
)
const
{
return
fContext
;
}
private
:
sk_sp
<
GrTextureProxy
>
onRefTextureProxyForParams
(
const
GrSamplerState
&
SkColorSpace
*
dstColorSpace
sk_sp
<
SkColorSpace
>
*
proxyColorSpace
bool
willBeMipped
SkScalar
scaleAdjust
[
2
]
)
override
;
typedef
GrTextureProducer
INHERITED
;
}
;
#
endif
