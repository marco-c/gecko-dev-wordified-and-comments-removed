#
ifndef
skgpu_graphite_ComputeTask_DEFINED
#
define
skgpu_graphite_ComputeTask_DEFINED
#
include
"
include
/
private
/
base
/
SkTArray
.
h
"
#
include
"
src
/
gpu
/
graphite
/
Task
.
h
"
#
include
<
memory
>
namespace
skgpu
:
:
graphite
{
class
DispatchGroup
;
class
ComputeTask
final
:
public
Task
{
public
:
using
DispatchGroupList
=
SkTArray
<
std
:
:
unique_ptr
<
DispatchGroup
>
>
;
static
sk_sp
<
ComputeTask
>
Make
(
DispatchGroupList
dispatchGroups
)
;
~
ComputeTask
(
)
override
;
bool
prepareResources
(
ResourceProvider
*
const
RuntimeEffectDictionary
*
)
override
;
bool
addCommands
(
Context
*
CommandBuffer
*
ReplayTargetData
)
override
;
private
:
explicit
ComputeTask
(
DispatchGroupList
dispatchGroups
)
;
DispatchGroupList
fDispatchGroups
;
}
;
}
#
endif
