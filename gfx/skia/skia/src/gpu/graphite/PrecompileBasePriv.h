#
ifndef
skgpu_graphite_PrecompileBasePriv_DEFINED
#
define
skgpu_graphite_PrecompileBasePriv_DEFINED
#
include
"
src
/
gpu
/
graphite
/
Precompile
.
h
"
namespace
skgpu
:
:
graphite
{
class
PrecompileBasePriv
{
public
:
bool
isALocalMatrixShader
(
)
const
{
return
fPrecompileBase
-
>
isALocalMatrixShader
(
)
;
}
void
addToKey
(
const
KeyContext
&
keyContext
int
desiredCombination
PaintParamsKeyBuilder
*
builder
)
const
{
fPrecompileBase
-
>
addToKey
(
keyContext
desiredCombination
builder
)
;
}
private
:
friend
class
PrecompileBase
;
explicit
PrecompileBasePriv
(
PrecompileBase
*
precompileBase
)
:
fPrecompileBase
(
precompileBase
)
{
}
PrecompileBasePriv
&
operator
=
(
const
PrecompileBasePriv
&
)
=
delete
;
const
PrecompileBasePriv
*
operator
&
(
)
const
;
PrecompileBasePriv
*
operator
&
(
)
;
PrecompileBase
*
fPrecompileBase
;
}
;
inline
PrecompileBasePriv
PrecompileBase
:
:
priv
(
)
{
return
PrecompileBasePriv
(
this
)
;
}
inline
const
PrecompileBasePriv
PrecompileBase
:
:
priv
(
)
const
{
return
PrecompileBasePriv
(
const_cast
<
PrecompileBase
*
>
(
this
)
)
;
}
}
#
endif
