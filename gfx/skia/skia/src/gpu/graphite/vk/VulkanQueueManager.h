#
ifndef
skgpu_graphite_VulkanQueueManager_DEFINED
#
define
skgpu_graphite_VulkanQueueManager_DEFINED
#
include
"
src
/
gpu
/
graphite
/
QueueManager
.
h
"
#
include
"
include
/
gpu
/
vk
/
VulkanTypes
.
h
"
namespace
skgpu
:
:
graphite
{
class
VulkanSharedContext
;
class
VulkanQueueManager
final
:
public
QueueManager
{
public
:
VulkanQueueManager
(
VkQueue
queue
const
SharedContext
*
)
;
~
VulkanQueueManager
(
)
override
{
}
private
:
const
VulkanSharedContext
*
vkSharedContext
(
)
const
;
std
:
:
unique_ptr
<
CommandBuffer
>
getNewCommandBuffer
(
ResourceProvider
*
)
override
;
OutstandingSubmission
onSubmitToGpu
(
)
override
;
#
if
GRAPHITE_TEST_UTILS
void
startCapture
(
)
override
{
}
void
stopCapture
(
)
override
{
}
#
endif
VkQueue
fQueue
;
}
;
}
#
endif
