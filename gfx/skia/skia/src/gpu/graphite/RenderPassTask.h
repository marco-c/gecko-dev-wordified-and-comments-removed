#
ifndef
skgpu_graphite_RenderPassTask_DEFINED
#
define
skgpu_graphite_RenderPassTask_DEFINED
#
include
"
src
/
gpu
/
graphite
/
CommandBuffer
.
h
"
#
include
"
src
/
gpu
/
graphite
/
Task
.
h
"
namespace
skgpu
:
:
graphite
{
class
DrawPass
;
class
RenderPassTask
final
:
public
Task
{
public
:
using
DrawPassList
=
SkTArray
<
std
:
:
unique_ptr
<
DrawPass
>
>
;
static
sk_sp
<
RenderPassTask
>
Make
(
DrawPassList
const
RenderPassDesc
&
sk_sp
<
TextureProxy
>
target
)
;
~
RenderPassTask
(
)
override
;
bool
prepareResources
(
ResourceProvider
*
const
RuntimeEffectDictionary
*
)
override
;
bool
addCommands
(
Context
*
CommandBuffer
*
ReplayTargetData
)
override
;
private
:
RenderPassTask
(
DrawPassList
const
RenderPassDesc
&
sk_sp
<
TextureProxy
>
target
)
;
DrawPassList
fDrawPasses
;
RenderPassDesc
fRenderPassDesc
;
sk_sp
<
TextureProxy
>
fTarget
;
}
;
}
#
endif
