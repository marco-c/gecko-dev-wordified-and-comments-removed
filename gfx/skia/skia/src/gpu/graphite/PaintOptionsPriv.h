#
ifndef
skgpu_graphite_PaintOptionsPriv_DEFINED
#
define
skgpu_graphite_PaintOptionsPriv_DEFINED
#
include
"
src
/
gpu
/
graphite
/
Precompile
.
h
"
namespace
skgpu
:
:
graphite
{
class
ShaderCodeDictionary
;
class
PaintOptionsPriv
{
public
:
int
numCombinations
(
)
const
{
return
fPaintOptions
-
>
numCombinations
(
)
;
}
void
buildCombinations
(
const
KeyContext
&
keyContext
bool
addPrimitiveBlender
const
std
:
:
function
<
void
(
UniquePaintParamsID
)
>
&
processCombination
)
const
{
fPaintOptions
-
>
buildCombinations
(
keyContext
addPrimitiveBlender
processCombination
)
;
}
private
:
friend
class
PaintOptions
;
explicit
PaintOptionsPriv
(
PaintOptions
*
paintOptions
)
:
fPaintOptions
(
paintOptions
)
{
}
PaintOptionsPriv
&
operator
=
(
const
PaintOptionsPriv
&
)
=
delete
;
const
PaintOptionsPriv
*
operator
&
(
)
const
;
PaintOptionsPriv
*
operator
&
(
)
;
PaintOptions
*
fPaintOptions
;
}
;
inline
PaintOptionsPriv
PaintOptions
:
:
priv
(
)
{
return
PaintOptionsPriv
(
this
)
;
}
inline
const
PaintOptionsPriv
PaintOptions
:
:
priv
(
)
const
{
return
PaintOptionsPriv
(
const_cast
<
PaintOptions
*
>
(
this
)
)
;
}
}
#
endif
