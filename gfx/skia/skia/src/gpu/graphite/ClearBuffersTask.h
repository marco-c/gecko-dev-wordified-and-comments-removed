#
ifndef
skgpu_graphite_ClearBuffersTask_DEFINED
#
define
skgpu_graphite_ClearBuffersTask_DEFINED
#
include
"
src
/
gpu
/
graphite
/
Buffer
.
h
"
#
include
"
src
/
gpu
/
graphite
/
Task
.
h
"
#
include
<
vector
>
namespace
skgpu
:
:
graphite
{
class
Buffer
;
struct
ClearBufferInfo
{
const
Buffer
*
fBuffer
;
size_t
fOffset
=
0
;
size_t
fSize
=
0
;
}
;
class
ClearBuffersTask
final
:
public
Task
{
public
:
static
sk_sp
<
ClearBuffersTask
>
Make
(
std
:
:
vector
<
ClearBufferInfo
>
)
;
~
ClearBuffersTask
(
)
override
;
bool
prepareResources
(
ResourceProvider
*
const
RuntimeEffectDictionary
*
)
override
{
return
true
;
}
bool
addCommands
(
Context
*
CommandBuffer
*
ReplayTargetData
)
override
;
private
:
explicit
ClearBuffersTask
(
std
:
:
vector
<
ClearBufferInfo
>
clearList
)
:
fClearList
(
std
:
:
move
(
clearList
)
)
{
}
std
:
:
vector
<
ClearBufferInfo
>
fClearList
;
}
;
}
#
endif
