#
ifndef
GrSurfacePriv_DEFINED
#
define
GrSurfacePriv_DEFINED
#
include
"
GrSurface
.
h
"
class
GrSurfacePriv
{
public
:
static
bool
AdjustReadPixelParams
(
int
surfaceWidth
int
surfaceHeight
size_t
bpp
int
*
left
int
*
top
int
*
width
int
*
height
void
*
*
data
size_t
*
rowBytes
)
;
static
bool
AdjustWritePixelParams
(
int
surfaceWidth
int
surfaceHeight
size_t
bpp
int
*
left
int
*
top
int
*
width
int
*
height
const
void
*
*
data
size_t
*
rowBytes
)
;
bool
hasPendingRead
(
)
const
{
return
fSurface
-
>
hasPendingRead
(
)
;
}
bool
hasPendingWrite
(
)
const
{
return
fSurface
-
>
hasPendingWrite
(
)
;
}
bool
hasPendingIO
(
)
const
{
return
fSurface
-
>
hasPendingIO
(
)
;
}
bool
hasUniqueRef
(
)
const
{
return
fSurface
-
>
internalHasUniqueRef
(
)
;
}
GrInternalSurfaceFlags
flags
(
)
const
{
return
fSurface
-
>
fSurfaceFlags
;
}
private
:
explicit
GrSurfacePriv
(
GrSurface
*
surface
)
:
fSurface
(
surface
)
{
}
GrSurfacePriv
(
const
GrSurfacePriv
&
)
;
GrSurfacePriv
&
operator
=
(
const
GrSurfacePriv
&
)
;
const
GrSurfacePriv
*
operator
&
(
)
const
;
GrSurfacePriv
*
operator
&
(
)
;
GrSurface
*
fSurface
;
friend
class
GrSurface
;
}
;
inline
GrSurfacePriv
GrSurface
:
:
surfacePriv
(
)
{
return
GrSurfacePriv
(
this
)
;
}
inline
const
GrSurfacePriv
GrSurface
:
:
surfacePriv
(
)
const
{
return
GrSurfacePriv
(
const_cast
<
GrSurface
*
>
(
this
)
)
;
}
#
endif
