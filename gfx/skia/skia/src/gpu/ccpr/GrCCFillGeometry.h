#
ifndef
GrGrCCFillGeometry_DEFINED
#
define
GrGrCCFillGeometry_DEFINED
#
include
"
include
/
core
/
SkPoint
.
h
"
#
include
"
include
/
private
/
SkNx
.
h
"
#
include
"
include
/
private
/
SkTArray
.
h
"
#
include
"
src
/
core
/
SkGeometry
.
h
"
class
GrCCFillGeometry
{
public
:
enum
class
Verb
:
uint8_t
{
kBeginPath
kBeginContour
kLineTo
kMonotonicQuadraticTo
kMonotonicCubicTo
kMonotonicConicTo
kEndClosedContour
kEndOpenContour
}
;
struct
PrimitiveTallies
{
int
fTriangles
;
int
fWeightedTriangles
;
int
fQuadratics
;
int
fCubics
;
int
fConics
;
void
operator
+
=
(
const
PrimitiveTallies
&
)
;
PrimitiveTallies
operator
-
(
const
PrimitiveTallies
&
)
const
;
bool
operator
=
=
(
const
PrimitiveTallies
&
)
;
}
;
GrCCFillGeometry
(
int
numSkPoints
=
0
int
numSkVerbs
=
0
int
numConicWeights
=
0
)
:
fPoints
(
numSkPoints
*
3
)
fVerbs
(
numSkVerbs
*
3
)
fConicWeights
(
numConicWeights
*
3
/
2
)
{
}
const
SkTArray
<
SkPoint
true
>
&
points
(
)
const
{
SkASSERT
(
!
fBuildingContour
)
;
return
fPoints
;
}
const
SkTArray
<
Verb
true
>
&
verbs
(
)
const
{
SkASSERT
(
!
fBuildingContour
)
;
return
fVerbs
;
}
float
getConicWeight
(
int
idx
)
const
{
SkASSERT
(
!
fBuildingContour
)
;
return
fConicWeights
[
idx
]
;
}
void
reset
(
)
{
SkASSERT
(
!
fBuildingContour
)
;
fPoints
.
reset
(
)
;
fVerbs
.
reset
(
)
;
}
void
beginPath
(
)
;
void
beginContour
(
const
SkPoint
&
)
;
void
lineTo
(
const
SkPoint
P
[
2
]
)
;
void
quadraticTo
(
const
SkPoint
[
3
]
)
;
void
cubicTo
(
const
SkPoint
[
4
]
float
inflectPad
=
0
.
55f
float
loopIntersectPad
=
2
)
;
void
conicTo
(
const
SkPoint
[
3
]
float
w
)
;
PrimitiveTallies
endContour
(
)
;
private
:
inline
void
appendLine
(
const
Sk2f
&
p0
const
Sk2f
&
p1
)
;
inline
void
appendQuadratics
(
const
Sk2f
&
p0
const
Sk2f
&
p1
const
Sk2f
&
p2
)
;
inline
void
appendMonotonicQuadratic
(
const
Sk2f
&
p0
const
Sk2f
&
p1
const
Sk2f
&
p2
)
;
enum
class
AppendCubicMode
:
bool
{
kLiteral
kApproximate
}
;
void
appendCubics
(
AppendCubicMode
const
Sk2f
&
p0
const
Sk2f
&
p1
const
Sk2f
&
p2
const
Sk2f
&
p3
const
float
chops
[
]
int
numChops
float
localT0
=
0
float
localT1
=
1
)
;
void
appendCubics
(
AppendCubicMode
const
Sk2f
&
p0
const
Sk2f
&
p1
const
Sk2f
&
p2
const
Sk2f
&
p3
int
maxSubdivisions
=
2
)
;
void
chopAndAppendCubicAtMidTangent
(
AppendCubicMode
const
Sk2f
&
p0
const
Sk2f
&
p1
const
Sk2f
&
p2
const
Sk2f
&
p3
const
Sk2f
&
tan0
const
Sk2f
&
tan1
int
maxFutureSubdivisions
)
;
void
appendMonotonicConic
(
const
Sk2f
&
p0
const
Sk2f
&
p1
const
Sk2f
&
p2
float
w
)
;
SkPoint
fCurrAnchorPoint
;
PrimitiveTallies
fCurrContourTallies
;
SkCubicType
fCurrCubicType
;
SkDEBUGCODE
(
bool
fBuildingContour
=
false
)
;
SkSTArray
<
128
SkPoint
true
>
fPoints
;
SkSTArray
<
128
Verb
true
>
fVerbs
;
SkSTArray
<
32
float
true
>
fConicWeights
;
}
;
inline
void
GrCCFillGeometry
:
:
PrimitiveTallies
:
:
operator
+
=
(
const
PrimitiveTallies
&
b
)
{
fTriangles
+
=
b
.
fTriangles
;
fWeightedTriangles
+
=
b
.
fWeightedTriangles
;
fQuadratics
+
=
b
.
fQuadratics
;
fCubics
+
=
b
.
fCubics
;
fConics
+
=
b
.
fConics
;
}
GrCCFillGeometry
:
:
PrimitiveTallies
inline
GrCCFillGeometry
:
:
PrimitiveTallies
:
:
operator
-
(
const
PrimitiveTallies
&
b
)
const
{
return
{
fTriangles
-
b
.
fTriangles
fWeightedTriangles
-
b
.
fWeightedTriangles
fQuadratics
-
b
.
fQuadratics
fCubics
-
b
.
fCubics
fConics
-
b
.
fConics
}
;
}
inline
bool
GrCCFillGeometry
:
:
PrimitiveTallies
:
:
operator
=
=
(
const
PrimitiveTallies
&
b
)
{
return
fTriangles
=
=
b
.
fTriangles
&
&
fWeightedTriangles
=
=
b
.
fWeightedTriangles
&
&
fQuadratics
=
=
b
.
fQuadratics
&
&
fCubics
=
=
b
.
fCubics
&
&
fConics
=
=
b
.
fConics
;
}
#
endif
