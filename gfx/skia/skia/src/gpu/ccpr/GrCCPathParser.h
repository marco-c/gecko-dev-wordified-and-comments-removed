#
ifndef
GrCCPathParser_DEFINED
#
define
GrCCPathParser_DEFINED
#
include
"
GrMesh
.
h
"
#
include
"
GrNonAtomicRef
.
h
"
#
include
"
GrTessellator
.
h
"
#
include
"
SkRect
.
h
"
#
include
"
SkRefCnt
.
h
"
#
include
"
ccpr
/
GrCCCoverageProcessor
.
h
"
#
include
"
ccpr
/
GrCCGeometry
.
h
"
#
include
"
ops
/
GrDrawOp
.
h
"
class
GrOnFlushResourceProvider
;
class
SkMatrix
;
class
SkPath
;
class
GrCCPathParser
:
public
GrNonAtomicRef
<
GrCCPathParser
>
{
public
:
enum
class
ScissorMode
:
int
{
kNonScissored
=
0
kScissored
=
1
}
;
static
constexpr
int
kNumScissorModes
=
2
;
GrCCPathParser
(
int
maxTotalPaths
int
maxPathPoints
int
numSkPoints
int
numSkVerbs
)
;
~
GrCCPathParser
(
)
{
SkASSERT
(
!
fParsingPath
)
;
}
using
CoverageCountBatchID
=
int
;
void
parsePath
(
const
SkMatrix
&
const
SkPath
&
SkRect
*
devBounds
SkRect
*
devBounds45
)
;
void
parseDeviceSpacePath
(
const
SkPath
&
)
;
void
saveParsedPath
(
ScissorMode
const
SkIRect
&
clippedDevIBounds
int16_t
atlasOffsetX
int16_t
atlasOffsetY
)
;
void
discardParsedPath
(
)
;
CoverageCountBatchID
closeCurrentBatch
(
)
;
bool
finalize
(
GrOnFlushResourceProvider
*
)
;
void
drawCoverageCount
(
GrOpFlushState
*
CoverageCountBatchID
const
SkIRect
&
drawBounds
)
const
;
private
:
using
PrimitiveTallies
=
GrCCGeometry
:
:
PrimitiveTallies
;
struct
PathInfo
{
PathInfo
(
ScissorMode
scissorMode
int16_t
offsetX
int16_t
offsetY
)
:
fScissorMode
(
scissorMode
)
fAtlasOffsetX
(
offsetX
)
fAtlasOffsetY
(
offsetY
)
{
}
ScissorMode
fScissorMode
;
int16_t
fAtlasOffsetX
fAtlasOffsetY
;
std
:
:
unique_ptr
<
GrTessellator
:
:
WindingVertex
[
]
>
fFanTessellation
;
int
fFanTessellationCount
=
0
;
}
;
struct
CoverageCountBatch
{
PrimitiveTallies
fEndNonScissorIndices
;
int
fEndScissorSubBatchIdx
;
PrimitiveTallies
fTotalPrimitiveCounts
;
}
;
struct
ScissorSubBatch
{
PrimitiveTallies
fEndPrimitiveIndices
;
SkIRect
fScissor
;
}
;
void
parsePath
(
const
SkPath
&
const
SkPoint
*
deviceSpacePts
)
;
void
endContourIfNeeded
(
bool
insideContour
)
;
void
drawRenderPass
(
GrOpFlushState
*
const
GrPipeline
&
CoverageCountBatchID
GrCCCoverageProcessor
:
:
RenderPass
GrCCCoverageProcessor
:
:
WindMethod
int
PrimitiveTallies
:
:
*
instanceType
const
SkIRect
&
drawBounds
)
const
;
SkDEBUGCODE
(
int
fParsingPath
=
false
)
;
const
SkAutoSTArray
<
32
SkPoint
>
fLocalDevPtsBuffer
;
int
fCurrPathPointsIdx
;
int
fCurrPathVerbsIdx
;
PrimitiveTallies
fCurrPathPrimitiveCounts
;
GrCCGeometry
fGeometry
;
SkSTArray
<
32
PathInfo
true
>
fPathsInfo
;
SkSTArray
<
32
CoverageCountBatch
true
>
fCoverageCountBatches
;
SkSTArray
<
32
ScissorSubBatch
true
>
fScissorSubBatches
;
PrimitiveTallies
fTotalPrimitiveCounts
[
kNumScissorModes
]
;
int
fMaxMeshesPerDraw
=
0
;
sk_sp
<
GrBuffer
>
fInstanceBuffer
;
PrimitiveTallies
fBaseInstances
[
kNumScissorModes
]
;
mutable
SkSTArray
<
32
GrMesh
>
fMeshesScratchBuffer
;
mutable
SkSTArray
<
32
GrPipeline
:
:
DynamicState
>
fDynamicStatesScratchBuffer
;
}
;
#
endif
