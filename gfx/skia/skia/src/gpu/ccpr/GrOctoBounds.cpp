#
include
"
src
/
gpu
/
ccpr
/
GrOctoBounds
.
h
"
#
include
<
algorithm
>
bool
GrOctoBounds
:
:
clip
(
const
SkIRect
&
clipRect
)
{
float
l
=
std
:
:
max
(
fBounds
.
left
(
)
(
float
)
clipRect
.
left
(
)
)
;
float
t
=
std
:
:
max
(
fBounds
.
top
(
)
(
float
)
clipRect
.
top
(
)
)
;
float
r
=
std
:
:
min
(
fBounds
.
right
(
)
(
float
)
clipRect
.
right
(
)
)
;
float
b
=
std
:
:
min
(
fBounds
.
bottom
(
)
(
float
)
clipRect
.
bottom
(
)
)
;
float
l45
=
fBounds45
.
left
(
)
;
float
t45
=
fBounds45
.
top
(
)
;
float
r45
=
fBounds45
.
right
(
)
;
float
b45
=
fBounds45
.
bottom
(
)
;
if
(
!
(
l
<
r
&
&
t
<
b
&
&
l45
<
r45
&
&
t45
<
b45
)
)
{
return
false
;
}
if
(
l45
>
Get_x45
(
r
b
)
)
{
b
=
SkScalarPin
(
r
-
l45
t
b
)
;
}
else
if
(
r45
<
Get_x45
(
r
b
)
)
{
r
=
SkScalarPin
(
b
+
r45
l
r
)
;
}
if
(
l45
>
Get_x45
(
l
t
)
)
{
l
=
SkScalarPin
(
t
+
l45
l
r
)
;
}
else
if
(
r45
<
Get_x45
(
l
t
)
)
{
t
=
SkScalarPin
(
l
-
r45
t
b
)
;
}
if
(
t45
>
Get_y45
(
l
b
)
)
{
l
=
SkScalarPin
(
t45
-
b
l
r
)
;
}
else
if
(
b45
<
Get_y45
(
l
b
)
)
{
b
=
SkScalarPin
(
b45
-
l
t
b
)
;
}
if
(
t45
>
Get_y45
(
r
t
)
)
{
t
=
SkScalarPin
(
t45
-
r
t
b
)
;
}
else
if
(
b45
<
Get_y45
(
r
t
)
)
{
r
=
SkScalarPin
(
b45
-
t
l
r
)
;
}
l45
=
SkScalarPin
(
Get_x45
(
l
b
)
l45
r45
)
;
t45
=
SkScalarPin
(
Get_y45
(
l
t
)
t45
b45
)
;
r45
=
SkScalarPin
(
Get_x45
(
r
t
)
l45
r45
)
;
b45
=
SkScalarPin
(
Get_y45
(
r
b
)
t45
b45
)
;
if
(
!
(
l
<
r
&
&
t
<
b
&
&
l45
<
r45
&
&
t45
<
b45
)
)
{
return
false
;
}
fBounds
.
setLTRB
(
l
t
r
b
)
;
fBounds45
.
setLTRB
(
l45
t45
r45
b45
)
;
#
ifdef
SK_DEBUG
SkASSERT
(
l
>
=
(
float
)
clipRect
.
left
(
)
)
;
SkASSERT
(
t
>
=
(
float
)
clipRect
.
top
(
)
)
;
SkASSERT
(
r
<
=
(
float
)
clipRect
.
right
(
)
)
;
SkASSERT
(
b
<
=
(
float
)
clipRect
.
bottom
(
)
)
;
this
-
>
validateBoundsAreTight
(
)
;
#
endif
return
true
;
}
#
if
defined
(
SK_DEBUG
)
|
|
defined
(
GR_TEST_UTILS
)
void
GrOctoBounds
:
:
validateBoundsAreTight
(
)
const
{
this
-
>
validateBoundsAreTight
(
[
]
(
bool
cond
const
char
*
file
int
line
const
char
*
code
)
{
SkASSERTF
(
cond
"
%
s
(
%
d
)
:
assertion
failure
:
\
"
assert
(
%
s
)
\
"
"
file
line
code
)
;
}
)
;
}
void
GrOctoBounds
:
:
validateBoundsAreTight
(
const
std
:
:
function
<
void
(
bool
cond
const
char
*
file
int
line
const
char
*
code
)
>
&
validateFn
)
const
{
constexpr
static
float
epsilon
=
1e
-
2f
;
float
l
=
fBounds
.
left
(
)
l45
=
fBounds45
.
left
(
)
;
float
t
=
fBounds
.
top
(
)
t45
=
fBounds45
.
top
(
)
;
float
r
=
fBounds
.
right
(
)
r45
=
fBounds45
.
right
(
)
;
float
b
=
fBounds
.
bottom
(
)
b45
=
fBounds45
.
bottom
(
)
;
#
define
VALIDATE
(
CODE
)
validateFn
(
CODE
__FILE__
__LINE__
#
CODE
)
VALIDATE
(
l45
>
=
Get_x45
(
l
b
)
-
epsilon
)
;
VALIDATE
(
t45
>
=
Get_y45
(
l
t
)
-
epsilon
)
;
VALIDATE
(
r45
<
=
Get_x45
(
r
t
)
+
epsilon
)
;
VALIDATE
(
b45
<
=
Get_y45
(
r
b
)
+
epsilon
)
;
VALIDATE
(
l
>
=
Get_x
(
l45
t45
)
-
epsilon
)
;
VALIDATE
(
t
>
=
Get_y
(
r45
t45
)
-
epsilon
)
;
VALIDATE
(
r
<
=
Get_x
(
r45
b45
)
+
epsilon
)
;
VALIDATE
(
b
<
=
Get_y
(
l45
b45
)
+
epsilon
)
;
VALIDATE
(
l45
<
=
Get_x45
(
r
b
)
+
epsilon
)
;
VALIDATE
(
l45
<
=
Get_x45
(
l
t
)
+
epsilon
)
;
VALIDATE
(
t45
<
=
Get_y45
(
l
b
)
+
epsilon
)
;
VALIDATE
(
t45
<
=
Get_y45
(
r
t
)
+
epsilon
)
;
VALIDATE
(
r45
>
=
Get_x45
(
l
t
)
-
epsilon
)
;
VALIDATE
(
r45
>
=
Get_x45
(
r
b
)
-
epsilon
)
;
VALIDATE
(
b45
>
=
Get_y45
(
r
t
)
-
epsilon
)
;
VALIDATE
(
b45
>
=
Get_y45
(
l
b
)
-
epsilon
)
;
VALIDATE
(
l
<
=
Get_x
(
l45
b45
)
+
epsilon
)
;
VALIDATE
(
l
<
=
Get_x
(
r45
t45
)
+
epsilon
)
;
VALIDATE
(
t
<
=
Get_y
(
r45
b45
)
+
epsilon
)
;
VALIDATE
(
t
<
=
Get_y
(
l45
t45
)
+
epsilon
)
;
VALIDATE
(
r
>
=
Get_x
(
r45
t45
)
-
epsilon
)
;
VALIDATE
(
r
>
=
Get_x
(
l45
b45
)
-
epsilon
)
;
VALIDATE
(
b
>
=
Get_y
(
l45
t45
)
-
epsilon
)
;
VALIDATE
(
b
>
=
Get_y
(
r45
b45
)
-
epsilon
)
;
#
undef
VALIDATE
}
#
endif
