#
include
"
GrCCTriangleShader
.
h
"
#
include
"
glsl
/
GrGLSLFragmentShaderBuilder
.
h
"
#
include
"
glsl
/
GrGLSLVertexGeoBuilder
.
h
"
using
Shader
=
GrCCCoverageProcessor
:
:
Shader
;
void
GrCCTriangleShader
:
:
onEmitVaryings
(
GrGLSLVaryingHandler
*
varyingHandler
GrGLSLVarying
:
:
Scope
scope
SkString
*
code
const
char
*
const
char
*
inputCoverage
const
char
*
wind
)
{
fCoverageTimesWind
.
reset
(
kHalf_GrSLType
scope
)
;
if
(
!
inputCoverage
)
{
varyingHandler
-
>
addVarying
(
"
wind
"
&
fCoverageTimesWind
GrGLSLVaryingHandler
:
:
Interpolation
:
:
kCanBeFlat
)
;
code
-
>
appendf
(
"
%
s
=
%
s
;
"
OutName
(
fCoverageTimesWind
)
wind
)
;
}
else
{
varyingHandler
-
>
addVarying
(
"
coverage_times_wind
"
&
fCoverageTimesWind
)
;
code
-
>
appendf
(
"
%
s
=
%
s
*
%
s
;
"
OutName
(
fCoverageTimesWind
)
inputCoverage
wind
)
;
}
}
void
GrCCTriangleShader
:
:
onEmitFragmentCode
(
GrGLSLFPFragmentBuilder
*
f
const
char
*
outputCoverage
)
const
{
f
-
>
codeAppendf
(
"
%
s
=
%
s
;
"
outputCoverage
fCoverageTimesWind
.
fsIn
(
)
)
;
}
void
GrCCTriangleCornerShader
:
:
emitSetupCode
(
GrGLSLVertexGeoBuilder
*
s
const
char
*
pts
const
char
*
repetitionID
const
char
*
wind
GeometryVars
*
vars
)
const
{
s
-
>
codeAppendf
(
"
float2
corner
=
%
s
[
%
s
]
;
"
pts
repetitionID
)
;
vars
-
>
fCornerVars
.
fPoint
=
"
corner
"
;
s
-
>
codeAppendf
(
"
float2x2
vectors
=
float2x2
(
corner
-
%
s
[
0
!
=
%
s
?
%
s
-
1
:
2
]
"
"
corner
-
%
s
[
2
!
=
%
s
?
%
s
+
1
:
0
]
)
;
"
pts
repetitionID
repetitionID
pts
repetitionID
repetitionID
)
;
s
-
>
codeAppend
(
"
for
(
int
i
=
0
;
i
<
2
;
+
+
i
)
{
"
)
;
s
-
>
codeAppend
(
"
vectors
[
i
]
=
(
vectors
[
i
]
!
=
float2
(
0
)
)
?
vectors
[
i
]
:
float2
(
1
)
;
"
)
;
s
-
>
codeAppend
(
"
}
"
)
;
s
-
>
codeAppendf
(
"
float2
leftdir
=
normalize
(
vectors
[
%
s
>
0
?
0
:
1
]
)
;
"
wind
)
;
s
-
>
codeAppendf
(
"
float2
rightdir
=
normalize
(
vectors
[
%
s
>
0
?
1
:
0
]
)
;
"
wind
)
;
s
-
>
codeAppend
(
"
float2
bisect
=
dot
(
leftdir
rightdir
)
>
=
0
?
"
"
leftdir
+
rightdir
:
"
"
float2
(
leftdir
.
y
-
rightdir
.
y
rightdir
.
x
-
leftdir
.
x
)
;
"
)
;
s
-
>
declareGlobal
(
fAABoxMatrices
)
;
s
-
>
declareGlobal
(
fAABoxTranslates
)
;
s
-
>
declareGlobal
(
fGeoShaderBisects
)
;
s
-
>
codeAppendf
(
"
for
(
int
i
=
0
;
i
<
2
;
+
+
i
)
{
"
)
;
s
-
>
codeAppendf
(
"
float2
n
=
-
vectors
[
%
s
>
0
?
i
:
1
-
i
]
;
"
wind
)
;
s
-
>
codeAppend
(
"
float
nwidth
=
(
abs
(
n
.
x
)
+
abs
(
n
.
y
)
)
*
(
bloat
*
2
)
;
"
)
;
s
-
>
codeAppend
(
"
n
/
=
nwidth
;
"
)
;
s
-
>
codeAppendf
(
"
%
s
[
i
]
[
0
]
=
n
;
"
fAABoxMatrices
.
c_str
(
)
)
;
s
-
>
codeAppendf
(
"
%
s
[
i
]
[
0
]
=
-
dot
(
n
corner
)
+
.
5
;
"
fAABoxTranslates
.
c_str
(
)
)
;
s
-
>
codeAppend
(
"
n
=
(
i
=
=
0
)
?
float2
(
-
n
.
y
n
.
x
)
:
float2
(
n
.
y
-
n
.
x
)
;
"
)
;
s
-
>
codeAppendf
(
"
%
s
[
i
]
[
1
]
=
n
;
"
fAABoxMatrices
.
c_str
(
)
)
;
s
-
>
codeAppendf
(
"
%
s
[
i
]
[
1
]
=
-
dot
(
n
corner
)
+
.
5
;
"
fAABoxTranslates
.
c_str
(
)
)
;
s
-
>
codeAppendf
(
"
%
s
[
i
]
=
-
bisect
*
%
s
[
i
]
;
"
fGeoShaderBisects
.
c_str
(
)
fAABoxMatrices
.
c_str
(
)
)
;
s
-
>
codeAppend
(
"
}
"
)
;
}
void
GrCCTriangleCornerShader
:
:
onEmitVaryings
(
GrGLSLVaryingHandler
*
varyingHandler
GrGLSLVarying
:
:
Scope
scope
SkString
*
code
const
char
*
position
const
char
*
inputCoverage
const
char
*
wind
)
{
using
Interpolation
=
GrGLSLVaryingHandler
:
:
Interpolation
;
SkASSERT
(
!
inputCoverage
)
;
fCornerLocationInAABoxes
.
reset
(
kFloat2x2_GrSLType
scope
)
;
varyingHandler
-
>
addVarying
(
"
corner_location_in_aa_boxes
"
&
fCornerLocationInAABoxes
)
;
fBisectInAABoxes
.
reset
(
kFloat2x2_GrSLType
scope
)
;
varyingHandler
-
>
addVarying
(
"
bisect_in_aa_boxes
"
&
fBisectInAABoxes
Interpolation
:
:
kCanBeFlat
)
;
code
-
>
appendf
(
"
for
(
int
i
=
0
;
i
<
2
;
+
+
i
)
{
"
)
;
code
-
>
appendf
(
"
%
s
[
i
]
=
%
s
*
%
s
[
i
]
+
%
s
[
i
]
;
"
OutName
(
fCornerLocationInAABoxes
)
position
fAABoxMatrices
.
c_str
(
)
fAABoxTranslates
.
c_str
(
)
)
;
code
-
>
appendf
(
"
%
s
[
i
]
=
%
s
[
i
]
;
"
OutName
(
fBisectInAABoxes
)
fGeoShaderBisects
.
c_str
(
)
)
;
code
-
>
appendf
(
"
}
"
)
;
fWindTimesHalf
.
reset
(
kHalf_GrSLType
scope
)
;
varyingHandler
-
>
addVarying
(
"
wind_times_half
"
&
fWindTimesHalf
Interpolation
:
:
kCanBeFlat
)
;
code
-
>
appendf
(
"
%
s
=
%
s
*
.
5
;
"
OutName
(
fWindTimesHalf
)
wind
)
;
}
void
GrCCTriangleCornerShader
:
:
onEmitFragmentCode
(
GrGLSLFPFragmentBuilder
*
f
const
char
*
outputCoverage
)
const
{
f
-
>
codeAppendf
(
"
for
(
int
i
=
0
;
i
<
2
;
+
+
i
)
{
"
)
;
f
-
>
codeAppendf
(
"
half2
corner
=
%
s
[
i
]
;
"
fCornerLocationInAABoxes
.
fsIn
(
)
)
;
f
-
>
codeAppendf
(
"
half2
bisect
=
%
s
[
i
]
;
"
fBisectInAABoxes
.
fsIn
(
)
)
;
f
-
>
codeAppendf
(
"
half2
d
=
half2
(
1
-
corner
.
x
-
corner
.
y
)
;
"
)
;
f
-
>
codeAppendf
(
"
half
T
=
d
.
y
*
bisect
.
x
>
=
d
.
x
*
bisect
.
y
?
d
.
y
/
bisect
.
y
"
"
:
d
.
x
/
bisect
.
x
;
"
)
;
f
-
>
codeAppendf
(
"
half2
exit
=
corner
+
bisect
*
T
;
"
)
;
f
-
>
codeAppendf
(
"
%
s
+
=
(
2
-
corner
.
x
-
exit
.
x
)
*
corner
.
y
;
"
outputCoverage
)
;
f
-
>
codeAppendf
(
"
%
s
+
=
(
corner
.
x
-
1
)
*
exit
.
y
;
"
outputCoverage
)
;
f
-
>
codeAppendf
(
"
}
"
)
;
f
-
>
codeAppendf
(
"
%
s
*
=
%
s
;
"
outputCoverage
fWindTimesHalf
.
fsIn
(
)
)
;
}
