#
ifndef
GrVkMemory_DEFINED
#
define
GrVkMemory_DEFINED
#
include
"
include
/
gpu
/
vk
/
GrVkTypes
.
h
"
#
include
"
include
/
private
/
SkTArray
.
h
"
#
include
"
src
/
gpu
/
vk
/
GrVkBuffer
.
h
"
class
GrVkGpu
;
namespace
GrVkMemory
{
bool
AllocAndBindBufferMemory
(
const
GrVkGpu
*
gpu
VkBuffer
buffer
GrVkBuffer
:
:
Type
type
bool
dynamic
GrVkAlloc
*
alloc
)
;
void
FreeBufferMemory
(
const
GrVkGpu
*
gpu
GrVkBuffer
:
:
Type
type
const
GrVkAlloc
&
alloc
)
;
bool
AllocAndBindImageMemory
(
const
GrVkGpu
*
gpu
VkImage
image
bool
linearTiling
GrVkAlloc
*
alloc
)
;
void
FreeImageMemory
(
const
GrVkGpu
*
gpu
bool
linearTiling
const
GrVkAlloc
&
alloc
)
;
void
*
MapAlloc
(
const
GrVkGpu
*
gpu
const
GrVkAlloc
&
alloc
)
;
void
UnmapAlloc
(
const
GrVkGpu
*
gpu
const
GrVkAlloc
&
alloc
)
;
void
FlushMappedAlloc
(
const
GrVkGpu
*
gpu
const
GrVkAlloc
&
alloc
VkDeviceSize
offset
VkDeviceSize
size
)
;
void
InvalidateMappedAlloc
(
const
GrVkGpu
*
gpu
const
GrVkAlloc
&
alloc
VkDeviceSize
offset
VkDeviceSize
size
)
;
void
GetNonCoherentMappedMemoryRange
(
const
GrVkAlloc
&
VkDeviceSize
offset
VkDeviceSize
size
VkDeviceSize
alignment
VkMappedMemoryRange
*
)
;
}
#
endif
