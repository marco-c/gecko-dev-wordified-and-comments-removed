#
ifndef
GrVkExtensions_DEFINED
#
define
GrVkExtensions_DEFINED
#
include
"
.
.
/
private
/
SkTArray
.
h
"
#
include
"
SkString
.
h
"
#
include
"
vk
/
GrVkDefines
.
h
"
#
include
"
vk
/
GrVkInterface
.
h
"
class
SK_API
GrVkExtensions
{
public
:
GrVkExtensions
(
GrVkInterface
:
:
GetProc
getProc
)
:
fGetProc
(
getProc
)
fInstanceExtensionStrings
(
new
SkTArray
<
SkString
>
)
fDeviceExtensionStrings
(
new
SkTArray
<
SkString
>
)
fInstanceLayerStrings
(
new
SkTArray
<
SkString
>
)
fDeviceLayerStrings
(
new
SkTArray
<
SkString
>
)
{
}
bool
initInstance
(
uint32_t
specVersion
)
;
bool
initDevice
(
uint32_t
specVersion
VkInstance
VkPhysicalDevice
)
;
bool
hasInstanceExtension
(
const
char
[
]
)
const
;
bool
hasDeviceExtension
(
const
char
[
]
)
const
;
bool
hasInstanceLayer
(
const
char
[
]
)
const
;
bool
hasDeviceLayer
(
const
char
[
]
)
const
;
void
print
(
const
char
*
sep
=
"
\
n
"
)
const
;
private
:
GrVkInterface
:
:
GetProc
fGetProc
;
std
:
:
unique_ptr
<
SkTArray
<
SkString
>
>
fInstanceExtensionStrings
;
std
:
:
unique_ptr
<
SkTArray
<
SkString
>
>
fDeviceExtensionStrings
;
std
:
:
unique_ptr
<
SkTArray
<
SkString
>
>
fInstanceLayerStrings
;
std
:
:
unique_ptr
<
SkTArray
<
SkString
>
>
fDeviceLayerStrings
;
}
;
#
endif
