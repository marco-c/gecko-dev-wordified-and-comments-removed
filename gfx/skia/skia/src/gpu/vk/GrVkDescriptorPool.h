#
ifndef
GrVkDescriptorPool_DEFINED
#
define
GrVkDescriptorPool_DEFINED
#
include
"
include
/
gpu
/
vk
/
GrVkTypes
.
h
"
#
include
"
src
/
gpu
/
vk
/
GrVkResource
.
h
"
class
GrVkGpu
;
class
GrVkDescriptorPool
:
public
GrVkResource
{
public
:
GrVkDescriptorPool
(
const
GrVkGpu
*
gpu
VkDescriptorType
type
uint32_t
count
)
;
VkDescriptorPool
descPool
(
)
const
{
return
fDescPool
;
}
void
reset
(
const
GrVkGpu
*
gpu
)
;
bool
isCompatible
(
VkDescriptorType
type
uint32_t
count
)
const
;
#
ifdef
SK_TRACE_VK_RESOURCES
void
dumpInfo
(
)
const
override
{
SkDebugf
(
"
GrVkDescriptorPool
:
%
d
type
%
d
(
%
d
refs
)
\
n
"
fDescPool
fType
this
-
>
getRefCnt
(
)
)
;
}
#
endif
private
:
void
freeGPUData
(
GrVkGpu
*
gpu
)
const
override
;
VkDescriptorType
fType
;
uint32_t
fCount
;
VkDescriptorPool
fDescPool
;
typedef
GrVkResource
INHERITED
;
}
;
#
endif
