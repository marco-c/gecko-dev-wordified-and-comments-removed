#
include
"
GrVkVaryingHandler
.
h
"
static
inline
int
grsltype_to_location_size
(
GrSLType
type
)
{
static
const
uint32_t
kSizes
[
]
=
{
0
1
1
1
1
2
3
4
0
0
0
0
1
1
1
0
0
}
;
return
kSizes
[
type
]
;
GR_STATIC_ASSERT
(
0
=
=
kVoid_GrSLType
)
;
GR_STATIC_ASSERT
(
1
=
=
kFloat_GrSLType
)
;
GR_STATIC_ASSERT
(
2
=
=
kVec2f_GrSLType
)
;
GR_STATIC_ASSERT
(
3
=
=
kVec3f_GrSLType
)
;
GR_STATIC_ASSERT
(
4
=
=
kVec4f_GrSLType
)
;
GR_STATIC_ASSERT
(
5
=
=
kMat22f_GrSLType
)
;
GR_STATIC_ASSERT
(
6
=
=
kMat33f_GrSLType
)
;
GR_STATIC_ASSERT
(
7
=
=
kMat44f_GrSLType
)
;
GR_STATIC_ASSERT
(
8
=
=
kTexture2DSampler_GrSLType
)
;
GR_STATIC_ASSERT
(
9
=
=
kTextureExternalSampler_GrSLType
)
;
GR_STATIC_ASSERT
(
10
=
=
kTexture2DRectSampler_GrSLType
)
;
GR_STATIC_ASSERT
(
11
=
=
kTextureBufferSampler_GrSLType
)
;
GR_STATIC_ASSERT
(
12
=
=
kBool_GrSLType
)
;
GR_STATIC_ASSERT
(
13
=
=
kInt_GrSLType
)
;
GR_STATIC_ASSERT
(
14
=
=
kUint_GrSLType
)
;
GR_STATIC_ASSERT
(
15
=
=
kTexture2D_GrSLType
)
;
GR_STATIC_ASSERT
(
16
=
=
kSampler_GrSLType
)
;
GR_STATIC_ASSERT
(
SK_ARRAY_COUNT
(
kSizes
)
=
=
kGrSLTypeCount
)
;
}
void
finalize_helper
(
GrVkVaryingHandler
:
:
VarArray
&
vars
)
{
int
locationIndex
=
0
;
for
(
int
i
=
0
;
i
<
vars
.
count
(
)
;
+
+
i
)
{
GrGLSLShaderVar
&
var
=
vars
[
i
]
;
SkString
location
;
location
.
appendf
(
"
location
=
%
d
"
locationIndex
)
;
var
.
setLayoutQualifier
(
location
.
c_str
(
)
)
;
int
elementSize
=
grsltype_to_location_size
(
var
.
getType
(
)
)
;
SkASSERT
(
elementSize
)
;
int
numElements
=
1
;
if
(
var
.
isArray
(
)
)
{
numElements
=
var
.
getArrayCount
(
)
;
}
locationIndex
+
=
elementSize
*
numElements
;
}
SkASSERT
(
locationIndex
<
=
64
)
;
}
void
GrVkVaryingHandler
:
:
onFinalize
(
)
{
finalize_helper
(
fVertexInputs
)
;
finalize_helper
(
fVertexOutputs
)
;
finalize_helper
(
fGeomInputs
)
;
finalize_helper
(
fGeomOutputs
)
;
finalize_helper
(
fFragInputs
)
;
finalize_helper
(
fFragOutputs
)
;
}
