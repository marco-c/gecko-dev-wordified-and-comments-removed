#
ifndef
GrSurfaceProxyPriv_DEFINED
#
define
GrSurfaceProxyPriv_DEFINED
#
include
"
GrSurfaceProxy
.
h
"
class
GrSurfaceProxyPriv
{
public
:
const
GrTexture
*
peekTexture
(
)
const
{
return
fProxy
-
>
fTarget
?
fProxy
-
>
fTarget
-
>
asTexture
(
)
:
nullptr
;
}
bool
hasPendingIO
(
)
const
{
return
fProxy
-
>
hasPendingIO
(
)
;
}
bool
hasPendingWrite
(
)
const
{
return
fProxy
-
>
hasPendingWrite
(
)
;
}
bool
isExact
(
)
const
{
return
SkBackingFit
:
:
kExact
=
=
fProxy
-
>
fFit
;
}
void
exactify
(
)
;
private
:
explicit
GrSurfaceProxyPriv
(
GrSurfaceProxy
*
proxy
)
:
fProxy
(
proxy
)
{
}
GrSurfaceProxyPriv
(
const
GrSurfaceProxyPriv
&
)
{
}
GrSurfaceProxyPriv
&
operator
=
(
const
GrSurfaceProxyPriv
&
)
;
const
GrSurfaceProxyPriv
*
operator
&
(
)
const
;
GrSurfaceProxyPriv
*
operator
&
(
)
;
GrSurfaceProxy
*
fProxy
;
friend
class
GrSurfaceProxy
;
}
;
inline
GrSurfaceProxyPriv
GrSurfaceProxy
:
:
priv
(
)
{
return
GrSurfaceProxyPriv
(
this
)
;
}
inline
const
GrSurfaceProxyPriv
GrSurfaceProxy
:
:
priv
(
)
const
{
return
GrSurfaceProxyPriv
(
const_cast
<
GrSurfaceProxy
*
>
(
this
)
)
;
}
#
endif
