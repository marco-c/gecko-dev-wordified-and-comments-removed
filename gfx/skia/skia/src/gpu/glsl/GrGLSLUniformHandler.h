#
ifndef
GrGLSLUniformHandler_DEFINED
#
define
GrGLSLUniformHandler_DEFINED
#
include
"
GrGLSLProgramDataManager
.
h
"
#
include
"
GrGLSLShaderVar
.
h
"
class
GrGLSLProgramBuilder
;
class
GrGLSLSampler
;
class
GrGLSLUniformHandler
{
public
:
virtual
~
GrGLSLUniformHandler
(
)
{
}
typedef
GrGLSLProgramDataManager
:
:
UniformHandle
UniformHandle
;
typedef
GrGLSLProgramDataManager
:
:
UniformHandle
SamplerHandle
;
UniformHandle
addUniform
(
uint32_t
visibility
GrSLType
type
GrSLPrecision
precision
const
char
*
name
const
char
*
*
outName
=
nullptr
)
{
SkASSERT
(
!
GrSLTypeIsCombinedSamplerType
(
type
)
)
;
return
this
-
>
addUniformArray
(
visibility
type
precision
name
0
outName
)
;
}
UniformHandle
addUniformArray
(
uint32_t
visibility
GrSLType
type
GrSLPrecision
precision
const
char
*
name
int
arrayCount
const
char
*
*
outName
=
nullptr
)
{
SkASSERT
(
!
GrSLTypeIsCombinedSamplerType
(
type
)
)
;
return
this
-
>
internalAddUniformArray
(
visibility
type
precision
name
true
arrayCount
outName
)
;
}
virtual
const
GrGLSLShaderVar
&
getUniformVariable
(
UniformHandle
u
)
const
=
0
;
virtual
const
char
*
getUniformCStr
(
UniformHandle
u
)
const
=
0
;
protected
:
explicit
GrGLSLUniformHandler
(
GrGLSLProgramBuilder
*
program
)
:
fProgramBuilder
(
program
)
{
}
GrGLSLProgramBuilder
*
fProgramBuilder
;
private
:
virtual
int
numSamplers
(
)
const
=
0
;
virtual
const
GrGLSLSampler
&
getSampler
(
SamplerHandle
handle
)
const
=
0
;
SamplerHandle
addSampler
(
uint32_t
visibility
GrPixelConfig
config
GrSLType
type
GrSLPrecision
precision
const
char
*
name
)
{
return
this
-
>
internalAddSampler
(
visibility
config
type
precision
name
)
;
}
virtual
SamplerHandle
internalAddSampler
(
uint32_t
visibility
GrPixelConfig
config
GrSLType
type
GrSLPrecision
precision
const
char
*
name
)
=
0
;
virtual
UniformHandle
internalAddUniformArray
(
uint32_t
visibility
GrSLType
type
GrSLPrecision
precision
const
char
*
name
bool
mangleName
int
arrayCount
const
char
*
*
outName
)
=
0
;
virtual
void
appendUniformDecls
(
GrShaderFlags
visibility
SkString
*
)
const
=
0
;
friend
class
GrGLSLProgramBuilder
;
}
;
#
endif
