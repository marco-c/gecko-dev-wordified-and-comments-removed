#
ifndef
GrGLSLProgramBuilder_DEFINED
#
define
GrGLSLProgramBuilder_DEFINED
#
include
"
GrGeometryProcessor
.
h
"
#
include
"
GrGpu
.
h
"
#
include
"
glsl
/
GrGLSLFragmentShaderBuilder
.
h
"
#
include
"
glsl
/
GrGLSLGeometryShaderBuilder
.
h
"
#
include
"
glsl
/
GrGLSLProgramDataManager
.
h
"
#
include
"
glsl
/
GrGLSLVertexShaderBuilder
.
h
"
class
GrGLSLCaps
;
class
GrGLSLShaderVar
;
class
GrGLSLVaryingHandler
;
#
define
GR_SIGNIFICANT_POW2_DECIMAL_DIG
11
class
GrGLSLUniformBuilder
{
public
:
enum
ShaderVisibility
{
kVertex_Visibility
=
1
<
<
kVertex_GrShaderType
kGeometry_Visibility
=
1
<
<
kGeometry_GrShaderType
kFragment_Visibility
=
1
<
<
kFragment_GrShaderType
}
;
virtual
~
GrGLSLUniformBuilder
(
)
{
}
typedef
GrGLSLProgramDataManager
:
:
UniformHandle
UniformHandle
;
UniformHandle
addUniform
(
uint32_t
visibility
GrSLType
type
GrSLPrecision
precision
const
char
*
name
const
char
*
*
outName
=
nullptr
)
{
return
this
-
>
addUniformArray
(
visibility
type
precision
name
0
outName
)
;
}
UniformHandle
addUniformArray
(
uint32_t
visibility
GrSLType
type
GrSLPrecision
precision
const
char
*
name
int
arrayCount
const
char
*
*
outName
=
nullptr
)
{
return
this
-
>
internalAddUniformArray
(
visibility
type
precision
name
true
arrayCount
outName
)
;
}
virtual
const
GrGLSLShaderVar
&
getUniformVariable
(
UniformHandle
u
)
const
=
0
;
virtual
const
char
*
getUniformCStr
(
UniformHandle
u
)
const
=
0
;
protected
:
virtual
UniformHandle
internalAddUniformArray
(
uint32_t
visibility
GrSLType
type
GrSLPrecision
precision
const
char
*
name
bool
mangleName
int
arrayCount
const
char
*
*
outName
)
=
0
;
}
;
class
GrGLSLGPBuilder
:
public
virtual
GrGLSLUniformBuilder
{
public
:
}
;
class
GrGLSLFPBuilder
:
public
virtual
GrGLSLUniformBuilder
{
public
:
}
;
class
GrGLSLXPBuilder
:
public
virtual
GrGLSLUniformBuilder
{
public
:
}
;
class
GrGLSLProgramBuilder
:
public
GrGLSLGPBuilder
public
GrGLSLFPBuilder
public
GrGLSLXPBuilder
{
public
:
typedef
GrGpu
:
:
DrawArgs
DrawArgs
;
virtual
const
GrGLSLCaps
*
glslCaps
(
)
const
=
0
;
struct
BuiltinUniformHandles
{
UniformHandle
fRTAdjustmentUni
;
UniformHandle
fRTHeightUni
;
}
;
protected
:
explicit
GrGLSLProgramBuilder
(
const
DrawArgs
&
args
)
;
const
GrPrimitiveProcessor
&
primitiveProcessor
(
)
const
{
return
*
fArgs
.
fPrimitiveProcessor
;
}
const
GrPipeline
&
pipeline
(
)
const
{
return
*
fArgs
.
fPipeline
;
}
const
GrProgramDesc
&
desc
(
)
const
{
return
*
fArgs
.
fDesc
;
}
const
GrProgramDesc
:
:
KeyHeader
&
header
(
)
const
{
return
fArgs
.
fDesc
-
>
header
(
)
;
}
void
appendUniformDecls
(
ShaderVisibility
SkString
*
)
const
;
UniformHandle
addFragPosUniform
(
uint32_t
visibility
GrSLType
type
GrSLPrecision
precision
const
char
*
name
const
char
*
*
outName
)
{
return
this
-
>
internalAddUniformArray
(
visibility
type
precision
name
false
0
outName
)
;
}
const
char
*
rtAdjustment
(
)
const
{
return
"
rtAdjustment
"
;
}
void
nameVariable
(
SkString
*
out
char
prefix
const
char
*
name
bool
mangle
=
true
)
;
virtual
GrGLSLVaryingHandler
*
varyingHandler
(
)
=
0
;
static
const
int
kVarsPerBlock
;
GrGLSLVertexBuilder
fVS
;
GrGLSLGeometryBuilder
fGS
;
GrGLSLFragmentShaderBuilder
fFS
;
int
fStageIndex
;
BuiltinUniformHandles
fUniformHandles
;
const
DrawArgs
&
fArgs
;
private
:
virtual
void
onAppendUniformDecls
(
ShaderVisibility
visibility
SkString
*
out
)
const
=
0
;
friend
class
GrGLSLShaderBuilder
;
friend
class
GrGLSLVertexBuilder
;
friend
class
GrGLSLFragmentShaderBuilder
;
friend
class
GrGLSLGeometryBuilder
;
friend
class
GrGLSLVaryingHandler
;
}
;
#
endif
