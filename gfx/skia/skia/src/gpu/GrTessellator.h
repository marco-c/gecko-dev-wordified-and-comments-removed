#
ifndef
GrTessellator_DEFINED
#
define
GrTessellator_DEFINED
#
include
"
include
/
core
/
SkPoint
.
h
"
#
include
"
include
/
private
/
SkColorData
.
h
"
#
include
"
src
/
gpu
/
GrColor
.
h
"
class
SkPath
;
struct
SkRect
;
#
define
TESSELLATOR_WIREFRAME
0
namespace
GrTessellator
{
class
VertexAllocator
{
public
:
VertexAllocator
(
size_t
stride
)
:
fStride
(
stride
)
{
}
virtual
~
VertexAllocator
(
)
{
}
virtual
void
*
lock
(
int
vertexCount
)
=
0
;
virtual
void
unlock
(
int
actualCount
)
=
0
;
size_t
stride
(
)
const
{
return
fStride
;
}
private
:
size_t
fStride
;
}
;
struct
WindingVertex
{
SkPoint
fPos
;
int
fWinding
;
}
;
int
PathToVertices
(
const
SkPath
&
path
SkScalar
tolerance
const
SkRect
&
clipBounds
WindingVertex
*
*
verts
)
;
int
PathToTriangles
(
const
SkPath
&
path
SkScalar
tolerance
const
SkRect
&
clipBounds
VertexAllocator
*
bool
antialias
bool
*
isLinear
)
;
}
#
endif
