#
ifndef
GrPendingProgramElement_DEFINED
#
define
GrPendingProgramElement_DEFINED
#
include
"
SkRefCnt
.
h
"
#
include
"
GrTypes
.
h
"
template
<
typename
T
>
class
GrPendingProgramElement
:
SkNoncopyable
{
public
:
GrPendingProgramElement
(
)
:
fObj
(
nullptr
)
{
}
;
explicit
GrPendingProgramElement
(
T
*
obj
)
:
fObj
(
obj
)
{
if
(
obj
)
{
obj
-
>
addPendingExecution
(
)
;
}
}
void
reset
(
T
*
obj
)
{
if
(
obj
)
{
obj
-
>
addPendingExecution
(
)
;
}
if
(
fObj
)
{
fObj
-
>
completedExecution
(
)
;
}
fObj
=
obj
;
}
T
*
get
(
)
const
{
return
fObj
;
}
operator
T
*
(
)
{
return
fObj
;
}
T
*
operator
-
>
(
)
const
{
return
fObj
;
}
~
GrPendingProgramElement
(
)
{
if
(
fObj
)
{
fObj
-
>
completedExecution
(
)
;
}
}
private
:
T
*
fObj
;
typedef
SkNoncopyable
INHERITED
;
}
;
#
endif
