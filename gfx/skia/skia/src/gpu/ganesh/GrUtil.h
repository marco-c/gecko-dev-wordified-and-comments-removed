#
ifndef
GrUtil_DEFINED
#
define
GrUtil_DEFINED
#
include
"
include
/
core
/
SkScalar
.
h
"
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
"
include
/
private
/
gpu
/
ganesh
/
GrTypesPriv
.
h
"
#
include
"
src
/
core
/
SkSLTypeShared
.
h
"
class
GrStyle
;
class
SkMatrix
;
enum
GrIntelGpuFamily
{
kUnknown_IntelGpuFamily
kSandyBridge_IntelGpuFamily
kIvyBridge_IntelGpuFamily
kValleyView_IntelGpuFamily
kHaswell_IntelGpuFamily
kCherryView_IntelGpuFamily
kBroadwell_IntelGpuFamily
kApolloLake_IntelGpuFamily
kSkyLake_IntelGpuFamily
kGeminiLake_IntelGpuFamily
kKabyLake_IntelGpuFamily
kCoffeeLake_IntelGpuFamily
kIceLake_IntelGpuFamily
}
;
GrIntelGpuFamily
GrGetIntelGpuFamily
(
uint32_t
deviceID
)
;
bool
GrIsStrokeHairlineOrEquivalent
(
const
GrStyle
&
const
SkMatrix
&
SkScalar
*
outCoverage
)
;
static
inline
SkSLType
SkSLCombinedSamplerTypeForTextureType
(
GrTextureType
type
)
{
switch
(
type
)
{
case
GrTextureType
:
:
k2D
:
return
SkSLType
:
:
kTexture2DSampler
;
case
GrTextureType
:
:
kRectangle
:
return
SkSLType
:
:
kTexture2DRectSampler
;
case
GrTextureType
:
:
kExternal
:
return
SkSLType
:
:
kTextureExternalSampler
;
default
:
SK_ABORT
(
"
Unexpected
texture
type
"
)
;
}
}
#
endif
