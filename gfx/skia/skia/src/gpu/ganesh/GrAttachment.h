#
ifndef
GrAttachment_DEFINED
#
define
GrAttachment_DEFINED
#
include
"
src
/
core
/
SkClipStack
.
h
"
#
include
"
src
/
gpu
/
ganesh
/
GrSurface
.
h
"
class
GrRenderTarget
;
class
GrAttachment
:
public
GrSurface
{
public
:
enum
class
UsageFlags
:
uint8_t
{
kStencilAttachment
=
0x1
kColorAttachment
=
0x2
kTexture
=
0x4
}
;
GR_DECL_BITFIELD_CLASS_OPS_FRIENDS
(
UsageFlags
)
;
~
GrAttachment
(
)
override
{
}
UsageFlags
supportedUsages
(
)
const
{
return
fSupportedUsages
;
}
int
numSamples
(
)
const
{
return
fSampleCnt
;
}
GrMipmapped
mipmapped
(
)
const
{
return
fMipmapped
;
}
bool
hasPerformedInitialClear
(
)
const
{
return
fHasPerformedInitialClear
;
}
void
markHasPerformedInitialClear
(
)
{
fHasPerformedInitialClear
=
true
;
}
static
void
ComputeSharedAttachmentUniqueKey
(
const
GrCaps
&
caps
const
GrBackendFormat
&
format
SkISize
dimensions
UsageFlags
requiredUsage
int
sampleCnt
GrMipmapped
mipmapped
GrProtected
isProtected
GrMemoryless
memoryless
skgpu
:
:
UniqueKey
*
key
)
;
static
void
ComputeScratchKey
(
const
GrCaps
&
caps
const
GrBackendFormat
&
format
SkISize
dimensions
UsageFlags
requiredUsage
int
sampleCnt
GrMipmapped
mipmapped
GrProtected
GrMemoryless
skgpu
:
:
ScratchKey
*
key
)
;
protected
:
GrAttachment
(
GrGpu
*
gpu
SkISize
dimensions
UsageFlags
supportedUsages
int
sampleCnt
GrMipmapped
mipmapped
GrProtected
isProtected
std
:
:
string_view
label
GrMemoryless
memoryless
=
GrMemoryless
:
:
kNo
)
:
INHERITED
(
gpu
dimensions
isProtected
label
)
fSupportedUsages
(
supportedUsages
)
fSampleCnt
(
sampleCnt
)
fMipmapped
(
mipmapped
)
fMemoryless
(
memoryless
)
{
}
private
:
size_t
onGpuMemorySize
(
)
const
final
;
void
onSetLabel
(
)
override
{
}
void
computeScratchKey
(
skgpu
:
:
ScratchKey
*
)
const
final
;
const
char
*
getResourceType
(
)
const
override
{
if
(
fSupportedUsages
=
=
UsageFlags
:
:
kStencilAttachment
)
{
return
"
StencilAttachment
"
;
}
return
"
Surface
"
;
}
UsageFlags
fSupportedUsages
;
int
fSampleCnt
;
GrMipmapped
fMipmapped
;
bool
fHasPerformedInitialClear
=
false
;
GrMemoryless
fMemoryless
;
using
INHERITED
=
GrSurface
;
}
;
GR_MAKE_BITFIELD_CLASS_OPS
(
GrAttachment
:
:
UsageFlags
)
#
endif
