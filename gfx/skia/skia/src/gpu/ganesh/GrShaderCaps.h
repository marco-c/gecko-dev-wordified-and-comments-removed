#
ifndef
GrShaderCaps_DEFINED
#
define
GrShaderCaps_DEFINED
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
src
/
sksl
/
SkSLUtil
.
h
"
struct
GrContextOptions
;
class
SkJSONWriter
;
struct
GrShaderCaps
:
SkSL
:
:
ShaderCaps
{
GrShaderCaps
(
)
{
}
void
dumpJSON
(
SkJSONWriter
*
)
const
;
const
char
*
noperspectiveInterpolationExtensionString
(
)
const
{
SkASSERT
(
this
-
>
fNoPerspectiveInterpolationSupport
)
;
return
fNoPerspectiveInterpolationExtensionString
;
}
const
char
*
sampleVariablesExtensionString
(
)
const
{
SkASSERT
(
this
-
>
fSampleMaskSupport
)
;
return
fSampleVariablesExtensionString
;
}
void
applyOptionsOverrides
(
const
GrContextOptions
&
options
)
;
bool
fDstReadInShaderSupport
=
false
;
bool
fDualSourceBlendingSupport
=
false
;
bool
fPreferFlatInterpolation
=
false
;
bool
fVertexIDSupport
=
false
;
bool
fNonconstantArrayIndexSupport
=
false
;
bool
fBitManipulationSupport
=
false
;
bool
fHalfIs32Bits
=
false
;
bool
fHasLowFragmentPrecision
=
false
;
bool
fReducedShaderMode
=
false
;
bool
fRequiresLocalOutputColorForFBFetch
=
false
;
bool
fMustObfuscateUniformColor
=
false
;
bool
fMustWriteToFragColor
=
false
;
bool
fColorSpaceMathNeedsFloat
=
false
;
bool
fAvoidDfDxForGradientsWhenPossible
=
false
;
const
char
*
fSecondaryOutputExtensionString
=
nullptr
;
const
char
*
fNoPerspectiveInterpolationExtensionString
=
nullptr
;
const
char
*
fSampleVariablesExtensionString
=
nullptr
;
const
char
*
fFBFetchExtensionString
=
nullptr
;
int
fMaxFragmentSamplers
=
0
;
}
;
#
endif
