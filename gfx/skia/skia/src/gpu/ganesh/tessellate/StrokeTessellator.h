#
ifndef
StrokeTessellator_DEFINED
#
define
StrokeTessellator_DEFINED
#
include
"
include
/
core
/
SkPath
.
h
"
#
include
"
include
/
core
/
SkStrokeRec
.
h
"
#
include
"
include
/
private
/
SkColorData
.
h
"
#
include
"
src
/
base
/
SkMathPriv
.
h
"
#
include
"
src
/
gpu
/
ganesh
/
GrVertexChunkArray
.
h
"
#
include
"
src
/
gpu
/
tessellate
/
FixedCountBufferUtils
.
h
"
#
include
"
src
/
gpu
/
tessellate
/
Tessellation
.
h
"
class
GrGpuBuffer
;
class
GrMeshDrawTarget
;
class
GrOpFlushState
;
namespace
skgpu
:
:
ganesh
{
class
StrokeTessellator
{
public
:
using
PatchAttribs
=
tess
:
:
PatchAttribs
;
struct
PathStrokeList
{
PathStrokeList
(
const
SkPath
&
path
const
SkStrokeRec
&
stroke
const
SkPMColor4f
&
color
)
:
fPath
(
path
)
fStroke
(
stroke
)
fColor
(
color
)
{
}
SkPath
fPath
;
SkStrokeRec
fStroke
;
SkPMColor4f
fColor
;
PathStrokeList
*
fNext
=
nullptr
;
}
;
StrokeTessellator
(
PatchAttribs
attribs
)
:
fAttribs
(
attribs
|
PatchAttribs
:
:
kJoinControlPoint
)
{
}
void
prepare
(
GrMeshDrawTarget
*
const
SkMatrix
&
shaderMatrix
PathStrokeList
*
int
totalCombinedStrokeVerbCnt
)
;
void
draw
(
GrOpFlushState
*
)
const
;
protected
:
const
PatchAttribs
fAttribs
;
GrVertexChunkArray
fVertexChunkArray
;
int
fVertexCount
=
0
;
sk_sp
<
const
GrGpuBuffer
>
fVertexBufferIfNoIDSupport
;
}
;
}
#
endif
