#
ifndef
GrVkDescriptorPool_DEFINED
#
define
GrVkDescriptorPool_DEFINED
#
include
"
include
/
gpu
/
vk
/
GrVkTypes
.
h
"
#
include
"
src
/
gpu
/
ganesh
/
vk
/
GrVkManagedResource
.
h
"
#
include
<
cinttypes
>
class
GrVkGpu
;
class
GrVkDescriptorPool
:
public
GrVkManagedResource
{
public
:
static
GrVkDescriptorPool
*
Create
(
GrVkGpu
*
gpu
VkDescriptorType
type
uint32_t
count
)
;
VkDescriptorPool
descPool
(
)
const
{
return
fDescPool
;
}
bool
isCompatible
(
VkDescriptorType
type
uint32_t
count
)
const
;
#
ifdef
SK_TRACE_MANAGED_RESOURCES
void
dumpInfo
(
)
const
override
{
SkDebugf
(
"
GrVkDescriptorPool
:
%
"
PRIdPTR
"
type
%
d
(
%
d
refs
)
\
n
"
(
intptr_t
)
fDescPool
fType
this
-
>
getRefCnt
(
)
)
;
}
#
endif
private
:
GrVkDescriptorPool
(
const
GrVkGpu
*
VkDescriptorPool
pool
VkDescriptorType
type
uint32_t
count
)
;
void
freeGPUData
(
)
const
override
;
VkDescriptorType
fType
;
uint32_t
fCount
;
VkDescriptorPool
fDescPool
;
using
INHERITED
=
GrVkManagedResource
;
}
;
#
endif
