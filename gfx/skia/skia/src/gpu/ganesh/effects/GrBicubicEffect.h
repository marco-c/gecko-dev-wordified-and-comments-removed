#
ifndef
GrBicubicTextureEffect_DEFINED
#
define
GrBicubicTextureEffect_DEFINED
#
include
"
include
/
core
/
SkSamplingOptions
.
h
"
#
include
"
src
/
gpu
/
ganesh
/
GrFragmentProcessor
.
h
"
#
include
"
src
/
gpu
/
ganesh
/
GrProcessorUnitTest
.
h
"
#
include
"
src
/
gpu
/
ganesh
/
GrSamplerState
.
h
"
class
GrInvariantOutput
;
class
GrSurfaceProxyView
;
class
GrBicubicEffect
:
public
GrFragmentProcessor
{
public
:
enum
{
kFilterTexelPad
=
2
}
;
inline
static
constexpr
SkCubicResampler
gMitchell
=
{
1
.
0f
/
3
1
.
0f
/
3
}
;
inline
static
constexpr
SkCubicResampler
gCatmullRom
=
{
0
1
.
0f
/
2
}
;
enum
class
Direction
{
kX
kY
kXY
}
;
const
char
*
name
(
)
const
override
{
return
"
Bicubic
"
;
}
std
:
:
unique_ptr
<
GrFragmentProcessor
>
clone
(
)
const
override
{
return
std
:
:
unique_ptr
<
GrFragmentProcessor
>
(
new
GrBicubicEffect
(
*
this
)
)
;
}
static
std
:
:
unique_ptr
<
GrFragmentProcessor
>
Make
(
GrSurfaceProxyView
view
SkAlphaType
const
SkMatrix
&
SkCubicResampler
Direction
)
;
static
std
:
:
unique_ptr
<
GrFragmentProcessor
>
Make
(
GrSurfaceProxyView
view
SkAlphaType
const
SkMatrix
&
const
GrSamplerState
:
:
WrapMode
wrapX
const
GrSamplerState
:
:
WrapMode
wrapY
SkCubicResampler
Direction
const
GrCaps
&
)
;
static
std
:
:
unique_ptr
<
GrFragmentProcessor
>
MakeSubset
(
GrSurfaceProxyView
view
SkAlphaType
const
SkMatrix
&
const
GrSamplerState
:
:
WrapMode
wrapX
const
GrSamplerState
:
:
WrapMode
wrapY
const
SkRect
&
subset
SkCubicResampler
Direction
const
GrCaps
&
)
;
static
std
:
:
unique_ptr
<
GrFragmentProcessor
>
MakeSubset
(
GrSurfaceProxyView
view
SkAlphaType
const
SkMatrix
&
const
GrSamplerState
:
:
WrapMode
wrapX
const
GrSamplerState
:
:
WrapMode
wrapY
const
SkRect
&
subset
const
SkRect
&
domain
SkCubicResampler
Direction
const
GrCaps
&
)
;
static
std
:
:
unique_ptr
<
GrFragmentProcessor
>
Make
(
std
:
:
unique_ptr
<
GrFragmentProcessor
>
SkAlphaType
const
SkMatrix
&
SkCubicResampler
Direction
)
;
private
:
class
Impl
;
enum
class
Clamp
{
kUnpremul
kPremul
}
;
GrBicubicEffect
(
std
:
:
unique_ptr
<
GrFragmentProcessor
>
SkCubicResampler
Direction
Clamp
)
;
explicit
GrBicubicEffect
(
const
GrBicubicEffect
&
)
;
std
:
:
unique_ptr
<
ProgramImpl
>
onMakeProgramImpl
(
)
const
override
;
void
onAddToKey
(
const
GrShaderCaps
&
skgpu
:
:
KeyBuilder
*
)
const
override
;
bool
onIsEqual
(
const
GrFragmentProcessor
&
)
const
override
;
SkPMColor4f
constantOutputForConstantInput
(
const
SkPMColor4f
&
)
const
override
;
SkCubicResampler
fKernel
;
Direction
fDirection
;
Clamp
fClamp
;
GR_DECLARE_FRAGMENT_PROCESSOR_TEST
using
INHERITED
=
GrFragmentProcessor
;
}
;
#
endif
