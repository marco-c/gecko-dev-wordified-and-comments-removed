#
ifndef
GrDeferredUpload_DEFINED
#
define
GrDeferredUpload_DEFINED
#
include
<
functional
>
#
include
"
include
/
gpu
/
GrTypes
.
h
"
#
include
"
include
/
private
/
gpu
/
ganesh
/
GrTypesPriv
.
h
"
#
include
"
src
/
gpu
/
AtlasTypes
.
h
"
class
GrTextureProxy
;
using
GrDeferredTextureUploadWritePixelsFn
=
std
:
:
function
<
bool
(
GrTextureProxy
*
SkIRect
GrColorType
srcColorType
const
void
*
size_t
rowBytes
)
>
;
using
GrDeferredTextureUploadFn
=
std
:
:
function
<
void
(
GrDeferredTextureUploadWritePixelsFn
&
)
>
;
class
GrDeferredUploadTarget
{
public
:
virtual
~
GrDeferredUploadTarget
(
)
{
}
virtual
const
skgpu
:
:
TokenTracker
*
tokenTracker
(
)
=
0
;
virtual
skgpu
:
:
AtlasToken
addInlineUpload
(
GrDeferredTextureUploadFn
&
&
)
=
0
;
virtual
skgpu
:
:
AtlasToken
addASAPUpload
(
GrDeferredTextureUploadFn
&
&
upload
)
=
0
;
}
;
#
endif
