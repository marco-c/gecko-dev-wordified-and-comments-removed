#
ifndef
GrPersistentCacheEntry_DEFINED
#
define
GrPersistentCacheEntry_DEFINED
#
include
"
include
/
core
/
SkData
.
h
"
#
include
"
include
/
private
/
base
/
SkTArray
.
h
"
#
include
"
include
/
private
/
gpu
/
ganesh
/
GrTypesPriv
.
h
"
#
include
"
src
/
sksl
/
ir
/
SkSLProgram
.
h
"
#
include
<
string
>
class
SkReadBuffer
;
namespace
SkSL
{
struct
ProgramSettings
;
}
namespace
GrPersistentCacheUtils
{
struct
ShaderMetadata
{
SkSL
:
:
ProgramSettings
*
fSettings
=
nullptr
;
SkTArray
<
std
:
:
string
>
fAttributeNames
;
bool
fHasSecondaryColorOutput
=
false
;
sk_sp
<
SkData
>
fPlatformData
;
}
;
int
GetCurrentVersion
(
)
;
sk_sp
<
SkData
>
PackCachedShaders
(
SkFourByteTag
shaderType
const
std
:
:
string
shaders
[
]
const
SkSL
:
:
Program
:
:
Inputs
inputs
[
]
int
numInputs
const
ShaderMetadata
*
meta
=
nullptr
)
;
SkFourByteTag
GetType
(
SkReadBuffer
*
reader
)
;
bool
UnpackCachedShaders
(
SkReadBuffer
*
reader
std
:
:
string
shaders
[
]
SkSL
:
:
Program
:
:
Inputs
inputs
[
]
int
numInputs
ShaderMetadata
*
meta
=
nullptr
)
;
}
#
endif
