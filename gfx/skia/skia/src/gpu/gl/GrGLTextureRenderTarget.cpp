#
include
"
GrGLTextureRenderTarget
.
h
"
#
include
"
SkTraceMemoryDump
.
h
"
void
GrGLTextureRenderTarget
:
:
dumpMemoryStatistics
(
SkTraceMemoryDump
*
traceMemoryDump
)
const
{
GrGLRenderTarget
:
:
dumpMemoryStatistics
(
traceMemoryDump
)
;
SkString
dumpName
(
"
skia
/
gpu_resources
/
resource_
"
)
;
dumpName
.
appendS32
(
this
-
>
getUniqueID
(
)
)
;
dumpName
.
append
(
"
/
texture
"
)
;
size_t
size
=
GrGLTexture
:
:
gpuMemorySize
(
)
;
traceMemoryDump
-
>
dumpNumericValue
(
dumpName
.
c_str
(
)
"
size
"
"
bytes
"
size
)
;
if
(
this
-
>
isPurgeable
(
)
)
{
traceMemoryDump
-
>
dumpNumericValue
(
dumpName
.
c_str
(
)
"
purgeable_size
"
"
bytes
"
size
)
;
}
SkString
texture_id
;
texture_id
.
appendU32
(
this
-
>
textureID
(
)
)
;
traceMemoryDump
-
>
setMemoryBacking
(
dumpName
.
c_str
(
)
"
gl_texture
"
texture_id
.
c_str
(
)
)
;
}
