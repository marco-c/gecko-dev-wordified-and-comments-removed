#
ifndef
GrColorSpaceXform_DEFINED
#
define
GrColorSpaceXform_DEFINED
#
include
"
GrColor
.
h
"
#
include
"
GrFragmentProcessor
.
h
"
#
include
"
SkColorSpace
.
h
"
#
include
"
SkMatrix44
.
h
"
#
include
"
SkRefCnt
.
h
"
class
GrColorSpaceXform
:
public
SkRefCnt
{
public
:
GrColorSpaceXform
(
const
SkColorSpaceTransferFn
&
const
SkMatrix44
&
uint32_t
)
;
static
sk_sp
<
GrColorSpaceXform
>
Make
(
const
SkColorSpace
*
src
GrPixelConfig
srcConfig
const
SkColorSpace
*
dst
)
;
static
sk_sp
<
GrColorSpaceXform
>
MakeGamutXform
(
const
SkColorSpace
*
src
const
SkColorSpace
*
dst
)
{
auto
result
=
Make
(
src
kUnknown_GrPixelConfig
dst
)
;
SkASSERT
(
!
result
|
|
0
=
=
(
result
-
>
fFlags
&
~
kApplyGamutXform_Flag
)
)
;
return
result
;
}
const
SkColorSpaceTransferFn
&
transferFn
(
)
const
{
return
fSrcTransferFn
;
}
const
float
*
transferFnCoeffs
(
)
const
{
static_assert
(
0
=
=
offsetof
(
SkColorSpaceTransferFn
fG
)
"
TransferFn
layout
"
)
;
return
&
fSrcTransferFn
.
fG
;
}
const
SkMatrix44
&
gamutXform
(
)
const
{
return
fGamutXform
;
}
static
uint32_t
XformKey
(
const
GrColorSpaceXform
*
xform
)
{
return
SkToBool
(
xform
)
?
xform
-
>
fFlags
:
0
;
}
static
bool
Equals
(
const
GrColorSpaceXform
*
a
const
GrColorSpaceXform
*
b
)
;
GrColor4f
unclampedXform
(
const
GrColor4f
&
srcColor
)
;
GrColor4f
clampedXform
(
const
GrColor4f
&
srcColor
)
;
private
:
friend
class
GrGLSLColorSpaceXformHelper
;
enum
Flags
{
kApplyTransferFn_Flag
=
0x1
kApplyGamutXform_Flag
=
0x2
kApplyInverseSRGB_Flag
=
0x4
}
;
SkColorSpaceTransferFn
fSrcTransferFn
;
SkMatrix44
fGamutXform
;
uint32_t
fFlags
;
}
;
class
GrColorSpaceXformEffect
:
public
GrFragmentProcessor
{
public
:
static
std
:
:
unique_ptr
<
GrFragmentProcessor
>
Make
(
std
:
:
unique_ptr
<
GrFragmentProcessor
>
child
const
SkColorSpace
*
src
GrPixelConfig
srcConfig
const
SkColorSpace
*
dst
)
;
const
char
*
name
(
)
const
override
{
return
"
ColorSpaceXform
"
;
}
std
:
:
unique_ptr
<
GrFragmentProcessor
>
clone
(
)
const
override
;
const
GrColorSpaceXform
*
colorXform
(
)
const
{
return
fColorXform
.
get
(
)
;
}
private
:
GrColorSpaceXformEffect
(
std
:
:
unique_ptr
<
GrFragmentProcessor
>
child
sk_sp
<
GrColorSpaceXform
>
colorXform
)
;
static
OptimizationFlags
OptFlags
(
const
GrFragmentProcessor
*
child
)
;
GrGLSLFragmentProcessor
*
onCreateGLSLInstance
(
)
const
override
;
void
onGetGLSLProcessorKey
(
const
GrShaderCaps
&
GrProcessorKeyBuilder
*
)
const
override
;
bool
onIsEqual
(
const
GrFragmentProcessor
&
)
const
override
;
sk_sp
<
GrColorSpaceXform
>
fColorXform
;
typedef
GrFragmentProcessor
INHERITED
;
}
;
#
endif
