#
ifndef
GrMtlUtil_DEFINED
#
define
GrMtlUtil_DEFINED
#
import
<
Metal
/
Metal
.
h
>
#
include
"
include
/
gpu
/
GrBackendSurface
.
h
"
#
include
"
include
/
private
/
GrTypesPriv
.
h
"
#
include
"
src
/
sksl
/
ir
/
SkSLProgram
.
h
"
#
if
!
__has_feature
(
objc_arc
)
#
error
This
file
must
be
compiled
with
Arc
.
Use
-
fobjc
-
arc
flag
#
endif
#
if
defined
(
SK_BUILD_FOR_MAC
)
#
if
__MAC_OS_X_VERSION_MAX_ALLOWED
<
101400
#
error
Must
use
at
least
10
.
14
SDK
to
build
Metal
backend
for
MacOS
#
endif
#
else
#
if
__IPHONE_OS_VERSION_MAX_ALLOWED
<
120000
&
&
__TV_OS_VERSION_MAX_ALLOWED
<
120000
#
error
Must
use
at
least
12
.
00
SDK
to
build
Metal
backend
for
iOS
#
endif
#
endif
class
GrMtlGpu
;
class
GrSurface
;
bool
GrPixelConfigToMTLFormat
(
GrPixelConfig
config
MTLPixelFormat
*
format
)
;
SK_ALWAYS_INLINE
id
<
MTLTexture
>
GrGetMTLTexture
(
const
void
*
mtlTexture
)
{
return
(
__bridge
id
<
MTLTexture
>
)
mtlTexture
;
}
SK_ALWAYS_INLINE
const
void
*
GrGetPtrFromId
(
id
idObject
)
{
return
(
__bridge
const
void
*
)
idObject
;
}
SK_ALWAYS_INLINE
const
void
*
GrRetainPtrFromId
(
id
idObject
)
{
return
(
__bridge_retained
const
void
*
)
idObject
;
}
MTLTextureDescriptor
*
GrGetMTLTextureDescriptor
(
id
<
MTLTexture
>
mtlTexture
)
;
id
<
MTLLibrary
>
GrCompileMtlShaderLibrary
(
const
GrMtlGpu
*
gpu
const
char
*
shaderString
SkSL
:
:
Program
:
:
Kind
kind
const
SkSL
:
:
Program
:
:
Settings
&
settings
SkSL
:
:
Program
:
:
Inputs
*
outInputs
)
;
id
<
MTLLibrary
>
GrMtlNewLibraryWithSource
(
id
<
MTLDevice
>
NSString
*
mslCode
MTLCompileOptions
*
bool
*
timedout
)
;
id
<
MTLRenderPipelineState
>
GrMtlNewRenderPipelineStateWithDescriptor
(
id
<
MTLDevice
>
MTLRenderPipelineDescriptor
*
bool
*
timedout
)
;
id
<
MTLTexture
>
GrGetMTLTextureFromSurface
(
GrSurface
*
surface
)
;
static
inline
MTLPixelFormat
GrBackendFormatAsMTLPixelFormat
(
const
GrBackendFormat
&
format
)
{
return
static_cast
<
MTLPixelFormat
>
(
format
.
asMtlFormat
(
)
)
;
}
bool
GrMtlFormatIsCompressed
(
MTLPixelFormat
mtlFormat
)
;
bool
GrMtlFormatToCompressionType
(
MTLPixelFormat
mtlFormat
SkImage
:
:
CompressionType
*
compressionType
)
;
#
endif
