#
ifndef
GrImageTextureMaker_DEFINED
#
define
GrImageTextureMaker_DEFINED
#
include
"
GrTextureMaker
.
h
"
#
include
"
SkImage
.
h
"
class
SkImage_Lazy
;
class
SkImage_GpuYUVA
;
class
GrImageTextureMaker
:
public
GrTextureMaker
{
public
:
GrImageTextureMaker
(
GrRecordingContext
*
context
const
SkImage
*
client
SkImage
:
:
CachingHint
chint
bool
useDecal
=
false
)
;
protected
:
sk_sp
<
GrTextureProxy
>
refOriginalTextureProxy
(
bool
willBeMipped
AllowedTexGenType
onlyIfFast
)
override
;
void
makeCopyKey
(
const
CopyParams
&
stretch
GrUniqueKey
*
paramsCopyKey
)
override
;
void
didCacheCopy
(
const
GrUniqueKey
&
copyKey
uint32_t
contextUniqueID
)
override
{
}
SkAlphaType
alphaType
(
)
const
override
;
SkColorSpace
*
colorSpace
(
)
const
override
;
private
:
const
SkImage_Lazy
*
fImage
;
GrUniqueKey
fOriginalKey
;
SkImage
:
:
CachingHint
fCachingHint
;
typedef
GrTextureMaker
INHERITED
;
}
;
class
GrYUVAImageTextureMaker
:
public
GrTextureMaker
{
public
:
GrYUVAImageTextureMaker
(
GrContext
*
context
const
SkImage
*
client
bool
useDecal
=
false
)
;
protected
:
sk_sp
<
GrTextureProxy
>
refOriginalTextureProxy
(
bool
willBeMipped
AllowedTexGenType
onlyIfFast
)
override
;
void
makeCopyKey
(
const
CopyParams
&
stretch
GrUniqueKey
*
paramsCopyKey
)
override
;
void
didCacheCopy
(
const
GrUniqueKey
&
copyKey
uint32_t
contextUniqueID
)
override
{
}
std
:
:
unique_ptr
<
GrFragmentProcessor
>
createFragmentProcessor
(
const
SkMatrix
&
textureMatrix
const
SkRect
&
constraintRect
FilterConstraint
filterConstraint
bool
coordsLimitedToConstraintRect
const
GrSamplerState
:
:
Filter
*
filterOrNullForBicubic
)
override
;
SkAlphaType
alphaType
(
)
const
override
;
SkColorSpace
*
colorSpace
(
)
const
override
;
private
:
const
SkImage_GpuYUVA
*
fImage
;
GrUniqueKey
fOriginalKey
;
typedef
GrTextureMaker
INHERITED
;
}
;
#
endif
