#
ifndef
GrSingleTextureEffect_DEFINED
#
define
GrSingleTextureEffect_DEFINED
#
include
"
GrFragmentProcessor
.
h
"
#
include
"
GrCoordTransform
.
h
"
#
include
"
GrInvariantOutput
.
h
"
#
include
"
SkMatrix
.
h
"
class
GrTexture
;
class
GrSingleTextureEffect
:
public
GrFragmentProcessor
{
public
:
~
GrSingleTextureEffect
(
)
override
;
SkString
dumpInfo
(
)
const
override
{
SkString
str
;
str
.
appendf
(
"
Texture
:
%
d
"
fTextureAccess
.
getTexture
(
)
-
>
getUniqueID
(
)
)
;
return
str
;
}
protected
:
GrSingleTextureEffect
(
GrTexture
*
const
SkMatrix
&
GrCoordSet
=
kLocal_GrCoordSet
)
;
GrSingleTextureEffect
(
GrTexture
*
const
SkMatrix
&
GrTextureParams
:
:
FilterMode
filterMode
GrCoordSet
=
kLocal_GrCoordSet
)
;
GrSingleTextureEffect
(
GrTexture
*
const
SkMatrix
&
const
GrTextureParams
&
GrCoordSet
=
kLocal_GrCoordSet
)
;
void
updateInvariantOutputForModulation
(
GrInvariantOutput
*
inout
)
const
{
if
(
GrPixelConfigIsAlphaOnly
(
this
-
>
texture
(
0
)
-
>
config
(
)
)
)
{
inout
-
>
mulByUnknownSingleComponent
(
)
;
}
else
if
(
GrPixelConfigIsOpaque
(
this
-
>
texture
(
0
)
-
>
config
(
)
)
)
{
inout
-
>
mulByUnknownOpaqueFourComponents
(
)
;
}
else
{
inout
-
>
mulByUnknownFourComponents
(
)
;
}
}
private
:
GrCoordTransform
fCoordTransform
;
GrTextureAccess
fTextureAccess
;
typedef
GrFragmentProcessor
INHERITED
;
}
;
#
endif
