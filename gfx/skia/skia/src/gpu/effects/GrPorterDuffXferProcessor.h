#
ifndef
GrPorterDuffXferProcessor_DEFINED
#
define
GrPorterDuffXferProcessor_DEFINED
#
include
"
GrTypes
.
h
"
#
include
"
GrXferProcessor
.
h
"
#
include
"
SkBlendMode
.
h
"
#
if
defined
(
__GNUC__
)
#
pragma
GCC
diagnostic
push
#
pragma
GCC
diagnostic
ignored
"
-
Wnon
-
virtual
-
dtor
"
#
endif
#
if
defined
(
__clang__
)
#
pragma
clang
diagnostic
push
#
pragma
clang
diagnostic
ignored
"
-
Wnon
-
virtual
-
dtor
"
#
endif
class
GrPorterDuffXPFactory
:
public
GrXPFactory
{
public
:
static
const
GrXPFactory
*
Get
(
SkBlendMode
blendMode
)
;
static
sk_sp
<
const
GrXferProcessor
>
MakeSrcOverXferProcessor
(
const
GrProcessorAnalysisColor
&
GrProcessorAnalysisCoverage
bool
hasMixedSamples
const
GrCaps
&
)
;
static
sk_sp
<
const
GrXferProcessor
>
MakeNoCoverageXP
(
SkBlendMode
)
;
static
const
GrXferProcessor
&
SimpleSrcOverXP
(
)
;
static
AnalysisProperties
SrcOverAnalysisProperties
(
const
GrProcessorAnalysisColor
&
const
GrProcessorAnalysisCoverage
&
const
GrCaps
&
GrPixelConfigIsClamped
)
;
private
:
constexpr
GrPorterDuffXPFactory
(
SkBlendMode
)
;
sk_sp
<
const
GrXferProcessor
>
makeXferProcessor
(
const
GrProcessorAnalysisColor
&
GrProcessorAnalysisCoverage
bool
hasMixedSamples
const
GrCaps
&
GrPixelConfigIsClamped
)
const
override
;
AnalysisProperties
analysisProperties
(
const
GrProcessorAnalysisColor
&
const
GrProcessorAnalysisCoverage
&
const
GrCaps
&
GrPixelConfigIsClamped
)
const
override
;
GR_DECLARE_XP_FACTORY_TEST
static
void
TestGetXPOutputTypes
(
const
GrXferProcessor
*
int
*
outPrimary
int
*
outSecondary
)
;
SkBlendMode
fBlendMode
;
friend
class
GrPorterDuffTest
;
typedef
GrXPFactory
INHERITED
;
}
;
#
if
defined
(
__GNUC__
)
#
pragma
GCC
diagnostic
pop
#
endif
#
if
defined
(
__clang__
)
#
pragma
clang
diagnostic
pop
#
endif
#
endif
