#
ifndef
GrConvolutionEffect_DEFINED
#
define
GrConvolutionEffect_DEFINED
#
include
"
Gr1DKernelEffect
.
h
"
#
include
"
GrInvariantOutput
.
h
"
class
GrConvolutionEffect
:
public
Gr1DKernelEffect
{
public
:
static
GrFragmentProcessor
*
Create
(
GrTexture
*
tex
Direction
dir
int
halfWidth
const
float
*
kernel
bool
useBounds
float
bounds
[
2
]
)
{
return
new
GrConvolutionEffect
(
tex
dir
halfWidth
kernel
useBounds
bounds
)
;
}
static
GrFragmentProcessor
*
CreateGaussian
(
GrTexture
*
tex
Direction
dir
int
halfWidth
float
gaussianSigma
bool
useBounds
float
bounds
[
2
]
)
{
return
new
GrConvolutionEffect
(
tex
dir
halfWidth
gaussianSigma
useBounds
bounds
)
;
}
virtual
~
GrConvolutionEffect
(
)
;
const
float
*
kernel
(
)
const
{
return
fKernel
;
}
const
float
*
bounds
(
)
const
{
return
fBounds
;
}
bool
useBounds
(
)
const
{
return
fUseBounds
;
}
const
char
*
name
(
)
const
override
{
return
"
Convolution
"
;
}
enum
{
kMaxKernelRadius
=
12
kMaxKernelWidth
=
2
*
kMaxKernelRadius
+
1
}
;
protected
:
float
fKernel
[
kMaxKernelWidth
]
;
bool
fUseBounds
;
float
fBounds
[
2
]
;
private
:
GrConvolutionEffect
(
GrTexture
*
Direction
int
halfWidth
const
float
*
kernel
bool
useBounds
float
bounds
[
2
]
)
;
GrConvolutionEffect
(
GrTexture
*
Direction
int
halfWidth
float
gaussianSigma
bool
useBounds
float
bounds
[
2
]
)
;
GrGLSLFragmentProcessor
*
onCreateGLSLInstance
(
)
const
override
;
void
onGetGLSLProcessorKey
(
const
GrGLSLCaps
&
GrProcessorKeyBuilder
*
)
const
override
;
bool
onIsEqual
(
const
GrFragmentProcessor
&
)
const
override
;
void
onComputeInvariantOutput
(
GrInvariantOutput
*
inout
)
const
override
{
inout
-
>
mulByUnknownFourComponents
(
)
;
}
GR_DECLARE_FRAGMENT_PROCESSOR_TEST
;
typedef
Gr1DKernelEffect
INHERITED
;
}
;
#
endif
