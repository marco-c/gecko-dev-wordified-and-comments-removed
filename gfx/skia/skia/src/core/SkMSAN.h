#
ifndef
SkMSAN_DEFINED
#
define
SkMSAN_DEFINED
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
<
string
.
h
>
extern
"
C
"
{
void
__msan_check_mem_is_initialized
(
const
volatile
void
*
size_t
)
;
void
__msan_unpoison
(
const
volatile
void
*
size_t
)
;
}
static
inline
void
sk_msan_assert_initialized
(
const
void
*
begin
const
void
*
end
)
{
#
if
defined
(
__has_feature
)
#
if
__has_feature
(
memory_sanitizer
)
__msan_check_mem_is_initialized
(
begin
(
const
char
*
)
end
-
(
const
char
*
)
begin
)
;
#
endif
#
endif
}
static
inline
void
sk_msan_mark_initialized
(
const
void
*
begin
const
void
*
end
const
char
*
skbug
)
{
SkASSERT
(
skbug
&
&
0
!
=
strcmp
(
skbug
"
"
)
)
;
#
if
defined
(
__has_feature
)
#
if
__has_feature
(
memory_sanitizer
)
__msan_unpoison
(
begin
(
const
char
*
)
end
-
(
const
char
*
)
begin
)
;
#
endif
#
endif
}
#
endif
