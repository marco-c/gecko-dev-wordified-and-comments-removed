#
ifndef
SkPicturePlayback_DEFINED
#
define
SkPicturePlayback_DEFINED
#
include
"
SkPictureFlat
.
h
"
class
SkBitmap
;
class
SkCanvas
;
class
SkPaint
;
class
SkPictureData
;
class
SkPicturePlayback
:
SkNoncopyable
{
public
:
SkPicturePlayback
(
const
SkPictureData
*
data
)
:
fPictureData
(
data
)
fCurOffset
(
0
)
{
}
virtual
~
SkPicturePlayback
(
)
{
}
virtual
void
draw
(
SkCanvas
*
canvas
SkPicture
:
:
AbortCallback
*
)
;
size_t
curOpID
(
)
const
{
return
fCurOffset
;
}
void
resetOpID
(
)
{
fCurOffset
=
0
;
}
protected
:
const
SkPictureData
*
fPictureData
;
size_t
fCurOffset
;
void
handleOp
(
SkReader32
*
reader
DrawType
op
uint32_t
size
SkCanvas
*
canvas
const
SkMatrix
&
initialMatrix
)
;
static
DrawType
ReadOpAndSize
(
SkReader32
*
reader
uint32_t
*
size
)
;
class
AutoResetOpID
{
public
:
AutoResetOpID
(
SkPicturePlayback
*
playback
)
:
fPlayback
(
playback
)
{
}
~
AutoResetOpID
(
)
{
if
(
fPlayback
)
{
fPlayback
-
>
resetOpID
(
)
;
}
}
private
:
SkPicturePlayback
*
fPlayback
;
}
;
private
:
typedef
SkNoncopyable
INHERITED
;
}
;
#
endif
