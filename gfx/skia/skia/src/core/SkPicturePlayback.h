#
ifndef
SkPicturePlayback_DEFINED
#
define
SkPicturePlayback_DEFINED
#
include
"
include
/
core
/
SkM44
.
h
"
#
include
"
include
/
core
/
SkPicture
.
h
"
#
include
"
include
/
private
/
base
/
SkNoncopyable
.
h
"
#
include
"
src
/
core
/
SkPictureFlat
.
h
"
#
include
<
cstddef
>
#
include
<
cstdint
>
class
SkCanvas
;
class
SkPictureData
;
class
SkReadBuffer
;
class
SkPicturePlayback
final
:
SkNoncopyable
{
public
:
SkPicturePlayback
(
const
SkPictureData
*
data
)
:
fPictureData
(
data
)
fCurOffset
(
0
)
{
}
void
draw
(
SkCanvas
*
canvas
SkPicture
:
:
AbortCallback
*
SkReadBuffer
*
buffer
)
;
size_t
curOpID
(
)
const
{
return
fCurOffset
;
}
void
resetOpID
(
)
{
fCurOffset
=
0
;
}
private
:
const
SkPictureData
*
fPictureData
;
size_t
fCurOffset
;
void
handleOp
(
SkReadBuffer
*
reader
DrawType
op
uint32_t
size
SkCanvas
*
canvas
const
SkM44
&
initialMatrix
)
;
class
AutoResetOpID
{
public
:
AutoResetOpID
(
SkPicturePlayback
*
playback
)
:
fPlayback
(
playback
)
{
}
~
AutoResetOpID
(
)
{
if
(
fPlayback
)
{
fPlayback
-
>
resetOpID
(
)
;
}
}
private
:
SkPicturePlayback
*
fPlayback
;
}
;
using
INHERITED
=
SkNoncopyable
;
}
;
#
endif
