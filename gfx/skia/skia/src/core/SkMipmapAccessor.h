#
ifndef
SkMipmapAccessor_DEFINED
#
define
SkMipmapAccessor_DEFINED
#
include
"
include
/
core
/
SkBitmap
.
h
"
#
include
"
include
/
core
/
SkImage
.
h
"
#
include
"
include
/
core
/
SkMatrix
.
h
"
#
include
"
src
/
core
/
SkMipmap
.
h
"
#
include
<
tuple
>
class
SkImage_Base
;
class
SkMipmapAccessor
:
:
:
SkNoncopyable
{
public
:
static
SkMipmapAccessor
*
Make
(
SkArenaAlloc
*
const
SkImage
*
const
SkMatrix
&
inv
SkMipmapMode
)
;
std
:
:
pair
<
SkPixmap
SkMatrix
>
level
(
)
const
{
SkASSERT
(
fUpper
.
addr
(
)
!
=
nullptr
)
;
return
std
:
:
make_pair
(
fUpper
fUpperInv
)
;
}
std
:
:
pair
<
SkPixmap
SkMatrix
>
lowerLevel
(
)
const
{
SkASSERT
(
fLower
.
addr
(
)
!
=
nullptr
)
;
return
std
:
:
make_pair
(
fLower
fLowerInv
)
;
}
float
lowerWeight
(
)
const
{
return
fLowerWeight
;
}
private
:
SkPixmap
fUpper
fLower
;
float
fLowerWeight
;
SkMatrix
fUpperInv
fLowerInv
;
SkBitmap
fBaseStorage
;
sk_sp
<
const
SkMipmap
>
fCurrMip
;
public
:
SkMipmapAccessor
(
const
SkImage_Base
*
const
SkMatrix
&
inv
SkMipmapMode
requestedMode
)
;
}
;
#
endif
