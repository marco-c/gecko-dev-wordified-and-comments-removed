#
ifndef
SkImagePriv_DEFINED
#
define
SkImagePriv_DEFINED
#
include
"
SkImage
.
h
"
#
include
"
SkSmallAllocator
.
h
"
#
include
"
SkSurface
.
h
"
enum
SkCopyPixelsMode
{
kIfMutable_SkCopyPixelsMode
kAlways_SkCopyPixelsMode
kNever_SkCopyPixelsMode
}
;
enum
{
kSkBlitterContextSize
=
3332
}
;
typedef
SkSmallAllocator
<
3
kSkBlitterContextSize
>
SkTBlitterAllocator
;
sk_sp
<
SkShader
>
SkMakeBitmapShader
(
const
SkBitmap
&
src
SkShader
:
:
TileMode
SkShader
:
:
TileMode
const
SkMatrix
*
localMatrix
SkCopyPixelsMode
SkTBlitterAllocator
*
alloc
)
;
extern
sk_sp
<
SkImage
>
SkMakeImageFromPixelRef
(
const
SkImageInfo
&
SkPixelRef
*
const
SkIPoint
&
pixelRefOrigin
size_t
rowBytes
)
;
extern
sk_sp
<
SkImage
>
SkMakeImageFromRasterBitmap
(
const
SkBitmap
&
SkCopyPixelsMode
SkTBlitterAllocator
*
=
nullptr
)
;
extern
const
SkPixelRef
*
SkBitmapImageGetPixelRef
(
const
SkImage
*
rasterImage
)
;
extern
void
SkTextureImageApplyBudgetedDecision
(
SkImage
*
textureImage
)
;
extern
void
SkTextureImageSetTexture
(
SkImage
*
image
GrTexture
*
texture
)
;
void
SkImage_pinAsTexture
(
const
SkImage
*
GrContext
*
)
;
void
SkImage_unpinAsTexture
(
const
SkImage
*
GrContext
*
)
;
#
endif
