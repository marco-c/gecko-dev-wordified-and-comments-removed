#
include
"
SkPathPriv
.
h
"
#
include
"
SkRecords
.
h
"
namespace
SkRecords
{
ImmutableBitmap
:
:
ImmutableBitmap
(
const
SkBitmap
&
bitmap
)
{
if
(
bitmap
.
isImmutable
(
)
)
{
fBitmap
=
bitmap
;
}
else
{
bitmap
.
copyTo
(
&
fBitmap
)
;
}
fBitmap
.
setImmutable
(
)
;
}
PreCachedPath
:
:
PreCachedPath
(
const
SkPath
&
path
)
:
SkPath
(
path
)
{
this
-
>
updateBoundsCache
(
)
;
#
if
0
SkPathPriv
:
:
FirstDirection
junk
;
(
void
)
SkPathPriv
:
:
CheapComputeFirstDirection
(
*
this
&
junk
)
;
#
endif
}
TypedMatrix
:
:
TypedMatrix
(
const
SkMatrix
&
matrix
)
:
SkMatrix
(
matrix
)
{
(
void
)
this
-
>
getType
(
)
;
}
}
