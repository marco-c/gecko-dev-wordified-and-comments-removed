#
ifndef
SkColorSpaceXform_DEFINED
#
define
SkColorSpaceXform_DEFINED
#
include
"
SkColorSpace
.
h
"
#
include
"
SkColorSpace_Base
.
h
"
#
include
"
SkImageInfo
.
h
"
class
SkColorSpaceXform
:
SkNoncopyable
{
public
:
static
std
:
:
unique_ptr
<
SkColorSpaceXform
>
New
(
SkColorSpace
*
srcSpace
SkColorSpace
*
dstSpace
)
;
enum
ColorFormat
:
uint8_t
{
kRGBA_8888_ColorFormat
kBGRA_8888_ColorFormat
kRGBA_F16_ColorFormat
kRGBA_F32_ColorFormat
}
;
virtual
void
apply
(
void
*
dst
const
uint32_t
*
src
int
len
ColorFormat
dstColorFormat
ColorFormat
srcColorFormat
SkAlphaType
alphaType
)
const
=
0
;
virtual
~
SkColorSpaceXform
(
)
{
}
}
;
enum
SrcGamma
{
kLinear_SrcGamma
kTable_SrcGamma
}
;
enum
DstGamma
{
kLinear_DstGamma
kSRGB_DstGamma
k2Dot2_DstGamma
kTable_DstGamma
}
;
enum
ColorSpaceMatch
{
kNone_ColorSpaceMatch
kGamut_ColorSpaceMatch
kFull_ColorSpaceMatch
}
;
template
<
SrcGamma
kSrc
DstGamma
kDst
ColorSpaceMatch
kCSM
>
class
SkColorSpaceXform_Base
:
public
SkColorSpaceXform
{
public
:
void
apply
(
void
*
dst
const
uint32_t
*
src
int
len
ColorFormat
dstColorFormat
ColorFormat
srcColorFormat
SkAlphaType
alphaType
)
const
override
;
static
constexpr
int
kDstGammaTableSize
=
1024
;
private
:
SkColorSpaceXform_Base
(
SkColorSpace
*
srcSpace
const
SkMatrix44
&
srcToDst
SkColorSpace
*
dstSpace
)
;
sk_sp
<
SkColorLookUpTable
>
fColorLUT
;
const
float
*
fSrcGammaTables
[
3
]
;
const
uint8_t
*
fDstGammaTables
[
3
]
;
SkAutoMalloc
fStorage
;
float
fSrcToDst
[
16
]
;
friend
class
SkColorSpaceXform
;
friend
std
:
:
unique_ptr
<
SkColorSpaceXform
>
SlowIdentityXform
(
SkColorSpace
*
space
)
;
}
;
std
:
:
unique_ptr
<
SkColorSpaceXform
>
SlowIdentityXform
(
SkColorSpace
*
space
)
;
#
endif
