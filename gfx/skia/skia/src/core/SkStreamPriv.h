#
ifndef
SkStreamPriv_DEFINED
#
define
SkStreamPriv_DEFINED
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
core
/
SkStream
.
h
"
#
include
"
src
/
base
/
SkEndian
.
h
"
#
include
<
cstdint
>
class
SkData
;
sk_sp
<
SkData
>
SkCopyStreamToData
(
SkStream
*
stream
)
;
bool
SkStreamCopy
(
SkWStream
*
out
SkStream
*
input
)
;
class
SkDebugfStream
final
:
public
SkWStream
{
public
:
bool
write
(
const
void
*
buffer
size_t
size
)
override
;
size_t
bytesWritten
(
)
const
override
;
private
:
size_t
fBytesWritten
=
0
;
}
;
inline
bool
SkWStreamWriteU16BE
(
SkWStream
*
s
uint16_t
value
)
{
value
=
SkEndian_SwapBE16
(
value
)
;
return
s
-
>
write
(
&
value
sizeof
(
value
)
)
;
}
inline
bool
SkWStreamWriteU32BE
(
SkWStream
*
s
uint32_t
value
)
{
value
=
SkEndian_SwapBE32
(
value
)
;
return
s
-
>
write
(
&
value
sizeof
(
value
)
)
;
}
inline
bool
SkWStreamWriteS32BE
(
SkWStream
*
s
int32_t
value
)
{
value
=
SkEndian_SwapBE32
(
value
)
;
return
s
-
>
write
(
&
value
sizeof
(
value
)
)
;
}
bool
StreamRemainingLengthIsBelow
(
SkStream
*
stream
size_t
len
)
;
#
endif
