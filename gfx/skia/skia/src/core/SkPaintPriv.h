#
ifndef
SkPaintPriv_DEFINED
#
define
SkPaintPriv_DEFINED
#
include
"
include
/
core
/
SkPaint
.
h
"
class
SkFont
;
class
SkReadBuffer
;
class
SkWriteBuffer
;
enum
SkReadPaintResult
{
kFailed_ReadPaint
kSuccess_JustPaint
kSuccess_PaintAndFont
}
;
class
SkPaintPriv
{
public
:
enum
ShaderOverrideOpacity
{
kNone_ShaderOverrideOpacity
kOpaque_ShaderOverrideOpacity
kNotOpaque_ShaderOverrideOpacity
}
;
static
bool
Overwrites
(
const
SkPaint
*
paint
ShaderOverrideOpacity
)
;
static
bool
ShouldDither
(
const
SkPaint
&
SkColorType
)
;
static
SkColor
ComputeLuminanceColor
(
const
SkPaint
&
)
;
static
void
Flatten
(
const
SkPaint
&
paint
SkWriteBuffer
&
buffer
)
;
static
SkReadPaintResult
Unflatten
(
SkPaint
*
paint
SkReadBuffer
&
buffer
SkFont
*
font
)
;
private
:
static
SkReadPaintResult
Unflatten_PreV68
(
SkPaint
*
paint
SkReadBuffer
&
buffer
SkFont
*
)
;
}
;
#
endif
