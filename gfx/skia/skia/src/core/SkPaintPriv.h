#
ifndef
SkPaintPriv_DEFINED
#
define
SkPaintPriv_DEFINED
#
include
"
SkImageInfo
.
h
"
#
include
"
SkPaint
.
h
"
#
include
"
SkMatrix
.
h
"
class
SkBitmap
;
class
SkImage
;
class
SkPaintPriv
{
public
:
enum
ShaderOverrideOpacity
{
kNone_ShaderOverrideOpacity
kOpaque_ShaderOverrideOpacity
kNotOpaque_ShaderOverrideOpacity
}
;
static
bool
Overwrites
(
const
SkPaint
*
paint
ShaderOverrideOpacity
)
;
static
bool
Overwrites
(
const
SkPaint
&
paint
)
{
return
Overwrites
(
&
paint
kNone_ShaderOverrideOpacity
)
;
}
static
bool
Overwrites
(
const
SkBitmap
&
const
SkPaint
*
paint
)
;
static
bool
Overwrites
(
const
SkImage
*
const
SkPaint
*
paint
)
;
static
void
ScaleFontMetrics
(
SkPaint
:
:
FontMetrics
*
SkScalar
)
;
static
void
MakeTextMatrix
(
SkMatrix
*
matrix
SkScalar
size
SkScalar
scaleX
SkScalar
skewX
)
{
matrix
-
>
setScale
(
size
*
scaleX
size
)
;
if
(
skewX
)
{
matrix
-
>
postSkew
(
skewX
0
)
;
}
}
static
void
MakeTextMatrix
(
SkMatrix
*
matrix
const
SkPaint
&
paint
)
{
MakeTextMatrix
(
matrix
paint
.
getTextSize
(
)
paint
.
getTextScaleX
(
)
paint
.
getTextSkewX
(
)
)
;
}
static
bool
ShouldDither
(
const
SkPaint
&
SkColorType
)
;
static
int
ValidCountText
(
const
void
*
text
size_t
length
SkPaint
:
:
TextEncoding
)
;
}
;
#
endif
