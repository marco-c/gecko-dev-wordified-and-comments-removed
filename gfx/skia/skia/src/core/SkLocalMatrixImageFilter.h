#
ifndef
SkLocalMatrixImageFilter_DEFINED
#
define
SkLocalMatrixImageFilter_DEFINED
#
include
"
SkImageFilter
.
h
"
#
include
"
SkReadBuffer
.
h
"
#
include
"
SkString
.
h
"
class
SkLocalMatrixImageFilter
:
public
SkImageFilter
{
public
:
static
SkImageFilter
*
Create
(
const
SkMatrix
&
localM
SkImageFilter
*
input
)
;
SK_TO_STRING_OVERRIDE
(
)
SK_DECLARE_PUBLIC_FLATTENABLE_DESERIALIZATION_PROCS
(
SkLocalMatrixImageFilter
)
protected
:
void
flatten
(
SkWriteBuffer
&
)
const
override
;
bool
onFilterImage
(
Proxy
*
const
SkBitmap
&
src
const
Context
&
SkBitmap
*
result
SkIPoint
*
offset
)
const
override
;
bool
onFilterBounds
(
const
SkIRect
&
src
const
SkMatrix
&
SkIRect
*
dst
)
const
override
;
private
:
SkLocalMatrixImageFilter
(
const
SkMatrix
&
localM
SkImageFilter
*
input
)
;
SkMatrix
fLocalM
;
typedef
SkImageFilter
INHERITED
;
}
;
#
endif
