#
ifndef
SkAutoBlitterChoose_DEFINED
#
define
SkAutoBlitterChoose_DEFINED
#
include
"
include
/
private
/
base
/
SkMacros
.
h
"
#
include
"
src
/
base
/
SkArenaAlloc
.
h
"
#
include
"
src
/
core
/
SkBlitter
.
h
"
#
include
"
src
/
core
/
SkDrawBase
.
h
"
#
include
"
src
/
core
/
SkRasterClip
.
h
"
#
include
"
src
/
core
/
SkSurfacePriv
.
h
"
class
SkMatrix
;
class
SkPaint
;
class
SkPixmap
;
class
SkAutoBlitterChoose
:
SkNoncopyable
{
public
:
SkAutoBlitterChoose
(
)
{
}
SkAutoBlitterChoose
(
const
SkDrawBase
&
draw
const
SkMatrix
*
ctm
const
SkPaint
&
paint
SkDrawCoverage
drawCoverage
=
SkDrawCoverage
:
:
kNo
)
{
this
-
>
choose
(
draw
ctm
paint
drawCoverage
)
;
}
SkBlitter
*
operator
-
>
(
)
{
return
fBlitter
;
}
SkBlitter
*
get
(
)
const
{
return
fBlitter
;
}
SkBlitter
*
choose
(
const
SkDrawBase
&
draw
const
SkMatrix
*
ctm
const
SkPaint
&
paint
SkDrawCoverage
drawCoverage
=
SkDrawCoverage
:
:
kNo
)
{
SkASSERT
(
!
fBlitter
)
;
fBlitter
=
draw
.
fBlitterChooser
(
draw
.
fDst
ctm
?
*
ctm
:
*
draw
.
fCTM
paint
&
fAlloc
drawCoverage
draw
.
fRC
-
>
clipShader
(
)
SkSurfacePropsCopyOrDefault
(
draw
.
fProps
)
)
;
return
fBlitter
;
}
private
:
SkBlitter
*
fBlitter
=
nullptr
;
static
constexpr
size_t
kStackMemory
=
2736
;
SkSTArenaAlloc
<
kStackMemory
>
fAlloc
;
}
;
#
endif
