#
ifndef
SkOpts_DEFINED
#
define
SkOpts_DEFINED
#
include
"
SkConvolver
.
h
"
#
include
"
SkRasterPipeline
.
h
"
#
include
"
SkTypes
.
h
"
#
include
"
SkXfermodePriv
.
h
"
struct
ProcCoeff
;
namespace
SkOpts
{
void
Init
(
)
;
extern
SkXfermode
*
(
*
create_xfermode
)
(
SkBlendMode
)
;
typedef
void
(
*
Morph
)
(
const
SkPMColor
*
SkPMColor
*
int
int
int
int
int
)
;
extern
Morph
dilate_x
dilate_y
erode_x
erode_y
;
extern
void
(
*
blit_mask_d32_a8
)
(
SkPMColor
*
size_t
const
SkAlpha
*
size_t
SkColor
int
int
)
;
extern
void
(
*
blit_row_color32
)
(
SkPMColor
*
const
SkPMColor
*
int
SkPMColor
)
;
extern
void
(
*
blit_row_s32a_opaque
)
(
SkPMColor
*
const
SkPMColor
*
int
U8CPU
)
;
typedef
void
(
*
Swizzle_8888_u32
)
(
uint32_t
*
const
uint32_t
*
int
)
;
extern
Swizzle_8888_u32
RGBA_to_BGRA
RGBA_to_rgbA
RGBA_to_bgrA
inverted_CMYK_to_RGB1
inverted_CMYK_to_BGR1
;
typedef
void
(
*
Swizzle_8888_u8
)
(
uint32_t
*
const
uint8_t
*
int
)
;
extern
Swizzle_8888_u8
RGB_to_RGB1
RGB_to_BGR1
gray_to_RGB1
grayA_to_RGBA
grayA_to_rgbA
;
extern
void
(
*
memset16
)
(
uint16_t
[
]
uint16_t
int
)
;
extern
void
SK_API
(
*
memset32
)
(
uint32_t
[
]
uint32_t
int
)
;
extern
void
(
*
memset64
)
(
uint64_t
[
]
uint64_t
int
)
;
extern
uint32_t
(
*
hash_fn
)
(
const
void
*
size_t
uint32_t
seed
)
;
static
inline
uint32_t
hash
(
const
void
*
data
size_t
bytes
uint32_t
seed
=
0
)
{
return
hash_fn
(
data
bytes
seed
)
;
}
#
define
M
(
st
)
+
1
using
StageFn
=
void
(
*
)
(
void
)
;
extern
StageFn
stages_highp
[
SK_RASTER_PIPELINE_STAGES
(
M
)
]
just_return_highp
;
extern
StageFn
stages_lowp
[
SK_RASTER_PIPELINE_STAGES
(
M
)
]
just_return_lowp
;
extern
void
(
*
start_pipeline_highp
)
(
size_t
size_t
size_t
size_t
void
*
*
)
;
extern
void
(
*
start_pipeline_lowp
)
(
size_t
size_t
size_t
size_t
void
*
*
)
;
#
undef
M
extern
void
(
*
convolve_vertically
)
(
const
SkConvolutionFilter1D
:
:
ConvolutionFixed
*
filter_values
int
filter_length
unsigned
char
*
const
*
source_data_rows
int
pixel_width
unsigned
char
*
out_row
bool
has_alpha
)
;
extern
void
(
*
convolve_4_rows_horizontally
)
(
const
unsigned
char
*
src_data
[
4
]
const
SkConvolutionFilter1D
&
filter
unsigned
char
*
out_row
[
4
]
size_t
out_row_bytes
)
;
extern
void
(
*
convolve_horizontally
)
(
const
unsigned
char
*
src_data
const
SkConvolutionFilter1D
&
filter
unsigned
char
*
out_row
bool
has_alpha
)
;
}
#
endif
