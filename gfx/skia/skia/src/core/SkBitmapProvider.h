#
ifndef
SkBitmapProvider_DEFINED
#
define
SkBitmapProvider_DEFINED
#
include
"
SkImage
.
h
"
#
include
"
SkBitmapCache
.
h
"
class
SkBitmapProvider
{
public
:
explicit
SkBitmapProvider
(
const
SkImage
*
img
SkColorSpace
*
dstColorSpace
)
:
fImage
(
img
)
fDstColorSpace
(
dstColorSpace
)
{
SkASSERT
(
img
)
;
}
SkBitmapProvider
(
const
SkBitmapProvider
&
other
)
:
fImage
(
other
.
fImage
)
fDstColorSpace
(
other
.
fDstColorSpace
)
{
}
int
width
(
)
const
;
int
height
(
)
const
;
uint32_t
getID
(
)
const
;
SkColorSpace
*
dstColorSpace
(
)
const
{
return
fDstColorSpace
;
}
SkImageInfo
info
(
)
const
;
bool
isVolatile
(
)
const
;
SkBitmapCacheDesc
makeCacheDesc
(
int
w
int
h
)
const
;
SkBitmapCacheDesc
makeCacheDesc
(
)
const
;
void
notifyAddedToCache
(
)
const
;
bool
asBitmap
(
SkBitmap
*
)
const
;
private
:
void
*
operator
new
(
size_t
)
=
delete
;
void
*
operator
new
(
size_t
void
*
)
=
delete
;
const
SkImage
*
fImage
;
SkColorSpace
*
fDstColorSpace
;
}
;
#
endif
