#
ifndef
SkMatrixImageFilter_DEFINED
#
define
SkMatrixImageFilter_DEFINED
#
include
"
SkImageFilter
.
h
"
#
include
"
SkScalar
.
h
"
#
include
"
SkSize
.
h
"
#
include
"
SkPoint
.
h
"
#
include
"
SkPaint
.
h
"
class
SK_API
SkMatrixImageFilter
:
public
SkImageFilter
{
public
:
static
SkMatrixImageFilter
*
Create
(
const
SkMatrix
&
transform
SkFilterQuality
SkImageFilter
*
input
=
nullptr
)
;
virtual
~
SkMatrixImageFilter
(
)
;
void
computeFastBounds
(
const
SkRect
&
SkRect
*
)
const
override
;
SK_TO_STRING_OVERRIDE
(
)
SK_DECLARE_PUBLIC_FLATTENABLE_DESERIALIZATION_PROCS
(
SkMatrixImageFilter
)
protected
:
SkMatrixImageFilter
(
const
SkMatrix
&
transform
SkFilterQuality
SkImageFilter
*
input
)
;
void
flatten
(
SkWriteBuffer
&
)
const
override
;
virtual
bool
onFilterImage
(
Proxy
*
const
SkBitmap
&
src
const
Context
&
SkBitmap
*
result
SkIPoint
*
loc
)
const
override
;
virtual
void
onFilterNodeBounds
(
const
SkIRect
&
src
const
SkMatrix
&
SkIRect
*
dst
MapDirection
)
const
override
;
private
:
SkMatrix
fTransform
;
SkFilterQuality
fFilterQuality
;
typedef
SkImageFilter
INHERITED
;
}
;
#
endif
