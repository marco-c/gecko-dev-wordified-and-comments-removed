#
ifndef
SkXfermodePriv_DEFINED
#
define
SkXfermodePriv_DEFINED
#
include
"
include
/
core
/
SkBlendMode
.
h
"
#
include
"
include
/
core
/
SkColor
.
h
"
#
include
"
include
/
core
/
SkRefCnt
.
h
"
class
GrFragmentProcessor
;
class
GrTexture
;
class
GrXPFactory
;
class
SkRasterPipeline
;
class
SkString
;
class
SkXfermode
:
public
SkRefCnt
{
public
:
virtual
void
xfer32
(
SkPMColor
dst
[
]
const
SkPMColor
src
[
]
int
count
const
SkAlpha
aa
[
]
)
const
=
0
;
static
sk_sp
<
SkXfermode
>
Make
(
SkBlendMode
)
;
static
SkXfermode
*
Peek
(
SkBlendMode
mode
)
{
sk_sp
<
SkXfermode
>
xfer
=
Make
(
mode
)
;
if
(
!
xfer
)
{
SkASSERT
(
SkBlendMode
:
:
kSrcOver
=
=
mode
)
;
return
nullptr
;
}
SkASSERT
(
!
xfer
-
>
unique
(
)
)
;
return
xfer
.
get
(
)
;
}
enum
SrcColorOpacity
{
kOpaque_SrcColorOpacity
=
0
kTransparentBlack_SrcColorOpacity
=
1
kTransparentAlpha_SrcColorOpacity
=
2
kUnknown_SrcColorOpacity
=
3
}
;
static
bool
IsOpaque
(
SkBlendMode
SrcColorOpacity
)
;
protected
:
SkXfermode
(
)
{
}
}
;
#
endif
