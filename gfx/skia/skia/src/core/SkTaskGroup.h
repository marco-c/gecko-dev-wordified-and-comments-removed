#
ifndef
SkTaskGroup_DEFINED
#
define
SkTaskGroup_DEFINED
#
include
"
SkExecutor
.
h
"
#
include
"
SkTypes
.
h
"
#
include
<
atomic
>
#
include
<
functional
>
class
SkTaskGroup
:
SkNoncopyable
{
public
:
explicit
SkTaskGroup
(
SkExecutor
&
executor
=
SkExecutor
:
:
GetDefault
(
)
)
;
~
SkTaskGroup
(
)
{
this
-
>
wait
(
)
;
}
void
add
(
std
:
:
function
<
void
(
void
)
>
fn
)
;
void
batch
(
int
N
std
:
:
function
<
void
(
int
)
>
fn
)
;
void
wait
(
)
;
struct
Enabler
{
explicit
Enabler
(
int
threads
=
-
1
)
;
std
:
:
unique_ptr
<
SkExecutor
>
fThreadPool
;
}
;
private
:
std
:
:
atomic
<
int32_t
>
fPending
;
SkExecutor
&
fExecutor
;
}
;
#
endif
