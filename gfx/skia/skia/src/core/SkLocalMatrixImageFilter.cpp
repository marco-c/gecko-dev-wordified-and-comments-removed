#
include
"
src
/
core
/
SkLocalMatrixImageFilter
.
h
"
#
include
"
include
/
core
/
SkImageFilter
.
h
"
#
include
"
src
/
core
/
SkReadBuffer
.
h
"
#
include
"
src
/
core
/
SkWriteBuffer
.
h
"
sk_sp
<
SkImageFilter
>
SkLocalMatrixImageFilter
:
:
Make
(
const
SkMatrix
&
localMatrix
sk_sp
<
SkImageFilter
>
input
)
{
if
(
!
input
)
{
return
nullptr
;
}
if
(
localMatrix
.
isIdentity
(
)
)
{
return
input
;
}
MatrixCapability
inputCapability
=
as_IFB
(
input
)
-
>
getCTMCapability
(
)
;
if
(
(
inputCapability
=
=
MatrixCapability
:
:
kTranslate
&
&
!
localMatrix
.
isTranslate
(
)
)
|
|
(
inputCapability
=
=
MatrixCapability
:
:
kScaleTranslate
&
&
!
localMatrix
.
isScaleTranslate
(
)
)
)
{
return
nullptr
;
}
SkMatrix
invLocal
;
if
(
!
localMatrix
.
invert
(
&
invLocal
)
)
{
return
nullptr
;
}
return
sk_sp
<
SkImageFilter
>
(
new
SkLocalMatrixImageFilter
(
localMatrix
invLocal
&
input
)
)
;
}
sk_sp
<
SkFlattenable
>
SkLocalMatrixImageFilter
:
:
CreateProc
(
SkReadBuffer
&
buffer
)
{
SK_IMAGEFILTER_UNFLATTEN_COMMON
(
common
1
)
;
SkMatrix
lm
;
buffer
.
readMatrix
(
&
lm
)
;
return
SkLocalMatrixImageFilter
:
:
Make
(
lm
common
.
getInput
(
0
)
)
;
}
void
SkLocalMatrixImageFilter
:
:
flatten
(
SkWriteBuffer
&
buffer
)
const
{
this
-
>
SkImageFilter_Base
:
:
flatten
(
buffer
)
;
buffer
.
writeMatrix
(
fLocalMatrix
)
;
}
skif
:
:
Mapping
SkLocalMatrixImageFilter
:
:
localMapping
(
const
skif
:
:
Mapping
&
mapping
)
const
{
skif
:
:
Mapping
localMapping
=
mapping
;
localMapping
.
concatLocal
(
fLocalMatrix
)
;
return
localMapping
;
}
skif
:
:
FilterResult
SkLocalMatrixImageFilter
:
:
onFilterImage
(
const
skif
:
:
Context
&
ctx
)
const
{
skif
:
:
Mapping
localMapping
=
this
-
>
localMapping
(
ctx
.
mapping
(
)
)
;
return
this
-
>
getChildOutput
(
0
ctx
.
withNewMapping
(
localMapping
)
)
;
}
skif
:
:
LayerSpace
<
SkIRect
>
SkLocalMatrixImageFilter
:
:
onGetInputLayerBounds
(
const
skif
:
:
Mapping
&
mapping
const
skif
:
:
LayerSpace
<
SkIRect
>
&
desiredOutput
std
:
:
optional
<
skif
:
:
LayerSpace
<
SkIRect
>
>
contentBounds
)
const
{
return
this
-
>
getChildInputLayerBounds
(
0
this
-
>
localMapping
(
mapping
)
desiredOutput
contentBounds
)
;
}
std
:
:
optional
<
skif
:
:
LayerSpace
<
SkIRect
>
>
SkLocalMatrixImageFilter
:
:
onGetOutputLayerBounds
(
const
skif
:
:
Mapping
&
mapping
std
:
:
optional
<
skif
:
:
LayerSpace
<
SkIRect
>
>
contentBounds
)
const
{
return
this
-
>
getChildOutputLayerBounds
(
0
this
-
>
localMapping
(
mapping
)
contentBounds
)
;
}
SkRect
SkLocalMatrixImageFilter
:
:
computeFastBounds
(
const
SkRect
&
bounds
)
const
{
SkRect
localBounds
=
fInvLocalMatrix
.
mapRect
(
bounds
)
;
return
fLocalMatrix
.
mapRect
(
this
-
>
getInput
(
0
)
-
>
computeFastBounds
(
localBounds
)
)
;
}
