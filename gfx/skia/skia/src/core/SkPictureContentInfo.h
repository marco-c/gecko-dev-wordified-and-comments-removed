#
ifndef
SkPictureContentInfo_DEFINED
#
define
SkPictureContentInfo_DEFINED
#
include
"
SkTDArray
.
h
"
class
GrContext
;
class
SkPictureContentInfo
{
public
:
SkPictureContentInfo
(
)
{
this
-
>
reset
(
)
;
}
SkPictureContentInfo
(
const
SkPictureContentInfo
&
src
)
{
this
-
>
set
(
src
)
;
}
int
numOperations
(
)
const
{
return
fNumOperations
;
}
bool
hasText
(
)
const
{
return
fNumTexts
>
0
;
}
int
numLayers
(
)
const
{
return
fNumLayers
;
}
int
numInteriorLayers
(
)
const
{
return
fNumInteriorLayers
;
}
int
numLeafLayers
(
)
const
{
return
fNumLeafLayers
;
}
bool
suitableForGpuRasterization
(
GrContext
*
context
const
char
*
*
reason
int
sampleCount
)
const
;
void
addOperation
(
)
{
+
+
fNumOperations
;
}
void
onDrawPoints
(
size_t
count
const
SkPaint
&
paint
)
;
void
onDrawPath
(
const
SkPath
&
path
const
SkPaint
&
paint
)
;
void
onAddPaintPtr
(
const
SkPaint
*
paint
)
;
void
onDrawText
(
)
{
+
+
fNumTexts
;
}
void
onSaveLayer
(
)
;
void
onSave
(
)
;
void
onRestore
(
)
;
void
rescindLastSave
(
)
;
void
rescindLastSaveLayer
(
)
;
void
set
(
const
SkPictureContentInfo
&
src
)
;
void
reset
(
)
;
void
swap
(
SkPictureContentInfo
*
other
)
;
private
:
int
fNumOperations
;
int
fNumTexts
;
int
fNumPaintWithPathEffectUses
;
int
fNumFastPathDashEffects
;
int
fNumAAConcavePaths
;
int
fNumAAHairlineConcavePaths
;
int
fNumAADFEligibleConcavePaths
;
int
fNumLayers
;
int
fNumInteriorLayers
;
int
fNumLeafLayers
;
enum
Flags
{
kSave_Flag
=
0x1
kSaveLayer_Flag
=
0x2
kContainedSaveLayer_Flag
=
0x4
}
;
SkTDArray
<
uint32_t
>
fSaveStack
;
}
;
#
endif
