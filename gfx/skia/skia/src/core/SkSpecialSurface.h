#
ifndef
SkSpecialSurface_DEFINED
#
define
SkSpecialSurface_DEFINED
#
include
"
SkRefCnt
.
h
"
#
include
"
SkSurfaceProps
.
h
"
class
GrContext
;
struct
GrSurfaceDesc
;
class
SkCanvas
;
struct
SkImageInfo
;
class
SkSpecialImage
;
class
SkSpecialSurface
:
public
SkRefCnt
{
public
:
const
SkSurfaceProps
&
props
(
)
const
{
return
fProps
;
}
int
width
(
)
const
{
return
fSubset
.
width
(
)
;
}
int
height
(
)
const
{
return
fSubset
.
height
(
)
;
}
SkCanvas
*
getCanvas
(
)
;
sk_sp
<
SkSpecialImage
>
makeImageSnapshot
(
)
;
#
if
SK_SUPPORT_GPU
static
sk_sp
<
SkSpecialSurface
>
MakeRenderTarget
(
GrContext
*
int
width
int
height
GrPixelConfig
config
sk_sp
<
SkColorSpace
>
colorSpace
)
;
#
endif
static
sk_sp
<
SkSpecialSurface
>
MakeFromBitmap
(
const
SkIRect
&
subset
SkBitmap
&
bm
const
SkSurfaceProps
*
=
nullptr
)
;
static
sk_sp
<
SkSpecialSurface
>
MakeRaster
(
const
SkImageInfo
&
const
SkSurfaceProps
*
=
nullptr
)
;
protected
:
SkSpecialSurface
(
const
SkIRect
&
subset
const
SkSurfaceProps
*
)
;
friend
class
TestingSpecialSurfaceAccess
;
const
SkIRect
&
subset
(
)
const
{
return
fSubset
;
}
private
:
const
SkSurfaceProps
fProps
;
const
SkIRect
fSubset
;
typedef
SkRefCnt
INHERITED
;
}
;
#
endif
