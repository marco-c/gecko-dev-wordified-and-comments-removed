#
ifndef
SkPixmapPriv_DEFINED
#
define
SkPixmapPriv_DEFINED
#
include
"
SkPixmap
.
h
"
#
include
"
SkEncodedOrigin
.
h
"
#
include
"
SkAutoPixmapStorage
.
h
"
class
SkPixmapPriv
{
public
:
static
bool
Orient
(
const
SkPixmap
&
dst
const
SkPixmap
&
src
SkEncodedOrigin
)
;
static
bool
ShouldSwapWidthHeight
(
SkEncodedOrigin
o
)
;
static
SkImageInfo
SwapWidthHeight
(
const
SkImageInfo
&
info
)
;
static
bool
Orient
(
const
SkPixmap
&
dst
SkEncodedOrigin
origin
std
:
:
function
<
bool
(
const
SkPixmap
&
)
>
decode
)
{
SkAutoPixmapStorage
storage
;
const
SkPixmap
*
tmp
=
&
dst
;
if
(
origin
!
=
kTopLeft_SkEncodedOrigin
)
{
auto
info
=
dst
.
info
(
)
;
if
(
ShouldSwapWidthHeight
(
origin
)
)
{
info
=
SwapWidthHeight
(
info
)
;
}
if
(
!
storage
.
tryAlloc
(
info
)
)
{
return
false
;
}
tmp
=
&
storage
;
}
if
(
!
decode
(
*
tmp
)
)
{
return
false
;
}
if
(
tmp
!
=
&
dst
)
{
return
Orient
(
dst
*
tmp
origin
)
;
}
return
true
;
}
static
void
ResetPixmapKeepInfo
(
SkPixmap
*
pm
const
void
*
address
size_t
rowBytes
)
{
pm
-
>
fRowBytes
=
rowBytes
;
pm
-
>
fPixels
=
address
;
}
}
;
#
endif
