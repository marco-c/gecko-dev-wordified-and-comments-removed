#
include
"
SkPathEffect
.
h
"
#
include
"
SkRecords
.
h
"
#
include
"
SkTLogic
.
h
"
struct
SkBitmapHunter
{
static
const
SkPaint
*
AsPtr
(
const
SkPaint
&
p
)
{
return
&
p
;
}
static
const
SkPaint
*
AsPtr
(
const
SkRecords
:
:
Optional
<
SkPaint
>
&
p
)
{
return
p
;
}
bool
operator
(
)
(
const
SkRecords
:
:
DrawPicture
&
op
)
{
return
op
.
picture
-
>
willPlayBackBitmaps
(
)
;
}
bool
operator
(
)
(
const
SkRecords
:
:
DrawDrawable
&
)
{
return
false
;
}
template
<
typename
T
>
bool
operator
(
)
(
const
T
&
op
)
{
return
CheckBitmap
(
op
)
;
}
template
<
typename
T
>
static
SK_WHEN
(
T
:
:
kTags
&
SkRecords
:
:
kHasImage_Tag
bool
)
CheckBitmap
(
const
T
&
)
{
return
true
;
}
template
<
typename
T
>
static
SK_WHEN
(
!
(
T
:
:
kTags
&
SkRecords
:
:
kHasImage_Tag
)
bool
)
CheckBitmap
(
const
T
&
op
)
{
return
CheckPaint
(
op
)
;
}
template
<
typename
T
>
static
SK_WHEN
(
T
:
:
kTags
&
SkRecords
:
:
kHasPaint_Tag
bool
)
CheckPaint
(
const
T
&
op
)
{
return
PaintHasBitmap
(
AsPtr
(
op
.
paint
)
)
;
}
template
<
typename
T
>
static
SK_WHEN
(
!
(
T
:
:
kTags
&
SkRecords
:
:
kHasPaint_Tag
)
bool
)
CheckPaint
(
const
T
&
)
{
return
false
;
}
private
:
static
bool
PaintHasBitmap
(
const
SkPaint
*
paint
)
{
if
(
paint
)
{
const
SkShader
*
shader
=
paint
-
>
getShader
(
)
;
if
(
shader
&
&
shader
-
>
isAImage
(
)
)
{
return
true
;
}
}
return
false
;
}
}
;
struct
SkPathCounter
{
static
const
SkPaint
*
AsPtr
(
const
SkPaint
&
p
)
{
return
&
p
;
}
static
const
SkPaint
*
AsPtr
(
const
SkRecords
:
:
Optional
<
SkPaint
>
&
p
)
{
return
p
;
}
SkPathCounter
(
)
:
fNumSlowPathsAndDashEffects
(
0
)
{
}
void
operator
(
)
(
const
SkRecords
:
:
DrawPicture
&
op
)
{
fNumSlowPathsAndDashEffects
+
=
op
.
picture
-
>
numSlowPaths
(
)
;
}
void
operator
(
)
(
const
SkRecords
:
:
DrawDrawable
&
)
{
}
void
checkPaint
(
const
SkPaint
*
paint
)
{
if
(
paint
&
&
paint
-
>
getPathEffect
(
)
)
{
fNumSlowPathsAndDashEffects
+
+
;
}
}
void
operator
(
)
(
const
SkRecords
:
:
DrawPoints
&
op
)
{
this
-
>
checkPaint
(
&
op
.
paint
)
;
const
SkPathEffect
*
effect
=
op
.
paint
.
getPathEffect
(
)
;
if
(
effect
)
{
SkPathEffect
:
:
DashInfo
info
;
SkPathEffect
:
:
DashType
dashType
=
effect
-
>
asADash
(
&
info
)
;
if
(
2
=
=
op
.
count
&
&
SkPaint
:
:
kRound_Cap
!
=
op
.
paint
.
getStrokeCap
(
)
&
&
SkPathEffect
:
:
kDash_DashType
=
=
dashType
&
&
2
=
=
info
.
fCount
)
{
fNumSlowPathsAndDashEffects
-
-
;
}
}
}
void
operator
(
)
(
const
SkRecords
:
:
DrawPath
&
op
)
{
this
-
>
checkPaint
(
&
op
.
paint
)
;
if
(
op
.
paint
.
isAntiAlias
(
)
&
&
!
op
.
path
.
isConvex
(
)
)
{
SkPaint
:
:
Style
paintStyle
=
op
.
paint
.
getStyle
(
)
;
const
SkRect
&
pathBounds
=
op
.
path
.
getBounds
(
)
;
if
(
SkPaint
:
:
kStroke_Style
=
=
paintStyle
&
&
0
=
=
op
.
paint
.
getStrokeWidth
(
)
)
{
}
else
if
(
SkPaint
:
:
kFill_Style
=
=
paintStyle
&
&
pathBounds
.
width
(
)
<
64
.
f
&
&
pathBounds
.
height
(
)
<
64
.
f
&
&
!
op
.
path
.
isVolatile
(
)
)
{
}
else
{
fNumSlowPathsAndDashEffects
+
+
;
}
}
}
void
operator
(
)
(
const
SkRecords
:
:
ClipPath
&
op
)
{
if
(
op
.
opAA
.
aa
&
&
!
op
.
path
.
isConvex
(
)
)
{
fNumSlowPathsAndDashEffects
+
+
;
}
}
void
operator
(
)
(
const
SkRecords
:
:
SaveLayer
&
op
)
{
this
-
>
checkPaint
(
AsPtr
(
op
.
paint
)
)
;
}
template
<
typename
T
>
SK_WHEN
(
T
:
:
kTags
&
SkRecords
:
:
kDraw_Tag
void
)
operator
(
)
(
const
T
&
op
)
{
this
-
>
checkPaint
(
AsPtr
(
op
.
paint
)
)
;
}
template
<
typename
T
>
SK_WHEN
(
!
(
T
:
:
kTags
&
SkRecords
:
:
kDraw_Tag
)
void
)
operator
(
)
(
const
T
&
op
)
{
}
int
fNumSlowPathsAndDashEffects
;
}
;
