#
ifndef
SkLayerInfo_DEFINED
#
define
SkLayerInfo_DEFINED
#
include
"
SkBigPicture
.
h
"
#
include
"
SkTArray
.
h
"
class
SkLayerInfo
:
public
SkBigPicture
:
:
AccelData
{
public
:
class
BlockInfo
{
public
:
BlockInfo
(
)
:
fPicture
(
nullptr
)
fPaint
(
nullptr
)
fKey
(
nullptr
)
fKeySize
(
0
)
{
}
~
BlockInfo
(
)
{
SkSafeUnref
(
fPicture
)
;
delete
fPaint
;
delete
[
]
fKey
;
}
const
SkPicture
*
fPicture
;
SkRect
fBounds
;
SkRect
fSrcBounds
;
SkMatrix
fPreMat
;
SkMatrix
fLocalMat
;
const
SkPaint
*
fPaint
;
size_t
fSaveLayerOpID
;
size_t
fRestoreOpID
;
bool
fHasNestedLayers
;
bool
fIsNested
;
int
*
fKey
;
int
fKeySize
;
}
;
SkLayerInfo
(
)
{
}
BlockInfo
&
addBlock
(
)
{
return
fBlocks
.
push_back
(
)
;
}
int
numBlocks
(
)
const
{
return
fBlocks
.
count
(
)
;
}
const
BlockInfo
&
block
(
int
index
)
const
{
SkASSERT
(
index
<
fBlocks
.
count
(
)
)
;
return
fBlocks
[
index
]
;
}
private
:
SkTArray
<
BlockInfo
true
>
fBlocks
;
typedef
SkBigPicture
:
:
AccelData
INHERITED
;
}
;
#
endif
