#
ifndef
SkDeferredDisplayListPriv_DEFINED
#
define
SkDeferredDisplayListPriv_DEFINED
#
include
"
SkDeferredDisplayList
.
h
"
class
SkDeferredDisplayListPriv
{
public
:
int
numOpLists
(
)
const
{
#
if
SK_SUPPORT_GPU
return
fDDL
-
>
fOpLists
.
count
(
)
;
#
else
return
0
;
#
endif
}
const
SkDeferredDisplayList
:
:
LazyProxyData
*
lazyProxyData
(
)
const
{
#
if
SK_SUPPORT_GPU
return
fDDL
-
>
fLazyProxyData
.
get
(
)
;
#
else
return
nullptr
;
#
endif
}
private
:
explicit
SkDeferredDisplayListPriv
(
SkDeferredDisplayList
*
ddl
)
:
fDDL
(
ddl
)
{
}
SkDeferredDisplayListPriv
(
const
SkDeferredDisplayListPriv
&
)
;
SkDeferredDisplayListPriv
&
operator
=
(
const
SkDeferredDisplayListPriv
&
)
;
const
SkDeferredDisplayListPriv
*
operator
&
(
)
const
;
SkDeferredDisplayListPriv
*
operator
&
(
)
;
SkDeferredDisplayList
*
fDDL
;
friend
class
SkDeferredDisplayList
;
}
;
inline
SkDeferredDisplayListPriv
SkDeferredDisplayList
:
:
priv
(
)
{
return
SkDeferredDisplayListPriv
(
this
)
;
}
inline
const
SkDeferredDisplayListPriv
SkDeferredDisplayList
:
:
priv
(
)
const
{
return
SkDeferredDisplayListPriv
(
const_cast
<
SkDeferredDisplayList
*
>
(
this
)
)
;
}
#
endif
