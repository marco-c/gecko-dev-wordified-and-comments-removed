#
include
"
SkCodec
.
h
"
#
include
"
SkImageInfo
.
h
"
#
include
"
SkStream
.
h
"
#
include
"
SkTypes
.
h
"
class
SkIcoCodec
:
public
SkCodec
{
public
:
static
bool
IsIco
(
const
void
*
size_t
)
;
static
SkCodec
*
NewFromStream
(
SkStream
*
)
;
protected
:
SkISize
onGetScaledDimensions
(
float
desiredScale
)
const
override
;
bool
onDimensionsSupported
(
const
SkISize
&
)
override
;
Result
onGetPixels
(
const
SkImageInfo
&
dstInfo
void
*
dst
size_t
dstRowBytes
const
Options
&
SkPMColor
*
int
*
int
*
)
override
;
SkEncodedFormat
onGetEncodedFormat
(
)
const
override
{
return
kICO_SkEncodedFormat
;
}
SkScanlineOrder
onGetScanlineOrder
(
)
const
override
;
private
:
Result
onStartScanlineDecode
(
const
SkImageInfo
&
dstInfo
const
SkCodec
:
:
Options
&
options
SkPMColor
inputColorPtr
[
]
int
*
inputColorCount
)
override
;
int
onGetScanlines
(
void
*
dst
int
count
size_t
rowBytes
)
override
;
bool
onSkipScanlines
(
int
count
)
override
;
SkSampler
*
getSampler
(
bool
createIfNecessary
)
override
;
int
chooseCodec
(
const
SkISize
&
requestedSize
int
startIndex
)
;
SkIcoCodec
(
const
SkImageInfo
&
srcInfo
SkTArray
<
SkAutoTDelete
<
SkCodec
>
true
>
*
embeddedCodecs
)
;
SkAutoTDelete
<
SkTArray
<
SkAutoTDelete
<
SkCodec
>
true
>
>
fEmbeddedCodecs
;
SkCodec
*
fCurrScanlineCodec
;
typedef
SkCodec
INHERITED
;
}
;
