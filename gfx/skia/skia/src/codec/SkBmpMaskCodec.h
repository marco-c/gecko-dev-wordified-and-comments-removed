#
ifndef
SkBmpMaskCodec_DEFINED
#
define
SkBmpMaskCodec_DEFINED
#
include
"
include
/
codec
/
SkCodec
.
h
"
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
"
src
/
codec
/
SkBmpBaseCodec
.
h
"
#
include
"
src
/
codec
/
SkMaskSwizzler
.
h
"
#
include
"
src
/
codec
/
SkMasks
.
h
"
#
include
<
cstddef
>
#
include
<
cstdint
>
#
include
<
memory
>
class
SkSampler
;
class
SkStream
;
struct
SkEncodedInfo
;
struct
SkImageInfo
;
class
SkBmpMaskCodec
:
public
SkBmpBaseCodec
{
public
:
SkBmpMaskCodec
(
SkEncodedInfo
&
&
info
std
:
:
unique_ptr
<
SkStream
>
uint16_t
bitsPerPixel
SkMasks
*
masks
SkCodec
:
:
SkScanlineOrder
rowOrder
)
;
protected
:
Result
onGetPixels
(
const
SkImageInfo
&
dstInfo
void
*
dst
size_t
dstRowBytes
const
Options
&
int
*
)
override
;
SkCodec
:
:
Result
onPrepareToDecode
(
const
SkImageInfo
&
dstInfo
const
SkCodec
:
:
Options
&
options
)
override
;
private
:
SkSampler
*
getSampler
(
bool
createIfNecessary
)
override
{
SkASSERT
(
fMaskSwizzler
)
;
return
fMaskSwizzler
.
get
(
)
;
}
int
decodeRows
(
const
SkImageInfo
&
dstInfo
void
*
dst
size_t
dstRowBytes
const
Options
&
opts
)
override
;
std
:
:
unique_ptr
<
SkMasks
>
fMasks
;
std
:
:
unique_ptr
<
SkMaskSwizzler
>
fMaskSwizzler
;
using
INHERITED
=
SkBmpBaseCodec
;
}
;
#
endif
