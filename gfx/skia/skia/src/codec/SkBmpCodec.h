#
ifndef
SkBmpCodec_DEFINED
#
define
SkBmpCodec_DEFINED
#
include
"
SkCodec
.
h
"
#
include
"
SkColorSpace
.
h
"
#
include
"
SkColorTable
.
h
"
#
include
"
SkImageInfo
.
h
"
#
include
"
SkStream
.
h
"
#
include
"
SkSwizzler
.
h
"
#
include
"
SkTypes
.
h
"
class
SkBmpCodec
:
public
SkCodec
{
public
:
static
bool
IsBmp
(
const
void
*
size_t
)
;
static
std
:
:
unique_ptr
<
SkCodec
>
MakeFromStream
(
std
:
:
unique_ptr
<
SkStream
>
Result
*
)
;
static
std
:
:
unique_ptr
<
SkCodec
>
MakeFromIco
(
std
:
:
unique_ptr
<
SkStream
>
Result
*
)
;
protected
:
SkBmpCodec
(
int
width
int
height
const
SkEncodedInfo
&
info
std
:
:
unique_ptr
<
SkStream
>
uint16_t
bitsPerPixel
SkCodec
:
:
SkScanlineOrder
rowOrder
)
;
SkEncodedImageFormat
onGetEncodedFormat
(
)
const
override
{
return
SkEncodedImageFormat
:
:
kBMP
;
}
static
Result
ReadHeader
(
SkStream
*
bool
inIco
std
:
:
unique_ptr
<
SkCodec
>
*
codecOut
)
;
bool
onRewind
(
)
override
;
bool
inIco
(
)
const
{
return
this
-
>
onInIco
(
)
;
}
virtual
bool
onInIco
(
)
const
{
return
false
;
}
int32_t
getDstRow
(
int32_t
y
int32_t
height
)
const
;
uint16_t
bitsPerPixel
(
)
const
{
return
fBitsPerPixel
;
}
SkScanlineOrder
onGetScanlineOrder
(
)
const
override
{
return
fRowOrder
;
}
size_t
srcRowBytes
(
)
const
{
return
fSrcRowBytes
;
}
virtual
SkCodec
:
:
Result
onPrepareToDecode
(
const
SkImageInfo
&
dstInfo
const
SkCodec
:
:
Options
&
options
)
=
0
;
SkCodec
:
:
Result
prepareToDecode
(
const
SkImageInfo
&
dstInfo
const
SkCodec
:
:
Options
&
options
)
;
uint32_t
*
xformBuffer
(
)
const
{
return
fXformBuffer
.
get
(
)
;
}
void
resetXformBuffer
(
int
count
)
{
fXformBuffer
.
reset
(
new
uint32_t
[
count
]
)
;
}
static
constexpr
SkColorType
kXformSrcColorType
=
kBGRA_8888_SkColorType
;
static
constexpr
auto
kXformSrcColorFormat
=
SkColorSpaceXform
:
:
kBGRA_8888_ColorFormat
;
private
:
static
std
:
:
unique_ptr
<
SkCodec
>
MakeFromStream
(
std
:
:
unique_ptr
<
SkStream
>
Result
*
bool
inIco
)
;
virtual
int
decodeRows
(
const
SkImageInfo
&
dstInfo
void
*
dst
size_t
dstRowBytes
const
Options
&
opts
)
=
0
;
virtual
bool
skipRows
(
int
count
)
;
Result
onStartScanlineDecode
(
const
SkImageInfo
&
dstInfo
const
SkCodec
:
:
Options
&
)
override
;
int
onGetScanlines
(
void
*
dst
int
count
size_t
rowBytes
)
override
;
bool
onSkipScanlines
(
int
count
)
override
;
const
uint16_t
fBitsPerPixel
;
const
SkScanlineOrder
fRowOrder
;
const
size_t
fSrcRowBytes
;
std
:
:
unique_ptr
<
uint32_t
[
]
>
fXformBuffer
;
typedef
SkCodec
INHERITED
;
}
;
#
endif
