#
ifndef
SkMaskSwizzler_DEFINED
#
define
SkMaskSwizzler_DEFINED
#
include
"
SkMasks
.
h
"
#
include
"
SkSampler
.
h
"
#
include
"
SkSwizzler
.
h
"
#
include
"
SkTypes
.
h
"
class
SkMaskSwizzler
:
public
SkSampler
{
public
:
static
SkMaskSwizzler
*
CreateMaskSwizzler
(
const
SkImageInfo
&
dstInfo
const
SkImageInfo
&
srcInfo
SkMasks
*
masks
uint32_t
bitsPerPixel
const
SkCodec
:
:
Options
&
options
)
;
void
swizzle
(
void
*
dst
const
uint8_t
*
SK_RESTRICT
src
)
;
void
fill
(
const
SkImageInfo
&
info
void
*
dst
size_t
rowBytes
uint64_t
colorOrIndex
SkCodec
:
:
ZeroInitialized
zeroInit
)
override
{
const
SkImageInfo
fillInfo
=
info
.
makeWH
(
fDstWidth
info
.
height
(
)
)
;
SkSampler
:
:
Fill
(
fillInfo
dst
rowBytes
colorOrIndex
zeroInit
)
;
}
private
:
typedef
void
(
*
RowProc
)
(
void
*
dstRow
const
uint8_t
*
srcRow
int
width
SkMasks
*
masks
uint32_t
startX
uint32_t
sampleX
)
;
SkMaskSwizzler
(
SkMasks
*
masks
RowProc
proc
int
subsetWidth
int
srcOffset
)
;
int
onSetSampleX
(
int
)
override
;
SkMasks
*
fMasks
;
const
RowProc
fRowProc
;
const
int
fSubsetWidth
;
int
fDstWidth
;
int
fSampleX
;
int
fSrcOffset
;
int
fX0
;
}
;
#
endif
