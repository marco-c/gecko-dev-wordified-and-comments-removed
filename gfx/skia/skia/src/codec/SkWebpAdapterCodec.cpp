#
include
"
SkCodec
.
h
"
#
include
"
SkCodecPriv
.
h
"
#
include
"
SkWebpAdapterCodec
.
h
"
SkWebpAdapterCodec
:
:
SkWebpAdapterCodec
(
SkWebpCodec
*
codec
)
:
INHERITED
(
codec
)
{
}
SkISize
SkWebpAdapterCodec
:
:
onGetSampledDimensions
(
int
sampleSize
)
const
{
float
scale
=
get_scale_from_sample_size
(
sampleSize
)
;
return
this
-
>
codec
(
)
-
>
getScaledDimensions
(
scale
)
;
}
bool
SkWebpAdapterCodec
:
:
onGetSupportedSubset
(
SkIRect
*
desiredSubset
)
const
{
return
this
-
>
codec
(
)
-
>
getValidSubset
(
desiredSubset
)
;
}
SkCodec
:
:
Result
SkWebpAdapterCodec
:
:
onGetAndroidPixels
(
const
SkImageInfo
&
info
void
*
pixels
size_t
rowBytes
const
AndroidOptions
&
options
)
{
SkISize
supportedSize
;
if
(
!
options
.
fSubset
)
{
supportedSize
=
this
-
>
onGetSampledDimensions
(
options
.
fSampleSize
)
;
}
else
{
supportedSize
=
this
-
>
getSampledSubsetDimensions
(
options
.
fSampleSize
*
options
.
fSubset
)
;
}
if
(
supportedSize
!
=
info
.
dimensions
(
)
)
{
return
SkCodec
:
:
kInvalidParameters
;
}
SkCodec
:
:
Options
codecOptions
;
codecOptions
.
fZeroInitialized
=
options
.
fZeroInitialized
;
codecOptions
.
fSubset
=
options
.
fSubset
;
codecOptions
.
fPremulBehavior
=
SkTransferFunctionBehavior
:
:
kIgnore
;
return
this
-
>
codec
(
)
-
>
getPixels
(
info
pixels
rowBytes
&
codecOptions
options
.
fColorPtr
options
.
fColorCount
)
;
}
