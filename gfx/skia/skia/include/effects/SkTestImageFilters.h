#
ifndef
_SkTestImageFilters_h
#
define
_SkTestImageFilters_h
#
include
"
SkImageFilter
.
h
"
#
include
"
SkPoint
.
h
"
class
SK_API
SkDownSampleImageFilter
:
public
SkImageFilter
{
public
:
static
SkImageFilter
*
Create
(
SkScalar
scale
SkImageFilter
*
input
=
NULL
)
{
if
(
!
SkScalarIsFinite
(
scale
)
)
{
return
NULL
;
}
if
(
scale
>
SK_Scalar1
|
|
scale
<
=
0
)
{
return
NULL
;
}
return
new
SkDownSampleImageFilter
(
scale
input
)
;
}
SK_TO_STRING_OVERRIDE
(
)
SK_DECLARE_PUBLIC_FLATTENABLE_DESERIALIZATION_PROCS
(
SkDownSampleImageFilter
)
protected
:
void
flatten
(
SkWriteBuffer
&
)
const
override
;
bool
onFilterImage
(
Proxy
*
const
SkBitmap
&
src
const
Context
&
SkBitmap
*
result
SkIPoint
*
loc
)
const
override
;
private
:
SkDownSampleImageFilter
(
SkScalar
scale
SkImageFilter
*
input
)
:
INHERITED
(
1
&
input
)
fScale
(
scale
)
{
}
SkScalar
fScale
;
typedef
SkImageFilter
INHERITED
;
}
;
#
endif
