#
ifndef
SkToSRGBColorFilter_DEFINED
#
define
SkToSRGBColorFilter_DEFINED
#
include
"
SkColorFilter
.
h
"
#
include
"
SkRefCnt
.
h
"
class
SkColorSpace
;
class
SkRasterPipeline
;
class
SK_API
SkToSRGBColorFilter
:
public
SkColorFilter
{
public
:
static
sk_sp
<
SkColorFilter
>
Make
(
sk_sp
<
SkColorSpace
>
srcColorSpace
)
;
#
if
SK_SUPPORT_GPU
std
:
:
unique_ptr
<
GrFragmentProcessor
>
asFragmentProcessor
(
GrContext
*
const
GrColorSpaceInfo
&
)
const
override
;
#
endif
SK_TO_STRING_OVERRIDE
(
)
SK_DECLARE_PUBLIC_FLATTENABLE_DESERIALIZATION_PROCS
(
SkToSRGBColorFilter
)
private
:
void
flatten
(
SkWriteBuffer
&
)
const
override
;
SkToSRGBColorFilter
(
sk_sp
<
SkColorSpace
>
)
;
void
onAppendStages
(
SkRasterPipeline
*
SkColorSpace
*
SkArenaAlloc
*
bool
shaderIsOpaque
)
const
override
;
sk_sp
<
SkColorSpace
>
fSrcColorSpace
;
typedef
SkColorFilter
INHERITED
;
}
;
#
endif
