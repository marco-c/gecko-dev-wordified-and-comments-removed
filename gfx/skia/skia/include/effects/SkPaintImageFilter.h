#
ifndef
SkPaintImageFilter_DEFINED
#
define
SkPaintImageFilter_DEFINED
#
include
"
SkFlattenable
.
h
"
#
include
"
SkImageFilter
.
h
"
#
include
"
SkPaint
.
h
"
class
SK_API
SkPaintImageFilter
:
public
SkImageFilter
{
public
:
static
sk_sp
<
SkImageFilter
>
Make
(
const
SkPaint
&
paint
const
CropRect
*
cropRect
=
nullptr
)
;
bool
affectsTransparentBlack
(
)
const
override
;
protected
:
void
flatten
(
SkWriteBuffer
&
)
const
override
;
sk_sp
<
SkSpecialImage
>
onFilterImage
(
SkSpecialImage
*
source
const
Context
&
SkIPoint
*
offset
)
const
override
;
sk_sp
<
SkImageFilter
>
onMakeColorSpace
(
SkColorSpaceXformer
*
xformer
)
const
override
;
private
:
SK_FLATTENABLE_HOOKS
(
SkPaintImageFilter
)
SkPaintImageFilter
(
const
SkPaint
&
paint
const
CropRect
*
rect
)
;
SkPaint
fPaint
;
typedef
SkImageFilter
INHERITED
;
}
;
#
endif
