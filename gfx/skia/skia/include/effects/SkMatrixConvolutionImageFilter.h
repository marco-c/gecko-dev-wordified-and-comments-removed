#
ifndef
SkMatrixConvolutionImageFilter_DEFINED
#
define
SkMatrixConvolutionImageFilter_DEFINED
#
include
"
include
/
core
/
SkImageFilter
.
h
"
#
include
"
include
/
core
/
SkPoint
.
h
"
#
include
"
include
/
core
/
SkScalar
.
h
"
#
include
"
include
/
core
/
SkSize
.
h
"
class
SkBitmap
;
enum
class
SkTileMode
;
class
SK_API
SkMatrixConvolutionImageFilter
{
public
:
enum
TileMode
{
kClamp_TileMode
=
0
kRepeat_TileMode
kClampToBlack_TileMode
kLast_TileMode
=
kClampToBlack_TileMode
kMax_TileMode
=
kClampToBlack_TileMode
}
;
static
sk_sp
<
SkImageFilter
>
Make
(
const
SkISize
&
kernelSize
const
SkScalar
*
kernel
SkScalar
gain
SkScalar
bias
const
SkIPoint
&
kernelOffset
TileMode
tileMode
bool
convolveAlpha
sk_sp
<
SkImageFilter
>
input
const
SkImageFilter
:
:
CropRect
*
cropRect
=
nullptr
)
;
static
sk_sp
<
SkImageFilter
>
Make
(
const
SkISize
&
kernelSize
const
SkScalar
*
kernel
SkScalar
gain
SkScalar
bias
const
SkIPoint
&
kernelOffset
SkTileMode
tileMode
bool
convolveAlpha
sk_sp
<
SkImageFilter
>
input
const
SkImageFilter
:
:
CropRect
*
cropRect
=
nullptr
)
;
static
void
RegisterFlattenables
(
)
;
private
:
SkMatrixConvolutionImageFilter
(
)
=
delete
;
}
;
#
endif
