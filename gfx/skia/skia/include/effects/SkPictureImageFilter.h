#
ifndef
SkPictureImageFilter_DEFINED
#
define
SkPictureImageFilter_DEFINED
#
include
"
SkImageFilter
.
h
"
#
include
"
SkPicture
.
h
"
class
SK_API
SkPictureImageFilter
:
public
SkImageFilter
{
public
:
static
sk_sp
<
SkImageFilter
>
Make
(
sk_sp
<
SkPicture
>
picture
)
;
static
sk_sp
<
SkImageFilter
>
Make
(
sk_sp
<
SkPicture
>
picture
const
SkRect
&
cropRect
)
;
SK_TO_STRING_OVERRIDE
(
)
SK_DECLARE_PUBLIC_FLATTENABLE_DESERIALIZATION_PROCS
(
SkPictureImageFilter
)
protected
:
void
flatten
(
SkWriteBuffer
&
)
const
override
;
sk_sp
<
SkSpecialImage
>
onFilterImage
(
SkSpecialImage
*
source
const
Context
&
SkIPoint
*
offset
)
const
override
;
sk_sp
<
SkImageFilter
>
onMakeColorSpace
(
SkColorSpaceXformer
*
)
const
override
;
private
:
explicit
SkPictureImageFilter
(
sk_sp
<
SkPicture
>
picture
)
;
SkPictureImageFilter
(
sk_sp
<
SkPicture
>
picture
const
SkRect
&
cropRect
sk_sp
<
SkColorSpace
>
)
;
sk_sp
<
SkPicture
>
fPicture
;
SkRect
fCropRect
;
sk_sp
<
SkColorSpace
>
fColorSpace
;
typedef
SkImageFilter
INHERITED
;
}
;
#
endif
