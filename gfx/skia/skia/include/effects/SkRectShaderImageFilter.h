#
ifndef
SkRectShaderImageFilter_DEFINED
#
define
SkRectShaderImageFilter_DEFINED
#
include
"
SkImageFilter
.
h
"
#
include
"
SkRect
.
h
"
class
SkShader
;
class
SK_API
SkRectShaderImageFilter
:
public
SkImageFilter
{
public
:
SK_ATTR_DEPRECATED
(
"
use
Create
(
SkShader
*
const
CropRect
*
)
"
)
static
SkImageFilter
*
Create
(
SkShader
*
s
const
SkRect
&
rect
)
;
static
SkImageFilter
*
Create
(
SkShader
*
s
const
CropRect
*
rect
=
NULL
)
;
bool
affectsTransparentBlack
(
)
const
override
;
SK_TO_STRING_OVERRIDE
(
)
SK_DECLARE_PUBLIC_FLATTENABLE_DESERIALIZATION_PROCS
(
SkRectShaderImageFilter
)
protected
:
virtual
~
SkRectShaderImageFilter
(
)
;
void
flatten
(
SkWriteBuffer
&
)
const
override
;
bool
onFilterImage
(
Proxy
*
const
SkBitmap
&
src
const
Context
&
SkBitmap
*
result
SkIPoint
*
loc
)
const
override
;
private
:
SkRectShaderImageFilter
(
SkShader
*
s
const
CropRect
*
rect
)
;
SkShader
*
fShader
;
typedef
SkImageFilter
INHERITED
;
}
;
#
endif
