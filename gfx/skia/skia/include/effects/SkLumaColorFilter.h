#
ifndef
SkLumaColorFilter_DEFINED
#
define
SkLumaColorFilter_DEFINED
#
include
"
SkColorFilter
.
h
"
class
SK_API
SkLumaColorFilter
:
public
SkColorFilter
{
public
:
static
sk_sp
<
SkColorFilter
>
Make
(
)
;
#
ifdef
SK_SUPPORT_LEGACY_COLORFILTER_PTR
static
SkColorFilter
*
Create
(
)
{
return
Make
(
)
.
release
(
)
;
}
#
endif
void
filterSpan
(
const
SkPMColor
src
[
]
int
count
SkPMColor
[
]
)
const
override
;
#
if
SK_SUPPORT_GPU
const
GrFragmentProcessor
*
asFragmentProcessor
(
GrContext
*
)
const
override
;
#
endif
SK_TO_STRING_OVERRIDE
(
)
SK_DECLARE_PUBLIC_FLATTENABLE_DESERIALIZATION_PROCS
(
SkLumaColorFilter
)
protected
:
void
flatten
(
SkWriteBuffer
&
)
const
override
;
private
:
SkLumaColorFilter
(
)
;
typedef
SkColorFilter
INHERITED
;
}
;
#
endif
