#
ifndef
SkLumaColorFilter_DEFINED
#
define
SkLumaColorFilter_DEFINED
#
include
"
include
/
core
/
SkColorFilter
.
h
"
#
include
"
include
/
core
/
SkRefCnt
.
h
"
class
SkRasterPipeline
;
#
include
"
include
/
core
/
SkFlattenable
.
h
"
class
SK_API
SkLumaColorFilter
:
public
SkColorFilter
{
public
:
static
sk_sp
<
SkColorFilter
>
Make
(
)
;
#
if
SK_SUPPORT_GPU
std
:
:
unique_ptr
<
GrFragmentProcessor
>
asFragmentProcessor
(
GrRecordingContext
*
const
GrColorInfo
&
)
const
override
;
#
endif
protected
:
void
flatten
(
SkWriteBuffer
&
)
const
override
;
private
:
SK_FLATTENABLE_HOOKS
(
SkLumaColorFilter
)
SkLumaColorFilter
(
)
;
bool
onAppendStages
(
const
SkStageRec
&
rec
bool
shaderIsOpaque
)
const
override
;
typedef
SkColorFilter
INHERITED
;
}
;
#
endif
