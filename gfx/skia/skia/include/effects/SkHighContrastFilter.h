#
ifndef
SkHighContrastFilter_DEFINED
#
define
SkHighContrastFilter_DEFINED
#
include
"
include
/
core
/
SkColorFilter
.
h
"
#
include
"
include
/
core
/
SkPaint
.
h
"
struct
SkHighContrastConfig
{
enum
class
InvertStyle
{
kNoInvert
kInvertBrightness
kInvertLightness
kLast
=
kInvertLightness
}
;
SkHighContrastConfig
(
)
{
fGrayscale
=
false
;
fInvertStyle
=
InvertStyle
:
:
kNoInvert
;
fContrast
=
0
.
0f
;
}
SkHighContrastConfig
(
bool
grayscale
InvertStyle
invertStyle
SkScalar
contrast
)
:
fGrayscale
(
grayscale
)
fInvertStyle
(
invertStyle
)
fContrast
(
contrast
)
{
}
bool
isValid
(
)
const
{
return
fInvertStyle
>
=
InvertStyle
:
:
kNoInvert
&
&
fInvertStyle
<
=
InvertStyle
:
:
kInvertLightness
&
&
fContrast
>
=
-
1
.
0
&
&
fContrast
<
=
1
.
0
;
}
bool
fGrayscale
;
InvertStyle
fInvertStyle
;
SkScalar
fContrast
;
}
;
class
SK_API
SkHighContrastFilter
{
public
:
static
sk_sp
<
SkColorFilter
>
Make
(
const
SkHighContrastConfig
&
config
)
;
static
void
RegisterFlattenables
(
)
;
}
;
#
endif
