#
include
"
include
/
core
/
SkColorFilter
.
h
"
#
include
"
include
/
core
/
SkFlattenable
.
h
"
#
ifndef
SkOverdrawColorFilter_DEFINED
#
define
SkOverdrawColorFilter_DEFINED
class
SK_API
SkOverdrawColorFilter
:
public
SkColorFilter
{
public
:
static
constexpr
int
kNumColors
=
6
;
static
sk_sp
<
SkOverdrawColorFilter
>
Make
(
const
SkPMColor
colors
[
kNumColors
]
)
{
return
sk_sp
<
SkOverdrawColorFilter
>
(
new
SkOverdrawColorFilter
(
colors
)
)
;
}
#
if
SK_SUPPORT_GPU
std
:
:
unique_ptr
<
GrFragmentProcessor
>
asFragmentProcessor
(
GrRecordingContext
*
const
GrColorInfo
&
)
const
override
;
#
endif
static
void
RegisterFlattenables
(
)
;
protected
:
void
flatten
(
SkWriteBuffer
&
buffer
)
const
override
;
private
:
SK_FLATTENABLE_HOOKS
(
SkOverdrawColorFilter
)
SkOverdrawColorFilter
(
const
SkPMColor
colors
[
kNumColors
]
)
{
memcpy
(
fColors
colors
kNumColors
*
sizeof
(
SkPMColor
)
)
;
}
bool
onAppendStages
(
const
SkStageRec
&
bool
)
const
override
;
SkPMColor
fColors
[
kNumColors
]
;
typedef
SkColorFilter
INHERITED
;
}
;
#
endif
