#
ifndef
SkPathOps_DEFINED
#
define
SkPathOps_DEFINED
#
include
"
.
.
/
private
/
SkTArray
.
h
"
#
include
"
.
.
/
private
/
SkTDArray
.
h
"
#
include
"
SkPreConfig
.
h
"
class
SkPath
;
struct
SkRect
;
enum
SkPathOp
{
kDifference_SkPathOp
kIntersect_SkPathOp
kUnion_SkPathOp
kXOR_SkPathOp
kReverseDifference_SkPathOp
}
;
bool
SK_API
Op
(
const
SkPath
&
one
const
SkPath
&
two
SkPathOp
op
SkPath
*
result
)
;
bool
SK_API
Simplify
(
const
SkPath
&
path
SkPath
*
result
)
;
bool
SK_API
TightBounds
(
const
SkPath
&
path
SkRect
*
result
)
;
class
SK_API
SkOpBuilder
{
public
:
void
add
(
const
SkPath
&
path
SkPathOp
_operator
)
;
bool
resolve
(
SkPath
*
result
)
;
private
:
SkTArray
<
SkPath
>
fPathRefs
;
SkTDArray
<
SkPathOp
>
fOps
;
void
reset
(
)
;
}
;
#
endif
