#
ifndef
SkXmp_DEFINED
#
define
SkXmp_DEFINED
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
private
/
base
/
SkAPI
.
h
"
class
SkData
;
struct
SkGainmapInfo
;
#
include
<
cstddef
>
#
include
<
memory
>
class
SK_API
SkXmp
{
public
:
SkXmp
(
)
=
default
;
virtual
~
SkXmp
(
)
=
default
;
SkXmp
(
const
SkXmp
&
)
=
delete
;
SkXmp
&
operator
=
(
const
SkXmp
&
)
=
delete
;
static
std
:
:
unique_ptr
<
SkXmp
>
Make
(
sk_sp
<
SkData
>
xmpData
)
;
static
std
:
:
unique_ptr
<
SkXmp
>
Make
(
sk_sp
<
SkData
>
xmpStandard
sk_sp
<
SkData
>
xmpExtended
)
;
bool
getGainmapInfoHDRGM
(
SkGainmapInfo
*
info
)
const
{
return
getGainmapInfoAdobe
(
info
)
;
}
virtual
bool
getGainmapInfoAdobe
(
SkGainmapInfo
*
info
)
const
=
0
;
virtual
bool
getGainmapInfoApple
(
float
exifHdrHeadroom
SkGainmapInfo
*
info
)
const
=
0
;
virtual
bool
getContainerGainmapLocation
(
size_t
*
offset
size_t
*
size
)
const
=
0
;
virtual
const
char
*
getExtendedXmpGuid
(
)
const
=
0
;
}
;
#
endif
