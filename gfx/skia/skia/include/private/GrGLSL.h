#
ifndef
GrGLSL_DEFINED
#
define
GrGLSL_DEFINED
#
include
"
GrTypesPriv
.
h
"
#
include
"
SkString
.
h
"
class
GrShaderCaps
;
enum
GrGLSLGeneration
{
k110_GrGLSLGeneration
k130_GrGLSLGeneration
k140_GrGLSLGeneration
k150_GrGLSLGeneration
k330_GrGLSLGeneration
k400_GrGLSLGeneration
k420_GrGLSLGeneration
k310es_GrGLSLGeneration
k320es_GrGLSLGeneration
}
;
bool
GrGLSLSupportsNamedFragmentShaderOutputs
(
GrGLSLGeneration
)
;
void
GrGLSLAppendDefaultFloatPrecisionDeclaration
(
GrSLPrecision
const
GrShaderCaps
&
SkString
*
out
)
;
static
inline
const
char
*
GrGLSLPrecisionString
(
GrSLPrecision
p
)
{
switch
(
p
)
{
case
kLow_GrSLPrecision
:
return
"
lowp
"
;
case
kMedium_GrSLPrecision
:
return
"
mediump
"
;
case
kHigh_GrSLPrecision
:
return
"
highp
"
;
case
kDefault_GrSLPrecision
:
return
"
"
;
default
:
SK_ABORT
(
"
Unexpected
precision
type
.
"
)
;
return
"
"
;
}
}
const
char
*
GrGLSLTypeString
(
const
GrShaderCaps
*
shaderCaps
GrSLType
t
)
;
#
endif
