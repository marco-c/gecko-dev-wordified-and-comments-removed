#
ifndef
GrDeferredDisplayList_DEFINED
#
define
GrDeferredDisplayList_DEFINED
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
"
include
/
gpu
/
GrRecordingContext
.
h
"
#
include
"
include
/
private
/
base
/
SkTArray
.
h
"
#
include
"
include
/
private
/
chromium
/
GrSurfaceCharacterization
.
h
"
class
GrDirectContext
;
class
GrRenderTargetProxy
;
class
GrRenderTask
;
class
GrDeferredDisplayListPriv
;
class
SkSurface
;
class
GrDeferredDisplayList
:
public
SkNVRefCnt
<
GrDeferredDisplayList
>
{
public
:
SK_API
~
GrDeferredDisplayList
(
)
;
SK_API
const
GrSurfaceCharacterization
&
characterization
(
)
const
{
return
fCharacterization
;
}
class
SK_API
ProgramIterator
{
public
:
ProgramIterator
(
GrDirectContext
*
GrDeferredDisplayList
*
)
;
~
ProgramIterator
(
)
;
bool
compile
(
)
;
bool
done
(
)
const
;
void
next
(
)
;
private
:
GrDirectContext
*
fDContext
;
const
skia_private
:
:
TArray
<
GrRecordingContext
:
:
ProgramData
>
&
fProgramData
;
int
fIndex
;
}
;
GrDeferredDisplayListPriv
priv
(
)
;
const
GrDeferredDisplayListPriv
priv
(
)
const
;
private
:
friend
class
GrDrawingManager
;
friend
class
GrDeferredDisplayListRecorder
;
friend
class
GrDeferredDisplayListPriv
;
class
LazyProxyData
:
public
SkRefCnt
{
public
:
GrRenderTargetProxy
*
fReplayDest
=
nullptr
;
}
;
SK_API
GrDeferredDisplayList
(
const
GrSurfaceCharacterization
&
characterization
sk_sp
<
GrRenderTargetProxy
>
fTargetProxy
sk_sp
<
LazyProxyData
>
)
;
const
skia_private
:
:
TArray
<
GrRecordingContext
:
:
ProgramData
>
&
programData
(
)
const
{
return
fProgramData
;
}
const
GrSurfaceCharacterization
fCharacterization
;
GrRecordingContext
:
:
OwnedArenas
fArenas
;
skia_private
:
:
TArray
<
sk_sp
<
GrRenderTask
>
>
fRenderTasks
;
skia_private
:
:
TArray
<
GrRecordingContext
:
:
ProgramData
>
fProgramData
;
sk_sp
<
GrRenderTargetProxy
>
fTargetProxy
;
sk_sp
<
LazyProxyData
>
fLazyProxyData
;
}
;
namespace
skgpu
:
:
ganesh
{
SK_API
bool
DrawDDL
(
SkSurface
*
sk_sp
<
const
GrDeferredDisplayList
>
ddl
)
;
SK_API
bool
DrawDDL
(
sk_sp
<
SkSurface
>
sk_sp
<
const
GrDeferredDisplayList
>
ddl
)
;
}
#
endif
