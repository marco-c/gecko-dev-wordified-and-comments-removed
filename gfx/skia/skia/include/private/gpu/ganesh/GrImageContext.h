#
ifndef
GrImageContext_DEFINED
#
define
GrImageContext_DEFINED
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
private
/
base
/
SingleOwner
.
h
"
#
include
"
include
/
private
/
base
/
SkAPI
.
h
"
#
include
"
include
/
private
/
gpu
/
ganesh
/
GrContext_Base
.
h
"
class
GrContextThreadSafeProxy
;
class
GrImageContextPriv
;
class
GrImageContext
:
public
GrContext_Base
{
public
:
~
GrImageContext
(
)
override
;
GrImageContextPriv
priv
(
)
;
const
GrImageContextPriv
priv
(
)
const
;
protected
:
friend
class
GrImageContextPriv
;
GrImageContext
(
sk_sp
<
GrContextThreadSafeProxy
>
)
;
SK_API
virtual
void
abandonContext
(
)
;
SK_API
virtual
bool
abandoned
(
)
;
skgpu
:
:
SingleOwner
*
singleOwner
(
)
const
{
return
&
fSingleOwner
;
}
GrImageContext
*
asImageContext
(
)
override
{
return
this
;
}
private
:
static
sk_sp
<
GrImageContext
>
MakeForPromiseImage
(
sk_sp
<
GrContextThreadSafeProxy
>
)
;
mutable
skgpu
:
:
SingleOwner
fSingleOwner
;
}
;
#
endif
