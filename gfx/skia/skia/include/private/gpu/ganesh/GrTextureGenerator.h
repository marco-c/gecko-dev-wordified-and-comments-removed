#
ifndef
GrTextureGenerator_DEFINED
#
define
GrTextureGenerator_DEFINED
#
include
"
include
/
core
/
SkImageGenerator
.
h
"
#
include
"
include
/
gpu
/
GrTypes
.
h
"
#
include
"
include
/
private
/
base
/
SkAPI
.
h
"
#
include
<
cstdint
>
class
GrRecordingContext
;
class
GrSurfaceProxyView
;
enum
class
GrImageTexGenPolicy
:
int
;
namespace
skgpu
{
enum
class
Mipmapped
:
bool
;
}
struct
SkImageInfo
;
class
SK_API
GrTextureGenerator
:
public
SkImageGenerator
{
public
:
bool
isTextureGenerator
(
)
const
final
{
return
true
;
}
GrSurfaceProxyView
generateTexture
(
GrRecordingContext
*
const
SkImageInfo
&
info
skgpu
:
:
Mipmapped
mipmapped
GrImageTexGenPolicy
)
;
virtual
GrSurfaceProxyView
onGenerateTexture
(
GrRecordingContext
*
const
SkImageInfo
&
skgpu
:
:
Mipmapped
GrImageTexGenPolicy
)
=
0
;
virtual
GrSurfaceOrigin
origin
(
)
const
{
return
kTopLeft_GrSurfaceOrigin
;
}
protected
:
GrTextureGenerator
(
const
SkImageInfo
&
info
uint32_t
uniqueId
=
kNeedNewImageUniqueID
)
;
}
;
#
endif
