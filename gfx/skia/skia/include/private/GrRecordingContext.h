#
ifndef
GrRecordingContext_DEFINED
#
define
GrRecordingContext_DEFINED
#
include
"
GrAuditTrail
.
h
"
#
include
"
GrImageContext
.
h
"
#
include
"
SkRefCnt
.
h
"
class
GrDrawingManager
;
class
GrOnFlushCallbackObject
;
class
GrOpMemoryPool
;
class
GrRecordingContextPriv
;
class
GrStrikeCache
;
class
GrTextBlobCache
;
class
SK_API
GrRecordingContext
:
public
GrImageContext
{
public
:
~
GrRecordingContext
(
)
override
;
GrRecordingContextPriv
priv
(
)
;
const
GrRecordingContextPriv
priv
(
)
const
;
protected
:
friend
class
GrRecordingContextPriv
;
GrRecordingContext
(
GrBackendApi
const
GrContextOptions
&
uint32_t
contextID
)
;
bool
init
(
sk_sp
<
const
GrCaps
>
sk_sp
<
GrSkSLFPFactoryCache
>
)
override
;
void
abandonContext
(
)
override
;
GrDrawingManager
*
drawingManager
(
)
;
sk_sp
<
GrOpMemoryPool
>
refOpMemoryPool
(
)
;
GrOpMemoryPool
*
opMemoryPool
(
)
;
GrStrikeCache
*
getGrStrikeCache
(
)
{
return
fStrikeCache
.
get
(
)
;
}
GrTextBlobCache
*
getTextBlobCache
(
)
;
const
GrTextBlobCache
*
getTextBlobCache
(
)
const
;
void
addOnFlushCallbackObject
(
GrOnFlushCallbackObject
*
)
;
sk_sp
<
GrSurfaceContext
>
makeWrappedSurfaceContext
(
sk_sp
<
GrSurfaceProxy
>
sk_sp
<
SkColorSpace
>
=
nullptr
const
SkSurfaceProps
*
=
nullptr
)
;
sk_sp
<
GrSurfaceContext
>
makeDeferredSurfaceContext
(
const
GrBackendFormat
&
const
GrSurfaceDesc
&
GrSurfaceOrigin
GrMipMapped
SkBackingFit
SkBudgeted
sk_sp
<
SkColorSpace
>
colorSpace
=
nullptr
const
SkSurfaceProps
*
=
nullptr
)
;
sk_sp
<
GrRenderTargetContext
>
makeDeferredRenderTargetContext
(
const
GrBackendFormat
&
format
SkBackingFit
fit
int
width
int
height
GrPixelConfig
config
sk_sp
<
SkColorSpace
>
colorSpace
int
sampleCnt
=
1
GrMipMapped
=
GrMipMapped
:
:
kNo
GrSurfaceOrigin
origin
=
kBottomLeft_GrSurfaceOrigin
const
SkSurfaceProps
*
surfaceProps
=
nullptr
SkBudgeted
=
SkBudgeted
:
:
kYes
)
;
sk_sp
<
GrRenderTargetContext
>
makeDeferredRenderTargetContextWithFallback
(
const
GrBackendFormat
&
format
SkBackingFit
fit
int
width
int
height
GrPixelConfig
config
sk_sp
<
SkColorSpace
>
colorSpace
int
sampleCnt
=
1
GrMipMapped
=
GrMipMapped
:
:
kNo
GrSurfaceOrigin
origin
=
kBottomLeft_GrSurfaceOrigin
const
SkSurfaceProps
*
surfaceProps
=
nullptr
SkBudgeted
budgeted
=
SkBudgeted
:
:
kYes
)
;
GrAuditTrail
*
auditTrail
(
)
{
return
&
fAuditTrail
;
}
GrRecordingContext
*
asRecordingContext
(
)
override
{
return
this
;
}
private
:
std
:
:
unique_ptr
<
GrDrawingManager
>
fDrawingManager
;
sk_sp
<
GrOpMemoryPool
>
fOpMemoryPool
;
std
:
:
unique_ptr
<
GrStrikeCache
>
fStrikeCache
;
std
:
:
unique_ptr
<
GrTextBlobCache
>
fTextBlobCache
;
GrAuditTrail
fAuditTrail
;
typedef
GrImageContext
INHERITED
;
}
;
#
endif
