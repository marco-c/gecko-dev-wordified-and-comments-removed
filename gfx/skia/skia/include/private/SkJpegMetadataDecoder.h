#
ifndef
SkJpegMetadataDecoder_DEFINED
#
define
SkJpegMetadataDecoder_DEFINED
#
include
"
include
/
core
/
SkData
.
h
"
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
<
memory
>
#
include
<
vector
>
struct
SkGainmapInfo
;
class
SK_API
SkJpegMetadataDecoder
{
public
:
SkJpegMetadataDecoder
(
)
{
}
virtual
~
SkJpegMetadataDecoder
(
)
{
}
SkJpegMetadataDecoder
(
const
SkJpegMetadataDecoder
&
)
=
delete
;
SkJpegMetadataDecoder
&
operator
=
(
const
SkJpegMetadataDecoder
&
)
=
delete
;
struct
SK_API
Segment
{
Segment
(
uint8_t
marker
sk_sp
<
SkData
>
data
)
:
fMarker
(
marker
)
fData
(
std
:
:
move
(
data
)
)
{
}
uint8_t
fMarker
=
0
;
sk_sp
<
SkData
>
fData
;
}
;
static
std
:
:
unique_ptr
<
SkJpegMetadataDecoder
>
Make
(
std
:
:
vector
<
Segment
>
headerSegments
)
;
virtual
sk_sp
<
SkData
>
getExifMetadata
(
bool
copyData
)
const
=
0
;
virtual
sk_sp
<
SkData
>
getICCProfileData
(
bool
copyData
)
const
=
0
;
virtual
bool
mightHaveGainmapImage
(
)
const
=
0
;
virtual
bool
findGainmapImage
(
sk_sp
<
SkData
>
baseImageData
sk_sp
<
SkData
>
&
outGainmapImagedata
SkGainmapInfo
&
outGainmapInfo
)
=
0
;
}
;
#
endif
