#
ifndef
SkTFitsIn_DEFINED
#
define
SkTFitsIn_DEFINED
#
include
<
limits
>
#
include
<
type_traits
>
template
<
typename
D
typename
S
>
static
constexpr
inline
typename
std
:
:
enable_if
<
(
std
:
:
is_integral
<
S
>
:
:
value
|
|
std
:
:
is_enum
<
S
>
:
:
value
)
&
&
(
std
:
:
is_integral
<
D
>
:
:
value
|
|
std
:
:
is_enum
<
D
>
:
:
value
)
bool
>
:
:
type
SkTFitsIn
(
S
src
)
{
return
(
std
:
:
is_signed
<
S
>
:
:
value
&
&
std
:
:
is_unsigned
<
D
>
:
:
value
&
&
sizeof
(
S
)
<
=
sizeof
(
D
)
)
?
(
S
)
0
<
=
src
:
(
std
:
:
is_signed
<
D
>
:
:
value
&
&
std
:
:
is_unsigned
<
S
>
:
:
value
&
&
sizeof
(
D
)
<
=
sizeof
(
S
)
)
?
src
<
=
(
S
)
std
:
:
numeric_limits
<
D
>
:
:
max
(
)
:
(
S
)
(
D
)
src
=
=
src
;
}
#
endif
