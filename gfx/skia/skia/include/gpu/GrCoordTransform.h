#
ifndef
GrCoordTransform_DEFINED
#
define
GrCoordTransform_DEFINED
#
include
"
GrProcessor
.
h
"
#
include
"
SkMatrix
.
h
"
#
include
"
GrTexture
.
h
"
#
include
"
GrTypes
.
h
"
#
include
"
GrShaderVar
.
h
"
enum
GrCoordSet
{
kLocal_GrCoordSet
kDevice_GrCoordSet
}
;
class
GrCoordTransform
:
SkNoncopyable
{
public
:
GrCoordTransform
(
)
:
fSourceCoords
(
kLocal_GrCoordSet
)
{
SkDEBUGCODE
(
fInProcessor
=
false
)
;
}
GrCoordTransform
(
GrCoordSet
sourceCoords
const
GrTexture
*
texture
GrTextureParams
:
:
FilterMode
filter
)
{
SkASSERT
(
texture
)
;
SkDEBUGCODE
(
fInProcessor
=
false
)
;
this
-
>
reset
(
sourceCoords
texture
filter
)
;
}
GrCoordTransform
(
GrCoordSet
sourceCoords
const
SkMatrix
&
m
const
GrTexture
*
texture
GrTextureParams
:
:
FilterMode
filter
)
{
SkDEBUGCODE
(
fInProcessor
=
false
)
;
SkASSERT
(
texture
)
;
this
-
>
reset
(
sourceCoords
m
texture
filter
)
;
}
GrCoordTransform
(
GrCoordSet
sourceCoords
const
SkMatrix
&
m
GrSLPrecision
precision
=
kDefault_GrSLPrecision
)
{
SkDEBUGCODE
(
fInProcessor
=
false
)
;
this
-
>
reset
(
sourceCoords
m
precision
)
;
}
void
reset
(
GrCoordSet
sourceCoords
const
GrTexture
*
texture
GrTextureParams
:
:
FilterMode
filter
)
{
SkASSERT
(
!
fInProcessor
)
;
SkASSERT
(
texture
)
;
this
-
>
reset
(
sourceCoords
MakeDivByTextureWHMatrix
(
texture
)
texture
filter
)
;
}
void
reset
(
GrCoordSet
const
SkMatrix
&
const
GrTexture
*
GrTextureParams
:
:
FilterMode
filter
)
;
void
reset
(
GrCoordSet
sourceCoords
const
SkMatrix
&
m
GrSLPrecision
precision
=
kDefault_GrSLPrecision
)
;
GrCoordTransform
&
operator
=
(
const
GrCoordTransform
&
that
)
{
SkASSERT
(
!
fInProcessor
)
;
fSourceCoords
=
that
.
fSourceCoords
;
fMatrix
=
that
.
fMatrix
;
fReverseY
=
that
.
fReverseY
;
fPrecision
=
that
.
fPrecision
;
return
*
this
;
}
SkMatrix
*
accessMatrix
(
)
{
SkASSERT
(
!
fInProcessor
)
;
return
&
fMatrix
;
}
bool
operator
=
=
(
const
GrCoordTransform
&
that
)
const
{
return
fSourceCoords
=
=
that
.
fSourceCoords
&
&
fMatrix
.
cheapEqualTo
(
that
.
fMatrix
)
&
&
fReverseY
=
=
that
.
fReverseY
&
&
fPrecision
=
=
that
.
fPrecision
;
}
bool
operator
!
=
(
const
GrCoordTransform
&
that
)
const
{
return
!
(
*
this
=
=
that
)
;
}
GrCoordSet
sourceCoords
(
)
const
{
return
fSourceCoords
;
}
const
SkMatrix
&
getMatrix
(
)
const
{
return
fMatrix
;
}
bool
reverseY
(
)
const
{
return
fReverseY
;
}
GrSLPrecision
precision
(
)
const
{
return
fPrecision
;
}
static
inline
SkMatrix
MakeDivByTextureWHMatrix
(
const
GrTexture
*
texture
)
{
SkASSERT
(
texture
)
;
SkMatrix
mat
;
(
void
)
mat
.
setIDiv
(
texture
-
>
width
(
)
texture
-
>
height
(
)
)
;
return
mat
;
}
private
:
GrCoordSet
fSourceCoords
;
SkMatrix
fMatrix
;
bool
fReverseY
;
GrSLPrecision
fPrecision
;
typedef
SkNoncopyable
INHERITED
;
#
ifdef
SK_DEBUG
public
:
void
setInProcessor
(
)
const
{
fInProcessor
=
true
;
}
private
:
mutable
bool
fInProcessor
;
#
endif
}
;
#
endif
