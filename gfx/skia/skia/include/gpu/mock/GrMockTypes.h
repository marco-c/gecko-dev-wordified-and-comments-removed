#
ifndef
GrMockOptions_DEFINED
#
define
GrMockOptions_DEFINED
#
include
"
GrTypes
.
h
"
#
include
"
.
.
/
private
/
GrTypesPriv
.
h
"
struct
GrMockTextureInfo
{
GrPixelConfig
fConfig
;
int
fID
;
bool
operator
=
=
(
const
GrMockTextureInfo
&
that
)
const
{
return
fConfig
=
=
that
.
fConfig
&
&
fID
=
=
that
.
fID
;
}
}
;
struct
GrMockRenderTargetInfo
{
GrPixelConfig
fConfig
;
int
fID
;
bool
operator
=
=
(
const
GrMockRenderTargetInfo
&
that
)
const
{
return
fConfig
=
=
that
.
fConfig
&
&
fID
=
=
that
.
fID
;
}
}
;
struct
GrMockOptions
{
GrMockOptions
(
)
{
using
Renderability
=
ConfigOptions
:
:
Renderability
;
fConfigOptions
[
kRGBA_8888_GrPixelConfig
]
.
fRenderability
=
Renderability
:
:
kNonMSAA
;
fConfigOptions
[
kRGBA_8888_GrPixelConfig
]
.
fTexturable
=
true
;
fConfigOptions
[
kAlpha_8_GrPixelConfig
]
.
fTexturable
=
true
;
fConfigOptions
[
kAlpha_8_as_Alpha_GrPixelConfig
]
.
fTexturable
=
true
;
fConfigOptions
[
kAlpha_8_as_Red_GrPixelConfig
]
.
fTexturable
=
true
;
fConfigOptions
[
kRGB_565_GrPixelConfig
]
.
fTexturable
=
true
;
}
struct
ConfigOptions
{
enum
Renderability
{
kNo
kNonMSAA
kMSAA
}
;
Renderability
fRenderability
;
bool
fTexturable
=
false
;
}
;
bool
fInstanceAttribSupport
=
false
;
uint32_t
fMapBufferFlags
=
0
;
int
fMaxTextureSize
=
2048
;
int
fMaxRenderTargetSize
=
2048
;
int
fMaxVertexAttributes
=
16
;
ConfigOptions
fConfigOptions
[
kGrPixelConfigCnt
]
;
bool
fGeometryShaderSupport
=
false
;
bool
fIntegerSupport
=
false
;
bool
fFlatInterpolationSupport
=
false
;
int
fMaxVertexSamplers
=
0
;
int
fMaxFragmentSamplers
=
8
;
bool
fShaderDerivativeSupport
=
true
;
bool
fFailTextureAllocations
=
false
;
}
;
#
endif
