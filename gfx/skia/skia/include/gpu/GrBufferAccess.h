#
ifndef
GrBufferAccess_DEFINED
#
define
GrBufferAccess_DEFINED
#
include
"
GrBuffer
.
h
"
#
include
"
GrGpuResourceRef
.
h
"
class
GrBufferAccess
:
public
SkNoncopyable
{
public
:
void
reset
(
GrPixelConfig
texelConfig
GrBuffer
*
buffer
GrShaderFlags
visibility
=
kFragment_GrShaderFlag
)
{
fTexelConfig
=
texelConfig
;
fBuffer
.
set
(
SkRef
(
buffer
)
kRead_GrIOType
)
;
fVisibility
=
visibility
;
}
bool
operator
=
=
(
const
GrBufferAccess
&
that
)
const
{
return
fTexelConfig
=
=
that
.
fTexelConfig
&
&
this
-
>
buffer
(
)
=
=
that
.
buffer
(
)
&
&
fVisibility
=
=
that
.
fVisibility
;
}
bool
operator
!
=
(
const
GrBufferAccess
&
that
)
const
{
return
!
(
*
this
=
=
that
)
;
}
GrPixelConfig
texelConfig
(
)
const
{
return
fTexelConfig
;
}
GrBuffer
*
buffer
(
)
const
{
return
fBuffer
.
get
(
)
;
}
GrShaderFlags
visibility
(
)
const
{
return
fVisibility
;
}
const
GrGpuResourceRef
*
getProgramBuffer
(
)
const
{
return
&
fBuffer
;
}
private
:
GrPixelConfig
fTexelConfig
;
GrTGpuResourceRef
<
GrBuffer
>
fBuffer
;
GrShaderFlags
fVisibility
;
typedef
SkNoncopyable
INHERITED
;
}
;
#
endif
