#
ifndef
GrDriverBugWorkarounds_DEFINED
#
define
GrDriverBugWorkarounds_DEFINED
#
ifdef
SK_GPU_WORKAROUNDS_HEADER
#
include
SK_GPU_WORKAROUNDS_HEADER
#
else
#
include
"
GrDriverBugWorkaroundsAutogen
.
h
"
#
endif
#
include
"
SkTypes
.
h
"
#
include
<
stdint
.
h
>
#
include
<
vector
>
enum
GrDriverBugWorkaroundType
{
#
define
GPU_OP
(
type
name
)
type
GPU_DRIVER_BUG_WORKAROUNDS
(
GPU_OP
)
#
undef
GPU_OP
NUMBER_OF_GPU_DRIVER_BUG_WORKAROUND_TYPES
}
;
class
SK_API
GrDriverBugWorkarounds
{
public
:
GrDriverBugWorkarounds
(
)
;
explicit
GrDriverBugWorkarounds
(
const
std
:
:
vector
<
int32_t
>
&
workarounds
)
;
GrDriverBugWorkarounds
&
operator
=
(
const
GrDriverBugWorkarounds
&
)
=
default
;
void
applyOverrides
(
const
GrDriverBugWorkarounds
&
workarounds
)
;
~
GrDriverBugWorkarounds
(
)
;
#
define
GPU_OP
(
type
name
)
bool
name
=
false
;
GPU_DRIVER_BUG_WORKAROUNDS
(
GPU_OP
)
#
undef
GPU_OP
}
;
#
endif
