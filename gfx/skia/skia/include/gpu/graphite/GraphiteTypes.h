#
ifndef
skgpu_graphite_GraphiteTypes_DEFINED
#
define
skgpu_graphite_GraphiteTypes_DEFINED
#
include
"
include
/
core
/
SkPoint
.
h
"
#
include
"
include
/
core
/
SkRect
.
h
"
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
"
include
/
gpu
/
GpuTypes
.
h
"
#
include
<
memory
>
class
SkSurface
;
namespace
skgpu
{
class
MutableTextureState
;
}
namespace
skgpu
:
:
graphite
{
class
BackendSemaphore
;
class
Recording
;
class
Task
;
using
GpuFinishedContext
=
void
*
;
using
GpuFinishedProc
=
void
(
*
)
(
GpuFinishedContext
finishedContext
CallbackResult
)
;
using
GpuFinishedWithStatsProc
=
void
(
*
)
(
GpuFinishedContext
finishedContext
CallbackResult
const
GpuStats
&
)
;
struct
InsertRecordingInfo
{
Recording
*
fRecording
=
nullptr
;
SkSurface
*
fTargetSurface
=
nullptr
;
SkIVector
fTargetTranslation
=
{
0
0
}
;
SkIRect
fTargetClip
=
{
0
0
0
0
}
;
MutableTextureState
*
fTargetTextureState
=
nullptr
;
size_t
fNumWaitSemaphores
=
0
;
BackendSemaphore
*
fWaitSemaphores
=
nullptr
;
size_t
fNumSignalSemaphores
=
0
;
BackendSemaphore
*
fSignalSemaphores
=
nullptr
;
GpuStatsFlags
fGpuStatsFlags
=
GpuStatsFlags
:
:
kNone
;
GpuFinishedContext
fFinishedContext
=
nullptr
;
GpuFinishedProc
fFinishedProc
=
nullptr
;
GpuFinishedWithStatsProc
fFinishedWithStatsProc
=
nullptr
;
}
;
struct
InsertFinishInfo
{
InsertFinishInfo
(
)
=
default
;
InsertFinishInfo
(
GpuFinishedContext
context
GpuFinishedProc
proc
)
:
fFinishedContext
{
context
}
fFinishedProc
{
proc
}
{
}
InsertFinishInfo
(
GpuFinishedContext
context
GpuFinishedWithStatsProc
proc
)
:
fFinishedContext
{
context
}
fFinishedWithStatsProc
{
proc
}
{
}
GpuFinishedContext
fFinishedContext
=
nullptr
;
GpuFinishedProc
fFinishedProc
=
nullptr
;
GpuFinishedWithStatsProc
fFinishedWithStatsProc
=
nullptr
;
GpuStatsFlags
fGpuStatsFlags
=
GpuStatsFlags
:
:
kNone
;
}
;
enum
class
SyncToCpu
:
bool
{
kYes
=
true
kNo
=
false
}
;
enum
class
Volatile
:
bool
{
kNo
=
false
kYes
=
true
}
;
enum
class
DepthStencilFlags
:
int
{
kNone
=
0b000
kDepth
=
0b001
kStencil
=
0b010
kDepthStencil
=
kDepth
|
kStencil
}
;
enum
DrawTypeFlags
:
uint16_t
{
kNone
=
0
kBitmapText_Mask
=
1
<
<
0
kBitmapText_LCD
=
1
<
<
1
kBitmapText_Color
=
1
<
<
2
kSDFText
=
1
<
<
3
kSDFText_LCD
=
1
<
<
4
kDrawVertices
=
1
<
<
5
kCircularArc
=
1
<
<
6
kSimpleShape
=
1
<
<
7
kNonSimpleShape
=
1
<
<
8
kLast
=
kNonSimpleShape
}
;
}
#
endif
