#
ifndef
skgpu_graphite_precompile_PrecompileBlender_DEFINED
#
define
skgpu_graphite_precompile_PrecompileBlender_DEFINED
#
include
"
include
/
core
/
SkBlendMode
.
h
"
#
include
"
include
/
gpu
/
graphite
/
precompile
/
PrecompileBase
.
h
"
#
include
<
optional
>
namespace
skgpu
:
:
graphite
{
class
PrecompileBlenderPriv
;
class
SK_API
PrecompileBlender
:
public
PrecompileBase
{
public
:
PrecompileBlenderPriv
priv
(
)
;
const
PrecompileBlenderPriv
priv
(
)
const
;
protected
:
friend
class
PrecompileBlenderPriv
;
virtual
std
:
:
optional
<
SkBlendMode
>
asBlendMode
(
)
const
{
return
{
}
;
}
PrecompileBlender
(
)
:
PrecompileBase
(
Type
:
:
kBlender
)
{
}
~
PrecompileBlender
(
)
override
;
}
;
namespace
PrecompileBlenders
{
SK_API
sk_sp
<
PrecompileBlender
>
Arithmetic
(
)
;
SK_API
sk_sp
<
PrecompileBlender
>
Mode
(
SkBlendMode
)
;
}
}
#
endif
