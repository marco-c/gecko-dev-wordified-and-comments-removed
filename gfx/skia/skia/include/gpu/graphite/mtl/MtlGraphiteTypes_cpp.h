#
ifndef
skgpu_graphite_MtlGraphiteTypesUtils_DEFINED
#
define
skgpu_graphite_MtlGraphiteTypesUtils_DEFINED
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
"
include
/
gpu
/
graphite
/
BackendTexture
.
h
"
#
include
"
include
/
gpu
/
graphite
/
TextureInfo
.
h
"
#
include
"
include
/
private
/
base
/
SkAPI
.
h
"
#
import
<
CoreFoundation
/
CoreFoundation
.
h
>
namespace
skgpu
:
:
graphite
{
class
SK_API
MtlTextureInfo
;
namespace
TextureInfos
{
SK_API
TextureInfo
MakeMetal
(
const
MtlTextureInfo
&
)
;
SK_API
TextureInfo
MakeMetal
(
CFTypeRef
mtlTexture
)
;
SK_API
bool
GetMtlTextureInfo
(
const
TextureInfo
&
MtlTextureInfo
*
)
;
}
namespace
BackendTextures
{
SK_API
BackendTexture
MakeMetal
(
SkISize
dimensions
CFTypeRef
mtlTexture
)
;
SK_API
CFTypeRef
GetMtlTexture
(
const
BackendTexture
&
)
;
}
namespace
BackendSemaphores
{
SK_API
BackendSemaphore
MakeMetal
(
CFTypeRef
mtlEvent
uint64_t
value
)
;
SK_API
CFTypeRef
GetMtlEvent
(
const
BackendSemaphore
&
)
;
SK_API
uint64_t
GetMtlValue
(
const
BackendSemaphore
&
)
;
}
}
#
endif
