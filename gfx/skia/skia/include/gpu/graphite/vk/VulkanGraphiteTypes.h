#
ifndef
skgpu_graphite_VulkanGraphiteTypes_DEFINED
#
define
skgpu_graphite_VulkanGraphiteTypes_DEFINED
#
include
"
include
/
gpu
/
graphite
/
GraphiteTypes
.
h
"
#
include
"
include
/
gpu
/
vk
/
VulkanTypes
.
h
"
namespace
skgpu
:
:
graphite
{
struct
VulkanTextureInfo
{
uint32_t
fSampleCount
=
1
;
Mipmapped
fMipmapped
=
Mipmapped
:
:
kNo
;
VkImageCreateFlags
fFlags
=
0
;
VkFormat
fFormat
=
VK_FORMAT_UNDEFINED
;
VkImageTiling
fImageTiling
=
VK_IMAGE_TILING_OPTIMAL
;
VkImageUsageFlags
fImageUsageFlags
=
0
;
VkSharingMode
fSharingMode
=
VK_SHARING_MODE_EXCLUSIVE
;
VkImageAspectFlags
fAspectMask
=
VK_IMAGE_ASPECT_COLOR_BIT
;
VulkanYcbcrConversionInfo
fYcbcrConversionInfo
;
VulkanTextureInfo
(
)
=
default
;
VulkanTextureInfo
(
uint32_t
sampleCount
Mipmapped
mipmapped
VkImageCreateFlags
flags
VkFormat
format
VkImageTiling
imageTiling
VkImageUsageFlags
imageUsageFlags
VkSharingMode
sharingMode
VkImageAspectFlags
aspectMask
VulkanYcbcrConversionInfo
ycbcrConversionInfo
)
:
fSampleCount
(
sampleCount
)
fMipmapped
(
mipmapped
)
fFlags
(
flags
)
fFormat
(
format
)
fImageTiling
(
imageTiling
)
fImageUsageFlags
(
imageUsageFlags
)
fSharingMode
(
sharingMode
)
fAspectMask
(
aspectMask
)
fYcbcrConversionInfo
(
ycbcrConversionInfo
)
{
}
}
;
}
#
endif
