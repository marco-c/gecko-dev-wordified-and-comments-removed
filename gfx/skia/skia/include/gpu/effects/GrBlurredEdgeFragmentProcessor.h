#
ifndef
GrBlurredEdgeFragmentProcessor_DEFINED
#
define
GrBlurredEdgeFragmentProcessor_DEFINED
#
include
"
GrFragmentProcessor
.
h
"
class
GrBlurredEdgeFP
:
public
GrFragmentProcessor
{
public
:
enum
Mode
{
kGaussian_Mode
kSmoothstep_Mode
kLastMode
=
kSmoothstep_Mode
}
;
static
const
int
kModeCnt
=
kLastMode
+
1
;
static
sk_sp
<
GrFragmentProcessor
>
Make
(
Mode
mode
=
kGaussian_Mode
)
{
return
sk_sp
<
GrFragmentProcessor
>
(
new
GrBlurredEdgeFP
(
mode
)
)
;
}
const
char
*
name
(
)
const
override
{
return
"
BlurredEdge
"
;
}
Mode
mode
(
)
const
{
return
fMode
;
}
private
:
GrBlurredEdgeFP
(
Mode
mode
)
:
INHERITED
(
kNone_OptimizationFlags
)
fMode
(
mode
)
{
this
-
>
setWillUseDistanceVectorField
(
)
;
this
-
>
initClassID
<
GrBlurredEdgeFP
>
(
)
;
}
GrGLSLFragmentProcessor
*
onCreateGLSLInstance
(
)
const
override
;
void
onGetGLSLProcessorKey
(
const
GrShaderCaps
&
GrProcessorKeyBuilder
*
)
const
override
;
bool
onIsEqual
(
const
GrFragmentProcessor
&
)
const
override
;
GR_DECLARE_FRAGMENT_PROCESSOR_TEST
;
Mode
fMode
;
typedef
GrFragmentProcessor
INHERITED
;
}
;
#
endif
