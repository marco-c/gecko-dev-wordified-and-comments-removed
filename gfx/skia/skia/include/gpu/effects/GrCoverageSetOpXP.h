#
ifndef
GrCoverageSetOpXP_DEFINED
#
define
GrCoverageSetOpXP_DEFINED
#
include
"
GrTypes
.
h
"
#
include
"
GrXferProcessor
.
h
"
#
include
"
SkRegion
.
h
"
class
GrProcOptInfo
;
class
GrCoverageSetOpXPFactory
:
public
GrXPFactory
{
public
:
static
GrXPFactory
*
Create
(
SkRegion
:
:
Op
regionOp
bool
invertCoverage
=
false
)
;
void
getInvariantBlendedColor
(
const
GrProcOptInfo
&
colorPOI
GrXPFactory
:
:
InvariantBlendedColor
*
)
const
override
;
private
:
GrCoverageSetOpXPFactory
(
SkRegion
:
:
Op
regionOp
bool
invertCoverage
)
;
GrXferProcessor
*
onCreateXferProcessor
(
const
GrCaps
&
caps
const
GrPipelineOptimizations
&
optimizations
bool
hasMixedSamples
const
DstTexture
*
)
const
override
;
bool
onWillReadDstColor
(
const
GrCaps
&
const
GrPipelineOptimizations
&
bool
)
const
override
{
return
false
;
}
bool
onIsEqual
(
const
GrXPFactory
&
xpfBase
)
const
override
{
const
GrCoverageSetOpXPFactory
&
xpf
=
xpfBase
.
cast
<
GrCoverageSetOpXPFactory
>
(
)
;
return
fRegionOp
=
=
xpf
.
fRegionOp
;
}
GR_DECLARE_XP_FACTORY_TEST
;
SkRegion
:
:
Op
fRegionOp
;
bool
fInvertCoverage
;
typedef
GrXPFactory
INHERITED
;
}
;
#
endif
