#
ifndef
GrTextureAccess_DEFINED
#
define
GrTextureAccess_DEFINED
#
include
"
GrGpuResourceRef
.
h
"
#
include
"
GrTexture
.
h
"
#
include
"
GrTextureParams
.
h
"
#
include
"
SkRefCnt
.
h
"
#
include
"
SkShader
.
h
"
class
GrTextureAccess
:
public
SkNoncopyable
{
public
:
GrTextureAccess
(
)
;
GrTextureAccess
(
GrTexture
*
const
GrTextureParams
&
)
;
explicit
GrTextureAccess
(
GrTexture
*
GrTextureParams
:
:
FilterMode
=
GrTextureParams
:
:
kNone_FilterMode
SkShader
:
:
TileMode
tileXAndY
=
SkShader
:
:
kClamp_TileMode
)
;
void
reset
(
GrTexture
*
const
GrTextureParams
&
)
;
void
reset
(
GrTexture
*
GrTextureParams
:
:
FilterMode
=
GrTextureParams
:
:
kNone_FilterMode
SkShader
:
:
TileMode
tileXAndY
=
SkShader
:
:
kClamp_TileMode
)
;
bool
operator
=
=
(
const
GrTextureAccess
&
that
)
const
{
return
this
-
>
getTexture
(
)
=
=
that
.
getTexture
(
)
&
&
fParams
=
=
that
.
fParams
;
}
bool
operator
!
=
(
const
GrTextureAccess
&
other
)
const
{
return
!
(
*
this
=
=
other
)
;
}
GrTexture
*
getTexture
(
)
const
{
return
fTexture
.
get
(
)
;
}
const
GrGpuResourceRef
*
getProgramTexture
(
)
const
{
return
&
fTexture
;
}
const
GrTextureParams
&
getParams
(
)
const
{
return
fParams
;
}
private
:
typedef
GrTGpuResourceRef
<
GrTexture
>
ProgramTexture
;
ProgramTexture
fTexture
;
GrTextureParams
fParams
;
typedef
SkNoncopyable
INHERITED
;
}
;
#
endif
