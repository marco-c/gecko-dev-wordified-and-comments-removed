#
ifndef
SkPictureAnalyzer_DEFINED
#
define
SkPictureAnalyzer_DEFINED
#
include
"
SkCanvas
.
h
"
#
include
"
SkRefCnt
.
h
"
#
include
"
SkRegion
.
h
"
#
include
"
SkTypes
.
h
"
#
if
SK_SUPPORT_GPU
#
include
"
GrContext
.
h
"
class
SkPath
;
class
SkPicture
;
class
SK_API
SkPictureGpuAnalyzer
final
:
public
SkNoncopyable
{
public
:
explicit
SkPictureGpuAnalyzer
(
sk_sp
<
GrContextThreadSafeProxy
>
=
nullptr
)
;
explicit
SkPictureGpuAnalyzer
(
const
sk_sp
<
SkPicture
>
&
picture
sk_sp
<
GrContextThreadSafeProxy
>
=
nullptr
)
;
void
analyzePicture
(
const
SkPicture
*
)
;
void
analyzeClipPath
(
const
SkPath
&
SkClipOp
bool
doAntiAlias
)
;
void
reset
(
)
;
bool
suitableForGpuRasterization
(
const
char
*
*
whyNot
=
nullptr
)
const
;
uint32_t
numSlowGpuCommands
(
)
{
return
fNumSlowPaths
;
}
private
:
uint32_t
fNumSlowPaths
;
typedef
SkNoncopyable
INHERITED
;
}
;
#
endif
#
endif
