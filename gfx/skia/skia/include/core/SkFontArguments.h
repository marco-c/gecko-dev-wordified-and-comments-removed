#
ifndef
SkFontArguments_DEFINED
#
define
SkFontArguments_DEFINED
#
include
"
include
/
core
/
SkColor
.
h
"
#
include
"
include
/
core
/
SkFourByteTag
.
h
"
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
<
cstdint
>
struct
SkFontArguments
{
struct
VariationPosition
{
struct
Coordinate
{
SkFourByteTag
axis
;
float
value
;
}
;
const
Coordinate
*
coordinates
;
int
coordinateCount
;
}
;
struct
Palette
{
struct
Override
{
uint16_t
index
;
SkColor
color
;
}
;
int
index
;
const
Override
*
overrides
;
int
overrideCount
;
}
;
SkFontArguments
(
)
:
fCollectionIndex
(
0
)
fVariationDesignPosition
{
nullptr
0
}
fPalette
{
0
nullptr
0
}
{
}
SkFontArguments
&
setCollectionIndex
(
int
collectionIndex
)
{
fCollectionIndex
=
collectionIndex
;
return
*
this
;
}
SkFontArguments
&
setVariationDesignPosition
(
VariationPosition
position
)
{
fVariationDesignPosition
.
coordinates
=
position
.
coordinates
;
fVariationDesignPosition
.
coordinateCount
=
position
.
coordinateCount
;
return
*
this
;
}
int
getCollectionIndex
(
)
const
{
return
fCollectionIndex
;
}
VariationPosition
getVariationDesignPosition
(
)
const
{
return
fVariationDesignPosition
;
}
SkFontArguments
&
setPalette
(
Palette
palette
)
{
fPalette
.
index
=
palette
.
index
;
fPalette
.
overrides
=
palette
.
overrides
;
fPalette
.
overrideCount
=
palette
.
overrideCount
;
return
*
this
;
}
Palette
getPalette
(
)
const
{
return
fPalette
;
}
private
:
int
fCollectionIndex
;
VariationPosition
fVariationDesignPosition
;
Palette
fPalette
;
}
;
#
endif
