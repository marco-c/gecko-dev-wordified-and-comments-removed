#
ifndef
SkFontAgruments_DEFINED
#
define
SkFontAgruments_DEFINED
#
include
"
SkScalar
.
h
"
#
include
"
SkTypes
.
h
"
struct
SkFontArguments
{
struct
VariationPosition
{
struct
Coordinate
{
SkFourByteTag
axis
;
SkScalar
value
;
}
;
const
Coordinate
*
coordinates
;
int
coordinateCount
;
}
;
struct
Axis
{
SkFourByteTag
fTag
;
SkScalar
fStyleValue
;
}
;
SkFontArguments
(
)
:
fCollectionIndex
(
0
)
fVariationDesignPosition
{
nullptr
0
}
{
}
SkFontArguments
&
setCollectionIndex
(
int
collectionIndex
)
{
fCollectionIndex
=
collectionIndex
;
return
*
this
;
}
SkFontArguments
&
setAxes
(
const
Axis
*
axes
int
axisCount
)
{
fVariationDesignPosition
.
coordinates
=
reinterpret_cast
<
const
VariationPosition
:
:
Coordinate
*
>
(
axes
)
;
fVariationDesignPosition
.
coordinateCount
=
axisCount
;
return
*
this
;
}
SkFontArguments
&
setVariationDesignPosition
(
VariationPosition
position
)
{
fVariationDesignPosition
.
coordinates
=
position
.
coordinates
;
fVariationDesignPosition
.
coordinateCount
=
position
.
coordinateCount
;
return
*
this
;
}
int
getCollectionIndex
(
)
const
{
return
fCollectionIndex
;
}
const
Axis
*
getAxes
(
int
*
axisCount
)
const
{
*
axisCount
=
fVariationDesignPosition
.
coordinateCount
;
return
reinterpret_cast
<
const
Axis
*
>
(
fVariationDesignPosition
.
coordinates
)
;
}
VariationPosition
getVariationDesignPosition
(
)
const
{
return
fVariationDesignPosition
;
}
private
:
int
fCollectionIndex
;
VariationPosition
fVariationDesignPosition
;
}
;
#
endif
