#
ifndef
SkTime_DEFINED
#
define
SkTime_DEFINED
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
"
include
/
private
/
base
/
SkMacros
.
h
"
#
include
<
cinttypes
>
class
SkString
;
class
SK_API
SkTime
{
public
:
struct
DateTime
{
int16_t
fTimeZoneMinutes
;
uint16_t
fYear
;
uint8_t
fMonth
;
uint8_t
fDayOfWeek
;
uint8_t
fDay
;
uint8_t
fHour
;
uint8_t
fMinute
;
uint8_t
fSecond
;
void
toISO8601
(
SkString
*
dst
)
const
;
}
;
static
void
GetDateTime
(
DateTime
*
)
;
static
double
GetSecs
(
)
{
return
GetNSecs
(
)
*
1e
-
9
;
}
static
double
GetMSecs
(
)
{
return
GetNSecs
(
)
*
1e
-
6
;
}
static
double
GetNSecs
(
)
;
}
;
class
SkAutoTime
{
public
:
SkAutoTime
(
const
char
*
label
=
nullptr
)
:
fLabel
(
label
)
fNow
(
SkTime
:
:
GetMSecs
(
)
)
{
}
~
SkAutoTime
(
)
{
uint64_t
dur
=
static_cast
<
uint64_t
>
(
SkTime
:
:
GetMSecs
(
)
-
fNow
)
;
SkDebugf
(
"
%
s
%
"
PRIu64
"
\
n
"
fLabel
?
fLabel
:
"
"
dur
)
;
}
private
:
const
char
*
fLabel
;
double
fNow
;
}
;
#
endif
