#
ifndef
SkCrossContextImageData_DEFINED
#
define
SkCrossContextImageData_DEFINED
#
include
"
SkImage
.
h
"
#
if
SK_SUPPORT_GPU
#
include
"
GrExternalTextureData
.
h
"
#
endif
class
SK_API
SkCrossContextImageData
:
SkNoncopyable
{
public
:
static
std
:
:
unique_ptr
<
SkCrossContextImageData
>
MakeFromEncoded
(
GrContext
*
sk_sp
<
SkData
>
SkColorSpace
*
dstColorSpace
)
;
private
:
SkCrossContextImageData
(
sk_sp
<
SkImage
>
image
)
:
fImage
(
std
:
:
move
(
image
)
)
{
SkASSERT
(
!
fImage
-
>
isTextureBacked
(
)
)
;
}
#
if
SK_SUPPORT_GPU
SkCrossContextImageData
(
const
GrBackendTextureDesc
&
desc
std
:
:
unique_ptr
<
GrExternalTextureData
>
textureData
SkAlphaType
alphaType
sk_sp
<
SkColorSpace
>
colorSpace
)
:
fAlphaType
(
alphaType
)
fColorSpace
(
std
:
:
move
(
colorSpace
)
)
fDesc
(
desc
)
fTextureData
(
std
:
:
move
(
textureData
)
)
{
fDesc
.
fTextureHandle
=
fTextureData
-
>
getBackendObject
(
)
;
}
#
endif
sk_sp
<
SkImage
>
fImage
;
#
if
SK_SUPPORT_GPU
SkAlphaType
fAlphaType
;
sk_sp
<
SkColorSpace
>
fColorSpace
;
GrBackendTextureDesc
fDesc
;
std
:
:
unique_ptr
<
GrExternalTextureData
>
fTextureData
;
#
endif
friend
class
SkImage
;
}
;
#
endif
