#
ifndef
SkRSXform_DEFINED
#
define
SkRSXform_DEFINED
#
include
"
SkScalar
.
h
"
struct
SkRSXform
{
static
SkRSXform
Make
(
SkScalar
scos
SkScalar
ssin
SkScalar
tx
SkScalar
ty
)
{
SkRSXform
xform
=
{
scos
ssin
tx
ty
}
;
return
xform
;
}
static
SkRSXform
MakeFromRadians
(
SkScalar
scale
SkScalar
radians
SkScalar
tx
SkScalar
ty
SkScalar
ax
SkScalar
ay
)
{
const
SkScalar
s
=
SkScalarSin
(
radians
)
*
scale
;
const
SkScalar
c
=
SkScalarCos
(
radians
)
*
scale
;
return
Make
(
c
s
tx
+
-
c
*
ax
+
s
*
ay
ty
+
-
s
*
ax
-
c
*
ay
)
;
}
SkScalar
fSCos
;
SkScalar
fSSin
;
SkScalar
fTx
;
SkScalar
fTy
;
bool
rectStaysRect
(
)
const
{
return
0
=
=
fSCos
|
|
0
=
=
fSSin
;
}
void
setIdentity
(
)
{
fSCos
=
1
;
fSSin
=
fTx
=
fTy
=
0
;
}
void
set
(
SkScalar
scos
SkScalar
ssin
SkScalar
tx
SkScalar
ty
)
{
fSCos
=
scos
;
fSSin
=
ssin
;
fTx
=
tx
;
fTy
=
ty
;
}
void
toQuad
(
SkScalar
width
SkScalar
height
SkPoint
quad
[
4
]
)
const
;
void
toQuad
(
const
SkSize
&
size
SkPoint
quad
[
4
]
)
const
{
this
-
>
toQuad
(
size
.
width
(
)
size
.
height
(
)
quad
)
;
}
}
;
#
endif
