#
ifndef
SkExecutor_DEFINED
#
define
SkExecutor_DEFINED
#
include
<
functional
>
#
include
<
memory
>
#
include
"
include
/
core
/
SkTypes
.
h
"
class
SK_API
SkExecutor
{
public
:
virtual
~
SkExecutor
(
)
;
static
std
:
:
unique_ptr
<
SkExecutor
>
MakeFIFOThreadPool
(
int
threads
=
0
bool
allowBorrowing
=
true
)
;
static
std
:
:
unique_ptr
<
SkExecutor
>
MakeLIFOThreadPool
(
int
threads
=
0
bool
allowBorrowing
=
true
)
;
static
SkExecutor
&
GetDefault
(
)
;
static
void
SetDefault
(
SkExecutor
*
)
;
virtual
void
add
(
std
:
:
function
<
void
(
void
)
>
)
=
0
;
virtual
void
borrow
(
)
{
}
protected
:
SkExecutor
(
)
=
default
;
SkExecutor
(
const
SkExecutor
&
)
=
delete
;
SkExecutor
&
operator
=
(
const
SkExecutor
&
)
=
delete
;
}
;
#
endif
