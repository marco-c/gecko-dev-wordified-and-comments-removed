#
ifndef
SkSurfaceProps_DEFINED
#
define
SkSurfaceProps_DEFINED
#
include
"
SkTypes
.
h
"
enum
SkPixelGeometry
{
kUnknown_SkPixelGeometry
kRGB_H_SkPixelGeometry
kBGR_H_SkPixelGeometry
kRGB_V_SkPixelGeometry
kBGR_V_SkPixelGeometry
}
;
static
inline
bool
SkPixelGeometryIsRGB
(
SkPixelGeometry
geo
)
{
return
kRGB_H_SkPixelGeometry
=
=
geo
|
|
kRGB_V_SkPixelGeometry
=
=
geo
;
}
static
inline
bool
SkPixelGeometryIsBGR
(
SkPixelGeometry
geo
)
{
return
kBGR_H_SkPixelGeometry
=
=
geo
|
|
kBGR_V_SkPixelGeometry
=
=
geo
;
}
static
inline
bool
SkPixelGeometryIsH
(
SkPixelGeometry
geo
)
{
return
kRGB_H_SkPixelGeometry
=
=
geo
|
|
kBGR_H_SkPixelGeometry
=
=
geo
;
}
static
inline
bool
SkPixelGeometryIsV
(
SkPixelGeometry
geo
)
{
return
kRGB_V_SkPixelGeometry
=
=
geo
|
|
kBGR_V_SkPixelGeometry
=
=
geo
;
}
class
SK_API
SkSurfaceProps
{
public
:
enum
Flags
{
kUseDeviceIndependentFonts_Flag
=
1
<
<
0
}
;
static
const
Flags
kUseDistanceFieldFonts_Flag
=
kUseDeviceIndependentFonts_Flag
;
SkSurfaceProps
(
uint32_t
flags
SkPixelGeometry
)
;
enum
InitType
{
kLegacyFontHost_InitType
}
;
SkSurfaceProps
(
InitType
)
;
SkSurfaceProps
(
uint32_t
flags
InitType
)
;
SkSurfaceProps
(
const
SkSurfaceProps
&
other
)
;
uint32_t
flags
(
)
const
{
return
fFlags
;
}
SkPixelGeometry
pixelGeometry
(
)
const
{
return
fPixelGeometry
;
}
bool
isUseDeviceIndependentFonts
(
)
const
{
return
SkToBool
(
fFlags
&
kUseDeviceIndependentFonts_Flag
)
;
}
bool
operator
=
=
(
const
SkSurfaceProps
&
that
)
const
{
return
fFlags
=
=
that
.
fFlags
&
&
fPixelGeometry
=
=
that
.
fPixelGeometry
;
}
private
:
SkSurfaceProps
(
)
;
uint32_t
fFlags
;
SkPixelGeometry
fPixelGeometry
;
}
;
#
endif
