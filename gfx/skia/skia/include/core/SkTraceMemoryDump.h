#
ifndef
SkTraceMemoryDump_DEFINED
#
define
SkTraceMemoryDump_DEFINED
#
include
"
SkTypes
.
h
"
class
SkDiscardableMemory
;
class
SK_API
SkTraceMemoryDump
{
public
:
enum
LevelOfDetail
{
kLight_LevelOfDetail
kObjectsBreakdowns_LevelOfDetail
}
;
virtual
void
dumpNumericValue
(
const
char
*
dumpName
const
char
*
valueName
const
char
*
units
uint64_t
value
)
=
0
;
virtual
void
dumpStringValue
(
const
char
*
const
char
*
const
char
*
)
{
}
virtual
void
setMemoryBacking
(
const
char
*
dumpName
const
char
*
backingType
const
char
*
backingObjectId
)
=
0
;
virtual
void
setDiscardableMemoryBacking
(
const
char
*
dumpName
const
SkDiscardableMemory
&
discardableMemoryObject
)
=
0
;
virtual
LevelOfDetail
getRequestedDetails
(
)
const
=
0
;
virtual
bool
shouldDumpWrappedObjects
(
)
const
{
return
true
;
}
protected
:
virtual
~
SkTraceMemoryDump
(
)
{
}
}
;
#
endif
