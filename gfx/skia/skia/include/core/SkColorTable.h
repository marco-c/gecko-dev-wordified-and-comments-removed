#
ifndef
SkColorTable_DEFINED
#
define
SkColorTable_DEFINED
#
include
"
include
/
core
/
SkBitmap
.
h
"
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
private
/
base
/
SkAPI
.
h
"
#
include
<
cstdint
>
class
SkReadBuffer
;
class
SkWriteBuffer
;
class
SK_API
SkColorTable
:
public
SkRefCnt
{
public
:
static
sk_sp
<
SkColorTable
>
Make
(
const
uint8_t
table
[
256
]
)
{
return
Make
(
table
table
table
table
)
;
}
static
sk_sp
<
SkColorTable
>
Make
(
const
uint8_t
tableA
[
256
]
const
uint8_t
tableR
[
256
]
const
uint8_t
tableG
[
256
]
const
uint8_t
tableB
[
256
]
)
;
const
uint8_t
*
alphaTable
(
)
const
{
return
fTable
.
getAddr8
(
0
0
)
;
}
const
uint8_t
*
redTable
(
)
const
{
return
fTable
.
getAddr8
(
0
1
)
;
}
const
uint8_t
*
greenTable
(
)
const
{
return
fTable
.
getAddr8
(
0
2
)
;
}
const
uint8_t
*
blueTable
(
)
const
{
return
fTable
.
getAddr8
(
0
3
)
;
}
void
flatten
(
SkWriteBuffer
&
buffer
)
const
;
static
sk_sp
<
SkColorTable
>
Deserialize
(
SkReadBuffer
&
buffer
)
;
private
:
friend
class
SkTableColorFilter
;
SkColorTable
(
const
SkBitmap
&
table
)
:
fTable
(
table
)
{
}
const
SkBitmap
&
bitmap
(
)
const
{
return
fTable
;
}
SkBitmap
fTable
;
}
;
#
endif
