#
ifndef
SkMath_DEFINED
#
define
SkMath_DEFINED
#
include
"
include
/
core
/
SkTypes
.
h
"
static
inline
int64_t
sk_64_mul
(
int64_t
a
int64_t
b
)
{
return
a
*
b
;
}
static
inline
int
SkClampMax
(
int
value
int
max
)
{
SkASSERT
(
max
>
=
0
)
;
if
(
value
<
0
)
{
value
=
0
;
}
if
(
value
>
max
)
{
value
=
max
;
}
return
value
;
}
template
<
typename
T
>
constexpr
inline
bool
SkIsPow2
(
T
value
)
{
return
(
value
&
(
value
-
1
)
)
=
=
0
;
}
static
inline
unsigned
SkMul16ShiftRound
(
U16CPU
a
U16CPU
b
int
shift
)
{
SkASSERT
(
a
<
=
32767
)
;
SkASSERT
(
b
<
=
32767
)
;
SkASSERT
(
shift
>
0
&
&
shift
<
=
8
)
;
unsigned
prod
=
a
*
b
+
(
1
<
<
(
shift
-
1
)
)
;
return
(
prod
+
(
prod
>
>
shift
)
)
>
>
shift
;
}
static
inline
U8CPU
SkMulDiv255Round
(
U16CPU
a
U16CPU
b
)
{
SkASSERT
(
a
<
=
32767
)
;
SkASSERT
(
b
<
=
32767
)
;
unsigned
prod
=
a
*
b
+
128
;
return
(
prod
+
(
prod
>
>
8
)
)
>
>
8
;
}
#
endif
