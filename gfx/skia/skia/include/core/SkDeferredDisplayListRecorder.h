#
ifndef
SkDeferredDisplayListRecorder_DEFINED
#
define
SkDeferredDisplayListRecorder_DEFINED
#
include
"
include
/
core
/
SkImageInfo
.
h
"
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
core
/
SkSurfaceCharacterization
.
h
"
#
include
"
include
/
core
/
SkTypes
.
h
"
#
include
"
include
/
private
/
SkDeferredDisplayList
.
h
"
class
GrBackendFormat
;
class
GrBackendTexture
;
class
GrContext
;
class
SkCanvas
;
class
SkImage
;
class
SkPromiseImageTexture
;
class
SkSurface
;
struct
SkYUVAIndex
;
struct
SkYUVASizeInfo
;
class
SK_API
SkDeferredDisplayListRecorder
{
public
:
SkDeferredDisplayListRecorder
(
const
SkSurfaceCharacterization
&
)
;
~
SkDeferredDisplayListRecorder
(
)
;
const
SkSurfaceCharacterization
&
characterization
(
)
const
{
return
fCharacterization
;
}
SkCanvas
*
getCanvas
(
)
;
std
:
:
unique_ptr
<
SkDeferredDisplayList
>
detach
(
)
;
using
PromiseImageTextureContext
=
void
*
;
using
PromiseImageTextureFulfillProc
=
sk_sp
<
SkPromiseImageTexture
>
(
*
)
(
PromiseImageTextureContext
)
;
using
PromiseImageTextureReleaseProc
=
void
(
*
)
(
PromiseImageTextureContext
)
;
using
PromiseImageTextureDoneProc
=
void
(
*
)
(
PromiseImageTextureContext
)
;
enum
class
PromiseImageApiVersion
{
kLegacy
kNew
}
;
sk_sp
<
SkImage
>
makePromiseTexture
(
const
GrBackendFormat
&
backendFormat
int
width
int
height
GrMipMapped
mipMapped
GrSurfaceOrigin
origin
SkColorType
colorType
SkAlphaType
alphaType
sk_sp
<
SkColorSpace
>
colorSpace
PromiseImageTextureFulfillProc
textureFulfillProc
PromiseImageTextureReleaseProc
textureReleaseProc
PromiseImageTextureDoneProc
textureDoneProc
PromiseImageTextureContext
textureContext
PromiseImageApiVersion
version
=
PromiseImageApiVersion
:
:
kLegacy
)
;
sk_sp
<
SkImage
>
makeYUVAPromiseTexture
(
SkYUVColorSpace
yuvColorSpace
const
GrBackendFormat
yuvaFormats
[
]
const
SkISize
yuvaSizes
[
]
const
SkYUVAIndex
yuvaIndices
[
4
]
int
imageWidth
int
imageHeight
GrSurfaceOrigin
imageOrigin
sk_sp
<
SkColorSpace
>
imageColorSpace
PromiseImageTextureFulfillProc
textureFulfillProc
PromiseImageTextureReleaseProc
textureReleaseProc
PromiseImageTextureDoneProc
textureDoneProc
PromiseImageTextureContext
textureContexts
[
]
PromiseImageApiVersion
version
=
PromiseImageApiVersion
:
:
kLegacy
)
;
private
:
bool
init
(
)
;
const
SkSurfaceCharacterization
fCharacterization
;
#
if
SK_SUPPORT_GPU
sk_sp
<
GrContext
>
fContext
;
sk_sp
<
SkDeferredDisplayList
:
:
LazyProxyData
>
fLazyProxyData
;
sk_sp
<
SkSurface
>
fSurface
;
#
endif
}
;
#
endif
