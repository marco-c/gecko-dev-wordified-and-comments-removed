#
ifndef
SkTypeface_win_DEFINED
#
define
SkTypeface_win_DEFINED
#
include
"
include
/
core
/
SkTypeface
.
h
"
#
include
"
include
/
core
/
SkTypes
.
h
"
#
ifdef
SK_BUILD_FOR_WIN
#
ifdef
UNICODE
typedef
struct
tagLOGFONTW
LOGFONTW
;
typedef
LOGFONTW
LOGFONT
;
#
else
typedef
struct
tagLOGFONTA
LOGFONTA
;
typedef
LOGFONTA
LOGFONT
;
#
endif
SK_API
SkTypeface
*
SkCreateTypefaceFromLOGFONT
(
const
LOGFONT
&
)
;
SK_API
void
SkLOGFONTFromTypeface
(
const
SkTypeface
*
typeface
LOGFONT
*
lf
)
;
SK_API
void
SkTypeface_SetEnsureLOGFONTAccessibleProc
(
void
(
*
)
(
const
LOGFONT
&
)
)
;
class
SkFontMgr
;
class
SkRemotableFontMgr
;
struct
IDWriteFactory
;
struct
IDWriteFontCollection
;
struct
IDWriteFontFallback
;
struct
IDWriteFontFace
;
SK_API
SkTypeface
*
SkCreateTypefaceFromDWriteFont
(
IDWriteFactory
*
aFactory
IDWriteFontFace
*
aFontFace
SkFontStyle
aStyle
int
aRenderingMode
float
aGamma
float
aContrast
)
;
SK_API
sk_sp
<
SkFontMgr
>
SkFontMgr_New_GDI
(
)
;
SK_API
sk_sp
<
SkFontMgr
>
SkFontMgr_New_DirectWrite
(
IDWriteFactory
*
factory
=
NULL
IDWriteFontCollection
*
collection
=
NULL
)
;
SK_API
sk_sp
<
SkFontMgr
>
SkFontMgr_New_DirectWrite
(
IDWriteFactory
*
factory
IDWriteFontCollection
*
collection
IDWriteFontFallback
*
fallback
)
;
SK_API
sk_sp
<
SkFontMgr
>
SkFontMgr_New_DirectWriteRenderer
(
sk_sp
<
SkRemotableFontMgr
>
)
;
SK_API
sk_sp
<
SkRemotableFontMgr
>
SkRemotableFontMgr_New_DirectWrite
(
)
;
#
endif
#
endif
