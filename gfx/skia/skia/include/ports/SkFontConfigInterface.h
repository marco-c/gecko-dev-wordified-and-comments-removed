#
ifndef
SkFontConfigInterface_DEFINED
#
define
SkFontConfigInterface_DEFINED
#
include
"
include
/
core
/
SkFontStyle
.
h
"
#
include
"
include
/
core
/
SkRefCnt
.
h
"
#
include
"
include
/
core
/
SkStream
.
h
"
#
include
"
include
/
core
/
SkTypeface
.
h
"
class
SkFontMgr
;
class
SK_API
SkFontConfigInterface
:
public
SkRefCnt
{
public
:
static
sk_sp
<
SkFontConfigInterface
>
RefGlobal
(
)
;
static
void
SetGlobal
(
sk_sp
<
SkFontConfigInterface
>
fc
)
;
struct
FontIdentity
{
FontIdentity
(
)
:
fID
(
0
)
fTTCIndex
(
0
)
{
}
bool
operator
=
=
(
const
FontIdentity
&
other
)
const
{
return
fID
=
=
other
.
fID
&
&
fTTCIndex
=
=
other
.
fTTCIndex
&
&
fString
=
=
other
.
fString
;
}
bool
operator
!
=
(
const
FontIdentity
&
other
)
const
{
return
!
(
*
this
=
=
other
)
;
}
uint32_t
fID
;
int32_t
fTTCIndex
;
SkString
fString
;
SkFontStyle
fStyle
;
size_t
writeToMemory
(
void
*
buffer
=
nullptr
)
const
;
size_t
readFromMemory
(
const
void
*
buffer
size_t
length
)
;
}
;
virtual
bool
matchFamilyName
(
const
char
familyName
[
]
SkFontStyle
requested
FontIdentity
*
outFontIdentifier
SkString
*
outFamilyName
SkFontStyle
*
outStyle
)
=
0
;
virtual
SkStreamAsset
*
openStream
(
const
FontIdentity
&
)
=
0
;
virtual
sk_sp
<
SkTypeface
>
makeTypeface
(
const
FontIdentity
&
identity
sk_sp
<
SkFontMgr
>
mgr
)
;
static
SkFontConfigInterface
*
GetSingletonDirectInterface
(
)
;
using
INHERITED
=
SkRefCnt
;
}
;
#
endif
