#
ifndef
HB_OT_OS2_TABLE_HH
#
define
HB_OT_OS2_TABLE_HH
#
include
"
hb
-
open
-
type
-
private
.
hh
"
namespace
OT
{
#
define
HB_OT_TAG_os2
HB_TAG
(
'
O
'
'
S
'
'
/
'
'
2
'
)
struct
os2
{
static
const
hb_tag_t
tableTag
=
HB_OT_TAG_os2
;
inline
bool
sanitize
(
hb_sanitize_context_t
*
c
)
const
{
TRACE_SANITIZE
(
this
)
;
return_trace
(
c
-
>
check_struct
(
this
)
)
;
}
public
:
HBUINT16
version
;
HBINT16
xAvgCharWidth
;
HBUINT16
usWeightClass
;
HBUINT16
usWidthClass
;
HBUINT16
fsType
;
HBINT16
ySubscriptXSize
;
HBINT16
ySubscriptYSize
;
HBINT16
ySubscriptXOffset
;
HBINT16
ySubscriptYOffset
;
HBINT16
ySuperscriptXSize
;
HBINT16
ySuperscriptYSize
;
HBINT16
ySuperscriptXOffset
;
HBINT16
ySuperscriptYOffset
;
HBINT16
yStrikeoutSize
;
HBINT16
yStrikeoutPosition
;
HBINT16
sFamilyClass
;
HBUINT8
panose
[
10
]
;
HBUINT32
ulUnicodeRange
[
4
]
;
Tag
achVendID
;
HBUINT16
fsSelection
;
HBUINT16
usFirstCharIndex
;
HBUINT16
usLastCharIndex
;
HBINT16
sTypoAscender
;
HBINT16
sTypoDescender
;
HBINT16
sTypoLineGap
;
HBUINT16
usWinAscent
;
HBUINT16
usWinDescent
;
public
:
DEFINE_SIZE_STATIC
(
78
)
;
}
;
}
#
endif
