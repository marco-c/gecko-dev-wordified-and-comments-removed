#
ifndef
HB_AAT_GCID_TABLE_HH
#
define
HB_AAT_GCID_TABLE_HH
#
include
"
hb
-
aat
-
layout
-
common
-
private
.
hh
"
#
define
HB_AAT_TAG_gcid
HB_TAG
(
'
g
'
'
c
'
'
i
'
'
d
'
)
namespace
AAT
{
struct
gcid
{
static
const
hb_tag_t
tableTag
=
HB_AAT_TAG_gcid
;
inline
bool
sanitize
(
hb_sanitize_context_t
*
c
)
const
{
TRACE_SANITIZE
(
this
)
;
return_trace
(
likely
(
c
-
>
check_struct
(
this
)
&
&
CIDs
.
sanitize
(
c
)
)
)
;
}
protected
:
HBUINT16
version
;
HBUINT16
format
;
HBUINT32
size
;
HBUINT16
registry
;
HBUINT8
registryName
[
64
]
;
HBUINT16
order
;
HBUINT8
orderName
[
64
]
;
HBUINT16
supplementVersion
;
ArrayOf
<
HBUINT16
>
CIDs
;
public
:
DEFINE_SIZE_ARRAY
(
144
CIDs
)
;
}
;
}
#
endif
