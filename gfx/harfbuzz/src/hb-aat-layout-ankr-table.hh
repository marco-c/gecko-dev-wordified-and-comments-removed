#
ifndef
HB_AAT_LAYOUT_ANKR_TABLE_HH
#
define
HB_AAT_LAYOUT_ANKR_TABLE_HH
#
include
"
hb
-
aat
-
layout
-
common
-
private
.
hh
"
#
define
HB_AAT_TAG_ankr
HB_TAG
(
'
a
'
'
n
'
'
k
'
'
r
'
)
namespace
AAT
{
struct
Anchor
{
inline
bool
sanitize
(
hb_sanitize_context_t
*
c
)
const
{
TRACE_SANITIZE
(
this
)
;
return_trace
(
c
-
>
check_struct
(
this
)
)
;
}
FWORD
xCoordinate
;
FWORD
yCoordinate
;
public
:
DEFINE_SIZE_STATIC
(
4
)
;
}
;
struct
ankr
{
static
const
hb_tag_t
tableTag
=
HB_AAT_TAG_ankr
;
inline
bool
sanitize
(
hb_sanitize_context_t
*
c
)
const
{
TRACE_SANITIZE
(
this
)
;
return_trace
(
likely
(
c
-
>
check_struct
(
this
)
&
&
version
=
=
0
&
&
lookupTable
.
sanitize
(
c
this
)
&
&
anchors
.
sanitize
(
c
this
)
)
)
;
}
protected
:
HBUINT16
version
;
HBUINT16
flags
;
LOffsetTo
<
Lookup
<
HBUINT16
>
>
lookupTable
;
LOffsetTo
<
LArrayOf
<
Anchor
>
>
anchors
;
public
:
DEFINE_SIZE_STATIC
(
12
)
;
}
;
}
#
endif
