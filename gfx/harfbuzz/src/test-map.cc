#
include
"
hb
.
hh
"
#
include
"
hb
-
map
.
hh
"
int
main
(
int
argc
char
*
*
argv
)
{
{
hb_map_t
v1
;
v1
.
set
(
1
2
)
;
hb_map_t
v2
{
v1
}
;
assert
(
v1
.
get_population
(
)
=
=
1
)
;
assert
(
v2
.
get_population
(
)
=
=
1
)
;
assert
(
v1
[
1
]
=
=
2
)
;
assert
(
v2
[
1
]
=
=
2
)
;
}
{
hb_map_t
v1
;
v1
.
set
(
1
2
)
;
hb_map_t
v2
=
v1
;
assert
(
v1
.
get_population
(
)
=
=
1
)
;
assert
(
v2
.
get_population
(
)
=
=
1
)
;
assert
(
v1
[
1
]
=
=
2
)
;
assert
(
v2
[
1
]
=
=
2
)
;
}
{
hb_map_t
v
{
hb_map_t
{
}
}
;
}
{
hb_map_t
v
;
v
=
hb_map_t
{
}
;
}
{
hb_map_t
s
;
s
.
set
(
1
2
)
;
s
.
set
(
3
4
)
;
hb_map_t
v
(
s
)
;
assert
(
v
.
get_population
(
)
=
=
2
)
;
}
{
hb_map_t
s
;
s
.
set
(
1
2
)
;
s
.
set
(
3
4
)
;
hb_map_t
v
(
hb_iter
(
s
)
)
;
assert
(
v
.
get_population
(
)
=
=
2
)
;
}
{
using
pair_t
=
hb_pair_t
<
hb_codepoint_t
hb_codepoint_t
>
;
hb_map_t
v1
{
pair_t
{
1
2
}
pair_t
{
4
5
}
}
;
hb_map_t
v2
{
pair_t
{
3
4
}
}
;
hb_swap
(
v1
v2
)
;
assert
(
v1
.
get_population
(
)
=
=
1
)
;
assert
(
v2
.
get_population
(
)
=
=
2
)
;
}
return
0
;
}
