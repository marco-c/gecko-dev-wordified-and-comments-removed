#
ifndef
HB_OT_H_IN
#
error
"
Include
<
hb
-
ot
.
h
>
instead
.
"
#
endif
#
ifndef
HB_OT_VAR_H
#
define
HB_OT_VAR_H
#
include
"
hb
.
h
"
HB_BEGIN_DECLS
#
define
HB_OT_TAG_VAR_AXIS_ITALIC
HB_TAG
(
'
i
'
'
t
'
'
a
'
'
l
'
)
#
define
HB_OT_TAG_VAR_AXIS_OPTICAL_SIZE
HB_TAG
(
'
o
'
'
p
'
'
s
'
'
z
'
)
#
define
HB_OT_TAG_VAR_AXIS_SLANT
HB_TAG
(
'
s
'
'
l
'
'
n
'
'
t
'
)
#
define
HB_OT_TAG_VAR_AXIS_WIDTH
HB_TAG
(
'
w
'
'
d
'
'
t
'
'
h
'
)
#
define
HB_OT_TAG_VAR_AXIS_WEIGHT
HB_TAG
(
'
w
'
'
g
'
'
h
'
'
t
'
)
HB_EXTERN
hb_bool_t
hb_ot_var_has_data
(
hb_face_t
*
face
)
;
HB_EXTERN
unsigned
int
hb_ot_var_get_axis_count
(
hb_face_t
*
face
)
;
typedef
enum
{
HB_OT_VAR_AXIS_FLAG_HIDDEN
=
0x00000001u
_HB_OT_VAR_AXIS_FLAG_MAX_VALUE
=
0x7FFFFFFFu
}
hb_ot_var_axis_flags_t
;
typedef
struct
hb_ot_var_axis_info_t
{
unsigned
int
axis_index
;
hb_tag_t
tag
;
hb_ot_name_id_t
name_id
;
hb_ot_var_axis_flags_t
flags
;
float
min_value
;
float
default_value
;
float
max_value
;
unsigned
int
reserved
;
}
hb_ot_var_axis_info_t
;
HB_EXTERN
unsigned
int
hb_ot_var_get_axis_infos
(
hb_face_t
*
face
unsigned
int
start_offset
unsigned
int
*
axes_count
hb_ot_var_axis_info_t
*
axes_array
)
;
HB_EXTERN
hb_bool_t
hb_ot_var_find_axis_info
(
hb_face_t
*
face
hb_tag_t
axis_tag
hb_ot_var_axis_info_t
*
axis_info
)
;
HB_EXTERN
unsigned
int
hb_ot_var_get_named_instance_count
(
hb_face_t
*
face
)
;
HB_EXTERN
hb_ot_name_id_t
hb_ot_var_named_instance_get_subfamily_name_id
(
hb_face_t
*
face
unsigned
int
instance_index
)
;
HB_EXTERN
hb_ot_name_id_t
hb_ot_var_named_instance_get_postscript_name_id
(
hb_face_t
*
face
unsigned
int
instance_index
)
;
HB_EXTERN
unsigned
int
hb_ot_var_named_instance_get_design_coords
(
hb_face_t
*
face
unsigned
int
instance_index
unsigned
int
*
coords_length
float
*
coords
)
;
HB_EXTERN
void
hb_ot_var_normalize_variations
(
hb_face_t
*
face
const
hb_variation_t
*
variations
unsigned
int
variations_length
int
*
coords
unsigned
int
coords_length
)
;
HB_EXTERN
void
hb_ot_var_normalize_coords
(
hb_face_t
*
face
unsigned
int
coords_length
const
float
*
design_coords
int
*
normalized_coords
)
;
HB_END_DECLS
#
endif
