#
include
"
hb
-
open
-
type
.
hh
"
#
include
"
hb
-
ot
-
face
.
hh
"
#
include
"
hb
-
aat
-
layout
.
hh
"
#
include
"
hb
-
aat
-
layout
-
ankr
-
table
.
hh
"
#
include
"
hb
-
aat
-
layout
-
bsln
-
table
.
hh
"
#
include
"
hb
-
aat
-
layout
-
feat
-
table
.
hh
"
#
include
"
hb
-
aat
-
layout
-
kerx
-
table
.
hh
"
#
include
"
hb
-
aat
-
layout
-
morx
-
table
.
hh
"
#
include
"
hb
-
aat
-
layout
-
trak
-
table
.
hh
"
#
include
"
hb
-
aat
-
ltag
-
table
.
hh
"
static
inline
const
AAT
:
:
morx
&
_get_morx
(
hb_face_t
*
face
hb_blob_t
*
*
blob
=
nullptr
)
{
if
(
unlikely
(
!
hb_ot_shaper_face_data_ensure
(
face
)
)
)
{
if
(
blob
)
*
blob
=
hb_blob_get_empty
(
)
;
return
Null
(
AAT
:
:
morx
)
;
}
const
AAT
:
:
morx
&
morx
=
*
(
hb_ot_face_data
(
face
)
-
>
morx
.
get
(
)
)
;
if
(
blob
)
*
blob
=
hb_ot_face_data
(
face
)
-
>
morx
.
get_blob
(
)
;
return
morx
;
}
void
hb_aat_layout_substitute
(
hb_font_t
*
font
hb_buffer_t
*
buffer
)
{
hb_blob_t
*
blob
;
const
AAT
:
:
morx
&
morx
=
_get_morx
(
font
-
>
face
&
blob
)
;
AAT
:
:
hb_aat_apply_context_t
c
(
font
buffer
blob
)
;
morx
.
apply
(
&
c
)
;
}
void
hb_aat_layout_position
(
hb_font_t
*
font
hb_buffer_t
*
buffer
)
{
#
if
0
hb_blob_t
*
blob
;
const
AAT
:
:
ankr
&
ankr
=
_get_ankr
(
font
-
>
face
&
blob
)
;
const
AAT
:
:
kerx
&
kerx
=
_get_kerx
(
font
-
>
face
&
blob
)
;
const
AAT
:
:
trak
&
trak
=
_get_trak
(
font
-
>
face
&
blob
)
;
AAT
:
:
hb_aat_apply_context_t
c
(
font
buffer
blob
)
;
kerx
.
apply
(
&
c
&
ankr
)
;
trak
.
apply
(
&
c
)
;
#
endif
}
