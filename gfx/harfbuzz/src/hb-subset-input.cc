#
include
"
hb
-
object
-
private
.
hh
"
#
include
"
hb
-
subset
-
private
.
hh
"
#
include
"
hb
-
set
-
private
.
hh
"
hb_subset_input_t
*
hb_subset_input_create_or_fail
(
void
)
{
hb_subset_input_t
*
input
=
hb_object_create
<
hb_subset_input_t
>
(
)
;
if
(
unlikely
(
!
input
)
)
return
nullptr
;
input
-
>
unicodes
=
hb_set_create
(
)
;
input
-
>
glyphs
=
hb_set_create
(
)
;
input
-
>
drop_ot_layout
=
true
;
return
input
;
}
hb_subset_input_t
*
hb_subset_input_reference
(
hb_subset_input_t
*
subset_input
)
{
return
hb_object_reference
(
subset_input
)
;
}
void
hb_subset_input_destroy
(
hb_subset_input_t
*
subset_input
)
{
if
(
!
hb_object_destroy
(
subset_input
)
)
return
;
hb_set_destroy
(
subset_input
-
>
unicodes
)
;
hb_set_destroy
(
subset_input
-
>
glyphs
)
;
free
(
subset_input
)
;
}
HB_EXTERN
hb_set_t
*
hb_subset_input_unicode_set
(
hb_subset_input_t
*
subset_input
)
{
return
subset_input
-
>
unicodes
;
}
HB_EXTERN
hb_set_t
*
hb_subset_input_glyph_set
(
hb_subset_input_t
*
subset_input
)
{
return
subset_input
-
>
glyphs
;
}
HB_EXTERN
hb_bool_t
*
hb_subset_input_drop_hints
(
hb_subset_input_t
*
subset_input
)
{
return
&
subset_input
-
>
drop_hints
;
}
HB_EXTERN
hb_bool_t
*
hb_subset_input_drop_ot_layout
(
hb_subset_input_t
*
subset_input
)
{
return
&
subset_input
-
>
drop_ot_layout
;
}
