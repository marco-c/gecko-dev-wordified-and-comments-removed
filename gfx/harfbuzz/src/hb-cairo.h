#
ifndef
HB_CAIRO_H
#
define
HB_CAIRO_H
#
include
"
hb
.
h
"
#
include
<
cairo
.
h
>
HB_BEGIN_DECLS
HB_EXTERN
cairo_font_face_t
*
hb_cairo_font_face_create_for_font
(
hb_font_t
*
font
)
;
HB_EXTERN
hb_font_t
*
hb_cairo_font_face_get_font
(
cairo_font_face_t
*
font_face
)
;
HB_EXTERN
cairo_font_face_t
*
hb_cairo_font_face_create_for_face
(
hb_face_t
*
face
)
;
HB_EXTERN
hb_face_t
*
hb_cairo_font_face_get_face
(
cairo_font_face_t
*
font_face
)
;
typedef
hb_font_t
*
(
*
hb_cairo_font_init_func_t
)
(
hb_font_t
*
font
cairo_scaled_font_t
*
scaled_font
void
*
user_data
)
;
HB_EXTERN
void
hb_cairo_font_face_set_font_init_func
(
cairo_font_face_t
*
font_face
hb_cairo_font_init_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_EXTERN
hb_font_t
*
hb_cairo_scaled_font_get_font
(
cairo_scaled_font_t
*
scaled_font
)
;
HB_EXTERN
void
hb_cairo_font_face_set_scale_factor
(
cairo_font_face_t
*
font_face
unsigned
int
scale_factor
)
;
HB_EXTERN
unsigned
int
hb_cairo_font_face_get_scale_factor
(
cairo_font_face_t
*
font_face
)
;
HB_EXTERN
void
hb_cairo_glyphs_from_buffer
(
hb_buffer_t
*
buffer
hb_bool_t
utf8_clusters
double
x_scale_factor
double
y_scale_factor
double
x
double
y
const
char
*
utf8
int
utf8_len
cairo_glyph_t
*
*
glyphs
unsigned
int
*
num_glyphs
cairo_text_cluster_t
*
*
clusters
unsigned
int
*
num_clusters
cairo_text_cluster_flags_t
*
cluster_flags
)
;
HB_END_DECLS
#
endif
