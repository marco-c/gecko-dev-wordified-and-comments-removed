#
if
!
defined
(
HB_H_IN
)
&
&
!
defined
(
HB_NO_SINGLE_HEADER_ERROR
)
#
error
"
Include
<
hb
.
h
>
instead
.
"
#
endif
#
ifndef
HB_DEPRECATED_H
#
define
HB_DEPRECATED_H
#
include
"
hb
-
common
.
h
"
#
include
"
hb
-
unicode
.
h
"
#
include
"
hb
-
font
.
h
"
#
include
"
hb
-
set
.
h
"
HB_BEGIN_DECLS
#
ifndef
HB_DISABLE_DEPRECATED
#
define
HB_SCRIPT_CANADIAN_ABORIGINAL
HB_SCRIPT_CANADIAN_SYLLABICS
#
define
HB_BUFFER_FLAGS_DEFAULT
HB_BUFFER_FLAG_DEFAULT
#
define
HB_BUFFER_SERIALIZE_FLAGS_DEFAULT
HB_BUFFER_SERIALIZE_FLAG_DEFAULT
typedef
hb_bool_t
(
*
hb_font_get_glyph_func_t
)
(
hb_font_t
*
font
void
*
font_data
hb_codepoint_t
unicode
hb_codepoint_t
variation_selector
hb_codepoint_t
*
glyph
void
*
user_data
)
;
HB_DEPRECATED_FOR
(
hb_font_funcs_set_nominal_glyph_func
and
hb_font_funcs_set_variation_glyph_func
)
HB_EXTERN
void
hb_font_funcs_set_glyph_func
(
hb_font_funcs_t
*
ffuncs
hb_font_get_glyph_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
#
define
HB_UNICODE_COMBINING_CLASS_CCC133
133
typedef
unsigned
int
(
*
hb_unicode_eastasian_width_func_t
)
(
hb_unicode_funcs_t
*
ufuncs
hb_codepoint_t
unicode
void
*
user_data
)
;
HB_EXTERN
HB_DEPRECATED
void
hb_unicode_funcs_set_eastasian_width_func
(
hb_unicode_funcs_t
*
ufuncs
hb_unicode_eastasian_width_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_EXTERN
HB_DEPRECATED
unsigned
int
hb_unicode_eastasian_width
(
hb_unicode_funcs_t
*
ufuncs
hb_codepoint_t
unicode
)
;
typedef
unsigned
int
(
*
hb_unicode_decompose_compatibility_func_t
)
(
hb_unicode_funcs_t
*
ufuncs
hb_codepoint_t
u
hb_codepoint_t
*
decomposed
void
*
user_data
)
;
#
define
HB_UNICODE_MAX_DECOMPOSITION_LEN
(
18
+
1
)
/
*
codepoints
*
/
HB_EXTERN
HB_DEPRECATED
void
hb_unicode_funcs_set_decompose_compatibility_func
(
hb_unicode_funcs_t
*
ufuncs
hb_unicode_decompose_compatibility_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_EXTERN
HB_DEPRECATED
unsigned
int
hb_unicode_decompose_compatibility
(
hb_unicode_funcs_t
*
ufuncs
hb_codepoint_t
u
hb_codepoint_t
*
decomposed
)
;
typedef
hb_font_get_glyph_kerning_func_t
hb_font_get_glyph_v_kerning_func_t
;
HB_EXTERN
void
hb_font_funcs_set_glyph_v_kerning_func
(
hb_font_funcs_t
*
ffuncs
hb_font_get_glyph_v_kerning_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_EXTERN
hb_position_t
hb_font_get_glyph_v_kerning
(
hb_font_t
*
font
hb_codepoint_t
top_glyph
hb_codepoint_t
bottom_glyph
)
;
typedef
void
(
*
hb_font_get_glyph_shape_func_t
)
(
hb_font_t
*
font
void
*
font_data
hb_codepoint_t
glyph
hb_draw_funcs_t
*
draw_funcs
void
*
draw_data
void
*
user_data
)
;
HB_DEPRECATED_FOR
(
hb_font_funcs_set_draw_glyph_func
)
HB_EXTERN
void
hb_font_funcs_set_glyph_shape_func
(
hb_font_funcs_t
*
ffuncs
hb_font_get_glyph_shape_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_DEPRECATED_FOR
(
hb_font_draw_glyph
)
HB_EXTERN
void
hb_font_get_glyph_shape
(
hb_font_t
*
font
hb_codepoint_t
glyph
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
)
;
#
define
HB_AAT_LAYOUT_FEATURE_TYPE_CURISVE_CONNECTION
HB_AAT_LAYOUT_FEATURE_TYPE_CURSIVE_CONNECTION
#
endif
HB_END_DECLS
#
endif
