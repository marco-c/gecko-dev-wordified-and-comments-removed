#
ifndef
HB_OT_HEAD_TABLE_HH
#
define
HB_OT_HEAD_TABLE_HH
#
include
"
hb
-
open
-
type
.
hh
"
#
define
HB_OT_TAG_head
HB_TAG
(
'
h
'
'
e
'
'
a
'
'
d
'
)
namespace
OT
{
struct
head
{
friend
struct
OffsetTable
;
static
constexpr
hb_tag_t
tableTag
=
HB_OT_TAG_head
;
unsigned
int
get_upem
(
)
const
{
unsigned
int
upem
=
unitsPerEm
;
return
16
<
=
upem
&
&
upem
<
=
16384
?
upem
:
1000
;
}
bool
serialize
(
hb_serialize_context_t
*
c
)
const
{
TRACE_SERIALIZE
(
this
)
;
return_trace
(
(
bool
)
c
-
>
embed
(
this
)
)
;
}
bool
subset
(
hb_subset_context_t
*
c
)
const
{
TRACE_SUBSET
(
this
)
;
return_trace
(
serialize
(
c
-
>
serializer
)
)
;
}
enum
mac_style_flag_t
{
BOLD
=
1u
<
<
0
ITALIC
=
1u
<
<
1
UNDERLINE
=
1u
<
<
2
OUTLINE
=
1u
<
<
3
SHADOW
=
1u
<
<
4
CONDENSED
=
1u
<
<
5
}
;
bool
is_bold
(
)
const
{
return
macStyle
&
BOLD
;
}
bool
is_italic
(
)
const
{
return
macStyle
&
ITALIC
;
}
bool
is_condensed
(
)
const
{
return
macStyle
&
CONDENSED
;
}
bool
sanitize
(
hb_sanitize_context_t
*
c
)
const
{
TRACE_SANITIZE
(
this
)
;
return_trace
(
c
-
>
check_struct
(
this
)
&
&
version
.
major
=
=
1
&
&
magicNumber
=
=
0x5F0F3CF5u
)
;
}
protected
:
FixedVersion
<
>
version
;
FixedVersion
<
>
fontRevision
;
HBUINT32
checkSumAdjustment
;
HBUINT32
magicNumber
;
HBUINT16
flags
;
HBUINT16
unitsPerEm
;
LONGDATETIME
created
;
LONGDATETIME
modified
;
HBINT16
xMin
;
HBINT16
yMin
;
HBINT16
xMax
;
HBINT16
yMax
;
HBUINT16
macStyle
;
HBUINT16
lowestRecPPEM
;
HBINT16
fontDirectionHint
;
public
:
HBUINT16
indexToLocFormat
;
HBUINT16
glyphDataFormat
;
DEFINE_SIZE_STATIC
(
54
)
;
}
;
}
#
endif
