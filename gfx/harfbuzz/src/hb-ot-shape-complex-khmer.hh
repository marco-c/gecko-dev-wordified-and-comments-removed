#
ifndef
HB_OT_SHAPE_COMPLEX_KHMER_HH
#
define
HB_OT_SHAPE_COMPLEX_KHMER_HH
#
include
"
hb
.
hh
"
#
include
"
hb
-
ot
-
shape
-
complex
-
indic
.
hh
"
#
define
khmer_category
(
)
indic_category
(
)
/
*
khmer_category_t
*
/
enum
khmer_category_t
{
OT_Robatic
=
20
OT_Xgroup
=
21
OT_Ygroup
=
22
}
;
static
inline
void
set_khmer_properties
(
hb_glyph_info_t
&
info
)
{
hb_codepoint_t
u
=
info
.
codepoint
;
unsigned
int
type
=
hb_indic_get_categories
(
u
)
;
khmer_category_t
cat
=
(
khmer_category_t
)
(
type
&
0x7Fu
)
;
indic_position_t
pos
=
(
indic_position_t
)
(
type
>
>
8
)
;
switch
(
u
)
{
case
0x179Au
:
cat
=
(
khmer_category_t
)
OT_Ra
;
break
;
case
0x17CCu
:
case
0x17C9u
:
case
0x17CAu
:
cat
=
OT_Robatic
;
break
;
case
0x17C6u
:
case
0x17CBu
:
case
0x17CDu
:
case
0x17CEu
:
case
0x17CFu
:
case
0x17D0u
:
case
0x17D1u
:
cat
=
OT_Xgroup
;
break
;
case
0x17C7u
:
case
0x17C8u
:
case
0x17DDu
:
case
0x17D3u
:
cat
=
OT_Ygroup
;
break
;
}
if
(
cat
=
=
(
khmer_category_t
)
OT_M
)
switch
(
(
int
)
pos
)
{
case
POS_PRE_C
:
cat
=
(
khmer_category_t
)
OT_VPre
;
break
;
case
POS_BELOW_C
:
cat
=
(
khmer_category_t
)
OT_VBlw
;
break
;
case
POS_ABOVE_C
:
cat
=
(
khmer_category_t
)
OT_VAbv
;
break
;
case
POS_POST_C
:
cat
=
(
khmer_category_t
)
OT_VPst
;
break
;
default
:
assert
(
0
)
;
}
info
.
khmer_category
(
)
=
cat
;
}
#
endif
