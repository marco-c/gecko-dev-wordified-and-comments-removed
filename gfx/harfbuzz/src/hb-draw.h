#
if
!
defined
(
HB_H_IN
)
&
&
!
defined
(
HB_NO_SINGLE_HEADER_ERROR
)
#
error
"
Include
<
hb
.
h
>
instead
.
"
#
endif
#
ifndef
HB_DRAW_H
#
define
HB_DRAW_H
#
include
"
hb
.
h
"
HB_BEGIN_DECLS
typedef
struct
hb_draw_state_t
{
hb_bool_t
path_open
;
float
path_start_x
;
float
path_start_y
;
float
current_x
;
float
current_y
;
hb_var_num_t
reserved1
;
hb_var_num_t
reserved2
;
hb_var_num_t
reserved3
;
hb_var_num_t
reserved4
;
hb_var_num_t
reserved5
;
hb_var_num_t
reserved6
;
hb_var_num_t
reserved7
;
}
hb_draw_state_t
;
#
define
HB_DRAW_STATE_DEFAULT
{
0
0
.
f
0
.
f
0
.
f
0
.
f
{
0
.
}
{
0
.
}
{
0
.
}
{
0
.
}
{
0
.
}
{
0
.
}
{
0
.
}
}
typedef
struct
hb_draw_funcs_t
hb_draw_funcs_t
;
typedef
void
(
*
hb_draw_move_to_func_t
)
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
float
to_x
float
to_y
void
*
user_data
)
;
typedef
void
(
*
hb_draw_line_to_func_t
)
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
float
to_x
float
to_y
void
*
user_data
)
;
typedef
void
(
*
hb_draw_quadratic_to_func_t
)
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
float
control_x
float
control_y
float
to_x
float
to_y
void
*
user_data
)
;
typedef
void
(
*
hb_draw_cubic_to_func_t
)
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
float
control1_x
float
control1_y
float
control2_x
float
control2_y
float
to_x
float
to_y
void
*
user_data
)
;
typedef
void
(
*
hb_draw_close_path_func_t
)
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
void
*
user_data
)
;
HB_EXTERN
void
hb_draw_funcs_set_move_to_func
(
hb_draw_funcs_t
*
dfuncs
hb_draw_move_to_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_EXTERN
void
hb_draw_funcs_set_line_to_func
(
hb_draw_funcs_t
*
dfuncs
hb_draw_line_to_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_EXTERN
void
hb_draw_funcs_set_quadratic_to_func
(
hb_draw_funcs_t
*
dfuncs
hb_draw_quadratic_to_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_EXTERN
void
hb_draw_funcs_set_cubic_to_func
(
hb_draw_funcs_t
*
dfuncs
hb_draw_cubic_to_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_EXTERN
void
hb_draw_funcs_set_close_path_func
(
hb_draw_funcs_t
*
dfuncs
hb_draw_close_path_func_t
func
void
*
user_data
hb_destroy_func_t
destroy
)
;
HB_EXTERN
hb_draw_funcs_t
*
hb_draw_funcs_create
(
void
)
;
HB_EXTERN
hb_draw_funcs_t
*
hb_draw_funcs_get_empty
(
void
)
;
HB_EXTERN
hb_draw_funcs_t
*
hb_draw_funcs_reference
(
hb_draw_funcs_t
*
dfuncs
)
;
HB_EXTERN
void
hb_draw_funcs_destroy
(
hb_draw_funcs_t
*
dfuncs
)
;
HB_EXTERN
hb_bool_t
hb_draw_funcs_set_user_data
(
hb_draw_funcs_t
*
dfuncs
hb_user_data_key_t
*
key
void
*
data
hb_destroy_func_t
destroy
hb_bool_t
replace
)
;
HB_EXTERN
void
*
hb_draw_funcs_get_user_data
(
const
hb_draw_funcs_t
*
dfuncs
hb_user_data_key_t
*
key
)
;
HB_EXTERN
void
hb_draw_funcs_make_immutable
(
hb_draw_funcs_t
*
dfuncs
)
;
HB_EXTERN
hb_bool_t
hb_draw_funcs_is_immutable
(
hb_draw_funcs_t
*
dfuncs
)
;
HB_EXTERN
void
hb_draw_move_to
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
float
to_x
float
to_y
)
;
HB_EXTERN
void
hb_draw_line_to
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
float
to_x
float
to_y
)
;
HB_EXTERN
void
hb_draw_quadratic_to
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
float
control_x
float
control_y
float
to_x
float
to_y
)
;
HB_EXTERN
void
hb_draw_cubic_to
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
float
control1_x
float
control1_y
float
control2_x
float
control2_y
float
to_x
float
to_y
)
;
HB_EXTERN
void
hb_draw_close_path
(
hb_draw_funcs_t
*
dfuncs
void
*
draw_data
hb_draw_state_t
*
st
)
;
HB_END_DECLS
#
endif
