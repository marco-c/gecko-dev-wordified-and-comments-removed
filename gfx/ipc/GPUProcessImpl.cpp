#
include
"
GPUProcessImpl
.
h
"
#
include
"
mozilla
/
ipc
/
IOThreadChild
.
h
"
#
include
"
nsXPCOM
.
h
"
#
if
defined
(
OS_WIN
)
&
&
defined
(
MOZ_SANDBOX
)
#
include
"
mozilla
/
sandboxTarget
.
h
"
#
endif
namespace
mozilla
{
namespace
gfx
{
using
namespace
ipc
;
GPUProcessImpl
:
:
GPUProcessImpl
(
ProcessId
aParentPid
)
:
ProcessChild
(
aParentPid
)
{
}
GPUProcessImpl
:
:
~
GPUProcessImpl
(
)
{
}
bool
GPUProcessImpl
:
:
Init
(
int
aArgc
char
*
aArgv
[
]
)
{
#
if
defined
(
MOZ_SANDBOX
)
&
&
defined
(
OS_WIN
)
mozilla
:
:
SandboxTarget
:
:
Instance
(
)
-
>
StartSandbox
(
)
;
#
endif
char
*
parentBuildID
=
nullptr
;
for
(
int
idx
=
aArgc
;
idx
>
0
;
idx
-
-
)
{
if
(
!
strcmp
(
aArgv
[
idx
]
"
-
parentBuildID
"
)
)
{
parentBuildID
=
aArgv
[
idx
+
1
]
;
}
}
return
mGPU
.
Init
(
ParentPid
(
)
parentBuildID
IOThreadChild
:
:
message_loop
(
)
IOThreadChild
:
:
channel
(
)
)
;
}
void
GPUProcessImpl
:
:
CleanUp
(
)
{
NS_ShutdownXPCOM
(
nullptr
)
;
}
}
}
