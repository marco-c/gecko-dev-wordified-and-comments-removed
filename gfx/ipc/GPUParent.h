#
ifndef
_include_gfx_ipc_GPUParent_h__
#
define
_include_gfx_ipc_GPUParent_h__
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
gfx
/
PGPUParent
.
h
"
namespace
mozilla
{
class
TimeStamp
;
namespace
gfx
{
class
VsyncBridgeParent
;
class
GPUParent
final
:
public
PGPUParent
{
public
:
GPUParent
(
)
;
~
GPUParent
(
)
;
static
GPUParent
*
GetSingleton
(
)
;
bool
Init
(
base
:
:
ProcessId
aParentPid
MessageLoop
*
aIOLoop
IPC
:
:
Channel
*
aChannel
)
;
void
NotifyDeviceReset
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvInit
(
nsTArray
<
GfxPrefSetting
>
&
&
prefs
nsTArray
<
GfxVarUpdate
>
&
&
vars
const
DevicePrefs
&
devicePrefs
nsTArray
<
LayerTreeIdMapping
>
&
&
mappings
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvInitVsyncBridge
(
Endpoint
<
PVsyncBridgeParent
>
&
&
aVsyncEndpoint
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvInitImageBridge
(
Endpoint
<
PImageBridgeParent
>
&
&
aEndpoint
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvInitVRManager
(
Endpoint
<
PVRManagerParent
>
&
&
aEndpoint
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvInitUiCompositorController
(
const
uint64_t
&
aRootLayerTreeId
Endpoint
<
PUiCompositorControllerParent
>
&
&
aEndpoint
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvUpdatePref
(
const
GfxPrefSetting
&
pref
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvUpdateVar
(
const
GfxVarUpdate
&
pref
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvNewWidgetCompositor
(
Endpoint
<
PCompositorBridgeParent
>
&
&
aEndpoint
const
CSSToLayoutDeviceScale
&
aScale
const
TimeDuration
&
aVsyncRate
const
CompositorOptions
&
aOptions
const
bool
&
aUseExternalSurface
const
IntSize
&
aSurfaceSize
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvNewContentCompositorBridge
(
Endpoint
<
PCompositorBridgeParent
>
&
&
aEndpoint
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvNewContentImageBridge
(
Endpoint
<
PImageBridgeParent
>
&
&
aEndpoint
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvNewContentVRManager
(
Endpoint
<
PVRManagerParent
>
&
&
aEndpoint
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvNewContentVideoDecoderManager
(
Endpoint
<
PVideoDecoderManagerParent
>
&
&
aEndpoint
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGetDeviceStatus
(
GPUDeviceData
*
aOutStatus
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvAddLayerTreeIdMapping
(
const
LayerTreeIdMapping
&
aMapping
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvRemoveLayerTreeIdMapping
(
const
LayerTreeIdMapping
&
aMapping
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvNotifyGpuObservers
(
const
nsCString
&
aTopic
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvStartProfiler
(
const
ProfilerInitParams
&
params
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvPauseProfiler
(
const
bool
&
aPause
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvStopProfiler
(
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGatherProfile
(
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvRequestMemoryReport
(
const
uint32_t
&
generation
const
bool
&
anonymize
const
bool
&
minimizeMemoryUsage
const
MaybeFileDesc
&
DMDFile
)
override
;
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
private
:
const
TimeStamp
mLaunchTime
;
RefPtr
<
VsyncBridgeParent
>
mVsyncBridge
;
}
;
}
}
#
endif
