#
include
"
gfxPrefs
.
h
"
#
include
"
GPUProcessHost
.
h
"
#
include
"
mozilla
/
gfx
/
Logging
.
h
"
namespace
mozilla
{
namespace
gfx
{
GPUProcessHost
:
:
GPUProcessHost
(
Listener
*
aListener
)
:
GeckoChildProcessHost
(
GeckoProcessType_GPU
)
mListener
(
aListener
)
mTaskFactory
(
this
)
mLaunchPhase
(
LaunchPhase
:
:
Unlaunched
)
{
MOZ_COUNT_CTOR
(
GPUProcessHost
)
;
}
GPUProcessHost
:
:
~
GPUProcessHost
(
)
{
MOZ_COUNT_DTOR
(
GPUProcessHost
)
;
}
bool
GPUProcessHost
:
:
Launch
(
)
{
MOZ_ASSERT
(
mLaunchPhase
=
=
LaunchPhase
:
:
Unlaunched
)
;
MOZ_ASSERT
(
!
mGPUChild
)
;
mLaunchPhase
=
LaunchPhase
:
:
Waiting
;
if
(
!
GeckoChildProcessHost
:
:
AsyncLaunch
(
)
)
{
mLaunchPhase
=
LaunchPhase
:
:
Complete
;
return
false
;
}
return
true
;
}
bool
GPUProcessHost
:
:
WaitForLaunch
(
)
{
if
(
mLaunchPhase
=
=
LaunchPhase
:
:
Complete
)
{
return
!
!
mGPUChild
;
}
int32_t
timeoutMs
=
gfxPrefs
:
:
GPUProcessDevTimeoutMs
(
)
;
bool
result
=
GeckoChildProcessHost
:
:
WaitUntilConnected
(
timeoutMs
)
;
InitAfterConnect
(
result
)
;
return
result
;
}
void
GPUProcessHost
:
:
OnChannelConnected
(
int32_t
peer_pid
)
{
MOZ_ASSERT
(
!
NS_IsMainThread
(
)
)
;
GeckoChildProcessHost
:
:
OnChannelConnected
(
peer_pid
)
;
RefPtr
<
Runnable
>
runnable
;
{
MonitorAutoLock
lock
(
mMonitor
)
;
runnable
=
mTaskFactory
.
NewRunnableMethod
(
&
GPUProcessHost
:
:
OnChannelConnectedTask
)
;
}
NS_DispatchToMainThread
(
runnable
)
;
}
void
GPUProcessHost
:
:
OnChannelError
(
)
{
MOZ_ASSERT
(
!
NS_IsMainThread
(
)
)
;
GeckoChildProcessHost
:
:
OnChannelError
(
)
;
RefPtr
<
Runnable
>
runnable
;
{
MonitorAutoLock
lock
(
mMonitor
)
;
runnable
=
mTaskFactory
.
NewRunnableMethod
(
&
GPUProcessHost
:
:
OnChannelErrorTask
)
;
}
NS_DispatchToMainThread
(
runnable
)
;
}
void
GPUProcessHost
:
:
OnChannelConnectedTask
(
)
{
if
(
mLaunchPhase
=
=
LaunchPhase
:
:
Waiting
)
{
InitAfterConnect
(
true
)
;
}
}
void
GPUProcessHost
:
:
OnChannelErrorTask
(
)
{
if
(
mLaunchPhase
=
=
LaunchPhase
:
:
Waiting
)
{
InitAfterConnect
(
false
)
;
}
}
void
GPUProcessHost
:
:
InitAfterConnect
(
bool
aSucceeded
)
{
MOZ_ASSERT
(
mLaunchPhase
=
=
LaunchPhase
:
:
Waiting
)
;
MOZ_ASSERT
(
!
mGPUChild
)
;
mLaunchPhase
=
LaunchPhase
:
:
Complete
;
if
(
aSucceeded
)
{
mGPUChild
=
MakeUnique
<
GPUChild
>
(
)
;
DebugOnly
<
bool
>
rv
=
mGPUChild
-
>
Open
(
GetChannel
(
)
base
:
:
GetProcId
(
GetChildProcessHandle
(
)
)
)
;
MOZ_ASSERT
(
rv
)
;
}
if
(
mListener
)
{
mListener
-
>
OnProcessLaunchComplete
(
this
)
;
}
}
void
GPUProcessHost
:
:
Shutdown
(
)
{
mListener
=
nullptr
;
DestroyProcess
(
)
;
}
void
GPUProcessHost
:
:
DestroyProcess
(
)
{
{
MonitorAutoLock
lock
(
mMonitor
)
;
mTaskFactory
.
RevokeAll
(
)
;
}
DissociateActor
(
)
;
}
}
}
