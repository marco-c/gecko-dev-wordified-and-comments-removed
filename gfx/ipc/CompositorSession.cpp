#
include
"
CompositorSession
.
h
"
#
include
"
base
/
process_util
.
h
"
#
include
"
GPUChild
.
h
"
#
include
"
mozilla
/
gfx
/
Logging
.
h
"
#
include
"
mozilla
/
gfx
/
GPUProcessHost
.
h
"
#
include
"
mozilla
/
layers
/
CompositorBridgeChild
.
h
"
#
include
"
mozilla
/
layers
/
CompositorBridgeParent
.
h
"
#
if
defined
(
MOZ_WIDGET_ANDROID
)
#
include
"
mozilla
/
widget
/
nsWindow
.
h
"
#
endif
namespace
mozilla
{
namespace
layers
{
using
namespace
gfx
;
using
namespace
widget
;
CompositorSession
:
:
CompositorSession
(
nsBaseWidget
*
aWidget
CompositorWidgetDelegate
*
aDelegate
CompositorBridgeChild
*
aChild
const
LayersId
&
aRootLayerTreeId
)
:
mWidget
(
aWidget
)
mCompositorWidgetDelegate
(
aDelegate
)
mCompositorBridgeChild
(
aChild
)
mRootLayerTreeId
(
aRootLayerTreeId
)
{
}
CompositorSession
:
:
~
CompositorSession
(
)
{
}
CompositorBridgeChild
*
CompositorSession
:
:
GetCompositorBridgeChild
(
)
{
return
mCompositorBridgeChild
;
}
#
if
defined
(
MOZ_WIDGET_ANDROID
)
void
CompositorSession
:
:
NotifyDisablingWebRender
(
)
{
if
(
!
mWidget
)
{
return
;
}
nsWindow
*
window
=
static_cast
<
nsWindow
*
>
(
mWidget
)
;
window
-
>
NotifyDisablingWebRender
(
)
;
}
#
endif
}
}
