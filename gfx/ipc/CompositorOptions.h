#
ifndef
_include_mozilla_gfx_ipc_CompositorOptions_h_
#
define
_include_mozilla_gfx_ipc_CompositorOptions_h_
namespace
IPC
{
template
<
typename
>
struct
ParamTraits
;
}
namespace
mozilla
{
namespace
layers
{
class
CompositorOptions
{
public
:
CompositorOptions
(
)
:
mUseAPZ
(
false
)
mUseWebRender
(
false
)
mUseAdvancedLayers
(
false
)
{
}
explicit
CompositorOptions
(
bool
aUseAPZ
bool
aUseWebRender
)
:
mUseAPZ
(
aUseAPZ
)
mUseWebRender
(
aUseWebRender
)
mUseAdvancedLayers
(
false
)
{
}
bool
UseAPZ
(
)
const
{
return
mUseAPZ
;
}
bool
UseWebRender
(
)
const
{
return
mUseWebRender
;
}
bool
UseAdvancedLayers
(
)
const
{
return
mUseAdvancedLayers
;
}
void
SetUseAdvancedLayers
(
bool
aUseAdvancedLayers
)
{
mUseAdvancedLayers
=
aUseAdvancedLayers
;
}
bool
operator
=
=
(
const
CompositorOptions
&
aOther
)
const
{
return
mUseAPZ
=
=
aOther
.
mUseAPZ
&
&
mUseWebRender
=
=
aOther
.
mUseWebRender
&
&
mUseAdvancedLayers
=
=
aOther
.
mUseAdvancedLayers
;
}
friend
struct
IPC
:
:
ParamTraits
<
CompositorOptions
>
;
private
:
bool
mUseAPZ
;
bool
mUseWebRender
;
bool
mUseAdvancedLayers
;
}
;
}
}
#
endif
