#
include
"
RemoteCompositorSession
.
h
"
#
include
"
mozilla
/
VsyncDispatcher
.
h
"
#
include
"
mozilla
/
layers
/
APZChild
.
h
"
#
include
"
mozilla
/
layers
/
APZCTreeManagerChild
.
h
"
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
nsBaseWidget
.
h
"
#
if
defined
(
MOZ_WIDGET_ANDROID
)
#
include
"
mozilla
/
layers
/
UiCompositorControllerChild
.
h
"
#
endif
namespace
mozilla
{
namespace
layers
{
using
namespace
gfx
;
using
namespace
widget
;
RemoteCompositorSession
:
:
RemoteCompositorSession
(
nsBaseWidget
*
aWidget
CompositorBridgeChild
*
aChild
CompositorWidgetDelegate
*
aWidgetDelegate
APZCTreeManagerChild
*
aAPZ
const
uint64_t
&
aRootLayerTreeId
)
:
CompositorSession
(
aWidgetDelegate
aChild
aRootLayerTreeId
)
mWidget
(
aWidget
)
mAPZ
(
aAPZ
)
{
GPUProcessManager
:
:
Get
(
)
-
>
RegisterSession
(
this
)
;
if
(
mAPZ
)
{
mAPZ
-
>
SetCompositorSession
(
this
)
;
}
}
RemoteCompositorSession
:
:
~
RemoteCompositorSession
(
)
{
MOZ_ASSERT
(
!
mCompositorBridgeChild
)
;
#
if
defined
(
MOZ_WIDGET_ANDROID
)
MOZ_ASSERT
(
!
mUiCompositorControllerChild
)
;
#
endif
}
void
RemoteCompositorSession
:
:
NotifyDeviceReset
(
uint64_t
aSeqNo
)
{
MOZ_ASSERT
(
mWidget
)
;
mWidget
-
>
OnRenderingDeviceReset
(
aSeqNo
)
;
}
void
RemoteCompositorSession
:
:
NotifySessionLost
(
)
{
MOZ_ASSERT
(
mWidget
)
;
mWidget
-
>
NotifyRemoteCompositorSessionLost
(
this
)
;
}
CompositorBridgeParent
*
RemoteCompositorSession
:
:
GetInProcessBridge
(
)
const
{
return
nullptr
;
}
void
RemoteCompositorSession
:
:
SetContentController
(
GeckoContentController
*
aController
)
{
mContentController
=
aController
;
mCompositorBridgeChild
-
>
SendPAPZConstructor
(
new
APZChild
(
aController
)
0
)
;
}
GeckoContentController
*
RemoteCompositorSession
:
:
GetContentController
(
)
{
return
mContentController
.
get
(
)
;
}
nsIWidget
*
RemoteCompositorSession
:
:
GetWidget
(
)
{
return
mWidget
;
}
RefPtr
<
IAPZCTreeManager
>
RemoteCompositorSession
:
:
GetAPZCTreeManager
(
)
const
{
return
mAPZ
;
}
bool
RemoteCompositorSession
:
:
Reset
(
const
nsTArray
<
LayersBackend
>
&
aBackendHints
uint64_t
aSeqNo
TextureFactoryIdentifier
*
aOutIdentifier
)
{
bool
didReset
;
Unused
<
<
mCompositorBridgeChild
-
>
SendReset
(
aBackendHints
aSeqNo
&
didReset
aOutIdentifier
)
;
return
didReset
;
}
void
RemoteCompositorSession
:
:
Shutdown
(
)
{
mContentController
=
nullptr
;
if
(
mAPZ
)
{
mAPZ
-
>
SetCompositorSession
(
nullptr
)
;
}
mCompositorBridgeChild
-
>
Destroy
(
)
;
mCompositorBridgeChild
=
nullptr
;
mCompositorWidgetDelegate
=
nullptr
;
mWidget
=
nullptr
;
#
if
defined
(
MOZ_WIDGET_ANDROID
)
if
(
mUiCompositorControllerChild
)
{
mUiCompositorControllerChild
-
>
Destroy
(
)
;
mUiCompositorControllerChild
=
nullptr
;
}
#
endif
GPUProcessManager
:
:
Get
(
)
-
>
UnregisterSession
(
this
)
;
}
}
}
