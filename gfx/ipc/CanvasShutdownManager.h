#
ifndef
_include_gfx_ipc_CanvasShutdownManager_h__
#
define
_include_gfx_ipc_CanvasShutdownManager_h__
#
include
"
mozilla
/
ThreadLocal
.
h
"
#
include
<
set
>
namespace
mozilla
{
namespace
dom
{
class
CanvasRenderingContext2D
;
class
StrongWorkerRef
;
class
ThreadSafeWorkerRef
;
}
namespace
gfx
{
class
CanvasShutdownManager
final
{
public
:
static
CanvasShutdownManager
*
Get
(
)
;
static
CanvasShutdownManager
*
MaybeGet
(
)
;
static
void
Shutdown
(
)
;
dom
:
:
ThreadSafeWorkerRef
*
GetWorkerRef
(
)
const
{
return
mWorkerRef
;
}
void
AddShutdownObserver
(
dom
:
:
CanvasRenderingContext2D
*
aCanvas
)
;
void
RemoveShutdownObserver
(
dom
:
:
CanvasRenderingContext2D
*
aCanvas
)
;
private
:
explicit
CanvasShutdownManager
(
dom
:
:
StrongWorkerRef
*
aWorkerRef
)
;
CanvasShutdownManager
(
)
;
~
CanvasShutdownManager
(
)
;
void
Destroy
(
)
;
RefPtr
<
dom
:
:
ThreadSafeWorkerRef
>
mWorkerRef
;
std
:
:
set
<
dom
:
:
CanvasRenderingContext2D
*
>
mActiveCanvas
;
static
MOZ_THREAD_LOCAL
(
CanvasShutdownManager
*
)
sLocalManager
;
}
;
}
}
#
endif
