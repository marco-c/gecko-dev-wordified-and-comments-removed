#
include
"
GPUChild
.
h
"
#
include
"
gfxPrefs
.
h
"
#
include
"
GPUProcessHost
.
h
"
namespace
mozilla
{
namespace
gfx
{
GPUChild
:
:
GPUChild
(
GPUProcessHost
*
aHost
)
:
mHost
(
aHost
)
{
MOZ_COUNT_CTOR
(
GPUChild
)
;
}
GPUChild
:
:
~
GPUChild
(
)
{
MOZ_COUNT_DTOR
(
GPUChild
)
;
}
void
GPUChild
:
:
Init
(
)
{
nsTArray
<
GfxPrefSetting
>
prefs
;
for
(
auto
pref
:
gfxPrefs
:
:
all
(
)
)
{
if
(
pref
-
>
HasDefaultValue
(
)
)
{
return
;
}
GfxPrefValue
value
;
pref
-
>
GetCachedValue
(
&
value
)
;
prefs
.
AppendElement
(
GfxPrefSetting
(
pref
-
>
Index
(
)
value
)
)
;
}
SendInit
(
prefs
)
;
}
void
GPUChild
:
:
ActorDestroy
(
ActorDestroyReason
aWhy
)
{
mHost
-
>
OnChannelClosed
(
)
;
}
class
DeferredDeleteGPUChild
:
public
Runnable
{
public
:
explicit
DeferredDeleteGPUChild
(
UniquePtr
<
GPUChild
>
&
&
aChild
)
:
mChild
(
Move
(
aChild
)
)
{
}
NS_IMETHODIMP
Run
(
)
override
{
return
NS_OK
;
}
private
:
UniquePtr
<
GPUChild
>
mChild
;
}
;
void
GPUChild
:
:
Destroy
(
UniquePtr
<
GPUChild
>
&
&
aChild
)
{
NS_DispatchToMainThread
(
new
DeferredDeleteGPUChild
(
Move
(
aChild
)
)
)
;
}
}
}
