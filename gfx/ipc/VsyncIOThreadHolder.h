#
ifndef
mozilla_gfx_ipc_VsyncIOThreadHolder_h
#
define
mozilla_gfx_ipc_VsyncIOThreadHolder_h
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsThreadUtils
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
VsyncIOThreadHolder
final
{
public
:
VsyncIOThreadHolder
(
)
;
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
VsyncIOThreadHolder
)
bool
Start
(
)
;
RefPtr
<
nsIThread
>
GetThread
(
)
const
;
bool
IsOnCurrentThread
(
)
const
{
return
mThread
-
>
IsOnCurrentThread
(
)
;
}
void
Dispatch
(
already_AddRefed
<
nsIRunnable
>
task
)
{
mThread
-
>
Dispatch
(
std
:
:
move
(
task
)
NS_DISPATCH_NORMAL
)
;
}
private
:
~
VsyncIOThreadHolder
(
)
;
private
:
RefPtr
<
nsIThread
>
mThread
;
}
;
}
}
#
endif
