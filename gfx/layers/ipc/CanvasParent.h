#
ifndef
mozilla_layers_CanvasParent_h
#
define
mozilla_layers_CanvasParent_h
#
include
"
mozilla
/
ipc
/
CrossProcessSemaphore
.
h
"
#
include
"
mozilla
/
layers
/
CanvasTranslator
.
h
"
#
include
"
mozilla
/
layers
/
PCanvasParent
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
namespace
mozilla
{
namespace
layers
{
class
TextureData
;
class
CanvasParent
final
:
public
PCanvasParent
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
CanvasParent
)
friend
class
PProtocolParent
;
static
already_AddRefed
<
CanvasParent
>
Create
(
Endpoint
<
PCanvasParent
>
&
&
aEndpoint
)
;
static
bool
IsInCanvasThread
(
)
;
static
void
Shutdown
(
)
;
ipc
:
:
IPCResult
RecvCreateTranslator
(
const
TextureType
&
aTextureType
const
ipc
:
:
SharedMemoryBasic
:
:
Handle
&
aReadHandle
const
CrossProcessSemaphoreHandle
&
aReaderSem
const
CrossProcessSemaphoreHandle
&
aWriterSem
)
;
ipc
:
:
IPCResult
RecvResumeTranslation
(
)
;
void
ActorDestroy
(
ActorDestroyReason
why
)
final
{
}
void
DeallocPCanvasParent
(
)
;
UniquePtr
<
SurfaceDescriptor
>
LookupSurfaceDescriptorForClientDrawTarget
(
const
uintptr_t
aDrawTarget
)
;
private
:
CanvasParent
(
)
;
~
CanvasParent
(
)
final
;
DISALLOW_COPY_AND_ASSIGN
(
CanvasParent
)
;
void
Bind
(
Endpoint
<
PCanvasParent
>
&
&
aEndpoint
)
;
void
PostStartTranslationTask
(
)
;
void
StartTranslation
(
)
;
RefPtr
<
CanvasParent
>
mSelfRef
;
UniquePtr
<
CanvasTranslator
>
mTranslator
;
}
;
}
}
#
endif
