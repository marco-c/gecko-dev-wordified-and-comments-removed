#
ifndef
mozilla_layers_ShadowLayerParent_h
#
define
mozilla_layers_ShadowLayerParent_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ipc
/
ProtocolUtils
.
h
"
#
include
"
mozilla
/
layers
/
PLayerParent
.
h
"
namespace
mozilla
{
namespace
layers
{
class
ContainerLayer
;
class
Layer
;
class
CanvasLayer
;
class
ColorLayer
;
class
TextLayer
;
class
ContainerLayer
;
class
ImageLayer
;
class
RefLayer
;
class
PaintedLayer
;
class
ShadowLayerParent
:
public
PLayerParent
{
public
:
ShadowLayerParent
(
)
;
virtual
~
ShadowLayerParent
(
)
;
void
Bind
(
Layer
*
layer
)
;
void
Destroy
(
)
;
Layer
*
AsLayer
(
)
const
{
return
mLayer
;
}
ContainerLayer
*
AsContainerLayer
(
)
const
;
CanvasLayer
*
AsCanvasLayer
(
)
const
;
ColorLayer
*
AsColorLayer
(
)
const
;
TextLayer
*
AsTextLayer
(
)
const
;
ImageLayer
*
AsImageLayer
(
)
const
;
BorderLayer
*
AsBorderLayer
(
)
const
;
RefLayer
*
AsRefLayer
(
)
const
;
PaintedLayer
*
AsPaintedLayer
(
)
const
;
private
:
virtual
void
ActorDestroy
(
ActorDestroyReason
why
)
override
;
void
Disconnect
(
)
;
RefPtr
<
Layer
>
mLayer
;
}
;
}
}
#
endif
