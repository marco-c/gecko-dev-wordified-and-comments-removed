#
ifndef
MOZILLA_GFX_SHAREDSURFACESMEMORYREPORT_H
#
define
MOZILLA_GFX_SHAREDSURFACESMEMORYREPORT_H
#
include
<
cstdint
>
#
include
<
unordered_map
>
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
mozilla
/
gfx
/
Point
.
h
"
namespace
mozilla
{
namespace
layers
{
class
SharedSurfacesMemoryReport
final
{
public
:
class
SurfaceEntry
final
{
public
:
base
:
:
ProcessId
mCreatorPid
;
gfx
:
:
IntSize
mSize
;
int32_t
mStride
;
uint32_t
mConsumers
;
bool
mCreatorRef
;
}
;
std
:
:
unordered_map
<
uint64_t
SurfaceEntry
>
mSurfaces
;
}
;
}
}
namespace
IPC
{
template
<
>
struct
ParamTraits
<
mozilla
:
:
layers
:
:
SharedSurfacesMemoryReport
>
{
typedef
mozilla
:
:
layers
:
:
SharedSurfacesMemoryReport
paramType
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
{
WriteParam
(
aMsg
aParam
.
mSurfaces
)
;
}
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
{
return
ReadParam
(
aMsg
aIter
&
aResult
-
>
mSurfaces
)
;
}
}
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
layers
:
:
SharedSurfacesMemoryReport
:
:
SurfaceEntry
>
:
public
PlainOldDataSerializer
<
mozilla
:
:
layers
:
:
SharedSurfacesMemoryReport
:
:
SurfaceEntry
>
{
}
;
}
#
endif
