#
include
"
ShadowLayerChild
.
h
"
#
include
"
Layers
.
h
"
#
include
"
ShadowLayers
.
h
"
namespace
mozilla
{
namespace
layers
{
ShadowLayerChild
:
:
ShadowLayerChild
(
)
:
mLayer
(
nullptr
)
{
}
ShadowLayerChild
:
:
~
ShadowLayerChild
(
)
{
}
void
ShadowLayerChild
:
:
SetShadowableLayer
(
ShadowableLayer
*
aLayer
)
{
MOZ_ASSERT
(
!
mLayer
)
;
mLayer
=
aLayer
;
}
void
ShadowLayerChild
:
:
ActorDestroy
(
ActorDestroyReason
why
)
{
MOZ_ASSERT
(
AncestorDeletion
!
=
why
"
shadowable
layer
should
have
been
cleaned
up
by
now
"
)
;
if
(
AbnormalShutdown
=
=
why
)
{
Disconnect
(
)
;
}
}
void
ShadowLayerChild
:
:
Disconnect
(
)
{
if
(
mLayer
)
{
mLayer
-
>
AsLayer
(
)
-
>
Disconnect
(
)
;
mLayer
=
nullptr
;
}
}
void
ShadowLayerChild
:
:
Destroy
(
PLayerChild
*
aActor
)
{
ShadowLayerChild
*
actor
=
static_cast
<
ShadowLayerChild
*
>
(
aActor
)
;
actor
-
>
Disconnect
(
)
;
PLayerChild
:
:
Send__delete__
(
actor
)
;
}
}
}
