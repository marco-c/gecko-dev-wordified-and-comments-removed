using
mozilla
:
:
CSSRect
from
"
Units
.
h
"
;
using
mozilla
:
:
CSSToScreenScale
from
"
Units
.
h
"
;
using
mozilla
:
:
ScreenIntSize
from
"
Units
.
h
"
;
using
mozilla
:
:
ScreenPoint
from
"
Units
.
h
"
;
using
mozilla
:
:
layers
:
:
CompositorScrollUpdate
from
"
mozilla
/
layers
/
CompositorScrollUpdate
.
h
"
;
include
"
mozilla
/
GfxMessageUtils
.
h
"
;
include
"
mozilla
/
layers
/
LayersMessageUtils
.
h
"
;
namespace
mozilla
{
namespace
layers
{
[
NeedsOtherPid
ParentProc
=
compositor
ChildProc
=
Parent
]
sync
protocol
PUiCompositorController
{
parent
:
sync
Pause
(
)
;
sync
Resume
(
)
returns
(
bool
aOutResumed
)
;
sync
ResumeAndResize
(
int32_t
aX
int32_t
aY
int32_t
aWidth
int32_t
aHeight
)
returns
(
bool
aOutResumed
)
;
async
InvalidateAndRender
(
)
;
async
MaxToolbarHeight
(
int32_t
aHeight
)
;
async
FixedBottomOffset
(
int32_t
aOffset
)
;
async
DefaultClearColor
(
uint32_t
aColor
)
;
async
RequestScreenPixels
(
)
;
async
EnableLayerUpdateNotifications
(
bool
aEnable
)
;
child
:
async
ToolbarAnimatorMessageFromCompositor
(
int32_t
aMessage
)
;
async
NotifyCompositorScrollUpdate
(
CompositorScrollUpdate
aUpdate
)
;
async
ScreenPixels
(
Shmem
aMem
ScreenIntSize
aSize
bool
aNeedsYFlip
)
;
}
;
}
}
