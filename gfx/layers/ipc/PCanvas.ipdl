include
protocol
PCanvasManager
;
include
"
mozilla
/
layers
/
LayersMessageUtils
.
h
"
;
include
"
mozilla
/
layers
/
CanvasTranslator
.
h
"
;
[
MoveOnly
]
using
mozilla
:
:
CrossProcessSemaphoreHandle
from
"
mozilla
/
ipc
/
CrossProcessSemaphore
.
h
"
;
using
mozilla
:
:
layers
:
:
TextureType
from
"
mozilla
/
layers
/
LayersTypes
.
h
"
;
[
MoveOnly
]
using
mozilla
:
:
ipc
:
:
SharedMemoryBasic
:
:
Handle
from
"
mozilla
/
ipc
/
SharedMemoryBasic
.
h
"
;
using
mozilla
:
:
gfx
:
:
BackendType
from
"
mozilla
/
gfx
/
Types
.
h
"
;
namespace
mozilla
{
namespace
layers
{
[
ParentImpl
=
"
CanvasTranslator
"
]
async
protocol
PCanvas
{
manager
PCanvasManager
;
parent
:
async
InitTranslator
(
TextureType
aTextureType
TextureType
aWebglTextureType
BackendType
aBackendType
Handle
aHeaderHandle
Handle
[
]
aBufferHandles
uint64_t
aBufferSize
CrossProcessSemaphoreHandle
aReaderSem
CrossProcessSemaphoreHandle
aWriterSem
)
;
async
RestartTranslation
(
)
;
async
AddBuffer
(
Handle
aBufferHandle
uint64_t
aBufferSize
)
;
async
SetDataSurfaceBuffer
(
Handle
aBufferHandle
uint64_t
aBufferSize
)
;
async
ClearCachedResources
(
)
;
async
__delete__
(
)
;
child
:
async
NotifyDeviceChanged
(
)
;
async
Deactivate
(
)
;
async
BlockCanvas
(
)
;
async
NotifyRequiresRefresh
(
int64_t
aTextureId
)
;
async
SnapshotShmem
(
int64_t
aTextureId
Handle
aShmemHandle
uint32_t
aShmemSize
)
returns
(
bool
aSuccess
)
;
}
;
}
}
