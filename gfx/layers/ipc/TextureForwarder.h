#
ifndef
MOZILLA_LAYERS_TEXTUREFORWARDER
#
define
MOZILLA_LAYERS_TEXTUREFORWARDER
#
include
<
stdint
.
h
>
#
include
"
gfxTypes
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
layers
/
ISurfaceAllocator
.
h
"
#
include
"
mozilla
/
layers
/
LayersTypes
.
h
"
#
include
"
mozilla
/
layers
/
TextureClient
.
h
"
#
include
"
nsRegion
.
h
"
#
include
"
mozilla
/
gfx
/
Rect
.
h
"
namespace
mozilla
{
namespace
layers
{
class
TextureForwarder
:
public
ClientIPCAllocator
{
public
:
TextureForwarder
(
)
{
}
virtual
PTextureChild
*
CreateTexture
(
const
SurfaceDescriptor
&
aSharedData
LayersBackend
aLayersBackend
TextureFlags
aFlags
)
=
0
;
virtual
int32_t
GetMaxTextureSize
(
)
const
override
{
return
mTextureFactoryIdentifier
.
mMaxTextureSize
;
}
LayersBackend
GetCompositorBackendType
(
)
const
{
return
mTextureFactoryIdentifier
.
mParentBackend
;
}
bool
SupportsTextureBlitting
(
)
const
{
return
mTextureFactoryIdentifier
.
mSupportsTextureBlitting
;
}
bool
SupportsPartialUploads
(
)
const
{
return
mTextureFactoryIdentifier
.
mSupportsPartialUploads
;
}
const
TextureFactoryIdentifier
&
GetTextureFactoryIdentifier
(
)
const
{
return
mTextureFactoryIdentifier
;
}
protected
:
TextureFactoryIdentifier
mTextureFactoryIdentifier
;
}
;
}
}
#
endif
