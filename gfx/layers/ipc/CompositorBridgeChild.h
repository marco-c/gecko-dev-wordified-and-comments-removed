#
ifndef
mozilla_layers_CompositorBridgeChild_h
#
define
mozilla_layers_CompositorBridgeChild_h
#
include
"
base
/
basictypes
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ipc
/
ProtocolUtils
.
h
"
#
include
"
mozilla
/
layers
/
PCompositorBridgeChild
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
nsClassHashtable
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsHashKeys
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
ThreadSafeRefcountingWithMainThreadDestruction
.
h
"
#
include
"
nsWeakReference
.
h
"
namespace
mozilla
{
namespace
dom
{
class
TabChild
;
}
namespace
layers
{
using
mozilla
:
:
dom
:
:
TabChild
;
class
ClientLayerManager
;
class
CompositorBridgeParent
;
struct
FrameMetrics
;
class
CompositorBridgeChild
final
:
public
PCompositorBridgeChild
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING_WITH_MAIN_THREAD_DESTRUCTION
(
CompositorBridgeChild
)
public
:
explicit
CompositorBridgeChild
(
ClientLayerManager
*
aLayerManager
)
;
void
Destroy
(
)
;
bool
LookupCompositorFrameMetrics
(
const
FrameMetrics
:
:
ViewID
aId
FrameMetrics
&
)
;
static
PCompositorBridgeChild
*
Create
(
Transport
*
aTransport
ProcessId
aOtherProcess
)
;
bool
OpenSameProcess
(
CompositorBridgeParent
*
aParent
)
;
static
CompositorBridgeChild
*
Get
(
)
;
static
bool
ChildProcessHasCompositor
(
)
{
return
sCompositor
!
=
nullptr
;
}
void
AddOverfillObserver
(
ClientLayerManager
*
aLayerManager
)
;
virtual
bool
RecvClearCachedResources
(
const
uint64_t
&
id
)
override
;
virtual
bool
RecvDidComposite
(
const
uint64_t
&
aId
const
uint64_t
&
aTransactionId
const
TimeStamp
&
aCompositeStart
const
TimeStamp
&
aCompositeEnd
)
override
;
virtual
bool
RecvInvalidateLayers
(
const
uint64_t
&
aLayersId
)
override
;
virtual
bool
RecvCompositorUpdated
(
const
uint64_t
&
aLayersId
const
TextureFactoryIdentifier
&
aNewIdentifier
)
override
;
virtual
bool
RecvOverfill
(
const
uint32_t
&
aOverfill
)
override
;
virtual
bool
RecvUpdatePluginConfigurations
(
const
LayoutDeviceIntPoint
&
aContentOffset
const
LayoutDeviceIntRegion
&
aVisibleRegion
nsTArray
<
PluginWindowData
>
&
&
aPlugins
)
override
;
virtual
bool
RecvHideAllPlugins
(
const
uintptr_t
&
aParentWidget
)
override
;
void
RequestNotifyAfterRemotePaint
(
TabChild
*
aTabChild
)
;
void
CancelNotifyAfterRemotePaint
(
TabChild
*
aTabChild
)
;
bool
SendWillStop
(
)
;
bool
SendPause
(
)
;
bool
SendResume
(
)
;
bool
SendNotifyHidden
(
const
uint64_t
&
id
)
;
bool
SendNotifyVisible
(
const
uint64_t
&
id
)
;
bool
SendNotifyChildCreated
(
const
uint64_t
&
id
)
;
bool
SendAdoptChild
(
const
uint64_t
&
id
)
;
bool
SendMakeSnapshot
(
const
SurfaceDescriptor
&
inSnapshot
const
gfx
:
:
IntRect
&
dirtyRect
)
;
bool
SendFlushRendering
(
)
;
bool
SendGetTileSize
(
int32_t
*
tileWidth
int32_t
*
tileHeight
)
;
bool
SendStartFrameTimeRecording
(
const
int32_t
&
bufferSize
uint32_t
*
startIndex
)
;
bool
SendStopFrameTimeRecording
(
const
uint32_t
&
startIndex
nsTArray
<
float
>
*
intervals
)
;
bool
SendNotifyRegionInvalidated
(
const
nsIntRegion
&
region
)
;
bool
SendRequestNotifyAfterRemotePaint
(
)
;
bool
SendClearApproximatelyVisibleRegions
(
uint64_t
aLayersId
uint32_t
aPresShellId
)
;
bool
SendNotifyApproximatelyVisibleRegion
(
const
ScrollableLayerGuid
&
aGuid
const
mozilla
:
:
CSSIntRegion
&
aRegion
)
;
private
:
virtual
~
CompositorBridgeChild
(
)
;
virtual
PLayerTransactionChild
*
AllocPLayerTransactionChild
(
const
nsTArray
<
LayersBackend
>
&
aBackendHints
const
uint64_t
&
aId
TextureFactoryIdentifier
*
aTextureFactoryIdentifier
bool
*
aSuccess
)
override
;
virtual
bool
DeallocPLayerTransactionChild
(
PLayerTransactionChild
*
aChild
)
override
;
virtual
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
virtual
bool
RecvSharedCompositorFrameMetrics
(
const
mozilla
:
:
ipc
:
:
SharedMemoryBasic
:
:
Handle
&
metrics
const
CrossProcessMutexHandle
&
handle
const
uint64_t
&
aLayersId
const
uint32_t
&
aAPZCId
)
override
;
virtual
bool
RecvReleaseSharedCompositorFrameMetrics
(
const
ViewID
&
aId
const
uint32_t
&
aAPZCId
)
override
;
virtual
bool
RecvRemotePaintIsReady
(
)
override
;
class
SharedFrameMetricsData
{
public
:
SharedFrameMetricsData
(
const
mozilla
:
:
ipc
:
:
SharedMemoryBasic
:
:
Handle
&
metrics
const
CrossProcessMutexHandle
&
handle
const
uint64_t
&
aLayersId
const
uint32_t
&
aAPZCId
)
;
~
SharedFrameMetricsData
(
)
;
void
CopyFrameMetrics
(
FrameMetrics
*
aFrame
)
;
FrameMetrics
:
:
ViewID
GetViewID
(
)
;
uint64_t
GetLayersId
(
)
const
;
uint32_t
GetAPZCId
(
)
;
private
:
RefPtr
<
mozilla
:
:
ipc
:
:
SharedMemoryBasic
>
mBuffer
;
CrossProcessMutex
*
mMutex
;
uint64_t
mLayersId
;
uint32_t
mAPZCId
;
}
;
RefPtr
<
ClientLayerManager
>
mLayerManager
;
RefPtr
<
CompositorBridgeParent
>
mCompositorBridgeParent
;
nsClassHashtable
<
nsUint64HashKey
SharedFrameMetricsData
>
mFrameMetricsTable
;
static
CompositorBridgeChild
*
sCompositor
;
nsWeakPtr
mWeakTabChild
;
DISALLOW_EVIL_CONSTRUCTORS
(
CompositorBridgeChild
)
;
AutoTArray
<
ClientLayerManager
*
0
>
mOverfillObservers
;
bool
mCanSend
;
}
;
}
}
#
endif
