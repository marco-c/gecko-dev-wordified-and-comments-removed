#
ifndef
MOZILLA_GFX_COMPOSITORMANAGERPARENT_H
#
define
MOZILLA_GFX_COMPOSITORMANAGERPARENT_H
#
include
<
stdint
.
h
>
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
mozilla
/
StaticMutex
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
layers
/
PCompositorManagerParent
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
layers
{
class
CompositorThreadHolder
;
class
CompositorManagerParent
final
:
public
PCompositorManagerParent
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
CompositorManagerParent
)
public
:
static
already_AddRefed
<
CompositorManagerParent
>
CreateSameProcess
(
)
;
static
void
Create
(
Endpoint
<
PCompositorManagerParent
>
&
&
aEndpoint
)
;
void
ActorDestroy
(
ActorDestroyReason
aReason
)
override
;
ipc
:
:
IPCResult
RecvIgnoreTemporarySkeletonMessage
(
)
override
{
return
IPC_OK
(
)
;
}
private
:
static
StaticRefPtr
<
CompositorManagerParent
>
sInstance
;
static
StaticMutex
sMutex
;
CompositorManagerParent
(
)
;
~
CompositorManagerParent
(
)
override
;
void
Bind
(
Endpoint
<
PCompositorManagerParent
>
&
&
aEndpoint
)
;
void
DeallocPCompositorManagerParent
(
)
override
;
RefPtr
<
CompositorThreadHolder
>
mCompositorThreadHolder
;
}
;
}
}
#
endif
