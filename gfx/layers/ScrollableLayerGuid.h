#
ifndef
GFX_SCROLLABLELAYERGUID_H
#
define
GFX_SCROLLABLELAYERGUID_H
#
include
<
stdint
.
h
>
#
include
"
mozilla
/
gfx
/
Logging
.
h
"
#
include
"
mozilla
/
layers
/
LayersTypes
.
h
"
#
include
"
nsHashKeys
.
h
"
#
include
"
nsPrintfCString
.
h
"
namespace
mozilla
{
namespace
layers
{
struct
ScrollableLayerGuid
{
typedef
uint64_t
ViewID
;
typedef
nsUint64HashKey
ViewIDHashKey
;
static
const
ViewID
NULL_SCROLL_ID
;
static
const
ViewID
START_SCROLL_ID
=
2
;
LayersId
mLayersId
;
uint32_t
mPresShellId
;
ViewID
mScrollId
;
ScrollableLayerGuid
(
)
;
ScrollableLayerGuid
(
LayersId
aLayersId
uint32_t
aPresShellId
ViewID
aScrollId
)
;
ScrollableLayerGuid
(
const
ScrollableLayerGuid
&
other
)
=
default
;
~
ScrollableLayerGuid
(
)
=
default
;
bool
operator
=
=
(
const
ScrollableLayerGuid
&
other
)
const
;
bool
operator
!
=
(
const
ScrollableLayerGuid
&
other
)
const
;
bool
operator
<
(
const
ScrollableLayerGuid
&
other
)
const
;
struct
HashFn
{
std
:
:
size_t
operator
(
)
(
const
ScrollableLayerGuid
&
aGuid
)
const
;
}
;
struct
HashIgnoringPresShellFn
{
std
:
:
size_t
operator
(
)
(
const
ScrollableLayerGuid
&
aGuid
)
const
;
}
;
struct
EqualIgnoringPresShellFn
{
bool
operator
(
)
(
const
ScrollableLayerGuid
&
lhs
const
ScrollableLayerGuid
&
rhs
)
const
;
}
;
}
;
template
<
int
LogLevel
>
gfx
:
:
Log
<
LogLevel
>
&
operator
<
<
(
gfx
:
:
Log
<
LogLevel
>
&
log
const
ScrollableLayerGuid
&
aGuid
)
{
return
log
<
<
nsPrintfCString
(
"
(
0x
%
"
PRIx64
"
%
u
%
"
PRIu64
"
)
"
uint64_t
(
aGuid
.
mLayersId
)
aGuid
.
mPresShellId
aGuid
.
mScrollId
)
.
get
(
)
;
}
}
}
#
endif
