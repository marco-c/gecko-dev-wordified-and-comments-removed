#
include
"
APZTestCommon
.
h
"
#
include
"
InputUtils
.
h
"
#
include
"
gtest
/
gtest
.
h
"
#
include
"
RecentEventsBuffer
.
h
"
struct
TestEvent
{
public
:
explicit
TestEvent
(
TimeStamp
timeStamp
size_t
id
)
;
TimeStamp
mTimeStamp
;
size_t
mId
;
}
;
class
RecentEventsBufferTest
:
public
:
:
testing
:
:
Test
{
public
:
TimeStamp
start
;
void
SetUp
(
)
{
start
=
TimeStamp
:
:
Now
(
)
;
}
}
;
TestEvent
:
:
TestEvent
(
TimeStamp
timeStamp
size_t
id
)
:
mTimeStamp
(
timeStamp
)
mId
(
id
)
{
}
TEST_F
(
RecentEventsBufferTest
Basic
)
{
RecentEventsBuffer
<
TestEvent
>
buffer
(
TimeDuration
:
:
FromMilliseconds
(
200
)
)
;
buffer
.
push
(
TestEvent
(
start
0U
)
)
;
buffer
.
push
(
TestEvent
(
start
+
TimeDuration
:
:
FromMilliseconds
(
100
)
1
)
)
;
buffer
.
push
(
TestEvent
(
start
+
TimeDuration
:
:
FromMilliseconds
(
201
)
2
)
)
;
EXPECT_EQ
(
buffer
.
size
(
)
2U
)
;
EXPECT_EQ
(
buffer
.
front
(
)
.
mId
1U
)
;
EXPECT_EQ
(
buffer
.
back
(
)
.
mId
2U
)
;
}
TEST_F
(
RecentEventsBufferTest
MinSize
)
{
RecentEventsBuffer
<
TestEvent
>
buffer
(
TimeDuration
:
:
FromMilliseconds
(
100
)
3
)
;
buffer
.
push
(
TestEvent
(
start
0U
)
)
;
buffer
.
push
(
TestEvent
(
start
+
TimeDuration
:
:
FromMilliseconds
(
1
)
1U
)
)
;
buffer
.
push
(
TestEvent
(
start
+
TimeDuration
:
:
FromMilliseconds
(
101
)
2U
)
)
;
EXPECT_EQ
(
buffer
.
size
(
)
3U
)
;
buffer
.
push
(
TestEvent
(
start
+
TimeDuration
:
:
FromMilliseconds
(
102
)
3U
)
)
;
EXPECT_EQ
(
buffer
.
size
(
)
3U
)
;
}
