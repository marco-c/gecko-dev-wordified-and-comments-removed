#
ifndef
mozilla_layers_APZCBasicTester_h
#
define
mozilla_layers_APZCBasicTester_h
#
include
"
APZTestCommon
.
h
"
#
include
"
gfxPrefs
.
h
"
#
include
"
mozilla
/
layers
/
APZSampler
.
h
"
#
include
"
mozilla
/
layers
/
APZUpdater
.
h
"
class
APZCBasicTester
:
public
APZCTesterBase
{
public
:
explicit
APZCBasicTester
(
AsyncPanZoomController
:
:
GestureBehavior
aGestureBehavior
=
AsyncPanZoomController
:
:
DEFAULT_GESTURES
)
:
mGestureBehavior
(
aGestureBehavior
)
{
}
protected
:
virtual
void
SetUp
(
)
{
gfxPrefs
:
:
GetSingleton
(
)
;
APZThreadUtils
:
:
SetThreadAssertionsEnabled
(
false
)
;
APZThreadUtils
:
:
SetControllerThread
(
MessageLoop
:
:
current
(
)
)
;
tm
=
new
TestAPZCTreeManager
(
mcc
)
;
updater
=
new
APZUpdater
(
tm
false
)
;
sampler
=
new
APZSampler
(
tm
)
;
apzc
=
new
TestAsyncPanZoomController
(
LayersId
{
0
}
mcc
tm
mGestureBehavior
)
;
apzc
-
>
SetFrameMetrics
(
TestFrameMetrics
(
)
)
;
apzc
-
>
GetScrollMetadata
(
)
.
SetIsLayersIdRoot
(
true
)
;
}
CSSRect
GetScrollRange
(
)
const
{
const
FrameMetrics
&
metrics
=
apzc
-
>
GetFrameMetrics
(
)
;
return
CSSRect
(
metrics
.
GetScrollableRect
(
)
.
TopLeft
(
)
metrics
.
GetScrollableRect
(
)
.
Size
(
)
-
metrics
.
CalculateCompositedSizeInCssPixels
(
)
)
;
}
virtual
void
TearDown
(
)
{
while
(
mcc
-
>
RunThroughDelayedTasks
(
)
)
;
apzc
-
>
Destroy
(
)
;
tm
-
>
ClearTree
(
)
;
tm
-
>
ClearContentController
(
)
;
}
void
MakeApzcWaitForMainThread
(
)
{
apzc
-
>
SetWaitForMainThread
(
)
;
}
void
MakeApzcZoomable
(
)
{
apzc
-
>
UpdateZoomConstraints
(
ZoomConstraints
(
true
true
CSSToParentLayerScale
(
0
.
25f
)
CSSToParentLayerScale
(
4
.
0f
)
)
)
;
}
void
MakeApzcUnzoomable
(
)
{
apzc
-
>
UpdateZoomConstraints
(
ZoomConstraints
(
false
false
CSSToParentLayerScale
(
1
.
0f
)
CSSToParentLayerScale
(
1
.
0f
)
)
)
;
}
void
PanIntoOverscroll
(
)
;
void
SampleAnimationOnce
(
)
{
const
TimeDuration
increment
=
TimeDuration
:
:
FromMilliseconds
(
1
)
;
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
mcc
-
>
AdvanceBy
(
increment
)
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
}
void
SampleAnimationUntilRecoveredFromOverscroll
(
const
ParentLayerPoint
&
aExpectedScrollOffset
)
{
const
TimeDuration
increment
=
TimeDuration
:
:
FromMilliseconds
(
1
)
;
bool
recoveredFromOverscroll
=
false
;
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
while
(
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
)
{
EXPECT_EQ
(
aExpectedScrollOffset
pointOut
)
;
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
if
(
!
apzc
-
>
IsOverscrolled
(
)
)
{
recoveredFromOverscroll
=
true
;
}
mcc
-
>
AdvanceBy
(
increment
)
;
}
EXPECT_TRUE
(
recoveredFromOverscroll
)
;
apzc
-
>
AssertStateIsReset
(
)
;
}
void
TestOverscroll
(
)
;
AsyncPanZoomController
:
:
GestureBehavior
mGestureBehavior
;
RefPtr
<
TestAPZCTreeManager
>
tm
;
RefPtr
<
APZSampler
>
sampler
;
RefPtr
<
APZUpdater
>
updater
;
RefPtr
<
TestAsyncPanZoomController
>
apzc
;
}
;
#
endif
