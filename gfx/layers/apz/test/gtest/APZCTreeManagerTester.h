#
ifndef
mozilla_layers_APZCTreeManagerTester_h
#
define
mozilla_layers_APZCTreeManagerTester_h
#
include
"
APZTestCommon
.
h
"
#
include
"
gfxPlatform
.
h
"
class
APZCTreeManagerTester
:
public
:
:
testing
:
:
Test
{
protected
:
virtual
void
SetUp
(
)
{
gfxPrefs
:
:
GetSingleton
(
)
;
gfxPlatform
:
:
GetPlatform
(
)
;
APZThreadUtils
:
:
SetThreadAssertionsEnabled
(
false
)
;
APZThreadUtils
:
:
SetControllerThread
(
MessageLoop
:
:
current
(
)
)
;
mcc
=
new
NiceMock
<
MockContentControllerDelayed
>
(
)
;
manager
=
new
TestAPZCTreeManager
(
mcc
)
;
}
virtual
void
TearDown
(
)
{
while
(
mcc
-
>
RunThroughDelayedTasks
(
)
)
;
manager
-
>
ClearTree
(
)
;
}
void
SampleAnimationsOnce
(
)
{
const
TimeDuration
increment
=
TimeDuration
:
:
FromMilliseconds
(
1
)
;
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
mcc
-
>
AdvanceBy
(
increment
)
;
for
(
const
RefPtr
<
Layer
>
&
layer
:
layers
)
{
if
(
TestAsyncPanZoomController
*
apzc
=
ApzcOf
(
layer
)
)
{
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
}
}
}
RefPtr
<
MockContentControllerDelayed
>
mcc
;
nsTArray
<
RefPtr
<
Layer
>
>
layers
;
RefPtr
<
LayerManager
>
lm
;
RefPtr
<
Layer
>
root
;
RefPtr
<
TestAPZCTreeManager
>
manager
;
protected
:
static
void
SetScrollableFrameMetrics
(
Layer
*
aLayer
FrameMetrics
:
:
ViewID
aScrollId
CSSRect
aScrollableRect
=
CSSRect
(
-
1
-
1
-
1
-
1
)
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetScrollId
(
aScrollId
)
;
if
(
aScrollId
=
=
FrameMetrics
:
:
START_SCROLL_ID
)
{
metrics
.
SetIsLayersIdRoot
(
true
)
;
}
IntRect
layerBound
=
aLayer
-
>
GetVisibleRegion
(
)
.
ToUnknownRegion
(
)
.
GetBounds
(
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
layerBound
.
x
layerBound
.
y
layerBound
.
width
layerBound
.
height
)
)
;
metrics
.
SetScrollableRect
(
aScrollableRect
)
;
metrics
.
SetScrollOffset
(
CSSPoint
(
0
0
)
)
;
metrics
.
SetPageScrollAmount
(
LayoutDeviceIntSize
(
50
100
)
)
;
metrics
.
SetAllowVerticalScrollWithWheel
(
true
)
;
aLayer
-
>
SetScrollMetadata
(
metadata
)
;
aLayer
-
>
SetClipRect
(
Some
(
ViewAs
<
ParentLayerPixel
>
(
layerBound
)
)
)
;
if
(
!
aScrollableRect
.
IsEqualEdges
(
CSSRect
(
-
1
-
1
-
1
-
1
)
)
)
{
EventRegions
er
=
aLayer
-
>
GetEventRegions
(
)
;
IntRect
scrollRect
=
RoundedToInt
(
aScrollableRect
*
metrics
.
LayersPixelsPerCSSPixel
(
)
)
.
ToUnknownRect
(
)
;
er
.
mHitRegion
=
nsIntRegion
(
IntRect
(
layerBound
.
TopLeft
(
)
scrollRect
.
Size
(
)
)
)
;
aLayer
-
>
SetEventRegions
(
er
)
;
}
}
void
SetScrollHandoff
(
Layer
*
aChild
Layer
*
aParent
)
{
ScrollMetadata
metadata
=
aChild
-
>
GetScrollMetadata
(
0
)
;
metadata
.
GetMetrics
(
)
.
SetScrollParentId
(
aParent
-
>
GetFrameMetrics
(
0
)
.
GetScrollId
(
)
)
;
aChild
-
>
SetScrollMetadata
(
metadata
)
;
}
static
TestAsyncPanZoomController
*
ApzcOf
(
Layer
*
aLayer
)
{
EXPECT_EQ
(
1u
aLayer
-
>
GetScrollMetadataCount
(
)
)
;
return
(
TestAsyncPanZoomController
*
)
aLayer
-
>
GetAsyncPanZoomController
(
0
)
;
}
void
CreateSimpleScrollingLayer
(
)
{
const
char
*
layerTreeSyntax
=
"
t
"
;
nsIntRegion
layerVisibleRegion
[
]
=
{
nsIntRegion
(
IntRect
(
0
0
200
200
)
)
}
;
root
=
CreateLayerTree
(
layerTreeSyntax
layerVisibleRegion
nullptr
lm
layers
)
;
SetScrollableFrameMetrics
(
root
FrameMetrics
:
:
START_SCROLL_ID
CSSRect
(
0
0
500
500
)
)
;
}
void
CreateSimpleDTCScrollingLayer
(
)
{
const
char
*
layerTreeSyntax
=
"
t
"
;
nsIntRegion
layerVisibleRegion
[
]
=
{
nsIntRegion
(
IntRect
(
0
0
200
200
)
)
}
;
root
=
CreateLayerTree
(
layerTreeSyntax
layerVisibleRegion
nullptr
lm
layers
)
;
SetScrollableFrameMetrics
(
root
FrameMetrics
:
:
START_SCROLL_ID
CSSRect
(
0
0
500
500
)
)
;
EventRegions
regions
;
regions
.
mHitRegion
=
nsIntRegion
(
IntRect
(
0
0
200
200
)
)
;
regions
.
mDispatchToContentHitRegion
=
regions
.
mHitRegion
;
layers
[
0
]
-
>
SetEventRegions
(
regions
)
;
}
void
CreateSimpleMultiLayerTree
(
)
{
const
char
*
layerTreeSyntax
=
"
c
(
tt
)
"
;
nsIntRegion
layerVisibleRegion
[
]
=
{
nsIntRegion
(
IntRect
(
0
0
100
100
)
)
nsIntRegion
(
IntRect
(
0
0
100
50
)
)
nsIntRegion
(
IntRect
(
0
50
100
50
)
)
}
;
root
=
CreateLayerTree
(
layerTreeSyntax
layerVisibleRegion
nullptr
lm
layers
)
;
}
void
CreatePotentiallyLeakingTree
(
)
{
const
char
*
layerTreeSyntax
=
"
c
(
c
(
c
(
t
)
)
c
(
c
(
t
)
)
)
"
;
root
=
CreateLayerTree
(
layerTreeSyntax
nullptr
nullptr
lm
layers
)
;
SetScrollableFrameMetrics
(
layers
[
0
]
FrameMetrics
:
:
START_SCROLL_ID
)
;
SetScrollableFrameMetrics
(
layers
[
2
]
FrameMetrics
:
:
START_SCROLL_ID
+
1
)
;
SetScrollableFrameMetrics
(
layers
[
5
]
FrameMetrics
:
:
START_SCROLL_ID
+
1
)
;
SetScrollableFrameMetrics
(
layers
[
3
]
FrameMetrics
:
:
START_SCROLL_ID
+
2
)
;
SetScrollableFrameMetrics
(
layers
[
6
]
FrameMetrics
:
:
START_SCROLL_ID
+
3
)
;
}
void
CreateBug1194876Tree
(
)
{
const
char
*
layerTreeSyntax
=
"
c
(
t
)
"
;
nsIntRegion
layerVisibleRegion
[
]
=
{
nsIntRegion
(
IntRect
(
0
0
100
100
)
)
nsIntRegion
(
IntRect
(
0
0
100
100
)
)
}
;
root
=
CreateLayerTree
(
layerTreeSyntax
layerVisibleRegion
nullptr
lm
layers
)
;
SetScrollableFrameMetrics
(
layers
[
0
]
FrameMetrics
:
:
START_SCROLL_ID
)
;
SetScrollableFrameMetrics
(
layers
[
1
]
FrameMetrics
:
:
START_SCROLL_ID
+
1
)
;
ScrollMetadata
childMetadata
=
layers
[
1
]
-
>
GetScrollMetadata
(
0
)
;
childMetadata
.
GetMetrics
(
)
.
SetIsRootContent
(
true
)
;
layers
[
1
]
-
>
SetScrollMetadata
(
childMetadata
)
;
EventRegions
regions
;
regions
.
mHitRegion
=
nsIntRegion
(
IntRect
(
0
0
100
100
)
)
;
regions
.
mDispatchToContentHitRegion
=
regions
.
mHitRegion
;
layers
[
0
]
-
>
SetEventRegions
(
regions
)
;
layers
[
1
]
-
>
SetEventRegions
(
regions
)
;
}
}
;
#
endif
