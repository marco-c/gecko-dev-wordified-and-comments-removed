#
include
"
APZCBasicTester
.
h
"
#
include
"
APZTestCommon
.
h
"
#
include
"
InputUtils
.
h
"
TEST_F
(
APZCBasicTester
Overzoom
)
{
FrameMetrics
fm
;
fm
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
fm
.
SetScrollableRect
(
CSSRect
(
0
0
125
150
)
)
;
fm
.
SetVisualScrollOffset
(
CSSPoint
(
10
0
)
)
;
fm
.
SetZoom
(
CSSToParentLayerScale2D
(
1
.
0
1
.
0
)
)
;
fm
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
fm
)
;
MakeApzcZoomable
(
)
;
EXPECT_CALL
(
*
mcc
RequestContentRepaint
(
_
)
)
.
Times
(
1
)
;
PinchWithPinchInputAndCheckStatus
(
apzc
ScreenIntPoint
(
50
50
)
0
.
5
true
)
;
fm
=
apzc
-
>
GetFrameMetrics
(
)
;
EXPECT_EQ
(
0
.
8f
fm
.
GetZoom
(
)
.
ToScaleFactor
(
)
.
scale
)
;
EXPECT_LT
(
std
:
:
abs
(
fm
.
GetVisualScrollOffset
(
)
.
x
)
1e
-
5
)
;
EXPECT_LT
(
std
:
:
abs
(
fm
.
GetVisualScrollOffset
(
)
.
y
)
1e
-
5
)
;
}
TEST_F
(
APZCBasicTester
SimpleTransform
)
{
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
)
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
)
viewTransformOut
)
;
}
TEST_F
(
APZCBasicTester
ComplexTransform
)
{
RefPtr
<
TestAsyncPanZoomController
>
childApzc
=
new
TestAsyncPanZoomController
(
LayersId
{
0
}
mcc
tm
)
;
const
char
*
layerTreeSyntax
=
"
c
(
c
)
"
;
nsIntRegion
layerVisibleRegion
[
]
=
{
nsIntRegion
(
IntRect
(
0
0
300
300
)
)
nsIntRegion
(
IntRect
(
0
0
150
300
)
)
}
;
Matrix4x4
transforms
[
]
=
{
Matrix4x4
(
)
Matrix4x4
(
)
}
;
transforms
[
0
]
.
PostScale
(
0
.
5f
0
.
5f
1
.
0f
)
;
transforms
[
1
]
.
PostScale
(
2
.
0f
1
.
0f
1
.
0f
)
;
nsTArray
<
RefPtr
<
Layer
>
>
layers
;
RefPtr
<
LayerManager
>
lm
;
RefPtr
<
Layer
>
root
=
CreateLayerTree
(
layerTreeSyntax
layerVisibleRegion
transforms
lm
layers
)
;
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
24
24
)
)
;
metrics
.
SetDisplayPort
(
CSSRect
(
-
1
-
1
6
6
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
10
10
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
10
10
8
8
)
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
50
50
)
)
;
metrics
.
SetCumulativeResolution
(
LayoutDeviceToLayerScale2D
(
2
2
)
)
;
metrics
.
SetPresShellResolution
(
2
.
0f
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale2D
(
6
6
)
)
;
metrics
.
SetDevPixelsPerCSSPixel
(
CSSToLayoutDeviceScale
(
3
)
)
;
metrics
.
SetScrollId
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
)
;
ScrollMetadata
childMetadata
=
metadata
;
FrameMetrics
&
childMetrics
=
childMetadata
.
GetMetrics
(
)
;
childMetrics
.
SetScrollId
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
)
;
layers
[
0
]
-
>
SetScrollMetadata
(
metadata
)
;
layers
[
1
]
-
>
SetScrollMetadata
(
childMetadata
)
;
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
true
true
)
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
)
ParentLayerPoint
(
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
60
60
)
pointOut
)
;
childApzc
-
>
SetFrameMetrics
(
childMetrics
)
;
childApzc
-
>
NotifyLayersUpdated
(
childMetadata
true
true
)
;
childApzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
)
ParentLayerPoint
(
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
60
60
)
pointOut
)
;
metrics
.
ScrollBy
(
CSSPoint
(
5
0
)
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
)
ParentLayerPoint
(
-
30
0
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
90
60
)
pointOut
)
;
childMetrics
.
ScrollBy
(
CSSPoint
(
5
0
)
)
;
childApzc
-
>
SetFrameMetrics
(
childMetrics
)
;
childApzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
)
ParentLayerPoint
(
-
30
0
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
90
60
)
pointOut
)
;
metrics
.
ZoomBy
(
1
.
5f
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
.
5
)
ParentLayerPoint
(
-
45
0
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
135
90
)
pointOut
)
;
childMetrics
.
ZoomBy
(
1
.
5f
)
;
childApzc
-
>
SetFrameMetrics
(
childMetrics
)
;
childApzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
.
5
)
ParentLayerPoint
(
-
45
0
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
135
90
)
pointOut
)
;
childApzc
-
>
Destroy
(
)
;
}
TEST_F
(
APZCBasicTester
Fling
)
{
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
fling_min_velocity_threshold
"
0
.
0f
)
;
int
touchStart
=
50
;
int
touchEnd
=
10
;
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
Pan
(
apzc
touchStart
touchEnd
)
;
ParentLayerPoint
lastPoint
;
for
(
int
i
=
1
;
i
<
50
;
i
+
=
1
)
{
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
TimeDuration
:
:
FromMilliseconds
(
1
)
)
;
EXPECT_GT
(
pointOut
.
y
lastPoint
.
y
)
;
lastPoint
=
pointOut
;
}
}
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
FlingIntoOverscroll
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
fling_min_velocity_threshold
"
0
.
0f
)
;
Pan
(
apzc
50
25
PanOptions
:
:
NoFling
)
;
Pan
(
apzc
25
45
)
;
const
TimeDuration
increment
=
TimeDuration
:
:
FromMilliseconds
(
1
)
;
bool
reachedOverscroll
=
false
;
bool
recoveredFromOverscroll
=
false
;
while
(
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
)
{
if
(
!
reachedOverscroll
&
&
apzc
-
>
IsOverscrolled
(
)
)
{
reachedOverscroll
=
true
;
}
if
(
reachedOverscroll
&
&
!
apzc
-
>
IsOverscrolled
(
)
)
{
recoveredFromOverscroll
=
true
;
}
mcc
-
>
AdvanceBy
(
increment
)
;
}
EXPECT_TRUE
(
reachedOverscroll
)
;
EXPECT_TRUE
(
recoveredFromOverscroll
)
;
}
#
endif
TEST_F
(
APZCBasicTester
PanningTransformNotifications
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
MockFunction
<
void
(
std
:
:
string
checkPointName
)
>
check
;
{
InSequence
s
;
EXPECT_CALL
(
check
Call
(
"
Simple
pan
"
)
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eStartTouch
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eTransformBegin
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eStartPanning
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eEndTouch
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eTransformEnd
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
check
Call
(
"
Complex
pan
"
)
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eStartTouch
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eTransformBegin
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eStartPanning
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eEndTouch
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
*
mcc
NotifyAPZStateChange
(
_
GeckoContentController
:
:
APZStateChange
:
:
eTransformEnd
_
)
)
.
Times
(
1
)
;
EXPECT_CALL
(
check
Call
(
"
Done
"
)
)
;
}
check
.
Call
(
"
Simple
pan
"
)
;
Pan
(
apzc
50
25
PanOptions
:
:
NoFling
)
;
check
.
Call
(
"
Complex
pan
"
)
;
Pan
(
apzc
25
45
)
;
apzc
-
>
AdvanceAnimationsUntilEnd
(
)
;
check
.
Call
(
"
Done
"
)
;
}
void
APZCBasicTester
:
:
PanIntoOverscroll
(
)
{
int
touchStart
=
500
;
int
touchEnd
=
10
;
Pan
(
apzc
touchStart
touchEnd
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
}
void
APZCBasicTester
:
:
TestOverscroll
(
)
{
PanIntoOverscroll
(
)
;
ParentLayerPoint
expectedScrollOffset
(
0
GetScrollRange
(
)
.
YMost
(
)
)
;
SampleAnimationUntilRecoveredFromOverscroll
(
expectedScrollOffset
)
;
}
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
OverScrollPanning
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
TestOverscroll
(
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
OverScroll_Bug1152051a
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
fling_friction
"
0
)
;
TestOverscroll
(
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
OverScroll_Bug1152051b
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
overscroll
.
stop_distance_threshold
"
0
.
1f
)
;
PanIntoOverscroll
(
)
;
SampleAnimationOnce
(
)
;
SampleAnimationOnce
(
)
;
APZEventResult
result
=
TouchDown
(
apzc
ScreenIntPoint
(
10
10
)
mcc
-
>
Time
(
)
)
;
if
(
StaticPrefs
:
:
layout_css_touch_action_enabled
(
)
&
&
result
.
GetStatus
(
)
!
=
nsEventStatus_eConsumeNoDefault
)
{
SetDefaultAllowedTouchBehavior
(
apzc
result
.
mInputBlockId
)
;
}
TouchUp
(
apzc
ScreenIntPoint
(
10
10
)
mcc
-
>
Time
(
)
)
;
ParentLayerPoint
expectedScrollOffset
(
0
GetScrollRange
(
)
.
YMost
(
)
)
;
SampleAnimationUntilRecoveredFromOverscroll
(
expectedScrollOffset
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
OverScrollAfterLowVelocityPan_Bug1343775
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
Pan
(
apzc
10
30
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
apzc
-
>
AdvanceAnimationsUntilEnd
(
)
;
EXPECT_FALSE
(
apzc
-
>
IsOverscrolled
(
)
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
OverScrollAbort
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
int
touchStart
=
500
;
int
touchEnd
=
10
;
Pan
(
apzc
touchStart
touchEnd
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
TimeDuration
:
:
FromMilliseconds
(
10000
)
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
apzc
-
>
CancelAnimation
(
)
;
EXPECT_FALSE
(
apzc
-
>
IsOverscrolled
(
)
)
;
apzc
-
>
AssertStateIsReset
(
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
OverScrollPanningAbort
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
int
touchStart
=
500
;
int
touchEnd
=
10
;
Pan
(
apzc
touchStart
touchEnd
PanOptions
:
:
KeepFingerDown
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
apzc
-
>
CancelAnimation
(
)
;
EXPECT_FALSE
(
apzc
-
>
IsOverscrolled
(
)
)
;
apzc
-
>
AssertStateIsReset
(
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
ResumeInterruptedTouchDrag_Bug1592435
)
{
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
touch_start_tolerance
"
1
.
0f
/
1000
.
0f
)
;
ScreenIntPoint
touchPos
(
10
50
)
;
uint64_t
touchBlock
=
TouchDown
(
apzc
touchPos
mcc
-
>
Time
(
)
)
.
mInputBlockId
;
SetDefaultAllowedTouchBehavior
(
apzc
touchBlock
)
;
for
(
int
i
=
0
;
i
<
20
;
+
+
i
)
{
touchPos
.
y
-
=
1
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchMove
(
apzc
touchPos
mcc
-
>
Time
(
)
)
;
}
CSSPoint
scrollOffsetBeforeInterruption
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
;
CSSPoint
mainThreadOffset
=
scrollOffsetBeforeInterruption
;
mainThreadOffset
.
y
-
=
5
;
ScrollMetadata
metadata
=
apzc
-
>
GetScrollMetadata
(
)
;
metadata
.
GetMetrics
(
)
.
SetLayoutScrollOffset
(
mainThreadOffset
)
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewScroll
(
ScrollOrigin
:
:
Other
CSSPoint
:
:
ToAppUnits
(
mainThreadOffset
)
)
)
;
metadata
.
SetScrollUpdates
(
scrollUpdates
)
;
metadata
.
GetMetrics
(
)
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
false
true
)
;
for
(
int
i
=
0
;
i
<
20
;
+
+
i
)
{
touchPos
.
y
-
=
1
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchMove
(
apzc
touchPos
mcc
-
>
Time
(
)
)
;
}
CSSPoint
finalScrollOffset
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
;
EXPECT_GT
(
finalScrollOffset
.
y
scrollOffsetBeforeInterruption
.
y
)
;
scrollOffsetBeforeInterruption
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
;
mainThreadOffset
=
scrollOffsetBeforeInterruption
;
mainThreadOffset
.
y
-
=
5
;
metadata
=
apzc
-
>
GetScrollMetadata
(
)
;
metadata
.
GetMetrics
(
)
.
SetVisualDestination
(
mainThreadOffset
)
;
metadata
.
GetMetrics
(
)
.
SetScrollGeneration
(
ScrollGeneration
:
:
New
(
)
)
;
metadata
.
GetMetrics
(
)
.
SetVisualScrollUpdateType
(
FrameMetrics
:
:
eMainThread
)
;
scrollUpdates
.
Clear
(
)
;
metadata
.
SetScrollUpdates
(
scrollUpdates
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
false
true
)
;
for
(
int
i
=
0
;
i
<
20
;
+
+
i
)
{
touchPos
.
y
-
=
1
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchMove
(
apzc
touchPos
mcc
-
>
Time
(
)
)
;
}
finalScrollOffset
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
;
EXPECT_GT
(
finalScrollOffset
.
y
scrollOffsetBeforeInterruption
.
y
)
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchUp
(
apzc
touchPos
mcc
-
>
Time
(
)
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
OverscrollByVerticalPanGestures
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_START
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
10
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_END
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
ParentLayerPoint
expectedScrollOffset
(
0
0
)
;
SampleAnimationUntilRecoveredFromOverscroll
(
expectedScrollOffset
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
OverscrollByVerticalAndHorizontalPanGestures
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_START
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
10
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
-
10
0
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
-
2
0
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_END
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
ParentLayerPoint
expectedScrollOffset
(
0
0
)
;
SampleAnimationUntilRecoveredFromOverscroll
(
expectedScrollOffset
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
OverscrollByPanMomentumGestures
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_START
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
10
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_END
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
EXPECT_TRUE
(
!
apzc
-
>
IsOverscrolled
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMSTART
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
200
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
100
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMEND
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
ParentLayerPoint
expectedScrollOffset
(
0
GetScrollRange
(
)
.
YMost
(
)
)
;
SampleAnimationUntilRecoveredFromOverscroll
(
expectedScrollOffset
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
IgnoreMomemtumDuringOverscroll
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
float
yMost
=
GetScrollRange
(
)
.
YMost
(
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_START
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
yMost
/
10
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
yMost
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
yMost
/
10
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_END
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrollAnimationRunning
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
AsyncTransformComponentMatrix
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMSTART
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
EXPECT_EQ
(
overscrolledTransform
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
200
)
mcc
-
>
Time
(
)
)
;
EXPECT_EQ
(
overscrolledTransform
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
100
)
mcc
-
>
Time
(
)
)
;
EXPECT_EQ
(
overscrolledTransform
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
2
)
mcc
-
>
Time
(
)
)
;
EXPECT_EQ
(
overscrolledTransform
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMEND
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
EXPECT_EQ
(
overscrolledTransform
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
)
;
ParentLayerPoint
expectedScrollOffset
(
0
GetScrollRange
(
)
.
YMost
(
)
)
;
SampleAnimationUntilRecoveredFromOverscroll
(
expectedScrollOffset
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
VerticalOnlyOverscroll
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
100
1000
)
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_START
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
-
2
-
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
-
10
-
10
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
-
2
-
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_END
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
AsyncTransformComponentMatrix
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_41
=
=
0
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_42
!
=
0
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMSTART
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
-
10
-
100
)
mcc
-
>
Time
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_41
=
=
0
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_42
!
=
0
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
-
5
-
50
)
mcc
-
>
Time
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_41
=
=
0
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_42
!
=
0
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
2
)
mcc
-
>
Time
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_41
=
=
0
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_42
!
=
0
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMEND
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_41
=
=
0
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_42
!
=
0
)
;
ParentLayerPoint
expectedScrollOffset
(
0
0
)
;
SampleAnimationUntilRecoveredFromOverscroll
(
expectedScrollOffset
)
;
}
#
endif
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
VerticalOnlyOverscrollByPanMomentum
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
overscroll
.
enabled
"
true
)
;
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
100
1000
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
0
50
)
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_START
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
10
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_PAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
2
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_END
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
EXPECT_TRUE
(
!
apzc
-
>
IsOverscrolled
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMSTART
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
-
10
-
100
)
mcc
-
>
Time
(
)
)
;
EXPECT_TRUE
(
apzc
-
>
IsOverscrolled
(
)
)
;
AsyncTransformComponentMatrix
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_41
=
=
0
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_42
!
=
0
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
-
5
-
50
)
mcc
-
>
Time
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_41
=
=
0
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_42
!
=
0
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMPAN
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
-
2
)
mcc
-
>
Time
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_41
=
=
0
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_42
!
=
0
)
;
mcc
-
>
AdvanceByMillis
(
5
)
;
apzc
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
PanGesture
(
PanGestureInput
:
:
PANGESTURE_MOMENTUMEND
apzc
ScreenIntPoint
(
50
80
)
ScreenPoint
(
0
0
)
mcc
-
>
Time
(
)
)
;
overscrolledTransform
=
apzc
-
>
GetOverscrollTransform
(
AsyncPanZoomController
:
:
eForHitTesting
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_41
=
=
0
)
;
EXPECT_TRUE
(
overscrolledTransform
.
_42
!
=
0
)
;
ParentLayerPoint
expectedScrollOffset
(
0
0
)
;
SampleAnimationUntilRecoveredFromOverscroll
(
expectedScrollOffset
)
;
}
#
endif
TEST_F
(
APZCBasicTester
RelativeScrollOffset
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
1000
1000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
100
100
100
100
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale2D
(
2
.
0
2
.
0
)
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
120
120
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
ScrollMetadata
mainThreadMetadata
=
metadata
;
FrameMetrics
&
mainThreadMetrics
=
mainThreadMetadata
.
GetMetrics
(
)
;
mainThreadMetrics
.
SetLayoutScrollOffset
(
CSSPoint
(
200
200
)
)
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewScroll
(
ScrollOrigin
:
:
Other
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
200
200
)
)
)
)
;
mainThreadMetadata
.
SetScrollUpdates
(
scrollUpdates
)
;
mainThreadMetrics
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
mainThreadMetadata
false
true
)
;
metrics
=
apzc
-
>
GetFrameMetrics
(
)
;
EXPECT_EQ
(
metrics
.
GetLayoutScrollOffset
(
)
CSSPoint
(
200
200
)
)
;
EXPECT_EQ
(
metrics
.
GetVisualScrollOffset
(
)
CSSPoint
(
220
220
)
)
;
}
TEST_F
(
APZCBasicTester
MultipleSmoothScrollsSmooth
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
100
10000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
0
0
100
100
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale2D
(
1
.
0
1
.
0
)
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
0
0
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
ScrollMetadata
metadata2
=
metadata
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates2
;
scrollUpdates2
.
AppendElement
(
ScrollPositionUpdate
:
:
NewPureRelativeScroll
(
ScrollOrigin
:
:
Other
ScrollMode
:
:
Smooth
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
200
)
)
)
)
;
metadata2
.
SetScrollUpdates
(
scrollUpdates2
)
;
metadata2
.
GetMetrics
(
)
.
SetScrollGeneration
(
scrollUpdates2
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata2
false
true
)
;
for
(
uint32_t
i
=
0
;
i
<
3
;
i
+
+
)
{
SampleAnimationOneFrame
(
)
;
}
float
offset
=
apzc
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForCompositing
)
.
y
;
ASSERT_GT
(
offset
0
)
;
float
lastOffset
=
offset
;
for
(
uint32_t
i
=
0
;
i
<
2
;
i
+
+
)
{
for
(
uint32_t
j
=
0
;
j
<
3
;
j
+
+
)
{
SampleAnimationOneFrame
(
)
;
offset
=
apzc
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForCompositing
)
.
y
;
ASSERT_GT
(
offset
lastOffset
)
;
lastOffset
=
offset
;
}
ScrollMetadata
metadata3
=
metadata
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates3
;
scrollUpdates3
.
AppendElement
(
ScrollPositionUpdate
:
:
NewPureRelativeScroll
(
ScrollOrigin
:
:
Other
ScrollMode
:
:
Smooth
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
200
)
)
)
)
;
metadata3
.
SetScrollUpdates
(
scrollUpdates3
)
;
metadata3
.
GetMetrics
(
)
.
SetScrollGeneration
(
scrollUpdates3
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata3
false
true
)
;
}
for
(
uint32_t
j
=
0
;
j
<
7
;
j
+
+
)
{
SampleAnimationOneFrame
(
)
;
offset
=
apzc
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForCompositing
)
.
y
;
ASSERT_GT
(
offset
lastOffset
)
;
lastOffset
=
offset
;
}
}
