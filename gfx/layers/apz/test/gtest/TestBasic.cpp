#
include
"
APZCBasicTester
.
h
"
#
include
"
APZTestCommon
.
h
"
#
include
"
InputUtils
.
h
"
static
ScrollGenerationCounter
sGenerationCounter
;
TEST_F
(
APZCBasicTester
Overzoom
)
{
FrameMetrics
fm
;
fm
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
fm
.
SetScrollableRect
(
CSSRect
(
0
0
125
150
)
)
;
fm
.
SetVisualScrollOffset
(
CSSPoint
(
10
0
)
)
;
fm
.
SetZoom
(
CSSToParentLayerScale
(
1
.
0
)
)
;
fm
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
fm
)
;
MakeApzcZoomable
(
)
;
EXPECT_CALL
(
*
mcc
RequestContentRepaint
(
_
)
)
.
Times
(
1
)
;
PinchWithPinchInputAndCheckStatus
(
apzc
ScreenIntPoint
(
50
50
)
0
.
5
true
)
;
fm
=
apzc
-
>
GetFrameMetrics
(
)
;
EXPECT_EQ
(
0
.
8f
fm
.
GetZoom
(
)
.
scale
)
;
EXPECT_LT
(
std
:
:
abs
(
fm
.
GetVisualScrollOffset
(
)
.
x
)
1e
-
5
)
;
EXPECT_LT
(
std
:
:
abs
(
fm
.
GetVisualScrollOffset
(
)
.
y
)
1e
-
5
)
;
}
TEST_F
(
APZCBasicTester
ZoomLimits
)
{
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
min_zoom
"
0
.
9f
)
;
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
max_zoom
"
2
.
0f
)
;
FrameMetrics
fm
;
fm
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
fm
.
SetScrollableRect
(
CSSRect
(
0
0
125
150
)
)
;
fm
.
SetZoom
(
CSSToParentLayerScale
(
1
.
0
)
)
;
fm
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
fm
)
;
MakeApzcZoomable
(
)
;
PinchWithPinchInputAndCheckStatus
(
apzc
ScreenIntPoint
(
50
50
)
0
.
5
true
)
;
fm
=
apzc
-
>
GetFrameMetrics
(
)
;
EXPECT_EQ
(
0
.
9f
fm
.
GetZoom
(
)
.
scale
)
;
PinchWithPinchInputAndCheckStatus
(
apzc
ScreenIntPoint
(
50
50
)
3
true
)
;
fm
=
apzc
-
>
GetFrameMetrics
(
)
;
EXPECT_EQ
(
2
.
0f
fm
.
GetZoom
(
)
.
scale
)
;
}
TEST_F
(
APZCBasicTester
SimpleTransform
)
{
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
)
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
)
viewTransformOut
)
;
}
TEST_F
(
APZCBasicTester
ComplexTransform
)
{
RefPtr
<
TestAsyncPanZoomController
>
childApzc
=
new
TestAsyncPanZoomController
(
LayersId
{
0
}
mcc
tm
)
;
const
char
*
treeShape
=
"
x
(
x
)
"
;
LayerIntRect
layerVisibleRect
[
]
=
{
LayerIntRect
(
0
0
300
300
)
LayerIntRect
(
0
0
150
300
)
}
;
Matrix4x4
transforms
[
]
=
{
Matrix4x4
(
)
Matrix4x4
(
)
}
;
transforms
[
0
]
.
PostScale
(
0
.
5f
0
.
5f
1
.
0f
)
;
transforms
[
1
]
.
PostScale
(
2
.
0f
1
.
0f
1
.
0f
)
;
auto
layers
=
TestWRScrollData
:
:
Create
(
treeShape
*
updater
layerVisibleRect
transforms
)
;
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
24
24
)
)
;
metrics
.
SetDisplayPort
(
CSSRect
(
-
1
-
1
6
6
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
10
10
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
10
10
8
8
)
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
50
50
)
)
;
metrics
.
SetCumulativeResolution
(
LayoutDeviceToLayerScale
(
2
)
)
;
metrics
.
SetPresShellResolution
(
2
.
0f
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale
(
6
)
)
;
metrics
.
SetDevPixelsPerCSSPixel
(
CSSToLayoutDeviceScale
(
3
)
)
;
metrics
.
SetScrollId
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
)
;
ScrollMetadata
childMetadata
=
metadata
;
FrameMetrics
&
childMetrics
=
childMetadata
.
GetMetrics
(
)
;
childMetrics
.
SetScrollId
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
)
;
layers
[
0
]
-
>
AppendScrollMetadata
(
layers
metadata
)
;
layers
[
1
]
-
>
AppendScrollMetadata
(
layers
childMetadata
)
;
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
true
true
)
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
)
ParentLayerPoint
(
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
60
60
)
pointOut
)
;
childApzc
-
>
SetFrameMetrics
(
childMetrics
)
;
childApzc
-
>
NotifyLayersUpdated
(
childMetadata
true
true
)
;
childApzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
)
ParentLayerPoint
(
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
60
60
)
pointOut
)
;
metrics
.
ScrollBy
(
CSSPoint
(
5
0
)
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
)
ParentLayerPoint
(
-
30
0
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
90
60
)
pointOut
)
;
childMetrics
.
ScrollBy
(
CSSPoint
(
5
0
)
)
;
childApzc
-
>
SetFrameMetrics
(
childMetrics
)
;
childApzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
)
ParentLayerPoint
(
-
30
0
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
90
60
)
pointOut
)
;
metrics
.
ZoomBy
(
1
.
5f
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
.
5
)
ParentLayerPoint
(
-
45
0
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
135
90
)
pointOut
)
;
childMetrics
.
ZoomBy
(
1
.
5f
)
;
childApzc
-
>
SetFrameMetrics
(
childMetrics
)
;
childApzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
)
;
EXPECT_EQ
(
AsyncTransform
(
LayerToParentLayerScale
(
1
.
5
)
ParentLayerPoint
(
-
45
0
)
)
viewTransformOut
)
;
EXPECT_EQ
(
ParentLayerPoint
(
135
90
)
pointOut
)
;
childApzc
-
>
Destroy
(
)
;
}
TEST_F
(
APZCBasicTester
Fling
)
{
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
fling_min_velocity_threshold
"
0
.
0f
)
;
int
touchStart
=
50
;
int
touchEnd
=
10
;
ParentLayerPoint
pointOut
;
AsyncTransform
viewTransformOut
;
Pan
(
apzc
touchStart
touchEnd
)
;
ParentLayerPoint
lastPoint
;
for
(
int
i
=
1
;
i
<
50
;
i
+
=
1
)
{
apzc
-
>
SampleContentTransformForFrame
(
&
viewTransformOut
pointOut
TimeDuration
:
:
FromMilliseconds
(
1
)
)
;
EXPECT_GT
(
pointOut
.
y
lastPoint
.
y
)
;
lastPoint
=
pointOut
;
}
}
#
ifndef
MOZ_WIDGET_ANDROID
TEST_F
(
APZCBasicTester
ResumeInterruptedTouchDrag_Bug1592435
)
{
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
touch_start_tolerance
"
1
.
0f
/
1000
.
0f
)
;
ScreenIntPoint
touchPos
(
10
50
)
;
uint64_t
touchBlock
=
TouchDown
(
apzc
touchPos
mcc
-
>
Time
(
)
)
.
mInputBlockId
;
SetDefaultAllowedTouchBehavior
(
apzc
touchBlock
)
;
for
(
int
i
=
0
;
i
<
20
;
+
+
i
)
{
touchPos
.
y
-
=
1
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchMove
(
apzc
touchPos
mcc
-
>
Time
(
)
)
;
}
CSSPoint
scrollOffsetBeforeInterruption
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
;
CSSPoint
mainThreadOffset
=
scrollOffsetBeforeInterruption
;
mainThreadOffset
.
y
-
=
5
;
ScrollMetadata
metadata
=
apzc
-
>
GetScrollMetadata
(
)
;
metadata
.
GetMetrics
(
)
.
SetLayoutScrollOffset
(
mainThreadOffset
)
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewScroll
(
ScrollOrigin
:
:
Other
CSSPoint
:
:
ToAppUnits
(
mainThreadOffset
)
)
)
;
metadata
.
SetScrollUpdates
(
scrollUpdates
)
;
metadata
.
GetMetrics
(
)
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
false
true
)
;
for
(
int
i
=
0
;
i
<
20
;
+
+
i
)
{
touchPos
.
y
-
=
1
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchMove
(
apzc
touchPos
mcc
-
>
Time
(
)
)
;
}
CSSPoint
finalScrollOffset
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
;
EXPECT_GT
(
finalScrollOffset
.
y
scrollOffsetBeforeInterruption
.
y
)
;
scrollOffsetBeforeInterruption
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
;
mainThreadOffset
=
scrollOffsetBeforeInterruption
;
mainThreadOffset
.
y
-
=
5
;
metadata
=
apzc
-
>
GetScrollMetadata
(
)
;
metadata
.
GetMetrics
(
)
.
SetVisualDestination
(
mainThreadOffset
)
;
metadata
.
GetMetrics
(
)
.
SetScrollGeneration
(
sGenerationCounter
.
NewMainThreadGeneration
(
)
)
;
metadata
.
GetMetrics
(
)
.
SetVisualScrollUpdateType
(
FrameMetrics
:
:
eMainThread
)
;
scrollUpdates
.
Clear
(
)
;
metadata
.
SetScrollUpdates
(
scrollUpdates
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
false
true
)
;
for
(
int
i
=
0
;
i
<
20
;
+
+
i
)
{
touchPos
.
y
-
=
1
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchMove
(
apzc
touchPos
mcc
-
>
Time
(
)
)
;
}
finalScrollOffset
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
;
EXPECT_GT
(
finalScrollOffset
.
y
scrollOffsetBeforeInterruption
.
y
)
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchUp
(
apzc
touchPos
mcc
-
>
Time
(
)
)
;
}
#
endif
TEST_F
(
APZCBasicTester
RelativeScrollOffset
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
1000
1000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
100
100
100
100
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale
(
2
.
0
)
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
120
120
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
ScrollMetadata
mainThreadMetadata
=
metadata
;
FrameMetrics
&
mainThreadMetrics
=
mainThreadMetadata
.
GetMetrics
(
)
;
mainThreadMetrics
.
SetLayoutScrollOffset
(
CSSPoint
(
200
200
)
)
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewScroll
(
ScrollOrigin
:
:
Other
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
200
200
)
)
)
)
;
mainThreadMetadata
.
SetScrollUpdates
(
scrollUpdates
)
;
mainThreadMetrics
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
mainThreadMetadata
false
true
)
;
metrics
=
apzc
-
>
GetFrameMetrics
(
)
;
EXPECT_EQ
(
metrics
.
GetLayoutScrollOffset
(
)
CSSPoint
(
200
200
)
)
;
EXPECT_EQ
(
metrics
.
GetVisualScrollOffset
(
)
CSSPoint
(
220
220
)
)
;
}
TEST_F
(
APZCBasicTester
MultipleSmoothScrollsSmooth
)
{
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
true
)
;
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
100
10000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
0
0
100
100
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale
(
1
.
0
)
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
0
0
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
ScrollMetadata
metadata2
=
metadata
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates2
;
scrollUpdates2
.
AppendElement
(
ScrollPositionUpdate
:
:
NewPureRelativeScroll
(
ScrollOrigin
:
:
Other
ScrollMode
:
:
Smooth
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
200
)
)
)
)
;
metadata2
.
SetScrollUpdates
(
scrollUpdates2
)
;
metadata2
.
GetMetrics
(
)
.
SetScrollGeneration
(
scrollUpdates2
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata2
false
true
)
;
for
(
uint32_t
i
=
0
;
i
<
3
;
i
+
+
)
{
SampleAnimationOneFrame
(
)
;
}
float
offset
=
apzc
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForCompositing
)
.
y
;
ASSERT_GT
(
offset
0
)
;
float
lastOffset
=
offset
;
for
(
uint32_t
i
=
0
;
i
<
2
;
i
+
+
)
{
for
(
uint32_t
j
=
0
;
j
<
3
;
j
+
+
)
{
SampleAnimationOneFrame
(
)
;
offset
=
apzc
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForCompositing
)
.
y
;
ASSERT_GT
(
offset
lastOffset
)
;
lastOffset
=
offset
;
}
ScrollMetadata
metadata3
=
metadata
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates3
;
scrollUpdates3
.
AppendElement
(
ScrollPositionUpdate
:
:
NewPureRelativeScroll
(
ScrollOrigin
:
:
Other
ScrollMode
:
:
Smooth
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
200
)
)
)
)
;
metadata3
.
SetScrollUpdates
(
scrollUpdates3
)
;
metadata3
.
GetMetrics
(
)
.
SetScrollGeneration
(
scrollUpdates3
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata3
false
true
)
;
}
for
(
uint32_t
j
=
0
;
j
<
7
;
j
+
+
)
{
SampleAnimationOneFrame
(
)
;
offset
=
apzc
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForCompositing
)
.
y
;
ASSERT_GT
(
offset
lastOffset
)
;
lastOffset
=
offset
;
}
}
TEST_F
(
APZCBasicTester
NotifyLayersUpdate_WithScrollUpdates
)
{
ScrollMetadata
metadata
;
apzc
-
>
SetScrollMetadata
(
metadata
)
;
ASSERT_TRUE
(
apzc
-
>
GetScrollMetadata
(
)
.
IsDefault
(
)
)
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetDisplayPort
(
CSSRect
(
0
0
10
10
)
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
10
10
)
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
100
100
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
10
10
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
10
10
10
10
)
)
;
metrics
.
SetScrollId
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
)
;
AutoTArray
<
ScrollPositionUpdate
1
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewRelativeScroll
(
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
10
10
)
)
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
15
15
)
)
)
)
;
metadata
.
SetScrollUpdates
(
scrollUpdates
)
;
metrics
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
15
15
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
15
15
10
10
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
false
true
)
;
ASSERT_EQ
(
apzc
-
>
GetFrameMetrics
(
)
.
GetLayoutScrollOffset
(
)
CSSPoint
(
20
20
)
)
<
<
"
If
the
actual
value
is
(
15
15
)
you
fixed
bug
1978682
thanks
!
"
;
ASSERT_EQ
(
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
CSSPoint
(
20
20
)
)
<
<
"
If
the
actual
value
is
(
15
15
)
you
fixed
bug
1978682
thanks
!
"
;
}
class
APZCSmoothScrollTester
:
public
APZCBasicTester
{
public
:
void
TestContentShift
(
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
100
10000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
0
0
100
100
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale
(
1
.
0
)
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
0
0
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewPureRelativeScroll
(
ScrollOrigin
:
:
Other
ScrollMode
:
:
Smooth
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
1000
)
)
)
)
;
metadata
.
SetScrollUpdates
(
scrollUpdates
)
;
metrics
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
false
true
)
;
apzc
-
>
AssertStateIsSmoothScroll
(
)
;
float
y
=
0
;
while
(
y
<
500
)
{
SampleAnimationOneFrame
(
)
;
y
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
}
scrollUpdates
.
Clear
(
)
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewRelativeScroll
(
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
500
)
)
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
100
)
)
)
)
;
metadata
.
SetScrollUpdates
(
scrollUpdates
)
;
metrics
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
false
false
)
;
float
y2
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
ASSERT_EQ
(
y2
y
-
400
)
;
apzc
-
>
AssertStateIsSmoothScroll
(
)
;
SampleAnimationOneFrame
(
)
;
float
y3
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
ASSERT_GT
(
y3
y2
)
;
ASSERT_LT
(
y3
500
)
;
apzc
-
>
AdvanceAnimationsUntilEnd
(
)
;
float
y4
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
ASSERT_EQ
(
y4
600
)
;
}
void
TestContentShiftThenUpdateDelta
(
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
1000
10000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
0
0
1000
1000
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale
(
1
.
0
)
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
1000
1000
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
0
0
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
metadata
.
SetLineScrollAmount
(
{
100
100
}
)
;
metadata
.
SetPageScrollAmount
(
{
1000
1000
}
)
;
apzc
-
>
SetScrollMetadata
(
metadata
)
;
SmoothWheel
(
apzc
ScreenIntPoint
(
50
50
)
ScreenPoint
(
0
5
)
mcc
-
>
Time
(
)
)
;
apzc
-
>
AssertStateIsWheelScroll
(
)
;
float
y
=
0
;
while
(
y
<
200
)
{
SampleAnimationOneFrame
(
)
;
y
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
}
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewRelativeScroll
(
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
200
)
)
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
300
)
)
)
)
;
metadata
.
SetScrollUpdates
(
scrollUpdates
)
;
metrics
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
false
true
)
;
float
y2
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
ASSERT_EQ
(
y2
y
+
100
)
;
apzc
-
>
AssertStateIsWheelScroll
(
)
;
while
(
y
<
400
)
{
SampleAnimationOneFrame
(
)
;
y
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
}
SmoothWheel
(
apzc
ScreenIntPoint
(
50
50
)
ScreenPoint
(
0
5
)
mcc
-
>
Time
(
)
)
;
apzc
-
>
AdvanceAnimationsUntilEnd
(
)
;
float
yEnd
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
ASSERT_EQ
(
yEnd
1100
)
;
}
void
TestContentShiftDoesNotCauseOvershoot
(
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
1000
10000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
0
0
1000
1000
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale
(
1
.
0
)
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
1000
1000
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
0
0
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
metadata
.
SetLineScrollAmount
(
{
100
100
}
)
;
metadata
.
SetPageScrollAmount
(
{
1000
1000
}
)
;
apzc
-
>
SetScrollMetadata
(
metadata
)
;
SmoothWheel
(
apzc
ScreenIntPoint
(
50
50
)
ScreenPoint
(
0
5
)
mcc
-
>
Time
(
)
)
;
apzc
-
>
AssertStateIsWheelScroll
(
)
;
float
y
=
0
;
while
(
y
<
200
)
{
SampleAnimationOneFrame
(
)
;
y
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
}
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewRelativeScroll
(
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
200
)
)
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
0
1200
)
)
)
)
;
metadata
.
SetScrollUpdates
(
scrollUpdates
)
;
metrics
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata
false
true
)
;
float
y2
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
ASSERT_EQ
(
y2
y
+
1000
)
;
apzc
-
>
AssertStateIsWheelScroll
(
)
;
while
(
y
<
1300
)
{
SampleAnimationOneFrame
(
)
;
y
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
;
}
SmoothWheel
(
apzc
ScreenIntPoint
(
50
50
)
ScreenPoint
(
0
5
)
mcc
-
>
Time
(
)
)
;
while
(
apzc
-
>
IsWheelScrollAnimationRunning
(
)
)
{
SampleAnimationOneFrame
(
)
;
ASSERT_LE
(
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
2000
)
;
}
ASSERT_EQ
(
2000
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
)
;
}
void
TestEventWithFutureStamp
(
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
1000
10000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
0
0
1000
1000
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale
(
1
.
0
)
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
1000
1000
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
0
0
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
metadata
.
SetLineScrollAmount
(
{
100
100
}
)
;
metadata
.
SetPageScrollAmount
(
{
1000
1000
}
)
;
apzc
-
>
SetScrollMetadata
(
metadata
)
;
TimeStamp
futureTimeStamp
=
mcc
-
>
Time
(
)
+
TimeDuration
:
:
FromSeconds
(
60
)
;
SmoothWheel
(
apzc
ScreenIntPoint
(
50
50
)
ScreenPoint
(
0
5
)
futureTimeStamp
)
;
apzc
-
>
AssertStateIsWheelScroll
(
)
;
for
(
int
i
=
0
;
i
<
10
;
+
+
i
)
{
SampleAnimationOneFrame
(
)
;
}
ASSERT_GT
(
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
0
)
;
apzc
-
>
AdvanceAnimationsUntilEnd
(
)
;
}
}
;
TEST_F
(
APZCSmoothScrollTester
ContentShiftBezier
)
{
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
true
)
;
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
.
msdPhysics
.
enabled
"
false
)
;
TestContentShift
(
)
;
}
TEST_F
(
APZCSmoothScrollTester
ContentShiftMsd
)
{
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
true
)
;
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
.
msdPhysics
.
enabled
"
true
)
;
TestContentShift
(
)
;
}
TEST_F
(
APZCSmoothScrollTester
ContentShiftThenUpdateDeltaBezier
)
{
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
true
)
;
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
.
msdPhysics
.
enabled
"
false
)
;
TestContentShiftThenUpdateDelta
(
)
;
}
TEST_F
(
APZCSmoothScrollTester
ContentShiftThenUpdateDeltaMsd
)
{
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
true
)
;
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
.
msdPhysics
.
enabled
"
true
)
;
TestContentShiftThenUpdateDelta
(
)
;
}
TEST_F
(
APZCSmoothScrollTester
ContentShiftDoesNotCauseOvershootBezier
)
{
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
true
)
;
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
.
msdPhysics
.
enabled
"
false
)
;
TestContentShiftDoesNotCauseOvershoot
(
)
;
}
TEST_F
(
APZCSmoothScrollTester
ContentShiftDoesNotCauseOvershootMsd
)
{
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
true
)
;
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
.
msdPhysics
.
enabled
"
true
)
;
TestContentShiftDoesNotCauseOvershoot
(
)
;
}
TEST_F
(
APZCSmoothScrollTester
FutureTimestampBezier
)
{
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
true
)
;
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
.
msdPhysics
.
enabled
"
false
)
;
TestEventWithFutureStamp
(
)
;
}
TEST_F
(
APZCSmoothScrollTester
FutureTimestampMsd
)
{
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
true
)
;
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
.
msdPhysics
.
enabled
"
true
)
;
TestEventWithFutureStamp
(
)
;
}
TEST_F
(
APZCBasicTester
ZoomAndScrollableRectChangeAfterZoomChange
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
100
1000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
0
0
100
100
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
0
0
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale
(
1
.
0
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
MakeApzcZoomable
(
)
;
ZoomTarget
zoomTarget
{
CSSRect
(
75
25
25
25
)
}
;
apzc
-
>
ZoomToRect
(
zoomTarget
0
)
;
for
(
uint32_t
i
=
0
;
i
<
30
;
i
+
+
)
{
SampleAnimationOneFrame
(
)
;
}
EXPECT_FALSE
(
apzc
-
>
IsAsyncZooming
(
)
)
;
ZoomTarget
zoomTarget2
{
CSSRect
(
0
0
100
100
)
}
;
apzc
-
>
ZoomToRect
(
zoomTarget2
0
)
;
for
(
uint32_t
i
=
0
;
i
<
2
;
i
+
+
)
{
SampleAnimationOneFrame
(
)
;
}
float
prevScale
=
apzc
-
>
GetCurrentPinchZoomScale
(
AsyncPanZoomController
:
:
eForCompositing
)
.
scale
;
for
(
uint32_t
i
=
0
;
i
<
2
;
i
+
+
)
{
SampleAnimationOneFrame
(
)
;
float
scale
=
apzc
-
>
GetCurrentPinchZoomScale
(
AsyncPanZoomController
:
:
eForCompositing
)
.
scale
;
ASSERT_GT
(
prevScale
scale
)
;
prevScale
=
scale
;
}
float
offset
=
apzc
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForCompositing
)
.
x
;
ScrollMetadata
metadata2
=
metadata
;
metadata2
.
GetMetrics
(
)
.
SetScrollableRect
(
CSSRect
(
0
0
100
1000
.
2
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata2
false
true
)
;
float
newOffset
=
apzc
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForCompositing
)
.
x
;
ASSERT_EQ
(
newOffset
offset
)
;
}
TEST_F
(
APZCBasicTester
ZoomToRectAndCompositionBoundsChange
)
{
ScrollMetadata
metadata
;
FrameMetrics
&
metrics
=
metadata
.
GetMetrics
(
)
;
metrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
metrics
.
SetCompositionBoundsWidthIgnoringScrollbars
(
ParentLayerCoord
{
100
}
)
;
metrics
.
SetScrollableRect
(
CSSRect
(
0
0
100
1000
)
)
;
metrics
.
SetLayoutViewport
(
CSSRect
(
0
0
100
100
)
)
;
metrics
.
SetVisualScrollOffset
(
CSSPoint
(
0
0
)
)
;
metrics
.
SetZoom
(
CSSToParentLayerScale
(
1
.
0
)
)
;
metrics
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
metrics
)
;
MakeApzcZoomable
(
)
;
ZoomTarget
zoomTarget
{
CSSRect
(
25
25
25
25
)
}
;
apzc
-
>
ZoomToRect
(
zoomTarget
0
)
;
float
prevScale
=
apzc
-
>
GetCurrentPinchZoomScale
(
AsyncPanZoomController
:
:
eForCompositing
)
.
scale
;
for
(
uint32_t
i
=
0
;
i
<
3
;
i
+
+
)
{
SampleAnimationOneFrame
(
)
;
float
scale
=
apzc
-
>
GetCurrentPinchZoomScale
(
AsyncPanZoomController
:
:
eForCompositing
)
.
scale
;
ASSERT_GE
(
scale
prevScale
)
;
prevScale
=
scale
;
}
EXPECT_TRUE
(
apzc
-
>
IsAsyncZooming
(
)
)
;
ScrollMetadata
metadata2
=
metadata
;
metadata2
.
GetMetrics
(
)
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
90
100
)
)
;
apzc
-
>
NotifyLayersUpdated
(
metadata2
false
true
)
;
float
scale
=
apzc
-
>
GetCurrentPinchZoomScale
(
AsyncPanZoomController
:
:
eForCompositing
)
.
scale
;
ASSERT_EQ
(
scale
prevScale
)
;
for
(
uint32_t
i
=
0
;
i
<
30
;
i
+
+
)
{
SampleAnimationOneFrame
(
)
;
scale
=
apzc
-
>
GetCurrentPinchZoomScale
(
AsyncPanZoomController
:
:
eForCompositing
)
.
scale
;
ASSERT_GE
(
scale
prevScale
)
;
prevScale
=
scale
;
}
EXPECT_FALSE
(
apzc
-
>
IsAsyncZooming
(
)
)
;
}
TEST_F
(
APZCBasicTester
StartTolerance
)
{
SCOPED_GFX_PREF_FLOAT
(
"
apz
.
touch_start_tolerance
"
10
/
tm
-
>
GetDPI
(
)
)
;
FrameMetrics
fm
;
fm
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
100
100
)
)
;
fm
.
SetScrollableRect
(
CSSRect
(
0
0
100
300
)
)
;
fm
.
SetVisualScrollOffset
(
CSSPoint
(
0
50
)
)
;
fm
.
SetIsRootContent
(
true
)
;
apzc
-
>
SetFrameMetrics
(
fm
)
;
uint64_t
touchBlock
=
TouchDown
(
apzc
{
50
50
}
mcc
-
>
Time
(
)
)
.
mInputBlockId
;
SetDefaultAllowedTouchBehavior
(
apzc
touchBlock
)
;
CSSPoint
initialScrollOffset
=
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchMove
(
apzc
{
50
70
}
mcc
-
>
Time
(
)
)
;
ASSERT_EQ
(
initialScrollOffset
.
y
-
10
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
)
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchMove
(
apzc
{
50
90
}
mcc
-
>
Time
(
)
)
;
ASSERT_EQ
(
initialScrollOffset
.
y
-
30
apzc
-
>
GetFrameMetrics
(
)
.
GetVisualScrollOffset
(
)
.
y
)
;
mcc
-
>
AdvanceByMillis
(
1
)
;
TouchUp
(
apzc
{
50
90
}
mcc
-
>
Time
(
)
)
;
}
