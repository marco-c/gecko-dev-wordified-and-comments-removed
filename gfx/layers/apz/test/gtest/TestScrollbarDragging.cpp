#
include
"
APZCTreeManagerTester
.
h
"
#
include
"
APZTestCommon
.
h
"
#
include
"
InputUtils
.
h
"
class
APZScrollbarDraggingTester
:
public
APZCTreeManagerTester
{
public
:
APZScrollbarDraggingTester
(
)
{
CreateMockHitTester
(
)
;
}
protected
:
UniquePtr
<
ScopedLayerTreeRegistration
>
registration
;
ScrollableLayerGuid
:
:
ViewID
scrollId
=
ScrollableLayerGuid
:
:
START_SCROLL_ID
;
TestAsyncPanZoomController
*
apzc
=
nullptr
;
ParentLayerCoord
ScrollY
(
)
const
{
return
apzc
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForEventHandling
)
.
y
;
}
void
QueueHitOnVerticalScrollbar
(
)
{
mMockHitTester
-
>
QueueScrollbarThumbHitResult
(
scrollId
ScrollDirection
:
:
eVertical
)
;
}
void
CreateLayerTreeWithVerticalScrollbar
(
)
{
const
char
*
treeShape
=
"
x
(
xx
)
"
;
LayerIntRegion
layerVisibleRegion
[
]
=
{
LayerIntRect
(
0
0
100
100
)
LayerIntRect
(
0
0
50
100
)
LayerIntRect
(
50
0
50
10
)
}
;
CreateScrollData
(
treeShape
layerVisibleRegion
)
;
SetScrollableFrameMetrics
(
layers
[
1
]
scrollId
CSSRect
(
0
0
50
1000
)
)
;
registration
=
MakeUnique
<
ScopedLayerTreeRegistration
>
(
LayersId
{
0
}
mcc
)
;
layers
[
2
]
-
>
SetScrollbarData
(
ScrollbarData
:
:
CreateForThumb
(
ScrollDirection
:
:
eVertical
0
.
1
0
10
10
true
0
100
scrollId
)
)
;
UpdateHitTestingTree
(
)
;
apzc
=
ApzcOf
(
layers
[
1
]
)
;
}
}
;
TEST_F
(
APZScrollbarDraggingTester
ScrollableRectShrinksDuringDragging
)
{
SCOPED_GFX_PREF_BOOL
(
"
apz
.
drag
.
enabled
"
true
)
;
CreateLayerTreeWithVerticalScrollbar
(
)
;
EXPECT_EQ
(
ScrollY
(
)
0
)
;
QueueHitOnVerticalScrollbar
(
)
;
auto
dragBlockId
=
MouseDown
(
manager
ScreenIntPoint
(
75
5
)
mcc
-
>
Time
(
)
)
.
mInputBlockId
;
manager
-
>
StartScrollbarDrag
(
apzc
-
>
GetGuid
(
)
AsyncDragMetrics
(
scrollId
0
dragBlockId
5
ScrollDirection
:
:
eVertical
)
)
;
for
(
int
mouseY
=
10
;
mouseY
<
=
75
;
mouseY
+
=
5
)
{
mcc
-
>
AdvanceByMillis
(
10
)
;
QueueHitOnVerticalScrollbar
(
)
;
MouseMove
(
manager
ScreenIntPoint
(
75
mouseY
)
mcc
-
>
Time
(
)
)
;
}
EXPECT_GT
(
ScrollY
(
)
500
)
;
ModifyFrameMetrics
(
layers
[
1
]
[
]
(
ScrollMetadata
&
FrameMetrics
&
aMetrics
)
{
aMetrics
.
SetScrollableRect
(
CSSRect
(
0
0
50
500
)
)
;
}
)
;
UpdateHitTestingTree
(
)
;
for
(
int
mouseY
=
80
;
mouseY
<
=
95
;
mouseY
+
=
5
)
{
mcc
-
>
AdvanceByMillis
(
10
)
;
QueueHitOnVerticalScrollbar
(
)
;
MouseMove
(
manager
ScreenIntPoint
(
75
mouseY
)
mcc
-
>
Time
(
)
)
;
EXPECT_LE
(
ScrollY
(
)
400
)
;
}
mcc
-
>
AdvanceByMillis
(
10
)
;
QueueHitOnVerticalScrollbar
(
)
;
MouseUp
(
manager
ScreenIntPoint
(
75
95
)
mcc
-
>
Time
(
)
)
;
EXPECT_EQ
(
ScrollY
(
)
400
)
;
}
