#
include
"
APZCTreeManagerTester
.
h
"
#
include
"
APZTestCommon
.
h
"
#
include
"
InputUtils
.
h
"
#
include
"
Units
.
h
"
#
include
"
mozilla
/
StaticPrefs_apz
.
h
"
class
APZCTreeManagerGenericTester
:
public
APZCTreeManagerTester
{
protected
:
void
CreateSimpleScrollingLayer
(
)
{
const
char
*
treeShape
=
"
x
"
;
LayerIntRegion
layerVisibleRegion
[
]
=
{
LayerIntRect
(
0
0
200
200
)
}
;
CreateScrollData
(
treeShape
layerVisibleRegion
)
;
SetScrollableFrameMetrics
(
layers
[
0
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
CSSRect
(
0
0
500
500
)
)
;
}
void
CreateSimpleMultiLayerTree
(
)
{
const
char
*
treeShape
=
"
x
(
xx
)
"
;
LayerIntRegion
layerVisibleRegion
[
]
=
{
LayerIntRect
(
0
0
100
100
)
LayerIntRect
(
0
0
100
50
)
LayerIntRect
(
0
50
100
50
)
}
;
CreateScrollData
(
treeShape
layerVisibleRegion
)
;
}
void
CreatePotentiallyLeakingTree
(
)
{
const
char
*
treeShape
=
"
x
(
x
(
x
(
x
)
)
x
(
x
(
x
)
)
)
"
;
CreateScrollData
(
treeShape
)
;
SetScrollableFrameMetrics
(
layers
[
0
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
)
;
SetScrollableFrameMetrics
(
layers
[
2
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
)
;
SetScrollableFrameMetrics
(
layers
[
5
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
)
;
SetScrollableFrameMetrics
(
layers
[
3
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
2
)
;
SetScrollableFrameMetrics
(
layers
[
6
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
3
)
;
}
void
CreateTwoLayerTree
(
int32_t
aRootContentLayerIndex
)
{
const
char
*
treeShape
=
"
x
(
x
)
"
;
LayerIntRegion
layerVisibleRegion
[
]
=
{
LayerIntRect
(
0
0
100
100
)
LayerIntRect
(
0
0
100
100
)
}
;
CreateScrollData
(
treeShape
layerVisibleRegion
)
;
SetScrollableFrameMetrics
(
layers
[
0
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
)
;
SetScrollableFrameMetrics
(
layers
[
1
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
)
;
SetScrollHandoff
(
layers
[
1
]
layers
[
0
]
)
;
ModifyFrameMetrics
(
layers
[
aRootContentLayerIndex
]
[
]
(
ScrollMetadata
&
sm
FrameMetrics
&
fm
)
{
fm
.
SetIsRootContent
(
true
)
;
}
)
;
}
}
;
TEST_F
(
APZCTreeManagerGenericTester
ScrollablePaintedLayers
)
{
CreateSimpleMultiLayerTree
(
)
;
ScopedLayerTreeRegistration
registration
(
LayersId
{
0
}
mcc
)
;
SetScrollableFrameMetrics
(
layers
[
1
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
)
;
SetScrollableFrameMetrics
(
layers
[
2
]
ScrollableLayerGuid
:
:
START_SCROLL_ID
)
;
UpdateHitTestingTree
(
)
;
TestAsyncPanZoomController
*
nullAPZC
=
nullptr
;
EXPECT_FALSE
(
HasScrollableFrameMetrics
(
layers
[
0
]
)
)
;
EXPECT_NE
(
nullAPZC
ApzcOf
(
layers
[
1
]
)
)
;
EXPECT_NE
(
nullAPZC
ApzcOf
(
layers
[
2
]
)
)
;
EXPECT_EQ
(
ApzcOf
(
layers
[
1
]
)
ApzcOf
(
layers
[
2
]
)
)
;
}
TEST_F
(
APZCTreeManagerGenericTester
Bug1068268
)
{
CreatePotentiallyLeakingTree
(
)
;
ScopedLayerTreeRegistration
registration
(
LayersId
{
0
}
mcc
)
;
UpdateHitTestingTree
(
)
;
RefPtr
<
HitTestingTreeNode
>
root
=
manager
-
>
GetRootNode
(
)
;
RefPtr
<
HitTestingTreeNode
>
node2
=
root
-
>
GetFirstChild
(
)
-
>
GetFirstChild
(
)
;
RefPtr
<
HitTestingTreeNode
>
node5
=
root
-
>
GetLastChild
(
)
-
>
GetLastChild
(
)
;
EXPECT_EQ
(
ApzcOf
(
layers
[
2
]
)
node5
-
>
GetApzc
(
)
)
;
EXPECT_EQ
(
ApzcOf
(
layers
[
2
]
)
node2
-
>
GetApzc
(
)
)
;
EXPECT_EQ
(
ApzcOf
(
layers
[
0
]
)
ApzcOf
(
layers
[
2
]
)
-
>
GetParent
(
)
)
;
EXPECT_EQ
(
ApzcOf
(
layers
[
2
]
)
ApzcOf
(
layers
[
5
]
)
)
;
EXPECT_EQ
(
node2
-
>
GetFirstChild
(
)
node2
-
>
GetLastChild
(
)
)
;
EXPECT_EQ
(
ApzcOf
(
layers
[
3
]
)
node2
-
>
GetLastChild
(
)
-
>
GetApzc
(
)
)
;
EXPECT_EQ
(
node5
-
>
GetFirstChild
(
)
node5
-
>
GetLastChild
(
)
)
;
EXPECT_EQ
(
ApzcOf
(
layers
[
6
]
)
node5
-
>
GetLastChild
(
)
-
>
GetApzc
(
)
)
;
EXPECT_EQ
(
ApzcOf
(
layers
[
2
]
)
ApzcOf
(
layers
[
3
]
)
-
>
GetParent
(
)
)
;
EXPECT_EQ
(
ApzcOf
(
layers
[
5
]
)
ApzcOf
(
layers
[
6
]
)
-
>
GetParent
(
)
)
;
}
class
APZCTreeManagerGenericTesterMock
:
public
APZCTreeManagerGenericTester
{
public
:
APZCTreeManagerGenericTesterMock
(
)
{
CreateMockHitTester
(
)
;
}
}
;
TEST_F
(
APZCTreeManagerGenericTesterMock
Bug1194876
)
{
CreateTwoLayerTree
(
1
)
;
ScopedLayerTreeRegistration
registration
(
LayersId
{
0
}
mcc
)
;
UpdateHitTestingTree
(
)
;
uint64_t
blockId
;
nsTArray
<
ScrollableLayerGuid
>
targets
;
MultiTouchInput
mti
;
mti
=
CreateMultiTouchInput
(
MultiTouchInput
:
:
MULTITOUCH_START
mcc
-
>
Time
(
)
)
;
mti
.
mTouches
.
AppendElement
(
SingleTouchData
(
0
ScreenIntPoint
(
25
50
)
ScreenSize
(
0
0
)
0
0
)
)
;
QueueMockHitResult
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
{
CompositorHitTestFlags
:
:
eVisibleToHitTest
CompositorHitTestFlags
:
:
eIrregularArea
}
)
;
blockId
=
manager
-
>
ReceiveInputEvent
(
mti
)
.
mInputBlockId
;
manager
-
>
ContentReceivedInputBlock
(
blockId
false
)
;
targets
.
AppendElement
(
ApzcOf
(
layers
[
0
]
)
-
>
GetGuid
(
)
)
;
manager
-
>
SetTargetAPZC
(
blockId
targets
)
;
mti
.
mTouches
.
AppendElement
(
SingleTouchData
(
1
ScreenIntPoint
(
75
50
)
ScreenSize
(
0
0
)
0
0
)
)
;
QueueMockHitResult
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
{
CompositorHitTestFlags
:
:
eVisibleToHitTest
CompositorHitTestFlags
:
:
eIrregularArea
}
)
;
QueueMockHitResult
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
{
CompositorHitTestFlags
:
:
eVisibleToHitTest
CompositorHitTestFlags
:
:
eIrregularArea
}
)
;
blockId
=
manager
-
>
ReceiveInputEvent
(
mti
)
.
mInputBlockId
;
manager
-
>
ContentReceivedInputBlock
(
blockId
false
)
;
targets
.
AppendElement
(
ApzcOf
(
layers
[
0
]
)
-
>
GetGuid
(
)
)
;
manager
-
>
SetTargetAPZC
(
blockId
targets
)
;
EXPECT_CALL
(
*
mcc
HandleTap
(
TapType
:
:
eLongTap
_
_
_
_
_
)
)
.
Times
(
0
)
;
}
TEST_F
(
APZCTreeManagerGenericTesterMock
TargetChangesMidGesture_Bug1570559
)
{
CreateTwoLayerTree
(
0
)
;
ScopedLayerTreeRegistration
registration
(
LayersId
{
0
}
mcc
)
;
UpdateHitTestingTree
(
)
;
uint64_t
blockId
;
nsTArray
<
ScrollableLayerGuid
>
targets
;
MultiTouchInput
mti
=
CreateMultiTouchInput
(
MultiTouchInput
:
:
MULTITOUCH_START
mcc
-
>
Time
(
)
)
;
mti
.
mTouches
.
AppendElement
(
SingleTouchData
(
0
ScreenIntPoint
(
25
50
)
ScreenSize
(
0
0
)
0
0
)
)
;
QueueMockHitResult
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
{
CompositorHitTestFlags
:
:
eVisibleToHitTest
CompositorHitTestFlags
:
:
eIrregularArea
}
)
;
blockId
=
manager
-
>
ReceiveInputEvent
(
mti
)
.
mInputBlockId
;
manager
-
>
ContentReceivedInputBlock
(
blockId
false
)
;
targets
.
AppendElement
(
ApzcOf
(
layers
[
1
]
)
-
>
GetGuid
(
)
)
;
manager
-
>
SetTargetAPZC
(
blockId
targets
)
;
mti
.
mTouches
.
AppendElement
(
SingleTouchData
(
1
ScreenIntPoint
(
75
50
)
ScreenSize
(
0
0
)
0
0
)
)
;
QueueMockHitResult
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
{
CompositorHitTestFlags
:
:
eVisibleToHitTest
CompositorHitTestFlags
:
:
eIrregularArea
}
)
;
QueueMockHitResult
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
+
1
{
CompositorHitTestFlags
:
:
eVisibleToHitTest
CompositorHitTestFlags
:
:
eIrregularArea
}
)
;
blockId
=
manager
-
>
ReceiveInputEvent
(
mti
)
.
mInputBlockId
;
manager
-
>
ContentReceivedInputBlock
(
blockId
true
)
;
targets
.
AppendElement
(
ApzcOf
(
layers
[
1
]
)
-
>
GetGuid
(
)
)
;
manager
-
>
SetTargetAPZC
(
blockId
targets
)
;
EXPECT_CALL
(
*
mcc
HandleTap
(
TapType
:
:
eLongTap
_
_
_
_
_
)
)
.
Times
(
0
)
;
}
TEST_F
(
APZCTreeManagerGenericTesterMock
Bug1198900
)
{
CreateSimpleScrollingLayer
(
)
;
ScopedLayerTreeRegistration
registration
(
LayersId
{
0
}
mcc
)
;
UpdateHitTestingTree
(
)
;
ScreenPoint
origin
(
100
50
)
;
ScrollWheelInput
swi
(
mcc
-
>
Time
(
)
0
ScrollWheelInput
:
:
SCROLLMODE_INSTANT
ScrollWheelInput
:
:
SCROLLDELTA_PIXEL
origin
0
10
false
WheelDeltaAdjustmentStrategy
:
:
eNone
)
;
uint64_t
blockId
;
QueueMockHitResult
(
ScrollableLayerGuid
:
:
START_SCROLL_ID
{
CompositorHitTestFlags
:
:
eVisibleToHitTest
CompositorHitTestFlags
:
:
eIrregularArea
}
)
;
blockId
=
manager
-
>
ReceiveInputEvent
(
swi
)
.
mInputBlockId
;
manager
-
>
ContentReceivedInputBlock
(
blockId
true
)
;
}
TEST_F
(
APZCTreeManagerTester
Bug1551582
)
{
CreateSimpleScrollingLayer
(
)
;
ScopedLayerTreeRegistration
registration
(
LayersId
{
0
}
mcc
)
;
UpdateHitTestingTree
(
)
;
ModifyFrameMetrics
(
root
[
]
(
ScrollMetadata
&
aSm
FrameMetrics
&
aMetrics
)
{
aMetrics
.
SetLayoutScrollOffset
(
CSSPoint
(
300
300
)
)
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewScroll
(
ScrollOrigin
:
:
Other
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
300
300
)
)
)
)
;
aSm
.
SetScrollUpdates
(
scrollUpdates
)
;
aMetrics
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
}
)
;
UpdateHitTestingTree
(
)
;
RefPtr
<
TestAsyncPanZoomController
>
apzc
=
ApzcOf
(
root
)
;
CSSPoint
compositedScrollOffset
=
apzc
-
>
GetCompositedScrollOffset
(
)
;
EXPECT_EQ
(
CSSPoint
(
300
300
)
compositedScrollOffset
)
;
ModifyFrameMetrics
(
root
[
]
(
ScrollMetadata
&
aSm
FrameMetrics
&
aMetrics
)
{
aMetrics
.
SetScrollableRect
(
CSSRect
(
0
0
400
400
)
)
;
}
)
;
UpdateHitTestingTree
(
)
;
compositedScrollOffset
=
apzc
-
>
GetCompositedScrollOffset
(
)
;
EXPECT_EQ
(
CSSPoint
(
200
200
)
compositedScrollOffset
)
;
}
TEST_F
(
APZCTreeManagerTester
Bug1557424
)
{
CreateSimpleScrollingLayer
(
)
;
ScopedLayerTreeRegistration
registration
(
LayersId
{
0
}
mcc
)
;
UpdateHitTestingTree
(
)
;
ModifyFrameMetrics
(
root
[
]
(
ScrollMetadata
&
aSm
FrameMetrics
&
aMetrics
)
{
aMetrics
.
SetLayoutScrollOffset
(
CSSPoint
(
300
300
)
)
;
nsTArray
<
ScrollPositionUpdate
>
scrollUpdates
;
scrollUpdates
.
AppendElement
(
ScrollPositionUpdate
:
:
NewScroll
(
ScrollOrigin
:
:
Other
CSSPoint
:
:
ToAppUnits
(
CSSPoint
(
300
300
)
)
)
)
;
aSm
.
SetScrollUpdates
(
scrollUpdates
)
;
aMetrics
.
SetScrollGeneration
(
scrollUpdates
.
LastElement
(
)
.
GetGeneration
(
)
)
;
}
)
;
UpdateHitTestingTree
(
)
;
RefPtr
<
TestAsyncPanZoomController
>
apzc
=
ApzcOf
(
root
)
;
CSSPoint
compositedScrollOffset
=
apzc
-
>
GetCompositedScrollOffset
(
)
;
EXPECT_EQ
(
CSSPoint
(
300
300
)
compositedScrollOffset
)
;
ModifyFrameMetrics
(
root
[
]
(
ScrollMetadata
&
aSm
FrameMetrics
&
aMetrics
)
{
aMetrics
.
SetCompositionBounds
(
ParentLayerRect
(
0
0
300
300
)
)
;
}
)
;
UpdateHitTestingTree
(
)
;
compositedScrollOffset
=
apzc
-
>
GetCompositedScrollOffset
(
)
;
EXPECT_EQ
(
CSSPoint
(
200
200
)
compositedScrollOffset
)
;
}
TEST_F
(
APZCTreeManagerTester
Bug1805601
)
{
CreateSimpleScrollingLayer
(
)
;
ScopedLayerTreeRegistration
registration
(
LayersId
{
0
}
mcc
)
;
UpdateHitTestingTree
(
)
;
RefPtr
<
TestAsyncPanZoomController
>
apzc
=
ApzcOf
(
root
)
;
FrameMetrics
&
compositorMetrics
=
apzc
-
>
GetFrameMetrics
(
)
;
EXPECT_EQ
(
CSSRect
(
0
0
300
300
)
compositorMetrics
.
CalculateScrollRange
(
)
)
;
compositorMetrics
.
SetZoom
(
CSSToParentLayerScale
(
2
.
0
)
)
;
EXPECT_EQ
(
CSSRect
(
0
0
400
400
)
compositorMetrics
.
CalculateScrollRange
(
)
)
;
compositorMetrics
.
ClampAndSetVisualScrollOffset
(
CSSPoint
(
350
350
)
)
;
EXPECT_EQ
(
CSSPoint
(
350
350
)
compositorMetrics
.
GetVisualScrollOffset
(
)
)
;
ModifyFrameMetrics
(
root
[
]
(
ScrollMetadata
&
aSm
FrameMetrics
&
aMetrics
)
{
aMetrics
.
SetVisualScrollOffset
(
CSSPoint
(
350
350
)
)
;
aSm
.
SetResolutionUpdated
(
true
)
;
}
)
;
UpdateHitTestingTree
(
)
;
EXPECT_EQ
(
CSSRect
(
0
0
300
300
)
compositorMetrics
.
CalculateScrollRange
(
)
)
;
EXPECT_EQ
(
CSSPoint
(
300
300
)
compositorMetrics
.
GetVisualScrollOffset
(
)
)
;
}
TEST_F
(
APZCTreeManagerTester
InstantKeyScrollBetweenTwoSamplingsWithSameTimeStamp
)
{
if
(
!
StaticPrefs
:
:
apz_keyboard_enabled_AtStartup
(
)
)
{
return
;
}
SCOPED_GFX_PREF_BOOL
(
"
general
.
smoothScroll
"
false
)
;
AutoTArray
<
KeyboardShortcut
1
>
shortcuts
{
KeyboardShortcut
(
KeyboardInput
:
:
KEY_DOWN
0
0
0
0
KeyboardScrollAction
(
KeyboardScrollAction
:
:
KeyboardScrollActionType
:
:
eScrollPage
true
)
)
}
;
KeyboardMap
keyboardMap
(
std
:
:
move
(
shortcuts
)
)
;
manager
-
>
SetKeyboardMap
(
keyboardMap
)
;
CreateSimpleScrollingLayer
(
)
;
ScopedLayerTreeRegistration
registration
(
LayersId
{
0
}
mcc
)
;
UpdateHitTestingTree
(
)
;
FocusTarget
focusTarget
;
focusTarget
.
mSequenceNumber
=
1
;
focusTarget
.
mData
=
AsVariant
<
FocusTarget
:
:
ScrollTargets
>
(
{
ScrollableLayerGuid
:
:
START_SCROLL_ID
ScrollableLayerGuid
:
:
START_SCROLL_ID
}
)
;
manager
-
>
UpdateFocusState
(
LayersId
{
0
}
LayersId
{
0
}
focusTarget
)
;
mcc
-
>
AdvanceByMillis
(
16
)
;
EXPECT_FALSE
(
manager
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
)
;
WidgetKeyboardEvent
widgetEvent
(
true
eKeyDown
nullptr
)
;
KeyboardInput
input
(
widgetEvent
)
;
Unused
<
<
manager
-
>
ReceiveInputEvent
(
input
)
;
ParentLayerPoint
compositedScrollOffset
;
while
(
true
)
{
bool
needMoreFrames
=
manager
-
>
AdvanceAnimations
(
mcc
-
>
GetSampleTime
(
)
)
;
compositedScrollOffset
=
ApzcOf
(
root
)
-
>
GetCurrentAsyncScrollOffset
(
AsyncPanZoomController
:
:
eForCompositing
)
;
if
(
!
needMoreFrames
)
{
break
;
}
mcc
-
>
AdvanceBy
(
TimeDuration
:
:
FromMilliseconds
(
16
)
)
;
}
EXPECT_GT
(
compositedScrollOffset
.
y
0
)
;
}
