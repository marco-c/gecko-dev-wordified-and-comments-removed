"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
gfx
/
layers
/
apz
/
test
/
mochitest
/
apz_test_utils
.
js
"
this
)
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
gfx
/
layers
/
apz
/
test
/
mochitest
/
apz_test_native_event_utils
.
js
"
this
)
;
add_task
(
async
(
)
=
>
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
apz
.
content_response_timeout
"
100
]
]
}
)
;
const
URL_ROOT
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
/
"
"
http
:
/
/
mochi
.
test
:
8888
/
"
)
;
const
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
URL_ROOT
+
"
helper_content_response_timeout
.
html
"
)
;
await
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
]
async
(
)
=
>
{
await
content
.
wrappedJSObject
.
promiseApzFlushedRepaints
(
)
;
await
content
.
wrappedJSObject
.
waitUntilApzStable
(
)
;
}
)
;
await
NativePanHandler
.
promiseNativePanEvent
(
tab
.
linkedBrowser
100
100
0
NativePanHandler
.
delta
NativePanHandler
.
beginPhase
)
;
await
new
Promise
(
resolve
=
>
{
setTimeout
(
resolve
200
)
;
}
)
;
await
NativePanHandler
.
promiseNativePanEvent
(
tab
.
linkedBrowser
100
100
0
NativePanHandler
.
delta
NativePanHandler
.
updatePhase
)
;
await
NativePanHandler
.
promiseNativePanEvent
(
tab
.
linkedBrowser
100
100
0
0
NativePanHandler
.
endPhase
)
;
await
TestUtils
.
waitForCondition
(
async
(
)
=
>
{
const
backgroundColor
=
await
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
]
(
)
=
>
{
const
target
=
content
.
document
.
querySelector
(
"
#
target
"
)
;
return
content
.
window
.
getComputedStyle
(
target
)
.
backgroundColor
;
}
)
;
return
backgroundColor
=
=
"
rgb
(
0
255
0
)
"
;
}
"
The
background
color
of
the
element
has
been
changed
"
)
;
ok
(
true
"
We
got
at
leasts
one
scroll
event
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
await
SpecialPowers
.
popPrefEnv
(
)
;
}
)
;
