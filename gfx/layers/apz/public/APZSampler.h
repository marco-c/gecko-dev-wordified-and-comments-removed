#
ifndef
mozilla_layers_APZSampler_h
#
define
mozilla_layers_APZSampler_h
#
include
<
unordered_map
>
#
include
"
base
/
platform_thread
.
h
"
#
include
"
mozilla
/
layers
/
APZUtils
.
h
"
#
include
"
mozilla
/
layers
/
SampleTime
.
h
"
#
include
"
mozilla
/
StaticMutex
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
Units
.
h
"
namespace
mozilla
{
class
TimeStamp
;
namespace
wr
{
struct
Transaction
;
class
TransactionWrapper
;
struct
WrWindowId
;
}
namespace
layers
{
class
APZCTreeManager
;
class
LayerMetricsWrapper
;
struct
ScrollbarData
;
class
APZSampler
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
APZSampler
)
public
:
APZSampler
(
const
RefPtr
<
APZCTreeManager
>
&
aApz
bool
aIsUsingWebRender
)
;
void
Destroy
(
)
;
void
SetWebRenderWindowId
(
const
wr
:
:
WindowId
&
aWindowId
)
;
static
void
SetSamplerThread
(
const
wr
:
:
WrWindowId
&
aWindowId
)
;
static
void
SampleForWebRender
(
const
wr
:
:
WrWindowId
&
aWindowId
const
uint64_t
*
aGeneratedFrameId
wr
:
:
Transaction
*
aTransaction
const
wr
:
:
WrPipelineIdEpochs
*
aEpochsBeingRendered
)
;
void
SetSampleTime
(
const
SampleTime
&
aSampleTime
)
;
void
SampleForWebRender
(
const
Maybe
<
VsyncId
>
&
aGeneratedFrameId
wr
:
:
TransactionWrapper
&
aTxn
const
wr
:
:
WrPipelineIdEpochs
*
aEpochsBeingRendered
)
;
bool
AdvanceAnimations
(
const
SampleTime
&
aSampleTime
)
;
LayerToParentLayerMatrix4x4
ComputeTransformForScrollThumb
(
const
LayerToParentLayerMatrix4x4
&
aCurrentTransform
const
LayerMetricsWrapper
&
aContent
const
ScrollbarData
&
aThumbData
bool
aScrollbarIsDescendant
AsyncTransformComponentMatrix
*
aOutClipTransform
)
;
CSSRect
GetCurrentAsyncLayoutViewport
(
const
LayerMetricsWrapper
&
aLayer
)
;
ParentLayerPoint
GetCurrentAsyncScrollOffset
(
const
LayerMetricsWrapper
&
aLayer
)
;
AsyncTransform
GetCurrentAsyncTransform
(
const
LayerMetricsWrapper
&
aLayer
AsyncTransformComponents
aComponents
)
;
AsyncTransformComponentMatrix
GetOverscrollTransform
(
const
LayerMetricsWrapper
&
aLayer
)
;
AsyncTransformComponentMatrix
GetCurrentAsyncTransformWithOverscroll
(
const
LayerMetricsWrapper
&
aLayer
)
;
Maybe
<
CompositionPayload
>
NotifyScrollSampling
(
const
LayerMetricsWrapper
&
aLayer
)
;
void
MarkAsyncTransformAppliedToContent
(
const
LayerMetricsWrapper
&
aLayer
)
;
bool
HasUnusedAsyncTransform
(
const
LayerMetricsWrapper
&
aLayer
)
;
AsyncTransform
GetCurrentAsyncTransform
(
const
LayersId
&
aLayersId
const
ScrollableLayerGuid
:
:
ViewID
&
aScrollId
AsyncTransformComponents
aComponents
)
const
;
ParentLayerRect
GetCompositionBounds
(
const
LayersId
&
aLayersId
const
ScrollableLayerGuid
:
:
ViewID
&
aScrollId
)
const
;
ScrollableLayerGuid
GetGuid
(
const
LayerMetricsWrapper
&
aLayer
)
;
GeckoViewMetrics
GetGeckoViewMetrics
(
const
LayerMetricsWrapper
&
aLayer
)
const
;
ScreenMargin
GetGeckoFixedLayerMargins
(
)
const
;
void
AssertOnSamplerThread
(
)
const
;
bool
IsSamplerThread
(
)
const
;
protected
:
virtual
~
APZSampler
(
)
;
static
already_AddRefed
<
APZSampler
>
GetSampler
(
const
wr
:
:
WrWindowId
&
aWindowId
)
;
private
:
RefPtr
<
APZCTreeManager
>
mApz
;
bool
mIsUsingWebRender
;
static
StaticMutex
sWindowIdLock
;
static
StaticAutoPtr
<
std
:
:
unordered_map
<
uint64_t
RefPtr
<
APZSampler
>
>
>
sWindowIdMap
;
Maybe
<
wr
:
:
WrWindowId
>
mWindowId
;
mutable
Mutex
mThreadIdLock
;
Maybe
<
PlatformThreadId
>
mSamplerThreadId
;
Mutex
mSampleTimeLock
;
SampleTime
mSampleTime
;
}
;
}
}
#
endif
