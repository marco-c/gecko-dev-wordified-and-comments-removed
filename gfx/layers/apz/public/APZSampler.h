#
ifndef
mozilla_layers_APZSampler_h
#
define
mozilla_layers_APZSampler_h
#
include
"
mozilla
/
layers
/
APZTestData
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
namespace
mozilla
{
namespace
layers
{
class
APZCTreeManager
;
class
FocusTarget
;
class
Layer
;
class
WebRenderScrollData
;
class
APZSampler
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
APZSampler
)
public
:
explicit
APZSampler
(
const
RefPtr
<
APZCTreeManager
>
&
aApz
)
;
void
ClearTree
(
)
;
void
UpdateFocusState
(
uint64_t
aRootLayerTreeId
uint64_t
aOriginatingLayersId
const
FocusTarget
&
aFocusTarget
)
;
void
UpdateHitTestingTree
(
uint64_t
aRootLayerTreeId
Layer
*
aRoot
bool
aIsFirstPaint
uint64_t
aOriginatingLayersId
uint32_t
aPaintSequenceNumber
)
;
void
UpdateHitTestingTree
(
uint64_t
aRootLayerTreeId
const
WebRenderScrollData
&
aScrollData
bool
aIsFirstPaint
uint64_t
aOriginatingLayersId
uint32_t
aPaintSequenceNumber
)
;
void
NotifyLayerTreeAdopted
(
uint64_t
aLayersId
const
RefPtr
<
APZSampler
>
&
aOldSampler
)
;
void
NotifyLayerTreeRemoved
(
uint64_t
aLayersId
)
;
bool
GetAPZTestData
(
uint64_t
aLayersId
APZTestData
*
aOutData
)
;
protected
:
virtual
~
APZSampler
(
)
;
private
:
RefPtr
<
APZCTreeManager
>
mApz
;
}
;
}
}
#
endif
