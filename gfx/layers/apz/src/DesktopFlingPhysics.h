#
ifndef
mozilla_layers_DesktopFlingPhysics_h_
#
define
mozilla_layers_DesktopFlingPhysics_h_
#
include
"
AsyncPanZoomController
.
h
"
#
include
"
Units
.
h
"
#
include
"
gfxPrefs
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
define
FLING_PHYS_LOG
(
.
.
.
)
namespace
mozilla
{
namespace
layers
{
class
DesktopFlingPhysics
{
public
:
void
Init
(
const
ParentLayerPoint
&
aStartingVelocity
float
aPLPPI
)
{
mVelocity
=
aStartingVelocity
;
}
void
Sample
(
const
TimeDuration
&
aDelta
ParentLayerPoint
*
aOutVelocity
ParentLayerPoint
*
aOutOffset
)
{
float
friction
=
gfxPrefs
:
:
APZFlingFriction
(
)
;
float
threshold
=
gfxPrefs
:
:
APZFlingStoppedThreshold
(
)
;
mVelocity
=
ParentLayerPoint
(
ApplyFrictionOrCancel
(
mVelocity
.
x
aDelta
friction
threshold
)
ApplyFrictionOrCancel
(
mVelocity
.
y
aDelta
friction
threshold
)
)
;
*
aOutVelocity
=
mVelocity
;
*
aOutOffset
=
mVelocity
*
aDelta
.
ToMilliseconds
(
)
;
}
private
:
static
float
ApplyFrictionOrCancel
(
float
aVelocity
const
TimeDuration
&
aDelta
float
aFriction
float
aThreshold
)
{
if
(
fabsf
(
aVelocity
)
<
=
aThreshold
)
{
return
0
.
0f
;
}
aVelocity
*
=
pow
(
1
.
0f
-
aFriction
float
(
aDelta
.
ToMilliseconds
(
)
)
)
;
return
aVelocity
;
}
ParentLayerPoint
mVelocity
;
}
;
}
}
#
endif
