#
ifndef
mozilla_layers_APZUtils_h
#
define
mozilla_layers_APZUtils_h
#
include
<
stdint
.
h
>
#
include
<
type_traits
>
#
include
"
gfxTypes
.
h
"
#
include
"
FrameMetrics
.
h
"
#
include
"
LayersTypes
.
h
"
#
include
"
UnitTransforms
.
h
"
#
include
"
mozilla
/
gfx
/
CompositorHitTestInfo
.
h
"
#
include
"
mozilla
/
gfx
/
Point
.
h
"
#
include
"
mozilla
/
DefineEnum
.
h
"
#
include
"
mozilla
/
EnumSet
.
h
"
#
include
"
mozilla
/
FloatingPoint
.
h
"
namespace
mozilla
{
namespace
layers
{
enum
CancelAnimationFlags
:
uint32_t
{
Default
=
0x0
ExcludeOverscroll
=
0x1
ScrollSnap
=
0x2
ExcludeWheel
=
0x4
TriggeredExternally
=
0x8
}
;
inline
CancelAnimationFlags
operator
|
(
CancelAnimationFlags
a
CancelAnimationFlags
b
)
{
return
static_cast
<
CancelAnimationFlags
>
(
static_cast
<
int
>
(
a
)
|
static_cast
<
int
>
(
b
)
)
;
}
typedef
EnumSet
<
ScrollDirection
>
ScrollDirections
;
enum
class
ScrollSource
{
DOM
Touch
Wheel
Keyboard
}
;
const
float
COORDINATE_EPSILON
=
0
.
01f
;
template
<
typename
Units
>
static
bool
IsZero
(
const
gfx
:
:
PointTyped
<
Units
>
&
aPoint
)
{
return
FuzzyEqualsAdditive
(
aPoint
.
x
0
.
0f
COORDINATE_EPSILON
)
&
&
FuzzyEqualsAdditive
(
aPoint
.
y
0
.
0f
COORDINATE_EPSILON
)
;
}
inline
AsyncTransformMatrix
CompleteAsyncTransform
(
const
AsyncTransformComponentMatrix
&
aMatrix
)
{
return
ViewAs
<
AsyncTransformMatrix
>
(
aMatrix
PixelCastJustification
:
:
MultipleAsyncTransforms
)
;
}
struct
TargetConfirmationFlags
final
{
explicit
TargetConfirmationFlags
(
bool
aTargetConfirmed
)
:
mTargetConfirmed
(
aTargetConfirmed
)
mRequiresTargetConfirmation
(
false
)
mHitScrollThumb
(
false
)
{
}
explicit
TargetConfirmationFlags
(
const
gfx
:
:
CompositorHitTestInfo
&
aHitTestInfo
)
:
mTargetConfirmed
(
(
aHitTestInfo
!
=
gfx
:
:
CompositorHitTestInvisibleToHit
)
&
&
(
aHitTestInfo
&
gfx
:
:
CompositorHitTestDispatchToContent
)
.
isEmpty
(
)
)
mRequiresTargetConfirmation
(
aHitTestInfo
.
contains
(
gfx
:
:
CompositorHitTestFlags
:
:
eRequiresTargetConfirmation
)
)
mHitScrollThumb
(
aHitTestInfo
.
contains
(
gfx
:
:
CompositorHitTestFlags
:
:
eScrollbarThumb
)
)
{
}
bool
mTargetConfirmed
:
1
;
bool
mRequiresTargetConfirmation
:
1
;
bool
mHitScrollThumb
:
1
;
}
;
enum
class
AsyncTransformComponent
{
eLayout
eVisual
}
;
using
AsyncTransformComponents
=
EnumSet
<
AsyncTransformComponent
>
;
constexpr
AsyncTransformComponents
LayoutAndVisual
(
AsyncTransformComponent
:
:
eLayout
AsyncTransformComponent
:
:
eVisual
)
;
namespace
apz
{
bool
IsCloseToHorizontal
(
float
aAngle
float
aThreshold
)
;
bool
IsCloseToVertical
(
float
aAngle
float
aThreshold
)
;
bool
IsStuckAtBottom
(
gfxFloat
aTranslation
const
LayerRectAbsolute
&
aInnerRange
const
LayerRectAbsolute
&
aOuterRange
)
;
bool
IsStuckAtTop
(
gfxFloat
aTranslation
const
LayerRectAbsolute
&
aInnerRange
const
LayerRectAbsolute
&
aOuterRange
)
;
}
}
}
#
endif
