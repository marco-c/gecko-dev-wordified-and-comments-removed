#
ifndef
mozilla_layers_HitTestingTreeNode_h
#
define
mozilla_layers_HitTestingTreeNode_h
#
include
"
APZUtils
.
h
"
#
include
"
FrameMetrics
.
h
"
#
include
"
Layers
.
h
"
#
include
"
mozilla
/
gfx
/
Matrix
.
h
"
#
include
"
mozilla
/
layers
/
LayersTypes
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
namespace
mozilla
{
namespace
layers
{
class
AsyncDragMetrics
;
class
AsyncPanZoomController
;
class
HitTestingTreeNode
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
HitTestingTreeNode
)
;
private
:
~
HitTestingTreeNode
(
)
;
public
:
HitTestingTreeNode
(
AsyncPanZoomController
*
aApzc
bool
aIsPrimaryHolder
uint64_t
aLayersId
)
;
void
RecycleWith
(
AsyncPanZoomController
*
aApzc
uint64_t
aLayersId
)
;
void
Destroy
(
)
;
void
SetLastChild
(
HitTestingTreeNode
*
aChild
)
;
void
SetPrevSibling
(
HitTestingTreeNode
*
aSibling
)
;
void
MakeRoot
(
)
;
HitTestingTreeNode
*
GetFirstChild
(
)
const
;
HitTestingTreeNode
*
GetLastChild
(
)
const
;
HitTestingTreeNode
*
GetPrevSibling
(
)
const
;
HitTestingTreeNode
*
GetParent
(
)
const
;
AsyncPanZoomController
*
GetApzc
(
)
const
;
AsyncPanZoomController
*
GetNearestContainingApzc
(
)
const
;
bool
IsPrimaryHolder
(
)
const
;
uint64_t
GetLayersId
(
)
const
;
void
SetHitTestData
(
const
EventRegions
&
aRegions
const
CSSTransformMatrix
&
aTransform
const
Maybe
<
ParentLayerIntRegion
>
&
aClipRegion
const
EventRegionsOverride
&
aOverride
)
;
bool
IsOutsideClip
(
const
ParentLayerPoint
&
aPoint
)
const
;
void
SetScrollbarData
(
FrameMetrics
:
:
ViewID
aScrollViewId
const
ScrollThumbData
&
aThumbData
bool
aIsScrollContainer
)
;
bool
MatchesScrollDragMetrics
(
const
AsyncDragMetrics
&
aDragMetrics
)
const
;
bool
IsScrollbarNode
(
)
const
;
bool
IsScrollThumbNode
(
)
const
;
FrameMetrics
:
:
ViewID
GetScrollTargetId
(
)
const
;
const
ScrollThumbData
&
GetScrollThumbData
(
)
const
;
void
SetFixedPosData
(
FrameMetrics
:
:
ViewID
aFixedPosTarget
)
;
FrameMetrics
:
:
ViewID
GetFixedPosTarget
(
)
const
;
Maybe
<
LayerPoint
>
Untransform
(
const
ParentLayerPoint
&
aPoint
const
LayerToParentLayerMatrix4x4
&
aTransform
)
const
;
HitTestResult
HitTest
(
const
LayerPoint
&
aPoint
)
const
;
EventRegionsOverride
GetEventRegionsOverride
(
)
const
;
const
CSSTransformMatrix
&
GetTransform
(
)
const
;
void
Dump
(
const
char
*
aPrefix
=
"
"
)
const
;
private
:
void
SetApzcParent
(
AsyncPanZoomController
*
aApzc
)
;
RefPtr
<
HitTestingTreeNode
>
mLastChild
;
RefPtr
<
HitTestingTreeNode
>
mPrevSibling
;
RefPtr
<
HitTestingTreeNode
>
mParent
;
RefPtr
<
AsyncPanZoomController
>
mApzc
;
bool
mIsPrimaryApzcHolder
;
uint64_t
mLayersId
;
FrameMetrics
:
:
ViewID
mScrollViewId
;
ScrollThumbData
mScrollThumbData
;
bool
mIsScrollbarContainer
;
FrameMetrics
:
:
ViewID
mFixedPosTarget
;
EventRegions
mEventRegions
;
CSSTransformMatrix
mTransform
;
Maybe
<
ParentLayerIntRegion
>
mClipRegion
;
EventRegionsOverride
mOverride
;
}
;
}
}
#
endif
