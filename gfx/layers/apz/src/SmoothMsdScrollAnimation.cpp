#
include
"
SmoothMsdScrollAnimation
.
h
"
#
include
"
AsyncPanZoomController
.
h
"
namespace
mozilla
{
namespace
layers
{
SmoothMsdScrollAnimation
:
:
SmoothMsdScrollAnimation
(
AsyncPanZoomController
&
aApzc
const
CSSPoint
&
aInitialPosition
const
CSSPoint
&
aInitialVelocity
const
CSSPoint
&
aDestination
double
aSpringConstant
double
aDampingRatio
)
:
mApzc
(
aApzc
)
mXAxisModel
(
aInitialPosition
.
x
aDestination
.
x
aInitialVelocity
.
x
aSpringConstant
aDampingRatio
)
mYAxisModel
(
aInitialPosition
.
y
aDestination
.
y
aInitialVelocity
.
y
aSpringConstant
aDampingRatio
)
{
}
bool
SmoothMsdScrollAnimation
:
:
DoSample
(
FrameMetrics
&
aFrameMetrics
const
TimeDuration
&
aDelta
)
{
CSSToParentLayerScale2D
zoom
=
aFrameMetrics
.
GetZoom
(
)
;
if
(
zoom
=
=
CSSToParentLayerScale2D
(
0
0
)
)
{
return
false
;
}
CSSPoint
oneParentLayerPixel
=
ParentLayerPoint
(
1
1
)
/
aFrameMetrics
.
GetZoom
(
)
;
if
(
mXAxisModel
.
IsFinished
(
oneParentLayerPixel
.
x
)
&
&
mYAxisModel
.
IsFinished
(
oneParentLayerPixel
.
y
)
)
{
mApzc
.
ClampAndSetVisualScrollOffset
(
CSSPoint
(
mXAxisModel
.
GetDestination
(
)
mYAxisModel
.
GetDestination
(
)
)
)
;
return
false
;
}
mXAxisModel
.
Simulate
(
aDelta
)
;
mYAxisModel
.
Simulate
(
aDelta
)
;
CSSPoint
position
=
CSSPoint
(
mXAxisModel
.
GetPosition
(
)
mYAxisModel
.
GetPosition
(
)
)
;
CSSPoint
css_velocity
=
CSSPoint
(
mXAxisModel
.
GetVelocity
(
)
mYAxisModel
.
GetVelocity
(
)
)
;
ParentLayerPoint
velocity
=
ParentLayerPoint
(
css_velocity
.
x
css_velocity
.
y
)
/
1000
.
0f
;
if
(
mXAxisModel
.
IsFinished
(
oneParentLayerPixel
.
x
)
)
{
mApzc
.
mX
.
SetVelocity
(
0
)
;
}
else
{
mApzc
.
mX
.
SetVelocity
(
velocity
.
x
)
;
}
if
(
mYAxisModel
.
IsFinished
(
oneParentLayerPixel
.
y
)
)
{
mApzc
.
mY
.
SetVelocity
(
0
)
;
}
else
{
mApzc
.
mY
.
SetVelocity
(
velocity
.
y
)
;
}
ParentLayerPoint
displacement
=
(
position
-
aFrameMetrics
.
GetVisualScrollOffset
(
)
)
*
zoom
;
ParentLayerPoint
overscroll
;
ParentLayerPoint
adjustedOffset
;
mApzc
.
mX
.
AdjustDisplacement
(
displacement
.
x
adjustedOffset
.
x
overscroll
.
x
)
;
mApzc
.
mY
.
AdjustDisplacement
(
displacement
.
y
adjustedOffset
.
y
overscroll
.
y
)
;
mApzc
.
ScrollBy
(
adjustedOffset
/
zoom
)
;
if
(
!
IsZero
(
overscroll
)
)
{
if
(
FuzzyEqualsAdditive
(
overscroll
.
x
0
.
0f
COORDINATE_EPSILON
)
)
{
velocity
.
x
=
0
;
}
else
if
(
FuzzyEqualsAdditive
(
overscroll
.
y
0
.
0f
COORDINATE_EPSILON
)
)
{
velocity
.
y
=
0
;
}
mDeferredTasks
.
AppendElement
(
NewRunnableMethod
<
ParentLayerPoint
SideBits
>
(
"
layers
:
:
AsyncPanZoomController
:
:
HandleSmoothScrollOverscroll
"
&
mApzc
&
AsyncPanZoomController
:
:
HandleSmoothScrollOverscroll
velocity
apz
:
:
GetOverscrollSideBits
(
overscroll
)
)
)
;
return
false
;
}
return
true
;
}
void
SmoothMsdScrollAnimation
:
:
SetDestination
(
const
CSSPoint
&
aNewDestination
)
{
mXAxisModel
.
SetDestination
(
aNewDestination
.
x
)
;
mYAxisModel
.
SetDestination
(
aNewDestination
.
y
)
;
}
CSSPoint
SmoothMsdScrollAnimation
:
:
GetDestination
(
)
const
{
return
CSSPoint
(
mXAxisModel
.
GetDestination
(
)
mYAxisModel
.
GetDestination
(
)
)
;
}
SmoothMsdScrollAnimation
*
SmoothMsdScrollAnimation
:
:
AsSmoothMsdScrollAnimation
(
)
{
return
this
;
}
}
}
