#
include
"
GenericScrollAnimation
.
h
"
#
include
"
AsyncPanZoomController
.
h
"
#
include
"
FrameMetrics
.
h
"
#
include
"
gfxPrefs
.
h
"
#
include
"
nsPoint
.
h
"
#
include
"
ScrollAnimationPhysics
.
h
"
#
include
"
ScrollAnimationBezierPhysics
.
h
"
#
include
"
ScrollAnimationMSDPhysics
.
h
"
namespace
mozilla
{
namespace
layers
{
GenericScrollAnimation
:
:
GenericScrollAnimation
(
AsyncPanZoomController
&
aApzc
const
nsPoint
&
aInitialPosition
const
ScrollAnimationBezierPhysicsSettings
&
aSettings
)
:
mApzc
(
aApzc
)
mFinalDestination
(
aInitialPosition
)
{
if
(
StaticPrefs
:
:
SmoothScrollMSDPhysicsEnabled
(
)
)
{
mAnimationPhysics
=
MakeUnique
<
ScrollAnimationMSDPhysics
>
(
aInitialPosition
)
;
}
else
{
mAnimationPhysics
=
MakeUnique
<
ScrollAnimationBezierPhysics
>
(
aInitialPosition
aSettings
)
;
}
}
void
GenericScrollAnimation
:
:
UpdateDelta
(
TimeStamp
aTime
const
nsPoint
&
aDelta
const
nsSize
&
aCurrentVelocity
)
{
mFinalDestination
+
=
aDelta
;
Update
(
aTime
aCurrentVelocity
)
;
}
void
GenericScrollAnimation
:
:
UpdateDestination
(
TimeStamp
aTime
const
nsPoint
&
aDestination
const
nsSize
&
aCurrentVelocity
)
{
mFinalDestination
=
aDestination
;
Update
(
aTime
aCurrentVelocity
)
;
}
void
GenericScrollAnimation
:
:
Update
(
TimeStamp
aTime
const
nsSize
&
aCurrentVelocity
)
{
CSSPoint
clamped
=
CSSPoint
:
:
FromAppUnits
(
mFinalDestination
)
;
clamped
.
x
=
mApzc
.
mX
.
ClampOriginToScrollableRect
(
clamped
.
x
)
;
clamped
.
y
=
mApzc
.
mY
.
ClampOriginToScrollableRect
(
clamped
.
y
)
;
mFinalDestination
=
CSSPoint
:
:
ToAppUnits
(
clamped
)
;
mAnimationPhysics
-
>
Update
(
aTime
mFinalDestination
aCurrentVelocity
)
;
}
bool
GenericScrollAnimation
:
:
DoSample
(
FrameMetrics
&
aFrameMetrics
const
TimeDuration
&
aDelta
)
{
TimeStamp
now
=
mApzc
.
GetFrameTime
(
)
;
CSSToParentLayerScale2D
zoom
=
aFrameMetrics
.
GetZoom
(
)
;
bool
finished
=
mAnimationPhysics
-
>
IsFinished
(
now
)
;
nsPoint
sampledDest
=
mAnimationPhysics
-
>
PositionAt
(
now
)
;
ParentLayerPoint
displacement
=
(
CSSPoint
:
:
FromAppUnits
(
sampledDest
)
-
aFrameMetrics
.
GetScrollOffset
(
)
)
*
zoom
;
if
(
finished
)
{
mApzc
.
mX
.
SetVelocity
(
0
)
;
mApzc
.
mY
.
SetVelocity
(
0
)
;
}
else
if
(
!
IsZero
(
displacement
)
)
{
nsSize
velocity
=
mAnimationPhysics
-
>
VelocityAt
(
now
)
;
ParentLayerPoint
velocityPL
=
CSSPoint
:
:
FromAppUnits
(
nsPoint
(
velocity
.
width
velocity
.
height
)
)
*
zoom
;
mApzc
.
mX
.
SetVelocity
(
velocityPL
.
x
/
1000
.
0
)
;
mApzc
.
mY
.
SetVelocity
(
velocityPL
.
y
/
1000
.
0
)
;
}
ParentLayerPoint
adjustedOffset
overscroll
;
mApzc
.
mX
.
AdjustDisplacement
(
displacement
.
x
adjustedOffset
.
x
overscroll
.
x
mDirectionForcedToOverscroll
=
=
Some
(
ScrollDirection
:
:
eHorizontal
)
)
;
mApzc
.
mY
.
AdjustDisplacement
(
displacement
.
y
adjustedOffset
.
y
overscroll
.
y
mDirectionForcedToOverscroll
=
=
Some
(
ScrollDirection
:
:
eVertical
)
)
;
if
(
!
IsZero
(
displacement
)
&
&
IsZero
(
adjustedOffset
)
)
{
return
false
;
}
mApzc
.
ScrollBy
(
adjustedOffset
/
zoom
)
;
return
!
finished
;
}
bool
GenericScrollAnimation
:
:
HandleScrollOffsetUpdate
(
const
Maybe
<
CSSPoint
>
&
aRelativeDelta
)
{
if
(
aRelativeDelta
)
{
mAnimationPhysics
-
>
ApplyContentShift
(
*
aRelativeDelta
)
;
return
true
;
}
return
false
;
}
}
}
