#
include
"
GenericScrollAnimation
.
h
"
#
include
"
AsyncPanZoomController
.
h
"
#
include
"
gfxPrefs
.
h
"
#
include
"
nsPoint
.
h
"
namespace
mozilla
{
namespace
layers
{
GenericScrollAnimation
:
:
GenericScrollAnimation
(
AsyncPanZoomController
&
aApzc
const
nsPoint
&
aInitialPosition
)
:
AsyncScrollBase
(
aInitialPosition
)
mApzc
(
aApzc
)
mFinalDestination
(
aInitialPosition
)
mForceVerticalOverscroll
(
false
)
{
}
void
GenericScrollAnimation
:
:
UpdateDelta
(
TimeStamp
aTime
nsPoint
aDelta
const
nsSize
&
aCurrentVelocity
)
{
mFinalDestination
+
=
aDelta
;
Update
(
aTime
aCurrentVelocity
)
;
}
void
GenericScrollAnimation
:
:
UpdateDestination
(
TimeStamp
aTime
nsPoint
aDestination
const
nsSize
&
aCurrentVelocity
)
{
mFinalDestination
=
aDestination
;
Update
(
aTime
aCurrentVelocity
)
;
}
void
GenericScrollAnimation
:
:
Update
(
TimeStamp
aTime
const
nsSize
&
aCurrentVelocity
)
{
if
(
mIsFirstIteration
)
{
InitializeHistory
(
aTime
)
;
}
CSSPoint
clamped
=
CSSPoint
:
:
FromAppUnits
(
mFinalDestination
)
;
clamped
.
x
=
mApzc
.
mX
.
ClampOriginToScrollableRect
(
clamped
.
x
)
;
clamped
.
y
=
mApzc
.
mY
.
ClampOriginToScrollableRect
(
clamped
.
y
)
;
mFinalDestination
=
CSSPoint
:
:
ToAppUnits
(
clamped
)
;
AsyncScrollBase
:
:
Update
(
aTime
mFinalDestination
aCurrentVelocity
)
;
}
bool
GenericScrollAnimation
:
:
DoSample
(
FrameMetrics
&
aFrameMetrics
const
TimeDuration
&
aDelta
)
{
TimeStamp
now
=
mApzc
.
GetFrameTime
(
)
;
CSSToParentLayerScale2D
zoom
=
aFrameMetrics
.
GetZoom
(
)
;
bool
finished
=
IsFinished
(
now
)
;
nsPoint
sampledDest
=
finished
?
mDestination
:
PositionAt
(
now
)
;
ParentLayerPoint
displacement
=
(
CSSPoint
:
:
FromAppUnits
(
sampledDest
)
-
aFrameMetrics
.
GetScrollOffset
(
)
)
*
zoom
;
if
(
finished
)
{
mApzc
.
mX
.
SetVelocity
(
0
)
;
mApzc
.
mY
.
SetVelocity
(
0
)
;
}
else
if
(
!
IsZero
(
displacement
)
)
{
float
xVelocity
=
displacement
.
x
/
aDelta
.
ToMilliseconds
(
)
;
float
yVelocity
=
displacement
.
y
/
aDelta
.
ToMilliseconds
(
)
;
mApzc
.
mX
.
SetVelocity
(
xVelocity
)
;
mApzc
.
mY
.
SetVelocity
(
yVelocity
)
;
}
ParentLayerPoint
adjustedOffset
overscroll
;
mApzc
.
mX
.
AdjustDisplacement
(
displacement
.
x
adjustedOffset
.
x
overscroll
.
x
)
;
mApzc
.
mY
.
AdjustDisplacement
(
displacement
.
y
adjustedOffset
.
y
overscroll
.
y
mForceVerticalOverscroll
)
;
if
(
!
IsZero
(
displacement
)
&
&
IsZero
(
adjustedOffset
)
)
{
return
false
;
}
aFrameMetrics
.
ScrollBy
(
adjustedOffset
/
zoom
)
;
return
!
finished
;
}
}
}
