#
ifndef
mozilla_layers_AndroidAPZ_h_
#
define
mozilla_layers_AndroidAPZ_h_
#
include
"
AsyncPanZoomAnimation
.
h
"
#
include
"
AsyncPanZoomController
.
h
"
#
include
"
mozilla
/
java
/
StackScrollerWrappers
.
h
"
namespace
mozilla
{
namespace
layers
{
class
AndroidSpecificState
:
public
PlatformSpecificStateBase
{
public
:
AndroidSpecificState
(
)
;
virtual
AndroidSpecificState
*
AsAndroidSpecificState
(
)
override
{
return
this
;
}
virtual
AsyncPanZoomAnimation
*
CreateFlingAnimation
(
AsyncPanZoomController
&
aApzc
const
FlingHandoffState
&
aHandoffState
float
aPLPPI
)
override
;
virtual
UniquePtr
<
VelocityTracker
>
CreateVelocityTracker
(
Axis
*
aAxis
)
override
;
static
void
InitializeGlobalState
(
)
;
java
:
:
StackScroller
:
:
GlobalRef
mOverScroller
;
TimeStamp
mLastFling
;
}
;
class
StackScrollerFlingAnimation
:
public
AsyncPanZoomAnimation
{
public
:
StackScrollerFlingAnimation
(
AsyncPanZoomController
&
aApzc
PlatformSpecificStateBase
*
aPlatformSpecificState
const
RefPtr
<
const
OverscrollHandoffChain
>
&
aOverscrollHandoffChain
bool
aFlingIsHandoff
const
RefPtr
<
const
AsyncPanZoomController
>
&
aScrolledApzc
)
;
virtual
bool
DoSample
(
FrameMetrics
&
aFrameMetrics
const
TimeDuration
&
aDelta
)
override
;
private
:
void
DeferHandleFlingOverscroll
(
ParentLayerPoint
&
aVelocity
)
;
bool
CheckBounds
(
Axis
&
aAxis
float
aValue
float
aDirection
float
*
aClamped
)
;
AsyncPanZoomController
&
mApzc
;
java
:
:
StackScroller
:
:
GlobalRef
mOverScroller
;
RefPtr
<
const
OverscrollHandoffChain
>
mOverscrollHandoffChain
;
RefPtr
<
const
AsyncPanZoomController
>
mScrolledApzc
;
bool
mSentBounceX
;
bool
mSentBounceY
;
long
mFlingDuration
;
ParentLayerPoint
mStartOffset
;
ParentLayerPoint
mPreviousOffset
;
ParentLayerPoint
mFlingDirection
;
ParentLayerPoint
mPreviousVelocity
;
}
;
}
}
#
endif
