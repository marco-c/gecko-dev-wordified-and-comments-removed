#
ifndef
mozilla_layers_FocusState_h
#
define
mozilla_layers_FocusState_h
#
include
<
unordered_map
>
#
include
<
unordered_set
>
#
include
"
FrameMetrics
.
h
"
#
include
"
mozilla
/
layers
/
FocusTarget
.
h
"
namespace
mozilla
{
namespace
layers
{
class
FocusState
final
{
public
:
FocusState
(
)
;
uint64_t
LastAPZProcessedEvent
(
)
const
{
return
mLastAPZProcessedEvent
;
}
bool
IsCurrent
(
)
const
;
void
ReceiveFocusChangingEvent
(
)
;
void
Update
(
uint64_t
aRootLayerTreeId
uint64_t
aOriginatingLayersId
const
FocusTarget
&
aTarget
)
;
std
:
:
unordered_set
<
uint64_t
>
GetFocusTargetLayerIds
(
)
const
;
void
RemoveFocusTarget
(
uint64_t
aLayersId
)
;
private
:
std
:
:
unordered_map
<
uint64_t
FocusTarget
>
mFocusTree
;
uint64_t
mLastAPZProcessedEvent
;
uint64_t
mLastContentProcessedEvent
;
bool
mFocusHasKeyEventListeners
;
uint64_t
mFocusLayersId
;
FrameMetrics
:
:
ViewID
mFocusHorizontalTarget
;
FrameMetrics
:
:
ViewID
mFocusVerticalTarget
;
}
;
}
}
#
endif
