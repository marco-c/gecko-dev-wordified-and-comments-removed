#
include
"
mozilla
/
layers
/
APZUtils
.
h
"
#
include
"
mozilla
/
StaticPrefs_apz
.
h
"
#
include
"
mozilla
/
StaticPrefs_layers
.
h
"
namespace
mozilla
{
namespace
layers
{
namespace
apz
{
bool
IsCloseToHorizontal
(
float
aAngle
float
aThreshold
)
{
return
(
aAngle
<
aThreshold
|
|
aAngle
>
(
M_PI
-
aThreshold
)
)
;
}
bool
IsCloseToVertical
(
float
aAngle
float
aThreshold
)
{
return
(
fabs
(
aAngle
-
(
M_PI
/
2
)
)
<
aThreshold
)
;
}
bool
IsStuckAtBottom
(
gfxFloat
aTranslation
const
LayerRectAbsolute
&
aInnerRange
const
LayerRectAbsolute
&
aOuterRange
)
{
return
aOuterRange
.
Y
(
)
<
=
-
aTranslation
&
&
-
aTranslation
<
=
aInnerRange
.
Y
(
)
;
}
bool
IsStuckAtTop
(
gfxFloat
aTranslation
const
LayerRectAbsolute
&
aInnerRange
const
LayerRectAbsolute
&
aOuterRange
)
{
return
aInnerRange
.
YMost
(
)
<
=
-
aTranslation
&
&
-
aTranslation
<
=
aOuterRange
.
YMost
(
)
;
}
ScreenPoint
ComputeFixedMarginsOffset
(
const
ScreenMargin
&
aCompositorFixedLayerMargins
SideBits
aFixedSides
const
ScreenMargin
&
aGeckoFixedLayerMargins
)
{
ScreenPoint
translation
;
ScreenMargin
effectiveMargin
=
aCompositorFixedLayerMargins
-
aGeckoFixedLayerMargins
;
if
(
(
aFixedSides
&
SideBits
:
:
eLeftRight
)
=
=
SideBits
:
:
eLeftRight
)
{
translation
.
x
+
=
(
effectiveMargin
.
left
-
effectiveMargin
.
right
)
/
2
;
}
else
if
(
aFixedSides
&
SideBits
:
:
eRight
)
{
translation
.
x
-
=
effectiveMargin
.
right
;
}
else
if
(
aFixedSides
&
SideBits
:
:
eLeft
)
{
translation
.
x
+
=
effectiveMargin
.
left
;
}
if
(
(
aFixedSides
&
SideBits
:
:
eTopBottom
)
=
=
SideBits
:
:
eTopBottom
)
{
translation
.
y
+
=
(
effectiveMargin
.
top
-
effectiveMargin
.
bottom
)
/
2
;
}
else
if
(
aFixedSides
&
SideBits
:
:
eBottom
)
{
translation
.
y
-
=
effectiveMargin
.
bottom
;
}
else
if
(
aFixedSides
&
SideBits
:
:
eTop
)
{
translation
.
y
+
=
effectiveMargin
.
top
;
}
return
translation
;
}
bool
AboutToCheckerboard
(
const
FrameMetrics
&
aPaintedMetrics
const
FrameMetrics
&
aCompositorMetrics
)
{
CSSRect
painted
=
aPaintedMetrics
.
GetDisplayPort
(
)
+
aPaintedMetrics
.
GetLayoutScrollOffset
(
)
;
painted
.
Inflate
(
CSSMargin
:
:
FromAppUnits
(
nsMargin
(
1
1
1
1
)
)
)
;
CSSRect
visible
=
CSSRect
(
aCompositorMetrics
.
GetVisualScrollOffset
(
)
aCompositorMetrics
.
CalculateBoundedCompositedSizeInCssPixels
(
)
)
;
visible
.
Inflate
(
ScreenSize
(
StaticPrefs
:
:
apz_danger_zone_x
(
)
StaticPrefs
:
:
apz_danger_zone_y
(
)
)
/
aCompositorMetrics
.
DisplayportPixelsPerCSSPixel
(
)
)
;
painted
=
painted
.
Intersect
(
aPaintedMetrics
.
GetScrollableRect
(
)
)
;
visible
=
visible
.
Intersect
(
aPaintedMetrics
.
GetScrollableRect
(
)
)
;
return
!
painted
.
Contains
(
visible
)
;
}
SideBits
GetOverscrollSideBits
(
const
ParentLayerPoint
&
aOverscrollAmount
)
{
SideBits
sides
=
SideBits
:
:
eNone
;
if
(
aOverscrollAmount
.
x
<
0
)
{
sides
|
=
SideBits
:
:
eLeft
;
}
else
if
(
aOverscrollAmount
.
x
>
0
)
{
sides
|
=
SideBits
:
:
eRight
;
}
if
(
aOverscrollAmount
.
y
<
0
)
{
sides
|
=
SideBits
:
:
eTop
;
}
else
if
(
aOverscrollAmount
.
y
>
0
)
{
sides
|
=
SideBits
:
:
eBottom
;
}
return
sides
;
}
}
}
}
