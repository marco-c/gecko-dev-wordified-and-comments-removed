#
include
"
SampledAPZCState
.
h
"
#
include
"
APZUtils
.
h
"
namespace
mozilla
{
namespace
layers
{
SampledAPZCState
:
:
SampledAPZCState
(
)
{
}
SampledAPZCState
:
:
SampledAPZCState
(
const
FrameMetrics
&
aMetrics
)
:
mLayoutViewport
(
aMetrics
.
GetLayoutViewport
(
)
)
mScrollOffset
(
aMetrics
.
GetScrollOffset
(
)
)
mZoom
(
aMetrics
.
GetZoom
(
)
)
{
RemoveFractionalAsyncDelta
(
)
;
}
SampledAPZCState
:
:
SampledAPZCState
(
const
FrameMetrics
&
aMetrics
Maybe
<
CompositionPayload
>
&
&
aPayload
)
:
mLayoutViewport
(
aMetrics
.
GetLayoutViewport
(
)
)
mScrollOffset
(
aMetrics
.
GetScrollOffset
(
)
)
mZoom
(
aMetrics
.
GetZoom
(
)
)
mScrollPayload
(
std
:
:
move
(
aPayload
)
)
{
RemoveFractionalAsyncDelta
(
)
;
}
bool
SampledAPZCState
:
:
operator
=
=
(
const
SampledAPZCState
&
aOther
)
const
{
return
mLayoutViewport
.
IsEqualEdges
(
aOther
.
mLayoutViewport
)
&
&
mScrollOffset
=
=
aOther
.
mScrollOffset
&
&
mZoom
=
=
aOther
.
mZoom
;
}
bool
SampledAPZCState
:
:
operator
!
=
(
const
SampledAPZCState
&
aOther
)
const
{
return
!
(
*
this
=
=
aOther
)
;
}
Maybe
<
CompositionPayload
>
SampledAPZCState
:
:
TakeScrollPayload
(
)
{
return
std
:
:
move
(
mScrollPayload
)
;
}
void
SampledAPZCState
:
:
UpdateScrollProperties
(
const
FrameMetrics
&
aMetrics
)
{
mLayoutViewport
=
aMetrics
.
GetLayoutViewport
(
)
;
mScrollOffset
=
aMetrics
.
GetScrollOffset
(
)
;
}
void
SampledAPZCState
:
:
UpdateZoomProperties
(
const
FrameMetrics
&
aMetrics
)
{
mZoom
=
aMetrics
.
GetZoom
(
)
;
}
void
SampledAPZCState
:
:
ClampScrollOffset
(
const
FrameMetrics
&
aMetrics
)
{
mScrollOffset
=
aMetrics
.
CalculateScrollRange
(
)
.
ClampPoint
(
mScrollOffset
)
;
FrameMetrics
:
:
KeepLayoutViewportEnclosingVisualViewport
(
CSSRect
(
mScrollOffset
aMetrics
.
CalculateCompositedSizeInCssPixels
(
)
)
aMetrics
.
GetScrollableRect
(
)
mLayoutViewport
)
;
}
void
SampledAPZCState
:
:
ZoomBy
(
const
gfxSize
&
aScale
)
{
mZoom
.
xScale
*
=
aScale
.
width
;
mZoom
.
yScale
*
=
aScale
.
height
;
}
void
SampledAPZCState
:
:
RemoveFractionalAsyncDelta
(
)
{
if
(
mLayoutViewport
.
TopLeft
(
)
=
=
mScrollOffset
)
{
return
;
}
ParentLayerPoint
paintedOffset
=
mLayoutViewport
.
TopLeft
(
)
*
mZoom
;
ParentLayerPoint
asyncOffset
=
mScrollOffset
*
mZoom
;
if
(
FuzzyEqualsAdditive
(
paintedOffset
.
x
asyncOffset
.
x
COORDINATE_EPSILON
)
&
&
FuzzyEqualsAdditive
(
paintedOffset
.
y
asyncOffset
.
y
COORDINATE_EPSILON
)
)
{
mScrollOffset
=
mLayoutViewport
.
TopLeft
(
)
;
}
}
}
}
