#
include
"
mozilla
/
layers
/
FocusTarget
.
h
"
#
include
"
mozilla
/
dom
/
EventTarget
.
h
"
#
include
"
mozilla
/
dom
/
TabParent
.
h
"
#
include
"
mozilla
/
EventDispatcher
.
h
"
#
include
"
mozilla
/
layout
/
RenderFrameParent
.
h
"
#
include
"
nsIPresShell
.
h
"
#
include
"
nsLayoutUtils
.
h
"
using
namespace
mozilla
:
:
dom
;
using
namespace
mozilla
:
:
layout
;
namespace
mozilla
{
namespace
layers
{
static
already_AddRefed
<
nsIPresShell
>
GetRetargetEventPresShell
(
nsIPresShell
*
aRootPresShell
)
{
MOZ_ASSERT
(
aRootPresShell
)
;
nsCOMPtr
<
nsPIDOMWindowOuter
>
window
=
aRootPresShell
-
>
GetFocusedDOMWindowInOurWindow
(
)
;
if
(
!
window
)
{
return
nullptr
;
}
nsCOMPtr
<
nsIDocument
>
retargetEventDoc
=
window
-
>
GetExtantDoc
(
)
;
if
(
!
retargetEventDoc
)
{
return
nullptr
;
}
nsCOMPtr
<
nsIPresShell
>
presShell
=
retargetEventDoc
-
>
GetShell
(
)
;
return
presShell
.
forget
(
)
;
}
static
bool
HasListenersForKeyEvents
(
nsIContent
*
aContent
)
{
if
(
!
aContent
)
{
return
false
;
}
WidgetEvent
event
(
true
eVoidEvent
)
;
nsTArray
<
EventTarget
*
>
targets
;
nsresult
rv
=
EventDispatcher
:
:
Dispatch
(
aContent
nullptr
&
event
nullptr
nullptr
nullptr
&
targets
)
;
NS_ENSURE_SUCCESS
(
rv
false
)
;
for
(
size_t
i
=
0
;
i
<
targets
.
Length
(
)
;
i
+
+
)
{
if
(
targets
[
i
]
-
>
HasUntrustedOrNonSystemGroupKeyEventListeners
(
)
)
{
return
true
;
}
}
return
false
;
}
static
bool
IsEditableNode
(
nsINode
*
aNode
)
{
return
aNode
&
&
aNode
-
>
IsEditable
(
)
;
}
FocusTarget
:
:
FocusTarget
(
)
:
mFocusHasKeyEventListeners
(
false
)
mType
(
FocusTarget
:
:
eNone
)
{
}
FocusTarget
:
:
FocusTarget
(
nsIPresShell
*
aRootPresShell
)
:
mFocusHasKeyEventListeners
(
false
)
{
MOZ_ASSERT
(
aRootPresShell
)
;
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
nsCOMPtr
<
nsIPresShell
>
presShell
=
GetRetargetEventPresShell
(
aRootPresShell
)
;
nsCOMPtr
<
nsIContent
>
scrollTarget
=
presShell
-
>
GetContentForScrolling
(
)
;
mFocusHasKeyEventListeners
=
HasListenersForKeyEvents
(
scrollTarget
)
;
if
(
TabParent
*
browserParent
=
TabParent
:
:
GetFrom
(
scrollTarget
)
)
{
RenderFrameParent
*
rfp
=
browserParent
-
>
GetRenderFrame
(
)
;
if
(
rfp
)
{
mType
=
FocusTarget
:
:
eRefLayer
;
mData
.
mRefLayerId
=
rfp
-
>
GetLayersId
(
)
;
return
;
}
mType
=
FocusTarget
:
:
eNone
;
return
;
}
if
(
IsEditableNode
(
scrollTarget
)
|
|
IsEditableNode
(
presShell
-
>
GetDocument
(
)
)
)
{
mType
=
FocusTarget
:
:
eNone
;
return
;
}
nsIScrollableFrame
*
horizontal
=
presShell
-
>
GetScrollableFrameToScrollForContent
(
scrollTarget
.
get
(
)
nsIPresShell
:
:
eHorizontal
)
;
nsIScrollableFrame
*
vertical
=
presShell
-
>
GetScrollableFrameToScrollForContent
(
scrollTarget
.
get
(
)
nsIPresShell
:
:
eVertical
)
;
mType
=
FocusTarget
:
:
eScrollLayer
;
mData
.
mScrollTargets
.
mHorizontal
=
nsLayoutUtils
:
:
FindIDForScrollableFrame
(
horizontal
)
;
mData
.
mScrollTargets
.
mVertical
=
nsLayoutUtils
:
:
FindIDForScrollableFrame
(
vertical
)
;
}
}
}
