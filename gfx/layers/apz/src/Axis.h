#
ifndef
mozilla_layers_Axis_h
#
define
mozilla_layers_Axis_h
#
include
<
sys
/
types
.
h
>
#
include
"
APZUtils
.
h
"
#
include
"
AxisPhysicsMSDModel
.
h
"
#
include
"
mozilla
/
DataMutex
.
h
"
#
include
"
mozilla
/
gfx
/
Types
.
h
"
#
include
"
mozilla
/
TimeStamp
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
Units
.
h
"
namespace
mozilla
{
namespace
layers
{
const
float
EPSILON
=
0
.
0001f
;
bool
FuzzyEqualsCoordinate
(
float
aValue1
float
aValue2
)
;
struct
FrameMetrics
;
class
AsyncPanZoomController
;
class
VelocityTracker
{
public
:
virtual
~
VelocityTracker
(
)
=
default
;
virtual
void
StartTracking
(
ParentLayerCoord
aPos
TimeStamp
aTimestamp
)
=
0
;
virtual
Maybe
<
float
>
AddPosition
(
ParentLayerCoord
aPos
TimeStamp
aTimestamp
)
=
0
;
virtual
Maybe
<
float
>
ComputeVelocity
(
TimeStamp
aTimestamp
)
=
0
;
virtual
void
Clear
(
)
=
0
;
}
;
class
Axis
{
public
:
explicit
Axis
(
AsyncPanZoomController
*
aAsyncPanZoomController
)
;
void
UpdateWithTouchAtDevicePoint
(
ParentLayerCoord
aPos
TimeStamp
aTimestamp
)
;
public
:
void
StartTouch
(
ParentLayerCoord
aPos
TimeStamp
aTimestamp
)
;
void
EndTouch
(
TimeStamp
aTimestamp
)
;
void
CancelGesture
(
)
;
bool
AdjustDisplacement
(
ParentLayerCoord
aDisplacement
float
&
aDisplacementOut
float
&
aOverscrollAmountOut
bool
aForceOverscroll
=
false
)
;
void
OverscrollBy
(
ParentLayerCoord
aOverscroll
)
;
ParentLayerCoord
GetOverscroll
(
)
const
;
void
RestoreOverscroll
(
ParentLayerCoord
aOverscroll
)
;
void
StartOverscrollAnimation
(
float
aVelocity
)
;
bool
SampleOverscrollAnimation
(
const
TimeDuration
&
aDelta
)
;
void
EndOverscrollAnimation
(
)
;
bool
IsOverscrolled
(
)
const
;
void
ClearOverscroll
(
)
;
bool
IsOverscrollAnimationRunning
(
)
const
;
ParentLayerCoord
PanStart
(
)
const
;
ParentLayerCoord
PanDistance
(
)
const
;
ParentLayerCoord
PanDistance
(
ParentLayerCoord
aPos
)
const
;
bool
CanScroll
(
)
const
;
bool
CanScroll
(
ParentLayerCoord
aDelta
)
const
;
bool
CanScrollNow
(
)
const
;
CSSCoord
ClampOriginToScrollableRect
(
CSSCoord
aOrigin
)
const
;
void
SetAxisLocked
(
bool
aAxisLocked
)
{
mAxisLocked
=
aAxisLocked
;
}
float
GetVelocity
(
)
const
;
void
SetVelocity
(
float
aVelocity
)
;
ParentLayerCoord
DisplacementWillOverscrollAmount
(
ParentLayerCoord
aDisplacement
)
const
;
CSSCoord
ScaleWillOverscrollAmount
(
float
aScale
CSSCoord
aFocus
)
const
;
bool
ScaleWillOverscrollBothSides
(
float
aScale
)
const
;
bool
IsAxisLocked
(
)
const
;
ParentLayerCoord
GetOrigin
(
)
const
;
ParentLayerCoord
GetCompositionLength
(
)
const
;
ParentLayerCoord
GetPageStart
(
)
const
;
ParentLayerCoord
GetPageLength
(
)
const
;
ParentLayerCoord
GetCompositionEnd
(
)
const
;
ParentLayerCoord
GetPageEnd
(
)
const
;
ParentLayerCoord
GetScrollRangeEnd
(
)
const
;
ParentLayerCoord
GetPos
(
)
const
{
return
mPos
;
}
bool
OverscrollBehaviorAllowsHandoff
(
)
const
;
bool
OverscrollBehaviorAllowsOverscrollEffect
(
)
const
;
virtual
CSSToParentLayerScale
GetAxisScale
(
const
CSSToParentLayerScale2D
&
aScale
)
const
=
0
;
virtual
ParentLayerCoord
GetPointOffset
(
const
ParentLayerPoint
&
aPoint
)
const
=
0
;
virtual
ParentLayerCoord
GetRectLength
(
const
ParentLayerRect
&
aRect
)
const
=
0
;
virtual
ParentLayerCoord
GetRectOffset
(
const
ParentLayerRect
&
aRect
)
const
=
0
;
virtual
CSSToParentLayerScale
GetScaleForAxis
(
const
CSSToParentLayerScale2D
&
aScale
)
const
=
0
;
virtual
ScreenPoint
MakePoint
(
ScreenCoord
aCoord
)
const
=
0
;
const
void
*
OpaqueApzcPointer
(
)
const
{
return
mAsyncPanZoomController
;
}
virtual
const
char
*
Name
(
)
const
=
0
;
float
ToLocalVelocity
(
float
aVelocityInchesPerMs
)
const
;
protected
:
ParentLayerCoord
mPos
;
ParentLayerCoord
mStartPos
;
mutable
DataMutex
<
float
>
mVelocity
;
bool
mAxisLocked
;
AsyncPanZoomController
*
mAsyncPanZoomController
;
ParentLayerCoord
mOverscroll
;
AxisPhysicsMSDModel
mMSDModel
;
UniquePtr
<
VelocityTracker
>
mVelocityTracker
;
float
DoGetVelocity
(
)
const
;
void
DoSetVelocity
(
float
aVelocity
)
;
const
FrameMetrics
&
GetFrameMetrics
(
)
const
;
const
ScrollMetadata
&
GetScrollMetadata
(
)
const
;
virtual
OverscrollBehavior
GetOverscrollBehavior
(
)
const
=
0
;
ParentLayerCoord
ApplyResistance
(
ParentLayerCoord
aOverscroll
)
const
;
void
StepOverscrollAnimation
(
double
aStepDurationMilliseconds
)
;
}
;
class
AxisX
:
public
Axis
{
public
:
explicit
AxisX
(
AsyncPanZoomController
*
mAsyncPanZoomController
)
;
CSSToParentLayerScale
GetAxisScale
(
const
CSSToParentLayerScale2D
&
aScale
)
const
override
;
ParentLayerCoord
GetPointOffset
(
const
ParentLayerPoint
&
aPoint
)
const
override
;
ParentLayerCoord
GetRectLength
(
const
ParentLayerRect
&
aRect
)
const
override
;
ParentLayerCoord
GetRectOffset
(
const
ParentLayerRect
&
aRect
)
const
override
;
CSSToParentLayerScale
GetScaleForAxis
(
const
CSSToParentLayerScale2D
&
aScale
)
const
override
;
ScreenPoint
MakePoint
(
ScreenCoord
aCoord
)
const
override
;
const
char
*
Name
(
)
const
override
;
bool
CanScrollTo
(
Side
aSide
)
const
;
SideBits
ScrollableDirections
(
)
const
;
private
:
OverscrollBehavior
GetOverscrollBehavior
(
)
const
override
;
}
;
class
AxisY
:
public
Axis
{
public
:
explicit
AxisY
(
AsyncPanZoomController
*
mAsyncPanZoomController
)
;
ParentLayerCoord
GetPointOffset
(
const
ParentLayerPoint
&
aPoint
)
const
override
;
CSSToParentLayerScale
GetAxisScale
(
const
CSSToParentLayerScale2D
&
aScale
)
const
override
;
ParentLayerCoord
GetRectLength
(
const
ParentLayerRect
&
aRect
)
const
override
;
ParentLayerCoord
GetRectOffset
(
const
ParentLayerRect
&
aRect
)
const
override
;
CSSToParentLayerScale
GetScaleForAxis
(
const
CSSToParentLayerScale2D
&
aScale
)
const
override
;
ScreenPoint
MakePoint
(
ScreenCoord
aCoord
)
const
override
;
const
char
*
Name
(
)
const
override
;
bool
CanScrollTo
(
Side
aSide
)
const
;
bool
CanVerticalScrollWithDynamicToolbar
(
)
const
;
SideBits
ScrollableDirections
(
)
const
;
SideBits
ScrollableDirectionsWithDynamicToolbar
(
const
ScreenMargin
&
aFixedLayerMargins
)
const
;
private
:
OverscrollBehavior
GetOverscrollBehavior
(
)
const
override
;
ParentLayerCoord
GetCompositionLengthWithoutDynamicToolbar
(
)
const
;
bool
HasDynamicToolbar
(
)
const
;
}
;
}
}
#
endif
