#
ifndef
mozilla_layers_OverscrollHandoffChain_h
#
define
mozilla_layers_OverscrollHandoffChain_h
#
include
<
vector
>
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
APZUtils
.
h
"
#
include
"
mozilla
/
layers
/
LayersTypes
.
h
"
#
include
"
Units
.
h
"
namespace
mozilla
{
class
InputData
;
namespace
layers
{
class
AsyncPanZoomController
;
class
OverscrollHandoffChain
{
protected
:
~
OverscrollHandoffChain
(
)
;
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
OverscrollHandoffChain
)
void
Add
(
AsyncPanZoomController
*
aApzc
)
;
void
SortByScrollPriority
(
)
;
uint32_t
Length
(
)
const
{
return
mChain
.
size
(
)
;
}
const
RefPtr
<
AsyncPanZoomController
>
&
GetApzcAtIndex
(
uint32_t
aIndex
)
const
;
uint32_t
IndexOf
(
const
AsyncPanZoomController
*
aApzc
)
const
;
void
FlushRepaints
(
)
const
;
void
CancelAnimations
(
CancelAnimationFlags
aFlags
=
Default
)
const
;
void
ClearOverscroll
(
)
const
;
void
SnapBackOverscrolledApzc
(
const
AsyncPanZoomController
*
aStart
)
const
;
bool
CanBePanned
(
const
AsyncPanZoomController
*
aApzc
)
const
;
bool
CanScrollInDirection
(
const
AsyncPanZoomController
*
aApzc
ScrollDirection
aDirection
)
const
;
bool
HasOverscrolledApzc
(
)
const
;
bool
HasFastFlungApzc
(
)
const
;
RefPtr
<
AsyncPanZoomController
>
FindFirstScrollable
(
const
InputData
&
aInput
ScrollDirections
*
aOutAllowedScrollDirections
)
const
;
std
:
:
tuple
<
bool
const
AsyncPanZoomController
*
>
ScrollingDownWillMoveDynamicToolbar
(
const
AsyncPanZoomController
*
aApzc
)
const
;
private
:
std
:
:
vector
<
RefPtr
<
AsyncPanZoomController
>
>
mChain
;
typedef
void
(
AsyncPanZoomController
:
:
*
APZCMethod
)
(
)
;
typedef
bool
(
AsyncPanZoomController
:
:
*
APZCPredicate
)
(
)
const
;
void
ForEachApzc
(
APZCMethod
aMethod
)
const
;
bool
AnyApzc
(
APZCPredicate
aPredicate
)
const
;
}
;
struct
OverscrollHandoffState
{
OverscrollHandoffState
(
const
OverscrollHandoffChain
&
aChain
const
ScreenPoint
&
aPanDistance
ScrollSource
aScrollSource
)
:
mChain
(
aChain
)
mChainIndex
(
0
)
mPanDistance
(
aPanDistance
)
mScrollSource
(
aScrollSource
)
{
}
const
OverscrollHandoffChain
&
mChain
;
uint32_t
mChainIndex
;
const
ScreenPoint
mPanDistance
;
ScrollSource
mScrollSource
;
}
;
struct
FlingHandoffState
{
ParentLayerPoint
mVelocity
;
RefPtr
<
const
OverscrollHandoffChain
>
mChain
;
Maybe
<
TimeDuration
>
mTouchStartRestingTime
;
ParentLayerCoord
mMinPanVelocity
;
bool
mIsHandoff
;
RefPtr
<
const
AsyncPanZoomController
>
mScrolledApzc
;
}
;
}
}
#
endif
