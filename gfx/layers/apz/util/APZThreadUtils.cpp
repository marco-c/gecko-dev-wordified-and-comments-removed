#
include
"
mozilla
/
layers
/
APZThreadUtils
.
h
"
#
include
"
mozilla
/
layers
/
Compositor
.
h
"
#
ifdef
MOZ_ANDROID_APZ
#
include
"
AndroidBridge
.
h
"
#
endif
namespace
mozilla
{
namespace
layers
{
static
bool
sThreadAssertionsEnabled
=
true
;
static
MessageLoop
*
sControllerThread
;
void
APZThreadUtils
:
:
SetThreadAssertionsEnabled
(
bool
aEnabled
)
{
sThreadAssertionsEnabled
=
aEnabled
;
}
bool
APZThreadUtils
:
:
GetThreadAssertionsEnabled
(
)
{
return
sThreadAssertionsEnabled
;
}
void
APZThreadUtils
:
:
SetControllerThread
(
MessageLoop
*
aLoop
)
{
MOZ_ASSERT
(
!
sControllerThread
|
|
!
aLoop
|
|
sControllerThread
=
=
aLoop
)
;
sControllerThread
=
aLoop
;
}
void
APZThreadUtils
:
:
AssertOnControllerThread
(
)
{
if
(
!
GetThreadAssertionsEnabled
(
)
)
{
return
;
}
MOZ_ASSERT
(
sControllerThread
=
=
MessageLoop
:
:
current
(
)
)
;
}
void
APZThreadUtils
:
:
AssertOnCompositorThread
(
)
{
if
(
GetThreadAssertionsEnabled
(
)
)
{
Compositor
:
:
AssertOnCompositorThread
(
)
;
}
}
void
APZThreadUtils
:
:
RunOnControllerThread
(
already_AddRefed
<
Runnable
>
aTask
)
{
RefPtr
<
Runnable
>
task
=
aTask
;
#
ifdef
MOZ_ANDROID_APZ
if
(
AndroidBridge
:
:
IsJavaUiThread
(
)
)
{
task
-
>
Run
(
)
;
}
else
{
AndroidBridge
:
:
Bridge
(
)
-
>
PostTaskToUiThread
(
task
.
forget
(
)
0
)
;
}
#
else
if
(
!
sControllerThread
)
{
NS_WARNING
(
"
Dropping
task
posted
to
controller
thread
"
)
;
return
;
}
if
(
sControllerThread
=
=
MessageLoop
:
:
current
(
)
)
{
task
-
>
Run
(
)
;
}
else
{
sControllerThread
-
>
PostTask
(
task
.
forget
(
)
)
;
}
#
endif
}
void
APZThreadUtils
:
:
RunDelayedTaskOnCurrentThread
(
already_AddRefed
<
Runnable
>
aTask
const
TimeDuration
&
aDelay
)
{
if
(
MessageLoop
*
messageLoop
=
MessageLoop
:
:
current
(
)
)
{
messageLoop
-
>
PostDelayedTask
(
Move
(
aTask
)
aDelay
.
ToMilliseconds
(
)
)
;
}
else
{
#
ifdef
MOZ_ANDROID_APZ
AndroidBridge
:
:
Bridge
(
)
-
>
PostTaskToUiThread
(
Move
(
aTask
)
aDelay
.
ToMilliseconds
(
)
)
;
#
else
MOZ_RELEASE_ASSERT
(
false
"
This
non
-
Fennec
platform
should
have
a
MessageLoop
:
:
current
(
)
"
)
;
#
endif
}
}
bool
APZThreadUtils
:
:
IsControllerThread
(
)
{
#
ifdef
MOZ_ANDROID_APZ
return
AndroidBridge
:
:
IsJavaUiThread
(
)
;
#
else
return
sControllerThread
=
=
MessageLoop
:
:
current
(
)
;
#
endif
}
NS_IMPL_ISUPPORTS
(
GenericTimerCallbackBase
nsITimerCallback
)
}
}
