#
include
"
APZTaskRunnable
.
h
"
#
include
"
mozilla
/
PresShell
.
h
"
#
include
"
nsRefreshDriver
.
h
"
namespace
mozilla
:
:
layers
{
NS_IMETHODIMP
APZTaskRunnable
:
:
Run
(
)
{
if
(
!
mController
)
{
mRegisteredPresShellId
=
0
;
return
NS_OK
;
}
const
bool
needsFlushCompleteNotification
=
mNeedsFlushCompleteNotification
;
RepaintRequests
requests
=
std
:
:
move
(
mPendingRepaintRequests
)
;
mNeedsFlushCompleteNotification
=
false
;
mRegisteredPresShellId
=
0
;
for
(
const
auto
&
[
viewId
request
]
:
requests
)
{
(
void
)
viewId
;
mController
-
>
RequestContentRepaint
(
request
)
;
if
(
!
mController
)
{
return
NS_OK
;
}
}
if
(
needsFlushCompleteNotification
)
{
RefPtr
<
GeckoContentController
>
controller
=
mController
;
controller
-
>
NotifyFlushComplete
(
)
;
}
return
NS_OK
;
}
void
APZTaskRunnable
:
:
QueueRequest
(
const
RepaintRequest
&
aRequest
)
{
if
(
IsTestControllingRefreshesEnabled
(
)
)
{
Run
(
)
;
if
(
mController
)
{
mController
-
>
RequestContentRepaint
(
aRequest
)
;
}
return
;
}
EnsureRegisterAsEarlyRunner
(
)
;
mPendingRepaintRequests
[
aRequest
.
GetScrollId
(
)
]
=
aRequest
;
}
void
APZTaskRunnable
:
:
QueueFlushCompleteNotification
(
)
{
if
(
IsTestControllingRefreshesEnabled
(
)
)
{
Run
(
)
;
if
(
mController
)
{
RefPtr
<
GeckoContentController
>
controller
=
mController
;
controller
-
>
NotifyFlushComplete
(
)
;
}
return
;
}
EnsureRegisterAsEarlyRunner
(
)
;
mNeedsFlushCompleteNotification
=
true
;
}
bool
APZTaskRunnable
:
:
IsRegistereddWithCurrentPresShell
(
)
const
{
MOZ_ASSERT
(
mController
)
;
uint32_t
current
=
0
;
if
(
PresShell
*
presShell
=
mController
-
>
GetTopLevelPresShell
(
)
)
{
current
=
presShell
-
>
GetPresShellId
(
)
;
}
return
mRegisteredPresShellId
=
=
current
;
}
void
APZTaskRunnable
:
:
EnsureRegisterAsEarlyRunner
(
)
{
if
(
IsRegistereddWithCurrentPresShell
(
)
)
{
return
;
}
if
(
mRegisteredPresShellId
)
{
mPendingRepaintRequests
.
clear
(
)
;
mNeedsFlushCompleteNotification
=
false
;
}
if
(
PresShell
*
presShell
=
mController
-
>
GetTopLevelPresShell
(
)
)
{
if
(
nsRefreshDriver
*
driver
=
presShell
-
>
GetRefreshDriver
(
)
)
{
driver
-
>
AddEarlyRunner
(
this
)
;
mRegisteredPresShellId
=
presShell
-
>
GetPresShellId
(
)
;
}
}
}
bool
APZTaskRunnable
:
:
IsTestControllingRefreshesEnabled
(
)
const
{
if
(
!
mController
)
{
return
false
;
}
if
(
PresShell
*
presShell
=
mController
-
>
GetTopLevelPresShell
(
)
)
{
if
(
nsRefreshDriver
*
driver
=
presShell
-
>
GetRefreshDriver
(
)
)
{
return
driver
-
>
IsTestControllingRefreshesEnabled
(
)
;
}
}
return
false
;
}
}
