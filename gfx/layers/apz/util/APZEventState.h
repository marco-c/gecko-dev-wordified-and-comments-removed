#
ifndef
mozilla_layers_APZEventState_h
#
define
mozilla_layers_APZEventState_h
#
include
<
stdint
.
h
>
#
include
"
Units
.
h
"
#
include
"
mozilla
/
EventForwards
.
h
"
#
include
"
mozilla
/
layers
/
GeckoContentController
.
h
"
#
include
"
mozilla
/
layers
/
ScrollableLayerGuid
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsIWeakReferenceUtils
.
h
"
#
include
<
functional
>
template
<
class
>
class
nsCOMPtr
;
class
nsIContent
;
class
nsIDocument
;
class
nsIPresShell
;
class
nsIWidget
;
namespace
mozilla
{
namespace
layers
{
class
ActiveElementManager
;
typedef
std
:
:
function
<
void
(
const
ScrollableLayerGuid
&
uint64_t
bool
)
>
ContentReceivedInputBlockCallback
;
class
APZEventState
{
typedef
GeckoContentController
:
:
APZStateChange
APZStateChange
;
typedef
ScrollableLayerGuid
:
:
ViewID
ViewID
;
public
:
APZEventState
(
nsIWidget
*
aWidget
ContentReceivedInputBlockCallback
&
&
aCallback
)
;
NS_INLINE_DECL_REFCOUNTING
(
APZEventState
)
;
void
ProcessSingleTap
(
const
CSSPoint
&
aPoint
const
CSSToLayoutDeviceScale
&
aScale
Modifiers
aModifiers
const
ScrollableLayerGuid
&
aGuid
int32_t
aClickCount
)
;
MOZ_CAN_RUN_SCRIPT
void
ProcessLongTap
(
const
nsCOMPtr
<
nsIPresShell
>
&
aUtils
const
CSSPoint
&
aPoint
const
CSSToLayoutDeviceScale
&
aScale
Modifiers
aModifiers
const
ScrollableLayerGuid
&
aGuid
uint64_t
aInputBlockId
)
;
MOZ_CAN_RUN_SCRIPT
void
ProcessLongTapUp
(
const
nsCOMPtr
<
nsIPresShell
>
&
aPresShell
const
CSSPoint
&
aPoint
const
CSSToLayoutDeviceScale
&
aScale
Modifiers
aModifiers
)
;
void
ProcessTouchEvent
(
const
WidgetTouchEvent
&
aEvent
const
ScrollableLayerGuid
&
aGuid
uint64_t
aInputBlockId
nsEventStatus
aApzResponse
nsEventStatus
aContentResponse
)
;
void
ProcessWheelEvent
(
const
WidgetWheelEvent
&
aEvent
const
ScrollableLayerGuid
&
aGuid
uint64_t
aInputBlockId
)
;
void
ProcessMouseEvent
(
const
WidgetMouseEvent
&
aEvent
const
ScrollableLayerGuid
&
aGuid
uint64_t
aInputBlockId
)
;
void
ProcessAPZStateChange
(
ViewID
aViewId
APZStateChange
aChange
int
aArg
)
;
void
ProcessClusterHit
(
)
;
private
:
~
APZEventState
(
)
;
bool
SendPendingTouchPreventedResponse
(
bool
aPreventDefault
)
;
MOZ_CAN_RUN_SCRIPT
bool
FireContextmenuEvents
(
const
nsCOMPtr
<
nsIPresShell
>
&
aPresShell
const
CSSPoint
&
aPoint
const
CSSToLayoutDeviceScale
&
aScale
Modifiers
aModifiers
const
nsCOMPtr
<
nsIWidget
>
&
aWidget
)
;
already_AddRefed
<
nsIWidget
>
GetWidget
(
)
const
;
already_AddRefed
<
nsIContent
>
GetTouchRollup
(
)
const
;
private
:
nsWeakPtr
mWidget
;
RefPtr
<
ActiveElementManager
>
mActiveElementManager
;
ContentReceivedInputBlockCallback
mContentReceivedInputBlockCallback
;
bool
mPendingTouchPreventedResponse
;
ScrollableLayerGuid
mPendingTouchPreventedGuid
;
uint64_t
mPendingTouchPreventedBlockId
;
bool
mEndTouchIsClick
;
bool
mTouchEndCancelled
;
int32_t
mLastTouchIdentifier
;
nsWeakPtr
mTouchRollup
;
}
;
}
}
#
endif
