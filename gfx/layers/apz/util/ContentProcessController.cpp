#
include
"
ContentProcessController
.
h
"
#
include
"
mozilla
/
PresShell
.
h
"
#
include
"
mozilla
/
dom
/
BrowserChild
.
h
"
#
include
"
mozilla
/
layers
/
APZCCallbackHelper
.
h
"
#
include
"
mozilla
/
layers
/
APZChild
.
h
"
#
include
"
nsIContentInlines
.
h
"
#
include
"
InputData
.
h
"
namespace
mozilla
{
namespace
layers
{
ContentProcessController
:
:
ContentProcessController
(
const
RefPtr
<
dom
:
:
BrowserChild
>
&
aBrowser
)
:
mBrowser
(
aBrowser
)
{
MOZ_ASSERT
(
mBrowser
)
;
}
void
ContentProcessController
:
:
NotifyLayerTransforms
(
nsTArray
<
MatrixMessage
>
&
&
aTransforms
)
{
MOZ_ASSERT
(
false
)
;
}
void
ContentProcessController
:
:
RequestContentRepaint
(
const
RepaintRequest
&
aRequest
)
{
if
(
mBrowser
)
{
mBrowser
-
>
UpdateFrame
(
aRequest
)
;
}
}
void
ContentProcessController
:
:
HandleTap
(
TapType
aType
const
LayoutDevicePoint
&
aPoint
Modifiers
aModifiers
const
ScrollableLayerGuid
&
aGuid
uint64_t
aInputBlockId
)
{
MOZ_ASSERT
(
false
)
;
}
void
ContentProcessController
:
:
NotifyPinchGesture
(
PinchGestureInput
:
:
PinchGestureType
aType
const
ScrollableLayerGuid
&
aGuid
const
LayoutDevicePoint
&
aFocusPoint
LayoutDeviceCoord
aSpanChange
Modifiers
aModifiers
)
{
MOZ_ASSERT_UNREACHABLE
(
"
Unexpected
message
to
content
process
"
)
;
}
void
ContentProcessController
:
:
NotifyAPZStateChange
(
const
ScrollableLayerGuid
&
aGuid
APZStateChange
aChange
int
aArg
)
{
if
(
mBrowser
)
{
mBrowser
-
>
NotifyAPZStateChange
(
aGuid
.
mScrollId
aChange
aArg
)
;
}
}
void
ContentProcessController
:
:
NotifyMozMouseScrollEvent
(
const
ScrollableLayerGuid
:
:
ViewID
&
aScrollId
const
nsString
&
aEvent
)
{
if
(
mBrowser
)
{
APZCCallbackHelper
:
:
NotifyMozMouseScrollEvent
(
aScrollId
aEvent
)
;
}
}
void
ContentProcessController
:
:
NotifyFlushComplete
(
)
{
if
(
mBrowser
)
{
RefPtr
<
PresShell
>
presShell
=
mBrowser
-
>
GetTopLevelPresShell
(
)
;
APZCCallbackHelper
:
:
NotifyFlushComplete
(
presShell
)
;
}
}
void
ContentProcessController
:
:
NotifyAsyncScrollbarDragInitiated
(
uint64_t
aDragBlockId
const
ScrollableLayerGuid
:
:
ViewID
&
aScrollId
ScrollDirection
aDirection
)
{
APZCCallbackHelper
:
:
NotifyAsyncScrollbarDragInitiated
(
aDragBlockId
aScrollId
aDirection
)
;
}
void
ContentProcessController
:
:
NotifyAsyncScrollbarDragRejected
(
const
ScrollableLayerGuid
:
:
ViewID
&
aScrollId
)
{
APZCCallbackHelper
:
:
NotifyAsyncScrollbarDragRejected
(
aScrollId
)
;
}
void
ContentProcessController
:
:
NotifyAsyncAutoscrollRejected
(
const
ScrollableLayerGuid
:
:
ViewID
&
aScrollId
)
{
APZCCallbackHelper
:
:
NotifyAsyncAutoscrollRejected
(
aScrollId
)
;
}
void
ContentProcessController
:
:
CancelAutoscroll
(
const
ScrollableLayerGuid
&
aGuid
)
{
MOZ_ASSERT_UNREACHABLE
(
"
Unexpected
message
to
content
process
"
)
;
}
bool
ContentProcessController
:
:
IsRepaintThread
(
)
{
return
NS_IsMainThread
(
)
;
}
void
ContentProcessController
:
:
DispatchToRepaintThread
(
already_AddRefed
<
Runnable
>
aTask
)
{
NS_DispatchToMainThread
(
std
:
:
move
(
aTask
)
)
;
}
PresShell
*
ContentProcessController
:
:
GetTopLevelPresShell
(
)
const
{
if
(
!
mBrowser
)
{
return
nullptr
;
}
return
mBrowser
-
>
GetTopLevelPresShell
(
)
;
}
}
}
