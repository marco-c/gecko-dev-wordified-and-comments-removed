#
ifndef
mozilla_layers_NativeLayerRootRemoteMacParent_h
#
define
mozilla_layers_NativeLayerRootRemoteMacParent_h
#
include
"
mozilla
/
layers
/
NativeLayerCA
.
h
"
#
include
"
mozilla
/
layers
/
NativeLayerRemoteParent
.
h
"
namespace
mozilla
{
namespace
layers
{
class
NativeLayerRootRemoteMacParent
final
:
public
NativeLayerRemoteParent
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
NativeLayerRootRemoteMacParent
override
)
explicit
NativeLayerRootRemoteMacParent
(
RefPtr
<
NativeLayerRootCA
>
aRealNativeLayerRoot
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvCommitNativeLayerCommands
(
nsTArray
<
NativeLayerCommand
>
&
&
aCommands
)
override
;
protected
:
~
NativeLayerRootRemoteMacParent
(
)
=
default
;
void
HandleCreateLayer
(
uint64_t
aID
IntSize
aSize
bool
aOpaque
)
;
void
HandleCreateLayerForExternalTexture
(
uint64_t
aID
bool
aOpaque
)
;
void
HandleCreateLayerForColor
(
uint64_t
aID
DeviceColor
aColor
)
;
void
HandleLayerDestroyed
(
uint64_t
aID
)
;
void
HandleSetLayers
(
const
nsTArray
<
uint64_t
>
&
aIDs
)
;
void
HandleLayerInfo
(
uint64_t
aID
uint32_t
aSurfaceID
bool
aIsDRM
bool
aIsHDR
IntPoint
aPosition
IntSize
aSize
IntRect
aDisplayRect
Maybe
<
IntRect
>
aClipRect
Maybe
<
RoundedRect
>
aRoundedClipRect
Matrix4x4
aTransform
int8_t
aSamplingFilter
bool
aSurfaceIsFlipped
)
;
RefPtr
<
NativeLayerRootCA
>
mRealNativeLayerRoot
;
nsTHashMap
<
uint64_t
RefPtr
<
NativeLayer
>
>
mKnownLayers
;
}
;
}
}
#
endif
