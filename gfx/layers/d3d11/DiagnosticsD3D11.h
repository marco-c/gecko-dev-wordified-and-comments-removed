#
ifndef
mozilla_gfx_layers_d3d11_DiagnosticsD3D11_h
#
define
mozilla_gfx_layers_d3d11_DiagnosticsD3D11_h
#
include
<
stdint
.
h
>
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
<
d3d11
.
h
>
namespace
mozilla
{
namespace
layers
{
struct
GPUStats
;
class
DiagnosticsD3D11
{
public
:
DiagnosticsD3D11
(
ID3D11Device
*
aDevice
ID3D11DeviceContext
*
aContext
)
;
void
Start
(
uint32_t
aPixelsPerFrame
)
;
void
End
(
)
;
void
Cancel
(
)
;
void
Query
(
GPUStats
*
aStats
)
;
private
:
RefPtr
<
ID3D11Device
>
mDevice
;
RefPtr
<
ID3D11DeviceContext
>
mContext
;
struct
FrameQueries
{
FrameQueries
(
)
:
pixelsPerFrame
(
0
)
{
}
RefPtr
<
ID3D11Query
>
stats
;
uint32_t
pixelsPerFrame
;
}
;
FrameQueries
mPrevFrame
;
FrameQueries
mCurrentFrame
;
}
;
}
}
#
endif
