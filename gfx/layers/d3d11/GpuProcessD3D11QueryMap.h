#
ifndef
MOZILLA_GFX_GpuProcessD3D11QueryMap_H
#
define
MOZILLA_GFX_GpuProcessD3D11QueryMap_H
#
include
<
d3d11
.
h
>
#
include
<
unordered_map
>
#
include
"
mozilla
/
gfx
/
2D
.
h
"
#
include
"
mozilla
/
layers
/
LayersTypes
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
Monitor
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
namespace
mozilla
{
namespace
layers
{
class
GpuProcessD3D11QueryMap
{
public
:
static
void
Init
(
)
;
static
void
Shutdown
(
)
;
static
GpuProcessD3D11QueryMap
*
Get
(
)
{
return
sInstance
;
}
GpuProcessD3D11QueryMap
(
)
;
~
GpuProcessD3D11QueryMap
(
)
;
void
Register
(
GpuProcessQueryId
aQueryId
ID3D11Query
*
aQuery
)
;
void
Unregister
(
GpuProcessQueryId
aQueryId
)
;
RefPtr
<
ID3D11Query
>
GetQuery
(
GpuProcessQueryId
aQueryId
)
;
private
:
mutable
Monitor
mMonitor
MOZ_UNANNOTATED
;
std
:
:
unordered_map
<
GpuProcessQueryId
RefPtr
<
ID3D11Query
>
GpuProcessQueryId
:
:
HashFn
>
mD3D11QueriesById
;
static
StaticAutoPtr
<
GpuProcessD3D11QueryMap
>
sInstance
;
}
;
}
}
#
endif
