#
include
"
WebRenderTextLayer
.
h
"
#
include
"
gfxPrefs
.
h
"
#
include
"
LayersLogging
.
h
"
#
include
"
mozilla
/
webrender
/
WebRenderTypes
.
h
"
#
include
"
mozilla
/
layers
/
WebRenderBridgeChild
.
h
"
#
include
"
mozilla
/
gfx
/
2D
.
h
"
namespace
mozilla
{
namespace
layers
{
using
namespace
mozilla
:
:
gfx
;
void
WebRenderTextLayer
:
:
RenderLayer
(
)
{
if
(
mBounds
.
IsEmpty
(
)
)
{
return
;
}
gfx
:
:
Rect
rect
=
RelativeToParent
(
GetTransform
(
)
.
TransformBounds
(
IntRectToRect
(
mBounds
)
)
)
;
gfx
:
:
Rect
clip
;
if
(
GetClipRect
(
)
.
isSome
(
)
)
{
clip
=
RelativeToParent
(
IntRectToRect
(
GetClipRect
(
)
.
ref
(
)
.
ToUnknownRect
(
)
)
)
;
}
else
{
clip
=
rect
;
}
if
(
gfxPrefs
:
:
LayersDump
(
)
)
{
printf_stderr
(
"
TextLayer
%
p
using
rect
=
%
s
clip
=
%
s
\
n
"
this
-
>
GetLayer
(
)
Stringify
(
rect
)
.
c_str
(
)
Stringify
(
clip
)
.
c_str
(
)
)
;
}
nsTArray
<
WebRenderCommand
>
commands
;
mGlyphHelper
.
BuildWebRenderCommands
(
commands
mGlyphs
mFont
GetOffsetToParent
(
)
rect
clip
)
;
WrBridge
(
)
-
>
AddWebRenderCommands
(
commands
)
;
}
}
}
