#
ifndef
GFX_WEBRENDERTYPES_H
#
define
GFX_WEBRENDERTYPES_H
#
include
"
mozilla
/
gfx
/
webrender
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
typedef
mozilla
:
:
Maybe
<
WRImageMask
>
MaybeImageMask
;
namespace
mozilla
{
namespace
gfx
{
struct
ByteBuffer
{
ByteBuffer
(
size_t
aLength
uint8_t
*
aData
)
:
mLength
(
aLength
)
mData
(
aData
)
mOwned
(
false
)
{
}
ByteBuffer
(
)
:
mLength
(
0
)
mData
(
nullptr
)
mOwned
(
false
)
{
}
bool
Allocate
(
size_t
aLength
)
{
MOZ_ASSERT
(
mData
=
=
nullptr
)
;
mData
=
(
uint8_t
*
)
malloc
(
aLength
)
;
if
(
!
mData
)
{
return
false
;
}
mLength
=
aLength
;
mOwned
=
true
;
return
true
;
}
~
ByteBuffer
(
)
{
if
(
mData
&
&
mOwned
)
{
free
(
mData
)
;
}
}
bool
operator
=
=
(
const
ByteBuffer
&
other
)
const
{
return
mLength
=
=
other
.
mLength
&
&
!
(
memcmp
(
mData
other
.
mData
mLength
)
)
;
}
size_t
mLength
;
uint8_t
*
mData
;
bool
mOwned
;
}
;
struct
WindowId
{
explicit
WindowId
(
uint64_t
aHandle
)
:
mHandle
(
aHandle
)
{
}
bool
operator
<
(
const
WindowId
&
aOther
)
const
{
return
mHandle
<
aOther
.
mHandle
;
}
uint64_t
mHandle
;
}
;
}
}
#
endif
