#
ifndef
GFX_WEBRENDERCONTAINERLAYER_H
#
define
GFX_WEBRENDERCONTAINERLAYER_H
#
include
"
Layers
.
h
"
#
include
"
WebRenderLayerManager
.
h
"
namespace
mozilla
{
namespace
layers
{
class
WebRenderContainerLayer
:
public
WebRenderLayer
public
ContainerLayer
{
public
:
explicit
WebRenderContainerLayer
(
WebRenderLayerManager
*
aManager
)
:
ContainerLayer
(
aManager
static_cast
<
WebRenderLayer
*
>
(
this
)
)
{
MOZ_COUNT_CTOR
(
WebRenderContainerLayer
)
;
}
protected
:
virtual
~
WebRenderContainerLayer
(
)
{
while
(
mFirstChild
)
{
ContainerLayer
:
:
RemoveChild
(
mFirstChild
)
;
}
MOZ_COUNT_DTOR
(
WebRenderContainerLayer
)
;
}
public
:
Layer
*
GetLayer
(
)
override
{
return
this
;
}
void
RenderLayer
(
)
override
;
virtual
void
ComputeEffectiveTransforms
(
const
gfx
:
:
Matrix4x4
&
aTransformToSurface
)
override
{
DefaultComputeEffectiveTransforms
(
aTransformToSurface
)
;
}
}
;
class
WebRenderRefLayer
:
public
WebRenderLayer
public
RefLayer
{
public
:
explicit
WebRenderRefLayer
(
WebRenderLayerManager
*
aManager
)
:
RefLayer
(
aManager
static_cast
<
WebRenderLayer
*
>
(
this
)
)
{
MOZ_COUNT_CTOR
(
WebRenderRefLayer
)
;
}
protected
:
virtual
~
WebRenderRefLayer
(
)
{
MOZ_COUNT_DTOR
(
WebRenderRefLayer
)
;
}
public
:
Layer
*
GetLayer
(
)
override
{
return
this
;
}
void
RenderLayer
(
)
override
;
virtual
void
ComputeEffectiveTransforms
(
const
gfx
:
:
Matrix4x4
&
aTransformToSurface
)
override
{
DefaultComputeEffectiveTransforms
(
aTransformToSurface
)
;
}
}
;
}
}
#
endif
