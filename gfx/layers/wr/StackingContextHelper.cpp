#
include
"
mozilla
/
layers
/
StackingContextHelper
.
h
"
#
include
"
UnitTransforms
.
h
"
#
include
"
nsDisplayList
.
h
"
namespace
mozilla
{
namespace
layers
{
StackingContextHelper
:
:
StackingContextHelper
(
)
:
mBuilder
(
nullptr
)
mScale
(
1
.
0f
1
.
0f
)
{
}
StackingContextHelper
:
:
StackingContextHelper
(
const
StackingContextHelper
&
aParentSC
wr
:
:
DisplayListBuilder
&
aBuilder
const
nsTArray
<
wr
:
:
WrFilterOp
>
&
aFilters
const
gfx
:
:
Matrix4x4
*
aBoundTransform
uint64_t
aAnimationsId
float
*
aOpacityPtr
gfx
:
:
Matrix4x4
*
aTransformPtr
gfx
:
:
Matrix4x4
*
aPerspectivePtr
const
gfx
:
:
CompositionOp
&
aMixBlendMode
bool
aBackfaceVisible
)
:
mBuilder
(
&
aBuilder
)
mScale
(
1
.
0f
1
.
0f
)
{
bool
is2d
=
!
aTransformPtr
|
|
(
aTransformPtr
-
>
Is2D
(
)
&
&
!
aPerspectivePtr
)
;
if
(
aTransformPtr
)
{
mTransform
=
*
aTransformPtr
;
}
gfx
:
:
Matrix
transform2d
;
if
(
aBoundTransform
&
&
aBoundTransform
-
>
CanDraw2D
(
&
transform2d
)
)
{
mScale
=
transform2d
.
ScaleFactors
(
true
)
*
aParentSC
.
mScale
;
}
mBuilder
-
>
PushStackingContext
(
wr
:
:
LayoutRect
(
)
aAnimationsId
aOpacityPtr
aTransformPtr
is2d
?
wr
:
:
TransformStyle
:
:
Flat
:
wr
:
:
TransformStyle
:
:
Preserve3D
aPerspectivePtr
wr
:
:
ToMixBlendMode
(
aMixBlendMode
)
aFilters
aBackfaceVisible
)
;
}
StackingContextHelper
:
:
~
StackingContextHelper
(
)
{
if
(
mBuilder
)
{
mBuilder
-
>
PopStackingContext
(
)
;
}
}
void
StackingContextHelper
:
:
AdjustOrigin
(
const
LayerPoint
&
aDelta
)
{
mOrigin
+
=
aDelta
;
}
wr
:
:
LayoutRect
StackingContextHelper
:
:
ToRelativeLayoutRect
(
const
LayerRect
&
aRect
)
const
{
return
wr
:
:
ToLayoutRect
(
RoundedToInt
(
aRect
-
mOrigin
)
)
;
}
wr
:
:
LayoutRect
StackingContextHelper
:
:
ToRelativeLayoutRect
(
const
LayoutDeviceRect
&
aRect
)
const
{
return
wr
:
:
ToLayoutRect
(
RoundedToInt
(
ViewAs
<
LayerPixel
>
(
aRect
PixelCastJustification
:
:
WebRenderHasUnitResolution
)
-
mOrigin
)
)
;
}
wr
:
:
LayoutPoint
StackingContextHelper
:
:
ToRelativeLayoutPoint
(
const
LayerPoint
&
aPoint
)
const
{
return
wr
:
:
ToLayoutPoint
(
aPoint
-
mOrigin
)
;
}
}
}
