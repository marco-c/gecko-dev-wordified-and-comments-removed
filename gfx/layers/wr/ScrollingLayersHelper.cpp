#
include
"
mozilla
/
layers
/
ScrollingLayersHelper
.
h
"
#
include
"
FrameMetrics
.
h
"
#
include
"
mozilla
/
layers
/
StackingContextHelper
.
h
"
#
include
"
mozilla
/
webrender
/
WebRenderAPI
.
h
"
#
include
"
UnitTransforms
.
h
"
namespace
mozilla
{
namespace
layers
{
ScrollingLayersHelper
:
:
ScrollingLayersHelper
(
nsDisplayItem
*
aItem
wr
:
:
DisplayListBuilder
&
aBuilder
const
StackingContextHelper
&
aStackingContext
WebRenderCommandBuilder
:
:
ClipIdMap
&
aCache
bool
aApzEnabled
)
:
mBuilder
(
&
aBuilder
)
mPushedClipAndScroll
(
false
)
{
int32_t
auPerDevPixel
=
aItem
-
>
Frame
(
)
-
>
PresContext
(
)
-
>
AppUnitsPerDevPixel
(
)
;
if
(
!
aApzEnabled
)
{
DefineAndPushChain
(
aItem
-
>
GetClipChain
(
)
aBuilder
aStackingContext
auPerDevPixel
aCache
)
;
return
;
}
const
ActiveScrolledRoot
*
leafmostASR
=
aItem
-
>
GetActiveScrolledRoot
(
)
;
if
(
aItem
-
>
GetClipChain
(
)
)
{
leafmostASR
=
ActiveScrolledRoot
:
:
PickDescendant
(
leafmostASR
aItem
-
>
GetClipChain
(
)
-
>
mASR
)
;
}
DefineAndPushScrollLayers
(
aItem
leafmostASR
aItem
-
>
GetClipChain
(
)
aBuilder
auPerDevPixel
aStackingContext
aCache
)
;
DefineAndPushChain
(
aItem
-
>
GetClipChain
(
)
aBuilder
aStackingContext
auPerDevPixel
aCache
)
;
FrameMetrics
:
:
ViewID
scrollId
=
aItem
-
>
GetActiveScrolledRoot
(
)
?
nsLayoutUtils
:
:
ViewIDForASR
(
aItem
-
>
GetActiveScrolledRoot
(
)
)
:
FrameMetrics
:
:
NULL_SCROLL_ID
;
if
(
aBuilder
.
TopmostScrollId
(
)
!
=
scrollId
)
{
Maybe
<
wr
:
:
WrClipId
>
clipId
=
mBuilder
-
>
TopmostClipId
(
)
;
mBuilder
-
>
PushClipAndScrollInfo
(
scrollId
clipId
.
ptrOr
(
nullptr
)
)
;
mPushedClipAndScroll
=
true
;
}
}
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ScrollingLayersHelper
:
:
DefineClipChain
(
nsDisplayItem
*
aItem
const
ActiveScrolledRoot
*
aAsr
const
DisplayItemClipChain
*
aChain
int32_t
aAppUnitsPerDevPixel
const
StackingContextHelper
&
aStackingContext
WebRenderCommandBuilder
:
:
ClipIdMap
&
aCache
)
{
MOZ_ASSERT
(
!
aChain
|
|
ActiveScrolledRoot
:
:
PickDescendant
(
aChain
-
>
mASR
aAsr
)
=
=
aAsr
)
;
if
(
aChain
&
&
aChain
-
>
mASR
=
=
aAsr
)
{
return
RecurseAndDefineClip
(
aItem
aAsr
aChain
aAppUnitsPerDevPixel
aStackingContext
aCache
)
;
}
if
(
aAsr
)
{
return
RecurseAndDefineAsr
(
aItem
aAsr
aChain
aAppUnitsPerDevPixel
aStackingContext
aCache
)
;
}
MOZ_ASSERT
(
!
aChain
&
&
!
aAsr
)
;
return
std
:
:
make_pair
(
Nothing
(
)
Nothing
(
)
)
;
}
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ScrollingLayersHelper
:
:
RecurseAndDefineClip
(
nsDisplayItem
*
aItem
const
ActiveScrolledRoot
*
aAsr
const
DisplayItemClipChain
*
aChain
int32_t
aAppUnitsPerDevPixel
const
StackingContextHelper
&
aSc
WebRenderCommandBuilder
:
:
ClipIdMap
&
aCache
)
{
MOZ_ASSERT
(
aChain
)
;
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ids
;
if
(
mBuilder
-
>
HasExtraClip
(
)
)
{
ids
.
second
=
mBuilder
-
>
GetCacheOverride
(
aChain
)
;
}
else
{
auto
it
=
aCache
.
find
(
aChain
)
;
if
(
it
!
=
aCache
.
end
(
)
)
{
ids
.
second
=
Some
(
it
-
>
second
)
;
}
}
if
(
ids
.
second
)
{
if
(
aAsr
)
{
FrameMetrics
:
:
ViewID
scrollId
=
nsLayoutUtils
:
:
ViewIDForASR
(
aAsr
)
;
MOZ_ASSERT
(
mBuilder
-
>
IsScrollLayerDefined
(
scrollId
)
)
;
ids
.
first
=
Some
(
scrollId
)
;
}
return
ids
;
}
auto
ancestorIds
=
DefineClipChain
(
aItem
aAsr
aChain
-
>
mParent
aAppUnitsPerDevPixel
aSc
aCache
)
;
ids
=
ancestorIds
;
if
(
!
aChain
-
>
mClip
.
HasClip
(
)
)
{
return
ids
;
}
if
(
aChain
-
>
mParent
)
{
if
(
mBuilder
-
>
GetCacheOverride
(
aChain
-
>
mParent
)
)
{
ancestorIds
.
first
=
Nothing
(
)
;
}
else
if
(
aChain
-
>
mParent
-
>
mASR
=
=
aAsr
)
{
ancestorIds
.
first
=
Nothing
(
)
;
}
else
{
ancestorIds
.
second
=
Nothing
(
)
;
}
}
MOZ_ASSERT
(
!
(
ancestorIds
.
first
&
&
ancestorIds
.
second
)
)
;
LayoutDeviceRect
clip
=
LayoutDeviceRect
:
:
FromAppUnits
(
aChain
-
>
mClip
.
GetClipRect
(
)
aAppUnitsPerDevPixel
)
;
nsTArray
<
wr
:
:
ComplexClipRegion
>
wrRoundedRects
;
aChain
-
>
mClip
.
ToComplexClipRegions
(
aAppUnitsPerDevPixel
aSc
wrRoundedRects
)
;
wr
:
:
WrClipId
clipId
=
mBuilder
-
>
DefineClip
(
ancestorIds
.
first
ancestorIds
.
second
aSc
.
ToRelativeLayoutRect
(
clip
)
&
wrRoundedRects
)
;
if
(
!
mBuilder
-
>
HasExtraClip
(
)
)
{
aCache
[
aChain
]
=
clipId
;
}
ids
.
second
=
Some
(
clipId
)
;
return
ids
;
}
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ScrollingLayersHelper
:
:
RecurseAndDefineAsr
(
nsDisplayItem
*
aItem
const
ActiveScrolledRoot
*
aAsr
const
DisplayItemClipChain
*
aChain
int32_t
aAppUnitsPerDevPixel
const
StackingContextHelper
&
aSc
WebRenderCommandBuilder
:
:
ClipIdMap
&
aCache
)
{
MOZ_ASSERT
(
aAsr
)
;
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ids
;
FrameMetrics
:
:
ViewID
scrollId
=
nsLayoutUtils
:
:
ViewIDForASR
(
aAsr
)
;
if
(
mBuilder
-
>
IsScrollLayerDefined
(
scrollId
)
)
{
ids
.
first
=
Some
(
scrollId
)
;
if
(
aChain
)
{
if
(
mBuilder
-
>
HasExtraClip
(
)
)
{
ids
.
second
=
mBuilder
-
>
GetCacheOverride
(
aChain
)
;
}
else
{
auto
it
=
aCache
.
find
(
aChain
)
;
MOZ_ASSERT
(
it
!
=
aCache
.
end
(
)
)
;
ids
.
second
=
Some
(
it
-
>
second
)
;
}
}
return
ids
;
}
auto
ancestorIds
=
DefineClipChain
(
aItem
aAsr
-
>
mParent
aChain
aAppUnitsPerDevPixel
aSc
aCache
)
;
ids
=
ancestorIds
;
Maybe
<
ScrollMetadata
>
metadata
=
aAsr
-
>
mScrollableFrame
-
>
ComputeScrollMetadata
(
nullptr
aItem
-
>
ReferenceFrame
(
)
ContainerLayerParameters
(
)
nullptr
)
;
MOZ_ASSERT
(
metadata
)
;
FrameMetrics
&
metrics
=
metadata
-
>
GetMetrics
(
)
;
if
(
!
metrics
.
IsScrollable
(
)
)
{
return
ids
;
}
if
(
ancestorIds
.
first
&
&
ancestorIds
.
second
)
{
MOZ_ASSERT
(
aAsr
-
>
mParent
)
;
MOZ_ASSERT
(
aChain
)
;
if
(
aChain
-
>
mASR
&
&
aChain
-
>
mASR
=
=
aAsr
-
>
mParent
)
{
ancestorIds
.
first
=
Nothing
(
)
;
}
else
{
ancestorIds
.
second
=
Nothing
(
)
;
}
}
MOZ_ASSERT
(
!
(
ancestorIds
.
first
&
&
ancestorIds
.
second
)
)
;
LayoutDeviceRect
contentRect
=
metrics
.
GetExpandedScrollableRect
(
)
*
metrics
.
GetDevPixelsPerCSSPixel
(
)
;
LayoutDeviceRect
clipBounds
=
LayoutDeviceRect
:
:
FromUnknownRect
(
metrics
.
GetCompositionBounds
(
)
.
ToUnknownRect
(
)
)
;
contentRect
.
MoveTo
(
clipBounds
.
TopLeft
(
)
)
;
mBuilder
-
>
DefineScrollLayer
(
scrollId
ancestorIds
.
first
ancestorIds
.
second
aSc
.
ToRelativeLayoutRect
(
contentRect
)
aSc
.
ToRelativeLayoutRect
(
clipBounds
)
)
;
ids
.
first
=
Some
(
scrollId
)
;
return
ids
;
}
void
ScrollingLayersHelper
:
:
DefineAndPushScrollLayers
(
nsDisplayItem
*
aItem
const
ActiveScrolledRoot
*
aAsr
const
DisplayItemClipChain
*
aChain
wr
:
:
DisplayListBuilder
&
aBuilder
int32_t
aAppUnitsPerDevPixel
const
StackingContextHelper
&
aStackingContext
WebRenderCommandBuilder
:
:
ClipIdMap
&
aCache
)
{
if
(
!
aAsr
)
{
return
;
}
FrameMetrics
:
:
ViewID
scrollId
=
nsLayoutUtils
:
:
ViewIDForASR
(
aAsr
)
;
if
(
aBuilder
.
TopmostScrollId
(
)
=
=
scrollId
)
{
return
;
}
const
DisplayItemClipChain
*
asrClippedBy
=
aChain
;
while
(
asrClippedBy
&
&
ActiveScrolledRoot
:
:
PickAncestor
(
asrClippedBy
-
>
mASR
aAsr
)
=
=
aAsr
)
{
asrClippedBy
=
asrClippedBy
-
>
mParent
;
}
DefineAndPushScrollLayers
(
aItem
aAsr
-
>
mParent
asrClippedBy
aBuilder
aAppUnitsPerDevPixel
aStackingContext
aCache
)
;
DefineAndPushChain
(
asrClippedBy
aBuilder
aStackingContext
aAppUnitsPerDevPixel
aCache
)
;
bool
pushed
=
false
;
if
(
mBuilder
-
>
IsScrollLayerDefined
(
scrollId
)
)
{
mBuilder
-
>
PushScrollLayer
(
scrollId
)
;
pushed
=
true
;
}
else
{
Maybe
<
ScrollMetadata
>
metadata
=
aAsr
-
>
mScrollableFrame
-
>
ComputeScrollMetadata
(
nullptr
aItem
-
>
ReferenceFrame
(
)
ContainerLayerParameters
(
)
nullptr
)
;
MOZ_ASSERT
(
metadata
)
;
pushed
=
DefineAndPushScrollLayer
(
metadata
-
>
GetMetrics
(
)
aStackingContext
)
;
}
if
(
pushed
)
{
mPushedClips
.
push_back
(
wr
:
:
ScrollOrClipId
(
scrollId
)
)
;
}
}
void
ScrollingLayersHelper
:
:
DefineAndPushChain
(
const
DisplayItemClipChain
*
aChain
wr
:
:
DisplayListBuilder
&
aBuilder
const
StackingContextHelper
&
aStackingContext
int32_t
aAppUnitsPerDevPixel
WebRenderCommandBuilder
:
:
ClipIdMap
&
aCache
)
{
if
(
!
aChain
)
{
return
;
}
auto
it
=
aCache
.
find
(
aChain
)
;
Maybe
<
wr
:
:
WrClipId
>
clipId
=
(
it
!
=
aCache
.
end
(
)
?
Some
(
it
-
>
second
)
:
Nothing
(
)
)
;
if
(
clipId
&
&
clipId
=
=
aBuilder
.
TopmostClipId
(
)
)
{
return
;
}
DefineAndPushChain
(
aChain
-
>
mParent
aBuilder
aStackingContext
aAppUnitsPerDevPixel
aCache
)
;
if
(
!
aChain
-
>
mClip
.
HasClip
(
)
)
{
return
;
}
if
(
!
clipId
|
|
aBuilder
.
HasExtraClip
(
)
)
{
LayoutDeviceRect
clip
=
LayoutDeviceRect
:
:
FromAppUnits
(
aChain
-
>
mClip
.
GetClipRect
(
)
aAppUnitsPerDevPixel
)
;
nsTArray
<
wr
:
:
ComplexClipRegion
>
wrRoundedRects
;
aChain
-
>
mClip
.
ToComplexClipRegions
(
aAppUnitsPerDevPixel
aStackingContext
wrRoundedRects
)
;
clipId
=
Some
(
aBuilder
.
DefineClip
(
Nothing
(
)
Nothing
(
)
aStackingContext
.
ToRelativeLayoutRect
(
clip
)
&
wrRoundedRects
)
)
;
if
(
!
aBuilder
.
HasExtraClip
(
)
)
{
aCache
[
aChain
]
=
clipId
.
value
(
)
;
}
}
MOZ_ASSERT
(
clipId
)
;
aBuilder
.
PushClip
(
clipId
.
value
(
)
)
;
mPushedClips
.
push_back
(
wr
:
:
ScrollOrClipId
(
clipId
.
value
(
)
)
)
;
}
bool
ScrollingLayersHelper
:
:
DefineAndPushScrollLayer
(
const
FrameMetrics
&
aMetrics
const
StackingContextHelper
&
aStackingContext
)
{
if
(
!
aMetrics
.
IsScrollable
(
)
)
{
return
false
;
}
LayoutDeviceRect
contentRect
=
aMetrics
.
GetExpandedScrollableRect
(
)
*
aMetrics
.
GetDevPixelsPerCSSPixel
(
)
;
LayoutDeviceRect
clipBounds
=
LayoutDeviceRect
:
:
FromUnknownRect
(
aMetrics
.
GetCompositionBounds
(
)
.
ToUnknownRect
(
)
)
;
contentRect
.
MoveTo
(
clipBounds
.
TopLeft
(
)
)
;
mBuilder
-
>
DefineScrollLayer
(
aMetrics
.
GetScrollId
(
)
Nothing
(
)
Nothing
(
)
aStackingContext
.
ToRelativeLayoutRect
(
contentRect
)
aStackingContext
.
ToRelativeLayoutRect
(
clipBounds
)
)
;
mBuilder
-
>
PushScrollLayer
(
aMetrics
.
GetScrollId
(
)
)
;
return
true
;
}
ScrollingLayersHelper
:
:
~
ScrollingLayersHelper
(
)
{
if
(
mPushedClipAndScroll
)
{
mBuilder
-
>
PopClipAndScrollInfo
(
)
;
}
while
(
!
mPushedClips
.
empty
(
)
)
{
wr
:
:
ScrollOrClipId
id
=
mPushedClips
.
back
(
)
;
if
(
id
.
is
<
wr
:
:
WrClipId
>
(
)
)
{
mBuilder
-
>
PopClip
(
)
;
}
else
{
MOZ_ASSERT
(
id
.
is
<
FrameMetrics
:
:
ViewID
>
(
)
)
;
mBuilder
-
>
PopScrollLayer
(
)
;
}
mPushedClips
.
pop_back
(
)
;
}
return
;
}
}
}
