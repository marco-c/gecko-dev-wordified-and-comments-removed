#
include
"
mozilla
/
layers
/
ScrollingLayersHelper
.
h
"
#
include
"
DisplayItemClipChain
.
h
"
#
include
"
FrameMetrics
.
h
"
#
include
"
mozilla
/
layers
/
StackingContextHelper
.
h
"
#
include
"
mozilla
/
layers
/
WebRenderLayerManager
.
h
"
#
include
"
mozilla
/
webrender
/
WebRenderAPI
.
h
"
#
include
"
nsDisplayList
.
h
"
#
include
"
UnitTransforms
.
h
"
#
define
SLH_LOG
(
.
.
.
)
namespace
mozilla
{
namespace
layers
{
ScrollingLayersHelper
:
:
ScrollingLayersHelper
(
)
:
mManager
(
nullptr
)
mBuilder
(
nullptr
)
{
}
void
ScrollingLayersHelper
:
:
BeginBuild
(
WebRenderLayerManager
*
aManager
wr
:
:
DisplayListBuilder
&
aBuilder
)
{
MOZ_ASSERT
(
!
mManager
)
;
mManager
=
aManager
;
MOZ_ASSERT
(
!
mBuilder
)
;
mBuilder
=
&
aBuilder
;
MOZ_ASSERT
(
mCacheStack
.
empty
(
)
)
;
mCacheStack
.
emplace_back
(
)
;
MOZ_ASSERT
(
mScrollParents
.
empty
(
)
)
;
MOZ_ASSERT
(
mItemClipStack
.
empty
(
)
)
;
}
void
ScrollingLayersHelper
:
:
EndBuild
(
)
{
mBuilder
=
nullptr
;
mManager
=
nullptr
;
mCacheStack
.
pop_back
(
)
;
MOZ_ASSERT
(
mCacheStack
.
empty
(
)
)
;
mScrollParents
.
clear
(
)
;
MOZ_ASSERT
(
mItemClipStack
.
empty
(
)
)
;
}
void
ScrollingLayersHelper
:
:
BeginList
(
const
StackingContextHelper
&
aStackingContext
)
{
if
(
aStackingContext
.
IsReferenceFrame
(
)
)
{
mCacheStack
.
emplace_back
(
)
;
}
mItemClipStack
.
emplace_back
(
nullptr
nullptr
)
;
}
void
ScrollingLayersHelper
:
:
EndList
(
const
StackingContextHelper
&
aStackingContext
)
{
MOZ_ASSERT
(
!
mItemClipStack
.
empty
(
)
)
;
mItemClipStack
.
back
(
)
.
Unapply
(
mBuilder
)
;
mItemClipStack
.
pop_back
(
)
;
if
(
aStackingContext
.
IsReferenceFrame
(
)
)
{
mCacheStack
.
pop_back
(
)
;
}
}
void
ScrollingLayersHelper
:
:
BeginItem
(
nsDisplayItem
*
aItem
const
StackingContextHelper
&
aStackingContext
)
{
SLH_LOG
(
"
processing
item
%
p
\
n
"
aItem
)
;
const
DisplayItemClipChain
*
clip
=
aItem
-
>
GetClipChain
(
)
;
ItemClips
clips
(
aItem
-
>
GetActiveScrolledRoot
(
)
clip
)
;
MOZ_ASSERT
(
!
mItemClipStack
.
empty
(
)
)
;
if
(
clips
.
HasSameInputs
(
mItemClipStack
.
back
(
)
)
)
{
SLH_LOG
(
"
early
-
exit
for
%
p
\
n
"
aItem
)
;
return
;
}
mItemClipStack
.
back
(
)
.
Unapply
(
mBuilder
)
;
mItemClipStack
.
pop_back
(
)
;
int32_t
auPerDevPixel
=
aItem
-
>
Frame
(
)
-
>
PresContext
(
)
-
>
AppUnitsPerDevPixel
(
)
;
const
ActiveScrolledRoot
*
leafmostASR
=
aItem
-
>
GetActiveScrolledRoot
(
)
;
if
(
clip
)
{
leafmostASR
=
ActiveScrolledRoot
:
:
PickDescendant
(
leafmostASR
clip
-
>
mASR
)
;
}
auto
ids
=
DefineClipChain
(
aItem
leafmostASR
clip
auPerDevPixel
aStackingContext
)
;
FrameMetrics
:
:
ViewID
leafmostId
=
ids
.
first
.
valueOr
(
FrameMetrics
:
:
NULL_SCROLL_ID
)
;
FrameMetrics
:
:
ViewID
scrollId
=
aItem
-
>
GetActiveScrolledRoot
(
)
?
aItem
-
>
GetActiveScrolledRoot
(
)
-
>
GetViewId
(
)
:
FrameMetrics
:
:
NULL_SCROLL_ID
;
bool
needClipAndScroll
=
(
leafmostId
!
=
scrollId
)
;
if
(
!
needClipAndScroll
&
&
mBuilder
-
>
TopmostScrollId
(
)
=
=
scrollId
&
&
!
mBuilder
-
>
TopmostIsClip
(
)
)
{
if
(
auto
cs
=
EnclosingClipAndScroll
(
)
)
{
MOZ_ASSERT
(
cs
-
>
first
=
=
scrollId
)
;
needClipAndScroll
=
true
;
}
}
if
(
!
needClipAndScroll
&
&
mBuilder
-
>
TopmostScrollId
(
)
!
=
scrollId
)
{
MOZ_ASSERT
(
leafmostId
=
=
scrollId
)
;
clips
.
mScrollId
=
Some
(
scrollId
)
;
}
if
(
ids
.
second
&
&
clip
-
>
mASR
=
=
leafmostASR
)
{
clips
.
mClipId
=
ids
.
second
;
}
if
(
needClipAndScroll
)
{
Maybe
<
wr
:
:
WrClipId
>
clipId
=
clips
.
mClipId
;
if
(
!
clipId
)
{
clipId
=
mBuilder
-
>
TopmostClipId
(
)
;
}
clips
.
mClipAndScroll
=
Some
(
std
:
:
make_pair
(
scrollId
clipId
)
)
;
}
clips
.
Apply
(
mBuilder
)
;
mItemClipStack
.
push_back
(
clips
)
;
SLH_LOG
(
"
done
setup
for
%
p
\
n
"
aItem
)
;
}
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ScrollingLayersHelper
:
:
DefineClipChain
(
nsDisplayItem
*
aItem
const
ActiveScrolledRoot
*
aAsr
const
DisplayItemClipChain
*
aChain
int32_t
aAppUnitsPerDevPixel
const
StackingContextHelper
&
aStackingContext
)
{
MOZ_ASSERT
(
!
aChain
|
|
ActiveScrolledRoot
:
:
PickDescendant
(
aChain
-
>
mASR
aAsr
)
=
=
aAsr
)
;
if
(
aChain
&
&
aChain
-
>
mASR
=
=
aAsr
)
{
return
RecurseAndDefineClip
(
aItem
aAsr
aChain
aAppUnitsPerDevPixel
aStackingContext
)
;
}
if
(
aAsr
)
{
return
RecurseAndDefineAsr
(
aItem
aAsr
aChain
aAppUnitsPerDevPixel
aStackingContext
)
;
}
MOZ_ASSERT
(
!
aChain
&
&
!
aAsr
)
;
return
std
:
:
make_pair
(
Nothing
(
)
Nothing
(
)
)
;
}
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ScrollingLayersHelper
:
:
RecurseAndDefineClip
(
nsDisplayItem
*
aItem
const
ActiveScrolledRoot
*
aAsr
const
DisplayItemClipChain
*
aChain
int32_t
aAppUnitsPerDevPixel
const
StackingContextHelper
&
aSc
)
{
MOZ_ASSERT
(
aChain
)
;
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ids
;
if
(
mBuilder
-
>
HasExtraClip
(
)
)
{
ids
.
second
=
mBuilder
-
>
GetCacheOverride
(
aChain
)
;
}
else
{
const
ClipIdMap
&
cache
=
mCacheStack
.
back
(
)
;
auto
it
=
cache
.
find
(
aChain
)
;
if
(
it
!
=
cache
.
end
(
)
)
{
ids
.
second
=
Some
(
it
-
>
second
)
;
}
}
if
(
ids
.
second
)
{
if
(
aAsr
)
{
FrameMetrics
:
:
ViewID
scrollId
=
aAsr
-
>
GetViewId
(
)
;
MOZ_ASSERT
(
mBuilder
-
>
IsScrollLayerDefined
(
scrollId
)
)
;
ids
.
first
=
Some
(
scrollId
)
;
}
return
ids
;
}
auto
ancestorIds
=
DefineClipChain
(
aItem
aAsr
aChain
-
>
mParent
aAppUnitsPerDevPixel
aSc
)
;
ids
=
ancestorIds
;
if
(
!
aChain
-
>
mClip
.
HasClip
(
)
)
{
return
ids
;
}
if
(
aChain
-
>
mParent
)
{
if
(
mBuilder
-
>
GetCacheOverride
(
aChain
-
>
mParent
)
)
{
ancestorIds
.
first
=
Nothing
(
)
;
}
else
if
(
aChain
-
>
mParent
-
>
mASR
=
=
aAsr
)
{
ancestorIds
.
first
=
Nothing
(
)
;
}
else
{
ancestorIds
.
second
=
Nothing
(
)
;
}
}
else
{
MOZ_ASSERT
(
!
ancestorIds
.
second
)
;
FrameMetrics
:
:
ViewID
scrollId
=
aChain
-
>
mASR
?
aChain
-
>
mASR
-
>
GetViewId
(
)
:
FrameMetrics
:
:
NULL_SCROLL_ID
;
if
(
mBuilder
-
>
TopmostScrollId
(
)
=
=
scrollId
)
{
if
(
mBuilder
-
>
TopmostIsClip
(
)
)
{
ancestorIds
.
first
=
Nothing
(
)
;
ancestorIds
.
second
=
mBuilder
-
>
TopmostClipId
(
)
;
}
else
if
(
auto
cs
=
EnclosingClipAndScroll
(
)
)
{
MOZ_ASSERT
(
cs
-
>
first
=
=
scrollId
)
;
ancestorIds
.
first
=
Nothing
(
)
;
ancestorIds
.
second
=
cs
-
>
second
;
}
}
}
MOZ_ASSERT
(
!
(
ancestorIds
.
first
&
&
ancestorIds
.
second
)
)
;
LayoutDeviceRect
clip
=
LayoutDeviceRect
:
:
FromAppUnits
(
aChain
-
>
mClip
.
GetClipRect
(
)
aAppUnitsPerDevPixel
)
;
nsTArray
<
wr
:
:
ComplexClipRegion
>
wrRoundedRects
;
aChain
-
>
mClip
.
ToComplexClipRegions
(
aAppUnitsPerDevPixel
aSc
wrRoundedRects
)
;
wr
:
:
WrClipId
clipId
=
mBuilder
-
>
DefineClip
(
ancestorIds
.
first
ancestorIds
.
second
aSc
.
ToRelativeLayoutRect
(
clip
)
&
wrRoundedRects
)
;
if
(
!
mBuilder
-
>
HasExtraClip
(
)
)
{
mCacheStack
.
back
(
)
[
aChain
]
=
clipId
;
}
ids
.
second
=
Some
(
clipId
)
;
return
ids
;
}
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ScrollingLayersHelper
:
:
RecurseAndDefineAsr
(
nsDisplayItem
*
aItem
const
ActiveScrolledRoot
*
aAsr
const
DisplayItemClipChain
*
aChain
int32_t
aAppUnitsPerDevPixel
const
StackingContextHelper
&
aSc
)
{
MOZ_ASSERT
(
aAsr
)
;
std
:
:
pair
<
Maybe
<
FrameMetrics
:
:
ViewID
>
Maybe
<
wr
:
:
WrClipId
>
>
ids
;
FrameMetrics
:
:
ViewID
scrollId
=
aAsr
-
>
GetViewId
(
)
;
if
(
mBuilder
-
>
IsScrollLayerDefined
(
scrollId
)
)
{
ids
.
first
=
Some
(
scrollId
)
;
if
(
aChain
)
{
if
(
mBuilder
-
>
HasExtraClip
(
)
)
{
ids
.
second
=
mBuilder
-
>
GetCacheOverride
(
aChain
)
;
}
else
{
const
DisplayItemClipChain
*
canonicalChain
=
aChain
;
auto
it
=
mScrollParents
.
find
(
scrollId
)
;
if
(
it
!
=
mScrollParents
.
end
(
)
)
{
const
DisplayItemClipChain
*
scrollParent
=
it
-
>
second
;
if
(
DisplayItemClipChain
:
:
Equal
(
scrollParent
aChain
)
)
{
canonicalChain
=
scrollParent
;
}
}
const
ClipIdMap
&
cache
=
mCacheStack
.
back
(
)
;
auto
it2
=
cache
.
find
(
canonicalChain
)
;
if
(
it2
=
=
cache
.
end
(
)
)
{
MOZ_ASSERT
(
canonicalChain
=
=
aChain
)
;
}
else
{
ids
.
second
=
Some
(
it2
-
>
second
)
;
}
}
}
return
ids
;
}
auto
ancestorIds
=
DefineClipChain
(
aItem
aAsr
-
>
mParent
aChain
aAppUnitsPerDevPixel
aSc
)
;
ids
=
ancestorIds
;
Maybe
<
ScrollMetadata
>
metadata
=
aAsr
-
>
mScrollableFrame
-
>
ComputeScrollMetadata
(
nullptr
mManager
aItem
-
>
ReferenceFrame
(
)
ContainerLayerParameters
(
)
nullptr
)
;
MOZ_ASSERT
(
metadata
)
;
FrameMetrics
&
metrics
=
metadata
-
>
GetMetrics
(
)
;
if
(
!
metrics
.
IsScrollable
(
)
)
{
return
ids
;
}
if
(
ancestorIds
.
first
&
&
ancestorIds
.
second
)
{
MOZ_ASSERT
(
aAsr
-
>
mParent
)
;
MOZ_ASSERT
(
aChain
)
;
if
(
aChain
-
>
mASR
&
&
aChain
-
>
mASR
=
=
aAsr
-
>
mParent
)
{
ancestorIds
.
first
=
Nothing
(
)
;
}
else
{
ancestorIds
.
second
=
Nothing
(
)
;
}
}
MOZ_ASSERT
(
!
(
ancestorIds
.
first
&
&
ancestorIds
.
second
)
)
;
if
(
ancestorIds
.
second
)
{
MOZ_ASSERT
(
aChain
)
;
mScrollParents
[
scrollId
]
=
aChain
;
}
LayoutDeviceRect
contentRect
=
metrics
.
GetExpandedScrollableRect
(
)
*
metrics
.
GetDevPixelsPerCSSPixel
(
)
;
LayoutDeviceRect
clipBounds
=
LayoutDeviceRect
:
:
FromUnknownRect
(
metrics
.
GetCompositionBounds
(
)
.
ToUnknownRect
(
)
)
;
contentRect
.
MoveTo
(
clipBounds
.
TopLeft
(
)
)
;
mBuilder
-
>
DefineScrollLayer
(
scrollId
ancestorIds
.
first
ancestorIds
.
second
aSc
.
ToRelativeLayoutRect
(
contentRect
)
aSc
.
ToRelativeLayoutRect
(
clipBounds
)
)
;
ids
.
first
=
Some
(
scrollId
)
;
return
ids
;
}
Maybe
<
ScrollingLayersHelper
:
:
ClipAndScroll
>
ScrollingLayersHelper
:
:
EnclosingClipAndScroll
(
)
const
{
for
(
auto
it
=
mItemClipStack
.
rbegin
(
)
;
it
!
=
mItemClipStack
.
rend
(
)
;
it
+
+
)
{
if
(
it
-
>
mClipAndScroll
)
{
return
it
-
>
mClipAndScroll
;
}
if
(
it
-
>
mClipId
|
|
it
-
>
mScrollId
)
{
break
;
}
}
return
Nothing
(
)
;
}
ScrollingLayersHelper
:
:
~
ScrollingLayersHelper
(
)
{
MOZ_ASSERT
(
!
mBuilder
)
;
MOZ_ASSERT
(
mCacheStack
.
empty
(
)
)
;
MOZ_ASSERT
(
mItemClipStack
.
empty
(
)
)
;
}
ScrollingLayersHelper
:
:
ItemClips
:
:
ItemClips
(
const
ActiveScrolledRoot
*
aAsr
const
DisplayItemClipChain
*
aChain
)
:
mAsr
(
aAsr
)
mChain
(
aChain
)
{
}
void
ScrollingLayersHelper
:
:
ItemClips
:
:
Apply
(
wr
:
:
DisplayListBuilder
*
aBuilder
)
{
if
(
mScrollId
)
{
aBuilder
-
>
PushScrollLayer
(
mScrollId
.
ref
(
)
)
;
}
if
(
mClipId
)
{
aBuilder
-
>
PushClip
(
mClipId
.
ref
(
)
)
;
}
if
(
mClipAndScroll
)
{
aBuilder
-
>
PushClipAndScrollInfo
(
mClipAndScroll
-
>
first
mClipAndScroll
-
>
second
.
ptrOr
(
nullptr
)
)
;
}
}
void
ScrollingLayersHelper
:
:
ItemClips
:
:
Unapply
(
wr
:
:
DisplayListBuilder
*
aBuilder
)
{
if
(
mClipAndScroll
)
{
aBuilder
-
>
PopClipAndScrollInfo
(
)
;
}
if
(
mClipId
)
{
aBuilder
-
>
PopClip
(
)
;
}
if
(
mScrollId
)
{
aBuilder
-
>
PopScrollLayer
(
)
;
}
}
bool
ScrollingLayersHelper
:
:
ItemClips
:
:
HasSameInputs
(
const
ItemClips
&
aOther
)
{
return
mAsr
=
=
aOther
.
mAsr
&
&
mChain
=
=
aOther
.
mChain
;
}
}
}
