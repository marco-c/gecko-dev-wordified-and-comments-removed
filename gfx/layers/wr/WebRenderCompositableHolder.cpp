#
include
"
WebRenderCompositableHolder
.
h
"
#
include
"
CompositableHost
.
h
"
#
include
"
mozilla
/
layers
/
WebRenderImageHost
.
h
"
#
include
"
mozilla
/
layers
/
WebRenderTextureHost
.
h
"
namespace
mozilla
{
using
namespace
gfx
;
namespace
layers
{
WebRenderCompositableHolder
:
:
WebRenderCompositableHolder
(
)
{
MOZ_COUNT_CTOR
(
WebRenderCompositableHolder
)
;
}
WebRenderCompositableHolder
:
:
~
WebRenderCompositableHolder
(
)
{
MOZ_COUNT_DTOR
(
WebRenderCompositableHolder
)
;
MOZ_ASSERT
(
mWebRenderTextureHosts
.
empty
(
)
)
;
}
void
WebRenderCompositableHolder
:
:
Destroy
(
)
{
while
(
!
mWebRenderTextureHosts
.
empty
(
)
)
{
mWebRenderTextureHosts
.
pop
(
)
;
}
}
void
WebRenderCompositableHolder
:
:
HoldExternalImage
(
const
wr
:
:
Epoch
&
aEpoch
WebRenderTextureHost
*
aTexture
)
{
MOZ_ASSERT
(
aTexture
)
;
mWebRenderTextureHosts
.
push
(
ForwardingTextureHosts
(
aEpoch
aTexture
)
)
;
}
void
WebRenderCompositableHolder
:
:
Update
(
const
wr
:
:
Epoch
&
aEpoch
)
{
if
(
mWebRenderTextureHosts
.
empty
(
)
)
{
return
;
}
while
(
!
mWebRenderTextureHosts
.
empty
(
)
)
{
if
(
aEpoch
<
=
mWebRenderTextureHosts
.
front
(
)
.
mEpoch
)
{
break
;
}
mWebRenderTextureHosts
.
pop
(
)
;
}
}
}
}
