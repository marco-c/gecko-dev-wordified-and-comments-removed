#
ifndef
GFX_WEBRENDERSCROLLDATA_H
#
define
GFX_WEBRENDERSCROLLDATA_H
#
include
<
map
>
#
include
"
chrome
/
common
/
ipc_message_utils
.
h
"
#
include
"
FrameMetrics
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsTArrayForwardDeclare
.
h
"
namespace
mozilla
{
namespace
layers
{
class
Layer
;
class
WebRenderScrollData
;
class
WebRenderLayerScrollData
{
public
:
WebRenderLayerScrollData
(
)
;
~
WebRenderLayerScrollData
(
)
;
void
Initialize
(
WebRenderScrollData
&
aOwner
Layer
*
aLayer
int32_t
aDescendantCount
)
;
friend
struct
IPC
:
:
ParamTraits
<
WebRenderLayerScrollData
>
;
private
:
int32_t
mDescendantCount
;
nsTArray
<
size_t
>
mScrollIds
;
}
;
class
WebRenderScrollData
{
public
:
WebRenderScrollData
(
)
;
~
WebRenderScrollData
(
)
;
size_t
AddMetadata
(
const
ScrollMetadata
&
aMetadata
)
;
size_t
AddNewLayerData
(
)
;
WebRenderLayerScrollData
*
GetLayerDataMutable
(
size_t
aIndex
)
;
friend
struct
IPC
:
:
ParamTraits
<
WebRenderScrollData
>
;
private
:
std
:
:
map
<
FrameMetrics
:
:
ViewID
size_t
>
mScrollIdMap
;
nsTArray
<
ScrollMetadata
>
mScrollMetadatas
;
nsTArray
<
WebRenderLayerScrollData
>
mLayerScrollData
;
}
;
}
}
namespace
IPC
{
template
<
>
struct
ParamTraits
<
mozilla
:
:
layers
:
:
WebRenderLayerScrollData
>
{
typedef
mozilla
:
:
layers
:
:
WebRenderLayerScrollData
paramType
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
{
WriteParam
(
aMsg
aParam
.
mDescendantCount
)
;
WriteParam
(
aMsg
aParam
.
mScrollIds
)
;
}
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
{
return
ReadParam
(
aMsg
aIter
&
aResult
-
>
mDescendantCount
)
&
&
ReadParam
(
aMsg
aIter
&
aResult
-
>
mScrollIds
)
;
}
}
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
layers
:
:
WebRenderScrollData
>
{
typedef
mozilla
:
:
layers
:
:
WebRenderScrollData
paramType
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
{
WriteParam
(
aMsg
aParam
.
mScrollMetadatas
)
;
WriteParam
(
aMsg
aParam
.
mLayerScrollData
)
;
}
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
{
return
ReadParam
(
aMsg
aIter
&
aResult
-
>
mScrollMetadatas
)
&
&
ReadParam
(
aMsg
aIter
&
aResult
-
>
mLayerScrollData
)
;
}
}
;
}
#
endif
