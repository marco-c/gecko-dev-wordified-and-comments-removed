#
ifndef
mozilla_layers_PaintCounter_h_
#
define
mozilla_layers_PaintCounter_h_
#
include
<
map
>
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
TimeStamp
.
h
"
#
include
"
skia
/
include
/
core
/
SkCanvas
.
h
"
namespace
mozilla
{
namespace
layers
{
class
Compositor
;
using
namespace
mozilla
:
:
gfx
;
using
namespace
mozilla
:
:
gl
;
class
PaintCounter
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
PaintCounter
)
PaintCounter
(
)
;
void
Draw
(
Compositor
*
aCompositor
TimeDuration
aPaintTime
TimeDuration
aCompositeTime
)
;
static
IntRect
GetPaintRect
(
)
{
return
PaintCounter
:
:
mRect
;
}
private
:
virtual
~
PaintCounter
(
)
;
SurfaceFormat
mFormat
;
std
:
:
unique_ptr
<
SkCanvas
>
mCanvas
;
IntSize
mSize
;
int
mStride
;
RefPtr
<
DataSourceSurface
>
mSurface
;
RefPtr
<
DataTextureSource
>
mTextureSource
;
RefPtr
<
TexturedEffect
>
mTexturedEffect
;
Maybe
<
DataSourceSurface
:
:
ScopedMap
>
mMap
;
static
IntRect
mRect
;
}
;
}
}
#
endif
