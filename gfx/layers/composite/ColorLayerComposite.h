#
ifndef
GFX_ColorLayerComposite_H
#
define
GFX_ColorLayerComposite_H
#
include
"
Layers
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
layers
/
LayerManagerComposite
.
h
"
#
include
"
nsISupportsImpl
.
h
"
namespace
mozilla
{
namespace
layers
{
class
CompositableHost
;
class
ColorLayerComposite
:
public
ColorLayer
public
LayerComposite
{
public
:
explicit
ColorLayerComposite
(
LayerManagerComposite
*
aManager
)
:
ColorLayer
(
aManager
nullptr
)
LayerComposite
(
aManager
)
{
MOZ_COUNT_CTOR
(
ColorLayerComposite
)
;
mImplData
=
static_cast
<
LayerComposite
*
>
(
this
)
;
}
protected
:
virtual
~
ColorLayerComposite
(
)
{
MOZ_COUNT_DTOR
(
ColorLayerComposite
)
;
Destroy
(
)
;
}
public
:
Layer
*
GetLayer
(
)
override
{
return
this
;
}
void
SetLayerManager
(
HostLayerManager
*
aManager
)
override
{
LayerComposite
:
:
SetLayerManager
(
aManager
)
;
mManager
=
aManager
;
}
void
Destroy
(
)
override
{
mDestroyed
=
true
;
}
void
RenderLayer
(
const
gfx
:
:
IntRect
&
aClipRect
const
Maybe
<
gfx
:
:
Polygon
>
&
aGeometry
)
override
;
void
CleanupResources
(
)
override
{
}
;
void
GenEffectChain
(
EffectChain
&
aEffect
)
override
;
CompositableHost
*
GetCompositableHost
(
)
override
{
return
nullptr
;
}
HostLayer
*
AsHostLayer
(
)
override
{
return
this
;
}
const
char
*
Name
(
)
const
override
{
return
"
ColorLayerComposite
"
;
}
}
;
}
}
#
endif
