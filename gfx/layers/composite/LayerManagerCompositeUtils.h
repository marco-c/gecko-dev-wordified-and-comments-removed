#
ifndef
GFX_LayerManagerCompositeUtils_H
#
define
GFX_LayerManagerCompositeUtils_H
#
include
<
cstddef
>
#
include
"
Layers
.
h
"
#
include
"
Units
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
gfx
/
BaseRect
.
h
"
#
include
"
mozilla
/
gfx
/
Matrix
.
h
"
#
include
"
mozilla
/
gfx
/
Rect
.
h
"
#
include
"
mozilla
/
layers
/
Compositor
.
h
"
#
include
"
mozilla
/
layers
/
Effects
.
h
"
#
include
"
mozilla
/
layers
/
LayerManagerComposite
.
h
"
#
include
"
mozilla
/
layers
/
TextureHost
.
h
"
namespace
mozilla
{
namespace
layers
{
template
<
typename
RenderCallbackType
>
void
RenderWithAllMasks
(
Layer
*
aLayer
Compositor
*
aCompositor
const
gfx
:
:
IntRect
&
aClipRect
RenderCallbackType
aRenderCallback
)
{
Layer
*
firstMask
=
nullptr
;
size_t
maskLayerCount
=
0
;
size_t
nextAncestorMaskLayer
=
0
;
size_t
ancestorMaskLayerCount
=
aLayer
-
>
GetAncestorMaskLayerCount
(
)
;
if
(
Layer
*
ownMask
=
aLayer
-
>
GetMaskLayer
(
)
)
{
firstMask
=
ownMask
;
maskLayerCount
=
ancestorMaskLayerCount
+
1
;
nextAncestorMaskLayer
=
0
;
}
else
if
(
ancestorMaskLayerCount
>
0
)
{
firstMask
=
aLayer
-
>
GetAncestorMaskLayerAt
(
0
)
;
maskLayerCount
=
ancestorMaskLayerCount
;
nextAncestorMaskLayer
=
1
;
}
else
{
}
if
(
maskLayerCount
<
=
1
)
{
EffectChain
effectChain
(
aLayer
)
;
LayerManagerComposite
:
:
AutoAddMaskEffect
autoMaskEffect
(
firstMask
effectChain
)
;
static_cast
<
LayerComposite
*
>
(
aLayer
-
>
AsHostLayer
(
)
)
-
>
AddBlendModeEffect
(
effectChain
)
;
aRenderCallback
(
effectChain
aClipRect
)
;
return
;
}
gfx
:
:
Rect
visibleRect
(
aLayer
-
>
GetLocalVisibleRegion
(
)
.
GetBounds
(
)
.
ToUnknownRect
(
)
)
;
gfx
:
:
Matrix4x4
transform
=
aLayer
-
>
GetEffectiveTransform
(
)
;
gfx
:
:
IntRect
surfaceRect
=
RoundedOut
(
transform
.
TransformAndClipBounds
(
visibleRect
gfx
:
:
Rect
(
aClipRect
)
)
)
;
if
(
surfaceRect
.
IsEmpty
(
)
)
{
return
;
}
RefPtr
<
CompositingRenderTarget
>
originalTarget
=
aCompositor
-
>
GetCurrentRenderTarget
(
)
;
RefPtr
<
CompositingRenderTarget
>
firstTarget
=
aCompositor
-
>
CreateRenderTarget
(
surfaceRect
INIT_MODE_CLEAR
)
;
if
(
!
firstTarget
)
{
return
;
}
aCompositor
-
>
SetRenderTarget
(
firstTarget
)
;
{
EffectChain
firstEffectChain
(
aLayer
)
;
LayerManagerComposite
:
:
AutoAddMaskEffect
firstMaskEffect
(
firstMask
firstEffectChain
)
;
aRenderCallback
(
firstEffectChain
aClipRect
-
surfaceRect
.
TopLeft
(
)
)
;
}
gfx
:
:
IntRect
intermediateClip
(
surfaceRect
-
surfaceRect
.
TopLeft
(
)
)
;
RefPtr
<
CompositingRenderTarget
>
previousTarget
=
firstTarget
;
for
(
size_t
i
=
nextAncestorMaskLayer
;
i
<
ancestorMaskLayerCount
-
1
;
i
+
+
)
{
Layer
*
intermediateMask
=
aLayer
-
>
GetAncestorMaskLayerAt
(
i
)
;
RefPtr
<
CompositingRenderTarget
>
intermediateTarget
=
aCompositor
-
>
CreateRenderTarget
(
surfaceRect
INIT_MODE_CLEAR
)
;
if
(
!
intermediateTarget
)
{
break
;
}
aCompositor
-
>
SetRenderTarget
(
intermediateTarget
)
;
EffectChain
intermediateEffectChain
(
aLayer
)
;
LayerManagerComposite
:
:
AutoAddMaskEffect
intermediateMaskEffect
(
intermediateMask
intermediateEffectChain
)
;
if
(
intermediateMaskEffect
.
Failed
(
)
)
{
continue
;
}
intermediateEffectChain
.
mPrimaryEffect
=
new
EffectRenderTarget
(
previousTarget
)
;
aCompositor
-
>
DrawQuad
(
gfx
:
:
Rect
(
surfaceRect
)
intermediateClip
intermediateEffectChain
1
.
0
gfx
:
:
Matrix4x4
(
)
)
;
previousTarget
=
intermediateTarget
;
}
aCompositor
-
>
SetRenderTarget
(
originalTarget
)
;
EffectChain
finalEffectChain
(
aLayer
)
;
finalEffectChain
.
mPrimaryEffect
=
new
EffectRenderTarget
(
previousTarget
)
;
Layer
*
finalMask
=
aLayer
-
>
GetAncestorMaskLayerAt
(
ancestorMaskLayerCount
-
1
)
;
static_cast
<
LayerComposite
*
>
(
aLayer
-
>
AsHostLayer
(
)
)
-
>
AddBlendModeEffect
(
finalEffectChain
)
;
LayerManagerComposite
:
:
AutoAddMaskEffect
autoMaskEffect
(
finalMask
finalEffectChain
)
;
if
(
!
autoMaskEffect
.
Failed
(
)
)
{
aCompositor
-
>
DrawQuad
(
gfx
:
:
Rect
(
surfaceRect
)
aClipRect
finalEffectChain
1
.
0
gfx
:
:
Matrix4x4
(
)
)
;
}
}
}
}
#
endif
