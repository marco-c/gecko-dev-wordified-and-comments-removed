#
ifndef
mozilla_layers_FrameUniformityData_h_
#
define
mozilla_layers_FrameUniformityData_h_
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
ipc
/
IPCMessageUtilsSpecializations
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
layers
{
class
FrameUniformityData
{
friend
struct
IPC
:
:
ParamTraits
<
FrameUniformityData
>
;
public
:
bool
ToJS
(
JS
:
:
MutableHandleValue
aOutValue
JSContext
*
aContext
)
;
std
:
:
map
<
uintptr_t
float
>
mUniformities
;
}
;
}
}
namespace
IPC
{
template
<
>
struct
ParamTraits
<
mozilla
:
:
layers
:
:
FrameUniformityData
>
{
typedef
mozilla
:
:
layers
:
:
FrameUniformityData
paramType
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
{
WriteParam
(
aMsg
aParam
.
mUniformities
)
;
}
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
{
return
ParamTraitsStd
<
std
:
:
map
<
uintptr_t
float
>
>
:
:
Read
(
aMsg
aIter
&
aResult
-
>
mUniformities
)
;
}
}
;
}
#
endif
