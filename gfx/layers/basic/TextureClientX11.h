#
ifndef
MOZILLA_GFX_TEXTURECLIENT_X11_H
#
define
MOZILLA_GFX_TEXTURECLIENT_X11_H
#
include
"
mozilla
/
layers
/
TextureClient
.
h
"
#
include
"
ISurfaceAllocator
.
h
"
namespace
mozilla
{
namespace
layers
{
class
X11TextureData
:
public
TextureData
{
public
:
static
X11TextureData
*
Create
(
gfx
:
:
IntSize
aSize
gfx
:
:
SurfaceFormat
aFormat
TextureFlags
aFlags
LayersIPCChannel
*
aAllocator
)
;
virtual
bool
Serialize
(
SurfaceDescriptor
&
aOutDescriptor
)
override
;
virtual
bool
Lock
(
OpenMode
aMode
)
override
;
virtual
void
Unlock
(
)
override
;
virtual
void
FillInfo
(
TextureData
:
:
Info
&
aInfo
)
const
override
;
virtual
already_AddRefed
<
gfx
:
:
DrawTarget
>
BorrowDrawTarget
(
)
override
;
virtual
void
Deallocate
(
LayersIPCChannel
*
)
override
;
virtual
TextureData
*
CreateSimilar
(
LayersIPCChannel
*
aAllocator
LayersBackend
aLayersBackend
TextureFlags
aFlags
=
TextureFlags
:
:
DEFAULT
TextureAllocationFlags
aAllocFlags
=
ALLOC_DEFAULT
)
const
override
;
virtual
bool
UpdateFromSurface
(
gfx
:
:
SourceSurface
*
aSurface
)
override
;
protected
:
X11TextureData
(
gfx
:
:
IntSize
aSize
gfx
:
:
SurfaceFormat
aFormat
bool
aClientDeallocation
bool
aIsCrossProcess
gfxXlibSurface
*
aSurface
)
;
gfx
:
:
IntSize
mSize
;
gfx
:
:
SurfaceFormat
mFormat
;
RefPtr
<
gfxXlibSurface
>
mSurface
;
bool
mClientDeallocation
;
bool
mIsCrossProcess
;
}
;
}
}
#
endif
