#
ifndef
MOZILLA_LAYERS_ASYNCCANVASRENDERER_H_
#
define
MOZILLA_LAYERS_ASYNCCANVASRENDERER_H_
#
include
"
mozilla
/
gfx
/
Point
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
class
nsICanvasRenderingContextInternal
;
namespace
mozilla
{
namespace
gl
{
class
GLContext
;
}
namespace
dom
{
class
HTMLCanvasElement
;
}
namespace
layers
{
class
CanvasClient
;
class
AsyncCanvasRenderer
final
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
AsyncCanvasRenderer
)
public
:
AsyncCanvasRenderer
(
)
;
void
NotifyElementAboutAttributesChanged
(
)
;
void
SetCanvasClient
(
CanvasClient
*
aClient
)
;
void
SetWidth
(
uint32_t
aWidth
)
{
mWidth
=
aWidth
;
}
void
SetHeight
(
uint32_t
aHeight
)
{
mHeight
=
aHeight
;
}
gfx
:
:
IntSize
GetSize
(
)
const
{
return
gfx
:
:
IntSize
(
mWidth
mHeight
)
;
}
uint64_t
GetCanvasClientAsyncID
(
)
const
{
return
mCanvasClientAsyncID
;
}
CanvasClient
*
GetCanvasClient
(
)
const
{
return
mCanvasClient
;
}
dom
:
:
HTMLCanvasElement
*
mHTMLCanvasElement
;
nsICanvasRenderingContextInternal
*
mContext
;
RefPtr
<
gl
:
:
GLContext
>
mGLContext
;
private
:
virtual
~
AsyncCanvasRenderer
(
)
;
uint32_t
mWidth
;
uint32_t
mHeight
;
uint64_t
mCanvasClientAsyncID
;
CanvasClient
*
mCanvasClient
;
}
;
}
}
#
endif
