#
include
"
GPUVideoTextureClient
.
h
"
#
include
"
mozilla
/
dom
/
VideoDecoderManagerChild
.
h
"
namespace
mozilla
{
namespace
layers
{
using
namespace
gfx
;
GPUVideoTextureData
:
:
GPUVideoTextureData
(
dom
:
:
VideoDecoderManagerChild
*
aManager
const
SurfaceDescriptorGPUVideo
&
aSD
const
gfx
:
:
IntSize
&
aSize
)
:
mManager
(
aManager
)
mSD
(
aSD
)
mSize
(
aSize
)
{
}
GPUVideoTextureData
:
:
~
GPUVideoTextureData
(
)
{
}
bool
GPUVideoTextureData
:
:
Serialize
(
SurfaceDescriptor
&
aOutDescriptor
)
{
aOutDescriptor
=
mSD
;
return
true
;
}
void
GPUVideoTextureData
:
:
FillInfo
(
TextureData
:
:
Info
&
aInfo
)
const
{
aInfo
.
size
=
mSize
;
aInfo
.
format
=
SurfaceFormat
:
:
B8G8R8X8
;
aInfo
.
hasIntermediateBuffer
=
false
;
aInfo
.
hasSynchronization
=
false
;
aInfo
.
supportsMoz2D
=
false
;
aInfo
.
canExposeMappedData
=
false
;
}
void
GPUVideoTextureData
:
:
Deallocate
(
LayersIPCChannel
*
aAllocator
)
{
mManager
-
>
DeallocateSurfaceDescriptorGPUVideo
(
mSD
)
;
mSD
=
SurfaceDescriptorGPUVideo
(
)
;
}
void
GPUVideoTextureData
:
:
Forget
(
LayersIPCChannel
*
aAllocator
)
{
Deallocate
(
aAllocator
)
;
}
}
}
