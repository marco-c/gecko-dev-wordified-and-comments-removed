#
ifndef
MOZILLA_GFX_GPUVIDEOTEXTURECLIENT_H
#
define
MOZILLA_GFX_GPUVIDEOTEXTURECLIENT_H
#
include
"
mozilla
/
layers
/
TextureClient
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
SourceSurface
;
}
namespace
layers
{
class
IGPUVideoSurfaceManager
;
class
GPUVideoTextureData
:
public
TextureData
{
public
:
GPUVideoTextureData
(
IGPUVideoSurfaceManager
*
aManager
const
SurfaceDescriptorGPUVideo
&
aSD
const
gfx
:
:
IntSize
&
aSize
)
;
virtual
~
GPUVideoTextureData
(
)
;
void
FillInfo
(
TextureData
:
:
Info
&
aInfo
)
const
override
;
bool
Lock
(
OpenMode
)
override
{
return
true
;
}
;
void
Unlock
(
)
override
{
}
;
bool
Serialize
(
SurfaceDescriptor
&
aOutDescriptor
)
override
;
void
Deallocate
(
LayersIPCChannel
*
aAllocator
)
override
;
void
Forget
(
LayersIPCChannel
*
aAllocator
)
override
;
already_AddRefed
<
gfx
:
:
SourceSurface
>
GetAsSourceSurface
(
)
;
GPUVideoTextureData
*
AsGPUVideoTextureData
(
)
override
{
return
this
;
}
protected
:
RefPtr
<
IGPUVideoSurfaceManager
>
mManager
;
SurfaceDescriptorGPUVideo
mSD
;
gfx
:
:
IntSize
mSize
;
public
:
const
decltype
(
mSD
)
&
SD
(
)
const
{
return
mSD
;
}
}
;
}
}
#
endif
