#
ifndef
MOZILLA_LAYERS_TEXTURESYNC_H
#
define
MOZILLA_LAYERS_TEXTURESYNC_H
#
include
"
base
/
process
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
mozilla
/
layers
/
TextureSourceProvider
.
h
"
#
include
"
SharedMemory
.
h
"
class
MachReceiveMessage
;
namespace
mozilla
{
namespace
ipc
{
struct
MemoryPorts
;
}
namespace
layers
{
class
TextureSync
{
public
:
static
void
RegisterTextureSourceProvider
(
layers
:
:
TextureSourceProvider
*
aTextureSourceProvider
)
;
static
void
UnregisterTextureSourceProvider
(
layers
:
:
TextureSourceProvider
*
aTextureSourceProvider
)
;
static
void
DispatchCheckTexturesForUnlock
(
)
;
static
void
HandleWaitForTexturesMessage
(
MachReceiveMessage
*
rmsg
ipc
:
:
MemoryPorts
*
ports
)
;
static
void
UpdateTextureLocks
(
base
:
:
ProcessId
aProcessId
)
;
static
bool
WaitForTextures
(
base
:
:
ProcessId
aProcessId
const
nsTArray
<
uint64_t
>
&
aTextureIds
)
;
static
void
SetTexturesLocked
(
base
:
:
ProcessId
aProcessId
const
nsTArray
<
uint64_t
>
&
aTextureIds
)
;
static
void
SetTexturesUnlocked
(
base
:
:
ProcessId
aProcessId
const
nsTArray
<
uint64_t
>
&
aTextureIds
)
;
static
void
Shutdown
(
)
;
static
void
CleanupForPid
(
base
:
:
ProcessId
aProcessId
)
;
}
;
}
}
#
endif
