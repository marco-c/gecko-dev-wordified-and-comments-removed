#
ifndef
mozilla_layers_NativeLayerRootRemoteMacChild_h
#
define
mozilla_layers_NativeLayerRootRemoteMacChild_h
#
include
"
mozilla
/
layers
/
NativeLayer
.
h
"
#
include
"
mozilla
/
layers
/
NativeLayerCommandQueue
.
h
"
#
include
"
mozilla
/
layers
/
NativeLayerRemoteChild
.
h
"
namespace
mozilla
{
namespace
layers
{
class
NativeLayerRootRemoteMacChild
final
:
public
NativeLayerRoot
{
public
:
NativeLayerRootRemoteMacChild
(
)
;
already_AddRefed
<
NativeLayer
>
CreateLayer
(
const
gfx
:
:
IntSize
&
aSize
bool
aIsOpaque
SurfacePoolHandle
*
aSurfacePoolHandle
)
override
;
already_AddRefed
<
NativeLayer
>
CreateLayerForExternalTexture
(
bool
aIsOpaque
)
override
;
already_AddRefed
<
NativeLayer
>
CreateLayerForColor
(
gfx
:
:
DeviceColor
aColor
)
override
;
void
AppendLayer
(
NativeLayer
*
aLayer
)
override
;
void
RemoveLayer
(
NativeLayer
*
aLayer
)
override
;
void
SetLayers
(
const
nsTArray
<
RefPtr
<
NativeLayer
>
>
&
aLayers
)
override
;
void
PrepareForCommit
(
)
override
;
bool
CommitToScreen
(
)
override
;
RefPtr
<
NativeLayerRemoteChild
>
GetRemoteChild
(
)
{
return
mRemoteChild
;
}
protected
:
virtual
~
NativeLayerRootRemoteMacChild
(
)
;
RefPtr
<
NativeLayerRemoteChild
>
mRemoteChild
;
RefPtr
<
NativeLayerCommandQueue
>
mCommandQueue
;
nsTArray
<
RefPtr
<
NativeLayer
>
>
mNativeLayers
;
bool
mNativeLayersChanged
=
false
;
}
;
}
}
#
endif
