#
ifndef
mozilla_layers_NativeLayer_h
#
define
mozilla_layers_NativeLayer_h
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
GLTypes
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsRegion
.
h
"
namespace
mozilla
{
namespace
gl
{
class
GLContext
;
}
namespace
layers
{
class
NativeLayer
;
class
NativeLayerCA
;
class
NativeLayerRoot
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
NativeLayerRoot
)
virtual
already_AddRefed
<
NativeLayer
>
CreateLayer
(
)
=
0
;
virtual
void
AppendLayer
(
NativeLayer
*
aLayer
)
=
0
;
virtual
void
RemoveLayer
(
NativeLayer
*
aLayer
)
=
0
;
protected
:
virtual
~
NativeLayerRoot
(
)
{
}
}
;
class
NativeLayer
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
NativeLayer
)
virtual
NativeLayerCA
*
AsNativeLayerCA
(
)
{
return
nullptr
;
}
virtual
void
SetRect
(
const
gfx
:
:
IntRect
&
aRect
)
=
0
;
virtual
gfx
:
:
IntRect
GetRect
(
)
=
0
;
virtual
void
SetIsOpaque
(
bool
aIsOpaque
)
=
0
;
virtual
bool
IsOpaque
(
)
=
0
;
virtual
void
SetSurfaceIsFlipped
(
bool
aIsFlipped
)
=
0
;
virtual
bool
SurfaceIsFlipped
(
)
=
0
;
virtual
void
InvalidateRegionThroughoutSwapchain
(
const
gfx
:
:
IntRegion
&
aRegion
)
=
0
;
virtual
RefPtr
<
gfx
:
:
DrawTarget
>
NextSurfaceAsDrawTarget
(
gfx
:
:
BackendType
aBackendType
)
=
0
;
virtual
void
SetGLContext
(
gl
:
:
GLContext
*
aGLContext
)
=
0
;
virtual
gl
:
:
GLContext
*
GetGLContext
(
)
=
0
;
virtual
Maybe
<
GLuint
>
NextSurfaceAsFramebuffer
(
bool
aNeedsDepth
)
=
0
;
virtual
gfx
:
:
IntRegion
CurrentSurfaceInvalidRegion
(
)
=
0
;
virtual
void
NotifySurfaceReady
(
)
=
0
;
protected
:
virtual
~
NativeLayer
(
)
{
}
}
;
}
}
#
endif
