#
ifndef
gfxMacPlatformFontList_H_
#
define
gfxMacPlatformFontList_H_
#
include
<
CoreFoundation
/
CoreFoundation
.
h
>
#
include
"
CoreTextFontList
.
h
"
class
gfxMacPlatformFontList
final
:
public
CoreTextFontList
{
public
:
static
gfxMacPlatformFontList
*
PlatformFontList
(
)
{
return
static_cast
<
gfxMacPlatformFontList
*
>
(
gfxPlatformFontList
:
:
PlatformFontList
(
)
)
;
}
nsTArray
<
std
:
:
pair
<
const
char
*
*
uint32_t
>
>
GetFilteredPlatformFontLists
(
)
override
;
static
void
LookupSystemFont
(
mozilla
:
:
LookAndFeel
:
:
FontID
aSystemFontID
nsACString
&
aSystemFontName
gfxFontStyle
&
aFontStyle
)
;
protected
:
bool
DeprecatedFamilyIsAvailable
(
const
nsACString
&
aName
)
override
;
FontVisibility
GetVisibilityForFamily
(
const
nsACString
&
aName
)
const
override
;
private
:
friend
class
gfxPlatformMac
;
gfxMacPlatformFontList
(
)
;
virtual
~
gfxMacPlatformFontList
(
)
=
default
;
void
InitSingleFaceList
(
)
MOZ_REQUIRES
(
mLock
)
override
;
void
InitAliasesForSingleFaceList
(
)
MOZ_REQUIRES
(
mLock
)
override
;
nsTArray
<
nsCString
>
mSingleFaceFonts
;
}
;
#
endif
