#
ifndef
mozilla_gfx_thebes_D3D11Checks_h
#
define
mozilla_gfx_thebes_D3D11Checks_h
#
include
"
mozilla
/
EnumSet
.
h
"
#
include
"
mozilla
/
EnumTypeTraits
.
h
"
struct
ID3D11Device
;
struct
IDXGIAdapter
;
struct
DXGI_ADAPTER_DESC
;
namespace
mozilla
{
namespace
gfx
{
struct
D3D11Checks
{
enum
class
VideoFormatOption
{
NV12
P010
P016
}
;
using
VideoFormatOptionSet
=
EnumSet
<
VideoFormatOption
>
;
static
bool
DoesRenderTargetViewNeedRecreating
(
ID3D11Device
*
aDevice
)
;
static
bool
DoesDeviceWork
(
)
;
static
bool
DoesTextureSharingWork
(
ID3D11Device
*
device
)
;
static
bool
DoesAlphaTextureSharingWork
(
ID3D11Device
*
device
)
;
static
void
WarnOnAdapterMismatch
(
ID3D11Device
*
device
)
;
static
bool
GetDxgiDesc
(
ID3D11Device
*
device
DXGI_ADAPTER_DESC
*
out
)
;
static
bool
DoesRemotePresentWork
(
IDXGIAdapter
*
adapter
)
;
static
VideoFormatOptionSet
FormatOptions
(
ID3D11Device
*
device
)
;
}
;
}
template
<
>
struct
MaxEnumValue
<
:
:
mozilla
:
:
gfx
:
:
D3D11Checks
:
:
VideoFormatOption
>
{
static
constexpr
unsigned
int
value
=
static_cast
<
unsigned
int
>
(
gfx
:
:
D3D11Checks
:
:
VideoFormatOption
:
:
P016
)
;
}
;
}
#
endif
