#
ifndef
GFX_WINDOWSSURFACE_H
#
define
GFX_WINDOWSSURFACE_H
#
include
"
gfxASurface
.
h
"
#
include
"
gfxImageSurface
.
h
"
#
include
<
windows
.
h
>
struct
IDirect3DSurface9
;
#
undef
LoadImage
class
gfxContext
;
class
gfxWindowsSurface
:
public
gfxASurface
{
public
:
enum
{
FLAG_IS_TRANSPARENT
=
(
1
<
<
2
)
}
;
explicit
gfxWindowsSurface
(
HDC
dc
uint32_t
flags
=
0
)
;
explicit
gfxWindowsSurface
(
const
mozilla
:
:
gfx
:
:
IntSize
&
size
gfxImageFormat
imageFormat
=
mozilla
:
:
gfx
:
:
SurfaceFormat
:
:
X8R8G8B8_UINT32
)
;
explicit
gfxWindowsSurface
(
cairo_surface_t
*
csurf
)
;
virtual
already_AddRefed
<
gfxASurface
>
CreateSimilarSurface
(
gfxContentType
aType
const
mozilla
:
:
gfx
:
:
IntSize
&
aSize
)
;
void
InitWithDC
(
uint32_t
flags
)
;
virtual
~
gfxWindowsSurface
(
)
;
HDC
GetDC
(
)
;
already_AddRefed
<
gfxImageSurface
>
GetAsImageSurface
(
)
;
const
mozilla
:
:
gfx
:
:
IntSize
GetSize
(
)
const
;
private
:
void
MakeInvalid
(
mozilla
:
:
gfx
:
:
IntSize
&
size
)
;
bool
mOwnsDC
;
HDC
mDC
;
HWND
mWnd
;
}
;
#
endif
