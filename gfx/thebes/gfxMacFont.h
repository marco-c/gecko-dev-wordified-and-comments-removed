#
ifndef
GFX_MACFONT_H
#
define
GFX_MACFONT_H
#
include
"
mozilla
/
MemoryReporting
.
h
"
#
include
"
gfxFont
.
h
"
#
include
"
cairo
.
h
"
#
include
<
ApplicationServices
/
ApplicationServices
.
h
>
#
include
"
mozilla
/
gfx
/
UnscaledFontMac
.
h
"
class
MacOSFontEntry
;
class
gfxMacFont
:
public
gfxFont
{
public
:
gfxMacFont
(
const
RefPtr
<
mozilla
:
:
gfx
:
:
UnscaledFontMac
>
&
aUnscaledFont
MacOSFontEntry
*
aFontEntry
const
gfxFontStyle
*
aFontStyle
bool
aNeedsBold
)
;
virtual
~
gfxMacFont
(
)
;
CGFontRef
GetCGFontRef
(
)
const
{
return
mCGFont
;
}
uint32_t
GetSpaceGlyph
(
)
override
{
return
mSpaceGlyph
;
}
bool
SetupCairoFont
(
DrawTarget
*
aDrawTarget
)
override
;
RunMetrics
Measure
(
const
gfxTextRun
*
aTextRun
uint32_t
aStart
uint32_t
aEnd
BoundingBoxType
aBoundingBoxType
DrawTarget
*
aDrawTargetForTightBoundingBox
Spacing
*
aSpacing
mozilla
:
:
gfx
:
:
ShapedTextFlags
aOrientation
)
override
;
bool
ProvidesGlyphWidths
(
)
const
override
{
return
mVariationFont
|
|
mFontEntry
-
>
HasFontTable
(
TRUETYPE_TAG
(
'
s
'
'
b
'
'
i
'
'
x
'
)
)
;
}
int32_t
GetGlyphWidth
(
DrawTarget
&
aDrawTarget
uint16_t
aGID
)
override
;
already_AddRefed
<
mozilla
:
:
gfx
:
:
ScaledFont
>
GetScaledFont
(
mozilla
:
:
gfx
:
:
DrawTarget
*
aTarget
)
override
;
already_AddRefed
<
mozilla
:
:
gfx
:
:
GlyphRenderingOptions
>
GetGlyphRenderingOptions
(
const
TextRunDrawParams
*
aRunParams
=
nullptr
)
override
;
void
AddSizeOfExcludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
FontCacheSizes
*
aSizes
)
const
override
;
void
AddSizeOfIncludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
FontCacheSizes
*
aSizes
)
const
override
;
FontType
GetType
(
)
const
override
{
return
FONT_TYPE_MAC
;
}
static
CTFontRef
CreateCTFontFromCGFontWithVariations
(
CGFontRef
aCGFont
CGFloat
aSize
CTFontDescriptorRef
aFontDesc
=
nullptr
)
;
protected
:
const
Metrics
&
GetHorizontalMetrics
(
)
override
{
return
mMetrics
;
}
bool
ShapeText
(
DrawTarget
*
aDrawTarget
const
char16_t
*
aText
uint32_t
aOffset
uint32_t
aLength
Script
aScript
bool
aVertical
RoundingFlags
aRounding
gfxShapedText
*
aShapedText
)
override
;
void
InitMetrics
(
)
;
void
InitMetricsFromPlatform
(
)
;
gfxFloat
GetCharWidth
(
CFDataRef
aCmap
char16_t
aUniChar
uint32_t
*
aGlyphID
gfxFloat
aConvFactor
)
;
CGFontRef
mCGFont
;
CTFontRef
mCTFont
;
cairo_font_face_t
*
mFontFace
;
mozilla
:
:
UniquePtr
<
gfxFontShaper
>
mCoreTextShaper
;
Metrics
mMetrics
;
uint32_t
mSpaceGlyph
;
bool
mVariationFont
;
}
;
#
endif
