#
ifndef
GFX_SOFTWARE_VSYNC_SOURCE_H
#
define
GFX_SOFTWARE_VSYNC_SOURCE_H
#
include
"
mozilla
/
Monitor
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
TimeStamp
.
h
"
#
include
"
base
/
thread
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
VsyncSource
.
h
"
class
SoftwareDisplay
final
:
public
mozilla
:
:
gfx
:
:
VsyncSource
:
:
Display
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
SoftwareDisplay
)
public
:
SoftwareDisplay
(
)
;
void
EnableVsync
(
)
override
;
void
DisableVsync
(
)
override
;
bool
IsVsyncEnabled
(
)
override
;
bool
IsInSoftwareVsyncThread
(
)
;
void
NotifyVsync
(
mozilla
:
:
TimeStamp
aVsyncTimestamp
)
override
;
mozilla
:
:
TimeDuration
GetVsyncRate
(
)
override
;
void
ScheduleNextVsync
(
mozilla
:
:
TimeStamp
aVsyncTimestamp
)
;
void
Shutdown
(
)
override
;
private
:
virtual
~
SoftwareDisplay
(
)
;
mozilla
:
:
TimeDuration
mVsyncRate
;
base
:
:
Thread
*
mVsyncThread
;
RefPtr
<
mozilla
:
:
CancelableRunnable
>
mCurrentVsyncTask
;
bool
mVsyncEnabled
;
}
;
class
SoftwareVsyncSource
:
public
mozilla
:
:
gfx
:
:
VsyncSource
{
public
:
SoftwareVsyncSource
(
)
;
virtual
~
SoftwareVsyncSource
(
)
;
Display
&
GetGlobalDisplay
(
)
override
{
MOZ_ASSERT
(
mGlobalDisplay
!
=
nullptr
)
;
return
*
mGlobalDisplay
;
}
private
:
RefPtr
<
SoftwareDisplay
>
mGlobalDisplay
;
}
;
#
endif
