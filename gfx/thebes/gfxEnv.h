#
ifndef
GFX_ENV_H
#
define
GFX_ENV_H
#
include
"
prenv
.
h
"
#
define
DECL_GFX_ENV
(
Env
Name
)
\
static
bool
Name
(
)
{
\
static
bool
isSet
=
IsEnvSet
(
Env
)
;
\
return
isSet
;
\
}
class
gfxEnv
final
{
public
:
DECL_GFX_ENV
(
"
MOZ_DEBUG_SHADERS
"
DebugShaders
)
;
DECL_GFX_ENV
(
"
MOZ_DISABLE_CRASH_GUARD
"
DisableCrashGuard
)
;
DECL_GFX_ENV
(
"
MOZ_FORCE_CRASH_GUARD_NIGHTLY
"
ForceCrashGuardNightly
)
;
DECL_GFX_ENV
(
"
MOZ_DISABLE_FORCE_PRESENT
"
DisableForcePresent
)
;
DECL_GFX_ENV
(
"
MOZ_DUMP_COMPOSITOR_TEXTURES
"
DumpCompositorTextures
)
;
DECL_GFX_ENV
(
"
MOZ_DUMP_PAINT
"
DumpPaint
)
;
DECL_GFX_ENV
(
"
MOZ_DUMP_PAINT_ITEMS
"
DumpPaintItems
)
;
DECL_GFX_ENV
(
"
MOZ_DUMP_PAINT_TO_FILE
"
DumpPaintToFile
)
;
DECL_GFX_ENV
(
"
MOZ_GFX_CRASH_MOZ_CRASH
"
GfxDevCrashMozCrash
)
;
DECL_GFX_ENV
(
"
MOZ_GFX_CRASH_TELEMETRY
"
GfxDevCrashTelemetry
)
;
DECL_GFX_ENV
(
"
MOZ_GL_DEBUG
"
GlDebug
)
;
DECL_GFX_ENV
(
"
MOZ_GL_DEBUG_VERBOSE
"
GlDebugVerbose
)
;
DECL_GFX_ENV
(
"
MOZ_GL_DUMP_EXTS
"
GlDumpExtensions
)
;
DECL_GFX_ENV
(
"
MOZ_GL_SPEW
"
GlSpew
)
;
DECL_GFX_ENV
(
"
MOZ_GLX_DEBUG
"
GlxDebug
)
;
DECL_GFX_ENV
(
"
MOZ_LAYERS_PREFER_EGL
"
LayersPreferEGL
)
;
DECL_GFX_ENV
(
"
MOZ_LAYERS_PREFER_OFFSCREEN
"
LayersPreferOffscreen
)
;
private
:
static
bool
IsEnvSet
(
const
char
*
aName
)
{
const
char
*
val
=
PR_GetEnv
(
aName
)
;
return
(
val
!
=
0
&
&
*
val
!
=
'
\
0
'
)
;
}
gfxEnv
(
)
=
default
;
~
gfxEnv
(
)
=
default
;
gfxEnv
(
const
gfxEnv
&
)
=
delete
;
gfxEnv
&
operator
=
(
const
gfxEnv
&
)
=
delete
;
}
;
#
undef
DECL_GFX_ENV
#
endif
