#
include
"
PrintTargetSkPDF
.
h
"
#
include
"
mozilla
/
gfx
/
2D
.
h
"
#
include
"
nsString
.
h
"
#
include
<
vector
>
namespace
mozilla
:
:
gfx
{
PrintTargetSkPDF
:
:
PrintTargetSkPDF
(
const
IntSize
&
aSize
UniquePtr
<
SkWStream
>
aStream
)
:
PrintTarget
(
nullptr
aSize
)
mOStream
(
std
:
:
move
(
aStream
)
)
mPageCanvas
(
nullptr
)
mRefCanvas
(
nullptr
)
{
}
PrintTargetSkPDF
:
:
~
PrintTargetSkPDF
(
)
{
Finish
(
)
;
mPDFDoc
=
nullptr
;
mRefPDFDoc
=
nullptr
;
}
already_AddRefed
<
PrintTargetSkPDF
>
PrintTargetSkPDF
:
:
CreateOrNull
(
UniquePtr
<
SkWStream
>
aStream
const
IntSize
&
aSizeInPoints
)
{
return
do_AddRef
(
new
PrintTargetSkPDF
(
aSizeInPoints
std
:
:
move
(
aStream
)
)
)
;
}
nsresult
PrintTargetSkPDF
:
:
BeginPrinting
(
const
nsAString
&
aTitle
const
nsAString
&
aPrintToFileName
int32_t
aStartPage
int32_t
aEndPage
)
{
SkPDF
:
:
Metadata
metadata
;
metadata
.
fTitle
=
NS_ConvertUTF16toUTF8
(
aTitle
)
.
get
(
)
;
metadata
.
fCreator
=
"
Firefox
"
;
SkTime
:
:
DateTime
now
;
SkTime
:
:
GetDateTime
(
&
now
)
;
metadata
.
fCreation
=
now
;
metadata
.
fModified
=
now
;
mPDFDoc
=
SkPDF
:
:
MakeDocument
(
mOStream
.
get
(
)
metadata
)
;
return
mPDFDoc
?
NS_OK
:
NS_ERROR_FAILURE
;
}
nsresult
PrintTargetSkPDF
:
:
BeginPage
(
)
{
mPageCanvas
=
mPDFDoc
-
>
beginPage
(
mSize
.
width
mSize
.
height
)
;
return
!
mPageCanvas
?
NS_ERROR_FAILURE
:
PrintTarget
:
:
BeginPage
(
)
;
}
nsresult
PrintTargetSkPDF
:
:
EndPage
(
)
{
mPageCanvas
=
nullptr
;
mPageDT
=
nullptr
;
return
PrintTarget
:
:
EndPage
(
)
;
}
nsresult
PrintTargetSkPDF
:
:
EndPrinting
(
)
{
mPDFDoc
-
>
close
(
)
;
if
(
mRefPDFDoc
)
{
mRefPDFDoc
-
>
close
(
)
;
}
mPageCanvas
=
nullptr
;
mPageDT
=
nullptr
;
return
NS_OK
;
}
void
PrintTargetSkPDF
:
:
Finish
(
)
{
if
(
mIsFinished
)
{
return
;
}
mOStream
-
>
flush
(
)
;
PrintTarget
:
:
Finish
(
)
;
}
already_AddRefed
<
DrawTarget
>
PrintTargetSkPDF
:
:
MakeDrawTarget
(
const
IntSize
&
aSize
DrawEventRecorder
*
aRecorder
)
{
if
(
aRecorder
)
{
return
PrintTarget
:
:
MakeDrawTarget
(
aSize
aRecorder
)
;
}
if
(
!
mPageCanvas
)
{
return
nullptr
;
}
mPageDT
=
Factory
:
:
CreateDrawTargetWithSkCanvas
(
mPageCanvas
)
;
if
(
!
mPageDT
)
{
mPageCanvas
=
nullptr
;
return
nullptr
;
}
return
do_AddRef
(
mPageDT
)
;
}
already_AddRefed
<
DrawTarget
>
PrintTargetSkPDF
:
:
GetReferenceDrawTarget
(
)
{
if
(
!
mRefDT
)
{
SkPDF
:
:
Metadata
metadata
;
mRefPDFDoc
=
SkPDF
:
:
MakeDocument
(
&
mRefOStream
metadata
)
;
if
(
!
mRefPDFDoc
)
{
return
nullptr
;
}
mRefCanvas
=
mRefPDFDoc
-
>
beginPage
(
mSize
.
width
mSize
.
height
)
;
if
(
!
mRefCanvas
)
{
return
nullptr
;
}
RefPtr
<
DrawTarget
>
dt
=
Factory
:
:
CreateDrawTargetWithSkCanvas
(
mRefCanvas
)
;
if
(
!
dt
)
{
return
nullptr
;
}
mRefDT
=
dt
.
forget
(
)
;
}
return
do_AddRef
(
mRefDT
)
;
}
}
