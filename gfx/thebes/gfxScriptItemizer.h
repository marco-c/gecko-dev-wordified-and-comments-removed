#
ifndef
GFX_SCRIPTITEMIZER_H
#
define
GFX_SCRIPTITEMIZER_H
#
include
<
stdint
.
h
>
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
intl
/
UnicodeScriptCodes
.
h
"
#
define
PAREN_STACK_DEPTH
32
class
gfxScriptItemizer
{
public
:
using
Script
=
mozilla
:
:
intl
:
:
Script
;
gfxScriptItemizer
(
const
char16_t
*
aText
uint32_t
aLength
)
:
textPtr
(
aText
)
textLength
(
aLength
)
{
}
struct
Run
{
uint32_t
mOffset
=
0
;
uint32_t
mLength
=
0
;
Script
mScript
=
Script
:
:
COMMON
;
MOZ_IMPLICIT
operator
bool
(
)
const
{
return
mLength
>
0
;
}
}
;
Run
Next
(
)
;
protected
:
void
push
(
uint32_t
endPairChar
Script
newScriptCode
)
;
void
pop
(
)
;
void
fixup
(
Script
newScriptCode
)
;
struct
ParenStackEntry
{
uint32_t
endPairChar
;
Script
scriptCode
;
}
;
const
char16_t
*
const
textPtr
;
const
uint32_t
textLength
;
uint32_t
scriptStart
=
0
;
uint32_t
scriptLimit
=
0
;
Script
scriptCode
=
Script
:
:
INVALID
;
struct
ParenStackEntry
parenStack
[
PAREN_STACK_DEPTH
]
;
uint32_t
parenSP
=
-
1
;
uint32_t
pushCount
=
0
;
uint32_t
fixupCount
=
0
;
}
;
#
endif
