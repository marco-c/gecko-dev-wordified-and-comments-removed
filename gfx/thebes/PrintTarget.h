#
ifndef
MOZILLA_GFX_PRINTTARGET_H
#
define
MOZILLA_GFX_PRINTTARGET_H
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
gfx
/
2D
.
h
"
#
include
"
nsISupportsImpl
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
DrawEventRecorder
;
class
PrintTarget
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
PrintTarget
)
;
virtual
nsresult
BeginPrinting
(
const
nsAString
&
aTitle
const
nsAString
&
aPrintToFileName
)
{
return
NS_OK
;
}
virtual
nsresult
EndPrinting
(
)
{
return
NS_OK
;
}
virtual
nsresult
AbortPrinting
(
)
{
return
NS_OK
;
}
virtual
nsresult
BeginPage
(
)
{
return
NS_OK
;
}
virtual
nsresult
EndPage
(
)
{
return
NS_OK
;
}
virtual
void
Finish
(
)
;
virtual
bool
RotateNeededForLandscape
(
)
const
{
return
false
;
}
const
IntSize
&
GetSize
(
)
const
{
return
mSize
;
}
virtual
already_AddRefed
<
DrawTarget
>
MakeDrawTarget
(
const
IntSize
&
aSize
DrawEventRecorder
*
aRecorder
=
nullptr
)
=
0
;
protected
:
explicit
PrintTarget
(
const
IntSize
&
aSize
)
;
virtual
~
PrintTarget
(
)
;
already_AddRefed
<
DrawTarget
>
CreateRecordingDrawTarget
(
DrawEventRecorder
*
aRecorder
DrawTarget
*
aDrawTarget
)
;
IntSize
mSize
;
bool
mIsFinished
;
}
;
}
}
#
endif
