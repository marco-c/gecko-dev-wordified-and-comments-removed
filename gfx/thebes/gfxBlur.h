#
ifndef
GFX_BLUR_H
#
define
GFX_BLUR_H
#
include
"
gfxTypes
.
h
"
#
include
"
gfxRect
.
h
"
#
include
"
nsSize
.
h
"
#
include
"
gfxPoint
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
gfx
/
Blur
.
h
"
class
gfxContext
;
namespace
mozilla
{
namespace
gfx
{
struct
Color
;
struct
RectCornerRadii
;
class
SourceSurface
;
class
DrawTarget
;
}
}
class
gfxAlphaBoxBlur
{
typedef
mozilla
:
:
gfx
:
:
Color
Color
;
typedef
mozilla
:
:
gfx
:
:
DrawTarget
DrawTarget
;
typedef
mozilla
:
:
gfx
:
:
RectCornerRadii
RectCornerRadii
;
public
:
gfxAlphaBoxBlur
(
)
;
~
gfxAlphaBoxBlur
(
)
;
already_AddRefed
<
gfxContext
>
Init
(
gfxContext
*
aDestinationCtx
const
gfxRect
&
aRect
const
mozilla
:
:
gfx
:
:
IntSize
&
aSpreadRadius
const
mozilla
:
:
gfx
:
:
IntSize
&
aBlurRadius
const
gfxRect
*
aDirtyRect
const
gfxRect
*
aSkipRect
bool
aUseHardwareAccel
=
true
)
;
already_AddRefed
<
DrawTarget
>
InitDrawTarget
(
const
mozilla
:
:
gfx
:
:
DrawTarget
*
aReferenceDT
const
mozilla
:
:
gfx
:
:
Rect
&
aRect
const
mozilla
:
:
gfx
:
:
IntSize
&
aSpreadRadius
const
mozilla
:
:
gfx
:
:
IntSize
&
aBlurRadius
const
mozilla
:
:
gfx
:
:
Rect
*
aDirtyRect
=
nullptr
const
mozilla
:
:
gfx
:
:
Rect
*
aSkipRect
=
nullptr
bool
aUseHardwareAccel
=
true
)
;
already_AddRefed
<
mozilla
:
:
gfx
:
:
SourceSurface
>
DoBlur
(
const
mozilla
:
:
gfx
:
:
Color
*
aShadowColor
=
nullptr
mozilla
:
:
gfx
:
:
IntPoint
*
aOutTopLeft
=
nullptr
)
;
void
Paint
(
gfxContext
*
aDestinationCtx
)
;
static
mozilla
:
:
gfx
:
:
IntSize
CalculateBlurRadius
(
const
gfxPoint
&
aStandardDeviation
)
;
static
void
BlurRectangle
(
gfxContext
*
aDestinationCtx
const
gfxRect
&
aRect
const
RectCornerRadii
*
aCornerRadii
const
gfxPoint
&
aBlurStdDev
const
Color
&
aShadowColor
const
gfxRect
&
aDirtyRect
const
gfxRect
&
aSkipRect
)
;
static
void
ShutdownBlurCache
(
)
;
void
BlurInsetBox
(
gfxContext
*
aDestinationCtx
const
mozilla
:
:
gfx
:
:
Rect
&
aDestinationRect
const
mozilla
:
:
gfx
:
:
Rect
&
aShadowClipRect
const
mozilla
:
:
gfx
:
:
IntSize
&
aBlurRadius
const
mozilla
:
:
gfx
:
:
Color
&
aShadowColor
const
RectCornerRadii
*
aInnerClipRadii
const
mozilla
:
:
gfx
:
:
Rect
&
aSkipRect
const
mozilla
:
:
gfx
:
:
Point
&
aShadowOffset
)
;
protected
:
already_AddRefed
<
mozilla
:
:
gfx
:
:
SourceSurface
>
GetInsetBlur
(
const
mozilla
:
:
gfx
:
:
Rect
&
aOuterRect
const
mozilla
:
:
gfx
:
:
Rect
&
aWhitespaceRect
bool
aIsDestRect
const
mozilla
:
:
gfx
:
:
Color
&
aShadowColor
const
mozilla
:
:
gfx
:
:
IntSize
&
aBlurRadius
const
RectCornerRadii
*
aInnerClipRadii
DrawTarget
*
aDestDrawTarget
bool
aMirrorCorners
)
;
RefPtr
<
DrawTarget
>
mDrawTarget
;
uint8_t
*
mData
;
mozilla
:
:
gfx
:
:
AlphaBoxBlur
mBlur
;
bool
mAccelerated
;
}
;
#
endif
