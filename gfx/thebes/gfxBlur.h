#
ifndef
GFX_BLUR_H
#
define
GFX_BLUR_H
#
include
"
gfxTypes
.
h
"
#
include
"
nsSize
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
gfxPoint
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
class
gfxContext
;
struct
gfxRect
;
namespace
mozilla
{
namespace
gfx
{
class
AlphaBoxBlur
;
struct
Color
;
struct
RectCornerRadii
;
class
SourceSurface
;
class
DrawTarget
;
}
}
class
gfxAlphaBoxBlur
{
typedef
mozilla
:
:
gfx
:
:
Color
Color
;
typedef
mozilla
:
:
gfx
:
:
RectCornerRadii
RectCornerRadii
;
public
:
gfxAlphaBoxBlur
(
)
;
~
gfxAlphaBoxBlur
(
)
;
gfxContext
*
Init
(
const
gfxRect
&
aRect
const
mozilla
:
:
gfx
:
:
IntSize
&
aSpreadRadius
const
mozilla
:
:
gfx
:
:
IntSize
&
aBlurRadius
const
gfxRect
*
aDirtyRect
const
gfxRect
*
aSkipRect
)
;
gfxContext
*
GetContext
(
)
{
return
mContext
;
}
already_AddRefed
<
mozilla
:
:
gfx
:
:
SourceSurface
>
DoBlur
(
mozilla
:
:
gfx
:
:
DrawTarget
*
aDT
mozilla
:
:
gfx
:
:
IntPoint
*
aTopLeft
)
;
void
Paint
(
gfxContext
*
aDestinationCtx
)
;
static
mozilla
:
:
gfx
:
:
IntSize
CalculateBlurRadius
(
const
gfxPoint
&
aStandardDeviation
)
;
static
void
BlurRectangle
(
gfxContext
*
aDestinationCtx
const
gfxRect
&
aRect
RectCornerRadii
*
aCornerRadii
const
gfxPoint
&
aBlurStdDev
const
Color
&
aShadowColor
const
gfxRect
&
aDirtyRect
const
gfxRect
&
aSkipRect
)
;
static
void
ShutdownBlurCache
(
)
;
void
BlurInsetBox
(
gfxContext
*
aDestinationCtx
const
mozilla
:
:
gfx
:
:
Rect
aDestinationRect
const
mozilla
:
:
gfx
:
:
Rect
aShadowClipRect
const
mozilla
:
:
gfx
:
:
IntSize
aBlurRadius
const
mozilla
:
:
gfx
:
:
IntSize
aSpreadRadius
const
mozilla
:
:
gfx
:
:
Color
&
aShadowColor
const
bool
aHasBorderRadius
const
RectCornerRadii
&
aInnerClipRadii
const
mozilla
:
:
gfx
:
:
Rect
aSkipRect
)
;
protected
:
already_AddRefed
<
mozilla
:
:
gfx
:
:
SourceSurface
>
GetInsetBlur
(
mozilla
:
:
gfx
:
:
Rect
&
aOuterRect
mozilla
:
:
gfx
:
:
Rect
&
aInnerRect
const
mozilla
:
:
gfx
:
:
IntSize
&
aBlurRadius
const
mozilla
:
:
gfx
:
:
IntSize
&
aSpreadRadius
const
RectCornerRadii
&
aInnerClipRadii
const
mozilla
:
:
gfx
:
:
Color
&
aShadowColor
const
bool
&
aHasBorderRadius
mozilla
:
:
gfx
:
:
IntPoint
&
aOutTopLeft
gfxContext
*
aDestinationCtx
)
;
RefPtr
<
gfxContext
>
mContext
;
nsAutoArrayPtr
<
unsigned
char
>
mData
;
mozilla
:
:
UniquePtr
<
mozilla
:
:
gfx
:
:
AlphaBoxBlur
>
mBlur
;
}
;
#
endif
