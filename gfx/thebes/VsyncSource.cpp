#
include
"
VsyncSource
.
h
"
#
include
"
nsThreadUtils
.
h
"
#
include
"
nsXULAppAPI
.
h
"
#
include
"
mozilla
/
VsyncDispatcher
.
h
"
#
include
"
MainThreadUtils
.
h
"
#
include
"
gfxPlatform
.
h
"
#
ifdef
MOZ_WAYLAND
#
include
"
WaylandVsyncSource
.
h
"
#
endif
namespace
mozilla
{
namespace
gfx
{
VsyncSource
:
:
VsyncSource
(
)
:
mDispatcherLock
(
"
display
dispatcher
lock
"
)
mVsyncDispatcherNeedsVsync
(
false
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
mVsyncDispatcher
=
new
VsyncDispatcher
(
this
)
;
}
VsyncSource
:
:
~
VsyncSource
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MutexAutoLock
lock
(
mDispatcherLock
)
;
mVsyncDispatcher
=
nullptr
;
}
void
VsyncSource
:
:
NotifyVsync
(
const
TimeStamp
&
aVsyncTimestamp
const
TimeStamp
&
aOutputTimestamp
)
{
MutexAutoLock
lock
(
mDispatcherLock
)
;
if
(
!
mVsyncDispatcher
)
{
return
;
}
mVsyncId
=
mVsyncId
.
Next
(
)
;
const
VsyncEvent
event
(
mVsyncId
aVsyncTimestamp
aOutputTimestamp
)
;
mVsyncDispatcher
-
>
NotifyVsync
(
event
)
;
}
TimeDuration
VsyncSource
:
:
GetVsyncRate
(
)
{
return
TimeDuration
:
:
FromMilliseconds
(
1000
.
0
/
60
.
0
)
;
}
void
VsyncSource
:
:
MoveListenersToNewSource
(
const
RefPtr
<
VsyncSource
>
&
aNewSource
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
MutexAutoLock
lock
(
mDispatcherLock
)
;
MutexAutoLock
newLock
(
aNewSource
-
>
mDispatcherLock
)
;
aNewSource
-
>
mVsyncDispatcher
=
mVsyncDispatcher
;
mVsyncDispatcher
-
>
MoveToSource
(
aNewSource
)
;
mVsyncDispatcher
=
nullptr
;
}
void
VsyncSource
:
:
NotifyVsyncDispatcherVsyncStatus
(
bool
aEnable
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
mVsyncDispatcherNeedsVsync
=
aEnable
;
UpdateVsyncStatus
(
)
;
}
void
VsyncSource
:
:
UpdateVsyncStatus
(
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
bool
enableVsync
=
false
;
{
MutexAutoLock
lock
(
mDispatcherLock
)
;
enableVsync
=
mVsyncDispatcherNeedsVsync
;
}
if
(
enableVsync
)
{
EnableVsync
(
)
;
}
else
{
DisableVsync
(
)
;
}
if
(
IsVsyncEnabled
(
)
!
=
enableVsync
)
{
NS_WARNING
(
"
Vsync
status
did
not
change
.
"
)
;
}
}
RefPtr
<
VsyncDispatcher
>
VsyncSource
:
:
GetVsyncDispatcher
(
)
{
return
mVsyncDispatcher
;
}
Maybe
<
TimeDuration
>
VsyncSource
:
:
GetFastestVsyncRate
(
)
{
Maybe
<
TimeDuration
>
retVal
;
if
(
!
gfxPlatform
:
:
Initialized
(
)
)
{
return
retVal
;
}
mozilla
:
:
gfx
:
:
VsyncSource
*
vsyncSource
=
gfxPlatform
:
:
GetPlatform
(
)
-
>
GetGlobalVsync
(
)
;
if
(
vsyncSource
&
&
vsyncSource
-
>
IsVsyncEnabled
(
)
)
{
retVal
.
emplace
(
vsyncSource
-
>
GetVsyncRate
(
)
)
;
}
#
ifdef
MOZ_WAYLAND
Maybe
<
TimeDuration
>
waylandRate
=
WaylandVsyncSource
:
:
GetFastestVsyncRate
(
)
;
if
(
waylandRate
)
{
if
(
!
retVal
)
{
retVal
.
emplace
(
*
waylandRate
)
;
}
else
if
(
*
waylandRate
<
*
retVal
)
{
retVal
=
waylandRate
;
}
}
#
endif
return
retVal
;
}
}
}
