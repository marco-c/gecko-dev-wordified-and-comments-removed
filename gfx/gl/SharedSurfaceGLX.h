#
ifndef
SHARED_SURFACE_GLX_H_
#
define
SHARED_SURFACE_GLX_H_
#
include
"
SharedSurface
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
class
gfxXlibSurface
;
namespace
mozilla
{
namespace
gl
{
class
SharedSurface_GLXDrawable
final
:
public
SharedSurface
{
public
:
const
RefPtr
<
gfxXlibSurface
>
mXlibSurface
;
static
UniquePtr
<
SharedSurface_GLXDrawable
>
Create
(
const
SharedSurfaceDesc
&
)
;
private
:
SharedSurface_GLXDrawable
(
const
SharedSurfaceDesc
&
const
RefPtr
<
gfxXlibSurface
>
&
xlibSurface
)
;
public
:
~
SharedSurface_GLXDrawable
(
)
;
virtual
void
ProducerAcquireImpl
(
)
override
{
}
virtual
void
ProducerReleaseImpl
(
)
override
;
virtual
void
LockProdImpl
(
)
override
;
virtual
void
UnlockProdImpl
(
)
override
;
Maybe
<
layers
:
:
SurfaceDescriptor
>
ToSurfaceDescriptor
(
)
override
;
virtual
bool
ReadbackBySharedHandle
(
gfx
:
:
DataSourceSurface
*
out_surface
)
override
;
}
;
class
SurfaceFactory_GLXDrawable
final
:
public
SurfaceFactory
{
public
:
explicit
SurfaceFactory_GLXDrawable
(
GLContext
&
)
;
virtual
UniquePtr
<
SharedSurface
>
CreateSharedImpl
(
const
SharedSurfaceDesc
&
desc
)
override
;
}
;
}
}
#
endif
