#
ifndef
SKIA_GL_GLUE_H_
#
define
SKIA_GL_GLUE_H_
#
ifdef
USE_SKIA_GPU
#
include
"
mozilla
/
gfx
/
RefPtrSkia
.
h
"
#
include
"
mozilla
/
nsRefPtr
.
h
"
struct
GrGLInterface
;
class
GrContext
;
namespace
mozilla
{
namespace
gl
{
class
GLContext
;
class
SkiaGLGlue
:
public
GenericAtomicRefCounted
{
public
:
MOZ_DECLARE_REFCOUNTED_VIRTUAL_TYPENAME
(
SkiaGLGlue
)
explicit
SkiaGLGlue
(
GLContext
*
context
)
;
GLContext
*
GetGLContext
(
)
const
{
return
mGLContext
.
get
(
)
;
}
GrContext
*
GetGrContext
(
)
const
{
return
mGrContext
.
get
(
)
;
}
protected
:
virtual
~
SkiaGLGlue
(
)
;
private
:
nsRefPtr
<
GLContext
>
mGLContext
;
gfx
:
:
RefPtrSkia
<
GrGLInterface
>
mGrGLInterface
;
gfx
:
:
RefPtrSkia
<
GrContext
>
mGrContext
;
}
;
}
}
#
else
class
GrContext
;
namespace
mozilla
{
namespace
gl
{
class
GLContext
;
class
SkiaGLGlue
:
public
GenericAtomicRefCounted
{
public
:
SkiaGLGlue
(
GLContext
*
context
)
;
GLContext
*
GetGLContext
(
)
const
{
return
nullptr
;
}
GrContext
*
GetGrContext
(
)
const
{
return
nullptr
;
}
}
;
}
}
#
endif
#
endif
