#
ifndef
GLCONTEXTWGL_H_
#
define
GLCONTEXTWGL_H_
#
include
"
GLContext
.
h
"
#
include
"
WGLLibrary
.
h
"
namespace
mozilla
{
namespace
gl
{
class
GLContextWGL
final
:
public
GLContext
{
public
:
MOZ_DECLARE_REFCOUNTED_VIRTUAL_TYPENAME
(
GLContextWGL
override
)
GLContextWGL
(
const
GLContextDesc
&
HDC
aDC
HGLRC
aContext
HWND
aWindow
=
nullptr
)
;
GLContextWGL
(
const
GLContextDesc
&
HANDLE
aPbuffer
HDC
aDC
HGLRC
aContext
int
aPixelFormat
)
;
~
GLContextWGL
(
)
;
virtual
GLContextType
GetContextType
(
)
const
override
{
return
GLContextType
:
:
WGL
;
}
virtual
bool
IsAliveImpl
(
)
const
override
;
virtual
bool
MakeCurrentImpl
(
)
const
override
;
virtual
bool
IsCurrentImpl
(
)
const
override
;
virtual
bool
IsDoubleBuffered
(
)
const
override
{
return
mIsDoubleBuffered
;
}
virtual
bool
SwapBuffers
(
)
override
;
virtual
void
GetWSIInfo
(
nsCString
*
const
out
)
const
override
;
Maybe
<
SymbolLoader
>
GetSymbolLoader
(
)
const
override
{
return
Some
(
sWGLLib
.
GetSymbolLoader
(
)
)
;
}
HGLRC
Context
(
)
{
return
mContext
;
}
protected
:
friend
class
GLContextProviderWGL
;
HDC
mDC
;
HGLRC
mContext
;
HWND
mWnd
;
HANDLE
mPBuffer
;
int
mPixelFormat
;
public
:
bool
mIsDoubleBuffered
=
false
;
}
;
}
}
#
endif
