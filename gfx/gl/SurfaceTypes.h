#
ifndef
SURFACE_TYPES_H_
#
define
SURFACE_TYPES_H_
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
<
stdint
.
h
>
namespace
mozilla
{
namespace
layers
{
class
LayersIPCChannel
;
}
namespace
gl
{
struct
SurfaceCaps
final
{
bool
any
=
false
;
bool
color
=
false
;
bool
alpha
=
false
;
bool
bpp16
=
false
;
bool
depth
=
false
;
bool
stencil
=
false
;
bool
premultAlpha
=
true
;
bool
preserve
=
false
;
RefPtr
<
layers
:
:
LayersIPCChannel
>
surfaceAllocator
;
SurfaceCaps
(
)
;
SurfaceCaps
(
const
SurfaceCaps
&
other
)
;
~
SurfaceCaps
(
)
;
void
Clear
(
)
{
*
this
=
{
}
;
}
SurfaceCaps
&
operator
=
(
const
SurfaceCaps
&
other
)
;
static
SurfaceCaps
ForRGB
(
)
{
SurfaceCaps
caps
;
caps
.
color
=
true
;
return
caps
;
}
static
SurfaceCaps
ForRGBA
(
)
{
SurfaceCaps
caps
;
caps
.
color
=
true
;
caps
.
alpha
=
true
;
return
caps
;
}
static
SurfaceCaps
Any
(
)
{
SurfaceCaps
caps
;
caps
.
any
=
true
;
return
caps
;
}
}
;
enum
class
SharedSurfaceType
:
uint8_t
{
Unknown
=
0
Basic
EGLImageShare
EGLSurfaceANGLE
DXGLInterop
DXGLInterop2
IOSurface
GLXDrawable
SharedGLTexture
AndroidSurfaceTexture
Max
}
;
enum
class
AttachmentType
:
uint8_t
{
Screen
=
0
GLTexture
GLRenderbuffer
Max
}
;
}
}
#
endif
