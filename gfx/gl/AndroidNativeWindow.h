#
ifndef
AndroidNativeWindow_h__
#
define
AndroidNativeWindow_h__
#
ifdef
MOZ_WIDGET_ANDROID
#
include
<
jni
.
h
>
#
include
<
android
/
native_window
.
h
>
#
include
<
android
/
native_window_jni
.
h
>
#
include
"
GeneratedJNIWrappers
.
h
"
#
include
"
SurfaceTexture
.
h
"
namespace
mozilla
{
namespace
gl
{
class
AndroidNativeWindow
{
public
:
AndroidNativeWindow
(
)
:
mNativeWindow
(
nullptr
)
{
}
AndroidNativeWindow
(
java
:
:
sdk
:
:
Surface
:
:
Param
aSurface
)
{
mNativeWindow
=
ANativeWindow_fromSurface
(
jni
:
:
GetEnvForThread
(
)
aSurface
.
Get
(
)
)
;
}
AndroidNativeWindow
(
java
:
:
GeckoSurface
:
:
Param
aSurface
)
{
auto
surf
=
java
:
:
sdk
:
:
Surface
:
:
LocalRef
(
java
:
:
sdk
:
:
Surface
:
:
Ref
:
:
From
(
aSurface
)
)
;
mNativeWindow
=
ANativeWindow_fromSurface
(
jni
:
:
GetEnvForThread
(
)
surf
.
Get
(
)
)
;
}
~
AndroidNativeWindow
(
)
{
if
(
mNativeWindow
)
{
ANativeWindow_release
(
mNativeWindow
)
;
mNativeWindow
=
nullptr
;
}
}
ANativeWindow
*
NativeWindow
(
)
const
{
return
mNativeWindow
;
}
private
:
ANativeWindow
*
mNativeWindow
;
}
;
}
}
#
endif
#
endif
