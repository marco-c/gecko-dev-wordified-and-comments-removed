#
ifndef
SHARED_SURFACE_DMABUF_H_
#
define
SHARED_SURFACE_DMABUF_H_
#
include
"
SharedSurface
.
h
"
#
include
"
mozilla
/
widget
/
DMABufSurface
.
h
"
namespace
mozilla
{
namespace
gl
{
class
GLContext
;
class
GLLibraryEGL
;
class
SharedSurface_DMABUF
final
:
public
SharedSurface
{
public
:
const
RefPtr
<
DMABufSurface
>
mSurface
;
static
UniquePtr
<
SharedSurface_DMABUF
>
Create
(
const
SharedSurfaceDesc
&
)
;
private
:
SharedSurface_DMABUF
(
const
SharedSurfaceDesc
&
UniquePtr
<
MozFramebuffer
>
RefPtr
<
DMABufSurface
>
)
;
void
UpdateProdTexture
(
const
MutexAutoLock
&
curAutoLock
)
;
public
:
virtual
~
SharedSurface_DMABUF
(
)
;
virtual
void
LockProdImpl
(
)
override
{
}
virtual
void
UnlockProdImpl
(
)
override
{
}
virtual
bool
ProducerAcquireImpl
(
)
override
{
return
true
;
}
virtual
void
ProducerReleaseImpl
(
)
override
;
virtual
bool
ProducerReadAcquireImpl
(
)
override
{
return
true
;
}
virtual
void
ProducerReadReleaseImpl
(
)
override
{
}
Maybe
<
layers
:
:
SurfaceDescriptor
>
ToSurfaceDescriptor
(
)
override
;
void
WaitForBufferOwnership
(
)
override
;
}
;
class
SurfaceFactory_DMABUF
:
public
SurfaceFactory
{
public
:
static
UniquePtr
<
SurfaceFactory_DMABUF
>
Create
(
GLContext
&
gl
)
;
explicit
SurfaceFactory_DMABUF
(
GLContext
&
)
;
public
:
virtual
UniquePtr
<
SharedSurface
>
CreateSharedImpl
(
const
SharedSurfaceDesc
&
desc
)
override
{
return
SharedSurface_DMABUF
:
:
Create
(
desc
)
;
}
bool
CanCreateSurface
(
GLContext
&
gl
)
;
}
;
}
}
#
endif
