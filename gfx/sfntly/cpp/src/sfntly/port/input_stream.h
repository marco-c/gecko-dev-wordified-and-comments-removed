#
ifndef
SFNTLY_CPP_SRC_SFNTLY_PORT_INPUT_STREAM_H_
#
define
SFNTLY_CPP_SRC_SFNTLY_PORT_INPUT_STREAM_H_
#
include
"
sfntly
/
port
/
type
.
h
"
namespace
sfntly
{
class
InputStream
{
public
:
virtual
int32_t
Length
(
)
=
0
;
virtual
int32_t
Available
(
)
=
0
;
virtual
void
Close
(
)
=
0
;
virtual
void
Mark
(
int32_t
readlimit
)
=
0
;
virtual
bool
MarkSupported
(
)
=
0
;
virtual
int32_t
Read
(
)
=
0
;
virtual
int32_t
Read
(
std
:
:
vector
<
uint8_t
>
*
b
)
=
0
;
virtual
int32_t
Read
(
std
:
:
vector
<
uint8_t
>
*
b
int32_t
offset
int32_t
length
)
=
0
;
virtual
void
Reset
(
)
=
0
;
virtual
int64_t
Skip
(
int64_t
n
)
=
0
;
protected
:
virtual
~
InputStream
(
)
{
}
}
;
class
PushbackInputStream
:
public
InputStream
{
public
:
virtual
void
Unread
(
std
:
:
vector
<
uint8_t
>
*
b
)
=
0
;
virtual
void
Unread
(
std
:
:
vector
<
uint8_t
>
*
b
int32_t
offset
int32_t
length
)
=
0
;
}
;
}
#
endif
