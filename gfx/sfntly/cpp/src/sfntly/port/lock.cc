#
include
"
sfntly
/
port
/
lock
.
h
"
namespace
sfntly
{
#
if
defined
(
WIN32
)
Lock
:
:
Lock
(
)
{
:
:
InitializeCriticalSectionAndSpinCount
(
&
os_lock_
2000
)
;
}
Lock
:
:
~
Lock
(
)
{
:
:
DeleteCriticalSection
(
&
os_lock_
)
;
}
bool
Lock
:
:
Try
(
)
{
if
(
:
:
TryEnterCriticalSection
(
&
os_lock_
)
!
=
FALSE
)
{
return
true
;
}
return
false
;
}
void
Lock
:
:
Acquire
(
)
{
:
:
EnterCriticalSection
(
&
os_lock_
)
;
}
void
Lock
:
:
Unlock
(
)
{
:
:
LeaveCriticalSection
(
&
os_lock_
)
;
}
#
else
Lock
:
:
Lock
(
)
{
pthread_mutex_init
(
&
os_lock_
NULL
)
;
}
Lock
:
:
~
Lock
(
)
{
pthread_mutex_destroy
(
&
os_lock_
)
;
}
bool
Lock
:
:
Try
(
)
{
return
(
pthread_mutex_trylock
(
&
os_lock_
)
=
=
0
)
;
}
void
Lock
:
:
Acquire
(
)
{
pthread_mutex_lock
(
&
os_lock_
)
;
}
void
Lock
:
:
Unlock
(
)
{
pthread_mutex_unlock
(
&
os_lock_
)
;
}
#
endif
}
