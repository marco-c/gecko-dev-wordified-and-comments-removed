#
include
"
sfntly
/
table
/
table_based_table_builder
.
h
"
namespace
sfntly
{
TableBasedTableBuilder
:
:
~
TableBasedTableBuilder
(
)
{
}
int32_t
TableBasedTableBuilder
:
:
SubSerialize
(
WritableFontData
*
data
)
{
UNREFERENCED_PARAMETER
(
data
)
;
return
0
;
}
bool
TableBasedTableBuilder
:
:
SubReadyToSerialize
(
)
{
return
false
;
}
int32_t
TableBasedTableBuilder
:
:
SubDataSizeToSerialize
(
)
{
return
0
;
}
void
TableBasedTableBuilder
:
:
SubDataSet
(
)
{
table_
=
NULL
;
}
CALLER_ATTACH
FontDataTable
*
TableBasedTableBuilder
:
:
Build
(
)
{
FontDataTablePtr
table
=
static_cast
<
FontDataTable
*
>
(
GetTable
(
)
)
;
return
table
.
Detach
(
)
;
}
TableBasedTableBuilder
:
:
TableBasedTableBuilder
(
Header
*
header
WritableFontData
*
data
)
:
Table
:
:
Builder
(
header
data
)
{
}
TableBasedTableBuilder
:
:
TableBasedTableBuilder
(
Header
*
header
ReadableFontData
*
data
)
:
Table
:
:
Builder
(
header
data
)
{
}
TableBasedTableBuilder
:
:
TableBasedTableBuilder
(
Header
*
header
)
:
Table
:
:
Builder
(
header
)
{
}
Table
*
TableBasedTableBuilder
:
:
GetTable
(
)
{
if
(
!
table_
)
{
ReadableFontData
*
data
=
InternalReadData
(
)
;
if
(
data
)
table_
.
Attach
(
down_cast
<
Table
*
>
(
SubBuildTable
(
data
)
)
)
;
}
return
table_
;
}
}
