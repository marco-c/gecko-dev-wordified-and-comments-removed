#
include
"
sfntly
/
table
/
bitmap
/
ebsc_table
.
h
"
namespace
sfntly
{
EbscTable
:
:
~
EbscTable
(
)
{
}
int32_t
EbscTable
:
:
Version
(
)
{
return
data_
-
>
ReadFixed
(
Offset
:
:
kVersion
)
;
}
int32_t
EbscTable
:
:
NumSizes
(
)
{
return
data_
-
>
ReadULongAsInt
(
Offset
:
:
kNumSizes
)
;
}
EbscTable
:
:
EbscTable
(
Header
*
header
ReadableFontData
*
data
)
:
Table
(
header
data
)
{
}
EbscTable
:
:
BitmapScaleTable
:
:
~
BitmapScaleTable
(
)
{
}
EbscTable
:
:
BitmapScaleTable
:
:
BitmapScaleTable
(
ReadableFontData
*
data
)
:
SubTable
(
data
)
{
}
int32_t
EbscTable
:
:
BitmapScaleTable
:
:
PpemX
(
)
{
return
data_
-
>
ReadByte
(
Offset
:
:
kBitmapScaleTable_ppemX
)
;
}
int32_t
EbscTable
:
:
BitmapScaleTable
:
:
PpemY
(
)
{
return
data_
-
>
ReadByte
(
Offset
:
:
kBitmapScaleTable_ppemY
)
;
}
int32_t
EbscTable
:
:
BitmapScaleTable
:
:
SubstitutePpemX
(
)
{
return
data_
-
>
ReadByte
(
Offset
:
:
kBitmapScaleTable_substitutePpemX
)
;
}
int32_t
EbscTable
:
:
BitmapScaleTable
:
:
SubstitutePpemY
(
)
{
return
data_
-
>
ReadByte
(
Offset
:
:
kBitmapScaleTable_substitutePpemY
)
;
}
EbscTable
:
:
Builder
:
:
~
Builder
(
)
{
}
CALLER_ATTACH
EbscTable
:
:
Builder
*
EbscTable
:
:
Builder
:
:
CreateBuilder
(
Header
*
header
WritableFontData
*
data
)
{
EbscTableBuilderPtr
builder
=
new
EbscTable
:
:
Builder
(
header
data
)
;
return
builder
.
Detach
(
)
;
}
EbscTable
:
:
Builder
:
:
Builder
(
Header
*
header
WritableFontData
*
data
)
:
Table
:
:
Builder
(
header
data
)
{
}
EbscTable
:
:
Builder
:
:
Builder
(
Header
*
header
ReadableFontData
*
data
)
:
Table
:
:
Builder
(
header
data
)
{
}
CALLER_ATTACH
FontDataTable
*
EbscTable
:
:
Builder
:
:
SubBuildTable
(
ReadableFontData
*
data
)
{
EbscTablePtr
output
=
new
EbscTable
(
header
(
)
data
)
;
return
output
.
Detach
(
)
;
}
void
EbscTable
:
:
Builder
:
:
SubDataSet
(
)
{
}
int32_t
EbscTable
:
:
Builder
:
:
SubDataSizeToSerialize
(
)
{
return
0
;
}
bool
EbscTable
:
:
Builder
:
:
SubReadyToSerialize
(
)
{
return
false
;
}
int32_t
EbscTable
:
:
Builder
:
:
SubSerialize
(
WritableFontData
*
new_data
)
{
UNREFERENCED_PARAMETER
(
new_data
)
;
return
0
;
}
}
