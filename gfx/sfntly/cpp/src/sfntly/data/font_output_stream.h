#
ifndef
SFNTLY_CPP_SRC_SFNTLY_DATA_FONT_OUTPUT_STREAM_H_
#
define
SFNTLY_CPP_SRC_SFNTLY_DATA_FONT_OUTPUT_STREAM_H_
#
include
"
sfntly
/
port
/
type
.
h
"
#
include
"
sfntly
/
port
/
output_stream
.
h
"
namespace
sfntly
{
class
FontOutputStream
:
public
OutputStream
{
public
:
explicit
FontOutputStream
(
OutputStream
*
os
)
;
virtual
~
FontOutputStream
(
)
;
virtual
void
Write
(
uint8_t
b
)
;
virtual
void
Write
(
std
:
:
vector
<
uint8_t
>
*
b
)
;
virtual
void
Write
(
std
:
:
vector
<
uint8_t
>
*
b
int32_t
off
int32_t
len
)
;
virtual
void
Write
(
uint8_t
*
b
int32_t
off
int32_t
len
)
;
virtual
void
WriteChar
(
uint8_t
c
)
;
virtual
void
WriteUShort
(
int32_t
us
)
;
virtual
void
WriteShort
(
int32_t
s
)
;
virtual
void
WriteUInt24
(
int32_t
ui
)
;
virtual
void
WriteULong
(
int64_t
ul
)
;
virtual
void
WriteLong
(
int64_t
l
)
;
virtual
void
WriteFixed
(
int32_t
l
)
;
virtual
void
WriteDateTime
(
int64_t
date
)
;
virtual
void
Flush
(
)
;
virtual
void
Close
(
)
;
private
:
OutputStream
*
stream_
;
size_t
position_
;
}
;
}
#
endif
