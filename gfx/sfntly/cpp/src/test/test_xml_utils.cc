#
include
<
map
>
#
include
<
string
>
#
include
"
test
/
test_xml_utils
.
h
"
#
include
"
test
/
tinyxml
/
tinyxml
.
h
"
namespace
sfntly
{
void
InternalGetNodesWithName
(
const
TiXmlNode
*
node
const
std
:
:
string
&
name
TiXmlNodeVector
*
wanted_nodes
)
{
if
(
node
-
>
ValueStr
(
)
=
=
name
)
wanted_nodes
-
>
push_back
(
node
)
;
for
(
const
TiXmlNode
*
child
=
node
-
>
FirstChild
(
)
;
child
!
=
NULL
;
child
=
child
-
>
NextSibling
(
)
)
{
InternalGetNodesWithName
(
child
name
wanted_nodes
)
;
}
}
TiXmlNodeVector
*
GetNodesWithName
(
const
TiXmlNode
*
node
const
std
:
:
string
&
name
)
{
TiXmlNodeVector
*
wanted_nodes
=
new
TiXmlNodeVector
;
InternalGetNodesWithName
(
node
name
wanted_nodes
)
;
return
wanted_nodes
;
}
const
TiXmlAttribute
*
GetAttribute
(
const
TiXmlNode
*
node
const
std
:
:
string
&
name
)
{
for
(
const
TiXmlAttribute
*
attribute
=
node
-
>
ToElement
(
)
-
>
FirstAttribute
(
)
;
attribute
!
=
NULL
;
attribute
=
attribute
-
>
Next
(
)
)
{
if
(
attribute
-
>
Name
(
)
=
=
name
)
{
return
attribute
;
}
}
return
NULL
;
}
}
