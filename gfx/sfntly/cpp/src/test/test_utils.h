#
ifndef
SFNTLY_CPP_SRC_TEST_TEST_UTILS_H_
#
define
SFNTLY_CPP_SRC_TEST_TEST_UTILS_H_
#
include
"
sfntly
/
port
/
type
.
h
"
#
include
<
unicode
/
ucnv
.
h
>
#
include
<
string
>
#
include
"
sfntly
/
font
.
h
"
#
include
"
sfntly
/
data
/
memory_byte_array
.
h
"
namespace
sfntly
{
class
TestUtils
{
TestUtils
(
)
;
public
:
static
bool
Equals
(
ByteArray
*
b1
int32_t
offset1
ByteArray
*
b2
int32_t
offset2
)
;
static
bool
Equals
(
ByteArray
*
b1
int32_t
offset1
ByteArray
*
b2
int32_t
offset2
int32_t
length
)
;
static
void
CreateNewFile
(
const
char
*
file_path
)
;
static
void
DumpLongAsString
(
int32_t
i
std
:
:
string
*
result
)
;
static
int64_t
CheckSum
(
ByteArray
*
b
int32_t
offset
int32_t
length
)
;
static
int32_t
EncodeOneChar
(
UConverter
*
encoder
int16_t
uchar
)
;
static
UConverter
*
GetEncoder
(
const
char
*
charsetName
)
;
private
:
static
const
char
EXTENSION_SEPARATOR
=
'
.
'
;
public
:
static
const
char
*
Extension
(
const
char
*
file_path
)
;
}
;
}
#
endif
