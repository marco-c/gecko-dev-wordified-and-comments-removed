#
ifndef
TYPOGRAPHY_FONT_SFNTLY_SRC_SAMPLE_SUBTLY_CHARACTER_PREDICATE_H_
#
define
TYPOGRAPHY_FONT_SFNTLY_SRC_SAMPLE_SUBTLY_CHARACTER_PREDICATE_H_
#
include
"
sfntly
/
port
/
refcount
.
h
"
#
include
"
sfntly
/
port
/
type
.
h
"
namespace
subtly
{
class
CharacterPredicate
:
virtual
public
sfntly
:
:
RefCount
{
public
:
CharacterPredicate
(
)
{
}
virtual
~
CharacterPredicate
(
)
{
}
virtual
bool
operator
(
)
(
int32_t
character
)
const
=
0
;
}
;
class
AcceptRange
:
public
CharacterPredicate
public
sfntly
:
:
RefCounted
<
AcceptRange
>
{
public
:
AcceptRange
(
int32_t
start
int32_t
end
)
;
~
AcceptRange
(
)
;
virtual
bool
operator
(
)
(
int32_t
character
)
const
;
private
:
int32_t
start_
;
int32_t
end_
;
}
;
class
AcceptSet
:
public
CharacterPredicate
public
sfntly
:
:
RefCounted
<
AcceptSet
>
{
public
:
explicit
AcceptSet
(
sfntly
:
:
IntegerSet
*
characters
)
;
~
AcceptSet
(
)
;
virtual
bool
operator
(
)
(
int32_t
character
)
const
;
private
:
sfntly
:
:
IntegerSet
*
characters_
;
}
;
class
AcceptAll
:
public
CharacterPredicate
public
sfntly
:
:
RefCounted
<
AcceptAll
>
{
public
:
AcceptAll
(
)
{
}
~
AcceptAll
(
)
{
}
virtual
bool
operator
(
)
(
int32_t
character
)
const
;
}
;
}
#
endif
