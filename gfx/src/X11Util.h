#
ifndef
mozilla_X11Util_h
#
define
mozilla_X11Util_h
#
if
defined
(
MOZ_WIDGET_GTK
)
#
include
<
gdk
/
gdk
.
h
>
#
include
<
gdk
/
gdkx
.
h
>
#
include
"
mozilla
/
WidgetUtilsGtk
.
h
"
#
include
"
X11UndefineNone
.
h
"
#
else
#
error
Unknown
toolkit
#
endif
#
include
<
string
.
h
>
#
include
"
mozilla
/
Scoped
.
h
"
namespace
mozilla
{
inline
Display
*
DefaultXDisplay
(
)
{
#
if
defined
(
MOZ_WIDGET_GTK
)
GdkDisplay
*
gdkDisplay
=
gdk_display_get_default
(
)
;
if
(
mozilla
:
:
widget
:
:
GdkIsX11Display
(
gdkDisplay
)
)
{
return
GDK_DISPLAY_XDISPLAY
(
gdkDisplay
)
;
}
#
endif
return
nullptr
;
}
void
FindVisualAndDepth
(
Display
*
aDisplay
VisualID
aVisualID
Visual
*
*
aVisual
int
*
aDepth
)
;
void
FinishX
(
Display
*
aDisplay
)
;
template
<
typename
T
>
struct
ScopedXFreePtrTraits
{
typedef
T
*
type
;
static
T
*
empty
(
)
{
return
nullptr
;
}
static
void
release
(
T
*
ptr
)
{
if
(
ptr
!
=
nullptr
)
XFree
(
ptr
)
;
}
}
;
SCOPED_TEMPLATE
(
ScopedXFree
ScopedXFreePtrTraits
)
}
#
endif
