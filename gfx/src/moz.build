XPIDL_SOURCES
+
=
[
"
nsIFontEnumerator
.
idl
"
]
XPIDL_MODULE
=
"
gfx
"
DEFINES
[
"
MOZ_APP_VERSION
"
]
=
'
"
%
s
"
'
%
CONFIG
[
"
MOZ_APP_VERSION
"
]
EXPORTS
+
=
[
"
DriverCrashGuard
.
h
"
"
FilterDescription
.
h
"
"
FilterSupport
.
h
"
"
gfxCrashReporterUtils
.
h
"
"
gfxTelemetry
.
h
"
"
nsBoundingMetrics
.
h
"
"
nsColor
.
h
"
"
nsColorNameList
.
h
"
"
nsColorNames
.
h
"
"
nsCoord
.
h
"
"
nsDeviceContext
.
h
"
"
nsFont
.
h
"
"
nsFontCache
.
h
"
"
nsFontMetrics
.
h
"
"
nsGfxCIID
.
h
"
"
nsITheme
.
h
"
"
nsMargin
.
h
"
"
nsPoint
.
h
"
"
nsRect
.
h
"
"
nsRectAbsolute
.
h
"
"
nsRegion
.
h
"
"
nsRegionFwd
.
h
"
"
nsSize
.
h
"
"
nsTransform2D
.
h
"
"
RegionBuilder
.
h
"
"
X11UndefineNone
.
h
"
]
EXPORTS
.
mozilla
+
=
[
"
AppUnits
.
h
"
"
ArrayView
.
h
"
"
FontPropertyTypes
.
h
"
"
RelativeLuminanceUtils
.
h
"
]
EXPORTS
.
mozilla
.
gfx
+
=
[
"
CompositorHitTestInfo
.
h
"
"
WPFGpuRaster
.
h
"
]
if
CONFIG
[
"
MOZ_X11
"
]
:
EXPORTS
.
mozilla
+
=
[
"
X11Util
.
h
"
]
SOURCES
+
=
[
"
X11Util
.
cpp
"
]
UNIFIED_SOURCES
+
=
[
"
DriverCrashGuard
.
cpp
"
"
FilterSupport
.
cpp
"
"
gfxCrashReporterUtils
.
cpp
"
"
gfxTelemetry
.
cpp
"
"
nsColor
.
cpp
"
"
nsFont
.
cpp
"
"
nsFontCache
.
cpp
"
"
nsFontMetrics
.
cpp
"
"
nsRect
.
cpp
"
"
nsRegion
.
cpp
"
"
nsThebesFontEnumerator
.
cpp
"
"
nsTransform2D
.
cpp
"
]
SOURCES
+
=
[
"
nsDeviceContext
.
cpp
"
]
XPCOM_MANIFESTS
+
=
[
"
components
.
conf
"
]
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
LOCAL_INCLUDES
+
=
[
"
/
dom
/
ipc
"
"
/
gfx
/
cairo
/
cairo
/
src
"
]
FINAL_LIBRARY
=
"
xul
"
if
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
gtk
"
:
CXXFLAGS
+
=
CONFIG
[
"
MOZ_GTK3_CFLAGS
"
]
CXXFLAGS
+
=
CONFIG
[
"
MOZ_PANGO_CFLAGS
"
]
