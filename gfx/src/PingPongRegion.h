#
ifndef
PingPongRegion_h__
#
define
PingPongRegion_h__
template
<
typename
T
>
class
PingPongRegion
{
typedef
typename
T
:
:
RectType
RectType
;
public
:
PingPongRegion
(
)
{
rgn
=
&
rgn1
;
}
void
SubOut
(
const
RectType
&
aOther
)
{
T
*
nextRgn
=
nextRegion
(
)
;
nextRgn
-
>
Sub
(
*
rgn
aOther
)
;
rgn
=
nextRgn
;
}
void
OrWith
(
const
RectType
&
aOther
)
{
T
*
nextRgn
=
nextRegion
(
)
;
nextRgn
-
>
Or
(
*
rgn
aOther
)
;
rgn
=
nextRgn
;
}
T
&
Region
(
)
{
return
*
rgn
;
}
private
:
T
*
nextRegion
(
)
{
if
(
rgn
=
=
&
rgn1
)
{
return
&
rgn2
;
}
else
{
return
&
rgn1
;
}
}
T
*
rgn
;
T
rgn1
;
T
rgn2
;
}
;
#
endif
