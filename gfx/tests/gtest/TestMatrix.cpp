#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
gfx
/
Matrix
.
h
"
using
namespace
mozilla
;
using
namespace
mozilla
:
:
gfx
;
TEST
(
Matrix
TransformAndClipRect
)
{
Rect
c
(
100
100
100
100
)
;
Matrix4x4
m
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
50
20
20
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
250
50
20
20
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
250
250
20
20
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
250
20
20
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
50
100
20
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
150
50
100
20
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
250
100
20
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
150
250
100
20
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
50
20
100
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
150
20
100
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
250
50
20
100
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
250
150
20
100
)
c
)
.
IsEmpty
(
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
50
100
100
)
c
)
.
IsEqualInterior
(
Rect
(
100
100
50
50
)
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
150
50
100
100
)
c
)
.
IsEqualInterior
(
Rect
(
150
100
50
50
)
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
150
150
100
100
)
c
)
.
IsEqualInterior
(
Rect
(
150
150
50
50
)
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
150
100
100
)
c
)
.
IsEqualInterior
(
Rect
(
100
150
50
50
)
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
110
110
80
80
)
c
)
.
IsEqualInterior
(
Rect
(
110
110
80
80
)
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
50
200
200
)
c
)
.
IsEqualInterior
(
Rect
(
100
100
100
100
)
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
50
200
100
)
c
)
.
IsEqualInterior
(
Rect
(
100
100
100
50
)
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
150
200
100
)
c
)
.
IsEqualInterior
(
Rect
(
100
150
100
50
)
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
50
50
100
200
)
c
)
.
IsEqualInterior
(
Rect
(
100
100
50
100
)
)
)
;
EXPECT_TRUE
(
m
.
TransformAndClipBounds
(
Rect
(
150
50
100
200
)
c
)
.
IsEqualInterior
(
Rect
(
150
100
50
100
)
)
)
;
Matrix4x4
m2
=
Matrix4x4
:
:
From2D
(
Matrix
(
22
.
68
0
0
12
16
164
)
)
;
EXPECT_TRUE
(
m2
.
TransformAndClipBounds
(
Rect
(
0
0
100
100
)
Rect
(
1024
1024
0
0
)
)
.
IsEmpty
(
)
)
;
}
TEST
(
Matrix4x4Flagged
Mult
)
{
Matrix4x4Flagged
simple
=
Matrix4x4
:
:
Translation
(
Point
(
42
42
)
)
*
Matrix4x4
:
:
Scaling
(
3
3
1
)
;
Matrix4x4
general
(
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
)
;
Matrix4x4Flagged
realResult
=
Matrix4x4Flagged
(
simple
.
GetMatrix
(
)
*
general
)
;
Matrix4x4Flagged
flaggedResult
=
simple
*
Matrix4x4Flagged
(
general
)
;
EXPECT_EQ
(
realResult
flaggedResult
)
;
Matrix4x4Flagged
mixedResult
=
simple
*
general
;
EXPECT_EQ
(
realResult
mixedResult
)
;
}
