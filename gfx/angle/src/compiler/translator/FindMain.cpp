#
include
"
compiler
/
translator
/
FindMain
.
h
"
#
include
"
compiler
/
translator
/
IntermNode
.
h
"
namespace
sh
{
TIntermFunctionDefinition
*
FindMain
(
TIntermBlock
*
root
)
{
for
(
TIntermNode
*
node
:
*
root
-
>
getSequence
(
)
)
{
TIntermFunctionDefinition
*
nodeFunction
=
node
-
>
getAsFunctionDefinition
(
)
;
if
(
nodeFunction
!
=
nullptr
&
&
nodeFunction
-
>
getFunctionSymbolInfo
(
)
-
>
isMain
(
)
)
{
return
nodeFunction
;
}
}
return
nullptr
;
}
TIntermBlock
*
FindMainBody
(
TIntermBlock
*
root
)
{
TIntermFunctionDefinition
*
main
=
FindMain
(
root
)
;
ASSERT
(
main
!
=
nullptr
)
;
TIntermBlock
*
mainBody
=
main
-
>
getBody
(
)
;
ASSERT
(
mainBody
!
=
nullptr
)
;
return
mainBody
;
}
}
