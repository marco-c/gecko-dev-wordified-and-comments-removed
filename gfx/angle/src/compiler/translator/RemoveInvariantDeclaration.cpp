#
include
"
compiler
/
translator
/
RemoveInvariantDeclaration
.
h
"
#
include
"
compiler
/
translator
/
IntermTraverse
.
h
"
namespace
sh
{
namespace
{
class
RemoveInvariantDeclarationTraverser
:
public
TIntermTraverser
{
public
:
RemoveInvariantDeclarationTraverser
(
)
:
TIntermTraverser
(
true
false
false
)
{
}
private
:
bool
visitInvariantDeclaration
(
Visit
visit
TIntermInvariantDeclaration
*
node
)
override
{
TIntermSequence
emptyReplacement
;
mMultiReplacements
.
push_back
(
NodeReplaceWithMultipleEntry
(
getParentNode
(
)
-
>
getAsBlock
(
)
node
emptyReplacement
)
)
;
return
false
;
}
}
;
}
void
RemoveInvariantDeclaration
(
TIntermNode
*
root
)
{
RemoveInvariantDeclarationTraverser
traverser
;
root
-
>
traverse
(
&
traverser
)
;
traverser
.
updateTree
(
)
;
}
}
