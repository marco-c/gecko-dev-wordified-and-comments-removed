#
ifndef
COMPILER_TRANSLATOR_TRANSLATORHLSL_H_
#
define
COMPILER_TRANSLATOR_TRANSLATORHLSL_H_
#
include
"
compiler
/
translator
/
Compiler
.
h
"
class
TranslatorHLSL
:
public
TCompiler
{
public
:
TranslatorHLSL
(
sh
:
:
GLenum
type
ShShaderSpec
spec
ShShaderOutput
output
)
;
TranslatorHLSL
*
getAsTranslatorHLSL
(
)
override
{
return
this
;
}
bool
hasInterfaceBlock
(
const
std
:
:
string
&
interfaceBlockName
)
const
;
unsigned
int
getInterfaceBlockRegister
(
const
std
:
:
string
&
interfaceBlockName
)
const
;
const
std
:
:
map
<
std
:
:
string
unsigned
int
>
*
getUniformRegisterMap
(
)
const
;
protected
:
void
translate
(
TIntermNode
*
root
int
compileOptions
)
override
;
bool
shouldCollectVariables
(
int
compileOptions
)
override
{
return
true
;
}
std
:
:
map
<
std
:
:
string
unsigned
int
>
mInterfaceBlockRegisterMap
;
std
:
:
map
<
std
:
:
string
unsigned
int
>
mUniformRegisterMap
;
}
;
#
endif
