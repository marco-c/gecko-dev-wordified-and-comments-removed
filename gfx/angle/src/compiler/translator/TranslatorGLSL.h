#
ifndef
COMPILER_TRANSLATOR_TRANSLATORGLSL_H_
#
define
COMPILER_TRANSLATOR_TRANSLATORGLSL_H_
#
include
"
compiler
/
translator
/
Compiler
.
h
"
class
TranslatorGLSL
:
public
TCompiler
{
public
:
TranslatorGLSL
(
sh
:
:
GLenum
type
ShShaderSpec
spec
ShShaderOutput
output
)
;
protected
:
void
initBuiltInFunctionEmulator
(
BuiltInFunctionEmulator
*
emu
ShCompileOptions
compileOptions
)
override
;
void
translate
(
TIntermNode
*
root
ShCompileOptions
compileOptions
)
override
;
bool
shouldFlattenPragmaStdglInvariantAll
(
)
override
;
private
:
void
writeVersion
(
TIntermNode
*
root
)
;
void
writeExtensionBehavior
(
TIntermNode
*
root
)
;
void
conditionallyOutputInvariantDeclaration
(
const
char
*
builtinVaryingName
)
;
}
;
#
endif
