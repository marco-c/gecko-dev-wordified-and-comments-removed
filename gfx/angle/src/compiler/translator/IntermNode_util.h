#
ifndef
COMPILER_TRANSLATOR_INTERMNODEUTIL_H_
#
define
COMPILER_TRANSLATOR_INTERMNODEUTIL_H_
#
include
"
compiler
/
translator
/
IntermNode
.
h
"
namespace
sh
{
TIntermFunctionPrototype
*
CreateInternalFunctionPrototypeNode
(
const
TType
&
returnType
const
char
*
name
const
TSymbolUniqueId
&
functionId
)
;
TIntermFunctionDefinition
*
CreateInternalFunctionDefinitionNode
(
const
TType
&
returnType
const
char
*
name
TIntermBlock
*
functionBody
const
TSymbolUniqueId
&
functionId
)
;
TIntermAggregate
*
CreateInternalFunctionCallNode
(
const
TType
&
returnType
const
char
*
name
const
TSymbolUniqueId
&
functionId
TIntermSequence
*
arguments
)
;
TIntermTyped
*
CreateZeroNode
(
const
TType
&
type
)
;
TIntermConstantUnion
*
CreateIndexNode
(
int
index
)
;
TIntermConstantUnion
*
CreateBoolNode
(
bool
value
)
;
TIntermBlock
*
EnsureBlock
(
TIntermNode
*
node
)
;
TIntermSymbol
*
ReferenceGlobalVariable
(
const
TString
&
name
const
TSymbolTable
&
symbolTable
)
;
TIntermSymbol
*
ReferenceBuiltInVariable
(
const
TString
&
name
const
TSymbolTable
&
symbolTable
int
shaderVersion
)
;
TIntermTyped
*
CreateBuiltInFunctionCallNode
(
const
TString
&
name
TIntermSequence
*
arguments
const
TSymbolTable
&
symbolTable
int
shaderVersion
)
;
}
#
endif
