#
ifndef
LIBGLESV2_ENTRYPOINTGLES20EXT_H_
#
define
LIBGLESV2_ENTRYPOINTGLES20EXT_H_
#
include
<
GLES2
/
gl2
.
h
>
#
include
<
GLES2
/
gl2ext
.
h
>
#
include
<
export
.
h
>
namespace
gl
{
ANGLE_EXPORT
void
GL_APIENTRY
BlitFramebufferANGLE
(
GLint
srcX0
GLint
srcY0
GLint
srcX1
GLint
srcY1
GLint
dstX0
GLint
dstY0
GLint
dstX1
GLint
dstY1
GLbitfield
mask
GLenum
filter
)
;
ANGLE_EXPORT
void
GL_APIENTRY
RenderbufferStorageMultisampleANGLE
(
GLenum
target
GLsizei
samples
GLenum
internalformat
GLsizei
width
GLsizei
height
)
;
ANGLE_EXPORT
void
GL_APIENTRY
DiscardFramebufferEXT
(
GLenum
target
GLsizei
numAttachments
const
GLenum
*
attachments
)
;
ANGLE_EXPORT
void
GL_APIENTRY
DeleteFencesNV
(
GLsizei
n
const
GLuint
*
fences
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GenFencesNV
(
GLsizei
n
GLuint
*
fences
)
;
ANGLE_EXPORT
GLboolean
GL_APIENTRY
IsFenceNV
(
GLuint
fence
)
;
ANGLE_EXPORT
GLboolean
GL_APIENTRY
TestFenceNV
(
GLuint
fence
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GetFenceivNV
(
GLuint
fence
GLenum
pname
GLint
*
params
)
;
ANGLE_EXPORT
void
GL_APIENTRY
FinishFenceNV
(
GLuint
fence
)
;
ANGLE_EXPORT
void
GL_APIENTRY
SetFenceNV
(
GLuint
fence
GLenum
condition
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GetTranslatedShaderSourceANGLE
(
GLuint
shader
GLsizei
bufsize
GLsizei
*
length
GLchar
*
source
)
;
ANGLE_EXPORT
void
GL_APIENTRY
TexStorage2DEXT
(
GLenum
target
GLsizei
levels
GLenum
internalformat
GLsizei
width
GLsizei
height
)
;
ANGLE_EXPORT
GLenum
GL_APIENTRY
GetGraphicsResetStatusEXT
(
void
)
;
ANGLE_EXPORT
void
GL_APIENTRY
ReadnPixelsEXT
(
GLint
x
GLint
y
GLsizei
width
GLsizei
height
GLenum
format
GLenum
type
GLsizei
bufSize
void
*
data
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GetnUniformfvEXT
(
GLuint
program
GLint
location
GLsizei
bufSize
float
*
params
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GetnUniformivEXT
(
GLuint
program
GLint
location
GLsizei
bufSize
GLint
*
params
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GenQueriesEXT
(
GLsizei
n
GLuint
*
ids
)
;
ANGLE_EXPORT
void
GL_APIENTRY
DeleteQueriesEXT
(
GLsizei
n
const
GLuint
*
ids
)
;
ANGLE_EXPORT
GLboolean
GL_APIENTRY
IsQueryEXT
(
GLuint
id
)
;
ANGLE_EXPORT
void
GL_APIENTRY
BeginQueryEXT
(
GLenum
target
GLuint
id
)
;
ANGLE_EXPORT
void
GL_APIENTRY
EndQueryEXT
(
GLenum
target
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GetQueryivEXT
(
GLenum
target
GLenum
pname
GLint
*
params
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GetQueryObjectuivEXT
(
GLuint
id
GLenum
pname
GLuint
*
params
)
;
ANGLE_EXPORT
void
GL_APIENTRY
DrawBuffersEXT
(
GLsizei
n
const
GLenum
*
bufs
)
;
ANGLE_EXPORT
void
GL_APIENTRY
DrawArraysInstancedANGLE
(
GLenum
mode
GLint
first
GLsizei
count
GLsizei
primcount
)
;
ANGLE_EXPORT
void
GL_APIENTRY
DrawElementsInstancedANGLE
(
GLenum
mode
GLsizei
count
GLenum
type
const
void
*
indices
GLsizei
primcount
)
;
ANGLE_EXPORT
void
GL_APIENTRY
VertexAttribDivisorANGLE
(
GLuint
index
GLuint
divisor
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GetProgramBinaryOES
(
GLuint
program
GLsizei
bufSize
GLsizei
*
length
GLenum
*
binaryFormat
GLvoid
*
binary
)
;
ANGLE_EXPORT
void
GL_APIENTRY
ProgramBinaryOES
(
GLuint
program
GLenum
binaryFormat
const
GLvoid
*
binary
GLint
length
)
;
ANGLE_EXPORT
void
*
GL_APIENTRY
MapBufferOES
(
GLenum
target
GLenum
access
)
;
ANGLE_EXPORT
GLboolean
GL_APIENTRY
UnmapBufferOES
(
GLenum
target
)
;
ANGLE_EXPORT
void
GL_APIENTRY
GetBufferPointervOES
(
GLenum
target
GLenum
pname
GLvoid
*
*
params
)
;
ANGLE_EXPORT
void
*
GL_APIENTRY
MapBufferRangeEXT
(
GLenum
target
GLintptr
offset
GLsizeiptr
length
GLbitfield
access
)
;
ANGLE_EXPORT
void
GL_APIENTRY
FlushMappedBufferRangeEXT
(
GLenum
target
GLintptr
offset
GLsizeiptr
length
)
;
ANGLE_EXPORT
void
GL_APIENTRY
InsertEventMarkerEXT
(
GLsizei
length
const
char
*
marker
)
;
ANGLE_EXPORT
void
GL_APIENTRY
PushGroupMarkerEXT
(
GLsizei
length
const
char
*
marker
)
;
ANGLE_EXPORT
void
GL_APIENTRY
PopGroupMarkerEXT
(
)
;
ANGLE_EXPORT
void
GL_APIENTRY
EGLImageTargetTexture2DOES
(
GLenum
target
GLeglImageOES
image
)
;
ANGLE_EXPORT
void
GL_APIENTRY
EGLImageTargetRenderbufferStorageOES
(
GLenum
target
GLeglImageOES
image
)
;
}
#
endif
