#
ifndef
ANGLE_TEST_INSTANTIATE_H_
#
define
ANGLE_TEST_INSTANTIATE_H_
#
include
"
common
/
debug
.
h
"
namespace
angle
{
struct
PlatformParameters
;
bool
IsPlatformAvailable
(
const
PlatformParameters
&
param
)
;
template
<
typename
T
>
std
:
:
vector
<
T
>
FilterTestParams
(
const
T
*
params
size_t
numParams
)
{
std
:
:
vector
<
T
>
filtered
;
for
(
size_t
i
=
0
;
i
<
numParams
;
i
+
+
)
{
if
(
IsPlatformAvailable
(
params
[
i
]
)
)
{
filtered
.
push_back
(
params
[
i
]
)
;
}
}
return
filtered
;
}
#
define
ANGLE_INSTANTIATE_TEST
(
testName
firstParam
.
.
.
)
\
const
decltype
(
firstParam
)
testName
#
#
params
[
]
=
{
firstParam
#
#
__VA_ARGS__
}
;
\
INSTANTIATE_TEST_CASE_P
(
testName
testing
:
:
ValuesIn
(
:
:
angle
:
:
FilterTestParams
(
testName
#
#
params
ArraySize
(
testName
#
#
params
)
)
)
)
;
}
#
endif
