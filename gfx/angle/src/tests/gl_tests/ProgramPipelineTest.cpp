#
include
"
test_utils
/
ANGLETest
.
h
"
#
include
"
test_utils
/
gl_raii
.
h
"
using
namespace
angle
;
namespace
{
class
ProgramPipelineTest
:
public
ANGLETest
{
protected
:
ProgramPipelineTest
(
)
{
setWindowWidth
(
64
)
;
setWindowHeight
(
64
)
;
setConfigRedBits
(
8
)
;
setConfigGreenBits
(
8
)
;
setConfigBlueBits
(
8
)
;
setConfigAlphaBits
(
8
)
;
}
}
;
TEST_P
(
ProgramPipelineTest
GenerateProgramPipelineObject
)
{
GLuint
pipeline
;
glGenProgramPipelines
(
1
&
pipeline
)
;
if
(
getClientMajorVersion
(
)
<
3
|
|
getClientMinorVersion
(
)
<
1
)
{
EXPECT_GL_ERROR
(
GL_INVALID_OPERATION
)
;
}
else
{
EXPECT_GL_NO_ERROR
(
)
;
glDeleteProgramPipelines
(
1
&
pipeline
)
;
EXPECT_GL_NO_ERROR
(
)
;
}
}
class
ProgramPipelineTest31
:
public
ProgramPipelineTest
{
}
;
TEST_P
(
ProgramPipelineTest31
GenOrDeleteProgramPipelineTest
)
{
GLuint
pipeline
;
glGenProgramPipelines
(
-
1
&
pipeline
)
;
EXPECT_GL_ERROR
(
GL_INVALID_VALUE
)
;
glGenProgramPipelines
(
0
&
pipeline
)
;
EXPECT_GL_NO_ERROR
(
)
;
glDeleteProgramPipelines
(
-
1
&
pipeline
)
;
EXPECT_GL_ERROR
(
GL_INVALID_VALUE
)
;
glDeleteProgramPipelines
(
0
&
pipeline
)
;
EXPECT_GL_NO_ERROR
(
)
;
}
TEST_P
(
ProgramPipelineTest31
BindProgramPipelineTest
)
{
glBindProgramPipeline
(
0
)
;
EXPECT_GL_NO_ERROR
(
)
;
glBindProgramPipeline
(
2
)
;
EXPECT_GL_ERROR
(
GL_INVALID_OPERATION
)
;
GLuint
pipeline
;
glGenProgramPipelines
(
1
&
pipeline
)
;
glBindProgramPipeline
(
pipeline
)
;
EXPECT_GL_NO_ERROR
(
)
;
glDeleteProgramPipelines
(
1
&
pipeline
)
;
glBindProgramPipeline
(
pipeline
)
;
EXPECT_GL_ERROR
(
GL_INVALID_OPERATION
)
;
}
TEST_P
(
ProgramPipelineTest31
IsProgramPipelineTest
)
{
EXPECT_EQ
(
GL_FALSE
glIsProgramPipeline
(
0
)
)
;
EXPECT_GL_NO_ERROR
(
)
;
EXPECT_EQ
(
GL_FALSE
glIsProgramPipeline
(
2
)
)
;
EXPECT_GL_NO_ERROR
(
)
;
GLuint
pipeline
;
glGenProgramPipelines
(
1
&
pipeline
)
;
glBindProgramPipeline
(
pipeline
)
;
EXPECT_EQ
(
GL_TRUE
glIsProgramPipeline
(
pipeline
)
)
;
EXPECT_GL_NO_ERROR
(
)
;
glBindProgramPipeline
(
0
)
;
glDeleteProgramPipelines
(
1
&
pipeline
)
;
EXPECT_EQ
(
GL_FALSE
glIsProgramPipeline
(
pipeline
)
)
;
EXPECT_GL_NO_ERROR
(
)
;
}
ANGLE_INSTANTIATE_TEST
(
ProgramPipelineTest
ES3_OPENGL
(
)
ES3_OPENGLES
(
)
ES31_OPENGL
(
)
ES31_OPENGLES
(
)
)
;
ANGLE_INSTANTIATE_TEST
(
ProgramPipelineTest31
ES31_OPENGL
(
)
ES31_OPENGLES
(
)
)
;
}
