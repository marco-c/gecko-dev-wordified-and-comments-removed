#
ifndef
TCU_ANGLE_WIN32_NATIVE_DISPLAY_FACTORY_H_
#
define
TCU_ANGLE_WIN32_NATIVE_DISPLAY_FACTORY_H_
#
include
"
tcuDefs
.
hpp
"
#
include
"
egluNativeDisplay
.
hpp
"
#
include
"
eglwDefs
.
hpp
"
namespace
tcu
{
class
EventState
{
public
:
EventState
(
)
:
mQuit
(
false
)
{
}
bool
quitSignaled
(
)
const
{
return
mQuit
;
}
;
void
signalQuitEvent
(
)
{
mQuit
=
true
;
}
;
private
:
bool
mQuit
;
}
;
class
ANGLENativeDisplayFactory
:
public
eglu
:
:
NativeDisplayFactory
{
public
:
ANGLENativeDisplayFactory
(
const
std
:
:
string
&
name
const
std
:
:
string
&
description
const
std
:
:
vector
<
eglw
:
:
EGLAttrib
>
&
platformAttributes
EventState
*
eventState
)
;
~
ANGLENativeDisplayFactory
(
)
override
;
eglu
:
:
NativeDisplay
*
createDisplay
(
const
eglw
:
:
EGLAttrib
*
attribList
)
const
override
;
private
:
std
:
:
vector
<
eglw
:
:
EGLAttrib
>
mPlatformAttributes
;
}
;
}
#
endif
