#
ifndef
LIBANGLE_PROGRAMPIPELINE_H_
#
define
LIBANGLE_PROGRAMPIPELINE_H_
#
include
<
memory
>
#
include
"
common
/
angleutils
.
h
"
#
include
"
libANGLE
/
Debug
.
h
"
#
include
"
libANGLE
/
RefCountObject
.
h
"
namespace
rx
{
class
GLImplFactory
;
class
ProgramPipelineImpl
;
}
;
namespace
gl
{
class
Context
;
class
ProgramPipeline
;
class
ProgramPipelineState
final
:
angle
:
:
NonCopyable
{
public
:
ProgramPipelineState
(
)
;
~
ProgramPipelineState
(
)
;
const
std
:
:
string
&
getLabel
(
)
const
;
private
:
friend
class
ProgramPipeline
;
std
:
:
string
mLabel
;
}
;
class
ProgramPipeline
final
:
public
RefCountObject
public
LabeledObject
{
public
:
ProgramPipeline
(
rx
:
:
GLImplFactory
*
factory
GLuint
handle
)
;
~
ProgramPipeline
(
)
override
;
Error
onDestroy
(
const
Context
*
context
)
override
{
return
NoError
(
)
;
}
void
setLabel
(
const
std
:
:
string
&
label
)
override
;
const
std
:
:
string
&
getLabel
(
)
const
override
;
rx
:
:
ProgramPipelineImpl
*
getImplementation
(
)
const
;
private
:
std
:
:
unique_ptr
<
rx
:
:
ProgramPipelineImpl
>
mProgramPipeline
;
ProgramPipelineState
mState
;
}
;
}
#
endif
