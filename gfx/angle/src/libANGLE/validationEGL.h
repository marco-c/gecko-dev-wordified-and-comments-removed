#
ifndef
LIBANGLE_VALIDATIONEGL_H_
#
define
LIBANGLE_VALIDATIONEGL_H_
#
include
"
libANGLE
/
Error
.
h
"
#
include
<
EGL
/
egl
.
h
>
namespace
gl
{
class
Context
;
}
namespace
egl
{
class
AttributeMap
;
struct
Config
;
class
Device
;
class
Display
;
class
Image
;
class
Surface
;
Error
ValidateDisplay
(
const
Display
*
display
)
;
Error
ValidateSurface
(
const
Display
*
display
Surface
*
surface
)
;
Error
ValidateConfig
(
const
Display
*
display
const
Config
*
config
)
;
Error
ValidateContext
(
const
Display
*
display
gl
:
:
Context
*
context
)
;
Error
ValidateImage
(
const
Display
*
display
const
Image
*
image
)
;
Error
ValidateCreateContext
(
Display
*
display
Config
*
configuration
gl
:
:
Context
*
shareContext
const
AttributeMap
&
attributes
)
;
Error
ValidateCreateWindowSurface
(
Display
*
display
Config
*
config
EGLNativeWindowType
window
const
AttributeMap
&
attributes
)
;
Error
ValidateCreatePbufferSurface
(
Display
*
display
Config
*
config
const
AttributeMap
&
attributes
)
;
Error
ValidateCreatePbufferFromClientBuffer
(
Display
*
display
EGLenum
buftype
EGLClientBuffer
buffer
Config
*
config
const
AttributeMap
&
attributes
)
;
Error
ValidateCreateImageKHR
(
const
Display
*
display
gl
:
:
Context
*
context
EGLenum
target
EGLClientBuffer
buffer
const
AttributeMap
&
attributes
)
;
Error
ValidateDestroyImageKHR
(
const
Display
*
display
const
Image
*
image
)
;
Error
ValidateCreateDeviceANGLE
(
EGLint
device_type
void
*
native_device
const
EGLAttrib
*
attrib_list
)
;
Error
ValidateReleaseDeviceANGLE
(
Device
*
device
)
;
Error
ValidateCompatibleConfigs
(
const
Display
*
display
const
Config
*
config1
const
Surface
*
surface
const
Config
*
config2
EGLint
surfaceType
)
;
}
#
endif
