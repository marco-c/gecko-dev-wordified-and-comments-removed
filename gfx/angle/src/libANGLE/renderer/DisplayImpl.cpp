#
include
"
libANGLE
/
renderer
/
DisplayImpl
.
h
"
#
include
"
libANGLE
/
Display
.
h
"
#
include
"
libANGLE
/
Surface
.
h
"
namespace
rx
{
DisplayImpl
:
:
DisplayImpl
(
const
egl
:
:
DisplayState
&
state
)
:
mState
(
state
)
mExtensionsInitialized
(
false
)
mCapsInitialized
(
false
)
{
}
DisplayImpl
:
:
~
DisplayImpl
(
)
{
ASSERT
(
mState
.
surfaceSet
.
empty
(
)
)
;
}
const
egl
:
:
DisplayExtensions
&
DisplayImpl
:
:
getExtensions
(
)
const
{
if
(
!
mExtensionsInitialized
)
{
generateExtensions
(
&
mExtensions
)
;
mExtensionsInitialized
=
true
;
}
return
mExtensions
;
}
egl
:
:
Error
DisplayImpl
:
:
validateClientBuffer
(
const
egl
:
:
Config
*
configuration
EGLenum
buftype
EGLClientBuffer
clientBuffer
const
egl
:
:
AttributeMap
&
attribs
)
const
{
UNREACHABLE
(
)
;
return
egl
:
:
EglBadDisplay
(
)
<
<
"
DisplayImpl
:
:
validateClientBuffer
unimplemented
.
"
;
}
const
egl
:
:
Caps
&
DisplayImpl
:
:
getCaps
(
)
const
{
if
(
!
mCapsInitialized
)
{
generateCaps
(
&
mCaps
)
;
mCapsInitialized
=
true
;
}
return
mCaps
;
}
}
