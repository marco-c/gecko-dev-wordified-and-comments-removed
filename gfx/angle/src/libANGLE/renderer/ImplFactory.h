#
ifndef
LIBANGLE_RENDERER_IMPLFACTORY_H_
#
define
LIBANGLE_RENDERER_IMPLFACTORY_H_
#
include
"
libANGLE
/
Framebuffer
.
h
"
#
include
"
libANGLE
/
Program
.
h
"
#
include
"
libANGLE
/
Shader
.
h
"
#
include
"
libANGLE
/
VertexArray
.
h
"
namespace
rx
{
class
BufferImpl
;
class
CompilerImpl
;
class
FenceNVImpl
;
class
FenceSyncImpl
;
class
FramebufferImpl
;
class
ProgramImpl
;
class
QueryImpl
;
class
RenderbufferImpl
;
class
SamplerImpl
;
class
ShaderImpl
;
class
TextureImpl
;
class
TransformFeedbackImpl
;
class
VertexArrayImpl
;
class
ImplFactory
:
angle
:
:
NonCopyable
{
public
:
ImplFactory
(
)
{
}
virtual
~
ImplFactory
(
)
{
}
virtual
CompilerImpl
*
createCompiler
(
)
=
0
;
virtual
ShaderImpl
*
createShader
(
const
gl
:
:
Shader
:
:
Data
&
data
)
=
0
;
virtual
ProgramImpl
*
createProgram
(
const
gl
:
:
Program
:
:
Data
&
data
)
=
0
;
virtual
FramebufferImpl
*
createFramebuffer
(
const
gl
:
:
Framebuffer
:
:
Data
&
data
)
=
0
;
virtual
TextureImpl
*
createTexture
(
GLenum
target
)
=
0
;
virtual
RenderbufferImpl
*
createRenderbuffer
(
)
=
0
;
virtual
BufferImpl
*
createBuffer
(
)
=
0
;
virtual
VertexArrayImpl
*
createVertexArray
(
const
gl
:
:
VertexArray
:
:
Data
&
data
)
=
0
;
virtual
QueryImpl
*
createQuery
(
GLenum
type
)
=
0
;
virtual
FenceNVImpl
*
createFenceNV
(
)
=
0
;
virtual
FenceSyncImpl
*
createFenceSync
(
)
=
0
;
virtual
TransformFeedbackImpl
*
createTransformFeedback
(
)
=
0
;
virtual
SamplerImpl
*
createSampler
(
)
=
0
;
}
;
}
#
endif
