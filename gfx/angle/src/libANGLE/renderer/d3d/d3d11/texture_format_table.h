#
ifndef
LIBANGLE_RENDERER_D3D_D3D11_TEXTUREFORMATTABLE_H_
#
define
LIBANGLE_RENDERER_D3D_D3D11_TEXTUREFORMATTABLE_H_
#
include
<
map
>
#
include
"
common
/
platform
.
h
"
#
include
"
libANGLE
/
renderer
/
d3d
/
formatutilsD3D
.
h
"
#
include
"
libANGLE
/
renderer
/
d3d
/
d3d11
/
Renderer11
.
h
"
namespace
rx
{
namespace
d3d11
{
struct
TextureFormat
{
TextureFormat
(
)
;
DXGI_FORMAT
texFormat
;
DXGI_FORMAT
srvFormat
;
DXGI_FORMAT
rtvFormat
;
DXGI_FORMAT
dsvFormat
;
DXGI_FORMAT
renderFormat
;
DXGI_FORMAT
swizzleTexFormat
;
DXGI_FORMAT
swizzleSRVFormat
;
DXGI_FORMAT
swizzleRTVFormat
;
InitializeTextureDataFunction
dataInitializerFunction
;
typedef
std
:
:
map
<
GLenum
LoadImageFunction
>
LoadFunctionMap
;
LoadFunctionMap
loadFunctions
;
}
;
const
TextureFormat
&
GetTextureFormatInfo
(
GLenum
internalformat
const
Renderer11DeviceCaps
&
renderer11DeviceCaps
)
;
}
}
#
endif
