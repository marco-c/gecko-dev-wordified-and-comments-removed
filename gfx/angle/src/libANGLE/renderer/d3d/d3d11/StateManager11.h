#
ifndef
LIBANGLE_RENDERER_D3D11_STATEMANAGER11_H_
#
define
LIBANGLE_RENDERER_D3D11_STATEMANAGER11_H_
#
include
"
libANGLE
/
angletypes
.
h
"
#
include
"
libANGLE
/
Data
.
h
"
#
include
"
libANGLE
/
State
.
h
"
#
include
"
libANGLE
/
renderer
/
d3d
/
d3d11
/
RenderStateCache
.
h
"
namespace
rx
{
class
Renderer11
;
class
StateManager11
final
:
angle
:
:
NonCopyable
{
public
:
StateManager11
(
Renderer11
*
renderer11
)
;
~
StateManager11
(
)
;
void
syncState
(
const
gl
:
:
State
&
state
const
gl
:
:
State
:
:
DirtyBits
&
dirtyBits
)
;
gl
:
:
Error
setBlendState
(
const
gl
:
:
Framebuffer
*
framebuffer
const
gl
:
:
BlendState
&
blendState
const
gl
:
:
ColorF
&
blendColor
unsigned
int
sampleMask
)
;
void
forceSetBlendState
(
)
{
mBlendStateIsDirty
=
true
;
}
private
:
bool
mBlendStateIsDirty
;
gl
:
:
BlendState
mCurBlendState
;
gl
:
:
ColorF
mCurBlendColor
;
unsigned
int
mCurSampleMask
;
Renderer11
*
mRenderer11
;
}
;
}
#
endif
