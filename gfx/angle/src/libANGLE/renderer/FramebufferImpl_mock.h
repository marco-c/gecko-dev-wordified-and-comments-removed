#
ifndef
LIBANGLE_RENDERER_FRAMEBUFFERIMPLMOCK_H_
#
define
LIBANGLE_RENDERER_FRAMEBUFFERIMPLMOCK_H_
#
include
"
gmock
/
gmock
.
h
"
#
include
"
libANGLE
/
renderer
/
FramebufferImpl
.
h
"
namespace
rx
{
class
MockFramebufferImpl
:
public
rx
:
:
FramebufferImpl
{
public
:
MockFramebufferImpl
(
)
:
rx
:
:
FramebufferImpl
(
gl
:
:
FramebufferState
(
)
)
{
}
virtual
~
MockFramebufferImpl
(
)
{
destroy
(
)
;
}
MOCK_METHOD2
(
discard
gl
:
:
Error
(
size_t
const
GLenum
*
)
)
;
MOCK_METHOD2
(
invalidate
gl
:
:
Error
(
size_t
const
GLenum
*
)
)
;
MOCK_METHOD3
(
invalidateSub
gl
:
:
Error
(
size_t
const
GLenum
*
const
gl
:
:
Rectangle
&
)
)
;
MOCK_METHOD2
(
clear
gl
:
:
Error
(
ContextImpl
*
GLbitfield
)
)
;
MOCK_METHOD4
(
clearBufferfv
gl
:
:
Error
(
ContextImpl
*
GLenum
GLint
const
GLfloat
*
)
)
;
MOCK_METHOD4
(
clearBufferuiv
gl
:
:
Error
(
ContextImpl
*
GLenum
GLint
const
GLuint
*
)
)
;
MOCK_METHOD4
(
clearBufferiv
gl
:
:
Error
(
ContextImpl
*
GLenum
GLint
const
GLint
*
)
)
;
MOCK_METHOD5
(
clearBufferfi
gl
:
:
Error
(
ContextImpl
*
GLenum
GLint
GLfloat
GLint
)
)
;
MOCK_CONST_METHOD0
(
getImplementationColorReadFormat
GLenum
(
)
)
;
MOCK_CONST_METHOD0
(
getImplementationColorReadType
GLenum
(
)
)
;
MOCK_CONST_METHOD5
(
readPixels
gl
:
:
Error
(
ContextImpl
*
const
gl
:
:
Rectangle
&
GLenum
GLenum
GLvoid
*
)
)
;
MOCK_METHOD5
(
blit
gl
:
:
Error
(
ContextImpl
*
const
gl
:
:
Rectangle
&
const
gl
:
:
Rectangle
&
GLbitfield
GLenum
)
)
;
MOCK_CONST_METHOD0
(
checkStatus
bool
(
)
)
;
MOCK_METHOD1
(
syncState
void
(
const
gl
:
:
Framebuffer
:
:
DirtyBits
&
)
)
;
MOCK_METHOD0
(
destroy
void
(
)
)
;
}
;
inline
:
:
testing
:
:
NiceMock
<
MockFramebufferImpl
>
*
MakeFramebufferMock
(
)
{
:
:
testing
:
:
NiceMock
<
MockFramebufferImpl
>
*
framebufferImpl
=
new
:
:
testing
:
:
NiceMock
<
MockFramebufferImpl
>
(
)
;
ON_CALL
(
*
framebufferImpl
checkStatus
(
)
)
.
WillByDefault
(
:
:
testing
:
:
Return
(
true
)
)
;
EXPECT_CALL
(
*
framebufferImpl
destroy
(
)
)
.
Times
(
1
)
.
RetiresOnSaturation
(
)
;
return
framebufferImpl
;
}
}
#
endif
