#
ifndef
LIBANGLE_RENDERER_VULKAN_FORMAT_H_
#
define
LIBANGLE_RENDERER_VULKAN_FORMAT_H_
#
include
<
vulkan
/
vulkan
.
h
>
#
include
"
libANGLE
/
renderer
/
Format
.
h
"
#
include
"
libANGLE
/
renderer
/
renderer_utils
.
h
"
namespace
rx
{
namespace
vk
{
struct
Format
final
:
private
angle
:
:
NonCopyable
{
constexpr
Format
(
GLenum
internalFormat
angle
:
:
Format
:
:
ID
formatID
VkFormat
native
InitializeTextureDataFunction
initFunction
)
;
static
const
Format
&
Get
(
GLenum
internalFormat
)
;
const
angle
:
:
Format
&
format
(
)
const
;
LoadFunctionMap
getLoadFunctions
(
)
const
;
GLenum
internalFormat
;
angle
:
:
Format
:
:
ID
formatID
;
VkFormat
native
;
InitializeTextureDataFunction
dataInitializerFunction
;
}
;
constexpr
Format
:
:
Format
(
GLenum
internalFormat
angle
:
:
Format
:
:
ID
formatID
VkFormat
native
InitializeTextureDataFunction
initFunction
)
:
internalFormat
(
internalFormat
)
formatID
(
formatID
)
native
(
native
)
dataInitializerFunction
(
initFunction
)
{
}
VkFormat
GetNativeVertexFormat
(
gl
:
:
VertexFormatType
vertexFormat
)
;
}
}
#
endif
