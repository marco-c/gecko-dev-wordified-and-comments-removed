#
include
"
libANGLE
/
renderer
/
vulkan
/
RenderbufferVk
.
h
"
#
include
"
common
/
debug
.
h
"
namespace
rx
{
RenderbufferVk
:
:
RenderbufferVk
(
)
:
RenderbufferImpl
(
)
{
}
RenderbufferVk
:
:
~
RenderbufferVk
(
)
{
}
gl
:
:
Error
RenderbufferVk
:
:
setStorage
(
GLenum
internalformat
size_t
width
size_t
height
)
{
UNIMPLEMENTED
(
)
;
return
gl
:
:
Error
(
GL_INVALID_OPERATION
)
;
}
gl
:
:
Error
RenderbufferVk
:
:
setStorageMultisample
(
size_t
samples
GLenum
internalformat
size_t
width
size_t
height
)
{
UNIMPLEMENTED
(
)
;
return
gl
:
:
Error
(
GL_INVALID_OPERATION
)
;
}
gl
:
:
Error
RenderbufferVk
:
:
setStorageEGLImageTarget
(
egl
:
:
Image
*
image
)
{
UNIMPLEMENTED
(
)
;
return
gl
:
:
Error
(
GL_INVALID_OPERATION
)
;
}
gl
:
:
Error
RenderbufferVk
:
:
getAttachmentRenderTarget
(
const
gl
:
:
FramebufferAttachment
:
:
Target
&
target
FramebufferAttachmentRenderTarget
*
*
rtOut
)
{
UNIMPLEMENTED
(
)
;
return
gl
:
:
Error
(
GL_INVALID_OPERATION
)
;
}
}
