#
ifndef
LIBANGLE_RENDERER_GL_WORKAROUNDSGL_H_
#
define
LIBANGLE_RENDERER_GL_WORKAROUNDSGL_H_
namespace
rx
{
struct
WorkaroundsGL
{
WorkaroundsGL
(
)
:
avoid1BitAlphaTextureFormats
(
false
)
rgba4IsNotSupportedForColorRendering
(
false
)
doesSRGBClearsOnLinearFramebufferAttachments
(
false
)
doWhileGLSLCausesGPUHang
(
false
)
finishDoesNotCauseQueriesToBeAvailable
(
false
)
alwaysCallUseProgramAfterLink
(
false
)
unpackOverlappingRowsSeparatelyUnpackBuffer
(
false
)
emulateAbsIntFunction
(
false
)
addAndTrueToLoopCondition
(
false
)
emulateIsnanFloat
(
false
)
useUnusedBlocksWithStandardOrSharedLayout
(
false
)
dontRemoveInvariantForFragmentInput
(
false
)
removeInvariantAndCentroidForESSL3
(
false
)
{
}
bool
avoid1BitAlphaTextureFormats
;
bool
rgba4IsNotSupportedForColorRendering
;
bool
doesSRGBClearsOnLinearFramebufferAttachments
;
bool
doWhileGLSLCausesGPUHang
;
bool
finishDoesNotCauseQueriesToBeAvailable
;
bool
alwaysCallUseProgramAfterLink
;
bool
unpackOverlappingRowsSeparatelyUnpackBuffer
;
bool
packOverlappingRowsSeparatelyPackBuffer
;
bool
initializeCurrentVertexAttributes
;
bool
emulateAbsIntFunction
;
bool
addAndTrueToLoopCondition
;
bool
unpackLastRowSeparatelyForPaddingInclusion
;
bool
packLastRowSeparatelyForPaddingInclusion
;
bool
emulateIsnanFloat
;
bool
useUnusedBlocksWithStandardOrSharedLayout
;
bool
dontRemoveInvariantForFragmentInput
;
bool
removeInvariantAndCentroidForESSL3
;
}
;
}
#
endif
