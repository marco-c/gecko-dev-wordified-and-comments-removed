#
include
"
libANGLE
/
renderer
/
gl
/
egl
/
PbufferSurfaceEGL
.
h
"
namespace
rx
{
PbufferSurfaceEGL
:
:
PbufferSurfaceEGL
(
const
egl
:
:
SurfaceState
&
state
const
FunctionsEGL
*
egl
EGLConfig
config
const
std
:
:
vector
<
EGLint
>
&
attribList
RendererGL
*
renderer
)
:
SurfaceEGL
(
state
egl
config
attribList
renderer
)
{
}
PbufferSurfaceEGL
:
:
~
PbufferSurfaceEGL
(
)
{
}
egl
:
:
Error
PbufferSurfaceEGL
:
:
initialize
(
const
egl
:
:
Display
*
display
)
{
mSurface
=
mEGL
-
>
createPbufferSurface
(
mConfig
mAttribList
.
data
(
)
)
;
if
(
mSurface
=
=
EGL_NO_SURFACE
)
{
return
egl
:
:
Error
(
mEGL
-
>
getError
(
)
"
eglCreatePbufferSurface
failed
"
)
;
}
return
egl
:
:
NoError
(
)
;
}
}
