#
ifndef
LIBANGLE_RENDERER_GL_GLX_FUNCTIONSGLX_H_
#
define
LIBANGLE_RENDERER_GL_GLX_FUNCTIONSGLX_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
libANGLE
/
renderer
/
gl
/
glx
/
platform_glx
.
h
"
namespace
rx
{
class
FunctionsGLX
{
public
:
FunctionsGLX
(
)
;
~
FunctionsGLX
(
)
;
bool
initialize
(
Display
*
xDisplay
int
screen
std
:
:
string
*
errorString
)
;
void
terminate
(
)
;
bool
hasExtension
(
const
char
*
extension
)
const
;
int
majorVersion
;
int
minorVersion
;
Display
*
getDisplay
(
)
const
;
int
getScreen
(
)
const
;
PFNGETPROCPROC
getProc
;
void
destroyContext
(
glx
:
:
Context
context
)
const
;
Bool
makeCurrent
(
glx
:
:
Drawable
drawable
glx
:
:
Context
context
)
const
;
void
swapBuffers
(
glx
:
:
Drawable
drawable
)
const
;
Bool
queryExtension
(
int
*
errorBase
int
*
event
)
const
;
Bool
queryVersion
(
int
*
major
int
*
minor
)
const
;
void
waitX
(
)
const
;
void
waitGL
(
)
const
;
const
char
*
queryExtensionsString
(
)
const
;
glx
:
:
FBConfig
*
getFBConfigs
(
int
*
nElements
)
const
;
glx
:
:
FBConfig
*
chooseFBConfig
(
const
int
*
attribList
int
*
nElements
)
const
;
int
getFBConfigAttrib
(
glx
:
:
FBConfig
config
int
attribute
int
*
value
)
const
;
XVisualInfo
*
getVisualFromFBConfig
(
glx
:
:
FBConfig
config
)
const
;
glx
:
:
Window
createWindow
(
glx
:
:
FBConfig
config
Window
window
const
int
*
attribList
)
const
;
void
destroyWindow
(
glx
:
:
Window
window
)
const
;
glx
:
:
Pbuffer
createPbuffer
(
glx
:
:
FBConfig
config
const
int
*
attribList
)
const
;
void
destroyPbuffer
(
glx
:
:
Pbuffer
pbuffer
)
const
;
void
queryDrawable
(
glx
:
:
Drawable
drawable
int
attribute
unsigned
int
*
value
)
const
;
glx
:
:
Context
createContextAttribsARB
(
glx
:
:
FBConfig
config
glx
:
:
Context
shareContext
Bool
direct
const
int
*
attribList
)
const
;
void
swapIntervalEXT
(
glx
:
:
Drawable
drawable
int
interval
)
const
;
private
:
FunctionsGLX
(
const
FunctionsGLX
&
)
=
delete
;
void
operator
=
(
const
FunctionsGLX
&
)
=
delete
;
struct
GLXFunctionTable
;
static
void
*
sLibHandle
;
Display
*
mXDisplay
;
int
mXScreen
;
GLXFunctionTable
*
mFnPtrs
;
std
:
:
vector
<
std
:
:
string
>
mExtensions
;
}
;
}
#
endif
