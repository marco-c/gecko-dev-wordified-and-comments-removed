#
ifndef
LIBANGLE_RENDERER_GL_QUERYGL_H_
#
define
LIBANGLE_RENDERER_GL_QUERYGL_H_
#
include
<
deque
>
#
include
"
libANGLE
/
renderer
/
QueryImpl
.
h
"
namespace
rx
{
class
FunctionsGL
;
class
StateManagerGL
;
class
QueryGL
:
public
QueryImpl
{
public
:
QueryGL
(
GLenum
type
const
FunctionsGL
*
functions
StateManagerGL
*
stateManager
)
;
~
QueryGL
(
)
override
;
gl
:
:
Error
begin
(
)
override
;
gl
:
:
Error
end
(
)
override
;
gl
:
:
Error
queryCounter
(
)
override
;
gl
:
:
Error
getResult
(
GLint
*
params
)
override
;
gl
:
:
Error
getResult
(
GLuint
*
params
)
override
;
gl
:
:
Error
getResult
(
GLint64
*
params
)
override
;
gl
:
:
Error
getResult
(
GLuint64
*
params
)
override
;
gl
:
:
Error
isResultAvailable
(
bool
*
available
)
override
;
gl
:
:
Error
pause
(
)
;
gl
:
:
Error
resume
(
)
;
private
:
gl
:
:
Error
flush
(
bool
force
)
;
template
<
typename
T
>
gl
:
:
Error
getResultBase
(
T
*
params
)
;
GLenum
mType
;
const
FunctionsGL
*
mFunctions
;
StateManagerGL
*
mStateManager
;
GLuint
mActiveQuery
;
std
:
:
deque
<
GLuint
>
mPendingQueries
;
GLuint64
mResultSum
;
}
;
}
#
endif
