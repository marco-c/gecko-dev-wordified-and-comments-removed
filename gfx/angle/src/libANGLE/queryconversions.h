#
ifndef
LIBANGLE_QUERY_CONVERSIONS_H_
#
define
LIBANGLE_QUERY_CONVERSIONS_H_
#
include
"
angle_gl
.
h
"
#
include
"
common
/
angleutils
.
h
"
namespace
gl
{
class
Context
;
template
<
typename
GLType
>
struct
GLTypeToGLenum
{
}
;
template
<
>
struct
GLTypeToGLenum
<
GLint
>
{
static
constexpr
GLenum
value
=
GL_INT
;
}
;
template
<
>
struct
GLTypeToGLenum
<
GLuint
>
{
static
constexpr
GLenum
value
=
GL_UNSIGNED_INT
;
}
;
template
<
>
struct
GLTypeToGLenum
<
GLboolean
>
{
static
constexpr
GLenum
value
=
GL_BOOL
;
}
;
template
<
>
struct
GLTypeToGLenum
<
GLint64
>
{
static
constexpr
GLenum
value
=
GL_INT_64_ANGLEX
;
}
;
template
<
>
struct
GLTypeToGLenum
<
GLfloat
>
{
static
constexpr
GLenum
value
=
GL_FLOAT
;
}
;
template
<
typename
QueryT
>
void
CastStateValues
(
Context
*
context
GLenum
nativeType
GLenum
pname
unsigned
int
numParams
QueryT
*
outParams
)
;
template
<
typename
QueryT
>
void
CastIndexedStateValues
(
Context
*
context
GLenum
nativeType
GLenum
pname
GLuint
index
unsigned
int
numParams
QueryT
*
outParams
)
;
}
#
endif
