#
ifndef
ANGLE_PLATFORM_FRONTENDFEATURES_H_
#
define
ANGLE_PLATFORM_FRONTENDFEATURES_H_
#
include
"
platform
/
Feature
.
h
"
namespace
angle
{
struct
FrontendFeatures
:
angle
:
:
FeatureSetBase
{
FrontendFeatures
(
)
;
~
FrontendFeatures
(
)
;
angle
:
:
Feature
loseContextOnOutOfMemory
=
{
"
lose_context_on_out_of_memory
"
angle
:
:
FeatureCategory
:
:
FrontendWorkarounds
"
Some
users
rely
on
a
lost
context
notification
if
a
GL_OUT_OF_MEMORY
"
"
error
occurs
"
&
members
}
;
angle
:
:
Feature
disableProgramCachingForTransformFeedback
=
{
"
disable_program_caching_for_transform_feedback
"
angle
:
:
FeatureCategory
:
:
FrontendWorkarounds
"
On
Qualcomm
GPUs
program
binaries
don
'
t
contain
transform
feedback
varyings
"
&
members
}
;
angle
:
:
Feature
syncFramebufferBindingsOnTexImage
=
{
"
sync_framebuffer_bindings_on_tex_image
"
angle
:
:
FeatureCategory
:
:
FrontendWorkarounds
"
On
Windows
Intel
OpenGL
drivers
TexImage
sometimes
seems
to
interact
"
"
with
the
Framebuffer
"
&
members
}
;
angle
:
:
Feature
scalarizeVecAndMatConstructorArgs
=
{
"
scalarize_vec_and_mat_constructor_args
"
angle
:
:
FeatureCategory
:
:
FrontendWorkarounds
"
Always
rewrite
vec
/
mat
constructors
to
be
consistent
"
&
members
"
http
:
/
/
crbug
.
com
/
398694
"
}
;
}
;
inline
FrontendFeatures
:
:
FrontendFeatures
(
)
=
default
;
inline
FrontendFeatures
:
:
~
FrontendFeatures
(
)
=
default
;
}
#
endif
