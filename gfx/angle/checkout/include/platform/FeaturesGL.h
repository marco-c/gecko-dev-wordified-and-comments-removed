#
ifndef
ANGLE_PLATFORM_FEATURESGL_H_
#
define
ANGLE_PLATFORM_FEATURESGL_H_
#
include
"
platform
/
Feature
.
h
"
namespace
angle
{
struct
FeaturesGL
:
FeatureSetBase
{
FeaturesGL
(
)
;
~
FeaturesGL
(
)
;
Feature
avoid1BitAlphaTextureFormats
=
{
"
avoid_1_bit_alpha_texture_formats
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Issue
on
Intel
and
AMD
drivers
with
1
-
bit
alpha
framebuffer
formats
"
&
members
}
;
Feature
rgba4IsNotSupportedForColorRendering
=
{
"
rgba4_is_not_supported_for_color_rendering
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Issue
on
older
Intel
drivers
GL_RGBA4
is
not
color
renderable
"
&
members
}
;
Feature
doesSRGBClearsOnLinearFramebufferAttachments
=
{
"
does_srgb_clears_on_linear_framebuffer_attachments
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Issue
clearing
framebuffers
with
linear
attachments
on
Intel
or
AMD
"
"
drivers
when
GL_FRAMEBUFFER_SRGB
is
enabled
"
&
members
}
;
Feature
doWhileGLSLCausesGPUHang
=
{
"
do_while_glsl_causes_gpu_hang
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
Mac
some
GLSL
constructs
involving
do
-
while
loops
cause
GPU
hangs
"
&
members
}
;
Feature
finishDoesNotCauseQueriesToBeAvailable
=
{
"
finish_does_not_cause_queries_to_be_available
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
some
NVIDIA
drivers
glFinish
doesn
'
t
cause
all
queries
to
report
available
result
"
&
members
}
;
Feature
alwaysCallUseProgramAfterLink
=
{
"
always_call_use_program_after_link
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Always
call
useProgram
after
a
successful
link
to
avoid
a
driver
bug
"
&
members
}
;
Feature
unpackOverlappingRowsSeparatelyUnpackBuffer
=
{
"
unpack_overlapping_rows_separately_unpack_buffer
"
FeatureCategory
:
:
OpenGLWorkarounds
"
In
the
case
of
unpacking
from
a
pixel
unpack
buffer
unpack
overlapping
rows
row
by
row
"
&
members
}
;
Feature
packOverlappingRowsSeparatelyPackBuffer
=
{
"
pack_overlapping_rows_separately_pack_buffer
"
FeatureCategory
:
:
OpenGLWorkarounds
"
In
the
case
of
packing
to
a
pixel
pack
buffer
pack
overlapping
rows
row
by
row
"
&
members
}
;
Feature
initializeCurrentVertexAttributes
=
{
"
initialize_current_vertex_attributes
"
FeatureCategory
:
:
OpenGLWorkarounds
"
During
initialization
assign
the
current
vertex
attributes
to
the
spec
-
mandated
defaults
"
&
members
}
;
Feature
emulateAbsIntFunction
=
{
"
emulate_abs_int_function
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
Intel
Mac
abs
(
i
)
where
i
is
an
integer
returns
unexpected
result
"
&
members
}
;
Feature
addAndTrueToLoopCondition
=
{
"
add_and_true_to_loop_condition
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
Intel
Mac
calculation
of
loop
conditions
in
for
and
while
loop
has
bug
"
&
members
}
;
Feature
unpackLastRowSeparatelyForPaddingInclusion
=
{
"
unpack_last_row_separately_for_padding_inclusion
"
FeatureCategory
:
:
OpenGLWorkarounds
"
When
uploading
textures
from
an
unpack
buffer
some
drivers
count
an
extra
row
padding
"
&
members
}
;
Feature
packLastRowSeparatelyForPaddingInclusion
=
{
"
pack_last_row_separately_for_padding_inclusion
"
FeatureCategory
:
:
OpenGLWorkarounds
"
When
uploading
textures
from
an
pack
buffer
some
drivers
count
an
extra
row
padding
"
&
members
}
;
Feature
emulateIsnanFloat
=
{
"
emulate_isnan_float
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
some
Intel
drivers
using
isnan
(
)
on
highp
float
will
get
wrong
answer
"
&
members
}
;
Feature
useUnusedBlocksWithStandardOrSharedLayout
=
{
"
use_unused_blocks_with_standard_or_shared_layout
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
Mac
with
OpenGL
version
4
.
1
and
Linux
AMD
unused
std140
or
shared
uniform
blocks
"
"
will
be
treated
as
inactive
"
&
members
}
;
Feature
removeInvariantAndCentroidForESSL3
=
{
"
remove_invarient_and_centroid_for_essl3
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Fix
spec
difference
between
GLSL
4
.
1
or
lower
and
ESSL3
"
&
members
}
;
Feature
rewriteFloatUnaryMinusOperator
=
{
"
rewrite_float_unary_minus_operator
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
Intel
Mac
OSX
10
.
11
driver
using
'
-
<
float
>
'
will
get
wrong
answer
"
&
members
"
http
:
/
/
crbug
.
com
/
308366
"
}
;
Feature
emulateAtan2Float
=
{
"
emulate_atan_2_float
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
NVIDIA
drivers
atan
(
y
x
)
may
return
a
wrong
answer
"
&
members
"
http
:
/
/
crbug
.
com
/
672380
"
}
;
Feature
reapplyUBOBindingsAfterUsingBinaryProgram
=
{
"
reapply_ubo_bindings_after_using_binary_program
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Some
AMD
OpenGL
drivers
and
Android
devices
forget
about
UBO
bindings
"
"
when
using
program
binaries
"
&
members
"
http
:
/
/
anglebug
.
com
/
1637
"
}
;
Feature
emulateMaxVertexAttribStride
=
{
"
emulate_max_vertex_attrib_stride
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Some
AMD
OpenGL
>
=
4
.
4
drivers
return
0
when
MAX_VERTEX_ATTRIB_STRIED
queried
"
&
members
"
http
:
/
/
anglebug
.
com
/
1936
"
}
;
Feature
dontInitializeUninitializedLocals
=
{
"
dont_initialize_uninitialized_locals
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
Mac
initializing
uninitialized
locals
caused
odd
behavior
in
a
few
WebGL
2
tests
"
&
members
"
http
:
/
/
anglebug
.
com
/
2041
"
}
;
Feature
clampPointSize
=
{
"
clamp_point_size
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
some
NVIDIA
drivers
the
point
size
range
reported
from
the
API
is
"
"
inconsistent
with
the
actual
behavior
"
&
members
}
;
Feature
rewriteVectorScalarArithmetic
=
{
"
rewrite_vector_scalar_arithmetic
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
some
NVIDIA
drivers
certain
types
of
GLSL
arithmetic
ops
mixing
"
"
vectors
and
scalars
may
be
executed
incorrectly
"
&
members
"
http
:
/
/
crbug
.
com
/
772651
"
}
;
Feature
dontUseLoopsToInitializeVariables
=
{
"
dont_use_loops_to_initialize_variables
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
some
Android
devices
for
loops
used
to
initialize
variables
hit
"
"
native
GLSL
compiler
bugs
"
&
members
}
;
Feature
clampFragDepth
=
{
"
clamp_frag_depth
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
some
NVIDIA
drivers
gl_FragDepth
is
not
clamped
correctly
when
"
"
rendering
to
a
floating
point
depth
buffer
"
&
members
}
;
Feature
rewriteRepeatedAssignToSwizzled
=
{
"
rewrite_repeated_assign_to_swizzled
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
some
NVIDIA
drivers
<
v397
.
31
repeated
assignment
to
swizzled
"
"
values
inside
a
GLSL
user
-
defined
function
have
incorrect
results
"
&
members
}
;
Feature
disableBlendFuncExtended
=
{
"
disable_blend_func_extended
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
some
AMD
and
Intel
GL
drivers
ARB_blend_func_extended
does
not
pass
the
tests
"
&
members
"
http
:
/
/
anglebug
.
com
/
1085
"
}
;
Feature
unsizedsRGBReadPixelsDoesntTransform
=
{
"
unsized_srgb_read_pixels_doesnt_transform
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Qualcomm
drivers
returns
raw
sRGB
values
instead
of
linearized
values
"
"
when
calling
glReadPixels
on
unsized
sRGB
texture
formats
"
&
members
"
http
:
/
/
crbug
.
com
/
565179
"
}
;
Feature
queryCounterBitsGeneratesErrors
=
{
"
query_counter_bits_generates_errors
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Older
Qualcomm
drivers
generate
errors
when
querying
the
number
of
bits
in
timer
queries
"
&
members
"
http
:
/
/
anglebug
.
com
/
3027
"
}
;
Feature
dontRelinkProgramsInParallel
=
{
"
dont_relink_programs_in_parallel
"
FeatureCategory
:
:
OpenGLWorkarounds
"
On
some
Intel
Windows
OpenGL
drivers
and
Android
relinking
a
program
"
"
in
parallel
is
buggy
"
&
members
"
http
:
/
/
anglebug
.
com
/
3045
"
}
;
Feature
disableWorkerContexts
=
{
"
disable_worker_contexts
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Some
tests
have
been
seen
to
fail
using
worker
contexts
"
&
members
"
http
:
/
/
crbug
.
com
/
849576
"
}
;
Feature
limitMaxTextureSizeTo4096
=
{
"
max_texture_size_limit_4096
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Limit
max
texture
size
to
4096
to
avoid
frequent
"
"
out
-
of
-
memory
errors
on
Android
or
Intel
Linux
"
&
members
"
http
:
/
/
crbug
.
com
/
927470
"
}
;
Feature
limitMaxMSAASamplesTo4
=
{
"
max_msaa_sample_count_4
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Various
rendering
bugs
have
been
observed
when
using
higher
MSAA
counts
on
Android
"
&
members
"
http
:
/
/
crbug
.
com
/
797243
"
}
;
Feature
allowClearForRobustResourceInit
=
{
"
allow_clear_for_robust_resource_init
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Using
glClear
for
robust
resource
initialization
is
buggy
on
some
drivers
and
leads
to
"
"
texture
corruption
.
Default
to
data
uploads
except
on
MacOS
where
it
is
very
slow
.
"
&
members
"
http
:
/
/
crbug
.
com
/
883276
"
}
;
Feature
clampArrayAccess
=
{
"
clamp_array_access
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Clamp
uniform
array
access
to
avoid
reading
invalid
memory
.
"
&
members
"
http
:
/
/
anglebug
.
com
/
2978
"
}
;
Feature
resetTexImage2DBaseLevel
=
{
"
reset_teximage2d_base_level
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Reset
texture
base
level
before
calling
glTexImage2D
to
"
"
work
around
pixel
comparison
failure
.
"
&
members
"
https
:
/
/
crbug
.
com
/
705865
"
}
;
Feature
clearToZeroOrOneBroken
=
{
"
clear_to_zero_or_one_broken
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Clears
when
the
clear
color
is
all
zeros
or
ones
do
not
work
.
"
&
members
"
https
:
/
/
crbug
.
com
/
710443
"
}
;
Feature
limitMax3dArrayTextureSizeTo1024
=
{
"
max_3d_array_texture_size_1024
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Limit
max
3d
texture
size
and
max
array
texture
layers
to
1024
to
avoid
system
hang
on
"
"
older
Intel
Linux
"
&
members
"
http
:
/
/
crbug
.
com
/
927470
"
}
;
Feature
adjustSrcDstRegionBlitFramebuffer
=
{
"
adjust_src_dst_region_for_blitframebuffer
"
FeatureCategory
:
:
OpenGLWorkarounds
"
Many
platforms
have
issues
with
blitFramebuffer
when
the
parameters
are
large
.
"
&
members
"
http
:
/
/
crbug
.
com
/
830046
"
}
;
}
;
inline
FeaturesGL
:
:
FeaturesGL
(
)
=
default
;
inline
FeaturesGL
:
:
~
FeaturesGL
(
)
=
default
;
}
#
endif
