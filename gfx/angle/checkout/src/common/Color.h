#
ifndef
COMMON_COLOR_H_
#
define
COMMON_COLOR_H_
namespace
angle
{
template
<
typename
T
>
struct
Color
{
T
red
;
T
green
;
T
blue
;
T
alpha
;
Color
(
)
;
Color
(
T
r
T
g
T
b
T
a
)
;
}
;
template
<
typename
T
>
bool
operator
=
=
(
const
Color
<
T
>
&
a
const
Color
<
T
>
&
b
)
;
template
<
typename
T
>
bool
operator
!
=
(
const
Color
<
T
>
&
a
const
Color
<
T
>
&
b
)
;
typedef
Color
<
float
>
ColorF
;
typedef
Color
<
int
>
ColorI
;
typedef
Color
<
unsigned
int
>
ColorUI
;
}
namespace
gl
{
template
<
typename
T
>
using
Color
=
angle
:
:
Color
<
T
>
;
using
ColorF
=
angle
:
:
ColorF
;
using
ColorI
=
angle
:
:
ColorI
;
using
ColorUI
=
angle
:
:
ColorUI
;
}
#
include
"
Color
.
inl
"
#
endif
