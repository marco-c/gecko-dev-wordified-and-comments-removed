#
include
"
system_utils
.
h
"
#
include
<
unistd
.
h
>
#
include
<
mach
-
o
/
dyld
.
h
>
#
include
<
cstdlib
>
#
include
<
vector
>
#
include
<
array
>
namespace
angle
{
std
:
:
string
GetExecutablePath
(
)
{
std
:
:
string
result
;
uint32_t
size
=
0
;
_NSGetExecutablePath
(
nullptr
&
size
)
;
std
:
:
vector
<
char
>
buffer
;
buffer
.
resize
(
size
+
1
)
;
_NSGetExecutablePath
(
buffer
.
data
(
)
&
size
)
;
buffer
[
size
]
=
'
\
0
'
;
if
(
!
strrchr
(
buffer
.
data
(
)
'
/
'
)
)
{
return
"
"
;
}
return
buffer
.
data
(
)
;
}
std
:
:
string
GetExecutableDirectory
(
)
{
std
:
:
string
executablePath
=
GetExecutablePath
(
)
;
size_t
lastPathSepLoc
=
executablePath
.
find_last_of
(
"
/
"
)
;
return
(
lastPathSepLoc
!
=
std
:
:
string
:
:
npos
)
?
executablePath
.
substr
(
0
lastPathSepLoc
)
:
"
"
;
}
const
char
*
GetSharedLibraryExtension
(
)
{
return
"
dylib
"
;
}
}
