#
ifndef
BASE_NUMERICS_RANGES_H_
#
define
BASE_NUMERICS_RANGES_H_
#
include
<
algorithm
>
#
include
<
cmath
>
namespace
base
{
template
<
class
T
>
constexpr
const
T
&
BrokenClampThatShouldNotBeUsed
(
const
T
&
value
const
T
&
min
const
T
&
max
)
{
return
std
:
:
min
(
std
:
:
max
(
value
min
)
max
)
;
}
template
<
typename
T
>
constexpr
bool
IsApproximatelyEqual
(
T
lhs
T
rhs
T
tolerance
)
{
static_assert
(
std
:
:
is_arithmetic
<
T
>
:
:
value
"
Argument
must
be
arithmetic
"
)
;
return
std
:
:
abs
(
rhs
-
lhs
)
<
=
tolerance
;
}
}
#
endif
