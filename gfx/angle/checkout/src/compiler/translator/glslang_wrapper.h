#
ifndef
COMPILER_TRANSLATOR_GLSLANG_WRAPPER_H_
#
define
COMPILER_TRANSLATOR_GLSLANG_WRAPPER_H_
#
include
"
GLSLANG
/
ShaderLang
.
h
"
#
include
"
common
/
PackedEnums
.
h
"
#
include
"
common
/
spirv
/
spirv_types
.
h
"
#
include
<
string
>
#
include
<
vector
>
namespace
sh
{
#
if
defined
(
ANGLE_ENABLE_VULKAN
)
|
|
defined
(
ANGLE_ENABLE_METAL
)
void
GlslangInitialize
(
)
;
void
GlslangFinalize
(
)
;
ANGLE_NO_DISCARD
bool
GlslangCompileToSpirv
(
const
ShBuiltInResources
&
resources
sh
:
:
GLenum
shaderType
const
std
:
:
string
&
shaderSource
angle
:
:
spirv
:
:
Blob
*
spirvBlobOut
)
;
#
else
ANGLE_INLINE
void
GlslangInitialize
(
)
{
UNREACHABLE
(
)
;
}
ANGLE_INLINE
void
GlslangFinalize
(
)
{
UNREACHABLE
(
)
;
}
#
endif
}
#
endif
