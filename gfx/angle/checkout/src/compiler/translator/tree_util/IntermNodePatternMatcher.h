#
ifndef
COMPILER_TRANSLATOR_TREEUTIL_INTERMNODEPATTERNMATCHER_H_
#
define
COMPILER_TRANSLATOR_TREEUTIL_INTERMNODEPATTERNMATCHER_H_
namespace
sh
{
class
TIntermAggregate
;
class
TIntermBinary
;
class
TIntermDeclaration
;
class
TIntermNode
;
class
TIntermTernary
;
class
TIntermUnary
;
class
IntermNodePatternMatcher
{
public
:
static
bool
IsDynamicIndexingOfVectorOrMatrix
(
TIntermBinary
*
node
)
;
enum
PatternType
{
kUnfoldedShortCircuitExpression
=
0x0001
kExpressionReturningArray
=
0x0001
<
<
1
kDynamicIndexingOfVectorOrMatrixInLValue
=
0x0001
<
<
2
kMultiDeclaration
=
0x0001
<
<
3
kArrayDeclaration
=
0x0001
<
<
4
kNamelessStructDeclaration
=
0x0001
<
<
5
kArrayLengthMethod
=
0x0001
<
<
6
kScalarizedVecOrMatConstructor
=
0x0001
<
<
7
}
;
IntermNodePatternMatcher
(
const
unsigned
int
mask
)
;
bool
match
(
TIntermUnary
*
node
)
;
bool
match
(
TIntermBinary
*
node
TIntermNode
*
parentNode
)
;
bool
match
(
TIntermBinary
*
node
TIntermNode
*
parentNode
bool
isLValueRequiredHere
)
;
bool
match
(
TIntermAggregate
*
node
TIntermNode
*
parentNode
)
;
bool
match
(
TIntermTernary
*
node
)
;
bool
match
(
TIntermDeclaration
*
node
)
;
private
:
const
unsigned
int
mMask
;
bool
matchInternal
(
TIntermBinary
*
node
TIntermNode
*
parentNode
)
;
}
;
}
#
endif
