#
ifndef
COMPILER_TRANSLATOR_VALIDATEAST_H_
#
define
COMPILER_TRANSLATOR_VALIDATEAST_H_
#
include
"
compiler
/
translator
/
BaseTypes
.
h
"
#
include
"
compiler
/
translator
/
Common
.
h
"
namespace
sh
{
class
TDiagnostics
;
class
TIntermNode
;
struct
ValidateASTOptions
{
bool
validateSingleParent
=
true
;
bool
validateVariableReferences
=
true
;
bool
validateSpecConstReferences
=
false
;
bool
validateBuiltInOps
=
true
;
bool
validateFunctionCall
=
true
;
bool
validateNoRawFunctionCalls
=
true
;
bool
validateNullNodes
=
true
;
bool
validateQualifiers
=
true
;
bool
validatePrecision
=
true
;
bool
validateInitializers
=
true
;
bool
validateUniqueFunctions
=
true
;
bool
validateStructUsage
=
true
;
bool
validateExpressionTypes
=
true
;
bool
validateMultiDeclarations
=
false
;
bool
validateNoStatementsAfterBranch
=
false
;
bool
validateNoSwizzleOfSwizzle
=
true
;
bool
validateNoMoreTransformations
=
false
;
}
;
bool
ValidateAST
(
TIntermNode
*
root
TDiagnostics
*
diagnostics
const
ValidateASTOptions
&
options
)
;
}
#
endif
