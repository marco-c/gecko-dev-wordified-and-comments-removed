#
ifndef
COMPILER_TRANSLATOR_FUNCTIONLOOKUP_H_
#
define
COMPILER_TRANSLATOR_FUNCTIONLOOKUP_H_
#
include
"
compiler
/
translator
/
ImmutableString
.
h
"
#
include
"
compiler
/
translator
/
IntermNode
.
h
"
namespace
sh
{
class
TFunctionLookup
:
angle
:
:
NonCopyable
{
public
:
POOL_ALLOCATOR_NEW_DELETE
(
)
;
static
TFunctionLookup
*
CreateConstructor
(
const
TType
*
type
)
;
static
TFunctionLookup
*
CreateFunctionCall
(
const
ImmutableString
&
name
const
TSymbol
*
symbol
)
;
const
ImmutableString
&
name
(
)
const
;
ImmutableString
getMangledName
(
)
const
;
static
ImmutableString
GetMangledName
(
const
char
*
functionName
const
TIntermSequence
&
arguments
)
;
bool
isConstructor
(
)
const
;
const
TType
&
constructorType
(
)
const
;
void
setThisNode
(
TIntermTyped
*
thisNode
)
;
TIntermTyped
*
thisNode
(
)
const
;
void
addArgument
(
TIntermTyped
*
argument
)
;
TIntermSequence
&
arguments
(
)
;
const
TSymbol
*
symbol
(
)
const
;
private
:
TFunctionLookup
(
const
ImmutableString
&
name
const
TType
*
constructorType
const
TSymbol
*
symbol
)
;
const
ImmutableString
mName
;
const
TType
*
const
mConstructorType
;
TIntermTyped
*
mThisNode
;
TIntermSequence
mArguments
;
const
TSymbol
*
mSymbol
;
}
;
}
#
endif
