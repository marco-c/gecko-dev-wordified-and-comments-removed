#
ifndef
LIBANGLE_RENDERER_SHADERIMPL_H_
#
define
LIBANGLE_RENDERER_SHADERIMPL_H_
#
include
"
common
/
angleutils
.
h
"
#
include
"
libANGLE
/
Shader
.
h
"
namespace
rx
{
class
ShaderImpl
:
angle
:
:
NonCopyable
{
public
:
ShaderImpl
(
const
gl
:
:
ShaderState
&
data
)
:
mData
(
data
)
{
}
virtual
~
ShaderImpl
(
)
{
}
virtual
void
destroy
(
)
{
}
virtual
ShCompileOptions
prepareSourceAndReturnOptions
(
const
gl
:
:
Context
*
context
std
:
:
stringstream
*
sourceStream
std
:
:
string
*
sourcePath
)
=
0
;
virtual
void
compileAsync
(
const
std
:
:
string
&
source
std
:
:
string
&
infoLog
)
{
}
virtual
bool
postTranslateCompile
(
gl
:
:
ShCompilerInstance
*
compiler
std
:
:
string
*
infoLog
)
=
0
;
virtual
std
:
:
string
getDebugInfo
(
)
const
=
0
;
const
gl
:
:
ShaderState
&
getData
(
)
const
{
return
mData
;
}
protected
:
const
gl
:
:
ShaderState
&
mData
;
}
;
}
#
endif
