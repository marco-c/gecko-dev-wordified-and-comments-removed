#
include
"
libANGLE
/
renderer
/
d3d
/
ImageD3D
.
h
"
#
include
"
libANGLE
/
Framebuffer
.
h
"
#
include
"
libANGLE
/
FramebufferAttachment
.
h
"
#
include
"
libANGLE
/
renderer
/
d3d
/
FramebufferD3D
.
h
"
#
include
"
libANGLE
/
renderer
/
d3d
/
RenderTargetD3D
.
h
"
namespace
rx
{
ImageD3D
:
:
ImageD3D
(
)
:
mWidth
(
0
)
mHeight
(
0
)
mDepth
(
0
)
mInternalFormat
(
GL_NONE
)
mRenderable
(
false
)
mType
(
gl
:
:
TextureType
:
:
InvalidEnum
)
mDirty
(
false
)
{
}
gl
:
:
Error
ImageD3D
:
:
setManagedSurface2D
(
const
gl
:
:
Context
*
context
TextureStorage
*
storage
int
level
)
{
return
gl
:
:
NoError
(
)
;
}
gl
:
:
Error
ImageD3D
:
:
setManagedSurfaceCube
(
const
gl
:
:
Context
*
context
TextureStorage
*
storage
int
face
int
level
)
{
return
gl
:
:
NoError
(
)
;
}
gl
:
:
Error
ImageD3D
:
:
setManagedSurface3D
(
const
gl
:
:
Context
*
context
TextureStorage
*
storage
int
level
)
{
return
gl
:
:
NoError
(
)
;
}
gl
:
:
Error
ImageD3D
:
:
setManagedSurface2DArray
(
const
gl
:
:
Context
*
context
TextureStorage
*
storage
int
layer
int
level
)
{
return
gl
:
:
NoError
(
)
;
}
}
