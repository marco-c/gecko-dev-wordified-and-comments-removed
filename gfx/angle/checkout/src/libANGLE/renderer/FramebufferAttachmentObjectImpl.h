#
ifndef
LIBANGLE_RENDERER_FRAMEBUFFER_ATTACHMENT_OBJECT_IMPL_H_
#
define
LIBANGLE_RENDERER_FRAMEBUFFER_ATTACHMENT_OBJECT_IMPL_H_
#
include
"
libANGLE
/
ImageIndex
.
h
"
#
include
"
libANGLE
/
Observer
.
h
"
namespace
gl
{
class
Context
;
}
namespace
rx
{
class
FramebufferAttachmentRenderTarget
;
class
FramebufferAttachmentObjectImpl
:
public
angle
:
:
Subject
{
public
:
FramebufferAttachmentObjectImpl
(
)
{
}
~
FramebufferAttachmentObjectImpl
(
)
override
{
}
virtual
angle
:
:
Result
getAttachmentRenderTarget
(
const
gl
:
:
Context
*
context
GLenum
binding
const
gl
:
:
ImageIndex
&
imageIndex
GLsizei
samples
FramebufferAttachmentRenderTarget
*
*
rtOut
)
;
virtual
angle
:
:
Result
initializeContents
(
const
gl
:
:
Context
*
context
const
gl
:
:
ImageIndex
&
imageIndex
)
;
}
;
inline
angle
:
:
Result
FramebufferAttachmentObjectImpl
:
:
getAttachmentRenderTarget
(
const
gl
:
:
Context
*
context
GLenum
binding
const
gl
:
:
ImageIndex
&
imageIndex
GLsizei
samples
FramebufferAttachmentRenderTarget
*
*
rtOut
)
{
UNIMPLEMENTED
(
)
;
return
angle
:
:
Result
:
:
Stop
;
}
inline
angle
:
:
Result
FramebufferAttachmentObjectImpl
:
:
initializeContents
(
const
gl
:
:
Context
*
context
const
gl
:
:
ImageIndex
&
imageIndex
)
{
UNIMPLEMENTED
(
)
;
return
angle
:
:
Result
:
:
Stop
;
}
}
#
endif
