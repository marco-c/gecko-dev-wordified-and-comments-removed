#
ifndef
ANGLE_CONTEXT_GL_4_3_AUTOGEN_H_
#
define
ANGLE_CONTEXT_GL_4_3_AUTOGEN_H_
#
define
ANGLE_GL_4_3_CONTEXT_API
\
void
clearBufferData
(
GLenum
target
GLenum
internalformat
GLenum
format
GLenum
type
\
const
void
*
data
)
;
\
void
clearBufferSubData
(
GLenum
target
GLenum
internalformat
GLintptr
offset
\
GLsizeiptr
size
GLenum
format
GLenum
type
const
void
*
data
)
;
\
void
copyImageSubData
(
GLuint
srcName
GLenum
srcTarget
GLint
srcLevel
GLint
srcX
\
GLint
srcY
GLint
srcZ
GLuint
dstName
GLenum
dstTarget
\
GLint
dstLevel
GLint
dstX
GLint
dstY
GLint
dstZ
GLsizei
srcWidth
\
GLsizei
srcHeight
GLsizei
srcDepth
)
;
\
void
getInternalformati64v
(
GLenum
target
GLenum
internalformat
GLenum
pname
\
GLsizei
bufSize
GLint64
*
params
)
;
\
void
invalidateBufferData
(
GLuint
buffer
)
;
\
void
invalidateBufferSubData
(
GLuint
buffer
GLintptr
offset
GLsizeiptr
length
)
;
\
void
invalidateTexImage
(
GLuint
texture
GLint
level
)
;
\
void
invalidateTexSubImage
(
GLuint
texture
GLint
level
GLint
xoffset
GLint
yoffset
\
GLint
zoffset
GLsizei
width
GLsizei
height
GLsizei
depth
)
;
\
void
multiDrawArraysIndirect
(
GLenum
mode
const
void
*
indirect
GLsizei
drawcount
\
GLsizei
stride
)
;
\
void
multiDrawElementsIndirect
(
GLenum
mode
GLenum
type
const
void
*
indirect
\
GLsizei
drawcount
GLsizei
stride
)
;
\
void
shaderStorageBlockBinding
(
GLuint
program
GLuint
storageBlockIndex
\
GLuint
storageBlockBinding
)
;
\
void
texBufferRange
(
GLenum
target
GLenum
internalformat
GLuint
buffer
GLintptr
offset
\
GLsizeiptr
size
)
;
\
void
textureView
(
GLuint
texture
GLenum
target
GLuint
origtexture
GLenum
internalformat
\
GLuint
minlevel
GLuint
numlevels
GLuint
minlayer
GLuint
numlayers
)
;
\
void
vertexAttribLFormat
(
GLuint
attribindex
GLint
size
GLenum
type
GLuint
relativeoffset
)
;
#
endif
