#
ifndef
LIBANGLE_GLES_EXTENSIONS_AUTOGEN_H_
#
define
LIBANGLE_GLES_EXTENSIONS_AUTOGEN_H_
namespace
gl
{
class
TextureCapsMap
;
struct
Extensions
{
Extensions
(
)
;
Extensions
(
const
Extensions
&
other
)
;
Extensions
&
operator
=
(
const
Extensions
&
other
)
;
std
:
:
vector
<
std
:
:
string
>
getStrings
(
)
const
;
void
setTextureExtensionSupport
(
const
TextureCapsMap
&
textureCaps
)
;
bool
copyImageAny
(
)
const
{
return
(
copyImageEXT
|
|
copyImageOES
)
;
}
bool
depthTextureAny
(
)
const
{
return
(
depthTextureANGLE
|
|
depthTextureOES
)
;
}
bool
drawBuffersIndexedAny
(
)
const
{
return
(
drawBuffersIndexedEXT
|
|
drawBuffersIndexedOES
)
;
}
bool
drawElementsBaseVertexAny
(
)
const
{
return
(
drawElementsBaseVertexEXT
|
|
drawElementsBaseVertexOES
)
;
}
bool
framebufferBlitAny
(
)
const
{
return
(
framebufferBlitANGLE
|
|
framebufferBlitNV
)
;
}
bool
geometryShaderAny
(
)
const
{
return
(
geometryShaderEXT
|
|
geometryShaderOES
)
;
}
bool
instancedArraysAny
(
)
const
{
return
(
instancedArraysANGLE
|
|
instancedArraysEXT
)
;
}
bool
primitiveBoundingBoxAny
(
)
const
{
return
(
primitiveBoundingBoxEXT
|
|
primitiveBoundingBoxOES
)
;
}
bool
shaderIoBlocksAny
(
)
const
{
return
(
shaderIoBlocksEXT
|
|
shaderIoBlocksOES
)
;
}
bool
textureBorderClampAny
(
)
const
{
return
(
textureBorderClampEXT
|
|
textureBorderClampOES
)
;
}
bool
textureBufferAny
(
)
const
{
return
(
textureBufferEXT
|
|
textureBufferOES
)
;
}
bool
textureCubeMapArrayAny
(
)
const
{
return
(
textureCubeMapArrayEXT
|
|
textureCubeMapArrayOES
)
;
}
bool
baseInstanceEXT
=
false
;
bool
blendEquationAdvancedKHR
=
false
;
bool
blendFuncExtendedEXT
=
false
;
bool
blendMinmaxEXT
=
false
;
bool
bufferStorageEXT
=
false
;
bool
clipControlEXT
=
false
;
bool
clipCullDistanceEXT
=
false
;
bool
clipDistanceAPPLE
=
false
;
bool
colorBufferFloatEXT
=
false
;
bool
colorBufferHalfFloatEXT
=
false
;
bool
compressedEACR11SignedTextureOES
=
false
;
bool
compressedEACR11UnsignedTextureOES
=
false
;
bool
compressedEACRG11SignedTextureOES
=
false
;
bool
compressedEACRG11UnsignedTextureOES
=
false
;
bool
compressedETC1RGB8SubTextureEXT
=
false
;
bool
compressedETC1RGB8TextureOES
=
false
;
bool
compressedETC2PunchthroughARGBA8TextureOES
=
false
;
bool
compressedETC2PunchthroughASRGB8AlphaTextureOES
=
false
;
bool
compressedETC2RGB8TextureOES
=
false
;
bool
compressedETC2RGBA8TextureOES
=
false
;
bool
compressedETC2SRGB8Alpha8TextureOES
=
false
;
bool
compressedETC2SRGB8TextureOES
=
false
;
bool
compressedPalettedTextureOES
=
false
;
bool
copyImageEXT
=
false
;
bool
copyImageOES
=
false
;
bool
debugKHR
=
false
;
bool
debugLabelEXT
=
false
;
bool
debugMarkerEXT
=
false
;
bool
depth24OES
=
false
;
bool
depth32OES
=
false
;
bool
depthBufferFloat2NV
=
false
;
bool
depthTextureANGLE
=
false
;
bool
depthTextureOES
=
false
;
bool
depthTextureCubeMapOES
=
false
;
bool
discardFramebufferEXT
=
false
;
bool
disjointTimerQueryEXT
=
false
;
bool
drawBuffersEXT
=
false
;
bool
drawBuffersIndexedEXT
=
false
;
bool
drawBuffersIndexedOES
=
false
;
bool
drawElementsBaseVertexEXT
=
false
;
bool
drawElementsBaseVertexOES
=
false
;
bool
EGLImageOES
=
false
;
bool
EGLImageArrayEXT
=
false
;
bool
EGLImageExternalOES
=
false
;
bool
EGLImageExternalEssl3OES
=
false
;
bool
EGLImageExternalWrapModesEXT
=
false
;
bool
EGLImageStorageEXT
=
false
;
bool
EGLStreamConsumerExternalNV
=
false
;
bool
EGLSyncOES
=
false
;
bool
elementIndexUintOES
=
false
;
bool
extensionPackEs31aANDROID
=
false
;
bool
externalBufferEXT
=
false
;
bool
fboRenderMipmapOES
=
false
;
bool
fenceNV
=
false
;
bool
floatBlendEXT
=
false
;
bool
fragDepthEXT
=
false
;
bool
framebufferBlitANGLE
=
false
;
bool
framebufferBlitNV
=
false
;
bool
framebufferFlipYMESA
=
false
;
bool
geometryShaderEXT
=
false
;
bool
geometryShaderOES
=
false
;
bool
getProgramBinaryOES
=
false
;
bool
gpuShader5EXT
=
false
;
bool
instancedArraysANGLE
=
false
;
bool
instancedArraysEXT
=
false
;
bool
mapbufferOES
=
false
;
bool
mapBufferRangeEXT
=
false
;
bool
memoryObjectEXT
=
false
;
bool
memoryObjectFdEXT
=
false
;
bool
multiDrawIndirectEXT
=
false
;
bool
multisampleCompatibilityEXT
=
false
;
bool
multisampledRenderToTextureEXT
=
false
;
bool
multisampledRenderToTexture2EXT
=
false
;
bool
multiviewOVR
=
false
;
bool
multiview2OVR
=
false
;
bool
noErrorKHR
=
false
;
bool
occlusionQueryBooleanEXT
=
false
;
bool
packedDepthStencilOES
=
false
;
bool
packReverseRowOrderANGLE
=
false
;
bool
packSubimageNV
=
false
;
bool
parallelShaderCompileKHR
=
false
;
bool
performanceMonitorAMD
=
false
;
bool
pixelBufferObjectNV
=
false
;
bool
primitiveBoundingBoxEXT
=
false
;
bool
primitiveBoundingBoxOES
=
false
;
bool
protectedTexturesEXT
=
false
;
bool
pvrtcSRGBEXT
=
false
;
bool
readDepthNV
=
false
;
bool
readDepthStencilNV
=
false
;
bool
readFormatBgraEXT
=
false
;
bool
readStencilNV
=
false
;
bool
rgb8Rgba8OES
=
false
;
bool
robustBufferAccessBehaviorKHR
=
false
;
bool
robustnessEXT
=
false
;
bool
robustnessVideoMemoryPurgeNV
=
false
;
bool
sampleShadingOES
=
false
;
bool
sampleVariablesOES
=
false
;
bool
semaphoreEXT
=
false
;
bool
semaphoreFdEXT
=
false
;
bool
separateShaderObjectsEXT
=
false
;
bool
shaderFramebufferFetchEXT
=
false
;
bool
shaderFramebufferFetchNonCoherentEXT
=
false
;
bool
shaderImageAtomicOES
=
false
;
bool
shaderIoBlocksEXT
=
false
;
bool
shaderIoBlocksOES
=
false
;
bool
shaderMultisampleInterpolationOES
=
false
;
bool
shaderNonConstantGlobalInitializersEXT
=
false
;
bool
shaderNoperspectiveInterpolationNV
=
false
;
bool
shaderTextureLodEXT
=
false
;
bool
shadingRateQCOM
=
false
;
bool
shadowSamplersEXT
=
false
;
bool
sRGBEXT
=
false
;
bool
sRGBWriteControlEXT
=
false
;
bool
standardDerivativesOES
=
false
;
bool
surfacelessContextOES
=
false
;
bool
syncARB
=
false
;
bool
tessellationShaderEXT
=
false
;
bool
texture3DOES
=
false
;
bool
textureBorderClampEXT
=
false
;
bool
textureBorderClampOES
=
false
;
bool
textureBufferEXT
=
false
;
bool
textureBufferOES
=
false
;
bool
textureCompressionAstcOES
=
false
;
bool
textureCompressionAstcHdrKHR
=
false
;
bool
textureCompressionAstcLdrKHR
=
false
;
bool
textureCompressionAstcSliced3dKHR
=
false
;
bool
textureCompressionBptcEXT
=
false
;
bool
textureCompressionDxt1EXT
=
false
;
bool
textureCompressionPvrtcIMG
=
false
;
bool
textureCompressionPvrtc2IMG
=
false
;
bool
textureCompressionRgtcEXT
=
false
;
bool
textureCompressionS3tcEXT
=
false
;
bool
textureCompressionS3tcSrgbEXT
=
false
;
bool
textureCubeMapArrayEXT
=
false
;
bool
textureCubeMapArrayOES
=
false
;
bool
textureFilterAnisotropicEXT
=
false
;
bool
textureFloatOES
=
false
;
bool
textureFloatLinearOES
=
false
;
bool
textureFormatBGRA8888EXT
=
false
;
bool
textureFormatSRGBOverrideEXT
=
false
;
bool
textureHalfFloatOES
=
false
;
bool
textureHalfFloatLinearOES
=
false
;
bool
textureNorm16EXT
=
false
;
bool
textureNpotOES
=
false
;
bool
textureRgEXT
=
false
;
bool
textureSRGBDecodeEXT
=
false
;
bool
textureSRGBR8EXT
=
false
;
bool
textureSRGBRG8EXT
=
false
;
bool
textureStencil8OES
=
false
;
bool
textureStorageEXT
=
false
;
bool
textureStorageMultisample2dArrayOES
=
false
;
bool
textureType2101010REVEXT
=
false
;
bool
textureUsageANGLE
=
false
;
bool
translatedShaderSourceANGLE
=
false
;
bool
unpackSubimageEXT
=
false
;
bool
vertexArrayObjectOES
=
false
;
bool
vertexHalfFloatOES
=
false
;
bool
vertexType1010102OES
=
false
;
bool
videoTextureWEBGL
=
false
;
bool
YUVTargetEXT
=
false
;
bool
baseVertexBaseInstanceANGLE
=
false
;
bool
baseVertexBaseInstanceShaderBuiltinANGLE
=
false
;
bool
bindGeneratesResourceCHROMIUM
=
false
;
bool
bindUniformLocationCHROMIUM
=
false
;
bool
clientArraysANGLE
=
false
;
bool
colorBufferFloatRgbCHROMIUM
=
false
;
bool
colorBufferFloatRgbaCHROMIUM
=
false
;
bool
compressedTextureEtcANGLE
=
false
;
bool
copyCompressedTextureCHROMIUM
=
false
;
bool
copyTextureCHROMIUM
=
false
;
bool
copyTexture3dANGLE
=
false
;
bool
framebufferMixedSamplesCHROMIUM
=
false
;
bool
framebufferMultisampleANGLE
=
false
;
bool
getImageANGLE
=
false
;
bool
getSerializedContextStringANGLE
=
false
;
bool
getTexLevelParameterANGLE
=
false
;
bool
logicOpANGLE
=
false
;
bool
loseContextCHROMIUM
=
false
;
bool
lossyEtcDecodeANGLE
=
false
;
bool
memoryObjectFlagsANGLE
=
false
;
bool
memoryObjectFuchsiaANGLE
=
false
;
bool
memorySizeANGLE
=
false
;
bool
multiDrawANGLE
=
false
;
bool
multiviewMultisampleANGLE
=
false
;
bool
programBinaryANGLE
=
false
;
bool
programCacheControlANGLE
=
false
;
bool
provokingVertexANGLE
=
false
;
bool
readOnlyDepthStencilFeedbackLoopsANGLE
=
false
;
bool
relaxedVertexAttributeTypeANGLE
=
false
;
bool
requestExtensionANGLE
=
false
;
bool
rgbxInternalFormatANGLE
=
false
;
bool
robustClientMemoryANGLE
=
false
;
bool
robustFragmentShaderOutputANGLE
=
false
;
bool
robustResourceInitializationANGLE
=
false
;
bool
semaphoreFuchsiaANGLE
=
false
;
bool
shaderPixelLocalStorageANGLE
=
false
;
bool
shaderPixelLocalStorageCoherentANGLE
=
false
;
bool
syncQueryCHROMIUM
=
false
;
bool
textureCompressionDxt3ANGLE
=
false
;
bool
textureCompressionDxt5ANGLE
=
false
;
bool
textureExternalUpdateANGLE
=
false
;
bool
textureFilteringHintCHROMIUM
=
false
;
bool
textureMultisampleANGLE
=
false
;
bool
textureRectangleANGLE
=
false
;
bool
vulkanImageANGLE
=
false
;
bool
webglCompatibilityANGLE
=
false
;
bool
yuvInternalFormatANGLE
=
false
;
bool
drawTextureOES
=
false
;
bool
framebufferObjectOES
=
false
;
bool
matrixPaletteOES
=
false
;
bool
pointSizeArrayOES
=
false
;
bool
pointSpriteOES
=
false
;
bool
queryMatrixOES
=
false
;
bool
textureCubeMapOES
=
false
;
}
;
}
#
endif
