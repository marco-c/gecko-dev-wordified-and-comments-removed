#
include
"
libANGLE
/
ProgramPipeline
.
h
"
#
include
"
libANGLE
/
angletypes
.
h
"
#
include
"
libANGLE
/
renderer
/
GLImplFactory
.
h
"
#
include
"
libANGLE
/
renderer
/
ProgramPipelineImpl
.
h
"
namespace
gl
{
ProgramPipelineState
:
:
ProgramPipelineState
(
)
:
mLabel
(
)
{
}
ProgramPipelineState
:
:
~
ProgramPipelineState
(
)
{
}
const
std
:
:
string
&
ProgramPipelineState
:
:
getLabel
(
)
const
{
return
mLabel
;
}
ProgramPipeline
:
:
ProgramPipeline
(
rx
:
:
GLImplFactory
*
factory
GLuint
handle
)
:
RefCountObject
(
handle
)
mProgramPipeline
(
factory
-
>
createProgramPipeline
(
mState
)
)
{
ASSERT
(
mProgramPipeline
)
;
}
ProgramPipeline
:
:
~
ProgramPipeline
(
)
{
mProgramPipeline
.
release
(
)
;
}
void
ProgramPipeline
:
:
onDestroy
(
const
Context
*
context
)
{
}
void
ProgramPipeline
:
:
setLabel
(
const
Context
*
context
const
std
:
:
string
&
label
)
{
mState
.
mLabel
=
label
;
}
const
std
:
:
string
&
ProgramPipeline
:
:
getLabel
(
)
const
{
return
mState
.
mLabel
;
}
rx
:
:
ProgramPipelineImpl
*
ProgramPipeline
:
:
getImplementation
(
)
const
{
return
mProgramPipeline
.
get
(
)
;
}
}
