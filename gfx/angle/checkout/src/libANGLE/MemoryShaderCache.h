#
ifndef
LIBANGLE_MEMORY_SHADER_CACHE_H_
#
define
LIBANGLE_MEMORY_SHADER_CACHE_H_
#
include
<
array
>
#
include
"
GLSLANG
/
ShaderLang
.
h
"
#
include
"
common
/
MemoryBuffer
.
h
"
#
include
"
libANGLE
/
BlobCache
.
h
"
#
include
"
libANGLE
/
Error
.
h
"
namespace
gl
{
class
Context
;
class
Shader
;
class
ShaderState
;
class
ShCompilerInstance
;
class
MemoryShaderCache
final
:
angle
:
:
NonCopyable
{
public
:
explicit
MemoryShaderCache
(
egl
:
:
BlobCache
&
blobCache
)
;
~
MemoryShaderCache
(
)
;
angle
:
:
Result
putShader
(
const
Context
*
context
const
egl
:
:
BlobCache
:
:
Key
&
shaderHash
const
Shader
*
shader
)
;
angle
:
:
Result
getShader
(
const
Context
*
context
Shader
*
shader
const
ShCompileOptions
&
compileOptions
const
ShCompilerInstance
&
compilerInstance
egl
:
:
BlobCache
:
:
Key
*
hashOut
)
;
void
clear
(
)
;
size_t
maxSize
(
)
const
;
private
:
egl
:
:
BlobCache
&
mBlobCache
;
std
:
:
mutex
mHistogramMutex
;
}
;
}
#
endif
