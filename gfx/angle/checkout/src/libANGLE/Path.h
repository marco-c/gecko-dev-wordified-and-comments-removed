#
ifndef
LIBANGLE_PATH_H_
#
define
LIBANGLE_PATH_H_
#
include
"
angle_gl
.
h
"
#
include
"
common
/
angleutils
.
h
"
#
include
"
libANGLE
/
Error
.
h
"
#
include
"
libANGLE
/
RefCountObject
.
h
"
namespace
rx
{
class
PathImpl
;
}
namespace
gl
{
class
Path
final
:
angle
:
:
NonCopyable
{
public
:
Path
(
rx
:
:
PathImpl
*
impl
)
;
~
Path
(
)
;
angle
:
:
Result
setCommands
(
GLsizei
numCommands
const
GLubyte
*
commands
GLsizei
numCoords
GLenum
coordType
const
void
*
coords
)
;
void
setStrokeWidth
(
GLfloat
width
)
;
void
setStrokeBound
(
GLfloat
bound
)
;
void
setEndCaps
(
GLenum
type
)
;
void
setJoinStyle
(
GLenum
type
)
;
void
setMiterLimit
(
GLfloat
value
)
;
GLfloat
getStrokeWidth
(
)
const
{
return
mStrokeWidth
;
}
GLfloat
getStrokeBound
(
)
const
{
return
mStrokeBound
;
}
GLfloat
getMiterLimit
(
)
const
{
return
mMiterLimit
;
}
GLenum
getEndCaps
(
)
const
{
return
mEndCaps
;
}
GLenum
getJoinStyle
(
)
const
{
return
mJoinStyle
;
}
bool
hasPathData
(
)
const
{
return
mHasData
;
}
rx
:
:
PathImpl
*
getImplementation
(
)
const
{
return
mPath
;
}
private
:
rx
:
:
PathImpl
*
mPath
;
bool
mHasData
;
GLenum
mEndCaps
;
GLenum
mJoinStyle
;
GLfloat
mStrokeWidth
;
GLfloat
mStrokeBound
;
GLfloat
mMiterLimit
;
}
;
}
#
endif
