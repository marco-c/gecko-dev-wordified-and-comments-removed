#
include
<
tuple
>
namespace
gl
{
constexpr
Version
:
:
Version
(
)
:
Version
(
0
0
)
{
}
#
undef
major
#
undef
minor
constexpr
Version
:
:
Version
(
unsigned
int
major_
unsigned
int
minor_
)
:
major
(
major_
)
minor
(
minor_
)
{
}
inline
bool
operator
=
=
(
const
Version
&
a
const
Version
&
b
)
{
return
std
:
:
tie
(
a
.
major
a
.
minor
)
=
=
std
:
:
tie
(
b
.
major
b
.
minor
)
;
}
inline
bool
operator
!
=
(
const
Version
&
a
const
Version
&
b
)
{
return
std
:
:
tie
(
a
.
major
a
.
minor
)
!
=
std
:
:
tie
(
b
.
major
b
.
minor
)
;
}
inline
bool
operator
>
=
(
const
Version
&
a
const
Version
&
b
)
{
return
std
:
:
tie
(
a
.
major
a
.
minor
)
>
=
std
:
:
tie
(
b
.
major
b
.
minor
)
;
}
inline
bool
operator
<
=
(
const
Version
&
a
const
Version
&
b
)
{
return
std
:
:
tie
(
a
.
major
a
.
minor
)
<
=
std
:
:
tie
(
b
.
major
b
.
minor
)
;
}
inline
bool
operator
<
(
const
Version
&
a
const
Version
&
b
)
{
return
std
:
:
tie
(
a
.
major
a
.
minor
)
<
std
:
:
tie
(
b
.
major
b
.
minor
)
;
}
inline
bool
operator
>
(
const
Version
&
a
const
Version
&
b
)
{
return
std
:
:
tie
(
a
.
major
a
.
minor
)
>
std
:
:
tie
(
b
.
major
b
.
minor
)
;
}
}
