#
ifndef
nsOSHelperAppService_h__
#
define
nsOSHelperAppService_h__
#
include
"
nsExternalHelperAppService
.
h
"
#
include
"
nsCExternalHandlerService
.
h
"
#
include
"
nsCOMPtr
.
h
"
class
nsILineInputStream
;
class
nsMIMEInfoBase
;
class
nsOSHelperAppService
:
public
nsExternalHelperAppService
{
public
:
virtual
~
nsOSHelperAppService
(
)
;
NS_IMETHOD
GetMIMEInfoFromOS
(
const
nsACString
&
aMimeType
const
nsACString
&
aFileExt
bool
*
aFound
nsIMIMEInfo
*
*
aMIMEInfo
)
override
;
NS_IMETHOD
GetProtocolHandlerInfoFromOS
(
const
nsACString
&
aScheme
bool
*
found
nsIHandlerInfo
*
*
_retval
)
override
;
nsresult
OSProtocolHandlerExists
(
const
char
*
aProtocolScheme
bool
*
aHandlerExists
)
override
;
NS_IMETHOD
GetApplicationDescription
(
const
nsACString
&
aScheme
nsAString
&
_retval
)
override
;
virtual
nsresult
GetFileTokenForPath
(
const
char16_t
*
platformAppPath
nsIFile
*
*
aFile
)
override
;
protected
:
already_AddRefed
<
nsMIMEInfoBase
>
GetFromType
(
const
nsCString
&
aMimeType
)
;
already_AddRefed
<
nsMIMEInfoBase
>
GetFromExtension
(
const
nsCString
&
aFileExt
)
;
private
:
static
nsresult
UnescapeCommand
(
const
nsAString
&
aEscapedCommand
const
nsAString
&
aMajorType
const
nsAString
&
aMinorType
nsACString
&
aUnEscapedCommand
)
;
static
nsresult
GetFileLocation
(
const
char
*
aPrefName
const
char
*
aEnvVarName
nsAString
&
aFileLocation
)
;
static
nsresult
LookUpTypeAndDescription
(
const
nsAString
&
aFileExtension
nsAString
&
aMajorType
nsAString
&
aMinorType
nsAString
&
aDescription
bool
aUserData
)
;
static
nsresult
CreateInputStream
(
const
nsAString
&
aFilename
nsIFileInputStream
*
*
aFileInputStream
nsILineInputStream
*
*
aLineInputStream
nsACString
&
aBuffer
bool
*
aNetscapeFormat
bool
*
aMore
)
;
static
nsresult
GetTypeAndDescriptionFromMimetypesFile
(
const
nsAString
&
aFilename
const
nsAString
&
aFileExtension
nsAString
&
aMajorType
nsAString
&
aMinorType
nsAString
&
aDescription
)
;
static
nsresult
LookUpExtensionsAndDescription
(
const
nsAString
&
aMajorType
const
nsAString
&
aMinorType
nsAString
&
aFileExtensions
nsAString
&
aDescription
)
;
static
nsresult
GetExtensionsAndDescriptionFromMimetypesFile
(
const
nsAString
&
aFilename
const
nsAString
&
aMajorType
const
nsAString
&
aMinorType
nsAString
&
aFileExtensions
nsAString
&
aDescription
)
;
static
nsresult
ParseNetscapeMIMETypesEntry
(
const
nsAString
&
aEntry
nsAString
:
:
const_iterator
&
aMajorTypeStart
nsAString
:
:
const_iterator
&
aMajorTypeEnd
nsAString
:
:
const_iterator
&
aMinorTypeStart
nsAString
:
:
const_iterator
&
aMinorTypeEnd
nsAString
&
aExtensions
nsAString
:
:
const_iterator
&
aDescriptionStart
nsAString
:
:
const_iterator
&
aDescriptionEnd
)
;
static
nsresult
ParseNormalMIMETypesEntry
(
const
nsAString
&
aEntry
nsAString
:
:
const_iterator
&
aMajorTypeStart
nsAString
:
:
const_iterator
&
aMajorTypeEnd
nsAString
:
:
const_iterator
&
aMinorTypeStart
nsAString
:
:
const_iterator
&
aMinorTypeEnd
nsAString
&
aExtensions
nsAString
:
:
const_iterator
&
aDescriptionStart
nsAString
:
:
const_iterator
&
aDescriptionEnd
)
;
static
nsresult
LookUpHandlerAndDescription
(
const
nsAString
&
aMajorType
const
nsAString
&
aMinorType
nsAString
&
aHandler
nsAString
&
aDescription
nsAString
&
aMozillaFlags
)
;
static
nsresult
DoLookUpHandlerAndDescription
(
const
nsAString
&
aMajorType
const
nsAString
&
aMinorType
nsAString
&
aHandler
nsAString
&
aDescription
nsAString
&
aMozillaFlags
bool
aUserData
)
;
static
nsresult
GetHandlerAndDescriptionFromMailcapFile
(
const
nsAString
&
aFilename
const
nsAString
&
aMajorType
const
nsAString
&
aMinorType
nsAString
&
aHandler
nsAString
&
aDescription
nsAString
&
aMozillaFlags
)
;
}
;
#
endif
