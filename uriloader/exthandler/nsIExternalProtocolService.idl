#
include
"
nsISupports
.
idl
"
interface
nsIURI
;
interface
nsIFile
;
interface
nsIInterfaceRequestor
;
interface
nsIHandlerInfo
;
webidl
BrowsingContext
;
[
scriptable
uuid
(
70f93b7a
-
3ec6
-
4bcb
-
b093
-
92d9984c9f83
)
]
interface
nsIExternalProtocolService
:
nsISupports
{
boolean
externalProtocolHandlerExists
(
in
string
aProtocolScheme
)
;
boolean
isExposedProtocol
(
in
string
aProtocolScheme
)
;
nsIHandlerInfo
getProtocolHandlerInfo
(
in
ACString
aProtocolScheme
)
;
nsIHandlerInfo
getProtocolHandlerInfoFromOS
(
in
ACString
aProtocolScheme
out
boolean
aFound
)
;
void
setProtocolHandlerDefaults
(
in
nsIHandlerInfo
aHandlerInfo
in
boolean
aOSHandlerExists
)
;
void
loadURI
(
in
nsIURI
aURI
in
BrowsingContext
aBrowsingContext
)
;
AString
getApplicationDescription
(
in
AUTF8String
aScheme
)
;
bool
isCurrentAppOSDefaultForProtocol
(
in
AUTF8String
aScheme
)
;
}
;
