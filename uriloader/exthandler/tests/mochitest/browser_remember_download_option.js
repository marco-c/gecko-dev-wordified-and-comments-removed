add_task
(
function
*
(
)
{
let
launcher
=
createMockedObjects
(
true
)
;
let
dlg
=
yield
*
openHelperAppDialog
(
launcher
)
;
let
doc
=
dlg
.
document
;
ok
(
!
doc
.
getElementById
(
"
rememberChoice
"
)
.
checked
"
Remember
choice
checkbox
should
be
not
checked
.
"
)
;
doc
.
getElementById
(
"
rememberChoice
"
)
.
checked
=
true
;
ok
(
!
gHandlerSvc
.
exists
(
launcher
.
MIMEInfo
)
"
Should
not
be
in
nsIHandlerService
.
"
)
;
let
dialogClosedPromise
=
BrowserTestUtils
.
windowClosed
(
dlg
)
;
doc
.
documentElement
.
getButton
(
"
accept
"
)
.
disabled
=
false
;
doc
.
documentElement
.
acceptDialog
(
)
;
yield
dialogClosedPromise
;
ok
(
gHandlerSvc
.
exists
(
launcher
.
MIMEInfo
)
"
Should
be
in
nsIHandlerService
.
"
)
;
var
mimeType
=
gHandlerSvc
.
getTypeFromExtension
(
"
abc
"
)
;
is
(
mimeType
launcher
.
MIMEInfo
.
type
"
Got
correct
mime
type
.
"
)
;
var
handlerInfos
=
gHandlerSvc
.
enumerate
(
)
;
while
(
handlerInfos
.
hasMoreElements
(
)
)
{
let
handlerInfo
=
handlerInfos
.
getNext
(
)
.
QueryInterface
(
Ci
.
nsIHandlerInfo
)
;
if
(
handlerInfo
.
type
=
=
launcher
.
MIMEInfo
.
type
)
{
ok
(
!
handlerInfo
.
alwaysAskBeforeHandling
"
Should
turn
off
the
always
ask
.
"
)
;
ok
(
handlerInfo
.
preferredApplicationHandler
.
equals
(
launcher
.
MIMEInfo
.
preferredApplicationHandler
)
"
Should
be
equal
to
the
mockedHandlerApp
.
"
)
;
is
(
handlerInfo
.
preferredAction
launcher
.
MIMEInfo
.
preferredAction
"
Should
be
equal
to
Ci
.
nsIHandlerInfo
.
useHelperApp
.
"
)
;
break
;
}
}
}
)
;
