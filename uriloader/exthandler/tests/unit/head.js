"
use
strict
"
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
AppConstants
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
FileUtils
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
NetUtil
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
osfile
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
HandlerServiceTestUtils
.
jsm
"
this
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
TestUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyServiceGetter
(
this
"
gHandlerService
"
"
mozilla
.
org
/
uriloader
/
handler
-
service
;
1
"
"
nsIHandlerService
"
)
;
do_get_profile
(
)
;
let
jsonPath
=
OS
.
Path
.
join
(
OS
.
Constants
.
Path
.
profileDir
"
handlers
.
json
"
)
;
let
unloadHandlerStore
=
async
function
(
)
{
gHandlerService
;
let
promise
=
TestUtils
.
topicObserved
(
"
handlersvc
-
json
-
replace
-
complete
"
)
;
Services
.
obs
.
notifyObservers
(
null
"
handlersvc
-
json
-
replace
"
null
)
;
await
promise
;
}
;
let
deleteHandlerStore
=
async
function
(
)
{
await
unloadHandlerStore
(
)
;
await
OS
.
File
.
remove
(
jsonPath
{
ignoreAbsent
:
true
}
)
;
}
;
let
copyTestDataToHandlerStore
=
async
function
(
)
{
await
unloadHandlerStore
(
)
;
await
OS
.
File
.
copy
(
do_get_file
(
"
handlers
.
json
"
)
.
path
jsonPath
)
;
}
;
registerCleanupFunction
(
async
function
test_terminate
(
)
{
await
deleteHandlerStore
(
)
;
}
)
;
