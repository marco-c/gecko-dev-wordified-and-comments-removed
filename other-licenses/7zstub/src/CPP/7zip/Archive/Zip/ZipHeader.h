#
ifndef
__ARCHIVE_ZIP_HEADER_H
#
define
__ARCHIVE_ZIP_HEADER_H
#
include
"
.
.
/
.
.
/
.
.
/
Common
/
MyTypes
.
h
"
namespace
NArchive
{
namespace
NZip
{
const
unsigned
kMarkerSize
=
4
;
namespace
NSignature
{
const
UInt32
kLocalFileHeader
=
0x04034B50
;
const
UInt32
kDataDescriptor
=
0x08074B50
;
const
UInt32
kCentralFileHeader
=
0x02014B50
;
const
UInt32
kEcd
=
0x06054B50
;
const
UInt32
kEcd64
=
0x06064B50
;
const
UInt32
kEcd64Locator
=
0x07064B50
;
const
UInt32
kSpan
=
0x08074B50
;
const
UInt32
kNoSpan
=
0x30304B50
;
}
const
unsigned
kLocalHeaderSize
=
4
+
26
;
const
unsigned
kDataDescriptorSize32
=
4
+
4
+
4
*
2
;
const
unsigned
kDataDescriptorSize64
=
4
+
4
+
8
*
2
;
const
unsigned
kCentralHeaderSize
=
4
+
42
;
const
unsigned
kEcdSize
=
22
;
const
unsigned
kEcd64_MainSize
=
44
;
const
unsigned
kEcd64_FullSize
=
12
+
kEcd64_MainSize
;
const
unsigned
kEcd64Locator_Size
=
20
;
namespace
NFileHeader
{
namespace
NCompressionMethod
{
enum
EType
{
kStore
=
0
kShrink
=
1
kReduce1
=
2
kReduce2
=
3
kReduce3
=
4
kReduce4
=
5
kImplode
=
6
kTokenize
=
7
kDeflate
=
8
kDeflate64
=
9
kPKImploding
=
10
kBZip2
=
12
kLZMA
=
14
kTerse
=
18
kLz77
=
19
kXz
=
95
kJpeg
=
96
kWavPack
=
97
kPPMd
=
98
kWzAES
=
99
}
;
const
Byte
kMadeByProgramVersion
=
63
;
const
Byte
kExtractVersion_Default
=
10
;
const
Byte
kExtractVersion_Dir
=
20
;
const
Byte
kExtractVersion_ZipCrypto
=
20
;
const
Byte
kExtractVersion_Deflate
=
20
;
const
Byte
kExtractVersion_Deflate64
=
21
;
const
Byte
kExtractVersion_Zip64
=
45
;
const
Byte
kExtractVersion_BZip2
=
46
;
const
Byte
kExtractVersion_Aes
=
51
;
const
Byte
kExtractVersion_LZMA
=
63
;
const
Byte
kExtractVersion_PPMd
=
63
;
const
Byte
kExtractVersion_Xz
=
20
;
}
namespace
NExtraID
{
enum
{
kZip64
=
0x01
kNTFS
=
0x0A
kStrongEncrypt
=
0x17
kUnixTime
=
0x5455
kUnixExtra
=
0x5855
kIzUnicodeComment
=
0x6375
kIzUnicodeName
=
0x7075
kWzAES
=
0x9901
}
;
}
namespace
NNtfsExtra
{
const
UInt16
kTagTime
=
1
;
enum
{
kMTime
=
0
kATime
kCTime
}
;
}
namespace
NUnixTime
{
enum
{
kMTime
=
0
kATime
kCTime
}
;
}
namespace
NUnixExtra
{
enum
{
kATime
=
0
kMTime
}
;
}
namespace
NFlags
{
const
unsigned
kEncrypted
=
1
<
<
0
;
const
unsigned
kLzmaEOS
=
1
<
<
1
;
const
unsigned
kDescriptorUsedMask
=
1
<
<
3
;
const
unsigned
kStrongEncrypted
=
1
<
<
6
;
const
unsigned
kUtf8
=
1
<
<
11
;
const
unsigned
kAltStream
=
1
<
<
14
;
const
unsigned
kImplodeDictionarySizeMask
=
1
<
<
1
;
const
unsigned
kImplodeLiteralsOnMask
=
1
<
<
2
;
}
namespace
NHostOS
{
enum
EEnum
{
kFAT
=
0
kAMIGA
=
1
kVMS
=
2
kUnix
=
3
kVM_CMS
=
4
kAtari
=
5
kHPFS
=
6
kMac
=
7
kZ_System
=
8
kCPM
=
9
kTOPS20
=
10
kNTFS
=
11
kQDOS
=
12
kAcorn
=
13
kVFAT
=
14
kMVS
=
15
kBeOS
=
16
kTandem
=
17
kOS400
=
18
kOSX
=
19
}
;
}
namespace
NAmigaAttrib
{
const
UInt32
kIFMT
=
06000
;
const
UInt32
kIFDIR
=
04000
;
const
UInt32
kIFREG
=
02000
;
const
UInt32
kIHIDDEN
=
00200
;
const
UInt32
kISCRIPT
=
00100
;
const
UInt32
kIPURE
=
00040
;
const
UInt32
kIARCHIVE
=
00020
;
const
UInt32
kIREAD
=
00010
;
const
UInt32
kIWRITE
=
00004
;
const
UInt32
kIEXECUTE
=
00002
;
const
UInt32
kIDELETE
=
00001
;
}
}
}
}
#
endif
