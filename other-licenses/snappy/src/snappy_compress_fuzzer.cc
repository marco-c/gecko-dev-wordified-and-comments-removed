#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
cassert
>
#
include
<
string
>
#
include
"
snappy
.
h
"
extern
"
C
"
int
LLVMFuzzerTestOneInput
(
const
uint8_t
*
data
size_t
size
)
{
std
:
:
string
input
(
reinterpret_cast
<
const
char
*
>
(
data
)
size
)
;
for
(
int
level
=
snappy
:
:
CompressionOptions
:
:
MinCompressionLevel
(
)
;
level
<
=
snappy
:
:
CompressionOptions
:
:
MaxCompressionLevel
(
)
;
+
+
level
)
{
std
:
:
string
compressed
;
size_t
compressed_size
=
snappy
:
:
Compress
(
input
.
data
(
)
input
.
size
(
)
&
compressed
snappy
:
:
CompressionOptions
{
level
}
)
;
(
void
)
compressed_size
;
assert
(
compressed_size
=
=
compressed
.
size
(
)
)
;
assert
(
compressed
.
size
(
)
<
=
snappy
:
:
MaxCompressedLength
(
input
.
size
(
)
)
)
;
assert
(
snappy
:
:
IsValidCompressedBuffer
(
compressed
.
data
(
)
compressed
.
size
(
)
)
)
;
std
:
:
string
uncompressed_after_compress
;
bool
uncompress_succeeded
=
snappy
:
:
Uncompress
(
compressed
.
data
(
)
compressed
.
size
(
)
&
uncompressed_after_compress
)
;
(
void
)
uncompress_succeeded
;
assert
(
uncompress_succeeded
)
;
assert
(
input
=
=
uncompressed_after_compress
)
;
}
return
0
;
}
