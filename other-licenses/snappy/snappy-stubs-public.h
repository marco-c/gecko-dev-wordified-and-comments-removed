#
ifndef
THIRD_PARTY_SNAPPY_OPENSOURCE_SNAPPY_STUBS_PUBLIC_H_
#
define
THIRD_PARTY_SNAPPY_OPENSOURCE_SNAPPY_STUBS_PUBLIC_H_
#
include
<
stdint
.
h
>
#
if
defined
IS_BIG_ENDIAN
|
|
defined
__BIG_ENDIAN__
#
define
WORDS_BIGENDIAN
#
endif
#
define
SNAPPY_MAJOR
1
#
define
SNAPPY_MINOR
1
#
define
SNAPPY_PATCHLEVEL
8
#
define
SNAPPY_VERSION
\
(
(
SNAPPY_MAJOR
<
<
16
)
|
(
SNAPPY_MINOR
<
<
8
)
|
SNAPPY_PATCHLEVEL
)
#
include
<
string
>
namespace
snappy
{
typedef
int8_t
int8
;
typedef
uint8_t
uint8
;
typedef
int16_t
int16
;
typedef
uint16_t
uint16
;
typedef
int32_t
int32
;
typedef
uint32_t
uint32
;
typedef
int64_t
int64
;
typedef
uint64_t
uint64
;
typedef
std
:
:
string
string
;
#
ifndef
DISALLOW_COPY_AND_ASSIGN
#
define
DISALLOW_COPY_AND_ASSIGN
(
TypeName
)
\
TypeName
(
const
TypeName
&
)
;
\
void
operator
=
(
const
TypeName
&
)
#
endif
struct
iovec
{
void
*
iov_base
;
size_t
iov_len
;
}
;
#
if
defined
(
_WIN32
)
|
|
defined
(
_WIN64
)
#
if
defined
(
_WIN64
)
typedef
__int64
LONG_PTR
;
#
else
typedef
long
LONG_PTR
;
#
endif
typedef
LONG_PTR
SSIZE_T
;
typedef
SSIZE_T
ssize_t
;
#
endif
}
#
endif
