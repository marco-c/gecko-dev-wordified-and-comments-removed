#
ifndef
mozilla_hal_WindowIdentifier_h
#
define
mozilla_hal_WindowIdentifier_h
#
include
"
mozilla
/
Types
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsCOMPtr
.
h
"
class
nsPIDOMWindowInner
;
namespace
mozilla
{
namespace
hal
{
class
WindowIdentifier
{
public
:
WindowIdentifier
(
)
;
WindowIdentifier
(
const
WindowIdentifier
&
other
)
;
explicit
WindowIdentifier
(
nsPIDOMWindowInner
*
window
)
;
WindowIdentifier
(
const
InfallibleTArray
<
uint64_t
>
&
id
nsPIDOMWindowInner
*
window
)
;
typedef
InfallibleTArray
<
uint64_t
>
IDArrayType
;
const
IDArrayType
&
AsArray
(
)
const
;
void
AppendProcessID
(
)
;
bool
HasTraveledThroughIPC
(
)
const
;
nsPIDOMWindowInner
*
GetWindow
(
)
const
;
private
:
uint64_t
GetWindowID
(
)
const
;
AutoInfallibleTArray
<
uint64_t
3
>
mID
;
nsCOMPtr
<
nsPIDOMWindowInner
>
mWindow
;
bool
mIsEmpty
;
}
;
}
}
#
endif
