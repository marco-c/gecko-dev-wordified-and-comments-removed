#
include
<
sys
/
types
.
h
>
#
include
<
sys
/
sysctl
.
h
>
#
include
"
mozilla
/
BitSet
.
h
"
#
include
"
nsSystemInfo
.
h
"
namespace
mozilla
:
:
hal_impl
{
mozilla
:
:
Maybe
<
HeterogeneousCpuInfo
>
CreateHeterogeneousCpuInfo
(
)
{
#
ifdef
__aarch64__
size_t
len
=
sizeof
(
uint32_t
)
;
uint32_t
pCores
=
0
;
if
(
sysctlbyname
(
"
hw
.
perflevel0
.
logicalcpu_max
"
&
pCores
&
len
nullptr
0
)
)
{
return
Nothing
(
)
;
}
len
=
sizeof
(
uint32_t
)
;
uint32_t
eCores
=
0
;
if
(
sysctlbyname
(
"
hw
.
perflevel1
.
logicalcpu_max
"
&
eCores
&
len
nullptr
0
)
)
{
return
Nothing
(
)
;
}
HeterogeneousCpuInfo
info
;
info
.
mTotalNumCpus
=
pCores
+
eCores
;
for
(
uint32_t
i
=
0
;
i
<
HeterogeneousCpuInfo
:
:
MAX_CPUS
;
+
+
i
)
{
if
(
pCores
)
{
-
-
pCores
;
info
.
mBigCpus
[
i
]
=
true
;
}
else
if
(
eCores
)
{
-
-
eCores
;
info
.
mLittleCpus
[
i
]
=
true
;
}
else
{
break
;
}
}
return
Some
(
info
)
;
#
else
return
Nothing
(
)
;
#
endif
}
const
Maybe
<
HeterogeneousCpuInfo
>
&
GetHeterogeneousCpuInfo
(
)
{
static
const
Maybe
<
HeterogeneousCpuInfo
>
cpuInfo
=
CreateHeterogeneousCpuInfo
(
)
;
return
cpuInfo
;
}
}
