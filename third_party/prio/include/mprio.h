#
ifndef
__PRIO_H__
#
define
__PRIO_H__
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
<
blapit
.
h
>
#
include
<
msgpack
.
h
>
#
include
<
pk11pub
.
h
>
#
include
<
seccomon
.
h
>
#
include
<
stdbool
.
h
>
#
include
<
stddef
.
h
>
#
define
PRG_SEED_LENGTH
AES_128_KEY_LENGTH
typedef
unsigned
char
PrioPRGSeed
[
PRG_SEED_LENGTH
]
;
#
define
CURVE25519_KEY_LEN
32
#
define
CURVE25519_KEY_LEN_HEX
64
typedef
enum
{
PRIO_SERVER_A
PRIO_SERVER_B
}
PrioServerId
;
typedef
struct
prio_config
*
PrioConfig
;
typedef
const
struct
prio_config
*
const_PrioConfig
;
typedef
struct
prio_server
*
PrioServer
;
typedef
const
struct
prio_server
*
const_PrioServer
;
typedef
struct
prio_verifier
*
PrioVerifier
;
typedef
const
struct
prio_verifier
*
const_PrioVerifier
;
typedef
struct
prio_packet_verify1
*
PrioPacketVerify1
;
typedef
const
struct
prio_packet_verify1
*
const_PrioPacketVerify1
;
typedef
struct
prio_packet_verify2
*
PrioPacketVerify2
;
typedef
const
struct
prio_packet_verify2
*
const_PrioPacketVerify2
;
typedef
struct
prio_total_share
*
PrioTotalShare
;
typedef
const
struct
prio_total_share
*
const_PrioTotalShare
;
typedef
SECKEYPublicKey
*
PublicKey
;
typedef
const
SECKEYPublicKey
*
const_PublicKey
;
typedef
SECKEYPrivateKey
*
PrivateKey
;
typedef
const
SECKEYPrivateKey
*
const_PrivateKey
;
SECStatus
Prio_init
(
)
;
void
Prio_clear
(
)
;
PrioConfig
PrioConfig_new
(
int
nFields
PublicKey
serverA
PublicKey
serverB
const
unsigned
char
*
batchId
unsigned
int
batchIdLen
)
;
void
PrioConfig_clear
(
PrioConfig
cfg
)
;
int
PrioConfig_numDataFields
(
const_PrioConfig
cfg
)
;
int
PrioConfig_maxDataFields
(
void
)
;
PrioConfig
PrioConfig_newTest
(
int
nFields
)
;
SECStatus
Keypair_new
(
PrivateKey
*
pvtkey
PublicKey
*
pubkey
)
;
SECStatus
PublicKey_import
(
PublicKey
*
pk
const
unsigned
char
*
data
unsigned
int
dataLen
)
;
SECStatus
PrivateKey_import
(
PrivateKey
*
sk
const
unsigned
char
*
privData
unsigned
int
privDataLen
const
unsigned
char
*
pubData
unsigned
int
pubDataLen
)
;
SECStatus
PublicKey_import_hex
(
PublicKey
*
pk
const
unsigned
char
*
hexData
unsigned
int
dataLen
)
;
SECStatus
PrivateKey_import_hex
(
PrivateKey
*
sk
const
unsigned
char
*
privHexData
unsigned
int
privDataLen
const
unsigned
char
*
pubHexData
unsigned
int
pubDataLen
)
;
SECStatus
PublicKey_export
(
const_PublicKey
pk
unsigned
char
*
data
unsigned
int
dataLen
)
;
SECStatus
PrivateKey_export
(
PrivateKey
sk
unsigned
char
*
data
unsigned
int
dataLen
)
;
SECStatus
PublicKey_export_hex
(
const_PublicKey
pk
unsigned
char
*
data
unsigned
int
dataLen
)
;
SECStatus
PrivateKey_export_hex
(
PrivateKey
sk
unsigned
char
*
data
unsigned
int
dataLen
)
;
void
PublicKey_clear
(
PublicKey
pubkey
)
;
void
PrivateKey_clear
(
PrivateKey
pvtkey
)
;
SECStatus
PrioClient_encode
(
const_PrioConfig
cfg
const
bool
*
data_in
unsigned
char
*
*
forServerA
unsigned
int
*
aLen
unsigned
char
*
*
forServerB
unsigned
int
*
bLen
)
;
SECStatus
PrioPRGSeed_randomize
(
PrioPRGSeed
*
seed
)
;
PrioServer
PrioServer_new
(
const_PrioConfig
cfg
PrioServerId
serverIdx
PrivateKey
serverPriv
const
PrioPRGSeed
serverSharedSecret
)
;
void
PrioServer_clear
(
PrioServer
s
)
;
PrioVerifier
PrioVerifier_new
(
PrioServer
s
)
;
void
PrioVerifier_clear
(
PrioVerifier
v
)
;
SECStatus
PrioVerifier_set_data
(
PrioVerifier
v
unsigned
char
*
data
unsigned
int
dataLen
)
;
PrioPacketVerify1
PrioPacketVerify1_new
(
void
)
;
void
PrioPacketVerify1_clear
(
PrioPacketVerify1
p1
)
;
SECStatus
PrioPacketVerify1_set_data
(
PrioPacketVerify1
p1
const_PrioVerifier
v
)
;
SECStatus
PrioPacketVerify1_write
(
const_PrioPacketVerify1
p
msgpack_packer
*
pk
)
;
SECStatus
PrioPacketVerify1_read
(
PrioPacketVerify1
p
msgpack_unpacker
*
upk
const_PrioConfig
cfg
)
;
PrioPacketVerify2
PrioPacketVerify2_new
(
void
)
;
void
PrioPacketVerify2_clear
(
PrioPacketVerify2
p
)
;
SECStatus
PrioPacketVerify2_set_data
(
PrioPacketVerify2
p2
const_PrioVerifier
v
const_PrioPacketVerify1
p1A
const_PrioPacketVerify1
p1B
)
;
SECStatus
PrioPacketVerify2_write
(
const_PrioPacketVerify2
p
msgpack_packer
*
pk
)
;
SECStatus
PrioPacketVerify2_read
(
PrioPacketVerify2
p
msgpack_unpacker
*
upk
const_PrioConfig
cfg
)
;
SECStatus
PrioVerifier_isValid
(
const_PrioVerifier
v
const_PrioPacketVerify2
pA
const_PrioPacketVerify2
pB
)
;
SECStatus
PrioServer_aggregate
(
PrioServer
s
PrioVerifier
v
)
;
PrioTotalShare
PrioTotalShare_new
(
void
)
;
void
PrioTotalShare_clear
(
PrioTotalShare
t
)
;
SECStatus
PrioTotalShare_set_data
(
PrioTotalShare
t
const_PrioServer
s
)
;
SECStatus
PrioTotalShare_write
(
const_PrioTotalShare
t
msgpack_packer
*
pk
)
;
SECStatus
PrioTotalShare_read
(
PrioTotalShare
t
msgpack_unpacker
*
upk
const_PrioConfig
cfg
)
;
SECStatus
PrioTotalShare_final
(
const_PrioConfig
cfg
unsigned
long
long
*
output
const_PrioTotalShare
tA
const_PrioTotalShare
tB
)
;
#
endif
#
ifdef
__cplusplus
}
#
endif
