#
ifndef
DAV1D_SRC_THREAD_TASK_H
#
define
DAV1D_SRC_THREAD_TASK_H
#
include
<
limits
.
h
>
#
include
"
src
/
internal
.
h
"
#
define
FRAME_ERROR
(
UINT_MAX
-
1
)
#
define
TILE_ERROR
(
INT_MAX
-
1
)
enum
TaskStatus
{
DAV1D_TASK_DEFAULT
DAV1D_TASK_READY
DAV1D_TASK_RUNNING
DAV1D_TASK_DONE
}
;
struct
Dav1dTask
{
enum
TaskStatus
status
;
int
start
;
unsigned
frame_idx
;
int
frame_id
;
int
sby
;
filter_sbrow_fn
fn
;
Dav1dTask
*
last_deps
[
2
]
;
Dav1dTask
*
next_deps
[
2
]
;
Dav1dTask
*
next_exec
;
}
;
int
dav1d_task_create_filter_sbrow
(
Dav1dFrameContext
*
f
)
;
void
dav1d_task_schedule
(
struct
PostFilterThreadData
*
pftd
Dav1dTask
*
t
)
;
void
*
dav1d_frame_task
(
void
*
data
)
;
void
*
dav1d_tile_task
(
void
*
data
)
;
void
*
dav1d_postfilter_task
(
void
*
data
)
;
int
dav1d_decode_frame
(
Dav1dFrameContext
*
f
)
;
int
dav1d_decode_tile_sbrow
(
Dav1dTileContext
*
t
)
;
#
endif
