#
ifndef
__DAV1D_SRC_IPRED_H__
#
define
__DAV1D_SRC_IPRED_H__
#
include
<
stddef
.
h
>
#
include
"
common
/
bitdepth
.
h
"
#
include
"
src
/
levels
.
h
"
#
define
decl_angular_ipred_fn
(
name
)
\
void
(
name
)
(
pixel
*
dst
ptrdiff_t
stride
const
pixel
*
topleft
\
int
width
int
height
int
angle
int
max_width
int
max_height
\
HIGHBD_DECL_SUFFIX
)
typedef
decl_angular_ipred_fn
(
*
angular_ipred_fn
)
;
#
define
decl_cfl_ac_fn
(
name
)
\
void
(
name
)
(
int16_t
*
ac
const
pixel
*
y
ptrdiff_t
stride
\
int
w_pad
int
h_pad
int
cw
int
ch
)
typedef
decl_cfl_ac_fn
(
*
cfl_ac_fn
)
;
#
define
decl_cfl_pred_fn
(
name
)
\
void
(
name
)
(
pixel
*
dst
ptrdiff_t
stride
const
pixel
*
topleft
\
int
width
int
height
const
int16_t
*
ac
int
alpha
\
HIGHBD_DECL_SUFFIX
)
typedef
decl_cfl_pred_fn
(
*
cfl_pred_fn
)
;
#
define
decl_pal_pred_fn
(
name
)
\
void
(
name
)
(
pixel
*
dst
ptrdiff_t
stride
const
uint16_t
*
pal
\
const
uint8_t
*
idx
int
w
int
h
)
typedef
decl_pal_pred_fn
(
*
pal_pred_fn
)
;
typedef
struct
Dav1dIntraPredDSPContext
{
angular_ipred_fn
intra_pred
[
N_IMPL_INTRA_PRED_MODES
]
;
cfl_ac_fn
cfl_ac
[
3
]
;
cfl_pred_fn
cfl_pred
[
DC_128_PRED
+
1
]
;
pal_pred_fn
pal_pred
;
}
Dav1dIntraPredDSPContext
;
bitfn_decls
(
void
dav1d_intra_pred_dsp_init
Dav1dIntraPredDSPContext
*
c
)
;
bitfn_decls
(
void
dav1d_intra_pred_dsp_init_x86
Dav1dIntraPredDSPContext
*
c
)
;
#
endif
