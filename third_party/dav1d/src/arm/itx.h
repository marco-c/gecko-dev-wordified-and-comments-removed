#
include
"
src
/
cpu
.
h
"
#
include
"
src
/
itx
.
h
"
decl_itx17_fns
(
4
4
neon
)
;
decl_itx16_fns
(
4
8
neon
)
;
decl_itx16_fns
(
4
16
neon
)
;
decl_itx16_fns
(
8
4
neon
)
;
decl_itx16_fns
(
8
8
neon
)
;
decl_itx16_fns
(
8
16
neon
)
;
decl_itx2_fns
(
8
32
neon
)
;
decl_itx16_fns
(
16
4
neon
)
;
decl_itx16_fns
(
16
8
neon
)
;
decl_itx12_fns
(
16
16
neon
)
;
decl_itx2_fns
(
16
32
neon
)
;
decl_itx2_fns
(
32
8
neon
)
;
decl_itx2_fns
(
32
16
neon
)
;
decl_itx2_fns
(
32
32
neon
)
;
decl_itx_fn
(
BF
(
dav1d_inv_txfm_add_dct_dct_16x64
neon
)
)
;
decl_itx_fn
(
BF
(
dav1d_inv_txfm_add_dct_dct_32x64
neon
)
)
;
decl_itx_fn
(
BF
(
dav1d_inv_txfm_add_dct_dct_64x16
neon
)
)
;
decl_itx_fn
(
BF
(
dav1d_inv_txfm_add_dct_dct_64x32
neon
)
)
;
decl_itx_fn
(
BF
(
dav1d_inv_txfm_add_dct_dct_64x64
neon
)
)
;
static
ALWAYS_INLINE
void
itx_dsp_init_arm
(
Dav1dInvTxfmDSPContext
*
const
c
int
bpc
)
{
const
unsigned
flags
=
dav1d_get_cpu_flags
(
)
;
if
(
!
(
flags
&
DAV1D_ARM_CPU_FLAG_NEON
)
)
return
;
assign_itx_fn
(
4
4
wht_wht
WHT_WHT
neon
)
;
if
(
BITDEPTH
=
=
16
&
&
bpc
!
=
10
)
return
;
assign_itx16_fn
(
4
4
neon
)
;
assign_itx16_fn
(
R
4
8
neon
)
;
assign_itx16_fn
(
R
4
16
neon
)
;
assign_itx16_fn
(
R
8
4
neon
)
;
assign_itx16_fn
(
8
8
neon
)
;
assign_itx16_fn
(
R
8
16
neon
)
;
assign_itx2_fn
(
R
8
32
neon
)
;
assign_itx16_fn
(
R
16
4
neon
)
;
assign_itx16_fn
(
R
16
8
neon
)
;
assign_itx12_fn
(
16
16
neon
)
;
assign_itx2_fn
(
R
16
32
neon
)
;
assign_itx1_fn
(
R
16
64
neon
)
;
assign_itx2_fn
(
R
32
8
neon
)
;
assign_itx2_fn
(
R
32
16
neon
)
;
assign_itx2_fn
(
32
32
neon
)
;
assign_itx1_fn
(
R
32
64
neon
)
;
assign_itx1_fn
(
R
64
16
neon
)
;
assign_itx1_fn
(
R
64
32
neon
)
;
assign_itx1_fn
(
64
64
neon
)
;
}
