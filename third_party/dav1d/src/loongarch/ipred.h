#
ifndef
DAV1D_SRC_LOONGARCH_IPRED_H
#
define
DAV1D_SRC_LOONGARCH_IPRED_H
#
include
"
config
.
h
"
#
include
"
src
/
ipred
.
h
"
#
include
"
src
/
cpu
.
h
"
#
include
"
src
/
tables
.
h
"
#
define
MULTIPLIER_1x2
0x5556
#
define
MULTIPLIER_1x4
0x3334
#
define
BASE_SHIFT
16
#
define
init_fn
(
type0
type1
name
suffix
)
\
c
-
>
type0
[
type1
]
=
BF
(
dav1d_
#
#
name
suffix
)
#
define
init_angular_ipred_fn
(
type
name
suffix
)
\
init_fn
(
intra_pred
type
name
suffix
)
#
define
init_cfl_pred_fn
(
type
name
suffix
)
\
init_fn
(
cfl_pred
type
name
suffix
)
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_dc
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_dc_128
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_dc_top
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_dc_left
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_h
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_v
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_paeth
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_smooth
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_smooth_v
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_smooth_h
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_filter
lsx
)
)
;
decl_angular_ipred_fn
(
BF
(
dav1d_ipred_z1
lsx
)
)
;
decl_cfl_pred_fn
(
BF
(
dav1d_ipred_cfl
lsx
)
)
;
decl_cfl_pred_fn
(
BF
(
dav1d_ipred_cfl_128
lsx
)
)
;
decl_cfl_pred_fn
(
BF
(
dav1d_ipred_cfl_top
lsx
)
)
;
decl_cfl_pred_fn
(
BF
(
dav1d_ipred_cfl_left
lsx
)
)
;
decl_pal_pred_fn
(
BF
(
dav1d_pal_pred
lsx
)
)
;
static
ALWAYS_INLINE
void
intra_pred_dsp_init_loongarch
(
Dav1dIntraPredDSPContext
*
const
c
)
{
const
unsigned
flags
=
dav1d_get_cpu_flags
(
)
;
if
(
!
(
flags
&
DAV1D_LOONGARCH_CPU_FLAG_LSX
)
)
return
;
#
if
BITDEPTH
=
=
8
init_angular_ipred_fn
(
DC_PRED
ipred_dc
lsx
)
;
init_angular_ipred_fn
(
DC_128_PRED
ipred_dc_128
lsx
)
;
init_angular_ipred_fn
(
TOP_DC_PRED
ipred_dc_top
lsx
)
;
init_angular_ipred_fn
(
LEFT_DC_PRED
ipred_dc_left
lsx
)
;
init_angular_ipred_fn
(
HOR_PRED
ipred_h
lsx
)
;
init_angular_ipred_fn
(
VERT_PRED
ipred_v
lsx
)
;
init_angular_ipred_fn
(
PAETH_PRED
ipred_paeth
lsx
)
;
init_angular_ipred_fn
(
SMOOTH_PRED
ipred_smooth
lsx
)
;
init_angular_ipred_fn
(
SMOOTH_V_PRED
ipred_smooth_v
lsx
)
;
init_angular_ipred_fn
(
SMOOTH_H_PRED
ipred_smooth_h
lsx
)
;
init_angular_ipred_fn
(
FILTER_PRED
ipred_filter
lsx
)
;
init_angular_ipred_fn
(
Z1_PRED
ipred_z1
lsx
)
;
init_cfl_pred_fn
(
DC_PRED
ipred_cfl
lsx
)
;
init_cfl_pred_fn
(
DC_128_PRED
ipred_cfl_128
lsx
)
;
init_cfl_pred_fn
(
TOP_DC_PRED
ipred_cfl_top
lsx
)
;
init_cfl_pred_fn
(
LEFT_DC_PRED
ipred_cfl_left
lsx
)
;
c
-
>
pal_pred
=
BF
(
dav1d_pal_pred
lsx
)
;
#
endif
}
#
endif
