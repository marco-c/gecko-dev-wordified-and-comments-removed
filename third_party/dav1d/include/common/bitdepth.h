#
ifndef
DAV1D_COMMON_BITDEPTH_H
#
define
DAV1D_COMMON_BITDEPTH_H
#
include
<
stdint
.
h
>
#
include
<
string
.
h
>
#
if
!
defined
(
BITDEPTH
)
typedef
void
pixel
;
typedef
void
coef
;
#
define
HIGHBD_DECL_SUFFIX
#
define
HIGHBD_CALL_SUFFIX
#
define
HIGHBD_TAIL_SUFFIX
#
elif
BITDEPTH
=
=
8
typedef
uint8_t
pixel
;
typedef
int16_t
coef
;
#
define
pixel_copy
memcpy
#
define
pixel_set
memset
#
define
iclip_pixel
iclip_u8
#
define
PIX_HEX_FMT
"
%
02x
"
#
define
bitfn
(
x
)
x
#
#
_8bpc
#
define
PXSTRIDE
(
x
)
x
#
define
highbd_only
(
x
)
#
define
HIGHBD_DECL_SUFFIX
#
define
HIGHBD_CALL_SUFFIX
#
define
HIGHBD_TAIL_SUFFIX
#
define
bitdepth_from_max
(
x
)
8
#
elif
BITDEPTH
=
=
16
typedef
uint16_t
pixel
;
typedef
int32_t
coef
;
#
define
pixel_copy
(
a
b
c
)
memcpy
(
a
b
(
c
)
<
<
1
)
static
inline
void
pixel_set
(
pixel
*
const
dst
const
int
val
const
int
num
)
{
for
(
int
n
=
0
;
n
<
num
;
n
+
+
)
dst
[
n
]
=
val
;
}
#
define
PIX_HEX_FMT
"
%
03x
"
#
define
iclip_pixel
(
x
)
iclip
(
x
0
bitdepth_max
)
#
define
HIGHBD_DECL_SUFFIX
const
int
bitdepth_max
#
define
HIGHBD_CALL_SUFFIX
f
-
>
bitdepth_max
#
define
HIGHBD_TAIL_SUFFIX
bitdepth_max
#
define
bitdepth_from_max
(
bitdepth_max
)
(
32
-
clz
(
bitdepth_max
)
)
#
define
bitfn
(
x
)
x
#
#
_16bpc
#
define
PXSTRIDE
(
x
)
(
x
>
>
1
)
#
define
highbd_only
(
x
)
x
#
else
#
error
invalid
value
for
bitdepth
#
endif
#
define
bytefn
(
x
)
bitfn
(
x
)
#
define
bitfn_decls
(
name
.
.
.
)
\
name
#
#
_8bpc
(
__VA_ARGS__
)
;
\
name
#
#
_16bpc
(
__VA_ARGS__
)
#
endif
