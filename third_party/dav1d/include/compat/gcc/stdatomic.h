#
ifndef
GCCVER_STDATOMIC_H_
#
define
GCCVER_STDATOMIC_H_
#
if
!
defined
(
__cplusplus
)
typedef
int
atomic_int
;
typedef
unsigned
int
atomic_uint
;
#
define
memory_order_relaxed
__ATOMIC_RELAXED
#
define
memory_order_acquire
__ATOMIC_ACQUIRE
#
define
atomic_init
(
p_a
v
)
do
{
*
(
p_a
)
=
(
v
)
;
}
while
(
0
)
#
define
atomic_store
(
p_a
v
)
__atomic_store_n
(
p_a
v
__ATOMIC_SEQ_CST
)
#
define
atomic_load
(
p_a
)
__atomic_load_n
(
p_a
__ATOMIC_SEQ_CST
)
#
define
atomic_load_explicit
(
p_a
mo
)
__atomic_load_n
(
p_a
mo
)
#
define
atomic_fetch_add
(
p_a
inc
)
__atomic_fetch_add
(
p_a
inc
__ATOMIC_SEQ_CST
)
#
define
atomic_fetch_add_explicit
(
p_a
inc
mo
)
__atomic_fetch_add
(
p_a
inc
mo
)
#
define
atomic_fetch_sub
(
p_a
dec
)
__atomic_fetch_sub
(
p_a
dec
__ATOMIC_SEQ_CST
)
#
define
atomic_exchange
(
p_a
v
)
__atomic_exchange_n
(
p_a
v
__ATOMIC_SEQ_CST
)
#
define
atomic_fetch_or
(
p_a
v
)
__atomic_fetch_or
(
p_a
v
__ATOMIC_SEQ_CST
)
#
define
atomic_compare_exchange_strong
(
p_a
expected
desired
)
__atomic_compare_exchange_n
(
p_a
expected
desired
0
__ATOMIC_SEQ_CST
__ATOMIC_SEQ_CST
)
#
endif
#
endif
