#
ifndef
FROZEN_LETITGO_BITS_MPL_H
#
define
FROZEN_LETITGO_BITS_MPL_H
#
include
<
utility
>
namespace
frozen
{
namespace
bits
{
template
<
class
std
:
:
size_t
>
class
carray
;
template
<
typename
T
>
struct
remove_cv
:
std
:
:
remove_cv
<
T
>
{
}
;
template
<
typename
.
.
.
T
>
struct
remove_cv
<
std
:
:
pair
<
T
.
.
.
>
>
{
using
type
=
std
:
:
pair
<
typename
remove_cv
<
T
>
:
:
type
.
.
.
>
;
}
;
template
<
typename
T
std
:
:
size_t
N
>
struct
remove_cv
<
carray
<
T
N
>
>
{
using
type
=
carray
<
typename
remove_cv
<
T
>
:
:
type
N
>
;
}
;
template
<
typename
T
>
using
remove_cv_t
=
typename
remove_cv
<
T
>
:
:
type
;
}
}
#
endif
