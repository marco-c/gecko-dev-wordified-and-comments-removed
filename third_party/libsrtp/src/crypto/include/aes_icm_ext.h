#
ifndef
AES_ICM_H
#
define
AES_ICM_H
#
include
"
cipher
.
h
"
#
include
"
datatypes
.
h
"
#
ifdef
OPENSSL
#
include
<
openssl
/
evp
.
h
>
#
include
<
openssl
/
aes
.
h
>
typedef
struct
{
v128_t
counter
;
v128_t
offset
;
int
key_size
;
EVP_CIPHER_CTX
*
ctx
;
}
srtp_aes_icm_ctx_t
;
#
endif
#
ifdef
MBEDTLS
#
include
<
mbedtls
/
aes
.
h
>
typedef
struct
{
v128_t
counter
;
v128_t
offset
;
v128_t
stream_block
;
size_t
nc_off
;
int
key_size
;
mbedtls_aes_context
*
ctx
;
}
srtp_aes_icm_ctx_t
;
#
endif
#
ifdef
NSS
#
define
NSS_PKCS11_2_0_COMPAT
1
#
include
<
nss
.
h
>
#
include
<
pk11pub
.
h
>
typedef
struct
{
v128_t
counter
;
v128_t
offset
;
int
key_size
;
uint8_t
iv
[
16
]
;
NSSInitContext
*
nss
;
PK11SymKey
*
key
;
PK11Context
*
ctx
;
}
srtp_aes_icm_ctx_t
;
#
endif
#
endif
