class
Model
{
constructor
(
storage
)
{
this
.
storage
=
storage
;
}
create
(
title
callback
)
{
title
=
title
|
|
"
"
;
const
newItem
=
{
title
:
title
.
trim
(
)
completed
:
false
}
;
this
.
storage
.
save
(
newItem
callback
)
;
}
read
(
query
callback
)
{
const
queryType
=
typeof
query
;
if
(
queryType
=
=
=
"
function
"
)
{
callback
=
query
;
this
.
storage
.
findAll
(
callback
)
;
}
else
if
(
queryType
=
=
=
"
string
"
|
|
queryType
=
=
=
"
number
"
)
{
query
=
parseInt
(
query
10
)
;
this
.
storage
.
find
(
{
id
:
query
}
callback
)
;
}
else
{
this
.
storage
.
find
(
query
callback
)
;
}
}
update
(
id
data
callback
)
{
this
.
storage
.
save
(
data
callback
id
)
;
}
remove
(
id
callback
)
{
this
.
storage
.
remove
(
id
callback
)
;
}
removeAll
(
callback
)
{
this
.
storage
.
drop
(
callback
)
;
}
getCount
(
callback
)
{
if
(
!
callback
)
return
;
const
stats
=
{
active
:
0
completed
:
0
total
:
0
}
;
this
.
storage
.
findAll
(
(
data
)
=
>
{
for
(
let
todo
of
data
)
{
if
(
todo
.
completed
)
stats
.
completed
+
+
;
else
stats
.
active
+
+
;
stats
.
total
+
+
;
}
callback
(
stats
)
;
}
)
;
}
}
export
default
Model
;
