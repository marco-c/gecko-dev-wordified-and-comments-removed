function
sunSpiderCPUWarmup
(
)
{
var
warmupMS
=
20
;
for
(
var
start
=
new
Date
;
new
Date
-
start
<
warmupMS
;
)
{
for
(
var
i
=
0
;
i
<
100
;
+
+
i
)
{
if
(
Math
.
atan
(
Math
.
acos
(
Math
.
asin
(
Math
.
random
(
)
)
)
)
>
4
)
{
console
.
log
(
"
Whoa
dude
!
"
)
;
return
;
}
}
}
}
for
(
var
i
=
0
;
i
<
SunSpiderPayload
.
length
;
+
+
i
)
{
JetStream
.
addPlan
(
{
name
:
SunSpiderPayload
[
i
]
.
name
benchmarks
:
[
{
name
:
SunSpiderPayload
[
i
]
.
name
category
:
"
Latency
"
unit
:
"
ms
/
run
"
}
]
code
:
"
<
script
>
\
n
"
+
"
top
.
sunSpiderCPUWarmup
(
)
;
\
n
"
+
"
var
__data
=
top
.
JetStream
.
getAccumulator
(
)
|
|
{
sum
:
0
n
:
0
}
;
\
n
"
+
"
var
__time_before
=
top
.
JetStream
.
goodTime
(
)
;
\
n
"
+
SunSpiderPayload
[
i
]
.
content
+
"
var
__time_after
=
top
.
JetStream
.
goodTime
(
)
;
\
n
"
+
"
__data
.
sum
+
=
Math
.
max
(
__time_after
-
__time_before
1
)
;
\
n
"
+
"
__data
.
n
+
+
;
\
n
"
+
"
if
(
__data
.
n
=
=
20
)
\
n
"
+
"
top
.
JetStream
.
reportResult
(
__data
.
sum
/
__data
.
n
)
;
\
n
"
+
"
else
\
n
"
+
"
top
.
JetStream
.
accumulate
(
__data
)
;
\
n
"
+
"
<
/
script
>
"
}
)
;
}
