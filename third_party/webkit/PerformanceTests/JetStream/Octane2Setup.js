var
Octane2Suites
=
[
{
name
:
"
richards
"
category
:
"
Throughput
"
files
:
[
"
richards
.
js
"
]
}
{
name
:
"
delta
-
blue
"
category
:
"
Throughput
"
files
:
[
"
deltablue
.
js
"
]
}
{
name
:
"
crypto
"
category
:
"
Throughput
"
files
:
[
"
crypto
.
js
"
]
}
{
name
:
"
proto
-
raytracer
"
category
:
"
Throughput
"
files
:
[
"
raytrace
.
js
"
]
}
{
name
:
"
earley
-
boyer
"
category
:
"
Throughput
"
files
:
[
"
earley
-
boyer
.
js
"
]
}
{
name
:
"
regexp
-
2010
"
category
:
"
Throughput
"
files
:
[
"
regexp
.
js
"
]
}
{
name
:
"
splay
"
category
:
"
Throughput
"
latency
:
true
files
:
[
"
splay
.
js
"
]
}
{
name
:
"
navier
-
stokes
"
category
:
"
Throughput
"
files
:
[
"
navier
-
stokes
.
js
"
]
}
{
name
:
"
pdfjs
"
category
:
"
Throughput
"
files
:
[
"
pdfjs
.
js
"
]
}
{
name
:
"
mandreel
"
category
:
"
Throughput
"
latency
:
true
files
:
[
"
mandreel
.
js
"
]
}
{
name
:
"
gbemu
"
category
:
"
Throughput
"
files
:
[
"
gbemu
-
part1
.
js
"
"
gbemu
-
part2
.
js
"
]
}
{
name
:
"
code
-
first
-
load
"
category
:
"
Latency
"
files
:
[
"
code
-
load
.
js
"
]
}
{
name
:
"
box2d
"
category
:
"
Throughput
"
files
:
[
"
box2d
.
js
"
]
}
{
name
:
"
zlib
"
category
:
"
Throughput
"
files
:
[
"
zlib
.
js
"
"
zlib
-
data
.
js
"
]
}
{
name
:
"
typescript
"
category
:
"
Latency
"
oneRun
:
true
files
:
[
"
typescript
.
js
"
"
typescript
-
input
.
js
"
"
typescript
-
compiler
.
js
"
]
}
]
;
for
(
var
i
=
0
;
i
<
Octane2Suites
.
length
;
+
+
i
)
{
var
suite
=
Octane2Suites
[
i
]
;
var
myBenchmarks
=
[
{
name
:
suite
.
name
unit
:
suite
.
oneRun
?
"
ms
"
:
"
ms
/
run
"
category
:
suite
.
category
}
]
;
if
(
suite
.
latency
)
{
myBenchmarks
.
push
(
{
name
:
suite
.
name
+
"
-
latency
"
unit
:
"
ms
"
category
:
"
Latency
"
}
)
;
}
var
code
=
"
"
;
code
+
=
"
<
script
src
=
\
"
Octane2
/
base
.
js
\
"
>
<
/
script
>
\
n
"
;
for
(
var
j
=
0
;
j
<
suite
.
files
.
length
;
+
+
j
)
code
+
=
"
<
script
src
=
\
"
Octane2
/
"
+
suite
.
files
[
j
]
+
"
\
"
>
<
/
script
>
\
n
"
;
code
+
=
"
<
script
>
\
n
"
;
code
+
=
"
BenchmarkSuite
.
scores
=
[
]
;
\
n
"
;
code
+
=
"
var
__suite
=
BenchmarkSuite
.
suites
[
0
]
;
\
n
"
;
code
+
=
"
for
(
var
__thing
=
__suite
.
RunStep
(
{
}
)
;
__thing
;
__thing
=
__thing
(
)
)
;
\
n
"
;
code
+
=
"
top
.
JetStream
.
reportResult
(
\
n
"
;
code
+
=
"
BenchmarkSuite
.
GeometricMeanTime
(
__suite
.
results
)
/
1000
\
n
"
;
code
+
=
"
BenchmarkSuite
.
GeometricMeanLatency
(
__suite
.
results
)
/
1000
)
;
\
n
"
;
code
+
=
"
<
/
script
>
"
;
JetStream
.
addPlan
(
{
name
:
suite
.
name
benchmarks
:
myBenchmarks
code
:
code
}
)
;
}
