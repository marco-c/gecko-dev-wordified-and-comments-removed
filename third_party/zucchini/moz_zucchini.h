#
ifndef
MOZ_ZUCCHINI_H
#
define
MOZ_ZUCCHINI_H
#
include
<
cstdio
>
#
include
<
cstdint
>
namespace
zucchini
{
namespace
status
{
enum
Code
{
kStatusSuccess
=
0
kStatusInvalidParam
=
1
kStatusFileReadError
=
2
kStatusFileWriteError
=
3
kStatusPatchReadError
=
4
kStatusPatchWriteError
=
5
kStatusInvalidOldImage
=
6
kStatusInvalidNewImage
=
7
kStatusDiskFull
=
8
kStatusIoError
=
9
kStatusFatal
=
10
}
;
}
namespace
mozilla
{
using
LogFunctionPtr
=
void
(
*
)
(
const
char
*
aMessage
)
;
void
SetLogFunction
(
LogFunctionPtr
aLogFunction
)
;
uint32_t
ComputeCrc32
(
const
uint8_t
*
aBuf
size_t
aBufSize
)
;
class
MappedPatchImpl
;
class
MappedPatch
{
public
:
MappedPatch
(
)
;
~
MappedPatch
(
)
;
status
:
:
Code
Load
(
FILE
*
aPatchFile
uint32_t
*
aSourceSize
uint32_t
*
aDestinationSize
uint32_t
*
aSourceCrc32
)
;
status
:
:
Code
ApplyUnsafe
(
const
uint8_t
*
aCheckedOldImage
size_t
aCheckedOldImageSize
FILE
*
aNewFile
)
;
private
:
MappedPatchImpl
*
mImpl
;
}
;
}
}
#
endif
