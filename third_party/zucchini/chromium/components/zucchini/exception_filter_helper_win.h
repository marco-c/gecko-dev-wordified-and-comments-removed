#
ifndef
COMPONENTS_ZUCCHINI_EXCEPTION_FILTER_HELPER_WIN_H_
#
define
COMPONENTS_ZUCCHINI_EXCEPTION_FILTER_HELPER_WIN_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
windows
.
h
>
#
include
<
map
>
#
include
"
base
/
containers
/
span
.
h
"
namespace
zucchini
{
class
ExceptionFilterHelper
{
public
:
ExceptionFilterHelper
(
)
;
ExceptionFilterHelper
(
const
ExceptionFilterHelper
&
)
=
delete
;
ExceptionFilterHelper
&
operator
=
(
const
ExceptionFilterHelper
&
)
=
delete
;
~
ExceptionFilterHelper
(
)
;
void
AddRange
(
base
:
:
span
<
const
uint8_t
>
range
)
;
int
FilterPageError
(
const
EXCEPTION_RECORD
*
const
exception_record
)
;
int32_t
nt_status
(
)
const
{
return
nt_status_
;
}
bool
is_write
(
)
const
{
return
is_write_
;
}
private
:
bool
IsInRange
(
const
uint8_t
*
address
)
const
;
std
:
:
map
<
uintptr_t
uintptr_t
>
ranges_
;
int32_t
nt_status_
=
0
;
bool
is_write_
=
false
;
}
;
}
#
endif
