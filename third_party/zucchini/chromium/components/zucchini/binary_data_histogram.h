#
ifndef
COMPONENTS_ZUCCHINI_BINARY_DATA_HISTOGRAM_H_
#
define
COMPONENTS_ZUCCHINI_BINARY_DATA_HISTOGRAM_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
memory
>
#
include
<
string
>
#
include
"
components
/
zucchini
/
buffer_view
.
h
"
namespace
zucchini
{
class
OutlierDetector
{
public
:
OutlierDetector
(
)
;
OutlierDetector
(
const
OutlierDetector
&
)
=
delete
;
const
OutlierDetector
&
operator
=
(
const
OutlierDetector
&
)
=
delete
;
~
OutlierDetector
(
)
;
void
Add
(
double
sample
)
;
void
Prepare
(
)
;
std
:
:
string
RenderStats
(
)
;
int
DecideOutlier
(
double
sample
)
;
private
:
size_t
n_
=
0
;
double
sum_
=
0
;
double
sum_of_squares_
=
0
;
double
mean_
=
0
;
double
standard_deviation_
=
0
;
}
;
class
BinaryDataHistogram
{
public
:
BinaryDataHistogram
(
)
;
BinaryDataHistogram
(
const
BinaryDataHistogram
&
)
=
delete
;
const
BinaryDataHistogram
&
operator
=
(
const
BinaryDataHistogram
&
)
=
delete
;
~
BinaryDataHistogram
(
)
;
bool
Compute
(
ConstBufferView
region
)
;
bool
IsValid
(
)
const
{
return
static_cast
<
bool
>
(
histogram_
)
;
}
double
Distance
(
const
BinaryDataHistogram
&
other
)
const
;
private
:
enum
{
kNumBins
=
1
<
<
(
sizeof
(
uint16_t
)
*
8
)
}
;
static_assert
(
kNumBins
=
=
65536
"
Incorrect
constant
computation
.
"
)
;
size_t
size_
=
0
;
std
:
:
unique_ptr
<
int32_t
[
]
>
histogram_
;
}
;
}
#
endif
