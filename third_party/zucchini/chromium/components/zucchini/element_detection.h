#
ifndef
COMPONENTS_ZUCCHINI_ELEMENT_DETECTION_H_
#
define
COMPONENTS_ZUCCHINI_ELEMENT_DETECTION_H_
#
include
<
stddef
.
h
>
#
include
<
memory
>
#
include
"
base
/
functional
/
callback
.
h
"
#
include
"
components
/
zucchini
/
buffer_view
.
h
"
#
include
"
components
/
zucchini
/
image_utils
.
h
"
#
include
"
third_party
/
abseil
-
cpp
/
absl
/
types
/
optional
.
h
"
namespace
zucchini
{
class
Disassembler
;
std
:
:
unique_ptr
<
Disassembler
>
MakeDisassemblerWithoutFallback
(
ConstBufferView
image
)
;
std
:
:
unique_ptr
<
Disassembler
>
MakeDisassemblerOfType
(
ConstBufferView
image
ExecutableType
exe_type
)
;
uint16_t
DisassemblerVersionOfType
(
ExecutableType
exe_type
)
;
using
ElementDetector
=
base
:
:
RepeatingCallback
<
absl
:
:
optional
<
Element
>
(
ConstBufferView
image
)
>
;
absl
:
:
optional
<
Element
>
DetectElementFromDisassembler
(
ConstBufferView
image
)
;
class
ElementFinder
{
public
:
ElementFinder
(
ConstBufferView
image
ElementDetector
&
&
detector
)
;
ElementFinder
(
const
ElementFinder
&
)
=
delete
;
const
ElementFinder
&
operator
=
(
const
ElementFinder
&
)
=
delete
;
~
ElementFinder
(
)
;
absl
:
:
optional
<
Element
>
GetNext
(
)
;
private
:
ConstBufferView
image_
;
ElementDetector
detector_
;
offset_t
pos_
=
0
;
}
;
}
#
endif
