#
ifndef
COMPONENTS_ZUCCHINI_RELOC_WIN32_H_
#
define
COMPONENTS_ZUCCHINI_RELOC_WIN32_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
vector
>
#
include
"
base
/
memory
/
raw_ref
.
h
"
#
include
"
components
/
zucchini
/
address_translator
.
h
"
#
include
"
components
/
zucchini
/
buffer_source
.
h
"
#
include
"
components
/
zucchini
/
buffer_view
.
h
"
#
include
"
components
/
zucchini
/
image_utils
.
h
"
#
include
"
third_party
/
abseil
-
cpp
/
absl
/
types
/
optional
.
h
"
namespace
zucchini
{
struct
RelocUnitWin32
{
RelocUnitWin32
(
)
;
RelocUnitWin32
(
uint8_t
type_in
offset_t
location_in
rva_t
target_rva_in
)
;
friend
bool
operator
=
=
(
const
RelocUnitWin32
&
a
const
RelocUnitWin32
&
b
)
;
uint8_t
type
;
offset_t
location
;
rva_t
target_rva
;
}
;
class
RelocRvaReaderWin32
{
public
:
enum
:
ptrdiff_t
{
kRelocUnitSize
=
sizeof
(
uint16_t
)
}
;
static
bool
FindRelocBlocks
(
ConstBufferView
image
BufferRegion
reloc_region
std
:
:
vector
<
offset_t
>
*
reloc_block_offsets
)
;
RelocRvaReaderWin32
(
ConstBufferView
image
BufferRegion
reloc_region
const
std
:
:
vector
<
offset_t
>
&
reloc_block_offsets
offset_t
lo
offset_t
hi
)
;
RelocRvaReaderWin32
(
RelocRvaReaderWin32
&
&
)
;
~
RelocRvaReaderWin32
(
)
;
absl
:
:
optional
<
RelocUnitWin32
>
GetNext
(
)
;
private
:
bool
LoadRelocBlock
(
ConstBufferView
:
:
const_iterator
block_begin
)
;
const
ConstBufferView
image_
;
ConstBufferView
:
:
const_iterator
end_it_
;
BufferSource
cur_reloc_units_
;
rva_t
rva_hi_bits_
;
}
;
class
RelocReaderWin32
:
public
ReferenceReader
{
public
:
RelocReaderWin32
(
RelocRvaReaderWin32
&
&
reloc_rva_reader
uint16_t
reloc_type
offset_t
offset_bound
const
AddressTranslator
&
translator
)
;
~
RelocReaderWin32
(
)
override
;
absl
:
:
optional
<
Reference
>
GetNext
(
)
override
;
private
:
RelocRvaReaderWin32
reloc_rva_reader_
;
const
uint16_t
reloc_type_
;
const
offset_t
offset_bound_
;
AddressTranslator
:
:
RvaToOffsetCache
entry_rva_to_offset_
;
}
;
class
RelocWriterWin32
:
public
ReferenceWriter
{
public
:
RelocWriterWin32
(
uint16_t
reloc_type
MutableBufferView
image
BufferRegion
reloc_region
const
std
:
:
vector
<
offset_t
>
&
reloc_block_offsets
const
AddressTranslator
&
translator
)
;
~
RelocWriterWin32
(
)
override
;
void
PutNext
(
Reference
ref
)
override
;
private
:
const
uint16_t
reloc_type_
;
MutableBufferView
image_
;
BufferRegion
reloc_region_
;
const
raw_ref
<
const
std
:
:
vector
<
offset_t
>
>
reloc_block_offsets_
;
AddressTranslator
:
:
OffsetToRvaCache
target_offset_to_rva_
;
}
;
}
#
endif
