#
include
"
components
/
zucchini
/
io_utils
.
h
"
#
include
<
iostream
>
namespace
zucchini
{
LimitedOutputStream
:
:
StreamBuf
:
:
StreamBuf
(
std
:
:
ostream
&
os
int
limit
)
:
os_
(
os
)
limit_
(
limit
)
{
}
LimitedOutputStream
:
:
StreamBuf
:
:
~
StreamBuf
(
)
{
if
(
!
str
(
)
.
empty
(
)
)
{
std
:
:
cerr
<
<
"
Warning
:
LimitedOutputStream
has
"
<
<
str
(
)
.
length
(
)
<
<
"
bytes
of
unflushed
output
.
"
<
<
std
:
:
endl
;
}
}
int
LimitedOutputStream
:
:
StreamBuf
:
:
sync
(
)
{
if
(
full
(
)
)
{
str
(
"
"
)
;
return
0
;
}
*
os_
<
<
str
(
)
;
str
(
"
"
)
;
if
(
+
+
counter_
>
=
limit_
)
*
os_
<
<
"
(
Additional
output
suppressed
)
\
n
"
;
os_
-
>
flush
(
)
;
return
0
;
}
LimitedOutputStream
:
:
LimitedOutputStream
(
std
:
:
ostream
&
os
int
limit
)
:
std
:
:
ostream
(
&
buf_
)
buf_
(
os
limit
)
{
}
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
ostr
PrefixSep
&
obj
)
{
if
(
obj
.
first_
)
obj
.
first_
=
false
;
else
ostr
<
<
obj
.
sep_str_
;
return
ostr
;
}
}
