#
include
"
base
/
base_paths_apple
.
h
"
#
include
<
dlfcn
.
h
>
#
include
<
mach
-
o
/
dyld
.
h
>
#
include
<
stdint
.
h
>
#
include
"
base
/
check_op
.
h
"
#
include
"
base
/
files
/
file_path
.
h
"
#
include
"
base
/
files
/
file_util
.
h
"
#
include
"
base
/
strings
/
string_util
.
h
"
#
if
!
defined
(
MOZ_ZUCCHINI
)
#
include
"
base
/
threading
/
thread_restrictions
.
h
"
#
endif
namespace
base
:
:
apple
:
:
internal
{
base
:
:
FilePath
GetExecutablePath
(
)
{
uint32_t
executable_length
=
0
;
_NSGetExecutablePath
(
NULL
&
executable_length
)
;
DCHECK_GT
(
executable_length
1u
)
;
std
:
:
string
executable_path
;
int
rv
=
_NSGetExecutablePath
(
base
:
:
WriteInto
(
&
executable_path
executable_length
)
&
executable_length
)
;
DCHECK_EQ
(
rv
0
)
;
#
if
!
defined
(
MOZ_ZUCCHINI
)
base
:
:
ScopedAllowBlocking
allow_blocking
;
#
endif
return
base
:
:
MakeAbsoluteFilePath
(
base
:
:
FilePath
(
executable_path
)
)
;
}
bool
GetModulePathForAddress
(
base
:
:
FilePath
*
path
const
void
*
address
)
{
Dl_info
info
;
if
(
dladdr
(
address
&
info
)
=
=
0
)
{
return
false
;
}
*
path
=
base
:
:
FilePath
(
info
.
dli_fname
)
;
return
true
;
}
}
