#
ifndef
BASE_FILES_MEMORY_MAPPED_FILE_H_
#
define
BASE_FILES_MEMORY_MAPPED_FILE_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
utility
>
#
include
"
base
/
base_export
.
h
"
#
include
"
base
/
files
/
file
.
h
"
#
include
"
base
/
memory
/
raw_ptr
.
h
"
#
include
"
build
/
build_config
.
h
"
#
if
BUILDFLAG
(
IS_WIN
)
#
include
"
base
/
win
/
scoped_handle
.
h
"
#
endif
namespace
base
{
class
FilePath
;
class
BASE_EXPORT
MemoryMappedFile
{
public
:
enum
Access
{
READ_ONLY
READ_WRITE
READ_WRITE_EXTEND
#
if
!
defined
(
MOZ_ZUCCHINI
)
#
if
BUILDFLAG
(
IS_WIN
)
READ_CODE_IMAGE
#
endif
#
endif
}
;
MemoryMappedFile
(
)
;
MemoryMappedFile
(
const
MemoryMappedFile
&
)
=
delete
;
MemoryMappedFile
&
operator
=
(
const
MemoryMappedFile
&
)
=
delete
;
~
MemoryMappedFile
(
)
;
struct
BASE_EXPORT
Region
{
static
const
Region
kWholeFile
;
bool
operator
=
=
(
const
Region
&
other
)
const
;
bool
operator
!
=
(
const
Region
&
other
)
const
;
int64_t
offset
;
size_t
size
;
}
;
[
[
nodiscard
]
]
bool
Initialize
(
const
FilePath
&
file_name
Access
access
)
;
[
[
nodiscard
]
]
bool
Initialize
(
const
FilePath
&
file_name
)
{
return
Initialize
(
file_name
READ_ONLY
)
;
}
[
[
nodiscard
]
]
bool
Initialize
(
File
file
Access
access
)
;
[
[
nodiscard
]
]
bool
Initialize
(
File
file
)
{
return
Initialize
(
std
:
:
move
(
file
)
READ_ONLY
)
;
}
[
[
nodiscard
]
]
bool
Initialize
(
File
file
const
Region
&
region
Access
access
)
;
[
[
nodiscard
]
]
bool
Initialize
(
File
file
const
Region
&
region
)
{
return
Initialize
(
std
:
:
move
(
file
)
region
READ_ONLY
)
;
}
const
uint8_t
*
data
(
)
const
{
return
data_
;
}
uint8_t
*
data
(
)
{
return
data_
;
}
size_t
length
(
)
const
{
return
length_
;
}
bool
IsValid
(
)
const
;
private
:
static
void
CalculateVMAlignedBoundaries
(
int64_t
start
size_t
size
int64_t
*
aligned_start
size_t
*
aligned_size
int32_t
*
offset
)
;
#
if
BUILDFLAG
(
IS_WIN
)
bool
MapImageToMemory
(
Access
access
)
;
#
endif
bool
MapFileRegionToMemory
(
const
Region
&
region
Access
access
)
;
void
CloseHandles
(
)
;
File
file_
;
raw_ptr
<
uint8_t
DanglingUntriaged
|
AllowPtrArithmetic
>
data_
=
nullptr
;
size_t
length_
=
0
;
#
if
BUILDFLAG
(
IS_WIN
)
win
:
:
ScopedHandle
file_mapping_
;
#
endif
}
;
}
#
endif
