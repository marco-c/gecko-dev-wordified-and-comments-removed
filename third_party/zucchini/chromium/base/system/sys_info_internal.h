#
ifndef
BASE_SYSTEM_SYS_INFO_INTERNAL_H_
#
define
BASE_SYSTEM_SYS_INFO_INTERNAL_H_
#
include
"
base
/
base_export
.
h
"
#
include
"
build
/
build_config
.
h
"
#
if
BUILDFLAG
(
IS_APPLE
)
#
include
"
third_party
/
abseil
-
cpp
/
absl
/
types
/
optional
.
h
"
#
endif
namespace
base
{
namespace
internal
{
template
<
typename
T
T
(
*
F
)
(
void
)
>
class
LazySysInfoValue
{
public
:
LazySysInfoValue
(
)
:
value_
(
F
(
)
)
{
}
LazySysInfoValue
(
const
LazySysInfoValue
&
)
=
delete
;
LazySysInfoValue
&
operator
=
(
const
LazySysInfoValue
&
)
=
delete
;
~
LazySysInfoValue
(
)
=
default
;
T
value
(
)
{
return
value_
;
}
private
:
const
T
value_
;
}
;
#
if
BUILDFLAG
(
IS_MAC
)
BASE_EXPORT
absl
:
:
optional
<
int
>
NumberOfPhysicalProcessors
(
)
;
absl
:
:
optional
<
int
>
NumberOfProcessorsWhenCpuSecurityMitigationEnabled
(
)
;
#
endif
BASE_EXPORT
int
NumberOfProcessors
(
)
;
#
if
BUILDFLAG
(
IS_APPLE
)
absl
:
:
optional
<
int
>
GetSysctlIntValue
(
const
char
*
key_name
)
;
#
endif
}
}
#
endif
