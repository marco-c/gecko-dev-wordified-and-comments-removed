#
ifndef
BASE_NOTREACHED_H_
#
define
BASE_NOTREACHED_H_
#
include
"
base
/
base_export
.
h
"
#
include
"
base
/
check
.
h
"
#
include
"
base
/
dcheck_is_on
.
h
"
#
include
"
base
/
logging_buildflags
.
h
"
namespace
logging
{
#
if
CHECK_WILL_STREAM
(
)
|
|
BUILDFLAG
(
ENABLE_LOG_ERROR_NOT_REACHED
)
#
define
NOTREACHED
(
)
\
LOGGING_CHECK_FUNCTION_IMPL
(
:
:
logging
:
:
NotReachedError
:
:
NotReached
(
)
false
)
#
else
#
define
NOTREACHED
(
)
\
(
true
)
?
:
:
logging
:
:
NotReachedError
:
:
TriggerNotReached
(
)
\
:
EAT_CHECK_STREAM_PARAMS
(
)
#
endif
#
if
CHECK_WILL_STREAM
(
)
#
define
NOTREACHED_NORETURN
(
)
:
:
logging
:
:
NotReachedNoreturnError
(
)
#
else
[
[
noreturn
]
]
IMMEDIATE_CRASH_ALWAYS_INLINE
void
NotReachedFailure
(
)
{
base
:
:
ImmediateCrash
(
)
;
}
#
define
NOTREACHED_NORETURN
(
)
\
(
true
)
?
:
:
logging
:
:
NotReachedFailure
(
)
:
EAT_CHECK_STREAM_PARAMS
(
)
#
endif
#
define
DUMP_WILL_BE_NOTREACHED_NORETURN
(
)
\
:
:
logging
:
:
CheckError
:
:
DumpWillBeNotReachedNoreturn
(
)
#
if
DCHECK_IS_ON
(
)
#
define
NOTIMPLEMENTED
(
)
\
:
:
logging
:
:
CheckError
:
:
NotImplemented
(
__PRETTY_FUNCTION__
)
#
else
#
define
NOTIMPLEMENTED
(
)
EAT_CHECK_STREAM_PARAMS
(
)
#
endif
#
define
NOTIMPLEMENTED_LOG_ONCE
(
)
\
{
\
static
bool
logged_once
=
false
;
\
if
(
!
logged_once
)
{
\
NOTIMPLEMENTED
(
)
;
\
logged_once
=
true
;
\
}
\
}
}
#
endif
