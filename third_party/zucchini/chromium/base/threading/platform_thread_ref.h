#
ifndef
BASE_THREADING_PLATFORM_THREAD_REF_H_
#
define
BASE_THREADING_PLATFORM_THREAD_REF_H_
#
include
<
iosfwd
>
#
include
"
base
/
base_export
.
h
"
#
include
"
build
/
build_config
.
h
"
#
if
BUILDFLAG
(
IS_WIN
)
#
include
"
base
/
win
/
windows_types
.
h
"
#
elif
BUILDFLAG
(
IS_POSIX
)
|
|
BUILDFLAG
(
IS_FUCHSIA
)
#
include
<
pthread
.
h
>
#
endif
namespace
base
{
class
PlatformThreadRef
{
public
:
#
if
BUILDFLAG
(
IS_WIN
)
using
RefType
=
DWORD
;
#
elif
BUILDFLAG
(
IS_POSIX
)
|
|
BUILDFLAG
(
IS_FUCHSIA
)
using
RefType
=
pthread_t
;
#
endif
constexpr
PlatformThreadRef
(
)
=
default
;
explicit
constexpr
PlatformThreadRef
(
RefType
id
)
:
id_
(
id
)
{
}
bool
operator
=
=
(
PlatformThreadRef
other
)
const
{
return
id_
=
=
other
.
id_
;
}
bool
operator
!
=
(
PlatformThreadRef
other
)
const
{
return
id_
!
=
other
.
id_
;
}
bool
is_null
(
)
const
{
return
id_
=
=
0
;
}
private
:
friend
BASE_EXPORT
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
os
const
PlatformThreadRef
&
ref
)
;
RefType
id_
=
0
;
}
;
BASE_EXPORT
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
os
const
PlatformThreadRef
&
ref
)
;
}
#
endif
