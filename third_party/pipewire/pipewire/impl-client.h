#
ifndef
PIPEWIRE_IMPL_CLIENT_H
#
define
PIPEWIRE_IMPL_CLIENT_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
<
spa
/
utils
/
hook
.
h
>
struct
pw_impl_client
;
#
include
<
pipewire
/
context
.
h
>
#
include
<
pipewire
/
global
.
h
>
#
include
<
pipewire
/
properties
.
h
>
#
include
<
pipewire
/
resource
.
h
>
#
include
<
pipewire
/
permission
.
h
>
struct
pw_impl_client_events
{
#
define
PW_VERSION_IMPL_CLIENT_EVENTS
0
uint32_t
version
;
void
(
*
destroy
)
(
void
*
data
)
;
void
(
*
free
)
(
void
*
data
)
;
void
(
*
initialized
)
(
void
*
data
)
;
void
(
*
info_changed
)
(
void
*
data
const
struct
pw_client_info
*
info
)
;
void
(
*
resource_added
)
(
void
*
data
struct
pw_resource
*
resource
)
;
void
(
*
resource_removed
)
(
void
*
data
struct
pw_resource
*
resource
)
;
void
(
*
busy_changed
)
(
void
*
data
bool
busy
)
;
}
;
struct
pw_impl_client
*
pw_context_create_client
(
struct
pw_impl_core
*
core
struct
pw_protocol
*
prototol
struct
pw_properties
*
properties
size_t
user_data_size
)
;
void
pw_impl_client_destroy
(
struct
pw_impl_client
*
client
)
;
int
pw_impl_client_register
(
struct
pw_impl_client
*
client
struct
pw_properties
*
properties
)
;
void
*
pw_impl_client_get_user_data
(
struct
pw_impl_client
*
client
)
;
const
struct
pw_client_info
*
pw_impl_client_get_info
(
struct
pw_impl_client
*
client
)
;
int
pw_impl_client_update_properties
(
struct
pw_impl_client
*
client
const
struct
spa_dict
*
dict
)
;
int
pw_impl_client_update_permissions
(
struct
pw_impl_client
*
client
uint32_t
n_permissions
const
struct
pw_permission
*
permissions
)
;
int
pw_impl_client_check_permissions
(
struct
pw_impl_client
*
client
uint32_t
global_id
uint32_t
permissions
)
;
const
struct
pw_properties
*
pw_impl_client_get_properties
(
struct
pw_impl_client
*
client
)
;
struct
pw_context
*
pw_impl_client_get_context
(
struct
pw_impl_client
*
client
)
;
struct
pw_protocol
*
pw_impl_client_get_protocol
(
struct
pw_impl_client
*
client
)
;
struct
pw_resource
*
pw_impl_client_get_core_resource
(
struct
pw_impl_client
*
client
)
;
struct
pw_resource
*
pw_impl_client_find_resource
(
struct
pw_impl_client
*
client
uint32_t
id
)
;
struct
pw_global
*
pw_impl_client_get_global
(
struct
pw_impl_client
*
client
)
;
void
pw_impl_client_add_listener
(
struct
pw_impl_client
*
client
struct
spa_hook
*
listener
const
struct
pw_impl_client_events
*
events
void
*
data
)
;
void
pw_impl_client_set_busy
(
struct
pw_impl_client
*
client
bool
busy
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
