#
ifndef
PIPEWIRE_PROXY_H
#
define
PIPEWIRE_PROXY_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
<
spa
/
utils
/
hook
.
h
>
struct
pw_proxy
;
#
include
<
pipewire
/
protocol
.
h
>
struct
pw_proxy_events
{
#
define
PW_VERSION_PROXY_EVENTS
0
uint32_t
version
;
void
(
*
destroy
)
(
void
*
data
)
;
void
(
*
bound
)
(
void
*
data
uint32_t
global_id
)
;
void
(
*
removed
)
(
void
*
data
)
;
void
(
*
done
)
(
void
*
data
int
seq
)
;
void
(
*
error
)
(
void
*
data
int
seq
int
res
const
char
*
message
)
;
}
;
struct
pw_proxy
*
pw_proxy_new
(
struct
pw_proxy
*
factory
const
char
*
type
uint32_t
version
size_t
user_data_size
)
;
void
pw_proxy_add_listener
(
struct
pw_proxy
*
proxy
struct
spa_hook
*
listener
const
struct
pw_proxy_events
*
events
void
*
data
)
;
void
pw_proxy_add_object_listener
(
struct
pw_proxy
*
proxy
struct
spa_hook
*
listener
const
void
*
funcs
void
*
data
)
;
void
pw_proxy_destroy
(
struct
pw_proxy
*
proxy
)
;
void
*
pw_proxy_get_user_data
(
struct
pw_proxy
*
proxy
)
;
uint32_t
pw_proxy_get_id
(
struct
pw_proxy
*
proxy
)
;
const
char
*
pw_proxy_get_type
(
struct
pw_proxy
*
proxy
uint32_t
*
version
)
;
struct
pw_protocol
*
pw_proxy_get_protocol
(
struct
pw_proxy
*
proxy
)
;
int
pw_proxy_sync
(
struct
pw_proxy
*
proxy
int
seq
)
;
int
pw_proxy_set_bound_id
(
struct
pw_proxy
*
proxy
uint32_t
global_id
)
;
uint32_t
pw_proxy_get_bound_id
(
struct
pw_proxy
*
proxy
)
;
int
pw_proxy_error
(
struct
pw_proxy
*
proxy
int
res
const
char
*
error
)
;
int
pw_proxy_errorf
(
struct
pw_proxy
*
proxy
int
res
const
char
*
error
.
.
.
)
SPA_PRINTF_FUNC
(
3
4
)
;
struct
spa_hook_list
*
pw_proxy_get_object_listeners
(
struct
pw_proxy
*
proxy
)
;
const
struct
pw_protocol_marshal
*
pw_proxy_get_marshal
(
struct
pw_proxy
*
proxy
)
;
int
pw_proxy_install_marshal
(
struct
pw_proxy
*
proxy
bool
implementor
)
;
#
define
pw_proxy_notify
(
p
type
event
version
.
.
.
)
\
spa_hook_list_call
(
pw_proxy_get_object_listeners
(
p
)
\
type
event
version
#
#
__VA_ARGS__
)
#
define
pw_proxy_call
(
p
type
method
version
.
.
.
)
\
spa_interface_call
(
(
struct
spa_interface
*
)
p
\
type
method
version
#
#
__VA_ARGS__
)
#
define
pw_proxy_call_res
(
p
type
method
version
.
.
.
)
\
(
{
\
int
_res
=
-
ENOTSUP
;
\
spa_interface_call_res
(
(
struct
spa_interface
*
)
p
\
type
_res
method
version
#
#
__VA_ARGS__
)
;
\
_res
;
\
}
)
#
ifdef
__cplusplus
}
#
endif
#
endif
