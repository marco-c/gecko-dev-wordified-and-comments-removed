#
ifndef
PIPEWIRE_IMPL_CORE_H
#
define
PIPEWIRE_IMPL_CORE_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
struct
pw_impl_core
;
#
include
<
pipewire
/
context
.
h
>
#
include
<
pipewire
/
global
.
h
>
#
include
<
pipewire
/
properties
.
h
>
#
include
<
pipewire
/
resource
.
h
>
struct
pw_impl_core_events
{
#
define
PW_VERSION_IMPL_CORE_EVENTS
0
uint32_t
version
;
void
(
*
destroy
)
(
void
*
data
)
;
void
(
*
free
)
(
void
*
data
)
;
void
(
*
initialized
)
(
void
*
data
)
;
}
;
struct
pw_impl_core
*
pw_context_create_core
(
struct
pw_context
*
context
struct
pw_properties
*
properties
size_t
user_data_size
)
;
struct
pw_impl_core
*
pw_context_get_default_core
(
struct
pw_context
*
context
)
;
const
struct
pw_properties
*
pw_impl_core_get_properties
(
struct
pw_impl_core
*
core
)
;
const
struct
pw_core_info
*
pw_impl_core_get_info
(
struct
pw_impl_core
*
core
)
;
int
pw_impl_core_update_properties
(
struct
pw_impl_core
*
core
const
struct
spa_dict
*
dict
)
;
int
pw_impl_core_register
(
struct
pw_impl_core
*
core
struct
pw_properties
*
properties
)
;
void
pw_impl_core_destroy
(
struct
pw_impl_core
*
core
)
;
void
*
pw_impl_core_get_user_data
(
struct
pw_impl_core
*
core
)
;
struct
pw_global
*
pw_impl_core_get_global
(
struct
pw_impl_core
*
core
)
;
void
pw_impl_core_add_listener
(
struct
pw_impl_core
*
core
struct
spa_hook
*
listener
const
struct
pw_impl_core_events
*
events
void
*
data
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
