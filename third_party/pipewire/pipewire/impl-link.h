#
ifndef
PIPEWIRE_IMPL_LINK_H
#
define
PIPEWIRE_IMPL_LINK_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
struct
pw_impl_link
;
struct
pw_impl_port
;
#
include
<
pipewire
/
impl
.
h
>
struct
pw_impl_link_events
{
#
define
PW_VERSION_IMPL_LINK_EVENTS
0
uint32_t
version
;
void
(
*
destroy
)
(
void
*
data
)
;
void
(
*
free
)
(
void
*
data
)
;
void
(
*
initialized
)
(
void
*
data
)
;
void
(
*
info_changed
)
(
void
*
data
const
struct
pw_link_info
*
info
)
;
void
(
*
state_changed
)
(
void
*
data
enum
pw_link_state
old
enum
pw_link_state
state
const
char
*
error
)
;
void
(
*
port_unlinked
)
(
void
*
data
struct
pw_impl_port
*
port
)
;
}
;
struct
pw_impl_link
*
pw_context_create_link
(
struct
pw_context
*
context
struct
pw_impl_port
*
output
struct
pw_impl_port
*
input
struct
spa_pod
*
format_filter
struct
pw_properties
*
properties
size_t
user_data_size
)
;
void
pw_impl_link_destroy
(
struct
pw_impl_link
*
link
)
;
void
pw_impl_link_add_listener
(
struct
pw_impl_link
*
link
struct
spa_hook
*
listener
const
struct
pw_impl_link_events
*
events
void
*
data
)
;
int
pw_impl_link_register
(
struct
pw_impl_link
*
link
struct
pw_properties
*
properties
)
;
struct
pw_context
*
pw_impl_link_get_context
(
struct
pw_impl_link
*
link
)
;
void
*
pw_impl_link_get_user_data
(
struct
pw_impl_link
*
link
)
;
const
struct
pw_link_info
*
pw_impl_link_get_info
(
struct
pw_impl_link
*
link
)
;
struct
pw_global
*
pw_impl_link_get_global
(
struct
pw_impl_link
*
link
)
;
struct
pw_impl_port
*
pw_impl_link_get_output
(
struct
pw_impl_link
*
link
)
;
struct
pw_impl_port
*
pw_impl_link_get_input
(
struct
pw_impl_link
*
link
)
;
struct
pw_impl_link
*
pw_impl_link_find
(
struct
pw_impl_port
*
output
struct
pw_impl_port
*
input
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
