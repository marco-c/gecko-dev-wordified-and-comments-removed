#
ifndef
SPA_I18N_H
#
define
SPA_I18N_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
<
spa
/
utils
/
hook
.
h
>
#
include
<
spa
/
utils
/
defs
.
h
>
#
define
SPA_TYPE_INTERFACE_I18N
SPA_TYPE_INFO_INTERFACE_BASE
"
I18N
"
#
define
SPA_VERSION_I18N
0
struct
spa_i18n
{
struct
spa_interface
iface
;
}
;
struct
spa_i18n_methods
{
#
define
SPA_VERSION_I18N_METHODS
0
uint32_t
version
;
const
char
*
(
*
text
)
(
void
*
object
const
char
*
msgid
)
;
const
char
*
(
*
ntext
)
(
void
*
object
const
char
*
msgid
const
char
*
msgid_plural
unsigned
long
int
n
)
;
}
;
SPA_FORMAT_ARG_FUNC
(
2
)
static
inline
const
char
*
spa_i18n_text
(
struct
spa_i18n
*
i18n
const
char
*
msgid
)
{
const
char
*
res
=
msgid
;
if
(
SPA_LIKELY
(
i18n
!
=
NULL
)
)
spa_interface_call_res
(
&
i18n
-
>
iface
struct
spa_i18n_methods
res
text
0
msgid
)
;
return
res
;
}
static
inline
const
char
*
spa_i18n_ntext
(
struct
spa_i18n
*
i18n
const
char
*
msgid
const
char
*
msgid_plural
unsigned
long
int
n
)
{
const
char
*
res
=
n
=
=
1
?
msgid
:
msgid_plural
;
if
(
SPA_LIKELY
(
i18n
!
=
NULL
)
)
spa_interface_call_res
(
&
i18n
-
>
iface
struct
spa_i18n_methods
res
ntext
0
msgid
msgid_plural
n
)
;
return
res
;
}
#
ifdef
__cplusplus
}
#
endif
#
endif
