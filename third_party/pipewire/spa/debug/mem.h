#
ifndef
SPA_DEBUG_MEM_H
#
define
SPA_DEBUG_MEM_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
<
spa
/
utils
/
dict
.
h
>
#
ifndef
spa_debug
#
define
spa_debug
(
.
.
.
)
(
{
fprintf
(
stderr
__VA_ARGS__
)
;
fputc
(
'
\
n
'
stderr
)
;
}
)
#
endif
static
inline
int
spa_debug_mem
(
int
indent
const
void
*
data
size_t
size
)
{
const
uint8_t
*
t
=
(
const
uint8_t
*
)
data
;
char
buffer
[
512
]
;
size_t
i
;
int
pos
=
0
;
for
(
i
=
0
;
i
<
size
;
i
+
+
)
{
if
(
i
%
16
=
=
0
)
pos
=
sprintf
(
buffer
"
%
p
:
"
&
t
[
i
]
)
;
pos
+
=
sprintf
(
buffer
+
pos
"
%
02x
"
t
[
i
]
)
;
if
(
i
%
16
=
=
15
|
|
i
=
=
size
-
1
)
{
spa_debug
(
"
%
*
s
"
"
%
s
"
indent
"
"
buffer
)
;
}
}
return
0
;
}
#
ifdef
__cplusplus
}
#
endif
#
endif
