#
ifndef
SPA_PARAM_LATENY_H
#
define
SPA_PARAM_LATENY_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
<
spa
/
param
/
param
.
h
>
enum
spa_param_latency
{
SPA_PARAM_LATENCY_START
SPA_PARAM_LATENCY_direction
SPA_PARAM_LATENCY_minQuantum
SPA_PARAM_LATENCY_maxQuantum
SPA_PARAM_LATENCY_minRate
SPA_PARAM_LATENCY_maxRate
SPA_PARAM_LATENCY_minNs
SPA_PARAM_LATENCY_maxNs
}
;
struct
spa_latency_info
{
enum
spa_direction
direction
;
float
min_quantum
;
float
max_quantum
;
int32_t
min_rate
;
int32_t
max_rate
;
int64_t
min_ns
;
int64_t
max_ns
;
}
;
#
define
SPA_LATENCY_INFO
(
dir
.
.
.
)
(
(
struct
spa_latency_info
)
{
.
direction
=
(
dir
)
#
#
__VA_ARGS__
}
)
enum
spa_param_process_latency
{
SPA_PARAM_PROCESS_LATENCY_START
SPA_PARAM_PROCESS_LATENCY_quantum
SPA_PARAM_PROCESS_LATENCY_rate
SPA_PARAM_PROCESS_LATENCY_ns
}
;
struct
spa_process_latency_info
{
float
quantum
;
int32_t
rate
;
int64_t
ns
;
}
;
#
define
SPA_PROCESS_LATENCY_INFO_INIT
(
.
.
.
)
(
(
struct
spa_process_latency_info
)
{
__VA_ARGS__
}
)
#
ifdef
__cplusplus
}
#
endif
#
endif
