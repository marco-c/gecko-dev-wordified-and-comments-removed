#
ifndef
SPA_VIDEO_RAW_H
#
define
SPA_VIDEO_RAW_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
<
spa
/
param
/
format
.
h
>
#
include
<
spa
/
param
/
video
/
chroma
.
h
>
#
include
<
spa
/
param
/
video
/
color
.
h
>
#
include
<
spa
/
param
/
video
/
multiview
.
h
>
#
define
SPA_VIDEO_MAX_PLANES
4
#
define
SPA_VIDEO_MAX_COMPONENTS
4
enum
spa_video_format
{
SPA_VIDEO_FORMAT_UNKNOWN
SPA_VIDEO_FORMAT_ENCODED
SPA_VIDEO_FORMAT_I420
SPA_VIDEO_FORMAT_YV12
SPA_VIDEO_FORMAT_YUY2
SPA_VIDEO_FORMAT_UYVY
SPA_VIDEO_FORMAT_AYUV
SPA_VIDEO_FORMAT_RGBx
SPA_VIDEO_FORMAT_BGRx
SPA_VIDEO_FORMAT_xRGB
SPA_VIDEO_FORMAT_xBGR
SPA_VIDEO_FORMAT_RGBA
SPA_VIDEO_FORMAT_BGRA
SPA_VIDEO_FORMAT_ARGB
SPA_VIDEO_FORMAT_ABGR
SPA_VIDEO_FORMAT_RGB
SPA_VIDEO_FORMAT_BGR
SPA_VIDEO_FORMAT_Y41B
SPA_VIDEO_FORMAT_Y42B
SPA_VIDEO_FORMAT_YVYU
SPA_VIDEO_FORMAT_Y444
SPA_VIDEO_FORMAT_v210
SPA_VIDEO_FORMAT_v216
SPA_VIDEO_FORMAT_NV12
SPA_VIDEO_FORMAT_NV21
SPA_VIDEO_FORMAT_GRAY8
SPA_VIDEO_FORMAT_GRAY16_BE
SPA_VIDEO_FORMAT_GRAY16_LE
SPA_VIDEO_FORMAT_v308
SPA_VIDEO_FORMAT_RGB16
SPA_VIDEO_FORMAT_BGR16
SPA_VIDEO_FORMAT_RGB15
SPA_VIDEO_FORMAT_BGR15
SPA_VIDEO_FORMAT_UYVP
SPA_VIDEO_FORMAT_A420
SPA_VIDEO_FORMAT_RGB8P
SPA_VIDEO_FORMAT_YUV9
SPA_VIDEO_FORMAT_YVU9
SPA_VIDEO_FORMAT_IYU1
SPA_VIDEO_FORMAT_ARGB64
SPA_VIDEO_FORMAT_AYUV64
SPA_VIDEO_FORMAT_r210
SPA_VIDEO_FORMAT_I420_10BE
SPA_VIDEO_FORMAT_I420_10LE
SPA_VIDEO_FORMAT_I422_10BE
SPA_VIDEO_FORMAT_I422_10LE
SPA_VIDEO_FORMAT_Y444_10BE
SPA_VIDEO_FORMAT_Y444_10LE
SPA_VIDEO_FORMAT_GBR
SPA_VIDEO_FORMAT_GBR_10BE
SPA_VIDEO_FORMAT_GBR_10LE
SPA_VIDEO_FORMAT_NV16
SPA_VIDEO_FORMAT_NV24
SPA_VIDEO_FORMAT_NV12_64Z32
SPA_VIDEO_FORMAT_A420_10BE
SPA_VIDEO_FORMAT_A420_10LE
SPA_VIDEO_FORMAT_A422_10BE
SPA_VIDEO_FORMAT_A422_10LE
SPA_VIDEO_FORMAT_A444_10BE
SPA_VIDEO_FORMAT_A444_10LE
SPA_VIDEO_FORMAT_NV61
SPA_VIDEO_FORMAT_P010_10BE
SPA_VIDEO_FORMAT_P010_10LE
SPA_VIDEO_FORMAT_IYU2
SPA_VIDEO_FORMAT_VYUY
SPA_VIDEO_FORMAT_GBRA
SPA_VIDEO_FORMAT_GBRA_10BE
SPA_VIDEO_FORMAT_GBRA_10LE
SPA_VIDEO_FORMAT_GBR_12BE
SPA_VIDEO_FORMAT_GBR_12LE
SPA_VIDEO_FORMAT_GBRA_12BE
SPA_VIDEO_FORMAT_GBRA_12LE
SPA_VIDEO_FORMAT_I420_12BE
SPA_VIDEO_FORMAT_I420_12LE
SPA_VIDEO_FORMAT_I422_12BE
SPA_VIDEO_FORMAT_I422_12LE
SPA_VIDEO_FORMAT_Y444_12BE
SPA_VIDEO_FORMAT_Y444_12LE
SPA_VIDEO_FORMAT_RGBA_F16
SPA_VIDEO_FORMAT_RGBA_F32
SPA_VIDEO_FORMAT_xRGB_210LE
SPA_VIDEO_FORMAT_xBGR_210LE
SPA_VIDEO_FORMAT_RGBx_102LE
SPA_VIDEO_FORMAT_BGRx_102LE
SPA_VIDEO_FORMAT_ARGB_210LE
SPA_VIDEO_FORMAT_ABGR_210LE
SPA_VIDEO_FORMAT_RGBA_102LE
SPA_VIDEO_FORMAT_BGRA_102LE
SPA_VIDEO_FORMAT_DSP_F32
=
SPA_VIDEO_FORMAT_RGBA_F32
}
;
enum
spa_video_flags
{
SPA_VIDEO_FLAG_NONE
=
0
SPA_VIDEO_FLAG_VARIABLE_FPS
=
(
1
<
<
0
)
SPA_VIDEO_FLAG_PREMULTIPLIED_ALPHA
=
(
1
<
<
1
)
SPA_VIDEO_FLAG_MODIFIER
=
(
1
<
<
2
)
SPA_VIDEO_FLAG_MODIFIER_FIXATION_REQUIRED
=
(
1
<
<
3
)
}
;
enum
spa_video_interlace_mode
{
SPA_VIDEO_INTERLACE_MODE_PROGRESSIVE
=
0
SPA_VIDEO_INTERLACE_MODE_INTERLEAVED
SPA_VIDEO_INTERLACE_MODE_MIXED
SPA_VIDEO_INTERLACE_MODE_FIELDS
}
;
struct
spa_video_info_raw
{
enum
spa_video_format
format
;
uint32_t
flags
;
uint64_t
modifier
;
struct
spa_rectangle
size
;
struct
spa_fraction
framerate
;
struct
spa_fraction
max_framerate
;
uint32_t
views
;
enum
spa_video_interlace_mode
interlace_mode
;
struct
spa_fraction
pixel_aspect_ratio
;
enum
spa_video_multiview_mode
multiview_mode
;
enum
spa_video_multiview_flags
multiview_flags
;
enum
spa_video_chroma_site
chroma_site
;
enum
spa_video_color_range
color_range
;
enum
spa_video_color_matrix
color_matrix
;
enum
spa_video_transfer_function
transfer_function
;
enum
spa_video_color_primaries
color_primaries
;
}
;
#
define
SPA_VIDEO_INFO_RAW_INIT
(
.
.
.
)
(
(
struct
spa_video_info_raw
)
{
__VA_ARGS__
}
)
#
ifdef
__cplusplus
}
#
endif
#
endif
