#
ifndef
SPA_PARAM_AUDIO_FORMAT_UTILS_H
#
define
SPA_PARAM_AUDIO_FORMAT_UTILS_H
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
<
spa
/
pod
/
parser
.
h
>
#
include
<
spa
/
pod
/
builder
.
h
>
#
include
<
spa
/
param
/
audio
/
format
.
h
>
#
include
<
spa
/
param
/
format
-
utils
.
h
>
static
inline
int
spa_format_audio_raw_parse
(
const
struct
spa_pod
*
format
struct
spa_audio_info_raw
*
info
)
{
struct
spa_pod
*
position
=
NULL
;
int
res
;
info
-
>
flags
=
0
;
res
=
spa_pod_parse_object
(
format
SPA_TYPE_OBJECT_Format
NULL
SPA_FORMAT_AUDIO_format
SPA_POD_Id
(
&
info
-
>
format
)
SPA_FORMAT_AUDIO_rate
SPA_POD_Int
(
&
info
-
>
rate
)
SPA_FORMAT_AUDIO_channels
SPA_POD_Int
(
&
info
-
>
channels
)
SPA_FORMAT_AUDIO_position
SPA_POD_OPT_Pod
(
&
position
)
)
;
if
(
position
=
=
NULL
|
|
!
spa_pod_copy_array
(
position
SPA_TYPE_Id
info
-
>
position
SPA_AUDIO_MAX_CHANNELS
)
)
SPA_FLAG_SET
(
info
-
>
flags
SPA_AUDIO_FLAG_UNPOSITIONED
)
;
return
res
;
}
static
inline
int
spa_format_audio_dsp_parse
(
const
struct
spa_pod
*
format
struct
spa_audio_info_dsp
*
info
)
{
int
res
;
res
=
spa_pod_parse_object
(
format
SPA_TYPE_OBJECT_Format
NULL
SPA_FORMAT_AUDIO_format
SPA_POD_Id
(
&
info
-
>
format
)
)
;
return
res
;
}
static
inline
struct
spa_pod
*
spa_format_audio_raw_build
(
struct
spa_pod_builder
*
builder
uint32_t
id
struct
spa_audio_info_raw
*
info
)
{
struct
spa_pod_frame
f
;
spa_pod_builder_push_object
(
builder
&
f
SPA_TYPE_OBJECT_Format
id
)
;
spa_pod_builder_add
(
builder
SPA_FORMAT_mediaType
SPA_POD_Id
(
SPA_MEDIA_TYPE_audio
)
SPA_FORMAT_mediaSubtype
SPA_POD_Id
(
SPA_MEDIA_SUBTYPE_raw
)
SPA_FORMAT_AUDIO_format
SPA_POD_Id
(
info
-
>
format
)
SPA_FORMAT_AUDIO_rate
SPA_POD_Int
(
info
-
>
rate
)
SPA_FORMAT_AUDIO_channels
SPA_POD_Int
(
info
-
>
channels
)
0
)
;
if
(
!
SPA_FLAG_IS_SET
(
info
-
>
flags
SPA_AUDIO_FLAG_UNPOSITIONED
)
)
{
spa_pod_builder_prop
(
builder
SPA_FORMAT_AUDIO_position
0
)
;
spa_pod_builder_array
(
builder
sizeof
(
uint32_t
)
SPA_TYPE_Id
info
-
>
channels
info
-
>
position
)
;
}
return
(
struct
spa_pod
*
)
spa_pod_builder_pop
(
builder
&
f
)
;
}
static
inline
struct
spa_pod
*
spa_format_audio_dsp_build
(
struct
spa_pod_builder
*
builder
uint32_t
id
struct
spa_audio_info_dsp
*
info
)
{
struct
spa_pod_frame
f
;
spa_pod_builder_push_object
(
builder
&
f
SPA_TYPE_OBJECT_Format
id
)
;
spa_pod_builder_add
(
builder
SPA_FORMAT_mediaType
SPA_POD_Id
(
SPA_MEDIA_TYPE_audio
)
SPA_FORMAT_mediaSubtype
SPA_POD_Id
(
SPA_MEDIA_SUBTYPE_dsp
)
SPA_FORMAT_AUDIO_format
SPA_POD_Id
(
info
-
>
format
)
0
)
;
return
(
struct
spa_pod
*
)
spa_pod_builder_pop
(
builder
&
f
)
;
}
#
ifdef
__cplusplus
}
#
endif
#
endif
