#
!
[
cfg_attr
(
feature
=
"
alloc
"
doc
=
"
"
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
alloc
"
)
doc
=
"
ignore
"
)
]
#
!
[
cfg_attr
(
feature
=
"
alloc
"
doc
=
"
"
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
alloc
"
)
doc
=
"
ignore
"
)
]
#
!
[
cfg_attr
(
feature
=
"
alloc
"
doc
=
"
"
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
alloc
"
)
doc
=
"
ignore
"
)
]
#
!
[
cfg_attr
(
feature
=
"
alloc
"
doc
=
"
"
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
alloc
"
)
doc
=
"
ignore
"
)
]
#
!
[
cfg_attr
(
feature
=
"
alloc
"
doc
=
"
"
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
alloc
"
)
doc
=
"
ignore
"
)
]
#
!
[
cfg_attr
(
feature
=
"
alloc
"
doc
=
"
"
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
alloc
"
)
doc
=
"
ignore
"
)
]
#
!
[
cfg_attr
(
feature
=
"
std
"
doc
=
"
"
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
std
"
)
doc
=
"
ignore
"
)
]
#
!
[
cfg_attr
(
feature
=
"
std
"
doc
=
"
"
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
std
"
)
doc
=
"
ignore
"
)
]
#
!
[
cfg_attr
(
feature
=
"
cargo
-
clippy
"
allow
(
clippy
:
:
cast_lossless
)
)
]
#
!
[
deny
(
missing_docs
trivial_casts
trivial_numeric_casts
unused_extern_crates
unused_import_braces
unused_results
variant_size_differences
)
]
#
!
[
forbid
(
unsafe_code
)
]
#
!
[
allow
(
clippy
:
:
single_component_path_imports
)
]
#
!
[
cfg_attr
(
not
(
any
(
feature
=
"
std
"
test
)
)
no_std
)
]
#
[
cfg
(
any
(
feature
=
"
alloc
"
test
)
)
]
extern
crate
alloc
;
#
[
cfg
(
test
)
]
use
rstest_reuse
;
mod
chunked_encoder
;
pub
mod
display
;
#
[
cfg
(
any
(
feature
=
"
std
"
test
)
)
]
pub
mod
read
;
#
[
cfg
(
any
(
feature
=
"
std
"
test
)
)
]
pub
mod
write
;
pub
mod
engine
;
pub
use
engine
:
:
Engine
;
pub
mod
alphabet
;
mod
encode
;
#
[
allow
(
deprecated
)
]
#
[
cfg
(
any
(
feature
=
"
alloc
"
test
)
)
]
pub
use
crate
:
:
encode
:
:
{
encode
encode_engine
encode_engine_string
}
;
#
[
allow
(
deprecated
)
]
pub
use
crate
:
:
encode
:
:
{
encode_engine_slice
encoded_len
EncodeSliceError
}
;
mod
decode
;
#
[
allow
(
deprecated
)
]
#
[
cfg
(
any
(
feature
=
"
alloc
"
test
)
)
]
pub
use
crate
:
:
decode
:
:
{
decode
decode_engine
decode_engine_vec
}
;
#
[
allow
(
deprecated
)
]
pub
use
crate
:
:
decode
:
:
{
decode_engine_slice
decoded_len_estimate
DecodeError
DecodeSliceError
}
;
pub
mod
prelude
;
#
[
cfg
(
test
)
]
mod
tests
;
const
PAD_BYTE
:
u8
=
b
'
=
'
;
