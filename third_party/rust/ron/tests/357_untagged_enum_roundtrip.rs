use
serde
:
:
{
Deserialize
Serialize
}
;
#
[
derive
(
Debug
PartialEq
Eq
Serialize
Deserialize
)
]
#
[
serde
(
untagged
)
]
enum
MyValue
{
Int
(
i64
)
String
(
String
)
Enum
(
Enum
)
List
(
Vec
<
MyValue
>
)
}
#
[
derive
(
Debug
PartialEq
Eq
Serialize
Deserialize
)
]
enum
Enum
{
First
(
String
)
Second
(
i64
)
}
#
[
test
]
fn
untagged_enum_not_a_list
(
)
{
let
value
=
MyValue
:
:
Enum
(
Enum
:
:
First
(
"
foo
"
.
to_string
(
)
)
)
;
let
ron
=
ron
:
:
to_string
(
&
value
)
.
unwrap
(
)
;
assert_eq
!
(
ron
"
First
(
\
"
foo
\
"
)
"
)
;
let
de
=
ron
:
:
from_str
(
&
ron
)
.
unwrap
(
)
;
println
!
(
"
{
}
"
ron
)
;
assert_eq
!
(
value
de
)
;
}
