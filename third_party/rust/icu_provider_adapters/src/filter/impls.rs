use
super
:
:
*
;
use
alloc
:
:
boxed
:
:
Box
;
use
icu_provider
:
:
prelude
:
:
*
;
impl
<
D
>
FilterDataProvider
<
D
fn
(
DataIdentifierBorrowed
)
-
>
bool
>
{
pub
fn
new
(
provider
:
D
filter_name
:
&
'
static
str
)
-
>
Self
{
Self
{
inner
:
provider
predicate
:
|
_
|
true
filter_name
}
}
}
impl
<
D
F
>
FilterDataProvider
<
D
F
>
where
F
:
Fn
(
DataIdentifierBorrowed
)
-
>
bool
+
Sync
{
#
[
allow
(
clippy
:
:
type_complexity
)
]
pub
fn
with_filter
<
'
a
>
(
self
predicate
:
impl
Fn
(
DataIdentifierBorrowed
)
-
>
bool
+
Sync
+
'
a
)
-
>
FilterDataProvider
<
D
Box
<
dyn
Fn
(
DataIdentifierBorrowed
)
-
>
bool
+
Sync
+
'
a
>
>
where
F
:
'
a
{
let
old_predicate
=
self
.
predicate
;
FilterDataProvider
{
inner
:
self
.
inner
predicate
:
Box
:
:
new
(
move
|
id
|
-
>
bool
{
if
!
(
old_predicate
)
(
id
)
{
return
false
;
}
predicate
(
id
)
}
)
filter_name
:
self
.
filter_name
}
}
}
