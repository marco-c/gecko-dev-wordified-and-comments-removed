pub
trait
Seal
<
T
=
(
)
>
{
}
pub
trait
SimdArray
:
Seal
{
type
Tuple
:
Copy
+
Clone
;
type
T
;
const
N
:
usize
;
type
NT
;
}
#
[
doc
(
hidden
)
]
pub
trait
Shuffle
<
Lanes
>
:
Seal
<
Lanes
>
{
type
Output
;
}
pub
trait
Simd
:
Seal
{
type
Element
;
const
LANES
:
usize
;
type
LanesType
;
}
pub
trait
Mask
:
Seal
{
fn
test
(
&
self
)
-
>
bool
;
}
