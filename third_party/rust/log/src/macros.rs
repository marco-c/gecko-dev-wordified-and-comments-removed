#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
log
{
(
target
:
target
:
expr
lvl
:
expr
(
arg
:
tt
)
+
)
=
>
(
{
let
lvl
=
lvl
;
if
lvl
<
=
crate
:
:
STATIC_MAX_LEVEL
&
&
lvl
<
=
crate
:
:
max_level
(
)
{
crate
:
:
__private_api_log
(
__log_format_args
!
(
(
arg
)
+
)
lvl
&
(
target
__log_module_path
!
(
)
__log_file
!
(
)
__log_line
!
(
)
)
)
;
}
}
)
;
(
lvl
:
expr
(
arg
:
tt
)
+
)
=
>
(
log
!
(
target
:
__log_module_path
!
(
)
lvl
(
arg
)
+
)
)
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
error
{
(
target
:
target
:
expr
(
arg
:
tt
)
+
)
=
>
(
log
!
(
target
:
target
crate
:
:
Level
:
:
Error
(
arg
)
+
)
)
;
(
(
arg
:
tt
)
+
)
=
>
(
log
!
(
crate
:
:
Level
:
:
Error
(
arg
)
+
)
)
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
warn
{
(
target
:
target
:
expr
(
arg
:
tt
)
+
)
=
>
(
log
!
(
target
:
target
crate
:
:
Level
:
:
Warn
(
arg
)
+
)
)
;
(
(
arg
:
tt
)
+
)
=
>
(
log
!
(
crate
:
:
Level
:
:
Warn
(
arg
)
+
)
)
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
info
{
(
target
:
target
:
expr
(
arg
:
tt
)
+
)
=
>
(
log
!
(
target
:
target
crate
:
:
Level
:
:
Info
(
arg
)
+
)
)
;
(
(
arg
:
tt
)
+
)
=
>
(
log
!
(
crate
:
:
Level
:
:
Info
(
arg
)
+
)
)
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
debug
{
(
target
:
target
:
expr
(
arg
:
tt
)
+
)
=
>
(
log
!
(
target
:
target
crate
:
:
Level
:
:
Debug
(
arg
)
+
)
)
;
(
(
arg
:
tt
)
+
)
=
>
(
log
!
(
crate
:
:
Level
:
:
Debug
(
arg
)
+
)
)
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
trace
{
(
target
:
target
:
expr
(
arg
:
tt
)
+
)
=
>
(
log
!
(
target
:
target
crate
:
:
Level
:
:
Trace
(
arg
)
+
)
)
;
(
(
arg
:
tt
)
+
)
=
>
(
log
!
(
crate
:
:
Level
:
:
Trace
(
arg
)
+
)
)
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
log_enabled
{
(
target
:
target
:
expr
lvl
:
expr
)
=
>
{
{
let
lvl
=
lvl
;
lvl
<
=
crate
:
:
STATIC_MAX_LEVEL
&
&
lvl
<
=
crate
:
:
max_level
(
)
&
&
crate
:
:
__private_api_enabled
(
lvl
target
)
}
}
;
(
lvl
:
expr
)
=
>
{
log_enabled
!
(
target
:
__log_module_path
!
(
)
lvl
)
}
;
}
#
[
doc
(
hidden
)
]
#
[
macro_export
]
macro_rules
!
__log_format_args
{
(
(
args
:
tt
)
*
)
=
>
{
format_args
!
(
(
args
)
*
)
}
;
}
#
[
doc
(
hidden
)
]
#
[
macro_export
]
macro_rules
!
__log_module_path
{
(
)
=
>
{
module_path
!
(
)
}
;
}
#
[
doc
(
hidden
)
]
#
[
macro_export
]
macro_rules
!
__log_file
{
(
)
=
>
{
file
!
(
)
}
;
}
#
[
doc
(
hidden
)
]
#
[
macro_export
]
macro_rules
!
__log_line
{
(
)
=
>
{
line
!
(
)
}
;
}
