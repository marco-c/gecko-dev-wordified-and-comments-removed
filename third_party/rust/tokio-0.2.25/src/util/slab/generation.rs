use
crate
:
:
util
:
:
bit
;
use
crate
:
:
util
:
:
slab
:
:
Address
;
#
[
derive
(
Copy
Clone
Debug
PartialEq
Eq
Ord
PartialOrd
)
]
pub
(
crate
)
struct
Generation
(
usize
)
;
impl
Generation
{
pub
(
crate
)
const
WIDTH
:
u32
=
Address
:
:
GENERATION_WIDTH
;
pub
(
super
)
const
MAX
:
usize
=
bit
:
:
mask_for
(
Address
:
:
GENERATION_WIDTH
)
;
pub
(
crate
)
fn
new
(
value
:
usize
)
-
>
Generation
{
assert
!
(
value
<
=
Self
:
:
MAX
)
;
Generation
(
value
)
}
pub
(
crate
)
fn
next
(
self
)
-
>
Generation
{
Generation
(
(
self
.
0
+
1
)
&
Self
:
:
MAX
)
}
pub
(
crate
)
fn
to_usize
(
self
)
-
>
usize
{
self
.
0
}
}
