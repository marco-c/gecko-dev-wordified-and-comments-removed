use
std
:
:
{
fs
io
path
:
:
PathBuf
}
;
#
[
derive
(
Clone
Debug
)
]
pub
struct
OpenOptions
(
fs
:
:
OpenOptions
)
;
impl
OpenOptions
{
#
[
allow
(
clippy
:
:
new_without_default
)
]
pub
fn
new
(
)
-
>
Self
{
OpenOptions
(
fs
:
:
OpenOptions
:
:
new
(
)
)
}
pub
fn
read
(
&
mut
self
read
:
bool
)
-
>
&
mut
Self
{
self
.
0
.
read
(
read
)
;
self
}
pub
fn
write
(
&
mut
self
write
:
bool
)
-
>
&
mut
Self
{
self
.
0
.
write
(
write
)
;
self
}
pub
fn
append
(
&
mut
self
append
:
bool
)
-
>
&
mut
Self
{
self
.
0
.
append
(
append
)
;
self
}
pub
fn
truncate
(
&
mut
self
truncate
:
bool
)
-
>
&
mut
Self
{
self
.
0
.
truncate
(
truncate
)
;
self
}
pub
fn
create
(
&
mut
self
create
:
bool
)
-
>
&
mut
Self
{
self
.
0
.
create
(
create
)
;
self
}
pub
fn
create_new
(
&
mut
self
create_new
:
bool
)
-
>
&
mut
Self
{
self
.
0
.
create_new
(
create_new
)
;
self
}
pub
fn
open
<
P
>
(
&
self
path
:
P
)
-
>
io
:
:
Result
<
crate
:
:
File
>
where
P
:
Into
<
PathBuf
>
{
#
[
allow
(
deprecated
)
]
crate
:
:
File
:
:
from_options
(
path
.
into
(
)
self
.
options
(
)
)
}
}
impl
OpenOptions
{
pub
fn
from_options
(
options
:
fs
:
:
OpenOptions
)
-
>
Self
{
Self
(
options
)
}
pub
fn
options
(
&
self
)
-
>
&
fs
:
:
OpenOptions
{
&
self
.
0
}
pub
fn
options_mut
(
&
mut
self
)
-
>
&
mut
fs
:
:
OpenOptions
{
&
mut
self
.
0
}
}
#
[
cfg
(
unix
)
]
mod
unix
{
use
crate
:
:
os
:
:
unix
:
:
fs
:
:
OpenOptionsExt
;
use
std
:
:
os
:
:
unix
:
:
fs
:
:
OpenOptionsExt
as
_
;
impl
OpenOptionsExt
for
crate
:
:
OpenOptions
{
fn
mode
(
&
mut
self
mode
:
u32
)
-
>
&
mut
Self
{
self
.
options_mut
(
)
.
mode
(
mode
)
;
self
}
fn
custom_flags
(
&
mut
self
flags
:
i32
)
-
>
&
mut
Self
{
self
.
options_mut
(
)
.
custom_flags
(
flags
)
;
self
}
}
}
#
[
cfg
(
windows
)
]
mod
windows
{
use
crate
:
:
os
:
:
windows
:
:
fs
:
:
OpenOptionsExt
;
use
std
:
:
os
:
:
windows
:
:
fs
:
:
OpenOptionsExt
as
_
;
impl
OpenOptionsExt
for
crate
:
:
OpenOptions
{
fn
access_mode
(
&
mut
self
access
:
u32
)
-
>
&
mut
Self
{
self
.
options_mut
(
)
.
access_mode
(
access
)
;
self
}
fn
share_mode
(
&
mut
self
val
:
u32
)
-
>
&
mut
Self
{
self
.
options_mut
(
)
.
share_mode
(
val
)
;
self
}
fn
custom_flags
(
&
mut
self
flags
:
u32
)
-
>
&
mut
Self
{
self
.
options_mut
(
)
.
custom_flags
(
flags
)
;
self
}
fn
attributes
(
&
mut
self
val
:
u32
)
-
>
&
mut
Self
{
self
.
options_mut
(
)
.
attributes
(
val
)
;
self
}
fn
security_qos_flags
(
&
mut
self
flags
:
u32
)
-
>
&
mut
Self
{
self
.
options_mut
(
)
.
security_qos_flags
(
flags
)
;
self
}
}
}
