#
[
macro_export
]
macro_rules
!
delegate
{
(
name
:
expr
{
(
(
(
sel
:
ident
:
)
+
)
=
>
func
:
expr
)
*
}
)
=
>
(
delegate
!
(
name
{
(
(
(
sel
:
)
+
)
=
>
func
)
*
}
)
)
;
(
name
:
expr
{
(
var
:
ident
:
var_type
:
ty
=
value
:
expr
)
*
(
(
(
sel
:
ident
:
)
+
)
=
>
func
:
expr
)
*
}
)
=
>
(
{
let
mut
decl
=
objc
:
:
declare
:
:
ClassDecl
:
:
new
(
name
class
!
(
NSObject
)
)
.
unwrap
(
)
;
(
decl
.
add_ivar
:
:
<
var_type
>
(
stringify
!
(
var
)
)
;
)
*
(
decl
.
add_method
(
sel
!
(
(
sel
:
)
+
)
func
)
;
)
*
let
cl
=
decl
.
register
(
)
;
let
delegate
:
id
=
msg_send
!
[
cl
alloc
]
;
(
(
*
delegate
)
.
set_ivar
(
stringify
!
(
var
)
value
)
;
)
*
delegate
}
)
;
}
