use
proc_macro2
:
:
TokenStream
;
use
std
:
:
cell
:
:
RefCell
;
use
crate
:
:
check_correctness
;
thread_local
!
{
static
DUMMY_IMPL
:
RefCell
<
Option
<
TokenStream
>
>
=
RefCell
:
:
new
(
None
)
;
}
pub
fn
set_dummy
(
dummy
:
TokenStream
)
-
>
Option
<
TokenStream
>
{
check_correctness
(
)
;
DUMMY_IMPL
.
with
(
|
old_dummy
|
old_dummy
.
replace
(
Some
(
dummy
)
)
)
}
pub
fn
append_dummy
(
dummy
:
TokenStream
)
{
check_correctness
(
)
;
DUMMY_IMPL
.
with
(
|
old_dummy
|
{
let
mut
cell
=
old_dummy
.
borrow_mut
(
)
;
if
let
Some
(
ts
)
=
cell
.
as_mut
(
)
{
ts
.
extend
(
dummy
)
;
}
else
{
*
cell
=
Some
(
dummy
)
;
}
}
)
;
}
pub
(
crate
)
fn
cleanup
(
)
-
>
Option
<
TokenStream
>
{
DUMMY_IMPL
.
with
(
|
old_dummy
|
old_dummy
.
replace
(
None
)
)
}
