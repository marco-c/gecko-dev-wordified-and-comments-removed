#
!
[
deny
(
warnings
)
]
use
hyper
:
:
server
:
:
Server
;
use
listenfd
:
:
ListenFd
;
use
std
:
:
convert
:
:
Infallible
;
use
warp
:
:
Filter
;
extern
crate
listenfd
;
#
[
tokio
:
:
main
]
async
fn
main
(
)
{
let
routes
=
warp
:
:
any
(
)
.
map
(
|
|
"
Hello
World
!
"
)
;
let
svc
=
warp
:
:
service
(
routes
)
;
let
make_svc
=
hyper
:
:
service
:
:
make_service_fn
(
|
_
:
_
|
async
move
{
Ok
:
:
<
_
Infallible
>
(
svc
)
}
)
;
let
mut
listenfd
=
ListenFd
:
:
from_env
(
)
;
let
server
=
if
let
Some
(
l
)
=
listenfd
.
take_tcp_listener
(
0
)
.
unwrap
(
)
{
Server
:
:
from_tcp
(
l
)
.
unwrap
(
)
}
else
{
Server
:
:
bind
(
&
(
[
127
0
0
1
]
3030
)
.
into
(
)
)
}
;
server
.
serve
(
make_svc
)
.
await
.
unwrap
(
)
;
}
