#
!
[
deny
(
warnings
)
]
use
warp
:
:
Filter
;
#
[
tokio
:
:
main
]
async
fn
main
(
)
{
pretty_env_logger
:
:
init
(
)
;
let
hi
=
warp
:
:
path
(
"
hi
"
)
.
map
(
|
|
"
Hello
World
!
"
)
;
let
hello_from_warp
=
warp
:
:
path
!
(
"
hello
"
/
"
from
"
/
"
warp
"
)
.
map
(
|
|
"
Hello
from
warp
!
"
)
;
let
sum
=
warp
:
:
path
!
(
"
sum
"
/
u32
/
u32
)
.
map
(
|
a
b
|
format
!
(
"
{
}
+
{
}
=
{
}
"
a
b
a
+
b
)
)
;
let
times
=
warp
:
:
path
!
(
u16
/
"
times
"
/
u16
)
.
map
(
|
a
b
|
format
!
(
"
{
}
times
{
}
=
{
}
"
a
b
a
*
b
)
)
;
let
math
=
warp
:
:
path
(
"
math
"
)
;
let
_sum
=
math
.
and
(
sum
)
;
let
_times
=
math
.
and
(
times
)
;
let
bye
=
warp
:
:
path
(
"
bye
"
)
.
and
(
warp
:
:
path
:
:
param
(
)
)
.
map
(
|
name
:
String
|
format
!
(
"
Good
bye
{
}
!
"
name
)
)
;
let
math
=
warp
:
:
path
(
"
math
"
)
.
and
(
sum
.
or
(
times
)
)
;
let
help
=
warp
:
:
path
(
"
math
"
)
.
and
(
warp
:
:
path
:
:
end
(
)
)
.
map
(
|
|
"
This
is
the
Math
API
.
Try
calling
/
math
/
sum
/
:
u32
/
:
u32
or
/
math
/
:
u16
/
times
/
:
u16
"
)
;
let
math
=
help
.
or
(
math
)
;
let
sum
=
sum
.
map
(
|
output
|
format
!
(
"
(
This
route
has
moved
to
/
math
/
sum
/
:
u16
/
:
u16
)
{
}
"
output
)
)
;
let
times
=
times
.
map
(
|
output
|
format
!
(
"
(
This
route
has
moved
to
/
math
/
:
u16
/
times
/
:
u16
)
{
}
"
output
)
)
;
let
routes
=
warp
:
:
get
(
)
.
and
(
hi
.
or
(
hello_from_warp
)
.
or
(
bye
)
.
or
(
math
)
.
or
(
sum
)
.
or
(
times
)
)
;
warp
:
:
serve
(
routes
)
.
run
(
(
[
127
0
0
1
]
3030
)
)
.
await
;
}
