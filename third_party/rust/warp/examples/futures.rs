#
!
[
deny
(
warnings
)
]
extern
crate
tokio
;
extern
crate
warp
;
use
std
:
:
str
:
:
FromStr
;
use
std
:
:
time
:
:
{
Duration
Instant
}
;
use
tokio
:
:
timer
:
:
Delay
;
use
warp
:
:
{
Filter
Future
}
;
struct
Seconds
(
u64
)
;
impl
FromStr
for
Seconds
{
type
Err
=
(
)
;
fn
from_str
(
src
:
&
str
)
-
>
Result
<
Self
Self
:
:
Err
>
{
src
.
parse
:
:
<
u64
>
(
)
.
map_err
(
|
_
|
(
)
)
.
and_then
(
|
num
|
{
if
num
<
=
5
{
Ok
(
Seconds
(
num
)
)
}
else
{
Err
(
(
)
)
}
}
)
}
}
fn
main
(
)
{
let
routes
=
warp
:
:
path
:
:
param
(
)
.
and_then
(
|
Seconds
(
seconds
)
|
{
Delay
:
:
new
(
Instant
:
:
now
(
)
+
Duration
:
:
from_secs
(
seconds
)
)
.
map
(
move
|
(
)
|
seconds
)
.
map_err
(
|
timer_err
|
{
eprintln
!
(
"
timer
error
:
{
}
"
timer_err
)
;
warp
:
:
reject
:
:
custom
(
timer_err
)
}
)
}
)
.
map
(
|
seconds
|
format
!
(
"
I
waited
{
}
seconds
!
"
seconds
)
)
;
warp
:
:
serve
(
routes
)
.
run
(
(
[
127
0
0
1
]
3030
)
)
;
}
