use
super
:
:
*
;
const
GLOBAL_APPLICATION_ID
:
&
str
=
"
org
.
mozilla
.
fogotype
.
test
"
;
fn
new_glean
(
)
-
>
tempfile
:
:
TempDir
{
let
dir
=
tempfile
:
:
tempdir
(
)
.
unwrap
(
)
;
let
tmpname
=
dir
.
path
(
)
.
display
(
)
.
to_string
(
)
;
let
cfg
=
Configuration
{
data_path
:
tmpname
application_id
:
GLOBAL_APPLICATION_ID
.
into
(
)
upload_enabled
:
true
max_events
:
None
delay_ping_lifetime_io
:
false
channel
:
Some
(
"
testing
"
.
into
(
)
)
}
;
initialize
(
cfg
ClientInfoMetrics
:
:
unknown
(
)
)
.
unwrap
(
)
;
dir
}
#
[
test
]
fn
it_initializes
(
)
{
env_logger
:
:
try_init
(
)
.
ok
(
)
;
let
_
=
new_glean
(
)
;
}
#
[
test
]
fn
it_toggles_upload
(
)
{
env_logger
:
:
try_init
(
)
.
ok
(
)
;
let
_t
=
new_glean
(
)
;
assert
!
(
crate
:
:
is_upload_enabled
(
)
)
;
crate
:
:
set_upload_enabled
(
false
)
;
assert
!
(
!
crate
:
:
is_upload_enabled
(
)
)
;
}
#
[
test
]
fn
client_info_reset_after_toggle
(
)
{
env_logger
:
:
try_init
(
)
.
ok
(
)
;
let
_t
=
new_glean
(
)
;
assert
!
(
crate
:
:
is_upload_enabled
(
)
)
;
let
core_metrics
=
core_metrics
:
:
InternalMetrics
:
:
new
(
)
;
with_glean
(
|
glean
|
{
assert
!
(
core_metrics
.
os
.
test_get_value
(
glean
"
glean_client_info
"
)
.
is_some
(
)
)
;
}
)
;
crate
:
:
set_upload_enabled
(
false
)
;
with_glean
(
|
glean
|
{
assert
!
(
!
core_metrics
.
os
.
test_get_value
(
glean
"
glean_client_info
"
)
.
is_some
(
)
)
;
}
)
;
crate
:
:
set_upload_enabled
(
true
)
;
with_glean
(
|
glean
|
{
assert
!
(
core_metrics
.
os
.
test_get_value
(
glean
"
glean_client_info
"
)
.
is_some
(
)
)
;
}
)
;
}
