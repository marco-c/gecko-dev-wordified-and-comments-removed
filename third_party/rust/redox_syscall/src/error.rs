use
core
:
:
{
fmt
result
}
;
#
[
derive
(
Eq
PartialEq
)
]
pub
struct
Error
{
pub
errno
:
i32
}
pub
type
Result
<
T
>
=
result
:
:
Result
<
T
Error
>
;
impl
Error
{
pub
fn
new
(
errno
:
i32
)
-
>
Error
{
Error
{
errno
:
errno
}
}
pub
fn
mux
(
result
:
Result
<
usize
>
)
-
>
usize
{
match
result
{
Ok
(
value
)
=
>
value
Err
(
error
)
=
>
-
error
.
errno
as
usize
}
}
pub
fn
demux
(
value
:
usize
)
-
>
Result
<
usize
>
{
let
errno
=
-
(
value
as
i32
)
;
if
errno
>
=
1
&
&
errno
<
STR_ERROR
.
len
(
)
as
i32
{
Err
(
Error
:
:
new
(
errno
)
)
}
else
{
Ok
(
value
)
}
}
pub
fn
text
(
&
self
)
-
>
&
'
static
str
{
STR_ERROR
.
get
(
self
.
errno
as
usize
)
.
map
(
|
&
x
|
x
)
.
unwrap_or
(
"
Unknown
Error
"
)
}
}
impl
fmt
:
:
Debug
for
Error
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
result
:
:
Result
<
(
)
fmt
:
:
Error
>
{
f
.
write_str
(
self
.
text
(
)
)
}
}
impl
fmt
:
:
Display
for
Error
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
result
:
:
Result
<
(
)
fmt
:
:
Error
>
{
f
.
write_str
(
self
.
text
(
)
)
}
}
pub
const
EPERM
:
i32
=
1
;
pub
const
ENOENT
:
i32
=
2
;
pub
const
ESRCH
:
i32
=
3
;
pub
const
EINTR
:
i32
=
4
;
pub
const
EIO
:
i32
=
5
;
pub
const
ENXIO
:
i32
=
6
;
pub
const
E2BIG
:
i32
=
7
;
pub
const
ENOEXEC
:
i32
=
8
;
pub
const
EBADF
:
i32
=
9
;
pub
const
ECHILD
:
i32
=
10
;
pub
const
EAGAIN
:
i32
=
11
;
pub
const
ENOMEM
:
i32
=
12
;
pub
const
EACCES
:
i32
=
13
;
pub
const
EFAULT
:
i32
=
14
;
pub
const
ENOTBLK
:
i32
=
15
;
pub
const
EBUSY
:
i32
=
16
;
pub
const
EEXIST
:
i32
=
17
;
pub
const
EXDEV
:
i32
=
18
;
pub
const
ENODEV
:
i32
=
19
;
pub
const
ENOTDIR
:
i32
=
20
;
pub
const
EISDIR
:
i32
=
21
;
pub
const
EINVAL
:
i32
=
22
;
pub
const
ENFILE
:
i32
=
23
;
pub
const
EMFILE
:
i32
=
24
;
pub
const
ENOTTY
:
i32
=
25
;
pub
const
ETXTBSY
:
i32
=
26
;
pub
const
EFBIG
:
i32
=
27
;
pub
const
ENOSPC
:
i32
=
28
;
pub
const
ESPIPE
:
i32
=
29
;
pub
const
EROFS
:
i32
=
30
;
pub
const
EMLINK
:
i32
=
31
;
pub
const
EPIPE
:
i32
=
32
;
pub
const
EDOM
:
i32
=
33
;
pub
const
ERANGE
:
i32
=
34
;
pub
const
EDEADLK
:
i32
=
35
;
pub
const
ENAMETOOLONG
:
i32
=
36
;
pub
const
ENOLCK
:
i32
=
37
;
pub
const
ENOSYS
:
i32
=
38
;
pub
const
ENOTEMPTY
:
i32
=
39
;
pub
const
ELOOP
:
i32
=
40
;
pub
const
EWOULDBLOCK
:
i32
=
41
;
pub
const
ENOMSG
:
i32
=
42
;
pub
const
EIDRM
:
i32
=
43
;
pub
const
ECHRNG
:
i32
=
44
;
pub
const
EL2NSYNC
:
i32
=
45
;
pub
const
EL3HLT
:
i32
=
46
;
pub
const
EL3RST
:
i32
=
47
;
pub
const
ELNRNG
:
i32
=
48
;
pub
const
EUNATCH
:
i32
=
49
;
pub
const
ENOCSI
:
i32
=
50
;
pub
const
EL2HLT
:
i32
=
51
;
pub
const
EBADE
:
i32
=
52
;
pub
const
EBADR
:
i32
=
53
;
pub
const
EXFULL
:
i32
=
54
;
pub
const
ENOANO
:
i32
=
55
;
pub
const
EBADRQC
:
i32
=
56
;
pub
const
EBADSLT
:
i32
=
57
;
pub
const
EDEADLOCK
:
i32
=
58
;
pub
const
EBFONT
:
i32
=
59
;
pub
const
ENOSTR
:
i32
=
60
;
pub
const
ENODATA
:
i32
=
61
;
pub
const
ETIME
:
i32
=
62
;
pub
const
ENOSR
:
i32
=
63
;
pub
const
ENONET
:
i32
=
64
;
pub
const
ENOPKG
:
i32
=
65
;
pub
const
EREMOTE
:
i32
=
66
;
pub
const
ENOLINK
:
i32
=
67
;
pub
const
EADV
:
i32
=
68
;
pub
const
ESRMNT
:
i32
=
69
;
pub
const
ECOMM
:
i32
=
70
;
pub
const
EPROTO
:
i32
=
71
;
pub
const
EMULTIHOP
:
i32
=
72
;
pub
const
EDOTDOT
:
i32
=
73
;
pub
const
EBADMSG
:
i32
=
74
;
pub
const
EOVERFLOW
:
i32
=
75
;
pub
const
ENOTUNIQ
:
i32
=
76
;
pub
const
EBADFD
:
i32
=
77
;
pub
const
EREMCHG
:
i32
=
78
;
pub
const
ELIBACC
:
i32
=
79
;
pub
const
ELIBBAD
:
i32
=
80
;
pub
const
ELIBSCN
:
i32
=
81
;
pub
const
ELIBMAX
:
i32
=
82
;
pub
const
ELIBEXEC
:
i32
=
83
;
pub
const
EILSEQ
:
i32
=
84
;
pub
const
ERESTART
:
i32
=
85
;
pub
const
ESTRPIPE
:
i32
=
86
;
pub
const
EUSERS
:
i32
=
87
;
pub
const
ENOTSOCK
:
i32
=
88
;
pub
const
EDESTADDRREQ
:
i32
=
89
;
pub
const
EMSGSIZE
:
i32
=
90
;
pub
const
EPROTOTYPE
:
i32
=
91
;
pub
const
ENOPROTOOPT
:
i32
=
92
;
pub
const
EPROTONOSUPPORT
:
i32
=
93
;
pub
const
ESOCKTNOSUPPORT
:
i32
=
94
;
pub
const
EOPNOTSUPP
:
i32
=
95
;
pub
const
EPFNOSUPPORT
:
i32
=
96
;
pub
const
EAFNOSUPPORT
:
i32
=
97
;
pub
const
EADDRINUSE
:
i32
=
98
;
pub
const
EADDRNOTAVAIL
:
i32
=
99
;
pub
const
ENETDOWN
:
i32
=
100
;
pub
const
ENETUNREACH
:
i32
=
101
;
pub
const
ENETRESET
:
i32
=
102
;
pub
const
ECONNABORTED
:
i32
=
103
;
pub
const
ECONNRESET
:
i32
=
104
;
pub
const
ENOBUFS
:
i32
=
105
;
pub
const
EISCONN
:
i32
=
106
;
pub
const
ENOTCONN
:
i32
=
107
;
pub
const
ESHUTDOWN
:
i32
=
108
;
pub
const
ETOOMANYREFS
:
i32
=
109
;
pub
const
ETIMEDOUT
:
i32
=
110
;
pub
const
ECONNREFUSED
:
i32
=
111
;
pub
const
EHOSTDOWN
:
i32
=
112
;
pub
const
EHOSTUNREACH
:
i32
=
113
;
pub
const
EALREADY
:
i32
=
114
;
pub
const
EINPROGRESS
:
i32
=
115
;
pub
const
ESTALE
:
i32
=
116
;
pub
const
EUCLEAN
:
i32
=
117
;
pub
const
ENOTNAM
:
i32
=
118
;
pub
const
ENAVAIL
:
i32
=
119
;
pub
const
EISNAM
:
i32
=
120
;
pub
const
EREMOTEIO
:
i32
=
121
;
pub
const
EDQUOT
:
i32
=
122
;
pub
const
ENOMEDIUM
:
i32
=
123
;
pub
const
EMEDIUMTYPE
:
i32
=
124
;
pub
const
ECANCELED
:
i32
=
125
;
pub
const
ENOKEY
:
i32
=
126
;
pub
const
EKEYEXPIRED
:
i32
=
127
;
pub
const
EKEYREVOKED
:
i32
=
128
;
pub
const
EKEYREJECTED
:
i32
=
129
;
pub
const
EOWNERDEAD
:
i32
=
130
;
pub
const
ENOTRECOVERABLE
:
i32
=
131
;
pub
static
STR_ERROR
:
[
&
'
static
str
;
132
]
=
[
"
Success
"
"
Operation
not
permitted
"
"
No
such
file
or
directory
"
"
No
such
process
"
"
Interrupted
system
call
"
"
I
/
O
error
"
"
No
such
device
or
address
"
"
Argument
list
too
long
"
"
Exec
format
error
"
"
Bad
file
number
"
"
No
child
processes
"
"
Try
again
"
"
Out
of
memory
"
"
Permission
denied
"
"
Bad
address
"
"
Block
device
required
"
"
Device
or
resource
busy
"
"
File
exists
"
"
Cross
-
device
link
"
"
No
such
device
"
"
Not
a
directory
"
"
Is
a
directory
"
"
Invalid
argument
"
"
File
table
overflow
"
"
Too
many
open
files
"
"
Not
a
typewriter
"
"
Text
file
busy
"
"
File
too
large
"
"
No
space
left
on
device
"
"
Illegal
seek
"
"
Read
-
only
file
system
"
"
Too
many
links
"
"
Broken
pipe
"
"
Math
argument
out
of
domain
of
func
"
"
Math
result
not
representable
"
"
Resource
deadlock
would
occur
"
"
File
name
too
long
"
"
No
record
locks
available
"
"
Function
not
implemented
"
"
Directory
not
empty
"
"
Too
many
symbolic
links
encountered
"
"
Operation
would
block
"
"
No
message
of
desired
type
"
"
Identifier
removed
"
"
Channel
number
out
of
range
"
"
Level
2
not
synchronized
"
"
Level
3
halted
"
"
Level
3
reset
"
"
Link
number
out
of
range
"
"
Protocol
driver
not
attached
"
"
No
CSI
structure
available
"
"
Level
2
halted
"
"
Invalid
exchange
"
"
Invalid
request
descriptor
"
"
Exchange
full
"
"
No
anode
"
"
Invalid
request
code
"
"
Invalid
slot
"
"
Resource
deadlock
would
occur
"
"
Bad
font
file
format
"
"
Device
not
a
stream
"
"
No
data
available
"
"
Timer
expired
"
"
Out
of
streams
resources
"
"
Machine
is
not
on
the
network
"
"
Package
not
installed
"
"
Object
is
remote
"
"
Link
has
been
severed
"
"
Advertise
error
"
"
Srmount
error
"
"
Communication
error
on
send
"
"
Protocol
error
"
"
Multihop
attempted
"
"
RFS
specific
error
"
"
Not
a
data
message
"
"
Value
too
large
for
defined
data
type
"
"
Name
not
unique
on
network
"
"
File
descriptor
in
bad
state
"
"
Remote
address
changed
"
"
Can
not
access
a
needed
shared
library
"
"
Accessing
a
corrupted
shared
library
"
"
.
lib
section
in
a
.
out
corrupted
"
"
Attempting
to
link
in
too
many
shared
libraries
"
"
Cannot
exec
a
shared
library
directly
"
"
Illegal
byte
sequence
"
"
Interrupted
system
call
should
be
restarted
"
"
Streams
pipe
error
"
"
Too
many
users
"
"
Socket
operation
on
non
-
socket
"
"
Destination
address
required
"
"
Message
too
long
"
"
Protocol
wrong
type
for
socket
"
"
Protocol
not
available
"
"
Protocol
not
supported
"
"
Socket
type
not
supported
"
"
Operation
not
supported
on
transport
endpoint
"
"
Protocol
family
not
supported
"
"
Address
family
not
supported
by
protocol
"
"
Address
already
in
use
"
"
Cannot
assign
requested
address
"
"
Network
is
down
"
"
Network
is
unreachable
"
"
Network
dropped
connection
because
of
reset
"
"
Software
caused
connection
abort
"
"
Connection
reset
by
peer
"
"
No
buffer
space
available
"
"
Transport
endpoint
is
already
connected
"
"
Transport
endpoint
is
not
connected
"
"
Cannot
send
after
transport
endpoint
shutdown
"
"
Too
many
references
:
cannot
splice
"
"
Connection
timed
out
"
"
Connection
refused
"
"
Host
is
down
"
"
No
route
to
host
"
"
Operation
already
in
progress
"
"
Operation
now
in
progress
"
"
Stale
NFS
file
handle
"
"
Structure
needs
cleaning
"
"
Not
a
XENIX
named
type
file
"
"
No
XENIX
semaphores
available
"
"
Is
a
named
type
file
"
"
Remote
I
/
O
error
"
"
Quota
exceeded
"
"
No
medium
found
"
"
Wrong
medium
type
"
"
Operation
Canceled
"
"
Required
key
not
available
"
"
Key
has
expired
"
"
Key
has
been
revoked
"
"
Key
was
rejected
by
service
"
"
Owner
died
"
"
State
not
recoverable
"
]
;
