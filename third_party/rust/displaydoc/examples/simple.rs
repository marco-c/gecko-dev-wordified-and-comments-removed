use
displaydoc
:
:
Display
;
#
[
derive
(
Debug
Display
)
]
pub
enum
DataStoreError
{
Disconnect
Redaction
(
String
)
InvalidHeader
{
expected
:
String
found
:
String
}
Unknown
}
fn
main
(
)
{
let
disconnect
=
DataStoreError
:
:
Disconnect
;
println
!
(
"
Enum
value
Disconnect
should
be
printed
as
:
\
n
\
t
{
}
"
disconnect
)
;
let
redaction
=
DataStoreError
:
:
Redaction
(
String
:
:
from
(
"
Dummy
"
)
)
;
println
!
(
"
Enum
value
Redaction
should
be
printed
as
:
\
n
\
t
{
}
"
redaction
)
;
let
invalid_header
=
DataStoreError
:
:
InvalidHeader
{
expected
:
String
:
:
from
(
"
https
"
)
found
:
String
:
:
from
(
"
http
"
)
}
;
println
!
(
"
Enum
value
InvalidHeader
should
be
printed
as
:
\
n
\
t
{
}
"
invalid_header
)
;
}
