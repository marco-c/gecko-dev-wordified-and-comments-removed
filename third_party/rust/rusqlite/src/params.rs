use
crate
:
:
{
Result
Statement
ToSql
}
;
mod
sealed
{
pub
trait
Sealed
{
}
}
use
sealed
:
:
Sealed
;
pub
trait
Params
:
Sealed
{
#
[
doc
(
hidden
)
]
fn
__bind_in
(
self
stmt
:
&
mut
Statement
<
'
_
>
)
-
>
Result
<
(
)
>
;
}
impl
Sealed
for
[
&
(
dyn
ToSql
+
Send
+
Sync
)
;
0
]
{
}
impl
Params
for
[
&
(
dyn
ToSql
+
Send
+
Sync
)
;
0
]
{
#
[
inline
]
fn
__bind_in
(
self
stmt
:
&
mut
Statement
<
'
_
>
)
-
>
Result
<
(
)
>
{
stmt
.
bind_parameters
(
&
[
]
as
&
[
&
dyn
ToSql
]
)
}
}
impl
Sealed
for
&
[
&
dyn
ToSql
]
{
}
impl
Params
for
&
[
&
dyn
ToSql
]
{
#
[
inline
]
fn
__bind_in
(
self
stmt
:
&
mut
Statement
<
'
_
>
)
-
>
Result
<
(
)
>
{
stmt
.
bind_parameters
(
self
)
}
}
impl
Sealed
for
&
[
(
&
str
&
dyn
ToSql
)
]
{
}
impl
Params
for
&
[
(
&
str
&
dyn
ToSql
)
]
{
#
[
inline
]
fn
__bind_in
(
self
stmt
:
&
mut
Statement
<
'
_
>
)
-
>
Result
<
(
)
>
{
stmt
.
bind_parameters_named
(
self
)
}
}
macro_rules
!
impl_for_array_ref
{
(
(
N
:
literal
)
+
)
=
>
{
(
impl
<
T
:
ToSql
+
?
Sized
>
Sealed
for
&
[
&
T
;
N
]
{
}
impl
<
T
:
ToSql
+
?
Sized
>
Params
for
&
[
&
T
;
N
]
{
fn
__bind_in
(
self
stmt
:
&
mut
Statement
<
'
_
>
)
-
>
Result
<
(
)
>
{
stmt
.
bind_parameters
(
self
)
}
}
impl
<
T
:
ToSql
+
?
Sized
>
Sealed
for
&
[
(
&
str
&
T
)
;
N
]
{
}
impl
<
T
:
ToSql
+
?
Sized
>
Params
for
&
[
(
&
str
&
T
)
;
N
]
{
fn
__bind_in
(
self
stmt
:
&
mut
Statement
<
'
_
>
)
-
>
Result
<
(
)
>
{
stmt
.
bind_parameters_named
(
self
)
}
}
impl
<
T
:
ToSql
>
Sealed
for
[
T
;
N
]
{
}
impl
<
T
:
ToSql
>
Params
for
[
T
;
N
]
{
#
[
inline
]
fn
__bind_in
(
self
stmt
:
&
mut
Statement
<
'
_
>
)
-
>
Result
<
(
)
>
{
stmt
.
bind_parameters
(
&
self
)
}
}
)
+
}
;
}
impl_for_array_ref
!
(
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
29
30
31
32
)
;
#
[
derive
(
Clone
Debug
)
]
pub
struct
ParamsFromIter
<
I
>
(
I
)
;
#
[
inline
]
pub
fn
params_from_iter
<
I
>
(
iter
:
I
)
-
>
ParamsFromIter
<
I
>
where
I
:
IntoIterator
I
:
:
Item
:
ToSql
{
ParamsFromIter
(
iter
)
}
impl
<
I
>
Sealed
for
ParamsFromIter
<
I
>
where
I
:
IntoIterator
I
:
:
Item
:
ToSql
{
}
impl
<
I
>
Params
for
ParamsFromIter
<
I
>
where
I
:
IntoIterator
I
:
:
Item
:
ToSql
{
#
[
inline
]
fn
__bind_in
(
self
stmt
:
&
mut
Statement
<
'
_
>
)
-
>
Result
<
(
)
>
{
stmt
.
bind_parameters
(
self
.
0
)
}
}
