use
crate
:
:
num_display
:
:
HexNum
;
use
std
:
:
fmt
:
:
Debug
;
#
[
derive
(
Clone
Copy
PartialEq
Eq
)
]
pub
struct
CompressedFunctionEntry
(
pub
u32
)
;
impl
CompressedFunctionEntry
{
pub
fn
new
(
value
:
u32
)
-
>
Self
{
Self
(
value
)
}
pub
fn
opcode_index
(
&
self
)
-
>
u8
{
(
self
.
0
>
>
24
)
as
u8
}
pub
fn
relative_address
(
&
self
)
-
>
u32
{
self
.
0
&
0xffffff
}
}
impl
From
<
u32
>
for
CompressedFunctionEntry
{
fn
from
(
entry
:
u32
)
-
>
CompressedFunctionEntry
{
CompressedFunctionEntry
:
:
new
(
entry
)
}
}
impl
Debug
for
CompressedFunctionEntry
{
fn
fmt
(
&
self
f
:
&
mut
std
:
:
fmt
:
:
Formatter
<
'
_
>
)
-
>
std
:
:
fmt
:
:
Result
{
f
.
debug_struct
(
"
CompressedFunctionEntry
"
)
.
field
(
"
opcode_index
"
&
HexNum
(
self
.
opcode_index
(
)
)
)
.
field
(
"
relative_address
"
&
HexNum
(
self
.
relative_address
(
)
)
)
.
finish
(
)
}
}
