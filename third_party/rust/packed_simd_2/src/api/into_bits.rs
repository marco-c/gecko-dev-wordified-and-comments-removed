pub
trait
FromBits
<
T
>
:
crate
:
:
marker
:
:
Sized
{
fn
from_bits
(
t
:
T
)
-
>
Self
;
}
pub
trait
IntoBits
<
T
>
:
crate
:
:
marker
:
:
Sized
{
fn
into_bits
(
self
)
-
>
T
;
}
impl
<
T
U
>
IntoBits
<
U
>
for
T
where
U
:
FromBits
<
T
>
{
#
[
inline
]
fn
into_bits
(
self
)
-
>
U
{
debug_assert
!
(
crate
:
:
mem
:
:
size_of
:
:
<
Self
>
(
)
=
=
crate
:
:
mem
:
:
size_of
:
:
<
U
>
(
)
)
;
U
:
:
from_bits
(
self
)
}
}
impl
<
T
>
FromBits
<
T
>
for
T
{
#
[
inline
]
fn
from_bits
(
t
:
Self
)
-
>
Self
{
t
}
}
#
[
macro_use
]
mod
macros
;
mod
v16
;
pub
use
self
:
:
v16
:
:
*
;
mod
v32
;
pub
use
self
:
:
v32
:
:
*
;
mod
v64
;
pub
use
self
:
:
v64
:
:
*
;
mod
v128
;
pub
use
self
:
:
v128
:
:
*
;
mod
v256
;
pub
use
self
:
:
v256
:
:
*
;
mod
v512
;
pub
use
self
:
:
v512
:
:
*
;
mod
arch_specific
;
pub
use
self
:
:
arch_specific
:
:
*
;
