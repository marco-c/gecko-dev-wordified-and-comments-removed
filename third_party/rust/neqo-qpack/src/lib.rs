#
!
[
cfg_attr
(
feature
=
"
deny
-
warnings
"
deny
(
warnings
)
)
]
#
!
[
warn
(
clippy
:
:
use_self
)
]
pub
mod
decoder
;
mod
decoder_instructions
;
pub
mod
encoder
;
mod
encoder_instructions
;
mod
header_block
;
pub
mod
huffman
;
mod
huffman_decode_helper
;
pub
mod
huffman_table
;
mod
prefix
;
mod
qpack_send_buf
;
pub
mod
reader
;
mod
static_table
;
mod
table
;
pub
type
Header
=
(
String
String
)
;
type
Res
<
T
>
=
Result
<
T
Error
>
;
#
[
derive
(
Debug
)
]
enum
QPackSide
{
Encoder
Decoder
}
impl
:
:
std
:
:
fmt
:
:
Display
for
QPackSide
{
fn
fmt
(
&
self
f
:
&
mut
:
:
std
:
:
fmt
:
:
Formatter
)
-
>
:
:
std
:
:
fmt
:
:
Result
{
write
!
(
f
"
{
:
?
}
"
self
)
}
}
#
[
derive
(
Clone
Debug
PartialEq
)
]
pub
enum
Error
{
DecompressionFailed
EncoderStreamError
DecoderStreamError
ClosedCriticalStream
HeaderLookupError
NoMoreData
IntegerOverflow
WrongStreamCount
InternalError
DecodingError
TransportError
(
neqo_transport
:
:
Error
)
}
impl
Error
{
pub
fn
code
(
&
self
)
-
>
neqo_transport
:
:
AppError
{
3
}
}
impl
:
:
std
:
:
error
:
:
Error
for
Error
{
fn
source
(
&
self
)
-
>
Option
<
&
(
dyn
:
:
std
:
:
error
:
:
Error
+
'
static
)
>
{
match
self
{
Self
:
:
TransportError
(
e
)
=
>
Some
(
e
)
_
=
>
None
}
}
}
impl
:
:
std
:
:
fmt
:
:
Display
for
Error
{
fn
fmt
(
&
self
f
:
&
mut
:
:
std
:
:
fmt
:
:
Formatter
)
-
>
:
:
std
:
:
fmt
:
:
Result
{
write
!
(
f
"
QPACK
error
:
{
:
?
}
"
self
)
}
}
impl
From
<
neqo_transport
:
:
Error
>
for
Error
{
fn
from
(
err
:
neqo_transport
:
:
Error
)
-
>
Self
{
Self
:
:
TransportError
(
err
)
}
}
