mod
bernoulli
;
mod
distribution
;
mod
float
;
mod
integer
;
mod
other
;
mod
slice
;
mod
utils
;
#
[
cfg
(
feature
=
"
alloc
"
)
]
mod
weighted_index
;
#
[
doc
(
hidden
)
]
pub
mod
hidden_export
{
pub
use
super
:
:
float
:
:
IntoFloat
;
}
pub
mod
uniform
;
#
[
deprecated
(
since
=
"
0
.
8
.
0
"
note
=
"
use
rand
:
:
distributions
:
:
{
WeightedIndex
WeightedError
}
instead
"
)
]
#
[
cfg
(
feature
=
"
alloc
"
)
]
#
[
cfg_attr
(
doc_cfg
doc
(
cfg
(
feature
=
"
alloc
"
)
)
)
]
pub
mod
weighted
;
pub
use
self
:
:
bernoulli
:
:
{
Bernoulli
BernoulliError
}
;
pub
use
self
:
:
distribution
:
:
{
Distribution
DistIter
DistMap
}
;
#
[
cfg
(
feature
=
"
alloc
"
)
]
pub
use
self
:
:
distribution
:
:
DistString
;
pub
use
self
:
:
float
:
:
{
Open01
OpenClosed01
}
;
pub
use
self
:
:
other
:
:
Alphanumeric
;
pub
use
self
:
:
slice
:
:
Slice
;
#
[
doc
(
inline
)
]
pub
use
self
:
:
uniform
:
:
Uniform
;
#
[
cfg
(
feature
=
"
alloc
"
)
]
pub
use
self
:
:
weighted_index
:
:
{
WeightedError
WeightedIndex
}
;
#
[
allow
(
unused
)
]
use
crate
:
:
Rng
;
#
[
derive
(
Clone
Copy
Debug
)
]
#
[
cfg_attr
(
feature
=
"
serde1
"
derive
(
serde
:
:
Serialize
serde
:
:
Deserialize
)
)
]
pub
struct
Standard
;
