#
!
[
forbid
(
unsafe_code
)
]
#
!
[
deny
(
missing_docs
)
]
#
!
[
doc
(
html_logo_url
=
"
https
:
/
/
unicode
-
rs
.
github
.
io
/
unicode
-
rs_sm
.
png
"
html_favicon_url
=
"
https
:
/
/
unicode
-
rs
.
github
.
io
/
unicode
-
rs_sm
.
png
"
)
]
#
!
[
no_std
]
pub
use
tables
:
:
UNICODE_VERSION
;
mod
tables
;
mod
private
{
pub
trait
Sealed
{
}
#
[
cfg
(
not
(
feature
=
"
cjk
"
)
)
]
impl
Sealed
for
char
{
}
#
[
cfg
(
not
(
feature
=
"
cjk
"
)
)
]
impl
Sealed
for
str
{
}
#
[
cfg
(
feature
=
"
cjk
"
)
]
impl
<
T
:
?
Sized
>
Sealed
for
T
{
}
}
pub
trait
UnicodeWidthChar
:
private
:
:
Sealed
{
fn
width
(
self
)
-
>
Option
<
usize
>
;
#
[
cfg
(
feature
=
"
cjk
"
)
]
fn
width_cjk
(
self
)
-
>
Option
<
usize
>
;
}
impl
UnicodeWidthChar
for
char
{
#
[
inline
]
fn
width
(
self
)
-
>
Option
<
usize
>
{
tables
:
:
single_char_width
(
self
)
}
#
[
cfg
(
feature
=
"
cjk
"
)
]
#
[
inline
]
fn
width_cjk
(
self
)
-
>
Option
<
usize
>
{
tables
:
:
single_char_width_cjk
(
self
)
}
}
pub
trait
UnicodeWidthStr
:
private
:
:
Sealed
{
fn
width
(
&
self
)
-
>
usize
;
#
[
cfg
(
feature
=
"
cjk
"
)
]
fn
width_cjk
(
&
self
)
-
>
usize
;
}
impl
UnicodeWidthStr
for
str
{
#
[
inline
]
fn
width
(
&
self
)
-
>
usize
{
tables
:
:
str_width
(
self
)
}
#
[
cfg
(
feature
=
"
cjk
"
)
]
#
[
inline
]
fn
width_cjk
(
&
self
)
-
>
usize
{
tables
:
:
str_width_cjk
(
self
)
}
}
