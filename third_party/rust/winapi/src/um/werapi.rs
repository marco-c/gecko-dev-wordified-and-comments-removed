use
shared
:
:
minwindef
:
:
{
DWORD
PDWORD
}
;
use
um
:
:
winnt
:
:
{
HANDLE
HRESULT
PCWSTR
PVOID
}
;
ENUM
!
{
enum
WER_REGISTER_FILE_TYPE
{
WerRegFileTypeUserDocument
=
1
WerRegFileTypeOther
=
2
WerRegFileTypeMax
}
}
extern
"
system
"
{
pub
fn
WerRegisterFile
(
pwzFile
:
PCWSTR
regFileType
:
WER_REGISTER_FILE_TYPE
dwFlags
:
DWORD
)
-
>
HRESULT
;
pub
fn
WerUnregisterFile
(
pwzFilePath
:
PCWSTR
)
-
>
HRESULT
;
pub
fn
WerRegisterMemoryBlock
(
pvAddress
:
PVOID
dwSize
:
DWORD
)
-
>
HRESULT
;
pub
fn
WerUnregisterMemoryBlock
(
pvAddress
:
PVOID
)
-
>
HRESULT
;
pub
fn
WerSetFlags
(
dwFlags
:
DWORD
)
-
>
HRESULT
;
pub
fn
WerGetFlags
(
hProcess
:
HANDLE
pdwFlags
:
PDWORD
)
-
>
HRESULT
;
pub
fn
WerRegisterRuntimeExceptionModule
(
pwszOutOfProcessCallbackDll
:
PCWSTR
pContext
:
PVOID
)
-
>
HRESULT
;
pub
fn
WerUnregisterRuntimeExceptionModule
(
pwszOutOfProcessCallbackDll
:
PCWSTR
pContext
:
PVOID
)
-
>
HRESULT
;
}
