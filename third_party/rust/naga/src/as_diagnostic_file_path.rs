use
alloc
:
:
borrow
:
:
Cow
;
#
[
cfg
(
feature
=
"
std
"
)
]
use
std
:
:
path
:
:
Path
;
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
use
alloc
:
:
string
:
:
String
;
mod
sealed
{
pub
trait
Sealed
{
}
}
pub
trait
AsDiagnosticFilePath
:
sealed
:
:
Sealed
{
fn
to_string_lossy
(
&
self
)
-
>
Cow
<
'
_
str
>
;
}
#
[
cfg
(
feature
=
"
std
"
)
]
impl
<
T
:
AsRef
<
Path
>
+
?
Sized
>
AsDiagnosticFilePath
for
T
{
fn
to_string_lossy
(
&
self
)
-
>
Cow
<
'
_
str
>
{
self
.
as_ref
(
)
.
to_string_lossy
(
)
}
}
#
[
cfg
(
feature
=
"
std
"
)
]
impl
<
T
:
AsRef
<
Path
>
+
?
Sized
>
sealed
:
:
Sealed
for
T
{
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
impl
AsDiagnosticFilePath
for
String
{
fn
to_string_lossy
(
&
self
)
-
>
Cow
<
'
_
str
>
{
Cow
:
:
Borrowed
(
self
.
as_str
(
)
)
}
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
impl
sealed
:
:
Sealed
for
String
{
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
impl
AsDiagnosticFilePath
for
str
{
fn
to_string_lossy
(
&
self
)
-
>
Cow
<
'
_
str
>
{
Cow
:
:
Borrowed
(
self
)
}
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
impl
sealed
:
:
Sealed
for
str
{
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
impl
AsDiagnosticFilePath
for
Cow
<
'
_
str
>
{
fn
to_string_lossy
(
&
self
)
-
>
Cow
<
'
_
str
>
{
use
core
:
:
borrow
:
:
Borrow
;
Cow
:
:
Borrowed
(
self
.
borrow
(
)
)
}
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
impl
sealed
:
:
Sealed
for
Cow
<
'
_
str
>
{
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
impl
<
T
:
AsDiagnosticFilePath
+
?
Sized
>
AsDiagnosticFilePath
for
&
T
{
fn
to_string_lossy
(
&
self
)
-
>
Cow
<
'
_
str
>
{
(
*
self
)
.
to_string_lossy
(
)
}
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
impl
<
T
:
AsDiagnosticFilePath
+
?
Sized
>
sealed
:
:
Sealed
for
&
T
{
}
