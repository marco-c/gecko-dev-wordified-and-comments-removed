impl
crate
:
:
Binding
{
pub
fn
apply_default_interpolation
(
&
mut
self
ty
:
&
crate
:
:
TypeInner
)
{
if
let
crate
:
:
Binding
:
:
Location
{
location
:
_
interpolation
:
ref
mut
interpolation
None
ref
mut
sampling
}
=
*
self
{
match
ty
.
scalar_kind
(
)
{
Some
(
crate
:
:
ScalarKind
:
:
Float
)
=
>
{
*
interpolation
=
Some
(
crate
:
:
Interpolation
:
:
Perspective
)
;
*
sampling
=
Some
(
crate
:
:
Sampling
:
:
Center
)
;
}
Some
(
crate
:
:
ScalarKind
:
:
Sint
)
|
Some
(
crate
:
:
ScalarKind
:
:
Uint
)
=
>
{
*
interpolation
=
Some
(
crate
:
:
Interpolation
:
:
Flat
)
;
*
sampling
=
None
;
}
Some
(
_
)
|
None
=
>
{
}
}
}
}
}
