use
crate
:
:
racy_lock
:
:
RacyLock
;
use
hashbrown
:
:
HashSet
;
pub
const
RESERVED
:
&
[
&
str
]
=
&
[
"
array
"
"
atomic
"
"
bool
"
"
f32
"
"
f16
"
"
i32
"
"
i64
"
"
mat2x2
"
"
mat2x3
"
"
mat2x4
"
"
mat3x2
"
"
mat3x3
"
"
mat3x4
"
"
mat4x2
"
"
mat4x3
"
"
mat4x4
"
"
ptr
"
"
sampler
"
"
sampler_comparison
"
"
texture_1d
"
"
texture_2d
"
"
texture_2d_array
"
"
texture_3d
"
"
texture_cube
"
"
texture_cube_array
"
"
texture_multisampled_2d
"
"
texture_storage_1d
"
"
texture_storage_2d
"
"
texture_storage_2d_array
"
"
texture_storage_3d
"
"
texture_depth_2d
"
"
texture_depth_2d_array
"
"
texture_depth_cube
"
"
texture_depth_cube_array
"
"
texture_depth_multisampled_2d
"
"
u32
"
"
u64
"
"
vec2
"
"
vec3
"
"
vec4
"
"
alias
"
"
bitcast
"
"
break
"
"
case
"
"
const
"
"
continue
"
"
continuing
"
"
default
"
"
discard
"
"
else
"
"
enable
"
"
false
"
"
fn
"
"
for
"
"
if
"
"
let
"
"
loop
"
"
override
"
"
return
"
"
static_assert
"
"
struct
"
"
switch
"
"
true
"
"
type
"
"
var
"
"
while
"
"
CompileShader
"
"
ComputeShader
"
"
DomainShader
"
"
GeometryShader
"
"
Hullshader
"
"
NULL
"
"
Self
"
"
abstract
"
"
active
"
"
alignas
"
"
alignof
"
"
as
"
"
asm
"
"
asm_fragment
"
"
async
"
"
attribute
"
"
auto
"
"
await
"
"
become
"
"
binding_array
"
"
cast
"
"
catch
"
"
class
"
"
co_await
"
"
co_return
"
"
co_yield
"
"
coherent
"
"
column_major
"
"
common
"
"
compile
"
"
compile_fragment
"
"
concept
"
"
const_cast
"
"
consteval
"
"
constexpr
"
"
constinit
"
"
crate
"
"
debugger
"
"
decltype
"
"
delete
"
"
demote
"
"
demote_to_helper
"
"
do
"
"
dynamic_cast
"
"
enum
"
"
explicit
"
"
export
"
"
extends
"
"
extern
"
"
external
"
"
fallthrough
"
"
filter
"
"
final
"
"
finally
"
"
friend
"
"
from
"
"
fxgroup
"
"
get
"
"
goto
"
"
groupshared
"
"
handle
"
"
highp
"
"
impl
"
"
implements
"
"
import
"
"
inline
"
"
inout
"
"
instanceof
"
"
interface
"
"
layout
"
"
lowp
"
"
macro
"
"
macro_rules
"
"
match
"
"
mediump
"
"
meta
"
"
mod
"
"
module
"
"
move
"
"
mut
"
"
mutable
"
"
namespace
"
"
new
"
"
nil
"
"
noexcept
"
"
noinline
"
"
nointerpolation
"
"
noperspective
"
"
null
"
"
nullptr
"
"
of
"
"
operator
"
"
package
"
"
packoffset
"
"
partition
"
"
pass
"
"
patch
"
"
pixelfragment
"
"
precise
"
"
precision
"
"
premerge
"
"
priv
"
"
protected
"
"
pub
"
"
public
"
"
readonly
"
"
ref
"
"
regardless
"
"
register
"
"
reinterpret_cast
"
"
requires
"
"
resource
"
"
restrict
"
"
self
"
"
set
"
"
shared
"
"
signed
"
"
sizeof
"
"
smooth
"
"
snorm
"
"
static
"
"
static_assert
"
"
static_cast
"
"
std
"
"
subroutine
"
"
super
"
"
target
"
"
template
"
"
this
"
"
thread_local
"
"
throw
"
"
trait
"
"
try
"
"
typedef
"
"
typeid
"
"
typename
"
"
typeof
"
"
union
"
"
unless
"
"
unorm
"
"
unsafe
"
"
unsized
"
"
use
"
"
using
"
"
varying
"
"
virtual
"
"
volatile
"
"
wgsl
"
"
where
"
"
with
"
"
writeonly
"
"
yield
"
]
;
pub
static
RESERVED_SET
:
RacyLock
<
HashSet
<
&
'
static
str
>
>
=
RacyLock
:
:
new
(
|
|
{
let
mut
set
=
HashSet
:
:
default
(
)
;
set
.
reserve
(
RESERVED
.
len
(
)
)
;
for
&
word
in
RESERVED
{
set
.
insert
(
word
)
;
}
set
}
)
;
