#
[
doc
(
hidden
)
]
#
[
cfg
(
not
(
solarish
)
)
]
pub
type
ioctl_num_type
=
:
:
libc
:
:
c_ulong
;
#
[
doc
(
hidden
)
]
#
[
cfg
(
solarish
)
]
pub
type
ioctl_num_type
=
:
:
libc
:
:
c_int
;
#
[
doc
(
hidden
)
]
pub
type
ioctl_param_type
=
:
:
libc
:
:
c_int
;
mod
consts
{
use
crate
:
:
sys
:
:
ioctl
:
:
ioctl_num_type
;
#
[
doc
(
hidden
)
]
pub
const
VOID
:
ioctl_num_type
=
0x2000_0000
;
#
[
doc
(
hidden
)
]
pub
const
OUT
:
ioctl_num_type
=
0x4000_0000
;
#
[
doc
(
hidden
)
]
#
[
allow
(
overflowing_literals
)
]
pub
const
IN
:
ioctl_num_type
=
0x8000_0000
;
#
[
doc
(
hidden
)
]
pub
const
INOUT
:
ioctl_num_type
=
IN
|
OUT
;
#
[
doc
(
hidden
)
]
pub
const
IOCPARM_MASK
:
ioctl_num_type
=
0x1fff
;
}
pub
use
self
:
:
consts
:
:
*
;
#
[
macro_export
]
#
[
doc
(
hidden
)
]
macro_rules
!
ioc
{
(
inout
:
expr
group
:
expr
num
:
expr
len
:
expr
)
=
>
{
inout
|
(
(
len
as
crate
:
:
sys
:
:
ioctl
:
:
ioctl_num_type
&
crate
:
:
sys
:
:
ioctl
:
:
IOCPARM_MASK
)
<
<
16
)
|
(
(
group
as
crate
:
:
sys
:
:
ioctl
:
:
ioctl_num_type
)
<
<
8
)
|
(
num
as
crate
:
:
sys
:
:
ioctl
:
:
ioctl_num_type
)
}
;
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
request_code_none
{
(
g
:
expr
n
:
expr
)
=
>
{
ioc
!
(
crate
:
:
sys
:
:
ioctl
:
:
VOID
g
n
0
)
}
;
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
request_code_write_int
{
(
g
:
expr
n
:
expr
)
=
>
{
ioc
!
(
crate
:
:
sys
:
:
ioctl
:
:
VOID
g
n
:
:
std
:
:
mem
:
:
size_of
:
:
<
crate
:
:
libc
:
:
c_int
>
(
)
)
}
;
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
request_code_read
{
(
g
:
expr
n
:
expr
len
:
expr
)
=
>
{
ioc
!
(
crate
:
:
sys
:
:
ioctl
:
:
OUT
g
n
len
)
}
;
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
request_code_write
{
(
g
:
expr
n
:
expr
len
:
expr
)
=
>
{
ioc
!
(
crate
:
:
sys
:
:
ioctl
:
:
IN
g
n
len
)
}
;
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
request_code_readwrite
{
(
g
:
expr
n
:
expr
len
:
expr
)
=
>
{
ioc
!
(
crate
:
:
sys
:
:
ioctl
:
:
INOUT
g
n
len
)
}
;
}
