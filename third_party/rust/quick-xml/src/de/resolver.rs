use
std
:
:
convert
:
:
Infallible
;
use
std
:
:
error
:
:
Error
;
use
crate
:
:
escape
:
:
resolve_predefined_entity
;
use
crate
:
:
events
:
:
BytesText
;
pub
trait
EntityResolver
{
type
Error
:
Error
;
fn
capture
(
&
mut
self
doctype
:
BytesText
)
-
>
Result
<
(
)
Self
:
:
Error
>
;
fn
resolve
(
&
self
entity
:
&
str
)
-
>
Option
<
&
str
>
;
}
#
[
derive
(
Default
Copy
Clone
)
]
pub
struct
PredefinedEntityResolver
;
impl
EntityResolver
for
PredefinedEntityResolver
{
type
Error
=
Infallible
;
#
[
inline
]
fn
capture
(
&
mut
self
_doctype
:
BytesText
)
-
>
Result
<
(
)
Self
:
:
Error
>
{
Ok
(
(
)
)
}
#
[
inline
]
fn
resolve
(
&
self
entity
:
&
str
)
-
>
Option
<
&
str
>
{
resolve_predefined_entity
(
entity
)
}
}
