#
!
[
cfg_attr
(
loom
allow
(
dead_code
unreachable_pub
)
)
]
cfg_io_blocking
!
{
pub
(
crate
)
mod
blocking
;
}
mod
async_buf_read
;
pub
use
self
:
:
async_buf_read
:
:
AsyncBufRead
;
mod
async_read
;
pub
use
self
:
:
async_read
:
:
AsyncRead
;
mod
async_seek
;
pub
use
self
:
:
async_seek
:
:
AsyncSeek
;
mod
async_write
;
pub
use
self
:
:
async_write
:
:
AsyncWrite
;
cfg_io_driver
!
{
pub
(
crate
)
mod
driver
;
mod
poll_evented
;
pub
use
poll_evented
:
:
PollEvented
;
mod
registration
;
pub
use
registration
:
:
Registration
;
}
cfg_io_std
!
{
mod
stderr
;
pub
use
stderr
:
:
{
stderr
Stderr
}
;
mod
stdin
;
pub
use
stdin
:
:
{
stdin
Stdin
}
;
mod
stdout
;
pub
use
stdout
:
:
{
stdout
Stdout
}
;
}
cfg_io_util
!
{
mod
split
;
pub
use
split
:
:
{
split
ReadHalf
WriteHalf
}
;
pub
(
crate
)
mod
seek
;
pub
use
self
:
:
seek
:
:
Seek
;
pub
(
crate
)
mod
util
;
pub
use
util
:
:
{
copy
empty
repeat
sink
AsyncBufReadExt
AsyncReadExt
AsyncSeekExt
AsyncWriteExt
BufReader
BufStream
BufWriter
Copy
Empty
Lines
Repeat
Sink
Split
Take
}
;
cfg_stream
!
{
pub
use
util
:
:
{
stream_reader
StreamReader
}
;
}
/
/
Re
-
export
io
:
:
Error
so
that
users
don
'
t
have
to
deal
with
conflicts
when
/
/
use
ing
tokio
:
:
io
and
std
:
:
io
.
pub
use
std
:
:
io
:
:
{
Error
ErrorKind
Result
}
;
}
cfg_not_io_util
!
{
cfg_process
!
{
pub
(
crate
)
mod
util
;
}
}
cfg_io_blocking
!
{
/
/
/
Types
in
this
module
can
be
mocked
out
in
tests
.
mod
sys
{
/
/
TODO
:
don
'
t
rename
pub
(
crate
)
use
crate
:
:
runtime
:
:
spawn_blocking
as
run
;
pub
(
crate
)
use
crate
:
:
task
:
:
JoinHandle
as
Blocking
;
}
}
