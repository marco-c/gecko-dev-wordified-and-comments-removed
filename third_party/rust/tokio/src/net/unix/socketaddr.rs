use
std
:
:
fmt
;
use
std
:
:
path
:
:
Path
;
pub
struct
SocketAddr
(
pub
(
super
)
std
:
:
os
:
:
unix
:
:
net
:
:
SocketAddr
)
;
impl
SocketAddr
{
pub
fn
is_unnamed
(
&
self
)
-
>
bool
{
self
.
0
.
is_unnamed
(
)
}
pub
fn
as_pathname
(
&
self
)
-
>
Option
<
&
Path
>
{
self
.
0
.
as_pathname
(
)
}
}
impl
fmt
:
:
Debug
for
SocketAddr
{
fn
fmt
(
&
self
fmt
:
&
mut
fmt
:
:
Formatter
<
'
_
>
)
-
>
fmt
:
:
Result
{
self
.
0
.
fmt
(
fmt
)
}
}
impl
From
<
std
:
:
os
:
:
unix
:
:
net
:
:
SocketAddr
>
for
SocketAddr
{
fn
from
(
value
:
std
:
:
os
:
:
unix
:
:
net
:
:
SocketAddr
)
-
>
Self
{
SocketAddr
(
value
)
}
}
impl
From
<
SocketAddr
>
for
std
:
:
os
:
:
unix
:
:
net
:
:
SocketAddr
{
fn
from
(
value
:
SocketAddr
)
-
>
Self
{
value
.
0
}
}
