cfg_rt
!
{
pub
(
crate
)
mod
either
;
}
#
[
cfg
(
any
(
feature
=
"
rt
"
feature
=
"
sync
"
)
)
]
pub
(
crate
)
mod
thread
;
use
std
:
:
fmt
:
:
Debug
;
use
std
:
:
sync
:
:
Arc
;
use
std
:
:
time
:
:
Duration
;
pub
(
crate
)
trait
Park
{
type
Unpark
:
Unpark
;
type
Error
:
Debug
;
fn
unpark
(
&
self
)
-
>
Self
:
:
Unpark
;
fn
park
(
&
mut
self
)
-
>
Result
<
(
)
Self
:
:
Error
>
;
fn
park_timeout
(
&
mut
self
duration
:
Duration
)
-
>
Result
<
(
)
Self
:
:
Error
>
;
fn
shutdown
(
&
mut
self
)
;
}
pub
(
crate
)
trait
Unpark
:
Sync
+
Send
+
'
static
{
fn
unpark
(
&
self
)
;
}
impl
Unpark
for
Box
<
dyn
Unpark
>
{
fn
unpark
(
&
self
)
{
(
*
*
self
)
.
unpark
(
)
}
}
impl
Unpark
for
Arc
<
dyn
Unpark
>
{
fn
unpark
(
&
self
)
{
(
*
*
self
)
.
unpark
(
)
}
}
