use
crate
:
:
fs
:
:
asyncify
;
use
std
:
:
io
;
use
std
:
:
path
:
:
Path
;
#
[
derive
(
Debug
Default
)
]
pub
struct
DirBuilder
{
recursive
:
bool
#
[
cfg
(
unix
)
]
pub
(
super
)
mode
:
Option
<
u32
>
}
impl
DirBuilder
{
pub
fn
new
(
)
-
>
Self
{
Default
:
:
default
(
)
}
pub
fn
recursive
(
&
mut
self
recursive
:
bool
)
-
>
&
mut
Self
{
self
.
recursive
=
recursive
;
self
}
pub
async
fn
create
<
P
:
AsRef
<
Path
>
>
(
&
self
path
:
P
)
-
>
io
:
:
Result
<
(
)
>
{
let
path
=
path
.
as_ref
(
)
.
to_owned
(
)
;
let
mut
builder
=
std
:
:
fs
:
:
DirBuilder
:
:
new
(
)
;
builder
.
recursive
(
self
.
recursive
)
;
#
[
cfg
(
unix
)
]
{
if
let
Some
(
mode
)
=
self
.
mode
{
std
:
:
os
:
:
unix
:
:
fs
:
:
DirBuilderExt
:
:
mode
(
&
mut
builder
mode
)
;
}
}
asyncify
(
move
|
|
builder
.
create
(
path
)
)
.
await
}
}
