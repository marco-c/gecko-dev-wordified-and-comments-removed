use
crate
:
:
fs
:
:
asyncify
;
use
std
:
:
io
;
use
std
:
:
path
:
:
Path
;
#
[
derive
(
Debug
Default
)
]
pub
struct
DirBuilder
{
recursive
:
bool
#
[
cfg
(
unix
)
]
pub
(
super
)
mode
:
Option
<
u32
>
}
impl
DirBuilder
{
pub
fn
new
(
)
-
>
Self
{
DirBuilder
:
:
default
(
)
}
pub
fn
recursive
(
&
mut
self
recursive
:
bool
)
-
>
&
mut
Self
{
self
.
recursive
=
recursive
;
self
}
pub
async
fn
create
(
&
self
path
:
impl
AsRef
<
Path
>
)
-
>
io
:
:
Result
<
(
)
>
{
let
path
=
path
.
as_ref
(
)
.
to_owned
(
)
;
let
mut
builder
=
std
:
:
fs
:
:
DirBuilder
:
:
new
(
)
;
builder
.
recursive
(
self
.
recursive
)
;
#
[
cfg
(
unix
)
]
{
if
let
Some
(
mode
)
=
self
.
mode
{
std
:
:
os
:
:
unix
:
:
fs
:
:
DirBuilderExt
:
:
mode
(
&
mut
builder
mode
)
;
}
}
asyncify
(
move
|
|
builder
.
create
(
path
)
)
.
await
}
}
feature
!
{
#
!
[
unix
]
impl
DirBuilder
{
/
/
/
Sets
the
mode
to
create
new
directories
with
.
/
/
/
/
/
/
This
option
defaults
to
0o777
.
/
/
/
/
/
/
#
Examples
/
/
/
/
/
/
/
/
/
no_run
/
/
/
use
tokio
:
:
fs
:
:
DirBuilder
;
/
/
/
/
/
/
let
mut
builder
=
DirBuilder
:
:
new
(
)
;
/
/
/
builder
.
mode
(
0o775
)
;
/
/
/
pub
fn
mode
(
&
mut
self
mode
:
u32
)
-
>
&
mut
Self
{
self
.
mode
=
Some
(
mode
)
;
self
}
}
}
