#
!
[
doc
(
html_root_url
=
"
https
:
/
/
docs
.
rs
/
tokio
/
0
.
2
.
18
"
)
]
#
!
[
allow
(
clippy
:
:
cognitive_complexity
clippy
:
:
large_enum_variant
clippy
:
:
needless_doctest_main
)
]
#
!
[
warn
(
missing_debug_implementations
missing_docs
rust_2018_idioms
unreachable_pub
)
]
#
!
[
deny
(
intra_doc_link_resolution_failure
)
]
#
!
[
doc
(
test
(
no_crate_inject
attr
(
deny
(
warnings
rust_2018_idioms
)
allow
(
dead_code
unused_variables
)
)
)
)
]
#
!
[
cfg_attr
(
docsrs
feature
(
doc_cfg
)
)
]
#
[
macro_use
]
#
[
doc
(
hidden
)
]
pub
mod
macros
;
cfg_fs
!
{
pub
mod
fs
;
}
#
[
doc
(
hidden
)
]
pub
mod
future
;
pub
mod
io
;
pub
mod
net
;
mod
loom
;
mod
park
;
pub
mod
prelude
;
cfg_process
!
{
pub
mod
process
;
}
pub
mod
runtime
;
pub
(
crate
)
mod
coop
;
cfg_signal
!
{
pub
mod
signal
;
}
cfg_stream
!
{
pub
mod
stream
;
}
cfg_sync
!
{
pub
mod
sync
;
}
cfg_not_sync
!
{
mod
sync
;
}
cfg_rt_core
!
{
pub
mod
task
;
pub
use
task
:
:
spawn
;
}
cfg_time
!
{
pub
mod
time
;
}
mod
util
;
cfg_macros
!
{
/
/
/
Implementation
detail
of
the
select
!
macro
.
This
macro
is
*
*
not
*
*
/
/
/
intended
to
be
used
as
part
of
the
public
API
and
is
permitted
to
/
/
/
change
.
#
[
doc
(
hidden
)
]
pub
use
tokio_macros
:
:
select_priv_declare_output_enum
;
doc_rt_core
!
{
cfg_rt_threaded
!
{
/
/
This
is
the
docs
.
rs
case
(
with
all
features
)
so
make
sure
macros
/
/
is
included
in
doc
(
cfg
)
.
#
[
cfg
(
not
(
test
)
)
]
/
/
Work
around
for
rust
-
lang
/
rust
#
62127
#
[
cfg_attr
(
docsrs
doc
(
cfg
(
feature
=
"
macros
"
)
)
)
]
pub
use
tokio_macros
:
:
main_threaded
as
main
;
#
[
cfg_attr
(
docsrs
doc
(
cfg
(
feature
=
"
macros
"
)
)
)
]
pub
use
tokio_macros
:
:
test_threaded
as
test
;
}
cfg_not_rt_threaded
!
{
#
[
cfg
(
not
(
test
)
)
]
/
/
Work
around
for
rust
-
lang
/
rust
#
62127
pub
use
tokio_macros
:
:
main_basic
as
main
;
pub
use
tokio_macros
:
:
test_basic
as
test
;
}
}
/
/
Maintains
old
behavior
cfg_not_rt_core
!
{
#
[
cfg
(
not
(
test
)
)
]
pub
use
tokio_macros
:
:
main
;
pub
use
tokio_macros
:
:
test
;
}
}
#
[
cfg
(
feature
=
"
io
-
util
"
)
]
#
[
cfg
(
test
)
]
fn
is_unpin
<
T
:
Unpin
>
(
)
{
}
