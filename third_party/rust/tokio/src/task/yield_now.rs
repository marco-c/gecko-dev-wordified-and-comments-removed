use
std
:
:
future
:
:
Future
;
use
std
:
:
pin
:
:
Pin
;
use
std
:
:
task
:
:
{
Context
Poll
}
;
#
[
cfg_attr
(
docsrs
doc
(
cfg
(
feature
=
"
rt
"
)
)
)
]
pub
async
fn
yield_now
(
)
{
struct
YieldNow
{
yielded
:
bool
}
impl
Future
for
YieldNow
{
type
Output
=
(
)
;
fn
poll
(
mut
self
:
Pin
<
&
mut
Self
>
cx
:
&
mut
Context
<
'
_
>
)
-
>
Poll
<
(
)
>
{
if
self
.
yielded
{
return
Poll
:
:
Ready
(
(
)
)
;
}
self
.
yielded
=
true
;
cx
.
waker
(
)
.
wake_by_ref
(
)
;
Poll
:
:
Pending
}
}
YieldNow
{
yielded
:
false
}
.
await
}
