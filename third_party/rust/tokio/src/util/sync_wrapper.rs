use
std
:
:
any
:
:
Any
;
pub
(
crate
)
struct
SyncWrapper
<
T
>
{
value
:
T
}
unsafe
impl
<
T
:
Send
>
Send
for
SyncWrapper
<
T
>
{
}
unsafe
impl
<
T
>
Sync
for
SyncWrapper
<
T
>
{
}
impl
<
T
>
SyncWrapper
<
T
>
{
pub
(
crate
)
fn
new
(
value
:
T
)
-
>
Self
{
Self
{
value
}
}
pub
(
crate
)
fn
into_inner
(
self
)
-
>
T
{
self
.
value
}
}
impl
SyncWrapper
<
Box
<
dyn
Any
+
Send
>
>
{
pub
(
crate
)
fn
downcast_ref_sync
<
T
:
Any
+
Sync
>
(
&
self
)
-
>
Option
<
&
T
>
{
self
.
value
.
downcast_ref
(
)
}
}
