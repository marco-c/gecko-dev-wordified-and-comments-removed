use
std
:
:
iter
:
:
FromIterator
;
use
http
:
:
Method
;
use
util
:
:
FlatCsv
;
#
[
derive
(
Clone
Debug
PartialEq
Header
)
]
pub
struct
Allow
(
FlatCsv
)
;
impl
Allow
{
pub
fn
iter
<
'
a
>
(
&
'
a
self
)
-
>
impl
Iterator
<
Item
=
Method
>
+
'
a
{
self
.
0
.
iter
(
)
.
filter_map
(
|
s
|
{
s
.
parse
(
)
.
ok
(
)
}
)
}
}
impl
FromIterator
<
Method
>
for
Allow
{
fn
from_iter
<
I
>
(
iter
:
I
)
-
>
Self
where
I
:
IntoIterator
<
Item
=
Method
>
{
let
flat
=
iter
.
into_iter
(
)
.
map
(
|
method
|
{
method
.
as_str
(
)
.
parse
:
:
<
:
:
HeaderValue
>
(
)
.
expect
(
"
Method
is
a
valid
HeaderValue
"
)
}
)
.
collect
(
)
;
Allow
(
flat
)
}
}
