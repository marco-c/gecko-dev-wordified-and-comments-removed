use
std
:
:
time
:
:
Duration
;
use
util
:
:
Seconds
;
#
[
derive
(
Debug
Clone
Copy
PartialEq
Eq
PartialOrd
Ord
Hash
)
]
pub
struct
Age
(
Seconds
)
;
derive_header
!
{
Age
(
_
)
name
:
AGE
}
impl
Age
{
pub
fn
from_secs
(
secs
:
u64
)
-
>
Self
{
Self
(
Seconds
:
:
from_secs
(
secs
)
)
}
pub
fn
as_secs
(
&
self
)
-
>
u64
{
self
.
0
.
as_u64
(
)
}
}
impl
From
<
Duration
>
for
Age
{
fn
from
(
dur
:
Duration
)
-
>
Self
{
Age
(
Seconds
:
:
from
(
dur
)
)
}
}
impl
From
<
Age
>
for
Duration
{
fn
from
(
age
:
Age
)
-
>
Self
{
age
.
0
.
into
(
)
}
}
