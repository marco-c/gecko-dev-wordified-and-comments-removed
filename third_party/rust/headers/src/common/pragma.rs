use
:
:
HeaderValue
;
#
[
derive
(
Clone
Debug
PartialEq
Header
)
]
pub
struct
Pragma
(
HeaderValue
)
;
impl
Pragma
{
pub
fn
no_cache
(
)
-
>
Pragma
{
Pragma
(
HeaderValue
:
:
from_static
(
"
no
-
cache
"
)
)
}
pub
fn
is_no_cache
(
&
self
)
-
>
bool
{
self
.
0
=
=
"
no
-
cache
"
}
}
#
[
cfg
(
test
)
]
mod
tests
{
use
super
:
:
Pragma
;
use
super
:
:
super
:
:
test_decode
;
#
[
test
]
fn
no_cache_is_no_cache
(
)
{
assert
!
(
Pragma
:
:
no_cache
(
)
.
is_no_cache
(
)
)
;
}
#
[
test
]
fn
etc_is_not_no_cache
(
)
{
let
ext
=
test_decode
:
:
<
Pragma
>
(
&
[
"
dexter
"
]
)
.
unwrap
(
)
;
assert
!
(
!
ext
.
is_no_cache
(
)
)
;
}
}
