use
util
:
:
FlatCsv
;
use
HeaderValue
;
#
[
derive
(
Debug
Clone
PartialEq
)
]
pub
struct
Vary
(
FlatCsv
)
;
derive_header
!
{
Vary
(
_
)
name
:
VARY
}
impl
Vary
{
pub
fn
any
(
)
-
>
Vary
{
Vary
(
HeaderValue
:
:
from_static
(
"
*
"
)
.
into
(
)
)
}
pub
fn
is_any
(
&
self
)
-
>
bool
{
self
.
0
.
iter
(
)
.
any
(
|
val
|
val
=
=
"
*
"
)
}
pub
fn
iter_strs
(
&
self
)
-
>
impl
Iterator
<
Item
=
&
str
>
{
self
.
0
.
iter
(
)
}
}
#
[
cfg
(
test
)
]
mod
tests
{
use
super
:
:
*
;
#
[
test
]
fn
any_is_any
(
)
{
assert
!
(
Vary
:
:
any
(
)
.
is_any
(
)
)
;
}
}
