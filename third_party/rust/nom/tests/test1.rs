#
!
[
cfg
(
feature
=
"
stream
"
)
]
#
[
macro_use
]
extern
crate
nom
;
use
nom
:
:
{
not_line_ending
IResult
}
;
use
std
:
:
fmt
:
:
Debug
;
pub
fn
print
<
T
:
Debug
>
(
input
:
T
)
-
>
IResult
<
T
(
)
>
{
println
!
(
"
{
:
?
}
"
input
)
;
Ok
(
(
input
(
)
)
)
}
#
[
test
]
fn
is_not
(
)
{
named
!
(
foo
<
&
[
u8
]
&
[
u8
]
>
is_not
!
(
&
b
"
\
r
\
n
"
[
.
.
]
)
)
;
let
a
=
&
b
"
ab12cd
\
nefgh
"
[
.
.
]
;
assert_eq
!
(
foo
(
a
)
Ok
(
(
&
b
"
\
nefgh
"
[
.
.
]
&
b
"
ab12cd
"
[
.
.
]
)
)
)
;
}
#
[
test
]
fn
exported_public_method_defined_by_macro
(
)
{
let
a
=
&
b
"
ab12cd
\
nefgh
"
[
.
.
]
;
assert_eq
!
(
not_line_ending
(
a
)
Ok
(
(
&
b
"
\
nefgh
"
[
.
.
]
&
b
"
ab12cd
"
[
.
.
]
)
)
)
;
}
