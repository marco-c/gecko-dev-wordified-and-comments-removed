#
!
[
deny
(
missing_debug_implementations
)
]
#
!
[
deny
(
missing_docs
)
]
#
!
[
deny
(
unreachable_pub
)
]
#
!
[
warn
(
rust_2018_idioms
)
]
#
[
macro_use
]
mod
delegate
;
#
[
macro_use
]
mod
private
;
mod
split_producer
;
pub
mod
array
;
pub
mod
collections
;
pub
mod
iter
;
pub
mod
option
;
pub
mod
prelude
;
pub
mod
range
;
pub
mod
range_inclusive
;
pub
mod
result
;
pub
mod
slice
;
pub
mod
str
;
pub
mod
string
;
pub
mod
vec
;
mod
math
;
mod
par_either
;
mod
compile_fail
;
pub
use
rayon_core
:
:
FnContext
;
pub
use
rayon_core
:
:
ThreadBuilder
;
pub
use
rayon_core
:
:
ThreadPool
;
pub
use
rayon_core
:
:
ThreadPoolBuildError
;
pub
use
rayon_core
:
:
ThreadPoolBuilder
;
pub
use
rayon_core
:
:
{
broadcast
spawn_broadcast
BroadcastContext
}
;
pub
use
rayon_core
:
:
{
current_num_threads
current_thread_index
max_num_threads
}
;
pub
use
rayon_core
:
:
{
in_place_scope
scope
Scope
}
;
pub
use
rayon_core
:
:
{
in_place_scope_fifo
scope_fifo
ScopeFifo
}
;
pub
use
rayon_core
:
:
{
join
join_context
}
;
pub
use
rayon_core
:
:
{
spawn
spawn_fifo
}
;
pub
use
rayon_core
:
:
{
yield_local
yield_now
Yield
}
;
struct
SendPtr
<
T
>
(
*
mut
T
)
;
unsafe
impl
<
T
:
Send
>
Send
for
SendPtr
<
T
>
{
}
unsafe
impl
<
T
:
Send
>
Sync
for
SendPtr
<
T
>
{
}
impl
<
T
>
SendPtr
<
T
>
{
fn
get
(
self
)
-
>
*
mut
T
{
self
.
0
}
}
impl
<
T
>
Clone
for
SendPtr
<
T
>
{
fn
clone
(
&
self
)
-
>
Self
{
*
self
}
}
impl
<
T
>
Copy
for
SendPtr
<
T
>
{
}
