use
Error
;
use
header
:
:
{
HeaderName
HeaderValue
}
;
use
method
:
:
Method
;
use
sealed
:
:
Sealed
;
use
status
:
:
StatusCode
;
use
uri
:
:
Uri
;
pub
trait
HttpTryFrom
<
T
>
:
Sized
+
Sealed
{
type
Error
:
Into
<
Error
>
;
#
[
doc
(
hidden
)
]
fn
try_from
(
t
:
T
)
-
>
Result
<
Self
Self
:
:
Error
>
;
}
macro_rules
!
reflexive
{
(
(
t
:
ty
)
*
)
=
>
(
(
impl
HttpTryFrom
<
t
>
for
t
{
type
Error
=
Error
;
fn
try_from
(
t
:
Self
)
-
>
Result
<
Self
Self
:
:
Error
>
{
Ok
(
t
)
}
}
impl
Sealed
for
t
{
}
)
*
)
}
reflexive
!
{
Uri
Method
StatusCode
HeaderName
HeaderValue
}
