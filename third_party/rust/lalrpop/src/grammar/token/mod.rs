use
std
:
:
collections
:
:
HashMap
;
use
grammar
:
:
parse_tree
:
:
TypeRef
;
use
string_cache
:
:
DefaultAtom
as
Atom
;
#
[
cfg
(
test
)
]
mod
test
;
pub
struct
TokenDefinition
{
enum_type
:
TypeRef
token_map
:
HashMap
<
Atom
Atom
>
}
impl
TokenDefinition
{
pub
fn
new
(
enum_type
:
TypeRef
token_map
:
Vec
<
(
Atom
Atom
)
>
)
-
>
TokenDefinition
{
TokenDefinition
{
enum_type
:
enum_type
token_map
:
token_map
.
into_iter
(
)
.
collect
(
)
}
}
pub
fn
enum_type
(
&
self
)
-
>
&
TypeRef
{
&
self
.
enum_type
}
}
