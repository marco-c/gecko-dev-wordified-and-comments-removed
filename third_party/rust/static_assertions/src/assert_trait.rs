#
[
macro_export
]
macro_rules
!
assert_trait_sub_all
{
(
sub
:
path
:
(
super
:
path
)
+
(
)
?
)
=
>
{
const
_
:
(
)
=
{
/
/
One
scope
per
super
-
trait
.
(
{
#
[
allow
(
non_camel_case_types
)
]
trait
__Impl_Implication
:
super
{
}
/
/
Can
only
be
implemented
for
sub
types
if
super
is
/
/
also
implemented
.
impl
<
T
:
sub
>
__Impl_Implication
for
T
{
}
}
)
+
}
;
}
;
}
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
assert_trait_super_all
{
(
super
:
path
:
(
sub
:
path
)
+
(
)
?
)
=
>
{
(
assert_trait_sub_all
!
(
sub
:
super
)
;
)
+
}
;
}
