#
!
[
no_std
]
#
[
inline
(
never
)
]
fn
constant_time_ne
(
a
:
&
[
u8
]
b
:
&
[
u8
]
)
-
>
u8
{
assert
!
(
a
.
len
(
)
=
=
b
.
len
(
)
)
;
let
len
=
a
.
len
(
)
;
let
a
=
&
a
[
.
.
len
]
;
let
b
=
&
b
[
.
.
len
]
;
let
mut
tmp
=
0
;
for
i
in
0
.
.
len
{
tmp
|
=
a
[
i
]
^
b
[
i
]
;
}
tmp
}
#
[
inline
]
pub
fn
constant_time_eq
(
a
:
&
[
u8
]
b
:
&
[
u8
]
)
-
>
bool
{
a
.
len
(
)
=
=
b
.
len
(
)
&
&
constant_time_ne
(
a
b
)
=
=
0
}
