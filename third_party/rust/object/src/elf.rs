#
!
[
allow
(
missing_docs
)
]
#
!
[
allow
(
clippy
:
:
identity_op
)
]
use
crate
:
:
endian
:
:
{
Endian
U32Bytes
U64Bytes
I32
I64
U16
U32
U64
}
;
use
crate
:
:
pod
:
:
Pod
;
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
FileHeader32
<
E
:
Endian
>
{
pub
e_ident
:
Ident
pub
e_type
:
U16
<
E
>
pub
e_machine
:
U16
<
E
>
pub
e_version
:
U32
<
E
>
pub
e_entry
:
U32
<
E
>
pub
e_phoff
:
U32
<
E
>
pub
e_shoff
:
U32
<
E
>
pub
e_flags
:
U32
<
E
>
pub
e_ehsize
:
U16
<
E
>
pub
e_phentsize
:
U16
<
E
>
pub
e_phnum
:
U16
<
E
>
pub
e_shentsize
:
U16
<
E
>
pub
e_shnum
:
U16
<
E
>
pub
e_shstrndx
:
U16
<
E
>
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
FileHeader64
<
E
:
Endian
>
{
pub
e_ident
:
Ident
pub
e_type
:
U16
<
E
>
pub
e_machine
:
U16
<
E
>
pub
e_version
:
U32
<
E
>
pub
e_entry
:
U64
<
E
>
pub
e_phoff
:
U64
<
E
>
pub
e_shoff
:
U64
<
E
>
pub
e_flags
:
U32
<
E
>
pub
e_ehsize
:
U16
<
E
>
pub
e_phentsize
:
U16
<
E
>
pub
e_phnum
:
U16
<
E
>
pub
e_shentsize
:
U16
<
E
>
pub
e_shnum
:
U16
<
E
>
pub
e_shstrndx
:
U16
<
E
>
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Ident
{
pub
magic
:
[
u8
;
4
]
pub
class
:
u8
pub
data
:
u8
pub
version
:
u8
pub
os_abi
:
u8
pub
abi_version
:
u8
pub
padding
:
[
u8
;
7
]
}
pub
const
ELFMAG
:
[
u8
;
4
]
=
[
0x7f
b
'
E
'
b
'
L
'
b
'
F
'
]
;
pub
const
ELFCLASSNONE
:
u8
=
0
;
pub
const
ELFCLASS32
:
u8
=
1
;
pub
const
ELFCLASS64
:
u8
=
2
;
pub
const
ELFDATANONE
:
u8
=
0
;
pub
const
ELFDATA2LSB
:
u8
=
1
;
pub
const
ELFDATA2MSB
:
u8
=
2
;
pub
const
ELFOSABI_NONE
:
u8
=
0
;
pub
const
ELFOSABI_SYSV
:
u8
=
0
;
pub
const
ELFOSABI_HPUX
:
u8
=
1
;
pub
const
ELFOSABI_NETBSD
:
u8
=
2
;
pub
const
ELFOSABI_GNU
:
u8
=
3
;
pub
const
ELFOSABI_LINUX
:
u8
=
ELFOSABI_GNU
;
pub
const
ELFOSABI_HURD
:
u8
=
4
;
pub
const
ELFOSABI_SOLARIS
:
u8
=
6
;
pub
const
ELFOSABI_AIX
:
u8
=
7
;
pub
const
ELFOSABI_IRIX
:
u8
=
8
;
pub
const
ELFOSABI_FREEBSD
:
u8
=
9
;
pub
const
ELFOSABI_TRU64
:
u8
=
10
;
pub
const
ELFOSABI_MODESTO
:
u8
=
11
;
pub
const
ELFOSABI_OPENBSD
:
u8
=
12
;
pub
const
ELFOSABI_OPENVMS
:
u8
=
13
;
pub
const
ELFOSABI_NSK
:
u8
=
14
;
pub
const
ELFOSABI_AROS
:
u8
=
15
;
pub
const
ELFOSABI_FENIXOS
:
u8
=
16
;
pub
const
ELFOSABI_CLOUDABI
:
u8
=
17
;
pub
const
ELFOSABI_ARM_AEABI
:
u8
=
64
;
pub
const
ELFOSABI_ARM
:
u8
=
97
;
pub
const
ELFOSABI_STANDALONE
:
u8
=
255
;
pub
const
ET_NONE
:
u16
=
0
;
pub
const
ET_REL
:
u16
=
1
;
pub
const
ET_EXEC
:
u16
=
2
;
pub
const
ET_DYN
:
u16
=
3
;
pub
const
ET_CORE
:
u16
=
4
;
pub
const
ET_LOOS
:
u16
=
0xfe00
;
pub
const
ET_HIOS
:
u16
=
0xfeff
;
pub
const
ET_LOPROC
:
u16
=
0xff00
;
pub
const
ET_HIPROC
:
u16
=
0xffff
;
pub
const
EM_NONE
:
u16
=
0
;
pub
const
EM_M32
:
u16
=
1
;
pub
const
EM_SPARC
:
u16
=
2
;
pub
const
EM_386
:
u16
=
3
;
pub
const
EM_68K
:
u16
=
4
;
pub
const
EM_88K
:
u16
=
5
;
pub
const
EM_IAMCU
:
u16
=
6
;
pub
const
EM_860
:
u16
=
7
;
pub
const
EM_MIPS
:
u16
=
8
;
pub
const
EM_S370
:
u16
=
9
;
pub
const
EM_MIPS_RS3_LE
:
u16
=
10
;
pub
const
EM_PARISC
:
u16
=
15
;
pub
const
EM_VPP500
:
u16
=
17
;
pub
const
EM_SPARC32PLUS
:
u16
=
18
;
pub
const
EM_960
:
u16
=
19
;
pub
const
EM_PPC
:
u16
=
20
;
pub
const
EM_PPC64
:
u16
=
21
;
pub
const
EM_S390
:
u16
=
22
;
pub
const
EM_SPU
:
u16
=
23
;
pub
const
EM_V800
:
u16
=
36
;
pub
const
EM_FR20
:
u16
=
37
;
pub
const
EM_RH32
:
u16
=
38
;
pub
const
EM_RCE
:
u16
=
39
;
pub
const
EM_ARM
:
u16
=
40
;
pub
const
EM_FAKE_ALPHA
:
u16
=
41
;
pub
const
EM_SH
:
u16
=
42
;
pub
const
EM_SPARCV9
:
u16
=
43
;
pub
const
EM_TRICORE
:
u16
=
44
;
pub
const
EM_ARC
:
u16
=
45
;
pub
const
EM_H8_300
:
u16
=
46
;
pub
const
EM_H8_300H
:
u16
=
47
;
pub
const
EM_H8S
:
u16
=
48
;
pub
const
EM_H8_500
:
u16
=
49
;
pub
const
EM_IA_64
:
u16
=
50
;
pub
const
EM_MIPS_X
:
u16
=
51
;
pub
const
EM_COLDFIRE
:
u16
=
52
;
pub
const
EM_68HC12
:
u16
=
53
;
pub
const
EM_MMA
:
u16
=
54
;
pub
const
EM_PCP
:
u16
=
55
;
pub
const
EM_NCPU
:
u16
=
56
;
pub
const
EM_NDR1
:
u16
=
57
;
pub
const
EM_STARCORE
:
u16
=
58
;
pub
const
EM_ME16
:
u16
=
59
;
pub
const
EM_ST100
:
u16
=
60
;
pub
const
EM_TINYJ
:
u16
=
61
;
pub
const
EM_X86_64
:
u16
=
62
;
pub
const
EM_PDSP
:
u16
=
63
;
pub
const
EM_PDP10
:
u16
=
64
;
pub
const
EM_PDP11
:
u16
=
65
;
pub
const
EM_FX66
:
u16
=
66
;
pub
const
EM_ST9PLUS
:
u16
=
67
;
pub
const
EM_ST7
:
u16
=
68
;
pub
const
EM_68HC16
:
u16
=
69
;
pub
const
EM_68HC11
:
u16
=
70
;
pub
const
EM_68HC08
:
u16
=
71
;
pub
const
EM_68HC05
:
u16
=
72
;
pub
const
EM_SVX
:
u16
=
73
;
pub
const
EM_ST19
:
u16
=
74
;
pub
const
EM_VAX
:
u16
=
75
;
pub
const
EM_CRIS
:
u16
=
76
;
pub
const
EM_JAVELIN
:
u16
=
77
;
pub
const
EM_FIREPATH
:
u16
=
78
;
pub
const
EM_ZSP
:
u16
=
79
;
pub
const
EM_MMIX
:
u16
=
80
;
pub
const
EM_HUANY
:
u16
=
81
;
pub
const
EM_PRISM
:
u16
=
82
;
pub
const
EM_AVR
:
u16
=
83
;
pub
const
EM_FR30
:
u16
=
84
;
pub
const
EM_D10V
:
u16
=
85
;
pub
const
EM_D30V
:
u16
=
86
;
pub
const
EM_V850
:
u16
=
87
;
pub
const
EM_M32R
:
u16
=
88
;
pub
const
EM_MN10300
:
u16
=
89
;
pub
const
EM_MN10200
:
u16
=
90
;
pub
const
EM_PJ
:
u16
=
91
;
pub
const
EM_OPENRISC
:
u16
=
92
;
pub
const
EM_ARC_COMPACT
:
u16
=
93
;
pub
const
EM_XTENSA
:
u16
=
94
;
pub
const
EM_VIDEOCORE
:
u16
=
95
;
pub
const
EM_TMM_GPP
:
u16
=
96
;
pub
const
EM_NS32K
:
u16
=
97
;
pub
const
EM_TPC
:
u16
=
98
;
pub
const
EM_SNP1K
:
u16
=
99
;
pub
const
EM_ST200
:
u16
=
100
;
pub
const
EM_IP2K
:
u16
=
101
;
pub
const
EM_MAX
:
u16
=
102
;
pub
const
EM_CR
:
u16
=
103
;
pub
const
EM_F2MC16
:
u16
=
104
;
pub
const
EM_MSP430
:
u16
=
105
;
pub
const
EM_BLACKFIN
:
u16
=
106
;
pub
const
EM_SE_C33
:
u16
=
107
;
pub
const
EM_SEP
:
u16
=
108
;
pub
const
EM_ARCA
:
u16
=
109
;
pub
const
EM_UNICORE
:
u16
=
110
;
pub
const
EM_EXCESS
:
u16
=
111
;
pub
const
EM_DXP
:
u16
=
112
;
pub
const
EM_ALTERA_NIOS2
:
u16
=
113
;
pub
const
EM_CRX
:
u16
=
114
;
pub
const
EM_XGATE
:
u16
=
115
;
pub
const
EM_C166
:
u16
=
116
;
pub
const
EM_M16C
:
u16
=
117
;
pub
const
EM_DSPIC30F
:
u16
=
118
;
pub
const
EM_CE
:
u16
=
119
;
pub
const
EM_M32C
:
u16
=
120
;
pub
const
EM_TSK3000
:
u16
=
131
;
pub
const
EM_RS08
:
u16
=
132
;
pub
const
EM_SHARC
:
u16
=
133
;
pub
const
EM_ECOG2
:
u16
=
134
;
pub
const
EM_SCORE7
:
u16
=
135
;
pub
const
EM_DSP24
:
u16
=
136
;
pub
const
EM_VIDEOCORE3
:
u16
=
137
;
pub
const
EM_LATTICEMICO32
:
u16
=
138
;
pub
const
EM_SE_C17
:
u16
=
139
;
pub
const
EM_TI_C6000
:
u16
=
140
;
pub
const
EM_TI_C2000
:
u16
=
141
;
pub
const
EM_TI_C5500
:
u16
=
142
;
pub
const
EM_TI_ARP32
:
u16
=
143
;
pub
const
EM_TI_PRU
:
u16
=
144
;
pub
const
EM_MMDSP_PLUS
:
u16
=
160
;
pub
const
EM_CYPRESS_M8C
:
u16
=
161
;
pub
const
EM_R32C
:
u16
=
162
;
pub
const
EM_TRIMEDIA
:
u16
=
163
;
pub
const
EM_HEXAGON
:
u16
=
164
;
pub
const
EM_8051
:
u16
=
165
;
pub
const
EM_STXP7X
:
u16
=
166
;
pub
const
EM_NDS32
:
u16
=
167
;
pub
const
EM_ECOG1X
:
u16
=
168
;
pub
const
EM_MAXQ30
:
u16
=
169
;
pub
const
EM_XIMO16
:
u16
=
170
;
pub
const
EM_MANIK
:
u16
=
171
;
pub
const
EM_CRAYNV2
:
u16
=
172
;
pub
const
EM_RX
:
u16
=
173
;
pub
const
EM_METAG
:
u16
=
174
;
pub
const
EM_MCST_ELBRUS
:
u16
=
175
;
pub
const
EM_ECOG16
:
u16
=
176
;
pub
const
EM_CR16
:
u16
=
177
;
pub
const
EM_ETPU
:
u16
=
178
;
pub
const
EM_SLE9X
:
u16
=
179
;
pub
const
EM_L10M
:
u16
=
180
;
pub
const
EM_K10M
:
u16
=
181
;
pub
const
EM_AARCH64
:
u16
=
183
;
pub
const
EM_AVR32
:
u16
=
185
;
pub
const
EM_STM8
:
u16
=
186
;
pub
const
EM_TILE64
:
u16
=
187
;
pub
const
EM_TILEPRO
:
u16
=
188
;
pub
const
EM_MICROBLAZE
:
u16
=
189
;
pub
const
EM_CUDA
:
u16
=
190
;
pub
const
EM_TILEGX
:
u16
=
191
;
pub
const
EM_CLOUDSHIELD
:
u16
=
192
;
pub
const
EM_COREA_1ST
:
u16
=
193
;
pub
const
EM_COREA_2ND
:
u16
=
194
;
pub
const
EM_ARC_COMPACT2
:
u16
=
195
;
pub
const
EM_OPEN8
:
u16
=
196
;
pub
const
EM_RL78
:
u16
=
197
;
pub
const
EM_VIDEOCORE5
:
u16
=
198
;
pub
const
EM_78KOR
:
u16
=
199
;
pub
const
EM_56800EX
:
u16
=
200
;
pub
const
EM_BA1
:
u16
=
201
;
pub
const
EM_BA2
:
u16
=
202
;
pub
const
EM_XCORE
:
u16
=
203
;
pub
const
EM_MCHP_PIC
:
u16
=
204
;
pub
const
EM_KM32
:
u16
=
210
;
pub
const
EM_KMX32
:
u16
=
211
;
pub
const
EM_EMX16
:
u16
=
212
;
pub
const
EM_EMX8
:
u16
=
213
;
pub
const
EM_KVARC
:
u16
=
214
;
pub
const
EM_CDP
:
u16
=
215
;
pub
const
EM_COGE
:
u16
=
216
;
pub
const
EM_COOL
:
u16
=
217
;
pub
const
EM_NORC
:
u16
=
218
;
pub
const
EM_CSR_KALIMBA
:
u16
=
219
;
pub
const
EM_Z80
:
u16
=
220
;
pub
const
EM_VISIUM
:
u16
=
221
;
pub
const
EM_FT32
:
u16
=
222
;
pub
const
EM_MOXIE
:
u16
=
223
;
pub
const
EM_AMDGPU
:
u16
=
224
;
pub
const
EM_RISCV
:
u16
=
243
;
pub
const
EM_BPF
:
u16
=
247
;
pub
const
EM_CSKY
:
u16
=
252
;
pub
const
EM_LOONGARCH
:
u16
=
258
;
pub
const
EM_SBF
:
u16
=
263
;
pub
const
EM_ALPHA
:
u16
=
0x9026
;
pub
const
EV_NONE
:
u8
=
0
;
pub
const
EV_CURRENT
:
u8
=
1
;
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
SectionHeader32
<
E
:
Endian
>
{
pub
sh_name
:
U32
<
E
>
pub
sh_type
:
U32
<
E
>
pub
sh_flags
:
U32
<
E
>
pub
sh_addr
:
U32
<
E
>
pub
sh_offset
:
U32
<
E
>
pub
sh_size
:
U32
<
E
>
pub
sh_link
:
U32
<
E
>
pub
sh_info
:
U32
<
E
>
pub
sh_addralign
:
U32
<
E
>
pub
sh_entsize
:
U32
<
E
>
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
SectionHeader64
<
E
:
Endian
>
{
pub
sh_name
:
U32
<
E
>
pub
sh_type
:
U32
<
E
>
pub
sh_flags
:
U64
<
E
>
pub
sh_addr
:
U64
<
E
>
pub
sh_offset
:
U64
<
E
>
pub
sh_size
:
U64
<
E
>
pub
sh_link
:
U32
<
E
>
pub
sh_info
:
U32
<
E
>
pub
sh_addralign
:
U64
<
E
>
pub
sh_entsize
:
U64
<
E
>
}
pub
const
SHN_UNDEF
:
u16
=
0
;
pub
const
SHN_LORESERVE
:
u16
=
0xff00
;
pub
const
SHN_LOPROC
:
u16
=
0xff00
;
pub
const
SHN_HIPROC
:
u16
=
0xff1f
;
pub
const
SHN_LOOS
:
u16
=
0xff20
;
pub
const
SHN_HIOS
:
u16
=
0xff3f
;
pub
const
SHN_ABS
:
u16
=
0xfff1
;
pub
const
SHN_COMMON
:
u16
=
0xfff2
;
pub
const
SHN_XINDEX
:
u16
=
0xffff
;
pub
const
SHN_HIRESERVE
:
u16
=
0xffff
;
pub
const
SHT_NULL
:
u32
=
0
;
pub
const
SHT_PROGBITS
:
u32
=
1
;
pub
const
SHT_SYMTAB
:
u32
=
2
;
pub
const
SHT_STRTAB
:
u32
=
3
;
pub
const
SHT_RELA
:
u32
=
4
;
pub
const
SHT_HASH
:
u32
=
5
;
pub
const
SHT_DYNAMIC
:
u32
=
6
;
pub
const
SHT_NOTE
:
u32
=
7
;
pub
const
SHT_NOBITS
:
u32
=
8
;
pub
const
SHT_REL
:
u32
=
9
;
pub
const
SHT_SHLIB
:
u32
=
10
;
pub
const
SHT_DYNSYM
:
u32
=
11
;
pub
const
SHT_INIT_ARRAY
:
u32
=
14
;
pub
const
SHT_FINI_ARRAY
:
u32
=
15
;
pub
const
SHT_PREINIT_ARRAY
:
u32
=
16
;
pub
const
SHT_GROUP
:
u32
=
17
;
pub
const
SHT_SYMTAB_SHNDX
:
u32
=
18
;
pub
const
SHT_LOOS
:
u32
=
0x6000_0000
;
pub
const
SHT_GNU_ATTRIBUTES
:
u32
=
0x6fff_fff5
;
pub
const
SHT_GNU_HASH
:
u32
=
0x6fff_fff6
;
pub
const
SHT_GNU_LIBLIST
:
u32
=
0x6fff_fff7
;
pub
const
SHT_CHECKSUM
:
u32
=
0x6fff_fff8
;
pub
const
SHT_LOSUNW
:
u32
=
0x6fff_fffa
;
#
[
allow
(
non_upper_case_globals
)
]
pub
const
SHT_SUNW_move
:
u32
=
0x6fff_fffa
;
pub
const
SHT_SUNW_COMDAT
:
u32
=
0x6fff_fffb
;
#
[
allow
(
non_upper_case_globals
)
]
pub
const
SHT_SUNW_syminfo
:
u32
=
0x6fff_fffc
;
#
[
allow
(
non_upper_case_globals
)
]
pub
const
SHT_GNU_VERDEF
:
u32
=
0x6fff_fffd
;
#
[
allow
(
non_upper_case_globals
)
]
pub
const
SHT_GNU_VERNEED
:
u32
=
0x6fff_fffe
;
#
[
allow
(
non_upper_case_globals
)
]
pub
const
SHT_GNU_VERSYM
:
u32
=
0x6fff_ffff
;
pub
const
SHT_HISUNW
:
u32
=
0x6fff_ffff
;
pub
const
SHT_HIOS
:
u32
=
0x6fff_ffff
;
pub
const
SHT_LOPROC
:
u32
=
0x7000_0000
;
pub
const
SHT_HIPROC
:
u32
=
0x7fff_ffff
;
pub
const
SHT_LOUSER
:
u32
=
0x8000_0000
;
pub
const
SHT_HIUSER
:
u32
=
0x8fff_ffff
;
pub
const
SHF_WRITE
:
u32
=
1
<
<
0
;
pub
const
SHF_ALLOC
:
u32
=
1
<
<
1
;
pub
const
SHF_EXECINSTR
:
u32
=
1
<
<
2
;
pub
const
SHF_MERGE
:
u32
=
1
<
<
4
;
pub
const
SHF_STRINGS
:
u32
=
1
<
<
5
;
pub
const
SHF_INFO_LINK
:
u32
=
1
<
<
6
;
pub
const
SHF_LINK_ORDER
:
u32
=
1
<
<
7
;
pub
const
SHF_OS_NONCONFORMING
:
u32
=
1
<
<
8
;
pub
const
SHF_GROUP
:
u32
=
1
<
<
9
;
pub
const
SHF_TLS
:
u32
=
1
<
<
10
;
pub
const
SHF_COMPRESSED
:
u32
=
1
<
<
11
;
pub
const
SHF_MASKOS
:
u32
=
0x0ff0_0000
;
pub
const
SHF_MASKPROC
:
u32
=
0xf000_0000
;
pub
const
SHF_EXCLUDE
:
u32
=
0x8000_0000
;
#
[
derive
(
Debug
Default
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
CompressionHeader32
<
E
:
Endian
>
{
pub
ch_type
:
U32Bytes
<
E
>
pub
ch_size
:
U32Bytes
<
E
>
pub
ch_addralign
:
U32Bytes
<
E
>
}
#
[
derive
(
Debug
Default
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
CompressionHeader64
<
E
:
Endian
>
{
pub
ch_type
:
U32Bytes
<
E
>
pub
ch_reserved
:
U32Bytes
<
E
>
pub
ch_size
:
U64Bytes
<
E
>
pub
ch_addralign
:
U64Bytes
<
E
>
}
pub
const
ELFCOMPRESS_ZLIB
:
u32
=
1
;
pub
const
ELFCOMPRESS_ZSTD
:
u32
=
2
;
pub
const
ELFCOMPRESS_LOOS
:
u32
=
0x6000_0000
;
pub
const
ELFCOMPRESS_HIOS
:
u32
=
0x6fff_ffff
;
pub
const
ELFCOMPRESS_LOPROC
:
u32
=
0x7000_0000
;
pub
const
ELFCOMPRESS_HIPROC
:
u32
=
0x7fff_ffff
;
pub
const
GRP_COMDAT
:
u32
=
1
;
#
[
derive
(
Debug
Default
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Sym32
<
E
:
Endian
>
{
pub
st_name
:
U32
<
E
>
pub
st_value
:
U32
<
E
>
pub
st_size
:
U32
<
E
>
pub
st_info
:
u8
pub
st_other
:
u8
pub
st_shndx
:
U16
<
E
>
}
impl
<
E
:
Endian
>
Sym32
<
E
>
{
#
[
inline
]
pub
fn
st_bind
(
&
self
)
-
>
u8
{
self
.
st_info
>
>
4
}
#
[
inline
]
pub
fn
st_type
(
&
self
)
-
>
u8
{
self
.
st_info
&
0xf
}
#
[
inline
]
pub
fn
set_st_info
(
&
mut
self
st_bind
:
u8
st_type
:
u8
)
{
self
.
st_info
=
(
st_bind
<
<
4
)
+
(
st_type
&
0xf
)
;
}
#
[
inline
]
pub
fn
st_visibility
(
&
self
)
-
>
u8
{
self
.
st_other
&
0x3
}
}
#
[
derive
(
Debug
Default
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Sym64
<
E
:
Endian
>
{
pub
st_name
:
U32
<
E
>
pub
st_info
:
u8
pub
st_other
:
u8
pub
st_shndx
:
U16
<
E
>
pub
st_value
:
U64
<
E
>
pub
st_size
:
U64
<
E
>
}
impl
<
E
:
Endian
>
Sym64
<
E
>
{
#
[
inline
]
pub
fn
st_bind
(
&
self
)
-
>
u8
{
self
.
st_info
>
>
4
}
#
[
inline
]
pub
fn
st_type
(
&
self
)
-
>
u8
{
self
.
st_info
&
0xf
}
#
[
inline
]
pub
fn
set_st_info
(
&
mut
self
st_bind
:
u8
st_type
:
u8
)
{
self
.
st_info
=
(
st_bind
<
<
4
)
+
(
st_type
&
0xf
)
;
}
#
[
inline
]
pub
fn
st_visibility
(
&
self
)
-
>
u8
{
self
.
st_other
&
0x3
}
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Syminfo32
<
E
:
Endian
>
{
pub
si_boundto
:
U16
<
E
>
pub
si_flags
:
U16
<
E
>
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Syminfo64
<
E
:
Endian
>
{
pub
si_boundto
:
U16
<
E
>
pub
si_flags
:
U16
<
E
>
}
pub
const
SYMINFO_BT_SELF
:
u16
=
0xffff
;
pub
const
SYMINFO_BT_PARENT
:
u16
=
0xfffe
;
pub
const
SYMINFO_BT_LOWRESERVE
:
u16
=
0xff00
;
pub
const
SYMINFO_FLG_DIRECT
:
u16
=
0x0001
;
pub
const
SYMINFO_FLG_PASSTHRU
:
u16
=
0x0002
;
pub
const
SYMINFO_FLG_COPY
:
u16
=
0x0004
;
pub
const
SYMINFO_FLG_LAZYLOAD
:
u16
=
0x0008
;
pub
const
SYMINFO_NONE
:
u16
=
0
;
pub
const
SYMINFO_CURRENT
:
u16
=
1
;
pub
const
SYMINFO_NUM
:
u16
=
2
;
pub
const
STB_LOCAL
:
u8
=
0
;
pub
const
STB_GLOBAL
:
u8
=
1
;
pub
const
STB_WEAK
:
u8
=
2
;
pub
const
STB_LOOS
:
u8
=
10
;
pub
const
STB_GNU_UNIQUE
:
u8
=
10
;
pub
const
STB_HIOS
:
u8
=
12
;
pub
const
STB_LOPROC
:
u8
=
13
;
pub
const
STB_HIPROC
:
u8
=
15
;
pub
const
STT_NOTYPE
:
u8
=
0
;
pub
const
STT_OBJECT
:
u8
=
1
;
pub
const
STT_FUNC
:
u8
=
2
;
pub
const
STT_SECTION
:
u8
=
3
;
pub
const
STT_FILE
:
u8
=
4
;
pub
const
STT_COMMON
:
u8
=
5
;
pub
const
STT_TLS
:
u8
=
6
;
pub
const
STT_LOOS
:
u8
=
10
;
pub
const
STT_GNU_IFUNC
:
u8
=
10
;
pub
const
STT_HIOS
:
u8
=
12
;
pub
const
STT_LOPROC
:
u8
=
13
;
pub
const
STT_HIPROC
:
u8
=
15
;
pub
const
STV_DEFAULT
:
u8
=
0
;
pub
const
STV_INTERNAL
:
u8
=
1
;
pub
const
STV_HIDDEN
:
u8
=
2
;
pub
const
STV_PROTECTED
:
u8
=
3
;
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Rel32
<
E
:
Endian
>
{
pub
r_offset
:
U32
<
E
>
pub
r_info
:
U32
<
E
>
}
impl
<
E
:
Endian
>
Rel32
<
E
>
{
#
[
inline
]
pub
fn
r_sym
(
&
self
endian
:
E
)
-
>
u32
{
self
.
r_info
.
get
(
endian
)
>
>
8
}
#
[
inline
]
pub
fn
r_type
(
&
self
endian
:
E
)
-
>
u32
{
self
.
r_info
.
get
(
endian
)
&
0xff
}
pub
fn
r_info
(
endian
:
E
r_sym
:
u32
r_type
:
u8
)
-
>
U32
<
E
>
{
U32
:
:
new
(
endian
(
r_sym
<
<
8
)
|
u32
:
:
from
(
r_type
)
)
}
pub
fn
set_r_info
(
&
mut
self
endian
:
E
r_sym
:
u32
r_type
:
u8
)
{
self
.
r_info
=
Self
:
:
r_info
(
endian
r_sym
r_type
)
}
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Rela32
<
E
:
Endian
>
{
pub
r_offset
:
U32
<
E
>
pub
r_info
:
U32
<
E
>
pub
r_addend
:
I32
<
E
>
}
impl
<
E
:
Endian
>
Rela32
<
E
>
{
#
[
inline
]
pub
fn
r_sym
(
&
self
endian
:
E
)
-
>
u32
{
self
.
r_info
.
get
(
endian
)
>
>
8
}
#
[
inline
]
pub
fn
r_type
(
&
self
endian
:
E
)
-
>
u32
{
self
.
r_info
.
get
(
endian
)
&
0xff
}
pub
fn
r_info
(
endian
:
E
r_sym
:
u32
r_type
:
u8
)
-
>
U32
<
E
>
{
U32
:
:
new
(
endian
(
r_sym
<
<
8
)
|
u32
:
:
from
(
r_type
)
)
}
pub
fn
set_r_info
(
&
mut
self
endian
:
E
r_sym
:
u32
r_type
:
u8
)
{
self
.
r_info
=
Self
:
:
r_info
(
endian
r_sym
r_type
)
}
}
impl
<
E
:
Endian
>
From
<
Rel32
<
E
>
>
for
Rela32
<
E
>
{
fn
from
(
rel
:
Rel32
<
E
>
)
-
>
Self
{
Rela32
{
r_offset
:
rel
.
r_offset
r_info
:
rel
.
r_info
r_addend
:
I32
:
:
default
(
)
}
}
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Rel64
<
E
:
Endian
>
{
pub
r_offset
:
U64
<
E
>
pub
r_info
:
U64
<
E
>
}
impl
<
E
:
Endian
>
Rel64
<
E
>
{
#
[
inline
]
pub
fn
r_sym
(
&
self
endian
:
E
)
-
>
u32
{
(
self
.
r_info
.
get
(
endian
)
>
>
32
)
as
u32
}
#
[
inline
]
pub
fn
r_type
(
&
self
endian
:
E
)
-
>
u32
{
(
self
.
r_info
.
get
(
endian
)
&
0xffff_ffff
)
as
u32
}
pub
fn
r_info
(
endian
:
E
r_sym
:
u32
r_type
:
u32
)
-
>
U64
<
E
>
{
U64
:
:
new
(
endian
(
u64
:
:
from
(
r_sym
)
<
<
32
)
|
u64
:
:
from
(
r_type
)
)
}
pub
fn
set_r_info
(
&
mut
self
endian
:
E
r_sym
:
u32
r_type
:
u32
)
{
self
.
r_info
=
Self
:
:
r_info
(
endian
r_sym
r_type
)
}
}
impl
<
E
:
Endian
>
From
<
Rel64
<
E
>
>
for
Rela64
<
E
>
{
fn
from
(
rel
:
Rel64
<
E
>
)
-
>
Self
{
Rela64
{
r_offset
:
rel
.
r_offset
r_info
:
rel
.
r_info
r_addend
:
I64
:
:
default
(
)
}
}
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Rela64
<
E
:
Endian
>
{
pub
r_offset
:
U64
<
E
>
pub
r_info
:
U64
<
E
>
pub
r_addend
:
I64
<
E
>
}
impl
<
E
:
Endian
>
Rela64
<
E
>
{
pub
(
crate
)
fn
get_r_info
(
&
self
endian
:
E
is_mips64el
:
bool
)
-
>
u64
{
let
mut
t
=
self
.
r_info
.
get
(
endian
)
;
if
is_mips64el
{
t
=
(
t
<
<
32
)
|
(
(
t
>
>
8
)
&
0xff000000
)
|
(
(
t
>
>
24
)
&
0x00ff0000
)
|
(
(
t
>
>
40
)
&
0x0000ff00
)
|
(
(
t
>
>
56
)
&
0x000000ff
)
;
}
t
}
#
[
inline
]
pub
fn
r_sym
(
&
self
endian
:
E
is_mips64el
:
bool
)
-
>
u32
{
(
self
.
get_r_info
(
endian
is_mips64el
)
>
>
32
)
as
u32
}
#
[
inline
]
pub
fn
r_type
(
&
self
endian
:
E
is_mips64el
:
bool
)
-
>
u32
{
(
self
.
get_r_info
(
endian
is_mips64el
)
&
0xffff_ffff
)
as
u32
}
pub
fn
r_info
(
endian
:
E
is_mips64el
:
bool
r_sym
:
u32
r_type
:
u32
)
-
>
U64
<
E
>
{
let
mut
t
=
(
u64
:
:
from
(
r_sym
)
<
<
32
)
|
u64
:
:
from
(
r_type
)
;
if
is_mips64el
{
t
=
(
t
>
>
32
)
|
(
(
t
&
0xff000000
)
<
<
8
)
|
(
(
t
&
0x00ff0000
)
<
<
24
)
|
(
(
t
&
0x0000ff00
)
<
<
40
)
|
(
(
t
&
0x000000ff
)
<
<
56
)
;
}
U64
:
:
new
(
endian
t
)
}
pub
fn
set_r_info
(
&
mut
self
endian
:
E
is_mips64el
:
bool
r_sym
:
u32
r_type
:
u32
)
{
self
.
r_info
=
Self
:
:
r_info
(
endian
is_mips64el
r_sym
r_type
)
;
}
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
ProgramHeader32
<
E
:
Endian
>
{
pub
p_type
:
U32
<
E
>
pub
p_offset
:
U32
<
E
>
pub
p_vaddr
:
U32
<
E
>
pub
p_paddr
:
U32
<
E
>
pub
p_filesz
:
U32
<
E
>
pub
p_memsz
:
U32
<
E
>
pub
p_flags
:
U32
<
E
>
pub
p_align
:
U32
<
E
>
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
ProgramHeader64
<
E
:
Endian
>
{
pub
p_type
:
U32
<
E
>
pub
p_flags
:
U32
<
E
>
pub
p_offset
:
U64
<
E
>
pub
p_vaddr
:
U64
<
E
>
pub
p_paddr
:
U64
<
E
>
pub
p_filesz
:
U64
<
E
>
pub
p_memsz
:
U64
<
E
>
pub
p_align
:
U64
<
E
>
}
pub
const
PN_XNUM
:
u16
=
0xffff
;
pub
const
PT_NULL
:
u32
=
0
;
pub
const
PT_LOAD
:
u32
=
1
;
pub
const
PT_DYNAMIC
:
u32
=
2
;
pub
const
PT_INTERP
:
u32
=
3
;
pub
const
PT_NOTE
:
u32
=
4
;
pub
const
PT_SHLIB
:
u32
=
5
;
pub
const
PT_PHDR
:
u32
=
6
;
pub
const
PT_TLS
:
u32
=
7
;
pub
const
PT_LOOS
:
u32
=
0x6000_0000
;
pub
const
PT_GNU_EH_FRAME
:
u32
=
0x6474_e550
;
pub
const
PT_GNU_STACK
:
u32
=
0x6474_e551
;
pub
const
PT_GNU_RELRO
:
u32
=
0x6474_e552
;
pub
const
PT_GNU_PROPERTY
:
u32
=
0x6474_e553
;
pub
const
PT_HIOS
:
u32
=
0x6fff_ffff
;
pub
const
PT_LOPROC
:
u32
=
0x7000_0000
;
pub
const
PT_HIPROC
:
u32
=
0x7fff_ffff
;
pub
const
PF_X
:
u32
=
1
<
<
0
;
pub
const
PF_W
:
u32
=
1
<
<
1
;
pub
const
PF_R
:
u32
=
1
<
<
2
;
pub
const
PF_MASKOS
:
u32
=
0x0ff0_0000
;
pub
const
PF_MASKPROC
:
u32
=
0xf000_0000
;
pub
const
ELF_NOTE_CORE
:
&
[
u8
]
=
b
"
CORE
"
;
pub
const
ELF_NOTE_LINUX
:
&
[
u8
]
=
b
"
LINUX
"
;
pub
const
NT_PRSTATUS
:
u32
=
1
;
pub
const
NT_PRFPREG
:
u32
=
2
;
pub
const
NT_FPREGSET
:
u32
=
2
;
pub
const
NT_PRPSINFO
:
u32
=
3
;
pub
const
NT_PRXREG
:
u32
=
4
;
pub
const
NT_TASKSTRUCT
:
u32
=
4
;
pub
const
NT_PLATFORM
:
u32
=
5
;
pub
const
NT_AUXV
:
u32
=
6
;
pub
const
NT_GWINDOWS
:
u32
=
7
;
pub
const
NT_ASRS
:
u32
=
8
;
pub
const
NT_PSTATUS
:
u32
=
10
;
pub
const
NT_PSINFO
:
u32
=
13
;
pub
const
NT_PRCRED
:
u32
=
14
;
pub
const
NT_UTSNAME
:
u32
=
15
;
pub
const
NT_LWPSTATUS
:
u32
=
16
;
pub
const
NT_LWPSINFO
:
u32
=
17
;
pub
const
NT_PRFPXREG
:
u32
=
20
;
pub
const
NT_SIGINFO
:
u32
=
0x5349_4749
;
pub
const
NT_FILE
:
u32
=
0x4649_4c45
;
pub
const
NT_PRXFPREG
:
u32
=
0x46e6_2b7f
;
pub
const
NT_PPC_VMX
:
u32
=
0x100
;
pub
const
NT_PPC_SPE
:
u32
=
0x101
;
pub
const
NT_PPC_VSX
:
u32
=
0x102
;
pub
const
NT_PPC_TAR
:
u32
=
0x103
;
pub
const
NT_PPC_PPR
:
u32
=
0x104
;
pub
const
NT_PPC_DSCR
:
u32
=
0x105
;
pub
const
NT_PPC_EBB
:
u32
=
0x106
;
pub
const
NT_PPC_PMU
:
u32
=
0x107
;
pub
const
NT_PPC_TM_CGPR
:
u32
=
0x108
;
pub
const
NT_PPC_TM_CFPR
:
u32
=
0x109
;
pub
const
NT_PPC_TM_CVMX
:
u32
=
0x10a
;
pub
const
NT_PPC_TM_CVSX
:
u32
=
0x10b
;
pub
const
NT_PPC_TM_SPR
:
u32
=
0x10c
;
pub
const
NT_PPC_TM_CTAR
:
u32
=
0x10d
;
pub
const
NT_PPC_TM_CPPR
:
u32
=
0x10e
;
pub
const
NT_PPC_TM_CDSCR
:
u32
=
0x10f
;
pub
const
NT_PPC_PKEY
:
u32
=
0x110
;
pub
const
NT_386_TLS
:
u32
=
0x200
;
pub
const
NT_386_IOPERM
:
u32
=
0x201
;
pub
const
NT_X86_XSTATE
:
u32
=
0x202
;
pub
const
NT_S390_HIGH_GPRS
:
u32
=
0x300
;
pub
const
NT_S390_TIMER
:
u32
=
0x301
;
pub
const
NT_S390_TODCMP
:
u32
=
0x302
;
pub
const
NT_S390_TODPREG
:
u32
=
0x303
;
pub
const
NT_S390_CTRS
:
u32
=
0x304
;
pub
const
NT_S390_PREFIX
:
u32
=
0x305
;
pub
const
NT_S390_LAST_BREAK
:
u32
=
0x306
;
pub
const
NT_S390_SYSTEM_CALL
:
u32
=
0x307
;
pub
const
NT_S390_TDB
:
u32
=
0x308
;
pub
const
NT_S390_VXRS_LOW
:
u32
=
0x309
;
pub
const
NT_S390_VXRS_HIGH
:
u32
=
0x30a
;
pub
const
NT_S390_GS_CB
:
u32
=
0x30b
;
pub
const
NT_S390_GS_BC
:
u32
=
0x30c
;
pub
const
NT_S390_RI_CB
:
u32
=
0x30d
;
pub
const
NT_ARM_VFP
:
u32
=
0x400
;
pub
const
NT_ARM_TLS
:
u32
=
0x401
;
pub
const
NT_ARM_HW_BREAK
:
u32
=
0x402
;
pub
const
NT_ARM_HW_WATCH
:
u32
=
0x403
;
pub
const
NT_ARM_SYSTEM_CALL
:
u32
=
0x404
;
pub
const
NT_ARM_SVE
:
u32
=
0x405
;
pub
const
NT_VMCOREDD
:
u32
=
0x700
;
pub
const
NT_MIPS_DSP
:
u32
=
0x800
;
pub
const
NT_MIPS_FP_MODE
:
u32
=
0x801
;
pub
const
NT_VERSION
:
u32
=
1
;
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Dyn32
<
E
:
Endian
>
{
pub
d_tag
:
U32
<
E
>
pub
d_val
:
U32
<
E
>
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Dyn64
<
E
:
Endian
>
{
pub
d_tag
:
U64
<
E
>
pub
d_val
:
U64
<
E
>
}
pub
const
DT_NULL
:
u32
=
0
;
pub
const
DT_NEEDED
:
u32
=
1
;
pub
const
DT_PLTRELSZ
:
u32
=
2
;
pub
const
DT_PLTGOT
:
u32
=
3
;
pub
const
DT_HASH
:
u32
=
4
;
pub
const
DT_STRTAB
:
u32
=
5
;
pub
const
DT_SYMTAB
:
u32
=
6
;
pub
const
DT_RELA
:
u32
=
7
;
pub
const
DT_RELASZ
:
u32
=
8
;
pub
const
DT_RELAENT
:
u32
=
9
;
pub
const
DT_STRSZ
:
u32
=
10
;
pub
const
DT_SYMENT
:
u32
=
11
;
pub
const
DT_INIT
:
u32
=
12
;
pub
const
DT_FINI
:
u32
=
13
;
pub
const
DT_SONAME
:
u32
=
14
;
pub
const
DT_RPATH
:
u32
=
15
;
pub
const
DT_SYMBOLIC
:
u32
=
16
;
pub
const
DT_REL
:
u32
=
17
;
pub
const
DT_RELSZ
:
u32
=
18
;
pub
const
DT_RELENT
:
u32
=
19
;
pub
const
DT_PLTREL
:
u32
=
20
;
pub
const
DT_DEBUG
:
u32
=
21
;
pub
const
DT_TEXTREL
:
u32
=
22
;
pub
const
DT_JMPREL
:
u32
=
23
;
pub
const
DT_BIND_NOW
:
u32
=
24
;
pub
const
DT_INIT_ARRAY
:
u32
=
25
;
pub
const
DT_FINI_ARRAY
:
u32
=
26
;
pub
const
DT_INIT_ARRAYSZ
:
u32
=
27
;
pub
const
DT_FINI_ARRAYSZ
:
u32
=
28
;
pub
const
DT_RUNPATH
:
u32
=
29
;
pub
const
DT_FLAGS
:
u32
=
30
;
pub
const
DT_ENCODING
:
u32
=
32
;
pub
const
DT_PREINIT_ARRAY
:
u32
=
32
;
pub
const
DT_PREINIT_ARRAYSZ
:
u32
=
33
;
pub
const
DT_SYMTAB_SHNDX
:
u32
=
34
;
pub
const
DT_LOOS
:
u32
=
0x6000_000d
;
pub
const
DT_HIOS
:
u32
=
0x6fff_f000
;
pub
const
DT_LOPROC
:
u32
=
0x7000_0000
;
pub
const
DT_HIPROC
:
u32
=
0x7fff_ffff
;
pub
const
DT_VALRNGLO
:
u32
=
0x6fff_fd00
;
pub
const
DT_GNU_PRELINKED
:
u32
=
0x6fff_fdf5
;
pub
const
DT_GNU_CONFLICTSZ
:
u32
=
0x6fff_fdf6
;
pub
const
DT_GNU_LIBLISTSZ
:
u32
=
0x6fff_fdf7
;
pub
const
DT_CHECKSUM
:
u32
=
0x6fff_fdf8
;
pub
const
DT_PLTPADSZ
:
u32
=
0x6fff_fdf9
;
pub
const
DT_MOVEENT
:
u32
=
0x6fff_fdfa
;
pub
const
DT_MOVESZ
:
u32
=
0x6fff_fdfb
;
pub
const
DT_FEATURE_1
:
u32
=
0x6fff_fdfc
;
pub
const
DT_POSFLAG_1
:
u32
=
0x6fff_fdfd
;
pub
const
DT_SYMINSZ
:
u32
=
0x6fff_fdfe
;
pub
const
DT_SYMINENT
:
u32
=
0x6fff_fdff
;
pub
const
DT_VALRNGHI
:
u32
=
0x6fff_fdff
;
pub
const
DT_ADDRRNGLO
:
u32
=
0x6fff_fe00
;
pub
const
DT_GNU_HASH
:
u32
=
0x6fff_fef5
;
pub
const
DT_TLSDESC_PLT
:
u32
=
0x6fff_fef6
;
pub
const
DT_TLSDESC_GOT
:
u32
=
0x6fff_fef7
;
pub
const
DT_GNU_CONFLICT
:
u32
=
0x6fff_fef8
;
pub
const
DT_GNU_LIBLIST
:
u32
=
0x6fff_fef9
;
pub
const
DT_CONFIG
:
u32
=
0x6fff_fefa
;
pub
const
DT_DEPAUDIT
:
u32
=
0x6fff_fefb
;
pub
const
DT_AUDIT
:
u32
=
0x6fff_fefc
;
pub
const
DT_PLTPAD
:
u32
=
0x6fff_fefd
;
pub
const
DT_MOVETAB
:
u32
=
0x6fff_fefe
;
pub
const
DT_SYMINFO
:
u32
=
0x6fff_feff
;
pub
const
DT_ADDRRNGHI
:
u32
=
0x6fff_feff
;
pub
const
DT_VERSYM
:
u32
=
0x6fff_fff0
;
pub
const
DT_RELACOUNT
:
u32
=
0x6fff_fff9
;
pub
const
DT_RELCOUNT
:
u32
=
0x6fff_fffa
;
pub
const
DT_FLAGS_1
:
u32
=
0x6fff_fffb
;
pub
const
DT_VERDEF
:
u32
=
0x6fff_fffc
;
pub
const
DT_VERDEFNUM
:
u32
=
0x6fff_fffd
;
pub
const
DT_VERNEED
:
u32
=
0x6fff_fffe
;
pub
const
DT_VERNEEDNUM
:
u32
=
0x6fff_ffff
;
pub
const
DT_AUXILIARY
:
u32
=
0x7fff_fffd
;
pub
const
DT_FILTER
:
u32
=
0x7fff_ffff
;
pub
const
DF_ORIGIN
:
u32
=
0x0000_0001
;
pub
const
DF_SYMBOLIC
:
u32
=
0x0000_0002
;
pub
const
DF_TEXTREL
:
u32
=
0x0000_0004
;
pub
const
DF_BIND_NOW
:
u32
=
0x0000_0008
;
pub
const
DF_STATIC_TLS
:
u32
=
0x0000_0010
;
pub
const
DF_1_NOW
:
u32
=
0x0000_0001
;
pub
const
DF_1_GLOBAL
:
u32
=
0x0000_0002
;
pub
const
DF_1_GROUP
:
u32
=
0x0000_0004
;
pub
const
DF_1_NODELETE
:
u32
=
0x0000_0008
;
pub
const
DF_1_LOADFLTR
:
u32
=
0x0000_0010
;
pub
const
DF_1_INITFIRST
:
u32
=
0x0000_0020
;
pub
const
DF_1_NOOPEN
:
u32
=
0x0000_0040
;
pub
const
DF_1_ORIGIN
:
u32
=
0x0000_0080
;
pub
const
DF_1_DIRECT
:
u32
=
0x0000_0100
;
pub
const
DF_1_TRANS
:
u32
=
0x0000_0200
;
pub
const
DF_1_INTERPOSE
:
u32
=
0x0000_0400
;
pub
const
DF_1_NODEFLIB
:
u32
=
0x0000_0800
;
pub
const
DF_1_NODUMP
:
u32
=
0x0000_1000
;
pub
const
DF_1_CONFALT
:
u32
=
0x0000_2000
;
pub
const
DF_1_ENDFILTEE
:
u32
=
0x0000_4000
;
pub
const
DF_1_DISPRELDNE
:
u32
=
0x0000_8000
;
pub
const
DF_1_DISPRELPND
:
u32
=
0x0001_0000
;
pub
const
DF_1_NODIRECT
:
u32
=
0x0002_0000
;
pub
const
DF_1_IGNMULDEF
:
u32
=
0x0004_0000
;
pub
const
DF_1_NOKSYMS
:
u32
=
0x0008_0000
;
pub
const
DF_1_NOHDR
:
u32
=
0x0010_0000
;
pub
const
DF_1_EDITED
:
u32
=
0x0020_0000
;
pub
const
DF_1_NORELOC
:
u32
=
0x0040_0000
;
pub
const
DF_1_SYMINTPOSE
:
u32
=
0x0080_0000
;
pub
const
DF_1_GLOBAUDIT
:
u32
=
0x0100_0000
;
pub
const
DF_1_SINGLETON
:
u32
=
0x0200_0000
;
pub
const
DF_1_STUB
:
u32
=
0x0400_0000
;
pub
const
DF_1_PIE
:
u32
=
0x0800_0000
;
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Versym
<
E
:
Endian
>
(
pub
U16
<
E
>
)
;
pub
const
VERSYM_HIDDEN
:
u16
=
0x8000
;
pub
const
VERSYM_VERSION
:
u16
=
0x7fff
;
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Verdef
<
E
:
Endian
>
{
pub
vd_version
:
U16
<
E
>
pub
vd_flags
:
U16
<
E
>
pub
vd_ndx
:
U16
<
E
>
pub
vd_cnt
:
U16
<
E
>
pub
vd_hash
:
U32
<
E
>
pub
vd_aux
:
U32
<
E
>
pub
vd_next
:
U32
<
E
>
}
pub
const
VER_DEF_NONE
:
u16
=
0
;
pub
const
VER_DEF_CURRENT
:
u16
=
1
;
pub
const
VER_FLG_BASE
:
u16
=
0x1
;
pub
const
VER_FLG_WEAK
:
u16
=
0x2
;
pub
const
VER_NDX_LOCAL
:
u16
=
0
;
pub
const
VER_NDX_GLOBAL
:
u16
=
1
;
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Verdaux
<
E
:
Endian
>
{
pub
vda_name
:
U32
<
E
>
pub
vda_next
:
U32
<
E
>
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Verneed
<
E
:
Endian
>
{
pub
vn_version
:
U16
<
E
>
pub
vn_cnt
:
U16
<
E
>
pub
vn_file
:
U32
<
E
>
pub
vn_aux
:
U32
<
E
>
pub
vn_next
:
U32
<
E
>
}
pub
const
VER_NEED_NONE
:
u16
=
0
;
pub
const
VER_NEED_CURRENT
:
u16
=
1
;
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
Vernaux
<
E
:
Endian
>
{
pub
vna_hash
:
U32
<
E
>
pub
vna_flags
:
U16
<
E
>
pub
vna_other
:
U16
<
E
>
pub
vna_name
:
U32
<
E
>
pub
vna_next
:
U32
<
E
>
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
NoteHeader32
<
E
:
Endian
>
{
pub
n_namesz
:
U32
<
E
>
pub
n_descsz
:
U32
<
E
>
pub
n_type
:
U32
<
E
>
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
NoteHeader64
<
E
:
Endian
>
{
pub
n_namesz
:
U32
<
E
>
pub
n_descsz
:
U32
<
E
>
pub
n_type
:
U32
<
E
>
}
pub
const
ELF_NOTE_SOLARIS
:
&
[
u8
]
=
b
"
SUNW
Solaris
"
;
pub
const
NT_SOLARIS_PAGESIZE_HINT
:
u32
=
1
;
pub
const
ELF_NOTE_GNU
:
&
[
u8
]
=
b
"
GNU
"
;
pub
const
ELF_NOTE_GO
:
&
[
u8
]
=
b
"
Go
"
;
pub
const
NT_GNU_ABI_TAG
:
u32
=
1
;
pub
const
ELF_NOTE_OS_LINUX
:
u32
=
0
;
pub
const
ELF_NOTE_OS_GNU
:
u32
=
1
;
pub
const
ELF_NOTE_OS_SOLARIS2
:
u32
=
2
;
pub
const
ELF_NOTE_OS_FREEBSD
:
u32
=
3
;
pub
const
NT_GNU_HWCAP
:
u32
=
2
;
pub
const
NT_GNU_BUILD_ID
:
u32
=
3
;
pub
const
NT_GO_BUILD_ID
:
u32
=
4
;
pub
const
NT_GNU_GOLD_VERSION
:
u32
=
4
;
pub
const
NT_GNU_PROPERTY_TYPE_0
:
u32
=
5
;
pub
const
GNU_PROPERTY_STACK_SIZE
:
u32
=
1
;
pub
const
GNU_PROPERTY_NO_COPY_ON_PROTECTED
:
u32
=
2
;
pub
const
GNU_PROPERTY_UINT32_AND_LO
:
u32
=
0xb0000000
;
pub
const
GNU_PROPERTY_UINT32_AND_HI
:
u32
=
0xb0007fff
;
pub
const
GNU_PROPERTY_UINT32_OR_LO
:
u32
=
0xb0008000
;
pub
const
GNU_PROPERTY_UINT32_OR_HI
:
u32
=
0xb000ffff
;
pub
const
GNU_PROPERTY_1_NEEDED
:
u32
=
GNU_PROPERTY_UINT32_OR_LO
;
pub
const
GNU_PROPERTY_1_NEEDED_INDIRECT_EXTERN_ACCESS
:
u32
=
1
<
<
0
;
pub
const
GNU_PROPERTY_LOPROC
:
u32
=
0xc0000000
;
pub
const
GNU_PROPERTY_HIPROC
:
u32
=
0xdfffffff
;
pub
const
GNU_PROPERTY_LOUSER
:
u32
=
0xe0000000
;
pub
const
GNU_PROPERTY_HIUSER
:
u32
=
0xffffffff
;
pub
const
GNU_PROPERTY_AARCH64_FEATURE_1_AND
:
u32
=
0xc0000000
;
pub
const
GNU_PROPERTY_AARCH64_FEATURE_1_BTI
:
u32
=
1
<
<
0
;
pub
const
GNU_PROPERTY_AARCH64_FEATURE_1_PAC
:
u32
=
1
<
<
1
;
pub
const
GNU_PROPERTY_X86_UINT32_AND_LO
:
u32
=
0xc0000002
;
pub
const
GNU_PROPERTY_X86_UINT32_AND_HI
:
u32
=
0xc0007fff
;
pub
const
GNU_PROPERTY_X86_UINT32_OR_LO
:
u32
=
0xc0008000
;
pub
const
GNU_PROPERTY_X86_UINT32_OR_HI
:
u32
=
0xc000ffff
;
pub
const
GNU_PROPERTY_X86_UINT32_OR_AND_LO
:
u32
=
0xc0010000
;
pub
const
GNU_PROPERTY_X86_UINT32_OR_AND_HI
:
u32
=
0xc0017fff
;
pub
const
GNU_PROPERTY_X86_ISA_1_USED
:
u32
=
0xc0010002
;
pub
const
GNU_PROPERTY_X86_ISA_1_NEEDED
:
u32
=
0xc0008002
;
pub
const
GNU_PROPERTY_X86_FEATURE_1_AND
:
u32
=
0xc0000002
;
pub
const
GNU_PROPERTY_X86_ISA_1_BASELINE
:
u32
=
1
<
<
0
;
pub
const
GNU_PROPERTY_X86_ISA_1_V2
:
u32
=
1
<
<
1
;
pub
const
GNU_PROPERTY_X86_ISA_1_V3
:
u32
=
1
<
<
2
;
pub
const
GNU_PROPERTY_X86_ISA_1_V4
:
u32
=
1
<
<
3
;
pub
const
GNU_PROPERTY_X86_FEATURE_1_IBT
:
u32
=
1
<
<
0
;
pub
const
GNU_PROPERTY_X86_FEATURE_1_SHSTK
:
u32
=
1
<
<
1
;
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
HashHeader
<
E
:
Endian
>
{
pub
bucket_count
:
U32
<
E
>
pub
chain_count
:
U32
<
E
>
}
pub
fn
hash
(
name
:
&
[
u8
]
)
-
>
u32
{
let
mut
hash
=
0u32
;
for
byte
in
name
{
hash
=
hash
.
wrapping_mul
(
16
)
.
wrapping_add
(
u32
:
:
from
(
*
byte
)
)
;
hash
^
=
(
hash
>
>
24
)
&
0xf0
;
}
hash
&
0xfff_ffff
}
#
[
derive
(
Debug
Clone
Copy
)
]
#
[
repr
(
C
)
]
pub
struct
GnuHashHeader
<
E
:
Endian
>
{
pub
bucket_count
:
U32
<
E
>
pub
symbol_base
:
U32
<
E
>
pub
bloom_count
:
U32
<
E
>
pub
bloom_shift
:
U32
<
E
>
}
pub
fn
gnu_hash
(
name
:
&
[
u8
]
)
-
>
u32
{
let
mut
hash
=
5381u32
;
for
byte
in
name
{
hash
=
hash
.
wrapping_mul
(
33
)
.
wrapping_add
(
u32
:
:
from
(
*
byte
)
)
;
}
hash
}
pub
const
R_68K_NONE
:
u32
=
0
;
pub
const
R_68K_32
:
u32
=
1
;
pub
const
R_68K_16
:
u32
=
2
;
pub
const
R_68K_8
:
u32
=
3
;
pub
const
R_68K_PC32
:
u32
=
4
;
pub
const
R_68K_PC16
:
u32
=
5
;
pub
const
R_68K_PC8
:
u32
=
6
;
pub
const
R_68K_GOT32
:
u32
=
7
;
pub
const
R_68K_GOT16
:
u32
=
8
;
pub
const
R_68K_GOT8
:
u32
=
9
;
pub
const
R_68K_GOT32O
:
u32
=
10
;
pub
const
R_68K_GOT16O
:
u32
=
11
;
pub
const
R_68K_GOT8O
:
u32
=
12
;
pub
const
R_68K_PLT32
:
u32
=
13
;
pub
const
R_68K_PLT16
:
u32
=
14
;
pub
const
R_68K_PLT8
:
u32
=
15
;
pub
const
R_68K_PLT32O
:
u32
=
16
;
pub
const
R_68K_PLT16O
:
u32
=
17
;
pub
const
R_68K_PLT8O
:
u32
=
18
;
pub
const
R_68K_COPY
:
u32
=
19
;
pub
const
R_68K_GLOB_DAT
:
u32
=
20
;
pub
const
R_68K_JMP_SLOT
:
u32
=
21
;
pub
const
R_68K_RELATIVE
:
u32
=
22
;
pub
const
R_68K_TLS_GD32
:
u32
=
25
;
pub
const
R_68K_TLS_GD16
:
u32
=
26
;
pub
const
R_68K_TLS_GD8
:
u32
=
27
;
pub
const
R_68K_TLS_LDM32
:
u32
=
28
;
pub
const
R_68K_TLS_LDM16
:
u32
=
29
;
pub
const
R_68K_TLS_LDM8
:
u32
=
30
;
pub
const
R_68K_TLS_LDO32
:
u32
=
31
;
pub
const
R_68K_TLS_LDO16
:
u32
=
32
;
pub
const
R_68K_TLS_LDO8
:
u32
=
33
;
pub
const
R_68K_TLS_IE32
:
u32
=
34
;
pub
const
R_68K_TLS_IE16
:
u32
=
35
;
pub
const
R_68K_TLS_IE8
:
u32
=
36
;
pub
const
R_68K_TLS_LE32
:
u32
=
37
;
pub
const
R_68K_TLS_LE16
:
u32
=
38
;
pub
const
R_68K_TLS_LE8
:
u32
=
39
;
pub
const
R_68K_TLS_DTPMOD32
:
u32
=
40
;
pub
const
R_68K_TLS_DTPREL32
:
u32
=
41
;
pub
const
R_68K_TLS_TPREL32
:
u32
=
42
;
pub
const
R_386_NONE
:
u32
=
0
;
pub
const
R_386_32
:
u32
=
1
;
pub
const
R_386_PC32
:
u32
=
2
;
pub
const
R_386_GOT32
:
u32
=
3
;
pub
const
R_386_PLT32
:
u32
=
4
;
pub
const
R_386_COPY
:
u32
=
5
;
pub
const
R_386_GLOB_DAT
:
u32
=
6
;
pub
const
R_386_JMP_SLOT
:
u32
=
7
;
pub
const
R_386_RELATIVE
:
u32
=
8
;
pub
const
R_386_GOTOFF
:
u32
=
9
;
pub
const
R_386_GOTPC
:
u32
=
10
;
pub
const
R_386_32PLT
:
u32
=
11
;
pub
const
R_386_TLS_TPOFF
:
u32
=
14
;
pub
const
R_386_TLS_IE
:
u32
=
15
;
pub
const
R_386_TLS_GOTIE
:
u32
=
16
;
pub
const
R_386_TLS_LE
:
u32
=
17
;
pub
const
R_386_TLS_GD
:
u32
=
18
;
pub
const
R_386_TLS_LDM
:
u32
=
19
;
pub
const
R_386_16
:
u32
=
20
;
pub
const
R_386_PC16
:
u32
=
21
;
pub
const
R_386_8
:
u32
=
22
;
pub
const
R_386_PC8
:
u32
=
23
;
pub
const
R_386_TLS_GD_32
:
u32
=
24
;
pub
const
R_386_TLS_GD_PUSH
:
u32
=
25
;
pub
const
R_386_TLS_GD_CALL
:
u32
=
26
;
pub
const
R_386_TLS_GD_POP
:
u32
=
27
;
pub
const
R_386_TLS_LDM_32
:
u32
=
28
;
pub
const
R_386_TLS_LDM_PUSH
:
u32
=
29
;
pub
const
R_386_TLS_LDM_CALL
:
u32
=
30
;
pub
const
R_386_TLS_LDM_POP
:
u32
=
31
;
pub
const
R_386_TLS_LDO_32
:
u32
=
32
;
pub
const
R_386_TLS_IE_32
:
u32
=
33
;
pub
const
R_386_TLS_LE_32
:
u32
=
34
;
pub
const
R_386_TLS_DTPMOD32
:
u32
=
35
;
pub
const
R_386_TLS_DTPOFF32
:
u32
=
36
;
pub
const
R_386_TLS_TPOFF32
:
u32
=
37
;
pub
const
R_386_SIZE32
:
u32
=
38
;
pub
const
R_386_TLS_GOTDESC
:
u32
=
39
;
pub
const
R_386_TLS_DESC_CALL
:
u32
=
40
;
pub
const
R_386_TLS_DESC
:
u32
=
41
;
pub
const
R_386_IRELATIVE
:
u32
=
42
;
pub
const
R_386_GOT32X
:
u32
=
43
;
pub
const
STT_SPARC_REGISTER
:
u8
=
13
;
pub
const
EF_SPARCV9_MM
:
u32
=
3
;
pub
const
EF_SPARCV9_TSO
:
u32
=
0
;
pub
const
EF_SPARCV9_PSO
:
u32
=
1
;
pub
const
EF_SPARCV9_RMO
:
u32
=
2
;
pub
const
EF_SPARC_LEDATA
:
u32
=
0x80_0000
;
pub
const
EF_SPARC_EXT_MASK
:
u32
=
0xFF_FF00
;
pub
const
EF_SPARC_32PLUS
:
u32
=
0x00_0100
;
pub
const
EF_SPARC_SUN_US1
:
u32
=
0x00_0200
;
pub
const
EF_SPARC_HAL_R1
:
u32
=
0x00_0400
;
pub
const
EF_SPARC_SUN_US3
:
u32
=
0x00_0800
;
pub
const
R_SPARC_NONE
:
u32
=
0
;
pub
const
R_SPARC_8
:
u32
=
1
;
pub
const
R_SPARC_16
:
u32
=
2
;
pub
const
R_SPARC_32
:
u32
=
3
;
pub
const
R_SPARC_DISP8
:
u32
=
4
;
pub
const
R_SPARC_DISP16
:
u32
=
5
;
pub
const
R_SPARC_DISP32
:
u32
=
6
;
pub
const
R_SPARC_WDISP30
:
u32
=
7
;
pub
const
R_SPARC_WDISP22
:
u32
=
8
;
pub
const
R_SPARC_HI22
:
u32
=
9
;
pub
const
R_SPARC_22
:
u32
=
10
;
pub
const
R_SPARC_13
:
u32
=
11
;
pub
const
R_SPARC_LO10
:
u32
=
12
;
pub
const
R_SPARC_GOT10
:
u32
=
13
;
pub
const
R_SPARC_GOT13
:
u32
=
14
;
pub
const
R_SPARC_GOT22
:
u32
=
15
;
pub
const
R_SPARC_PC10
:
u32
=
16
;
pub
const
R_SPARC_PC22
:
u32
=
17
;
pub
const
R_SPARC_WPLT30
:
u32
=
18
;
pub
const
R_SPARC_COPY
:
u32
=
19
;
pub
const
R_SPARC_GLOB_DAT
:
u32
=
20
;
pub
const
R_SPARC_JMP_SLOT
:
u32
=
21
;
pub
const
R_SPARC_RELATIVE
:
u32
=
22
;
pub
const
R_SPARC_UA32
:
u32
=
23
;
pub
const
R_SPARC_PLT32
:
u32
=
24
;
pub
const
R_SPARC_HIPLT22
:
u32
=
25
;
pub
const
R_SPARC_LOPLT10
:
u32
=
26
;
pub
const
R_SPARC_PCPLT32
:
u32
=
27
;
pub
const
R_SPARC_PCPLT22
:
u32
=
28
;
pub
const
R_SPARC_PCPLT10
:
u32
=
29
;
pub
const
R_SPARC_10
:
u32
=
30
;
pub
const
R_SPARC_11
:
u32
=
31
;
pub
const
R_SPARC_64
:
u32
=
32
;
pub
const
R_SPARC_OLO10
:
u32
=
33
;
pub
const
R_SPARC_HH22
:
u32
=
34
;
pub
const
R_SPARC_HM10
:
u32
=
35
;
pub
const
R_SPARC_LM22
:
u32
=
36
;
pub
const
R_SPARC_PC_HH22
:
u32
=
37
;
pub
const
R_SPARC_PC_HM10
:
u32
=
38
;
pub
const
R_SPARC_PC_LM22
:
u32
=
39
;
pub
const
R_SPARC_WDISP16
:
u32
=
40
;
pub
const
R_SPARC_WDISP19
:
u32
=
41
;
pub
const
R_SPARC_GLOB_JMP
:
u32
=
42
;
pub
const
R_SPARC_7
:
u32
=
43
;
pub
const
R_SPARC_5
:
u32
=
44
;
pub
const
R_SPARC_6
:
u32
=
45
;
pub
const
R_SPARC_DISP64
:
u32
=
46
;
pub
const
R_SPARC_PLT64
:
u32
=
47
;
pub
const
R_SPARC_HIX22
:
u32
=
48
;
pub
const
R_SPARC_LOX10
:
u32
=
49
;
pub
const
R_SPARC_H44
:
u32
=
50
;
pub
const
R_SPARC_M44
:
u32
=
51
;
pub
const
R_SPARC_L44
:
u32
=
52
;
pub
const
R_SPARC_REGISTER
:
u32
=
53
;
pub
const
R_SPARC_UA64
:
u32
=
54
;
pub
const
R_SPARC_UA16
:
u32
=
55
;
pub
const
R_SPARC_TLS_GD_HI22
:
u32
=
56
;
pub
const
R_SPARC_TLS_GD_LO10
:
u32
=
57
;
pub
const
R_SPARC_TLS_GD_ADD
:
u32
=
58
;
pub
const
R_SPARC_TLS_GD_CALL
:
u32
=
59
;
pub
const
R_SPARC_TLS_LDM_HI22
:
u32
=
60
;
pub
const
R_SPARC_TLS_LDM_LO10
:
u32
=
61
;
pub
const
R_SPARC_TLS_LDM_ADD
:
u32
=
62
;
pub
const
R_SPARC_TLS_LDM_CALL
:
u32
=
63
;
pub
const
R_SPARC_TLS_LDO_HIX22
:
u32
=
64
;
pub
const
R_SPARC_TLS_LDO_LOX10
:
u32
=
65
;
pub
const
R_SPARC_TLS_LDO_ADD
:
u32
=
66
;
pub
const
R_SPARC_TLS_IE_HI22
:
u32
=
67
;
pub
const
R_SPARC_TLS_IE_LO10
:
u32
=
68
;
pub
const
R_SPARC_TLS_IE_LD
:
u32
=
69
;
pub
const
R_SPARC_TLS_IE_LDX
:
u32
=
70
;
pub
const
R_SPARC_TLS_IE_ADD
:
u32
=
71
;
pub
const
R_SPARC_TLS_LE_HIX22
:
u32
=
72
;
pub
const
R_SPARC_TLS_LE_LOX10
:
u32
=
73
;
pub
const
R_SPARC_TLS_DTPMOD32
:
u32
=
74
;
pub
const
R_SPARC_TLS_DTPMOD64
:
u32
=
75
;
pub
const
R_SPARC_TLS_DTPOFF32
:
u32
=
76
;
pub
const
R_SPARC_TLS_DTPOFF64
:
u32
=
77
;
pub
const
R_SPARC_TLS_TPOFF32
:
u32
=
78
;
pub
const
R_SPARC_TLS_TPOFF64
:
u32
=
79
;
pub
const
R_SPARC_GOTDATA_HIX22
:
u32
=
80
;
pub
const
R_SPARC_GOTDATA_LOX10
:
u32
=
81
;
pub
const
R_SPARC_GOTDATA_OP_HIX22
:
u32
=
82
;
pub
const
R_SPARC_GOTDATA_OP_LOX10
:
u32
=
83
;
pub
const
R_SPARC_GOTDATA_OP
:
u32
=
84
;
pub
const
R_SPARC_H34
:
u32
=
85
;
pub
const
R_SPARC_SIZE32
:
u32
=
86
;
pub
const
R_SPARC_SIZE64
:
u32
=
87
;
pub
const
R_SPARC_WDISP10
:
u32
=
88
;
pub
const
R_SPARC_JMP_IREL
:
u32
=
248
;
pub
const
R_SPARC_IRELATIVE
:
u32
=
249
;
pub
const
R_SPARC_GNU_VTINHERIT
:
u32
=
250
;
pub
const
R_SPARC_GNU_VTENTRY
:
u32
=
251
;
pub
const
R_SPARC_REV32
:
u32
=
252
;
pub
const
DT_SPARC_REGISTER
:
u32
=
0x7000_0001
;
pub
const
EF_MIPS_NOREORDER
:
u32
=
1
;
pub
const
EF_MIPS_PIC
:
u32
=
2
;
pub
const
EF_MIPS_CPIC
:
u32
=
4
;
pub
const
EF_MIPS_XGOT
:
u32
=
8
;
pub
const
EF_MIPS_64BIT_WHIRL
:
u32
=
16
;
pub
const
EF_MIPS_ABI2
:
u32
=
32
;
pub
const
EF_MIPS_ABI_ON32
:
u32
=
64
;
pub
const
EF_MIPS_FP64
:
u32
=
512
;
pub
const
EF_MIPS_NAN2008
:
u32
=
1024
;
pub
const
EF_MIPS_ARCH
:
u32
=
0xf000_0000
;
pub
const
EF_MIPS_ABI_O32
:
u32
=
0x0000_1000
;
pub
const
EF_MIPS_ABI_O64
:
u32
=
0x0000_2000
;
pub
const
EF_MIPS_ABI_EABI32
:
u32
=
0x0000_3000
;
pub
const
EF_MIPS_ABI_EABI64
:
u32
=
0x0000_4000
;
pub
const
EF_MIPS_ABI
:
u32
=
0x0000_f000
;
pub
const
EF_MIPS_ARCH_1
:
u32
=
0x0000_0000
;
pub
const
EF_MIPS_ARCH_2
:
u32
=
0x1000_0000
;
pub
const
EF_MIPS_ARCH_3
:
u32
=
0x2000_0000
;
pub
const
EF_MIPS_ARCH_4
:
u32
=
0x3000_0000
;
pub
const
EF_MIPS_ARCH_5
:
u32
=
0x4000_0000
;
pub
const
EF_MIPS_ARCH_32
:
u32
=
0x5000_0000
;
pub
const
EF_MIPS_ARCH_64
:
u32
=
0x6000_0000
;
pub
const
EF_MIPS_ARCH_32R2
:
u32
=
0x7000_0000
;
pub
const
EF_MIPS_ARCH_64R2
:
u32
=
0x8000_0000
;
pub
const
EF_MIPS_ARCH_32R6
:
u32
=
0x9000_0000
;
pub
const
EF_MIPS_ARCH_64R6
:
u32
=
0xa000_0000
;
pub
const
SHN_MIPS_ACOMMON
:
u16
=
0xff00
;
pub
const
SHN_MIPS_TEXT
:
u16
=
0xff01
;
pub
const
SHN_MIPS_DATA
:
u16
=
0xff02
;
pub
const
SHN_MIPS_SCOMMON
:
u16
=
0xff03
;
pub
const
SHN_MIPS_SUNDEFINED
:
u16
=
0xff04
;
pub
const
SHT_MIPS_LIBLIST
:
u32
=
0x7000_0000
;
pub
const
SHT_MIPS_MSYM
:
u32
=
0x7000_0001
;
pub
const
SHT_MIPS_CONFLICT
:
u32
=
0x7000_0002
;
pub
const
SHT_MIPS_GPTAB
:
u32
=
0x7000_0003
;
pub
const
SHT_MIPS_UCODE
:
u32
=
0x7000_0004
;
pub
const
SHT_MIPS_DEBUG
:
u32
=
0x7000_0005
;
pub
const
SHT_MIPS_REGINFO
:
u32
=
0x7000_0006
;
pub
const
SHT_MIPS_PACKAGE
:
u32
=
0x7000_0007
;
pub
const
SHT_MIPS_PACKSYM
:
u32
=
0x7000_0008
;
pub
const
SHT_MIPS_RELD
:
u32
=
0x7000_0009
;
pub
const
SHT_MIPS_IFACE
:
u32
=
0x7000_000b
;
pub
const
SHT_MIPS_CONTENT
:
u32
=
0x7000_000c
;
pub
const
SHT_MIPS_OPTIONS
:
u32
=
0x7000_000d
;
pub
const
SHT_MIPS_SHDR
:
u32
=
0x7000_0010
;
pub
const
SHT_MIPS_FDESC
:
u32
=
0x7000_0011
;
pub
const
SHT_MIPS_EXTSYM
:
u32
=
0x7000_0012
;
pub
const
SHT_MIPS_DENSE
:
u32
=
0x7000_0013
;
pub
const
SHT_MIPS_PDESC
:
u32
=
0x7000_0014
;
pub
const
SHT_MIPS_LOCSYM
:
u32
=
0x7000_0015
;
pub
const
SHT_MIPS_AUXSYM
:
u32
=
0x7000_0016
;
pub
const
SHT_MIPS_OPTSYM
:
u32
=
0x7000_0017
;
pub
const
SHT_MIPS_LOCSTR
:
u32
=
0x7000_0018
;
pub
const
SHT_MIPS_LINE
:
u32
=
0x7000_0019
;
pub
const
SHT_MIPS_RFDESC
:
u32
=
0x7000_001a
;
pub
const
SHT_MIPS_DELTASYM
:
u32
=
0x7000_001b
;
pub
const
SHT_MIPS_DELTAINST
:
u32
=
0x7000_001c
;
pub
const
SHT_MIPS_DELTACLASS
:
u32
=
0x7000_001d
;
pub
const
SHT_MIPS_DWARF
:
u32
=
0x7000_001e
;
pub
const
SHT_MIPS_DELTADECL
:
u32
=
0x7000_001f
;
pub
const
SHT_MIPS_SYMBOL_LIB
:
u32
=
0x7000_0020
;
pub
const
SHT_MIPS_EVENTS
:
u32
=
0x7000_0021
;
pub
const
SHT_MIPS_TRANSLATE
:
u32
=
0x7000_0022
;
pub
const
SHT_MIPS_PIXIE
:
u32
=
0x7000_0023
;
pub
const
SHT_MIPS_XLATE
:
u32
=
0x7000_0024
;
pub
const
SHT_MIPS_XLATE_DEBUG
:
u32
=
0x7000_0025
;
pub
const
SHT_MIPS_WHIRL
:
u32
=
0x7000_0026
;
pub
const
SHT_MIPS_EH_REGION
:
u32
=
0x7000_0027
;
pub
const
SHT_MIPS_XLATE_OLD
:
u32
=
0x7000_0028
;
pub
const
SHT_MIPS_PDR_EXCEPTION
:
u32
=
0x7000_0029
;
pub
const
SHF_MIPS_GPREL
:
u32
=
0x1000_0000
;
pub
const
SHF_MIPS_MERGE
:
u32
=
0x2000_0000
;
pub
const
SHF_MIPS_ADDR
:
u32
=
0x4000_0000
;
pub
const
SHF_MIPS_STRINGS
:
u32
=
0x8000_0000
;
pub
const
SHF_MIPS_NOSTRIP
:
u32
=
0x0800_0000
;
pub
const
SHF_MIPS_LOCAL
:
u32
=
0x0400_0000
;
pub
const
SHF_MIPS_NAMES
:
u32
=
0x0200_0000
;
pub
const
SHF_MIPS_NODUPE
:
u32
=
0x0100_0000
;
pub
const
STO_MIPS_PLT
:
u8
=
0x8
;
pub
const
STO_MIPS_SC_ALIGN_UNUSED
:
u8
=
0xff
;
pub
const
STB_MIPS_SPLIT_COMMON
:
u8
=
13
;
pub
const
ODK_NULL
:
u32
=
0
;
pub
const
ODK_REGINFO
:
u32
=
1
;
pub
const
ODK_EXCEPTIONS
:
u32
=
2
;
pub
const
ODK_PAD
:
u32
=
3
;
pub
const
ODK_HWPATCH
:
u32
=
4
;
pub
const
ODK_FILL
:
u32
=
5
;
pub
const
ODK_TAGS
:
u32
=
6
;
pub
const
ODK_HWAND
:
u32
=
7
;
pub
const
ODK_HWOR
:
u32
=
8
;
pub
const
OEX_FPU_MIN
:
u32
=
0x1f
;
pub
const
OEX_FPU_MAX
:
u32
=
0x1f00
;
pub
const
OEX_PAGE0
:
u32
=
0x10000
;
pub
const
OEX_SMM
:
u32
=
0x20000
;
pub
const
OEX_FPDBUG
:
u32
=
0x40000
;
pub
const
OEX_PRECISEFP
:
u32
=
OEX_FPDBUG
;
pub
const
OEX_DISMISS
:
u32
=
0x80000
;
pub
const
OEX_FPU_INVAL
:
u32
=
0x10
;
pub
const
OEX_FPU_DIV0
:
u32
=
0x08
;
pub
const
OEX_FPU_OFLO
:
u32
=
0x04
;
pub
const
OEX_FPU_UFLO
:
u32
=
0x02
;
pub
const
OEX_FPU_INEX
:
u32
=
0x01
;
pub
const
OHW_R4KEOP
:
u32
=
0x1
;
pub
const
OHW_R8KPFETCH
:
u32
=
0x2
;
pub
const
OHW_R5KEOP
:
u32
=
0x4
;
pub
const
OHW_R5KCVTL
:
u32
=
0x8
;
pub
const
OPAD_PREFIX
:
u32
=
0x1
;
pub
const
OPAD_POSTFIX
:
u32
=
0x2
;
pub
const
OPAD_SYMBOL
:
u32
=
0x4
;
pub
const
OHWA0_R4KEOP_CHECKED
:
u32
=
0x0000_0001
;
pub
const
OHWA1_R4KEOP_CLEAN
:
u32
=
0x0000_0002
;
pub
const
R_MIPS_NONE
:
u32
=
0
;
pub
const
R_MIPS_16
:
u32
=
1
;
pub
const
R_MIPS_32
:
u32
=
2
;
pub
const
R_MIPS_REL32
:
u32
=
3
;
pub
const
R_MIPS_26
:
u32
=
4
;
pub
const
R_MIPS_HI16
:
u32
=
5
;
pub
const
R_MIPS_LO16
:
u32
=
6
;
pub
const
R_MIPS_GPREL16
:
u32
=
7
;
pub
const
R_MIPS_LITERAL
:
u32
=
8
;
pub
const
R_MIPS_GOT16
:
u32
=
9
;
pub
const
R_MIPS_PC16
:
u32
=
10
;
pub
const
R_MIPS_CALL16
:
u32
=
11
;
pub
const
R_MIPS_GPREL32
:
u32
=
12
;
pub
const
R_MIPS_SHIFT5
:
u32
=
16
;
pub
const
R_MIPS_SHIFT6
:
u32
=
17
;
pub
const
R_MIPS_64
:
u32
=
18
;
pub
const
R_MIPS_GOT_DISP
:
u32
=
19
;
pub
const
R_MIPS_GOT_PAGE
:
u32
=
20
;
pub
const
R_MIPS_GOT_OFST
:
u32
=
21
;
pub
const
R_MIPS_GOT_HI16
:
u32
=
22
;
pub
const
R_MIPS_GOT_LO16
:
u32
=
23
;
pub
const
R_MIPS_SUB
:
u32
=
24
;
pub
const
R_MIPS_INSERT_A
:
u32
=
25
;
pub
const
R_MIPS_INSERT_B
:
u32
=
26
;
pub
const
R_MIPS_DELETE
:
u32
=
27
;
pub
const
R_MIPS_HIGHER
:
u32
=
28
;
pub
const
R_MIPS_HIGHEST
:
u32
=
29
;
pub
const
R_MIPS_CALL_HI16
:
u32
=
30
;
pub
const
R_MIPS_CALL_LO16
:
u32
=
31
;
pub
const
R_MIPS_SCN_DISP
:
u32
=
32
;
pub
const
R_MIPS_REL16
:
u32
=
33
;
pub
const
R_MIPS_ADD_IMMEDIATE
:
u32
=
34
;
pub
const
R_MIPS_PJUMP
:
u32
=
35
;
pub
const
R_MIPS_RELGOT
:
u32
=
36
;
pub
const
R_MIPS_JALR
:
u32
=
37
;
pub
const
R_MIPS_TLS_DTPMOD32
:
u32
=
38
;
pub
const
R_MIPS_TLS_DTPREL32
:
u32
=
39
;
pub
const
R_MIPS_TLS_DTPMOD64
:
u32
=
40
;
pub
const
R_MIPS_TLS_DTPREL64
:
u32
=
41
;
pub
const
R_MIPS_TLS_GD
:
u32
=
42
;
pub
const
R_MIPS_TLS_LDM
:
u32
=
43
;
pub
const
R_MIPS_TLS_DTPREL_HI16
:
u32
=
44
;
pub
const
R_MIPS_TLS_DTPREL_LO16
:
u32
=
45
;
pub
const
R_MIPS_TLS_GOTTPREL
:
u32
=
46
;
pub
const
R_MIPS_TLS_TPREL32
:
u32
=
47
;
pub
const
R_MIPS_TLS_TPREL64
:
u32
=
48
;
pub
const
R_MIPS_TLS_TPREL_HI16
:
u32
=
49
;
pub
const
R_MIPS_TLS_TPREL_LO16
:
u32
=
50
;
pub
const
R_MIPS_GLOB_DAT
:
u32
=
51
;
pub
const
R_MIPS_COPY
:
u32
=
126
;
pub
const
R_MIPS_JUMP_SLOT
:
u32
=
127
;
pub
const
PT_MIPS_REGINFO
:
u32
=
0x7000_0000
;
pub
const
PT_MIPS_RTPROC
:
u32
=
0x7000_0001
;
pub
const
PT_MIPS_OPTIONS
:
u32
=
0x7000_0002
;
pub
const
PT_MIPS_ABIFLAGS
:
u32
=
0x7000_0003
;
pub
const
PF_MIPS_LOCAL
:
u32
=
0x1000_0000
;
pub
const
DT_MIPS_RLD_VERSION
:
u32
=
0x7000_0001
;
pub
const
DT_MIPS_TIME_STAMP
:
u32
=
0x7000_0002
;
pub
const
DT_MIPS_ICHECKSUM
:
u32
=
0x7000_0003
;
pub
const
DT_MIPS_IVERSION
:
u32
=
0x7000_0004
;
pub
const
DT_MIPS_FLAGS
:
u32
=
0x7000_0005
;
pub
const
DT_MIPS_BASE_ADDRESS
:
u32
=
0x7000_0006
;
pub
const
DT_MIPS_MSYM
:
u32
=
0x7000_0007
;
pub
const
DT_MIPS_CONFLICT
:
u32
=
0x7000_0008
;
pub
const
DT_MIPS_LIBLIST
:
u32
=
0x7000_0009
;
pub
const
DT_MIPS_LOCAL_GOTNO
:
u32
=
0x7000_000a
;
pub
const
DT_MIPS_CONFLICTNO
:
u32
=
0x7000_000b
;
pub
const
DT_MIPS_LIBLISTNO
:
u32
=
0x7000_0010
;
pub
const
DT_MIPS_SYMTABNO
:
u32
=
0x7000_0011
;
pub
const
DT_MIPS_UNREFEXTNO
:
u32
=
0x7000_0012
;
pub
const
DT_MIPS_GOTSYM
:
u32
=
0x7000_0013
;
pub
const
DT_MIPS_HIPAGENO
:
u32
=
0x7000_0014
;
pub
const
DT_MIPS_RLD_MAP
:
u32
=
0x7000_0016
;
pub
const
DT_MIPS_DELTA_CLASS
:
u32
=
0x7000_0017
;
pub
const
DT_MIPS_DELTA_CLASS_NO
:
u32
=
0x7000_0018
;
pub
const
DT_MIPS_DELTA_INSTANCE
:
u32
=
0x7000_0019
;
pub
const
DT_MIPS_DELTA_INSTANCE_NO
:
u32
=
0x7000_001a
;
pub
const
DT_MIPS_DELTA_RELOC
:
u32
=
0x7000_001b
;
pub
const
DT_MIPS_DELTA_RELOC_NO
:
u32
=
0x7000_001c
;
pub
const
DT_MIPS_DELTA_SYM
:
u32
=
0x7000_001d
;
pub
const
DT_MIPS_DELTA_SYM_NO
:
u32
=
0x7000_001e
;
pub
const
DT_MIPS_DELTA_CLASSSYM
:
u32
=
0x7000_0020
;
pub
const
DT_MIPS_DELTA_CLASSSYM_NO
:
u32
=
0x7000_0021
;
pub
const
DT_MIPS_CXX_FLAGS
:
u32
=
0x7000_0022
;
pub
const
DT_MIPS_PIXIE_INIT
:
u32
=
0x7000_0023
;
pub
const
DT_MIPS_SYMBOL_LIB
:
u32
=
0x7000_0024
;
pub
const
DT_MIPS_LOCALPAGE_GOTIDX
:
u32
=
0x7000_0025
;
pub
const
DT_MIPS_LOCAL_GOTIDX
:
u32
=
0x7000_0026
;
pub
const
DT_MIPS_HIDDEN_GOTIDX
:
u32
=
0x7000_0027
;
pub
const
DT_MIPS_PROTECTED_GOTIDX
:
u32
=
0x7000_0028
;
pub
const
DT_MIPS_OPTIONS
:
u32
=
0x7000_0029
;
pub
const
DT_MIPS_INTERFACE
:
u32
=
0x7000_002a
;
pub
const
DT_MIPS_DYNSTR_ALIGN
:
u32
=
0x7000_002b
;
pub
const
DT_MIPS_INTERFACE_SIZE
:
u32
=
0x7000_002c
;
pub
const
DT_MIPS_RLD_TEXT_RESOLVE_ADDR
:
u32
=
0x7000_002d
;
pub
const
DT_MIPS_PERF_SUFFIX
:
u32
=
0x7000_002e
;
pub
const
DT_MIPS_COMPACT_SIZE
:
u32
=
0x7000_002f
;
pub
const
DT_MIPS_GP_VALUE
:
u32
=
0x7000_0030
;
pub
const
DT_MIPS_AUX_DYNAMIC
:
u32
=
0x7000_0031
;
pub
const
DT_MIPS_PLTGOT
:
u32
=
0x7000_0032
;
pub
const
DT_MIPS_RWPLT
:
u32
=
0x7000_0034
;
pub
const
DT_MIPS_RLD_MAP_REL
:
u32
=
0x7000_0035
;
pub
const
RHF_NONE
:
u32
=
0
;
pub
const
RHF_QUICKSTART
:
u32
=
1
<
<
0
;
pub
const
RHF_NOTPOT
:
u32
=
1
<
<
1
;
pub
const
RHF_NO_LIBRARY_REPLACEMENT
:
u32
=
1
<
<
2
;
pub
const
RHF_NO_MOVE
:
u32
=
1
<
<
3
;
pub
const
RHF_SGI_ONLY
:
u32
=
1
<
<
4
;
pub
const
RHF_GUARANTEE_INIT
:
u32
=
1
<
<
5
;
pub
const
RHF_DELTA_C_PLUS_PLUS
:
u32
=
1
<
<
6
;
pub
const
RHF_GUARANTEE_START_INIT
:
u32
=
1
<
<
7
;
pub
const
RHF_PIXIE
:
u32
=
1
<
<
8
;
pub
const
RHF_DEFAULT_DELAY_LOAD
:
u32
=
1
<
<
9
;
pub
const
RHF_REQUICKSTART
:
u32
=
1
<
<
10
;
pub
const
RHF_REQUICKSTARTED
:
u32
=
1
<
<
11
;
pub
const
RHF_CORD
:
u32
=
1
<
<
12
;
pub
const
RHF_NO_UNRES_UNDEF
:
u32
=
1
<
<
13
;
pub
const
RHF_RLD_ORDER_SAFE
:
u32
=
1
<
<
14
;
pub
const
LL_NONE
:
u32
=
0
;
pub
const
LL_EXACT_MATCH
:
u32
=
1
<
<
0
;
pub
const
LL_IGNORE_INT_VER
:
u32
=
1
<
<
1
;
pub
const
LL_REQUIRE_MINOR
:
u32
=
1
<
<
2
;
pub
const
LL_EXPORTS
:
u32
=
1
<
<
3
;
pub
const
LL_DELAY_LOAD
:
u32
=
1
<
<
4
;
pub
const
LL_DELTA
:
u32
=
1
<
<
5
;
pub
const
EF_PARISC_TRAPNIL
:
u32
=
0x0001_0000
;
pub
const
EF_PARISC_EXT
:
u32
=
0x0002_0000
;
pub
const
EF_PARISC_LSB
:
u32
=
0x0004_0000
;
pub
const
EF_PARISC_WIDE
:
u32
=
0x0008_0000
;
pub
const
EF_PARISC_NO_KABP
:
u32
=
0x0010_0000
;
pub
const
EF_PARISC_LAZYSWAP
:
u32
=
0x0040_0000
;
pub
const
EF_PARISC_ARCH
:
u32
=
0x0000_ffff
;
pub
const
EFA_PARISC_1_0
:
u32
=
0x020b
;
pub
const
EFA_PARISC_1_1
:
u32
=
0x0210
;
pub
const
EFA_PARISC_2_0
:
u32
=
0x0214
;
pub
const
SHN_PARISC_ANSI_COMMON
:
u16
=
0xff00
;
pub
const
SHN_PARISC_HUGE_COMMON
:
u16
=
0xff01
;
pub
const
SHT_PARISC_EXT
:
u32
=
0x7000_0000
;
pub
const
SHT_PARISC_UNWIND
:
u32
=
0x7000_0001
;
pub
const
SHT_PARISC_DOC
:
u32
=
0x7000_0002
;
pub
const
SHF_PARISC_SHORT
:
u32
=
0x2000_0000
;
pub
const
SHF_PARISC_HUGE
:
u32
=
0x4000_0000
;
pub
const
SHF_PARISC_SBP
:
u32
=
0x8000_0000
;
pub
const
STT_PARISC_MILLICODE
:
u8
=
13
;
pub
const
STT_HP_OPAQUE
:
u8
=
STT_LOOS
+
0x1
;
pub
const
STT_HP_STUB
:
u8
=
STT_LOOS
+
0x2
;
pub
const
R_PARISC_NONE
:
u32
=
0
;
pub
const
R_PARISC_DIR32
:
u32
=
1
;
pub
const
R_PARISC_DIR21L
:
u32
=
2
;
pub
const
R_PARISC_DIR17R
:
u32
=
3
;
pub
const
R_PARISC_DIR17F
:
u32
=
4
;
pub
const
R_PARISC_DIR14R
:
u32
=
6
;
pub
const
R_PARISC_PCREL32
:
u32
=
9
;
pub
const
R_PARISC_PCREL21L
:
u32
=
10
;
pub
const
R_PARISC_PCREL17R
:
u32
=
11
;
pub
const
R_PARISC_PCREL17F
:
u32
=
12
;
pub
const
R_PARISC_PCREL14R
:
u32
=
14
;
pub
const
R_PARISC_DPREL21L
:
u32
=
18
;
pub
const
R_PARISC_DPREL14R
:
u32
=
22
;
pub
const
R_PARISC_GPREL21L
:
u32
=
26
;
pub
const
R_PARISC_GPREL14R
:
u32
=
30
;
pub
const
R_PARISC_LTOFF21L
:
u32
=
34
;
pub
const
R_PARISC_LTOFF14R
:
u32
=
38
;
pub
const
R_PARISC_SECREL32
:
u32
=
41
;
pub
const
R_PARISC_SEGBASE
:
u32
=
48
;
pub
const
R_PARISC_SEGREL32
:
u32
=
49
;
pub
const
R_PARISC_PLTOFF21L
:
u32
=
50
;
pub
const
R_PARISC_PLTOFF14R
:
u32
=
54
;
pub
const
R_PARISC_LTOFF_FPTR32
:
u32
=
57
;
pub
const
R_PARISC_LTOFF_FPTR21L
:
u32
=
58
;
pub
const
R_PARISC_LTOFF_FPTR14R
:
u32
=
62
;
pub
const
R_PARISC_FPTR64
:
u32
=
64
;
pub
const
R_PARISC_PLABEL32
:
u32
=
65
;
pub
const
R_PARISC_PLABEL21L
:
u32
=
66
;
pub
const
R_PARISC_PLABEL14R
:
u32
=
70
;
pub
const
R_PARISC_PCREL64
:
u32
=
72
;
pub
const
R_PARISC_PCREL22F
:
u32
=
74
;
pub
const
R_PARISC_PCREL14WR
:
u32
=
75
;
pub
const
R_PARISC_PCREL14DR
:
u32
=
76
;
pub
const
R_PARISC_PCREL16F
:
u32
=
77
;
pub
const
R_PARISC_PCREL16WF
:
u32
=
78
;
pub
const
R_PARISC_PCREL16DF
:
u32
=
79
;
pub
const
R_PARISC_DIR64
:
u32
=
80
;
pub
const
R_PARISC_DIR14WR
:
u32
=
83
;
pub
const
R_PARISC_DIR14DR
:
u32
=
84
;
pub
const
R_PARISC_DIR16F
:
u32
=
85
;
pub
const
R_PARISC_DIR16WF
:
u32
=
86
;
pub
const
R_PARISC_DIR16DF
:
u32
=
87
;
pub
const
R_PARISC_GPREL64
:
u32
=
88
;
pub
const
R_PARISC_GPREL14WR
:
u32
=
91
;
pub
const
R_PARISC_GPREL14DR
:
u32
=
92
;
pub
const
R_PARISC_GPREL16F
:
u32
=
93
;
pub
const
R_PARISC_GPREL16WF
:
u32
=
94
;
pub
const
R_PARISC_GPREL16DF
:
u32
=
95
;
pub
const
R_PARISC_LTOFF64
:
u32
=
96
;
pub
const
R_PARISC_LTOFF14WR
:
u32
=
99
;
pub
const
R_PARISC_LTOFF14DR
:
u32
=
100
;
pub
const
R_PARISC_LTOFF16F
:
u32
=
101
;
pub
const
R_PARISC_LTOFF16WF
:
u32
=
102
;
pub
const
R_PARISC_LTOFF16DF
:
u32
=
103
;
pub
const
R_PARISC_SECREL64
:
u32
=
104
;
pub
const
R_PARISC_SEGREL64
:
u32
=
112
;
pub
const
R_PARISC_PLTOFF14WR
:
u32
=
115
;
pub
const
R_PARISC_PLTOFF14DR
:
u32
=
116
;
pub
const
R_PARISC_PLTOFF16F
:
u32
=
117
;
pub
const
R_PARISC_PLTOFF16WF
:
u32
=
118
;
pub
const
R_PARISC_PLTOFF16DF
:
u32
=
119
;
pub
const
R_PARISC_LTOFF_FPTR64
:
u32
=
120
;
pub
const
R_PARISC_LTOFF_FPTR14WR
:
u32
=
123
;
pub
const
R_PARISC_LTOFF_FPTR14DR
:
u32
=
124
;
pub
const
R_PARISC_LTOFF_FPTR16F
:
u32
=
125
;
pub
const
R_PARISC_LTOFF_FPTR16WF
:
u32
=
126
;
pub
const
R_PARISC_LTOFF_FPTR16DF
:
u32
=
127
;
pub
const
R_PARISC_LORESERVE
:
u32
=
128
;
pub
const
R_PARISC_COPY
:
u32
=
128
;
pub
const
R_PARISC_IPLT
:
u32
=
129
;
pub
const
R_PARISC_EPLT
:
u32
=
130
;
pub
const
R_PARISC_TPREL32
:
u32
=
153
;
pub
const
R_PARISC_TPREL21L
:
u32
=
154
;
pub
const
R_PARISC_TPREL14R
:
u32
=
158
;
pub
const
R_PARISC_LTOFF_TP21L
:
u32
=
162
;
pub
const
R_PARISC_LTOFF_TP14R
:
u32
=
166
;
pub
const
R_PARISC_LTOFF_TP14F
:
u32
=
167
;
pub
const
R_PARISC_TPREL64
:
u32
=
216
;
pub
const
R_PARISC_TPREL14WR
:
u32
=
219
;
pub
const
R_PARISC_TPREL14DR
:
u32
=
220
;
pub
const
R_PARISC_TPREL16F
:
u32
=
221
;
pub
const
R_PARISC_TPREL16WF
:
u32
=
222
;
pub
const
R_PARISC_TPREL16DF
:
u32
=
223
;
pub
const
R_PARISC_LTOFF_TP64
:
u32
=
224
;
pub
const
R_PARISC_LTOFF_TP14WR
:
u32
=
227
;
pub
const
R_PARISC_LTOFF_TP14DR
:
u32
=
228
;
pub
const
R_PARISC_LTOFF_TP16F
:
u32
=
229
;
pub
const
R_PARISC_LTOFF_TP16WF
:
u32
=
230
;
pub
const
R_PARISC_LTOFF_TP16DF
:
u32
=
231
;
pub
const
R_PARISC_GNU_VTENTRY
:
u32
=
232
;
pub
const
R_PARISC_GNU_VTINHERIT
:
u32
=
233
;
pub
const
R_PARISC_TLS_GD21L
:
u32
=
234
;
pub
const
R_PARISC_TLS_GD14R
:
u32
=
235
;
pub
const
R_PARISC_TLS_GDCALL
:
u32
=
236
;
pub
const
R_PARISC_TLS_LDM21L
:
u32
=
237
;
pub
const
R_PARISC_TLS_LDM14R
:
u32
=
238
;
pub
const
R_PARISC_TLS_LDMCALL
:
u32
=
239
;
pub
const
R_PARISC_TLS_LDO21L
:
u32
=
240
;
pub
const
R_PARISC_TLS_LDO14R
:
u32
=
241
;
pub
const
R_PARISC_TLS_DTPMOD32
:
u32
=
242
;
pub
const
R_PARISC_TLS_DTPMOD64
:
u32
=
243
;
pub
const
R_PARISC_TLS_DTPOFF32
:
u32
=
244
;
pub
const
R_PARISC_TLS_DTPOFF64
:
u32
=
245
;
pub
const
R_PARISC_TLS_LE21L
:
u32
=
R_PARISC_TPREL21L
;
pub
const
R_PARISC_TLS_LE14R
:
u32
=
R_PARISC_TPREL14R
;
pub
const
R_PARISC_TLS_IE21L
:
u32
=
R_PARISC_LTOFF_TP21L
;
pub
const
R_PARISC_TLS_IE14R
:
u32
=
R_PARISC_LTOFF_TP14R
;
pub
const
R_PARISC_TLS_TPREL32
:
u32
=
R_PARISC_TPREL32
;
pub
const
R_PARISC_TLS_TPREL64
:
u32
=
R_PARISC_TPREL64
;
pub
const
R_PARISC_HIRESERVE
:
u32
=
255
;
pub
const
PT_HP_TLS
:
u32
=
PT_LOOS
+
0x0
;
pub
const
PT_HP_CORE_NONE
:
u32
=
PT_LOOS
+
0x1
;
pub
const
PT_HP_CORE_VERSION
:
u32
=
PT_LOOS
+
0x2
;
pub
const
PT_HP_CORE_KERNEL
:
u32
=
PT_LOOS
+
0x3
;
pub
const
PT_HP_CORE_COMM
:
u32
=
PT_LOOS
+
0x4
;
pub
const
PT_HP_CORE_PROC
:
u32
=
PT_LOOS
+
0x5
;
pub
const
PT_HP_CORE_LOADABLE
:
u32
=
PT_LOOS
+
0x6
;
pub
const
PT_HP_CORE_STACK
:
u32
=
PT_LOOS
+
0x7
;
pub
const
PT_HP_CORE_SHM
:
u32
=
PT_LOOS
+
0x8
;
pub
const
PT_HP_CORE_MMF
:
u32
=
PT_LOOS
+
0x9
;
pub
const
PT_HP_PARALLEL
:
u32
=
PT_LOOS
+
0x10
;
pub
const
PT_HP_FASTBIND
:
u32
=
PT_LOOS
+
0x11
;
pub
const
PT_HP_OPT_ANNOT
:
u32
=
PT_LOOS
+
0x12
;
pub
const
PT_HP_HSL_ANNOT
:
u32
=
PT_LOOS
+
0x13
;
pub
const
PT_HP_STACK
:
u32
=
PT_LOOS
+
0x14
;
pub
const
PT_PARISC_ARCHEXT
:
u32
=
0x7000_0000
;
pub
const
PT_PARISC_UNWIND
:
u32
=
0x7000_0001
;
pub
const
PF_PARISC_SBP
:
u32
=
0x0800_0000
;
pub
const
PF_HP_PAGE_SIZE
:
u32
=
0x0010_0000
;
pub
const
PF_HP_FAR_SHARED
:
u32
=
0x0020_0000
;
pub
const
PF_HP_NEAR_SHARED
:
u32
=
0x0040_0000
;
pub
const
PF_HP_CODE
:
u32
=
0x0100_0000
;
pub
const
PF_HP_MODIFY
:
u32
=
0x0200_0000
;
pub
const
PF_HP_LAZYSWAP
:
u32
=
0x0400_0000
;
pub
const
PF_HP_SBP
:
u32
=
0x0800_0000
;
pub
const
EF_ALPHA_32BIT
:
u32
=
1
;
pub
const
EF_ALPHA_CANRELAX
:
u32
=
2
;
pub
const
SHT_ALPHA_DEBUG
:
u32
=
0x7000_0001
;
pub
const
SHT_ALPHA_REGINFO
:
u32
=
0x7000_0002
;
pub
const
SHF_ALPHA_GPREL
:
u32
=
0x1000_0000
;
pub
const
STO_ALPHA_NOPV
:
u8
=
0x80
;
pub
const
STO_ALPHA_STD_GPLOAD
:
u8
=
0x88
;
pub
const
R_ALPHA_NONE
:
u32
=
0
;
pub
const
R_ALPHA_REFLONG
:
u32
=
1
;
pub
const
R_ALPHA_REFQUAD
:
u32
=
2
;
pub
const
R_ALPHA_GPREL32
:
u32
=
3
;
pub
const
R_ALPHA_LITERAL
:
u32
=
4
;
pub
const
R_ALPHA_LITUSE
:
u32
=
5
;
pub
const
R_ALPHA_GPDISP
:
u32
=
6
;
pub
const
R_ALPHA_BRADDR
:
u32
=
7
;
pub
const
R_ALPHA_HINT
:
u32
=
8
;
pub
const
R_ALPHA_SREL16
:
u32
=
9
;
pub
const
R_ALPHA_SREL32
:
u32
=
10
;
pub
const
R_ALPHA_SREL64
:
u32
=
11
;
pub
const
R_ALPHA_GPRELHIGH
:
u32
=
17
;
pub
const
R_ALPHA_GPRELLOW
:
u32
=
18
;
pub
const
R_ALPHA_GPREL16
:
u32
=
19
;
pub
const
R_ALPHA_COPY
:
u32
=
24
;
pub
const
R_ALPHA_GLOB_DAT
:
u32
=
25
;
pub
const
R_ALPHA_JMP_SLOT
:
u32
=
26
;
pub
const
R_ALPHA_RELATIVE
:
u32
=
27
;
pub
const
R_ALPHA_TLS_GD_HI
:
u32
=
28
;
pub
const
R_ALPHA_TLSGD
:
u32
=
29
;
pub
const
R_ALPHA_TLS_LDM
:
u32
=
30
;
pub
const
R_ALPHA_DTPMOD64
:
u32
=
31
;
pub
const
R_ALPHA_GOTDTPREL
:
u32
=
32
;
pub
const
R_ALPHA_DTPREL64
:
u32
=
33
;
pub
const
R_ALPHA_DTPRELHI
:
u32
=
34
;
pub
const
R_ALPHA_DTPRELLO
:
u32
=
35
;
pub
const
R_ALPHA_DTPREL16
:
u32
=
36
;
pub
const
R_ALPHA_GOTTPREL
:
u32
=
37
;
pub
const
R_ALPHA_TPREL64
:
u32
=
38
;
pub
const
R_ALPHA_TPRELHI
:
u32
=
39
;
pub
const
R_ALPHA_TPRELLO
:
u32
=
40
;
pub
const
R_ALPHA_TPREL16
:
u32
=
41
;
pub
const
LITUSE_ALPHA_ADDR
:
u32
=
0
;
pub
const
LITUSE_ALPHA_BASE
:
u32
=
1
;
pub
const
LITUSE_ALPHA_BYTOFF
:
u32
=
2
;
pub
const
LITUSE_ALPHA_JSR
:
u32
=
3
;
pub
const
LITUSE_ALPHA_TLS_GD
:
u32
=
4
;
pub
const
LITUSE_ALPHA_TLS_LDM
:
u32
=
5
;
pub
const
DT_ALPHA_PLTRO
:
u32
=
DT_LOPROC
+
0
;
pub
const
EF_PPC_EMB
:
u32
=
0x8000_0000
;
pub
const
EF_PPC_RELOCATABLE
:
u32
=
0x0001_0000
;
pub
const
EF_PPC_RELOCATABLE_LIB
:
u32
=
0x0000_8000
;
pub
const
R_PPC_NONE
:
u32
=
0
;
pub
const
R_PPC_ADDR32
:
u32
=
1
;
pub
const
R_PPC_ADDR24
:
u32
=
2
;
pub
const
R_PPC_ADDR16
:
u32
=
3
;
pub
const
R_PPC_ADDR16_LO
:
u32
=
4
;
pub
const
R_PPC_ADDR16_HI
:
u32
=
5
;
pub
const
R_PPC_ADDR16_HA
:
u32
=
6
;
pub
const
R_PPC_ADDR14
:
u32
=
7
;
pub
const
R_PPC_ADDR14_BRTAKEN
:
u32
=
8
;
pub
const
R_PPC_ADDR14_BRNTAKEN
:
u32
=
9
;
pub
const
R_PPC_REL24
:
u32
=
10
;
pub
const
R_PPC_REL14
:
u32
=
11
;
pub
const
R_PPC_REL14_BRTAKEN
:
u32
=
12
;
pub
const
R_PPC_REL14_BRNTAKEN
:
u32
=
13
;
pub
const
R_PPC_GOT16
:
u32
=
14
;
pub
const
R_PPC_GOT16_LO
:
u32
=
15
;
pub
const
R_PPC_GOT16_HI
:
u32
=
16
;
pub
const
R_PPC_GOT16_HA
:
u32
=
17
;
pub
const
R_PPC_PLTREL24
:
u32
=
18
;
pub
const
R_PPC_COPY
:
u32
=
19
;
pub
const
R_PPC_GLOB_DAT
:
u32
=
20
;
pub
const
R_PPC_JMP_SLOT
:
u32
=
21
;
pub
const
R_PPC_RELATIVE
:
u32
=
22
;
pub
const
R_PPC_LOCAL24PC
:
u32
=
23
;
pub
const
R_PPC_UADDR32
:
u32
=
24
;
pub
const
R_PPC_UADDR16
:
u32
=
25
;
pub
const
R_PPC_REL32
:
u32
=
26
;
pub
const
R_PPC_PLT32
:
u32
=
27
;
pub
const
R_PPC_PLTREL32
:
u32
=
28
;
pub
const
R_PPC_PLT16_LO
:
u32
=
29
;
pub
const
R_PPC_PLT16_HI
:
u32
=
30
;
pub
const
R_PPC_PLT16_HA
:
u32
=
31
;
pub
const
R_PPC_SDAREL16
:
u32
=
32
;
pub
const
R_PPC_SECTOFF
:
u32
=
33
;
pub
const
R_PPC_SECTOFF_LO
:
u32
=
34
;
pub
const
R_PPC_SECTOFF_HI
:
u32
=
35
;
pub
const
R_PPC_SECTOFF_HA
:
u32
=
36
;
pub
const
R_PPC_TLS
:
u32
=
67
;
pub
const
R_PPC_DTPMOD32
:
u32
=
68
;
pub
const
R_PPC_TPREL16
:
u32
=
69
;
pub
const
R_PPC_TPREL16_LO
:
u32
=
70
;
pub
const
R_PPC_TPREL16_HI
:
u32
=
71
;
pub
const
R_PPC_TPREL16_HA
:
u32
=
72
;
pub
const
R_PPC_TPREL32
:
u32
=
73
;
pub
const
R_PPC_DTPREL16
:
u32
=
74
;
pub
const
R_PPC_DTPREL16_LO
:
u32
=
75
;
pub
const
R_PPC_DTPREL16_HI
:
u32
=
76
;
pub
const
R_PPC_DTPREL16_HA
:
u32
=
77
;
pub
const
R_PPC_DTPREL32
:
u32
=
78
;
pub
const
R_PPC_GOT_TLSGD16
:
u32
=
79
;
pub
const
R_PPC_GOT_TLSGD16_LO
:
u32
=
80
;
pub
const
R_PPC_GOT_TLSGD16_HI
:
u32
=
81
;
pub
const
R_PPC_GOT_TLSGD16_HA
:
u32
=
82
;
pub
const
R_PPC_GOT_TLSLD16
:
u32
=
83
;
pub
const
R_PPC_GOT_TLSLD16_LO
:
u32
=
84
;
pub
const
R_PPC_GOT_TLSLD16_HI
:
u32
=
85
;
pub
const
R_PPC_GOT_TLSLD16_HA
:
u32
=
86
;
pub
const
R_PPC_GOT_TPREL16
:
u32
=
87
;
pub
const
R_PPC_GOT_TPREL16_LO
:
u32
=
88
;
pub
const
R_PPC_GOT_TPREL16_HI
:
u32
=
89
;
pub
const
R_PPC_GOT_TPREL16_HA
:
u32
=
90
;
pub
const
R_PPC_GOT_DTPREL16
:
u32
=
91
;
pub
const
R_PPC_GOT_DTPREL16_LO
:
u32
=
92
;
pub
const
R_PPC_GOT_DTPREL16_HI
:
u32
=
93
;
pub
const
R_PPC_GOT_DTPREL16_HA
:
u32
=
94
;
pub
const
R_PPC_TLSGD
:
u32
=
95
;
pub
const
R_PPC_TLSLD
:
u32
=
96
;
pub
const
R_PPC_EMB_NADDR32
:
u32
=
101
;
pub
const
R_PPC_EMB_NADDR16
:
u32
=
102
;
pub
const
R_PPC_EMB_NADDR16_LO
:
u32
=
103
;
pub
const
R_PPC_EMB_NADDR16_HI
:
u32
=
104
;
pub
const
R_PPC_EMB_NADDR16_HA
:
u32
=
105
;
pub
const
R_PPC_EMB_SDAI16
:
u32
=
106
;
pub
const
R_PPC_EMB_SDA2I16
:
u32
=
107
;
pub
const
R_PPC_EMB_SDA2REL
:
u32
=
108
;
pub
const
R_PPC_EMB_SDA21
:
u32
=
109
;
pub
const
R_PPC_EMB_MRKREF
:
u32
=
110
;
pub
const
R_PPC_EMB_RELSEC16
:
u32
=
111
;
pub
const
R_PPC_EMB_RELST_LO
:
u32
=
112
;
pub
const
R_PPC_EMB_RELST_HI
:
u32
=
113
;
pub
const
R_PPC_EMB_RELST_HA
:
u32
=
114
;
pub
const
R_PPC_EMB_BIT_FLD
:
u32
=
115
;
pub
const
R_PPC_EMB_RELSDA
:
u32
=
116
;
pub
const
R_PPC_DIAB_SDA21_LO
:
u32
=
180
;
pub
const
R_PPC_DIAB_SDA21_HI
:
u32
=
181
;
pub
const
R_PPC_DIAB_SDA21_HA
:
u32
=
182
;
pub
const
R_PPC_DIAB_RELSDA_LO
:
u32
=
183
;
pub
const
R_PPC_DIAB_RELSDA_HI
:
u32
=
184
;
pub
const
R_PPC_DIAB_RELSDA_HA
:
u32
=
185
;
pub
const
R_PPC_IRELATIVE
:
u32
=
248
;
pub
const
R_PPC_REL16
:
u32
=
249
;
pub
const
R_PPC_REL16_LO
:
u32
=
250
;
pub
const
R_PPC_REL16_HI
:
u32
=
251
;
pub
const
R_PPC_REL16_HA
:
u32
=
252
;
pub
const
R_PPC_TOC16
:
u32
=
255
;
pub
const
DT_PPC_GOT
:
u32
=
DT_LOPROC
+
0
;
pub
const
DT_PPC_OPT
:
u32
=
DT_LOPROC
+
1
;
pub
const
PPC_OPT_TLS
:
u32
=
1
;
pub
const
R_PPC64_NONE
:
u32
=
R_PPC_NONE
;
pub
const
R_PPC64_ADDR32
:
u32
=
R_PPC_ADDR32
;
pub
const
R_PPC64_ADDR24
:
u32
=
R_PPC_ADDR24
;
pub
const
R_PPC64_ADDR16
:
u32
=
R_PPC_ADDR16
;
pub
const
R_PPC64_ADDR16_LO
:
u32
=
R_PPC_ADDR16_LO
;
pub
const
R_PPC64_ADDR16_HI
:
u32
=
R_PPC_ADDR16_HI
;
pub
const
R_PPC64_ADDR16_HA
:
u32
=
R_PPC_ADDR16_HA
;
pub
const
R_PPC64_ADDR14
:
u32
=
R_PPC_ADDR14
;
pub
const
R_PPC64_ADDR14_BRTAKEN
:
u32
=
R_PPC_ADDR14_BRTAKEN
;
pub
const
R_PPC64_ADDR14_BRNTAKEN
:
u32
=
R_PPC_ADDR14_BRNTAKEN
;
pub
const
R_PPC64_REL24
:
u32
=
R_PPC_REL24
;
pub
const
R_PPC64_REL14
:
u32
=
R_PPC_REL14
;
pub
const
R_PPC64_REL14_BRTAKEN
:
u32
=
R_PPC_REL14_BRTAKEN
;
pub
const
R_PPC64_REL14_BRNTAKEN
:
u32
=
R_PPC_REL14_BRNTAKEN
;
pub
const
R_PPC64_GOT16
:
u32
=
R_PPC_GOT16
;
pub
const
R_PPC64_GOT16_LO
:
u32
=
R_PPC_GOT16_LO
;
pub
const
R_PPC64_GOT16_HI
:
u32
=
R_PPC_GOT16_HI
;
pub
const
R_PPC64_GOT16_HA
:
u32
=
R_PPC_GOT16_HA
;
pub
const
R_PPC64_COPY
:
u32
=
R_PPC_COPY
;
pub
const
R_PPC64_GLOB_DAT
:
u32
=
R_PPC_GLOB_DAT
;
pub
const
R_PPC64_JMP_SLOT
:
u32
=
R_PPC_JMP_SLOT
;
pub
const
R_PPC64_RELATIVE
:
u32
=
R_PPC_RELATIVE
;
pub
const
R_PPC64_UADDR32
:
u32
=
R_PPC_UADDR32
;
pub
const
R_PPC64_UADDR16
:
u32
=
R_PPC_UADDR16
;
pub
const
R_PPC64_REL32
:
u32
=
R_PPC_REL32
;
pub
const
R_PPC64_PLT32
:
u32
=
R_PPC_PLT32
;
pub
const
R_PPC64_PLTREL32
:
u32
=
R_PPC_PLTREL32
;
pub
const
R_PPC64_PLT16_LO
:
u32
=
R_PPC_PLT16_LO
;
pub
const
R_PPC64_PLT16_HI
:
u32
=
R_PPC_PLT16_HI
;
pub
const
R_PPC64_PLT16_HA
:
u32
=
R_PPC_PLT16_HA
;
pub
const
R_PPC64_SECTOFF
:
u32
=
R_PPC_SECTOFF
;
pub
const
R_PPC64_SECTOFF_LO
:
u32
=
R_PPC_SECTOFF_LO
;
pub
const
R_PPC64_SECTOFF_HI
:
u32
=
R_PPC_SECTOFF_HI
;
pub
const
R_PPC64_SECTOFF_HA
:
u32
=
R_PPC_SECTOFF_HA
;
pub
const
R_PPC64_ADDR30
:
u32
=
37
;
pub
const
R_PPC64_ADDR64
:
u32
=
38
;
pub
const
R_PPC64_ADDR16_HIGHER
:
u32
=
39
;
pub
const
R_PPC64_ADDR16_HIGHERA
:
u32
=
40
;
pub
const
R_PPC64_ADDR16_HIGHEST
:
u32
=
41
;
pub
const
R_PPC64_ADDR16_HIGHESTA
:
u32
=
42
;
pub
const
R_PPC64_UADDR64
:
u32
=
43
;
pub
const
R_PPC64_REL64
:
u32
=
44
;
pub
const
R_PPC64_PLT64
:
u32
=
45
;
pub
const
R_PPC64_PLTREL64
:
u32
=
46
;
pub
const
R_PPC64_TOC16
:
u32
=
47
;
pub
const
R_PPC64_TOC16_LO
:
u32
=
48
;
pub
const
R_PPC64_TOC16_HI
:
u32
=
49
;
pub
const
R_PPC64_TOC16_HA
:
u32
=
50
;
pub
const
R_PPC64_TOC
:
u32
=
51
;
pub
const
R_PPC64_PLTGOT16
:
u32
=
52
;
pub
const
R_PPC64_PLTGOT16_LO
:
u32
=
53
;
pub
const
R_PPC64_PLTGOT16_HI
:
u32
=
54
;
pub
const
R_PPC64_PLTGOT16_HA
:
u32
=
55
;
pub
const
R_PPC64_ADDR16_DS
:
u32
=
56
;
pub
const
R_PPC64_ADDR16_LO_DS
:
u32
=
57
;
pub
const
R_PPC64_GOT16_DS
:
u32
=
58
;
pub
const
R_PPC64_GOT16_LO_DS
:
u32
=
59
;
pub
const
R_PPC64_PLT16_LO_DS
:
u32
=
60
;
pub
const
R_PPC64_SECTOFF_DS
:
u32
=
61
;
pub
const
R_PPC64_SECTOFF_LO_DS
:
u32
=
62
;
pub
const
R_PPC64_TOC16_DS
:
u32
=
63
;
pub
const
R_PPC64_TOC16_LO_DS
:
u32
=
64
;
pub
const
R_PPC64_PLTGOT16_DS
:
u32
=
65
;
pub
const
R_PPC64_PLTGOT16_LO_DS
:
u32
=
66
;
pub
const
R_PPC64_TLS
:
u32
=
67
;
pub
const
R_PPC64_DTPMOD64
:
u32
=
68
;
pub
const
R_PPC64_TPREL16
:
u32
=
69
;
pub
const
R_PPC64_TPREL16_LO
:
u32
=
70
;
pub
const
R_PPC64_TPREL16_HI
:
u32
=
71
;
pub
const
R_PPC64_TPREL16_HA
:
u32
=
72
;
pub
const
R_PPC64_TPREL64
:
u32
=
73
;
pub
const
R_PPC64_DTPREL16
:
u32
=
74
;
pub
const
R_PPC64_DTPREL16_LO
:
u32
=
75
;
pub
const
R_PPC64_DTPREL16_HI
:
u32
=
76
;
pub
const
R_PPC64_DTPREL16_HA
:
u32
=
77
;
pub
const
R_PPC64_DTPREL64
:
u32
=
78
;
pub
const
R_PPC64_GOT_TLSGD16
:
u32
=
79
;
pub
const
R_PPC64_GOT_TLSGD16_LO
:
u32
=
80
;
pub
const
R_PPC64_GOT_TLSGD16_HI
:
u32
=
81
;
pub
const
R_PPC64_GOT_TLSGD16_HA
:
u32
=
82
;
pub
const
R_PPC64_GOT_TLSLD16
:
u32
=
83
;
pub
const
R_PPC64_GOT_TLSLD16_LO
:
u32
=
84
;
pub
const
R_PPC64_GOT_TLSLD16_HI
:
u32
=
85
;
pub
const
R_PPC64_GOT_TLSLD16_HA
:
u32
=
86
;
pub
const
R_PPC64_GOT_TPREL16_DS
:
u32
=
87
;
pub
const
R_PPC64_GOT_TPREL16_LO_DS
:
u32
=
88
;
pub
const
R_PPC64_GOT_TPREL16_HI
:
u32
=
89
;
pub
const
R_PPC64_GOT_TPREL16_HA
:
u32
=
90
;
pub
const
R_PPC64_GOT_DTPREL16_DS
:
u32
=
91
;
pub
const
R_PPC64_GOT_DTPREL16_LO_DS
:
u32
=
92
;
pub
const
R_PPC64_GOT_DTPREL16_HI
:
u32
=
93
;
pub
const
R_PPC64_GOT_DTPREL16_HA
:
u32
=
94
;
pub
const
R_PPC64_TPREL16_DS
:
u32
=
95
;
pub
const
R_PPC64_TPREL16_LO_DS
:
u32
=
96
;
pub
const
R_PPC64_TPREL16_HIGHER
:
u32
=
97
;
pub
const
R_PPC64_TPREL16_HIGHERA
:
u32
=
98
;
pub
const
R_PPC64_TPREL16_HIGHEST
:
u32
=
99
;
pub
const
R_PPC64_TPREL16_HIGHESTA
:
u32
=
100
;
pub
const
R_PPC64_DTPREL16_DS
:
u32
=
101
;
pub
const
R_PPC64_DTPREL16_LO_DS
:
u32
=
102
;
pub
const
R_PPC64_DTPREL16_HIGHER
:
u32
=
103
;
pub
const
R_PPC64_DTPREL16_HIGHERA
:
u32
=
104
;
pub
const
R_PPC64_DTPREL16_HIGHEST
:
u32
=
105
;
pub
const
R_PPC64_DTPREL16_HIGHESTA
:
u32
=
106
;
pub
const
R_PPC64_TLSGD
:
u32
=
107
;
pub
const
R_PPC64_TLSLD
:
u32
=
108
;
pub
const
R_PPC64_TOCSAVE
:
u32
=
109
;
pub
const
R_PPC64_ADDR16_HIGH
:
u32
=
110
;
pub
const
R_PPC64_ADDR16_HIGHA
:
u32
=
111
;
pub
const
R_PPC64_TPREL16_HIGH
:
u32
=
112
;
pub
const
R_PPC64_TPREL16_HIGHA
:
u32
=
113
;
pub
const
R_PPC64_DTPREL16_HIGH
:
u32
=
114
;
pub
const
R_PPC64_DTPREL16_HIGHA
:
u32
=
115
;
pub
const
R_PPC64_JMP_IREL
:
u32
=
247
;
pub
const
R_PPC64_IRELATIVE
:
u32
=
248
;
pub
const
R_PPC64_REL16
:
u32
=
249
;
pub
const
R_PPC64_REL16_LO
:
u32
=
250
;
pub
const
R_PPC64_REL16_HI
:
u32
=
251
;
pub
const
R_PPC64_REL16_HA
:
u32
=
252
;
pub
const
EF_PPC64_ABI
:
u32
=
3
;
pub
const
DT_PPC64_GLINK
:
u32
=
DT_LOPROC
+
0
;
pub
const
DT_PPC64_OPD
:
u32
=
DT_LOPROC
+
1
;
pub
const
DT_PPC64_OPDSZ
:
u32
=
DT_LOPROC
+
2
;
pub
const
DT_PPC64_OPT
:
u32
=
DT_LOPROC
+
3
;
pub
const
PPC64_OPT_TLS
:
u32
=
1
;
pub
const
PPC64_OPT_MULTI_TOC
:
u32
=
2
;
pub
const
PPC64_OPT_LOCALENTRY
:
u32
=
4
;
pub
const
STO_PPC64_LOCAL_BIT
:
u8
=
5
;
pub
const
STO_PPC64_LOCAL_MASK
:
u8
=
7
<
<
STO_PPC64_LOCAL_BIT
;
pub
const
EF_ARM_RELEXEC
:
u32
=
0x01
;
pub
const
EF_ARM_HASENTRY
:
u32
=
0x02
;
pub
const
EF_ARM_INTERWORK
:
u32
=
0x04
;
pub
const
EF_ARM_APCS_26
:
u32
=
0x08
;
pub
const
EF_ARM_APCS_FLOAT
:
u32
=
0x10
;
pub
const
EF_ARM_PIC
:
u32
=
0x20
;
pub
const
EF_ARM_ALIGN8
:
u32
=
0x40
;
pub
const
EF_ARM_NEW_ABI
:
u32
=
0x80
;
pub
const
EF_ARM_OLD_ABI
:
u32
=
0x100
;
pub
const
EF_ARM_SOFT_FLOAT
:
u32
=
0x200
;
pub
const
EF_ARM_VFP_FLOAT
:
u32
=
0x400
;
pub
const
EF_ARM_MAVERICK_FLOAT
:
u32
=
0x800
;
pub
const
EF_ARM_ABI_FLOAT_SOFT
:
u32
=
0x200
;
pub
const
EF_ARM_ABI_FLOAT_HARD
:
u32
=
0x400
;
pub
const
EF_ARM_SYMSARESORTED
:
u32
=
0x04
;
pub
const
EF_ARM_DYNSYMSUSESEGIDX
:
u32
=
0x08
;
pub
const
EF_ARM_MAPSYMSFIRST
:
u32
=
0x10
;
pub
const
EF_ARM_BE8
:
u32
=
0x0080_0000
;
pub
const
EF_ARM_LE8
:
u32
=
0x0040_0000
;
pub
const
EF_ARM_EABIMASK
:
u32
=
0xff00_0000
;
pub
const
EF_ARM_EABI_UNKNOWN
:
u32
=
0x0000_0000
;
pub
const
EF_ARM_EABI_VER1
:
u32
=
0x0100_0000
;
pub
const
EF_ARM_EABI_VER2
:
u32
=
0x0200_0000
;
pub
const
EF_ARM_EABI_VER3
:
u32
=
0x0300_0000
;
pub
const
EF_ARM_EABI_VER4
:
u32
=
0x0400_0000
;
pub
const
EF_ARM_EABI_VER5
:
u32
=
0x0500_0000
;
pub
const
STT_ARM_TFUNC
:
u8
=
STT_LOPROC
;
pub
const
STT_ARM_16BIT
:
u8
=
STT_HIPROC
;
pub
const
SHF_ARM_ENTRYSECT
:
u32
=
0x1000_0000
;
pub
const
SHF_ARM_COMDEF
:
u32
=
0x8000_0000
;
pub
const
PF_ARM_SB
:
u32
=
0x1000_0000
;
pub
const
PF_ARM_PI
:
u32
=
0x2000_0000
;
pub
const
PF_ARM_ABS
:
u32
=
0x4000_0000
;
pub
const
PT_ARM_EXIDX
:
u32
=
PT_LOPROC
+
1
;
pub
const
SHT_ARM_EXIDX
:
u32
=
SHT_LOPROC
+
1
;
pub
const
SHT_ARM_PREEMPTMAP
:
u32
=
SHT_LOPROC
+
2
;
pub
const
SHT_ARM_ATTRIBUTES
:
u32
=
SHT_LOPROC
+
3
;
pub
const
R_AARCH64_NONE
:
u32
=
0
;
pub
const
R_AARCH64_P32_ABS32
:
u32
=
1
;
pub
const
R_AARCH64_P32_COPY
:
u32
=
180
;
pub
const
R_AARCH64_P32_GLOB_DAT
:
u32
=
181
;
pub
const
R_AARCH64_P32_JUMP_SLOT
:
u32
=
182
;
pub
const
R_AARCH64_P32_RELATIVE
:
u32
=
183
;
pub
const
R_AARCH64_P32_TLS_DTPMOD
:
u32
=
184
;
pub
const
R_AARCH64_P32_TLS_DTPREL
:
u32
=
185
;
pub
const
R_AARCH64_P32_TLS_TPREL
:
u32
=
186
;
pub
const
R_AARCH64_P32_TLSDESC
:
u32
=
187
;
pub
const
R_AARCH64_P32_IRELATIVE
:
u32
=
188
;
pub
const
R_AARCH64_ABS64
:
u32
=
257
;
pub
const
R_AARCH64_ABS32
:
u32
=
258
;
pub
const
R_AARCH64_ABS16
:
u32
=
259
;
pub
const
R_AARCH64_PREL64
:
u32
=
260
;
pub
const
R_AARCH64_PREL32
:
u32
=
261
;
pub
const
R_AARCH64_PREL16
:
u32
=
262
;
pub
const
R_AARCH64_MOVW_UABS_G0
:
u32
=
263
;
pub
const
R_AARCH64_MOVW_UABS_G0_NC
:
u32
=
264
;
pub
const
R_AARCH64_MOVW_UABS_G1
:
u32
=
265
;
pub
const
R_AARCH64_MOVW_UABS_G1_NC
:
u32
=
266
;
pub
const
R_AARCH64_MOVW_UABS_G2
:
u32
=
267
;
pub
const
R_AARCH64_MOVW_UABS_G2_NC
:
u32
=
268
;
pub
const
R_AARCH64_MOVW_UABS_G3
:
u32
=
269
;
pub
const
R_AARCH64_MOVW_SABS_G0
:
u32
=
270
;
pub
const
R_AARCH64_MOVW_SABS_G1
:
u32
=
271
;
pub
const
R_AARCH64_MOVW_SABS_G2
:
u32
=
272
;
pub
const
R_AARCH64_LD_PREL_LO19
:
u32
=
273
;
pub
const
R_AARCH64_ADR_PREL_LO21
:
u32
=
274
;
pub
const
R_AARCH64_ADR_PREL_PG_HI21
:
u32
=
275
;
pub
const
R_AARCH64_ADR_PREL_PG_HI21_NC
:
u32
=
276
;
pub
const
R_AARCH64_ADD_ABS_LO12_NC
:
u32
=
277
;
pub
const
R_AARCH64_LDST8_ABS_LO12_NC
:
u32
=
278
;
pub
const
R_AARCH64_TSTBR14
:
u32
=
279
;
pub
const
R_AARCH64_CONDBR19
:
u32
=
280
;
pub
const
R_AARCH64_JUMP26
:
u32
=
282
;
pub
const
R_AARCH64_CALL26
:
u32
=
283
;
pub
const
R_AARCH64_LDST16_ABS_LO12_NC
:
u32
=
284
;
pub
const
R_AARCH64_LDST32_ABS_LO12_NC
:
u32
=
285
;
pub
const
R_AARCH64_LDST64_ABS_LO12_NC
:
u32
=
286
;
pub
const
R_AARCH64_MOVW_PREL_G0
:
u32
=
287
;
pub
const
R_AARCH64_MOVW_PREL_G0_NC
:
u32
=
288
;
pub
const
R_AARCH64_MOVW_PREL_G1
:
u32
=
289
;
pub
const
R_AARCH64_MOVW_PREL_G1_NC
:
u32
=
290
;
pub
const
R_AARCH64_MOVW_PREL_G2
:
u32
=
291
;
pub
const
R_AARCH64_MOVW_PREL_G2_NC
:
u32
=
292
;
pub
const
R_AARCH64_MOVW_PREL_G3
:
u32
=
293
;
pub
const
R_AARCH64_LDST128_ABS_LO12_NC
:
u32
=
299
;
pub
const
R_AARCH64_MOVW_GOTOFF_G0
:
u32
=
300
;
pub
const
R_AARCH64_MOVW_GOTOFF_G0_NC
:
u32
=
301
;
pub
const
R_AARCH64_MOVW_GOTOFF_G1
:
u32
=
302
;
pub
const
R_AARCH64_MOVW_GOTOFF_G1_NC
:
u32
=
303
;
pub
const
R_AARCH64_MOVW_GOTOFF_G2
:
u32
=
304
;
pub
const
R_AARCH64_MOVW_GOTOFF_G2_NC
:
u32
=
305
;
pub
const
R_AARCH64_MOVW_GOTOFF_G3
:
u32
=
306
;
pub
const
R_AARCH64_GOTREL64
:
u32
=
307
;
pub
const
R_AARCH64_GOTREL32
:
u32
=
308
;
pub
const
R_AARCH64_GOT_LD_PREL19
:
u32
=
309
;
pub
const
R_AARCH64_LD64_GOTOFF_LO15
:
u32
=
310
;
pub
const
R_AARCH64_ADR_GOT_PAGE
:
u32
=
311
;
pub
const
R_AARCH64_LD64_GOT_LO12_NC
:
u32
=
312
;
pub
const
R_AARCH64_LD64_GOTPAGE_LO15
:
u32
=
313
;
pub
const
R_AARCH64_TLSGD_ADR_PREL21
:
u32
=
512
;
pub
const
R_AARCH64_TLSGD_ADR_PAGE21
:
u32
=
513
;
pub
const
R_AARCH64_TLSGD_ADD_LO12_NC
:
u32
=
514
;
pub
const
R_AARCH64_TLSGD_MOVW_G1
:
u32
=
515
;
pub
const
R_AARCH64_TLSGD_MOVW_G0_NC
:
u32
=
516
;
pub
const
R_AARCH64_TLSLD_ADR_PREL21
:
u32
=
517
;
pub
const
R_AARCH64_TLSLD_ADR_PAGE21
:
u32
=
518
;
pub
const
R_AARCH64_TLSLD_ADD_LO12_NC
:
u32
=
519
;
pub
const
R_AARCH64_TLSLD_MOVW_G1
:
u32
=
520
;
pub
const
R_AARCH64_TLSLD_MOVW_G0_NC
:
u32
=
521
;
pub
const
R_AARCH64_TLSLD_LD_PREL19
:
u32
=
522
;
pub
const
R_AARCH64_TLSLD_MOVW_DTPREL_G2
:
u32
=
523
;
pub
const
R_AARCH64_TLSLD_MOVW_DTPREL_G1
:
u32
=
524
;
pub
const
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
:
u32
=
525
;
pub
const
R_AARCH64_TLSLD_MOVW_DTPREL_G0
:
u32
=
526
;
pub
const
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
:
u32
=
527
;
pub
const
R_AARCH64_TLSLD_ADD_DTPREL_HI12
:
u32
=
528
;
pub
const
R_AARCH64_TLSLD_ADD_DTPREL_LO12
:
u32
=
529
;
pub
const
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
:
u32
=
530
;
pub
const
R_AARCH64_TLSLD_LDST8_DTPREL_LO12
:
u32
=
531
;
pub
const
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
:
u32
=
532
;
pub
const
R_AARCH64_TLSLD_LDST16_DTPREL_LO12
:
u32
=
533
;
pub
const
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
:
u32
=
534
;
pub
const
R_AARCH64_TLSLD_LDST32_DTPREL_LO12
:
u32
=
535
;
pub
const
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
:
u32
=
536
;
pub
const
R_AARCH64_TLSLD_LDST64_DTPREL_LO12
:
u32
=
537
;
pub
const
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
:
u32
=
538
;
pub
const
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
:
u32
=
539
;
pub
const
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
:
u32
=
540
;
pub
const
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
:
u32
=
541
;
pub
const
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
:
u32
=
542
;
pub
const
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
:
u32
=
543
;
pub
const
R_AARCH64_TLSLE_MOVW_TPREL_G2
:
u32
=
544
;
pub
const
R_AARCH64_TLSLE_MOVW_TPREL_G1
:
u32
=
545
;
pub
const
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
:
u32
=
546
;
pub
const
R_AARCH64_TLSLE_MOVW_TPREL_G0
:
u32
=
547
;
pub
const
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
:
u32
=
548
;
pub
const
R_AARCH64_TLSLE_ADD_TPREL_HI12
:
u32
=
549
;
pub
const
R_AARCH64_TLSLE_ADD_TPREL_LO12
:
u32
=
550
;
pub
const
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
:
u32
=
551
;
pub
const
R_AARCH64_TLSLE_LDST8_TPREL_LO12
:
u32
=
552
;
pub
const
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
:
u32
=
553
;
pub
const
R_AARCH64_TLSLE_LDST16_TPREL_LO12
:
u32
=
554
;
pub
const
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
:
u32
=
555
;
pub
const
R_AARCH64_TLSLE_LDST32_TPREL_LO12
:
u32
=
556
;
pub
const
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
:
u32
=
557
;
pub
const
R_AARCH64_TLSLE_LDST64_TPREL_LO12
:
u32
=
558
;
pub
const
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
:
u32
=
559
;
pub
const
R_AARCH64_TLSDESC_LD_PREL19
:
u32
=
560
;
pub
const
R_AARCH64_TLSDESC_ADR_PREL21
:
u32
=
561
;
pub
const
R_AARCH64_TLSDESC_ADR_PAGE21
:
u32
=
562
;
pub
const
R_AARCH64_TLSDESC_LD64_LO12
:
u32
=
563
;
pub
const
R_AARCH64_TLSDESC_ADD_LO12
:
u32
=
564
;
pub
const
R_AARCH64_TLSDESC_OFF_G1
:
u32
=
565
;
pub
const
R_AARCH64_TLSDESC_OFF_G0_NC
:
u32
=
566
;
pub
const
R_AARCH64_TLSDESC_LDR
:
u32
=
567
;
pub
const
R_AARCH64_TLSDESC_ADD
:
u32
=
568
;
pub
const
R_AARCH64_TLSDESC_CALL
:
u32
=
569
;
pub
const
R_AARCH64_TLSLE_LDST128_TPREL_LO12
:
u32
=
570
;
pub
const
R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC
:
u32
=
571
;
pub
const
R_AARCH64_TLSLD_LDST128_DTPREL_LO12
:
u32
=
572
;
pub
const
R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC
:
u32
=
573
;
pub
const
R_AARCH64_COPY
:
u32
=
1024
;
pub
const
R_AARCH64_GLOB_DAT
:
u32
=
1025
;
pub
const
R_AARCH64_JUMP_SLOT
:
u32
=
1026
;
pub
const
R_AARCH64_RELATIVE
:
u32
=
1027
;
pub
const
R_AARCH64_TLS_DTPMOD
:
u32
=
1028
;
pub
const
R_AARCH64_TLS_DTPREL
:
u32
=
1029
;
pub
const
R_AARCH64_TLS_TPREL
:
u32
=
1030
;
pub
const
R_AARCH64_TLSDESC
:
u32
=
1031
;
pub
const
R_AARCH64_IRELATIVE
:
u32
=
1032
;
pub
const
EF_AVR_ARCH
:
u32
=
0x7F
;
pub
const
EF_AVR_LINKRELAX_PREPARED
:
u32
=
0x80
;
pub
const
EF_AVR_ARCH_AVR1
:
u32
=
1
;
pub
const
EF_AVR_ARCH_AVR2
:
u32
=
2
;
pub
const
EF_AVR_ARCH_AVR25
:
u32
=
25
;
pub
const
EF_AVR_ARCH_AVR3
:
u32
=
3
;
pub
const
EF_AVR_ARCH_AVR31
:
u32
=
31
;
pub
const
EF_AVR_ARCH_AVR35
:
u32
=
35
;
pub
const
EF_AVR_ARCH_AVR4
:
u32
=
4
;
pub
const
EF_AVR_ARCH_AVR5
:
u32
=
5
;
pub
const
EF_AVR_ARCH_AVR51
:
u32
=
51
;
pub
const
EF_AVR_ARCH_AVR6
:
u32
=
6
;
pub
const
EF_AVR_ARCH_AVRTINY
:
u32
=
100
;
pub
const
EF_AVR_ARCH_XMEGA1
:
u32
=
101
;
pub
const
EF_AVR_ARCH_XMEGA2
:
u32
=
102
;
pub
const
EF_AVR_ARCH_XMEGA3
:
u32
=
103
;
pub
const
EF_AVR_ARCH_XMEGA4
:
u32
=
104
;
pub
const
EF_AVR_ARCH_XMEGA5
:
u32
=
105
;
pub
const
EF_AVR_ARCH_XMEGA6
:
u32
=
106
;
pub
const
EF_AVR_ARCH_XMEGA7
:
u32
=
107
;
pub
const
R_AVR_NONE
:
u32
=
0
;
pub
const
R_AVR_32
:
u32
=
1
;
pub
const
R_AVR_7_PCREL
:
u32
=
2
;
pub
const
R_AVR_13_PCREL
:
u32
=
3
;
pub
const
R_AVR_16
:
u32
=
4
;
pub
const
R_AVR_16_PM
:
u32
=
5
;
pub
const
R_AVR_LO8_LDI
:
u32
=
6
;
pub
const
R_AVR_HI8_LDI
:
u32
=
7
;
pub
const
R_AVR_HH8_LDI
:
u32
=
8
;
pub
const
R_AVR_LO8_LDI_NEG
:
u32
=
9
;
pub
const
R_AVR_HI8_LDI_NEG
:
u32
=
10
;
pub
const
R_AVR_HH8_LDI_NEG
:
u32
=
11
;
pub
const
R_AVR_LO8_LDI_PM
:
u32
=
12
;
pub
const
R_AVR_HI8_LDI_PM
:
u32
=
13
;
pub
const
R_AVR_HH8_LDI_PM
:
u32
=
14
;
pub
const
R_AVR_LO8_LDI_PM_NEG
:
u32
=
15
;
pub
const
R_AVR_HI8_LDI_PM_NEG
:
u32
=
16
;
pub
const
R_AVR_HH8_LDI_PM_NEG
:
u32
=
17
;
pub
const
R_AVR_CALL
:
u32
=
18
;
pub
const
R_AVR_LDI
:
u32
=
19
;
pub
const
R_AVR_6
:
u32
=
20
;
pub
const
R_AVR_6_ADIW
:
u32
=
21
;
pub
const
R_AVR_MS8_LDI
:
u32
=
22
;
pub
const
R_AVR_MS8_LDI_NEG
:
u32
=
23
;
pub
const
R_AVR_LO8_LDI_GS
:
u32
=
24
;
pub
const
R_AVR_HI8_LDI_GS
:
u32
=
25
;
pub
const
R_AVR_8
:
u32
=
26
;
pub
const
R_AVR_8_LO8
:
u32
=
27
;
pub
const
R_AVR_8_HI8
:
u32
=
28
;
pub
const
R_AVR_8_HLO8
:
u32
=
29
;
pub
const
R_AVR_DIFF8
:
u32
=
30
;
pub
const
R_AVR_DIFF16
:
u32
=
31
;
pub
const
R_AVR_DIFF32
:
u32
=
32
;
pub
const
R_AVR_LDS_STS_16
:
u32
=
33
;
pub
const
R_AVR_PORT6
:
u32
=
34
;
pub
const
R_AVR_PORT5
:
u32
=
35
;
pub
const
R_AVR_32_PCREL
:
u32
=
36
;
pub
const
R_MSP430_32
:
u32
=
1
;
pub
const
R_MSP430_16_BYTE
:
u32
=
5
;
pub
const
R_HEX_32
:
u32
=
6
;
pub
const
R_ARM_NONE
:
u32
=
0
;
pub
const
R_ARM_PC24
:
u32
=
1
;
pub
const
R_ARM_ABS32
:
u32
=
2
;
pub
const
R_ARM_REL32
:
u32
=
3
;
pub
const
R_ARM_PC13
:
u32
=
4
;
pub
const
R_ARM_ABS16
:
u32
=
5
;
pub
const
R_ARM_ABS12
:
u32
=
6
;
pub
const
R_ARM_THM_ABS5
:
u32
=
7
;
pub
const
R_ARM_ABS8
:
u32
=
8
;
pub
const
R_ARM_SBREL32
:
u32
=
9
;
pub
const
R_ARM_THM_PC22
:
u32
=
10
;
pub
const
R_ARM_THM_PC8
:
u32
=
11
;
pub
const
R_ARM_AMP_VCALL9
:
u32
=
12
;
pub
const
R_ARM_SWI24
:
u32
=
13
;
pub
const
R_ARM_TLS_DESC
:
u32
=
13
;
pub
const
R_ARM_THM_SWI8
:
u32
=
14
;
pub
const
R_ARM_XPC25
:
u32
=
15
;
pub
const
R_ARM_THM_XPC22
:
u32
=
16
;
pub
const
R_ARM_TLS_DTPMOD32
:
u32
=
17
;
pub
const
R_ARM_TLS_DTPOFF32
:
u32
=
18
;
pub
const
R_ARM_TLS_TPOFF32
:
u32
=
19
;
pub
const
R_ARM_COPY
:
u32
=
20
;
pub
const
R_ARM_GLOB_DAT
:
u32
=
21
;
pub
const
R_ARM_JUMP_SLOT
:
u32
=
22
;
pub
const
R_ARM_RELATIVE
:
u32
=
23
;
pub
const
R_ARM_GOTOFF
:
u32
=
24
;
pub
const
R_ARM_GOTPC
:
u32
=
25
;
pub
const
R_ARM_GOT32
:
u32
=
26
;
pub
const
R_ARM_PLT32
:
u32
=
27
;
pub
const
R_ARM_CALL
:
u32
=
28
;
pub
const
R_ARM_JUMP24
:
u32
=
29
;
pub
const
R_ARM_THM_JUMP24
:
u32
=
30
;
pub
const
R_ARM_BASE_ABS
:
u32
=
31
;
pub
const
R_ARM_ALU_PCREL_7_0
:
u32
=
32
;
pub
const
R_ARM_ALU_PCREL_15_8
:
u32
=
33
;
pub
const
R_ARM_ALU_PCREL_23_15
:
u32
=
34
;
pub
const
R_ARM_LDR_SBREL_11_0
:
u32
=
35
;
pub
const
R_ARM_ALU_SBREL_19_12
:
u32
=
36
;
pub
const
R_ARM_ALU_SBREL_27_20
:
u32
=
37
;
pub
const
R_ARM_TARGET1
:
u32
=
38
;
pub
const
R_ARM_SBREL31
:
u32
=
39
;
pub
const
R_ARM_V4BX
:
u32
=
40
;
pub
const
R_ARM_TARGET2
:
u32
=
41
;
pub
const
R_ARM_PREL31
:
u32
=
42
;
pub
const
R_ARM_MOVW_ABS_NC
:
u32
=
43
;
pub
const
R_ARM_MOVT_ABS
:
u32
=
44
;
pub
const
R_ARM_MOVW_PREL_NC
:
u32
=
45
;
pub
const
R_ARM_MOVT_PREL
:
u32
=
46
;
pub
const
R_ARM_THM_MOVW_ABS_NC
:
u32
=
47
;
pub
const
R_ARM_THM_MOVT_ABS
:
u32
=
48
;
pub
const
R_ARM_THM_MOVW_PREL_NC
:
u32
=
49
;
pub
const
R_ARM_THM_MOVT_PREL
:
u32
=
50
;
pub
const
R_ARM_THM_JUMP19
:
u32
=
51
;
pub
const
R_ARM_THM_JUMP6
:
u32
=
52
;
pub
const
R_ARM_THM_ALU_PREL_11_0
:
u32
=
53
;
pub
const
R_ARM_THM_PC12
:
u32
=
54
;
pub
const
R_ARM_ABS32_NOI
:
u32
=
55
;
pub
const
R_ARM_REL32_NOI
:
u32
=
56
;
pub
const
R_ARM_ALU_PC_G0_NC
:
u32
=
57
;
pub
const
R_ARM_ALU_PC_G0
:
u32
=
58
;
pub
const
R_ARM_ALU_PC_G1_NC
:
u32
=
59
;
pub
const
R_ARM_ALU_PC_G1
:
u32
=
60
;
pub
const
R_ARM_ALU_PC_G2
:
u32
=
61
;
pub
const
R_ARM_LDR_PC_G1
:
u32
=
62
;
pub
const
R_ARM_LDR_PC_G2
:
u32
=
63
;
pub
const
R_ARM_LDRS_PC_G0
:
u32
=
64
;
pub
const
R_ARM_LDRS_PC_G1
:
u32
=
65
;
pub
const
R_ARM_LDRS_PC_G2
:
u32
=
66
;
pub
const
R_ARM_LDC_PC_G0
:
u32
=
67
;
pub
const
R_ARM_LDC_PC_G1
:
u32
=
68
;
pub
const
R_ARM_LDC_PC_G2
:
u32
=
69
;
pub
const
R_ARM_ALU_SB_G0_NC
:
u32
=
70
;
pub
const
R_ARM_ALU_SB_G0
:
u32
=
71
;
pub
const
R_ARM_ALU_SB_G1_NC
:
u32
=
72
;
pub
const
R_ARM_ALU_SB_G1
:
u32
=
73
;
pub
const
R_ARM_ALU_SB_G2
:
u32
=
74
;
pub
const
R_ARM_LDR_SB_G0
:
u32
=
75
;
pub
const
R_ARM_LDR_SB_G1
:
u32
=
76
;
pub
const
R_ARM_LDR_SB_G2
:
u32
=
77
;
pub
const
R_ARM_LDRS_SB_G0
:
u32
=
78
;
pub
const
R_ARM_LDRS_SB_G1
:
u32
=
79
;
pub
const
R_ARM_LDRS_SB_G2
:
u32
=
80
;
pub
const
R_ARM_LDC_SB_G0
:
u32
=
81
;
pub
const
R_ARM_LDC_SB_G1
:
u32
=
82
;
pub
const
R_ARM_LDC_SB_G2
:
u32
=
83
;
pub
const
R_ARM_MOVW_BREL_NC
:
u32
=
84
;
pub
const
R_ARM_MOVT_BREL
:
u32
=
85
;
pub
const
R_ARM_MOVW_BREL
:
u32
=
86
;
pub
const
R_ARM_THM_MOVW_BREL_NC
:
u32
=
87
;
pub
const
R_ARM_THM_MOVT_BREL
:
u32
=
88
;
pub
const
R_ARM_THM_MOVW_BREL
:
u32
=
89
;
pub
const
R_ARM_TLS_GOTDESC
:
u32
=
90
;
pub
const
R_ARM_TLS_CALL
:
u32
=
91
;
pub
const
R_ARM_TLS_DESCSEQ
:
u32
=
92
;
pub
const
R_ARM_THM_TLS_CALL
:
u32
=
93
;
pub
const
R_ARM_PLT32_ABS
:
u32
=
94
;
pub
const
R_ARM_GOT_ABS
:
u32
=
95
;
pub
const
R_ARM_GOT_PREL
:
u32
=
96
;
pub
const
R_ARM_GOT_BREL12
:
u32
=
97
;
pub
const
R_ARM_GOTOFF12
:
u32
=
98
;
pub
const
R_ARM_GOTRELAX
:
u32
=
99
;
pub
const
R_ARM_GNU_VTENTRY
:
u32
=
100
;
pub
const
R_ARM_GNU_VTINHERIT
:
u32
=
101
;
pub
const
R_ARM_THM_PC11
:
u32
=
102
;
pub
const
R_ARM_THM_PC9
:
u32
=
103
;
pub
const
R_ARM_TLS_GD32
:
u32
=
104
;
pub
const
R_ARM_TLS_LDM32
:
u32
=
105
;
pub
const
R_ARM_TLS_LDO32
:
u32
=
106
;
pub
const
R_ARM_TLS_IE32
:
u32
=
107
;
pub
const
R_ARM_TLS_LE32
:
u32
=
108
;
pub
const
R_ARM_TLS_LDO12
:
u32
=
109
;
pub
const
R_ARM_TLS_LE12
:
u32
=
110
;
pub
const
R_ARM_TLS_IE12GP
:
u32
=
111
;
pub
const
R_ARM_ME_TOO
:
u32
=
128
;
pub
const
R_ARM_THM_TLS_DESCSEQ
:
u32
=
129
;
pub
const
R_ARM_THM_TLS_DESCSEQ16
:
u32
=
129
;
pub
const
R_ARM_THM_TLS_DESCSEQ32
:
u32
=
130
;
pub
const
R_ARM_THM_GOT_BREL12
:
u32
=
131
;
pub
const
R_ARM_IRELATIVE
:
u32
=
160
;
pub
const
R_ARM_RXPC25
:
u32
=
249
;
pub
const
R_ARM_RSBREL32
:
u32
=
250
;
pub
const
R_ARM_THM_RPC22
:
u32
=
251
;
pub
const
R_ARM_RREL32
:
u32
=
252
;
pub
const
R_ARM_RABS22
:
u32
=
253
;
pub
const
R_ARM_RPC24
:
u32
=
254
;
pub
const
R_ARM_RBASE
:
u32
=
255
;
pub
const
R_CKCORE_NONE
:
u32
=
0
;
pub
const
R_CKCORE_ADDR32
:
u32
=
1
;
pub
const
R_CKCORE_PCRELIMM8BY4
:
u32
=
2
;
pub
const
R_CKCORE_PCRELIMM11BY2
:
u32
=
3
;
pub
const
R_CKCORE_PCREL32
:
u32
=
5
;
pub
const
R_CKCORE_PCRELJSR_IMM11BY2
:
u32
=
6
;
pub
const
R_CKCORE_RELATIVE
:
u32
=
9
;
pub
const
R_CKCORE_COPY
:
u32
=
10
;
pub
const
R_CKCORE_GLOB_DAT
:
u32
=
11
;
pub
const
R_CKCORE_JUMP_SLOT
:
u32
=
12
;
pub
const
R_CKCORE_GOTOFF
:
u32
=
13
;
pub
const
R_CKCORE_GOTPC
:
u32
=
14
;
pub
const
R_CKCORE_GOT32
:
u32
=
15
;
pub
const
R_CKCORE_PLT32
:
u32
=
16
;
pub
const
R_CKCORE_ADDRGOT
:
u32
=
17
;
pub
const
R_CKCORE_ADDRPLT
:
u32
=
18
;
pub
const
R_CKCORE_PCREL_IMM26BY2
:
u32
=
19
;
pub
const
R_CKCORE_PCREL_IMM16BY2
:
u32
=
20
;
pub
const
R_CKCORE_PCREL_IMM16BY4
:
u32
=
21
;
pub
const
R_CKCORE_PCREL_IMM10BY2
:
u32
=
22
;
pub
const
R_CKCORE_PCREL_IMM10BY4
:
u32
=
23
;
pub
const
R_CKCORE_ADDR_HI16
:
u32
=
24
;
pub
const
R_CKCORE_ADDR_LO16
:
u32
=
25
;
pub
const
R_CKCORE_GOTPC_HI16
:
u32
=
26
;
pub
const
R_CKCORE_GOTPC_LO16
:
u32
=
27
;
pub
const
R_CKCORE_GOTOFF_HI16
:
u32
=
28
;
pub
const
R_CKCORE_GOTOFF_LO16
:
u32
=
29
;
pub
const
R_CKCORE_GOT12
:
u32
=
30
;
pub
const
R_CKCORE_GOT_HI16
:
u32
=
31
;
pub
const
R_CKCORE_GOT_LO16
:
u32
=
32
;
pub
const
R_CKCORE_PLT12
:
u32
=
33
;
pub
const
R_CKCORE_PLT_HI16
:
u32
=
34
;
pub
const
R_CKCORE_PLT_LO16
:
u32
=
35
;
pub
const
R_CKCORE_ADDRGOT_HI16
:
u32
=
36
;
pub
const
R_CKCORE_ADDRGOT_LO16
:
u32
=
37
;
pub
const
R_CKCORE_ADDRPLT_HI16
:
u32
=
38
;
pub
const
R_CKCORE_ADDRPLT_LO16
:
u32
=
39
;
pub
const
R_CKCORE_PCREL_JSR_IMM26BY2
:
u32
=
40
;
pub
const
R_CKCORE_TOFFSET_LO16
:
u32
=
41
;
pub
const
R_CKCORE_DOFFSET_LO16
:
u32
=
42
;
pub
const
R_CKCORE_PCREL_IMM18BY2
:
u32
=
43
;
pub
const
R_CKCORE_DOFFSET_IMM18
:
u32
=
44
;
pub
const
R_CKCORE_DOFFSET_IMM18BY2
:
u32
=
45
;
pub
const
R_CKCORE_DOFFSET_IMM18BY4
:
u32
=
46
;
pub
const
R_CKCORE_GOT_IMM18BY4
:
u32
=
48
;
pub
const
R_CKCORE_PLT_IMM18BY4
:
u32
=
49
;
pub
const
R_CKCORE_PCREL_IMM7BY4
:
u32
=
50
;
pub
const
R_CKCORE_TLS_LE32
:
u32
=
51
;
pub
const
R_CKCORE_TLS_IE32
:
u32
=
52
;
pub
const
R_CKCORE_TLS_GD32
:
u32
=
53
;
pub
const
R_CKCORE_TLS_LDM32
:
u32
=
54
;
pub
const
R_CKCORE_TLS_LDO32
:
u32
=
55
;
pub
const
R_CKCORE_TLS_DTPMOD32
:
u32
=
56
;
pub
const
R_CKCORE_TLS_DTPOFF32
:
u32
=
57
;
pub
const
R_CKCORE_TLS_TPOFF32
:
u32
=
58
;
pub
const
EF_CSKY_ABIMASK
:
u32
=
0xF000_0000
;
pub
const
EF_CSKY_OTHER
:
u32
=
0x0FFF_0000
;
pub
const
EF_CSKY_PROCESSOR
:
u32
=
0x0000_FFFF
;
pub
const
EF_CSKY_ABIV1
:
u32
=
0x1000_0000
;
pub
const
EF_CSKY_ABIV2
:
u32
=
0x2000_0000
;
pub
const
SHT_CSKY_ATTRIBUTES
:
u32
=
SHT_LOPROC
+
1
;
pub
const
EF_IA_64_MASKOS
:
u32
=
0x0000_000f
;
pub
const
EF_IA_64_ABI64
:
u32
=
0x0000_0010
;
pub
const
EF_IA_64_ARCH
:
u32
=
0xff00_0000
;
pub
const
PT_IA_64_ARCHEXT
:
u32
=
PT_LOPROC
+
0
;
pub
const
PT_IA_64_UNWIND
:
u32
=
PT_LOPROC
+
1
;
pub
const
PT_IA_64_HP_OPT_ANOT
:
u32
=
PT_LOOS
+
0x12
;
pub
const
PT_IA_64_HP_HSL_ANOT
:
u32
=
PT_LOOS
+
0x13
;
pub
const
PT_IA_64_HP_STACK
:
u32
=
PT_LOOS
+
0x14
;
pub
const
PF_IA_64_NORECOV
:
u32
=
0x8000_0000
;
pub
const
SHT_IA_64_EXT
:
u32
=
SHT_LOPROC
+
0
;
pub
const
SHT_IA_64_UNWIND
:
u32
=
SHT_LOPROC
+
1
;
pub
const
SHF_IA_64_SHORT
:
u32
=
0x1000_0000
;
pub
const
SHF_IA_64_NORECOV
:
u32
=
0x2000_0000
;
pub
const
DT_IA_64_PLT_RESERVE
:
u32
=
DT_LOPROC
+
0
;
pub
const
R_IA64_NONE
:
u32
=
0x00
;
pub
const
R_IA64_IMM14
:
u32
=
0x21
;
pub
const
R_IA64_IMM22
:
u32
=
0x22
;
pub
const
R_IA64_IMM64
:
u32
=
0x23
;
pub
const
R_IA64_DIR32MSB
:
u32
=
0x24
;
pub
const
R_IA64_DIR32LSB
:
u32
=
0x25
;
pub
const
R_IA64_DIR64MSB
:
u32
=
0x26
;
pub
const
R_IA64_DIR64LSB
:
u32
=
0x27
;
pub
const
R_IA64_GPREL22
:
u32
=
0x2a
;
pub
const
R_IA64_GPREL64I
:
u32
=
0x2b
;
pub
const
R_IA64_GPREL32MSB
:
u32
=
0x2c
;
pub
const
R_IA64_GPREL32LSB
:
u32
=
0x2d
;
pub
const
R_IA64_GPREL64MSB
:
u32
=
0x2e
;
pub
const
R_IA64_GPREL64LSB
:
u32
=
0x2f
;
pub
const
R_IA64_LTOFF22
:
u32
=
0x32
;
pub
const
R_IA64_LTOFF64I
:
u32
=
0x33
;
pub
const
R_IA64_PLTOFF22
:
u32
=
0x3a
;
pub
const
R_IA64_PLTOFF64I
:
u32
=
0x3b
;
pub
const
R_IA64_PLTOFF64MSB
:
u32
=
0x3e
;
pub
const
R_IA64_PLTOFF64LSB
:
u32
=
0x3f
;
pub
const
R_IA64_FPTR64I
:
u32
=
0x43
;
pub
const
R_IA64_FPTR32MSB
:
u32
=
0x44
;
pub
const
R_IA64_FPTR32LSB
:
u32
=
0x45
;
pub
const
R_IA64_FPTR64MSB
:
u32
=
0x46
;
pub
const
R_IA64_FPTR64LSB
:
u32
=
0x47
;
pub
const
R_IA64_PCREL60B
:
u32
=
0x48
;
pub
const
R_IA64_PCREL21B
:
u32
=
0x49
;
pub
const
R_IA64_PCREL21M
:
u32
=
0x4a
;
pub
const
R_IA64_PCREL21F
:
u32
=
0x4b
;
pub
const
R_IA64_PCREL32MSB
:
u32
=
0x4c
;
pub
const
R_IA64_PCREL32LSB
:
u32
=
0x4d
;
pub
const
R_IA64_PCREL64MSB
:
u32
=
0x4e
;
pub
const
R_IA64_PCREL64LSB
:
u32
=
0x4f
;
pub
const
R_IA64_LTOFF_FPTR22
:
u32
=
0x52
;
pub
const
R_IA64_LTOFF_FPTR64I
:
u32
=
0x53
;
pub
const
R_IA64_LTOFF_FPTR32MSB
:
u32
=
0x54
;
pub
const
R_IA64_LTOFF_FPTR32LSB
:
u32
=
0x55
;
pub
const
R_IA64_LTOFF_FPTR64MSB
:
u32
=
0x56
;
pub
const
R_IA64_LTOFF_FPTR64LSB
:
u32
=
0x57
;
pub
const
R_IA64_SEGREL32MSB
:
u32
=
0x5c
;
pub
const
R_IA64_SEGREL32LSB
:
u32
=
0x5d
;
pub
const
R_IA64_SEGREL64MSB
:
u32
=
0x5e
;
pub
const
R_IA64_SEGREL64LSB
:
u32
=
0x5f
;
pub
const
R_IA64_SECREL32MSB
:
u32
=
0x64
;
pub
const
R_IA64_SECREL32LSB
:
u32
=
0x65
;
pub
const
R_IA64_SECREL64MSB
:
u32
=
0x66
;
pub
const
R_IA64_SECREL64LSB
:
u32
=
0x67
;
pub
const
R_IA64_REL32MSB
:
u32
=
0x6c
;
pub
const
R_IA64_REL32LSB
:
u32
=
0x6d
;
pub
const
R_IA64_REL64MSB
:
u32
=
0x6e
;
pub
const
R_IA64_REL64LSB
:
u32
=
0x6f
;
pub
const
R_IA64_LTV32MSB
:
u32
=
0x74
;
pub
const
R_IA64_LTV32LSB
:
u32
=
0x75
;
pub
const
R_IA64_LTV64MSB
:
u32
=
0x76
;
pub
const
R_IA64_LTV64LSB
:
u32
=
0x77
;
pub
const
R_IA64_PCREL21BI
:
u32
=
0x79
;
pub
const
R_IA64_PCREL22
:
u32
=
0x7a
;
pub
const
R_IA64_PCREL64I
:
u32
=
0x7b
;
pub
const
R_IA64_IPLTMSB
:
u32
=
0x80
;
pub
const
R_IA64_IPLTLSB
:
u32
=
0x81
;
pub
const
R_IA64_COPY
:
u32
=
0x84
;
pub
const
R_IA64_SUB
:
u32
=
0x85
;
pub
const
R_IA64_LTOFF22X
:
u32
=
0x86
;
pub
const
R_IA64_LDXMOV
:
u32
=
0x87
;
pub
const
R_IA64_TPREL14
:
u32
=
0x91
;
pub
const
R_IA64_TPREL22
:
u32
=
0x92
;
pub
const
R_IA64_TPREL64I
:
u32
=
0x93
;
pub
const
R_IA64_TPREL64MSB
:
u32
=
0x96
;
pub
const
R_IA64_TPREL64LSB
:
u32
=
0x97
;
pub
const
R_IA64_LTOFF_TPREL22
:
u32
=
0x9a
;
pub
const
R_IA64_DTPMOD64MSB
:
u32
=
0xa6
;
pub
const
R_IA64_DTPMOD64LSB
:
u32
=
0xa7
;
pub
const
R_IA64_LTOFF_DTPMOD22
:
u32
=
0xaa
;
pub
const
R_IA64_DTPREL14
:
u32
=
0xb1
;
pub
const
R_IA64_DTPREL22
:
u32
=
0xb2
;
pub
const
R_IA64_DTPREL64I
:
u32
=
0xb3
;
pub
const
R_IA64_DTPREL32MSB
:
u32
=
0xb4
;
pub
const
R_IA64_DTPREL32LSB
:
u32
=
0xb5
;
pub
const
R_IA64_DTPREL64MSB
:
u32
=
0xb6
;
pub
const
R_IA64_DTPREL64LSB
:
u32
=
0xb7
;
pub
const
R_IA64_LTOFF_DTPREL22
:
u32
=
0xba
;
pub
const
EF_SH_MACH_MASK
:
u32
=
0x1f
;
pub
const
EF_SH_UNKNOWN
:
u32
=
0x0
;
pub
const
EF_SH1
:
u32
=
0x1
;
pub
const
EF_SH2
:
u32
=
0x2
;
pub
const
EF_SH3
:
u32
=
0x3
;
pub
const
EF_SH_DSP
:
u32
=
0x4
;
pub
const
EF_SH3_DSP
:
u32
=
0x5
;
pub
const
EF_SH4AL_DSP
:
u32
=
0x6
;
pub
const
EF_SH3E
:
u32
=
0x8
;
pub
const
EF_SH4
:
u32
=
0x9
;
pub
const
EF_SH2E
:
u32
=
0xb
;
pub
const
EF_SH4A
:
u32
=
0xc
;
pub
const
EF_SH2A
:
u32
=
0xd
;
pub
const
EF_SH4_NOFPU
:
u32
=
0x10
;
pub
const
EF_SH4A_NOFPU
:
u32
=
0x11
;
pub
const
EF_SH4_NOMMU_NOFPU
:
u32
=
0x12
;
pub
const
EF_SH2A_NOFPU
:
u32
=
0x13
;
pub
const
EF_SH3_NOMMU
:
u32
=
0x14
;
pub
const
EF_SH2A_SH4_NOFPU
:
u32
=
0x15
;
pub
const
EF_SH2A_SH3_NOFPU
:
u32
=
0x16
;
pub
const
EF_SH2A_SH4
:
u32
=
0x17
;
pub
const
EF_SH2A_SH3E
:
u32
=
0x18
;
pub
const
R_SH_NONE
:
u32
=
0
;
pub
const
R_SH_DIR32
:
u32
=
1
;
pub
const
R_SH_REL32
:
u32
=
2
;
pub
const
R_SH_DIR8WPN
:
u32
=
3
;
pub
const
R_SH_IND12W
:
u32
=
4
;
pub
const
R_SH_DIR8WPL
:
u32
=
5
;
pub
const
R_SH_DIR8WPZ
:
u32
=
6
;
pub
const
R_SH_DIR8BP
:
u32
=
7
;
pub
const
R_SH_DIR8W
:
u32
=
8
;
pub
const
R_SH_DIR8L
:
u32
=
9
;
pub
const
R_SH_SWITCH16
:
u32
=
25
;
pub
const
R_SH_SWITCH32
:
u32
=
26
;
pub
const
R_SH_USES
:
u32
=
27
;
pub
const
R_SH_COUNT
:
u32
=
28
;
pub
const
R_SH_ALIGN
:
u32
=
29
;
pub
const
R_SH_CODE
:
u32
=
30
;
pub
const
R_SH_DATA
:
u32
=
31
;
pub
const
R_SH_LABEL
:
u32
=
32
;
pub
const
R_SH_SWITCH8
:
u32
=
33
;
pub
const
R_SH_GNU_VTINHERIT
:
u32
=
34
;
pub
const
R_SH_GNU_VTENTRY
:
u32
=
35
;
pub
const
R_SH_TLS_GD_32
:
u32
=
144
;
pub
const
R_SH_TLS_LD_32
:
u32
=
145
;
pub
const
R_SH_TLS_LDO_32
:
u32
=
146
;
pub
const
R_SH_TLS_IE_32
:
u32
=
147
;
pub
const
R_SH_TLS_LE_32
:
u32
=
148
;
pub
const
R_SH_TLS_DTPMOD32
:
u32
=
149
;
pub
const
R_SH_TLS_DTPOFF32
:
u32
=
150
;
pub
const
R_SH_TLS_TPOFF32
:
u32
=
151
;
pub
const
R_SH_GOT32
:
u32
=
160
;
pub
const
R_SH_PLT32
:
u32
=
161
;
pub
const
R_SH_COPY
:
u32
=
162
;
pub
const
R_SH_GLOB_DAT
:
u32
=
163
;
pub
const
R_SH_JMP_SLOT
:
u32
=
164
;
pub
const
R_SH_RELATIVE
:
u32
=
165
;
pub
const
R_SH_GOTOFF
:
u32
=
166
;
pub
const
R_SH_GOTPC
:
u32
=
167
;
pub
const
EF_S390_HIGH_GPRS
:
u32
=
0x0000_0001
;
pub
const
R_390_NONE
:
u32
=
0
;
pub
const
R_390_8
:
u32
=
1
;
pub
const
R_390_12
:
u32
=
2
;
pub
const
R_390_16
:
u32
=
3
;
pub
const
R_390_32
:
u32
=
4
;
pub
const
R_390_PC32
:
u32
=
5
;
pub
const
R_390_GOT12
:
u32
=
6
;
pub
const
R_390_GOT32
:
u32
=
7
;
pub
const
R_390_PLT32
:
u32
=
8
;
pub
const
R_390_COPY
:
u32
=
9
;
pub
const
R_390_GLOB_DAT
:
u32
=
10
;
pub
const
R_390_JMP_SLOT
:
u32
=
11
;
pub
const
R_390_RELATIVE
:
u32
=
12
;
pub
const
R_390_GOTOFF32
:
u32
=
13
;
pub
const
R_390_GOTPC
:
u32
=
14
;
pub
const
R_390_GOT16
:
u32
=
15
;
pub
const
R_390_PC16
:
u32
=
16
;
pub
const
R_390_PC16DBL
:
u32
=
17
;
pub
const
R_390_PLT16DBL
:
u32
=
18
;
pub
const
R_390_PC32DBL
:
u32
=
19
;
pub
const
R_390_PLT32DBL
:
u32
=
20
;
pub
const
R_390_GOTPCDBL
:
u32
=
21
;
pub
const
R_390_64
:
u32
=
22
;
pub
const
R_390_PC64
:
u32
=
23
;
pub
const
R_390_GOT64
:
u32
=
24
;
pub
const
R_390_PLT64
:
u32
=
25
;
pub
const
R_390_GOTENT
:
u32
=
26
;
pub
const
R_390_GOTOFF16
:
u32
=
27
;
pub
const
R_390_GOTOFF64
:
u32
=
28
;
pub
const
R_390_GOTPLT12
:
u32
=
29
;
pub
const
R_390_GOTPLT16
:
u32
=
30
;
pub
const
R_390_GOTPLT32
:
u32
=
31
;
pub
const
R_390_GOTPLT64
:
u32
=
32
;
pub
const
R_390_GOTPLTENT
:
u32
=
33
;
pub
const
R_390_PLTOFF16
:
u32
=
34
;
pub
const
R_390_PLTOFF32
:
u32
=
35
;
pub
const
R_390_PLTOFF64
:
u32
=
36
;
pub
const
R_390_TLS_LOAD
:
u32
=
37
;
pub
const
R_390_TLS_GDCALL
:
u32
=
38
;
pub
const
R_390_TLS_LDCALL
:
u32
=
39
;
pub
const
R_390_TLS_GD32
:
u32
=
40
;
pub
const
R_390_TLS_GD64
:
u32
=
41
;
pub
const
R_390_TLS_GOTIE12
:
u32
=
42
;
pub
const
R_390_TLS_GOTIE32
:
u32
=
43
;
pub
const
R_390_TLS_GOTIE64
:
u32
=
44
;
pub
const
R_390_TLS_LDM32
:
u32
=
45
;
pub
const
R_390_TLS_LDM64
:
u32
=
46
;
pub
const
R_390_TLS_IE32
:
u32
=
47
;
pub
const
R_390_TLS_IE64
:
u32
=
48
;
pub
const
R_390_TLS_IEENT
:
u32
=
49
;
pub
const
R_390_TLS_LE32
:
u32
=
50
;
pub
const
R_390_TLS_LE64
:
u32
=
51
;
pub
const
R_390_TLS_LDO32
:
u32
=
52
;
pub
const
R_390_TLS_LDO64
:
u32
=
53
;
pub
const
R_390_TLS_DTPMOD
:
u32
=
54
;
pub
const
R_390_TLS_DTPOFF
:
u32
=
55
;
pub
const
R_390_TLS_TPOFF
:
u32
=
56
;
pub
const
R_390_20
:
u32
=
57
;
pub
const
R_390_GOT20
:
u32
=
58
;
pub
const
R_390_GOTPLT20
:
u32
=
59
;
pub
const
R_390_TLS_GOTIE20
:
u32
=
60
;
pub
const
R_390_IRELATIVE
:
u32
=
61
;
pub
const
R_CRIS_NONE
:
u32
=
0
;
pub
const
R_CRIS_8
:
u32
=
1
;
pub
const
R_CRIS_16
:
u32
=
2
;
pub
const
R_CRIS_32
:
u32
=
3
;
pub
const
R_CRIS_8_PCREL
:
u32
=
4
;
pub
const
R_CRIS_16_PCREL
:
u32
=
5
;
pub
const
R_CRIS_32_PCREL
:
u32
=
6
;
pub
const
R_CRIS_GNU_VTINHERIT
:
u32
=
7
;
pub
const
R_CRIS_GNU_VTENTRY
:
u32
=
8
;
pub
const
R_CRIS_COPY
:
u32
=
9
;
pub
const
R_CRIS_GLOB_DAT
:
u32
=
10
;
pub
const
R_CRIS_JUMP_SLOT
:
u32
=
11
;
pub
const
R_CRIS_RELATIVE
:
u32
=
12
;
pub
const
R_CRIS_16_GOT
:
u32
=
13
;
pub
const
R_CRIS_32_GOT
:
u32
=
14
;
pub
const
R_CRIS_16_GOTPLT
:
u32
=
15
;
pub
const
R_CRIS_32_GOTPLT
:
u32
=
16
;
pub
const
R_CRIS_32_GOTREL
:
u32
=
17
;
pub
const
R_CRIS_32_PLT_GOTREL
:
u32
=
18
;
pub
const
R_CRIS_32_PLT_PCREL
:
u32
=
19
;
pub
const
R_X86_64_NONE
:
u32
=
0
;
pub
const
R_X86_64_64
:
u32
=
1
;
pub
const
R_X86_64_PC32
:
u32
=
2
;
pub
const
R_X86_64_GOT32
:
u32
=
3
;
pub
const
R_X86_64_PLT32
:
u32
=
4
;
pub
const
R_X86_64_COPY
:
u32
=
5
;
pub
const
R_X86_64_GLOB_DAT
:
u32
=
6
;
pub
const
R_X86_64_JUMP_SLOT
:
u32
=
7
;
pub
const
R_X86_64_RELATIVE
:
u32
=
8
;
pub
const
R_X86_64_GOTPCREL
:
u32
=
9
;
pub
const
R_X86_64_32
:
u32
=
10
;
pub
const
R_X86_64_32S
:
u32
=
11
;
pub
const
R_X86_64_16
:
u32
=
12
;
pub
const
R_X86_64_PC16
:
u32
=
13
;
pub
const
R_X86_64_8
:
u32
=
14
;
pub
const
R_X86_64_PC8
:
u32
=
15
;
pub
const
R_X86_64_DTPMOD64
:
u32
=
16
;
pub
const
R_X86_64_DTPOFF64
:
u32
=
17
;
pub
const
R_X86_64_TPOFF64
:
u32
=
18
;
pub
const
R_X86_64_TLSGD
:
u32
=
19
;
pub
const
R_X86_64_TLSLD
:
u32
=
20
;
pub
const
R_X86_64_DTPOFF32
:
u32
=
21
;
pub
const
R_X86_64_GOTTPOFF
:
u32
=
22
;
pub
const
R_X86_64_TPOFF32
:
u32
=
23
;
pub
const
R_X86_64_PC64
:
u32
=
24
;
pub
const
R_X86_64_GOTOFF64
:
u32
=
25
;
pub
const
R_X86_64_GOTPC32
:
u32
=
26
;
pub
const
R_X86_64_GOT64
:
u32
=
27
;
pub
const
R_X86_64_GOTPCREL64
:
u32
=
28
;
pub
const
R_X86_64_GOTPC64
:
u32
=
29
;
pub
const
R_X86_64_GOTPLT64
:
u32
=
30
;
pub
const
R_X86_64_PLTOFF64
:
u32
=
31
;
pub
const
R_X86_64_SIZE32
:
u32
=
32
;
pub
const
R_X86_64_SIZE64
:
u32
=
33
;
pub
const
R_X86_64_GOTPC32_TLSDESC
:
u32
=
34
;
pub
const
R_X86_64_TLSDESC_CALL
:
u32
=
35
;
pub
const
R_X86_64_TLSDESC
:
u32
=
36
;
pub
const
R_X86_64_IRELATIVE
:
u32
=
37
;
pub
const
R_X86_64_RELATIVE64
:
u32
=
38
;
pub
const
R_X86_64_GOTPCRELX
:
u32
=
41
;
pub
const
R_X86_64_REX_GOTPCRELX
:
u32
=
42
;
pub
const
SHT_X86_64_UNWIND
:
u32
=
0x7000_0001
;
pub
const
R_MN10300_NONE
:
u32
=
0
;
pub
const
R_MN10300_32
:
u32
=
1
;
pub
const
R_MN10300_16
:
u32
=
2
;
pub
const
R_MN10300_8
:
u32
=
3
;
pub
const
R_MN10300_PCREL32
:
u32
=
4
;
pub
const
R_MN10300_PCREL16
:
u32
=
5
;
pub
const
R_MN10300_PCREL8
:
u32
=
6
;
pub
const
R_MN10300_GNU_VTINHERIT
:
u32
=
7
;
pub
const
R_MN10300_GNU_VTENTRY
:
u32
=
8
;
pub
const
R_MN10300_24
:
u32
=
9
;
pub
const
R_MN10300_GOTPC32
:
u32
=
10
;
pub
const
R_MN10300_GOTPC16
:
u32
=
11
;
pub
const
R_MN10300_GOTOFF32
:
u32
=
12
;
pub
const
R_MN10300_GOTOFF24
:
u32
=
13
;
pub
const
R_MN10300_GOTOFF16
:
u32
=
14
;
pub
const
R_MN10300_PLT32
:
u32
=
15
;
pub
const
R_MN10300_PLT16
:
u32
=
16
;
pub
const
R_MN10300_GOT32
:
u32
=
17
;
pub
const
R_MN10300_GOT24
:
u32
=
18
;
pub
const
R_MN10300_GOT16
:
u32
=
19
;
pub
const
R_MN10300_COPY
:
u32
=
20
;
pub
const
R_MN10300_GLOB_DAT
:
u32
=
21
;
pub
const
R_MN10300_JMP_SLOT
:
u32
=
22
;
pub
const
R_MN10300_RELATIVE
:
u32
=
23
;
pub
const
R_MN10300_TLS_GD
:
u32
=
24
;
pub
const
R_MN10300_TLS_LD
:
u32
=
25
;
pub
const
R_MN10300_TLS_LDO
:
u32
=
26
;
pub
const
R_MN10300_TLS_GOTIE
:
u32
=
27
;
pub
const
R_MN10300_TLS_IE
:
u32
=
28
;
pub
const
R_MN10300_TLS_LE
:
u32
=
29
;
pub
const
R_MN10300_TLS_DTPMOD
:
u32
=
30
;
pub
const
R_MN10300_TLS_DTPOFF
:
u32
=
31
;
pub
const
R_MN10300_TLS_TPOFF
:
u32
=
32
;
pub
const
R_MN10300_SYM_DIFF
:
u32
=
33
;
pub
const
R_MN10300_ALIGN
:
u32
=
34
;
pub
const
R_M32R_NONE
:
u32
=
0
;
pub
const
R_M32R_16
:
u32
=
1
;
pub
const
R_M32R_32
:
u32
=
2
;
pub
const
R_M32R_24
:
u32
=
3
;
pub
const
R_M32R_10_PCREL
:
u32
=
4
;
pub
const
R_M32R_18_PCREL
:
u32
=
5
;
pub
const
R_M32R_26_PCREL
:
u32
=
6
;
pub
const
R_M32R_HI16_ULO
:
u32
=
7
;
pub
const
R_M32R_HI16_SLO
:
u32
=
8
;
pub
const
R_M32R_LO16
:
u32
=
9
;
pub
const
R_M32R_SDA16
:
u32
=
10
;
pub
const
R_M32R_GNU_VTINHERIT
:
u32
=
11
;
pub
const
R_M32R_GNU_VTENTRY
:
u32
=
12
;
pub
const
R_M32R_16_RELA
:
u32
=
33
;
pub
const
R_M32R_32_RELA
:
u32
=
34
;
pub
const
R_M32R_24_RELA
:
u32
=
35
;
pub
const
R_M32R_10_PCREL_RELA
:
u32
=
36
;
pub
const
R_M32R_18_PCREL_RELA
:
u32
=
37
;
pub
const
R_M32R_26_PCREL_RELA
:
u32
=
38
;
pub
const
R_M32R_HI16_ULO_RELA
:
u32
=
39
;
pub
const
R_M32R_HI16_SLO_RELA
:
u32
=
40
;
pub
const
R_M32R_LO16_RELA
:
u32
=
41
;
pub
const
R_M32R_SDA16_RELA
:
u32
=
42
;
pub
const
R_M32R_RELA_GNU_VTINHERIT
:
u32
=
43
;
pub
const
R_M32R_RELA_GNU_VTENTRY
:
u32
=
44
;
pub
const
R_M32R_REL32
:
u32
=
45
;
pub
const
R_M32R_GOT24
:
u32
=
48
;
pub
const
R_M32R_26_PLTREL
:
u32
=
49
;
pub
const
R_M32R_COPY
:
u32
=
50
;
pub
const
R_M32R_GLOB_DAT
:
u32
=
51
;
pub
const
R_M32R_JMP_SLOT
:
u32
=
52
;
pub
const
R_M32R_RELATIVE
:
u32
=
53
;
pub
const
R_M32R_GOTOFF
:
u32
=
54
;
pub
const
R_M32R_GOTPC24
:
u32
=
55
;
pub
const
R_M32R_GOT16_HI_ULO
:
u32
=
56
;
pub
const
R_M32R_GOT16_HI_SLO
:
u32
=
57
;
pub
const
R_M32R_GOT16_LO
:
u32
=
58
;
pub
const
R_M32R_GOTPC_HI_ULO
:
u32
=
59
;
pub
const
R_M32R_GOTPC_HI_SLO
:
u32
=
60
;
pub
const
R_M32R_GOTPC_LO
:
u32
=
61
;
pub
const
R_M32R_GOTOFF_HI_ULO
:
u32
=
62
;
pub
const
R_M32R_GOTOFF_HI_SLO
:
u32
=
63
;
pub
const
R_M32R_GOTOFF_LO
:
u32
=
64
;
pub
const
R_M32R_NUM
:
u32
=
256
;
pub
const
R_MICROBLAZE_NONE
:
u32
=
0
;
pub
const
R_MICROBLAZE_32
:
u32
=
1
;
pub
const
R_MICROBLAZE_32_PCREL
:
u32
=
2
;
pub
const
R_MICROBLAZE_64_PCREL
:
u32
=
3
;
pub
const
R_MICROBLAZE_32_PCREL_LO
:
u32
=
4
;
pub
const
R_MICROBLAZE_64
:
u32
=
5
;
pub
const
R_MICROBLAZE_32_LO
:
u32
=
6
;
pub
const
R_MICROBLAZE_SRO32
:
u32
=
7
;
pub
const
R_MICROBLAZE_SRW32
:
u32
=
8
;
pub
const
R_MICROBLAZE_64_NONE
:
u32
=
9
;
pub
const
R_MICROBLAZE_32_SYM_OP_SYM
:
u32
=
10
;
pub
const
R_MICROBLAZE_GNU_VTINHERIT
:
u32
=
11
;
pub
const
R_MICROBLAZE_GNU_VTENTRY
:
u32
=
12
;
pub
const
R_MICROBLAZE_GOTPC_64
:
u32
=
13
;
pub
const
R_MICROBLAZE_GOT_64
:
u32
=
14
;
pub
const
R_MICROBLAZE_PLT_64
:
u32
=
15
;
pub
const
R_MICROBLAZE_REL
:
u32
=
16
;
pub
const
R_MICROBLAZE_JUMP_SLOT
:
u32
=
17
;
pub
const
R_MICROBLAZE_GLOB_DAT
:
u32
=
18
;
pub
const
R_MICROBLAZE_GOTOFF_64
:
u32
=
19
;
pub
const
R_MICROBLAZE_GOTOFF_32
:
u32
=
20
;
pub
const
R_MICROBLAZE_COPY
:
u32
=
21
;
pub
const
R_MICROBLAZE_TLS
:
u32
=
22
;
pub
const
R_MICROBLAZE_TLSGD
:
u32
=
23
;
pub
const
R_MICROBLAZE_TLSLD
:
u32
=
24
;
pub
const
R_MICROBLAZE_TLSDTPMOD32
:
u32
=
25
;
pub
const
R_MICROBLAZE_TLSDTPREL32
:
u32
=
26
;
pub
const
R_MICROBLAZE_TLSDTPREL64
:
u32
=
27
;
pub
const
R_MICROBLAZE_TLSGOTTPREL32
:
u32
=
28
;
pub
const
R_MICROBLAZE_TLSTPREL32
:
u32
=
29
;
pub
const
DT_NIOS2_GP
:
u32
=
0x7000_0002
;
pub
const
R_NIOS2_NONE
:
u32
=
0
;
pub
const
R_NIOS2_S16
:
u32
=
1
;
pub
const
R_NIOS2_U16
:
u32
=
2
;
pub
const
R_NIOS2_PCREL16
:
u32
=
3
;
pub
const
R_NIOS2_CALL26
:
u32
=
4
;
pub
const
R_NIOS2_IMM5
:
u32
=
5
;
pub
const
R_NIOS2_CACHE_OPX
:
u32
=
6
;
pub
const
R_NIOS2_IMM6
:
u32
=
7
;
pub
const
R_NIOS2_IMM8
:
u32
=
8
;
pub
const
R_NIOS2_HI16
:
u32
=
9
;
pub
const
R_NIOS2_LO16
:
u32
=
10
;
pub
const
R_NIOS2_HIADJ16
:
u32
=
11
;
pub
const
R_NIOS2_BFD_RELOC_32
:
u32
=
12
;
pub
const
R_NIOS2_BFD_RELOC_16
:
u32
=
13
;
pub
const
R_NIOS2_BFD_RELOC_8
:
u32
=
14
;
pub
const
R_NIOS2_GPREL
:
u32
=
15
;
pub
const
R_NIOS2_GNU_VTINHERIT
:
u32
=
16
;
pub
const
R_NIOS2_GNU_VTENTRY
:
u32
=
17
;
pub
const
R_NIOS2_UJMP
:
u32
=
18
;
pub
const
R_NIOS2_CJMP
:
u32
=
19
;
pub
const
R_NIOS2_CALLR
:
u32
=
20
;
pub
const
R_NIOS2_ALIGN
:
u32
=
21
;
pub
const
R_NIOS2_GOT16
:
u32
=
22
;
pub
const
R_NIOS2_CALL16
:
u32
=
23
;
pub
const
R_NIOS2_GOTOFF_LO
:
u32
=
24
;
pub
const
R_NIOS2_GOTOFF_HA
:
u32
=
25
;
pub
const
R_NIOS2_PCREL_LO
:
u32
=
26
;
pub
const
R_NIOS2_PCREL_HA
:
u32
=
27
;
pub
const
R_NIOS2_TLS_GD16
:
u32
=
28
;
pub
const
R_NIOS2_TLS_LDM16
:
u32
=
29
;
pub
const
R_NIOS2_TLS_LDO16
:
u32
=
30
;
pub
const
R_NIOS2_TLS_IE16
:
u32
=
31
;
pub
const
R_NIOS2_TLS_LE16
:
u32
=
32
;
pub
const
R_NIOS2_TLS_DTPMOD
:
u32
=
33
;
pub
const
R_NIOS2_TLS_DTPREL
:
u32
=
34
;
pub
const
R_NIOS2_TLS_TPREL
:
u32
=
35
;
pub
const
R_NIOS2_COPY
:
u32
=
36
;
pub
const
R_NIOS2_GLOB_DAT
:
u32
=
37
;
pub
const
R_NIOS2_JUMP_SLOT
:
u32
=
38
;
pub
const
R_NIOS2_RELATIVE
:
u32
=
39
;
pub
const
R_NIOS2_GOTOFF
:
u32
=
40
;
pub
const
R_NIOS2_CALL26_NOAT
:
u32
=
41
;
pub
const
R_NIOS2_GOT_LO
:
u32
=
42
;
pub
const
R_NIOS2_GOT_HA
:
u32
=
43
;
pub
const
R_NIOS2_CALL_LO
:
u32
=
44
;
pub
const
R_NIOS2_CALL_HA
:
u32
=
45
;
pub
const
R_TILEPRO_NONE
:
u32
=
0
;
pub
const
R_TILEPRO_32
:
u32
=
1
;
pub
const
R_TILEPRO_16
:
u32
=
2
;
pub
const
R_TILEPRO_8
:
u32
=
3
;
pub
const
R_TILEPRO_32_PCREL
:
u32
=
4
;
pub
const
R_TILEPRO_16_PCREL
:
u32
=
5
;
pub
const
R_TILEPRO_8_PCREL
:
u32
=
6
;
pub
const
R_TILEPRO_LO16
:
u32
=
7
;
pub
const
R_TILEPRO_HI16
:
u32
=
8
;
pub
const
R_TILEPRO_HA16
:
u32
=
9
;
pub
const
R_TILEPRO_COPY
:
u32
=
10
;
pub
const
R_TILEPRO_GLOB_DAT
:
u32
=
11
;
pub
const
R_TILEPRO_JMP_SLOT
:
u32
=
12
;
pub
const
R_TILEPRO_RELATIVE
:
u32
=
13
;
pub
const
R_TILEPRO_BROFF_X1
:
u32
=
14
;
pub
const
R_TILEPRO_JOFFLONG_X1
:
u32
=
15
;
pub
const
R_TILEPRO_JOFFLONG_X1_PLT
:
u32
=
16
;
pub
const
R_TILEPRO_IMM8_X0
:
u32
=
17
;
pub
const
R_TILEPRO_IMM8_Y0
:
u32
=
18
;
pub
const
R_TILEPRO_IMM8_X1
:
u32
=
19
;
pub
const
R_TILEPRO_IMM8_Y1
:
u32
=
20
;
pub
const
R_TILEPRO_MT_IMM15_X1
:
u32
=
21
;
pub
const
R_TILEPRO_MF_IMM15_X1
:
u32
=
22
;
pub
const
R_TILEPRO_IMM16_X0
:
u32
=
23
;
pub
const
R_TILEPRO_IMM16_X1
:
u32
=
24
;
pub
const
R_TILEPRO_IMM16_X0_LO
:
u32
=
25
;
pub
const
R_TILEPRO_IMM16_X1_LO
:
u32
=
26
;
pub
const
R_TILEPRO_IMM16_X0_HI
:
u32
=
27
;
pub
const
R_TILEPRO_IMM16_X1_HI
:
u32
=
28
;
pub
const
R_TILEPRO_IMM16_X0_HA
:
u32
=
29
;
pub
const
R_TILEPRO_IMM16_X1_HA
:
u32
=
30
;
pub
const
R_TILEPRO_IMM16_X0_PCREL
:
u32
=
31
;
pub
const
R_TILEPRO_IMM16_X1_PCREL
:
u32
=
32
;
pub
const
R_TILEPRO_IMM16_X0_LO_PCREL
:
u32
=
33
;
pub
const
R_TILEPRO_IMM16_X1_LO_PCREL
:
u32
=
34
;
pub
const
R_TILEPRO_IMM16_X0_HI_PCREL
:
u32
=
35
;
pub
const
R_TILEPRO_IMM16_X1_HI_PCREL
:
u32
=
36
;
pub
const
R_TILEPRO_IMM16_X0_HA_PCREL
:
u32
=
37
;
pub
const
R_TILEPRO_IMM16_X1_HA_PCREL
:
u32
=
38
;
pub
const
R_TILEPRO_IMM16_X0_GOT
:
u32
=
39
;
pub
const
R_TILEPRO_IMM16_X1_GOT
:
u32
=
40
;
pub
const
R_TILEPRO_IMM16_X0_GOT_LO
:
u32
=
41
;
pub
const
R_TILEPRO_IMM16_X1_GOT_LO
:
u32
=
42
;
pub
const
R_TILEPRO_IMM16_X0_GOT_HI
:
u32
=
43
;
pub
const
R_TILEPRO_IMM16_X1_GOT_HI
:
u32
=
44
;
pub
const
R_TILEPRO_IMM16_X0_GOT_HA
:
u32
=
45
;
pub
const
R_TILEPRO_IMM16_X1_GOT_HA
:
u32
=
46
;
pub
const
R_TILEPRO_MMSTART_X0
:
u32
=
47
;
pub
const
R_TILEPRO_MMEND_X0
:
u32
=
48
;
pub
const
R_TILEPRO_MMSTART_X1
:
u32
=
49
;
pub
const
R_TILEPRO_MMEND_X1
:
u32
=
50
;
pub
const
R_TILEPRO_SHAMT_X0
:
u32
=
51
;
pub
const
R_TILEPRO_SHAMT_X1
:
u32
=
52
;
pub
const
R_TILEPRO_SHAMT_Y0
:
u32
=
53
;
pub
const
R_TILEPRO_SHAMT_Y1
:
u32
=
54
;
pub
const
R_TILEPRO_DEST_IMM8_X1
:
u32
=
55
;
pub
const
R_TILEPRO_TLS_GD_CALL
:
u32
=
60
;
pub
const
R_TILEPRO_IMM8_X0_TLS_GD_ADD
:
u32
=
61
;
pub
const
R_TILEPRO_IMM8_X1_TLS_GD_ADD
:
u32
=
62
;
pub
const
R_TILEPRO_IMM8_Y0_TLS_GD_ADD
:
u32
=
63
;
pub
const
R_TILEPRO_IMM8_Y1_TLS_GD_ADD
:
u32
=
64
;
pub
const
R_TILEPRO_TLS_IE_LOAD
:
u32
=
65
;
pub
const
R_TILEPRO_IMM16_X0_TLS_GD
:
u32
=
66
;
pub
const
R_TILEPRO_IMM16_X1_TLS_GD
:
u32
=
67
;
pub
const
R_TILEPRO_IMM16_X0_TLS_GD_LO
:
u32
=
68
;
pub
const
R_TILEPRO_IMM16_X1_TLS_GD_LO
:
u32
=
69
;
pub
const
R_TILEPRO_IMM16_X0_TLS_GD_HI
:
u32
=
70
;
pub
const
R_TILEPRO_IMM16_X1_TLS_GD_HI
:
u32
=
71
;
pub
const
R_TILEPRO_IMM16_X0_TLS_GD_HA
:
u32
=
72
;
pub
const
R_TILEPRO_IMM16_X1_TLS_GD_HA
:
u32
=
73
;
pub
const
R_TILEPRO_IMM16_X0_TLS_IE
:
u32
=
74
;
pub
const
R_TILEPRO_IMM16_X1_TLS_IE
:
u32
=
75
;
pub
const
R_TILEPRO_IMM16_X0_TLS_IE_LO
:
u32
=
76
;
pub
const
R_TILEPRO_IMM16_X1_TLS_IE_LO
:
u32
=
77
;
pub
const
R_TILEPRO_IMM16_X0_TLS_IE_HI
:
u32
=
78
;
pub
const
R_TILEPRO_IMM16_X1_TLS_IE_HI
:
u32
=
79
;
pub
const
R_TILEPRO_IMM16_X0_TLS_IE_HA
:
u32
=
80
;
pub
const
R_TILEPRO_IMM16_X1_TLS_IE_HA
:
u32
=
81
;
pub
const
R_TILEPRO_TLS_DTPMOD32
:
u32
=
82
;
pub
const
R_TILEPRO_TLS_DTPOFF32
:
u32
=
83
;
pub
const
R_TILEPRO_TLS_TPOFF32
:
u32
=
84
;
pub
const
R_TILEPRO_IMM16_X0_TLS_LE
:
u32
=
85
;
pub
const
R_TILEPRO_IMM16_X1_TLS_LE
:
u32
=
86
;
pub
const
R_TILEPRO_IMM16_X0_TLS_LE_LO
:
u32
=
87
;
pub
const
R_TILEPRO_IMM16_X1_TLS_LE_LO
:
u32
=
88
;
pub
const
R_TILEPRO_IMM16_X0_TLS_LE_HI
:
u32
=
89
;
pub
const
R_TILEPRO_IMM16_X1_TLS_LE_HI
:
u32
=
90
;
pub
const
R_TILEPRO_IMM16_X0_TLS_LE_HA
:
u32
=
91
;
pub
const
R_TILEPRO_IMM16_X1_TLS_LE_HA
:
u32
=
92
;
pub
const
R_TILEPRO_GNU_VTINHERIT
:
u32
=
128
;
pub
const
R_TILEPRO_GNU_VTENTRY
:
u32
=
129
;
pub
const
R_TILEGX_NONE
:
u32
=
0
;
pub
const
R_TILEGX_64
:
u32
=
1
;
pub
const
R_TILEGX_32
:
u32
=
2
;
pub
const
R_TILEGX_16
:
u32
=
3
;
pub
const
R_TILEGX_8
:
u32
=
4
;
pub
const
R_TILEGX_64_PCREL
:
u32
=
5
;
pub
const
R_TILEGX_32_PCREL
:
u32
=
6
;
pub
const
R_TILEGX_16_PCREL
:
u32
=
7
;
pub
const
R_TILEGX_8_PCREL
:
u32
=
8
;
pub
const
R_TILEGX_HW0
:
u32
=
9
;
pub
const
R_TILEGX_HW1
:
u32
=
10
;
pub
const
R_TILEGX_HW2
:
u32
=
11
;
pub
const
R_TILEGX_HW3
:
u32
=
12
;
pub
const
R_TILEGX_HW0_LAST
:
u32
=
13
;
pub
const
R_TILEGX_HW1_LAST
:
u32
=
14
;
pub
const
R_TILEGX_HW2_LAST
:
u32
=
15
;
pub
const
R_TILEGX_COPY
:
u32
=
16
;
pub
const
R_TILEGX_GLOB_DAT
:
u32
=
17
;
pub
const
R_TILEGX_JMP_SLOT
:
u32
=
18
;
pub
const
R_TILEGX_RELATIVE
:
u32
=
19
;
pub
const
R_TILEGX_BROFF_X1
:
u32
=
20
;
pub
const
R_TILEGX_JUMPOFF_X1
:
u32
=
21
;
pub
const
R_TILEGX_JUMPOFF_X1_PLT
:
u32
=
22
;
pub
const
R_TILEGX_IMM8_X0
:
u32
=
23
;
pub
const
R_TILEGX_IMM8_Y0
:
u32
=
24
;
pub
const
R_TILEGX_IMM8_X1
:
u32
=
25
;
pub
const
R_TILEGX_IMM8_Y1
:
u32
=
26
;
pub
const
R_TILEGX_DEST_IMM8_X1
:
u32
=
27
;
pub
const
R_TILEGX_MT_IMM14_X1
:
u32
=
28
;
pub
const
R_TILEGX_MF_IMM14_X1
:
u32
=
29
;
pub
const
R_TILEGX_MMSTART_X0
:
u32
=
30
;
pub
const
R_TILEGX_MMEND_X0
:
u32
=
31
;
pub
const
R_TILEGX_SHAMT_X0
:
u32
=
32
;
pub
const
R_TILEGX_SHAMT_X1
:
u32
=
33
;
pub
const
R_TILEGX_SHAMT_Y0
:
u32
=
34
;
pub
const
R_TILEGX_SHAMT_Y1
:
u32
=
35
;
pub
const
R_TILEGX_IMM16_X0_HW0
:
u32
=
36
;
pub
const
R_TILEGX_IMM16_X1_HW0
:
u32
=
37
;
pub
const
R_TILEGX_IMM16_X0_HW1
:
u32
=
38
;
pub
const
R_TILEGX_IMM16_X1_HW1
:
u32
=
39
;
pub
const
R_TILEGX_IMM16_X0_HW2
:
u32
=
40
;
pub
const
R_TILEGX_IMM16_X1_HW2
:
u32
=
41
;
pub
const
R_TILEGX_IMM16_X0_HW3
:
u32
=
42
;
pub
const
R_TILEGX_IMM16_X1_HW3
:
u32
=
43
;
pub
const
R_TILEGX_IMM16_X0_HW0_LAST
:
u32
=
44
;
pub
const
R_TILEGX_IMM16_X1_HW0_LAST
:
u32
=
45
;
pub
const
R_TILEGX_IMM16_X0_HW1_LAST
:
u32
=
46
;
pub
const
R_TILEGX_IMM16_X1_HW1_LAST
:
u32
=
47
;
pub
const
R_TILEGX_IMM16_X0_HW2_LAST
:
u32
=
48
;
pub
const
R_TILEGX_IMM16_X1_HW2_LAST
:
u32
=
49
;
pub
const
R_TILEGX_IMM16_X0_HW0_PCREL
:
u32
=
50
;
pub
const
R_TILEGX_IMM16_X1_HW0_PCREL
:
u32
=
51
;
pub
const
R_TILEGX_IMM16_X0_HW1_PCREL
:
u32
=
52
;
pub
const
R_TILEGX_IMM16_X1_HW1_PCREL
:
u32
=
53
;
pub
const
R_TILEGX_IMM16_X0_HW2_PCREL
:
u32
=
54
;
pub
const
R_TILEGX_IMM16_X1_HW2_PCREL
:
u32
=
55
;
pub
const
R_TILEGX_IMM16_X0_HW3_PCREL
:
u32
=
56
;
pub
const
R_TILEGX_IMM16_X1_HW3_PCREL
:
u32
=
57
;
pub
const
R_TILEGX_IMM16_X0_HW0_LAST_PCREL
:
u32
=
58
;
pub
const
R_TILEGX_IMM16_X1_HW0_LAST_PCREL
:
u32
=
59
;
pub
const
R_TILEGX_IMM16_X0_HW1_LAST_PCREL
:
u32
=
60
;
pub
const
R_TILEGX_IMM16_X1_HW1_LAST_PCREL
:
u32
=
61
;
pub
const
R_TILEGX_IMM16_X0_HW2_LAST_PCREL
:
u32
=
62
;
pub
const
R_TILEGX_IMM16_X1_HW2_LAST_PCREL
:
u32
=
63
;
pub
const
R_TILEGX_IMM16_X0_HW0_GOT
:
u32
=
64
;
pub
const
R_TILEGX_IMM16_X1_HW0_GOT
:
u32
=
65
;
pub
const
R_TILEGX_IMM16_X0_HW0_PLT_PCREL
:
u32
=
66
;
pub
const
R_TILEGX_IMM16_X1_HW0_PLT_PCREL
:
u32
=
67
;
pub
const
R_TILEGX_IMM16_X0_HW1_PLT_PCREL
:
u32
=
68
;
pub
const
R_TILEGX_IMM16_X1_HW1_PLT_PCREL
:
u32
=
69
;
pub
const
R_TILEGX_IMM16_X0_HW2_PLT_PCREL
:
u32
=
70
;
pub
const
R_TILEGX_IMM16_X1_HW2_PLT_PCREL
:
u32
=
71
;
pub
const
R_TILEGX_IMM16_X0_HW0_LAST_GOT
:
u32
=
72
;
pub
const
R_TILEGX_IMM16_X1_HW0_LAST_GOT
:
u32
=
73
;
pub
const
R_TILEGX_IMM16_X0_HW1_LAST_GOT
:
u32
=
74
;
pub
const
R_TILEGX_IMM16_X1_HW1_LAST_GOT
:
u32
=
75
;
pub
const
R_TILEGX_IMM16_X0_HW3_PLT_PCREL
:
u32
=
76
;
pub
const
R_TILEGX_IMM16_X1_HW3_PLT_PCREL
:
u32
=
77
;
pub
const
R_TILEGX_IMM16_X0_HW0_TLS_GD
:
u32
=
78
;
pub
const
R_TILEGX_IMM16_X1_HW0_TLS_GD
:
u32
=
79
;
pub
const
R_TILEGX_IMM16_X0_HW0_TLS_LE
:
u32
=
80
;
pub
const
R_TILEGX_IMM16_X1_HW0_TLS_LE
:
u32
=
81
;
pub
const
R_TILEGX_IMM16_X0_HW0_LAST_TLS_LE
:
u32
=
82
;
pub
const
R_TILEGX_IMM16_X1_HW0_LAST_TLS_LE
:
u32
=
83
;
pub
const
R_TILEGX_IMM16_X0_HW1_LAST_TLS_LE
:
u32
=
84
;
pub
const
R_TILEGX_IMM16_X1_HW1_LAST_TLS_LE
:
u32
=
85
;
pub
const
R_TILEGX_IMM16_X0_HW0_LAST_TLS_GD
:
u32
=
86
;
pub
const
R_TILEGX_IMM16_X1_HW0_LAST_TLS_GD
:
u32
=
87
;
pub
const
R_TILEGX_IMM16_X0_HW1_LAST_TLS_GD
:
u32
=
88
;
pub
const
R_TILEGX_IMM16_X1_HW1_LAST_TLS_GD
:
u32
=
89
;
pub
const
R_TILEGX_IMM16_X0_HW0_TLS_IE
:
u32
=
92
;
pub
const
R_TILEGX_IMM16_X1_HW0_TLS_IE
:
u32
=
93
;
pub
const
R_TILEGX_IMM16_X0_HW0_LAST_PLT_PCREL
:
u32
=
94
;
pub
const
R_TILEGX_IMM16_X1_HW0_LAST_PLT_PCREL
:
u32
=
95
;
pub
const
R_TILEGX_IMM16_X0_HW1_LAST_PLT_PCREL
:
u32
=
96
;
pub
const
R_TILEGX_IMM16_X1_HW1_LAST_PLT_PCREL
:
u32
=
97
;
pub
const
R_TILEGX_IMM16_X0_HW2_LAST_PLT_PCREL
:
u32
=
98
;
pub
const
R_TILEGX_IMM16_X1_HW2_LAST_PLT_PCREL
:
u32
=
99
;
pub
const
R_TILEGX_IMM16_X0_HW0_LAST_TLS_IE
:
u32
=
100
;
pub
const
R_TILEGX_IMM16_X1_HW0_LAST_TLS_IE
:
u32
=
101
;
pub
const
R_TILEGX_IMM16_X0_HW1_LAST_TLS_IE
:
u32
=
102
;
pub
const
R_TILEGX_IMM16_X1_HW1_LAST_TLS_IE
:
u32
=
103
;
pub
const
R_TILEGX_TLS_DTPMOD64
:
u32
=
106
;
pub
const
R_TILEGX_TLS_DTPOFF64
:
u32
=
107
;
pub
const
R_TILEGX_TLS_TPOFF64
:
u32
=
108
;
pub
const
R_TILEGX_TLS_DTPMOD32
:
u32
=
109
;
pub
const
R_TILEGX_TLS_DTPOFF32
:
u32
=
110
;
pub
const
R_TILEGX_TLS_TPOFF32
:
u32
=
111
;
pub
const
R_TILEGX_TLS_GD_CALL
:
u32
=
112
;
pub
const
R_TILEGX_IMM8_X0_TLS_GD_ADD
:
u32
=
113
;
pub
const
R_TILEGX_IMM8_X1_TLS_GD_ADD
:
u32
=
114
;
pub
const
R_TILEGX_IMM8_Y0_TLS_GD_ADD
:
u32
=
115
;
pub
const
R_TILEGX_IMM8_Y1_TLS_GD_ADD
:
u32
=
116
;
pub
const
R_TILEGX_TLS_IE_LOAD
:
u32
=
117
;
pub
const
R_TILEGX_IMM8_X0_TLS_ADD
:
u32
=
118
;
pub
const
R_TILEGX_IMM8_X1_TLS_ADD
:
u32
=
119
;
pub
const
R_TILEGX_IMM8_Y0_TLS_ADD
:
u32
=
120
;
pub
const
R_TILEGX_IMM8_Y1_TLS_ADD
:
u32
=
121
;
pub
const
R_TILEGX_GNU_VTINHERIT
:
u32
=
128
;
pub
const
R_TILEGX_GNU_VTENTRY
:
u32
=
129
;
pub
const
EF_RISCV_RVC
:
u32
=
0x0001
;
pub
const
EF_RISCV_FLOAT_ABI
:
u32
=
0x0006
;
pub
const
EF_RISCV_FLOAT_ABI_SOFT
:
u32
=
0x0000
;
pub
const
EF_RISCV_FLOAT_ABI_SINGLE
:
u32
=
0x0002
;
pub
const
EF_RISCV_FLOAT_ABI_DOUBLE
:
u32
=
0x0004
;
pub
const
EF_RISCV_FLOAT_ABI_QUAD
:
u32
=
0x0006
;
pub
const
EF_RISCV_RVE
:
u32
=
0x0008
;
pub
const
EF_RISCV_TSO
:
u32
=
0x0010
;
pub
const
R_RISCV_NONE
:
u32
=
0
;
pub
const
R_RISCV_32
:
u32
=
1
;
pub
const
R_RISCV_64
:
u32
=
2
;
pub
const
R_RISCV_RELATIVE
:
u32
=
3
;
pub
const
R_RISCV_COPY
:
u32
=
4
;
pub
const
R_RISCV_JUMP_SLOT
:
u32
=
5
;
pub
const
R_RISCV_TLS_DTPMOD32
:
u32
=
6
;
pub
const
R_RISCV_TLS_DTPMOD64
:
u32
=
7
;
pub
const
R_RISCV_TLS_DTPREL32
:
u32
=
8
;
pub
const
R_RISCV_TLS_DTPREL64
:
u32
=
9
;
pub
const
R_RISCV_TLS_TPREL32
:
u32
=
10
;
pub
const
R_RISCV_TLS_TPREL64
:
u32
=
11
;
pub
const
R_RISCV_BRANCH
:
u32
=
16
;
pub
const
R_RISCV_JAL
:
u32
=
17
;
pub
const
R_RISCV_CALL
:
u32
=
18
;
pub
const
R_RISCV_CALL_PLT
:
u32
=
19
;
pub
const
R_RISCV_GOT_HI20
:
u32
=
20
;
pub
const
R_RISCV_TLS_GOT_HI20
:
u32
=
21
;
pub
const
R_RISCV_TLS_GD_HI20
:
u32
=
22
;
pub
const
R_RISCV_PCREL_HI20
:
u32
=
23
;
pub
const
R_RISCV_PCREL_LO12_I
:
u32
=
24
;
pub
const
R_RISCV_PCREL_LO12_S
:
u32
=
25
;
pub
const
R_RISCV_HI20
:
u32
=
26
;
pub
const
R_RISCV_LO12_I
:
u32
=
27
;
pub
const
R_RISCV_LO12_S
:
u32
=
28
;
pub
const
R_RISCV_TPREL_HI20
:
u32
=
29
;
pub
const
R_RISCV_TPREL_LO12_I
:
u32
=
30
;
pub
const
R_RISCV_TPREL_LO12_S
:
u32
=
31
;
pub
const
R_RISCV_TPREL_ADD
:
u32
=
32
;
pub
const
R_RISCV_ADD8
:
u32
=
33
;
pub
const
R_RISCV_ADD16
:
u32
=
34
;
pub
const
R_RISCV_ADD32
:
u32
=
35
;
pub
const
R_RISCV_ADD64
:
u32
=
36
;
pub
const
R_RISCV_SUB8
:
u32
=
37
;
pub
const
R_RISCV_SUB16
:
u32
=
38
;
pub
const
R_RISCV_SUB32
:
u32
=
39
;
pub
const
R_RISCV_SUB64
:
u32
=
40
;
pub
const
R_RISCV_GNU_VTINHERIT
:
u32
=
41
;
pub
const
R_RISCV_GNU_VTENTRY
:
u32
=
42
;
pub
const
R_RISCV_ALIGN
:
u32
=
43
;
pub
const
R_RISCV_RVC_BRANCH
:
u32
=
44
;
pub
const
R_RISCV_RVC_JUMP
:
u32
=
45
;
pub
const
R_RISCV_RVC_LUI
:
u32
=
46
;
pub
const
R_RISCV_GPREL_I
:
u32
=
47
;
pub
const
R_RISCV_GPREL_S
:
u32
=
48
;
pub
const
R_RISCV_TPREL_I
:
u32
=
49
;
pub
const
R_RISCV_TPREL_S
:
u32
=
50
;
pub
const
R_RISCV_RELAX
:
u32
=
51
;
pub
const
R_RISCV_SUB6
:
u32
=
52
;
pub
const
R_RISCV_SET6
:
u32
=
53
;
pub
const
R_RISCV_SET8
:
u32
=
54
;
pub
const
R_RISCV_SET16
:
u32
=
55
;
pub
const
R_RISCV_SET32
:
u32
=
56
;
pub
const
R_RISCV_32_PCREL
:
u32
=
57
;
pub
const
R_BPF_NONE
:
u32
=
0
;
pub
const
R_BPF_64_64
:
u32
=
1
;
pub
const
R_BPF_64_32
:
u32
=
10
;
pub
const
R_SBF_NONE
:
u32
=
0
;
pub
const
R_SBF_64_64
:
u32
=
1
;
pub
const
R_SBF_64_32
:
u32
=
10
;
pub
const
R_METAG_HIADDR16
:
u32
=
0
;
pub
const
R_METAG_LOADDR16
:
u32
=
1
;
pub
const
R_METAG_ADDR32
:
u32
=
2
;
pub
const
R_METAG_NONE
:
u32
=
3
;
pub
const
R_METAG_RELBRANCH
:
u32
=
4
;
pub
const
R_METAG_GETSETOFF
:
u32
=
5
;
pub
const
R_METAG_REG32OP1
:
u32
=
6
;
pub
const
R_METAG_REG32OP2
:
u32
=
7
;
pub
const
R_METAG_REG32OP3
:
u32
=
8
;
pub
const
R_METAG_REG16OP1
:
u32
=
9
;
pub
const
R_METAG_REG16OP2
:
u32
=
10
;
pub
const
R_METAG_REG16OP3
:
u32
=
11
;
pub
const
R_METAG_REG32OP4
:
u32
=
12
;
pub
const
R_METAG_HIOG
:
u32
=
13
;
pub
const
R_METAG_LOOG
:
u32
=
14
;
pub
const
R_METAG_REL8
:
u32
=
15
;
pub
const
R_METAG_REL16
:
u32
=
16
;
pub
const
R_METAG_GNU_VTINHERIT
:
u32
=
30
;
pub
const
R_METAG_GNU_VTENTRY
:
u32
=
31
;
pub
const
R_METAG_HI16_GOTOFF
:
u32
=
32
;
pub
const
R_METAG_LO16_GOTOFF
:
u32
=
33
;
pub
const
R_METAG_GETSET_GOTOFF
:
u32
=
34
;
pub
const
R_METAG_GETSET_GOT
:
u32
=
35
;
pub
const
R_METAG_HI16_GOTPC
:
u32
=
36
;
pub
const
R_METAG_LO16_GOTPC
:
u32
=
37
;
pub
const
R_METAG_HI16_PLT
:
u32
=
38
;
pub
const
R_METAG_LO16_PLT
:
u32
=
39
;
pub
const
R_METAG_RELBRANCH_PLT
:
u32
=
40
;
pub
const
R_METAG_GOTOFF
:
u32
=
41
;
pub
const
R_METAG_PLT
:
u32
=
42
;
pub
const
R_METAG_COPY
:
u32
=
43
;
pub
const
R_METAG_JMP_SLOT
:
u32
=
44
;
pub
const
R_METAG_RELATIVE
:
u32
=
45
;
pub
const
R_METAG_GLOB_DAT
:
u32
=
46
;
pub
const
R_METAG_TLS_GD
:
u32
=
47
;
pub
const
R_METAG_TLS_LDM
:
u32
=
48
;
pub
const
R_METAG_TLS_LDO_HI16
:
u32
=
49
;
pub
const
R_METAG_TLS_LDO_LO16
:
u32
=
50
;
pub
const
R_METAG_TLS_LDO
:
u32
=
51
;
pub
const
R_METAG_TLS_IE
:
u32
=
52
;
pub
const
R_METAG_TLS_IENONPIC
:
u32
=
53
;
pub
const
R_METAG_TLS_IENONPIC_HI16
:
u32
=
54
;
pub
const
R_METAG_TLS_IENONPIC_LO16
:
u32
=
55
;
pub
const
R_METAG_TLS_TPOFF
:
u32
=
56
;
pub
const
R_METAG_TLS_DTPMOD
:
u32
=
57
;
pub
const
R_METAG_TLS_DTPOFF
:
u32
=
58
;
pub
const
R_METAG_TLS_LE
:
u32
=
59
;
pub
const
R_METAG_TLS_LE_HI16
:
u32
=
60
;
pub
const
R_METAG_TLS_LE_LO16
:
u32
=
61
;
pub
const
R_NDS32_NONE
:
u32
=
0
;
pub
const
R_NDS32_32_RELA
:
u32
=
20
;
pub
const
R_NDS32_COPY
:
u32
=
39
;
pub
const
R_NDS32_GLOB_DAT
:
u32
=
40
;
pub
const
R_NDS32_JMP_SLOT
:
u32
=
41
;
pub
const
R_NDS32_RELATIVE
:
u32
=
42
;
pub
const
R_NDS32_TLS_TPOFF
:
u32
=
102
;
pub
const
R_NDS32_TLS_DESC
:
u32
=
119
;
pub
const
EF_LARCH_ABI_MODIFIER_MASK
:
u32
=
0x7
;
pub
const
EF_LARCH_ABI_SOFT_FLOAT
:
u32
=
0x1
;
pub
const
EF_LARCH_ABI_SINGLE_FLOAT
:
u32
=
0x2
;
pub
const
EF_LARCH_ABI_DOUBLE_FLOAT
:
u32
=
0x3
;
pub
const
EF_LARCH_OBJABI_V1
:
u32
=
0x40
;
pub
const
R_LARCH_NONE
:
u32
=
0
;
pub
const
R_LARCH_32
:
u32
=
1
;
pub
const
R_LARCH_64
:
u32
=
2
;
pub
const
R_LARCH_RELATIVE
:
u32
=
3
;
pub
const
R_LARCH_COPY
:
u32
=
4
;
pub
const
R_LARCH_JUMP_SLOT
:
u32
=
5
;
pub
const
R_LARCH_TLS_DTPMOD32
:
u32
=
6
;
pub
const
R_LARCH_TLS_DTPMOD64
:
u32
=
7
;
pub
const
R_LARCH_TLS_DTPREL32
:
u32
=
8
;
pub
const
R_LARCH_TLS_DTPREL64
:
u32
=
9
;
pub
const
R_LARCH_TLS_TPREL32
:
u32
=
10
;
pub
const
R_LARCH_TLS_TPREL64
:
u32
=
11
;
pub
const
R_LARCH_IRELATIVE
:
u32
=
12
;
pub
const
R_LARCH_MARK_LA
:
u32
=
20
;
pub
const
R_LARCH_MARK_PCREL
:
u32
=
21
;
pub
const
R_LARCH_SOP_PUSH_PCREL
:
u32
=
22
;
pub
const
R_LARCH_SOP_PUSH_ABSOLUTE
:
u32
=
23
;
pub
const
R_LARCH_SOP_PUSH_DUP
:
u32
=
24
;
pub
const
R_LARCH_SOP_PUSH_GPREL
:
u32
=
25
;
pub
const
R_LARCH_SOP_PUSH_TLS_TPREL
:
u32
=
26
;
pub
const
R_LARCH_SOP_PUSH_TLS_GOT
:
u32
=
27
;
pub
const
R_LARCH_SOP_PUSH_TLS_GD
:
u32
=
28
;
pub
const
R_LARCH_SOP_PUSH_PLT_PCREL
:
u32
=
29
;
pub
const
R_LARCH_SOP_ASSERT
:
u32
=
30
;
pub
const
R_LARCH_SOP_NOT
:
u32
=
31
;
pub
const
R_LARCH_SOP_SUB
:
u32
=
32
;
pub
const
R_LARCH_SOP_SL
:
u32
=
33
;
pub
const
R_LARCH_SOP_SR
:
u32
=
34
;
pub
const
R_LARCH_SOP_ADD
:
u32
=
35
;
pub
const
R_LARCH_SOP_AND
:
u32
=
36
;
pub
const
R_LARCH_SOP_IF_ELSE
:
u32
=
37
;
pub
const
R_LARCH_SOP_POP_32_S_10_5
:
u32
=
38
;
pub
const
R_LARCH_SOP_POP_32_U_10_12
:
u32
=
39
;
pub
const
R_LARCH_SOP_POP_32_S_10_12
:
u32
=
40
;
pub
const
R_LARCH_SOP_POP_32_S_10_16
:
u32
=
41
;
pub
const
R_LARCH_SOP_POP_32_S_10_16_S2
:
u32
=
42
;
pub
const
R_LARCH_SOP_POP_32_S_5_20
:
u32
=
43
;
pub
const
R_LARCH_SOP_POP_32_S_0_5_10_16_S2
:
u32
=
44
;
pub
const
R_LARCH_SOP_POP_32_S_0_10_10_16_S2
:
u32
=
45
;
pub
const
R_LARCH_SOP_POP_32_U
:
u32
=
46
;
pub
const
R_LARCH_ADD8
:
u32
=
47
;
pub
const
R_LARCH_ADD16
:
u32
=
48
;
pub
const
R_LARCH_ADD24
:
u32
=
49
;
pub
const
R_LARCH_ADD32
:
u32
=
50
;
pub
const
R_LARCH_ADD64
:
u32
=
51
;
pub
const
R_LARCH_SUB8
:
u32
=
52
;
pub
const
R_LARCH_SUB16
:
u32
=
53
;
pub
const
R_LARCH_SUB24
:
u32
=
54
;
pub
const
R_LARCH_SUB32
:
u32
=
55
;
pub
const
R_LARCH_SUB64
:
u32
=
56
;
pub
const
R_LARCH_GNU_VTINHERIT
:
u32
=
57
;
pub
const
R_LARCH_GNU_VTENTRY
:
u32
=
58
;
pub
const
R_LARCH_B16
:
u32
=
64
;
pub
const
R_LARCH_B21
:
u32
=
65
;
pub
const
R_LARCH_B26
:
u32
=
66
;
pub
const
R_LARCH_ABS_HI20
:
u32
=
67
;
pub
const
R_LARCH_ABS_LO12
:
u32
=
68
;
pub
const
R_LARCH_ABS64_LO20
:
u32
=
69
;
pub
const
R_LARCH_ABS64_HI12
:
u32
=
70
;
pub
const
R_LARCH_PCALA_HI20
:
u32
=
71
;
pub
const
R_LARCH_PCALA_LO12
:
u32
=
72
;
pub
const
R_LARCH_PCALA64_LO20
:
u32
=
73
;
pub
const
R_LARCH_PCALA64_HI12
:
u32
=
74
;
pub
const
R_LARCH_GOT_PC_HI20
:
u32
=
75
;
pub
const
R_LARCH_GOT_PC_LO12
:
u32
=
76
;
pub
const
R_LARCH_GOT64_PC_LO20
:
u32
=
77
;
pub
const
R_LARCH_GOT64_PC_HI12
:
u32
=
78
;
pub
const
R_LARCH_GOT_HI20
:
u32
=
79
;
pub
const
R_LARCH_GOT_LO12
:
u32
=
80
;
pub
const
R_LARCH_GOT64_LO20
:
u32
=
81
;
pub
const
R_LARCH_GOT64_HI12
:
u32
=
82
;
pub
const
R_LARCH_TLS_LE_HI20
:
u32
=
83
;
pub
const
R_LARCH_TLS_LE_LO12
:
u32
=
84
;
pub
const
R_LARCH_TLS_LE64_LO20
:
u32
=
85
;
pub
const
R_LARCH_TLS_LE64_HI12
:
u32
=
86
;
pub
const
R_LARCH_TLS_IE_PC_HI20
:
u32
=
87
;
pub
const
R_LARCH_TLS_IE_PC_LO12
:
u32
=
88
;
pub
const
R_LARCH_TLS_IE64_PC_LO20
:
u32
=
89
;
pub
const
R_LARCH_TLS_IE64_PC_HI12
:
u32
=
90
;
pub
const
R_LARCH_TLS_IE_HI20
:
u32
=
91
;
pub
const
R_LARCH_TLS_IE_LO12
:
u32
=
92
;
pub
const
R_LARCH_TLS_IE64_LO20
:
u32
=
93
;
pub
const
R_LARCH_TLS_IE64_HI12
:
u32
=
94
;
pub
const
R_LARCH_TLS_LD_PC_HI20
:
u32
=
95
;
pub
const
R_LARCH_TLS_LD_HI20
:
u32
=
96
;
pub
const
R_LARCH_TLS_GD_PC_HI20
:
u32
=
97
;
pub
const
R_LARCH_TLS_GD_HI20
:
u32
=
98
;
pub
const
R_LARCH_32_PCREL
:
u32
=
99
;
pub
const
R_LARCH_RELAX
:
u32
=
100
;
pub
const
R_XTENSA_NONE
:
u32
=
0
;
pub
const
R_XTENSA_32
:
u32
=
1
;
pub
const
R_XTENSA_RTLD
:
u32
=
2
;
pub
const
R_XTENSA_GLOB_DAT
:
u32
=
3
;
pub
const
R_XTENSA_JMP_SLOT
:
u32
=
4
;
pub
const
R_XTENSA_RELATIVE
:
u32
=
5
;
pub
const
R_XTENSA_PLT
:
u32
=
6
;
pub
const
R_XTENSA_OP0
:
u32
=
8
;
pub
const
R_XTENSA_OP1
:
u32
=
9
;
pub
const
R_XTENSA_OP2
:
u32
=
10
;
pub
const
R_XTENSA_ASM_EXPAND
:
u32
=
11
;
pub
const
R_XTENSA_ASM_SIMPLIFY
:
u32
=
12
;
pub
const
R_XTENSA_32_PCREL
:
u32
=
14
;
pub
const
R_XTENSA_GNU_VTINHERIT
:
u32
=
15
;
pub
const
R_XTENSA_GNU_VTENTRY
:
u32
=
16
;
pub
const
R_XTENSA_DIFF8
:
u32
=
17
;
pub
const
R_XTENSA_DIFF16
:
u32
=
18
;
pub
const
R_XTENSA_DIFF32
:
u32
=
19
;
pub
const
R_XTENSA_SLOT0_OP
:
u32
=
20
;
pub
const
R_XTENSA_SLOT1_OP
:
u32
=
21
;
pub
const
R_XTENSA_SLOT2_OP
:
u32
=
22
;
pub
const
R_XTENSA_SLOT3_OP
:
u32
=
23
;
pub
const
R_XTENSA_SLOT4_OP
:
u32
=
24
;
pub
const
R_XTENSA_SLOT5_OP
:
u32
=
25
;
pub
const
R_XTENSA_SLOT6_OP
:
u32
=
26
;
pub
const
R_XTENSA_SLOT7_OP
:
u32
=
27
;
pub
const
R_XTENSA_SLOT8_OP
:
u32
=
28
;
pub
const
R_XTENSA_SLOT9_OP
:
u32
=
29
;
pub
const
R_XTENSA_SLOT10_OP
:
u32
=
30
;
pub
const
R_XTENSA_SLOT11_OP
:
u32
=
31
;
pub
const
R_XTENSA_SLOT12_OP
:
u32
=
32
;
pub
const
R_XTENSA_SLOT13_OP
:
u32
=
33
;
pub
const
R_XTENSA_SLOT14_OP
:
u32
=
34
;
pub
const
R_XTENSA_SLOT0_ALT
:
u32
=
35
;
pub
const
R_XTENSA_SLOT1_ALT
:
u32
=
36
;
pub
const
R_XTENSA_SLOT2_ALT
:
u32
=
37
;
pub
const
R_XTENSA_SLOT3_ALT
:
u32
=
38
;
pub
const
R_XTENSA_SLOT4_ALT
:
u32
=
39
;
pub
const
R_XTENSA_SLOT5_ALT
:
u32
=
40
;
pub
const
R_XTENSA_SLOT6_ALT
:
u32
=
41
;
pub
const
R_XTENSA_SLOT7_ALT
:
u32
=
42
;
pub
const
R_XTENSA_SLOT8_ALT
:
u32
=
43
;
pub
const
R_XTENSA_SLOT9_ALT
:
u32
=
44
;
pub
const
R_XTENSA_SLOT10_ALT
:
u32
=
45
;
pub
const
R_XTENSA_SLOT11_ALT
:
u32
=
46
;
pub
const
R_XTENSA_SLOT12_ALT
:
u32
=
47
;
pub
const
R_XTENSA_SLOT13_ALT
:
u32
=
48
;
pub
const
R_XTENSA_SLOT14_ALT
:
u32
=
49
;
pub
const
R_XTENSA_TLSDESC_FN
:
u32
=
50
;
pub
const
R_XTENSA_TLSDESC_ARG
:
u32
=
51
;
pub
const
R_XTENSA_TLS_DTPOFF
:
u32
=
52
;
pub
const
R_XTENSA_TLS_TPOFF
:
u32
=
53
;
pub
const
R_XTENSA_TLS_FUNC
:
u32
=
54
;
pub
const
R_XTENSA_TLS_ARG
:
u32
=
55
;
pub
const
R_XTENSA_TLS_CALL
:
u32
=
56
;
pub
const
R_XTENSA_PDIFF8
:
u32
=
57
;
pub
const
R_XTENSA_PDIFF16
:
u32
=
58
;
pub
const
R_XTENSA_PDIFF32
:
u32
=
59
;
pub
const
R_XTENSA_NDIFF8
:
u32
=
60
;
pub
const
R_XTENSA_NDIFF16
:
u32
=
61
;
pub
const
R_XTENSA_NDIFF32
:
u32
=
62
;
#
[
allow
(
non_upper_case_globals
)
]
pub
const
Tag_File
:
u8
=
1
;
#
[
allow
(
non_upper_case_globals
)
]
pub
const
Tag_Section
:
u8
=
2
;
#
[
allow
(
non_upper_case_globals
)
]
pub
const
Tag_Symbol
:
u8
=
3
;
unsafe_impl_endian_pod
!
(
FileHeader32
FileHeader64
SectionHeader32
SectionHeader64
CompressionHeader32
CompressionHeader64
Sym32
Sym64
Syminfo32
Syminfo64
Rel32
Rel64
Rela32
Rela64
ProgramHeader32
ProgramHeader64
Dyn32
Dyn64
Versym
Verdef
Verdaux
Verneed
Vernaux
NoteHeader32
NoteHeader64
HashHeader
GnuHashHeader
)
;
