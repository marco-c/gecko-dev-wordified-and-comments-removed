#
!
[
cfg_attr
(
not
(
any
(
test
feature
=
"
std
"
)
)
no_std
)
]
#
!
[
cfg_attr
(
not
(
test
)
deny
(
clippy
:
:
indexing_slicing
clippy
:
:
unwrap_used
clippy
:
:
expect_used
clippy
:
:
panic
clippy
:
:
exhaustive_structs
clippy
:
:
exhaustive_enums
missing_debug_implementations
)
)
]
#
!
[
allow
(
clippy
:
:
needless_lifetimes
)
]
extern
crate
alloc
;
mod
error
;
mod
flexzerovec
;
#
[
cfg
(
feature
=
"
hashmap
"
)
]
pub
mod
hashmap
;
mod
map
;
mod
map2d
;
#
[
cfg
(
test
)
]
pub
mod
samples
;
mod
varzerovec
;
mod
zerovec
;
pub
mod
ule
;
#
[
cfg
(
feature
=
"
yoke
"
)
]
mod
yoke_impls
;
mod
zerofrom_impls
;
pub
use
crate
:
:
error
:
:
ZeroVecError
;
#
[
cfg
(
feature
=
"
hashmap
"
)
]
pub
use
crate
:
:
hashmap
:
:
ZeroHashMap
;
pub
use
crate
:
:
map
:
:
map
:
:
ZeroMap
;
pub
use
crate
:
:
map2d
:
:
map
:
:
ZeroMap2d
;
pub
use
crate
:
:
varzerovec
:
:
{
slice
:
:
VarZeroSlice
vec
:
:
VarZeroVec
}
;
pub
use
crate
:
:
zerovec
:
:
{
ZeroSlice
ZeroVec
}
;
pub
(
crate
)
use
flexzerovec
:
:
chunk_to_usize
;
#
[
doc
(
hidden
)
]
pub
mod
__zerovec_internal_reexport
{
pub
use
zerofrom
:
:
ZeroFrom
;
pub
use
alloc
:
:
boxed
;
#
[
cfg
(
feature
=
"
serde
"
)
]
pub
use
serde
;
}
pub
mod
maps
{
#
[
doc
(
no_inline
)
]
pub
use
crate
:
:
map
:
:
ZeroMap
;
pub
use
crate
:
:
map
:
:
ZeroMapBorrowed
;
#
[
doc
(
no_inline
)
]
pub
use
crate
:
:
map2d
:
:
ZeroMap2d
;
pub
use
crate
:
:
map2d
:
:
ZeroMap2dBorrowed
;
pub
use
crate
:
:
map
:
:
{
MutableZeroVecLike
ZeroMapKV
ZeroVecLike
}
;
pub
use
crate
:
:
map2d
:
:
ZeroMap2dCursor
;
}
pub
mod
vecs
{
#
[
doc
(
no_inline
)
]
pub
use
crate
:
:
zerovec
:
:
{
ZeroSlice
ZeroVec
}
;
#
[
doc
(
no_inline
)
]
pub
use
crate
:
:
varzerovec
:
:
{
VarZeroSlice
VarZeroVec
}
;
pub
use
crate
:
:
varzerovec
:
:
{
Index16
Index32
VarZeroVecFormat
VarZeroVecOwned
}
;
pub
use
crate
:
:
flexzerovec
:
:
{
FlexZeroSlice
FlexZeroVec
FlexZeroVecOwned
}
;
}
#
[
cfg
(
feature
=
"
derive
"
)
]
pub
use
zerovec_derive
:
:
make_ule
;
#
[
cfg
(
feature
=
"
derive
"
)
]
pub
use
zerovec_derive
:
:
make_varule
;
