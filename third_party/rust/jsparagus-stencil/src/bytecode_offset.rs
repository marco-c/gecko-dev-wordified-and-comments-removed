#
[
derive
(
Clone
Copy
PartialEq
Debug
)
]
#
[
must_use
]
pub
struct
BytecodeOffset
{
pub
offset
:
usize
}
impl
BytecodeOffset
{
fn
new
(
offset
:
usize
)
-
>
Self
{
Self
{
offset
}
}
pub
fn
diff_from
(
self
start
:
BytecodeOffset
)
-
>
BytecodeOffsetDiff
{
BytecodeOffsetDiff
:
:
new
(
self
start
)
}
}
impl
From
<
BytecodeOffset
>
for
usize
{
fn
from
(
offset
:
BytecodeOffset
)
-
>
usize
{
offset
.
offset
}
}
impl
From
<
usize
>
for
BytecodeOffset
{
fn
from
(
offset
:
usize
)
-
>
BytecodeOffset
{
BytecodeOffset
:
:
new
(
offset
)
}
}
pub
struct
BytecodeOffsetDiff
{
diff
:
i32
}
impl
BytecodeOffsetDiff
{
fn
new
(
end
:
BytecodeOffset
start
:
BytecodeOffset
)
-
>
Self
{
let
diff
=
(
end
.
offset
as
i128
-
start
.
offset
as
i128
)
as
i32
;
Self
{
diff
}
}
pub
fn
uninitialized
(
)
-
>
Self
{
Self
{
diff
:
0i32
}
}
}
impl
From
<
BytecodeOffsetDiff
>
for
i32
{
fn
from
(
offset
:
BytecodeOffsetDiff
)
-
>
i32
{
offset
.
diff
}
}
