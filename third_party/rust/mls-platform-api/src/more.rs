pub
type
GroupContext
=
Vec
<
u8
>
;
pub
fn
mls_group_context
(
_state
:
&
PlatformState
_gid
:
&
GroupId
_myself
:
&
Identity
)
-
>
Result
<
GroupContext
PlatformError
>
{
unimplemented
!
(
)
}
pub
struct
PendingJoinState
{
identifier
:
Vec
<
u8
>
}
pub
fn
mls_group_process_welcome
(
pstate
:
&
PlatformState
myself
:
&
Identity
welcome
:
MlsMessage
ratchet_tree
:
Option
<
ExportedTree
<
'
static
>
>
)
-
>
Result
<
PendingJoinState
PlatformError
>
{
let
client
=
pstate
.
client_default
(
myself
)
?
;
let
(
mut
group
_info
)
=
client
.
join_group
(
ratchet_tree
welcome
)
?
;
let
gid
=
group
.
group_id
(
)
.
to_vec
(
)
;
group
.
write_to_storage
(
)
?
;
Ok
(
gid
)
}
pub
fn
mls_group_inspect_welcome
(
pstate
:
&
PlatformState
myself
:
&
Identity
welcome
:
MlsMessage
ratchet_tree
:
Option
<
ExportedTree
<
'
static
>
>
)
-
>
Result
<
PendingJoinState
PlatformError
>
{
unimplemented
!
(
)
}
pub
fn
mls_group_propose_leave
(
pstate
:
PlatformState
gid
:
GroupId
myself
:
&
Identity
)
-
>
Result
<
mls_rs
:
:
MlsMessage
PlatformError
>
{
let
mut
group
=
pstate
.
client_default
(
myself
)
?
.
load_group
(
&
gid
)
?
;
let
self_index
=
group
.
current_member_index
(
)
;
let
proposal
=
group
.
propose_remove
(
self_index
vec
!
[
]
)
?
;
Ok
(
proposal
)
}
pub
fn
mls_import_group_state
(
group_state
:
Vec
<
u8
>
signature_key
:
SignatureKeypair
myself
:
SigningIdentity
)
-
>
Result
<
(
)
MlsError
>
{
unimplemented
!
(
)
}
pub
fn
mls_export_group_state
(
gid
:
GroupId
)
-
>
Result
<
Vec
<
u8
>
MlsError
>
{
unimplemented
!
(
)
}
pub
fn
validate_key_package
(
key_package
:
KeyPackage
)
-
>
Result
<
(
)
MlsError
>
{
unimplemented
!
(
)
}
pub
fn
identity_from_key_package
(
key_package
:
KeyPackage
)
-
>
Result
<
SigningIdentity
MlsError
>
{
unimplemented
!
(
)
}
pub
fn
mls_create_group_config
(
cs
:
CipherSuite
v
:
ProtocolVersion
options
:
ExtensionList
)
-
>
Result
<
GroupConfig
MlsError
>
{
Ok
(
GroupConfig
{
ciphersuite
:
cs
version
:
v
options
}
)
}
pub
struct
ClientConfig
{
}
pub
fn
mls_create_client_config
(
max_past_epoch
:
Option
<
u32
>
use_ratchet_tree_extension
:
bool
out_of_order_tolerance
:
Option
<
u32
>
maximum_forward_distance
:
Option
<
u32
>
)
-
>
Result
<
ClientConfig
MlsError
>
{
unimplemented
!
(
)
}
