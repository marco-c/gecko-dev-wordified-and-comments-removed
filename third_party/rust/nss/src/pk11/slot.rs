use
crate
:
:
{
error
:
:
*
pk11
:
:
types
:
:
Slot
util
:
:
{
assert_nss_initialized
map_nss_secstatus
ScopedPtr
}
}
;
pub
fn
generate_random
(
data
:
&
mut
[
u8
]
)
-
>
Result
<
(
)
>
{
assert_nss_initialized
(
)
;
let
len
=
i32
:
:
try_from
(
data
.
len
(
)
)
?
;
map_nss_secstatus
(
|
|
unsafe
{
nss_sys
:
:
PK11_GenerateRandom
(
data
.
as_mut_ptr
(
)
len
)
}
)
?
;
Ok
(
(
)
)
}
pub
(
crate
)
fn
get_internal_slot
(
)
-
>
Result
<
Slot
>
{
unsafe
{
Slot
:
:
from_ptr
(
nss_sys
:
:
PK11_GetInternalSlot
(
)
)
}
}
#
[
cfg
(
feature
=
"
keydb
"
)
]
pub
(
crate
)
fn
get_internal_key_slot
(
)
-
>
Result
<
Slot
>
{
unsafe
{
Slot
:
:
from_ptr
(
nss_sys
:
:
PK11_GetInternalKeySlot
(
)
)
}
}
