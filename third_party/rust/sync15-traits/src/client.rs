use
std
:
:
collections
:
:
HashMap
;
#
[
derive
(
Clone
Debug
)
]
pub
struct
ClientData
{
pub
local_client_id
:
String
pub
recent_clients
:
HashMap
<
String
RemoteClient
>
}
#
[
derive
(
Clone
Debug
Eq
Hash
PartialEq
)
]
pub
struct
RemoteClient
{
pub
fxa_device_id
:
Option
<
String
>
pub
device_name
:
String
pub
device_type
:
Option
<
DeviceType
>
}
#
[
derive
(
Clone
Copy
Debug
Eq
Hash
PartialEq
)
]
pub
enum
DeviceType
{
Desktop
Mobile
Tablet
VR
TV
}
impl
DeviceType
{
pub
fn
try_from_str
(
d
:
impl
AsRef
<
str
>
)
-
>
Option
<
DeviceType
>
{
match
d
.
as_ref
(
)
{
"
desktop
"
=
>
Some
(
DeviceType
:
:
Desktop
)
"
mobile
"
=
>
Some
(
DeviceType
:
:
Mobile
)
"
tablet
"
=
>
Some
(
DeviceType
:
:
Tablet
)
"
vr
"
=
>
Some
(
DeviceType
:
:
VR
)
"
tv
"
=
>
Some
(
DeviceType
:
:
TV
)
_
=
>
None
}
}
pub
fn
as_str
(
self
)
-
>
&
'
static
str
{
match
self
{
DeviceType
:
:
Desktop
=
>
"
desktop
"
DeviceType
:
:
Mobile
=
>
"
mobile
"
DeviceType
:
:
Tablet
=
>
"
tablet
"
DeviceType
:
:
VR
=
>
"
vr
"
DeviceType
:
:
TV
=
>
"
tv
"
}
}
}
