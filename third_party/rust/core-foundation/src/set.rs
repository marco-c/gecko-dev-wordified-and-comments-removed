pub
use
core_foundation_sys
:
:
set
:
:
*
;
use
core_foundation_sys
:
:
base
:
:
{
CFTypeRef
kCFAllocatorDefault
}
;
use
base
:
:
{
CFIndexConvertible
TCFType
}
;
use
std
:
:
mem
;
declare_TCFType
!
{
/
/
/
An
immutable
bag
of
elements
.
CFSet
CFSetRef
}
impl_TCFType
!
(
CFSet
CFSetRef
CFSetGetTypeID
)
;
impl_CFTypeDescription
!
(
CFSet
)
;
impl
CFSet
{
pub
fn
from_slice
<
T
>
(
elems
:
&
[
T
]
)
-
>
CFSet
where
T
:
TCFType
{
unsafe
{
let
elems
:
Vec
<
CFTypeRef
>
=
elems
.
iter
(
)
.
map
(
|
elem
|
elem
.
as_CFTypeRef
(
)
)
.
collect
(
)
;
let
set_ref
=
CFSetCreate
(
kCFAllocatorDefault
mem
:
:
transmute
(
elems
.
as_ptr
(
)
)
elems
.
len
(
)
.
to_CFIndex
(
)
&
kCFTypeSetCallBacks
)
;
TCFType
:
:
wrap_under_create_rule
(
set_ref
)
}
}
}
