use
super
:
:
Pid
;
use
crate
:
:
minidump_cpu
:
:
imp
:
:
MD_CONTEXT_ARM_GPR_COUNT
;
use
libc
;
#
[
derive
(
Debug
)
]
pub
struct
ThreadInfoArm
{
pub
stack_pointer
:
libc
:
:
c_ulonglong
pub
tgid
:
Pid
pub
ppid
:
Pid
pub
regs
:
libc
:
:
user_regs
pub
fpregs
:
libc
:
:
user_fpregs
}
impl
ThreadInfoArm
{
pub
fn
get_instruction_pointer
(
&
self
)
-
>
libc
:
:
c_ulonglong
{
self
.
regs
.
uregs
[
15
]
}
pub
fn
fill_cpu_context
(
&
self
out
:
&
mut
RawContextCPU
)
{
for
idx
in
0
.
.
MD_CONTEXT_ARM_GPR_COUNT
{
out
.
iregs
[
idx
]
=
self
.
regs
.
uregs
[
idx
]
;
}
out
.
cpsr
=
0
;
#
[
not
(
cfg
(
target_os
=
"
android
"
)
)
]
{
out
.
float_save
.
fpscr
=
self
.
fpregs
.
fpsr
|
(
self
.
fpregs
.
fpcr
as
u64
)
<
<
32
;
}
}
}
