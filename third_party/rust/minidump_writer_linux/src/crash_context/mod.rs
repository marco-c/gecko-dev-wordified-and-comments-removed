use
libc
;
#
[
cfg
(
target_arch
=
"
x86_64
"
)
]
#
[
path
=
"
crash_context_x86_64
.
rs
"
]
pub
mod
imp
;
#
[
cfg
(
target_arch
=
"
x86
"
)
]
#
[
path
=
"
crash_context_x86
.
rs
"
]
pub
mod
imp
;
#
[
cfg
(
target_arch
=
"
arm
"
)
]
#
[
path
=
"
crash_context_arm
.
rs
"
]
pub
mod
imp
;
#
[
cfg
(
target_arch
=
"
aarch64
"
)
]
#
[
path
=
"
crash_context_aarch64
.
rs
"
]
pub
mod
imp
;
#
[
cfg
(
target_arch
=
"
mips
"
)
]
#
[
path
=
"
crash_context_mips
.
rs
"
]
pub
mod
imp
;
#
[
cfg
(
target_arch
=
"
aarch64
"
)
]
pub
type
fpstate_t
=
libc
:
:
fpsimd_context
;
#
[
cfg
(
not
(
any
(
target_arch
=
"
aarch64
"
target_arch
=
"
mips
"
target_arch
=
"
arm
-
eabi
"
)
)
)
]
#
[
cfg
(
target_arch
=
"
x86
"
)
]
#
[
allow
(
non_camel_case_types
)
]
pub
type
fpstate_t
=
libc
:
:
_libc_fpstate
;
#
[
cfg
(
target_arch
=
"
x86_64
"
)
]
#
[
allow
(
non_camel_case_types
)
]
pub
type
fpstate_t
=
libc
:
:
user_fpregs_struct
;
#
[
repr
(
C
)
]
#
[
derive
(
Clone
)
]
pub
struct
CrashContext
{
pub
siginfo
:
libc
:
:
siginfo_t
pub
tid
:
libc
:
:
pid_t
pub
context
:
libc
:
:
ucontext_t
#
[
cfg
(
not
(
any
(
target_arch
=
"
mips
"
target_arch
=
"
arm
-
eabi
"
)
)
)
]
pub
float_state
:
fpstate_t
}
