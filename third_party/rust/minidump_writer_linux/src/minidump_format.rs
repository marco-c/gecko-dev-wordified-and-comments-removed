#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDGUID
{
data1
:
u32
data2
:
u16
data3
:
u16
data4
:
[
u8
;
8
]
}
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
Clone
Copy
)
]
pub
struct
MDVSFixedFileInfo
{
pub
signature
:
u32
pub
struct_version
:
u32
pub
file_version_hi
:
u32
pub
file_version_lo
:
u32
pub
product_version_hi
:
u32
pub
product_version_lo
:
u32
pub
file_flags_mask
:
u32
pub
file_flags
:
u32
pub
file_os
:
u32
pub
file_type
:
u32
pub
file_subtype
:
u32
pub
file_date_hi
:
u32
pub
file_date_lo
:
u32
}
pub
type
MDRVA
=
u32
;
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
Clone
Copy
PartialEq
)
]
pub
struct
MDLocationDescriptor
{
pub
data_size
:
u32
pub
rva
:
MDRVA
}
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
Clone
PartialEq
)
]
pub
struct
MDMemoryDescriptor
{
pub
start_of_memory_range
:
u64
pub
memory
:
MDLocationDescriptor
}
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDRawHeader
{
pub
signature
:
u32
pub
version
:
u32
pub
stream_count
:
u32
pub
stream_directory_rva
:
MDRVA
pub
checksum
:
u32
pub
time_date_stamp
:
u32
pub
flags
:
u64
}
pub
const
MD_HEADER_SIGNATURE
:
u32
=
0x504d444d
;
pub
const
MD_HEADER_VERSION
:
u32
=
0x0000a793
;
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDRawThread
{
pub
thread_id
:
u32
pub
suspend_count
:
u32
pub
priority_class
:
u32
pub
priority
:
u32
pub
teb
:
u64
pub
stack
:
MDMemoryDescriptor
pub
thread_context
:
MDLocationDescriptor
}
pub
type
MDRawThreadList
=
Vec
<
MDRawThread
>
;
#
[
repr
(
C
packed
)
]
#
[
derive
(
Clone
Copy
Debug
Default
PartialEq
)
]
pub
struct
MDRawModule
{
pub
base_of_image
:
u64
pub
size_of_image
:
u32
pub
checksum
:
u32
pub
time_date_stamp
:
u32
pub
module_name_rva
:
MDRVA
pub
version_info
:
MDVSFixedFileInfo
pub
cv_record
:
MDLocationDescriptor
pub
misc_record
:
MDLocationDescriptor
pub
reserved0
:
[
u32
;
2
]
pub
reserved1
:
[
u32
;
2
]
}
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
Clone
)
]
pub
struct
MDRawDirectory
{
pub
stream_type
:
u32
pub
location
:
MDLocationDescriptor
}
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDException
{
pub
exception_code
:
u32
pub
exception_flags
:
u32
pub
exception_record
:
u64
pub
exception_address
:
u64
pub
number_parameters
:
u32
pub
__align
:
u32
pub
exception_information
:
[
u64
;
15
]
}
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDRawExceptionStream
{
pub
thread_id
:
u32
pub
__align
:
u32
pub
exception_record
:
MDException
pub
thread_context
:
MDLocationDescriptor
}
#
[
cfg
(
any
(
target_arch
=
"
x86
"
target_arch
=
"
x86_64
"
)
)
]
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDCPUInformation
{
pub
vendor_id
:
[
u32
;
3
]
pub
version_information
:
u32
pub
feature_information
:
u32
pub
amd_extended_cpu_features
:
u32
}
#
[
cfg
(
any
(
target_arch
=
"
arm
"
target_arch
=
"
aarch64
"
)
)
]
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDCPUInformation
{
pub
cpuid
:
u32
pub
elf_hwcaps
:
u32
}
#
[
cfg
(
target_arch
=
"
mips
"
)
]
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDCPUInformation
{
pub
cpuid
:
[
u64
;
2
]
}
#
[
repr
(
u32
)
]
pub
enum
MDCPUInformationARMElfHwCaps
{
Swp
=
1
<
<
0
Half
=
1
<
<
1
Thumb
=
1
<
<
2
Bit26
=
1
<
<
3
FastMult
=
1
<
<
4
Fpa
=
1
<
<
5
Vfp
=
1
<
<
6
Edsp
=
1
<
<
7
Java
=
1
<
<
8
Iwmmxt
=
1
<
<
9
Crunch
=
1
<
<
10
Thumbee
=
1
<
<
11
Neon
=
1
<
<
12
Vfpv3
=
1
<
<
13
Vfpv3d16
=
1
<
<
14
Tls
=
1
<
<
15
Vfpv4
=
1
<
<
16
Idiva
=
1
<
<
17
Idivt
=
1
<
<
18
}
#
[
repr
(
C
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDRawSystemInfo
{
pub
processor_architecture
:
u16
pub
processor_level
:
u16
pub
processor_revision
:
u16
pub
number_of_processors
:
u8
pub
product_type
:
u8
pub
major_version
:
u32
pub
minor_version
:
u32
pub
build_number
:
u32
pub
platform_id
:
u32
pub
csd_version_rva
:
MDRVA
pub
suite_mask
:
u16
pub
reserved2
:
u16
pub
cpu
:
MDCPUInformation
}
#
[
cfg
(
target_pointer_width
=
"
64
"
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDRawLinkMap
{
pub
addr
:
u64
pub
name
:
MDRVA
pub
ld
:
u64
}
#
[
cfg
(
target_pointer_width
=
"
64
"
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDRawDebug
{
pub
version
:
u32
pub
map
:
MDRVA
pub
dso_count
:
u32
pub
brk
:
u64
pub
ldbase
:
u64
pub
dynamic
:
u64
}
#
[
cfg
(
target_pointer_width
=
"
32
"
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDRawLinkMap
{
pub
addr
:
u32
pub
name
:
MDRVA
pub
ld
:
u32
}
#
[
cfg
(
target_pointer_width
=
"
32
"
)
]
#
[
derive
(
Debug
Default
PartialEq
)
]
pub
struct
MDRawDebug
{
pub
version
:
u32
pub
map
:
MDRVA
pub
dso_count
:
u32
pub
brk
:
u32
pub
ldbase
:
u32
pub
dynamic
:
u32
}
#
[
repr
(
u16
)
]
pub
enum
MDCPUArchitecture
{
X86
=
0
Mips
=
1
Alpha
=
2
Ppc
=
3
Shx
=
4
Arm
=
5
Ia64
=
6
Alpha64
=
7
Msil
=
8
Amd64
=
9
X86Win64
=
10
Arm64
=
12
Sparc
=
0x8001
Ppc64
=
0x8002
Arm64Old
=
0x8003
Mips64
=
0x8004
Unknown
=
0xffff
}
#
[
repr
(
u32
)
]
pub
enum
MDOSPlatform
{
Win32s
=
0
Win32Windows
=
1
Win32Nt
=
2
Win32Ce
=
3
Unix
=
0x8000
MacOsX
=
0x8101
Ios
=
0x8102
Linux
=
0x8201
Solaris
=
0x8202
Android
=
0x8203
Ps3
=
0x8204
Nacl
=
0x8205
Fuchsia
=
0x8206
}
pub
const
MD_CVINFOELF_SIGNATURE
:
u32
=
0x4270454c
;
pub
enum
MDType
{
Normal
=
0x00000000
WithDataSegs
=
0x00000001
WithFullMemory
=
0x00000002
WithHandleData
=
0x00000004
FilterMemory
=
0x00000008
ScanMemory
=
0x00000010
WithUnloadedModules
=
0x00000020
WithIndirectlyReferencedMemory
=
0x00000040
FilterModulePaths
=
0x00000080
WithProcessThreadData
=
0x00000100
WithPrivateReadWriteMemory
=
0x00000200
WithoutOptionalData
=
0x00000400
WithFullMemoryInfo
=
0x00000800
WithThreadInfo
=
0x00001000
WithCodeSegs
=
0x00002000
WithoutAuxilliarySegs
=
0x00004000
WithFullAuxilliaryState
=
0x00008000
WithPrivateWriteCopyMemory
=
0x00010000
IgnoreInaccessibleMemory
=
0x00020000
WithTokenInformation
=
0x00040000
}
#
[
repr
(
u32
)
]
pub
enum
MDStreamType
{
UnusedStream
=
0
ReservedStream0
=
1
ReservedStream1
=
2
ThreadListStream
=
3
ModuleListStream
=
4
MemoryListStream
=
5
ExceptionStream
=
6
SystemInfoStream
=
7
ThreadExListStream
=
8
Memory64ListStream
=
9
CommentStreamA
=
10
CommentStreamW
=
11
HandleDataStream
=
12
FunctionTableStream
=
13
UnloadedModuleListStream
=
14
MiscInfoStream
=
15
MemoryInfoListStream
=
16
ThreadInfoListStream
=
17
HandleOperationListStream
=
18
TokenStream
=
19
JavascriptDataStream
=
20
SystemMemoryInfoStream
=
21
ProcessVmCountersStream
=
22
LastReservedStream
=
0x0000ffff
BreakpadInfoStream
=
0x47670001
AssertionInfoStream
=
0x47670002
LinuxCpuInfo
=
0x47670003
LinuxProcStatus
=
0x47670004
LinuxLsbRelease
=
0x47670005
LinuxCmdLine
=
0x47670006
LinuxEnviron
=
0x47670007
LinuxAuxv
=
0x47670008
LinuxMaps
=
0x47670009
LinuxDsoDebug
=
0x4767000A
CrashpadInfoStream
=
0x43500001
}
