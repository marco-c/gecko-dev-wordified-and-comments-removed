#
[
cfg
(
feature
=
"
std
"
)
]
#
[
deprecated
(
note
=
"
Doesn
'
t
abstract
over
RmpRead
/
RmpWrite
(
or
work
on
no_std
)
use
RmpRead
:
:
Error
/
RmpWrite
:
:
Error
and
RmpReadErr
/
RmpWriteErr
instead
"
)
]
pub
type
Error
=
:
:
std
:
:
io
:
:
Error
;
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
#
[
deprecated
(
note
=
"
Doesn
'
t
work
meaningfully
on
no_std
"
)
]
pub
type
Error
=
:
:
core
:
:
convert
:
:
Infallible
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
doc
(
hidden
)
]
pub
trait
MaybeErrBound
:
std
:
:
error
:
:
Error
{
}
#
[
cfg
(
feature
=
"
std
"
)
]
impl
<
T
:
?
Sized
+
std
:
:
error
:
:
Error
>
MaybeErrBound
for
T
{
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
#
[
doc
(
hidden
)
]
pub
trait
MaybeErrBound
{
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
impl
<
T
:
?
Sized
>
MaybeErrBound
for
T
{
}
