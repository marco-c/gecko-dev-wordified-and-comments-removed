use
std
:
:
os
:
:
raw
:
:
c_void
;
use
runtime
:
:
{
objc_autoreleasePoolPush
objc_autoreleasePoolPop
}
;
struct
AutoReleaseHelper
{
context
:
*
mut
c_void
}
impl
AutoReleaseHelper
{
unsafe
fn
new
(
)
-
>
Self
{
AutoReleaseHelper
{
context
:
objc_autoreleasePoolPush
(
)
}
}
}
impl
Drop
for
AutoReleaseHelper
{
fn
drop
(
&
mut
self
)
{
unsafe
{
objc_autoreleasePoolPop
(
self
.
context
)
}
}
}
pub
fn
autoreleasepool
<
T
F
:
FnOnce
(
)
-
>
T
>
(
f
:
F
)
-
>
T
{
let
_context
=
unsafe
{
AutoReleaseHelper
:
:
new
(
)
}
;
f
(
)
}
