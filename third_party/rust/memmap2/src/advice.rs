#
[
derive
(
Debug
Eq
PartialEq
Hash
)
]
pub
struct
Advice
(
pub
(
crate
)
libc
:
:
c_int
)
;
impl
Advice
{
pub
fn
normal
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_NORMAL
)
}
pub
fn
random
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_RANDOM
)
}
pub
fn
sequential
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_SEQUENTIAL
)
}
pub
fn
will_need
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_WILLNEED
)
}
pub
unsafe
fn
dont_need
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_DONTNEED
)
}
#
[
cfg
(
any
(
target_os
=
"
linux
"
target_os
=
"
macos
"
target_os
=
"
ios
"
)
)
]
pub
unsafe
fn
free
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_FREE
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
unsafe
fn
remove
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_REMOVE
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
dont_fork
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_DONTFORK
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
do_fork
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_DOFORK
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
mergeable
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_MERGEABLE
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
unmergeable
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_UNMERGEABLE
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
huge_page
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_HUGEPAGE
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
no_huge_page
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_NOHUGEPAGE
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
dont_dump
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_DONTDUMP
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
do_dump
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_DODUMP
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
hw_poison
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_HWPOISON
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
populate_read
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_POPULATE_READ
)
}
#
[
cfg
(
target_os
=
"
linux
"
)
]
pub
fn
populate_write
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_POPULATE_WRITE
)
}
#
[
cfg
(
any
(
target_os
=
"
macos
"
target_os
=
"
ios
"
)
)
]
pub
fn
zero_wired_pages
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_ZERO_WIRED_PAGES
)
}
#
[
cfg
(
any
(
target_os
=
"
macos
"
target_os
=
"
ios
"
)
)
]
pub
unsafe
fn
free_reusable
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_FREE_REUSABLE
)
}
#
[
cfg
(
any
(
target_os
=
"
macos
"
target_os
=
"
ios
"
)
)
]
pub
unsafe
fn
free_reuse
(
)
-
>
Self
{
Self
(
libc
:
:
MADV_FREE_REUSE
)
}
}
