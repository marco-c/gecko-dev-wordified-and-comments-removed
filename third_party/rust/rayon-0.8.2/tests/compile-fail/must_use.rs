#
!
[
deny
(
unused_must_use
)
]
extern
crate
rayon
;
use
rayon
:
:
prelude
:
:
*
;
fn
main
(
)
{
let
v
:
Vec
<
_
>
=
(
0
.
.
100
)
.
map
(
Some
)
.
collect
(
)
;
v
.
par_iter
(
)
.
chain
(
&
v
)
;
v
.
par_iter
(
)
.
cloned
(
)
;
v
.
par_iter
(
)
.
enumerate
(
)
;
v
.
par_iter
(
)
.
filter
(
|
_
|
true
)
;
v
.
par_iter
(
)
.
filter_map
(
|
x
|
*
x
)
;
v
.
par_iter
(
)
.
flat_map
(
|
x
|
*
x
)
;
v
.
par_iter
(
)
.
fold
(
|
|
0
|
x
_
|
x
)
;
v
.
par_iter
(
)
.
fold_with
(
0
|
x
_
|
x
)
;
v
.
par_iter
(
)
.
inspect
(
|
_
|
{
}
)
;
v
.
par_iter
(
)
.
map
(
|
x
|
x
)
;
v
.
par_iter
(
)
.
map_with
(
0
|
_
x
|
x
)
;
v
.
par_iter
(
)
.
rev
(
)
;
v
.
par_iter
(
)
.
skip
(
1
)
;
v
.
par_iter
(
)
.
take
(
1
)
;
v
.
par_iter
(
)
.
cloned
(
)
.
while_some
(
)
;
v
.
par_iter
(
)
.
with_max_len
(
1
)
;
v
.
par_iter
(
)
.
with_min_len
(
1
)
;
v
.
par_iter
(
)
.
zip
(
&
v
)
;
}
