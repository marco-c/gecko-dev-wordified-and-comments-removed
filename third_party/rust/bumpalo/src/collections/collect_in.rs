#
[
cfg
(
feature
=
"
boxed
"
)
]
use
crate
:
:
boxed
:
:
Box
;
use
crate
:
:
collections
:
:
{
String
Vec
}
;
use
crate
:
:
Bump
;
pub
trait
FromIteratorIn
<
A
>
{
type
Alloc
;
fn
from_iter_in
<
I
>
(
iter
:
I
alloc
:
Self
:
:
Alloc
)
-
>
Self
where
I
:
IntoIterator
<
Item
=
A
>
;
}
#
[
cfg
(
feature
=
"
boxed
"
)
]
impl
<
'
bump
T
>
FromIteratorIn
<
T
>
for
Box
<
'
bump
[
T
]
>
{
type
Alloc
=
&
'
bump
Bump
;
fn
from_iter_in
<
I
>
(
iter
:
I
alloc
:
Self
:
:
Alloc
)
-
>
Self
where
I
:
IntoIterator
<
Item
=
T
>
{
Box
:
:
from_iter_in
(
iter
alloc
)
}
}
impl
<
'
bump
T
>
FromIteratorIn
<
T
>
for
Vec
<
'
bump
T
>
{
type
Alloc
=
&
'
bump
Bump
;
fn
from_iter_in
<
I
>
(
iter
:
I
alloc
:
Self
:
:
Alloc
)
-
>
Self
where
I
:
IntoIterator
<
Item
=
T
>
{
Vec
:
:
from_iter_in
(
iter
alloc
)
}
}
impl
<
T
V
:
FromIteratorIn
<
T
>
>
FromIteratorIn
<
Option
<
T
>
>
for
Option
<
V
>
{
type
Alloc
=
V
:
:
Alloc
;
fn
from_iter_in
<
I
>
(
iter
:
I
alloc
:
Self
:
:
Alloc
)
-
>
Self
where
I
:
IntoIterator
<
Item
=
Option
<
T
>
>
{
iter
.
into_iter
(
)
.
map
(
|
x
|
x
.
ok_or
(
(
)
)
)
.
collect_in
:
:
<
Result
<
_
_
>
>
(
alloc
)
.
ok
(
)
}
}
impl
<
T
E
V
:
FromIteratorIn
<
T
>
>
FromIteratorIn
<
Result
<
T
E
>
>
for
Result
<
V
E
>
{
type
Alloc
=
V
:
:
Alloc
;
fn
from_iter_in
<
I
>
(
iter
:
I
alloc
:
Self
:
:
Alloc
)
-
>
Self
where
I
:
IntoIterator
<
Item
=
Result
<
T
E
>
>
{
let
mut
iter
=
iter
.
into_iter
(
)
;
let
mut
error
=
None
;
let
container
=
core
:
:
iter
:
:
from_fn
(
|
|
match
iter
.
next
(
)
{
Some
(
Ok
(
x
)
)
=
>
Some
(
x
)
Some
(
Err
(
e
)
)
=
>
{
error
=
Some
(
e
)
;
None
}
None
=
>
None
}
)
.
collect_in
(
alloc
)
;
match
error
{
Some
(
e
)
=
>
Err
(
e
)
None
=
>
Ok
(
container
)
}
}
}
impl
<
'
bump
>
FromIteratorIn
<
char
>
for
String
<
'
bump
>
{
type
Alloc
=
&
'
bump
Bump
;
fn
from_iter_in
<
I
>
(
iter
:
I
alloc
:
Self
:
:
Alloc
)
-
>
Self
where
I
:
IntoIterator
<
Item
=
char
>
{
String
:
:
from_iter_in
(
iter
alloc
)
}
}
pub
trait
CollectIn
:
Iterator
+
Sized
{
fn
collect_in
<
C
:
FromIteratorIn
<
Self
:
:
Item
>
>
(
self
alloc
:
C
:
:
Alloc
)
-
>
C
{
C
:
:
from_iter_in
(
self
alloc
)
}
}
impl
<
I
:
Iterator
>
CollectIn
for
I
{
}
