use
prelude
:
:
*
;
use
rand
;
impl
Uuid
{
pub
fn
new_v4
(
)
-
>
Self
{
use
rand
:
:
RngCore
;
let
mut
rng
=
rand
:
:
thread_rng
(
)
;
let
mut
bytes
=
[
0
;
16
]
;
rng
.
fill_bytes
(
&
mut
bytes
)
;
Builder
:
:
from_bytes
(
bytes
)
.
set_variant
(
Variant
:
:
RFC4122
)
.
set_version
(
Version
:
:
Random
)
.
build
(
)
}
}
#
[
cfg
(
test
)
]
mod
tests
{
use
prelude
:
:
*
;
#
[
test
]
fn
test_new
(
)
{
let
uuid
=
Uuid
:
:
new_v4
(
)
;
assert_eq
!
(
uuid
.
get_version
(
)
Some
(
Version
:
:
Random
)
)
;
assert_eq
!
(
uuid
.
get_variant
(
)
Some
(
Variant
:
:
RFC4122
)
)
;
}
#
[
test
]
fn
test_get_version
(
)
{
let
uuid
=
Uuid
:
:
new_v4
(
)
;
assert_eq
!
(
uuid
.
get_version
(
)
Some
(
Version
:
:
Random
)
)
;
assert_eq
!
(
uuid
.
get_version_num
(
)
4
)
}
}
