use
proc_macro2
:
:
Ident
;
use
parse
:
:
{
ParseStream
Result
}
;
pub
trait
IdentExt
:
Sized
+
private
:
:
Sealed
{
fn
parse_any
(
input
:
ParseStream
)
-
>
Result
<
Self
>
;
}
impl
IdentExt
for
Ident
{
fn
parse_any
(
input
:
ParseStream
)
-
>
Result
<
Self
>
{
input
.
step
(
|
cursor
|
match
cursor
.
ident
(
)
{
Some
(
(
ident
rest
)
)
=
>
Ok
(
(
ident
rest
)
)
None
=
>
Err
(
cursor
.
error
(
"
expected
ident
"
)
)
}
)
}
}
mod
private
{
use
proc_macro2
:
:
Ident
;
pub
trait
Sealed
{
}
impl
Sealed
for
Ident
{
}
}
