pub
const
RANGE_IDEOGRAPH
:
&
'
static
[
(
u32
u32
)
]
=
&
[
(
0x3400
0x4DB5
)
(
0x4E00
0x9FD5
)
(
0x4E00
0x9FD5
)
(
0x20000
0x2A6D6
)
(
0x2A700
0x2B734
)
(
0x2B740
0x2B81D
)
(
0x2B820
0x2CEA1
)
(
0x17000
0x187EC
)
(
0xF900
0xFA6D
)
(
0xFA70
0xFAD9
)
(
0x2F800
0x2FA1D
)
]
;
pub
fn
ideograph_name
(
cp
:
u32
)
-
>
Option
<
String
>
{
match
cp
{
0x3400
.
.
.
0x4DB5
|
0x4E00
.
.
.
0x9FD5
|
0x20000
.
.
.
0x2A6D6
|
0x2A700
.
.
.
0x2B734
|
0x2B740
.
.
.
0x2B81D
|
0x2B820
.
.
.
0x2CEA1
=
>
{
Some
(
format
!
(
"
CJK
UNIFIED
IDEOGRAPH
-
{
:
04X
}
"
cp
)
)
}
0x17000
.
.
.
0x187EC
=
>
{
Some
(
format
!
(
"
TANGUT
IDEOGRAPH
-
{
:
04X
}
"
cp
)
)
}
0xF900
.
.
.
0xFA6D
|
0xFA70
.
.
.
0xFAD9
|
0x2F800
.
.
.
0x2FA1D
=
>
{
Some
(
format
!
(
"
CJK
COMPATIBILITY
IDEOGRAPH
-
{
:
04X
}
"
cp
)
)
}
_
=
>
None
}
}
#
[
cfg
(
test
)
]
mod
tests
{
use
super
:
:
ideograph_name
;
#
[
test
]
fn
name
(
)
{
assert_eq
!
(
ideograph_name
(
0x4E00
)
.
unwrap
(
)
"
CJK
UNIFIED
IDEOGRAPH
-
4E00
"
)
;
assert_eq
!
(
ideograph_name
(
0x9FD5
)
.
unwrap
(
)
"
CJK
UNIFIED
IDEOGRAPH
-
9FD5
"
)
;
assert_eq
!
(
ideograph_name
(
0x17000
)
.
unwrap
(
)
"
TANGUT
IDEOGRAPH
-
17000
"
)
;
assert_eq
!
(
ideograph_name
(
0xF900
)
.
unwrap
(
)
"
CJK
COMPATIBILITY
IDEOGRAPH
-
F900
"
)
;
}
#
[
test
]
fn
invalid
(
)
{
assert
!
(
ideograph_name
(
0
)
.
is_none
(
)
)
;
}
}
