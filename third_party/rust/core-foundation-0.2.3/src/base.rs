pub
use
core_foundation_sys
:
:
base
:
:
*
;
pub
trait
CFIndexConvertible
{
fn
to_CFIndex
(
self
)
-
>
CFIndex
;
}
impl
CFIndexConvertible
for
usize
{
#
[
inline
]
fn
to_CFIndex
(
self
)
-
>
CFIndex
{
let
max_CFIndex
=
CFIndex
:
:
max_value
(
)
;
if
self
>
(
max_CFIndex
as
usize
)
{
panic
!
(
"
value
out
of
range
"
)
}
self
as
CFIndex
}
}
pub
struct
CFType
(
CFTypeRef
)
;
impl
Clone
for
CFType
{
#
[
inline
]
fn
clone
(
&
self
)
-
>
CFType
{
unsafe
{
TCFType
:
:
wrap_under_get_rule
(
self
.
0
)
}
}
}
impl
Drop
for
CFType
{
fn
drop
(
&
mut
self
)
{
unsafe
{
CFRelease
(
self
.
0
)
}
}
}
pub
trait
TCFType
<
ConcreteTypeRef
>
{
fn
as_concrete_TypeRef
(
&
self
)
-
>
ConcreteTypeRef
;
unsafe
fn
wrap_under_create_rule
(
obj
:
ConcreteTypeRef
)
-
>
Self
;
fn
type_id
(
)
-
>
CFTypeID
;
#
[
inline
]
fn
as_CFType
(
&
self
)
-
>
CFType
{
unsafe
{
TCFType
:
:
wrap_under_get_rule
(
self
.
as_CFTypeRef
(
)
)
}
}
fn
as_CFTypeRef
(
&
self
)
-
>
CFTypeRef
;
unsafe
fn
wrap_under_get_rule
(
reference
:
ConcreteTypeRef
)
-
>
Self
;
#
[
inline
]
fn
retain_count
(
&
self
)
-
>
CFIndex
{
unsafe
{
CFGetRetainCount
(
self
.
as_CFTypeRef
(
)
)
}
}
#
[
inline
]
fn
type_of
(
&
self
)
-
>
CFTypeID
{
unsafe
{
CFGetTypeID
(
self
.
as_CFTypeRef
(
)
)
}
}
fn
show
(
&
self
)
{
unsafe
{
CFShow
(
self
.
as_CFTypeRef
(
)
)
}
}
#
[
inline
]
fn
instance_of
<
OtherConcreteTypeRef
OtherCFType
:
TCFType
<
OtherConcreteTypeRef
>
>
(
&
self
)
-
>
bool
{
self
.
type_of
(
)
=
=
<
OtherCFType
as
TCFType
<
_
>
>
:
:
type_id
(
)
}
}
impl
TCFType
<
CFTypeRef
>
for
CFType
{
#
[
inline
]
fn
as_concrete_TypeRef
(
&
self
)
-
>
CFTypeRef
{
self
.
0
}
#
[
inline
]
unsafe
fn
wrap_under_get_rule
(
reference
:
CFTypeRef
)
-
>
CFType
{
let
reference
:
CFTypeRef
=
CFRetain
(
reference
)
;
TCFType
:
:
wrap_under_create_rule
(
reference
)
}
#
[
inline
]
fn
as_CFTypeRef
(
&
self
)
-
>
CFTypeRef
{
self
.
as_concrete_TypeRef
(
)
}
#
[
inline
]
unsafe
fn
wrap_under_create_rule
(
obj
:
CFTypeRef
)
-
>
CFType
{
CFType
(
obj
)
}
#
[
inline
]
fn
type_id
(
)
-
>
CFTypeID
{
0
}
#
[
inline
]
fn
instance_of
<
OtherConcreteTypeRef
OtherCFType
:
TCFType
<
OtherConcreteTypeRef
>
>
(
&
self
)
-
>
bool
{
true
}
}
