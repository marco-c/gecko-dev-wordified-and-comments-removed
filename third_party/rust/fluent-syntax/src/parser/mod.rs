#
[
macro_use
]
mod
errors
;
#
[
macro_use
]
mod
macros
;
mod
comment
;
mod
core
;
mod
expression
;
mod
helper
;
mod
pattern
;
mod
runtime
;
mod
slice
;
use
crate
:
:
ast
;
pub
use
errors
:
:
{
ErrorKind
ParserError
}
;
pub
use
slice
:
:
Slice
;
pub
type
Result
<
S
>
=
std
:
:
result
:
:
Result
<
ast
:
:
Resource
<
S
>
(
ast
:
:
Resource
<
S
>
Vec
<
ParserError
>
)
>
;
pub
fn
parse
<
'
s
S
>
(
input
:
S
)
-
>
Result
<
S
>
where
S
:
Slice
<
'
s
>
{
core
:
:
Parser
:
:
new
(
input
)
.
parse
(
)
}
pub
fn
parse_runtime
<
'
s
S
>
(
input
:
S
)
-
>
Result
<
S
>
where
S
:
Slice
<
'
s
>
{
core
:
:
Parser
:
:
new
(
input
)
.
parse_runtime
(
)
}
