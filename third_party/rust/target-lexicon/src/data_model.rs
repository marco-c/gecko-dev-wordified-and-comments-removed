#
[
derive
(
Copy
Clone
Debug
PartialEq
Eq
Hash
)
]
#
[
allow
(
missing_docs
)
]
pub
enum
Size
{
U8
U16
U32
U64
}
impl
Size
{
pub
fn
bits
(
self
)
-
>
u8
{
use
Size
:
:
*
;
match
self
{
U8
=
>
8
U16
=
>
16
U32
=
>
32
U64
=
>
64
}
}
pub
fn
bytes
(
self
)
-
>
u8
{
use
Size
:
:
*
;
match
self
{
U8
=
>
1
U16
=
>
2
U32
=
>
4
U64
=
>
8
}
}
}
#
[
derive
(
Copy
Clone
Debug
PartialEq
Eq
Hash
)
]
#
[
cfg_attr
(
feature
=
"
rust_1_40
"
non_exhaustive
)
]
pub
enum
CDataModel
{
LP32
ILP32
LLP64
LP64
ILP64
}
impl
CDataModel
{
pub
fn
pointer_width
(
self
)
-
>
Size
{
use
CDataModel
:
:
*
;
match
self
{
LP32
|
ILP32
=
>
Size
:
:
U32
LLP64
|
LP64
|
ILP64
=
>
Size
:
:
U64
}
}
pub
fn
short_size
(
self
)
-
>
Size
{
use
CDataModel
:
:
*
;
match
self
{
LP32
|
ILP32
|
LLP64
|
LP64
|
ILP64
=
>
Size
:
:
U16
}
}
pub
fn
int_size
(
self
)
-
>
Size
{
use
CDataModel
:
:
*
;
match
self
{
LP32
=
>
Size
:
:
U16
ILP32
|
LLP64
|
LP64
|
ILP64
=
>
Size
:
:
U32
}
}
pub
fn
long_size
(
self
)
-
>
Size
{
use
CDataModel
:
:
*
;
match
self
{
LP32
|
ILP32
|
LLP64
|
ILP64
=
>
Size
:
:
U32
LP64
=
>
Size
:
:
U64
}
}
pub
fn
long_long_size
(
self
)
-
>
Size
{
use
CDataModel
:
:
*
;
match
self
{
LP32
|
ILP32
|
LLP64
|
ILP64
|
LP64
=
>
Size
:
:
U64
}
}
pub
fn
float_size
(
self
)
-
>
Size
{
Size
:
:
U32
}
pub
fn
double_size
(
self
)
-
>
Size
{
Size
:
:
U64
}
}
