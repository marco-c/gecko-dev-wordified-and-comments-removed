use
de
:
:
read
:
:
SliceReader
;
use
{
ErrorKind
Result
}
;
pub
trait
TrailingBytes
{
fn
check_end
(
reader
:
&
SliceReader
)
-
>
Result
<
(
)
>
;
}
#
[
derive
(
Copy
Clone
)
]
pub
struct
AllowTrailing
;
#
[
derive
(
Copy
Clone
)
]
pub
struct
RejectTrailing
;
impl
TrailingBytes
for
AllowTrailing
{
#
[
inline
(
always
)
]
fn
check_end
(
_reader
:
&
SliceReader
)
-
>
Result
<
(
)
>
{
Ok
(
(
)
)
}
}
impl
TrailingBytes
for
RejectTrailing
{
#
[
inline
(
always
)
]
fn
check_end
(
reader
:
&
SliceReader
)
-
>
Result
<
(
)
>
{
if
reader
.
is_finished
(
)
{
Ok
(
(
)
)
}
else
{
Err
(
Box
:
:
new
(
ErrorKind
:
:
Custom
(
"
Slice
had
bytes
remaining
after
deserialization
"
.
to_string
(
)
)
)
)
}
}
}
