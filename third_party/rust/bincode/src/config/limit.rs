use
error
:
:
{
ErrorKind
Result
}
;
pub
trait
SizeLimit
{
fn
add
(
&
mut
self
n
:
u64
)
-
>
Result
<
(
)
>
;
fn
limit
(
&
self
)
-
>
Option
<
u64
>
;
}
#
[
derive
(
Copy
Clone
)
]
pub
struct
Bounded
(
pub
u64
)
;
#
[
derive
(
Copy
Clone
)
]
pub
struct
Infinite
;
impl
SizeLimit
for
Bounded
{
#
[
inline
(
always
)
]
fn
add
(
&
mut
self
n
:
u64
)
-
>
Result
<
(
)
>
{
if
self
.
0
>
=
n
{
self
.
0
-
=
n
;
Ok
(
(
)
)
}
else
{
Err
(
Box
:
:
new
(
ErrorKind
:
:
SizeLimit
)
)
}
}
#
[
inline
(
always
)
]
fn
limit
(
&
self
)
-
>
Option
<
u64
>
{
Some
(
self
.
0
)
}
}
impl
SizeLimit
for
Infinite
{
#
[
inline
(
always
)
]
fn
add
(
&
mut
self
_
:
u64
)
-
>
Result
<
(
)
>
{
Ok
(
(
)
)
}
#
[
inline
(
always
)
]
fn
limit
(
&
self
)
-
>
Option
<
u64
>
{
None
}
}
