#
!
[
deny
(
missing_docs
trivial_numeric_casts
unused_extern_crates
)
]
#
!
[
warn
(
unused_import_braces
)
]
#
!
[
cfg_attr
(
feature
=
"
std
"
deny
(
unstable_features
)
)
]
#
!
[
cfg_attr
(
feature
=
"
cargo
-
clippy
"
allow
(
new_without_default
)
)
]
#
!
[
cfg_attr
(
feature
=
"
cargo
-
clippy
"
warn
(
float_arithmetic
mut_mut
nonminimal_bool
option_map_unwrap_or
option_map_unwrap_or_else
print_stdout
unicode_not_nfc
use_self
)
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
std
"
)
no_std
)
]
#
!
[
cfg_attr
(
not
(
feature
=
"
std
"
)
feature
(
alloc
)
)
]
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
#
[
macro_use
]
extern
crate
alloc
;
extern
crate
cranelift_codegen
;
#
[
cfg
(
test
)
]
extern
crate
target_lexicon
;
#
[
macro_use
]
extern
crate
log
;
pub
use
frontend
:
:
{
FunctionBuilder
FunctionBuilderContext
}
;
pub
use
switch
:
:
Switch
;
pub
use
variable
:
:
Variable
;
mod
frontend
;
mod
ssa
;
mod
switch
;
mod
variable
;
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
mod
std
{
pub
use
alloc
:
:
{
string
vec
}
;
pub
use
core
:
:
*
;
pub
mod
collections
{
#
[
allow
(
unused_extern_crates
)
]
extern
crate
hashmap_core
;
pub
use
self
:
:
hashmap_core
:
:
map
as
hash_map
;
pub
use
self
:
:
hashmap_core
:
:
{
HashMap
HashSet
}
;
}
}
