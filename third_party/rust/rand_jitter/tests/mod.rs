extern
crate
rand_jitter
;
extern
crate
rand_core
;
use
rand_jitter
:
:
JitterRng
;
#
[
cfg
(
feature
=
"
std
"
)
]
use
rand_core
:
:
RngCore
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
test
]
fn
test_jitter_init
(
)
{
match
JitterRng
:
:
new
(
)
{
Ok
(
ref
mut
rng
)
=
>
{
assert
!
(
rng
.
next_u32
(
)
|
rng
.
next_u32
(
)
!
=
0
)
;
}
Err
(
_
)
=
>
{
}
}
}
#
[
test
]
fn
test_jitter_bad_timer
(
)
{
fn
bad_timer
(
)
-
>
u64
{
0
}
let
mut
rng
=
JitterRng
:
:
new_with_timer
(
bad_timer
)
;
assert
!
(
rng
.
test_timer
(
)
.
is_err
(
)
)
;
}
