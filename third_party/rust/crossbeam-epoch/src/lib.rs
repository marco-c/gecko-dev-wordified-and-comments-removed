#
!
[
cfg_attr
(
feature
=
"
nightly
"
feature
(
const_fn
)
)
]
#
!
[
cfg_attr
(
feature
=
"
nightly
"
feature
(
alloc
)
)
]
#
!
[
cfg_attr
(
not
(
test
)
no_std
)
]
#
[
cfg
(
all
(
not
(
test
)
feature
=
"
use_std
"
)
)
]
#
[
macro_use
]
extern
crate
std
;
#
[
cfg
(
test
)
]
extern
crate
core
;
#
[
cfg
(
feature
=
"
nightly
"
)
]
extern
crate
alloc
;
#
[
cfg
(
not
(
feature
=
"
nightly
"
)
)
]
mod
alloc
{
extern
crate
std
;
pub
use
self
:
:
std
:
:
boxed
;
pub
use
self
:
:
std
:
:
sync
as
arc
;
}
#
[
cfg
(
feature
=
"
manually_drop
"
)
]
mod
nodrop
{
pub
use
std
:
:
mem
:
:
ManuallyDrop
as
NoDrop
;
}
#
[
cfg
(
not
(
feature
=
"
manually_drop
"
)
)
]
extern
crate
nodrop
;
extern
crate
arrayvec
;
extern
crate
crossbeam_utils
;
#
[
cfg
(
feature
=
"
use_std
"
)
]
#
[
macro_use
]
extern
crate
lazy_static
;
#
[
macro_use
]
extern
crate
memoffset
;
#
[
macro_use
]
extern
crate
scopeguard
;
mod
atomic
;
mod
collector
;
#
[
cfg
(
feature
=
"
use_std
"
)
]
mod
default
;
mod
deferred
;
mod
epoch
;
mod
garbage
;
mod
guard
;
mod
internal
;
mod
sync
;
pub
use
self
:
:
atomic
:
:
{
Atomic
CompareAndSetError
CompareAndSetOrdering
Owned
Shared
}
;
pub
use
self
:
:
guard
:
:
{
unprotected
Guard
}
;
#
[
cfg
(
feature
=
"
use_std
"
)
]
pub
use
self
:
:
default
:
:
{
default_handle
is_pinned
pin
}
;
pub
use
self
:
:
collector
:
:
{
Collector
Handle
}
;
