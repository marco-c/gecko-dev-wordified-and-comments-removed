#
!
[
cfg_attr
(
test
deny
(
warnings
)
)
]
#
!
[
deny
(
missing_docs
)
]
use
std
:
:
mem
;
pub
unsafe
fn
data
<
T
:
?
Sized
>
(
val
:
*
const
T
)
-
>
*
const
(
)
{
*
mem
:
:
transmute
:
:
<
*
const
*
const
T
*
const
*
const
(
)
>
(
&
val
)
}
pub
unsafe
fn
data_mut
<
T
:
?
Sized
>
(
mut
val
:
*
mut
T
)
-
>
*
mut
(
)
{
*
mem
:
:
transmute
:
:
<
*
mut
*
mut
T
*
mut
*
mut
(
)
>
(
&
mut
val
)
}
#
[
test
]
fn
test_simple
(
)
{
let
x
=
&
7
as
&
Send
;
unsafe
{
assert
!
(
&
7
=
=
mem
:
:
transmute
:
:
<
_
&
i32
>
(
data
(
x
)
)
)
}
;
}
pub
unsafe
trait
Trait
{
}
mod
impls
;
