#
!
[
allow
(
non_snake_case
non_camel_case_types
)
]
pub
use
self
:
:
error
:
:
*
;
use
std
:
:
default
:
:
Default
;
use
std
:
:
mem
;
mod
error
;
pub
fn
SQLITE_STATIC
(
)
-
>
sqlite3_destructor_type
{
None
}
pub
fn
SQLITE_TRANSIENT
(
)
-
>
sqlite3_destructor_type
{
Some
(
unsafe
{
mem
:
:
transmute
(
-
1isize
)
}
)
}
#
[
repr
(
i32
)
]
pub
enum
Limit
{
SQLITE_LIMIT_LENGTH
=
SQLITE_LIMIT_LENGTH
SQLITE_LIMIT_SQL_LENGTH
=
SQLITE_LIMIT_SQL_LENGTH
SQLITE_LIMIT_COLUMN
=
SQLITE_LIMIT_COLUMN
SQLITE_LIMIT_EXPR_DEPTH
=
SQLITE_LIMIT_EXPR_DEPTH
SQLITE_LIMIT_COMPOUND_SELECT
=
SQLITE_LIMIT_COMPOUND_SELECT
SQLITE_LIMIT_VDBE_OP
=
SQLITE_LIMIT_VDBE_OP
SQLITE_LIMIT_FUNCTION_ARG
=
SQLITE_LIMIT_FUNCTION_ARG
SQLITE_LIMIT_ATTACHED
=
SQLITE_LIMIT_ATTACHED
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
=
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
SQLITE_LIMIT_VARIABLE_NUMBER
=
SQLITE_LIMIT_VARIABLE_NUMBER
SQLITE_LIMIT_TRIGGER_DEPTH
=
10
SQLITE_LIMIT_WORKER_THREADS
=
11
}
#
[
allow
(
clippy
:
:
all
)
]
mod
bindings
{
include
!
(
concat
!
(
env
!
(
"
OUT_DIR
"
)
"
/
bindgen
.
rs
"
)
)
;
}
pub
use
bindings
:
:
*
;
pub
type
sqlite3_index_constraint
=
sqlite3_index_info_sqlite3_index_constraint
;
pub
type
sqlite3_index_constraint_usage
=
sqlite3_index_info_sqlite3_index_constraint_usage
;
impl
Default
for
sqlite3_vtab
{
fn
default
(
)
-
>
Self
{
unsafe
{
mem
:
:
zeroed
(
)
}
}
}
impl
Default
for
sqlite3_vtab_cursor
{
fn
default
(
)
-
>
Self
{
unsafe
{
mem
:
:
zeroed
(
)
}
}
}
