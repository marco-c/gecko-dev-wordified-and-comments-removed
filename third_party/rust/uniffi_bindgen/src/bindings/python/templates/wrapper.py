import
os
import
sys
import
ctypes
import
enum
import
struct
import
contextlib
import
datetime
import
typing
{
%
-
if
ci
.
has_async_fns
(
)
%
}
import
asyncio
{
%
-
endif
%
}
import
platform
{
%
-
for
req
in
self
.
imports
(
)
%
}
{
{
req
.
render
(
)
}
}
{
%
-
endfor
%
}
DEFAULT
=
object
(
)
{
%
include
"
RustBufferTemplate
.
py
"
%
}
{
%
include
"
Helpers
.
py
"
%
}
{
%
include
"
PointerManager
.
py
"
%
}
{
%
include
"
RustBufferHelper
.
py
"
%
}
{
%
include
"
NamespaceLibraryTemplate
.
py
"
%
}
{
{
type_helper_code
}
}
{
%
-
for
func
in
ci
.
function_definitions
(
)
%
}
{
%
-
include
"
TopLevelFunctionTemplate
.
py
"
%
}
{
%
-
endfor
%
}
__all__
=
[
    
"
InternalError
"
    
{
%
-
for
e
in
ci
.
enum_definitions
(
)
%
}
    
"
{
{
e
|
type_name
}
}
"
    
{
%
-
endfor
%
}
    
{
%
-
for
record
in
ci
.
record_definitions
(
)
%
}
    
"
{
{
record
|
type_name
}
}
"
    
{
%
-
endfor
%
}
    
{
%
-
for
func
in
ci
.
function_definitions
(
)
%
}
    
"
{
{
func
.
name
(
)
|
fn_name
}
}
"
    
{
%
-
endfor
%
}
    
{
%
-
for
obj
in
ci
.
object_definitions
(
)
%
}
    
"
{
{
obj
|
type_name
}
}
"
    
{
%
-
endfor
%
}
    
{
%
-
for
c
in
ci
.
callback_interface_definitions
(
)
%
}
    
"
{
{
c
.
name
(
)
|
class_name
}
}
"
    
{
%
-
endfor
%
}
]
{
%
import
"
macros
.
py
"
as
py
%
}
