#
[
derive
(
Debug
Clone
Hash
PartialEq
Eq
)
]
pub
enum
FfiType
{
UInt8
Int8
UInt16
Int16
UInt32
Int32
UInt64
Int64
Float32
Float64
RustArcPtr
(
String
)
RustBuffer
(
Option
<
String
>
)
ForeignBytes
ForeignCallback
}
#
[
derive
(
Debug
Default
Clone
)
]
pub
struct
FfiFunction
{
pub
(
super
)
name
:
String
pub
(
super
)
arguments
:
Vec
<
FfiArgument
>
pub
(
super
)
return_type
:
Option
<
FfiType
>
}
impl
FfiFunction
{
pub
fn
name
(
&
self
)
-
>
&
str
{
&
self
.
name
}
pub
fn
arguments
(
&
self
)
-
>
Vec
<
&
FfiArgument
>
{
self
.
arguments
.
iter
(
)
.
collect
(
)
}
pub
fn
return_type
(
&
self
)
-
>
Option
<
&
FfiType
>
{
self
.
return_type
.
as_ref
(
)
}
}
#
[
derive
(
Debug
Clone
)
]
pub
struct
FfiArgument
{
pub
(
super
)
name
:
String
pub
(
super
)
type_
:
FfiType
}
impl
FfiArgument
{
pub
fn
name
(
&
self
)
-
>
&
str
{
&
self
.
name
}
pub
fn
type_
(
&
self
)
-
>
FfiType
{
self
.
type_
.
clone
(
)
}
}
#
[
cfg
(
test
)
]
mod
test
{
}
