use
super
:
:
Literal
;
use
std
:
:
fmt
:
:
Debug
;
pub
trait
CodeType
:
Debug
{
fn
type_label
(
&
self
)
-
>
String
;
fn
canonical_name
(
&
self
)
-
>
String
{
self
.
type_label
(
)
}
fn
literal
(
&
self
_literal
:
&
Literal
)
-
>
String
{
unimplemented
!
(
"
Unimplemented
for
{
}
"
self
.
type_label
(
)
)
}
fn
ffi_converter_name
(
&
self
)
-
>
String
{
format
!
(
"
FfiConverter
{
}
"
self
.
canonical_name
(
)
)
}
fn
lower
(
&
self
)
-
>
String
{
format
!
(
"
{
}
.
lower
"
self
.
ffi_converter_name
(
)
)
}
fn
write
(
&
self
)
-
>
String
{
format
!
(
"
{
}
.
write
"
self
.
ffi_converter_name
(
)
)
}
fn
lift
(
&
self
)
-
>
String
{
format
!
(
"
{
}
.
lift
"
self
.
ffi_converter_name
(
)
)
}
fn
read
(
&
self
)
-
>
String
{
format
!
(
"
{
}
.
read
"
self
.
ffi_converter_name
(
)
)
}
fn
imports
(
&
self
)
-
>
Option
<
Vec
<
String
>
>
{
None
}
fn
initialization_fn
(
&
self
)
-
>
Option
<
String
>
{
None
}
}
