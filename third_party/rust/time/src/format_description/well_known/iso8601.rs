mod
adt_hack
;
use
core
:
:
num
:
:
NonZeroU8
;
pub
use
self
:
:
adt_hack
:
:
{
DoNotRelyOnWhatThisIs
EncodedConfig
}
;
const
PARSING_ONLY
:
EncodedConfig
=
Config
{
formatted_components
:
FormattedComponents
:
:
None
use_separators
:
false
year_is_six_digits
:
false
date_kind
:
DateKind
:
:
Calendar
time_precision
:
TimePrecision
:
:
Hour
{
decimal_digits
:
None
}
offset_precision
:
OffsetPrecision
:
:
Hour
}
.
encode
(
)
;
const
DEFAULT_CONFIG
:
EncodedConfig
=
Config
:
:
DEFAULT
.
encode
(
)
;
#
[
cfg_attr
(
feature
=
"
formatting
"
doc
=
"
rust
"
)
]
#
[
cfg_attr
(
not
(
feature
=
"
formatting
"
)
doc
=
"
rust
ignore
"
)
]
#
[
derive
(
Clone
Copy
PartialEq
Eq
)
]
pub
struct
Iso8601
<
const
CONFIG
:
EncodedConfig
=
DEFAULT_CONFIG
>
;
impl
<
const
CONFIG
:
EncodedConfig
>
core
:
:
fmt
:
:
Debug
for
Iso8601
<
CONFIG
>
{
fn
fmt
(
&
self
f
:
&
mut
core
:
:
fmt
:
:
Formatter
<
'
_
>
)
-
>
core
:
:
fmt
:
:
Result
{
f
.
debug_struct
(
"
Iso8601
"
)
.
field
(
"
config
"
&
Config
:
:
decode
(
CONFIG
)
)
.
finish
(
)
}
}
impl
Iso8601
<
DEFAULT_CONFIG
>
{
pub
const
DEFAULT
:
Self
=
Self
;
}
impl
Iso8601
<
PARSING_ONLY
>
{
pub
const
PARSING
:
Self
=
Self
;
}
#
[
derive
(
Debug
Clone
Copy
PartialEq
Eq
)
]
pub
enum
FormattedComponents
{
None
Date
Time
Offset
DateTime
DateTimeOffset
TimeOffset
}
#
[
derive
(
Debug
Clone
Copy
PartialEq
Eq
)
]
pub
enum
DateKind
{
Calendar
Week
Ordinal
}
#
[
derive
(
Debug
Clone
Copy
PartialEq
Eq
)
]
pub
enum
TimePrecision
{
Hour
{
#
[
allow
(
clippy
:
:
missing_docs_in_private_items
)
]
decimal_digits
:
Option
<
NonZeroU8
>
}
Minute
{
#
[
allow
(
clippy
:
:
missing_docs_in_private_items
)
]
decimal_digits
:
Option
<
NonZeroU8
>
}
Second
{
#
[
allow
(
clippy
:
:
missing_docs_in_private_items
)
]
decimal_digits
:
Option
<
NonZeroU8
>
}
}
#
[
derive
(
Debug
Clone
Copy
PartialEq
Eq
)
]
pub
enum
OffsetPrecision
{
Hour
Minute
}
#
[
allow
(
missing_copy_implementations
)
]
#
[
doc
(
alias
=
"
EncodedConfig
"
)
]
#
[
derive
(
Debug
)
]
pub
struct
Config
{
pub
(
crate
)
formatted_components
:
FormattedComponents
pub
(
crate
)
use_separators
:
bool
pub
(
crate
)
year_is_six_digits
:
bool
pub
(
crate
)
date_kind
:
DateKind
pub
(
crate
)
time_precision
:
TimePrecision
pub
(
crate
)
offset_precision
:
OffsetPrecision
}
impl
Config
{
pub
const
DEFAULT
:
Self
=
Self
{
formatted_components
:
FormattedComponents
:
:
DateTimeOffset
use_separators
:
true
year_is_six_digits
:
false
date_kind
:
DateKind
:
:
Calendar
time_precision
:
TimePrecision
:
:
Second
{
decimal_digits
:
NonZeroU8
:
:
new
(
9
)
}
offset_precision
:
OffsetPrecision
:
:
Minute
}
;
pub
const
fn
set_formatted_components
(
self
formatted_components
:
FormattedComponents
)
-
>
Self
{
Self
{
formatted_components
.
.
self
}
}
pub
const
fn
set_use_separators
(
self
use_separators
:
bool
)
-
>
Self
{
Self
{
use_separators
.
.
self
}
}
pub
const
fn
set_year_is_six_digits
(
self
year_is_six_digits
:
bool
)
-
>
Self
{
Self
{
year_is_six_digits
.
.
self
}
}
pub
const
fn
set_date_kind
(
self
date_kind
:
DateKind
)
-
>
Self
{
Self
{
date_kind
.
.
self
}
}
pub
const
fn
set_time_precision
(
self
time_precision
:
TimePrecision
)
-
>
Self
{
Self
{
time_precision
.
.
self
}
}
pub
const
fn
set_offset_precision
(
self
offset_precision
:
OffsetPrecision
)
-
>
Self
{
Self
{
offset_precision
.
.
self
}
}
}
