#
!
[
doc
(
html_playground_url
=
"
https
:
/
/
play
.
rust
-
lang
.
org
"
)
]
#
!
[
cfg_attr
(
__time_03_docs
feature
(
doc_auto_cfg
doc_notable_trait
)
)
]
#
!
[
no_std
]
#
!
[
doc
(
html_favicon_url
=
"
https
:
/
/
avatars0
.
githubusercontent
.
com
/
u
/
55999857
"
)
]
#
!
[
doc
(
html_logo_url
=
"
https
:
/
/
avatars0
.
githubusercontent
.
com
/
u
/
55999857
"
)
]
#
!
[
doc
(
test
(
attr
(
deny
(
warnings
)
)
)
)
]
#
[
allow
(
unused_extern_crates
)
]
#
[
cfg
(
feature
=
"
alloc
"
)
]
extern
crate
alloc
;
#
[
cfg
(
feature
=
"
std
"
)
]
extern
crate
std
;
mod
date
;
mod
duration
;
pub
mod
error
;
pub
mod
ext
;
#
[
cfg
(
any
(
feature
=
"
formatting
"
feature
=
"
parsing
"
)
)
]
pub
mod
format_description
;
#
[
cfg
(
feature
=
"
formatting
"
)
]
pub
mod
formatting
;
#
[
cfg
(
feature
=
"
std
"
)
]
mod
instant
;
mod
internal_macros
;
#
[
cfg
(
feature
=
"
macros
"
)
]
pub
mod
macros
;
mod
month
;
mod
offset_date_time
;
#
[
cfg
(
feature
=
"
parsing
"
)
]
pub
mod
parsing
;
mod
primitive_date_time
;
#
[
cfg
(
feature
=
"
quickcheck
"
)
]
mod
quickcheck
;
#
[
cfg
(
feature
=
"
rand
"
)
]
mod
rand
;
#
[
cfg
(
feature
=
"
serde
"
)
]
#
[
allow
(
missing_copy_implementations
missing_debug_implementations
)
]
pub
mod
serde
;
mod
sys
;
#
[
cfg
(
test
)
]
mod
tests
;
mod
time
;
mod
utc_offset
;
pub
mod
util
;
mod
weekday
;
pub
use
time_core
:
:
convert
;
pub
use
crate
:
:
date
:
:
Date
;
pub
use
crate
:
:
duration
:
:
Duration
;
pub
use
crate
:
:
error
:
:
Error
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
allow
(
deprecated
)
]
pub
use
crate
:
:
instant
:
:
Instant
;
pub
use
crate
:
:
month
:
:
Month
;
pub
use
crate
:
:
offset_date_time
:
:
OffsetDateTime
;
pub
use
crate
:
:
primitive_date_time
:
:
PrimitiveDateTime
;
pub
use
crate
:
:
time
:
:
Time
;
pub
use
crate
:
:
utc_offset
:
:
UtcOffset
;
pub
use
crate
:
:
weekday
:
:
Weekday
;
pub
type
Result
<
T
>
=
core
:
:
result
:
:
Result
<
T
Error
>
;
#
[
inline
(
never
)
]
#
[
cold
]
#
[
track_caller
]
const
fn
expect_failed
(
message
:
&
str
)
-
>
!
{
panic
!
(
"
{
}
"
message
)
}
