#
!
[
cfg_attr
(
feature
=
"
core
"
feature
(
no_std
)
)
]
#
!
[
cfg_attr
(
feature
=
"
core
"
feature
(
collections
)
)
]
#
!
[
cfg_attr
(
feature
=
"
core
"
no_std
)
]
#
!
[
cfg_attr
(
feature
=
"
nightly
"
feature
(
test
)
)
]
#
!
[
cfg_attr
(
feature
=
"
nightly
"
feature
(
const_fn
)
)
]
#
[
cfg
(
feature
=
"
core
"
)
]
extern
crate
collections
;
#
[
cfg
(
feature
=
"
regexp
"
)
]
extern
crate
regex
;
#
[
cfg
(
feature
=
"
regexp_macros
"
)
]
#
[
macro_use
]
extern
crate
lazy_static
;
#
[
cfg
(
feature
=
"
nightly
"
)
]
extern
crate
test
;
#
[
cfg
(
feature
=
"
core
"
)
]
mod
std
{
#
[
macro_use
]
pub
use
core
:
:
{
fmt
iter
option
ops
slice
mem
}
;
pub
use
collections
:
:
{
boxed
vec
string
}
;
pub
mod
prelude
{
pub
use
core
:
:
prelude
as
v1
;
}
}
pub
use
self
:
:
util
:
:
*
;
pub
use
self
:
:
internal
:
:
*
;
pub
use
self
:
:
macros
:
:
*
;
pub
use
self
:
:
methods
:
:
*
;
pub
use
self
:
:
bytes
:
:
*
;
pub
use
self
:
:
bits
:
:
*
;
pub
use
self
:
:
nom
:
:
*
;
pub
use
self
:
:
character
:
:
*
;
#
[
cfg
(
feature
=
"
regexp
"
)
]
pub
use
self
:
:
regexp
:
:
*
;
#
[
cfg
(
not
(
feature
=
"
core
"
)
)
]
#
[
cfg
(
feature
=
"
stream
"
)
]
pub
use
self
:
:
stream
:
:
*
;
#
[
cfg
(
not
(
feature
=
"
core
"
)
)
]
pub
use
self
:
:
str
:
:
*
;
#
[
macro_use
]
mod
util
;
mod
internal
;
#
[
macro_use
]
mod
macros
;
#
[
macro_use
]
mod
methods
;
#
[
macro_use
]
mod
bytes
;
#
[
macro_use
]
mod
bits
;
#
[
macro_use
]
mod
nom
;
#
[
macro_use
]
mod
character
;
#
[
cfg
(
feature
=
"
regexp
"
)
]
#
[
macro_use
]
mod
regexp
;
#
[
macro_use
]
#
[
cfg
(
not
(
feature
=
"
core
"
)
)
]
#
[
cfg
(
feature
=
"
stream
"
)
]
mod
stream
;
#
[
cfg
(
not
(
feature
=
"
core
"
)
)
]
mod
str
;
