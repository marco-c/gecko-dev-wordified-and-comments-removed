use
crate
:
:
prelude
:
:
*
;
use
crate
:
:
vk
;
use
core
:
:
mem
;
use
core
:
:
ptr
;
impl
crate
:
:
khr
:
:
get_surface_capabilities2
:
:
Instance
{
#
[
inline
]
pub
unsafe
fn
get_physical_device_surface_capabilities2
(
&
self
physical_device
:
vk
:
:
PhysicalDevice
surface_info
:
&
vk
:
:
PhysicalDeviceSurfaceInfo2KHR
<
'
_
>
surface_capabilities
:
&
mut
vk
:
:
SurfaceCapabilities2KHR
<
'
_
>
)
-
>
VkResult
<
(
)
>
{
(
self
.
fp
.
get_physical_device_surface_capabilities2_khr
)
(
physical_device
surface_info
surface_capabilities
)
.
result
(
)
}
#
[
inline
]
pub
unsafe
fn
get_physical_device_surface_formats2_len
(
&
self
physical_device
:
vk
:
:
PhysicalDevice
surface_info
:
&
vk
:
:
PhysicalDeviceSurfaceInfo2KHR
<
'
_
>
)
-
>
VkResult
<
usize
>
{
let
mut
count
=
mem
:
:
MaybeUninit
:
:
uninit
(
)
;
let
err_code
=
(
self
.
fp
.
get_physical_device_surface_formats2_khr
)
(
physical_device
surface_info
count
.
as_mut_ptr
(
)
ptr
:
:
null_mut
(
)
)
;
err_code
.
assume_init_on_success
(
count
)
.
map
(
|
c
|
c
as
usize
)
}
#
[
inline
]
pub
unsafe
fn
get_physical_device_surface_formats2
(
&
self
physical_device
:
vk
:
:
PhysicalDevice
surface_info
:
&
vk
:
:
PhysicalDeviceSurfaceInfo2KHR
<
'
_
>
out
:
&
mut
[
vk
:
:
SurfaceFormat2KHR
<
'
_
>
]
)
-
>
VkResult
<
(
)
>
{
let
mut
count
=
out
.
len
(
)
as
u32
;
let
err_code
=
(
self
.
fp
.
get_physical_device_surface_formats2_khr
)
(
physical_device
surface_info
&
mut
count
out
.
as_mut_ptr
(
)
)
;
assert_eq
!
(
count
as
usize
out
.
len
(
)
)
;
err_code
.
result
(
)
}
}
