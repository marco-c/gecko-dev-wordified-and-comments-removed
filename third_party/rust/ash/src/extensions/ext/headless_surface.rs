use
crate
:
:
prelude
:
:
*
;
use
crate
:
:
vk
;
use
crate
:
:
RawPtr
;
use
core
:
:
mem
;
impl
crate
:
:
ext
:
:
headless_surface
:
:
Instance
{
#
[
inline
]
pub
unsafe
fn
create_headless_surface
(
&
self
create_info
:
&
vk
:
:
HeadlessSurfaceCreateInfoEXT
<
'
_
>
allocation_callbacks
:
Option
<
&
vk
:
:
AllocationCallbacks
<
'
_
>
>
)
-
>
VkResult
<
vk
:
:
SurfaceKHR
>
{
let
mut
surface
=
mem
:
:
MaybeUninit
:
:
uninit
(
)
;
(
self
.
fp
.
create_headless_surface_ext
)
(
self
.
handle
create_info
allocation_callbacks
.
as_raw_ptr
(
)
surface
.
as_mut_ptr
(
)
)
.
assume_init_on_success
(
surface
)
}
}
