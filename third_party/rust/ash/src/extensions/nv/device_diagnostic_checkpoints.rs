use
crate
:
:
vk
;
use
core
:
:
ffi
;
use
core
:
:
mem
;
use
core
:
:
ptr
;
impl
crate
:
:
nv
:
:
device_diagnostic_checkpoints
:
:
Device
{
#
[
inline
]
pub
unsafe
fn
cmd_set_checkpoint
(
&
self
command_buffer
:
vk
:
:
CommandBuffer
p_checkpoint_marker
:
*
const
ffi
:
:
c_void
)
{
(
self
.
fp
.
cmd_set_checkpoint_nv
)
(
command_buffer
p_checkpoint_marker
)
;
}
#
[
inline
]
pub
unsafe
fn
get_queue_checkpoint_data_len
(
&
self
queue
:
vk
:
:
Queue
)
-
>
usize
{
let
mut
count
=
mem
:
:
MaybeUninit
:
:
uninit
(
)
;
(
self
.
fp
.
get_queue_checkpoint_data_nv
)
(
queue
count
.
as_mut_ptr
(
)
ptr
:
:
null_mut
(
)
)
;
count
.
assume_init
(
)
as
usize
}
#
[
inline
]
pub
unsafe
fn
get_queue_checkpoint_data
(
&
self
queue
:
vk
:
:
Queue
out
:
&
mut
[
vk
:
:
CheckpointDataNV
<
'
_
>
]
)
{
let
mut
count
=
out
.
len
(
)
as
u32
;
(
self
.
fp
.
get_queue_checkpoint_data_nv
)
(
queue
&
mut
count
out
.
as_mut_ptr
(
)
)
;
assert_eq
!
(
count
as
usize
out
.
len
(
)
)
;
}
}
