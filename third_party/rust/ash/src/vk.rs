#
!
[
allow
(
clippy
:
:
too_many_arguments
clippy
:
:
cognitive_complexity
clippy
:
:
wrong_self_convention
unused_qualifications
)
]
#
[
macro_use
]
mod
macros
;
mod
aliases
;
pub
use
aliases
:
:
*
;
mod
bitflags
;
pub
use
bitflags
:
:
*
;
#
[
cfg
(
feature
=
"
debug
"
)
]
mod
const_debugs
;
mod
constants
;
pub
use
constants
:
:
*
;
mod
definitions
;
pub
use
definitions
:
:
*
;
mod
enums
;
pub
use
enums
:
:
*
;
mod
extensions
;
pub
use
extensions
:
:
*
;
mod
feature_extensions
;
mod
features
;
pub
use
features
:
:
*
;
mod
prelude
;
pub
use
prelude
:
:
*
;
#
[
allow
(
clippy
:
:
useless_transmute
nonstandard_style
)
]
pub
mod
native
;
mod
platform_types
;
pub
use
platform_types
:
:
*
;
pub
(
crate
)
unsafe
fn
ptr_chain_iter
<
T
:
?
Sized
>
(
ptr
:
&
mut
T
)
-
>
impl
Iterator
<
Item
=
*
mut
BaseOutStructure
<
'
_
>
>
{
let
ptr
=
<
*
mut
T
>
:
:
cast
:
:
<
BaseOutStructure
<
'
_
>
>
(
ptr
)
;
(
0
.
.
)
.
scan
(
ptr
|
p_ptr
_
|
{
if
p_ptr
.
is_null
(
)
{
return
None
;
}
let
n_ptr
=
(
*
*
p_ptr
)
.
p_next
;
let
old
=
*
p_ptr
;
*
p_ptr
=
n_ptr
;
Some
(
old
)
}
)
}
pub
trait
Handle
:
Sized
{
const
TYPE
:
ObjectType
;
fn
as_raw
(
self
)
-
>
u64
;
fn
from_raw
(
_
:
u64
)
-
>
Self
;
fn
is_null
(
self
)
-
>
bool
{
self
.
as_raw
(
)
=
=
0
}
}
