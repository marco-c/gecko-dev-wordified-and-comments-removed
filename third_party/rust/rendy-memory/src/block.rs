use
std
:
:
ops
:
:
Range
;
use
crate
:
:
mapping
:
:
MappedRange
;
pub
trait
Block
<
B
:
gfx_hal
:
:
Backend
>
{
fn
properties
(
&
self
)
-
>
gfx_hal
:
:
memory
:
:
Properties
;
fn
memory
(
&
self
)
-
>
&
B
:
:
Memory
;
fn
range
(
&
self
)
-
>
Range
<
u64
>
;
fn
size
(
&
self
)
-
>
u64
{
let
range
=
self
.
range
(
)
;
range
.
end
-
range
.
start
}
fn
map
<
'
a
>
(
&
'
a
mut
self
device
:
&
B
:
:
Device
range
:
Range
<
u64
>
)
-
>
Result
<
MappedRange
<
'
a
B
>
gfx_hal
:
:
device
:
:
MapError
>
;
fn
unmap
(
&
mut
self
device
:
&
B
:
:
Device
)
;
}
