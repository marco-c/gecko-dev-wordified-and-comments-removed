mod
dedicated
;
mod
dynamic
;
mod
linear
;
use
crate
:
:
block
:
:
Block
;
pub
use
self
:
:
{
dedicated
:
:
{
DedicatedAllocator
DedicatedBlock
}
dynamic
:
:
{
DynamicAllocator
DynamicBlock
DynamicConfig
}
linear
:
:
{
LinearAllocator
LinearBlock
LinearConfig
}
}
;
#
[
derive
(
Clone
Copy
Debug
PartialEq
Eq
PartialOrd
Ord
)
]
pub
enum
Kind
{
Dedicated
Dynamic
Linear
}
pub
trait
Allocator
<
B
:
gfx_hal
:
:
Backend
>
{
type
Block
:
Block
<
B
>
;
fn
kind
(
)
-
>
Kind
;
fn
alloc
(
&
mut
self
device
:
&
B
:
:
Device
size
:
u64
align
:
u64
)
-
>
Result
<
(
Self
:
:
Block
u64
)
gfx_hal
:
:
device
:
:
AllocationError
>
;
fn
free
(
&
mut
self
device
:
&
B
:
:
Device
block
:
Self
:
:
Block
)
-
>
u64
;
}
