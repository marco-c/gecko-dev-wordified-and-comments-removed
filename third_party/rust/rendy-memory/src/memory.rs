#
[
derive
(
Debug
)
]
pub
struct
Memory
<
B
:
gfx_hal
:
:
Backend
>
{
raw
:
B
:
:
Memory
size
:
u64
properties
:
gfx_hal
:
:
memory
:
:
Properties
relevant
:
relevant
:
:
Relevant
}
impl
<
B
>
Memory
<
B
>
where
B
:
gfx_hal
:
:
Backend
{
pub
fn
properties
(
&
self
)
-
>
gfx_hal
:
:
memory
:
:
Properties
{
self
.
properties
}
pub
fn
size
(
&
self
)
-
>
u64
{
self
.
size
}
pub
fn
raw
(
&
self
)
-
>
&
B
:
:
Memory
{
&
self
.
raw
}
pub
fn
into_raw
(
self
)
-
>
B
:
:
Memory
{
self
.
relevant
.
dispose
(
)
;
self
.
raw
}
pub
unsafe
fn
from_raw
(
raw
:
B
:
:
Memory
size
:
u64
properties
:
gfx_hal
:
:
memory
:
:
Properties
)
-
>
Self
{
Memory
{
properties
raw
size
relevant
:
relevant
:
:
Relevant
}
}
pub
fn
host_visible
(
&
self
)
-
>
bool
{
self
.
properties
.
contains
(
gfx_hal
:
:
memory
:
:
Properties
:
:
CPU_VISIBLE
)
}
pub
fn
host_coherent
(
&
self
)
-
>
bool
{
self
.
properties
.
contains
(
gfx_hal
:
:
memory
:
:
Properties
:
:
COHERENT
)
}
}
