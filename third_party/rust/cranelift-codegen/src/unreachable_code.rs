use
crate
:
:
cursor
:
:
{
Cursor
FuncCursor
}
;
use
crate
:
:
dominator_tree
:
:
DominatorTree
;
use
crate
:
:
flowgraph
:
:
ControlFlowGraph
;
use
crate
:
:
ir
;
use
crate
:
:
timing
;
use
log
:
:
debug
;
pub
fn
eliminate_unreachable_code
(
func
:
&
mut
ir
:
:
Function
cfg
:
&
mut
ControlFlowGraph
domtree
:
&
DominatorTree
)
{
let
_tt
=
timing
:
:
unreachable_code
(
)
;
let
mut
pos
=
FuncCursor
:
:
new
(
func
)
;
while
let
Some
(
block
)
=
pos
.
next_block
(
)
{
if
domtree
.
is_reachable
(
block
)
{
continue
;
}
debug
!
(
"
Eliminating
unreachable
{
}
"
block
)
;
pos
.
prev_block
(
)
;
while
let
Some
(
inst
)
=
pos
.
func
.
layout
.
first_inst
(
block
)
{
debug
!
(
"
-
{
}
"
pos
.
func
.
dfg
.
display_inst
(
inst
None
)
)
;
pos
.
func
.
layout
.
remove_inst
(
inst
)
;
}
cfg
.
recompute_block
(
pos
.
func
block
)
;
pos
.
func
.
layout
.
remove_block
(
block
)
;
}
}
