use
core
:
:
fmt
;
pub
(
crate
)
struct
DeferredDisplay
<
F
>
(
F
)
;
impl
<
F
:
Fn
(
)
-
>
T
T
:
fmt
:
:
Display
>
DeferredDisplay
<
F
>
{
pub
(
crate
)
fn
new
(
f
:
F
)
-
>
Self
{
Self
(
f
)
}
}
impl
<
F
:
Fn
(
)
-
>
T
T
:
fmt
:
:
Display
>
fmt
:
:
Display
for
DeferredDisplay
<
F
>
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
<
'
_
>
)
-
>
fmt
:
:
Result
{
self
.
0
(
)
.
fmt
(
f
)
}
}
impl
<
F
:
Fn
(
)
-
>
T
T
:
fmt
:
:
Debug
>
fmt
:
:
Debug
for
DeferredDisplay
<
F
>
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
<
'
_
>
)
-
>
fmt
:
:
Result
{
self
.
0
(
)
.
fmt
(
f
)
}
}
