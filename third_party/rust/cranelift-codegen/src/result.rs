use
crate
:
:
verifier
:
:
VerifierErrors
;
use
failure_derive
:
:
Fail
;
#
[
derive
(
Fail
Debug
PartialEq
Eq
)
]
pub
enum
CodegenError
{
#
[
fail
(
display
=
"
Verifier
errors
:
\
n
{
}
"
_0
)
]
Verifier
(
#
[
cause
]
VerifierErrors
)
#
[
fail
(
display
=
"
Implementation
limit
exceeded
"
)
]
ImplLimitExceeded
#
[
fail
(
display
=
"
Code
for
function
is
too
large
"
)
]
CodeTooLarge
}
pub
type
CodegenResult
<
T
>
=
Result
<
T
CodegenError
>
;
impl
From
<
VerifierErrors
>
for
CodegenError
{
fn
from
(
e
:
VerifierErrors
)
-
>
Self
{
CodegenError
:
:
Verifier
(
e
)
}
}
