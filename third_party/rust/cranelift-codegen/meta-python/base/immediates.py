"
"
"
The
cranelift
.
immediates
module
predefines
all
the
Cranelift
immediate
operand
types
.
"
"
"
from
__future__
import
absolute_import
from
cdsl
.
operands
import
ImmediateKind
imm64
=
ImmediateKind
(
'
imm64
'
'
A
64
-
bit
immediate
integer
.
'
)
uimm8
=
ImmediateKind
(
'
uimm8
'
'
An
8
-
bit
immediate
unsigned
integer
.
'
)
uimm32
=
ImmediateKind
(
'
uimm32
'
'
A
32
-
bit
immediate
unsigned
integer
.
'
)
offset32
=
ImmediateKind
(
        
'
offset32
'
        
'
A
32
-
bit
immediate
signed
offset
.
'
        
default_member
=
'
offset
'
)
ieee32
=
ImmediateKind
(
'
ieee32
'
'
A
32
-
bit
immediate
floating
point
number
.
'
)
ieee64
=
ImmediateKind
(
'
ieee64
'
'
A
64
-
bit
immediate
floating
point
number
.
'
)
boolean
=
ImmediateKind
(
'
bool
'
'
An
immediate
boolean
.
'
                        
rust_type
=
'
bool
'
)
intcc
=
ImmediateKind
(
        
'
intcc
'
        
'
An
integer
comparison
condition
code
.
'
        
default_member
=
'
cond
'
        
rust_type
=
'
ir
:
:
condcodes
:
:
IntCC
'
        
values
=
{
            
'
eq
'
:
'
Equal
'
            
'
ne
'
:
'
NotEqual
'
            
'
sge
'
:
'
SignedGreaterThanOrEqual
'
            
'
sgt
'
:
'
SignedGreaterThan
'
            
'
sle
'
:
'
SignedLessThanOrEqual
'
            
'
slt
'
:
'
SignedLessThan
'
            
'
uge
'
:
'
UnsignedGreaterThanOrEqual
'
            
'
ugt
'
:
'
UnsignedGreaterThan
'
            
'
ule
'
:
'
UnsignedLessThanOrEqual
'
            
'
ult
'
:
'
UnsignedLessThan
'
        
}
)
floatcc
=
ImmediateKind
(
        
'
floatcc
'
        
'
A
floating
point
comparison
condition
code
.
'
        
default_member
=
'
cond
'
        
rust_type
=
'
ir
:
:
condcodes
:
:
FloatCC
'
        
values
=
{
            
'
ord
'
:
'
Ordered
'
            
'
uno
'
:
'
Unordered
'
            
'
eq
'
:
'
Equal
'
            
'
ne
'
:
'
NotEqual
'
            
'
one
'
:
'
OrderedNotEqual
'
            
'
ueq
'
:
'
UnorderedOrEqual
'
            
'
lt
'
:
'
LessThan
'
            
'
le
'
:
'
LessThanOrEqual
'
            
'
gt
'
:
'
GreaterThan
'
            
'
ge
'
:
'
GreaterThanOrEqual
'
            
'
ult
'
:
'
UnorderedOrLessThan
'
            
'
ule
'
:
'
UnorderedOrLessThanOrEqual
'
            
'
ugt
'
:
'
UnorderedOrGreaterThan
'
            
'
uge
'
:
'
UnorderedOrGreaterThanOrEqual
'
        
}
)
memflags
=
ImmediateKind
(
        
'
memflags
'
        
'
Memory
operation
flags
'
        
default_member
=
'
flags
'
rust_type
=
'
ir
:
:
MemFlags
'
)
regunit
=
ImmediateKind
(
        
'
regunit
'
        
'
A
register
unit
in
the
target
ISA
'
        
rust_type
=
'
isa
:
:
RegUnit
'
)
trapcode
=
ImmediateKind
(
        
'
trapcode
'
        
'
A
trap
reason
code
.
'
        
default_member
=
'
code
'
        
rust_type
=
'
ir
:
:
TrapCode
'
        
values
=
{
            
"
stk_ovf
"
:
'
StackOverflow
'
            
"
heap_oob
"
:
'
HeapOutOfBounds
'
            
"
int_ovf
"
:
'
IntegerOverflow
'
            
"
int_divz
"
:
'
IntegerDivisionByZero
'
        
}
)
