#
!
[
cfg_attr
(
not
(
test
)
no_std
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
try_reserve
)
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
specialization
)
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
allocator_api
)
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
dropck_eyepatch
)
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
ptr_internals
)
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
core_intrinsics
)
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
maybe_uninit_ref
)
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
maybe_uninit_slice
)
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
maybe_uninit_extra
)
)
]
#
!
[
cfg_attr
(
feature
=
"
unstable
"
feature
(
internal_uninit_const
)
)
]
extern
crate
alloc
;
#
[
cfg
(
feature
=
"
std_io
"
)
]
extern
crate
std
;
pub
mod
boxed
;
pub
use
boxed
:
:
*
;
#
[
macro_use
]
pub
mod
vec
;
pub
use
vec
:
:
*
;
pub
mod
rc
;
pub
use
rc
:
:
*
;
pub
mod
arc
;
pub
use
arc
:
:
*
;
#
[
cfg
(
feature
=
"
unstable
"
)
]
pub
mod
btree
;
#
[
cfg
(
not
(
feature
=
"
unstable
"
)
)
]
pub
mod
hashmap
;
#
[
cfg
(
not
(
feature
=
"
unstable
"
)
)
]
pub
use
hashmap
:
:
*
;
#
[
macro_use
]
pub
mod
format
;
pub
mod
try_clone
;
#
[
cfg
(
feature
=
"
unstable
"
)
]
pub
use
alloc
:
:
collections
:
:
TryReserveError
;
#
[
cfg
(
not
(
feature
=
"
unstable
"
)
)
]
pub
use
hashbrown
:
:
CollectionAllocErr
as
TryReserveError
;
#
[
cfg
(
feature
=
"
std_io
"
)
]
pub
use
vec
:
:
std_io
:
:
*
;
pub
trait
TryClone
{
fn
try_clone
(
&
self
)
-
>
Result
<
Self
TryReserveError
>
where
Self
:
core
:
:
marker
:
:
Sized
;
}
