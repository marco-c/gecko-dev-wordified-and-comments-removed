extern
crate
argon2rs
;
use
argon2rs
:
:
verifier
:
:
Encoded
;
use
argon2rs
:
:
defaults
:
:
{
KIB
LANES
PASSES
}
;
use
argon2rs
:
:
{
Argon2
Variant
}
;
pub
fn
main
(
)
{
let
a2
=
Argon2
:
:
new
(
PASSES
LANES
KIB
Variant
:
:
Argon2i
)
.
unwrap
(
)
;
let
enc0
=
Encoded
:
:
new
(
a2
b
"
password
goes
here
"
b
"
sodium
chloride
"
b
"
"
b
"
"
)
;
let
bytes0
=
enc0
.
to_u8
(
)
;
println
!
(
"
storable
encoding
0
:
{
}
"
String
:
:
from_utf8
(
bytes0
.
clone
(
)
)
.
unwrap
(
)
)
;
let
bytes1
=
Encoded
:
:
default2i
(
b
"
another
password
"
b
"
salt
required
"
b
"
key
"
b
"
"
)
.
to_u8
(
)
;
println
!
(
"
storable
encoding
1
:
{
}
"
String
:
:
from_utf8
(
bytes1
.
clone
(
)
)
.
unwrap
(
)
)
;
let
enc0
=
Encoded
:
:
from_u8
(
&
bytes0
[
.
.
]
)
.
unwrap
(
)
;
assert
!
(
enc0
.
verify
(
b
"
password
goes
here
"
)
)
;
let
enc1
=
Encoded
:
:
from_u8
(
&
bytes1
[
.
.
]
)
.
unwrap
(
)
;
assert
!
(
enc1
.
verify
(
b
"
another
password
"
)
)
;
}
