use
crate
:
:
connection
:
:
Connection
;
use
crate
:
:
frame
:
:
Frame
;
use
crate
:
:
packet
:
:
{
PacketNumber
PacketType
}
;
use
crate
:
:
path
:
:
PathRef
;
use
neqo_common
:
:
{
qdebug
Decoder
}
;
#
[
allow
(
clippy
:
:
module_name_repetitions
)
]
pub
fn
dump_packet
(
conn
:
&
Connection
path
:
&
PathRef
dir
:
&
str
pt
:
PacketType
pn
:
PacketNumber
payload
:
&
[
u8
]
)
{
if
:
:
log
:
:
Level
:
:
Debug
>
:
:
log
:
:
max_level
(
)
{
return
;
}
let
mut
s
=
String
:
:
from
(
"
"
)
;
let
mut
d
=
Decoder
:
:
from
(
payload
)
;
while
d
.
remaining
(
)
>
0
{
let
f
=
match
Frame
:
:
decode
(
&
mut
d
)
{
Ok
(
f
)
=
>
f
Err
(
_
)
=
>
{
s
.
push_str
(
"
[
broken
]
.
.
.
"
)
;
break
;
}
}
;
if
let
Some
(
x
)
=
f
.
dump
(
)
{
s
.
push_str
(
&
format
!
(
"
\
n
{
}
{
}
"
dir
&
x
)
)
;
}
}
qdebug
!
(
[
conn
]
"
pn
=
{
}
type
=
{
:
?
}
{
}
{
}
"
pn
pt
path
.
borrow
(
)
s
)
;
}
