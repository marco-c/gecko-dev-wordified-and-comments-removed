use
std
:
:
{
hint
:
:
black_box
time
:
:
{
Duration
Instant
}
}
;
use
criterion
:
:
{
criterion_group
criterion_main
Criterion
}
;
use
neqo_transport
:
:
{
packet
:
:
{
PacketNumber
PacketType
}
recovery
:
:
sent
:
:
{
SentPacket
SentPackets
}
}
;
fn
sent_packets
(
)
-
>
SentPackets
{
let
mut
pkts
=
SentPackets
:
:
default
(
)
;
let
now
=
Instant
:
:
now
(
)
;
for
i
in
0
.
.
2_000u64
{
pkts
.
track
(
SentPacket
:
:
new
(
PacketType
:
:
Short
PacketNumber
:
:
from
(
i
)
now
true
Vec
:
:
new
(
)
100
)
)
;
}
pkts
}
fn
take_ranges
(
c
:
&
mut
Criterion
)
{
c
.
bench_function
(
"
SentPackets
:
:
take_ranges
"
|
b
|
{
b
.
iter_batched_ref
(
sent_packets
|
pkts
|
black_box
(
pkts
.
take_ranges
(
[
70
.
.
=
89
40
.
.
=
59
10
.
.
=
29
]
)
)
criterion
:
:
BatchSize
:
:
SmallInput
)
;
}
)
;
}
criterion_group
!
{
name
=
benches
;
config
=
Criterion
:
:
default
(
)
.
warm_up_time
(
Duration
:
:
from_secs
(
5
)
)
.
measurement_time
(
Duration
:
:
from_secs
(
60
)
)
;
targets
=
take_ranges
}
criterion_main
!
(
benches
)
;
