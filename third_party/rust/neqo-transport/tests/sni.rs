use
neqo_transport
:
:
ConnectionParameters
;
use
test_fixture
:
:
{
default_client
default_server
new_client
now
}
;
#
[
test
]
fn
sni_no_slicing_at_nonzero_offset
(
)
{
let
mut
client
=
default_client
(
)
;
let
mut
server
=
default_server
(
)
;
let
mut
now
=
now
(
)
;
let
ch1
=
client
.
process_output
(
now
)
.
dgram
(
)
;
assert_eq
!
(
client
.
stats
(
)
.
frame_tx
.
crypto
2
)
;
let
_ch2
=
client
.
process_output
(
now
)
.
dgram
(
)
;
assert_eq
!
(
client
.
stats
(
)
.
frame_tx
.
crypto
3
)
;
let
ack
=
server
.
process
(
ch1
now
)
.
dgram
(
)
;
now
+
=
client
.
process
(
ack
now
)
.
callback
(
)
;
_
=
client
.
process_output
(
now
)
.
dgram
(
)
;
assert_eq
!
(
client
.
stats
(
)
.
frame_tx
.
crypto
4
)
;
}
#
[
test
]
fn
sni_no_slicing_at_nonzero_offset_no_mlkem
(
)
{
let
mut
client
=
new_client
(
ConnectionParameters
:
:
default
(
)
.
mlkem
(
false
)
)
;
let
mut
now
=
now
(
)
;
_
=
client
.
process_output
(
now
)
.
dgram
(
)
;
assert_eq
!
(
client
.
stats
(
)
.
frame_tx
.
crypto
2
)
;
now
+
=
client
.
process_output
(
now
)
.
callback
(
)
;
_
=
client
.
process_output
(
now
)
.
dgram
(
)
;
assert_eq
!
(
client
.
stats
(
)
.
frame_tx
.
crypto
4
)
;
}
