use
core
:
:
pin
:
:
Pin
;
use
futures_core
:
:
stream
:
:
{
Stream
FusedStream
}
;
use
futures_core
:
:
task
:
:
{
Context
Poll
}
;
#
[
derive
(
Debug
)
]
#
[
must_use
=
"
streams
do
nothing
unless
polled
"
]
pub
struct
Repeat
<
T
>
{
item
:
T
}
pub
fn
repeat
<
T
>
(
item
:
T
)
-
>
Repeat
<
T
>
where
T
:
Clone
{
Repeat
{
item
}
}
impl
<
T
>
Unpin
for
Repeat
<
T
>
{
}
impl
<
T
>
Stream
for
Repeat
<
T
>
where
T
:
Clone
{
type
Item
=
T
;
fn
poll_next
(
self
:
Pin
<
&
mut
Self
>
_
:
&
mut
Context
<
'
_
>
)
-
>
Poll
<
Option
<
Self
:
:
Item
>
>
{
Poll
:
:
Ready
(
Some
(
self
.
item
.
clone
(
)
)
)
}
fn
size_hint
(
&
self
)
-
>
(
usize
Option
<
usize
>
)
{
(
usize
:
:
max_value
(
)
None
)
}
}
impl
<
T
>
FusedStream
for
Repeat
<
T
>
where
T
:
Clone
{
fn
is_terminated
(
&
self
)
-
>
bool
{
false
}
}
