use
crate
:
:
Stream
;
use
core
:
:
marker
:
:
PhantomData
;
use
core
:
:
pin
:
:
Pin
;
use
core
:
:
task
:
:
{
Context
Poll
}
;
#
[
derive
(
Debug
)
]
#
[
must_use
=
"
streams
do
nothing
unless
polled
"
]
pub
struct
Empty
<
T
>
(
PhantomData
<
T
>
)
;
impl
<
T
>
Unpin
for
Empty
<
T
>
{
}
unsafe
impl
<
T
>
Send
for
Empty
<
T
>
{
}
unsafe
impl
<
T
>
Sync
for
Empty
<
T
>
{
}
pub
const
fn
empty
<
T
>
(
)
-
>
Empty
<
T
>
{
Empty
(
PhantomData
)
}
impl
<
T
>
Stream
for
Empty
<
T
>
{
type
Item
=
T
;
fn
poll_next
(
self
:
Pin
<
&
mut
Self
>
_
:
&
mut
Context
<
'
_
>
)
-
>
Poll
<
Option
<
T
>
>
{
Poll
:
:
Ready
(
None
)
}
fn
size_hint
(
&
self
)
-
>
(
usize
Option
<
usize
>
)
{
(
0
Some
(
0
)
)
}
}
