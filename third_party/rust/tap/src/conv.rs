use
core
:
:
convert
:
:
TryInto
;
pub
trait
Conv
where
Self
:
Sized
{
#
[
inline
(
always
)
]
fn
conv
<
T
>
(
self
)
-
>
T
where
Self
:
Into
<
T
>
T
:
Sized
{
Into
:
:
<
T
>
:
:
into
(
self
)
}
}
impl
<
T
>
Conv
for
T
{
}
pub
trait
TryConv
where
Self
:
Sized
{
#
[
inline
(
always
)
]
fn
try_conv
<
T
>
(
self
)
-
>
Result
<
T
Self
:
:
Error
>
where
Self
:
TryInto
<
T
>
T
:
Sized
{
TryInto
:
:
<
T
>
:
:
try_into
(
self
)
}
}
impl
<
T
>
TryConv
for
T
{
}
