use
crate
:
:
ast
:
:
{
self
kw
}
;
use
crate
:
:
parser
:
:
{
Parse
Parser
Result
}
;
#
[
derive
(
Debug
)
]
pub
struct
Alias
<
'
a
>
{
pub
span
:
ast
:
:
Span
pub
id
:
Option
<
ast
:
:
Id
<
'
a
>
>
pub
name
:
Option
<
ast
:
:
NameAnnotation
<
'
a
>
>
pub
instance
:
Option
<
ast
:
:
Index
<
'
a
>
>
pub
kind
:
ast
:
:
ExportKind
<
'
a
>
}
impl
<
'
a
>
Parse
<
'
a
>
for
Alias
<
'
a
>
{
fn
parse
(
parser
:
Parser
<
'
a
>
)
-
>
Result
<
Self
>
{
let
span
=
parser
.
parse
:
:
<
kw
:
:
alias
>
(
)
?
.
0
;
let
id
=
parser
.
parse
(
)
?
;
let
name
=
parser
.
parse
(
)
?
;
let
instance
=
if
parser
.
parse
:
:
<
Option
<
kw
:
:
parent
>
>
(
)
?
.
is_some
(
)
{
None
}
else
{
Some
(
parser
.
parens
(
|
p
|
{
p
.
parse
:
:
<
kw
:
:
instance
>
(
)
?
;
p
.
parse
(
)
}
)
?
)
}
;
Ok
(
Alias
{
span
id
name
instance
kind
:
parser
.
parens
(
|
p
|
p
.
parse
(
)
)
?
}
)
}
}
