use
crate
:
:
parser
:
:
{
Parse
Parser
Result
}
;
use
crate
:
:
token
:
:
{
Id
Span
}
;
#
[
derive
(
Debug
)
]
enum
Uninhabited
{
}
#
[
derive
(
Debug
)
]
pub
struct
Component
<
'
a
>
{
pub
span
:
Span
pub
id
:
Option
<
Id
<
'
a
>
>
x
:
Uninhabited
}
impl
Component
<
'
_
>
{
pub
(
crate
)
fn
validate
(
&
self
_parser
:
Parser
<
'
_
>
)
-
>
Result
<
(
)
>
{
match
self
.
x
{
}
}
}
impl
<
'
a
>
Parse
<
'
a
>
for
Component
<
'
a
>
{
fn
parse
(
parser
:
Parser
<
'
a
>
)
-
>
Result
<
Self
>
{
Err
(
parser
.
error
(
"
support
for
parsing
components
disabled
at
compile
time
"
)
)
}
}
