use
std
:
:
io
;
use
crate
:
:
sys
:
:
Selector
;
use
crate
:
:
Token
;
#
[
derive
(
Debug
)
]
pub
(
crate
)
struct
Waker
{
selector
:
Selector
token
:
Token
}
impl
Waker
{
pub
(
crate
)
fn
new
(
selector
:
&
Selector
token
:
Token
)
-
>
io
:
:
Result
<
Waker
>
{
let
selector
=
selector
.
try_clone
(
)
?
;
selector
.
setup_waker
(
token
)
?
;
Ok
(
Waker
{
selector
token
}
)
}
pub
(
crate
)
fn
wake
(
&
self
)
-
>
io
:
:
Result
<
(
)
>
{
self
.
selector
.
wake
(
self
.
token
)
}
}
