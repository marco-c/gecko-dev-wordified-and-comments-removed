use
std
:
:
os
:
:
windows
:
:
io
:
:
RawHandle
;
use
windows_sys
:
:
Win32
:
:
Foundation
:
:
{
CloseHandle
HANDLE
}
;
#
[
derive
(
Debug
)
]
pub
struct
Handle
(
HANDLE
)
;
impl
Handle
{
#
[
inline
]
pub
fn
new
(
handle
:
HANDLE
)
-
>
Self
{
Self
(
handle
)
}
pub
fn
raw
(
&
self
)
-
>
HANDLE
{
self
.
0
}
pub
fn
into_raw
(
self
)
-
>
RawHandle
{
let
ret
=
self
.
0
;
std
:
:
mem
:
:
forget
(
self
)
;
ret
as
RawHandle
}
}
impl
Drop
for
Handle
{
fn
drop
(
&
mut
self
)
{
unsafe
{
CloseHandle
(
self
.
0
)
}
;
}
}
