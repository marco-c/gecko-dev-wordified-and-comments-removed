#
!
[
doc
(
html_root_url
=
"
https
:
/
/
docs
.
rs
/
mio
/
0
.
6
.
19
"
)
]
#
!
[
allow
(
deprecated
)
]
#
!
[
deny
(
missing_docs
missing_debug_implementations
)
]
#
!
[
cfg_attr
(
test
deny
(
warnings
)
)
]
#
!
[
cfg_attr
(
feature
=
"
cargo
-
clippy
"
allow
(
clippy
:
:
trivially_copy_pass_by_ref
)
)
]
extern
crate
net2
;
extern
crate
iovec
;
extern
crate
slab
;
#
[
cfg
(
target_os
=
"
fuchsia
"
)
]
extern
crate
fuchsia_zircon
as
zircon
;
#
[
cfg
(
target_os
=
"
fuchsia
"
)
]
extern
crate
fuchsia_zircon_sys
as
zircon_sys
;
#
[
cfg
(
unix
)
]
extern
crate
libc
;
#
[
cfg
(
windows
)
]
extern
crate
miow
;
#
[
cfg
(
windows
)
]
extern
crate
winapi
;
#
[
cfg
(
windows
)
]
extern
crate
kernel32
;
#
[
macro_use
]
extern
crate
log
;
mod
event_imp
;
mod
io
;
mod
poll
;
mod
sys
;
mod
token
;
mod
lazycell
;
pub
mod
net
;
#
[
deprecated
(
since
=
"
0
.
6
.
5
"
note
=
"
use
mio
-
extras
instead
"
)
]
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
#
[
doc
(
hidden
)
]
pub
mod
channel
;
#
[
deprecated
(
since
=
"
0
.
6
.
5
"
note
=
"
use
mio
-
extras
instead
"
)
]
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
#
[
doc
(
hidden
)
]
pub
mod
timer
;
#
[
deprecated
(
since
=
"
0
.
6
.
5
"
note
=
"
update
to
use
Poll
"
)
]
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
#
[
doc
(
hidden
)
]
pub
mod
deprecated
;
#
[
deprecated
(
since
=
"
0
.
6
.
5
"
note
=
"
use
iovec
crate
directly
"
)
]
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
#
[
doc
(
hidden
)
]
pub
use
iovec
:
:
IoVec
;
#
[
deprecated
(
since
=
"
0
.
6
.
6
"
note
=
"
use
net
module
instead
"
)
]
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
#
[
doc
(
hidden
)
]
pub
mod
tcp
{
pub
use
net
:
:
{
TcpListener
TcpStream
}
;
pub
use
std
:
:
net
:
:
Shutdown
;
}
#
[
deprecated
(
since
=
"
0
.
6
.
6
"
note
=
"
use
net
module
instead
"
)
]
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
#
[
doc
(
hidden
)
]
pub
mod
udp
;
pub
use
poll
:
:
{
Poll
Registration
SetReadiness
}
;
pub
use
event_imp
:
:
{
PollOpt
Ready
}
;
pub
use
token
:
:
Token
;
pub
mod
event
{
pub
use
super
:
:
poll
:
:
{
Events
Iter
}
;
pub
use
super
:
:
event_imp
:
:
{
Event
Evented
}
;
}
pub
use
event
:
:
{
Events
}
;
#
[
deprecated
(
since
=
"
0
.
6
.
5
"
note
=
"
use
events
:
:
instead
"
)
]
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
#
[
doc
(
hidden
)
]
pub
use
event
:
:
{
Event
Evented
}
;
#
[
deprecated
(
since
=
"
0
.
6
.
5
"
note
=
"
use
events
:
:
Iter
instead
"
)
]
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
#
[
doc
(
hidden
)
]
pub
use
poll
:
:
Iter
as
EventsIter
;
#
[
deprecated
(
since
=
"
0
.
6
.
5
"
note
=
"
std
:
:
io
:
:
Error
can
avoid
the
allocation
now
"
)
]
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
#
[
doc
(
hidden
)
]
pub
use
io
:
:
deprecated
:
:
would_block
;
#
[
cfg
(
all
(
unix
not
(
target_os
=
"
fuchsia
"
)
)
)
]
pub
mod
unix
{
pub
use
sys
:
:
{
EventedFd
}
;
pub
use
sys
:
:
unix
:
:
UnixReady
;
}
#
[
cfg
(
target_os
=
"
fuchsia
"
)
]
pub
mod
fuchsia
{
pub
use
sys
:
:
{
EventedHandle
}
;
pub
use
sys
:
:
fuchsia
:
:
{
FuchsiaReady
zx_signals_t
}
;
}
#
[
cfg
(
windows
)
]
pub
mod
windows
{
pub
use
sys
:
:
{
Overlapped
Binding
}
;
}
#
[
cfg
(
feature
=
"
with
-
deprecated
"
)
]
mod
convert
{
use
std
:
:
time
:
:
Duration
;
const
NANOS_PER_MILLI
:
u32
=
1_000_000
;
const
MILLIS_PER_SEC
:
u64
=
1_000
;
pub
fn
millis
(
duration
:
Duration
)
-
>
u64
{
let
millis
=
(
duration
.
subsec_nanos
(
)
+
NANOS_PER_MILLI
-
1
)
/
NANOS_PER_MILLI
;
duration
.
as_secs
(
)
.
saturating_mul
(
MILLIS_PER_SEC
)
.
saturating_add
(
u64
:
:
from
(
millis
)
)
}
}
