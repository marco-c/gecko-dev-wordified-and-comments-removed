use
crate
:
:
{
sys
Registry
Token
}
;
use
std
:
:
io
;
#
[
cfg_attr
(
feature
=
"
os
-
poll
"
doc
=
"
"
)
]
#
[
cfg_attr
(
not
(
feature
=
"
os
-
poll
"
)
doc
=
"
ignore
"
)
]
#
[
derive
(
Debug
)
]
pub
struct
Waker
{
inner
:
sys
:
:
Waker
}
impl
Waker
{
pub
fn
new
(
registry
:
&
Registry
token
:
Token
)
-
>
io
:
:
Result
<
Waker
>
{
#
[
cfg
(
debug_assertions
)
]
registry
.
register_waker
(
)
;
sys
:
:
Waker
:
:
new
(
registry
.
selector
(
)
token
)
.
map
(
|
inner
|
Waker
{
inner
}
)
}
pub
fn
wake
(
&
self
)
-
>
io
:
:
Result
<
(
)
>
{
self
.
inner
.
wake
(
)
}
}
