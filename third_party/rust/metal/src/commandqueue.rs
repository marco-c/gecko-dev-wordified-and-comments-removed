use
super
:
:
*
;
pub
enum
MTLCommandQueue
{
}
foreign_obj_type
!
{
type
CType
=
MTLCommandQueue
;
pub
struct
CommandQueue
;
}
impl
CommandQueueRef
{
pub
fn
label
(
&
self
)
-
>
&
str
{
unsafe
{
let
label
=
msg_send
!
[
self
label
]
;
crate
:
:
nsstring_as_str
(
label
)
}
}
pub
fn
set_label
(
&
self
label
:
&
str
)
{
unsafe
{
let
nslabel
=
crate
:
:
nsstring_from_str
(
label
)
;
let
(
)
=
msg_send
!
[
self
setLabel
:
nslabel
]
;
}
}
pub
fn
new_command_buffer
(
&
self
)
-
>
&
CommandBufferRef
{
unsafe
{
msg_send
!
[
self
commandBuffer
]
}
}
pub
fn
new_command_buffer_with_unretained_references
(
&
self
)
-
>
&
CommandBufferRef
{
unsafe
{
msg_send
!
[
self
commandBufferWithUnretainedReferences
]
}
}
pub
fn
device
(
&
self
)
-
>
&
DeviceRef
{
unsafe
{
msg_send
!
[
self
device
]
}
}
}
