use
std
:
:
os
:
:
raw
:
:
c_void
;
use
crate
:
:
array
:
:
CFArrayRef
;
use
crate
:
:
base
:
:
{
Boolean
CFAllocatorRef
CFIndex
CFOptionFlags
CFTypeID
}
;
use
crate
:
:
error
:
:
CFErrorRef
;
use
crate
:
:
url
:
:
CFURLRef
;
#
[
repr
(
C
)
]
pub
struct
__CFURLEnumerator
(
c_void
)
;
pub
type
CFURLEnumeratorRef
=
*
mut
__CFURLEnumerator
;
pub
type
CFURLEnumeratorOptions
=
CFOptionFlags
;
pub
const
kCFURLEnumeratorDefaultBehavior
:
CFURLEnumeratorOptions
=
0
;
pub
const
kCFURLEnumeratorDescendRecursively
:
CFURLEnumeratorOptions
=
1
<
<
0
;
pub
const
kCFURLEnumeratorSkipInvisibles
:
CFURLEnumeratorOptions
=
1
<
<
1
;
pub
const
kCFURLEnumeratorGenerateFileReferenceURLs
:
CFURLEnumeratorOptions
=
1
<
<
2
;
pub
const
kCFURLEnumeratorSkipPackageContents
:
CFURLEnumeratorOptions
=
1
<
<
3
;
pub
const
kCFURLEnumeratorIncludeDirectoriesPreOrder
:
CFURLEnumeratorOptions
=
1
<
<
4
;
pub
const
kCFURLEnumeratorIncludeDirectoriesPostOrder
:
CFURLEnumeratorOptions
=
1
<
<
5
;
pub
type
CFURLEnumeratorResult
=
CFIndex
;
pub
const
kCFURLEnumeratorSuccess
:
CFURLEnumeratorOptions
=
1
;
pub
const
kCFURLEnumeratorEnd
:
CFURLEnumeratorOptions
=
2
;
pub
const
kCFURLEnumeratorError
:
CFURLEnumeratorOptions
=
3
;
pub
const
kCFURLEnumeratorDirectoryPostOrderSuccess
:
CFURLEnumeratorOptions
=
4
;
extern
"
C
"
{
pub
fn
CFURLEnumeratorGetTypeID
(
)
-
>
CFTypeID
;
pub
fn
CFURLEnumeratorCreateForDirectoryURL
(
alloc
:
CFAllocatorRef
directoryURL
:
CFURLRef
option
:
CFURLEnumeratorOptions
propertyKeys
:
CFArrayRef
)
-
>
CFURLEnumeratorRef
;
pub
fn
CFURLEnumeratorCreateForMountedVolumes
(
alloc
:
CFAllocatorRef
option
:
CFURLEnumeratorOptions
propertyKeys
:
CFArrayRef
)
-
>
CFURLEnumeratorRef
;
pub
fn
CFURLEnumeratorGetNextURL
(
enumerator
:
CFURLEnumeratorRef
url
:
*
mut
CFURLRef
error
:
*
mut
CFErrorRef
)
-
>
CFURLEnumeratorResult
;
pub
fn
CFURLEnumeratorSkipDescendents
(
enumerator
:
CFURLEnumeratorRef
)
;
pub
fn
CFURLEnumeratorGetDescendentLevel
(
enumerator
:
CFURLEnumeratorRef
)
-
>
CFIndex
;
pub
fn
CFURLEnumeratorGetSourceDidChange
(
enumerator
:
CFURLEnumeratorRef
)
-
>
Boolean
;
}
