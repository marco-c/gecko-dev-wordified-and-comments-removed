use
std
:
:
os
:
:
raw
:
:
c_void
;
use
crate
:
:
base
:
:
{
Boolean
CFAllocatorRef
CFIndex
CFRange
CFTypeID
UInt32
UInt8
}
;
#
[
repr
(
C
)
]
pub
struct
__CFBitVector
(
c_void
)
;
pub
type
CFBitVectorRef
=
*
const
__CFBitVector
;
pub
type
CFMutableBitVectorRef
=
*
mut
__CFBitVector
;
pub
type
CFBit
=
UInt32
;
extern
"
C
"
{
pub
fn
CFBitVectorCreate
(
allocator
:
CFAllocatorRef
bytes
:
*
const
UInt8
numBits
:
CFIndex
)
-
>
CFBitVectorRef
;
pub
fn
CFBitVectorCreateCopy
(
allocator
:
CFAllocatorRef
bv
:
CFBitVectorRef
)
-
>
CFBitVectorRef
;
pub
fn
CFBitVectorContainsBit
(
bv
:
CFBitVectorRef
range
:
CFRange
value
:
CFBit
)
-
>
Boolean
;
pub
fn
CFBitVectorGetBitAtIndex
(
bv
:
CFBitVectorRef
idx
:
CFIndex
)
-
>
CFBit
;
pub
fn
CFBitVectorGetBits
(
bv
:
CFBitVectorRef
range
:
CFRange
bytes
:
*
mut
UInt8
)
;
pub
fn
CFBitVectorGetCount
(
bv
:
CFBitVectorRef
)
-
>
CFIndex
;
pub
fn
CFBitVectorGetCountOfBit
(
bv
:
CFBitVectorRef
range
:
CFRange
value
:
CFBit
)
-
>
CFIndex
;
pub
fn
CFBitVectorGetFirstIndexOfBit
(
bv
:
CFBitVectorRef
range
:
CFRange
value
:
CFBit
)
-
>
CFIndex
;
pub
fn
CFBitVectorGetLastIndexOfBit
(
bv
:
CFBitVectorRef
range
:
CFRange
value
:
CFBit
)
-
>
CFIndex
;
pub
fn
CFBitVectorGetTypeID
(
)
-
>
CFTypeID
;
pub
fn
CFBitVectorCreateMutable
(
allocator
:
CFAllocatorRef
capacity
:
CFIndex
)
-
>
CFMutableBitVectorRef
;
pub
fn
CFBitVectorCreateMutableCopy
(
allocator
:
CFAllocatorRef
capacity
:
CFIndex
bv
:
CFBitVectorRef
)
-
>
CFMutableBitVectorRef
;
pub
fn
CFBitVectorFlipBitAtIndex
(
bv
:
CFMutableBitVectorRef
idx
:
CFIndex
)
;
pub
fn
CFBitVectorFlipBits
(
bv
:
CFMutableBitVectorRef
range
:
CFRange
)
;
pub
fn
CFBitVectorSetAllBits
(
bv
:
CFMutableBitVectorRef
value
:
CFBit
)
;
pub
fn
CFBitVectorSetBitAtIndex
(
bv
:
CFMutableBitVectorRef
idx
:
CFIndex
value
:
CFBit
)
;
pub
fn
CFBitVectorSetBits
(
bv
:
CFMutableBitVectorRef
range
:
CFRange
value
:
CFBit
)
;
pub
fn
CFBitVectorSetCount
(
bv
:
CFMutableBitVectorRef
count
:
CFIndex
)
;
}
