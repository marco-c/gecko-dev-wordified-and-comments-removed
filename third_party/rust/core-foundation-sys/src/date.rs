use
std
:
:
os
:
:
raw
:
:
c_void
;
use
crate
:
:
base
:
:
{
CFAllocatorRef
CFComparisonResult
CFTypeID
}
;
#
[
repr
(
C
)
]
pub
struct
__CFDate
(
c_void
)
;
pub
type
CFDateRef
=
*
const
__CFDate
;
pub
type
CFTimeInterval
=
f64
;
pub
type
CFAbsoluteTime
=
CFTimeInterval
;
extern
"
C
"
{
pub
static
kCFAbsoluteTimeIntervalSince1904
:
CFTimeInterval
;
pub
static
kCFAbsoluteTimeIntervalSince1970
:
CFTimeInterval
;
pub
fn
CFAbsoluteTimeGetCurrent
(
)
-
>
CFAbsoluteTime
;
pub
fn
CFDateCreate
(
allocator
:
CFAllocatorRef
at
:
CFAbsoluteTime
)
-
>
CFDateRef
;
pub
fn
CFDateGetAbsoluteTime
(
date
:
CFDateRef
)
-
>
CFAbsoluteTime
;
pub
fn
CFDateGetTimeIntervalSinceDate
(
date
:
CFDateRef
other
:
CFDateRef
)
-
>
CFTimeInterval
;
pub
fn
CFDateCompare
(
date
:
CFDateRef
other
:
CFDateRef
context
:
*
mut
c_void
)
-
>
CFComparisonResult
;
pub
fn
CFDateGetTypeID
(
)
-
>
CFTypeID
;
}
