use
libc
:
:
{
c_char
c_ushort
c_void
}
;
use
base
:
:
{
Boolean
CFOptionFlags
CFIndex
CFAllocatorRef
CFRange
CFTypeID
}
;
pub
type
UniChar
=
c_ushort
;
pub
type
CFStringCompareFlags
=
CFOptionFlags
;
pub
type
CFStringEncoding
=
u32
;
pub
static
kCFStringEncodingUTF8
:
CFStringEncoding
=
0x08000100
;
pub
type
CFStringEncodings
=
CFIndex
;
#
[
repr
(
C
)
]
pub
struct
__CFString
(
c_void
)
;
pub
type
CFStringRef
=
*
const
__CFString
;
extern
{
pub
fn
CFStringCreateWithBytes
(
alloc
:
CFAllocatorRef
bytes
:
*
const
u8
numBytes
:
CFIndex
encoding
:
CFStringEncoding
isExternalRepresentation
:
Boolean
)
-
>
CFStringRef
;
pub
fn
CFStringCreateWithBytesNoCopy
(
alloc
:
CFAllocatorRef
bytes
:
*
const
u8
numBytes
:
CFIndex
encoding
:
CFStringEncoding
isExternalRepresentation
:
Boolean
contentsDeallocator
:
CFAllocatorRef
)
-
>
CFStringRef
;
pub
fn
CFStringCreateWithCString
(
alloc
:
CFAllocatorRef
cStr
:
*
const
c_char
encoding
:
CFStringEncoding
)
-
>
CFStringRef
;
pub
fn
CFStringGetBytes
(
theString
:
CFStringRef
range
:
CFRange
encoding
:
CFStringEncoding
lossByte
:
u8
isExternalRepresentation
:
Boolean
buffer
:
*
mut
u8
maxBufLen
:
CFIndex
usedBufLen
:
*
mut
CFIndex
)
-
>
CFIndex
;
pub
fn
CFStringGetCString
(
theString
:
CFStringRef
buffer
:
*
mut
c_char
bufferSize
:
CFIndex
encoding
:
CFStringEncoding
)
-
>
Boolean
;
pub
fn
CFStringGetCStringPtr
(
theString
:
CFStringRef
encoding
:
CFStringEncoding
)
-
>
*
const
c_char
;
pub
fn
CFStringGetLength
(
theString
:
CFStringRef
)
-
>
CFIndex
;
pub
fn
CFStringGetTypeID
(
)
-
>
CFTypeID
;
}
