use
libc
:
:
c_void
;
use
base
:
:
{
CFOptionFlags
CFIndex
CFAllocatorRef
Boolean
CFTypeID
SInt32
}
;
use
string
:
:
CFStringRef
;
#
[
repr
(
C
)
]
pub
struct
__CFURL
(
c_void
)
;
pub
type
CFURLRef
=
*
const
__CFURL
;
pub
type
CFURLBookmarkCreationOptions
=
CFOptionFlags
;
pub
type
CFURLPathStyle
=
CFIndex
;
pub
const
kCFURLPOSIXPathStyle
:
CFURLPathStyle
=
0
;
pub
const
kCFURLHFSPathStyle
:
CFURLPathStyle
=
1
;
pub
const
kCFURLWindowsPathStyle
:
CFURLPathStyle
=
2
;
extern
{
pub
fn
CFURLCreateWithFileSystemPath
(
allocator
:
CFAllocatorRef
filePath
:
CFStringRef
pathStyle
:
CFURLPathStyle
isDirectory
:
Boolean
)
-
>
CFURLRef
;
pub
fn
CFURLCanBeDecomposed
(
anURL
:
CFURLRef
)
-
>
Boolean
;
pub
fn
CFURLCopyFileSystemPath
(
anURL
:
CFURLRef
pathStyle
:
CFURLPathStyle
)
-
>
CFStringRef
;
pub
fn
CFURLCopyFragment
(
anURL
:
CFURLRef
charactersToLeaveEscaped
:
CFStringRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyHostName
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyLastPathComponent
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyNetLocation
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyParameterString
(
anURL
:
CFURLRef
charactersToLeaveEscaped
:
CFStringRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyPassword
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyPath
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyPathExtension
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyQueryString
(
anURL
:
CFURLRef
charactersToLeaveEscaped
:
CFStringRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyResourceSpecifier
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyScheme
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLCopyStrictPath
(
anURL
:
CFURLRef
isAbsolute
:
*
mut
Boolean
)
-
>
CFStringRef
;
pub
fn
CFURLCopyUserName
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLGetPortNumber
(
anURL
:
CFURLRef
)
-
>
SInt32
;
pub
fn
CFURLHasDirectoryPath
(
anURL
:
CFURLRef
)
-
>
Boolean
;
pub
fn
CFURLGetString
(
anURL
:
CFURLRef
)
-
>
CFStringRef
;
pub
fn
CFURLGetTypeID
(
)
-
>
CFTypeID
;
}
