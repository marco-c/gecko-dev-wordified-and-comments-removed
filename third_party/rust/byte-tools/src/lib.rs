#
!
[
no_std
]
use
core
:
:
ptr
;
#
[
inline
(
always
)
]
pub
fn
copy
(
src
:
&
[
u8
]
dst
:
&
mut
[
u8
]
)
{
assert
!
(
dst
.
len
(
)
>
=
src
.
len
(
)
)
;
unsafe
{
ptr
:
:
copy_nonoverlapping
(
src
.
as_ptr
(
)
dst
.
as_mut_ptr
(
)
src
.
len
(
)
)
;
}
}
#
[
inline
(
always
)
]
pub
fn
zero
(
dst
:
&
mut
[
u8
]
)
{
unsafe
{
ptr
:
:
write_bytes
(
dst
.
as_mut_ptr
(
)
0
dst
.
len
(
)
)
;
}
}
#
[
inline
(
always
)
]
pub
fn
set
(
dst
:
&
mut
[
u8
]
value
:
u8
)
{
unsafe
{
ptr
:
:
write_bytes
(
dst
.
as_mut_ptr
(
)
value
dst
.
len
(
)
)
;
}
}
