use
paste
:
:
paste
;
pub
trait
FfiDefault
{
fn
ffi_default
(
)
-
>
Self
;
}
macro_rules
!
impl_ffi_default_with_default
{
(
(
T
:
ty
)
+
)
=
>
{
impl_ffi_default_with_default
!
(
(
T
)
+
)
;
}
;
(
(
T
:
ty
)
*
)
=
>
{
(
paste
!
{
impl
FfiDefault
for
T
{
fn
ffi_default
(
)
-
>
Self
{
T
:
:
default
(
)
}
}
}
)
*
}
;
}
impl_ffi_default_with_default
!
{
i8
u8
i16
u16
i32
u32
i64
u64
f32
f64
}
impl
FfiDefault
for
(
)
{
fn
ffi_default
(
)
{
}
}
impl
FfiDefault
for
*
const
std
:
:
ffi
:
:
c_void
{
fn
ffi_default
(
)
-
>
Self
{
std
:
:
ptr
:
:
null
(
)
}
}
impl
FfiDefault
for
crate
:
:
RustBuffer
{
fn
ffi_default
(
)
-
>
Self
{
unsafe
{
Self
:
:
from_raw_parts
(
std
:
:
ptr
:
:
null_mut
(
)
0
0
)
}
}
}
