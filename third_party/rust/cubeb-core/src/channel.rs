use
ffi
;
#
[
cfg_attr
(
target_env
=
"
msvc
"
repr
(
i32
)
)
]
#
[
cfg_attr
(
not
(
target_env
=
"
msvc
"
)
repr
(
u32
)
)
]
#
[
derive
(
Clone
Copy
Debug
Eq
PartialEq
)
]
pub
enum
ChannelLayout
{
Undefined
=
ffi
:
:
CUBEB_LAYOUT_UNDEFINED
DualMono
=
ffi
:
:
CUBEB_LAYOUT_DUAL_MONO
DualMonoLfe
=
ffi
:
:
CUBEB_LAYOUT_DUAL_MONO_LFE
Mono
=
ffi
:
:
CUBEB_LAYOUT_MONO
MonoLfe
=
ffi
:
:
CUBEB_LAYOUT_MONO_LFE
Stereo
=
ffi
:
:
CUBEB_LAYOUT_STEREO
StereoLfe
=
ffi
:
:
CUBEB_LAYOUT_STEREO_LFE
Layout3F
=
ffi
:
:
CUBEB_LAYOUT_3F
Layout3FLfe
=
ffi
:
:
CUBEB_LAYOUT_3F_LFE
Layout2F1
=
ffi
:
:
CUBEB_LAYOUT_2F1
Layout2F1Lfe
=
ffi
:
:
CUBEB_LAYOUT_2F1_LFE
Layout3F1
=
ffi
:
:
CUBEB_LAYOUT_3F1
Layout3F1Lfe
=
ffi
:
:
CUBEB_LAYOUT_3F1_LFE
Layout2F2
=
ffi
:
:
CUBEB_LAYOUT_2F2
Layout2F2Lfe
=
ffi
:
:
CUBEB_LAYOUT_2F2_LFE
Layout3F2
=
ffi
:
:
CUBEB_LAYOUT_3F2
Layout3F2Lfe
=
ffi
:
:
CUBEB_LAYOUT_3F2_LFE
Layout3F3RLfe
=
ffi
:
:
CUBEB_LAYOUT_3F3R_LFE
Layout3F4Lfe
=
ffi
:
:
CUBEB_LAYOUT_3F4_LFE
}
impl
From
<
ffi
:
:
cubeb_channel_layout
>
for
ChannelLayout
{
fn
from
(
x
:
ffi
:
:
cubeb_channel_layout
)
-
>
ChannelLayout
{
match
x
{
ffi
:
:
CUBEB_LAYOUT_DUAL_MONO
=
>
ChannelLayout
:
:
DualMono
ffi
:
:
CUBEB_LAYOUT_DUAL_MONO_LFE
=
>
ChannelLayout
:
:
DualMonoLfe
ffi
:
:
CUBEB_LAYOUT_MONO
=
>
ChannelLayout
:
:
Mono
ffi
:
:
CUBEB_LAYOUT_MONO_LFE
=
>
ChannelLayout
:
:
MonoLfe
ffi
:
:
CUBEB_LAYOUT_STEREO
=
>
ChannelLayout
:
:
Stereo
ffi
:
:
CUBEB_LAYOUT_STEREO_LFE
=
>
ChannelLayout
:
:
StereoLfe
ffi
:
:
CUBEB_LAYOUT_3F
=
>
ChannelLayout
:
:
Layout3F
ffi
:
:
CUBEB_LAYOUT_3F_LFE
=
>
ChannelLayout
:
:
Layout3FLfe
ffi
:
:
CUBEB_LAYOUT_2F1
=
>
ChannelLayout
:
:
Layout2F1
ffi
:
:
CUBEB_LAYOUT_2F1_LFE
=
>
ChannelLayout
:
:
Layout2F1Lfe
ffi
:
:
CUBEB_LAYOUT_3F1
=
>
ChannelLayout
:
:
Layout3F1
ffi
:
:
CUBEB_LAYOUT_3F1_LFE
=
>
ChannelLayout
:
:
Layout3F1Lfe
ffi
:
:
CUBEB_LAYOUT_2F2
=
>
ChannelLayout
:
:
Layout2F2
ffi
:
:
CUBEB_LAYOUT_2F2_LFE
=
>
ChannelLayout
:
:
Layout2F2Lfe
ffi
:
:
CUBEB_LAYOUT_3F2
=
>
ChannelLayout
:
:
Layout3F2
ffi
:
:
CUBEB_LAYOUT_3F2_LFE
=
>
ChannelLayout
:
:
Layout3F2Lfe
ffi
:
:
CUBEB_LAYOUT_3F3R_LFE
=
>
ChannelLayout
:
:
Layout3F3RLfe
ffi
:
:
CUBEB_LAYOUT_3F4_LFE
=
>
ChannelLayout
:
:
Layout3F4Lfe
_
=
>
ChannelLayout
:
:
Undefined
}
}
}
impl
Into
<
ffi
:
:
cubeb_channel_layout
>
for
ChannelLayout
{
fn
into
(
self
)
-
>
ffi
:
:
cubeb_channel_layout
{
self
as
ffi
:
:
cubeb_channel_layout
}
}
