#
[
macro_use
]
extern
crate
zerocopy
;
#
[
path
=
"
.
.
/
util
.
rs
"
]
mod
util
;
use
zerocopy
:
:
KnownLayout
;
use
self
:
:
util
:
:
AU16
;
fn
main
(
)
{
}
struct
NotKnownLayout
;
struct
NotKnownLayoutDst
(
[
u8
]
)
;
#
[
derive
(
KnownLayout
)
]
struct
KL00
(
u8
NotKnownLayoutDst
)
;
#
[
derive
(
KnownLayout
)
]
struct
KL02
(
u8
[
u8
]
)
;
#
[
derive
(
KnownLayout
)
]
#
[
repr
(
C
)
]
struct
KL08
(
u8
NotKnownLayoutDst
)
;
#
[
derive
(
KnownLayout
)
]
#
[
repr
(
C
)
]
struct
KL09
(
NotKnownLayout
NotKnownLayout
)
;
#
[
derive
(
AsBytes
)
]
#
[
repr
(
C
)
]
struct
AsBytes1
<
T
>
(
T
)
;
#
[
derive
(
AsBytes
)
]
#
[
repr
(
C
)
]
struct
AsBytes2
{
foo
:
u8
bar
:
AU16
}
#
[
derive
(
AsBytes
)
]
#
[
repr
(
C
packed
(
2
)
)
]
struct
AsBytes3
{
foo
:
u8
bar
:
u64
}
#
[
derive
(
Unaligned
)
]
#
[
repr
(
C
align
(
2
)
)
]
struct
Unaligned1
;
#
[
derive
(
Unaligned
)
]
#
[
repr
(
transparent
align
(
2
)
)
]
struct
Unaligned2
{
foo
:
u8
}
#
[
derive
(
Unaligned
)
]
#
[
repr
(
packed
align
(
2
)
)
]
struct
Unaligned3
;
#
[
derive
(
Unaligned
)
]
#
[
repr
(
align
(
1
)
align
(
2
)
)
]
struct
Unaligned4
;
#
[
derive
(
Unaligned
)
]
#
[
repr
(
align
(
2
)
align
(
4
)
)
]
struct
Unaligned5
;
