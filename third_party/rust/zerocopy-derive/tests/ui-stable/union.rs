#
[
macro_use
]
extern
crate
zerocopy
;
#
[
path
=
"
.
.
/
util
.
rs
"
]
mod
util
;
use
self
:
:
util
:
:
AU16
;
use
std
:
:
mem
:
:
ManuallyDrop
;
fn
main
(
)
{
}
#
[
derive
(
AsBytes
)
]
#
[
repr
(
C
)
]
union
AsBytes1
<
T
>
{
foo
:
ManuallyDrop
<
T
>
}
#
[
derive
(
AsBytes
)
]
#
[
repr
(
C
)
]
union
AsBytes2
{
foo
:
u8
bar
:
[
u8
;
2
]
}
#
[
derive
(
Unaligned
)
]
#
[
repr
(
C
align
(
2
)
)
]
union
Unaligned1
{
foo
:
i16
bar
:
AU16
}
#
[
derive
(
Unaligned
)
]
#
[
repr
(
packed
align
(
2
)
)
]
union
Unaligned3
{
foo
:
u8
}
#
[
derive
(
Unaligned
)
]
#
[
repr
(
align
(
1
)
align
(
2
)
)
]
struct
Unaligned4
{
foo
:
u8
}
#
[
derive
(
Unaligned
)
]
#
[
repr
(
align
(
2
)
align
(
4
)
)
]
struct
Unaligned5
{
foo
:
u8
}
