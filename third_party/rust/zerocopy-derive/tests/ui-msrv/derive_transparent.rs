extern
crate
zerocopy
;
#
[
path
=
"
.
.
/
util
.
rs
"
]
mod
util
;
use
core
:
:
marker
:
:
PhantomData
;
use
{
static_assertions
:
:
assert_impl_all
zerocopy
:
:
{
AsBytes
FromBytes
FromZeroes
Unaligned
}
}
;
use
self
:
:
util
:
:
NotZerocopy
;
fn
main
(
)
{
}
#
[
derive
(
AsBytes
FromZeroes
FromBytes
Unaligned
)
]
#
[
repr
(
transparent
)
]
struct
TransparentStruct
<
T
>
{
inner
:
T
_phantom
:
PhantomData
<
(
)
>
}
assert_impl_all
!
(
TransparentStruct
<
NotZerocopy
>
:
FromZeroes
)
;
assert_impl_all
!
(
TransparentStruct
<
NotZerocopy
>
:
FromBytes
)
;
assert_impl_all
!
(
TransparentStruct
<
NotZerocopy
>
:
AsBytes
)
;
assert_impl_all
!
(
TransparentStruct
<
NotZerocopy
>
:
Unaligned
)
;
