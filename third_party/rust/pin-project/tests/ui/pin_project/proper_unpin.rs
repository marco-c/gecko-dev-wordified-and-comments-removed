use
pin_project
:
:
pin_project
;
use
std
:
:
marker
:
:
PhantomPinned
;
struct
Inner
<
T
>
{
val
:
T
}
#
[
pin_project
]
struct
Foo
<
T
U
>
{
#
[
pin
]
inner
:
Inner
<
T
>
other
:
U
}
#
[
pin_project
]
struct
TrivialBounds
{
#
[
pin
]
field1
:
PhantomPinned
}
#
[
pin_project
]
struct
Bar
<
'
a
T
U
>
{
#
[
pin
]
inner
:
&
'
a
mut
Inner
<
T
>
other
:
U
}
fn
is_unpin
<
T
:
Unpin
>
(
)
{
}
fn
main
(
)
{
is_unpin
:
:
<
Foo
<
PhantomPinned
(
)
>
>
(
)
;
is_unpin
:
:
<
Foo
<
(
)
PhantomPinned
>
>
(
)
;
is_unpin
:
:
<
Foo
<
PhantomPinned
PhantomPinned
>
>
(
)
;
is_unpin
:
:
<
TrivialBounds
>
(
)
;
is_unpin
:
:
<
Bar
<
'
_
PhantomPinned
PhantomPinned
>
>
(
)
;
}
