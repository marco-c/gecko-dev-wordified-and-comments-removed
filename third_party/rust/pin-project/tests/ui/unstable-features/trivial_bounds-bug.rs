#
!
[
feature
(
trivial_bounds
)
]
mod
phantom_pinned
{
use
std
:
:
marker
:
:
{
PhantomData
PhantomPinned
}
;
struct
A
(
PhantomPinned
)
;
impl
Unpin
for
A
where
PhantomPinned
:
Unpin
{
}
struct
Wrapper
<
T
>
(
T
)
;
impl
<
T
>
Unpin
for
Wrapper
<
T
>
where
T
:
Unpin
{
}
struct
B
(
PhantomPinned
)
;
impl
Unpin
for
B
where
Wrapper
<
PhantomPinned
>
:
Unpin
{
}
struct
WrapperWithLifetime
<
'
a
T
>
(
PhantomData
<
&
'
a
(
)
>
T
)
;
impl
<
T
>
Unpin
for
WrapperWithLifetime
<
'
_
T
>
where
T
:
Unpin
{
}
struct
C
(
PhantomPinned
)
;
impl
<
'
a
>
Unpin
for
C
where
WrapperWithLifetime
<
'
a
PhantomPinned
>
:
Unpin
{
}
}
fn
main
(
)
{
}
