#
!
[
doc
(
html_logo_url
=
"
https
:
/
/
raw
.
githubusercontent
.
com
/
clap
-
rs
/
clap
/
master
/
assets
/
clap
.
png
"
)
]
#
!
[
doc
=
include_str
!
(
"
.
.
/
README
.
md
"
)
]
#
!
[
forbid
(
unsafe_code
)
]
extern
crate
proc_macro
;
use
proc_macro
:
:
TokenStream
;
use
proc_macro_error
:
:
proc_macro_error
;
use
syn
:
:
{
parse_macro_input
DeriveInput
}
;
mod
attrs
;
mod
derives
;
mod
dummies
;
mod
parse
;
mod
utils
;
#
[
proc_macro_derive
(
ArgEnum
attributes
(
clap
)
)
]
#
[
proc_macro_error
]
pub
fn
arg_enum
(
input
:
TokenStream
)
-
>
TokenStream
{
let
input
:
DeriveInput
=
parse_macro_input
!
(
input
)
;
derives
:
:
derive_arg_enum
(
&
input
)
.
into
(
)
}
#
[
proc_macro_derive
(
Parser
attributes
(
clap
structopt
)
)
]
#
[
proc_macro_error
]
pub
fn
parser
(
input
:
TokenStream
)
-
>
TokenStream
{
let
input
:
DeriveInput
=
parse_macro_input
!
(
input
)
;
derives
:
:
derive_parser
(
&
input
)
.
into
(
)
}
#
[
proc_macro_derive
(
Subcommand
attributes
(
clap
)
)
]
#
[
proc_macro_error
]
pub
fn
subcommand
(
input
:
TokenStream
)
-
>
TokenStream
{
let
input
:
DeriveInput
=
parse_macro_input
!
(
input
)
;
derives
:
:
derive_subcommand
(
&
input
)
.
into
(
)
}
#
[
proc_macro_derive
(
Args
attributes
(
clap
)
)
]
#
[
proc_macro_error
]
pub
fn
args
(
input
:
TokenStream
)
-
>
TokenStream
{
let
input
:
DeriveInput
=
parse_macro_input
!
(
input
)
;
derives
:
:
derive_args
(
&
input
)
.
into
(
)
}
