#
ifndef
ICU4XScriptWithExtensionsBorrowed_HPP
#
define
ICU4XScriptWithExtensionsBorrowed_HPP
#
include
<
stdint
.
h
>
#
include
<
stddef
.
h
>
#
include
<
stdbool
.
h
>
#
include
<
algorithm
>
#
include
<
memory
>
#
include
<
variant
>
#
include
<
optional
>
#
include
"
diplomat_runtime
.
hpp
"
#
include
"
ICU4XScriptWithExtensionsBorrowed
.
h
"
class
ICU4XScriptExtensionsSet
;
struct
ICU4XScriptWithExtensionsBorrowedDeleter
{
void
operator
(
)
(
capi
:
:
ICU4XScriptWithExtensionsBorrowed
*
l
)
const
noexcept
{
capi
:
:
ICU4XScriptWithExtensionsBorrowed_destroy
(
l
)
;
}
}
;
class
ICU4XScriptWithExtensionsBorrowed
{
public
:
uint16_t
get_script_val
(
uint32_t
code_point
)
const
;
ICU4XScriptExtensionsSet
get_script_extensions_val
(
uint32_t
code_point
)
const
;
bool
has_script
(
uint32_t
code_point
uint16_t
script
)
const
;
inline
const
capi
:
:
ICU4XScriptWithExtensionsBorrowed
*
AsFFI
(
)
const
{
return
this
-
>
inner
.
get
(
)
;
}
inline
capi
:
:
ICU4XScriptWithExtensionsBorrowed
*
AsFFIMut
(
)
{
return
this
-
>
inner
.
get
(
)
;
}
inline
ICU4XScriptWithExtensionsBorrowed
(
capi
:
:
ICU4XScriptWithExtensionsBorrowed
*
i
)
:
inner
(
i
)
{
}
ICU4XScriptWithExtensionsBorrowed
(
)
=
default
;
ICU4XScriptWithExtensionsBorrowed
(
ICU4XScriptWithExtensionsBorrowed
&
&
)
noexcept
=
default
;
ICU4XScriptWithExtensionsBorrowed
&
operator
=
(
ICU4XScriptWithExtensionsBorrowed
&
&
other
)
noexcept
=
default
;
private
:
std
:
:
unique_ptr
<
capi
:
:
ICU4XScriptWithExtensionsBorrowed
ICU4XScriptWithExtensionsBorrowedDeleter
>
inner
;
}
;
#
include
"
ICU4XScriptExtensionsSet
.
hpp
"
inline
uint16_t
ICU4XScriptWithExtensionsBorrowed
:
:
get_script_val
(
uint32_t
code_point
)
const
{
return
capi
:
:
ICU4XScriptWithExtensionsBorrowed_get_script_val
(
this
-
>
inner
.
get
(
)
code_point
)
;
}
inline
ICU4XScriptExtensionsSet
ICU4XScriptWithExtensionsBorrowed
:
:
get_script_extensions_val
(
uint32_t
code_point
)
const
{
return
ICU4XScriptExtensionsSet
(
capi
:
:
ICU4XScriptWithExtensionsBorrowed_get_script_extensions_val
(
this
-
>
inner
.
get
(
)
code_point
)
)
;
}
inline
bool
ICU4XScriptWithExtensionsBorrowed
:
:
has_script
(
uint32_t
code_point
uint16_t
script
)
const
{
return
capi
:
:
ICU4XScriptWithExtensionsBorrowed_has_script
(
this
-
>
inner
.
get
(
)
code_point
script
)
;
}
#
endif
