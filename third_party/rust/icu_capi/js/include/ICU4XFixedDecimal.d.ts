import
{
u8
i16
i32
u32
i64
u64
f64
}
from
"
.
/
diplomat
-
runtime
"
import
{
FFIError
}
from
"
.
/
diplomat
-
runtime
"
import
{
ICU4XError
}
from
"
.
/
ICU4XError
"
;
import
{
ICU4XFixedDecimalSign
}
from
"
.
/
ICU4XFixedDecimalSign
"
;
import
{
ICU4XFixedDecimalSignDisplay
}
from
"
.
/
ICU4XFixedDecimalSignDisplay
"
;
export
class
ICU4XFixedDecimal
{
static
create_from_i32
(
v
:
i32
)
:
ICU4XFixedDecimal
;
static
create_from_u32
(
v
:
u32
)
:
ICU4XFixedDecimal
;
static
create_from_i64
(
v
:
i64
)
:
ICU4XFixedDecimal
;
static
create_from_u64
(
v
:
u64
)
:
ICU4XFixedDecimal
;
static
create_from_f64_with_integer_precision
(
f
:
f64
)
:
ICU4XFixedDecimal
|
never
;
static
create_from_f64_with_lower_magnitude
(
f
:
f64
magnitude
:
i16
)
:
ICU4XFixedDecimal
|
never
;
static
create_from_f64_with_significant_digits
(
f
:
f64
digits
:
u8
)
:
ICU4XFixedDecimal
|
never
;
static
create_from_f64_with_floating_precision
(
f
:
f64
)
:
ICU4XFixedDecimal
|
never
;
static
create_from_string
(
v
:
string
)
:
ICU4XFixedDecimal
|
never
;
digit_at
(
magnitude
:
i16
)
:
u8
;
magnitude_start
(
)
:
i16
;
magnitude_end
(
)
:
i16
;
nonzero_magnitude_start
(
)
:
i16
;
nonzero_magnitude_end
(
)
:
i16
;
is_zero
(
)
:
boolean
;
multiply_pow10
(
power
:
i16
)
:
void
;
sign
(
)
:
ICU4XFixedDecimalSign
;
set_sign
(
sign
:
ICU4XFixedDecimalSign
)
:
void
;
apply_sign_display
(
sign_display
:
ICU4XFixedDecimalSignDisplay
)
:
void
;
trim_start
(
)
:
void
;
trim_end
(
)
:
void
;
pad_start
(
position
:
i16
)
:
void
;
pad_end
(
position
:
i16
)
:
void
;
set_max_position
(
position
:
i16
)
:
void
;
trunc
(
position
:
i16
)
:
void
;
half_trunc
(
position
:
i16
)
:
void
;
expand
(
position
:
i16
)
:
void
;
half_expand
(
position
:
i16
)
:
void
;
ceil
(
position
:
i16
)
:
void
;
half_ceil
(
position
:
i16
)
:
void
;
floor
(
position
:
i16
)
:
void
;
half_floor
(
position
:
i16
)
:
void
;
half_even
(
position
:
i16
)
:
void
;
concatenate_end
(
other
:
ICU4XFixedDecimal
)
:
void
|
never
;
to_string
(
)
:
string
;
}
