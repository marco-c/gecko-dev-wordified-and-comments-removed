#
[
diplomat
:
:
bridge
]
pub
mod
ffi
{
use
alloc
:
:
boxed
:
:
Box
;
use
core
:
:
ops
:
:
RangeInclusive
;
pub
struct
CodePointRangeIteratorResult
{
pub
start
:
u32
pub
end
:
u32
pub
done
:
bool
}
#
[
diplomat
:
:
opaque
]
pub
struct
CodePointRangeIterator
<
'
a
>
(
pub
Box
<
dyn
Iterator
<
Item
=
RangeInclusive
<
u32
>
>
+
'
a
>
)
;
impl
<
'
a
>
CodePointRangeIterator
<
'
a
>
{
#
[
allow
(
clippy
:
:
should_implement_trait
)
]
pub
fn
next
(
&
mut
self
)
-
>
CodePointRangeIteratorResult
{
self
.
0
.
next
(
)
.
map
(
|
r
|
CodePointRangeIteratorResult
{
start
:
*
r
.
start
(
)
end
:
*
r
.
end
(
)
done
:
false
}
)
.
unwrap_or
(
CodePointRangeIteratorResult
{
start
:
0
end
:
0
done
:
true
}
)
}
}
}
