#
[
diplomat
:
:
bridge
]
pub
mod
ffi
{
use
alloc
:
:
boxed
:
:
Box
;
use
icu_locid_transform
:
:
{
LocaleCanonicalizer
LocaleExpander
TransformResult
}
;
use
crate
:
:
{
locale
:
:
ffi
:
:
ICU4XLocale
provider
:
:
ffi
:
:
ICU4XDataProvider
}
;
use
crate
:
:
errors
:
:
ffi
:
:
ICU4XError
;
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
TransformResult
Enum
)
]
#
[
diplomat
:
:
enum_convert
(
TransformResult
)
]
pub
enum
ICU4XTransformResult
{
Modified
Unmodified
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
LocaleCanonicalizer
Struct
)
]
#
[
diplomat
:
:
opaque
]
pub
struct
ICU4XLocaleCanonicalizer
(
LocaleCanonicalizer
)
;
impl
ICU4XLocaleCanonicalizer
{
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
LocaleCanonicalizer
:
:
try_new_unstable
FnInStruct
)
]
pub
fn
create
(
provider
:
&
ICU4XDataProvider
)
-
>
Result
<
Box
<
ICU4XLocaleCanonicalizer
>
ICU4XError
>
{
Ok
(
Box
:
:
new
(
ICU4XLocaleCanonicalizer
(
LocaleCanonicalizer
:
:
try_new_unstable
(
&
provider
.
0
)
?
)
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
LocaleCanonicalizer
:
:
try_new_with_expander_unstable
FnInStruct
)
]
pub
fn
create_extended
(
provider
:
&
ICU4XDataProvider
)
-
>
Result
<
Box
<
ICU4XLocaleCanonicalizer
>
ICU4XError
>
{
let
expander
=
LocaleExpander
:
:
try_new_extended_unstable
(
&
provider
.
0
)
?
;
Ok
(
Box
:
:
new
(
ICU4XLocaleCanonicalizer
(
LocaleCanonicalizer
:
:
try_new_with_expander_unstable
(
&
provider
.
0
expander
)
?
)
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
LocaleCanonicalizer
:
:
canonicalize
FnInStruct
)
]
pub
fn
canonicalize
(
&
self
locale
:
&
mut
ICU4XLocale
)
-
>
ICU4XTransformResult
{
self
.
0
.
canonicalize
(
&
mut
locale
.
0
)
.
into
(
)
}
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
LocaleExpander
Struct
)
]
#
[
diplomat
:
:
opaque
]
pub
struct
ICU4XLocaleExpander
(
LocaleExpander
)
;
impl
ICU4XLocaleExpander
{
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
LocaleExpander
:
:
try_new_unstable
FnInStruct
)
]
pub
fn
create
(
provider
:
&
ICU4XDataProvider
)
-
>
Result
<
Box
<
ICU4XLocaleExpander
>
ICU4XError
>
{
Ok
(
Box
:
:
new
(
ICU4XLocaleExpander
(
LocaleExpander
:
:
try_new_unstable
(
&
provider
.
0
)
?
)
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
LocaleExpander
:
:
try_new_extended_unstable
FnInStruct
)
]
pub
fn
create_extended
(
provider
:
&
ICU4XDataProvider
)
-
>
Result
<
Box
<
ICU4XLocaleExpander
>
ICU4XError
>
{
Ok
(
Box
:
:
new
(
ICU4XLocaleExpander
(
LocaleExpander
:
:
try_new_extended_unstable
(
&
provider
.
0
)
?
)
)
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
LocaleExpander
:
:
maximize
FnInStruct
)
]
pub
fn
maximize
(
&
self
locale
:
&
mut
ICU4XLocale
)
-
>
ICU4XTransformResult
{
self
.
0
.
maximize
(
&
mut
locale
.
0
)
.
into
(
)
}
#
[
diplomat
:
:
rust_link
(
icu
:
:
locid_transform
:
:
LocaleExpander
:
:
minimize
FnInStruct
)
]
pub
fn
minimize
(
&
self
locale
:
&
mut
ICU4XLocale
)
-
>
ICU4XTransformResult
{
self
.
0
.
minimize
(
&
mut
locale
.
0
)
.
into
(
)
}
}
}
