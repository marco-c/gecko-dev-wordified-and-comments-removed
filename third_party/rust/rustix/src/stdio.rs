#
!
[
allow
(
unsafe_code
)
]
use
crate
:
:
backend
;
use
crate
:
:
fd
:
:
OwnedFd
;
use
backend
:
:
c
;
use
backend
:
:
fd
:
:
{
BorrowedFd
FromRawFd
RawFd
}
;
#
[
cfg
(
not
(
any
(
windows
target_os
=
"
wasi
"
)
)
)
]
use
{
crate
:
:
io
backend
:
:
fd
:
:
{
AsFd
AsRawFd
}
core
:
:
mem
:
:
ManuallyDrop
}
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
doc
(
alias
=
"
STDIN_FILENO
"
)
]
#
[
inline
]
pub
const
fn
stdin
(
)
-
>
BorrowedFd
<
'
static
>
{
unsafe
{
BorrowedFd
:
:
borrow_raw
(
c
:
:
STDIN_FILENO
as
RawFd
)
}
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
#
[
doc
(
alias
=
"
STDIN_FILENO
"
)
]
#
[
inline
]
pub
const
unsafe
fn
stdin
(
)
-
>
BorrowedFd
<
'
static
>
{
BorrowedFd
:
:
borrow_raw
(
c
:
:
STDIN_FILENO
as
RawFd
)
}
#
[
doc
(
alias
=
"
STDIN_FILENO
"
)
]
#
[
inline
]
pub
unsafe
fn
take_stdin
(
)
-
>
OwnedFd
{
backend
:
:
fd
:
:
OwnedFd
:
:
from_raw_fd
(
c
:
:
STDIN_FILENO
as
RawFd
)
}
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
doc
(
alias
=
"
STDOUT_FILENO
"
)
]
#
[
inline
]
pub
const
fn
stdout
(
)
-
>
BorrowedFd
<
'
static
>
{
unsafe
{
BorrowedFd
:
:
borrow_raw
(
c
:
:
STDOUT_FILENO
as
RawFd
)
}
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
#
[
doc
(
alias
=
"
STDOUT_FILENO
"
)
]
#
[
inline
]
pub
const
unsafe
fn
stdout
(
)
-
>
BorrowedFd
<
'
static
>
{
BorrowedFd
:
:
borrow_raw
(
c
:
:
STDOUT_FILENO
as
RawFd
)
}
#
[
doc
(
alias
=
"
STDOUT_FILENO
"
)
]
#
[
inline
]
pub
unsafe
fn
take_stdout
(
)
-
>
OwnedFd
{
backend
:
:
fd
:
:
OwnedFd
:
:
from_raw_fd
(
c
:
:
STDOUT_FILENO
as
RawFd
)
}
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
doc
(
alias
=
"
STDERR_FILENO
"
)
]
#
[
inline
]
pub
const
fn
stderr
(
)
-
>
BorrowedFd
<
'
static
>
{
unsafe
{
BorrowedFd
:
:
borrow_raw
(
c
:
:
STDERR_FILENO
as
RawFd
)
}
}
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
#
[
doc
(
alias
=
"
STDERR_FILENO
"
)
]
#
[
inline
]
pub
const
unsafe
fn
stderr
(
)
-
>
BorrowedFd
<
'
static
>
{
BorrowedFd
:
:
borrow_raw
(
c
:
:
STDERR_FILENO
as
RawFd
)
}
#
[
doc
(
alias
=
"
STDERR_FILENO
"
)
]
#
[
inline
]
pub
unsafe
fn
take_stderr
(
)
-
>
OwnedFd
{
backend
:
:
fd
:
:
OwnedFd
:
:
from_raw_fd
(
c
:
:
STDERR_FILENO
as
RawFd
)
}
#
[
doc
(
alias
=
"
STDIN_FILENO
"
)
]
#
[
inline
]
pub
const
fn
raw_stdin
(
)
-
>
RawFd
{
c
:
:
STDIN_FILENO
as
RawFd
}
#
[
doc
(
alias
=
"
STDOUT_FILENO
"
)
]
#
[
inline
]
pub
const
fn
raw_stdout
(
)
-
>
RawFd
{
c
:
:
STDOUT_FILENO
as
RawFd
}
#
[
doc
(
alias
=
"
STDERR_FILENO
"
)
]
#
[
inline
]
pub
const
fn
raw_stderr
(
)
-
>
RawFd
{
c
:
:
STDERR_FILENO
as
RawFd
}
#
[
cfg
(
not
(
any
(
windows
target_os
=
"
wasi
"
)
)
)
]
#
[
inline
]
pub
fn
dup2_stdin
<
Fd
:
AsFd
>
(
fd
:
Fd
)
-
>
io
:
:
Result
<
(
)
>
{
let
fd
=
fd
.
as_fd
(
)
;
if
fd
.
as_raw_fd
(
)
!
=
c
:
:
STDIN_FILENO
{
let
mut
target
=
ManuallyDrop
:
:
new
(
unsafe
{
take_stdin
(
)
}
)
;
backend
:
:
io
:
:
syscalls
:
:
dup2
(
fd
&
mut
target
)
?
;
}
Ok
(
(
)
)
}
#
[
cfg
(
not
(
any
(
windows
target_os
=
"
wasi
"
)
)
)
]
#
[
inline
]
pub
fn
dup2_stdout
<
Fd
:
AsFd
>
(
fd
:
Fd
)
-
>
io
:
:
Result
<
(
)
>
{
let
fd
=
fd
.
as_fd
(
)
;
if
fd
.
as_raw_fd
(
)
!
=
c
:
:
STDOUT_FILENO
{
let
mut
target
=
ManuallyDrop
:
:
new
(
unsafe
{
take_stdout
(
)
}
)
;
backend
:
:
io
:
:
syscalls
:
:
dup2
(
fd
&
mut
target
)
?
;
}
Ok
(
(
)
)
}
#
[
cfg
(
not
(
any
(
windows
target_os
=
"
wasi
"
)
)
)
]
#
[
inline
]
pub
fn
dup2_stderr
<
Fd
:
AsFd
>
(
fd
:
Fd
)
-
>
io
:
:
Result
<
(
)
>
{
let
fd
=
fd
.
as_fd
(
)
;
if
fd
.
as_raw_fd
(
)
!
=
c
:
:
STDERR_FILENO
{
let
mut
target
=
ManuallyDrop
:
:
new
(
unsafe
{
take_stderr
(
)
}
)
;
backend
:
:
io
:
:
syscalls
:
:
dup2
(
fd
&
mut
target
)
?
;
}
Ok
(
(
)
)
}
