use
crate
:
:
fs
:
:
CopyfileFlags
;
use
crate
:
:
{
backend
io
}
;
use
backend
:
:
fd
:
:
AsFd
;
use
backend
:
:
fs
:
:
types
:
:
copyfile_state_t
;
#
[
inline
]
pub
unsafe
fn
fcopyfile
<
FromFd
:
AsFd
ToFd
:
AsFd
>
(
from
:
FromFd
to
:
ToFd
state
:
copyfile_state_t
flags
:
CopyfileFlags
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
fs
:
:
syscalls
:
:
fcopyfile
(
from
.
as_fd
(
)
to
.
as_fd
(
)
state
flags
)
}
#
[
inline
]
pub
fn
copyfile_state_alloc
(
)
-
>
io
:
:
Result
<
copyfile_state_t
>
{
backend
:
:
fs
:
:
syscalls
:
:
copyfile_state_alloc
(
)
}
#
[
inline
]
pub
unsafe
fn
copyfile_state_free
(
state
:
copyfile_state_t
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
fs
:
:
syscalls
:
:
copyfile_state_free
(
state
)
}
#
[
inline
]
pub
unsafe
fn
copyfile_state_get_copied
(
state
:
copyfile_state_t
)
-
>
io
:
:
Result
<
u64
>
{
backend
:
:
fs
:
:
syscalls
:
:
copyfile_state_get_copied
(
state
)
}
#
[
inline
]
pub
unsafe
fn
copyfile_state_get
(
state
:
copyfile_state_t
flag
:
u32
dst
:
*
mut
core
:
:
ffi
:
:
c_void
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
fs
:
:
syscalls
:
:
copyfile_state_get
(
state
flag
dst
)
}
