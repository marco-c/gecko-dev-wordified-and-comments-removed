use
crate
:
:
{
backend
io
}
;
use
backend
:
:
fd
:
:
AsFd
;
#
[
doc
(
alias
=
"
F_RDADVISE
"
)
]
#
[
inline
]
pub
fn
fcntl_rdadvise
<
Fd
:
AsFd
>
(
fd
:
Fd
offset
:
u64
len
:
u64
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
fs
:
:
syscalls
:
:
fcntl_rdadvise
(
fd
.
as_fd
(
)
offset
len
)
}
#
[
doc
(
alias
=
"
F_FULLSYNC
"
)
]
#
[
inline
]
pub
fn
fcntl_fullfsync
<
Fd
:
AsFd
>
(
fd
:
Fd
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
fs
:
:
syscalls
:
:
fcntl_fullfsync
(
fd
.
as_fd
(
)
)
}
#
[
doc
(
alias
=
"
F_NOCACHE
"
)
]
#
[
inline
]
pub
fn
fcntl_nocache
<
Fd
:
AsFd
>
(
fd
:
Fd
value
:
bool
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
fs
:
:
syscalls
:
:
fcntl_nocache
(
fd
.
as_fd
(
)
value
)
}
#
[
doc
(
alias
=
"
F_GLOBAL_NOCACHE
"
)
]
#
[
inline
]
pub
fn
fcntl_global_nocache
<
Fd
:
AsFd
>
(
fd
:
Fd
value
:
bool
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
fs
:
:
syscalls
:
:
fcntl_global_nocache
(
fd
.
as_fd
(
)
value
)
}
