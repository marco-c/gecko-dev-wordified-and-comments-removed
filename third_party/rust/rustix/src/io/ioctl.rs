#
!
[
allow
(
unsafe_code
)
]
use
crate
:
:
{
backend
io
ioctl
}
;
use
backend
:
:
c
;
use
backend
:
:
fd
:
:
AsFd
;
#
[
cfg
(
apple
)
]
#
[
inline
]
#
[
doc
(
alias
=
"
FIOCLEX
"
)
]
#
[
doc
(
alias
=
"
FD_CLOEXEC
"
)
]
pub
fn
ioctl_fioclex
<
Fd
:
AsFd
>
(
fd
:
Fd
)
-
>
io
:
:
Result
<
(
)
>
{
unsafe
{
let
ctl
=
ioctl
:
:
NoArg
:
:
<
ioctl
:
:
BadOpcode
<
{
c
:
:
FIOCLEX
}
>
>
:
:
new
(
)
;
ioctl
:
:
ioctl
(
fd
ctl
)
}
}
#
[
inline
]
#
[
doc
(
alias
=
"
FIONBIO
"
)
]
pub
fn
ioctl_fionbio
<
Fd
:
AsFd
>
(
fd
:
Fd
value
:
bool
)
-
>
io
:
:
Result
<
(
)
>
{
unsafe
{
let
ctl
=
ioctl
:
:
Setter
:
:
<
ioctl
:
:
BadOpcode
<
{
c
:
:
FIONBIO
}
>
c
:
:
c_int
>
:
:
new
(
value
.
into
(
)
)
;
ioctl
:
:
ioctl
(
fd
ctl
)
}
}
#
[
cfg
(
not
(
target_os
=
"
espidf
"
)
)
]
#
[
inline
]
#
[
doc
(
alias
=
"
FIONREAD
"
)
]
pub
fn
ioctl_fionread
<
Fd
:
AsFd
>
(
fd
:
Fd
)
-
>
io
:
:
Result
<
u64
>
{
unsafe
{
let
ctl
=
ioctl
:
:
Getter
:
:
<
ioctl
:
:
BadOpcode
<
{
c
:
:
FIONREAD
}
>
c
:
:
c_int
>
:
:
new
(
)
;
ioctl
:
:
ioctl
(
fd
ctl
)
.
map
(
|
n
|
n
as
u64
)
}
}
