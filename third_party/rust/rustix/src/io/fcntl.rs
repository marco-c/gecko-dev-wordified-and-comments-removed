use
crate
:
:
{
backend
io
}
;
use
backend
:
:
fd
:
:
{
AsFd
OwnedFd
RawFd
}
;
pub
use
backend
:
:
io
:
:
types
:
:
FdFlags
;
#
[
inline
]
#
[
doc
(
alias
=
"
F_GETFD
"
)
]
pub
fn
fcntl_getfd
<
Fd
:
AsFd
>
(
fd
:
Fd
)
-
>
io
:
:
Result
<
FdFlags
>
{
backend
:
:
io
:
:
syscalls
:
:
fcntl_getfd
(
fd
.
as_fd
(
)
)
}
#
[
inline
]
#
[
doc
(
alias
=
"
F_SETFD
"
)
]
pub
fn
fcntl_setfd
<
Fd
:
AsFd
>
(
fd
:
Fd
flags
:
FdFlags
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
io
:
:
syscalls
:
:
fcntl_setfd
(
fd
.
as_fd
(
)
flags
)
}
#
[
cfg
(
not
(
any
(
target_os
=
"
espidf
"
target_os
=
"
wasi
"
)
)
)
]
#
[
inline
]
#
[
doc
(
alias
=
"
F_DUPFD_CLOEXEC
"
)
]
pub
fn
fcntl_dupfd_cloexec
<
Fd
:
AsFd
>
(
fd
:
Fd
min
:
RawFd
)
-
>
io
:
:
Result
<
OwnedFd
>
{
backend
:
:
io
:
:
syscalls
:
:
fcntl_dupfd_cloexec
(
fd
.
as_fd
(
)
min
)
}
#
[
cfg
(
target_os
=
"
espidf
"
)
]
#
[
inline
]
#
[
doc
(
alias
=
"
F_DUPFD
"
)
]
pub
fn
fcntl_dupfd
<
Fd
:
AsFd
>
(
fd
:
Fd
min
:
RawFd
)
-
>
io
:
:
Result
<
OwnedFd
>
{
backend
:
:
io
:
:
syscalls
:
:
fcntl_dupfd
(
fd
.
as_fd
(
)
min
)
}
