use
super
:
:
super
:
:
raw
;
#
[
cfg_attr
(
staged_api
stable
(
feature
=
"
rust1
"
since
=
"
1
.
0
.
0
"
)
)
]
pub
type
RawSocket
=
raw
:
:
SOCKET
;
#
[
cfg_attr
(
staged_api
stable
(
feature
=
"
rust1
"
since
=
"
1
.
0
.
0
"
)
)
]
pub
trait
AsRawSocket
{
#
[
cfg_attr
(
staged_api
stable
(
feature
=
"
rust1
"
since
=
"
1
.
0
.
0
"
)
)
]
fn
as_raw_socket
(
&
self
)
-
>
RawSocket
;
}
#
[
cfg_attr
(
staged_api
stable
(
feature
=
"
from_raw_os
"
since
=
"
1
.
1
.
0
"
)
)
]
pub
trait
FromRawSocket
{
#
[
cfg_attr
(
staged_api
stable
(
feature
=
"
from_raw_os
"
since
=
"
1
.
1
.
0
"
)
)
]
unsafe
fn
from_raw_socket
(
sock
:
RawSocket
)
-
>
Self
;
}
#
[
cfg_attr
(
staged_api
stable
(
feature
=
"
into_raw_os
"
since
=
"
1
.
4
.
0
"
)
)
]
pub
trait
IntoRawSocket
{
#
[
cfg_attr
(
staged_api
stable
(
feature
=
"
into_raw_os
"
since
=
"
1
.
4
.
0
"
)
)
]
fn
into_raw_socket
(
self
)
-
>
RawSocket
;
}
