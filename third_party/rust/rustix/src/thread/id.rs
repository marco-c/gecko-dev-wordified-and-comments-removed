use
crate
:
:
{
backend
io
}
;
pub
use
crate
:
:
pid
:
:
{
Pid
RawPid
}
;
pub
use
crate
:
:
ugid
:
:
{
Gid
RawGid
RawUid
Uid
}
;
#
[
inline
]
#
[
must_use
]
pub
fn
gettid
(
)
-
>
Pid
{
backend
:
:
thread
:
:
syscalls
:
:
gettid
(
)
}
#
[
inline
]
pub
fn
set_thread_uid
(
uid
:
Uid
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
thread
:
:
syscalls
:
:
setuid_thread
(
uid
)
}
#
[
inline
]
pub
fn
set_thread_res_uid
(
ruid
:
Uid
euid
:
Uid
suid
:
Uid
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
thread
:
:
syscalls
:
:
setresuid_thread
(
ruid
euid
suid
)
}
#
[
inline
]
pub
fn
set_thread_gid
(
gid
:
Gid
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
thread
:
:
syscalls
:
:
setgid_thread
(
gid
)
}
#
[
inline
]
pub
fn
set_thread_res_gid
(
rgid
:
Gid
egid
:
Gid
sgid
:
Gid
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
thread
:
:
syscalls
:
:
setresgid_thread
(
rgid
egid
sgid
)
}
#
[
cfg
(
linux_kernel
)
]
#
[
inline
]
pub
fn
set_thread_groups
(
groups
:
&
[
Gid
]
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
thread
:
:
syscalls
:
:
setgroups_thread
(
groups
)
}
