use
crate
:
:
process
:
:
Pid
;
use
crate
:
:
{
backend
io
}
;
pub
use
crate
:
:
signal
:
:
Signal
;
#
[
inline
]
#
[
doc
(
alias
=
"
kill
"
)
]
pub
fn
kill_process
(
pid
:
Pid
sig
:
Signal
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
process
:
:
syscalls
:
:
kill_process
(
pid
sig
)
}
#
[
inline
]
#
[
doc
(
alias
=
"
kill
"
)
]
pub
fn
kill_process_group
(
pid
:
Pid
sig
:
Signal
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
process
:
:
syscalls
:
:
kill_process_group
(
pid
sig
)
}
#
[
inline
]
#
[
doc
(
alias
=
"
kill
"
)
]
pub
fn
kill_current_process_group
(
sig
:
Signal
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
process
:
:
syscalls
:
:
kill_current_process_group
(
sig
)
}
#
[
inline
]
#
[
doc
(
alias
=
"
kill
"
)
]
pub
fn
test_kill_process
(
pid
:
Pid
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
process
:
:
syscalls
:
:
test_kill_process
(
pid
)
}
#
[
inline
]
#
[
doc
(
alias
=
"
kill
"
)
]
pub
fn
test_kill_process_group
(
pid
:
Pid
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
process
:
:
syscalls
:
:
test_kill_process_group
(
pid
)
}
#
[
inline
]
#
[
doc
(
alias
=
"
kill
"
)
]
pub
fn
test_kill_current_process_group
(
)
-
>
io
:
:
Result
<
(
)
>
{
backend
:
:
process
:
:
syscalls
:
:
test_kill_current_process_group
(
)
}
