pub
use
num_integer
:
:
{
div_floor
div_mod_floor
div_rem
mod_floor
}
;
#
[
cfg
(
test
)
]
mod
tests
{
use
super
:
:
{
div_mod_floor
mod_floor
}
;
#
[
test
]
fn
test_mod_floor
(
)
{
assert_eq
!
(
mod_floor
(
8
3
)
2
)
;
assert_eq
!
(
mod_floor
(
8
-
3
)
-
1
)
;
assert_eq
!
(
mod_floor
(
-
8
3
)
1
)
;
assert_eq
!
(
mod_floor
(
-
8
-
3
)
-
2
)
;
assert_eq
!
(
mod_floor
(
1
2
)
1
)
;
assert_eq
!
(
mod_floor
(
1
-
2
)
-
1
)
;
assert_eq
!
(
mod_floor
(
-
1
2
)
1
)
;
assert_eq
!
(
mod_floor
(
-
1
-
2
)
-
1
)
;
}
#
[
test
]
fn
test_div_mod_floor
(
)
{
assert_eq
!
(
div_mod_floor
(
8
3
)
(
2
2
)
)
;
assert_eq
!
(
div_mod_floor
(
8
-
3
)
(
-
3
-
1
)
)
;
assert_eq
!
(
div_mod_floor
(
-
8
3
)
(
-
3
1
)
)
;
assert_eq
!
(
div_mod_floor
(
-
8
-
3
)
(
2
-
2
)
)
;
assert_eq
!
(
div_mod_floor
(
1
2
)
(
0
1
)
)
;
assert_eq
!
(
div_mod_floor
(
1
-
2
)
(
-
1
-
1
)
)
;
assert_eq
!
(
div_mod_floor
(
-
1
2
)
(
-
1
1
)
)
;
assert_eq
!
(
div_mod_floor
(
-
1
-
2
)
(
0
-
1
)
)
;
}
}
