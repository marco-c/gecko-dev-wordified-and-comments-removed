use
crate
:
:
{
error
:
:
RTL_GEN_RANDOM_FAILED
Error
}
;
extern
"
system
"
{
#
[
link_name
=
"
SystemFunction036
"
]
fn
RtlGenRandom
(
RandomBuffer
:
*
mut
u8
RandomBufferLength
:
u32
)
-
>
u8
;
}
pub
fn
getrandom_inner
(
dest
:
&
mut
[
u8
]
)
-
>
Result
<
(
)
Error
>
{
for
chunk
in
dest
.
chunks_mut
(
u32
:
:
max_value
(
)
as
usize
)
{
let
ret
=
unsafe
{
RtlGenRandom
(
chunk
.
as_mut_ptr
(
)
chunk
.
len
(
)
as
u32
)
}
;
if
ret
=
=
0
{
return
Err
(
RTL_GEN_RANDOM_FAILED
)
;
}
}
Ok
(
(
)
)
}
