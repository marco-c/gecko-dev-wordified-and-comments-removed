use
crate
:
:
ast_emitter
:
:
AstEmitter
;
use
crate
:
:
emitter
:
:
EmitError
;
pub
struct
ExpressionEmitter
<
F
>
where
F
:
Fn
(
&
mut
AstEmitter
)
-
>
Result
<
(
)
EmitError
>
{
pub
expr
:
F
}
impl
<
F
>
ExpressionEmitter
<
F
>
where
F
:
Fn
(
&
mut
AstEmitter
)
-
>
Result
<
(
)
EmitError
>
{
pub
fn
emit
(
self
emitter
:
&
mut
AstEmitter
)
-
>
Result
<
(
)
EmitError
>
{
(
self
.
expr
)
(
emitter
)
?
;
if
emitter
.
options
.
no_script_rval
{
emitter
.
emit
.
pop
(
)
;
}
else
{
emitter
.
emit
.
set_rval
(
)
;
}
Ok
(
(
)
)
}
}
