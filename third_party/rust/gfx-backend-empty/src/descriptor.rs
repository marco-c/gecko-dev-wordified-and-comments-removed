use
hal
:
:
pso
;
use
log
:
:
debug
;
#
[
derive
(
Debug
)
]
pub
struct
DescriptorPool
;
impl
pso
:
:
DescriptorPool
<
crate
:
:
Backend
>
for
DescriptorPool
{
unsafe
fn
allocate_one
(
&
mut
self
_layout
:
&
DescriptorSetLayout
)
-
>
Result
<
DescriptorSet
pso
:
:
AllocationError
>
{
Ok
(
DescriptorSet
{
name
:
String
:
:
new
(
)
}
)
}
unsafe
fn
free
<
I
>
(
&
mut
self
descriptor_sets
:
I
)
where
I
:
Iterator
<
Item
=
DescriptorSet
>
{
for
_
in
descriptor_sets
{
}
}
unsafe
fn
reset
(
&
mut
self
)
{
debug
!
(
"
Resetting
descriptor
pool
"
)
;
}
}
#
[
derive
(
Debug
)
]
pub
struct
DescriptorSetLayout
{
pub
(
crate
)
name
:
String
}
#
[
derive
(
Debug
)
]
pub
struct
DescriptorSet
{
pub
(
crate
)
name
:
String
}
