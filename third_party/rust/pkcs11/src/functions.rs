#
!
[
allow
(
non_camel_case_types
non_snake_case
)
]
use
types
:
:
*
;
pub
type
C_Initialize
=
extern
"
C
"
fn
(
pInitArgs
:
CK_C_INITIALIZE_ARGS_PTR
)
-
>
CK_RV
;
pub
type
C_Finalize
=
extern
"
C
"
fn
(
pReserved
:
CK_VOID_PTR
)
-
>
CK_RV
;
pub
type
C_GetInfo
=
extern
"
C
"
fn
(
pInfo
:
CK_INFO_PTR
)
-
>
CK_RV
;
pub
type
C_GetFunctionList
=
extern
"
C
"
fn
(
ppFunctionList
:
CK_FUNCTION_LIST_PTR_PTR
)
-
>
CK_RV
;
pub
type
C_GetSlotList
=
extern
"
C
"
fn
(
tokenPresent
:
CK_BBOOL
pSlotList
:
CK_SLOT_ID_PTR
pulCount
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_GetSlotInfo
=
extern
"
C
"
fn
(
slotID
:
CK_SLOT_ID
pInfo
:
CK_SLOT_INFO_PTR
)
-
>
CK_RV
;
pub
type
C_GetTokenInfo
=
extern
"
C
"
fn
(
slotID
:
CK_SLOT_ID
pInfo
:
CK_TOKEN_INFO_PTR
)
-
>
CK_RV
;
pub
type
C_GetMechanismList
=
extern
"
C
"
fn
(
slotID
:
CK_SLOT_ID
pMechanismList
:
CK_MECHANISM_TYPE_PTR
pulCount
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_GetMechanismInfo
=
extern
"
C
"
fn
(
slotID
:
CK_SLOT_ID
mechType
:
CK_MECHANISM_TYPE
pInfo
:
CK_MECHANISM_INFO_PTR
)
-
>
CK_RV
;
pub
type
C_InitToken
=
extern
"
C
"
fn
(
slotID
:
CK_SLOT_ID
pPin
:
CK_UTF8CHAR_PTR
ulPinLen
:
CK_ULONG
pLabel
:
CK_UTF8CHAR_PTR
)
-
>
CK_RV
;
pub
type
C_InitPIN
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pPin
:
CK_UTF8CHAR_PTR
ulPinLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_SetPIN
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pOldPin
:
CK_UTF8CHAR_PTR
ulOldLen
:
CK_ULONG
pNewPin
:
CK_UTF8CHAR_PTR
ulNewLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_OpenSession
=
extern
"
C
"
fn
(
slotID
:
CK_SLOT_ID
flags
:
CK_FLAGS
pApplication
:
CK_VOID_PTR
Notify
:
CK_NOTIFY
phSession
:
CK_SESSION_HANDLE_PTR
)
-
>
CK_RV
;
pub
type
C_CloseSession
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
)
-
>
CK_RV
;
pub
type
C_CloseAllSessions
=
extern
"
C
"
fn
(
slotID
:
CK_SLOT_ID
)
-
>
CK_RV
;
pub
type
C_GetSessionInfo
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pInfo
:
CK_SESSION_INFO_PTR
)
-
>
CK_RV
;
pub
type
C_GetOperationState
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pOperationState
:
CK_BYTE_PTR
pulOperationStateLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_SetOperationState
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pOperationState
:
CK_BYTE_PTR
ulOperationStateLen
:
CK_ULONG
hEncryptionKey
:
CK_OBJECT_HANDLE
hAuthenticationKey
:
CK_OBJECT_HANDLE
)
-
>
CK_RV
;
pub
type
C_Login
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
userType
:
CK_USER_TYPE
pPin
:
CK_UTF8CHAR_PTR
ulPinLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_Logout
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
)
-
>
CK_RV
;
pub
type
C_CreateObject
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pTemplate
:
CK_ATTRIBUTE_PTR
ulCount
:
CK_ULONG
phObject
:
CK_OBJECT_HANDLE_PTR
)
-
>
CK_RV
;
pub
type
C_CopyObject
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
hObject
:
CK_OBJECT_HANDLE
pTemplate
:
CK_ATTRIBUTE_PTR
ulCount
:
CK_ULONG
phNewObject
:
CK_OBJECT_HANDLE_PTR
)
-
>
CK_RV
;
pub
type
C_DestroyObject
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
hObject
:
CK_OBJECT_HANDLE
)
-
>
CK_RV
;
pub
type
C_GetObjectSize
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
hObject
:
CK_OBJECT_HANDLE
pulSize
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_GetAttributeValue
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
hObject
:
CK_OBJECT_HANDLE
pTemplate
:
CK_ATTRIBUTE_PTR
ulCount
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_SetAttributeValue
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
hObject
:
CK_OBJECT_HANDLE
pTemplate
:
CK_ATTRIBUTE_PTR
ulCount
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_FindObjectsInit
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pTemplate
:
CK_ATTRIBUTE_PTR
ulCount
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_FindObjects
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
phObject
:
CK_OBJECT_HANDLE_PTR
ulMaxObjectCount
:
CK_ULONG
pulObjectCount
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_FindObjectsFinal
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
)
-
>
CK_RV
;
pub
type
C_EncryptInit
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
hKey
:
CK_OBJECT_HANDLE
)
-
>
CK_RV
;
pub
type
C_Encrypt
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pData
:
CK_BYTE_PTR
ulDataLen
:
CK_ULONG
pEncryptedData
:
CK_BYTE_PTR
pulEncryptedDataLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_EncryptUpdate
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pPart
:
CK_BYTE_PTR
ulPartLen
:
CK_ULONG
pEncryptedPart
:
CK_BYTE_PTR
pulEncryptedPartLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_EncryptFinal
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pLastEncryptedPart
:
CK_BYTE_PTR
pulLastEncryptedPartLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_DecryptInit
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
hKey
:
CK_OBJECT_HANDLE
)
-
>
CK_RV
;
pub
type
C_Decrypt
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pEncryptedData
:
CK_BYTE_PTR
ulEncryptedDataLen
:
CK_ULONG
pData
:
CK_BYTE_PTR
pulDataLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_DecryptUpdate
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pEncryptedPart
:
CK_BYTE_PTR
ulEncryptedPartLen
:
CK_ULONG
pPart
:
CK_BYTE_PTR
pulPartLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_DecryptFinal
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pLastPart
:
CK_BYTE_PTR
pulLastPartLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_DigestInit
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
)
-
>
CK_RV
;
pub
type
C_Digest
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pData
:
CK_BYTE_PTR
ulDataLen
:
CK_ULONG
pDigest
:
CK_BYTE_PTR
pulDigestLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_DigestUpdate
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pPart
:
CK_BYTE_PTR
ulPartLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_DigestKey
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
hKey
:
CK_OBJECT_HANDLE
)
-
>
CK_RV
;
pub
type
C_DigestFinal
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pDigest
:
CK_BYTE_PTR
pulDigestLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_SignInit
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
hKey
:
CK_OBJECT_HANDLE
)
-
>
CK_RV
;
pub
type
C_Sign
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pData
:
CK_BYTE_PTR
ulDataLen
:
CK_ULONG
pSignature
:
CK_BYTE_PTR
pulSignatureLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_SignUpdate
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pPart
:
CK_BYTE_PTR
ulPartLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_SignFinal
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pSignature
:
CK_BYTE_PTR
pulSignatureLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_SignRecoverInit
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
hKey
:
CK_OBJECT_HANDLE
)
-
>
CK_RV
;
pub
type
C_SignRecover
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pData
:
CK_BYTE_PTR
ulDataLen
:
CK_ULONG
pSignature
:
CK_BYTE_PTR
pulSignatureLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_VerifyInit
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
hKey
:
CK_OBJECT_HANDLE
)
-
>
CK_RV
;
pub
type
C_Verify
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pData
:
CK_BYTE_PTR
ulDataLen
:
CK_ULONG
pSignature
:
CK_BYTE_PTR
ulSignatureLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_VerifyUpdate
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pPart
:
CK_BYTE_PTR
ulPartLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_VerifyFinal
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pSignature
:
CK_BYTE_PTR
ulSignatureLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_VerifyRecoverInit
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
hKey
:
CK_OBJECT_HANDLE
)
-
>
CK_RV
;
pub
type
C_VerifyRecover
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pSignature
:
CK_BYTE_PTR
ulSignatureLen
:
CK_ULONG
pData
:
CK_BYTE_PTR
pulDataLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_DigestEncryptUpdate
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pPart
:
CK_BYTE_PTR
ulPartLen
:
CK_ULONG
pEncryptedPart
:
CK_BYTE_PTR
pulEncryptedPartLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_DecryptDigestUpdate
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pEncryptedPart
:
CK_BYTE_PTR
ulEncryptedPartLen
:
CK_ULONG
pPart
:
CK_BYTE_PTR
pulPartLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_SignEncryptUpdate
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pPart
:
CK_BYTE_PTR
ulPartLen
:
CK_ULONG
pEncryptedPart
:
CK_BYTE_PTR
pulEncryptedPartLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_DecryptVerifyUpdate
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pEncryptedPart
:
CK_BYTE_PTR
ulEncryptedPartLen
:
CK_ULONG
pPart
:
CK_BYTE_PTR
pulPartLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_GenerateKey
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
pTemplate
:
CK_ATTRIBUTE_PTR
ulCount
:
CK_ULONG
phKey
:
CK_OBJECT_HANDLE_PTR
)
-
>
CK_RV
;
pub
type
C_GenerateKeyPair
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
pPublicKeyTemplate
:
CK_ATTRIBUTE_PTR
ulPublicKeyAttributeCount
:
CK_ULONG
pPrivateKeyTemplate
:
CK_ATTRIBUTE_PTR
ulPrivateKeyAttributeCount
:
CK_ULONG
phPublicKey
:
CK_OBJECT_HANDLE_PTR
phPrivateKey
:
CK_OBJECT_HANDLE_PTR
)
-
>
CK_RV
;
pub
type
C_WrapKey
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
hWrappingKey
:
CK_OBJECT_HANDLE
hKey
:
CK_OBJECT_HANDLE
pWrappedKey
:
CK_BYTE_PTR
pulWrappedKeyLen
:
CK_ULONG_PTR
)
-
>
CK_RV
;
pub
type
C_UnwrapKey
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
hUnwrappingKey
:
CK_OBJECT_HANDLE
pWrappedKey
:
CK_BYTE_PTR
ulWrappedKeyLen
:
CK_ULONG
pTemplate
:
CK_ATTRIBUTE_PTR
ulAttributeCount
:
CK_ULONG
phKey
:
CK_OBJECT_HANDLE_PTR
)
-
>
CK_RV
;
pub
type
C_DeriveKey
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pMechanism
:
CK_MECHANISM_PTR
hBaseKey
:
CK_OBJECT_HANDLE
pTemplate
:
CK_ATTRIBUTE_PTR
ulAttributeCount
:
CK_ULONG
phKey
:
CK_OBJECT_HANDLE_PTR
)
-
>
CK_RV
;
pub
type
C_SeedRandom
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
pSeed
:
CK_BYTE_PTR
ulSeedLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_GenerateRandom
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
RandomData
:
CK_BYTE_PTR
ulRandomLen
:
CK_ULONG
)
-
>
CK_RV
;
pub
type
C_GetFunctionStatus
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
)
-
>
CK_RV
;
pub
type
C_CancelFunction
=
extern
"
C
"
fn
(
hSession
:
CK_SESSION_HANDLE
)
-
>
CK_RV
;
pub
type
C_WaitForSlotEvent
=
extern
"
C
"
fn
(
flags
:
CK_FLAGS
pSlot
:
CK_SLOT_ID_PTR
pRserved
:
CK_VOID_PTR
)
-
>
CK_RV
;
