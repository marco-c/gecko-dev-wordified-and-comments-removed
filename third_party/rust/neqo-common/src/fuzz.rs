use
std
:
:
{
collections
:
:
hash_map
:
:
DefaultHasher
fs
:
:
File
hash
:
:
{
Hash
as
_
Hasher
as
_
}
io
:
:
Write
path
:
:
Path
}
;
pub
fn
write_item_to_fuzzing_corpus
(
target
:
&
str
data
:
&
[
u8
]
)
{
let
corpus
=
Path
:
:
new
(
"
.
.
/
fuzz
/
corpus
"
)
.
join
(
target
)
;
if
!
corpus
.
exists
(
)
{
std
:
:
fs
:
:
create_dir_all
(
&
corpus
)
.
expect
(
"
failed
to
create
corpus
directory
"
)
;
}
let
mut
hasher
=
DefaultHasher
:
:
new
(
)
;
data
.
hash
(
&
mut
hasher
)
;
let
item_name
=
hex
:
:
encode
(
hasher
.
finish
(
)
.
to_be_bytes
(
)
)
;
let
item_path
=
corpus
.
join
(
item_name
)
;
if
item_path
.
exists
(
)
{
return
;
}
let
mut
file
=
File
:
:
create
(
item_path
)
.
expect
(
"
failed
to
create
corpus
item
"
)
;
Write
:
:
write_all
(
&
mut
file
data
)
.
expect
(
"
failed
to
write
to
corpus
item
"
)
;
}
