#
!
[
deny
(
warnings
)
]
mod
codec
;
mod
datagram
;
mod
incrdecoder
;
pub
mod
log
;
pub
mod
once
;
pub
mod
timer
;
pub
use
self
:
:
codec
:
:
{
Decoder
Encoder
}
;
pub
use
self
:
:
datagram
:
:
Datagram
;
pub
use
self
:
:
incrdecoder
:
:
{
IncrementalDecoder
IncrementalDecoderResult
}
;
#
[
macro_use
]
extern
crate
lazy_static
;
#
[
macro_export
]
macro_rules
!
matches
{
(
expression
:
expr
(
pattern
:
tt
)
+
)
=
>
{
match
expression
{
(
pattern
)
+
=
>
true
_
=
>
false
}
}
}
pub
fn
hex
(
buf
:
&
[
u8
]
)
-
>
String
{
let
mut
ret
=
String
:
:
with_capacity
(
10
+
buf
.
len
(
)
*
3
)
;
ret
.
push_str
(
&
format
!
(
"
[
{
}
]
:
"
buf
.
len
(
)
)
)
;
for
b
in
buf
{
ret
.
push_str
(
&
format
!
(
"
{
:
02x
}
"
b
)
)
;
}
ret
}
