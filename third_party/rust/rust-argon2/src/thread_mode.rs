#
[
derive
(
Clone
Copy
Debug
Eq
PartialEq
)
]
pub
enum
ThreadMode
{
Sequential
Parallel
}
impl
ThreadMode
{
pub
fn
from_threads
(
threads
:
u32
)
-
>
ThreadMode
{
if
threads
>
1
{
ThreadMode
:
:
Parallel
}
else
{
ThreadMode
:
:
Sequential
}
}
}
impl
Default
for
ThreadMode
{
fn
default
(
)
-
>
ThreadMode
{
ThreadMode
:
:
Sequential
}
}
#
[
cfg
(
test
)
]
mod
tests
{
use
super
:
:
*
;
#
[
test
]
fn
default_returns_correct_thread_mode
(
)
{
assert_eq
!
(
ThreadMode
:
:
default
(
)
ThreadMode
:
:
Sequential
)
;
}
#
[
test
]
fn
from_threads_returns_correct_thread_mode
(
)
{
assert_eq
!
(
ThreadMode
:
:
from_threads
(
0
)
ThreadMode
:
:
Sequential
)
;
assert_eq
!
(
ThreadMode
:
:
from_threads
(
1
)
ThreadMode
:
:
Sequential
)
;
assert_eq
!
(
ThreadMode
:
:
from_threads
(
2
)
ThreadMode
:
:
Parallel
)
;
assert_eq
!
(
ThreadMode
:
:
from_threads
(
10
)
ThreadMode
:
:
Parallel
)
;
assert_eq
!
(
ThreadMode
:
:
from_threads
(
100
)
ThreadMode
:
:
Parallel
)
;
}
}
