use
super
:
:
{
Buf
}
;
use
std
:
:
io
;
pub
trait
IntoBuf
{
type
Buf
:
Buf
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
;
}
impl
<
T
:
Buf
>
IntoBuf
for
T
{
type
Buf
=
Self
;
fn
into_buf
(
self
)
-
>
Self
{
self
}
}
impl
<
'
a
>
IntoBuf
for
&
'
a
[
u8
]
{
type
Buf
=
io
:
:
Cursor
<
&
'
a
[
u8
]
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
io
:
:
Cursor
:
:
new
(
self
)
}
}
impl
<
'
a
>
IntoBuf
for
&
'
a
str
{
type
Buf
=
io
:
:
Cursor
<
&
'
a
[
u8
]
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
self
.
as_bytes
(
)
.
into_buf
(
)
}
}
impl
IntoBuf
for
Vec
<
u8
>
{
type
Buf
=
io
:
:
Cursor
<
Vec
<
u8
>
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
io
:
:
Cursor
:
:
new
(
self
)
}
}
impl
<
'
a
>
IntoBuf
for
&
'
a
Vec
<
u8
>
{
type
Buf
=
io
:
:
Cursor
<
&
'
a
[
u8
]
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
io
:
:
Cursor
:
:
new
(
&
self
[
.
.
]
)
}
}
impl
<
'
a
>
IntoBuf
for
&
'
a
&
'
static
[
u8
]
{
type
Buf
=
io
:
:
Cursor
<
&
'
static
[
u8
]
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
io
:
:
Cursor
:
:
new
(
self
)
}
}
impl
<
'
a
>
IntoBuf
for
&
'
a
&
'
static
str
{
type
Buf
=
io
:
:
Cursor
<
&
'
static
[
u8
]
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
self
.
as_bytes
(
)
.
into_buf
(
)
}
}
impl
IntoBuf
for
String
{
type
Buf
=
io
:
:
Cursor
<
Vec
<
u8
>
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
self
.
into_bytes
(
)
.
into_buf
(
)
}
}
impl
<
'
a
>
IntoBuf
for
&
'
a
String
{
type
Buf
=
io
:
:
Cursor
<
&
'
a
[
u8
]
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
self
.
as_bytes
(
)
.
into_buf
(
)
}
}
impl
IntoBuf
for
u8
{
type
Buf
=
Option
<
[
u8
;
1
]
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
Some
(
[
self
]
)
}
}
impl
IntoBuf
for
i8
{
type
Buf
=
Option
<
[
u8
;
1
]
>
;
fn
into_buf
(
self
)
-
>
Self
:
:
Buf
{
Some
(
[
self
as
u8
;
1
]
)
}
}
