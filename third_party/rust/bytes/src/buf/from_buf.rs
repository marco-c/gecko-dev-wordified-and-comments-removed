use
{
Buf
BufMut
IntoBuf
Bytes
BytesMut
}
;
pub
trait
FromBuf
{
fn
from_buf
<
T
>
(
buf
:
T
)
-
>
Self
where
T
:
IntoBuf
;
}
impl
FromBuf
for
Vec
<
u8
>
{
fn
from_buf
<
T
>
(
buf
:
T
)
-
>
Self
where
T
:
IntoBuf
{
let
buf
=
buf
.
into_buf
(
)
;
let
mut
ret
=
Vec
:
:
with_capacity
(
buf
.
remaining
(
)
)
;
ret
.
put
(
buf
)
;
ret
}
}
impl
FromBuf
for
Bytes
{
fn
from_buf
<
T
>
(
buf
:
T
)
-
>
Self
where
T
:
IntoBuf
{
BytesMut
:
:
from_buf
(
buf
)
.
freeze
(
)
}
}
impl
FromBuf
for
BytesMut
{
fn
from_buf
<
T
>
(
buf
:
T
)
-
>
Self
where
T
:
IntoBuf
{
let
buf
=
buf
.
into_buf
(
)
;
let
mut
ret
=
BytesMut
:
:
with_capacity
(
buf
.
remaining
(
)
)
;
ret
.
put
(
buf
)
;
ret
}
}
