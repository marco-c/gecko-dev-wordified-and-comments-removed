use
tokio_io
:
:
{
AsyncWrite
}
;
use
futures
:
:
Poll
;
use
std
:
:
io
:
:
{
self
Write
Stdout
as
StdStdout
}
;
#
[
derive
(
Debug
)
]
pub
struct
Stdout
{
std
:
StdStdout
}
pub
fn
stdout
(
)
-
>
Stdout
{
let
std
=
io
:
:
stdout
(
)
;
Stdout
{
std
}
}
impl
Write
for
Stdout
{
fn
write
(
&
mut
self
buf
:
&
[
u8
]
)
-
>
io
:
:
Result
<
usize
>
{
:
:
would_block
(
|
|
self
.
std
.
write
(
buf
)
)
}
fn
flush
(
&
mut
self
)
-
>
io
:
:
Result
<
(
)
>
{
:
:
would_block
(
|
|
self
.
std
.
flush
(
)
)
}
}
impl
AsyncWrite
for
Stdout
{
fn
shutdown
(
&
mut
self
)
-
>
Poll
<
(
)
io
:
:
Error
>
{
Ok
(
(
)
.
into
(
)
)
}
}
