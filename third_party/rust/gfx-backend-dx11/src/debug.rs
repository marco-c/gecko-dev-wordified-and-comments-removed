use
winapi
:
:
um
:
:
{
d3d11
d3d11_1
d3dcommon
}
;
use
wio
:
:
{
com
:
:
ComPtr
wide
:
:
ToWide
}
;
use
std
:
:
{
env
ffi
:
:
OsStr
fmt
}
;
#
[
must_use
]
pub
struct
DebugScope
{
annotation
:
ComPtr
<
d3d11_1
:
:
ID3DUserDefinedAnnotation
>
}
impl
DebugScope
{
#
[
allow
(
dead_code
)
]
pub
fn
with_name
(
context
:
&
ComPtr
<
d3d11
:
:
ID3D11DeviceContext
>
args
:
fmt
:
:
Arguments
)
-
>
Option
<
Self
>
{
let
name
=
format
!
(
"
{
}
"
args
)
;
if
unsafe
{
context
.
GetType
(
)
}
=
=
d3d11
:
:
D3D11_DEVICE_CONTEXT_DEFERRED
{
if
env
:
:
var
(
"
GFX_NO_RENDERDOC
"
)
.
is_ok
(
)
{
return
None
;
}
}
let
annotation
=
context
.
cast
:
:
<
d3d11_1
:
:
ID3DUserDefinedAnnotation
>
(
)
.
unwrap
(
)
;
let
msg
:
&
OsStr
=
name
.
as_ref
(
)
;
let
msg
:
Vec
<
u16
>
=
msg
.
to_wide_null
(
)
;
unsafe
{
annotation
.
BeginEvent
(
msg
.
as_ptr
(
)
as
_
)
;
}
Some
(
DebugScope
{
annotation
}
)
}
}
impl
Drop
for
DebugScope
{
fn
drop
(
&
mut
self
)
{
unsafe
{
self
.
annotation
.
EndEvent
(
)
;
}
}
}
pub
fn
debug_marker
(
context
:
&
ComPtr
<
d3d11
:
:
ID3D11DeviceContext
>
name
:
&
str
)
{
if
unsafe
{
context
.
GetType
(
)
}
=
=
d3d11
:
:
D3D11_DEVICE_CONTEXT_DEFERRED
{
if
env
:
:
var
(
"
GFX_NO_RENDERDOC
"
)
.
is_ok
(
)
{
return
;
}
}
let
annotation
=
context
.
cast
:
:
<
d3d11_1
:
:
ID3DUserDefinedAnnotation
>
(
)
.
unwrap
(
)
;
let
msg
:
&
OsStr
=
name
.
as_ref
(
)
;
let
msg
:
Vec
<
u16
>
=
msg
.
to_wide_null
(
)
;
unsafe
{
annotation
.
SetMarker
(
msg
.
as_ptr
(
)
as
_
)
;
}
}
pub
fn
verify_debug_ascii
(
name
:
&
str
)
-
>
bool
{
let
res
=
name
.
is_ascii
(
)
;
if
!
res
{
error
!
(
"
DX11
buffer
names
must
be
ASCII
"
)
;
}
res
}
pub
fn
set_debug_name
(
resource
:
&
d3d11
:
:
ID3D11DeviceChild
name
:
&
str
)
{
unsafe
{
resource
.
SetPrivateData
(
(
&
d3dcommon
:
:
WKPDID_D3DDebugObjectName
)
as
*
const
_
name
.
len
(
)
as
_
name
.
as_ptr
(
)
as
*
const
_
)
;
}
}
pub
fn
set_debug_name_with_suffix
(
resource
:
&
d3d11
:
:
ID3D11DeviceChild
name
:
&
mut
String
suffix
:
&
str
)
{
name
.
push_str
(
suffix
)
;
unsafe
{
resource
.
SetPrivateData
(
(
&
d3dcommon
:
:
WKPDID_D3DDebugObjectName
)
as
*
const
_
name
.
len
(
)
as
_
name
.
as_ptr
(
)
as
*
const
_
)
;
}
name
.
drain
(
(
name
.
len
(
)
-
suffix
.
len
(
)
)
.
.
)
;
}
