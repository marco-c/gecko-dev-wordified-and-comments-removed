#
[
cfg
(
feature
=
"
dummy_match_byte
"
)
]
mod
codegen
{
pub
fn
main
(
)
{
}
}
#
[
cfg
(
not
(
feature
=
"
dummy_match_byte
"
)
)
]
#
[
path
=
"
build
/
match_byte
.
rs
"
]
mod
match_byte
;
#
[
cfg
(
not
(
feature
=
"
dummy_match_byte
"
)
)
]
mod
codegen
{
use
std
:
:
env
;
use
std
:
:
path
:
:
Path
;
use
std
:
:
thread
:
:
Builder
;
pub
fn
main
(
)
{
let
manifest_dir
=
env
:
:
var
(
"
CARGO_MANIFEST_DIR
"
)
.
unwrap
(
)
;
let
input
=
Path
:
:
new
(
&
manifest_dir
)
.
join
(
"
src
/
tokenizer
.
rs
"
)
;
let
output
=
Path
:
:
new
(
&
env
:
:
var
(
"
OUT_DIR
"
)
.
unwrap
(
)
)
.
join
(
"
tokenizer
.
rs
"
)
;
println
!
(
"
cargo
:
rerun
-
if
-
changed
=
{
}
"
input
.
display
(
)
)
;
let
handle
=
Builder
:
:
new
(
)
.
stack_size
(
128
*
1024
*
1024
)
.
spawn
(
move
|
|
{
crate
:
:
match_byte
:
:
expand
(
&
input
&
output
)
;
}
)
.
unwrap
(
)
;
handle
.
join
(
)
.
unwrap
(
)
;
}
}
fn
main
(
)
{
codegen
:
:
main
(
)
;
}
