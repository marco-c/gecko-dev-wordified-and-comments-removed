use
super
:
:
*
;
pub
fn
heap_alloc
(
bytes
:
usize
)
-
>
crate
:
:
Result
<
*
mut
std
:
:
ffi
:
:
c_void
>
{
let
ptr
=
unsafe
{
HeapAlloc
(
GetProcessHeap
(
)
0
bytes
)
}
;
if
ptr
.
is_null
(
)
{
Err
(
E_OUTOFMEMORY
.
into
(
)
)
}
else
{
#
[
cfg
(
debug_assertions
)
]
unsafe
{
std
:
:
ptr
:
:
write_bytes
(
ptr
0xCC
bytes
)
;
}
Ok
(
ptr
)
}
}
pub
unsafe
fn
heap_free
(
ptr
:
*
mut
std
:
:
ffi
:
:
c_void
)
{
HeapFree
(
GetProcessHeap
(
)
0
ptr
)
;
}
