use
super
:
:
ErrorImpl
;
use
crate
:
:
backend
:
:
traits
:
:
BackendIter
;
pub
struct
IterImpl
<
'
env
>
(
pub
(
crate
)
Box
<
dyn
Iterator
<
Item
=
(
&
'
env
[
u8
]
&
'
env
[
u8
]
)
>
+
'
env
>
)
;
impl
<
'
env
>
BackendIter
<
'
env
>
for
IterImpl
<
'
env
>
{
type
Error
=
ErrorImpl
;
#
[
allow
(
clippy
:
:
type_complexity
)
]
fn
next
(
&
mut
self
)
-
>
Option
<
Result
<
(
&
'
env
[
u8
]
&
'
env
[
u8
]
)
Self
:
:
Error
>
>
{
self
.
0
.
next
(
)
.
map
(
Ok
)
}
}
