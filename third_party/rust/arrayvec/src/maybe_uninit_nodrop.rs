use
array
:
:
Array
;
use
nodrop
:
:
NoDrop
;
use
std
:
:
mem
:
:
uninitialized
;
pub
struct
MaybeUninit
<
T
>
(
NoDrop
<
T
>
)
;
impl
<
T
>
MaybeUninit
<
T
>
{
pub
unsafe
fn
uninitialized
(
)
-
>
Self
{
Self
:
:
from
(
uninitialized
(
)
)
}
pub
fn
from
(
v
:
T
)
-
>
Self
{
MaybeUninit
(
NoDrop
:
:
new
(
v
)
)
}
pub
fn
ptr
(
&
self
)
-
>
*
const
T
:
:
Item
where
T
:
Array
{
&
*
self
.
0
as
*
const
T
as
*
const
_
}
pub
fn
ptr_mut
(
&
mut
self
)
-
>
*
mut
T
:
:
Item
where
T
:
Array
{
&
mut
*
self
.
0
as
*
mut
T
as
*
mut
_
}
}
