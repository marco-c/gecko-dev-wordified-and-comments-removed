use
array
:
:
Array
;
use
std
:
:
mem
:
:
ManuallyDrop
;
#
[
repr
(
C
)
]
pub
union
MaybeUninit
<
T
>
{
empty
:
(
)
value
:
ManuallyDrop
<
T
>
}
impl
<
T
>
MaybeUninit
<
T
>
{
pub
unsafe
fn
uninitialized
(
)
-
>
Self
{
MaybeUninit
{
empty
:
(
)
}
}
pub
fn
from
(
v
:
T
)
-
>
Self
{
MaybeUninit
{
value
:
ManuallyDrop
:
:
new
(
v
)
}
}
pub
fn
ptr
(
&
self
)
-
>
*
const
T
:
:
Item
where
T
:
Array
{
self
as
*
const
_
as
*
const
T
:
:
Item
}
pub
fn
ptr_mut
(
&
mut
self
)
-
>
*
mut
T
:
:
Item
where
T
:
Array
{
self
as
*
mut
_
as
*
mut
T
:
:
Item
}
}
