use
std
:
:
error
:
:
Error
;
use
std
:
:
fmt
;
#
[
derive
(
Debug
)
]
pub
struct
SpawnError
{
is_shutdown
:
bool
}
impl
SpawnError
{
pub
fn
shutdown
(
)
-
>
Self
{
SpawnError
{
is_shutdown
:
true
}
}
pub
fn
at_capacity
(
)
-
>
Self
{
SpawnError
{
is_shutdown
:
false
}
}
pub
fn
is_shutdown
(
&
self
)
-
>
bool
{
self
.
is_shutdown
}
pub
fn
is_at_capacity
(
&
self
)
-
>
bool
{
!
self
.
is_shutdown
}
}
impl
fmt
:
:
Display
for
SpawnError
{
fn
fmt
(
&
self
fmt
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
write
!
(
fmt
"
{
}
"
self
.
description
(
)
)
}
}
impl
Error
for
SpawnError
{
fn
description
(
&
self
)
-
>
&
str
{
"
attempted
to
spawn
task
while
the
executor
is
at
capacity
or
shut
down
"
}
}
