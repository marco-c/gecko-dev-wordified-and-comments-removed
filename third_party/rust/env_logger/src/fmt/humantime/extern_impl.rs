use
std
:
:
fmt
;
use
std
:
:
time
:
:
SystemTime
;
use
humantime
:
:
{
format_rfc3339_nanos
format_rfc3339_seconds
}
;
use
:
:
fmt
:
:
Formatter
;
pub
(
in
:
:
fmt
)
mod
glob
{
pub
use
super
:
:
*
;
}
impl
Formatter
{
pub
fn
timestamp
(
&
self
)
-
>
Timestamp
{
Timestamp
(
SystemTime
:
:
now
(
)
)
}
pub
fn
precise_timestamp
(
&
self
)
-
>
PreciseTimestamp
{
PreciseTimestamp
(
SystemTime
:
:
now
(
)
)
}
}
pub
struct
Timestamp
(
SystemTime
)
;
#
[
derive
(
Debug
)
]
pub
struct
PreciseTimestamp
(
SystemTime
)
;
impl
fmt
:
:
Debug
for
Timestamp
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
struct
TimestampValue
<
'
a
>
(
&
'
a
Timestamp
)
;
impl
<
'
a
>
fmt
:
:
Debug
for
TimestampValue
<
'
a
>
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
fmt
:
:
Display
:
:
fmt
(
&
self
.
0
f
)
}
}
f
.
debug_tuple
(
"
Timestamp
"
)
.
field
(
&
TimestampValue
(
&
self
)
)
.
finish
(
)
}
}
impl
fmt
:
:
Display
for
Timestamp
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
format_rfc3339_seconds
(
self
.
0
)
.
fmt
(
f
)
}
}
impl
fmt
:
:
Display
for
PreciseTimestamp
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
format_rfc3339_nanos
(
self
.
0
)
.
fmt
(
f
)
}
}
