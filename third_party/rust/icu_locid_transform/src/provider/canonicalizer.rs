use
super
:
:
*
;
use
icu_locid
:
:
subtags
:
:
{
Language
Region
Script
Variant
}
;
use
icu_provider
:
:
prelude
:
:
*
;
use
tinystr
:
:
UnvalidatedTinyAsciiStr
;
use
zerovec
:
:
{
VarZeroVec
ZeroMap
ZeroSlice
}
;
#
[
icu_provider
:
:
data_struct
(
marker
(
AliasesV1Marker
"
locid_transform
/
aliases
1
"
singleton
)
)
]
#
[
derive
(
PartialEq
Clone
Default
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_locid_transform
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
#
[
yoke
(
prove_covariance_manually
)
]
#
[
derive
(
Debug
)
]
pub
struct
AliasesV1
<
'
data
>
{
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language_variants
:
VarZeroVec
<
'
data
UnvalidatedLanguageIdentifierPair
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
sgn_region
:
ZeroMap
<
'
data
UnvalidatedRegion
Language
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language_len2
:
ZeroMap
<
'
data
UnvalidatedTinyAsciiStr
<
2
>
UnvalidatedLanguageIdentifier
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language_len3
:
ZeroMap
<
'
data
UnvalidatedLanguage
UnvalidatedLanguageIdentifier
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language
:
VarZeroVec
<
'
data
UnvalidatedLanguageIdentifierPair
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
script
:
ZeroMap
<
'
data
UnvalidatedScript
Script
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
region_alpha
:
ZeroMap
<
'
data
UnvalidatedTinyAsciiStr
<
2
>
Region
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
region_num
:
ZeroMap
<
'
data
UnvalidatedRegion
Region
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
complex_region
:
ZeroMap
<
'
data
UnvalidatedRegion
ZeroSlice
<
Region
>
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
variant
:
ZeroMap
<
'
data
UnvalidatedVariant
Variant
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
subdivision
:
ZeroMap
<
'
data
UnvalidatedSubdivision
SemivalidatedSubdivision
>
}
