use
super
:
:
*
;
use
icu_locid
:
:
subtags
:
:
{
Language
Region
Script
}
;
use
icu_provider
:
:
prelude
:
:
*
;
use
zerovec
:
:
ZeroMap
;
#
[
icu_provider
:
:
data_struct
(
marker
(
LikelySubtagsV1Marker
"
locid_transform
/
likelysubtags
1
"
singleton
)
)
]
#
[
derive
(
Debug
PartialEq
Clone
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_locid_transform
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
#
[
yoke
(
prove_covariance_manually
)
]
pub
struct
LikelySubtagsV1
<
'
data
>
{
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language_script
:
ZeroMap
<
'
data
(
UnvalidatedLanguage
UnvalidatedScript
)
Region
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language_region
:
ZeroMap
<
'
data
(
UnvalidatedLanguage
UnvalidatedRegion
)
Script
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language
:
ZeroMap
<
'
data
UnvalidatedLanguage
(
Script
Region
)
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
script_region
:
ZeroMap
<
'
data
(
UnvalidatedScript
UnvalidatedRegion
)
Language
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
script
:
ZeroMap
<
'
data
UnvalidatedScript
(
Language
Region
)
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
region
:
ZeroMap
<
'
data
UnvalidatedRegion
(
Language
Script
)
>
pub
und
:
(
Language
Script
Region
)
}
#
[
icu_provider
:
:
data_struct
(
marker
(
LikelySubtagsForLanguageV1Marker
"
locid_transform
/
likelysubtags_l
1
"
singleton
)
)
]
#
[
derive
(
Debug
PartialEq
Clone
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_locid_transform
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
#
[
yoke
(
prove_covariance_manually
)
]
pub
struct
LikelySubtagsForLanguageV1
<
'
data
>
{
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language_script
:
ZeroMap
<
'
data
(
UnvalidatedLanguage
UnvalidatedScript
)
Region
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language_region
:
ZeroMap
<
'
data
(
UnvalidatedLanguage
UnvalidatedRegion
)
Script
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language
:
ZeroMap
<
'
data
UnvalidatedLanguage
(
Script
Region
)
>
pub
und
:
(
Language
Script
Region
)
}
impl
<
'
data
>
From
<
LikelySubtagsV1
<
'
data
>
>
for
LikelySubtagsForLanguageV1
<
'
data
>
{
fn
from
(
other
:
LikelySubtagsV1
<
'
data
>
)
-
>
Self
{
Self
{
language_script
:
other
.
language_script
language_region
:
other
.
language_region
language
:
other
.
language
und
:
other
.
und
}
}
}
impl
<
'
data
>
LikelySubtagsForLanguageV1
<
'
data
>
{
pub
(
crate
)
fn
clone_from_borrowed
(
other
:
&
LikelySubtagsV1
<
'
data
>
)
-
>
Self
{
Self
{
language_script
:
other
.
language_script
.
clone
(
)
language_region
:
other
.
language_region
.
clone
(
)
language
:
other
.
language
.
clone
(
)
und
:
other
.
und
}
}
}
#
[
icu_provider
:
:
data_struct
(
marker
(
LikelySubtagsForScriptRegionV1Marker
"
locid_transform
/
likelysubtags_sr
1
"
singleton
)
)
]
#
[
derive
(
Debug
PartialEq
Clone
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_locid_transform
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
#
[
yoke
(
prove_covariance_manually
)
]
pub
struct
LikelySubtagsForScriptRegionV1
<
'
data
>
{
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
script_region
:
ZeroMap
<
'
data
(
UnvalidatedScript
UnvalidatedRegion
)
Language
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
script
:
ZeroMap
<
'
data
UnvalidatedScript
(
Language
Region
)
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
region
:
ZeroMap
<
'
data
UnvalidatedRegion
(
Language
Script
)
>
}
impl
<
'
data
>
From
<
LikelySubtagsV1
<
'
data
>
>
for
LikelySubtagsForScriptRegionV1
<
'
data
>
{
fn
from
(
other
:
LikelySubtagsV1
<
'
data
>
)
-
>
Self
{
Self
{
script_region
:
other
.
script_region
script
:
other
.
script
region
:
other
.
region
}
}
}
#
[
icu_provider
:
:
data_struct
(
marker
(
LikelySubtagsExtendedV1Marker
"
locid_transform
/
likelysubtags_ext
1
"
singleton
)
)
]
#
[
derive
(
Debug
PartialEq
Clone
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_locid_transform
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
#
[
yoke
(
prove_covariance_manually
)
]
pub
struct
LikelySubtagsExtendedV1
<
'
data
>
{
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language_script
:
ZeroMap
<
'
data
(
UnvalidatedLanguage
UnvalidatedScript
)
Region
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language_region
:
ZeroMap
<
'
data
(
UnvalidatedLanguage
UnvalidatedRegion
)
Script
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
language
:
ZeroMap
<
'
data
UnvalidatedLanguage
(
Script
Region
)
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
script_region
:
ZeroMap
<
'
data
(
UnvalidatedScript
UnvalidatedRegion
)
Language
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
script
:
ZeroMap
<
'
data
UnvalidatedScript
(
Language
Region
)
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
region
:
ZeroMap
<
'
data
UnvalidatedRegion
(
Language
Script
)
>
}
impl
<
'
data
>
From
<
LikelySubtagsV1
<
'
data
>
>
for
LikelySubtagsExtendedV1
<
'
data
>
{
fn
from
(
other
:
LikelySubtagsV1
<
'
data
>
)
-
>
Self
{
Self
{
language_script
:
other
.
language_script
language_region
:
other
.
language_region
language
:
other
.
language
script_region
:
other
.
script_region
script
:
other
.
script
region
:
other
.
region
}
}
}
