pub
use
tracing_core
:
:
{
metadata
:
:
ParseLevelFilterError
LevelFilter
}
;
pub
const
STATIC_MAX_LEVEL
:
LevelFilter
=
MAX_LEVEL
;
cfg_if
!
{
if
#
[
cfg
(
all
(
not
(
debug_assertions
)
feature
=
"
release_max_level_off
"
)
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
OFF
;
}
else
if
#
[
cfg
(
all
(
not
(
debug_assertions
)
feature
=
"
release_max_level_error
"
)
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
ERROR
;
}
else
if
#
[
cfg
(
all
(
not
(
debug_assertions
)
feature
=
"
release_max_level_warn
"
)
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
WARN
;
}
else
if
#
[
cfg
(
all
(
not
(
debug_assertions
)
feature
=
"
release_max_level_info
"
)
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
INFO
;
}
else
if
#
[
cfg
(
all
(
not
(
debug_assertions
)
feature
=
"
release_max_level_debug
"
)
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
DEBUG
;
}
else
if
#
[
cfg
(
all
(
not
(
debug_assertions
)
feature
=
"
release_max_level_trace
"
)
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
TRACE
;
}
else
if
#
[
cfg
(
feature
=
"
max_level_off
"
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
OFF
;
}
else
if
#
[
cfg
(
feature
=
"
max_level_error
"
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
ERROR
;
}
else
if
#
[
cfg
(
feature
=
"
max_level_warn
"
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
WARN
;
}
else
if
#
[
cfg
(
feature
=
"
max_level_info
"
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
INFO
;
}
else
if
#
[
cfg
(
feature
=
"
max_level_debug
"
)
]
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
DEBUG
;
}
else
{
const
MAX_LEVEL
:
LevelFilter
=
LevelFilter
:
:
TRACE
;
}
}
