#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
extern
crate
std
;
#
[
macro_use
]
extern
crate
tracing
;
mod
support
;
use
self
:
:
support
:
:
*
;
use
tracing
:
:
Level
;
use
std
:
:
sync
:
:
{
atomic
:
:
{
AtomicUsize
Ordering
}
Arc
}
;
#
[
cfg_attr
(
target_arch
=
"
wasm32
"
wasm_bindgen_test
:
:
wasm_bindgen_test
)
]
#
[
test
]
fn
filters_are_reevaluated_for_different_call_sites
(
)
{
let
charlie_count
=
Arc
:
:
new
(
AtomicUsize
:
:
new
(
0
)
)
;
let
dave_count
=
Arc
:
:
new
(
AtomicUsize
:
:
new
(
0
)
)
;
let
charlie_count2
=
charlie_count
.
clone
(
)
;
let
dave_count2
=
dave_count
.
clone
(
)
;
let
subscriber
=
subscriber
:
:
mock
(
)
.
with_filter
(
move
|
meta
|
{
println
!
(
"
Filter
:
{
:
?
}
"
meta
.
name
(
)
)
;
match
meta
.
name
(
)
{
"
charlie
"
=
>
{
charlie_count2
.
fetch_add
(
1
Ordering
:
:
Relaxed
)
;
false
}
"
dave
"
=
>
{
dave_count2
.
fetch_add
(
1
Ordering
:
:
Relaxed
)
;
true
}
_
=
>
false
}
}
)
.
run
(
)
;
tracing
:
:
subscriber
:
:
set_global_default
(
subscriber
)
.
unwrap
(
)
;
let
charlie
=
span
!
(
Level
:
:
TRACE
"
charlie
"
)
;
let
dave
=
charlie
.
in_scope
(
|
|
{
let
dave
=
span
!
(
Level
:
:
TRACE
"
dave
"
)
;
dave
.
in_scope
(
|
|
{
}
)
;
dave
}
)
;
assert_eq
!
(
charlie_count
.
load
(
Ordering
:
:
Relaxed
)
1
)
;
assert_eq
!
(
dave_count
.
load
(
Ordering
:
:
Relaxed
)
1
)
;
charlie
.
in_scope
(
|
|
dave
.
in_scope
(
|
|
{
}
)
)
;
assert_eq
!
(
charlie_count
.
load
(
Ordering
:
:
Relaxed
)
1
)
;
assert_eq
!
(
dave_count
.
load
(
Ordering
:
:
Relaxed
)
1
)
;
let
charlie2
=
span
!
(
Level
:
:
TRACE
"
charlie
"
)
;
charlie
.
in_scope
(
|
|
{
}
)
;
assert_eq
!
(
charlie_count
.
load
(
Ordering
:
:
Relaxed
)
2
)
;
assert_eq
!
(
dave_count
.
load
(
Ordering
:
:
Relaxed
)
1
)
;
charlie2
.
in_scope
(
|
|
span
!
(
Level
:
:
TRACE
"
dave
"
)
.
in_scope
(
|
|
{
}
)
)
;
assert_eq
!
(
charlie_count
.
load
(
Ordering
:
:
Relaxed
)
2
)
;
assert_eq
!
(
dave_count
.
load
(
Ordering
:
:
Relaxed
)
2
)
;
}
