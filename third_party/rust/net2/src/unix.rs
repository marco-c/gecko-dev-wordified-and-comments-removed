use
std
:
:
io
;
use
sys
:
:
c
:
:
{
self
c_int
}
;
use
{
TcpBuilder
UdpBuilder
}
;
use
ext
:
:
{
self
AsSock
}
;
pub
trait
UnixTcpBuilderExt
{
fn
reuse_port
(
&
self
reuse
:
bool
)
-
>
io
:
:
Result
<
&
Self
>
;
fn
get_reuse_port
(
&
self
)
-
>
io
:
:
Result
<
bool
>
;
}
impl
UnixTcpBuilderExt
for
TcpBuilder
{
fn
reuse_port
(
&
self
reuse
:
bool
)
-
>
io
:
:
Result
<
&
Self
>
{
ext
:
:
set_opt
(
self
.
as_sock
(
)
c
:
:
SOL_SOCKET
c
:
:
SO_REUSEPORT
reuse
as
c_int
)
.
map
(
|
(
)
|
self
)
}
fn
get_reuse_port
(
&
self
)
-
>
io
:
:
Result
<
bool
>
{
ext
:
:
get_opt
(
self
.
as_sock
(
)
c
:
:
SOL_SOCKET
c
:
:
SO_REUSEPORT
)
.
map
(
ext
:
:
int2bool
)
}
}
pub
trait
UnixUdpBuilderExt
{
fn
reuse_port
(
&
self
reuse
:
bool
)
-
>
io
:
:
Result
<
&
Self
>
;
fn
get_reuse_port
(
&
self
)
-
>
io
:
:
Result
<
bool
>
;
}
impl
UnixUdpBuilderExt
for
UdpBuilder
{
fn
reuse_port
(
&
self
reuse
:
bool
)
-
>
io
:
:
Result
<
&
Self
>
{
ext
:
:
set_opt
(
self
.
as_sock
(
)
c
:
:
SOL_SOCKET
c
:
:
SO_REUSEPORT
reuse
as
c_int
)
.
map
(
|
(
)
|
self
)
}
fn
get_reuse_port
(
&
self
)
-
>
io
:
:
Result
<
bool
>
{
ext
:
:
get_opt
(
self
.
as_sock
(
)
c
:
:
SOL_SOCKET
c
:
:
SO_REUSEPORT
)
.
map
(
ext
:
:
int2bool
)
}
}
