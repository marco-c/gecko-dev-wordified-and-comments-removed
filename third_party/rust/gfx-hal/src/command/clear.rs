use
crate
:
:
pso
;
use
std
:
:
fmt
;
#
[
repr
(
C
)
]
#
[
derive
(
Clone
Copy
)
]
pub
union
ClearColor
{
pub
float32
:
[
f32
;
4
]
pub
sint32
:
[
i32
;
4
]
pub
uint32
:
[
u32
;
4
]
}
impl
fmt
:
:
Debug
for
ClearColor
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
writeln
!
[
f
"
ClearColor
"
]
}
}
#
[
repr
(
C
)
]
#
[
derive
(
Clone
Copy
Debug
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
Serialize
Deserialize
)
)
]
pub
struct
ClearDepthStencil
{
pub
depth
:
f32
pub
stencil
:
u32
}
#
[
repr
(
C
)
]
#
[
derive
(
Clone
Copy
)
]
pub
union
ClearValue
{
pub
color
:
ClearColor
pub
depth_stencil
:
ClearDepthStencil
_align
:
[
u32
;
4
]
}
impl
fmt
:
:
Debug
for
ClearValue
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
f
.
debug_struct
(
"
ClearValue
"
)
.
field
(
"
color
"
unsafe
{
&
self
.
color
.
uint32
}
)
.
field
(
"
depth_stencil
"
unsafe
{
&
self
.
depth_stencil
}
)
.
finish
(
)
}
}
impl
Default
for
ClearValue
{
fn
default
(
)
-
>
Self
{
ClearValue
{
_align
:
[
0
;
4
]
}
}
}
#
[
derive
(
Clone
Copy
Debug
)
]
pub
enum
AttachmentClear
{
Color
{
index
:
usize
value
:
ClearColor
}
DepthStencil
{
depth
:
Option
<
pso
:
:
DepthValue
>
stencil
:
Option
<
pso
:
:
StencilValue
>
}
}
