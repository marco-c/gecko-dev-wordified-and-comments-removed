use
core
:
:
marker
;
use
stream
:
:
Stream
;
use
{
Poll
Async
}
;
#
[
derive
(
Debug
)
]
#
[
must_use
=
"
streams
do
nothing
unless
polled
"
]
pub
struct
Empty
<
T
E
>
{
_data
:
marker
:
:
PhantomData
<
(
T
E
)
>
}
pub
fn
empty
<
T
E
>
(
)
-
>
Empty
<
T
E
>
{
Empty
{
_data
:
marker
:
:
PhantomData
}
}
impl
<
T
E
>
Stream
for
Empty
<
T
E
>
{
type
Item
=
T
;
type
Error
=
E
;
fn
poll
(
&
mut
self
)
-
>
Poll
<
Option
<
Self
:
:
Item
>
Self
:
:
Error
>
{
Ok
(
Async
:
:
Ready
(
None
)
)
}
}
