#
!
[
cfg_attr
(
not
(
feature
=
"
std
"
)
no_std
)
]
#
!
[
warn
(
missing_debug_implementations
missing_docs
rust_2018_idioms
single_use_lifetimes
unreachable_pub
)
]
#
!
[
doc
(
test
(
no_crate_inject
attr
(
deny
(
warnings
rust_2018_idioms
single_use_lifetimes
)
allow
(
dead_code
unused_assignments
unused_variables
)
)
)
)
]
#
!
[
cfg_attr
(
docsrs
feature
(
doc_cfg
)
)
]
#
[
cfg
(
all
(
feature
=
"
bilock
"
not
(
feature
=
"
unstable
"
)
)
)
]
compile_error
!
(
"
The
bilock
feature
requires
the
unstable
feature
as
an
explicit
opt
-
in
to
unstable
features
"
)
;
#
[
doc
(
no_inline
)
]
pub
use
futures_core
:
:
future
:
:
{
Future
TryFuture
}
;
#
[
doc
(
no_inline
)
]
pub
use
futures_util
:
:
future
:
:
{
FutureExt
TryFutureExt
}
;
#
[
doc
(
no_inline
)
]
pub
use
futures_core
:
:
stream
:
:
{
Stream
TryStream
}
;
#
[
doc
(
no_inline
)
]
pub
use
futures_util
:
:
stream
:
:
{
StreamExt
TryStreamExt
}
;
#
[
doc
(
no_inline
)
]
pub
use
futures_sink
:
:
Sink
;
#
[
doc
(
no_inline
)
]
pub
use
futures_util
:
:
sink
:
:
SinkExt
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
doc
(
no_inline
)
]
pub
use
futures_io
:
:
{
AsyncBufRead
AsyncRead
AsyncSeek
AsyncWrite
}
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
doc
(
no_inline
)
]
pub
use
futures_util
:
:
{
AsyncBufReadExt
AsyncReadExt
AsyncSeekExt
AsyncWriteExt
}
;
pub
use
futures_core
:
:
ready
;
pub
use
futures_util
:
:
pin_mut
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
cfg
(
feature
=
"
async
-
await
"
)
]
pub
use
futures_util
:
:
select
;
#
[
cfg
(
feature
=
"
async
-
await
"
)
]
pub
use
futures_util
:
:
{
join
pending
poll
select_biased
try_join
}
;
#
[
doc
(
inline
)
]
pub
use
futures_util
:
:
{
future
never
sink
stream
task
}
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
cfg
(
feature
=
"
async
-
await
"
)
]
pub
use
futures_util
:
:
stream_select
;
#
[
cfg
(
feature
=
"
alloc
"
)
]
#
[
doc
(
inline
)
]
pub
use
futures_channel
as
channel
;
#
[
cfg
(
feature
=
"
alloc
"
)
]
#
[
doc
(
inline
)
]
pub
use
futures_util
:
:
lock
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
doc
(
inline
)
]
pub
use
futures_util
:
:
io
;
#
[
cfg
(
feature
=
"
executor
"
)
]
#
[
cfg_attr
(
docsrs
doc
(
cfg
(
feature
=
"
executor
"
)
)
)
]
#
[
doc
(
inline
)
]
pub
use
futures_executor
as
executor
;
#
[
cfg
(
feature
=
"
compat
"
)
]
#
[
cfg_attr
(
docsrs
doc
(
cfg
(
feature
=
"
compat
"
)
)
)
]
#
[
doc
(
inline
)
]
pub
use
futures_util
:
:
compat
;
pub
mod
prelude
{
pub
use
crate
:
:
future
:
:
{
self
Future
TryFuture
}
;
pub
use
crate
:
:
sink
:
:
{
self
Sink
}
;
pub
use
crate
:
:
stream
:
:
{
self
Stream
TryStream
}
;
#
[
doc
(
no_inline
)
]
pub
use
crate
:
:
future
:
:
{
FutureExt
as
_
TryFutureExt
as
_
}
;
#
[
doc
(
no_inline
)
]
pub
use
crate
:
:
sink
:
:
SinkExt
as
_
;
#
[
doc
(
no_inline
)
]
pub
use
crate
:
:
stream
:
:
{
StreamExt
as
_
TryStreamExt
as
_
}
;
#
[
cfg
(
feature
=
"
std
"
)
]
pub
use
crate
:
:
io
:
:
{
AsyncBufRead
AsyncRead
AsyncSeek
AsyncWrite
}
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
doc
(
no_inline
)
]
pub
use
crate
:
:
io
:
:
{
AsyncBufReadExt
as
_
AsyncReadExt
as
_
AsyncSeekExt
as
_
AsyncWriteExt
as
_
}
;
}
