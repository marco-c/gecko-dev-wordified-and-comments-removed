extern
crate
libc
;
use
crate
:
:
AudioThreadPriorityError
;
use
std
:
:
convert
:
:
TryInto
;
const
THREAD_PRIORITY_URGENT_AUDIO
:
libc
:
:
c_int
=
-
19
;
#
[
derive
(
Debug
)
]
pub
struct
RtPriorityHandleInternal
{
previous_priority
:
libc
:
:
c_int
}
pub
fn
promote_current_thread_to_real_time_internal
(
_
:
u32
_
:
u32
)
-
>
Result
<
RtPriorityHandleInternal
AudioThreadPriorityError
>
{
let
who
=
unsafe
{
libc
:
:
gettid
(
)
.
try_into
(
)
.
unwrap
(
)
}
;
unsafe
{
(
*
libc
:
:
__errno
(
)
)
=
0
}
;
let
previous_priority
=
unsafe
{
libc
:
:
getpriority
(
libc
:
:
PRIO_PROCESS
who
)
}
;
if
previous_priority
=
=
-
1
&
&
unsafe
{
*
libc
:
:
__errno
(
)
}
!
=
0
{
return
Err
(
AudioThreadPriorityError
:
:
new
(
"
Failed
to
get
current
thread
priority
"
)
)
;
}
let
r
=
unsafe
{
libc
:
:
setpriority
(
libc
:
:
PRIO_PROCESS
who
THREAD_PRIORITY_URGENT_AUDIO
)
}
;
if
r
<
0
{
return
Err
(
AudioThreadPriorityError
:
:
new
(
"
Failed
to
set
current
thread
priority
"
)
)
;
}
Ok
(
RtPriorityHandleInternal
{
previous_priority
}
)
}
pub
fn
demote_current_thread_from_real_time_internal
(
h
:
RtPriorityHandleInternal
)
-
>
Result
<
(
)
AudioThreadPriorityError
>
{
let
who
=
unsafe
{
libc
:
:
gettid
(
)
.
try_into
(
)
.
unwrap
(
)
}
;
let
r
=
unsafe
{
libc
:
:
setpriority
(
libc
:
:
PRIO_PROCESS
who
h
.
previous_priority
)
}
;
if
r
<
0
{
return
Err
(
AudioThreadPriorityError
:
:
new
(
"
Failed
to
demote
thread
priority
"
)
)
;
}
Ok
(
(
)
)
}
