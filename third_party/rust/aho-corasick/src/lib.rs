#
!
[
deny
(
missing_docs
)
]
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
compile_error
!
(
"
std
feature
is
currently
required
to
build
this
crate
"
)
;
pub
use
crate
:
:
ahocorasick
:
:
{
AhoCorasick
AhoCorasickBuilder
FindIter
FindOverlappingIter
MatchKind
StreamFindIter
}
;
pub
use
crate
:
:
error
:
:
{
Error
ErrorKind
}
;
pub
use
crate
:
:
state_id
:
:
StateID
;
mod
ahocorasick
;
mod
automaton
;
mod
buffer
;
mod
byte_frequencies
;
mod
classes
;
mod
dfa
;
mod
error
;
mod
nfa
;
pub
mod
packed
;
mod
prefilter
;
mod
state_id
;
#
[
cfg
(
test
)
]
mod
tests
;
#
[
derive
(
Clone
Debug
Eq
Hash
PartialEq
)
]
pub
struct
Match
{
pattern
:
usize
len
:
usize
end
:
usize
}
impl
Match
{
#
[
inline
]
pub
fn
pattern
(
&
self
)
-
>
usize
{
self
.
pattern
}
#
[
inline
]
pub
fn
start
(
&
self
)
-
>
usize
{
self
.
end
-
self
.
len
}
#
[
inline
]
pub
fn
end
(
&
self
)
-
>
usize
{
self
.
end
}
#
[
inline
]
pub
fn
len
(
&
self
)
-
>
usize
{
self
.
len
}
#
[
inline
]
pub
fn
is_empty
(
&
self
)
-
>
bool
{
self
.
len
=
=
0
}
#
[
inline
]
fn
increment
(
&
self
by
:
usize
)
-
>
Match
{
Match
{
pattern
:
self
.
pattern
len
:
self
.
len
end
:
self
.
end
+
by
}
}
#
[
inline
]
fn
from_span
(
id
:
usize
start
:
usize
end
:
usize
)
-
>
Match
{
Match
{
pattern
:
id
len
:
end
-
start
end
}
}
}
