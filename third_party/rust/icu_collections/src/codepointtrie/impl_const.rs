pub
const
FAST_TYPE_SHIFT
:
i32
=
6
;
pub
const
FAST_TYPE_DATA_BLOCK_LENGTH
:
u32
=
1
<
<
FAST_TYPE_SHIFT
;
pub
const
FAST_TYPE_DATA_MASK
:
u32
=
FAST_TYPE_DATA_BLOCK_LENGTH
-
1
;
pub
const
FAST_TYPE_FAST_INDEXING_MAX
:
u32
=
0xffff
;
pub
const
SMALL_TYPE_FAST_INDEXING_MAX
:
u32
=
0xfff
;
pub
const
ERROR_VALUE_NEG_DATA_OFFSET
:
u32
=
1
;
pub
const
HIGH_VALUE_NEG_DATA_OFFSET
:
u32
=
2
;
pub
const
BMP_INDEX_LENGTH
:
u32
=
0x10000
>
>
FAST_TYPE_SHIFT
;
pub
const
SMALL_LIMIT
:
u32
=
0x1000
;
pub
const
SMALL_INDEX_LENGTH
:
u32
=
SMALL_LIMIT
>
>
FAST_TYPE_SHIFT
;
pub
const
SHIFT_3
:
u32
=
4
;
pub
const
SHIFT_2
:
u32
=
5
+
SHIFT_3
;
pub
const
SHIFT_1
:
u32
=
5
+
SHIFT_2
;
pub
const
SHIFT_2_3
:
u32
=
SHIFT_2
-
SHIFT_3
;
pub
const
SHIFT_1_2
:
u32
=
SHIFT_1
-
SHIFT_2
;
pub
const
OMITTED_BMP_INDEX_1_LENGTH
:
u32
=
0x10000
>
>
SHIFT_1
;
pub
const
INDEX_2_BLOCK_LENGTH
:
u32
=
1
<
<
SHIFT_1_2
;
pub
const
INDEX_2_MASK
:
u32
=
INDEX_2_BLOCK_LENGTH
-
1
;
pub
const
CP_PER_INDEX_2_ENTRY
:
u32
=
1
<
<
SHIFT_2
;
pub
const
INDEX_3_BLOCK_LENGTH
:
u32
=
1
<
<
SHIFT_2_3
;
pub
const
INDEX_3_MASK
:
u32
=
INDEX_3_BLOCK_LENGTH
-
1
;
pub
const
SMALL_DATA_BLOCK_LENGTH
:
u32
=
1
<
<
SHIFT_3
;
pub
const
SMALL_DATA_MASK
:
u32
=
SMALL_DATA_BLOCK_LENGTH
-
1
;
pub
const
CODE_POINT_MAX
:
u32
=
0x10ffff
;
