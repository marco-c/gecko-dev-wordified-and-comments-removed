use
std
:
:
env
;
use
std
:
:
path
:
:
{
Path
PathBuf
}
;
use
once_cell
:
:
sync
:
:
OnceCell
as
OnceLock
;
static
DEFAULT_TEMPDIR
:
OnceLock
<
PathBuf
>
=
OnceLock
:
:
new
(
)
;
pub
fn
override_temp_dir
(
path
:
&
Path
)
-
>
Result
<
(
)
PathBuf
>
{
let
mut
we_set
=
false
;
let
val
=
DEFAULT_TEMPDIR
.
get_or_init
(
|
|
{
we_set
=
true
;
path
.
to_path_buf
(
)
}
)
;
if
we_set
{
Ok
(
(
)
)
}
else
{
Err
(
val
.
to_owned
(
)
)
}
}
pub
fn
temp_dir
(
)
-
>
PathBuf
{
DEFAULT_TEMPDIR
.
get
(
)
.
map
(
|
p
|
p
.
to_owned
(
)
)
.
unwrap_or_else
(
env
:
:
temp_dir
)
}
