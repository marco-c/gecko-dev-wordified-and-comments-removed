#
[
deprecated
(
since
=
"
0
.
1
.
8
"
note
=
"
use
tokio
-
current
-
thread
crate
or
functions
in
tokio
:
:
runtime
:
:
current_thread
instead
"
)
]
#
[
doc
(
hidden
)
]
pub
mod
current_thread
;
#
[
deprecated
(
since
=
"
0
.
1
.
8
"
note
=
"
use
tokio
-
threadpool
crate
instead
"
)
]
#
[
doc
(
hidden
)
]
pub
mod
thread_pool
{
pub
use
tokio_threadpool
:
:
{
Builder
Sender
Shutdown
ThreadPool
}
;
}
pub
use
tokio_executor
:
:
{
Executor
DefaultExecutor
SpawnError
}
;
use
futures
:
:
{
Future
IntoFuture
}
;
use
futures
:
:
future
:
:
{
self
FutureResult
}
;
#
[
derive
(
Debug
)
]
pub
struct
Spawn
(
(
)
)
;
pub
fn
spawn
<
F
>
(
f
:
F
)
-
>
Spawn
where
F
:
Future
<
Item
=
(
)
Error
=
(
)
>
+
'
static
+
Send
{
:
:
tokio_executor
:
:
spawn
(
f
)
;
Spawn
(
(
)
)
}
impl
IntoFuture
for
Spawn
{
type
Future
=
FutureResult
<
(
)
(
)
>
;
type
Item
=
(
)
;
type
Error
=
(
)
;
fn
into_future
(
self
)
-
>
Self
:
:
Future
{
future
:
:
ok
(
(
)
)
}
}
