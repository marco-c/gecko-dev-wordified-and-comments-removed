#
[
cfg
(
feature
=
"
timer
"
)
]
use
tokio_timer
:
:
{
throttle
:
:
Throttle
Timeout
}
;
use
futures
:
:
Stream
;
#
[
cfg
(
feature
=
"
timer
"
)
]
use
std
:
:
time
:
:
Duration
;
pub
trait
StreamExt
:
Stream
{
#
[
cfg
(
feature
=
"
timer
"
)
]
fn
throttle
(
self
duration
:
Duration
)
-
>
Throttle
<
Self
>
where
Self
:
Sized
{
Throttle
:
:
new
(
self
duration
)
}
#
[
cfg
(
feature
=
"
timer
"
)
]
fn
timeout
(
self
timeout
:
Duration
)
-
>
Timeout
<
Self
>
where
Self
:
Sized
{
Timeout
:
:
new
(
self
timeout
)
}
}
impl
<
T
:
?
Sized
>
StreamExt
for
T
where
T
:
Stream
{
}
