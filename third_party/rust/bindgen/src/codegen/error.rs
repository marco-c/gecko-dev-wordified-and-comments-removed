use
std
:
:
error
;
use
std
:
:
fmt
;
#
[
derive
(
Clone
Debug
PartialEq
Eq
)
]
pub
enum
Error
{
NoLayoutForOpaqueBlob
InstantiationOfOpaqueType
}
impl
fmt
:
:
Display
for
Error
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
write
!
(
f
"
{
}
"
error
:
:
Error
:
:
description
(
self
)
)
}
}
impl
error
:
:
Error
for
Error
{
fn
cause
(
&
self
)
-
>
Option
<
&
dyn
error
:
:
Error
>
{
None
}
fn
description
(
&
self
)
-
>
&
'
static
str
{
match
*
self
{
Error
:
:
NoLayoutForOpaqueBlob
=
>
{
"
Tried
to
generate
an
opaque
blob
but
had
no
layout
"
}
Error
:
:
InstantiationOfOpaqueType
=
>
{
"
Instantiation
of
opaque
template
type
or
partial
template
\
specialization
"
}
}
}
}
pub
type
Result
<
T
>
=
:
:
std
:
:
result
:
:
Result
<
T
Error
>
;
