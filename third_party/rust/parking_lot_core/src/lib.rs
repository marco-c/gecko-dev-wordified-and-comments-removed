#
!
[
warn
(
missing_docs
)
]
#
!
[
cfg_attr
(
all
(
feature
=
"
nightly
"
target_os
=
"
linux
"
)
feature
(
integer_atomics
)
)
]
extern
crate
rand
;
extern
crate
smallvec
;
#
[
cfg
(
feature
=
"
deadlock_detection
"
)
]
extern
crate
backtrace
;
#
[
cfg
(
feature
=
"
deadlock_detection
"
)
]
extern
crate
petgraph
;
#
[
cfg
(
feature
=
"
deadlock_detection
"
)
]
extern
crate
thread_id
;
#
[
cfg
(
unix
)
]
extern
crate
libc
;
#
[
cfg
(
windows
)
]
extern
crate
winapi
;
#
[
cfg
(
all
(
feature
=
"
nightly
"
target_os
=
"
linux
"
)
)
]
#
[
path
=
"
thread_parker
/
linux
.
rs
"
]
mod
thread_parker
;
#
[
cfg
(
all
(
unix
not
(
all
(
feature
=
"
nightly
"
target_os
=
"
linux
"
)
)
)
)
]
#
[
path
=
"
thread_parker
/
unix
.
rs
"
]
mod
thread_parker
;
#
[
cfg
(
windows
)
]
#
[
path
=
"
thread_parker
/
windows
/
mod
.
rs
"
]
mod
thread_parker
;
#
[
cfg
(
not
(
any
(
windows
unix
)
)
)
]
#
[
path
=
"
thread_parker
/
generic
.
rs
"
]
mod
thread_parker
;
mod
util
;
mod
spinwait
;
mod
word_lock
;
mod
parking_lot
;
pub
use
parking_lot
:
:
{
FilterOp
ParkResult
ParkToken
RequeueOp
UnparkResult
UnparkToken
}
;
pub
use
parking_lot
:
:
{
DEFAULT_PARK_TOKEN
DEFAULT_UNPARK_TOKEN
}
;
pub
use
parking_lot
:
:
{
park
unpark_all
unpark_filter
unpark_one
unpark_requeue
}
;
pub
use
spinwait
:
:
SpinWait
;
pub
use
parking_lot
:
:
deadlock
;
