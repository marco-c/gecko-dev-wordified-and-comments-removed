extern
crate
adler32
;
extern
crate
libc
;
pub
mod
inflate
;
pub
mod
deflate
;
mod
shared
;
pub
use
shared
:
:
update_adler32
as
mz_adler32_oxide
;
pub
use
shared
:
:
MZ_ADLER32_INIT
;
use
libc
:
:
{
c_int
c_void
}
;
#
[
repr
(
i32
)
]
#
[
derive
(
Debug
Copy
Clone
PartialEq
Eq
Hash
)
]
pub
enum
MZFlush
{
None
=
0
Partial
=
1
Sync
=
2
Full
=
3
Finish
=
4
Block
=
5
}
impl
MZFlush
{
pub
fn
new
(
flush
:
c_int
)
-
>
Result
<
Self
MZError
>
{
match
flush
{
0
=
>
Ok
(
MZFlush
:
:
None
)
1
|
2
=
>
Ok
(
MZFlush
:
:
Sync
)
3
=
>
Ok
(
MZFlush
:
:
Full
)
4
=
>
Ok
(
MZFlush
:
:
Finish
)
_
=
>
Err
(
MZError
:
:
Param
)
}
}
}
#
[
repr
(
i32
)
]
#
[
derive
(
Debug
Copy
Clone
PartialEq
Eq
Hash
)
]
pub
enum
MZStatus
{
Ok
=
0
StreamEnd
=
1
NeedDict
=
2
}
#
[
repr
(
i32
)
]
#
[
derive
(
Debug
Copy
Clone
PartialEq
Eq
Hash
)
]
pub
enum
MZError
{
ErrNo
=
-
1
Stream
=
-
2
Data
=
-
3
Mem
=
-
4
Buf
=
-
5
Version
=
-
6
Param
=
-
10_000
}
pub
type
MZResult
=
Result
<
MZStatus
MZError
>
;
