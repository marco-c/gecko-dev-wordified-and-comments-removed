#
[
derive
(
Clone
Copy
Debug
PartialEq
)
]
pub
enum
Tld
{
CentralWindows
Cyrillic
Western
Greek
TurkishAzeri
Hebrew
Arabic
Baltic
Vietnamese
Thai
Simplified
Traditional
Japanese
Korean
SimplifiedTraditional
TraditionalSimplified
CentralIso
IcelandicFaroese
WesternCyrillic
CentralCyrillic
WesternArabic
Generic
Eu
}
pub
fn
classify_tld
(
tld
:
&
[
u8
]
)
-
>
Tld
{
if
tld
.
len
(
)
=
=
2
{
let
key
=
[
tld
[
0
]
tld
[
1
]
]
;
if
let
Ok
(
i
)
=
TWO_LETTER_KEYS
.
binary_search
(
&
key
)
{
TWO_LETTER_VALUES
[
i
]
}
else
{
Tld
:
:
Western
}
}
else
if
tld
.
len
(
)
=
=
3
{
match
tld
{
b
"
edu
"
|
b
"
gov
"
|
b
"
mil
"
=
>
Tld
:
:
Western
_
=
>
Tld
:
:
Generic
}
}
else
if
tld
.
starts_with
(
b
"
xn
-
-
"
)
&
&
tld
.
len
(
)
>
=
8
{
if
let
Ok
(
i
)
=
PUNYCODE_KEYS
.
binary_search
(
&
&
tld
[
4
.
.
]
)
{
PUNYCODE_VALUES
[
i
]
}
else
{
Tld
:
:
Generic
}
}
else
{
Tld
:
:
Generic
}
}
static
TWO_LETTER_VALUES
:
[
Tld
;
87
]
=
[
Tld
:
:
Generic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Generic
Tld
:
:
WesternCyrillic
Tld
:
:
TurkishAzeri
Tld
:
:
CentralCyrillic
Tld
:
:
Cyrillic
Tld
:
:
Arabic
Tld
:
:
Cyrillic
Tld
:
:
Generic
Tld
:
:
Generic
Tld
:
:
Generic
Tld
:
:
Generic
Tld
:
:
Simplified
Tld
:
:
Generic
Tld
:
:
Greek
Tld
:
:
CentralWindows
Tld
:
:
Generic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Eu
Tld
:
:
Generic
Tld
:
:
IcelandicFaroese
Tld
:
:
WesternCyrillic
Tld
:
:
Greek
Tld
:
:
TraditionalSimplified
Tld
:
:
CentralWindows
Tld
:
:
CentralIso
Tld
:
:
Hebrew
Tld
:
:
Generic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
IcelandicFaroese
Tld
:
:
Arabic
Tld
:
:
Japanese
Tld
:
:
Cyrillic
Tld
:
:
Korean
Tld
:
:
Korean
Tld
:
:
Arabic
Tld
:
:
Cyrillic
Tld
:
:
Generic
Tld
:
:
Arabic
Tld
:
:
Baltic
Tld
:
:
Baltic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Cyrillic
Tld
:
:
Generic
Tld
:
:
Cyrillic
Tld
:
:
Cyrillic
Tld
:
:
TraditionalSimplified
Tld
:
:
Arabic
Tld
:
:
Generic
Tld
:
:
WesternArabic
Tld
:
:
Generic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
CentralIso
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
CentralWindows
Tld
:
:
Cyrillic
Tld
:
:
Cyrillic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
SimplifiedTraditional
Tld
:
:
CentralIso
Tld
:
:
CentralWindows
Tld
:
:
Generic
Tld
:
:
Cyrillic
Tld
:
:
Arabic
Tld
:
:
Thai
Tld
:
:
Cyrillic
Tld
:
:
Generic
Tld
:
:
Cyrillic
Tld
:
:
Arabic
Tld
:
:
Generic
Tld
:
:
TurkishAzeri
Tld
:
:
Generic
Tld
:
:
Traditional
Tld
:
:
Cyrillic
Tld
:
:
Cyrillic
Tld
:
:
Generic
Tld
:
:
Vietnamese
Tld
:
:
Generic
Tld
:
:
Arabic
]
;
static
TWO_LETTER_KEYS
:
[
[
u8
;
2
]
;
87
]
=
[
[
b
'
a
'
b
'
c
'
]
[
b
'
a
'
b
'
e
'
]
[
b
'
a
'
b
'
f
'
]
[
b
'
a
'
b
'
i
'
]
[
b
'
a
'
b
'
m
'
]
[
b
'
a
'
b
'
z
'
]
[
b
'
b
'
b
'
a
'
]
[
b
'
b
'
b
'
g
'
]
[
b
'
b
'
b
'
h
'
]
[
b
'
b
'
b
'
y
'
]
[
b
'
b
'
b
'
z
'
]
[
b
'
c
'
b
'
b
'
]
[
b
'
c
'
b
'
c
'
]
[
b
'
c
'
b
'
d
'
]
[
b
'
c
'
b
'
n
'
]
[
b
'
c
'
b
'
x
'
]
[
b
'
c
'
b
'
y
'
]
[
b
'
c
'
b
'
z
'
]
[
b
'
d
'
b
'
j
'
]
[
b
'
d
'
b
'
z
'
]
[
b
'
e
'
b
'
g
'
]
[
b
'
e
'
b
'
u
'
]
[
b
'
f
'
b
'
m
'
]
[
b
'
f
'
b
'
o
'
]
[
b
'
g
'
b
'
e
'
]
[
b
'
g
'
b
'
r
'
]
[
b
'
h
'
b
'
k
'
]
[
b
'
h
'
b
'
r
'
]
[
b
'
h
'
b
'
u
'
]
[
b
'
i
'
b
'
l
'
]
[
b
'
i
'
b
'
n
'
]
[
b
'
i
'
b
'
q
'
]
[
b
'
i
'
b
'
r
'
]
[
b
'
i
'
b
'
s
'
]
[
b
'
j
'
b
'
o
'
]
[
b
'
j
'
b
'
p
'
]
[
b
'
k
'
b
'
g
'
]
[
b
'
k
'
b
'
p
'
]
[
b
'
k
'
b
'
r
'
]
[
b
'
k
'
b
'
w
'
]
[
b
'
k
'
b
'
z
'
]
[
b
'
l
'
b
'
a
'
]
[
b
'
l
'
b
'
b
'
]
[
b
'
l
'
b
'
t
'
]
[
b
'
l
'
b
'
v
'
]
[
b
'
l
'
b
'
y
'
]
[
b
'
m
'
b
'
a
'
]
[
b
'
m
'
b
'
d
'
]
[
b
'
m
'
b
'
e
'
]
[
b
'
m
'
b
'
k
'
]
[
b
'
m
'
b
'
n
'
]
[
b
'
m
'
b
'
o
'
]
[
b
'
m
'
b
'
r
'
]
[
b
'
m
'
b
'
s
'
]
[
b
'
m
'
b
'
y
'
]
[
b
'
n
'
b
'
u
'
]
[
b
'
o
'
b
'
m
'
]
[
b
'
p
'
b
'
k
'
]
[
b
'
p
'
b
'
l
'
]
[
b
'
p
'
b
'
s
'
]
[
b
'
q
'
b
'
a
'
]
[
b
'
r
'
b
'
o
'
]
[
b
'
r
'
b
'
s
'
]
[
b
'
r
'
b
'
u
'
]
[
b
'
s
'
b
'
a
'
]
[
b
'
s
'
b
'
d
'
]
[
b
'
s
'
b
'
g
'
]
[
b
'
s
'
b
'
i
'
]
[
b
'
s
'
b
'
k
'
]
[
b
'
s
'
b
'
t
'
]
[
b
'
s
'
b
'
u
'
]
[
b
'
s
'
b
'
y
'
]
[
b
'
t
'
b
'
h
'
]
[
b
'
t
'
b
'
j
'
]
[
b
'
t
'
b
'
k
'
]
[
b
'
t
'
b
'
m
'
]
[
b
'
t
'
b
'
n
'
]
[
b
'
t
'
b
'
o
'
]
[
b
'
t
'
b
'
r
'
]
[
b
'
t
'
b
'
v
'
]
[
b
'
t
'
b
'
w
'
]
[
b
'
u
'
b
'
a
'
]
[
b
'
u
'
b
'
z
'
]
[
b
'
v
'
b
'
c
'
]
[
b
'
v
'
b
'
n
'
]
[
b
'
v
'
b
'
u
'
]
[
b
'
y
'
b
'
e
'
]
]
;
static
PUNYCODE_KEYS
:
[
&
'
static
[
u8
]
;
46
]
=
[
b
"
3e0b707e
"
b
"
54b7fta0cc
"
b
"
80ao21a
"
b
"
90a3ac
"
b
"
90ae
"
b
"
90ais
"
b
"
clchc0ea0b2g2a9gcd
"
b
"
d1alf
"
b
"
e1a4c
"
b
"
fiqs8S
"
b
"
fiqz9S
"
b
"
fzc2c9e2c
"
b
"
j1amh
"
b
"
j6w193g
"
b
"
kprw13d
"
b
"
kpry57d
"
b
"
l1acc
"
b
"
lgbbat1ad8j
"
b
"
mgb2ddes
"
b
"
mgb9awbf
"
b
"
mgba3a4f16a
"
b
"
mgbaam7a8h
"
b
"
mgbah1a3hjkrd
"
b
"
mgbai9azgqp6j
"
b
"
mgbayh7gpa
"
b
"
mgbc0a9azcg
"
b
"
mgbcpq6gpa1a
"
b
"
mgberp4a5d4ar
"
b
"
mgbpl2fh
"
b
"
mgbtx2b
"
b
"
mgbx4cd0ab
"
b
"
mix891f
"
b
"
node
"
b
"
o3cw4h
"
b
"
ogbpf8fl
"
b
"
p1ai
"
b
"
pgbs0dh
"
b
"
q7ce6a
"
b
"
qxa6a
"
b
"
qxam
"
b
"
wgbh1c
"
b
"
wgbl6a
"
b
"
xkc2al3hye2a
"
b
"
y9a3aq
"
b
"
yfro4i67o
"
b
"
ygbi2ammx
"
]
;
static
PUNYCODE_VALUES
:
[
Tld
;
46
]
=
[
Tld
:
:
Korean
Tld
:
:
Western
Tld
:
:
Cyrillic
Tld
:
:
Cyrillic
Tld
:
:
Cyrillic
Tld
:
:
Cyrillic
Tld
:
:
SimplifiedTraditional
Tld
:
:
Cyrillic
Tld
:
:
Eu
Tld
:
:
Simplified
Tld
:
:
Simplified
Tld
:
:
Western
Tld
:
:
Cyrillic
Tld
:
:
TraditionalSimplified
Tld
:
:
Traditional
Tld
:
:
Traditional
Tld
:
:
Cyrillic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
WesternArabic
Tld
:
:
TraditionalSimplified
Tld
:
:
WesternCyrillic
Tld
:
:
Thai
Tld
:
:
Arabic
Tld
:
:
Cyrillic
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Eu
Tld
:
:
Greek
Tld
:
:
Arabic
Tld
:
:
Arabic
Tld
:
:
Western
Tld
:
:
WesternCyrillic
Tld
:
:
SimplifiedTraditional
Tld
:
:
Arabic
]
;
