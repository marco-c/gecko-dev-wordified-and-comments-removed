#
[
macro_export
]
macro_rules
!
lucet_hostcalls
{
{
(
(
#
[
attr
:
meta
]
)
*
pub
unsafe
extern
"
C
"
fn
name
:
ident
(
&
mut
vmctx
:
ident
(
arg
:
ident
:
arg_ty
:
ty
)
*
)
-
>
ret_ty
:
ty
{
(
body
:
tt
)
*
}
)
*
}
=
>
{
(
(
#
[
attr
]
)
*
pub
unsafe
extern
"
C
"
fn
name
(
vmctx_raw
:
*
mut
crate
:
:
vmctx
:
:
lucet_vmctx
(
arg
:
arg_ty
)
*
)
-
>
ret_ty
{
#
[
inline
(
always
)
]
unsafe
fn
hostcall_impl
(
vmctx
:
&
mut
crate
:
:
vmctx
:
:
Vmctx
(
arg
:
arg_ty
)
*
)
-
>
ret_ty
{
(
body
)
*
}
let
res
=
std
:
:
panic
:
:
catch_unwind
(
move
|
|
{
hostcall_impl
(
&
mut
crate
:
:
vmctx
:
:
Vmctx
:
:
from_raw
(
vmctx_raw
)
(
arg
)
*
)
}
)
;
match
res
{
Ok
(
res
)
=
>
res
Err
(
e
)
=
>
{
match
e
.
downcast
:
:
<
crate
:
:
instance
:
:
TerminationDetails
>
(
)
{
Ok
(
details
)
=
>
{
let
mut
vmctx
=
crate
:
:
vmctx
:
:
Vmctx
:
:
from_raw
(
vmctx_raw
)
;
vmctx
.
terminate_no_unwind
(
*
details
)
}
Err
(
e
)
=
>
std
:
:
panic
:
:
resume_unwind
(
e
)
}
}
}
}
)
*
}
}
#
[
macro_export
]
macro_rules
!
lucet_hostcall_terminate
{
(
)
=
>
{
lucet_hostcall_terminate
!
(
"
lucet_hostcall_terminate
"
)
}
;
(
payload
:
expr
)
=
>
{
panic
!
(
crate
:
:
instance
:
:
TerminationDetails
:
:
provide
(
payload
)
)
}
;
(
payload
:
expr
)
=
>
{
lucet_hostcall_terminate
!
(
payload
)
}
;
(
fmt
:
expr
(
arg
:
tt
)
+
)
=
>
{
lucet_hostcall_terminate
!
(
format
!
(
fmt
(
arg
)
+
)
)
}
;
}
