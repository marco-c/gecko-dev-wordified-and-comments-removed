#
!
[
allow
(
clippy
:
:
exhaustive_structs
clippy
:
:
exhaustive_enums
)
]
mod
lstm
;
pub
use
lstm
:
:
*
;
#
[
cfg
(
feature
=
"
datagen
"
)
]
pub
use
crate
:
:
rule_segmenter
:
:
RuleStatusType
;
use
icu_collections
:
:
codepointtrie
:
:
CodePointTrie
;
use
icu_provider
:
:
prelude
:
:
*
;
use
zerovec
:
:
ZeroVec
;
#
[
cfg
(
feature
=
"
compiled_data
"
)
]
#
[
derive
(
Debug
)
]
pub
struct
Baked
;
#
[
cfg
(
feature
=
"
compiled_data
"
)
]
const
_
:
(
)
=
{
pub
mod
icu
{
pub
use
crate
as
segmenter
;
pub
use
icu_collections
as
collections
;
}
icu_segmenter_data
:
:
make_provider
!
(
Baked
)
;
icu_segmenter_data
:
:
impl_segmenter_dictionary_w_auto_v1
!
(
Baked
)
;
icu_segmenter_data
:
:
impl_segmenter_dictionary_wl_ext_v1
!
(
Baked
)
;
icu_segmenter_data
:
:
impl_segmenter_grapheme_v1
!
(
Baked
)
;
icu_segmenter_data
:
:
impl_segmenter_line_v1
!
(
Baked
)
;
#
[
cfg
(
feature
=
"
lstm
"
)
]
icu_segmenter_data
:
:
impl_segmenter_lstm_wl_auto_v1
!
(
Baked
)
;
icu_segmenter_data
:
:
impl_segmenter_sentence_v1
!
(
Baked
)
;
icu_segmenter_data
:
:
impl_segmenter_word_v1
!
(
Baked
)
;
}
;
#
[
cfg
(
feature
=
"
datagen
"
)
]
pub
const
KEYS
:
&
[
DataKey
]
=
&
[
DictionaryForWordLineExtendedV1Marker
:
:
KEY
DictionaryForWordOnlyAutoV1Marker
:
:
KEY
GraphemeClusterBreakDataV1Marker
:
:
KEY
LineBreakDataV1Marker
:
:
KEY
LstmForWordLineAutoV1Marker
:
:
KEY
SentenceBreakDataV1Marker
:
:
KEY
WordBreakDataV1Marker
:
:
KEY
]
;
#
[
icu_provider
:
:
data_struct
(
marker
(
LineBreakDataV1Marker
"
segmenter
/
line
1
"
singleton
)
marker
(
WordBreakDataV1Marker
"
segmenter
/
word
1
"
singleton
)
marker
(
GraphemeClusterBreakDataV1Marker
"
segmenter
/
grapheme
1
"
singleton
)
marker
(
SentenceBreakDataV1Marker
"
segmenter
/
sentence
1
"
singleton
)
)
]
#
[
derive
(
Debug
PartialEq
Clone
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_segmenter
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
pub
struct
RuleBreakDataV1
<
'
data
>
{
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
property_table
:
RuleBreakPropertyTable
<
'
data
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
break_state_table
:
RuleBreakStateTable
<
'
data
>
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
rule_status_table
:
RuleStatusTable
<
'
data
>
pub
property_count
:
u8
pub
last_codepoint_property
:
i8
pub
sot_property
:
u8
pub
eot_property
:
u8
pub
complex_property
:
u8
}
#
[
derive
(
Debug
PartialEq
Clone
yoke
:
:
Yokeable
zerofrom
:
:
ZeroFrom
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_segmenter
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
pub
struct
RuleBreakPropertyTable
<
'
data
>
(
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
CodePointTrie
<
'
data
u8
>
)
;
#
[
derive
(
Debug
PartialEq
Clone
yoke
:
:
Yokeable
zerofrom
:
:
ZeroFrom
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_segmenter
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
pub
struct
RuleBreakStateTable
<
'
data
>
(
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
ZeroVec
<
'
data
i8
>
)
;
#
[
derive
(
Debug
PartialEq
Clone
yoke
:
:
Yokeable
zerofrom
:
:
ZeroFrom
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_segmenter
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
pub
struct
RuleStatusTable
<
'
data
>
(
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
ZeroVec
<
'
data
u8
>
)
;
#
[
icu_provider
:
:
data_struct
(
DictionaryForWordOnlyAutoV1Marker
=
"
segmenter
/
dictionary
/
w_auto
1
"
DictionaryForWordLineExtendedV1Marker
=
"
segmenter
/
dictionary
/
wl_ext
1
"
)
]
#
[
derive
(
Debug
PartialEq
Clone
)
]
#
[
cfg_attr
(
feature
=
"
datagen
"
derive
(
serde
:
:
Serialize
databake
:
:
Bake
)
databake
(
path
=
icu_segmenter
:
:
provider
)
)
]
#
[
cfg_attr
(
feature
=
"
serde
"
derive
(
serde
:
:
Deserialize
)
)
]
pub
struct
UCharDictionaryBreakDataV1
<
'
data
>
{
#
[
cfg_attr
(
feature
=
"
serde
"
serde
(
borrow
)
)
]
pub
trie_data
:
ZeroVec
<
'
data
u16
>
}
pub
(
crate
)
struct
UCharDictionaryBreakDataV1Marker
;
impl
DataMarker
for
UCharDictionaryBreakDataV1Marker
{
type
Yokeable
=
UCharDictionaryBreakDataV1
<
'
static
>
;
}
