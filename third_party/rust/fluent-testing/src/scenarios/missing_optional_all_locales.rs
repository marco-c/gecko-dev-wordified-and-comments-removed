use
fluent_fallback
:
:
types
:
:
{
ResourceType
ToResourceId
}
;
use
super
:
:
structs
:
:
*
;
use
crate
:
:
queries
;
pub
fn
get_scenario
(
)
-
>
Scenario
{
Scenario
:
:
new
(
"
missing_optional_all_locales
"
vec
!
[
FileSource
:
:
new
(
"
browser
"
"
browser
/
{
locale
}
/
"
vec
!
[
"
en
-
US
"
"
pl
"
]
)
FileSource
:
:
new
(
"
missing
"
"
missing
-
resource
/
{
locale
}
/
"
vec
!
[
"
en
-
US
"
"
pl
"
]
)
]
vec
!
[
"
en
-
US
"
"
pl
"
]
vec
!
[
"
browser
/
sanitize
.
ftl
"
.
into
(
)
"
missing
/
missing
-
one
.
ftl
"
.
to_resource_id
(
ResourceType
:
:
Optional
)
"
missing
/
missing
-
all
.
ftl
"
.
to_resource_id
(
ResourceType
:
:
Optional
)
]
queries
!
[
(
"
history
-
section
-
label
"
"
History
"
ExceptionalContext
:
:
None
)
(
"
missing
-
one
"
"
zaginiony
"
ExceptionalContext
:
:
OptionalResourceMissingFromLocale
)
(
"
missing
-
all
"
"
missing
-
all
"
ExceptionalContext
:
:
OptionalResourceMissingFromAllLocales
)
]
)
}
