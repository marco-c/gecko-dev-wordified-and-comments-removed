#
[
cfg
(
doc
)
]
use
crate
:
:
{
maps
script
GeneralCategory
GeneralCategoryGroup
Script
}
;
#
[
allow
(
clippy
:
:
exhaustive_structs
)
]
#
[
derive
(
Copy
Clone
PartialEq
Eq
PartialOrd
Ord
Hash
Debug
)
]
pub
struct
UnicodeProperty
(
pub
u32
)
;
#
[
allow
(
non_upper_case_globals
)
]
#
[
allow
(
unused
)
]
impl
UnicodeProperty
{
pub
const
Alphabetic
:
Self
=
UnicodeProperty
(
0
)
;
pub
const
AsciiHexDigit
:
Self
=
UnicodeProperty
(
1
)
;
pub
const
BidiControl
:
Self
=
UnicodeProperty
(
2
)
;
pub
const
BidiMirrored
:
Self
=
UnicodeProperty
(
3
)
;
pub
const
Dash
:
Self
=
UnicodeProperty
(
4
)
;
pub
const
DefaultIgnorableCodePoint
:
Self
=
UnicodeProperty
(
5
)
;
pub
const
Deprecated
:
Self
=
UnicodeProperty
(
6
)
;
pub
const
Diacritic
:
Self
=
UnicodeProperty
(
7
)
;
pub
const
Extender
:
Self
=
UnicodeProperty
(
8
)
;
pub
const
FullCompositionExclusion
:
Self
=
UnicodeProperty
(
9
)
;
pub
const
GraphemeBase
:
Self
=
UnicodeProperty
(
10
)
;
pub
const
GraphemeExtend
:
Self
=
UnicodeProperty
(
11
)
;
pub
const
GraphemeLink
:
Self
=
UnicodeProperty
(
12
)
;
pub
const
HexDigit
:
Self
=
UnicodeProperty
(
13
)
;
pub
const
Hyphen
:
Self
=
UnicodeProperty
(
14
)
;
pub
const
IdContinue
:
Self
=
UnicodeProperty
(
15
)
;
pub
const
IdStart
:
Self
=
UnicodeProperty
(
16
)
;
pub
const
Ideographic
:
Self
=
UnicodeProperty
(
17
)
;
pub
const
IdsBinaryOperator
:
Self
=
UnicodeProperty
(
18
)
;
pub
const
IdsTrinaryOperator
:
Self
=
UnicodeProperty
(
19
)
;
pub
const
JoinControl
:
Self
=
UnicodeProperty
(
20
)
;
pub
const
LogicalOrderException
:
Self
=
UnicodeProperty
(
21
)
;
pub
const
Lowercase
:
Self
=
UnicodeProperty
(
22
)
;
pub
const
Math
:
Self
=
UnicodeProperty
(
23
)
;
pub
const
NoncharacterCodePoint
:
Self
=
UnicodeProperty
(
24
)
;
pub
const
QuotationMark
:
Self
=
UnicodeProperty
(
25
)
;
pub
const
Radical
:
Self
=
UnicodeProperty
(
26
)
;
pub
const
SoftDotted
:
Self
=
UnicodeProperty
(
27
)
;
pub
const
TerminalPunctuation
:
Self
=
UnicodeProperty
(
28
)
;
pub
const
UnifiedIdeograph
:
Self
=
UnicodeProperty
(
29
)
;
pub
const
Uppercase
:
Self
=
UnicodeProperty
(
30
)
;
pub
const
WhiteSpace
:
Self
=
UnicodeProperty
(
31
)
;
pub
const
XidContinue
:
Self
=
UnicodeProperty
(
32
)
;
pub
const
XidStart
:
Self
=
UnicodeProperty
(
33
)
;
pub
const
CaseSensitive
:
Self
=
UnicodeProperty
(
34
)
;
pub
const
SentenceTerminal
:
Self
=
UnicodeProperty
(
35
)
;
pub
const
VariationSelector
:
Self
=
UnicodeProperty
(
36
)
;
pub
const
NfdInert
:
Self
=
UnicodeProperty
(
37
)
;
pub
const
NfkdInert
:
Self
=
UnicodeProperty
(
38
)
;
pub
const
NfcInert
:
Self
=
UnicodeProperty
(
39
)
;
pub
const
NfkcInert
:
Self
=
UnicodeProperty
(
40
)
;
pub
const
SegmentStarter
:
Self
=
UnicodeProperty
(
41
)
;
pub
const
PatternSyntax
:
Self
=
UnicodeProperty
(
42
)
;
pub
const
PatternWhiteSpace
:
Self
=
UnicodeProperty
(
43
)
;
pub
const
Alnum
:
Self
=
UnicodeProperty
(
44
)
;
pub
const
Blank
:
Self
=
UnicodeProperty
(
45
)
;
pub
const
Graph
:
Self
=
UnicodeProperty
(
46
)
;
pub
const
Print
:
Self
=
UnicodeProperty
(
47
)
;
pub
const
XDigit
:
Self
=
UnicodeProperty
(
48
)
;
pub
const
Cased
:
Self
=
UnicodeProperty
(
49
)
;
pub
const
CaseIgnorable
:
Self
=
UnicodeProperty
(
50
)
;
pub
const
ChangesWhenLowercased
:
Self
=
UnicodeProperty
(
51
)
;
pub
const
ChangesWhenUppercased
:
Self
=
UnicodeProperty
(
52
)
;
pub
const
ChangesWhenTitlecased
:
Self
=
UnicodeProperty
(
53
)
;
pub
const
ChangesWhenCasefolded
:
Self
=
UnicodeProperty
(
54
)
;
pub
const
ChangesWhenCasemapped
:
Self
=
UnicodeProperty
(
55
)
;
pub
const
ChangesWhenNfkcCasefolded
:
Self
=
UnicodeProperty
(
56
)
;
pub
const
Emoji
:
Self
=
UnicodeProperty
(
57
)
;
pub
const
EmojiPresentation
:
Self
=
UnicodeProperty
(
58
)
;
pub
const
EmojiModifier
:
Self
=
UnicodeProperty
(
59
)
;
pub
const
EmojiModifierBase
:
Self
=
UnicodeProperty
(
60
)
;
pub
const
EmojiComponent
:
Self
=
UnicodeProperty
(
61
)
;
pub
const
RegionalIndicator
:
Self
=
UnicodeProperty
(
62
)
;
pub
const
PrependedConcatenationMark
:
Self
=
UnicodeProperty
(
63
)
;
pub
const
ExtendedPictographic
:
Self
=
UnicodeProperty
(
64
)
;
pub
const
BasicEmoji
:
Self
=
UnicodeProperty
(
65
)
;
pub
const
EmojiKeycapSequence
:
Self
=
UnicodeProperty
(
66
)
;
pub
const
RgiEmojiModifierSequence
:
Self
=
UnicodeProperty
(
67
)
;
pub
const
RgiEmojiFlagSequence
:
Self
=
UnicodeProperty
(
68
)
;
pub
const
RgiEmojiTagSequence
:
Self
=
UnicodeProperty
(
69
)
;
pub
const
RgiEmojiZWJSequence
:
Self
=
UnicodeProperty
(
70
)
;
pub
const
RgiEmoji
:
Self
=
UnicodeProperty
(
71
)
;
const
BINARY_MAX
:
Self
=
Self
:
:
RgiEmoji
;
pub
const
BidiClass
:
Self
=
UnicodeProperty
(
0x1000
)
;
pub
const
Block
:
Self
=
UnicodeProperty
(
0x1001
)
;
pub
const
CombiningClass
:
Self
=
UnicodeProperty
(
0x1002
)
;
pub
const
DecompositionType
:
Self
=
UnicodeProperty
(
0x1003
)
;
pub
const
EastAsianWidth
:
Self
=
UnicodeProperty
(
0x1004
)
;
pub
const
GeneralCategory
:
Self
=
UnicodeProperty
(
0x1005
)
;
pub
const
JoiningGroup
:
Self
=
UnicodeProperty
(
0x1006
)
;
pub
const
JoiningType
:
Self
=
UnicodeProperty
(
0x1007
)
;
pub
const
LineBreak
:
Self
=
UnicodeProperty
(
0x1008
)
;
pub
const
NumericType
:
Self
=
UnicodeProperty
(
0x1009
)
;
pub
const
Script
:
Self
=
UnicodeProperty
(
0x100A
)
;
pub
const
HangulSyllableType
:
Self
=
UnicodeProperty
(
0x100B
)
;
pub
const
NFDQuickCheck
:
Self
=
UnicodeProperty
(
0x100C
)
;
pub
const
NFKDQuickCheck
:
Self
=
UnicodeProperty
(
0x100D
)
;
pub
const
NFCQuickCheck
:
Self
=
UnicodeProperty
(
0x100E
)
;
pub
const
NFKCQuickCheck
:
Self
=
UnicodeProperty
(
0x100F
)
;
pub
const
LeadCanonicalCombiningClass
:
Self
=
UnicodeProperty
(
0x1010
)
;
pub
const
TrailCanonicalCombiningClass
:
Self
=
UnicodeProperty
(
0x1011
)
;
pub
const
GraphemeClusterBreak
:
Self
=
UnicodeProperty
(
0x1012
)
;
pub
const
SentenceBreak
:
Self
=
UnicodeProperty
(
0x1013
)
;
pub
const
WordBreak
:
Self
=
UnicodeProperty
(
0x1014
)
;
pub
const
BidiPairedBracketType
:
Self
=
UnicodeProperty
(
0x1015
)
;
pub
const
IndicPositionalCategory
:
Self
=
UnicodeProperty
(
0x1016
)
;
pub
const
IndicSyllabicCategory
:
Self
=
UnicodeProperty
(
0x1017
)
;
pub
const
VerticalOrientation
:
Self
=
UnicodeProperty
(
0x1018
)
;
const
ENUMERATED_MAX
:
Self
=
Self
:
:
VerticalOrientation
;
pub
const
GeneralCategoryMask
:
Self
=
UnicodeProperty
(
0x2000
)
;
pub
const
NumericValue
:
Self
=
UnicodeProperty
(
0x3000
)
;
pub
const
Age
:
Self
=
UnicodeProperty
(
0x4000
)
;
pub
const
BidiMirroringGlyph
:
Self
=
UnicodeProperty
(
0x4001
)
;
pub
const
CaseFolding
:
Self
=
UnicodeProperty
(
0x4002
)
;
pub
const
ISOComment
:
Self
=
UnicodeProperty
(
0x4003
)
;
pub
const
LowercaseMapping
:
Self
=
UnicodeProperty
(
0x4004
)
;
pub
const
Name
:
Self
=
UnicodeProperty
(
0x4005
)
;
pub
const
SimpleCaseFolding
:
Self
=
UnicodeProperty
(
0x4006
)
;
pub
const
SimpleLowercaseMapping
:
Self
=
UnicodeProperty
(
0x4007
)
;
pub
const
SimpleTitlecaseMapping
:
Self
=
UnicodeProperty
(
0x4008
)
;
pub
const
SimpleUppercaseMapping
:
Self
=
UnicodeProperty
(
0x4009
)
;
pub
const
TitlecaseMapping
:
Self
=
UnicodeProperty
(
0x400A
)
;
pub
const
Unicode1_Name
:
Self
=
UnicodeProperty
(
0x400B
)
;
pub
const
UppercaseMapping
:
Self
=
UnicodeProperty
(
0x400C
)
;
pub
const
BidiPairedBracket
:
Self
=
UnicodeProperty
(
0x400D
)
;
const
STRING_MAX
:
Self
=
Self
:
:
BidiPairedBracket
;
pub
const
ScriptExtensions
:
Self
=
UnicodeProperty
(
0x7000
)
;
}
#
[
allow
(
unused
)
]
impl
UnicodeProperty
{
pub
fn
parse_ecma262_name
(
name
:
&
str
)
-
>
Option
<
Self
>
{
let
prop
=
match
name
{
"
General_Category
"
|
"
gc
"
=
>
Self
:
:
GeneralCategory
"
Script
"
|
"
sc
"
=
>
Self
:
:
Script
"
Script_Extensions
"
|
"
scx
"
=
>
Self
:
:
ScriptExtensions
"
ASCII_Hex_Digit
"
|
"
AHex
"
=
>
Self
:
:
AsciiHexDigit
"
Alphabetic
"
|
"
Alpha
"
=
>
Self
:
:
Alphabetic
"
Bidi_Control
"
|
"
Bidi_C
"
=
>
Self
:
:
BidiControl
"
Bidi_Mirrored
"
|
"
Bidi_M
"
=
>
Self
:
:
BidiMirrored
"
Case_Ignorable
"
|
"
CI
"
=
>
Self
:
:
CaseIgnorable
"
Cased
"
=
>
Self
:
:
Cased
"
Changes_When_Casefolded
"
|
"
CWCF
"
=
>
Self
:
:
ChangesWhenCasefolded
"
Changes_When_Casemapped
"
|
"
CWCM
"
=
>
Self
:
:
ChangesWhenCasemapped
"
Changes_When_Lowercased
"
|
"
CWL
"
=
>
Self
:
:
ChangesWhenLowercased
"
Changes_When_NFKC_Casefolded
"
|
"
CWKCF
"
=
>
Self
:
:
ChangesWhenNfkcCasefolded
"
Changes_When_Titlecased
"
|
"
CWT
"
=
>
Self
:
:
ChangesWhenTitlecased
"
Changes_When_Uppercased
"
|
"
CWU
"
=
>
Self
:
:
ChangesWhenUppercased
"
Dash
"
=
>
Self
:
:
Dash
"
Default_Ignorable_Code_Point
"
|
"
DI
"
=
>
Self
:
:
DefaultIgnorableCodePoint
"
Deprecated
"
|
"
Dep
"
=
>
Self
:
:
Deprecated
"
Diacritic
"
|
"
Dia
"
=
>
Self
:
:
Diacritic
"
Emoji
"
=
>
Self
:
:
Emoji
"
Emoji_Component
"
|
"
EComp
"
=
>
Self
:
:
EmojiComponent
"
Emoji_Modifier
"
|
"
EMod
"
=
>
Self
:
:
EmojiModifier
"
Emoji_Modifier_Base
"
|
"
EBase
"
=
>
Self
:
:
EmojiModifierBase
"
Emoji_Presentation
"
|
"
EPres
"
=
>
Self
:
:
EmojiPresentation
"
Extended_Pictographic
"
|
"
ExtPict
"
=
>
Self
:
:
ExtendedPictographic
"
Extender
"
|
"
Ext
"
=
>
Self
:
:
Extender
"
Grapheme_Base
"
|
"
Gr_Base
"
=
>
Self
:
:
GraphemeBase
"
Grapheme_Extend
"
|
"
Gr_Ext
"
=
>
Self
:
:
GraphemeExtend
"
Hex_Digit
"
|
"
Hex
"
=
>
Self
:
:
HexDigit
"
IDS_Binary_Operator
"
|
"
IDSB
"
=
>
Self
:
:
IdsBinaryOperator
"
IDS_Trinary_Operator
"
|
"
IDST
"
=
>
Self
:
:
IdsTrinaryOperator
"
ID_Continue
"
|
"
IDC
"
=
>
Self
:
:
IdContinue
"
ID_Start
"
|
"
IDS
"
=
>
Self
:
:
IdStart
"
Ideographic
"
|
"
Ideo
"
=
>
Self
:
:
Ideographic
"
Join_Control
"
|
"
Join_C
"
=
>
Self
:
:
JoinControl
"
Logical_Order_Exception
"
|
"
LOE
"
=
>
Self
:
:
LogicalOrderException
"
Lowercase
"
|
"
Lower
"
=
>
Self
:
:
Lowercase
"
Math
"
=
>
Self
:
:
Math
"
Noncharacter_Code_Point
"
|
"
NChar
"
=
>
Self
:
:
NoncharacterCodePoint
"
Pattern_Syntax
"
|
"
Pat_Syn
"
=
>
Self
:
:
PatternSyntax
"
Pattern_White_Space
"
|
"
Pat_WS
"
=
>
Self
:
:
PatternWhiteSpace
"
Quotation_Mark
"
|
"
QMark
"
=
>
Self
:
:
QuotationMark
"
Radical
"
=
>
Self
:
:
Radical
"
Regional_Indicator
"
|
"
RI
"
=
>
Self
:
:
RegionalIndicator
"
Sentence_Terminal
"
|
"
STerm
"
=
>
Self
:
:
SentenceTerminal
"
Soft_Dotted
"
|
"
SD
"
=
>
Self
:
:
SoftDotted
"
Terminal_Punctuation
"
|
"
Term
"
=
>
Self
:
:
TerminalPunctuation
"
Unified_Ideograph
"
|
"
UIdeo
"
=
>
Self
:
:
UnifiedIdeograph
"
Uppercase
"
|
"
Upper
"
=
>
Self
:
:
Uppercase
"
Variation_Selector
"
|
"
VS
"
=
>
Self
:
:
VariationSelector
"
White_Space
"
|
"
space
"
=
>
Self
:
:
WhiteSpace
"
XID_Continue
"
|
"
XIDC
"
=
>
Self
:
:
XidContinue
"
XID_Start
"
|
"
XIDS
"
=
>
Self
:
:
XidStart
_
=
>
return
None
}
;
Some
(
prop
)
}
}
