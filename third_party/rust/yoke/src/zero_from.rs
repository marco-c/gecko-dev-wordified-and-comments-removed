use
crate
:
:
Yoke
;
use
crate
:
:
Yokeable
;
use
core
:
:
ops
:
:
Deref
;
use
stable_deref_trait
:
:
StableDeref
;
use
crate
:
:
ZeroFrom
;
impl
<
Y
C
>
Yoke
<
Y
C
>
where
Y
:
for
<
'
a
>
Yokeable
<
'
a
>
for
<
'
a
>
<
Y
as
Yokeable
<
'
a
>
>
:
:
Output
:
ZeroFrom
<
'
a
<
C
as
Deref
>
:
:
Target
>
C
:
StableDeref
+
Deref
<
C
as
Deref
>
:
:
Target
:
'
static
{
pub
fn
attach_to_zero_copy_cart
(
cart
:
C
)
-
>
Self
{
Yoke
:
:
<
Y
C
>
:
:
attach_to_cart
(
cart
|
c
|
<
Y
as
Yokeable
>
:
:
Output
:
:
zero_from
(
c
)
)
}
}
