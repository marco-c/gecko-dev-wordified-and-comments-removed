use
crate
:
:
parser_tables_generated
:
:
TerminalId
;
use
ast
:
:
source_atom_set
:
:
SourceAtomSetIndex
;
use
ast
:
:
source_slice_list
:
:
SourceSliceIndex
;
use
ast
:
:
SourceLocation
;
#
[
derive
(
Clone
Debug
PartialEq
)
]
pub
enum
TokenValue
{
None
Number
(
f64
)
Atom
(
SourceAtomSetIndex
)
Slice
(
SourceSliceIndex
)
}
impl
TokenValue
{
pub
fn
as_number
(
&
self
)
-
>
f64
{
match
self
{
Self
:
:
Number
(
n
)
=
>
*
n
_
=
>
panic
!
(
"
expected
number
"
)
}
}
pub
fn
as_atom
(
&
self
)
-
>
SourceAtomSetIndex
{
match
self
{
Self
:
:
Atom
(
index
)
=
>
*
index
_
=
>
panic
!
(
"
expected
atom
"
)
}
}
pub
fn
as_slice
(
&
self
)
-
>
SourceSliceIndex
{
match
self
{
Self
:
:
Slice
(
index
)
=
>
*
index
_
=
>
panic
!
(
"
expected
atom
"
)
}
}
}
#
[
derive
(
Clone
Debug
PartialEq
)
]
pub
struct
Token
{
pub
terminal_id
:
TerminalId
pub
loc
:
SourceLocation
pub
is_on_new_line
:
bool
pub
value
:
TokenValue
}
impl
Token
{
pub
fn
basic_token
(
terminal_id
:
TerminalId
loc
:
SourceLocation
)
-
>
Self
{
Self
{
terminal_id
loc
is_on_new_line
:
false
value
:
TokenValue
:
:
None
}
}
}
