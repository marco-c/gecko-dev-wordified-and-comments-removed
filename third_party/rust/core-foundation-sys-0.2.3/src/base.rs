use
libc
:
:
{
c_uint
c_long
c_ulong
c_void
}
;
pub
type
Boolean
=
u8
;
pub
type
CFIndex
=
c_long
;
pub
type
mach_port_t
=
c_uint
;
pub
type
CFAllocatorRef
=
*
const
c_void
;
pub
type
CFNullRef
=
*
const
c_void
;
pub
type
CFHashCode
=
c_ulong
;
pub
type
CFTypeID
=
c_ulong
;
pub
type
CFTypeRef
=
*
const
c_void
;
pub
type
CFOptionFlags
=
u32
;
pub
type
OSStatus
=
i32
;
#
[
repr
(
C
)
]
#
[
derive
(
Clone
Copy
)
]
pub
struct
CFRange
{
pub
location
:
CFIndex
pub
length
:
CFIndex
}
impl
CFRange
{
pub
fn
init
(
location
:
CFIndex
length
:
CFIndex
)
-
>
CFRange
{
CFRange
{
location
:
location
length
:
length
}
}
}
extern
{
pub
static
kCFAllocatorDefault
:
CFAllocatorRef
;
pub
static
kCFAllocatorSystemDefault
:
CFAllocatorRef
;
pub
static
kCFAllocatorMalloc
:
CFAllocatorRef
;
pub
static
kCFAllocatorMallocZone
:
CFAllocatorRef
;
pub
static
kCFAllocatorNull
:
CFAllocatorRef
;
pub
static
kCFAllocatorUseContext
:
CFAllocatorRef
;
pub
static
kCFNull
:
CFNullRef
;
pub
fn
CFEqual
(
cf1
:
CFTypeRef
cf2
:
CFTypeRef
)
-
>
Boolean
;
pub
fn
CFGetRetainCount
(
cf
:
CFTypeRef
)
-
>
CFIndex
;
pub
fn
CFGetTypeID
(
cf
:
CFTypeRef
)
-
>
CFTypeID
;
pub
fn
CFHash
(
cf
:
CFTypeRef
)
-
>
CFHashCode
;
pub
fn
CFRelease
(
cf
:
CFTypeRef
)
;
pub
fn
CFRetain
(
cf
:
CFTypeRef
)
-
>
CFTypeRef
;
pub
fn
CFShow
(
obj
:
CFTypeRef
)
;
}
