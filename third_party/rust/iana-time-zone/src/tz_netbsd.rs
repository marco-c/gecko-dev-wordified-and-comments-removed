use
std
:
:
fs
:
:
read_link
;
pub
(
crate
)
fn
get_timezone_inner
(
)
-
>
Result
<
String
crate
:
:
GetTimezoneError
>
{
const
PREFIXES
:
&
[
&
str
]
=
&
[
"
/
usr
/
share
/
zoneinfo
/
"
"
.
.
/
usr
/
share
/
zoneinfo
/
"
]
;
let
mut
s
=
read_link
(
"
/
etc
/
localtime
"
)
?
.
into_os_string
(
)
.
into_string
(
)
.
map_err
(
|
_
|
crate
:
:
GetTimezoneError
:
:
FailedParsingString
)
?
;
for
&
prefix
in
PREFIXES
{
if
s
.
starts_with
(
prefix
)
{
s
.
replace_range
(
.
.
prefix
.
len
(
)
"
"
)
;
return
Ok
(
s
)
;
}
}
Err
(
crate
:
:
GetTimezoneError
:
:
FailedParsingString
)
}
