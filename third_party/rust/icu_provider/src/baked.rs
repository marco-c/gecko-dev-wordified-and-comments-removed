pub
mod
zerotrie
;
use
crate
:
:
prelude
:
:
{
DataIdentifierBorrowed
DataMarker
DataPayload
}
;
pub
trait
DataStore
<
M
:
DataMarker
>
:
private
:
:
Sealed
{
fn
get
(
&
self
req
:
DataIdentifierBorrowed
attributes_prefix_match
:
bool
)
-
>
Option
<
DataPayload
<
M
>
>
;
#
[
cfg
(
feature
=
"
alloc
"
)
]
type
IterReturn
:
Iterator
<
Item
=
crate
:
:
prelude
:
:
DataIdentifierCow
<
'
static
>
>
;
#
[
cfg
(
feature
=
"
alloc
"
)
]
fn
iter
(
&
'
static
self
)
-
>
Self
:
:
IterReturn
;
}
pub
(
crate
)
mod
private
{
pub
trait
Sealed
{
}
}
