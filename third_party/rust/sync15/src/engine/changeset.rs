use
crate
:
:
bso
:
:
{
IncomingBso
OutgoingBso
}
;
use
crate
:
:
{
CollectionName
ServerTimestamp
}
;
#
[
derive
(
Debug
)
]
pub
struct
IncomingChangeset
{
pub
changes
:
Vec
<
IncomingBso
>
pub
timestamp
:
ServerTimestamp
pub
collection
:
CollectionName
}
impl
IncomingChangeset
{
#
[
inline
]
pub
fn
new
(
collection
:
CollectionName
timestamp
:
ServerTimestamp
)
-
>
Self
{
Self
:
:
new_with_changes
(
collection
timestamp
Vec
:
:
new
(
)
)
}
#
[
inline
]
pub
fn
new_with_changes
(
collection
:
CollectionName
timestamp
:
ServerTimestamp
changes
:
Vec
<
IncomingBso
>
)
-
>
Self
{
Self
{
changes
timestamp
collection
}
}
}
#
[
derive
(
Debug
)
]
pub
struct
OutgoingChangeset
{
pub
changes
:
Vec
<
OutgoingBso
>
pub
collection
:
CollectionName
}
impl
OutgoingChangeset
{
#
[
inline
]
pub
fn
new
(
collection
:
CollectionName
changes
:
Vec
<
OutgoingBso
>
)
-
>
Self
{
Self
{
collection
changes
}
}
}
