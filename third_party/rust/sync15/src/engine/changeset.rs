use
crate
:
:
bso
:
:
{
IncomingBso
OutgoingBso
}
;
use
crate
:
:
ServerTimestamp
;
#
[
derive
(
Debug
Clone
)
]
pub
struct
RecordChangeset
<
T
>
{
pub
changes
:
Vec
<
T
>
pub
timestamp
:
ServerTimestamp
pub
collection
:
std
:
:
borrow
:
:
Cow
<
'
static
str
>
}
pub
type
IncomingChangeset
=
RecordChangeset
<
IncomingBso
>
;
pub
type
OutgoingChangeset
=
RecordChangeset
<
OutgoingBso
>
;
impl
<
T
>
RecordChangeset
<
T
>
{
#
[
inline
]
pub
fn
new
(
collection
:
impl
Into
<
std
:
:
borrow
:
:
Cow
<
'
static
str
>
>
timestamp
:
ServerTimestamp
)
-
>
RecordChangeset
<
T
>
{
Self
:
:
new_with_changes
(
collection
timestamp
Vec
:
:
new
(
)
)
}
#
[
inline
]
pub
fn
new_with_changes
(
collection
:
impl
Into
<
std
:
:
borrow
:
:
Cow
<
'
static
str
>
>
timestamp
:
ServerTimestamp
changes
:
Vec
<
T
>
)
-
>
RecordChangeset
<
T
>
{
RecordChangeset
{
changes
timestamp
collection
:
collection
.
into
(
)
}
}
}
