use
std
:
:
collections
:
:
HashSet
;
mod
engine
;
mod
record
;
mod
ser
;
use
anyhow
:
:
Result
;
pub
use
engine
:
:
Engine
;
pub
use
sync15_traits
:
:
client
:
:
{
ClientData
DeviceType
RemoteClient
}
;
const
CLIENTS_TTL
:
u32
=
1_814_400
;
pub
(
crate
)
const
CLIENTS_TTL_REFRESH
:
u64
=
604_800
;
pub
trait
CommandProcessor
{
fn
settings
(
&
self
)
-
>
&
Settings
;
fn
fetch_outgoing_commands
(
&
self
)
-
>
Result
<
HashSet
<
Command
>
>
;
fn
apply_incoming_command
(
&
self
command
:
Command
)
-
>
Result
<
CommandStatus
>
;
}
#
[
derive
(
Clone
Copy
Debug
Eq
Hash
PartialEq
)
]
pub
enum
CommandStatus
{
Applied
Ignored
Unsupported
}
impl
From
<
&
record
:
:
ClientRecord
>
for
RemoteClient
{
fn
from
(
record
:
&
record
:
:
ClientRecord
)
-
>
RemoteClient
{
RemoteClient
{
fxa_device_id
:
record
.
fxa_device_id
.
clone
(
)
device_name
:
record
.
name
.
clone
(
)
device_type
:
record
.
typ
.
as_ref
(
)
.
and_then
(
DeviceType
:
:
try_from_str
)
}
}
}
#
[
derive
(
Clone
Debug
Eq
Hash
PartialEq
)
]
pub
struct
Settings
{
pub
fxa_device_id
:
String
pub
device_name
:
String
pub
device_type
:
DeviceType
}
#
[
derive
(
Clone
Debug
Eq
Hash
Ord
PartialEq
PartialOrd
)
]
pub
enum
Command
{
WipeAll
Wipe
(
String
)
ResetAll
Reset
(
String
)
}
