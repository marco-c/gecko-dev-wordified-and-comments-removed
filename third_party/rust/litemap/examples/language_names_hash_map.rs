#
!
[
no_main
]
icu_benchmark_macros
:
:
static_setup
!
(
)
;
use
icu_locid
:
:
subtags
:
:
Language
;
use
icu_locid
:
:
subtags_language
as
language
;
use
std
:
:
collections
:
:
HashMap
;
const
DATA
:
[
(
Language
&
str
)
;
11
]
=
[
(
language
!
(
"
ar
"
)
"
Arabic
"
)
(
language
!
(
"
bn
"
)
"
Bangla
"
)
(
language
!
(
"
ccp
"
)
"
Chakma
"
)
(
language
!
(
"
en
"
)
"
English
"
)
(
language
!
(
"
es
"
)
"
Spanish
"
)
(
language
!
(
"
fr
"
)
"
French
"
)
(
language
!
(
"
ja
"
)
"
Japanese
"
)
(
language
!
(
"
ru
"
)
"
Russian
"
)
(
language
!
(
"
sr
"
)
"
Serbian
"
)
(
language
!
(
"
th
"
)
"
Thai
"
)
(
language
!
(
"
tr
"
)
"
Turkish
"
)
]
;
#
[
no_mangle
]
fn
main
(
_argc
:
isize
_argv
:
*
const
*
const
u8
)
-
>
isize
{
icu_benchmark_macros
:
:
main_setup
!
(
)
;
let
mut
map
=
HashMap
:
:
new
(
)
;
for
(
lang
name
)
in
DATA
.
iter
(
)
{
map
.
insert
(
lang
name
)
.
ok_or
(
(
)
)
.
unwrap_err
(
)
;
}
assert_eq
!
(
11
map
.
len
(
)
)
;
assert_eq
!
(
Some
(
&
&
"
Thai
"
)
map
.
get
(
&
language
!
(
"
th
"
)
)
)
;
assert_eq
!
(
None
map
.
get
(
&
language
!
(
"
de
"
)
)
)
;
0
}
