use
crate
:
:
Interrupted
;
pub
trait
Interruptee
{
fn
was_interrupted
(
&
self
)
-
>
bool
;
fn
err_if_interrupted
(
&
self
)
-
>
Result
<
(
)
Interrupted
>
{
if
self
.
was_interrupted
(
)
{
return
Err
(
Interrupted
)
;
}
Ok
(
(
)
)
}
}
pub
struct
NeverInterrupts
;
impl
Interruptee
for
NeverInterrupts
{
#
[
inline
]
fn
was_interrupted
(
&
self
)
-
>
bool
{
false
}
}
