#
!
[
allow
(
unknown_lints
)
]
#
!
[
warn
(
rust_2018_idioms
)
]
pub
trait
Interruptee
{
fn
was_interrupted
(
&
self
)
-
>
bool
;
fn
err_if_interrupted
(
&
self
)
-
>
Result
<
(
)
Interrupted
>
{
if
self
.
was_interrupted
(
)
{
return
Err
(
Interrupted
)
;
}
Ok
(
(
)
)
}
}
pub
struct
NeverInterrupts
;
impl
Interruptee
for
NeverInterrupts
{
#
[
inline
]
fn
was_interrupted
(
&
self
)
-
>
bool
{
false
}
}
#
[
derive
(
Debug
Clone
PartialEq
)
]
pub
struct
Interrupted
;
impl
std
:
:
fmt
:
:
Display
for
Interrupted
{
fn
fmt
(
&
self
f
:
&
mut
std
:
:
fmt
:
:
Formatter
<
'
_
>
)
-
>
std
:
:
fmt
:
:
Result
{
f
.
write_str
(
"
The
operation
was
interrupted
"
)
}
}
impl
std
:
:
error
:
:
Error
for
Interrupted
{
}
