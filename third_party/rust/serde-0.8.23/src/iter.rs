use
std
:
:
io
;
use
std
:
:
iter
:
:
Peekable
;
pub
struct
LineColIterator
<
Iter
:
Iterator
<
Item
=
io
:
:
Result
<
u8
>
>
>
{
iter
:
Iter
line
:
usize
col
:
usize
}
impl
<
Iter
:
Iterator
<
Item
=
io
:
:
Result
<
u8
>
>
>
LineColIterator
<
Iter
>
{
pub
fn
new
(
iter
:
Iter
)
-
>
LineColIterator
<
Iter
>
{
LineColIterator
{
iter
:
iter
line
:
1
col
:
0
}
}
pub
fn
line
(
&
self
)
-
>
usize
{
self
.
line
}
pub
fn
col
(
&
self
)
-
>
usize
{
self
.
col
}
pub
fn
get_ref
(
&
self
)
-
>
&
Iter
{
&
self
.
iter
}
pub
fn
get_mut
(
&
mut
self
)
-
>
&
mut
Iter
{
&
mut
self
.
iter
}
pub
fn
into_inner
(
self
)
-
>
Iter
{
self
.
iter
}
}
impl
<
Iter
:
Iterator
<
Item
=
io
:
:
Result
<
u8
>
>
>
LineColIterator
<
Peekable
<
Iter
>
>
{
pub
fn
peek
(
&
mut
self
)
-
>
Option
<
&
io
:
:
Result
<
u8
>
>
{
self
.
iter
.
peek
(
)
}
}
impl
<
Iter
:
Iterator
<
Item
=
io
:
:
Result
<
u8
>
>
>
Iterator
for
LineColIterator
<
Iter
>
{
type
Item
=
io
:
:
Result
<
u8
>
;
fn
next
(
&
mut
self
)
-
>
Option
<
io
:
:
Result
<
u8
>
>
{
match
self
.
iter
.
next
(
)
{
None
=
>
None
Some
(
Ok
(
b
'
\
n
'
)
)
=
>
{
self
.
line
+
=
1
;
self
.
col
=
0
;
Some
(
Ok
(
b
'
\
n
'
)
)
}
Some
(
Ok
(
c
)
)
=
>
{
self
.
col
+
=
1
;
Some
(
Ok
(
c
)
)
}
Some
(
Err
(
e
)
)
=
>
Some
(
Err
(
e
)
)
}
}
}
