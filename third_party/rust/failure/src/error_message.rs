use
core
:
:
fmt
:
:
{
self
Display
Debug
}
;
use
Fail
;
use
Error
;
pub
fn
err_msg
<
D
:
Display
+
Debug
+
Sync
+
Send
+
'
static
>
(
msg
:
D
)
-
>
Error
{
Error
:
:
from
(
ErrorMessage
{
msg
}
)
}
#
[
derive
(
Debug
)
]
struct
ErrorMessage
<
D
:
Display
+
Debug
+
Sync
+
Send
+
'
static
>
{
msg
:
D
}
impl
<
D
:
Display
+
Debug
+
Sync
+
Send
+
'
static
>
Fail
for
ErrorMessage
<
D
>
{
fn
name
(
&
self
)
-
>
Option
<
&
str
>
{
Some
(
"
failure
:
:
ErrorMessage
"
)
}
}
impl
<
D
:
Display
+
Debug
+
Sync
+
Send
+
'
static
>
Display
for
ErrorMessage
<
D
>
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
Display
:
:
fmt
(
&
self
.
msg
f
)
}
}
