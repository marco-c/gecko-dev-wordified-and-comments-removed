use
Fail
;
pub
trait
AsFail
{
fn
as_fail
(
&
self
)
-
>
&
dyn
Fail
;
}
impl
<
T
>
AsFail
for
T
where
T
:
Fail
{
fn
as_fail
(
&
self
)
-
>
&
dyn
Fail
{
self
}
}
impl
AsFail
for
dyn
Fail
{
fn
as_fail
(
&
self
)
-
>
&
dyn
Fail
{
self
}
}
with_std
!
{
use
error
:
:
Error
;
impl
AsFail
for
Error
{
fn
as_fail
(
&
self
)
-
>
&
dyn
Fail
{
self
.
as_fail
(
)
}
}
}
