extern
crate
dbus
;
use
dbus
:
:
{
Connection
BusType
stdintf
arg
}
;
use
std
:
:
collections
:
:
HashMap
;
fn
print_refarg
(
value
:
&
arg
:
:
RefArg
)
{
if
let
Some
(
s
)
=
value
.
as_str
(
)
{
println
!
(
"
{
}
"
s
)
;
}
else
if
let
Some
(
i
)
=
value
.
as_i64
(
)
{
println
!
(
"
{
}
"
i
)
;
}
else
{
println
!
(
"
{
:
?
}
"
value
)
;
}
}
fn
main
(
)
{
let
c
=
Connection
:
:
get_private
(
BusType
:
:
Session
)
.
unwrap
(
)
;
let
p
=
c
.
with_path
(
"
org
.
mpris
.
MediaPlayer2
.
rhythmbox
"
"
/
org
/
mpris
/
MediaPlayer2
"
5000
)
;
use
stdintf
:
:
org_freedesktop_dbus
:
:
Properties
;
let
metadata
:
HashMap
<
String
arg
:
:
Variant
<
Box
<
arg
:
:
RefArg
>
>
>
=
p
.
get
(
"
org
.
mpris
.
MediaPlayer2
.
Player
"
"
Metadata
"
)
.
unwrap
(
)
;
println
!
(
"
Option
1
:
"
)
;
for
(
key
value
)
in
metadata
.
iter
(
)
{
print
!
(
"
{
}
:
"
key
)
;
print_refarg
(
&
value
)
;
}
let
metadata
:
Box
<
arg
:
:
RefArg
>
=
p
.
get
(
"
org
.
mpris
.
MediaPlayer2
.
Player
"
"
Metadata
"
)
.
unwrap
(
)
;
let
mut
iter
=
metadata
.
as_iter
(
)
.
unwrap
(
)
;
println
!
(
"
Option
2
:
"
)
;
while
let
Some
(
key
)
=
iter
.
next
(
)
{
print
!
(
"
{
}
:
"
key
.
as_str
(
)
.
unwrap
(
)
)
;
let
value
=
iter
.
next
(
)
.
unwrap
(
)
;
print_refarg
(
&
value
)
;
}
}
