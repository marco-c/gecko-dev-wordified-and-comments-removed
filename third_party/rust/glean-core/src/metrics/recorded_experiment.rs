use
std
:
:
collections
:
:
HashMap
;
use
serde
:
:
{
Deserialize
Serialize
}
;
use
serde_json
:
:
{
json
Map
as
JsonMap
Value
as
JsonValue
}
;
#
[
derive
(
Clone
Serialize
Deserialize
Debug
PartialEq
)
]
pub
struct
RecordedExperiment
{
pub
branch
:
String
pub
extra
:
Option
<
HashMap
<
String
String
>
>
}
impl
RecordedExperiment
{
pub
fn
as_json
(
&
self
)
-
>
JsonValue
{
let
mut
value
=
JsonMap
:
:
new
(
)
;
value
.
insert
(
"
branch
"
.
to_string
(
)
json
!
(
self
.
branch
)
)
;
if
self
.
extra
.
is_some
(
)
{
value
.
insert
(
"
extra
"
.
to_string
(
)
json
!
(
self
.
extra
)
)
;
}
JsonValue
:
:
Object
(
value
)
}
}
