#
!
[
deny
(
missing_docs
)
]
#
!
[
cfg_attr
(
feature
=
"
pattern
"
feature
(
pattern
)
)
]
#
!
[
warn
(
missing_debug_implementations
)
]
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
compile_error
!
(
"
std
feature
is
currently
required
to
build
this
crate
"
)
;
#
[
cfg
(
feature
=
"
std
"
)
]
pub
use
crate
:
:
error
:
:
Error
;
#
[
cfg
(
feature
=
"
std
"
)
]
pub
use
crate
:
:
re_builder
:
:
set_unicode
:
:
*
;
#
[
cfg
(
feature
=
"
std
"
)
]
pub
use
crate
:
:
re_builder
:
:
unicode
:
:
*
;
#
[
cfg
(
feature
=
"
std
"
)
]
pub
use
crate
:
:
re_set
:
:
unicode
:
:
*
;
#
[
cfg
(
feature
=
"
std
"
)
]
#
[
cfg
(
feature
=
"
std
"
)
]
pub
use
crate
:
:
re_unicode
:
:
{
escape
CaptureLocations
CaptureMatches
CaptureNames
Captures
Locations
Match
Matches
NoExpand
Regex
Replacer
ReplacerRef
Split
SplitN
SubCaptureMatches
}
;
#
[
cfg
(
feature
=
"
std
"
)
]
pub
mod
bytes
{
pub
use
crate
:
:
re_builder
:
:
bytes
:
:
*
;
pub
use
crate
:
:
re_builder
:
:
set_bytes
:
:
*
;
pub
use
crate
:
:
re_bytes
:
:
*
;
pub
use
crate
:
:
re_set
:
:
bytes
:
:
*
;
}
mod
backtrack
;
mod
compile
;
#
[
cfg
(
feature
=
"
perf
-
dfa
"
)
]
mod
dfa
;
mod
error
;
mod
exec
;
mod
expand
;
mod
find_byte
;
mod
input
;
mod
literal
;
#
[
cfg
(
feature
=
"
pattern
"
)
]
mod
pattern
;
mod
pikevm
;
mod
pool
;
mod
prog
;
mod
re_builder
;
mod
re_bytes
;
mod
re_set
;
mod
re_trait
;
mod
re_unicode
;
mod
sparse
;
mod
utf8
;
#
[
doc
(
hidden
)
]
#
[
cfg
(
feature
=
"
std
"
)
]
pub
mod
internal
{
pub
use
crate
:
:
compile
:
:
Compiler
;
pub
use
crate
:
:
exec
:
:
{
Exec
ExecBuilder
}
;
pub
use
crate
:
:
input
:
:
{
Char
CharInput
Input
InputAt
}
;
pub
use
crate
:
:
literal
:
:
LiteralSearcher
;
pub
use
crate
:
:
prog
:
:
{
EmptyLook
Inst
InstRanges
Program
}
;
}
