#
!
[
deny
(
missing_docs
)
]
#
!
[
cfg_attr
(
test
deny
(
warnings
)
)
]
#
!
[
cfg_attr
(
feature
=
"
pattern
"
feature
(
pattern
)
)
]
#
!
[
cfg_attr
(
feature
=
"
simd
-
accel
"
feature
(
cfg_target_feature
)
)
]
extern
crate
aho_corasick
;
extern
crate
memchr
;
extern
crate
thread_local
;
#
[
cfg
(
test
)
]
extern
crate
quickcheck
;
extern
crate
regex_syntax
as
syntax
;
#
[
cfg
(
feature
=
"
simd
-
accel
"
)
]
extern
crate
simd
;
extern
crate
utf8_ranges
;
pub
use
error
:
:
Error
;
pub
use
re_builder
:
:
unicode
:
:
*
;
pub
use
re_builder
:
:
set_unicode
:
:
*
;
pub
use
re_set
:
:
unicode
:
:
*
;
pub
use
re_trait
:
:
Locations
;
pub
use
re_unicode
:
:
{
Regex
Match
Captures
CaptureNames
Matches
CaptureMatches
SubCaptureMatches
Replacer
NoExpand
Split
SplitN
escape
}
;
pub
mod
bytes
{
pub
use
re_builder
:
:
bytes
:
:
*
;
pub
use
re_builder
:
:
set_bytes
:
:
*
;
pub
use
re_bytes
:
:
*
;
pub
use
re_set
:
:
bytes
:
:
*
;
pub
use
re_trait
:
:
Locations
;
}
mod
backtrack
;
mod
utf8
;
mod
compile
;
mod
dfa
;
mod
error
;
mod
exec
;
mod
expand
;
mod
freqs
;
mod
input
;
mod
literals
;
#
[
cfg
(
feature
=
"
pattern
"
)
]
mod
pattern
;
mod
pikevm
;
mod
prog
;
mod
re_builder
;
mod
re_bytes
;
mod
re_plugin
;
mod
re_set
;
mod
re_trait
;
mod
re_unicode
;
#
[
cfg
(
feature
=
"
simd
-
accel
"
)
]
mod
simd_accel
;
#
[
cfg
(
not
(
feature
=
"
simd
-
accel
"
)
)
]
#
[
path
=
"
simd_fallback
/
mod
.
rs
"
]
mod
simd_accel
;
mod
sparse
;
#
[
doc
(
hidden
)
]
pub
mod
internal
{
pub
use
compile
:
:
Compiler
;
pub
use
exec
:
:
{
Exec
ExecBuilder
}
;
pub
use
input
:
:
{
Char
Input
CharInput
InputAt
}
;
pub
use
literals
:
:
LiteralSearcher
;
pub
use
prog
:
:
{
Program
Inst
EmptyLook
InstRanges
}
;
pub
use
re_plugin
:
:
Plugin
;
pub
use
re_unicode
:
:
_Regex
;
}
