use
clap
:
:
Parser
;
#
[
derive
(
Parser
Debug
PartialEq
)
]
#
[
clap
(
author
version
about
long_about
=
None
)
]
struct
Opt
{
#
[
clap
(
long
parse
(
try_from_str
)
)
]
foo
:
bool
#
[
clap
(
long
parse
(
try_from_str
=
true_or_false
)
default_value_t
)
]
bar
:
bool
#
[
clap
(
parse
(
try_from_str
)
)
]
boom
:
bool
}
fn
true_or_false
(
s
:
&
str
)
-
>
Result
<
bool
&
'
static
str
>
{
match
s
{
"
true
"
=
>
Ok
(
true
)
"
false
"
=
>
Ok
(
false
)
_
=
>
Err
(
"
expected
true
or
false
"
)
}
}
fn
main
(
)
{
let
opt
=
Opt
:
:
parse
(
)
;
dbg
!
(
opt
)
;
}
