#
!
[
doc
=
include_str
!
(
"
.
.
/
examples
/
css
/
parser
.
rs
"
)
]
#
!
[
cfg_attr
(
docsrs
feature
(
doc_auto_cfg
)
)
]
#
!
[
cfg_attr
(
docsrs
feature
(
doc_cfg
)
)
]
#
!
[
cfg_attr
(
docsrs
feature
(
extended_key_value_attributes
)
)
]
#
!
[
cfg_attr
(
all
(
not
(
feature
=
"
std
"
)
not
(
test
)
)
no_std
)
]
#
!
[
warn
(
missing_docs
)
]
#
!
[
warn
(
clippy
:
:
std_instead_of_core
)
]
#
!
[
warn
(
clippy
:
:
std_instead_of_alloc
)
]
#
!
[
warn
(
clippy
:
:
print_stderr
)
]
#
!
[
warn
(
clippy
:
:
print_stdout
)
]
#
[
cfg
(
feature
=
"
alloc
"
)
]
#
[
cfg_attr
(
test
macro_use
)
]
#
[
allow
(
unused_extern_crates
)
]
extern
crate
alloc
;
#
[
doc
=
include_str
!
(
"
.
.
/
README
.
md
"
)
]
#
[
cfg
(
doctest
)
]
pub
struct
ReadmeDoctests
;
#
[
doc
(
hidden
)
]
pub
(
crate
)
mod
lib
{
#
!
[
allow
(
unused_imports
)
]
#
[
cfg
(
not
(
feature
=
"
std
"
)
)
]
pub
(
crate
)
mod
std
{
#
[
doc
(
hidden
)
]
#
[
cfg
(
not
(
feature
=
"
alloc
"
)
)
]
pub
(
crate
)
use
core
:
:
borrow
;
#
[
cfg
(
feature
=
"
alloc
"
)
]
#
[
doc
(
hidden
)
]
pub
(
crate
)
use
alloc
:
:
{
borrow
boxed
collections
string
vec
}
;
#
[
doc
(
hidden
)
]
pub
(
crate
)
use
core
:
:
{
cmp
convert
fmt
hash
iter
mem
ops
option
result
slice
str
}
;
}
#
[
cfg
(
feature
=
"
std
"
)
]
pub
(
crate
)
mod
std
{
#
!
[
allow
(
clippy
:
:
std_instead_of_core
)
]
#
!
[
allow
(
clippy
:
:
std_instead_of_alloc
)
]
#
[
doc
(
hidden
)
]
pub
(
crate
)
use
std
:
:
{
borrow
boxed
cmp
collections
convert
fmt
hash
iter
mem
ops
result
slice
str
string
vec
}
;
}
}
#
[
macro_use
]
mod
macros
;
#
[
macro_use
]
pub
mod
error
;
mod
parser
;
pub
mod
stream
;
pub
mod
ascii
;
pub
mod
binary
;
pub
mod
combinator
;
pub
mod
token
;
#
[
cfg
(
feature
=
"
unstable
-
doc
"
)
]
pub
mod
_topic
;
#
[
cfg
(
feature
=
"
unstable
-
doc
"
)
]
pub
mod
_tutorial
;
pub
mod
prelude
{
pub
use
crate
:
:
error
:
:
ModalError
as
_
;
pub
use
crate
:
:
error
:
:
ParserError
as
_
;
pub
use
crate
:
:
stream
:
:
AsChar
as
_
;
pub
use
crate
:
:
stream
:
:
ContainsToken
as
_
;
pub
use
crate
:
:
stream
:
:
Stream
as
_
;
pub
use
crate
:
:
stream
:
:
StreamIsPartial
as
_
;
pub
use
crate
:
:
ModalParser
;
pub
use
crate
:
:
ModalResult
;
pub
use
crate
:
:
Parser
;
#
[
cfg
(
feature
=
"
unstable
-
recover
"
)
]
#
[
cfg
(
feature
=
"
std
"
)
]
pub
use
crate
:
:
RecoverableParser
as
_
;
#
[
cfg
(
test
)
]
pub
(
crate
)
use
crate
:
:
TestResult
;
}
pub
use
error
:
:
ModalResult
;
pub
use
error
:
:
Result
;
pub
use
parser
:
:
*
;
pub
use
stream
:
:
BStr
;
pub
use
stream
:
:
Bytes
;
pub
use
stream
:
:
LocatingSlice
;
pub
use
stream
:
:
Partial
;
pub
use
stream
:
:
Stateful
;
pub
use
stream
:
:
Str
;
#
[
cfg
(
test
)
]
pub
(
crate
)
use
error
:
:
TestResult
;
