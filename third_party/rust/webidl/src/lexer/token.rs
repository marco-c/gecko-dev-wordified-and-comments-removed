use
std
:
:
fmt
;
#
[
allow
(
missing_docs
)
]
#
[
derive
(
Clone
Debug
PartialEq
)
]
pub
enum
Token
{
Any
ArrayBuffer
Attribute
Boolean
Byte
ByteString
Callback
Const
DataView
Deleter
Dictionary
DOMString
Double
Enum
Error
False
Float
Float32Array
Float64Array
FrozenArray
Getter
Implements
Includes
Inherit
Int16Array
Int32Array
Int8Array
Interface
Iterable
LegacyCaller
Long
Maplike
Mixin
Namespace
NaN
NegativeInfinity
Null
Object
Octet
Optional
Or
Partial
PositiveInfinity
Promise
ReadOnly
Record
Required
Sequence
Setlike
Setter
Short
Static
Stringifier
Symbol
True
Typedef
USVString
Uint16Array
Uint32Array
Uint8Array
Uint8ClampedArray
Unrestricted
Unsigned
Void
FloatLiteral
(
f64
)
Identifier
(
String
)
OtherLiteral
(
char
)
SignedIntegerLiteral
(
i64
)
StringLiteral
(
String
)
UnsignedIntegerLiteral
(
u64
)
Colon
Comma
Ellipsis
Equals
GreaterThan
Hyphen
LeftBrace
LeftBracket
LeftParenthesis
LessThan
Period
QuestionMark
RightBrace
RightBracket
RightParenthesis
Semicolon
}
impl
fmt
:
:
Display
for
Token
{
fn
fmt
(
&
self
f
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
write
!
(
f
"
{
:
?
}
"
self
)
}
}
