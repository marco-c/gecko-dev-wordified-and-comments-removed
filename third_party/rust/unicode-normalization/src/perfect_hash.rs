#
[
inline
]
fn
my_hash
(
key
:
u32
salt
:
u32
n
:
usize
)
-
>
usize
{
let
y
=
key
.
wrapping_add
(
salt
)
.
wrapping_mul
(
2654435769
)
;
let
y
=
y
^
key
.
wrapping_mul
(
0x31415926
)
;
(
(
(
y
as
u64
)
*
(
n
as
u64
)
)
>
>
32
)
as
usize
}
#
[
inline
]
pub
(
crate
)
fn
mph_lookup
<
KV
V
FK
FV
>
(
x
:
u32
salt
:
&
[
u16
]
kv
:
&
[
KV
]
fk
:
FK
fv
:
FV
default
:
V
)
-
>
V
where
KV
:
Copy
FK
:
Fn
(
KV
)
-
>
u32
FV
:
Fn
(
KV
)
-
>
V
{
let
s
=
salt
[
my_hash
(
x
0
salt
.
len
(
)
)
]
as
u32
;
let
key_val
=
kv
[
my_hash
(
x
s
salt
.
len
(
)
)
]
;
if
x
=
=
fk
(
key_val
)
{
fv
(
key_val
)
}
else
{
default
}
}
