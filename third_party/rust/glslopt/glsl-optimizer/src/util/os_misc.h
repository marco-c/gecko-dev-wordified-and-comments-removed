#
ifndef
_OS_MISC_H_
#
define
_OS_MISC_H_
#
include
<
stdint
.
h
>
#
include
<
stdbool
.
h
>
#
include
"
detect_os
.
h
"
#
if
DETECT_OS_UNIX
#
include
<
signal
.
h
>
#
include
<
unistd
.
h
>
#
endif
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
if
(
defined
(
PIPE_ARCH_X86
)
|
|
defined
(
PIPE_ARCH_X86_64
)
)
&
&
defined
(
PIPE_CC_GCC
)
#
define
os_break
(
)
__asm
(
"
int3
"
)
#
elif
defined
(
PIPE_CC_MSVC
)
#
define
os_break
(
)
__debugbreak
(
)
#
elif
DETECT_OS_UNIX
#
define
os_break
(
)
kill
(
getpid
(
)
SIGTRAP
)
#
else
#
define
os_break
(
)
abort
(
)
#
endif
#
if
defined
(
DEBUG
)
#
define
os_abort
(
)
do
{
os_break
(
)
;
abort
(
)
;
}
while
(
0
)
#
else
#
define
os_abort
(
)
abort
(
)
#
endif
void
os_log_message
(
const
char
*
message
)
;
const
char
*
os_get_option
(
const
char
*
name
)
;
bool
os_get_total_physical_memory
(
uint64_t
*
size
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
