#
ifndef
IR_UNIFORM_H
#
define
IR_UNIFORM_H
#
include
<
stdbool
.
h
>
#
include
"
util
/
macros
.
h
"
#
include
"
program
/
prog_parameter
.
h
"
#
define
INACTIVE_UNIFORM_EXPLICIT_LOCATION
(
(
gl_uniform_storage
*
)
-
1
)
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
enum
PACKED
gl_uniform_driver_format
{
uniform_native
=
0
uniform_int_float
}
;
struct
gl_uniform_driver_storage
{
uint8_t
element_stride
;
uint8_t
vector_stride
;
enum
gl_uniform_driver_format
format
;
void
*
data
;
}
;
struct
gl_opaque_uniform_index
{
uint8_t
index
;
bool
active
;
}
;
struct
gl_uniform_storage
{
char
*
name
;
const
struct
glsl_type
*
type
;
unsigned
array_elements
;
struct
gl_opaque_uniform_index
opaque
[
MESA_SHADER_STAGES
]
;
unsigned
active_shader_mask
;
unsigned
num_driver_storage
;
struct
gl_uniform_driver_storage
*
driver_storage
;
union
gl_constant_value
*
storage
;
int
block_index
;
int
offset
;
int
matrix_stride
;
int
array_stride
;
bool
row_major
;
bool
hidden
;
bool
builtin
;
bool
is_shader_storage
;
int
atomic_buffer_index
;
unsigned
remap_location
;
unsigned
num_compatible_subroutines
;
unsigned
top_level_array_size
;
unsigned
top_level_array_stride
;
bool
is_bindless
;
}
;
#
ifdef
__cplusplus
}
#
endif
#
endif
