#
ifndef
GLSL_SYMBOL_TABLE
#
define
GLSL_SYMBOL_TABLE
#
include
<
new
>
#
include
"
program
/
symbol_table
.
h
"
#
include
"
ir
.
h
"
class
symbol_table_entry
;
struct
glsl_type
;
struct
glsl_symbol_table
{
DECLARE_RALLOC_CXX_OPERATORS
(
glsl_symbol_table
)
glsl_symbol_table
(
)
;
~
glsl_symbol_table
(
)
;
bool
separate_function_namespace
;
void
push_scope
(
)
;
void
pop_scope
(
)
;
bool
name_declared_this_scope
(
const
char
*
name
)
;
bool
add_variable
(
ir_variable
*
v
)
;
bool
add_type
(
const
char
*
name
const
glsl_type
*
t
)
;
bool
add_function
(
ir_function
*
f
)
;
bool
add_interface
(
const
char
*
name
const
glsl_type
*
i
enum
ir_variable_mode
mode
)
;
bool
add_default_precision_qualifier
(
const
char
*
type_name
int
precision
)
;
void
add_global_function
(
ir_function
*
f
)
;
ir_variable
*
get_variable
(
const
char
*
name
)
;
const
glsl_type
*
get_type
(
const
char
*
name
)
;
ir_function
*
get_function
(
const
char
*
name
)
;
const
glsl_type
*
get_interface
(
const
char
*
name
enum
ir_variable_mode
mode
)
;
int
get_default_precision_qualifier
(
const
char
*
type_name
)
;
void
disable_variable
(
const
char
*
name
)
;
void
replace_variable
(
const
char
*
name
ir_variable
*
v
)
;
private
:
symbol_table_entry
*
get_entry
(
const
char
*
name
)
;
struct
_mesa_symbol_table
*
table
;
void
*
mem_ctx
;
void
*
linalloc
;
}
;
#
endif
