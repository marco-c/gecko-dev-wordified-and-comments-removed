#
ifndef
IR_PRINT_VISITOR_H
#
define
IR_PRINT_VISITOR_H
#
include
"
ir
.
h
"
#
include
"
ir_visitor
.
h
"
#
include
"
program
/
symbol_table
.
h
"
class
ir_print_visitor
:
public
ir_visitor
{
public
:
ir_print_visitor
(
FILE
*
f
)
;
virtual
~
ir_print_visitor
(
)
;
void
indent
(
void
)
;
virtual
void
visit
(
ir_rvalue
*
)
;
virtual
void
visit
(
ir_variable
*
)
;
virtual
void
visit
(
ir_function_signature
*
)
;
virtual
void
visit
(
ir_function
*
)
;
virtual
void
visit
(
ir_expression
*
)
;
virtual
void
visit
(
ir_texture
*
)
;
virtual
void
visit
(
ir_swizzle
*
)
;
virtual
void
visit
(
ir_dereference_variable
*
)
;
virtual
void
visit
(
ir_dereference_array
*
)
;
virtual
void
visit
(
ir_dereference_record
*
)
;
virtual
void
visit
(
ir_assignment
*
)
;
virtual
void
visit
(
ir_constant
*
)
;
virtual
void
visit
(
ir_call
*
)
;
virtual
void
visit
(
ir_return
*
)
;
virtual
void
visit
(
ir_discard
*
)
;
virtual
void
visit
(
ir_demote
*
)
;
virtual
void
visit
(
ir_if
*
)
;
virtual
void
visit
(
ir_loop
*
)
;
virtual
void
visit
(
ir_loop_jump
*
)
;
virtual
void
visit
(
ir_precision_statement
*
)
;
virtual
void
visit
(
ir_typedecl_statement
*
)
;
virtual
void
visit
(
ir_emit_vertex
*
)
;
virtual
void
visit
(
ir_end_primitive
*
)
;
virtual
void
visit
(
ir_barrier
*
)
;
private
:
const
char
*
unique_name
(
ir_variable
*
var
)
;
hash_table
*
printable_names
;
_mesa_symbol_table
*
symbols
;
void
*
mem_ctx
;
FILE
*
f
;
int
indentation
;
}
;
#
endif
