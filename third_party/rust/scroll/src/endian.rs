#
[
derive
(
PartialEq
Eq
Copy
Debug
Clone
)
]
pub
enum
Endian
{
Little
Big
}
pub
const
LE
:
Endian
=
Endian
:
:
Little
;
pub
const
BE
:
Endian
=
Endian
:
:
Big
;
pub
const
NETWORK
:
Endian
=
Endian
:
:
Big
;
#
[
cfg
(
target_endian
=
"
little
"
)
]
pub
const
NATIVE
:
Endian
=
LE
;
#
[
cfg
(
target_endian
=
"
big
"
)
]
pub
const
NATIVE
:
Endian
=
BE
;
impl
Default
for
Endian
{
#
[
inline
]
fn
default
(
)
-
>
Self
{
NATIVE
}
}
impl
From
<
bool
>
for
Endian
{
#
[
inline
]
fn
from
(
little_endian
:
bool
)
-
>
Self
{
if
little_endian
{
LE
}
else
{
BE
}
}
}
impl
Endian
{
#
[
inline
]
pub
fn
network
(
)
-
>
Endian
{
NETWORK
}
#
[
inline
]
pub
fn
is_little
(
&
self
)
-
>
bool
{
match
*
self
{
LE
=
>
true
_
=
>
false
}
}
}
