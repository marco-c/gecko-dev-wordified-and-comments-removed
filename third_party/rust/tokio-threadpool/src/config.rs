use
callback
:
:
Callback
;
use
std
:
:
fmt
;
use
std
:
:
sync
:
:
Arc
;
use
std
:
:
time
:
:
Duration
;
#
[
derive
(
Clone
)
]
pub
(
crate
)
struct
Config
{
pub
keep_alive
:
Option
<
Duration
>
pub
name_prefix
:
Option
<
String
>
pub
stack_size
:
Option
<
usize
>
pub
around_worker
:
Option
<
Callback
>
pub
after_start
:
Option
<
Arc
<
Fn
(
)
+
Send
+
Sync
>
>
pub
before_stop
:
Option
<
Arc
<
Fn
(
)
+
Send
+
Sync
>
>
}
pub
(
crate
)
const
MAX_WORKERS
:
usize
=
1
<
<
15
;
impl
fmt
:
:
Debug
for
Config
{
fn
fmt
(
&
self
fmt
:
&
mut
fmt
:
:
Formatter
)
-
>
fmt
:
:
Result
{
fmt
.
debug_struct
(
"
Config
"
)
.
field
(
"
keep_alive
"
&
self
.
keep_alive
)
.
field
(
"
name_prefix
"
&
self
.
name_prefix
)
.
field
(
"
stack_size
"
&
self
.
stack_size
)
.
finish
(
)
}
}
