#
include
<
memory
>
#
include
"
modules
/
desktop_capture
/
desktop_capture_options
.
h
"
#
include
"
modules
/
desktop_capture
/
desktop_capturer
.
h
"
#
if
defined
(
WEBRTC_USE_PIPEWIRE
)
#
if
defined
(
WEBRTC_MOZILLA_BUILD
)
#
include
"
modules
/
desktop_capture
/
linux
/
wayland
/
moz_base_capturer_pipewire
.
h
"
#
else
#
include
"
modules
/
desktop_capture
/
linux
/
wayland
/
base_capturer_pipewire
.
h
"
#
endif
#
endif
#
if
defined
(
WEBRTC_USE_X11
)
#
include
"
modules
/
desktop_capture
/
linux
/
x11
/
window_capturer_x11
.
h
"
#
endif
namespace
webrtc
{
std
:
:
unique_ptr
<
DesktopCapturer
>
DesktopCapturer
:
:
CreateRawWindowCapturer
(
const
DesktopCaptureOptions
&
options
)
{
#
if
defined
(
WEBRTC_USE_PIPEWIRE
)
if
(
options
.
allow_pipewire
(
)
&
&
DesktopCapturer
:
:
IsRunningUnderWayland
(
)
)
{
return
std
:
:
make_unique
<
BaseCapturerPipeWire
>
(
options
)
;
}
#
endif
#
if
defined
(
WEBRTC_USE_X11
)
return
WindowCapturerX11
:
:
CreateRawWindowCapturer
(
options
)
;
#
else
return
nullptr
;
#
endif
}
}
