#
include
"
modules
/
desktop_capture
/
window_finder_win
.
h
"
#
include
<
windows
.
h
>
#
include
<
memory
>
#
include
"
modules
/
desktop_capture
/
desktop_capture_types
.
h
"
#
include
"
modules
/
desktop_capture
/
desktop_geometry
.
h
"
#
include
"
modules
/
desktop_capture
/
window_finder
.
h
"
namespace
webrtc
{
WindowFinderWin
:
:
WindowFinderWin
(
)
=
default
;
WindowFinderWin
:
:
~
WindowFinderWin
(
)
=
default
;
WindowId
WindowFinderWin
:
:
GetWindowUnderPoint
(
DesktopVector
point
)
{
HWND
window
=
WindowFromPoint
(
POINT
{
point
.
x
(
)
point
.
y
(
)
}
)
;
if
(
!
window
)
{
return
kNullWindowId
;
}
window
=
GetAncestor
(
window
GA_ROOT
)
;
if
(
!
window
)
{
return
kNullWindowId
;
}
return
reinterpret_cast
<
WindowId
>
(
window
)
;
}
std
:
:
unique_ptr
<
WindowFinder
>
WindowFinder
:
:
Create
(
const
WindowFinder
:
:
Options
&
options
)
{
return
std
:
:
make_unique
<
WindowFinderWin
>
(
)
;
}
}
