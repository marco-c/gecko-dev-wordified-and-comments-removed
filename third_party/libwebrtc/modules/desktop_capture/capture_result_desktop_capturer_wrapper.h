#
ifndef
MODULES_DESKTOP_CAPTURE_CAPTURE_RESULT_DESKTOP_CAPTURER_WRAPPER_H_
#
define
MODULES_DESKTOP_CAPTURE_CAPTURE_RESULT_DESKTOP_CAPTURER_WRAPPER_H_
#
include
<
memory
>
#
include
"
modules
/
desktop_capture
/
desktop_capturer
.
h
"
#
include
"
modules
/
desktop_capture
/
desktop_capturer_wrapper
.
h
"
#
include
"
modules
/
desktop_capture
/
desktop_frame
.
h
"
namespace
webrtc
{
class
CaptureResultDesktopCapturerWrapper
:
public
DesktopCapturerWrapper
public
DesktopCapturer
:
:
Callback
{
public
:
using
Callback
=
DesktopCapturer
:
:
Callback
;
class
ResultObserver
{
public
:
ResultObserver
(
)
;
virtual
~
ResultObserver
(
)
;
virtual
void
Observe
(
Result
*
result
std
:
:
unique_ptr
<
DesktopFrame
>
*
frame
)
=
0
;
}
;
CaptureResultDesktopCapturerWrapper
(
std
:
:
unique_ptr
<
DesktopCapturer
>
base_capturer
ResultObserver
*
observer
)
;
~
CaptureResultDesktopCapturerWrapper
(
)
override
;
void
Start
(
Callback
*
callback
)
final
;
private
:
void
OnCaptureResult
(
Result
result
std
:
:
unique_ptr
<
DesktopFrame
>
frame
)
final
;
ResultObserver
*
const
observer_
;
Callback
*
callback_
=
nullptr
;
}
;
}
#
endif
