#
include
"
modules
/
desktop_capture
/
screen_drawer_lock_posix
.
h
"
#
include
<
fcntl
.
h
>
#
include
<
semaphore
.
h
>
#
include
<
sys
/
stat
.
h
>
#
include
<
string
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
rtc_base
/
logging
.
h
"
namespace
webrtc
{
namespace
{
constexpr
char
kSemaphoreName
[
]
=
"
GSDL54fe5552804711e6a7253f429a
"
;
}
ScreenDrawerLockPosix
:
:
ScreenDrawerLockPosix
(
)
:
ScreenDrawerLockPosix
(
kSemaphoreName
)
{
}
ScreenDrawerLockPosix
:
:
ScreenDrawerLockPosix
(
const
char
*
name
)
{
semaphore_
=
sem_open
(
name
O_CREAT
S_IRWXU
|
S_IRWXG
|
S_IRWXO
1
)
;
if
(
semaphore_
=
=
SEM_FAILED
)
{
RTC_LOG_ERRNO
(
LS_ERROR
)
<
<
"
Failed
to
create
named
semaphore
with
"
<
<
name
;
RTC_DCHECK_NOTREACHED
(
)
;
}
sem_wait
(
semaphore_
)
;
}
ScreenDrawerLockPosix
:
:
~
ScreenDrawerLockPosix
(
)
{
if
(
semaphore_
=
=
SEM_FAILED
)
{
return
;
}
sem_post
(
semaphore_
)
;
sem_close
(
semaphore_
)
;
}
void
ScreenDrawerLockPosix
:
:
Unlink
(
absl
:
:
string_view
name
)
{
sem_unlink
(
std
:
:
string
(
name
)
.
c_str
(
)
)
;
}
}
