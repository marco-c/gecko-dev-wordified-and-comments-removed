#
ifndef
MODULES_DESKTOP_CAPTURE_WIN_WGC_CAPTURE_SESSION_H_
#
define
MODULES_DESKTOP_CAPTURE_WIN_WGC_CAPTURE_SESSION_H_
#
include
<
d3d11
.
h
>
#
include
<
windows
.
graphics
.
capture
.
h
>
#
include
<
windows
.
graphics
.
h
>
#
include
<
wrl
/
client
.
h
>
#
include
<
memory
>
#
include
"
api
/
sequence_checker
.
h
"
#
include
"
modules
/
desktop_capture
/
desktop_capture_options
.
h
"
#
include
"
modules
/
desktop_capture
/
win
/
wgc_capture_source
.
h
"
#
include
"
rtc_base
/
event
.
h
"
namespace
webrtc
{
class
WgcCaptureSession
final
{
public
:
WgcCaptureSession
(
Microsoft
:
:
WRL
:
:
ComPtr
<
ID3D11Device
>
d3d11_device
Microsoft
:
:
WRL
:
:
ComPtr
<
ABI
:
:
Windows
:
:
Graphics
:
:
Capture
:
:
IGraphicsCaptureItem
>
item
ABI
:
:
Windows
:
:
Graphics
:
:
SizeInt32
size
)
;
WgcCaptureSession
(
const
WgcCaptureSession
&
)
=
delete
;
WgcCaptureSession
&
operator
=
(
const
WgcCaptureSession
&
)
=
delete
;
~
WgcCaptureSession
(
)
;
HRESULT
StartCapture
(
const
DesktopCaptureOptions
&
options
)
;
HRESULT
GetFrame
(
std
:
:
unique_ptr
<
DesktopFrame
>
*
output_frame
)
;
bool
IsCaptureStarted
(
)
const
{
RTC_DCHECK_RUN_ON
(
&
sequence_checker_
)
;
return
is_capture_started_
;
}
static
constexpr
int
kNumBuffers
=
2
;
private
:
HRESULT
CreateMappedTexture
(
Microsoft
:
:
WRL
:
:
ComPtr
<
ID3D11Texture2D
>
src_texture
UINT
width
=
0
UINT
height
=
0
)
;
HRESULT
OnItemClosed
(
ABI
:
:
Windows
:
:
Graphics
:
:
Capture
:
:
IGraphicsCaptureItem
*
sender
IInspectable
*
event_args
)
;
HRESULT
OnFrameArrived
(
ABI
:
:
Windows
:
:
Graphics
:
:
Capture
:
:
IDirect3D11CaptureFramePool
*
sender
IInspectable
*
event_args
)
;
void
RemoveEventHandlers
(
)
;
rtc
:
:
Event
wait_for_frame_event_
;
int
frames_in_pool_
;
bool
first_frame_
=
true
;
std
:
:
unique_ptr
<
EventRegistrationToken
>
frame_arrived_token_
;
std
:
:
unique_ptr
<
EventRegistrationToken
>
item_closed_token_
;
Microsoft
:
:
WRL
:
:
ComPtr
<
ID3D11Device
>
d3d11_device_
;
Microsoft
:
:
WRL
:
:
ComPtr
<
ABI
:
:
Windows
:
:
Graphics
:
:
Capture
:
:
IGraphicsCaptureItem
>
item_
;
Microsoft
:
:
WRL
:
:
ComPtr
<
ABI
:
:
Windows
:
:
Graphics
:
:
DirectX
:
:
Direct3D11
:
:
IDirect3DDevice
>
direct3d_device_
;
Microsoft
:
:
WRL
:
:
ComPtr
<
ABI
:
:
Windows
:
:
Graphics
:
:
Capture
:
:
IDirect3D11CaptureFramePool
>
frame_pool_
;
Microsoft
:
:
WRL
:
:
ComPtr
<
ID3D11Texture2D
>
mapped_texture_
;
ABI
:
:
Windows
:
:
Graphics
:
:
SizeInt32
size_
;
Microsoft
:
:
WRL
:
:
ComPtr
<
ABI
:
:
Windows
:
:
Graphics
:
:
Capture
:
:
IGraphicsCaptureSession
>
session_
;
bool
item_closed_
=
false
;
bool
is_capture_started_
=
false
;
SequenceChecker
sequence_checker_
;
}
;
}
#
endif
