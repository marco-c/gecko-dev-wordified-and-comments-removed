#
ifndef
MODULES_DESKTOP_CAPTURE_WIN_WINDOW_CAPTURE_UTILS_H_
#
define
MODULES_DESKTOP_CAPTURE_WIN_WINDOW_CAPTURE_UTILS_H_
#
include
<
shlobj
.
h
>
#
include
<
windows
.
h
>
#
include
<
wrl
/
client
.
h
>
#
include
"
modules
/
desktop_capture
/
desktop_capturer
.
h
"
#
include
"
modules
/
desktop_capture
/
desktop_geometry
.
h
"
#
include
"
rtc_base
/
constructor_magic
.
h
"
namespace
webrtc
{
bool
GetWindowRect
(
HWND
window
DesktopRect
*
result
)
;
bool
GetCroppedWindowRect
(
HWND
window
bool
avoid_cropping_border
DesktopRect
*
cropped_rect
DesktopRect
*
original_rect
)
;
bool
GetWindowContentRect
(
HWND
window
DesktopRect
*
result
)
;
int
GetWindowRegionTypeWithBoundary
(
HWND
window
DesktopRect
*
result
)
;
bool
GetDcSize
(
HDC
hdc
DesktopSize
*
size
)
;
bool
IsWindowMaximized
(
HWND
window
bool
*
result
)
;
bool
IsWindowValidAndVisible
(
HWND
window
)
;
bool
IsWindowResponding
(
HWND
window
)
;
enum
GetWindowListFlags
{
kNone
=
0x00
kIgnoreUntitled
=
1
<
<
0
kIgnoreUnresponsive
=
1
<
<
1
kIgnoreCurrentProcessWindows
=
1
<
<
2
}
;
bool
GetWindowList
(
int
flags
DesktopCapturer
:
:
SourceList
*
windows
)
;
typedef
HRESULT
(
WINAPI
*
DwmIsCompositionEnabledFunc
)
(
BOOL
*
enabled
)
;
typedef
HRESULT
(
WINAPI
*
DwmGetWindowAttributeFunc
)
(
HWND
hwnd
DWORD
flag
PVOID
result_ptr
DWORD
result_size
)
;
class
WindowCaptureHelperWin
{
public
:
WindowCaptureHelperWin
(
)
;
~
WindowCaptureHelperWin
(
)
;
bool
IsAeroEnabled
(
)
;
bool
IsWindowChromeNotification
(
HWND
hwnd
)
;
bool
AreWindowsOverlapping
(
HWND
hwnd
HWND
selected_hwnd
const
DesktopRect
&
selected_window_rect
)
;
bool
IsWindowOnCurrentDesktop
(
HWND
hwnd
)
;
bool
IsWindowVisibleOnCurrentDesktop
(
HWND
hwnd
)
;
bool
IsWindowCloaked
(
HWND
hwnd
)
;
bool
EnumerateCapturableWindows
(
DesktopCapturer
:
:
SourceList
*
results
bool
enumerate_current_process_windows
)
;
private
:
HMODULE
dwmapi_library_
=
nullptr
;
DwmIsCompositionEnabledFunc
func_
=
nullptr
;
DwmGetWindowAttributeFunc
dwm_get_window_attribute_func_
=
nullptr
;
Microsoft
:
:
WRL
:
:
ComPtr
<
IVirtualDesktopManager
>
virtual_desktop_manager_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
WindowCaptureHelperWin
)
;
}
;
}
#
endif
