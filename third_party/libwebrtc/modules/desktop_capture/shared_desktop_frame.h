#
ifndef
MODULES_DESKTOP_CAPTURE_SHARED_DESKTOP_FRAME_H_
#
define
MODULES_DESKTOP_CAPTURE_SHARED_DESKTOP_FRAME_H_
#
include
<
memory
>
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
modules
/
desktop_capture
/
desktop_frame
.
h
"
#
include
"
rtc_base
/
constructor_magic
.
h
"
#
include
"
rtc_base
/
ref_counted_object
.
h
"
#
include
"
rtc_base
/
system
/
rtc_export
.
h
"
namespace
webrtc
{
class
RTC_EXPORT
SharedDesktopFrame
:
public
DesktopFrame
{
public
:
~
SharedDesktopFrame
(
)
override
;
static
std
:
:
unique_ptr
<
SharedDesktopFrame
>
Wrap
(
std
:
:
unique_ptr
<
DesktopFrame
>
desktop_frame
)
;
static
SharedDesktopFrame
*
Wrap
(
DesktopFrame
*
desktop_frame
)
;
DesktopFrame
*
GetUnderlyingFrame
(
)
;
bool
ShareFrameWith
(
const
SharedDesktopFrame
&
other
)
const
;
std
:
:
unique_ptr
<
SharedDesktopFrame
>
Share
(
)
;
bool
IsShared
(
)
;
private
:
typedef
rtc
:
:
RefCountedObject
<
std
:
:
unique_ptr
<
DesktopFrame
>
>
Core
;
SharedDesktopFrame
(
rtc
:
:
scoped_refptr
<
Core
>
core
)
;
const
rtc
:
:
scoped_refptr
<
Core
>
core_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
SharedDesktopFrame
)
;
}
;
}
#
endif
