#
ifndef
MODULES_AUDIO_PROCESSING_NS_QUANTILE_NOISE_ESTIMATOR_H_
#
define
MODULES_AUDIO_PROCESSING_NS_QUANTILE_NOISE_ESTIMATOR_H_
#
include
<
math
.
h
>
#
include
<
array
>
#
include
"
api
/
array_view
.
h
"
#
include
"
modules
/
audio_processing
/
ns
/
ns_common
.
h
"
namespace
webrtc
{
constexpr
int
kSimult
=
3
;
class
QuantileNoiseEstimator
{
public
:
QuantileNoiseEstimator
(
)
;
QuantileNoiseEstimator
(
const
QuantileNoiseEstimator
&
)
=
delete
;
QuantileNoiseEstimator
&
operator
=
(
const
QuantileNoiseEstimator
&
)
=
delete
;
void
Estimate
(
rtc
:
:
ArrayView
<
const
float
kFftSizeBy2Plus1
>
signal_spectrum
rtc
:
:
ArrayView
<
float
kFftSizeBy2Plus1
>
noise_spectrum
)
;
private
:
std
:
:
array
<
float
kSimult
*
kFftSizeBy2Plus1
>
density_
;
std
:
:
array
<
float
kSimult
*
kFftSizeBy2Plus1
>
log_quantile_
;
std
:
:
array
<
float
kFftSizeBy2Plus1
>
quantile_
;
std
:
:
array
<
int
kSimult
>
counter_
;
int
num_updates_
=
1
;
}
;
}
#
endif
