#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
auto_correlation
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
common
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
pitch_search_internal
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
test_utils
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
rnn_vad
{
namespace
{
TEST
(
RnnVadTest
PitchBufferAutoCorrelationWithinTolerance
)
{
PitchTestData
test_data
;
std
:
:
array
<
float
kBufSize12kHz
>
pitch_buf_decimated
;
Decimate2x
(
test_data
.
PitchBuffer24kHzView
(
)
pitch_buf_decimated
)
;
std
:
:
array
<
float
kNumLags12kHz
>
computed_output
;
{
AutoCorrelationCalculator
auto_corr_calculator
;
auto_corr_calculator
.
ComputeOnPitchBuffer
(
pitch_buf_decimated
computed_output
)
;
}
auto
auto_corr_view
=
test_data
.
AutoCorrelation12kHzView
(
)
;
ExpectNearAbsolute
(
{
auto_corr_view
.
data
(
)
auto_corr_view
.
size
(
)
}
computed_output
3e
-
3f
)
;
}
TEST
(
RnnVadTest
CheckAutoCorrelationOnConstantPitchBuffer
)
{
std
:
:
array
<
float
kBufSize12kHz
>
pitch_buf_decimated
;
std
:
:
fill
(
pitch_buf_decimated
.
begin
(
)
pitch_buf_decimated
.
end
(
)
1
.
f
)
;
std
:
:
array
<
float
kNumLags12kHz
>
computed_output
;
{
AutoCorrelationCalculator
auto_corr_calculator
;
auto_corr_calculator
.
ComputeOnPitchBuffer
(
pitch_buf_decimated
computed_output
)
;
}
constexpr
int
kFrameSize20ms12kHz
=
kFrameSize20ms24kHz
/
2
;
std
:
:
array
<
float
kNumLags12kHz
>
expected_output
;
std
:
:
fill
(
expected_output
.
begin
(
)
expected_output
.
end
(
)
static_cast
<
float
>
(
kFrameSize20ms12kHz
)
)
;
ExpectNearAbsolute
(
expected_output
computed_output
4e
-
5f
)
;
}
}
}
}
