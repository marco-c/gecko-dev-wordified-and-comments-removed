#
ifndef
MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_VECTOR_MATH_H_
#
define
MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_VECTOR_MATH_H_
#
include
<
numeric
>
#
include
"
api
/
array_view
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
cpu_features
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
rtc_base
/
system
/
arch
.
h
"
namespace
webrtc
{
namespace
rnn_vad
{
class
VectorMath
{
public
:
explicit
VectorMath
(
AvailableCpuFeatures
cpu_features
)
:
cpu_features_
(
cpu_features
)
{
}
float
DotProduct
(
rtc
:
:
ArrayView
<
const
float
>
x
rtc
:
:
ArrayView
<
const
float
>
y
)
const
{
#
if
defined
(
WEBRTC_ARCH_X86_FAMILY
)
if
(
cpu_features_
.
avx2
)
{
return
DotProductAvx2
(
x
y
)
;
}
#
endif
RTC_DCHECK_EQ
(
x
.
size
(
)
y
.
size
(
)
)
;
return
std
:
:
inner_product
(
x
.
begin
(
)
x
.
end
(
)
y
.
begin
(
)
0
.
f
)
;
}
private
:
float
DotProductAvx2
(
rtc
:
:
ArrayView
<
const
float
>
x
rtc
:
:
ArrayView
<
const
float
>
y
)
const
;
const
AvailableCpuFeatures
cpu_features_
;
}
;
}
}
#
endif
