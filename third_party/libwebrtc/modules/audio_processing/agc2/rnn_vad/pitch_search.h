#
ifndef
MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_H_
#
define
MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_H_
#
include
<
memory
>
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
auto_correlation
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
common
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
pitch_search_internal
.
h
"
#
include
"
rtc_base
/
gtest_prod_util
.
h
"
namespace
webrtc
{
namespace
rnn_vad
{
class
PitchEstimator
{
public
:
PitchEstimator
(
)
;
PitchEstimator
(
const
PitchEstimator
&
)
=
delete
;
PitchEstimator
&
operator
=
(
const
PitchEstimator
&
)
=
delete
;
~
PitchEstimator
(
)
;
int
Estimate
(
rtc
:
:
ArrayView
<
const
float
kBufSize24kHz
>
pitch_buffer
)
;
private
:
FRIEND_TEST_ALL_PREFIXES
(
RnnVadTest
PitchSearchWithinTolerance
)
;
float
GetLastPitchStrengthForTesting
(
)
const
{
return
last_pitch_48kHz_
.
strength
;
}
PitchInfo
last_pitch_48kHz_
{
}
;
AutoCorrelationCalculator
auto_corr_calculator_
;
std
:
:
vector
<
float
>
pitch_buf_decimated_
;
rtc
:
:
ArrayView
<
float
kBufSize12kHz
>
pitch_buf_decimated_view_
;
std
:
:
vector
<
float
>
auto_corr_
;
rtc
:
:
ArrayView
<
float
kNumLags12kHz
>
auto_corr_view_
;
}
;
}
}
#
endif
