#
ifndef
MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_INTERNAL_H_
#
define
MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_INTERNAL_H_
#
include
<
cstddef
>
#
include
"
api
/
array_view
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
cpu_features
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
common
.
h
"
namespace
webrtc
{
namespace
rnn_vad
{
void
Decimate2x
(
ArrayView
<
const
float
kBufSize24kHz
>
src
ArrayView
<
float
kBufSize12kHz
>
dst
)
;
void
ComputeSlidingFrameSquareEnergies24kHz
(
ArrayView
<
const
float
kBufSize24kHz
>
pitch_buffer
ArrayView
<
float
kRefineNumLags24kHz
>
y_energy
AvailableCpuFeatures
cpu_features
)
;
struct
CandidatePitchPeriods
{
int
best
;
int
second_best
;
}
;
CandidatePitchPeriods
ComputePitchPeriod12kHz
(
ArrayView
<
const
float
kBufSize12kHz
>
pitch_buffer
ArrayView
<
const
float
kNumLags12kHz
>
auto_correlation
AvailableCpuFeatures
cpu_features
)
;
int
ComputePitchPeriod48kHz
(
ArrayView
<
const
float
kBufSize24kHz
>
pitch_buffer
ArrayView
<
const
float
kRefineNumLags24kHz
>
y_energy
CandidatePitchPeriods
pitch_candidates_24kHz
AvailableCpuFeatures
cpu_features
)
;
struct
PitchInfo
{
int
period
;
float
strength
;
}
;
PitchInfo
ComputeExtendedPitchPeriod48kHz
(
ArrayView
<
const
float
kBufSize24kHz
>
pitch_buffer
ArrayView
<
const
float
kRefineNumLags24kHz
>
y_energy
int
initial_pitch_period_48kHz
PitchInfo
last_pitch_48kHz
AvailableCpuFeatures
cpu_features
)
;
}
}
#
endif
