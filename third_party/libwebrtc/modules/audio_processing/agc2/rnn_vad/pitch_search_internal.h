#
ifndef
MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_INTERNAL_H_
#
define
MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_PITCH_SEARCH_INTERNAL_H_
#
include
<
stddef
.
h
>
#
include
<
array
>
#
include
"
api
/
array_view
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
common
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
rnn_vad
/
pitch_info
.
h
"
namespace
webrtc
{
namespace
rnn_vad
{
void
Decimate2x
(
rtc
:
:
ArrayView
<
const
float
kBufSize24kHz
>
src
rtc
:
:
ArrayView
<
float
kBufSize12kHz
>
dst
)
;
float
ComputePitchGainThreshold
(
int
candidate_pitch_period
int
pitch_period_ratio
int
initial_pitch_period
float
initial_pitch_gain
int
prev_pitch_period
float
prev_pitch_gain
)
;
void
ComputeSlidingFrameSquareEnergies
(
rtc
:
:
ArrayView
<
const
float
kBufSize24kHz
>
pitch_buf
rtc
:
:
ArrayView
<
float
kMaxPitch24kHz
+
1
>
yy_values
)
;
std
:
:
array
<
size_t
2
>
FindBestPitchPeriods
(
rtc
:
:
ArrayView
<
const
float
>
auto_corr
rtc
:
:
ArrayView
<
const
float
>
pitch_buf
size_t
max_pitch_period
)
;
size_t
RefinePitchPeriod48kHz
(
rtc
:
:
ArrayView
<
const
float
kBufSize24kHz
>
pitch_buf
rtc
:
:
ArrayView
<
const
size_t
2
>
inv_lags
)
;
PitchInfo
CheckLowerPitchPeriodsAndComputePitchGain
(
rtc
:
:
ArrayView
<
const
float
kBufSize24kHz
>
pitch_buf
int
initial_pitch_period_48kHz
PitchInfo
prev_pitch_48kHz
)
;
}
}
#
endif
