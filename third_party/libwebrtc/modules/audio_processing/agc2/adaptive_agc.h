#
ifndef
MODULES_AUDIO_PROCESSING_AGC2_ADAPTIVE_AGC_H_
#
define
MODULES_AUDIO_PROCESSING_AGC2_ADAPTIVE_AGC_H_
#
include
<
memory
>
#
include
"
modules
/
audio_processing
/
agc2
/
adaptive_digital_gain_applier
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
adaptive_mode_level_estimator
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
noise_level_estimator
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
vad_with_level
.
h
"
#
include
"
modules
/
audio_processing
/
include
/
audio_frame_view
.
h
"
#
include
"
modules
/
audio_processing
/
include
/
audio_processing
.
h
"
namespace
webrtc
{
class
ApmDataDumper
;
class
AdaptiveAgc
{
public
:
explicit
AdaptiveAgc
(
ApmDataDumper
*
apm_data_dumper
)
;
AdaptiveAgc
(
ApmDataDumper
*
apm_data_dumper
const
AudioProcessing
:
:
Config
:
:
GainController2
:
:
AdaptiveDigital
&
config
)
;
~
AdaptiveAgc
(
)
;
void
Process
(
AudioFrameView
<
float
>
frame
float
limiter_envelope
)
;
void
Reset
(
)
;
private
:
AdaptiveModeLevelEstimator
speech_level_estimator_
;
VadLevelAnalyzer
vad_
;
AdaptiveDigitalGainApplier
gain_applier_
;
ApmDataDumper
*
const
apm_data_dumper_
;
std
:
:
unique_ptr
<
NoiseLevelEstimator
>
noise_level_estimator_
;
}
;
}
#
endif
