#
ifndef
MODULES_AUDIO_PROCESSING_AGC2_ADAPTIVE_MODE_LEVEL_ESTIMATOR_AGC_H_
#
define
MODULES_AUDIO_PROCESSING_AGC2_ADAPTIVE_MODE_LEVEL_ESTIMATOR_AGC_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
"
modules
/
audio_processing
/
agc
/
agc
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
adaptive_mode_level_estimator
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
saturation_protector
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
vad_with_level
.
h
"
namespace
webrtc
{
class
AdaptiveModeLevelEstimatorAgc
:
public
Agc
{
public
:
explicit
AdaptiveModeLevelEstimatorAgc
(
ApmDataDumper
*
apm_data_dumper
)
;
void
Process
(
const
int16_t
*
audio
size_t
length
int
sample_rate_hz
)
override
;
bool
GetRmsErrorDb
(
int
*
error
)
override
;
void
Reset
(
)
override
;
float
voice_probability
(
)
const
override
;
private
:
static
constexpr
int
kTimeUntilConfidentMs
=
700
;
static
constexpr
int
kDefaultAgc2LevelHeadroomDbfs
=
-
1
;
int32_t
time_in_ms_since_last_estimate_
=
0
;
AdaptiveModeLevelEstimator
level_estimator_
;
VadLevelAnalyzer
agc2_vad_
;
float
latest_voice_probability_
=
0
.
f
;
}
;
}
#
endif
