#
ifndef
MODULES_AUDIO_PROCESSING_AGC2_SATURATION_PROTECTOR_BUFFER_H_
#
define
MODULES_AUDIO_PROCESSING_AGC2_SATURATION_PROTECTOR_BUFFER_H_
#
include
<
array
>
#
include
<
optional
>
#
include
"
modules
/
audio_processing
/
agc2
/
agc2_common
.
h
"
namespace
webrtc
{
class
SaturationProtectorBuffer
{
public
:
SaturationProtectorBuffer
(
)
;
~
SaturationProtectorBuffer
(
)
;
bool
operator
=
=
(
const
SaturationProtectorBuffer
&
b
)
const
;
inline
bool
operator
!
=
(
const
SaturationProtectorBuffer
&
b
)
const
{
return
!
(
*
this
=
=
b
)
;
}
int
Capacity
(
)
const
;
int
Size
(
)
const
;
void
Reset
(
)
;
void
PushBack
(
float
v
)
;
std
:
:
optional
<
float
>
Front
(
)
const
;
private
:
int
FrontIndex
(
)
const
;
std
:
:
array
<
float
kSaturationProtectorBufferSize
>
buffer_
;
int
next_
=
0
;
int
size_
=
0
;
}
;
}
#
endif
