#
ifndef
MODULES_AUDIO_PROCESSING_TEST_FAKE_RECORDING_DEVICE_H_
#
define
MODULES_AUDIO_PROCESSING_TEST_FAKE_RECORDING_DEVICE_H_
#
include
<
algorithm
>
#
include
<
memory
>
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
common_audio
/
channel_buffer
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
namespace
test
{
class
FakeRecordingDeviceWorker
;
class
FakeRecordingDevice
final
{
public
:
FakeRecordingDevice
(
int
initial_mic_level
int
device_kind
)
;
~
FakeRecordingDevice
(
)
;
int
MicLevel
(
)
const
;
void
SetMicLevel
(
int
level
)
;
void
SetUndoMicLevel
(
int
level
)
;
void
SimulateAnalogGain
(
ArrayView
<
int16_t
>
buffer
)
;
void
SimulateAnalogGain
(
ChannelBuffer
<
float
>
*
buffer
)
;
private
:
std
:
:
unique_ptr
<
FakeRecordingDeviceWorker
>
worker_
;
}
;
}
}
#
endif
