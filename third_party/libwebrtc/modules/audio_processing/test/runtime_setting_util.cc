#
include
"
modules
/
audio_processing
/
test
/
runtime_setting_util
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
void
ReplayRuntimeSetting
(
AudioProcessing
*
apm
const
webrtc
:
:
audioproc
:
:
RuntimeSetting
&
setting
)
{
RTC_CHECK
(
apm
)
;
RTC_CHECK
(
setting
.
has_capture_pre_gain
(
)
|
|
setting
.
has_capture_fixed_post_gain
(
)
|
|
setting
.
has_playout_volume_change
(
)
)
;
if
(
setting
.
has_capture_pre_gain
(
)
)
{
apm
-
>
SetRuntimeSetting
(
AudioProcessing
:
:
RuntimeSetting
:
:
CreateCapturePreGain
(
setting
.
capture_pre_gain
(
)
)
)
;
}
else
if
(
setting
.
has_capture_fixed_post_gain
(
)
)
{
apm
-
>
SetRuntimeSetting
(
AudioProcessing
:
:
RuntimeSetting
:
:
CreateCaptureFixedPostGain
(
setting
.
capture_fixed_post_gain
(
)
)
)
;
}
else
if
(
setting
.
has_playout_volume_change
(
)
)
{
apm
-
>
SetRuntimeSetting
(
AudioProcessing
:
:
RuntimeSetting
:
:
CreatePlayoutVolumeChange
(
setting
.
playout_volume_change
(
)
)
)
;
}
else
if
(
setting
.
has_playout_audio_device_change
(
)
)
{
apm
-
>
SetRuntimeSetting
(
AudioProcessing
:
:
RuntimeSetting
:
:
CreatePlayoutAudioDeviceChange
(
{
setting
.
playout_audio_device_change
(
)
.
id
(
)
setting
.
playout_audio_device_change
(
)
.
max_volume
(
)
}
)
)
;
}
else
if
(
setting
.
has_capture_output_used
(
)
)
{
apm
-
>
SetRuntimeSetting
(
AudioProcessing
:
:
RuntimeSetting
:
:
CreateCaptureOutputUsedSetting
(
setting
.
capture_output_used
(
)
)
)
;
}
}
}
