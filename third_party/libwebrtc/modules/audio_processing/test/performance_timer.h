#
ifndef
MODULES_AUDIO_PROCESSING_TEST_PERFORMANCE_TIMER_H_
#
define
MODULES_AUDIO_PROCESSING_TEST_PERFORMANCE_TIMER_H_
#
include
<
cstddef
>
#
include
<
cstdint
>
#
include
<
optional
>
#
include
<
vector
>
#
include
"
system_wrappers
/
include
/
clock
.
h
"
namespace
webrtc
{
namespace
test
{
class
PerformanceTimer
{
public
:
explicit
PerformanceTimer
(
int
num_frames_to_process
)
;
~
PerformanceTimer
(
)
;
void
StartTimer
(
)
;
void
StopTimer
(
)
;
double
GetDurationAverage
(
)
const
;
double
GetDurationStandardDeviation
(
)
const
;
double
GetDurationAverage
(
size_t
number_of_warmup_samples
)
const
;
double
GetDurationStandardDeviation
(
size_t
number_of_warmup_samples
)
const
;
private
:
webrtc
:
:
Clock
*
clock_
;
std
:
:
optional
<
int64_t
>
start_timestamp_us_
;
std
:
:
vector
<
int64_t
>
timestamps_us_
;
}
;
}
}
#
endif
