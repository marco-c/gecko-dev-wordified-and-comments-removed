#
ifndef
MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_SUPPRESSOR_H_
#
define
MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_SUPPRESSOR_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
memory
>
namespace
webrtc
{
class
TransientSuppressor
{
public
:
enum
class
VadMode
{
kDefault
=
0
kRnnVad
kNoVad
}
;
virtual
~
TransientSuppressor
(
)
{
}
virtual
int
Initialize
(
int
sample_rate_hz
int
detector_rate_hz
int
num_channels
)
=
0
;
virtual
int
Suppress
(
float
*
data
size_t
data_length
int
num_channels
const
float
*
detection_data
size_t
detection_length
const
float
*
reference_data
size_t
reference_length
float
voice_probability
bool
key_pressed
)
=
0
;
}
;
}
#
endif
