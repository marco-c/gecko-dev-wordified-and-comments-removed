#
ifndef
MODULES_AUDIO_PROCESSING_TRANSIENT_WPD_NODE_H_
#
define
MODULES_AUDIO_PROCESSING_TRANSIENT_WPD_NODE_H_
#
include
<
cstddef
>
#
include
<
memory
>
namespace
webrtc
{
class
FIRFilter
;
class
WPDNode
{
public
:
WPDNode
(
size_t
length
const
float
*
coefficients
size_t
coefficients_length
)
;
~
WPDNode
(
)
;
int
Update
(
const
float
*
parent_data
size_t
parent_data_length
)
;
const
float
*
data
(
)
const
{
return
data_
.
get
(
)
;
}
int
set_data
(
const
float
*
new_data
size_t
length
)
;
size_t
length
(
)
const
{
return
length_
;
}
private
:
std
:
:
unique_ptr
<
float
[
]
>
data_
;
size_t
length_
;
std
:
:
unique_ptr
<
FIRFilter
>
filter_
;
}
;
}
#
endif
