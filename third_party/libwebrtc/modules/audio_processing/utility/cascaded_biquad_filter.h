#
ifndef
MODULES_AUDIO_PROCESSING_UTILITY_CASCADED_BIQUAD_FILTER_H_
#
define
MODULES_AUDIO_PROCESSING_UTILITY_CASCADED_BIQUAD_FILTER_H_
#
include
<
stddef
.
h
>
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
namespace
webrtc
{
class
CascadedBiQuadFilter
{
public
:
struct
BiQuadCoefficients
{
float
b
[
3
]
;
float
a
[
2
]
;
}
;
struct
BiQuad
{
explicit
BiQuad
(
const
BiQuadCoefficients
&
coefficients
)
:
coefficients
(
coefficients
)
x
(
)
y
(
)
{
}
void
Reset
(
)
;
BiQuadCoefficients
coefficients
;
float
x
[
2
]
;
float
y
[
2
]
;
}
;
CascadedBiQuadFilter
(
ArrayView
<
const
CascadedBiQuadFilter
:
:
BiQuadCoefficients
>
coefficients
)
;
~
CascadedBiQuadFilter
(
)
;
CascadedBiQuadFilter
(
const
CascadedBiQuadFilter
&
)
=
delete
;
CascadedBiQuadFilter
&
operator
=
(
const
CascadedBiQuadFilter
&
)
=
delete
;
void
Process
(
ArrayView
<
const
float
>
x
ArrayView
<
float
>
y
)
;
void
Process
(
ArrayView
<
float
>
y
)
;
void
Reset
(
)
;
private
:
void
ApplyBiQuad
(
ArrayView
<
const
float
>
x
ArrayView
<
float
>
y
CascadedBiQuadFilter
:
:
BiQuad
*
biquad
)
;
std
:
:
vector
<
BiQuad
>
biquads_
;
}
;
}
#
endif
