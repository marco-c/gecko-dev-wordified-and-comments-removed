#
ifndef
MODULES_AUDIO_PROCESSING_POST_FILTER_H_
#
define
MODULES_AUDIO_PROCESSING_POST_FILTER_H_
#
include
<
cstddef
>
#
include
<
memory
>
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
modules
/
audio_processing
/
audio_buffer
.
h
"
#
include
"
modules
/
audio_processing
/
utility
/
cascaded_biquad_filter
.
h
"
namespace
webrtc
{
class
PostFilter
{
public
:
static
std
:
:
unique_ptr
<
PostFilter
>
CreateIfNeeded
(
int
sample_rate_hz
size_t
num_channels
)
;
~
PostFilter
(
)
=
default
;
PostFilter
(
const
PostFilter
&
)
=
delete
;
PostFilter
&
operator
=
(
const
PostFilter
&
)
=
delete
;
void
Process
(
AudioBuffer
&
audio
)
;
private
:
PostFilter
(
ArrayView
<
const
CascadedBiQuadFilter
:
:
BiQuadCoefficients
>
coefficients
size_t
num_channels
)
;
std
:
:
vector
<
std
:
:
unique_ptr
<
CascadedBiQuadFilter
>
>
filters_
;
}
;
}
#
endif
