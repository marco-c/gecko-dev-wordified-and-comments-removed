#
ifndef
MODULES_AUDIO_PROCESSING_AEC3_ADAPTIVE_FIR_FILTER_ERL_H_
#
define
MODULES_AUDIO_PROCESSING_AEC3_ADAPTIVE_FIR_FILTER_ERL_H_
#
include
<
stddef
.
h
>
#
include
<
array
>
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
aec3_common
.
h
"
#
include
"
rtc_base
/
system
/
arch
.
h
"
namespace
webrtc
{
namespace
aec3
{
void
ErlComputer
(
const
std
:
:
vector
<
std
:
:
array
<
float
kFftLengthBy2Plus1
>
>
&
H2
rtc
:
:
ArrayView
<
float
>
erl
)
;
#
if
defined
(
WEBRTC_HAS_NEON
)
void
ErlComputer_NEON
(
const
std
:
:
vector
<
std
:
:
array
<
float
kFftLengthBy2Plus1
>
>
&
H2
rtc
:
:
ArrayView
<
float
>
erl
)
;
#
endif
#
if
defined
(
WEBRTC_ARCH_X86_FAMILY
)
void
ErlComputer_SSE2
(
const
std
:
:
vector
<
std
:
:
array
<
float
kFftLengthBy2Plus1
>
>
&
H2
rtc
:
:
ArrayView
<
float
>
erl
)
;
void
ErlComputer_AVX2
(
const
std
:
:
vector
<
std
:
:
array
<
float
kFftLengthBy2Plus1
>
>
&
H2
rtc
:
:
ArrayView
<
float
>
erl
)
;
#
endif
}
void
ComputeErl
(
const
Aec3Optimization
&
optimization
const
std
:
:
vector
<
std
:
:
array
<
float
kFftLengthBy2Plus1
>
>
&
H2
rtc
:
:
ArrayView
<
float
>
erl
)
;
}
#
endif
