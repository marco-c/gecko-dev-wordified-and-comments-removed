#
ifndef
MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_ECHO_REMOVER_H_
#
define
MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_ECHO_REMOVER_H_
#
include
<
vector
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
echo_path_variability
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
echo_remover
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
render_buffer
.
h
"
#
include
"
test
/
gmock
.
h
"
namespace
webrtc
{
namespace
test
{
class
MockEchoRemover
:
public
EchoRemover
{
public
:
MockEchoRemover
(
)
;
virtual
~
MockEchoRemover
(
)
;
MOCK_METHOD
(
void
ProcessCapture
(
EchoPathVariability
echo_path_variability
bool
capture_signal_saturation
const
absl
:
:
optional
<
DelayEstimate
>
&
delay_estimate
RenderBuffer
*
render_buffer
Block
*
linear_output
Block
*
capture
)
(
override
)
)
;
MOCK_METHOD
(
void
UpdateEchoLeakageStatus
(
bool
leakage_detected
)
(
override
)
)
;
MOCK_METHOD
(
void
GetMetrics
(
EchoControl
:
:
Metrics
*
metrics
)
(
const
override
)
)
;
MOCK_METHOD
(
void
SetCaptureOutputUsage
(
bool
capture_output_used
)
(
override
)
)
;
}
;
}
}
#
endif
