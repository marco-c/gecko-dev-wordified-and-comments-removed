#
ifndef
MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_DTX_CONTROLLER_H_
#
define
MODULES_AUDIO_CODING_AUDIO_NETWORK_ADAPTOR_DTX_CONTROLLER_H_
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
modules
/
audio_coding
/
audio_network_adaptor
/
controller
.
h
"
#
include
"
modules
/
audio_coding
/
audio_network_adaptor
/
include
/
audio_network_adaptor_config
.
h
"
#
include
"
rtc_base
/
constructor_magic
.
h
"
namespace
webrtc
{
class
DtxController
final
:
public
Controller
{
public
:
struct
Config
{
Config
(
bool
initial_dtx_enabled
int
dtx_enabling_bandwidth_bps
int
dtx_disabling_bandwidth_bps
)
;
bool
initial_dtx_enabled
;
int
dtx_enabling_bandwidth_bps
;
int
dtx_disabling_bandwidth_bps
;
}
;
explicit
DtxController
(
const
Config
&
config
)
;
~
DtxController
(
)
override
;
void
UpdateNetworkMetrics
(
const
NetworkMetrics
&
network_metrics
)
override
;
void
MakeDecision
(
AudioEncoderRuntimeConfig
*
config
)
override
;
private
:
const
Config
config_
;
bool
dtx_enabled_
;
absl
:
:
optional
<
int
>
uplink_bandwidth_bps_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
DtxController
)
;
}
;
}
#
endif
