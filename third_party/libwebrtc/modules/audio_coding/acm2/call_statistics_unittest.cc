#
include
"
modules
/
audio_coding
/
acm2
/
call_statistics
.
h
"
#
include
"
api
/
audio
/
audio_frame
.
h
"
#
include
"
modules
/
audio_coding
/
include
/
audio_coding_module_typedefs
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
acm2
{
TEST
(
CallStatisticsTest
InitializedZero
)
{
CallStatistics
call_stats
;
AudioDecodingCallStats
stats
;
stats
=
call_stats
.
GetDecodingStatistics
(
)
;
EXPECT_EQ
(
0
stats
.
calls_to_neteq
)
;
EXPECT_EQ
(
0
stats
.
calls_to_silence_generator
)
;
EXPECT_EQ
(
0
stats
.
decoded_normal
)
;
EXPECT_EQ
(
0
stats
.
decoded_cng
)
;
EXPECT_EQ
(
0
stats
.
decoded_neteq_plc
)
;
EXPECT_EQ
(
0
stats
.
decoded_plc_cng
)
;
EXPECT_EQ
(
0
stats
.
decoded_muted_output
)
;
}
TEST
(
CallStatisticsTest
AllCalls
)
{
CallStatistics
call_stats
;
AudioDecodingCallStats
stats
;
call_stats
.
DecodedBySilenceGenerator
(
)
;
call_stats
.
DecodedByNetEq
(
AudioFrame
:
:
kNormalSpeech
false
)
;
call_stats
.
DecodedByNetEq
(
AudioFrame
:
:
kPLC
false
)
;
call_stats
.
DecodedByNetEq
(
AudioFrame
:
:
kCodecPLC
false
)
;
call_stats
.
DecodedByNetEq
(
AudioFrame
:
:
kPLCCNG
true
)
;
call_stats
.
DecodedByNetEq
(
AudioFrame
:
:
kCNG
false
)
;
stats
=
call_stats
.
GetDecodingStatistics
(
)
;
EXPECT_EQ
(
5
stats
.
calls_to_neteq
)
;
EXPECT_EQ
(
1
stats
.
calls_to_silence_generator
)
;
EXPECT_EQ
(
1
stats
.
decoded_normal
)
;
EXPECT_EQ
(
1
stats
.
decoded_cng
)
;
EXPECT_EQ
(
1
stats
.
decoded_neteq_plc
)
;
EXPECT_EQ
(
1
stats
.
decoded_codec_plc
)
;
EXPECT_EQ
(
1
stats
.
decoded_plc_cng
)
;
EXPECT_EQ
(
1
stats
.
decoded_muted_output
)
;
}
}
}
