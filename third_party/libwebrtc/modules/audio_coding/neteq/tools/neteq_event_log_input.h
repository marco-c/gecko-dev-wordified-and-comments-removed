#
ifndef
MODULES_AUDIO_CODING_NETEQ_TOOLS_NETEQ_EVENT_LOG_INPUT_H_
#
define
MODULES_AUDIO_CODING_NETEQ_TOOLS_NETEQ_EVENT_LOG_INPUT_H_
#
include
<
map
>
#
include
<
memory
>
#
include
<
string
>
#
include
"
modules
/
audio_coding
/
neteq
/
tools
/
neteq_packet_source_input
.
h
"
#
include
"
modules
/
rtp_rtcp
/
include
/
rtp_rtcp_defines
.
h
"
namespace
webrtc
{
namespace
test
{
class
RtcEventLogSource
;
class
NetEqEventLogInput
final
:
public
NetEqPacketSourceInput
{
public
:
static
NetEqEventLogInput
*
CreateFromFile
(
const
std
:
:
string
&
file_name
absl
:
:
optional
<
uint32_t
>
ssrc_filter
)
;
static
NetEqEventLogInput
*
CreateFromString
(
const
std
:
:
string
&
file_contents
absl
:
:
optional
<
uint32_t
>
ssrc_filter
)
;
absl
:
:
optional
<
int64_t
>
NextOutputEventTime
(
)
const
override
;
void
AdvanceOutputEvent
(
)
override
;
protected
:
PacketSource
*
source
(
)
override
;
private
:
NetEqEventLogInput
(
std
:
:
unique_ptr
<
RtcEventLogSource
>
source
)
;
std
:
:
unique_ptr
<
RtcEventLogSource
>
source_
;
}
;
}
}
#
endif
