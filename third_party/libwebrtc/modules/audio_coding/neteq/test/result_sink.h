#
ifndef
MODULES_AUDIO_CODING_NETEQ_TEST_RESULT_SINK_H_
#
define
MODULES_AUDIO_CODING_NETEQ_TEST_RESULT_SINK_H_
#
include
<
cstdio
>
#
include
<
memory
>
#
include
<
string
>
#
include
"
api
/
neteq
/
neteq
.
h
"
#
include
"
rtc_base
/
message_digest
.
h
"
namespace
webrtc
{
class
ResultSink
{
public
:
explicit
ResultSink
(
const
std
:
:
string
&
output_file
)
;
~
ResultSink
(
)
;
template
<
typename
T
>
void
AddResult
(
const
T
*
test_results
size_t
length
)
;
void
AddResult
(
const
NetEqNetworkStatistics
&
stats
)
;
void
VerifyChecksum
(
const
std
:
:
string
&
ref_check_sum
)
;
private
:
FILE
*
output_fp_
;
std
:
:
unique_ptr
<
rtc
:
:
MessageDigest
>
digest_
;
}
;
template
<
typename
T
>
void
ResultSink
:
:
AddResult
(
const
T
*
test_results
size_t
length
)
{
if
(
output_fp_
)
{
ASSERT_EQ
(
length
fwrite
(
test_results
sizeof
(
T
)
length
output_fp_
)
)
;
}
digest_
-
>
Update
(
test_results
sizeof
(
T
)
*
length
)
;
}
}
#
endif
