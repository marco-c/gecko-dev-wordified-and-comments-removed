#
ifndef
MODULES_AUDIO_CODING_NETEQ_UNDERRUN_OPTIMIZER_H_
#
define
MODULES_AUDIO_CODING_NETEQ_UNDERRUN_OPTIMIZER_H_
#
include
<
memory
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
neteq
/
tick_timer
.
h
"
#
include
"
modules
/
audio_coding
/
neteq
/
histogram
.
h
"
namespace
webrtc
{
class
UnderrunOptimizer
{
public
:
UnderrunOptimizer
(
const
TickTimer
*
tick_timer
int
histogram_quantile
int
forget_factor
absl
:
:
optional
<
int
>
start_forget_weight
absl
:
:
optional
<
int
>
resample_interval_ms
)
;
void
Update
(
int
relative_delay_ms
)
;
absl
:
:
optional
<
int
>
GetOptimalDelayMs
(
)
const
{
return
optimal_delay_ms_
;
}
void
Reset
(
)
;
private
:
const
TickTimer
*
tick_timer_
;
Histogram
histogram_
;
const
int
histogram_quantile_
;
const
absl
:
:
optional
<
int
>
resample_interval_ms_
;
std
:
:
unique_ptr
<
TickTimer
:
:
Stopwatch
>
resample_stopwatch_
;
int
max_delay_in_interval_ms_
=
0
;
absl
:
:
optional
<
int
>
optimal_delay_ms_
;
}
;
}
#
endif
