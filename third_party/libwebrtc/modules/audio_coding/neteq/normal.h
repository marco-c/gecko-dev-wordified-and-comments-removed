#
ifndef
MODULES_AUDIO_CODING_NETEQ_NORMAL_H_
#
define
MODULES_AUDIO_CODING_NETEQ_NORMAL_H_
#
include
<
stdint
.
h
>
#
include
<
string
.
h
>
#
include
"
api
/
neteq
/
neteq
.
h
"
#
include
"
modules
/
audio_coding
/
neteq
/
statistics_calculator
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
rtc_base
/
numerics
/
safe_conversions
.
h
"
namespace
webrtc
{
class
AudioMultiVector
;
class
BackgroundNoise
;
class
DecoderDatabase
;
class
Expand
;
class
Normal
{
public
:
Normal
(
int
fs_hz
DecoderDatabase
*
decoder_database
const
BackgroundNoise
&
background_noise
Expand
*
expand
StatisticsCalculator
*
statistics
)
:
fs_hz_
(
fs_hz
)
decoder_database_
(
decoder_database
)
background_noise_
(
background_noise
)
expand_
(
expand
)
samples_per_ms_
(
rtc
:
:
CheckedDivExact
(
fs_hz_
1000
)
)
default_win_slope_Q14_
(
rtc
:
:
dchecked_cast
<
uint16_t
>
(
(
1
<
<
14
)
/
samples_per_ms_
)
)
statistics_
(
statistics
)
{
}
virtual
~
Normal
(
)
{
}
Normal
(
const
Normal
&
)
=
delete
;
Normal
&
operator
=
(
const
Normal
&
)
=
delete
;
int
Process
(
const
int16_t
*
input
size_t
length
NetEq
:
:
Mode
last_mode
AudioMultiVector
*
output
)
;
private
:
int
fs_hz_
;
DecoderDatabase
*
decoder_database_
;
const
BackgroundNoise
&
background_noise_
;
Expand
*
expand_
;
const
size_t
samples_per_ms_
;
const
int16_t
default_win_slope_Q14_
;
StatisticsCalculator
*
const
statistics_
;
}
;
}
#
endif
