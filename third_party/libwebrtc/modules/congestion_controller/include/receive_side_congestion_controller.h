#
ifndef
MODULES_CONGESTION_CONTROLLER_INCLUDE_RECEIVE_SIDE_CONGESTION_CONTROLLER_H_
#
define
MODULES_CONGESTION_CONTROLLER_INCLUDE_RECEIVE_SIDE_CONGESTION_CONTROLLER_H_
#
include
<
cstdint
>
#
include
<
memory
>
#
include
"
api
/
environment
/
environment
.
h
"
#
include
"
api
/
media_types
.
h
"
#
include
"
api
/
sequence_checker
.
h
"
#
include
"
api
/
units
/
data_rate
.
h
"
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
modules
/
congestion_controller
/
remb_throttler
.
h
"
#
include
"
modules
/
include
/
module_common_types
.
h
"
#
include
"
modules
/
remote_bitrate_estimator
/
congestion_control_feedback_generator
.
h
"
#
include
"
modules
/
remote_bitrate_estimator
/
transport_sequence_number_feedback_generator
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
rtp_packet_received
.
h
"
#
include
"
rtc_base
/
synchronization
/
mutex
.
h
"
#
include
"
rtc_base
/
thread_annotations
.
h
"
namespace
webrtc
{
class
RemoteBitrateEstimator
;
class
ReceiveSideCongestionController
:
public
CallStatsObserver
{
public
:
ReceiveSideCongestionController
(
const
Environment
&
env
TransportSequenceNumberFeedbackGenenerator
:
:
RtcpSender
feedback_sender
RembThrottler
:
:
RembSender
remb_sender
)
;
~
ReceiveSideCongestionController
(
)
override
=
default
;
void
EnableSendCongestionControlFeedbackAccordingToRfc8888
(
)
;
void
OnReceivedPacket
(
const
RtpPacketReceived
&
packet
MediaType
media_type
)
;
void
OnRttUpdate
(
int64_t
avg_rtt_ms
int64_t
max_rtt_ms
)
override
;
void
OnBitrateChanged
(
int
bitrate_bps
)
;
void
SetMaxDesiredReceiveBitrate
(
DataRate
bitrate
)
;
DataRate
LatestReceiveSideEstimate
(
)
const
;
void
RemoveStream
(
uint32_t
ssrc
)
;
TimeDelta
MaybeProcess
(
)
;
private
:
void
PickEstimator
(
bool
has_absolute_send_time
)
RTC_EXCLUSIVE_LOCKS_REQUIRED
(
mutex_
)
;
const
Environment
env_
;
RembThrottler
remb_throttler_
;
SequenceChecker
sequence_checker_
;
bool
send_rfc8888_congestion_feedback_
=
false
;
TransportSequenceNumberFeedbackGenenerator
transport_sequence_number_feedback_generator_
;
CongestionControlFeedbackGenerator
congestion_control_feedback_generator_
RTC_GUARDED_BY
(
sequence_checker_
)
;
mutable
Mutex
mutex_
;
std
:
:
unique_ptr
<
RemoteBitrateEstimator
>
rbe_
RTC_GUARDED_BY
(
mutex_
)
;
bool
using_absolute_send_time_
RTC_GUARDED_BY
(
mutex_
)
;
uint32_t
packets_since_absolute_send_time_
RTC_GUARDED_BY
(
mutex_
)
;
}
;
}
#
endif
