#
include
"
modules
/
congestion_controller
/
pcc
/
rtt_tracker
.
h
"
#
include
<
algorithm
>
namespace
webrtc
{
namespace
pcc
{
RttTracker
:
:
RttTracker
(
TimeDelta
initial_rtt
double
alpha
)
:
rtt_estimate_
(
initial_rtt
)
alpha_
(
alpha
)
{
}
void
RttTracker
:
:
OnPacketsFeedback
(
const
std
:
:
vector
<
PacketResult
>
&
packet_feedbacks
Timestamp
feedback_received_time
)
{
TimeDelta
packet_rtt
=
TimeDelta
:
:
MinusInfinity
(
)
;
for
(
const
PacketResult
&
packet_result
:
packet_feedbacks
)
{
if
(
packet_result
.
receive_time
.
IsInfinite
(
)
)
continue
;
packet_rtt
=
std
:
:
max
<
TimeDelta
>
(
packet_rtt
feedback_received_time
-
packet_result
.
sent_packet
.
send_time
)
;
}
if
(
packet_rtt
.
IsFinite
(
)
)
rtt_estimate_
=
(
1
-
alpha_
)
*
rtt_estimate_
+
alpha_
*
packet_rtt
;
}
TimeDelta
RttTracker
:
:
GetRtt
(
)
const
{
return
rtt_estimate_
;
}
}
}
