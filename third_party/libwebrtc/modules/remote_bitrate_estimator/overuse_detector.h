#
ifndef
MODULES_REMOTE_BITRATE_ESTIMATOR_OVERUSE_DETECTOR_H_
#
define
MODULES_REMOTE_BITRATE_ESTIMATOR_OVERUSE_DETECTOR_H_
#
include
<
stdint
.
h
>
#
include
"
api
/
network_state_predictor
.
h
"
#
include
"
api
/
transport
/
webrtc_key_value_config
.
h
"
namespace
webrtc
{
bool
AdaptiveThresholdExperimentIsDisabled
(
const
WebRtcKeyValueConfig
&
key_value_config
)
;
class
OveruseDetector
{
public
:
explicit
OveruseDetector
(
const
WebRtcKeyValueConfig
*
key_value_config
)
;
virtual
~
OveruseDetector
(
)
;
OveruseDetector
(
const
OveruseDetector
&
)
=
delete
;
OveruseDetector
&
operator
=
(
const
OveruseDetector
&
)
=
delete
;
BandwidthUsage
Detect
(
double
offset
double
timestamp_delta
int
num_of_deltas
int64_t
now_ms
)
;
BandwidthUsage
State
(
)
const
;
private
:
void
UpdateThreshold
(
double
modified_offset
int64_t
now_ms
)
;
void
InitializeExperiment
(
const
WebRtcKeyValueConfig
&
key_value_config
)
;
bool
in_experiment_
;
double
k_up_
;
double
k_down_
;
double
overusing_time_threshold_
;
double
threshold_
;
int64_t
last_update_ms_
;
double
prev_offset_
;
double
time_over_using_
;
int
overuse_counter_
;
BandwidthUsage
hypothesis_
;
}
;
}
#
endif
