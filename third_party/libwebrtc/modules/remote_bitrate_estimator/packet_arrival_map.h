#
ifndef
MODULES_REMOTE_BITRATE_ESTIMATOR_PACKET_ARRIVAL_MAP_H_
#
define
MODULES_REMOTE_BITRATE_ESTIMATOR_PACKET_ARRIVAL_MAP_H_
#
include
<
cstddef
>
#
include
<
cstdint
>
#
include
<
deque
>
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
class
PacketArrivalTimeMap
{
public
:
static
constexpr
size_t
kMaxNumberOfPackets
=
(
1
<
<
15
)
;
bool
has_received
(
int64_t
sequence_number
)
const
;
int64_t
begin_sequence_number
(
)
const
{
return
begin_sequence_number_
;
}
int64_t
end_sequence_number
(
)
const
{
return
begin_sequence_number_
+
arrival_times
.
size
(
)
;
}
int64_t
get
(
int64_t
sequence_number
)
{
int64_t
pos
=
sequence_number
-
begin_sequence_number_
;
RTC_DCHECK
(
pos
>
=
0
&
&
pos
<
static_cast
<
int64_t
>
(
arrival_times
.
size
(
)
)
)
;
return
arrival_times
[
pos
]
;
}
int64_t
clamp
(
int64_t
sequence_number
)
const
;
void
EraseTo
(
int64_t
sequence_number
)
;
void
AddPacket
(
int64_t
sequence_number
int64_t
arrival_time_ms
)
;
void
RemoveOldPackets
(
int64_t
sequence_number
int64_t
arrival_time_limit
)
;
private
:
std
:
:
deque
<
int64_t
>
arrival_times
;
int64_t
begin_sequence_number_
=
0
;
bool
has_seen_packet_
=
false
;
}
;
}
#
endif
