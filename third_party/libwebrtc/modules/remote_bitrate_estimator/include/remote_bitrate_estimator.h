#
ifndef
MODULES_REMOTE_BITRATE_ESTIMATOR_INCLUDE_REMOTE_BITRATE_ESTIMATOR_H_
#
define
MODULES_REMOTE_BITRATE_ESTIMATOR_INCLUDE_REMOTE_BITRATE_ESTIMATOR_H_
#
include
<
cstdint
>
#
include
<
vector
>
#
include
"
api
/
units
/
data_rate
.
h
"
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
modules
/
include
/
module_common_types
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
rtp_packet_received
.
h
"
namespace
webrtc
{
class
Clock
;
class
RemoteBitrateObserver
{
public
:
virtual
void
OnReceiveBitrateChanged
(
const
std
:
:
vector
<
uint32_t
>
&
ssrcs
uint32_t
bitrate
)
=
0
;
virtual
~
RemoteBitrateObserver
(
)
{
}
}
;
class
RemoteBitrateEstimator
:
public
CallStatsObserver
{
public
:
~
RemoteBitrateEstimator
(
)
override
{
}
virtual
void
IncomingPacket
(
const
RtpPacketReceived
&
rtp_packet
)
=
0
;
virtual
void
RemoveStream
(
uint32_t
ssrc
)
=
0
;
virtual
DataRate
LatestEstimate
(
)
const
=
0
;
virtual
TimeDelta
Process
(
)
=
0
;
protected
:
static
constexpr
TimeDelta
kProcessInterval
=
TimeDelta
:
:
Millis
(
500
)
;
static
constexpr
TimeDelta
kStreamTimeOut
=
TimeDelta
:
:
Seconds
(
2
)
;
}
;
}
#
endif
