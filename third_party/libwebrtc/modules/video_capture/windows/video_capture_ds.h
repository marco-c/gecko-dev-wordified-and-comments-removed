#
ifndef
MODULES_VIDEO_CAPTURE_MAIN_SOURCE_WINDOWS_VIDEO_CAPTURE_DS_H_
#
define
MODULES_VIDEO_CAPTURE_MAIN_SOURCE_WINDOWS_VIDEO_CAPTURE_DS_H_
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
modules
/
video_capture
/
video_capture_impl
.
h
"
#
include
"
modules
/
video_capture
/
windows
/
device_info_ds
.
h
"
#
define
CAPTURE_FILTER_NAME
L
"
VideoCaptureFilter
"
#
define
SINK_FILTER_NAME
L
"
SinkFilter
"
namespace
webrtc
{
namespace
videocapturemodule
{
class
CaptureSinkFilter
;
class
VideoCaptureDS
:
public
VideoCaptureImpl
{
public
:
VideoCaptureDS
(
)
;
virtual
int32_t
Init
(
const
char
*
deviceUniqueIdUTF8
)
;
int32_t
StartCapture
(
const
VideoCaptureCapability
&
capability
)
override
;
int32_t
StopCapture
(
)
override
;
bool
CaptureStarted
(
)
override
;
int32_t
CaptureSettings
(
VideoCaptureCapability
&
settings
)
override
;
protected
:
~
VideoCaptureDS
(
)
override
;
int32_t
SetCameraOutput
(
const
VideoCaptureCapability
&
requestedCapability
)
;
int32_t
DisconnectGraph
(
)
;
HRESULT
ConnectDVCamera
(
)
;
DeviceInfoDS
_dsInfo
RTC_GUARDED_BY
(
api_checker_
)
;
IBaseFilter
*
_captureFilter
RTC_GUARDED_BY
(
api_checker_
)
;
IGraphBuilder
*
_graphBuilder
RTC_GUARDED_BY
(
api_checker_
)
;
IMediaControl
*
_mediaControl
RTC_GUARDED_BY
(
api_checker_
)
;
rtc
:
:
scoped_refptr
<
CaptureSinkFilter
>
sink_filter_
RTC_GUARDED_BY
(
api_checker_
)
;
IPin
*
_inputSendPin
RTC_GUARDED_BY
(
api_checker_
)
;
IPin
*
_outputCapturePin
RTC_GUARDED_BY
(
api_checker_
)
;
IBaseFilter
*
_dvFilter
RTC_GUARDED_BY
(
api_checker_
)
;
IPin
*
_inputDvPin
RTC_GUARDED_BY
(
api_checker_
)
;
IPin
*
_outputDvPin
RTC_GUARDED_BY
(
api_checker_
)
;
}
;
}
}
#
endif
