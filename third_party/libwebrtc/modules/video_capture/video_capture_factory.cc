#
include
"
modules
/
video_capture
/
video_capture_factory
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
modules
/
video_capture
/
video_capture
.
h
"
#
include
"
modules
/
video_capture
/
video_capture_impl
.
h
"
namespace
webrtc
{
scoped_refptr
<
VideoCaptureModule
>
VideoCaptureFactory
:
:
Create
(
[
[
maybe_unused
]
]
const
char
*
deviceUniqueIdUTF8
)
{
return
videocapturemodule
:
:
VideoCaptureImpl
:
:
Create
(
deviceUniqueIdUTF8
)
;
}
scoped_refptr
<
VideoCaptureModule
>
VideoCaptureFactory
:
:
Create
(
[
[
maybe_unused
]
]
VideoCaptureOptions
*
options
[
[
maybe_unused
]
]
const
char
*
deviceUniqueIdUTF8
)
{
#
if
(
!
defined
(
WEBRTC_LINUX
)
&
&
!
defined
(
WEBRTC_BSD
)
)
|
|
defined
(
WEBRTC_ANDROID
)
return
nullptr
;
#
else
return
videocapturemodule
:
:
VideoCaptureImpl
:
:
Create
(
options
deviceUniqueIdUTF8
)
;
#
endif
}
VideoCaptureModule
:
:
DeviceInfo
*
VideoCaptureFactory
:
:
CreateDeviceInfo
(
)
{
return
videocapturemodule
:
:
VideoCaptureImpl
:
:
CreateDeviceInfo
(
)
;
}
VideoCaptureModule
:
:
DeviceInfo
*
VideoCaptureFactory
:
:
CreateDeviceInfo
(
[
[
maybe_unused
]
]
VideoCaptureOptions
*
options
)
{
#
if
(
!
defined
(
WEBRTC_LINUX
)
&
&
!
defined
(
WEBRTC_BSD
)
)
|
|
defined
(
WEBRTC_ANDROID
)
return
nullptr
;
#
else
return
videocapturemodule
:
:
VideoCaptureImpl
:
:
CreateDeviceInfo
(
options
)
;
#
endif
}
}
