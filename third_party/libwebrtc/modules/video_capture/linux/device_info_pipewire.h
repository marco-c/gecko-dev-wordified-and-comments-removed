#
ifndef
MODULES_VIDEO_CAPTURE_LINUX_DEVICE_INFO_PIPEWIRE_H_
#
define
MODULES_VIDEO_CAPTURE_LINUX_DEVICE_INFO_PIPEWIRE_H_
#
include
<
stdint
.
h
>
#
include
"
modules
/
video_capture
/
device_info_impl
.
h
"
#
include
"
modules
/
video_capture
/
video_capture_options
.
h
"
namespace
webrtc
{
namespace
videocapturemodule
{
class
DeviceInfoPipeWire
:
public
DeviceInfoImpl
{
public
:
explicit
DeviceInfoPipeWire
(
VideoCaptureOptions
*
options
)
;
~
DeviceInfoPipeWire
(
)
override
;
uint32_t
NumberOfDevices
(
)
override
;
int32_t
GetDeviceName
(
uint32_t
deviceNumber
char
*
deviceNameUTF8
uint32_t
deviceNameLength
char
*
deviceUniqueIdUTF8
uint32_t
deviceUniqueIdUTF8Length
char
*
productUniqueIdUTF8
=
nullptr
uint32_t
productUniqueIdUTF8Length
=
0
pid_t
*
pid
=
0
bool
*
deviceIsPlaceholder
=
0
)
override
;
int32_t
CreateCapabilityMap
(
const
char
*
deviceUniqueIdUTF8
)
override
RTC_EXCLUSIVE_LOCKS_REQUIRED
(
_apiLock
)
;
int32_t
DisplayCaptureSettingsDialogBox
(
const
char
*
const
char
*
void
*
uint32_t
uint32_t
)
override
;
int32_t
Init
(
)
override
;
private
:
webrtc
:
:
scoped_refptr
<
PipeWireSession
>
pipewire_session_
;
}
;
}
}
#
endif
