#
ifndef
MODULES_RTP_RTCP_INCLUDE_ULPFEC_RECEIVER_H_
#
define
MODULES_RTP_RTCP_INCLUDE_ULPFEC_RECEIVER_H_
#
include
<
memory
>
#
include
"
api
/
array_view
.
h
"
#
include
"
api
/
rtp_parameters
.
h
"
#
include
"
modules
/
rtp_rtcp
/
include
/
rtp_rtcp_defines
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
rtp_packet_received
.
h
"
namespace
webrtc
{
struct
FecPacketCounter
{
FecPacketCounter
(
)
=
default
;
size_t
num_packets
=
0
;
size_t
num_bytes
=
0
;
size_t
num_fec_packets
=
0
;
size_t
num_recovered_packets
=
0
;
int64_t
first_packet_time_ms
=
-
1
;
}
;
class
UlpfecReceiver
{
public
:
static
std
:
:
unique_ptr
<
UlpfecReceiver
>
Create
(
uint32_t
ssrc
RecoveredPacketReceiver
*
callback
rtc
:
:
ArrayView
<
const
RtpExtension
>
extensions
)
;
virtual
~
UlpfecReceiver
(
)
{
}
virtual
bool
AddReceivedRedPacket
(
const
RtpPacketReceived
&
rtp_packet
uint8_t
ulpfec_payload_type
)
=
0
;
virtual
void
ProcessReceivedFec
(
)
=
0
;
virtual
FecPacketCounter
GetPacketCounter
(
)
const
=
0
;
virtual
void
SetRtpExtensions
(
rtc
:
:
ArrayView
<
const
RtpExtension
>
extensions
)
=
0
;
}
;
}
#
endif
