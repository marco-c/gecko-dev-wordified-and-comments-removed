#
include
"
modules
/
rtp_rtcp
/
source
/
leb128
.
h
"
#
include
<
cstdint
>
namespace
webrtc
{
int
Leb128Size
(
uint64_t
value
)
{
int
size
=
0
;
while
(
value
>
=
0x80
)
{
+
+
size
;
value
>
>
=
7
;
}
return
size
+
1
;
}
uint64_t
ReadLeb128
(
const
uint8_t
*
&
read_at
const
uint8_t
*
end
)
{
uint64_t
value
=
0
;
int
fill_bits
=
0
;
while
(
read_at
!
=
end
&
&
fill_bits
<
64
-
7
)
{
uint8_t
leb128_byte
=
*
read_at
;
value
|
=
uint64_t
{
leb128_byte
&
0x7Fu
}
<
<
fill_bits
;
+
+
read_at
;
fill_bits
+
=
7
;
if
(
(
leb128_byte
&
0x80
)
=
=
0
)
{
return
value
;
}
}
if
(
read_at
!
=
end
&
&
*
read_at
<
=
1
)
{
value
|
=
uint64_t
{
*
read_at
}
<
<
fill_bits
;
+
+
read_at
;
return
value
;
}
read_at
=
nullptr
;
return
0
;
}
int
WriteLeb128
(
uint64_t
value
uint8_t
*
buffer
)
{
int
size
=
0
;
while
(
value
>
=
0x80
)
{
buffer
[
size
]
=
0x80
|
(
value
&
0x7F
)
;
+
+
size
;
value
>
>
=
7
;
}
buffer
[
size
]
=
value
;
+
+
size
;
return
size
;
}
}
