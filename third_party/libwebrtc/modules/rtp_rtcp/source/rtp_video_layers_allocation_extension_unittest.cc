#
include
"
modules
/
rtp_rtcp
/
source
/
rtp_video_layers_allocation_extension
.
h
"
#
include
"
api
/
video
/
video_layers_allocation
.
h
"
#
include
"
rtc_base
/
bit_buffer
.
h
"
#
include
"
rtc_base
/
buffer
.
h
"
#
include
"
test
/
gmock
.
h
"
namespace
webrtc
{
namespace
{
TEST
(
RtpVideoLayersAllocationExtension
WriteEmptyLayersAllocationReturnsFalse
)
{
VideoLayersAllocation
written_allocation
;
rtc
:
:
Buffer
buffer
(
RtpVideoLayersAllocationExtension
:
:
ValueSize
(
written_allocation
)
)
;
EXPECT_FALSE
(
RtpVideoLayersAllocationExtension
:
:
Write
(
buffer
written_allocation
)
)
;
}
TEST
(
RtpVideoLayersAllocationExtension
CanWriteAndParse2SpatialWith2TemporalLayers
)
{
VideoLayersAllocation
written_allocation
;
written_allocation
.
rtp_stream_index
=
1
;
written_allocation
.
active_spatial_layers
=
{
{
0
0
{
DataRate
:
:
KilobitsPerSec
(
25
)
DataRate
:
:
KilobitsPerSec
(
50
)
}
0
0
0
}
{
1
0
{
DataRate
:
:
KilobitsPerSec
(
100
)
DataRate
:
:
KilobitsPerSec
(
200
)
}
0
0
0
}
}
;
rtc
:
:
Buffer
buffer
(
RtpVideoLayersAllocationExtension
:
:
ValueSize
(
written_allocation
)
)
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Write
(
buffer
written_allocation
)
)
;
VideoLayersAllocation
parsed_allocation
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Parse
(
buffer
&
parsed_allocation
)
)
;
EXPECT_EQ
(
written_allocation
parsed_allocation
)
;
}
TEST
(
RtpVideoLayersAllocationExtension
CanWriteAndParseAllocationWithDifferentNumerOfSpatialLayers
)
{
VideoLayersAllocation
written_allocation
;
written_allocation
.
rtp_stream_index
=
1
;
written_allocation
.
active_spatial_layers
=
{
{
0
0
{
DataRate
:
:
KilobitsPerSec
(
50
)
}
0
0
0
}
{
1
0
{
DataRate
:
:
KilobitsPerSec
(
100
)
}
0
0
0
}
{
1
1
{
DataRate
:
:
KilobitsPerSec
(
200
)
}
0
0
0
}
}
;
rtc
:
:
Buffer
buffer
(
RtpVideoLayersAllocationExtension
:
:
ValueSize
(
written_allocation
)
)
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Write
(
buffer
written_allocation
)
)
;
VideoLayersAllocation
parsed_allocation
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Parse
(
buffer
&
parsed_allocation
)
)
;
EXPECT_EQ
(
written_allocation
parsed_allocation
)
;
}
TEST
(
RtpVideoLayersAllocationExtension
CanWriteAndParseAllocationWithSkippedLowerSpatialLayer
)
{
VideoLayersAllocation
written_allocation
;
written_allocation
.
rtp_stream_index
=
1
;
written_allocation
.
active_spatial_layers
=
{
{
0
0
{
DataRate
:
:
KilobitsPerSec
(
50
)
}
0
0
0
}
{
1
1
{
DataRate
:
:
KilobitsPerSec
(
200
)
}
0
0
0
}
}
;
rtc
:
:
Buffer
buffer
(
RtpVideoLayersAllocationExtension
:
:
ValueSize
(
written_allocation
)
)
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Write
(
buffer
written_allocation
)
)
;
VideoLayersAllocation
parsed_allocation
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Parse
(
buffer
&
parsed_allocation
)
)
;
EXPECT_EQ
(
written_allocation
parsed_allocation
)
;
}
TEST
(
RtpVideoLayersAllocationExtension
CanWriteAndParseAllocationWithSkippedRtpStreamIds
)
{
VideoLayersAllocation
written_allocation
;
written_allocation
.
rtp_stream_index
=
2
;
written_allocation
.
active_spatial_layers
=
{
{
0
0
{
DataRate
:
:
KilobitsPerSec
(
50
)
}
0
0
0
}
{
2
0
{
DataRate
:
:
KilobitsPerSec
(
200
)
}
0
0
0
}
}
;
rtc
:
:
Buffer
buffer
(
RtpVideoLayersAllocationExtension
:
:
ValueSize
(
written_allocation
)
)
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Write
(
buffer
written_allocation
)
)
;
VideoLayersAllocation
parsed_allocation
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Parse
(
buffer
&
parsed_allocation
)
)
;
EXPECT_EQ
(
written_allocation
parsed_allocation
)
;
}
TEST
(
RtpVideoLayersAllocationExtension
CanWriteAndParseAllocationWithDifferentNumerOfTemporalLayers
)
{
VideoLayersAllocation
written_allocation
;
written_allocation
.
rtp_stream_index
=
1
;
written_allocation
.
active_spatial_layers
=
{
{
0
0
{
DataRate
:
:
KilobitsPerSec
(
25
)
DataRate
:
:
KilobitsPerSec
(
50
)
}
0
0
0
}
{
1
0
{
DataRate
:
:
KilobitsPerSec
(
100
)
}
0
0
0
}
}
;
rtc
:
:
Buffer
buffer
(
RtpVideoLayersAllocationExtension
:
:
ValueSize
(
written_allocation
)
)
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Write
(
buffer
written_allocation
)
)
;
VideoLayersAllocation
parsed_allocation
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Parse
(
buffer
&
parsed_allocation
)
)
;
EXPECT_EQ
(
written_allocation
parsed_allocation
)
;
}
TEST
(
RtpVideoLayersAllocationExtension
CanWriteAndParseAllocationWithResolution
)
{
VideoLayersAllocation
written_allocation
;
written_allocation
.
rtp_stream_index
=
1
;
written_allocation
.
resolution_and_frame_rate_is_valid
=
true
;
written_allocation
.
active_spatial_layers
=
{
{
0
0
{
DataRate
:
:
KilobitsPerSec
(
25
)
DataRate
:
:
KilobitsPerSec
(
50
)
}
320
240
8
}
{
1
1
{
DataRate
:
:
KilobitsPerSec
(
100
)
DataRate
:
:
KilobitsPerSec
(
200
)
}
640
320
30
}
}
;
rtc
:
:
Buffer
buffer
(
RtpVideoLayersAllocationExtension
:
:
ValueSize
(
written_allocation
)
)
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Write
(
buffer
written_allocation
)
)
;
VideoLayersAllocation
parsed_allocation
;
EXPECT_TRUE
(
RtpVideoLayersAllocationExtension
:
:
Parse
(
buffer
&
parsed_allocation
)
)
;
EXPECT_EQ
(
written_allocation
parsed_allocation
)
;
}
}
}
