#
include
"
modules
/
rtp_rtcp
/
source
/
rtcp_packet
/
remote_estimate
.
h
"
#
include
"
api
/
transport
/
network_types
.
h
"
#
include
"
api
/
units
/
data_rate
.
h
"
#
include
"
rtc_base
/
buffer
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
rtcp
{
TEST
(
RemoteEstimateTest
EncodesCapacityBounds
)
{
NetworkStateEstimate
src
;
src
.
link_capacity_lower
=
DataRate
:
:
KilobitsPerSec
(
10
)
;
src
.
link_capacity_upper
=
DataRate
:
:
KilobitsPerSec
(
1000000
)
;
rtc
:
:
Buffer
data
=
GetRemoteEstimateSerializer
(
)
-
>
Serialize
(
src
)
;
NetworkStateEstimate
dst
;
EXPECT_TRUE
(
GetRemoteEstimateSerializer
(
)
-
>
Parse
(
data
&
dst
)
)
;
EXPECT_EQ
(
src
.
link_capacity_lower
dst
.
link_capacity_lower
)
;
EXPECT_EQ
(
src
.
link_capacity_upper
dst
.
link_capacity_upper
)
;
}
TEST
(
RemoteEstimateTest
ExpandsToPlusInfinity
)
{
NetworkStateEstimate
src
;
src
.
link_capacity_lower
=
DataRate
:
:
KilobitsPerSec
(
2
<
<
24
)
;
src
.
link_capacity_upper
=
DataRate
:
:
PlusInfinity
(
)
;
rtc
:
:
Buffer
data
=
GetRemoteEstimateSerializer
(
)
-
>
Serialize
(
src
)
;
NetworkStateEstimate
dst
;
EXPECT_TRUE
(
GetRemoteEstimateSerializer
(
)
-
>
Parse
(
data
&
dst
)
)
;
EXPECT_TRUE
(
dst
.
link_capacity_lower
.
IsPlusInfinity
(
)
)
;
EXPECT_TRUE
(
dst
.
link_capacity_upper
.
IsPlusInfinity
(
)
)
;
}
TEST
(
RemoteEstimateTest
DoesNotEncodeNegative
)
{
NetworkStateEstimate
src
;
src
.
link_capacity_lower
=
DataRate
:
:
MinusInfinity
(
)
;
src
.
link_capacity_upper
=
DataRate
:
:
MinusInfinity
(
)
;
rtc
:
:
Buffer
data
=
GetRemoteEstimateSerializer
(
)
-
>
Serialize
(
src
)
;
EXPECT_EQ
(
data
.
size
(
)
0u
)
;
NetworkStateEstimate
dst
;
dst
.
link_capacity_lower
=
DataRate
:
:
KilobitsPerSec
(
300
)
;
EXPECT_TRUE
(
GetRemoteEstimateSerializer
(
)
-
>
Parse
(
data
&
dst
)
)
;
EXPECT_EQ
(
dst
.
link_capacity_lower
DataRate
:
:
KilobitsPerSec
(
300
)
)
;
EXPECT_TRUE
(
dst
.
link_capacity_upper
.
IsMinusInfinity
(
)
)
;
}
}
}
