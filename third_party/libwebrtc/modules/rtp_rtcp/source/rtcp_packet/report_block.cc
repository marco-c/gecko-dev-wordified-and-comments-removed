#
include
"
modules
/
rtp_rtcp
/
source
/
rtcp_packet
/
report_block
.
h
"
#
include
<
cstddef
>
#
include
<
cstdint
>
#
include
"
modules
/
rtp_rtcp
/
source
/
byte_io
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
rtc_base
/
logging
.
h
"
namespace
webrtc
{
namespace
rtcp
{
ReportBlock
:
:
ReportBlock
(
)
:
source_ssrc_
(
0
)
fraction_lost_
(
0
)
cumulative_lost_
(
0
)
extended_high_seq_num_
(
0
)
jitter_
(
0
)
last_sr_
(
0
)
delay_since_last_sr_
(
0
)
{
}
bool
ReportBlock
:
:
Parse
(
const
uint8_t
*
buffer
size_t
length
)
{
RTC_DCHECK
(
buffer
!
=
nullptr
)
;
if
(
length
<
ReportBlock
:
:
kLength
)
{
RTC_LOG
(
LS_ERROR
)
<
<
"
Report
Block
should
be
24
bytes
long
"
;
return
false
;
}
source_ssrc_
=
ByteReader
<
uint32_t
>
:
:
ReadBigEndian
(
&
buffer
[
0
]
)
;
fraction_lost_
=
buffer
[
4
]
;
cumulative_lost_
=
ByteReader
<
int32_t
3
>
:
:
ReadBigEndian
(
&
buffer
[
5
]
)
;
extended_high_seq_num_
=
ByteReader
<
uint32_t
>
:
:
ReadBigEndian
(
&
buffer
[
8
]
)
;
jitter_
=
ByteReader
<
uint32_t
>
:
:
ReadBigEndian
(
&
buffer
[
12
]
)
;
last_sr_
=
ByteReader
<
uint32_t
>
:
:
ReadBigEndian
(
&
buffer
[
16
]
)
;
delay_since_last_sr_
=
ByteReader
<
uint32_t
>
:
:
ReadBigEndian
(
&
buffer
[
20
]
)
;
return
true
;
}
void
ReportBlock
:
:
Create
(
uint8_t
*
buffer
)
const
{
RTC_DCHECK_LT
(
cumulative_lost
(
)
(
1
<
<
23
)
)
;
ByteWriter
<
uint32_t
>
:
:
WriteBigEndian
(
&
buffer
[
0
]
source_ssrc
(
)
)
;
ByteWriter
<
uint8_t
>
:
:
WriteBigEndian
(
&
buffer
[
4
]
fraction_lost
(
)
)
;
ByteWriter
<
int32_t
3
>
:
:
WriteBigEndian
(
&
buffer
[
5
]
cumulative_lost
(
)
)
;
ByteWriter
<
uint32_t
>
:
:
WriteBigEndian
(
&
buffer
[
8
]
extended_high_seq_num
(
)
)
;
ByteWriter
<
uint32_t
>
:
:
WriteBigEndian
(
&
buffer
[
12
]
jitter
(
)
)
;
ByteWriter
<
uint32_t
>
:
:
WriteBigEndian
(
&
buffer
[
16
]
last_sr
(
)
)
;
ByteWriter
<
uint32_t
>
:
:
WriteBigEndian
(
&
buffer
[
20
]
delay_since_last_sr
(
)
)
;
}
bool
ReportBlock
:
:
SetCumulativeLost
(
int32_t
cumulative_lost
)
{
if
(
cumulative_lost
>
=
(
1
<
<
23
)
|
|
cumulative_lost
<
-
(
1
<
<
23
)
)
{
RTC_LOG
(
LS_WARNING
)
<
<
"
Cumulative
lost
is
too
big
to
fit
into
Report
Block
"
;
return
false
;
}
cumulative_lost_
=
cumulative_lost
;
return
true
;
}
}
}
