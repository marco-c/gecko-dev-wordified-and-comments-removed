#
include
"
modules
/
rtp_rtcp
/
source
/
create_video_rtp_depacketizer
.
h
"
#
include
<
memory
>
#
include
"
api
/
video
/
video_codec_type
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
video_rtp_depacketizer
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
video_rtp_depacketizer_av1
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
video_rtp_depacketizer_generic
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
video_rtp_depacketizer_h264
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
video_rtp_depacketizer_vp8
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
video_rtp_depacketizer_vp9
.
h
"
namespace
webrtc
{
std
:
:
unique_ptr
<
VideoRtpDepacketizer
>
CreateVideoRtpDepacketizer
(
VideoCodecType
codec
)
{
switch
(
codec
)
{
case
kVideoCodecH264
:
return
std
:
:
make_unique
<
VideoRtpDepacketizerH264
>
(
)
;
case
kVideoCodecVP8
:
return
std
:
:
make_unique
<
VideoRtpDepacketizerVp8
>
(
)
;
case
kVideoCodecVP9
:
return
std
:
:
make_unique
<
VideoRtpDepacketizerVp9
>
(
)
;
case
kVideoCodecAV1
:
return
std
:
:
make_unique
<
VideoRtpDepacketizerAv1
>
(
)
;
case
kVideoCodecGeneric
:
case
kVideoCodecMultiplex
:
return
std
:
:
make_unique
<
VideoRtpDepacketizerGeneric
>
(
)
;
}
RTC_CHECK_NOTREACHED
(
)
;
}
}
