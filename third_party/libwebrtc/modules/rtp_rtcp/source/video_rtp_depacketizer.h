#
ifndef
MODULES_RTP_RTCP_SOURCE_VIDEO_RTP_DEPACKETIZER_H_
#
define
MODULES_RTP_RTCP_SOURCE_VIDEO_RTP_DEPACKETIZER_H_
#
include
<
stdint
.
h
>
#
include
<
optional
>
#
include
"
api
/
array_view
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
api
/
video
/
encoded_image
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
rtp_video_header
.
h
"
#
include
"
rtc_base
/
copy_on_write_buffer
.
h
"
namespace
webrtc
{
class
VideoRtpDepacketizer
{
public
:
struct
ParsedRtpPayload
{
RTPVideoHeader
video_header
;
CopyOnWriteBuffer
video_payload
;
}
;
virtual
~
VideoRtpDepacketizer
(
)
=
default
;
virtual
std
:
:
optional
<
ParsedRtpPayload
>
Parse
(
CopyOnWriteBuffer
rtp_payload
)
=
0
;
virtual
scoped_refptr
<
EncodedImageBuffer
>
AssembleFrame
(
ArrayView
<
const
ArrayView
<
const
uint8_t
>
>
rtp_payloads
)
;
}
;
}
#
endif
