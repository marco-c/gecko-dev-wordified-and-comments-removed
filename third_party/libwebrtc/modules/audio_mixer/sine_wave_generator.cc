#
include
"
modules
/
audio_mixer
/
sine_wave_generator
.
h
"
#
include
<
math
.
h
>
#
include
<
stddef
.
h
>
#
include
<
numbers
>
#
include
"
rtc_base
/
numerics
/
safe_conversions
.
h
"
namespace
webrtc
{
namespace
{
constexpr
float
kPi
=
std
:
:
numbers
:
:
pi_v
<
float
>
;
}
void
SineWaveGenerator
:
:
GenerateNextFrame
(
AudioFrame
*
frame
)
{
RTC_DCHECK
(
frame
)
;
int16_t
*
frame_data
=
frame
-
>
mutable_data
(
)
;
for
(
size_t
i
=
0
;
i
<
frame
-
>
samples_per_channel_
;
+
+
i
)
{
for
(
size_t
ch
=
0
;
ch
<
frame
-
>
num_channels_
;
+
+
ch
)
{
frame_data
[
frame
-
>
num_channels_
*
i
+
ch
]
=
saturated_cast
<
int16_t
>
(
amplitude_
*
sinf
(
phase_
)
)
;
}
phase_
+
=
wave_frequency_hz_
*
2
*
kPi
/
frame
-
>
sample_rate_hz_
;
}
}
}
