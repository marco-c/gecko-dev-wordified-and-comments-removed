#
ifndef
MODULES_AUDIO_MIXER_FRAME_COMBINER_H_
#
define
MODULES_AUDIO_MIXER_FRAME_COMBINER_H_
#
include
<
array
>
#
include
<
cstddef
>
#
include
<
memory
>
#
include
"
api
/
array_view
.
h
"
#
include
"
api
/
audio
/
audio_frame
.
h
"
#
include
"
modules
/
audio_processing
/
agc2
/
limiter
.
h
"
namespace
webrtc
{
class
ApmDataDumper
;
class
FrameCombiner
{
public
:
explicit
FrameCombiner
(
bool
use_limiter
)
;
~
FrameCombiner
(
)
;
void
Combine
(
ArrayView
<
AudioFrame
*
const
>
mix_list
size_t
number_of_channels
int
sample_rate
size_t
number_of_streams
AudioFrame
*
audio_frame_for_mixing
)
;
static
constexpr
size_t
kMaximumNumberOfChannels
=
8
;
static
constexpr
size_t
kMaximumChannelSize
=
48
*
10
;
private
:
std
:
:
unique_ptr
<
ApmDataDumper
>
data_dumper_
;
Limiter
limiter_
;
const
bool
use_limiter_
;
std
:
:
array
<
float
kMaximumChannelSize
*
kMaximumNumberOfChannels
>
mixing_buffer_
=
{
}
;
}
;
}
#
endif
