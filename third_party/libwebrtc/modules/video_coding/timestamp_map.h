#
ifndef
MODULES_VIDEO_CODING_TIMESTAMP_MAP_H_
#
define
MODULES_VIDEO_CODING_TIMESTAMP_MAP_H_
#
include
<
memory
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
rtp_packet_infos
.
h
"
#
include
"
api
/
units
/
timestamp
.
h
"
#
include
"
api
/
video
/
encoded_image
.
h
"
#
include
"
api
/
video
/
video_content_type
.
h
"
#
include
"
api
/
video
/
video_rotation
.
h
"
namespace
webrtc
{
struct
FrameInformation
{
absl
:
:
optional
<
Timestamp
>
render_time
;
absl
:
:
optional
<
Timestamp
>
decode_start
;
VideoRotation
rotation
;
VideoContentType
content_type
;
EncodedImage
:
:
Timing
timing
;
int64_t
ntp_time_ms
;
RtpPacketInfos
packet_infos
;
}
;
class
TimestampMap
{
public
:
explicit
TimestampMap
(
size_t
capacity
)
;
~
TimestampMap
(
)
;
void
Add
(
uint32_t
timestamp
const
FrameInformation
&
data
)
;
absl
:
:
optional
<
FrameInformation
>
Pop
(
uint32_t
timestamp
)
;
size_t
Size
(
)
const
;
void
Clear
(
)
;
private
:
struct
TimestampDataTuple
{
uint32_t
timestamp
;
FrameInformation
data
;
}
;
bool
IsEmpty
(
)
const
;
std
:
:
unique_ptr
<
TimestampDataTuple
[
]
>
ring_buffer_
;
const
size_t
capacity_
;
size_t
next_add_idx_
;
size_t
next_pop_idx_
;
}
;
}
#
endif
