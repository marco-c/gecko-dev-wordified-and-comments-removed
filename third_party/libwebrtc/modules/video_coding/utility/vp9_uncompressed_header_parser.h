#
ifndef
MODULES_VIDEO_CODING_UTILITY_VP9_UNCOMPRESSED_HEADER_PARSER_H_
#
define
MODULES_VIDEO_CODING_UTILITY_VP9_UNCOMPRESSED_HEADER_PARSER_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
"
absl
/
types
/
optional
.
h
"
namespace
webrtc
{
namespace
vp9
{
bool
GetQp
(
const
uint8_t
*
buf
size_t
length
int
*
qp
)
;
enum
class
BitDept
:
uint8_t
{
k8Bit
=
8
k10Bit
=
10
k12Bit
=
12
}
;
enum
class
ColorSpace
:
uint8_t
{
CS_UNKNOWN
=
0
CS_BT_601
=
1
CS_BT_709
=
2
CS_SMPTE_170
=
3
CS_SMPTE_240
=
4
CS_BT_2020
=
5
CS_RESERVED
=
6
CS_RGB
=
7
}
;
enum
class
ColorRange
{
kStudio
kFull
}
;
enum
class
YuvSubsampling
{
k444
k440
k422
k420
}
;
struct
FrameInfo
{
int
profile
=
0
;
absl
:
:
optional
<
uint8_t
>
show_existing_frame
;
bool
is_keyframe
=
false
;
bool
show_frame
=
false
;
bool
error_resilient
=
false
;
BitDept
bit_detph
=
BitDept
:
:
k8Bit
;
ColorSpace
color_space
=
ColorSpace
:
:
CS_UNKNOWN
;
ColorRange
color_range
;
YuvSubsampling
sub_sampling
;
int
frame_width
=
0
;
int
frame_height
=
0
;
int
render_width
=
0
;
int
render_height
=
0
;
int
base_qp
=
0
;
}
;
absl
:
:
optional
<
FrameInfo
>
ParseIntraFrameInfo
(
const
uint8_t
*
buf
size_t
length
)
;
}
}
#
endif
