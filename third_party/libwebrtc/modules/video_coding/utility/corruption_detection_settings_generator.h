#
ifndef
MODULES_VIDEO_CODING_UTILITY_CORRUPTION_DETECTION_SETTINGS_GENERATOR_H_
#
define
MODULES_VIDEO_CODING_UTILITY_CORRUPTION_DETECTION_SETTINGS_GENERATOR_H_
#
include
<
optional
>
#
include
<
variant
>
#
include
"
api
/
video
/
corruption_detection_filter_settings
.
h
"
namespace
webrtc
{
class
CorruptionDetectionSettingsGenerator
{
public
:
struct
RationalFunctionParameters
{
double
numerator_factor
=
0
.
0
;
double
denumerator_term
=
0
.
0
;
double
offset
=
0
.
0
;
}
;
struct
ExponentialFunctionParameters
{
double
scale
=
0
.
0
;
double
exponent_factor
=
0
.
0
;
double
exponent_offset
=
0
.
0
;
}
;
struct
ErrorThresholds
{
int
luma
=
0
;
int
chroma
=
0
;
}
;
struct
TransientParameters
{
int
max_qp
=
0
;
int
keyframe_threshold_offset
=
0
;
double
keyframe_stddev_offset
=
0
.
0
;
int
keyframe_offset_duration_frames
=
0
;
int
large_qp_change_threshold
=
0
;
double
std_dev_lower_bound
=
0
.
0
;
}
;
CorruptionDetectionSettingsGenerator
(
const
RationalFunctionParameters
&
function_params
const
ErrorThresholds
&
default_error_thresholds
const
TransientParameters
&
transient_params
)
;
CorruptionDetectionSettingsGenerator
(
const
ExponentialFunctionParameters
&
function_params
const
ErrorThresholds
&
default_error_thresholds
const
TransientParameters
&
transient_params
)
;
CorruptionDetectionFilterSettings
OnFrame
(
bool
is_keyframe
int
qp
)
;
private
:
double
CalculateStdDev
(
int
qp
)
const
;
const
std
:
:
variant
<
RationalFunctionParameters
ExponentialFunctionParameters
>
function_params_
;
const
ErrorThresholds
error_thresholds_
;
const
TransientParameters
transient_params_
;
int
frames_since_keyframe_
;
std
:
:
optional
<
int
>
previous_qp_
;
}
;
}
#
endif
