#
include
"
modules
/
video_coding
/
utility
/
corruption_detection_settings_generator
.
h
"
#
include
"
api
/
video
/
corruption_detection_filter_settings
.
h
"
#
include
"
test
/
gmock
.
h
"
#
include
"
test
/
gtest
.
h
"
using
:
:
testing
:
:
AllOf
;
using
:
:
testing
:
:
DoubleEq
;
using
:
:
testing
:
:
DoubleNear
;
using
:
:
testing
:
:
Eq
;
using
:
:
testing
:
:
Field
;
namespace
webrtc
{
TEST
(
CorruptionDetectionSettingsGenerator
ExponentialFunctionStdDev
)
{
CorruptionDetectionSettingsGenerator
settings_generator
(
CorruptionDetectionSettingsGenerator
:
:
ExponentialFunctionParameters
{
.
scale
=
0
.
006
.
exponent_factor
=
0
.
01857465
.
exponent_offset
=
-
4
.
26470513
}
CorruptionDetectionSettingsGenerator
:
:
ErrorThresholds
{
}
CorruptionDetectionSettingsGenerator
:
:
TransientParameters
{
}
)
;
CorruptionDetectionFilterSettings
settings
=
settings_generator
.
OnFrame
(
true
20
)
;
EXPECT_THAT
(
settings
.
std_dev
DoubleNear
(
0
.
612
0
.
01
)
)
;
settings
=
settings_generator
.
OnFrame
(
true
80
)
;
EXPECT_THAT
(
settings
.
std_dev
DoubleNear
(
1
.
886
0
.
01
)
)
;
}
TEST
(
CorruptionDetectionSettingsGenerator
ExponentialFunctionThresholds
)
{
CorruptionDetectionSettingsGenerator
settings_generator
(
CorruptionDetectionSettingsGenerator
:
:
ExponentialFunctionParameters
{
.
scale
=
0
.
006
.
exponent_factor
=
0
.
01857465
.
exponent_offset
=
-
4
.
26470513
}
CorruptionDetectionSettingsGenerator
:
:
ErrorThresholds
{
.
luma
=
5
.
chroma
=
6
}
CorruptionDetectionSettingsGenerator
:
:
TransientParameters
{
}
)
;
CorruptionDetectionFilterSettings
settings
=
settings_generator
.
OnFrame
(
true
20
)
;
EXPECT_EQ
(
settings
.
chroma_error_threshold
6
)
;
EXPECT_EQ
(
settings
.
luma_error_threshold
5
)
;
}
TEST
(
CorruptionDetectionSettingsGenerator
RationalFunctionStdDev
)
{
CorruptionDetectionSettingsGenerator
settings_generator
(
CorruptionDetectionSettingsGenerator
:
:
RationalFunctionParameters
{
.
numerator_factor
=
-
5
.
5
.
denumerator_term
=
-
97
.
offset
=
-
1
}
CorruptionDetectionSettingsGenerator
:
:
ErrorThresholds
{
}
CorruptionDetectionSettingsGenerator
:
:
TransientParameters
{
}
)
;
CorruptionDetectionFilterSettings
settings
=
settings_generator
.
OnFrame
(
true
20
)
;
EXPECT_THAT
(
settings
.
std_dev
DoubleNear
(
0
.
429
0
.
01
)
)
;
settings
=
settings_generator
.
OnFrame
(
true
40
)
;
EXPECT_THAT
(
settings
.
std_dev
DoubleNear
(
2
.
860
0
.
01
)
)
;
}
TEST
(
CorruptionDetectionSettingsGenerator
RationalFunctionThresholds
)
{
CorruptionDetectionSettingsGenerator
settings_generator
(
CorruptionDetectionSettingsGenerator
:
:
RationalFunctionParameters
{
.
numerator_factor
=
-
5
.
5
.
denumerator_term
=
-
97
.
offset
=
-
1
}
CorruptionDetectionSettingsGenerator
:
:
ErrorThresholds
{
.
luma
=
5
.
chroma
=
6
}
CorruptionDetectionSettingsGenerator
:
:
TransientParameters
{
}
)
;
CorruptionDetectionFilterSettings
settings
=
settings_generator
.
OnFrame
(
true
20
)
;
EXPECT_EQ
(
settings
.
chroma_error_threshold
6
)
;
EXPECT_EQ
(
settings
.
luma_error_threshold
5
)
;
}
TEST
(
CorruptionDetectionSettingsGenerator
TransientStdDevOffset
)
{
CorruptionDetectionSettingsGenerator
settings_generator
(
CorruptionDetectionSettingsGenerator
:
:
RationalFunctionParameters
{
.
numerator_factor
=
1
.
denumerator_term
=
0
.
offset
=
1
}
CorruptionDetectionSettingsGenerator
:
:
ErrorThresholds
{
}
CorruptionDetectionSettingsGenerator
:
:
TransientParameters
{
.
keyframe_stddev_offset
=
2
.
0
.
keyframe_offset_duration_frames
=
2
}
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
true
1
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
std_dev
DoubleNear
(
4
.
0
0
.
001
)
)
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
false
1
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
std_dev
DoubleNear
(
3
.
0
0
.
001
)
)
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
false
1
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
std_dev
DoubleNear
(
2
.
0
0
.
001
)
)
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
false
1
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
std_dev
DoubleNear
(
2
.
0
0
.
001
)
)
)
;
}
TEST
(
CorruptionDetectionSettingsGenerator
TransientThresholdOffsets
)
{
CorruptionDetectionSettingsGenerator
settings_generator
(
CorruptionDetectionSettingsGenerator
:
:
RationalFunctionParameters
{
.
numerator_factor
=
1
.
denumerator_term
=
0
.
offset
=
1
}
CorruptionDetectionSettingsGenerator
:
:
ErrorThresholds
{
.
luma
=
2
.
chroma
=
3
}
CorruptionDetectionSettingsGenerator
:
:
TransientParameters
{
.
keyframe_threshold_offset
=
2
.
keyframe_offset_duration_frames
=
2
}
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
true
1
)
AllOf
(
Field
(
&
CorruptionDetectionFilterSettings
:
:
chroma_error_threshold
Eq
(
5
)
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
luma_error_threshold
Eq
(
4
)
)
)
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
false
1
)
AllOf
(
Field
(
&
CorruptionDetectionFilterSettings
:
:
chroma_error_threshold
Eq
(
4
)
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
luma_error_threshold
Eq
(
3
)
)
)
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
false
1
)
AllOf
(
Field
(
&
CorruptionDetectionFilterSettings
:
:
chroma_error_threshold
Eq
(
3
)
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
luma_error_threshold
Eq
(
2
)
)
)
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
false
1
)
AllOf
(
Field
(
&
CorruptionDetectionFilterSettings
:
:
chroma_error_threshold
Eq
(
3
)
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
luma_error_threshold
Eq
(
2
)
)
)
)
;
}
TEST
(
CorruptionDetectionSettingsGenerator
StdDevUpperBound
)
{
CorruptionDetectionSettingsGenerator
settings_generator
(
CorruptionDetectionSettingsGenerator
:
:
RationalFunctionParameters
{
.
numerator_factor
=
1
.
denumerator_term
=
0
.
offset
=
41
}
CorruptionDetectionSettingsGenerator
:
:
ErrorThresholds
{
}
CorruptionDetectionSettingsGenerator
:
:
TransientParameters
{
}
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
true
1
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
std_dev
DoubleEq
(
40
.
0
)
)
)
;
}
TEST
(
CorruptionDetectionSettingsGenerator
StdDevLowerBound
)
{
CorruptionDetectionSettingsGenerator
settings_generator
(
CorruptionDetectionSettingsGenerator
:
:
RationalFunctionParameters
{
.
numerator_factor
=
1
.
denumerator_term
=
0
.
offset
=
1
}
CorruptionDetectionSettingsGenerator
:
:
ErrorThresholds
{
}
CorruptionDetectionSettingsGenerator
:
:
TransientParameters
{
.
std_dev_lower_bound
=
5
.
0
}
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
true
1
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
std_dev
DoubleEq
(
5
.
0
)
)
)
;
}
TEST
(
CorruptionDetectionSettingsGenerator
TreatsLargeQpChangeAsKeyFrame
)
{
CorruptionDetectionSettingsGenerator
settings_generator
(
CorruptionDetectionSettingsGenerator
:
:
RationalFunctionParameters
{
.
numerator_factor
=
1
.
denumerator_term
=
0
.
offset
=
1
}
CorruptionDetectionSettingsGenerator
:
:
ErrorThresholds
{
.
luma
=
2
.
chroma
=
3
}
CorruptionDetectionSettingsGenerator
:
:
TransientParameters
{
.
max_qp
=
100
.
keyframe_threshold_offset
=
2
.
keyframe_offset_duration_frames
=
1
.
large_qp_change_threshold
=
20
}
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
true
10
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
luma_error_threshold
Eq
(
4
)
)
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
false
10
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
luma_error_threshold
Eq
(
2
)
)
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
false
30
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
luma_error_threshold
Eq
(
4
)
)
)
;
EXPECT_THAT
(
settings_generator
.
OnFrame
(
false
30
)
Field
(
&
CorruptionDetectionFilterSettings
:
:
luma_error_threshold
Eq
(
2
)
)
)
;
}
}
