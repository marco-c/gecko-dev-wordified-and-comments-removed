#
include
"
modules
/
video_coding
/
timing
/
frame_delay_variation_kalman_filter
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
{
TEST
(
FrameDelayVariationKalmanFilterTest
InitializedFilterWithZeroSizeFrameTakesNoTimeToPropagate
)
{
FrameDelayVariationKalmanFilter
filter
;
double
frame_size_variation_bytes
=
0
.
0
;
EXPECT_EQ
(
filter
.
GetFrameDelayVariationEstimateSizeBased
(
frame_size_variation_bytes
)
0
.
0
)
;
EXPECT_EQ
(
filter
.
GetFrameDelayVariationEstimateTotal
(
frame_size_variation_bytes
)
0
.
0
)
;
}
TEST
(
FrameDelayVariationKalmanFilterTest
InitializedFilterWithSmallSizeFrameTakesFixedTimeToPropagate
)
{
FrameDelayVariationKalmanFilter
filter
;
double
frame_size_variation_bytes
=
1000
.
0
;
double
expected_frame_delay_variation_estimate_ms
=
1000
.
0
/
(
512e3
/
8
.
0
)
;
EXPECT_EQ
(
filter
.
GetFrameDelayVariationEstimateSizeBased
(
frame_size_variation_bytes
)
expected_frame_delay_variation_estimate_ms
)
;
EXPECT_EQ
(
filter
.
GetFrameDelayVariationEstimateTotal
(
frame_size_variation_bytes
)
expected_frame_delay_variation_estimate_ms
)
;
}
TEST
(
FrameDelayVariationKalmanFilterTest
NegativeNoiseVarianceDoesNotUpdateFilter
)
{
FrameDelayVariationKalmanFilter
filter
;
double
var_noise
=
-
0
.
1
;
filter
.
PredictAndUpdate
(
3
200
.
0
2000
var_noise
)
;
EXPECT_EQ
(
filter
.
GetFrameDelayVariationEstimateTotal
(
0
.
0
)
0
.
0
)
;
var_noise
=
0
.
1
;
filter
.
PredictAndUpdate
(
3
200
.
0
2000
var_noise
)
;
EXPECT_GT
(
filter
.
GetFrameDelayVariationEstimateTotal
(
0
.
0
)
0
.
0
)
;
}
TEST
(
FrameDelayVariationKalmanFilterTest
VerifyConvergenceWithAlternatingDeviations
)
{
FrameDelayVariationKalmanFilter
filter
;
int
framerate_fps
=
30
;
double
frame_delay_variation_ms
=
3
;
double
max_frame_size_bytes
=
2000
;
double
frame_size_variation_bytes
=
200
;
double
var_noise
=
0
.
1
;
int
test_duration_s
=
60
;
for
(
int
i
=
0
;
i
<
test_duration_s
*
framerate_fps
;
+
+
i
)
{
double
sign
=
(
i
%
2
=
=
0
)
?
1
.
0
:
-
1
.
0
;
filter
.
PredictAndUpdate
(
sign
*
frame_delay_variation_ms
sign
*
frame_size_variation_bytes
max_frame_size_bytes
var_noise
)
;
}
EXPECT_NEAR
(
filter
.
GetFrameDelayVariationEstimateTotal
(
frame_size_variation_bytes
)
frame_delay_variation_ms
0
.
1
)
;
}
}
}
