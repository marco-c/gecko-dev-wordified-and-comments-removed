#
ifndef
MODULES_VIDEO_CODING_CODECS_VP9_LIBVPX_VP9_DECODER_H_
#
define
MODULES_VIDEO_CODING_CODECS_VP9_LIBVPX_VP9_DECODER_H_
#
ifdef
RTC_ENABLE_VP9
#
include
<
cstdint
>
#
include
"
api
/
video
/
color_space
.
h
"
#
include
"
api
/
video
/
encoded_image
.
h
"
#
include
"
api
/
video_codecs
/
video_decoder
.
h
"
#
include
"
modules
/
video_coding
/
codecs
/
vp9
/
include
/
vp9
.
h
"
#
include
"
modules
/
video_coding
/
codecs
/
vp9
/
vp9_frame_buffer_pool
.
h
"
#
include
"
vpx
/
vpx_codec
.
h
"
#
include
"
vpx
/
vpx_image
.
h
"
namespace
webrtc
{
class
LibvpxVp9Decoder
:
public
VP9Decoder
{
public
:
LibvpxVp9Decoder
(
)
;
virtual
~
LibvpxVp9Decoder
(
)
;
bool
Configure
(
const
Settings
&
settings
)
override
;
int
Decode
(
const
EncodedImage
&
input_image
int64_t
)
override
;
int
RegisterDecodeCompleteCallback
(
DecodedImageCallback
*
callback
)
override
;
int
Release
(
)
override
;
DecoderInfo
GetDecoderInfo
(
)
const
override
;
const
char
*
ImplementationName
(
)
const
override
;
private
:
int
ReturnFrame
(
const
vpx_image_t
*
img
uint32_t
timestamp
int
qp
const
webrtc
:
:
ColorSpace
*
explicit_color_space
)
;
Vp9FrameBufferPool
libvpx_buffer_pool_
;
DecodedImageCallback
*
decode_complete_callback_
;
bool
inited_
;
vpx_codec_ctx_t
*
decoder_
;
bool
key_frame_required_
;
Settings
current_settings_
;
}
;
}
#
endif
#
endif
