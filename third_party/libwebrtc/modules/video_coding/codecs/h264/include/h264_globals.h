#
ifndef
MODULES_VIDEO_CODING_CODECS_H264_INCLUDE_H264_GLOBALS_H_
#
define
MODULES_VIDEO_CODING_CODECS_H264_INCLUDE_H264_GLOBALS_H_
#
include
<
string
>
#
include
"
modules
/
video_coding
/
codecs
/
interface
/
common_constants
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
enum
H264PacketizationTypes
{
kH264SingleNalu
kH264StapA
kH264FuA
}
;
enum
class
H264PacketizationMode
{
NonInterleaved
=
0
SingleNalUnit
}
;
inline
std
:
:
string
ToString
(
H264PacketizationMode
mode
)
{
if
(
mode
=
=
H264PacketizationMode
:
:
NonInterleaved
)
{
return
"
NonInterleaved
"
;
}
else
if
(
mode
=
=
H264PacketizationMode
:
:
SingleNalUnit
)
{
return
"
SingleNalUnit
"
;
}
RTC_DCHECK_NOTREACHED
(
)
;
return
"
"
;
}
struct
NaluInfo
{
uint8_t
type
;
int
sps_id
;
int
pps_id
;
}
;
const
size_t
kMaxNalusPerPacket
=
10
;
struct
RTPVideoHeaderH264
{
uint8_t
nalu_type
;
H264PacketizationTypes
packetization_type
;
NaluInfo
nalus
[
kMaxNalusPerPacket
]
;
size_t
nalus_length
;
H264PacketizationMode
packetization_mode
;
}
;
}
#
endif
