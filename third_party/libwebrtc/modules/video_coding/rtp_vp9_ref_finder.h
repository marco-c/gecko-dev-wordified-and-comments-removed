#
ifndef
MODULES_VIDEO_CODING_RTP_VP9_REF_FINDER_H_
#
define
MODULES_VIDEO_CODING_RTP_VP9_REF_FINDER_H_
#
include
<
deque
>
#
include
<
map
>
#
include
<
memory
>
#
include
<
set
>
#
include
"
absl
/
container
/
inlined_vector
.
h
"
#
include
"
modules
/
video_coding
/
frame_object
.
h
"
#
include
"
modules
/
video_coding
/
rtp_frame_reference_finder
.
h
"
#
include
"
rtc_base
/
numerics
/
sequence_number_util
.
h
"
namespace
webrtc
{
namespace
video_coding
{
class
RtpVp9RefFinder
{
public
:
RtpVp9RefFinder
(
)
=
default
;
RtpFrameReferenceFinder
:
:
ReturnVector
ManageFrame
(
std
:
:
unique_ptr
<
RtpFrameObject
>
frame
)
;
void
ClearTo
(
uint16_t
seq_num
)
;
private
:
static
constexpr
int
kFrameIdLength
=
1
<
<
15
;
static
constexpr
int
kMaxGofSaved
=
50
;
static
constexpr
int
kMaxLayerInfo
=
50
;
static
constexpr
int
kMaxNotYetReceivedFrames
=
100
;
static
constexpr
int
kMaxStashedFrames
=
100
;
static
constexpr
int
kMaxTemporalLayers
=
5
;
enum
FrameDecision
{
kStash
kHandOff
kDrop
}
;
struct
GofInfo
{
GofInfo
(
GofInfoVP9
*
gof
uint16_t
last_picture_id
)
:
gof
(
gof
)
last_picture_id
(
last_picture_id
)
{
}
GofInfoVP9
*
gof
;
uint16_t
last_picture_id
;
}
;
FrameDecision
ManageFrameInternal
(
RtpFrameObject
*
frame
)
;
void
RetryStashedFrames
(
RtpFrameReferenceFinder
:
:
ReturnVector
&
res
)
;
bool
MissingRequiredFrameVp9
(
uint16_t
picture_id
const
GofInfo
&
info
)
;
void
FrameReceivedVp9
(
uint16_t
picture_id
GofInfo
*
info
)
;
bool
UpSwitchInIntervalVp9
(
uint16_t
picture_id
uint8_t
temporal_idx
uint16_t
pid_ref
)
;
void
UnwrapPictureIds
(
RtpFrameObject
*
frame
)
;
int
last_picture_id_
=
-
1
;
std
:
:
deque
<
std
:
:
unique_ptr
<
RtpFrameObject
>
>
stashed_frames_
;
uint8_t
current_ss_idx_
=
0
;
std
:
:
array
<
GofInfoVP9
kMaxGofSaved
>
scalability_structures_
;
std
:
:
map
<
int64_t
GofInfo
>
gof_info_
;
std
:
:
map
<
uint16_t
uint8_t
DescendingSeqNumComp
<
uint16_t
kFrameIdLength
>
>
up_switch_
;
std
:
:
array
<
std
:
:
set
<
uint16_t
DescendingSeqNumComp
<
uint16_t
kFrameIdLength
>
>
kMaxTemporalLayers
>
missing_frames_for_layer_
;
SeqNumUnwrapper
<
uint16_t
kFrameIdLength
>
unwrapper_
;
SeqNumUnwrapper
<
uint8_t
>
tl0_unwrapper_
;
}
;
}
}
#
endif
