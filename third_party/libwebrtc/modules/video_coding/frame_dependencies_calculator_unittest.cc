#
include
"
modules
/
video_coding
/
frame_dependencies_calculator
.
h
"
#
include
"
api
/
video
/
video_frame_type
.
h
"
#
include
"
common_video
/
generic_frame_descriptor
/
generic_frame_info
.
h
"
#
include
"
test
/
gmock
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
{
using
:
:
testing
:
:
ElementsAre
;
using
:
:
testing
:
:
IsEmpty
;
using
:
:
testing
:
:
UnorderedElementsAre
;
constexpr
VideoFrameType
kVideoFrameKey
=
VideoFrameType
:
:
kVideoFrameKey
;
constexpr
VideoFrameType
kVideoFrameDelta
=
VideoFrameType
:
:
kVideoFrameDelta
;
constexpr
CodecBufferUsage
ReferenceAndUpdate
(
int
id
)
{
return
CodecBufferUsage
(
id
true
true
)
;
}
constexpr
CodecBufferUsage
Reference
(
int
id
)
{
return
CodecBufferUsage
(
id
true
false
)
;
}
constexpr
CodecBufferUsage
Update
(
int
id
)
{
return
CodecBufferUsage
(
id
false
true
)
;
}
TEST
(
FrameDependenciesCalculatorTest
SingleLayer
)
{
CodecBufferUsage
pattern
[
]
=
{
ReferenceAndUpdate
(
0
)
}
;
FrameDependenciesCalculator
calculator
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameKey
1
pattern
)
IsEmpty
(
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
3
pattern
)
ElementsAre
(
1
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
6
pattern
)
ElementsAre
(
3
)
)
;
}
TEST
(
FrameDependenciesCalculatorTest
TwoTemporalLayers
)
{
CodecBufferUsage
pattern0
[
]
=
{
ReferenceAndUpdate
(
0
)
}
;
CodecBufferUsage
pattern1
[
]
=
{
Reference
(
0
)
Update
(
1
)
}
;
CodecBufferUsage
pattern2
[
]
=
{
ReferenceAndUpdate
(
0
)
}
;
CodecBufferUsage
pattern3
[
]
=
{
Reference
(
0
)
Reference
(
1
)
}
;
FrameDependenciesCalculator
calculator
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameKey
1
pattern0
)
IsEmpty
(
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
2
pattern1
)
ElementsAre
(
1
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
3
pattern2
)
ElementsAre
(
1
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
4
pattern3
)
UnorderedElementsAre
(
2
3
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
5
pattern0
)
ElementsAre
(
3
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
6
pattern1
)
ElementsAre
(
5
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
7
pattern2
)
ElementsAre
(
5
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
8
pattern3
)
UnorderedElementsAre
(
6
7
)
)
;
}
TEST
(
FrameDependenciesCalculatorTest
ThreeTemporalLayers4FramePattern
)
{
CodecBufferUsage
pattern0
[
]
=
{
ReferenceAndUpdate
(
0
)
}
;
CodecBufferUsage
pattern1
[
]
=
{
Reference
(
0
)
Update
(
2
)
}
;
CodecBufferUsage
pattern2
[
]
=
{
Reference
(
0
)
Update
(
1
)
}
;
CodecBufferUsage
pattern3
[
]
=
{
Reference
(
0
)
Reference
(
1
)
Reference
(
2
)
}
;
FrameDependenciesCalculator
calculator
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameKey
1
pattern0
)
IsEmpty
(
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
2
pattern1
)
ElementsAre
(
1
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
3
pattern2
)
ElementsAre
(
1
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
4
pattern3
)
UnorderedElementsAre
(
2
3
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
5
pattern0
)
ElementsAre
(
1
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
6
pattern1
)
ElementsAre
(
5
)
)
;
}
TEST
(
FrameDependenciesCalculatorTest
SimulcastWith2Layers
)
{
CodecBufferUsage
pattern0
[
]
=
{
ReferenceAndUpdate
(
0
)
}
;
CodecBufferUsage
pattern1
[
]
=
{
ReferenceAndUpdate
(
1
)
}
;
FrameDependenciesCalculator
calculator
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameKey
1
pattern0
)
IsEmpty
(
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameKey
2
pattern1
)
IsEmpty
(
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
3
pattern0
)
ElementsAre
(
1
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
4
pattern1
)
ElementsAre
(
2
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
5
pattern0
)
ElementsAre
(
3
)
)
;
EXPECT_THAT
(
calculator
.
FromBuffersUsage
(
kVideoFrameDelta
6
pattern1
)
ElementsAre
(
4
)
)
;
}
}
}
