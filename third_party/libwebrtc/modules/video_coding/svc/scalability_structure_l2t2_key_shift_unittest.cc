#
include
"
modules
/
video_coding
/
svc
/
scalability_structure_l2t2_key_shift
.
h
"
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
api
/
transport
/
rtp
/
dependency_descriptor
.
h
"
#
include
"
common_video
/
generic_frame_descriptor
/
generic_frame_info
.
h
"
#
include
"
modules
/
video_coding
/
svc
/
scalability_structure_test_helpers
.
h
"
#
include
"
test
/
gmock
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
{
using
:
:
testing
:
:
ElementsAre
;
using
:
:
testing
:
:
IsEmpty
;
using
:
:
testing
:
:
SizeIs
;
TEST
(
ScalabilityStructureL2T2KeyShiftTest
DecodeTargetsAreEnabledByDefault
)
{
ScalabilityStructureL2T2KeyShift
structure
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
wrapper
.
GenerateFrames
(
5
frames
)
;
ASSERT_THAT
(
frames
SizeIs
(
10
)
)
;
EXPECT_EQ
(
frames
[
0
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
1
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
2
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
3
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
4
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
5
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
6
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
7
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
8
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
9
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
0
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
2
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
4
]
.
temporal_id
1
)
;
EXPECT_EQ
(
frames
[
6
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
8
]
.
temporal_id
1
)
;
EXPECT_EQ
(
frames
[
1
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
3
]
.
temporal_id
1
)
;
EXPECT_EQ
(
frames
[
5
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
7
]
.
temporal_id
1
)
;
EXPECT_EQ
(
frames
[
9
]
.
temporal_id
0
)
;
EXPECT_THAT
(
frames
[
0
]
.
frame_diffs
IsEmpty
(
)
)
;
EXPECT_THAT
(
frames
[
1
]
.
frame_diffs
ElementsAre
(
1
)
)
;
EXPECT_THAT
(
frames
[
2
]
.
frame_diffs
ElementsAre
(
2
)
)
;
EXPECT_THAT
(
frames
[
6
]
.
frame_diffs
ElementsAre
(
4
)
)
;
EXPECT_THAT
(
frames
[
5
]
.
frame_diffs
ElementsAre
(
4
)
)
;
EXPECT_THAT
(
frames
[
9
]
.
frame_diffs
ElementsAre
(
4
)
)
;
EXPECT_THAT
(
frames
[
3
]
.
frame_diffs
ElementsAre
(
2
)
)
;
EXPECT_THAT
(
frames
[
4
]
.
frame_diffs
ElementsAre
(
2
)
)
;
EXPECT_THAT
(
frames
[
7
]
.
frame_diffs
ElementsAre
(
2
)
)
;
EXPECT_THAT
(
frames
[
8
]
.
frame_diffs
ElementsAre
(
2
)
)
;
}
TEST
(
ScalabilityStructureL2T2KeyShiftTest
DisableS1T1Layer
)
{
ScalabilityStructureL2T2KeyShift
structure
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
2
1
)
)
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
wrapper
.
GenerateFrames
(
5
frames
)
;
ASSERT_THAT
(
frames
SizeIs
(
8
)
)
;
EXPECT_EQ
(
frames
[
0
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
1
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
2
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
3
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
4
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
5
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
6
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
7
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
0
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
2
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
3
]
.
temporal_id
1
)
;
EXPECT_EQ
(
frames
[
5
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
6
]
.
temporal_id
1
)
;
EXPECT_EQ
(
frames
[
1
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
4
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
5
]
.
temporal_id
0
)
;
}
TEST
(
ScalabilityStructureL2T2KeyShiftTest
DisableT1LayersAfterFewFrames
)
{
ScalabilityStructureL2T2KeyShift
structure
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
wrapper
.
GenerateFrames
(
3
frames
)
;
EXPECT_THAT
(
frames
SizeIs
(
6
)
)
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
1
1
)
)
;
wrapper
.
GenerateFrames
(
3
frames
)
;
ASSERT_THAT
(
frames
SizeIs
(
9
)
)
;
EXPECT_EQ
(
frames
[
6
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
7
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
8
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
6
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
7
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
8
]
.
temporal_id
0
)
;
EXPECT_TRUE
(
wrapper
.
FrameReferencesAreValid
(
frames
)
)
;
}
TEST
(
ScalabilityStructureL2T2KeyShiftTest
DisableS0FromTheStart
)
{
ScalabilityStructureL2T2KeyShift
structure
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
0
2
)
)
;
wrapper
.
GenerateFrames
(
4
frames
)
;
EXPECT_THAT
(
frames
SizeIs
(
4
)
)
;
EXPECT_EQ
(
frames
[
0
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
1
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
2
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
3
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
0
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
1
]
.
temporal_id
1
)
;
EXPECT_EQ
(
frames
[
2
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
3
]
.
temporal_id
1
)
;
EXPECT_TRUE
(
wrapper
.
FrameReferencesAreValid
(
frames
)
)
;
}
TEST
(
ScalabilityStructureL2T2KeyShiftTest
DisableS0AfterFewFrames
)
{
ScalabilityStructureL2T2KeyShift
structure
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
wrapper
.
GenerateFrames
(
3
frames
)
;
EXPECT_THAT
(
frames
SizeIs
(
6
)
)
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
0
2
)
)
;
wrapper
.
GenerateFrames
(
3
frames
)
;
ASSERT_THAT
(
frames
SizeIs
(
9
)
)
;
EXPECT_THAT
(
frames
[
6
]
.
frame_diffs
ElementsAre
(
1
)
)
;
EXPECT_EQ
(
frames
[
6
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
7
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
8
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
6
]
.
temporal_id
1
)
;
EXPECT_EQ
(
frames
[
7
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
8
]
.
temporal_id
1
)
;
EXPECT_TRUE
(
wrapper
.
FrameReferencesAreValid
(
frames
)
)
;
}
TEST
(
ScalabilityStructureL2T2KeyShiftTest
ReenableS1TriggersKeyFrame
)
{
ScalabilityStructureL2T2KeyShift
structure
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
wrapper
.
GenerateFrames
(
2
frames
)
;
EXPECT_THAT
(
frames
SizeIs
(
4
)
)
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
2
0
)
)
;
wrapper
.
GenerateFrames
(
1
frames
)
;
EXPECT_THAT
(
frames
SizeIs
(
5
)
)
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
2
2
)
)
;
wrapper
.
GenerateFrames
(
2
frames
)
;
ASSERT_THAT
(
frames
SizeIs
(
9
)
)
;
EXPECT_THAT
(
frames
[
4
]
.
spatial_id
0
)
;
EXPECT_THAT
(
frames
[
4
]
.
temporal_id
1
)
;
EXPECT_TRUE
(
wrapper
.
FrameReferencesAreValid
(
rtc
:
:
MakeArrayView
(
frames
.
data
(
)
+
5
4
)
)
)
;
EXPECT_THAT
(
frames
[
5
]
.
spatial_id
0
)
;
EXPECT_THAT
(
frames
[
6
]
.
spatial_id
1
)
;
EXPECT_THAT
(
frames
[
7
]
.
spatial_id
0
)
;
EXPECT_THAT
(
frames
[
8
]
.
spatial_id
1
)
;
EXPECT_THAT
(
frames
[
5
]
.
temporal_id
0
)
;
EXPECT_THAT
(
frames
[
7
]
.
temporal_id
0
)
;
EXPECT_THAT
(
frames
[
6
]
.
temporal_id
0
)
;
EXPECT_THAT
(
frames
[
8
]
.
temporal_id
1
)
;
}
TEST
(
ScalabilityStructureL2T2KeyShiftTest
EnableOnlyS0T0FromTheStart
)
{
ScalabilityStructureL2T2KeyShift
structure
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
1
0
)
)
;
wrapper
.
GenerateFrames
(
3
frames
)
;
ASSERT_THAT
(
frames
SizeIs
(
3
)
)
;
EXPECT_EQ
(
frames
[
0
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
1
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
2
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
0
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
1
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
2
]
.
temporal_id
0
)
;
EXPECT_TRUE
(
wrapper
.
FrameReferencesAreValid
(
frames
)
)
;
}
TEST
(
ScalabilityStructureL2T2KeyShiftTest
EnableOnlyS0T0AfterFewFrames
)
{
ScalabilityStructureL2T2KeyShift
structure
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
wrapper
.
GenerateFrames
(
2
frames
)
;
EXPECT_THAT
(
frames
SizeIs
(
4
)
)
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
1
0
)
)
;
wrapper
.
GenerateFrames
(
3
frames
)
;
ASSERT_THAT
(
frames
SizeIs
(
7
)
)
;
EXPECT_EQ
(
frames
[
4
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
5
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
6
]
.
spatial_id
0
)
;
EXPECT_EQ
(
frames
[
4
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
5
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
6
]
.
temporal_id
0
)
;
EXPECT_TRUE
(
wrapper
.
FrameReferencesAreValid
(
frames
)
)
;
}
TEST
(
ScalabilityStructureL2T2KeyShiftTest
EnableOnlyS1T0FromTheStart
)
{
ScalabilityStructureL2T2KeyShift
structure
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
0
1
)
)
;
wrapper
.
GenerateFrames
(
3
frames
)
;
ASSERT_THAT
(
frames
SizeIs
(
3
)
)
;
EXPECT_EQ
(
frames
[
0
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
1
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
2
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
0
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
1
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
2
]
.
temporal_id
0
)
;
EXPECT_TRUE
(
wrapper
.
FrameReferencesAreValid
(
frames
)
)
;
}
TEST
(
ScalabilityStructureL2T2KeyShiftTest
EnableOnlyS1T0AfterFewFrames
)
{
ScalabilityStructureL2T2KeyShift
structure
;
ScalabilityStructureWrapper
wrapper
(
structure
)
;
std
:
:
vector
<
GenericFrameInfo
>
frames
;
wrapper
.
GenerateFrames
(
2
frames
)
;
EXPECT_THAT
(
frames
SizeIs
(
4
)
)
;
structure
.
OnRatesUpdated
(
EnableTemporalLayers
(
0
1
)
)
;
wrapper
.
GenerateFrames
(
3
frames
)
;
ASSERT_THAT
(
frames
SizeIs
(
7
)
)
;
EXPECT_EQ
(
frames
[
4
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
5
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
6
]
.
spatial_id
1
)
;
EXPECT_EQ
(
frames
[
4
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
5
]
.
temporal_id
0
)
;
EXPECT_EQ
(
frames
[
6
]
.
temporal_id
0
)
;
EXPECT_TRUE
(
wrapper
.
FrameReferencesAreValid
(
frames
)
)
;
}
}
}
