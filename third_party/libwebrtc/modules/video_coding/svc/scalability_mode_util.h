#
ifndef
MODULES_VIDEO_CODING_SVC_SCALABILITY_MODE_UTIL_H_
#
define
MODULES_VIDEO_CODING_SVC_SCALABILITY_MODE_UTIL_H_
#
include
<
optional
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
api
/
video_codecs
/
scalability_mode
.
h
"
#
include
"
api
/
video_codecs
/
video_codec
.
h
"
namespace
webrtc
{
enum
class
ScalabilityModeResolutionRatio
{
kTwoToOne
kThreeToTwo
}
;
static
constexpr
char
kDefaultScalabilityModeStr
[
]
=
"
L1T2
"
;
RTC_EXPORT
std
:
:
optional
<
ScalabilityMode
>
MakeScalabilityMode
(
int
num_spatial_layers
int
num_temporal_layers
InterLayerPredMode
inter_layer_pred
std
:
:
optional
<
ScalabilityModeResolutionRatio
>
ratio
bool
shift
)
;
std
:
:
optional
<
ScalabilityMode
>
ScalabilityModeFromString
(
absl
:
:
string_view
scalability_mode_string
)
;
InterLayerPredMode
ScalabilityModeToInterLayerPredMode
(
ScalabilityMode
scalability_mode
)
;
int
ScalabilityModeToNumSpatialLayers
(
ScalabilityMode
scalability_mode
)
;
int
ScalabilityModeToNumTemporalLayers
(
ScalabilityMode
scalability_mode
)
;
std
:
:
optional
<
ScalabilityModeResolutionRatio
>
ScalabilityModeToResolutionRatio
(
ScalabilityMode
scalability_mode
)
;
bool
ScalabilityModeIsShiftMode
(
ScalabilityMode
scalability_mode
)
;
ScalabilityMode
LimitNumSpatialLayers
(
ScalabilityMode
scalability_mode
int
max_spatial_layers
)
;
}
#
endif
