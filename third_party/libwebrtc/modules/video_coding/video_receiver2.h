#
ifndef
MODULES_VIDEO_CODING_VIDEO_RECEIVER2_H_
#
define
MODULES_VIDEO_CODING_VIDEO_RECEIVER2_H_
#
include
"
api
/
sequence_checker
.
h
"
#
include
"
api
/
video_codecs
/
video_decoder
.
h
"
#
include
"
modules
/
video_coding
/
decoder_database
.
h
"
#
include
"
modules
/
video_coding
/
encoded_frame
.
h
"
#
include
"
modules
/
video_coding
/
generic_decoder
.
h
"
#
include
"
modules
/
video_coding
/
timing
.
h
"
#
include
"
system_wrappers
/
include
/
clock
.
h
"
namespace
webrtc
{
class
VideoReceiver2
{
public
:
VideoReceiver2
(
Clock
*
clock
VCMTiming
*
timing
)
;
~
VideoReceiver2
(
)
;
void
RegisterReceiveCodec
(
uint8_t
payload_type
const
VideoDecoder
:
:
Settings
&
decoder_settings
)
;
void
RegisterExternalDecoder
(
VideoDecoder
*
externalDecoder
uint8_t
payloadType
)
;
bool
IsExternalDecoderRegistered
(
uint8_t
payloadType
)
const
;
int32_t
RegisterReceiveCallback
(
VCMReceiveCallback
*
receiveCallback
)
;
int32_t
Decode
(
const
webrtc
:
:
VCMEncodedFrame
*
frame
)
;
void
DecoderThreadStarting
(
)
;
void
DecoderThreadStopped
(
)
;
private
:
bool
IsDecoderThreadRunning
(
)
;
SequenceChecker
construction_sequence_checker_
;
SequenceChecker
decoder_sequence_checker_
;
Clock
*
const
clock_
;
VCMTiming
*
timing_
;
VCMDecodedFrameCallback
decodedFrameCallback_
;
VCMDecoderDataBase
codecDataBase_
;
#
if
RTC_DCHECK_IS_ON
bool
decoder_thread_is_running_
=
false
;
#
endif
}
;
}
#
endif
