#
ifndef
API_METRONOME_TEST_FAKE_METRONOME_H_
#
define
API_METRONOME_TEST_FAKE_METRONOME_H_
#
include
<
memory
>
#
include
<
set
>
#
include
<
vector
>
#
include
"
api
/
metronome
/
metronome
.
h
"
#
include
"
api
/
task_queue
/
task_queue_base
.
h
"
#
include
"
api
/
task_queue
/
task_queue_factory
.
h
"
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
rtc_base
/
synchronization
/
mutex
.
h
"
#
include
"
rtc_base
/
task_queue
.
h
"
#
include
"
rtc_base
/
task_utils
/
repeating_task
.
h
"
#
include
"
rtc_base
/
thread_annotations
.
h
"
namespace
webrtc
:
:
test
{
class
ForcedTickMetronome
:
public
Metronome
{
public
:
explicit
ForcedTickMetronome
(
TimeDelta
tick_period
)
;
void
Tick
(
)
;
size_t
NumListeners
(
)
;
void
RequestCallOnNextTick
(
absl
:
:
AnyInvocable
<
void
(
)
&
&
>
callback
)
override
;
TimeDelta
TickPeriod
(
)
const
override
;
private
:
const
TimeDelta
tick_period_
;
std
:
:
vector
<
absl
:
:
AnyInvocable
<
void
(
)
&
&
>
>
callbacks_
;
}
;
class
FakeMetronome
:
public
Metronome
{
public
:
explicit
FakeMetronome
(
TimeDelta
tick_period
)
;
void
RequestCallOnNextTick
(
absl
:
:
AnyInvocable
<
void
(
)
&
&
>
callback
)
override
;
TimeDelta
TickPeriod
(
)
const
override
;
private
:
const
TimeDelta
tick_period_
;
std
:
:
vector
<
absl
:
:
AnyInvocable
<
void
(
)
&
&
>
>
callbacks_
;
}
;
}
#
endif
