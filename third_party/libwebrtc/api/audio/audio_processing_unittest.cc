#
include
"
api
/
audio
/
audio_processing
.
h
"
#
include
<
memory
>
#
include
"
api
/
environment
/
environment_factory
.
h
"
#
include
"
api
/
make_ref_counted
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
modules
/
audio_processing
/
include
/
mock_audio_processing
.
h
"
#
include
"
test
/
gmock
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
using
:
:
testing
:
:
_
;
using
:
:
testing
:
:
NotNull
;
TEST
(
CustomAudioProcessingTest
ReturnsPassedAudioProcessing
)
{
scoped_refptr
<
AudioProcessing
>
ap
=
make_ref_counted
<
test
:
:
MockAudioProcessing
>
(
)
;
std
:
:
unique_ptr
<
AudioProcessingBuilderInterface
>
builder
=
CustomAudioProcessing
(
ap
)
;
ASSERT_THAT
(
builder
NotNull
(
)
)
;
EXPECT_EQ
(
builder
-
>
Build
(
CreateEnvironment
(
)
)
ap
)
;
}
#
if
GTEST_HAS_DEATH_TEST
TEST
(
CustomAudioProcessingTest
NullptrAudioProcessingIsUnsupported
)
{
#
pragma
clang
diagnostic
push
#
pragma
clang
diagnostic
ignored
"
-
Wnonnull
"
EXPECT_DEATH
(
CustomAudioProcessing
(
nullptr
)
_
)
;
#
pragma
clang
diagnostic
pop
}
#
endif
}
