#
ifndef
API_TEST_MOCK_PACKET_SOCKET_FACTORY_H_
#
define
API_TEST_MOCK_PACKET_SOCKET_FACTORY_H_
#
include
<
memory
>
#
include
<
string
>
#
include
"
api
/
packet_socket_factory
.
h
"
#
include
"
test
/
gmock
.
h
"
namespace
rtc
{
class
MockPacketSocketFactory
:
public
PacketSocketFactory
{
public
:
MOCK_METHOD
(
AsyncPacketSocket
*
CreateUdpSocket
(
const
SocketAddress
&
uint16_t
uint16_t
)
(
override
)
)
;
MOCK_METHOD
(
AsyncListenSocket
*
CreateServerTcpSocket
(
const
SocketAddress
&
uint16_t
uint16_t
int
opts
)
(
override
)
)
;
MOCK_METHOD
(
AsyncPacketSocket
*
CreateClientTcpSocket
(
const
SocketAddress
&
local_address
const
SocketAddress
&
const
ProxyInfo
&
const
std
:
:
string
&
const
PacketSocketTcpOptions
&
)
(
override
)
)
;
MOCK_METHOD
(
std
:
:
unique_ptr
<
webrtc
:
:
AsyncDnsResolverInterface
>
CreateAsyncDnsResolver
(
)
(
override
)
)
;
}
;
static_assert
(
!
std
:
:
is_abstract_v
<
MockPacketSocketFactory
>
"
"
)
;
}
#
endif
