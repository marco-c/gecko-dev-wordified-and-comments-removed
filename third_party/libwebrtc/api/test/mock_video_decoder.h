#
ifndef
API_TEST_MOCK_VIDEO_DECODER_H_
#
define
API_TEST_MOCK_VIDEO_DECODER_H_
#
include
<
cstdint
>
#
include
<
optional
>
#
include
"
api
/
video
/
encoded_image
.
h
"
#
include
"
api
/
video
/
video_frame
.
h
"
#
include
"
api
/
video_codecs
/
video_decoder
.
h
"
#
include
"
test
/
gmock
.
h
"
namespace
webrtc
{
using
testing
:
:
_
;
using
testing
:
:
Invoke
;
class
MockDecodedImageCallback
:
public
DecodedImageCallback
{
public
:
MOCK_METHOD
(
int32_t
Decoded
(
VideoFrame
&
decoded_image
)
(
override
)
)
;
MOCK_METHOD
(
int32_t
Decoded
(
VideoFrame
&
decoded_image
int64_t
decode_time_ms
)
(
override
)
)
;
MOCK_METHOD
(
void
Decoded
(
VideoFrame
&
decoded_image
std
:
:
optional
<
int32_t
>
decode_time_ms
std
:
:
optional
<
uint8_t
>
qp
)
(
override
)
)
;
}
;
class
MockVideoDecoder
:
public
VideoDecoder
{
public
:
MockVideoDecoder
(
)
{
ON_CALL
(
*
this
Configure
)
.
WillByDefault
(
testing
:
:
Return
(
true
)
)
;
ON_CALL
(
*
this
Decode
(
_
_
)
)
.
WillByDefault
(
Invoke
(
[
this
]
(
const
EncodedImage
&
input_image
int64_t
render_time_ms
)
{
return
Decode
(
input_image
false
render_time_ms
)
;
}
)
)
;
}
~
MockVideoDecoder
(
)
override
{
Destruct
(
)
;
}
MOCK_METHOD
(
bool
Configure
(
const
Settings
&
settings
)
(
override
)
)
;
MOCK_METHOD
(
int32_t
Decode
(
const
EncodedImage
&
input_image
int64_t
render_time_ms
)
(
override
)
)
;
MOCK_METHOD
(
int32_t
Decode
(
const
EncodedImage
&
input_image
bool
missing_frames
int64_t
render_time_ms
)
)
;
MOCK_METHOD
(
int32_t
RegisterDecodeCompleteCallback
(
DecodedImageCallback
*
callback
)
(
override
)
)
;
MOCK_METHOD
(
int32_t
Release
(
)
(
override
)
)
;
MOCK_METHOD
(
void
Destruct
(
)
(
)
)
;
}
;
}
#
endif
