#
include
"
api
/
test
/
metrics
/
global_metrics_logger_and_exporter
.
h
"
#
include
<
memory
>
#
include
<
utility
>
#
include
<
vector
>
#
include
"
api
/
test
/
metrics
/
metrics_exporter
.
h
"
#
include
"
api
/
test
/
metrics
/
metrics_logger
.
h
"
#
include
"
api
/
test
/
metrics
/
metrics_logger_and_exporter
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
system_wrappers
/
include
/
clock
.
h
"
namespace
webrtc
{
namespace
test
{
DefaultMetricsLogger
*
GetGlobalMetricsLogger
(
)
{
static
DefaultMetricsLogger
*
logger_
=
new
DefaultMetricsLogger
(
Clock
:
:
GetRealTimeClock
(
)
)
;
return
logger_
;
}
bool
ExportPerfMetric
(
MetricsLogger
&
logger
std
:
:
vector
<
std
:
:
unique_ptr
<
MetricsExporter
>
>
exporters
)
{
std
:
:
vector
<
Metric
>
metrics
=
logger
.
GetCollectedMetrics
(
)
;
bool
success
=
true
;
for
(
auto
&
exporter
:
exporters
)
{
bool
export_result
=
exporter
-
>
Export
(
metrics
)
;
success
=
success
&
&
export_result
;
}
return
success
;
}
}
}
