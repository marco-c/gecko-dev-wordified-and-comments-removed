#
ifndef
API_TEST_MOCK_TRANSFORMABLE_VIDEO_FRAME_H_
#
define
API_TEST_MOCK_TRANSFORMABLE_VIDEO_FRAME_H_
#
include
<
vector
>
#
include
"
api
/
frame_transformer_interface
.
h
"
#
include
"
test
/
gmock
.
h
"
namespace
webrtc
{
class
MockTransformableVideoFrame
:
public
webrtc
:
:
TransformableVideoFrameInterface
{
public
:
MOCK_METHOD
(
rtc
:
:
ArrayView
<
const
uint8_t
>
GetData
(
)
(
const
override
)
)
;
MOCK_METHOD
(
void
SetData
(
rtc
:
:
ArrayView
<
const
uint8_t
>
data
)
(
override
)
)
;
MOCK_METHOD
(
uint32_t
GetTimestamp
(
)
(
const
override
)
)
;
MOCK_METHOD
(
void
SetRTPTimestamp
(
uint32_t
)
(
override
)
)
;
MOCK_METHOD
(
uint32_t
GetSsrc
(
)
(
const
override
)
)
;
MOCK_METHOD
(
bool
IsKeyFrame
(
)
(
const
override
)
)
;
MOCK_METHOD
(
void
SetMetadata
(
const
webrtc
:
:
VideoFrameMetadata
&
)
(
override
)
)
;
MOCK_METHOD
(
uint8_t
GetPayloadType
(
)
(
const
override
)
)
;
MOCK_METHOD
(
TransformableFrameInterface
:
:
Direction
GetDirection
(
)
(
const
override
)
)
;
MOCK_METHOD
(
VideoFrameMetadata
Metadata
(
)
(
const
override
)
)
;
MOCK_METHOD
(
absl
:
:
optional
<
Timestamp
>
GetCaptureTimeIdentifier
(
)
(
const
override
)
)
;
}
;
static_assert
(
!
std
:
:
is_abstract_v
<
MockTransformableVideoFrame
>
"
"
)
;
}
#
endif
