#
ifndef
API_JSEP_ICE_CANDIDATE_H_
#
define
API_JSEP_ICE_CANDIDATE_H_
#
include
<
stddef
.
h
>
#
include
<
memory
>
#
include
<
vector
>
#
include
"
api
/
candidate
.
h
"
#
include
"
api
/
jsep
.
h
"
namespace
webrtc
{
class
JsepCandidateCollection
:
public
IceCandidateCollection
{
public
:
JsepCandidateCollection
(
)
;
JsepCandidateCollection
(
JsepCandidateCollection
&
&
o
)
;
JsepCandidateCollection
(
const
JsepCandidateCollection
&
)
=
delete
;
JsepCandidateCollection
&
operator
=
(
const
JsepCandidateCollection
&
)
=
delete
;
JsepCandidateCollection
Clone
(
)
const
;
size_t
count
(
)
const
override
;
bool
HasCandidate
(
const
IceCandidateInterface
*
candidate
)
const
override
;
virtual
void
add
(
JsepIceCandidate
*
candidate
)
;
const
IceCandidateInterface
*
at
(
size_t
index
)
const
override
;
size_t
remove
(
const
Candidate
&
candidate
)
;
private
:
std
:
:
vector
<
std
:
:
unique_ptr
<
JsepIceCandidate
>
>
candidates_
;
}
;
}
#
endif
