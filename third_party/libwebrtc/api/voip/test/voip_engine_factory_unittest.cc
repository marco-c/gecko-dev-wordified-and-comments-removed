#
include
"
api
/
voip
/
voip_engine_factory
.
h
"
#
include
<
memory
>
#
include
<
utility
>
#
include
"
api
/
make_ref_counted
.
h
"
#
include
"
api
/
task_queue
/
default_task_queue_factory
.
h
"
#
include
"
modules
/
audio_device
/
include
/
mock_audio_device
.
h
"
#
include
"
modules
/
audio_processing
/
include
/
mock_audio_processing
.
h
"
#
include
"
test
/
gmock
.
h
"
#
include
"
test
/
gtest
.
h
"
#
include
"
test
/
mock_audio_decoder_factory
.
h
"
#
include
"
test
/
mock_audio_encoder_factory
.
h
"
namespace
webrtc
{
namespace
{
using
:
:
testing
:
:
NiceMock
;
TEST
(
VoipEngineFactoryTest
CreateEngineWithMockModules
)
{
VoipEngineConfig
config
;
config
.
encoder_factory
=
rtc
:
:
make_ref_counted
<
MockAudioEncoderFactory
>
(
)
;
config
.
decoder_factory
=
rtc
:
:
make_ref_counted
<
MockAudioDecoderFactory
>
(
)
;
config
.
task_queue_factory
=
CreateDefaultTaskQueueFactory
(
)
;
config
.
audio_processing_factory
=
std
:
:
make_unique
<
NiceMock
<
test
:
:
MockAudioProcessingFactory
>
>
(
)
;
config
.
audio_device_module
=
test
:
:
MockAudioDeviceModule
:
:
CreateNice
(
)
;
auto
voip_engine
=
CreateVoipEngine
(
std
:
:
move
(
config
)
)
;
EXPECT_NE
(
voip_engine
nullptr
)
;
}
TEST
(
VoipEngineFactoryTest
UseNoAudioProcessing
)
{
VoipEngineConfig
config
;
config
.
encoder_factory
=
rtc
:
:
make_ref_counted
<
MockAudioEncoderFactory
>
(
)
;
config
.
decoder_factory
=
rtc
:
:
make_ref_counted
<
MockAudioDecoderFactory
>
(
)
;
config
.
task_queue_factory
=
CreateDefaultTaskQueueFactory
(
)
;
config
.
audio_device_module
=
test
:
:
MockAudioDeviceModule
:
:
CreateNice
(
)
;
auto
voip_engine
=
CreateVoipEngine
(
std
:
:
move
(
config
)
)
;
EXPECT_NE
(
voip_engine
nullptr
)
;
}
}
}
