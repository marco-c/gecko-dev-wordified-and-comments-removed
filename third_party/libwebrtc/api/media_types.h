#
ifndef
API_MEDIA_TYPES_H_
#
define
API_MEDIA_TYPES_H_
#
include
<
string
>
#
include
"
rtc_base
/
system
/
rtc_export
.
h
"
namespace
webrtc
{
enum
class
MediaType
{
AUDIO
VIDEO
DATA
UNSUPPORTED
ANY
MEDIA_TYPE_AUDIO
=
AUDIO
MEDIA_TYPE_VIDEO
=
VIDEO
MEDIA_TYPE_DATA
=
DATA
MEDIA_TYPE_UNSUPPORTED
=
UNSUPPORTED
}
;
RTC_EXPORT
std
:
:
string
MediaTypeToString
(
MediaType
type
)
;
template
<
typename
Sink
>
void
AbslStringify
(
Sink
&
sink
MediaType
type
)
{
sink
.
Append
(
MediaTypeToString
(
type
)
)
;
}
extern
const
char
kMediaTypeAudio
[
]
;
extern
const
char
kMediaTypeVideo
[
]
;
extern
const
char
kMediaTypeData
[
]
;
}
namespace
cricket
{
using
MediaType
=
webrtc
:
:
MediaType
;
using
webrtc
:
:
kMediaTypeAudio
;
using
webrtc
:
:
kMediaTypeData
;
using
webrtc
:
:
kMediaTypeVideo
;
using
webrtc
:
:
MediaTypeToString
;
constexpr
MediaType
MEDIA_TYPE_AUDIO
=
webrtc
:
:
MediaType
:
:
AUDIO
;
constexpr
MediaType
MEDIA_TYPE_VIDEO
=
webrtc
:
:
MediaType
:
:
VIDEO
;
constexpr
MediaType
MEDIA_TYPE_DATA
=
webrtc
:
:
MediaType
:
:
DATA
;
constexpr
MediaType
MEDIA_TYPE_UNSUPPORTED
=
webrtc
:
:
MediaType
:
:
UNSUPPORTED
;
}
#
endif
