#
ifndef
API_RTC_EVENT_LOG_RTC_EVENT_LOG_FACTORY_H_
#
define
API_RTC_EVENT_LOG_RTC_EVENT_LOG_FACTORY_H_
#
include
<
memory
>
#
include
"
absl
/
base
/
nullability
.
h
"
#
include
"
api
/
environment
/
environment
.
h
"
#
include
"
api
/
rtc_event_log
/
rtc_event_log
.
h
"
#
include
"
api
/
rtc_event_log
/
rtc_event_log_factory_interface
.
h
"
#
include
"
api
/
task_queue
/
task_queue_factory
.
h
"
#
include
"
rtc_base
/
system
/
rtc_export
.
h
"
namespace
webrtc
{
class
RTC_EXPORT
RtcEventLogFactory
:
public
RtcEventLogFactoryInterface
{
public
:
RtcEventLogFactory
(
)
=
default
;
[
[
deprecated
(
"
Use
default
constructor
"
)
]
]
explicit
RtcEventLogFactory
(
TaskQueueFactory
*
)
{
}
~
RtcEventLogFactory
(
)
override
=
default
;
absl_nonnull
std
:
:
unique_ptr
<
RtcEventLog
>
Create
(
const
Environment
&
env
)
const
override
;
}
;
}
#
endif
