#
ifndef
API_LOCAL_NETWORK_ACCESS_PERMISSION_H_
#
define
API_LOCAL_NETWORK_ACCESS_PERMISSION_H_
#
include
<
memory
>
#
include
"
absl
/
functional
/
any_invocable
.
h
"
#
include
"
rtc_base
/
socket_address
.
h
"
namespace
webrtc
{
enum
class
LocalNetworkAccessPermissionStatus
{
kGranted
kDenied
}
;
class
LocalNetworkAccessPermissionInterface
{
public
:
virtual
~
LocalNetworkAccessPermissionInterface
(
)
=
default
;
virtual
void
RequestPermission
(
const
SocketAddress
&
addr
absl
:
:
AnyInvocable
<
void
(
LocalNetworkAccessPermissionStatus
)
>
callback
)
=
0
;
}
;
class
LocalNetworkAccessPermissionFactoryInterface
{
public
:
virtual
~
LocalNetworkAccessPermissionFactoryInterface
(
)
=
default
;
virtual
std
:
:
unique_ptr
<
LocalNetworkAccessPermissionInterface
>
Create
(
)
=
0
;
}
;
}
#
endif
