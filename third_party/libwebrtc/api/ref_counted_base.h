#
ifndef
API_REF_COUNTED_BASE_H_
#
define
API_REF_COUNTED_BASE_H_
#
include
"
rtc_base
/
constructor_magic
.
h
"
#
include
"
rtc_base
/
ref_count
.
h
"
#
include
"
rtc_base
/
ref_counter
.
h
"
namespace
rtc
{
class
RefCountedBase
{
public
:
RefCountedBase
(
)
=
default
;
void
AddRef
(
)
const
{
ref_count_
.
IncRef
(
)
;
}
RefCountReleaseStatus
Release
(
)
const
{
const
auto
status
=
ref_count_
.
DecRef
(
)
;
if
(
status
=
=
RefCountReleaseStatus
:
:
kDroppedLastRef
)
{
delete
this
;
}
return
status
;
}
protected
:
virtual
~
RefCountedBase
(
)
=
default
;
private
:
mutable
webrtc
:
:
webrtc_impl
:
:
RefCounter
ref_count_
{
0
}
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
RefCountedBase
)
;
}
;
}
#
endif
