#
ifndef
API_RTC_EVENT_LOG_OUTPUT_FILE_H_
#
define
API_RTC_EVENT_LOG_OUTPUT_FILE_H_
#
include
<
stddef
.
h
>
#
include
<
stdio
.
h
>
#
include
<
string
>
#
include
"
api
/
rtc_event_log_output
.
h
"
#
include
"
rtc_base
/
system
/
file_wrapper
.
h
"
namespace
webrtc
{
class
RtcEventLogOutputFile
final
:
public
RtcEventLogOutput
{
public
:
static
const
size_t
kMaxReasonableFileSize
;
explicit
RtcEventLogOutputFile
(
const
std
:
:
string
&
file_name
)
;
RtcEventLogOutputFile
(
const
std
:
:
string
&
file_name
size_t
max_size_bytes
)
;
RtcEventLogOutputFile
(
FILE
*
file
size_t
max_size_bytes
)
;
~
RtcEventLogOutputFile
(
)
override
=
default
;
bool
IsActive
(
)
const
override
;
bool
Write
(
const
std
:
:
string
&
output
)
override
;
bool
Write
(
absl
:
:
string_view
output
)
override
;
private
:
RtcEventLogOutputFile
(
FileWrapper
file
size_t
max_size_bytes
)
;
inline
bool
IsActiveInternal
(
)
const
;
const
size_t
max_size_bytes_
;
size_t
written_bytes_
{
0
}
;
FileWrapper
file_
;
}
;
}
#
endif
