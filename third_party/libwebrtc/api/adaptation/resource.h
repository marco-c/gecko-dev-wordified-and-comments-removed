#
ifndef
API_ADAPTATION_RESOURCE_H_
#
define
API_ADAPTATION_RESOURCE_H_
#
include
<
string
>
#
include
"
api
/
ref_count
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
rtc_base
/
system
/
rtc_export
.
h
"
namespace
webrtc
{
class
Resource
;
enum
class
ResourceUsageState
{
kOveruse
kUnderuse
}
;
RTC_EXPORT
const
char
*
ResourceUsageStateToString
(
ResourceUsageState
usage_state
)
;
class
RTC_EXPORT
ResourceListener
{
public
:
virtual
~
ResourceListener
(
)
;
virtual
void
OnResourceUsageStateMeasured
(
scoped_refptr
<
Resource
>
resource
ResourceUsageState
usage_state
)
=
0
;
}
;
class
RTC_EXPORT
Resource
:
public
RefCountInterface
{
public
:
Resource
(
)
;
~
Resource
(
)
override
;
virtual
std
:
:
string
Name
(
)
const
=
0
;
virtual
void
SetResourceListener
(
ResourceListener
*
listener
)
=
0
;
}
;
}
#
endif
