#
ifndef
API_NETEQ_NETEQ_FACTORY_H_
#
define
API_NETEQ_NETEQ_FACTORY_H_
#
include
<
memory
>
#
include
"
api
/
audio_codecs
/
audio_decoder_factory
.
h
"
#
include
"
api
/
environment
/
environment
.
h
"
#
include
"
api
/
neteq
/
neteq
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
system_wrappers
/
include
/
clock
.
h
"
namespace
webrtc
{
class
NetEqFactory
{
public
:
virtual
~
NetEqFactory
(
)
=
default
;
virtual
std
:
:
unique_ptr
<
NetEq
>
Create
(
const
Environment
&
env
const
NetEq
:
:
Config
&
config
scoped_refptr
<
AudioDecoderFactory
>
decoder_factory
)
const
{
return
CreateNetEq
(
config
decoder_factory
&
env
.
clock
(
)
)
;
}
virtual
std
:
:
unique_ptr
<
NetEq
>
CreateNetEq
(
const
NetEq
:
:
Config
&
config
const
rtc
:
:
scoped_refptr
<
AudioDecoderFactory
>
&
decoder_factory
Clock
*
clock
)
const
{
RTC_CHECK_NOTREACHED
(
)
;
}
}
;
}
#
endif
