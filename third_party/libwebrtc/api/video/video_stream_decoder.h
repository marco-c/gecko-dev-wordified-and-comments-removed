#
ifndef
API_VIDEO_VIDEO_STREAM_DECODER_H_
#
define
API_VIDEO_VIDEO_STREAM_DECODER_H_
#
include
<
map
>
#
include
<
memory
>
#
include
<
utility
>
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
api
/
video
/
encoded_frame
.
h
"
#
include
"
api
/
video
/
video_content_type
.
h
"
#
include
"
api
/
video
/
video_frame
.
h
"
#
include
"
api
/
video_codecs
/
sdp_video_format
.
h
"
#
include
"
api
/
video_codecs
/
video_decoder_factory
.
h
"
namespace
webrtc
{
class
VideoStreamDecoderInterface
{
public
:
class
Callbacks
{
public
:
virtual
~
Callbacks
(
)
=
default
;
struct
FrameInfo
{
absl
:
:
optional
<
int
>
qp
;
VideoContentType
content_type
;
}
;
virtual
void
OnNonDecodableState
(
)
=
0
;
virtual
void
OnContinuousUntil
(
const
video_coding
:
:
VideoLayerFrameId
&
key
)
{
}
virtual
void
OnContinuousUntil
(
int64_t
frame_id
)
{
}
virtual
void
OnDecodedFrame
(
VideoFrame
frame
const
FrameInfo
&
frame_info
)
=
0
;
}
;
virtual
~
VideoStreamDecoderInterface
(
)
=
default
;
virtual
void
OnFrame
(
std
:
:
unique_ptr
<
video_coding
:
:
EncodedFrame
>
frame
)
=
0
;
virtual
void
SetMinPlayoutDelay
(
TimeDelta
min_delay
)
=
0
;
virtual
void
SetMaxPlayoutDelay
(
TimeDelta
max_delay
)
=
0
;
}
;
}
#
endif
