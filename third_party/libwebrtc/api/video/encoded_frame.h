#
ifndef
API_VIDEO_ENCODED_FRAME_H_
#
define
API_VIDEO_ENCODED_FRAME_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
units
/
timestamp
.
h
"
#
include
"
modules
/
video_coding
/
encoded_frame
.
h
"
namespace
webrtc
{
class
EncodedFrame
:
public
webrtc
:
:
VCMEncodedFrame
{
public
:
static
const
uint8_t
kMaxFrameReferences
=
5
;
EncodedFrame
(
)
=
default
;
EncodedFrame
(
const
EncodedFrame
&
)
=
default
;
virtual
~
EncodedFrame
(
)
{
}
virtual
int64_t
ReceivedTime
(
)
const
=
0
;
absl
:
:
optional
<
webrtc
:
:
Timestamp
>
ReceivedTimestamp
(
)
const
;
virtual
int64_t
RenderTime
(
)
const
=
0
;
absl
:
:
optional
<
webrtc
:
:
Timestamp
>
RenderTimestamp
(
)
const
;
virtual
bool
delayed_by_retransmission
(
)
const
;
bool
is_keyframe
(
)
const
{
return
num_references
=
=
0
;
}
void
SetId
(
int64_t
id
)
{
id_
=
id
;
}
int64_t
Id
(
)
const
{
return
id_
;
}
size_t
num_references
=
0
;
int64_t
references
[
kMaxFrameReferences
]
;
bool
is_last_spatial_layer
=
true
;
private
:
int64_t
id_
=
-
1
;
}
;
}
#
endif
