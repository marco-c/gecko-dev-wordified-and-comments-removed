#
include
"
api
/
video
/
builtin_video_bitrate_allocator_factory
.
h
"
#
include
<
memory
>
#
include
"
absl
/
base
/
macros
.
h
"
#
include
"
api
/
video
/
video_bitrate_allocator
.
h
"
#
include
"
api
/
video_codecs
/
video_codec
.
h
"
#
include
"
modules
/
video_coding
/
codecs
/
vp9
/
svc_rate_allocator
.
h
"
#
include
"
modules
/
video_coding
/
utility
/
simulcast_rate_allocator
.
h
"
namespace
webrtc
{
namespace
{
class
BuiltinVideoBitrateAllocatorFactory
:
public
VideoBitrateAllocatorFactory
{
public
:
BuiltinVideoBitrateAllocatorFactory
(
)
=
default
;
~
BuiltinVideoBitrateAllocatorFactory
(
)
override
=
default
;
std
:
:
unique_ptr
<
VideoBitrateAllocator
>
CreateVideoBitrateAllocator
(
const
VideoCodec
&
codec
)
override
{
std
:
:
unique_ptr
<
VideoBitrateAllocator
>
rate_allocator
;
switch
(
codec
.
codecType
)
{
case
kVideoCodecVP9
:
rate_allocator
.
reset
(
new
SvcRateAllocator
(
codec
)
)
;
break
;
default
:
rate_allocator
.
reset
(
new
SimulcastRateAllocator
(
codec
)
)
;
}
return
rate_allocator
;
}
}
;
}
std
:
:
unique_ptr
<
VideoBitrateAllocatorFactory
>
CreateBuiltinVideoBitrateAllocatorFactory
(
)
{
return
std
:
:
make_unique
<
BuiltinVideoBitrateAllocatorFactory
>
(
)
;
}
}
