#
ifndef
API_VIDEO_VIDEO_SOURCE_INTERFACE_H_
#
define
API_VIDEO_VIDEO_SOURCE_INTERFACE_H_
#
include
<
limits
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
video
/
video_sink_interface
.
h
"
#
include
"
rtc_base
/
system
/
rtc_export
.
h
"
namespace
rtc
{
struct
RTC_EXPORT
VideoSinkWants
{
VideoSinkWants
(
)
;
VideoSinkWants
(
const
VideoSinkWants
&
)
;
~
VideoSinkWants
(
)
;
bool
rotation_applied
=
false
;
bool
black_frames
=
false
;
int
max_pixel_count
=
std
:
:
numeric_limits
<
int
>
:
:
max
(
)
;
absl
:
:
optional
<
int
>
target_pixel_count
;
int
max_framerate_fps
=
std
:
:
numeric_limits
<
int
>
:
:
max
(
)
;
int
resolution_alignment
=
1
;
}
;
template
<
typename
VideoFrameT
>
class
VideoSourceInterface
{
public
:
virtual
~
VideoSourceInterface
(
)
=
default
;
virtual
void
AddOrUpdateSink
(
VideoSinkInterface
<
VideoFrameT
>
*
sink
const
VideoSinkWants
&
wants
)
=
0
;
virtual
void
RemoveSink
(
VideoSinkInterface
<
VideoFrameT
>
*
sink
)
=
0
;
}
;
}
#
endif
