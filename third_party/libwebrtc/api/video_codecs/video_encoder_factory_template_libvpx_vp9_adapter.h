#
ifndef
API_VIDEO_CODECS_VIDEO_ENCODER_FACTORY_TEMPLATE_LIBVPX_VP9_ADAPTER_H_
#
define
API_VIDEO_CODECS_VIDEO_ENCODER_FACTORY_TEMPLATE_LIBVPX_VP9_ADAPTER_H_
#
include
<
memory
>
#
include
<
vector
>
#
include
"
api
/
environment
/
environment
.
h
"
#
include
"
api
/
video_codecs
/
vp9_profile
.
h
"
#
include
"
modules
/
video_coding
/
codecs
/
vp9
/
include
/
vp9
.
h
"
namespace
webrtc
{
struct
LibvpxVp9EncoderTemplateAdapter
{
static
std
:
:
vector
<
SdpVideoFormat
>
SupportedFormats
(
)
{
return
SupportedVP9Codecs
(
true
)
;
}
static
std
:
:
unique_ptr
<
VideoEncoder
>
CreateEncoder
(
const
Environment
&
env
const
SdpVideoFormat
&
format
)
{
return
CreateVp9Encoder
(
env
{
.
profile
=
ParseSdpForVP9Profile
(
format
.
parameters
)
.
value_or
(
VP9Profile
:
:
kProfile0
)
}
)
;
}
static
bool
IsScalabilityModeSupported
(
ScalabilityMode
scalability_mode
)
{
return
VP9Encoder
:
:
SupportsScalabilityMode
(
scalability_mode
)
;
}
}
;
}
#
endif
