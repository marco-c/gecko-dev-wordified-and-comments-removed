#
ifndef
API_TRANSPORT_GOOG_CC_FACTORY_H_
#
define
API_TRANSPORT_GOOG_CC_FACTORY_H_
#
include
<
memory
>
#
include
"
api
/
network_state_predictor
.
h
"
#
include
"
api
/
transport
/
network_control
.
h
"
#
include
"
rtc_base
/
deprecation
.
h
"
namespace
webrtc
{
class
RtcEventLog
;
struct
GoogCcFactoryConfig
{
std
:
:
unique_ptr
<
NetworkStateEstimatorFactory
>
network_state_estimator_factory
=
nullptr
;
NetworkStatePredictorFactoryInterface
*
network_state_predictor_factory
=
nullptr
;
bool
feedback_only
=
false
;
}
;
class
GoogCcNetworkControllerFactory
:
public
NetworkControllerFactoryInterface
{
public
:
GoogCcNetworkControllerFactory
(
)
=
default
;
explicit
RTC_DEPRECATED
GoogCcNetworkControllerFactory
(
RtcEventLog
*
event_log
)
;
explicit
GoogCcNetworkControllerFactory
(
NetworkStatePredictorFactoryInterface
*
network_state_predictor_factory
)
;
explicit
GoogCcNetworkControllerFactory
(
GoogCcFactoryConfig
config
)
;
std
:
:
unique_ptr
<
NetworkControllerInterface
>
Create
(
NetworkControllerConfig
config
)
override
;
TimeDelta
GetProcessInterval
(
)
const
override
;
protected
:
RtcEventLog
*
const
event_log_
=
nullptr
;
GoogCcFactoryConfig
factory_config_
;
}
;
class
RTC_DEPRECATED
GoogCcFeedbackNetworkControllerFactory
:
public
GoogCcNetworkControllerFactory
{
public
:
explicit
GoogCcFeedbackNetworkControllerFactory
(
RtcEventLog
*
event_log
)
;
}
;
}
#
endif
