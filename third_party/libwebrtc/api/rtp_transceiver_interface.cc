#
include
"
api
/
rtp_transceiver_interface
.
h
"
#
include
<
optional
>
#
include
"
api
/
rtc_error
.
h
"
#
include
"
api
/
rtp_transceiver_direction
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
RtpTransceiverInit
:
:
RtpTransceiverInit
(
)
=
default
;
RtpTransceiverInit
:
:
RtpTransceiverInit
(
const
RtpTransceiverInit
&
rhs
)
=
default
;
RtpTransceiverInit
:
:
~
RtpTransceiverInit
(
)
=
default
;
std
:
:
optional
<
RtpTransceiverDirection
>
RtpTransceiverInterface
:
:
fired_direction
(
)
const
{
return
std
:
:
nullopt
;
}
bool
RtpTransceiverInterface
:
:
stopping
(
)
const
{
return
false
;
}
void
RtpTransceiverInterface
:
:
Stop
(
)
{
StopInternal
(
)
;
}
RTCError
RtpTransceiverInterface
:
:
StopStandard
(
)
{
RTC_DCHECK_NOTREACHED
(
)
<
<
"
DEBUG
:
RtpTransceiverInterface
:
:
StopStandard
called
"
;
return
RTCError
:
:
OK
(
)
;
}
void
RtpTransceiverInterface
:
:
StopInternal
(
)
{
RTC_DCHECK_NOTREACHED
(
)
<
<
"
DEBUG
:
RtpTransceiverInterface
:
:
StopInternal
called
"
;
}
void
RtpTransceiverInterface
:
:
SetDirection
(
RtpTransceiverDirection
new_direction
)
{
SetDirectionWithError
(
new_direction
)
;
}
RTCError
RtpTransceiverInterface
:
:
SetDirectionWithError
(
RtpTransceiverDirection
)
{
RTC_DCHECK_NOTREACHED
(
)
<
<
"
Default
implementation
called
"
;
return
RTCError
:
:
OK
(
)
;
}
}
