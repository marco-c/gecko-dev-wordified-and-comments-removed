#
include
"
api
/
audio_codecs
/
ilbc
/
audio_decoder_ilbc
.
h
"
#
include
<
memory
>
#
include
<
vector
>
#
include
"
absl
/
strings
/
match
.
h
"
#
include
"
modules
/
audio_coding
/
codecs
/
ilbc
/
audio_decoder_ilbc
.
h
"
namespace
webrtc
{
absl
:
:
optional
<
AudioDecoderIlbc
:
:
Config
>
AudioDecoderIlbc
:
:
SdpToConfig
(
const
SdpAudioFormat
&
format
)
{
if
(
absl
:
:
EqualsIgnoreCase
(
format
.
name
"
ILBC
"
)
&
&
format
.
clockrate_hz
=
=
8000
&
&
format
.
num_channels
=
=
1
)
{
return
Config
(
)
;
}
return
absl
:
:
nullopt
;
}
void
AudioDecoderIlbc
:
:
AppendSupportedDecoders
(
std
:
:
vector
<
AudioCodecSpec
>
*
specs
)
{
specs
-
>
push_back
(
{
{
"
ILBC
"
8000
1
}
{
8000
1
13300
}
}
)
;
}
std
:
:
unique_ptr
<
AudioDecoder
>
AudioDecoderIlbc
:
:
MakeAudioDecoder
(
Config
config
absl
:
:
optional
<
AudioCodecPairId
>
const
WebRtcKeyValueConfig
*
field_trials
)
{
return
std
:
:
make_unique
<
AudioDecoderIlbcImpl
>
(
)
;
}
}
