#
ifndef
API_AUDIO_CODECS_OPUS_AUDIO_ENCODER_MULTI_CHANNEL_OPUS_H_
#
define
API_AUDIO_CODECS_OPUS_AUDIO_ENCODER_MULTI_CHANNEL_OPUS_H_
#
include
<
memory
>
#
include
<
vector
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
audio_codecs
/
audio_codec_pair_id
.
h
"
#
include
"
api
/
audio_codecs
/
audio_encoder
.
h
"
#
include
"
api
/
audio_codecs
/
audio_format
.
h
"
#
include
"
api
/
audio_codecs
/
opus
/
audio_encoder_multi_channel_opus_config
.
h
"
#
include
"
api
/
webrtc_key_value_config
.
h
"
#
include
"
rtc_base
/
system
/
rtc_export
.
h
"
namespace
webrtc
{
struct
RTC_EXPORT
AudioEncoderMultiChannelOpus
{
using
Config
=
AudioEncoderMultiChannelOpusConfig
;
static
absl
:
:
optional
<
Config
>
SdpToConfig
(
const
SdpAudioFormat
&
audio_format
)
;
static
void
AppendSupportedEncoders
(
std
:
:
vector
<
AudioCodecSpec
>
*
specs
)
;
static
AudioCodecInfo
QueryAudioEncoder
(
const
Config
&
config
)
;
static
std
:
:
unique_ptr
<
AudioEncoder
>
MakeAudioEncoder
(
const
Config
&
config
int
payload_type
absl
:
:
optional
<
AudioCodecPairId
>
codec_pair_id
=
absl
:
:
nullopt
const
WebRtcKeyValueConfig
*
field_trials
=
nullptr
)
;
}
;
}
#
endif
