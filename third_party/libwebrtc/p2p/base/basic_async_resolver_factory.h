#
ifndef
P2P_BASE_BASIC_ASYNC_RESOLVER_FACTORY_H_
#
define
P2P_BASE_BASIC_ASYNC_RESOLVER_FACTORY_H_
#
include
<
functional
>
#
include
<
memory
>
#
include
<
utility
>
#
include
"
api
/
async_dns_resolver
.
h
"
namespace
webrtc
{
class
BasicAsyncDnsResolverFactory
final
:
public
AsyncDnsResolverFactoryInterface
{
public
:
BasicAsyncDnsResolverFactory
(
)
=
default
;
std
:
:
unique_ptr
<
webrtc
:
:
AsyncDnsResolverInterface
>
CreateAndResolve
(
const
SocketAddress
&
addr
absl
:
:
AnyInvocable
<
void
(
)
>
callback
)
override
;
std
:
:
unique_ptr
<
webrtc
:
:
AsyncDnsResolverInterface
>
CreateAndResolve
(
const
SocketAddress
&
addr
int
family
absl
:
:
AnyInvocable
<
void
(
)
>
callback
)
override
;
std
:
:
unique_ptr
<
webrtc
:
:
AsyncDnsResolverInterface
>
Create
(
)
override
;
}
;
}
#
endif
