#
ifndef
P2P_BASE_ACTIVE_ICE_CONTROLLER_FACTORY_INTERFACE_H_
#
define
P2P_BASE_ACTIVE_ICE_CONTROLLER_FACTORY_INTERFACE_H_
#
include
<
memory
>
#
include
"
p2p
/
base
/
active_ice_controller_interface
.
h
"
#
include
"
p2p
/
base
/
ice_agent_interface
.
h
"
#
include
"
p2p
/
base
/
ice_controller_factory_interface
.
h
"
namespace
webrtc
{
struct
ActiveIceControllerFactoryArgs
{
IceControllerFactoryArgs
legacy_args
;
IceAgentInterface
*
ice_agent
;
}
;
class
ActiveIceControllerFactoryInterface
{
public
:
virtual
~
ActiveIceControllerFactoryInterface
(
)
=
default
;
virtual
std
:
:
unique_ptr
<
ActiveIceControllerInterface
>
Create
(
const
ActiveIceControllerFactoryArgs
&
)
=
0
;
}
;
}
namespace
cricket
{
using
:
:
webrtc
:
:
ActiveIceControllerFactoryArgs
;
using
:
:
webrtc
:
:
ActiveIceControllerFactoryInterface
;
}
#
endif
