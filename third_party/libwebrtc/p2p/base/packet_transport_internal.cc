#
include
"
p2p
/
base
/
packet_transport_internal
.
h
"
#
include
"
api
/
sequence_checker
.
h
"
#
include
"
rtc_base
/
network
/
received_packet
.
h
"
namespace
rtc
{
PacketTransportInternal
:
:
PacketTransportInternal
(
)
=
default
;
PacketTransportInternal
:
:
~
PacketTransportInternal
(
)
=
default
;
bool
PacketTransportInternal
:
:
GetOption
(
rtc
:
:
Socket
:
:
Option
opt
int
*
value
)
{
return
false
;
}
absl
:
:
optional
<
NetworkRoute
>
PacketTransportInternal
:
:
network_route
(
)
const
{
return
absl
:
:
optional
<
NetworkRoute
>
(
)
;
}
void
PacketTransportInternal
:
:
RegisterReceivedPacketCallback
(
void
*
id
absl
:
:
AnyInvocable
<
void
(
PacketTransportInternal
*
const
rtc
:
:
ReceivedPacket
&
)
>
callback
)
{
RTC_DCHECK_RUN_ON
(
&
network_checker_
)
;
received_packet_callback_list_
.
AddReceiver
(
id
std
:
:
move
(
callback
)
)
;
}
void
PacketTransportInternal
:
:
DeregisterReceivedPacketCallback
(
void
*
id
)
{
RTC_DCHECK_RUN_ON
(
&
network_checker_
)
;
received_packet_callback_list_
.
RemoveReceivers
(
id
)
;
}
void
PacketTransportInternal
:
:
NotifyPacketReceived
(
const
rtc
:
:
ReceivedPacket
&
packet
)
{
RTC_DCHECK_RUN_ON
(
&
network_checker_
)
;
received_packet_callback_list_
.
Send
(
this
packet
)
;
}
}
