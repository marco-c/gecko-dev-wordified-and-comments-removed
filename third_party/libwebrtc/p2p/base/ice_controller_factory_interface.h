#
ifndef
P2P_BASE_ICE_CONTROLLER_FACTORY_INTERFACE_H_
#
define
P2P_BASE_ICE_CONTROLLER_FACTORY_INTERFACE_H_
#
include
<
functional
>
#
include
<
memory
>
#
include
<
string
>
#
include
"
p2p
/
base
/
connection
.
h
"
#
include
"
p2p
/
base
/
ice_controller_interface
.
h
"
#
include
"
p2p
/
base
/
ice_transport_internal
.
h
"
#
include
"
p2p
/
base
/
transport_description
.
h
"
namespace
webrtc
{
struct
IceControllerFactoryArgs
{
std
:
:
function
<
IceTransportStateInternal
(
)
>
ice_transport_state_func
;
std
:
:
function
<
IceRole
(
)
>
ice_role_func
;
std
:
:
function
<
bool
(
const
webrtc
:
:
Connection
*
)
>
is_connection_pruned_func
;
const
IceFieldTrials
*
ice_field_trials
;
std
:
:
string
ice_controller_field_trials
;
}
;
class
IceControllerFactoryInterface
{
public
:
virtual
~
IceControllerFactoryInterface
(
)
=
default
;
virtual
std
:
:
unique_ptr
<
IceControllerInterface
>
Create
(
const
IceControllerFactoryArgs
&
args
)
=
0
;
}
;
}
namespace
cricket
{
using
:
:
webrtc
:
:
IceControllerFactoryArgs
;
using
:
:
webrtc
:
:
IceControllerFactoryInterface
;
}
#
endif
