#
include
<
stdio
.
h
>
#
include
<
stdlib
.
h
>
#
include
<
string
>
#
include
"
absl
/
flags
/
flag
.
h
"
#
include
"
absl
/
flags
/
parse
.
h
"
#
include
"
absl
/
flags
/
usage
.
h
"
#
include
"
rtc_tools
/
converter
/
converter
.
h
"
ABSL_FLAG
(
int
width
-
1
"
Width
in
pixels
of
the
frames
in
the
input
file
"
)
;
ABSL_FLAG
(
int
height
-
1
"
Height
in
pixels
of
the
frames
in
the
input
file
"
)
;
ABSL_FLAG
(
std
:
:
string
frames_dir
"
.
"
"
The
path
to
the
directory
where
the
frames
reside
"
)
;
ABSL_FLAG
(
std
:
:
string
output_file
"
output
.
yuv
"
"
The
output
file
to
which
frames
are
written
"
)
;
ABSL_FLAG
(
bool
delete_frames
false
"
Whether
or
not
to
delete
the
input
frames
after
the
conversion
"
)
;
int
main
(
int
argc
char
*
argv
[
]
)
{
absl
:
:
SetProgramUsageMessage
(
"
Converts
RGBA
raw
image
files
to
I420
frames
"
"
for
YUV
.
\
n
"
"
Example
usage
:
\
n
"
"
.
/
rgba_to_i420_converter
-
-
frames_dir
=
.
"
"
-
-
output_file
=
output
.
yuv
-
-
width
=
320
"
"
-
-
height
=
240
\
n
"
"
IMPORTANT
:
If
you
pass
the
-
-
delete_frames
"
"
command
line
parameter
the
tool
will
delete
"
"
the
input
frames
after
conversion
.
\
n
"
)
;
absl
:
:
ParseCommandLine
(
argc
argv
)
;
int
width
=
absl
:
:
GetFlag
(
FLAGS_width
)
;
int
height
=
absl
:
:
GetFlag
(
FLAGS_height
)
;
if
(
width
<
=
0
|
|
height
<
=
0
)
{
fprintf
(
stderr
"
Error
:
width
or
height
cannot
be
<
=
0
!
\
n
"
)
;
return
-
1
;
}
bool
del_frames
=
absl
:
:
GetFlag
(
FLAGS_delete_frames
)
;
webrtc
:
:
test
:
:
Converter
converter
(
width
height
)
;
bool
success
=
converter
.
ConvertRGBAToI420Video
(
absl
:
:
GetFlag
(
FLAGS_frames_dir
)
absl
:
:
GetFlag
(
FLAGS_output_file
)
del_frames
)
;
if
(
success
)
{
fprintf
(
stdout
"
Successful
conversion
of
RGBA
frames
to
YUV
video
!
\
n
"
)
;
return
0
;
}
else
{
fprintf
(
stdout
"
Unsuccessful
conversion
of
RGBA
frames
to
YUV
video
!
\
n
"
)
;
return
-
1
;
}
}
