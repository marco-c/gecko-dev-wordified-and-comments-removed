#
ifndef
RTC_TOOLS_FRAME_ANALYZER_VIDEO_QUALITY_ANALYSIS_H_
#
define
RTC_TOOLS_FRAME_ANALYZER_VIDEO_QUALITY_ANALYSIS_H_
#
include
<
stdio
.
h
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
api
/
video
/
video_frame_buffer
.
h
"
#
include
"
rtc_tools
/
video_file_reader
.
h
"
namespace
webrtc
{
namespace
test
{
struct
AnalysisResult
{
AnalysisResult
(
)
{
}
AnalysisResult
(
int
frame_number
double
psnr_value
double
ssim_value
)
:
frame_number
(
frame_number
)
psnr_value
(
psnr_value
)
ssim_value
(
ssim_value
)
{
}
int
frame_number
;
double
psnr_value
;
double
ssim_value
;
}
;
struct
ResultsContainer
{
ResultsContainer
(
)
;
~
ResultsContainer
(
)
;
std
:
:
vector
<
AnalysisResult
>
frames
;
int
max_repeated_frames
=
0
;
int
max_skipped_frames
=
0
;
int
total_skipped_frames
=
0
;
int
decode_errors_ref
=
0
;
int
decode_errors_test
=
0
;
}
;
std
:
:
vector
<
AnalysisResult
>
RunAnalysis
(
const
rtc
:
:
scoped_refptr
<
webrtc
:
:
test
:
:
Video
>
&
reference_video
const
rtc
:
:
scoped_refptr
<
webrtc
:
:
test
:
:
Video
>
&
test_video
const
std
:
:
vector
<
size_t
>
&
test_frame_indices
)
;
double
Psnr
(
const
rtc
:
:
scoped_refptr
<
I420BufferInterface
>
&
ref_buffer
const
rtc
:
:
scoped_refptr
<
I420BufferInterface
>
&
test_buffer
)
;
double
Ssim
(
const
rtc
:
:
scoped_refptr
<
I420BufferInterface
>
&
ref_buffer
const
rtc
:
:
scoped_refptr
<
I420BufferInterface
>
&
test_buffer
)
;
void
PrintAnalysisResults
(
const
std
:
:
string
&
label
ResultsContainer
*
results
)
;
void
PrintAnalysisResults
(
FILE
*
output
const
std
:
:
string
&
label
ResultsContainer
*
results
)
;
struct
Cluster
{
size_t
index
;
int
number_of_repeated_frames
;
}
;
std
:
:
vector
<
Cluster
>
CalculateFrameClusters
(
const
std
:
:
vector
<
size_t
>
&
indices
)
;
int
GetMaxRepeatedFrames
(
const
std
:
:
vector
<
Cluster
>
&
clusters
)
;
int
GetMaxSkippedFrames
(
const
std
:
:
vector
<
Cluster
>
&
clusters
)
;
int
GetTotalNumberOfSkippedFrames
(
const
std
:
:
vector
<
Cluster
>
&
clusters
)
;
}
}
#
endif
