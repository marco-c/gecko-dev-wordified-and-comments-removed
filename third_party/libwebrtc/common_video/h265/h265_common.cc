#
include
"
common_video
/
h265
/
h265_common
.
h
"
#
include
"
common_video
/
h264
/
h264_common
.
h
"
namespace
webrtc
{
namespace
H265
{
constexpr
uint8_t
kNaluTypeMask
=
0x7E
;
std
:
:
vector
<
NaluIndex
>
FindNaluIndices
(
ArrayView
<
const
uint8_t
>
buffer
)
{
std
:
:
vector
<
H264
:
:
NaluIndex
>
indices
=
H264
:
:
FindNaluIndices
(
buffer
)
;
std
:
:
vector
<
NaluIndex
>
results
;
for
(
auto
&
index
:
indices
)
{
results
.
push_back
(
{
index
.
start_offset
index
.
payload_start_offset
index
.
payload_size
}
)
;
}
return
results
;
}
NaluType
ParseNaluType
(
uint8_t
data
)
{
return
static_cast
<
NaluType
>
(
(
data
&
kNaluTypeMask
)
>
>
1
)
;
}
std
:
:
vector
<
uint8_t
>
ParseRbsp
(
ArrayView
<
const
uint8_t
>
data
)
{
return
H264
:
:
ParseRbsp
(
data
)
;
}
void
WriteRbsp
(
ArrayView
<
const
uint8_t
>
bytes
Buffer
*
destination
)
{
H264
:
:
WriteRbsp
(
bytes
destination
)
;
}
uint32_t
Log2Ceiling
(
uint32_t
value
)
{
return
(
value
?
32
:
-
1
)
-
WebRtcVideo_CountLeadingZeros32
(
value
-
1
)
;
}
}
}
