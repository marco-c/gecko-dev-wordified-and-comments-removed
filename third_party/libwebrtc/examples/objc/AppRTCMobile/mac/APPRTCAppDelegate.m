#
import
"
APPRTCAppDelegate
.
h
"
#
import
"
APPRTCViewController
.
h
"
#
import
<
WebRTC
/
RTCSSLAdapter
.
h
>
interface
APPRTCAppDelegate
(
)
<
NSWindowDelegate
>
end
implementation
APPRTCAppDelegate
{
APPRTCViewController
*
_viewController
;
NSWindow
*
_window
;
}
#
pragma
mark
-
NSApplicationDelegate
-
(
void
)
applicationDidFinishLaunching
:
(
NSNotification
*
)
notification
{
RTCInitializeSSL
(
)
;
NSScreen
*
screen
=
[
NSScreen
mainScreen
]
;
NSRect
visibleRect
=
[
screen
visibleFrame
]
;
NSRect
windowRect
=
NSMakeRect
(
NSMidX
(
visibleRect
)
NSMidY
(
visibleRect
)
1320
1140
)
;
NSUInteger
styleMask
=
NSTitledWindowMask
|
NSClosableWindowMask
;
_window
=
[
[
NSWindow
alloc
]
initWithContentRect
:
windowRect
styleMask
:
styleMask
backing
:
NSBackingStoreBuffered
defer
:
NO
]
;
_window
.
delegate
=
self
;
[
_window
makeKeyAndOrderFront
:
self
]
;
[
_window
makeMainWindow
]
;
_viewController
=
[
[
APPRTCViewController
alloc
]
initWithNibName
:
nil
bundle
:
nil
]
;
[
_window
setContentView
:
[
_viewController
view
]
]
;
}
#
pragma
mark
-
NSWindow
-
(
void
)
windowWillClose
:
(
NSNotification
*
)
notification
{
[
_viewController
windowWillClose
:
notification
]
;
RTCCleanupSSL
(
)
;
[
NSApp
terminate
:
self
]
;
}
end
