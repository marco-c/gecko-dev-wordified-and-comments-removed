#
import
<
Foundation
/
Foundation
.
h
>
#
import
<
Security
/
SecCertificate
.
h
>
typedef
enum
{
SR_CONNECTING
=
0
SR_OPEN
=
1
SR_CLOSING
=
2
SR_CLOSED
=
3
}
SRReadyState
;
typedef
enum
SRStatusCode
:
NSInteger
{
SRStatusCodeNormal
=
1000
SRStatusCodeGoingAway
=
1001
SRStatusCodeProtocolError
=
1002
SRStatusCodeUnhandledType
=
1003
SRStatusNoStatusReceived
=
1005
SRStatusCodeInvalidUTF8
=
1007
SRStatusCodePolicyViolated
=
1008
SRStatusCodeMessageTooBig
=
1009
}
SRStatusCode
;
class
SRWebSocket
;
extern
NSString
*
const
SRWebSocketErrorDomain
;
extern
NSString
*
const
SRHTTPResponseErrorKey
;
#
pragma
mark
-
SRWebSocketDelegate
protocol
SRWebSocketDelegate
;
#
pragma
mark
-
SRWebSocket
interface
SRWebSocket
:
NSObject
<
NSStreamDelegate
>
property
(
nonatomic
weak
)
id
<
SRWebSocketDelegate
>
delegate
;
property
(
nonatomic
readonly
)
SRReadyState
readyState
;
property
(
nonatomic
readonly
retain
)
NSURL
*
url
;
property
(
nonatomic
readonly
copy
)
NSString
*
protocol
;
-
(
id
)
initWithURLRequest
:
(
NSURLRequest
*
)
request
protocols
:
(
NSArray
*
)
protocols
;
-
(
id
)
initWithURLRequest
:
(
NSURLRequest
*
)
request
;
-
(
id
)
initWithURL
:
(
NSURL
*
)
url
protocols
:
(
NSArray
*
)
protocols
;
-
(
id
)
initWithURL
:
(
NSURL
*
)
url
;
-
(
void
)
setDelegateOperationQueue
:
(
NSOperationQueue
*
)
queue
;
-
(
void
)
setDelegateDispatchQueue
:
(
dispatch_queue_t
)
queue
;
-
(
void
)
scheduleInRunLoop
:
(
NSRunLoop
*
)
aRunLoop
forMode
:
(
NSString
*
)
mode
;
-
(
void
)
unscheduleFromRunLoop
:
(
NSRunLoop
*
)
aRunLoop
forMode
:
(
NSString
*
)
mode
;
-
(
void
)
open
;
-
(
void
)
close
;
-
(
void
)
closeWithCode
:
(
NSInteger
)
code
reason
:
(
NSString
*
)
reason
;
-
(
void
)
send
:
(
id
)
data
;
-
(
void
)
sendPing
:
(
NSData
*
)
data
;
end
#
pragma
mark
-
SRWebSocketDelegate
protocol
SRWebSocketDelegate
<
NSObject
>
-
(
void
)
webSocket
:
(
SRWebSocket
*
)
webSocket
didReceiveMessage
:
(
id
)
message
;
optional
-
(
void
)
webSocketDidOpen
:
(
SRWebSocket
*
)
webSocket
;
-
(
void
)
webSocket
:
(
SRWebSocket
*
)
webSocket
didFailWithError
:
(
NSError
*
)
error
;
-
(
void
)
webSocket
:
(
SRWebSocket
*
)
webSocket
didCloseWithCode
:
(
NSInteger
)
code
reason
:
(
NSString
*
)
reason
wasClean
:
(
BOOL
)
wasClean
;
-
(
void
)
webSocket
:
(
SRWebSocket
*
)
webSocket
didReceivePong
:
(
NSData
*
)
pongPayload
;
end
#
pragma
mark
-
NSURLRequest
(
CertificateAdditions
)
interface
NSURLRequest
(
CertificateAdditions
)
property
(
nonatomic
retain
readonly
)
NSArray
*
SR_SSLPinnedCertificates
;
end
#
pragma
mark
-
NSMutableURLRequest
(
CertificateAdditions
)
interface
NSMutableURLRequest
(
CertificateAdditions
)
property
(
nonatomic
retain
)
NSArray
*
SR_SSLPinnedCertificates
;
end
#
pragma
mark
-
NSRunLoop
(
SRWebSocket
)
interface
NSRunLoop
(
SRWebSocket
)
+
(
NSRunLoop
*
)
SR_networkRunLoop
;
end
