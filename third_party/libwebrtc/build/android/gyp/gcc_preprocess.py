import
optparse
import
os
import
sys
from
util
import
build_utils
def
DoGcc
(
options
)
:
  
build_utils
.
MakeDirectory
(
os
.
path
.
dirname
(
options
.
output
)
)
  
gcc_cmd
=
[
'
gcc
'
]
  
if
options
.
defines
:
    
gcc_cmd
.
extend
(
sum
(
map
(
lambda
w
:
[
'
-
D
'
w
]
options
.
defines
)
[
]
)
)
  
with
build_utils
.
AtomicOutput
(
options
.
output
)
as
f
:
    
gcc_cmd
.
extend
(
[
        
'
-
E
'
        
'
-
D
'
'
ANDROID
'
        
'
-
x
'
'
c
-
header
'
        
'
-
P
'
        
'
-
I
'
options
.
include_path
        
'
-
o
'
f
.
name
        
options
.
template
    
]
)
    
build_utils
.
CheckOutput
(
gcc_cmd
)
def
main
(
args
)
:
  
args
=
build_utils
.
ExpandFileArgs
(
args
)
  
parser
=
optparse
.
OptionParser
(
)
  
build_utils
.
AddDepfileOption
(
parser
)
  
parser
.
add_option
(
'
-
-
include
-
path
'
help
=
'
Include
path
for
gcc
.
'
)
  
parser
.
add_option
(
'
-
-
template
'
help
=
'
Path
to
template
.
'
)
  
parser
.
add_option
(
'
-
-
output
'
help
=
'
Path
for
generated
file
.
'
)
  
parser
.
add_option
(
'
-
-
defines
'
help
=
'
Pre
-
defines
macros
'
action
=
'
append
'
)
  
options
_
=
parser
.
parse_args
(
args
)
  
DoGcc
(
options
)
  
if
options
.
depfile
:
    
build_utils
.
WriteDepfile
(
options
.
depfile
options
.
output
)
if
__name__
=
=
'
__main__
'
:
  
sys
.
exit
(
main
(
sys
.
argv
[
1
:
]
)
)
