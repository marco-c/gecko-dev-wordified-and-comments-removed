#
ifndef
BUILD_BUILD_CONFIG_H_
#
define
BUILD_BUILD_CONFIG_H_
#
if
defined
(
__native_client__
)
#
define
OS_NACL
1
#
if
defined
(
__native_client_nonsfi__
)
#
define
OS_NACL_NONSFI
#
else
#
define
OS_NACL_SFI
#
endif
#
elif
defined
(
ANDROID
)
#
define
OS_ANDROID
1
#
elif
defined
(
__APPLE__
)
#
include
<
TargetConditionals
.
h
>
#
if
defined
(
TARGET_OS_IPHONE
)
&
&
TARGET_OS_IPHONE
#
define
OS_IOS
1
#
else
#
define
OS_MAC
1
#
endif
#
elif
defined
(
__linux__
)
#
if
!
defined
(
OS_CHROMEOS
)
#
define
OS_LINUX
1
#
endif
#
include
<
unistd
.
h
>
#
if
defined
(
__GLIBC__
)
&
&
!
defined
(
__UCLIBC__
)
#
define
LIBC_GLIBC
1
#
endif
#
elif
defined
(
_WIN32
)
#
define
OS_WIN
1
#
elif
defined
(
__Fuchsia__
)
#
define
OS_FUCHSIA
1
#
elif
defined
(
__FreeBSD__
)
#
define
OS_FREEBSD
1
#
elif
defined
(
__NetBSD__
)
#
define
OS_NETBSD
1
#
elif
defined
(
__OpenBSD__
)
#
define
OS_OPENBSD
1
#
elif
defined
(
__sun
)
#
define
OS_SOLARIS
1
#
elif
defined
(
__QNXNTO__
)
#
define
OS_QNX
1
#
elif
defined
(
_AIX
)
#
define
OS_AIX
1
#
elif
defined
(
__asmjs__
)
|
|
defined
(
__wasm__
)
#
define
OS_ASMJS
1
#
else
#
error
Please
add
support
for
your
platform
in
build
/
build_config
.
h
#
endif
#
if
defined
(
OS_MAC
)
|
|
defined
(
OS_IOS
)
#
define
OS_APPLE
1
#
endif
#
if
defined
(
OS_FREEBSD
)
|
|
defined
(
OS_NETBSD
)
|
|
defined
(
OS_OPENBSD
)
#
define
OS_BSD
1
#
endif
#
if
defined
(
OS_AIX
)
|
|
defined
(
OS_ANDROID
)
|
|
defined
(
OS_ASMJS
)
|
|
\
defined
(
OS_FREEBSD
)
|
|
defined
(
OS_IOS
)
|
|
defined
(
OS_LINUX
)
|
|
\
defined
(
OS_CHROMEOS
)
|
|
defined
(
OS_MAC
)
|
|
defined
(
OS_NACL
)
|
|
\
defined
(
OS_NETBSD
)
|
|
defined
(
OS_OPENBSD
)
|
|
defined
(
OS_QNX
)
|
|
\
defined
(
OS_SOLARIS
)
#
define
OS_POSIX
1
#
endif
#
if
defined
(
__GNUC__
)
#
define
COMPILER_GCC
1
#
elif
defined
(
_MSC_VER
)
#
define
COMPILER_MSVC
1
#
else
#
error
Please
add
support
for
your
compiler
in
build
/
build_config
.
h
#
endif
#
if
defined
(
_M_X64
)
|
|
defined
(
__x86_64__
)
#
define
ARCH_CPU_X86_FAMILY
1
#
define
ARCH_CPU_X86_64
1
#
define
ARCH_CPU_64_BITS
1
#
define
ARCH_CPU_LITTLE_ENDIAN
1
#
elif
defined
(
_M_IX86
)
|
|
defined
(
__i386__
)
#
define
ARCH_CPU_X86_FAMILY
1
#
define
ARCH_CPU_X86
1
#
define
ARCH_CPU_32_BITS
1
#
define
ARCH_CPU_LITTLE_ENDIAN
1
#
elif
defined
(
__s390x__
)
#
define
ARCH_CPU_S390_FAMILY
1
#
define
ARCH_CPU_S390X
1
#
define
ARCH_CPU_64_BITS
1
#
define
ARCH_CPU_BIG_ENDIAN
1
#
elif
defined
(
__s390__
)
#
define
ARCH_CPU_S390_FAMILY
1
#
define
ARCH_CPU_S390
1
#
define
ARCH_CPU_31_BITS
1
#
define
ARCH_CPU_BIG_ENDIAN
1
#
elif
(
defined
(
__PPC64__
)
|
|
defined
(
__PPC__
)
)
&
&
defined
(
__BIG_ENDIAN__
)
#
define
ARCH_CPU_PPC64_FAMILY
1
#
define
ARCH_CPU_PPC64
1
#
define
ARCH_CPU_64_BITS
1
#
define
ARCH_CPU_BIG_ENDIAN
1
#
elif
defined
(
__PPC64__
)
#
define
ARCH_CPU_PPC64_FAMILY
1
#
define
ARCH_CPU_PPC64
1
#
define
ARCH_CPU_64_BITS
1
#
define
ARCH_CPU_LITTLE_ENDIAN
1
#
elif
defined
(
__ARMEL__
)
#
define
ARCH_CPU_ARM_FAMILY
1
#
define
ARCH_CPU_ARMEL
1
#
define
ARCH_CPU_32_BITS
1
#
define
ARCH_CPU_LITTLE_ENDIAN
1
#
elif
defined
(
__aarch64__
)
|
|
defined
(
_M_ARM64
)
#
define
ARCH_CPU_ARM_FAMILY
1
#
define
ARCH_CPU_ARM64
1
#
define
ARCH_CPU_64_BITS
1
#
define
ARCH_CPU_LITTLE_ENDIAN
1
#
elif
defined
(
__pnacl__
)
|
|
defined
(
__asmjs__
)
|
|
defined
(
__wasm__
)
#
define
ARCH_CPU_32_BITS
1
#
define
ARCH_CPU_LITTLE_ENDIAN
1
#
elif
defined
(
__MIPSEL__
)
#
if
defined
(
__LP64__
)
#
define
ARCH_CPU_MIPS_FAMILY
1
#
define
ARCH_CPU_MIPS64EL
1
#
define
ARCH_CPU_64_BITS
1
#
define
ARCH_CPU_LITTLE_ENDIAN
1
#
else
#
define
ARCH_CPU_MIPS_FAMILY
1
#
define
ARCH_CPU_MIPSEL
1
#
define
ARCH_CPU_32_BITS
1
#
define
ARCH_CPU_LITTLE_ENDIAN
1
#
endif
#
elif
defined
(
__MIPSEB__
)
#
if
defined
(
__LP64__
)
#
define
ARCH_CPU_MIPS_FAMILY
1
#
define
ARCH_CPU_MIPS64
1
#
define
ARCH_CPU_64_BITS
1
#
define
ARCH_CPU_BIG_ENDIAN
1
#
else
#
define
ARCH_CPU_MIPS_FAMILY
1
#
define
ARCH_CPU_MIPS
1
#
define
ARCH_CPU_32_BITS
1
#
define
ARCH_CPU_BIG_ENDIAN
1
#
endif
#
else
#
error
Please
add
support
for
your
architecture
in
build
/
build_config
.
h
#
endif
#
if
defined
(
OS_WIN
)
#
define
WCHAR_T_IS_UTF16
#
elif
defined
(
OS_FUCHSIA
)
#
define
WCHAR_T_IS_UTF32
#
elif
defined
(
OS_POSIX
)
&
&
defined
(
COMPILER_GCC
)
&
&
defined
(
__WCHAR_MAX__
)
&
&
\
(
__WCHAR_MAX__
=
=
0x7fffffff
|
|
__WCHAR_MAX__
=
=
0xffffffff
)
#
define
WCHAR_T_IS_UTF32
#
elif
defined
(
OS_POSIX
)
&
&
defined
(
COMPILER_GCC
)
&
&
defined
(
__WCHAR_MAX__
)
&
&
\
(
__WCHAR_MAX__
=
=
0x7fff
|
|
__WCHAR_MAX__
=
=
0xffff
)
#
define
WCHAR_T_IS_UTF16
#
else
#
error
Please
add
support
for
your
compiler
in
build
/
build_config
.
h
#
endif
#
if
defined
(
OS_ANDROID
)
#
define
STD_STRING_ITERATOR_IS_CHAR_POINTER
#
define
BASE_STRING16_ITERATOR_IS_CHAR16_POINTER
#
endif
#
endif
