#
ifndef
MEDIA_ENGINE_MULTIPLEX_CODEC_FACTORY_H_
#
define
MEDIA_ENGINE_MULTIPLEX_CODEC_FACTORY_H_
#
include
<
memory
>
#
include
<
vector
>
#
include
"
api
/
environment
/
environment
.
h
"
#
include
"
api
/
video_codecs
/
sdp_video_format
.
h
"
#
include
"
api
/
video_codecs
/
video_decoder
.
h
"
#
include
"
api
/
video_codecs
/
video_decoder_factory
.
h
"
#
include
"
api
/
video_codecs
/
video_encoder
.
h
"
#
include
"
api
/
video_codecs
/
video_encoder_factory
.
h
"
#
include
"
rtc_base
/
system
/
rtc_export
.
h
"
namespace
webrtc
{
class
RTC_EXPORT
MultiplexEncoderFactory
:
public
VideoEncoderFactory
{
public
:
MultiplexEncoderFactory
(
std
:
:
unique_ptr
<
VideoEncoderFactory
>
factory
bool
supports_augmenting_data
=
false
)
;
std
:
:
vector
<
SdpVideoFormat
>
GetSupportedFormats
(
)
const
override
;
std
:
:
unique_ptr
<
VideoEncoder
>
CreateVideoEncoder
(
const
SdpVideoFormat
&
format
)
override
;
private
:
std
:
:
unique_ptr
<
VideoEncoderFactory
>
factory_
;
const
bool
supports_augmenting_data_
;
}
;
class
RTC_EXPORT
MultiplexDecoderFactory
:
public
VideoDecoderFactory
{
public
:
MultiplexDecoderFactory
(
std
:
:
unique_ptr
<
VideoDecoderFactory
>
factory
bool
supports_augmenting_data
=
false
)
;
std
:
:
vector
<
SdpVideoFormat
>
GetSupportedFormats
(
)
const
override
;
std
:
:
unique_ptr
<
VideoDecoder
>
Create
(
const
Environment
&
env
const
SdpVideoFormat
&
format
)
override
;
private
:
std
:
:
unique_ptr
<
VideoDecoderFactory
>
factory_
;
const
bool
supports_augmenting_data_
;
}
;
}
#
endif
