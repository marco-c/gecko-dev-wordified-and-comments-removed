#
ifndef
MEDIA_ENGINE_UNHANDLED_PACKETS_BUFFER_H_
#
define
MEDIA_ENGINE_UNHANDLED_PACKETS_BUFFER_H_
#
include
<
stdint
.
h
>
#
include
<
functional
>
#
include
<
tuple
>
#
include
<
utility
>
#
include
<
vector
>
#
include
"
rtc_base
/
copy_on_write_buffer
.
h
"
namespace
cricket
{
class
UnhandledPacketsBuffer
{
public
:
static
constexpr
size_t
kMaxStashedPackets
=
50
;
UnhandledPacketsBuffer
(
)
;
~
UnhandledPacketsBuffer
(
)
;
void
AddPacket
(
uint32_t
ssrc
int64_t
packet_time_us
rtc
:
:
CopyOnWriteBuffer
packet
)
;
void
BackfillPackets
(
rtc
:
:
ArrayView
<
const
uint32_t
>
ssrcs
std
:
:
function
<
void
(
uint32_t
int64_t
rtc
:
:
CopyOnWriteBuffer
)
>
consumer
)
;
private
:
size_t
insert_pos_
=
0
;
struct
PacketWithMetadata
{
uint32_t
ssrc
;
int64_t
packet_time_us
;
rtc
:
:
CopyOnWriteBuffer
packet
;
}
;
std
:
:
vector
<
PacketWithMetadata
>
buffer_
;
}
;
}
#
endif
