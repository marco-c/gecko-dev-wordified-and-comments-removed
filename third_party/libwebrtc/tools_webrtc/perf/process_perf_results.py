"
"
"
Adds
build
info
to
perf
results
and
uploads
them
.
The
tests
don
'
t
know
which
bot
executed
the
tests
or
at
what
revision
so
we
need
to
take
their
output
and
enrich
it
with
this
information
.
We
load
the
proto
from
the
tests
add
the
build
information
as
shared
diagnostics
and
then
upload
it
to
the
dashboard
.
This
script
can
'
t
be
in
recipes
because
we
can
'
t
access
the
catapult
APIs
from
there
.
It
needs
to
be
here
source
-
side
.
"
"
"
import
argparse
import
json
import
os
import
sys
from
pathlib
import
Path
import
google
.
protobuf
def
_ConfigurePythonPath
(
outdir
)
:
  
script_dir
=
os
.
path
.
dirname
(
os
.
path
.
realpath
(
__file__
)
)
  
checkout_root
=
os
.
path
.
abspath
(
os
.
path
.
join
(
script_dir
os
.
pardir
                                               
os
.
pardir
)
)
  
sys
.
path
.
insert
(
      
0
os
.
path
.
join
(
checkout_root
'
third_party
'
'
catapult
'
'
tracing
'
)
)
  
sys
.
path
.
insert
(
      
0
os
.
path
.
join
(
checkout_root
'
third_party
'
'
protobuf
'
'
python
'
)
)
  
histogram_proto_path
=
os
.
path
.
join
(
outdir
'
pyproto
'
'
tracing
'
'
tracing
'
                                      
'
proto
'
)
  
sys
.
path
.
insert
(
0
histogram_proto_path
)
  
from
tracing
.
proto
import
histogram_proto
  
if
not
histogram_proto
.
HAS_PROTO
:
    
print
(
'
Could
not
find
histogram_pb2
.
You
need
to
build
the
'
          
'
webrtc_dashboard_upload
target
before
invoking
this
'
          
'
script
.
Expected
to
find
'
          
'
histogram_pb2
.
py
in
%
s
.
'
%
histogram_proto_path
)
    
return
1
  
return
0
def
_UploadToDasboard
(
args
)
:
  
build_properties
=
json
.
loads
(
args
.
build_properties
)
  
exit_code
=
_ConfigurePythonPath
(
build_properties
[
'
outdir
'
]
)
  
if
exit_code
!
=
0
:
    
return
exit_code
  
import
catapult_uploader
  
perftest_outputs
=
[
      
f
.
absolute
(
)
for
f
in
Path
(
args
.
task_output_dir
)
.
rglob
(
'
perftest
-
output
*
'
)
      
if
f
.
is_file
(
)
  
]
  
for
perftest_output
in
perftest_outputs
:
    
uploader_options
=
catapult_uploader
.
UploaderOptions
(
        
perf_dashboard_machine_group
=
(
            
build_properties
[
'
perf_dashboard_machine_group
'
]
)
        
bot
=
build_properties
[
'
bot
'
]
        
webrtc_git_hash
=
build_properties
[
'
webrtc_git_hash
'
]
        
commit_position
=
build_properties
[
'
commit_position
'
]
        
build_page_url
=
build_properties
[
'
build_page_url
'
]
        
dashboard_url
=
build_properties
[
'
dashboard_url
'
]
        
test_suite
=
args
.
test_suite
        
input_results_file
=
perftest_output
    
)
    
exit_code
=
catapult_uploader
.
UploadToDashboard
(
uploader_options
)
    
if
exit_code
!
=
0
:
      
return
exit_code
  
return
0
def
main
(
)
:
  
parser
=
argparse
.
ArgumentParser
(
)
  
parser
.
add_argument
(
'
-
-
build
-
properties
'
help
=
argparse
.
SUPPRESS
)
  
parser
.
add_argument
(
'
-
-
summary
-
json
'
help
=
argparse
.
SUPPRESS
)
  
parser
.
add_argument
(
'
-
-
task
-
output
-
dir
'
help
=
argparse
.
SUPPRESS
)
  
parser
.
add_argument
(
'
-
-
test
-
suite
'
help
=
argparse
.
SUPPRESS
)
  
parser
.
add_argument
(
'
-
o
'
'
-
-
output
-
json
'
help
=
argparse
.
SUPPRESS
)
  
parser
.
add_argument
(
'
json_files
'
nargs
=
'
*
'
help
=
argparse
.
SUPPRESS
)
  
args
=
parser
.
parse_args
(
)
  
exit_code
=
_UploadToDasboard
(
args
)
  
if
exit_code
!
=
0
:
    
with
open
(
args
.
output_json
'
w
'
)
as
f
:
      
json
.
dump
(
{
          
"
global_tags
"
:
[
"
UNRELIABLE_RESULTS
"
]
          
"
missing_shards
"
:
[
0
]
      
}
f
)
    
return
exit_code
  
return
0
if
__name__
=
=
'
__main__
'
:
  
sys
.
exit
(
main
(
)
)
