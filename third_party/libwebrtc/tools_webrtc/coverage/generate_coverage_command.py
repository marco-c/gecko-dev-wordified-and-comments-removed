"
"
"
Generates
a
command
-
line
for
coverage
.
py
.
Useful
for
manual
coverage
runs
.
Before
running
the
generated
command
line
do
this
:
gn
gen
out
/
coverage
-
-
args
=
'
use_clang_coverage
=
true
is_component_build
=
false
'
"
"
"
import
sys
TESTS
=
[
  
'
video_capture_tests
'
  
'
webrtc_nonparallel_tests
'
  
'
video_engine_tests
'
  
'
tools_unittests
'
  
'
test_support_unittests
'
  
'
slow_tests
'
  
'
system_wrappers_unittests
'
  
'
rtc_unittests
'
  
'
rtc_stats_unittests
'
  
'
rtc_pc_unittests
'
  
'
rtc_media_unittests
'
  
'
peerconnection_unittests
'
  
'
modules_unittests
'
  
'
modules_tests
'
  
'
low_bandwidth_audio_test
'
  
'
common_video_unittests
'
  
'
common_audio_unittests
'
  
'
audio_decoder_unittests
'
]
def
main
(
)
:
  
cmd
=
(
[
sys
.
executable
'
tools
/
code_coverage
/
coverage
.
py
'
]
+
TESTS
+
         
[
'
-
b
out
/
coverage
'
'
-
o
out
/
report
'
]
+
         
[
'
-
i
=
\
'
.
*
/
out
/
.
*
|
.
*
/
third_party
/
.
*
|
.
*
test
.
*
\
'
'
]
+
         
[
'
-
c
\
'
out
/
coverage
/
%
s
\
'
'
%
t
for
t
in
TESTS
]
)
  
def
WithXvfb
(
binary
)
:
    
return
'
-
c
\
'
%
s
testing
/
xvfb
.
py
%
s
\
'
'
%
(
sys
.
executable
binary
)
  
modules_unittests
=
'
out
/
coverage
/
modules_unittests
'
  
cmd
[
cmd
.
index
(
'
-
c
\
'
%
s
\
'
'
%
modules_unittests
)
]
=
WithXvfb
(
modules_unittests
)
  
print
'
'
.
join
(
cmd
)
  
return
0
if
__name__
=
=
'
__main__
'
:
  
sys
.
exit
(
main
(
)
)
