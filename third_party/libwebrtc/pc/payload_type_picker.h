#
ifndef
PC_PAYLOAD_TYPE_PICKER_H_
#
define
PC_PAYLOAD_TYPE_PICKER_H_
#
include
<
map
>
#
include
<
set
>
#
include
<
utility
>
#
include
<
vector
>
#
include
"
api
/
rtc_error
.
h
"
#
include
"
media
/
base
/
codec
.
h
"
#
include
"
rtc_base
/
strong_alias
.
h
"
namespace
webrtc
{
class
PayloadType
:
public
StrongAlias
<
class
PayloadTypeTag
uint8_t
>
{
public
:
PayloadType
(
uint8_t
pt
)
{
value_
=
pt
;
}
constexpr
operator
uint8_t
(
)
const
&
{
return
value_
;
}
}
;
class
PayloadTypeRecorder
;
class
PayloadTypePicker
{
public
:
PayloadTypePicker
(
)
;
PayloadTypePicker
(
const
PayloadTypePicker
&
)
=
delete
;
PayloadTypePicker
&
operator
=
(
const
PayloadTypePicker
&
)
=
delete
;
PayloadTypePicker
(
PayloadTypePicker
&
&
)
=
delete
;
PayloadTypePicker
&
operator
=
(
PayloadTypePicker
&
&
)
=
delete
;
RTCErrorOr
<
PayloadType
>
SuggestMapping
(
cricket
:
:
Codec
codec
const
PayloadTypeRecorder
*
excluder
)
;
RTCError
AddMapping
(
PayloadType
payload_type
cricket
:
:
Codec
codec
)
;
private
:
class
MapEntry
{
public
:
MapEntry
(
PayloadType
payload_type
cricket
:
:
Codec
codec
)
:
payload_type_
(
payload_type
)
codec_
(
codec
)
{
}
PayloadType
payload_type
(
)
const
{
return
payload_type_
;
}
cricket
:
:
Codec
codec
(
)
const
{
return
codec_
;
}
private
:
PayloadType
payload_type_
;
cricket
:
:
Codec
codec_
;
}
;
std
:
:
vector
<
MapEntry
>
entries_
;
std
:
:
set
<
PayloadType
>
seen_payload_types_
;
}
;
class
PayloadTypeRecorder
{
public
:
explicit
PayloadTypeRecorder
(
PayloadTypePicker
&
suggester
)
:
suggester_
(
suggester
)
{
}
RTCError
AddMapping
(
PayloadType
payload_type
cricket
:
:
Codec
codec
)
;
std
:
:
vector
<
std
:
:
pair
<
PayloadType
cricket
:
:
Codec
>
>
GetMappings
(
)
const
;
RTCErrorOr
<
PayloadType
>
LookupPayloadType
(
cricket
:
:
Codec
codec
)
const
;
RTCErrorOr
<
cricket
:
:
Codec
>
LookupCodec
(
PayloadType
payload_type
)
const
;
void
Commit
(
)
;
void
Rollback
(
)
;
private
:
PayloadTypePicker
&
suggester_
;
std
:
:
map
<
PayloadType
cricket
:
:
Codec
>
payload_type_to_codec_
;
std
:
:
map
<
PayloadType
cricket
:
:
Codec
>
checkpoint_payload_type_to_codec_
;
}
;
}
#
endif
