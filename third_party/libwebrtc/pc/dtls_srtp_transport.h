#
ifndef
PC_DTLS_SRTP_TRANSPORT_H_
#
define
PC_DTLS_SRTP_TRANSPORT_H_
#
include
<
functional
>
#
include
<
optional
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
dtls_transport_interface
.
h
"
#
include
"
api
/
rtc_error
.
h
"
#
include
"
p2p
/
base
/
dtls_transport_internal
.
h
"
#
include
"
p2p
/
base
/
packet_transport_internal
.
h
"
#
include
"
pc
/
srtp_transport
.
h
"
#
include
"
rtc_base
/
buffer
.
h
"
namespace
webrtc
{
class
DtlsSrtpTransport
:
public
SrtpTransport
{
public
:
DtlsSrtpTransport
(
bool
rtcp_mux_enabled
const
FieldTrialsView
&
field_trials
)
;
void
SetDtlsTransports
(
cricket
:
:
DtlsTransportInternal
*
rtp_dtls_transport
cricket
:
:
DtlsTransportInternal
*
rtcp_dtls_transport
)
;
void
SetRtcpMuxEnabled
(
bool
enable
)
override
;
void
UpdateSendEncryptedHeaderExtensionIds
(
const
std
:
:
vector
<
int
>
&
send_extension_ids
)
;
void
UpdateRecvEncryptedHeaderExtensionIds
(
const
std
:
:
vector
<
int
>
&
recv_extension_ids
)
;
void
SetOnDtlsStateChange
(
std
:
:
function
<
void
(
void
)
>
callback
)
;
void
SetActiveResetSrtpParams
(
bool
active_reset_srtp_params
)
{
active_reset_srtp_params_
=
active_reset_srtp_params
;
}
private
:
bool
IsDtlsActive
(
)
;
bool
IsDtlsConnected
(
)
;
bool
IsDtlsWritable
(
)
;
bool
DtlsHandshakeCompleted
(
)
;
void
MaybeSetupDtlsSrtp
(
)
;
void
SetupRtpDtlsSrtp
(
)
;
void
SetupRtcpDtlsSrtp
(
)
;
bool
ExtractParams
(
cricket
:
:
DtlsTransportInternal
*
dtls_transport
int
*
selected_crypto_suite
rtc
:
:
ZeroOnFreeBuffer
<
uint8_t
>
*
send_key
rtc
:
:
ZeroOnFreeBuffer
<
uint8_t
>
*
recv_key
)
;
void
SetDtlsTransport
(
cricket
:
:
DtlsTransportInternal
*
new_dtls_transport
cricket
:
:
DtlsTransportInternal
*
*
old_dtls_transport
)
;
void
SetRtpDtlsTransport
(
cricket
:
:
DtlsTransportInternal
*
rtp_dtls_transport
)
;
void
SetRtcpDtlsTransport
(
cricket
:
:
DtlsTransportInternal
*
rtcp_dtls_transport
)
;
void
OnDtlsState
(
cricket
:
:
DtlsTransportInternal
*
dtls_transport
DtlsTransportState
state
)
;
void
OnWritableState
(
rtc
:
:
PacketTransportInternal
*
packet_transport
)
override
;
cricket
:
:
DtlsTransportInternal
*
rtp_dtls_transport_
=
nullptr
;
cricket
:
:
DtlsTransportInternal
*
rtcp_dtls_transport_
=
nullptr
;
std
:
:
optional
<
std
:
:
vector
<
int
>
>
send_extension_ids_
;
std
:
:
optional
<
std
:
:
vector
<
int
>
>
recv_extension_ids_
;
bool
active_reset_srtp_params_
=
false
;
std
:
:
function
<
void
(
void
)
>
on_dtls_state_change_
;
}
;
}
#
endif
