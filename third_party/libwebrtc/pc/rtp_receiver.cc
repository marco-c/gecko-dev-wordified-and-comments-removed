#
include
"
pc
/
rtp_receiver
.
h
"
#
include
<
stddef
.
h
>
#
include
<
atomic
>
#
include
<
string
>
#
include
<
utility
>
#
include
<
vector
>
#
include
"
api
/
media_stream_interface
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
pc
/
media_stream
.
h
"
#
include
"
pc
/
media_stream_proxy
.
h
"
#
include
"
rtc_base
/
thread
.
h
"
namespace
webrtc
{
int
RtpReceiverInternal
:
:
GenerateUniqueId
(
)
{
static
std
:
:
atomic
<
int
>
g_unique_id
{
0
}
;
return
+
+
g_unique_id
;
}
std
:
:
vector
<
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
>
RtpReceiverInternal
:
:
CreateStreamsFromIds
(
std
:
:
vector
<
std
:
:
string
>
stream_ids
)
{
std
:
:
vector
<
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
>
streams
(
stream_ids
.
size
(
)
)
;
for
(
size_t
i
=
0
;
i
<
stream_ids
.
size
(
)
;
+
+
i
)
{
streams
[
i
]
=
MediaStreamProxy
:
:
Create
(
Thread
:
:
Current
(
)
MediaStream
:
:
Create
(
std
:
:
move
(
stream_ids
[
i
]
)
)
)
;
}
return
streams
;
}
}
