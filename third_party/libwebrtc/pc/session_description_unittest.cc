#
include
"
pc
/
session_description
.
h
"
#
include
<
memory
>
#
include
<
utility
>
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
TEST
(
MediaContentDescriptionTest
ExtmapAllowMixedDefaultValue
)
{
VideoContentDescription
video_desc
;
EXPECT_EQ
(
MediaContentDescription
:
:
kMedia
video_desc
.
extmap_allow_mixed_enum
(
)
)
;
}
TEST
(
MediaContentDescriptionTest
SetExtmapAllowMixed
)
{
VideoContentDescription
video_desc
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kNo
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kNo
video_desc
.
extmap_allow_mixed_enum
(
)
)
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kMedia
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kMedia
video_desc
.
extmap_allow_mixed_enum
(
)
)
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kSession
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kSession
video_desc
.
extmap_allow_mixed_enum
(
)
)
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kMedia
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kSession
video_desc
.
extmap_allow_mixed_enum
(
)
)
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kNo
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kNo
video_desc
.
extmap_allow_mixed_enum
(
)
)
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kMedia
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kMedia
video_desc
.
extmap_allow_mixed_enum
(
)
)
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kNo
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kNo
video_desc
.
extmap_allow_mixed_enum
(
)
)
;
}
TEST
(
MediaContentDescriptionTest
MixedOneTwoByteHeaderSupported
)
{
VideoContentDescription
video_desc
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kNo
)
;
EXPECT_FALSE
(
video_desc
.
extmap_allow_mixed
(
)
)
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kMedia
)
;
EXPECT_TRUE
(
video_desc
.
extmap_allow_mixed
(
)
)
;
video_desc
.
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kSession
)
;
EXPECT_TRUE
(
video_desc
.
extmap_allow_mixed
(
)
)
;
}
TEST
(
SessionDescriptionTest
SetExtmapAllowMixed
)
{
SessionDescription
session_desc
;
session_desc
.
set_extmap_allow_mixed
(
true
)
;
EXPECT_TRUE
(
session_desc
.
extmap_allow_mixed
(
)
)
;
session_desc
.
set_extmap_allow_mixed
(
false
)
;
EXPECT_FALSE
(
session_desc
.
extmap_allow_mixed
(
)
)
;
}
TEST
(
SessionDescriptionTest
SetExtmapAllowMixedPropagatesToMediaLevel
)
{
SessionDescription
session_desc
;
session_desc
.
AddContent
(
"
video
"
MediaProtocolType
:
:
kRtp
std
:
:
make_unique
<
VideoContentDescription
>
(
)
)
;
MediaContentDescription
*
video_desc
=
session_desc
.
GetContentDescriptionByName
(
"
video
"
)
;
session_desc
.
set_extmap_allow_mixed
(
true
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kSession
video_desc
-
>
extmap_allow_mixed_enum
(
)
)
;
video_desc
-
>
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kMedia
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kSession
video_desc
-
>
extmap_allow_mixed_enum
(
)
)
;
session_desc
.
set_extmap_allow_mixed
(
false
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kNo
video_desc
-
>
extmap_allow_mixed_enum
(
)
)
;
video_desc
-
>
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kMedia
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kMedia
video_desc
-
>
extmap_allow_mixed_enum
(
)
)
;
session_desc
.
set_extmap_allow_mixed
(
false
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kMedia
video_desc
-
>
extmap_allow_mixed_enum
(
)
)
;
session_desc
.
set_extmap_allow_mixed
(
true
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kSession
video_desc
-
>
extmap_allow_mixed_enum
(
)
)
;
}
TEST
(
SessionDescriptionTest
AddContentTransfersExtmapAllowMixedSetting
)
{
SessionDescription
session_desc
;
session_desc
.
set_extmap_allow_mixed
(
false
)
;
std
:
:
unique_ptr
<
MediaContentDescription
>
audio_desc
=
std
:
:
make_unique
<
AudioContentDescription
>
(
)
;
audio_desc
-
>
set_extmap_allow_mixed_enum
(
MediaContentDescription
:
:
kMedia
)
;
session_desc
.
AddContent
(
"
audio
"
MediaProtocolType
:
:
kRtp
std
:
:
move
(
audio_desc
)
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kMedia
session_desc
.
GetContentDescriptionByName
(
"
audio
"
)
-
>
extmap_allow_mixed_enum
(
)
)
;
session_desc
.
set_extmap_allow_mixed
(
true
)
;
std
:
:
unique_ptr
<
MediaContentDescription
>
video_desc
=
std
:
:
make_unique
<
VideoContentDescription
>
(
)
;
session_desc
.
AddContent
(
"
video
"
MediaProtocolType
:
:
kRtp
std
:
:
move
(
video_desc
)
)
;
EXPECT_EQ
(
MediaContentDescription
:
:
kSession
session_desc
.
GetContentDescriptionByName
(
"
video
"
)
-
>
extmap_allow_mixed_enum
(
)
)
;
}
}
