#
ifndef
PC_RTP_RECEIVER_PROXY_H_
#
define
PC_RTP_RECEIVER_PROXY_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
rtp_receiver_interface
.
h
"
#
include
"
pc
/
proxy
.
h
"
namespace
webrtc
{
BEGIN_PROXY_MAP
(
RtpReceiver
)
PROXY_PRIMARY_THREAD_DESTRUCTOR
(
)
BYPASS_PROXY_CONSTMETHOD0
(
rtc
:
:
scoped_refptr
<
MediaStreamTrackInterface
>
track
)
PROXY_CONSTMETHOD0
(
rtc
:
:
scoped_refptr
<
DtlsTransportInterface
>
dtls_transport
)
PROXY_CONSTMETHOD0
(
std
:
:
vector
<
std
:
:
string
>
stream_ids
)
PROXY_CONSTMETHOD0
(
std
:
:
vector
<
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
>
streams
)
BYPASS_PROXY_CONSTMETHOD0
(
cricket
:
:
MediaType
media_type
)
BYPASS_PROXY_CONSTMETHOD0
(
std
:
:
string
id
)
PROXY_SECONDARY_CONSTMETHOD0
(
RtpParameters
GetParameters
)
PROXY_METHOD1
(
void
SetObserver
RtpReceiverObserverInterface
*
)
PROXY_SECONDARY_METHOD1
(
void
SetJitterBufferMinimumDelay
absl
:
:
optional
<
double
>
)
PROXY_SECONDARY_CONSTMETHOD0
(
std
:
:
vector
<
RtpSource
>
GetSources
)
PROXY_SECONDARY_METHOD1
(
void
SetFrameDecryptor
rtc
:
:
scoped_refptr
<
FrameDecryptorInterface
>
)
PROXY_SECONDARY_CONSTMETHOD0
(
rtc
:
:
scoped_refptr
<
FrameDecryptorInterface
>
GetFrameDecryptor
)
PROXY_SECONDARY_METHOD1
(
void
SetFrameTransformer
rtc
:
:
scoped_refptr
<
FrameTransformerInterface
>
)
END_PROXY_MAP
(
RtpReceiver
)
}
#
endif
