#
ifndef
PC_TRANSCEIVER_LIST_H_
#
define
PC_TRANSCEIVER_LIST_H_
#
include
<
stddef
.
h
>
#
include
<
algorithm
>
#
include
<
map
>
#
include
<
optional
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
media_types
.
h
"
#
include
"
api
/
rtc_error
.
h
"
#
include
"
api
/
rtp_parameters
.
h
"
#
include
"
api
/
rtp_sender_interface
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
api
/
sequence_checker
.
h
"
#
include
"
pc
/
rtp_transceiver
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
rtc_base
/
system
/
no_unique_address
.
h
"
#
include
"
rtc_base
/
thread_annotations
.
h
"
namespace
webrtc
{
typedef
scoped_refptr
<
RtpTransceiverProxyWithInternal
<
RtpTransceiver
>
>
RtpTransceiverProxyRefPtr
;
class
TransceiverStableState
{
public
:
TransceiverStableState
(
)
{
}
void
set_newly_created
(
)
;
void
SetMSectionIfUnset
(
std
:
:
optional
<
std
:
:
string
>
mid
std
:
:
optional
<
size_t
>
mline_index
)
;
void
SetRemoteStreamIds
(
const
std
:
:
vector
<
std
:
:
string
>
&
ids
)
;
void
SetInitSendEncodings
(
const
std
:
:
vector
<
RtpEncodingParameters
>
&
encodings
)
;
void
SetFiredDirection
(
std
:
:
optional
<
RtpTransceiverDirection
>
fired_direction
)
{
fired_direction_
=
fired_direction
;
}
std
:
:
optional
<
std
:
:
string
>
mid
(
)
const
{
return
mid_
;
}
std
:
:
optional
<
size_t
>
mline_index
(
)
const
{
return
mline_index_
;
}
std
:
:
optional
<
std
:
:
vector
<
std
:
:
string
>
>
remote_stream_ids
(
)
const
{
return
remote_stream_ids_
;
}
std
:
:
optional
<
std
:
:
vector
<
RtpEncodingParameters
>
>
init_send_encodings
(
)
const
{
return
init_send_encodings_
;
}
bool
has_m_section
(
)
const
{
return
has_m_section_
;
}
bool
newly_created
(
)
const
{
return
newly_created_
;
}
bool
did_set_fired_direction
(
)
const
{
return
fired_direction_
.
has_value
(
)
;
}
std
:
:
optional
<
RtpTransceiverDirection
>
fired_direction
(
)
const
{
RTC_DCHECK
(
did_set_fired_direction
(
)
)
;
return
fired_direction_
.
value
(
)
;
}
private
:
std
:
:
optional
<
std
:
:
string
>
mid_
;
std
:
:
optional
<
size_t
>
mline_index_
;
std
:
:
optional
<
std
:
:
vector
<
std
:
:
string
>
>
remote_stream_ids_
;
std
:
:
optional
<
std
:
:
vector
<
RtpEncodingParameters
>
>
init_send_encodings_
;
bool
has_m_section_
=
false
;
bool
newly_created_
=
false
;
std
:
:
optional
<
std
:
:
optional
<
RtpTransceiverDirection
>
>
fired_direction_
;
}
;
class
TransceiverList
{
public
:
std
:
:
vector
<
RtpTransceiverProxyRefPtr
>
List
(
)
const
{
RTC_DCHECK_RUN_ON
(
&
sequence_checker_
)
;
return
transceivers_
;
}
std
:
:
vector
<
RtpTransceiverProxyRefPtr
>
UnsafeList
(
)
const
{
return
transceivers_
;
}
std
:
:
vector
<
RtpTransceiver
*
>
ListInternal
(
)
const
;
void
Add
(
RtpTransceiverProxyRefPtr
transceiver
)
{
RTC_DCHECK_RUN_ON
(
&
sequence_checker_
)
;
transceivers_
.
push_back
(
transceiver
)
;
}
void
Remove
(
RtpTransceiverProxyRefPtr
transceiver
)
{
RTC_DCHECK_RUN_ON
(
&
sequence_checker_
)
;
transceivers_
.
erase
(
std
:
:
remove
(
transceivers_
.
begin
(
)
transceivers_
.
end
(
)
transceiver
)
transceivers_
.
end
(
)
)
;
}
RtpTransceiverProxyRefPtr
FindBySender
(
scoped_refptr
<
RtpSenderInterface
>
sender
)
const
;
RtpTransceiverProxyRefPtr
FindByMid
(
const
std
:
:
string
&
mid
)
const
;
RtpTransceiverProxyRefPtr
FindByMLineIndex
(
size_t
mline_index
)
const
;
TransceiverStableState
*
StableState
(
RtpTransceiverProxyRefPtr
transceiver
)
{
RTC_DCHECK_RUN_ON
(
&
sequence_checker_
)
;
return
&
(
transceiver_stable_states_by_transceivers_
[
transceiver
]
)
;
}
void
DiscardStableStates
(
)
{
RTC_DCHECK_RUN_ON
(
&
sequence_checker_
)
;
transceiver_stable_states_by_transceivers_
.
clear
(
)
;
}
std
:
:
map
<
RtpTransceiverProxyRefPtr
TransceiverStableState
>
&
StableStates
(
)
{
RTC_DCHECK_RUN_ON
(
&
sequence_checker_
)
;
return
transceiver_stable_states_by_transceivers_
;
}
private
:
RTC_NO_UNIQUE_ADDRESS
SequenceChecker
sequence_checker_
;
std
:
:
vector
<
RtpTransceiverProxyRefPtr
>
transceivers_
;
std
:
:
map
<
RtpTransceiverProxyRefPtr
TransceiverStableState
>
transceiver_stable_states_by_transceivers_
RTC_GUARDED_BY
(
sequence_checker_
)
;
std
:
:
map
<
RtpTransceiverProxyRefPtr
std
:
:
vector
<
std
:
:
string
>
>
remote_stream_ids_by_transceivers_
RTC_GUARDED_BY
(
sequence_checker_
)
;
}
;
}
#
endif
