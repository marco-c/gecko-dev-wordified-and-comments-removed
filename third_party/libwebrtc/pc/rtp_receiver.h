#
ifndef
PC_RTP_RECEIVER_H_
#
define
PC_RTP_RECEIVER_H_
#
include
<
stdint
.
h
>
#
include
<
optional
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
dtls_transport_interface
.
h
"
#
include
"
api
/
media_stream_interface
.
h
"
#
include
"
api
/
rtp_receiver_interface
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
media
/
base
/
media_channel
.
h
"
namespace
webrtc
{
class
RtpReceiverInternal
:
public
RtpReceiverInterface
{
public
:
virtual
void
Stop
(
)
=
0
;
virtual
void
SetMediaChannel
(
MediaReceiveChannelInterface
*
media_channel
)
=
0
;
virtual
void
SetupMediaChannel
(
uint32_t
ssrc
)
=
0
;
virtual
void
SetupUnsignaledMediaChannel
(
)
=
0
;
virtual
void
set_transport
(
scoped_refptr
<
DtlsTransportInterface
>
dtls_transport
)
=
0
;
virtual
std
:
:
optional
<
uint32_t
>
ssrc
(
)
const
=
0
;
virtual
void
NotifyFirstPacketReceived
(
)
=
0
;
virtual
void
set_stream_ids
(
std
:
:
vector
<
std
:
:
string
>
stream_ids
)
=
0
;
virtual
void
SetStreams
(
const
std
:
:
vector
<
scoped_refptr
<
MediaStreamInterface
>
>
&
streams
)
=
0
;
virtual
int
AttachmentId
(
)
const
=
0
;
protected
:
static
int
GenerateUniqueId
(
)
;
static
std
:
:
vector
<
scoped_refptr
<
MediaStreamInterface
>
>
CreateStreamsFromIds
(
std
:
:
vector
<
std
:
:
string
>
stream_ids
)
;
}
;
}
#
endif
