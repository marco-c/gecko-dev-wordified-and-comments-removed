#
include
"
pc
/
usage_pattern
.
h
"
#
include
"
api
/
peer_connection_interface
.
h
"
#
include
"
rtc_base
/
logging
.
h
"
#
include
"
system_wrappers
/
include
/
metrics
.
h
"
namespace
webrtc
{
void
UsagePattern
:
:
NoteUsageEvent
(
UsageEvent
event
)
{
usage_event_accumulator_
|
=
static_cast
<
int
>
(
event
)
;
}
void
UsagePattern
:
:
ReportUsagePattern
(
PeerConnectionObserver
*
observer
)
const
{
RTC_DLOG
(
LS_INFO
)
<
<
"
Usage
signature
is
"
<
<
usage_event_accumulator_
;
RTC_HISTOGRAM_ENUMERATION_SPARSE
(
"
WebRTC
.
PeerConnection
.
UsagePattern
"
usage_event_accumulator_
static_cast
<
int
>
(
UsageEvent
:
:
MAX_VALUE
)
)
;
if
(
observer
)
{
observer
-
>
OnInterestingUsage
(
usage_event_accumulator_
)
;
}
else
{
RTC_LOG
(
LS_INFO
)
<
<
"
Interesting
usage
signature
"
<
<
usage_event_accumulator_
<
<
"
observed
after
observer
shutdown
"
;
}
}
}
