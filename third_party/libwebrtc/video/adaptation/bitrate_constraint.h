#
ifndef
VIDEO_ADAPTATION_BITRATE_CONSTRAINT_H_
#
define
VIDEO_ADAPTATION_BITRATE_CONSTRAINT_H_
#
include
<
string
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
sequence_checker
.
h
"
#
include
"
call
/
adaptation
/
adaptation_constraint
.
h
"
#
include
"
call
/
adaptation
/
encoder_settings
.
h
"
#
include
"
call
/
adaptation
/
video_source_restrictions
.
h
"
#
include
"
call
/
adaptation
/
video_stream_input_state
.
h
"
#
include
"
rtc_base
/
system
/
no_unique_address
.
h
"
namespace
webrtc
{
class
BitrateConstraint
:
public
AdaptationConstraint
{
public
:
BitrateConstraint
(
)
;
~
BitrateConstraint
(
)
override
=
default
;
void
OnEncoderSettingsUpdated
(
absl
:
:
optional
<
EncoderSettings
>
encoder_settings
)
;
void
OnEncoderTargetBitrateUpdated
(
absl
:
:
optional
<
uint32_t
>
encoder_target_bitrate_bps
)
;
std
:
:
string
Name
(
)
const
override
{
return
"
BitrateConstraint
"
;
}
bool
IsAdaptationUpAllowed
(
const
VideoStreamInputState
&
input_state
const
VideoSourceRestrictions
&
restrictions_before
const
VideoSourceRestrictions
&
restrictions_after
)
const
override
;
private
:
RTC_NO_UNIQUE_ADDRESS
SequenceChecker
sequence_checker_
;
absl
:
:
optional
<
EncoderSettings
>
encoder_settings_
RTC_GUARDED_BY
(
&
sequence_checker_
)
;
absl
:
:
optional
<
uint32_t
>
encoder_target_bitrate_bps_
RTC_GUARDED_BY
(
&
sequence_checker_
)
;
}
;
}
#
endif
