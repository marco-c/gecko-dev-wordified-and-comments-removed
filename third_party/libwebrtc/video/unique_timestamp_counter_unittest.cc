#
include
"
video
/
unique_timestamp_counter
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
{
TEST
(
UniqueTimestampCounterTest
InitiallyZero
)
{
UniqueTimestampCounter
counter
;
EXPECT_EQ
(
counter
.
GetUniqueSeen
(
)
0
)
;
}
TEST
(
UniqueTimestampCounterTest
CountsUniqueValues
)
{
UniqueTimestampCounter
counter
;
counter
.
Add
(
100
)
;
counter
.
Add
(
100
)
;
counter
.
Add
(
200
)
;
counter
.
Add
(
150
)
;
counter
.
Add
(
100
)
;
EXPECT_EQ
(
counter
.
GetUniqueSeen
(
)
3
)
;
}
TEST
(
UniqueTimestampCounterTest
ForgetsOldValuesAfter1000NewValues
)
{
const
int
kNumValues
=
1500
;
const
int
kMaxHistory
=
1000
;
const
uint32_t
value
=
0xFFFFFFF0
;
UniqueTimestampCounter
counter
;
for
(
int
i
=
0
;
i
<
kNumValues
;
+
+
i
)
{
counter
.
Add
(
value
+
10
*
i
)
;
}
ASSERT_EQ
(
counter
.
GetUniqueSeen
(
)
kNumValues
)
;
for
(
int
i
=
kNumValues
-
kMaxHistory
;
i
<
kNumValues
;
+
+
i
)
{
counter
.
Add
(
value
+
10
*
i
)
;
}
EXPECT_EQ
(
counter
.
GetUniqueSeen
(
)
kNumValues
)
;
counter
.
Add
(
value
)
;
EXPECT_EQ
(
counter
.
GetUniqueSeen
(
)
kNumValues
+
1
)
;
}
}
}
