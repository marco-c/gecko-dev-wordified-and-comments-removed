#
ifndef
VIDEO_QUALITY_CONVERGENCE_MONITOR_H_
#
define
VIDEO_QUALITY_CONVERGENCE_MONITOR_H_
#
include
<
cstddef
>
#
include
<
deque
>
#
include
<
memory
>
#
include
"
api
/
field_trials_view
.
h
"
#
include
"
api
/
video
/
video_codec_type
.
h
"
namespace
webrtc
{
class
QualityConvergenceMonitor
{
public
:
struct
Parameters
{
int
static_qp_threshold
=
0
;
bool
dynamic_detection_enabled
=
false
;
size_t
recent_window_length
=
0
;
size_t
past_window_length
=
0
;
int
dynamic_qp_threshold
=
0
;
}
;
explicit
QualityConvergenceMonitor
(
const
Parameters
&
params
)
;
static
std
:
:
unique_ptr
<
QualityConvergenceMonitor
>
Create
(
int
static_qp_threshold
VideoCodecType
codec
const
FieldTrialsView
&
trials
)
;
void
AddSample
(
int
qp
bool
is_refresh_frame
)
;
bool
AtTargetQuality
(
)
const
;
Parameters
GetParametersForTesting
(
)
const
{
return
params_
;
}
private
:
const
Parameters
params_
;
bool
at_target_quality_
=
false
;
std
:
:
deque
<
int
>
qp_window_
;
}
;
}
#
endif
