#
ifndef
VIDEO_CALL_STATS_H_
#
define
VIDEO_CALL_STATS_H_
#
include
<
list
>
#
include
<
memory
>
#
include
"
api
/
sequence_checker
.
h
"
#
include
"
modules
/
include
/
module
.
h
"
#
include
"
modules
/
include
/
module_common_types
.
h
"
#
include
"
modules
/
rtp_rtcp
/
include
/
rtp_rtcp_defines
.
h
"
#
include
"
rtc_base
/
constructor_magic
.
h
"
#
include
"
rtc_base
/
synchronization
/
mutex
.
h
"
#
include
"
system_wrappers
/
include
/
clock
.
h
"
namespace
webrtc
{
class
CallStats
:
public
Module
public
RtcpRttStats
{
public
:
static
constexpr
int64_t
kUpdateIntervalMs
=
1000
;
CallStats
(
Clock
*
clock
ProcessThread
*
process_thread
)
;
~
CallStats
(
)
override
;
void
RegisterStatsObserver
(
CallStatsObserver
*
observer
)
;
void
DeregisterStatsObserver
(
CallStatsObserver
*
observer
)
;
int64_t
LastProcessedRtt
(
)
const
override
;
void
UpdateHistogramsForTest
(
)
{
UpdateHistograms
(
)
;
}
struct
RttTime
{
RttTime
(
int64_t
new_rtt
int64_t
rtt_time
)
:
rtt
(
new_rtt
)
time
(
rtt_time
)
{
}
const
int64_t
rtt
;
const
int64_t
time
;
}
;
private
:
void
OnRttUpdate
(
int64_t
rtt
)
override
;
int64_t
TimeUntilNextProcess
(
)
override
;
void
Process
(
)
override
;
void
ProcessThreadAttached
(
ProcessThread
*
process_thread
)
override
;
void
UpdateHistograms
(
)
;
Clock
*
const
clock_
;
int64_t
last_process_time_
RTC_GUARDED_BY
(
process_thread_checker_
)
;
int64_t
max_rtt_ms_
RTC_GUARDED_BY
(
process_thread_checker_
)
;
int64_t
avg_rtt_ms_
;
mutable
Mutex
avg_rtt_ms_lock_
;
int64_t
sum_avg_rtt_ms_
RTC_GUARDED_BY
(
process_thread_checker_
)
;
int64_t
num_avg_rtt_
RTC_GUARDED_BY
(
process_thread_checker_
)
;
int64_t
time_of_first_rtt_ms_
RTC_GUARDED_BY
(
process_thread_checker_
)
;
std
:
:
list
<
RttTime
>
reports_
RTC_GUARDED_BY
(
process_thread_checker_
)
;
std
:
:
list
<
CallStatsObserver
*
>
observers_
;
SequenceChecker
construction_thread_checker_
;
SequenceChecker
process_thread_checker_
;
ProcessThread
*
const
process_thread_
;
bool
process_thread_running_
RTC_GUARDED_BY
(
construction_thread_checker_
)
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
CallStats
)
;
}
;
}
#
endif
