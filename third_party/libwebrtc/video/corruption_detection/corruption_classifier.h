#
ifndef
VIDEO_CORRUPTION_DETECTION_CORRUPTION_CLASSIFIER_H_
#
define
VIDEO_CORRUPTION_DETECTION_CORRUPTION_CLASSIFIER_H_
#
include
<
variant
>
#
include
"
api
/
array_view
.
h
"
#
include
"
video
/
corruption_detection
/
halton_frame_sampler
.
h
"
namespace
webrtc
{
class
CorruptionClassifier
{
public
:
explicit
CorruptionClassifier
(
float
scale_factor
)
;
CorruptionClassifier
(
float
growth_rate
float
midpoint
)
;
~
CorruptionClassifier
(
)
=
default
;
double
CalculateCorruptionProbability
(
rtc
:
:
ArrayView
<
const
FilteredSample
>
filtered_original_samples
rtc
:
:
ArrayView
<
const
FilteredSample
>
filtered_compressed_samples
int
luma_threshold
int
chroma_threshold
)
const
;
double
CalculateCorruptionProbablility
(
rtc
:
:
ArrayView
<
const
FilteredSample
>
filtered_original_samples
rtc
:
:
ArrayView
<
const
FilteredSample
>
filtered_compressed_samples
int
luma_threshold
int
chroma_threshold
)
const
;
private
:
struct
ScalarConfig
{
float
scale_factor
;
}
;
struct
LogisticFunctionConfig
{
float
growth_rate
;
float
midpoint
;
}
;
double
GetScore
(
rtc
:
:
ArrayView
<
const
FilteredSample
>
filtered_original_samples
rtc
:
:
ArrayView
<
const
FilteredSample
>
filtered_compressed_samples
int
luma_threshold
int
chroma_threshold
)
const
;
const
std
:
:
variant
<
ScalarConfig
LogisticFunctionConfig
>
config_
;
}
;
}
#
endif
