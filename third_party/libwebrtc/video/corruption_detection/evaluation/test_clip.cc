#
include
"
video
/
corruption_detection
/
evaluation
/
test_clip
.
h
"
#
include
<
string
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
api
/
video_codecs
/
video_codec
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
test
/
testsupport
/
file_utils
.
h
"
#
include
"
video
/
corruption_detection
/
evaluation
/
utils
.
h
"
namespace
webrtc
{
TestClip
TestClip
:
:
CreateYuvClip
(
absl
:
:
string_view
filename
int
width
int
height
int
framerate
VideoCodecMode
codec_mode
)
{
std
:
:
string
clip_path
=
test
:
:
ResourcePath
(
filename
"
yuv
"
)
;
if
(
!
test
:
:
FileExists
(
clip_path
)
)
{
RTC_CHECK
(
test
:
:
FileExists
(
filename
)
)
<
<
"
Could
not
find
clip
"
<
<
filename
;
clip_path
=
std
:
:
string
(
filename
)
;
}
return
TestClip
(
clip_path
width
height
framerate
codec_mode
true
)
;
}
TestClip
TestClip
:
:
CreateY4mClip
(
absl
:
:
string_view
filename
VideoCodecMode
codec_mode
)
{
std
:
:
string
clip_path
=
test
:
:
ResourcePath
(
filename
"
y4m
"
)
;
if
(
!
test
:
:
FileExists
(
clip_path
)
)
{
RTC_CHECK
(
test
:
:
FileExists
(
filename
)
)
<
<
"
Could
not
find
clip
"
<
<
filename
;
clip_path
=
std
:
:
string
(
filename
)
;
}
const
Y4mMetadata
y4m_metadata
=
ReadMetadataFromY4mHeader
(
clip_path
)
;
return
TestClip
(
clip_path
y4m_metadata
.
width
y4m_metadata
.
height
y4m_metadata
.
framerate
codec_mode
false
)
;
}
}
