#
ifndef
VIDEO_RATE_UTILIZATION_TRACKER_H_
#
define
VIDEO_RATE_UTILIZATION_TRACKER_H_
#
include
<
deque
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
units
/
data_rate
.
h
"
#
include
"
api
/
units
/
data_size
.
h
"
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
api
/
units
/
timestamp
.
h
"
namespace
webrtc
{
class
RateUtilizationTracker
{
public
:
RateUtilizationTracker
(
size_t
max_num_encoded_data_points
TimeDelta
max_duration
)
;
void
OnDataRateChanged
(
DataRate
rate
Timestamp
time
)
;
void
OnDataProduced
(
DataSize
size
Timestamp
time
)
;
absl
:
:
optional
<
double
>
GetRateUtilizationFactor
(
Timestamp
time
)
const
;
private
:
struct
RateUsageUpdate
{
Timestamp
time
;
DataRate
target_rate
;
DataSize
produced_data
;
}
;
void
CullOldData
(
Timestamp
time
)
;
const
size_t
max_data_points_
;
const
TimeDelta
max_duration_
;
DataRate
current_rate_
;
std
:
:
deque
<
RateUsageUpdate
>
data_points_
;
}
;
}
#
endif
