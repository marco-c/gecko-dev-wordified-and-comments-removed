#
ifndef
VIDEO_END_TO_END_TESTS_MULTI_STREAM_TESTER_H_
#
define
VIDEO_END_TO_END_TESTS_MULTI_STREAM_TESTER_H_
#
include
<
map
>
#
include
<
memory
>
#
include
"
api
/
task_queue
/
task_queue_base
.
h
"
#
include
"
call
/
call
.
h
"
#
include
"
test
/
direct_transport
.
h
"
#
include
"
test
/
frame_generator_capturer
.
h
"
namespace
webrtc
{
class
MultiStreamTester
{
public
:
static
constexpr
size_t
kNumStreams
=
3
;
const
uint8_t
kVideoPayloadType
=
124
;
const
std
:
:
map
<
uint8_t
MediaType
>
payload_type_map_
=
{
{
kVideoPayloadType
MediaType
:
:
VIDEO
}
}
;
struct
CodecSettings
{
uint32_t
ssrc
;
int
width
;
int
height
;
}
codec_settings
[
kNumStreams
]
;
MultiStreamTester
(
)
;
virtual
~
MultiStreamTester
(
)
;
void
RunTest
(
)
;
protected
:
virtual
void
Wait
(
)
=
0
;
virtual
void
UpdateSendConfig
(
size_t
stream_index
VideoSendStream
:
:
Config
*
send_config
VideoEncoderConfig
*
encoder_config
test
:
:
FrameGeneratorCapturer
*
*
frame_generator
)
;
virtual
void
UpdateReceiveConfig
(
size_t
stream_index
VideoReceiveStream
:
:
Config
*
receive_config
)
;
virtual
std
:
:
unique_ptr
<
test
:
:
DirectTransport
>
CreateSendTransport
(
TaskQueueBase
*
task_queue
Call
*
sender_call
)
;
virtual
std
:
:
unique_ptr
<
test
:
:
DirectTransport
>
CreateReceiveTransport
(
TaskQueueBase
*
task_queue
Call
*
receiver_call
)
;
}
;
}
#
endif
