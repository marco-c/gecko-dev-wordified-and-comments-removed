#
ifndef
VIDEO_TASK_QUEUE_FRAME_DECODE_SCHEDULER_H_
#
define
VIDEO_TASK_QUEUE_FRAME_DECODE_SCHEDULER_H_
#
include
"
video
/
frame_decode_scheduler
.
h
"
namespace
webrtc
{
class
TaskQueueFrameDecodeScheduler
:
public
FrameDecodeScheduler
{
public
:
TaskQueueFrameDecodeScheduler
(
Clock
*
clock
TaskQueueBase
*
const
bookkeeping_queue
)
;
~
TaskQueueFrameDecodeScheduler
(
)
override
;
TaskQueueFrameDecodeScheduler
(
const
TaskQueueFrameDecodeScheduler
&
)
=
delete
;
TaskQueueFrameDecodeScheduler
&
operator
=
(
const
TaskQueueFrameDecodeScheduler
&
)
=
delete
;
absl
:
:
optional
<
uint32_t
>
ScheduledRtpTimestamp
(
)
override
;
void
ScheduleFrame
(
uint32_t
rtp
FrameDecodeTiming
:
:
FrameSchedule
schedule
FrameReleaseCallback
cb
)
override
;
void
CancelOutstanding
(
)
override
;
void
Stop
(
)
override
;
private
:
Clock
*
const
clock_
;
TaskQueueBase
*
const
bookkeeping_queue_
;
absl
:
:
optional
<
uint32_t
>
scheduled_rtp_
;
ScopedTaskSafetyDetached
task_safety_
;
bool
stopped_
=
false
;
}
;
}
#
endif
