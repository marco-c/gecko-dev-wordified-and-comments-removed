#
ifndef
LOGGING_RTC_EVENT_LOG_OUTPUT_RTC_EVENT_LOG_OUTPUT_FILE_H_
#
define
LOGGING_RTC_EVENT_LOG_OUTPUT_RTC_EVENT_LOG_OUTPUT_FILE_H_
#
include
<
stddef
.
h
>
#
include
<
memory
>
#
include
<
string
>
#
include
"
api
/
rtceventlogoutput
.
h
"
#
include
"
rtc_base
/
platform_file
.
h
"
namespace
webrtc
{
class
FileWrapper
;
class
RtcEventLogOutputFile
final
:
public
RtcEventLogOutput
{
public
:
static
const
size_t
kMaxReasonableFileSize
;
explicit
RtcEventLogOutputFile
(
const
std
:
:
string
&
file_name
)
;
RtcEventLogOutputFile
(
const
std
:
:
string
&
file_name
size_t
max_size_bytes
)
;
explicit
RtcEventLogOutputFile
(
rtc
:
:
PlatformFile
file
)
;
RtcEventLogOutputFile
(
rtc
:
:
PlatformFile
file
size_t
max_size_bytes
)
;
~
RtcEventLogOutputFile
(
)
override
;
bool
IsActive
(
)
const
override
;
bool
Write
(
const
std
:
:
string
&
output
)
override
;
private
:
inline
bool
IsActiveInternal
(
)
const
;
const
size_t
max_size_bytes_
;
size_t
written_bytes_
{
0
}
;
std
:
:
unique_ptr
<
FileWrapper
>
file_
;
}
;
}
#
endif
