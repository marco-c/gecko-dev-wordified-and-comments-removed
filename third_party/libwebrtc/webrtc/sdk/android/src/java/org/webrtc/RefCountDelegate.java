package
org
.
webrtc
;
import
androidx
.
annotation
.
Nullable
;
import
java
.
util
.
concurrent
.
atomic
.
AtomicInteger
;
class
RefCountDelegate
implements
RefCounted
{
private
final
AtomicInteger
refCount
=
new
AtomicInteger
(
1
)
;
private
final
Nullable
Runnable
releaseCallback
;
public
RefCountDelegate
(
Nullable
Runnable
releaseCallback
)
{
this
.
releaseCallback
=
releaseCallback
;
}
Override
public
void
retain
(
)
{
int
updated_count
=
refCount
.
incrementAndGet
(
)
;
if
(
updated_count
<
2
)
{
throw
new
IllegalStateException
(
"
retain
(
)
called
on
an
object
with
refcount
<
1
"
)
;
}
}
Override
public
void
release
(
)
{
int
updated_count
=
refCount
.
decrementAndGet
(
)
;
if
(
updated_count
<
0
)
{
throw
new
IllegalStateException
(
"
release
(
)
called
on
an
object
with
refcount
<
1
"
)
;
}
if
(
updated_count
=
=
0
&
&
releaseCallback
!
=
null
)
{
releaseCallback
.
run
(
)
;
}
}
}
