#
include
"
rtc_base
/
platform_thread
.
h
"
#
include
"
system_wrappers
/
include
/
sleep
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
rtc
{
namespace
{
bool
NullRunFunctionDeprecated
(
void
*
obj
)
{
webrtc
:
:
SleepMs
(
2
)
;
return
true
;
}
bool
TooBusyRunFunction
(
void
*
obj
)
{
return
true
;
}
void
NullRunFunction
(
void
*
obj
)
{
}
bool
SetFlagRunFunctionDeprecated
(
void
*
obj
)
{
bool
*
obj_as_bool
=
static_cast
<
bool
*
>
(
obj
)
;
*
obj_as_bool
=
true
;
webrtc
:
:
SleepMs
(
0
)
;
return
true
;
}
void
SetFlagRunFunction
(
void
*
obj
)
{
bool
*
obj_as_bool
=
static_cast
<
bool
*
>
(
obj
)
;
*
obj_as_bool
=
true
;
}
}
TEST
(
PlatformThreadTest
StartStopDeprecated
)
{
PlatformThread
thread
(
&
NullRunFunctionDeprecated
nullptr
"
PlatformThreadTest
"
)
;
EXPECT_TRUE
(
thread
.
name
(
)
=
=
"
PlatformThreadTest
"
)
;
EXPECT_TRUE
(
thread
.
GetThreadRef
(
)
=
=
0
)
;
thread
.
Start
(
)
;
EXPECT_TRUE
(
thread
.
GetThreadRef
(
)
!
=
0
)
;
thread
.
Stop
(
)
;
EXPECT_TRUE
(
thread
.
GetThreadRef
(
)
=
=
0
)
;
}
TEST
(
PlatformThreadTest
StartStop2Deprecated
)
{
PlatformThread
thread1
(
&
NullRunFunctionDeprecated
nullptr
"
PlatformThreadTest1
"
)
;
PlatformThread
thread2
(
&
NullRunFunctionDeprecated
nullptr
"
PlatformThreadTest2
"
)
;
EXPECT_TRUE
(
thread1
.
GetThreadRef
(
)
=
=
thread2
.
GetThreadRef
(
)
)
;
thread1
.
Start
(
)
;
thread2
.
Start
(
)
;
EXPECT_TRUE
(
thread1
.
GetThreadRef
(
)
!
=
thread2
.
GetThreadRef
(
)
)
;
thread2
.
Stop
(
)
;
thread1
.
Stop
(
)
;
}
TEST
(
PlatformThreadTest
RunFunctionIsCalledDeprecated
)
{
bool
flag
=
false
;
PlatformThread
thread
(
&
SetFlagRunFunctionDeprecated
&
flag
"
RunFunctionIsCalled
"
)
;
thread
.
Start
(
)
;
thread
.
Stop
(
)
;
EXPECT_TRUE
(
flag
)
;
}
TEST
(
PlatformThreadTest
StartStop
)
{
PlatformThread
thread
(
&
NullRunFunction
nullptr
"
PlatformThreadTest
"
)
;
EXPECT_TRUE
(
thread
.
name
(
)
=
=
"
PlatformThreadTest
"
)
;
EXPECT_TRUE
(
thread
.
GetThreadRef
(
)
=
=
0
)
;
thread
.
Start
(
)
;
EXPECT_TRUE
(
thread
.
GetThreadRef
(
)
!
=
0
)
;
thread
.
Stop
(
)
;
EXPECT_TRUE
(
thread
.
GetThreadRef
(
)
=
=
0
)
;
}
TEST
(
PlatformThreadTest
StartStop2
)
{
PlatformThread
thread1
(
&
NullRunFunction
nullptr
"
PlatformThreadTest1
"
)
;
PlatformThread
thread2
(
&
NullRunFunction
nullptr
"
PlatformThreadTest2
"
)
;
EXPECT_TRUE
(
thread1
.
GetThreadRef
(
)
=
=
thread2
.
GetThreadRef
(
)
)
;
thread1
.
Start
(
)
;
thread2
.
Start
(
)
;
EXPECT_TRUE
(
thread1
.
GetThreadRef
(
)
!
=
thread2
.
GetThreadRef
(
)
)
;
thread2
.
Stop
(
)
;
thread1
.
Stop
(
)
;
}
TEST
(
PlatformThreadTest
RunFunctionIsCalled
)
{
bool
flag
=
false
;
PlatformThread
thread
(
&
SetFlagRunFunction
&
flag
"
RunFunctionIsCalled
"
)
;
thread
.
Start
(
)
;
thread
.
Stop
(
)
;
EXPECT_TRUE
(
flag
)
;
}
TEST
(
PlatformThreadTest
DISABLED_TooBusyDeprecated
)
{
PlatformThread
thread
(
&
TooBusyRunFunction
nullptr
"
BusyThread
"
)
;
thread
.
Start
(
)
;
webrtc
:
:
SleepMs
(
1000
)
;
thread
.
Stop
(
)
;
}
}
