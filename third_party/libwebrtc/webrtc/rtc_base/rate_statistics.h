#
ifndef
RTC_BASE_RATE_STATISTICS_H_
#
define
RTC_BASE_RATE_STATISTICS_H_
#
include
<
memory
>
#
include
"
api
/
optional
.
h
"
#
include
"
typedefs
.
h
"
namespace
webrtc
{
class
RateStatistics
{
public
:
static
constexpr
float
kBpsScale
=
8000
.
0f
;
RateStatistics
(
int64_t
max_window_size_ms
float
scale
)
;
~
RateStatistics
(
)
;
void
Reset
(
)
;
void
Update
(
size_t
count
int64_t
now_ms
)
;
rtc
:
:
Optional
<
uint32_t
>
Rate
(
int64_t
now_ms
)
const
;
bool
SetWindowSize
(
int64_t
window_size_ms
int64_t
now_ms
)
;
private
:
void
EraseOld
(
int64_t
now_ms
)
;
bool
IsInitialized
(
)
const
;
struct
Bucket
{
size_t
sum
;
size_t
samples
;
}
;
std
:
:
unique_ptr
<
Bucket
[
]
>
buckets_
;
size_t
accumulated_count_
;
size_t
num_samples_
;
int64_t
oldest_time_
;
uint32_t
oldest_index_
;
const
float
scale_
;
const
int64_t
max_window_size_ms_
;
int64_t
current_window_size_ms_
;
}
;
}
#
endif
