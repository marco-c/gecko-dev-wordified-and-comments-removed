#
include
"
rtc_base
/
task_queue_posix
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
rtc_base
/
task_queue
.
h
"
namespace
rtc
{
namespace
internal
{
pthread_key_t
g_queue_ptr_tls
=
0
;
void
InitializeTls
(
)
{
RTC_CHECK
(
pthread_key_create
(
&
g_queue_ptr_tls
nullptr
)
=
=
0
)
;
}
pthread_key_t
GetQueuePtrTls
(
)
{
static
pthread_once_t
init_once
=
PTHREAD_ONCE_INIT
;
RTC_CHECK
(
pthread_once
(
&
init_once
&
InitializeTls
)
=
=
0
)
;
return
g_queue_ptr_tls
;
}
AutoSetCurrentQueuePtr
:
:
AutoSetCurrentQueuePtr
(
TaskQueue
*
q
)
:
prev_
(
TaskQueue
:
:
Current
(
)
)
{
pthread_setspecific
(
GetQueuePtrTls
(
)
q
)
;
}
AutoSetCurrentQueuePtr
:
:
~
AutoSetCurrentQueuePtr
(
)
{
pthread_setspecific
(
GetQueuePtrTls
(
)
prev_
)
;
}
}
}
