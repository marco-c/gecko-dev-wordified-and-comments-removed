#
ifndef
RTC_BASE_RATE_LIMITER_H_
#
define
RTC_BASE_RATE_LIMITER_H_
#
include
<
limits
>
#
include
"
rtc_base
/
constructormagic
.
h
"
#
include
"
rtc_base
/
criticalsection
.
h
"
#
include
"
rtc_base
/
rate_statistics
.
h
"
namespace
webrtc
{
class
Clock
;
class
RateLimiter
{
public
:
RateLimiter
(
const
Clock
*
clock
int64_t
max_window_ms
)
;
~
RateLimiter
(
)
;
bool
TryUseRate
(
size_t
packet_size_bytes
)
;
void
SetMaxRate
(
uint32_t
max_rate_bps
)
;
bool
SetWindowSize
(
int64_t
window_size_ms
)
;
private
:
const
Clock
*
const
clock_
;
rtc
:
:
CriticalSection
lock_
;
RateStatistics
current_rate_
RTC_GUARDED_BY
(
lock_
)
;
int64_t
window_size_ms_
RTC_GUARDED_BY
(
lock_
)
;
uint32_t
max_rate_bps_
RTC_GUARDED_BY
(
lock_
)
;
RTC_DISALLOW_IMPLICIT_CONSTRUCTORS
(
RateLimiter
)
;
}
;
}
#
endif
