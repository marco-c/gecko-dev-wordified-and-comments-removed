#
ifndef
MODULES_VIDEO_CODING_INCLUDE_MOCK_MOCK_VCM_CALLBACKS_H_
#
define
MODULES_VIDEO_CODING_INCLUDE_MOCK_MOCK_VCM_CALLBACKS_H_
#
include
"
modules
/
video_coding
/
include
/
video_coding_defines
.
h
"
#
include
"
test
/
gmock
.
h
"
#
include
"
typedefs
.
h
"
namespace
webrtc
{
class
MockVCMFrameTypeCallback
:
public
VCMFrameTypeCallback
{
public
:
MOCK_METHOD0
(
RequestKeyFrame
int32_t
(
)
)
;
}
;
class
MockPacketRequestCallback
:
public
VCMPacketRequestCallback
{
public
:
MOCK_METHOD2
(
ResendPackets
int32_t
(
const
uint16_t
*
sequenceNumbers
uint16_t
length
)
)
;
}
;
class
MockVCMReceiveCallback
:
public
VCMReceiveCallback
{
public
:
MockVCMReceiveCallback
(
)
{
}
virtual
~
MockVCMReceiveCallback
(
)
{
}
MOCK_METHOD3
(
FrameToRender
int32_t
(
VideoFrame
&
rtc
:
:
Optional
<
uint8_t
>
VideoContentType
)
)
;
MOCK_METHOD1
(
ReceivedDecodedReferenceFrame
int32_t
(
const
uint64_t
)
)
;
MOCK_METHOD1
(
OnIncomingPayloadType
void
(
int
)
)
;
MOCK_METHOD1
(
OnDecoderImplementationName
void
(
const
char
*
)
)
;
}
;
}
#
endif
