#
ifndef
MODULES_RTP_RTCP_SOURCE_RTCP_TRANSCEIVER_H_
#
define
MODULES_RTP_RTCP_SOURCE_RTCP_TRANSCEIVER_H_
#
include
<
memory
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
modules
/
rtp_rtcp
/
source
/
rtcp_transceiver_config
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
rtcp_transceiver_impl
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
#
include
"
rtc_base
/
copyonwritebuffer
.
h
"
#
include
"
rtc_base
/
task_queue
.
h
"
#
include
"
rtc_base
/
weak_ptr
.
h
"
namespace
webrtc
{
class
RtcpTransceiver
{
public
:
explicit
RtcpTransceiver
(
const
RtcpTransceiverConfig
&
config
)
;
~
RtcpTransceiver
(
)
;
void
ReceivePacket
(
rtc
:
:
CopyOnWriteBuffer
packet
)
;
void
SendCompoundPacket
(
)
;
void
SetRemb
(
int
bitrate_bps
std
:
:
vector
<
uint32_t
>
ssrcs
)
;
void
UnsetRemb
(
)
;
void
SendNack
(
uint32_t
ssrc
std
:
:
vector
<
uint16_t
>
sequence_numbers
)
;
void
SendPictureLossIndication
(
std
:
:
vector
<
uint32_t
>
ssrcs
)
;
void
SendFullIntraRequest
(
std
:
:
vector
<
uint32_t
>
ssrcs
)
;
private
:
rtc
:
:
TaskQueue
*
const
task_queue_
;
std
:
:
unique_ptr
<
RtcpTransceiverImpl
>
rtcp_transceiver_
;
rtc
:
:
WeakPtrFactory
<
RtcpTransceiverImpl
>
ptr_factory_
;
rtc
:
:
WeakPtr
<
RtcpTransceiverImpl
>
ptr_
;
RTC_DISALLOW_IMPLICIT_CONSTRUCTORS
(
RtcpTransceiver
)
;
}
;
}
#
endif
