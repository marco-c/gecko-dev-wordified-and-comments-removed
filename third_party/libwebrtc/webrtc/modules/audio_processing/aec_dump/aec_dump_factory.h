#
ifndef
MODULES_AUDIO_PROCESSING_AEC_DUMP_AEC_DUMP_FACTORY_H_
#
define
MODULES_AUDIO_PROCESSING_AEC_DUMP_AEC_DUMP_FACTORY_H_
#
include
<
memory
>
#
include
<
string
>
#
include
"
modules
/
audio_processing
/
include
/
aec_dump
.
h
"
#
include
"
rtc_base
/
platform_file
.
h
"
namespace
rtc
{
class
TaskQueue
;
}
namespace
webrtc
{
class
AecDumpFactory
{
public
:
static
std
:
:
unique_ptr
<
AecDump
>
Create
(
rtc
:
:
PlatformFile
file
int64_t
max_log_size_bytes
rtc
:
:
TaskQueue
*
worker_queue
)
;
static
std
:
:
unique_ptr
<
AecDump
>
Create
(
std
:
:
string
file_name
int64_t
max_log_size_bytes
rtc
:
:
TaskQueue
*
worker_queue
)
;
static
std
:
:
unique_ptr
<
AecDump
>
Create
(
FILE
*
handle
int64_t
max_log_size_bytes
rtc
:
:
TaskQueue
*
worker_queue
)
;
}
;
}
#
endif
