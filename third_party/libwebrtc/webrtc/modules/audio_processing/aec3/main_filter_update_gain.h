#
ifndef
MODULES_AUDIO_PROCESSING_AEC3_MAIN_FILTER_UPDATE_GAIN_H_
#
define
MODULES_AUDIO_PROCESSING_AEC3_MAIN_FILTER_UPDATE_GAIN_H_
#
include
<
memory
>
#
include
<
vector
>
#
include
"
modules
/
audio_processing
/
aec3
/
adaptive_fir_filter
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
aec3_common
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
render_buffer
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
render_signal_analyzer
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
subtractor_output
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
namespace
webrtc
{
class
ApmDataDumper
;
class
MainFilterUpdateGain
{
public
:
MainFilterUpdateGain
(
)
;
~
MainFilterUpdateGain
(
)
;
void
HandleEchoPathChange
(
)
;
void
Compute
(
const
RenderBuffer
&
render_buffer
const
RenderSignalAnalyzer
&
render_signal_analyzer
const
SubtractorOutput
&
subtractor_output
const
AdaptiveFirFilter
&
filter
bool
saturated_capture_signal
FftData
*
gain_fft
)
;
private
:
static
int
instance_count_
;
std
:
:
unique_ptr
<
ApmDataDumper
>
data_dumper_
;
std
:
:
array
<
float
kFftLengthBy2Plus1
>
H_error_
;
size_t
poor_excitation_counter_
;
size_t
call_counter_
=
0
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
MainFilterUpdateGain
)
;
}
;
}
#
endif
