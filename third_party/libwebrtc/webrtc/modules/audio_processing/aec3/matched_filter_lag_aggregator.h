#
ifndef
MODULES_AUDIO_PROCESSING_AEC3_MATCHED_FILTER_LAG_AGGREGATOR_H_
#
define
MODULES_AUDIO_PROCESSING_AEC3_MATCHED_FILTER_LAG_AGGREGATOR_H_
#
include
<
vector
>
#
include
"
api
/
optional
.
h
"
#
include
"
modules
/
audio_processing
/
aec3
/
matched_filter
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
namespace
webrtc
{
class
ApmDataDumper
;
class
MatchedFilterLagAggregator
{
public
:
MatchedFilterLagAggregator
(
ApmDataDumper
*
data_dumper
size_t
max_filter_lag
)
;
~
MatchedFilterLagAggregator
(
)
;
void
Reset
(
)
;
rtc
:
:
Optional
<
size_t
>
Aggregate
(
rtc
:
:
ArrayView
<
const
MatchedFilter
:
:
LagEstimate
>
lag_estimates
)
;
private
:
ApmDataDumper
*
const
data_dumper_
;
std
:
:
vector
<
int
>
histogram_
;
std
:
:
array
<
int
250
>
histogram_data_
;
int
histogram_data_index_
=
0
;
RTC_DISALLOW_IMPLICIT_CONSTRUCTORS
(
MatchedFilterLagAggregator
)
;
}
;
}
#
endif
