#
include
"
modules
/
audio_processing
/
vad
/
vad_audio_proc
.
h
"
#
include
<
math
.
h
>
#
include
<
stdio
.
h
>
#
include
<
string
>
#
include
"
modules
/
audio_processing
/
vad
/
common
.
h
"
#
include
"
modules
/
include
/
module_common_types
.
h
"
#
include
"
test
/
gtest
.
h
"
#
include
"
test
/
testsupport
/
fileutils
.
h
"
namespace
webrtc
{
TEST
(
AudioProcessingTest
DISABLED_ComputingFirstSpectralPeak
)
{
VadAudioProc
audioproc
;
std
:
:
string
peak_file_name
=
test
:
:
ResourcePath
(
"
audio_processing
/
agc
/
agc_spectral_peak
"
"
dat
"
)
;
FILE
*
peak_file
=
fopen
(
peak_file_name
.
c_str
(
)
"
rb
"
)
;
ASSERT_TRUE
(
peak_file
!
=
NULL
)
;
std
:
:
string
pcm_file_name
=
test
:
:
ResourcePath
(
"
audio_processing
/
agc
/
agc_audio
"
"
pcm
"
)
;
FILE
*
pcm_file
=
fopen
(
pcm_file_name
.
c_str
(
)
"
rb
"
)
;
ASSERT_TRUE
(
pcm_file
!
=
NULL
)
;
const
size_t
kDataLength
=
kLength10Ms
;
int16_t
data
[
kDataLength
]
=
{
0
}
;
AudioFeatures
features
;
double
sp
[
kMaxNumFrames
]
;
while
(
fread
(
data
sizeof
(
int16_t
)
kDataLength
pcm_file
)
=
=
kDataLength
)
{
audioproc
.
ExtractFeatures
(
data
kDataLength
&
features
)
;
if
(
features
.
num_frames
>
0
)
{
ASSERT_LT
(
features
.
num_frames
kMaxNumFrames
)
;
const
size_t
num_frames
=
features
.
num_frames
;
ASSERT_EQ
(
num_frames
fread
(
sp
sizeof
(
sp
[
0
]
)
num_frames
peak_file
)
)
;
for
(
size_t
n
=
0
;
n
<
features
.
num_frames
;
n
+
+
)
EXPECT_NEAR
(
features
.
spectral_peak
[
n
]
sp
[
n
]
3
)
;
}
}
fclose
(
peak_file
)
;
fclose
(
pcm_file
)
;
}
}
