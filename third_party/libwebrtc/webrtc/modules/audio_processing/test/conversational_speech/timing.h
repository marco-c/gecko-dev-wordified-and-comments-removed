#
ifndef
MODULES_AUDIO_PROCESSING_TEST_CONVERSATIONAL_SPEECH_TIMING_H_
#
define
MODULES_AUDIO_PROCESSING_TEST_CONVERSATIONAL_SPEECH_TIMING_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
namespace
webrtc
{
namespace
test
{
namespace
conversational_speech
{
struct
Turn
{
Turn
(
std
:
:
string
new_speaker_name
std
:
:
string
new_audiotrack_file_name
int
new_offset
)
:
speaker_name
(
new_speaker_name
)
audiotrack_file_name
(
new_audiotrack_file_name
)
offset
(
new_offset
)
{
}
bool
operator
=
=
(
const
Turn
&
b
)
const
;
std
:
:
string
speaker_name
;
std
:
:
string
audiotrack_file_name
;
int
offset
;
}
;
std
:
:
vector
<
Turn
>
LoadTiming
(
const
std
:
:
string
&
timing_filepath
)
;
void
SaveTiming
(
const
std
:
:
string
&
timing_filepath
rtc
:
:
ArrayView
<
const
Turn
>
timing
)
;
}
}
}
#
endif
