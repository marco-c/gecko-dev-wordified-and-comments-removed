#
include
"
modules
/
video_processing
/
util
/
denoiser_filter
.
h
"
#
include
"
modules
/
video_processing
/
util
/
denoiser_filter_c
.
h
"
#
include
"
modules
/
video_processing
/
util
/
denoiser_filter_neon
.
h
"
#
include
"
modules
/
video_processing
/
util
/
denoiser_filter_sse2
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
system_wrappers
/
include
/
cpu_features_wrapper
.
h
"
namespace
webrtc
{
const
int
kMotionMagnitudeThreshold
=
8
*
3
;
const
int
kSumDiffThreshold
=
96
;
const
int
kSumDiffThresholdHigh
=
448
;
std
:
:
unique_ptr
<
DenoiserFilter
>
DenoiserFilter
:
:
Create
(
bool
runtime_cpu_detection
CpuType
*
cpu_type
)
{
std
:
:
unique_ptr
<
DenoiserFilter
>
filter
;
if
(
cpu_type
!
=
nullptr
)
*
cpu_type
=
CPU_NOT_NEON
;
if
(
runtime_cpu_detection
)
{
#
if
defined
(
WEBRTC_ARCH_X86_FAMILY
)
#
if
defined
(
__SSE2__
)
filter
.
reset
(
new
DenoiserFilterSSE2
(
)
)
;
#
else
if
(
WebRtc_GetCPUInfo
(
kSSE2
)
)
{
filter
.
reset
(
new
DenoiserFilterSSE2
(
)
)
;
}
else
{
filter
.
reset
(
new
DenoiserFilterC
(
)
)
;
}
#
endif
#
elif
defined
(
WEBRTC_HAS_NEON
)
filter
.
reset
(
new
DenoiserFilterNEON
(
)
)
;
if
(
cpu_type
!
=
nullptr
)
*
cpu_type
=
CPU_NEON
;
#
else
filter
.
reset
(
new
DenoiserFilterC
(
)
)
;
#
endif
}
else
{
filter
.
reset
(
new
DenoiserFilterC
(
)
)
;
}
RTC_DCHECK
(
filter
.
get
(
)
!
=
nullptr
)
;
return
filter
;
}
}
