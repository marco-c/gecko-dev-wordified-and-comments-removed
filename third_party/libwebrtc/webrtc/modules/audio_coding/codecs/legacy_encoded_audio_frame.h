#
ifndef
MODULES_AUDIO_CODING_CODECS_LEGACY_ENCODED_AUDIO_FRAME_H_
#
define
MODULES_AUDIO_CODING_CODECS_LEGACY_ENCODED_AUDIO_FRAME_H_
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
api
/
audio_codecs
/
audio_decoder
.
h
"
namespace
webrtc
{
class
LegacyEncodedAudioFrame
final
:
public
AudioDecoder
:
:
EncodedAudioFrame
{
public
:
LegacyEncodedAudioFrame
(
AudioDecoder
*
decoder
rtc
:
:
Buffer
&
&
payload
)
;
~
LegacyEncodedAudioFrame
(
)
override
;
static
std
:
:
vector
<
AudioDecoder
:
:
ParseResult
>
SplitBySamples
(
AudioDecoder
*
decoder
rtc
:
:
Buffer
&
&
payload
uint32_t
timestamp
size_t
bytes_per_ms
uint32_t
timestamps_per_ms
)
;
size_t
Duration
(
)
const
override
;
rtc
:
:
Optional
<
DecodeResult
>
Decode
(
rtc
:
:
ArrayView
<
int16_t
>
decoded
)
const
override
;
const
rtc
:
:
Buffer
&
payload
(
)
const
{
return
payload_
;
}
private
:
AudioDecoder
*
const
decoder_
;
const
rtc
:
:
Buffer
payload_
;
}
;
}
#
endif
