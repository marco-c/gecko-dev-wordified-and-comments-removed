#
ifndef
MODULES_AUDIO_CODING_NETEQ_TOOLS_RESAMPLE_INPUT_AUDIO_FILE_H_
#
define
MODULES_AUDIO_CODING_NETEQ_TOOLS_RESAMPLE_INPUT_AUDIO_FILE_H_
#
include
<
string
>
#
include
"
common_audio
/
resampler
/
include
/
resampler
.
h
"
#
include
"
modules
/
audio_coding
/
neteq
/
tools
/
input_audio_file
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
#
include
"
typedefs
.
h
"
namespace
webrtc
{
namespace
test
{
class
ResampleInputAudioFile
:
public
InputAudioFile
{
public
:
ResampleInputAudioFile
(
const
std
:
:
string
file_name
int
file_rate_hz
)
:
InputAudioFile
(
file_name
)
file_rate_hz_
(
file_rate_hz
)
output_rate_hz_
(
-
1
)
{
}
ResampleInputAudioFile
(
const
std
:
:
string
file_name
int
file_rate_hz
int
output_rate_hz
)
:
InputAudioFile
(
file_name
)
file_rate_hz_
(
file_rate_hz
)
output_rate_hz_
(
output_rate_hz
)
{
}
bool
Read
(
size_t
samples
int
output_rate_hz
int16_t
*
destination
)
;
bool
Read
(
size_t
samples
int16_t
*
destination
)
override
;
void
set_output_rate_hz
(
int
rate_hz
)
;
private
:
const
int
file_rate_hz_
;
int
output_rate_hz_
;
Resampler
resampler_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
ResampleInputAudioFile
)
;
}
;
}
}
#
endif
