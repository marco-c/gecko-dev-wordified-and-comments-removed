#
ifndef
MODULES_CONGESTION_CONTROLLER_PROBE_BITRATE_ESTIMATOR_H_
#
define
MODULES_CONGESTION_CONTROLLER_PROBE_BITRATE_ESTIMATOR_H_
#
include
<
map
>
#
include
<
limits
>
#
include
"
modules
/
rtp_rtcp
/
include
/
rtp_rtcp_defines
.
h
"
namespace
webrtc
{
class
RtcEventLog
;
class
ProbeBitrateEstimator
{
public
:
explicit
ProbeBitrateEstimator
(
RtcEventLog
*
event_log
)
;
~
ProbeBitrateEstimator
(
)
;
int
HandleProbeAndEstimateBitrate
(
const
PacketFeedback
&
packet_feedback
)
;
rtc
:
:
Optional
<
int
>
FetchAndResetLastEstimatedBitrateBps
(
)
;
private
:
struct
AggregatedCluster
{
int
num_probes
=
0
;
int64_t
first_send_ms
=
std
:
:
numeric_limits
<
int64_t
>
:
:
max
(
)
;
int64_t
last_send_ms
=
0
;
int64_t
first_receive_ms
=
std
:
:
numeric_limits
<
int64_t
>
:
:
max
(
)
;
int64_t
last_receive_ms
=
0
;
int
size_last_send
=
0
;
int
size_first_receive
=
0
;
int
size_total
=
0
;
}
;
void
EraseOldClusters
(
int64_t
timestamp_ms
)
;
std
:
:
map
<
int
AggregatedCluster
>
clusters_
;
RtcEventLog
*
const
event_log_
;
rtc
:
:
Optional
<
int
>
estimated_bitrate_bps_
;
}
;
}
#
endif
