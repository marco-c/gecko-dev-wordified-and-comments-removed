#
ifndef
MODULES_CONGESTION_CONTROLLER_MEDIAN_SLOPE_ESTIMATOR_H_
#
define
MODULES_CONGESTION_CONTROLLER_MEDIAN_SLOPE_ESTIMATOR_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
deque
>
#
include
<
vector
>
#
include
"
rtc_base
/
constructormagic
.
h
"
#
include
"
rtc_base
/
numerics
/
percentile_filter
.
h
"
namespace
webrtc
{
class
MedianSlopeEstimator
{
public
:
MedianSlopeEstimator
(
size_t
window_size
double
threshold_gain
)
;
~
MedianSlopeEstimator
(
)
;
void
Update
(
double
recv_delta_ms
double
send_delta_ms
int64_t
arrival_time_ms
)
;
double
trendline_slope
(
)
const
{
return
trendline_
*
threshold_gain_
;
}
unsigned
int
num_of_deltas
(
)
const
{
return
num_of_deltas_
;
}
private
:
struct
DelayInfo
{
DelayInfo
(
int64_t
time
double
delay
size_t
slope_count
)
;
~
DelayInfo
(
)
;
int64_t
time
;
double
delay
;
std
:
:
vector
<
double
>
slopes
;
}
;
const
size_t
window_size_
;
const
double
threshold_gain_
;
unsigned
int
num_of_deltas_
;
double
accumulated_delay_
;
std
:
:
deque
<
DelayInfo
>
delay_hist_
;
PercentileFilter
<
double
>
median_filter_
;
double
trendline_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
MedianSlopeEstimator
)
;
}
;
}
#
endif
