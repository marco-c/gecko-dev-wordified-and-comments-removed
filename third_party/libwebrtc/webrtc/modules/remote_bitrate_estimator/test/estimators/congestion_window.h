#
ifndef
MODULES_REMOTE_BITRATE_ESTIMATOR_TEST_ESTIMATORS_CONGESTION_WINDOW_H_
#
define
MODULES_REMOTE_BITRATE_ESTIMATOR_TEST_ESTIMATORS_CONGESTION_WINDOW_H_
#
include
"
modules
/
remote_bitrate_estimator
/
test
/
estimators
/
bbr
.
h
"
#
include
"
api
/
optional
.
h
"
namespace
webrtc
{
namespace
testing
{
namespace
bwe
{
class
CongestionWindow
{
public
:
CongestionWindow
(
)
;
~
CongestionWindow
(
)
;
int
GetCongestionWindow
(
BbrBweSender
:
:
Mode
mode
int64_t
bandwidth_estimate
rtc
:
:
Optional
<
int64_t
>
min_rtt
float
gain
)
;
int
GetTargetCongestionWindow
(
int64_t
bandwidth_estimate
rtc
:
:
Optional
<
int64_t
>
min_rtt
float
gain
)
;
void
PacketSent
(
size_t
sent_packet_size
)
;
void
AckReceived
(
size_t
received_packet_size
)
;
size_t
data_inflight
(
)
{
return
data_inflight_bytes_
;
}
private
:
size_t
data_inflight_bytes_
;
}
;
}
}
}
#
endif
