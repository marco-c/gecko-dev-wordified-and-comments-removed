#
ifndef
MODULES_DESKTOP_CAPTURE_LINUX_SCREEN_CAPTURER_X11_H_
#
define
MODULES_DESKTOP_CAPTURE_LINUX_SCREEN_CAPTURER_X11_H_
#
include
<
X11
/
Xlib
.
h
>
#
include
<
X11
/
extensions
/
Xdamage
.
h
>
#
include
<
memory
>
#
include
<
set
>
#
include
<
utility
>
#
include
"
modules
/
desktop_capture
/
desktop_capture_options
.
h
"
#
include
"
modules
/
desktop_capture
/
desktop_capturer
.
h
"
#
include
"
modules
/
desktop_capture
/
desktop_frame
.
h
"
#
include
"
modules
/
desktop_capture
/
linux
/
x_server_pixel_buffer
.
h
"
#
include
"
modules
/
desktop_capture
/
screen_capture_frame_queue
.
h
"
#
include
"
modules
/
desktop_capture
/
screen_capturer_helper
.
h
"
#
include
"
modules
/
desktop_capture
/
shared_desktop_frame
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
namespace
webrtc
{
class
ScreenCapturerX11
:
public
DesktopCapturer
public
SharedXDisplay
:
:
XEventHandler
{
public
:
ScreenCapturerX11
(
)
;
~
ScreenCapturerX11
(
)
override
;
static
std
:
:
unique_ptr
<
DesktopCapturer
>
CreateRawScreenCapturer
(
const
DesktopCaptureOptions
&
options
)
;
bool
Init
(
const
DesktopCaptureOptions
&
options
)
;
void
Start
(
Callback
*
delegate
)
override
;
void
CaptureFrame
(
)
override
;
bool
GetSourceList
(
SourceList
*
sources
)
override
;
bool
SelectSource
(
SourceId
id
)
override
;
private
:
Display
*
display
(
)
{
return
options_
.
x_display
(
)
-
>
display
(
)
;
}
bool
HandleXEvent
(
const
XEvent
&
event
)
override
;
void
InitXDamage
(
)
;
std
:
:
unique_ptr
<
DesktopFrame
>
CaptureScreen
(
)
;
void
ScreenConfigurationChanged
(
)
;
void
SynchronizeFrame
(
)
;
void
DeinitXlib
(
)
;
DesktopCaptureOptions
options_
;
Callback
*
callback_
=
nullptr
;
GC
gc_
=
nullptr
;
Window
root_window_
=
BadValue
;
bool
has_xfixes_
=
false
;
int
xfixes_event_base_
=
-
1
;
int
xfixes_error_base_
=
-
1
;
bool
use_damage_
=
false
;
Damage
damage_handle_
=
0
;
int
damage_event_base_
=
-
1
;
int
damage_error_base_
=
-
1
;
XserverRegion
damage_region_
=
0
;
XServerPixelBuffer
x_server_pixel_buffer_
;
ScreenCapturerHelper
helper_
;
ScreenCaptureFrameQueue
<
SharedDesktopFrame
>
queue_
;
DesktopRegion
last_invalid_region_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
ScreenCapturerX11
)
;
}
;
}
#
endif
