#
ifndef
CALL_RTP_TRANSPORT_CONTROLLER_SEND_H_
#
define
CALL_RTP_TRANSPORT_CONTROLLER_SEND_H_
#
include
"
call
/
rtp_transport_controller_send_interface
.
h
"
#
include
"
common_types
.
h
"
#
include
"
modules
/
congestion_controller
/
include
/
send_side_congestion_controller
.
h
"
#
include
"
modules
/
pacing
/
packet_router
.
h
"
#
include
"
rtc_base
/
constructormagic
.
h
"
namespace
webrtc
{
class
Clock
;
class
RtcEventLog
;
class
RtpTransportControllerSend
:
public
RtpTransportControllerSendInterface
{
public
:
RtpTransportControllerSend
(
Clock
*
clock
webrtc
:
:
RtcEventLog
*
event_log
)
;
PacketRouter
*
packet_router
(
)
override
;
PacedSender
*
pacer
(
)
override
;
SendSideCongestionController
*
send_side_cc
(
)
override
;
TransportFeedbackObserver
*
transport_feedback_observer
(
)
override
;
RtpPacketSender
*
packet_sender
(
)
override
;
const
RtpKeepAliveConfig
&
keepalive_config
(
)
const
override
;
void
SetAllocatedSendBitrateLimits
(
int
min_send_bitrate_bps
int
max_padding_bitrate_bps
)
override
;
void
SetKeepAliveConfig
(
const
RtpKeepAliveConfig
&
config
)
;
private
:
PacketRouter
packet_router_
;
PacedSender
pacer_
;
SendSideCongestionController
send_side_cc_
;
RtpKeepAliveConfig
keepalive_
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
RtpTransportControllerSend
)
;
}
;
}
#
endif
