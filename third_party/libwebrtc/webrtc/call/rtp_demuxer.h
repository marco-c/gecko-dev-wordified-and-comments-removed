#
ifndef
CALL_RTP_DEMUXER_H_
#
define
CALL_RTP_DEMUXER_H_
#
include
<
map
>
#
include
<
set
>
#
include
<
string
>
#
include
<
utility
>
#
include
<
vector
>
namespace
webrtc
{
class
RtpPacketReceived
;
class
RtpPacketSinkInterface
;
class
SsrcBindingObserver
;
struct
RtpDemuxerCriteria
{
RtpDemuxerCriteria
(
)
;
~
RtpDemuxerCriteria
(
)
;
std
:
:
string
mid
;
std
:
:
string
rsid
;
std
:
:
set
<
uint32_t
>
ssrcs
;
std
:
:
set
<
uint8_t
>
payload_types
;
}
;
class
RtpDemuxer
{
public
:
static
constexpr
int
kMaxSsrcBindings
=
1000
;
RtpDemuxer
(
)
;
~
RtpDemuxer
(
)
;
RtpDemuxer
(
const
RtpDemuxer
&
)
=
delete
;
void
operator
=
(
const
RtpDemuxer
&
)
=
delete
;
bool
AddSink
(
const
RtpDemuxerCriteria
&
criteria
RtpPacketSinkInterface
*
sink
)
;
bool
AddSink
(
uint32_t
ssrc
RtpPacketSinkInterface
*
sink
)
;
void
AddSink
(
const
std
:
:
string
&
rsid
RtpPacketSinkInterface
*
sink
)
;
bool
RemoveSink
(
const
RtpPacketSinkInterface
*
sink
)
;
bool
OnRtpPacket
(
const
RtpPacketReceived
&
packet
)
;
void
RegisterSsrcBindingObserver
(
SsrcBindingObserver
*
observer
)
;
void
RegisterRsidResolutionObserver
(
SsrcBindingObserver
*
observer
)
;
void
DeregisterSsrcBindingObserver
(
const
SsrcBindingObserver
*
observer
)
;
void
DeregisterRsidResolutionObserver
(
const
SsrcBindingObserver
*
observer
)
;
private
:
bool
CriteriaWouldConflict
(
const
RtpDemuxerCriteria
&
criteria
)
const
;
RtpPacketSinkInterface
*
ResolveSink
(
const
RtpPacketReceived
&
packet
)
;
RtpPacketSinkInterface
*
ResolveSinkByMid
(
const
std
:
:
string
&
mid
uint32_t
ssrc
)
;
RtpPacketSinkInterface
*
ResolveSinkByMidRsid
(
const
std
:
:
string
&
mid
const
std
:
:
string
&
rsid
uint32_t
ssrc
)
;
RtpPacketSinkInterface
*
ResolveSinkByRsid
(
const
std
:
:
string
&
rsid
uint32_t
ssrc
)
;
RtpPacketSinkInterface
*
ResolveSinkByPayloadType
(
uint8_t
payload_type
uint32_t
ssrc
)
;
void
RefreshKnownMids
(
)
;
std
:
:
map
<
std
:
:
string
RtpPacketSinkInterface
*
>
sink_by_mid_
;
std
:
:
map
<
uint32_t
RtpPacketSinkInterface
*
>
sink_by_ssrc_
;
std
:
:
multimap
<
uint8_t
RtpPacketSinkInterface
*
>
sinks_by_pt_
;
std
:
:
map
<
std
:
:
pair
<
std
:
:
string
std
:
:
string
>
RtpPacketSinkInterface
*
>
sink_by_mid_and_rsid_
;
std
:
:
map
<
std
:
:
string
RtpPacketSinkInterface
*
>
sink_by_rsid_
;
std
:
:
set
<
std
:
:
string
>
known_mids_
;
std
:
:
map
<
uint32_t
std
:
:
string
>
mid_by_ssrc_
;
std
:
:
map
<
uint32_t
std
:
:
string
>
rsid_by_ssrc_
;
bool
AddSsrcSinkBinding
(
uint32_t
ssrc
RtpPacketSinkInterface
*
sink
)
;
std
:
:
vector
<
SsrcBindingObserver
*
>
ssrc_binding_observers_
;
}
;
}
#
endif
