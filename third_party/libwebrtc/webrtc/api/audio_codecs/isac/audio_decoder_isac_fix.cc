#
include
"
api
/
audio_codecs
/
isac
/
audio_decoder_isac_fix
.
h
"
#
include
"
common_types
.
h
"
#
include
"
modules
/
audio_coding
/
codecs
/
isac
/
fix
/
include
/
audio_decoder_isacfix
.
h
"
#
include
"
rtc_base
/
ptr_util
.
h
"
namespace
webrtc
{
rtc
:
:
Optional
<
AudioDecoderIsacFix
:
:
Config
>
AudioDecoderIsacFix
:
:
SdpToConfig
(
const
SdpAudioFormat
&
format
)
{
return
STR_CASE_CMP
(
format
.
name
.
c_str
(
)
"
ISAC
"
)
=
=
0
&
&
format
.
clockrate_hz
=
=
16000
&
&
format
.
num_channels
=
=
1
?
rtc
:
:
Optional
<
Config
>
(
Config
(
)
)
:
rtc
:
:
nullopt
;
}
void
AudioDecoderIsacFix
:
:
AppendSupportedDecoders
(
std
:
:
vector
<
AudioCodecSpec
>
*
specs
)
{
specs
-
>
push_back
(
{
{
"
ISAC
"
16000
1
}
{
16000
1
32000
10000
32000
}
}
)
;
}
std
:
:
unique_ptr
<
AudioDecoder
>
AudioDecoderIsacFix
:
:
MakeAudioDecoder
(
Config
config
)
{
return
rtc
:
:
MakeUnique
<
AudioDecoderIsacFixImpl
>
(
16000
)
;
}
}
