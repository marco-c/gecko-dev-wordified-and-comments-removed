#
ifndef
API_FAKEMETRICSOBSERVER_H_
#
define
API_FAKEMETRICSOBSERVER_H_
#
include
<
map
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
peerconnectioninterface
.
h
"
#
include
"
rtc_base
/
thread_checker
.
h
"
namespace
webrtc
{
class
FakeMetricsObserver
:
public
MetricsObserverInterface
{
public
:
FakeMetricsObserver
(
)
;
void
Reset
(
)
;
void
IncrementEnumCounter
(
PeerConnectionEnumCounterType
int
counter
int
counter_max
)
override
;
void
AddHistogramSample
(
PeerConnectionMetricsName
type
int
value
)
override
;
int
GetEnumCounter
(
PeerConnectionEnumCounterType
type
int
counter
)
const
;
int
GetHistogramSample
(
PeerConnectionMetricsName
type
)
const
;
protected
:
~
FakeMetricsObserver
(
)
{
}
private
:
rtc
:
:
ThreadChecker
thread_checker_
;
std
:
:
vector
<
std
:
:
map
<
int
int
>
>
counters_
;
int
histogram_samples_
[
kPeerConnectionMetricsName_Max
]
;
}
;
}
#
endif
