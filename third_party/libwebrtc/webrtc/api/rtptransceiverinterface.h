#
ifndef
API_RTPTRANSCEIVERINTERFACE_H_
#
define
API_RTPTRANSCEIVERINTERFACE_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
optional
.
h
"
#
include
"
api
/
rtpreceiverinterface
.
h
"
#
include
"
api
/
rtpsenderinterface
.
h
"
#
include
"
rtc_base
/
refcount
.
h
"
namespace
webrtc
{
enum
class
RtpTransceiverDirection
{
kSendRecv
kSendOnly
kRecvOnly
kInactive
}
;
struct
RtpTransceiverInit
final
{
RtpTransceiverDirection
direction
=
RtpTransceiverDirection
:
:
kSendRecv
;
std
:
:
vector
<
rtc
:
:
scoped_refptr
<
MediaStreamInterface
>
>
streams
;
std
:
:
vector
<
RtpEncodingParameters
>
send_encodings
;
}
;
class
RtpTransceiverInterface
:
public
rtc
:
:
RefCountInterface
{
public
:
virtual
rtc
:
:
Optional
<
std
:
:
string
>
mid
(
)
const
=
0
;
virtual
rtc
:
:
scoped_refptr
<
RtpSenderInterface
>
sender
(
)
const
=
0
;
virtual
rtc
:
:
scoped_refptr
<
RtpReceiverInterface
>
receiver
(
)
const
=
0
;
virtual
bool
stopped
(
)
const
=
0
;
virtual
RtpTransceiverDirection
direction
(
)
const
=
0
;
virtual
void
SetDirection
(
RtpTransceiverDirection
new_direction
)
=
0
;
virtual
rtc
:
:
Optional
<
RtpTransceiverDirection
>
current_direction
(
)
const
=
0
;
virtual
void
Stop
(
)
=
0
;
virtual
void
SetCodecPreferences
(
rtc
:
:
ArrayView
<
RtpCodecCapability
>
codecs
)
=
0
;
protected
:
virtual
~
RtpTransceiverInterface
(
)
=
default
;
}
;
}
#
endif
