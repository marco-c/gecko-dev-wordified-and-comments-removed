#
ifndef
COMMON_VIDEO_H264_H264_BITSTREAM_PARSER_H_
#
define
COMMON_VIDEO_H264_H264_BITSTREAM_PARSER_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
"
api
/
optional
.
h
"
#
include
"
common_video
/
h264
/
pps_parser
.
h
"
#
include
"
common_video
/
h264
/
sps_parser
.
h
"
namespace
rtc
{
class
BitBufferWriter
;
}
namespace
webrtc
{
class
H264BitstreamParser
{
public
:
enum
Result
{
kOk
kInvalidStream
kUnsupportedStream
}
;
H264BitstreamParser
(
)
;
virtual
~
H264BitstreamParser
(
)
;
void
ParseBitstream
(
const
uint8_t
*
bitstream
size_t
length
)
;
bool
GetLastSliceQp
(
int
*
qp
)
const
;
protected
:
void
ParseSlice
(
const
uint8_t
*
slice
size_t
length
)
;
Result
ParseNonParameterSetNalu
(
const
uint8_t
*
source
size_t
source_length
uint8_t
nalu_type
)
;
rtc
:
:
Optional
<
SpsParser
:
:
SpsState
>
sps_
;
rtc
:
:
Optional
<
PpsParser
:
:
PpsState
>
pps_
;
rtc
:
:
Optional
<
int32_t
>
last_slice_qp_delta_
;
}
;
}
#
endif
