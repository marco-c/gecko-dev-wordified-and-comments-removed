#
include
"
common_video
/
include
/
i420_buffer_pool
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
I420BufferPool
:
:
I420BufferPool
(
bool
zero_initialize
size_t
max_number_of_buffers
)
:
zero_initialize_
(
zero_initialize
)
max_number_of_buffers_
(
max_number_of_buffers
)
{
}
void
I420BufferPool
:
:
Release
(
)
{
buffers_
.
clear
(
)
;
}
rtc
:
:
scoped_refptr
<
I420Buffer
>
I420BufferPool
:
:
CreateBuffer
(
int
width
int
height
)
{
RTC_DCHECK_RUNS_SERIALIZED
(
&
race_checker_
)
;
for
(
auto
it
=
buffers_
.
begin
(
)
;
it
!
=
buffers_
.
end
(
)
;
)
{
if
(
(
*
it
)
-
>
width
(
)
!
=
width
|
|
(
*
it
)
-
>
height
(
)
!
=
height
)
it
=
buffers_
.
erase
(
it
)
;
else
+
+
it
;
}
for
(
const
rtc
:
:
scoped_refptr
<
PooledI420Buffer
>
&
buffer
:
buffers_
)
{
if
(
buffer
-
>
HasOneRef
(
)
)
return
buffer
;
}
if
(
buffers_
.
size
(
)
>
=
max_number_of_buffers_
)
return
nullptr
;
rtc
:
:
scoped_refptr
<
PooledI420Buffer
>
buffer
=
new
PooledI420Buffer
(
width
height
)
;
if
(
zero_initialize_
)
buffer
-
>
InitializeData
(
)
;
buffers_
.
push_back
(
buffer
)
;
return
buffer
;
}
}
