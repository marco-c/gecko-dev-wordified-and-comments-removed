#
if
defined
(
WEBRTC_IOS
)
#
import
<
Foundation
/
Foundation
.
h
>
#
include
<
string
.
h
>
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
sdk
/
objc
/
Framework
/
Classes
/
Common
/
helpers
.
h
"
#
include
"
typedefs
.
h
"
namespace
webrtc
{
namespace
test
{
using
webrtc
:
:
ios
:
:
NSStringFromStdString
;
using
webrtc
:
:
ios
:
:
StdStringFromNSString
;
std
:
:
string
IOSResourcePath
(
std
:
:
string
name
std
:
:
string
extension
)
{
autoreleasepool
{
NSString
*
path
=
NSStringFromStdString
(
name
)
;
NSString
*
fileName
=
path
.
lastPathComponent
;
NSString
*
fileType
=
NSStringFromStdString
(
extension
)
;
NSString
*
pathString
=
[
[
NSBundle
mainBundle
]
pathForResource
:
fileName
ofType
:
fileType
]
;
return
StdStringFromNSString
(
pathString
)
;
}
}
std
:
:
string
IOSRootPath
(
)
{
autoreleasepool
{
NSBundle
*
mainBundle
=
[
NSBundle
mainBundle
]
;
return
StdStringFromNSString
(
mainBundle
.
bundlePath
)
+
"
/
"
;
}
}
std
:
:
string
IOSOutputPath
(
)
{
autoreleasepool
{
NSString
*
tempDir
=
NSTemporaryDirectory
(
)
;
if
(
tempDir
=
=
nil
)
tempDir
=
"
/
tmp
"
;
return
StdStringFromNSString
(
tempDir
)
;
}
}
}
}
#
endif
