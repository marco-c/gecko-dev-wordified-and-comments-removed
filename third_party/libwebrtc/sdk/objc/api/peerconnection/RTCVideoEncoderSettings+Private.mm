#
import
"
RTCVideoEncoderSettings
+
Private
.
h
"
#
import
"
helpers
/
NSString
+
StdString
.
h
"
implementation
RTC_OBJC_TYPE
(
RTCVideoEncoderSettings
)
(
Private
)
-
(
instancetype
)
initWithNativeVideoCodec
:
(
const
webrtc
:
:
VideoCodec
*
)
videoCodec
{
self
=
[
super
init
]
;
if
(
self
)
{
if
(
videoCodec
)
{
const
char
*
codecName
=
CodecTypeToPayloadString
(
videoCodec
-
>
codecType
)
;
self
.
name
=
[
NSString
stringWithUTF8String
:
codecName
]
;
self
.
width
=
videoCodec
-
>
width
;
self
.
height
=
videoCodec
-
>
height
;
self
.
startBitrate
=
videoCodec
-
>
startBitrate
;
self
.
maxBitrate
=
videoCodec
-
>
maxBitrate
;
self
.
minBitrate
=
videoCodec
-
>
minBitrate
;
self
.
maxFramerate
=
videoCodec
-
>
maxFramerate
;
self
.
qpMax
=
videoCodec
-
>
qpMax
;
self
.
mode
=
(
RTCVideoCodecMode
)
videoCodec
-
>
mode
;
}
}
return
self
;
}
-
(
webrtc
:
:
VideoCodec
)
nativeVideoCodec
{
webrtc
:
:
VideoCodec
videoCodec
;
videoCodec
.
width
=
self
.
width
;
videoCodec
.
height
=
self
.
height
;
videoCodec
.
startBitrate
=
self
.
startBitrate
;
videoCodec
.
maxBitrate
=
self
.
maxBitrate
;
videoCodec
.
minBitrate
=
self
.
minBitrate
;
videoCodec
.
maxBitrate
=
self
.
maxBitrate
;
videoCodec
.
qpMax
=
self
.
qpMax
;
videoCodec
.
mode
=
(
webrtc
:
:
VideoCodecMode
)
self
.
mode
;
return
videoCodec
;
}
end
