#
import
<
Foundation
/
Foundation
.
h
>
#
import
"
RTCWrappedNativeVideoDecoder
.
h
"
#
import
"
base
/
RTCMacros
.
h
"
implementation
RTC_OBJC_TYPE
(
RTCWrappedNativeVideoDecoder
)
{
std
:
:
unique_ptr
<
webrtc
:
:
VideoDecoder
>
_wrappedDecoder
;
}
-
(
instancetype
)
initWithNativeDecoder
:
(
std
:
:
unique_ptr
<
webrtc
:
:
VideoDecoder
>
)
decoder
{
if
(
self
=
[
super
init
]
)
{
_wrappedDecoder
=
std
:
:
move
(
decoder
)
;
}
return
self
;
}
-
(
std
:
:
unique_ptr
<
webrtc
:
:
VideoDecoder
>
)
releaseWrappedDecoder
{
return
std
:
:
move
(
_wrappedDecoder
)
;
}
end
