#
import
<
Foundation
/
Foundation
.
h
>
#
import
"
RTCMacros
.
h
"
#
import
"
RTCNativeVideoEncoder
.
h
"
#
import
"
RTCNativeVideoEncoderBuilder
+
Native
.
h
"
#
import
"
RTCVideoEncoderAV1
.
h
"
#
include
"
modules
/
video_coding
/
codecs
/
av1
/
libaom_av1_encoder
.
h
"
interface
RTC_OBJC_TYPE
(
RTCVideoEncoderAV1Builder
)
:
RTC_OBJC_TYPE
(
RTCNativeVideoEncoder
)
<
RTC_OBJC_TYPE
(
RTCNativeVideoEncoderBuilder
)
>
end
implementation
RTC_OBJC_TYPE
(
RTCVideoEncoderAV1Builder
)
-
(
std
:
:
unique_ptr
<
webrtc
:
:
VideoEncoder
>
)
build
:
(
const
webrtc
:
:
Environment
&
)
env
{
return
webrtc
:
:
CreateLibaomAv1Encoder
(
env
)
;
}
end
implementation
RTC_OBJC_TYPE
(
RTCVideoEncoderAV1
)
+
(
id
<
RTC_OBJC_TYPE
(
RTCVideoEncoder
)
>
)
av1Encoder
{
return
[
[
RTC_OBJC_TYPE
(
RTCVideoEncoderAV1Builder
)
alloc
]
init
]
;
}
+
(
bool
)
isSupported
{
return
true
;
}
end
