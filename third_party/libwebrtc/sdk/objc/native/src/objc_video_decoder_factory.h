#
ifndef
SDK_OBJC_NATIVE_SRC_OBJC_VIDEO_DECODER_FACTORY_H_
#
define
SDK_OBJC_NATIVE_SRC_OBJC_VIDEO_DECODER_FACTORY_H_
#
import
"
base
/
RTCMacros
.
h
"
#
include
"
api
/
video_codecs
/
video_decoder_factory
.
h
"
#
include
"
media
/
base
/
codec
.
h
"
protocol
RTC_OBJC_TYPE
(
RTCVideoDecoderFactory
)
;
namespace
webrtc
{
class
ObjCVideoDecoderFactory
:
public
VideoDecoderFactory
{
public
:
explicit
ObjCVideoDecoderFactory
(
id
<
RTC_OBJC_TYPE
(
RTCVideoDecoderFactory
)
>
)
;
~
ObjCVideoDecoderFactory
(
)
override
;
id
<
RTC_OBJC_TYPE
(
RTCVideoDecoderFactory
)
>
wrapped_decoder_factory
(
)
const
;
std
:
:
vector
<
SdpVideoFormat
>
GetSupportedFormats
(
)
const
override
;
std
:
:
unique_ptr
<
VideoDecoder
>
CreateVideoDecoder
(
const
SdpVideoFormat
&
format
)
override
;
private
:
id
<
RTC_OBJC_TYPE
(
RTCVideoDecoderFactory
)
>
decoder_factory_
;
}
;
}
#
endif
