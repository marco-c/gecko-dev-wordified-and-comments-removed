#
include
"
sdk
/
objc
/
native
/
src
/
objc_video_renderer
.
h
"
#
import
"
base
/
RTCVideoFrame
.
h
"
#
import
"
base
/
RTCVideoRenderer
.
h
"
#
import
"
sdk
/
objc
/
base
/
RTCMacros
.
h
"
#
include
"
sdk
/
objc
/
native
/
src
/
objc_video_frame
.
h
"
namespace
webrtc
{
ObjCVideoRenderer
:
:
ObjCVideoRenderer
(
id
<
RTC_OBJC_TYPE
(
RTCVideoRenderer
)
>
renderer
)
:
renderer_
(
renderer
)
size_
(
CGSizeZero
)
{
}
void
ObjCVideoRenderer
:
:
OnFrame
(
const
VideoFrame
&
nativeVideoFrame
)
{
RTC_OBJC_TYPE
(
RTCVideoFrame
)
*
videoFrame
=
ToObjCVideoFrame
(
nativeVideoFrame
)
;
CGSize
current_size
=
(
videoFrame
.
rotation
%
180
=
=
0
)
?
CGSizeMake
(
videoFrame
.
width
videoFrame
.
height
)
:
CGSizeMake
(
videoFrame
.
height
videoFrame
.
width
)
;
if
(
!
CGSizeEqualToSize
(
size_
current_size
)
)
{
size_
=
current_size
;
[
renderer_
setSize
:
size_
]
;
}
[
renderer_
renderFrame
:
videoFrame
]
;
}
}
