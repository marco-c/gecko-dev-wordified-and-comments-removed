#
import
"
ssl_certificate_verifier
.
h
"
#
include
"
rtc_base
/
buffer
.
h
"
namespace
{
class
SSLCertificateVerifierAdapter
final
:
public
webrtc
:
:
SSLCertificateVerifier
{
public
:
SSLCertificateVerifierAdapter
(
id
<
RTC_OBJC_TYPE
(
RTCSSLCertificateVerifier
)
>
objc_certificate_verifier
)
:
objc_certificate_verifier_
(
objc_certificate_verifier
)
{
RTC_DCHECK
(
objc_certificate_verifier_
!
=
nil
)
;
}
bool
Verify
(
const
webrtc
:
:
SSLCertificate
&
certificate
)
override
{
autoreleasepool
{
webrtc
:
:
Buffer
der_buffer
;
certificate
.
ToDER
(
&
der_buffer
)
;
NSData
*
serialized_certificate
=
[
[
NSData
alloc
]
initWithBytes
:
der_buffer
.
data
(
)
length
:
der_buffer
.
size
(
)
]
;
return
[
objc_certificate_verifier_
verify
:
serialized_certificate
]
;
}
}
private
:
id
<
RTC_OBJC_TYPE
(
RTCSSLCertificateVerifier
)
>
objc_certificate_verifier_
;
}
;
}
namespace
webrtc
{
std
:
:
unique_ptr
<
webrtc
:
:
SSLCertificateVerifier
>
ObjCToNativeCertificateVerifier
(
id
<
RTC_OBJC_TYPE
(
RTCSSLCertificateVerifier
)
>
objc_certificate_verifier
)
{
return
std
:
:
make_unique
<
SSLCertificateVerifierAdapter
>
(
objc_certificate_verifier
)
;
}
}
