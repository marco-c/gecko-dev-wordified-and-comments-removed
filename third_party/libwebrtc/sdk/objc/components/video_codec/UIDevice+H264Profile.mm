#
import
"
UIDevice
+
H264Profile
.
h
"
#
import
"
helpers
/
UIDevice
+
RTCDevice
.
h
"
#
include
<
algorithm
>
namespace
{
using
namespace
webrtc
:
:
H264
;
struct
SupportedH264Profile
{
const
RTCDeviceType
deviceType
;
const
ProfileLevelId
profile
;
}
;
constexpr
SupportedH264Profile
kH264MaxSupportedProfiles
[
]
=
{
{
RTCDeviceTypeIPhone11ProMax
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPhone11Pro
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPhone11
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPhoneXS
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPhoneXSMax
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPhoneXR
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPhoneX
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPhone8
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPhone8Plus
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPhone7
{
kProfileHigh
kLevel5_1
}
}
{
RTCDeviceTypeIPhone7Plus
{
kProfileHigh
kLevel5_1
}
}
{
RTCDeviceTypeIPhoneSE
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPhone6S
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPhone6SPlus
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPhone6
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPhone6Plus
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPhone5SGSM
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPhone5SGSM_CDMA
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPhone5GSM
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPhone5GSM_CDMA
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPhone5CGSM
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPhone5CGSM_CDMA
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPhone4S
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPodTouch7G
{
kProfileMain
kLevel4_1
}
}
{
RTCDeviceTypeIPodTouch6G
{
kProfileMain
kLevel4_1
}
}
{
RTCDeviceTypeIPodTouch5G
{
kProfileMain
kLevel3_1
}
}
{
RTCDeviceTypeIPadAir3Gen
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPadMini5Gen
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPadPro3Gen12Inch
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPadPro3Gen11Inch
{
kProfileHigh
kLevel5_2
}
}
{
RTCDeviceTypeIPad7Gen10Inch
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad2Wifi
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad2GSM
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad2CDMA
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad2Wifi2
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPadMiniWifi
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPadMiniGSM
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPadMiniGSM_CDMA
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad3Wifi
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad3GSM_CDMA
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad3GSM
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad4Wifi
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad4GSM
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad4GSM_CDMA
{
kProfileHigh
kLevel4_1
}
}
{
RTCDeviceTypeIPad5
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPad6
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadAirWifi
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadAirCellular
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadAirWifiCellular
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadAir2
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadMini2GWifi
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadMini2GCellular
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadMini2GWifiCellular
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadMini3
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadMini4
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadPro9Inch
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadPro12Inch
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadPro12Inch2
{
kProfileHigh
kLevel4_2
}
}
{
RTCDeviceTypeIPadPro10Inch
{
kProfileHigh
kLevel4_2
}
}
}
;
absl
:
:
optional
<
ProfileLevelId
>
FindMaxSupportedProfileForDevice
(
RTCDeviceType
deviceType
)
{
const
auto
*
result
=
std
:
:
find_if
(
std
:
:
begin
(
kH264MaxSupportedProfiles
)
std
:
:
end
(
kH264MaxSupportedProfiles
)
[
deviceType
]
(
const
SupportedH264Profile
&
supportedProfile
)
{
return
supportedProfile
.
deviceType
=
=
deviceType
;
}
)
;
if
(
result
!
=
std
:
:
end
(
kH264MaxSupportedProfiles
)
)
{
return
result
-
>
profile
;
}
return
absl
:
:
nullopt
;
}
}
implementation
UIDevice
(
H264Profile
)
+
(
absl
:
:
optional
<
webrtc
:
:
H264
:
:
ProfileLevelId
>
)
maxSupportedH264Profile
{
return
FindMaxSupportedProfileForDevice
(
[
self
deviceType
]
)
;
}
end
