package
org
.
webrtc
;
import
static
org
.
junit
.
Assert
.
assertEquals
;
import
static
org
.
mockito
.
Mockito
.
mock
;
import
android
.
support
.
test
.
InstrumentationRegistry
;
import
androidx
.
test
.
filters
.
SmallTest
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
Arrays
;
import
java
.
util
.
Collections
;
import
java
.
util
.
List
;
import
org
.
junit
.
Before
;
import
org
.
junit
.
Test
;
import
org
.
webrtc
.
RtpParameters
.
Encoding
;
import
org
.
webrtc
.
RtpTransceiver
.
RtpTransceiverInit
;
public
class
RtpTransceiverTest
{
private
PeerConnectionFactory
factory
;
private
PeerConnection
pc
;
Before
public
void
setUp
(
)
{
PeerConnectionFactory
.
initialize
(
PeerConnectionFactory
.
InitializationOptions
.
builder
(
InstrumentationRegistry
.
getTargetContext
(
)
)
.
setNativeLibraryName
(
TestConstants
.
NATIVE_LIBRARY
)
.
createInitializationOptions
(
)
)
;
factory
=
PeerConnectionFactory
.
builder
(
)
.
createPeerConnectionFactory
(
)
;
PeerConnection
.
RTCConfiguration
config
=
new
PeerConnection
.
RTCConfiguration
(
Arrays
.
asList
(
)
)
;
config
.
sdpSemantics
=
PeerConnection
.
SdpSemantics
.
UNIFIED_PLAN
;
pc
=
factory
.
createPeerConnection
(
config
mock
(
PeerConnection
.
Observer
.
class
)
)
;
}
Test
SmallTest
public
void
testSetRidInSimulcast
(
)
throws
Exception
{
List
<
Encoding
>
encodings
=
new
ArrayList
<
Encoding
>
(
)
;
encodings
.
add
(
new
Encoding
(
"
F
"
true
null
)
)
;
encodings
.
add
(
new
Encoding
(
"
H
"
true
null
)
)
;
RtpTransceiverInit
init
=
new
RtpTransceiverInit
(
RtpTransceiver
.
RtpTransceiverDirection
.
SEND_ONLY
Collections
.
emptyList
(
)
encodings
)
;
RtpTransceiver
transceiver
=
pc
.
addTransceiver
(
MediaStreamTrack
.
MediaType
.
MEDIA_TYPE_VIDEO
init
)
;
RtpSender
sender
=
transceiver
.
getSender
(
)
;
RtpParameters
parameters
=
sender
.
getParameters
(
)
;
List
<
Encoding
>
sendEncodings
=
parameters
.
getEncodings
(
)
;
assertEquals
(
2
sendEncodings
.
size
(
)
)
;
assertEquals
(
"
F
"
sendEncodings
.
get
(
0
)
.
getRid
(
)
)
;
assertEquals
(
"
H
"
sendEncodings
.
get
(
1
)
.
getRid
(
)
)
;
}
}
