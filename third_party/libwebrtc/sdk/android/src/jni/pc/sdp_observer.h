#
ifndef
SDK_ANDROID_SRC_JNI_PC_SDP_OBSERVER_H_
#
define
SDK_ANDROID_SRC_JNI_PC_SDP_OBSERVER_H_
#
include
<
memory
>
#
include
<
string
>
#
include
"
api
/
peer_connection_interface
.
h
"
#
include
"
sdk
/
android
/
src
/
jni
/
jni_helpers
.
h
"
#
include
"
sdk
/
android
/
src
/
jni
/
pc
/
session_description
.
h
"
#
include
"
sdk
/
media_constraints
.
h
"
namespace
webrtc
{
namespace
jni
{
class
CreateSdpObserverJni
:
public
CreateSessionDescriptionObserver
{
public
:
CreateSdpObserverJni
(
JNIEnv
*
env
const
JavaRef
<
jobject
>
&
j_observer
std
:
:
unique_ptr
<
MediaConstraints
>
constraints
)
;
~
CreateSdpObserverJni
(
)
override
;
MediaConstraints
*
constraints
(
)
{
return
constraints_
.
get
(
)
;
}
void
OnSuccess
(
SessionDescriptionInterface
*
desc
)
override
;
void
OnFailure
(
RTCError
error
)
override
;
private
:
const
ScopedJavaGlobalRef
<
jobject
>
j_observer_global_
;
std
:
:
unique_ptr
<
MediaConstraints
>
constraints_
;
}
;
class
SetSdpObserverJni
:
public
SetSessionDescriptionObserver
{
public
:
SetSdpObserverJni
(
JNIEnv
*
env
const
JavaRef
<
jobject
>
&
j_observer
std
:
:
unique_ptr
<
MediaConstraints
>
constraints
)
;
~
SetSdpObserverJni
(
)
override
;
MediaConstraints
*
constraints
(
)
{
return
constraints_
.
get
(
)
;
}
void
OnSuccess
(
)
override
;
void
OnFailure
(
RTCError
error
)
override
;
private
:
const
ScopedJavaGlobalRef
<
jobject
>
j_observer_global_
;
std
:
:
unique_ptr
<
MediaConstraints
>
constraints_
;
}
;
}
}
#
endif
