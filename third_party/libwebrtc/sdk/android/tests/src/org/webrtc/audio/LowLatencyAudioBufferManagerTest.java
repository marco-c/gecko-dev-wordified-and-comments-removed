package
org
.
webrtc
.
audio
;
import
static
org
.
junit
.
Assert
.
assertTrue
;
import
static
org
.
mockito
.
AdditionalMatchers
.
gt
;
import
static
org
.
mockito
.
AdditionalMatchers
.
lt
;
import
static
org
.
mockito
.
ArgumentMatchers
.
anyInt
;
import
static
org
.
mockito
.
Mockito
.
times
;
import
static
org
.
mockito
.
Mockito
.
verify
;
import
static
org
.
mockito
.
Mockito
.
when
;
import
android
.
media
.
AudioTrack
;
import
android
.
os
.
Build
;
import
androidx
.
test
.
runner
.
AndroidJUnit4
;
import
org
.
junit
.
Before
;
import
org
.
junit
.
Test
;
import
org
.
junit
.
runner
.
RunWith
;
import
org
.
mockito
.
Mock
;
import
org
.
mockito
.
MockitoAnnotations
;
import
org
.
robolectric
.
annotation
.
Config
;
import
org
.
webrtc
.
audio
.
LowLatencyAudioBufferManager
;
RunWith
(
AndroidJUnit4
.
class
)
Config
(
manifest
=
Config
.
NONE
sdk
=
Build
.
VERSION_CODES
.
O
)
public
class
LowLatencyAudioBufferManagerTest
{
Mock
private
AudioTrack
mockAudioTrack
;
private
LowLatencyAudioBufferManager
bufferManager
;
Before
public
void
setUp
(
)
{
MockitoAnnotations
.
initMocks
(
this
)
;
bufferManager
=
new
LowLatencyAudioBufferManager
(
)
;
}
Test
public
void
testBufferSizeDecrease
(
)
{
when
(
mockAudioTrack
.
getUnderrunCount
(
)
)
.
thenReturn
(
0
)
;
when
(
mockAudioTrack
.
getBufferSizeInFrames
(
)
)
.
thenReturn
(
100
)
;
when
(
mockAudioTrack
.
getPlaybackRate
(
)
)
.
thenReturn
(
1000
)
;
for
(
int
i
=
0
;
i
<
9
;
i
+
+
)
{
bufferManager
.
maybeAdjustBufferSize
(
mockAudioTrack
)
;
}
verify
(
mockAudioTrack
times
(
0
)
)
.
setBufferSizeInFrames
(
anyInt
(
)
)
;
bufferManager
.
maybeAdjustBufferSize
(
mockAudioTrack
)
;
verify
(
mockAudioTrack
times
(
1
)
)
.
setBufferSizeInFrames
(
90
)
;
}
Test
public
void
testBufferSizeNeverBelow10ms
(
)
{
when
(
mockAudioTrack
.
getUnderrunCount
(
)
)
.
thenReturn
(
0
)
;
when
(
mockAudioTrack
.
getBufferSizeInFrames
(
)
)
.
thenReturn
(
11
)
;
when
(
mockAudioTrack
.
getPlaybackRate
(
)
)
.
thenReturn
(
1000
)
;
for
(
int
i
=
0
;
i
<
10
;
i
+
+
)
{
bufferManager
.
maybeAdjustBufferSize
(
mockAudioTrack
)
;
}
verify
(
mockAudioTrack
times
(
0
)
)
.
setBufferSizeInFrames
(
lt
(
10
)
)
;
}
Test
public
void
testUnderrunBehavior
(
)
{
when
(
mockAudioTrack
.
getUnderrunCount
(
)
)
.
thenReturn
(
1
)
;
when
(
mockAudioTrack
.
getBufferSizeInFrames
(
)
)
.
thenReturn
(
100
)
;
when
(
mockAudioTrack
.
getPlaybackRate
(
)
)
.
thenReturn
(
1000
)
;
bufferManager
.
maybeAdjustBufferSize
(
mockAudioTrack
)
;
verify
(
mockAudioTrack
times
(
1
)
)
.
setBufferSizeInFrames
(
gt
(
100
)
)
;
when
(
mockAudioTrack
.
getUnderrunCount
(
)
)
.
thenReturn
(
0
)
;
for
(
int
i
=
0
;
i
<
10
;
i
+
+
)
{
bufferManager
.
maybeAdjustBufferSize
(
mockAudioTrack
)
;
}
verify
(
mockAudioTrack
times
(
1
)
)
.
setBufferSizeInFrames
(
anyInt
(
)
)
;
}
Test
public
void
testBufferIncrease
(
)
{
when
(
mockAudioTrack
.
getBufferSizeInFrames
(
)
)
.
thenReturn
(
100
)
;
when
(
mockAudioTrack
.
getPlaybackRate
(
)
)
.
thenReturn
(
1000
)
;
for
(
int
i
=
1
;
i
<
30
;
i
+
+
)
{
when
(
mockAudioTrack
.
getUnderrunCount
(
)
)
.
thenReturn
(
i
)
;
bufferManager
.
maybeAdjustBufferSize
(
mockAudioTrack
)
;
}
verify
(
mockAudioTrack
times
(
5
)
)
.
setBufferSizeInFrames
(
gt
(
100
)
)
;
}
}
