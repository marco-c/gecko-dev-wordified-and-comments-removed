package
org
.
webrtc
;
public
class
MediaSource
{
public
enum
State
{
INITIALIZING
LIVE
ENDED
MUTED
;
CalledByNative
(
"
State
"
)
static
State
fromNativeIndex
(
int
nativeIndex
)
{
return
values
(
)
[
nativeIndex
]
;
}
}
private
final
RefCountDelegate
refCountDelegate
;
private
long
nativeSource
;
public
MediaSource
(
long
nativeSource
)
{
refCountDelegate
=
new
RefCountDelegate
(
(
)
-
>
JniCommon
.
nativeReleaseRef
(
nativeSource
)
)
;
this
.
nativeSource
=
nativeSource
;
}
public
State
state
(
)
{
checkMediaSourceExists
(
)
;
return
nativeGetState
(
nativeSource
)
;
}
public
void
dispose
(
)
{
checkMediaSourceExists
(
)
;
refCountDelegate
.
release
(
)
;
nativeSource
=
0
;
}
protected
long
getNativeMediaSource
(
)
{
checkMediaSourceExists
(
)
;
return
nativeSource
;
}
void
runWithReference
(
Runnable
runnable
)
{
if
(
refCountDelegate
.
safeRetain
(
)
)
{
try
{
runnable
.
run
(
)
;
}
finally
{
refCountDelegate
.
release
(
)
;
}
}
}
private
void
checkMediaSourceExists
(
)
{
if
(
nativeSource
=
=
0
)
{
throw
new
IllegalStateException
(
"
MediaSource
has
been
disposed
.
"
)
;
}
}
private
static
native
State
nativeGetState
(
long
pointer
)
;
}
