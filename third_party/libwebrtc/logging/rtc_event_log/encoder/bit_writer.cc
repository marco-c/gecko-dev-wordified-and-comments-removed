#
include
"
logging
/
rtc_event_log
/
encoder
/
bit_writer
.
h
"
namespace
webrtc
{
namespace
{
size_t
BitsToBytes
(
size_t
bits
)
{
return
(
bits
/
8
)
+
(
bits
%
8
>
0
?
1
:
0
)
;
}
}
void
BitWriter
:
:
WriteBits
(
uint64_t
val
size_t
bit_count
)
{
RTC_DCHECK
(
valid_
)
;
const
bool
success
=
bit_writer_
.
WriteBits
(
val
bit_count
)
;
RTC_DCHECK
(
success
)
;
written_bits_
+
=
bit_count
;
}
void
BitWriter
:
:
WriteBits
(
absl
:
:
string_view
input
)
{
RTC_DCHECK
(
valid_
)
;
for
(
char
c
:
input
)
{
WriteBits
(
static_cast
<
unsigned
char
>
(
c
)
CHAR_BIT
)
;
}
}
std
:
:
string
BitWriter
:
:
GetString
(
)
{
RTC_DCHECK
(
valid_
)
;
valid_
=
false
;
buffer_
.
resize
(
BitsToBytes
(
written_bits_
)
)
;
written_bits_
=
0
;
std
:
:
string
result
;
std
:
:
swap
(
buffer_
result
)
;
return
result
;
}
}
