#
ifndef
LOGGING_RTC_EVENT_LOG_ENCODER_RTC_EVENT_LOG_ENCODER_V3_H_
#
define
LOGGING_RTC_EVENT_LOG_ENCODER_RTC_EVENT_LOG_ENCODER_V3_H_
#
include
<
cstdint
>
#
include
<
deque
>
#
include
<
functional
>
#
include
<
map
>
#
include
<
memory
>
#
include
<
string
>
#
include
"
api
/
array_view
.
h
"
#
include
"
api
/
rtc_event_log
/
rtc_event
.
h
"
#
include
"
logging
/
rtc_event_log
/
encoder
/
rtc_event_log_encoder
.
h
"
namespace
webrtc
{
class
RtcEventLogEncoderV3
final
:
public
RtcEventLogEncoder
{
public
:
RtcEventLogEncoderV3
(
)
;
~
RtcEventLogEncoderV3
(
)
override
=
default
;
std
:
:
string
EncodeBatch
(
std
:
:
deque
<
std
:
:
unique_ptr
<
RtcEvent
>
>
:
:
const_iterator
begin
std
:
:
deque
<
std
:
:
unique_ptr
<
RtcEvent
>
>
:
:
const_iterator
end
)
override
;
std
:
:
string
EncodeLogStart
(
int64_t
timestamp_us
int64_t
utc_time_us
)
override
;
std
:
:
string
EncodeLogEnd
(
int64_t
timestamp_us
)
override
;
private
:
std
:
:
map
<
RtcEvent
:
:
Type
std
:
:
function
<
std
:
:
string
(
rtc
:
:
ArrayView
<
const
RtcEvent
*
>
)
>
>
encoders_
;
}
;
}
#
endif
