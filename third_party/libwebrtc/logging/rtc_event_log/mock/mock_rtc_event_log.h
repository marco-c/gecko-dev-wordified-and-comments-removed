#
ifndef
LOGGING_RTC_EVENT_LOG_MOCK_MOCK_RTC_EVENT_LOG_H_
#
define
LOGGING_RTC_EVENT_LOG_MOCK_MOCK_RTC_EVENT_LOG_H_
#
include
<
memory
>
#
include
"
api
/
rtc_event_log
/
rtc_event_log
.
h
"
#
include
"
test
/
gmock
.
h
"
namespace
webrtc
{
class
MockRtcEventLog
:
public
RtcEventLog
{
public
:
MockRtcEventLog
(
)
;
~
MockRtcEventLog
(
)
override
;
MOCK_METHOD
(
bool
StartLogging
(
std
:
:
unique_ptr
<
RtcEventLogOutput
>
output
int64_t
output_period_ms
)
(
override
)
)
;
MOCK_METHOD
(
void
StopLogging
(
)
(
override
)
)
;
void
Log
(
std
:
:
unique_ptr
<
RtcEvent
>
event
)
override
{
return
LogProxy
(
event
.
get
(
)
)
;
}
MOCK_METHOD
(
void
LogProxy
(
RtcEvent
*
)
)
;
}
;
}
#
endif
