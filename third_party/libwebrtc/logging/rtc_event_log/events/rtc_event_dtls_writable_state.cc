#
include
"
logging
/
rtc_event_log
/
events
/
rtc_event_dtls_writable_state
.
h
"
#
include
"
absl
/
memory
/
memory
.
h
"
namespace
webrtc
{
RtcEventDtlsWritableState
:
:
RtcEventDtlsWritableState
(
bool
writable
)
:
writable_
(
writable
)
{
}
RtcEventDtlsWritableState
:
:
RtcEventDtlsWritableState
(
const
RtcEventDtlsWritableState
&
other
)
:
RtcEvent
(
other
.
timestamp_us_
)
writable_
(
other
.
writable_
)
{
}
RtcEventDtlsWritableState
:
:
~
RtcEventDtlsWritableState
(
)
=
default
;
RtcEvent
:
:
Type
RtcEventDtlsWritableState
:
:
GetType
(
)
const
{
return
RtcEvent
:
:
Type
:
:
DtlsWritableState
;
}
bool
RtcEventDtlsWritableState
:
:
IsConfigEvent
(
)
const
{
return
false
;
}
std
:
:
unique_ptr
<
RtcEventDtlsWritableState
>
RtcEventDtlsWritableState
:
:
Copy
(
)
const
{
return
absl
:
:
WrapUnique
<
RtcEventDtlsWritableState
>
(
new
RtcEventDtlsWritableState
(
*
this
)
)
;
}
}
