#
ifndef
LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_AUDIO_NETWORK_ADAPTATION_H_
#
define
LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_AUDIO_NETWORK_ADAPTATION_H_
#
include
<
memory
>
#
include
"
api
/
rtc_event_log
/
rtc_event
.
h
"
namespace
webrtc
{
struct
AudioEncoderRuntimeConfig
;
class
RtcEventAudioNetworkAdaptation
final
:
public
RtcEvent
{
public
:
static
constexpr
Type
kType
=
Type
:
:
AudioNetworkAdaptation
;
explicit
RtcEventAudioNetworkAdaptation
(
std
:
:
unique_ptr
<
AudioEncoderRuntimeConfig
>
config
)
;
~
RtcEventAudioNetworkAdaptation
(
)
override
;
Type
GetType
(
)
const
override
{
return
kType
;
}
bool
IsConfigEvent
(
)
const
override
{
return
false
;
}
std
:
:
unique_ptr
<
RtcEventAudioNetworkAdaptation
>
Copy
(
)
const
;
const
AudioEncoderRuntimeConfig
&
config
(
)
const
{
return
*
config_
;
}
private
:
RtcEventAudioNetworkAdaptation
(
const
RtcEventAudioNetworkAdaptation
&
other
)
;
const
std
:
:
unique_ptr
<
const
AudioEncoderRuntimeConfig
>
config_
;
}
;
}
#
endif
