#
ifndef
LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_FRAME_DECODED_H_
#
define
LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_FRAME_DECODED_H_
#
include
<
stdint
.
h
>
#
include
<
memory
>
#
include
"
api
/
rtc_event_log
/
rtc_event
.
h
"
#
include
"
api
/
video
/
video_codec_type
.
h
"
namespace
webrtc
{
class
RtcEventFrameDecoded
final
:
public
RtcEvent
{
public
:
RtcEventFrameDecoded
(
int64_t
render_time_ms
uint32_t
ssrc
int
width
int
height
VideoCodecType
codec
uint8_t
qp
)
;
~
RtcEventFrameDecoded
(
)
override
=
default
;
Type
GetType
(
)
const
override
;
bool
IsConfigEvent
(
)
const
override
;
std
:
:
unique_ptr
<
RtcEventFrameDecoded
>
Copy
(
)
const
;
int64_t
render_time_ms
(
)
const
{
return
render_time_ms_
;
}
uint32_t
ssrc
(
)
const
{
return
ssrc_
;
}
int
width
(
)
const
{
return
width_
;
}
int
height
(
)
const
{
return
height_
;
}
VideoCodecType
codec
(
)
const
{
return
codec_
;
}
uint8_t
qp
(
)
const
{
return
qp_
;
}
private
:
RtcEventFrameDecoded
(
const
RtcEventFrameDecoded
&
other
)
;
const
int64_t
render_time_ms_
;
const
uint32_t
ssrc_
;
const
int
width_
;
const
int
height_
;
const
VideoCodecType
codec_
;
const
uint8_t
qp_
;
}
;
}
#
endif
