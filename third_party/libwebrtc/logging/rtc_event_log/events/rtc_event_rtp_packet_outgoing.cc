#
include
"
logging
/
rtc_event_log
/
events
/
rtc_event_rtp_packet_outgoing
.
h
"
#
include
"
absl
/
memory
/
memory
.
h
"
#
include
"
modules
/
rtp_rtcp
/
source
/
rtp_packet_to_send
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
RtcEventRtpPacketOutgoing
:
:
RtcEventRtpPacketOutgoing
(
const
RtpPacketToSend
&
packet
int
probe_cluster_id
)
:
payload_length_
(
packet
.
payload_size
(
)
)
header_length_
(
packet
.
headers_size
(
)
)
padding_length_
(
packet
.
padding_size
(
)
)
probe_cluster_id_
(
probe_cluster_id
)
{
header_
.
CopyHeaderFrom
(
packet
)
;
RTC_DCHECK_EQ
(
packet
.
size
(
)
payload_length_
+
header_length_
+
padding_length_
)
;
}
RtcEventRtpPacketOutgoing
:
:
RtcEventRtpPacketOutgoing
(
const
RtcEventRtpPacketOutgoing
&
other
)
:
RtcEvent
(
other
.
timestamp_us_
)
payload_length_
(
other
.
payload_length_
)
header_length_
(
other
.
header_length_
)
padding_length_
(
other
.
padding_length_
)
probe_cluster_id_
(
other
.
probe_cluster_id_
)
{
header_
.
CopyHeaderFrom
(
other
.
header_
)
;
}
RtcEventRtpPacketOutgoing
:
:
~
RtcEventRtpPacketOutgoing
(
)
=
default
;
std
:
:
unique_ptr
<
RtcEventRtpPacketOutgoing
>
RtcEventRtpPacketOutgoing
:
:
Copy
(
)
const
{
return
absl
:
:
WrapUnique
<
RtcEventRtpPacketOutgoing
>
(
new
RtcEventRtpPacketOutgoing
(
*
this
)
)
;
}
}
