#
ifndef
LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_GENERIC_PACKET_SENT_H_
#
define
LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_GENERIC_PACKET_SENT_H_
#
include
<
memory
>
#
include
"
api
/
rtc_event_log
/
rtc_event
.
h
"
namespace
webrtc
{
class
RtcEventGenericPacketSent
final
:
public
RtcEvent
{
public
:
static
constexpr
Type
kType
=
Type
:
:
GenericPacketSent
;
RtcEventGenericPacketSent
(
int64_t
packet_number
size_t
overhead_length
size_t
payload_length
size_t
padding_length
)
;
~
RtcEventGenericPacketSent
(
)
override
;
std
:
:
unique_ptr
<
RtcEventGenericPacketSent
>
Copy
(
)
const
;
Type
GetType
(
)
const
override
{
return
kType
;
}
bool
IsConfigEvent
(
)
const
override
{
return
false
;
}
int64_t
packet_number
(
)
const
{
return
packet_number_
;
}
size_t
packet_length
(
)
const
{
return
overhead_length_
+
payload_length_
+
padding_length_
;
}
size_t
overhead_length
(
)
const
{
return
overhead_length_
;
}
size_t
payload_length
(
)
const
{
return
payload_length_
;
}
size_t
padding_length
(
)
const
{
return
padding_length_
;
}
private
:
RtcEventGenericPacketSent
(
const
RtcEventGenericPacketSent
&
packet
)
;
const
int64_t
packet_number_
;
const
size_t
overhead_length_
;
const
size_t
payload_length_
;
const
size_t
padding_length_
;
}
;
}
#
endif
