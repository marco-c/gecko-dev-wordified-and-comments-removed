#
ifndef
LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_ICE_CANDIDATE_PAIR_H_
#
define
LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_ICE_CANDIDATE_PAIR_H_
#
include
<
stdint
.
h
>
#
include
<
memory
>
#
include
"
api
/
rtc_event_log
/
rtc_event
.
h
"
namespace
webrtc
{
enum
class
IceCandidatePairEventType
{
kCheckSent
kCheckReceived
kCheckResponseSent
kCheckResponseReceived
kNumValues
}
;
class
RtcEventIceCandidatePair
final
:
public
RtcEvent
{
public
:
RtcEventIceCandidatePair
(
IceCandidatePairEventType
type
uint32_t
candidate_pair_id
uint32_t
transaction_id
)
;
~
RtcEventIceCandidatePair
(
)
override
;
Type
GetType
(
)
const
override
;
bool
IsConfigEvent
(
)
const
override
;
std
:
:
unique_ptr
<
RtcEventIceCandidatePair
>
Copy
(
)
const
;
IceCandidatePairEventType
type
(
)
const
{
return
type_
;
}
uint32_t
candidate_pair_id
(
)
const
{
return
candidate_pair_id_
;
}
uint32_t
transaction_id
(
)
const
{
return
transaction_id_
;
}
private
:
RtcEventIceCandidatePair
(
const
RtcEventIceCandidatePair
&
other
)
;
const
IceCandidatePairEventType
type_
;
const
uint32_t
candidate_pair_id_
;
const
uint32_t
transaction_id_
;
}
;
}
#
endif
