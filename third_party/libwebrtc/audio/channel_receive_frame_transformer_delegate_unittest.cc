#
include
"
audio
/
channel_receive_frame_transformer_delegate
.
h
"
#
include
<
memory
>
#
include
<
utility
>
#
include
"
api
/
test
/
mock_frame_transformer
.
h
"
#
include
"
api
/
test
/
mock_transformable_audio_frame
.
h
"
#
include
"
audio
/
channel_send_frame_transformer_delegate
.
h
"
#
include
"
test
/
gmock
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
{
using
:
:
testing
:
:
_
;
using
:
:
testing
:
:
ElementsAre
;
using
:
:
testing
:
:
NiceMock
;
using
:
:
testing
:
:
SaveArg
;
class
MockChannelReceive
{
public
:
MOCK_METHOD
(
void
ReceiveFrame
(
rtc
:
:
ArrayView
<
const
uint8_t
>
packet
const
RTPHeader
&
header
)
)
;
ChannelReceiveFrameTransformerDelegate
:
:
ReceiveFrameCallback
callback
(
)
{
return
[
this
]
(
rtc
:
:
ArrayView
<
const
uint8_t
>
packet
const
RTPHeader
&
header
)
{
ReceiveFrame
(
packet
header
)
;
}
;
}
}
;
TEST
(
ChannelReceiveFrameTransformerDelegateTest
RegisterTransformedFrameCallbackOnInit
)
{
rtc
:
:
scoped_refptr
<
MockFrameTransformer
>
mock_frame_transformer
=
rtc
:
:
make_ref_counted
<
MockFrameTransformer
>
(
)
;
rtc
:
:
scoped_refptr
<
ChannelReceiveFrameTransformerDelegate
>
delegate
=
rtc
:
:
make_ref_counted
<
ChannelReceiveFrameTransformerDelegate
>
(
ChannelReceiveFrameTransformerDelegate
:
:
ReceiveFrameCallback
(
)
mock_frame_transformer
nullptr
)
;
EXPECT_CALL
(
*
mock_frame_transformer
RegisterTransformedFrameCallback
)
;
delegate
-
>
Init
(
)
;
}
TEST
(
ChannelReceiveFrameTransformerDelegateTest
UnregisterTransformedFrameCallbackOnReset
)
{
rtc
:
:
scoped_refptr
<
MockFrameTransformer
>
mock_frame_transformer
=
rtc
:
:
make_ref_counted
<
MockFrameTransformer
>
(
)
;
rtc
:
:
scoped_refptr
<
ChannelReceiveFrameTransformerDelegate
>
delegate
=
rtc
:
:
make_ref_counted
<
ChannelReceiveFrameTransformerDelegate
>
(
ChannelReceiveFrameTransformerDelegate
:
:
ReceiveFrameCallback
(
)
mock_frame_transformer
nullptr
)
;
EXPECT_CALL
(
*
mock_frame_transformer
UnregisterTransformedFrameCallback
)
;
delegate
-
>
Reset
(
)
;
}
TEST
(
ChannelReceiveFrameTransformerDelegateTest
TransformRunsChannelReceiveCallback
)
{
rtc
:
:
AutoThread
main_thread
;
rtc
:
:
scoped_refptr
<
MockFrameTransformer
>
mock_frame_transformer
=
rtc
:
:
make_ref_counted
<
NiceMock
<
MockFrameTransformer
>
>
(
)
;
MockChannelReceive
mock_channel
;
rtc
:
:
scoped_refptr
<
ChannelReceiveFrameTransformerDelegate
>
delegate
=
rtc
:
:
make_ref_counted
<
ChannelReceiveFrameTransformerDelegate
>
(
mock_channel
.
callback
(
)
mock_frame_transformer
rtc
:
:
Thread
:
:
Current
(
)
)
;
rtc
:
:
scoped_refptr
<
TransformedFrameCallback
>
callback
;
EXPECT_CALL
(
*
mock_frame_transformer
RegisterTransformedFrameCallback
)
.
WillOnce
(
SaveArg
<
0
>
(
&
callback
)
)
;
delegate
-
>
Init
(
)
;
ASSERT_TRUE
(
callback
)
;
const
uint8_t
data
[
]
=
{
1
2
3
4
}
;
rtc
:
:
ArrayView
<
const
uint8_t
>
packet
(
data
sizeof
(
data
)
)
;
RTPHeader
header
;
EXPECT_CALL
(
mock_channel
ReceiveFrame
)
;
ON_CALL
(
*
mock_frame_transformer
Transform
)
.
WillByDefault
(
[
&
callback
]
(
std
:
:
unique_ptr
<
TransformableFrameInterface
>
frame
)
{
callback
-
>
OnTransformedFrame
(
std
:
:
move
(
frame
)
)
;
}
)
;
delegate
-
>
Transform
(
packet
header
1111
"
audio
/
opus
"
)
;
rtc
:
:
ThreadManager
:
:
ProcessAllMessageQueuesForTesting
(
)
;
}
TEST
(
ChannelReceiveFrameTransformerDelegateTest
TransformRunsChannelReceiveCallbackForSenderFrame
)
{
rtc
:
:
AutoThread
main_thread
;
rtc
:
:
scoped_refptr
<
MockFrameTransformer
>
mock_frame_transformer
=
rtc
:
:
make_ref_counted
<
NiceMock
<
MockFrameTransformer
>
>
(
)
;
MockChannelReceive
mock_channel
;
rtc
:
:
scoped_refptr
<
ChannelReceiveFrameTransformerDelegate
>
delegate
=
rtc
:
:
make_ref_counted
<
ChannelReceiveFrameTransformerDelegate
>
(
mock_channel
.
callback
(
)
mock_frame_transformer
rtc
:
:
Thread
:
:
Current
(
)
)
;
rtc
:
:
scoped_refptr
<
TransformedFrameCallback
>
callback
;
EXPECT_CALL
(
*
mock_frame_transformer
RegisterTransformedFrameCallback
)
.
WillOnce
(
SaveArg
<
0
>
(
&
callback
)
)
;
delegate
-
>
Init
(
)
;
ASSERT_TRUE
(
callback
)
;
const
uint8_t
data
[
]
=
{
1
2
3
4
}
;
rtc
:
:
ArrayView
<
const
uint8_t
>
packet
(
data
sizeof
(
data
)
)
;
RTPHeader
header
;
EXPECT_CALL
(
mock_channel
ReceiveFrame
(
ElementsAre
(
1
2
3
4
)
_
)
)
;
ON_CALL
(
*
mock_frame_transformer
Transform
)
.
WillByDefault
(
[
&
callback
]
(
std
:
:
unique_ptr
<
TransformableFrameInterface
>
frame
)
{
auto
*
transformed_frame
=
static_cast
<
TransformableAudioFrameInterface
*
>
(
frame
.
get
(
)
)
;
callback
-
>
OnTransformedFrame
(
CloneSenderAudioFrame
(
transformed_frame
)
)
;
}
)
;
delegate
-
>
Transform
(
packet
header
1111
"
audio
/
opus
"
)
;
rtc
:
:
ThreadManager
:
:
ProcessAllMessageQueuesForTesting
(
)
;
}
TEST
(
ChannelReceiveFrameTransformerDelegateTest
OnTransformedDoesNotRunChannelReceiveCallbackAfterReset
)
{
rtc
:
:
AutoThread
main_thread
;
rtc
:
:
scoped_refptr
<
MockFrameTransformer
>
mock_frame_transformer
=
rtc
:
:
make_ref_counted
<
testing
:
:
NiceMock
<
MockFrameTransformer
>
>
(
)
;
MockChannelReceive
mock_channel
;
rtc
:
:
scoped_refptr
<
ChannelReceiveFrameTransformerDelegate
>
delegate
=
rtc
:
:
make_ref_counted
<
ChannelReceiveFrameTransformerDelegate
>
(
mock_channel
.
callback
(
)
mock_frame_transformer
rtc
:
:
Thread
:
:
Current
(
)
)
;
delegate
-
>
Reset
(
)
;
EXPECT_CALL
(
mock_channel
ReceiveFrame
)
.
Times
(
0
)
;
delegate
-
>
OnTransformedFrame
(
std
:
:
make_unique
<
MockTransformableAudioFrame
>
(
)
)
;
rtc
:
:
ThreadManager
:
:
ProcessAllMessageQueuesForTesting
(
)
;
}
TEST
(
ChannelReceiveFrameTransformerDelegateTest
ShortCircuitingSkipsTransform
)
{
rtc
:
:
AutoThread
main_thread
;
rtc
:
:
scoped_refptr
<
MockFrameTransformer
>
mock_frame_transformer
=
rtc
:
:
make_ref_counted
<
testing
:
:
NiceMock
<
MockFrameTransformer
>
>
(
)
;
MockChannelReceive
mock_channel
;
rtc
:
:
scoped_refptr
<
ChannelReceiveFrameTransformerDelegate
>
delegate
=
rtc
:
:
make_ref_counted
<
ChannelReceiveFrameTransformerDelegate
>
(
mock_channel
.
callback
(
)
mock_frame_transformer
rtc
:
:
Thread
:
:
Current
(
)
)
;
const
uint8_t
data
[
]
=
{
1
2
3
4
}
;
rtc
:
:
ArrayView
<
const
uint8_t
>
packet
(
data
sizeof
(
data
)
)
;
RTPHeader
header
;
delegate
-
>
StartShortCircuiting
(
)
;
rtc
:
:
ThreadManager
:
:
ProcessAllMessageQueuesForTesting
(
)
;
EXPECT_CALL
(
*
mock_frame_transformer
Transform
)
.
Times
(
0
)
;
EXPECT_CALL
(
mock_channel
ReceiveFrame
)
;
delegate
-
>
Transform
(
packet
header
1111
"
audio
/
opus
"
)
;
}
}
}
