#
ifndef
AUDIO_VOIP_TEST_MOCK_TASK_QUEUE_H_
#
define
AUDIO_VOIP_TEST_MOCK_TASK_QUEUE_H_
#
include
<
memory
>
#
include
"
api
/
task_queue
/
task_queue_factory
.
h
"
#
include
"
test
/
gmock
.
h
"
namespace
webrtc
{
class
MockTaskQueue
:
public
TaskQueueBase
{
public
:
MockTaskQueue
(
)
:
current_
(
this
)
{
}
void
Delete
(
)
override
{
}
MOCK_METHOD
(
void
PostTask
(
std
:
:
unique_ptr
<
QueuedTask
>
)
(
override
)
)
;
MOCK_METHOD
(
void
PostDelayedTask
(
std
:
:
unique_ptr
<
QueuedTask
>
uint32_t
)
(
override
)
)
;
private
:
CurrentTaskQueueSetter
current_
;
}
;
class
MockTaskQueueFactory
:
public
TaskQueueFactory
{
public
:
explicit
MockTaskQueueFactory
(
MockTaskQueue
*
task_queue
)
:
task_queue_
(
task_queue
)
{
}
std
:
:
unique_ptr
<
TaskQueueBase
TaskQueueDeleter
>
CreateTaskQueue
(
absl
:
:
string_view
name
Priority
priority
)
const
override
{
return
std
:
:
unique_ptr
<
TaskQueueBase
TaskQueueDeleter
>
(
task_queue_
)
;
}
private
:
MockTaskQueue
*
task_queue_
;
}
;
}
#
endif
