#
ifndef
TEST_ENCODER_SETTINGS_H_
#
define
TEST_ENCODER_SETTINGS_H_
#
include
<
stddef
.
h
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
call
/
video_receive_stream
.
h
"
#
include
"
call
/
video_send_stream
.
h
"
#
include
"
video
/
config
/
video_encoder_config
.
h
"
namespace
webrtc
{
namespace
test
{
class
DefaultVideoStreamFactory
:
public
VideoEncoderConfig
:
:
VideoStreamFactoryInterface
{
public
:
DefaultVideoStreamFactory
(
)
;
static
const
size_t
kMaxNumberOfStreams
=
3
;
static
const
int
kMaxBitratePerStream
[
]
;
static
const
int
kDefaultMinBitratePerStream
[
]
;
private
:
std
:
:
vector
<
VideoStream
>
CreateEncoderStreams
(
const
FieldTrialsView
&
field_trials
int
frame_width
int
frame_height
const
webrtc
:
:
VideoEncoderConfig
&
encoder_config
)
override
;
}
;
std
:
:
vector
<
VideoStream
>
CreateVideoStreams
(
int
width
int
height
const
webrtc
:
:
VideoEncoderConfig
&
encoder_config
)
;
void
FillEncoderConfiguration
(
VideoCodecType
codec_type
size_t
num_streams
VideoEncoderConfig
*
configuration
)
;
VideoReceiveStreamInterface
:
:
Decoder
CreateMatchingDecoder
(
int
payload_type
const
std
:
:
string
&
payload_name
)
;
VideoReceiveStreamInterface
:
:
Decoder
CreateMatchingDecoder
(
const
VideoSendStream
:
:
Config
&
config
)
;
}
}
#
endif
