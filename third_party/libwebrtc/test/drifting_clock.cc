#
include
"
test
/
drifting_clock
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
namespace
test
{
constexpr
float
DriftingClock
:
:
kNoDrift
;
DriftingClock
:
:
DriftingClock
(
Clock
*
clock
float
speed
)
:
clock_
(
clock
)
drift_
(
speed
-
1
.
0f
)
start_time_
(
clock_
-
>
CurrentTime
(
)
)
{
RTC_CHECK
(
clock
)
;
RTC_CHECK_GT
(
speed
0
.
0f
)
;
}
TimeDelta
DriftingClock
:
:
Drift
(
)
const
{
auto
now
=
clock_
-
>
CurrentTime
(
)
;
RTC_DCHECK_GE
(
now
start_time_
)
;
return
(
now
-
start_time_
)
*
drift_
;
}
Timestamp
DriftingClock
:
:
Drift
(
Timestamp
timestamp
)
const
{
return
timestamp
+
Drift
(
)
/
1000
.
;
}
NtpTime
DriftingClock
:
:
Drift
(
NtpTime
ntp_time
)
const
{
const
double
kNtpFracPerMicroSecond
=
4294
.
967296
;
uint64_t
total_fractions
=
static_cast
<
uint64_t
>
(
ntp_time
)
;
total_fractions
+
=
Drift
(
)
.
us
(
)
*
kNtpFracPerMicroSecond
;
return
NtpTime
(
total_fractions
)
;
}
}
}
