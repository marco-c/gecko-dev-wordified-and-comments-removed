#
ifndef
TEST_TESTSUPPORT_FIXED_FPS_VIDEO_FRAME_WRITER_ADAPTER_H_
#
define
TEST_TESTSUPPORT_FIXED_FPS_VIDEO_FRAME_WRITER_ADAPTER_H_
#
include
<
memory
>
#
include
<
optional
>
#
include
"
api
/
test
/
video
/
video_frame_writer
.
h
"
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
api
/
units
/
timestamp
.
h
"
#
include
"
api
/
video
/
video_frame
.
h
"
#
include
"
system_wrappers
/
include
/
clock
.
h
"
namespace
webrtc
{
namespace
test
{
class
FixedFpsVideoFrameWriterAdapter
:
public
VideoFrameWriter
{
public
:
FixedFpsVideoFrameWriterAdapter
(
int
fps
Clock
*
clock
std
:
:
unique_ptr
<
VideoFrameWriter
>
delegate
)
;
~
FixedFpsVideoFrameWriterAdapter
(
)
override
;
bool
WriteFrame
(
const
webrtc
:
:
VideoFrame
&
frame
)
override
;
void
Close
(
)
override
;
private
:
bool
WriteMissedSlotsExceptLast
(
Timestamp
now
)
;
Timestamp
Now
(
)
const
;
const
TimeDelta
inter_frame_interval_
;
Clock
*
const
clock_
;
std
:
:
unique_ptr
<
VideoFrameWriter
>
delegate_
;
bool
is_closed_
=
false
;
Timestamp
last_frame_time_
=
Timestamp
:
:
MinusInfinity
(
)
;
std
:
:
optional
<
VideoFrame
>
last_frame_
=
std
:
:
nullopt
;
}
;
}
}
#
endif
