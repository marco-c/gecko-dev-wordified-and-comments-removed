#
if
defined
(
WEBRTC_IOS
)
#
import
<
Foundation
/
Foundation
.
h
>
#
include
<
string
.
h
>
#
import
"
sdk
/
objc
/
helpers
/
NSString
+
RTCStdString
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
namespace
webrtc
{
namespace
test
{
std
:
:
string
IOSResourcePath
(
absl
:
:
string_view
name
absl
:
:
string_view
extension
)
{
autoreleasepool
{
NSString
*
path
=
[
NSString
rtc_stringForAbslStringView
:
name
]
;
NSString
*
fileName
=
path
.
lastPathComponent
;
NSString
*
fileType
=
[
NSString
rtc_stringForAbslStringView
:
extension
]
;
NSString
*
pathString
=
[
[
NSBundle
mainBundle
]
pathForResource
:
fileName
ofType
:
fileType
]
;
return
[
NSString
rtc_stdStringForString
:
pathString
]
;
}
}
std
:
:
string
IOSRootPath
(
)
{
autoreleasepool
{
NSBundle
*
mainBundle
=
[
NSBundle
mainBundle
]
;
return
[
NSString
rtc_stdStringForString
:
mainBundle
.
bundlePath
]
+
"
/
"
;
}
}
std
:
:
string
IOSOutputPath
(
)
{
autoreleasepool
{
NSString
*
tempDir
=
NSTemporaryDirectory
(
)
;
if
(
tempDir
=
=
nil
)
tempDir
=
"
/
tmp
"
;
return
[
NSString
rtc_stdStringForString
:
tempDir
]
;
}
}
}
}
#
endif
