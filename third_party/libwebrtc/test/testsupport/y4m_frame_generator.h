#
ifndef
TEST_TESTSUPPORT_Y4M_FRAME_GENERATOR_H_
#
define
TEST_TESTSUPPORT_Y4M_FRAME_GENERATOR_H_
#
include
<
cstddef
>
#
include
<
memory
>
#
include
<
optional
>
#
include
<
string
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
api
/
test
/
frame_generator_interface
.
h
"
#
include
"
test
/
testsupport
/
frame_reader
.
h
"
namespace
webrtc
{
namespace
test
{
class
Y4mFrameGenerator
:
public
FrameGeneratorInterface
{
public
:
enum
class
RepeatMode
{
kSingle
kLoop
kPingPong
}
;
Y4mFrameGenerator
(
absl
:
:
string_view
filename
RepeatMode
repeat_mode
)
;
~
Y4mFrameGenerator
(
)
override
=
default
;
VideoFrameData
NextFrame
(
)
override
;
void
SkipNextFrame
(
)
override
;
void
ChangeResolution
(
size_t
width
size_t
height
)
override
;
Resolution
GetResolution
(
)
const
override
;
std
:
:
optional
<
int
>
fps
(
)
const
override
{
return
fps_
;
}
private
:
YuvFrameReaderImpl
:
:
RepeatMode
ToYuvFrameReaderRepeatMode
(
RepeatMode
repeat_mode
)
const
;
std
:
:
unique_ptr
<
webrtc
:
:
test
:
:
FrameReader
>
frame_reader_
=
nullptr
;
std
:
:
string
filename_
;
size_t
width_
;
size_t
height_
;
int
fps_
;
const
RepeatMode
repeat_mode_
;
}
;
}
}
#
endif
