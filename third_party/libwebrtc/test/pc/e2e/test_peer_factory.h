#
ifndef
TEST_PC_E2E_TEST_PEER_FACTORY_H_
#
define
TEST_PC_E2E_TEST_PEER_FACTORY_H_
#
include
<
map
>
#
include
<
memory
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
api
/
rtc_event_log
/
rtc_event_log_factory
.
h
"
#
include
"
api
/
test
/
pclf
/
media_configuration
.
h
"
#
include
"
api
/
test
/
pclf
/
media_quality_test_params
.
h
"
#
include
"
api
/
test
/
pclf
/
peer_configurer
.
h
"
#
include
"
api
/
test
/
peerconnection_quality_test_fixture
.
h
"
#
include
"
api
/
test
/
time_controller
.
h
"
#
include
"
modules
/
audio_device
/
include
/
test_audio_device
.
h
"
#
include
"
rtc_base
/
task_queue
.
h
"
#
include
"
test
/
pc
/
e2e
/
analyzer
/
video
/
video_quality_analyzer_injection_helper
.
h
"
#
include
"
test
/
pc
/
e2e
/
test_peer
.
h
"
namespace
webrtc
{
namespace
webrtc_pc_e2e
{
struct
RemotePeerAudioConfig
{
explicit
RemotePeerAudioConfig
(
AudioConfig
config
)
:
sampling_frequency_in_hz
(
config
.
sampling_frequency_in_hz
)
output_file_name
(
config
.
output_dump_file_name
)
{
}
static
absl
:
:
optional
<
RemotePeerAudioConfig
>
Create
(
absl
:
:
optional
<
AudioConfig
>
config
)
;
int
sampling_frequency_in_hz
;
absl
:
:
optional
<
std
:
:
string
>
output_file_name
;
}
;
class
TestPeerFactory
{
public
:
TestPeerFactory
(
rtc
:
:
Thread
*
signaling_thread
TimeController
&
time_controller
VideoQualityAnalyzerInjectionHelper
*
video_analyzer_helper
rtc
:
:
TaskQueue
*
task_queue
)
:
signaling_thread_
(
signaling_thread
)
time_controller_
(
time_controller
)
video_analyzer_helper_
(
video_analyzer_helper
)
task_queue_
(
task_queue
)
{
}
std
:
:
unique_ptr
<
TestPeer
>
CreateTestPeer
(
std
:
:
unique_ptr
<
PeerConfigurerImpl
>
configurer
std
:
:
unique_ptr
<
MockPeerConnectionObserver
>
observer
absl
:
:
optional
<
RemotePeerAudioConfig
>
remote_audio_config
absl
:
:
optional
<
EchoEmulationConfig
>
echo_emulation_config
)
;
private
:
rtc
:
:
Thread
*
signaling_thread_
;
TimeController
&
time_controller_
;
VideoQualityAnalyzerInjectionHelper
*
video_analyzer_helper_
;
rtc
:
:
TaskQueue
*
task_queue_
;
}
;
}
}
#
endif
