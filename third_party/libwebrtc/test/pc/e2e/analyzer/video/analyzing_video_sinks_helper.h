#
ifndef
TEST_PC_E2E_ANALYZER_VIDEO_ANALYZING_VIDEO_SINKS_HELPER_H_
#
define
TEST_PC_E2E_ANALYZER_VIDEO_ANALYZING_VIDEO_SINKS_HELPER_H_
#
include
<
list
>
#
include
<
map
>
#
include
<
memory
>
#
include
<
set
>
#
include
<
string
>
#
include
<
utility
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
test
/
peerconnection_quality_test_fixture
.
h
"
#
include
"
api
/
test
/
video
/
video_frame_writer
.
h
"
#
include
"
rtc_base
/
synchronization
/
mutex
.
h
"
#
include
"
rtc_base
/
thread_annotations
.
h
"
namespace
webrtc
{
namespace
webrtc_pc_e2e
{
class
AnalyzingVideoSinksHelper
{
public
:
void
AddConfig
(
absl
:
:
string_view
sender_peer_name
PeerConnectionE2EQualityTestFixture
:
:
VideoConfig
config
)
;
absl
:
:
optional
<
std
:
:
pair
<
std
:
:
string
PeerConnectionE2EQualityTestFixture
:
:
VideoConfig
>
>
GetPeerAndConfig
(
absl
:
:
string_view
stream_label
)
;
void
RemoveConfig
(
absl
:
:
string_view
stream_label
)
;
test
:
:
VideoFrameWriter
*
AddVideoWriter
(
std
:
:
unique_ptr
<
test
:
:
VideoFrameWriter
>
video_writer
)
;
void
CloseAndRemoveVideoWriters
(
std
:
:
set
<
test
:
:
VideoFrameWriter
*
>
writers_to_close
)
;
void
Clear
(
)
;
private
:
Mutex
mutex_
;
std
:
:
map
<
std
:
:
string
std
:
:
pair
<
std
:
:
string
PeerConnectionE2EQualityTestFixture
:
:
VideoConfig
>
>
video_configs_
RTC_GUARDED_BY
(
mutex_
)
;
std
:
:
list
<
std
:
:
unique_ptr
<
test
:
:
VideoFrameWriter
>
>
video_writers_
RTC_GUARDED_BY
(
mutex_
)
;
}
;
}
}
#
endif
