#
ifndef
TEST_PC_E2E_ANALYZER_VIDEO_ENCODED_IMAGE_DATA_INJECTOR_H_
#
define
TEST_PC_E2E_ANALYZER_VIDEO_ENCODED_IMAGE_DATA_INJECTOR_H_
#
include
<
cstdint
>
#
include
<
utility
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
video
/
encoded_image
.
h
"
namespace
webrtc
{
namespace
webrtc_pc_e2e
{
class
EncodedImageDataInjector
{
public
:
virtual
~
EncodedImageDataInjector
(
)
=
default
;
virtual
EncodedImage
InjectData
(
uint16_t
id
bool
discard
const
EncodedImage
&
source
)
=
0
;
}
;
struct
EncodedImageExtractionResult
{
absl
:
:
optional
<
uint16_t
>
id
;
EncodedImage
image
;
bool
discard
;
}
;
class
EncodedImageDataExtractor
{
public
:
virtual
~
EncodedImageDataExtractor
(
)
=
default
;
virtual
void
Start
(
int
expected_receivers_count
)
=
0
;
virtual
void
AddParticipantInCall
(
)
=
0
;
virtual
void
RemoveParticipantInCall
(
)
=
0
;
virtual
EncodedImageExtractionResult
ExtractData
(
const
EncodedImage
&
source
)
=
0
;
}
;
class
EncodedImageDataPropagator
:
public
EncodedImageDataInjector
public
EncodedImageDataExtractor
{
public
:
~
EncodedImageDataPropagator
(
)
override
=
default
;
}
;
}
}
#
endif
