#
ifndef
TEST_PC_E2E_ANALYZER_VIDEO_NAMES_COLLECTION_H_
#
define
TEST_PC_E2E_ANALYZER_VIDEO_NAMES_COLLECTION_H_
#
include
<
cstddef
>
#
include
<
map
>
#
include
<
optional
>
#
include
<
set
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
api
/
array_view
.
h
"
namespace
webrtc
{
class
NamesCollection
{
public
:
NamesCollection
(
)
=
default
;
explicit
NamesCollection
(
ArrayView
<
const
std
:
:
string
>
names
)
;
size_t
size
(
)
const
{
return
size_
;
}
size_t
GetKnownSize
(
)
const
{
return
names_
.
size
(
)
;
}
size_t
index
(
absl
:
:
string_view
name
)
const
{
return
index_
.
at
(
name
)
;
}
const
std
:
:
string
&
name
(
size_t
index
)
const
{
return
names_
.
at
(
index
)
;
}
bool
HasName
(
absl
:
:
string_view
name
)
const
;
size_t
AddIfAbsent
(
absl
:
:
string_view
name
)
;
std
:
:
optional
<
size_t
>
RemoveIfPresent
(
absl
:
:
string_view
name
)
;
std
:
:
set
<
size_t
>
GetPresentIndexes
(
)
const
;
std
:
:
set
<
size_t
>
GetAllIndexes
(
)
const
;
private
:
std
:
:
vector
<
std
:
:
string
>
names_
;
std
:
:
vector
<
bool
>
removed_
;
std
:
:
map
<
absl
:
:
string_view
size_t
>
index_
;
size_t
size_
=
0
;
}
;
}
#
endif
