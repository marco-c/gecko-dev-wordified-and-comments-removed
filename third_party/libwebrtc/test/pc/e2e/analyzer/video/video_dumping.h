#
ifndef
TEST_PC_E2E_ANALYZER_VIDEO_VIDEO_DUMPING_H_
#
define
TEST_PC_E2E_ANALYZER_VIDEO_VIDEO_DUMPING_H_
#
include
<
memory
>
#
include
<
string
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
test
/
peerconnection_quality_test_fixture
.
h
"
#
include
"
api
/
video
/
video_frame
.
h
"
#
include
"
api
/
video
/
video_sink_interface
.
h
"
#
include
"
test
/
testsupport
/
video_frame_writer
.
h
"
namespace
webrtc
{
namespace
webrtc_pc_e2e
{
class
VideoWriter
final
:
public
rtc
:
:
VideoSinkInterface
<
VideoFrame
>
{
public
:
VideoWriter
(
test
:
:
VideoFrameWriter
*
video_writer
int
sampling_modulo
)
;
VideoWriter
(
const
VideoWriter
&
)
=
delete
;
VideoWriter
&
operator
=
(
const
VideoWriter
&
)
=
delete
;
~
VideoWriter
(
)
override
=
default
;
void
OnFrame
(
const
VideoFrame
&
frame
)
override
;
private
:
test
:
:
VideoFrameWriter
*
const
video_writer_
;
const
int
sampling_modulo_
;
int64_t
frames_counter_
=
0
;
}
;
std
:
:
unique_ptr
<
test
:
:
VideoFrameWriter
>
CreateVideoFrameWriter
(
absl
:
:
string_view
file_name
absl
:
:
optional
<
std
:
:
string
>
frame_ids_dump_file_name
const
PeerConnectionE2EQualityTestFixture
:
:
VideoResolution
&
resolution
)
;
}
}
#
endif
