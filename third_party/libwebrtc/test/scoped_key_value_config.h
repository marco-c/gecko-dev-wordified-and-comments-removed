#
ifndef
TEST_SCOPED_KEY_VALUE_CONFIG_H_
#
define
TEST_SCOPED_KEY_VALUE_CONFIG_H_
#
include
<
functional
>
#
include
<
map
>
#
include
<
memory
>
#
include
<
string
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
api
/
field_trials_registry
.
h
"
#
include
"
test
/
field_trial
.
h
"
namespace
webrtc
{
namespace
test
{
class
ScopedKeyValueConfig
:
public
FieldTrialsRegistry
{
public
:
virtual
~
ScopedKeyValueConfig
(
)
;
ScopedKeyValueConfig
(
)
;
explicit
ScopedKeyValueConfig
(
absl
:
:
string_view
s
)
;
ScopedKeyValueConfig
(
ScopedKeyValueConfig
&
parent
absl
:
:
string_view
s
)
;
private
:
ScopedKeyValueConfig
(
ScopedKeyValueConfig
*
parent
absl
:
:
string_view
s
)
;
ScopedKeyValueConfig
*
GetRoot
(
ScopedKeyValueConfig
*
n
)
;
std
:
:
string
GetValue
(
absl
:
:
string_view
key
)
const
override
;
std
:
:
string
LookupRecurse
(
absl
:
:
string_view
key
)
const
;
ScopedKeyValueConfig
*
const
parent_
;
const
ScopedKeyValueConfig
*
leaf_
;
std
:
:
map
<
std
:
:
string
std
:
:
string
std
:
:
less
<
>
>
key_value_map_
;
std
:
:
unique_ptr
<
ScopedFieldTrials
>
scoped_field_trials_
;
}
;
}
}
#
endif
