#
ifndef
TEST_LOGGING_FILE_LOG_WRITER_H_
#
define
TEST_LOGGING_FILE_LOG_WRITER_H_
#
include
<
cstdio
>
#
include
<
memory
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
test
/
logging
/
log_writer
.
h
"
namespace
webrtc
{
namespace
webrtc_impl
{
class
FileLogWriter
final
:
public
RtcEventLogOutput
{
public
:
explicit
FileLogWriter
(
std
:
:
string
file_path
)
;
~
FileLogWriter
(
)
final
;
bool
IsActive
(
)
const
override
;
bool
Write
(
const
std
:
:
string
&
value
)
override
;
void
Flush
(
)
override
;
private
:
std
:
:
FILE
*
const
out_
;
}
;
}
class
FileLogWriterFactory
final
:
public
LogWriterFactoryInterface
{
public
:
explicit
FileLogWriterFactory
(
std
:
:
string
base_path
)
;
~
FileLogWriterFactory
(
)
final
;
std
:
:
unique_ptr
<
RtcEventLogOutput
>
Create
(
std
:
:
string
filename
)
override
;
private
:
const
std
:
:
string
base_path_
;
std
:
:
vector
<
std
:
:
unique_ptr
<
webrtc_impl
:
:
FileLogWriter
>
>
writers_
;
}
;
}
#
endif
