#
ifndef
TEST_RTP_FILE_READER_H_
#
define
TEST_RTP_FILE_READER_H_
#
include
<
set
>
#
include
<
string
>
#
include
"
absl
/
strings
/
string_view
.
h
"
namespace
webrtc
{
namespace
test
{
struct
RtpPacket
{
static
const
size_t
kMaxPacketBufferSize
=
3500
;
uint8_t
data
[
kMaxPacketBufferSize
]
;
size_t
length
;
size_t
original_length
;
uint32_t
time_ms
;
}
;
class
RtpFileReader
{
public
:
enum
FileFormat
{
kPcap
kRtpDump
kLengthPacketInterleaved
}
;
virtual
~
RtpFileReader
(
)
{
}
static
RtpFileReader
*
Create
(
FileFormat
format
const
uint8_t
*
data
size_t
size
const
std
:
:
set
<
uint32_t
>
&
ssrc_filter
)
;
static
RtpFileReader
*
Create
(
FileFormat
format
absl
:
:
string_view
filename
)
;
static
RtpFileReader
*
Create
(
FileFormat
format
absl
:
:
string_view
filename
const
std
:
:
set
<
uint32_t
>
&
ssrc_filter
)
;
virtual
bool
NextPacket
(
RtpPacket
*
packet
)
=
0
;
}
;
}
}
#
endif
