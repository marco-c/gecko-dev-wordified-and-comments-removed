#
include
"
modules
/
audio_coding
/
codecs
/
g722
/
audio_decoder_g722
.
h
"
#
include
"
test
/
fuzzers
/
audio_decoder_fuzzer
.
h
"
namespace
webrtc
{
void
FuzzOneInput
(
const
uint8_t
*
data
size_t
size
)
{
if
(
size
>
10000
|
|
size
<
1
)
{
return
;
}
std
:
:
unique_ptr
<
AudioDecoder
>
dec
;
size_t
num_channels
;
if
(
data
[
0
]
%
2
)
{
dec
=
std
:
:
make_unique
<
AudioDecoderG722Impl
>
(
)
;
num_channels
=
1
;
}
else
{
dec
=
std
:
:
make_unique
<
AudioDecoderG722StereoImpl
>
(
)
;
num_channels
=
2
;
}
const
int
sample_rate_hz
=
dec
-
>
SampleRateHz
(
)
;
const
size_t
allocated_ouput_size_samples
=
sample_rate_hz
/
10
*
num_channels
;
std
:
:
unique_ptr
<
int16_t
[
]
>
output
=
std
:
:
make_unique
<
int16_t
[
]
>
(
allocated_ouput_size_samples
)
;
FuzzAudioDecoder
(
DecoderFunctionType
:
:
kNormalDecode
data
size
dec
.
get
(
)
sample_rate_hz
allocated_ouput_size_samples
*
sizeof
(
int16_t
)
output
.
get
(
)
)
;
}
}
