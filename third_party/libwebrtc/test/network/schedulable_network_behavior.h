#
ifndef
TEST_NETWORK_SCHEDULABLE_NETWORK_BEHAVIOR_H_
#
define
TEST_NETWORK_SCHEDULABLE_NETWORK_BEHAVIOR_H_
#
include
"
api
/
sequence_checker
.
h
"
#
include
"
api
/
test
/
network_emulation
/
network_config_schedule
.
pb
.
h
"
#
include
"
api
/
test
/
simulated_network
.
h
"
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
api
/
units
/
timestamp
.
h
"
#
include
"
rtc_base
/
task_utils
/
repeating_task
.
h
"
#
include
"
rtc_base
/
thread_annotations
.
h
"
#
include
"
system_wrappers
/
include
/
clock
.
h
"
#
include
"
test
/
network
/
simulated_network
.
h
"
namespace
webrtc
{
class
SchedulableNetworkBehavior
:
public
SimulatedNetwork
{
public
:
SchedulableNetworkBehavior
(
network_behaviour
:
:
NetworkConfigSchedule
schedule
Clock
&
clock
)
;
bool
EnqueuePacket
(
PacketInFlightInfo
packet_info
)
override
;
private
:
TimeDelta
UpdateConfigAndReschedule
(
)
;
SequenceChecker
sequence_checker_
;
const
network_behaviour
:
:
NetworkConfigSchedule
schedule_
;
Timestamp
first_send_time_
RTC_GUARDED_BY
(
&
sequence_checker_
)
=
Timestamp
:
:
MinusInfinity
(
)
;
Clock
&
clock_
RTC_GUARDED_BY
(
&
sequence_checker_
)
;
BuiltInNetworkBehaviorConfig
config_
RTC_GUARDED_BY
(
&
sequence_checker_
)
;
int
next_schedule_index_
RTC_GUARDED_BY
(
&
sequence_checker_
)
=
0
;
TimeDelta
wrap_time_delta_
RTC_GUARDED_BY
(
&
sequence_checker_
)
=
TimeDelta
:
:
Zero
(
)
;
RepeatingTaskHandle
schedule_task_
RTC_GUARDED_BY
(
&
sequence_checker_
)
;
}
;
}
#
endif
