#
ifndef
TEST_WAIT_UNTIL_INTERNAL_H_
#
define
TEST_WAIT_UNTIL_INTERNAL_H_
#
include
<
string
>
#
include
"
absl
/
base
/
nullability
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
test
/
gmock
.
h
"
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
wait_until_internal
{
template
<
typename
T
typename
M
>
bool
ExplainMatchResult
(
const
M
&
matcher
const
T
&
value
:
:
testing
:
:
StringMatchResultListener
*
absl_nonnull
listener
absl
:
:
string_view
value_name
)
{
:
:
testing
:
:
Matcher
<
const
T
&
>
safe_matcher
=
:
:
testing
:
:
SafeMatcherCast
<
const
T
&
>
(
matcher
)
;
auto
*
ss
=
listener
-
>
stream
(
)
;
*
ss
<
<
"
Value
of
:
"
<
<
value_name
<
<
"
\
n
"
;
*
ss
<
<
"
Expected
:
"
;
safe_matcher
.
DescribeTo
(
ss
)
;
*
ss
<
<
"
\
nActual
:
"
;
:
:
testing
:
:
StringMatchResultListener
inner_listener
;
if
(
:
:
testing
:
:
ExplainMatchResult
(
safe_matcher
value
&
inner_listener
)
)
{
return
true
;
}
*
ss
<
<
:
:
testing
:
:
PrintToString
(
value
)
;
if
(
const
std
:
:
string
&
inner_message
=
inner_listener
.
str
(
)
;
!
inner_message
.
empty
(
)
)
{
*
ss
<
<
"
"
<
<
inner_message
;
}
return
false
;
}
}
}
#
endif
