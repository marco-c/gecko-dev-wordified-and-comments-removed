#
ifndef
TEST_MOCK_AUDIO_ENCODER_FACTORY_H_
#
define
TEST_MOCK_AUDIO_ENCODER_FACTORY_H_
#
include
<
memory
>
#
include
<
vector
>
#
include
"
api
/
audio_codecs
/
audio_encoder_factory
.
h
"
#
include
"
api
/
environment
/
environment
.
h
"
#
include
"
api
/
make_ref_counted
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
test
/
gmock
.
h
"
namespace
webrtc
{
class
MockAudioEncoderFactory
:
public
:
:
testing
:
:
NiceMock
<
AudioEncoderFactory
>
{
public
:
MOCK_METHOD
(
std
:
:
vector
<
AudioCodecSpec
>
GetSupportedEncoders
(
)
(
override
)
)
;
MOCK_METHOD
(
absl
:
:
optional
<
AudioCodecInfo
>
QueryAudioEncoder
(
const
SdpAudioFormat
&
format
)
(
override
)
)
;
MOCK_METHOD
(
std
:
:
unique_ptr
<
AudioEncoder
>
Create
(
const
Environment
&
const
SdpAudioFormat
&
Options
)
(
override
)
)
;
static
scoped_refptr
<
MockAudioEncoderFactory
>
CreateUnusedFactory
(
)
{
auto
factory
=
make_ref_counted
<
MockAudioEncoderFactory
>
(
)
;
EXPECT_CALL
(
*
factory
Create
)
.
Times
(
0
)
;
return
factory
;
}
static
scoped_refptr
<
MockAudioEncoderFactory
>
CreateEmptyFactory
(
)
{
return
make_ref_counted
<
MockAudioEncoderFactory
>
(
)
;
}
}
;
}
#
endif
