package
org
.
webrtc
.
native_test
;
import
android
.
os
.
Build
;
import
android
.
os
.
StrictMode
;
import
java
.
io
.
Closeable
;
public
class
StrictModeContext
implements
Closeable
{
private
static
class
Impl
extends
StrictModeContext
{
private
final
StrictMode
.
ThreadPolicy
mThreadPolicy
;
private
final
StrictMode
.
VmPolicy
mVmPolicy
;
private
Impl
(
StrictMode
.
ThreadPolicy
threadPolicy
StrictMode
.
VmPolicy
vmPolicy
)
{
mThreadPolicy
=
threadPolicy
;
mVmPolicy
=
vmPolicy
;
}
private
Impl
(
StrictMode
.
ThreadPolicy
threadPolicy
)
{
this
(
threadPolicy
null
)
;
}
private
Impl
(
StrictMode
.
VmPolicy
vmPolicy
)
{
this
(
null
vmPolicy
)
;
}
Override
public
void
close
(
)
{
if
(
mThreadPolicy
!
=
null
)
{
StrictMode
.
setThreadPolicy
(
mThreadPolicy
)
;
}
if
(
mVmPolicy
!
=
null
)
{
StrictMode
.
setVmPolicy
(
mVmPolicy
)
;
}
}
}
public
static
StrictModeContext
allowAllVmPolicies
(
)
{
StrictMode
.
VmPolicy
oldPolicy
=
StrictMode
.
getVmPolicy
(
)
;
StrictMode
.
setVmPolicy
(
StrictMode
.
VmPolicy
.
LAX
)
;
return
new
Impl
(
oldPolicy
)
;
}
public
static
StrictModeContext
allowAllThreadPolicies
(
)
{
StrictMode
.
ThreadPolicy
oldPolicy
=
StrictMode
.
getThreadPolicy
(
)
;
StrictMode
.
setThreadPolicy
(
StrictMode
.
ThreadPolicy
.
LAX
)
;
return
new
Impl
(
oldPolicy
)
;
}
public
static
StrictModeContext
allowDiskWrites
(
)
{
StrictMode
.
ThreadPolicy
oldPolicy
=
StrictMode
.
allowThreadDiskWrites
(
)
;
return
new
Impl
(
oldPolicy
)
;
}
public
static
StrictModeContext
allowDiskReads
(
)
{
StrictMode
.
ThreadPolicy
oldPolicy
=
StrictMode
.
allowThreadDiskReads
(
)
;
return
new
Impl
(
oldPolicy
)
;
}
public
static
StrictModeContext
allowSlowCalls
(
)
{
StrictMode
.
ThreadPolicy
oldPolicy
=
StrictMode
.
getThreadPolicy
(
)
;
StrictMode
.
setThreadPolicy
(
new
StrictMode
.
ThreadPolicy
.
Builder
(
oldPolicy
)
.
permitCustomSlowCalls
(
)
.
build
(
)
)
;
return
new
Impl
(
oldPolicy
)
;
}
public
static
StrictModeContext
allowUnbufferedIo
(
)
{
StrictMode
.
ThreadPolicy
oldPolicy
=
StrictMode
.
getThreadPolicy
(
)
;
if
(
Build
.
VERSION
.
SDK_INT
>
=
Build
.
VERSION_CODES
.
O
)
{
StrictMode
.
setThreadPolicy
(
new
StrictMode
.
ThreadPolicy
.
Builder
(
oldPolicy
)
.
permitUnbufferedIo
(
)
.
build
(
)
)
;
}
return
new
Impl
(
oldPolicy
)
;
}
Override
public
void
close
(
)
{
}
}
