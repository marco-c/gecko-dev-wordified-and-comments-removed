#
ifndef
TEST_PEER_SCENARIO_SCENARIO_CONNECTION_H_
#
define
TEST_PEER_SCENARIO_SCENARIO_CONNECTION_H_
#
include
<
functional
>
#
include
<
memory
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
candidate
.
h
"
#
include
"
api
/
environment
/
environment
.
h
"
#
include
"
api
/
jsep
.
h
"
#
include
"
p2p
/
base
/
transport_description
.
h
"
#
include
"
test
/
network
/
network_emulation_manager
.
h
"
#
include
"
test
/
scoped_key_value_config
.
h
"
namespace
webrtc
{
class
ScenarioIceConnection
{
public
:
class
IceConnectionObserver
{
public
:
virtual
void
OnPacketReceived
(
rtc
:
:
CopyOnWriteBuffer
packet
)
=
0
;
virtual
void
OnIceCandidates
(
const
std
:
:
string
&
mid
const
std
:
:
vector
<
Candidate
>
&
candidates
)
=
0
;
protected
:
~
IceConnectionObserver
(
)
=
default
;
}
;
static
std
:
:
unique_ptr
<
ScenarioIceConnection
>
Create
(
const
Environment
&
env
test
:
:
NetworkEmulationManagerImpl
*
net
IceConnectionObserver
*
observer
)
;
virtual
~
ScenarioIceConnection
(
)
=
default
;
virtual
void
SendRtpPacket
(
rtc
:
:
ArrayView
<
const
uint8_t
>
packet_view
)
=
0
;
virtual
void
SendRtcpPacket
(
rtc
:
:
ArrayView
<
const
uint8_t
>
packet_view
)
=
0
;
virtual
void
SetRemoteSdp
(
SdpType
type
const
std
:
:
string
&
remote_sdp
)
=
0
;
virtual
void
SetLocalSdp
(
SdpType
type
const
std
:
:
string
&
local_sdp
)
=
0
;
virtual
EmulatedEndpoint
*
endpoint
(
)
=
0
;
virtual
const
TransportDescription
&
transport_description
(
)
const
=
0
;
webrtc
:
:
test
:
:
ScopedKeyValueConfig
field_trials
;
}
;
}
#
endif
