#
ifndef
CALL_RTP_BITRATE_CONFIGURATOR_H_
#
define
CALL_RTP_BITRATE_CONFIGURATOR_H_
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
transport
/
bitrate_settings
.
h
"
#
include
"
api
/
units
/
data_rate
.
h
"
#
include
"
rtc_base
/
constructor_magic
.
h
"
namespace
webrtc
{
class
RtpBitrateConfigurator
{
public
:
explicit
RtpBitrateConfigurator
(
const
BitrateConstraints
&
bitrate_config
)
;
~
RtpBitrateConfigurator
(
)
;
BitrateConstraints
GetConfig
(
)
const
;
absl
:
:
optional
<
BitrateConstraints
>
UpdateWithSdpParameters
(
const
BitrateConstraints
&
bitrate_config_
)
;
absl
:
:
optional
<
BitrateConstraints
>
UpdateWithClientPreferences
(
const
BitrateSettings
&
bitrate_mask
)
;
absl
:
:
optional
<
BitrateConstraints
>
UpdateWithRelayCap
(
DataRate
cap
)
;
private
:
absl
:
:
optional
<
BitrateConstraints
>
UpdateConstraints
(
const
absl
:
:
optional
<
int
>
&
new_start
)
;
BitrateConstraints
bitrate_config_
;
BitrateSettings
bitrate_config_mask_
;
BitrateConstraints
base_bitrate_config_
;
DataRate
max_bitrate_over_relay_
=
DataRate
:
:
PlusInfinity
(
)
;
RTC_DISALLOW_COPY_AND_ASSIGN
(
RtpBitrateConfigurator
)
;
}
;
}
#
endif
