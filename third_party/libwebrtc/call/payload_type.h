#
ifndef
CALL_PAYLOAD_TYPE_H_
#
define
CALL_PAYLOAD_TYPE_H_
#
include
<
cstdint
>
#
include
<
string
>
#
include
"
api
/
rtc_error
.
h
"
#
include
"
media
/
base
/
codec
.
h
"
#
include
"
rtc_base
/
strong_alias
.
h
"
namespace
webrtc
{
class
PayloadType
:
public
StrongAlias
<
class
PayloadTypeTag
uint8_t
>
{
public
:
PayloadType
(
uint8_t
pt
)
{
value_
=
pt
;
}
constexpr
operator
uint8_t
(
)
const
&
{
return
value_
;
}
static
bool
IsValid
(
PayloadType
id
bool
rtcp_mux
)
{
if
(
rtcp_mux
&
&
(
id
>
63
&
&
id
<
96
)
)
{
return
false
;
}
#
if
defined
(
WEBRTC_MOZILLA_BUILD
)
return
id
<
=
127
;
#
else
return
id
>
=
0
&
&
id
<
=
127
;
#
endif
}
template
<
typename
Sink
>
friend
void
AbslStringify
(
Sink
&
sink
const
PayloadType
pt
)
{
absl
:
:
Format
(
&
sink
"
%
d
"
pt
.
value_
)
;
}
}
;
class
PayloadTypeSuggester
{
public
:
virtual
~
PayloadTypeSuggester
(
)
=
default
;
virtual
RTCErrorOr
<
PayloadType
>
SuggestPayloadType
(
const
std
:
:
string
&
mid
Codec
codec
)
=
0
;
virtual
RTCError
AddLocalMapping
(
const
std
:
:
string
&
mid
PayloadType
payload_type
const
Codec
&
codec
)
=
0
;
}
;
}
#
endif
