#
ifndef
CALL_SHARED_MODULE_THREAD_H_
#
define
CALL_SHARED_MODULE_THREAD_H_
#
include
"
modules
/
utility
/
include
/
process_thread
.
h
"
#
include
"
rtc_base
/
ref_count
.
h
"
namespace
webrtc
{
class
SharedModuleThread
:
public
rtc
:
:
RefCountInterface
{
protected
:
SharedModuleThread
(
std
:
:
unique_ptr
<
ProcessThread
>
process_thread
std
:
:
function
<
void
(
)
>
on_one_ref_remaining
)
;
friend
class
rtc
:
:
scoped_refptr
<
SharedModuleThread
>
;
~
SharedModuleThread
(
)
override
;
public
:
static
rtc
:
:
scoped_refptr
<
SharedModuleThread
>
Create
(
std
:
:
unique_ptr
<
ProcessThread
>
process_thread
std
:
:
function
<
void
(
)
>
on_one_ref_remaining
)
;
void
EnsureStarted
(
)
;
ProcessThread
*
process_thread
(
)
;
private
:
void
AddRef
(
)
const
override
;
rtc
:
:
RefCountReleaseStatus
Release
(
)
const
override
;
class
Impl
;
mutable
std
:
:
unique_ptr
<
Impl
>
impl_
;
}
;
}
#
endif
