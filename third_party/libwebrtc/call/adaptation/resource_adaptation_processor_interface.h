#
ifndef
CALL_ADAPTATION_RESOURCE_ADAPTATION_PROCESSOR_INTERFACE_H_
#
define
CALL_ADAPTATION_RESOURCE_ADAPTATION_PROCESSOR_INTERFACE_H_
#
include
<
map
>
#
include
<
vector
>
#
include
"
api
/
adaptation
/
resource
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
#
include
"
api
/
video
/
video_adaptation_counters
.
h
"
namespace
webrtc
{
class
ResourceLimitationsListener
{
public
:
virtual
~
ResourceLimitationsListener
(
)
;
virtual
void
OnResourceLimitationChanged
(
scoped_refptr
<
Resource
>
resource
const
std
:
:
map
<
scoped_refptr
<
Resource
>
VideoAdaptationCounters
>
&
resource_limitations
)
=
0
;
}
;
class
ResourceAdaptationProcessorInterface
{
public
:
virtual
~
ResourceAdaptationProcessorInterface
(
)
;
virtual
void
AddResourceLimitationsListener
(
ResourceLimitationsListener
*
limitations_listener
)
=
0
;
virtual
void
RemoveResourceLimitationsListener
(
ResourceLimitationsListener
*
limitations_listener
)
=
0
;
virtual
void
AddResource
(
scoped_refptr
<
Resource
>
resource
)
=
0
;
virtual
std
:
:
vector
<
scoped_refptr
<
Resource
>
>
GetResources
(
)
const
=
0
;
virtual
void
RemoveResource
(
scoped_refptr
<
Resource
>
resource
)
=
0
;
}
;
}
#
endif
