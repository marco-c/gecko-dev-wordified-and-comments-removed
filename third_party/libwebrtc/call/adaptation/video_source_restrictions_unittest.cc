#
include
"
call
/
adaptation
/
video_source_restrictions
.
h
"
#
include
<
optional
>
#
include
"
test
/
gtest
.
h
"
namespace
webrtc
{
namespace
{
const
size_t
kHdPixels
=
1280
*
720
;
const
VideoSourceRestrictions
kUnlimited
;
const
VideoSourceRestrictions
k15fps
(
std
:
:
nullopt
std
:
:
nullopt
15
.
0
)
;
const
VideoSourceRestrictions
kHd
(
kHdPixels
kHdPixels
std
:
:
nullopt
)
;
const
VideoSourceRestrictions
kHd15fps
(
kHdPixels
kHdPixels
15
.
0
)
;
const
VideoSourceRestrictions
kVga7fps
(
kHdPixels
/
2
kHdPixels
/
2
7
.
0
)
;
VideoSourceRestrictions
RestrictionsFromMaxPixelsPerFrame
(
size_t
max_pixels_per_frame
)
{
return
VideoSourceRestrictions
(
max_pixels_per_frame
std
:
:
nullopt
std
:
:
nullopt
)
;
}
VideoSourceRestrictions
RestrictionsFromMaxFrameRate
(
double
max_frame_rate
)
{
return
VideoSourceRestrictions
(
std
:
:
nullopt
std
:
:
nullopt
max_frame_rate
)
;
}
}
TEST
(
VideoSourceRestrictionsTest
DidIncreaseResolution
)
{
EXPECT_TRUE
(
DidIncreaseResolution
(
RestrictionsFromMaxPixelsPerFrame
(
10
)
RestrictionsFromMaxPixelsPerFrame
(
11
)
)
)
;
EXPECT_FALSE
(
DidIncreaseResolution
(
VideoSourceRestrictions
(
)
RestrictionsFromMaxPixelsPerFrame
(
10
)
)
)
;
EXPECT_TRUE
(
DidIncreaseResolution
(
RestrictionsFromMaxPixelsPerFrame
(
10
)
VideoSourceRestrictions
(
)
)
)
;
EXPECT_FALSE
(
DidIncreaseResolution
(
RestrictionsFromMaxPixelsPerFrame
(
10
)
RestrictionsFromMaxPixelsPerFrame
(
10
)
)
)
;
EXPECT_FALSE
(
DidIncreaseResolution
(
VideoSourceRestrictions
(
)
VideoSourceRestrictions
(
)
)
)
;
EXPECT_FALSE
(
DidIncreaseResolution
(
RestrictionsFromMaxPixelsPerFrame
(
10
)
RestrictionsFromMaxPixelsPerFrame
(
9
)
)
)
;
}
TEST
(
VideoSourceRestrictionsTest
DidDecreaseFrameRate
)
{
EXPECT_FALSE
(
DidDecreaseFrameRate
(
RestrictionsFromMaxFrameRate
(
10
)
RestrictionsFromMaxFrameRate
(
11
)
)
)
;
EXPECT_TRUE
(
DidDecreaseFrameRate
(
VideoSourceRestrictions
(
)
RestrictionsFromMaxFrameRate
(
10
)
)
)
;
EXPECT_FALSE
(
DidDecreaseFrameRate
(
RestrictionsFromMaxFrameRate
(
10
)
VideoSourceRestrictions
(
)
)
)
;
EXPECT_FALSE
(
DidDecreaseFrameRate
(
RestrictionsFromMaxFrameRate
(
10
)
RestrictionsFromMaxFrameRate
(
10
)
)
)
;
EXPECT_FALSE
(
DidDecreaseFrameRate
(
VideoSourceRestrictions
(
)
VideoSourceRestrictions
(
)
)
)
;
EXPECT_TRUE
(
DidDecreaseFrameRate
(
RestrictionsFromMaxFrameRate
(
10
)
RestrictionsFromMaxFrameRate
(
9
)
)
)
;
}
TEST
(
VideoSourceRestrictionsTest
DidRestrictionsChangeFalseForSame
)
{
EXPECT_FALSE
(
DidRestrictionsDecrease
(
kUnlimited
kUnlimited
)
)
;
EXPECT_FALSE
(
DidRestrictionsIncrease
(
kUnlimited
kUnlimited
)
)
;
EXPECT_FALSE
(
DidRestrictionsDecrease
(
kHd15fps
kHd15fps
)
)
;
EXPECT_FALSE
(
DidRestrictionsIncrease
(
kHd15fps
kHd15fps
)
)
;
}
TEST
(
VideoSourceRestrictions
DidRestrictionsIncreaseTrueWhenPixelsOrFrameRateDecreased
)
{
EXPECT_TRUE
(
DidRestrictionsIncrease
(
kUnlimited
kHd
)
)
;
EXPECT_TRUE
(
DidRestrictionsIncrease
(
kUnlimited
k15fps
)
)
;
EXPECT_TRUE
(
DidRestrictionsIncrease
(
kUnlimited
kHd15fps
)
)
;
EXPECT_TRUE
(
DidRestrictionsIncrease
(
kHd
kHd15fps
)
)
;
EXPECT_TRUE
(
DidRestrictionsIncrease
(
k15fps
kHd15fps
)
)
;
EXPECT_TRUE
(
DidRestrictionsIncrease
(
kHd15fps
kVga7fps
)
)
;
}
TEST
(
VideoSourceRestrictions
DidRestrictionsDecreaseTrueWhenPixelsOrFrameRateIncreased
)
{
EXPECT_TRUE
(
DidRestrictionsDecrease
(
kHd
kUnlimited
)
)
;
EXPECT_TRUE
(
DidRestrictionsDecrease
(
k15fps
kUnlimited
)
)
;
EXPECT_TRUE
(
DidRestrictionsDecrease
(
kHd15fps
kUnlimited
)
)
;
EXPECT_TRUE
(
DidRestrictionsDecrease
(
kHd15fps
kHd
)
)
;
EXPECT_TRUE
(
DidRestrictionsDecrease
(
kHd15fps
k15fps
)
)
;
EXPECT_TRUE
(
DidRestrictionsDecrease
(
kVga7fps
kHd15fps
)
)
;
}
TEST
(
VideoSourceRestrictions
DidRestrictionsChangeFalseWhenFrameRateAndPixelsChangeDifferently
)
{
EXPECT_FALSE
(
DidRestrictionsIncrease
(
kHd
k15fps
)
)
;
EXPECT_FALSE
(
DidRestrictionsDecrease
(
kHd
k15fps
)
)
;
}
TEST
(
VideoSourceRestrictions
UpdateMin
)
{
VideoSourceRestrictions
one
(
kHdPixels
/
2
kHdPixels
7
.
0
)
;
VideoSourceRestrictions
two
(
kHdPixels
kHdPixels
/
3
15
.
0
)
;
one
.
UpdateMin
(
two
)
;
EXPECT_EQ
(
one
.
max_pixels_per_frame
(
)
kHdPixels
/
2
)
;
EXPECT_EQ
(
one
.
target_pixels_per_frame
(
)
kHdPixels
/
3
)
;
EXPECT_EQ
(
one
.
max_frame_rate
(
)
7
.
0
)
;
two
.
UpdateMin
(
one
)
;
EXPECT_EQ
(
two
.
max_pixels_per_frame
(
)
kHdPixels
/
2
)
;
EXPECT_EQ
(
two
.
target_pixels_per_frame
(
)
kHdPixels
/
3
)
;
EXPECT_EQ
(
two
.
max_frame_rate
(
)
7
.
0
)
;
}
}
