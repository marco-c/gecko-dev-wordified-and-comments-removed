#
include
"
call
/
adaptation
/
test
/
fake_resource
.
h
"
#
include
<
string
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
api
/
adaptation
/
resource
.
h
"
#
include
"
api
/
make_ref_counted
.
h
"
#
include
"
api
/
scoped_refptr
.
h
"
namespace
webrtc
{
scoped_refptr
<
FakeResource
>
FakeResource
:
:
Create
(
absl
:
:
string_view
name
)
{
return
make_ref_counted
<
FakeResource
>
(
name
)
;
}
FakeResource
:
:
FakeResource
(
absl
:
:
string_view
name
)
:
Resource
(
)
name_
(
name
)
listener_
(
nullptr
)
{
}
FakeResource
:
:
~
FakeResource
(
)
{
}
void
FakeResource
:
:
SetUsageState
(
ResourceUsageState
usage_state
)
{
if
(
listener_
)
{
listener_
-
>
OnResourceUsageStateMeasured
(
scoped_refptr
<
Resource
>
(
this
)
usage_state
)
;
}
}
std
:
:
string
FakeResource
:
:
Name
(
)
const
{
return
name_
;
}
void
FakeResource
:
:
SetResourceListener
(
ResourceListener
*
listener
)
{
listener_
=
listener
;
}
}
