#
ifndef
COMMON_AUDIO_RESAMPLER_SINUSOIDAL_LINEAR_CHIRP_SOURCE_H_
#
define
COMMON_AUDIO_RESAMPLER_SINUSOIDAL_LINEAR_CHIRP_SOURCE_H_
#
include
"
common_audio
/
resampler
/
sinc_resampler
.
h
"
namespace
webrtc
{
class
SinusoidalLinearChirpSource
:
public
SincResamplerCallback
{
public
:
SinusoidalLinearChirpSource
(
int
sample_rate
size_t
samples
double
max_frequency
double
delay_samples
)
;
~
SinusoidalLinearChirpSource
(
)
override
{
}
SinusoidalLinearChirpSource
(
const
SinusoidalLinearChirpSource
&
)
=
delete
;
SinusoidalLinearChirpSource
&
operator
=
(
const
SinusoidalLinearChirpSource
&
)
=
delete
;
void
Run
(
size_t
frames
float
*
destination
)
override
;
double
Frequency
(
size_t
position
)
;
private
:
enum
{
kMinFrequency
=
5
}
;
int
sample_rate_
;
size_t
total_samples_
;
double
max_frequency_
;
double
k_
;
size_t
current_index_
;
double
delay_samples_
;
}
;
}
#
endif
