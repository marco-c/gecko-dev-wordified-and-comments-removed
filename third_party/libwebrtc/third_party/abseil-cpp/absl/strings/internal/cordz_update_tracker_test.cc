#
include
"
absl
/
strings
/
internal
/
cordz_update_tracker
.
h
"
#
include
<
array
>
#
include
<
thread
>
#
include
"
gmock
/
gmock
.
h
"
#
include
"
gtest
/
gtest
.
h
"
#
include
"
absl
/
base
/
attributes
.
h
"
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
synchronization
/
notification
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
cord_internal
{
namespace
{
using
:
:
testing
:
:
AnyOf
;
using
:
:
testing
:
:
Eq
;
using
Method
=
CordzUpdateTracker
:
:
MethodIdentifier
;
using
Methods
=
std
:
:
array
<
Method
Method
:
:
kNumMethods
>
;
Methods
AllMethods
(
)
{
return
Methods
{
Method
:
:
kUnknown
Method
:
:
kAppendCord
Method
:
:
kAppendExternalMemory
Method
:
:
kAppendString
Method
:
:
kAssignCord
Method
:
:
kAssignString
Method
:
:
kClear
Method
:
:
kConstructorCord
Method
:
:
kConstructorString
Method
:
:
kCordReader
Method
:
:
kFlatten
Method
:
:
kGetAppendRegion
Method
:
:
kMakeCordFromExternal
Method
:
:
kMoveAppendCord
Method
:
:
kMoveAssignCord
Method
:
:
kMovePrependCord
Method
:
:
kPrependCord
Method
:
:
kPrependString
Method
:
:
kRemovePrefix
Method
:
:
kRemoveSuffix
Method
:
:
kSubCord
}
;
}
TEST
(
CordzUpdateTracker
IsConstExprAndInitializesToZero
)
{
constexpr
CordzUpdateTracker
tracker
;
for
(
Method
method
:
AllMethods
(
)
)
{
ASSERT_THAT
(
tracker
.
Value
(
method
)
Eq
(
0
)
)
;
}
}
TEST
(
CordzUpdateTracker
LossyAdd
)
{
int64_t
n
=
1
;
CordzUpdateTracker
tracker
;
for
(
Method
method
:
AllMethods
(
)
)
{
tracker
.
LossyAdd
(
method
n
)
;
EXPECT_THAT
(
tracker
.
Value
(
method
)
Eq
(
n
)
)
;
n
+
=
2
;
}
}
TEST
(
CordzUpdateTracker
CopyConstructor
)
{
int64_t
n
=
1
;
CordzUpdateTracker
src
;
for
(
Method
method
:
AllMethods
(
)
)
{
src
.
LossyAdd
(
method
n
)
;
n
+
=
2
;
}
n
=
1
;
CordzUpdateTracker
tracker
(
src
)
;
for
(
Method
method
:
AllMethods
(
)
)
{
EXPECT_THAT
(
tracker
.
Value
(
method
)
Eq
(
n
)
)
;
n
+
=
2
;
}
}
TEST
(
CordzUpdateTracker
OperatorAssign
)
{
int64_t
n
=
1
;
CordzUpdateTracker
src
;
CordzUpdateTracker
tracker
;
for
(
Method
method
:
AllMethods
(
)
)
{
src
.
LossyAdd
(
method
n
)
;
n
+
=
2
;
}
n
=
1
;
tracker
=
src
;
for
(
Method
method
:
AllMethods
(
)
)
{
EXPECT_THAT
(
tracker
.
Value
(
method
)
Eq
(
n
)
)
;
n
+
=
2
;
}
}
TEST
(
CordzUpdateTracker
ThreadSanitizedValueCheck
)
{
absl
:
:
Notification
done
;
CordzUpdateTracker
tracker
;
std
:
:
thread
reader
(
[
&
done
&
tracker
]
{
while
(
!
done
.
HasBeenNotified
(
)
)
{
int
n
=
1
;
for
(
Method
method
:
AllMethods
(
)
)
{
EXPECT_THAT
(
tracker
.
Value
(
method
)
AnyOf
(
Eq
(
n
)
Eq
(
0
)
)
)
;
n
+
=
2
;
}
}
int
n
=
1
;
for
(
Method
method
:
AllMethods
(
)
)
{
EXPECT_THAT
(
tracker
.
Value
(
method
)
Eq
(
n
)
)
;
n
+
=
2
;
}
}
)
;
int64_t
n
=
1
;
for
(
Method
method
:
AllMethods
(
)
)
{
tracker
.
LossyAdd
(
method
n
)
;
n
+
=
2
;
}
done
.
Notify
(
)
;
reader
.
join
(
)
;
}
}
}
ABSL_NAMESPACE_END
}
