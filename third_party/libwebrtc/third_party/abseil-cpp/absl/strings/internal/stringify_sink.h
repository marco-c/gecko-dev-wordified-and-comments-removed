#
ifndef
ABSL_STRINGS_INTERNAL_STRINGIFY_SINK_H_
#
define
ABSL_STRINGS_INTERNAL_STRINGIFY_SINK_H_
#
include
<
string
>
#
include
<
type_traits
>
#
include
<
utility
>
#
include
"
absl
/
strings
/
string_view
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
strings_internal
{
class
StringifySink
{
public
:
void
Append
(
size_t
count
char
ch
)
;
void
Append
(
string_view
v
)
;
friend
void
AbslFormatFlush
(
StringifySink
*
sink
absl
:
:
string_view
v
)
{
sink
-
>
Append
(
v
)
;
}
private
:
template
<
typename
T
>
friend
string_view
ExtractStringification
(
StringifySink
&
sink
const
T
&
v
)
;
std
:
:
string
buffer_
;
}
;
template
<
typename
T
>
string_view
ExtractStringification
(
StringifySink
&
sink
const
T
&
v
)
{
AbslStringify
(
sink
v
)
;
return
sink
.
buffer_
;
}
}
ABSL_NAMESPACE_END
}
#
endif
