#
ifndef
ABSL_SYNCHRONIZATION_BLOCKING_COUNTER_H_
#
define
ABSL_SYNCHRONIZATION_BLOCKING_COUNTER_H_
#
include
"
absl
/
base
/
thread_annotations
.
h
"
#
include
"
absl
/
synchronization
/
mutex
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
class
BlockingCounter
{
public
:
explicit
BlockingCounter
(
int
initial_count
)
:
count_
(
initial_count
)
num_waiting_
(
0
)
{
}
BlockingCounter
(
const
BlockingCounter
&
)
=
delete
;
BlockingCounter
&
operator
=
(
const
BlockingCounter
&
)
=
delete
;
bool
DecrementCount
(
)
;
void
Wait
(
)
;
private
:
Mutex
lock_
;
int
count_
ABSL_GUARDED_BY
(
lock_
)
;
int
num_waiting_
ABSL_GUARDED_BY
(
lock_
)
;
}
;
ABSL_NAMESPACE_END
}
#
endif
