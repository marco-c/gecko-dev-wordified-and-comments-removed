#
ifndef
ABSL_SYNCHRONIZATION_BARRIER_H_
#
define
ABSL_SYNCHRONIZATION_BARRIER_H_
#
include
"
absl
/
base
/
thread_annotations
.
h
"
#
include
"
absl
/
synchronization
/
mutex
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
class
Barrier
{
public
:
explicit
Barrier
(
int
num_threads
)
:
num_to_block_
(
num_threads
)
num_to_exit_
(
num_threads
)
{
}
Barrier
(
const
Barrier
&
)
=
delete
;
Barrier
&
operator
=
(
const
Barrier
&
)
=
delete
;
bool
Block
(
)
;
private
:
Mutex
lock_
;
int
num_to_block_
ABSL_GUARDED_BY
(
lock_
)
;
int
num_to_exit_
ABSL_GUARDED_BY
(
lock_
)
;
}
;
ABSL_NAMESPACE_END
}
#
endif
