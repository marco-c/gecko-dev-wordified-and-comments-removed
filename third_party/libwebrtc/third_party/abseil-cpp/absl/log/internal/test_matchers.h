#
ifndef
ABSL_LOG_INTERNAL_TEST_MATCHERS_H_
#
define
ABSL_LOG_INTERNAL_TEST_MATCHERS_H_
#
include
<
iosfwd
>
#
include
<
sstream
>
#
include
<
string
>
#
include
"
gmock
/
gmock
.
h
"
#
include
"
gtest
/
gtest
.
h
"
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
base
/
log_severity
.
h
"
#
include
"
absl
/
log
/
internal
/
test_helpers
.
h
"
#
include
"
absl
/
log
/
log_entry
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
absl
/
time
/
time
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
log_internal
{
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
AsString
(
const
:
:
testing
:
:
Matcher
<
const
std
:
:
string
&
>
&
str_matcher
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
SourceFilename
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
&
source_filename
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
SourceBasename
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
&
source_basename
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
SourceLine
(
const
:
:
testing
:
:
Matcher
<
int
>
&
source_line
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
Prefix
(
const
:
:
testing
:
:
Matcher
<
bool
>
&
prefix
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
LogSeverity
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
LogSeverity
>
&
log_severity
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
Timestamp
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
Time
>
&
timestamp
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
TimestampInMatchWindow
(
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
ThreadID
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
LogEntry
:
:
tid_t
>
&
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
TextMessageWithPrefixAndNewline
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
&
text_message_with_prefix_and_newline
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
TextMessageWithPrefix
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
&
text_message_with_prefix
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
TextMessage
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
&
text_message
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
TextPrefix
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
&
text_prefix
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
Verbosity
(
const
:
:
testing
:
:
Matcher
<
int
>
&
verbosity
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
Stacktrace
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
&
stacktrace
)
;
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
MatchesOstream
(
const
std
:
:
ostringstream
&
stream
)
;
:
:
testing
:
:
Matcher
<
const
std
:
:
string
&
>
DeathTestValidateExpectations
(
)
;
:
:
testing
:
:
Matcher
<
const
absl
:
:
LogEntry
&
>
RawEncodedMessage
(
const
:
:
testing
:
:
Matcher
<
absl
:
:
string_view
>
&
raw_encoded_message
)
;
#
define
ENCODED_MESSAGE
(
message_matcher
)
:
:
testing
:
:
_
}
ABSL_NAMESPACE_END
}
#
endif
