#
ifndef
ABSL_TYPES_BAD_OPTIONAL_ACCESS_H_
#
define
ABSL_TYPES_BAD_OPTIONAL_ACCESS_H_
#
include
<
stdexcept
>
#
include
"
absl
/
base
/
config
.
h
"
#
ifdef
ABSL_USES_STD_OPTIONAL
#
include
<
optional
>
namespace
absl
{
ABSL_NAMESPACE_BEGIN
using
std
:
:
bad_optional_access
;
ABSL_NAMESPACE_END
}
#
else
namespace
absl
{
ABSL_NAMESPACE_BEGIN
class
bad_optional_access
:
public
std
:
:
exception
{
public
:
bad_optional_access
(
)
=
default
;
~
bad_optional_access
(
)
override
;
const
char
*
what
(
)
const
noexcept
override
;
}
;
namespace
optional_internal
{
[
[
noreturn
]
]
ABSL_DLL
void
throw_bad_optional_access
(
)
;
}
ABSL_NAMESPACE_END
}
#
endif
#
endif
