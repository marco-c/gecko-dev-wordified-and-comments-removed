#
include
"
absl
/
profiling
/
internal
/
periodic_sampler
.
h
"
#
include
<
atomic
>
#
include
"
absl
/
profiling
/
internal
/
exponential_biased
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
profiling_internal
{
int64_t
PeriodicSamplerBase
:
:
GetExponentialBiased
(
int
period
)
noexcept
{
return
rng_
.
GetStride
(
period
)
;
}
bool
PeriodicSamplerBase
:
:
SubtleConfirmSample
(
)
noexcept
{
int
current_period
=
period
(
)
;
if
(
ABSL_PREDICT_FALSE
(
current_period
<
2
)
)
{
stride_
=
0
;
return
current_period
=
=
1
;
}
if
(
ABSL_PREDICT_FALSE
(
stride_
=
=
1
)
)
{
stride_
=
static_cast
<
uint64_t
>
(
-
GetExponentialBiased
(
current_period
)
)
;
if
(
static_cast
<
int64_t
>
(
stride_
)
<
-
1
)
{
+
+
stride_
;
return
false
;
}
}
stride_
=
static_cast
<
uint64_t
>
(
-
GetExponentialBiased
(
current_period
)
)
;
return
true
;
}
}
ABSL_NAMESPACE_END
}
