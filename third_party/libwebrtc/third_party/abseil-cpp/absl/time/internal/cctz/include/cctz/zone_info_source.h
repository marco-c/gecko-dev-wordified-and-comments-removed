#
ifndef
ABSL_TIME_INTERNAL_CCTZ_ZONE_INFO_SOURCE_H_
#
define
ABSL_TIME_INTERNAL_CCTZ_ZONE_INFO_SOURCE_H_
#
include
<
cstddef
>
#
include
<
functional
>
#
include
<
memory
>
#
include
<
string
>
#
include
"
absl
/
base
/
config
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
time_internal
{
namespace
cctz
{
class
ZoneInfoSource
{
public
:
virtual
~
ZoneInfoSource
(
)
;
virtual
std
:
:
size_t
Read
(
void
*
ptr
std
:
:
size_t
size
)
=
0
;
virtual
int
Skip
(
std
:
:
size_t
offset
)
=
0
;
virtual
std
:
:
string
Version
(
)
const
;
}
;
}
}
ABSL_NAMESPACE_END
}
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
time_internal
{
namespace
cctz_extension
{
using
ZoneInfoSourceFactory
=
std
:
:
unique_ptr
<
absl
:
:
time_internal
:
:
cctz
:
:
ZoneInfoSource
>
(
*
)
(
const
std
:
:
string
&
const
std
:
:
function
<
std
:
:
unique_ptr
<
absl
:
:
time_internal
:
:
cctz
:
:
ZoneInfoSource
>
(
const
std
:
:
string
&
)
>
&
)
;
extern
ZoneInfoSourceFactory
zone_info_source_factory
;
}
}
ABSL_NAMESPACE_END
}
#
endif
