#
ifndef
ABSL_TIME_INTERNAL_CCTZ_TIME_ZONE_POSIX_H_
#
define
ABSL_TIME_INTERNAL_CCTZ_TIME_ZONE_POSIX_H_
#
include
<
cstdint
>
#
include
<
string
>
#
include
"
absl
/
base
/
config
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
time_internal
{
namespace
cctz
{
struct
PosixTransition
{
enum
DateFormat
{
J
N
M
}
;
struct
Date
{
struct
NonLeapDay
{
std
:
:
int_fast16_t
day
;
}
;
struct
Day
{
std
:
:
int_fast16_t
day
;
}
;
struct
MonthWeekWeekday
{
std
:
:
int_fast8_t
month
;
std
:
:
int_fast8_t
week
;
std
:
:
int_fast8_t
weekday
;
}
;
DateFormat
fmt
;
union
{
NonLeapDay
j
;
Day
n
;
MonthWeekWeekday
m
;
}
;
}
;
struct
Time
{
std
:
:
int_fast32_t
offset
;
}
;
Date
date
;
Time
time
;
}
;
struct
PosixTimeZone
{
std
:
:
string
std_abbr
;
std
:
:
int_fast32_t
std_offset
;
std
:
:
string
dst_abbr
;
std
:
:
int_fast32_t
dst_offset
;
PosixTransition
dst_start
;
PosixTransition
dst_end
;
}
;
bool
ParsePosixSpec
(
const
std
:
:
string
&
spec
PosixTimeZone
*
res
)
;
}
}
ABSL_NAMESPACE_END
}
#
endif
