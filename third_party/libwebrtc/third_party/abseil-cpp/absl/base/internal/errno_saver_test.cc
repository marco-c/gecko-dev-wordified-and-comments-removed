#
include
"
absl
/
base
/
internal
/
errno_saver
.
h
"
#
include
<
cerrno
>
#
include
"
gmock
/
gmock
.
h
"
#
include
"
gtest
/
gtest
.
h
"
#
include
"
absl
/
base
/
internal
/
strerror
.
h
"
namespace
{
using
:
:
testing
:
:
Eq
;
struct
ErrnoPrinter
{
int
no
;
}
;
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
os
ErrnoPrinter
ep
)
{
return
os
<
<
absl
:
:
base_internal
:
:
StrError
(
ep
.
no
)
<
<
"
[
"
<
<
ep
.
no
<
<
"
]
"
;
}
bool
operator
=
=
(
ErrnoPrinter
one
ErrnoPrinter
two
)
{
return
one
.
no
=
=
two
.
no
;
}
TEST
(
ErrnoSaverTest
Works
)
{
errno
=
EDOM
;
{
absl
:
:
base_internal
:
:
ErrnoSaver
errno_saver
;
EXPECT_THAT
(
ErrnoPrinter
{
errno
}
Eq
(
ErrnoPrinter
{
EDOM
}
)
)
;
errno
=
ERANGE
;
EXPECT_THAT
(
ErrnoPrinter
{
errno
}
Eq
(
ErrnoPrinter
{
ERANGE
}
)
)
;
EXPECT_THAT
(
ErrnoPrinter
{
errno_saver
(
)
}
Eq
(
ErrnoPrinter
{
EDOM
}
)
)
;
}
EXPECT_THAT
(
ErrnoPrinter
{
errno
}
Eq
(
ErrnoPrinter
{
EDOM
}
)
)
;
}
}
