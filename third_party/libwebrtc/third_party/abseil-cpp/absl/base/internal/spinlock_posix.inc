#
include
<
sched
.
h
>
#
include
<
atomic
>
#
include
<
ctime
>
#
include
"
absl
/
base
/
internal
/
errno_saver
.
h
"
#
include
"
absl
/
base
/
internal
/
scheduling_mode
.
h
"
#
include
"
absl
/
base
/
port
.
h
"
extern
"
C
"
{
ABSL_ATTRIBUTE_WEAK
void
ABSL_INTERNAL_C_SYMBOL
(
AbslInternalSpinLockDelay
)
(
std
:
:
atomic
<
uint32_t
>
*
uint32_t
int
loop
absl
:
:
base_internal
:
:
SchedulingMode
)
{
absl
:
:
base_internal
:
:
ErrnoSaver
errno_saver
;
if
(
loop
=
=
0
)
{
}
else
if
(
loop
=
=
1
)
{
sched_yield
(
)
;
}
else
{
struct
timespec
tm
;
tm
.
tv_sec
=
0
;
tm
.
tv_nsec
=
absl
:
:
base_internal
:
:
SpinLockSuggestedDelayNS
(
loop
)
;
nanosleep
(
&
tm
nullptr
)
;
}
}
ABSL_ATTRIBUTE_WEAK
void
ABSL_INTERNAL_C_SYMBOL
(
AbslInternalSpinLockWake
)
(
std
:
:
atomic
<
uint32_t
>
*
bool
)
{
}
}
