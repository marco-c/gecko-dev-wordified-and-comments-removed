#
ifndef
ABSL_FLAGS_INTERNAL_USAGE_H_
#
define
ABSL_FLAGS_INTERNAL_USAGE_H_
#
include
<
iosfwd
>
#
include
<
string
>
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
flags
/
commandlineflag
.
h
"
#
include
"
absl
/
flags
/
declare
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
flags_internal
{
enum
class
HelpFormat
{
kHumanReadable
}
;
void
FlagHelp
(
std
:
:
ostream
&
out
const
CommandLineFlag
&
flag
HelpFormat
format
=
HelpFormat
:
:
kHumanReadable
)
;
void
FlagsHelp
(
std
:
:
ostream
&
out
absl
:
:
string_view
filter
HelpFormat
format
absl
:
:
string_view
program_usage_message
)
;
int
HandleUsageFlags
(
std
:
:
ostream
&
out
absl
:
:
string_view
program_usage_message
)
;
}
ABSL_NAMESPACE_END
}
ABSL_DECLARE_FLAG
(
bool
help
)
;
ABSL_DECLARE_FLAG
(
bool
helpfull
)
;
ABSL_DECLARE_FLAG
(
bool
helpshort
)
;
ABSL_DECLARE_FLAG
(
bool
helppackage
)
;
ABSL_DECLARE_FLAG
(
bool
version
)
;
ABSL_DECLARE_FLAG
(
bool
only_check_args
)
;
ABSL_DECLARE_FLAG
(
std
:
:
string
helpon
)
;
ABSL_DECLARE_FLAG
(
std
:
:
string
helpmatch
)
;
#
endif
