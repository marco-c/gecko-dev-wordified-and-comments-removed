#
include
"
net
/
dcsctp
/
socket
/
packet_sender
.
h
"
#
include
<
utility
>
#
include
<
vector
>
#
include
"
net
/
dcsctp
/
public
/
types
.
h
"
namespace
dcsctp
{
PacketSender
:
:
PacketSender
(
DcSctpSocketCallbacks
&
callbacks
std
:
:
function
<
void
(
rtc
:
:
ArrayView
<
const
uint8_t
>
SendPacketStatus
)
>
on_sent_packet
)
:
callbacks_
(
callbacks
)
on_sent_packet_
(
std
:
:
move
(
on_sent_packet
)
)
{
}
bool
PacketSender
:
:
Send
(
SctpPacket
:
:
Builder
&
builder
bool
write_checksum
)
{
if
(
builder
.
empty
(
)
)
{
return
false
;
}
std
:
:
vector
<
uint8_t
>
payload
=
builder
.
Build
(
write_checksum
)
;
SendPacketStatus
status
=
callbacks_
.
SendPacketWithStatus
(
payload
)
;
on_sent_packet_
(
payload
status
)
;
switch
(
status
)
{
case
SendPacketStatus
:
:
kSuccess
:
{
return
true
;
}
case
SendPacketStatus
:
:
kTemporaryFailure
:
{
return
false
;
}
case
SendPacketStatus
:
:
kError
:
{
return
false
;
}
}
}
}
