#
ifndef
NET_DCSCTP_SOCKET_STATE_COOKIE_H_
#
define
NET_DCSCTP_SOCKET_STATE_COOKIE_H_
#
include
<
cstdint
>
#
include
<
vector
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
array_view
.
h
"
#
include
"
net
/
dcsctp
/
common
/
internal_types
.
h
"
#
include
"
net
/
dcsctp
/
socket
/
capabilities
.
h
"
namespace
dcsctp
{
class
StateCookie
{
public
:
static
constexpr
size_t
kCookieSize
=
31
;
StateCookie
(
VerificationTag
initiate_tag
TSN
initial_tsn
uint32_t
a_rwnd
TieTag
tie_tag
Capabilities
capabilities
)
:
initiate_tag_
(
initiate_tag
)
initial_tsn_
(
initial_tsn
)
a_rwnd_
(
a_rwnd
)
tie_tag_
(
tie_tag
)
capabilities_
(
capabilities
)
{
}
std
:
:
vector
<
uint8_t
>
Serialize
(
)
;
static
absl
:
:
optional
<
StateCookie
>
Deserialize
(
rtc
:
:
ArrayView
<
const
uint8_t
>
cookie
)
;
VerificationTag
initiate_tag
(
)
const
{
return
initiate_tag_
;
}
TSN
initial_tsn
(
)
const
{
return
initial_tsn_
;
}
uint32_t
a_rwnd
(
)
const
{
return
a_rwnd_
;
}
TieTag
tie_tag
(
)
const
{
return
tie_tag_
;
}
const
Capabilities
&
capabilities
(
)
const
{
return
capabilities_
;
}
private
:
const
VerificationTag
initiate_tag_
;
const
TSN
initial_tsn_
;
const
uint32_t
a_rwnd_
;
const
TieTag
tie_tag_
;
const
Capabilities
capabilities_
;
}
;
}
#
endif
