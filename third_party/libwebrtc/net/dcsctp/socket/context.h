#
ifndef
NET_DCSCTP_SOCKET_CONTEXT_H_
#
define
NET_DCSCTP_SOCKET_CONTEXT_H_
#
include
<
cstdint
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
net
/
dcsctp
/
common
/
internal_types
.
h
"
#
include
"
net
/
dcsctp
/
packet
/
sctp_packet
.
h
"
#
include
"
net
/
dcsctp
/
public
/
dcsctp_socket
.
h
"
#
include
"
net
/
dcsctp
/
public
/
types
.
h
"
namespace
dcsctp
{
class
Context
{
public
:
virtual
~
Context
(
)
=
default
;
virtual
bool
is_connection_established
(
)
const
=
0
;
virtual
TSN
my_initial_tsn
(
)
const
=
0
;
virtual
TSN
peer_initial_tsn
(
)
const
=
0
;
virtual
DcSctpSocketCallbacks
&
callbacks
(
)
const
=
0
;
virtual
void
ObserveRTT
(
webrtc
:
:
TimeDelta
rtt_ms
)
=
0
;
virtual
DurationMs
current_rto
(
)
const
=
0
;
virtual
bool
IncrementTxErrorCounter
(
absl
:
:
string_view
reason
)
=
0
;
virtual
void
ClearTxErrorCounter
(
)
=
0
;
virtual
bool
HasTooManyTxErrors
(
)
const
=
0
;
virtual
SctpPacket
:
:
Builder
PacketBuilder
(
)
const
=
0
;
virtual
void
Send
(
SctpPacket
:
:
Builder
&
builder
)
=
0
;
}
;
}
#
endif
