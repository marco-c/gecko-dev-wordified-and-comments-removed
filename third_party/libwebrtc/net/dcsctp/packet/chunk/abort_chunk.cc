#
include
"
net
/
dcsctp
/
packet
/
chunk
/
abort_chunk
.
h
"
#
include
<
stdint
.
h
>
#
include
<
optional
>
#
include
<
utility
>
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
net
/
dcsctp
/
packet
/
bounded_byte_reader
.
h
"
#
include
"
net
/
dcsctp
/
packet
/
bounded_byte_writer
.
h
"
#
include
"
net
/
dcsctp
/
packet
/
error_cause
/
error_cause
.
h
"
#
include
"
net
/
dcsctp
/
packet
/
tlv_trait
.
h
"
namespace
dcsctp
{
constexpr
int
AbortChunk
:
:
kType
;
std
:
:
optional
<
AbortChunk
>
AbortChunk
:
:
Parse
(
webrtc
:
:
ArrayView
<
const
uint8_t
>
data
)
{
std
:
:
optional
<
BoundedByteReader
<
kHeaderSize
>
>
reader
=
ParseTLV
(
data
)
;
if
(
!
reader
.
has_value
(
)
)
{
return
std
:
:
nullopt
;
}
std
:
:
optional
<
Parameters
>
error_causes
=
Parameters
:
:
Parse
(
reader
-
>
variable_data
(
)
)
;
if
(
!
error_causes
.
has_value
(
)
)
{
return
std
:
:
nullopt
;
}
uint8_t
flags
=
reader
-
>
Load8
<
1
>
(
)
;
bool
filled_in_verification_tag
=
(
flags
&
(
1
<
<
kFlagsBitT
)
)
=
=
0
;
return
AbortChunk
(
filled_in_verification_tag
*
std
:
:
move
(
error_causes
)
)
;
}
void
AbortChunk
:
:
SerializeTo
(
std
:
:
vector
<
uint8_t
>
&
out
)
const
{
webrtc
:
:
ArrayView
<
const
uint8_t
>
error_causes
=
error_causes_
.
data
(
)
;
BoundedByteWriter
<
kHeaderSize
>
writer
=
AllocateTLV
(
out
error_causes
.
size
(
)
)
;
writer
.
Store8
<
1
>
(
filled_in_verification_tag_
?
0
:
(
1
<
<
kFlagsBitT
)
)
;
writer
.
CopyToVariableData
(
error_causes
)
;
}
std
:
:
string
AbortChunk
:
:
ToString
(
)
const
{
return
"
ABORT
"
;
}
}
