#
include
"
net
/
dcsctp
/
packet
/
error_cause
/
restart_of_an_association_with_new_address_cause
.
h
"
#
include
<
cstdint
>
#
include
<
optional
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
api
/
array_view
.
h
"
#
include
"
net
/
dcsctp
/
packet
/
bounded_byte_reader
.
h
"
#
include
"
net
/
dcsctp
/
packet
/
bounded_byte_writer
.
h
"
namespace
dcsctp
{
constexpr
int
RestartOfAnAssociationWithNewAddressesCause
:
:
kType
;
std
:
:
optional
<
RestartOfAnAssociationWithNewAddressesCause
>
RestartOfAnAssociationWithNewAddressesCause
:
:
Parse
(
webrtc
:
:
ArrayView
<
const
uint8_t
>
data
)
{
std
:
:
optional
<
BoundedByteReader
<
kHeaderSize
>
>
reader
=
ParseTLV
(
data
)
;
if
(
!
reader
.
has_value
(
)
)
{
return
std
:
:
nullopt
;
}
return
RestartOfAnAssociationWithNewAddressesCause
(
reader
-
>
variable_data
(
)
)
;
}
void
RestartOfAnAssociationWithNewAddressesCause
:
:
SerializeTo
(
std
:
:
vector
<
uint8_t
>
&
out
)
const
{
BoundedByteWriter
<
kHeaderSize
>
writer
=
AllocateTLV
(
out
new_address_tlvs_
.
size
(
)
)
;
writer
.
CopyToVariableData
(
new_address_tlvs_
)
;
}
std
:
:
string
RestartOfAnAssociationWithNewAddressesCause
:
:
ToString
(
)
const
{
return
"
Restart
of
an
Association
with
New
Addresses
"
;
}
}
