#
include
"
net
/
dcsctp
/
tx
/
retransmission_error_counter
.
h
"
#
include
"
net
/
dcsctp
/
public
/
dcsctp_options
.
h
"
#
include
"
rtc_base
/
gunit
.
h
"
#
include
"
test
/
gmock
.
h
"
namespace
dcsctp
{
namespace
{
TEST
(
RetransmissionErrorCounterTest
HasInitialValue
)
{
DcSctpOptions
options
;
RetransmissionErrorCounter
counter
(
"
log
:
"
options
)
;
EXPECT_EQ
(
counter
.
value
(
)
0
)
;
}
TEST
(
RetransmissionErrorCounterTest
ReturnsFalseAtMaximumValue
)
{
DcSctpOptions
options
;
options
.
max_retransmissions
=
5
;
RetransmissionErrorCounter
counter
(
"
log
:
"
options
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_FALSE
(
counter
.
Increment
(
"
test
"
)
)
;
}
TEST
(
RetransmissionErrorCounterTest
CanHandleZeroRetransmission
)
{
DcSctpOptions
options
;
options
.
max_retransmissions
=
0
;
RetransmissionErrorCounter
counter
(
"
log
:
"
options
)
;
EXPECT_FALSE
(
counter
.
Increment
(
"
test
"
)
)
;
}
TEST
(
RetransmissionErrorCounterTest
IsExhaustedAtMaximum
)
{
DcSctpOptions
options
;
options
.
max_retransmissions
=
3
;
RetransmissionErrorCounter
counter
(
"
log
:
"
options
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_FALSE
(
counter
.
IsExhausted
(
)
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_FALSE
(
counter
.
IsExhausted
(
)
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_FALSE
(
counter
.
IsExhausted
(
)
)
;
EXPECT_FALSE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
IsExhausted
(
)
)
;
EXPECT_FALSE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
IsExhausted
(
)
)
;
}
TEST
(
RetransmissionErrorCounterTest
ClearingCounter
)
{
DcSctpOptions
options
;
options
.
max_retransmissions
=
3
;
RetransmissionErrorCounter
counter
(
"
log
:
"
options
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
counter
.
Clear
(
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_FALSE
(
counter
.
IsExhausted
(
)
)
;
EXPECT_FALSE
(
counter
.
Increment
(
"
test
"
)
)
;
EXPECT_TRUE
(
counter
.
IsExhausted
(
)
)
;
}
}
}
