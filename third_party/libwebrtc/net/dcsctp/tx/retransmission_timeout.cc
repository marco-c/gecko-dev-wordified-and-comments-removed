#
include
"
net
/
dcsctp
/
tx
/
retransmission_timeout
.
h
"
#
include
<
cmath
>
#
include
<
cstdint
>
#
include
"
net
/
dcsctp
/
public
/
dcsctp_options
.
h
"
namespace
dcsctp
{
namespace
{
constexpr
double
kRtoAlpha
=
0
.
125
;
constexpr
double
kRtoBeta
=
0
.
25
;
}
RetransmissionTimeout
:
:
RetransmissionTimeout
(
const
DcSctpOptions
&
options
)
:
min_rto_
(
*
options
.
rto_min
)
max_rto_
(
*
options
.
rto_max
)
max_rtt_
(
*
options
.
rtt_max
)
rto_
(
*
options
.
rto_initial
)
{
}
void
RetransmissionTimeout
:
:
ObserveRTT
(
DurationMs
measured_rtt
)
{
double
rtt
=
*
measured_rtt
;
if
(
rtt
<
0
.
0
|
|
rtt
>
max_rtt_
)
{
return
;
}
if
(
first_measurement_
)
{
srtt_
=
rtt
;
rttvar_
=
rtt
*
0
.
5
;
rto_
=
srtt_
+
4
*
rttvar_
;
first_measurement_
=
false
;
}
else
{
rttvar_
=
(
1
-
kRtoBeta
)
*
rttvar_
+
kRtoBeta
*
std
:
:
abs
(
srtt_
-
rtt
)
;
srtt_
=
(
1
-
kRtoAlpha
)
*
srtt_
+
kRtoAlpha
*
rtt
;
rto_
=
srtt_
+
4
*
rttvar_
;
}
rto_
=
std
:
:
fmin
(
std
:
:
fmax
(
rto_
min_rto_
)
max_rto_
)
;
}
}
