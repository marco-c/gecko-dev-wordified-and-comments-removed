#
ifndef
NET_DCSCTP_TX_SEND_QUEUE_H_
#
define
NET_DCSCTP_TX_SEND_QUEUE_H_
#
include
<
cstdint
>
#
include
<
limits
>
#
include
<
utility
>
#
include
<
vector
>
#
include
"
absl
/
types
/
optional
.
h
"
#
include
"
api
/
array_view
.
h
"
#
include
"
net
/
dcsctp
/
common
/
internal_types
.
h
"
#
include
"
net
/
dcsctp
/
packet
/
data
.
h
"
#
include
"
net
/
dcsctp
/
public
/
types
.
h
"
namespace
dcsctp
{
class
SendQueue
{
public
:
struct
DataToSend
{
explicit
DataToSend
(
Data
data
)
:
data
(
std
:
:
move
(
data
)
)
{
}
Data
data
;
absl
:
:
optional
<
int
>
max_retransmissions
;
absl
:
:
optional
<
TimeMs
>
expires_at
;
}
;
virtual
~
SendQueue
(
)
=
default
;
virtual
absl
:
:
optional
<
DataToSend
>
Produce
(
TimeMs
now
size_t
max_size
)
=
0
;
virtual
bool
Discard
(
IsUnordered
unordered
StreamID
stream_id
MID
message_id
)
=
0
;
virtual
void
PrepareResetStreams
(
rtc
:
:
ArrayView
<
const
StreamID
>
streams
)
=
0
;
virtual
bool
CanResetStreams
(
)
const
=
0
;
virtual
void
CommitResetStreams
(
)
=
0
;
virtual
void
RollbackResetStreams
(
)
=
0
;
virtual
void
Reset
(
)
=
0
;
}
;
}
#
endif
