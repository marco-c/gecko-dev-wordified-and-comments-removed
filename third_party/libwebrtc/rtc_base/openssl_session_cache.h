#
ifndef
RTC_BASE_OPENSSL_SESSION_CACHE_H_
#
define
RTC_BASE_OPENSSL_SESSION_CACHE_H_
#
include
<
openssl
/
ossl_typ
.
h
>
#
include
<
map
>
#
include
<
string
>
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
rtc_base
/
ssl_stream_adapter
.
h
"
#
include
"
rtc_base
/
string_utils
.
h
"
#
ifndef
OPENSSL_IS_BORINGSSL
typedef
struct
ssl_session_st
SSL_SESSION
;
#
endif
namespace
webrtc
{
class
OpenSSLSessionCache
final
{
public
:
OpenSSLSessionCache
(
SSLMode
ssl_mode
SSL_CTX
*
ssl_ctx
)
;
~
OpenSSLSessionCache
(
)
;
OpenSSLSessionCache
(
const
OpenSSLSessionCache
&
)
=
delete
;
OpenSSLSessionCache
&
operator
=
(
const
OpenSSLSessionCache
&
)
=
delete
;
SSL_SESSION
*
LookupSession
(
absl
:
:
string_view
hostname
)
const
;
void
AddSession
(
absl
:
:
string_view
hostname
SSL_SESSION
*
session
)
;
SSL_CTX
*
GetSSLContext
(
)
const
;
SSLMode
GetSSLMode
(
)
const
;
private
:
const
SSLMode
ssl_mode_
;
SSL_CTX
*
ssl_ctx_
=
nullptr
;
std
:
:
map
<
std
:
:
string
SSL_SESSION
*
AbslStringViewCmp
>
sessions_
;
}
;
}
#
ifdef
WEBRTC_ALLOW_DEPRECATED_NAMESPACES
namespace
rtc
{
using
:
:
webrtc
:
:
OpenSSLSessionCache
;
}
#
endif
#
endif
