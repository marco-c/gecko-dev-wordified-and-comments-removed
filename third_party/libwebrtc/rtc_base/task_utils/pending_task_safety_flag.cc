#
include
"
rtc_base
/
task_utils
/
pending_task_safety_flag
.
h
"
#
include
"
rtc_base
/
ref_counted_object
.
h
"
namespace
webrtc
{
rtc
:
:
scoped_refptr
<
PendingTaskSafetyFlag
>
PendingTaskSafetyFlag
:
:
Create
(
)
{
return
new
rtc
:
:
RefCountedObject
<
PendingTaskSafetyFlag
>
(
)
;
}
rtc
:
:
scoped_refptr
<
PendingTaskSafetyFlag
>
PendingTaskSafetyFlag
:
:
CreateDetached
(
)
{
auto
safety_flag
=
Create
(
)
;
safety_flag
-
>
main_sequence_
.
Detach
(
)
;
return
safety_flag
;
}
void
PendingTaskSafetyFlag
:
:
SetNotAlive
(
)
{
RTC_DCHECK_RUN_ON
(
&
main_sequence_
)
;
alive_
=
false
;
}
void
PendingTaskSafetyFlag
:
:
SetAlive
(
)
{
RTC_DCHECK_RUN_ON
(
&
main_sequence_
)
;
alive_
=
true
;
}
bool
PendingTaskSafetyFlag
:
:
alive
(
)
const
{
RTC_DCHECK_RUN_ON
(
&
main_sequence_
)
;
return
alive_
;
}
}
