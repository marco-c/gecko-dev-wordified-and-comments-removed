#
include
"
rtc_base
/
crc32
.
h
"
#
include
<
cstddef
>
#
include
<
cstdint
>
#
include
<
iterator
>
namespace
webrtc
{
static
const
uint32_t
kCrc32Polynomial
=
0xEDB88320
;
static
uint32_t
*
LoadCrc32Table
(
)
{
static
uint32_t
kCrc32Table
[
256
]
;
for
(
uint32_t
i
=
0
;
i
<
std
:
:
size
(
kCrc32Table
)
;
+
+
i
)
{
uint32_t
c
=
i
;
for
(
size_t
j
=
0
;
j
<
8
;
+
+
j
)
{
if
(
c
&
1
)
{
c
=
kCrc32Polynomial
^
(
c
>
>
1
)
;
}
else
{
c
>
>
=
1
;
}
}
kCrc32Table
[
i
]
=
c
;
}
return
kCrc32Table
;
}
uint32_t
UpdateCrc32
(
uint32_t
start
const
void
*
buf
size_t
len
)
{
static
uint32_t
*
kCrc32Table
=
LoadCrc32Table
(
)
;
uint32_t
c
=
start
^
0xFFFFFFFF
;
const
uint8_t
*
u
=
static_cast
<
const
uint8_t
*
>
(
buf
)
;
for
(
size_t
i
=
0
;
i
<
len
;
+
+
i
)
{
c
=
kCrc32Table
[
(
c
^
u
[
i
]
)
&
0xFF
]
^
(
c
>
>
8
)
;
}
return
c
^
0xFFFFFFFF
;
}
}
