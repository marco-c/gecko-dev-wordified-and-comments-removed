#
include
"
rtc_base
/
win
/
get_activation_factory
.
h
"
#
include
<
libloaderapi
.
h
>
#
include
<
roapi
.
h
>
namespace
{
FARPROC
LoadComBaseFunction
(
const
char
*
function_name
)
{
static
HMODULE
const
handle
=
:
:
LoadLibraryExW
(
L
"
combase
.
dll
"
nullptr
LOAD_LIBRARY_SEARCH_SYSTEM32
)
;
return
handle
?
:
:
GetProcAddress
(
handle
function_name
)
:
nullptr
;
}
decltype
(
&
:
:
RoGetActivationFactory
)
GetRoGetActivationFactoryFunction
(
)
{
static
decltype
(
&
:
:
RoGetActivationFactory
)
const
function
=
reinterpret_cast
<
decltype
(
&
:
:
RoGetActivationFactory
)
>
(
LoadComBaseFunction
(
"
RoGetActivationFactory
"
)
)
;
return
function
;
}
}
namespace
webrtc
{
bool
ResolveCoreWinRTDelayload
(
)
{
return
GetRoGetActivationFactoryFunction
(
)
&
&
ResolveCoreWinRTStringDelayload
(
)
;
}
HRESULT
RoGetActivationFactoryProxy
(
HSTRING
class_id
const
IID
&
iid
void
*
*
out_factory
)
{
auto
get_factory_func
=
GetRoGetActivationFactoryFunction
(
)
;
if
(
!
get_factory_func
)
return
E_FAIL
;
return
get_factory_func
(
class_id
iid
out_factory
)
;
}
}
