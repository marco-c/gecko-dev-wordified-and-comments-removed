#
include
"
rtc_base
/
base64
.
h
"
#
include
<
optional
>
#
include
<
string
>
#
include
<
utility
>
#
include
"
absl
/
algorithm
/
container
.
h
"
#
include
"
absl
/
strings
/
ascii
.
h
"
#
include
"
absl
/
strings
/
escaping
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
namespace
webrtc
{
namespace
{
bool
IsStrictBase64
(
absl
:
:
string_view
data
)
{
return
data
.
size
(
)
%
4
=
=
0
&
&
absl
:
:
c_none_of
(
data
absl
:
:
ascii_isspace
)
;
}
}
std
:
:
string
Base64Encode
(
absl
:
:
string_view
data
)
{
return
absl
:
:
Base64Escape
(
data
)
;
}
std
:
:
optional
<
std
:
:
string
>
Base64Decode
(
absl
:
:
string_view
data
Base64DecodeOptions
options
)
{
if
(
options
=
=
Base64DecodeOptions
:
:
kStrict
&
&
!
IsStrictBase64
(
data
)
)
{
return
std
:
:
nullopt
;
}
std
:
:
string
dest
;
return
absl
:
:
Base64Unescape
(
data
&
dest
)
?
std
:
:
make_optional
(
std
:
:
move
(
dest
)
)
:
std
:
:
nullopt
;
}
}
