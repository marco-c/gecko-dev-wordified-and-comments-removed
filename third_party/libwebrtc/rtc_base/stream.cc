#
include
"
rtc_base
/
stream
.
h
"
#
include
<
errno
.
h
>
#
include
<
string
.
h
>
#
include
<
algorithm
>
#
include
<
string
>
#
include
"
api
/
array_view
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
rtc_base
/
thread
.
h
"
namespace
rtc
{
StreamResult
StreamInterface
:
:
WriteAll
(
const
void
*
data
size_t
data_len
size_t
*
written
int
*
error
)
{
StreamResult
result
=
SR_SUCCESS
;
size_t
total_written
=
0
current_written
;
while
(
total_written
<
data_len
)
{
result
=
Write
(
ArrayView
<
const
uint8_t
>
(
reinterpret_cast
<
const
uint8_t
*
>
(
data
)
+
total_written
data_len
-
total_written
)
current_written
*
error
)
;
if
(
result
!
=
SR_SUCCESS
)
break
;
total_written
+
=
current_written
;
}
if
(
written
)
*
written
=
total_written
;
return
result
;
}
bool
StreamInterface
:
:
Flush
(
)
{
return
false
;
}
StreamInterface
:
:
StreamInterface
(
)
{
}
}
