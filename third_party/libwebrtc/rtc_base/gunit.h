#
ifndef
RTC_BASE_GUNIT_H_
#
define
RTC_BASE_GUNIT_H_
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
rtc_base
/
fake_clock
.
h
"
#
include
"
rtc_base
/
logging
.
h
"
#
include
"
rtc_base
/
thread
.
h
"
#
include
"
test
/
gtest
.
h
"
#
define
WAIT
(
ex
timeout
)
\
for
(
int64_t
wait_start
=
:
:
webrtc
:
:
SystemTimeMillis
(
)
;
\
!
(
ex
)
&
&
:
:
webrtc
:
:
SystemTimeMillis
(
)
<
wait_start
+
(
timeout
)
;
)
{
\
:
:
webrtc
:
:
Thread
:
:
Current
(
)
-
>
ProcessMessages
(
0
)
;
\
:
:
webrtc
:
:
Thread
:
:
Current
(
)
-
>
SleepMs
(
1
)
;
\
}
#
define
WAIT_
(
ex
timeout
res
)
\
do
{
\
int64_t
wait_start
=
:
:
webrtc
:
:
SystemTimeMillis
(
)
;
\
res
=
(
ex
)
&
&
true
;
\
while
(
!
res
&
&
:
:
webrtc
:
:
SystemTimeMillis
(
)
<
wait_start
+
(
timeout
)
)
{
\
:
:
webrtc
:
:
Thread
:
:
Current
(
)
-
>
ProcessMessages
(
0
)
;
\
:
:
webrtc
:
:
Thread
:
:
Current
(
)
-
>
SleepMs
(
1
)
;
\
res
=
(
ex
)
&
&
true
;
\
}
\
}
while
(
0
)
#
define
SIMULATED_WAIT
(
ex
timeout
clock
)
\
for
(
int64_t
wait_start
=
:
:
webrtc
:
:
TimeMillis
(
)
;
\
!
(
ex
)
&
&
:
:
webrtc
:
:
TimeMillis
(
)
<
wait_start
+
(
timeout
)
;
)
{
\
(
clock
)
.
AdvanceTime
(
webrtc
:
:
TimeDelta
:
:
Millis
(
1
)
)
;
\
}
#
endif
