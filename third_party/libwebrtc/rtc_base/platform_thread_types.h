#
ifndef
RTC_BASE_PLATFORM_THREAD_TYPES_H_
#
define
RTC_BASE_PLATFORM_THREAD_TYPES_H_
#
if
defined
(
WEBRTC_WIN
)
#
include
<
winsock2
.
h
>
#
include
<
windows
.
h
>
#
elif
defined
(
WEBRTC_FUCHSIA
)
#
include
<
zircon
/
types
.
h
>
#
include
<
zircon
/
process
.
h
>
#
elif
defined
(
WEBRTC_POSIX
)
#
include
<
pthread
.
h
>
#
include
<
unistd
.
h
>
#
if
defined
(
WEBRTC_MAC
)
#
include
<
pthread_spis
.
h
>
#
endif
#
endif
namespace
webrtc
{
#
if
defined
(
WEBRTC_WIN
)
typedef
DWORD
PlatformThreadId
;
typedef
DWORD
PlatformThreadRef
;
#
elif
defined
(
WEBRTC_FUCHSIA
)
typedef
zx_handle_t
PlatformThreadId
;
typedef
zx_handle_t
PlatformThreadRef
;
#
elif
defined
(
WEBRTC_POSIX
)
typedef
pid_t
PlatformThreadId
;
typedef
pthread_t
PlatformThreadRef
;
#
endif
PlatformThreadId
CurrentThreadId
(
)
;
PlatformThreadRef
CurrentThreadRef
(
)
;
bool
IsThreadRefEqual
(
const
PlatformThreadRef
&
a
const
PlatformThreadRef
&
b
)
;
void
SetCurrentThreadName
(
const
char
*
name
)
;
}
namespace
rtc
{
using
:
:
webrtc
:
:
CurrentThreadId
;
using
:
:
webrtc
:
:
CurrentThreadRef
;
using
:
:
webrtc
:
:
IsThreadRefEqual
;
using
:
:
webrtc
:
:
PlatformThreadId
;
using
:
:
webrtc
:
:
PlatformThreadRef
;
using
:
:
webrtc
:
:
SetCurrentThreadName
;
}
#
endif
