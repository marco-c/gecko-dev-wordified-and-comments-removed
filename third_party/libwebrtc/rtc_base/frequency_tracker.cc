#
include
"
rtc_base
/
frequency_tracker
.
h
"
#
include
<
cstdint
>
#
include
<
optional
>
#
include
"
api
/
units
/
frequency
.
h
"
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
api
/
units
/
timestamp
.
h
"
#
include
"
rtc_base
/
rate_statistics
.
h
"
namespace
webrtc
{
FrequencyTracker
:
:
FrequencyTracker
(
TimeDelta
max_window_size
)
:
impl_
(
max_window_size
.
ms
(
)
1
'
000
'
000
)
{
}
std
:
:
optional
<
Frequency
>
FrequencyTracker
:
:
Rate
(
Timestamp
now
)
const
{
if
(
std
:
:
optional
<
int64_t
>
rate
=
impl_
.
Rate
(
now
.
ms
(
)
)
)
{
return
Frequency
:
:
MilliHertz
(
*
rate
)
;
}
return
std
:
:
nullopt
;
}
void
FrequencyTracker
:
:
Update
(
int64_t
count
Timestamp
now
)
{
impl_
.
Update
(
count
now
.
ms
(
)
)
;
}
}
