#
ifndef
RTC_BASE_SERVER_SOCKET_ADAPTERS_H_
#
define
RTC_BASE_SERVER_SOCKET_ADAPTERS_H_
#
include
"
rtc_base
/
socket_adapters
.
h
"
namespace
rtc
{
class
AsyncProxyServerSocket
:
public
BufferedReadAdapter
{
public
:
AsyncProxyServerSocket
(
Socket
*
socket
size_t
buffer_size
)
;
~
AsyncProxyServerSocket
(
)
override
;
sigslot
:
:
signal2
<
AsyncProxyServerSocket
*
const
webrtc
:
:
SocketAddress
&
>
SignalConnectRequest
;
virtual
void
SendConnectResult
(
int
err
const
webrtc
:
:
SocketAddress
&
addr
)
=
0
;
}
;
class
AsyncSSLServerSocket
:
public
BufferedReadAdapter
{
public
:
explicit
AsyncSSLServerSocket
(
Socket
*
socket
)
;
AsyncSSLServerSocket
(
const
AsyncSSLServerSocket
&
)
=
delete
;
AsyncSSLServerSocket
&
operator
=
(
const
AsyncSSLServerSocket
&
)
=
delete
;
protected
:
void
ProcessInput
(
char
*
data
size_t
*
len
)
override
;
}
;
}
#
endif
