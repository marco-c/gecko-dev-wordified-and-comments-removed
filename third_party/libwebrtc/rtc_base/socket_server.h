#
ifndef
RTC_BASE_SOCKET_SERVER_H_
#
define
RTC_BASE_SOCKET_SERVER_H_
#
include
<
memory
>
#
include
"
api
/
units
/
time_delta
.
h
"
#
include
"
rtc_base
/
event
.
h
"
#
include
"
rtc_base
/
socket_factory
.
h
"
namespace
rtc
{
class
Thread
;
class
NetworkBinderInterface
;
}
namespace
webrtc
{
class
SocketServer
:
public
SocketFactory
{
public
:
static
constexpr
TimeDelta
kForever
=
rtc
:
:
Event
:
:
kForever
;
static
std
:
:
unique_ptr
<
SocketServer
>
CreateDefault
(
)
;
virtual
void
SetMessageQueue
(
rtc
:
:
Thread
*
)
{
}
virtual
bool
Wait
(
TimeDelta
max_wait_duration
bool
process_io
)
=
0
;
virtual
void
WakeUp
(
)
=
0
;
void
set_network_binder
(
rtc
:
:
NetworkBinderInterface
*
binder
)
{
network_binder_
=
binder
;
}
rtc
:
:
NetworkBinderInterface
*
network_binder
(
)
const
{
return
network_binder_
;
}
private
:
rtc
:
:
NetworkBinderInterface
*
network_binder_
=
nullptr
;
}
;
}
namespace
rtc
{
using
:
:
webrtc
:
:
SocketServer
;
}
#
endif
