#
ifndef
RTC_BASE_OPENSSL_UTILITY_H_
#
define
RTC_BASE_OPENSSL_UTILITY_H_
#
include
<
openssl
/
ossl_typ
.
h
>
#
include
<
cstdint
>
#
include
"
absl
/
strings
/
string_view
.
h
"
namespace
webrtc
{
namespace
openssl
{
#
ifdef
OPENSSL_IS_BORINGSSL
bool
ParseCertificate
(
CRYPTO_BUFFER
*
cert_buffer
CBS
*
signature_algorithm_oid
int64_t
*
expiration_time
)
;
#
endif
bool
VerifyPeerCertMatchesHost
(
SSL
*
ssl
absl
:
:
string_view
host
)
;
void
LogSSLErrors
(
absl
:
:
string_view
prefix
)
;
#
ifndef
WEBRTC_EXCLUDE_BUILT_IN_SSL_ROOT_CERTS
bool
LoadBuiltinSSLRootCertificates
(
SSL_CTX
*
ssl_ctx
)
;
#
endif
#
ifdef
OPENSSL_IS_BORINGSSL
CRYPTO_BUFFER_POOL
*
GetBufferPool
(
)
;
#
endif
}
}
#
ifdef
WEBRTC_ALLOW_DEPRECATED_NAMESPACES
namespace
rtc
{
namespace
openssl
{
#
ifndef
WEBRTC_EXCLUDE_BUILT_IN_SSL_ROOT_CERTS
using
:
:
webrtc
:
:
openssl
:
:
LoadBuiltinSSLRootCertificates
;
#
endif
using
:
:
webrtc
:
:
openssl
:
:
LogSSLErrors
;
using
:
:
webrtc
:
:
openssl
:
:
VerifyPeerCertMatchesHost
;
#
ifdef
OPENSSL_IS_BORINGSSL
using
:
:
webrtc
:
:
openssl
:
:
GetBufferPool
;
using
:
:
webrtc
:
:
openssl
:
:
ParseCertificate
;
#
endif
}
}
#
endif
#
endif
