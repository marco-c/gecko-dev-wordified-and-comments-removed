#
include
"
rtc_base
/
synchronization
/
mutex
.
h
"
#
include
"
rtc_base
/
checks
.
h
"
#
include
"
rtc_base
/
synchronization
/
yield
.
h
"
namespace
webrtc
{
#
if
!
defined
(
WEBRTC_ABSL_MUTEX
)
void
GlobalMutex
:
:
Lock
(
)
{
while
(
mutex_locked_
.
exchange
(
1
)
)
{
YieldCurrentThread
(
)
;
}
}
void
GlobalMutex
:
:
Unlock
(
)
{
int
old
=
mutex_locked_
.
exchange
(
0
)
;
RTC_DCHECK_EQ
(
old
1
)
<
<
"
Unlock
called
without
calling
Lock
first
"
;
}
GlobalMutexLock
:
:
GlobalMutexLock
(
GlobalMutex
*
mutex
)
:
mutex_
(
mutex
)
{
mutex_
-
>
Lock
(
)
;
}
GlobalMutexLock
:
:
~
GlobalMutexLock
(
)
{
mutex_
-
>
Unlock
(
)
;
}
#
endif
}
