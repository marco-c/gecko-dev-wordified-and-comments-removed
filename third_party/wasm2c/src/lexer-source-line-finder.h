#
ifndef
WABT_LEXER_SOURCE_LINE_FINDER_H_
#
define
WABT_LEXER_SOURCE_LINE_FINDER_H_
#
include
<
memory
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
src
/
common
.
h
"
#
include
"
src
/
lexer
-
source
.
h
"
#
include
"
src
/
range
.
h
"
namespace
wabt
{
class
LexerSourceLineFinder
{
public
:
struct
SourceLine
{
std
:
:
string
line
;
int
column_offset
;
}
;
explicit
LexerSourceLineFinder
(
std
:
:
unique_ptr
<
LexerSource
>
)
;
Result
GetSourceLine
(
const
Location
&
loc
Offset
max_line_length
SourceLine
*
out_source_line
)
;
Result
GetLineOffsets
(
int
line
OffsetRange
*
out_offsets
)
;
private
:
static
OffsetRange
ClampSourceLineOffsets
(
OffsetRange
line_offset_range
ColumnRange
column_range
Offset
max_line_length
)
;
bool
IsLineCached
(
int
line
)
const
;
OffsetRange
GetCachedLine
(
int
line
)
const
;
std
:
:
unique_ptr
<
LexerSource
>
source_
;
std
:
:
vector
<
OffsetRange
>
line_ranges_
;
Offset
next_line_start_
;
bool
last_cr_
;
bool
eof_
;
}
;
}
#
endif
