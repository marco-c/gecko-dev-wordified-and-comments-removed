#
ifndef
WABT_BINARY_WRITER_SPEC_H_
#
define
WABT_BINARY_WRITER_SPEC_H_
#
include
<
functional
>
#
include
<
utility
>
#
include
<
vector
>
#
include
"
src
/
binary
-
writer
.
h
"
#
include
"
src
/
common
.
h
"
#
include
"
src
/
ir
.
h
"
namespace
wabt
{
struct
FilenameMemoryStreamPair
{
FilenameMemoryStreamPair
(
string_view
filename
std
:
:
unique_ptr
<
MemoryStream
>
stream
)
:
filename
(
filename
)
stream
(
std
:
:
move
(
stream
)
)
{
}
std
:
:
string
filename
;
std
:
:
unique_ptr
<
MemoryStream
>
stream
;
}
;
typedef
std
:
:
function
<
Stream
*
(
string_view
filename
)
>
WriteBinarySpecStreamFactory
;
Result
WriteBinarySpecScript
(
Stream
*
json_stream
WriteBinarySpecStreamFactory
module_stream_factory
Script
*
string_view
source_filename
string_view
module_filename_noext
const
WriteBinaryOptions
&
)
;
Result
WriteBinarySpecScript
(
Stream
*
json_stream
Script
*
string_view
source_filename
string_view
module_filename_noext
const
WriteBinaryOptions
&
std
:
:
vector
<
FilenameMemoryStreamPair
>
*
out_module_streams
Stream
*
log_stream
=
nullptr
)
;
}
#
endif
