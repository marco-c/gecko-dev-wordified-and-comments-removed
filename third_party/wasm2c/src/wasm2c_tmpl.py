import
argparse
import
io
import
os
import
sys
def
EscapeCString
(
s
)
:
    
out
=
'
'
    
for
b
in
bytearray
(
s
.
encode
(
'
utf
-
8
'
)
)
:
        
if
b
in
(
34
92
)
:
            
out
+
=
'
\
\
'
+
chr
(
b
)
        
elif
b
=
=
10
:
            
out
+
=
'
\
\
n
'
        
elif
32
<
=
b
<
=
127
:
            
out
+
=
chr
(
b
)
        
else
:
            
out
+
=
'
\
\
x
%
02x
'
%
b
    
return
out
def
main
(
args
)
:
    
arg_parser
=
argparse
.
ArgumentParser
(
)
    
arg_parser
.
add_argument
(
'
-
o
'
'
-
-
output
'
metavar
=
'
PATH
'
                            
help
=
'
output
file
.
'
)
    
arg_parser
.
add_argument
(
'
file
'
help
=
'
input
file
.
'
)
    
options
=
arg_parser
.
parse_args
(
args
)
    
section_name
=
None
    
output
=
io
.
StringIO
(
)
    
output
.
write
(
'
/
*
Generated
from
\
'
%
s
\
'
by
wasm2c_tmpl
.
py
do
not
edit
!
*
/
\
n
'
%
                 
os
.
path
.
basename
(
options
.
file
)
)
    
with
open
(
options
.
file
)
as
f
:
        
for
line
in
f
.
readlines
(
)
:
            
if
line
.
startswith
(
'
%
%
'
)
:
                
if
section_name
is
not
None
:
                    
output
.
write
(
'
;
\
n
\
n
'
)
                
section_name
=
line
[
2
:
-
1
]
                
output
.
write
(
'
const
char
SECTION_NAME
(
%
s
)
[
]
=
\
n
'
%
section_name
)
            
else
:
                
output
.
write
(
'
"
%
s
"
\
n
'
%
EscapeCString
(
line
)
)
    
output
.
write
(
'
;
\
n
'
)
    
if
options
.
output
:
        
with
open
(
options
.
output
'
w
'
)
as
outf
:
            
outf
.
write
(
output
.
getvalue
(
)
)
    
else
:
        
sys
.
stdout
.
write
(
output
.
getvalue
(
)
)
    
return
0
if
__name__
=
=
'
__main__
'
:
    
sys
.
exit
(
main
(
sys
.
argv
[
1
:
]
)
)
