#
ifndef
WABT_TRACING_H_
#
define
WABT_TRACING_H_
#
ifndef
WABT_TRACING
#
define
WABT_TRACING
0
#
endif
#
include
"
src
/
common
.
h
"
namespace
wabt
{
#
if
WABT_TRACING
struct
TraceScope
{
WABT_DISALLOW_COPY_AND_ASSIGN
(
TraceScope
)
;
TraceScope
(
)
=
delete
;
TraceScope
(
const
char
*
method
)
;
template
<
typename
.
.
.
Args
>
TraceScope
(
const
char
*
method
const
char
*
format
Args
&
&
.
.
.
args
)
:
method_
(
method
)
{
PrintEnter
(
method
)
;
fprintf
(
stderr
format
std
:
:
forward
<
Args
>
(
args
)
.
.
.
)
;
PrintNewline
(
)
;
}
~
TraceScope
(
)
;
private
:
const
char
*
method_
;
void
PrintEnter
(
const
char
*
method
)
;
void
PrintNewline
(
)
;
}
;
#
define
WABT_TRACE
(
method_name
)
TraceScope
_func_
(
#
method_name
)
#
define
WABT_TRACE_ARGS
(
method_name
format
.
.
.
)
\
TraceScope
_func_
(
#
method_name
format
__VA_ARGS__
)
#
else
#
define
WABT_TRACE
(
method
)
#
define
WABT_TRACE_ARGS
(
method_name
format
.
.
.
)
#
endif
}
#
endif
