#
ifndef
WASM_RT_H_
#
define
WASM_RT_H_
#
include
<
stdbool
.
h
>
#
include
<
stdint
.
h
>
#
include
<
stddef
.
h
>
#
include
<
setjmp
.
h
>
#
if
defined
(
_WIN32
)
#
define
WASM2C_FUNC_EXPORT
__declspec
(
dllexport
)
#
else
#
define
WASM2C_FUNC_EXPORT
#
endif
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
ifndef
WASM_RT_MAX_CALL_STACK_DEPTH
#
define
WASM_RT_MAX_CALL_STACK_DEPTH
500
#
endif
#
if
defined
(
WASM_USE_GUARD_PAGES
)
&
&
defined
(
WASM_USE_EXPLICIT_BOUNDS_CHECKS
)
#
error
"
Cannot
define
both
WASM_USE_GUARD_PAGES
and
WASM_USE_EXPLICIT_BOUNDS_CHECKS
"
#
elif
!
defined
(
WASM_USE_GUARD_PAGES
)
&
&
!
defined
(
WASM_USE_EXPLICIT_BOUNDS_CHECKS
)
#
define
WASM_USE_GUARD_PAGES
#
endif
#
if
defined
(
_MSC_VER
)
#
define
WASM_RT_NO_RETURN
__declspec
(
noreturn
)
#
else
#
define
WASM_RT_NO_RETURN
__attribute__
(
(
noreturn
)
)
#
endif
typedef
enum
{
WASM_RT_TRAP_NONE
WASM_RT_TRAP_OOB
WASM_RT_TRAP_INT_OVERFLOW
WASM_RT_TRAP_DIV_BY_ZERO
WASM_RT_TRAP_INVALID_CONVERSION
WASM_RT_TRAP_UNREACHABLE
WASM_RT_TRAP_CALL_INDIRECT_TABLE_EXPANSION
WASM_RT_TRAP_CALL_INDIRECT_OOB_INDEX
WASM_RT_TRAP_CALL_INDIRECT_NULL_PTR
WASM_RT_TRAP_CALL_INDIRECT_TYPE_MISMATCH
WASM_RT_TRAP_CALL_INDIRECT_UNKNOWN_ERR
WASM_RT_TRAP_EXHAUSTION
WASM_RT_TRAP_SHADOW_MEM
WASM_RT_TRAP_WASI
}
wasm_rt_trap_t
;
typedef
enum
{
WASM_RT_I32
WASM_RT_I64
WASM_RT_F32
WASM_RT_F64
}
wasm_rt_type_t
;
typedef
void
(
*
wasm_rt_anyfunc_t
)
(
void
)
;
typedef
enum
{
WASM_RT_INTERNAL_FUNCTION
WASM_RT_EXTERNAL_FUNCTION
}
wasm_rt_elem_target_class_t
;
typedef
struct
{
wasm_rt_elem_target_class_t
func_class
;
uint32_t
func_type
;
wasm_rt_anyfunc_t
func
;
}
wasm_rt_elem_t
;
typedef
uint8_t
wasm2c_shadow_memory_cell_t
;
typedef
struct
{
wasm2c_shadow_memory_cell_t
*
data
;
size_t
data_size
;
void
*
allocation_sizes_map
;
uint32_t
heap_base
;
}
wasm2c_shadow_memory_t
;
typedef
struct
{
#
if
defined
(
WASM_USE_GUARD_PAGES
)
|
|
!
defined
(
WASM_USE_INCREMENTAL_MOVEABLE_MEMORY_ALLOC
)
uint8_t
*
const
data
;
#
else
uint8_t
*
data
;
#
endif
uint32_t
pages
max_pages
;
uint32_t
size
;
#
if
defined
(
WASM_CHECK_SHADOW_MEMORY
)
wasm2c_shadow_memory_t
shadow_memory
;
#
endif
}
wasm_rt_memory_t
;
#
if
UINTPTR_MAX
=
=
0xffffffff
#
define
WASM_HEAP_MASK
0xffffff
#
endif
typedef
struct
{
wasm_rt_elem_t
*
data
;
uint32_t
max_size
;
uint32_t
size
;
}
wasm_rt_table_t
;
typedef
struct
wasm_func_type_t
{
wasm_rt_type_t
*
params
;
wasm_rt_type_t
*
results
;
uint32_t
param_count
;
uint32_t
result_count
;
}
wasm_func_type_t
;
#
define
WASM2C_WASI_MAX_SETJMP_STACK
32
#
define
WASM2C_WASI_MAX_FDS
32
typedef
struct
wasm_sandbox_wasi_data
{
wasm_rt_memory_t
*
heap_memory
;
uint32_t
tempRet0
;
uint32_t
next_setjmp_index
;
jmp_buf
setjmp_stack
[
WASM2C_WASI_MAX_SETJMP_STACK
]
;
uint32_t
main_argc
;
char
*
*
main_argv
;
int
wasm_fd_to_native
[
WASM2C_WASI_MAX_FDS
]
;
uint32_t
next_wasm_fd
;
void
*
clock_data
;
}
wasm_sandbox_wasi_data
;
typedef
void
(
*
wasm_rt_sys_init_t
)
(
void
)
;
typedef
void
*
(
*
create_wasm2c_sandbox_t
)
(
void
)
;
typedef
void
(
*
destroy_wasm2c_sandbox_t
)
(
void
*
sbx_ptr
)
;
typedef
void
*
(
*
lookup_wasm2c_nonfunc_export_t
)
(
void
*
sbx_ptr
const
char
*
name
)
;
typedef
uint32_t
(
*
lookup_wasm2c_func_index_t
)
(
void
*
sbx_ptr
uint32_t
param_count
uint32_t
result_count
wasm_rt_type_t
*
types
)
;
typedef
uint32_t
(
*
add_wasm2c_callback_t
)
(
void
*
sbx_ptr
uint32_t
func_type_idx
void
*
func_ptr
wasm_rt_elem_target_class_t
func_class
)
;
typedef
void
(
*
remove_wasm2c_callback_t
)
(
void
*
sbx_ptr
uint32_t
callback_idx
)
;
typedef
struct
wasm2c_sandbox_funcs_t
{
wasm_rt_sys_init_t
wasm_rt_sys_init
;
create_wasm2c_sandbox_t
create_wasm2c_sandbox
;
destroy_wasm2c_sandbox_t
destroy_wasm2c_sandbox
;
lookup_wasm2c_nonfunc_export_t
lookup_wasm2c_nonfunc_export
;
lookup_wasm2c_func_index_t
lookup_wasm2c_func_index
;
add_wasm2c_callback_t
add_wasm2c_callback
;
remove_wasm2c_callback_t
remove_wasm2c_callback
;
}
wasm2c_sandbox_funcs_t
;
WASM_RT_NO_RETURN
extern
void
wasm_rt_trap
(
wasm_rt_trap_t
)
;
WASM_RT_NO_RETURN
extern
void
wasm_rt_callback_error_trap
(
wasm_rt_table_t
*
table
uint32_t
func_index
uint32_t
expected_func_type
)
;
extern
uint32_t
wasm_rt_register_func_type
(
wasm_func_type_t
*
*
p_func_type_structs
uint32_t
*
p_func_type_count
uint32_t
params
uint32_t
results
wasm_rt_type_t
*
types
)
;
void
wasm_rt_cleanup_func_types
(
wasm_func_type_t
*
*
p_func_type_structs
uint32_t
*
p_func_type_count
)
;
extern
bool
wasm_rt_allocate_memory
(
wasm_rt_memory_t
*
uint32_t
initial_pages
uint32_t
max_pages
)
;
extern
void
wasm_rt_deallocate_memory
(
wasm_rt_memory_t
*
)
;
extern
uint32_t
wasm_rt_grow_memory
(
wasm_rt_memory_t
*
uint32_t
pages
)
;
extern
void
wasm_rt_allocate_table
(
wasm_rt_table_t
*
uint32_t
elements
uint32_t
max_elements
)
;
extern
void
wasm_rt_deallocate_table
(
wasm_rt_table_t
*
)
;
extern
void
wasm_rt_expand_table
(
wasm_rt_table_t
*
)
;
extern
void
wasm_rt_sys_init
(
)
;
extern
void
wasm_rt_init_wasi
(
wasm_sandbox_wasi_data
*
)
;
extern
void
wasm_rt_cleanup_wasi
(
wasm_sandbox_wasi_data
*
)
;
extern
void
wasm2c_ensure_linked
(
)
;
extern
void
wasm2c_shadow_memory_create
(
wasm_rt_memory_t
*
mem
)
;
extern
void
wasm2c_shadow_memory_expand
(
wasm_rt_memory_t
*
mem
)
;
extern
void
wasm2c_shadow_memory_destroy
(
wasm_rt_memory_t
*
mem
)
;
WASM2C_FUNC_EXPORT
extern
void
wasm2c_shadow_memory_load
(
wasm_rt_memory_t
*
mem
const
char
*
func_name
uint32_t
ptr
uint32_t
ptr_size
)
;
WASM2C_FUNC_EXPORT
extern
void
wasm2c_shadow_memory_store
(
wasm_rt_memory_t
*
mem
const
char
*
func_name
uint32_t
ptr
uint32_t
ptr_size
)
;
extern
void
wasm2c_shadow_memory_reserve
(
wasm_rt_memory_t
*
mem
uint32_t
ptr
uint32_t
ptr_size
)
;
extern
void
wasm2c_shadow_memory_dlmalloc
(
wasm_rt_memory_t
*
mem
uint32_t
ptr
uint32_t
ptr_size
)
;
extern
void
wasm2c_shadow_memory_dlfree
(
wasm_rt_memory_t
*
mem
uint32_t
ptr
)
;
extern
void
wasm2c_shadow_memory_mark_globals_heap_boundary
(
wasm_rt_memory_t
*
mem
uint32_t
ptr
)
;
WASM2C_FUNC_EXPORT
extern
void
wasm2c_shadow_memory_print_allocations
(
wasm_rt_memory_t
*
mem
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
