#
ifndef
XSIMD_AVX512VNNI_AVX512BW_REGISTER_HPP
#
define
XSIMD_AVX512VNNI_AVX512BW_REGISTER_HPP
#
include
"
.
/
xsimd_avx512bw_register
.
hpp
"
namespace
xsimd
{
template
<
typename
arch
>
struct
avx512vnni
;
template
<
>
struct
avx512vnni
<
avx512bw
>
:
avx512bw
{
static
constexpr
bool
supported
(
)
noexcept
{
return
XSIMD_WITH_AVX512VNNI_AVX512BW
;
}
static
constexpr
bool
available
(
)
noexcept
{
return
true
;
}
static
constexpr
char
const
*
name
(
)
noexcept
{
return
"
avx512vnni
+
avx512bw
"
;
}
}
;
#
if
XSIMD_WITH_AVX512VNNI_AVX512BW
#
if
!
XSIMD_WITH_AVX512BW
#
error
"
architecture
inconsistency
:
avx512vnni
+
avx512bw
requires
avx512bw
"
#
endif
namespace
types
{
template
<
class
T
>
struct
get_bool_simd_register
<
T
avx512vnni
<
avx512bw
>
>
{
using
type
=
simd_avx512_bool_register
<
T
>
;
}
;
XSIMD_DECLARE_SIMD_REGISTER_ALIAS
(
avx512vnni
<
avx512bw
>
avx512bw
)
;
}
#
endif
}
#
endif
