#
ifndef
XSIMD_FMA4_REGISTER_HPP
#
define
XSIMD_FMA4_REGISTER_HPP
#
include
"
.
/
xsimd_sse4_2_register
.
hpp
"
#
if
XSIMD_WITH_FMA4
#
include
<
x86intrin
.
h
>
#
endif
namespace
xsimd
{
struct
fma4
:
sse4_2
{
static
constexpr
bool
supported
(
)
noexcept
{
return
XSIMD_WITH_FMA4
;
}
static
constexpr
bool
available
(
)
noexcept
{
return
true
;
}
static
constexpr
char
const
*
name
(
)
noexcept
{
return
"
fma4
"
;
}
}
;
#
if
XSIMD_WITH_FMA4
#
if
!
XSIMD_WITH_SSE4_2
#
error
"
architecture
inconsistency
:
fma4
requires
sse4
.
2
"
#
endif
namespace
types
{
XSIMD_DECLARE_SIMD_REGISTER_ALIAS
(
fma4
sse4_2
)
;
}
#
endif
}
#
endif
