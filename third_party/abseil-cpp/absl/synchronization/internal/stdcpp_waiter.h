#
ifndef
ABSL_SYNCHRONIZATION_INTERNAL_STDCPP_WAITER_H_
#
define
ABSL_SYNCHRONIZATION_INTERNAL_STDCPP_WAITER_H_
#
include
<
condition_variable
>
#
include
<
mutex
>
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
synchronization
/
internal
/
kernel_timeout
.
h
"
#
include
"
absl
/
synchronization
/
internal
/
waiter_base
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
synchronization_internal
{
#
define
ABSL_INTERNAL_HAVE_STDCPP_WAITER
1
class
StdcppWaiter
:
public
WaiterCrtp
<
StdcppWaiter
>
{
public
:
StdcppWaiter
(
)
;
bool
Wait
(
KernelTimeout
t
)
;
void
Post
(
)
;
void
Poke
(
)
;
static
constexpr
char
kName
[
]
=
"
StdcppWaiter
"
;
private
:
void
InternalCondVarPoke
(
)
;
std
:
:
mutex
mu_
;
std
:
:
condition_variable
cv_
;
int
waiter_count_
;
int
wakeup_count_
;
}
;
}
ABSL_NAMESPACE_END
}
#
endif
