#
ifndef
ABSL_SYNCHRONIZATION_INTERNAL_WIN32_WAITER_H_
#
define
ABSL_SYNCHRONIZATION_INTERNAL_WIN32_WAITER_H_
#
ifdef
_WIN32
#
include
<
sdkddkver
.
h
>
#
endif
#
if
defined
(
_WIN32
)
&
&
!
defined
(
__MINGW32__
)
&
&
\
_WIN32_WINNT
>
=
_WIN32_WINNT_VISTA
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
synchronization
/
internal
/
kernel_timeout
.
h
"
#
include
"
absl
/
synchronization
/
internal
/
waiter_base
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
synchronization_internal
{
#
define
ABSL_INTERNAL_HAVE_WIN32_WAITER
1
class
Win32Waiter
:
public
WaiterCrtp
<
Win32Waiter
>
{
public
:
Win32Waiter
(
)
;
bool
Wait
(
KernelTimeout
t
)
;
void
Post
(
)
;
void
Poke
(
)
;
static
constexpr
char
kName
[
]
=
"
Win32Waiter
"
;
private
:
class
WinHelper
;
void
InternalCondVarPoke
(
)
;
alignas
(
void
*
)
unsigned
char
mu_storage_
[
sizeof
(
void
*
)
]
;
alignas
(
void
*
)
unsigned
char
cv_storage_
[
sizeof
(
void
*
)
]
;
int
waiter_count_
;
int
wakeup_count_
;
}
;
}
ABSL_NAMESPACE_END
}
#
endif
#
endif
