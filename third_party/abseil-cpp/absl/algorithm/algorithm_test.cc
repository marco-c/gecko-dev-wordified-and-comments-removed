#
include
"
absl
/
algorithm
/
algorithm
.
h
"
#
include
<
algorithm
>
#
include
<
list
>
#
include
<
vector
>
#
include
"
gmock
/
gmock
.
h
"
#
include
"
gtest
/
gtest
.
h
"
#
include
"
absl
/
base
/
config
.
h
"
namespace
{
class
LinearSearchTest
:
public
testing
:
:
Test
{
protected
:
LinearSearchTest
(
)
:
container_
{
1
2
3
}
{
}
static
bool
Is3
(
int
n
)
{
return
n
=
=
3
;
}
static
bool
Is4
(
int
n
)
{
return
n
=
=
4
;
}
std
:
:
vector
<
int
>
container_
;
}
;
TEST_F
(
LinearSearchTest
linear_search
)
{
EXPECT_TRUE
(
absl
:
:
linear_search
(
container_
.
begin
(
)
container_
.
end
(
)
3
)
)
;
EXPECT_FALSE
(
absl
:
:
linear_search
(
container_
.
begin
(
)
container_
.
end
(
)
4
)
)
;
}
TEST_F
(
LinearSearchTest
linear_searchConst
)
{
const
std
:
:
vector
<
int
>
*
const
const_container
=
&
container_
;
EXPECT_TRUE
(
absl
:
:
linear_search
(
const_container
-
>
begin
(
)
const_container
-
>
end
(
)
3
)
)
;
EXPECT_FALSE
(
absl
:
:
linear_search
(
const_container
-
>
begin
(
)
const_container
-
>
end
(
)
4
)
)
;
}
}
