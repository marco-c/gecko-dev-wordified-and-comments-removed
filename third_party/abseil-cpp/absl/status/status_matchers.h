#
ifndef
ABSL_STATUS_STATUS_MATCHERS_H_
#
define
ABSL_STATUS_STATUS_MATCHERS_H_
#
include
<
ostream
>
#
include
<
type_traits
>
#
include
<
utility
>
#
include
"
gmock
/
gmock
.
h
"
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
status
/
internal
/
status_matchers
.
h
"
namespace
absl_testing
{
ABSL_NAMESPACE_BEGIN
template
<
typename
InnerMatcherT
>
status_internal
:
:
IsOkAndHoldsMatcher
<
typename
std
:
:
decay
<
InnerMatcherT
>
:
:
type
>
IsOkAndHolds
(
InnerMatcherT
&
&
inner_matcher
)
{
return
status_internal
:
:
IsOkAndHoldsMatcher
<
typename
std
:
:
decay
<
InnerMatcherT
>
:
:
type
>
(
std
:
:
forward
<
InnerMatcherT
>
(
inner_matcher
)
)
;
}
template
<
typename
StatusCodeMatcherT
typename
StatusMessageMatcherT
>
status_internal
:
:
StatusIsMatcher
StatusIs
(
StatusCodeMatcherT
&
&
code_matcher
StatusMessageMatcherT
&
&
message_matcher
)
{
return
status_internal
:
:
StatusIsMatcher
(
std
:
:
forward
<
StatusCodeMatcherT
>
(
code_matcher
)
std
:
:
forward
<
StatusMessageMatcherT
>
(
message_matcher
)
)
;
}
template
<
typename
StatusCodeMatcherT
>
status_internal
:
:
StatusIsMatcher
StatusIs
(
StatusCodeMatcherT
&
&
code_matcher
)
{
return
StatusIs
(
std
:
:
forward
<
StatusCodeMatcherT
>
(
code_matcher
)
:
:
testing
:
:
_
)
;
}
inline
status_internal
:
:
IsOkMatcher
IsOk
(
)
{
return
status_internal
:
:
IsOkMatcher
(
)
;
}
ABSL_NAMESPACE_END
}
#
endif
