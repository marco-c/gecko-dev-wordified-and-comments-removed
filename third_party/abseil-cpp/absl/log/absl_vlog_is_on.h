#
ifndef
ABSL_LOG_ABSL_VLOG_IS_ON_H_
#
define
ABSL_LOG_ABSL_VLOG_IS_ON_H_
#
include
"
absl
/
base
/
attributes
.
h
"
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
log
/
internal
/
vlog_config
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
#
ifdef
ABSL_MAX_VLOG_VERBOSITY
#
define
ABSL_LOG_INTERNAL_MAX_LOG_VERBOSITY_CHECK
(
x
)
\
(
(
x
)
<
=
ABSL_MAX_VLOG_VERBOSITY
)
&
&
#
else
#
define
ABSL_LOG_INTERNAL_MAX_LOG_VERBOSITY_CHECK
(
x
)
#
endif
#
define
ABSL_VLOG_IS_ON
(
verbose_level
)
\
(
ABSL_LOG_INTERNAL_MAX_LOG_VERBOSITY_CHECK
(
verbose_level
)
[
]
(
)
\
-
>
:
:
absl
:
:
log_internal
:
:
VLogSite
*
\
{
\
ABSL_CONST_INIT
static
:
:
absl
:
:
log_internal
:
:
VLogSite
site
(
__FILE__
)
;
\
return
&
site
;
\
}
(
)
\
-
>
IsEnabled
(
verbose_level
)
)
namespace
absl
{
ABSL_NAMESPACE_BEGIN
inline
int
SetGlobalVLogLevel
(
int
log_level
)
{
return
absl
:
:
log_internal
:
:
UpdateGlobalVLogLevel
(
log_level
)
;
}
inline
int
SetVLogLevel
(
absl
:
:
string_view
module_pattern
int
log_level
)
{
return
absl
:
:
log_internal
:
:
PrependVModule
(
module_pattern
log_level
)
;
}
ABSL_NAMESPACE_END
}
#
endif
