#
include
"
absl
/
log
/
internal
/
test_helpers
.
h
"
#
ifdef
__Fuchsia__
#
include
<
zircon
/
syscalls
.
h
>
#
endif
#
include
"
gtest
/
gtest
.
h
"
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
base
/
log_severity
.
h
"
#
include
"
absl
/
log
/
globals
.
h
"
#
include
"
absl
/
log
/
initialize
.
h
"
#
include
"
absl
/
log
/
internal
/
globals
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
log_internal
{
bool
LoggingEnabledAt
(
absl
:
:
LogSeverity
severity
)
{
return
severity
>
=
kAbslMinLogLevel
&
&
severity
>
=
absl
:
:
MinLogLevel
(
)
;
}
#
if
GTEST_HAS_DEATH_TEST
bool
DiedOfFatal
(
int
exit_status
)
{
#
if
defined
(
_WIN32
)
return
:
:
testing
:
:
ExitedWithCode
(
3
)
(
exit_status
&
0x7fffffff
)
;
#
elif
defined
(
__Fuchsia__
)
return
:
:
testing
:
:
ExitedWithCode
(
ZX_TASK_RETCODE_SYSCALL_KILL
)
(
exit_status
)
;
#
elif
defined
(
__ANDROID__
)
&
&
defined
(
__aarch64__
)
return
true
;
#
else
return
:
:
testing
:
:
KilledBySignal
(
SIGABRT
)
(
exit_status
)
;
#
endif
}
bool
DiedOfQFatal
(
int
exit_status
)
{
return
:
:
testing
:
:
ExitedWithCode
(
1
)
(
exit_status
)
;
}
#
endif
void
LogTestEnvironment
:
:
SetUp
(
)
{
if
(
!
absl
:
:
log_internal
:
:
IsInitialized
(
)
)
{
absl
:
:
InitializeLog
(
)
;
}
}
}
ABSL_NAMESPACE_END
}
