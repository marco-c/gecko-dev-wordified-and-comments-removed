#
ifndef
ABSL_LOG_INTERNAL_LOG_FORMAT_H_
#
define
ABSL_LOG_INTERNAL_LOG_FORMAT_H_
#
include
<
stddef
.
h
>
#
include
<
string
>
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
base
/
log_severity
.
h
"
#
include
"
absl
/
log
/
internal
/
config
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
#
include
"
absl
/
time
/
civil_time
.
h
"
#
include
"
absl
/
time
/
time
.
h
"
#
include
"
absl
/
types
/
span
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
log_internal
{
enum
class
PrefixFormat
{
kNotRaw
kRaw
}
;
std
:
:
string
FormatLogMessage
(
absl
:
:
LogSeverity
severity
absl
:
:
CivilSecond
civil_second
absl
:
:
Duration
subsecond
log_internal
:
:
Tid
tid
absl
:
:
string_view
basename
int
line
PrefixFormat
format
absl
:
:
string_view
message
)
;
size_t
FormatLogPrefix
(
absl
:
:
LogSeverity
severity
absl
:
:
Time
timestamp
log_internal
:
:
Tid
tid
absl
:
:
string_view
basename
int
line
PrefixFormat
format
absl
:
:
Span
<
char
>
&
buf
)
;
}
ABSL_NAMESPACE_END
}
#
endif
