#
ifndef
ABSL_LOG_CHECK_H_
#
define
ABSL_LOG_CHECK_H_
#
include
"
absl
/
log
/
internal
/
check_impl
.
h
"
#
include
"
absl
/
log
/
internal
/
check_op
.
h
"
#
include
"
absl
/
log
/
internal
/
conditions
.
h
"
#
include
"
absl
/
log
/
internal
/
log_message
.
h
"
#
include
"
absl
/
log
/
internal
/
strip
.
h
"
#
define
CHECK
(
condition
)
ABSL_LOG_INTERNAL_CHECK_IMPL
(
(
condition
)
#
condition
)
#
define
QCHECK
(
condition
)
ABSL_LOG_INTERNAL_QCHECK_IMPL
(
(
condition
)
#
condition
)
#
define
PCHECK
(
condition
)
ABSL_LOG_INTERNAL_PCHECK_IMPL
(
(
condition
)
#
condition
)
#
define
DCHECK
(
condition
)
ABSL_LOG_INTERNAL_DCHECK_IMPL
(
(
condition
)
#
condition
)
#
define
CHECK_EQ
(
val1
val2
)
\
ABSL_LOG_INTERNAL_CHECK_EQ_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
CHECK_NE
(
val1
val2
)
\
ABSL_LOG_INTERNAL_CHECK_NE_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
CHECK_LE
(
val1
val2
)
\
ABSL_LOG_INTERNAL_CHECK_LE_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
CHECK_LT
(
val1
val2
)
\
ABSL_LOG_INTERNAL_CHECK_LT_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
CHECK_GE
(
val1
val2
)
\
ABSL_LOG_INTERNAL_CHECK_GE_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
CHECK_GT
(
val1
val2
)
\
ABSL_LOG_INTERNAL_CHECK_GT_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
QCHECK_EQ
(
val1
val2
)
\
ABSL_LOG_INTERNAL_QCHECK_EQ_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
QCHECK_NE
(
val1
val2
)
\
ABSL_LOG_INTERNAL_QCHECK_NE_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
QCHECK_LE
(
val1
val2
)
\
ABSL_LOG_INTERNAL_QCHECK_LE_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
QCHECK_LT
(
val1
val2
)
\
ABSL_LOG_INTERNAL_QCHECK_LT_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
QCHECK_GE
(
val1
val2
)
\
ABSL_LOG_INTERNAL_QCHECK_GE_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
QCHECK_GT
(
val1
val2
)
\
ABSL_LOG_INTERNAL_QCHECK_GT_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
DCHECK_EQ
(
val1
val2
)
\
ABSL_LOG_INTERNAL_DCHECK_EQ_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
DCHECK_NE
(
val1
val2
)
\
ABSL_LOG_INTERNAL_DCHECK_NE_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
DCHECK_LE
(
val1
val2
)
\
ABSL_LOG_INTERNAL_DCHECK_LE_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
DCHECK_LT
(
val1
val2
)
\
ABSL_LOG_INTERNAL_DCHECK_LT_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
DCHECK_GE
(
val1
val2
)
\
ABSL_LOG_INTERNAL_DCHECK_GE_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
DCHECK_GT
(
val1
val2
)
\
ABSL_LOG_INTERNAL_DCHECK_GT_IMPL
(
(
val1
)
#
val1
(
val2
)
#
val2
)
#
define
CHECK_OK
(
status
)
ABSL_LOG_INTERNAL_CHECK_OK_IMPL
(
(
status
)
#
status
)
#
define
QCHECK_OK
(
status
)
ABSL_LOG_INTERNAL_QCHECK_OK_IMPL
(
(
status
)
#
status
)
#
define
DCHECK_OK
(
status
)
ABSL_LOG_INTERNAL_DCHECK_OK_IMPL
(
(
status
)
#
status
)
#
define
CHECK_STREQ
(
s1
s2
)
\
ABSL_LOG_INTERNAL_CHECK_STREQ_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
CHECK_STRNE
(
s1
s2
)
\
ABSL_LOG_INTERNAL_CHECK_STRNE_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
CHECK_STRCASEEQ
(
s1
s2
)
\
ABSL_LOG_INTERNAL_CHECK_STRCASEEQ_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
CHECK_STRCASENE
(
s1
s2
)
\
ABSL_LOG_INTERNAL_CHECK_STRCASENE_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
QCHECK_STREQ
(
s1
s2
)
\
ABSL_LOG_INTERNAL_QCHECK_STREQ_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
QCHECK_STRNE
(
s1
s2
)
\
ABSL_LOG_INTERNAL_QCHECK_STRNE_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
QCHECK_STRCASEEQ
(
s1
s2
)
\
ABSL_LOG_INTERNAL_QCHECK_STRCASEEQ_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
QCHECK_STRCASENE
(
s1
s2
)
\
ABSL_LOG_INTERNAL_QCHECK_STRCASENE_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
DCHECK_STREQ
(
s1
s2
)
\
ABSL_LOG_INTERNAL_DCHECK_STREQ_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
DCHECK_STRNE
(
s1
s2
)
\
ABSL_LOG_INTERNAL_DCHECK_STRNE_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
DCHECK_STRCASEEQ
(
s1
s2
)
\
ABSL_LOG_INTERNAL_DCHECK_STRCASEEQ_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
define
DCHECK_STRCASENE
(
s1
s2
)
\
ABSL_LOG_INTERNAL_DCHECK_STRCASENE_IMPL
(
(
s1
)
#
s1
(
s2
)
#
s2
)
#
endif
