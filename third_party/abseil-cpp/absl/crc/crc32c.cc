#
include
"
absl
/
crc
/
crc32c
.
h
"
#
include
<
cstdint
>
#
include
"
absl
/
crc
/
internal
/
crc
.
h
"
#
include
"
absl
/
crc
/
internal
/
crc32c
.
h
"
#
include
"
absl
/
crc
/
internal
/
crc_memcpy
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
{
const
crc_internal
:
:
CRC
*
CrcEngine
(
)
{
static
const
crc_internal
:
:
CRC
*
engine
=
crc_internal
:
:
CRC
:
:
Crc32c
(
)
;
return
engine
;
}
constexpr
uint32_t
kCRC32Xor
=
0xffffffffU
;
}
namespace
crc_internal
{
crc32c_t
UnextendCrc32cByZeroes
(
crc32c_t
initial_crc
size_t
length
)
{
uint32_t
crc
=
static_cast
<
uint32_t
>
(
initial_crc
)
^
kCRC32Xor
;
CrcEngine
(
)
-
>
UnextendByZeroes
(
&
crc
length
)
;
return
static_cast
<
crc32c_t
>
(
crc
^
kCRC32Xor
)
;
}
crc32c_t
ExtendCrc32cInternal
(
crc32c_t
initial_crc
absl
:
:
string_view
buf_to_add
)
{
uint32_t
crc
=
static_cast
<
uint32_t
>
(
initial_crc
)
^
kCRC32Xor
;
CrcEngine
(
)
-
>
Extend
(
&
crc
buf_to_add
.
data
(
)
buf_to_add
.
size
(
)
)
;
return
static_cast
<
crc32c_t
>
(
crc
^
kCRC32Xor
)
;
}
}
crc32c_t
ExtendCrc32cByZeroes
(
crc32c_t
initial_crc
size_t
length
)
{
uint32_t
crc
=
static_cast
<
uint32_t
>
(
initial_crc
)
^
kCRC32Xor
;
CrcEngine
(
)
-
>
ExtendByZeroes
(
&
crc
length
)
;
return
static_cast
<
crc32c_t
>
(
crc
^
kCRC32Xor
)
;
}
crc32c_t
ConcatCrc32c
(
crc32c_t
lhs_crc
crc32c_t
rhs_crc
size_t
rhs_len
)
{
uint32_t
result
=
static_cast
<
uint32_t
>
(
lhs_crc
)
;
CrcEngine
(
)
-
>
ExtendByZeroes
(
&
result
rhs_len
)
;
return
crc32c_t
{
result
^
static_cast
<
uint32_t
>
(
rhs_crc
)
}
;
}
crc32c_t
RemoveCrc32cPrefix
(
crc32c_t
crc_a
crc32c_t
crc_ab
size_t
length_b
)
{
return
ConcatCrc32c
(
crc_a
crc_ab
length_b
)
;
}
crc32c_t
MemcpyCrc32c
(
void
*
dest
const
void
*
src
size_t
count
crc32c_t
initial_crc
)
{
return
static_cast
<
crc32c_t
>
(
crc_internal
:
:
Crc32CAndCopy
(
dest
src
count
initial_crc
false
)
)
;
}
crc32c_t
RemoveCrc32cSuffix
(
crc32c_t
full_string_crc
crc32c_t
suffix_crc
size_t
suffix_len
)
{
uint32_t
result
=
static_cast
<
uint32_t
>
(
full_string_crc
)
^
static_cast
<
uint32_t
>
(
suffix_crc
)
;
CrcEngine
(
)
-
>
UnextendByZeroes
(
&
result
suffix_len
)
;
return
crc32c_t
{
result
}
;
}
ABSL_NAMESPACE_END
}
