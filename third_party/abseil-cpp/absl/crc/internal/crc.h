#
ifndef
ABSL_CRC_INTERNAL_CRC_H_
#
define
ABSL_CRC_INTERNAL_CRC_H_
#
include
<
cstdint
>
#
include
"
absl
/
base
/
config
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
crc_internal
{
class
CRC
{
public
:
virtual
~
CRC
(
)
;
virtual
void
Extend
(
uint32_t
*
crc
const
void
*
bytes
size_t
length
)
const
=
0
;
virtual
void
ExtendByZeroes
(
uint32_t
*
crc
size_t
length
)
const
=
0
;
virtual
void
UnextendByZeroes
(
uint32_t
*
crc
size_t
length
)
const
=
0
;
virtual
void
Scramble
(
uint32_t
*
crc
)
const
=
0
;
virtual
void
Unscramble
(
uint32_t
*
crc
)
const
=
0
;
static
CRC
*
Crc32c
(
)
;
protected
:
CRC
(
)
;
private
:
CRC
(
const
CRC
&
)
=
delete
;
CRC
&
operator
=
(
const
CRC
&
)
=
delete
;
}
;
}
ABSL_NAMESPACE_END
}
#
endif
