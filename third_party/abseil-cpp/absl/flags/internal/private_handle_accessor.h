#
ifndef
ABSL_FLAGS_INTERNAL_PRIVATE_HANDLE_ACCESSOR_H_
#
define
ABSL_FLAGS_INTERNAL_PRIVATE_HANDLE_ACCESSOR_H_
#
include
<
memory
>
#
include
<
string
>
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
flags
/
commandlineflag
.
h
"
#
include
"
absl
/
flags
/
internal
/
commandlineflag
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
flags_internal
{
class
PrivateHandleAccessor
{
public
:
static
FlagFastTypeId
TypeId
(
const
CommandLineFlag
&
flag
)
;
static
std
:
:
unique_ptr
<
FlagStateInterface
>
SaveState
(
CommandLineFlag
&
flag
)
;
static
bool
IsSpecifiedOnCommandLine
(
const
CommandLineFlag
&
flag
)
;
static
bool
ValidateInputValue
(
const
CommandLineFlag
&
flag
absl
:
:
string_view
value
)
;
static
void
CheckDefaultValueParsingRoundtrip
(
const
CommandLineFlag
&
flag
)
;
static
bool
ParseFrom
(
CommandLineFlag
&
flag
absl
:
:
string_view
value
flags_internal
:
:
FlagSettingMode
set_mode
flags_internal
:
:
ValueSource
source
std
:
:
string
&
error
)
;
}
;
}
ABSL_NAMESPACE_END
}
#
endif
