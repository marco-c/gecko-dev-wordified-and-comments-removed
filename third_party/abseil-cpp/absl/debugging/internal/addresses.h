#
ifndef
ABSL_DEBUGGING_INTERNAL_ADDRESSES_H_
#
define
ABSL_DEBUGGING_INTERNAL_ADDRESSES_H_
#
include
<
stdint
.
h
>
#
include
"
absl
/
base
/
config
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
debugging_internal
{
inline
uintptr_t
StripPointerMetadata
(
uintptr_t
ptr
)
{
#
if
defined
(
__aarch64__
)
register
uintptr_t
x30
__asm__
(
"
x30
"
)
=
ptr
;
#
define
ABSL_XPACLRI_HINT
"
hint
#
0x7
;
"
asm
(
ABSL_XPACLRI_HINT
:
"
+
r
"
(
x30
)
)
;
#
undef
ABSL_XPACLRI_HINT
return
x30
;
#
else
return
ptr
;
#
endif
}
inline
uintptr_t
StripPointerMetadata
(
void
*
ptr
)
{
return
StripPointerMetadata
(
reinterpret_cast
<
uintptr_t
>
(
ptr
)
)
;
}
}
ABSL_NAMESPACE_END
}
#
endif
