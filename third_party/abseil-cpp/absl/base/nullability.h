#
ifndef
ABSL_BASE_NULLABILITY_H_
#
define
ABSL_BASE_NULLABILITY_H_
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
base
/
internal
/
nullability_impl
.
h
"
#
define
ABSL_POINTERS_DEFAULT_NONNULL
#
if
defined
(
__clang__
)
&
&
!
defined
(
__OBJC__
)
&
&
\
ABSL_HAVE_FEATURE
(
nullability_on_classes
)
#
define
absl_nonnull
_Nonnull
#
define
absl_nullable
_Nullable
#
define
absl_nullability_unknown
_Null_unspecified
#
else
#
define
absl_nonnull
#
define
absl_nullable
#
define
absl_nullability_unknown
#
endif
#
if
ABSL_HAVE_FEATURE
(
nullability_on_classes
)
#
define
ABSL_NULLABILITY_COMPATIBLE
_Nullable
#
else
#
define
ABSL_NULLABILITY_COMPATIBLE
#
endif
namespace
absl
{
ABSL_NAMESPACE_BEGIN
template
<
typename
T
>
using
Nonnull
=
nullability_internal
:
:
NonnullImpl
<
T
>
;
template
<
typename
T
>
using
Nullable
=
nullability_internal
:
:
NullableImpl
<
T
>
;
template
<
typename
T
>
using
NullabilityUnknown
=
nullability_internal
:
:
NullabilityUnknownImpl
<
T
>
;
ABSL_NAMESPACE_END
}
#
endif
