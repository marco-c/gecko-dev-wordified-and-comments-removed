#
ifndef
ABSL_RANDOM_RANDOM_H_
#
define
ABSL_RANDOM_RANDOM_H_
#
include
<
cstdint
>
#
include
<
random
>
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
random
/
distributions
.
h
"
#
include
"
absl
/
random
/
internal
/
nonsecure_base
.
h
"
#
include
"
absl
/
random
/
internal
/
pcg_engine
.
h
"
#
include
"
absl
/
random
/
internal
/
randen_engine
.
h
"
#
include
"
absl
/
random
/
seed_sequences
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
class
BitGen
:
private
random_internal
:
:
NonsecureURBGBase
<
random_internal
:
:
randen_engine
<
uint64_t
>
>
{
using
Base
=
random_internal
:
:
NonsecureURBGBase
<
random_internal
:
:
randen_engine
<
uint64_t
>
>
;
public
:
using
result_type
=
typename
Base
:
:
result_type
;
using
Base
:
:
Base
;
using
Base
:
:
operator
=
;
using
Base
:
:
min
;
using
Base
:
:
max
;
using
Base
:
:
discard
;
using
Base
:
:
operator
(
)
;
using
Base
:
:
operator
=
=
;
using
Base
:
:
operator
!
=
;
}
;
class
InsecureBitGen
:
private
random_internal
:
:
NonsecureURBGBase
<
random_internal
:
:
pcg64_2018_engine
>
{
using
Base
=
random_internal
:
:
NonsecureURBGBase
<
random_internal
:
:
pcg64_2018_engine
>
;
public
:
using
result_type
=
typename
Base
:
:
result_type
;
using
Base
:
:
Base
;
using
Base
:
:
operator
=
;
using
Base
:
:
min
;
using
Base
:
:
max
;
using
Base
:
:
discard
;
using
Base
:
:
operator
(
)
;
using
Base
:
:
operator
=
=
;
using
Base
:
:
operator
!
=
;
}
;
ABSL_NAMESPACE_END
}
#
endif
