#
include
"
absl
/
strings
/
internal
/
str_format
/
output
.
h
"
#
include
<
errno
.
h
>
#
include
<
cstring
>
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
str_format_internal
{
namespace
{
struct
ClearErrnoGuard
{
ClearErrnoGuard
(
)
:
old_value
(
errno
)
{
errno
=
0
;
}
~
ClearErrnoGuard
(
)
{
if
(
!
errno
)
errno
=
old_value
;
}
int
old_value
;
}
;
}
void
BufferRawSink
:
:
Write
(
string_view
v
)
{
size_t
to_write
=
std
:
:
min
(
v
.
size
(
)
size_
)
;
std
:
:
memcpy
(
buffer_
v
.
data
(
)
to_write
)
;
buffer_
+
=
to_write
;
size_
-
=
to_write
;
total_written_
+
=
v
.
size
(
)
;
}
void
FILERawSink
:
:
Write
(
string_view
v
)
{
while
(
!
v
.
empty
(
)
&
&
!
error_
)
{
ClearErrnoGuard
guard
;
if
(
size_t
result
=
std
:
:
fwrite
(
v
.
data
(
)
1
v
.
size
(
)
output_
)
)
{
count_
+
=
result
;
v
.
remove_prefix
(
result
)
;
}
else
{
if
(
errno
=
=
EINTR
)
{
continue
;
}
else
if
(
errno
)
{
error_
=
errno
;
}
else
if
(
std
:
:
ferror
(
output_
)
)
{
error_
=
EBADF
;
}
else
{
continue
;
}
}
}
}
}
ABSL_NAMESPACE_END
}
