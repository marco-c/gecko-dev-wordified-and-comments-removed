#
ifndef
ABSL_STRINGS_INTERNAL_CHARCONV_PARSE_H_
#
define
ABSL_STRINGS_INTERNAL_CHARCONV_PARSE_H_
#
include
<
cstdint
>
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
strings
/
charconv
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
strings_internal
{
enum
class
FloatType
{
kNumber
kInfinity
kNan
}
;
struct
ParsedFloat
{
uint64_t
mantissa
=
0
;
int
exponent
=
0
;
int
literal_exponent
=
0
;
FloatType
type
=
FloatType
:
:
kNumber
;
const
char
*
subrange_begin
=
nullptr
;
const
char
*
subrange_end
=
nullptr
;
const
char
*
end
=
nullptr
;
}
;
template
<
int
base
>
ParsedFloat
ParseFloat
(
const
char
*
begin
const
char
*
end
absl
:
:
chars_format
format_flags
)
;
extern
template
ParsedFloat
ParseFloat
<
10
>
(
const
char
*
begin
const
char
*
end
absl
:
:
chars_format
format_flags
)
;
extern
template
ParsedFloat
ParseFloat
<
16
>
(
const
char
*
begin
const
char
*
end
absl
:
:
chars_format
format_flags
)
;
}
ABSL_NAMESPACE_END
}
#
endif
