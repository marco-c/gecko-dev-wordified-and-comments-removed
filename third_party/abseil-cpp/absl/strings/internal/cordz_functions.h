#
ifndef
ABSL_STRINGS_INTERNAL_CORDZ_FUNCTIONS_H_
#
define
ABSL_STRINGS_INTERNAL_CORDZ_FUNCTIONS_H_
#
include
<
stdint
.
h
>
#
include
"
absl
/
base
/
attributes
.
h
"
#
include
"
absl
/
base
/
config
.
h
"
#
include
"
absl
/
base
/
optimization
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
namespace
cord_internal
{
int32_t
get_cordz_mean_interval
(
)
;
void
set_cordz_mean_interval
(
int32_t
mean_interval
)
;
#
if
defined
(
ABSL_INTERNAL_CORDZ_ENABLED
)
#
error
ABSL_INTERNAL_CORDZ_ENABLED
cannot
be
set
directly
#
elif
defined
(
__linux__
)
&
&
defined
(
ABSL_HAVE_THREAD_LOCAL
)
#
define
ABSL_INTERNAL_CORDZ_ENABLED
1
#
endif
#
ifdef
ABSL_INTERNAL_CORDZ_ENABLED
ABSL_CONST_INIT
extern
thread_local
int64_t
cordz_next_sample
;
bool
cordz_should_profile_slow
(
)
;
inline
bool
cordz_should_profile
(
)
{
if
(
ABSL_PREDICT_TRUE
(
cordz_next_sample
>
1
)
)
{
cordz_next_sample
-
-
;
return
false
;
}
return
cordz_should_profile_slow
(
)
;
}
void
cordz_set_next_sample_for_testing
(
int64_t
next_sample
)
;
#
else
inline
bool
cordz_should_profile
(
)
{
return
false
;
}
inline
void
cordz_set_next_sample_for_testing
(
int64_t
)
{
}
#
endif
}
ABSL_NAMESPACE_END
}
#
endif
