#
ifndef
ABSL_STRINGS_STRIP_H_
#
define
ABSL_STRINGS_STRIP_H_
#
include
<
cstddef
>
#
include
<
string
>
#
include
"
absl
/
base
/
macros
.
h
"
#
include
"
absl
/
base
/
nullability
.
h
"
#
include
"
absl
/
strings
/
ascii
.
h
"
#
include
"
absl
/
strings
/
match
.
h
"
#
include
"
absl
/
strings
/
string_view
.
h
"
namespace
absl
{
ABSL_NAMESPACE_BEGIN
inline
bool
ConsumePrefix
(
absl
:
:
Nonnull
<
absl
:
:
string_view
*
>
str
absl
:
:
string_view
expected
)
{
if
(
!
absl
:
:
StartsWith
(
*
str
expected
)
)
return
false
;
str
-
>
remove_prefix
(
expected
.
size
(
)
)
;
return
true
;
}
inline
bool
ConsumeSuffix
(
absl
:
:
Nonnull
<
absl
:
:
string_view
*
>
str
absl
:
:
string_view
expected
)
{
if
(
!
absl
:
:
EndsWith
(
*
str
expected
)
)
return
false
;
str
-
>
remove_suffix
(
expected
.
size
(
)
)
;
return
true
;
}
ABSL_MUST_USE_RESULT
inline
absl
:
:
string_view
StripPrefix
(
absl
:
:
string_view
str
absl
:
:
string_view
prefix
)
{
if
(
absl
:
:
StartsWith
(
str
prefix
)
)
str
.
remove_prefix
(
prefix
.
size
(
)
)
;
return
str
;
}
ABSL_MUST_USE_RESULT
inline
absl
:
:
string_view
StripSuffix
(
absl
:
:
string_view
str
absl
:
:
string_view
suffix
)
{
if
(
absl
:
:
EndsWith
(
str
suffix
)
)
str
.
remove_suffix
(
suffix
.
size
(
)
)
;
return
str
;
}
ABSL_NAMESPACE_END
}
#
endif
