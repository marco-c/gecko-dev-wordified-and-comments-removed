#
include
"
absl
/
strings
/
has_ostream_operator
.
h
"
#
include
<
ostream
>
#
include
<
string
>
#
include
"
gtest
/
gtest
.
h
"
#
include
"
absl
/
types
/
optional
.
h
"
namespace
{
struct
TypeWithoutOstreamOp
{
}
;
struct
TypeWithOstreamOp
{
friend
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
os
const
TypeWithOstreamOp
&
)
{
return
os
;
}
}
;
TEST
(
HasOstreamOperatorTest
Works
)
{
EXPECT_TRUE
(
absl
:
:
HasOstreamOperator
<
int
>
:
:
value
)
;
EXPECT_TRUE
(
absl
:
:
HasOstreamOperator
<
std
:
:
string
>
:
:
value
)
;
EXPECT_FALSE
(
absl
:
:
HasOstreamOperator
<
absl
:
:
optional
<
int
>
>
:
:
value
)
;
EXPECT_FALSE
(
absl
:
:
HasOstreamOperator
<
TypeWithoutOstreamOp
>
:
:
value
)
;
EXPECT_TRUE
(
absl
:
:
HasOstreamOperator
<
TypeWithOstreamOp
>
:
:
value
)
;
}
}
