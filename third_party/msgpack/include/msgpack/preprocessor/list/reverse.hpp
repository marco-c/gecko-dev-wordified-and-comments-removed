#
#
#
#
#
#
#
ifndef
MSGPACK_PREPROCESSOR_LIST_REVERSE_HPP
#
define
MSGPACK_PREPROCESSOR_LIST_REVERSE_HPP
#
#
include
<
msgpack
/
preprocessor
/
config
/
config
.
hpp
>
#
include
<
msgpack
/
preprocessor
/
list
/
fold_left
.
hpp
>
#
#
#
#
if
~
MSGPACK_PP_CONFIG_FLAGS
(
)
&
MSGPACK_PP_CONFIG_EDG
(
)
#
define
MSGPACK_PP_LIST_REVERSE
(
list
)
MSGPACK_PP_LIST_FOLD_LEFT
(
MSGPACK_PP_LIST_REVERSE_O
MSGPACK_PP_NIL
list
)
#
else
#
define
MSGPACK_PP_LIST_REVERSE
(
list
)
MSGPACK_PP_LIST_REVERSE_I
(
list
)
#
define
MSGPACK_PP_LIST_REVERSE_I
(
list
)
MSGPACK_PP_LIST_FOLD_LEFT
(
MSGPACK_PP_LIST_REVERSE_O
MSGPACK_PP_NIL
list
)
#
endif
#
#
define
MSGPACK_PP_LIST_REVERSE_O
(
d
s
x
)
(
x
s
)
#
#
#
#
if
~
MSGPACK_PP_CONFIG_FLAGS
(
)
&
MSGPACK_PP_CONFIG_EDG
(
)
#
define
MSGPACK_PP_LIST_REVERSE_D
(
d
list
)
MSGPACK_PP_LIST_FOLD_LEFT_
#
#
d
(
MSGPACK_PP_LIST_REVERSE_O
MSGPACK_PP_NIL
list
)
#
else
#
define
MSGPACK_PP_LIST_REVERSE_D
(
d
list
)
MSGPACK_PP_LIST_REVERSE_D_I
(
d
list
)
#
define
MSGPACK_PP_LIST_REVERSE_D_I
(
d
list
)
MSGPACK_PP_LIST_FOLD_LEFT_
#
#
d
(
MSGPACK_PP_LIST_REVERSE_O
MSGPACK_PP_NIL
list
)
#
endif
#
#
endif
