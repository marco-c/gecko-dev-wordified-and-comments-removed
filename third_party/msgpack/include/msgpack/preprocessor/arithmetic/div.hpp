#
#
#
#
#
#
#
ifndef
MSGPACK_PREPROCESSOR_ARITHMETIC_DIV_HPP
#
define
MSGPACK_PREPROCESSOR_ARITHMETIC_DIV_HPP
#
#
include
<
msgpack
/
preprocessor
/
arithmetic
/
detail
/
div_base
.
hpp
>
#
include
<
msgpack
/
preprocessor
/
config
/
config
.
hpp
>
#
include
<
msgpack
/
preprocessor
/
tuple
/
elem
.
hpp
>
#
#
#
#
if
~
MSGPACK_PP_CONFIG_FLAGS
(
)
&
MSGPACK_PP_CONFIG_EDG
(
)
#
define
MSGPACK_PP_DIV
(
x
y
)
MSGPACK_PP_TUPLE_ELEM
(
3
0
MSGPACK_PP_DIV_BASE
(
x
y
)
)
#
else
#
define
MSGPACK_PP_DIV
(
x
y
)
MSGPACK_PP_DIV_I
(
x
y
)
#
define
MSGPACK_PP_DIV_I
(
x
y
)
MSGPACK_PP_TUPLE_ELEM
(
3
0
MSGPACK_PP_DIV_BASE
(
x
y
)
)
#
endif
#
#
#
#
if
~
MSGPACK_PP_CONFIG_FLAGS
(
)
&
MSGPACK_PP_CONFIG_EDG
(
)
#
define
MSGPACK_PP_DIV_D
(
d
x
y
)
MSGPACK_PP_TUPLE_ELEM
(
3
0
MSGPACK_PP_DIV_BASE_D
(
d
x
y
)
)
#
else
#
define
MSGPACK_PP_DIV_D
(
d
x
y
)
MSGPACK_PP_DIV_D_I
(
d
x
y
)
#
define
MSGPACK_PP_DIV_D_I
(
d
x
y
)
MSGPACK_PP_TUPLE_ELEM
(
3
0
MSGPACK_PP_DIV_BASE_D
(
d
x
y
)
)
#
endif
#
#
endif
