#
ifndef
MSGPACK_V3_OBJECT_FWD_HPP
#
define
MSGPACK_V3_OBJECT_FWD_HPP
#
include
"
msgpack
/
v3
/
object_fwd_decl
.
hpp
"
#
include
"
msgpack
/
object_fwd
.
hpp
"
namespace
msgpack
{
MSGPACK_API_VERSION_NAMESPACE
(
v3
)
{
#
if
!
defined
(
MSGPACK_USE_CPP03
)
namespace
adaptor
{
template
<
typename
T
>
struct
as
<
T
typename
std
:
:
enable_if
<
v2
:
:
has_as
<
T
>
:
:
value
>
:
:
type
>
:
v2
:
:
adaptor
:
:
as
<
T
>
{
}
;
}
template
<
typename
T
>
struct
has_as
{
private
:
template
<
typename
U
>
static
auto
check
(
U
*
)
-
>
typename
std
:
:
enable_if
<
std
:
:
is_same
<
decltype
(
adaptor
:
:
as
<
U
>
(
)
(
std
:
:
declval
<
msgpack
:
:
object
>
(
)
)
)
U
>
:
:
value
|
|
v2
:
:
has_as
<
U
>
:
:
value
|
|
v1
:
:
has_as
<
U
>
:
:
value
std
:
:
true_type
>
:
:
type
;
template
<
typename
.
.
.
>
static
std
:
:
false_type
check
(
.
.
.
)
;
public
:
using
type
=
decltype
(
check
<
T
>
(
MSGPACK_NULLPTR
)
)
;
static
constexpr
bool
value
=
type
:
:
value
;
}
;
#
endif
}
}
#
endif
