#
ifndef
MSGPACK_V2_NULL_VISITOR_HPP
#
define
MSGPACK_V2_NULL_VISITOR_HPP
#
include
"
msgpack
/
v2
/
null_visitor_decl
.
hpp
"
namespace
msgpack
{
MSGPACK_API_VERSION_NAMESPACE
(
v2
)
{
struct
null_visitor
{
bool
visit_nil
(
)
{
return
true
;
}
bool
visit_boolean
(
bool
)
{
return
true
;
}
bool
visit_positive_integer
(
uint64_t
)
{
return
true
;
}
bool
visit_negative_integer
(
int64_t
)
{
return
true
;
}
bool
visit_float32
(
float
)
{
return
true
;
}
bool
visit_float64
(
double
)
{
return
true
;
}
bool
visit_str
(
const
char
*
uint32_t
)
{
return
true
;
}
bool
visit_bin
(
const
char
*
uint32_t
)
{
return
true
;
}
bool
visit_ext
(
const
char
*
uint32_t
)
{
return
true
;
}
bool
start_array
(
uint32_t
)
{
return
true
;
}
bool
start_array_item
(
)
{
return
true
;
}
bool
end_array_item
(
)
{
return
true
;
}
bool
end_array
(
)
{
return
true
;
}
bool
start_map
(
uint32_t
)
{
return
true
;
}
bool
start_map_key
(
)
{
return
true
;
}
bool
end_map_key
(
)
{
return
true
;
}
bool
start_map_value
(
)
{
return
true
;
}
bool
end_map_value
(
)
{
return
true
;
}
bool
end_map
(
)
{
return
true
;
}
void
parse_error
(
size_t
size_t
)
{
}
void
insufficient_bytes
(
size_t
size_t
)
{
}
bool
referenced
(
)
const
{
return
false
;
}
void
set_referenced
(
bool
)
{
}
}
;
}
}
#
endif
