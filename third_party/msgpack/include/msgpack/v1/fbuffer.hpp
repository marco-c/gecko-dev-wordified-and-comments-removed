#
ifndef
MSGPACK_V1_FBUFFER_HPP
#
define
MSGPACK_V1_FBUFFER_HPP
#
include
"
msgpack
/
v1
/
fbuffer_decl
.
hpp
"
#
include
<
cstdio
>
#
include
<
stdexcept
>
namespace
msgpack
{
MSGPACK_API_VERSION_NAMESPACE
(
v1
)
{
class
fbuffer
{
public
:
explicit
fbuffer
(
FILE
*
file
)
:
m_file
(
file
)
{
}
public
:
void
write
(
const
char
*
buf
unsigned
int
len
)
{
if
(
1
!
=
fwrite
(
buf
len
1
m_file
)
)
{
throw
std
:
:
runtime_error
(
"
fwrite
(
)
failed
"
)
;
}
}
FILE
*
file
(
)
const
{
return
m_file
;
}
#
if
defined
(
MSGPACK_USE_CPP03
)
private
:
fbuffer
(
const
fbuffer
&
)
;
fbuffer
&
operator
=
(
const
fbuffer
&
)
;
#
else
fbuffer
(
const
fbuffer
&
)
=
delete
;
fbuffer
&
operator
=
(
const
fbuffer
&
)
=
delete
;
#
endif
private
:
FILE
*
m_file
;
}
;
}
}
#
endif
