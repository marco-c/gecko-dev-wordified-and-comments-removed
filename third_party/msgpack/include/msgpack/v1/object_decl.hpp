#
ifndef
MSGPACK_V1_OBJECT_DECL_HPP
#
define
MSGPACK_V1_OBJECT_DECL_HPP
#
include
"
msgpack
/
versioning
.
hpp
"
#
include
"
msgpack
/
pack
.
hpp
"
#
include
"
msgpack
/
zone
.
hpp
"
#
include
"
msgpack
/
adaptor
/
adaptor_base
.
hpp
"
#
include
<
cstring
>
#
include
<
stdexcept
>
#
include
<
typeinfo
>
#
include
<
limits
>
#
include
<
ostream
>
#
include
<
typeinfo
>
#
include
<
iomanip
>
namespace
msgpack
{
MSGPACK_API_VERSION_NAMESPACE
(
v1
)
{
class
object_handle
;
namespace
detail
{
template
<
std
:
:
size_t
N
>
std
:
:
size_t
add_ext_type_size
(
std
:
:
size_t
size
)
;
template
<
>
std
:
:
size_t
add_ext_type_size
<
4
>
(
std
:
:
size_t
size
)
;
}
std
:
:
size_t
aligned_zone_size
(
msgpack
:
:
object
const
&
obj
)
;
object_handle
clone
(
msgpack
:
:
object
const
&
obj
)
;
namespace
detail
{
template
<
typename
Stream
typename
T
>
struct
packer_serializer
;
}
template
<
typename
Type
>
class
define
;
bool
operator
=
=
(
const
msgpack
:
:
object
&
x
const
msgpack
:
:
object
&
y
)
;
template
<
typename
T
>
bool
operator
=
=
(
const
msgpack
:
:
object
&
x
const
T
&
y
)
;
bool
operator
!
=
(
const
msgpack
:
:
object
&
x
const
msgpack
:
:
object
&
y
)
;
template
<
typename
T
>
bool
operator
=
=
(
const
T
&
y
const
msgpack
:
:
object
&
x
)
;
template
<
typename
T
>
bool
operator
!
=
(
const
msgpack
:
:
object
&
x
const
T
&
y
)
;
template
<
typename
T
>
bool
operator
!
=
(
const
T
&
y
const
msgpack
:
:
object
&
x
)
;
void
operator
<
<
(
msgpack
:
:
object
&
o
const
msgpack_object
&
v
)
;
class
object_parser
;
template
<
typename
Stream
>
struct
object_pack_visitor
;
struct
object_stringize_visitor
;
template
<
typename
T
>
MSGPACK_DEPRECATED
(
"
please
use
member
function
version
of
object
:
:
convert
(
T
&
)
"
)
void
convert
(
T
&
v
msgpack
:
:
object
const
&
o
)
;
template
<
typename
Stream
typename
T
>
MSGPACK_DEPRECATED
(
"
please
use
member
function
version
of
packer
:
:
pack
(
const
T
&
)
"
)
void
pack
(
msgpack
:
:
packer
<
Stream
>
&
o
const
T
&
v
)
;
template
<
typename
Stream
typename
T
>
MSGPACK_DEPRECATED
(
"
please
use
member
function
version
of
packer
:
:
pack
(
const
T
&
)
"
)
void
pack_copy
(
msgpack
:
:
packer
<
Stream
>
&
o
T
v
)
;
template
<
typename
Stream
>
msgpack
:
:
packer
<
Stream
>
&
operator
<
<
(
msgpack
:
:
packer
<
Stream
>
&
o
const
msgpack
:
:
object
&
v
)
;
template
<
typename
Stream
>
msgpack
:
:
packer
<
Stream
>
&
operator
<
<
(
msgpack
:
:
packer
<
Stream
>
&
o
const
msgpack
:
:
object
:
:
with_zone
&
v
)
;
std
:
:
ostream
&
operator
<
<
(
std
:
:
ostream
&
s
const
msgpack
:
:
object
&
v
)
;
}
}
#
endif
