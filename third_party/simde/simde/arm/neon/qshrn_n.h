#
if
!
defined
(
SIMDE_ARM_NEON_QSHRN_N_H
)
#
define
SIMDE_ARM_NEON_QSHRN_N_H
#
include
"
types
.
h
"
#
include
"
shr_n
.
h
"
#
include
"
qmovn
.
h
"
HEDLEY_DIAGNOSTIC_PUSH
SIMDE_DISABLE_UNWANTED_DIAGNOSTICS
SIMDE_BEGIN_DECLS_
#
if
defined
(
SIMDE_ARM_NEON_A64V8_NATIVE
)
#
define
simde_vqshrns_n_s32
(
a
n
)
vqshrns_n_s32
(
a
n
)
#
else
#
define
simde_vqshrns_n_s32
(
a
n
)
simde_vqmovns_s32
(
simde_x_vshrs_n_s32
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A64V8_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrns_n_s32
#
define
vqshrns_n_s32
(
a
n
)
simde_vqshrns_n_s32
(
a
n
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A64V8_NATIVE
)
#
define
simde_vqshrns_n_u32
(
a
n
)
vqshrns_n_u32
(
a
n
)
#
else
#
define
simde_vqshrns_n_u32
(
a
n
)
simde_vqmovns_u32
(
simde_x_vshrs_n_u32
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A64V8_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrns_n_u32
#
define
vqshrns_n_u32
(
a
n
)
simde_vqshrns_n_u32
(
a
n
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A64V8_NATIVE
)
#
define
simde_vqshrnd_n_s64
(
a
n
)
vqshrnd_n_s64
(
a
n
)
#
else
#
define
simde_vqshrnd_n_s64
(
a
n
)
simde_vqmovnd_s64
(
simde_vshrd_n_s64
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A64V8_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrnd_n_s64
#
define
vqshrnd_n_s64
(
a
n
)
simde_vqshrnd_n_s64
(
a
n
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A64V8_NATIVE
)
#
define
simde_vqshrnd_n_u64
(
a
n
)
vqshrnd_n_u64
(
a
n
)
#
else
#
define
simde_vqshrnd_n_u64
(
a
n
)
simde_vqmovnd_u64
(
simde_vshrd_n_u64
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A64V8_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrnd_n_u64
#
define
vqshrnd_n_u64
(
a
n
)
simde_vqshrnd_n_u64
(
a
n
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_NATIVE
)
#
define
simde_vqshrn_n_s16
(
a
n
)
vqshrn_n_s16
(
(
a
)
(
n
)
)
#
else
#
define
simde_vqshrn_n_s16
(
a
n
)
simde_vqmovn_s16
(
simde_vshrq_n_s16
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrn_n_s16
#
define
vqshrn_n_s16
(
a
n
)
simde_vqshrn_n_s16
(
(
a
)
(
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_NATIVE
)
#
define
simde_vqshrn_n_s32
(
a
n
)
vqshrn_n_s32
(
(
a
)
(
n
)
)
#
else
#
define
simde_vqshrn_n_s32
(
a
n
)
simde_vqmovn_s32
(
simde_vshrq_n_s32
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrn_n_s32
#
define
vqshrn_n_s32
(
a
n
)
simde_vqshrn_n_s32
(
(
a
)
(
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_NATIVE
)
#
define
simde_vqshrn_n_s64
(
a
n
)
vqshrn_n_s64
(
(
a
)
(
n
)
)
#
else
#
define
simde_vqshrn_n_s64
(
a
n
)
simde_vqmovn_s64
(
simde_vshrq_n_s64
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrn_n_s64
#
define
vqshrn_n_s64
(
a
n
)
simde_vqshrn_n_s64
(
(
a
)
(
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_NATIVE
)
#
define
simde_vqshrn_n_u16
(
a
n
)
vqshrn_n_u16
(
(
a
)
(
n
)
)
#
else
#
define
simde_vqshrn_n_u16
(
a
n
)
simde_vqmovn_u16
(
simde_vshrq_n_u16
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrn_n_u16
#
define
vqshrn_n_u16
(
a
n
)
simde_vqshrn_n_u16
(
(
a
)
(
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_NATIVE
)
#
define
simde_vqshrn_n_u32
(
a
n
)
vqshrn_n_u32
(
(
a
)
(
n
)
)
#
else
#
define
simde_vqshrn_n_u32
(
a
n
)
simde_vqmovn_u32
(
simde_vshrq_n_u32
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrn_n_u32
#
define
vqshrn_n_u32
(
a
n
)
simde_vqshrn_n_u32
(
(
a
)
(
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_NATIVE
)
#
define
simde_vqshrn_n_u64
(
a
n
)
vqshrn_n_u64
(
(
a
)
(
n
)
)
#
else
#
define
simde_vqshrn_n_u64
(
a
n
)
simde_vqmovn_u64
(
simde_vshrq_n_u64
(
a
n
)
)
#
endif
#
if
defined
(
SIMDE_ARM_NEON_A32V7_ENABLE_NATIVE_ALIASES
)
#
undef
vqshrn_n_u64
#
define
vqshrn_n_u64
(
a
n
)
simde_vqshrn_n_u64
(
(
a
)
(
n
)
)
#
endif
SIMDE_END_DECLS_
HEDLEY_DIAGNOSTIC_POP
#
endif
