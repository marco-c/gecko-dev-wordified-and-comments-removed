#
if
!
defined
(
SIMDE_X86_AVX512_MULHRS_H
)
#
define
SIMDE_X86_AVX512_MULHRS_H
#
include
"
types
.
h
"
#
include
"
mov
.
h
"
HEDLEY_DIAGNOSTIC_PUSH
SIMDE_DISABLE_UNWANTED_DIAGNOSTICS
SIMDE_BEGIN_DECLS_
SIMDE_FUNCTION_ATTRIBUTES
simde__m512i
simde_mm512_mulhrs_epi16
(
simde__m512i
a
simde__m512i
b
)
{
#
if
defined
(
SIMDE_X86_AVX512BW_NATIVE
)
return
_mm512_mulhrs_epi16
(
a
b
)
;
#
else
simde__m512i_private
r_
a_
=
simde__m512i_to_private
(
a
)
b_
=
simde__m512i_to_private
(
b
)
;
SIMDE_VECTORIZE
for
(
size_t
i
=
0
;
i
<
(
sizeof
(
r_
.
i16
)
/
sizeof
(
r_
.
i16
[
0
]
)
)
;
i
+
+
)
{
r_
.
i16
[
i
]
=
HEDLEY_STATIC_CAST
(
int16_t
(
(
(
HEDLEY_STATIC_CAST
(
int32_t
a_
.
i16
[
i
]
)
*
HEDLEY_STATIC_CAST
(
int32_t
b_
.
i16
[
i
]
)
)
+
0x4000
)
>
>
15
)
)
;
}
return
simde__m512i_from_private
(
r_
)
;
#
endif
}
#
if
defined
(
SIMDE_X86_AVX512BW_ENABLE_NATIVE_ALIASES
)
#
undef
_mm512_mulhrs_epi16
#
define
_mm512_mulhrs_epi16
(
a
b
)
simde_mm512_mulhrs_epi16
(
a
b
)
#
endif
SIMDE_END_DECLS_
HEDLEY_DIAGNOSTIC_POP
#
endif
