#
if
!
defined
(
SIMDE_X86_AVX512_TESTN_H
)
#
define
SIMDE_X86_AVX512_TESTN_H
#
include
"
types
.
h
"
HEDLEY_DIAGNOSTIC_PUSH
SIMDE_DISABLE_UNWANTED_DIAGNOSTICS
SIMDE_BEGIN_DECLS_
SIMDE_FUNCTION_ATTRIBUTES
simde__mmask8
simde_mm512_testn_epi64_mask
(
simde__m512i
a
simde__m512i
b
)
{
#
if
defined
(
SIMDE_X86_AVX512F_NATIVE
)
return
_mm512_testn_epi64_mask
(
a
b
)
;
#
else
simde__m512i_private
a_
=
simde__m512i_to_private
(
a
)
b_
=
simde__m512i_to_private
(
b
)
;
simde__mmask8
r
=
0
;
SIMDE_VECTORIZE_REDUCTION
(
|
:
r
)
for
(
size_t
i
=
0
;
i
<
(
sizeof
(
a_
.
i64
)
/
sizeof
(
a_
.
i64
[
0
]
)
)
;
i
+
+
)
{
r
|
=
(
!
(
a_
.
i64
[
i
]
&
b_
.
i64
[
i
]
)
)
<
<
i
;
}
return
r
;
#
endif
}
#
if
defined
(
SIMDE_X86_AVX512F_ENABLE_NATIVE_ALIASES
)
#
undef
_mm512_testn_epi64_mask
#
define
_mm512_testn_epi64_mask
(
a
b
)
simde_mm512_testn_epi64_mask
(
a
b
)
#
endif
SIMDE_END_DECLS_
HEDLEY_DIAGNOSTIC_POP
#
endif
