#
include
"
hwy
/
contrib
/
sort
/
vqsort
.
h
"
#
undef
HWY_TARGET_INCLUDE
#
define
HWY_TARGET_INCLUDE
"
hwy
/
contrib
/
sort
/
vqsort_kv64d
.
cc
"
/
/
NOLINT
#
include
"
hwy
/
foreach_target
.
h
"
#
include
"
hwy
/
contrib
/
sort
/
traits
-
inl
.
h
"
#
include
"
hwy
/
contrib
/
sort
/
vqsort
-
inl
.
h
"
HWY_BEFORE_NAMESPACE
(
)
;
namespace
hwy
{
namespace
HWY_NAMESPACE
{
void
SortKV64Desc
(
uint64_t
*
HWY_RESTRICT
keys
size_t
num
)
{
#
if
VQSORT_ENABLED
SortTag
<
uint64_t
>
d
;
detail
:
:
SharedTraits
<
detail
:
:
TraitsLane
<
detail
:
:
OrderDescendingKV64
>
>
st
;
Sort
(
d
st
keys
num
)
;
#
else
(
void
)
keys
;
(
void
)
num
;
HWY_ASSERT
(
0
)
;
#
endif
}
}
}
HWY_AFTER_NAMESPACE
(
)
;
#
if
HWY_ONCE
namespace
hwy
{
namespace
{
HWY_EXPORT
(
SortKV64Desc
)
;
}
void
VQSort
(
K32V32
*
HWY_RESTRICT
keys
size_t
n
SortDescending
)
{
HWY_DYNAMIC_DISPATCH
(
SortKV64Desc
)
(
reinterpret_cast
<
uint64_t
*
>
(
keys
)
n
)
;
}
}
#
endif
