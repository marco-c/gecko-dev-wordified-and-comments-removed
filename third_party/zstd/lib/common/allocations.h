#
define
ZSTD_DEPS_NEED_MALLOC
#
include
"
zstd_deps
.
h
"
#
include
"
compiler
.
h
"
#
define
ZSTD_STATIC_LINKING_ONLY
#
include
"
.
.
/
zstd
.
h
"
#
ifndef
ZSTD_ALLOCATIONS_H
#
define
ZSTD_ALLOCATIONS_H
MEM_STATIC
void
*
ZSTD_customMalloc
(
size_t
size
ZSTD_customMem
customMem
)
{
if
(
customMem
.
customAlloc
)
return
customMem
.
customAlloc
(
customMem
.
opaque
size
)
;
return
ZSTD_malloc
(
size
)
;
}
MEM_STATIC
void
*
ZSTD_customCalloc
(
size_t
size
ZSTD_customMem
customMem
)
{
if
(
customMem
.
customAlloc
)
{
void
*
const
ptr
=
customMem
.
customAlloc
(
customMem
.
opaque
size
)
;
ZSTD_memset
(
ptr
0
size
)
;
return
ptr
;
}
return
ZSTD_calloc
(
1
size
)
;
}
MEM_STATIC
void
ZSTD_customFree
(
void
*
ptr
ZSTD_customMem
customMem
)
{
if
(
ptr
!
=
NULL
)
{
if
(
customMem
.
customFree
)
customMem
.
customFree
(
customMem
.
opaque
ptr
)
;
else
ZSTD_free
(
ptr
)
;
}
}
#
endif
