#
ifndef
AOM_AOM_MEM_AOM_MEM_H_
#
define
AOM_AOM_MEM_AOM_MEM_H_
#
include
"
aom
/
aom_integer
.
h
"
#
include
"
config
/
aom_config
.
h
"
#
if
defined
(
__uClinux__
)
#
include
<
lddk
.
h
>
#
endif
#
if
defined
(
__cplusplus
)
extern
"
C
"
{
#
endif
#
ifndef
AOM_MAX_ALLOCABLE_MEMORY
#
if
SIZE_MAX
>
(
1ULL
<
<
32
)
#
define
AOM_MAX_ALLOCABLE_MEMORY
8589934592
/
/
8
GB
#
else
#
define
AOM_MAX_ALLOCABLE_MEMORY
(
(
1ULL
<
<
31
)
-
(
1
<
<
16
)
)
#
endif
#
endif
void
*
aom_memalign
(
size_t
align
size_t
size
)
;
void
*
aom_malloc
(
size_t
size
)
;
void
*
aom_calloc
(
size_t
num
size_t
size
)
;
void
aom_free
(
void
*
memblk
)
;
void
*
aom_memset16
(
void
*
dest
int
val
size_t
length
)
;
#
include
<
string
.
h
>
#
ifdef
AOM_MEM_PLTFRM
#
include
AOM_MEM_PLTFRM
#
endif
#
if
CONFIG_DEBUG
#
define
AOM_CHECK_MEM_ERROR
(
error_info
lval
expr
)
\
do
{
\
lval
=
(
expr
)
;
\
if
(
!
lval
)
\
aom_internal_error
(
error_info
AOM_CODEC_MEM_ERROR
\
"
Failed
to
allocate
"
#
lval
"
at
%
s
:
%
d
"
__FILE__
\
__LINE__
)
;
\
}
while
(
0
)
#
else
#
define
AOM_CHECK_MEM_ERROR
(
error_info
lval
expr
)
\
do
{
\
lval
=
(
expr
)
;
\
if
(
!
lval
)
\
aom_internal_error
(
error_info
AOM_CODEC_MEM_ERROR
\
"
Failed
to
allocate
"
#
lval
)
;
\
}
while
(
0
)
#
endif
#
if
defined
(
__cplusplus
)
}
#
endif
#
endif
