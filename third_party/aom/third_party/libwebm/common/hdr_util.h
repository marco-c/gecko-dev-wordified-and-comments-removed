#
ifndef
LIBWEBM_COMMON_HDR_UTIL_H_
#
define
LIBWEBM_COMMON_HDR_UTIL_H_
#
include
<
stdint
.
h
>
#
include
<
memory
>
#
include
"
mkvmuxer
/
mkvmuxer
.
h
"
namespace
mkvparser
{
struct
Colour
;
struct
MasteringMetadata
;
struct
PrimaryChromaticity
;
}
namespace
libwebm
{
struct
Vp9CodecFeatures
{
static
const
int
kValueNotPresent
;
Vp9CodecFeatures
(
)
:
profile
(
kValueNotPresent
)
level
(
kValueNotPresent
)
bit_depth
(
kValueNotPresent
)
chroma_subsampling
(
kValueNotPresent
)
{
}
~
Vp9CodecFeatures
(
)
{
}
int
profile
;
int
level
;
int
bit_depth
;
int
chroma_subsampling
;
}
;
typedef
std
:
:
unique_ptr
<
mkvmuxer
:
:
PrimaryChromaticity
>
PrimaryChromaticityPtr
;
bool
CopyPrimaryChromaticity
(
const
mkvparser
:
:
PrimaryChromaticity
&
parser_pc
PrimaryChromaticityPtr
*
muxer_pc
)
;
bool
MasteringMetadataValuePresent
(
double
value
)
;
bool
CopyMasteringMetadata
(
const
mkvparser
:
:
MasteringMetadata
&
parser_mm
mkvmuxer
:
:
MasteringMetadata
*
muxer_mm
)
;
bool
ColourValuePresent
(
long
long
value
)
;
bool
CopyColour
(
const
mkvparser
:
:
Colour
&
parser_colour
mkvmuxer
:
:
Colour
*
muxer_colour
)
;
bool
ParseVpxCodecPrivate
(
const
uint8_t
*
private_data
int32_t
length
Vp9CodecFeatures
*
features
)
;
}
#
endif
