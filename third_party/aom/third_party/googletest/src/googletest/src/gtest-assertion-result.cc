#
include
"
gtest
/
gtest
-
assertion
-
result
.
h
"
#
include
<
string
>
#
include
<
utility
>
#
include
"
gtest
/
gtest
-
message
.
h
"
namespace
testing
{
AssertionResult
:
:
AssertionResult
(
const
AssertionResult
&
other
)
:
success_
(
other
.
success_
)
message_
(
other
.
message_
.
get
(
)
!
=
nullptr
?
new
:
:
std
:
:
string
(
*
other
.
message_
)
:
static_cast
<
:
:
std
:
:
string
*
>
(
nullptr
)
)
{
}
void
AssertionResult
:
:
swap
(
AssertionResult
&
other
)
{
using
std
:
:
swap
;
swap
(
success_
other
.
success_
)
;
swap
(
message_
other
.
message_
)
;
}
AssertionResult
AssertionResult
:
:
operator
!
(
)
const
{
AssertionResult
negation
(
!
success_
)
;
if
(
message_
.
get
(
)
!
=
nullptr
)
negation
<
<
*
message_
;
return
negation
;
}
AssertionResult
AssertionSuccess
(
)
{
return
AssertionResult
(
true
)
;
}
AssertionResult
AssertionFailure
(
)
{
return
AssertionResult
(
false
)
;
}
AssertionResult
AssertionFailure
(
const
Message
&
message
)
{
return
AssertionFailure
(
)
<
<
message
;
}
}
