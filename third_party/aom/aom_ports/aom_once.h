#
ifndef
AOM_AOM_PORTS_AOM_ONCE_H_
#
define
AOM_AOM_PORTS_AOM_ONCE_H_
#
include
"
config
/
aom_config
.
h
"
#
if
CONFIG_MULTITHREAD
&
&
defined
(
_WIN32
)
#
undef
WIN32_LEAN_AND_MEAN
#
define
WIN32_LEAN_AND_MEAN
#
include
<
windows
.
h
>
static
INIT_ONCE
aom_init_once
=
INIT_ONCE_STATIC_INIT
;
static
void
aom_once
(
void
(
*
func
)
(
void
)
)
{
BOOL
pending
;
InitOnceBeginInitialize
(
&
aom_init_once
0
&
pending
NULL
)
;
if
(
!
pending
)
{
return
;
}
func
(
)
;
InitOnceComplete
(
&
aom_init_once
0
NULL
)
;
}
#
elif
CONFIG_MULTITHREAD
&
&
HAVE_PTHREAD_H
#
include
<
pthread
.
h
>
static
void
aom_once
(
void
(
*
func
)
(
void
)
)
{
static
pthread_once_t
lock
=
PTHREAD_ONCE_INIT
;
pthread_once
(
&
lock
func
)
;
}
#
else
static
void
aom_once
(
void
(
*
func
)
(
void
)
)
{
static
volatile
int
done
;
if
(
!
done
)
{
func
(
)
;
done
=
1
;
}
}
#
endif
#
endif
