#
ifndef
AOM_PORTS_AOM_ONCE_H_
#
define
AOM_PORTS_AOM_ONCE_H_
#
include
"
config
/
aom_config
.
h
"
#
if
CONFIG_MULTITHREAD
&
&
defined
(
_WIN32
)
#
include
<
windows
.
h
>
#
include
<
stdlib
.
h
>
static
LONG
once_state
;
static
void
once
(
void
(
*
func
)
(
void
)
)
{
if
(
InterlockedCompareExchange
(
&
once_state
1
0
)
=
=
0
)
{
func
(
)
;
InterlockedIncrement
(
&
once_state
)
;
return
;
}
while
(
InterlockedCompareExchange
(
&
once_state
2
2
)
!
=
2
)
{
Sleep
(
0
)
;
}
return
;
}
#
elif
CONFIG_MULTITHREAD
&
&
defined
(
__OS2__
)
#
define
INCL_DOS
#
include
<
os2
.
h
>
static
void
once
(
void
(
*
func
)
(
void
)
)
{
static
int
done
;
if
(
done
)
return
;
DosEnterCritSec
(
)
;
if
(
!
done
)
{
func
(
)
;
done
=
1
;
}
DosExitCritSec
(
)
;
}
#
elif
CONFIG_MULTITHREAD
&
&
HAVE_PTHREAD_H
#
include
<
pthread
.
h
>
static
void
once
(
void
(
*
func
)
(
void
)
)
{
static
pthread_once_t
lock
=
PTHREAD_ONCE_INIT
;
pthread_once
(
&
lock
func
)
;
}
#
else
static
void
once
(
void
(
*
func
)
(
void
)
)
{
static
int
done
;
if
(
!
done
)
{
func
(
)
;
done
=
1
;
}
}
#
endif
#
endif
