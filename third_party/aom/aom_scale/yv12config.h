#
ifndef
AOM_AOM_SCALE_YV12CONFIG_H_
#
define
AOM_AOM_SCALE_YV12CONFIG_H_
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
<
stdbool
.
h
>
#
include
"
config
/
aom_config
.
h
"
#
include
"
aom
/
aom_codec
.
h
"
#
include
"
aom
/
aom_frame_buffer
.
h
"
#
include
"
aom
/
aom_integer
.
h
"
#
include
"
aom
/
internal
/
aom_image_internal
.
h
"
#
define
AOMINNERBORDERINPIXELS
160
#
define
AOM_INTERP_EXTEND
4
#
define
AOM_BORDER_IN_PIXELS
288
#
define
AOM_ENC_NO_SCALE_BORDER
160
#
define
AOM_ENC_ALLINTRA_BORDER
64
#
define
AOM_DEC_BORDER_IN_PIXELS
64
#
if
CONFIG_AV1_ENCODER
&
&
!
CONFIG_REALTIME_ONLY
struct
image_pyramid
;
struct
corner_list
;
#
endif
typedef
struct
yv12_buffer_config
{
union
{
struct
{
int
y_width
;
int
uv_width
;
}
;
int
widths
[
2
]
;
}
;
union
{
struct
{
int
y_height
;
int
uv_height
;
}
;
int
heights
[
2
]
;
}
;
union
{
struct
{
int
y_crop_width
;
int
uv_crop_width
;
}
;
int
crop_widths
[
2
]
;
}
;
union
{
struct
{
int
y_crop_height
;
int
uv_crop_height
;
}
;
int
crop_heights
[
2
]
;
}
;
union
{
struct
{
int
y_stride
;
int
uv_stride
;
}
;
int
strides
[
2
]
;
}
;
union
{
struct
{
uint8_t
*
y_buffer
;
uint8_t
*
u_buffer
;
uint8_t
*
v_buffer
;
}
;
uint8_t
*
buffers
[
3
]
;
}
;
int
use_external_reference_buffers
;
uint8_t
*
store_buf_adr
[
3
]
;
#
if
CONFIG_AV1_ENCODER
&
&
!
CONFIG_REALTIME_ONLY
struct
image_pyramid
*
y_pyramid
;
struct
corner_list
*
corners
;
#
endif
uint8_t
*
buffer_alloc
;
size_t
buffer_alloc_sz
;
int
border
;
size_t
frame_size
;
int
subsampling_x
;
int
subsampling_y
;
unsigned
int
bit_depth
;
aom_color_primaries_t
color_primaries
;
aom_transfer_characteristics_t
transfer_characteristics
;
aom_matrix_coefficients_t
matrix_coefficients
;
uint8_t
monochrome
;
aom_chroma_sample_position_t
chroma_sample_position
;
aom_color_range_t
color_range
;
int
render_width
;
int
render_height
;
int
corrupted
;
int
flags
;
aom_metadata_array_t
*
metadata
;
}
YV12_BUFFER_CONFIG
;
#
define
YV12_FLAG_HIGHBITDEPTH
8
int
aom_alloc_frame_buffer
(
YV12_BUFFER_CONFIG
*
ybf
int
width
int
height
int
ss_x
int
ss_y
int
use_highbitdepth
int
border
int
byte_alignment
bool
alloc_pyramid
int
alloc_y_plane_only
)
;
int
aom_realloc_frame_buffer
(
YV12_BUFFER_CONFIG
*
ybf
int
width
int
height
int
ss_x
int
ss_y
int
use_highbitdepth
int
border
int
byte_alignment
aom_codec_frame_buffer_t
*
fb
aom_get_frame_buffer_cb_fn_t
cb
void
*
cb_priv
bool
alloc_pyramid
int
alloc_y_plane_only
)
;
int
aom_free_frame_buffer
(
YV12_BUFFER_CONFIG
*
ybf
)
;
void
aom_remove_metadata_from_frame_buffer
(
YV12_BUFFER_CONFIG
*
ybf
)
;
int
aom_copy_metadata_to_frame_buffer
(
YV12_BUFFER_CONFIG
*
ybf
const
aom_metadata_array_t
*
arr
)
;
static
inline
int
aom_calc_y_stride
(
int
aligned_width
int
border
)
{
return
(
(
aligned_width
+
2
*
border
)
+
31
)
&
~
31
;
}
#
ifdef
__cplusplus
}
#
endif
#
endif
