#
include
"
third_party
/
googletest
/
src
/
googletest
/
include
/
gtest
/
gtest
.
h
"
#
include
"
test
/
warp_filter_test_util
.
h
"
using
:
:
testing
:
:
make_tuple
;
using
:
:
testing
:
:
tuple
;
using
libaom_test
:
:
ACMRandom
;
using
libaom_test
:
:
AV1HighbdWarpFilter
:
:
AV1HighbdWarpFilterTest
;
using
libaom_test
:
:
AV1WarpFilter
:
:
AV1WarpFilterTest
;
namespace
{
TEST_P
(
AV1WarpFilterTest
CheckOutput
)
{
RunCheckOutput
(
:
:
testing
:
:
get
<
3
>
(
GET_PARAM
(
0
)
)
)
;
}
TEST_P
(
AV1WarpFilterTest
DISABLED_Speed
)
{
RunSpeedTest
(
:
:
testing
:
:
get
<
3
>
(
GET_PARAM
(
0
)
)
)
;
}
INSTANTIATE_TEST_CASE_P
(
C
AV1WarpFilterTest
libaom_test
:
:
AV1WarpFilter
:
:
BuildParams
(
av1_warp_affine_c
)
)
;
#
if
HAVE_SSE4_1
INSTANTIATE_TEST_CASE_P
(
SSE4_1
AV1WarpFilterTest
libaom_test
:
:
AV1WarpFilter
:
:
BuildParams
(
av1_warp_affine_sse4_1
)
)
;
TEST_P
(
AV1HighbdWarpFilterTest
CheckOutput
)
{
RunCheckOutput
(
:
:
testing
:
:
get
<
4
>
(
GET_PARAM
(
0
)
)
)
;
}
TEST_P
(
AV1HighbdWarpFilterTest
DISABLED_Speed
)
{
RunSpeedTest
(
:
:
testing
:
:
get
<
4
>
(
GET_PARAM
(
0
)
)
)
;
}
INSTANTIATE_TEST_CASE_P
(
SSE4_1
AV1HighbdWarpFilterTest
libaom_test
:
:
AV1HighbdWarpFilter
:
:
BuildParams
(
av1_highbd_warp_affine_sse4_1
)
)
;
#
endif
#
if
HAVE_NEON
INSTANTIATE_TEST_CASE_P
(
NEON
AV1WarpFilterTest
libaom_test
:
:
AV1WarpFilter
:
:
BuildParams
(
av1_warp_affine_neon
)
)
;
#
endif
}
