#
include
<
limits
.
h
>
#
include
<
math
.
h
>
#
include
"
aom_ports
/
bitops
.
h
"
#
include
"
gtest
/
gtest
.
h
"
TEST
(
Log2Test
GetMsb
)
{
for
(
unsigned
int
n
=
1
;
n
<
10000
;
n
+
+
)
{
EXPECT_EQ
(
get_msb
(
n
)
static_cast
<
int
>
(
floor
(
log2
(
n
)
)
)
)
;
}
for
(
int
exponent
=
2
;
exponent
<
32
;
exponent
+
+
)
{
const
unsigned
int
power_of_2
=
1U
<
<
exponent
;
EXPECT_EQ
(
get_msb
(
power_of_2
-
1
)
exponent
-
1
)
;
EXPECT_EQ
(
get_msb
(
power_of_2
)
exponent
)
;
EXPECT_EQ
(
get_msb
(
power_of_2
+
1
)
exponent
)
;
}
}
TEST
(
Log2Test
AomCeilLog2
)
{
EXPECT_EQ
(
aom_ceil_log2
(
0
)
0
)
;
for
(
int
n
=
1
;
n
<
10000
;
n
+
+
)
{
EXPECT_EQ
(
aom_ceil_log2
(
n
)
static_cast
<
int
>
(
ceil
(
log2
(
n
)
)
)
)
;
}
for
(
int
exponent
=
2
;
exponent
<
31
;
exponent
+
+
)
{
const
int
power_of_2
=
1
<
<
exponent
;
EXPECT_EQ
(
aom_ceil_log2
(
power_of_2
-
1
)
exponent
)
;
EXPECT_EQ
(
aom_ceil_log2
(
power_of_2
)
exponent
)
;
EXPECT_EQ
(
aom_ceil_log2
(
power_of_2
+
1
)
exponent
+
1
)
;
}
EXPECT_EQ
(
aom_ceil_log2
(
INT_MAX
)
31
)
;
}
