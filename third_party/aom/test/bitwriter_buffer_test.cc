#
include
<
cstdint
>
#
include
"
gtest
/
gtest
.
h
"
#
include
"
aom_dsp
/
bitwriter_buffer
.
h
"
namespace
{
TEST
(
BitwriterBufferTest
UvlcOneByte
)
{
static
constexpr
struct
{
uint32_t
bit_offset
;
uint8_t
byte
;
}
kExpected
[
]
=
{
{
1
0x80
}
{
3
0x40
}
{
3
0x60
}
{
5
0x20
}
{
5
0x28
}
{
5
0x30
}
{
5
0x38
}
{
7
0x10
}
{
7
0x12
}
{
7
0x14
}
{
7
0x16
}
{
7
0x18
}
{
7
0x1a
}
{
7
0x1c
}
{
7
0x1e
}
}
;
uint8_t
dst
[
1
]
;
for
(
int
i
=
0
;
i
<
15
;
i
+
+
)
{
struct
aom_write_bit_buffer
wb
=
{
dst
0
}
;
aom_wb_write_uvlc
(
&
wb
i
)
;
ASSERT_EQ
(
wb
.
bit_offset
kExpected
[
i
]
.
bit_offset
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
0
]
kExpected
[
i
]
.
byte
)
;
}
}
TEST
(
BitwriterBufferTest
Uvlc31LeadingZeros
)
{
uint8_t
dst
[
8
]
;
{
struct
aom_write_bit_buffer
wb
=
{
dst
0
}
;
aom_wb_write_uvlc
(
&
wb
0x7fffffff
)
;
ASSERT_EQ
(
wb
.
bit_offset
63u
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
0
]
0x00
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
1
]
0x00
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
2
]
0x00
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
3
]
0x01
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
4
]
0x00
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
5
]
0x00
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
6
]
0x00
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
7
]
0x00
)
;
}
{
struct
aom_write_bit_buffer
wb
=
{
dst
0
}
;
aom_wb_write_uvlc
(
&
wb
0xfffffffe
)
;
ASSERT_EQ
(
wb
.
bit_offset
63u
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
0
]
0x00
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
1
]
0x00
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
2
]
0x00
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
3
]
0x01
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
4
]
0xff
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
5
]
0xff
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
6
]
0xff
)
;
EXPECT_EQ
(
wb
.
bit_buffer
[
7
]
0xfe
)
;
}
}
}
