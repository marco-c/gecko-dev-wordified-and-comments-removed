#
ifndef
AV1_FWD_TXFM1D_H_
#
define
AV1_FWD_TXFM1D_H_
#
include
"
av1
/
common
/
av1_txfm
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
void
av1_fdct4_new
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
void
av1_fdct8_new
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
void
av1_fdct16_new
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
void
av1_fdct32_new
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
#
if
CONFIG_TX64X64
void
av1_fdct64_new
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
#
endif
void
av1_fadst4_new
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
void
av1_fadst8_new
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
void
av1_fadst16_new
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
void
av1_fadst32_new
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
#
if
CONFIG_EXT_TX
void
av1_fidentity4_c
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
void
av1_fidentity8_c
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
void
av1_fidentity16_c
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
void
av1_fidentity32_c
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
#
if
CONFIG_TX64X64
void
av1_fidentity64_c
(
const
int32_t
*
input
int32_t
*
output
const
int8_t
*
cos_bit
const
int8_t
*
stage_range
)
;
#
endif
#
endif
#
ifdef
__cplusplus
}
#
endif
#
endif
