#
ifndef
AV1_COMMON_COMMON_DATA_H_
#
define
AV1_COMMON_COMMON_DATA_H_
#
include
"
av1
/
common
/
enums
.
h
"
#
include
"
aom
/
aom_integer
.
h
"
#
include
"
aom_dsp
/
aom_dsp_common
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
if
CONFIG_EXT_PARTITION
#
define
IF_EXT_PARTITION
(
.
.
.
)
__VA_ARGS__
#
else
#
define
IF_EXT_PARTITION
(
.
.
.
)
#
endif
static
const
uint8_t
b_width_log2_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
0
0
0
#
endif
0
0
1
1
1
2
2
2
3
3
3
4
4
IF_EXT_PARTITION
(
4
5
5
)
}
;
static
const
uint8_t
b_height_log2_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
0
0
0
#
endif
0
1
0
1
2
1
2
3
2
3
4
3
4
IF_EXT_PARTITION
(
5
4
5
)
}
;
static
const
uint8_t
mi_width_log2_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
0
0
0
0
0
1
1
1
2
2
2
3
3
3
4
4
IF_EXT_PARTITION
(
4
5
5
)
#
else
0
0
0
0
0
1
1
1
2
2
2
3
3
IF_EXT_PARTITION
(
3
4
4
)
#
endif
}
;
static
const
uint8_t
mi_height_log2_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
0
0
0
0
1
0
1
2
1
2
3
2
3
4
3
4
IF_EXT_PARTITION
(
5
4
5
)
#
else
0
0
0
0
1
0
1
2
1
2
3
2
3
IF_EXT_PARTITION
(
4
3
4
)
#
endif
}
;
static
const
uint8_t
mi_size_wide
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
1
1
1
1
1
2
2
2
4
4
4
8
8
8
16
16
IF_EXT_PARTITION
(
16
32
32
)
#
else
1
1
1
1
1
2
2
2
4
4
4
8
8
IF_EXT_PARTITION
(
8
16
16
)
#
endif
}
;
static
const
uint8_t
mi_size_high
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
1
1
1
1
2
1
2
4
2
4
8
4
8
16
8
16
IF_EXT_PARTITION
(
32
16
32
)
#
else
1
1
1
1
2
1
2
4
2
4
8
4
8
IF_EXT_PARTITION
(
16
8
16
)
#
endif
}
;
static
const
uint8_t
block_size_wide
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
2
2
4
#
endif
4
4
8
8
8
16
16
16
32
32
32
64
64
IF_EXT_PARTITION
(
64
128
128
)
}
;
static
const
uint8_t
block_size_high
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
2
4
2
#
endif
4
8
4
8
16
8
16
32
16
32
64
32
64
IF_EXT_PARTITION
(
128
64
128
)
}
;
static
const
uint8_t
num_4x4_blocks_wide_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
1
1
1
#
endif
1
1
2
2
2
4
4
4
8
8
8
16
16
IF_EXT_PARTITION
(
16
32
32
)
}
;
static
const
uint8_t
num_4x4_blocks_high_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
1
1
1
#
endif
1
2
1
2
4
2
4
8
4
8
16
8
16
IF_EXT_PARTITION
(
32
16
32
)
}
;
static
const
uint8_t
num_8x8_blocks_wide_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
1
1
1
#
endif
1
1
1
1
1
2
2
2
4
4
4
8
8
IF_EXT_PARTITION
(
8
16
16
)
}
;
static
const
uint8_t
num_8x8_blocks_high_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
1
1
1
#
endif
1
1
1
1
2
1
2
4
2
4
8
4
8
IF_EXT_PARTITION
(
16
8
16
)
}
;
static
const
uint8_t
num_16x16_blocks_wide_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
1
1
1
#
endif
1
1
1
1
1
1
1
1
2
2
2
4
4
IF_EXT_PARTITION
(
4
8
8
)
}
;
static
const
uint8_t
num_16x16_blocks_high_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
1
1
1
#
endif
1
1
1
1
1
1
1
2
1
2
4
2
4
IF_EXT_PARTITION
(
8
4
8
)
}
;
static
const
uint8_t
size_group_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
0
0
0
#
endif
0
0
0
1
1
1
2
2
2
3
3
3
3
IF_EXT_PARTITION
(
3
3
3
)
}
;
static
const
uint8_t
num_pels_log2_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
2
3
3
#
endif
4
5
5
6
7
7
8
9
9
10
11
11
12
IF_EXT_PARTITION
(
13
13
14
)
}
;
static
const
PARTITION_TYPE
partition_lookup
[
MAX_SB_SIZE_LOG2
-
1
]
[
BLOCK_SIZES
]
=
{
{
#
if
CONFIG_CB4X4
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
PARTITION_NONE
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
if
CONFIG_EXT_PARTITION
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
}
{
#
if
CONFIG_CB4X4
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
PARTITION_SPLIT
PARTITION_VERT
PARTITION_HORZ
PARTITION_NONE
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
if
CONFIG_EXT_PARTITION
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
}
{
#
if
CONFIG_CB4X4
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_VERT
PARTITION_HORZ
PARTITION_NONE
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
if
CONFIG_EXT_PARTITION
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
}
{
#
if
CONFIG_CB4X4
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_VERT
PARTITION_HORZ
PARTITION_NONE
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
if
CONFIG_EXT_PARTITION
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
}
{
#
if
CONFIG_CB4X4
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_VERT
PARTITION_HORZ
PARTITION_NONE
#
if
CONFIG_EXT_PARTITION
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
}
{
#
if
CONFIG_CB4X4
PARTITION_INVALID
PARTITION_INVALID
PARTITION_INVALID
#
endif
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_SPLIT
PARTITION_VERT
PARTITION_HORZ
PARTITION_NONE
#
endif
}
}
;
#
if
CONFIG_EXT_PARTITION_TYPES
static
const
BLOCK_SIZE
subsize_lookup
[
EXT_PARTITION_TYPES
]
[
BLOCK_SIZES
]
=
#
else
static
const
BLOCK_SIZE
subsize_lookup
[
PARTITION_TYPES
]
[
BLOCK_SIZES
]
=
#
endif
{
{
#
if
CONFIG_CB4X4
BLOCK_2X2
BLOCK_2X4
BLOCK_4X2
#
endif
BLOCK_4X4
BLOCK_4X8
BLOCK_8X4
BLOCK_8X8
BLOCK_8X16
BLOCK_16X8
BLOCK_16X16
BLOCK_16X32
BLOCK_32X16
BLOCK_32X32
BLOCK_32X64
BLOCK_64X32
BLOCK_64X64
#
if
CONFIG_EXT_PARTITION
BLOCK_64X128
BLOCK_128X64
BLOCK_128X128
#
endif
}
{
#
if
CONFIG_CB4X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
BLOCK_4X2
#
else
BLOCK_INVALID
#
endif
BLOCK_INVALID
BLOCK_INVALID
BLOCK_8X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_16X8
BLOCK_INVALID
BLOCK_INVALID
BLOCK_32X16
BLOCK_INVALID
BLOCK_INVALID
BLOCK_64X32
#
if
CONFIG_EXT_PARTITION
BLOCK_INVALID
BLOCK_INVALID
BLOCK_128X64
#
endif
}
{
#
if
CONFIG_CB4X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
BLOCK_2X4
#
else
BLOCK_INVALID
#
endif
BLOCK_INVALID
BLOCK_INVALID
BLOCK_4X8
BLOCK_INVALID
BLOCK_INVALID
BLOCK_8X16
BLOCK_INVALID
BLOCK_INVALID
BLOCK_16X32
BLOCK_INVALID
BLOCK_INVALID
BLOCK_32X64
#
if
CONFIG_EXT_PARTITION
BLOCK_INVALID
BLOCK_INVALID
BLOCK_64X128
#
endif
}
{
#
if
CONFIG_CB4X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
#
endif
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
BLOCK_4X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_8X8
BLOCK_INVALID
BLOCK_INVALID
BLOCK_16X16
BLOCK_INVALID
BLOCK_INVALID
BLOCK_32X32
#
if
CONFIG_EXT_PARTITION
BLOCK_INVALID
BLOCK_INVALID
BLOCK_64X64
#
endif
#
if
CONFIG_EXT_PARTITION_TYPES
}
{
#
if
CONFIG_CB4X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
#
endif
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
BLOCK_8X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_16X8
BLOCK_INVALID
BLOCK_INVALID
BLOCK_32X16
BLOCK_INVALID
BLOCK_INVALID
BLOCK_64X32
#
if
CONFIG_EXT_PARTITION
BLOCK_INVALID
BLOCK_INVALID
BLOCK_128X64
#
endif
}
{
#
if
CONFIG_CB4X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
#
endif
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
BLOCK_8X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_16X8
BLOCK_INVALID
BLOCK_INVALID
BLOCK_32X16
BLOCK_INVALID
BLOCK_INVALID
BLOCK_64X32
#
if
CONFIG_EXT_PARTITION
BLOCK_INVALID
BLOCK_INVALID
BLOCK_128X64
#
endif
}
{
#
if
CONFIG_CB4X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
#
endif
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
BLOCK_4X8
BLOCK_INVALID
BLOCK_INVALID
BLOCK_8X16
BLOCK_INVALID
BLOCK_INVALID
BLOCK_16X32
BLOCK_INVALID
BLOCK_INVALID
BLOCK_32X64
#
if
CONFIG_EXT_PARTITION
BLOCK_INVALID
BLOCK_INVALID
BLOCK_64X128
#
endif
}
{
#
if
CONFIG_CB4X4
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
#
endif
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
BLOCK_4X8
BLOCK_INVALID
BLOCK_INVALID
BLOCK_8X16
BLOCK_INVALID
BLOCK_INVALID
BLOCK_16X32
BLOCK_INVALID
BLOCK_INVALID
BLOCK_32X64
#
if
CONFIG_EXT_PARTITION
BLOCK_INVALID
BLOCK_INVALID
BLOCK_64X128
#
endif
#
endif
}
}
;
static
const
TX_SIZE
max_txsize_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
TX_2X2
TX_2X2
TX_2X2
#
endif
TX_4X4
TX_4X4
TX_4X4
TX_8X8
TX_8X8
TX_8X8
TX_16X16
TX_16X16
TX_16X16
TX_32X32
TX_32X32
TX_32X32
#
if
CONFIG_TX64X64
TX_64X64
#
if
CONFIG_EXT_PARTITION
TX_64X64
TX_64X64
TX_64X64
#
endif
#
else
TX_32X32
#
if
CONFIG_EXT_PARTITION
TX_32X32
TX_32X32
TX_32X32
#
endif
#
endif
}
;
#
if
CONFIG_RECT_TX
&
&
(
CONFIG_EXT_TX
|
|
CONFIG_VAR_TX
)
static
const
TX_SIZE
max_txsize_rect_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
TX_2X2
TX_2X2
TX_2X2
#
endif
TX_4X4
TX_4X8
TX_8X4
TX_8X8
TX_8X16
TX_16X8
TX_16X16
TX_16X32
TX_32X16
TX_32X32
TX_32X32
TX_32X32
#
if
CONFIG_TX64X64
TX_64X64
#
if
CONFIG_EXT_PARTITION
TX_64X64
TX_64X64
TX_64X64
#
endif
#
else
TX_32X32
#
if
CONFIG_EXT_PARTITION
TX_32X32
TX_32X32
TX_32X32
#
endif
#
endif
}
;
#
else
#
define
max_txsize_rect_lookup
max_txsize_lookup
#
endif
#
if
CONFIG_RECT_TX
&
&
(
CONFIG_EXT_TX
|
|
CONFIG_VAR_TX
)
static
const
int32_t
intra_tx_size_cat_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
INT32_MIN
INT32_MIN
INT32_MIN
INT32_MIN
TX_8X8
-
TX_8X8
TX_8X8
-
TX_8X8
TX_8X8
-
TX_8X8
#
else
INT32_MIN
INT32_MIN
INT32_MIN
TX_8X8
-
TX_8X8
#
endif
TX_16X16
-
TX_8X8
TX_16X16
-
TX_8X8
TX_16X16
-
TX_8X8
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
#
if
CONFIG_TX64X64
TX_64X64
-
TX_8X8
#
if
CONFIG_EXT_PARTITION
TX_64X64
-
TX_8X8
TX_64X64
-
TX_8X8
TX_64X64
-
TX_8X8
#
endif
#
else
TX_32X32
-
TX_8X8
#
if
CONFIG_EXT_PARTITION
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
#
endif
#
endif
}
;
#
else
static
const
int32_t
intra_tx_size_cat_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_CB4X4
INT32_MIN
INT32_MIN
INT32_MIN
#
endif
INT32_MIN
INT32_MIN
INT32_MIN
TX_8X8
-
TX_8X8
TX_8X8
-
TX_8X8
TX_8X8
-
TX_8X8
TX_16X16
-
TX_8X8
TX_16X16
-
TX_8X8
TX_16X16
-
TX_8X8
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
#
if
CONFIG_TX64X64
TX_64X64
-
TX_8X8
#
if
CONFIG_EXT_PARTITION
TX_64X64
-
TX_8X8
TX_64X64
-
TX_8X8
TX_64X64
-
TX_8X8
#
endif
#
else
TX_32X32
-
TX_8X8
#
if
CONFIG_EXT_PARTITION
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
TX_32X32
-
TX_8X8
#
endif
#
endif
}
;
#
endif
#
define
inter_tx_size_cat_lookup
intra_tx_size_cat_lookup
static
const
TX_SIZE
sub_tx_size_map
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
TX_2X2
#
endif
TX_4X4
TX_4X4
TX_8X8
TX_16X16
#
if
CONFIG_TX64X64
TX_32X32
#
endif
TX_4X4
TX_4X4
TX_8X8
TX_8X8
TX_16X16
TX_16X16
TX_4X4
TX_4X4
TX_8X8
TX_8X8
}
;
static
const
TX_SIZE
txsize_horz_map
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
TX_2X2
#
endif
TX_4X4
TX_8X8
TX_16X16
TX_32X32
#
if
CONFIG_TX64X64
TX_64X64
#
endif
TX_4X4
TX_8X8
TX_8X8
TX_16X16
TX_16X16
TX_32X32
TX_4X4
TX_16X16
TX_8X8
TX_32X32
}
;
static
const
TX_SIZE
txsize_vert_map
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
TX_2X2
#
endif
TX_4X4
TX_8X8
TX_16X16
TX_32X32
#
if
CONFIG_TX64X64
TX_64X64
#
endif
TX_8X8
TX_4X4
TX_16X16
TX_8X8
TX_32X32
TX_16X16
TX_16X16
TX_4X4
TX_32X32
TX_8X8
}
;
#
if
CONFIG_CB4X4
#
define
TX_SIZE_W_MIN
2
#
else
#
define
TX_SIZE_W_MIN
4
#
endif
static
const
int
tx_size_wide
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
2
#
endif
4
8
16
32
#
if
CONFIG_TX64X64
64
#
endif
4
8
8
16
16
32
4
16
8
32
}
;
#
if
CONFIG_CB4X4
#
define
TX_SIZE_H_MIN
2
#
else
#
define
TX_SIZE_H_MIN
4
#
endif
static
const
int
tx_size_high
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
2
#
endif
4
8
16
32
#
if
CONFIG_TX64X64
64
#
endif
8
4
16
8
32
16
16
4
32
8
}
;
static
const
int
tx_size_wide_unit
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
1
2
4
8
16
#
if
CONFIG_TX64X64
32
#
endif
2
4
4
8
8
16
2
8
4
16
#
else
1
2
4
8
#
if
CONFIG_TX64X64
16
#
endif
1
2
2
4
4
8
1
4
2
8
#
endif
}
;
static
const
int
tx_size_high_unit
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
1
2
4
8
16
#
if
CONFIG_TX64X64
32
#
endif
4
2
8
4
16
8
8
2
16
4
#
else
1
2
4
8
#
if
CONFIG_TX64X64
16
#
endif
2
1
4
2
8
4
4
1
8
2
#
endif
}
;
static
const
int
tx_size_wide_log2
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
1
#
endif
2
3
4
5
#
if
CONFIG_TX64X64
6
#
endif
2
3
3
4
4
5
2
4
3
5
}
;
static
const
int
tx_size_high_log2
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
1
#
endif
2
3
4
5
#
if
CONFIG_TX64X64
6
#
endif
3
2
4
3
5
4
4
2
5
3
}
;
static
const
int
tx_size_2d
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
4
#
endif
16
64
256
1024
#
if
CONFIG_TX64X64
4096
#
endif
32
32
128
128
512
512
64
64
256
256
}
;
static
const
BLOCK_SIZE
txsize_to_bsize
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
BLOCK_2X2
#
endif
BLOCK_4X4
BLOCK_8X8
BLOCK_16X16
BLOCK_32X32
#
if
CONFIG_TX64X64
BLOCK_64X64
#
endif
BLOCK_4X8
BLOCK_8X4
BLOCK_8X16
BLOCK_16X8
BLOCK_16X32
BLOCK_32X16
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
BLOCK_INVALID
}
;
static
const
TX_SIZE
txsize_sqr_map
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
TX_2X2
#
endif
TX_4X4
TX_8X8
TX_16X16
TX_32X32
#
if
CONFIG_TX64X64
TX_64X64
#
endif
TX_4X4
TX_4X4
TX_8X8
TX_8X8
TX_16X16
TX_16X16
TX_4X4
TX_4X4
TX_8X8
TX_8X8
}
;
static
const
TX_SIZE
txsize_sqr_up_map
[
TX_SIZES_ALL
]
=
{
#
if
CONFIG_CB4X4
TX_2X2
#
endif
TX_4X4
TX_8X8
TX_16X16
TX_32X32
#
if
CONFIG_TX64X64
TX_64X64
#
endif
TX_8X8
TX_8X8
TX_16X16
TX_16X16
TX_32X32
TX_32X32
TX_16X16
TX_16X16
TX_32X32
TX_32X32
}
;
static
const
TX_SIZE
tx_mode_to_biggest_tx_size
[
TX_MODES
]
=
{
TX_4X4
TX_8X8
TX_16X16
TX_32X32
#
if
CONFIG_TX64X64
TX_64X64
TX_64X64
#
else
TX_32X32
#
endif
}
;
static
const
BLOCK_SIZE
ss_size_lookup
[
BLOCK_SIZES
]
[
2
]
[
2
]
=
{
#
if
CONFIG_CB4X4
{
{
BLOCK_2X2
BLOCK_INVALID
}
{
BLOCK_INVALID
BLOCK_INVALID
}
}
{
{
BLOCK_2X4
BLOCK_INVALID
}
{
BLOCK_INVALID
BLOCK_INVALID
}
}
{
{
BLOCK_4X2
BLOCK_INVALID
}
{
BLOCK_INVALID
BLOCK_INVALID
}
}
{
{
BLOCK_4X4
BLOCK_4X2
}
{
BLOCK_2X4
BLOCK_2X2
}
}
{
{
BLOCK_4X8
BLOCK_4X4
}
{
BLOCK_INVALID
BLOCK_2X4
}
}
{
{
BLOCK_8X4
BLOCK_INVALID
}
{
BLOCK_4X4
BLOCK_4X2
}
}
#
else
{
{
BLOCK_4X4
BLOCK_INVALID
}
{
BLOCK_INVALID
BLOCK_INVALID
}
}
{
{
BLOCK_4X8
BLOCK_4X4
}
{
BLOCK_INVALID
BLOCK_INVALID
}
}
{
{
BLOCK_8X4
BLOCK_INVALID
}
{
BLOCK_4X4
BLOCK_INVALID
}
}
#
endif
{
{
BLOCK_8X8
BLOCK_8X4
}
{
BLOCK_4X8
BLOCK_4X4
}
}
{
{
BLOCK_8X16
BLOCK_8X8
}
{
BLOCK_INVALID
BLOCK_4X8
}
}
{
{
BLOCK_16X8
BLOCK_INVALID
}
{
BLOCK_8X8
BLOCK_8X4
}
}
{
{
BLOCK_16X16
BLOCK_16X8
}
{
BLOCK_8X16
BLOCK_8X8
}
}
{
{
BLOCK_16X32
BLOCK_16X16
}
{
BLOCK_INVALID
BLOCK_8X16
}
}
{
{
BLOCK_32X16
BLOCK_INVALID
}
{
BLOCK_16X16
BLOCK_16X8
}
}
{
{
BLOCK_32X32
BLOCK_32X16
}
{
BLOCK_16X32
BLOCK_16X16
}
}
{
{
BLOCK_32X64
BLOCK_32X32
}
{
BLOCK_INVALID
BLOCK_16X32
}
}
{
{
BLOCK_64X32
BLOCK_INVALID
}
{
BLOCK_32X32
BLOCK_32X16
}
}
{
{
BLOCK_64X64
BLOCK_64X32
}
{
BLOCK_32X64
BLOCK_32X32
}
}
#
if
CONFIG_EXT_PARTITION
{
{
BLOCK_64X128
BLOCK_64X64
}
{
BLOCK_INVALID
BLOCK_32X64
}
}
{
{
BLOCK_128X64
BLOCK_INVALID
}
{
BLOCK_64X64
BLOCK_64X32
}
}
{
{
BLOCK_128X128
BLOCK_128X64
}
{
BLOCK_64X128
BLOCK_64X64
}
}
#
endif
}
;
static
const
TX_SIZE
uv_txsize_lookup
[
BLOCK_SIZES
]
[
TX_SIZES_ALL
]
[
2
]
[
2
]
=
{
#
if
CONFIG_CB4X4
{
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
if
CONFIG_TX64X64
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
endif
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
if
CONFIG_TX64X64
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
endif
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
if
CONFIG_TX64X64
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
endif
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
#
endif
{
#
if
CONFIG_CB4X4
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_4X4
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
else
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
if
CONFIG_TX64X64
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_4X4
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
else
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
if
CONFIG_TX64X64
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
#
if
CONFIG_CB4X4
{
{
TX_4X8
TX_4X4
}
{
TX_2X2
TX_2X2
}
}
#
else
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_4X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
{
{
TX_4X4
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
else
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
if
CONFIG_TX64X64
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
if
CONFIG_CB4X4
{
{
TX_8X4
TX_2X2
}
{
TX_4X4
TX_2X2
}
}
#
else
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_2X2
TX_2X2
}
{
TX_2X2
TX_2X2
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
if
CONFIG_TX64X64
{
{
TX_8X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X8
TX_4X4
}
{
TX_4X8
TX_4X4
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X4
}
{
TX_4X8
TX_4X4
}
}
{
{
TX_8X8
TX_8X4
}
{
TX_4X8
TX_4X4
}
}
{
{
TX_8X8
TX_8X4
}
{
TX_4X8
TX_4X4
}
}
{
{
TX_8X8
TX_8X4
}
{
TX_4X8
TX_4X4
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_4X4
TX_4X4
}
}
#
if
CONFIG_TX64X64
{
{
TX_8X8
TX_8X8
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X16
TX_8X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X16
TX_8X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X16
TX_8X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X16
TX_8X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_4X4
}
{
TX_8X8
TX_4X4
}
}
{
{
TX_8X8
TX_4X4
}
{
TX_8X8
TX_4X4
}
}
{
{
TX_8X8
TX_4X4
}
{
TX_8X8
TX_4X4
}
}
#
if
CONFIG_TX64X64
{
{
TX_8X8
TX_4X4
}
{
TX_8X8
TX_4X4
}
}
#
endif
{
{
TX_4X8
TX_4X4
}
{
TX_4X8
TX_4X4
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_16X8
TX_8X4
}
{
TX_8X8
TX_8X4
}
}
{
{
TX_16X8
TX_8X4
}
{
TX_8X8
TX_8X4
}
}
{
{
TX_16X8
TX_8X4
}
{
TX_8X8
TX_8X4
}
}
{
{
TX_16X8
TX_8X4
}
{
TX_8X8
TX_8X4
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
#
if
CONFIG_TX64X64
{
{
TX_16X16
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X8
}
{
TX_8X16
TX_8X8
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X8
}
{
TX_8X16
TX_8X8
}
}
{
{
TX_16X16
TX_16X8
}
{
TX_8X16
TX_8X8
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X16
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X16
}
{
TX_8X8
TX_8X8
}
}
#
if
CONFIG_TX64X64
{
{
TX_16X16
TX_16X16
}
{
TX_8X8
TX_8X8
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X32
TX_16X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_16X32
TX_16X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_8X8
}
{
TX_16X16
TX_8X8
}
}
{
{
TX_16X16
TX_8X8
}
{
TX_16X16
TX_8X8
}
}
#
if
CONFIG_TX64X64
{
{
TX_16X16
TX_8X8
}
{
TX_16X16
TX_8X8
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X8
}
{
TX_8X16
TX_8X8
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_16X8
TX_16X8
}
}
{
{
TX_32X16
TX_16X8
}
{
TX_16X16
TX_16X8
}
}
{
{
TX_32X16
TX_16X8
}
{
TX_16X16
TX_16X8
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_32X32
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
#
if
CONFIG_TX64X64
{
{
TX_32X32
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_16X8
TX_16X8
}
}
{
{
TX_16X32
TX_16X16
}
{
TX_16X32
TX_16X16
}
}
{
{
TX_32X16
TX_32X16
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_32X32
TX_32X32
}
{
TX_16X16
TX_16X16
}
}
#
if
CONFIG_TX64X64
{
{
TX_32X32
TX_32X32
}
{
TX_16X16
TX_16X16
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_16X8
TX_16X8
}
}
{
{
TX_16X32
TX_16X32
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_32X16
TX_32X16
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_32X32
TX_16X16
}
{
TX_32X32
TX_16X16
}
}
#
if
CONFIG_TX64X64
{
{
TX_32X32
TX_16X16
}
{
TX_32X32
TX_16X16
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_16X8
TX_16X8
}
}
{
{
TX_16X32
TX_16X16
}
{
TX_16X32
TX_16X16
}
}
{
{
TX_32X16
TX_16X16
}
{
TX_32X16
TX_16X16
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_32X32
TX_32X32
}
{
TX_32X32
TX_32X32
}
}
#
if
CONFIG_TX64X64
{
{
TX_64X64
TX_32X32
}
{
TX_32X32
TX_32X32
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_16X8
TX_16X8
}
}
{
{
TX_16X32
TX_16X32
}
{
TX_16X32
TX_16X32
}
}
{
{
TX_32X16
TX_32X16
}
{
TX_32X16
TX_16X16
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
#
if
CONFIG_EXT_PARTITION
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_32X32
TX_32X32
}
{
TX_32X32
TX_32X32
}
}
#
if
CONFIG_TX64X64
{
{
TX_64X64
TX_64X64
}
{
TX_32X32
TX_32X32
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_16X8
TX_16X8
}
}
{
{
TX_16X32
TX_16X32
}
{
TX_16X32
TX_16X32
}
}
{
{
TX_32X16
TX_32X16
}
{
TX_32X16
TX_32X16
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_32X32
TX_32X32
}
{
TX_32X32
TX_32X32
}
}
#
if
CONFIG_TX64X64
{
{
TX_64X64
TX_32X32
}
{
TX_64X64
TX_32X32
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_16X8
TX_16X8
}
}
{
{
TX_16X32
TX_16X32
}
{
TX_16X32
TX_16X32
}
}
{
{
TX_32X16
TX_32X16
}
{
TX_32X16
TX_32X16
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_16X16
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
{
{
TX_32X32
TX_32X32
}
{
TX_32X32
TX_32X32
}
}
#
if
CONFIG_TX64X64
{
{
TX_64X64
TX_64X64
}
{
TX_64X64
TX_64X64
}
}
#
endif
{
{
TX_4X8
TX_4X8
}
{
TX_4X8
TX_4X8
}
}
{
{
TX_8X4
TX_8X4
}
{
TX_8X4
TX_8X4
}
}
{
{
TX_8X16
TX_8X16
}
{
TX_8X16
TX_8X16
}
}
{
{
TX_16X8
TX_16X8
}
{
TX_16X8
TX_16X8
}
}
{
{
TX_16X32
TX_16X32
}
{
TX_16X32
TX_16X32
}
}
{
{
TX_32X16
TX_32X16
}
{
TX_32X16
TX_32X16
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
{
{
TX_INVALID
TX_INVALID
}
{
TX_INVALID
TX_INVALID
}
}
}
#
endif
}
;
static
const
struct
{
PARTITION_CONTEXT
above
;
PARTITION_CONTEXT
left
;
}
partition_context_lookup
[
BLOCK_SIZES
]
=
{
#
if
CONFIG_EXT_PARTITION
#
if
CONFIG_CB4X4
{
31
31
}
{
31
31
}
{
31
31
}
#
endif
{
31
31
}
{
31
30
}
{
30
31
}
{
30
30
}
{
30
28
}
{
28
30
}
{
28
28
}
{
28
24
}
{
24
28
}
{
24
24
}
{
24
16
}
{
16
24
}
{
16
16
}
{
16
0
}
{
0
16
}
{
0
0
}
#
else
#
if
CONFIG_CB4X4
{
15
15
}
{
15
15
}
{
15
15
}
#
endif
{
15
15
}
{
15
14
}
{
14
15
}
{
14
14
}
{
14
12
}
{
12
14
}
{
12
12
}
{
12
8
}
{
8
12
}
{
8
8
}
{
8
0
}
{
0
8
}
{
0
0
}
#
endif
}
;
#
if
CONFIG_SUPERTX
static
const
TX_SIZE
uvsupertx_size_lookup
[
TX_SIZES
]
[
2
]
[
2
]
=
{
#
if
CONFIG_CB4X4
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
#
endif
{
{
TX_4X4
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_8X8
TX_4X4
}
{
TX_4X4
TX_4X4
}
}
{
{
TX_16X16
TX_8X8
}
{
TX_8X8
TX_8X8
}
}
{
{
TX_32X32
TX_16X16
}
{
TX_16X16
TX_16X16
}
}
#
if
CONFIG_TX64X64
{
{
TX_64X64
TX_32X32
}
{
TX_32X32
TX_32X32
}
}
#
endif
}
;
#
if
CONFIG_EXT_PARTITION_TYPES
static
const
int
partition_supertx_context_lookup
[
EXT_PARTITION_TYPES
]
=
{
-
1
0
0
1
0
0
0
0
}
;
#
else
static
const
int
partition_supertx_context_lookup
[
PARTITION_TYPES
]
=
{
-
1
0
0
1
}
;
#
endif
#
endif
#
if
CONFIG_ADAPT_SCAN
#
define
EOB_THRESHOLD_NUM
2
#
endif
#
ifdef
__cplusplus
}
#
endif
#
endif
