#
ifndef
AV1_COMMON_LOOPFILTER_THREAD_H_
#
define
AV1_COMMON_LOOPFILTER_THREAD_H_
#
include
"
.
/
aom_config
.
h
"
#
include
"
av1
/
common
/
av1_loopfilter
.
h
"
#
include
"
aom_util
/
aom_thread
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
struct
AV1Common
;
struct
FRAME_COUNTS
;
typedef
struct
AV1LfSyncData
{
#
if
CONFIG_MULTITHREAD
pthread_mutex_t
*
mutex_
;
pthread_cond_t
*
cond_
;
#
endif
int
*
cur_sb_col
;
int
sync_range
;
int
rows
;
LFWorkerData
*
lfdata
;
int
num_workers
;
}
AV1LfSync
;
void
av1_loop_filter_alloc
(
AV1LfSync
*
lf_sync
struct
AV1Common
*
cm
int
rows
int
width
int
num_workers
)
;
void
av1_loop_filter_dealloc
(
AV1LfSync
*
lf_sync
)
;
void
av1_loop_filter_frame_mt
(
YV12_BUFFER_CONFIG
*
frame
struct
AV1Common
*
cm
struct
macroblockd_plane
*
planes
int
frame_filter_level
#
if
CONFIG_LOOPFILTER_LEVEL
int
frame_filter_level_r
#
endif
int
y_only
int
partial_frame
AVxWorker
*
workers
int
num_workers
AV1LfSync
*
lf_sync
)
;
void
av1_accumulate_frame_counts
(
struct
FRAME_COUNTS
*
acc_counts
struct
FRAME_COUNTS
*
counts
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
