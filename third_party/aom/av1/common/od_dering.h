#
if
!
defined
(
_dering_H
)
#
define
_dering_H
(
1
)
#
include
"
odintrin
.
h
"
#
define
OD_DERING_NBLOCKS
(
MAX_SB_SIZE
/
8
)
#
define
OD_FILT_VBORDER
(
3
)
#
define
OD_FILT_HBORDER
(
8
)
#
define
OD_FILT_BSTRIDE
ALIGN_POWER_OF_TWO
(
MAX_SB_SIZE
+
2
*
OD_FILT_HBORDER
3
)
#
define
OD_DERING_VERY_LARGE
(
30000
)
#
define
OD_DERING_INBUF_SIZE
\
(
OD_FILT_BSTRIDE
*
(
MAX_SB_SIZE
+
2
*
OD_FILT_VBORDER
)
)
extern
const
int
OD_DIRECTION_OFFSETS_TABLE
[
8
]
[
3
]
;
typedef
struct
{
uint8_t
by
;
uint8_t
bx
;
uint8_t
skip
;
}
dering_list
;
typedef
void
(
*
od_filter_dering_direction_func
)
(
uint16_t
*
y
int
ystride
const
uint16_t
*
in
int
threshold
int
dir
int
damping
)
;
int
get_filter_skip
(
int
level
)
;
void
od_dering
(
uint8_t
*
dst
int
dstride
uint16_t
*
y
uint16_t
*
in
int
xdec
int
ydec
int
dir
[
OD_DERING_NBLOCKS
]
[
OD_DERING_NBLOCKS
]
int
*
dirinit
int
var
[
OD_DERING_NBLOCKS
]
[
OD_DERING_NBLOCKS
]
int
pli
dering_list
*
dlist
int
dering_count
int
level
int
clpf_strength
int
clpf_damping
int
dering_damping
int
coeff_shift
int
skip_dering
int
hbd
)
;
#
endif
