#
ifndef
AV1_INV_TXFM2D_CFG_H_
#
define
AV1_INV_TXFM2D_CFG_H_
#
include
"
av1
/
common
/
av1_inv_txfm1d
.
h
"
#
if
CONFIG_CHROMA_2X2
#
if
CONFIG_TX64X64
static
const
int8_t
fwd_shift_sum
[
TX_SIZES
]
=
{
3
2
1
0
-
2
-
4
}
;
#
else
static
const
int8_t
fwd_shift_sum
[
TX_SIZES
]
=
{
3
2
1
0
-
2
}
;
#
endif
#
else
#
if
CONFIG_TX64X64
static
const
int8_t
fwd_shift_sum
[
TX_SIZES
]
=
{
2
1
0
-
2
-
4
}
;
#
else
static
const
int8_t
fwd_shift_sum
[
TX_SIZES
]
=
{
2
1
0
-
2
}
;
#
endif
#
endif
static
const
int8_t
inv_shift_4
[
2
]
=
{
0
-
4
}
;
static
const
int8_t
inv_stage_range_col_dct_4
[
4
]
=
{
3
3
2
2
}
;
static
const
int8_t
inv_stage_range_row_dct_4
[
4
]
=
{
3
3
3
3
}
;
static
const
int8_t
inv_stage_range_col_adst_4
[
6
]
=
{
3
3
3
3
2
2
}
;
static
const
int8_t
inv_stage_range_row_adst_4
[
6
]
=
{
3
3
3
3
3
3
}
;
static
const
int8_t
inv_stage_range_idx_4
[
1
]
=
{
0
}
;
static
const
int8_t
inv_cos_bit_col_dct_4
[
4
]
=
{
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_row_dct_4
[
4
]
=
{
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_col_adst_4
[
6
]
=
{
13
13
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_row_adst_4
[
6
]
=
{
13
13
13
13
13
13
}
;
static
const
int8_t
inv_shift_8
[
2
]
=
{
0
-
5
}
;
static
const
int8_t
inv_stage_range_col_dct_8
[
6
]
=
{
5
5
5
5
4
4
}
;
static
const
int8_t
inv_stage_range_row_dct_8
[
6
]
=
{
5
5
5
5
5
5
}
;
static
const
int8_t
inv_stage_range_col_adst_8
[
8
]
=
{
5
5
5
5
5
5
4
4
}
;
static
const
int8_t
inv_stage_range_row_adst_8
[
8
]
=
{
5
5
5
5
5
5
5
5
}
;
static
const
int8_t
inv_stage_range_idx_8
[
1
]
=
{
0
}
;
static
const
int8_t
inv_cos_bit_col_dct_8
[
6
]
=
{
13
13
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_row_dct_8
[
6
]
=
{
13
13
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_col_adst_8
[
8
]
=
{
13
13
13
13
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_row_adst_8
[
8
]
=
{
13
13
13
13
13
13
13
13
}
;
static
const
int8_t
inv_shift_16
[
2
]
=
{
-
1
-
5
}
;
static
const
int8_t
inv_stage_range_col_dct_16
[
8
]
=
{
7
7
7
7
7
7
6
6
}
;
static
const
int8_t
inv_stage_range_row_dct_16
[
8
]
=
{
7
7
7
7
7
7
7
7
}
;
static
const
int8_t
inv_stage_range_col_adst_16
[
10
]
=
{
7
7
7
7
7
7
7
7
6
6
}
;
static
const
int8_t
inv_stage_range_row_adst_16
[
10
]
=
{
7
7
7
7
7
7
7
7
7
7
}
;
static
const
int8_t
inv_stage_range_idx_16
[
1
]
=
{
0
}
;
static
const
int8_t
inv_cos_bit_col_dct_16
[
8
]
=
{
13
13
13
13
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_row_dct_16
[
8
]
=
{
12
12
12
12
12
12
12
12
}
;
static
const
int8_t
inv_cos_bit_col_adst_16
[
10
]
=
{
13
13
13
13
13
13
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_row_adst_16
[
10
]
=
{
12
12
12
12
12
12
12
12
12
12
}
;
static
const
int8_t
inv_shift_32
[
2
]
=
{
-
1
-
5
}
;
static
const
int8_t
inv_stage_range_col_dct_32
[
10
]
=
{
9
9
9
9
9
9
9
9
8
8
}
;
static
const
int8_t
inv_stage_range_row_dct_32
[
10
]
=
{
9
9
9
9
9
9
9
9
9
9
}
;
static
const
int8_t
inv_stage_range_col_adst_32
[
12
]
=
{
9
9
9
9
9
9
9
9
9
9
8
8
}
;
static
const
int8_t
inv_stage_range_row_adst_32
[
12
]
=
{
9
9
9
9
9
9
9
9
9
9
9
9
}
;
static
const
int8_t
inv_stage_range_idx_32
[
1
]
=
{
0
}
;
static
const
int8_t
inv_cos_bit_col_dct_32
[
10
]
=
{
13
13
13
13
13
13
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_row_dct_32
[
10
]
=
{
12
12
12
12
12
12
12
12
12
12
}
;
static
const
int8_t
inv_cos_bit_col_adst_32
[
12
]
=
{
13
13
13
13
13
13
13
13
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_row_adst_32
[
12
]
=
{
12
12
12
12
12
12
12
12
12
12
12
12
}
;
static
const
int8_t
inv_shift_64
[
2
]
=
{
-
1
-
5
}
;
static
const
int8_t
inv_stage_range_col_dct_64
[
12
]
=
{
11
11
11
11
11
11
11
11
11
11
10
10
}
;
static
const
int8_t
inv_stage_range_row_dct_64
[
12
]
=
{
11
11
11
11
11
11
11
11
11
11
11
11
}
;
static
const
int8_t
inv_stage_range_idx_64
[
1
]
=
{
0
}
;
static
const
int8_t
inv_cos_bit_col_dct_64
[
12
]
=
{
13
13
13
13
13
13
13
13
13
13
13
13
}
;
static
const
int8_t
inv_cos_bit_row_dct_64
[
12
]
=
{
12
12
12
12
12
12
12
12
12
12
12
12
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_row_cfg_dct_4
=
{
4
4
inv_shift_4
inv_stage_range_row_dct_4
inv_cos_bit_row_dct_4
TXFM_TYPE_DCT4
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_row_cfg_dct_8
=
{
8
6
inv_shift_8
inv_stage_range_row_dct_8
inv_cos_bit_row_dct_8
TXFM_TYPE_DCT8
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_row_cfg_dct_16
=
{
16
8
inv_shift_16
inv_stage_range_row_dct_16
inv_cos_bit_row_dct_16
TXFM_TYPE_DCT16
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_row_cfg_dct_32
=
{
32
10
inv_shift_32
inv_stage_range_row_dct_32
inv_cos_bit_row_dct_32
TXFM_TYPE_DCT32
}
;
#
if
CONFIG_TX64X64
static
const
TXFM_1D_CFG
inv_txfm_1d_row_cfg_dct_64
=
{
64
12
inv_shift_64
inv_stage_range_row_dct_64
inv_cos_bit_row_dct_64
TXFM_TYPE_DCT64
}
;
#
endif
static
const
TXFM_1D_CFG
inv_txfm_1d_row_cfg_adst_4
=
{
4
6
inv_shift_4
inv_stage_range_row_adst_4
inv_cos_bit_row_adst_4
TXFM_TYPE_ADST4
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_row_cfg_adst_8
=
{
8
8
inv_shift_8
inv_stage_range_row_adst_8
inv_cos_bit_row_adst_8
TXFM_TYPE_ADST8
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_row_cfg_adst_16
=
{
16
10
inv_shift_16
inv_stage_range_row_adst_16
inv_cos_bit_row_adst_16
TXFM_TYPE_ADST16
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_row_cfg_adst_32
=
{
32
12
inv_shift_32
inv_stage_range_row_adst_32
inv_cos_bit_row_adst_32
TXFM_TYPE_ADST32
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_col_cfg_dct_4
=
{
4
4
inv_shift_4
inv_stage_range_col_dct_4
inv_cos_bit_col_dct_4
TXFM_TYPE_DCT4
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_col_cfg_dct_8
=
{
8
6
inv_shift_8
inv_stage_range_col_dct_8
inv_cos_bit_col_dct_8
TXFM_TYPE_DCT8
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_col_cfg_dct_16
=
{
16
8
inv_shift_16
inv_stage_range_col_dct_16
inv_cos_bit_col_dct_16
TXFM_TYPE_DCT16
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_col_cfg_dct_32
=
{
32
10
inv_shift_32
inv_stage_range_col_dct_32
inv_cos_bit_col_dct_32
TXFM_TYPE_DCT32
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_col_cfg_dct_64
=
{
64
12
inv_shift_64
inv_stage_range_col_dct_64
inv_cos_bit_col_dct_64
TXFM_TYPE_DCT64
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_col_cfg_adst_4
=
{
4
6
inv_shift_4
inv_stage_range_col_adst_4
inv_cos_bit_col_adst_4
TXFM_TYPE_ADST4
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_col_cfg_adst_8
=
{
8
8
inv_shift_8
inv_stage_range_col_adst_8
inv_cos_bit_col_adst_8
TXFM_TYPE_ADST8
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_col_cfg_adst_16
=
{
16
10
inv_shift_16
inv_stage_range_col_adst_16
inv_cos_bit_col_adst_16
TXFM_TYPE_ADST16
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_col_cfg_adst_32
=
{
32
12
inv_shift_32
inv_stage_range_col_adst_32
inv_cos_bit_col_adst_32
TXFM_TYPE_ADST32
}
;
#
if
CONFIG_EXT_TX
static
const
TXFM_1D_CFG
inv_txfm_1d_cfg_identity_4
=
{
4
1
inv_shift_4
inv_stage_range_idx_4
NULL
TXFM_TYPE_IDENTITY4
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_cfg_identity_8
=
{
8
1
inv_shift_8
inv_stage_range_idx_8
NULL
TXFM_TYPE_IDENTITY8
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_cfg_identity_16
=
{
16
1
inv_shift_16
inv_stage_range_idx_16
NULL
TXFM_TYPE_IDENTITY16
}
;
static
const
TXFM_1D_CFG
inv_txfm_1d_cfg_identity_32
=
{
32
1
inv_shift_32
inv_stage_range_idx_32
NULL
TXFM_TYPE_IDENTITY32
}
;
#
if
CONFIG_TX64X64
static
const
TXFM_1D_CFG
inv_txfm_1d_cfg_identity_64
=
{
64
1
inv_shift_64
inv_stage_range_idx_64
NULL
TXFM_TYPE_IDENTITY64
}
;
#
endif
#
endif
#
endif
