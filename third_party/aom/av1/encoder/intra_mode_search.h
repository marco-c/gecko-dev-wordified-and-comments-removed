#
ifndef
AOM_AV1_ENCODER_INTRA_MODE_SEARCH_H_
#
define
AOM_AV1_ENCODER_INTRA_MODE_SEARCH_H_
#
include
<
stdbool
.
h
>
#
include
"
av1
/
encoder
/
encoder
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
typedef
struct
IntraModeSearchState
{
PREDICTION_MODE
best_intra_mode
;
int
skip_intra_modes
;
uint8_t
directional_mode_skip_mask
[
INTRA_MODES
]
;
int
dir_mode_skip_mask_ready
;
int
rate_uv_intra
;
int
rate_uv_tokenonly
;
int64_t
dist_uvs
;
uint8_t
skip_uvs
;
UV_PREDICTION_MODE
mode_uv
;
PALETTE_MODE_INFO
pmi_uv
;
int8_t
uv_angle_delta
;
}
IntraModeSearchState
;
int
av1_handle_intra_y_mode
(
IntraModeSearchState
*
intra_search_state
const
AV1_COMP
*
cpi
MACROBLOCK
*
x
BLOCK_SIZE
bsize
unsigned
int
ref_frame_cost
const
PICK_MODE_CONTEXT
*
ctx
RD_STATS
*
rd_stats_y
int64_t
best_rd
int
*
mode_cost_y
int64_t
*
rd_y
int64_t
*
best_model_rd
int64_t
top_intra_model_rd
[
]
)
;
int
av1_search_intra_uv_modes_in_interframe
(
IntraModeSearchState
*
intra_search_state
const
AV1_COMP
*
cpi
MACROBLOCK
*
x
BLOCK_SIZE
bsize
RD_STATS
*
rd_stats
const
RD_STATS
*
rd_stats_y
RD_STATS
*
rd_stats_uv
int64_t
best_rd
)
;
int
av1_search_palette_mode
(
IntraModeSearchState
*
intra_search_state
const
AV1_COMP
*
cpi
MACROBLOCK
*
x
BLOCK_SIZE
bsize
unsigned
int
ref_frame_cost
PICK_MODE_CONTEXT
*
ctx
RD_STATS
*
this_rd_cost
int64_t
best_rd
)
;
void
av1_search_palette_mode_luma
(
const
AV1_COMP
*
cpi
MACROBLOCK
*
x
BLOCK_SIZE
bsize
unsigned
int
ref_frame_cost
PICK_MODE_CONTEXT
*
ctx
RD_STATS
*
this_rd_cost
int64_t
best_rd
)
;
int64_t
av1_rd_pick_intra_sby_mode
(
const
AV1_COMP
*
const
cpi
MACROBLOCK
*
x
int
*
rate
int
*
rate_tokenonly
int64_t
*
distortion
uint8_t
*
skippable
BLOCK_SIZE
bsize
int64_t
best_rd
PICK_MODE_CONTEXT
*
ctx
)
;
int64_t
av1_rd_pick_intra_sbuv_mode
(
const
AV1_COMP
*
const
cpi
MACROBLOCK
*
x
int
*
rate
int
*
rate_tokenonly
int64_t
*
distortion
uint8_t
*
skippable
BLOCK_SIZE
bsize
TX_SIZE
max_tx_size
)
;
void
av1_count_colors
(
const
uint8_t
*
src
int
stride
int
rows
int
cols
int
*
val_count
int
*
num_colors
)
;
void
av1_count_colors_highbd
(
const
uint8_t
*
src8
int
stride
int
rows
int
cols
int
bit_depth
int
*
val_count
int
*
val_count_8bit
int
*
num_color_bins
int
*
num_colors
)
;
bool
av1_count_colors_with_threshold
(
const
uint8_t
*
src
int
stride
int
rows
int
cols
int
num_colors_threshold
int
*
num_colors
)
;
static
inline
void
init_intra_mode_search_state
(
IntraModeSearchState
*
intra_search_state
)
{
memset
(
intra_search_state
0
sizeof
(
*
intra_search_state
)
)
;
intra_search_state
-
>
rate_uv_intra
=
INT_MAX
;
}
void
set_y_mode_and_delta_angle
(
const
int
mode_idx
MB_MODE_INFO
*
const
mbmi
int
reorder_delta_angle_eval
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
