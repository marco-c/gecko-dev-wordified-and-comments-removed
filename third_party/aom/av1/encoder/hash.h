#
ifndef
AOM_AV1_ENCODER_HASH_H_
#
define
AOM_AV1_ENCODER_HASH_H_
#
include
"
config
/
aom_config
.
h
"
#
include
"
aom
/
aom_integer
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
typedef
struct
_crc_calculator
{
uint32_t
remainder
;
uint32_t
trunc_poly
;
uint32_t
bits
;
uint32_t
table
[
256
]
;
uint32_t
final_result_mask
;
}
CRC_CALCULATOR
;
void
av1_crc_calculator_init
(
CRC_CALCULATOR
*
p_crc_calculator
uint32_t
bits
uint32_t
truncPoly
)
;
uint32_t
av1_get_crc_value
(
CRC_CALCULATOR
*
p_crc_calculator
uint8_t
*
p
int
length
)
;
typedef
struct
_CRC32C
{
uint32_t
table
[
8
]
[
256
]
;
}
CRC32C
;
void
av1_crc32c_calculator_init
(
CRC32C
*
p_crc32c
)
;
#
define
AOM_BUFFER_SIZE_FOR_BLOCK_HASH
(
4096
)
#
ifdef
__cplusplus
}
#
endif
#
endif
