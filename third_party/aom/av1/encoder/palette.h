#
ifndef
AV1_ENCODER_PALETTE_H_
#
define
AV1_ENCODER_PALETTE_H_
#
include
"
av1
/
common
/
blockd
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
define
AV1_K_MEANS_RENAME
(
func
dim
)
func
#
#
_dim
#
#
dim
void
AV1_K_MEANS_RENAME
(
av1_calc_indices
1
)
(
const
int
*
data
const
int
*
centroids
uint8_t
*
indices
int
n
int
k
)
;
void
AV1_K_MEANS_RENAME
(
av1_calc_indices
2
)
(
const
int
*
data
const
int
*
centroids
uint8_t
*
indices
int
n
int
k
)
;
void
AV1_K_MEANS_RENAME
(
av1_k_means
1
)
(
const
int
*
data
int
*
centroids
uint8_t
*
indices
int
n
int
k
int
max_itr
)
;
void
AV1_K_MEANS_RENAME
(
av1_k_means
2
)
(
const
int
*
data
int
*
centroids
uint8_t
*
indices
int
n
int
k
int
max_itr
)
;
static
INLINE
void
av1_calc_indices
(
const
int
*
data
const
int
*
centroids
uint8_t
*
indices
int
n
int
k
int
dim
)
{
if
(
dim
=
=
1
)
{
AV1_K_MEANS_RENAME
(
av1_calc_indices
1
)
(
data
centroids
indices
n
k
)
;
}
else
if
(
dim
=
=
2
)
{
AV1_K_MEANS_RENAME
(
av1_calc_indices
2
)
(
data
centroids
indices
n
k
)
;
}
else
{
assert
(
0
&
&
"
Untemplated
k
means
dimension
"
)
;
}
}
static
INLINE
void
av1_k_means
(
const
int
*
data
int
*
centroids
uint8_t
*
indices
int
n
int
k
int
dim
int
max_itr
)
{
if
(
dim
=
=
1
)
{
AV1_K_MEANS_RENAME
(
av1_k_means
1
)
(
data
centroids
indices
n
k
max_itr
)
;
}
else
if
(
dim
=
=
2
)
{
AV1_K_MEANS_RENAME
(
av1_k_means
2
)
(
data
centroids
indices
n
k
max_itr
)
;
}
else
{
assert
(
0
&
&
"
Untemplated
k
means
dimension
"
)
;
}
}
int
av1_remove_duplicates
(
int
*
centroids
int
num_centroids
)
;
int
av1_index_color_cache
(
const
uint16_t
*
color_cache
int
n_cache
const
uint16_t
*
colors
int
n_colors
uint8_t
*
cache_color_found
int
*
out_cache_colors
)
;
int
av1_get_palette_delta_bits_v
(
const
PALETTE_MODE_INFO
*
const
pmi
int
bit_depth
int
*
zero_count
int
*
min_bits
)
;
int
av1_palette_color_cost_y
(
const
PALETTE_MODE_INFO
*
const
pmi
uint16_t
*
color_cache
int
n_cache
int
bit_depth
)
;
int
av1_palette_color_cost_uv
(
const
PALETTE_MODE_INFO
*
const
pmi
uint16_t
*
color_cache
int
n_cache
int
bit_depth
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
