#
ifndef
AOM_AV1_ENCODER_TUNE_VMAF_H_
#
define
AOM_AV1_ENCODER_TUNE_VMAF_H_
#
include
"
aom_dsp
/
vmaf
.
h
"
#
include
"
aom_scale
/
yv12config
.
h
"
#
include
"
av1
/
common
/
enums
.
h
"
#
include
"
av1
/
encoder
/
ratectrl
.
h
"
#
include
"
av1
/
encoder
/
block
.
h
"
typedef
struct
{
double
*
rdmult_scaling_factors
;
double
last_frame_ysse
[
MAX_ARF_LAYERS
]
;
double
last_frame_vmaf
[
MAX_ARF_LAYERS
]
;
double
last_frame_unsharp_amount
[
MAX_ARF_LAYERS
]
;
int
original_qindex
;
VmafModel
*
vmaf_model
;
}
TuneVMAFInfo
;
struct
AV1_COMP
;
void
av1_vmaf_blk_preprocessing
(
struct
AV1_COMP
*
cpi
YV12_BUFFER_CONFIG
*
source
)
;
void
av1_vmaf_frame_preprocessing
(
struct
AV1_COMP
*
cpi
YV12_BUFFER_CONFIG
*
source
)
;
void
av1_vmaf_neg_preprocessing
(
struct
AV1_COMP
*
cpi
YV12_BUFFER_CONFIG
*
source
)
;
void
av1_set_mb_vmaf_rdmult_scaling
(
struct
AV1_COMP
*
cpi
)
;
void
av1_set_vmaf_rdmult
(
const
struct
AV1_COMP
*
cpi
MACROBLOCK
*
x
BLOCK_SIZE
bsize
int
mi_row
int
mi_col
int
*
rdmult
)
;
int
av1_get_vmaf_base_qindex
(
const
struct
AV1_COMP
*
cpi
int
current_qindex
)
;
void
av1_update_vmaf_curve
(
struct
AV1_COMP
*
cpi
)
;
#
endif
