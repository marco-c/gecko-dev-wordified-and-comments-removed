#
ifndef
AOM_AV1_ENCODER_INTERP_FILTER_SEARCH_H_
#
define
AOM_AV1_ENCODER_INTERP_FILTER_SEARCH_H_
#
include
"
av1
/
encoder
/
block
.
h
"
#
include
"
av1
/
encoder
/
encoder
.
h
"
#
include
"
av1
/
encoder
/
rdopt_utils
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
define
MAX_INTERP_FILTER_STATS
128
#
define
DUAL_FILTER_SET_SIZE
(
SWITCHABLE_FILTERS
*
SWITCHABLE_FILTERS
)
typedef
struct
{
int_interpfilters
filters
;
int_mv
mv
[
2
]
;
int8_t
ref_frames
[
2
]
;
COMPOUND_TYPE
comp_type
;
int
compound_idx
;
int64_t
rd
;
unsigned
int
pred_sse
;
}
INTERPOLATION_FILTER_STATS
;
typedef
struct
HandleInterModeArgs
{
uint8_t
*
above_pred_buf
[
MAX_MB_PLANE
]
;
int
above_pred_stride
[
MAX_MB_PLANE
]
;
uint8_t
*
left_pred_buf
[
MAX_MB_PLANE
]
;
int
left_pred_stride
[
MAX_MB_PLANE
]
;
int_mv
(
*
single_newmv
)
[
REF_FRAMES
]
;
int
(
*
single_newmv_rate
)
[
REF_FRAMES
]
;
int
(
*
single_newmv_valid
)
[
REF_FRAMES
]
;
int64_t
(
*
modelled_rd
)
[
MAX_REF_MV_SEARCH
]
[
REF_FRAMES
]
;
int
ref_frame_cost
;
int
single_comp_cost
;
int64_t
(
*
simple_rd
)
[
MAX_REF_MV_SEARCH
]
[
REF_FRAMES
]
;
int
skip_motion_mode
;
bool
skip_ifs
;
INTERINTRA_MODE
*
inter_intra_mode
;
INTERPOLATION_FILTER_STATS
interp_filter_stats
[
MAX_INTERP_FILTER_STATS
]
;
FULLPEL_MV
start_mv_stack
[
(
MAX_REF_MV_SEARCH
-
1
)
*
2
]
;
uint8_t
ref_mv_idx_stack
[
(
MAX_REF_MV_SEARCH
-
1
)
*
2
]
;
int
start_mv_cnt
;
int
interp_filter_stats_idx
;
int
wedge_index
;
int
wedge_sign
;
int
diffwtd_index
;
int
cmp_mode
[
MODE_CTX_REF_FRAMES
]
;
unsigned
int
best_single_sse_in_refs
[
REF_FRAMES
]
;
unsigned
int
best_pred_sse
;
}
HandleInterModeArgs
;
static
const
int_interpfilters
filter_sets
[
DUAL_FILTER_SET_SIZE
]
=
{
{
0x00000000
}
{
0x00010000
}
{
0x00020000
}
{
0x00000001
}
{
0x00010001
}
{
0x00020001
}
{
0x00000002
}
{
0x00010002
}
{
0x00020002
}
}
;
int64_t
av1_interpolation_filter_search
(
MACROBLOCK
*
const
x
const
AV1_COMP
*
const
cpi
const
TileDataEnc
*
tile_data
BLOCK_SIZE
bsize
const
BUFFER_SET
*
const
tmp_dst
const
BUFFER_SET
*
const
orig_dst
int64_t
*
const
rd
int
*
const
switchable_rate
int
*
skip_build_pred
HandleInterModeArgs
*
args
int64_t
ref_best_rd
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
