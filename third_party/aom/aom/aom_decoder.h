#
ifndef
AOM_AOM_DECODER_H_
#
define
AOM_AOM_DECODER_H_
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
include
"
.
/
aom_codec
.
h
"
#
include
"
.
/
aom_frame_buffer
.
h
"
#
define
AOM_DECODER_ABI_VERSION
\
(
3
+
AOM_CODEC_ABI_VERSION
)
/
*
*
<
\
hideinitializer
*
/
#
define
AOM_CODEC_CAP_PUT_SLICE
0x10000
/
*
*
<
Will
issue
put_slice
callbacks
*
/
#
define
AOM_CODEC_CAP_PUT_FRAME
0x20000
/
*
*
<
Will
issue
put_frame
callbacks
*
/
#
define
AOM_CODEC_CAP_POSTPROC
0x40000
/
*
*
<
Can
postprocess
decoded
frame
*
/
#
define
AOM_CODEC_CAP_ERROR_CONCEALMENT
0x80000
#
define
AOM_CODEC_CAP_INPUT_FRAGMENTS
0x100000
#
define
AOM_CODEC_CAP_FRAME_THREADING
0x200000
#
define
AOM_CODEC_CAP_EXTERNAL_FRAME_BUFFER
0x400000
#
define
AOM_CODEC_USE_POSTPROC
0x10000
/
*
*
<
Postprocess
decoded
frame
*
/
#
define
AOM_CODEC_USE_ERROR_CONCEALMENT
0x20000
#
define
AOM_CODEC_USE_INPUT_FRAGMENTS
0x40000
#
define
AOM_CODEC_USE_FRAME_THREADING
0x80000
typedef
struct
aom_codec_stream_info
{
unsigned
int
w
;
unsigned
int
h
;
unsigned
int
is_kf
;
}
aom_codec_stream_info_t
;
typedef
struct
aom_codec_dec_cfg
{
unsigned
int
threads
;
unsigned
int
w
;
unsigned
int
h
;
}
aom_codec_dec_cfg_t
;
aom_codec_err_t
aom_codec_dec_init_ver
(
aom_codec_ctx_t
*
ctx
aom_codec_iface_t
*
iface
const
aom_codec_dec_cfg_t
*
cfg
aom_codec_flags_t
flags
int
ver
)
;
#
define
aom_codec_dec_init
(
ctx
iface
cfg
flags
)
\
aom_codec_dec_init_ver
(
ctx
iface
cfg
flags
AOM_DECODER_ABI_VERSION
)
aom_codec_err_t
aom_codec_peek_stream_info
(
aom_codec_iface_t
*
iface
const
uint8_t
*
data
unsigned
int
data_sz
aom_codec_stream_info_t
*
si
)
;
aom_codec_err_t
aom_codec_get_stream_info
(
aom_codec_ctx_t
*
ctx
aom_codec_stream_info_t
*
si
)
;
aom_codec_err_t
aom_codec_decode
(
aom_codec_ctx_t
*
ctx
const
uint8_t
*
data
unsigned
int
data_sz
void
*
user_priv
long
deadline
)
;
aom_image_t
*
aom_codec_get_frame
(
aom_codec_ctx_t
*
ctx
aom_codec_iter_t
*
iter
)
;
typedef
void
(
*
aom_codec_put_frame_cb_fn_t
)
(
void
*
user_priv
const
aom_image_t
*
img
)
;
aom_codec_err_t
aom_codec_register_put_frame_cb
(
aom_codec_ctx_t
*
ctx
aom_codec_put_frame_cb_fn_t
cb
void
*
user_priv
)
;
typedef
void
(
*
aom_codec_put_slice_cb_fn_t
)
(
void
*
user_priv
const
aom_image_t
*
img
const
aom_image_rect_t
*
valid
const
aom_image_rect_t
*
update
)
;
aom_codec_err_t
aom_codec_register_put_slice_cb
(
aom_codec_ctx_t
*
ctx
aom_codec_put_slice_cb_fn_t
cb
void
*
user_priv
)
;
aom_codec_err_t
aom_codec_set_frame_buffer_functions
(
aom_codec_ctx_t
*
ctx
aom_get_frame_buffer_cb_fn_t
cb_get
aom_release_frame_buffer_cb_fn_t
cb_release
void
*
cb_priv
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
