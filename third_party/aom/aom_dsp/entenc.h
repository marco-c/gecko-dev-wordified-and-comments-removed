#
if
!
defined
(
_entenc_H
)
#
define
_entenc_H
(
1
)
#
include
<
stddef
.
h
>
#
include
"
aom_dsp
/
entcode
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
typedef
struct
od_ec_enc
od_ec_enc
;
#
define
OD_MEASURE_EC_OVERHEAD
(
0
)
struct
od_ec_enc
{
unsigned
char
*
buf
;
uint32_t
storage
;
uint32_t
end_offs
;
od_ec_window
end_window
;
int
nend_bits
;
uint16_t
*
precarry_buf
;
uint32_t
precarry_storage
;
uint32_t
offs
;
od_ec_window
low
;
uint16_t
rng
;
int16_t
cnt
;
int
error
;
#
if
OD_MEASURE_EC_OVERHEAD
double
entropy
;
int
nb_symbols
;
#
endif
}
;
void
od_ec_enc_init
(
od_ec_enc
*
enc
uint32_t
size
)
OD_ARG_NONNULL
(
1
)
;
void
od_ec_enc_reset
(
od_ec_enc
*
enc
)
OD_ARG_NONNULL
(
1
)
;
void
od_ec_enc_clear
(
od_ec_enc
*
enc
)
OD_ARG_NONNULL
(
1
)
;
void
od_ec_encode_bool_q15
(
od_ec_enc
*
enc
int
val
unsigned
f_q15
)
OD_ARG_NONNULL
(
1
)
;
void
od_ec_encode_cdf_q15
(
od_ec_enc
*
enc
int
s
const
uint16_t
*
cdf
int
nsyms
)
OD_ARG_NONNULL
(
1
)
OD_ARG_NONNULL
(
3
)
;
void
od_ec_enc_bits
(
od_ec_enc
*
enc
uint32_t
fl
unsigned
ftb
)
OD_ARG_NONNULL
(
1
)
;
void
od_ec_enc_patch_initial_bits
(
od_ec_enc
*
enc
unsigned
val
int
nbits
)
OD_ARG_NONNULL
(
1
)
;
OD_WARN_UNUSED_RESULT
unsigned
char
*
od_ec_enc_done
(
od_ec_enc
*
enc
uint32_t
*
nbytes
)
OD_ARG_NONNULL
(
1
)
OD_ARG_NONNULL
(
2
)
;
OD_WARN_UNUSED_RESULT
int
od_ec_enc_tell
(
const
od_ec_enc
*
enc
)
OD_ARG_NONNULL
(
1
)
;
OD_WARN_UNUSED_RESULT
uint32_t
od_ec_enc_tell_frac
(
const
od_ec_enc
*
enc
)
OD_ARG_NONNULL
(
1
)
;
void
od_ec_enc_checkpoint
(
od_ec_enc
*
dst
const
od_ec_enc
*
src
)
;
void
od_ec_enc_rollback
(
od_ec_enc
*
dst
const
od_ec_enc
*
src
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
