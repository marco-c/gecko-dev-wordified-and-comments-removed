#
ifndef
AOM_AOM_DSP_X86_LPF_COMMON_SSE2_H_
#
define
AOM_AOM_DSP_X86_LPF_COMMON_SSE2_H_
#
include
<
emmintrin
.
h
>
#
include
"
config
/
aom_config
.
h
"
static
INLINE
void
highbd_transpose6x6_sse2
(
__m128i
*
x0
__m128i
*
x1
__m128i
*
x2
__m128i
*
x3
__m128i
*
x4
__m128i
*
x5
__m128i
*
d0
__m128i
*
d1
__m128i
*
d2
__m128i
*
d3
__m128i
*
d4
__m128i
*
d5
)
{
__m128i
w0
w1
w2
w3
w4
w5
ww0
;
w0
=
_mm_unpacklo_epi16
(
*
x0
*
x1
)
;
w1
=
_mm_unpacklo_epi16
(
*
x2
*
x3
)
;
w2
=
_mm_unpacklo_epi16
(
*
x4
*
x5
)
;
ww0
=
_mm_unpacklo_epi32
(
w0
w1
)
;
*
d0
=
_mm_unpacklo_epi64
(
ww0
w2
)
;
*
d1
=
_mm_unpackhi_epi64
(
ww0
_mm_srli_si128
(
w2
4
)
)
;
ww0
=
_mm_unpackhi_epi32
(
w0
w1
)
;
*
d2
=
_mm_unpacklo_epi64
(
ww0
_mm_srli_si128
(
w2
8
)
)
;
w3
=
_mm_unpackhi_epi16
(
*
x0
*
x1
)
;
w4
=
_mm_unpackhi_epi16
(
*
x2
*
x3
)
;
w5
=
_mm_unpackhi_epi16
(
*
x4
*
x5
)
;
*
d3
=
_mm_unpackhi_epi64
(
ww0
_mm_srli_si128
(
w2
4
)
)
;
ww0
=
_mm_unpacklo_epi32
(
w3
w4
)
;
*
d4
=
_mm_unpacklo_epi64
(
ww0
w5
)
;
*
d5
=
_mm_unpackhi_epi64
(
ww0
_mm_slli_si128
(
w5
4
)
)
;
}
static
INLINE
void
highbd_transpose4x8_8x4_low_sse2
(
__m128i
*
x0
__m128i
*
x1
__m128i
*
x2
__m128i
*
x3
__m128i
*
d0
__m128i
*
d1
__m128i
*
d2
__m128i
*
d3
)
{
__m128i
zero
=
_mm_setzero_si128
(
)
;
__m128i
w0
w1
ww0
ww1
;
w0
=
_mm_unpacklo_epi16
(
*
x0
*
x1
)
;
w1
=
_mm_unpacklo_epi16
(
*
x2
*
x3
)
;
ww0
=
_mm_unpacklo_epi32
(
w0
w1
)
;
ww1
=
_mm_unpackhi_epi32
(
w0
w1
)
;
*
d0
=
_mm_unpacklo_epi64
(
ww0
zero
)
;
*
d1
=
_mm_unpackhi_epi64
(
ww0
zero
)
;
*
d2
=
_mm_unpacklo_epi64
(
ww1
zero
)
;
*
d3
=
_mm_unpackhi_epi64
(
ww1
zero
)
;
}
static
INLINE
void
highbd_transpose4x8_8x4_high_sse2
(
__m128i
*
x0
__m128i
*
x1
__m128i
*
x2
__m128i
*
x3
__m128i
*
d4
__m128i
*
d5
__m128i
*
d6
__m128i
*
d7
)
{
__m128i
w0
w1
ww2
ww3
;
__m128i
zero
=
_mm_setzero_si128
(
)
;
w0
=
_mm_unpackhi_epi16
(
*
x0
*
x1
)
;
w1
=
_mm_unpackhi_epi16
(
*
x2
*
x3
)
;
ww2
=
_mm_unpacklo_epi32
(
w0
w1
)
;
ww3
=
_mm_unpackhi_epi32
(
w0
w1
)
;
*
d4
=
_mm_unpacklo_epi64
(
ww2
zero
)
;
*
d5
=
_mm_unpackhi_epi64
(
ww2
zero
)
;
*
d6
=
_mm_unpacklo_epi64
(
ww3
zero
)
;
*
d7
=
_mm_unpackhi_epi64
(
ww3
zero
)
;
}
static
INLINE
void
highbd_transpose4x8_8x4_sse2
(
__m128i
*
x0
__m128i
*
x1
__m128i
*
x2
__m128i
*
x3
__m128i
*
d0
__m128i
*
d1
__m128i
*
d2
__m128i
*
d3
__m128i
*
d4
__m128i
*
d5
__m128i
*
d6
__m128i
*
d7
)
{
highbd_transpose4x8_8x4_low_sse2
(
x0
x1
x2
x3
d0
d1
d2
d3
)
;
highbd_transpose4x8_8x4_high_sse2
(
x0
x1
x2
x3
d4
d5
d6
d7
)
;
}
static
INLINE
void
highbd_transpose8x8_low_sse2
(
__m128i
*
x0
__m128i
*
x1
__m128i
*
x2
__m128i
*
x3
__m128i
*
x4
__m128i
*
x5
__m128i
*
x6
__m128i
*
x7
__m128i
*
d0
__m128i
*
d1
__m128i
*
d2
__m128i
*
d3
)
{
__m128i
w0
w1
w2
w3
ww0
ww1
;
w0
=
_mm_unpacklo_epi16
(
*
x0
*
x1
)
;
w1
=
_mm_unpacklo_epi16
(
*
x2
*
x3
)
;
w2
=
_mm_unpacklo_epi16
(
*
x4
*
x5
)
;
w3
=
_mm_unpacklo_epi16
(
*
x6
*
x7
)
;
ww0
=
_mm_unpacklo_epi32
(
w0
w1
)
;
ww1
=
_mm_unpacklo_epi32
(
w2
w3
)
;
*
d0
=
_mm_unpacklo_epi64
(
ww0
ww1
)
;
*
d1
=
_mm_unpackhi_epi64
(
ww0
ww1
)
;
ww0
=
_mm_unpackhi_epi32
(
w0
w1
)
;
ww1
=
_mm_unpackhi_epi32
(
w2
w3
)
;
*
d2
=
_mm_unpacklo_epi64
(
ww0
ww1
)
;
*
d3
=
_mm_unpackhi_epi64
(
ww0
ww1
)
;
}
static
INLINE
void
highbd_transpose8x8_high_sse2
(
__m128i
*
x0
__m128i
*
x1
__m128i
*
x2
__m128i
*
x3
__m128i
*
x4
__m128i
*
x5
__m128i
*
x6
__m128i
*
x7
__m128i
*
d4
__m128i
*
d5
__m128i
*
d6
__m128i
*
d7
)
{
__m128i
w0
w1
w2
w3
ww0
ww1
;
w0
=
_mm_unpackhi_epi16
(
*
x0
*
x1
)
;
w1
=
_mm_unpackhi_epi16
(
*
x2
*
x3
)
;
w2
=
_mm_unpackhi_epi16
(
*
x4
*
x5
)
;
w3
=
_mm_unpackhi_epi16
(
*
x6
*
x7
)
;
ww0
=
_mm_unpacklo_epi32
(
w0
w1
)
;
ww1
=
_mm_unpacklo_epi32
(
w2
w3
)
;
*
d4
=
_mm_unpacklo_epi64
(
ww0
ww1
)
;
*
d5
=
_mm_unpackhi_epi64
(
ww0
ww1
)
;
ww0
=
_mm_unpackhi_epi32
(
w0
w1
)
;
ww1
=
_mm_unpackhi_epi32
(
w2
w3
)
;
*
d6
=
_mm_unpacklo_epi64
(
ww0
ww1
)
;
*
d7
=
_mm_unpackhi_epi64
(
ww0
ww1
)
;
}
static
INLINE
void
highbd_transpose8x8_sse2
(
__m128i
*
x0
__m128i
*
x1
__m128i
*
x2
__m128i
*
x3
__m128i
*
x4
__m128i
*
x5
__m128i
*
x6
__m128i
*
x7
__m128i
*
d0
__m128i
*
d1
__m128i
*
d2
__m128i
*
d3
__m128i
*
d4
__m128i
*
d5
__m128i
*
d6
__m128i
*
d7
)
{
highbd_transpose8x8_low_sse2
(
x0
x1
x2
x3
x4
x5
x6
x7
d0
d1
d2
d3
)
;
highbd_transpose8x8_high_sse2
(
x0
x1
x2
x3
x4
x5
x6
x7
d4
d5
d6
d7
)
;
}
static
INLINE
void
highbd_transpose8x16_sse2
(
__m128i
*
x0
__m128i
*
x1
__m128i
*
x2
__m128i
*
x3
__m128i
*
x4
__m128i
*
x5
__m128i
*
x6
__m128i
*
x7
__m128i
*
d0
__m128i
*
d1
__m128i
*
d2
__m128i
*
d3
__m128i
*
d4
__m128i
*
d5
__m128i
*
d6
__m128i
*
d7
)
{
highbd_transpose8x8_sse2
(
x0
x1
x2
x3
x4
x5
x6
x7
d0
d1
d2
d3
d4
d5
d6
d7
)
;
highbd_transpose8x8_sse2
(
x0
+
1
x1
+
1
x2
+
1
x3
+
1
x4
+
1
x5
+
1
x6
+
1
x7
+
1
d0
+
1
d1
+
1
d2
+
1
d3
+
1
d4
+
1
d5
+
1
d6
+
1
d7
+
1
)
;
}
#
endif
