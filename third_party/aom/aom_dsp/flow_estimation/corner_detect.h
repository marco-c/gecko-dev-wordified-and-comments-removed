#
ifndef
AOM_AOM_DSP_FLOW_ESTIMATION_CORNER_DETECT_H_
#
define
AOM_AOM_DSP_FLOW_ESTIMATION_CORNER_DETECT_H_
#
include
<
stdio
.
h
>
#
include
<
stdlib
.
h
>
#
include
<
stdbool
.
h
>
#
include
<
memory
.
h
>
#
include
"
aom_dsp
/
pyramid
.
h
"
#
include
"
aom_util
/
aom_pthread
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
#
define
MAX_CORNERS
4096
typedef
struct
corner_list
{
#
if
CONFIG_MULTITHREAD
pthread_mutex_t
mutex
;
#
endif
bool
valid
;
int
num_corners
;
int
corners
[
2
*
MAX_CORNERS
]
;
}
CornerList
;
size_t
av1_get_corner_list_size
(
void
)
;
CornerList
*
av1_alloc_corner_list
(
void
)
;
bool
av1_compute_corner_list
(
const
YV12_BUFFER_CONFIG
*
frame
int
bit_depth
int
downsample_level
CornerList
*
corners
)
;
#
ifndef
NDEBUG
bool
aom_is_corner_list_valid
(
CornerList
*
corners
)
;
#
endif
void
av1_invalidate_corner_list
(
CornerList
*
corners
)
;
void
av1_free_corner_list
(
CornerList
*
corners
)
;
#
ifdef
__cplusplus
}
#
endif
#
endif
