#
ifndef
AOM_AOM_DSP_RECENTER_H_
#
define
AOM_AOM_DSP_RECENTER_H_
#
include
"
config
/
aom_config
.
h
"
#
include
"
aom
/
aom_integer
.
h
"
static
inline
uint16_t
inv_recenter_nonneg
(
uint16_t
r
uint16_t
v
)
{
if
(
v
>
(
r
<
<
1
)
)
return
v
;
else
if
(
(
v
&
1
)
=
=
0
)
return
(
v
>
>
1
)
+
r
;
else
return
r
-
(
(
v
+
1
)
>
>
1
)
;
}
static
inline
uint16_t
inv_recenter_finite_nonneg
(
uint16_t
n
uint16_t
r
uint16_t
v
)
{
if
(
(
r
<
<
1
)
<
=
n
)
{
return
inv_recenter_nonneg
(
r
v
)
;
}
else
{
return
n
-
1
-
inv_recenter_nonneg
(
n
-
1
-
r
v
)
;
}
}
static
inline
uint16_t
recenter_nonneg
(
uint16_t
r
uint16_t
v
)
{
if
(
v
>
(
r
<
<
1
)
)
return
v
;
else
if
(
v
>
=
r
)
return
(
(
v
-
r
)
<
<
1
)
;
else
return
(
(
r
-
v
)
<
<
1
)
-
1
;
}
static
inline
uint16_t
recenter_finite_nonneg
(
uint16_t
n
uint16_t
r
uint16_t
v
)
{
if
(
(
r
<
<
1
)
<
=
n
)
{
return
recenter_nonneg
(
r
v
)
;
}
else
{
return
recenter_nonneg
(
n
-
1
-
r
n
-
1
-
v
)
;
}
}
#
endif
