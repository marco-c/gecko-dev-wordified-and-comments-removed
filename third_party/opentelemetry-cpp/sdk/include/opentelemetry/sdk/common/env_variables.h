#
pragma
once
#
include
<
chrono
>
#
include
<
cstdint
>
#
include
<
string
>
#
include
"
opentelemetry
/
version
.
h
"
OPENTELEMETRY_BEGIN_NAMESPACE
namespace
sdk
{
namespace
common
{
bool
GetBoolEnvironmentVariable
(
const
char
*
env_var_name
bool
&
value
)
;
bool
GetDurationEnvironmentVariable
(
const
char
*
env_var_name
std
:
:
chrono
:
:
system_clock
:
:
duration
&
value
)
;
bool
GetStringEnvironmentVariable
(
const
char
*
env_var_name
std
:
:
string
&
value
)
;
bool
GetUintEnvironmentVariable
(
const
char
*
env_var_name
std
:
:
uint32_t
&
value
)
;
bool
GetFloatEnvironmentVariable
(
const
char
*
env_var_name
float
&
value
)
;
#
if
defined
(
_MSC_VER
)
inline
int
setenv
(
const
char
*
name
const
char
*
value
int
)
{
return
_putenv_s
(
name
value
)
;
}
inline
int
unsetenv
(
const
char
*
name
)
{
return
setenv
(
name
"
"
1
)
;
}
#
endif
}
}
OPENTELEMETRY_END_NAMESPACE
