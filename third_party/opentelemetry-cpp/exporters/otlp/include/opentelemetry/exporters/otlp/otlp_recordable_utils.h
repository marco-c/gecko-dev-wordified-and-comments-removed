#
pragma
once
#
include
<
memory
>
#
include
"
opentelemetry
/
nostd
/
span
.
h
"
#
include
"
opentelemetry
/
sdk
/
trace
/
recordable
.
h
"
#
include
"
opentelemetry
/
version
.
h
"
namespace
opentelemetry
{
namespace
proto
{
namespace
collector
{
namespace
logs
{
namespace
v1
{
class
ExportLogsServiceRequest
;
}
}
namespace
trace
{
namespace
v1
{
class
ExportTraceServiceRequest
;
}
}
}
}
}
OPENTELEMETRY_BEGIN_NAMESPACE
namespace
exporter
{
namespace
otlp
{
class
OtlpRecordableUtils
{
public
:
static
void
PopulateRequest
(
const
nostd
:
:
span
<
std
:
:
unique_ptr
<
opentelemetry
:
:
sdk
:
:
trace
:
:
Recordable
>
>
&
spans
proto
:
:
collector
:
:
trace
:
:
v1
:
:
ExportTraceServiceRequest
*
request
)
noexcept
;
}
;
}
}
OPENTELEMETRY_END_NAMESPACE
