#
ifdef
OPENTELEMETRY_NO_DEPRECATED_CODE
#
error
"
header
<
trace
/
semantic_conventions
.
h
>
is
deprecated
.
"
#
endif
#
pragma
once
#
include
"
opentelemetry
/
common
/
macros
.
h
"
#
include
"
opentelemetry
/
version
.
h
"
OPENTELEMETRY_BEGIN_NAMESPACE
namespace
trace
{
namespace
SemanticConventions
{
static
constexpr
const
char
*
kSchemaUrl
=
"
https
:
/
/
opentelemetry
.
io
/
schemas
/
1
.
27
.
0
"
;
static
constexpr
const
char
*
kAndroidOsApiLevel
=
"
android
.
os
.
api_level
"
;
static
constexpr
const
char
*
kArtifactAttestationFilename
=
"
artifact
.
attestation
.
filename
"
;
static
constexpr
const
char
*
kArtifactAttestationHash
=
"
artifact
.
attestation
.
hash
"
;
static
constexpr
const
char
*
kArtifactAttestationId
=
"
artifact
.
attestation
.
id
"
;
static
constexpr
const
char
*
kArtifactFilename
=
"
artifact
.
filename
"
;
static
constexpr
const
char
*
kArtifactHash
=
"
artifact
.
hash
"
;
static
constexpr
const
char
*
kArtifactPurl
=
"
artifact
.
purl
"
;
static
constexpr
const
char
*
kArtifactVersion
=
"
artifact
.
version
"
;
static
constexpr
const
char
*
kAspnetcoreRateLimitingResult
=
"
aspnetcore
.
rate_limiting
.
result
"
;
static
constexpr
const
char
*
kAspnetcoreDiagnosticsHandlerType
=
"
aspnetcore
.
diagnostics
.
handler
.
type
"
;
static
constexpr
const
char
*
kAspnetcoreDiagnosticsExceptionResult
=
"
aspnetcore
.
diagnostics
.
exception
.
result
"
;
static
constexpr
const
char
*
kAspnetcoreRateLimitingPolicy
=
"
aspnetcore
.
rate_limiting
.
policy
"
;
static
constexpr
const
char
*
kAspnetcoreRequestIsUnhandled
=
"
aspnetcore
.
request
.
is_unhandled
"
;
static
constexpr
const
char
*
kAspnetcoreRoutingIsFallback
=
"
aspnetcore
.
routing
.
is_fallback
"
;
static
constexpr
const
char
*
kAspnetcoreRoutingMatchStatus
=
"
aspnetcore
.
routing
.
match_status
"
;
static
constexpr
const
char
*
kAwsRequestId
=
"
aws
.
request_id
"
;
static
constexpr
const
char
*
kAwsDynamodbAttributeDefinitions
=
"
aws
.
dynamodb
.
attribute_definitions
"
;
static
constexpr
const
char
*
kAwsDynamodbAttributesToGet
=
"
aws
.
dynamodb
.
attributes_to_get
"
;
static
constexpr
const
char
*
kAwsDynamodbConsistentRead
=
"
aws
.
dynamodb
.
consistent_read
"
;
static
constexpr
const
char
*
kAwsDynamodbConsumedCapacity
=
"
aws
.
dynamodb
.
consumed_capacity
"
;
static
constexpr
const
char
*
kAwsDynamodbCount
=
"
aws
.
dynamodb
.
count
"
;
static
constexpr
const
char
*
kAwsDynamodbExclusiveStartTable
=
"
aws
.
dynamodb
.
exclusive_start_table
"
;
static
constexpr
const
char
*
kAwsDynamodbGlobalSecondaryIndexUpdates
=
"
aws
.
dynamodb
.
global_secondary_index_updates
"
;
static
constexpr
const
char
*
kAwsDynamodbGlobalSecondaryIndexes
=
"
aws
.
dynamodb
.
global_secondary_indexes
"
;
static
constexpr
const
char
*
kAwsDynamodbIndexName
=
"
aws
.
dynamodb
.
index_name
"
;
static
constexpr
const
char
*
kAwsDynamodbItemCollectionMetrics
=
"
aws
.
dynamodb
.
item_collection_metrics
"
;
static
constexpr
const
char
*
kAwsDynamodbLimit
=
"
aws
.
dynamodb
.
limit
"
;
static
constexpr
const
char
*
kAwsDynamodbLocalSecondaryIndexes
=
"
aws
.
dynamodb
.
local_secondary_indexes
"
;
static
constexpr
const
char
*
kAwsDynamodbProjection
=
"
aws
.
dynamodb
.
projection
"
;
static
constexpr
const
char
*
kAwsDynamodbProvisionedReadCapacity
=
"
aws
.
dynamodb
.
provisioned_read_capacity
"
;
static
constexpr
const
char
*
kAwsDynamodbProvisionedWriteCapacity
=
"
aws
.
dynamodb
.
provisioned_write_capacity
"
;
static
constexpr
const
char
*
kAwsDynamodbScanForward
=
"
aws
.
dynamodb
.
scan_forward
"
;
static
constexpr
const
char
*
kAwsDynamodbScannedCount
=
"
aws
.
dynamodb
.
scanned_count
"
;
static
constexpr
const
char
*
kAwsDynamodbSegment
=
"
aws
.
dynamodb
.
segment
"
;
static
constexpr
const
char
*
kAwsDynamodbSelect
=
"
aws
.
dynamodb
.
select
"
;
static
constexpr
const
char
*
kAwsDynamodbTableCount
=
"
aws
.
dynamodb
.
table_count
"
;
static
constexpr
const
char
*
kAwsDynamodbTableNames
=
"
aws
.
dynamodb
.
table_names
"
;
static
constexpr
const
char
*
kAwsDynamodbTotalSegments
=
"
aws
.
dynamodb
.
total_segments
"
;
static
constexpr
const
char
*
kAwsEcsTaskId
=
"
aws
.
ecs
.
task
.
id
"
;
static
constexpr
const
char
*
kAwsEcsClusterArn
=
"
aws
.
ecs
.
cluster
.
arn
"
;
static
constexpr
const
char
*
kAwsEcsContainerArn
=
"
aws
.
ecs
.
container
.
arn
"
;
static
constexpr
const
char
*
kAwsEcsLaunchtype
=
"
aws
.
ecs
.
launchtype
"
;
static
constexpr
const
char
*
kAwsEcsTaskArn
=
"
aws
.
ecs
.
task
.
arn
"
;
static
constexpr
const
char
*
kAwsEcsTaskFamily
=
"
aws
.
ecs
.
task
.
family
"
;
static
constexpr
const
char
*
kAwsEcsTaskRevision
=
"
aws
.
ecs
.
task
.
revision
"
;
static
constexpr
const
char
*
kAwsEksClusterArn
=
"
aws
.
eks
.
cluster
.
arn
"
;
static
constexpr
const
char
*
kAwsLogGroupArns
=
"
aws
.
log
.
group
.
arns
"
;
static
constexpr
const
char
*
kAwsLogGroupNames
=
"
aws
.
log
.
group
.
names
"
;
static
constexpr
const
char
*
kAwsLogStreamArns
=
"
aws
.
log
.
stream
.
arns
"
;
static
constexpr
const
char
*
kAwsLogStreamNames
=
"
aws
.
log
.
stream
.
names
"
;
static
constexpr
const
char
*
kAwsLambdaInvokedArn
=
"
aws
.
lambda
.
invoked_arn
"
;
static
constexpr
const
char
*
kAwsS3Bucket
=
"
aws
.
s3
.
bucket
"
;
static
constexpr
const
char
*
kAwsS3CopySource
=
"
aws
.
s3
.
copy_source
"
;
static
constexpr
const
char
*
kAwsS3Delete
=
"
aws
.
s3
.
delete
"
;
static
constexpr
const
char
*
kAwsS3Key
=
"
aws
.
s3
.
key
"
;
static
constexpr
const
char
*
kAwsS3PartNumber
=
"
aws
.
s3
.
part_number
"
;
static
constexpr
const
char
*
kAwsS3UploadId
=
"
aws
.
s3
.
upload_id
"
;
static
constexpr
const
char
*
kAzServiceRequestId
=
"
az
.
service_request_id
"
;
static
constexpr
const
char
*
kBrowserBrands
=
"
browser
.
brands
"
;
static
constexpr
const
char
*
kBrowserLanguage
=
"
browser
.
language
"
;
static
constexpr
const
char
*
kBrowserMobile
=
"
browser
.
mobile
"
;
static
constexpr
const
char
*
kBrowserPlatform
=
"
browser
.
platform
"
;
static
constexpr
const
char
*
kCicdPipelineName
=
"
cicd
.
pipeline
.
name
"
;
static
constexpr
const
char
*
kCicdPipelineRunId
=
"
cicd
.
pipeline
.
run
.
id
"
;
static
constexpr
const
char
*
kCicdPipelineTaskName
=
"
cicd
.
pipeline
.
task
.
name
"
;
static
constexpr
const
char
*
kCicdPipelineTaskRunId
=
"
cicd
.
pipeline
.
task
.
run
.
id
"
;
static
constexpr
const
char
*
kCicdPipelineTaskRunUrlFull
=
"
cicd
.
pipeline
.
task
.
run
.
url
.
full
"
;
static
constexpr
const
char
*
kCicdPipelineTaskType
=
"
cicd
.
pipeline
.
task
.
type
"
;
static
constexpr
const
char
*
kClientAddress
=
"
client
.
address
"
;
static
constexpr
const
char
*
kClientPort
=
"
client
.
port
"
;
static
constexpr
const
char
*
kCloudAccountId
=
"
cloud
.
account
.
id
"
;
static
constexpr
const
char
*
kCloudAvailabilityZone
=
"
cloud
.
availability_zone
"
;
static
constexpr
const
char
*
kCloudPlatform
=
"
cloud
.
platform
"
;
static
constexpr
const
char
*
kCloudProvider
=
"
cloud
.
provider
"
;
static
constexpr
const
char
*
kCloudRegion
=
"
cloud
.
region
"
;
static
constexpr
const
char
*
kCloudResourceId
=
"
cloud
.
resource_id
"
;
static
constexpr
const
char
*
kCloudeventsEventId
=
"
cloudevents
.
event_id
"
;
static
constexpr
const
char
*
kCloudeventsEventSource
=
"
cloudevents
.
event_source
"
;
static
constexpr
const
char
*
kCloudeventsEventSpecVersion
=
"
cloudevents
.
event_spec_version
"
;
static
constexpr
const
char
*
kCloudeventsEventSubject
=
"
cloudevents
.
event_subject
"
;
static
constexpr
const
char
*
kCloudeventsEventType
=
"
cloudevents
.
event_type
"
;
static
constexpr
const
char
*
kCodeColumn
=
"
code
.
column
"
;
static
constexpr
const
char
*
kCodeFilepath
=
"
code
.
filepath
"
;
static
constexpr
const
char
*
kCodeFunction
=
"
code
.
function
"
;
static
constexpr
const
char
*
kCodeLineno
=
"
code
.
lineno
"
;
static
constexpr
const
char
*
kCodeNamespace
=
"
code
.
namespace
"
;
static
constexpr
const
char
*
kCodeStacktrace
=
"
code
.
stacktrace
"
;
static
constexpr
const
char
*
kContainerCommand
=
"
container
.
command
"
;
static
constexpr
const
char
*
kContainerCommandArgs
=
"
container
.
command_args
"
;
static
constexpr
const
char
*
kContainerCommandLine
=
"
container
.
command_line
"
;
static
constexpr
const
char
*
kContainerId
=
"
container
.
id
"
;
static
constexpr
const
char
*
kContainerImageId
=
"
container
.
image
.
id
"
;
static
constexpr
const
char
*
kContainerImageName
=
"
container
.
image
.
name
"
;
static
constexpr
const
char
*
kContainerImageRepoDigests
=
"
container
.
image
.
repo_digests
"
;
static
constexpr
const
char
*
kContainerImageTags
=
"
container
.
image
.
tags
"
;
static
constexpr
const
char
*
kContainerName
=
"
container
.
name
"
;
static
constexpr
const
char
*
kContainerRuntime
=
"
container
.
runtime
"
;
static
constexpr
const
char
*
kCpuMode
=
"
cpu
.
mode
"
;
static
constexpr
const
char
*
kDbClientConnectionPoolName
=
"
db
.
client
.
connection
.
pool
.
name
"
;
static
constexpr
const
char
*
kDbClientConnectionState
=
"
db
.
client
.
connection
.
state
"
;
static
constexpr
const
char
*
kDbCollectionName
=
"
db
.
collection
.
name
"
;
static
constexpr
const
char
*
kDbNamespace
=
"
db
.
namespace
"
;
static
constexpr
const
char
*
kDbOperationBatchSize
=
"
db
.
operation
.
batch
.
size
"
;
static
constexpr
const
char
*
kDbOperationName
=
"
db
.
operation
.
name
"
;
static
constexpr
const
char
*
kDbQueryText
=
"
db
.
query
.
text
"
;
static
constexpr
const
char
*
kDbSystem
=
"
db
.
system
"
;
static
constexpr
const
char
*
kDbCassandraConsistencyLevel
=
"
db
.
cassandra
.
consistency_level
"
;
static
constexpr
const
char
*
kDbCassandraCoordinatorDc
=
"
db
.
cassandra
.
coordinator
.
dc
"
;
static
constexpr
const
char
*
kDbCassandraCoordinatorId
=
"
db
.
cassandra
.
coordinator
.
id
"
;
static
constexpr
const
char
*
kDbCassandraIdempotence
=
"
db
.
cassandra
.
idempotence
"
;
static
constexpr
const
char
*
kDbCassandraPageSize
=
"
db
.
cassandra
.
page_size
"
;
static
constexpr
const
char
*
kDbCassandraSpeculativeExecutionCount
=
"
db
.
cassandra
.
speculative_execution_count
"
;
static
constexpr
const
char
*
kDbCosmosdbClientId
=
"
db
.
cosmosdb
.
client_id
"
;
static
constexpr
const
char
*
kDbCosmosdbConnectionMode
=
"
db
.
cosmosdb
.
connection_mode
"
;
static
constexpr
const
char
*
kDbCosmosdbOperationType
=
"
db
.
cosmosdb
.
operation_type
"
;
static
constexpr
const
char
*
kDbCosmosdbRequestCharge
=
"
db
.
cosmosdb
.
request_charge
"
;
static
constexpr
const
char
*
kDbCosmosdbRequestContentLength
=
"
db
.
cosmosdb
.
request_content_length
"
;
static
constexpr
const
char
*
kDbCosmosdbStatusCode
=
"
db
.
cosmosdb
.
status_code
"
;
static
constexpr
const
char
*
kDbCosmosdbSubStatusCode
=
"
db
.
cosmosdb
.
sub_status_code
"
;
static
constexpr
const
char
*
kDbElasticsearchNodeName
=
"
db
.
elasticsearch
.
node
.
name
"
;
static
constexpr
const
char
*
kDeploymentEnvironmentName
=
"
deployment
.
environment
.
name
"
;
static
constexpr
const
char
*
kDeploymentId
=
"
deployment
.
id
"
;
static
constexpr
const
char
*
kDeploymentName
=
"
deployment
.
name
"
;
static
constexpr
const
char
*
kDeploymentStatus
=
"
deployment
.
status
"
;
static
constexpr
const
char
*
kAndroidState
=
"
android
.
state
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kContainerCpuState
=
"
container
.
cpu
.
state
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbCassandraTable
=
"
db
.
cassandra
.
table
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbConnectionString
=
"
db
.
connection_string
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbCosmosdbContainer
=
"
db
.
cosmosdb
.
container
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbElasticsearchClusterName
=
"
db
.
elasticsearch
.
cluster
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbInstanceId
=
"
db
.
instance
.
id
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbJdbcDriverClassname
=
"
db
.
jdbc
.
driver_classname
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbMongodbCollection
=
"
db
.
mongodb
.
collection
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbMssqlInstanceName
=
"
db
.
mssql
.
instance_name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbName
=
"
db
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbOperation
=
"
db
.
operation
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbRedisDatabaseIndex
=
"
db
.
redis
.
database_index
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbSqlTable
=
"
db
.
sql
.
table
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbStatement
=
"
db
.
statement
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbUser
=
"
db
.
user
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbClientConnectionsPoolName
=
"
db
.
client
.
connections
.
pool
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDbClientConnectionsState
=
"
db
.
client
.
connections
.
state
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kPoolName
=
"
pool
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kState
=
"
state
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kDeploymentEnvironment
=
"
deployment
.
environment
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kEnduserId
=
"
enduser
.
id
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kEnduserRole
=
"
enduser
.
role
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kEnduserScope
=
"
enduser
.
scope
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kGenAiUsageCompletionTokens
=
"
gen_ai
.
usage
.
completion_tokens
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kGenAiUsagePromptTokens
=
"
gen_ai
.
usage
.
prompt_tokens
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpClientIp
=
"
http
.
client_ip
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpFlavor
=
"
http
.
flavor
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpHost
=
"
http
.
host
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpMethod
=
"
http
.
method
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpRequestContentLength
=
"
http
.
request_content_length
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpRequestContentLengthUncompressed
=
"
http
.
request_content_length_uncompressed
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpResponseContentLength
=
"
http
.
response_content_length
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpResponseContentLengthUncompressed
=
"
http
.
response_content_length_uncompressed
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpScheme
=
"
http
.
scheme
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpServerName
=
"
http
.
server_name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpStatusCode
=
"
http
.
status_code
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpTarget
=
"
http
.
target
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpUrl
=
"
http
.
url
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kHttpUserAgent
=
"
http
.
user_agent
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kIosState
=
"
ios
.
state
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessagingDestinationPublishAnonymous
=
"
messaging
.
destination_publish
.
anonymous
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessagingDestinationPublishName
=
"
messaging
.
destination_publish
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessagingEventhubsConsumerGroup
=
"
messaging
.
eventhubs
.
consumer
.
group
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessagingKafkaConsumerGroup
=
"
messaging
.
kafka
.
consumer
.
group
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessagingKafkaDestinationPartition
=
"
messaging
.
kafka
.
destination
.
partition
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessagingKafkaMessageOffset
=
"
messaging
.
kafka
.
message
.
offset
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessagingOperation
=
"
messaging
.
operation
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessagingRocketmqClientGroup
=
"
messaging
.
rocketmq
.
client_group
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessagingServicebusDestinationSubscriptionName
=
"
messaging
.
servicebus
.
destination
.
subscription_name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetHostIp
=
"
net
.
host
.
ip
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetHostName
=
"
net
.
host
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetHostPort
=
"
net
.
host
.
port
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetPeerIp
=
"
net
.
peer
.
ip
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetPeerName
=
"
net
.
peer
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetPeerPort
=
"
net
.
peer
.
port
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetProtocolName
=
"
net
.
protocol
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetProtocolVersion
=
"
net
.
protocol
.
version
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetSockFamily
=
"
net
.
sock
.
family
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetSockHostAddr
=
"
net
.
sock
.
host
.
addr
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetSockHostPort
=
"
net
.
sock
.
host
.
port
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetSockPeerAddr
=
"
net
.
sock
.
peer
.
addr
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetSockPeerName
=
"
net
.
sock
.
peer
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetSockPeerPort
=
"
net
.
sock
.
peer
.
port
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kNetTransport
=
"
net
.
transport
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kOtelLibraryName
=
"
otel
.
library
.
name
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kOtelLibraryVersion
=
"
otel
.
library
.
version
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kProcessCpuState
=
"
process
.
cpu
.
state
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessageCompressedSize
=
"
message
.
compressed_size
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessageId
=
"
message
.
id
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessageType
=
"
message
.
type
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kMessageUncompressedSize
=
"
message
.
uncompressed_size
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kSystemCpuState
=
"
system
.
cpu
.
state
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kSystemProcessesStatus
=
"
system
.
processes
.
status
"
;
OPENTELEMETRY_DEPRECATED
static
constexpr
const
char
*
kTlsClientServerName
=
"
tls
.
client
.
server_name
"
;
static
constexpr
const
char
*
kDestinationAddress
=
"
destination
.
address
"
;
static
constexpr
const
char
*
kDestinationPort
=
"
destination
.
port
"
;
static
constexpr
const
char
*
kDeviceId
=
"
device
.
id
"
;
static
constexpr
const
char
*
kDeviceManufacturer
=
"
device
.
manufacturer
"
;
static
constexpr
const
char
*
kDeviceModelIdentifier
=
"
device
.
model
.
identifier
"
;
static
constexpr
const
char
*
kDeviceModelName
=
"
device
.
model
.
name
"
;
static
constexpr
const
char
*
kDiskIoDirection
=
"
disk
.
io
.
direction
"
;
static
constexpr
const
char
*
kDnsQuestionName
=
"
dns
.
question
.
name
"
;
static
constexpr
const
char
*
kErrorType
=
"
error
.
type
"
;
static
constexpr
const
char
*
kEventName
=
"
event
.
name
"
;
static
constexpr
const
char
*
kExceptionEscaped
=
"
exception
.
escaped
"
;
static
constexpr
const
char
*
kExceptionMessage
=
"
exception
.
message
"
;
static
constexpr
const
char
*
kExceptionStacktrace
=
"
exception
.
stacktrace
"
;
static
constexpr
const
char
*
kExceptionType
=
"
exception
.
type
"
;
static
constexpr
const
char
*
kFaasColdstart
=
"
faas
.
coldstart
"
;
static
constexpr
const
char
*
kFaasCron
=
"
faas
.
cron
"
;
static
constexpr
const
char
*
kFaasDocumentCollection
=
"
faas
.
document
.
collection
"
;
static
constexpr
const
char
*
kFaasDocumentName
=
"
faas
.
document
.
name
"
;
static
constexpr
const
char
*
kFaasDocumentOperation
=
"
faas
.
document
.
operation
"
;
static
constexpr
const
char
*
kFaasDocumentTime
=
"
faas
.
document
.
time
"
;
static
constexpr
const
char
*
kFaasInstance
=
"
faas
.
instance
"
;
static
constexpr
const
char
*
kFaasInvocationId
=
"
faas
.
invocation_id
"
;
static
constexpr
const
char
*
kFaasInvokedName
=
"
faas
.
invoked_name
"
;
static
constexpr
const
char
*
kFaasInvokedProvider
=
"
faas
.
invoked_provider
"
;
static
constexpr
const
char
*
kFaasInvokedRegion
=
"
faas
.
invoked_region
"
;
static
constexpr
const
char
*
kFaasMaxMemory
=
"
faas
.
max_memory
"
;
static
constexpr
const
char
*
kFaasName
=
"
faas
.
name
"
;
static
constexpr
const
char
*
kFaasTime
=
"
faas
.
time
"
;
static
constexpr
const
char
*
kFaasTrigger
=
"
faas
.
trigger
"
;
static
constexpr
const
char
*
kFaasVersion
=
"
faas
.
version
"
;
static
constexpr
const
char
*
kFeatureFlagKey
=
"
feature_flag
.
key
"
;
static
constexpr
const
char
*
kFeatureFlagProviderName
=
"
feature_flag
.
provider_name
"
;
static
constexpr
const
char
*
kFeatureFlagVariant
=
"
feature_flag
.
variant
"
;
static
constexpr
const
char
*
kFileDirectory
=
"
file
.
directory
"
;
static
constexpr
const
char
*
kFileExtension
=
"
file
.
extension
"
;
static
constexpr
const
char
*
kFileName
=
"
file
.
name
"
;
static
constexpr
const
char
*
kFilePath
=
"
file
.
path
"
;
static
constexpr
const
char
*
kFileSize
=
"
file
.
size
"
;
static
constexpr
const
char
*
kGcpClientService
=
"
gcp
.
client
.
service
"
;
static
constexpr
const
char
*
kGcpCloudRunJobExecution
=
"
gcp
.
cloud_run
.
job
.
execution
"
;
static
constexpr
const
char
*
kGcpCloudRunJobTaskIndex
=
"
gcp
.
cloud_run
.
job
.
task_index
"
;
static
constexpr
const
char
*
kGcpGceInstanceHostname
=
"
gcp
.
gce
.
instance
.
hostname
"
;
static
constexpr
const
char
*
kGcpGceInstanceName
=
"
gcp
.
gce
.
instance
.
name
"
;
static
constexpr
const
char
*
kGenAiCompletion
=
"
gen_ai
.
completion
"
;
static
constexpr
const
char
*
kGenAiOperationName
=
"
gen_ai
.
operation
.
name
"
;
static
constexpr
const
char
*
kGenAiPrompt
=
"
gen_ai
.
prompt
"
;
static
constexpr
const
char
*
kGenAiRequestFrequencyPenalty
=
"
gen_ai
.
request
.
frequency_penalty
"
;
static
constexpr
const
char
*
kGenAiRequestMaxTokens
=
"
gen_ai
.
request
.
max_tokens
"
;
static
constexpr
const
char
*
kGenAiRequestModel
=
"
gen_ai
.
request
.
model
"
;
static
constexpr
const
char
*
kGenAiRequestPresencePenalty
=
"
gen_ai
.
request
.
presence_penalty
"
;
static
constexpr
const
char
*
kGenAiRequestStopSequences
=
"
gen_ai
.
request
.
stop_sequences
"
;
static
constexpr
const
char
*
kGenAiRequestTemperature
=
"
gen_ai
.
request
.
temperature
"
;
static
constexpr
const
char
*
kGenAiRequestTopK
=
"
gen_ai
.
request
.
top_k
"
;
static
constexpr
const
char
*
kGenAiRequestTopP
=
"
gen_ai
.
request
.
top_p
"
;
static
constexpr
const
char
*
kGenAiResponseFinishReasons
=
"
gen_ai
.
response
.
finish_reasons
"
;
static
constexpr
const
char
*
kGenAiResponseId
=
"
gen_ai
.
response
.
id
"
;
static
constexpr
const
char
*
kGenAiResponseModel
=
"
gen_ai
.
response
.
model
"
;
static
constexpr
const
char
*
kGenAiSystem
=
"
gen_ai
.
system
"
;
static
constexpr
const
char
*
kGenAiTokenType
=
"
gen_ai
.
token
.
type
"
;
static
constexpr
const
char
*
kGenAiUsageInputTokens
=
"
gen_ai
.
usage
.
input_tokens
"
;
static
constexpr
const
char
*
kGenAiUsageOutputTokens
=
"
gen_ai
.
usage
.
output_tokens
"
;
static
constexpr
const
char
*
kGoMemoryType
=
"
go
.
memory
.
type
"
;
static
constexpr
const
char
*
kGraphqlDocument
=
"
graphql
.
document
"
;
static
constexpr
const
char
*
kGraphqlOperationName
=
"
graphql
.
operation
.
name
"
;
static
constexpr
const
char
*
kGraphqlOperationType
=
"
graphql
.
operation
.
type
"
;
static
constexpr
const
char
*
kHerokuAppId
=
"
heroku
.
app
.
id
"
;
static
constexpr
const
char
*
kHerokuReleaseCommit
=
"
heroku
.
release
.
commit
"
;
static
constexpr
const
char
*
kHerokuReleaseCreationTimestamp
=
"
heroku
.
release
.
creation_timestamp
"
;
static
constexpr
const
char
*
kHostArch
=
"
host
.
arch
"
;
static
constexpr
const
char
*
kHostCpuCacheL2Size
=
"
host
.
cpu
.
cache
.
l2
.
size
"
;
static
constexpr
const
char
*
kHostCpuFamily
=
"
host
.
cpu
.
family
"
;
static
constexpr
const
char
*
kHostCpuModelId
=
"
host
.
cpu
.
model
.
id
"
;
static
constexpr
const
char
*
kHostCpuModelName
=
"
host
.
cpu
.
model
.
name
"
;
static
constexpr
const
char
*
kHostCpuStepping
=
"
host
.
cpu
.
stepping
"
;
static
constexpr
const
char
*
kHostCpuVendorId
=
"
host
.
cpu
.
vendor
.
id
"
;
static
constexpr
const
char
*
kHostId
=
"
host
.
id
"
;
static
constexpr
const
char
*
kHostImageId
=
"
host
.
image
.
id
"
;
static
constexpr
const
char
*
kHostImageName
=
"
host
.
image
.
name
"
;
static
constexpr
const
char
*
kHostImageVersion
=
"
host
.
image
.
version
"
;
static
constexpr
const
char
*
kHostIp
=
"
host
.
ip
"
;
static
constexpr
const
char
*
kHostMac
=
"
host
.
mac
"
;
static
constexpr
const
char
*
kHostName
=
"
host
.
name
"
;
static
constexpr
const
char
*
kHostType
=
"
host
.
type
"
;
static
constexpr
const
char
*
kHttpConnectionState
=
"
http
.
connection
.
state
"
;
static
constexpr
const
char
*
kHttpRequestBodySize
=
"
http
.
request
.
body
.
size
"
;
static
constexpr
const
char
*
kHttpRequestMethod
=
"
http
.
request
.
method
"
;
static
constexpr
const
char
*
kHttpRequestMethodOriginal
=
"
http
.
request
.
method_original
"
;
static
constexpr
const
char
*
kHttpRequestResendCount
=
"
http
.
request
.
resend_count
"
;
static
constexpr
const
char
*
kHttpRequestSize
=
"
http
.
request
.
size
"
;
static
constexpr
const
char
*
kHttpResponseBodySize
=
"
http
.
response
.
body
.
size
"
;
static
constexpr
const
char
*
kHttpResponseSize
=
"
http
.
response
.
size
"
;
static
constexpr
const
char
*
kHttpResponseStatusCode
=
"
http
.
response
.
status_code
"
;
static
constexpr
const
char
*
kHttpRoute
=
"
http
.
route
"
;
static
constexpr
const
char
*
kJvmBufferPoolName
=
"
jvm
.
buffer
.
pool
.
name
"
;
static
constexpr
const
char
*
kJvmGcAction
=
"
jvm
.
gc
.
action
"
;
static
constexpr
const
char
*
kJvmGcName
=
"
jvm
.
gc
.
name
"
;
static
constexpr
const
char
*
kJvmMemoryPoolName
=
"
jvm
.
memory
.
pool
.
name
"
;
static
constexpr
const
char
*
kJvmMemoryType
=
"
jvm
.
memory
.
type
"
;
static
constexpr
const
char
*
kJvmThreadDaemon
=
"
jvm
.
thread
.
daemon
"
;
static
constexpr
const
char
*
kJvmThreadState
=
"
jvm
.
thread
.
state
"
;
static
constexpr
const
char
*
kK8sClusterName
=
"
k8s
.
cluster
.
name
"
;
static
constexpr
const
char
*
kK8sClusterUid
=
"
k8s
.
cluster
.
uid
"
;
static
constexpr
const
char
*
kK8sContainerName
=
"
k8s
.
container
.
name
"
;
static
constexpr
const
char
*
kK8sContainerRestartCount
=
"
k8s
.
container
.
restart_count
"
;
static
constexpr
const
char
*
kK8sContainerStatusLastTerminatedReason
=
"
k8s
.
container
.
status
.
last_terminated_reason
"
;
static
constexpr
const
char
*
kK8sCronjobName
=
"
k8s
.
cronjob
.
name
"
;
static
constexpr
const
char
*
kK8sCronjobUid
=
"
k8s
.
cronjob
.
uid
"
;
static
constexpr
const
char
*
kK8sDaemonsetName
=
"
k8s
.
daemonset
.
name
"
;
static
constexpr
const
char
*
kK8sDaemonsetUid
=
"
k8s
.
daemonset
.
uid
"
;
static
constexpr
const
char
*
kK8sDeploymentName
=
"
k8s
.
deployment
.
name
"
;
static
constexpr
const
char
*
kK8sDeploymentUid
=
"
k8s
.
deployment
.
uid
"
;
static
constexpr
const
char
*
kK8sJobName
=
"
k8s
.
job
.
name
"
;
static
constexpr
const
char
*
kK8sJobUid
=
"
k8s
.
job
.
uid
"
;
static
constexpr
const
char
*
kK8sNamespaceName
=
"
k8s
.
namespace
.
name
"
;
static
constexpr
const
char
*
kK8sNodeName
=
"
k8s
.
node
.
name
"
;
static
constexpr
const
char
*
kK8sNodeUid
=
"
k8s
.
node
.
uid
"
;
static
constexpr
const
char
*
kK8sPodName
=
"
k8s
.
pod
.
name
"
;
static
constexpr
const
char
*
kK8sPodUid
=
"
k8s
.
pod
.
uid
"
;
static
constexpr
const
char
*
kK8sReplicasetName
=
"
k8s
.
replicaset
.
name
"
;
static
constexpr
const
char
*
kK8sReplicasetUid
=
"
k8s
.
replicaset
.
uid
"
;
static
constexpr
const
char
*
kK8sStatefulsetName
=
"
k8s
.
statefulset
.
name
"
;
static
constexpr
const
char
*
kK8sStatefulsetUid
=
"
k8s
.
statefulset
.
uid
"
;
static
constexpr
const
char
*
kLinuxMemorySlabState
=
"
linux
.
memory
.
slab
.
state
"
;
static
constexpr
const
char
*
kLogIostream
=
"
log
.
iostream
"
;
static
constexpr
const
char
*
kLogFileName
=
"
log
.
file
.
name
"
;
static
constexpr
const
char
*
kLogFileNameResolved
=
"
log
.
file
.
name_resolved
"
;
static
constexpr
const
char
*
kLogFilePath
=
"
log
.
file
.
path
"
;
static
constexpr
const
char
*
kLogFilePathResolved
=
"
log
.
file
.
path_resolved
"
;
static
constexpr
const
char
*
kLogRecordOriginal
=
"
log
.
record
.
original
"
;
static
constexpr
const
char
*
kLogRecordUid
=
"
log
.
record
.
uid
"
;
static
constexpr
const
char
*
kMessagingBatchMessageCount
=
"
messaging
.
batch
.
message_count
"
;
static
constexpr
const
char
*
kMessagingClientId
=
"
messaging
.
client
.
id
"
;
static
constexpr
const
char
*
kMessagingConsumerGroupName
=
"
messaging
.
consumer
.
group
.
name
"
;
static
constexpr
const
char
*
kMessagingDestinationAnonymous
=
"
messaging
.
destination
.
anonymous
"
;
static
constexpr
const
char
*
kMessagingDestinationName
=
"
messaging
.
destination
.
name
"
;
static
constexpr
const
char
*
kMessagingDestinationPartitionId
=
"
messaging
.
destination
.
partition
.
id
"
;
static
constexpr
const
char
*
kMessagingDestinationSubscriptionName
=
"
messaging
.
destination
.
subscription
.
name
"
;
static
constexpr
const
char
*
kMessagingDestinationTemplate
=
"
messaging
.
destination
.
template
"
;
static
constexpr
const
char
*
kMessagingDestinationTemporary
=
"
messaging
.
destination
.
temporary
"
;
static
constexpr
const
char
*
kMessagingMessageBodySize
=
"
messaging
.
message
.
body
.
size
"
;
static
constexpr
const
char
*
kMessagingMessageConversationId
=
"
messaging
.
message
.
conversation_id
"
;
static
constexpr
const
char
*
kMessagingMessageEnvelopeSize
=
"
messaging
.
message
.
envelope
.
size
"
;
static
constexpr
const
char
*
kMessagingMessageId
=
"
messaging
.
message
.
id
"
;
static
constexpr
const
char
*
kMessagingOperationName
=
"
messaging
.
operation
.
name
"
;
static
constexpr
const
char
*
kMessagingOperationType
=
"
messaging
.
operation
.
type
"
;
static
constexpr
const
char
*
kMessagingSystem
=
"
messaging
.
system
"
;
static
constexpr
const
char
*
kMessagingKafkaMessageKey
=
"
messaging
.
kafka
.
message
.
key
"
;
static
constexpr
const
char
*
kMessagingKafkaMessageTombstone
=
"
messaging
.
kafka
.
message
.
tombstone
"
;
static
constexpr
const
char
*
kMessagingKafkaOffset
=
"
messaging
.
kafka
.
offset
"
;
static
constexpr
const
char
*
kMessagingRabbitmqDestinationRoutingKey
=
"
messaging
.
rabbitmq
.
destination
.
routing_key
"
;
static
constexpr
const
char
*
kMessagingRabbitmqMessageDeliveryTag
=
"
messaging
.
rabbitmq
.
message
.
delivery_tag
"
;
static
constexpr
const
char
*
kMessagingRocketmqConsumptionModel
=
"
messaging
.
rocketmq
.
consumption_model
"
;
static
constexpr
const
char
*
kMessagingRocketmqMessageDelayTimeLevel
=
"
messaging
.
rocketmq
.
message
.
delay_time_level
"
;
static
constexpr
const
char
*
kMessagingRocketmqMessageDeliveryTimestamp
=
"
messaging
.
rocketmq
.
message
.
delivery_timestamp
"
;
static
constexpr
const
char
*
kMessagingRocketmqMessageGroup
=
"
messaging
.
rocketmq
.
message
.
group
"
;
static
constexpr
const
char
*
kMessagingRocketmqMessageKeys
=
"
messaging
.
rocketmq
.
message
.
keys
"
;
static
constexpr
const
char
*
kMessagingRocketmqMessageTag
=
"
messaging
.
rocketmq
.
message
.
tag
"
;
static
constexpr
const
char
*
kMessagingRocketmqMessageType
=
"
messaging
.
rocketmq
.
message
.
type
"
;
static
constexpr
const
char
*
kMessagingRocketmqNamespace
=
"
messaging
.
rocketmq
.
namespace
"
;
static
constexpr
const
char
*
kMessagingGcpPubsubMessageAckDeadline
=
"
messaging
.
gcp_pubsub
.
message
.
ack_deadline
"
;
static
constexpr
const
char
*
kMessagingGcpPubsubMessageAckId
=
"
messaging
.
gcp_pubsub
.
message
.
ack_id
"
;
static
constexpr
const
char
*
kMessagingGcpPubsubMessageDeliveryAttempt
=
"
messaging
.
gcp_pubsub
.
message
.
delivery_attempt
"
;
static
constexpr
const
char
*
kMessagingGcpPubsubMessageOrderingKey
=
"
messaging
.
gcp_pubsub
.
message
.
ordering_key
"
;
static
constexpr
const
char
*
kMessagingServicebusDispositionStatus
=
"
messaging
.
servicebus
.
disposition_status
"
;
static
constexpr
const
char
*
kMessagingServicebusMessageDeliveryCount
=
"
messaging
.
servicebus
.
message
.
delivery_count
"
;
static
constexpr
const
char
*
kMessagingServicebusMessageEnqueuedTime
=
"
messaging
.
servicebus
.
message
.
enqueued_time
"
;
static
constexpr
const
char
*
kMessagingEventhubsMessageEnqueuedTime
=
"
messaging
.
eventhubs
.
message
.
enqueued_time
"
;
static
constexpr
const
char
*
kNetworkCarrierIcc
=
"
network
.
carrier
.
icc
"
;
static
constexpr
const
char
*
kNetworkCarrierMcc
=
"
network
.
carrier
.
mcc
"
;
static
constexpr
const
char
*
kNetworkCarrierMnc
=
"
network
.
carrier
.
mnc
"
;
static
constexpr
const
char
*
kNetworkCarrierName
=
"
network
.
carrier
.
name
"
;
static
constexpr
const
char
*
kNetworkConnectionSubtype
=
"
network
.
connection
.
subtype
"
;
static
constexpr
const
char
*
kNetworkConnectionType
=
"
network
.
connection
.
type
"
;
static
constexpr
const
char
*
kNetworkIoDirection
=
"
network
.
io
.
direction
"
;
static
constexpr
const
char
*
kNetworkLocalAddress
=
"
network
.
local
.
address
"
;
static
constexpr
const
char
*
kNetworkLocalPort
=
"
network
.
local
.
port
"
;
static
constexpr
const
char
*
kNetworkPeerAddress
=
"
network
.
peer
.
address
"
;
static
constexpr
const
char
*
kNetworkPeerPort
=
"
network
.
peer
.
port
"
;
static
constexpr
const
char
*
kNetworkProtocolName
=
"
network
.
protocol
.
name
"
;
static
constexpr
const
char
*
kNetworkProtocolVersion
=
"
network
.
protocol
.
version
"
;
static
constexpr
const
char
*
kNetworkTransport
=
"
network
.
transport
"
;
static
constexpr
const
char
*
kNetworkType
=
"
network
.
type
"
;
static
constexpr
const
char
*
kOciManifestDigest
=
"
oci
.
manifest
.
digest
"
;
static
constexpr
const
char
*
kOpentracingRefType
=
"
opentracing
.
ref_type
"
;
static
constexpr
const
char
*
kOsBuildId
=
"
os
.
build_id
"
;
static
constexpr
const
char
*
kOsDescription
=
"
os
.
description
"
;
static
constexpr
const
char
*
kOsName
=
"
os
.
name
"
;
static
constexpr
const
char
*
kOsType
=
"
os
.
type
"
;
static
constexpr
const
char
*
kOsVersion
=
"
os
.
version
"
;
static
constexpr
const
char
*
kOtelStatusCode
=
"
otel
.
status_code
"
;
static
constexpr
const
char
*
kOtelStatusDescription
=
"
otel
.
status_description
"
;
static
constexpr
const
char
*
kOtelScopeName
=
"
otel
.
scope
.
name
"
;
static
constexpr
const
char
*
kOtelScopeVersion
=
"
otel
.
scope
.
version
"
;
static
constexpr
const
char
*
kPeerService
=
"
peer
.
service
"
;
static
constexpr
const
char
*
kProcessCommand
=
"
process
.
command
"
;
static
constexpr
const
char
*
kProcessCommandArgs
=
"
process
.
command_args
"
;
static
constexpr
const
char
*
kProcessCommandLine
=
"
process
.
command_line
"
;
static
constexpr
const
char
*
kProcessContextSwitchType
=
"
process
.
context_switch_type
"
;
static
constexpr
const
char
*
kProcessCreationTime
=
"
process
.
creation
.
time
"
;
static
constexpr
const
char
*
kProcessExecutableName
=
"
process
.
executable
.
name
"
;
static
constexpr
const
char
*
kProcessExecutablePath
=
"
process
.
executable
.
path
"
;
static
constexpr
const
char
*
kProcessExitCode
=
"
process
.
exit
.
code
"
;
static
constexpr
const
char
*
kProcessExitTime
=
"
process
.
exit
.
time
"
;
static
constexpr
const
char
*
kProcessGroupLeaderPid
=
"
process
.
group_leader
.
pid
"
;
static
constexpr
const
char
*
kProcessInteractive
=
"
process
.
interactive
"
;
static
constexpr
const
char
*
kProcessOwner
=
"
process
.
owner
"
;
static
constexpr
const
char
*
kProcessPagingFaultType
=
"
process
.
paging
.
fault_type
"
;
static
constexpr
const
char
*
kProcessParentPid
=
"
process
.
parent_pid
"
;
static
constexpr
const
char
*
kProcessPid
=
"
process
.
pid
"
;
static
constexpr
const
char
*
kProcessRealUserId
=
"
process
.
real_user
.
id
"
;
static
constexpr
const
char
*
kProcessRealUserName
=
"
process
.
real_user
.
name
"
;
static
constexpr
const
char
*
kProcessRuntimeDescription
=
"
process
.
runtime
.
description
"
;
static
constexpr
const
char
*
kProcessRuntimeName
=
"
process
.
runtime
.
name
"
;
static
constexpr
const
char
*
kProcessRuntimeVersion
=
"
process
.
runtime
.
version
"
;
static
constexpr
const
char
*
kProcessSavedUserId
=
"
process
.
saved_user
.
id
"
;
static
constexpr
const
char
*
kProcessSavedUserName
=
"
process
.
saved_user
.
name
"
;
static
constexpr
const
char
*
kProcessSessionLeaderPid
=
"
process
.
session_leader
.
pid
"
;
static
constexpr
const
char
*
kProcessUserId
=
"
process
.
user
.
id
"
;
static
constexpr
const
char
*
kProcessUserName
=
"
process
.
user
.
name
"
;
static
constexpr
const
char
*
kProcessVpid
=
"
process
.
vpid
"
;
static
constexpr
const
char
*
kRpcConnectRpcErrorCode
=
"
rpc
.
connect_rpc
.
error_code
"
;
static
constexpr
const
char
*
kRpcGrpcStatusCode
=
"
rpc
.
grpc
.
status_code
"
;
static
constexpr
const
char
*
kRpcJsonrpcErrorCode
=
"
rpc
.
jsonrpc
.
error_code
"
;
static
constexpr
const
char
*
kRpcJsonrpcErrorMessage
=
"
rpc
.
jsonrpc
.
error_message
"
;
static
constexpr
const
char
*
kRpcJsonrpcRequestId
=
"
rpc
.
jsonrpc
.
request_id
"
;
static
constexpr
const
char
*
kRpcJsonrpcVersion
=
"
rpc
.
jsonrpc
.
version
"
;
static
constexpr
const
char
*
kRpcMessageCompressedSize
=
"
rpc
.
message
.
compressed_size
"
;
static
constexpr
const
char
*
kRpcMessageId
=
"
rpc
.
message
.
id
"
;
static
constexpr
const
char
*
kRpcMessageType
=
"
rpc
.
message
.
type
"
;
static
constexpr
const
char
*
kRpcMessageUncompressedSize
=
"
rpc
.
message
.
uncompressed_size
"
;
static
constexpr
const
char
*
kRpcMethod
=
"
rpc
.
method
"
;
static
constexpr
const
char
*
kRpcService
=
"
rpc
.
service
"
;
static
constexpr
const
char
*
kRpcSystem
=
"
rpc
.
system
"
;
static
constexpr
const
char
*
kServerAddress
=
"
server
.
address
"
;
static
constexpr
const
char
*
kServerPort
=
"
server
.
port
"
;
static
constexpr
const
char
*
kServiceInstanceId
=
"
service
.
instance
.
id
"
;
static
constexpr
const
char
*
kServiceName
=
"
service
.
name
"
;
static
constexpr
const
char
*
kServiceNamespace
=
"
service
.
namespace
"
;
static
constexpr
const
char
*
kServiceVersion
=
"
service
.
version
"
;
static
constexpr
const
char
*
kSessionId
=
"
session
.
id
"
;
static
constexpr
const
char
*
kSessionPreviousId
=
"
session
.
previous_id
"
;
static
constexpr
const
char
*
kSignalrConnectionStatus
=
"
signalr
.
connection
.
status
"
;
static
constexpr
const
char
*
kSignalrTransport
=
"
signalr
.
transport
"
;
static
constexpr
const
char
*
kSourceAddress
=
"
source
.
address
"
;
static
constexpr
const
char
*
kSourcePort
=
"
source
.
port
"
;
static
constexpr
const
char
*
kSystemDevice
=
"
system
.
device
"
;
static
constexpr
const
char
*
kSystemCpuLogicalNumber
=
"
system
.
cpu
.
logical_number
"
;
static
constexpr
const
char
*
kSystemMemoryState
=
"
system
.
memory
.
state
"
;
static
constexpr
const
char
*
kSystemPagingDirection
=
"
system
.
paging
.
direction
"
;
static
constexpr
const
char
*
kSystemPagingState
=
"
system
.
paging
.
state
"
;
static
constexpr
const
char
*
kSystemPagingType
=
"
system
.
paging
.
type
"
;
static
constexpr
const
char
*
kSystemFilesystemMode
=
"
system
.
filesystem
.
mode
"
;
static
constexpr
const
char
*
kSystemFilesystemMountpoint
=
"
system
.
filesystem
.
mountpoint
"
;
static
constexpr
const
char
*
kSystemFilesystemState
=
"
system
.
filesystem
.
state
"
;
static
constexpr
const
char
*
kSystemFilesystemType
=
"
system
.
filesystem
.
type
"
;
static
constexpr
const
char
*
kSystemNetworkState
=
"
system
.
network
.
state
"
;
static
constexpr
const
char
*
kSystemProcessStatus
=
"
system
.
process
.
status
"
;
static
constexpr
const
char
*
kTelemetrySdkLanguage
=
"
telemetry
.
sdk
.
language
"
;
static
constexpr
const
char
*
kTelemetrySdkName
=
"
telemetry
.
sdk
.
name
"
;
static
constexpr
const
char
*
kTelemetrySdkVersion
=
"
telemetry
.
sdk
.
version
"
;
static
constexpr
const
char
*
kTelemetryDistroName
=
"
telemetry
.
distro
.
name
"
;
static
constexpr
const
char
*
kTelemetryDistroVersion
=
"
telemetry
.
distro
.
version
"
;
static
constexpr
const
char
*
kTestCaseName
=
"
test
.
case
.
name
"
;
static
constexpr
const
char
*
kTestCaseResultStatus
=
"
test
.
case
.
result
.
status
"
;
static
constexpr
const
char
*
kTestSuiteName
=
"
test
.
suite
.
name
"
;
static
constexpr
const
char
*
kTestSuiteRunStatus
=
"
test
.
suite
.
run
.
status
"
;
static
constexpr
const
char
*
kThreadId
=
"
thread
.
id
"
;
static
constexpr
const
char
*
kThreadName
=
"
thread
.
name
"
;
static
constexpr
const
char
*
kTlsCipher
=
"
tls
.
cipher
"
;
static
constexpr
const
char
*
kTlsClientCertificate
=
"
tls
.
client
.
certificate
"
;
static
constexpr
const
char
*
kTlsClientCertificateChain
=
"
tls
.
client
.
certificate_chain
"
;
static
constexpr
const
char
*
kTlsClientHashMd5
=
"
tls
.
client
.
hash
.
md5
"
;
static
constexpr
const
char
*
kTlsClientHashSha1
=
"
tls
.
client
.
hash
.
sha1
"
;
static
constexpr
const
char
*
kTlsClientHashSha256
=
"
tls
.
client
.
hash
.
sha256
"
;
static
constexpr
const
char
*
kTlsClientIssuer
=
"
tls
.
client
.
issuer
"
;
static
constexpr
const
char
*
kTlsClientJa3
=
"
tls
.
client
.
ja3
"
;
static
constexpr
const
char
*
kTlsClientNotAfter
=
"
tls
.
client
.
not_after
"
;
static
constexpr
const
char
*
kTlsClientNotBefore
=
"
tls
.
client
.
not_before
"
;
static
constexpr
const
char
*
kTlsClientSubject
=
"
tls
.
client
.
subject
"
;
static
constexpr
const
char
*
kTlsClientSupportedCiphers
=
"
tls
.
client
.
supported_ciphers
"
;
static
constexpr
const
char
*
kTlsCurve
=
"
tls
.
curve
"
;
static
constexpr
const
char
*
kTlsEstablished
=
"
tls
.
established
"
;
static
constexpr
const
char
*
kTlsNextProtocol
=
"
tls
.
next_protocol
"
;
static
constexpr
const
char
*
kTlsProtocolName
=
"
tls
.
protocol
.
name
"
;
static
constexpr
const
char
*
kTlsProtocolVersion
=
"
tls
.
protocol
.
version
"
;
static
constexpr
const
char
*
kTlsResumed
=
"
tls
.
resumed
"
;
static
constexpr
const
char
*
kTlsServerCertificate
=
"
tls
.
server
.
certificate
"
;
static
constexpr
const
char
*
kTlsServerCertificateChain
=
"
tls
.
server
.
certificate_chain
"
;
static
constexpr
const
char
*
kTlsServerHashMd5
=
"
tls
.
server
.
hash
.
md5
"
;
static
constexpr
const
char
*
kTlsServerHashSha1
=
"
tls
.
server
.
hash
.
sha1
"
;
static
constexpr
const
char
*
kTlsServerHashSha256
=
"
tls
.
server
.
hash
.
sha256
"
;
static
constexpr
const
char
*
kTlsServerIssuer
=
"
tls
.
server
.
issuer
"
;
static
constexpr
const
char
*
kTlsServerJa3s
=
"
tls
.
server
.
ja3s
"
;
static
constexpr
const
char
*
kTlsServerNotAfter
=
"
tls
.
server
.
not_after
"
;
static
constexpr
const
char
*
kTlsServerNotBefore
=
"
tls
.
server
.
not_before
"
;
static
constexpr
const
char
*
kTlsServerSubject
=
"
tls
.
server
.
subject
"
;
static
constexpr
const
char
*
kUrlDomain
=
"
url
.
domain
"
;
static
constexpr
const
char
*
kUrlExtension
=
"
url
.
extension
"
;
static
constexpr
const
char
*
kUrlFragment
=
"
url
.
fragment
"
;
static
constexpr
const
char
*
kUrlFull
=
"
url
.
full
"
;
static
constexpr
const
char
*
kUrlOriginal
=
"
url
.
original
"
;
static
constexpr
const
char
*
kUrlPath
=
"
url
.
path
"
;
static
constexpr
const
char
*
kUrlPort
=
"
url
.
port
"
;
static
constexpr
const
char
*
kUrlQuery
=
"
url
.
query
"
;
static
constexpr
const
char
*
kUrlRegisteredDomain
=
"
url
.
registered_domain
"
;
static
constexpr
const
char
*
kUrlScheme
=
"
url
.
scheme
"
;
static
constexpr
const
char
*
kUrlSubdomain
=
"
url
.
subdomain
"
;
static
constexpr
const
char
*
kUrlTemplate
=
"
url
.
template
"
;
static
constexpr
const
char
*
kUrlTopLevelDomain
=
"
url
.
top_level_domain
"
;
static
constexpr
const
char
*
kUserAgentName
=
"
user_agent
.
name
"
;
static
constexpr
const
char
*
kUserAgentOriginal
=
"
user_agent
.
original
"
;
static
constexpr
const
char
*
kUserAgentVersion
=
"
user_agent
.
version
"
;
static
constexpr
const
char
*
kUserEmail
=
"
user
.
email
"
;
static
constexpr
const
char
*
kUserFullName
=
"
user
.
full_name
"
;
static
constexpr
const
char
*
kUserHash
=
"
user
.
hash
"
;
static
constexpr
const
char
*
kUserId
=
"
user
.
id
"
;
static
constexpr
const
char
*
kUserName
=
"
user
.
name
"
;
static
constexpr
const
char
*
kUserRoles
=
"
user
.
roles
"
;
static
constexpr
const
char
*
kV8jsGcType
=
"
v8js
.
gc
.
type
"
;
static
constexpr
const
char
*
kV8jsHeapSpaceName
=
"
v8js
.
heap
.
space
.
name
"
;
static
constexpr
const
char
*
kVcsRepositoryChangeId
=
"
vcs
.
repository
.
change
.
id
"
;
static
constexpr
const
char
*
kVcsRepositoryChangeTitle
=
"
vcs
.
repository
.
change
.
title
"
;
static
constexpr
const
char
*
kVcsRepositoryRefName
=
"
vcs
.
repository
.
ref
.
name
"
;
static
constexpr
const
char
*
kVcsRepositoryRefRevision
=
"
vcs
.
repository
.
ref
.
revision
"
;
static
constexpr
const
char
*
kVcsRepositoryRefType
=
"
vcs
.
repository
.
ref
.
type
"
;
static
constexpr
const
char
*
kVcsRepositoryUrlFull
=
"
vcs
.
repository
.
url
.
full
"
;
static
constexpr
const
char
*
kWebengineDescription
=
"
webengine
.
description
"
;
static
constexpr
const
char
*
kWebengineName
=
"
webengine
.
name
"
;
static
constexpr
const
char
*
kWebengineVersion
=
"
webengine
.
version
"
;
namespace
AspnetcoreRateLimitingResultValues
{
static
constexpr
const
char
*
kAcquired
=
"
acquired
"
;
static
constexpr
const
char
*
kEndpointLimiter
=
"
endpoint_limiter
"
;
static
constexpr
const
char
*
kGlobalLimiter
=
"
global_limiter
"
;
static
constexpr
const
char
*
kRequestCanceled
=
"
request_canceled
"
;
}
namespace
AspnetcoreDiagnosticsExceptionResultValues
{
static
constexpr
const
char
*
kHandled
=
"
handled
"
;
static
constexpr
const
char
*
kUnhandled
=
"
unhandled
"
;
static
constexpr
const
char
*
kSkipped
=
"
skipped
"
;
static
constexpr
const
char
*
kAborted
=
"
aborted
"
;
}
namespace
AspnetcoreRoutingMatchStatusValues
{
static
constexpr
const
char
*
kSuccess
=
"
success
"
;
static
constexpr
const
char
*
kFailure
=
"
failure
"
;
}
namespace
AwsEcsLaunchtypeValues
{
static
constexpr
const
char
*
kEc2
=
"
ec2
"
;
static
constexpr
const
char
*
kFargate
=
"
fargate
"
;
}
namespace
CicdPipelineTaskTypeValues
{
static
constexpr
const
char
*
kBuild
=
"
build
"
;
static
constexpr
const
char
*
kTest
=
"
test
"
;
static
constexpr
const
char
*
kDeploy
=
"
deploy
"
;
}
namespace
CloudPlatformValues
{
static
constexpr
const
char
*
kAlibabaCloudEcs
=
"
alibaba_cloud_ecs
"
;
static
constexpr
const
char
*
kAlibabaCloudFc
=
"
alibaba_cloud_fc
"
;
static
constexpr
const
char
*
kAlibabaCloudOpenshift
=
"
alibaba_cloud_openshift
"
;
static
constexpr
const
char
*
kAwsEc2
=
"
aws_ec2
"
;
static
constexpr
const
char
*
kAwsEcs
=
"
aws_ecs
"
;
static
constexpr
const
char
*
kAwsEks
=
"
aws_eks
"
;
static
constexpr
const
char
*
kAwsLambda
=
"
aws_lambda
"
;
static
constexpr
const
char
*
kAwsElasticBeanstalk
=
"
aws_elastic_beanstalk
"
;
static
constexpr
const
char
*
kAwsAppRunner
=
"
aws_app_runner
"
;
static
constexpr
const
char
*
kAwsOpenshift
=
"
aws_openshift
"
;
static
constexpr
const
char
*
kAzureVm
=
"
azure_vm
"
;
static
constexpr
const
char
*
kAzureContainerApps
=
"
azure_container_apps
"
;
static
constexpr
const
char
*
kAzureContainerInstances
=
"
azure_container_instances
"
;
static
constexpr
const
char
*
kAzureAks
=
"
azure_aks
"
;
static
constexpr
const
char
*
kAzureFunctions
=
"
azure_functions
"
;
static
constexpr
const
char
*
kAzureAppService
=
"
azure_app_service
"
;
static
constexpr
const
char
*
kAzureOpenshift
=
"
azure_openshift
"
;
static
constexpr
const
char
*
kGcpBareMetalSolution
=
"
gcp_bare_metal_solution
"
;
static
constexpr
const
char
*
kGcpComputeEngine
=
"
gcp_compute_engine
"
;
static
constexpr
const
char
*
kGcpCloudRun
=
"
gcp_cloud_run
"
;
static
constexpr
const
char
*
kGcpKubernetesEngine
=
"
gcp_kubernetes_engine
"
;
static
constexpr
const
char
*
kGcpCloudFunctions
=
"
gcp_cloud_functions
"
;
static
constexpr
const
char
*
kGcpAppEngine
=
"
gcp_app_engine
"
;
static
constexpr
const
char
*
kGcpOpenshift
=
"
gcp_openshift
"
;
static
constexpr
const
char
*
kIbmCloudOpenshift
=
"
ibm_cloud_openshift
"
;
static
constexpr
const
char
*
kTencentCloudCvm
=
"
tencent_cloud_cvm
"
;
static
constexpr
const
char
*
kTencentCloudEks
=
"
tencent_cloud_eks
"
;
static
constexpr
const
char
*
kTencentCloudScf
=
"
tencent_cloud_scf
"
;
}
namespace
CloudProviderValues
{
static
constexpr
const
char
*
kAlibabaCloud
=
"
alibaba_cloud
"
;
static
constexpr
const
char
*
kAws
=
"
aws
"
;
static
constexpr
const
char
*
kAzure
=
"
azure
"
;
static
constexpr
const
char
*
kGcp
=
"
gcp
"
;
static
constexpr
const
char
*
kHeroku
=
"
heroku
"
;
static
constexpr
const
char
*
kIbmCloud
=
"
ibm_cloud
"
;
static
constexpr
const
char
*
kTencentCloud
=
"
tencent_cloud
"
;
}
namespace
CpuModeValues
{
static
constexpr
const
char
*
kUser
=
"
user
"
;
static
constexpr
const
char
*
kSystem
=
"
system
"
;
static
constexpr
const
char
*
kNice
=
"
nice
"
;
static
constexpr
const
char
*
kIdle
=
"
idle
"
;
static
constexpr
const
char
*
kIowait
=
"
iowait
"
;
static
constexpr
const
char
*
kInterrupt
=
"
interrupt
"
;
static
constexpr
const
char
*
kSteal
=
"
steal
"
;
static
constexpr
const
char
*
kKernel
=
"
kernel
"
;
}
namespace
DbClientConnectionStateValues
{
static
constexpr
const
char
*
kIdle
=
"
idle
"
;
static
constexpr
const
char
*
kUsed
=
"
used
"
;
}
namespace
DbSystemValues
{
static
constexpr
const
char
*
kOtherSql
=
"
other_sql
"
;
static
constexpr
const
char
*
kAdabas
=
"
adabas
"
;
static
constexpr
const
char
*
kCache
=
"
cache
"
;
static
constexpr
const
char
*
kIntersystemsCache
=
"
intersystems_cache
"
;
static
constexpr
const
char
*
kCassandra
=
"
cassandra
"
;
static
constexpr
const
char
*
kClickhouse
=
"
clickhouse
"
;
static
constexpr
const
char
*
kCloudscape
=
"
cloudscape
"
;
static
constexpr
const
char
*
kCockroachdb
=
"
cockroachdb
"
;
static
constexpr
const
char
*
kColdfusion
=
"
coldfusion
"
;
static
constexpr
const
char
*
kCosmosdb
=
"
cosmosdb
"
;
static
constexpr
const
char
*
kCouchbase
=
"
couchbase
"
;
static
constexpr
const
char
*
kCouchdb
=
"
couchdb
"
;
static
constexpr
const
char
*
kDb2
=
"
db2
"
;
static
constexpr
const
char
*
kDerby
=
"
derby
"
;
static
constexpr
const
char
*
kDynamodb
=
"
dynamodb
"
;
static
constexpr
const
char
*
kEdb
=
"
edb
"
;
static
constexpr
const
char
*
kElasticsearch
=
"
elasticsearch
"
;
static
constexpr
const
char
*
kFilemaker
=
"
filemaker
"
;
static
constexpr
const
char
*
kFirebird
=
"
firebird
"
;
static
constexpr
const
char
*
kFirstsql
=
"
firstsql
"
;
static
constexpr
const
char
*
kGeode
=
"
geode
"
;
static
constexpr
const
char
*
kH2
=
"
h2
"
;
static
constexpr
const
char
*
kHanadb
=
"
hanadb
"
;
static
constexpr
const
char
*
kHbase
=
"
hbase
"
;
static
constexpr
const
char
*
kHive
=
"
hive
"
;
static
constexpr
const
char
*
kHsqldb
=
"
hsqldb
"
;
static
constexpr
const
char
*
kInfluxdb
=
"
influxdb
"
;
static
constexpr
const
char
*
kInformix
=
"
informix
"
;
static
constexpr
const
char
*
kIngres
=
"
ingres
"
;
static
constexpr
const
char
*
kInstantdb
=
"
instantdb
"
;
static
constexpr
const
char
*
kInterbase
=
"
interbase
"
;
static
constexpr
const
char
*
kMariadb
=
"
mariadb
"
;
static
constexpr
const
char
*
kMaxdb
=
"
maxdb
"
;
static
constexpr
const
char
*
kMemcached
=
"
memcached
"
;
static
constexpr
const
char
*
kMongodb
=
"
mongodb
"
;
static
constexpr
const
char
*
kMssql
=
"
mssql
"
;
static
constexpr
const
char
*
kMssqlcompact
=
"
mssqlcompact
"
;
static
constexpr
const
char
*
kMysql
=
"
mysql
"
;
static
constexpr
const
char
*
kNeo4j
=
"
neo4j
"
;
static
constexpr
const
char
*
kNetezza
=
"
netezza
"
;
static
constexpr
const
char
*
kOpensearch
=
"
opensearch
"
;
static
constexpr
const
char
*
kOracle
=
"
oracle
"
;
static
constexpr
const
char
*
kPervasive
=
"
pervasive
"
;
static
constexpr
const
char
*
kPointbase
=
"
pointbase
"
;
static
constexpr
const
char
*
kPostgresql
=
"
postgresql
"
;
static
constexpr
const
char
*
kProgress
=
"
progress
"
;
static
constexpr
const
char
*
kRedis
=
"
redis
"
;
static
constexpr
const
char
*
kRedshift
=
"
redshift
"
;
static
constexpr
const
char
*
kSpanner
=
"
spanner
"
;
static
constexpr
const
char
*
kSqlite
=
"
sqlite
"
;
static
constexpr
const
char
*
kSybase
=
"
sybase
"
;
static
constexpr
const
char
*
kTeradata
=
"
teradata
"
;
static
constexpr
const
char
*
kTrino
=
"
trino
"
;
static
constexpr
const
char
*
kVertica
=
"
vertica
"
;
}
namespace
DbCassandraConsistencyLevelValues
{
static
constexpr
const
char
*
kAll
=
"
all
"
;
static
constexpr
const
char
*
kEachQuorum
=
"
each_quorum
"
;
static
constexpr
const
char
*
kQuorum
=
"
quorum
"
;
static
constexpr
const
char
*
kLocalQuorum
=
"
local_quorum
"
;
static
constexpr
const
char
*
kOne
=
"
one
"
;
static
constexpr
const
char
*
kTwo
=
"
two
"
;
static
constexpr
const
char
*
kThree
=
"
three
"
;
static
constexpr
const
char
*
kLocalOne
=
"
local_one
"
;
static
constexpr
const
char
*
kAny
=
"
any
"
;
static
constexpr
const
char
*
kSerial
=
"
serial
"
;
static
constexpr
const
char
*
kLocalSerial
=
"
local_serial
"
;
}
namespace
DbCosmosdbConnectionModeValues
{
static
constexpr
const
char
*
kGateway
=
"
gateway
"
;
static
constexpr
const
char
*
kDirect
=
"
direct
"
;
}
namespace
DbCosmosdbOperationTypeValues
{
static
constexpr
const
char
*
kInvalid
=
"
Invalid
"
;
static
constexpr
const
char
*
kCreate
=
"
Create
"
;
static
constexpr
const
char
*
kPatch
=
"
Patch
"
;
static
constexpr
const
char
*
kRead
=
"
Read
"
;
static
constexpr
const
char
*
kReadFeed
=
"
ReadFeed
"
;
static
constexpr
const
char
*
kDelete
=
"
Delete
"
;
static
constexpr
const
char
*
kReplace
=
"
Replace
"
;
static
constexpr
const
char
*
kExecute
=
"
Execute
"
;
static
constexpr
const
char
*
kQuery
=
"
Query
"
;
static
constexpr
const
char
*
kHead
=
"
Head
"
;
static
constexpr
const
char
*
kHeadFeed
=
"
HeadFeed
"
;
static
constexpr
const
char
*
kUpsert
=
"
Upsert
"
;
static
constexpr
const
char
*
kBatch
=
"
Batch
"
;
static
constexpr
const
char
*
kQueryPlan
=
"
QueryPlan
"
;
static
constexpr
const
char
*
kExecuteJavascript
=
"
ExecuteJavaScript
"
;
}
namespace
DeploymentStatusValues
{
static
constexpr
const
char
*
kFailed
=
"
failed
"
;
static
constexpr
const
char
*
kSucceeded
=
"
succeeded
"
;
}
namespace
AndroidStateValues
{
static
constexpr
const
char
*
kCreated
=
"
created
"
;
static
constexpr
const
char
*
kBackground
=
"
background
"
;
static
constexpr
const
char
*
kForeground
=
"
foreground
"
;
}
namespace
ContainerCpuStateValues
{
static
constexpr
const
char
*
kUser
=
"
user
"
;
static
constexpr
const
char
*
kSystem
=
"
system
"
;
static
constexpr
const
char
*
kKernel
=
"
kernel
"
;
}
namespace
DbClientConnectionsStateValues
{
static
constexpr
const
char
*
kIdle
=
"
idle
"
;
static
constexpr
const
char
*
kUsed
=
"
used
"
;
}
namespace
StateValues
{
static
constexpr
const
char
*
kIdle
=
"
idle
"
;
static
constexpr
const
char
*
kUsed
=
"
used
"
;
}
namespace
HttpFlavorValues
{
static
constexpr
const
char
*
kHttp10
=
"
1
.
0
"
;
static
constexpr
const
char
*
kHttp11
=
"
1
.
1
"
;
static
constexpr
const
char
*
kHttp20
=
"
2
.
0
"
;
static
constexpr
const
char
*
kHttp30
=
"
3
.
0
"
;
static
constexpr
const
char
*
kSpdy
=
"
SPDY
"
;
static
constexpr
const
char
*
kQuic
=
"
QUIC
"
;
}
namespace
IosStateValues
{
static
constexpr
const
char
*
kActive
=
"
active
"
;
static
constexpr
const
char
*
kInactive
=
"
inactive
"
;
static
constexpr
const
char
*
kBackground
=
"
background
"
;
static
constexpr
const
char
*
kForeground
=
"
foreground
"
;
static
constexpr
const
char
*
kTerminate
=
"
terminate
"
;
}
namespace
NetSockFamilyValues
{
static
constexpr
const
char
*
kInet
=
"
inet
"
;
static
constexpr
const
char
*
kInet6
=
"
inet6
"
;
static
constexpr
const
char
*
kUnix
=
"
unix
"
;
}
namespace
NetTransportValues
{
static
constexpr
const
char
*
kIpTcp
=
"
ip_tcp
"
;
static
constexpr
const
char
*
kIpUdp
=
"
ip_udp
"
;
static
constexpr
const
char
*
kPipe
=
"
pipe
"
;
static
constexpr
const
char
*
kInproc
=
"
inproc
"
;
static
constexpr
const
char
*
kOther
=
"
other
"
;
}
namespace
ProcessCpuStateValues
{
static
constexpr
const
char
*
kSystem
=
"
system
"
;
static
constexpr
const
char
*
kUser
=
"
user
"
;
static
constexpr
const
char
*
kWait
=
"
wait
"
;
}
namespace
MessageTypeValues
{
static
constexpr
const
char
*
kSent
=
"
SENT
"
;
static
constexpr
const
char
*
kReceived
=
"
RECEIVED
"
;
}
namespace
SystemCpuStateValues
{
static
constexpr
const
char
*
kUser
=
"
user
"
;
static
constexpr
const
char
*
kSystem
=
"
system
"
;
static
constexpr
const
char
*
kNice
=
"
nice
"
;
static
constexpr
const
char
*
kIdle
=
"
idle
"
;
static
constexpr
const
char
*
kIowait
=
"
iowait
"
;
static
constexpr
const
char
*
kInterrupt
=
"
interrupt
"
;
static
constexpr
const
char
*
kSteal
=
"
steal
"
;
}
namespace
SystemProcessesStatusValues
{
static
constexpr
const
char
*
kRunning
=
"
running
"
;
static
constexpr
const
char
*
kSleeping
=
"
sleeping
"
;
static
constexpr
const
char
*
kStopped
=
"
stopped
"
;
static
constexpr
const
char
*
kDefunct
=
"
defunct
"
;
}
namespace
DiskIoDirectionValues
{
static
constexpr
const
char
*
kRead
=
"
read
"
;
static
constexpr
const
char
*
kWrite
=
"
write
"
;
}
namespace
ErrorTypeValues
{
static
constexpr
const
char
*
kOther
=
"
_OTHER
"
;
}
namespace
FaasDocumentOperationValues
{
static
constexpr
const
char
*
kInsert
=
"
insert
"
;
static
constexpr
const
char
*
kEdit
=
"
edit
"
;
static
constexpr
const
char
*
kDelete
=
"
delete
"
;
}
namespace
FaasInvokedProviderValues
{
static
constexpr
const
char
*
kAlibabaCloud
=
"
alibaba_cloud
"
;
static
constexpr
const
char
*
kAws
=
"
aws
"
;
static
constexpr
const
char
*
kAzure
=
"
azure
"
;
static
constexpr
const
char
*
kGcp
=
"
gcp
"
;
static
constexpr
const
char
*
kTencentCloud
=
"
tencent_cloud
"
;
}
namespace
FaasTriggerValues
{
static
constexpr
const
char
*
kDatasource
=
"
datasource
"
;
static
constexpr
const
char
*
kHttp
=
"
http
"
;
static
constexpr
const
char
*
kPubsub
=
"
pubsub
"
;
static
constexpr
const
char
*
kTimer
=
"
timer
"
;
static
constexpr
const
char
*
kOther
=
"
other
"
;
}
namespace
GenAiOperationNameValues
{
static
constexpr
const
char
*
kChat
=
"
chat
"
;
static
constexpr
const
char
*
kTextCompletion
=
"
text_completion
"
;
}
namespace
GenAiSystemValues
{
static
constexpr
const
char
*
kOpenai
=
"
openai
"
;
static
constexpr
const
char
*
kVertexAi
=
"
vertex_ai
"
;
static
constexpr
const
char
*
kAnthropic
=
"
anthropic
"
;
static
constexpr
const
char
*
kCohere
=
"
cohere
"
;
}
namespace
GenAiTokenTypeValues
{
static
constexpr
const
char
*
kInput
=
"
input
"
;
static
constexpr
const
char
*
kCompletion
=
"
output
"
;
}
namespace
GoMemoryTypeValues
{
static
constexpr
const
char
*
kStack
=
"
stack
"
;
static
constexpr
const
char
*
kOther
=
"
other
"
;
}
namespace
GraphqlOperationTypeValues
{
static
constexpr
const
char
*
kQuery
=
"
query
"
;
static
constexpr
const
char
*
kMutation
=
"
mutation
"
;
static
constexpr
const
char
*
kSubscription
=
"
subscription
"
;
}
namespace
HostArchValues
{
static
constexpr
const
char
*
kAmd64
=
"
amd64
"
;
static
constexpr
const
char
*
kArm32
=
"
arm32
"
;
static
constexpr
const
char
*
kArm64
=
"
arm64
"
;
static
constexpr
const
char
*
kIa64
=
"
ia64
"
;
static
constexpr
const
char
*
kPpc32
=
"
ppc32
"
;
static
constexpr
const
char
*
kPpc64
=
"
ppc64
"
;
static
constexpr
const
char
*
kS390x
=
"
s390x
"
;
static
constexpr
const
char
*
kX86
=
"
x86
"
;
}
namespace
HttpConnectionStateValues
{
static
constexpr
const
char
*
kActive
=
"
active
"
;
static
constexpr
const
char
*
kIdle
=
"
idle
"
;
}
namespace
HttpRequestMethodValues
{
static
constexpr
const
char
*
kConnect
=
"
CONNECT
"
;
static
constexpr
const
char
*
kDelete
=
"
DELETE
"
;
static
constexpr
const
char
*
kGet
=
"
GET
"
;
static
constexpr
const
char
*
kHead
=
"
HEAD
"
;
static
constexpr
const
char
*
kOptions
=
"
OPTIONS
"
;
static
constexpr
const
char
*
kPatch
=
"
PATCH
"
;
static
constexpr
const
char
*
kPost
=
"
POST
"
;
static
constexpr
const
char
*
kPut
=
"
PUT
"
;
static
constexpr
const
char
*
kTrace
=
"
TRACE
"
;
static
constexpr
const
char
*
kOther
=
"
_OTHER
"
;
}
namespace
JvmMemoryTypeValues
{
static
constexpr
const
char
*
kHeap
=
"
heap
"
;
static
constexpr
const
char
*
kNonHeap
=
"
non_heap
"
;
}
namespace
JvmThreadStateValues
{
static
constexpr
const
char
*
kNew
=
"
new
"
;
static
constexpr
const
char
*
kRunnable
=
"
runnable
"
;
static
constexpr
const
char
*
kBlocked
=
"
blocked
"
;
static
constexpr
const
char
*
kWaiting
=
"
waiting
"
;
static
constexpr
const
char
*
kTimedWaiting
=
"
timed_waiting
"
;
static
constexpr
const
char
*
kTerminated
=
"
terminated
"
;
}
namespace
LinuxMemorySlabStateValues
{
static
constexpr
const
char
*
kReclaimable
=
"
reclaimable
"
;
static
constexpr
const
char
*
kUnreclaimable
=
"
unreclaimable
"
;
}
namespace
LogIostreamValues
{
static
constexpr
const
char
*
kStdout
=
"
stdout
"
;
static
constexpr
const
char
*
kStderr
=
"
stderr
"
;
}
namespace
MessagingOperationTypeValues
{
static
constexpr
const
char
*
kPublish
=
"
publish
"
;
static
constexpr
const
char
*
kCreate
=
"
create
"
;
static
constexpr
const
char
*
kReceive
=
"
receive
"
;
static
constexpr
const
char
*
kProcess
=
"
process
"
;
static
constexpr
const
char
*
kSettle
=
"
settle
"
;
static
constexpr
const
char
*
kDeliver
=
"
deliver
"
;
}
namespace
MessagingSystemValues
{
static
constexpr
const
char
*
kActivemq
=
"
activemq
"
;
static
constexpr
const
char
*
kAwsSqs
=
"
aws_sqs
"
;
static
constexpr
const
char
*
kEventgrid
=
"
eventgrid
"
;
static
constexpr
const
char
*
kEventhubs
=
"
eventhubs
"
;
static
constexpr
const
char
*
kServicebus
=
"
servicebus
"
;
static
constexpr
const
char
*
kGcpPubsub
=
"
gcp_pubsub
"
;
static
constexpr
const
char
*
kJms
=
"
jms
"
;
static
constexpr
const
char
*
kKafka
=
"
kafka
"
;
static
constexpr
const
char
*
kRabbitmq
=
"
rabbitmq
"
;
static
constexpr
const
char
*
kRocketmq
=
"
rocketmq
"
;
static
constexpr
const
char
*
kPulsar
=
"
pulsar
"
;
}
namespace
MessagingRocketmqConsumptionModelValues
{
static
constexpr
const
char
*
kClustering
=
"
clustering
"
;
static
constexpr
const
char
*
kBroadcasting
=
"
broadcasting
"
;
}
namespace
MessagingRocketmqMessageTypeValues
{
static
constexpr
const
char
*
kNormal
=
"
normal
"
;
static
constexpr
const
char
*
kFifo
=
"
fifo
"
;
static
constexpr
const
char
*
kDelay
=
"
delay
"
;
static
constexpr
const
char
*
kTransaction
=
"
transaction
"
;
}
namespace
MessagingServicebusDispositionStatusValues
{
static
constexpr
const
char
*
kComplete
=
"
complete
"
;
static
constexpr
const
char
*
kAbandon
=
"
abandon
"
;
static
constexpr
const
char
*
kDeadLetter
=
"
dead_letter
"
;
static
constexpr
const
char
*
kDefer
=
"
defer
"
;
}
namespace
NetworkConnectionSubtypeValues
{
static
constexpr
const
char
*
kGprs
=
"
gprs
"
;
static
constexpr
const
char
*
kEdge
=
"
edge
"
;
static
constexpr
const
char
*
kUmts
=
"
umts
"
;
static
constexpr
const
char
*
kCdma
=
"
cdma
"
;
static
constexpr
const
char
*
kEvdo0
=
"
evdo_0
"
;
static
constexpr
const
char
*
kEvdoA
=
"
evdo_a
"
;
static
constexpr
const
char
*
kCdma20001xrtt
=
"
cdma2000_1xrtt
"
;
static
constexpr
const
char
*
kHsdpa
=
"
hsdpa
"
;
static
constexpr
const
char
*
kHsupa
=
"
hsupa
"
;
static
constexpr
const
char
*
kHspa
=
"
hspa
"
;
static
constexpr
const
char
*
kIden
=
"
iden
"
;
static
constexpr
const
char
*
kEvdoB
=
"
evdo_b
"
;
static
constexpr
const
char
*
kLte
=
"
lte
"
;
static
constexpr
const
char
*
kEhrpd
=
"
ehrpd
"
;
static
constexpr
const
char
*
kHspap
=
"
hspap
"
;
static
constexpr
const
char
*
kGsm
=
"
gsm
"
;
static
constexpr
const
char
*
kTdScdma
=
"
td_scdma
"
;
static
constexpr
const
char
*
kIwlan
=
"
iwlan
"
;
static
constexpr
const
char
*
kNr
=
"
nr
"
;
static
constexpr
const
char
*
kNrnsa
=
"
nrnsa
"
;
static
constexpr
const
char
*
kLteCa
=
"
lte_ca
"
;
}
namespace
NetworkConnectionTypeValues
{
static
constexpr
const
char
*
kWifi
=
"
wifi
"
;
static
constexpr
const
char
*
kWired
=
"
wired
"
;
static
constexpr
const
char
*
kCell
=
"
cell
"
;
static
constexpr
const
char
*
kUnavailable
=
"
unavailable
"
;
static
constexpr
const
char
*
kUnknown
=
"
unknown
"
;
}
namespace
NetworkIoDirectionValues
{
static
constexpr
const
char
*
kTransmit
=
"
transmit
"
;
static
constexpr
const
char
*
kReceive
=
"
receive
"
;
}
namespace
NetworkTransportValues
{
static
constexpr
const
char
*
kTcp
=
"
tcp
"
;
static
constexpr
const
char
*
kUdp
=
"
udp
"
;
static
constexpr
const
char
*
kPipe
=
"
pipe
"
;
static
constexpr
const
char
*
kUnix
=
"
unix
"
;
static
constexpr
const
char
*
kQuic
=
"
quic
"
;
}
namespace
NetworkTypeValues
{
static
constexpr
const
char
*
kIpv4
=
"
ipv4
"
;
static
constexpr
const
char
*
kIpv6
=
"
ipv6
"
;
}
namespace
OpentracingRefTypeValues
{
static
constexpr
const
char
*
kChildOf
=
"
child_of
"
;
static
constexpr
const
char
*
kFollowsFrom
=
"
follows_from
"
;
}
namespace
OsTypeValues
{
static
constexpr
const
char
*
kWindows
=
"
windows
"
;
static
constexpr
const
char
*
kLinux
=
"
linux
"
;
static
constexpr
const
char
*
kDarwin
=
"
darwin
"
;
static
constexpr
const
char
*
kFreebsd
=
"
freebsd
"
;
static
constexpr
const
char
*
kNetbsd
=
"
netbsd
"
;
static
constexpr
const
char
*
kOpenbsd
=
"
openbsd
"
;
static
constexpr
const
char
*
kDragonflybsd
=
"
dragonflybsd
"
;
static
constexpr
const
char
*
kHpux
=
"
hpux
"
;
static
constexpr
const
char
*
kAix
=
"
aix
"
;
static
constexpr
const
char
*
kSolaris
=
"
solaris
"
;
static
constexpr
const
char
*
kZOs
=
"
z_os
"
;
}
namespace
OtelStatusCodeValues
{
static
constexpr
const
char
*
kOk
=
"
OK
"
;
static
constexpr
const
char
*
kError
=
"
ERROR
"
;
}
namespace
ProcessContextSwitchTypeValues
{
static
constexpr
const
char
*
kVoluntary
=
"
voluntary
"
;
static
constexpr
const
char
*
kInvoluntary
=
"
involuntary
"
;
}
namespace
ProcessPagingFaultTypeValues
{
static
constexpr
const
char
*
kMajor
=
"
major
"
;
static
constexpr
const
char
*
kMinor
=
"
minor
"
;
}
namespace
RpcConnectRpcErrorCodeValues
{
static
constexpr
const
char
*
kCancelled
=
"
cancelled
"
;
static
constexpr
const
char
*
kUnknown
=
"
unknown
"
;
static
constexpr
const
char
*
kInvalidArgument
=
"
invalid_argument
"
;
static
constexpr
const
char
*
kDeadlineExceeded
=
"
deadline_exceeded
"
;
static
constexpr
const
char
*
kNotFound
=
"
not_found
"
;
static
constexpr
const
char
*
kAlreadyExists
=
"
already_exists
"
;
static
constexpr
const
char
*
kPermissionDenied
=
"
permission_denied
"
;
static
constexpr
const
char
*
kResourceExhausted
=
"
resource_exhausted
"
;
static
constexpr
const
char
*
kFailedPrecondition
=
"
failed_precondition
"
;
static
constexpr
const
char
*
kAborted
=
"
aborted
"
;
static
constexpr
const
char
*
kOutOfRange
=
"
out_of_range
"
;
static
constexpr
const
char
*
kUnimplemented
=
"
unimplemented
"
;
static
constexpr
const
char
*
kInternal
=
"
internal
"
;
static
constexpr
const
char
*
kUnavailable
=
"
unavailable
"
;
static
constexpr
const
char
*
kDataLoss
=
"
data_loss
"
;
static
constexpr
const
char
*
kUnauthenticated
=
"
unauthenticated
"
;
}
namespace
RpcGrpcStatusCodeValues
{
static
constexpr
const
int
kOk
=
0
;
static
constexpr
const
int
kCancelled
=
1
;
static
constexpr
const
int
kUnknown
=
2
;
static
constexpr
const
int
kInvalidArgument
=
3
;
static
constexpr
const
int
kDeadlineExceeded
=
4
;
static
constexpr
const
int
kNotFound
=
5
;
static
constexpr
const
int
kAlreadyExists
=
6
;
static
constexpr
const
int
kPermissionDenied
=
7
;
static
constexpr
const
int
kResourceExhausted
=
8
;
static
constexpr
const
int
kFailedPrecondition
=
9
;
static
constexpr
const
int
kAborted
=
10
;
static
constexpr
const
int
kOutOfRange
=
11
;
static
constexpr
const
int
kUnimplemented
=
12
;
static
constexpr
const
int
kInternal
=
13
;
static
constexpr
const
int
kUnavailable
=
14
;
static
constexpr
const
int
kDataLoss
=
15
;
static
constexpr
const
int
kUnauthenticated
=
16
;
}
namespace
RpcMessageTypeValues
{
static
constexpr
const
char
*
kSent
=
"
SENT
"
;
static
constexpr
const
char
*
kReceived
=
"
RECEIVED
"
;
}
namespace
RpcSystemValues
{
static
constexpr
const
char
*
kGrpc
=
"
grpc
"
;
static
constexpr
const
char
*
kJavaRmi
=
"
java_rmi
"
;
static
constexpr
const
char
*
kDotnetWcf
=
"
dotnet_wcf
"
;
static
constexpr
const
char
*
kApacheDubbo
=
"
apache_dubbo
"
;
static
constexpr
const
char
*
kConnectRpc
=
"
connect_rpc
"
;
}
namespace
SignalrConnectionStatusValues
{
static
constexpr
const
char
*
kNormalClosure
=
"
normal_closure
"
;
static
constexpr
const
char
*
kTimeout
=
"
timeout
"
;
static
constexpr
const
char
*
kAppShutdown
=
"
app_shutdown
"
;
}
namespace
SignalrTransportValues
{
static
constexpr
const
char
*
kServerSentEvents
=
"
server_sent_events
"
;
static
constexpr
const
char
*
kLongPolling
=
"
long_polling
"
;
static
constexpr
const
char
*
kWebSockets
=
"
web_sockets
"
;
}
namespace
SystemMemoryStateValues
{
static
constexpr
const
char
*
kUsed
=
"
used
"
;
static
constexpr
const
char
*
kFree
=
"
free
"
;
static
constexpr
const
char
*
kShared
=
"
shared
"
;
static
constexpr
const
char
*
kBuffers
=
"
buffers
"
;
static
constexpr
const
char
*
kCached
=
"
cached
"
;
}
namespace
SystemPagingDirectionValues
{
static
constexpr
const
char
*
kIn
=
"
in
"
;
static
constexpr
const
char
*
kOut
=
"
out
"
;
}
namespace
SystemPagingStateValues
{
static
constexpr
const
char
*
kUsed
=
"
used
"
;
static
constexpr
const
char
*
kFree
=
"
free
"
;
}
namespace
SystemPagingTypeValues
{
static
constexpr
const
char
*
kMajor
=
"
major
"
;
static
constexpr
const
char
*
kMinor
=
"
minor
"
;
}
namespace
SystemFilesystemStateValues
{
static
constexpr
const
char
*
kUsed
=
"
used
"
;
static
constexpr
const
char
*
kFree
=
"
free
"
;
static
constexpr
const
char
*
kReserved
=
"
reserved
"
;
}
namespace
SystemFilesystemTypeValues
{
static
constexpr
const
char
*
kFat32
=
"
fat32
"
;
static
constexpr
const
char
*
kExfat
=
"
exfat
"
;
static
constexpr
const
char
*
kNtfs
=
"
ntfs
"
;
static
constexpr
const
char
*
kRefs
=
"
refs
"
;
static
constexpr
const
char
*
kHfsplus
=
"
hfsplus
"
;
static
constexpr
const
char
*
kExt4
=
"
ext4
"
;
}
namespace
SystemNetworkStateValues
{
static
constexpr
const
char
*
kClose
=
"
close
"
;
static
constexpr
const
char
*
kCloseWait
=
"
close_wait
"
;
static
constexpr
const
char
*
kClosing
=
"
closing
"
;
static
constexpr
const
char
*
kDelete
=
"
delete
"
;
static
constexpr
const
char
*
kEstablished
=
"
established
"
;
static
constexpr
const
char
*
kFinWait1
=
"
fin_wait_1
"
;
static
constexpr
const
char
*
kFinWait2
=
"
fin_wait_2
"
;
static
constexpr
const
char
*
kLastAck
=
"
last_ack
"
;
static
constexpr
const
char
*
kListen
=
"
listen
"
;
static
constexpr
const
char
*
kSynRecv
=
"
syn_recv
"
;
static
constexpr
const
char
*
kSynSent
=
"
syn_sent
"
;
static
constexpr
const
char
*
kTimeWait
=
"
time_wait
"
;
}
namespace
SystemProcessStatusValues
{
static
constexpr
const
char
*
kRunning
=
"
running
"
;
static
constexpr
const
char
*
kSleeping
=
"
sleeping
"
;
static
constexpr
const
char
*
kStopped
=
"
stopped
"
;
static
constexpr
const
char
*
kDefunct
=
"
defunct
"
;
}
namespace
TelemetrySdkLanguageValues
{
static
constexpr
const
char
*
kCpp
=
"
cpp
"
;
static
constexpr
const
char
*
kDotnet
=
"
dotnet
"
;
static
constexpr
const
char
*
kErlang
=
"
erlang
"
;
static
constexpr
const
char
*
kGo
=
"
go
"
;
static
constexpr
const
char
*
kJava
=
"
java
"
;
static
constexpr
const
char
*
kNodejs
=
"
nodejs
"
;
static
constexpr
const
char
*
kPhp
=
"
php
"
;
static
constexpr
const
char
*
kPython
=
"
python
"
;
static
constexpr
const
char
*
kRuby
=
"
ruby
"
;
static
constexpr
const
char
*
kRust
=
"
rust
"
;
static
constexpr
const
char
*
kSwift
=
"
swift
"
;
static
constexpr
const
char
*
kWebjs
=
"
webjs
"
;
}
namespace
TestCaseResultStatusValues
{
static
constexpr
const
char
*
kPass
=
"
pass
"
;
static
constexpr
const
char
*
kFail
=
"
fail
"
;
}
namespace
TestSuiteRunStatusValues
{
static
constexpr
const
char
*
kSuccess
=
"
success
"
;
static
constexpr
const
char
*
kFailure
=
"
failure
"
;
static
constexpr
const
char
*
kSkipped
=
"
skipped
"
;
static
constexpr
const
char
*
kAborted
=
"
aborted
"
;
static
constexpr
const
char
*
kTimedOut
=
"
timed_out
"
;
static
constexpr
const
char
*
kInProgress
=
"
in_progress
"
;
}
namespace
TlsProtocolNameValues
{
static
constexpr
const
char
*
kSsl
=
"
ssl
"
;
static
constexpr
const
char
*
kTls
=
"
tls
"
;
}
namespace
V8jsGcTypeValues
{
static
constexpr
const
char
*
kMajor
=
"
major
"
;
static
constexpr
const
char
*
kMinor
=
"
minor
"
;
static
constexpr
const
char
*
kIncremental
=
"
incremental
"
;
static
constexpr
const
char
*
kWeakcb
=
"
weakcb
"
;
}
namespace
V8jsHeapSpaceNameValues
{
static
constexpr
const
char
*
kNewSpace
=
"
new_space
"
;
static
constexpr
const
char
*
kOldSpace
=
"
old_space
"
;
static
constexpr
const
char
*
kCodeSpace
=
"
code_space
"
;
static
constexpr
const
char
*
kMapSpace
=
"
map_space
"
;
static
constexpr
const
char
*
kLargeObjectSpace
=
"
large_object_space
"
;
}
namespace
VcsRepositoryRefTypeValues
{
static
constexpr
const
char
*
kBranch
=
"
branch
"
;
static
constexpr
const
char
*
kTag
=
"
tag
"
;
}
}
}
OPENTELEMETRY_END_NAMESPACE
