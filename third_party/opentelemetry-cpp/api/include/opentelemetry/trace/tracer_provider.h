#
pragma
once
#
include
"
opentelemetry
/
common
/
key_value_iterable
.
h
"
#
include
"
opentelemetry
/
common
/
key_value_iterable_view
.
h
"
#
include
"
opentelemetry
/
nostd
/
shared_ptr
.
h
"
#
include
"
opentelemetry
/
nostd
/
string_view
.
h
"
#
include
"
opentelemetry
/
version
.
h
"
OPENTELEMETRY_BEGIN_NAMESPACE
namespace
trace
{
class
Tracer
;
class
OPENTELEMETRY_EXPORT
TracerProvider
{
public
:
virtual
~
TracerProvider
(
)
=
default
;
#
if
OPENTELEMETRY_ABI_VERSION_NO
>
=
2
virtual
nostd
:
:
shared_ptr
<
Tracer
>
GetTracer
(
nostd
:
:
string_view
name
nostd
:
:
string_view
version
nostd
:
:
string_view
schema_url
const
common
:
:
KeyValueIterable
*
attributes
)
noexcept
=
0
;
nostd
:
:
shared_ptr
<
Tracer
>
GetTracer
(
nostd
:
:
string_view
name
nostd
:
:
string_view
version
=
"
"
nostd
:
:
string_view
schema_url
=
"
"
)
{
return
GetTracer
(
name
version
schema_url
nullptr
)
;
}
nostd
:
:
shared_ptr
<
Tracer
>
GetTracer
(
nostd
:
:
string_view
name
nostd
:
:
string_view
version
nostd
:
:
string_view
schema_url
std
:
:
initializer_list
<
std
:
:
pair
<
nostd
:
:
string_view
common
:
:
AttributeValue
>
>
attributes
)
{
nostd
:
:
span
<
const
std
:
:
pair
<
nostd
:
:
string_view
common
:
:
AttributeValue
>
>
attributes_span
{
attributes
.
begin
(
)
attributes
.
end
(
)
}
;
common
:
:
KeyValueIterableView
<
nostd
:
:
span
<
const
std
:
:
pair
<
nostd
:
:
string_view
common
:
:
AttributeValue
>
>
>
iterable_attributes
{
attributes_span
}
;
return
GetTracer
(
name
version
schema_url
&
iterable_attributes
)
;
}
template
<
class
T
nostd
:
:
enable_if_t
<
common
:
:
detail
:
:
is_key_value_iterable
<
T
>
:
:
value
>
*
=
nullptr
>
nostd
:
:
shared_ptr
<
Tracer
>
GetTracer
(
nostd
:
:
string_view
name
nostd
:
:
string_view
version
nostd
:
:
string_view
schema_url
const
T
&
attributes
)
{
common
:
:
KeyValueIterableView
<
T
>
iterable_attributes
(
attributes
)
;
return
GetTracer
(
name
version
schema_url
&
iterable_attributes
)
;
}
#
else
virtual
nostd
:
:
shared_ptr
<
Tracer
>
GetTracer
(
nostd
:
:
string_view
name
nostd
:
:
string_view
version
=
"
"
nostd
:
:
string_view
schema_url
=
"
"
)
noexcept
=
0
;
#
endif
}
;
}
OPENTELEMETRY_END_NAMESPACE
