#
ifndef
JXL_ENCODE_H_
#
define
JXL_ENCODE_H_
#
include
"
jxl
/
decode
.
h
"
#
include
"
jxl
/
jxl_export
.
h
"
#
include
"
jxl
/
memory_manager
.
h
"
#
include
"
jxl
/
parallel_runner
.
h
"
#
if
defined
(
__cplusplus
)
|
|
defined
(
c_plusplus
)
extern
"
C
"
{
#
endif
JXL_EXPORT
uint32_t
JxlEncoderVersion
(
void
)
;
typedef
struct
JxlEncoderStruct
JxlEncoder
;
typedef
struct
JxlEncoderOptionsStruct
JxlEncoderOptions
;
typedef
enum
{
JXL_ENC_SUCCESS
=
0
JXL_ENC_ERROR
=
1
JXL_ENC_NEED_MORE_OUTPUT
=
2
JXL_ENC_NOT_SUPPORTED
=
3
}
JxlEncoderStatus
;
typedef
enum
{
JXL_ENC_OPTION_RESAMPLING
=
0
JXL_ENC_OPTION_EXTRA_CHANNEL_RESAMPLING
=
1
JXL_ENC_OPTION_NOISE
=
2
JXL_ENC_OPTION_DOTS
=
3
JXL_ENC_OPTION_PATCHES
=
4
JXL_ENC_OPTION_GABORISH
=
5
JXL_ENC_OPTION_FILL_ENUM
=
65535
}
JxlEncoderOptionId
;
JXL_EXPORT
JxlEncoder
*
JxlEncoderCreate
(
const
JxlMemoryManager
*
memory_manager
)
;
JXL_EXPORT
void
JxlEncoderReset
(
JxlEncoder
*
enc
)
;
JXL_EXPORT
void
JxlEncoderDestroy
(
JxlEncoder
*
enc
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderSetParallelRunner
(
JxlEncoder
*
enc
JxlParallelRunner
parallel_runner
void
*
parallel_runner_opaque
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderProcessOutput
(
JxlEncoder
*
enc
uint8_t
*
*
next_out
size_t
*
avail_out
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderAddJPEGFrame
(
const
JxlEncoderOptions
*
options
const
uint8_t
*
buffer
size_t
size
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderAddImageFrame
(
const
JxlEncoderOptions
*
options
const
JxlPixelFormat
*
pixel_format
const
void
*
buffer
size_t
size
)
;
JXL_EXPORT
void
JxlEncoderCloseInput
(
JxlEncoder
*
enc
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderSetColorEncoding
(
JxlEncoder
*
enc
const
JxlColorEncoding
*
color
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderSetICCProfile
(
JxlEncoder
*
enc
const
uint8_t
*
icc_profile
size_t
size
)
;
JXL_EXPORT
void
JxlEncoderInitBasicInfo
(
JxlBasicInfo
*
info
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderSetBasicInfo
(
JxlEncoder
*
enc
const
JxlBasicInfo
*
info
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderStoreJPEGMetadata
(
JxlEncoder
*
enc
JXL_BOOL
store_jpeg_metadata
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderUseContainer
(
JxlEncoder
*
enc
JXL_BOOL
use_container
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderOptionsSetLossless
(
JxlEncoderOptions
*
options
JXL_BOOL
lossless
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderOptionsSetDecodingSpeed
(
JxlEncoderOptions
*
options
int
tier
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderOptionsSetEffort
(
JxlEncoderOptions
*
options
int
effort
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderOptionsSetDistance
(
JxlEncoderOptions
*
options
float
distance
)
;
JXL_EXPORT
JxlEncoderStatus
JxlEncoderOptionsSetAsInteger
(
JxlEncoderOptions
*
options
JxlEncoderOptionId
option
int32_t
value
)
;
JXL_EXPORT
JxlEncoderOptions
*
JxlEncoderOptionsCreate
(
JxlEncoder
*
enc
const
JxlEncoderOptions
*
source
)
;
JXL_EXPORT
void
JxlColorEncodingSetToSRGB
(
JxlColorEncoding
*
color_encoding
JXL_BOOL
is_gray
)
;
JXL_EXPORT
void
JxlColorEncodingSetToLinearSRGB
(
JxlColorEncoding
*
color_encoding
JXL_BOOL
is_gray
)
;
#
if
defined
(
__cplusplus
)
|
|
defined
(
c_plusplus
)
}
#
endif
#
endif
