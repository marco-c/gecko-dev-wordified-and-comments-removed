#
ifndef
JXL_CODESTREAM_HEADER_H_
#
define
JXL_CODESTREAM_HEADER_H_
#
include
<
jxl
/
types
.
h
>
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
if
defined
(
__cplusplus
)
|
|
defined
(
c_plusplus
)
extern
"
C
"
{
#
endif
typedef
enum
{
JXL_ORIENT_IDENTITY
=
1
JXL_ORIENT_FLIP_HORIZONTAL
=
2
JXL_ORIENT_ROTATE_180
=
3
JXL_ORIENT_FLIP_VERTICAL
=
4
JXL_ORIENT_TRANSPOSE
=
5
JXL_ORIENT_ROTATE_90_CW
=
6
JXL_ORIENT_ANTI_TRANSPOSE
=
7
JXL_ORIENT_ROTATE_90_CCW
=
8
}
JxlOrientation
;
typedef
enum
{
JXL_CHANNEL_ALPHA
JXL_CHANNEL_DEPTH
JXL_CHANNEL_SPOT_COLOR
JXL_CHANNEL_SELECTION_MASK
JXL_CHANNEL_BLACK
JXL_CHANNEL_CFA
JXL_CHANNEL_THERMAL
JXL_CHANNEL_RESERVED0
JXL_CHANNEL_RESERVED1
JXL_CHANNEL_RESERVED2
JXL_CHANNEL_RESERVED3
JXL_CHANNEL_RESERVED4
JXL_CHANNEL_RESERVED5
JXL_CHANNEL_RESERVED6
JXL_CHANNEL_RESERVED7
JXL_CHANNEL_UNKNOWN
JXL_CHANNEL_OPTIONAL
}
JxlExtraChannelType
;
typedef
struct
{
uint32_t
xsize
;
uint32_t
ysize
;
}
JxlPreviewHeader
;
typedef
struct
{
uint32_t
tps_numerator
;
uint32_t
tps_denominator
;
uint32_t
num_loops
;
JXL_BOOL
have_timecodes
;
}
JxlAnimationHeader
;
typedef
struct
{
JXL_BOOL
have_container
;
uint32_t
xsize
;
uint32_t
ysize
;
uint32_t
bits_per_sample
;
uint32_t
exponent_bits_per_sample
;
float
intensity_target
;
float
min_nits
;
JXL_BOOL
relative_to_max_display
;
float
linear_below
;
JXL_BOOL
uses_original_profile
;
JXL_BOOL
have_preview
;
JXL_BOOL
have_animation
;
JxlOrientation
orientation
;
uint32_t
num_color_channels
;
uint32_t
num_extra_channels
;
uint32_t
alpha_bits
;
uint32_t
alpha_exponent_bits
;
JXL_BOOL
alpha_premultiplied
;
JxlPreviewHeader
preview
;
JxlAnimationHeader
animation
;
uint32_t
intrinsic_xsize
;
uint32_t
intrinsic_ysize
;
uint8_t
padding
[
100
]
;
}
JxlBasicInfo
;
typedef
struct
{
JxlExtraChannelType
type
;
uint32_t
bits_per_sample
;
uint32_t
exponent_bits_per_sample
;
uint32_t
dim_shift
;
uint32_t
name_length
;
JXL_BOOL
alpha_premultiplied
;
float
spot_color
[
4
]
;
uint32_t
cfa_channel
;
}
JxlExtraChannelInfo
;
typedef
struct
{
uint64_t
extensions
;
}
JxlHeaderExtensions
;
typedef
enum
{
JXL_BLEND_REPLACE
=
0
JXL_BLEND_ADD
=
1
JXL_BLEND_BLEND
=
2
JXL_BLEND_MULADD
=
3
JXL_BLEND_MUL
=
4
}
JxlBlendMode
;
typedef
struct
{
JxlBlendMode
blendmode
;
uint32_t
source
;
uint32_t
alpha
;
JXL_BOOL
clamp
;
}
JxlBlendInfo
;
typedef
struct
{
JXL_BOOL
have_crop
;
int32_t
crop_x0
;
int32_t
crop_y0
;
uint32_t
xsize
;
uint32_t
ysize
;
JxlBlendInfo
blend_info
;
uint32_t
save_as_reference
;
}
JxlLayerInfo
;
typedef
struct
{
uint32_t
duration
;
uint32_t
timecode
;
uint32_t
name_length
;
JXL_BOOL
is_last
;
JxlLayerInfo
layer_info
;
}
JxlFrameHeader
;
#
if
defined
(
__cplusplus
)
|
|
defined
(
c_plusplus
)
}
#
endif
#
endif
