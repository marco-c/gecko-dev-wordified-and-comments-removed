#
ifndef
JXL_THREAD_PARALLEL_RUNNER_H_
#
define
JXL_THREAD_PARALLEL_RUNNER_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
stdio
.
h
>
#
include
<
stdlib
.
h
>
#
include
"
jxl
/
jxl_threads_export
.
h
"
#
include
"
jxl
/
memory_manager
.
h
"
#
include
"
jxl
/
parallel_runner
.
h
"
#
if
defined
(
__cplusplus
)
|
|
defined
(
c_plusplus
)
extern
"
C
"
{
#
endif
JXL_THREADS_EXPORT
JxlParallelRetCode
JxlThreadParallelRunner
(
void
*
runner_opaque
void
*
jpegxl_opaque
JxlParallelRunInit
init
JxlParallelRunFunction
func
uint32_t
start_range
uint32_t
end_range
)
;
JXL_THREADS_EXPORT
void
*
JxlThreadParallelRunnerCreate
(
const
JxlMemoryManager
*
memory_manager
size_t
num_worker_threads
)
;
JXL_THREADS_EXPORT
void
JxlThreadParallelRunnerDestroy
(
void
*
runner_opaque
)
;
JXL_THREADS_EXPORT
size_t
JxlThreadParallelRunnerDefaultNumWorkerThreads
(
)
;
#
if
defined
(
__cplusplus
)
|
|
defined
(
c_plusplus
)
}
#
endif
#
endif
