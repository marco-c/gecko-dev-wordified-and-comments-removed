#
ifndef
JXL_THREAD_PARALLEL_RUNNER_CXX_H_
#
define
JXL_THREAD_PARALLEL_RUNNER_CXX_H_
#
include
<
memory
>
#
include
"
jxl
/
thread_parallel_runner
.
h
"
#
if
!
(
defined
(
__cplusplus
)
|
|
defined
(
c_plusplus
)
)
#
error
\
"
This
a
C
+
+
only
header
.
Use
jxl
/
jxl_thread_parallel_runner
.
h
from
C
"
\
"
sources
.
"
#
endif
struct
JxlThreadParallelRunnerDestroyStruct
{
void
operator
(
)
(
void
*
runner
)
{
JxlThreadParallelRunnerDestroy
(
runner
)
;
}
}
;
typedef
std
:
:
unique_ptr
<
void
JxlThreadParallelRunnerDestroyStruct
>
JxlThreadParallelRunnerPtr
;
static
inline
JxlThreadParallelRunnerPtr
JxlThreadParallelRunnerMake
(
const
JxlMemoryManager
*
memory_manager
size_t
num_worker_threads
)
{
return
JxlThreadParallelRunnerPtr
(
JxlThreadParallelRunnerCreate
(
memory_manager
num_worker_threads
)
)
;
}
#
endif
