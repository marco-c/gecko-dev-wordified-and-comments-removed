#
ifndef
LIB_EXTRAS_DEC_JXL_H_
#
define
LIB_EXTRAS_DEC_JXL_H_
#
include
<
stdint
.
h
>
#
include
<
limits
>
#
include
<
string
>
#
include
<
vector
>
#
include
"
jxl
/
parallel_runner
.
h
"
#
include
"
jxl
/
types
.
h
"
#
include
"
lib
/
extras
/
packed_image
.
h
"
namespace
jxl
{
namespace
extras
{
struct
JXLDecompressParams
{
std
:
:
vector
<
JxlPixelFormat
>
accepted_formats
;
std
:
:
string
color_space
;
float
display_nits
=
0
.
0
;
bool
render_spotcolors
=
true
;
bool
keep_orientation
=
false
;
JxlParallelRunner
runner
;
void
*
runner_opaque
=
nullptr
;
bool
allow_partial_input
=
false
;
uint32_t
max_passes
=
std
:
:
numeric_limits
<
uint32_t
>
:
:
max
(
)
;
size_t
max_downsampling
=
1
;
bool
use_image_callback
=
true
;
bool
unpremultiply_alpha
=
false
;
}
;
bool
DecodeImageJXL
(
const
uint8_t
*
bytes
size_t
bytes_size
const
JXLDecompressParams
&
dparams
size_t
*
decoded_bytes
PackedPixelFile
*
ppf
std
:
:
vector
<
uint8_t
>
*
jpeg_bytes
=
nullptr
)
;
}
}
#
endif
