#
ifndef
LIB_JXL_SIZE_CONSTRAINTS_H_
#
define
LIB_JXL_SIZE_CONSTRAINTS_H_
#
include
<
cstdint
>
#
include
<
type_traits
>
#
include
"
lib
/
jxl
/
base
/
status
.
h
"
namespace
jxl
{
struct
SizeConstraints
{
uint32_t
dec_max_xsize
=
0xFFFFFFFFu
;
uint32_t
dec_max_ysize
=
0xFFFFFFFFu
;
uint64_t
dec_max_pixels
=
0xFFFFFFFFu
;
}
;
template
<
typename
T
class
=
typename
std
:
:
enable_if
<
std
:
:
is_unsigned
<
T
>
:
:
value
>
:
:
type
>
Status
VerifyDimensions
(
const
SizeConstraints
*
constraints
T
xs
T
ys
)
{
if
(
!
constraints
)
return
true
;
if
(
xs
=
=
0
|
|
ys
=
=
0
)
return
JXL_FAILURE
(
"
Empty
image
.
"
)
;
if
(
xs
>
constraints
-
>
dec_max_xsize
)
return
JXL_FAILURE
(
"
Image
too
wide
.
"
)
;
if
(
ys
>
constraints
-
>
dec_max_ysize
)
return
JXL_FAILURE
(
"
Image
too
tall
.
"
)
;
const
uint64_t
num_pixels
=
static_cast
<
uint64_t
>
(
xs
)
*
ys
;
if
(
num_pixels
>
constraints
-
>
dec_max_pixels
)
{
return
JXL_FAILURE
(
"
Image
too
big
.
"
)
;
}
return
true
;
}
}
#
endif
