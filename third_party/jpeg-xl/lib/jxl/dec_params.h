#
ifndef
LIB_JXL_DEC_PARAMS_H_
#
define
LIB_JXL_DEC_PARAMS_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
limits
>
#
include
"
lib
/
jxl
/
base
/
override
.
h
"
namespace
jxl
{
struct
DecompressParams
{
bool
check_decompressed_size
=
true
;
bool
keep_dct
=
false
;
bool
render_spotcolors
=
true
;
Override
preview
=
Override
:
:
kDefault
;
uint32_t
max_passes
=
std
:
:
numeric_limits
<
uint32_t
>
:
:
max
(
)
;
size_t
max_downsampling
=
1
;
bool
allow_partial_files
=
false
;
bool
allow_more_progressive_steps
=
false
;
bool
operator
=
=
(
const
DecompressParams
other
)
const
{
return
check_decompressed_size
=
=
other
.
check_decompressed_size
&
&
keep_dct
=
=
other
.
keep_dct
&
&
render_spotcolors
=
=
other
.
render_spotcolors
&
&
preview
=
=
other
.
preview
&
&
max_passes
=
=
other
.
max_passes
&
&
max_downsampling
=
=
other
.
max_downsampling
&
&
allow_partial_files
=
=
other
.
allow_partial_files
&
&
allow_more_progressive_steps
=
=
other
.
allow_more_progressive_steps
;
}
bool
operator
!
=
(
const
DecompressParams
&
other
)
const
{
return
!
(
*
this
=
=
other
)
;
}
}
;
}
#
endif
