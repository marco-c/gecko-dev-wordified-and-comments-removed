#
ifndef
LIB_JXL_FILTERS_INTERNAL_H_
#
define
LIB_JXL_FILTERS_INTERNAL_H_
#
include
<
stddef
.
h
>
#
include
"
lib
/
jxl
/
base
/
status
.
h
"
#
include
"
lib
/
jxl
/
image_ops
.
h
"
namespace
jxl
{
struct
RowMapMirror
{
RowMapMirror
(
ssize_t
full_image_y_offset
size_t
image_ysize
)
:
full_image_y_offset_
(
full_image_y_offset
)
image_ysize_
(
image_ysize
)
{
}
size_t
operator
(
)
(
ssize_t
y
)
{
return
Mirror
(
y
+
full_image_y_offset_
image_ysize_
)
-
full_image_y_offset_
;
}
ssize_t
full_image_y_offset_
;
size_t
image_ysize_
;
}
;
template
<
size_t
m
>
struct
RowMapMod
{
RowMapMod
(
)
=
default
;
RowMapMod
(
ssize_t
size_t
)
{
}
size_t
operator
(
)
(
ssize_t
y
)
{
JXL_DASSERT
(
y
>
=
-
16
)
;
return
static_cast
<
size_t
>
(
y
+
(
m
>
16
?
m
:
16
*
m
)
)
%
m
;
}
}
;
struct
RowMapId
{
size_t
operator
(
)
(
ssize_t
y
)
{
JXL_DASSERT
(
y
>
=
0
)
;
return
y
;
}
}
;
}
#
endif
