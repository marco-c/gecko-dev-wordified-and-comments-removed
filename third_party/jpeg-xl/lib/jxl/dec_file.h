#
ifndef
LIB_JXL_DEC_FILE_H_
#
define
LIB_JXL_DEC_FILE_H_
#
include
<
stdint
.
h
>
#
include
"
lib
/
jxl
/
base
/
data_parallel
.
h
"
#
include
"
lib
/
jxl
/
base
/
padded_bytes
.
h
"
#
include
"
lib
/
jxl
/
base
/
span
.
h
"
#
include
"
lib
/
jxl
/
base
/
status
.
h
"
#
include
"
lib
/
jxl
/
codec_in_out
.
h
"
#
include
"
lib
/
jxl
/
dec_params
.
h
"
namespace
jxl
{
Status
DecodePreview
(
const
DecompressParams
&
dparams
const
CodecMetadata
&
metadata
BitReader
*
JXL_RESTRICT
reader
ThreadPool
*
pool
ImageBundle
*
JXL_RESTRICT
preview
uint64_t
*
dec_pixels
const
SizeConstraints
*
constraints
)
;
Status
DecodeFile
(
const
DecompressParams
&
params
const
Span
<
const
uint8_t
>
file
CodecInOut
*
io
ThreadPool
*
pool
=
nullptr
)
;
static
inline
Status
DecodeFile
(
const
DecompressParams
&
params
const
PaddedBytes
&
file
CodecInOut
*
io
ThreadPool
*
pool
=
nullptr
)
{
return
DecodeFile
(
params
Span
<
const
uint8_t
>
(
file
)
io
pool
)
;
}
}
#
endif
