#
ifndef
LIB_JXL_ENC_HEURISTICS_H_
#
define
LIB_JXL_ENC_HEURISTICS_H_
#
include
<
jxl
/
cms_interface
.
h
>
#
include
"
lib
/
jxl
/
base
/
data_parallel
.
h
"
#
include
"
lib
/
jxl
/
base
/
rect
.
h
"
#
include
"
lib
/
jxl
/
base
/
status
.
h
"
#
include
"
lib
/
jxl
/
frame_header
.
h
"
#
include
"
lib
/
jxl
/
image
.
h
"
namespace
jxl
{
struct
AuxOut
;
struct
PassesEncoderState
;
class
DequantMatrices
;
class
ImageBundle
;
class
ModularFrameEncoder
;
Status
LossyFrameHeuristics
(
const
FrameHeader
&
frame_header
PassesEncoderState
*
enc_state
ModularFrameEncoder
*
modular_frame_encoder
const
Image3F
*
linear
Image3F
*
opsin
const
Rect
&
rect
const
JxlCmsInterface
&
cms
ThreadPool
*
pool
AuxOut
*
aux_out
)
;
Status
ComputeARHeuristics
(
const
FrameHeader
&
frame_header
PassesEncoderState
*
enc_state
const
Image3F
&
orig_opsin
const
Rect
&
rect
ThreadPool
*
pool
)
;
void
FindBestBlockEntropyModel
(
PassesEncoderState
&
enc_state
)
;
Status
DownsampleImage2_Iterative
(
Image3F
*
opsin
)
;
Status
DownsampleImage2_Sharper
(
Image3F
*
opsin
)
;
}
#
endif
