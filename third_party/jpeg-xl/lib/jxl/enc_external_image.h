#
ifndef
LIB_JXL_ENC_EXTERNAL_IMAGE_H_
#
define
LIB_JXL_ENC_EXTERNAL_IMAGE_H_
#
include
<
jxl
/
types
.
h
>
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
"
lib
/
jxl
/
base
/
data_parallel
.
h
"
#
include
"
lib
/
jxl
/
base
/
padded_bytes
.
h
"
#
include
"
lib
/
jxl
/
base
/
status
.
h
"
#
include
"
lib
/
jxl
/
color_encoding_internal
.
h
"
#
include
"
lib
/
jxl
/
image
.
h
"
#
include
"
lib
/
jxl
/
image_bundle
.
h
"
namespace
jxl
{
Status
ConvertFromExternal
(
Span
<
const
uint8_t
>
bytes
size_t
xsize
size_t
ysize
size_t
bits_per_sample
JxlPixelFormat
format
size_t
c
ThreadPool
*
pool
ImageF
*
channel
)
;
Status
ConvertFromExternal
(
Span
<
const
uint8_t
>
bytes
size_t
xsize
size_t
ysize
const
ColorEncoding
&
c_current
size_t
bits_per_sample
JxlPixelFormat
format
ThreadPool
*
pool
ImageBundle
*
ib
)
;
Status
BufferToImageF
(
const
JxlPixelFormat
&
pixel_format
size_t
xsize
size_t
ysize
const
void
*
buffer
size_t
size
ThreadPool
*
pool
ImageF
*
channel
)
;
Status
BufferToImageBundle
(
const
JxlPixelFormat
&
pixel_format
uint32_t
xsize
uint32_t
ysize
const
void
*
buffer
size_t
size
jxl
:
:
ThreadPool
*
pool
const
jxl
:
:
ColorEncoding
&
c_current
jxl
:
:
ImageBundle
*
ib
)
;
}
#
endif
