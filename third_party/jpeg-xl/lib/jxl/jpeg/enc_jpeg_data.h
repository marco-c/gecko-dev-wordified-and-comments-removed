#
ifndef
LIB_JXL_JPEG_ENC_JPEG_DATA_H_
#
define
LIB_JXL_JPEG_ENC_JPEG_DATA_H_
#
include
<
jxl
/
memory_manager
.
h
>
#
include
<
cstdint
>
#
include
<
vector
>
#
include
"
lib
/
jxl
/
base
/
span
.
h
"
#
include
"
lib
/
jxl
/
base
/
status
.
h
"
#
include
"
lib
/
jxl
/
color_encoding_internal
.
h
"
#
include
"
lib
/
jxl
/
enc_params
.
h
"
#
include
"
lib
/
jxl
/
frame_header
.
h
"
#
include
"
lib
/
jxl
/
jpeg
/
jpeg_data
.
h
"
namespace
jxl
{
class
CodecInOut
;
namespace
jpeg
{
Status
EncodeJPEGData
(
JxlMemoryManager
*
memory_manager
JPEGData
&
jpeg_data
std
:
:
vector
<
uint8_t
>
*
bytes
const
CompressParams
&
cparams
)
;
void
SetColorEncodingFromJpegData
(
const
jpeg
:
:
JPEGData
&
jpg
ColorEncoding
*
color_encoding
)
;
Status
SetChromaSubsamplingFromJpegData
(
const
JPEGData
&
jpg
YCbCrChromaSubsampling
*
cs
)
;
Status
SetColorTransformFromJpegData
(
const
JPEGData
&
jpg
ColorTransform
*
color_transform
)
;
Status
DecodeImageJPG
(
Span
<
const
uint8_t
>
bytes
CodecInOut
*
io
)
;
}
}
#
endif
