#
ifndef
LIB_JXL_BASE_IACA_H_
#
define
LIB_JXL_BASE_IACA_H_
#
include
"
lib
/
jxl
/
base
/
compiler_specific
.
h
"
#
ifndef
JXL_IACA_ENABLED
#
define
JXL_IACA_ENABLED
0
#
endif
namespace
jxl
{
static
JXL_INLINE
void
BeginIACA
(
)
{
#
if
JXL_IACA_ENABLED
&
&
(
JXL_COMPILER_GCC
|
|
JXL_COMPILER_CLANG
)
asm
volatile
(
"
.
byte
0x0F
0x0B
\
n
\
t
"
"
movl
111
%
%
ebx
\
n
\
t
"
"
.
byte
0x64
0x67
0x90
\
n
\
t
"
:
:
:
"
memory
"
)
;
#
endif
}
static
JXL_INLINE
void
EndIACA
(
)
{
#
if
JXL_IACA_ENABLED
&
&
(
JXL_COMPILER_GCC
|
|
JXL_COMPILER_CLANG
)
asm
volatile
(
"
movl
222
%
%
ebx
\
n
\
t
"
"
.
byte
0x64
0x67
0x90
\
n
\
t
"
"
.
byte
0x0F
0x0B
\
n
\
t
"
:
:
:
"
memory
"
)
;
#
endif
}
struct
ScopeIACA
{
JXL_INLINE
ScopeIACA
(
)
{
BeginIACA
(
)
;
}
JXL_INLINE
~
ScopeIACA
(
)
{
EndIACA
(
)
;
}
}
;
}
#
endif
