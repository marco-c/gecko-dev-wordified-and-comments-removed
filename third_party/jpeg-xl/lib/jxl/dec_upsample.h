#
ifndef
LIB_JXL_DEC_UPSAMPLE_H_
#
define
LIB_JXL_DEC_UPSAMPLE_H_
#
include
"
lib
/
jxl
/
image
.
h
"
#
include
"
lib
/
jxl
/
image_metadata
.
h
"
namespace
jxl
{
struct
Upsampler
{
void
Init
(
size_t
upsampling
const
CustomTransformData
&
data
)
;
static
constexpr
size_t
max_upsampling
(
)
{
return
8
;
}
static
constexpr
size_t
filter_radius
(
)
{
return
2
;
}
static
constexpr
size_t
max_x_repeat
(
)
{
return
4
;
}
static
size_t
GetArenaSize
(
size_t
max_dst_xsize
)
;
void
UpsampleRect
(
const
Image3F
&
src
const
Rect
&
src_rect
Image3F
*
dst
const
Rect
&
dst_rect
ssize_t
image_y_offset
size_t
image_ysize
float
*
arena
)
const
;
void
UpsampleRect
(
const
ImageF
&
src
const
Rect
&
src_rect
ImageF
*
dst
const
Rect
&
dst_rect
ssize_t
image_y_offset
size_t
image_ysize
float
*
arena
)
const
;
private
:
size_t
upsampling_
=
1
;
size_t
x_repeat_
=
1
;
CacheAlignedUniquePtr
kernel_storage_
=
{
nullptr
}
;
}
;
}
#
endif
