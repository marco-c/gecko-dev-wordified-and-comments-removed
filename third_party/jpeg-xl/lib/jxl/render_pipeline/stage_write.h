#
ifndef
LIB_JXL_RENDER_PIPELINE_STAGE_WRITE_H_
#
define
LIB_JXL_RENDER_PIPELINE_STAGE_WRITE_H_
#
include
<
functional
>
#
include
"
lib
/
jxl
/
image_bundle
.
h
"
#
include
"
lib
/
jxl
/
render_pipeline
/
render_pipeline_stage
.
h
"
namespace
jxl
{
std
:
:
unique_ptr
<
RenderPipelineStage
>
GetWriteToImageBundleStage
(
ImageBundle
*
image_bundle
ColorEncoding
color_encoding
)
;
std
:
:
unique_ptr
<
RenderPipelineStage
>
GetWriteToImage3FStage
(
Image3F
*
image
)
;
std
:
:
unique_ptr
<
RenderPipelineStage
>
GetWriteToU8Stage
(
uint8_t
*
rgb
size_t
stride
size_t
width
size_t
height
bool
rgba
bool
has_alpha
size_t
alpha_c
)
;
std
:
:
unique_ptr
<
RenderPipelineStage
>
GetWriteToPixelCallbackStage
(
const
std
:
:
function
<
void
(
const
float
*
size_t
size_t
size_t
)
>
&
pixel_callback
size_t
width
size_t
height
bool
rgba
bool
has_alpha
size_t
alpha_c
)
;
}
#
endif
