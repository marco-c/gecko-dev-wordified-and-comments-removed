#
ifndef
LIB_JXL_COMPRESSED_DC_H_
#
define
LIB_JXL_COMPRESSED_DC_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
"
lib
/
jxl
/
aux_out_fwd
.
h
"
#
include
"
lib
/
jxl
/
base
/
compiler_specific
.
h
"
#
include
"
lib
/
jxl
/
base
/
data_parallel
.
h
"
#
include
"
lib
/
jxl
/
base
/
span
.
h
"
#
include
"
lib
/
jxl
/
base
/
status
.
h
"
#
include
"
lib
/
jxl
/
dec_bit_reader
.
h
"
#
include
"
lib
/
jxl
/
dec_cache
.
h
"
#
include
"
lib
/
jxl
/
enc_ans
.
h
"
#
include
"
lib
/
jxl
/
enc_bit_writer
.
h
"
#
include
"
lib
/
jxl
/
enc_cache
.
h
"
#
include
"
lib
/
jxl
/
image
.
h
"
#
include
"
lib
/
jxl
/
modular
/
modular_image
.
h
"
namespace
jxl
{
void
AdaptiveDCSmoothing
(
const
float
*
dc_factors
Image3F
*
dc
ThreadPool
*
pool
)
;
void
DequantDC
(
const
Rect
&
r
Image3F
*
dc
ImageB
*
quant_dc
const
Image
&
in
const
float
*
dc_factors
float
mul
const
float
*
cfl_factors
YCbCrChromaSubsampling
chroma_subsampling
const
BlockCtxMap
&
bctx
)
;
}
#
endif
