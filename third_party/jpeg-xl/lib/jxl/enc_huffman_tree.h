#
ifndef
LIB_JXL_HUFFMAN_TREE_H_
#
define
LIB_JXL_HUFFMAN_TREE_H_
#
include
<
stdint
.
h
>
#
include
<
stdlib
.
h
>
namespace
jxl
{
struct
HuffmanTree
{
HuffmanTree
(
uint32_t
count
int16_t
left
int16_t
right
)
:
total_count
(
count
)
index_left
(
left
)
index_right_or_value
(
right
)
{
}
uint32_t
total_count
;
int16_t
index_left
;
int16_t
index_right_or_value
;
}
;
void
SetDepth
(
const
HuffmanTree
&
p
HuffmanTree
*
pool
uint8_t
*
depth
uint8_t
level
)
;
void
CreateHuffmanTree
(
const
uint32_t
*
data
size_t
length
int
tree_limit
uint8_t
*
depth
)
;
void
WriteHuffmanTree
(
const
uint8_t
*
depth
size_t
length
size_t
*
tree_size
uint8_t
*
tree
uint8_t
*
extra_bits_data
)
;
void
ConvertBitDepthsToSymbols
(
const
uint8_t
*
depth
size_t
len
uint16_t
*
bits
)
;
}
#
endif
