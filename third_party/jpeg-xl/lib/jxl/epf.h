#
ifndef
LIB_JXL_EPF_H_
#
define
LIB_JXL_EPF_H_
#
include
<
stddef
.
h
>
#
include
"
lib
/
jxl
/
base
/
data_parallel
.
h
"
#
include
"
lib
/
jxl
/
base
/
status
.
h
"
#
include
"
lib
/
jxl
/
dec_cache
.
h
"
#
include
"
lib
/
jxl
/
filters
.
h
"
#
include
"
lib
/
jxl
/
passes_state
.
h
"
namespace
jxl
{
static
constexpr
float
kInvSigmaNum
=
-
1
.
1715728752538099024f
;
void
ComputeSigma
(
const
Rect
&
block_rect
PassesDecoderState
*
state
)
;
void
ApplyFilters
(
PassesDecoderState
*
dec_state
const
Rect
&
image_rect
const
Image3F
&
input
const
Rect
&
input_rect
size_t
thread
Image3F
*
JXL_RESTRICT
out
const
Rect
&
output_rect
)
;
FilterPipeline
*
PrepareFilterPipeline
(
PassesDecoderState
*
dec_state
const
Rect
&
image_rect
const
Image3F
&
input
const
Rect
&
input_rect
size_t
image_ysize
size_t
thread
Image3F
*
JXL_RESTRICT
out
const
Rect
&
output_rect
)
;
}
#
endif
