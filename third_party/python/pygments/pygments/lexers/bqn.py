"
"
"
    
pygments
.
lexers
.
bqn
    
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
~
    
Lexer
for
BQN
.
    
:
copyright
:
Copyright
2006
-
2025
by
the
Pygments
team
see
AUTHORS
.
    
:
license
:
BSD
see
LICENSE
for
details
.
"
"
"
from
pygments
.
lexer
import
RegexLexer
from
pygments
.
token
import
Comment
Operator
Keyword
Name
String
\
    
Number
Punctuation
Whitespace
__all__
=
[
'
BQNLexer
'
]
class
BQNLexer
(
RegexLexer
)
:
    
"
"
"
    
A
simple
BQN
lexer
.
    
"
"
"
    
name
=
'
BQN
'
    
url
=
'
https
:
/
/
mlochbaum
.
github
.
io
/
BQN
/
index
.
html
'
    
aliases
=
[
'
bqn
'
]
    
filenames
=
[
'
*
.
bqn
'
]
    
mimetypes
=
[
]
    
version_added
=
'
2
.
16
'
    
_iwc
=
r
'
(
(
?
=
[
^
]
)
\
w
)
'
    
tokens
=
{
        
'
root
'
:
[
            
(
r
'
\
s
+
'
Whitespace
)
            
(
r
'
#
.
*
'
Comment
.
Single
)
            
(
r
'
\
'
(
(
\
'
\
'
)
|
[
^
\
'
]
)
*
\
'
'
String
.
Single
)
            
(
r
'
"
(
(
"
"
)
|
[
^
"
]
)
*
"
'
String
.
Double
)
            
(
r
'
'
String
.
Symbol
)
            
(
r
'
[
\
.
\
[
\
]
]
'
Punctuation
)
            
(
r
'
[
\
(
\
)
]
'
String
.
Regex
)
            
(
r
'
?
[
0
-
9
]
(
(
[
0
-
9
]
|
_
)
*
\
.
?
(
[
0
-
9
]
|
_
)
+
|
(
[
0
-
9
]
|
_
)
*
)
(
[
Ee
]
[
]
?
(
[
0
-
9
]
|
_
)
+
)
?
|
|
|
|
'
Number
)
            
(
r
'
[
a
-
z
]
'
+
_iwc
+
r
'
*
'
Name
.
Variable
)
            
(
r
'
[
]
'
Name
.
Property
)
            
(
r
'
_
(
|
[
a
-
zA
-
Z0
-
9
]
+
)
_
'
Name
.
Property
)
            
(
r
'
[
]
'
Name
.
Attribute
)
            
(
r
'
_
(
|
[
a
-
zA
-
Z0
-
9
]
+
)
'
Name
.
Attribute
)
            
(
r
'
[
+
\
-
\
|
<
>
=
/
!
]
'
             
Operator
)
            
(
r
'
[
A
-
Z
]
'
+
_iwc
+
r
'
*
|
'
+
_iwc
+
r
'
+
'
Operator
)
            
(
r
'
'
Name
.
Constant
)
            
(
r
'
[
]
'
Keyword
.
Declaration
)
            
(
r
'
[
{
}
]
'
Keyword
.
Type
)
            
(
r
'
[
;
:
?
]
'
Name
.
Entity
)
        
]
    
}
