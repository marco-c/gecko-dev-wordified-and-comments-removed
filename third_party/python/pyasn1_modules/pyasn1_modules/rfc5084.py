from
pyasn1
.
type
import
constraint
from
pyasn1
.
type
import
namedtype
from
pyasn1
.
type
import
univ
from
pyasn1_modules
import
rfc5280
def
_OID
(
*
components
)
:
    
output
=
[
]
    
for
x
in
tuple
(
components
)
:
        
if
isinstance
(
x
univ
.
ObjectIdentifier
)
:
            
output
.
extend
(
list
(
x
)
)
        
else
:
            
output
.
append
(
int
(
x
)
)
    
return
univ
.
ObjectIdentifier
(
output
)
class
AES_CCM_ICVlen
(
univ
.
Integer
)
:
    
pass
class
AES_GCM_ICVlen
(
univ
.
Integer
)
:
    
pass
AES_CCM_ICVlen
.
subtypeSpec
=
constraint
.
SingleValueConstraint
(
4
6
8
10
12
14
16
)
AES_GCM_ICVlen
.
subtypeSpec
=
constraint
.
ValueRangeConstraint
(
12
16
)
class
CCMParameters
(
univ
.
Sequence
)
:
    
pass
CCMParameters
.
componentType
=
namedtype
.
NamedTypes
(
    
namedtype
.
NamedType
(
'
aes
-
nonce
'
univ
.
OctetString
(
)
.
subtype
(
subtypeSpec
=
constraint
.
ValueSizeConstraint
(
7
13
)
)
)
    
namedtype
.
DefaultedNamedType
(
'
aes
-
ICVlen
'
AES_CCM_ICVlen
(
)
.
subtype
(
value
=
12
)
)
)
class
GCMParameters
(
univ
.
Sequence
)
:
    
pass
GCMParameters
.
componentType
=
namedtype
.
NamedTypes
(
    
namedtype
.
NamedType
(
'
aes
-
nonce
'
univ
.
OctetString
(
)
)
    
namedtype
.
DefaultedNamedType
(
'
aes
-
ICVlen
'
AES_GCM_ICVlen
(
)
.
subtype
(
value
=
12
)
)
)
aes
=
_OID
(
2
16
840
1
101
3
4
1
)
id_aes128_CCM
=
_OID
(
aes
7
)
id_aes128_GCM
=
_OID
(
aes
6
)
id_aes192_CCM
=
_OID
(
aes
27
)
id_aes192_GCM
=
_OID
(
aes
26
)
id_aes256_CCM
=
_OID
(
aes
47
)
id_aes256_GCM
=
_OID
(
aes
46
)
_algorithmIdentifierMapUpdate
=
{
    
id_aes128_CCM
:
CCMParameters
(
)
    
id_aes128_GCM
:
GCMParameters
(
)
    
id_aes192_CCM
:
CCMParameters
(
)
    
id_aes192_GCM
:
GCMParameters
(
)
    
id_aes256_CCM
:
CCMParameters
(
)
    
id_aes256_GCM
:
GCMParameters
(
)
}
rfc5280
.
algorithmIdentifierMap
.
update
(
_algorithmIdentifierMapUpdate
)
