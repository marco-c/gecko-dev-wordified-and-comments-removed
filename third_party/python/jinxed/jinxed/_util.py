#
-
*
-
coding
:
utf
-
8
-
*
-
"
"
"
Utility
objects
"
"
"
import
os
import
platform
import
sys
if
sys
.
version_info
[
:
2
]
<
(
3
3
)
:
    
import
mock
else
:
    
from
unittest
import
mock
BASESTRING
=
basestring
if
sys
.
version_info
[
0
]
<
3
else
str
IS_WINDOWS
=
platform
.
system
(
)
=
=
'
Windows
'
class
error
(
Exception
)
:
    
"
"
"
    
Generic
class
for
Jinxed
errors
    
"
"
"
def
get_term
(
*
args
*
*
kwargs
)
:
    
"
"
"
    
A
lightweight
stand
-
in
for
win32
.
get_term
(
)
for
non
-
Windows
platforms
    
Returns
value
of
TERM
environment
variable
or
'
unknown
'
    
"
"
"
    
return
os
.
environ
.
get
(
'
TERM
'
'
unknown
'
)
def
raise_from_none
(
exc
)
:
    
"
"
"
    
Convenience
function
to
raise
from
None
in
a
Python
2
/
3
compatible
manner
    
"
"
"
    
raise
exc
if
sys
.
version_info
[
0
]
>
=
3
:
    
exec
(
'
def
raise_from_none
(
exc
)
:
\
n
raise
exc
from
None
'
)
