import
re
SHELL_QUOTE_RE
=
re
.
compile
(
r
"
[
\
\
\
t
\
r
\
n
\
'
\
"
#
<
>
&
|
(
)
{
}
;
\
*
\
?
]
"
)
def
_quote
(
s
)
:
    
"
"
"
Given
a
string
returns
a
version
that
can
be
used
literally
on
a
shell
    
command
line
enclosing
it
with
single
quotes
if
necessary
.
    
As
a
special
case
if
given
an
int
returns
a
string
containing
the
int
    
not
enclosed
in
quotes
.
    
"
"
"
    
if
isinstance
(
s
int
)
:
        
return
"
%
d
"
%
s
    
if
s
and
not
SHELL_QUOTE_RE
.
search
(
s
)
and
not
s
.
startswith
(
"
~
"
)
:
        
return
s
    
t
=
type
(
s
)
    
return
t
(
"
'
%
s
'
"
)
%
s
.
replace
(
t
(
"
'
"
)
t
(
"
'
\
\
'
'
"
)
)
def
quote
(
*
strings
)
:
    
"
"
"
Given
one
or
more
strings
returns
a
quoted
string
that
can
be
used
    
literally
on
a
shell
command
line
.
        
>
>
>
quote
(
'
a
'
'
b
'
)
        
"
a
b
"
        
>
>
>
quote
(
'
a
b
'
'
c
'
)
        
"
'
a
b
'
c
"
    
"
"
"
    
return
"
"
.
join
(
_quote
(
s
)
for
s
in
strings
)
