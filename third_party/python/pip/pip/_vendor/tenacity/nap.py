import
time
import
typing
if
typing
.
TYPE_CHECKING
:
    
import
threading
def
sleep
(
seconds
:
float
)
-
>
None
:
    
"
"
"
    
Sleep
strategy
that
delays
execution
for
a
given
number
of
seconds
.
    
This
is
the
default
strategy
and
may
be
mocked
out
for
unit
testing
.
    
"
"
"
    
time
.
sleep
(
seconds
)
class
sleep_using_event
:
    
"
"
"
Sleep
strategy
that
waits
on
an
event
to
be
set
.
"
"
"
    
def
__init__
(
self
event
:
"
threading
.
Event
"
)
-
>
None
:
        
self
.
event
=
event
    
def
__call__
(
self
timeout
:
typing
.
Optional
[
float
]
)
-
>
None
:
        
self
.
event
.
wait
(
timeout
=
timeout
)
