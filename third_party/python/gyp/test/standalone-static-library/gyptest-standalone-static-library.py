"
"
"
Verifies
build
of
a
static_library
with
the
standalone_static_library
flag
set
.
"
"
"
import
os
import
subprocess
import
sys
import
TestGyp
test
=
TestGyp
.
TestGyp
(
)
test
.
run_gyp
(
'
invalid
.
gyp
'
status
=
1
stderr
=
None
)
target_str
=
'
invalid
.
gyp
:
bad
#
target
'
err
=
[
'
gyp
:
Target
%
s
has
type
executable
but
standalone_static_library
flag
'
       
'
is
only
valid
for
static_library
type
.
'
%
target_str
]
test
.
must_contain_all_lines
(
test
.
stderr
(
)
err
)
test
.
run_gyp
(
'
mylib
.
gyp
'
)
test
.
build
(
'
mylib
.
gyp
'
target
=
'
prog
'
)
standalone_static_library_dir
=
test
.
EXECUTABLE
path_to_lib
=
os
.
path
.
split
(
    
test
.
built_file_path
(
'
mylib
'
type
=
standalone_static_library_dir
)
)
[
0
]
lib_name
=
test
.
built_file_basename
(
'
mylib
'
type
=
test
.
STATIC_LIB
)
path
=
os
.
path
.
join
(
path_to_lib
lib_name
)
test
.
must_exist
(
path
)
expect
=
'
hello
from
mylib
.
c
\
n
'
test
.
run_built_executable
(
'
prog
'
stdout
=
expect
)
supports_thick
=
(
'
make
'
'
ninja
'
'
cmake
'
)
if
test
.
format
in
supports_thick
and
sys
.
platform
.
startswith
(
'
linux
'
)
:
  
retcode
=
subprocess
.
call
(
[
'
ar
'
'
-
x
'
path
]
)
  
assert
retcode
=
=
0
test
.
pass_test
(
)
