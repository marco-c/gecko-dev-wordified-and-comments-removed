from
pyasn1
.
type
import
univ
from
pyasn1
.
codec
.
cer
import
encoder
__all__
=
[
'
encode
'
]
class
SetOfEncoder
(
encoder
.
SetOfEncoder
)
:
    
staticmethod
    
def
_sortComponents
(
components
)
:
        
return
sorted
(
components
key
=
lambda
x
:
isinstance
(
x
univ
.
Choice
)
and
x
.
getComponent
(
)
.
tagSet
or
x
.
tagSet
)
tagMap
=
encoder
.
tagMap
.
copy
(
)
tagMap
.
update
(
{
    
univ
.
SetOf
.
tagSet
:
SetOfEncoder
(
)
}
)
typeMap
=
encoder
.
typeMap
.
copy
(
)
typeMap
.
update
(
{
    
univ
.
Set
.
typeId
:
SetOfEncoder
(
)
    
univ
.
SetOf
.
typeId
:
SetOfEncoder
(
)
}
)
class
Encoder
(
encoder
.
Encoder
)
:
    
fixedDefLengthMode
=
True
    
fixedChunkSize
=
0
encode
=
Encoder
(
tagMap
typeMap
)
