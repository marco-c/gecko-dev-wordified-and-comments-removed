from
pyasn1
import
error
from
pyasn1
.
codec
.
cer
import
encoder
from
pyasn1
.
type
import
univ
__all__
=
[
'
encode
'
]
class
SetEncoder
(
encoder
.
SetEncoder
)
:
    
staticmethod
    
def
_componentSortKey
(
componentAndType
)
:
        
"
"
"
Sort
SET
components
by
tag
        
Sort
depending
on
the
actual
Choice
value
(
dynamic
sort
)
        
"
"
"
        
component
asn1Spec
=
componentAndType
        
if
asn1Spec
is
None
:
            
compType
=
component
        
else
:
            
compType
=
asn1Spec
        
if
compType
.
typeId
=
=
univ
.
Choice
.
typeId
and
not
compType
.
tagSet
:
            
if
asn1Spec
is
None
:
                
return
component
.
getComponent
(
)
.
tagSet
            
else
:
                
names
=
[
namedType
.
name
for
namedType
in
asn1Spec
.
componentType
.
namedTypes
                         
if
namedType
.
name
in
component
]
                
if
len
(
names
)
!
=
1
:
                    
raise
error
.
PyAsn1Error
(
                        
'
%
s
components
for
Choice
at
%
r
'
%
(
len
(
names
)
and
'
Multiple
'
or
'
None
'
component
)
)
                
return
asn1Spec
[
names
[
0
]
]
.
tagSet
        
else
:
            
return
compType
.
tagSet
tagMap
=
encoder
.
tagMap
.
copy
(
)
tagMap
.
update
(
{
    
univ
.
Set
.
tagSet
:
SetEncoder
(
)
}
)
typeMap
=
encoder
.
typeMap
.
copy
(
)
typeMap
.
update
(
{
    
univ
.
Set
.
typeId
:
SetEncoder
(
)
}
)
class
Encoder
(
encoder
.
Encoder
)
:
    
fixedDefLengthMode
=
True
    
fixedChunkSize
=
0
encode
=
Encoder
(
tagMap
typeMap
)
