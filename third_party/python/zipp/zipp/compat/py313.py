import
functools
import
sys
def
identity
(
x
)
:
    
return
x
def
apply
(
transform
)
:
    
def
wrap
(
func
)
:
        
return
functools
.
wraps
(
func
)
(
compose
(
transform
func
)
)
    
return
wrap
def
compose
(
*
funcs
)
:
    
def
compose_two
(
f1
f2
)
:
        
return
lambda
*
args
*
*
kwargs
:
f1
(
f2
(
*
args
*
*
kwargs
)
)
    
return
functools
.
reduce
(
compose_two
funcs
)
def
replace
(
pattern
)
:
    
r
"
"
"
    
>
>
>
replace
(
r
'
foo
\
z
'
)
    
'
foo
\
\
Z
'
    
"
"
"
    
return
pattern
[
:
-
2
]
+
pattern
[
-
2
:
]
.
replace
(
r
'
\
z
'
r
'
\
Z
'
)
legacy_end_marker
=
apply
(
replace
)
if
sys
.
version_info
<
(
3
14
)
else
identity
