import
datetime
as
_datetime
from
.
_utils
import
parse_rfc3339
from
.
container
import
Container
from
.
items
import
AoT
from
.
items
import
Comment
from
.
items
import
InlineTable
from
.
items
import
Item
as
_Item
from
.
items
import
Array
from
.
items
import
Bool
from
.
items
import
Key
from
.
items
import
Date
from
.
items
import
DateTime
from
.
items
import
Float
from
.
items
import
Table
from
.
items
import
Integer
from
.
items
import
Trivia
from
.
items
import
Whitespace
from
.
items
import
String
from
.
items
import
item
from
.
parser
import
Parser
from
.
toml_document
import
TOMLDocument
as
_TOMLDocument
from
.
items
import
Time
def
loads
(
string
)
:
    
"
"
"
    
Parses
a
string
into
a
TOMLDocument
.
    
Alias
for
parse
(
)
.
    
"
"
"
    
return
parse
(
string
)
def
dumps
(
data
)
:
    
"
"
"
    
Dumps
a
TOMLDocument
into
a
string
.
    
"
"
"
    
if
not
isinstance
(
data
_TOMLDocument
)
and
isinstance
(
data
dict
)
:
        
data
=
item
(
data
)
    
return
data
.
as_string
(
)
def
parse
(
string
)
:
    
"
"
"
    
Parses
a
string
into
a
TOMLDocument
.
    
"
"
"
    
return
Parser
(
string
)
.
parse
(
)
def
document
(
)
:
    
"
"
"
    
Returns
a
new
TOMLDocument
instance
.
    
"
"
"
    
return
_TOMLDocument
(
)
def
integer
(
raw
)
:
    
return
item
(
int
(
raw
)
)
def
float_
(
raw
)
:
    
return
item
(
float
(
raw
)
)
def
boolean
(
raw
)
:
    
return
item
(
raw
=
=
"
true
"
)
def
string
(
raw
)
:
    
return
item
(
raw
)
def
date
(
raw
)
:
    
value
=
parse_rfc3339
(
raw
)
    
if
not
isinstance
(
value
_datetime
.
date
)
:
        
raise
ValueError
(
"
date
(
)
only
accepts
date
strings
.
"
)
    
return
item
(
value
)
def
time
(
raw
)
:
    
value
=
parse_rfc3339
(
raw
)
    
if
not
isinstance
(
value
_datetime
.
time
)
:
        
raise
ValueError
(
"
time
(
)
only
accepts
time
strings
.
"
)
    
return
item
(
value
)
def
datetime
(
raw
)
:
    
value
=
parse_rfc3339
(
raw
)
    
if
not
isinstance
(
value
_datetime
.
datetime
)
:
        
raise
ValueError
(
"
datetime
(
)
only
accepts
datetime
strings
.
"
)
    
return
item
(
value
)
def
array
(
raw
=
None
)
:
    
if
raw
is
None
:
        
raw
=
"
[
]
"
    
return
value
(
raw
)
def
table
(
)
:
    
return
Table
(
Container
(
)
Trivia
(
)
False
)
def
inline_table
(
)
:
    
return
InlineTable
(
Container
(
)
Trivia
(
)
new
=
True
)
def
aot
(
)
:
    
return
AoT
(
[
]
)
def
key
(
k
)
:
    
return
Key
(
k
)
def
value
(
raw
)
:
    
return
Parser
(
raw
)
.
_parse_value
(
)
def
key_value
(
src
)
:
    
return
Parser
(
src
)
.
_parse_key_value
(
)
def
ws
(
src
)
:
    
return
Whitespace
(
src
fixed
=
True
)
def
nl
(
)
:
    
return
ws
(
"
\
n
"
)
def
comment
(
string
)
:
    
return
Comment
(
Trivia
(
comment_ws
=
"
"
comment
=
"
#
"
+
string
)
)
