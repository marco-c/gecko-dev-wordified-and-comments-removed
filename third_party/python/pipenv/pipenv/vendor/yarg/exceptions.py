#
-
*
-
coding
:
utf
-
8
-
*
-
from
requests
.
exceptions
import
HTTPError
as
RHTTPError
class
YargException
(
Exception
)
:
    
pass
class
HTTPError
(
YargException
RHTTPError
)
:
    
"
"
"
    
A
catchall
HTTPError
exception
to
handle
HTTP
errors
    
when
using
:
meth
:
yarg
.
get
.
    
This
exception
is
also
loaded
at
:
class
:
yarg
.
HTTPError
    
for
ease
of
access
.
    
:
member
:
status_code
    
"
"
"
    
def
__init__
(
self
*
args
*
*
kwargs
)
:
        
for
key
val
in
kwargs
.
items
(
)
:
            
setattr
(
self
key
val
)
        
if
hasattr
(
self
'
status_code
'
)
:
            
setattr
(
self
'
errno
'
self
.
status_code
)
        
if
hasattr
(
self
'
reason
'
)
:
            
setattr
(
self
'
message
'
self
.
reason
)
    
def
__str__
(
self
)
:
        
return
self
.
__repr__
(
)
    
def
__repr__
(
self
)
:
        
if
hasattr
(
self
'
status_code
'
)
and
hasattr
(
self
'
reason
'
)
:
            
return
"
<
HTTPError
{
0
}
{
1
}
>
"
.
format
(
self
.
status_code
self
.
reason
)
        
return
"
<
HTTPError
>
"
