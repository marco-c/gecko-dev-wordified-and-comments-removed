use
std
:
:
arch
:
:
asm
;
#
[
cfg
(
any
(
target_arch
=
"
x86
"
target_arch
=
"
x86_64
"
)
)
]
const
NOP_INSTRUCTION_SIZE
:
usize
=
1
;
#
[
cfg
(
target_arch
=
"
aarch64
"
)
]
const
NOP_INSTRUCTION_SIZE
:
usize
=
4
;
#
[
inline
(
never
)
]
fn
nop_sled
(
)
{
unsafe
{
asm
!
(
"
nop
"
"
nop
"
"
ret
"
)
}
}
#
[
inline
(
never
)
]
fn
indirect_call
(
func
:
fn
(
)
)
{
func
(
)
;
}
fn
main
(
)
{
let
fptr
=
unsafe
{
std
:
:
mem
:
:
transmute
:
:
<
usize
fn
(
)
>
(
nop_sled
as
usize
+
NOP_INSTRUCTION_SIZE
)
}
;
indirect_call
(
fptr
)
;
eprintln
!
(
"
failed
"
)
;
}
