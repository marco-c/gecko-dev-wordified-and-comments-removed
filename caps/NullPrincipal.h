#
ifndef
mozilla_NullPrincipal_h
#
define
mozilla_NullPrincipal_h
#
include
"
nsIPrincipal
.
h
"
#
include
"
nsJSPrincipals
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
mozilla
/
BasePrincipal
.
h
"
#
include
"
gtest
/
MozGtestFriend
.
h
"
class
nsIDocShell
;
class
nsIURI
;
namespace
Json
{
class
Value
;
}
#
define
NS_NULLPRINCIPAL_CID
\
{
\
0xbd066e5f
0x146f
0x4472
{
\
0x83
0x31
0x7b
0xfd
0x05
0xb1
0xed
0x90
\
}
\
}
#
define
NS_NULLPRINCIPAL_SCHEME
"
moz
-
nullprincipal
"
namespace
mozilla
{
class
NullPrincipal
final
:
public
BasePrincipal
{
public
:
static
PrincipalKind
Kind
(
)
{
return
eNullPrincipal
;
}
NS_IMETHOD
QueryInterface
(
REFNSIID
aIID
void
*
*
aInstancePtr
)
override
;
uint32_t
GetHashValue
(
)
override
;
NS_IMETHOD
GetURI
(
nsIURI
*
*
aURI
)
override
;
NS_IMETHOD
GetIsOriginPotentiallyTrustworthy
(
bool
*
aResult
)
override
;
NS_IMETHOD
GetDomain
(
nsIURI
*
*
aDomain
)
override
;
NS_IMETHOD
SetDomain
(
nsIURI
*
aDomain
)
override
;
NS_IMETHOD
GetBaseDomain
(
nsACString
&
aBaseDomain
)
override
;
NS_IMETHOD
GetAddonId
(
nsAString
&
aAddonId
)
override
;
NS_IMETHOD
GetPrecursorPrincipal
(
nsIPrincipal
*
*
aPrecursor
)
override
;
static
already_AddRefed
<
NullPrincipal
>
CreateWithInheritedAttributes
(
nsIPrincipal
*
aInheritFrom
)
;
static
already_AddRefed
<
NullPrincipal
>
CreateWithInheritedAttributes
(
nsIDocShell
*
aDocShell
bool
aIsFirstParty
=
false
)
;
static
already_AddRefed
<
NullPrincipal
>
CreateWithInheritedAttributes
(
const
OriginAttributes
&
aOriginAttributes
bool
aIsFirstParty
=
false
)
;
static
already_AddRefed
<
NullPrincipal
>
Create
(
const
OriginAttributes
&
aOriginAttributes
nsIURI
*
aURI
=
nullptr
)
;
static
already_AddRefed
<
NullPrincipal
>
CreateWithoutOriginAttributes
(
)
;
static
already_AddRefed
<
nsIURI
>
CreateURI
(
nsIPrincipal
*
aPrecursor
=
nullptr
const
nsID
*
aPrincipalID
=
nullptr
)
;
virtual
nsresult
GetScriptLocation
(
nsACString
&
aStr
)
override
;
nsresult
GetSiteIdentifier
(
SiteIdentifier
&
aSite
)
override
{
aSite
.
Init
(
this
)
;
return
NS_OK
;
}
virtual
nsresult
PopulateJSONObject
(
Json
:
:
Value
&
aObject
)
override
;
enum
SerializableKeys
:
uint8_t
{
eSpec
=
0
eSuffix
eMax
=
eSuffix
}
;
typedef
mozilla
:
:
BasePrincipal
:
:
KeyValT
<
SerializableKeys
>
KeyVal
;
static
already_AddRefed
<
BasePrincipal
>
FromProperties
(
nsTArray
<
NullPrincipal
:
:
KeyVal
>
&
aFields
)
;
class
Deserializer
:
public
BasePrincipal
:
:
Deserializer
{
public
:
NS_IMETHOD
Read
(
nsIObjectInputStream
*
aStream
)
override
;
}
;
protected
:
NullPrincipal
(
nsIURI
*
aURI
const
nsACString
&
aOriginNoSuffix
const
OriginAttributes
&
aOriginAttributes
)
;
virtual
~
NullPrincipal
(
)
=
default
;
bool
SubsumesInternal
(
nsIPrincipal
*
aOther
DocumentDomainConsideration
aConsideration
)
override
{
MOZ_ASSERT
(
aOther
)
;
return
FastEquals
(
aOther
)
;
}
bool
MayLoadInternal
(
nsIURI
*
aURI
)
override
;
const
nsCOMPtr
<
nsIURI
>
mURI
;
private
:
FRIEND_TEST
(
OriginAttributes
NullPrincipal
)
;
FRIEND_TEST
(
NullPrincipalPrecursor
EscapingRoundTrips
)
;
static
void
EscapePrecursorQuery
(
nsACString
&
aPrecursorQuery
)
;
static
void
UnescapePrecursorQuery
(
nsACString
&
aPrecursorQuery
)
;
static
already_AddRefed
<
NullPrincipal
>
CreateInternal
(
const
OriginAttributes
&
aOriginAttributes
bool
aIsFirstParty
nsIURI
*
aURI
=
nullptr
nsIPrincipal
*
aPrecursor
=
nullptr
)
;
}
;
}
#
endif
