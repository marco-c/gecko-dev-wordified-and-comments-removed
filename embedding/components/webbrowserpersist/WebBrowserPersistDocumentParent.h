#
ifndef
WebBrowserPersistDocumentParent_h__
#
define
WebBrowserPersistDocumentParent_h__
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
PWebBrowserPersistDocumentParent
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIWebBrowserPersistDocument
.
h
"
namespace
mozilla
{
class
WebBrowserPersistRemoteDocument
;
class
WebBrowserPersistDocumentParent
final
:
public
PWebBrowserPersistDocumentParent
{
public
:
WebBrowserPersistDocumentParent
(
)
;
virtual
~
WebBrowserPersistDocumentParent
(
)
;
void
SetOnReady
(
nsIWebBrowserPersistDocumentReceiver
*
aOnReady
)
;
using
Attrs
=
WebBrowserPersistDocumentAttrs
;
virtual
bool
RecvAttributes
(
const
Attrs
&
aAttrs
const
OptionalInputStreamParams
&
aPostData
nsTArray
<
FileDescriptor
>
&
&
aPostFiles
)
override
;
virtual
bool
RecvInitFailure
(
const
nsresult
&
aFailure
)
override
;
virtual
PWebBrowserPersistResourcesParent
*
AllocPWebBrowserPersistResourcesParent
(
)
override
;
virtual
bool
DeallocPWebBrowserPersistResourcesParent
(
PWebBrowserPersistResourcesParent
*
aActor
)
override
;
virtual
PWebBrowserPersistSerializeParent
*
AllocPWebBrowserPersistSerializeParent
(
const
WebBrowserPersistURIMap
&
aMap
const
nsCString
&
aRequestedContentType
const
uint32_t
&
aEncoderFlags
const
uint32_t
&
aWrapColumn
)
override
;
virtual
bool
DeallocPWebBrowserPersistSerializeParent
(
PWebBrowserPersistSerializeParent
*
aActor
)
override
;
virtual
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
private
:
nsCOMPtr
<
nsIWebBrowserPersistDocumentReceiver
>
mOnReady
;
WebBrowserPersistRemoteDocument
*
mReflection
;
}
;
}
#
endif
