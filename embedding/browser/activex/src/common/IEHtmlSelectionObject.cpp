#
include
"
stdafx
.
h
"
#
include
"
IEHtmlSelectionObject
.
h
"
#
include
"
IEHtmlTxtRange
.
h
"
CIEHtmlSelectionObject
:
:
CIEHtmlSelectionObject
(
)
{
}
CIEHtmlSelectionObject
:
:
~
CIEHtmlSelectionObject
(
)
{
}
void
CIEHtmlSelectionObject
:
:
SetSelection
(
nsISelection
*
pSelection
)
{
mSelection
=
pSelection
;
}
void
CIEHtmlSelectionObject
:
:
SetDOMDocumentRange
(
nsIDOMDocumentRange
*
pDOMDocumentRange
)
{
mDOMDocumentRange
=
pDOMDocumentRange
;
}
HRESULT
STDMETHODCALLTYPE
CIEHtmlSelectionObject
:
:
createRange
(
IDispatch
__RPC_FAR
*
__RPC_FAR
*
range
)
{
if
(
range
=
=
NULL
)
return
E_INVALIDARG
;
*
range
=
NULL
;
if
(
!
mSelection
)
return
E_FAIL
;
nsCOMPtr
<
nsIDOMRange
>
domRange
;
int
rc
;
mSelection
-
>
GetRangeCount
(
&
rc
)
;
if
(
rc
>
0
)
mSelection
-
>
GetRangeAt
(
0
getter_AddRefs
(
domRange
)
)
;
else
{
mDOMDocumentRange
-
>
CreateRange
(
getter_AddRefs
(
domRange
)
)
;
}
if
(
!
domRange
)
return
E_FAIL
;
CComBSTR
strType
;
get_type
(
&
strType
)
;
if
(
wcscmp
(
OLE2W
(
strType
)
L
"
Control
"
)
=
=
0
)
{
CIEHtmlControlRangeInstance
*
pControlRange
=
NULL
;
CIEHtmlControlRangeInstance
:
:
CreateInstance
(
&
pControlRange
)
;
if
(
!
pControlRange
)
return
E_FAIL
;
pControlRange
-
>
SetRange
(
domRange
)
;
pControlRange
-
>
QueryInterface
(
IID_IDispatch
(
void
*
*
)
range
)
;
}
else
{
CIEHtmlTxtRangeInstance
*
pTxtRange
=
NULL
;
CIEHtmlTxtRangeInstance
:
:
CreateInstance
(
&
pTxtRange
)
;
if
(
!
pTxtRange
)
return
E_FAIL
;
pTxtRange
-
>
SetRange
(
domRange
)
;
pTxtRange
-
>
QueryInterface
(
IID_IDispatch
(
void
*
*
)
range
)
;
}
return
S_OK
;
}
HRESULT
STDMETHODCALLTYPE
CIEHtmlSelectionObject
:
:
get_type
(
BSTR
__RPC_FAR
*
p
)
{
static
NS_NAMED_LITERAL_STRING
(
strText
"
Text
"
)
;
static
NS_NAMED_LITERAL_STRING
(
strControl
"
Control
"
)
;
static
NS_NAMED_LITERAL_STRING
(
strNone
"
None
"
)
;
nsCOMPtr
<
nsIDOMRange
>
domRange
;
nsCOMPtr
<
nsIDOMNode
>
domNode
;
if
(
p
=
=
NULL
)
return
E_INVALIDARG
;
*
p
=
NULL
;
int
rc
;
mSelection
-
>
GetRangeCount
(
&
rc
)
;
if
(
rc
<
1
)
{
*
p
=
SysAllocString
(
strNone
.
get
(
)
)
;
return
p
?
S_OK
:
E_OUTOFMEMORY
;
}
mSelection
-
>
GetRangeAt
(
0
getter_AddRefs
(
domRange
)
)
;
if
(
!
domRange
)
return
E_FAIL
;
domRange
-
>
GetStartContainer
(
getter_AddRefs
(
domNode
)
)
;
if
(
!
domNode
)
return
E_FAIL
;
unsigned
short
nodeType
;
domNode
-
>
GetNodeType
(
&
nodeType
)
;
switch
(
nodeType
)
{
case
nsIDOMNode
:
:
ELEMENT_NODE
:
*
p
=
SysAllocString
(
strControl
.
get
(
)
)
;
break
;
case
nsIDOMNode
:
:
TEXT_NODE
:
*
p
=
SysAllocString
(
strText
.
get
(
)
)
;
break
;
default
:
return
E_UNEXPECTED
;
}
return
p
?
S_OK
:
E_OUTOFMEMORY
;
}
HRESULT
STDMETHODCALLTYPE
CIEHtmlSelectionObject
:
:
empty
(
)
{
if
(
!
mSelection
)
return
E_FAIL
;
mSelection
-
>
RemoveAllRanges
(
)
;
return
S_OK
;
}
HRESULT
STDMETHODCALLTYPE
CIEHtmlSelectionObject
:
:
clear
(
)
{
if
(
!
mSelection
)
return
E_FAIL
;
mSelection
-
>
DeleteFromDocument
(
)
;
return
S_OK
;
}
