#
ifndef
BROTLI_ENC_ENCODE_H_
#
define
BROTLI_ENC_ENCODE_H_
#
include
<
string
>
#
include
<
vector
>
#
include
"
.
/
command
.
h
"
#
include
"
.
/
hash
.
h
"
#
include
"
.
/
ringbuffer
.
h
"
#
include
"
.
/
static_dict
.
h
"
#
include
"
.
/
streams
.
h
"
#
include
"
.
/
types
.
h
"
namespace
brotli
{
static
const
int
kMaxWindowBits
=
24
;
static
const
int
kMinWindowBits
=
10
;
static
const
int
kMinInputBlockBits
=
16
;
static
const
int
kMaxInputBlockBits
=
24
;
struct
BrotliParams
{
BrotliParams
(
void
)
:
mode
(
MODE_GENERIC
)
quality
(
11
)
lgwin
(
22
)
lgblock
(
0
)
enable_dictionary
(
true
)
enable_transforms
(
false
)
greedy_block_split
(
false
)
enable_context_modeling
(
true
)
{
}
enum
Mode
{
MODE_GENERIC
=
0
MODE_TEXT
=
1
MODE_FONT
=
2
}
;
Mode
mode
;
int
quality
;
int
lgwin
;
int
lgblock
;
bool
enable_dictionary
;
bool
enable_transforms
;
bool
greedy_block_split
;
bool
enable_context_modeling
;
}
;
class
BrotliCompressor
{
public
:
explicit
BrotliCompressor
(
BrotliParams
params
)
;
~
BrotliCompressor
(
void
)
;
size_t
input_block_size
(
void
)
const
{
return
size_t
(
1
)
<
<
params_
.
lgblock
;
}
bool
WriteMetaBlock
(
const
size_t
input_size
const
uint8_t
*
input_buffer
const
bool
is_last
size_t
*
encoded_size
uint8_t
*
encoded_buffer
)
;
bool
WriteMetadata
(
const
size_t
input_size
const
uint8_t
*
input_buffer
const
bool
is_last
size_t
*
encoded_size
uint8_t
*
encoded_buffer
)
;
bool
FinishStream
(
size_t
*
encoded_size
uint8_t
*
encoded_buffer
)
;
void
CopyInputToRingBuffer
(
const
size_t
input_size
const
uint8_t
*
input_buffer
)
;
bool
WriteBrotliData
(
const
bool
is_last
const
bool
force_flush
size_t
*
out_size
uint8_t
*
*
output
)
;
void
BrotliSetCustomDictionary
(
size_t
size
const
uint8_t
*
dict
)
;
void
WriteStreamHeader
(
void
)
{
}
private
:
uint8_t
*
GetBrotliStorage
(
size_t
size
)
;
int
*
GetHashTable
(
int
quality
size_t
input_size
size_t
*
table_size
)
;
BrotliParams
params_
;
Hashers
*
hashers_
;
int
hash_type_
;
uint64_t
input_pos_
;
RingBuffer
*
ringbuffer_
;
size_t
cmd_alloc_size_
;
Command
*
commands_
;
size_t
num_commands_
;
size_t
num_literals_
;
size_t
last_insert_len_
;
uint64_t
last_flush_pos_
;
uint64_t
last_processed_pos_
;
int
dist_cache_
[
4
]
;
int
saved_dist_cache_
[
4
]
;
uint8_t
last_byte_
;
uint8_t
last_byte_bits_
;
uint8_t
prev_byte_
;
uint8_t
prev_byte2_
;
size_t
storage_size_
;
uint8_t
*
storage_
;
int
small_table_
[
1
<
<
10
]
;
int
*
large_table_
;
uint8_t
cmd_depths_
[
128
]
;
uint16_t
cmd_bits_
[
128
]
;
uint8_t
cmd_code_
[
512
]
;
size_t
cmd_code_numbits_
;
uint32_t
*
command_buf_
;
uint8_t
*
literal_buf_
;
int
is_last_block_emitted_
;
}
;
int
BrotliCompressBuffer
(
BrotliParams
params
size_t
input_size
const
uint8_t
*
input_buffer
size_t
*
encoded_size
uint8_t
*
encoded_buffer
)
;
int
BrotliCompress
(
BrotliParams
params
BrotliIn
*
in
BrotliOut
*
out
)
;
int
BrotliCompressWithCustomDictionary
(
size_t
dictsize
const
uint8_t
*
dict
BrotliParams
params
BrotliIn
*
in
BrotliOut
*
out
)
;
}
#
endif
