#
ifndef
BROTLI_DEC_DECODE_H_
#
define
BROTLI_DEC_DECODE_H_
#
include
"
.
/
types
.
h
"
#
if
defined
(
__cplusplus
)
|
|
defined
(
c_plusplus
)
extern
"
C
"
{
#
endif
typedef
struct
BrotliStateStruct
BrotliState
;
typedef
enum
{
BROTLI_RESULT_ERROR
=
0
BROTLI_RESULT_SUCCESS
=
1
BROTLI_RESULT_NEEDS_MORE_INPUT
=
2
BROTLI_RESULT_NEEDS_MORE_OUTPUT
=
3
}
BrotliResult
;
#
define
BROTLI_ERROR_CODES_LIST
(
BROTLI_ERROR_CODE
SEPARATOR
)
\
BROTLI_ERROR_CODE
(
_
NO_ERROR
0
)
SEPARATOR
\
/
*
Same
as
BrotliResult
values
*
/
\
BROTLI_ERROR_CODE
(
_
SUCCESS
1
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_
NEEDS_MORE_INPUT
2
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_
NEEDS_MORE_OUTPUT
3
)
SEPARATOR
\
\
/
*
Errors
caused
by
invalid
input
*
/
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
EXUBERANT_NIBBLE
-
1
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
RESERVED
-
2
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
EXUBERANT_META_NIBBLE
-
3
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
SIMPLE_HUFFMAN_ALPHABET
-
4
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
SIMPLE_HUFFMAN_SAME
-
5
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
CL_SPACE
-
6
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
HUFFMAN_SPACE
-
7
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
CONTEXT_MAP_REPEAT
-
8
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
BLOCK_LENGTH_1
-
9
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
BLOCK_LENGTH_2
-
10
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
TRANSFORM
-
11
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
DICTIONARY
-
12
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
WINDOW_BITS
-
13
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
PADDING_1
-
14
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_FORMAT_
PADDING_2
-
15
)
SEPARATOR
\
\
/
*
-
16
.
.
-
20
codes
are
reserved
*
/
\
\
/
*
Memory
allocation
problems
*
/
\
BROTLI_ERROR_CODE
(
_ERROR_ALLOC_
CONTEXT_MODES
-
21
)
SEPARATOR
\
/
*
Literal
insert
and
distance
trees
together
*
/
\
BROTLI_ERROR_CODE
(
_ERROR_ALLOC_
TREE_GROUPS
-
22
)
SEPARATOR
\
/
*
-
23
.
.
-
24
codes
are
reserved
for
distinct
tree
groups
*
/
\
BROTLI_ERROR_CODE
(
_ERROR_ALLOC_
CONTEXT_MAP
-
25
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_ALLOC_
RING_BUFFER_1
-
26
)
SEPARATOR
\
BROTLI_ERROR_CODE
(
_ERROR_ALLOC_
RING_BUFFER_2
-
27
)
SEPARATOR
\
/
*
-
28
.
.
-
29
codes
are
reserved
for
dynamic
ringbuffer
allocation
*
/
\
BROTLI_ERROR_CODE
(
_ERROR_ALLOC_
BLOCK_TYPE_TREES
-
30
)
SEPARATOR
\
\
/
*
"
Impossible
"
states
*
/
\
BROTLI_ERROR_CODE
(
_ERROR_
UNREACHABLE
-
31
)
typedef
enum
{
#
define
_BROTLI_COMMA
#
define
_BROTLI_ERROR_CODE_ENUM_ITEM
(
PREFIX
NAME
CODE
)
\
BROTLI
#
#
PREFIX
#
#
NAME
=
CODE
BROTLI_ERROR_CODES_LIST
(
_BROTLI_ERROR_CODE_ENUM_ITEM
_BROTLI_COMMA
)
#
undef
_BROTLI_ERROR_CODE_ENUM_ITEM
#
undef
_BROTLI_COMMA
}
BrotliErrorCode
;
#
define
BROTLI_LAST_ERROR_CODE
BROTLI_ERROR_UNREACHABLE
BrotliState
*
BrotliCreateState
(
brotli_alloc_func
alloc_func
brotli_free_func
free_func
void
*
opaque
)
;
void
BrotliDestroyState
(
BrotliState
*
state
)
;
int
BrotliDecompressedSize
(
size_t
encoded_size
const
uint8_t
*
encoded_buffer
size_t
*
decoded_size
)
;
BrotliResult
BrotliDecompressBuffer
(
size_t
encoded_size
const
uint8_t
*
encoded_buffer
size_t
*
decoded_size
uint8_t
*
decoded_buffer
)
;
BrotliResult
BrotliDecompressStream
(
size_t
*
available_in
const
uint8_t
*
*
next_in
size_t
*
available_out
uint8_t
*
*
next_out
size_t
*
total_out
BrotliState
*
s
)
;
void
BrotliSetCustomDictionary
(
size_t
size
const
uint8_t
*
dict
BrotliState
*
s
)
;
int
BrotliStateIsStreamStart
(
const
BrotliState
*
s
)
;
int
BrotliStateIsStreamEnd
(
const
BrotliState
*
s
)
;
BrotliErrorCode
BrotliGetErrorCode
(
const
BrotliState
*
s
)
;
const
char
*
BrotliErrorString
(
BrotliErrorCode
c
)
;
#
if
defined
(
__cplusplus
)
|
|
defined
(
c_plusplus
)
}
#
endif
#
endif
