function
makeBuffer
(
length
)
{
return
new
Array
(
length
+
1
)
.
join
(
"
x
"
)
;
}
function
checkWarning
(
pref
buffer
)
{
return
new
Promise
(
resolve
=
>
{
let
complete
=
false
;
let
listener
=
{
observe
(
event
)
{
let
message
=
event
.
message
;
if
(
!
(
message
.
startsWith
(
"
Warning
:
attempting
to
write
"
)
&
&
message
.
includes
(
pref
)
)
)
{
return
;
}
if
(
complete
)
{
return
;
}
complete
=
true
;
info
(
"
Warning
while
setting
"
+
pref
)
;
Services
.
console
.
unregisterListener
(
listener
)
;
resolve
(
true
)
;
}
}
;
do_timeout
(
1000
function
(
)
{
if
(
complete
)
{
return
;
}
complete
=
true
;
info
(
"
No
warning
while
setting
"
+
pref
)
;
Services
.
console
.
unregisterListener
(
listener
)
;
resolve
(
false
)
;
}
)
;
Services
.
console
.
registerListener
(
listener
)
;
Services
.
prefs
.
setCharPref
(
pref
buffer
)
;
}
)
;
}
add_task
(
async
function
(
)
{
info
(
"
Checking
that
a
simple
change
doesn
'
t
cause
a
warning
"
)
;
let
buf
=
makeBuffer
(
100
)
;
let
warned
=
await
checkWarning
(
"
string
.
accept
"
buf
)
;
Assert
.
ok
(
!
warned
)
;
info
(
"
Checking
that
a
large
change
causes
a
warning
"
)
;
buf
=
makeBuffer
(
32
*
1024
)
;
warned
=
await
checkWarning
(
"
string
.
warn
"
buf
)
;
Assert
.
ok
(
warned
)
;
}
)
;
