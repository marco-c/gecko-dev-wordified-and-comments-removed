const
PREF_INVALID
=
0
;
const
PREF_BOOL
=
128
;
const
PREF_INT
=
64
;
const
PREF_STRING
=
32
;
function
run_test
(
)
{
var
ps
=
Cc
[
"
mozilla
.
org
/
preferences
-
service
;
1
"
]
.
getService
(
Ci
.
nsIPrefService
)
;
let
defaultBranch
=
ps
.
getDefaultBranch
(
"
"
)
;
let
userBranch
=
ps
.
getBranch
(
"
"
)
;
let
prefFile
=
do_get_profile
(
)
;
prefFile
.
append
(
"
prefs
.
js
"
)
;
ps
.
savePrefFile
(
null
)
;
Assert
.
ok
(
!
ps
.
dirty
)
;
userBranch
.
setBoolPref
(
"
DirtyTest
.
new
.
bool
"
true
)
;
Assert
.
ok
(
ps
.
dirty
)
;
ps
.
savePrefFile
(
null
)
;
userBranch
.
setBoolPref
(
"
DirtyTest
.
new
.
bool
"
true
)
;
Assert
.
ok
(
!
ps
.
dirty
)
;
userBranch
.
setIntPref
(
"
DirtyTest
.
new
.
int
"
1
)
;
Assert
.
ok
(
ps
.
dirty
)
;
ps
.
savePrefFile
(
null
)
;
userBranch
.
setIntPref
(
"
DirtyTest
.
new
.
int
"
1
)
;
Assert
.
ok
(
!
ps
.
dirty
)
;
userBranch
.
setCharPref
(
"
DirtyTest
.
new
.
char
"
"
oop
"
)
;
Assert
.
ok
(
ps
.
dirty
)
;
ps
.
savePrefFile
(
null
)
;
userBranch
.
setCharPref
(
"
DirtyTest
.
new
.
char
"
"
oop
"
)
;
Assert
.
ok
(
!
ps
.
dirty
)
;
userBranch
.
setBoolPref
(
"
DirtyTest
.
new
.
char
"
false
)
;
Assert
.
ok
(
ps
.
dirty
)
;
ps
.
savePrefFile
(
null
)
;
defaultBranch
.
setBoolPref
(
"
DirtyTest
.
existing
.
bool
"
true
)
;
Assert
.
ok
(
!
ps
.
dirty
)
;
do_check_throws
(
function
(
)
{
userBranch
.
setCharPref
(
"
DirtyTest
.
existing
.
bool
"
"
boo
"
)
;
}
Cr
.
NS_ERROR_UNEXPECTED
)
;
Assert
.
ok
(
!
ps
.
dirty
)
;
userBranch
.
setBoolPref
(
"
DirtyTest
.
existing
.
bool
"
true
)
;
Assert
.
ok
(
!
ps
.
dirty
)
;
userBranch
.
setBoolPref
(
"
DirtyTest
.
existing
.
bool
"
false
)
;
Assert
.
ok
(
ps
.
dirty
)
;
ps
.
savePrefFile
(
null
)
;
userBranch
.
setBoolPref
(
"
DirtyTest
.
existing
.
bool
"
true
)
;
Assert
.
ok
(
ps
.
dirty
)
;
ps
.
savePrefFile
(
null
)
;
}
