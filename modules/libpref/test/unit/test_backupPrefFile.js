"
use
strict
"
;
add_task
(
async
function
test_backupPrefFile
(
)
{
Services
.
prefs
.
setBoolPref
(
"
test
.
backup
"
true
)
;
let
backupFilePath
=
PathUtils
.
join
(
PathUtils
.
tempDir
"
prefs
-
backup
.
js
"
)
;
let
backupFile
=
await
IOUtils
.
getFile
(
backupFilePath
)
;
await
Services
.
prefs
.
backupPrefFile
(
backupFile
)
;
let
backupContent
=
await
IOUtils
.
read
(
backupFilePath
{
encoding
:
"
utf
-
8
"
}
)
;
let
sawTestValue
=
false
;
let
observer
=
{
onStringPref
(
)
{
}
onIntPref
(
)
{
}
onBoolPref
(
kind
name
value
_isSticky
_isLocked
)
{
if
(
name
=
=
"
test
.
backup
"
&
&
value
)
{
sawTestValue
=
true
;
}
}
onError
(
message
)
{
Assert
.
ok
(
false
"
Error
while
parsing
backup
file
:
"
+
message
)
;
}
}
;
Services
.
prefs
.
parsePrefsFromBuffer
(
backupContent
observer
)
;
Assert
.
ok
(
sawTestValue
"
The
backup
file
contains
the
expected
preference
value
.
"
)
;
await
IOUtils
.
remove
(
backupFilePath
)
;
}
)
;
