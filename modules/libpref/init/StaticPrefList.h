VARCACHE_PREF
(
"
accessibility
.
monoaudio
.
enable
"
accessibility_monoaudio_enable
bool
false
)
#
ifdef
RELEASE_OR_BETA
#
define
PREF_VALUE
false
#
else
#
define
PREF_VALUE
true
#
endif
VARCACHE_PREF
(
"
full
-
screen
-
api
.
unprefix
.
enabled
"
full_screen_api_unprefix_enabled
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
gfx
.
font_rendering
.
opentype_svg
.
enabled
"
gfx_font_rendering_opentype_svg_enabled
bool
true
)
VARCACHE_PREF
(
"
html5
.
offmainthread
"
html5_offmainthread
bool
true
)
VARCACHE_PREF
(
"
html5
.
flushtimer
.
initialdelay
"
html5_flushtimer_initialdelay
int32_t
120
)
VARCACHE_PREF
(
"
html5
.
flushtimer
.
subsequentdelay
"
html5_flushtimer_subsequentdelay
int32_t
120
)
VARCACHE_PREF
(
"
layout
.
css
.
parsing
.
parallel
"
layout_css_parsing_parallel
bool
false
)
VARCACHE_PREF
(
"
layout
.
css
.
font
-
display
.
enabled
"
layout_css_font_display_enabled
bool
true
)
VARCACHE_PREF
(
"
layout
.
css
.
prefixes
.
webkit
"
layout_css_prefixes_webkit
bool
true
)
VARCACHE_PREF
(
"
layout
.
css
.
prefixes
.
device
-
pixel
-
ratio
-
webkit
"
layout_css_prefixes_device_pixel_ratio_webkit
bool
false
)
VARCACHE_PREF
(
"
layout
.
css
.
prefixes
.
gradients
"
layout_css_prefixes_gradients
bool
true
)
#
ifdef
RELEASE_OR_BETA
#
define
PREF_VALUE
false
#
else
#
define
PREF_VALUE
true
#
endif
VARCACHE_PREF
(
"
layout
.
css
.
control
-
characters
.
visible
"
layout_css_control_characters_visible
bool
PREF_VALUE
)
#
undef
PREF_VALUE
#
ifdef
RELEASE_OR_BETA
#
define
PREF_VALUE
false
#
else
#
define
PREF_VALUE
true
#
endif
VARCACHE_PREF
(
"
layout
.
css
.
frames
-
timing
.
enabled
"
layout_css_frames_timing_enabled
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
layout
.
css
.
visited_links_enabled
"
layout_css_visited_links_enabled
bool
true
)
VARCACHE_PREF
(
"
layout
.
css
.
moz
-
document
.
content
.
enabled
"
layout_css_moz_document_content_enabled
bool
false
)
#
ifdef
EARLY_BETA_OR_EARLIER
#
define
PREF_VALUE
false
#
else
#
define
PREF_VALUE
true
#
endif
VARCACHE_PREF
(
"
layout
.
css
.
moz
-
document
.
url
-
prefix
-
hack
.
enabled
"
layout_css_moz_document_url_prefix_hack_enabled
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
layout
.
css
.
grid
-
template
-
subgrid
-
value
.
enabled
"
layout_css_grid_template_subgrid_value_enabled
bool
false
)
VARCACHE_PREF
(
"
layout
.
css
.
font
-
variations
.
enabled
"
layout_css_font_variations_enabled
bool
true
)
VARCACHE_PREF
(
"
layout
.
css
.
emulate
-
moz
-
box
-
with
-
flex
"
layout_css_emulate_moz_box_with_flex
bool
false
)
#
ifdef
ANDROID
#
define
PREF_VALUE
false
#
else
#
define
PREF_VALUE
true
#
endif
VARCACHE_PREF
(
"
javascript
.
options
.
gc_on_memory_pressure
"
javascript_options_gc_on_memory_pressure
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
javascript
.
options
.
compact_on_user_inactive
"
javascript_options_compact_on_user_inactive
bool
true
)
#
ifdef
NIGHTLY_BUILD
#
define
PREF_VALUE
15000
/
/
ms
#
else
#
define
PREF_VALUE
300000
/
/
ms
#
endif
VARCACHE_PREF
(
"
javascript
.
options
.
compact_on_user_inactive_delay
"
javascript_options_compact_on_user_inactive_delay
uint32_t
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
javascript
.
options
.
mem
.
log
"
javascript_options_mem_log
bool
false
)
VARCACHE_PREF
(
"
javascript
.
options
.
mem
.
notify
"
javascript_options_mem_notify
bool
false
)
#
ifdef
ANDROID
#
define
PREF_VALUE
32768
/
/
Measured
in
KiB
#
else
#
define
PREF_VALUE
512000
/
/
Measured
in
KiB
#
endif
VARCACHE_PREF
(
"
media
.
cache_size
"
MediaCacheSize
uint32_t
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
memory_cache_max_size
"
MediaMemoryCacheMaxSize
uint32_t
8192
)
#
ifdef
ANDROID
#
define
PREF_VALUE
32768
/
/
Measured
in
KiB
#
else
#
define
PREF_VALUE
524288
/
/
Measured
in
KiB
#
endif
VARCACHE_PREF
(
"
media
.
memory_caches_combined_limit_kb
"
MediaMemoryCachesCombinedLimitKb
uint32_t
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
memory_caches_combined_limit_pc_sysmem
"
MediaMemoryCachesCombinedLimitPcSysmem
uint32_t
5
)
#
ifdef
ANDROID
#
define
PREF_VALUE
10
/
/
Use
a
smaller
limit
to
save
battery
.
#
else
#
define
PREF_VALUE
30
#
endif
VARCACHE_PREF
(
"
media
.
cache_resume_threshold
"
MediaCacheResumeThreshold
int32_t
PREF_VALUE
)
#
undef
PREF_VALUE
#
ifdef
ANDROID
#
define
PREF_VALUE
30
/
/
Use
a
smaller
limit
to
save
battery
.
#
else
#
define
PREF_VALUE
60
#
endif
VARCACHE_PREF
(
"
media
.
cache_readahead_limit
"
MediaCacheReadaheadLimit
int32_t
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
resampling
.
enabled
"
MediaResamplingEnabled
bool
false
)
#
if
defined
(
XP_WIN
)
|
|
defined
(
XP_DARWIN
)
|
|
defined
(
MOZ_PULSEAUDIO
)
#
define
PREF_VALUE
false
#
else
#
define
PREF_VALUE
true
#
endif
VARCACHE_PREF
(
"
media
.
forcestereo
.
enabled
"
MediaForcestereoEnabled
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
ruin
-
av
-
sync
.
enabled
"
MediaRuinAvSyncEnabled
bool
false
)
#
if
defined
(
ANDROID
)
#
if
defined
(
NIGHTLY_BUILD
)
#
define
PREF_VALUE
true
#
else
#
define
PREF_VALUE
false
#
endif
#
elif
defined
(
XP_LINUX
)
#
define
PREF_VALUE
false
#
else
#
define
PREF_VALUE
true
#
endif
VARCACHE_PREF
(
"
media
.
eme
.
enabled
"
MediaEmeEnabled
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
clearkey
.
persistent
-
license
.
enabled
"
MediaClearkeyPersistentLicenseEnabled
bool
false
)
#
if
defined
(
XP_LINUX
)
&
&
defined
(
MOZ_GMP_SANDBOX
)
VARCACHE_PREF
(
"
media
.
gmp
.
insecure
.
allow
"
MediaGmpInsecureAllow
bool
false
)
#
endif
VARCACHE_PREF
(
"
media
.
use
-
blank
-
decoder
"
MediaUseBlankDecoder
bool
false
)
#
if
defined
(
XP_WIN
)
#
define
PREF_VALUE
true
#
else
#
define
PREF_VALUE
false
#
endif
VARCACHE_PREF
(
"
media
.
gpu
-
process
-
decoder
"
MediaGpuProcessDecoder
bool
PREF_VALUE
)
#
undef
PREF_VALUE
#
ifdef
ANDROID
VARCACHE_PREF
(
"
media
.
android
-
media
-
codec
.
enabled
"
MediaAndroidMediaCodecEnabled
bool
true
)
VARCACHE_PREF
(
"
media
.
android
-
media
-
codec
.
preferred
"
MediaAndroidMediaCodecPreferred
bool
true
)
#
endif
#
ifdef
MOZ_WEBRTC
#
ifdef
ANDROID
VARCACHE_PREF
(
"
media
.
navigator
.
hardware
.
vp8_encode
.
acceleration_remote_enabled
"
MediaNavigatorHardwareVp8encodeAccelerationRemoteEnabled
bool
true
)
PREF
(
"
media
.
navigator
.
hardware
.
vp8_encode
.
acceleration_enabled
"
bool
true
)
PREF
(
"
media
.
navigator
.
hardware
.
vp8_decode
.
acceleration_enabled
"
bool
false
)
#
endif
VARCACHE_PREF
(
"
media
.
navigator
.
mediadatadecoder_enabled
"
MediaNavigatorMediadatadecoderEnabled
bool
false
)
#
endif
#
ifdef
MOZ_OMX
VARCACHE_PREF
(
"
media
.
omx
.
enabled
"
MediaOmxEnabled
bool
false
)
#
endif
#
ifdef
MOZ_FFMPEG
#
if
defined
(
XP_MACOSX
)
#
define
PREF_VALUE
false
#
else
#
define
PREF_VALUE
true
#
endif
VARCACHE_PREF
(
"
media
.
ffmpeg
.
enabled
"
MediaFfmpegEnabled
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
libavcodec
.
allow
-
obsolete
"
MediaLibavcodecAllowObsolete
bool
false
)
#
endif
#
ifdef
MOZ_FFVPX
VARCACHE_PREF
(
"
media
.
ffvpx
.
enabled
"
MediaFfvpxEnabled
bool
true
)
#
endif
#
if
defined
(
MOZ_FFMPEG
)
|
|
defined
(
MOZ_FFVPX
)
VARCACHE_PREF
(
"
media
.
ffmpeg
.
low
-
latency
.
enabled
"
MediaFfmpegLowLatencyEnabled
bool
false
)
#
endif
#
ifdef
MOZ_WMF
VARCACHE_PREF
(
"
media
.
wmf
.
enabled
"
MediaWmfEnabled
bool
true
)
VARCACHE_PREF
(
"
media
.
decoder
-
doctor
.
wmf
-
disabled
-
is
-
failure
"
MediaDecoderDoctorWmfDisabledIsFailure
bool
false
)
VARCACHE_PREF
(
"
media
.
wmf
.
vp9
.
enabled
"
MediaWmfVp9Enabled
bool
true
)
#
endif
#
ifdef
ANDROID
#
define
PREF_VALUE
true
#
else
#
define
PREF_VALUE
false
#
endif
VARCACHE_PREF
(
"
media
.
decoder
.
recycle
.
enabled
"
MediaDecoderRecycleEnabled
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
decoder
.
skip
-
to
-
next
-
key
-
frame
.
enabled
"
MediaDecoderSkipToNextKeyFrameEnabled
bool
true
)
VARCACHE_PREF
(
"
media
.
gmp
.
decoder
.
enabled
"
MediaGmpDecoderEnabled
bool
false
)
VARCACHE_PREF
(
"
media
.
eme
.
audio
.
blank
"
MediaEmeAudioBlank
bool
false
)
VARCACHE_PREF
(
"
media
.
eme
.
video
.
blank
"
MediaEmeVideoBlank
bool
false
)
VARCACHE_PREF
(
"
media
.
eme
.
chromium
-
api
.
video
-
shmems
"
MediaEmeChromiumApiVideoShmems
uint32_t
6
)
VARCACHE_PREF
(
"
media
.
suspend
-
bkgnd
-
video
.
enabled
"
MediaSuspendBkgndVideoEnabled
bool
true
)
VARCACHE_PREF
(
"
media
.
suspend
-
bkgnd
-
video
.
delay
-
ms
"
MediaSuspendBkgndVideoDelayMs
RelaxedAtomicUint32
10000
)
VARCACHE_PREF
(
"
media
.
dormant
-
on
-
pause
-
timeout
-
ms
"
MediaDormantOnPauseTimeoutMs
int32_t
5000
)
VARCACHE_PREF
(
"
media
.
webspeech
.
synth
.
force_global_queue
"
MediaWebspeechSynthForceGlobalQueue
bool
false
)
VARCACHE_PREF
(
"
media
.
webspeech
.
test
.
enable
"
MediaWebspeechTestEnable
bool
false
)
VARCACHE_PREF
(
"
media
.
webspeech
.
test
.
fake_fsm_events
"
MediaWebspeechTextFakeFsmEvents
bool
false
)
VARCACHE_PREF
(
"
media
.
webspeech
.
test
.
fake_recognition_service
"
MediaWebspeechTextFakeRecognitionService
bool
false
)
#
ifdef
MOZ_WEBSPEECH
VARCACHE_PREF
(
"
media
.
webspeech
.
recognition
.
enable
"
MediaWebspeechRecognitionEnable
bool
false
)
#
endif
VARCACHE_PREF
(
"
media
.
webspeech
.
recognition
.
force_enable
"
MediaWebspeechRecognitionForceEnable
bool
false
)
#
if
defined
(
RELEASE_OR_BETA
)
#
define
PREF_VALUE
3
#
else
#
define
PREF_VALUE
0
#
endif
VARCACHE_PREF
(
"
media
.
audio
-
max
-
decode
-
error
"
MediaAudioMaxDecodeError
uint32_t
PREF_VALUE
)
#
undef
PREF_VALUE
#
if
defined
(
RELEASE_OR_BETA
)
#
define
PREF_VALUE
2
#
else
#
define
PREF_VALUE
0
#
endif
VARCACHE_PREF
(
"
media
.
video
-
max
-
decode
-
error
"
MediaVideoMaxDecodeError
uint32_t
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
ogg
.
enabled
"
MediaOggEnabled
bool
true
)
VARCACHE_PREF
(
"
media
.
av1
.
enabled
"
MediaAv1Enabled
bool
true
)
VARCACHE_PREF
(
"
media
.
ogg
.
flac
.
enabled
"
MediaOggFlacEnabled
bool
true
)
VARCACHE_PREF
(
"
media
.
flac
.
enabled
"
MediaFlacEnabled
bool
true
)
#
ifdef
ANDROID
#
define
PREF_VALUE
true
#
else
#
define
PREF_VALUE
false
#
endif
VARCACHE_PREF
(
"
media
.
hls
.
enabled
"
MediaHlsEnabled
bool
PREF_VALUE
)
#
undef
PREF_VALUE
#
ifdef
MOZ_FMP4
#
define
PREF_VALUE
true
#
else
#
define
PREF_VALUE
false
#
endif
VARCACHE_PREF
(
"
media
.
mp4
.
enabled
"
mediaMp4Enabled
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
playback
.
warnings
-
as
-
errors
"
MediaPlaybackWarningsAsErrors
bool
false
)
VARCACHE_PREF
(
"
media
.
resume
-
bkgnd
-
video
-
on
-
tabhover
"
MediaResumeBkgndVideoOnTabhover
bool
true
)
#
ifdef
ANDROID
#
define
PREF_VALUE
true
#
else
#
define
PREF_VALUE
false
#
endif
VARCACHE_PREF
(
"
media
.
videocontrols
.
lock
-
video
-
orientation
"
MediaVideocontrolsLockVideoOrientation
bool
PREF_VALUE
)
#
undef
PREF_VALUE
VARCACHE_PREF
(
"
media
.
seamless
-
looping
"
MediaSeamlessLooping
bool
true
)
VARCACHE_PREF
(
"
network
.
auth
.
subresource
-
http
-
auth
-
allow
"
network_auth_subresource_http_auth_allow
uint32_t
2
)
VARCACHE_PREF
(
"
network
.
auth
.
subresource
-
img
-
cross
-
origin
-
http
-
auth
-
allow
"
network_auth_subresource_img_cross_origin_http_auth_allow
bool
false
)
VARCACHE_PREF
(
"
network
.
auth
.
non
-
web
-
content
-
triggered
-
resources
-
http
-
auth
-
allow
"
network_auth_non_web_content_triggered_resources_http_auth_allow
bool
false
)
VARCACHE_PREF
(
"
network
.
predictor
.
enabled
"
network_predictor_enabled
bool
true
)
VARCACHE_PREF
(
"
network
.
predictor
.
enable
-
hover
-
on
-
ssl
"
network_predictor_enable_hover_on_ssl
bool
false
)
VARCACHE_PREF
(
"
network
.
predictor
.
enable
-
prefetch
"
network_predictor_enable_prefetch
bool
false
)
VARCACHE_PREF
(
"
network
.
predictor
.
page
-
degradation
.
day
"
network_predictor_page_degradation_day
int32_t
0
)
VARCACHE_PREF
(
"
network
.
predictor
.
page
-
degradation
.
week
"
network_predictor_page_degradation_week
int32_t
5
)
VARCACHE_PREF
(
"
network
.
predictor
.
page
-
degradation
.
month
"
network_predictor_page_degradation_month
int32_t
10
)
VARCACHE_PREF
(
"
network
.
predictor
.
page
-
degradation
.
year
"
network_predictor_page_degradation_year
int32_t
25
)
VARCACHE_PREF
(
"
network
.
predictor
.
page
-
degradation
.
max
"
network_predictor_page_degradation_max
int32_t
50
)
VARCACHE_PREF
(
"
network
.
predictor
.
subresource
-
degradation
.
day
"
network_predictor_subresource_degradation_day
int32_t
1
)
VARCACHE_PREF
(
"
network
.
predictor
.
subresource
-
degradation
.
week
"
network_predictor_subresource_degradation_week
int32_t
10
)
VARCACHE_PREF
(
"
network
.
predictor
.
subresource
-
degradation
.
month
"
network_predictor_subresource_degradation_month
int32_t
25
)
VARCACHE_PREF
(
"
network
.
predictor
.
subresource
-
degradation
.
year
"
network_predictor_subresource_degradation_year
int32_t
50
)
VARCACHE_PREF
(
"
network
.
predictor
.
subresource
-
degradation
.
max
"
network_predictor_subresource_degradation_max
int32_t
100
)
VARCACHE_PREF
(
"
network
.
predictor
.
prefetch
-
rolling
-
load
-
count
"
network_predictor_prefetch_rolling_load_count
int32_t
10
)
VARCACHE_PREF
(
"
network
.
predictor
.
prefetch
-
min
-
confidence
"
network_predictor_prefetch_min_confidence
int32_t
100
)
VARCACHE_PREF
(
"
network
.
predictor
.
preconnect
-
min
-
confidence
"
network_predictor_preconnect_min_confidence
int32_t
90
)
VARCACHE_PREF
(
"
network
.
predictor
.
preresolve
-
min
-
confidence
"
network_predictor_preresolve_min_confidence
int32_t
60
)
VARCACHE_PREF
(
"
network
.
predictor
.
prefetch
-
force
-
valid
-
for
"
network_predictor_prefetch_force_valid_for
int32_t
10
)
VARCACHE_PREF
(
"
network
.
predictor
.
max
-
resources
-
per
-
entry
"
network_predictor_max_resources_per_entry
int32_t
100
)
VARCACHE_PREF
(
"
network
.
predictor
.
max
-
uri
-
length
"
network_predictor_max_uri_length
uint32_t
500
)
PREF
(
"
network
.
predictor
.
cleaned
-
up
"
bool
false
)
VARCACHE_PREF
(
"
network
.
predictor
.
doing
-
tests
"
network_predictor_doing_tests
bool
false
)
PREF
(
"
preferences
.
allow
.
omt
-
write
"
bool
true
)
VARCACHE_PREF
(
"
view_source
.
editor
.
external
"
view_source_editor_external
bool
false
)
