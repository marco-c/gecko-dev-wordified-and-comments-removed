#
ifndef
CORE_FPDFAPI_RENDER_CPDF_PROGRESSIVERENDERER_H_
#
define
CORE_FPDFAPI_RENDER_CPDF_PROGRESSIVERENDERER_H_
#
include
<
memory
>
#
include
"
core
/
fpdfapi
/
page
/
cpdf_pageobjectlist
.
h
"
#
include
"
core
/
fpdfapi
/
render
/
cpdf_rendercontext
.
h
"
#
include
"
core
/
fxcrt
/
fx_coordinates
.
h
"
#
include
"
core
/
fxcrt
/
fx_system
.
h
"
class
CPDF_RenderOptions
;
class
CPDF_RenderStatus
;
class
CFX_RenderDevice
;
class
IFX_Pause
;
class
CPDF_ProgressiveRenderer
{
public
:
enum
Status
{
Ready
ToBeContinued
Done
Failed
}
;
static
int
ToFPDFStatus
(
Status
status
)
{
return
static_cast
<
int
>
(
status
)
;
}
CPDF_ProgressiveRenderer
(
CPDF_RenderContext
*
pContext
CFX_RenderDevice
*
pDevice
const
CPDF_RenderOptions
*
pOptions
)
;
~
CPDF_ProgressiveRenderer
(
)
;
Status
GetStatus
(
)
const
{
return
m_Status
;
}
void
Start
(
IFX_Pause
*
pPause
)
;
void
Continue
(
IFX_Pause
*
pPause
)
;
private
:
static
const
int
kStepLimit
=
100
;
Status
m_Status
;
CPDF_RenderContext
*
const
m_pContext
;
CFX_RenderDevice
*
const
m_pDevice
;
const
CPDF_RenderOptions
*
const
m_pOptions
;
std
:
:
unique_ptr
<
CPDF_RenderStatus
>
m_pRenderStatus
;
CFX_FloatRect
m_ClipRect
;
uint32_t
m_LayerIndex
;
CPDF_RenderContext
:
:
Layer
*
m_pCurrentLayer
;
CPDF_PageObjectList
:
:
iterator
m_LastObjectRendered
;
}
;
#
endif
