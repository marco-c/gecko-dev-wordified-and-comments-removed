#
include
"
core
/
fpdftext
/
cpdf_linkextract
.
h
"
#
include
"
testing
/
gtest
/
include
/
gtest
/
gtest
.
h
"
class
CPDF_TestLinkExtract
:
public
CPDF_LinkExtract
{
public
:
CPDF_TestLinkExtract
(
)
:
CPDF_LinkExtract
(
nullptr
)
{
}
private
:
FRIEND_TEST
(
fpdf_text_int
CheckMailLink
)
;
}
;
TEST
(
fpdf_text_int
CheckMailLink
)
{
CPDF_TestLinkExtract
extractor
;
const
wchar_t
*
invalid_strs
[
]
=
{
L
"
"
L
"
peter
.
pan
"
L
"
abc
server
"
L
"
abc
.
gmail
.
com
"
L
"
abc
xyz
&
q
.
org
"
L
"
abc
.
xyz
.
org
"
L
"
fan
g
.
.
com
"
}
;
for
(
size_t
i
=
0
;
i
<
FX_ArraySize
(
invalid_strs
)
;
+
+
i
)
{
CFX_WideString
text_str
(
invalid_strs
[
i
]
)
;
EXPECT_FALSE
(
extractor
.
CheckMailLink
(
text_str
)
)
;
}
const
wchar_t
*
valid_strs
[
]
[
2
]
=
{
{
L
"
peter
abc
.
d
"
L
"
peter
abc
.
d
"
}
{
L
"
red
.
teddy
.
b
abc
.
com
"
L
"
red
.
teddy
.
b
abc
.
com
"
}
{
L
"
abc_
gmail
.
com
"
L
"
abc_
gmail
.
com
"
}
{
L
"
dummy
-
hi
gmail
.
com
"
L
"
dummy
-
hi
gmail
.
com
"
}
{
L
"
a
.
.
df
gmail
.
com
"
L
"
df
gmail
.
com
"
}
{
L
"
.
john
yahoo
.
com
"
L
"
john
yahoo
.
com
"
}
{
L
"
abc
xyz
.
org
?
/
"
L
"
abc
xyz
.
org
"
}
{
L
"
fan
{
abc
xyz
.
org
"
L
"
abc
xyz
.
org
"
}
{
L
"
fan
g
.
com
.
.
"
L
"
fan
g
.
com
"
}
{
L
"
CAP
.
cap
Gmail
.
Com
"
L
"
CAP
.
cap
Gmail
.
Com
"
}
}
;
for
(
size_t
i
=
0
;
i
<
FX_ArraySize
(
valid_strs
)
;
+
+
i
)
{
CFX_WideString
text_str
(
valid_strs
[
i
]
[
0
]
)
;
CFX_WideString
expected_str
(
L
"
mailto
:
"
)
;
expected_str
+
=
valid_strs
[
i
]
[
1
]
;
EXPECT_TRUE
(
extractor
.
CheckMailLink
(
text_str
)
)
;
EXPECT_STREQ
(
text_str
.
c_str
(
)
expected_str
.
c_str
(
)
)
;
}
}
