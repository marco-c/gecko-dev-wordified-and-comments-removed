#
ifndef
WOFF2_GLYPH_H_
#
define
WOFF2_GLYPH_H_
#
include
<
inttypes
.
h
>
#
include
<
stddef
.
h
>
#
include
<
cstdint
>
#
include
<
vector
>
namespace
woff2
{
class
Glyph
{
public
:
Glyph
(
)
:
instructions_size
(
0
)
overlap_simple_flag_set
(
false
)
composite_data_size
(
0
)
{
}
int16_t
x_min
;
int16_t
x_max
;
int16_t
y_min
;
int16_t
y_max
;
uint16_t
instructions_size
;
const
uint8_t
*
instructions_data
;
bool
overlap_simple_flag_set
;
struct
Point
{
int
x
;
int
y
;
bool
on_curve
;
}
;
std
:
:
vector
<
std
:
:
vector
<
Point
>
>
contours
;
const
uint8_t
*
composite_data
;
uint32_t
composite_data_size
;
bool
have_instructions
;
}
;
bool
ReadGlyph
(
const
uint8_t
*
data
size_t
len
Glyph
*
glyph
)
;
bool
StoreGlyph
(
const
Glyph
&
glyph
uint8_t
*
dst
size_t
*
dst_size
)
;
}
#
endif
