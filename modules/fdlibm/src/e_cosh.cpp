#
include
<
float
.
h
>
#
include
<
math
.
h
>
#
include
"
math_private
.
h
"
static
const
double
one
=
1
.
0
half
=
0
.
5
huge
=
1
.
0e300
;
double
__ieee754_cosh
(
double
x
)
{
double
t
w
;
int32_t
ix
;
GET_HIGH_WORD
(
ix
x
)
;
ix
&
=
0x7fffffff
;
if
(
ix
>
=
0x7ff00000
)
return
x
*
x
;
if
(
ix
<
0x3fd62e43
)
{
t
=
expm1
(
fabs
(
x
)
)
;
w
=
one
+
t
;
if
(
ix
<
0x3c800000
)
return
w
;
return
one
+
(
t
*
t
)
/
(
w
+
w
)
;
}
if
(
ix
<
0x40360000
)
{
t
=
__ieee754_exp
(
fabs
(
x
)
)
;
return
half
*
t
+
half
/
t
;
}
if
(
ix
<
0x40862E42
)
return
half
*
__ieee754_exp
(
fabs
(
x
)
)
;
if
(
ix
<
=
0x408633CE
)
return
__ldexp_exp
(
fabs
(
x
)
-
1
)
;
return
huge
*
huge
;
}
