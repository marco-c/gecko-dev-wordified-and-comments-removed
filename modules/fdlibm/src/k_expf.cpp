#
include
"
math_private
.
h
"
static
const
uint32_t
k
=
235
;
static
const
float
kln2
=
162
.
88958740F
;
static
float
__frexp_expf
(
float
x
int
*
expt
)
{
float
exp_x
;
uint32_t
hx
;
exp_x
=
expf
(
x
-
kln2
)
;
GET_FLOAT_WORD
(
hx
exp_x
)
;
*
expt
=
(
hx
>
>
23
)
-
(
0x7f
+
127
)
+
k
;
SET_FLOAT_WORD
(
exp_x
(
hx
&
0x7fffff
)
|
(
(
0x7f
+
127
)
<
<
23
)
)
;
return
(
exp_x
)
;
}
float
__ldexp_expf
(
float
x
int
expt
)
{
float
exp_x
scale
;
int
ex_expt
;
exp_x
=
__frexp_expf
(
x
&
ex_expt
)
;
expt
+
=
ex_expt
;
SET_FLOAT_WORD
(
scale
(
0x7f
+
expt
)
<
<
23
)
;
return
(
exp_x
*
scale
)
;
}
