#
include
<
float
.
h
>
#
include
"
math_private
.
h
"
static
const
double
invpio2
=
6
.
36619772367581382433e
-
01
pio2_1
=
1
.
57079631090164184570e
+
00
pio2_1t
=
1
.
58932547735281966916e
-
08
;
#
ifdef
INLINE_REM_PIO2F
static
inline
#
endif
int
__ieee754_rem_pio2f
(
float
x
double
*
y
)
{
double
w
r
fn
;
double
tx
[
1
]
ty
[
1
]
;
float
z
;
int32_t
e0
n
ix
hx
;
GET_FLOAT_WORD
(
hx
x
)
;
ix
=
hx
&
0x7fffffff
;
if
(
ix
<
0x4dc90fdb
)
{
fn
=
rnint
(
(
float
)
x
*
invpio2
)
;
n
=
irint
(
fn
)
;
r
=
x
-
fn
*
pio2_1
;
w
=
fn
*
pio2_1t
;
*
y
=
r
-
w
;
return
n
;
}
if
(
ix
>
=
0x7f800000
)
{
*
y
=
x
-
x
;
return
0
;
}
e0
=
(
ix
>
>
23
)
-
150
;
SET_FLOAT_WORD
(
z
ix
-
(
(
int32_t
)
(
e0
<
<
23
)
)
)
;
tx
[
0
]
=
z
;
n
=
__kernel_rem_pio2
(
tx
ty
e0
1
0
)
;
if
(
hx
<
0
)
{
*
y
=
-
ty
[
0
]
;
return
-
n
;
}
*
y
=
ty
[
0
]
;
return
n
;
}
