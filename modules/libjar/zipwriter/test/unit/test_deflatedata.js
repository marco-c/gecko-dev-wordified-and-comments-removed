const
DATA
=
"
ZIP
WRITER
TEST
DATA
"
;
const
FILENAME
=
"
test
.
txt
"
;
const
CRC
=
0xe6164331
;
const
time
=
1199145600000
;
function
run_test
(
)
{
zipW
.
open
(
tmpFile
PR_RDWR
|
PR_CREATE_FILE
|
PR_TRUNCATE
)
;
Assert
.
ok
(
!
zipW
.
hasEntry
(
FILENAME
)
)
;
Assert
.
ok
(
!
zipW
.
inQueue
)
;
var
stream
=
Cc
[
"
mozilla
.
org
/
io
/
string
-
input
-
stream
;
1
"
]
.
createInstance
(
Ci
.
nsIStringInputStream
)
;
stream
.
setByteStringData
(
DATA
)
;
zipW
.
addEntryStream
(
FILENAME
time
*
PR_USEC_PER_MSEC
Ci
.
nsIZipWriter
.
COMPRESSION_BEST
stream
false
)
;
var
entry
=
zipW
.
getEntry
(
FILENAME
)
;
Assert
.
notEqual
(
entry
null
)
;
Assert
.
equal
(
entry
.
compression
ZIP_METHOD_DEFLATE
)
;
Assert
.
equal
(
entry
.
CRC32
CRC
)
;
Assert
.
equal
(
entry
.
realSize
DATA
.
length
)
;
Assert
.
equal
(
entry
.
lastModifiedTime
/
PR_USEC_PER_MSEC
time
)
;
zipW
.
close
(
)
;
var
zipR
=
new
ZipReader
(
tmpFile
)
;
Assert
.
ok
(
zipR
.
hasEntry
(
FILENAME
)
)
;
zipR
.
test
(
FILENAME
)
;
stream
=
Cc
[
"
mozilla
.
org
/
scriptableinputstream
;
1
"
]
.
createInstance
(
Ci
.
nsIScriptableInputStream
)
;
stream
.
init
(
zipR
.
getInputStream
(
FILENAME
)
)
;
var
result
=
stream
.
read
(
DATA
.
length
)
;
stream
.
close
(
)
;
zipR
.
close
(
)
;
Assert
.
equal
(
result
DATA
)
;
}
