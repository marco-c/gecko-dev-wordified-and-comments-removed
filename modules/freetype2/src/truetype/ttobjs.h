#
ifndef
TTOBJS_H_
#
define
TTOBJS_H_
#
include
<
freetype
/
internal
/
ftobjs
.
h
>
#
include
<
freetype
/
internal
/
tttypes
.
h
>
FT_BEGIN_HEADER
typedef
struct
TT_DriverRec_
*
TT_Driver
;
typedef
FT_GlyphSlot
TT_GlyphSlot
;
#
ifdef
TT_USE_BYTECODE_INTERPRETER
typedef
struct
TT_GraphicsState_
{
FT_UShort
rp0
;
FT_UShort
rp1
;
FT_UShort
rp2
;
FT_UShort
gep0
;
FT_UShort
gep1
;
FT_UShort
gep2
;
FT_UnitVector
dualVector
;
FT_UnitVector
projVector
;
FT_UnitVector
freeVector
;
FT_Long
loop
;
FT_Int
round_state
;
FT_F26Dot6
compensation
[
4
]
;
FT_F26Dot6
minimum_distance
;
FT_F26Dot6
control_value_cutin
;
FT_F26Dot6
single_width_cutin
;
FT_F26Dot6
single_width_value
;
FT_UShort
delta_base
;
FT_UShort
delta_shift
;
FT_Bool
auto_flip
;
FT_Byte
instruct_control
;
FT_Bool
scan_control
;
FT_Int
scan_type
;
}
TT_GraphicsState
;
FT_LOCAL
(
void
)
tt_glyphzone_done
(
FT_Memory
memory
TT_GlyphZone
zone
)
;
FT_LOCAL
(
FT_Error
)
tt_glyphzone_new
(
FT_Memory
memory
FT_UShort
maxPoints
FT_UShort
maxContours
TT_GlyphZone
zone
)
;
#
endif
typedef
struct
TT_Size_Metrics_
{
FT_Long
x_ratio
;
FT_Long
y_ratio
;
FT_Long
ratio
;
FT_Fixed
scale
;
FT_UShort
ppem
;
FT_Bool
rotated
;
FT_Bool
stretched
;
}
TT_Size_Metrics
;
typedef
struct
TT_SizeRec_
{
FT_SizeRec
root
;
FT_Size_Metrics
*
metrics
;
FT_Size_Metrics
hinted_metrics
;
TT_Size_Metrics
ttmetrics
;
FT_Byte
*
widthp
;
FT_ULong
strike_index
;
#
ifdef
TT_USE_BYTECODE_INTERPRETER
FT_Long
point_size
;
TT_GraphicsState
GS
;
TT_GlyphZoneRec
twilight
;
TT_ExecContext
context
;
FT_Error
bytecode_ready
;
FT_Error
cvt_ready
;
#
endif
}
TT_SizeRec
;
typedef
struct
TT_DriverRec_
{
FT_DriverRec
root
;
TT_GlyphZoneRec
zone
;
FT_UInt
interpreter_version
;
}
TT_DriverRec
;
FT_LOCAL
(
FT_Error
)
tt_face_init
(
FT_Stream
stream
FT_Face
ttface
FT_Int
face_index
FT_Int
num_params
FT_Parameter
*
params
)
;
FT_LOCAL
(
void
)
tt_face_done
(
FT_Face
ttface
)
;
FT_LOCAL
(
FT_Error
)
tt_size_init
(
FT_Size
ttsize
)
;
FT_LOCAL
(
void
)
tt_size_done
(
FT_Size
ttsize
)
;
#
ifdef
TT_USE_BYTECODE_INTERPRETER
FT_LOCAL
(
FT_Error
)
tt_size_run_fpgm
(
TT_Size
size
)
;
FT_LOCAL
(
FT_Error
)
tt_size_run_prep
(
TT_Size
size
)
;
FT_LOCAL
(
FT_Error
)
tt_size_init_bytecode
(
TT_Size
size
FT_Bool
pedantic
)
;
#
endif
FT_LOCAL
(
void
)
tt_size_reset_height
(
FT_Size
size
)
;
FT_LOCAL
(
FT_Error
)
tt_size_reset
(
TT_Size
size
)
;
FT_LOCAL
(
FT_Error
)
tt_driver_init
(
FT_Module
ttdriver
)
;
FT_LOCAL
(
void
)
tt_driver_done
(
FT_Module
ttdriver
)
;
FT_LOCAL
(
FT_Error
)
tt_slot_init
(
FT_GlyphSlot
slot
)
;
#
define
IS_HINTED
(
flags
)
(
(
flags
&
FT_LOAD_NO_HINTING
)
=
=
0
)
FT_END_HEADER
#
endif
