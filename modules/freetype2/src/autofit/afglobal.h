#
ifndef
AFGLOBAL_H_
#
define
AFGLOBAL_H_
#
include
"
aftypes
.
h
"
#
include
"
afmodule
.
h
"
#
include
"
afshaper
.
h
"
FT_BEGIN_HEADER
FT_LOCAL_ARRAY
(
AF_WritingSystemClass
)
af_writing_system_classes
[
]
;
#
undef
SCRIPT
#
define
SCRIPT
(
s
S
d
h
H
ss
)
\
AF_DECLARE_SCRIPT_CLASS
(
af_
#
#
s
#
#
_script_class
)
#
include
"
afscript
.
h
"
FT_LOCAL_ARRAY
(
AF_ScriptClass
)
af_script_classes
[
]
;
#
undef
STYLE
#
define
STYLE
(
s
S
d
ws
sc
ss
c
)
\
AF_DECLARE_STYLE_CLASS
(
af_
#
#
s
#
#
_style_class
)
#
include
"
afstyles
.
h
"
FT_LOCAL_ARRAY
(
AF_StyleClass
)
af_style_classes
[
]
;
#
ifdef
FT_DEBUG_LEVEL_TRACE
FT_LOCAL_ARRAY
(
char
*
)
af_style_names
[
]
;
#
endif
#
ifdef
AF_CONFIG_OPTION_CJK
#
define
AF_STYLE_FALLBACK
AF_STYLE_HANI_DFLT
#
else
#
define
AF_STYLE_FALLBACK
AF_STYLE_NONE_DFLT
#
endif
#
define
AF_SCRIPT_DEFAULT
AF_SCRIPT_LATN
#
define
AF_STYLE_MASK
0x1FFF
#
define
AF_STYLE_UNASSIGNED
AF_STYLE_MASK
#
define
AF_DIGIT
0x8000U
#
define
AF_NONBASE
0x4000U
#
define
AF_HAS_CMAP_ENTRY
0x2000U
#
define
AF_PROP_INCREASE_X_HEIGHT_MIN
6
#
define
AF_PROP_INCREASE_X_HEIGHT_MAX
0
typedef
struct
AF_FaceGlobalsRec_
{
FT_Face
face
;
FT_UInt
glyph_count
;
FT_UShort
*
glyph_styles
;
#
ifdef
FT_CONFIG_OPTION_USE_HARFBUZZ
hb_font_t
*
hb_font
;
hb_buffer_t
*
hb_buf
;
FT_Byte
*
gsub
;
FT_UInt32
*
gsub_lookups_single_alternate
;
#
endif
FT_UInt
increase_x_height
;
AF_StyleMetrics
metrics
[
AF_STYLE_MAX
]
;
FT_UShort
stem_darkening_for_ppem
;
FT_Pos
standard_vertical_width
;
FT_Pos
standard_horizontal_width
;
FT_Pos
darken_x
;
FT_Pos
darken_y
;
FT_Fixed
scale_down_factor
;
AF_Module
module
;
}
AF_FaceGlobalsRec
;
FT_LOCAL
(
FT_Error
)
af_face_globals_new
(
FT_Face
face
AF_FaceGlobals
*
aglobals
AF_Module
module
)
;
FT_LOCAL
(
FT_Error
)
af_face_globals_get_metrics
(
AF_FaceGlobals
globals
FT_UInt
gindex
FT_UInt
options
AF_StyleMetrics
*
ametrics
)
;
FT_LOCAL
(
void
)
af_face_globals_free
(
void
*
globals
)
;
FT_LOCAL
(
FT_Bool
)
af_face_globals_is_digit
(
AF_FaceGlobals
globals
FT_UInt
gindex
)
;
FT_END_HEADER
#
endif
