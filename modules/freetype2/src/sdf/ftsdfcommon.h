#
ifndef
FTSDFCOMMON_H_
#
define
FTSDFCOMMON_H_
#
include
<
ft2build
.
h
>
#
include
FT_CONFIG_CONFIG_H
#
include
<
freetype
/
internal
/
ftobjs
.
h
>
FT_BEGIN_HEADER
#
define
DEFAULT_SPREAD
8
#
define
MIN_SPREAD
2
#
define
MAX_SPREAD
32
#
ifndef
USE_SQUARED_DISTANCES
#
define
USE_SQUARED_DISTANCES
0
#
endif
#
define
FT_INT_26D6
(
x
)
(
x
*
64
)
#
define
FT_INT_16D16
(
x
)
(
x
*
65536
)
#
define
FT_26D6_16D16
(
x
)
(
x
*
1024
)
#
define
FT_CALL
(
x
)
do
\
{
\
error
=
(
x
)
;
\
if
(
error
!
=
FT_Err_Ok
)
\
goto
Exit
;
\
}
while
(
0
)
#
if
USE_SQUARED_DISTANCES
#
define
VECTOR_LENGTH_16D16
(
v
)
(
FT_MulFix
(
v
.
x
v
.
x
)
+
\
FT_MulFix
(
v
.
y
v
.
y
)
)
#
else
#
define
VECTOR_LENGTH_16D16
(
v
)
FT_Vector_Length
(
&
v
)
#
endif
typedef
FT_Vector
FT_26D6_Vec
;
typedef
FT_Vector
FT_16D16_Vec
;
typedef
FT_Fixed
FT_16D16
;
typedef
FT_Fixed
FT_26D6
;
typedef
FT_Byte
FT_SDFFormat
;
typedef
FT_BBox
FT_CBox
;
FT_LOCAL
(
FT_16D16
)
square_root
(
FT_16D16
val
)
;
FT_LOCAL
(
FT_SDFFormat
)
map_fixed_to_sdf
(
FT_16D16
dist
FT_16D16
max_value
)
;
FT_LOCAL
(
FT_SDFFormat
)
invert_sign
(
FT_SDFFormat
dist
)
;
FT_END_HEADER
#
endif
