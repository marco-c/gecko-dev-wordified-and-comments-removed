check_header
(
"
stdint
.
h
"
)
have_inttypes
=
check_header
(
"
inttypes
.
h
"
)
set_define
(
"
STDC_HEADERS
"
True
)
set_config
(
"
HAVE_INTTYPES_H
"
have_inttypes
)
building_linux
=
depends
(
target
)
(
lambda
target
:
target
.
kernel
=
=
"
Linux
"
)
check_header
(
"
alloca
.
h
"
)
check_headers
(
"
sys
/
byteorder
.
h
"
"
getopt
.
h
"
"
unistd
.
h
"
"
nl_types
.
h
"
"
cpuid
.
h
"
"
fts
.
h
"
)
check_headers
(
"
sys
/
statvfs
.
h
"
"
sys
/
statfs
.
h
"
"
sys
/
vfs
.
h
"
"
sys
/
mount
.
h
"
)
set_define
(
"
HAVE_SYS_QUOTA_H
"
try_compile
(
includes
=
[
"
sys
/
quota
.
h
"
]
body
=
"
quotactl
(
0
nullptr
0
(
caddr_t
)
nullptr
)
;
"
check_msg
=
"
for
sys
/
quota
.
h
"
)
)
check_header
(
"
linux
/
quota
.
h
"
includes
=
[
"
sys
/
socket
.
h
"
]
when
=
building_linux
)
check_headers
(
"
linux
/
if_addr
.
h
"
"
linux
/
rtnetlink
.
h
"
includes
=
[
"
sys
/
socket
.
h
"
]
when
=
building_linux
)
check_header
(
"
sys
/
queue
.
h
"
)
check_headers
(
"
sys
/
types
.
h
"
"
netinet
/
in
.
h
"
"
byteswap
.
h
"
)
set_define
(
"
HAVE_MEMFD_CREATE
"
try_compile
(
includes
=
[
"
sys
/
mman
.
h
"
]
body
=
'
memfd_create
(
"
"
0
)
;
'
check_msg
=
"
for
memfd_create
in
sys
/
mman
.
h
"
)
)
