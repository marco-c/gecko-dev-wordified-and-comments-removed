option
(
"
-
-
disable
-
verify
-
mar
"
help
=
"
Disable
verifying
MAR
signatures
"
)
set_define
(
"
MOZ_VERIFY_MAR_SIGNATURE
"
depends_if
(
"
-
-
enable
-
verify
-
mar
"
)
(
lambda
_
:
True
)
)
set_config
(
"
MOZ_VERIFY_MAR_SIGNATURE
"
depends_if
(
"
-
-
enable
-
verify
-
mar
"
)
(
lambda
_
:
True
)
)
option
(
"
-
-
enable
-
maintenance
-
service
"
when
=
target_is_windows
default
=
target_is_windows
help
=
"
{
Enable
|
Disable
}
building
of
maintenance
service
"
)
set_define
(
"
MOZ_MAINTENANCE_SERVICE
"
depends_if
(
"
-
-
enable
-
maintenance
-
service
"
when
=
target_is_windows
)
(
lambda
_
:
True
)
)
set_config
(
"
MOZ_MAINTENANCE_SERVICE
"
depends_if
(
"
-
-
enable
-
maintenance
-
service
"
when
=
target_is_windows
)
(
lambda
_
:
True
)
)
option
(
"
-
-
enable
-
update
-
agent
"
when
=
target_is_windows
default
=
False
help
=
"
{
Enable
|
Disable
}
building
update
agent
"
)
set_define
(
"
MOZ_UPDATE_AGENT
"
depends_if
(
"
-
-
enable
-
update
-
agent
"
when
=
target_is_windows
)
(
lambda
_
:
True
)
)
set_config
(
"
MOZ_UPDATE_AGENT
"
depends_if
(
"
-
-
enable
-
update
-
agent
"
when
=
target_is_windows
)
(
lambda
_
:
True
)
)
depends
(
target
)
def
default_browser_agent_default
(
target
)
:
return
target
.
os
=
=
"
WINNT
"
option
(
"
-
-
enable
-
default
-
browser
-
agent
"
default
=
default_browser_agent_default
help
=
"
{
Enable
|
Disable
}
building
the
default
browser
agent
"
)
depends
(
"
-
-
enable
-
default
-
browser
-
agent
"
when
=
target_is_windows
)
def
default_agent_flag
(
enabled
)
:
if
enabled
:
return
True
set_config
(
"
MOZ_DEFAULT_BROWSER_AGENT
"
default_agent_flag
)
