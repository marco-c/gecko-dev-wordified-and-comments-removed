depends
(
"
LDFLAGS
"
linker_flags
linker_ldflags
pack_relative_relocs_flags
android_flags
thumb_option
)
imports
(
_from
=
"
mozbuild
.
shellutil
"
_import
=
"
split
"
)
def
os_ldflags
(
env_ldflags
linker_flags
linker_ldflags
pack_relative_relocs_flags
android_flags
thumb_option
)
:
flags
=
[
]
if
android_flags
:
flags
.
extend
(
android_flags
.
ldflags
)
if
thumb_option
:
flags
.
extend
(
thumb_option
)
flags
.
extend
(
split
(
env_ldflags
[
0
]
)
)
flags
.
extend
(
linker_flags
.
ldflags
)
if
linker_ldflags
:
flags
.
extend
(
linker_ldflags
)
if
pack_relative_relocs_flags
:
flags
.
extend
(
pack_relative_relocs_flags
)
return
flags
add_old_configure_assignment
(
"
LDFLAGS
"
os_ldflags
)
set_config
(
"
OS_LDFLAGS
"
os_ldflags
)
depends
(
linker_optimize_flags
moz_optimize_flags
lto
c_compiler
)
def
moz_optimize_ldflags
(
linker_optimize_flags
moz_optimize_flags
lto
c_compiler
)
:
flags
=
[
]
if
linker_optimize_flags
:
flags
+
=
linker_optimize_flags
.
ldflags
flags
+
=
moz_optimize_flags
if
lto
and
lto
.
enabled
and
c_compiler
.
type
=
=
"
clang
"
:
flags
=
[
"
-
O2
"
if
flag
in
(
"
-
Oz
"
"
-
Os
"
)
else
flag
for
flag
in
flags
]
return
flags
set_config
(
"
MOZ_OPTIMIZE_LDFLAGS
"
moz_optimize_ldflags
)
