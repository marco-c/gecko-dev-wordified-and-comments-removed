#
include
"
ExplicitImplicitChecker
.
h
"
#
include
"
CustomMatchers
.
h
"
void
ExplicitImplicitChecker
:
:
registerMatcher
(
MatchFinder
&
AstMatcher
)
{
AstMatcher
.
addMatcher
(
cxxConstructorDecl
(
isInterestingImplicitCtor
(
)
ofClass
(
allOf
(
isConcreteClass
(
)
decl
(
)
.
bind
(
"
class
"
)
)
)
unless
(
isMarkedImplicit
(
)
)
)
.
bind
(
"
ctor
"
)
this
)
;
}
void
ExplicitImplicitChecker
:
:
run
(
const
MatchFinder
:
:
MatchResult
&
Result
)
{
DiagnosticsEngine
&
Diag
=
Result
.
Context
-
>
getDiagnostics
(
)
;
unsigned
ErrorID
=
Diag
.
getDiagnosticIDs
(
)
-
>
getCustomDiagID
(
DiagnosticIDs
:
:
Error
"
bad
implicit
conversion
constructor
for
%
0
"
)
;
unsigned
NoteID
=
Diag
.
getDiagnosticIDs
(
)
-
>
getCustomDiagID
(
DiagnosticIDs
:
:
Note
"
consider
adding
the
explicit
keyword
to
the
constructor
"
)
;
const
CXXConstructorDecl
*
Ctor
=
Result
.
Nodes
.
getNodeAs
<
CXXConstructorDecl
>
(
"
ctor
"
)
;
const
CXXRecordDecl
*
Declaration
=
Result
.
Nodes
.
getNodeAs
<
CXXRecordDecl
>
(
"
class
"
)
;
Diag
.
Report
(
Ctor
-
>
getLocation
(
)
ErrorID
)
<
<
Declaration
-
>
getDeclName
(
)
;
Diag
.
Report
(
Ctor
-
>
getLocation
(
)
NoteID
)
;
}
