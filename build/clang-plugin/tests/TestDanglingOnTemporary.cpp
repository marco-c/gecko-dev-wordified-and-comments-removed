#
define
MOZ_NO_DANGLING_ON_TEMPORARIES
\
__attribute__
(
(
annotate
(
"
moz_no_dangling_on_temporaries
"
)
)
)
class
AnnotateConflict
{
MOZ_NO_DANGLING_ON_TEMPORARIES
int
*
get
(
)
&
&
{
return
nullptr
;
}
MOZ_NO_DANGLING_ON_TEMPORARIES
int
test
(
)
{
return
0
;
}
}
;
class
NS_ConvertUTF8toUTF16
{
public
:
MOZ_NO_DANGLING_ON_TEMPORARIES
int
*
get
(
)
{
return
nullptr
;
}
operator
int
*
(
)
{
return
get
(
)
;
}
}
;
NS_ConvertUTF8toUTF16
TemporaryFunction
(
)
{
return
NS_ConvertUTF8toUTF16
(
)
;
}
void
UndefinedFunction
(
int
*
test
)
;
void
NoEscapeFunction
(
int
*
test
)
{
}
int
*
glob
;
void
EscapeFunction1
(
int
*
test
)
{
glob
=
test
;
}
void
EscapeFunction2
(
int
*
test
int
*
&
escape
)
{
escape
=
test
;
}
int
*
EscapeFunction3
(
int
*
test
)
{
return
test
;
}
int
main
(
)
{
int
*
test
=
TemporaryFunction
(
)
.
get
(
)
;
int
*
test2
=
NS_ConvertUTF8toUTF16
(
)
.
get
(
)
;
UndefinedFunction
(
NS_ConvertUTF8toUTF16
(
)
.
get
(
)
)
;
NoEscapeFunction
(
TemporaryFunction
(
)
.
get
(
)
)
;
EscapeFunction1
(
TemporaryFunction
(
)
.
get
(
)
)
;
int
*
escape
;
EscapeFunction2
(
TemporaryFunction
(
)
.
get
(
)
escape
)
;
int
*
escape2
=
EscapeFunction3
(
TemporaryFunction
(
)
.
get
(
)
)
;
}
