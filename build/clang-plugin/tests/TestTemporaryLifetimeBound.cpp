#
define
MOZ_LIFETIME_BOUND
__attribute__
(
(
annotate
(
"
moz_lifetime_bound
"
)
)
)
struct
Foo
{
}
;
struct
Bar
{
MOZ_LIFETIME_BOUND
const
Foo
&
AsFoo
(
)
const
;
MOZ_LIFETIME_BOUND
operator
const
Foo
&
(
)
const
;
}
;
Bar
MakeBar
(
)
{
return
Bar
(
)
;
}
Bar
testReturnsInstance_Constructed
(
)
{
return
Bar
(
)
;
}
const
Foo
&
testReturnsReference_Static
(
)
{
static
constexpr
auto
bar
=
Bar
{
}
;
return
bar
;
}
const
Foo
&
testReturnsReferenceToTemporaryViaLifetimeBound_Constructed
(
)
{
return
Bar
(
)
;
}
const
Foo
&
testReturnsReferenceToTemporaryViaLifetimeBound2_Constructed
(
)
{
return
static_cast
<
const
Foo
&
>
(
Bar
(
)
)
;
}
const
Foo
&
testReturnsReferenceToTemporaryViaLifetimeBound3_Constructed
(
)
{
return
Bar
(
)
.
AsFoo
(
)
;
}
const
Foo
&
testReturnsReferenceToTemporaryViaLifetimeBound4_Constructed
(
bool
aCond
)
{
static
constexpr
Foo
foo
;
return
aCond
?
foo
:
Bar
(
)
.
AsFoo
(
)
;
}
Foo
testReturnsValueViaLifetimeBoundFunction_Constructed
(
)
{
return
Bar
(
)
;
}
Foo
testReturnsValueViaLifetimeBoundFunction2_Constructed
(
)
{
return
static_cast
<
const
Foo
&
>
(
Bar
(
)
)
;
}
Foo
testReturnsValueViaLifetimeBoundFunction3_Constructed
(
)
{
return
Bar
(
)
.
AsFoo
(
)
;
}
Bar
testReturnInstance_Returned
(
)
{
return
MakeBar
(
)
;
}
const
Foo
&
testReturnsReferenceToTemporaryViaLifetimeBound_Returned
(
)
{
return
MakeBar
(
)
;
}
const
Foo
&
testReturnsReferenceToTemporaryViaLifetimeBound2_Returned
(
)
{
return
static_cast
<
const
Foo
&
>
(
MakeBar
(
)
)
;
}
const
Foo
&
testReturnsReferenceToTemporaryViaLifetimeBound3_Returned
(
)
{
return
MakeBar
(
)
.
AsFoo
(
)
;
}
Foo
testReturnsValueViaLifetimeBoundFunction_Returned
(
)
{
return
MakeBar
(
)
;
}
Foo
testReturnsValueViaLifetimeBoundFunction2_Returned
(
)
{
return
static_cast
<
const
Foo
&
>
(
MakeBar
(
)
)
;
}
Foo
testReturnsValueViaLifetimeBoundFunction3_Returned
(
)
{
return
MakeBar
(
)
.
AsFoo
(
)
;
}
void
testNoLifetimeExtension
(
)
{
const
Foo
&
foo
=
Bar
(
)
;
}
void
testNoLifetimeExtension2
(
)
{
const
auto
&
foo
=
static_cast
<
const
Foo
&
>
(
MakeBar
(
)
)
;
}
void
testNoLifetimeExtension3
(
)
{
const
Foo
&
foo
=
Bar
(
)
.
AsFoo
(
)
;
}
void
testNoLifetimeExtension4
(
bool
arg
)
{
const
Foo
foo
;
const
Foo
&
fooRef
=
arg
?
foo
:
Bar
(
)
.
AsFoo
(
)
;
}
void
testLifetimeExtension
(
bool
arg
)
{
const
Foo
&
foo
=
arg
?
Foo
(
)
:
Bar
(
)
.
AsFoo
(
)
;
}
void
testConvertToValue
(
)
{
const
Foo
foo
=
Bar
(
)
;
}
Foo
testReturnConvertToValue
(
)
{
return
static_cast
<
Foo
>
(
Bar
(
)
)
;
}
void
FooFunc
(
const
Foo
&
aFoo
)
;
void
testBindToParameter
(
)
{
FooFunc
(
Bar
(
)
)
;
FooFunc
(
static_cast
<
const
Foo
&
>
(
Bar
(
)
)
)
;
FooFunc
(
Bar
(
)
.
AsFoo
(
)
)
;
FooFunc
(
MakeBar
(
)
)
;
}
const
Foo
&
RandomFunctionCall
(
const
Foo
&
aFoo
)
;
const
Foo
&
testReturnFunctionCall
(
)
{
return
RandomFunctionCall
(
Bar
(
)
)
;
}
