#
define
MOZ_NEEDS_MEMMOVABLE_TYPE
__attribute__
(
(
annotate
(
"
moz_needs_memmovable_type
"
)
)
)
template
<
class
T
>
class
MOZ_NEEDS_MEMMOVABLE_TYPE
Mover
{
T
mForceInst
;
}
;
namespace
std
{
template
<
class
C
>
class
basic_string
{
}
;
typedef
basic_string
<
char
>
string
;
template
<
class
T
class
U
>
class
pair
{
T
mT
;
U
mU
;
}
;
class
arbitrary_name
{
}
;
}
class
HasString
{
std
:
:
string
m
;
}
;
static
Mover
<
std
:
:
string
>
bad
;
static
Mover
<
HasString
>
bad_mem
;
static
Mover
<
std
:
:
arbitrary_name
>
assumed_bad
;
static
Mover
<
std
:
:
pair
<
bool
int
>
>
good
;
static
Mover
<
std
:
:
pair
<
bool
std
:
:
string
>
>
not_good
;
