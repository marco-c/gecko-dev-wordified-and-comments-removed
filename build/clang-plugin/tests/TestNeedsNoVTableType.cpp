#
define
MOZ_NEEDS_NO_VTABLE_TYPE
__attribute__
(
(
annotate
(
"
moz_needs_no_vtable_type
"
)
)
)
template
<
class
T
>
struct
MOZ_NEEDS_NO_VTABLE_TYPE
PickyConsumer
{
T
*
m
;
}
;
template
<
class
T
>
struct
MOZ_NEEDS_NO_VTABLE_TYPE
PickyConsumer_A
{
T
*
m
;
}
;
template
<
class
T
>
struct
PickyConsumerWrapper
{
PickyConsumer_A
<
T
>
m
;
}
;
template
<
class
T
>
struct
MOZ_NEEDS_NO_VTABLE_TYPE
PickyConsumer_B
{
T
*
m
;
}
;
template
<
class
T
>
struct
PickyConsumerSubclass
:
PickyConsumer_B
<
T
>
{
}
;
template
<
class
T
>
struct
NonPickyConsumer
{
T
*
m
;
}
;
struct
A
{
}
;
struct
B
:
virtual
A
{
}
;
struct
C
:
A
{
}
;
struct
D
{
void
d
(
)
;
}
;
struct
E
{
virtual
void
e
(
)
;
}
;
struct
F
:
E
{
virtual
void
e
(
)
final
;
}
;
struct
G
{
virtual
void
e
(
)
=
0
;
}
;
void
f
(
)
{
{
PickyConsumer
<
A
>
a1
;
PickyConsumerWrapper
<
A
>
a2
;
PickyConsumerSubclass
<
A
>
a3
;
NonPickyConsumer
<
A
>
a4
;
}
{
PickyConsumer
<
B
>
a1
;
PickyConsumerWrapper
<
B
>
a2
;
PickyConsumerSubclass
<
B
>
a3
;
NonPickyConsumer
<
B
>
a4
;
}
{
PickyConsumer
<
C
>
a1
;
PickyConsumerWrapper
<
C
>
a2
;
PickyConsumerSubclass
<
C
>
a3
;
NonPickyConsumer
<
C
>
a4
;
}
{
PickyConsumer
<
D
>
a1
;
PickyConsumerWrapper
<
D
>
a2
;
PickyConsumerSubclass
<
D
>
a3
;
NonPickyConsumer
<
D
>
a4
;
}
{
PickyConsumer
<
E
>
a1
;
PickyConsumerWrapper
<
E
>
a2
;
PickyConsumerSubclass
<
E
>
a3
;
NonPickyConsumer
<
E
>
a4
;
}
{
PickyConsumer
<
F
>
a1
;
PickyConsumerWrapper
<
F
>
a2
;
PickyConsumerSubclass
<
F
>
a3
;
NonPickyConsumer
<
F
>
a4
;
}
{
PickyConsumer
<
G
>
a1
;
PickyConsumerWrapper
<
G
>
a2
;
PickyConsumerSubclass
<
G
>
a3
;
NonPickyConsumer
<
G
>
a4
;
}
}
