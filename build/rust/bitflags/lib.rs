pub
use
bitflags
:
:
bitflags
as
bitflags2
;
pub
use
bitflags
:
:
parser
;
#
[
macro_export
(
local_inner_macros
)
]
macro_rules
!
bitflags
{
(
(
#
[
(
outer
:
tt
)
+
]
)
*
vis
:
vis
struct
BitFlags
:
ident
:
T
:
ty
{
(
(
#
[
inner
:
ident
(
args
:
tt
)
*
]
)
*
const
Flag
:
ident
=
value
:
expr
;
)
*
}
(
t
:
tt
)
*
)
=
>
{
(
#
[
(
outer
)
+
]
)
*
#
[
derive
(
Clone
Copy
PartialEq
Eq
PartialOrd
Ord
Hash
)
]
vis
struct
BitFlags
(
T
)
;
impl
core
:
:
fmt
:
:
Debug
for
BitFlags
{
fn
fmt
(
&
self
f
:
&
mut
core
:
:
fmt
:
:
Formatter
)
-
>
core
:
:
fmt
:
:
Result
{
if
self
.
is_empty
(
)
{
core
:
:
write
!
(
f
"
{
:
#
x
}
"
Self
:
:
empty
(
)
.
bits
(
)
)
}
else
{
crate
:
:
parser
:
:
to_writer
(
self
f
)
}
}
}
bitflags2
!
{
impl
BitFlags
:
T
{
(
(
#
[
inner
(
args
)
*
]
)
*
const
Flag
=
value
;
)
*
}
}
bitflags
!
{
(
t
)
*
}
}
;
(
)
=
>
{
}
;
}
