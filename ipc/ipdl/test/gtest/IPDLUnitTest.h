#
ifndef
mozilla__ipdltest_IPDLUnitTest_h
#
define
mozilla__ipdltest_IPDLUnitTest_h
#
include
"
mozilla
/
_ipdltest
/
IPDLUnitTestChild
.
h
"
#
include
"
mozilla
/
_ipdltest
/
IPDLUnitTestParent
.
h
"
#
include
"
mozilla
/
ipc
/
ProtocolUtils
.
h
"
namespace
mozilla
:
:
_ipdltest
{
const
char
*
RegisterAllocChildActor
(
const
char
*
aName
mozilla
:
:
ipc
:
:
IToplevelProtocol
*
(
*
aFunc
)
(
)
)
;
class
IPDLTestHelper
{
public
:
void
TestWrapper
(
bool
aCrossProcess
)
;
virtual
const
char
*
GetName
(
)
=
0
;
virtual
ipc
:
:
IToplevelProtocol
*
GetActor
(
)
=
0
;
virtual
void
TestBody
(
)
=
0
;
}
;
#
define
IPDL_TEST_CLASS_NAME_
(
actorname
.
.
.
)
IPDL_TEST_
#
#
actorname
#
#
__VA_ARGS__
#
define
IPDL_TEST_HEAD_
(
actorname
.
.
.
)
\
class
IPDL_TEST_CLASS_NAME_
(
actorname
#
#
__VA_ARGS__
)
\
:
public
:
:
mozilla
:
:
_ipdltest
:
:
IPDLTestHelper
{
\
public
:
\
IPDL_TEST_CLASS_NAME_
(
actorname
#
#
__VA_ARGS__
)
\
(
)
:
mActor
(
new
actorname
#
#
Parent
)
{
}
\
\
private
:
\
void
TestBody
(
)
override
;
\
const
char
*
GetName
(
)
override
{
return
sName
;
}
;
\
actorname
#
#
Parent
*
GetActor
(
)
override
{
return
mActor
;
}
;
\
\
RefPtr
<
actorname
#
#
Parent
>
mActor
;
\
static
const
char
*
sName
;
\
}
;
\
const
char
*
IPDL_TEST_CLASS_NAME_
(
actorname
#
#
__VA_ARGS__
)
:
:
sName
=
\
:
:
mozilla
:
:
_ipdltest
:
:
RegisterAllocChildActor
(
\
#
actorname
[
]
(
)
-
>
:
:
mozilla
:
:
ipc
:
:
IToplevelProtocol
*
{
\
return
new
actorname
#
#
Child
;
\
}
)
;
#
define
IPDL_TEST_DECL_CROSSPROCESS_
(
actorname
.
.
.
)
\
TEST
(
IPDLTest_CrossProcess
actorname
#
#
__VA_ARGS__
)
\
{
\
IPDL_TEST_CLASS_NAME_
(
actorname
#
#
__VA_ARGS__
)
test
;
\
test
.
TestWrapper
(
true
)
;
\
}
#
define
IPDL_TEST_DECL_CROSSTHREAD_
(
actorname
.
.
.
)
\
TEST
(
IPDLTest_CrossThread
actorname
#
#
__VA_ARGS__
)
\
{
\
IPDL_TEST_CLASS_NAME_
(
actorname
#
#
__VA_ARGS__
)
test
;
\
test
.
TestWrapper
(
false
)
;
\
}
#
define
IPDL_TEST_DECL_ANY_
(
actorname
.
.
.
)
\
IPDL_TEST_DECL_CROSSPROCESS_
(
actorname
#
#
__VA_ARGS__
)
\
IPDL_TEST_DECL_CROSSTHREAD_
(
actorname
#
#
__VA_ARGS__
)
#
define
IPDL_TEST_BODY_SEGUE_
(
actorname
.
.
.
)
\
void
IPDL_TEST_CLASS_NAME_
(
actorname
#
#
__VA_ARGS__
)
:
:
TestBody
(
)
#
define
IPDL_TEST_ON
(
mode
actorname
.
.
.
)
\
IPDL_TEST_HEAD_
(
actorname
#
#
__VA_ARGS__
)
\
IPDL_TEST_DECL_
#
#
mode
#
#
_
(
actorname
#
#
__VA_ARGS__
)
\
IPDL_TEST_BODY_SEGUE_
(
actorname
#
#
__VA_ARGS__
)
#
define
IPDL_TEST
(
actorname
.
.
.
)
IPDL_TEST_ON
(
ANY
actorname
#
#
__VA_ARGS__
)
}
#
endif
