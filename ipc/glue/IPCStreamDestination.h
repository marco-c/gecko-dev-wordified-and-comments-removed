#
ifndef
mozilla_ipc_IPCStreamDestination_h
#
define
mozilla_ipc_IPCStreamDestination_h
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
class
nsIInputStream
;
class
nsIAsyncInputStream
;
class
nsIAsyncOutputStream
;
namespace
mozilla
{
namespace
ipc
{
class
PChildToParentStreamParent
;
class
PParentToChildStreamChild
;
class
IPCStreamDestination
{
public
:
static
IPCStreamDestination
*
Cast
(
PChildToParentStreamParent
*
aActor
)
;
static
IPCStreamDestination
*
Cast
(
PParentToChildStreamChild
*
aActor
)
;
virtual
already_AddRefed
<
nsIInputStream
>
TakeReader
(
)
;
protected
:
IPCStreamDestination
(
)
;
virtual
~
IPCStreamDestination
(
)
;
nsresult
Initialize
(
)
;
void
ActorDestroyed
(
)
;
void
BufferReceived
(
const
nsCString
&
aBuffer
)
;
void
CloseReceived
(
nsresult
aRv
)
;
virtual
void
RequestClose
(
nsresult
aRv
)
=
0
;
virtual
void
TerminateDestination
(
)
=
0
;
nsCOMPtr
<
nsIAsyncInputStream
>
mReader
;
nsCOMPtr
<
nsIAsyncOutputStream
>
mWriter
;
}
;
}
}
#
endif
