#
ifndef
mozilla_ipc_LaunchError_h
#
define
mozilla_ipc_LaunchError_h
#
include
"
mozilla
/
StaticString
.
h
"
#
include
"
nsError
.
h
"
#
if
defined
(
XP_WIN
)
#
include
<
windows
.
h
>
#
include
<
winerror
.
h
>
#
endif
namespace
mozilla
:
:
ipc
{
class
LaunchError
{
public
:
using
ErrorType
=
long
;
explicit
LaunchError
(
StaticString
aFunction
ErrorType
aError
=
0
)
:
mFunction
(
aFunction
)
mError
(
aError
)
{
}
#
ifdef
WIN32
static
LaunchError
FromWin32Error
(
StaticString
aFunction
DWORD
aError
)
{
return
LaunchError
(
aFunction
HRESULT_FROM_WIN32
(
aError
)
)
;
}
#
endif
LaunchError
(
StaticString
aFunction
nsresult
aError
)
:
mFunction
(
aFunction
)
mError
(
(
ErrorType
)
aError
)
{
}
StaticString
FunctionName
(
)
const
{
return
mFunction
;
}
ErrorType
ErrorCode
(
)
const
{
return
mError
;
}
private
:
StaticString
mFunction
;
ErrorType
mError
;
}
;
}
#
endif
