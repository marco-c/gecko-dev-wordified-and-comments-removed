include
MemoryReportTypes
;
include
PrefsTypes
;
include
protocol
PProfiler
;
include
protocol
PUtilityAudioDecoder
;
include
protocol
PJSOracle
;
#
if
defined
(
MOZ_SANDBOX
)
&
&
defined
(
MOZ_DEBUG
)
&
&
defined
(
ENABLE_TESTS
)
include
protocol
PSandboxTesting
;
#
endif
include
"
mozilla
/
ipc
/
ByteBufUtils
.
h
"
;
using
mozilla
:
:
dom
:
:
NativeThreadId
from
"
mozilla
/
dom
/
NativeThreadId
.
h
"
;
using
mozilla
:
:
Telemetry
:
:
HistogramAccumulation
from
"
mozilla
/
TelemetryComms
.
h
"
;
using
mozilla
:
:
Telemetry
:
:
KeyedHistogramAccumulation
from
"
mozilla
/
TelemetryComms
.
h
"
;
using
mozilla
:
:
Telemetry
:
:
ScalarAction
from
"
mozilla
/
TelemetryComms
.
h
"
;
using
mozilla
:
:
Telemetry
:
:
KeyedScalarAction
from
"
mozilla
/
TelemetryComms
.
h
"
;
using
mozilla
:
:
Telemetry
:
:
ChildEventData
from
"
mozilla
/
TelemetryComms
.
h
"
;
using
mozilla
:
:
Telemetry
:
:
DiscardedData
from
"
mozilla
/
TelemetryComms
.
h
"
;
namespace
mozilla
{
namespace
ipc
{
[
NeedsOtherPid
]
protocol
PUtilityProcess
{
parent
:
async
InitCrashReporter
(
NativeThreadId
threadId
)
;
async
AddMemoryReport
(
MemoryReport
aReport
)
;
async
FOGData
(
ByteBuf
buf
)
;
async
AccumulateChildHistograms
(
HistogramAccumulation
[
]
accumulations
)
;
async
AccumulateChildKeyedHistograms
(
KeyedHistogramAccumulation
[
]
accumulations
)
;
async
UpdateChildScalars
(
ScalarAction
[
]
actions
)
;
async
UpdateChildKeyedScalars
(
KeyedScalarAction
[
]
actions
)
;
async
RecordChildEvents
(
ChildEventData
[
]
events
)
;
async
RecordDiscardedData
(
DiscardedData
data
)
;
async
InitCompleted
(
)
;
child
:
async
Init
(
FileDescriptor
?
sandboxBroker
bool
canRecordReleaseTelemetry
)
;
async
InitProfiler
(
Endpoint
<
PProfilerChild
>
endpoint
)
;
async
RequestMemoryReport
(
uint32_t
generation
bool
anonymize
bool
minimizeMemoryUsage
FileDescriptor
?
DMDFile
)
returns
(
uint32_t
aGeneration
)
;
async
PreferenceUpdate
(
Pref
pref
)
;
async
FlushFOGData
(
)
returns
(
ByteBuf
buf
)
;
async
TestTriggerMetrics
(
)
returns
(
bool
unused
)
;
async
TestTelemetryProbes
(
)
;
async
StartUtilityAudioDecoderService
(
Endpoint
<
PUtilityAudioDecoderParent
>
aEndpoint
)
;
async
StartJSOracleService
(
Endpoint
<
PJSOracleChild
>
aEndpoint
)
;
#
if
defined
(
MOZ_SANDBOX
)
&
&
defined
(
MOZ_DEBUG
)
&
&
defined
(
ENABLE_TESTS
)
async
InitSandboxTesting
(
Endpoint
<
PSandboxTestingChild
>
aEndpoint
)
;
#
endif
}
;
}
}
