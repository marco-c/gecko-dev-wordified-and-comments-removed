#
ifndef
mozilla_ipc_backgroundchild_h__
#
define
mozilla_ipc_backgroundchild_h__
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
ipc
/
Transport
.
h
"
class
nsIEventTarget
;
namespace
mozilla
{
namespace
dom
{
class
BlobImpl
;
class
ContentChild
;
class
ContentParent
;
}
namespace
net
{
class
SocketProcessImpl
;
class
SocketProcessChild
;
}
namespace
ipc
{
class
PBackgroundChild
;
class
BackgroundChild
final
{
friend
class
mozilla
:
:
dom
:
:
ContentChild
;
friend
class
mozilla
:
:
dom
:
:
ContentParent
;
friend
class
mozilla
:
:
net
:
:
SocketProcessImpl
;
friend
class
mozilla
:
:
net
:
:
SocketProcessChild
;
typedef
mozilla
:
:
ipc
:
:
Transport
Transport
;
public
:
static
PBackgroundChild
*
GetForCurrentThread
(
)
;
static
PBackgroundChild
*
GetOrCreateForCurrentThread
(
nsIEventTarget
*
aMainEventTarget
=
nullptr
)
;
static
void
CloseForCurrentThread
(
)
;
static
PBackgroundChild
*
GetOrCreateSocketActorForCurrentThread
(
nsIEventTarget
*
aMainEventTarget
=
nullptr
)
;
static
PBackgroundChild
*
GetOrCreateForSocketParentBridgeForCurrentThread
(
nsIEventTarget
*
aMainEventTarget
=
nullptr
)
;
private
:
static
void
Startup
(
)
;
}
;
}
}
#
endif
