#
ifndef
mozilla_ipc_IPCStreamUtils_h
#
define
mozilla_ipc_IPCStreamUtils_h
#
include
"
mozilla
/
ipc
/
IPCStream
.
h
"
#
include
"
nsIInputStream
.
h
"
namespace
mozilla
{
namespace
dom
{
class
nsIContentChild
;
class
PContentParent
;
}
namespace
ipc
{
class
PBackgroundChild
;
class
PBackgroundParent
;
already_AddRefed
<
nsIInputStream
>
DeserializeIPCStream
(
const
IPCStream
&
aValue
)
;
already_AddRefed
<
nsIInputStream
>
DeserializeIPCStream
(
const
OptionalIPCStream
&
aValue
)
;
class
AutoIPCStream
final
{
OptionalIPCStream
mInlineValue
;
IPCStream
*
mValue
;
OptionalIPCStream
*
mOptionalValue
;
bool
mTaken
;
bool
IsSet
(
)
const
;
public
:
AutoIPCStream
(
)
;
explicit
AutoIPCStream
(
IPCStream
&
aTarget
)
;
explicit
AutoIPCStream
(
OptionalIPCStream
&
aTarget
)
;
~
AutoIPCStream
(
)
;
void
Serialize
(
nsIInputStream
*
aStream
dom
:
:
nsIContentChild
*
aManager
)
;
void
Serialize
(
nsIInputStream
*
aStream
PBackgroundChild
*
aManager
)
;
void
Serialize
(
nsIInputStream
*
aStream
dom
:
:
PContentParent
*
aManager
)
;
void
Serialize
(
nsIInputStream
*
aStream
PBackgroundParent
*
aManager
)
;
IPCStream
&
TakeValue
(
)
;
OptionalIPCStream
&
TakeOptionalValue
(
)
;
}
;
}
}
#
endif
