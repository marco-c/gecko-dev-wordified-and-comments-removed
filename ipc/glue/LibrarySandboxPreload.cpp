#
include
"
LibrarySandboxPreload
.
h
"
#
include
"
BinaryPath
.
h
"
#
include
"
prlink
.
h
"
namespace
mozilla
{
namespace
ipc
{
nsCString
GetSandboxedRLBoxPath
(
)
{
nsCOMPtr
<
nsIFile
>
libFile
;
nsresult
rv
=
mozilla
:
:
BinaryPath
:
:
GetFile
(
getter_AddRefs
(
libFile
)
)
;
if
(
NS_FAILED
(
rv
)
)
{
MOZ_CRASH
(
"
Library
preload
failure
:
Failed
to
get
binary
file
\
n
"
)
;
}
rv
=
libFile
-
>
SetNativeLeafName
(
MOZ_DLL_PREFIX
"
rlbox
"
MOZ_DLL_SUFFIX
"
"
_ns
)
;
if
(
NS_FAILED
(
rv
)
)
{
MOZ_CRASH
(
"
Library
preload
failure
:
Failed
to
get
library
file
\
n
"
)
;
}
PathString
fullPath
=
libFile
-
>
NativePath
(
)
;
#
ifdef
XP_WIN
return
NS_ConvertUTF16toUTF8
(
fullPath
)
;
#
else
return
fullPath
;
#
endif
}
PRLibrary
*
PreloadLibrary
(
const
nsCString
&
path
)
{
PRLibSpec
libSpec
;
libSpec
.
type
=
PR_LibSpec_Pathname
;
libSpec
.
value
.
pathname
=
path
.
get
(
)
;
PRLibrary
*
ret
=
PR_LoadLibraryWithFlags
(
libSpec
PR_LD_LAZY
)
;
return
ret
;
}
void
PreloadSandboxedDynamicLibrary
(
)
{
#
if
defined
(
XP_LINUX
)
&
&
defined
(
MOZ_USING_WASM_SANDBOXING
)
if
(
!
PreloadLibrary
(
GetSandboxedRLBoxPath
(
)
)
)
{
MOZ_CRASH
(
"
Library
preload
failure
:
Failed
to
load
librlbox
\
n
"
)
;
}
#
endif
}
}
}
