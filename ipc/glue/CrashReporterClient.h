#
ifndef
mozilla_ipc_CrashReporterClient_h
#
define
mozilla_ipc_CrashReporterClient_h
#
include
"
CrashReporter
/
CrashReporterInitArgs
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
StaticMutex
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
nsExceptionHandler
.
h
"
namespace
mozilla
:
:
ipc
{
class
CrashReporterClient
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
CrashReporterClient
)
;
template
<
typename
T
>
static
void
InitSingleton
(
T
*
aToplevelProtocol
)
{
InitSingleton
(
)
;
Unused
<
<
aToplevelProtocol
-
>
SendInitCrashReporter
(
CreateInitArgs
(
)
)
;
}
static
void
InitSingleton
(
)
;
static
CrashReporter
:
:
CrashReporterInitArgs
CreateInitArgs
(
)
;
static
void
DestroySingleton
(
)
;
static
RefPtr
<
CrashReporterClient
>
GetSingleton
(
)
;
private
:
explicit
CrashReporterClient
(
)
;
~
CrashReporterClient
(
)
;
static
StaticMutex
sLock
;
static
StaticRefPtr
<
CrashReporterClient
>
sClientSingleton
MOZ_GUARDED_BY
(
sLock
)
;
}
;
}
#
endif
