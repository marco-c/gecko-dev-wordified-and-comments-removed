#
ifndef
mozilla_ipc_InProcessParent_h
#
define
mozilla_ipc_InProcessParent_h
#
include
"
mozilla
/
ipc
/
PInProcessParent
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
namespace
mozilla
{
namespace
dom
{
class
PWindowGlobalParent
;
class
PWindowGlobalChild
;
}
namespace
ipc
{
class
InProcessChild
;
class
InProcessParent
:
public
nsIObserver
public
PInProcessParent
{
public
:
friend
class
InProcessChild
;
NS_DECL_ISUPPORTS
NS_DECL_NSIOBSERVER
static
InProcessParent
*
Singleton
(
)
;
static
IProtocol
*
ChildActorFor
(
IProtocol
*
aActor
)
;
protected
:
virtual
mozilla
:
:
dom
:
:
PWindowGlobalParent
*
AllocPWindowGlobalParent
(
const
WindowGlobalInit
&
aInit
)
override
;
virtual
bool
DeallocPWindowGlobalParent
(
mozilla
:
:
dom
:
:
PWindowGlobalParent
*
aActor
)
override
;
virtual
IPCResult
RecvPWindowGlobalConstructor
(
mozilla
:
:
dom
:
:
PWindowGlobalParent
*
aActor
const
WindowGlobalInit
&
aInit
)
override
;
private
:
virtual
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
virtual
void
DeallocPInProcessParent
(
)
override
;
~
InProcessParent
(
)
=
default
;
static
void
Startup
(
)
;
static
void
Shutdown
(
)
;
static
StaticRefPtr
<
InProcessParent
>
sSingleton
;
static
bool
sShutdown
;
}
;
}
}
#
endif
