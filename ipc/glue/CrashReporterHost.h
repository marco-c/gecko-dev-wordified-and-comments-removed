#
ifndef
mozilla_ipc_CrashReporterHost_h
#
define
mozilla_ipc_CrashReporterHost_h
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
ipc
/
Shmem
.
h
"
#
include
"
base
/
process
.
h
"
#
include
"
nsExceptionHandler
.
h
"
namespace
mozilla
{
namespace
ipc
{
class
CrashReporterHost
{
typedef
mozilla
:
:
ipc
:
:
Shmem
Shmem
;
typedef
CrashReporter
:
:
AnnotationTable
AnnotationTable
;
public
:
CrashReporterHost
(
GeckoProcessType
aProcessType
const
Shmem
&
aShmem
)
;
#
ifdef
MOZ_CRASHREPORTER
void
GenerateCrashReport
(
base
:
:
ProcessId
aPid
)
{
RefPtr
<
nsIFile
>
crashDump
;
if
(
!
XRE_TakeMinidumpForChild
(
aPid
getter_AddRefs
(
crashDump
)
nullptr
)
)
{
return
;
}
GenerateCrashReport
(
crashDump
)
;
}
static
void
NotifyCrashService
(
GeckoProcessType
aProcessType
const
nsString
&
aChildDumpID
const
AnnotationTable
*
aNotes
)
;
#
endif
private
:
void
GenerateCrashReport
(
RefPtr
<
nsIFile
>
aCrashDump
)
;
private
:
GeckoProcessType
mProcessType
;
Shmem
mShmem
;
time_t
mStartTime
;
}
;
}
}
#
endif
