#
include
"
mozilla
/
ProcInfo
.
h
"
#
include
"
mozilla
/
ipc
/
UtilityAudioDecoder
.
h
"
#
include
"
mozilla
/
ipc
/
UtilityProcessChild
.
h
"
namespace
mozilla
:
:
ipc
{
UtilityActorName
GetAudioActorName
(
const
SandboxingKind
aSandbox
)
{
switch
(
aSandbox
)
{
case
GENERIC_UTILITY
:
return
UtilityActorName
:
:
AudioDecoder_Generic
;
#
ifdef
MOZ_APPLEMEDIA
case
UTILITY_AUDIO_DECODING_APPLE_MEDIA
:
return
UtilityActorName
:
:
AudioDecoder_AppleMedia
;
#
endif
#
ifdef
XP_WIN
case
UTILITY_AUDIO_DECODING_WMF
:
return
UtilityActorName
:
:
AudioDecoder_WMF
;
#
endif
#
ifdef
MOZ_WMF_MEDIA_ENGINE
case
MF_MEDIA_ENGINE_CDM
:
return
UtilityActorName
:
:
MfMediaEngineCDM
;
#
endif
default
:
MOZ_CRASH
(
"
Unexpected
mSandbox
for
GetActorName
(
)
"
)
;
}
}
nsCString
GetChildAudioActorName
(
)
{
RefPtr
<
ipc
:
:
UtilityProcessChild
>
s
=
ipc
:
:
UtilityProcessChild
:
:
Get
(
)
;
MOZ_ASSERT
(
s
"
Has
UtilityProcessChild
"
)
;
return
nsCString
(
dom
:
:
WebIDLUtilityActorNameValues
:
:
GetString
(
GetAudioActorName
(
s
-
>
mSandbox
)
)
)
;
}
}
