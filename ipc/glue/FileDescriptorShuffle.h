#
ifndef
mozilla_ipc_FileDescriptorShuffle_h
#
define
mozilla_ipc_FileDescriptorShuffle_h
#
include
"
mozilla
/
Span
.
h
"
#
include
"
nsTArray
.
h
"
#
include
<
functional
>
#
include
<
utility
>
namespace
mozilla
{
namespace
ipc
{
class
FileDescriptorShuffle
{
public
:
FileDescriptorShuffle
(
)
=
default
;
~
FileDescriptorShuffle
(
)
;
using
MappingRef
=
mozilla
:
:
Span
<
const
std
:
:
pair
<
int
int
>
>
;
bool
Init
(
MappingRef
aMapping
)
;
MappingRef
Dup2Sequence
(
)
const
{
return
mMapping
;
}
bool
MapsTo
(
int
aFd
)
const
;
void
Forget
(
)
{
mTempFds
.
Clear
(
)
;
}
private
:
nsTArray
<
std
:
:
pair
<
int
int
>
>
mMapping
;
nsTArray
<
int
>
mTempFds
;
int
mMaxDst
;
FileDescriptorShuffle
(
const
FileDescriptorShuffle
&
)
=
delete
;
void
operator
=
(
const
FileDescriptorShuffle
&
)
=
delete
;
}
;
}
}
#
endif
