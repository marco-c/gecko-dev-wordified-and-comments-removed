#
ifndef
mozilla_ipc_Tainting_h
#
define
mozilla_ipc_Tainting_h
#
include
"
mozilla
/
Tainting
.
h
"
#
include
"
base
/
basictypes
.
h
"
#
include
"
base
/
process
.
h
"
#
include
"
mozilla
/
ipc
/
IPDLParamTraits
.
h
"
namespace
mozilla
{
namespace
ipc
{
template
<
typename
T
>
struct
IPDLParamTraits
<
mozilla
:
:
Tainted
<
T
>
>
{
static
void
Write
(
IPC
:
:
Message
*
aMsg
IProtocol
*
aActor
const
mozilla
:
:
Tainted
<
T
>
&
aParam
)
{
WriteIPDLParam
(
aMsg
aActor
aParam
.
mValue
)
;
}
static
void
Write
(
IPC
:
:
Message
*
aMsg
IProtocol
*
aActor
mozilla
:
:
Tainted
<
T
>
&
&
aParam
)
{
WriteIPDLParam
(
aMsg
aActor
std
:
:
move
(
aParam
.
mValue
)
)
;
}
static
bool
Read
(
const
IPC
:
:
Message
*
aMsg
PickleIterator
*
aIter
IProtocol
*
aActor
mozilla
:
:
Tainted
<
T
>
*
aResult
)
{
return
ReadIPDLParam
(
aMsg
aIter
aActor
&
(
aResult
-
>
mValue
)
)
;
}
}
;
}
}
#
endif
