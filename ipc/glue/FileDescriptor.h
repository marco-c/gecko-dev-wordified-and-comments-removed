#
ifndef
mozilla_ipc_FileDescriptor_h
#
define
mozilla_ipc_FileDescriptor_h
#
include
"
base
/
basictypes
.
h
"
#
include
"
base
/
process
.
h
"
#
include
"
mozilla
/
UniquePtrExtensions
.
h
"
namespace
mozilla
{
namespace
ipc
{
class
FileDescriptor
{
public
:
typedef
base
:
:
ProcessId
ProcessId
;
using
UniquePlatformHandle
=
mozilla
:
:
UniqueFileHandle
;
using
PlatformHandleType
=
UniquePlatformHandle
:
:
ElementType
;
struct
IPDLPrivate
{
}
;
FileDescriptor
(
)
;
FileDescriptor
(
const
FileDescriptor
&
aOther
)
;
FileDescriptor
(
FileDescriptor
&
&
aOther
)
;
explicit
FileDescriptor
(
PlatformHandleType
aHandle
)
;
explicit
FileDescriptor
(
UniquePlatformHandle
&
&
aHandle
)
;
~
FileDescriptor
(
)
;
FileDescriptor
&
operator
=
(
const
FileDescriptor
&
aOther
)
;
FileDescriptor
&
operator
=
(
FileDescriptor
&
&
aOther
)
;
bool
IsValid
(
)
const
;
UniquePlatformHandle
ClonePlatformHandle
(
)
const
;
UniquePlatformHandle
TakePlatformHandle
(
)
;
bool
operator
=
=
(
const
FileDescriptor
&
aOther
)
const
;
private
:
static
UniqueFileHandle
Clone
(
PlatformHandleType
aHandle
)
;
UniquePlatformHandle
mHandle
;
}
;
}
}
#
endif
