#
ifndef
mozilla_ipc_Transport_posix_h
#
define
mozilla_ipc_Transport_posix_h
1
#
include
"
ipc
/
IPCMessageUtils
.
h
"
namespace
mozilla
{
namespace
ipc
{
struct
TransportDescriptor
{
int
mFd
;
}
;
}
}
namespace
IPC
{
template
<
>
struct
ParamTraits
<
mozilla
:
:
ipc
:
:
TransportDescriptor
>
{
typedef
mozilla
:
:
ipc
:
:
TransportDescriptor
paramType
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
{
WriteParam
(
aMsg
mozilla
:
:
UniqueFileHandle
{
aParam
.
mFd
}
)
;
}
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
{
mozilla
:
:
UniqueFileHandle
fd
;
if
(
!
ReadParam
(
aMsg
aIter
&
fd
)
)
{
return
false
;
}
aResult
-
>
mFd
=
fd
.
release
(
)
;
return
true
;
}
}
;
}
#
endif
