#
ifndef
_include_ipc_glue_UtilityMediaServiceParent_h_
#
define
_include_ipc_glue_UtilityMediaServiceParent_h_
#
include
"
mozilla
/
PRemoteMediaManagerParent
.
h
"
#
include
"
mozilla
/
ProfilerMarkers
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
ipc
/
Endpoint
.
h
"
#
include
"
mozilla
/
ipc
/
PUtilityMediaServiceParent
.
h
"
#
include
"
mozilla
/
ipc
/
UtilityProcessSandboxing
.
h
"
#
include
"
nsThreadManager
.
h
"
namespace
mozilla
:
:
ipc
{
class
UtilityMediaServiceParent
final
:
public
PUtilityMediaServiceParent
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
UtilityMediaServiceParent
override
)
;
explicit
UtilityMediaServiceParent
(
nsTArray
<
mozilla
:
:
gfx
:
:
GfxVarUpdate
>
&
&
aUpdates
)
;
static
void
GenericPreloadForSandbox
(
)
;
static
void
WMFPreloadForSandbox
(
)
;
void
Start
(
Endpoint
<
PUtilityMediaServiceParent
>
&
&
aEndpoint
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvNewContentRemoteMediaManager
(
Endpoint
<
PRemoteMediaManagerParent
>
&
&
aEndpoint
const
ContentParentId
&
aParentId
)
;
#
ifdef
MOZ_WMF_MEDIA_ENGINE
mozilla
:
:
ipc
:
:
IPCResult
RecvInitVideoBridge
(
Endpoint
<
PVideoBridgeChild
>
&
&
aEndpoint
const
ContentDeviceData
&
aContentDeviceData
)
;
IPCResult
RecvUpdateVar
(
const
nsTArray
<
mozilla
:
:
gfx
:
:
GfxVarUpdate
>
&
aUpdate
)
;
#
endif
#
ifdef
MOZ_WMF_CDM
IPCResult
RecvGetKeySystemCapabilities
(
GetKeySystemCapabilitiesResolver
&
&
aResolver
)
;
IPCResult
RecvUpdateWidevineL1Path
(
const
nsString
&
aPath
)
;
#
endif
private
:
~
UtilityMediaServiceParent
(
)
;
const
SandboxingKind
mKind
;
TimeStamp
mUtilityMediaServiceParentStart
;
}
;
}
#
endif
