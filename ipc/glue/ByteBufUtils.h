#
ifndef
mozilla_ipc_ByteBufUtils_h
#
define
mozilla_ipc_ByteBufUtils_h
#
include
"
mozilla
/
ipc
/
ByteBuf
.
h
"
#
include
"
mozilla
/
CheckedInt
.
h
"
#
include
"
mozilla
/
mozalloc_oom
.
h
"
#
include
"
ipc
/
IPCMessageUtils
.
h
"
namespace
IPC
{
template
<
>
struct
ParamTraits
<
mozilla
:
:
ipc
:
:
ByteBuf
>
{
typedef
mozilla
:
:
ipc
:
:
ByteBuf
paramType
;
static
void
Write
(
MessageWriter
*
aWriter
paramType
&
&
aParam
)
{
mozilla
:
:
CheckedInt
<
uint32_t
>
length
=
aParam
.
mLen
;
MOZ_RELEASE_ASSERT
(
length
.
isValid
(
)
)
;
WriteParam
(
aWriter
length
.
value
(
)
)
;
aWriter
-
>
WriteBytesZeroCopy
(
aParam
.
mData
length
.
value
(
)
aParam
.
mCapacity
)
;
aParam
.
mData
=
nullptr
;
aParam
.
mCapacity
=
0
;
aParam
.
mLen
=
0
;
}
static
bool
Read
(
MessageReader
*
aReader
paramType
*
aResult
)
{
uint32_t
length
;
if
(
!
ReadParam
(
aReader
&
length
)
)
return
false
;
if
(
!
aResult
-
>
Allocate
(
length
)
)
{
mozalloc_handle_oom
(
length
)
;
return
false
;
}
return
aReader
-
>
ReadBytesInto
(
aResult
-
>
mData
length
)
;
}
}
;
}
#
endif
