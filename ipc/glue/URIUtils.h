#
ifndef
mozilla_ipc_URIUtils_h
#
define
mozilla_ipc_URIUtils_h
#
include
"
mozilla
/
ipc
/
URIParams
.
h
"
#
include
"
mozilla
/
ipc
/
IPDLParamTraits
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIURI
.
h
"
namespace
mozilla
{
namespace
ipc
{
void
SerializeURI
(
nsIURI
*
aURI
URIParams
&
aParams
)
;
void
SerializeURI
(
nsIURI
*
aURI
Maybe
<
URIParams
>
&
aParams
)
;
already_AddRefed
<
nsIURI
>
DeserializeURI
(
const
URIParams
&
aParams
)
;
already_AddRefed
<
nsIURI
>
DeserializeURI
(
const
Maybe
<
URIParams
>
&
aParams
)
;
template
<
>
struct
IPDLParamTraits
<
nsIURI
*
>
{
static
void
Write
(
IPC
:
:
MessageWriter
*
aWriter
IProtocol
*
aActor
nsIURI
*
aParam
)
{
Maybe
<
URIParams
>
params
;
SerializeURI
(
aParam
params
)
;
WriteIPDLParam
(
aWriter
aActor
params
)
;
}
static
bool
Read
(
IPC
:
:
MessageReader
*
aReader
IProtocol
*
aActor
RefPtr
<
nsIURI
>
*
aResult
)
{
Maybe
<
URIParams
>
params
;
if
(
!
ReadIPDLParam
(
aReader
aActor
&
params
)
)
{
return
false
;
}
*
aResult
=
DeserializeURI
(
params
)
;
return
true
;
}
}
;
}
}
#
endif
