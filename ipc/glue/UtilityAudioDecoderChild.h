#
ifndef
_include_ipc_glue_UtilityAudioDecoderChild_h__
#
define
_include_ipc_glue_UtilityAudioDecoderChild_h__
#
include
"
mozilla
/
ProcInfo
.
h
"
#
include
"
mozilla
/
ProfilerMarkers
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
ipc
/
Endpoint
.
h
"
#
include
"
mozilla
/
ipc
/
UtilityProcessParent
.
h
"
#
include
"
mozilla
/
ipc
/
UtilityProcessSandboxing
.
h
"
#
include
"
mozilla
/
ipc
/
UtilityAudioDecoder
.
h
"
#
include
"
mozilla
/
ipc
/
PUtilityAudioDecoderChild
.
h
"
#
ifdef
MOZ_WMF_MEDIA_ENGINE
#
include
"
mozilla
/
gfx
/
GPUProcessListener
.
h
"
#
include
"
mozilla
/
gfx
/
gfxVarReceiver
.
h
"
#
endif
#
include
"
PDMFactory
.
h
"
namespace
mozilla
:
:
ipc
{
class
UtilityAudioDecoderChildShutdownObserver
:
public
nsIObserver
{
public
:
explicit
UtilityAudioDecoderChildShutdownObserver
(
SandboxingKind
aKind
)
:
mSandbox
(
aKind
)
{
}
;
NS_DECL_ISUPPORTS
NS_IMETHOD
Observe
(
nsISupports
*
aSubject
const
char
*
aTopic
const
char16_t
*
aData
)
override
;
private
:
virtual
~
UtilityAudioDecoderChildShutdownObserver
(
)
=
default
;
const
SandboxingKind
mSandbox
;
}
;
class
UtilityAudioDecoderChild
final
:
public
PUtilityAudioDecoderChild
#
ifdef
MOZ_WMF_MEDIA_ENGINE
public
gfx
:
:
gfxVarReceiver
public
gfx
:
:
GPUProcessListener
#
endif
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
UtilityAudioDecoderChild
override
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvUpdateMediaCodecsSupported
(
const
RemoteMediaIn
&
aLocation
const
media
:
:
MediaCodecsSupported
&
aSupported
)
;
UtilityActorName
GetActorName
(
)
{
return
GetAudioActorName
(
mSandbox
)
;
}
nsresult
BindToUtilityProcess
(
RefPtr
<
UtilityProcessParent
>
aUtilityParent
)
;
void
ActorDestroy
(
ActorDestroyReason
aReason
)
override
;
void
Bind
(
Endpoint
<
PUtilityAudioDecoderChild
>
&
&
aEndpoint
)
;
static
void
Shutdown
(
SandboxingKind
aKind
)
;
static
RefPtr
<
UtilityAudioDecoderChild
>
GetSingleton
(
SandboxingKind
aKind
)
;
#
ifdef
MOZ_WMF_MEDIA_ENGINE
mozilla
:
:
ipc
:
:
IPCResult
RecvCompleteCreatedVideoBridge
(
)
;
void
OnVarChanged
(
const
gfx
:
:
GfxVarUpdate
&
aVar
)
override
;
void
OnCompositorUnexpectedShutdown
(
)
override
;
bool
CreateVideoBridge
(
)
;
#
endif
#
ifdef
MOZ_WMF_CDM
void
GetKeySystemCapabilities
(
dom
:
:
Promise
*
aPromise
)
;
#
endif
private
:
explicit
UtilityAudioDecoderChild
(
SandboxingKind
aKind
)
;
~
UtilityAudioDecoderChild
(
)
=
default
;
const
SandboxingKind
mSandbox
;
#
ifdef
MOZ_WMF_MEDIA_ENGINE
enum
class
State
{
None
Creating
Created
}
;
State
mHasCreatedVideoBridge
=
State
:
:
None
;
#
endif
TimeStamp
mAudioDecoderChildStart
;
}
;
}
#
endif
