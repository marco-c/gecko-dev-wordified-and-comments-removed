#
ifndef
mozilla_ipc_DaemonSocketConnector_h
#
define
mozilla_ipc_DaemonSocketConnector_h
#
include
"
mozilla
/
ipc
/
UnixSocketConnector
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
{
namespace
ipc
{
class
DaemonSocketConnector
final
:
public
UnixSocketConnector
{
public
:
static
nsresult
CreateRandomAddressString
(
const
nsACString
&
aPrefix
unsigned
long
aPostfixLength
nsACString
&
aAddress
)
;
DaemonSocketConnector
(
const
nsACString
&
aSocketName
)
;
~
DaemonSocketConnector
(
)
;
nsresult
ConvertAddressToString
(
const
struct
sockaddr
&
aAddress
socklen_t
aAddressLength
nsACString
&
aAddressString
)
override
;
nsresult
CreateListenSocket
(
struct
sockaddr
*
aAddress
socklen_t
*
aAddressLength
int
&
aListenFd
)
override
;
nsresult
AcceptStreamSocket
(
int
aListenFd
struct
sockaddr
*
aAddress
socklen_t
*
aAddressLen
int
&
aStreamFd
)
override
;
nsresult
CreateStreamSocket
(
struct
sockaddr
*
aAddress
socklen_t
*
aAddressLength
int
&
aStreamFd
)
override
;
nsresult
Duplicate
(
UnixSocketConnector
*
&
aConnector
)
override
;
private
:
nsresult
CreateSocket
(
int
&
aFd
)
const
;
nsresult
SetSocketFlags
(
int
aFd
)
const
;
nsresult
CreateAddress
(
struct
sockaddr
&
aAddress
socklen_t
&
aAddressLength
)
const
;
nsCString
mSocketName
;
}
;
}
}
#
endif
