#
include
"
chrome
/
common
/
ipc_channel
.
h
"
#
include
<
limits
>
#
include
"
base
/
process_util
.
h
"
#
include
"
base
/
rand_util
.
h
"
#
include
"
base
/
string_util
.
h
"
#
include
"
mozilla
/
Atomics
.
h
"
namespace
{
mozilla
:
:
Atomic
<
int
>
g_last_id
;
}
namespace
IPC
{
std
:
:
wstring
Channel
:
:
GenerateUniqueRandomChannelID
(
)
{
return
StringPrintf
(
L
"
%
d
.
%
u
.
%
d
"
base
:
:
GetCurrentProcId
(
)
g_last_id
+
+
base
:
:
RandInt
(
0
std
:
:
numeric_limits
<
int32_t
>
:
:
max
(
)
)
)
;
}
}
