#
ifndef
CHROME_COMMON_CHILD_THREAD_H_
#
define
CHROME_COMMON_CHILD_THREAD_H_
#
include
"
base
/
thread
.
h
"
#
include
"
chrome
/
common
/
ipc_channel
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
class
ResourceDispatcher
;
class
ChildThread
:
public
IPC
:
:
Channel
:
:
Listener
public
base
:
:
Thread
{
public
:
explicit
ChildThread
(
Thread
:
:
Options
options
)
;
virtual
~
ChildThread
(
)
;
protected
:
friend
class
ChildProcess
;
bool
Run
(
)
;
protected
:
static
ChildThread
*
current
(
)
;
IPC
:
:
Channel
*
channel
(
)
{
return
channel_
.
get
(
)
;
}
virtual
void
Init
(
)
override
;
virtual
void
CleanUp
(
)
override
;
private
:
virtual
void
OnMessageReceived
(
IPC
:
:
Message
&
&
msg
)
override
;
virtual
void
OnChannelError
(
)
override
;
MessageLoop
*
owner_loop_
;
std
:
:
wstring
channel_name_
;
mozilla
:
:
UniquePtr
<
IPC
:
:
Channel
>
channel_
;
Thread
:
:
Options
options_
;
DISALLOW_EVIL_CONSTRUCTORS
(
ChildThread
)
;
}
;
#
endif
