#
ifndef
CHROME_COMMON_CHILD_THREAD_H_
#
define
CHROME_COMMON_CHILD_THREAD_H_
#
include
"
base
/
thread
.
h
"
#
include
"
chrome
/
common
/
ipc_channel
.
h
"
#
include
"
mojo
/
core
/
ports
/
port_ref
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
ipc
/
ScopedPort
.
h
"
class
ResourceDispatcher
;
class
ChildThread
:
public
base
:
:
Thread
{
public
:
ChildThread
(
Thread
:
:
Options
options
IPC
:
:
Channel
:
:
ChannelHandle
client_handle
base
:
:
ProcessId
parent_pid
)
;
virtual
~
ChildThread
(
)
;
mozilla
:
:
ipc
:
:
ScopedPort
TakeInitialPort
(
)
{
return
std
:
:
move
(
initial_port_
)
;
}
protected
:
friend
class
ChildProcess
;
bool
Run
(
)
;
protected
:
static
ChildThread
*
current
(
)
;
virtual
void
Init
(
)
override
;
virtual
void
CleanUp
(
)
override
;
private
:
MessageLoop
*
owner_loop_
;
mozilla
:
:
ipc
:
:
ScopedPort
initial_port_
;
Thread
:
:
Options
options_
;
IPC
:
:
Channel
:
:
ChannelHandle
client_handle_
;
base
:
:
ProcessId
parent_pid_
;
DISALLOW_EVIL_CONSTRUCTORS
(
ChildThread
)
;
}
;
#
endif
