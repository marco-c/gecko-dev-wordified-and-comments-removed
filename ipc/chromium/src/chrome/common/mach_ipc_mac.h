#
ifndef
BASE_MACH_IPC_MAC_H_
#
define
BASE_MACH_IPC_MAC_H_
#
include
<
mach
/
mach
.
h
>
#
include
<
mach
/
message
.
h
>
#
include
<
sys
/
types
.
h
>
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
Result
.
h
"
#
include
"
mozilla
/
UniquePtrExtensions
.
h
"
#
include
"
mozilla
/
ipc
/
LaunchError
.
h
"
kern_return_t
MachSendPortSendRight
(
mach_port_t
endpoint
mach_port_t
attachment
mozilla
:
:
Maybe
<
mach_msg_timeout_t
>
opt_timeout
mach_msg_type_name_t
endpoint_disposition
=
MACH_MSG_TYPE_COPY_SEND
)
;
kern_return_t
MachReceivePortSendRight
(
const
mozilla
:
:
UniqueMachReceiveRight
&
endpoint
mozilla
:
:
Maybe
<
mach_msg_timeout_t
>
opt_timeout
mozilla
:
:
UniqueMachSendRight
*
attachment
audit_token_t
*
audit_token
=
nullptr
)
;
#
ifdef
XP_MACOSX
bool
MachChildProcessCheckIn
(
const
char
*
bootstrap_service_name
mach_msg_timeout_t
timeout
std
:
:
vector
<
mozilla
:
:
UniqueMachSendRight
>
&
send_rights
)
;
mozilla
:
:
Result
<
mozilla
:
:
Ok
mozilla
:
:
ipc
:
:
LaunchError
>
MachHandleProcessCheckIn
(
mach_port_t
endpoint
pid_t
child_pid
mach_msg_timeout_t
timeout
const
std
:
:
vector
<
mozilla
:
:
UniqueMachSendRight
>
&
send_rights
task_t
*
child_task
)
;
#
endif
#
endif
