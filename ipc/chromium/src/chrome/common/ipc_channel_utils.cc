#
include
"
chrome
/
common
/
ipc_channel_utils
.
h
"
#
include
"
mozilla
/
ProfilerMarkers
.
h
"
#
include
"
chrome
/
common
/
ipc_message
.
h
"
namespace
IPC
{
void
AddIPCProfilerMarker
(
const
Message
&
aMessage
int32_t
aOtherPid
mozilla
:
:
ipc
:
:
MessageDirection
aDirection
mozilla
:
:
ipc
:
:
MessagePhase
aPhase
)
{
if
(
aMessage
.
routing_id
(
)
!
=
MSG_ROUTING_NONE
&
&
profiler_feature_active
(
ProfilerFeature
:
:
IPCMessages
)
)
{
if
(
aOtherPid
=
=
-
1
)
{
DLOG
(
WARNING
)
<
<
"
Unable
to
record
IPC
profile
marker
other
PID
not
set
"
;
return
;
}
if
(
profiler_is_locked_on_current_thread
(
)
)
{
return
;
}
[
[
maybe_unused
]
]
const
mozilla
:
:
TimeStamp
now
=
mozilla
:
:
TimeStamp
:
:
Now
(
)
;
bool
isThreadBeingProfiled
=
profiler_thread_is_being_profiled_for_markers
(
)
;
PROFILER_MARKER
(
"
IPC
"
IPC
mozilla
:
:
MarkerOptions
(
mozilla
:
:
MarkerTiming
:
:
InstantAt
(
now
)
isThreadBeingProfiled
?
mozilla
:
:
MarkerThreadId
:
:
CurrentThread
(
)
:
mozilla
:
:
MarkerThreadId
:
:
MainThread
(
)
)
IPCMarker
now
now
aOtherPid
aMessage
.
seqno
(
)
aMessage
.
type
(
)
mozilla
:
:
ipc
:
:
UnknownSide
aDirection
aPhase
aMessage
.
is_sync
(
)
isThreadBeingProfiled
?
mozilla
:
:
MarkerThreadId
{
}
:
mozilla
:
:
MarkerThreadId
:
:
CurrentThread
(
)
)
;
}
}
}
