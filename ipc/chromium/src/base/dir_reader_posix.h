#
ifndef
BASE_DIR_READER_POSIX_H_
#
define
BASE_DIR_READER_POSIX_H_
#
pragma
once
#
include
"
build
/
build_config
.
h
"
#
if
defined
(
XP_LINUX
)
#
include
"
base
/
dir_reader_linux
.
h
"
#
elif
(
defined
(
__DragonFly__
)
|
|
defined
(
XP_FREEBSD
)
|
|
defined
(
XP_NETBSD
)
|
|
\
defined
(
XP_OPENBSD
)
)
&
&
\
!
defined
(
__GLIBC__
)
#
include
"
base
/
dir_reader_bsd
.
h
"
#
else
#
include
"
base
/
dir_reader_fallback
.
h
"
#
endif
namespace
base
{
#
if
defined
(
XP_LINUX
)
typedef
DirReaderLinux
DirReaderPosix
;
#
elif
(
defined
(
__DragonFly__
)
|
|
defined
(
XP_FREEBSD
)
|
|
defined
(
XP_NETBSD
)
|
|
\
defined
(
XP_OPENBSD
)
)
&
&
\
!
defined
(
__GLIBC__
)
typedef
DirReaderBSD
DirReaderPosix
;
#
else
typedef
DirReaderFallback
DirReaderPosix
;
#
endif
}
#
endif
