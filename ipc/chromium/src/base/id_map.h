#
ifndef
BASE_ID_MAP_H__
#
define
BASE_ID_MAP_H__
#
include
"
base
/
logging
.
h
"
#
include
"
nsDataHashtable
.
h
"
#
include
"
nsHashKeys
.
h
"
template
<
class
T
>
class
IDMap
{
private
:
using
HashTable
=
nsDataHashtable
<
nsUint32HashKey
T
>
;
public
:
IDMap
(
)
{
}
IDMap
(
const
IDMap
&
other
)
:
data_
(
other
.
data_
)
{
}
using
const_iterator
=
typename
HashTable
:
:
const_iterator
;
const_iterator
begin
(
)
const
{
return
data_
.
begin
(
)
;
}
const_iterator
end
(
)
const
{
return
data_
.
end
(
)
;
}
bool
Contains
(
int32_t
id
)
{
return
data_
.
Contains
(
id
)
;
}
void
Put
(
int32_t
id
const
T
&
data
)
{
data_
.
Put
(
id
data
)
;
}
void
Remove
(
int32_t
id
)
{
data_
.
Remove
(
id
)
;
}
void
Clear
(
)
{
data_
.
Clear
(
)
;
}
T
Get
(
int32_t
id
)
const
{
return
data_
.
Get
(
id
)
;
}
protected
:
HashTable
data_
;
}
;
#
endif
