libevent_path_prefix
=
'
.
'
include
(
libevent_path_prefix
+
'
/
libeventcommon
.
mozbuild
'
)
if
CONFIG
[
"
TARGET_KERNEL
"
]
=
=
"
WINNT
"
:
error
(
'
should
not
reach
here
on
Windows
'
)
if
CONFIG
[
'
MOZ_SYSTEM_LIBEVENT
'
]
:
error
(
'
should
not
reach
here
if
we
are
using
a
native
libevent
'
)
UNIFIED_SOURCES
+
=
[
'
libevent
/
buffer
.
c
'
'
libevent
/
bufferevent
.
c
'
'
libevent
/
bufferevent_filter
.
c
'
'
libevent
/
bufferevent_ratelim
.
c
'
'
libevent
/
bufferevent_sock
.
c
'
'
libevent
/
evdns
.
c
'
'
libevent
/
event
.
c
'
'
libevent
/
event_tagging
.
c
'
'
libevent
/
evmap
.
c
'
'
libevent
/
evthread
.
c
'
'
libevent
/
evutil
.
c
'
'
libevent
/
evutil_rand
.
c
'
'
libevent
/
evutil_time
.
c
'
'
libevent
/
http
.
c
'
'
libevent
/
listener
.
c
'
'
libevent
/
log
.
c
'
'
libevent
/
poll
.
c
'
'
libevent
/
select
.
c
'
'
libevent
/
signal
.
c
'
'
libevent
/
strlcpy
.
c
'
]
SOURCES
+
=
[
'
libevent
/
bufferevent_pair
.
c
'
]
if
CONFIG
[
"
TARGET_KERNEL
"
]
in
(
"
Darwin
"
"
DragonFly
"
"
FreeBSD
"
"
NetBSD
"
"
OpenBSD
"
)
:
UNIFIED_SOURCES
+
=
[
'
libevent
/
kqueue
.
c
'
]
if
CONFIG
[
"
TARGET_KERNEL
"
]
=
=
"
Linux
"
:
UNIFIED_SOURCES
+
=
[
'
libevent
/
epoll
.
c
'
]
if
CONFIG
[
'
OS_TARGET
'
]
!
=
'
Android
'
:
UNIFIED_SOURCES
+
=
[
'
libevent
/
epoll_sub
.
c
'
]
if
CONFIG
[
"
TARGET_KERNEL
"
]
=
=
"
SunOS
"
:
SOURCES
+
=
[
'
libevent
/
devpoll
.
c
'
'
libevent
/
evport
.
c
'
]
AllowCompilerWarnings
(
)
Library
(
'
libevent
'
)
FINAL_LIBRARY
=
'
xul
'
