#
ifndef
mozilla_mscom_ProcessRuntime_h
#
define
mozilla_mscom_ProcessRuntime_h
#
include
"
mozilla
/
Attributes
.
h
"
#
if
defined
(
ACCESSIBILITY
)
&
&
defined
(
MOZILLA_INTERNAL_API
)
#
include
"
mozilla
/
mscom
/
ActivationContext
.
h
"
#
endif
#
include
"
mozilla
/
mscom
/
ApartmentRegion
.
h
"
#
include
"
nsXULAppAPI
.
h
"
namespace
mozilla
{
namespace
mscom
{
class
MOZ_NON_TEMPORARY_CLASS
ProcessRuntime
final
{
public
:
#
if
defined
(
MOZILLA_INTERNAL_API
)
ProcessRuntime
(
)
:
ProcessRuntime
(
XRE_GetProcessType
(
)
)
{
}
#
endif
explicit
ProcessRuntime
(
GeckoProcessType
aProcessType
)
;
~
ProcessRuntime
(
)
=
default
;
explicit
operator
bool
(
)
const
{
return
SUCCEEDED
(
mInitResult
)
;
}
ProcessRuntime
(
ProcessRuntime
&
)
=
delete
;
ProcessRuntime
(
ProcessRuntime
&
&
)
=
delete
;
ProcessRuntime
&
operator
=
(
ProcessRuntime
&
)
=
delete
;
ProcessRuntime
&
operator
=
(
ProcessRuntime
&
&
)
=
delete
;
static
DWORD
GetClientThreadId
(
)
;
private
:
void
InitInsideApartment
(
)
;
HRESULT
InitializeSecurity
(
)
;
#
if
defined
(
MOZILLA_INTERNAL_API
)
static
bool
IsWin32kLockedDown
(
)
;
#
endif
HRESULT
mInitResult
;
bool
mIsParentProcess
;
#
if
defined
(
ACCESSIBILITY
)
&
&
defined
(
MOZILLA_INTERNAL_API
)
ActivationContextRegion
mActCtxRgn
;
#
endif
ApartmentRegion
mAptRegion
;
}
;
}
}
#
endif
