#
ifndef
mozilla_mscom_AgileReference_h
#
define
mozilla_mscom_AgileReference_h
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
<
objidl
.
h
>
namespace
mozilla
{
namespace
mscom
{
class
AgileReference
{
public
:
AgileReference
(
REFIID
aIid
IUnknown
*
aObject
)
;
AgileReference
(
AgileReference
&
&
aOther
)
;
~
AgileReference
(
)
;
explicit
operator
bool
(
)
const
{
return
mAgileRef
|
|
mGitCookie
;
}
HRESULT
Resolve
(
REFIID
aIid
void
*
*
aOutInterface
)
;
AgileReference
(
const
AgileReference
&
aOther
)
=
delete
;
AgileReference
&
operator
=
(
const
AgileReference
&
aOther
)
=
delete
;
AgileReference
&
operator
=
(
AgileReference
&
&
aOther
)
=
delete
;
private
:
IGlobalInterfaceTable
*
ObtainGit
(
)
;
private
:
REFIID
mIid
;
RefPtr
<
IAgileReference
>
mAgileRef
;
DWORD
mGitCookie
;
}
;
}
}
#
endif
