#
ifndef
mozilla_mscom_ProcessRuntimeShared_h
#
define
mozilla_mscom_ProcessRuntimeShared_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Types
.
h
"
namespace
mozilla
{
namespace
mscom
{
namespace
detail
{
enum
class
ProcessInitState
:
uint32_t
{
Uninitialized
=
0
PartialSecurityInitialized
PartialGlobalOptions
FullyInitialized
}
;
MFBT_API
ProcessInitState
&
BeginProcessRuntimeInit
(
)
;
MFBT_API
void
EndProcessRuntimeInit
(
)
;
}
class
MOZ_RAII
ProcessInitLock
final
{
public
:
ProcessInitLock
(
)
:
mInitState
(
detail
:
:
BeginProcessRuntimeInit
(
)
)
{
}
~
ProcessInitLock
(
)
{
detail
:
:
EndProcessRuntimeInit
(
)
;
}
detail
:
:
ProcessInitState
GetInitState
(
)
const
{
return
mInitState
;
}
void
SetInitState
(
const
detail
:
:
ProcessInitState
aNewState
)
{
MOZ_DIAGNOSTIC_ASSERT
(
aNewState
>
mInitState
)
;
mInitState
=
aNewState
;
}
ProcessInitLock
(
const
ProcessInitLock
&
)
=
delete
;
ProcessInitLock
(
ProcessInitLock
&
&
)
=
delete
;
ProcessInitLock
operator
=
(
const
ProcessInitLock
&
)
=
delete
;
ProcessInitLock
operator
=
(
ProcessInitLock
&
&
)
=
delete
;
private
:
detail
:
:
ProcessInitState
&
mInitState
;
}
;
}
}
#
endif
