const
base64url
=
"
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
-
_
"
;
function
run_test
(
)
{
_
(
"
Make
sure
makeGUID
makes
guids
of
the
right
length
/
characters
"
)
;
_
(
"
Create
a
bunch
of
guids
to
make
sure
they
don
'
t
conflict
"
)
;
let
guids
=
[
]
;
for
(
let
i
=
0
;
i
<
1000
;
i
+
+
)
{
let
newGuid
=
Utils
.
makeGUID
(
)
;
_
(
"
Generated
"
+
newGuid
)
;
Assert
.
equal
(
newGuid
.
length
12
)
;
Assert
.
equal
(
encodeURIComponent
(
newGuid
)
.
length
12
)
;
Assert
.
ok
(
Array
.
prototype
.
every
.
call
(
newGuid
function
(
chr
)
{
return
base64url
.
includes
(
chr
)
;
}
)
)
;
Assert
.
ok
(
Utils
.
checkGUID
(
newGuid
)
)
;
Assert
.
ok
(
guids
.
every
(
function
(
g
)
{
return
g
!
=
newGuid
;
}
)
)
;
guids
.
push
(
newGuid
)
;
}
_
(
"
Make
sure
checkGUID
fails
for
invalid
GUIDs
"
)
;
Assert
.
ok
(
!
Utils
.
checkGUID
(
undefined
)
)
;
Assert
.
ok
(
!
Utils
.
checkGUID
(
null
)
)
;
Assert
.
ok
(
!
Utils
.
checkGUID
(
"
"
)
)
;
Assert
.
ok
(
!
Utils
.
checkGUID
(
"
blergh
"
)
)
;
Assert
.
ok
(
!
Utils
.
checkGUID
(
"
ThisGUIDisWayTooLong
"
)
)
;
Assert
.
ok
(
!
Utils
.
checkGUID
(
"
Invalid
!
!
!
!
!
"
)
)
;
}
