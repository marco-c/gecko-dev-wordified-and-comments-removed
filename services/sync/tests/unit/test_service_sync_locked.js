Cu
.
import
(
"
resource
:
/
/
services
-
sync
/
service
.
js
"
)
;
Cu
.
import
(
"
resource
:
/
/
services
-
sync
/
util
.
js
"
)
;
add_task
(
async
function
run_test
(
)
{
validate_all_future_pings
(
)
;
let
debug
=
[
]
;
let
info
=
[
]
;
function
augmentLogger
(
old
)
{
let
d
=
old
.
debug
;
let
i
=
old
.
info
;
old
.
debug
=
function
(
m
p
)
{
debug
.
push
(
p
?
m
+
"
:
"
+
p
:
m
)
;
d
.
call
(
old
m
p
)
;
}
old
.
info
=
function
(
m
p
)
{
info
.
push
(
p
?
m
+
"
:
"
+
p
:
m
)
;
i
.
call
(
old
m
p
)
;
}
return
old
;
}
Log
.
repository
.
rootLogger
.
addAppender
(
new
Log
.
DumpAppender
(
)
)
;
augmentLogger
(
Service
.
_log
)
;
Svc
.
Prefs
.
set
(
"
lastPing
"
Math
.
floor
(
Date
.
now
(
)
/
1000
)
)
;
_
(
"
Check
that
sync
will
log
appropriately
if
already
in
'
progress
'
.
"
)
;
Service
.
_locked
=
true
;
await
Service
.
sync
(
)
;
Service
.
_locked
=
false
;
do_check_true
(
debug
[
debug
.
length
-
2
]
.
startsWith
(
"
Exception
calling
WrappedLock
:
Could
not
acquire
lock
.
Label
:
\
"
service
.
js
:
login
\
"
.
"
)
)
;
do_check_eq
(
info
[
info
.
length
-
1
]
"
Cannot
start
sync
:
already
syncing
?
"
)
;
}
)
;
