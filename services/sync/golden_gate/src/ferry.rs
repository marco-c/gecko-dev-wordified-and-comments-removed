use
nsstring
:
:
nsCString
;
use
storage_variant
:
:
VariantType
;
use
sync15
:
:
{
engine
:
:
IncomingEnvelope
Guid
}
;
use
xpcom
:
:
{
interfaces
:
:
nsIVariant
RefPtr
}
;
pub
enum
Ferry
{
LastSync
SetLastSync
(
i64
)
SyncId
ResetSyncId
EnsureCurrentSyncId
(
String
)
SyncStarted
StoreIncoming
(
Vec
<
IncomingEnvelope
>
)
SetUploaded
(
i64
Vec
<
Guid
>
)
SyncFinished
Reset
Wipe
}
impl
Ferry
{
pub
fn
name
(
&
self
)
-
>
&
'
static
str
{
match
self
{
Ferry
:
:
LastSync
=
>
concat
!
(
module_path
!
(
)
"
getLastSync
"
)
Ferry
:
:
SetLastSync
(
_
)
=
>
concat
!
(
module_path
!
(
)
"
setLastSync
"
)
Ferry
:
:
SyncId
=
>
concat
!
(
module_path
!
(
)
"
getSyncId
"
)
Ferry
:
:
ResetSyncId
=
>
concat
!
(
module_path
!
(
)
"
resetSyncId
"
)
Ferry
:
:
EnsureCurrentSyncId
(
_
)
=
>
concat
!
(
module_path
!
(
)
"
ensureCurrentSyncId
"
)
Ferry
:
:
SyncStarted
=
>
concat
!
(
module_path
!
(
)
"
syncStarted
"
)
Ferry
:
:
StoreIncoming
{
.
.
}
=
>
concat
!
(
module_path
!
(
)
"
storeIncoming
"
)
Ferry
:
:
SetUploaded
{
.
.
}
=
>
concat
!
(
module_path
!
(
)
"
setUploaded
"
)
Ferry
:
:
SyncFinished
=
>
concat
!
(
module_path
!
(
)
"
syncFinished
"
)
Ferry
:
:
Reset
=
>
concat
!
(
module_path
!
(
)
"
reset
"
)
Ferry
:
:
Wipe
=
>
concat
!
(
module_path
!
(
)
"
wipe
"
)
}
}
}
pub
enum
FerryResult
{
LastSync
(
i64
)
SyncId
(
Option
<
String
>
)
AssignedSyncId
(
String
)
Null
}
impl
Default
for
FerryResult
{
fn
default
(
)
-
>
Self
{
FerryResult
:
:
Null
}
}
impl
FerryResult
{
pub
fn
into_variant
(
self
)
-
>
RefPtr
<
nsIVariant
>
{
match
self
{
FerryResult
:
:
LastSync
(
v
)
=
>
v
.
into_variant
(
)
FerryResult
:
:
SyncId
(
Some
(
v
)
)
=
>
nsCString
:
:
from
(
v
)
.
into_variant
(
)
FerryResult
:
:
SyncId
(
None
)
=
>
(
)
.
into_variant
(
)
FerryResult
:
:
AssignedSyncId
(
v
)
=
>
nsCString
:
:
from
(
v
)
.
into_variant
(
)
FerryResult
:
:
Null
=
>
(
)
.
into_variant
(
)
}
}
}
