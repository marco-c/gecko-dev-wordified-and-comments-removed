const
{
GeckoViewChildModule
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewChildModule
.
jsm
"
)
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
ErrorPageEventHandler
:
"
chrome
:
/
/
geckoview
/
content
/
ErrorPageEventHandler
.
js
"
}
)
;
class
GeckoViewNavigationChild
extends
GeckoViewChildModule
{
onInit
(
)
{
if
(
Services
.
androidBridge
.
isFennec
)
{
addEventListener
(
"
DOMContentLoaded
"
this
)
;
}
}
handleEvent
(
aEvent
)
{
switch
(
aEvent
.
type
)
{
case
"
DOMContentLoaded
"
:
{
let
target
=
aEvent
.
originalTarget
;
if
(
target
!
=
content
.
document
)
{
return
;
}
let
docURI
=
target
.
documentURI
;
if
(
docURI
.
startsWith
(
"
about
:
certerror
"
)
|
|
docURI
.
startsWith
(
"
about
:
blocked
"
)
)
{
addEventListener
(
"
click
"
ErrorPageEventHandler
true
)
;
let
listener
=
(
)
=
>
{
removeEventListener
(
"
click
"
ErrorPageEventHandler
true
)
;
removeEventListener
(
"
pagehide
"
listener
true
)
;
}
;
addEventListener
(
"
pagehide
"
listener
true
)
;
}
break
;
}
}
}
}
const
{
debug
warn
}
=
GeckoViewNavigationChild
.
initLogging
(
"
GeckoViewNavigation
"
)
;
const
module
=
GeckoViewNavigationChild
.
create
(
this
)
;
