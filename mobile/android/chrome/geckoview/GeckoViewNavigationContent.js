ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewContentModule
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
ErrorPageEventHandler
:
"
chrome
:
/
/
geckoview
/
content
/
ErrorPageEventHandler
.
js
"
LoadURIDelegate
:
"
resource
:
/
/
gre
/
modules
/
LoadURIDelegate
.
jsm
"
}
)
;
XPCOMUtils
.
defineLazyGetter
(
this
"
dump
"
(
)
=
>
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
AndroidLog
.
jsm
"
{
}
)
.
AndroidLog
.
d
.
bind
(
null
"
ViewNavigation
[
C
]
"
)
)
;
function
debug
(
aMsg
)
{
}
class
GeckoViewNavigationContent
extends
GeckoViewContentModule
{
onEnable
(
)
{
debug
(
"
onEnable
"
)
;
docShell
.
loadURIDelegate
=
this
;
}
onDisable
(
)
{
debug
(
"
onDisable
"
)
;
docShell
.
loadURIDelegate
=
null
;
}
loadURI
(
aUri
aWhere
aFlags
aTriggeringPrincipal
)
{
debug
(
"
loadURI
"
+
(
aUri
&
&
aUri
.
spec
)
+
"
"
+
aWhere
+
"
"
+
aFlags
)
;
if
(
aUri
&
&
aUri
.
displaySpec
.
startsWith
(
"
about
:
certerror
"
)
)
{
addEventListener
(
"
click
"
ErrorPageEventHandler
true
)
;
}
return
LoadURIDelegate
.
load
(
this
.
eventDispatcher
aUri
aWhere
aFlags
aTriggeringPrincipal
)
;
}
}
let
{
debug
warn
}
=
GeckoViewNavigationContent
.
initLogging
(
"
GeckoViewNavigation
"
)
;
let
module
=
GeckoViewNavigationContent
.
create
(
this
)
;
