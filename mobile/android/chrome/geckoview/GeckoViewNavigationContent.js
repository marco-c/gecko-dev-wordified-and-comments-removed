ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewContentModule
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
Services
:
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
}
)
;
XPCOMUtils
.
defineLazyGetter
(
this
"
dump
"
(
)
=
>
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
AndroidLog
.
jsm
"
{
}
)
.
AndroidLog
.
d
.
bind
(
null
"
ViewNavigationContent
"
)
)
;
function
debug
(
aMsg
)
{
}
class
GeckoViewNavigationContent
extends
GeckoViewContentModule
{
register
(
)
{
debug
(
"
register
"
)
;
docShell
.
loadURIDelegate
=
this
;
}
unregister
(
)
{
debug
(
"
unregister
"
)
;
docShell
.
loadURIDelegate
=
null
;
}
loadURI
(
aUri
aWhere
aFlags
aTriggeringPrincipal
)
{
debug
(
"
loadURI
"
+
(
aUri
&
&
aUri
.
spec
)
+
"
"
+
aWhere
+
"
"
+
aFlags
)
;
let
message
=
{
type
:
"
GeckoView
:
OnLoadUri
"
uri
:
aUri
?
aUri
.
displaySpec
:
"
"
where
:
aWhere
flags
:
aFlags
}
;
debug
(
"
dispatch
"
+
JSON
.
stringify
(
message
)
)
;
let
handled
=
undefined
;
this
.
eventDispatcher
.
sendRequestForResult
(
message
)
.
then
(
response
=
>
{
handled
=
response
;
}
(
)
=
>
{
handled
=
false
;
}
)
;
Services
.
tm
.
spinEventLoopUntil
(
(
)
=
>
handled
!
=
=
undefined
)
;
return
handled
;
}
}
var
navigationListener
=
new
GeckoViewNavigationContent
(
"
GeckoViewNavigation
"
this
)
;
