ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewChildModule
.
jsm
"
)
;
class
GeckoViewScrollChild
extends
GeckoViewChildModule
{
onEnable
(
)
{
debug
onEnable
;
addEventListener
(
"
mozvisualscroll
"
this
{
mozSystemGroup
:
true
}
)
;
}
onDisable
(
)
{
debug
onDisable
;
removeEventListener
(
"
mozvisualscroll
"
{
mozSystemGroup
:
true
}
)
;
}
handleEvent
(
aEvent
)
{
if
(
aEvent
.
originalTarget
.
ownerGlobal
!
=
content
)
{
return
;
}
debug
handleEvent
:
{
aEvent
.
type
}
;
switch
(
aEvent
.
type
)
{
case
"
mozvisualscroll
"
:
let
x
=
{
}
y
=
{
}
;
content
.
windowUtils
.
getVisualViewportOffset
(
x
y
)
;
this
.
eventDispatcher
.
sendRequest
(
{
type
:
"
GeckoView
:
ScrollChanged
"
scrollX
:
x
.
value
scrollY
:
y
.
value
}
)
;
break
;
}
}
}
let
{
debug
warn
}
=
GeckoViewScrollChild
.
initLogging
(
"
GeckoViewScroll
"
)
;
let
module
=
GeckoViewScrollChild
.
create
(
this
)
;
