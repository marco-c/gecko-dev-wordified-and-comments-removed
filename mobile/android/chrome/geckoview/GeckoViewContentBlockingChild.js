const
{
GeckoViewChildModule
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewChildModule
.
jsm
"
)
;
class
GeckoViewContentBlockingChild
extends
GeckoViewChildModule
{
onEnable
(
)
{
debug
onEnable
;
this
.
messageManager
.
addMessageListener
(
"
ContentBlocking
:
RequestLog
"
this
)
;
}
receiveMessage
(
aMsg
)
{
debug
receiveMessage
:
{
aMsg
.
name
}
;
switch
(
aMsg
.
name
)
{
case
"
ContentBlocking
:
RequestLog
"
:
{
docShell
.
getContentBlockingLog
(
)
.
then
(
val
=
>
sendAsyncMessage
(
"
ContentBlocking
:
ExportLog
"
{
log
:
JSON
.
parse
(
val
)
id
:
aMsg
.
data
.
id
}
)
reason
=
>
sendAsyncMessage
(
"
ContentBlocking
:
ExportLog
"
{
error
:
reason
id
:
aMsg
.
data
.
id
}
)
)
;
break
;
}
}
}
}
const
{
debug
warn
}
=
GeckoViewContentBlockingChild
.
initLogging
(
"
GeckoViewContentBlocking
"
)
;
const
module
=
GeckoViewContentBlockingChild
.
create
(
this
)
;
