"
use
strict
"
;
const
{
Preferences
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Preferences
.
jsm
"
)
;
this
.
test
=
class
extends
ExtensionAPI
{
getAPI
(
context
)
{
return
{
test
:
{
async
setPrefs
(
oldPrefs
newPrefs
)
{
Object
.
assign
(
oldPrefs
.
.
.
Object
.
keys
(
newPrefs
)
.
filter
(
key
=
>
!
(
key
in
oldPrefs
)
)
.
map
(
key
=
>
(
{
[
key
]
:
Preferences
.
get
(
key
null
)
}
)
)
)
;
Preferences
.
set
(
newPrefs
)
;
return
oldPrefs
;
}
async
restorePrefs
(
oldPrefs
)
{
for
(
let
[
name
value
]
of
Object
.
entries
(
oldPrefs
)
)
{
if
(
value
=
=
=
null
)
{
Preferences
.
reset
(
name
)
;
}
else
{
Preferences
.
set
(
name
value
)
;
}
}
}
async
getPrefs
(
prefs
)
{
return
Preferences
.
get
(
prefs
)
;
}
}
}
;
}
}
;
