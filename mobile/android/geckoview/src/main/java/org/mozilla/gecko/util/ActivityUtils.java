package
org
.
mozilla
.
gecko
.
util
;
import
android
.
app
.
Activity
;
import
android
.
content
.
Context
;
import
android
.
content
.
ContextWrapper
;
import
android
.
content
.
Intent
;
import
android
.
os
.
Build
;
import
android
.
view
.
View
;
import
android
.
view
.
Window
;
import
android
.
view
.
WindowManager
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
public
class
ActivityUtils
{
private
ActivityUtils
(
)
{
}
public
static
void
setFullScreen
(
Activity
activity
boolean
fullscreen
)
{
Window
window
=
activity
.
getWindow
(
)
;
if
(
Build
.
VERSION
.
SDK_INT
>
=
16
)
{
int
newVis
;
if
(
fullscreen
)
{
newVis
=
View
.
SYSTEM_UI_FLAG_FULLSCREEN
;
if
(
Build
.
VERSION
.
SDK_INT
>
=
19
)
{
newVis
|
=
View
.
SYSTEM_UI_FLAG_HIDE_NAVIGATION
|
View
.
SYSTEM_UI_FLAG_LAYOUT_STABLE
|
View
.
SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
|
View
.
SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
|
View
.
SYSTEM_UI_FLAG_IMMERSIVE_STICKY
;
}
else
{
newVis
|
=
View
.
SYSTEM_UI_FLAG_LOW_PROFILE
;
}
}
else
{
newVis
=
View
.
SYSTEM_UI_FLAG_VISIBLE
;
}
if
(
AppConstants
.
Versions
.
feature23Plus
)
{
final
int
oldVis
=
window
.
getDecorView
(
)
.
getSystemUiVisibility
(
)
;
newVis
|
=
(
oldVis
&
View
.
SYSTEM_UI_FLAG_LIGHT_STATUS_BAR
)
;
}
window
.
getDecorView
(
)
.
setSystemUiVisibility
(
newVis
)
;
}
else
{
window
.
setFlags
(
fullscreen
?
WindowManager
.
LayoutParams
.
FLAG_FULLSCREEN
:
0
WindowManager
.
LayoutParams
.
FLAG_FULLSCREEN
)
;
}
}
public
static
boolean
isFullScreen
(
final
Activity
activity
)
{
final
Window
window
=
activity
.
getWindow
(
)
;
if
(
Build
.
VERSION
.
SDK_INT
>
=
16
)
{
final
int
vis
=
window
.
getDecorView
(
)
.
getSystemUiVisibility
(
)
;
return
(
vis
&
View
.
SYSTEM_UI_FLAG_FULLSCREEN
)
!
=
0
;
}
final
int
flags
=
window
.
getAttributes
(
)
.
flags
;
return
(
(
flags
&
WindowManager
.
LayoutParams
.
FLAG_FULLSCREEN
)
!
=
0
)
;
}
public
static
void
goToHomeScreen
(
Context
context
)
{
Intent
intent
=
new
Intent
(
Intent
.
ACTION_MAIN
)
;
intent
.
addCategory
(
Intent
.
CATEGORY_HOME
)
;
intent
.
setFlags
(
Intent
.
FLAG_ACTIVITY_NEW_TASK
)
;
context
.
startActivity
(
intent
)
;
}
public
static
Activity
getActivityFromContext
(
Context
context
)
{
while
(
context
instanceof
ContextWrapper
)
{
if
(
context
instanceof
Activity
)
{
return
(
Activity
)
context
;
}
context
=
(
(
ContextWrapper
)
context
)
.
getBaseContext
(
)
;
}
return
null
;
}
}
