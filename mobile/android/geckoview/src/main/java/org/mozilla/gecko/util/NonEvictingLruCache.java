package
org
.
mozilla
.
gecko
.
util
;
import
android
.
util
.
LruCache
;
import
java
.
util
.
concurrent
.
ConcurrentHashMap
;
public
class
NonEvictingLruCache
<
K
V
>
{
private
final
ConcurrentHashMap
<
K
V
>
mPermanent
=
new
ConcurrentHashMap
<
K
V
>
(
)
;
private
final
LruCache
<
K
V
>
mEvitable
;
public
NonEvictingLruCache
(
final
int
evictableSize
)
{
mEvitable
=
new
LruCache
<
K
V
>
(
evictableSize
)
;
}
public
V
get
(
final
K
key
)
{
V
val
=
mPermanent
.
get
(
key
)
;
if
(
val
=
=
null
)
{
return
mEvitable
.
get
(
key
)
;
}
return
val
;
}
public
void
putWithoutEviction
(
final
K
key
final
V
value
)
{
mPermanent
.
put
(
key
value
)
;
}
public
void
put
(
final
K
key
final
V
value
)
{
mEvitable
.
put
(
key
value
)
;
}
public
void
evictAll
(
)
{
mEvitable
.
evictAll
(
)
;
}
}
