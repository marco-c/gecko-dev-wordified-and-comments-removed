package
org
.
mozilla
.
gecko
;
import
android
.
content
.
Context
;
import
android
.
hardware
.
display
.
DisplayManager
;
import
android
.
util
.
Log
;
import
android
.
view
.
Display
;
public
class
GeckoScreenChangeListener
implements
DisplayManager
.
DisplayListener
{
private
static
final
String
LOGTAG
=
"
ScreenChangeListener
"
;
private
static
final
boolean
DEBUG
=
false
;
public
GeckoScreenChangeListener
(
)
{
}
Override
public
void
onDisplayAdded
(
final
int
displayId
)
{
}
Override
public
void
onDisplayRemoved
(
final
int
displayId
)
{
}
Override
public
void
onDisplayChanged
(
final
int
displayId
)
{
if
(
DEBUG
)
{
Log
.
d
(
LOGTAG
"
onDisplayChanged
"
)
;
}
if
(
displayId
!
=
Display
.
DEFAULT_DISPLAY
)
{
if
(
DEBUG
)
{
Log
.
d
(
LOGTAG
"
Primary
display
is
only
supported
"
)
;
}
return
;
}
final
DisplayManager
displayManager
=
getDisplayManager
(
)
;
if
(
displayManager
=
=
null
)
{
return
;
}
if
(
GeckoScreenOrientation
.
getInstance
(
)
.
update
(
displayManager
.
getDisplay
(
displayId
)
)
)
{
return
;
}
ScreenManagerHelper
.
refreshScreenInfo
(
)
;
}
private
static
DisplayManager
getDisplayManager
(
)
{
return
(
DisplayManager
)
GeckoAppShell
.
getApplicationContext
(
)
.
getSystemService
(
Context
.
DISPLAY_SERVICE
)
;
}
public
void
enable
(
)
{
final
DisplayManager
displayManager
=
getDisplayManager
(
)
;
if
(
displayManager
=
=
null
)
{
return
;
}
displayManager
.
registerDisplayListener
(
this
null
)
;
}
public
void
disable
(
)
{
final
DisplayManager
displayManager
=
getDisplayManager
(
)
;
if
(
displayManager
=
=
null
)
{
return
;
}
displayManager
.
unregisterDisplayListener
(
this
)
;
}
}
