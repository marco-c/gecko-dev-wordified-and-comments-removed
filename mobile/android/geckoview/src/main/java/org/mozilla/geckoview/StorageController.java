package
org
.
mozilla
.
geckoview
;
import
java
.
lang
.
annotation
.
Retention
;
import
java
.
lang
.
annotation
.
RetentionPolicy
;
import
android
.
support
.
annotation
.
AnyThread
;
import
android
.
support
.
annotation
.
LongDef
;
import
android
.
support
.
annotation
.
NonNull
;
import
org
.
mozilla
.
gecko
.
EventDispatcher
;
import
org
.
mozilla
.
gecko
.
util
.
GeckoBundle
;
public
final
class
StorageController
{
public
static
class
ClearFlags
{
public
static
final
long
COOKIES
=
1
<
<
0
;
public
static
final
long
NETWORK_CACHE
=
1
<
<
1
;
public
static
final
long
IMAGE_CACHE
=
1
<
<
2
;
public
static
final
long
DOM_STORAGES
=
1
<
<
4
;
public
static
final
long
AUTH_SESSIONS
=
1
<
<
5
;
public
static
final
long
PERMISSIONS
=
1
<
<
6
;
public
static
final
long
ALL_CACHES
=
NETWORK_CACHE
|
IMAGE_CACHE
;
public
static
final
long
SITE_SETTINGS
=
1
<
<
7
|
PERMISSIONS
;
public
static
final
long
SITE_DATA
=
1
<
<
8
|
COOKIES
|
DOM_STORAGES
|
ALL_CACHES
|
PERMISSIONS
|
SITE_SETTINGS
;
public
static
final
long
ALL
=
1
<
<
9
;
}
Retention
(
RetentionPolicy
.
SOURCE
)
LongDef
(
flag
=
true
value
=
{
ClearFlags
.
COOKIES
ClearFlags
.
NETWORK_CACHE
ClearFlags
.
IMAGE_CACHE
ClearFlags
.
DOM_STORAGES
ClearFlags
.
AUTH_SESSIONS
ClearFlags
.
PERMISSIONS
ClearFlags
.
ALL_CACHES
ClearFlags
.
SITE_SETTINGS
ClearFlags
.
SITE_DATA
ClearFlags
.
ALL
}
)
interface
StorageControllerClearFlags
{
}
AnyThread
public
NonNull
GeckoResult
<
Void
>
clearData
(
final
StorageControllerClearFlags
long
flags
)
{
final
CallbackResult
<
Void
>
result
=
new
CallbackResult
<
Void
>
(
)
{
Override
public
void
sendSuccess
(
final
Object
response
)
{
complete
(
null
)
;
}
}
;
final
GeckoBundle
bundle
=
new
GeckoBundle
(
1
)
;
bundle
.
putLong
(
"
flags
"
flags
)
;
EventDispatcher
.
getInstance
(
)
.
dispatch
(
"
GeckoView
:
ClearData
"
bundle
result
)
;
return
result
;
}
AnyThread
public
NonNull
GeckoResult
<
Void
>
clearDataFromHost
(
final
NonNull
String
host
final
StorageControllerClearFlags
long
flags
)
{
final
CallbackResult
<
Void
>
result
=
new
CallbackResult
<
Void
>
(
)
{
Override
public
void
sendSuccess
(
final
Object
response
)
{
complete
(
null
)
;
}
}
;
final
GeckoBundle
bundle
=
new
GeckoBundle
(
2
)
;
bundle
.
putString
(
"
host
"
host
)
;
bundle
.
putLong
(
"
flags
"
flags
)
;
EventDispatcher
.
getInstance
(
)
.
dispatch
(
"
GeckoView
:
ClearHostData
"
bundle
result
)
;
return
result
;
}
}
