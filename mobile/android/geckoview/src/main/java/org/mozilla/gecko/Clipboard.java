package
org
.
mozilla
.
gecko
.
util
;
import
java
.
util
.
concurrent
.
SynchronousQueue
;
import
org
.
mozilla
.
gecko
.
annotation
.
WrapForJNI
;
import
org
.
mozilla
.
gecko
.
GeckoAppShell
;
import
android
.
content
.
ClipboardManager
;
import
android
.
content
.
ClipData
;
import
android
.
content
.
Context
;
import
android
.
util
.
Log
;
public
final
class
Clipboard
{
private
final
static
String
LOGTAG
=
"
GeckoClipboard
"
;
private
final
static
SynchronousQueue
<
String
>
sClipboardQueue
=
new
SynchronousQueue
<
String
>
(
)
;
private
Clipboard
(
)
{
}
WrapForJNI
(
calledFrom
=
"
gecko
"
)
public
static
String
getText
(
)
{
if
(
ThreadUtils
.
isOnUiThread
(
)
|
|
ThreadUtils
.
isOnBackgroundThread
(
)
)
{
return
getClipboardTextImpl
(
)
;
}
ThreadUtils
.
postToBackgroundThread
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
String
text
=
getClipboardTextImpl
(
)
;
try
{
sClipboardQueue
.
put
(
text
!
=
null
?
text
:
"
"
)
;
}
catch
(
InterruptedException
ie
)
{
}
}
}
)
;
try
{
return
sClipboardQueue
.
take
(
)
;
}
catch
(
InterruptedException
ie
)
{
return
"
"
;
}
}
WrapForJNI
(
calledFrom
=
"
gecko
"
)
public
static
void
setText
(
final
CharSequence
text
)
{
ThreadUtils
.
postToBackgroundThread
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
final
Context
context
=
GeckoAppShell
.
getApplicationContext
(
)
;
if
(
context
=
=
null
)
{
return
;
}
final
ClipboardManager
cm
=
(
ClipboardManager
)
context
.
getSystemService
(
Context
.
CLIPBOARD_SERVICE
)
;
final
ClipData
clip
=
ClipData
.
newPlainText
(
"
Text
"
text
)
;
try
{
cm
.
setPrimaryClip
(
clip
)
;
}
catch
(
NullPointerException
e
)
{
}
return
;
}
}
)
;
}
WrapForJNI
(
calledFrom
=
"
gecko
"
)
public
static
boolean
hasText
(
)
{
final
Context
context
=
GeckoAppShell
.
getApplicationContext
(
)
;
if
(
context
=
=
null
)
{
return
false
;
}
final
ClipboardManager
cm
=
(
ClipboardManager
)
context
.
getSystemService
(
Context
.
CLIPBOARD_SERVICE
)
;
return
cm
.
hasPrimaryClip
(
)
;
}
WrapForJNI
(
calledFrom
=
"
gecko
"
)
public
static
void
clearText
(
)
{
setText
(
null
)
;
}
SuppressWarnings
(
"
deprecation
"
)
static
String
getClipboardTextImpl
(
)
{
final
Context
context
=
GeckoAppShell
.
getApplicationContext
(
)
;
if
(
context
=
=
null
)
{
return
null
;
}
final
ClipboardManager
cm
=
(
ClipboardManager
)
context
.
getSystemService
(
Context
.
CLIPBOARD_SERVICE
)
;
if
(
cm
.
hasPrimaryClip
(
)
)
{
ClipData
clip
=
cm
.
getPrimaryClip
(
)
;
if
(
clip
!
=
null
)
{
ClipData
.
Item
item
=
clip
.
getItemAt
(
0
)
;
return
item
.
coerceToText
(
context
)
.
toString
(
)
;
}
}
return
null
;
}
}
