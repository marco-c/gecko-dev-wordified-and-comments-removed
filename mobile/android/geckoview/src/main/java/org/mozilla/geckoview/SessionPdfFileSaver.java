package
org
.
mozilla
.
geckoview
;
import
android
.
util
.
Log
;
import
androidx
.
annotation
.
AnyThread
;
import
androidx
.
annotation
.
NonNull
;
import
androidx
.
annotation
.
Nullable
;
import
java
.
io
.
ByteArrayInputStream
;
import
org
.
mozilla
.
gecko
.
EventDispatcher
;
import
org
.
mozilla
.
geckoview
.
GeckoSession
.
PdfSaveResult
;
AnyThread
public
final
class
SessionPdfFileSaver
{
private
static
final
String
LOGTAG
=
"
GeckoPdfFileSaver
"
;
private
final
EventDispatcher
mDispatcher
;
SessionPdfFileSaver
(
NonNull
final
EventDispatcher
dispatcher
)
{
mDispatcher
=
dispatcher
;
}
NonNull
public
GeckoResult
<
PdfSaveResult
>
save
(
)
{
return
mDispatcher
.
queryBundle
(
"
GeckoView
:
PDFSave
"
null
)
.
map
(
response
-
>
new
PdfSaveResult
(
response
)
)
;
}
public
static
Nullable
WebResponse
createResponse
(
NonNull
final
byte
[
]
data
NonNull
final
String
filename
NonNull
final
String
originalUrl
)
{
try
{
return
new
WebResponse
.
Builder
(
originalUrl
)
.
statusCode
(
200
)
.
body
(
new
ByteArrayInputStream
(
data
)
)
.
addHeader
(
"
Content
-
Type
"
"
application
/
pdf
"
)
.
addHeader
(
"
Content
-
Length
"
Integer
.
toString
(
data
.
length
)
)
.
addHeader
(
"
Content
-
Disposition
"
"
attachment
;
filename
=
\
"
"
+
filename
+
"
\
"
"
)
.
build
(
)
;
}
catch
(
final
Exception
e
)
{
Log
.
d
(
LOGTAG
e
.
getMessage
(
)
)
;
return
null
;
}
}
}
