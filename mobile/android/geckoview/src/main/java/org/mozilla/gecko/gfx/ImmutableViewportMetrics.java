package
org
.
mozilla
.
gecko
.
gfx
;
import
android
.
graphics
.
PointF
;
import
android
.
graphics
.
RectF
;
public
class
ImmutableViewportMetrics
{
public
final
float
viewportRectLeft
;
public
final
float
viewportRectTop
;
public
final
int
viewportRectWidth
;
public
final
int
viewportRectHeight
;
public
final
float
zoomFactor
;
public
ImmutableViewportMetrics
(
)
{
viewportRectLeft
=
0
;
viewportRectTop
=
0
;
viewportRectWidth
=
0
;
viewportRectHeight
=
0
;
zoomFactor
=
1
.
0f
;
}
private
ImmutableViewportMetrics
(
float
aViewportRectLeft
float
aViewportRectTop
int
aViewportRectWidth
int
aViewportRectHeight
float
aZoomFactor
)
{
viewportRectLeft
=
aViewportRectLeft
;
viewportRectTop
=
aViewportRectTop
;
viewportRectWidth
=
aViewportRectWidth
;
viewportRectHeight
=
aViewportRectHeight
;
zoomFactor
=
aZoomFactor
;
}
public
float
getWidth
(
)
{
return
viewportRectWidth
;
}
public
float
getHeight
(
)
{
return
viewportRectHeight
;
}
public
float
viewportRectRight
(
)
{
return
viewportRectLeft
+
viewportRectWidth
;
}
public
float
viewportRectBottom
(
)
{
return
viewportRectTop
+
viewportRectHeight
;
}
public
PointF
getOrigin
(
)
{
return
new
PointF
(
viewportRectLeft
viewportRectTop
)
;
}
public
FloatSize
getSize
(
)
{
return
new
FloatSize
(
viewportRectWidth
viewportRectHeight
)
;
}
public
RectF
getViewport
(
)
{
return
new
RectF
(
viewportRectLeft
viewportRectTop
viewportRectRight
(
)
viewportRectBottom
(
)
)
;
}
public
ImmutableViewportMetrics
setViewportSize
(
int
width
int
height
)
{
if
(
width
=
=
viewportRectWidth
&
&
height
=
=
viewportRectHeight
)
{
return
this
;
}
return
new
ImmutableViewportMetrics
(
viewportRectLeft
viewportRectTop
width
height
zoomFactor
)
;
}
public
ImmutableViewportMetrics
setViewportOrigin
(
float
newOriginX
float
newOriginY
)
{
return
new
ImmutableViewportMetrics
(
newOriginX
newOriginY
viewportRectWidth
viewportRectHeight
zoomFactor
)
;
}
public
ImmutableViewportMetrics
setZoomFactor
(
float
newZoomFactor
)
{
return
new
ImmutableViewportMetrics
(
viewportRectLeft
viewportRectTop
viewportRectWidth
viewportRectHeight
newZoomFactor
)
;
}
Override
public
String
toString
(
)
{
return
"
ImmutableViewportMetrics
v
=
(
"
+
viewportRectLeft
+
"
"
+
viewportRectTop
+
"
"
+
viewportRectWidth
+
"
x
"
+
viewportRectHeight
+
"
)
z
=
"
+
zoomFactor
;
}
}
