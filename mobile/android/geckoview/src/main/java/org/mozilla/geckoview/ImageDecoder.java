package
org
.
mozilla
.
geckoview
;
import
android
.
graphics
.
Bitmap
;
import
android
.
support
.
annotation
.
AnyThread
;
import
android
.
support
.
annotation
.
NonNull
;
import
org
.
mozilla
.
gecko
.
GeckoThread
;
import
org
.
mozilla
.
gecko
.
annotation
.
WrapForJNI
;
AnyThread
class
ImageDecoder
{
private
static
ImageDecoder
instance
;
private
ImageDecoder
(
)
{
}
public
static
ImageDecoder
instance
(
)
{
if
(
instance
=
=
null
)
{
instance
=
new
ImageDecoder
(
)
;
}
return
instance
;
}
WrapForJNI
(
dispatchTo
=
"
gecko
"
stubName
=
"
Decode
"
)
private
static
native
void
nativeDecode
(
final
String
uri
final
int
maxSize
GeckoResult
<
Bitmap
>
result
)
;
NonNull
public
GeckoResult
<
Bitmap
>
decode
(
final
NonNull
String
uri
)
{
return
decode
(
uri
0
)
;
}
NonNull
public
GeckoResult
<
Bitmap
>
decode
(
final
NonNull
String
uri
final
int
maxSize
)
{
if
(
uri
=
=
null
)
{
throw
new
IllegalArgumentException
(
"
Uri
cannot
be
null
"
)
;
}
final
GeckoResult
<
Bitmap
>
result
=
new
GeckoResult
<
>
(
)
;
if
(
GeckoThread
.
isStateAtLeast
(
GeckoThread
.
State
.
PROFILE_READY
)
)
{
nativeDecode
(
uri
maxSize
result
)
;
}
else
{
GeckoThread
.
queueNativeCallUntil
(
GeckoThread
.
State
.
PROFILE_READY
this
"
nativeDecode
"
String
.
class
uri
int
.
class
maxSize
GeckoResult
.
class
result
)
;
}
return
result
;
}
}
