package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
;
import
android
.
os
.
Handler
;
import
java
.
util
.
concurrent
.
CopyOnWriteArrayList
;
public
final
class
EventDispatcher
<
T
>
{
public
interface
Event
<
T
>
{
void
sendTo
(
T
listener
)
;
}
private
final
CopyOnWriteArrayList
<
HandlerAndListener
<
T
>
>
listeners
;
public
EventDispatcher
(
)
{
listeners
=
new
CopyOnWriteArrayList
<
>
(
)
;
}
public
void
addListener
(
Handler
handler
T
eventListener
)
{
Assertions
.
checkArgument
(
handler
!
=
null
&
&
eventListener
!
=
null
)
;
removeListener
(
eventListener
)
;
listeners
.
add
(
new
HandlerAndListener
<
>
(
handler
eventListener
)
)
;
}
public
void
removeListener
(
T
eventListener
)
{
for
(
HandlerAndListener
<
T
>
handlerAndListener
:
listeners
)
{
if
(
handlerAndListener
.
listener
=
=
eventListener
)
{
handlerAndListener
.
release
(
)
;
listeners
.
remove
(
handlerAndListener
)
;
}
}
}
public
void
dispatch
(
Event
<
T
>
event
)
{
for
(
HandlerAndListener
<
T
>
handlerAndListener
:
listeners
)
{
handlerAndListener
.
dispatch
(
event
)
;
}
}
private
static
final
class
HandlerAndListener
<
T
>
{
private
final
Handler
handler
;
private
final
T
listener
;
private
boolean
released
;
public
HandlerAndListener
(
Handler
handler
T
eventListener
)
{
this
.
handler
=
handler
;
this
.
listener
=
eventListener
;
}
public
void
release
(
)
{
released
=
true
;
}
public
void
dispatch
(
Event
<
T
>
event
)
{
handler
.
post
(
(
)
-
>
{
if
(
!
released
)
{
event
.
sendTo
(
listener
)
;
}
}
)
;
}
}
}
