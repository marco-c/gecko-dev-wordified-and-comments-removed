package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
trackselection
;
import
androidx
.
annotation
.
Nullable
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
C
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
TrackGroup
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
chunk
.
MediaChunk
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
chunk
.
MediaChunkIterator
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
upstream
.
BandwidthMeter
;
import
java
.
util
.
List
;
import
org
.
checkerframework
.
checker
.
nullness
.
compatqual
.
NullableType
;
public
final
class
FixedTrackSelection
extends
BaseTrackSelection
{
Deprecated
public
static
final
class
Factory
implements
TrackSelection
.
Factory
{
private
final
int
reason
;
Nullable
private
final
Object
data
;
public
Factory
(
)
{
this
.
reason
=
C
.
SELECTION_REASON_UNKNOWN
;
this
.
data
=
null
;
}
public
Factory
(
int
reason
Nullable
Object
data
)
{
this
.
reason
=
reason
;
this
.
data
=
data
;
}
Override
public
NullableType
TrackSelection
[
]
createTrackSelections
(
NullableType
Definition
[
]
definitions
BandwidthMeter
bandwidthMeter
)
{
return
TrackSelectionUtil
.
createTrackSelectionsForDefinitions
(
definitions
definition
-
>
new
FixedTrackSelection
(
definition
.
group
definition
.
tracks
[
0
]
reason
data
)
)
;
}
}
private
final
int
reason
;
Nullable
private
final
Object
data
;
public
FixedTrackSelection
(
TrackGroup
group
int
track
)
{
this
(
group
track
C
.
SELECTION_REASON_UNKNOWN
null
)
;
}
public
FixedTrackSelection
(
TrackGroup
group
int
track
int
reason
Nullable
Object
data
)
{
super
(
group
track
)
;
this
.
reason
=
reason
;
this
.
data
=
data
;
}
Override
public
void
updateSelectedTrack
(
long
playbackPositionUs
long
bufferedDurationUs
long
availableDurationUs
List
<
?
extends
MediaChunk
>
queue
MediaChunkIterator
[
]
mediaChunkIterators
)
{
}
Override
public
int
getSelectedIndex
(
)
{
return
0
;
}
Override
public
int
getSelectionReason
(
)
{
return
reason
;
}
Override
Nullable
public
Object
getSelectionData
(
)
{
return
data
;
}
}
