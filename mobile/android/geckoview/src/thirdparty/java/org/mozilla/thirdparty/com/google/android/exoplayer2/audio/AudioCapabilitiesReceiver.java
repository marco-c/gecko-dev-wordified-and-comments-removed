package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
audio
;
import
android
.
content
.
BroadcastReceiver
;
import
android
.
content
.
Context
;
import
android
.
content
.
Intent
;
import
android
.
content
.
IntentFilter
;
import
android
.
media
.
AudioManager
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
Assertions
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
Util
;
public
final
class
AudioCapabilitiesReceiver
{
public
interface
Listener
{
void
onAudioCapabilitiesChanged
(
AudioCapabilities
audioCapabilities
)
;
}
private
final
Context
context
;
private
final
Listener
listener
;
private
final
BroadcastReceiver
receiver
;
AudioCapabilities
audioCapabilities
;
public
AudioCapabilitiesReceiver
(
Context
context
Listener
listener
)
{
this
.
context
=
Assertions
.
checkNotNull
(
context
)
;
this
.
listener
=
Assertions
.
checkNotNull
(
listener
)
;
this
.
receiver
=
Util
.
SDK_INT
>
=
21
?
new
HdmiAudioPlugBroadcastReceiver
(
)
:
null
;
}
SuppressWarnings
(
"
InlinedApi
"
)
public
AudioCapabilities
register
(
)
{
Intent
stickyIntent
=
receiver
=
=
null
?
null
:
context
.
registerReceiver
(
receiver
new
IntentFilter
(
AudioManager
.
ACTION_HDMI_AUDIO_PLUG
)
)
;
audioCapabilities
=
AudioCapabilities
.
getCapabilities
(
stickyIntent
)
;
return
audioCapabilities
;
}
public
void
unregister
(
)
{
if
(
receiver
!
=
null
)
{
context
.
unregisterReceiver
(
receiver
)
;
}
}
private
final
class
HdmiAudioPlugBroadcastReceiver
extends
BroadcastReceiver
{
Override
public
void
onReceive
(
Context
context
Intent
intent
)
{
if
(
!
isInitialStickyBroadcast
(
)
)
{
AudioCapabilities
newAudioCapabilities
=
AudioCapabilities
.
getCapabilities
(
intent
)
;
if
(
!
newAudioCapabilities
.
equals
(
audioCapabilities
)
)
{
audioCapabilities
=
newAudioCapabilities
;
listener
.
onAudioCapabilitiesChanged
(
newAudioCapabilities
)
;
}
}
}
}
}
