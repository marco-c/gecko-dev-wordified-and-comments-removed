package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
video
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
ParserException
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
NalUnitUtil
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
ParsableByteArray
;
import
java
.
util
.
Collections
;
import
java
.
util
.
List
;
public
final
class
HevcConfig
{
public
final
List
<
byte
[
]
>
initializationData
;
public
final
int
nalUnitLengthFieldLength
;
public
static
HevcConfig
parse
(
ParsableByteArray
data
)
throws
ParserException
{
try
{
data
.
skipBytes
(
21
)
;
int
lengthSizeMinusOne
=
data
.
readUnsignedByte
(
)
&
0x03
;
int
numberOfArrays
=
data
.
readUnsignedByte
(
)
;
int
csdLength
=
0
;
int
csdStartPosition
=
data
.
getPosition
(
)
;
for
(
int
i
=
0
;
i
<
numberOfArrays
;
i
+
+
)
{
data
.
skipBytes
(
1
)
;
int
numberOfNalUnits
=
data
.
readUnsignedShort
(
)
;
for
(
int
j
=
0
;
j
<
numberOfNalUnits
;
j
+
+
)
{
int
nalUnitLength
=
data
.
readUnsignedShort
(
)
;
csdLength
+
=
4
+
nalUnitLength
;
data
.
skipBytes
(
nalUnitLength
)
;
}
}
data
.
setPosition
(
csdStartPosition
)
;
byte
[
]
buffer
=
new
byte
[
csdLength
]
;
int
bufferPosition
=
0
;
for
(
int
i
=
0
;
i
<
numberOfArrays
;
i
+
+
)
{
data
.
skipBytes
(
1
)
;
int
numberOfNalUnits
=
data
.
readUnsignedShort
(
)
;
for
(
int
j
=
0
;
j
<
numberOfNalUnits
;
j
+
+
)
{
int
nalUnitLength
=
data
.
readUnsignedShort
(
)
;
System
.
arraycopy
(
NalUnitUtil
.
NAL_START_CODE
0
buffer
bufferPosition
NalUnitUtil
.
NAL_START_CODE
.
length
)
;
bufferPosition
+
=
NalUnitUtil
.
NAL_START_CODE
.
length
;
System
.
arraycopy
(
data
.
data
data
.
getPosition
(
)
buffer
bufferPosition
nalUnitLength
)
;
bufferPosition
+
=
nalUnitLength
;
data
.
skipBytes
(
nalUnitLength
)
;
}
}
List
<
byte
[
]
>
initializationData
=
csdLength
=
=
0
?
null
:
Collections
.
singletonList
(
buffer
)
;
return
new
HevcConfig
(
initializationData
lengthSizeMinusOne
+
1
)
;
}
catch
(
ArrayIndexOutOfBoundsException
e
)
{
throw
new
ParserException
(
"
Error
parsing
HEVC
config
"
e
)
;
}
}
private
HevcConfig
(
List
<
byte
[
]
>
initializationData
int
nalUnitLengthFieldLength
)
{
this
.
initializationData
=
initializationData
;
this
.
nalUnitLengthFieldLength
=
nalUnitLengthFieldLength
;
}
}
