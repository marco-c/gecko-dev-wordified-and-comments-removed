package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
extractor
.
ts
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
C
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
Format
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
extractor
.
ExtractorOutput
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
extractor
.
TrackOutput
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
MimeTypes
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
ParsableByteArray
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
TimestampAdjuster
;
public
final
class
SpliceInfoSectionReader
implements
SectionPayloadReader
{
private
TimestampAdjuster
timestampAdjuster
;
private
TrackOutput
output
;
private
boolean
formatDeclared
;
Override
public
void
init
(
TimestampAdjuster
timestampAdjuster
ExtractorOutput
extractorOutput
TsPayloadReader
.
TrackIdGenerator
idGenerator
)
{
this
.
timestampAdjuster
=
timestampAdjuster
;
idGenerator
.
generateNewId
(
)
;
output
=
extractorOutput
.
track
(
idGenerator
.
getTrackId
(
)
C
.
TRACK_TYPE_METADATA
)
;
output
.
format
(
Format
.
createSampleFormat
(
idGenerator
.
getFormatId
(
)
MimeTypes
.
APPLICATION_SCTE35
null
Format
.
NO_VALUE
null
)
)
;
}
Override
public
void
consume
(
ParsableByteArray
sectionData
)
{
if
(
!
formatDeclared
)
{
if
(
timestampAdjuster
.
getTimestampOffsetUs
(
)
=
=
C
.
TIME_UNSET
)
{
return
;
}
output
.
format
(
Format
.
createSampleFormat
(
null
MimeTypes
.
APPLICATION_SCTE35
timestampAdjuster
.
getTimestampOffsetUs
(
)
)
)
;
formatDeclared
=
true
;
}
int
sampleSize
=
sectionData
.
bytesLeft
(
)
;
output
.
sampleData
(
sectionData
sampleSize
)
;
output
.
sampleMetadata
(
timestampAdjuster
.
getLastAdjustedTimestampUs
(
)
C
.
BUFFER_FLAG_KEY_FRAME
sampleSize
0
null
)
;
}
}
