package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
;
import
androidx
.
annotation
.
CheckResult
;
import
androidx
.
annotation
.
Nullable
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
MediaSource
.
MediaPeriodId
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
TrackGroupArray
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
trackselection
.
TrackSelectorResult
;
final
class
PlaybackInfo
{
private
static
final
MediaPeriodId
DUMMY_MEDIA_PERIOD_ID
=
new
MediaPeriodId
(
new
Object
(
)
)
;
public
final
Timeline
timeline
;
public
final
MediaPeriodId
periodId
;
public
final
long
startPositionUs
;
public
final
long
contentPositionUs
;
Player
.
State
public
final
int
playbackState
;
Nullable
public
final
ExoPlaybackException
playbackError
;
public
final
boolean
isLoading
;
public
final
TrackGroupArray
trackGroups
;
public
final
TrackSelectorResult
trackSelectorResult
;
public
final
MediaPeriodId
loadingMediaPeriodId
;
public
volatile
long
bufferedPositionUs
;
public
volatile
long
totalBufferedDurationUs
;
public
volatile
long
positionUs
;
public
static
PlaybackInfo
createDummy
(
long
startPositionUs
TrackSelectorResult
emptyTrackSelectorResult
)
{
return
new
PlaybackInfo
(
Timeline
.
EMPTY
DUMMY_MEDIA_PERIOD_ID
startPositionUs
C
.
TIME_UNSET
Player
.
STATE_IDLE
null
false
TrackGroupArray
.
EMPTY
emptyTrackSelectorResult
DUMMY_MEDIA_PERIOD_ID
startPositionUs
0
startPositionUs
)
;
}
public
PlaybackInfo
(
Timeline
timeline
MediaPeriodId
periodId
long
startPositionUs
long
contentPositionUs
Player
.
State
int
playbackState
Nullable
ExoPlaybackException
playbackError
boolean
isLoading
TrackGroupArray
trackGroups
TrackSelectorResult
trackSelectorResult
MediaPeriodId
loadingMediaPeriodId
long
bufferedPositionUs
long
totalBufferedDurationUs
long
positionUs
)
{
this
.
timeline
=
timeline
;
this
.
periodId
=
periodId
;
this
.
startPositionUs
=
startPositionUs
;
this
.
contentPositionUs
=
contentPositionUs
;
this
.
playbackState
=
playbackState
;
this
.
playbackError
=
playbackError
;
this
.
isLoading
=
isLoading
;
this
.
trackGroups
=
trackGroups
;
this
.
trackSelectorResult
=
trackSelectorResult
;
this
.
loadingMediaPeriodId
=
loadingMediaPeriodId
;
this
.
bufferedPositionUs
=
bufferedPositionUs
;
this
.
totalBufferedDurationUs
=
totalBufferedDurationUs
;
this
.
positionUs
=
positionUs
;
}
public
MediaPeriodId
getDummyFirstMediaPeriodId
(
boolean
shuffleModeEnabled
Timeline
.
Window
window
Timeline
.
Period
period
)
{
if
(
timeline
.
isEmpty
(
)
)
{
return
DUMMY_MEDIA_PERIOD_ID
;
}
int
firstWindowIndex
=
timeline
.
getFirstWindowIndex
(
shuffleModeEnabled
)
;
int
firstPeriodIndex
=
timeline
.
getWindow
(
firstWindowIndex
window
)
.
firstPeriodIndex
;
int
currentPeriodIndex
=
timeline
.
getIndexOfPeriod
(
periodId
.
periodUid
)
;
long
windowSequenceNumber
=
C
.
INDEX_UNSET
;
if
(
currentPeriodIndex
!
=
C
.
INDEX_UNSET
)
{
int
currentWindowIndex
=
timeline
.
getPeriod
(
currentPeriodIndex
period
)
.
windowIndex
;
if
(
firstWindowIndex
=
=
currentWindowIndex
)
{
windowSequenceNumber
=
periodId
.
windowSequenceNumber
;
}
}
return
new
MediaPeriodId
(
timeline
.
getUidOfPeriod
(
firstPeriodIndex
)
windowSequenceNumber
)
;
}
CheckResult
public
PlaybackInfo
copyWithNewPosition
(
MediaPeriodId
periodId
long
positionUs
long
contentPositionUs
long
totalBufferedDurationUs
)
{
return
new
PlaybackInfo
(
timeline
periodId
positionUs
periodId
.
isAd
(
)
?
contentPositionUs
:
C
.
TIME_UNSET
playbackState
playbackError
isLoading
trackGroups
trackSelectorResult
loadingMediaPeriodId
bufferedPositionUs
totalBufferedDurationUs
positionUs
)
;
}
CheckResult
public
PlaybackInfo
copyWithTimeline
(
Timeline
timeline
)
{
return
new
PlaybackInfo
(
timeline
periodId
startPositionUs
contentPositionUs
playbackState
playbackError
isLoading
trackGroups
trackSelectorResult
loadingMediaPeriodId
bufferedPositionUs
totalBufferedDurationUs
positionUs
)
;
}
CheckResult
public
PlaybackInfo
copyWithPlaybackState
(
int
playbackState
)
{
return
new
PlaybackInfo
(
timeline
periodId
startPositionUs
contentPositionUs
playbackState
playbackError
isLoading
trackGroups
trackSelectorResult
loadingMediaPeriodId
bufferedPositionUs
totalBufferedDurationUs
positionUs
)
;
}
CheckResult
public
PlaybackInfo
copyWithPlaybackError
(
Nullable
ExoPlaybackException
playbackError
)
{
return
new
PlaybackInfo
(
timeline
periodId
startPositionUs
contentPositionUs
playbackState
playbackError
isLoading
trackGroups
trackSelectorResult
loadingMediaPeriodId
bufferedPositionUs
totalBufferedDurationUs
positionUs
)
;
}
CheckResult
public
PlaybackInfo
copyWithIsLoading
(
boolean
isLoading
)
{
return
new
PlaybackInfo
(
timeline
periodId
startPositionUs
contentPositionUs
playbackState
playbackError
isLoading
trackGroups
trackSelectorResult
loadingMediaPeriodId
bufferedPositionUs
totalBufferedDurationUs
positionUs
)
;
}
CheckResult
public
PlaybackInfo
copyWithTrackInfo
(
TrackGroupArray
trackGroups
TrackSelectorResult
trackSelectorResult
)
{
return
new
PlaybackInfo
(
timeline
periodId
startPositionUs
contentPositionUs
playbackState
playbackError
isLoading
trackGroups
trackSelectorResult
loadingMediaPeriodId
bufferedPositionUs
totalBufferedDurationUs
positionUs
)
;
}
CheckResult
public
PlaybackInfo
copyWithLoadingMediaPeriodId
(
MediaPeriodId
loadingMediaPeriodId
)
{
return
new
PlaybackInfo
(
timeline
periodId
startPositionUs
contentPositionUs
playbackState
playbackError
isLoading
trackGroups
trackSelectorResult
loadingMediaPeriodId
bufferedPositionUs
totalBufferedDurationUs
positionUs
)
;
}
}
