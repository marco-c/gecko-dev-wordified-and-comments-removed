package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
ads
;
import
androidx
.
annotation
.
VisibleForTesting
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
C
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
Timeline
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
ForwardingTimeline
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
Assertions
;
VisibleForTesting
(
otherwise
=
VisibleForTesting
.
PACKAGE_PRIVATE
)
public
final
class
SinglePeriodAdTimeline
extends
ForwardingTimeline
{
private
final
AdPlaybackState
adPlaybackState
;
public
SinglePeriodAdTimeline
(
Timeline
contentTimeline
AdPlaybackState
adPlaybackState
)
{
super
(
contentTimeline
)
;
Assertions
.
checkState
(
contentTimeline
.
getPeriodCount
(
)
=
=
1
)
;
Assertions
.
checkState
(
contentTimeline
.
getWindowCount
(
)
=
=
1
)
;
this
.
adPlaybackState
=
adPlaybackState
;
}
Override
public
Period
getPeriod
(
int
periodIndex
Period
period
boolean
setIds
)
{
timeline
.
getPeriod
(
periodIndex
period
setIds
)
;
period
.
set
(
period
.
id
period
.
uid
period
.
windowIndex
period
.
durationUs
period
.
getPositionInWindowUs
(
)
adPlaybackState
)
;
return
period
;
}
Override
public
Window
getWindow
(
int
windowIndex
Window
window
long
defaultPositionProjectionUs
)
{
window
=
super
.
getWindow
(
windowIndex
window
defaultPositionProjectionUs
)
;
if
(
window
.
durationUs
=
=
C
.
TIME_UNSET
)
{
window
.
durationUs
=
adPlaybackState
.
contentDurationUs
;
}
return
window
;
}
}
