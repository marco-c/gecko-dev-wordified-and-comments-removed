package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
drm
;
import
android
.
media
.
DeniedByServerException
;
import
android
.
media
.
MediaCryptoException
;
import
android
.
media
.
MediaDrm
;
import
android
.
media
.
NotProvisionedException
;
import
android
.
media
.
ResourceBusyException
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
import
java
.
util
.
UUID
;
public
interface
ExoMediaDrm
<
T
extends
ExoMediaCrypto
>
{
interface
OnEventListener
<
T
extends
ExoMediaCrypto
>
{
void
onEvent
(
ExoMediaDrm
<
?
extends
T
>
mediaDrm
byte
[
]
sessionId
int
event
int
extra
byte
[
]
data
)
;
}
interface
KeyRequest
{
byte
[
]
getData
(
)
;
String
getDefaultUrl
(
)
;
}
interface
ProvisionRequest
{
byte
[
]
getData
(
)
;
String
getDefaultUrl
(
)
;
}
void
setOnEventListener
(
OnEventListener
<
?
super
T
>
listener
)
;
byte
[
]
openSession
(
)
throws
NotProvisionedException
ResourceBusyException
;
void
closeSession
(
byte
[
]
sessionId
)
;
KeyRequest
getKeyRequest
(
byte
[
]
scope
byte
[
]
init
String
mimeType
int
keyType
HashMap
<
String
String
>
optionalParameters
)
throws
NotProvisionedException
;
byte
[
]
provideKeyResponse
(
byte
[
]
scope
byte
[
]
response
)
throws
NotProvisionedException
DeniedByServerException
;
ProvisionRequest
getProvisionRequest
(
)
;
void
provideProvisionResponse
(
byte
[
]
response
)
throws
DeniedByServerException
;
Map
<
String
String
>
queryKeyStatus
(
byte
[
]
sessionId
)
;
void
release
(
)
;
void
restoreKeys
(
byte
[
]
sessionId
byte
[
]
keySetId
)
;
String
getPropertyString
(
String
propertyName
)
;
byte
[
]
getPropertyByteArray
(
String
propertyName
)
;
void
setPropertyString
(
String
propertyName
String
value
)
;
void
setPropertyByteArray
(
String
propertyName
byte
[
]
value
)
;
T
createMediaCrypto
(
UUID
uuid
byte
[
]
initData
)
throws
MediaCryptoException
;
}
