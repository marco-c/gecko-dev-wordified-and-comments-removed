package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
trackselection
;
import
androidx
.
annotation
.
Nullable
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
C
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
Format
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
TrackGroup
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
chunk
.
MediaChunk
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
chunk
.
MediaChunkIterator
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
upstream
.
BandwidthMeter
;
import
java
.
util
.
List
;
import
org
.
checkerframework
.
checker
.
nullness
.
compatqual
.
NullableType
;
public
interface
TrackSelection
{
final
class
Definition
{
public
final
TrackGroup
group
;
public
final
int
[
]
tracks
;
public
final
int
reason
;
Nullable
public
final
Object
data
;
public
Definition
(
TrackGroup
group
int
.
.
.
tracks
)
{
this
(
group
tracks
C
.
SELECTION_REASON_UNKNOWN
null
)
;
}
public
Definition
(
TrackGroup
group
int
[
]
tracks
int
reason
Nullable
Object
data
)
{
this
.
group
=
group
;
this
.
tracks
=
tracks
;
this
.
reason
=
reason
;
this
.
data
=
data
;
}
}
interface
Factory
{
NullableType
TrackSelection
[
]
createTrackSelections
(
NullableType
Definition
[
]
definitions
BandwidthMeter
bandwidthMeter
)
;
}
void
enable
(
)
;
void
disable
(
)
;
TrackGroup
getTrackGroup
(
)
;
int
length
(
)
;
Format
getFormat
(
int
index
)
;
int
getIndexInTrackGroup
(
int
index
)
;
int
indexOf
(
Format
format
)
;
int
indexOf
(
int
indexInTrackGroup
)
;
Format
getSelectedFormat
(
)
;
int
getSelectedIndexInTrackGroup
(
)
;
int
getSelectedIndex
(
)
;
int
getSelectionReason
(
)
;
Nullable
Object
getSelectionData
(
)
;
void
onPlaybackSpeed
(
float
speed
)
;
default
void
onDiscontinuity
(
)
{
}
void
updateSelectedTrack
(
long
playbackPositionUs
long
bufferedDurationUs
long
availableDurationUs
List
<
?
extends
MediaChunk
>
queue
MediaChunkIterator
[
]
mediaChunkIterators
)
;
int
evaluateQueueSize
(
long
playbackPositionUs
List
<
?
extends
MediaChunk
>
queue
)
;
boolean
blacklist
(
int
index
long
blacklistDurationMs
)
;
}
