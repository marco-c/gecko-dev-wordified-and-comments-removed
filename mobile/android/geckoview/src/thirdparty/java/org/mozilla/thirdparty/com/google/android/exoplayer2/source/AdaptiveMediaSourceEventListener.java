package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
;
import
android
.
os
.
Handler
;
import
android
.
os
.
SystemClock
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
C
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
Format
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
upstream
.
DataSpec
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
Assertions
;
import
java
.
io
.
IOException
;
public
interface
AdaptiveMediaSourceEventListener
{
void
onLoadStarted
(
DataSpec
dataSpec
int
dataType
int
trackType
Format
trackFormat
int
trackSelectionReason
Object
trackSelectionData
long
mediaStartTimeMs
long
mediaEndTimeMs
long
elapsedRealtimeMs
)
;
void
onLoadCompleted
(
DataSpec
dataSpec
int
dataType
int
trackType
Format
trackFormat
int
trackSelectionReason
Object
trackSelectionData
long
mediaStartTimeMs
long
mediaEndTimeMs
long
elapsedRealtimeMs
long
loadDurationMs
long
bytesLoaded
)
;
void
onLoadCanceled
(
DataSpec
dataSpec
int
dataType
int
trackType
Format
trackFormat
int
trackSelectionReason
Object
trackSelectionData
long
mediaStartTimeMs
long
mediaEndTimeMs
long
elapsedRealtimeMs
long
loadDurationMs
long
bytesLoaded
)
;
void
onLoadError
(
DataSpec
dataSpec
int
dataType
int
trackType
Format
trackFormat
int
trackSelectionReason
Object
trackSelectionData
long
mediaStartTimeMs
long
mediaEndTimeMs
long
elapsedRealtimeMs
long
loadDurationMs
long
bytesLoaded
IOException
error
boolean
wasCanceled
)
;
void
onUpstreamDiscarded
(
int
trackType
long
mediaStartTimeMs
long
mediaEndTimeMs
)
;
void
onDownstreamFormatChanged
(
int
trackType
Format
trackFormat
int
trackSelectionReason
Object
trackSelectionData
long
mediaTimeMs
)
;
final
class
EventDispatcher
{
private
final
Handler
handler
;
private
final
AdaptiveMediaSourceEventListener
listener
;
private
final
long
mediaTimeOffsetMs
;
public
EventDispatcher
(
Handler
handler
AdaptiveMediaSourceEventListener
listener
)
{
this
(
handler
listener
0
)
;
}
public
EventDispatcher
(
Handler
handler
AdaptiveMediaSourceEventListener
listener
long
mediaTimeOffsetMs
)
{
this
.
handler
=
listener
!
=
null
?
Assertions
.
checkNotNull
(
handler
)
:
null
;
this
.
listener
=
listener
;
this
.
mediaTimeOffsetMs
=
mediaTimeOffsetMs
;
}
public
EventDispatcher
copyWithMediaTimeOffsetMs
(
long
mediaTimeOffsetMs
)
{
return
new
EventDispatcher
(
handler
listener
mediaTimeOffsetMs
)
;
}
public
void
loadStarted
(
DataSpec
dataSpec
int
dataType
long
elapsedRealtimeMs
)
{
loadStarted
(
dataSpec
dataType
C
.
TRACK_TYPE_UNKNOWN
null
C
.
SELECTION_REASON_UNKNOWN
null
C
.
TIME_UNSET
C
.
TIME_UNSET
elapsedRealtimeMs
)
;
}
public
void
loadStarted
(
final
DataSpec
dataSpec
final
int
dataType
final
int
trackType
final
Format
trackFormat
final
int
trackSelectionReason
final
Object
trackSelectionData
final
long
mediaStartTimeUs
final
long
mediaEndTimeUs
final
long
elapsedRealtimeMs
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onLoadStarted
(
dataSpec
dataType
trackType
trackFormat
trackSelectionReason
trackSelectionData
adjustMediaTime
(
mediaStartTimeUs
)
adjustMediaTime
(
mediaEndTimeUs
)
elapsedRealtimeMs
)
;
}
}
)
;
}
}
public
void
loadCompleted
(
DataSpec
dataSpec
int
dataType
long
elapsedRealtimeMs
long
loadDurationMs
long
bytesLoaded
)
{
loadCompleted
(
dataSpec
dataType
C
.
TRACK_TYPE_UNKNOWN
null
C
.
SELECTION_REASON_UNKNOWN
null
C
.
TIME_UNSET
C
.
TIME_UNSET
elapsedRealtimeMs
loadDurationMs
bytesLoaded
)
;
}
public
void
loadCompleted
(
final
DataSpec
dataSpec
final
int
dataType
final
int
trackType
final
Format
trackFormat
final
int
trackSelectionReason
final
Object
trackSelectionData
final
long
mediaStartTimeUs
final
long
mediaEndTimeUs
final
long
elapsedRealtimeMs
final
long
loadDurationMs
final
long
bytesLoaded
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onLoadCompleted
(
dataSpec
dataType
trackType
trackFormat
trackSelectionReason
trackSelectionData
adjustMediaTime
(
mediaStartTimeUs
)
adjustMediaTime
(
mediaEndTimeUs
)
elapsedRealtimeMs
loadDurationMs
bytesLoaded
)
;
}
}
)
;
}
}
public
void
loadCanceled
(
DataSpec
dataSpec
int
dataType
long
elapsedRealtimeMs
long
loadDurationMs
long
bytesLoaded
)
{
loadCanceled
(
dataSpec
dataType
C
.
TRACK_TYPE_UNKNOWN
null
C
.
SELECTION_REASON_UNKNOWN
null
C
.
TIME_UNSET
C
.
TIME_UNSET
elapsedRealtimeMs
loadDurationMs
bytesLoaded
)
;
}
public
void
loadCanceled
(
final
DataSpec
dataSpec
final
int
dataType
final
int
trackType
final
Format
trackFormat
final
int
trackSelectionReason
final
Object
trackSelectionData
final
long
mediaStartTimeUs
final
long
mediaEndTimeUs
final
long
elapsedRealtimeMs
final
long
loadDurationMs
final
long
bytesLoaded
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onLoadCanceled
(
dataSpec
dataType
trackType
trackFormat
trackSelectionReason
trackSelectionData
adjustMediaTime
(
mediaStartTimeUs
)
adjustMediaTime
(
mediaEndTimeUs
)
elapsedRealtimeMs
loadDurationMs
bytesLoaded
)
;
}
}
)
;
}
}
public
void
loadError
(
DataSpec
dataSpec
int
dataType
long
elapsedRealtimeMs
long
loadDurationMs
long
bytesLoaded
IOException
error
boolean
wasCanceled
)
{
loadError
(
dataSpec
dataType
C
.
TRACK_TYPE_UNKNOWN
null
C
.
SELECTION_REASON_UNKNOWN
null
C
.
TIME_UNSET
C
.
TIME_UNSET
elapsedRealtimeMs
loadDurationMs
bytesLoaded
error
wasCanceled
)
;
}
public
void
loadError
(
final
DataSpec
dataSpec
final
int
dataType
final
int
trackType
final
Format
trackFormat
final
int
trackSelectionReason
final
Object
trackSelectionData
final
long
mediaStartTimeUs
final
long
mediaEndTimeUs
final
long
elapsedRealtimeMs
final
long
loadDurationMs
final
long
bytesLoaded
final
IOException
error
final
boolean
wasCanceled
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onLoadError
(
dataSpec
dataType
trackType
trackFormat
trackSelectionReason
trackSelectionData
adjustMediaTime
(
mediaStartTimeUs
)
adjustMediaTime
(
mediaEndTimeUs
)
elapsedRealtimeMs
loadDurationMs
bytesLoaded
error
wasCanceled
)
;
}
}
)
;
}
}
public
void
upstreamDiscarded
(
final
int
trackType
final
long
mediaStartTimeUs
final
long
mediaEndTimeUs
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onUpstreamDiscarded
(
trackType
adjustMediaTime
(
mediaStartTimeUs
)
adjustMediaTime
(
mediaEndTimeUs
)
)
;
}
}
)
;
}
}
public
void
downstreamFormatChanged
(
final
int
trackType
final
Format
trackFormat
final
int
trackSelectionReason
final
Object
trackSelectionData
final
long
mediaTimeUs
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onDownstreamFormatChanged
(
trackType
trackFormat
trackSelectionReason
trackSelectionData
adjustMediaTime
(
mediaTimeUs
)
)
;
}
}
)
;
}
}
private
long
adjustMediaTime
(
long
mediaTimeUs
)
{
long
mediaTimeMs
=
C
.
usToMs
(
mediaTimeUs
)
;
return
mediaTimeMs
=
=
C
.
TIME_UNSET
?
C
.
TIME_UNSET
:
mediaTimeOffsetMs
+
mediaTimeMs
;
}
}
}
