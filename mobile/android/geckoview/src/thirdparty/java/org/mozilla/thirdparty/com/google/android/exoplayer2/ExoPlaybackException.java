package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
;
import
android
.
support
.
annotation
.
IntDef
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
MediaSource
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
Assertions
;
import
java
.
io
.
IOException
;
import
java
.
lang
.
annotation
.
Retention
;
import
java
.
lang
.
annotation
.
RetentionPolicy
;
public
final
class
ExoPlaybackException
extends
Exception
{
Retention
(
RetentionPolicy
.
SOURCE
)
IntDef
(
{
TYPE_SOURCE
TYPE_RENDERER
TYPE_UNEXPECTED
}
)
public
interface
Type
{
}
public
static
final
int
TYPE_SOURCE
=
0
;
public
static
final
int
TYPE_RENDERER
=
1
;
public
static
final
int
TYPE_UNEXPECTED
=
2
;
Type
public
final
int
type
;
public
final
int
rendererIndex
;
public
static
ExoPlaybackException
createForRenderer
(
Exception
cause
int
rendererIndex
)
{
return
new
ExoPlaybackException
(
TYPE_RENDERER
null
cause
rendererIndex
)
;
}
public
static
ExoPlaybackException
createForSource
(
IOException
cause
)
{
return
new
ExoPlaybackException
(
TYPE_SOURCE
null
cause
C
.
INDEX_UNSET
)
;
}
static
ExoPlaybackException
createForUnexpected
(
RuntimeException
cause
)
{
return
new
ExoPlaybackException
(
TYPE_UNEXPECTED
null
cause
C
.
INDEX_UNSET
)
;
}
private
ExoPlaybackException
(
Type
int
type
String
message
Throwable
cause
int
rendererIndex
)
{
super
(
message
cause
)
;
this
.
type
=
type
;
this
.
rendererIndex
=
rendererIndex
;
}
public
IOException
getSourceException
(
)
{
Assertions
.
checkState
(
type
=
=
TYPE_SOURCE
)
;
return
(
IOException
)
getCause
(
)
;
}
public
Exception
getRendererException
(
)
{
Assertions
.
checkState
(
type
=
=
TYPE_RENDERER
)
;
return
(
Exception
)
getCause
(
)
;
}
public
RuntimeException
getUnexpectedException
(
)
{
Assertions
.
checkState
(
type
=
=
TYPE_UNEXPECTED
)
;
return
(
RuntimeException
)
getCause
(
)
;
}
}
