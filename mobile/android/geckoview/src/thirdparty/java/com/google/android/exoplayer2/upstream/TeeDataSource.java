package
com
.
google
.
android
.
exoplayer2
.
upstream
;
import
android
.
net
.
Uri
;
import
com
.
google
.
android
.
exoplayer2
.
C
;
import
com
.
google
.
android
.
exoplayer2
.
util
.
Assertions
;
import
java
.
io
.
IOException
;
public
final
class
TeeDataSource
implements
DataSource
{
private
final
DataSource
upstream
;
private
final
DataSink
dataSink
;
public
TeeDataSource
(
DataSource
upstream
DataSink
dataSink
)
{
this
.
upstream
=
Assertions
.
checkNotNull
(
upstream
)
;
this
.
dataSink
=
Assertions
.
checkNotNull
(
dataSink
)
;
}
Override
public
long
open
(
DataSpec
dataSpec
)
throws
IOException
{
long
dataLength
=
upstream
.
open
(
dataSpec
)
;
if
(
dataSpec
.
length
=
=
C
.
LENGTH_UNSET
&
&
dataLength
!
=
C
.
LENGTH_UNSET
)
{
dataSpec
=
new
DataSpec
(
dataSpec
.
uri
dataSpec
.
absoluteStreamPosition
dataSpec
.
position
dataLength
dataSpec
.
key
dataSpec
.
flags
)
;
}
dataSink
.
open
(
dataSpec
)
;
return
dataLength
;
}
Override
public
int
read
(
byte
[
]
buffer
int
offset
int
max
)
throws
IOException
{
int
num
=
upstream
.
read
(
buffer
offset
max
)
;
if
(
num
>
0
)
{
dataSink
.
write
(
buffer
offset
num
)
;
}
return
num
;
}
Override
public
Uri
getUri
(
)
{
return
upstream
.
getUri
(
)
;
}
Override
public
void
close
(
)
throws
IOException
{
try
{
upstream
.
close
(
)
;
}
finally
{
dataSink
.
close
(
)
;
}
}
}
