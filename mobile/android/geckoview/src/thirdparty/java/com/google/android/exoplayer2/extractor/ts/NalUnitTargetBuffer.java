package
com
.
google
.
android
.
exoplayer2
.
extractor
.
ts
;
import
com
.
google
.
android
.
exoplayer2
.
util
.
Assertions
;
import
java
.
util
.
Arrays
;
final
class
NalUnitTargetBuffer
{
private
final
int
targetType
;
private
boolean
isFilling
;
private
boolean
isCompleted
;
public
byte
[
]
nalData
;
public
int
nalLength
;
public
NalUnitTargetBuffer
(
int
targetType
int
initialCapacity
)
{
this
.
targetType
=
targetType
;
nalData
=
new
byte
[
3
+
initialCapacity
]
;
nalData
[
2
]
=
1
;
}
public
void
reset
(
)
{
isFilling
=
false
;
isCompleted
=
false
;
}
public
boolean
isCompleted
(
)
{
return
isCompleted
;
}
public
void
startNalUnit
(
int
type
)
{
Assertions
.
checkState
(
!
isFilling
)
;
isFilling
=
type
=
=
targetType
;
if
(
isFilling
)
{
nalLength
=
3
;
isCompleted
=
false
;
}
}
public
void
appendToNalUnit
(
byte
[
]
data
int
offset
int
limit
)
{
if
(
!
isFilling
)
{
return
;
}
int
readLength
=
limit
-
offset
;
if
(
nalData
.
length
<
nalLength
+
readLength
)
{
nalData
=
Arrays
.
copyOf
(
nalData
(
nalLength
+
readLength
)
*
2
)
;
}
System
.
arraycopy
(
data
offset
nalData
nalLength
readLength
)
;
nalLength
+
=
readLength
;
}
public
boolean
endNalUnit
(
int
discardPadding
)
{
if
(
!
isFilling
)
{
return
false
;
}
nalLength
-
=
discardPadding
;
isFilling
=
false
;
isCompleted
=
true
;
return
true
;
}
}
