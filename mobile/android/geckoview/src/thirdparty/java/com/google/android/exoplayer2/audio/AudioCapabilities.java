package
com
.
google
.
android
.
exoplayer2
.
audio
;
import
android
.
annotation
.
SuppressLint
;
import
android
.
annotation
.
TargetApi
;
import
android
.
content
.
Context
;
import
android
.
content
.
Intent
;
import
android
.
content
.
IntentFilter
;
import
android
.
media
.
AudioFormat
;
import
android
.
media
.
AudioManager
;
import
java
.
util
.
Arrays
;
TargetApi
(
21
)
public
final
class
AudioCapabilities
{
public
static
final
AudioCapabilities
DEFAULT_AUDIO_CAPABILITIES
=
new
AudioCapabilities
(
new
int
[
]
{
AudioFormat
.
ENCODING_PCM_16BIT
}
2
)
;
SuppressWarnings
(
"
InlinedApi
"
)
public
static
AudioCapabilities
getCapabilities
(
Context
context
)
{
return
getCapabilities
(
context
.
registerReceiver
(
null
new
IntentFilter
(
AudioManager
.
ACTION_HDMI_AUDIO_PLUG
)
)
)
;
}
SuppressLint
(
"
InlinedApi
"
)
static
AudioCapabilities
getCapabilities
(
Intent
intent
)
{
if
(
intent
=
=
null
|
|
intent
.
getIntExtra
(
AudioManager
.
EXTRA_AUDIO_PLUG_STATE
0
)
=
=
0
)
{
return
DEFAULT_AUDIO_CAPABILITIES
;
}
return
new
AudioCapabilities
(
intent
.
getIntArrayExtra
(
AudioManager
.
EXTRA_ENCODINGS
)
intent
.
getIntExtra
(
AudioManager
.
EXTRA_MAX_CHANNEL_COUNT
0
)
)
;
}
private
final
int
[
]
supportedEncodings
;
private
final
int
maxChannelCount
;
AudioCapabilities
(
int
[
]
supportedEncodings
int
maxChannelCount
)
{
if
(
supportedEncodings
!
=
null
)
{
this
.
supportedEncodings
=
Arrays
.
copyOf
(
supportedEncodings
supportedEncodings
.
length
)
;
Arrays
.
sort
(
this
.
supportedEncodings
)
;
}
else
{
this
.
supportedEncodings
=
new
int
[
0
]
;
}
this
.
maxChannelCount
=
maxChannelCount
;
}
public
boolean
supportsEncoding
(
int
encoding
)
{
return
Arrays
.
binarySearch
(
supportedEncodings
encoding
)
>
=
0
;
}
public
int
getMaxChannelCount
(
)
{
return
maxChannelCount
;
}
Override
public
boolean
equals
(
Object
other
)
{
if
(
this
=
=
other
)
{
return
true
;
}
if
(
!
(
other
instanceof
AudioCapabilities
)
)
{
return
false
;
}
AudioCapabilities
audioCapabilities
=
(
AudioCapabilities
)
other
;
return
Arrays
.
equals
(
supportedEncodings
audioCapabilities
.
supportedEncodings
)
&
&
maxChannelCount
=
=
audioCapabilities
.
maxChannelCount
;
}
Override
public
int
hashCode
(
)
{
return
maxChannelCount
+
31
*
Arrays
.
hashCode
(
supportedEncodings
)
;
}
Override
public
String
toString
(
)
{
return
"
AudioCapabilities
[
maxChannelCount
=
"
+
maxChannelCount
+
"
supportedEncodings
=
"
+
Arrays
.
toString
(
supportedEncodings
)
+
"
]
"
;
}
}
