package
com
.
google
.
android
.
exoplayer2
.
audio
;
import
android
.
os
.
Handler
;
import
android
.
os
.
SystemClock
;
import
com
.
google
.
android
.
exoplayer2
.
C
;
import
com
.
google
.
android
.
exoplayer2
.
Format
;
import
com
.
google
.
android
.
exoplayer2
.
Renderer
;
import
com
.
google
.
android
.
exoplayer2
.
decoder
.
DecoderCounters
;
import
com
.
google
.
android
.
exoplayer2
.
util
.
Assertions
;
public
interface
AudioRendererEventListener
{
void
onAudioEnabled
(
DecoderCounters
counters
)
;
void
onAudioSessionId
(
int
audioSessionId
)
;
void
onAudioDecoderInitialized
(
String
decoderName
long
initializedTimestampMs
long
initializationDurationMs
)
;
void
onAudioInputFormatChanged
(
Format
format
)
;
void
onAudioTrackUnderrun
(
int
bufferSize
long
bufferSizeMs
long
elapsedSinceLastFeedMs
)
;
void
onAudioDisabled
(
DecoderCounters
counters
)
;
final
class
EventDispatcher
{
private
final
Handler
handler
;
private
final
AudioRendererEventListener
listener
;
public
EventDispatcher
(
Handler
handler
AudioRendererEventListener
listener
)
{
this
.
handler
=
listener
!
=
null
?
Assertions
.
checkNotNull
(
handler
)
:
null
;
this
.
listener
=
listener
;
}
public
void
enabled
(
final
DecoderCounters
decoderCounters
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onAudioEnabled
(
decoderCounters
)
;
}
}
)
;
}
}
public
void
decoderInitialized
(
final
String
decoderName
final
long
initializedTimestampMs
final
long
initializationDurationMs
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onAudioDecoderInitialized
(
decoderName
initializedTimestampMs
initializationDurationMs
)
;
}
}
)
;
}
}
public
void
inputFormatChanged
(
final
Format
format
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onAudioInputFormatChanged
(
format
)
;
}
}
)
;
}
}
public
void
audioTrackUnderrun
(
final
int
bufferSize
final
long
bufferSizeMs
final
long
elapsedSinceLastFeedMs
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onAudioTrackUnderrun
(
bufferSize
bufferSizeMs
elapsedSinceLastFeedMs
)
;
}
}
)
;
}
}
public
void
disabled
(
final
DecoderCounters
counters
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
counters
.
ensureUpdated
(
)
;
listener
.
onAudioDisabled
(
counters
)
;
}
}
)
;
}
}
public
void
audioSessionId
(
final
int
audioSessionId
)
{
if
(
listener
!
=
null
)
{
handler
.
post
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
listener
.
onAudioSessionId
(
audioSessionId
)
;
}
}
)
;
}
}
}
}
