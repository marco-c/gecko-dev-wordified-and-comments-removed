package
com
.
google
.
android
.
exoplayer2
.
util
;
import
android
.
os
.
Looper
;
import
android
.
text
.
TextUtils
;
import
com
.
google
.
android
.
exoplayer2
.
ExoPlayerLibraryInfo
;
public
final
class
Assertions
{
private
Assertions
(
)
{
}
public
static
void
checkArgument
(
boolean
expression
)
{
if
(
ExoPlayerLibraryInfo
.
ASSERTIONS_ENABLED
&
&
!
expression
)
{
throw
new
IllegalArgumentException
(
)
;
}
}
public
static
void
checkArgument
(
boolean
expression
Object
errorMessage
)
{
if
(
ExoPlayerLibraryInfo
.
ASSERTIONS_ENABLED
&
&
!
expression
)
{
throw
new
IllegalArgumentException
(
String
.
valueOf
(
errorMessage
)
)
;
}
}
public
static
int
checkIndex
(
int
index
int
start
int
limit
)
{
if
(
index
<
start
|
|
index
>
=
limit
)
{
throw
new
IndexOutOfBoundsException
(
)
;
}
return
index
;
}
public
static
void
checkState
(
boolean
expression
)
{
if
(
ExoPlayerLibraryInfo
.
ASSERTIONS_ENABLED
&
&
!
expression
)
{
throw
new
IllegalStateException
(
)
;
}
}
public
static
void
checkState
(
boolean
expression
Object
errorMessage
)
{
if
(
ExoPlayerLibraryInfo
.
ASSERTIONS_ENABLED
&
&
!
expression
)
{
throw
new
IllegalStateException
(
String
.
valueOf
(
errorMessage
)
)
;
}
}
public
static
<
T
>
T
checkNotNull
(
T
reference
)
{
if
(
ExoPlayerLibraryInfo
.
ASSERTIONS_ENABLED
&
&
reference
=
=
null
)
{
throw
new
NullPointerException
(
)
;
}
return
reference
;
}
public
static
<
T
>
T
checkNotNull
(
T
reference
Object
errorMessage
)
{
if
(
ExoPlayerLibraryInfo
.
ASSERTIONS_ENABLED
&
&
reference
=
=
null
)
{
throw
new
NullPointerException
(
String
.
valueOf
(
errorMessage
)
)
;
}
return
reference
;
}
public
static
String
checkNotEmpty
(
String
string
)
{
if
(
ExoPlayerLibraryInfo
.
ASSERTIONS_ENABLED
&
&
TextUtils
.
isEmpty
(
string
)
)
{
throw
new
IllegalArgumentException
(
)
;
}
return
string
;
}
public
static
String
checkNotEmpty
(
String
string
Object
errorMessage
)
{
if
(
ExoPlayerLibraryInfo
.
ASSERTIONS_ENABLED
&
&
TextUtils
.
isEmpty
(
string
)
)
{
throw
new
IllegalArgumentException
(
String
.
valueOf
(
errorMessage
)
)
;
}
return
string
;
}
public
static
void
checkMainThread
(
)
{
if
(
ExoPlayerLibraryInfo
.
ASSERTIONS_ENABLED
&
&
Looper
.
myLooper
(
)
!
=
Looper
.
getMainLooper
(
)
)
{
throw
new
IllegalStateException
(
"
Not
in
applications
main
thread
"
)
;
}
}
}
