package
com
.
google
.
android
.
exoplayer2
.
upstream
.
cache
;
import
android
.
support
.
annotation
.
NonNull
;
import
com
.
google
.
android
.
exoplayer2
.
C
;
import
java
.
io
.
File
;
public
class
CacheSpan
implements
Comparable
<
CacheSpan
>
{
public
final
String
key
;
public
final
long
position
;
public
final
long
length
;
public
final
boolean
isCached
;
public
final
File
file
;
public
final
long
lastAccessTimestamp
;
public
CacheSpan
(
String
key
long
position
long
length
)
{
this
(
key
position
length
C
.
TIME_UNSET
null
)
;
}
public
CacheSpan
(
String
key
long
position
long
length
long
lastAccessTimestamp
File
file
)
{
this
.
key
=
key
;
this
.
position
=
position
;
this
.
length
=
length
;
this
.
isCached
=
file
!
=
null
;
this
.
file
=
file
;
this
.
lastAccessTimestamp
=
lastAccessTimestamp
;
}
public
boolean
isOpenEnded
(
)
{
return
length
=
=
C
.
LENGTH_UNSET
;
}
public
boolean
isHoleSpan
(
)
{
return
!
isCached
;
}
Override
public
int
compareTo
(
NonNull
CacheSpan
another
)
{
if
(
!
key
.
equals
(
another
.
key
)
)
{
return
key
.
compareTo
(
another
.
key
)
;
}
long
startOffsetDiff
=
position
-
another
.
position
;
return
startOffsetDiff
=
=
0
?
0
:
(
(
startOffsetDiff
<
0
)
?
-
1
:
1
)
;
}
}
