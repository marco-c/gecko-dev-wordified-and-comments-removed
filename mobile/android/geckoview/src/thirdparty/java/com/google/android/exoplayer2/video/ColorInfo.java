package
com
.
google
.
android
.
exoplayer2
.
video
;
import
android
.
os
.
Parcel
;
import
android
.
os
.
Parcelable
;
import
com
.
google
.
android
.
exoplayer2
.
C
;
import
com
.
google
.
android
.
exoplayer2
.
Format
;
import
java
.
util
.
Arrays
;
public
final
class
ColorInfo
implements
Parcelable
{
C
.
ColorSpace
public
final
int
colorSpace
;
C
.
ColorRange
public
final
int
colorRange
;
C
.
ColorTransfer
public
final
int
colorTransfer
;
public
final
byte
[
]
hdrStaticInfo
;
private
int
hashCode
;
public
ColorInfo
(
C
.
ColorSpace
int
colorSpace
C
.
ColorRange
int
colorRange
C
.
ColorTransfer
int
colorTransfer
byte
[
]
hdrStaticInfo
)
{
this
.
colorSpace
=
colorSpace
;
this
.
colorRange
=
colorRange
;
this
.
colorTransfer
=
colorTransfer
;
this
.
hdrStaticInfo
=
hdrStaticInfo
;
}
SuppressWarnings
(
"
ResourceType
"
)
ColorInfo
(
Parcel
in
)
{
colorSpace
=
in
.
readInt
(
)
;
colorRange
=
in
.
readInt
(
)
;
colorTransfer
=
in
.
readInt
(
)
;
boolean
hasHdrStaticInfo
=
in
.
readInt
(
)
!
=
0
;
hdrStaticInfo
=
hasHdrStaticInfo
?
in
.
createByteArray
(
)
:
null
;
}
Override
public
boolean
equals
(
Object
obj
)
{
if
(
this
=
=
obj
)
{
return
true
;
}
if
(
obj
=
=
null
|
|
getClass
(
)
!
=
obj
.
getClass
(
)
)
{
return
false
;
}
ColorInfo
other
=
(
ColorInfo
)
obj
;
if
(
colorSpace
!
=
other
.
colorSpace
|
|
colorRange
!
=
other
.
colorRange
|
|
colorTransfer
!
=
other
.
colorTransfer
|
|
!
Arrays
.
equals
(
hdrStaticInfo
other
.
hdrStaticInfo
)
)
{
return
false
;
}
return
true
;
}
Override
public
String
toString
(
)
{
return
"
ColorInfo
(
"
+
colorSpace
+
"
"
+
colorRange
+
"
"
+
colorTransfer
+
"
"
+
(
hdrStaticInfo
!
=
null
)
+
"
)
"
;
}
Override
public
int
hashCode
(
)
{
if
(
hashCode
=
=
0
)
{
int
result
=
17
;
result
=
31
*
result
+
colorSpace
;
result
=
31
*
result
+
colorRange
;
result
=
31
*
result
+
colorTransfer
;
result
=
31
*
result
+
Arrays
.
hashCode
(
hdrStaticInfo
)
;
hashCode
=
result
;
}
return
hashCode
;
}
Override
public
int
describeContents
(
)
{
return
0
;
}
Override
public
void
writeToParcel
(
Parcel
dest
int
flags
)
{
dest
.
writeInt
(
colorSpace
)
;
dest
.
writeInt
(
colorRange
)
;
dest
.
writeInt
(
colorTransfer
)
;
dest
.
writeInt
(
hdrStaticInfo
!
=
null
?
1
:
0
)
;
if
(
hdrStaticInfo
!
=
null
)
{
dest
.
writeByteArray
(
hdrStaticInfo
)
;
}
}
public
static
final
Parcelable
.
Creator
<
ColorInfo
>
CREATOR
=
new
Parcelable
.
Creator
<
ColorInfo
>
(
)
{
Override
public
ColorInfo
createFromParcel
(
Parcel
in
)
{
return
new
ColorInfo
(
in
)
;
}
Override
public
ColorInfo
[
]
newArray
(
int
size
)
{
return
new
ColorInfo
[
0
]
;
}
}
;
}
