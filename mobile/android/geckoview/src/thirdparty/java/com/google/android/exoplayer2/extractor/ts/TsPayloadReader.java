package
com
.
google
.
android
.
exoplayer2
.
extractor
.
ts
;
import
android
.
util
.
SparseArray
;
import
com
.
google
.
android
.
exoplayer2
.
extractor
.
ExtractorOutput
;
import
com
.
google
.
android
.
exoplayer2
.
extractor
.
TrackOutput
;
import
com
.
google
.
android
.
exoplayer2
.
util
.
ParsableByteArray
;
import
com
.
google
.
android
.
exoplayer2
.
util
.
TimestampAdjuster
;
import
java
.
util
.
Collections
;
import
java
.
util
.
List
;
public
interface
TsPayloadReader
{
interface
Factory
{
SparseArray
<
TsPayloadReader
>
createInitialPayloadReaders
(
)
;
TsPayloadReader
createPayloadReader
(
int
streamType
EsInfo
esInfo
)
;
}
final
class
EsInfo
{
public
final
int
streamType
;
public
final
String
language
;
public
final
List
<
DvbSubtitleInfo
>
dvbSubtitleInfos
;
public
final
byte
[
]
descriptorBytes
;
public
EsInfo
(
int
streamType
String
language
List
<
DvbSubtitleInfo
>
dvbSubtitleInfos
byte
[
]
descriptorBytes
)
{
this
.
streamType
=
streamType
;
this
.
language
=
language
;
this
.
dvbSubtitleInfos
=
dvbSubtitleInfos
=
=
null
?
Collections
.
<
DvbSubtitleInfo
>
emptyList
(
)
:
Collections
.
unmodifiableList
(
dvbSubtitleInfos
)
;
this
.
descriptorBytes
=
descriptorBytes
;
}
}
final
class
DvbSubtitleInfo
{
public
final
String
language
;
public
final
int
type
;
public
final
byte
[
]
initializationData
;
public
DvbSubtitleInfo
(
String
language
int
type
byte
[
]
initializationData
)
{
this
.
language
=
language
;
this
.
type
=
type
;
this
.
initializationData
=
initializationData
;
}
}
final
class
TrackIdGenerator
{
private
static
final
int
ID_UNSET
=
Integer
.
MIN_VALUE
;
private
final
String
formatIdPrefix
;
private
final
int
firstTrackId
;
private
final
int
trackIdIncrement
;
private
int
trackId
;
private
String
formatId
;
public
TrackIdGenerator
(
int
firstTrackId
int
trackIdIncrement
)
{
this
(
ID_UNSET
firstTrackId
trackIdIncrement
)
;
}
public
TrackIdGenerator
(
int
programNumber
int
firstTrackId
int
trackIdIncrement
)
{
this
.
formatIdPrefix
=
programNumber
!
=
ID_UNSET
?
programNumber
+
"
/
"
:
"
"
;
this
.
firstTrackId
=
firstTrackId
;
this
.
trackIdIncrement
=
trackIdIncrement
;
trackId
=
ID_UNSET
;
}
public
void
generateNewId
(
)
{
trackId
=
trackId
=
=
ID_UNSET
?
firstTrackId
:
trackId
+
trackIdIncrement
;
formatId
=
formatIdPrefix
+
trackId
;
}
public
int
getTrackId
(
)
{
maybeThrowUninitializedError
(
)
;
return
trackId
;
}
public
String
getFormatId
(
)
{
maybeThrowUninitializedError
(
)
;
return
formatId
;
}
private
void
maybeThrowUninitializedError
(
)
{
if
(
trackId
=
=
ID_UNSET
)
{
throw
new
IllegalStateException
(
"
generateNewId
(
)
must
be
called
before
retrieving
ids
.
"
)
;
}
}
}
void
init
(
TimestampAdjuster
timestampAdjuster
ExtractorOutput
extractorOutput
TrackIdGenerator
idGenerator
)
;
void
seek
(
)
;
void
consume
(
ParsableByteArray
data
boolean
payloadUnitStartIndicator
)
;
}
