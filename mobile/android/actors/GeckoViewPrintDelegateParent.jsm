"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
GeckoViewPrintDelegateParent
"
]
;
const
{
GeckoViewActorParent
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewActorParent
.
sys
.
mjs
"
)
;
class
GeckoViewPrintDelegateParent
extends
GeckoViewActorParent
{
constructor
(
)
{
super
(
)
;
this
.
_browserStaticClone
=
null
;
}
set
browserStaticClone
(
staticClone
)
{
this
.
_browserStaticClone
=
staticClone
;
}
get
browserStaticClone
(
)
{
return
this
.
_browserStaticClone
;
}
clearStaticClone
(
)
{
this
.
browserStaticClone
?
.
remove
(
)
;
this
.
browserStaticClone
=
null
;
}
telemetryDotPrintRequested
(
)
{
Glean
.
dotprint
.
requested
.
add
(
1
)
;
}
telemetryDotPrintPdfCompleted
(
status
)
{
if
(
status
.
isPdfSuccessful
)
{
Glean
.
dotprint
.
androidDialogRequested
.
add
(
1
)
;
}
else
{
var
reason
=
"
"
;
switch
(
status
.
errorReason
)
{
case
-
1
:
{
reason
=
"
no_settings_service
"
;
break
;
}
case
-
2
:
{
reason
=
"
no_settings
"
;
break
;
}
case
-
3
:
{
reason
=
"
no_canonical_context
"
;
break
;
}
case
-
4
:
{
reason
=
"
no_activity_context_delegate
"
;
break
;
}
case
-
5
:
{
reason
=
"
no_activity_context
"
;
break
;
}
default
:
reason
=
"
unknown
"
;
}
Glean
.
dotprint
.
failure
[
reason
]
.
add
(
1
)
;
}
}
printRequest
(
)
{
if
(
this
.
browserStaticClone
!
=
null
)
{
this
.
telemetryDotPrintRequested
(
)
;
this
.
eventDispatcher
.
sendRequest
(
{
type
:
"
GeckoView
:
DotPrintRequest
"
canonicalBrowsingContextId
:
this
.
browserStaticClone
.
browsingContext
.
id
}
)
;
}
}
}
