const
{
GeckoViewActorChild
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewActorChild
.
jsm
"
)
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
EXPORTED_SYMBOLS
=
[
"
GeckoViewSettingsChild
"
]
;
const
VIEWPORT_MODE_MOBILE
=
0
;
const
VIEWPORT_MODE_DESKTOP
=
1
;
class
GeckoViewSettingsChild
extends
GeckoViewActorChild
{
receiveMessage
(
message
)
{
const
{
name
}
=
message
;
debug
receiveMessage
:
{
name
}
;
switch
(
name
)
{
case
"
SettingsUpdate
"
:
{
const
settings
=
message
.
data
;
this
.
viewportMode
=
settings
.
viewportMode
;
if
(
settings
.
isPopup
)
{
this
.
contentWindow
.
windowUtils
.
allowScriptsToClose
(
)
;
}
}
}
}
set
viewportMode
(
aMode
)
{
const
{
windowUtils
}
=
this
.
contentWindow
;
if
(
aMode
=
=
=
windowUtils
.
desktopModeViewport
)
{
return
;
}
windowUtils
.
desktopModeViewport
=
aMode
=
=
=
VIEWPORT_MODE_DESKTOP
;
}
}
const
{
debug
warn
}
=
GeckoViewSettingsChild
.
initLogging
(
"
GeckoViewSettings
"
)
;
