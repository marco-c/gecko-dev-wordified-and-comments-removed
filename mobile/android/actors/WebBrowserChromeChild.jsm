"
use
strict
"
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
{
GeckoViewActorChild
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewActorChild
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
BrowserUtils
:
"
resource
:
/
/
gre
/
modules
/
BrowserUtils
.
jsm
"
E10SUtils
:
"
resource
:
/
/
gre
/
modules
/
E10SUtils
.
jsm
"
GeckoViewSettings
:
"
resource
:
/
/
gre
/
modules
/
GeckoViewSettings
.
jsm
"
}
)
;
var
EXPORTED_SYMBOLS
=
[
"
WebBrowserChromeChild
"
]
;
class
WebBrowserChromeChild
extends
GeckoViewActorChild
{
onBeforeLinkTraversal
(
aOriginalTarget
aLinkURI
aLinkNode
aIsAppTab
)
{
debug
onBeforeLinkTraversal
{
aLinkURI
.
displaySpec
}
;
return
BrowserUtils
.
onBeforeLinkTraversal
(
aOriginalTarget
aLinkURI
aLinkNode
aIsAppTab
)
;
}
shouldLoadURI
(
aDocShell
aURI
aReferrerInfo
aHasPostData
aTriggeringPrincipal
aCsp
)
{
debug
shouldLoadURI
{
aURI
.
displaySpec
}
;
if
(
!
GeckoViewSettings
.
useMultiprocess
)
{
return
true
;
}
if
(
!
E10SUtils
.
shouldLoadURI
(
aDocShell
aURI
aHasPostData
)
)
{
E10SUtils
.
redirectLoad
(
aDocShell
aURI
aReferrerInfo
aTriggeringPrincipal
false
null
aCsp
)
;
return
false
;
}
return
true
;
}
shouldLoadURIInThisProcess
(
aURI
)
{
debug
shouldLoadURIInThisProcess
{
aURI
.
displaySpec
}
;
const
remoteSubframes
=
this
.
docShell
.
nsILoadContext
.
useRemoteSubframes
;
return
E10SUtils
.
shouldLoadURIInThisProcess
(
aURI
remoteSubframes
)
;
}
reloadInFreshProcess
(
aDocShell
aURI
aReferrerInfo
aTriggeringPrincipal
aLoadFlags
aCsp
)
{
debug
reloadInFreshProcess
{
aURI
.
displaySpec
}
;
E10SUtils
.
redirectLoad
(
aDocShell
aURI
aReferrerInfo
aTriggeringPrincipal
true
aLoadFlags
aCsp
)
;
return
true
;
}
}
WebBrowserChromeChild
.
prototype
.
QueryInterface
=
ChromeUtils
.
generateQI
(
[
Ci
.
nsIWebBrowserChrome3
]
)
;
const
{
debug
warn
}
=
WebBrowserChromeChild
.
initLogging
(
"
WebBrowserChrome
"
)
;
