package
org
.
mozilla
.
gecko
.
sync
.
repositories
.
uploaders
;
import
android
.
support
.
annotation
.
CheckResult
;
import
android
.
support
.
annotation
.
NonNull
;
public
class
UploaderMeta
extends
BufferSizeTracker
{
private
volatile
boolean
isUnlimited
=
false
;
private
boolean
needsCommit
=
false
;
public
UploaderMeta
(
NonNull
Object
payloadLock
long
maxBytes
long
maxRecords
)
{
super
(
payloadLock
maxBytes
maxRecords
)
;
}
protected
void
setIsUnlimited
(
boolean
isUnlimited
)
{
synchronized
(
accessLock
)
{
this
.
isUnlimited
=
isUnlimited
;
}
}
Override
protected
boolean
canFit
(
long
recordDeltaByteCount
)
{
synchronized
(
accessLock
)
{
return
isUnlimited
|
|
super
.
canFit
(
recordDeltaByteCount
)
;
}
}
Override
CheckResult
protected
boolean
addAndEstimateIfFull
(
long
recordDeltaByteCount
)
{
synchronized
(
accessLock
)
{
needsCommit
=
true
;
boolean
isFull
=
super
.
addAndEstimateIfFull
(
recordDeltaByteCount
)
;
return
!
isUnlimited
&
&
isFull
;
}
}
protected
boolean
needToCommit
(
)
{
synchronized
(
accessLock
)
{
return
needsCommit
;
}
}
Override
protected
boolean
canFitRecordByteDelta
(
long
byteDelta
long
recordCount
long
byteCount
)
{
return
isUnlimited
|
|
super
.
canFitRecordByteDelta
(
byteDelta
recordCount
byteCount
)
;
}
UploaderMeta
nextUploaderMeta
(
)
{
return
new
UploaderMeta
(
accessLock
maxBytes
maxRecords
)
;
}
}
