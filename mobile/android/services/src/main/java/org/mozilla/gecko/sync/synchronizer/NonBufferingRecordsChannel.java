package
org
.
mozilla
.
gecko
.
sync
.
synchronizer
;
import
org
.
mozilla
.
gecko
.
background
.
common
.
log
.
Logger
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
NoStoreDelegateException
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
RepositorySession
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
domain
.
Record
;
public
class
NonBufferingRecordsChannel
extends
RecordsChannel
{
private
static
final
String
LOG_TAG
=
"
NonBufferingRecordsChannel
"
;
public
NonBufferingRecordsChannel
(
RepositorySession
source
RepositorySession
sink
RecordsChannelDelegate
delegate
)
{
super
(
source
sink
delegate
)
;
}
Override
public
void
onFetchedRecord
(
Record
record
)
{
if
(
fetchFailed
.
get
(
)
)
{
return
;
}
fetchedCount
.
incrementAndGet
(
)
;
storeAttemptedCount
.
incrementAndGet
(
)
;
try
{
sink
.
store
(
record
)
;
}
catch
(
NoStoreDelegateException
e
)
{
throw
new
IllegalStateException
(
e
)
;
}
}
Override
public
void
onFetchFailed
(
Exception
ex
)
{
sink
.
storeIncomplete
(
)
;
super
.
onFetchFailed
(
ex
)
;
}
Override
public
void
onFetchCompleted
(
)
{
if
(
fetchFailed
.
get
(
)
)
{
return
;
}
Logger
.
trace
(
LOG_TAG
"
onFetchCompleted
.
Calling
storeDone
.
"
)
;
sink
.
storeDone
(
)
;
}
}
