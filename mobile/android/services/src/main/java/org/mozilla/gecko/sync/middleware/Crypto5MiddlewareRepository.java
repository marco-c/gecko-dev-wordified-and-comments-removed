package
org
.
mozilla
.
gecko
.
sync
.
middleware
;
import
org
.
mozilla
.
gecko
.
sync
.
SessionCreateException
;
import
org
.
mozilla
.
gecko
.
sync
.
crypto
.
KeyBundle
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
IdentityRecordFactory
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
RecordFactory
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
Repository
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
RepositorySession
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
delegates
.
RepositorySessionCleanDelegate
;
import
android
.
content
.
Context
;
public
class
Crypto5MiddlewareRepository
extends
Repository
{
public
RecordFactory
recordFactory
=
new
IdentityRecordFactory
(
)
;
public
KeyBundle
keyBundle
;
private
final
Repository
inner
;
public
Crypto5MiddlewareRepository
(
Repository
inner
KeyBundle
keys
)
{
super
(
)
;
this
.
inner
=
inner
;
this
.
keyBundle
=
keys
;
}
Override
public
RepositorySession
createSession
(
Context
context
)
throws
SessionCreateException
{
final
RepositorySession
innerSession
=
inner
.
createSession
(
context
)
;
return
new
Crypto5MiddlewareRepositorySession
(
innerSession
this
recordFactory
)
;
}
Override
public
void
clean
(
boolean
success
RepositorySessionCleanDelegate
delegate
Context
context
)
{
this
.
inner
.
clean
(
success
delegate
context
)
;
}
}
