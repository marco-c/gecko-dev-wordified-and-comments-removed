package
org
.
mozilla
.
gecko
.
sync
.
repositories
.
android
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
Repository
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
RepositorySession
;
import
org
.
mozilla
.
gecko
.
sync
.
repositories
.
delegates
.
RepositorySessionCleanDelegate
;
import
android
.
content
.
Context
;
public
class
BookmarksRepository
extends
Repository
{
Override
public
RepositorySession
createSession
(
Context
context
)
{
return
new
BookmarksRepositorySession
(
this
context
)
;
}
Override
public
void
clean
(
boolean
success
RepositorySessionCleanDelegate
delegate
Context
context
)
{
if
(
!
success
)
{
return
;
}
final
BookmarksDataAccessor
dataAccessor
=
new
BookmarksDataAccessor
(
context
)
;
try
{
dataAccessor
.
purgeDeleted
(
)
;
}
catch
(
Exception
e
)
{
delegate
.
onCleanFailed
(
this
e
)
;
return
;
}
delegate
.
onCleaned
(
this
)
;
}
}
