package
org
.
mozilla
.
gecko
.
fxa
.
login
;
import
org
.
mozilla
.
gecko
.
browserid
.
BrowserIDKeyPair
;
import
org
.
mozilla
.
gecko
.
sync
.
ExtendedJSONObject
;
import
org
.
mozilla
.
gecko
.
sync
.
Utils
;
public
abstract
class
TokensAndKeysState
extends
State
{
protected
final
byte
[
]
sessionToken
;
final
byte
[
]
kSync
;
final
String
kXCS
;
protected
final
BrowserIDKeyPair
keyPair
;
TokensAndKeysState
(
StateLabel
stateLabel
String
email
String
uid
byte
[
]
sessionToken
byte
[
]
kSync
String
kXCS
BrowserIDKeyPair
keyPair
)
{
super
(
stateLabel
email
uid
true
)
;
Utils
.
throwIfNull
(
sessionToken
kSync
kXCS
keyPair
)
;
this
.
sessionToken
=
sessionToken
;
this
.
kSync
=
kSync
;
this
.
kXCS
=
kXCS
;
this
.
keyPair
=
keyPair
;
}
Override
public
ExtendedJSONObject
toJSONObject
(
)
{
ExtendedJSONObject
o
=
super
.
toJSONObject
(
)
;
o
.
put
(
"
sessionToken
"
Utils
.
byte2Hex
(
sessionToken
)
)
;
o
.
put
(
"
kSync
"
Utils
.
byte2Hex
(
kSync
)
)
;
o
.
put
(
"
kXCS
"
kXCS
)
;
o
.
put
(
"
keyPair
"
keyPair
.
toJSONObject
(
)
)
;
return
o
;
}
Override
public
byte
[
]
getSessionToken
(
)
{
return
sessionToken
;
}
Override
public
Action
getNeededAction
(
)
{
return
Action
.
None
;
}
}
