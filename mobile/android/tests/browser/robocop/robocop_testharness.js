if
(
!
(
"
SpecialPowers
"
in
window
)
)
{
dump
(
"
Robocop
robocop_testharness
.
js
found
SpecialPowers
unavailable
:
reloading
.
.
.
\
n
"
)
;
setTimeout
(
(
)
=
>
{
window
.
location
.
reload
(
)
;
}
1000
)
;
}
function
sendMessageToJava
(
message
)
{
SpecialPowers
.
Services
.
androidBridge
.
dispatch
(
message
.
type
message
)
;
}
function
_evalURI
(
uri
sandbox
)
{
let
req
=
new
XMLHttpRequest
(
)
;
let
baseURI
=
SpecialPowers
.
Services
.
io
.
newURI
(
window
.
document
.
baseURI
window
.
document
.
characterSet
)
;
let
theURI
=
SpecialPowers
.
Services
.
io
.
newURI
(
uri
window
.
document
.
characterSet
baseURI
)
;
req
.
open
(
"
GET
"
theURI
.
spec
+
(
(
/
\
?
/
)
.
test
(
theURI
.
spec
)
?
"
&
slug
=
"
:
"
?
slug
=
"
)
+
(
new
Date
(
)
)
.
getTime
(
)
false
)
;
req
.
setRequestHeader
(
"
Cache
-
Control
"
"
no
-
cache
"
)
;
req
.
setRequestHeader
(
"
Pragma
"
"
no
-
cache
"
)
;
req
.
send
(
)
;
return
SpecialPowers
.
Cu
.
evalInSandbox
(
req
.
responseText
sandbox
"
1
.
8
"
uri
1
)
;
}
function
testOneFile
(
uri
)
{
let
HEAD_JS
=
[
"
head
.
js
"
"
robocop_head
.
js
"
]
;
let
principal
=
SpecialPowers
.
Cc
[
"
mozilla
.
org
/
systemprincipal
;
1
"
]
.
createInstance
(
SpecialPowers
.
Ci
.
nsIPrincipal
)
;
let
testScope
=
SpecialPowers
.
Cu
.
Sandbox
(
principal
{
sandboxName
:
uri
wantGlobalProperties
:
[
"
ChromeUtils
"
]
}
)
;
testScope
.
SpecialPowers
=
SpecialPowers
;
testScope
.
Components
=
SpecialPowers
.
Components
;
testScope
.
_TEST_FILE
=
uri
;
testScope
.
dump
=
function
(
str
)
{
let
message
=
{
type
:
"
Robocop
:
Java
"
innerType
:
"
progress
"
message
:
str
}
;
sendMessageToJava
(
message
)
;
}
;
for
(
script
of
HEAD_JS
)
{
_evalURI
(
script
testScope
)
;
}
testScope
.
info
=
testScope
.
do_print
;
return
_evalURI
(
uri
testScope
)
;
}
