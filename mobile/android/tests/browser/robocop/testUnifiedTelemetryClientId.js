var
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
ClientID
.
jsm
"
)
;
var
java
=
new
JavaBridge
(
this
)
;
do_register_cleanup
(
(
)
=
>
{
java
.
disconnect
(
)
;
}
)
;
do_test_pending
(
)
;
var
isClientIDSet
;
var
clientID
;
var
isResetDone
;
function
getAsyncClientId
(
)
{
isClientIDSet
=
false
;
ClientID
.
getClientID
(
)
.
then
(
function
(
retClientID
)
{
clientID
=
retClientID
;
isClientIDSet
=
true
;
}
function
(
fail
)
{
do_throw
(
"
Could
not
retrieve
client
ID
:
"
+
fail
)
;
}
)
;
}
function
pollGetAsyncClientId
(
)
{
java
.
asyncCall
(
"
blockingFromJsResponseString
"
isClientIDSet
clientID
)
;
}
function
getAsyncReset
(
)
{
isResetDone
=
false
;
ClientID
.
_reset
(
)
.
then
(
function
(
)
{
isResetDone
=
true
;
}
)
;
}
function
pollGetAsyncReset
(
)
{
java
.
asyncCall
(
"
blockingFromJsResponseString
"
isResetDone
"
"
)
;
}
function
endTest
(
)
{
do_test_finished
(
)
;
}
