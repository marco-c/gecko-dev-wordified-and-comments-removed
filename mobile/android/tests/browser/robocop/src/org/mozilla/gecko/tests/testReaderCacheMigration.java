package
org
.
mozilla
.
gecko
.
tests
;
import
org
.
mozilla
.
gecko
.
GeckoProfile
;
import
org
.
mozilla
.
gecko
.
db
.
BrowserDatabaseHelper
;
import
java
.
io
.
File
;
import
java
.
io
.
IOException
;
import
static
org
.
mozilla
.
gecko
.
tests
.
helpers
.
AssertionHelper
.
fAssertTrue
;
public
class
testReaderCacheMigration
extends
JavascriptBridgeTest
{
private
final
String
[
]
TEST_DOMAINS
=
new
String
[
]
{
"
"
"
http
:
/
/
mozilla
.
org
"
"
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1234315
#
c41
"
"
http
:
/
/
www
.
llanfairpwllgwyngyllgogerychwyrndrobwllllantysiliogogogoch
.
com
/
"
}
;
private
static
final
String
TEST_JS
=
"
testReaderCacheMigration
.
js
"
;
private
void
checkPathMatches
(
final
String
pageURL
final
File
cacheDir
)
{
final
String
hashedName
=
BrowserDatabaseHelper
.
getReaderCacheFileNameForURL
(
pageURL
)
;
final
File
cacheFile
=
new
File
(
cacheDir
hashedName
)
;
try
{
getJS
(
)
.
syncCall
(
"
check_hashed_path_matches
"
pageURL
cacheFile
.
getCanonicalPath
(
)
)
;
}
catch
(
IOException
e
)
{
fAssertTrue
(
"
Unable
to
getCanonicalPath
(
)
this
should
never
happen
"
false
)
;
}
}
public
void
testReaderCacheMigration
(
)
{
blockForReadyAndLoadJS
(
TEST_JS
)
;
final
File
cacheDir
=
new
File
(
GeckoProfile
.
get
(
getActivity
(
)
)
.
getDir
(
)
"
readercache
"
)
;
for
(
final
String
URL
:
TEST_DOMAINS
)
{
checkPathMatches
(
URL
cacheDir
)
;
}
}
}
