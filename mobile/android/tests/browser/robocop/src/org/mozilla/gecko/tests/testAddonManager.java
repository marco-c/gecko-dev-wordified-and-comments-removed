package
org
.
mozilla
.
gecko
.
tests
;
import
org
.
json
.
JSONObject
;
import
org
.
mozilla
.
gecko
.
Actions
;
import
org
.
mozilla
.
gecko
.
util
.
GeckoBundle
;
import
android
.
util
.
DisplayMetrics
;
public
class
testAddonManager
extends
PixelTest
{
public
void
testAddonManager
(
)
{
Actions
.
EventExpecter
tabEventExpecter
;
Actions
.
EventExpecter
contentEventExpecter
;
Actions
.
EventExpecter
amoTitleExpecter
;
final
String
aboutAddonsURL
=
mStringHelper
.
ABOUT_ADDONS_URL
;
final
String
amoTitle
=
mStringHelper
.
ABOUT_ADDONS_AMO_TITLE
;
blockForGeckoReady
(
)
;
selectMenuItem
(
mStringHelper
.
ADDONS_LABEL
)
;
tabEventExpecter
=
mActions
.
expectGlobalEvent
(
Actions
.
EventType
.
UI
"
Tab
:
Added
"
)
;
contentEventExpecter
=
mActions
.
expectGlobalEvent
(
Actions
.
EventType
.
UI
"
Content
:
DOMContentLoaded
"
)
;
amoTitleExpecter
=
mActions
.
expectGlobalEvent
(
Actions
.
EventType
.
UI
"
about
:
addons
"
)
;
tabEventExpecter
.
blockForEvent
(
)
;
contentEventExpecter
.
blockForEvent
(
)
;
GeckoBundle
addonsPageBundle
=
amoTitleExpecter
.
blockForBundle
(
)
;
tabEventExpecter
.
unregisterListener
(
)
;
contentEventExpecter
.
unregisterListener
(
)
;
amoTitleExpecter
.
unregisterListener
(
)
;
final
String
actualAmoTitle
=
addonsPageBundle
.
getString
(
"
amoTitle
"
)
;
mAsserter
.
is
(
actualAmoTitle
amoTitle
"
Incorrect
AMO
title
"
)
;
verifyUrlBarTitle
(
aboutAddonsURL
)
;
mSolo
.
goBack
(
)
;
loadAndPaint
(
aboutAddonsURL
)
;
verifyUrlBarTitle
(
aboutAddonsURL
)
;
tabEventExpecter
=
mActions
.
expectGlobalEvent
(
Actions
.
EventType
.
UI
"
Tab
:
Added
"
)
;
contentEventExpecter
=
mActions
.
expectGlobalEvent
(
Actions
.
EventType
.
UI
"
Content
:
DOMContentLoaded
"
)
;
final
String
blankURL
=
getAbsoluteUrl
(
mStringHelper
.
ROBOCOP_BLANK_PAGE_01_URL
)
;
addTab
(
blankURL
)
;
tabEventExpecter
.
blockForEvent
(
)
;
contentEventExpecter
.
blockForEvent
(
)
;
tabEventExpecter
.
unregisterListener
(
)
;
contentEventExpecter
.
unregisterListener
(
)
;
verifyTabCount
(
2
)
;
verifyUrlBarTitle
(
blankURL
)
;
selectMenuItem
(
mStringHelper
.
ADDONS_LABEL
)
;
verifyTabCount
(
2
)
;
}
}
