package
org
.
mozilla
.
gecko
.
tests
;
import
android
.
util
.
Log
;
import
org
.
mozilla
.
gecko
.
Actions
;
import
org
.
mozilla
.
gecko
.
home
.
HomeConfig
;
public
class
testSessionOOMSave
extends
SessionTest
{
private
HomeConfig
.
Editor
mEditor
;
private
String
mDefaultPanelId
;
Override
protected
void
setUp
(
)
throws
Exception
{
super
.
setUp
(
)
;
final
HomeConfig
homeConfig
=
HomeConfig
.
getDefault
(
getInstrumentation
(
)
.
getTargetContext
(
)
)
;
final
HomeConfig
.
State
state
=
homeConfig
.
load
(
)
;
mEditor
=
state
.
edit
(
)
;
mDefaultPanelId
=
mEditor
.
getDefaultPanelId
(
)
;
mEditor
.
setDefault
(
HomeConfig
.
getIdForBuiltinPanelType
(
HomeConfig
.
PanelType
.
BOOKMARKS
)
)
;
mEditor
.
apply
(
)
;
}
Override
public
void
tearDown
(
)
throws
Exception
{
mEditor
.
setDefault
(
mDefaultPanelId
)
;
mEditor
.
apply
(
)
;
super
.
tearDown
(
)
;
}
public
void
testSessionOOMSave
(
)
{
final
Actions
.
EventExpecter
pageShowExpecter
=
mActions
.
expectGlobalEvent
(
Actions
.
EventType
.
UI
"
Content
:
PageShow
"
)
;
pageShowExpecter
.
blockForEvent
(
)
;
pageShowExpecter
.
unregisterListener
(
)
;
final
Session
session
=
createTestSession
(
1
)
;
loadSessionTabs
(
session
)
;
VerifyJSONCondition
verifyJSONCondition
=
new
VerifyJSONCondition
(
session
)
;
boolean
success
=
mSolo
.
waitForCondition
(
verifyJSONCondition
SESSION_TIMEOUT
)
;
if
(
success
)
{
mAsserter
.
ok
(
true
"
verified
session
JSON
"
null
)
;
}
else
{
mAsserter
.
ok
(
false
"
failed
to
verify
session
JSON
"
Log
.
getStackTraceString
(
verifyJSONCondition
.
getLastException
(
)
)
)
;
}
}
}
