package
org
.
mozilla
.
gecko
.
tests
.
components
;
import
android
.
view
.
View
;
import
android
.
support
.
v7
.
widget
.
RecyclerView
;
import
com
.
robotium
.
solo
.
Condition
;
import
org
.
mozilla
.
gecko
.
tests
.
UITestContext
;
import
org
.
mozilla
.
gecko
.
tests
.
helpers
.
DeviceHelper
;
import
org
.
mozilla
.
gecko
.
tests
.
helpers
.
WaitHelper
;
import
static
org
.
mozilla
.
gecko
.
tests
.
helpers
.
AssertionHelper
.
*
;
public
class
TabStripComponent
extends
BaseComponent
{
private
static
final
String
TAB_STRIP_ID
=
"
tab_strip
"
;
public
TabStripComponent
(
final
UITestContext
testContext
)
{
super
(
testContext
)
;
}
public
TabStripComponent
assertTabCount
(
int
count
)
{
fAssertEquals
(
"
The
tab
strip
tab
count
is
"
+
count
count
getTabStripView
(
)
.
getAdapter
(
)
.
getItemCount
(
)
)
;
return
this
;
}
public
void
switchToTab
(
int
index
)
{
DeviceHelper
.
assertIsTablet
(
)
;
View
tabView
=
waitForTabView
(
index
)
;
fAssertNotNull
(
String
.
format
(
"
Tab
at
index
%
d
is
not
null
"
index
)
tabView
)
;
mSolo
.
clickOnView
(
tabView
)
;
}
private
View
waitForTabView
(
final
int
index
)
{
final
RecyclerView
tabStrip
=
getTabStripView
(
)
;
final
View
[
]
tabView
=
new
View
[
1
]
;
WaitHelper
.
waitFor
(
String
.
format
(
"
Tab
at
index
%
d
to
be
visible
"
index
)
new
Condition
(
)
{
Override
public
boolean
isSatisfied
(
)
{
return
(
tabView
[
0
]
=
tabStrip
.
getChildAt
(
index
)
)
!
=
null
;
}
}
)
;
return
tabView
[
0
]
;
}
private
RecyclerView
getTabStripView
(
)
{
RecyclerView
tabStrip
=
(
RecyclerView
)
mSolo
.
getView
(
"
tab_strip
"
)
;
fAssertNotNull
(
"
Tab
strip
is
not
null
"
tabStrip
)
;
return
tabStrip
;
}
}
