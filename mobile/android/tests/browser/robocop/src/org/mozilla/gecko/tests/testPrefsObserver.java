package
org
.
mozilla
.
gecko
.
tests
;
import
org
.
mozilla
.
gecko
.
Actions
;
public
class
testPrefsObserver
extends
BaseTest
{
private
static
final
String
PREF_TEST_PREF
=
"
robocop
.
tests
.
dummy
"
;
private
Actions
.
PrefWaiter
prefWaiter
;
private
boolean
prefValue
;
public
void
setPref
(
boolean
value
)
{
mAsserter
.
dumpLog
(
"
Setting
pref
"
)
;
mActions
.
setPref
(
PREF_TEST_PREF
value
false
)
;
}
public
void
waitAndCheckPref
(
boolean
value
)
{
mAsserter
.
dumpLog
(
"
Waiting
to
check
pref
"
)
;
mAsserter
.
isnot
(
prefWaiter
null
"
Check
pref
waiter
is
not
null
"
)
;
prefWaiter
.
waitForFinish
(
)
;
mAsserter
.
is
(
prefValue
value
"
Check
correct
pref
value
"
)
;
}
public
void
verifyDisconnect
(
)
{
mAsserter
.
dumpLog
(
"
Checking
pref
observer
is
removed
"
)
;
final
boolean
newValue
=
!
prefValue
;
setPreferenceAndWaitForChange
(
PREF_TEST_PREF
newValue
)
;
mAsserter
.
isnot
(
prefValue
newValue
"
Check
pref
value
did
not
change
"
)
;
}
public
void
observePref
(
)
{
mAsserter
.
dumpLog
(
"
Setting
up
pref
observer
"
)
;
mAsserter
.
is
(
prefWaiter
null
"
Check
pref
waiter
is
null
"
)
;
prefWaiter
=
mActions
.
addPrefsObserver
(
new
String
[
]
{
PREF_TEST_PREF
}
new
Actions
.
PrefHandlerBase
(
)
{
Override
public
void
prefValue
(
String
pref
boolean
value
)
{
mAsserter
.
is
(
pref
PREF_TEST_PREF
"
Check
correct
pref
name
"
)
;
prefValue
=
value
;
}
}
)
;
}
public
void
removePrefObserver
(
)
{
mAsserter
.
dumpLog
(
"
Removing
pref
observer
"
)
;
mActions
.
removePrefsObserver
(
prefWaiter
)
;
}
public
void
testPrefsObserver
(
)
{
blockForGeckoReady
(
)
;
setPref
(
false
)
;
observePref
(
)
;
waitAndCheckPref
(
false
)
;
setPref
(
true
)
;
waitAndCheckPref
(
true
)
;
removePrefObserver
(
)
;
verifyDisconnect
(
)
;
removePrefObserver
(
)
;
}
}
