package
org
.
mozilla
.
gecko
.
tests
;
import
android
.
util
.
Log
;
import
com
.
robotium
.
solo
.
Condition
;
import
org
.
mozilla
.
gecko
.
R
;
import
org
.
mozilla
.
gecko
.
activitystream
.
homepanel
.
topstories
.
PocketStoriesLoader
;
import
org
.
mozilla
.
gecko
.
tests
.
helpers
.
NavigationHelper
;
import
org
.
mozilla
.
gecko
.
tests
.
helpers
.
WaitHelper
;
import
org
.
mozilla
.
gecko
.
util
.
StringUtils
;
import
static
org
.
mozilla
.
gecko
.
tests
.
helpers
.
AssertionHelper
.
*
;
public
class
testActivityStreamPocketReferrer
extends
JavascriptBridgeTest
{
private
static
final
String
LOGTAG
=
StringUtils
.
safeSubstring
(
testActivityStreamPocketReferrer
.
class
.
getSimpleName
(
)
0
23
)
;
private
static
final
String
JS_FILE
=
"
testActivityStreamPocketReferrer
.
js
"
;
private
boolean
wasTabLoadReceived
=
false
;
private
boolean
tabLoadContainsPocketReferrer
=
false
;
Override
public
void
setUp
(
)
throws
Exception
{
super
.
setUp
(
)
;
PocketStoriesLoader
.
configureForTesting
(
getAbsoluteHostnameUrl
(
StringHelper
.
get
(
)
.
ROBOCOP_BLANK_PAGE_01_URL
)
)
;
}
public
void
testActivityStreamPocketReferrer
(
)
throws
Exception
{
if
(
!
getActivity
(
)
.
getResources
(
)
.
getBoolean
(
R
.
bool
.
pref_activitystream_pocket_enabled_default
)
)
{
Log
.
d
(
LOGTAG
"
Pocket
recommendations
are
disabled
by
default
;
returning
success
.
.
.
"
)
;
return
;
}
blockForReadyAndLoadJS
(
JS_FILE
)
;
NavigationHelper
.
goBack
(
)
;
checkReferrerInTopStories
(
)
;
checkReferrerInTopStoriesContextMenu
(
)
;
checkNoReferrerInTopSites
(
)
;
}
private
void
checkReferrerInTopStories
(
)
{
Log
.
d
(
LOGTAG
"
testReferrerInTopStories
"
)
;
WaitHelper
.
waitForPageLoad
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
mSolo
.
clickOnText
(
PocketStoriesLoader
.
PLACEHOLDER_TITLE
)
;
}
}
)
;
assertTabLoadEventContainsPocketReferrer
(
true
)
;
NavigationHelper
.
goBack
(
)
;
}
private
void
checkReferrerInTopStoriesContextMenu
(
)
throws
Exception
{
Log
.
d
(
LOGTAG
"
testReferrerInTopStoriesContextMenu
"
)
;
mSolo
.
clickLongOnText
(
PocketStoriesLoader
.
PLACEHOLDER_TITLE
)
;
mSolo
.
clickOnText
(
StringHelper
.
get
(
)
.
CONTEXT_MENU_OPEN_IN_NEW_TAB
)
;
WaitHelper
.
waitFor
(
"
context
menu
to
close
after
item
selection
.
"
new
Condition
(
)
{
Override
public
boolean
isSatisfied
(
)
{
return
!
mSolo
.
searchText
(
StringHelper
.
get
(
)
.
CONTEXT_MENU_OPEN_IN_NEW_TAB
)
;
}
}
5000
)
;
Thread
.
sleep
(
500
)
;
assertTabLoadEventContainsPocketReferrer
(
true
)
;
}
private
void
checkNoReferrerInTopSites
(
)
{
Log
.
d
(
LOGTAG
"
testNoReferrerInTopSites
"
)
;
WaitHelper
.
waitForPageLoad
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
mSolo
.
clickOnText
(
"
Browser
Bl
"
)
;
}
}
)
;
assertTabLoadEventContainsPocketReferrer
(
false
)
;
NavigationHelper
.
goBack
(
)
;
}
private
void
assertTabLoadEventContainsPocketReferrer
(
final
boolean
expectedContainsReferrer
)
{
getJS
(
)
.
syncCall
(
"
copyTabLoadEventMetadataToJava
"
)
;
fAssertTrue
(
"
Expected
Tab
:
Load
to
be
called
"
wasTabLoadReceived
)
;
fAssertEquals
(
"
Checking
for
expected
existence
of
pocket
referrer
from
Tab
:
Load
event
in
JS
"
expectedContainsReferrer
tabLoadContainsPocketReferrer
)
;
}
public
void
copyTabLoadEventMetadataToJavaReceiver
(
final
boolean
wasTabLoadReceived
final
boolean
tabLoadContainsPocketReferrer
)
{
Log
.
d
(
LOGTAG
"
setTabLoadContainsPocketReferrer
called
via
JS
:
"
+
wasTabLoadReceived
+
"
"
+
tabLoadContainsPocketReferrer
)
;
this
.
wasTabLoadReceived
=
wasTabLoadReceived
;
this
.
tabLoadContainsPocketReferrer
=
tabLoadContainsPocketReferrer
;
}
public
void
log
(
final
String
s
)
{
Log
.
d
(
LOGTAG
"
jsLog
:
"
+
s
)
;
}
}
