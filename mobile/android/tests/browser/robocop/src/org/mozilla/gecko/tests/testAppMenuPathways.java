package
org
.
mozilla
.
gecko
.
tests
;
import
org
.
mozilla
.
gecko
.
tests
.
components
.
AppMenuComponent
;
import
org
.
mozilla
.
gecko
.
tests
.
helpers
.
GeckoHelper
;
import
org
.
mozilla
.
gecko
.
tests
.
helpers
.
NavigationHelper
;
import
org
.
mozilla
.
gecko
.
util
.
GeckoBundle
;
import
com
.
robotium
.
solo
.
Solo
;
public
class
testAppMenuPathways
extends
UITest
{
public
void
testAppMenuPathways
(
)
{
GeckoHelper
.
blockForReady
(
)
;
_testHardwareMenuKeyOpenClose
(
)
;
_testSaveAsPDFPathway
(
)
;
}
public
void
_testHardwareMenuKeyOpenClose
(
)
{
mAppMenu
.
assertMenuIsNotOpen
(
)
;
mSolo
.
sendKey
(
Solo
.
MENU
)
;
mAppMenu
.
waitForMenuOpen
(
)
;
mAppMenu
.
assertMenuIsOpen
(
)
;
mSolo
.
sendKey
(
Solo
.
MENU
)
;
mAppMenu
.
waitForMenuClose
(
)
;
mAppMenu
.
assertMenuIsNotOpen
(
)
;
}
public
void
_testSaveAsPDFPathway
(
)
{
mAppMenu
.
assertMenuItemIsDisabledAndVisible
(
AppMenuComponent
.
PageMenuItem
.
SAVE_AS_PDF
)
;
final
GeckoBundle
message
=
new
GeckoBundle
(
)
;
message
.
putString
(
"
contentType
"
"
video
/
webm
"
)
;
message
.
putString
(
"
baseDomain
"
"
webmfiles
.
org
"
)
;
message
.
putBoolean
(
"
sameDocument
"
false
)
;
message
.
putString
(
"
userRequested
"
"
"
)
;
message
.
putString
(
"
uri
"
getAbsoluteIpUrl
(
"
/
big
-
buck
-
bunny_trailer
.
webm
"
)
)
;
message
.
putInt
(
"
tabID
"
0
)
;
getActions
(
)
.
sendGlobalEvent
(
"
Content
:
LocationChange
"
message
)
;
mAppMenu
.
assertMenuItemIsDisabledAndVisible
(
AppMenuComponent
.
PageMenuItem
.
SAVE_AS_PDF
)
;
NavigationHelper
.
enterAndLoadUrl
(
mStringHelper
.
ROBOCOP_BLANK_PAGE_01_URL
)
;
mToolbar
.
assertTitle
(
mStringHelper
.
ROBOCOP_BLANK_PAGE_01_URL
)
;
mAppMenu
.
pressMenuItem
(
AppMenuComponent
.
PageMenuItem
.
SAVE_AS_PDF
)
;
}
}
