package
org
.
mozilla
.
gecko
.
tests
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
Tab
;
import
org
.
mozilla
.
gecko
.
Tabs
;
import
org
.
mozilla
.
gecko
.
util
.
GeckoBundle
;
import
android
.
util
.
Log
;
public
class
testAccessibleCarets
extends
JavascriptTest
{
private
static
final
String
LOGTAG
=
"
testAccessibleCarets
"
;
private
static
final
String
TAB_CHANGE_EVENT
=
"
testAccessibleCarets
:
TabChange
"
;
private
final
TabsListener
tabsListener
;
public
testAccessibleCarets
(
)
{
super
(
"
testAccessibleCarets
.
js
"
)
;
tabsListener
=
new
TabsListener
(
)
;
}
Override
public
void
setUp
(
)
throws
Exception
{
super
.
setUp
(
)
;
Tabs
.
registerOnTabsChangedListener
(
tabsListener
)
;
}
Override
public
void
tearDown
(
)
throws
Exception
{
Tabs
.
unregisterOnTabsChangedListener
(
tabsListener
)
;
super
.
tearDown
(
)
;
}
Override
public
void
testJavascript
(
)
throws
Exception
{
if
(
!
AppConstants
.
NIGHTLY_BUILD
)
{
mAsserter
.
dumpLog
(
LOGTAG
+
"
is
disabled
on
non
-
Nightly
builds
:
returning
"
)
;
return
;
}
super
.
testJavascript
(
)
;
}
private
class
TabsListener
implements
Tabs
.
OnTabsChangedListener
{
Override
public
void
onTabChanged
(
Tab
tab
Tabs
.
TabEvents
msg
String
data
)
{
switch
(
msg
)
{
case
STOP
:
final
GeckoBundle
args
=
new
GeckoBundle
(
2
)
;
args
.
putInt
(
"
tabId
"
tab
.
getId
(
)
)
;
args
.
putString
(
"
event
"
msg
.
toString
(
)
)
;
mActions
.
sendGlobalEvent
(
TAB_CHANGE_EVENT
args
)
;
break
;
}
}
}
}
