function
promiseBrowserEvent
(
browser
eventType
)
{
return
new
Promise
(
(
resolve
)
=
>
{
function
handle
(
event
)
{
if
(
event
.
target
!
=
browser
.
contentDocument
|
|
event
.
target
.
location
.
href
=
=
"
about
:
blank
"
)
{
info
(
"
Skipping
spurious
'
"
+
eventType
+
"
'
event
"
+
"
for
"
+
event
.
target
.
location
.
href
)
;
return
;
}
info
(
"
Received
event
"
+
eventType
+
"
from
browser
"
)
;
browser
.
removeEventListener
(
eventType
handle
true
)
;
resolve
(
event
)
;
}
browser
.
addEventListener
(
eventType
handle
true
)
;
info
(
"
Now
waiting
for
"
+
eventType
+
"
event
from
browser
"
)
;
}
)
;
}
function
promiseNotification
(
topic
)
{
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
return
new
Promise
(
(
resolve
reject
)
=
>
{
function
observe
(
subject
topic
data
)
{
info
(
"
Received
"
+
topic
+
"
notification
from
Gecko
"
)
;
Services
.
obs
.
removeObserver
(
observe
topic
)
;
resolve
(
)
;
}
Services
.
obs
.
addObserver
(
observe
topic
false
)
;
info
(
"
Now
waiting
for
"
+
topic
+
"
notification
from
Gecko
"
)
;
}
)
;
}
