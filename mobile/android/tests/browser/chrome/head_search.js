var
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Task
.
jsm
"
)
;
var
addTestEngines
=
Task
.
async
(
function
*
(
aItems
)
{
let
engines
=
[
]
;
for
(
let
item
of
aItems
)
{
yield
new
Promise
(
(
resolve
reject
)
=
>
{
Services
.
obs
.
addObserver
(
function
obs
(
subject
topic
data
)
{
try
{
let
engine
=
subject
.
QueryInterface
(
Ci
.
nsISearchEngine
)
;
if
(
data
!
=
"
engine
-
added
"
|
|
engine
.
name
!
=
item
.
name
)
{
return
;
}
Services
.
obs
.
removeObserver
(
obs
"
browser
-
search
-
engine
-
modified
"
)
;
engines
.
push
(
engine
)
;
resolve
(
)
;
}
catch
(
ex
)
{
reject
(
ex
)
;
}
}
"
browser
-
search
-
engine
-
modified
"
)
;
Services
.
search
.
addEngineWithDetails
(
item
.
name
.
.
.
item
.
details
)
;
}
)
;
}
return
engines
;
}
)
;
