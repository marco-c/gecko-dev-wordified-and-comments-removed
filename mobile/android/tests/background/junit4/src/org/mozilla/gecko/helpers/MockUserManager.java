package
org
.
mozilla
.
gecko
.
helpers
;
import
android
.
annotation
.
TargetApi
;
import
android
.
content
.
Context
;
import
android
.
os
.
Build
;
import
android
.
os
.
Bundle
;
import
android
.
os
.
UserManager
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
robolectric
.
RuntimeEnvironment
;
import
static
org
.
mockito
.
Matchers
.
anyString
;
import
static
org
.
mockito
.
Mockito
.
doReturn
;
import
static
org
.
mockito
.
Mockito
.
spy
;
public
class
MockUserManager
{
TargetApi
(
Build
.
VERSION_CODES
.
JELLY_BEAN_MR2
)
public
static
Context
getContextWithMockedUserManager
(
)
{
final
Context
context
;
if
(
!
AppConstants
.
Versions
.
preJBMR2
)
{
context
=
spy
(
RuntimeEnvironment
.
application
)
;
final
UserManager
userManager
=
spy
(
(
UserManager
)
context
.
getSystemService
(
Context
.
USER_SERVICE
)
)
;
doReturn
(
new
Bundle
(
)
)
.
when
(
userManager
)
.
getApplicationRestrictions
(
anyString
(
)
)
;
doReturn
(
new
Bundle
(
)
)
.
when
(
userManager
)
.
getUserRestrictions
(
)
;
doReturn
(
userManager
)
.
when
(
context
)
.
getSystemService
(
Context
.
USER_SERVICE
)
;
}
else
{
context
=
RuntimeEnvironment
.
application
;
}
return
context
;
}
}
