package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
database
;
import
android
.
content
.
Context
;
import
android
.
database
.
Cursor
;
import
android
.
database
.
SQLException
;
import
android
.
database
.
sqlite
.
SQLiteDatabase
;
import
android
.
database
.
sqlite
.
SQLiteOpenHelper
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
Log
;
public
final
class
ExoDatabaseProvider
extends
SQLiteOpenHelper
implements
DatabaseProvider
{
public
static
final
String
DATABASE_NAME
=
"
exoplayer_internal
.
db
"
;
private
static
final
int
VERSION
=
1
;
private
static
final
String
TAG
=
"
ExoDatabaseProvider
"
;
public
ExoDatabaseProvider
(
Context
context
)
{
super
(
context
.
getApplicationContext
(
)
DATABASE_NAME
null
VERSION
)
;
}
Override
public
void
onCreate
(
SQLiteDatabase
db
)
{
}
Override
public
void
onUpgrade
(
SQLiteDatabase
db
int
oldVersion
int
newVersion
)
{
}
Override
public
void
onDowngrade
(
SQLiteDatabase
db
int
oldVersion
int
newVersion
)
{
wipeDatabase
(
db
)
;
}
private
static
void
wipeDatabase
(
SQLiteDatabase
db
)
{
String
[
]
columns
=
{
"
type
"
"
name
"
}
;
try
(
Cursor
cursor
=
db
.
query
(
"
sqlite_master
"
columns
null
null
null
null
null
)
)
{
while
(
cursor
.
moveToNext
(
)
)
{
String
type
=
cursor
.
getString
(
0
)
;
String
name
=
cursor
.
getString
(
1
)
;
if
(
!
"
sqlite_sequence
"
.
equals
(
name
)
)
{
String
sql
=
"
DROP
"
+
type
+
"
IF
EXISTS
"
+
name
;
try
{
db
.
execSQL
(
sql
)
;
}
catch
(
SQLException
e
)
{
Log
.
e
(
TAG
"
Error
executing
"
+
sql
e
)
;
}
}
}
}
}
}
