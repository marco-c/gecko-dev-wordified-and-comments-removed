package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
;
import
androidx
.
annotation
.
IntDef
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
Player
;
import
java
.
lang
.
annotation
.
Documented
;
import
java
.
lang
.
annotation
.
Retention
;
import
java
.
lang
.
annotation
.
RetentionPolicy
;
public
final
class
RepeatModeUtil
{
Documented
Retention
(
RetentionPolicy
.
SOURCE
)
IntDef
(
flag
=
true
value
=
{
REPEAT_TOGGLE_MODE_NONE
REPEAT_TOGGLE_MODE_ONE
REPEAT_TOGGLE_MODE_ALL
}
)
public
interface
RepeatToggleModes
{
}
public
static
final
int
REPEAT_TOGGLE_MODE_NONE
=
0
;
public
static
final
int
REPEAT_TOGGLE_MODE_ONE
=
1
;
public
static
final
int
REPEAT_TOGGLE_MODE_ALL
=
1
<
<
1
;
private
RepeatModeUtil
(
)
{
}
public
static
Player
.
RepeatMode
int
getNextRepeatMode
(
Player
.
RepeatMode
int
currentMode
int
enabledModes
)
{
for
(
int
offset
=
1
;
offset
<
=
2
;
offset
+
+
)
{
Player
.
RepeatMode
int
proposedMode
=
(
currentMode
+
offset
)
%
3
;
if
(
isRepeatModeEnabled
(
proposedMode
enabledModes
)
)
{
return
proposedMode
;
}
}
return
currentMode
;
}
public
static
boolean
isRepeatModeEnabled
(
Player
.
RepeatMode
int
repeatMode
int
enabledModes
)
{
switch
(
repeatMode
)
{
case
Player
.
REPEAT_MODE_OFF
:
return
true
;
case
Player
.
REPEAT_MODE_ONE
:
return
(
enabledModes
&
REPEAT_TOGGLE_MODE_ONE
)
!
=
0
;
case
Player
.
REPEAT_MODE_ALL
:
return
(
enabledModes
&
REPEAT_TOGGLE_MODE_ALL
)
!
=
0
;
default
:
return
false
;
}
}
}
