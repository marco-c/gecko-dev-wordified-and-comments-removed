package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
;
import
androidx
.
annotation
.
IntDef
;
import
androidx
.
annotation
.
Nullable
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
source
.
SampleStream
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
MediaClock
;
import
java
.
io
.
IOException
;
import
java
.
lang
.
annotation
.
Documented
;
import
java
.
lang
.
annotation
.
Retention
;
import
java
.
lang
.
annotation
.
RetentionPolicy
;
public
interface
Renderer
extends
PlayerMessage
.
Target
{
Documented
Retention
(
RetentionPolicy
.
SOURCE
)
IntDef
(
{
STATE_DISABLED
STATE_ENABLED
STATE_STARTED
}
)
interface
State
{
}
int
STATE_DISABLED
=
0
;
int
STATE_ENABLED
=
1
;
int
STATE_STARTED
=
2
;
int
getTrackType
(
)
;
RendererCapabilities
getCapabilities
(
)
;
void
setIndex
(
int
index
)
;
Nullable
MediaClock
getMediaClock
(
)
;
State
int
getState
(
)
;
void
enable
(
RendererConfiguration
configuration
Format
[
]
formats
SampleStream
stream
long
positionUs
boolean
joining
long
offsetUs
)
throws
ExoPlaybackException
;
void
start
(
)
throws
ExoPlaybackException
;
void
replaceStream
(
Format
[
]
formats
SampleStream
stream
long
offsetUs
)
throws
ExoPlaybackException
;
Nullable
SampleStream
getStream
(
)
;
boolean
hasReadStreamToEnd
(
)
;
long
getReadingPositionUs
(
)
;
void
setCurrentStreamFinal
(
)
;
boolean
isCurrentStreamFinal
(
)
;
void
maybeThrowStreamError
(
)
throws
IOException
;
void
resetPosition
(
long
positionUs
)
throws
ExoPlaybackException
;
default
void
setOperatingRate
(
float
operatingRate
)
throws
ExoPlaybackException
{
}
void
render
(
long
positionUs
long
elapsedRealtimeUs
)
throws
ExoPlaybackException
;
boolean
isReady
(
)
;
boolean
isEnded
(
)
;
void
stop
(
)
throws
ExoPlaybackException
;
void
disable
(
)
;
void
reset
(
)
;
}
