package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
upstream
.
cache
;
import
androidx
.
annotation
.
Nullable
;
import
androidx
.
annotation
.
WorkerThread
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
C
;
import
java
.
io
.
File
;
import
java
.
io
.
IOException
;
import
java
.
util
.
NavigableSet
;
import
java
.
util
.
Set
;
public
interface
Cache
{
interface
Listener
{
void
onSpanAdded
(
Cache
cache
CacheSpan
span
)
;
void
onSpanRemoved
(
Cache
cache
CacheSpan
span
)
;
void
onSpanTouched
(
Cache
cache
CacheSpan
oldSpan
CacheSpan
newSpan
)
;
}
class
CacheException
extends
IOException
{
public
CacheException
(
String
message
)
{
super
(
message
)
;
}
public
CacheException
(
Throwable
cause
)
{
super
(
cause
)
;
}
public
CacheException
(
String
message
Throwable
cause
)
{
super
(
message
cause
)
;
}
}
long
UID_UNSET
=
-
1
;
long
getUid
(
)
;
WorkerThread
void
release
(
)
;
NavigableSet
<
CacheSpan
>
addListener
(
String
key
Listener
listener
)
;
void
removeListener
(
String
key
Listener
listener
)
;
NavigableSet
<
CacheSpan
>
getCachedSpans
(
String
key
)
;
Set
<
String
>
getKeys
(
)
;
long
getCacheSpace
(
)
;
WorkerThread
CacheSpan
startReadWrite
(
String
key
long
position
)
throws
InterruptedException
CacheException
;
WorkerThread
Nullable
CacheSpan
startReadWriteNonBlocking
(
String
key
long
position
)
throws
CacheException
;
WorkerThread
File
startFile
(
String
key
long
position
long
length
)
throws
CacheException
;
WorkerThread
void
commitFile
(
File
file
long
length
)
throws
CacheException
;
void
releaseHoleSpan
(
CacheSpan
holeSpan
)
;
WorkerThread
void
removeSpan
(
CacheSpan
span
)
throws
CacheException
;
boolean
isCached
(
String
key
long
position
long
length
)
;
long
getCachedLength
(
String
key
long
position
long
length
)
;
WorkerThread
void
applyContentMetadataMutations
(
String
key
ContentMetadataMutations
mutations
)
throws
CacheException
;
ContentMetadata
getContentMetadata
(
String
key
)
;
}
