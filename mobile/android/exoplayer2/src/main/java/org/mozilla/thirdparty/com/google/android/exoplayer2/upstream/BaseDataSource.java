package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
upstream
;
import
static
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
Util
.
castNonNull
;
import
androidx
.
annotation
.
Nullable
;
import
java
.
util
.
ArrayList
;
public
abstract
class
BaseDataSource
implements
DataSource
{
private
final
boolean
isNetwork
;
private
final
ArrayList
<
TransferListener
>
listeners
;
private
int
listenerCount
;
Nullable
private
DataSpec
dataSpec
;
protected
BaseDataSource
(
boolean
isNetwork
)
{
this
.
isNetwork
=
isNetwork
;
this
.
listeners
=
new
ArrayList
<
>
(
1
)
;
}
Override
public
final
void
addTransferListener
(
TransferListener
transferListener
)
{
if
(
!
listeners
.
contains
(
transferListener
)
)
{
listeners
.
add
(
transferListener
)
;
listenerCount
+
+
;
}
}
protected
final
void
transferInitializing
(
DataSpec
dataSpec
)
{
for
(
int
i
=
0
;
i
<
listenerCount
;
i
+
+
)
{
listeners
.
get
(
i
)
.
onTransferInitializing
(
this
dataSpec
isNetwork
)
;
}
}
protected
final
void
transferStarted
(
DataSpec
dataSpec
)
{
this
.
dataSpec
=
dataSpec
;
for
(
int
i
=
0
;
i
<
listenerCount
;
i
+
+
)
{
listeners
.
get
(
i
)
.
onTransferStart
(
this
dataSpec
isNetwork
)
;
}
}
protected
final
void
bytesTransferred
(
int
bytesTransferred
)
{
DataSpec
dataSpec
=
castNonNull
(
this
.
dataSpec
)
;
for
(
int
i
=
0
;
i
<
listenerCount
;
i
+
+
)
{
listeners
.
get
(
i
)
.
onBytesTransferred
(
this
dataSpec
isNetwork
bytesTransferred
)
;
}
}
protected
final
void
transferEnded
(
)
{
DataSpec
dataSpec
=
castNonNull
(
this
.
dataSpec
)
;
for
(
int
i
=
0
;
i
<
listenerCount
;
i
+
+
)
{
listeners
.
get
(
i
)
.
onTransferEnd
(
this
dataSpec
isNetwork
)
;
}
this
.
dataSpec
=
null
;
}
}
