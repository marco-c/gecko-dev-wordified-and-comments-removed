package
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
text
.
ssa
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
C
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
text
.
Cue
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
text
.
Subtitle
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
Assertions
;
import
org
.
mozilla
.
thirdparty
.
com
.
google
.
android
.
exoplayer2
.
util
.
Util
;
import
java
.
util
.
Collections
;
import
java
.
util
.
List
;
final
class
SsaSubtitle
implements
Subtitle
{
private
final
List
<
List
<
Cue
>
>
cues
;
private
final
List
<
Long
>
cueTimesUs
;
public
SsaSubtitle
(
List
<
List
<
Cue
>
>
cues
List
<
Long
>
cueTimesUs
)
{
this
.
cues
=
cues
;
this
.
cueTimesUs
=
cueTimesUs
;
}
Override
public
int
getNextEventTimeIndex
(
long
timeUs
)
{
int
index
=
Util
.
binarySearchCeil
(
cueTimesUs
timeUs
false
false
)
;
return
index
<
cueTimesUs
.
size
(
)
?
index
:
C
.
INDEX_UNSET
;
}
Override
public
int
getEventTimeCount
(
)
{
return
cueTimesUs
.
size
(
)
;
}
Override
public
long
getEventTime
(
int
index
)
{
Assertions
.
checkArgument
(
index
>
=
0
)
;
Assertions
.
checkArgument
(
index
<
cueTimesUs
.
size
(
)
)
;
return
cueTimesUs
.
get
(
index
)
;
}
Override
public
List
<
Cue
>
getCues
(
long
timeUs
)
{
int
index
=
Util
.
binarySearchFloor
(
cueTimesUs
timeUs
true
false
)
;
if
(
index
=
=
-
1
)
{
return
Collections
.
emptyList
(
)
;
}
else
{
return
cues
.
get
(
index
)
;
}
}
}
