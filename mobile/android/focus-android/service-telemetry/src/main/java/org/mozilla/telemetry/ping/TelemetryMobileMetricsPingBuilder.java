package
org
.
mozilla
.
telemetry
.
ping
;
import
org
.
json
.
JSONObject
;
import
org
.
mozilla
.
telemetry
.
config
.
TelemetryConfiguration
;
import
org
.
mozilla
.
telemetry
.
measurement
.
ArchMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
CreatedDateMeasurementNew
;
import
org
.
mozilla
.
telemetry
.
measurement
.
CreatedTimestampMeasurementNew
;
import
org
.
mozilla
.
telemetry
.
measurement
.
DeviceMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
FirstRunProfileDateMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
LocaleMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
MetricsMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
OperatingSystemMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
OperatingSystemVersionMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
ProcessStartTimestampMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
SequenceMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
TimezoneOffsetMeasurement
;
public
class
TelemetryMobileMetricsPingBuilder
extends
TelemetryPingBuilder
{
public
static
final
String
TYPE
=
"
mobile
-
metrics
"
;
private
static
final
int
VERSION
=
1
;
public
TelemetryMobileMetricsPingBuilder
(
JSONObject
snapshots
TelemetryConfiguration
configuration
)
{
super
(
configuration
TYPE
VERSION
)
;
addMeasurement
(
new
ProcessStartTimestampMeasurement
(
configuration
)
)
;
addMeasurement
(
new
SequenceMeasurement
(
configuration
this
)
)
;
addMeasurement
(
new
LocaleMeasurement
(
)
)
;
addMeasurement
(
new
DeviceMeasurement
(
)
)
;
addMeasurement
(
new
ArchMeasurement
(
)
)
;
addMeasurement
(
new
FirstRunProfileDateMeasurement
(
configuration
)
)
;
addMeasurement
(
new
OperatingSystemMeasurement
(
)
)
;
addMeasurement
(
new
OperatingSystemVersionMeasurement
(
)
)
;
addMeasurement
(
new
CreatedDateMeasurementNew
(
)
)
;
addMeasurement
(
new
CreatedTimestampMeasurementNew
(
)
)
;
addMeasurement
(
new
TimezoneOffsetMeasurement
(
)
)
;
addMeasurement
(
new
MetricsMeasurement
(
snapshots
)
)
;
}
Override
protected
String
getUploadPath
(
final
String
documentId
)
{
return
super
.
getUploadPath
(
documentId
)
+
"
?
v
=
4
"
;
}
}
