package
org
.
mozilla
.
focus
.
webkit
.
matcher
;
import
org
.
junit
.
Test
;
import
org
.
junit
.
runner
.
RunWith
;
import
org
.
mozilla
.
focus
.
webkit
.
matcher
.
util
.
FocusString
;
import
org
.
robolectric
.
RobolectricTestRunner
;
import
static
org
.
junit
.
Assert
.
*
;
RunWith
(
RobolectricTestRunner
.
class
)
public
class
EntityListTest
{
Test
public
void
testWhitelist
(
)
{
final
String
mozillaOrg
=
"
mozilla
.
org
"
;
final
String
fooMozillaOrg
=
"
foo
.
mozilla
.
org
"
;
final
String
fooCom
=
"
foo
.
com
"
;
final
String
barCom
=
"
bar
.
com
"
;
final
EntityList
entityList
=
new
EntityList
(
)
;
final
Trie
fooComTrie
=
Trie
.
createRootNode
(
)
;
fooComTrie
.
put
(
FocusString
.
create
(
fooCom
)
.
reverse
(
)
)
;
final
Trie
barComTrie
=
Trie
.
createRootNode
(
)
;
barComTrie
.
put
(
FocusString
.
create
(
barCom
)
.
reverse
(
)
)
;
entityList
.
putWhiteList
(
FocusString
.
create
(
mozillaOrg
)
.
reverse
(
)
fooComTrie
)
;
entityList
.
putWhiteList
(
FocusString
.
create
(
fooMozillaOrg
)
.
reverse
(
)
barComTrie
)
;
assertTrue
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
mozillaOrg
"
http
:
/
/
"
+
fooCom
)
)
;
assertFalse
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
mozillaOrg
"
http
:
/
/
"
+
barCom
)
)
;
assertTrue
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
fooMozillaOrg
"
http
:
/
/
"
+
fooCom
)
)
;
assertTrue
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
fooMozillaOrg
"
http
:
/
/
"
+
barCom
)
)
;
assertFalse
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
barCom
"
http
:
/
/
"
+
barCom
)
)
;
assertFalse
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
barCom
"
http
:
/
/
"
+
mozillaOrg
)
)
;
assertTrue
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
"
hello
.
"
+
fooMozillaOrg
"
http
:
/
/
"
+
fooCom
)
)
;
assertTrue
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
"
hello
.
"
+
fooMozillaOrg
"
http
:
/
/
"
+
barCom
)
)
;
assertTrue
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
"
hello
.
"
+
mozillaOrg
"
http
:
/
/
"
+
fooCom
)
)
;
assertFalse
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
"
hello
.
"
+
mozillaOrg
"
http
:
/
/
"
+
barCom
)
)
;
assertTrue
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
mozillaOrg
+
"
/
somewhere
"
"
http
:
/
/
"
+
fooCom
+
"
/
somewhereElse
/
bla
/
bla
"
)
)
;
assertFalse
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
mozillaOrg
+
"
/
another
/
page
.
html
?
u
=
a
"
"
http
:
/
/
"
+
barCom
+
"
/
hello
"
)
)
;
assertTrue
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
fooMozillaOrg
+
"
/
somewhere
"
"
http
:
/
/
"
+
fooCom
+
"
/
somewhereElse
/
bla
/
bla
"
)
)
;
assertTrue
(
entityList
.
isWhiteListed
(
"
http
:
/
/
"
+
fooMozillaOrg
+
"
/
another
/
page
.
html
?
u
=
a
"
"
http
:
/
/
"
+
barCom
+
"
/
hello
"
)
)
;
}
}
