package
org
.
mozilla
.
focus
.
web
;
import
android
.
content
.
Intent
;
import
android
.
os
.
Bundle
;
import
android
.
os
.
Parcel
;
import
android
.
os
.
Parcelable
;
import
android
.
support
.
customtabs
.
CustomTabsIntent
;
import
org
.
junit
.
Test
;
import
org
.
junit
.
runner
.
RunWith
;
import
org
.
mozilla
.
focus
.
utils
.
SafeIntent
;
import
org
.
robolectric
.
RobolectricTestRunner
;
import
java
.
lang
.
reflect
.
Field
;
import
static
org
.
junit
.
Assert
.
*
;
RunWith
(
RobolectricTestRunner
.
class
)
public
class
CustomTabConfigTest
{
private
static
class
UnparcelableParcel
implements
Parcelable
{
UnparcelableParcel
(
)
{
}
protected
UnparcelableParcel
(
Parcel
in
)
{
throw
new
RuntimeException
(
"
Haha
"
)
;
}
public
static
final
Creator
<
UnparcelableParcel
>
CREATOR
=
new
Creator
<
UnparcelableParcel
>
(
)
{
Override
public
UnparcelableParcel
createFromParcel
(
Parcel
in
)
{
return
new
UnparcelableParcel
(
in
)
;
}
Override
public
UnparcelableParcel
[
]
newArray
(
int
size
)
{
return
new
UnparcelableParcel
[
size
]
;
}
}
;
Override
public
void
writeToParcel
(
Parcel
dest
int
flags
)
{
}
Override
public
int
describeContents
(
)
{
return
0
;
}
}
Test
public
void
isCustomTabIntent
(
)
throws
Exception
{
final
CustomTabsIntent
.
Builder
builder
=
new
CustomTabsIntent
.
Builder
(
)
;
final
CustomTabsIntent
customTabsIntent
=
builder
.
build
(
)
;
assertTrue
(
CustomTabConfig
.
isCustomTabIntent
(
new
SafeIntent
(
customTabsIntent
.
intent
)
)
)
;
}
Test
public
void
malformedExtras
(
)
throws
Exception
{
final
CustomTabsIntent
.
Builder
builder
=
new
CustomTabsIntent
.
Builder
(
)
;
final
CustomTabsIntent
customTabsIntent
=
builder
.
build
(
)
;
customTabsIntent
.
intent
.
putExtra
(
"
garbage
"
new
UnparcelableParcel
(
)
)
;
final
Parcel
parcel
=
Parcel
.
obtain
(
)
;
final
Bundle
extras
=
customTabsIntent
.
intent
.
getExtras
(
)
;
extras
.
writeToParcel
(
parcel
0
)
;
extras
.
clear
(
)
;
parcel
.
setDataPosition
(
0
)
;
final
Bundle
injectedBundle
=
parcel
.
readBundle
(
)
;
parcel
.
recycle
(
)
;
final
Field
extrasField
=
Intent
.
class
.
getDeclaredField
(
"
mExtras
"
)
;
extrasField
.
setAccessible
(
true
)
;
extrasField
.
set
(
customTabsIntent
.
intent
injectedBundle
)
;
extrasField
.
setAccessible
(
false
)
;
assertFalse
(
CustomTabConfig
.
isCustomTabIntent
(
new
SafeIntent
(
customTabsIntent
.
intent
)
)
)
;
final
CustomTabConfig
c
=
CustomTabConfig
.
parseCustomTabIntent
(
new
SafeIntent
(
customTabsIntent
.
intent
)
)
;
assertNull
(
c
.
actionButtonConfig
)
;
}
Test
public
void
malformedActionButtonConfig
(
)
throws
Exception
{
final
CustomTabsIntent
.
Builder
builder
=
new
CustomTabsIntent
.
Builder
(
)
;
final
CustomTabsIntent
customTabsIntent
=
builder
.
build
(
)
;
final
Bundle
garbage
=
new
Bundle
(
)
;
garbage
.
putParcelable
(
"
foobar
"
new
UnparcelableParcel
(
)
)
;
customTabsIntent
.
intent
.
putExtra
(
CustomTabsIntent
.
EXTRA_ACTION_BUTTON_BUNDLE
garbage
)
;
assertTrue
(
CustomTabConfig
.
isCustomTabIntent
(
new
SafeIntent
(
customTabsIntent
.
intent
)
)
)
;
final
CustomTabConfig
c
=
CustomTabConfig
.
parseCustomTabIntent
(
new
SafeIntent
(
customTabsIntent
.
intent
)
)
;
assertNull
(
c
.
actionButtonConfig
)
;
}
}
