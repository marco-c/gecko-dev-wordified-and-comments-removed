package
org
.
mozilla
.
focus
.
webkit
.
matcher
;
import
android
.
content
.
SharedPreferences
;
import
android
.
preference
.
PreferenceManager
;
import
org
.
junit
.
Test
;
import
org
.
junit
.
runner
.
RunWith
;
import
org
.
mozilla
.
focus
.
BuildConfig
;
import
org
.
mozilla
.
focus
.
R
;
import
org
.
robolectric
.
RobolectricTestRunner
;
import
org
.
robolectric
.
RuntimeEnvironment
;
import
org
.
robolectric
.
annotation
.
Config
;
import
static
junit
.
framework
.
Assert
.
assertFalse
;
import
static
junit
.
framework
.
Assert
.
assertTrue
;
RunWith
(
RobolectricTestRunner
.
class
)
Config
(
constants
=
BuildConfig
.
class
packageName
=
"
org
.
mozilla
.
focus
"
)
public
class
DisconnectTest
{
Test
public
void
matches
(
)
throws
Exception
{
final
UrlMatcher
matcher
=
UrlMatcher
.
loadMatcher
(
RuntimeEnvironment
.
application
R
.
raw
.
blocklist
new
int
[
]
{
R
.
raw
.
google_mapping
}
R
.
raw
.
entitylist
)
;
SharedPreferences
prefs
=
PreferenceManager
.
getDefaultSharedPreferences
(
RuntimeEnvironment
.
application
)
;
prefs
.
edit
(
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_ads
)
true
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_analytics
)
true
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_other
)
true
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_social
)
true
)
.
commit
(
)
;
assertTrue
(
matcher
.
matches
(
"
http
:
/
/
admeld
.
com
/
foobar
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
admeld
.
com
/
foobar
"
"
http
:
/
/
google
.
com
"
)
)
;
assertTrue
(
matcher
.
matches
(
"
http
:
/
/
google
-
analytics
.
com
/
foobar
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
google
-
analytics
.
com
/
foobar
"
"
http
:
/
/
google
.
com
"
)
)
;
assertTrue
(
matcher
.
matches
(
"
http
:
/
/
plus
.
google
.
com
/
something
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
plus
.
google
.
com
/
something
"
"
http
:
/
/
google
.
com
"
)
)
;
assertTrue
(
matcher
.
matches
(
"
http
:
/
/
facebook
.
fr
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
facebook
.
fr
"
"
http
:
/
/
facebook
.
com
"
)
)
;
prefs
.
edit
(
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_ads
)
true
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_analytics
)
true
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_other
)
true
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_social
)
false
)
.
commit
(
)
;
assertTrue
(
matcher
.
matches
(
"
http
:
/
/
admeld
.
com
/
foobar
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
admeld
.
com
/
foobar
"
"
http
:
/
/
google
.
com
"
)
)
;
assertTrue
(
matcher
.
matches
(
"
http
:
/
/
google
-
analytics
.
com
/
foobar
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
google
-
analytics
.
com
/
foobar
"
"
http
:
/
/
google
.
com
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
plus
.
google
.
com
/
something
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
plus
.
google
.
com
/
something
"
"
http
:
/
/
google
.
com
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
facebook
.
fr
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
facebook
.
fr
"
"
http
:
/
/
facebook
.
com
"
)
)
;
prefs
.
edit
(
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_ads
)
false
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_analytics
)
false
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_other
)
false
)
.
putBoolean
(
RuntimeEnvironment
.
application
.
getString
(
R
.
string
.
pref_key_privacy_block_social
)
false
)
.
commit
(
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
admeld
.
com
/
foobar
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
admeld
.
com
/
foobar
"
"
http
:
/
/
google
.
com
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
google
-
analytics
.
com
/
foobar
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
google
-
analytics
.
com
/
foobar
"
"
http
:
/
/
google
.
com
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
plus
.
google
.
com
/
something
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
plus
.
google
.
com
/
something
"
"
http
:
/
/
google
.
com
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
facebook
.
fr
"
"
http
:
/
/
mozilla
.
org
"
)
)
;
assertFalse
(
matcher
.
matches
(
"
http
:
/
/
facebook
.
fr
"
"
http
:
/
/
facebook
.
com
"
)
)
;
}
}
