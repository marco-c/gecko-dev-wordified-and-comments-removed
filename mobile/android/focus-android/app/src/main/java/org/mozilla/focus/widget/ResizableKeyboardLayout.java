package
org
.
mozilla
.
focus
.
widget
;
import
android
.
content
.
Context
;
import
android
.
graphics
.
Rect
;
import
android
.
support
.
design
.
widget
.
CoordinatorLayout
;
import
android
.
util
.
AttributeSet
;
import
android
.
view
.
View
;
import
android
.
view
.
ViewTreeObserver
;
public
class
ResizableKeyboardLayout
extends
CoordinatorLayout
{
private
Rect
rect
;
private
View
decorView
;
public
ResizableKeyboardLayout
(
Context
context
)
{
super
(
context
)
;
init
(
)
;
}
public
ResizableKeyboardLayout
(
Context
context
AttributeSet
attrs
)
{
super
(
context
attrs
)
;
init
(
)
;
}
public
ResizableKeyboardLayout
(
Context
context
AttributeSet
attrs
int
defStyleAttr
)
{
super
(
context
attrs
defStyleAttr
)
;
init
(
)
;
}
private
void
init
(
)
{
rect
=
new
Rect
(
)
;
}
private
ViewTreeObserver
.
OnGlobalLayoutListener
layoutListener
=
new
ViewTreeObserver
.
OnGlobalLayoutListener
(
)
{
Override
public
void
onGlobalLayout
(
)
{
int
difference
=
calculateDifferenceBetweenHeightAndUsableArea
(
)
;
if
(
difference
!
=
0
)
{
if
(
getPaddingBottom
(
)
!
=
difference
)
{
setPadding
(
0
0
0
difference
)
;
}
}
else
{
if
(
getPaddingBottom
(
)
!
=
0
)
{
setPadding
(
0
0
0
0
)
;
}
}
}
}
;
private
int
calculateDifferenceBetweenHeightAndUsableArea
(
)
{
if
(
decorView
=
=
null
)
{
decorView
=
getRootView
(
)
;
}
decorView
.
getWindowVisibleDisplayFrame
(
rect
)
;
return
getResources
(
)
.
getDisplayMetrics
(
)
.
heightPixels
-
rect
.
bottom
;
}
Override
public
void
onAttachedToWindow
(
)
{
super
.
onAttachedToWindow
(
)
;
getViewTreeObserver
(
)
.
addOnGlobalLayoutListener
(
layoutListener
)
;
}
Override
public
void
onDetachedFromWindow
(
)
{
super
.
onDetachedFromWindow
(
)
;
getViewTreeObserver
(
)
.
removeOnGlobalLayoutListener
(
layoutListener
)
;
}
}
