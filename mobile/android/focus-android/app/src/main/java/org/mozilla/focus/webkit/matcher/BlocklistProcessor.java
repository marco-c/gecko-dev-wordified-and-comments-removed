package
org
.
mozilla
.
focus
.
webkit
.
matcher
;
import
android
.
util
.
JsonReader
;
import
android
.
util
.
JsonToken
;
import
java
.
io
.
IOException
;
public
class
BlocklistProcessor
{
final
UrlMatcher
matcher
;
public
BlocklistProcessor
(
final
JsonReader
reader
final
UrlMatcher
matcher
)
throws
IOException
{
this
.
matcher
=
matcher
;
reader
.
beginObject
(
)
;
while
(
reader
.
hasNext
(
)
)
{
JsonToken
token
=
reader
.
peek
(
)
;
final
String
name
=
reader
.
nextName
(
)
;
if
(
name
.
equals
(
"
categories
"
)
)
{
extractCategories
(
reader
)
;
}
else
{
reader
.
skipValue
(
)
;
}
}
reader
.
endObject
(
)
;
}
private
void
extractCategories
(
final
JsonReader
reader
)
throws
IOException
{
reader
.
beginObject
(
)
;
while
(
reader
.
hasNext
(
)
)
{
final
String
categoryName
=
reader
.
nextName
(
)
;
extractCategory
(
reader
)
;
}
reader
.
endObject
(
)
;
}
private
void
extractCategory
(
final
JsonReader
reader
)
throws
IOException
{
reader
.
beginArray
(
)
;
while
(
reader
.
hasNext
(
)
)
{
extractSite
(
reader
)
;
}
reader
.
endArray
(
)
;
}
private
void
extractSite
(
final
JsonReader
reader
)
throws
IOException
{
reader
.
beginObject
(
)
;
final
String
siteName
=
reader
.
nextName
(
)
;
{
reader
.
beginObject
(
)
;
while
(
reader
.
hasNext
(
)
)
{
final
String
siteURL
=
reader
.
nextName
(
)
;
JsonToken
nextToken
=
reader
.
peek
(
)
;
if
(
nextToken
.
name
(
)
.
equals
(
"
STRING
"
)
)
{
reader
.
skipValue
(
)
;
}
else
{
reader
.
beginArray
(
)
;
while
(
reader
.
hasNext
(
)
)
{
final
String
blockURL
=
reader
.
nextString
(
)
;
matcher
.
putURL
(
blockURL
)
;
}
reader
.
endArray
(
)
;
}
}
reader
.
endObject
(
)
;
}
reader
.
endObject
(
)
;
}
}
