package
org
.
mozilla
.
focus
.
activity
import
android
.
content
.
Context
import
android
.
content
.
Intent
import
android
.
os
.
Bundle
import
androidx
.
appcompat
.
widget
.
Toolbar
import
android
.
util
.
AttributeSet
import
android
.
view
.
View
import
org
.
mozilla
.
focus
.
R
import
org
.
mozilla
.
focus
.
browser
.
LocalizedContent
import
org
.
mozilla
.
focus
.
fragment
.
InfoFragment
import
org
.
mozilla
.
focus
.
locale
.
LocaleAwareAppCompatActivity
import
org
.
mozilla
.
focus
.
locale
.
Locales
import
org
.
mozilla
.
focus
.
web
.
ClassicWebViewProvider
import
org
.
mozilla
.
focus
.
web
.
IWebView
import
org
.
mozilla
.
focus
.
web
.
WebViewProvider
class
InfoActivity
:
LocaleAwareAppCompatActivity
(
)
{
private
var
url
:
String
?
=
null
override
fun
onCreate
(
savedInstanceState
:
Bundle
?
)
{
super
.
onCreate
(
savedInstanceState
)
setContentView
(
R
.
layout
.
activity_info
)
url
=
intent
.
getStringExtra
(
EXTRA_URL
)
val
title
=
intent
.
getStringExtra
(
EXTRA_TITLE
)
supportFragmentManager
.
beginTransaction
(
)
.
replace
(
R
.
id
.
infofragment
InfoFragment
.
create
(
url
)
)
.
commit
(
)
val
toolbar
=
findViewById
<
Toolbar
>
(
R
.
id
.
toolbar
)
toolbar
.
title
=
title
setSupportActionBar
(
toolbar
)
supportActionBar
?
.
setDisplayHomeAsUpEnabled
(
true
)
supportActionBar
?
.
setDisplayShowHomeEnabled
(
true
)
toolbar
.
setNavigationOnClickListener
{
finish
(
)
}
}
override
fun
onCreateView
(
name
:
String
context
:
Context
attrs
:
AttributeSet
)
:
View
?
{
if
(
name
=
=
IWebView
:
:
class
.
java
.
name
)
{
val
view
=
if
(
url
in
listOf
(
LocalizedContent
.
URL_RIGHTS
LocalizedContent
.
URL_ABOUT
)
)
{
ClassicWebViewProvider
(
)
.
create
(
context
attrs
)
}
else
{
WebViewProvider
.
create
(
context
attrs
)
}
val
webView
=
view
as
IWebView
webView
.
setBlockingEnabled
(
false
)
return
view
}
return
super
.
onCreateView
(
name
context
attrs
)
}
override
fun
applyLocale
(
)
{
}
companion
object
{
private
val
EXTRA_URL
=
"
extra_url
"
private
val
EXTRA_TITLE
=
"
extra_title
"
fun
getIntentFor
(
context
:
Context
url
:
String
title
:
String
)
:
Intent
{
val
intent
=
Intent
(
context
InfoActivity
:
:
class
.
java
)
intent
.
putExtra
(
EXTRA_URL
url
)
intent
.
putExtra
(
EXTRA_TITLE
title
)
return
intent
}
fun
getAboutIntent
(
context
:
Context
)
:
Intent
{
val
resources
=
Locales
.
getLocalizedResources
(
context
)
return
getIntentFor
(
context
LocalizedContent
.
URL_ABOUT
resources
.
getString
(
R
.
string
.
menu_about
)
)
}
fun
getRightsIntent
(
context
:
Context
)
:
Intent
{
val
resources
=
Locales
.
getLocalizedResources
(
context
)
return
getIntentFor
(
context
LocalizedContent
.
URL_RIGHTS
resources
.
getString
(
R
.
string
.
menu_rights
)
)
}
}
}
