package
org
.
mozilla
.
focus
.
session
;
import
android
.
app
.
Activity
;
import
android
.
app
.
ActivityManager
;
import
android
.
app
.
Application
;
import
android
.
content
.
Context
;
import
android
.
os
.
Bundle
;
import
org
.
mozilla
.
focus
.
FocusApplication
;
public
class
VisibilityLifeCycleCallback
implements
Application
.
ActivityLifecycleCallbacks
{
static
void
finishAndRemoveTaskIfInBackground
(
Context
context
)
{
(
(
FocusApplication
)
context
.
getApplicationContext
(
)
)
.
getVisibilityLifeCycleCallback
(
)
.
finishAndRemoveTaskIfInBackground
(
)
;
}
static
boolean
isInBackground
(
Context
context
)
{
return
(
(
FocusApplication
)
context
.
getApplicationContext
(
)
)
.
getVisibilityLifeCycleCallback
(
)
.
activitiesInStartedState
=
=
0
;
}
private
final
Context
context
;
private
int
activitiesInStartedState
;
public
VisibilityLifeCycleCallback
(
Context
context
)
{
this
.
context
=
context
;
}
private
void
finishAndRemoveTaskIfInBackground
(
)
{
if
(
activitiesInStartedState
=
=
0
)
{
final
ActivityManager
activityManager
=
(
ActivityManager
)
context
.
getSystemService
(
Context
.
ACTIVITY_SERVICE
)
;
if
(
activityManager
=
=
null
)
{
return
;
}
for
(
ActivityManager
.
AppTask
task
:
activityManager
.
getAppTasks
(
)
)
{
task
.
finishAndRemoveTask
(
)
;
}
}
}
Override
public
void
onActivityStarted
(
Activity
activity
)
{
activitiesInStartedState
+
+
;
}
Override
public
void
onActivityStopped
(
Activity
activity
)
{
activitiesInStartedState
-
-
;
}
Override
public
void
onActivityResumed
(
Activity
activity
)
{
}
Override
public
void
onActivityPaused
(
Activity
activity
)
{
}
Override
public
void
onActivityCreated
(
Activity
activity
Bundle
bundle
)
{
}
Override
public
void
onActivitySaveInstanceState
(
Activity
activity
Bundle
bundle
)
{
}
Override
public
void
onActivityDestroyed
(
Activity
activity
)
{
}
}
