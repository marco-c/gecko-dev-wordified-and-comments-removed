package
org
.
mozilla
.
focus
.
telemetry
;
import
android
.
support
.
annotation
.
NonNull
;
import
org
.
mozilla
.
focus
.
architecture
.
NonNullObserver
;
import
org
.
mozilla
.
focus
.
session
.
Session
;
import
org
.
mozilla
.
focus
.
session
.
Source
;
import
java
.
util
.
List
;
public
class
TelemetrySessionObserver
extends
NonNullObserver
<
List
<
Session
>
>
{
Override
protected
void
onValueChanged
(
NonNull
List
<
Session
>
sessions
)
{
for
(
final
Session
session
:
sessions
)
{
if
(
!
session
.
isRecorded
(
)
)
{
addTelemetryEvent
(
session
)
;
session
.
markAsRecorded
(
)
;
}
}
}
private
void
addTelemetryEvent
(
final
Session
session
)
{
final
Source
source
=
session
.
getSource
(
)
;
switch
(
source
)
{
case
VIEW
:
TelemetryWrapper
.
browseIntentEvent
(
)
;
break
;
case
SHARE
:
TelemetryWrapper
.
shareIntentEvent
(
session
.
isSearch
(
)
)
;
break
;
case
TEXT_SELECTION
:
TelemetryWrapper
.
textSelectionIntentEvent
(
)
;
break
;
case
HOME_SCREEN
:
TelemetryWrapper
.
openHomescreenShortcutEvent
(
)
;
break
;
case
CUSTOM_TAB
:
TelemetryWrapper
.
customTabsIntentEvent
(
session
.
getCustomTabConfig
(
)
.
getOptionsList
(
)
)
;
break
;
case
USER_ENTERED
:
case
MENU
:
break
;
case
NONE
:
break
;
default
:
throw
new
IllegalStateException
(
"
Unknown
session
source
:
"
+
source
)
;
}
}
}
