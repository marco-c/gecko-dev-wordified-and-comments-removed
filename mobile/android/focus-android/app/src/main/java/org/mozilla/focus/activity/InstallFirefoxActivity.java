package
org
.
mozilla
.
focus
.
activity
;
import
android
.
app
.
Activity
;
import
android
.
content
.
Context
;
import
android
.
content
.
Intent
;
import
android
.
content
.
pm
.
ActivityInfo
;
import
android
.
content
.
pm
.
ResolveInfo
;
import
android
.
net
.
Uri
;
import
android
.
os
.
Bundle
;
import
android
.
support
.
annotation
.
Nullable
;
import
android
.
webkit
.
WebView
;
import
org
.
mozilla
.
focus
.
telemetry
.
TelemetryWrapper
;
import
org
.
mozilla
.
focus
.
utils
.
AppConstants
;
import
org
.
mozilla
.
focus
.
utils
.
Browsers
;
public
class
InstallFirefoxActivity
extends
Activity
{
private
static
final
String
REDIRECT_URL
=
"
https
:
/
/
app
.
adjust
.
com
/
gs1ao4
"
;
private
WebView
webView
;
public
static
ActivityInfo
resolveAppStore
(
Context
context
)
{
final
ResolveInfo
resolveInfo
=
context
.
getPackageManager
(
)
.
resolveActivity
(
createStoreIntent
(
)
0
)
;
if
(
resolveInfo
=
=
null
|
|
resolveInfo
.
activityInfo
=
=
null
)
{
return
null
;
}
if
(
!
resolveInfo
.
activityInfo
.
exported
)
{
return
null
;
}
return
resolveInfo
.
activityInfo
;
}
private
static
Intent
createStoreIntent
(
)
{
return
new
Intent
(
Intent
.
ACTION_VIEW
Uri
.
parse
(
"
market
:
/
/
details
?
id
=
"
+
Browsers
.
KnownBrowser
.
FIREFOX
.
packageName
)
)
;
}
public
static
void
open
(
Context
context
)
{
if
(
AppConstants
.
INSTANCE
.
isKlarBuild
(
)
)
{
context
.
startActivity
(
createStoreIntent
(
)
)
;
}
else
{
final
Intent
intent
=
new
Intent
(
context
InstallFirefoxActivity
.
class
)
;
context
.
startActivity
(
intent
)
;
}
TelemetryWrapper
.
installFirefoxEvent
(
)
;
}
Override
protected
void
onCreate
(
Nullable
Bundle
savedInstanceState
)
{
super
.
onCreate
(
savedInstanceState
)
;
webView
=
new
WebView
(
this
)
;
setContentView
(
webView
)
;
webView
.
loadUrl
(
REDIRECT_URL
)
;
}
Override
protected
void
onPause
(
)
{
super
.
onPause
(
)
;
if
(
webView
!
=
null
)
{
webView
.
onPause
(
)
;
}
finish
(
)
;
}
Override
protected
void
onDestroy
(
)
{
super
.
onDestroy
(
)
;
if
(
webView
!
=
null
)
{
webView
.
destroy
(
)
;
}
}
}
