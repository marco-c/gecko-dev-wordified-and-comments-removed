package
org
.
mozilla
.
focus
.
activity
;
import
android
.
content
.
Context
;
import
android
.
content
.
Intent
;
import
android
.
os
.
Bundle
;
import
android
.
support
.
v4
.
app
.
FragmentManager
;
import
android
.
support
.
v7
.
app
.
AppCompatActivity
;
import
android
.
util
.
AttributeSet
;
import
android
.
view
.
View
;
import
android
.
view
.
WindowManager
;
import
org
.
mozilla
.
focus
.
R
;
import
org
.
mozilla
.
focus
.
fragment
.
BrowserFragment
;
import
org
.
mozilla
.
focus
.
fragment
.
FirstrunFragment
;
import
org
.
mozilla
.
focus
.
fragment
.
HomeFragment
;
import
org
.
mozilla
.
focus
.
fragment
.
UrlInputFragment
;
import
org
.
mozilla
.
focus
.
notification
.
BrowsingNotificationService
;
import
org
.
mozilla
.
focus
.
telemetry
.
TelemetryWrapper
;
import
org
.
mozilla
.
focus
.
utils
.
Settings
;
import
org
.
mozilla
.
focus
.
web
.
IWebView
;
import
org
.
mozilla
.
focus
.
web
.
WebViewProvider
;
public
class
MainActivity
extends
AppCompatActivity
{
public
static
final
String
ACTION_ERASE
=
"
erase
"
;
public
static
final
String
EXTRA_FINISH
=
"
finish
"
;
private
String
pendingUrl
;
Override
protected
void
onCreate
(
Bundle
savedInstanceState
)
{
super
.
onCreate
(
savedInstanceState
)
;
final
Settings
appSettings
=
new
Settings
(
this
)
;
if
(
appSettings
.
shouldUseSecureMode
(
)
)
{
getWindow
(
)
.
setFlags
(
WindowManager
.
LayoutParams
.
FLAG_SECURE
WindowManager
.
LayoutParams
.
FLAG_SECURE
)
;
}
getWindow
(
)
.
getDecorView
(
)
.
setSystemUiVisibility
(
View
.
SYSTEM_UI_FLAG_LAYOUT_STABLE
|
View
.
SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
)
;
setContentView
(
R
.
layout
.
activity_main
)
;
if
(
savedInstanceState
=
=
null
)
{
WebViewProvider
.
performCleanup
(
this
)
;
if
(
Intent
.
ACTION_VIEW
.
equals
(
getIntent
(
)
.
getAction
(
)
)
)
{
final
String
url
=
getIntent
(
)
.
getDataString
(
)
;
if
(
appSettings
.
shouldShowFirstrun
(
)
)
{
pendingUrl
=
url
;
showFirstrun
(
)
;
}
else
{
showBrowserScreen
(
url
)
;
}
}
else
{
if
(
appSettings
.
shouldShowFirstrun
(
)
)
{
showFirstrun
(
)
;
}
else
{
showHomeScreen
(
)
;
}
}
}
WebViewProvider
.
preload
(
this
)
;
}
Override
protected
void
onResume
(
)
{
super
.
onResume
(
)
;
BrowsingNotificationService
.
foreground
(
this
)
;
TelemetryWrapper
.
startSession
(
)
;
}
Override
protected
void
onPause
(
)
{
if
(
isFinishing
(
)
)
{
WebViewProvider
.
performCleanup
(
this
)
;
}
super
.
onPause
(
)
;
BrowsingNotificationService
.
background
(
this
)
;
TelemetryWrapper
.
stopSession
(
)
;
}
Override
protected
void
onStop
(
)
{
super
.
onStop
(
)
;
TelemetryWrapper
.
stopMainActivity
(
)
;
}
Override
protected
void
onNewIntent
(
Intent
intent
)
{
if
(
Intent
.
ACTION_VIEW
.
equals
(
intent
.
getAction
(
)
)
)
{
pendingUrl
=
intent
.
getDataString
(
)
;
}
setIntent
(
intent
)
;
}
Override
protected
void
onResumeFragments
(
)
{
super
.
onResumeFragments
(
)
;
final
Intent
intent
=
getIntent
(
)
;
if
(
ACTION_ERASE
.
equals
(
intent
.
getAction
(
)
)
)
{
eraseFromNotification
(
intent
.
getBooleanExtra
(
EXTRA_FINISH
false
)
)
;
setIntent
(
new
Intent
(
Intent
.
ACTION_MAIN
)
)
;
}
if
(
pendingUrl
!
=
null
&
&
!
new
Settings
(
this
)
.
shouldShowFirstrun
(
)
)
{
showBrowserScreen
(
pendingUrl
)
;
pendingUrl
=
null
;
}
}
private
void
eraseFromNotification
(
boolean
finishActivity
)
{
final
BrowserFragment
browserFragment
=
(
BrowserFragment
)
getSupportFragmentManager
(
)
.
findFragmentByTag
(
BrowserFragment
.
FRAGMENT_TAG
)
;
if
(
browserFragment
!
=
null
)
{
browserFragment
.
eraseAndShowHomeScreen
(
)
;
}
else
{
WebViewProvider
.
performCleanup
(
this
)
;
BrowsingNotificationService
.
stop
(
this
)
;
}
if
(
finishActivity
)
{
finish
(
)
;
overridePendingTransition
(
0
0
)
;
}
}
private
void
showHomeScreen
(
)
{
final
FragmentManager
fragmentManager
=
getSupportFragmentManager
(
)
;
if
(
fragmentManager
.
findFragmentByTag
(
HomeFragment
.
FRAGMENT_TAG
)
=
=
null
)
{
fragmentManager
.
beginTransaction
(
)
.
replace
(
R
.
id
.
container
HomeFragment
.
create
(
)
HomeFragment
.
FRAGMENT_TAG
)
.
commit
(
)
;
}
}
private
void
showFirstrun
(
)
{
final
FragmentManager
fragmentManager
=
getSupportFragmentManager
(
)
;
if
(
fragmentManager
.
findFragmentByTag
(
FirstrunFragment
.
FRAGMENT_TAG
)
=
=
null
)
{
fragmentManager
.
beginTransaction
(
)
.
replace
(
R
.
id
.
container
FirstrunFragment
.
create
(
)
FirstrunFragment
.
FRAGMENT_TAG
)
.
commit
(
)
;
}
}
private
void
showBrowserScreen
(
String
url
)
{
getSupportFragmentManager
(
)
.
beginTransaction
(
)
.
replace
(
R
.
id
.
container
BrowserFragment
.
create
(
url
)
BrowserFragment
.
FRAGMENT_TAG
)
.
commit
(
)
;
TelemetryWrapper
.
browseIntentEvent
(
)
;
}
Override
public
View
onCreateView
(
String
name
Context
context
AttributeSet
attrs
)
{
if
(
name
.
equals
(
IWebView
.
class
.
getName
(
)
)
)
{
View
v
=
WebViewProvider
.
create
(
this
attrs
)
;
return
v
;
}
return
super
.
onCreateView
(
name
context
attrs
)
;
}
Override
public
void
onBackPressed
(
)
{
final
FragmentManager
fragmentManager
=
getSupportFragmentManager
(
)
;
final
UrlInputFragment
urlInputFragment
=
(
UrlInputFragment
)
fragmentManager
.
findFragmentByTag
(
UrlInputFragment
.
FRAGMENT_TAG
)
;
if
(
urlInputFragment
!
=
null
&
&
urlInputFragment
.
isVisible
(
)
)
{
if
(
urlInputFragment
.
onBackPressed
(
)
)
{
return
;
}
}
final
BrowserFragment
browserFragment
=
(
BrowserFragment
)
fragmentManager
.
findFragmentByTag
(
BrowserFragment
.
FRAGMENT_TAG
)
;
if
(
browserFragment
!
=
null
&
&
browserFragment
.
isVisible
(
)
)
{
if
(
browserFragment
.
onBackPressed
(
)
)
{
return
;
}
}
super
.
onBackPressed
(
)
;
}
public
void
firstrunFinished
(
)
{
if
(
pendingUrl
!
=
null
)
{
showBrowserScreen
(
pendingUrl
)
;
pendingUrl
=
null
;
}
else
{
showHomeScreen
(
)
;
}
}
}
