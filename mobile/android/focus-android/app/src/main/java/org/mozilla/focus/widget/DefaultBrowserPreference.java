package
org
.
mozilla
.
focus
.
widget
;
import
android
.
content
.
Context
;
import
android
.
content
.
Intent
;
import
android
.
net
.
Uri
;
import
android
.
os
.
Build
;
import
android
.
support
.
v7
.
preference
.
Preference
;
import
android
.
support
.
v7
.
preference
.
PreferenceViewHolder
;
import
android
.
util
.
AttributeSet
;
import
android
.
widget
.
Switch
;
import
org
.
mozilla
.
focus
.
R
;
import
org
.
mozilla
.
focus
.
utils
.
Browsers
;
import
org
.
mozilla
.
focus
.
utils
.
SupportUtils
;
public
class
DefaultBrowserPreference
extends
Preference
{
private
Switch
switchView
;
SuppressWarnings
(
"
unused
"
)
public
DefaultBrowserPreference
(
Context
context
AttributeSet
attrs
int
defStyleAttr
)
{
super
(
context
attrs
defStyleAttr
)
;
init
(
)
;
}
SuppressWarnings
(
"
unused
"
)
public
DefaultBrowserPreference
(
Context
context
AttributeSet
attrs
)
{
super
(
context
attrs
)
;
init
(
)
;
}
private
void
init
(
)
{
setWidgetLayoutResource
(
R
.
layout
.
preference_default_browser
)
;
final
String
appName
=
getContext
(
)
.
getResources
(
)
.
getString
(
R
.
string
.
app_name
)
;
final
String
title
=
getContext
(
)
.
getResources
(
)
.
getString
(
R
.
string
.
preference_default_browser2
appName
)
;
setTitle
(
title
)
;
}
Override
public
void
onBindViewHolder
(
PreferenceViewHolder
holder
)
{
super
.
onBindViewHolder
(
holder
)
;
switchView
=
(
Switch
)
holder
.
findViewById
(
R
.
id
.
switch_widget
)
;
update
(
)
;
}
public
void
update
(
)
{
if
(
switchView
!
=
null
)
{
final
Browsers
browsers
=
new
Browsers
(
getContext
(
)
Browsers
.
TRADITIONAL_BROWSER_URL
)
;
switchView
.
setChecked
(
browsers
.
isDefaultBrowser
(
getContext
(
)
)
)
;
}
}
Override
public
void
onClick
(
)
{
final
Context
context
=
getContext
(
)
;
final
Browsers
browsers
=
new
Browsers
(
getContext
(
)
Browsers
.
TRADITIONAL_BROWSER_URL
)
;
if
(
!
browsers
.
hasDefaultBrowser
(
context
)
)
{
Intent
i
=
new
Intent
(
Intent
.
ACTION_VIEW
Uri
.
parse
(
SupportUtils
.
OPEN_WITH_DEFAULT_BROWSER_URL
)
)
;
getContext
(
)
.
startActivity
(
i
)
;
}
else
if
(
Build
.
VERSION
.
SDK_INT
>
=
Build
.
VERSION_CODES
.
N
)
{
SupportUtils
.
INSTANCE
.
openDefaultAppsSettings
(
context
)
;
}
else
{
SupportUtils
.
INSTANCE
.
openDefaultBrowserSumoPage
(
context
)
;
}
}
}
