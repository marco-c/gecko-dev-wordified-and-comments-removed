package
org
.
mozilla
.
focus
.
widget
;
import
android
.
content
.
Context
;
import
androidx
.
coordinatorlayout
.
widget
.
CoordinatorLayout
;
import
com
.
google
.
android
.
material
.
floatingactionbutton
.
FloatingActionButton
;
import
android
.
util
.
AttributeSet
;
import
android
.
view
.
View
;
import
android
.
view
.
animation
.
AnimationUtils
;
import
org
.
mozilla
.
focus
.
R
;
public
class
FloatingEraseButton
extends
FloatingActionButton
{
private
boolean
keepHidden
;
public
FloatingEraseButton
(
Context
context
)
{
super
(
context
)
;
}
public
FloatingEraseButton
(
Context
context
AttributeSet
attrs
)
{
super
(
context
attrs
)
;
}
public
FloatingEraseButton
(
Context
context
AttributeSet
attrs
int
defStyleAttr
)
{
super
(
context
attrs
defStyleAttr
)
;
}
public
void
updateSessionsCount
(
int
tabCount
)
{
final
CoordinatorLayout
.
LayoutParams
params
=
(
CoordinatorLayout
.
LayoutParams
)
getLayoutParams
(
)
;
final
FloatingActionButtonBehavior
behavior
=
(
FloatingActionButtonBehavior
)
params
.
getBehavior
(
)
;
keepHidden
=
tabCount
!
=
1
;
if
(
behavior
!
=
null
)
{
behavior
.
setAutoHideEnabled
(
!
keepHidden
)
;
}
if
(
keepHidden
)
{
setVisibility
(
View
.
GONE
)
;
}
}
Override
protected
void
onFinishInflate
(
)
{
if
(
!
keepHidden
)
{
this
.
setVisibility
(
View
.
VISIBLE
)
;
this
.
startAnimation
(
AnimationUtils
.
loadAnimation
(
getContext
(
)
R
.
anim
.
fab_reveal
)
)
;
}
super
.
onFinishInflate
(
)
;
}
Override
public
void
setVisibility
(
int
visibility
)
{
if
(
keepHidden
&
&
visibility
=
=
View
.
VISIBLE
)
{
return
;
}
if
(
visibility
=
=
View
.
VISIBLE
)
{
show
(
)
;
}
else
{
hide
(
)
;
}
}
}
