package
org
.
mozilla
.
focus
.
menu
.
browser
;
import
android
.
view
.
View
;
import
android
.
widget
.
CompoundButton
;
import
android
.
widget
.
Switch
;
import
android
.
widget
.
TextView
;
import
org
.
mozilla
.
focus
.
R
;
import
org
.
mozilla
.
focus
.
fragment
.
BrowserFragment
;
import
org
.
mozilla
.
focus
.
telemetry
.
TelemetryWrapper
;
import
org
.
mozilla
.
focus
.
utils
.
ThreadUtils
;
class
BlockingItemViewHolder
extends
BrowserMenuViewHolder
implements
CompoundButton
.
OnCheckedChangeListener
{
static
final
int
LAYOUT_ID
=
R
.
layout
.
menu_blocking_switch
;
private
TextView
trackerCounter
;
private
BrowserFragment
fragment
;
BlockingItemViewHolder
(
View
itemView
final
BrowserFragment
fragment
)
{
super
(
itemView
)
;
this
.
fragment
=
fragment
;
final
Switch
switchView
=
itemView
.
findViewById
(
R
.
id
.
blocking_switch
)
;
switchView
.
setChecked
(
fragment
.
getSession
(
)
.
isBlockingEnabled
(
)
)
;
switchView
.
setOnCheckedChangeListener
(
this
)
;
final
View
helpView
=
itemView
.
findViewById
(
R
.
id
.
help_trackers
)
;
helpView
.
setOnClickListener
(
new
View
.
OnClickListener
(
)
{
Override
public
void
onClick
(
View
view
)
{
if
(
browserFragment
!
=
null
)
{
browserFragment
.
onClick
(
view
)
;
}
}
}
)
;
trackerCounter
=
itemView
.
findViewById
(
R
.
id
.
trackers_count
)
;
updateTrackers
(
fragment
.
getSession
(
)
.
getBlockedTrackers
(
)
.
getValue
(
)
)
;
}
void
updateTrackers
(
int
trackers
)
{
if
(
fragment
.
getSession
(
)
.
isBlockingEnabled
(
)
)
{
updateTrackingCount
(
trackerCounter
trackers
)
;
}
else
{
disableTrackingCount
(
trackerCounter
)
;
}
}
private
void
updateTrackingCount
(
final
TextView
view
final
int
count
)
{
ThreadUtils
.
postToMainThread
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
view
.
setText
(
String
.
valueOf
(
count
)
)
;
}
}
)
;
}
private
void
disableTrackingCount
(
final
TextView
view
)
{
ThreadUtils
.
postToMainThread
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
view
.
setText
(
R
.
string
.
content_blocking_disabled
)
;
}
}
)
;
}
Override
public
void
onCheckedChanged
(
CompoundButton
buttonView
boolean
isChecked
)
{
fragment
.
setBlockingEnabled
(
isChecked
)
;
TelemetryWrapper
.
blockingSwitchEvent
(
isChecked
)
;
ThreadUtils
.
postToMainThreadDelayed
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
getMenu
(
)
.
dismiss
(
)
;
fragment
.
reload
(
)
;
}
}
250
)
;
}
}
