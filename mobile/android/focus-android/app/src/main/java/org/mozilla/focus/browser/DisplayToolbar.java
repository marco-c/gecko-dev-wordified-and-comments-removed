package
org
.
mozilla
.
focus
.
browser
;
import
android
.
content
.
Context
;
import
android
.
support
.
design
.
widget
.
AppBarLayout
;
import
android
.
util
.
AttributeSet
;
import
android
.
util
.
TypedValue
;
import
android
.
view
.
View
;
import
org
.
mozilla
.
focus
.
R
;
import
org
.
mozilla
.
focus
.
widget
.
AnimatedProgressBar
;
public
class
DisplayToolbar
extends
AppBarLayout
implements
AppBarLayout
.
OnOffsetChangedListener
{
private
View
toolbarContent
;
private
AnimatedProgressBar
progressView
;
private
float
collapsedProgressTranslationY
;
public
DisplayToolbar
(
Context
context
)
{
super
(
context
)
;
}
public
DisplayToolbar
(
Context
context
AttributeSet
attrs
)
{
super
(
context
attrs
)
;
}
Override
protected
void
onFinishInflate
(
)
{
super
.
onFinishInflate
(
)
;
collapsedProgressTranslationY
=
TypedValue
.
applyDimension
(
TypedValue
.
COMPLEX_UNIT_DIP
2
getResources
(
)
.
getDisplayMetrics
(
)
)
;
;
toolbarContent
=
findViewById
(
R
.
id
.
toolbar_content
)
;
progressView
=
findViewById
(
R
.
id
.
progress
)
;
addOnOffsetChangedListener
(
this
)
;
}
Override
public
void
onOffsetChanged
(
AppBarLayout
appBarLayout
int
verticalOffset
)
{
final
int
totalScrollRange
=
appBarLayout
.
getTotalScrollRange
(
)
;
final
boolean
isCollapsed
=
Math
.
abs
(
verticalOffset
)
=
=
totalScrollRange
;
progressView
.
setTranslationY
(
isCollapsed
?
collapsedProgressTranslationY
:
0
)
;
if
(
verticalOffset
=
=
0
|
|
isCollapsed
)
{
toolbarContent
.
setAlpha
(
1f
)
;
return
;
}
float
alpha
=
-
1
*
(
(
(
100f
/
(
totalScrollRange
*
0
.
5f
)
)
*
verticalOffset
)
/
100
)
;
alpha
=
Math
.
max
(
0
alpha
)
;
alpha
=
Math
.
min
(
1
alpha
)
;
alpha
=
1
-
alpha
;
toolbarContent
.
setAlpha
(
alpha
)
;
}
}
