package
org
.
mozilla
.
focus
.
utils
import
android
.
content
.
Context
import
edu
.
umd
.
cs
.
findbugs
.
annotations
.
SuppressFBWarnings
import
java
.
io
.
File
private
const
val
WEBVIEW_DIRECTORY
=
"
app_webview
"
private
const
val
LOCAL_STORAGE_DIR
=
"
Local
Storage
"
class
FileUtils
{
companion
object
{
JvmStatic
fun
truncateCacheDirectory
(
context
:
Context
)
:
Boolean
{
val
cacheDirectory
=
context
.
cacheDir
return
cacheDirectory
.
exists
(
)
&
&
deleteContent
(
cacheDirectory
)
}
JvmStatic
fun
deleteWebViewDirectory
(
context
:
Context
)
:
Boolean
{
val
webviewDirectory
=
File
(
context
.
applicationInfo
.
dataDir
WEBVIEW_DIRECTORY
)
return
deleteContent
(
webviewDirectory
doNotEraseWhitelist
=
setOf
(
LOCAL_STORAGE_DIR
)
)
}
SuppressFBWarnings
(
"
BC_BAD_CAST_TO_ABSTRACT_COLLECTION
"
"
filter
casts
to
Collection
and
storing
in
val
casts
back
to
List
:
https
:
/
/
youtrack
.
jetbrains
.
com
/
issue
/
KT
-
18311
"
)
private
fun
deleteContent
(
directory
:
File
doNotEraseWhitelist
:
Set
<
String
>
=
emptySet
(
)
)
:
Boolean
{
val
filesToDelete
=
directory
.
listFiles
(
)
?
.
filter
{
!
doNotEraseWhitelist
.
contains
(
it
.
name
)
}
?
:
return
false
return
filesToDelete
.
all
{
it
.
deleteRecursively
(
)
}
}
}
}
