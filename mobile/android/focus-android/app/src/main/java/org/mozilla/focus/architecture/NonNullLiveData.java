package
org
.
mozilla
.
focus
.
architecture
;
import
android
.
arch
.
lifecycle
.
LiveData
;
import
android
.
support
.
annotation
.
NonNull
;
public
class
NonNullLiveData
<
T
>
extends
LiveData
<
T
>
{
public
NonNullLiveData
(
final
T
initialValue
)
{
setValue
(
initialValue
)
;
}
NonNull
public
T
getValue
(
)
{
final
T
value
=
super
.
getValue
(
)
;
if
(
value
=
=
null
)
{
throw
new
IllegalStateException
(
"
Value
is
null
"
)
;
}
return
value
;
}
Override
protected
void
postValue
(
T
value
)
{
if
(
value
=
=
null
)
{
throw
new
IllegalArgumentException
(
"
Value
cannot
be
null
"
)
;
}
super
.
postValue
(
value
)
;
}
Override
protected
void
setValue
(
T
value
)
{
if
(
value
=
=
null
)
{
throw
new
IllegalArgumentException
(
"
Value
cannot
be
null
"
)
;
}
super
.
setValue
(
value
)
;
}
}
