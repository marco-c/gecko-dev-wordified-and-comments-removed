package
org
.
mozilla
.
focus
.
widget
;
import
android
.
content
.
Context
;
import
android
.
content
.
Intent
;
import
android
.
content
.
res
.
TypedArray
;
import
android
.
graphics
.
Color
;
import
android
.
graphics
.
Paint
;
import
android
.
graphics
.
drawable
.
Drawable
;
import
android
.
preference
.
Preference
;
import
android
.
util
.
AttributeSet
;
import
android
.
view
.
View
;
import
android
.
widget
.
CompoundButton
;
import
android
.
widget
.
Switch
;
import
android
.
widget
.
TextView
;
import
org
.
mozilla
.
focus
.
R
;
import
org
.
mozilla
.
focus
.
activity
.
InfoActivity
;
import
org
.
mozilla
.
focus
.
utils
.
SupportUtils
;
class
LinkedSwitchPreference
extends
Preference
{
public
LinkedSwitchPreference
(
Context
context
AttributeSet
attrs
)
{
super
(
context
attrs
)
;
setWidgetLayoutResource
(
R
.
layout
.
preference_linkedswitch
)
;
}
public
LinkedSwitchPreference
(
Context
context
AttributeSet
attrs
int
defStyle
)
{
super
(
context
attrs
defStyle
)
;
setWidgetLayoutResource
(
R
.
layout
.
preference_linkedswitch
)
;
}
Override
protected
void
onBindView
(
final
View
view
)
{
super
.
onBindView
(
view
)
;
final
Switch
switchWidget
=
(
Switch
)
view
.
findViewById
(
R
.
id
.
switch_widget
)
;
switchWidget
.
setChecked
(
getPersistedBoolean
(
false
)
)
;
switchWidget
.
setOnCheckedChangeListener
(
new
CompoundButton
.
OnCheckedChangeListener
(
)
{
Override
public
void
onCheckedChanged
(
CompoundButton
buttonView
boolean
isChecked
)
{
persistBoolean
(
isChecked
)
;
}
}
)
;
final
TextView
summary
=
(
TextView
)
view
.
findViewById
(
android
.
R
.
id
.
summary
)
;
summary
.
setPaintFlags
(
summary
.
getPaintFlags
(
)
|
Paint
.
UNDERLINE_TEXT_FLAG
)
;
summary
.
setTextColor
(
Color
.
WHITE
)
;
summary
.
setOnClickListener
(
new
View
.
OnClickListener
(
)
{
Override
public
void
onClick
(
View
v
)
{
final
String
url
=
SupportUtils
.
getSumoURLForTopic
(
getContext
(
)
"
usage
-
data
"
)
;
final
String
title
=
getTitle
(
)
.
toString
(
)
;
final
Intent
intent
=
InfoActivity
.
getIntentFor
(
getContext
(
)
url
title
)
;
getContext
(
)
.
startActivity
(
intent
)
;
}
}
)
;
final
TypedArray
backgroundDrawableArray
=
view
.
getContext
(
)
.
obtainStyledAttributes
(
new
int
[
]
{
R
.
attr
.
selectableItemBackground
}
)
;
final
Drawable
backgroundDrawable
=
backgroundDrawableArray
.
getDrawable
(
0
)
;
backgroundDrawableArray
.
recycle
(
)
;
summary
.
setBackground
(
backgroundDrawable
)
;
setOnPreferenceClickListener
(
new
OnPreferenceClickListener
(
)
{
Override
public
boolean
onPreferenceClick
(
Preference
preference
)
{
switchWidget
.
toggle
(
)
;
return
true
;
}
}
)
;
}
}
