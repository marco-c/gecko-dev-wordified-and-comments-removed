package
org
.
mozilla
.
focus
.
activity
;
import
android
.
content
.
Context
;
import
android
.
preference
.
PreferenceManager
;
import
android
.
support
.
test
.
InstrumentationRegistry
;
import
android
.
support
.
test
.
rule
.
ActivityTestRule
;
import
android
.
support
.
test
.
runner
.
AndroidJUnit4
;
import
android
.
support
.
test
.
uiautomator
.
UiObject
;
import
android
.
support
.
test
.
uiautomator
.
UiObjectNotFoundException
;
import
android
.
support
.
test
.
uiautomator
.
UiSelector
;
import
org
.
junit
.
Rule
;
import
org
.
junit
.
Test
;
import
org
.
junit
.
runner
.
RunWith
;
import
static
android
.
support
.
test
.
espresso
.
action
.
ViewActions
.
click
;
import
static
junit
.
framework
.
Assert
.
assertTrue
;
import
static
org
.
mozilla
.
focus
.
fragment
.
FirstrunFragment
.
FIRSTRUN_PREF
;
RunWith
(
AndroidJUnit4
.
class
)
public
class
ShareDialogTest
{
Rule
public
ActivityTestRule
<
MainActivity
>
mActivityTestRule
=
new
ActivityTestRule
<
MainActivity
>
(
MainActivity
.
class
)
{
Override
protected
void
beforeActivityLaunched
(
)
{
super
.
beforeActivityLaunched
(
)
;
Context
appContext
=
InstrumentationRegistry
.
getInstrumentation
(
)
.
getTargetContext
(
)
.
getApplicationContext
(
)
;
PreferenceManager
.
getDefaultSharedPreferences
(
appContext
)
.
edit
(
)
.
putBoolean
(
FIRSTRUN_PREF
false
)
.
apply
(
)
;
}
}
;
Test
public
void
shareTest
(
)
throws
InterruptedException
UiObjectNotFoundException
{
final
long
waitingTime
=
TestHelper
.
waitingTime
;
UiObject
shareBtn
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
resourceId
(
"
org
.
mozilla
.
focus
.
debug
:
id
/
share
"
)
.
enabled
(
true
)
)
;
UiObject
shareMenuHeader
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
resourceId
(
"
android
:
id
/
title
"
)
.
text
(
"
Share
with
"
)
.
enabled
(
true
)
)
;
UiObject
shareAppList
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
resourceId
(
"
android
:
id
/
resolver_list
"
)
.
enabled
(
true
)
)
;
TestHelper
.
firstViewBtn
.
waitForExists
(
waitingTime
)
;
TestHelper
.
firstViewBtn
.
click
(
)
;
TestHelper
.
urlBar
.
waitForExists
(
waitingTime
)
;
TestHelper
.
urlBar
.
click
(
)
;
TestHelper
.
inlineAutocompleteEditText
.
waitForExists
(
waitingTime
)
;
TestHelper
.
inlineAutocompleteEditText
.
clearTextField
(
)
;
TestHelper
.
inlineAutocompleteEditText
.
setText
(
"
mozilla
"
)
;
TestHelper
.
hint
.
waitForExists
(
waitingTime
)
;
TestHelper
.
pressEnterKey
(
)
;
TestHelper
.
webView
.
waitForExists
(
waitingTime
)
;
TestHelper
.
menuButton
.
perform
(
click
(
)
)
;
shareBtn
.
waitForExists
(
waitingTime
)
;
shareBtn
.
click
(
)
;
shareMenuHeader
.
waitForExists
(
waitingTime
)
;
assertTrue
(
shareMenuHeader
.
exists
(
)
)
;
assertTrue
(
shareAppList
.
exists
(
)
)
;
}
}
