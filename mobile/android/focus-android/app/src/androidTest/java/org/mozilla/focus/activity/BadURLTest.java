package
org
.
mozilla
.
focus
.
activity
;
import
android
.
content
.
Context
;
import
android
.
preference
.
PreferenceManager
;
import
android
.
support
.
test
.
InstrumentationRegistry
;
import
android
.
support
.
test
.
rule
.
ActivityTestRule
;
import
android
.
support
.
test
.
runner
.
AndroidJUnit4
;
import
android
.
support
.
test
.
uiautomator
.
UiObject
;
import
android
.
support
.
test
.
uiautomator
.
UiObjectNotFoundException
;
import
android
.
support
.
test
.
uiautomator
.
UiSelector
;
import
org
.
junit
.
After
;
import
org
.
junit
.
Rule
;
import
org
.
junit
.
Test
;
import
org
.
junit
.
runner
.
RunWith
;
import
org
.
mozilla
.
focus
.
helpers
.
TestHelper
;
import
static
android
.
support
.
test
.
espresso
.
action
.
ViewActions
.
click
;
import
static
junit
.
framework
.
Assert
.
assertTrue
;
import
static
org
.
mozilla
.
focus
.
helpers
.
TestHelper
.
waitingTime
;
import
static
org
.
mozilla
.
focus
.
fragment
.
FirstrunFragment
.
FIRSTRUN_PREF
;
RunWith
(
AndroidJUnit4
.
class
)
public
class
BadURLTest
{
Rule
public
ActivityTestRule
<
MainActivity
>
mActivityTestRule
=
new
ActivityTestRule
<
MainActivity
>
(
MainActivity
.
class
)
{
Override
protected
void
beforeActivityLaunched
(
)
{
super
.
beforeActivityLaunched
(
)
;
Context
appContext
=
InstrumentationRegistry
.
getInstrumentation
(
)
.
getTargetContext
(
)
.
getApplicationContext
(
)
;
PreferenceManager
.
getDefaultSharedPreferences
(
appContext
)
.
edit
(
)
.
putBoolean
(
FIRSTRUN_PREF
true
)
.
apply
(
)
;
}
}
;
After
public
void
tearDown
(
)
throws
Exception
{
mActivityTestRule
.
getActivity
(
)
.
finishAndRemoveTask
(
)
;
}
Test
public
void
BadURLcheckTest
(
)
throws
InterruptedException
UiObjectNotFoundException
{
UiObject
cancelOpenAppBtn
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
resourceId
(
"
android
:
id
/
button2
"
)
)
;
UiObject
openAppalert
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
text
(
"
Open
link
in
another
app
"
)
)
;
TestHelper
.
inlineAutocompleteEditText
.
waitForExists
(
waitingTime
)
;
TestHelper
.
inlineAutocompleteEditText
.
clearTextField
(
)
;
TestHelper
.
inlineAutocompleteEditText
.
setText
(
"
htps
:
/
/
www
.
mozilla
.
org
"
)
;
TestHelper
.
hint
.
waitForExists
(
waitingTime
)
;
TestHelper
.
pressEnterKey
(
)
;
TestHelper
.
tryAgainBtn
.
waitForExists
(
waitingTime
)
;
assertTrue
(
TestHelper
.
notFoundMsg
.
exists
(
)
)
;
assertTrue
(
TestHelper
.
notFounddetailedMsg
.
exists
(
)
)
;
assertTrue
(
TestHelper
.
tryAgainBtn
.
exists
(
)
)
;
TestHelper
.
floatingEraseButton
.
perform
(
click
(
)
)
;
TestHelper
.
inlineAutocompleteEditText
.
waitForExists
(
waitingTime
)
;
TestHelper
.
inlineAutocompleteEditText
.
clearTextField
(
)
;
TestHelper
.
inlineAutocompleteEditText
.
setText
(
"
market
:
/
/
details
?
id
=
org
.
mozilla
.
firefox
&
referrer
=
"
+
"
utm_source
%
3Dmozilla
%
26utm_medium
%
3DReferral
%
26utm_campaign
%
3Dmozilla
-
org
"
)
;
TestHelper
.
pressEnterKey
(
)
;
cancelOpenAppBtn
.
waitForExists
(
waitingTime
)
;
assertTrue
(
openAppalert
.
exists
(
)
)
;
assertTrue
(
cancelOpenAppBtn
.
exists
(
)
)
;
cancelOpenAppBtn
.
click
(
)
;
TestHelper
.
floatingEraseButton
.
perform
(
click
(
)
)
;
TestHelper
.
erasedMsg
.
waitForExists
(
waitingTime
)
;
}
}
