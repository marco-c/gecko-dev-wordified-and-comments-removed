package
org
.
mozilla
.
focus
.
activity
;
import
android
.
content
.
Context
;
import
android
.
preference
.
PreferenceManager
;
import
android
.
support
.
test
.
InstrumentationRegistry
;
import
android
.
support
.
test
.
rule
.
ActivityTestRule
;
import
android
.
support
.
test
.
runner
.
AndroidJUnit4
;
import
android
.
support
.
test
.
uiautomator
.
UiObject
;
import
android
.
support
.
test
.
uiautomator
.
UiObjectNotFoundException
;
import
android
.
support
.
test
.
uiautomator
.
UiSelector
;
import
org
.
junit
.
After
;
import
org
.
junit
.
Rule
;
import
org
.
junit
.
Test
;
import
org
.
junit
.
runner
.
RunWith
;
import
org
.
mozilla
.
focus
.
helpers
.
TestHelper
;
import
static
junit
.
framework
.
Assert
.
assertTrue
;
import
static
org
.
mozilla
.
focus
.
fragment
.
FirstrunFragment
.
FIRSTRUN_PREF
;
import
static
org
.
mozilla
.
focus
.
helpers
.
EspressoHelper
.
openSettings
;
import
static
org
.
mozilla
.
focus
.
helpers
.
TestHelper
.
waitingTime
;
RunWith
(
AndroidJUnit4
.
class
)
public
class
SettingsAppearanceTest
{
Rule
public
ActivityTestRule
<
MainActivity
>
mActivityTestRule
=
new
ActivityTestRule
<
MainActivity
>
(
MainActivity
.
class
)
{
Override
protected
void
beforeActivityLaunched
(
)
{
super
.
beforeActivityLaunched
(
)
;
Context
appContext
=
InstrumentationRegistry
.
getInstrumentation
(
)
.
getTargetContext
(
)
.
getApplicationContext
(
)
;
PreferenceManager
.
getDefaultSharedPreferences
(
appContext
)
.
edit
(
)
.
putBoolean
(
FIRSTRUN_PREF
true
)
.
apply
(
)
;
}
}
;
After
public
void
tearDown
(
)
throws
Exception
{
mActivityTestRule
.
getActivity
(
)
.
finishAndRemoveTask
(
)
;
}
Test
public
void
settingsScreenTest
(
)
throws
InterruptedException
UiObjectNotFoundException
{
UiObject
SearchEngineSelection
=
TestHelper
.
settingsList
.
getChild
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
LinearLayout
"
)
.
instance
(
0
)
)
;
UiObject
searchHeading
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
text
(
"
Search
"
)
.
resourceId
(
"
android
:
id
/
title
"
)
)
;
UiObject
privacyHeading
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
text
(
"
Privacy
"
)
.
resourceId
(
"
android
:
id
/
title
"
)
)
;
UiObject
perfHeading
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
text
(
"
Performance
"
)
.
resourceId
(
"
android
:
id
/
title
"
)
)
;
UiObject
mozHeading
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
text
(
"
Mozilla
"
)
.
resourceId
(
"
android
:
id
/
title
"
)
)
;
TestHelper
.
inlineAutocompleteEditText
.
waitForExists
(
waitingTime
)
;
openSettings
(
)
;
SearchEngineSelection
.
waitForExists
(
waitingTime
)
;
assertTrue
(
SearchEngineSelection
.
isEnabled
(
)
)
;
assertTrue
(
searchHeading
.
exists
(
)
)
;
assertTrue
(
privacyHeading
.
exists
(
)
)
;
TestHelper
.
swipeUpScreen
(
)
;
assertTrue
(
perfHeading
.
exists
(
)
)
;
mozHeading
.
waitForExists
(
waitingTime
)
;
assertTrue
(
mozHeading
.
exists
(
)
)
;
}
}
