package
org
.
mozilla
.
focus
.
activity
;
import
android
.
content
.
Context
;
import
android
.
content
.
res
.
Configuration
;
import
android
.
content
.
res
.
Resources
;
import
android
.
preference
.
PreferenceManager
;
import
android
.
support
.
test
.
InstrumentationRegistry
;
import
android
.
support
.
test
.
rule
.
ActivityTestRule
;
import
android
.
support
.
test
.
runner
.
AndroidJUnit4
;
import
android
.
support
.
test
.
uiautomator
.
UiObject
;
import
android
.
support
.
test
.
uiautomator
.
UiObjectNotFoundException
;
import
android
.
support
.
test
.
uiautomator
.
UiScrollable
;
import
android
.
support
.
test
.
uiautomator
.
UiSelector
;
import
org
.
junit
.
After
;
import
org
.
junit
.
AfterClass
;
import
org
.
junit
.
Assert
;
import
org
.
junit
.
BeforeClass
;
import
org
.
junit
.
Rule
;
import
org
.
junit
.
Test
;
import
org
.
junit
.
runner
.
RunWith
;
import
org
.
mozilla
.
focus
.
helpers
.
TestHelper
;
import
java
.
util
.
Locale
;
import
static
android
.
os
.
Build
.
VERSION
.
SDK_INT
;
import
static
android
.
support
.
test
.
espresso
.
action
.
ViewActions
.
click
;
import
static
org
.
mozilla
.
focus
.
fragment
.
FirstrunFragment
.
FIRSTRUN_PREF
;
import
static
org
.
mozilla
.
focus
.
helpers
.
EspressoHelper
.
openMenu
;
import
static
org
.
mozilla
.
focus
.
helpers
.
EspressoHelper
.
openSettings
;
import
static
org
.
mozilla
.
focus
.
helpers
.
TestHelper
.
waitingTime
;
RunWith
(
AndroidJUnit4
.
class
)
public
class
SwitchLocaleTest
{
Rule
public
ActivityTestRule
<
MainActivity
>
mActivityTestRule
=
new
ActivityTestRule
<
MainActivity
>
(
MainActivity
.
class
)
{
Override
protected
void
beforeActivityLaunched
(
)
{
super
.
beforeActivityLaunched
(
)
;
Context
appContext
=
InstrumentationRegistry
.
getInstrumentation
(
)
.
getTargetContext
(
)
.
getApplicationContext
(
)
;
PreferenceManager
.
getDefaultSharedPreferences
(
appContext
)
.
edit
(
)
.
putBoolean
(
FIRSTRUN_PREF
true
)
.
apply
(
)
;
}
}
;
public
SwitchLocaleTest
(
)
throws
UiObjectNotFoundException
{
}
BeforeClass
public
static
void
setupBeforeClass
(
)
throws
Exception
{
changeLocale
(
"
fr
"
)
;
}
AfterClass
public
static
void
tearDownAfterClass
(
)
throws
Exception
{
changeLocale
(
"
en
"
)
;
}
After
public
void
tearDown
(
)
throws
Exception
{
mActivityTestRule
.
getActivity
(
)
.
finishAndRemoveTask
(
)
;
}
SuppressWarnings
(
"
deprecation
"
)
public
static
void
changeLocale
(
String
locale
)
{
Context
context
=
InstrumentationRegistry
.
getInstrumentation
(
)
.
getTargetContext
(
)
;
Resources
res
=
context
.
getApplicationContext
(
)
.
getResources
(
)
;
Configuration
config
=
res
.
getConfiguration
(
)
;
config
.
setLocale
(
new
Locale
(
locale
)
)
;
if
(
SDK_INT
>
=
25
)
{
context
.
createConfigurationContext
(
config
)
;
}
else
{
res
.
updateConfiguration
(
config
res
.
getDisplayMetrics
(
)
)
;
}
}
private
UiObject
sysDefaultLocale
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
CheckedTextView
"
)
.
instance
(
0
)
.
enabled
(
true
)
)
;
private
UiObject
localeList
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
ListView
"
)
.
enabled
(
true
)
)
;
private
UiObject
LanguageSelection
=
TestHelper
.
settingsList
.
getChild
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
LinearLayout
"
)
.
instance
(
0
)
)
;
private
UiObject
englishHeading
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
TextView
"
)
.
text
(
"
Language
"
)
)
;
private
UiObject
frenchHeading
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
TextView
"
)
.
text
(
"
Param
tres
"
)
)
;
Test
public
void
EnglishSystemLocaleTest
(
)
throws
InterruptedException
UiObjectNotFoundException
{
UiObject
frenchMenuItem
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
TextView
"
)
.
text
(
"
Fran
ais
"
)
)
;
UiObject
englishMenuItem
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
TextView
"
)
.
text
(
"
System
default
"
)
)
;
UiObject
frenchLocaleinEn
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
CheckedTextView
"
)
.
text
(
"
Fran
ais
"
)
)
;
TestHelper
.
inlineAutocompleteEditText
.
waitForExists
(
waitingTime
)
;
openSettings
(
)
;
LanguageSelection
.
waitForExists
(
waitingTime
)
;
LanguageSelection
.
click
(
)
;
sysDefaultLocale
.
waitForExists
(
waitingTime
)
;
Assert
.
assertTrue
(
sysDefaultLocale
.
isChecked
(
)
)
;
UiScrollable
appViews
=
new
UiScrollable
(
new
UiSelector
(
)
.
scrollable
(
true
)
)
;
appViews
.
scrollIntoView
(
frenchLocaleinEn
)
;
Assert
.
assertTrue
(
frenchLocaleinEn
.
isClickable
(
)
)
;
frenchLocaleinEn
.
click
(
)
;
frenchHeading
.
waitForExists
(
waitingTime
)
;
Assert
.
assertTrue
(
frenchHeading
.
exists
(
)
)
;
Assert
.
assertTrue
(
frenchMenuItem
.
exists
(
)
)
;
TestHelper
.
pressBackKey
(
)
;
UiObject
frenchTitle
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
TextView
"
)
.
text
(
"
Navigation
priv
e
automatique
.
\
nNaviguez
.
Effacez
.
Recommencez
.
"
)
)
;
frenchTitle
.
waitForExists
(
waitingTime
)
;
Assert
.
assertTrue
(
frenchTitle
.
exists
(
)
)
;
openMenu
(
)
;
Assert
.
assertEquals
(
TestHelper
.
settingsMenuItem
.
getText
(
)
"
Param
tres
"
)
;
Assert
.
assertEquals
(
TestHelper
.
HelpItem
.
getText
(
)
"
Aide
"
)
;
TestHelper
.
settingsMenuItem
.
click
(
)
;
LanguageSelection
.
click
(
)
;
Assert
.
assertTrue
(
frenchLocaleinEn
.
isChecked
(
)
)
;
appViews
.
scrollToBeginning
(
10
)
;
sysDefaultLocale
.
waitForExists
(
waitingTime
)
;
sysDefaultLocale
.
click
(
)
;
LanguageSelection
.
waitForExists
(
waitingTime
)
;
Assert
.
assertTrue
(
englishHeading
.
exists
(
)
)
;
Assert
.
assertTrue
(
englishMenuItem
.
exists
(
)
)
;
TestHelper
.
pressBackKey
(
)
;
UiObject
englishTitle
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
TextView
"
)
.
text
(
"
Automatic
private
browsing
.
\
nBrowse
.
Erase
.
Repeat
.
"
)
)
;
englishTitle
.
waitForExists
(
waitingTime
)
;
Assert
.
assertTrue
(
englishTitle
.
exists
(
)
)
;
TestHelper
.
menuButton
.
perform
(
click
(
)
)
;
Assert
.
assertEquals
(
TestHelper
.
settingsMenuItem
.
getText
(
)
"
Settings
"
)
;
Assert
.
assertEquals
(
TestHelper
.
HelpItem
.
getText
(
)
"
Help
"
)
;
}
Test
public
void
FrenchLocaleTest
(
)
throws
InterruptedException
UiObjectNotFoundException
{
UiObject
frenchMenuItem
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
TextView
"
)
.
text
(
"
Valeur
par
d
faut
du
syst
me
"
)
)
;
UiObject
englishMenuItem
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
TextView
"
)
.
text
(
"
English
(
United
States
)
"
)
)
;
UiObject
englishLocaleinFr
=
TestHelper
.
mDevice
.
findObject
(
new
UiSelector
(
)
.
className
(
"
android
.
widget
.
CheckedTextView
"
)
.
text
(
"
English
(
United
States
)
"
)
)
;
TestHelper
.
inlineAutocompleteEditText
.
waitForExists
(
waitingTime
)
;
openSettings
(
)
;
LanguageSelection
.
waitForExists
(
waitingTime
)
;
frenchHeading
.
waitForExists
(
waitingTime
)
;
Assert
.
assertTrue
(
frenchHeading
.
exists
(
)
)
;
Assert
.
assertTrue
(
frenchMenuItem
.
exists
(
)
)
;
LanguageSelection
.
click
(
)
;
Assert
.
assertTrue
(
sysDefaultLocale
.
isChecked
(
)
)
;
UiScrollable
appViews
=
new
UiScrollable
(
new
UiSelector
(
)
.
scrollable
(
true
)
)
;
appViews
.
scrollIntoView
(
englishLocaleinFr
)
;
Assert
.
assertTrue
(
englishLocaleinFr
.
isClickable
(
)
)
;
englishLocaleinFr
.
click
(
)
;
englishHeading
.
waitForExists
(
waitingTime
)
;
Assert
.
assertTrue
(
englishHeading
.
exists
(
)
)
;
Assert
.
assertTrue
(
englishMenuItem
.
exists
(
)
)
;
}
}
