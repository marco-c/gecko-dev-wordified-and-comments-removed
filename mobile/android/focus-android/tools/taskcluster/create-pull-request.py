"
"
"
This
scripts
pushes
the
passed
in
branch
(
argument
)
to
the
bot
'
s
repository
and
creates
a
pull
request
for
it
.
"
"
"
import
os
import
re
import
subprocess
import
sys
import
taskcluster
from
github
import
Github
if
len
(
sys
.
argv
)
!
=
2
:
	
print
"
Usage
"
sys
.
argv
[
0
]
"
BRANCH
"
	
exit
(
1
)
secrets
=
taskcluster
.
Secrets
(
{
'
baseUrl
'
:
'
http
:
/
/
taskcluster
/
secrets
/
v1
'
}
)
data
=
secrets
.
get
(
'
project
/
focus
/
github
'
)
token
=
data
[
'
secret
'
]
[
'
botAccountToken
'
]
BRANCH
=
sys
.
argv
[
1
]
OWNER
=
'
mozilla
-
mobile
'
USER
=
'
MickeyMoz
'
REPO
=
'
focus
-
android
'
BASE
=
'
master
'
HEAD
=
"
MickeyMoz
:
%
s
"
%
BRANCH
URL
=
"
https
:
/
/
%
s
:
%
s
github
.
com
/
%
s
/
%
s
/
"
%
(
USER
token
USER
REPO
)
github
=
Github
(
login_or_token
=
token
)
repo
=
github
.
get_user
(
OWNER
)
.
get_repo
(
REPO
)
for
request
in
repo
.
get_pulls
(
state
=
'
open
'
)
:
	
if
request
.
user
.
login
=
=
USER
:
		
print
"
There
'
s
already
an
unmerged
pull
request
.
Doing
nothing
.
"
		
exit
(
0
)
print
subprocess
.
check_output
(
[
'
git
'
'
push
'
URL
BRANCH
]
)
log_path
=
os
.
path
.
join
(
os
.
path
.
dirname
(
__file__
)
'
.
.
/
.
.
/
import
-
log
.
txt
'
)
with
open
(
log_path
)
as
log_file
:
	
ansi_escape
=
re
.
compile
(
r
'
\
x1b
[
^
m
]
*
m
'
)
	
log
=
ansi_escape
.
sub
(
'
'
log_file
.
read
(
)
)
body
=
"
"
"
Automated
import
%
s
Log
:
%
s
"
"
"
%
(
BRANCH
log
)
pull_request
=
repo
.
create_pull
(
title
=
'
String
import
'
+
BRANCH
body
=
body
base
=
BASE
head
=
HEAD
)
print
pull_request
issue
=
repo
.
get_issue
(
pull_request
.
number
)
issue
.
add_to_labels
(
"
needs
merge
"
)
print
issue
