with
Files
(
"
*
*
"
)
:
BUG_COMPONENT
=
(
"
GeckoView
"
"
General
"
)
SCHEDULES
.
exclusive
=
[
"
android
"
]
t
=
(
"
android_apks
"
)
GENERATED_FILES
+
=
[
t
]
GENERATED_FILES
[
t
]
.
force
=
True
GENERATED_FILES
[
t
]
.
script
=
"
/
mobile
/
android
/
gradle
.
py
:
assemble_app
"
config_keys
=
(
"
MOZ_ANDROID_CONTENT_SERVICE_COUNT
"
"
MOZ_ANDROID_CONTENT_SERVICE_ISOLATED_PROCESS
"
)
flags
=
[
"
%
s
=
%
s
"
%
(
k
CONFIG
[
k
]
if
CONFIG
[
k
]
else
"
"
)
for
k
in
config_keys
]
GeneratedFile
(
(
"
geckoview
/
src
/
main
/
AndroidManifest_overlay
.
xml
"
)
script
=
"
gen_from_jinja
.
py
"
inputs
=
[
"
geckoview
/
src
/
main
/
AndroidManifest_overlay
.
jinja
"
]
flags
=
flags
)
GeneratedFile
(
(
"
geckoview
/
src
/
main
/
java
/
org
/
mozilla
/
gecko
/
process
/
GeckoChildProcessServices
.
java
"
)
script
=
"
gen_from_jinja
.
py
"
inputs
=
[
"
geckoview
/
src
/
main
/
java
/
org
/
mozilla
/
gecko
/
process
/
GeckoChildProcessServices
.
jinja
"
]
flags
=
flags
)
GeneratedFile
(
(
"
geckoview
/
src
/
main
/
java
/
org
/
mozilla
/
gecko
/
util
/
XPCOMError
.
java
"
)
script
=
"
/
xpcom
/
base
/
ErrorList
.
py
"
entry_point
=
"
gen_jinja
"
inputs
=
[
"
geckoview
/
src
/
main
/
java
/
org
/
mozilla
/
gecko
/
util
/
XPCOMError
.
jinja
"
]
)
CONFIGURE_SUBST_FILES
+
=
[
"
installer
/
Makefile
"
]
DIRS
+
=
[
"
.
.
/
locales
"
"
locales
"
]
DIRS
+
=
[
"
actors
"
"
chrome
"
"
components
"
"
modules
"
"
themes
/
geckoview
"
"
geckoview
/
src
/
androidTest
/
assets
"
"
app
"
"
fonts
"
]
TEST_HARNESS_FILES
.
testing
.
mochitest
.
tests
.
junit
+
=
[
"
geckoview
/
src
/
androidTest
/
assets
/
www
/
forms_iframe
.
html
"
"
geckoview
/
src
/
androidTest
/
assets
/
www
/
forms_xorigin
.
html
"
"
geckoview
/
src
/
androidTest
/
assets
/
www
/
hello
.
html
"
"
geckoview
/
src
/
androidTest
/
assets
/
www
/
hsts_header
.
sjs
"
"
geckoview
/
src
/
androidTest
/
assets
/
www
/
iframe_http_only
.
html
"
"
geckoview
/
src
/
androidTest
/
assets
/
www
/
simple_redirect
.
sjs
"
"
geckoview
/
src
/
androidTest
/
assets
/
www
/
update_manifest
.
json
"
]
SPHINX_TREES
[
"
/
mobile
/
android
"
]
=
"
docs
"
with
Files
(
"
docs
/
*
*
"
)
:
SCHEDULES
.
exclusive
=
[
"
docs
"
]
