"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
PromptCollection
"
]
;
const
{
GeckoViewUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewUtils
.
sys
.
mjs
"
)
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
sys
.
mjs
"
)
;
const
lazy
=
{
}
;
XPCOMUtils
.
defineLazyModuleGetters
(
lazy
{
GeckoViewPrompter
:
"
resource
:
/
/
gre
/
modules
/
GeckoViewPrompter
.
jsm
"
}
)
;
const
{
debug
warn
}
=
GeckoViewUtils
.
initLogging
(
"
PromptCollection
"
)
;
class
PromptCollection
{
confirmRepost
(
browsingContext
)
{
const
msg
=
{
type
:
"
repost
"
}
;
const
prompter
=
new
lazy
.
GeckoViewPrompter
(
browsingContext
)
;
const
result
=
prompter
.
showPrompt
(
msg
)
;
return
!
!
result
?
.
allow
;
}
asyncBeforeUnloadCheck
(
browsingContext
)
{
return
new
Promise
(
resolve
=
>
{
const
msg
=
{
type
:
"
beforeUnload
"
}
;
const
prompter
=
new
lazy
.
GeckoViewPrompter
(
browsingContext
)
;
prompter
.
asyncShowPrompt
(
msg
resolve
)
;
}
)
.
then
(
result
=
>
!
!
result
?
.
allow
)
;
}
confirmFolderUpload
(
)
{
return
false
;
}
}
PromptCollection
.
prototype
.
QueryInterface
=
ChromeUtils
.
generateQI
(
[
"
nsIPromptCollection
"
]
)
;
