package
org
.
mozilla
.
telemetry
.
measurement
;
import
android
.
content
.
SharedPreferences
;
import
android
.
support
.
annotation
.
VisibleForTesting
;
import
org
.
mozilla
.
telemetry
.
config
.
TelemetryConfiguration
;
import
java
.
util
.
concurrent
.
TimeUnit
;
public
class
FirstRunProfileDateMeasurement
extends
TelemetryMeasurement
{
private
static
final
String
FIELD_NAME
=
"
profileDate
"
;
private
static
final
String
PREFERENCE_KEY
=
"
profile_date
"
;
private
TelemetryConfiguration
configuration
;
public
FirstRunProfileDateMeasurement
(
TelemetryConfiguration
configuration
)
{
super
(
FIELD_NAME
)
;
this
.
configuration
=
configuration
;
ensureValueExists
(
)
;
}
private
void
ensureValueExists
(
)
{
final
SharedPreferences
preferences
=
configuration
.
getSharedPreferences
(
)
;
if
(
preferences
.
contains
(
PREFERENCE_KEY
)
)
{
return
;
}
preferences
.
edit
(
)
.
putLong
(
PREFERENCE_KEY
now
(
)
)
.
apply
(
)
;
}
Override
public
Object
flush
(
)
{
return
getProfileDateInDays
(
)
;
}
private
long
getProfileDateInDays
(
)
{
long
profileDateMilliseconds
=
configuration
.
getSharedPreferences
(
)
.
getLong
(
PREFERENCE_KEY
now
(
)
)
;
return
(
long
)
Math
.
floor
(
(
double
)
profileDateMilliseconds
/
TimeUnit
.
DAYS
.
toMillis
(
1
)
)
;
}
VisibleForTesting
long
now
(
)
{
return
System
.
currentTimeMillis
(
)
;
}
}
