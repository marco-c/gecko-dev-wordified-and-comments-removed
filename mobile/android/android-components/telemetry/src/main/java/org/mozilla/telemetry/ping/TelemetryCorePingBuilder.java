package
org
.
mozilla
.
telemetry
.
ping
;
import
org
.
mozilla
.
telemetry
.
config
.
TelemetryConfiguration
;
import
org
.
mozilla
.
telemetry
.
measurement
.
ArchMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
CreatedDateMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
DefaultSearchMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
DeviceMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
FirstRunProfileDateMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
LocaleMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
OperatingSystemMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
OperatingSystemVersionMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
SearchesMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
SequenceMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
SessionCountMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
SessionDurationMeasurement
;
import
org
.
mozilla
.
telemetry
.
measurement
.
TimezoneOffsetMeasurement
;
public
class
TelemetryCorePingBuilder
extends
TelemetryPingBuilder
{
public
static
final
String
TYPE
=
"
core
"
;
private
static
final
int
VERSION
=
7
;
private
SessionCountMeasurement
sessionCountMeasurement
;
private
SessionDurationMeasurement
sessionDurationMeasurement
;
private
DefaultSearchMeasurement
defaultSearchMeasurement
;
private
SearchesMeasurement
searchesMeasurement
;
public
TelemetryCorePingBuilder
(
TelemetryConfiguration
configuration
)
{
super
(
configuration
TYPE
VERSION
)
;
addMeasurement
(
new
SequenceMeasurement
(
configuration
this
)
)
;
addMeasurement
(
new
LocaleMeasurement
(
)
)
;
addMeasurement
(
new
OperatingSystemMeasurement
(
)
)
;
addMeasurement
(
new
OperatingSystemVersionMeasurement
(
)
)
;
addMeasurement
(
new
DeviceMeasurement
(
)
)
;
addMeasurement
(
new
ArchMeasurement
(
)
)
;
addMeasurement
(
new
FirstRunProfileDateMeasurement
(
configuration
)
)
;
addMeasurement
(
defaultSearchMeasurement
=
new
DefaultSearchMeasurement
(
)
)
;
addMeasurement
(
new
CreatedDateMeasurement
(
)
)
;
addMeasurement
(
new
TimezoneOffsetMeasurement
(
)
)
;
addMeasurement
(
sessionCountMeasurement
=
new
SessionCountMeasurement
(
configuration
)
)
;
addMeasurement
(
sessionDurationMeasurement
=
new
SessionDurationMeasurement
(
configuration
)
)
;
addMeasurement
(
searchesMeasurement
=
new
SearchesMeasurement
(
configuration
)
)
;
}
public
SessionCountMeasurement
getSessionCountMeasurement
(
)
{
return
sessionCountMeasurement
;
}
public
SessionDurationMeasurement
getSessionDurationMeasurement
(
)
{
return
sessionDurationMeasurement
;
}
public
SearchesMeasurement
getSearchesMeasurement
(
)
{
return
searchesMeasurement
;
}
public
DefaultSearchMeasurement
getDefaultSearchMeasurement
(
)
{
return
defaultSearchMeasurement
;
}
Override
protected
String
getUploadPath
(
final
String
documentId
)
{
return
super
.
getUploadPath
(
documentId
)
+
"
?
v
=
4
"
;
}
}
