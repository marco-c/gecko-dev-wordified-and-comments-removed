"
use
strict
"
;
console
.
info
(
"
Overriding
MozTransform
in
element
.
style
for
compatibility
reasons
.
See
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1897120
for
details
.
"
)
;
(
function
(
)
{
const
ele
=
HTMLElement
.
wrappedJSObject
.
prototype
;
const
obj
=
window
.
wrappedJSObject
.
Object
;
const
style
=
obj
.
getOwnPropertyDescriptor
(
ele
"
style
"
)
;
const
{
get
}
=
style
;
style
.
get
=
exportFunction
(
function
(
)
{
const
styles
=
get
.
call
(
this
)
;
return
new
window
.
wrappedJSObject
.
Proxy
(
styles
cloneInto
(
{
deleteProperty
(
target
prop
)
{
return
Reflect
.
deleteProperty
(
target
prop
)
;
}
get
(
target
key
)
{
const
val
=
Reflect
.
get
(
target
key
)
;
if
(
typeof
val
=
=
"
function
"
)
{
return
exportFunction
(
function
(
)
{
return
val
.
apply
(
styles
arguments
)
;
}
window
)
;
}
return
val
;
}
has
(
target
key
)
{
if
(
key
=
=
"
MozTransform
"
|
|
key
=
=
"
WebkitTransform
"
)
{
return
false
;
}
return
Reflect
.
has
(
target
key
)
;
}
ownKeys
(
target
)
{
return
Reflect
.
ownKeys
(
target
)
;
}
set
(
target
key
value
)
{
return
Reflect
.
set
(
target
key
value
)
;
}
}
window
{
cloneFunctions
:
true
}
)
)
;
}
window
)
;
obj
.
defineProperty
(
ele
"
style
"
style
)
;
}
)
(
)
;
