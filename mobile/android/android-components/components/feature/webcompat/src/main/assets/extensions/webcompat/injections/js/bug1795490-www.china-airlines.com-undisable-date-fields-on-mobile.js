"
use
strict
"
;
const
SELECTOR
=
#
departureDateMobile
[
disabled
]
#
returnDateMobile
[
disabled
]
;
function
check
(
target
)
{
if
(
target
.
nodeName
=
=
=
"
INPUT
"
&
&
target
.
matches
(
SELECTOR
)
)
{
target
.
removeAttribute
(
"
disabled
"
)
;
return
true
;
}
return
false
;
}
new
MutationObserver
(
mutations
=
>
{
for
(
const
{
addedNodes
target
attributeName
}
of
mutations
)
{
if
(
attributeName
=
=
=
"
disabled
"
)
{
check
(
target
)
;
}
else
{
addedNodes
?
.
forEach
(
node
=
>
{
if
(
!
check
(
node
)
)
{
node
.
querySelectorAll
?
.
(
SELECTOR
)
?
.
forEach
(
n
=
>
n
.
removeAttribute
(
"
disabled
"
)
)
;
}
}
)
;
}
}
}
)
.
observe
(
document
{
attributes
:
true
childList
:
true
subtree
:
true
}
)
;
