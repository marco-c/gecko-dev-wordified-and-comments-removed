package
mozilla
.
components
.
service
.
glean
;
import
androidx
.
test
.
core
.
app
.
ApplicationProvider
;
import
androidx
.
work
.
testing
.
WorkManagerTestInitHelper
;
import
android
.
content
.
Context
;
import
org
.
junit
.
Test
;
import
org
.
junit
.
runner
.
RunWith
;
import
org
.
robolectric
.
RobolectricTestRunner
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
import
mozilla
.
components
.
service
.
glean
.
config
.
Configuration
;
RunWith
(
RobolectricTestRunner
.
class
)
public
class
GleanFromJavaTest
{
Test
public
void
testInitGleanWithDefaults
(
)
{
Context
context
=
ApplicationProvider
.
getApplicationContext
(
)
;
WorkManagerTestInitHelper
.
initializeTestWorkManager
(
context
)
;
Glean
.
INSTANCE
.
initialize
(
context
)
;
}
Test
public
void
testInitGleanWithConfiguration
(
)
{
Context
context
=
ApplicationProvider
.
getApplicationContext
(
)
;
WorkManagerTestInitHelper
.
initializeTestWorkManager
(
context
)
;
Configuration
config
=
new
Configuration
(
Configuration
.
DEFAULT_TELEMETRY_ENDPOINT
"
test
-
channel
"
)
;
Glean
.
INSTANCE
.
initialize
(
context
config
)
;
}
Test
public
void
testGleanExperimentsAPIWithDefaults
(
)
{
Glean
.
INSTANCE
.
setExperimentActive
(
"
test
-
exp
-
id
-
1
"
"
test
-
branch
-
1
"
)
;
}
Test
public
void
testGleanExperimentsAPIWithOptional
(
)
{
Map
<
String
String
>
experimentProperties
=
new
HashMap
<
>
(
)
;
experimentProperties
.
put
(
"
test
-
prop1
"
"
test
-
prop
-
result1
"
)
;
Glean
.
INSTANCE
.
setExperimentActive
(
"
test
-
exp
-
id
-
1
"
"
test
-
branch
-
1
"
experimentProperties
)
;
}
}
