package
org
.
mozilla
.
telemetry
.
event
;
import
android
.
os
.
SystemClock
;
import
android
.
support
.
annotation
.
CheckResult
;
import
android
.
support
.
annotation
.
NonNull
;
import
android
.
support
.
annotation
.
Nullable
;
import
android
.
support
.
annotation
.
RestrictTo
;
import
org
.
json
.
JSONArray
;
import
org
.
json
.
JSONObject
;
import
org
.
mozilla
.
telemetry
.
TelemetryHolder
;
import
org
.
mozilla
.
telemetry
.
ping
.
TelemetryEventPingBuilder
;
import
org
.
mozilla
.
telemetry
.
util
.
StringUtils
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
public
class
TelemetryEvent
{
private
static
final
long
startTime
=
SystemClock
.
elapsedRealtime
(
)
;
private
static
final
int
MAX_LENGTH_CATEGORY
=
30
;
private
static
final
int
MAX_LENGTH_METHOD
=
20
;
private
static
final
int
MAX_LENGTH_OBJECT
=
20
;
private
static
final
int
MAX_LENGTH_VALUE
=
80
;
private
static
final
int
MAX_EXTRA_KEYS
=
200
;
private
static
final
int
MAX_LENGTH_EXTRA_KEY
=
15
;
private
static
final
int
MAX_LENGTH_EXTRA_VALUE
=
80
;
CheckResult
public
static
TelemetryEvent
create
(
NonNull
String
category
NonNull
String
method
Nullable
String
object
)
{
return
new
TelemetryEvent
(
category
method
object
null
)
;
}
CheckResult
public
static
TelemetryEvent
create
(
NonNull
String
category
NonNull
String
method
Nullable
String
object
String
value
)
{
return
new
TelemetryEvent
(
category
method
object
value
)
;
}
private
final
long
timestamp
;
private
final
String
category
;
private
final
String
method
;
private
Nullable
final
String
object
;
private
Nullable
String
value
;
private
final
Map
<
String
Object
>
extras
;
private
TelemetryEvent
(
NonNull
String
category
NonNull
String
method
Nullable
String
object
Nullable
String
value
)
{
timestamp
=
SystemClock
.
elapsedRealtime
(
)
-
startTime
;
this
.
category
=
StringUtils
.
safeSubstring
(
category
0
MAX_LENGTH_CATEGORY
)
;
this
.
method
=
StringUtils
.
safeSubstring
(
method
0
MAX_LENGTH_METHOD
)
;
this
.
object
=
object
=
=
null
?
null
:
StringUtils
.
safeSubstring
(
object
0
MAX_LENGTH_OBJECT
)
;
this
.
value
=
value
=
=
null
?
null
:
StringUtils
.
safeSubstring
(
value
0
MAX_LENGTH_VALUE
)
;
this
.
extras
=
new
HashMap
<
>
(
)
;
}
public
TelemetryEvent
extra
(
String
key
String
value
)
{
if
(
extras
.
size
(
)
>
MAX_EXTRA_KEYS
)
{
throw
new
IllegalArgumentException
(
"
Exceeding
limit
of
"
+
MAX_EXTRA_KEYS
+
"
extra
keys
"
)
;
}
extras
.
put
(
StringUtils
.
safeSubstring
(
key
0
MAX_LENGTH_EXTRA_KEY
)
StringUtils
.
safeSubstring
(
value
0
MAX_LENGTH_EXTRA_VALUE
)
)
;
return
this
;
}
public
void
queue
(
)
{
TelemetryHolder
.
get
(
)
.
queueEvent
(
this
)
;
}
RestrictTo
(
RestrictTo
.
Scope
.
LIBRARY
)
public
String
toJSON
(
)
{
final
JSONArray
array
=
new
JSONArray
(
)
;
array
.
put
(
timestamp
)
;
array
.
put
(
category
)
;
array
.
put
(
method
)
;
array
.
put
(
object
)
;
if
(
value
!
=
null
)
{
array
.
put
(
value
)
;
}
if
(
extras
!
=
null
&
&
!
extras
.
isEmpty
(
)
)
{
if
(
value
=
=
null
)
{
array
.
put
(
null
)
;
}
array
.
put
(
new
JSONObject
(
extras
)
)
;
}
return
array
.
toString
(
)
;
}
}
