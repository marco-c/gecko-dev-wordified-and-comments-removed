from
__future__
import
absolute_import
print_function
unicode_literals
from
taskgraph
.
transforms
.
base
import
TransformSequence
from
taskgraph
.
util
.
schema
import
resolve_keyed_by
transforms
=
TransformSequence
(
)
transforms
.
add
def
build_name_and_attributes
(
config
tasks
)
:
    
for
task
in
tasks
:
        
all_dependent_tasks
=
list
(
task
.
pop
(
"
dependent
-
tasks
"
)
.
values
(
)
)
        
task
[
"
dependencies
"
]
=
{
            
dep
.
label
:
dep
.
label
            
for
dep
in
all_dependent_tasks
        
}
        
first_dep
=
all_dependent_tasks
[
0
]
        
copy_of_attributes
=
first_dep
.
attributes
.
copy
(
)
        
task
.
setdefault
(
"
attributes
"
copy_of_attributes
)
        
task
[
"
attributes
"
]
[
"
artifacts
"
]
=
{
}
        
task
[
"
attributes
"
]
[
"
component
"
]
=
"
all
"
        
task
.
setdefault
(
"
run
-
on
-
tasks
-
for
"
copy_of_attributes
[
'
run_on_tasks_for
'
]
)
        
task
[
"
name
"
]
=
task
[
"
attributes
"
]
[
config
.
config
[
'
group
-
by
'
]
]
        
yield
task
