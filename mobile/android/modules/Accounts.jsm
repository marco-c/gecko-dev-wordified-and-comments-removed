"
use
strict
"
;
this
.
EXPORTED_SYMBOLS
=
[
"
Accounts
"
]
;
const
{
utils
:
Cu
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Deprecated
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Messaging
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Promise
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
var
Accounts
=
Object
.
freeze
(
{
_accountsExist
:
function
(
kind
)
{
return
Messaging
.
sendRequestForResult
(
{
type
:
"
Accounts
:
Exist
"
kind
:
kind
}
)
.
then
(
data
=
>
data
.
exists
)
;
}
firefoxAccountsExist
:
function
(
)
{
return
this
.
_accountsExist
(
"
fxa
"
)
;
}
syncAccountsExist
:
function
(
)
{
Deprecated
.
warning
(
"
The
legacy
Sync
account
type
has
been
removed
from
Firefox
for
Android
.
"
+
"
Please
use
firefoxAccountsExist
instead
.
"
"
https
:
/
/
developer
.
mozilla
.
org
/
en
-
US
/
Add
-
ons
/
Firefox_for_Android
/
API
/
Accounts
.
jsm
"
)
;
return
Promise
.
resolve
(
false
)
;
}
anySyncAccountsExist
:
function
(
)
{
return
this
.
_accountsExist
(
"
any
"
)
;
}
launchSetup
:
function
(
extras
)
{
Messaging
.
sendRequest
(
{
type
:
"
Accounts
:
Create
"
extras
:
extras
}
)
;
}
_addDefaultEndpoints
:
function
(
json
)
{
let
newData
=
Cu
.
cloneInto
(
json
{
}
{
cloneFunctions
:
false
}
)
;
let
associations
=
{
authServerEndpoint
:
'
identity
.
fxaccounts
.
auth
.
uri
'
profileServerEndpoint
:
'
identity
.
fxaccounts
.
remote
.
profile
.
uri
'
tokenServerEndpoint
:
'
identity
.
sync
.
tokenserver
.
uri
'
}
;
for
(
let
key
in
associations
)
{
newData
[
key
]
=
newData
[
key
]
|
|
Services
.
urlFormatter
.
formatURLPref
(
associations
[
key
]
)
;
}
return
newData
;
}
createFirefoxAccountFromJSON
:
function
(
json
)
{
return
Messaging
.
sendRequestForResult
(
{
type
:
"
Accounts
:
CreateFirefoxAccountFromJSON
"
json
:
this
.
_addDefaultEndpoints
(
json
)
}
)
;
}
updateFirefoxAccountFromJSON
:
function
(
json
)
{
return
Messaging
.
sendRequestForResult
(
{
type
:
"
Accounts
:
UpdateFirefoxAccountFromJSON
"
json
:
this
.
_addDefaultEndpoints
(
json
)
}
)
;
}
notifyFirefoxAccountProfileChanged
:
function
(
)
{
Messaging
.
sendRequest
(
{
type
:
"
Accounts
:
ProfileUpdated
"
}
)
;
}
getFirefoxAccount
:
function
(
)
{
return
Messaging
.
sendRequestForResult
(
{
type
:
"
Accounts
:
Exist
"
kind
:
"
fxa
"
}
)
.
then
(
data
=
>
{
if
(
!
data
|
|
!
data
.
exists
)
{
return
null
;
}
delete
data
.
exists
;
return
data
;
}
)
;
}
deleteFirefoxAccount
:
function
(
)
{
return
Messaging
.
sendRequestForResult
(
{
type
:
"
Accounts
:
DeleteFirefoxAccount
"
}
)
;
}
showSyncPreferences
:
function
(
)
{
return
Accounts
.
getFirefoxAccount
(
)
.
then
(
account
=
>
{
if
(
!
account
)
{
throw
new
Error
(
"
Can
'
t
show
Sync
preferences
of
non
-
existent
Firefox
Account
!
"
)
;
}
return
Messaging
.
sendRequestForResult
(
{
type
:
"
Accounts
:
ShowSyncPreferences
"
}
)
;
}
)
;
}
}
)
;
