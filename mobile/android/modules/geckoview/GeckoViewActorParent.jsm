const
{
GeckoViewUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewUtils
.
sys
.
mjs
"
)
;
const
EXPORTED_SYMBOLS
=
[
"
GeckoViewActorParent
"
]
;
class
GeckoViewActorParent
extends
JSWindowActorParent
{
static
initLogging
(
aModuleName
)
{
const
tag
=
aModuleName
.
replace
(
"
GeckoView
"
"
"
)
;
return
GeckoViewUtils
.
initLogging
(
tag
)
;
}
get
browser
(
)
{
return
this
.
browsingContext
.
top
.
embedderElement
;
}
get
window
(
)
{
const
{
browsingContext
}
=
this
;
if
(
!
browsingContext
.
isContent
&
&
browsingContext
.
window
)
{
return
browsingContext
.
window
;
}
return
this
.
browser
?
.
ownerGlobal
;
}
get
eventDispatcher
(
)
{
return
this
.
window
?
.
moduleManager
.
eventDispatcher
;
}
receiveMessage
(
aMessage
)
{
if
(
!
this
.
window
)
{
debug
receiveMessage
window
destroyed
{
aMessage
.
name
}
{
aMessage
.
data
?
.
type
}
;
return
null
;
}
switch
(
aMessage
.
name
)
{
case
"
DispatcherMessage
"
:
return
this
.
eventDispatcher
.
sendRequest
(
aMessage
.
data
)
;
case
"
DispatcherQuery
"
:
return
this
.
eventDispatcher
.
sendRequestForResult
(
aMessage
.
data
)
;
}
return
this
.
window
.
moduleManager
.
onMessageFromActor
(
this
.
name
aMessage
)
;
}
}
const
{
debug
warn
}
=
GeckoViewUtils
.
initLogging
(
"
GeckoViewActorParent
"
)
;
