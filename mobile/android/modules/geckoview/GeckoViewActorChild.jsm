const
{
GeckoViewUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
GeckoViewUtils
.
jsm
"
)
;
var
EXPORTED_SYMBOLS
=
[
"
GeckoViewActorChild
"
]
;
class
GeckoViewActorChild
extends
JSWindowActorChild
{
static
initLogging
(
aModuleName
)
{
const
tag
=
aModuleName
.
replace
(
"
GeckoView
"
"
"
)
+
"
[
C
]
"
;
return
GeckoViewUtils
.
initLogging
(
tag
)
;
}
actorCreated
(
)
{
this
.
eventDispatcher
=
GeckoViewUtils
.
getDispatcherForWindow
(
this
.
docShell
.
domWindow
)
;
}
get
isContentWindow
(
)
{
if
(
!
this
.
docShell
)
{
return
false
;
}
const
browser
=
this
.
browsingContext
.
top
.
embedderElement
;
if
(
browser
)
{
const
viewType
=
browser
.
getAttribute
(
"
webextension
-
view
-
type
"
)
;
if
(
viewType
)
{
debug
webextension
-
view
-
type
:
{
viewType
}
;
return
false
;
}
const
debugTarget
=
browser
.
getAttribute
(
"
webextension
-
addon
-
debug
-
target
"
)
;
if
(
debugTarget
)
{
debug
webextension
-
addon
-
debug
-
target
:
{
debugTarget
}
;
return
false
;
}
}
return
this
.
docShell
.
itemType
=
=
this
.
docShell
.
typeContent
;
}
}
const
{
debug
warn
}
=
GeckoViewUtils
.
initLogging
(
"
Actor
[
C
]
"
)
;
