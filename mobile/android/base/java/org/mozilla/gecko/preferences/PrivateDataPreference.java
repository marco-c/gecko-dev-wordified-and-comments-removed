package
org
.
mozilla
.
gecko
.
preferences
;
import
org
.
mozilla
.
gecko
.
GeckoAppShell
;
import
org
.
mozilla
.
gecko
.
Telemetry
;
import
org
.
mozilla
.
gecko
.
TelemetryContract
;
import
org
.
json
.
JSONException
;
import
org
.
json
.
JSONObject
;
import
org
.
mozilla
.
gecko
.
icons
.
storage
.
DiskStorage
;
import
java
.
util
.
Arrays
;
import
java
.
util
.
Collections
;
import
java
.
util
.
Set
;
import
android
.
content
.
Context
;
import
android
.
util
.
AttributeSet
;
import
android
.
util
.
Log
;
class
PrivateDataPreference
extends
MultiPrefMultiChoicePreference
{
private
static
final
String
LOGTAG
=
"
GeckoPrivateDataPreference
"
;
private
static
final
String
PREF_KEY_PREFIX
=
"
private
.
data
.
"
;
public
PrivateDataPreference
(
Context
context
AttributeSet
attrs
)
{
super
(
context
attrs
)
;
}
Override
protected
void
onDialogClosed
(
boolean
positiveResult
)
{
super
.
onDialogClosed
(
positiveResult
)
;
if
(
!
positiveResult
)
{
return
;
}
Telemetry
.
sendUIEvent
(
TelemetryContract
.
Event
.
SANITIZE
TelemetryContract
.
Method
.
DIALOG
"
settings
"
)
;
final
Set
<
String
>
values
=
getValues
(
)
;
final
JSONObject
json
=
new
JSONObject
(
)
;
for
(
String
value
:
values
)
{
final
String
key
=
value
.
substring
(
PREF_KEY_PREFIX
.
length
(
)
)
;
try
{
json
.
put
(
key
true
)
;
}
catch
(
JSONException
e
)
{
Log
.
e
(
LOGTAG
"
JSON
error
"
e
)
;
}
}
if
(
values
.
contains
(
"
private
.
data
.
offlineApps
"
)
)
{
DiskStorage
.
get
(
getContext
(
)
)
.
evictAll
(
)
;
}
GeckoAppShell
.
notifyObservers
(
"
Sanitize
:
ClearData
"
json
.
toString
(
)
)
;
}
}
