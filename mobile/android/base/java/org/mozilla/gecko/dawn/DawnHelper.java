package
org
.
mozilla
.
gecko
.
dawn
;
import
android
.
content
.
Context
;
import
android
.
content
.
SharedPreferences
;
import
android
.
support
.
annotation
.
NonNull
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
GeckoSharedPrefs
;
import
org
.
mozilla
.
gecko
.
Locales
;
import
org
.
mozilla
.
gecko
.
R
;
import
org
.
mozilla
.
gecko
.
Tabs
;
import
java
.
util
.
Locale
;
public
class
DawnHelper
{
private
static
final
String
ANDROID_PACKAGE_NAME
=
AppConstants
.
ANDROID_PACKAGE_NAME
;
private
static
final
String
ANDROID_PACKAGE_NAME_NIGHTLY_NEW
=
"
org
.
mozilla
.
fennec_aurora
"
;
private
static
final
String
KEY_PERF_BOOLEAN_NOTIFY_DAWN_ENABLED
=
"
key
-
pref
-
boolean
-
notify
-
dawn
-
enabled
"
;
private
static
final
String
TARGET_APP_VERSION
=
"
55
"
;
private
static
boolean
isAuroraNightly
(
)
{
return
ANDROID_PACKAGE_NAME
.
equals
(
ANDROID_PACKAGE_NAME_NIGHTLY_NEW
)
;
}
private
static
boolean
isTransitionRelease
(
)
{
return
AppConstants
.
MOZ_APP_VERSION
.
startsWith
(
TARGET_APP_VERSION
)
;
}
public
static
boolean
conditionallyNotifyDawn
(
NonNull
Context
context
)
{
if
(
!
isAuroraNightly
(
)
)
{
return
false
;
}
if
(
!
isTransitionRelease
(
)
)
{
return
false
;
}
final
SharedPreferences
prefs
=
GeckoSharedPrefs
.
forProfile
(
context
)
;
if
(
!
prefs
.
getBoolean
(
KEY_PERF_BOOLEAN_NOTIFY_DAWN_ENABLED
true
)
)
{
return
false
;
}
else
{
prefs
.
edit
(
)
.
putBoolean
(
KEY_PERF_BOOLEAN_NOTIFY_DAWN_ENABLED
false
)
.
apply
(
)
;
}
final
String
link
=
context
.
getString
(
R
.
string
.
aurora_transition_notification_url
AppConstants
.
MOZ_APP_VERSION
AppConstants
.
OS_TARGET
Locales
.
getLanguageTag
(
Locale
.
getDefault
(
)
)
)
;
Tabs
.
getInstance
(
)
.
loadUrl
(
link
Tabs
.
LOADURL_NEW_TAB
|
Tabs
.
LOADURL_USER_ENTERED
)
;
return
true
;
}
}
