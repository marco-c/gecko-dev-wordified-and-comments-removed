package
org
.
mozilla
.
gecko
.
mma
;
import
android
.
app
.
Activity
;
import
android
.
content
.
Context
;
import
android
.
content
.
SharedPreferences
;
import
android
.
content
.
pm
.
PackageManager
;
import
com
.
leanplum
.
Leanplum
;
import
com
.
leanplum
.
LeanplumActivityHelper
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
MmaConstants
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
import
java
.
util
.
UUID
;
public
class
MmaLeanplumImp
implements
MmaInterface
{
private
static
final
String
KEY_ANDROID_PREF_STRING_LEANPLUM_DEVICE_ID
=
"
android
.
not_a_preference
.
leanplum
.
device_id
"
;
Override
public
void
init
(
final
Activity
activity
)
{
if
(
activity
=
=
null
)
{
return
;
}
Leanplum
.
setApplicationContext
(
activity
.
getApplicationContext
(
)
)
;
LeanplumActivityHelper
.
enableLifecycleCallbacks
(
activity
.
getApplication
(
)
)
;
if
(
AppConstants
.
MOZILLA_OFFICIAL
)
{
Leanplum
.
setAppIdForProductionMode
(
MmaConstants
.
MOZ_LEANPLUM_SDK_CLIENTID
MmaConstants
.
MOZ_LEANPLUM_SDK_KEY
)
;
}
else
{
Leanplum
.
setAppIdForDevelopmentMode
(
MmaConstants
.
MOZ_LEANPLUM_SDK_CLIENTID
MmaConstants
.
MOZ_LEANPLUM_SDK_KEY
)
;
}
Map
<
String
Object
>
attributes
=
new
HashMap
<
>
(
)
;
boolean
installedFocus
=
isPackageInstalled
(
activity
"
org
.
mozilla
.
focus
"
)
;
boolean
installedKlar
=
isPackageInstalled
(
activity
"
org
.
mozilla
.
klar
"
)
;
if
(
installedFocus
|
|
installedKlar
)
{
attributes
.
put
(
"
focus
"
true
)
;
}
else
{
attributes
.
put
(
"
focus
"
false
)
;
}
final
SharedPreferences
sharedPreferences
=
activity
.
getPreferences
(
0
)
;
String
deviceId
=
sharedPreferences
.
getString
(
KEY_ANDROID_PREF_STRING_LEANPLUM_DEVICE_ID
null
)
;
if
(
deviceId
=
=
null
)
{
deviceId
=
UUID
.
randomUUID
(
)
.
toString
(
)
;
sharedPreferences
.
edit
(
)
.
putString
(
KEY_ANDROID_PREF_STRING_LEANPLUM_DEVICE_ID
deviceId
)
.
apply
(
)
;
}
Leanplum
.
setDeviceId
(
deviceId
)
;
Leanplum
.
start
(
activity
attributes
)
;
activity
.
runOnUiThread
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
LeanplumActivityHelper
.
onResume
(
activity
)
;
}
}
)
;
}
Override
public
void
start
(
Context
context
)
{
}
Override
public
void
event
(
String
leanplumEvent
)
{
Leanplum
.
track
(
leanplumEvent
)
;
}
Override
public
void
event
(
String
leanplumEvent
double
value
)
{
Leanplum
.
track
(
leanplumEvent
value
)
;
}
Override
public
void
stop
(
)
{
Leanplum
.
stop
(
)
;
}
private
static
boolean
isPackageInstalled
(
final
Context
context
String
packageName
)
{
try
{
PackageManager
pm
=
context
.
getPackageManager
(
)
;
pm
.
getPackageInfo
(
packageName
0
)
;
return
true
;
}
catch
(
PackageManager
.
NameNotFoundException
e
)
{
return
false
;
}
}
}
