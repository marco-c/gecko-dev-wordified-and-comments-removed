package
org
.
mozilla
.
gecko
.
mma
;
import
android
.
app
.
Activity
;
import
android
.
content
.
Context
;
import
android
.
content
.
Intent
;
import
android
.
content
.
pm
.
PackageManager
;
import
android
.
content
.
pm
.
ResolveInfo
;
import
android
.
net
.
Uri
;
import
android
.
text
.
TextUtils
;
import
com
.
leanplum
.
Leanplum
;
import
com
.
leanplum
.
LeanplumActivityHelper
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
MmaConstants
;
import
org
.
mozilla
.
gecko
.
util
.
ContextUtils
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
Map
;
import
static
org
.
mozilla
.
gecko
.
mma
.
MmaDelegate
.
LAUNCH_BUT_NOT_DEFAULT_BROWSER
;
public
class
MmaLeanplumImp
implements
MmaInterface
{
Override
public
void
init
(
final
Activity
activity
)
{
if
(
activity
=
=
null
)
{
return
;
}
Leanplum
.
setApplicationContext
(
activity
.
getApplicationContext
(
)
)
;
LeanplumActivityHelper
.
enableLifecycleCallbacks
(
activity
.
getApplication
(
)
)
;
if
(
AppConstants
.
MOZILLA_OFFICIAL
)
{
Leanplum
.
setAppIdForProductionMode
(
MmaConstants
.
MOZ_LEANPLUM_SDK_CLIENTID
MmaConstants
.
MOZ_LEANPLUM_SDK_KEY
)
;
}
else
{
Leanplum
.
setAppIdForDevelopmentMode
(
MmaConstants
.
MOZ_LEANPLUM_SDK_CLIENTID
MmaConstants
.
MOZ_LEANPLUM_SDK_KEY
)
;
}
Map
<
String
Object
>
attributes
=
new
HashMap
<
>
(
)
;
boolean
installedFocus
=
ContextUtils
.
isPackageInstalled
(
activity
"
org
.
mozilla
.
focus
"
)
;
boolean
installedKlar
=
ContextUtils
.
isPackageInstalled
(
activity
"
org
.
mozilla
.
klar
"
)
;
if
(
installedFocus
|
|
installedKlar
)
{
attributes
.
put
(
"
focus
"
"
installed
"
)
;
}
Leanplum
.
start
(
activity
attributes
)
;
if
(
!
isDefaultBrowser
(
activity
)
)
{
Leanplum
.
track
(
LAUNCH_BUT_NOT_DEFAULT_BROWSER
)
;
}
activity
.
runOnUiThread
(
new
Runnable
(
)
{
Override
public
void
run
(
)
{
LeanplumActivityHelper
.
onResume
(
activity
)
;
}
}
)
;
}
Override
public
void
start
(
Context
context
)
{
}
Override
public
void
track
(
String
leanplumEvent
)
{
Leanplum
.
track
(
leanplumEvent
)
;
}
Override
public
void
track
(
String
leanplumEvent
double
value
)
{
Leanplum
.
track
(
leanplumEvent
value
)
;
}
Override
public
void
stop
(
)
{
Leanplum
.
stop
(
)
;
}
private
boolean
isDefaultBrowser
(
Context
context
)
{
final
Intent
viewIntent
=
new
Intent
(
Intent
.
ACTION_VIEW
Uri
.
parse
(
"
http
:
/
/
www
.
mozilla
.
org
"
)
)
;
final
ResolveInfo
info
=
context
.
getPackageManager
(
)
.
resolveActivity
(
viewIntent
PackageManager
.
MATCH_DEFAULT_ONLY
)
;
if
(
info
=
=
null
)
{
return
false
;
}
final
String
packageName
=
info
.
activityInfo
.
packageName
;
return
(
TextUtils
.
equals
(
packageName
context
.
getPackageName
(
)
)
)
;
}
}
