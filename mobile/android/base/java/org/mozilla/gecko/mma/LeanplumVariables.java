package
org
.
mozilla
.
gecko
.
mma
;
import
android
.
content
.
Context
;
import
android
.
content
.
res
.
Resources
;
import
android
.
graphics
.
Bitmap
;
import
android
.
graphics
.
BitmapFactory
;
import
android
.
support
.
annotation
.
DrawableRes
;
import
android
.
support
.
annotation
.
NonNull
;
import
com
.
leanplum
.
annotations
.
Variable
;
import
org
.
mozilla
.
gecko
.
R
;
import
java
.
lang
.
reflect
.
Field
;
public
class
LeanplumVariables
{
private
static
LeanplumVariables
INSTANCE
;
private
static
Resources
appResources
;
private
static
final
String
FIRSTRUN_WELCOME_PANEL_GROUP_NAME
=
"
FirstRun
Welcome
Panel
"
;
private
static
final
String
FIRSTRUN_PRIVACY_PANEL_GROUP_NAME
=
"
FirstRun
Privacy
Panel
"
;
private
static
final
String
FIRSTRUN_CUSTOMIZE_PANEL_GROUP_NAME
=
"
FirstRun
Customize
Panel
"
;
private
static
final
String
FIRSTRUN_SYNC_PANEL_GROUP_NAME
=
"
FirstRun
Sync
Panel
"
;
Variable
(
group
=
FIRSTRUN_WELCOME_PANEL_GROUP_NAME
)
public
static
String
welcomePanelTitle
;
Variable
(
group
=
FIRSTRUN_WELCOME_PANEL_GROUP_NAME
)
public
static
String
welcomePanelMessage
;
Variable
(
group
=
FIRSTRUN_WELCOME_PANEL_GROUP_NAME
)
public
static
String
welcomePanelSubtext
;
DrawableRes
private
static
int
welcomeDrawableId
;
Variable
(
group
=
FIRSTRUN_PRIVACY_PANEL_GROUP_NAME
)
public
static
String
privacyPanelTitle
;
Variable
(
group
=
FIRSTRUN_PRIVACY_PANEL_GROUP_NAME
)
public
static
String
privacyPanelMessage
;
Variable
(
group
=
FIRSTRUN_PRIVACY_PANEL_GROUP_NAME
)
public
static
String
privacyPanelSubtext
;
DrawableRes
private
static
int
privacyDrawableId
;
Variable
(
group
=
FIRSTRUN_CUSTOMIZE_PANEL_GROUP_NAME
)
public
static
String
customizePanelTitle
;
Variable
(
group
=
FIRSTRUN_CUSTOMIZE_PANEL_GROUP_NAME
)
public
static
String
customizePanelMessage
;
Variable
(
group
=
FIRSTRUN_CUSTOMIZE_PANEL_GROUP_NAME
)
public
static
String
customizePanelSubtext
;
DrawableRes
private
static
int
customizingDrawableId
;
Variable
(
group
=
FIRSTRUN_SYNC_PANEL_GROUP_NAME
)
public
static
String
syncPanelTitle
;
Variable
(
group
=
FIRSTRUN_SYNC_PANEL_GROUP_NAME
)
public
static
String
syncPanelMessage
;
Variable
(
group
=
FIRSTRUN_SYNC_PANEL_GROUP_NAME
)
public
static
String
syncPanelSubtext
;
DrawableRes
private
static
int
syncDrawableId
;
public
static
LeanplumVariables
getInstance
(
Context
appContext
)
{
if
(
INSTANCE
=
=
null
)
{
INSTANCE
=
new
LeanplumVariables
(
appContext
)
;
}
return
INSTANCE
;
}
private
LeanplumVariables
(
NonNull
Context
context
)
{
appResources
=
context
.
getResources
(
)
;
welcomePanelTitle
=
appResources
.
getString
(
R
.
string
.
firstrun_panel_title_welcome
)
;
welcomePanelMessage
=
appResources
.
getString
(
R
.
string
.
firstrun_urlbar_message
)
;
welcomePanelSubtext
=
appResources
.
getString
(
R
.
string
.
firstrun_urlbar_subtext
)
;
welcomeDrawableId
=
R
.
drawable
.
firstrun_welcome
;
privacyPanelTitle
=
appResources
.
getString
(
R
.
string
.
firstrun_panel_title_privacy
)
;
privacyPanelMessage
=
appResources
.
getString
(
R
.
string
.
firstrun_privacy_message
)
;
privacyPanelSubtext
=
appResources
.
getString
(
R
.
string
.
firstrun_privacy_subtext
)
;
privacyDrawableId
=
R
.
drawable
.
firstrun_private
;
customizePanelTitle
=
appResources
.
getString
(
R
.
string
.
firstrun_panel_title_customize
)
;
customizePanelMessage
=
appResources
.
getString
(
R
.
string
.
firstrun_customize_message
)
;
customizePanelSubtext
=
appResources
.
getString
(
R
.
string
.
firstrun_customize_subtext
)
;
customizingDrawableId
=
R
.
drawable
.
firstrun_data
;
syncPanelTitle
=
appResources
.
getString
(
R
.
string
.
firstrun_sync_title
)
;
syncPanelMessage
=
appResources
.
getString
(
R
.
string
.
firstrun_sync_message
)
;
syncPanelSubtext
=
appResources
.
getString
(
R
.
string
.
firstrun_sync_subtext
)
;
syncDrawableId
=
R
.
drawable
.
firstrun_sync
;
}
public
static
Bitmap
getWelcomeImage
(
)
{
return
getBitmapFromMmaVar
(
welcomeDrawableId
)
;
}
public
static
Bitmap
getPrivacyImage
(
)
{
return
getBitmapFromMmaVar
(
privacyDrawableId
)
;
}
public
static
Bitmap
getCustomizingImage
(
)
{
return
getBitmapFromMmaVar
(
customizingDrawableId
)
;
}
public
static
Bitmap
getSyncImage
(
)
{
return
getBitmapFromMmaVar
(
syncDrawableId
)
;
}
private
static
Bitmap
getBitmapFromMmaVar
(
DrawableRes
final
int
drawableRes
)
{
return
BitmapFactory
.
decodeResource
(
appResources
drawableRes
)
;
}
}
