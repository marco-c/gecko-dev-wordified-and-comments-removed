package
org
.
mozilla
.
gecko
.
telemetry
.
measurements
;
import
android
.
content
.
SharedPreferences
;
import
android
.
support
.
annotation
.
NonNull
;
import
android
.
support
.
annotation
.
VisibleForTesting
;
import
org
.
mozilla
.
gecko
.
sync
.
ExtendedJSONObject
;
import
java
.
util
.
Collections
;
import
java
.
util
.
HashSet
;
import
java
.
util
.
Set
;
public
class
SearchCountMeasurements
{
VisibleForTesting
static
final
String
PREF_SEARCH_KEYSET
=
"
measurements
-
search
-
count
-
keyset
"
;
private
static
final
String
PREF_SEARCH_PREFIX
=
"
measurements
-
search
-
count
-
engine
-
"
;
private
SearchCountMeasurements
(
)
{
}
public
static
synchronized
void
incrementSearch
(
NonNull
final
SharedPreferences
prefs
NonNull
final
String
engineIdentifier
NonNull
final
String
where
)
{
final
String
engineWhereStr
=
engineIdentifier
+
"
.
"
+
where
;
final
String
key
=
getEngineSearchCountKey
(
engineWhereStr
)
;
final
int
count
=
prefs
.
getInt
(
key
0
)
;
prefs
.
edit
(
)
.
putInt
(
key
count
+
1
)
.
apply
(
)
;
unionKeyToSearchKeyset
(
prefs
engineWhereStr
)
;
}
private
static
void
unionKeyToSearchKeyset
(
NonNull
final
SharedPreferences
prefs
NonNull
final
String
key
)
{
final
Set
<
String
>
keysFromPrefs
=
prefs
.
getStringSet
(
PREF_SEARCH_KEYSET
Collections
.
<
String
>
emptySet
(
)
)
;
if
(
keysFromPrefs
.
contains
(
key
)
)
{
return
;
}
final
Set
<
String
>
keysToSave
=
new
HashSet
<
>
(
keysFromPrefs
)
;
keysToSave
.
add
(
key
)
;
prefs
.
edit
(
)
.
putStringSet
(
PREF_SEARCH_KEYSET
keysToSave
)
.
apply
(
)
;
}
public
static
synchronized
ExtendedJSONObject
getAndZeroSearch
(
NonNull
final
SharedPreferences
prefs
)
{
final
ExtendedJSONObject
out
=
new
ExtendedJSONObject
(
)
;
final
SharedPreferences
.
Editor
editor
=
prefs
.
edit
(
)
;
final
Set
<
String
>
keysFromPrefs
=
prefs
.
getStringSet
(
PREF_SEARCH_KEYSET
Collections
.
<
String
>
emptySet
(
)
)
;
for
(
final
String
engineWhereStr
:
keysFromPrefs
)
{
final
String
key
=
getEngineSearchCountKey
(
engineWhereStr
)
;
out
.
put
(
engineWhereStr
prefs
.
getInt
(
key
0
)
)
;
editor
.
remove
(
key
)
;
}
editor
.
remove
(
PREF_SEARCH_KEYSET
)
.
apply
(
)
;
return
out
;
}
VisibleForTesting
static
String
getEngineSearchCountKey
(
final
String
engineWhereStr
)
{
return
PREF_SEARCH_PREFIX
+
engineWhereStr
;
}
}
