package
org
.
mozilla
.
gecko
.
updater
;
import
android
.
content
.
SharedPreferences
;
import
android
.
content
.
res
.
AssetManager
;
import
android
.
os
.
Bundle
;
import
android
.
util
.
Log
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
BrowserApp
;
import
org
.
mozilla
.
gecko
.
GeckoSharedPrefs
;
import
org
.
mozilla
.
gecko
.
preferences
.
GeckoPreferences
;
import
org
.
mozilla
.
gecko
.
util
.
IOUtils
;
import
org
.
mozilla
.
gecko
.
util
.
StrictModeContext
;
import
java
.
io
.
File
;
import
java
.
io
.
FileOutputStream
;
import
java
.
io
.
IOException
;
import
java
.
io
.
InputStream
;
import
java
.
io
.
OutputStream
;
public
class
PostUpdateHandler
{
private
static
final
String
LOGTAG
=
"
GeckoPostUpdateHandler
"
;
private
static
final
boolean
DEBUG
=
false
;
SuppressWarnings
(
"
try
"
)
public
void
onCreate
(
final
BrowserApp
browserApp
final
Bundle
savedInstanceState
)
{
try
(
StrictModeContext
unused
=
StrictModeContext
.
allowDiskWrites
(
)
)
{
final
SharedPreferences
prefs
=
GeckoSharedPrefs
.
forApp
(
browserApp
)
;
if
(
!
AppConstants
.
MOZ_APP_BUILDID
.
equals
(
prefs
.
getString
(
GeckoPreferences
.
PREFS_APP_UPDATE_LAST_BUILD_ID
null
)
)
)
{
if
(
DEBUG
)
{
Log
.
d
(
LOGTAG
"
Build
ID
changed
since
last
start
:
'
"
+
AppConstants
.
MOZ_APP_BUILDID
+
"
'
'
"
+
prefs
.
getString
(
GeckoPreferences
.
PREFS_APP_UPDATE_LAST_BUILD_ID
null
)
+
"
'
"
)
;
}
copyFeaturesFromAPK
(
browserApp
)
;
}
}
}
private
void
copyFeaturesFromAPK
(
BrowserApp
browserApp
)
{
if
(
DEBUG
)
{
Log
.
d
(
LOGTAG
"
Copying
system
add
-
ons
from
APK
to
dataDir
"
)
;
}
final
String
dataDir
=
browserApp
.
getApplicationInfo
(
)
.
dataDir
;
final
SharedPreferences
prefs
=
GeckoSharedPrefs
.
forApp
(
browserApp
)
;
final
AssetManager
assetManager
=
browserApp
.
getAssets
(
)
;
try
{
final
String
[
]
assetNames
=
assetManager
.
list
(
"
features
"
)
;
for
(
int
i
=
0
;
i
<
assetNames
.
length
;
i
+
+
)
{
final
String
assetPath
=
"
features
/
"
+
assetNames
[
i
]
;
if
(
DEBUG
)
{
Log
.
d
(
LOGTAG
"
Copying
'
"
+
assetPath
+
"
'
from
APK
to
dataDir
"
)
;
}
final
InputStream
assetStream
=
assetManager
.
open
(
assetPath
)
;
final
File
outFile
=
getDataFile
(
dataDir
assetPath
)
;
if
(
outFile
=
=
null
)
{
continue
;
}
final
OutputStream
outStream
=
new
FileOutputStream
(
outFile
)
;
try
{
IOUtils
.
copy
(
assetStream
outStream
)
;
}
catch
(
IOException
e
)
{
Log
.
e
(
LOGTAG
"
Error
copying
'
"
+
assetPath
+
"
'
from
APK
to
dataDir
"
)
;
}
finally
{
outStream
.
close
(
)
;
}
}
}
catch
(
IOException
e
)
{
Log
.
e
(
LOGTAG
"
Error
retrieving
packaged
system
add
-
ons
from
APK
"
e
)
;
}
prefs
.
edit
(
)
.
putString
(
GeckoPreferences
.
PREFS_APP_UPDATE_LAST_BUILD_ID
AppConstants
.
MOZ_APP_BUILDID
)
.
apply
(
)
;
}
private
File
getDataFile
(
final
String
dataDir
final
String
name
)
{
File
outFile
=
new
File
(
dataDir
name
)
;
File
dir
=
outFile
.
getParentFile
(
)
;
if
(
!
dir
.
exists
(
)
)
{
if
(
DEBUG
)
{
Log
.
d
(
LOGTAG
"
Creating
"
+
dir
.
getAbsolutePath
(
)
)
;
}
if
(
!
dir
.
mkdirs
(
)
)
{
Log
.
e
(
LOGTAG
"
Unable
to
create
directories
:
"
+
dir
.
getAbsolutePath
(
)
)
;
return
null
;
}
}
return
outFile
;
}
}
