package
org
.
mozilla
.
gecko
.
icons
.
loader
;
import
android
.
content
.
ContentResolver
;
import
android
.
content
.
Context
;
import
android
.
graphics
.
Bitmap
;
import
org
.
mozilla
.
gecko
.
GeckoProfile
;
import
org
.
mozilla
.
gecko
.
db
.
BrowserDB
;
import
org
.
mozilla
.
gecko
.
icons
.
decoders
.
LoadFaviconResult
;
import
org
.
mozilla
.
gecko
.
icons
.
IconRequest
;
import
org
.
mozilla
.
gecko
.
icons
.
IconResponse
;
public
class
LegacyLoader
implements
IconLoader
{
Override
public
IconResponse
load
(
IconRequest
request
)
{
if
(
!
request
.
shouldSkipNetwork
(
)
)
{
return
null
;
}
if
(
request
.
shouldSkipDisk
(
)
)
{
return
null
;
}
final
Bitmap
bitmap
=
loadBitmapFromDatabase
(
request
)
;
if
(
bitmap
=
=
null
)
{
return
null
;
}
return
IconResponse
.
create
(
bitmap
)
;
}
Bitmap
loadBitmapFromDatabase
(
IconRequest
request
)
{
final
Context
context
=
request
.
getContext
(
)
;
final
ContentResolver
contentResolver
=
context
.
getContentResolver
(
)
;
final
BrowserDB
db
=
GeckoProfile
.
get
(
context
)
.
getDB
(
)
;
final
String
legacyFaviconUrl
=
db
.
getFaviconURLFromPageURL
(
contentResolver
request
.
getPageUrl
(
)
)
;
if
(
legacyFaviconUrl
=
=
null
)
{
return
null
;
}
final
LoadFaviconResult
result
=
db
.
getFaviconForUrl
(
context
context
.
getContentResolver
(
)
legacyFaviconUrl
)
;
if
(
result
=
=
null
)
{
return
null
;
}
return
result
.
getBestBitmap
(
request
.
getTargetSize
(
)
)
;
}
}
