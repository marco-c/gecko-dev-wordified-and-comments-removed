package
org
.
mozilla
.
gecko
.
icons
;
import
android
.
graphics
.
Bitmap
;
import
android
.
support
.
annotation
.
NonNull
;
import
android
.
support
.
annotation
.
Nullable
;
import
android
.
text
.
TextUtils
;
public
class
IconResponse
{
public
static
IconResponse
create
(
NonNull
Bitmap
bitmap
)
{
return
new
IconResponse
(
bitmap
)
;
}
public
static
IconResponse
createFromNetwork
(
NonNull
Bitmap
bitmap
NonNull
String
url
)
{
final
IconResponse
response
=
new
IconResponse
(
bitmap
)
;
response
.
url
=
url
;
response
.
fromNetwork
=
true
;
return
response
;
}
public
static
IconResponse
createGenerated
(
NonNull
Bitmap
bitmap
int
color
)
{
final
IconResponse
response
=
new
IconResponse
(
bitmap
)
;
response
.
color
=
color
;
response
.
generated
=
true
;
return
response
;
}
public
static
IconResponse
createFromMemory
(
NonNull
Bitmap
bitmap
NonNull
String
url
int
color
)
{
final
IconResponse
response
=
new
IconResponse
(
bitmap
)
;
response
.
url
=
url
;
response
.
color
=
color
;
response
.
fromMemory
=
true
;
return
response
;
}
public
static
IconResponse
createFromDisk
(
NonNull
Bitmap
bitmap
NonNull
String
url
)
{
final
IconResponse
response
=
new
IconResponse
(
bitmap
)
;
response
.
url
=
url
;
response
.
fromDisk
=
true
;
return
response
;
}
private
Bitmap
bitmap
;
private
int
color
;
private
boolean
fromNetwork
;
private
boolean
fromMemory
;
private
boolean
fromDisk
;
private
boolean
generated
;
private
String
url
;
private
IconResponse
(
Bitmap
bitmap
)
{
if
(
bitmap
=
=
null
)
{
throw
new
NullPointerException
(
"
Bitmap
is
null
"
)
;
}
this
.
bitmap
=
bitmap
;
this
.
color
=
0
;
this
.
url
=
null
;
this
.
fromNetwork
=
false
;
this
.
fromMemory
=
false
;
this
.
fromDisk
=
false
;
this
.
generated
=
false
;
}
NonNull
public
Bitmap
getBitmap
(
)
{
return
bitmap
;
}
public
int
getColor
(
)
{
return
color
;
}
public
boolean
hasColor
(
)
{
return
color
!
=
0
;
}
public
boolean
isFromNetwork
(
)
{
return
fromNetwork
;
}
public
boolean
isGenerated
(
)
{
return
generated
;
}
public
boolean
isFromMemory
(
)
{
return
fromMemory
;
}
public
boolean
isFromDisk
(
)
{
return
fromDisk
;
}
Nullable
public
String
getUrl
(
)
{
return
url
;
}
public
boolean
hasUrl
(
)
{
return
!
TextUtils
.
isEmpty
(
url
)
;
}
public
void
updateColor
(
int
color
)
{
this
.
color
=
color
;
}
public
void
updateBitmap
(
Bitmap
bitmap
)
{
this
.
bitmap
=
bitmap
;
}
}
