package
org
.
mozilla
.
gecko
.
icons
;
import
android
.
support
.
annotation
.
IntDef
;
import
android
.
support
.
annotation
.
NonNull
;
import
android
.
support
.
annotation
.
Nullable
;
import
android
.
support
.
annotation
.
VisibleForTesting
;
public
class
IconDescriptor
{
IntDef
(
{
TYPE_GENERIC
TYPE_FAVICON
TYPE_TOUCHICON
TYPE_LOOKUP
}
)
interface
IconType
{
}
VisibleForTesting
static
final
int
TYPE_GENERIC
=
0
;
VisibleForTesting
static
final
int
TYPE_LOOKUP
=
1
;
VisibleForTesting
static
final
int
TYPE_FAVICON
=
5
;
VisibleForTesting
static
final
int
TYPE_TOUCHICON
=
10
;
private
final
String
url
;
private
final
int
size
;
private
final
String
mimeType
;
private
final
int
type
;
public
static
IconDescriptor
createGenericIcon
(
NonNull
String
url
)
{
return
new
IconDescriptor
(
TYPE_GENERIC
url
0
null
)
;
}
public
static
IconDescriptor
createFavicon
(
NonNull
String
url
int
size
String
mimeType
)
{
return
new
IconDescriptor
(
TYPE_FAVICON
url
size
mimeType
)
;
}
public
static
IconDescriptor
createTouchicon
(
NonNull
String
url
int
size
String
mimeType
)
{
return
new
IconDescriptor
(
TYPE_TOUCHICON
url
size
mimeType
)
;
}
public
static
IconDescriptor
createLookupIcon
(
NonNull
String
url
)
{
return
new
IconDescriptor
(
TYPE_LOOKUP
url
0
null
)
;
}
private
IconDescriptor
(
IconType
int
type
NonNull
String
url
int
size
String
mimeType
)
{
this
.
type
=
type
;
this
.
url
=
url
;
this
.
size
=
size
;
this
.
mimeType
=
mimeType
;
}
public
String
getUrl
(
)
{
return
url
;
}
public
int
getSize
(
)
{
return
size
;
}
IconType
public
int
getType
(
)
{
return
type
;
}
Nullable
public
String
getMimeType
(
)
{
return
mimeType
;
}
}
