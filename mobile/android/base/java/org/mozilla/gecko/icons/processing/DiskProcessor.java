package
org
.
mozilla
.
gecko
.
icons
.
processing
;
import
org
.
mozilla
.
gecko
.
icons
.
IconRequest
;
import
org
.
mozilla
.
gecko
.
icons
.
IconResponse
;
import
org
.
mozilla
.
gecko
.
icons
.
storage
.
DiskStorage
;
import
org
.
mozilla
.
gecko
.
util
.
StringUtils
;
public
class
DiskProcessor
implements
Processor
{
Override
public
void
process
(
IconRequest
request
IconResponse
response
)
{
if
(
request
.
shouldSkipDisk
(
)
)
{
return
;
}
if
(
!
response
.
hasUrl
(
)
|
|
!
StringUtils
.
isHttpOrHttps
(
response
.
getUrl
(
)
)
)
{
return
;
}
final
DiskStorage
storage
=
DiskStorage
.
get
(
request
.
getContext
(
)
)
;
if
(
response
.
isFromNetwork
(
)
)
{
storage
.
putIcon
(
response
)
;
}
if
(
response
.
isFromMemory
(
)
|
|
response
.
isFromDisk
(
)
|
|
response
.
isFromNetwork
(
)
)
{
storage
.
putMapping
(
request
response
.
getUrl
(
)
)
;
}
}
}
