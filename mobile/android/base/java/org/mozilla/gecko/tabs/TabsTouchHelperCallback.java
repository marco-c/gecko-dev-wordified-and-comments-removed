package
org
.
mozilla
.
gecko
.
tabs
;
import
android
.
graphics
.
Canvas
;
import
android
.
support
.
v7
.
widget
.
RecyclerView
;
import
android
.
support
.
v7
.
widget
.
helper
.
ItemTouchHelper
;
import
android
.
view
.
View
;
class
TabsTouchHelperCallback
extends
ItemTouchHelper
.
Callback
{
private
final
DismissListener
dismissListener
;
interface
DismissListener
{
void
onItemDismiss
(
View
view
)
;
}
public
TabsTouchHelperCallback
(
DismissListener
dismissListener
)
{
this
.
dismissListener
=
dismissListener
;
}
Override
public
boolean
isItemViewSwipeEnabled
(
)
{
return
true
;
}
Override
public
int
getMovementFlags
(
RecyclerView
recyclerView
RecyclerView
.
ViewHolder
viewHolder
)
{
return
makeFlag
(
ItemTouchHelper
.
ACTION_STATE_SWIPE
ItemTouchHelper
.
LEFT
|
ItemTouchHelper
.
RIGHT
)
;
}
Override
public
void
onSwiped
(
RecyclerView
.
ViewHolder
viewHolder
int
i
)
{
dismissListener
.
onItemDismiss
(
viewHolder
.
itemView
)
;
}
Override
public
boolean
onMove
(
RecyclerView
recyclerView
RecyclerView
.
ViewHolder
viewHolder
RecyclerView
.
ViewHolder
target
)
{
return
false
;
}
Override
public
void
onChildDraw
(
Canvas
c
RecyclerView
recyclerView
RecyclerView
.
ViewHolder
viewHolder
float
dX
float
dY
int
actionState
boolean
isCurrentlyActive
)
{
if
(
actionState
!
=
ItemTouchHelper
.
ACTION_STATE_SWIPE
)
{
return
;
}
super
.
onChildDraw
(
c
recyclerView
viewHolder
dX
dY
actionState
isCurrentlyActive
)
;
viewHolder
.
itemView
.
setAlpha
(
Math
.
max
(
0
.
1f
Math
.
min
(
1f
1f
-
2f
*
Math
.
abs
(
dX
)
/
viewHolder
.
itemView
.
getWidth
(
)
)
)
)
;
}
public
void
clearView
(
RecyclerView
recyclerView
RecyclerView
.
ViewHolder
viewHolder
)
{
super
.
clearView
(
recyclerView
viewHolder
)
;
viewHolder
.
itemView
.
setAlpha
(
1
)
;
}
}
