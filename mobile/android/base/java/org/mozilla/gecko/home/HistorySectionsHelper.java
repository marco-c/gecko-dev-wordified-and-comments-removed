package
org
.
mozilla
.
gecko
.
home
;
import
android
.
content
.
res
.
Resources
;
import
org
.
mozilla
.
gecko
.
home
.
CombinedHistoryPanel
.
SectionHeader
;
import
org
.
mozilla
.
gecko
.
R
;
import
java
.
util
.
Calendar
;
import
java
.
util
.
Locale
;
public
class
HistorySectionsHelper
{
private
static
final
long
MS_PER_DAY
=
86400000
;
private
static
final
long
MS_PER_WEEK
=
MS_PER_DAY
*
7
;
public
static
class
SectionDateRange
{
public
final
long
start
;
public
final
long
end
;
public
final
String
displayName
;
private
SectionDateRange
(
long
start
long
end
String
displayName
)
{
this
.
start
=
start
;
this
.
end
=
end
;
this
.
displayName
=
displayName
;
}
}
public
static
void
updateRecentSectionOffset
(
final
Resources
res
SectionDateRange
[
]
sectionsArray
)
{
final
long
now
=
System
.
currentTimeMillis
(
)
;
final
Calendar
cal
=
Calendar
.
getInstance
(
)
;
cal
.
set
(
Calendar
.
HOUR_OF_DAY
0
)
;
cal
.
set
(
Calendar
.
MINUTE
0
)
;
cal
.
set
(
Calendar
.
SECOND
0
)
;
cal
.
set
(
Calendar
.
MILLISECOND
1
)
;
final
long
currentDayMS
=
cal
.
getTimeInMillis
(
)
;
sectionsArray
[
SectionHeader
.
TODAY
.
ordinal
(
)
]
=
new
SectionDateRange
(
currentDayMS
now
res
.
getString
(
R
.
string
.
history_today_section
)
)
;
sectionsArray
[
SectionHeader
.
YESTERDAY
.
ordinal
(
)
]
=
new
SectionDateRange
(
currentDayMS
-
MS_PER_DAY
currentDayMS
res
.
getString
(
R
.
string
.
history_yesterday_section
)
)
;
sectionsArray
[
SectionHeader
.
WEEK
.
ordinal
(
)
]
=
new
SectionDateRange
(
currentDayMS
-
MS_PER_WEEK
now
res
.
getString
(
R
.
string
.
history_week_section
)
)
;
cal
.
add
(
Calendar
.
MONTH
1
)
;
cal
.
set
(
Calendar
.
DAY_OF_MONTH
cal
.
getMinimum
(
Calendar
.
DAY_OF_MONTH
)
)
;
for
(
int
i
=
SectionHeader
.
THIS_MONTH
.
ordinal
(
)
;
i
<
SectionHeader
.
OLDER_THAN_SIX_MONTHS
.
ordinal
(
)
;
i
+
+
)
{
final
long
end
=
cal
.
getTimeInMillis
(
)
;
cal
.
add
(
Calendar
.
MONTH
-
1
)
;
final
long
start
=
cal
.
getTimeInMillis
(
)
;
final
String
displayName
=
cal
.
getDisplayName
(
Calendar
.
MONTH
Calendar
.
LONG
Locale
.
getDefault
(
)
)
;
sectionsArray
[
i
]
=
new
SectionDateRange
(
start
end
displayName
)
;
}
sectionsArray
[
SectionHeader
.
OLDER_THAN_SIX_MONTHS
.
ordinal
(
)
]
=
new
SectionDateRange
(
0L
cal
.
getTimeInMillis
(
)
res
.
getString
(
R
.
string
.
history_older_section
)
)
;
}
}
