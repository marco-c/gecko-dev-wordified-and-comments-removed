package
org
.
mozilla
.
gecko
;
import
android
.
support
.
v7
.
view
.
ActionMode
;
import
android
.
view
.
Gravity
;
import
android
.
view
.
MenuInflater
;
import
android
.
view
.
MenuItem
;
import
android
.
view
.
View
;
import
android
.
widget
.
Toast
;
import
org
.
mozilla
.
gecko
.
menu
.
GeckoMenu
;
import
org
.
mozilla
.
gecko
.
menu
.
GeckoMenuItem
;
import
org
.
mozilla
.
gecko
.
widget
.
GeckoPopupMenu
;
class
ActionModeCompat
extends
ActionMode
implements
GeckoPopupMenu
.
OnMenuItemClickListener
GeckoPopupMenu
.
OnMenuItemLongClickListener
View
.
OnClickListener
{
private
final
String
LOGTAG
=
"
GeckoActionModeCompat
"
;
private
final
Callback
mCallback
;
private
final
ActionModeCompatView
mView
;
private
final
Presenter
mPresenter
;
public
static
interface
Presenter
{
public
void
startActionModeCompat
(
final
Callback
callback
)
;
public
void
endActionModeCompat
(
)
;
}
public
ActionModeCompat
(
Presenter
presenter
Callback
callback
ActionModeCompatView
view
)
{
mPresenter
=
presenter
;
mCallback
=
callback
;
mView
=
view
;
mView
.
initForMode
(
this
)
;
}
public
void
finish
(
)
{
final
GeckoMenu
menu
=
mView
.
getMenu
(
)
;
menu
.
clear
(
)
;
menu
.
close
(
)
;
if
(
mCallback
!
=
null
)
{
mCallback
.
onDestroyActionMode
(
this
)
;
}
}
public
CharSequence
getTitle
(
)
{
return
mView
.
getTitle
(
)
;
}
Override
public
CharSequence
getSubtitle
(
)
{
throw
new
UnsupportedOperationException
(
"
This
method
is
not
supported
by
this
class
"
)
;
}
Override
public
View
getCustomView
(
)
{
return
mView
;
}
Override
public
MenuInflater
getMenuInflater
(
)
{
throw
new
UnsupportedOperationException
(
"
This
method
is
not
supported
by
this
class
"
)
;
}
public
void
setTitle
(
CharSequence
title
)
{
mView
.
setTitle
(
title
)
;
}
public
void
setTitle
(
int
resId
)
{
mView
.
setTitle
(
resId
)
;
}
Override
public
void
setSubtitle
(
CharSequence
subtitle
)
{
throw
new
UnsupportedOperationException
(
"
This
method
is
not
supported
by
this
class
"
)
;
}
Override
public
void
setSubtitle
(
int
resId
)
{
throw
new
UnsupportedOperationException
(
"
This
method
is
not
supported
by
this
class
"
)
;
}
Override
public
void
setCustomView
(
View
view
)
{
throw
new
UnsupportedOperationException
(
"
This
method
is
not
supported
by
this
class
"
)
;
}
public
GeckoMenu
getMenu
(
)
{
return
mView
.
getMenu
(
)
;
}
public
void
invalidate
(
)
{
if
(
mCallback
!
=
null
)
{
mCallback
.
onPrepareActionMode
(
this
mView
.
getMenu
(
)
)
;
}
mView
.
invalidate
(
)
;
}
public
void
animateIn
(
)
{
mView
.
animateIn
(
)
;
}
Override
public
boolean
onMenuItemClick
(
MenuItem
item
)
{
if
(
mCallback
!
=
null
)
{
return
mCallback
.
onActionItemClicked
(
this
item
)
;
}
return
false
;
}
Override
public
boolean
onMenuItemLongClick
(
MenuItem
item
)
{
showTooltip
(
(
GeckoMenuItem
)
item
)
;
return
true
;
}
Override
public
void
onClick
(
View
v
)
{
mPresenter
.
endActionModeCompat
(
)
;
}
private
void
showTooltip
(
GeckoMenuItem
item
)
{
int
[
]
location
=
new
int
[
2
]
;
final
View
view
=
item
.
getActionView
(
)
;
view
.
getLocationOnScreen
(
location
)
;
int
xOffset
=
location
[
0
]
-
view
.
getWidth
(
)
;
int
yOffset
=
location
[
1
]
+
view
.
getHeight
(
)
/
2
;
Toast
toast
=
Toast
.
makeText
(
view
.
getContext
(
)
item
.
getTitle
(
)
Toast
.
LENGTH_SHORT
)
;
toast
.
setGravity
(
Gravity
.
TOP
|
Gravity
.
LEFT
xOffset
yOffset
)
;
toast
.
show
(
)
;
}
}
