package
org
.
mozilla
.
gecko
.
activitystream
.
homepanel
.
stream
;
import
android
.
support
.
annotation
.
LayoutRes
;
import
android
.
view
.
View
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
Locales
;
import
org
.
mozilla
.
gecko
.
R
;
import
org
.
mozilla
.
gecko
.
Tabs
;
import
org
.
mozilla
.
gecko
.
Telemetry
;
import
org
.
mozilla
.
gecko
.
TelemetryContract
;
import
org
.
mozilla
.
gecko
.
activitystream
.
ActivityStream
;
import
org
.
mozilla
.
gecko
.
activitystream
.
ActivityStreamTelemetry
;
import
java
.
util
.
Locale
;
public
class
LearnMoreRow
extends
StreamViewHolder
{
public
static
final
LayoutRes
int
LAYOUT_ID
=
R
.
layout
.
activity_stream_learn_more_row
;
private
static
final
String
LEARN_MORE_URL_TEMPLATE
=
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
mobile
/
%
s
/
%
s
/
%
s
/
activity
-
stream
"
;
public
LearnMoreRow
(
final
View
itemView
)
{
super
(
itemView
)
;
final
View
learnMoreLink
=
itemView
.
findViewById
(
R
.
id
.
learn_more_link
)
;
learnMoreLink
.
setOnClickListener
(
new
View
.
OnClickListener
(
)
{
Override
public
void
onClick
(
final
View
v
)
{
Tabs
.
getInstance
(
)
.
loadUrl
(
getLearnMoreURL
(
)
)
;
sendOnClickTelemetry
(
)
;
}
}
)
;
}
private
static
String
getLearnMoreURL
(
)
{
final
String
VERSION
=
AppConstants
.
MOZ_APP_VERSION
;
final
String
OS
=
AppConstants
.
OS_TARGET
;
final
String
LOCALE
=
Locales
.
getLanguageTag
(
Locale
.
getDefault
(
)
)
;
return
String
.
format
(
LEARN_MORE_URL_TEMPLATE
VERSION
OS
LOCALE
)
;
}
private
static
void
sendOnClickTelemetry
(
)
{
ActivityStreamTelemetry
.
Extras
.
Builder
extras
=
ActivityStreamTelemetry
.
Extras
.
builder
(
)
.
set
(
ActivityStreamTelemetry
.
Contract
.
SOURCE_TYPE
ActivityStreamTelemetry
.
Contract
.
TYPE_LEARN_MORE
)
;
Telemetry
.
sendUIEvent
(
TelemetryContract
.
Event
.
LOAD_URL
TelemetryContract
.
Method
.
LIST_ITEM
extras
.
build
(
)
)
;
}
}
