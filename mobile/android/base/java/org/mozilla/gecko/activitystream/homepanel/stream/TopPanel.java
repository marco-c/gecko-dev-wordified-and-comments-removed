package
org
.
mozilla
.
gecko
.
activitystream
.
homepanel
.
stream
;
import
android
.
content
.
res
.
Resources
;
import
android
.
database
.
Cursor
;
import
android
.
support
.
v4
.
view
.
ViewPager
;
import
android
.
view
.
View
;
import
android
.
view
.
ViewGroup
;
import
org
.
mozilla
.
gecko
.
R
;
import
org
.
mozilla
.
gecko
.
Telemetry
;
import
org
.
mozilla
.
gecko
.
TelemetryContract
;
import
org
.
mozilla
.
gecko
.
activitystream
.
homepanel
.
topsites
.
TopSitesPagerAdapter
;
import
org
.
mozilla
.
gecko
.
home
.
HomePager
;
public
class
TopPanel
extends
StreamItem
{
public
static
final
int
LAYOUT_ID
=
R
.
layout
.
activity_stream_main_toppanel
;
private
final
ViewPager
topSitesPager
;
private
static
class
SwipeListener
extends
ViewPager
.
SimpleOnPageChangeListener
{
int
currentPosition
=
0
;
Override
public
void
onPageSelected
(
int
newPosition
)
{
final
String
extra
;
if
(
newPosition
>
currentPosition
)
{
extra
=
"
swipe_forward
"
;
}
else
if
(
newPosition
<
currentPosition
)
{
extra
=
"
swipe_back
"
;
}
else
{
return
;
}
Telemetry
.
sendUIEvent
(
TelemetryContract
.
Event
.
ACTION
TelemetryContract
.
Method
.
LIST
extra
)
;
currentPosition
=
newPosition
;
}
}
private
final
SwipeListener
swipeListener
=
new
SwipeListener
(
)
;
public
TopPanel
(
View
itemView
HomePager
.
OnUrlOpenListener
onUrlOpenListener
HomePager
.
OnUrlOpenInBackgroundListener
onUrlOpenInBackgroundListener
)
{
super
(
itemView
)
;
topSitesPager
=
(
ViewPager
)
itemView
.
findViewById
(
R
.
id
.
topsites_pager
)
;
topSitesPager
.
setAdapter
(
new
TopSitesPagerAdapter
(
itemView
.
getContext
(
)
onUrlOpenListener
onUrlOpenInBackgroundListener
)
)
;
topSitesPager
.
addOnPageChangeListener
(
swipeListener
)
;
}
public
void
bind
(
Cursor
cursor
int
tiles
int
tilesSize
)
{
final
TopSitesPagerAdapter
adapter
=
(
TopSitesPagerAdapter
)
topSitesPager
.
getAdapter
(
)
;
adapter
.
setTilesSize
(
tiles
tilesSize
)
;
adapter
.
swapCursor
(
cursor
)
;
final
Resources
resources
=
itemView
.
getResources
(
)
;
final
int
tilesMargin
=
resources
.
getDimensionPixelSize
(
R
.
dimen
.
activity_stream_base_margin
)
;
final
int
rows
=
cursor
=
=
null
|
|
cursor
.
getCount
(
)
>
4
?
2
:
1
;
ViewGroup
.
LayoutParams
layoutParams
=
topSitesPager
.
getLayoutParams
(
)
;
layoutParams
.
height
=
(
tilesSize
*
rows
)
+
(
tilesMargin
*
2
)
;
topSitesPager
.
setLayoutParams
(
layoutParams
)
;
swipeListener
.
currentPosition
=
0
;
}
}
