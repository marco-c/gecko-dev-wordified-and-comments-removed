package
org
.
mozilla
.
gecko
.
activitystream
;
import
android
.
content
.
Context
;
import
android
.
net
.
Uri
;
import
android
.
text
.
TextUtils
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
GeckoSharedPrefs
;
import
org
.
mozilla
.
gecko
.
preferences
.
GeckoPreferences
;
import
org
.
mozilla
.
gecko
.
util
.
StringUtils
;
import
org
.
mozilla
.
gecko
.
util
.
publicsuffix
.
PublicSuffix
;
import
java
.
util
.
Arrays
;
import
java
.
util
.
List
;
public
class
ActivityStream
{
private
static
final
List
<
String
>
UNDESIRED_LABEL_PREFIXES
=
Arrays
.
asList
(
"
index
.
"
"
home
.
"
)
;
private
static
final
List
<
String
>
UNDESIRED_LABELS
=
Arrays
.
asList
(
"
render
"
"
login
"
"
edit
"
)
;
public
static
boolean
isEnabled
(
Context
context
)
{
if
(
!
AppConstants
.
MOZ_ANDROID_ACTIVITY_STREAM
)
{
return
false
;
}
return
GeckoSharedPrefs
.
forApp
(
context
)
.
getBoolean
(
GeckoPreferences
.
PREFS_ACTIVITY_STREAM
false
)
;
}
public
static
boolean
isHomePanel
(
)
{
return
true
;
}
public
static
String
extractLabel
(
String
url
boolean
usePath
)
{
if
(
TextUtils
.
isEmpty
(
url
)
)
{
return
"
"
;
}
final
Uri
uri
=
Uri
.
parse
(
url
)
;
if
(
usePath
)
{
final
String
segment
=
uri
.
getLastPathSegment
(
)
;
if
(
!
TextUtils
.
isEmpty
(
segment
)
&
&
!
UNDESIRED_LABELS
.
contains
(
segment
)
&
&
!
segment
.
matches
(
"
^
[
0
-
9
]
+
"
)
)
{
boolean
hasUndesiredPrefix
=
false
;
for
(
int
i
=
0
;
i
<
UNDESIRED_LABEL_PREFIXES
.
size
(
)
;
i
+
+
)
{
if
(
segment
.
startsWith
(
UNDESIRED_LABEL_PREFIXES
.
get
(
i
)
)
)
{
hasUndesiredPrefix
=
true
;
break
;
}
}
if
(
!
hasUndesiredPrefix
)
{
return
segment
;
}
}
}
final
String
host
=
uri
.
getHost
(
)
;
if
(
TextUtils
.
isEmpty
(
host
)
)
{
return
url
;
}
return
StringUtils
.
stripCommonSubdomains
(
PublicSuffix
.
stripPublicSuffix
(
host
)
)
;
}
}
