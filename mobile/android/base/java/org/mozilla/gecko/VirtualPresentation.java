package
org
.
mozilla
.
gecko
;
import
org
.
mozilla
.
geckoview
.
GeckoSession
;
import
org
.
mozilla
.
geckoview
.
GeckoSessionSettings
;
import
org
.
mozilla
.
geckoview
.
GeckoView
;
import
com
.
google
.
android
.
gms
.
cast
.
CastPresentation
;
import
android
.
content
.
Context
;
import
android
.
os
.
Bundle
;
import
android
.
view
.
Display
;
import
android
.
view
.
ViewGroup
.
LayoutParams
;
import
android
.
widget
.
RelativeLayout
;
class
VirtualPresentation
extends
CastPresentation
{
private
static
final
String
LOGTAG
=
"
VirtualPresentation
"
;
private
static
final
String
PRESENTATION_VIEW_URI
=
"
chrome
:
/
/
browser
/
content
/
PresentationView
.
xul
"
;
private
RelativeLayout
layout
;
private
GeckoView
view
;
private
String
deviceId
;
private
int
screenId
;
public
VirtualPresentation
(
Context
context
Display
display
)
{
super
(
context
display
)
;
}
public
void
setDeviceId
(
String
deviceId
)
{
this
.
deviceId
=
deviceId
;
}
public
void
setScreenId
(
int
screenId
)
{
this
.
screenId
=
screenId
;
}
Override
protected
void
onCreate
(
Bundle
savedInstanceState
)
{
super
.
onCreate
(
savedInstanceState
)
;
final
GeckoSession
session
=
new
GeckoSession
(
new
GeckoSessionSettings
.
Builder
(
)
.
chromeUri
(
PRESENTATION_VIEW_URI
+
"
#
"
+
deviceId
)
.
screenId
(
screenId
)
.
build
(
)
)
;
session
.
open
(
GeckoApplication
.
ensureRuntime
(
getContext
(
)
)
)
;
view
=
new
GeckoView
(
getContext
(
)
)
;
view
.
setSession
(
session
)
;
view
.
setLayoutParams
(
new
LayoutParams
(
LayoutParams
.
MATCH_PARENT
LayoutParams
.
MATCH_PARENT
)
)
;
layout
=
new
RelativeLayout
(
getContext
(
)
)
;
layout
.
setLayoutParams
(
new
LayoutParams
(
LayoutParams
.
MATCH_PARENT
LayoutParams
.
MATCH_PARENT
)
)
;
layout
.
addView
(
view
)
;
setContentView
(
layout
)
;
}
}
