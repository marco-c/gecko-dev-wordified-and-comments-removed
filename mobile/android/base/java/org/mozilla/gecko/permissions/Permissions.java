package
org
.
mozilla
.
gecko
.
permissions
;
import
android
.
app
.
Activity
;
import
android
.
content
.
pm
.
PackageManager
;
import
android
.
support
.
annotation
.
NonNull
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
Collections
;
import
java
.
util
.
HashSet
;
import
java
.
util
.
LinkedList
;
import
java
.
util
.
List
;
import
java
.
util
.
Queue
;
public
class
Permissions
{
private
static
final
Queue
<
PermissionBlock
>
waiting
=
new
LinkedList
<
>
(
)
;
private
static
final
Queue
<
PermissionBlock
>
prompt
=
new
LinkedList
<
>
(
)
;
private
static
PermissionsHelper
permissionHelper
=
new
PermissionsHelper
(
)
;
public
static
PermissionBlock
from
(
NonNull
Activity
activity
)
{
return
new
PermissionBlock
(
activity
permissionHelper
)
;
}
static
void
setPermissionHelper
(
PermissionsHelper
permissionHelper
)
{
Permissions
.
permissionHelper
=
permissionHelper
;
}
public
static
synchronized
void
onRequestPermissionsResult
(
NonNull
Activity
activity
NonNull
String
[
]
permissions
NonNull
int
[
]
grantResults
)
{
processGrantResults
(
permissions
grantResults
)
;
processQueue
(
activity
)
;
}
static
synchronized
void
prompt
(
Activity
activity
PermissionBlock
block
)
{
if
(
prompt
.
isEmpty
(
)
)
{
prompt
.
add
(
block
)
;
showPrompt
(
activity
)
;
}
else
{
waiting
.
add
(
block
)
;
}
}
private
static
synchronized
void
processGrantResults
(
NonNull
String
[
]
permissions
NonNull
int
[
]
grantResults
)
{
HashSet
<
String
>
grantedPermissions
=
collectGrantedPermissions
(
permissions
grantResults
)
;
while
(
!
prompt
.
isEmpty
(
)
)
{
PermissionBlock
block
=
prompt
.
poll
(
)
;
if
(
allPermissionsGranted
(
block
grantedPermissions
)
)
{
block
.
onPermissionsGranted
(
)
;
}
else
{
block
.
onPermissionsDenied
(
)
;
}
}
}
private
static
synchronized
void
processQueue
(
Activity
activity
)
{
while
(
!
waiting
.
isEmpty
(
)
)
{
PermissionBlock
block
=
waiting
.
poll
(
)
;
if
(
block
.
hasPermissions
(
activity
)
)
{
block
.
onPermissionsGranted
(
)
;
}
else
{
prompt
.
add
(
block
)
;
}
}
if
(
!
prompt
.
isEmpty
(
)
)
{
showPrompt
(
activity
)
;
}
}
private
static
synchronized
void
showPrompt
(
Activity
activity
)
{
HashSet
<
String
>
permissions
=
new
HashSet
<
>
(
)
;
for
(
PermissionBlock
block
:
prompt
)
{
Collections
.
addAll
(
permissions
block
.
getPermissions
(
)
)
;
}
permissionHelper
.
prompt
(
activity
permissions
.
toArray
(
new
String
[
permissions
.
size
(
)
]
)
)
;
}
private
static
HashSet
<
String
>
collectGrantedPermissions
(
NonNull
String
[
]
permissions
NonNull
int
[
]
grantResults
)
{
HashSet
<
String
>
grantedPermissions
=
new
HashSet
<
>
(
permissions
.
length
)
;
for
(
int
i
=
0
;
i
<
permissions
.
length
;
i
+
+
)
{
if
(
grantResults
[
i
]
=
=
PackageManager
.
PERMISSION_GRANTED
)
{
grantedPermissions
.
add
(
permissions
[
i
]
)
;
}
}
return
grantedPermissions
;
}
private
static
boolean
allPermissionsGranted
(
PermissionBlock
block
HashSet
<
String
>
grantedPermissions
)
{
for
(
String
permission
:
block
.
getPermissions
(
)
)
{
if
(
!
grantedPermissions
.
contains
(
permission
)
)
{
return
false
;
}
}
return
true
;
}
}
