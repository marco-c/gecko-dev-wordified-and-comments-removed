package
org
.
mozilla
.
gecko
.
distribution
;
import
android
.
content
.
ContentResolver
;
import
android
.
database
.
Cursor
;
import
android
.
net
.
Uri
;
import
org
.
mozilla
.
gecko
.
db
.
BrowserContract
;
public
class
PartnerBookmarksProviderClient
{
private
static
class
PartnerContract
{
public
static
final
Uri
CONTENT_URI
=
Uri
.
parse
(
"
content
:
/
/
com
.
android
.
partnerbookmarks
/
bookmarks
"
)
;
public
static
final
int
TYPE_BOOKMARK
=
1
;
public
static
final
int
TYPE_FOLDER
=
2
;
public
static
final
int
PARENT_ROOT_ID
=
0
;
public
static
final
String
ID
=
"
_id
"
;
public
static
final
String
TYPE
=
"
type
"
;
public
static
final
String
URL
=
"
url
"
;
public
static
final
String
TITLE
=
"
title
"
;
public
static
final
String
FAVICON
=
"
favicon
"
;
public
static
final
String
TOUCHICON
=
"
touchicon
"
;
public
static
final
String
PARENT
=
"
parent
"
;
}
public
static
Cursor
getBookmarksInFolder
(
ContentResolver
contentResolver
int
folderId
)
{
final
long
actualFolderId
=
folderId
=
=
BrowserContract
.
Bookmarks
.
FIXED_ROOT_ID
?
PartnerContract
.
PARENT_ROOT_ID
:
BrowserContract
.
Bookmarks
.
FAKE_PARTNER_BOOKMARKS_START
-
folderId
;
return
contentResolver
.
query
(
PartnerContract
.
CONTENT_URI
new
String
[
]
{
"
(
"
+
BrowserContract
.
Bookmarks
.
FAKE_PARTNER_BOOKMARKS_START
+
"
-
"
+
PartnerContract
.
ID
+
"
)
as
"
+
BrowserContract
.
Bookmarks
.
_ID
PartnerContract
.
TITLE
+
"
as
"
+
BrowserContract
.
Bookmarks
.
TITLE
PartnerContract
.
URL
+
"
as
"
+
BrowserContract
.
Bookmarks
.
URL
"
(
"
+
BrowserContract
.
Bookmarks
.
FAKE_PARTNER_BOOKMARKS_START
+
"
-
"
+
PartnerContract
.
PARENT
+
"
)
as
"
+
BrowserContract
.
Bookmarks
.
PARENT
"
(
2
-
"
+
PartnerContract
.
TYPE
+
"
)
as
"
+
BrowserContract
.
Bookmarks
.
TYPE
PartnerContract
.
ID
+
"
as
"
+
BrowserContract
.
Bookmarks
.
GUID
}
PartnerContract
.
PARENT
+
"
=
?
"
+
"
AND
(
"
+
BrowserContract
.
Bookmarks
.
TYPE
+
"
=
1
OR
"
+
BrowserContract
.
Bookmarks
.
TYPE
+
"
=
2
)
"
+
"
AND
"
+
BrowserContract
.
Bookmarks
.
TITLE
+
"
<
>
'
'
"
new
String
[
]
{
String
.
valueOf
(
actualFolderId
)
}
BrowserContract
.
Bookmarks
.
TYPE
+
"
ASC
"
+
BrowserContract
.
Bookmarks
.
_ID
+
"
ASC
"
)
;
}
}
