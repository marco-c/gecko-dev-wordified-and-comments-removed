package
org
.
mozilla
.
gecko
.
distribution
;
import
org
.
mozilla
.
gecko
.
annotation
.
RobocopTarget
;
import
android
.
net
.
Uri
;
import
java
.
net
.
URLDecoder
;
import
java
.
io
.
UnsupportedEncodingException
;
RobocopTarget
public
class
ReferrerDescriptor
{
public
final
String
source
;
public
final
String
medium
;
public
final
String
term
;
public
final
String
content
;
public
final
String
campaign
;
public
ReferrerDescriptor
(
String
referrer
)
{
if
(
referrer
=
=
null
)
{
source
=
null
;
medium
=
null
;
term
=
null
;
content
=
null
;
campaign
=
null
;
return
;
}
try
{
referrer
=
URLDecoder
.
decode
(
referrer
"
UTF
-
8
"
)
;
}
catch
(
UnsupportedEncodingException
e
)
{
}
final
Uri
u
=
new
Uri
.
Builder
(
)
.
scheme
(
"
http
"
)
.
authority
(
"
local
"
)
.
path
(
"
/
"
)
.
encodedQuery
(
referrer
)
.
build
(
)
;
source
=
u
.
getQueryParameter
(
"
utm_source
"
)
;
medium
=
u
.
getQueryParameter
(
"
utm_medium
"
)
;
term
=
u
.
getQueryParameter
(
"
utm_term
"
)
;
content
=
u
.
getQueryParameter
(
"
utm_content
"
)
;
campaign
=
u
.
getQueryParameter
(
"
utm_campaign
"
)
;
}
Override
public
String
toString
(
)
{
return
"
{
s
:
"
+
source
+
"
m
:
"
+
medium
+
"
t
:
"
+
term
+
"
c
:
"
+
content
+
"
c
:
"
+
campaign
+
"
}
"
;
}
}
