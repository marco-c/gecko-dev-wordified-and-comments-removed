package
org
.
mozilla
.
gecko
.
delegates
;
import
android
.
app
.
Activity
;
import
android
.
os
.
Bundle
;
import
android
.
support
.
design
.
widget
.
Snackbar
;
import
android
.
util
.
Log
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
BrowserApp
;
import
org
.
mozilla
.
gecko
.
GeckoProfile
;
import
org
.
mozilla
.
gecko
.
R
;
import
org
.
mozilla
.
gecko
.
ScreenshotObserver
;
import
org
.
mozilla
.
gecko
.
SnackbarHelper
;
import
org
.
mozilla
.
gecko
.
Tab
;
import
org
.
mozilla
.
gecko
.
Tabs
;
import
org
.
mozilla
.
gecko
.
Telemetry
;
import
org
.
mozilla
.
gecko
.
TelemetryContract
;
import
org
.
mozilla
.
gecko
.
delegates
.
BrowserAppDelegate
;
import
java
.
lang
.
ref
.
WeakReference
;
public
class
ScreenshotDelegate
extends
BrowserAppDelegate
implements
ScreenshotObserver
.
OnScreenshotListener
{
private
static
final
String
LOGTAG
=
"
GeckoScreenshotDelegate
"
;
private
WeakReference
<
Activity
>
activityReference
;
private
final
ScreenshotObserver
mScreenshotObserver
=
new
ScreenshotObserver
(
)
;
Override
public
void
onCreate
(
BrowserApp
browserApp
Bundle
savedInstanceState
)
{
activityReference
=
new
WeakReference
<
Activity
>
(
browserApp
)
;
mScreenshotObserver
.
setListener
(
browserApp
this
)
;
}
Override
public
void
onScreenshotTaken
(
String
screenshotPath
String
title
)
{
Telemetry
.
sendUIEvent
(
TelemetryContract
.
Event
.
SHARE
TelemetryContract
.
Method
.
BUTTON
"
screenshot
"
)
;
if
(
!
AppConstants
.
SCREENSHOTS_IN_BOOKMARKS_ENABLED
)
{
return
;
}
final
Tab
selectedTab
=
Tabs
.
getInstance
(
)
.
getSelectedTab
(
)
;
if
(
selectedTab
=
=
null
)
{
Log
.
w
(
LOGTAG
"
Selected
tab
is
null
:
could
not
page
info
to
store
screenshot
.
"
)
;
return
;
}
final
Activity
activity
=
activityReference
.
get
(
)
;
if
(
activity
=
=
null
)
{
return
;
}
GeckoProfile
.
get
(
activity
)
.
getDB
(
)
.
getUrlAnnotations
(
)
.
insertScreenshot
(
activity
.
getContentResolver
(
)
selectedTab
.
getURL
(
)
screenshotPath
)
;
SnackbarHelper
.
showSnackbar
(
activity
activity
.
getResources
(
)
.
getString
(
R
.
string
.
screenshot_added_to_bookmarks
)
Snackbar
.
LENGTH_SHORT
)
;
}
Override
public
void
onResume
(
BrowserApp
browserApp
)
{
mScreenshotObserver
.
start
(
)
;
}
Override
public
void
onPause
(
BrowserApp
browserApp
)
{
mScreenshotObserver
.
stop
(
)
;
}
}
