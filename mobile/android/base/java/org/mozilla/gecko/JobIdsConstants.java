package
org
.
mozilla
.
gecko
;
public
class
JobIdsConstants
{
private
static
final
int
BETA_OFFSET
=
1000
;
private
static
final
int
JOB_ID_DLC_STUDY
=
1000
;
private
static
final
int
JOB_ID_DLC_DOWNLOAD
=
1001
;
private
static
final
int
JOB_ID_DLC_SYNCHRONIZE
=
1002
;
private
static
final
int
JOB_ID_DLC_CLEANUP
=
1003
;
private
static
final
int
JOB_ID_TAB_RECEIVED
=
1004
;
private
static
final
int
JOB_ID_PROFILE_FETCH
=
1005
;
private
static
final
int
JOB_ID_PROFILE_DELETE
=
1006
;
private
static
final
int
JOB_ID_TELEMETRY_UPLOAD
=
1007
;
private
static
final
int
JOB_ID_FILE_CLEANUP
=
1008
;
public
static
int
getIdForDlcStudyJob
(
)
{
return
getIdWithOffset
(
JOB_ID_DLC_STUDY
)
;
}
public
static
int
getIdForDlcDownloadJob
(
)
{
return
getIdWithOffset
(
JOB_ID_DLC_DOWNLOAD
)
;
}
public
static
int
getIdForDlcSynchronizeJob
(
)
{
return
getIdWithOffset
(
JOB_ID_DLC_SYNCHRONIZE
)
;
}
public
static
int
getIdForDlcCleanupJob
(
)
{
return
getIdWithOffset
(
JOB_ID_DLC_CLEANUP
)
;
}
public
static
int
getIdForTabReceivedJob
(
)
{
return
getIdWithOffset
(
JOB_ID_TAB_RECEIVED
)
;
}
public
static
int
getIdForProfileFetchJob
(
)
{
return
getIdWithOffset
(
JOB_ID_PROFILE_FETCH
)
;
}
public
static
int
getIdForProfileDeleteJob
(
)
{
return
getIdWithOffset
(
JOB_ID_PROFILE_DELETE
)
;
}
public
static
int
getIdForTelemetryUploadJob
(
)
{
return
getIdWithOffset
(
JOB_ID_TELEMETRY_UPLOAD
)
;
}
public
static
int
getIdForFileCleanupJob
(
)
{
return
getIdWithOffset
(
JOB_ID_FILE_CLEANUP
)
;
}
private
static
boolean
isReleaseBuild
(
)
{
return
AppConstants
.
RELEASE_OR_BETA
;
}
private
static
int
getIdWithOffset
(
final
int
jobIdUsedInRelease
)
{
return
isReleaseBuild
(
)
?
jobIdUsedInRelease
:
jobIdUsedInRelease
+
BETA_OFFSET
;
}
}
