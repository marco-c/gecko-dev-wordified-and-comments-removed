package
org
.
mozilla
.
gecko
.
util
;
import
android
.
annotation
.
TargetApi
;
import
android
.
content
.
res
.
TypedArray
;
import
android
.
os
.
Build
;
import
android
.
support
.
v4
.
text
.
TextUtilsCompat
;
import
android
.
support
.
v4
.
view
.
MarginLayoutParamsCompat
;
import
android
.
support
.
v4
.
view
.
ViewCompat
;
import
android
.
view
.
View
;
import
android
.
view
.
ViewGroup
;
import
android
.
widget
.
TextView
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
R
;
import
java
.
util
.
Locale
;
public
class
ViewUtil
{
public
static
void
enableTouchRipple
(
View
view
)
{
final
TypedArray
backgroundDrawableArray
;
if
(
AppConstants
.
Versions
.
feature21Plus
)
{
backgroundDrawableArray
=
view
.
getContext
(
)
.
obtainStyledAttributes
(
new
int
[
]
{
R
.
attr
.
selectableItemBackgroundBorderless
}
)
;
}
else
{
backgroundDrawableArray
=
view
.
getContext
(
)
.
obtainStyledAttributes
(
new
int
[
]
{
R
.
attr
.
selectableItemBackground
}
)
;
}
view
.
setBackgroundDrawable
(
backgroundDrawableArray
.
getDrawable
(
0
)
)
;
}
public
static
void
setMarginStart
(
ViewGroup
.
MarginLayoutParams
layoutParams
int
marginStart
boolean
isLayoutRtl
)
{
if
(
AppConstants
.
Versions
.
feature17Plus
&
&
AppConstants
.
Versions
.
preN
)
{
if
(
isLayoutRtl
)
{
layoutParams
.
rightMargin
=
marginStart
;
}
else
{
layoutParams
.
leftMargin
=
marginStart
;
}
}
else
{
MarginLayoutParamsCompat
.
setMarginStart
(
layoutParams
marginStart
)
;
}
}
public
static
void
setLayoutDirection
(
View
view
Locale
locale
)
{
switch
(
TextUtilsCompat
.
getLayoutDirectionFromLocale
(
locale
)
)
{
case
ViewCompat
.
LAYOUT_DIRECTION_RTL
:
ViewCompat
.
setLayoutDirection
(
view
ViewCompat
.
LAYOUT_DIRECTION_RTL
)
;
break
;
case
ViewCompat
.
LAYOUT_DIRECTION_LTR
:
default
:
ViewCompat
.
setLayoutDirection
(
view
ViewCompat
.
LAYOUT_DIRECTION_LTR
)
;
break
;
}
}
public
static
void
setTextDirectionRtlCompat
(
TextView
textView
boolean
isRtl
)
{
if
(
AppConstants
.
Versions
.
feature17Plus
)
{
setTextDirectionRtlCompat17
(
textView
isRtl
)
;
}
}
TargetApi
(
Build
.
VERSION_CODES
.
JELLY_BEAN_MR1
)
private
static
void
setTextDirectionRtlCompat17
(
TextView
textView
boolean
isRtl
)
{
if
(
isRtl
)
{
textView
.
setTextDirection
(
View
.
TEXT_DIRECTION_RTL
)
;
}
else
{
textView
.
setTextDirection
(
View
.
TEXT_DIRECTION_LTR
)
;
}
}
}
