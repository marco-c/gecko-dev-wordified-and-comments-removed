package
org
.
mozilla
.
gecko
.
util
;
import
android
.
content
.
Intent
;
import
android
.
os
.
Bundle
;
import
android
.
support
.
annotation
.
NonNull
;
import
org
.
mozilla
.
gecko
.
mozglue
.
SafeIntent
;
import
java
.
util
.
HashMap
;
import
java
.
util
.
regex
.
Matcher
;
import
java
.
util
.
regex
.
Pattern
;
public
class
IntentUtils
{
public
static
final
String
ENV_VAR_IN_AUTOMATION
=
"
MOZ_IN_AUTOMATION
"
;
private
static
final
String
ENV_VAR_REGEX
=
"
(
.
+
)
=
(
.
*
)
"
;
private
IntentUtils
(
)
{
}
public
static
HashMap
<
String
String
>
getEnvVarMap
(
NonNull
final
Intent
unsafeIntent
)
{
final
Pattern
envVarPattern
=
Pattern
.
compile
(
ENV_VAR_REGEX
)
;
final
Matcher
matcher
=
envVarPattern
.
matcher
(
"
"
)
;
final
SafeIntent
safeIntent
=
new
SafeIntent
(
unsafeIntent
)
;
final
HashMap
<
String
String
>
out
=
new
HashMap
<
>
(
)
;
int
i
=
0
;
while
(
true
)
{
final
String
envKey
=
"
env
"
+
i
;
i
+
=
1
;
if
(
!
unsafeIntent
.
hasExtra
(
envKey
)
)
{
break
;
}
maybeAddEnvVarToEnvVarMap
(
out
safeIntent
envKey
matcher
)
;
}
return
out
;
}
private
static
void
maybeAddEnvVarToEnvVarMap
(
NonNull
final
HashMap
<
String
String
>
envVarMap
NonNull
final
SafeIntent
intent
NonNull
final
String
envKey
NonNull
final
Matcher
envVarMatcher
)
{
final
String
envValue
=
intent
.
getStringExtra
(
envKey
)
;
if
(
envValue
=
=
null
)
{
return
;
}
envVarMatcher
.
reset
(
envValue
)
;
if
(
envVarMatcher
.
matches
(
)
)
{
final
String
envVarName
=
envVarMatcher
.
group
(
1
)
;
final
String
envVarValue
=
envVarMatcher
.
group
(
2
)
;
envVarMap
.
put
(
envVarName
envVarValue
)
;
}
}
public
static
Bundle
getBundleExtraSafe
(
final
Intent
intent
final
String
name
)
{
return
new
SafeIntent
(
intent
)
.
getBundleExtra
(
name
)
;
}
public
static
String
getStringExtraSafe
(
final
Intent
intent
final
String
name
)
{
return
new
SafeIntent
(
intent
)
.
getStringExtra
(
name
)
;
}
public
static
boolean
getBooleanExtraSafe
(
final
Intent
intent
final
String
name
final
boolean
defaultValue
)
{
return
new
SafeIntent
(
intent
)
.
getBooleanExtra
(
name
defaultValue
)
;
}
}
