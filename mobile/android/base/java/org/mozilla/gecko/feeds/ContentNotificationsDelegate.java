package
org
.
mozilla
.
gecko
.
feeds
;
import
android
.
content
.
Intent
;
import
android
.
os
.
Bundle
;
import
android
.
support
.
v4
.
app
.
NotificationCompat
;
import
android
.
support
.
v4
.
app
.
NotificationManagerCompat
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
BrowserApp
;
import
org
.
mozilla
.
gecko
.
BrowserAppDelegate
;
import
org
.
mozilla
.
gecko
.
R
;
import
org
.
mozilla
.
gecko
.
Telemetry
;
import
org
.
mozilla
.
gecko
.
TelemetryContract
;
import
java
.
util
.
List
;
public
class
ContentNotificationsDelegate
extends
BrowserAppDelegate
{
public
static
final
String
ACTION_CONTENT_NOTIFICATION
=
AppConstants
.
ANDROID_PACKAGE_NAME
+
"
.
action
.
CONTENT_NOTIFICATION
"
;
public
static
final
String
EXTRA_READ_BUTTON
=
"
read_button
"
;
public
static
final
String
EXTRA_URLS
=
"
urls
"
;
private
static
final
String
TELEMETRY_EXTRA_CONTENT_UPDATE
=
"
content_update
"
;
private
static
final
String
TELEMETRY_EXTRA_READ_NOW_BUTTON
=
TELEMETRY_EXTRA_CONTENT_UPDATE
+
"
_read_now
"
;
Override
public
void
onCreate
(
BrowserApp
browserApp
Bundle
savedInstanceState
)
{
final
Intent
intent
=
browserApp
.
getIntent
(
)
;
if
(
savedInstanceState
!
=
null
)
{
return
;
}
if
(
intent
!
=
null
&
&
ACTION_CONTENT_NOTIFICATION
.
equals
(
intent
.
getAction
(
)
)
)
{
openURLsFromIntent
(
browserApp
intent
)
;
}
}
Override
public
void
onNewIntent
(
BrowserApp
browserApp
Intent
intent
)
{
if
(
intent
!
=
null
&
&
ACTION_CONTENT_NOTIFICATION
.
equals
(
intent
.
getAction
(
)
)
)
{
openURLsFromIntent
(
browserApp
intent
)
;
}
}
private
void
openURLsFromIntent
(
BrowserApp
browserApp
final
Intent
intent
)
{
final
List
<
String
>
urls
=
intent
.
getStringArrayListExtra
(
EXTRA_URLS
)
;
if
(
urls
!
=
null
)
{
browserApp
.
openUrls
(
urls
)
;
}
Telemetry
.
startUISession
(
TelemetryContract
.
Session
.
EXPERIMENT
FeedService
.
getEnabledExperiment
(
browserApp
)
)
;
Telemetry
.
sendUIEvent
(
TelemetryContract
.
Event
.
LOAD_URL
TelemetryContract
.
Method
.
INTENT
TELEMETRY_EXTRA_CONTENT_UPDATE
)
;
if
(
intent
.
getBooleanExtra
(
EXTRA_READ_BUTTON
false
)
)
{
Telemetry
.
sendUIEvent
(
TelemetryContract
.
Event
.
ACTION
TelemetryContract
.
Method
.
NOTIFICATION
TELEMETRY_EXTRA_READ_NOW_BUTTON
)
;
NotificationManagerCompat
.
from
(
browserApp
)
.
cancel
(
R
.
id
.
websiteContentNotification
)
;
}
else
{
Telemetry
.
sendUIEvent
(
TelemetryContract
.
Event
.
ACTION
TelemetryContract
.
Method
.
NOTIFICATION
TELEMETRY_EXTRA_CONTENT_UPDATE
)
;
}
Telemetry
.
stopUISession
(
TelemetryContract
.
Session
.
EXPERIMENT
FeedService
.
getEnabledExperiment
(
browserApp
)
)
;
}
}
