package
org
.
mozilla
.
gecko
;
import
org
.
mozilla
.
gecko
.
mozglue
.
SafeIntent
;
import
android
.
content
.
BroadcastReceiver
;
import
android
.
content
.
ComponentName
;
import
android
.
content
.
Context
;
import
android
.
content
.
Intent
;
import
android
.
net
.
Uri
;
import
android
.
util
.
Log
;
public
class
NotificationReceiver
extends
BroadcastReceiver
{
private
static
final
String
LOGTAG
=
"
Gecko
"
+
NotificationReceiver
.
class
.
getSimpleName
(
)
;
public
void
onReceive
(
Context
context
Intent
intent
)
{
final
Uri
data
=
intent
.
getData
(
)
;
if
(
data
=
=
null
)
{
Log
.
e
(
LOGTAG
"
handleNotificationEvent
:
empty
data
"
)
;
return
;
}
final
String
notificationType
=
data
.
getQueryParameter
(
NotificationHelper
.
EVENT_TYPE_ATTR
)
;
if
(
notificationType
=
=
null
)
{
return
;
}
if
(
NotificationHelper
.
CLEARED_EVENT
.
equals
(
notificationType
)
)
{
if
(
GeckoThread
.
isRunning
(
)
)
{
NotificationHelper
.
getArgsAndSendNotificationIntent
(
new
SafeIntent
(
intent
)
)
;
}
return
;
}
forwardMessageToActivity
(
intent
context
)
;
}
private
void
forwardMessageToActivity
(
final
Intent
intent
final
Context
context
)
{
final
ComponentName
name
=
intent
.
getExtras
(
)
.
getParcelable
(
NotificationHelper
.
ORIGINAL_EXTRA_COMPONENT
)
;
intent
.
setComponent
(
name
)
;
intent
.
addFlags
(
Intent
.
FLAG_ACTIVITY_NEW_TASK
)
;
context
.
startActivity
(
intent
)
;
}
}
