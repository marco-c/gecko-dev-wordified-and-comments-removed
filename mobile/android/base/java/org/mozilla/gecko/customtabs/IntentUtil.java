package
org
.
mozilla
.
gecko
.
customtabs
;
import
android
.
app
.
PendingIntent
;
import
android
.
content
.
Intent
;
import
android
.
graphics
.
Bitmap
;
import
android
.
os
.
Build
;
import
android
.
os
.
Bundle
;
import
android
.
support
.
annotation
.
NonNull
;
import
android
.
support
.
customtabs
.
CustomTabsIntent
;
import
java
.
util
.
ArrayList
;
import
java
.
util
.
List
;
class
IntentUtil
{
public
static
final
int
NO_ANIMATION_RESOURCE
=
-
1
;
private
static
final
String
PREFIX
=
Build
.
VERSION
.
SDK_INT
>
=
Build
.
VERSION_CODES
.
M
?
"
android
:
activity
.
"
:
"
android
:
"
;
private
static
final
String
KEY_PACKAGE_NAME
=
PREFIX
+
"
packageName
"
;
private
static
final
String
KEY_ANIM_ENTER_RES_ID
=
PREFIX
+
"
animEnterRes
"
;
private
static
final
String
KEY_ANIM_EXIT_RES_ID
=
PREFIX
+
"
animExitRes
"
;
static
boolean
hasActionButton
(
NonNull
Intent
intent
)
{
return
(
getActionButtonBundle
(
intent
)
!
=
null
)
&
&
(
getActionButtonIcon
(
intent
)
!
=
null
)
&
&
(
getActionButtonDescription
(
intent
)
!
=
null
)
&
&
(
getActionButtonPendingIntent
(
intent
)
!
=
null
)
;
}
static
boolean
hasShareItem
(
NonNull
Intent
intent
)
{
return
intent
.
getBooleanExtra
(
CustomTabsIntent
.
EXTRA_DEFAULT_SHARE_MENU_ITEM
false
)
;
}
static
Bitmap
getActionButtonIcon
(
NonNull
Intent
intent
)
{
final
Bundle
bundle
=
getActionButtonBundle
(
intent
)
;
return
(
bundle
=
=
null
)
?
null
:
(
Bitmap
)
bundle
.
getParcelable
(
CustomTabsIntent
.
KEY_ICON
)
;
}
static
String
getActionButtonDescription
(
NonNull
Intent
intent
)
{
final
Bundle
bundle
=
getActionButtonBundle
(
intent
)
;
return
(
bundle
=
=
null
)
?
null
:
bundle
.
getString
(
CustomTabsIntent
.
KEY_DESCRIPTION
)
;
}
static
PendingIntent
getActionButtonPendingIntent
(
NonNull
Intent
intent
)
{
final
Bundle
bundle
=
getActionButtonBundle
(
intent
)
;
return
(
bundle
=
=
null
)
?
null
:
(
PendingIntent
)
bundle
.
getParcelable
(
CustomTabsIntent
.
KEY_PENDING_INTENT
)
;
}
static
boolean
isActionButtonTinted
(
NonNull
Intent
intent
)
{
return
intent
.
getBooleanExtra
(
CustomTabsIntent
.
EXTRA_TINT_ACTION_BUTTON
false
)
;
}
private
static
Bundle
getActionButtonBundle
(
NonNull
Intent
intent
)
{
return
intent
.
getBundleExtra
(
CustomTabsIntent
.
EXTRA_ACTION_BUTTON_BUNDLE
)
;
}
static
String
getAnimationPackageName
(
NonNull
Intent
intent
)
{
final
Bundle
bundle
=
getAnimationBundle
(
intent
)
;
return
(
bundle
=
=
null
)
?
null
:
bundle
.
getString
(
KEY_PACKAGE_NAME
)
;
}
static
List
<
String
>
getMenuItemsTitle
(
NonNull
Intent
intent
)
{
final
List
<
Bundle
>
bundles
=
getMenuItemsBundle
(
intent
)
;
final
List
<
String
>
titles
=
new
ArrayList
<
>
(
)
;
for
(
Bundle
b
:
bundles
)
{
titles
.
add
(
b
.
getString
(
CustomTabsIntent
.
KEY_MENU_ITEM_TITLE
)
)
;
}
return
titles
;
}
static
List
<
PendingIntent
>
getMenuItemsPendingIntent
(
NonNull
Intent
intent
)
{
final
List
<
Bundle
>
bundles
=
getMenuItemsBundle
(
intent
)
;
final
List
<
PendingIntent
>
intents
=
new
ArrayList
<
>
(
)
;
for
(
Bundle
b
:
bundles
)
{
PendingIntent
p
=
b
.
getParcelable
(
CustomTabsIntent
.
KEY_PENDING_INTENT
)
;
intents
.
add
(
p
)
;
}
return
intents
;
}
static
boolean
hasExitAnimation
(
NonNull
Intent
intent
)
{
final
Bundle
bundle
=
getAnimationBundle
(
intent
)
;
return
(
bundle
!
=
null
)
&
&
(
getAnimationPackageName
(
intent
)
!
=
null
)
&
&
(
getEnterAnimationRes
(
intent
)
!
=
NO_ANIMATION_RESOURCE
)
&
&
(
getExitAnimationRes
(
intent
)
!
=
NO_ANIMATION_RESOURCE
)
;
}
static
int
getEnterAnimationRes
(
NonNull
Intent
intent
)
{
final
Bundle
bundle
=
getAnimationBundle
(
intent
)
;
return
(
bundle
=
=
null
)
?
NO_ANIMATION_RESOURCE
:
bundle
.
getInt
(
KEY_ANIM_ENTER_RES_ID
NO_ANIMATION_RESOURCE
)
;
}
static
int
getExitAnimationRes
(
NonNull
Intent
intent
)
{
final
Bundle
bundle
=
getAnimationBundle
(
intent
)
;
return
(
bundle
=
=
null
)
?
NO_ANIMATION_RESOURCE
:
bundle
.
getInt
(
KEY_ANIM_EXIT_RES_ID
NO_ANIMATION_RESOURCE
)
;
}
private
static
Bundle
getAnimationBundle
(
NonNull
Intent
intent
)
{
return
intent
.
getBundleExtra
(
CustomTabsIntent
.
EXTRA_EXIT_ANIMATION_BUNDLE
)
;
}
private
static
List
<
Bundle
>
getMenuItemsBundle
(
NonNull
Intent
intent
)
{
ArrayList
<
Bundle
>
extra
=
intent
.
getParcelableArrayListExtra
(
CustomTabsIntent
.
EXTRA_MENU_ITEMS
)
;
return
(
extra
=
=
null
)
?
new
ArrayList
<
Bundle
>
(
)
:
extra
;
}
}
