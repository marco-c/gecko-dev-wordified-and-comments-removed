package
org
.
mozilla
.
gecko
.
customtabs
;
import
android
.
graphics
.
drawable
.
ColorDrawable
;
import
android
.
os
.
Build
;
import
android
.
support
.
annotation
.
ColorInt
;
import
android
.
support
.
annotation
.
NonNull
;
import
android
.
support
.
annotation
.
Nullable
;
import
android
.
support
.
annotation
.
UiThread
;
import
android
.
support
.
v7
.
app
.
ActionBar
;
import
android
.
support
.
v7
.
widget
.
Toolbar
;
import
android
.
text
.
TextUtils
;
import
android
.
util
.
Log
;
import
android
.
view
.
Window
;
import
android
.
view
.
WindowManager
;
import
android
.
widget
.
TextView
;
import
org
.
mozilla
.
gecko
.
AppConstants
;
import
org
.
mozilla
.
gecko
.
util
.
ColorUtil
;
import
java
.
lang
.
reflect
.
Field
;
public
class
ActionBarPresenter
{
private
static
final
String
LOGTAG
=
"
CustomTabsActionBar
"
;
private
final
ActionBar
mActionBar
;
private
boolean
useDomainTitle
=
true
;
ActionBarPresenter
(
NonNull
final
ActionBar
actionBar
NonNull
Toolbar
toolbar
)
{
mActionBar
=
actionBar
;
initActionBar
(
toolbar
)
;
}
private
void
initActionBar
(
NonNull
final
Toolbar
toolbar
)
{
try
{
final
Field
f
=
toolbar
.
getClass
(
)
.
getDeclaredField
(
"
mTitleTextView
"
)
;
f
.
setAccessible
(
true
)
;
final
TextView
textView
=
(
TextView
)
f
.
get
(
toolbar
)
;
textView
.
setEllipsize
(
TextUtils
.
TruncateAt
.
START
)
;
}
catch
(
Exception
e
)
{
Log
.
w
(
LOGTAG
"
Failed
to
get
Toolbar
TextView
using
default
title
.
"
)
;
useDomainTitle
=
false
;
}
}
UiThread
public
void
update
(
Nullable
final
String
title
)
{
if
(
useDomainTitle
|
|
TextUtils
.
isEmpty
(
title
)
)
{
mActionBar
.
setTitle
(
AppConstants
.
MOZ_APP_BASENAME
)
;
}
else
{
mActionBar
.
setTitle
(
title
)
;
}
}
UiThread
public
void
setBackgroundColor
(
ColorInt
final
int
color
Nullable
final
Window
window
)
{
mActionBar
.
setBackgroundDrawable
(
new
ColorDrawable
(
color
)
)
;
if
(
window
!
=
null
)
{
if
(
Build
.
VERSION
.
SDK_INT
>
=
Build
.
VERSION_CODES
.
LOLLIPOP
)
{
window
.
addFlags
(
WindowManager
.
LayoutParams
.
FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS
)
;
window
.
setStatusBarColor
(
ColorUtil
.
darken
(
color
0
.
25
)
)
;
}
}
}
}
