package
org
.
mozilla
.
gecko
.
customtabs
;
import
android
.
net
.
Uri
;
import
android
.
os
.
Bundle
;
import
android
.
support
.
customtabs
.
CustomTabsService
;
import
android
.
support
.
customtabs
.
CustomTabsSessionToken
;
import
android
.
util
.
Log
;
import
org
.
mozilla
.
gecko
.
GeckoProfile
;
import
org
.
mozilla
.
gecko
.
GeckoService
;
import
org
.
mozilla
.
gecko
.
GeckoThread
;
import
java
.
util
.
List
;
public
class
GeckoCustomTabsService
extends
CustomTabsService
{
private
static
final
String
LOGTAG
=
"
GeckoCustomTabsService
"
;
private
static
final
boolean
DEBUG
=
false
;
private
static
final
int
MAX_SPECULATIVE_URLS
=
50
;
Override
protected
boolean
updateVisuals
(
CustomTabsSessionToken
sessionToken
Bundle
bundle
)
{
Log
.
v
(
LOGTAG
"
updateVisuals
(
)
"
)
;
return
false
;
}
Override
protected
boolean
warmup
(
long
flags
)
{
if
(
DEBUG
)
{
Log
.
v
(
LOGTAG
"
warming
up
.
.
.
"
)
;
}
GeckoService
.
startGecko
(
GeckoProfile
.
initFromArgs
(
this
null
)
null
getApplicationContext
(
)
)
;
return
true
;
}
Override
protected
boolean
newSession
(
CustomTabsSessionToken
sessionToken
)
{
Log
.
v
(
LOGTAG
"
newSession
(
)
"
)
;
return
true
;
}
Override
protected
boolean
mayLaunchUrl
(
CustomTabsSessionToken
sessionToken
Uri
uri
Bundle
bundle
List
<
Bundle
>
list
)
{
if
(
DEBUG
)
{
Log
.
v
(
LOGTAG
"
opening
speculative
connections
.
.
.
"
)
;
}
if
(
uri
=
=
null
)
{
return
false
;
}
GeckoThread
.
speculativeConnect
(
uri
.
toString
(
)
)
;
if
(
list
=
=
null
)
{
return
true
;
}
for
(
int
i
=
0
;
i
<
list
.
size
(
)
&
&
i
<
MAX_SPECULATIVE_URLS
;
i
+
+
)
{
Bundle
listItem
=
list
.
get
(
i
)
;
if
(
listItem
=
=
null
)
{
continue
;
}
Uri
listUri
=
listItem
.
getParcelable
(
KEY_URL
)
;
if
(
listUri
=
=
null
)
{
continue
;
}
GeckoThread
.
speculativeConnect
(
listUri
.
toString
(
)
)
;
}
return
true
;
}
Override
protected
Bundle
extraCommand
(
String
commandName
Bundle
bundle
)
{
Log
.
v
(
LOGTAG
"
extraCommand
(
)
"
)
;
return
null
;
}
}
