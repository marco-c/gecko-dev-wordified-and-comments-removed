package
org
.
mozilla
.
gecko
;
import
android
.
content
.
Context
;
import
android
.
util
.
Log
;
import
android
.
text
.
TextUtils
;
import
org
.
mozilla
.
gecko
.
switchboard
.
Preferences
;
import
org
.
mozilla
.
gecko
.
switchboard
.
SwitchBoard
;
import
java
.
util
.
LinkedList
;
import
java
.
util
.
List
;
public
class
Experiments
{
private
static
final
String
LOGTAG
=
"
GeckoExperiments
"
;
public
static
final
String
WHATSNEW_NOTIFICATION
=
"
whatsnew
-
notification
"
;
public
static
final
String
ONBOARDING3_A
=
"
onboarding3
-
a
"
;
public
static
final
String
ONBOARDING3_B
=
"
onboarding3
-
b
"
;
public
static
final
String
ONBOARDING3_C
=
"
onboarding3
-
c
"
;
public
static
final
String
DOWNLOAD_CONTENT_CATALOG_SYNC
=
"
download
-
content
-
catalog
-
sync
"
;
public
static
final
String
PROMOTE_ADD_TO_HOMESCREEN
=
"
promote
-
add
-
to
-
homescreen
"
;
public
static
final
String
PREF_ONBOARDING_VERSION
=
"
onboarding_version
"
;
public
static
final
String
TRIPLE_READERVIEW_BOOKMARK_PROMPT
=
"
triple
-
readerview
-
bookmark
-
prompt
"
;
public
static
final
String
URLBAR_SHOW_ORIGIN_ONLY
=
"
urlbar
-
show
-
origin
-
only
"
;
public
static
final
String
URLBAR_SHOW_EV_CERT_OWNER
=
"
urlbar
-
show
-
ev
-
cert
-
owner
"
;
public
static
final
String
HLS_VIDEO_PLAYBACK
=
"
hls
-
video
-
playback
"
;
public
static
final
String
TOP_ADDONS_MENU
=
"
top
-
addons
-
menu
"
;
public
static
final
String
FULL_BOOKMARK_MANAGEMENT
=
"
full
-
bookmark
-
management
"
;
public
static
final
String
LEANPLUM
=
"
leanplum
-
start
"
;
public
static
final
String
LEANPLUM_DEBUG
=
"
leanplum
-
debug
"
;
public
static
final
String
ENABLE_PROCESSING_BACKGROUND_TELEMETRY
=
"
process
-
background
-
telemetry
"
;
public
static
List
<
String
>
getActiveExperiments
(
Context
c
)
{
final
List
<
String
>
experiments
=
new
LinkedList
<
>
(
)
;
experiments
.
addAll
(
SwitchBoard
.
getActiveExperiments
(
c
)
)
;
final
String
onboardingExperiment
=
GeckoSharedPrefs
.
forProfile
(
c
)
.
getString
(
Experiments
.
PREF_ONBOARDING_VERSION
null
)
;
if
(
!
TextUtils
.
isEmpty
(
onboardingExperiment
)
)
{
experiments
.
add
(
onboardingExperiment
)
;
}
return
experiments
;
}
public
static
void
setOverride
(
Context
c
String
experimentName
boolean
isEnabled
)
{
Log
.
d
(
LOGTAG
"
setOverride
:
"
+
experimentName
+
"
=
"
+
isEnabled
)
;
Preferences
.
setOverrideValue
(
c
experimentName
isEnabled
)
;
}
public
static
void
clearOverride
(
Context
c
String
experimentName
)
{
Log
.
d
(
LOGTAG
"
clearOverride
:
"
+
experimentName
)
;
Preferences
.
clearOverrideValue
(
c
experimentName
)
;
}
}
