#
ifndef
mozilla_image_AutoRestoreSVGState_h
#
define
mozilla_image_AutoRestoreSVGState_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
AutoRestore
.
h
"
#
include
"
mozilla
/
SVGContextPaint
.
h
"
#
include
"
mozilla
/
dom
/
SVGSVGElement
.
h
"
#
include
"
nsPresContext
.
h
"
#
include
"
SVGDrawingParameters
.
h
"
#
include
"
SVGDocumentWrapper
.
h
"
#
include
"
mozilla
/
dom
/
DocumentInlines
.
h
"
#
include
"
mozilla
/
dom
/
SVGDocument
.
h
"
#
include
"
mozilla
/
dom
/
BrowsingContextBinding
.
h
"
namespace
mozilla
:
:
image
{
class
MOZ_STACK_CLASS
AutoRestoreSVGState
final
{
public
:
AutoRestoreSVGState
(
const
SVGDrawingParameters
&
aParams
SVGDocumentWrapper
*
aSVGDocumentWrapper
bool
aContextPaint
)
:
AutoRestoreSVGState
(
aParams
.
svgContext
aParams
.
animationTime
aSVGDocumentWrapper
aContextPaint
)
{
}
AutoRestoreSVGState
(
const
Maybe
<
SVGImageContext
>
&
aSVGContext
float
aAnimationTime
SVGDocumentWrapper
*
aSVGDocumentWrapper
bool
aContextPaint
)
:
mIsDrawing
(
aSVGDocumentWrapper
-
>
mIsDrawing
)
mPAR
(
aSVGContext
aSVGDocumentWrapper
-
>
GetRootSVGElem
(
)
)
mTime
(
aSVGDocumentWrapper
-
>
GetRootSVGElem
(
)
aAnimationTime
)
{
MOZ_ASSERT
(
!
mIsDrawing
.
SavedValue
(
)
)
;
MOZ_ASSERT
(
aSVGDocumentWrapper
-
>
GetDocument
(
)
)
;
if
(
auto
*
pc
=
aSVGDocumentWrapper
-
>
GetDocument
(
)
-
>
GetPresContext
(
)
)
{
pc
-
>
SetColorSchemeOverride
(
[
&
]
{
if
(
aSVGContext
&
&
aSVGContext
-
>
GetColorScheme
(
)
)
{
auto
scheme
=
*
aSVGContext
-
>
GetColorScheme
(
)
;
return
scheme
=
=
ColorScheme
:
:
Light
?
dom
:
:
PrefersColorSchemeOverride
:
:
Light
:
dom
:
:
PrefersColorSchemeOverride
:
:
Dark
;
}
return
dom
:
:
PrefersColorSchemeOverride
:
:
None
;
}
(
)
)
;
}
aSVGDocumentWrapper
-
>
mIsDrawing
=
true
;
if
(
aContextPaint
)
{
MOZ_ASSERT
(
aSVGContext
-
>
GetContextPaint
(
)
)
;
mContextPaint
.
emplace
(
*
aSVGContext
-
>
GetContextPaint
(
)
*
aSVGDocumentWrapper
-
>
GetDocument
(
)
)
;
}
}
private
:
AutoRestore
<
bool
>
mIsDrawing
;
AutoPreserveAspectRatioOverride
mPAR
;
AutoSVGTimeSetRestore
mTime
;
Maybe
<
AutoSetRestoreSVGContextPaint
>
mContextPaint
;
}
;
}
#
endif
