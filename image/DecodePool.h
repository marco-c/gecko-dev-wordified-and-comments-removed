#
ifndef
mozilla_image_DecodePool_h
#
define
mozilla_image_DecodePool_h
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
nsCOMArray
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIEventTarget
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsStringFwd
.
h
"
class
nsIThread
;
class
nsIThreadPool
;
namespace
mozilla
{
namespace
image
{
class
Decoder
;
class
DecodePoolImpl
;
class
IDecodingTask
;
class
DecodePool
final
:
public
nsIObserver
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIOBSERVER
static
void
Initialize
(
)
;
static
DecodePool
*
Singleton
(
)
;
static
uint32_t
NumberOfCores
(
)
;
bool
IsShuttingDown
(
)
const
;
void
AsyncRun
(
IDecodingTask
*
aTask
)
;
bool
SyncRunIfPreferred
(
IDecodingTask
*
aTask
const
nsCString
&
aURI
)
;
void
SyncRunIfPossible
(
IDecodingTask
*
aTask
const
nsCString
&
aURI
)
;
already_AddRefed
<
nsIEventTarget
>
GetIOEventTarget
(
)
;
private
:
friend
class
DecodePoolWorker
;
DecodePool
(
)
;
virtual
~
DecodePool
(
)
;
static
StaticRefPtr
<
DecodePool
>
sSingleton
;
static
uint32_t
sNumCores
;
bool
mShuttingDown
=
false
;
Mutex
mMutex
;
nsCOMPtr
<
nsIThread
>
mIOThread
MOZ_GUARDED_BY
(
mMutex
)
;
}
;
}
}
#
endif
