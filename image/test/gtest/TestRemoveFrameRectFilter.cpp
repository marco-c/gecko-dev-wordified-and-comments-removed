#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
gfx
/
2D
.
h
"
#
include
"
Common
.
h
"
#
include
"
Decoder
.
h
"
#
include
"
DecoderFactory
.
h
"
#
include
"
SourceBuffer
.
h
"
#
include
"
SurfaceFilters
.
h
"
#
include
"
SurfacePipe
.
h
"
using
namespace
mozilla
;
using
namespace
mozilla
:
:
gfx
;
using
namespace
mozilla
:
:
image
;
template
<
typename
Func
>
void
WithRemoveFrameRectFilter
(
const
IntSize
&
aSize
const
IntRect
&
aFrameRect
Func
aFunc
)
{
RefPtr
<
Decoder
>
decoder
=
CreateTrivialDecoder
(
)
;
ASSERT_TRUE
(
decoder
!
=
nullptr
)
;
WithFilterPipeline
(
decoder
Forward
<
Func
>
(
aFunc
)
RemoveFrameRectConfig
{
aFrameRect
}
SurfaceConfig
{
decoder
aSize
SurfaceFormat
:
:
B8G8R8A8
false
}
)
;
}
void
AssertConfiguringRemoveFrameRectFilterFails
(
const
IntSize
&
aSize
const
IntRect
&
aFrameRect
)
{
RefPtr
<
Decoder
>
decoder
=
CreateTrivialDecoder
(
)
;
ASSERT_TRUE
(
decoder
!
=
nullptr
)
;
AssertConfiguringPipelineFails
(
decoder
RemoveFrameRectConfig
{
aFrameRect
}
SurfaceConfig
{
decoder
aSize
SurfaceFormat
:
:
B8G8R8A8
false
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_0_0_100_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
0
0
100
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_0_0_0_0
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
0
0
0
0
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_Minus50_50_0_0
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
-
50
50
0
0
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_50_Minus50_0_0
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
50
-
50
0
0
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_150_50_0_0
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
150
50
0
0
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_50_150_0_0
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
50
150
0
0
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_200_200_100_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
200
200
100
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_Minus200_25_100_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
-
200
25
100
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_25_Minus200_100_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
25
-
200
100
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_200_25_100_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
200
25
100
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_25_200_100_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
25
200
100
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_Minus200_Minus200_100_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
-
200
-
200
100
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
0
0
)
)
Some
(
IntRect
(
0
0
0
0
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_Minus50_Minus50_100_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
-
50
-
50
100
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
50
50
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_Minus50_25_100_50
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
-
50
25
100
50
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
50
)
)
Some
(
IntRect
(
0
25
50
50
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_25_Minus50_50_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
25
-
50
50
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
50
100
)
)
Some
(
IntRect
(
25
0
50
50
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_50_25_100_50
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
50
25
100
50
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
50
)
)
Some
(
IntRect
(
50
25
50
50
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
WritePixels100_100_to_25_50_50_100
)
{
WithRemoveFrameRectFilter
(
IntSize
(
100
100
)
IntRect
(
25
50
50
100
)
[
]
(
Decoder
*
aDecoder
SurfaceFilter
*
aFilter
)
{
CheckWritePixels
(
aDecoder
aFilter
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
100
100
)
)
Some
(
IntRect
(
0
0
50
50
)
)
Some
(
IntRect
(
25
50
50
100
)
)
)
;
}
)
;
}
TEST
(
ImageRemoveFrameRectFilter
RemoveFrameRectFailsFor0_0_to_0_0_100_100
)
{
AssertConfiguringRemoveFrameRectFilterFails
(
IntSize
(
0
0
)
IntRect
(
0
0
100
100
)
)
;
}
TEST
(
ImageRemoveFrameRectFilter
RemoveFrameRectFailsForMinus1_Minus1_to_0_0_100_100
)
{
AssertConfiguringRemoveFrameRectFilterFails
(
IntSize
(
-
1
-
1
)
IntRect
(
0
0
100
100
)
)
;
}
TEST
(
ImageRemoveFrameRectFilter
RemoveFrameRectFailsFor100_100_to_0_0_0_0
)
{
AssertConfiguringRemoveFrameRectFilterFails
(
IntSize
(
100
100
)
IntRect
(
0
0
-
1
-
1
)
)
;
}
TEST
(
ImageRemoveFrameRectFilter
RemoveFrameRectFailsFor100_100_to_0_0_Minus1_Minus1
)
{
AssertConfiguringRemoveFrameRectFilterFails
(
IntSize
(
100
100
)
IntRect
(
0
0
-
1
-
1
)
)
;
}
TEST
(
ImageRemoveFrameRectFilter
ConfiguringPalettedRemoveFrameRectFails
)
{
RefPtr
<
Decoder
>
decoder
=
CreateTrivialDecoder
(
)
;
ASSERT_TRUE
(
decoder
!
=
nullptr
)
;
AssertConfiguringPipelineFails
(
decoder
RemoveFrameRectConfig
{
IntRect
(
0
0
50
50
)
}
PalettedSurfaceConfig
{
decoder
IntSize
(
100
100
)
IntRect
(
0
0
50
50
)
SurfaceFormat
:
:
B8G8R8A8
8
false
}
)
;
}
