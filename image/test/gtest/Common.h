#
ifndef
mozilla_image_test_gtest_Common_h
#
define
mozilla_image_test_gtest_Common_h
#
include
"
mozilla
/
gfx
/
2D
.
h
"
#
include
"
nsCOMPtr
.
h
"
class
nsIInputStream
;
namespace
mozilla
{
enum
TestCaseFlags
{
TEST_CASE_DEFAULT_FLAGS
=
0
TEST_CASE_IS_FUZZY
=
1
<
<
0
TEST_CASE_HAS_ERROR
=
1
<
<
1
TEST_CASE_IS_TRANSPARENT
=
1
<
<
2
TEST_CASE_IS_ANIMATED
=
1
<
<
3
}
;
struct
ImageTestCase
{
ImageTestCase
(
const
char
*
aPath
const
char
*
aMimeType
gfx
:
:
IntSize
aSize
uint32_t
aFlags
=
TEST_CASE_DEFAULT_FLAGS
)
:
mPath
(
aPath
)
mMimeType
(
aMimeType
)
mSize
(
aSize
)
mFlags
(
aFlags
)
{
}
const
char
*
mPath
;
const
char
*
mMimeType
;
gfx
:
:
IntSize
mSize
;
uint32_t
mFlags
;
}
;
struct
BGRAColor
{
BGRAColor
(
uint8_t
aBlue
uint8_t
aGreen
uint8_t
aRed
uint8_t
aAlpha
)
:
mBlue
(
aBlue
)
mGreen
(
aGreen
)
mRed
(
aRed
)
mAlpha
(
aAlpha
)
{
}
static
BGRAColor
Green
(
)
{
return
BGRAColor
(
0x00
0xFF
0x00
0xFF
)
;
}
uint8_t
mBlue
;
uint8_t
mGreen
;
uint8_t
mRed
;
uint8_t
mAlpha
;
}
;
already_AddRefed
<
nsIInputStream
>
LoadFile
(
const
char
*
aRelativePath
)
;
bool
IsSolidColor
(
gfx
:
:
SourceSurface
*
aSurface
BGRAColor
aColor
bool
aFuzzy
=
false
)
;
ImageTestCase
GreenPNGTestCase
(
)
;
ImageTestCase
GreenGIFTestCase
(
)
;
ImageTestCase
GreenJPGTestCase
(
)
;
ImageTestCase
GreenBMPTestCase
(
)
;
ImageTestCase
GreenICOTestCase
(
)
;
ImageTestCase
GreenFirstFrameAnimatedGIFTestCase
(
)
;
ImageTestCase
GreenFirstFrameAnimatedPNGTestCase
(
)
;
ImageTestCase
CorruptTestCase
(
)
;
ImageTestCase
TransparentPNGTestCase
(
)
;
ImageTestCase
TransparentGIFTestCase
(
)
;
ImageTestCase
FirstFramePaddingGIFTestCase
(
)
;
ImageTestCase
NoFrameDelayGIFTestCase
(
)
;
ImageTestCase
TransparentBMPWhenBMPAlphaEnabledTestCase
(
)
;
ImageTestCase
RLE4BMPTestCase
(
)
;
ImageTestCase
RLE8BMPTestCase
(
)
;
}
#
endif
