#
ifndef
mozilla_image_ImgDrawResult_h
#
define
mozilla_image_ImgDrawResult_h
#
include
<
cstdint
>
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Likely
.
h
"
namespace
mozilla
{
namespace
image
{
enum
class
MOZ_MUST_USE_TYPE
ImgDrawResult
:
uint8_t
{
SUCCESS
INCOMPLETE
WRONG_SIZE
NOT_READY
TEMPORARY_ERROR
BAD_IMAGE
BAD_ARGS
NOT_SUPPORTED
}
;
inline
ImgDrawResult
operator
&
(
const
ImgDrawResult
aLeft
const
ImgDrawResult
aRight
)
{
if
(
MOZ_LIKELY
(
aLeft
=
=
ImgDrawResult
:
:
SUCCESS
)
)
{
return
aRight
;
}
if
(
aLeft
=
=
ImgDrawResult
:
:
BAD_IMAGE
&
&
aRight
!
=
ImgDrawResult
:
:
SUCCESS
)
{
return
aRight
;
}
return
aLeft
;
}
inline
ImgDrawResult
&
operator
&
=
(
ImgDrawResult
&
aLeft
const
ImgDrawResult
aRight
)
{
aLeft
=
aLeft
&
aRight
;
return
aLeft
;
}
struct
imgDrawingParams
{
explicit
imgDrawingParams
(
uint32_t
aImageFlags
=
0
)
:
imageFlags
(
aImageFlags
)
result
(
ImgDrawResult
:
:
SUCCESS
)
{
}
const
uint32_t
imageFlags
;
ImgDrawResult
result
;
}
;
}
}
#
endif
