#
ifndef
mozilla_image_ImageMemoryReporter_h
#
define
mozilla_image_ImageMemoryReporter_h
#
include
<
cstdint
>
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
layers
/
SharedSurfacesMemoryReport
.
h
"
class
nsISupports
;
class
nsIHandleReportCallback
;
namespace
mozilla
{
namespace
image
{
struct
ImageMemoryCounter
;
struct
SurfaceMemoryCounter
;
class
ImageMemoryReporter
final
{
public
:
static
void
InitForWebRender
(
)
;
static
void
ShutdownForWebRender
(
)
;
static
void
ReportSharedSurfaces
(
nsIHandleReportCallback
*
aHandleReport
nsISupports
*
aData
const
layers
:
:
SharedSurfacesMemoryReport
&
aSharedSurfaces
)
;
static
void
AppendSharedSurfacePrefix
(
nsACString
&
aPathPrefix
const
SurfaceMemoryCounter
&
aCounter
layers
:
:
SharedSurfacesMemoryReport
&
aSharedSurfaces
)
;
static
void
TrimSharedSurfaces
(
const
ImageMemoryCounter
&
aCounter
layers
:
:
SharedSurfacesMemoryReport
&
aSharedSurfaces
)
;
private
:
static
void
ReportSharedSurfaces
(
nsIHandleReportCallback
*
aHandleReport
nsISupports
*
aData
bool
aIsForCompositor
const
layers
:
:
SharedSurfacesMemoryReport
&
aSharedSurfaces
)
;
static
void
ReportSharedSurface
(
nsIHandleReportCallback
*
aHandleReport
nsISupports
*
aData
bool
aIsForCompositor
uint64_t
aExternalId
const
layers
:
:
SharedSurfacesMemoryReport
:
:
SurfaceEntry
&
aEntry
)
;
class
WebRenderReporter
;
static
WebRenderReporter
*
sWrReporter
;
}
;
}
}
#
endif
