#
ifndef
mozilla_image_src_ImageCacheKey_h
#
define
mozilla_image_src_ImageCacheKey_h
#
include
"
mozilla
/
Maybe
.
h
"
class
nsIDOMDocument
;
class
nsIURI
;
namespace
mozilla
{
namespace
image
{
class
ImageURL
;
class
ImageCacheKey
final
{
public
:
ImageCacheKey
(
nsIURI
*
aURI
nsIDOMDocument
*
aDocument
)
;
ImageCacheKey
(
ImageURL
*
aURI
nsIDOMDocument
*
aDocument
)
;
ImageCacheKey
(
const
ImageCacheKey
&
aOther
)
;
ImageCacheKey
(
ImageCacheKey
&
&
aOther
)
;
bool
operator
=
=
(
const
ImageCacheKey
&
aOther
)
const
;
uint32_t
Hash
(
)
const
{
return
mHash
;
}
const
char
*
Spec
(
)
const
;
bool
IsChrome
(
)
const
{
return
mIsChrome
;
}
private
:
static
uint32_t
ComputeHash
(
ImageURL
*
aURI
const
Maybe
<
uint64_t
>
&
aBlobSerial
void
*
aControlledDocument
)
;
static
void
*
GetControlledDocumentToken
(
nsIDOMDocument
*
aDocument
)
;
RefPtr
<
ImageURL
>
mURI
;
Maybe
<
uint64_t
>
mBlobSerial
;
void
*
mControlledDocument
;
uint32_t
mHash
;
bool
mIsChrome
;
}
;
}
}
#
endif
