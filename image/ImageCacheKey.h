#
ifndef
mozilla_image_src_ImageCacheKey_h
#
define
mozilla_image_src_ImageCacheKey_h
#
include
"
mozilla
/
BasePrincipal
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
PLDHashTable
.
h
"
class
nsIDocument
;
class
nsIURI
;
namespace
mozilla
{
namespace
image
{
class
ImageCacheKey
final
{
public
:
ImageCacheKey
(
nsIURI
*
aURI
const
OriginAttributes
&
aAttrs
nsIDocument
*
aDocument
nsresult
&
aRv
)
;
ImageCacheKey
(
const
ImageCacheKey
&
aOther
)
;
ImageCacheKey
(
ImageCacheKey
&
&
aOther
)
;
bool
operator
=
=
(
const
ImageCacheKey
&
aOther
)
const
;
PLDHashNumber
Hash
(
)
const
{
return
mHash
;
}
nsIURI
*
URI
(
)
const
{
return
mURI
;
}
bool
IsChrome
(
)
const
{
return
mIsChrome
;
}
void
*
ControlledDocument
(
)
const
{
return
mControlledDocument
;
}
private
:
bool
SchemeIs
(
const
char
*
aScheme
)
;
static
void
*
GetControlledDocumentToken
(
nsIDocument
*
aDocument
)
;
nsCOMPtr
<
nsIURI
>
mURI
;
Maybe
<
uint64_t
>
mBlobSerial
;
nsCString
mBlobRef
;
OriginAttributes
mOriginAttributes
;
void
*
mControlledDocument
;
PLDHashNumber
mHash
;
bool
mIsChrome
;
}
;
}
}
#
endif
