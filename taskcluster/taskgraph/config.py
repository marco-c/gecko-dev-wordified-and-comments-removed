from
__future__
import
absolute_import
print_function
unicode_literals
import
os
import
logging
import
yaml
from
.
util
.
schema
import
validate_schema
Schema
from
voluptuous
import
Required
logger
=
logging
.
getLogger
(
__name__
)
graph_config_schema
=
Schema
(
{
    
Required
(
'
trust
-
domain
'
)
:
basestring
    
Required
(
'
project
-
repo
-
param
-
prefix
'
)
:
basestring
    
Required
(
'
treeherder
'
)
:
{
        
Required
(
'
group
-
names
'
)
:
{
basestring
:
basestring
}
    
}
    
Required
(
'
index
'
)
:
{
        
Required
(
'
products
'
)
:
[
basestring
]
    
}
    
Required
(
'
try
'
)
:
{
        
Required
(
'
ridealong
-
builds
'
default
=
{
}
)
:
{
basestring
:
[
basestring
]
}
    
}
    
Required
(
'
release
-
promotion
'
)
:
{
        
Required
(
'
products
'
)
:
[
basestring
]
    
}
    
Required
(
'
scriptworker
'
)
:
{
        
Required
(
'
scope
-
prefix
'
)
:
basestring
        
Required
(
'
worker
-
types
'
)
:
{
basestring
:
[
basestring
]
}
    
}
}
)
def
validate_graph_config
(
config
)
:
    
return
validate_schema
(
graph_config_schema
config
"
Invalid
graph
configuration
:
"
)
def
load_graph_config
(
root_dir
)
:
    
config_yml
=
os
.
path
.
join
(
root_dir
"
config
.
yml
"
)
    
if
not
os
.
path
.
exists
(
config_yml
)
:
        
raise
Exception
(
"
Couldn
'
t
find
taskgraph
configuration
:
{
}
"
.
format
(
config_yml
)
)
    
logger
.
debug
(
"
loading
config
from
{
}
"
.
format
(
config_yml
)
)
    
with
open
(
config_yml
)
as
f
:
        
config
=
yaml
.
load
(
f
)
    
validate_graph_config
(
config
)
    
return
config
