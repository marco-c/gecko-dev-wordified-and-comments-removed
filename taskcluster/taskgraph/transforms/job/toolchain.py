"
"
"
Support
for
running
toolchain
-
building
jobs
via
dedicated
scripts
"
"
"
from
__future__
import
absolute_import
print_function
unicode_literals
from
voluptuous
import
Schema
Required
Any
from
taskgraph
.
transforms
.
job
import
run_job_using
from
taskgraph
.
transforms
.
job
.
common
import
(
    
docker_worker_add_tc_vcs_cache
    
docker_worker_add_gecko_vcs_env_vars
    
docker_worker_support_vcs_checkout
)
toolchain_run_schema
=
Schema
(
{
    
Required
(
'
using
'
)
:
'
toolchain
-
script
'
    
Required
(
'
script
'
)
:
basestring
    
Required
(
'
tooltool
-
downloads
'
default
=
False
)
:
Any
(
        
False
        
'
public
'
        
'
internal
'
    
)
}
)
def
add_files_changed
(
run
taskdesc
)
:
    
files
=
taskdesc
.
setdefault
(
'
when
'
{
}
)
.
setdefault
(
'
files
-
changed
'
[
]
)
    
files
.
append
(
'
taskcluster
/
taskgraph
/
transforms
/
job
/
toolchain
.
py
'
)
    
files
.
append
(
'
taskcluster
/
scripts
/
misc
/
{
}
'
.
format
(
run
[
'
script
'
]
)
)
run_job_using
(
"
docker
-
worker
"
"
toolchain
-
script
"
schema
=
toolchain_run_schema
)
def
docker_worker_toolchain
(
config
job
taskdesc
)
:
    
run
=
job
[
'
run
'
]
    
worker
=
taskdesc
[
'
worker
'
]
    
worker
[
'
artifacts
'
]
=
[
]
    
worker
[
'
caches
'
]
=
[
]
    
worker
[
'
artifacts
'
]
.
append
(
{
        
'
name
'
:
'
public
'
        
'
path
'
:
'
/
home
/
worker
/
workspace
/
artifacts
/
'
        
'
type
'
:
'
directory
'
    
}
)
    
docker_worker_add_tc_vcs_cache
(
config
job
taskdesc
)
    
docker_worker_add_gecko_vcs_env_vars
(
config
job
taskdesc
)
    
docker_worker_support_vcs_checkout
(
config
job
taskdesc
)
    
env
=
worker
[
'
env
'
]
    
env
.
update
(
{
        
'
MOZ_BUILD_DATE
'
:
config
.
params
[
'
moz_build_date
'
]
        
'
MOZ_SCM_LEVEL
'
:
config
.
params
[
'
level
'
]
        
'
TOOLS_DISABLE
'
:
'
true
'
    
}
)
    
worker
[
'
caches
'
]
.
append
(
{
        
'
type
'
:
'
persistent
'
        
'
name
'
:
'
tooltool
-
cache
'
        
'
mount
-
point
'
:
'
/
home
/
worker
/
tooltool
-
cache
'
    
}
)
    
env
[
'
TOOLTOOL_CACHE
'
]
=
'
/
home
/
worker
/
tooltool
-
cache
'
    
worker
[
'
relengapi
-
proxy
'
]
=
False
    
if
run
[
'
tooltool
-
downloads
'
]
:
        
worker
[
'
relengapi
-
proxy
'
]
=
True
        
taskdesc
[
'
scopes
'
]
.
extend
(
[
            
'
docker
-
worker
:
relengapi
-
proxy
:
tooltool
.
download
.
public
'
        
]
)
        
if
run
[
'
tooltool
-
downloads
'
]
=
=
'
internal
'
:
            
taskdesc
[
'
scopes
'
]
.
append
(
                
'
docker
-
worker
:
relengapi
-
proxy
:
tooltool
.
download
.
internal
'
)
    
worker
[
'
command
'
]
=
[
        
'
/
home
/
worker
/
bin
/
run
-
task
'
        
'
-
-
vcs
-
checkout
=
/
home
/
worker
/
workspace
/
build
/
src
'
        
'
-
-
'
        
'
bash
'
        
'
-
c
'
        
'
cd
/
home
/
worker
&
&
'
        
'
.
/
workspace
/
build
/
src
/
taskcluster
/
scripts
/
misc
/
{
}
'
.
format
(
            
run
[
'
script
'
]
)
    
]
    
add_files_changed
(
run
taskdesc
)
run_job_using
(
"
generic
-
worker
"
"
toolchain
-
script
"
schema
=
toolchain_run_schema
)
def
windows_toolchain
(
config
job
taskdesc
)
:
    
run
=
job
[
'
run
'
]
    
worker
=
taskdesc
[
'
worker
'
]
    
worker
[
'
artifacts
'
]
=
[
{
        
'
path
'
:
r
'
public
\
build
'
        
'
type
'
:
'
directory
'
    
}
]
    
docker_worker_add_gecko_vcs_env_vars
(
config
job
taskdesc
)
    
svn_cache
=
'
level
-
{
}
-
toolchain
-
clang
-
cl
-
build
-
svn
'
.
format
(
config
.
params
[
'
level
'
]
)
    
worker
[
'
mounts
'
]
=
[
{
        
'
cache
-
name
'
:
svn_cache
        
'
path
'
:
r
'
llvm
-
sources
'
    
}
]
    
taskdesc
[
'
scopes
'
]
.
extend
(
[
        
'
generic
-
worker
:
cache
:
'
+
svn_cache
    
]
)
    
env
=
worker
[
'
env
'
]
    
env
.
update
(
{
        
'
MOZ_BUILD_DATE
'
:
config
.
params
[
'
moz_build_date
'
]
        
'
MOZ_SCM_LEVEL
'
:
config
.
params
[
'
level
'
]
    
}
)
    
hg
=
r
'
c
:
\
Program
Files
\
Mercurial
\
hg
.
exe
'
    
hg_command
=
[
'
"
{
}
"
'
.
format
(
hg
)
]
    
hg_command
.
append
(
'
robustcheckout
'
)
    
hg_command
.
extend
(
[
'
-
-
sharebase
'
'
y
:
\
\
hg
-
shared
'
]
)
    
hg_command
.
append
(
'
-
-
purge
'
)
    
hg_command
.
extend
(
[
'
-
-
upstream
'
'
https
:
/
/
hg
.
mozilla
.
org
/
mozilla
-
unified
'
]
)
    
hg_command
.
extend
(
[
'
-
-
revision
'
'
%
GECKO_HEAD_REV
%
'
]
)
    
hg_command
.
append
(
'
%
GECKO_HEAD_REPOSITORY
%
'
)
    
hg_command
.
append
(
'
.
\
\
build
\
\
src
'
)
    
bash
=
r
'
c
:
\
mozilla
-
build
\
msys
\
bin
\
bash
'
    
worker
[
'
command
'
]
=
[
        
'
'
.
join
(
hg_command
)
        
r
'
{
}
-
c
.
/
build
/
src
/
taskcluster
/
scripts
/
misc
/
{
}
'
.
format
(
bash
run
[
'
script
'
]
)
    
]
    
add_files_changed
(
run
taskdesc
)
