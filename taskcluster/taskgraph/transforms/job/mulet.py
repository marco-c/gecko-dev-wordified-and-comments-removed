"
"
"
Support
for
running
mulet
tasks
via
build
-
mulet
-
linux
.
sh
"
"
"
from
__future__
import
absolute_import
print_function
unicode_literals
import
time
from
voluptuous
import
Schema
Required
from
taskgraph
.
transforms
.
job
import
run_job_using
from
taskgraph
.
transforms
.
job
.
common
import
(
    
docker_worker_add_workspace_cache
    
docker_worker_add_tc_vcs_cache
    
docker_worker_add_gecko_vcs_env_vars
    
docker_worker_add_public_artifacts
)
COALESCE_KEY
=
'
builds
.
{
project
}
.
{
name
}
'
build_mulet_linux_schema
=
Schema
(
{
    
Required
(
'
using
'
)
:
'
mach
-
via
-
build
-
mulet
-
linux
.
sh
'
    
Required
(
'
mozconfig
'
)
:
basestring
    
Required
(
'
tooltool
-
manifest
'
)
:
basestring
}
)
run_job_using
(
"
docker
-
worker
"
"
mach
-
via
-
build
-
mulet
-
linux
.
sh
"
schema
=
build_mulet_linux_schema
)
def
docker_worker_make_via_build_mulet_linux_sh
(
config
job
taskdesc
)
:
    
run
=
job
[
'
run
'
]
    
worker
=
taskdesc
.
get
(
'
worker
'
)
    
taskdesc
[
'
worker
'
]
[
'
docker
-
image
'
]
=
{
"
in
-
tree
"
:
"
builder
"
}
    
worker
[
'
taskcluster
-
proxy
'
]
=
False
    
docker_worker_add_public_artifacts
(
config
job
taskdesc
)
    
docker_worker_add_tc_vcs_cache
(
config
job
taskdesc
)
    
docker_worker_add_workspace_cache
(
config
job
taskdesc
)
    
docker_worker_add_gecko_vcs_env_vars
(
config
job
taskdesc
)
    
env
=
worker
.
setdefault
(
'
env
'
{
}
)
    
env
.
update
(
{
        
'
MOZ_BUILD_DATE
'
:
time
.
strftime
(
"
%
Y
%
m
%
d
%
H
%
M
%
S
"
time
.
gmtime
(
config
.
params
[
'
pushdate
'
]
)
)
        
'
MOZ_SCM_LEVEL
'
:
config
.
params
[
'
level
'
]
    
}
)
    
env
[
'
MOZCONFIG
'
]
=
run
[
'
mozconfig
'
]
    
worker
[
'
caches
'
]
.
append
(
{
        
'
type
'
:
'
persistent
'
        
'
name
'
:
'
tooltool
-
cache
'
        
'
mount
-
point
'
:
'
/
home
/
worker
/
tooltool
-
cache
'
    
}
)
    
env
[
'
TOOLTOOL_CACHE
'
]
=
'
/
home
/
worker
/
tooltool
-
cache
'
    
env
[
'
TOOLTOOL_MANIFEST
'
]
=
run
[
'
tooltool
-
manifest
'
]
    
env
[
'
TOOLTOOL_REPO
'
]
=
'
https
:
/
/
github
.
com
/
mozilla
/
build
-
tooltool
'
    
env
[
'
TOOLTOOL_REV
'
]
=
'
master
'
    
worker
[
'
command
'
]
=
[
        
"
/
bin
/
bash
"
        
"
-
c
"
        
"
checkout
-
gecko
workspace
"
        
"
&
&
cd
.
/
workspace
/
gecko
/
taskcluster
/
scripts
/
builder
"
        
"
&
&
buildbot_step
'
Build
'
.
/
build
-
mulet
-
linux
.
sh
HOME
/
workspace
"
    
]
mulet_simulator_schema
=
Schema
(
{
    
Required
(
'
using
'
)
:
'
mulet
-
simulator
'
    
Required
(
'
shell
-
command
'
)
:
basestring
}
)
run_job_using
(
"
docker
-
worker
"
"
mulet
-
simulator
"
schema
=
mulet_simulator_schema
)
def
docker_worker_mulet_simulator
(
config
job
taskdesc
)
:
    
run
=
job
[
'
run
'
]
    
worker
=
taskdesc
.
get
(
'
worker
'
)
    
taskdesc
[
'
worker
'
]
[
'
docker
-
image
'
]
=
{
"
in
-
tree
"
:
"
builder
"
}
    
worker
[
'
taskcluster
-
proxy
'
]
=
False
    
docker_worker_add_public_artifacts
(
config
job
taskdesc
)
    
docker_worker_add_gecko_vcs_env_vars
(
config
job
taskdesc
)
    
taskdesc
.
setdefault
(
'
routes
'
[
]
)
.
extend
(
[
        
'
index
.
gecko
.
v1
.
{
project
}
.
latest
.
simulator
.
opt
'
.
format
(
*
*
config
.
params
)
    
]
)
    
shell_command
=
run
[
'
shell
-
command
'
]
.
format
(
*
*
config
.
params
)
    
worker
[
'
command
'
]
=
[
        
"
/
bin
/
bash
"
        
"
-
exc
"
        
{
'
task
-
reference
'
:
shell_command
}
    
]
