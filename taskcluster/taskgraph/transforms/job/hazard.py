"
"
"
Support
for
running
hazard
jobs
via
dedicated
scripts
"
"
"
from
__future__
import
absolute_import
print_function
unicode_literals
import
time
from
voluptuous
import
Schema
Required
Optional
Any
from
taskgraph
.
transforms
.
job
import
run_job_using
from
taskgraph
.
transforms
.
job
.
common
import
(
    
docker_worker_add_workspace_cache
    
docker_worker_setup_secrets
    
docker_worker_add_tc_vcs_cache
    
docker_worker_add_gecko_vcs_env_vars
    
docker_worker_add_public_artifacts
)
haz_run_schema
=
Schema
(
{
    
Required
(
'
using
'
)
:
'
hazard
'
    
Required
(
'
command
'
)
:
basestring
    
Optional
(
'
tooltool
-
manifest
'
)
:
basestring
    
Optional
(
'
mozconfig
'
)
:
basestring
    
Required
(
'
secrets
'
default
=
False
)
:
Any
(
bool
[
basestring
]
)
}
)
run_job_using
(
"
docker
-
worker
"
"
hazard
"
schema
=
haz_run_schema
)
def
docker_worker_hazard
(
config
job
taskdesc
)
:
    
run
=
job
[
'
run
'
]
    
worker
=
taskdesc
[
'
worker
'
]
    
worker
[
'
artifacts
'
]
=
[
]
    
worker
[
'
caches
'
]
=
[
]
    
docker_worker_add_tc_vcs_cache
(
config
job
taskdesc
)
    
docker_worker_add_public_artifacts
(
config
job
taskdesc
)
    
docker_worker_add_workspace_cache
(
config
job
taskdesc
)
    
docker_worker_setup_secrets
(
config
job
taskdesc
)
    
docker_worker_add_gecko_vcs_env_vars
(
config
job
taskdesc
)
    
env
=
worker
[
'
env
'
]
    
env
.
update
(
{
        
'
MOZ_BUILD_DATE
'
:
time
.
strftime
(
"
%
Y
%
m
%
d
%
H
%
M
%
S
"
time
.
gmtime
(
config
.
params
[
'
pushdate
'
]
)
)
        
'
MOZ_SCM_LEVEL
'
:
config
.
params
[
'
level
'
]
    
}
)
    
if
run
.
get
(
'
tooltool
-
manifest
'
)
:
        
env
[
'
TOOLTOOL_MANIFEST
'
]
=
run
[
'
tooltool
-
manifest
'
]
    
if
run
.
get
(
'
mozconfig
'
)
:
        
env
[
'
MOZCONFIG
'
]
=
run
[
'
mozconfig
'
]
    
worker
[
'
caches
'
]
.
append
(
{
        
'
type
'
:
'
persistent
'
        
'
name
'
:
'
tooltool
-
cache
'
        
'
mount
-
point
'
:
'
/
home
/
worker
/
tooltool
-
cache
'
    
}
)
    
worker
[
'
relengapi
-
proxy
'
]
=
True
    
taskdesc
[
'
scopes
'
]
.
extend
(
[
        
'
docker
-
worker
:
relengapi
-
proxy
:
tooltool
.
download
.
public
'
    
]
)
    
env
[
'
TOOLTOOL_CACHE
'
]
=
'
/
home
/
worker
/
tooltool
-
cache
'
    
env
[
'
TOOLTOOL_REPO
'
]
=
'
https
:
/
/
github
.
com
/
mozilla
/
build
-
tooltool
'
    
env
[
'
TOOLTOOL_REV
'
]
=
'
master
'
    
worker
[
'
command
'
]
=
[
"
/
bin
/
bash
"
"
-
c
"
run
[
'
command
'
]
]
