"
"
"
Support
for
running
jobs
that
are
invoked
via
the
run
-
task
script
.
"
"
"
from
__future__
import
absolute_import
print_function
unicode_literals
import
copy
from
taskgraph
.
transforms
.
job
import
run_job_using
from
taskgraph
.
transforms
.
job
.
common
import
(
    
docker_worker_add_build_dependency
    
docker_worker_support_vcs_checkout
)
from
voluptuous
import
Schema
Required
Any
run_task_schema
=
Schema
(
{
    
Required
(
'
using
'
)
:
'
run
-
task
'
    
Required
(
'
cache
-
dotcache
'
default
=
False
)
:
bool
    
Required
(
'
checkout
'
default
=
True
)
:
bool
    
Required
(
'
command
'
)
:
Any
(
[
basestring
]
basestring
)
    
Required
(
'
requires
-
build
'
default
=
False
)
:
bool
}
)
run_job_using
(
"
docker
-
worker
"
"
run
-
task
"
schema
=
run_task_schema
)
def
docker_worker_run_task
(
config
job
taskdesc
)
:
    
run
=
job
[
'
run
'
]
    
worker
=
taskdesc
[
'
worker
'
]
=
copy
.
deepcopy
(
job
[
'
worker
'
]
)
    
if
run
[
'
checkout
'
]
:
        
docker_worker_support_vcs_checkout
(
config
job
taskdesc
)
    
if
run
[
'
requires
-
build
'
]
:
        
docker_worker_add_build_dependency
(
config
job
taskdesc
)
    
if
run
.
get
(
'
cache
-
dotcache
'
)
and
int
(
config
.
params
[
'
level
'
]
)
>
1
:
        
worker
[
'
caches
'
]
.
append
(
{
            
'
type
'
:
'
persistent
'
            
'
name
'
:
'
level
-
{
level
}
-
{
project
}
-
dotcache
'
.
format
(
*
*
config
.
params
)
            
'
mount
-
point
'
:
'
/
home
/
worker
/
.
cache
'
        
}
)
    
run_command
=
run
[
'
command
'
]
    
if
isinstance
(
run_command
basestring
)
:
        
run_command
=
[
'
bash
'
'
-
cx
'
run_command
]
    
command
=
[
'
/
home
/
worker
/
bin
/
run
-
task
'
]
    
if
run
[
'
checkout
'
]
:
        
command
.
append
(
'
-
-
vcs
-
checkout
=
/
home
/
worker
/
checkouts
/
gecko
'
)
    
command
.
append
(
'
-
-
'
)
    
command
.
extend
(
run_command
)
    
worker
[
'
command
'
]
=
command
