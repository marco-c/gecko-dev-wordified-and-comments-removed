"
"
"
Take
the
base
iris
task
definition
and
generate
all
of
the
actual
test
chunks
for
all
combinations
of
test
categories
and
test
platforms
.
"
"
"
from
__future__
import
absolute_import
print_function
unicode_literals
from
copy
import
deepcopy
from
taskgraph
.
transforms
.
base
import
TransformSequence
from
taskgraph
.
util
.
schema
import
resolve_keyed_by
transforms
=
TransformSequence
(
)
transforms
.
add
def
make_iris_tasks
(
config
jobs
)
:
    
platforms
=
config
.
config
.
get
(
'
iris
-
build
-
platforms
'
)
    
fields
=
[
        
'
dependencies
.
build
'
        
'
fetches
.
build
'
        
'
run
.
command
'
        
'
treeherder
.
platform
'
        
'
worker
.
docker
-
image
'
        
'
worker
.
artifacts
'
        
'
worker
.
env
.
PATH
'
        
'
worker
.
max
-
run
-
time
'
        
'
worker
-
type
'
    
]
    
for
job
in
jobs
:
        
for
platform
in
platforms
:
            
clone
=
deepcopy
(
job
)
            
basename
=
clone
[
"
name
"
]
            
clone
[
"
description
"
]
=
clone
[
"
description
"
]
.
format
(
basename
)
            
clone
[
"
name
"
]
=
clone
[
"
name
"
]
+
"
-
"
+
platform
            
for
field
in
fields
:
                
resolve_keyed_by
(
clone
field
clone
[
'
name
'
]
*
*
{
                    
'
platform
'
:
platform
                
}
)
            
clone
[
"
worker
"
]
[
"
env
"
]
[
"
CURRENT_TEST_DIR
"
]
=
basename
            
if
clone
[
"
worker
"
]
[
"
docker
-
image
"
]
is
None
:
                
del
clone
[
"
worker
"
]
[
"
docker
-
image
"
]
            
if
clone
[
"
worker
"
]
[
"
env
"
]
[
"
PATH
"
]
is
None
:
                
del
clone
[
"
worker
"
]
[
"
env
"
]
[
"
PATH
"
]
            
yield
clone
