#
-
*
-
coding
:
utf
-
8
-
*
-
from
__future__
import
absolute_import
import
requests
import
subprocess
PUSHLOG_TMPL
=
'
{
}
/
json
-
pushes
?
version
=
2
&
changeset
=
{
}
&
tipsonly
=
1
&
full
=
1
'
def
find_hg_revision_push_info
(
repository
revision
)
:
    
"
"
"
Given
the
parameters
for
this
action
and
a
revision
find
the
    
pushlog_id
of
the
revision
.
"
"
"
    
pushlog_url
=
PUSHLOG_TMPL
.
format
(
repository
revision
)
    
r
=
requests
.
get
(
pushlog_url
)
    
r
.
raise_for_status
(
)
    
pushes
=
r
.
json
(
)
[
'
pushes
'
]
    
if
len
(
pushes
)
!
=
1
:
        
raise
RuntimeError
(
            
"
Unable
to
find
a
single
pushlog_id
for
{
}
revision
{
}
:
{
}
"
.
format
(
                
repository
revision
pushes
            
)
        
)
    
pushid
=
pushes
.
keys
(
)
[
0
]
    
return
{
'
pushdate
'
:
pushes
[
pushid
]
[
'
date
'
]
'
pushid
'
:
pushid
}
def
get_hg_revision_branch
(
root
revision
)
:
    
"
"
"
Given
the
parameters
for
a
revision
find
the
hg_branch
(
aka
    
relbranch
)
of
the
revision
.
"
"
"
    
return
subprocess
.
check_output
(
[
'
hg
'
'
identify
'
'
-
-
branch
'
'
-
-
rev
'
revision
]
cwd
=
root
)
def
calculate_head_rev
(
root
)
:
    
return
subprocess
.
check_output
(
[
'
hg
'
'
log
'
'
-
r
'
'
.
'
'
-
T
'
'
{
node
}
'
]
cwd
=
root
)
