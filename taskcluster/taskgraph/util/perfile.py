from
__future__
import
absolute_import
print_function
unicode_literals
import
logging
import
math
from
mozbuild
.
util
import
memoize
from
mozpack
.
path
import
match
as
mozpackmatch
from
mozversioncontrol
import
get_repository_object
InvalidRepoPath
from
taskgraph
import
files_changed
from
.
.
import
GECKO
logger
=
logging
.
getLogger
(
__name__
)
memoize
def
perfile_number_of_chunks
(
try_task_config
head_repository
head_rev
type
)
:
    
tests_per_chunk
=
10
.
0
    
if
type
.
startswith
(
'
test
-
verify
-
wpt
'
)
:
        
file_patterns
=
[
'
testing
/
web
-
platform
/
tests
/
*
*
'
                         
'
testing
/
web
-
platform
/
mozilla
/
tests
/
*
*
'
]
    
elif
type
.
startswith
(
'
test
-
verify
-
gpu
'
)
:
        
file_patterns
=
[
'
*
*
/
*
webgl
*
/
*
*
/
test_
*
'
                         
'
*
*
/
dom
/
canvas
/
*
*
/
test_
*
'
                         
'
*
*
/
gfx
/
tests
/
*
*
/
test_
*
'
                         
'
*
*
/
devtools
/
canvasdebugger
/
*
*
/
browser_
*
'
                         
'
*
*
/
reftest
*
/
*
*
'
]
    
elif
type
.
startswith
(
'
test
-
verify
'
)
:
        
file_patterns
=
[
'
*
*
/
test_
*
'
                         
'
*
*
/
browser_
*
'
                         
'
*
*
/
crashtest
*
/
*
*
'
                         
'
js
/
src
/
test
/
test
/
*
*
'
                         
'
js
/
src
/
test
/
non262
/
*
*
'
                         
'
js
/
src
/
test
/
test262
/
*
*
'
]
    
else
:
        
return
1
    
changed_files
=
set
(
)
    
specified_files
=
[
]
    
if
try_task_config
:
        
specified_files
=
try_task_config
.
split
(
"
:
"
)
    
try
:
        
vcs
=
get_repository_object
(
GECKO
)
        
changed_files
.
update
(
vcs
.
get_outgoing_files
(
'
AM
'
)
)
    
except
InvalidRepoPath
:
        
vcs
=
None
    
if
not
changed_files
:
        
changed_files
.
update
(
files_changed
.
get_changed_files
(
head_repository
                                                             
head_rev
)
)
    
changed_files
.
update
(
specified_files
)
    
test_count
=
0
    
for
pattern
in
file_patterns
:
        
for
path
in
changed_files
:
            
if
path
.
endswith
(
'
.
list
'
)
or
path
.
endswith
(
'
.
ini
'
)
:
                
continue
            
if
mozpackmatch
(
path
pattern
)
:
                
gpu
=
False
                
if
type
=
=
'
test
-
verify
-
e10s
'
:
                    
gpu_dirs
=
[
'
dom
/
canvas
'
'
gfx
/
tests
'
'
devtools
/
canvasdebugger
'
'
webgl
'
]
                    
for
gdir
in
gpu_dirs
:
                        
if
len
(
path
.
split
(
gdir
)
)
>
1
:
                            
gpu
=
True
                
if
not
gpu
:
                    
test_count
+
=
1
    
chunks
=
test_count
/
tests_per_chunk
    
return
int
(
math
.
ceil
(
chunks
)
)
