from
taskgraph
.
transforms
.
base
import
TransformSequence
from
taskgraph
.
util
.
dependencies
import
get_primary_dependency
transforms
=
TransformSequence
(
)
transforms
.
add
def
fxrecord
(
config
jobs
)
:
    
for
job
in
jobs
:
        
dep_job
=
get_primary_dependency
(
config
job
)
        
assert
dep_job
        
job
[
"
dependencies
"
]
=
{
dep_job
.
label
:
dep_job
.
label
}
        
job
[
"
treeherder
"
]
[
"
platform
"
]
=
dep_job
.
task
[
"
extra
"
]
[
"
treeherder
-
platform
"
]
        
job
[
"
worker
"
]
.
setdefault
(
"
env
"
{
}
)
[
"
FXRECORD_TASK_ID
"
]
=
{
            
"
task
-
reference
"
:
f
"
<
{
dep_job
.
label
}
>
"
        
}
        
product
=
dep_job
.
attributes
.
get
(
            
"
shipping_product
"
dep_job
.
task
.
get
(
"
shipping
-
product
"
)
        
)
        
if
product
:
            
job
.
setdefault
(
"
shipping
-
product
"
product
)
        
yield
job
