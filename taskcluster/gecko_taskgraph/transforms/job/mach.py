"
"
"
Support
for
running
mach
tasks
(
via
run
-
task
)
"
"
"
from
taskgraph
.
util
.
schema
import
Schema
taskref_or_string
from
voluptuous
import
Any
Optional
Required
from
gecko_taskgraph
.
transforms
.
job
import
configure_taskdesc_for_run
run_job_using
mach_schema
=
Schema
(
    
{
        
Required
(
"
using
"
)
:
"
mach
"
        
Required
(
"
mach
"
)
:
taskref_or_string
        
Optional
(
"
python
-
version
"
)
:
Any
(
str
int
float
)
        
Optional
(
"
sparse
-
profile
"
)
:
Any
(
str
None
)
        
Required
(
"
comm
-
checkout
"
)
:
bool
        
Optional
(
"
workdir
"
)
:
str
    
}
)
defaults
=
{
    
"
comm
-
checkout
"
:
False
}
run_job_using
(
"
docker
-
worker
"
"
mach
"
schema
=
mach_schema
defaults
=
defaults
)
run_job_using
(
"
generic
-
worker
"
"
mach
"
schema
=
mach_schema
defaults
=
defaults
)
def
configure_mach
(
config
job
taskdesc
)
:
    
run
=
job
[
"
run
"
]
    
worker
=
job
[
"
worker
"
]
    
additional_prefix
=
[
]
    
if
worker
[
"
os
"
]
=
=
"
macosx
"
:
        
additional_prefix
=
[
"
LC_ALL
=
en_US
.
UTF
-
8
"
"
LANG
=
en_US
.
UTF
-
8
"
]
    
python
=
run
.
get
(
"
python
-
version
"
)
    
if
python
:
        
del
run
[
"
python
-
version
"
]
        
if
taskdesc
.
get
(
"
use
-
system
-
python
"
)
:
            
if
worker
[
"
os
"
]
=
=
"
macosx
"
and
python
=
=
3
:
                
python
=
"
/
usr
/
local
/
bin
/
python3
"
        
python
=
str
(
python
)
        
try
:
            
float
(
python
)
            
python
=
"
python
"
+
python
        
except
ValueError
:
            
pass
        
additional_prefix
.
append
(
python
)
    
command_prefix
=
"
"
.
join
(
additional_prefix
+
[
"
.
/
mach
"
]
)
    
mach
=
run
[
"
mach
"
]
    
if
isinstance
(
mach
dict
)
:
        
ref
pattern
=
next
(
iter
(
mach
.
items
(
)
)
)
        
command
=
{
ref
:
command_prefix
+
pattern
}
    
else
:
        
command
=
command_prefix
+
mach
    
run
[
"
command
"
]
=
command
    
run
[
"
cwd
"
]
=
"
{
checkout
}
"
    
run
[
"
using
"
]
=
"
run
-
task
"
    
del
run
[
"
mach
"
]
    
configure_taskdesc_for_run
(
config
job
taskdesc
job
[
"
worker
"
]
[
"
implementation
"
]
)
