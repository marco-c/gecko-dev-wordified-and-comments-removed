#
ifndef
mozilla_EditAction_h
#
define
mozilla_EditAction_h
namespace
mozilla
{
enum
class
EditAction
{
eNone
eNotEditing
eInsertText
eInsertParagraphSeparator
eDeleteSelection
eDeleteBackward
eDeleteForward
eDeleteWordBackward
eDeleteWordForward
eDeleteToBeginningOfSoftLine
eDeleteToEndOfSoftLine
eStartComposition
eUpdateComposition
eCommitComposition
eEndComposition
eUndo
eRedo
eSetTextDirection
eCut
eCopy
ePaste
eDrop
eReplaceText
eUnknown
eSetAttribute
eRemoveAttribute
eInsertNode
eRemoveNode
eSplitNode
eJoinNodes
eSetCharacterSet
eSetWrapWidth
eSetText
eHidePassword
}
;
enum
class
EditSubAction
:
int32_t
{
eNone
eUndo
eRedo
eInsertNode
eCreateNode
eDeleteNode
eSplitNode
eJoinNodes
eDeleteText
eInsertText
eInsertTextComingFromIME
eDeleteSelectedContent
eSetTextProperty
eRemoveTextProperty
eRemoveAllTextProperties
eComputeTextToOutput
eSetText
eInsertParagraphSeparator
eCreateOrChangeList
eIndent
eOutdent
eSetOrClearAlignment
eCreateOrRemoveBlock
eRemoveList
eCreateOrChangeDefinitionList
eInsertElement
eInsertQuotation
ePasteHTMLContent
eInsertHTMLSource
eReplaceHeadWithHTMLSource
eSetPositionToAbsolute
eSetPositionToStatic
eDecreaseZIndex
eIncreaseZIndex
eCreateBogusNode
}
;
}
inline
bool
operator
!
(
const
mozilla
:
:
EditSubAction
&
aEditSubAction
)
{
return
aEditSubAction
=
=
mozilla
:
:
EditSubAction
:
:
eNone
;
}
#
endif
