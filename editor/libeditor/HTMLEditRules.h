#
ifndef
HTMLEditRules_h
#
define
HTMLEditRules_h
#
include
"
TypeInState
.
h
"
#
include
"
mozilla
/
EditorDOMPoint
.
h
"
#
include
"
mozilla
/
SelectionState
.
h
"
#
include
"
mozilla
/
TextEditRules
.
h
"
#
include
"
mozilla
/
TypeInState
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIEditor
.
h
"
#
include
"
nsIHTMLEditor
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nscore
.
h
"
class
nsAtom
;
class
nsINode
;
class
nsRange
;
namespace
mozilla
{
class
EditActionResult
;
class
HTMLEditor
;
class
SplitNodeResult
;
class
TextEditor
;
enum
class
EditSubAction
:
int32_t
;
namespace
dom
{
class
Document
;
class
Element
;
class
Selection
;
}
class
HTMLEditRules
:
public
TextEditRules
{
public
:
HTMLEditRules
(
)
;
virtual
nsresult
DetachEditor
(
)
override
;
protected
:
virtual
~
HTMLEditRules
(
)
=
default
;
HTMLEditor
&
HTMLEditorRef
(
)
const
{
MOZ_ASSERT
(
mData
)
;
return
mData
-
>
HTMLEditorRef
(
)
;
}
protected
:
HTMLEditor
*
mHTMLEditor
;
bool
mInitialized
;
}
;
}
#
endif
