#
ifndef
DeleteRangeTransaction_h
#
define
DeleteRangeTransaction_h
#
include
"
EditAggregateTransaction
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsID
.
h
"
#
include
"
nsIEditor
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsRange
.
h
"
#
include
"
nscore
.
h
"
class
nsINode
;
namespace
mozilla
{
class
EditorBase
;
class
RangeUpdater
;
class
DeleteRangeTransaction
final
:
public
EditAggregateTransaction
{
public
:
nsresult
Init
(
EditorBase
*
aEditorBase
nsRange
*
aRange
RangeUpdater
*
aRangeUpdater
)
;
DeleteRangeTransaction
(
)
;
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
DeleteRangeTransaction
EditAggregateTransaction
)
NS_IMETHOD
QueryInterface
(
REFNSIID
aIID
void
*
*
aInstancePtr
)
override
;
NS_DECL_EDITTRANSACTIONBASE
NS_IMETHOD
RedoTransaction
(
)
override
;
virtual
void
LastRelease
(
)
override
{
mRange
=
nullptr
;
EditAggregateTransaction
:
:
LastRelease
(
)
;
}
protected
:
nsresult
CreateTxnsToDeleteBetween
(
nsINode
*
aNode
int32_t
aStartOffset
int32_t
aEndOffset
)
;
nsresult
CreateTxnsToDeleteNodesBetween
(
)
;
nsresult
CreateTxnsToDeleteContent
(
nsINode
*
aParent
int32_t
aOffset
nsIEditor
:
:
EDirection
aAction
)
;
RefPtr
<
nsRange
>
mRange
;
EditorBase
*
mEditorBase
;
RangeUpdater
*
mRangeUpdater
;
}
;
}
#
endif
