#
ifndef
CreateElementTransaction_h
#
define
CreateElementTransaction_h
#
include
"
mozilla
/
EditorDOMPoint
.
h
"
#
include
"
mozilla
/
EditTransactionBase
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsISupportsImpl
.
h
"
class
nsAtom
;
class
nsIContent
;
class
nsINode
;
namespace
mozilla
{
class
EditorBase
;
namespace
dom
{
class
Element
;
}
class
CreateElementTransaction
final
:
public
EditTransactionBase
{
protected
:
template
<
typename
PT
typename
CT
>
CreateElementTransaction
(
EditorBase
&
aEditorBase
nsAtom
&
aTag
const
EditorDOMPointBase
<
PT
CT
>
&
aPointToInsert
)
;
public
:
template
<
typename
PT
typename
CT
>
static
already_AddRefed
<
CreateElementTransaction
>
Create
(
EditorBase
&
aEditorBase
nsAtom
&
aTag
const
EditorDOMPointBase
<
PT
CT
>
&
aPointToInsert
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
CreateElementTransaction
EditTransactionBase
)
NS_DECL_EDITTRANSACTIONBASE
NS_IMETHOD
RedoTransaction
(
)
override
;
already_AddRefed
<
dom
:
:
Element
>
GetNewNode
(
)
;
protected
:
virtual
~
CreateElementTransaction
(
)
=
default
;
void
InsertNewNode
(
ErrorResult
&
aError
)
;
RefPtr
<
EditorBase
>
mEditorBase
;
RefPtr
<
nsAtom
>
mTag
;
EditorDOMPoint
mPointToInsert
;
nsCOMPtr
<
dom
:
:
Element
>
mNewNode
;
}
;
}
#
endif
