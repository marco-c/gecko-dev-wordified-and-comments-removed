#
ifndef
mozilla_ChangeStyleTransaction_h
#
define
mozilla_ChangeStyleTransaction_h
#
include
"
mozilla
/
EditTransactionBase
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsString
.
h
"
class
nsAString
;
class
nsIAtom
;
namespace
mozilla
{
namespace
dom
{
class
Element
;
}
class
ChangeStyleTransaction
final
:
public
EditTransactionBase
{
public
:
NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED
(
ChangeStyleTransaction
EditTransactionBase
)
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_EDITTRANSACTIONBASE
NS_IMETHOD
RedoTransaction
(
)
override
;
enum
EChangeType
{
eSet
eRemove
}
;
ChangeStyleTransaction
(
dom
:
:
Element
&
aElement
nsIAtom
&
aProperty
const
nsAString
&
aValue
EChangeType
aChangeType
)
;
static
bool
ValueIncludes
(
const
nsAString
&
aValueList
const
nsAString
&
aValue
)
;
private
:
virtual
~
ChangeStyleTransaction
(
)
;
void
AddValueToMultivalueProperty
(
nsAString
&
aValues
const
nsAString
&
aNewValue
)
;
bool
AcceptsMoreThanOneValue
(
nsIAtom
&
aCSSProperty
)
;
void
RemoveValueFromListOfValues
(
nsAString
&
aValues
const
nsAString
&
aRemoveValue
)
;
nsresult
SetStyle
(
bool
aAttributeWasSet
nsAString
&
aValue
)
;
nsCOMPtr
<
dom
:
:
Element
>
mElement
;
nsCOMPtr
<
nsIAtom
>
mProperty
;
nsString
mValue
;
bool
mRemoveProperty
;
nsString
mUndoValue
;
nsString
mRedoValue
;
bool
mUndoAttributeWasSet
;
bool
mRedoAttributeWasSet
;
}
;
}
#
endif
