#
ifndef
nsTransactionStack_h__
#
define
nsTransactionStack_h__
#
include
"
nsDeque
.
h
"
class
nsCycleCollectionTraversalCallback
;
namespace
mozilla
{
class
TransactionItem
;
}
class
nsTransactionStack
:
private
nsDeque
{
public
:
enum
Type
{
FOR_UNDO
FOR_REDO
}
;
explicit
nsTransactionStack
(
Type
aType
)
;
~
nsTransactionStack
(
)
;
void
Push
(
mozilla
:
:
TransactionItem
*
aTransactionItem
)
;
void
Push
(
already_AddRefed
<
mozilla
:
:
TransactionItem
>
aTransactionItem
)
;
already_AddRefed
<
mozilla
:
:
TransactionItem
>
Pop
(
)
;
already_AddRefed
<
mozilla
:
:
TransactionItem
>
PopBottom
(
)
;
already_AddRefed
<
mozilla
:
:
TransactionItem
>
Peek
(
)
;
already_AddRefed
<
mozilla
:
:
TransactionItem
>
GetItem
(
int32_t
aIndex
)
;
void
Clear
(
)
;
int32_t
GetSize
(
)
const
{
return
static_cast
<
int32_t
>
(
nsDeque
:
:
GetSize
(
)
)
;
}
bool
IsEmpty
(
)
const
{
return
GetSize
(
)
=
=
0
;
}
void
DoUnlink
(
)
{
Clear
(
)
;
}
void
DoTraverse
(
nsCycleCollectionTraversalCallback
&
cb
)
;
private
:
const
Type
mType
;
}
;
#
endif
