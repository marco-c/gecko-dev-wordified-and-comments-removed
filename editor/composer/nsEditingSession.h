#
ifndef
nsEditingSession_h__
#
define
nsEditingSession_h__
#
ifndef
nsWeakReference_h__
#
include
"
nsWeakReference
.
h
"
#
endif
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
nsIWeakReferenceUtils
.
h
"
#
include
"
nsWeakReference
.
h
"
#
include
"
nscore
.
h
"
#
ifndef
__gen_nsIWebProgressListener_h__
#
include
"
nsIWebProgressListener
.
h
"
#
endif
#
ifndef
__gen_nsIEditingSession_h__
#
include
"
nsIEditingSession
.
h
"
#
endif
#
include
"
nsString
.
h
"
class
mozIDOMWindowProxy
;
class
nsIDOMWindow
;
class
nsISupports
;
class
nsITimer
;
class
nsIChannel
;
class
nsIControllers
;
class
nsIDocShell
;
class
nsIEditor
;
class
nsIWebProgress
;
namespace
mozilla
{
class
ComposerCommandsUpdater
;
class
HTMLEditor
;
}
class
nsEditingSession
final
:
public
nsIEditingSession
public
nsIWebProgressListener
public
nsSupportsWeakReference
{
public
:
nsEditingSession
(
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSIWEBPROGRESSLISTENER
NS_DECL_NSIEDITINGSESSION
protected
:
virtual
~
nsEditingSession
(
)
;
typedef
already_AddRefed
<
nsIController
>
(
*
ControllerCreatorFn
)
(
)
;
nsresult
SetupEditorCommandController
(
ControllerCreatorFn
aControllerCreatorFn
mozIDOMWindowProxy
*
aWindow
nsISupports
*
aContext
uint32_t
*
aControllerId
)
;
nsresult
SetContextOnControllerById
(
nsIControllers
*
aControllers
nsISupports
*
aContext
uint32_t
aID
)
;
nsresult
PrepareForEditing
(
nsPIDOMWindowOuter
*
aWindow
)
;
static
void
TimerCallback
(
nsITimer
*
aTimer
void
*
aClosure
)
;
nsCOMPtr
<
nsITimer
>
mLoadBlankDocTimer
;
nsresult
StartDocumentLoad
(
nsIWebProgress
*
aWebProgress
bool
isToBeMadeEditable
)
;
nsresult
EndDocumentLoad
(
nsIWebProgress
*
aWebProgress
nsIChannel
*
aChannel
nsresult
aStatus
bool
isToBeMadeEditable
)
;
nsresult
StartPageLoad
(
nsIChannel
*
aChannel
)
;
nsresult
EndPageLoad
(
nsIWebProgress
*
aWebProgress
nsIChannel
*
aChannel
nsresult
aStatus
)
;
bool
IsProgressForTargetDocument
(
nsIWebProgress
*
aWebProgress
)
;
void
RemoveEditorControllers
(
nsPIDOMWindowOuter
*
aWindow
)
;
void
RemoveWebProgressListener
(
nsPIDOMWindowOuter
*
aWindow
)
;
void
RestoreAnimationMode
(
nsPIDOMWindowOuter
*
aWindow
)
;
void
RemoveListenersAndControllers
(
nsPIDOMWindowOuter
*
aWindow
mozilla
:
:
HTMLEditor
*
aHTMLEditor
)
;
protected
:
bool
mDoneSetup
;
bool
mCanCreateEditor
;
bool
mInteractive
;
bool
mMakeWholeDocumentEditable
;
bool
mDisabledJSAndPlugins
;
bool
mScriptsEnabled
;
bool
mPluginsEnabled
;
bool
mProgressListenerRegistered
;
uint16_t
mImageAnimationMode
;
RefPtr
<
mozilla
:
:
ComposerCommandsUpdater
>
mComposerCommandsUpdater
;
nsCString
mEditorType
;
uint32_t
mEditorFlags
;
uint32_t
mEditorStatus
;
uint32_t
mBaseCommandControllerId
;
uint32_t
mDocStateControllerId
;
uint32_t
mHTMLCommandControllerId
;
nsWeakPtr
mDocShell
;
nsWeakPtr
mExistingEditor
;
}
;
#
endif
