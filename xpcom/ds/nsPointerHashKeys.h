#
ifndef
nsPointerHashKeys_h
#
define
nsPointerHashKeys_h
#
include
"
nscore
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
HashFunctions
.
h
"
#
include
"
PLDHashTable
.
h
"
template
<
class
T
>
class
nsPtrHashKey
:
public
PLDHashEntryHdr
{
public
:
using
KeyType
=
T
*
;
using
KeyTypePointer
=
const
T
*
;
explicit
nsPtrHashKey
(
const
T
*
aKey
)
:
mKey
(
const_cast
<
T
*
>
(
aKey
)
)
{
}
nsPtrHashKey
(
nsPtrHashKey
&
&
aToMove
)
=
default
;
~
nsPtrHashKey
(
)
=
default
;
KeyType
GetKey
(
)
const
{
return
mKey
;
}
bool
KeyEquals
(
KeyTypePointer
aKey
)
const
{
return
aKey
=
=
mKey
;
}
static
KeyTypePointer
KeyToPointer
(
KeyType
aKey
)
{
return
aKey
;
}
static
PLDHashNumber
HashKey
(
KeyTypePointer
aKey
)
{
return
mozilla
:
:
HashGeneric
(
aKey
)
;
}
enum
{
ALLOW_MEMMOVE
=
true
}
;
protected
:
T
*
MOZ_NON_OWNING_REF
mKey
;
}
;
using
nsVoidPtrHashKey
=
nsPtrHashKey
<
const
void
>
;
#
endif
