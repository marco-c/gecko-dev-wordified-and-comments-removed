#
ifndef
mozilla_CycleCollectedUniquePtr_h__
#
define
mozilla_CycleCollectedUniquePtr_h__
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsCycleCollectionContainerParticipant
.
h
"
namespace
mozilla
{
template
<
typename
T
>
inline
void
ImplCycleCollectionUnlink
(
mozilla
:
:
UniquePtr
<
T
>
&
aField
)
{
aField
.
reset
(
)
;
}
template
<
typename
Container
typename
Callback
EnableCycleCollectionIf
<
Container
std
:
:
unique_ptr
>
=
nullptr
>
inline
void
ImplCycleCollectionContainer
(
Container
&
&
aField
Callback
&
&
aCallback
)
{
if
(
aField
)
{
aCallback
(
*
aField
)
;
}
}
}
#
endif
