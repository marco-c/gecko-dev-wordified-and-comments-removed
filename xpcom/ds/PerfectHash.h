#
ifndef
mozilla_PerfectHash_h
#
define
mozilla_PerfectHash_h
#
include
"
mozilla
/
TypeTraits
.
h
"
namespace
mozilla
{
namespace
perfecthash
{
constexpr
uint32_t
FNV_OFFSET_BASIS
=
0x811C9DC5
;
constexpr
uint32_t
FNV_PRIME
=
16777619
;
template
<
typename
C
>
inline
uint32_t
Hash
(
uint32_t
aBasis
const
C
*
aKey
size_t
aLen
)
{
for
(
size_t
i
=
0
;
i
<
aLen
;
+
+
i
)
{
aBasis
=
(
aBasis
^
static_cast
<
typename
MakeUnsigned
<
C
>
:
:
Type
>
(
aKey
[
i
]
)
)
*
FNV_PRIME
;
}
return
aBasis
;
}
template
<
typename
C
typename
Base
size_t
NBases
typename
Entry
size_t
NEntries
>
inline
const
Entry
&
Lookup
(
const
C
*
aKey
size_t
aLen
const
Base
(
&
aTable
)
[
NBases
]
const
Entry
(
&
aEntries
)
[
NEntries
]
)
{
uint32_t
basis
=
aTable
[
Hash
(
FNV_OFFSET_BASIS
aKey
aLen
)
%
NBases
]
;
return
aEntries
[
Hash
(
basis
aKey
aLen
)
%
NEntries
]
;
}
}
}
#
endif
