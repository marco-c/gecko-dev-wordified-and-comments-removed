const
kPrefName
=
"
logging
.
prof
"
;
const
kPrefValue
=
5
;
add_task
(
async
(
)
=
>
{
Services
.
prefs
.
setIntPref
(
kPrefName
kPrefValue
)
;
registerCleanupFunction
(
(
)
=
>
{
Services
.
prefs
.
clearUserPref
(
kPrefName
)
;
}
)
;
const
entries
=
10000
;
const
interval
=
1
;
const
threads
=
[
"
GeckoMain
"
]
;
const
features
=
[
"
nostacksampling
"
]
;
await
Services
.
profiler
.
StartProfiler
(
entries
interval
features
threads
)
;
await
Services
.
profiler
.
Pause
(
)
;
const
profileData
=
await
Services
.
profiler
.
getProfileDataAsync
(
)
;
await
Services
.
profiler
.
StopProfiler
(
)
;
const
{
markers
stringTable
}
=
profileData
.
threads
[
0
]
;
const
stringIndexForLogMessages
=
stringTable
.
indexOf
(
"
LogMessages
"
)
;
Assert
.
greaterOrEqual
(
stringIndexForLogMessages
0
"
A
string
index
for
the
string
LogMessages
have
been
found
.
"
)
;
const
logMessageMarkers
=
markers
.
data
.
filter
(
tuple
=
>
tuple
[
markers
.
schema
.
name
]
=
=
=
stringIndexForLogMessages
)
;
Assert
.
greaterOrEqual
(
logMessageMarkers
.
length
0
"
At
least
one
log
message
have
been
found
.
"
)
;
}
)
;
