UNIFIED_SOURCES
+
=
[
"
Helpers
.
cpp
"
"
TestArenaAllocator
.
cpp
"
"
TestArrayAlgorithm
.
cpp
"
"
TestAtoms
.
cpp
"
"
TestAutoRefCnt
.
cpp
"
"
TestBase64
.
cpp
"
"
TestCallTemplates
.
cpp
"
"
TestCloneInputStream
.
cpp
"
"
TestCOMPtrEq
.
cpp
"
"
TestCRT
.
cpp
"
"
TestDafsa
.
cpp
"
"
TestEncoding
.
cpp
"
"
TestEscape
.
cpp
"
"
TestEventPriorities
.
cpp
"
"
TestEventTargetQI
.
cpp
"
"
TestExpirationTracker
.
cpp
"
"
TestFile
.
cpp
"
"
TestGCPostBarriers
.
cpp
"
"
TestID
.
cpp
"
"
TestInputStreamLengthHelper
.
cpp
"
"
TestLogCommandLineHandler
.
cpp
"
"
TestMoveString
.
cpp
"
"
TestMozPromise
.
cpp
"
"
TestMruCache
.
cpp
"
"
TestMultiplexInputStream
.
cpp
"
"
TestNonBlockingAsyncInputStream
.
cpp
"
"
TestNsDeque
.
cpp
"
"
TestNSPRLogModulesParser
.
cpp
"
"
TestObserverArray
.
cpp
"
"
TestObserverService
.
cpp
"
"
TestPLDHash
.
cpp
"
"
TestPriorityQueue
.
cpp
"
"
TestRacingServiceManager
.
cpp
"
"
TestRecursiveMutex
.
cpp
"
"
TestRWLock
.
cpp
"
"
TestSegmentedBuffer
.
cpp
"
"
TestSlicedInputStream
.
cpp
"
"
TestSmallArrayLRUCache
.
cpp
"
"
TestSnappyStreams
.
cpp
"
"
TestStateWatching
.
cpp
"
"
TestStorageStream
.
cpp
"
"
TestStrings
.
cpp
"
"
TestStringStream
.
cpp
"
"
TestSubstringTuple
.
cpp
"
"
TestSynchronization
.
cpp
"
"
TestTArray
.
cpp
"
"
TestTArray2
.
cpp
"
"
TestTaskQueue
.
cpp
"
"
TestTextFormatter
.
cpp
"
"
TestThreadManager
.
cpp
"
"
TestThreadMetrics
.
cpp
"
"
TestThreadPool
.
cpp
"
"
TestThreadPoolListener
.
cpp
"
"
TestThrottledEventQueue
.
cpp
"
"
TestTimeStamp
.
cpp
"
"
TestTokenizer
.
cpp
"
"
TestUTF
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
!
=
"
Android
"
:
UNIFIED_SOURCES
+
=
[
"
TestPipes
.
cpp
"
"
TestThreads
.
cpp
"
]
if
not
(
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
and
CONFIG
[
"
CPU_ARCH
"
]
=
=
"
aarch64
"
)
:
UNIFIED_SOURCES
+
=
[
"
TestThreadUtils
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
!
=
"
Android
"
and
not
(
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
and
CONFIG
[
"
CPU_ARCH
"
]
=
=
"
aarch64
"
)
:
UNIFIED_SOURCES
+
=
[
"
TestTimers
.
cpp
"
]
if
(
CONFIG
[
"
MOZ_DEBUG
"
]
and
CONFIG
[
"
OS_ARCH
"
]
not
in
(
"
WINNT
"
)
and
CONFIG
[
"
OS_TARGET
"
]
!
=
"
Android
"
)
:
UNIFIED_SOURCES
+
=
[
"
TestDeadlockDetector
.
cpp
"
"
TestDeadlockDetectorScalability
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
:
UNIFIED_SOURCES
+
=
[
"
TestFilePreferencesWin
.
cpp
"
]
else
:
UNIFIED_SOURCES
+
=
[
"
TestFilePreferencesUnix
.
cpp
"
]
if
(
CONFIG
[
"
WRAP_STL_INCLUDES
"
]
and
CONFIG
[
"
CC_TYPE
"
]
!
=
"
clang
-
cl
"
and
CONFIG
[
"
OS_TARGET
"
]
!
=
"
Android
"
)
:
UNIFIED_SOURCES
+
=
[
"
TestSTLWrappers
.
cpp
"
]
SOURCES
+
=
[
"
TestAllocReplacement
.
cpp
"
"
TestCOMArray
.
cpp
"
"
TestCOMPtr
.
cpp
"
"
TestHashtables
.
cpp
"
"
TestNsRefPtr
.
cpp
"
]
LOCAL_INCLUDES
+
=
[
"
.
.
/
.
.
/
base
"
]
GeneratedFile
(
"
dafsa_test_1
.
inc
"
script
=
"
.
.
/
.
.
/
ds
/
tools
/
make_dafsa
.
py
"
inputs
=
[
"
dafsa_test_1
.
dat
"
]
)
TEST_HARNESS_FILES
.
gtest
+
=
[
"
wikipedia
/
ar
.
txt
"
"
wikipedia
/
de
-
edit
.
txt
"
"
wikipedia
/
de
.
txt
"
"
wikipedia
/
ja
.
txt
"
"
wikipedia
/
ko
.
txt
"
"
wikipedia
/
ru
.
txt
"
"
wikipedia
/
th
.
txt
"
"
wikipedia
/
tr
.
txt
"
"
wikipedia
/
vi
.
txt
"
]
FINAL_LIBRARY
=
"
xul
-
gtest
"
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
