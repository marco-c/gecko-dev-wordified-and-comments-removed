#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
SharedThreadPool
.
h
"
#
include
"
mozilla
/
StateWatching
.
h
"
#
include
"
mozilla
/
TaskQueue
.
h
"
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
VideoUtils
.
h
"
namespace
TestStateWatching
{
using
namespace
mozilla
;
struct
Foo
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
Foo
)
void
Notify
(
)
{
mNotified
=
true
;
}
bool
mNotified
=
false
;
private
:
~
Foo
(
)
{
}
}
;
TEST
(
WatchManager
Shutdown
)
{
RefPtr
<
TaskQueue
>
queue
=
new
TaskQueue
(
GetMediaThreadPool
(
MediaThreadType
:
:
PLAYBACK
)
)
;
RefPtr
<
Foo
>
p
=
new
Foo
;
WatchManager
<
Foo
>
manager
(
p
queue
)
;
Watchable
<
bool
>
notifier
(
false
"
notifier
"
)
;
Unused
<
<
queue
-
>
Dispatch
(
NS_NewRunnableFunction
(
"
TestStateWatching
:
:
WatchManager_Shutdown_Test
:
:
TestBody
"
[
&
]
(
)
{
manager
.
Watch
(
notifier
&
Foo
:
:
Notify
)
;
notifier
=
true
;
manager
.
Shutdown
(
)
;
}
)
)
;
queue
-
>
BeginShutdown
(
)
;
queue
-
>
AwaitShutdownAndIdle
(
)
;
EXPECT_FALSE
(
p
-
>
mNotified
)
;
}
}
