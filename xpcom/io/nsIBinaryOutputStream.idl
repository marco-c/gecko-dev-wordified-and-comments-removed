#
include
"
nsIOutputStream
.
idl
"
%
{
C
+
+
namespace
mozilla
{
template
<
class
ElementType
size_t
Extent
>
class
Span
;
}
%
}
native
Bytes
(
mozilla
:
:
Span
<
const
uint8_t
>
)
;
[
scriptable
builtinclass
uuid
(
204ee610
-
8765
-
11d3
-
90cf
-
0040056a906e
)
]
interface
nsIBinaryOutputStream
:
nsIOutputStream
{
void
setOutputStream
(
in
nsIOutputStream
aOutputStream
)
;
void
writeBoolean
(
in
boolean
aBoolean
)
;
void
write8
(
in
uint8_t
aByte
)
;
void
write16
(
in
uint16_t
a16
)
;
void
write32
(
in
uint32_t
a32
)
;
void
write64
(
in
uint64_t
a64
)
;
void
writeFloat
(
in
float
aFloat
)
;
void
writeDouble
(
in
double
aDouble
)
;
void
writeStringZ
(
in
string
aString
)
;
void
writeWStringZ
(
in
wstring
aString
)
;
void
writeUtf8Z
(
in
wstring
aString
)
;
[
binaryname
(
WriteBytesFromJS
)
]
void
writeBytes
(
[
size_is
(
aLength
)
]
in
string
aString
[
optional
]
in
uint32_t
aLength
)
;
[
noscript
nostdcall
binaryname
(
WriteBytes
)
]
void
writeBytesNative
(
in
Bytes
aBytes
)
;
void
writeByteArray
(
in
Array
<
uint8_t
>
aBytes
)
;
}
;
%
{
C
+
+
inline
nsresult
NS_WriteOptionalStringZ
(
nsIBinaryOutputStream
*
aStream
const
char
*
aString
)
{
bool
nonnull
=
(
aString
!
=
nullptr
)
;
nsresult
rv
=
aStream
-
>
WriteBoolean
(
nonnull
)
;
if
(
NS_SUCCEEDED
(
rv
)
&
&
nonnull
)
rv
=
aStream
-
>
WriteStringZ
(
aString
)
;
return
rv
;
}
inline
nsresult
NS_WriteOptionalWStringZ
(
nsIBinaryOutputStream
*
aStream
const
char16_t
*
aString
)
{
bool
nonnull
=
(
aString
!
=
nullptr
)
;
nsresult
rv
=
aStream
-
>
WriteBoolean
(
nonnull
)
;
if
(
NS_SUCCEEDED
(
rv
)
&
&
nonnull
)
rv
=
aStream
-
>
WriteWStringZ
(
aString
)
;
return
rv
;
}
%
}
