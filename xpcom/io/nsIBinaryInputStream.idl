#
include
"
nsIInputStream
.
idl
"
[
scriptable
uuid
(
899b826b
-
2eb3
-
469c
-
8b31
-
4c29f5d341a6
)
]
interface
nsIBinaryInputStream
:
nsIInputStream
{
void
setInputStream
(
in
nsIInputStream
aInputStream
)
;
boolean
readBoolean
(
)
;
uint8_t
read8
(
)
;
uint16_t
read16
(
)
;
uint32_t
read32
(
)
;
uint64_t
read64
(
)
;
float
readFloat
(
)
;
double
readDouble
(
)
;
ACString
readCString
(
)
;
AString
readString
(
)
;
void
readBytes
(
in
uint32_t
aLength
[
size_is
(
aLength
)
retval
]
out
string
aString
)
;
Array
<
uint8_t
>
readByteArray
(
in
uint32_t
aLength
)
;
[
implicit_jscontext
]
uint64_t
readArrayBuffer
(
in
uint64_t
aLength
in
jsval
aArrayBuffer
)
;
}
;
%
{
C
+
+
#
ifdef
MOZILLA_INTERNAL_API
#
include
"
nsString
.
h
"
inline
nsresult
NS_ReadOptionalCString
(
nsIBinaryInputStream
*
aStream
nsACString
&
aResult
)
{
bool
nonnull
;
nsresult
rv
=
aStream
-
>
ReadBoolean
(
&
nonnull
)
;
if
(
NS_SUCCEEDED
(
rv
)
)
{
if
(
nonnull
)
rv
=
aStream
-
>
ReadCString
(
aResult
)
;
else
aResult
.
Truncate
(
)
;
}
return
rv
;
}
inline
nsresult
NS_ReadOptionalString
(
nsIBinaryInputStream
*
aStream
nsAString
&
aResult
)
{
bool
nonnull
;
nsresult
rv
=
aStream
-
>
ReadBoolean
(
&
nonnull
)
;
if
(
NS_SUCCEEDED
(
rv
)
)
{
if
(
nonnull
)
rv
=
aStream
-
>
ReadString
(
aResult
)
;
else
aResult
.
Truncate
(
)
;
}
return
rv
;
}
#
endif
%
}
