#
include
"
nsISupports
.
idl
"
interface
nsIAsyncInputStream
;
interface
nsIAsyncOutputStream
;
[
scriptable
uuid
(
25d0de93
-
685e
-
4ea4
-
95d3
-
d884e31df63c
)
]
interface
nsIPipe
:
nsISupports
{
[
must_use
]
void
init
(
in
boolean
nonBlockingInput
in
boolean
nonBlockingOutput
in
unsigned
long
segmentSize
in
unsigned
long
segmentCount
)
;
[
must_use
]
readonly
attribute
nsIAsyncInputStream
inputStream
;
[
must_use
]
readonly
attribute
nsIAsyncOutputStream
outputStream
;
}
;
[
scriptable
uuid
(
8C39EF62
-
F7C9
-
11d4
-
98F5
-
001083010E9B
)
]
interface
nsISearchableInputStream
:
nsISupports
{
void
search
(
in
string
forString
in
boolean
ignoreCase
out
boolean
found
out
unsigned
long
offsetSearchedTo
)
;
}
;
%
{
C
+
+
class
nsIInputStream
;
class
nsIOutputStream
;
extern
void
NS_NewPipe2
(
nsIAsyncInputStream
*
*
pipeIn
nsIAsyncOutputStream
*
*
pipeOut
bool
nonBlockingInput
=
false
bool
nonBlockingOutput
=
false
uint32_t
segmentSize
=
0
uint32_t
segmentCount
=
0
)
;
extern
void
NS_NewPipe
(
nsIInputStream
*
*
pipeIn
nsIOutputStream
*
*
pipeOut
uint32_t
segmentSize
=
0
uint32_t
maxSize
=
0
bool
nonBlockingInput
=
false
bool
nonBlockingOutput
=
false
)
;
%
}
