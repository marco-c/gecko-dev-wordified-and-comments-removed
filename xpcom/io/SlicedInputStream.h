#
ifndef
SlicedInputStream_h
#
define
SlicedInputStream_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIAsyncInputStream
.
h
"
#
include
"
nsICloneableInputStream
.
h
"
#
include
"
nsIIPCSerializableInputStream
.
h
"
#
include
"
nsISeekableStream
.
h
"
namespace
mozilla
{
class
SlicedInputStream
final
:
public
nsIAsyncInputStream
public
nsICloneableInputStream
public
nsIIPCSerializableInputStream
public
nsISeekableStream
public
nsIInputStreamCallback
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIINPUTSTREAM
NS_DECL_NSIASYNCINPUTSTREAM
NS_DECL_NSICLONEABLEINPUTSTREAM
NS_DECL_NSIIPCSERIALIZABLEINPUTSTREAM
NS_DECL_NSISEEKABLESTREAM
NS_DECL_NSIINPUTSTREAMCALLBACK
SlicedInputStream
(
already_AddRefed
<
nsIInputStream
>
aInputStream
uint64_t
aStart
uint64_t
aLength
)
;
SlicedInputStream
(
)
;
private
:
~
SlicedInputStream
(
)
;
void
SetSourceStream
(
already_AddRefed
<
nsIInputStream
>
aInputStream
)
;
nsresult
RunAsyncWaitCallback
(
)
;
nsCOMPtr
<
nsIInputStream
>
mInputStream
;
nsICloneableInputStream
*
mWeakCloneableInputStream
;
nsIIPCSerializableInputStream
*
mWeakIPCSerializableInputStream
;
nsISeekableStream
*
mWeakSeekableInputStream
;
nsIAsyncInputStream
*
mWeakAsyncInputStream
;
uint64_t
mStart
;
uint64_t
mLength
;
uint64_t
mCurPos
;
bool
mClosed
;
nsCOMPtr
<
nsIInputStreamCallback
>
mAsyncWaitCallback
;
nsCOMPtr
<
nsIEventTarget
>
mAsyncWaitEventTarget
;
uint32_t
mAsyncWaitFlags
;
uint32_t
mAsyncWaitRequestedCount
;
}
;
}
#
endif
