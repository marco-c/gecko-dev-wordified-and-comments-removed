#
include
"
nsIFile
.
idl
"
%
{
C
+
+
#
include
<
Carbon
/
Carbon
.
h
>
#
include
<
CoreFoundation
/
CoreFoundation
.
h
>
%
}
native
OSType
(
OSType
)
;
native
FSSpec
(
FSSpec
)
;
native
FSRef
(
FSRef
)
;
[
ptr
]
native
FSRefPtr
(
FSRef
)
;
native
CFURLRef
(
CFURLRef
)
;
[
scriptable
builtinclass
uuid
(
623eca5b
-
c25d
-
4e27
-
be5a
-
789a66c4b2f7
)
]
interface
nsILocalFileMac
:
nsIFile
{
[
noscript
]
void
initWithCFURL
(
in
CFURLRef
aCFURL
)
;
[
noscript
]
void
initWithFSRef
(
[
const
]
in
FSRefPtr
aFSRef
)
;
[
noscript
]
CFURLRef
getCFURL
(
)
;
[
noscript
]
FSRef
getFSRef
(
)
;
[
noscript
]
FSSpec
getFSSpec
(
)
;
readonly
attribute
int64_t
fileSizeWithResFork
;
[
noscript
]
attribute
OSType
fileType
;
[
noscript
]
attribute
OSType
fileCreator
;
void
launchWithDoc
(
in
nsIFile
aDocToLoad
in
boolean
aLaunchInBackground
)
;
void
openDocWithApp
(
in
nsIFile
aAppToOpenWith
in
boolean
aLaunchInBackground
)
;
boolean
isPackage
(
)
;
readonly
attribute
AString
bundleDisplayName
;
readonly
attribute
AUTF8String
bundleIdentifier
;
readonly
attribute
int64_t
bundleContentsLastModifiedTime
;
}
;
%
{
C
+
+
extern
"
C
"
{
NS_EXPORT
nsresult
NS_NewLocalFileWithFSRef
(
const
FSRef
*
aFSRef
bool
aFollowSymlinks
nsILocalFileMac
*
*
result
)
;
NS_EXPORT
nsresult
NS_NewLocalFileWithCFURL
(
const
CFURLRef
aURL
bool
aFollowSymlinks
nsILocalFileMac
*
*
result
)
;
}
%
}
