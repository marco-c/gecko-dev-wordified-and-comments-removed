#
include
<
string
.
h
>
#
include
"
nsTArray
.
h
"
#
include
"
nsXPCOM
.
h
"
#
include
"
nsDebug
.
h
"
#
include
"
mozilla
/
CheckedInt
.
h
"
nsTArrayHeader
nsTArrayHeader
:
:
sEmptyHdr
=
{
0
0
0
}
;
bool
IsTwiceTheRequiredBytesRepresentableAsUint32
(
size_t
aCapacity
size_t
aElemSize
)
{
using
mozilla
:
:
CheckedUint32
;
return
(
(
CheckedUint32
(
aCapacity
)
*
aElemSize
)
*
2
)
.
isValid
(
)
;
}
MOZ_NORETURN
MOZ_COLD
void
InvalidArrayIndex_CRASH
(
size_t
aIndex
size_t
aLength
)
{
const
size_t
CAPACITY
=
512
;
auto
*
buffer
=
new
char
[
CAPACITY
]
;
snprintf
(
buffer
CAPACITY
"
ElementAt
(
aIndex
=
%
llu
aLength
=
%
llu
)
"
(
long
long
unsigned
)
aIndex
(
long
long
unsigned
)
aLength
)
;
MOZ_CRASH_ANNOTATE
(
buffer
)
;
MOZ_REALLY_CRASH
(
)
;
}
