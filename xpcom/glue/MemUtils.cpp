#
include
"
mozilla
/
MemUtils
.
h
"
#
if
defined
(
XP_WIN
)
#
include
<
windows
.
h
>
#
else
#
include
<
sys
/
mman
.
h
>
#
endif
bool
mozilla
:
:
MaybePrefetchMemory
(
uint8_t
*
aStart
size_t
aNumBytes
)
{
if
(
aNumBytes
=
=
0
)
{
return
true
;
}
#
if
defined
(
XP_SOLARIS
)
posix_madvise
(
aStart
aNumBytes
POSIX_MADV_WILLNEED
)
;
return
true
;
#
elif
defined
(
XP_UNIX
)
madvise
(
aStart
aNumBytes
MADV_WILLNEED
)
;
return
true
;
#
elif
defined
(
XP_WIN
)
static
auto
prefetchVirtualMemory
=
reinterpret_cast
<
BOOL
(
WINAPI
*
)
(
HANDLE
ULONG_PTR
PVOID
ULONG
)
>
(
GetProcAddress
(
GetModuleHandleW
(
L
"
kernel32
.
dll
"
)
"
PrefetchVirtualMemory
"
)
)
;
if
(
prefetchVirtualMemory
)
{
struct
{
PVOID
VirtualAddress
;
SIZE_T
NumberOfBytes
;
}
entry
;
entry
.
VirtualAddress
=
aStart
;
entry
.
NumberOfBytes
=
aNumBytes
;
prefetchVirtualMemory
(
GetCurrentProcess
(
)
1
&
entry
0
)
;
return
true
;
}
return
false
;
#
else
return
false
;
#
endif
}
