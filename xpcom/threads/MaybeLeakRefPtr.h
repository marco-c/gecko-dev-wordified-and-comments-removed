#
ifndef
MaybeLeakRefPtr_h
#
define
MaybeLeakRefPtr_h
#
include
"
mozilla
/
RefPtr
.
h
"
namespace
mozilla
{
template
<
class
T
>
class
MaybeLeakRefPtr
:
public
RefPtr
<
T
>
{
public
:
explicit
MaybeLeakRefPtr
(
already_AddRefed
<
T
>
&
&
aPtr
bool
aAutoRelease
)
:
RefPtr
<
T
>
(
std
:
:
move
(
aPtr
)
)
mAutoRelease
(
aAutoRelease
)
{
}
MaybeLeakRefPtr
(
const
MaybeLeakRefPtr
&
)
=
delete
;
MaybeLeakRefPtr
&
operator
=
(
const
MaybeLeakRefPtr
&
)
=
delete
;
~
MaybeLeakRefPtr
(
)
{
if
(
!
mAutoRelease
)
{
(
void
)
RefPtr
<
T
>
:
:
forget
(
)
.
take
(
)
;
}
}
private
:
bool
mAutoRelease
=
false
;
}
;
}
#
endif
