#
ifndef
XPCOM_THREADS_STATICSTRING_H_
#
define
XPCOM_THREADS_STATICSTRING_H_
#
include
<
cstddef
>
#
include
"
mozilla
/
Attributes
.
h
"
template
<
typename
T
>
class
nsTLiteralString
;
using
nsLiteralCString
=
nsTLiteralString
<
char
>
;
namespace
mozilla
{
class
StaticString
{
const
char
*
mStr
;
public
:
template
<
size_t
N
>
constexpr
MOZ_IMPLICIT
StaticString
(
const
char
(
&
str
)
[
N
]
)
:
mStr
(
str
)
{
}
constexpr
explicit
StaticString
(
nsLiteralCString
const
&
str
)
;
constexpr
StaticString
(
StaticString
const
&
)
=
default
;
constexpr
StaticString
(
StaticString
&
&
)
=
default
;
~
StaticString
(
)
=
default
;
constexpr
MOZ_IMPLICIT
operator
const
char
*
(
)
const
{
return
mStr
;
}
constexpr
const
char
*
get
(
)
const
{
return
mStr
;
}
}
;
static_assert
(
sizeof
(
StaticString
)
=
=
sizeof
(
const
char
*
)
)
;
static_assert
(
alignof
(
StaticString
)
=
=
alignof
(
const
char
*
)
)
;
}
#
endif
