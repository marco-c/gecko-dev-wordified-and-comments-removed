#
ifndef
mozilla_ThrottledEventQueue_h
#
define
mozilla_ThrottledEventQueue_h
#
include
"
nsIEventTarget
.
h
"
#
define
NS_THROTTLEDEVENTQUEUE_IID
\
{
0x8f3cf7dc
0xfc14
0x4ad5
\
{
0x9f
0xd5
0xdb
0x79
0xbc
0xe6
0xd5
0x08
}
}
namespace
mozilla
{
class
ThrottledEventQueue
final
:
public
nsIEventTarget
{
class
Inner
;
RefPtr
<
Inner
>
mInner
;
explicit
ThrottledEventQueue
(
already_AddRefed
<
Inner
>
aInner
)
;
~
ThrottledEventQueue
(
)
;
void
MaybeStartShutdown
(
)
;
public
:
static
already_AddRefed
<
ThrottledEventQueue
>
Create
(
nsIEventTarget
*
aBaseTarget
)
;
bool
IsEmpty
(
)
const
;
uint32_t
Length
(
)
const
;
void
AwaitIdle
(
)
const
;
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIEVENTTARGET_FULL
NS_DECLARE_STATIC_IID_ACCESSOR
(
NS_THROTTLEDEVENTQUEUE_IID
)
;
}
;
NS_DEFINE_STATIC_IID_ACCESSOR
(
ThrottledEventQueue
NS_THROTTLEDEVENTQUEUE_IID
)
;
}
#
endif
