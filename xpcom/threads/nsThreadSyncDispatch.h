#
ifndef
nsThreadSyncDispatch_h_
#
define
nsThreadSyncDispatch_h_
#
include
"
nsThreadUtils
.
h
"
#
include
"
LeakRefPtr
.
h
"
#
include
"
mozilla
/
DebugOnly
.
h
"
class
nsThreadSyncDispatch
:
public
nsRunnable
{
public
:
nsThreadSyncDispatch
(
nsIThread
*
aOrigin
already_AddRefed
<
nsIRunnable
>
&
&
aTask
)
:
mOrigin
(
aOrigin
)
mSyncTask
(
mozilla
:
:
Move
(
aTask
)
)
{
}
bool
IsPending
(
)
{
return
!
!
mSyncTask
;
}
private
:
NS_IMETHOD
Run
(
)
override
{
if
(
nsIRunnable
*
task
=
mSyncTask
.
get
(
)
)
{
mozilla
:
:
DebugOnly
<
nsresult
>
result
=
task
-
>
Run
(
)
;
MOZ_ASSERT
(
NS_SUCCEEDED
(
result
)
"
task
in
sync
dispatch
should
not
fail
"
)
;
mSyncTask
.
release
(
)
;
mOrigin
-
>
Dispatch
(
this
NS_DISPATCH_NORMAL
)
;
}
return
NS_OK
;
}
nsCOMPtr
<
nsIThread
>
mOrigin
;
mozilla
:
:
LeakRefPtr
<
nsIRunnable
>
mSyncTask
;
}
;
#
endif
