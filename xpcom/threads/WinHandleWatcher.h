#
ifndef
WinHandleWatcher_h__
#
define
WinHandleWatcher_h__
#
include
<
minwindef
.
h
>
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsIEventTarget
.
h
"
#
include
"
nsIRunnable
.
h
"
#
include
"
nsIThread
.
h
"
#
include
"
nsThreadUtils
.
h
"
namespace
mozilla
{
class
HandleWatcher
{
public
:
class
Impl
;
HandleWatcher
(
)
;
~
HandleWatcher
(
)
;
HandleWatcher
(
HandleWatcher
const
&
)
=
delete
;
HandleWatcher
&
operator
=
(
HandleWatcher
const
&
)
=
delete
;
HandleWatcher
(
HandleWatcher
&
&
)
=
default
;
HandleWatcher
&
operator
=
(
HandleWatcher
&
&
)
=
default
;
void
Watch
(
HANDLE
aHandle
nsIEventTarget
*
aTarget
already_AddRefed
<
nsIRunnable
>
aRunnable
)
;
void
Stop
(
)
;
bool
IsStopped
(
)
;
private
:
RefPtr
<
Impl
>
mImpl
;
}
;
}
#
endif
