#
ifndef
mozilla_PerformanceCounter_h
#
define
mozilla_PerformanceCounter_h
namespace
mozilla
{
class
DispatchCategory
final
{
public
:
explicit
DispatchCategory
(
uint32_t
aValue
)
:
mValue
(
aValue
)
{
MOZ_ASSERT
(
aValue
=
=
(
uint32_t
)
TaskCategory
:
:
Count
)
;
}
constexpr
explicit
DispatchCategory
(
TaskCategory
aValue
)
:
mValue
(
(
uint32_t
)
aValue
)
{
}
uint32_t
GetValue
(
)
const
{
return
mValue
;
}
static
const
DispatchCategory
Worker
;
private
:
uint32_t
mValue
;
}
;
typedef
Array
<
Atomic
<
uint32_t
>
(
uint32_t
)
TaskCategory
:
:
Count
+
1
>
DispatchCounter
;
class
PerformanceCounter
final
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
PerformanceCounter
)
explicit
PerformanceCounter
(
const
nsACString
&
aName
)
;
void
IncrementDispatchCounter
(
DispatchCategory
aCategory
)
;
void
IncrementExecutionDuration
(
uint32_t
aMicroseconds
)
;
const
DispatchCounter
&
GetDispatchCounter
(
)
;
uint64_t
GetExecutionDuration
(
)
;
uint32_t
GetDispatchCount
(
DispatchCategory
aCategory
)
;
uint64_t
GetTotalDispatchCount
(
)
;
private
:
~
PerformanceCounter
(
)
{
}
Atomic
<
uint64_t
>
mExecutionDuration
;
Atomic
<
uint64_t
>
mTotalDispatchCount
;
DispatchCounter
mDispatchCounter
;
nsCString
mName
;
}
;
}
#
endif
