#
ifndef
LeakRefPtr_h
#
define
LeakRefPtr_h
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
namespace
mozilla
{
template
<
class
T
>
class
LeakRefPtr
{
public
:
explicit
LeakRefPtr
(
already_AddRefed
<
T
>
&
&
aPtr
)
:
mRawPtr
(
aPtr
.
take
(
)
)
{
}
explicit
operator
bool
(
)
const
{
return
!
!
mRawPtr
;
}
LeakRefPtr
<
T
>
&
operator
=
(
already_AddRefed
<
T
>
&
&
aPtr
)
{
mRawPtr
=
aPtr
.
take
(
)
;
return
*
this
;
}
already_AddRefed
<
T
>
take
(
)
{
T
*
rawPtr
=
mRawPtr
;
mRawPtr
=
nullptr
;
return
already_AddRefed
<
T
>
(
rawPtr
)
;
}
private
:
T
*
MOZ_OWNING_REF
mRawPtr
;
}
;
}
#
endif
