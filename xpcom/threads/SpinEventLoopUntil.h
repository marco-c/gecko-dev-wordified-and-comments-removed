#
ifndef
xpcom_threads_SpinEventLoopUntil_h__
#
define
xpcom_threads_SpinEventLoopUntil_h__
#
include
"
MainThreadUtils
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsThreadUtils
.
h
"
#
include
"
xpcpublic
.
h
"
class
nsIThread
;
namespace
mozilla
{
enum
class
ProcessFailureBehavior
{
IgnoreAndContinue
ReportToCaller
}
;
template
<
ProcessFailureBehavior
Behavior
=
ProcessFailureBehavior
:
:
ReportToCaller
typename
Pred
>
bool
SpinEventLoopUntil
(
Pred
&
&
aPredicate
nsIThread
*
aThread
=
nullptr
)
{
nsIThread
*
thread
=
aThread
?
aThread
:
NS_GetCurrentThread
(
)
;
mozilla
:
:
Maybe
<
xpc
:
:
AutoScriptActivity
>
asa
;
if
(
NS_IsMainThread
(
)
)
{
asa
.
emplace
(
false
)
;
}
while
(
!
aPredicate
(
)
)
{
bool
didSomething
=
NS_ProcessNextEvent
(
thread
true
)
;
if
(
Behavior
=
=
ProcessFailureBehavior
:
:
IgnoreAndContinue
)
{
continue
;
}
else
if
(
!
didSomething
)
{
return
false
;
}
}
return
true
;
}
}
#
endif
