#
ifndef
mozilla_Dispatcher_h
#
define
mozilla_Dispatcher_h
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
TaskCategory
.
h
"
#
include
"
nsISupportsImpl
.
h
"
class
nsIEventTarget
;
class
nsIRunnable
;
namespace
mozilla
{
class
AbstractThread
;
namespace
dom
{
class
TabGroup
;
}
class
Dispatcher
{
public
:
NS_INLINE_DECL_PURE_VIRTUAL_REFCOUNTING
virtual
nsresult
Dispatch
(
const
char
*
aName
TaskCategory
aCategory
already_AddRefed
<
nsIRunnable
>
&
&
aRunnable
)
=
0
;
virtual
nsIEventTarget
*
EventTargetFor
(
TaskCategory
aCategory
)
const
=
0
;
AbstractThread
*
AbstractMainThreadFor
(
TaskCategory
aCategory
)
;
virtual
dom
:
:
TabGroup
*
AsTabGroup
(
)
{
return
nullptr
;
}
protected
:
virtual
AbstractThread
*
AbstractMainThreadForImpl
(
TaskCategory
aCategory
)
=
0
;
virtual
already_AddRefed
<
nsIEventTarget
>
CreateEventTargetFor
(
TaskCategory
aCategory
)
;
static
Dispatcher
*
FromEventTarget
(
nsIEventTarget
*
aEventTarget
)
;
}
;
}
#
endif
