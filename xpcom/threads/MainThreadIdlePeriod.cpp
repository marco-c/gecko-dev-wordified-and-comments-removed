#
include
"
MainThreadIdlePeriod
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
Preferences
.
h
"
#
include
"
nsRefreshDriver
.
h
"
#
define
DEFAULT_LONG_IDLE_PERIOD
50
.
0f
namespace
mozilla
{
NS_IMETHODIMP
MainThreadIdlePeriod
:
:
GetIdlePeriodHint
(
TimeStamp
*
aIdleDeadline
)
{
MOZ_ASSERT
(
aIdleDeadline
)
;
Maybe
<
TimeStamp
>
deadline
=
nsRefreshDriver
:
:
GetIdleDeadlineHint
(
)
;
if
(
deadline
.
isSome
(
)
)
{
*
aIdleDeadline
=
deadline
.
value
(
)
;
}
else
{
*
aIdleDeadline
=
TimeStamp
:
:
Now
(
)
+
TimeDuration
:
:
FromMilliseconds
(
GetLongIdlePeriod
(
)
)
;
}
return
NS_OK
;
}
float
MainThreadIdlePeriod
:
:
GetLongIdlePeriod
(
)
{
static
float
sLongIdlePeriod
=
DEFAULT_LONG_IDLE_PERIOD
;
static
bool
sInitialized
=
false
;
if
(
!
sInitialized
)
{
sInitialized
=
true
;
Preferences
:
:
AddFloatVarCache
(
&
sLongIdlePeriod
"
idle_queue
.
long_period
"
DEFAULT_LONG_IDLE_PERIOD
)
;
}
return
sLongIdlePeriod
;
}
}
