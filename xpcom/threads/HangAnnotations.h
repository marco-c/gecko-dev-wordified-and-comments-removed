#
ifndef
mozilla_HangAnnotations_h
#
define
mozilla_HangAnnotations_h
#
include
<
set
>
#
include
"
ipc
/
IPCMessageUtils
.
h
"
#
include
"
mozilla
/
MemoryReporting
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
mozilla
/
Vector
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
HangMonitor
{
class
Annotation
{
public
:
Annotation
(
)
{
}
Annotation
(
const
nsAString
&
aName
const
nsAString
&
aValue
)
:
mName
(
aName
)
mValue
(
aValue
)
{
}
nsString
mName
;
nsString
mValue
;
}
;
class
HangAnnotations
:
public
nsTArray
<
Annotation
>
{
public
:
void
AddAnnotation
(
const
nsAString
&
aName
const
int32_t
aData
)
;
void
AddAnnotation
(
const
nsAString
&
aName
const
double
aData
)
;
void
AddAnnotation
(
const
nsAString
&
aName
const
nsAString
&
aData
)
;
void
AddAnnotation
(
const
nsAString
&
aName
const
nsACString
&
aData
)
;
void
AddAnnotation
(
const
nsAString
&
aName
const
bool
aData
)
;
}
;
class
Annotator
{
public
:
virtual
void
AnnotateHang
(
HangAnnotations
&
aAnnotations
)
=
0
;
}
;
void
RegisterAnnotator
(
Annotator
&
aAnnotator
)
;
void
UnregisterAnnotator
(
Annotator
&
aAnnotator
)
;
HangAnnotations
ChromeHangAnnotatorCallout
(
)
;
namespace
Observer
{
class
Annotators
{
public
:
Annotators
(
)
;
~
Annotators
(
)
;
bool
Register
(
Annotator
&
aAnnotator
)
;
bool
Unregister
(
Annotator
&
aAnnotator
)
;
HangAnnotations
GatherAnnotations
(
)
;
private
:
Mutex
mMutex
;
std
:
:
set
<
Annotator
*
>
mAnnotators
;
}
;
}
}
}
namespace
IPC
{
template
<
>
class
ParamTraits
<
mozilla
:
:
HangMonitor
:
:
HangAnnotations
>
:
public
ParamTraits
<
nsTArray
<
mozilla
:
:
HangMonitor
:
:
Annotation
>
>
{
public
:
typedef
mozilla
:
:
HangMonitor
:
:
HangAnnotations
paramType
;
}
;
template
<
>
class
ParamTraits
<
mozilla
:
:
HangMonitor
:
:
Annotation
>
{
public
:
typedef
mozilla
:
:
HangMonitor
:
:
Annotation
paramType
;
static
void
Write
(
Message
*
aMsg
const
paramType
&
aParam
)
;
static
bool
Read
(
const
Message
*
aMsg
PickleIterator
*
aIter
paramType
*
aResult
)
;
}
;
}
#
endif
