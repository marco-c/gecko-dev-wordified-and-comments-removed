EXPORTS
+
=
[
"
nsXPCOM
.
h
"
"
nsXPCOMCID
.
h
"
"
nsXPCOMCIDInternal
.
h
"
"
nsXULAppAPI
.
h
"
"
XREChildData
.
h
"
"
XREShellData
.
h
"
]
EXPORTS
.
mozilla
+
=
[
"
!
GeckoProcessTypes
.
h
"
"
!
Services
.
h
"
"
FileLocation
.
h
"
"
IOInterposer
.
h
"
"
LateWriteChecks
.
h
"
"
Omnijar
.
h
"
"
PoisonIOInterposer
.
h
"
"
SmallArrayLRUCache
.
h
"
"
XPCOM
.
h
"
"
XREAppData
.
h
"
]
if
CONFIG
[
"
OS_ARCH
"
]
=
=
"
WINNT
"
:
EXPORTS
.
mozilla
+
=
[
"
perfprobe
.
h
"
]
SOURCES
+
=
[
"
perfprobe
.
cpp
"
"
PoisonIOInterposerBase
.
cpp
"
"
PoisonIOInterposerWin
.
cpp
"
]
elif
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
cocoa
"
:
UNIFIED_SOURCES
+
=
[
"
PoisonIOInterposerBase
.
cpp
"
"
PoisonIOInterposerMac
.
cpp
"
]
if
CONFIG
[
"
CPU_ARCH
"
]
!
=
"
aarch64
"
:
SOURCES
+
=
[
"
mach_override
.
c
"
]
SOURCES
[
"
mach_override
.
c
"
]
.
flags
+
=
[
"
-
Wno
-
unused
-
function
"
]
else
:
SOURCES
+
=
[
"
PoisonIOInterposerStub
.
cpp
"
]
include
(
"
.
.
/
glue
/
objs
.
mozbuild
"
)
XPCOM_MANIFESTS
+
=
[
"
components
.
conf
"
]
UNIFIED_SOURCES
+
=
xpcom_gluens_src_cppsrcs
UNIFIED_SOURCES
+
=
xpcom_glue_src_cppsrcs
UNIFIED_SOURCES
+
=
[
"
FileLocation
.
cpp
"
"
IOInterposer
.
cpp
"
"
LateWriteChecks
.
cpp
"
"
MainThreadIOLogger
.
cpp
"
"
Omnijar
.
cpp
"
"
XPCOMInit
.
cpp
"
]
SOURCES
+
=
[
"
!
Services
.
cpp
"
]
if
CONFIG
[
"
OS_ARCH
"
]
!
=
"
WINNT
"
:
SOURCES
+
=
[
"
NSPRInterposer
.
cpp
"
]
GeneratedFile
(
"
Services
.
cpp
"
script
=
"
Services
.
py
"
entry_point
=
"
services_cpp
"
)
GeneratedFile
(
"
Services
.
h
"
script
=
"
Services
.
py
"
entry_point
=
"
services_h
"
)
GeneratedFile
(
"
GeckoProcessTypes
.
h
"
script
=
"
gen_process_types
.
py
"
entry_point
=
"
main
"
)
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
FINAL_LIBRARY
=
"
xul
"
DEFINES
[
"
_IMPL_NS_STRINGAPI
"
]
=
True
DEFINES
[
"
OMNIJAR_NAME
"
]
=
CONFIG
[
"
OMNIJAR_NAME
"
]
LOCAL_INCLUDES
+
=
[
"
!
.
.
"
"
.
.
/
base
"
"
.
.
/
components
"
"
.
.
/
ds
"
"
.
.
/
glue
"
"
.
.
/
io
"
"
.
.
/
threads
"
"
/
chrome
"
"
/
docshell
/
base
"
"
/
js
/
xpconnect
/
loader
"
]
if
CONFIG
[
"
MOZ_VPX
"
]
:
LOCAL_INCLUDES
+
=
[
"
/
media
/
libvpx
"
]
