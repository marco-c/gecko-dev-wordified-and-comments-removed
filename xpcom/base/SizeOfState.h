#
ifndef
SizeOfState_h
#
define
SizeOfState_h
#
include
"
mozilla
/
fallible
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
MemoryReporting
.
h
"
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
nsTHashtable
.
h
"
#
include
"
nsHashKeys
.
h
"
namespace
mozilla
{
class
SeenPtrs
:
public
nsTHashtable
<
nsPtrHashKey
<
const
void
>
>
{
public
:
bool
HaveSeenPtr
(
const
void
*
aPtr
)
{
uint32_t
oldCount
=
Count
(
)
;
mozilla
:
:
Unused
<
<
PutEntry
(
aPtr
fallible
)
;
return
oldCount
=
=
Count
(
)
;
}
}
;
class
SizeOfState
{
public
:
explicit
SizeOfState
(
MallocSizeOf
aMallocSizeOf
)
:
mMallocSizeOf
(
aMallocSizeOf
)
{
}
bool
HaveSeenPtr
(
const
void
*
aPtr
)
{
return
mSeenPtrs
.
HaveSeenPtr
(
aPtr
)
;
}
MallocSizeOf
mMallocSizeOf
;
SeenPtrs
mSeenPtrs
;
}
;
}
#
endif
