#
ifndef
nsGZFileWriter_h
#
define
nsGZFileWriter_h
#
include
"
nsISupportsImpl
.
h
"
#
include
"
zlib
.
h
"
#
include
"
nsDependentString
.
h
"
#
include
<
stdio
.
h
>
class
nsGZFileWriter
final
{
virtual
~
nsGZFileWriter
(
)
;
public
:
explicit
nsGZFileWriter
(
)
;
NS_INLINE_DECL_REFCOUNTING
(
nsGZFileWriter
)
[
[
nodiscard
]
]
nsresult
Init
(
nsIFile
*
aFile
)
;
[
[
nodiscard
]
]
nsresult
InitANSIFileDesc
(
FILE
*
aFile
)
;
[
[
nodiscard
]
]
nsresult
Write
(
const
nsACString
&
aStr
)
;
[
[
nodiscard
]
]
nsresult
Write
(
const
char
*
aStr
uint32_t
aLen
)
{
return
Write
(
nsDependentCSubstring
(
aStr
aLen
)
)
;
}
nsresult
Finish
(
)
;
private
:
bool
mInitialized
;
bool
mFinished
;
gzFile
mGZFile
;
}
;
#
endif
