#
include
"
mozilla
/
DebuggerOnGCRunnable
.
h
"
#
include
<
utility
>
#
include
"
js
/
Debug
.
h
"
#
include
"
mozilla
/
CycleCollectedJSContext
.
h
"
#
include
"
mozilla
/
SystemGroup
.
h
"
#
include
"
mozilla
/
dom
/
ScriptSettings
.
h
"
namespace
mozilla
{
nsresult
DebuggerOnGCRunnable
:
:
Enqueue
(
JSContext
*
aCx
const
JS
:
:
GCDescription
&
aDesc
)
{
auto
gcEvent
=
aDesc
.
toGCEvent
(
aCx
)
;
if
(
!
gcEvent
)
{
return
NS_ERROR_OUT_OF_MEMORY
;
}
RefPtr
<
DebuggerOnGCRunnable
>
runOnGC
=
new
DebuggerOnGCRunnable
(
std
:
:
move
(
gcEvent
)
)
;
if
(
NS_IsMainThread
(
)
)
{
return
SystemGroup
:
:
Dispatch
(
TaskCategory
:
:
GarbageCollection
runOnGC
.
forget
(
)
)
;
}
else
{
return
NS_DispatchToCurrentThread
(
runOnGC
)
;
}
}
NS_IMETHODIMP
DebuggerOnGCRunnable
:
:
Run
(
)
{
AutoJSAPI
jsapi
;
jsapi
.
Init
(
)
;
if
(
!
JS
:
:
dbg
:
:
FireOnGarbageCollectionHook
(
jsapi
.
cx
(
)
std
:
:
move
(
mGCData
)
)
)
{
return
NS_ERROR_OUT_OF_MEMORY
;
}
return
NS_OK
;
}
nsresult
DebuggerOnGCRunnable
:
:
Cancel
(
)
{
mGCData
=
nullptr
;
return
NS_OK
;
}
}
