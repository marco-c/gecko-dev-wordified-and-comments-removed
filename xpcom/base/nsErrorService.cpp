#
include
"
nsErrorService
.
h
"
#
include
"
nsCRTGlue
.
h
"
#
include
"
nsAutoPtr
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
mozilla
/
ClearOnShutdown
.
h
"
namespace
{
mozilla
:
:
StaticRefPtr
<
nsErrorService
>
gSingleton
;
}
NS_IMPL_ISUPPORTS
(
nsErrorService
nsIErrorService
)
already_AddRefed
<
nsIErrorService
>
nsErrorService
:
:
GetOrCreate
(
)
{
RefPtr
<
nsErrorService
>
svc
;
if
(
gSingleton
)
{
svc
=
gSingleton
;
}
else
{
gSingleton
=
new
nsErrorService
(
)
;
mozilla
:
:
ClearOnShutdown
(
&
gSingleton
)
;
svc
=
gSingleton
;
}
return
svc
.
forget
(
)
;
}
NS_IMETHODIMP
nsErrorService
:
:
RegisterErrorStringBundle
(
int16_t
aErrorModule
const
char
*
aStringBundleURL
)
{
mErrorStringBundleURLMap
.
Put
(
aErrorModule
new
nsCString
(
aStringBundleURL
)
)
;
return
NS_OK
;
}
NS_IMETHODIMP
nsErrorService
:
:
UnregisterErrorStringBundle
(
int16_t
aErrorModule
)
{
mErrorStringBundleURLMap
.
Remove
(
aErrorModule
)
;
return
NS_OK
;
}
NS_IMETHODIMP
nsErrorService
:
:
GetErrorStringBundle
(
int16_t
aErrorModule
char
*
*
aResult
)
{
nsCString
*
bundleURL
=
mErrorStringBundleURLMap
.
Get
(
aErrorModule
)
;
if
(
!
bundleURL
)
{
return
NS_ERROR_FAILURE
;
}
*
aResult
=
ToNewCString
(
*
bundleURL
)
;
return
NS_OK
;
}
