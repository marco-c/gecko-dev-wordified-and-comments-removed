#
ifndef
AppShutdown_h
#
define
AppShutdown_h
#
include
<
type_traits
>
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsISupportsBase
.
h
"
#
include
"
ShutdownPhase
.
h
"
namespace
mozilla
{
enum
class
AppShutdownMode
{
Normal
Restart
}
;
class
AppShutdown
{
public
:
static
ShutdownPhase
GetCurrentShutdownPhase
(
)
;
static
bool
IsInOrBeyond
(
ShutdownPhase
aPhase
)
;
static
int
GetExitCode
(
)
;
static
void
SaveEnvVarsForPotentialRestart
(
)
;
static
void
Init
(
AppShutdownMode
aMode
int
aExitCode
)
;
static
void
OnShutdownConfirmed
(
)
;
static
void
MaybeDoRestart
(
)
;
static
void
DoImmediateExit
(
int
aExitCode
=
0
)
;
static
bool
IsRestarting
(
)
;
static
void
AdvanceShutdownPhase
(
ShutdownPhase
aPhase
const
char16_t
*
aNotificationData
=
nullptr
const
nsCOMPtr
<
nsISupports
>
&
aNotificationSubject
=
nsCOMPtr
<
nsISupports
>
(
nullptr
)
)
;
static
void
AdvanceShutdownPhaseWithoutNotify
(
ShutdownPhase
aPhase
)
;
static
const
char
*
GetObserverKey
(
ShutdownPhase
aPhase
)
;
static
ShutdownPhase
GetShutdownPhaseFromTopic
(
const
char
*
aTopic
)
;
#
ifdef
DEBUG
static
bool
IsNoOrLegalShutdownTopic
(
const
char
*
aTopic
)
;
#
endif
private
:
static
void
MaybeFastShutdown
(
ShutdownPhase
aPhase
)
;
static
void
AdvanceShutdownPhaseInternal
(
ShutdownPhase
aPhase
bool
doNotify
const
char16_t
*
aNotificationData
const
nsCOMPtr
<
nsISupports
>
&
aNotificationSubject
)
;
}
;
}
#
endif
