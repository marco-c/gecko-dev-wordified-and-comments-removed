#
ifndef
nsFmtCString_h___
#
define
nsFmtCString_h___
#
include
<
type_traits
>
#
include
"
fmt
/
format
.
h
"
#
include
"
fmt
/
xchar
.
h
"
#
include
"
nsString
.
h
"
template
<
typename
T
>
class
nsTFmtString
:
public
nsTAutoStringN
<
T
16
>
{
public
:
template
<
typename
.
.
.
Args
>
explicit
nsTFmtString
(
fmt
:
:
basic_format_string
<
T
type_identity_t
<
Args
>
.
.
.
>
aFormatStr
Args
&
&
.
.
.
aArgs
)
{
this
-
>
AppendFmt
(
aFormatStr
std
:
:
forward
<
Args
>
(
aArgs
)
.
.
.
)
;
}
}
;
template
<
typename
Char
>
struct
fmt
:
:
formatter
<
nsTFmtString
<
Char
>
Char
>
:
fmt
:
:
formatter
<
nsTString
<
Char
>
Char
>
{
}
;
#
endif
