template
<
typename
T
>
nsTDependentString
<
T
>
:
:
nsTDependentString
(
const
char_type
*
aStart
const
char_type
*
aEnd
)
:
string_type
(
const_cast
<
char_type
*
>
(
aStart
)
aEnd
-
aStart
DataFlags
:
:
TERMINATED
ClassFlags
(
0
)
)
{
MOZ_RELEASE_ASSERT
(
aStart
<
=
aEnd
"
Overflow
!
"
)
;
this
-
>
AssertValidDependentString
(
)
;
}
template
<
typename
T
>
void
nsTDependentString
<
T
>
:
:
Rebind
(
const
string_type
&
str
index_type
startPos
)
{
MOZ_ASSERT
(
str
.
GetDataFlags
(
)
&
DataFlags
:
:
TERMINATED
"
Unterminated
flat
string
"
)
;
this
-
>
Finalize
(
)
;
size_type
strLength
=
str
.
Length
(
)
;
if
(
startPos
>
strLength
)
{
startPos
=
strLength
;
}
char_type
*
newData
=
const_cast
<
char_type
*
>
(
static_cast
<
const
char_type
*
>
(
str
.
Data
(
)
)
)
+
startPos
;
size_type
newLen
=
strLength
-
startPos
;
DataFlags
newDataFlags
=
str
.
GetDataFlags
(
)
&
(
DataFlags
:
:
TERMINATED
|
DataFlags
:
:
LITERAL
)
;
this
-
>
SetData
(
newData
newLen
newDataFlags
)
;
}
template
<
typename
T
>
void
nsTDependentString
<
T
>
:
:
Rebind
(
const
char_type
*
aStart
const
char_type
*
aEnd
)
{
MOZ_RELEASE_ASSERT
(
aStart
<
=
aEnd
"
Overflow
!
"
)
;
this
-
>
Rebind
(
aStart
aEnd
-
aStart
)
;
}
