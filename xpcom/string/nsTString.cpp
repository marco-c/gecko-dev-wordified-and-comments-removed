#
include
"
nsTString
.
h
"
#
include
"
nsString
.
h
"
#
include
"
prdtoa
.
h
"
template
<
typename
T
>
bool
nsTString
<
T
>
:
:
SetCharAt
(
char16_t
aChar
index_type
aIndex
)
{
if
(
aIndex
>
=
this
-
>
mLength
)
{
return
false
;
}
if
(
!
this
-
>
EnsureMutable
(
)
)
{
this
-
>
AllocFailed
(
this
-
>
mLength
)
;
}
this
-
>
mData
[
aIndex
]
=
char_type
(
aChar
)
;
return
true
;
}
template
<
typename
T
>
void
nsTString
<
T
>
:
:
Rebind
(
const
char_type
*
data
size_type
length
)
{
this
-
>
Finalize
(
)
;
this
-
>
SetData
(
const_cast
<
char_type
*
>
(
data
)
length
DataFlags
:
:
TERMINATED
)
;
this
-
>
AssertValidDependentString
(
)
;
}
template
class
nsTString
<
char
>
;
template
class
nsTString
<
char16_t
>
;
template
class
nsTAutoStringN
<
char
64
>
;
template
class
nsTAutoStringN
<
char16_t
64
>
;
