use
{
RefCounted
RefPtr
GetterAddrefs
}
;
use
interfaces
:
:
nsISupports
;
#
[
repr
(
C
)
]
#
[
derive
(
Copy
Clone
Eq
PartialEq
)
]
pub
struct
nsID
(
pub
u32
pub
u16
pub
u16
pub
[
u8
;
8
]
)
;
pub
type
nsIID
=
nsID
;
pub
type
nsCID
=
nsID
;
pub
unsafe
trait
XpCom
:
RefCounted
{
const
IID
:
nsIID
;
fn
query_interface
<
T
:
XpCom
>
(
&
self
)
-
>
Option
<
RefPtr
<
T
>
>
{
let
mut
ga
=
GetterAddrefs
:
:
<
T
>
:
:
new
(
)
;
unsafe
{
if
(
*
(
self
as
*
const
Self
as
*
const
nsISupports
)
)
.
QueryInterface
(
&
T
:
:
IID
ga
.
void_ptr
(
)
)
.
succeeded
(
)
{
ga
.
refptr
(
)
}
else
{
None
}
}
}
}
