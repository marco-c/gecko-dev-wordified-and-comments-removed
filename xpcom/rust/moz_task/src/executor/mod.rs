use
crate
:
:
get_current_thread
;
use
std
:
:
{
fmt
:
:
Debug
future
:
:
Future
}
;
use
thiserror
:
:
Error
;
mod
future_task
;
pub
fn
spawn_current_thread
<
Fut
>
(
future
:
Fut
)
-
>
Result
<
(
)
Shutdown
>
where
Fut
:
Future
<
Output
=
(
)
>
+
'
static
{
let
current_thread
=
get_current_thread
(
)
.
map_err
(
|
_
|
Shutdown
{
_priv
:
(
)
}
)
?
;
unsafe
{
future_task
:
:
local_task
(
future
current_thread
.
coerce
(
)
)
;
}
Ok
(
(
)
)
}
#
[
derive
(
Error
Debug
)
]
#
[
error
(
"
Event
target
is
shutdown
"
)
]
pub
struct
Shutdown
{
_priv
:
(
)
}
