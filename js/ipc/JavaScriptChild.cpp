#
include
"
JavaScriptChild
.
h
"
#
include
"
mozilla
/
dom
/
ContentChild
.
h
"
#
include
"
mozilla
/
dom
/
BindingUtils
.
h
"
#
include
"
mozilla
/
ipc
/
MessageChannel
.
h
"
#
include
"
nsContentUtils
.
h
"
#
include
"
xpcprivate
.
h
"
#
include
"
jsfriendapi
.
h
"
#
include
"
AccessCheck
.
h
"
using
namespace
JS
;
using
namespace
mozilla
;
using
namespace
mozilla
:
:
jsipc
;
using
mozilla
:
:
AutoSafeJSContext
;
static
void
UpdateChildWeakPointersBeforeSweepingZoneGroup
(
JSContext
*
cx
void
*
data
)
{
static_cast
<
JavaScriptChild
*
>
(
data
)
-
>
updateWeakPointers
(
)
;
}
JavaScriptChild
:
:
JavaScriptChild
(
JSContext
*
cx
)
:
JavaScriptShared
(
cx
)
JavaScriptBase
<
PJavaScriptChild
>
(
cx
)
{
}
JavaScriptChild
:
:
~
JavaScriptChild
(
)
{
JS_RemoveWeakPointerZoneGroupCallback
(
cx_
UpdateChildWeakPointersBeforeSweepingZoneGroup
)
;
}
bool
JavaScriptChild
:
:
init
(
)
{
if
(
!
WrapperOwner
:
:
init
(
)
)
return
false
;
if
(
!
WrapperAnswer
:
:
init
(
)
)
return
false
;
JS_AddWeakPointerZoneGroupCallback
(
cx_
UpdateChildWeakPointersBeforeSweepingZoneGroup
this
)
;
return
true
;
}
void
JavaScriptChild
:
:
updateWeakPointers
(
)
{
objects_
.
sweep
(
)
;
unwaivedObjectIds_
.
sweep
(
)
;
waivedObjectIds_
.
sweep
(
)
;
}
JSObject
*
JavaScriptChild
:
:
scopeForTargetObjects
(
)
{
return
xpc
:
:
PrivilegedJunkScope
(
)
;
}
PJavaScriptChild
*
mozilla
:
:
jsipc
:
:
NewJavaScriptChild
(
JSContext
*
cx
)
{
JavaScriptChild
*
child
=
new
JavaScriptChild
(
cx
)
;
if
(
!
child
-
>
init
(
)
)
{
delete
child
;
return
nullptr
;
}
return
child
;
}
void
mozilla
:
:
jsipc
:
:
ReleaseJavaScriptChild
(
PJavaScriptChild
*
child
)
{
static_cast
<
JavaScriptChild
*
>
(
child
)
-
>
decref
(
)
;
}
