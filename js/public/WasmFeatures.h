#
ifndef
js_WasmFeatures_h
#
define
js_WasmFeatures_h
#
ifdef
ENABLE_WASM_RELAXED_SIMD
#
define
WASM_RELAXED_SIMD_ENABLED
1
#
else
#
define
WASM_RELAXED_SIMD_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_EXTENDED_CONST
#
define
WASM_EXTENDED_CONST_ENABLED
1
#
else
#
define
WASM_EXTENDED_CONST_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_FUNCTION_REFERENCES
#
define
WASM_FUNCTION_REFERENCES_ENABLED
1
#
else
#
define
WASM_FUNCTION_REFERENCES_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_GC
#
define
WASM_GC_ENABLED
1
#
else
#
define
WASM_GC_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_MEMORY64
#
define
WASM_MEMORY64_ENABLED
1
#
else
#
define
WASM_MEMORY64_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_MEMORY_CONTROL
#
define
WASM_MEMORY_CONTROL_ENABLED
1
#
else
#
define
WASM_MEMORY_CONTROL_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_MOZ_INTGEMM
#
define
WASM_MOZ_INTGEMM_ENABLED
1
#
else
#
define
WASM_MOZ_INTGEMM_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_MULTI_MEMORY
#
define
WASM_MULTI_MEMORY_ENABLED
1
#
else
#
define
WASM_MULTI_MEMORY_ENABLED
0
#
endif
enum
class
WasmFeatureStage
{
Experimental
=
0
Tentative
Default
}
;
#
define
JS_FOR_WASM_FEATURES
(
FEATURE
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
ExtendedConst
\
/
*
lower
case
name
*
/
extendedConst
\
/
*
stage
*
/
WasmFeatureStage
:
:
Tentative
\
/
*
compile
predicate
*
/
WASM_EXTENDED_CONST_ENABLED
\
/
*
compiler
predicate
*
/
true
\
/
*
flag
predicate
*
/
true
\
/
*
flag
force
enable
*
/
false
\
/
*
shell
flag
*
/
"
extended
-
const
"
\
/
*
preference
name
*
/
"
extended_const
"
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
Exceptions
\
/
*
lower
case
name
*
/
exceptions
\
/
*
stage
*
/
WasmFeatureStage
:
:
Tentative
\
/
*
compile
predicate
*
/
true
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
true
\
/
*
flag
force
enable
*
/
false
\
/
*
shell
flag
*
/
"
exceptions
"
\
/
*
preference
name
*
/
"
exceptions
"
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
FunctionReferences
\
/
*
lower
case
name
*
/
functionReferences
\
/
*
stage
*
/
WasmFeatureStage
:
:
Experimental
\
/
*
compile
predicate
*
/
WASM_FUNCTION_REFERENCES_ENABLED
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
true
\
/
*
flag
force
enable
*
/
WasmGcFlag
(
cx
)
\
/
*
shell
flag
*
/
"
function
-
references
"
\
/
*
preference
name
*
/
"
function_references
"
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
Gc
\
/
*
lower
case
name
*
/
gc
\
/
*
stage
*
/
WasmFeatureStage
:
:
Experimental
\
/
*
compile
predicate
*
/
WASM_GC_ENABLED
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
true
\
/
*
flag
force
enable
*
/
false
\
/
*
shell
flag
*
/
"
gc
"
\
/
*
preference
name
*
/
"
gc
"
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
RelaxedSimd
\
/
*
lower
case
name
*
/
v128Relaxed
\
/
*
stage
*
/
WasmFeatureStage
:
:
Tentative
\
/
*
compile
predicate
*
/
WASM_RELAXED_SIMD_ENABLED
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
js
:
:
jit
:
:
JitSupportsWasmSimd
(
)
\
/
*
flag
force
enable
*
/
false
\
/
*
shell
flag
*
/
"
relaxed
-
simd
"
\
/
*
preference
name
*
/
"
relaxed_simd
"
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
Memory64
\
/
*
lower
case
name
*
/
memory64
\
/
*
stage
*
/
WasmFeatureStage
:
:
Tentative
\
/
*
compile
predicate
*
/
WASM_MEMORY64_ENABLED
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
true
\
/
*
flag
force
enable
*
/
false
\
/
*
shell
flag
*
/
"
memory64
"
\
/
*
preference
name
*
/
"
memory64
"
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
MemoryControl
\
/
*
lower
case
name
*
/
memoryControl
\
/
*
stage
*
/
WasmFeatureStage
:
:
Experimental
\
/
*
compile
predicate
*
/
WASM_MEMORY_CONTROL_ENABLED
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
true
\
/
*
flag
force
enable
*
/
false
\
/
*
shell
flag
*
/
"
memory
-
control
"
\
/
*
preference
name
*
/
"
memory_control
"
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
MultiMemory
\
/
*
lower
case
name
*
/
multiMemory
\
/
*
stage
*
/
WasmFeatureStage
:
:
Experimental
\
/
*
compile
predicate
*
/
WASM_MULTI_MEMORY_ENABLED
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
true
\
/
*
flag
force
enable
*
/
false
\
/
*
shell
flag
*
/
"
multi
-
memory
"
\
/
*
preference
name
*
/
"
multi_memory
"
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
MozIntGemm
\
/
*
lower
case
name
*
/
mozIntGemm
\
/
*
stage
*
/
WasmFeatureStage
:
:
Experimental
\
/
*
compile
predicate
*
/
WASM_MOZ_INTGEMM_ENABLED
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
IsSimdPrivilegedContext
(
cx
)
\
/
*
flag
force
enable
*
/
false
\
/
*
shell
flag
*
/
"
moz
-
intgemm
"
\
/
*
preference
name
*
/
"
moz_intgemm
"
)
\
FEATURE
(
\
/
*
capitalized
name
*
/
TestSerialization
\
/
*
lower
case
name
*
/
testSerialization
\
/
*
stage
*
/
WasmFeatureStage
:
:
Experimental
\
/
*
compile
predicate
*
/
1
\
/
*
compiler
predicate
*
/
IonAvailable
(
cx
)
\
/
*
flag
predicate
*
/
true
\
/
*
flag
force
enable
*
/
false
\
/
*
shell
flag
*
/
"
test
-
serialization
"
\
/
*
preference
name
*
/
"
test
-
serialization
"
)
#
endif
