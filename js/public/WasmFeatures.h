#
ifndef
js_WasmFeatures_h
#
define
js_WasmFeatures_h
#
ifdef
ENABLE_WASM_REFTYPES
#
define
WASM_REFTYPES_ENABLED
1
#
else
#
define
WASM_REFTYPES_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_SIMD
#
define
WASM_SIMD_ENABLED
1
#
else
#
define
WASM_SIMD_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_EXCEPTIONS
#
define
WASM_EXCEPTIONS_ENABLED
1
#
else
#
define
WASM_EXCEPTIONS_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_FUNCTION_REFERENCES
#
define
WASM_FUNCTION_REFERENCES_ENABLED
1
#
else
#
define
WASM_FUNCTION_REFERENCES_ENABLED
0
#
endif
#
ifdef
ENABLE_WASM_GC
#
define
WASM_GC_ENABLED
1
#
else
#
define
WASM_GC_ENABLED
0
#
endif
#
define
JS_FOR_WASM_FEATURES
(
DEFAULT
EXPERIMENTAL
)
\
DEFAULT
(
/
*
capitalized
name
*
/
Reftypes
\
/
*
lower
case
name
*
/
refTypes
\
/
*
compile
predicate
*
/
WASM_REFTYPES_ENABLED
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
true
\
/
*
shell
flag
*
/
"
reftypes
"
\
/
*
preference
name
*
/
"
reftypes
"
)
\
DEFAULT
(
/
*
capitalized
name
*
/
Simd
\
/
*
lower
case
name
*
/
v128
\
/
*
compile
predicate
*
/
WASM_SIMD_ENABLED
\
/
*
compiler
predicate
*
/
AnyCompilerAvailable
(
cx
)
\
/
*
flag
predicate
*
/
!
IsFuzzingCranelift
(
cx
)
&
&
\
js
:
:
jit
:
:
JitSupportsWasmSimd
(
)
\
/
*
shell
flag
*
/
"
simd
"
\
/
*
preference
name
*
/
"
simd
"
)
\
EXPERIMENTAL
(
\
/
*
capitalized
name
*
/
Exceptions
\
/
*
lower
case
name
*
/
exceptions
\
/
*
compile
predicate
*
/
WASM_EXCEPTIONS_ENABLED
\
/
*
compiler
predicate
*
/
BaselineAvailable
(
cx
)
\
/
*
flag
predicate
*
/
!
IsFuzzingIon
(
cx
)
&
&
!
IsFuzzingCranelift
(
cx
)
\
/
*
shell
flag
*
/
"
exceptions
"
\
/
*
preference
name
*
/
"
exceptions
"
)
\
EXPERIMENTAL
(
/
*
capitalized
name
*
/
FunctionReferences
\
/
*
lower
case
name
*
/
functionReferences
\
/
*
compile
predicate
*
/
WASM_FUNCTION_REFERENCES_ENABLED
\
/
*
compiler
predicate
*
/
BaselineAvailable
(
cx
)
\
/
*
flag
predicate
*
/
!
IsFuzzingIon
(
cx
)
&
&
\
!
IsFuzzingCranelift
(
cx
)
&
&
WasmReftypesFlag
(
cx
)
\
/
*
shell
flag
*
/
"
function
-
references
"
\
/
*
preference
name
*
/
"
function_references
"
)
\
EXPERIMENTAL
(
/
*
capitalized
name
*
/
Gc
\
/
*
lower
case
name
*
/
gc
\
/
*
compile
predicate
*
/
WASM_GC_ENABLED
\
/
*
compiler
predicate
*
/
BaselineAvailable
(
cx
)
\
/
*
flag
predicate
*
/
WasmFunctionReferencesFlag
(
cx
)
\
/
*
shell
flag
*
/
"
gc
"
\
/
*
preference
name
*
/
"
gc
"
)
#
endif
