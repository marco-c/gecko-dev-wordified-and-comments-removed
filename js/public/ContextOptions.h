#
ifndef
js_ContextOptions_h
#
define
js_ContextOptions_h
#
include
"
jstypes
.
h
"
#
include
"
js
/
WasmFeatures
.
h
"
struct
JS_PUBLIC_API
JSContext
;
namespace
JS
{
class
JS_PUBLIC_API
ContextOptions
{
public
:
ContextOptions
(
)
:
asmJS_
(
true
)
wasm_
(
true
)
wasmForTrustedPrinciples_
(
true
)
wasmVerbose_
(
false
)
wasmBaseline_
(
true
)
wasmIon_
(
true
)
wasmCranelift_
(
false
)
#
define
WASM_DEFAULT_FEATURE
(
NAME
.
.
.
)
wasm
#
#
NAME
#
#
_
(
true
)
#
define
WASM_EXPERIMENTAL_FEATURE
(
NAME
.
.
.
)
wasm
#
#
NAME
#
#
_
(
false
)
JS_FOR_WASM_FEATURES
(
WASM_DEFAULT_FEATURE
WASM_DEFAULT_FEATURE
WASM_EXPERIMENTAL_FEATURE
)
#
undef
WASM_DEFAULT_FEATURE
#
undef
WASM_EXPERIMENTAL_FEATURE
wasmSimdWormhole_
(
false
)
testWasmAwaitTier2_
(
false
)
throwOnAsmJSValidationFailure_
(
false
)
disableIon_
(
false
)
disableEvalSecurityChecks_
(
false
)
asyncStack_
(
true
)
asyncStackCaptureDebuggeeOnly_
(
false
)
sourcePragmas_
(
true
)
throwOnDebuggeeWouldRun_
(
true
)
dumpStackOnDebuggeeWouldRun_
(
false
)
strictMode_
(
false
)
#
ifdef
JS_ENABLE_SMOOSH
trackNotImplemented_
(
false
)
trySmoosh_
(
false
)
#
endif
fuzzing_
(
false
)
privateClassFields_
(
false
)
privateClassMethods_
(
false
)
#
ifdef
NIGHTLY_BUILD
arrayGrouping_
(
true
)
#
endif
#
ifdef
ENABLE_CHANGE_ARRAY_BY_COPY
changeArrayByCopy_
(
false
)
#
endif
ergonomicBrandChecks_
(
false
)
classStaticBlocks_
(
false
)
importAssertions_
(
false
)
{
}
bool
asmJS
(
)
const
{
return
asmJS_
;
}
ContextOptions
&
setAsmJS
(
bool
flag
)
{
asmJS_
=
flag
;
return
*
this
;
}
ContextOptions
&
toggleAsmJS
(
)
{
asmJS_
=
!
asmJS_
;
return
*
this
;
}
bool
wasm
(
)
const
{
return
wasm_
;
}
ContextOptions
&
setWasm
(
bool
flag
)
{
wasm_
=
flag
;
return
*
this
;
}
ContextOptions
&
toggleWasm
(
)
{
wasm_
=
!
wasm_
;
return
*
this
;
}
bool
wasmForTrustedPrinciples
(
)
const
{
return
wasmForTrustedPrinciples_
;
}
ContextOptions
&
setWasmForTrustedPrinciples
(
bool
flag
)
{
wasmForTrustedPrinciples_
=
flag
;
return
*
this
;
}
bool
wasmVerbose
(
)
const
{
return
wasmVerbose_
;
}
ContextOptions
&
setWasmVerbose
(
bool
flag
)
{
wasmVerbose_
=
flag
;
return
*
this
;
}
bool
wasmBaseline
(
)
const
{
return
wasmBaseline_
;
}
ContextOptions
&
setWasmBaseline
(
bool
flag
)
{
wasmBaseline_
=
flag
;
return
*
this
;
}
bool
wasmIon
(
)
const
{
return
wasmIon_
;
}
ContextOptions
&
setWasmIon
(
bool
flag
)
{
wasmIon_
=
flag
;
return
*
this
;
}
bool
wasmCranelift
(
)
const
{
return
wasmCranelift_
;
}
ContextOptions
&
setWasmCranelift
(
bool
flag
)
;
bool
testWasmAwaitTier2
(
)
const
{
return
testWasmAwaitTier2_
;
}
ContextOptions
&
setTestWasmAwaitTier2
(
bool
flag
)
{
testWasmAwaitTier2_
=
flag
;
return
*
this
;
}
#
define
WASM_FEATURE
(
NAME
.
.
.
)
\
bool
wasm
#
#
NAME
(
)
const
{
return
wasm
#
#
NAME
#
#
_
;
}
\
ContextOptions
&
setWasm
#
#
NAME
(
bool
flag
)
{
\
wasm
#
#
NAME
#
#
_
=
flag
;
\
return
*
this
;
\
}
JS_FOR_WASM_FEATURES
(
WASM_FEATURE
WASM_FEATURE
WASM_FEATURE
)
#
undef
WASM_FEATURE
bool
wasmSimdWormhole
(
)
const
{
return
wasmSimdWormhole_
;
}
ContextOptions
&
setWasmSimdWormhole
(
bool
flag
)
;
bool
throwOnAsmJSValidationFailure
(
)
const
{
return
throwOnAsmJSValidationFailure_
;
}
ContextOptions
&
setThrowOnAsmJSValidationFailure
(
bool
flag
)
{
throwOnAsmJSValidationFailure_
=
flag
;
return
*
this
;
}
ContextOptions
&
toggleThrowOnAsmJSValidationFailure
(
)
{
throwOnAsmJSValidationFailure_
=
!
throwOnAsmJSValidationFailure_
;
return
*
this
;
}
bool
disableIon
(
)
const
{
return
disableIon_
;
}
ContextOptions
&
setDisableIon
(
)
{
disableIon_
=
true
;
return
*
this
;
}
bool
privateClassFields
(
)
const
{
return
privateClassFields_
;
}
ContextOptions
&
setPrivateClassFields
(
bool
enabled
)
{
privateClassFields_
=
enabled
;
return
*
this
;
}
bool
privateClassMethods
(
)
const
{
return
privateClassMethods_
;
}
ContextOptions
&
setPrivateClassMethods
(
bool
enabled
)
{
privateClassMethods_
=
enabled
;
return
*
this
;
}
bool
ergonomicBrandChecks
(
)
const
{
return
ergonomicBrandChecks_
;
}
ContextOptions
&
setErgnomicBrandChecks
(
bool
enabled
)
{
ergonomicBrandChecks_
=
enabled
;
return
*
this
;
}
#
ifdef
NIGHTLY_BUILD
bool
arrayGrouping
(
)
const
{
return
arrayGrouping_
;
}
ContextOptions
&
setArrayGrouping
(
bool
enabled
)
{
arrayGrouping_
=
enabled
;
return
*
this
;
}
#
endif
#
ifdef
ENABLE_CHANGE_ARRAY_BY_COPY
bool
changeArrayByCopy
(
)
const
{
return
changeArrayByCopy_
;
}
ContextOptions
&
setChangeArrayByCopy
(
bool
enabled
)
{
changeArrayByCopy_
=
enabled
;
return
*
this
;
}
#
endif
bool
classStaticBlocks
(
)
const
{
return
classStaticBlocks_
;
}
ContextOptions
&
setClassStaticBlocks
(
bool
enabled
)
{
classStaticBlocks_
=
enabled
;
return
*
this
;
}
bool
importAssertions
(
)
const
{
return
importAssertions_
;
}
ContextOptions
&
setImportAssertions
(
bool
enabled
)
{
importAssertions_
=
enabled
;
return
*
this
;
}
bool
disableEvalSecurityChecks
(
)
const
{
return
disableEvalSecurityChecks_
;
}
ContextOptions
&
setDisableEvalSecurityChecks
(
)
{
disableEvalSecurityChecks_
=
true
;
return
*
this
;
}
bool
asyncStack
(
)
const
{
return
asyncStack_
;
}
ContextOptions
&
setAsyncStack
(
bool
flag
)
{
asyncStack_
=
flag
;
return
*
this
;
}
bool
asyncStackCaptureDebuggeeOnly
(
)
const
{
return
asyncStackCaptureDebuggeeOnly_
;
}
ContextOptions
&
setAsyncStackCaptureDebuggeeOnly
(
bool
flag
)
{
asyncStackCaptureDebuggeeOnly_
=
flag
;
return
*
this
;
}
bool
sourcePragmas
(
)
const
{
return
sourcePragmas_
;
}
ContextOptions
&
setSourcePragmas
(
bool
flag
)
{
sourcePragmas_
=
flag
;
return
*
this
;
}
bool
throwOnDebuggeeWouldRun
(
)
const
{
return
throwOnDebuggeeWouldRun_
;
}
ContextOptions
&
setThrowOnDebuggeeWouldRun
(
bool
flag
)
{
throwOnDebuggeeWouldRun_
=
flag
;
return
*
this
;
}
bool
dumpStackOnDebuggeeWouldRun
(
)
const
{
return
dumpStackOnDebuggeeWouldRun_
;
}
ContextOptions
&
setDumpStackOnDebuggeeWouldRun
(
bool
flag
)
{
dumpStackOnDebuggeeWouldRun_
=
flag
;
return
*
this
;
}
bool
strictMode
(
)
const
{
return
strictMode_
;
}
ContextOptions
&
setStrictMode
(
bool
flag
)
{
strictMode_
=
flag
;
return
*
this
;
}
ContextOptions
&
toggleStrictMode
(
)
{
strictMode_
=
!
strictMode_
;
return
*
this
;
}
#
ifdef
JS_ENABLE_SMOOSH
bool
trackNotImplemented
(
)
const
{
return
trackNotImplemented_
;
}
ContextOptions
&
setTrackNotImplemented
(
bool
flag
)
{
trackNotImplemented_
=
flag
;
return
*
this
;
}
bool
trySmoosh
(
)
const
{
return
trySmoosh_
;
}
ContextOptions
&
setTrySmoosh
(
bool
flag
)
{
trySmoosh_
=
flag
;
return
*
this
;
}
#
endif
bool
fuzzing
(
)
const
{
return
fuzzing_
;
}
ContextOptions
&
setFuzzing
(
bool
flag
)
;
void
disableOptionsForSafeMode
(
)
{
setAsmJS
(
false
)
;
setWasmBaseline
(
false
)
;
}
private
:
bool
asmJS_
:
1
;
bool
wasm_
:
1
;
bool
wasmForTrustedPrinciples_
:
1
;
bool
wasmVerbose_
:
1
;
bool
wasmBaseline_
:
1
;
bool
wasmIon_
:
1
;
bool
wasmCranelift_
:
1
;
#
define
WASM_FEATURE
(
NAME
.
.
.
)
bool
wasm
#
#
NAME
#
#
_
:
1
;
JS_FOR_WASM_FEATURES
(
WASM_FEATURE
WASM_FEATURE
WASM_FEATURE
)
#
undef
WASM_FEATURE
bool
wasmSimdWormhole_
:
1
;
bool
testWasmAwaitTier2_
:
1
;
bool
throwOnAsmJSValidationFailure_
:
1
;
bool
disableIon_
:
1
;
bool
disableEvalSecurityChecks_
:
1
;
bool
asyncStack_
:
1
;
bool
asyncStackCaptureDebuggeeOnly_
:
1
;
bool
sourcePragmas_
:
1
;
bool
throwOnDebuggeeWouldRun_
:
1
;
bool
dumpStackOnDebuggeeWouldRun_
:
1
;
bool
strictMode_
:
1
;
#
ifdef
JS_ENABLE_SMOOSH
bool
trackNotImplemented_
:
1
;
bool
trySmoosh_
:
1
;
#
endif
bool
fuzzing_
:
1
;
bool
privateClassFields_
:
1
;
bool
privateClassMethods_
:
1
;
#
ifdef
NIGHTLY_BUILD
bool
arrayGrouping_
:
1
;
#
endif
#
ifdef
ENABLE_CHANGE_ARRAY_BY_COPY
bool
changeArrayByCopy_
:
1
;
#
endif
bool
ergonomicBrandChecks_
:
1
;
bool
classStaticBlocks_
:
1
;
bool
importAssertions_
:
1
;
}
;
JS_PUBLIC_API
ContextOptions
&
ContextOptionsRef
(
JSContext
*
cx
)
;
}
#
endif
