#
ifndef
js_SavedFrameAPI_h
#
define
js_SavedFrameAPI_h
#
include
"
jstypes
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
struct
JSContext
;
class
JSObject
;
struct
JSPrincipals
;
namespace
JS
{
enum
class
SavedFrameResult
{
Ok
AccessDenied
}
;
enum
class
SavedFrameSelfHosted
{
Include
Exclude
}
;
extern
JS_PUBLIC_API
SavedFrameResult
GetSavedFrameSource
(
JSContext
*
cx
JSPrincipals
*
principals
Handle
<
JSObject
*
>
savedFrame
MutableHandle
<
JSString
*
>
sourcep
SavedFrameSelfHosted
selfHosted
=
SavedFrameSelfHosted
:
:
Include
)
;
extern
JS_PUBLIC_API
SavedFrameResult
GetSavedFrameLine
(
JSContext
*
cx
JSPrincipals
*
principals
Handle
<
JSObject
*
>
savedFrame
uint32_t
*
linep
SavedFrameSelfHosted
selfHosted
=
SavedFrameSelfHosted
:
:
Include
)
;
extern
JS_PUBLIC_API
SavedFrameResult
GetSavedFrameColumn
(
JSContext
*
cx
JSPrincipals
*
principals
Handle
<
JSObject
*
>
savedFrame
uint32_t
*
columnp
SavedFrameSelfHosted
selfHosted
=
SavedFrameSelfHosted
:
:
Include
)
;
extern
JS_PUBLIC_API
SavedFrameResult
GetSavedFrameFunctionDisplayName
(
JSContext
*
cx
JSPrincipals
*
principals
Handle
<
JSObject
*
>
savedFrame
MutableHandle
<
JSString
*
>
namep
SavedFrameSelfHosted
selfHosted
=
SavedFrameSelfHosted
:
:
Include
)
;
extern
JS_PUBLIC_API
SavedFrameResult
GetSavedFrameAsyncCause
(
JSContext
*
cx
JSPrincipals
*
principals
Handle
<
JSObject
*
>
savedFrame
MutableHandle
<
JSString
*
>
asyncCausep
SavedFrameSelfHosted
selfHosted
=
SavedFrameSelfHosted
:
:
Include
)
;
extern
JS_PUBLIC_API
SavedFrameResult
GetSavedFrameAsyncParent
(
JSContext
*
cx
JSPrincipals
*
principals
Handle
<
JSObject
*
>
savedFrame
MutableHandle
<
JSObject
*
>
asyncParentp
SavedFrameSelfHosted
selfHosted
=
SavedFrameSelfHosted
:
:
Include
)
;
extern
JS_PUBLIC_API
SavedFrameResult
GetSavedFrameParent
(
JSContext
*
cx
JSPrincipals
*
principals
Handle
<
JSObject
*
>
savedFrame
MutableHandle
<
JSObject
*
>
parentp
SavedFrameSelfHosted
selfHosted
=
SavedFrameSelfHosted
:
:
Include
)
;
}
namespace
js
{
extern
JS_FRIEND_API
JSObject
*
GetFirstSubsumedSavedFrame
(
JSContext
*
cx
JSPrincipals
*
principals
JS
:
:
Handle
<
JSObject
*
>
savedFrame
JS
:
:
SavedFrameSelfHosted
selfHosted
)
;
}
#
endif
