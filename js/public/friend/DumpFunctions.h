#
ifndef
js_friend_DumpFunctions_h
#
define
js_friend_DumpFunctions_h
#
include
"
mozilla
/
MemoryReporting
.
h
"
#
include
<
stddef
.
h
>
#
include
<
stdio
.
h
>
#
include
"
jstypes
.
h
"
#
include
"
js
/
Utility
.
h
"
class
JS_PUBLIC_API
JSAtom
;
struct
JS_PUBLIC_API
JSContext
;
class
JS_PUBLIC_API
JSObject
;
class
JS_PUBLIC_API
JSScript
;
class
JS_PUBLIC_API
JSString
;
namespace
JS
{
class
JS_PUBLIC_API
BigInt
;
class
JS_PUBLIC_API
PropertyKey
;
class
JS_PUBLIC_API
Value
;
}
namespace
js
{
class
InterpreterFrame
;
}
namespace
JS
{
extern
JS_PUBLIC_API
JS
:
:
UniqueChars
FormatStackDump
(
JSContext
*
cx
bool
showArgs
bool
showLocals
bool
showThisProps
)
;
}
namespace
js
{
extern
JS_PUBLIC_API
void
DumpString
(
JSString
*
str
FILE
*
fp
)
;
extern
JS_PUBLIC_API
void
DumpAtom
(
JSAtom
*
atom
FILE
*
fp
)
;
extern
JS_PUBLIC_API
void
DumpObject
(
JSObject
*
obj
FILE
*
fp
)
;
extern
JS_PUBLIC_API
void
DumpChars
(
const
char16_t
*
s
size_t
n
FILE
*
fp
)
;
extern
JS_PUBLIC_API
void
DumpBigInt
(
JS
:
:
BigInt
*
bi
FILE
*
fp
)
;
extern
JS_PUBLIC_API
void
DumpValue
(
const
JS
:
:
Value
&
val
FILE
*
fp
)
;
extern
JS_PUBLIC_API
void
DumpId
(
JS
:
:
PropertyKey
id
FILE
*
fp
)
;
extern
JS_PUBLIC_API
bool
DumpPC
(
JSContext
*
cx
FILE
*
fp
)
;
extern
JS_PUBLIC_API
bool
DumpScript
(
JSContext
*
cx
JSScript
*
scriptArg
FILE
*
fp
)
;
extern
JS_PUBLIC_API
void
DumpString
(
JSString
*
str
)
;
extern
JS_PUBLIC_API
void
DumpAtom
(
JSAtom
*
atom
)
;
extern
JS_PUBLIC_API
void
DumpObject
(
JSObject
*
obj
)
;
extern
JS_PUBLIC_API
void
DumpChars
(
const
char16_t
*
s
size_t
n
)
;
extern
JS_PUBLIC_API
void
DumpBigInt
(
JS
:
:
BigInt
*
bi
)
;
extern
JS_PUBLIC_API
void
DumpValue
(
const
JS
:
:
Value
&
val
)
;
extern
JS_PUBLIC_API
void
DumpId
(
JS
:
:
PropertyKey
id
)
;
extern
JS_PUBLIC_API
void
DumpInterpreterFrame
(
JSContext
*
cx
InterpreterFrame
*
start
=
nullptr
)
;
extern
JS_PUBLIC_API
bool
DumpPC
(
JSContext
*
cx
)
;
extern
JS_PUBLIC_API
bool
DumpScript
(
JSContext
*
cx
JSScript
*
scriptArg
)
;
extern
JS_PUBLIC_API
void
DumpBacktrace
(
JSContext
*
cx
FILE
*
fp
)
;
extern
JS_PUBLIC_API
void
DumpBacktrace
(
JSContext
*
cx
)
;
enum
DumpHeapNurseryBehaviour
{
CollectNurseryBeforeDump
IgnoreNurseryObjects
}
;
extern
JS_PUBLIC_API
void
DumpHeap
(
JSContext
*
cx
FILE
*
fp
DumpHeapNurseryBehaviour
nurseryBehaviour
mozilla
:
:
MallocSizeOf
mallocSizeOf
=
nullptr
)
;
}
#
endif
