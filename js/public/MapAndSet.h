#
ifndef
js_MapAndSet_h
#
define
js_MapAndSet_h
#
include
"
jspubtd
.
h
"
namespace
JS
{
extern
JS_PUBLIC_API
JSObject
*
NewMapObject
(
JSContext
*
cx
)
;
extern
JS_PUBLIC_API
uint32_t
MapSize
(
JSContext
*
cx
HandleObject
obj
)
;
extern
JS_PUBLIC_API
bool
MapGet
(
JSContext
*
cx
HandleObject
obj
HandleValue
key
MutableHandleValue
rval
)
;
extern
JS_PUBLIC_API
bool
MapHas
(
JSContext
*
cx
HandleObject
obj
HandleValue
key
bool
*
rval
)
;
extern
JS_PUBLIC_API
bool
MapSet
(
JSContext
*
cx
HandleObject
obj
HandleValue
key
HandleValue
val
)
;
#
ifdef
NIGHTLY_BUILD
extern
JS_PUBLIC_API
bool
MapGetOrInsert
(
JSContext
*
cx
HandleObject
obj
HandleValue
key
HandleValue
val
MutableHandleValue
rval
)
;
#
endif
extern
JS_PUBLIC_API
bool
MapDelete
(
JSContext
*
cx
HandleObject
obj
HandleValue
key
bool
*
rval
)
;
extern
JS_PUBLIC_API
bool
MapClear
(
JSContext
*
cx
HandleObject
obj
)
;
extern
JS_PUBLIC_API
bool
MapKeys
(
JSContext
*
cx
HandleObject
obj
MutableHandleValue
rval
)
;
extern
JS_PUBLIC_API
bool
MapValues
(
JSContext
*
cx
HandleObject
obj
MutableHandleValue
rval
)
;
extern
JS_PUBLIC_API
bool
MapEntries
(
JSContext
*
cx
HandleObject
obj
MutableHandleValue
rval
)
;
extern
JS_PUBLIC_API
bool
MapForEach
(
JSContext
*
cx
HandleObject
obj
HandleValue
callbackFn
HandleValue
thisVal
)
;
extern
JS_PUBLIC_API
JSObject
*
NewSetObject
(
JSContext
*
cx
)
;
extern
JS_PUBLIC_API
uint32_t
SetSize
(
JSContext
*
cx
HandleObject
obj
)
;
extern
JS_PUBLIC_API
bool
SetHas
(
JSContext
*
cx
HandleObject
obj
HandleValue
key
bool
*
rval
)
;
extern
JS_PUBLIC_API
bool
SetDelete
(
JSContext
*
cx
HandleObject
obj
HandleValue
key
bool
*
rval
)
;
extern
JS_PUBLIC_API
bool
SetAdd
(
JSContext
*
cx
HandleObject
obj
HandleValue
key
)
;
extern
JS_PUBLIC_API
bool
SetClear
(
JSContext
*
cx
HandleObject
obj
)
;
extern
JS_PUBLIC_API
bool
SetKeys
(
JSContext
*
cx
HandleObject
obj
MutableHandleValue
rval
)
;
extern
JS_PUBLIC_API
bool
SetValues
(
JSContext
*
cx
HandleObject
obj
MutableHandleValue
rval
)
;
extern
JS_PUBLIC_API
bool
SetEntries
(
JSContext
*
cx
HandleObject
obj
MutableHandleValue
rval
)
;
extern
JS_PUBLIC_API
bool
SetForEach
(
JSContext
*
cx
HandleObject
obj
HandleValue
callbackFn
HandleValue
thisVal
)
;
}
#
endif
