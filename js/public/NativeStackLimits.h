#
ifndef
js_public_NativeStackLimit_h
#
define
js_public_NativeStackLimit_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
utility
>
namespace
JS
{
using
NativeStackSize
=
size_t
;
using
NativeStackBase
=
uintptr_t
;
using
NativeStackLimit
=
uintptr_t
;
#
if
JS_STACK_GROWTH_DIRECTION
>
0
constexpr
NativeStackLimit
NativeStackLimitMin
=
0
;
constexpr
NativeStackLimit
NativeStackLimitMax
=
UINTPTR_MAX
;
#
else
constexpr
NativeStackLimit
NativeStackLimitMin
=
UINTPTR_MAX
;
constexpr
NativeStackLimit
NativeStackLimitMax
=
0
;
#
endif
#
ifdef
__wasi__
constexpr
NativeStackLimit
WASINativeStackLimit
=
1024
;
#
endif
inline
NativeStackLimit
GetNativeStackLimit
(
NativeStackBase
base
NativeStackSize
size
)
{
#
if
JS_STACK_GROWTH_DIRECTION
>
0
MOZ_ASSERT
(
base
<
=
size_t
(
-
1
)
-
size
)
;
return
base
+
size
-
1
;
#
else
MOZ_ASSERT
(
base
>
=
size
)
;
return
base
-
(
size
-
1
)
;
#
endif
}
}
#
endif
