#
ifndef
js_SweepingAPI_h
#
define
js_SweepingAPI_h
#
include
"
js
/
HeapAPI
.
h
"
namespace
JS
{
template
<
typename
T
>
class
WeakCache
;
namespace
shadow
{
JS_PUBLIC_API
(
void
)
RegisterWeakCache
(
JS
:
:
Zone
*
zone
JS
:
:
WeakCache
<
void
*
>
*
cachep
)
;
}
template
<
typename
T
>
class
WeakCache
:
public
js
:
:
MutableWrappedPtrOperations
<
T
WeakCache
<
T
>
>
private
mozilla
:
:
LinkedListElement
<
WeakCache
<
T
>
>
{
friend
class
mozilla
:
:
LinkedListElement
<
WeakCache
<
T
>
>
;
friend
class
mozilla
:
:
LinkedList
<
WeakCache
<
T
>
>
;
WeakCache
(
)
=
delete
;
WeakCache
(
const
WeakCache
&
)
=
delete
;
using
SweepFn
=
void
(
*
)
(
T
*
)
;
SweepFn
sweeper
;
T
cache
;
public
:
using
Type
=
T
;
template
<
typename
U
>
WeakCache
(
Zone
*
zone
U
&
&
initial
)
:
cache
(
mozilla
:
:
Forward
<
U
>
(
initial
)
)
{
sweeper
=
GCPolicy
<
T
>
:
:
sweep
;
shadow
:
:
RegisterWeakCache
(
zone
reinterpret_cast
<
WeakCache
<
void
*
>
*
>
(
this
)
)
;
}
WeakCache
(
WeakCache
&
&
other
)
:
sweeper
(
other
.
sweeper
)
cache
(
mozilla
:
:
Move
(
other
.
cache
)
)
{
}
const
T
&
get
(
)
const
{
return
cache
;
}
T
&
get
(
)
{
return
cache
;
}
void
sweep
(
)
{
sweeper
(
&
cache
)
;
}
}
;
}
#
endif
