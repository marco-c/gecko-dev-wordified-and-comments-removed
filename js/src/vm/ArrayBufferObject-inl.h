#
ifndef
vm_ArrayBufferObject_inl_h
#
define
vm_ArrayBufferObject_inl_h
#
include
"
vm
/
ArrayBufferObject
.
h
"
#
include
"
vm
/
SharedArrayObject
.
h
"
#
include
"
vm
/
SharedMem
.
h
"
namespace
js
{
inline
SharedMem
<
uint8_t
*
>
ArrayBufferObjectMaybeShared
:
:
dataPointerEither
(
)
{
if
(
this
-
>
is
<
ArrayBufferObject
>
(
)
)
{
return
this
-
>
as
<
ArrayBufferObject
>
(
)
.
dataPointerShared
(
)
;
}
return
this
-
>
as
<
SharedArrayBufferObject
>
(
)
.
dataPointerShared
(
)
;
}
inline
bool
ArrayBufferObjectMaybeShared
:
:
isDetached
(
)
const
{
if
(
this
-
>
is
<
ArrayBufferObject
>
(
)
)
{
return
this
-
>
as
<
ArrayBufferObject
>
(
)
.
isDetached
(
)
;
}
return
false
;
}
inline
bool
ArrayBufferObjectMaybeShared
:
:
isResizable
(
)
const
{
if
(
this
-
>
is
<
ArrayBufferObject
>
(
)
)
{
return
this
-
>
as
<
ArrayBufferObject
>
(
)
.
isResizable
(
)
;
}
return
this
-
>
as
<
SharedArrayBufferObject
>
(
)
.
isGrowable
(
)
;
}
inline
size_t
ArrayBufferObjectMaybeShared
:
:
byteLength
(
)
const
{
if
(
this
-
>
is
<
ArrayBufferObject
>
(
)
)
{
return
this
-
>
as
<
ArrayBufferObject
>
(
)
.
byteLength
(
)
;
}
return
this
-
>
as
<
SharedArrayBufferObject
>
(
)
.
byteLength
(
)
;
}
inline
bool
ArrayBufferObjectMaybeShared
:
:
isPreparedForAsmJS
(
)
const
{
if
(
this
-
>
is
<
ArrayBufferObject
>
(
)
)
{
return
this
-
>
as
<
ArrayBufferObject
>
(
)
.
isPreparedForAsmJS
(
)
;
}
return
false
;
}
inline
bool
ArrayBufferObjectMaybeShared
:
:
isWasm
(
)
const
{
if
(
this
-
>
is
<
ArrayBufferObject
>
(
)
)
{
return
this
-
>
as
<
ArrayBufferObject
>
(
)
.
isWasm
(
)
;
}
return
this
-
>
as
<
SharedArrayBufferObject
>
(
)
.
isWasm
(
)
;
}
inline
bool
ArrayBufferObjectMaybeShared
:
:
pinLength
(
bool
pin
)
{
if
(
is
<
ArrayBufferObject
>
(
)
)
{
return
as
<
ArrayBufferObject
>
(
)
.
pinLength
(
pin
)
;
}
return
false
;
}
}
#
endif
