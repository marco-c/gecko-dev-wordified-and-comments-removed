#
ifndef
vm_PropertyKey_h
#
define
vm_PropertyKey_h
#
include
"
mozilla
/
HashFunctions
.
h
"
#
include
"
js
/
HashTable
.
h
"
#
include
"
js
/
Id
.
h
"
#
include
"
vm
/
StringType
.
h
"
#
include
"
vm
/
SymbolType
.
h
"
namespace
js
{
static
MOZ_ALWAYS_INLINE
js
:
:
HashNumber
HashId
(
jsid
id
)
{
if
(
MOZ_LIKELY
(
JSID_IS_ATOM
(
id
)
)
)
{
return
id
.
toAtom
(
)
-
>
hash
(
)
;
}
if
(
JSID_IS_SYMBOL
(
id
)
)
{
return
JSID_TO_SYMBOL
(
id
)
-
>
hash
(
)
;
}
return
mozilla
:
:
HashGeneric
(
JSID_BITS
(
id
)
)
;
}
}
namespace
mozilla
{
template
<
>
struct
DefaultHasher
<
jsid
>
{
using
Lookup
=
jsid
;
static
HashNumber
hash
(
jsid
id
)
{
return
js
:
:
HashId
(
id
)
;
}
static
bool
match
(
jsid
id1
jsid
id2
)
{
return
id1
=
=
id2
;
}
}
;
}
#
endif
