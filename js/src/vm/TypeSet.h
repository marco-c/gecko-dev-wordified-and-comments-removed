#
ifndef
vm_TypeSet_h
#
define
vm_TypeSet_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Likely
.
h
"
#
include
<
initializer_list
>
#
include
<
stdint
.
h
>
#
include
<
stdio
.
h
>
#
include
"
jstypes
.
h
"
#
include
"
jit
/
IonTypes
.
h
"
#
include
"
jit
/
JitOptions
.
h
"
#
include
"
js
/
GCAnnotations
.
h
"
#
include
"
js
/
Id
.
h
"
#
include
"
js
/
ScalarType
.
h
"
#
include
"
js
/
TracingAPI
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
js
/
Utility
.
h
"
#
include
"
js
/
Value
.
h
"
#
include
"
js
/
Vector
.
h
"
#
include
"
util
/
DiagnosticAssertions
.
h
"
#
include
"
vm
/
TaggedProto
.
h
"
struct
JS_PUBLIC_API
JSContext
;
class
JS_PUBLIC_API
JSObject
;
namespace
JS
{
class
JS_PUBLIC_API
Compartment
;
class
JS_PUBLIC_API
Realm
;
class
JS_PUBLIC_API
Zone
;
}
namespace
js
{
namespace
jit
{
class
IonScript
;
class
TempAllocator
;
}
class
AutoClearTypeInferenceStateOnOOM
;
class
AutoSweepBase
;
class
AutoSweepObjectGroup
;
class
LifoAlloc
;
class
ObjectGroup
;
class
SystemAllocPolicy
;
class
TypeZone
;
enum
:
uint32_t
{
OBJECT_FLAG_FROM_ALLOCATION_SITE
=
0x1
OBJECT_FLAG_SINGLETON
=
0x2
OBJECT_FLAG_LAZY_SINGLETON
=
0x4
OBJECT_FLAG_SPARSE_INDEXES
=
0x00010000
OBJECT_FLAG_NON_PACKED
=
0x00020000
OBJECT_FLAG_LENGTH_OVERFLOW
=
0x00040000
OBJECT_FLAG_ITERATED
=
0x00080000
OBJECT_FLAG_NON_EXTENSIBLE_ELEMENTS
=
0x00100000
OBJECT_FLAG_PRE_TENURE
=
0x00800000
OBJECT_FLAG_COPY_ON_WRITE
=
0x01000000
OBJECT_FLAG_UNKNOWN_PROPERTIES
=
0x04000000
OBJECT_FLAG_DYNAMIC_MASK
=
0x07ff0000
OBJECT_FLAG_ADDENDUM_MASK
=
0x38000000
OBJECT_FLAG_ADDENDUM_SHIFT
=
27
OBJECT_FLAG_GENERATION_MASK
=
0x40000000
OBJECT_FLAG_GENERATION_SHIFT
=
30
}
;
using
ObjectGroupFlags
=
uint32_t
;
enum
class
DOMObjectKind
:
uint8_t
{
Proxy
Native
Unknown
}
;
}
#
endif
