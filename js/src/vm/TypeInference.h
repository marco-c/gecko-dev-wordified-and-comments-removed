#
ifndef
vm_TypeInference_h
#
define
vm_TypeInference_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
MemoryReporting
.
h
"
#
include
"
jsfriendapi
.
h
"
#
include
"
jstypes
.
h
"
#
include
"
ds
/
LifoAlloc
.
h
"
#
include
"
gc
/
Barrier
.
h
"
#
include
"
jit
/
IonTypes
.
h
"
#
include
"
js
/
AllocPolicy
.
h
"
#
include
"
js
/
HeapAPI
.
h
"
#
include
"
js
/
Utility
.
h
"
#
include
"
js
/
Vector
.
h
"
#
include
"
threading
/
ProtectedData
.
h
"
#
include
"
util
/
DiagnosticAssertions
.
h
"
#
include
"
vm
/
Shape
.
h
"
namespace
js
{
class
TypeZone
;
class
PlainObject
;
namespace
jit
{
class
IonScript
;
class
JitScript
;
class
TempAllocator
;
}
class
TypeZone
{
ZoneData
<
mozilla
:
:
Maybe
<
IonCompilationId
>
>
currentCompilationId_
;
TypeZone
(
const
TypeZone
&
)
=
delete
;
void
operator
=
(
const
TypeZone
&
)
=
delete
;
public
:
ZoneData
<
bool
>
keepJitScripts
;
explicit
TypeZone
(
JS
:
:
Zone
*
zone
)
;
~
TypeZone
(
)
;
mozilla
:
:
Maybe
<
IonCompilationId
>
currentCompilationId
(
)
const
{
return
currentCompilationId_
.
ref
(
)
;
}
mozilla
:
:
Maybe
<
IonCompilationId
>
&
currentCompilationIdRef
(
)
{
return
currentCompilationId_
.
ref
(
)
;
}
}
;
}
#
endif
