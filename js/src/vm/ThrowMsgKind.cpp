#
include
"
vm
/
ThrowMsgKind
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
js
/
friend
/
ErrorMessages
.
h
"
JSErrNum
js
:
:
ThrowMsgKindToErrNum
(
ThrowMsgKind
kind
)
{
switch
(
kind
)
{
case
ThrowMsgKind
:
:
AssignToCall
:
return
JSMSG_ASSIGN_TO_CALL
;
case
ThrowMsgKind
:
:
IteratorNoThrow
:
return
JSMSG_ITERATOR_NO_THROW
;
case
ThrowMsgKind
:
:
CantDeleteSuper
:
return
JSMSG_CANT_DELETE_SUPER
;
case
ThrowMsgKind
:
:
PrivateDoubleInit
:
return
JSMSG_PRIVATE_FIELD_DOUBLE
;
case
ThrowMsgKind
:
:
PrivateBrandDoubleInit
:
return
JSMSG_PRIVATE_BRAND_DOUBLE
;
case
ThrowMsgKind
:
:
MissingPrivateOnGet
:
return
JSMSG_GET_MISSING_PRIVATE
;
case
ThrowMsgKind
:
:
MissingPrivateOnSet
:
return
JSMSG_SET_MISSING_PRIVATE
;
case
ThrowMsgKind
:
:
AssignToPrivateMethod
:
return
JSMSG_ASSIGN_TO_PRIVATE_METHOD
;
case
ThrowMsgKind
:
:
DecoratorInvalidReturnType
:
return
JSMSG_DECORATOR_INVALID_RETURN_TYPE
;
#
ifdef
ENABLE_EXPLICIT_RESOURCE_MANAGEMENT
case
ThrowMsgKind
:
:
UsingWithoutDispose
:
return
JSMSG_NO_DISPOSE_IN_USING
;
#
endif
}
MOZ_CRASH
(
"
Unexpected
message
kind
"
)
;
}
