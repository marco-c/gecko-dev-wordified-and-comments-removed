#
ifndef
vm_AsyncFunction_h
#
define
vm_AsyncFunction_h
#
include
"
vm
/
JSContext
.
h
"
#
include
"
vm
/
JSObject
.
h
"
namespace
js
{
class
GeneratorObject
;
JSFunction
*
GetWrappedAsyncFunction
(
JSFunction
*
unwrapped
)
;
JSFunction
*
GetUnwrappedAsyncFunction
(
JSFunction
*
wrapped
)
;
bool
IsWrappedAsyncFunction
(
JSFunction
*
fun
)
;
JSObject
*
WrapAsyncFunctionWithProto
(
JSContext
*
cx
HandleFunction
unwrapped
HandleObject
proto
)
;
JSObject
*
WrapAsyncFunction
(
JSContext
*
cx
HandleFunction
unwrapped
)
;
MOZ_MUST_USE
bool
AsyncFunctionAwaitedFulfilled
(
JSContext
*
cx
Handle
<
PromiseObject
*
>
resultPromise
Handle
<
GeneratorObject
*
>
generator
HandleValue
value
)
;
MOZ_MUST_USE
bool
AsyncFunctionAwaitedRejected
(
JSContext
*
cx
Handle
<
PromiseObject
*
>
resultPromise
Handle
<
GeneratorObject
*
>
generator
HandleValue
reason
)
;
}
#
endif
