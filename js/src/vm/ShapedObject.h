#
ifndef
vm_ShapedObject_h
#
define
vm_ShapedObject_h
#
include
"
jsobj
.
h
"
namespace
js
{
class
ShapedObject
:
public
JSObject
{
protected
:
GCPtrShape
shape_
;
MOZ_ALWAYS_INLINE
const
GCPtrShape
&
shapeRef
(
)
const
{
return
shape_
;
}
MOZ_ALWAYS_INLINE
GCPtrShape
&
shapeRef
(
)
{
return
shape_
;
}
MOZ_ALWAYS_INLINE
GCPtrShape
*
shapePtr
(
)
{
return
&
shape_
;
}
public
:
void
initShape
(
Shape
*
shape
)
{
shapeRef
(
)
.
init
(
shape
)
;
}
void
setShape
(
Shape
*
shape
)
{
shapeRef
(
)
=
shape
;
}
Shape
*
shape
(
)
const
{
return
shapeRef
(
)
;
}
void
traceShape
(
JSTracer
*
trc
)
{
TraceEdge
(
trc
shapePtr
(
)
"
shape
"
)
;
}
static
size_t
offsetOfShape
(
)
{
return
offsetof
(
ShapedObject
shape_
)
;
}
private
:
static
void
staticAsserts
(
)
{
static_assert
(
offsetof
(
ShapedObject
shape_
)
=
=
offsetof
(
shadow
:
:
Object
shape
)
"
shadow
shape
must
match
actual
shape
"
)
;
}
}
;
}
#
endif
