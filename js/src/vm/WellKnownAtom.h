#
ifndef
vm_WellKnownAtom_h
#
define
vm_WellKnownAtom_h
#
include
"
mozilla
/
HashFunctions
.
h
"
#
include
<
stdint
.
h
>
#
include
"
js
/
ProtoKey
.
h
"
#
include
"
js
/
Symbol
.
h
"
#
include
"
vm
/
CommonPropertyNames
.
h
"
namespace
js
{
enum
class
WellKnownAtomId
:
uint32_t
{
#
define
ENUM_ENTRY_
(
NAME
_
)
NAME
FOR_EACH_COMMON_PROPERTYNAME
(
ENUM_ENTRY_
)
#
undef
ENUM_ENTRY_
#
define
ENUM_ENTRY_
(
NAME
_
)
NAME
JS_FOR_EACH_PROTOTYPE
(
ENUM_ENTRY_
)
#
undef
ENUM_ENTRY_
#
define
ENUM_ENTRY_
(
NAME
)
NAME
JS_FOR_EACH_WELL_KNOWN_SYMBOL
(
ENUM_ENTRY_
)
#
undef
ENUM_ENTRY_
Limit
}
;
struct
WellKnownAtomInfo
{
uint32_t
length
;
mozilla
:
:
HashNumber
hash
;
const
char
*
content
;
}
;
extern
WellKnownAtomInfo
wellKnownAtomInfos
[
]
;
inline
const
WellKnownAtomInfo
&
GetWellKnownAtomInfo
(
WellKnownAtomId
atomId
)
{
return
wellKnownAtomInfos
[
uint32_t
(
atomId
)
]
;
}
}
#
endif
