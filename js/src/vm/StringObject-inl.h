#
ifndef
vm_StringObject_inl_h
#
define
vm_StringObject_inl_h
#
include
"
vm
/
StringObject
.
h
"
#
include
"
jsobjinlines
.
h
"
#
include
"
vm
/
Shape
-
inl
.
h
"
namespace
js
{
inline
bool
StringObject
:
:
init
(
JSContext
*
cx
Handle
<
StringObject
*
>
obj
HandleString
str
)
{
MOZ_ASSERT
(
obj
-
>
numFixedSlots
(
)
=
=
2
)
;
if
(
!
EmptyShape
:
:
ensureInitialCustomShape
<
StringObject
>
(
cx
obj
)
)
return
false
;
MOZ_ASSERT
(
obj
-
>
lookup
(
cx
NameToId
(
cx
-
>
names
(
)
.
length
)
)
-
>
slot
(
)
=
=
LENGTH_SLOT
)
;
obj
-
>
setStringThis
(
str
)
;
return
true
;
}
inline
StringObject
*
StringObject
:
:
create
(
JSContext
*
cx
HandleString
str
HandleObject
proto
NewObjectKind
newKind
)
{
JSObject
*
obj
=
NewObjectWithClassProto
(
cx
&
class_
proto
newKind
)
;
if
(
!
obj
)
return
nullptr
;
Rooted
<
StringObject
*
>
strobj
(
cx
&
obj
-
>
as
<
StringObject
>
(
)
)
;
if
(
!
StringObject
:
:
init
(
cx
strobj
str
)
)
return
nullptr
;
return
strobj
;
}
}
#
endif
