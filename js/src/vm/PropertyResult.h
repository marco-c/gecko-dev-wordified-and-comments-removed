#
ifndef
vm_PropertyResult_h
#
define
vm_PropertyResult_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
vm
/
PropertyInfo
.
h
"
namespace
js
{
class
PropertyResult
{
enum
class
Kind
:
uint8_t
{
NotFound
NativeProperty
NonNativeProperty
DenseElement
TypedArrayElement
}
;
union
{
PropertyInfo
propInfo_
;
uint32_t
denseIndex_
;
size_t
typedArrayIndex_
;
}
;
Kind
kind_
=
Kind
:
:
NotFound
;
bool
ignoreProtoChain_
=
false
;
public
:
PropertyResult
(
)
{
}
bool
isNotFound
(
)
const
{
return
kind_
=
=
Kind
:
:
NotFound
;
}
bool
shouldIgnoreProtoChain
(
)
const
{
MOZ_ASSERT
(
isNotFound
(
)
)
;
return
ignoreProtoChain_
;
}
bool
isFound
(
)
const
{
return
kind_
!
=
Kind
:
:
NotFound
;
}
bool
isNonNativeProperty
(
)
const
{
return
kind_
=
=
Kind
:
:
NonNativeProperty
;
}
bool
isDenseElement
(
)
const
{
return
kind_
=
=
Kind
:
:
DenseElement
;
}
bool
isTypedArrayElement
(
)
const
{
return
kind_
=
=
Kind
:
:
TypedArrayElement
;
}
bool
isNativeProperty
(
)
const
{
return
kind_
=
=
Kind
:
:
NativeProperty
;
}
PropertyInfo
propertyInfo
(
)
const
{
MOZ_ASSERT
(
isNativeProperty
(
)
)
;
return
propInfo_
;
}
uint32_t
denseElementIndex
(
)
const
{
MOZ_ASSERT
(
isDenseElement
(
)
)
;
return
denseIndex_
;
}
size_t
typedArrayElementIndex
(
)
const
{
MOZ_ASSERT
(
isTypedArrayElement
(
)
)
;
return
typedArrayIndex_
;
}
void
setNotFound
(
)
{
kind_
=
Kind
:
:
NotFound
;
}
void
setNativeProperty
(
PropertyInfo
prop
)
{
kind_
=
Kind
:
:
NativeProperty
;
propInfo_
=
prop
;
}
void
setWasmGcProperty
(
)
{
kind_
=
Kind
:
:
NonNativeProperty
;
}
void
setProxyProperty
(
)
{
kind_
=
Kind
:
:
NonNativeProperty
;
}
void
setDenseElement
(
uint32_t
index
)
{
kind_
=
Kind
:
:
DenseElement
;
denseIndex_
=
index
;
}
void
setTypedArrayElement
(
size_t
index
)
{
kind_
=
Kind
:
:
TypedArrayElement
;
typedArrayIndex_
=
index
;
}
void
setTypedArrayOutOfRange
(
)
{
kind_
=
Kind
:
:
NotFound
;
ignoreProtoChain_
=
true
;
}
void
setRecursiveResolve
(
)
{
kind_
=
Kind
:
:
NotFound
;
ignoreProtoChain_
=
true
;
}
}
;
}
#
endif
