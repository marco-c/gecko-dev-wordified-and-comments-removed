#
ifndef
vm_SharedScriptDataTableHolder_h
#
define
vm_SharedScriptDataTableHolder_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
threading
/
Mutex
.
h
"
#
include
"
vm
/
SharedStencil
.
h
"
namespace
js
{
class
AutoLockGlobalScriptData
{
static
js
:
:
Mutex
mutex_
;
public
:
AutoLockGlobalScriptData
(
)
;
~
AutoLockGlobalScriptData
(
)
;
}
;
class
SharedScriptDataTableHolder
{
bool
needsLock_
=
true
;
js
:
:
SharedImmutableScriptDataTable
scriptDataTable_
;
public
:
enum
class
NeedsLock
{
No
Yes
}
;
explicit
SharedScriptDataTableHolder
(
NeedsLock
needsLock
=
NeedsLock
:
:
Yes
)
:
needsLock_
(
needsLock
=
=
NeedsLock
:
:
Yes
)
{
}
js
:
:
SharedImmutableScriptDataTable
&
get
(
const
js
:
:
AutoLockGlobalScriptData
&
lock
)
{
MOZ_ASSERT
(
needsLock_
)
;
return
scriptDataTable_
;
}
js
:
:
SharedImmutableScriptDataTable
&
getWithoutLock
(
)
{
MOZ_ASSERT
(
!
needsLock_
)
;
return
scriptDataTable_
;
}
js
:
:
SharedImmutableScriptDataTable
&
getMaybeLocked
(
mozilla
:
:
Maybe
<
js
:
:
AutoLockGlobalScriptData
>
&
lock
)
{
if
(
needsLock_
)
{
lock
.
emplace
(
)
;
}
return
scriptDataTable_
;
}
}
;
extern
SharedScriptDataTableHolder
globalSharedScriptDataTableHolder
;
}
#
endif
