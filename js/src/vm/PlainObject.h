#
ifndef
vm_PlainObject_h
#
define
vm_PlainObject_h
#
include
"
gc
/
AllocKind
.
h
"
#
include
"
js
/
Class
.
h
"
#
include
"
js
/
Result
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
vm
/
NativeObject
.
h
"
struct
JS_PUBLIC_API
JSContext
;
namespace
js
{
class
PlainObject
:
public
NativeObject
{
public
:
static
const
JSClass
class_
;
static
inline
JS
:
:
Result
<
PlainObject
*
JS
:
:
OOM
&
>
createWithTemplate
(
JSContext
*
cx
JS
:
:
Handle
<
PlainObject
*
>
templateObject
)
;
inline
gc
:
:
AllocKind
allocKindForTenure
(
)
const
;
}
;
extern
bool
CopyDataPropertiesNative
(
JSContext
*
cx
JS
:
:
Handle
<
PlainObject
*
>
target
JS
:
:
Handle
<
NativeObject
*
>
from
JS
:
:
Handle
<
PlainObject
*
>
excludedItems
bool
*
optimized
)
;
}
#
endif
