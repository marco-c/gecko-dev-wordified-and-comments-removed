#
ifndef
vm_Probes_inl_h
#
define
vm_Probes_inl_h
#
include
"
vm
/
Probes
.
h
"
#
include
"
jscntxt
.
h
"
#
include
"
gc
/
Zone
.
h
"
namespace
js
{
inline
bool
probes
:
:
CallTrackingActive
(
JSContext
*
cx
)
{
#
ifdef
INCLUDE_MOZILLA_DTRACE
if
(
JAVASCRIPT_FUNCTION_ENTRY_ENABLED
(
)
|
|
JAVASCRIPT_FUNCTION_RETURN_ENABLED
(
)
)
return
true
;
#
endif
return
false
;
}
inline
bool
probes
:
:
EnterScript
(
JSContext
*
cx
JSScript
*
script
JSFunction
*
maybeFun
InterpreterFrame
*
fp
)
{
#
ifdef
INCLUDE_MOZILLA_DTRACE
if
(
JAVASCRIPT_FUNCTION_ENTRY_ENABLED
(
)
)
DTraceEnterJSFun
(
cx
maybeFun
script
)
;
#
endif
JSRuntime
*
rt
=
cx
-
>
runtime
(
)
;
if
(
rt
-
>
geckoProfiler
(
)
.
enabled
(
)
)
{
if
(
!
rt
-
>
geckoProfiler
(
)
.
enter
(
cx
script
maybeFun
)
)
return
false
;
MOZ_ASSERT_IF
(
!
fp
-
>
script
(
)
-
>
isStarGenerator
(
)
&
&
!
fp
-
>
script
(
)
-
>
isLegacyGenerator
(
)
&
&
!
fp
-
>
script
(
)
-
>
isAsync
(
)
!
fp
-
>
hasPushedGeckoProfilerFrame
(
)
)
;
fp
-
>
setPushedGeckoProfilerFrame
(
)
;
}
return
true
;
}
inline
void
probes
:
:
ExitScript
(
JSContext
*
cx
JSScript
*
script
JSFunction
*
maybeFun
bool
popProfilerFrame
)
{
#
ifdef
INCLUDE_MOZILLA_DTRACE
if
(
JAVASCRIPT_FUNCTION_RETURN_ENABLED
(
)
)
DTraceExitJSFun
(
cx
maybeFun
script
)
;
#
endif
if
(
popProfilerFrame
)
cx
-
>
runtime
(
)
-
>
geckoProfiler
(
)
.
exit
(
script
maybeFun
)
;
}
inline
bool
probes
:
:
StartExecution
(
JSScript
*
script
)
{
bool
ok
=
true
;
#
ifdef
INCLUDE_MOZILLA_DTRACE
if
(
JAVASCRIPT_EXECUTE_START_ENABLED
(
)
)
JAVASCRIPT_EXECUTE_START
(
(
script
-
>
filename
(
)
?
(
char
*
)
script
-
>
filename
(
)
:
nullName
)
script
-
>
lineno
(
)
)
;
#
endif
return
ok
;
}
inline
bool
probes
:
:
StopExecution
(
JSScript
*
script
)
{
bool
ok
=
true
;
#
ifdef
INCLUDE_MOZILLA_DTRACE
if
(
JAVASCRIPT_EXECUTE_DONE_ENABLED
(
)
)
JAVASCRIPT_EXECUTE_DONE
(
(
script
-
>
filename
(
)
?
(
char
*
)
script
-
>
filename
(
)
:
nullName
)
script
-
>
lineno
(
)
)
;
#
endif
return
ok
;
}
}
#
endif
