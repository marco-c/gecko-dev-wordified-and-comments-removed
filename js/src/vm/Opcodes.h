#
ifndef
vm_Opcodes_h
#
define
vm_Opcodes_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
<
stddef
.
h
>
#
define
FOR_EACH_OPCODE
(
MACRO
)
\
MACRO
(
JSOP_UNDEFINED
js_undefined_str
"
"
1
0
1
JOF_BYTE
)
\
/
*
*
Push
null
.
*
*
Category
:
Literals
*
Type
:
Constants
*
Operands
:
*
Stack
:
=
>
null
*
/
\
MACRO
(
JSOP_NULL
js_null_str
js_null_str
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_FALSE
js_false_str
js_false_str
1
0
1
JOF_BYTE
)
\
MACRO
(
JSOP_TRUE
js_true_str
js_true_str
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_INT32
"
int32
"
NULL
5
0
1
JOF_INT32
)
\
\
MACRO
(
JSOP_ZERO
"
zero
"
"
0
"
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_ONE
"
one
"
"
1
"
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_INT8
"
int8
"
NULL
2
0
1
JOF_INT8
)
\
\
MACRO
(
JSOP_UINT16
"
uint16
"
NULL
3
0
1
JOF_UINT16
)
\
\
MACRO
(
JSOP_UINT24
"
uint24
"
NULL
4
0
1
JOF_UINT24
)
\
\
MACRO
(
JSOP_DOUBLE
"
double
"
NULL
9
0
1
JOF_DOUBLE
)
\
\
MACRO
(
JSOP_BIGINT
"
bigint
"
NULL
5
0
1
JOF_BIGINT
)
\
\
MACRO
(
JSOP_STRING
"
string
"
NULL
5
0
1
JOF_ATOM
)
\
\
MACRO
(
JSOP_SYMBOL
"
symbol
"
NULL
2
0
1
JOF_UINT8
)
\
\
MACRO
(
JSOP_VOID
js_void_str
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_TYPEOF
js_typeof_str
NULL
1
1
1
JOF_BYTE
|
JOF_DETECTING
|
JOF_IC
)
\
MACRO
(
JSOP_TYPEOFEXPR
"
typeofexpr
"
NULL
1
1
1
JOF_BYTE
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_POS
"
pos
"
"
+
"
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_NEG
"
neg
"
"
-
"
1
1
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_BITNOT
"
bitnot
"
"
~
"
1
1
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_NOT
"
not
"
"
!
"
1
1
1
JOF_BYTE
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_BITOR
"
bitor
"
"
|
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_BITXOR
"
bitxor
"
"
^
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_BITAND
"
bitand
"
"
&
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_EQ
"
eq
"
"
=
=
"
1
2
1
JOF_BYTE
|
JOF_DETECTING
|
JOF_IC
)
\
MACRO
(
JSOP_NE
"
ne
"
"
!
=
"
1
2
1
JOF_BYTE
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_STRICTEQ
"
stricteq
"
"
=
=
=
"
1
2
1
JOF_BYTE
|
JOF_DETECTING
|
JOF_IC
)
\
MACRO
(
JSOP_STRICTNE
"
strictne
"
"
!
=
=
"
1
2
1
JOF_BYTE
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_LT
"
lt
"
"
<
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_GT
"
gt
"
"
>
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_LE
"
le
"
"
<
=
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_GE
"
ge
"
"
>
=
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_INSTANCEOF
js_instanceof_str
js_instanceof_str
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_IN
js_in_str
js_in_str
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_LSH
"
lsh
"
"
<
<
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_RSH
"
rsh
"
"
>
>
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_URSH
"
ursh
"
"
>
>
>
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_ADD
"
add
"
"
+
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_SUB
"
sub
"
"
-
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_INC
"
inc
"
NULL
1
1
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_DEC
"
dec
"
NULL
1
1
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_MUL
"
mul
"
"
*
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_DIV
"
div
"
"
/
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
MACRO
(
JSOP_MOD
"
mod
"
"
%
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_POW
"
pow
"
"
*
*
"
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_TOID
"
toid
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_TONUMERIC
"
tonumeric
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_TOSTRING
"
tostring
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_GLOBALTHIS
"
globalthis
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_NEWTARGET
"
newtarget
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_DYNAMIC_IMPORT
"
dynamic
-
import
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_IMPORTMETA
"
importmeta
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_NEWINIT
"
newinit
"
NULL
5
0
1
JOF_UINT32
|
JOF_IC
)
\
\
MACRO
(
JSOP_NEWOBJECT
"
newobject
"
NULL
5
0
1
JOF_OBJECT
|
JOF_IC
)
\
\
MACRO
(
JSOP_NEWOBJECT_WITHGROUP
"
newobjectwithgroup
"
NULL
5
0
1
JOF_OBJECT
|
JOF_IC
)
\
\
MACRO
(
JSOP_OBJECT
"
object
"
NULL
5
0
1
JOF_OBJECT
)
\
\
MACRO
(
JSOP_OBJWITHPROTO
"
objwithproto
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_INITPROP
"
initprop
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPINIT
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_INITHIDDENPROP
"
inithiddenprop
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPINIT
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_INITLOCKEDPROP
"
initlockedprop
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPINIT
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_INITELEM
"
initelem
"
NULL
1
3
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPINIT
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_INITHIDDENELEM
"
inithiddenelem
"
NULL
1
3
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPINIT
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_INITPROP_GETTER
"
initprop_getter
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPINIT
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_INITHIDDENPROP_GETTER
"
inithiddenprop_getter
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPINIT
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_INITELEM_GETTER
"
initelem_getter
"
NULL
1
3
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPINIT
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_INITHIDDENELEM_GETTER
"
inithiddenelem_getter
"
NULL
1
3
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPINIT
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_INITPROP_SETTER
"
initprop_setter
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPINIT
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_INITHIDDENPROP_SETTER
"
inithiddenprop_setter
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPINIT
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_INITELEM_SETTER
"
initelem_setter
"
NULL
1
3
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPINIT
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_INITHIDDENELEM_SETTER
"
inithiddenelem_setter
"
NULL
1
3
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPINIT
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_GETPROP
"
getprop
"
NULL
5
1
1
JOF_ATOM
|
JOF_PROP
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_CALLPROP
"
callprop
"
NULL
5
1
1
JOF_ATOM
|
JOF_PROP
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_GETELEM
"
getelem
"
NULL
1
2
1
JOF_BYTE
|
JOF_ELEM
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_CALLELEM
"
callelem
"
NULL
1
2
1
JOF_BYTE
|
JOF_ELEM
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_LENGTH
"
length
"
NULL
5
1
1
JOF_ATOM
|
JOF_PROP
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_SETPROP
"
setprop
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSLOPPY
|
JOF_IC
)
\
\
MACRO
(
JSOP_STRICTSETPROP
"
strict
-
setprop
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSTRICT
|
JOF_IC
)
\
\
MACRO
(
JSOP_SETELEM
"
setelem
"
NULL
1
3
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSLOPPY
|
JOF_IC
)
\
\
MACRO
(
JSOP_STRICTSETELEM
"
strict
-
setelem
"
NULL
1
3
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSTRICT
|
JOF_IC
)
\
\
MACRO
(
JSOP_DELPROP
"
delprop
"
NULL
5
1
1
JOF_ATOM
|
JOF_PROP
|
JOF_CHECKSLOPPY
)
\
\
MACRO
(
JSOP_STRICTDELPROP
"
strict
-
delprop
"
NULL
5
1
1
JOF_ATOM
|
JOF_PROP
|
JOF_CHECKSTRICT
)
\
\
MACRO
(
JSOP_DELELEM
"
delelem
"
NULL
1
2
1
JOF_BYTE
|
JOF_ELEM
|
JOF_CHECKSLOPPY
)
\
\
MACRO
(
JSOP_STRICTDELELEM
"
strict
-
delelem
"
NULL
1
2
1
JOF_BYTE
|
JOF_ELEM
|
JOF_CHECKSTRICT
)
\
\
MACRO
(
JSOP_HASOWN
"
hasown
"
NULL
1
2
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_SUPERBASE
"
superbase
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_GETPROP_SUPER
"
getprop
-
super
"
NULL
5
2
1
JOF_ATOM
|
JOF_PROP
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_GETELEM_SUPER
"
getelem
-
super
"
NULL
1
3
1
JOF_BYTE
|
JOF_ELEM
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_SETPROP_SUPER
"
setprop
-
super
"
NULL
5
3
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSLOPPY
)
\
\
MACRO
(
JSOP_STRICTSETPROP_SUPER
"
strictsetprop
-
super
"
NULL
5
3
1
JOF_ATOM
|
JOF_PROP
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSTRICT
)
\
\
MACRO
(
JSOP_SETELEM_SUPER
"
setelem
-
super
"
NULL
1
4
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSLOPPY
)
\
\
MACRO
(
JSOP_STRICTSETELEM_SUPER
"
strict
-
setelem
-
super
"
NULL
1
4
1
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSTRICT
)
\
\
MACRO
(
JSOP_ITER
"
iter
"
NULL
1
1
1
JOF_BYTE
|
JOF_IC
)
\
\
MACRO
(
JSOP_MOREITER
"
moreiter
"
NULL
1
1
2
JOF_BYTE
)
\
\
MACRO
(
JSOP_ISNOITER
"
isnoiter
"
NULL
1
1
2
JOF_BYTE
)
\
\
MACRO
(
JSOP_ITERNEXT
"
iternext
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_ENDITER
"
enditer
"
NULL
1
2
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_CHECKISOBJ
"
checkisobj
"
NULL
2
1
1
JOF_UINT8
)
\
\
MACRO
(
JSOP_CHECKISCALLABLE
"
checkiscallable
"
NULL
2
1
1
JOF_UINT8
)
\
\
MACRO
(
JSOP_CHECKOBJCOERCIBLE
"
checkobjcoercible
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_TOASYNCITER
"
toasynciter
"
NULL
1
2
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_MUTATEPROTO
"
mutateproto
"
NULL
1
2
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_NEWARRAY
"
newarray
"
NULL
5
0
1
JOF_UINT32
|
JOF_IC
)
\
\
MACRO
(
JSOP_INITELEM_ARRAY
"
initelem_array
"
NULL
5
2
1
JOF_UINT32
|
JOF_ELEM
|
JOF_PROPINIT
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_INITELEM_INC
"
initelem_inc
"
NULL
1
3
2
JOF_BYTE
|
JOF_ELEM
|
JOF_PROPINIT
|
JOF_IC
)
\
\
MACRO
(
JSOP_HOLE
"
hole
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_NEWARRAY_COPYONWRITE
"
newarray_copyonwrite
"
NULL
5
0
1
JOF_OBJECT
)
\
\
MACRO
(
JSOP_REGEXP
"
regexp
"
NULL
5
0
1
JOF_REGEXP
)
\
\
MACRO
(
JSOP_LAMBDA
"
lambda
"
NULL
5
0
1
JOF_OBJECT
)
\
\
MACRO
(
JSOP_LAMBDA_ARROW
"
lambda_arrow
"
NULL
5
1
1
JOF_OBJECT
)
\
\
MACRO
(
JSOP_SETFUNNAME
"
setfunname
"
NULL
2
2
1
JOF_UINT8
)
\
\
MACRO
(
JSOP_INITHOMEOBJECT
"
inithomeobject
"
NULL
1
2
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_CHECKCLASSHERITAGE
"
checkclassheritage
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_FUNWITHPROTO
"
funwithproto
"
NULL
5
1
1
JOF_OBJECT
)
\
\
MACRO
(
JSOP_CLASSCONSTRUCTOR
"
classconstructor
"
NULL
13
0
1
JOF_CLASS_CTOR
)
\
\
MACRO
(
JSOP_DERIVEDCONSTRUCTOR
"
derivedconstructor
"
NULL
13
1
1
JOF_CLASS_CTOR
)
\
\
MACRO
(
JSOP_BUILTINPROTO
"
builtinproto
"
NULL
2
0
1
JOF_UINT8
)
\
\
MACRO
(
JSOP_CALL
"
call
"
NULL
3
-
1
1
JOF_ARGC
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_CALLITER
"
calliter
"
NULL
3
-
1
1
JOF_ARGC
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_FUNAPPLY
"
funapply
"
NULL
3
-
1
1
JOF_ARGC
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_FUNCALL
"
funcall
"
NULL
3
-
1
1
JOF_ARGC
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_CALL_IGNORES_RV
"
call
-
ignores
-
rv
"
NULL
3
-
1
1
JOF_ARGC
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_SPREADCALL
"
spreadcall
"
NULL
1
3
1
JOF_BYTE
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_OPTIMIZE_SPREADCALL
"
optimize
-
spreadcall
"
NULL
1
1
2
JOF_BYTE
)
\
\
MACRO
(
JSOP_EVAL
"
eval
"
NULL
3
-
1
1
JOF_ARGC
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_CHECKSLOPPY
|
JOF_IC
)
\
\
MACRO
(
JSOP_SPREADEVAL
"
spreadeval
"
NULL
1
3
1
JOF_BYTE
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_CHECKSLOPPY
|
JOF_IC
)
\
\
MACRO
(
JSOP_STRICTEVAL
"
strict
-
eval
"
NULL
3
-
1
1
JOF_ARGC
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_CHECKSTRICT
|
JOF_IC
)
\
\
MACRO
(
JSOP_STRICTSPREADEVAL
"
strict
-
spreadeval
"
NULL
1
3
1
JOF_BYTE
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_CHECKSTRICT
|
JOF_IC
)
\
\
MACRO
(
JSOP_IMPLICITTHIS
"
implicitthis
"
"
"
5
0
1
JOF_ATOM
)
\
\
MACRO
(
JSOP_GIMPLICITTHIS
"
gimplicitthis
"
"
"
5
0
1
JOF_ATOM
)
\
\
MACRO
(
JSOP_CALLSITEOBJ
"
callsiteobj
"
NULL
5
0
1
JOF_OBJECT
)
\
\
MACRO
(
JSOP_IS_CONSTRUCTING
"
is
-
constructing
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_NEW
"
new
"
NULL
3
-
1
1
JOF_ARGC
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
|
JOF_IC
)
\
\
MACRO
(
JSOP_SPREADNEW
"
spreadnew
"
NULL
1
4
1
JOF_BYTE
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_SUPERFUN
"
superfun
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_SUPERCALL
"
supercall
"
NULL
3
-
1
1
JOF_ARGC
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_SPREADSUPERCALL
"
spreadsupercall
"
NULL
1
4
1
JOF_BYTE
|
JOF_INVOKE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_CHECKTHISREINIT
"
checkthisreinit
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_GENERATOR
"
generator
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_INITIALYIELD
"
initialyield
"
NULL
4
1
1
JOF_RESUMEINDEX
)
\
\
MACRO
(
JSOP_AFTERYIELD
"
afteryield
"
NULL
5
0
0
JOF_ICINDEX
)
\
\
MACRO
(
JSOP_FINALYIELDRVAL
"
finalyieldrval
"
NULL
1
1
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_YIELD
"
yield
"
NULL
4
2
1
JOF_RESUMEINDEX
)
\
\
MACRO
(
JSOP_ISGENCLOSING
"
isgenclosing
"
NULL
1
1
2
JOF_BYTE
)
\
\
MACRO
(
JSOP_ASYNCAWAIT
"
async
-
await
"
NULL
1
2
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_ASYNCRESOLVE
"
async
-
resolve
"
NULL
2
2
1
JOF_UINT8
)
\
\
MACRO
(
JSOP_AWAIT
"
await
"
NULL
4
2
1
JOF_RESUMEINDEX
)
\
\
MACRO
(
JSOP_TRYSKIPAWAIT
"
tryskipawait
"
NULL
1
1
2
JOF_BYTE
)
\
\
MACRO
(
JSOP_RESUME
"
resume
"
NULL
2
2
1
JOF_UINT8
|
JOF_INVOKE
)
\
\
MACRO
(
JSOP_JUMPTARGET
"
jumptarget
"
NULL
5
0
0
JOF_ICINDEX
)
\
\
MACRO
(
JSOP_LOOPHEAD
"
loophead
"
NULL
6
0
0
JOF_LOOPHEAD
)
\
\
MACRO
(
JSOP_GOTO
"
goto
"
NULL
5
0
0
JOF_JUMP
)
\
\
MACRO
(
JSOP_IFEQ
"
ifeq
"
NULL
5
1
0
JOF_JUMP
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_IFNE
"
ifne
"
NULL
5
1
0
JOF_JUMP
|
JOF_IC
)
\
\
MACRO
(
JSOP_AND
"
and
"
NULL
5
1
1
JOF_JUMP
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_OR
"
or
"
NULL
5
1
1
JOF_JUMP
|
JOF_DETECTING
|
JOF_IC
)
\
\
MACRO
(
JSOP_COALESCE
"
coalesce
"
NULL
5
1
1
JOF_JUMP
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_CASE
"
case
"
NULL
5
2
1
JOF_JUMP
)
\
\
MACRO
(
JSOP_DEFAULT
"
default
"
NULL
5
1
0
JOF_JUMP
)
\
\
MACRO
(
JSOP_TABLESWITCH
"
tableswitch
"
NULL
16
1
0
JOF_TABLESWITCH
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_RETURN
"
return
"
NULL
1
1
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_GETRVAL
"
getrval
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_SETRVAL
"
setrval
"
NULL
1
1
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_RETRVAL
"
retrval
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_CHECKRETURN
"
checkreturn
"
NULL
1
1
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_THROW
js_throw_str
NULL
1
1
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_THROWMSG
"
throwmsg
"
NULL
3
0
0
JOF_UINT16
)
\
\
MACRO
(
JSOP_THROWSETALIASEDCONST
"
throwsetaliasedconst
"
NULL
5
1
1
JOF_ENVCOORD
|
JOF_NAME
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_THROWSETCALLEE
"
throwsetcallee
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_THROWSETCONST
"
throwsetconst
"
NULL
4
1
1
JOF_LOCAL
|
JOF_NAME
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_TRY
"
try
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_TRY_DESTRUCTURING
"
try
-
destructuring
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_EXCEPTION
"
exception
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_RESUMEINDEX
"
resume
-
index
"
NULL
4
0
1
JOF_RESUMEINDEX
)
\
\
MACRO
(
JSOP_GOSUB
"
gosub
"
NULL
5
2
0
JOF_JUMP
)
\
\
MACRO
(
JSOP_FINALLY
"
finally
"
NULL
1
0
2
JOF_BYTE
)
\
\
MACRO
(
JSOP_RETSUB
"
retsub
"
NULL
1
2
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_UNINITIALIZED
"
uninitialized
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_INITLEXICAL
"
initlexical
"
NULL
4
1
1
JOF_LOCAL
|
JOF_NAME
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_INITGLEXICAL
"
initglexical
"
NULL
5
1
1
JOF_ATOM
|
JOF_NAME
|
JOF_PROPINIT
|
JOF_GNAME
|
JOF_IC
)
\
\
MACRO
(
JSOP_INITALIASEDLEXICAL
"
initaliasedlexical
"
NULL
5
1
1
JOF_ENVCOORD
|
JOF_NAME
|
JOF_PROPINIT
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_CHECKLEXICAL
"
checklexical
"
NULL
4
0
0
JOF_LOCAL
|
JOF_NAME
)
\
\
MACRO
(
JSOP_CHECKALIASEDLEXICAL
"
checkaliasedlexical
"
NULL
5
0
0
JOF_ENVCOORD
|
JOF_NAME
)
\
\
MACRO
(
JSOP_CHECKTHIS
"
checkthis
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_BINDGNAME
"
bindgname
"
NULL
5
0
1
JOF_ATOM
|
JOF_NAME
|
JOF_GNAME
|
JOF_IC
)
\
\
MACRO
(
JSOP_BINDNAME
"
bindname
"
NULL
5
0
1
JOF_ATOM
|
JOF_NAME
|
JOF_IC
)
\
\
MACRO
(
JSOP_GETNAME
"
getname
"
NULL
5
0
1
JOF_ATOM
|
JOF_NAME
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_GETGNAME
"
getgname
"
NULL
5
0
1
JOF_ATOM
|
JOF_NAME
|
JOF_TYPESET
|
JOF_GNAME
|
JOF_IC
)
\
\
MACRO
(
JSOP_GETARG
"
getarg
"
NULL
3
0
1
JOF_QARG
|
JOF_NAME
)
\
\
MACRO
(
JSOP_GETLOCAL
"
getlocal
"
NULL
4
0
1
JOF_LOCAL
|
JOF_NAME
)
\
\
MACRO
(
JSOP_GETALIASEDVAR
"
getaliasedvar
"
NULL
5
0
1
JOF_ENVCOORD
|
JOF_NAME
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_GETIMPORT
"
getimport
"
NULL
5
0
1
JOF_ATOM
|
JOF_NAME
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_GETBOUNDNAME
"
getboundname
"
NULL
5
1
1
JOF_ATOM
|
JOF_NAME
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_GETINTRINSIC
"
getintrinsic
"
NULL
5
0
1
JOF_ATOM
|
JOF_NAME
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_CALLEE
"
callee
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_ENVCALLEE
"
envcallee
"
NULL
2
0
1
JOF_UINT8
)
\
\
MACRO
(
JSOP_SETNAME
"
setname
"
NULL
5
2
1
JOF_ATOM
|
JOF_NAME
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSLOPPY
|
JOF_IC
)
\
\
MACRO
(
JSOP_STRICTSETNAME
"
strict
-
setname
"
NULL
5
2
1
JOF_ATOM
|
JOF_NAME
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_CHECKSTRICT
|
JOF_IC
)
\
\
MACRO
(
JSOP_SETGNAME
"
setgname
"
NULL
5
2
1
JOF_ATOM
|
JOF_NAME
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_GNAME
|
JOF_CHECKSLOPPY
|
JOF_IC
)
\
\
MACRO
(
JSOP_STRICTSETGNAME
"
strict
-
setgname
"
NULL
5
2
1
JOF_ATOM
|
JOF_NAME
|
JOF_PROPSET
|
JOF_DETECTING
|
JOF_GNAME
|
JOF_CHECKSTRICT
|
JOF_IC
)
\
\
MACRO
(
JSOP_SETARG
"
setarg
"
NULL
3
1
1
JOF_QARG
|
JOF_NAME
)
\
\
MACRO
(
JSOP_SETLOCAL
"
setlocal
"
NULL
4
1
1
JOF_LOCAL
|
JOF_NAME
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_SETALIASEDVAR
"
setaliasedvar
"
NULL
5
1
1
JOF_ENVCOORD
|
JOF_NAME
|
JOF_PROPSET
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_SETINTRINSIC
"
setintrinsic
"
NULL
5
1
1
JOF_ATOM
|
JOF_NAME
|
JOF_DETECTING
)
\
\
MACRO
(
JSOP_PUSHLEXICALENV
"
pushlexicalenv
"
NULL
5
0
0
JOF_SCOPE
)
\
\
MACRO
(
JSOP_POPLEXICALENV
"
poplexicalenv
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_DEBUGLEAVELEXICALENV
"
debugleavelexicalenv
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_RECREATELEXICALENV
"
recreatelexicalenv
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_FRESHENLEXICALENV
"
freshenlexicalenv
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_PUSHVARENV
"
pushvarenv
"
NULL
5
0
0
JOF_SCOPE
)
\
\
MACRO
(
JSOP_POPVARENV
"
popvarenv
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_ENTERWITH
"
enterwith
"
NULL
5
1
0
JOF_SCOPE
)
\
\
MACRO
(
JSOP_LEAVEWITH
"
leavewith
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_BINDVAR
"
bindvar
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_DEFVAR
"
defvar
"
NULL
5
0
0
JOF_ATOM
)
\
\
MACRO
(
JSOP_DEFFUN
"
deffun
"
NULL
1
1
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_DEFLET
"
deflet
"
NULL
5
0
0
JOF_ATOM
)
\
\
MACRO
(
JSOP_DEFCONST
"
defconst
"
NULL
5
0
0
JOF_ATOM
)
\
\
MACRO
(
JSOP_DELNAME
"
delname
"
NULL
5
0
1
JOF_ATOM
|
JOF_NAME
|
JOF_CHECKSLOPPY
)
\
\
MACRO
(
JSOP_ARGUMENTS
"
arguments
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_REST
"
rest
"
NULL
1
0
1
JOF_BYTE
|
JOF_TYPESET
|
JOF_IC
)
\
\
MACRO
(
JSOP_FUNCTIONTHIS
"
functionthis
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_POP
"
pop
"
NULL
1
1
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_POPN
"
popn
"
NULL
3
-
1
0
JOF_UINT16
)
\
\
MACRO
(
JSOP_DUP
"
dup
"
NULL
1
1
2
JOF_BYTE
)
\
\
MACRO
(
JSOP_DUP2
"
dup2
"
NULL
1
2
4
JOF_BYTE
)
\
\
MACRO
(
JSOP_DUPAT
"
dupat
"
NULL
4
0
1
JOF_UINT24
)
\
\
MACRO
(
JSOP_SWAP
"
swap
"
NULL
1
2
2
JOF_BYTE
)
\
\
MACRO
(
JSOP_PICK
"
pick
"
NULL
2
0
0
JOF_UINT8
)
\
\
MACRO
(
JSOP_UNPICK
"
unpick
"
NULL
2
0
0
JOF_UINT8
)
\
\
MACRO
(
JSOP_NOP
"
nop
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_LINENO
"
lineno
"
NULL
5
0
0
JOF_UINT32
)
\
\
MACRO
(
JSOP_NOP_DESTRUCTURING
"
nop
-
destructuring
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_FORCEINTERPRETER
"
forceinterpreter
"
NULL
1
0
0
JOF_BYTE
)
\
\
MACRO
(
JSOP_DEBUGCHECKSELFHOSTED
"
debug
-
checkselfhosted
"
NULL
1
1
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_INSTRUMENTATION_ACTIVE
"
instrumentationActive
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_INSTRUMENTATION_CALLBACK
"
instrumentationCallback
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_INSTRUMENTATION_SCRIPT_ID
"
instrumentationScriptId
"
NULL
1
0
1
JOF_BYTE
)
\
\
MACRO
(
JSOP_DEBUGGER
"
debugger
"
NULL
1
0
0
JOF_BYTE
)
#
define
FOR_EACH_TRAILING_UNUSED_OPCODE
(
MACRO
)
\
MACRO
(
238
)
\
MACRO
(
239
)
\
MACRO
(
240
)
\
MACRO
(
241
)
\
MACRO
(
242
)
\
MACRO
(
243
)
\
MACRO
(
244
)
\
MACRO
(
245
)
\
MACRO
(
246
)
\
MACRO
(
247
)
\
MACRO
(
248
)
\
MACRO
(
249
)
\
MACRO
(
250
)
\
MACRO
(
251
)
\
MACRO
(
252
)
\
MACRO
(
253
)
\
MACRO
(
254
)
\
MACRO
(
255
)
namespace
js
{
#
define
PLUS_ONE
(
.
.
.
)
\
+
1
#
define
TRAILING_VALUE_AND_VALUE_PLUS_ONE
(
val
)
\
val
)
&
&
(
val
+
1
=
=
static_assert
(
(
0
FOR_EACH_OPCODE
(
PLUS_ONE
)
=
=
FOR_EACH_TRAILING_UNUSED_OPCODE
(
TRAILING_VALUE_AND_VALUE_PLUS_ONE
)
256
)
"
trailing
unused
opcode
values
monotonically
increase
"
"
from
JSOP_LIMIT
to
255
"
)
;
#
undef
TRAILING_VALUE_AND_VALUE_PLUS_ONE
#
undef
PLUS_ONE
#
define
DEFINE_LENGTH_CONSTANT
(
op
name
image
len
.
.
.
)
\
constexpr
size_t
op
#
#
_LENGTH
=
len
;
FOR_EACH_OPCODE
(
DEFINE_LENGTH_CONSTANT
)
#
undef
DEFINE_LENGTH_CONSTANT
}
#
endif
