#
ifndef
jit_WarpBuilderShared_h
#
define
jit_WarpBuilderShared_h
#
include
"
jit
/
MIR
.
h
"
namespace
js
{
namespace
jit
{
class
CallInfo
;
class
WarpSnapshot
;
class
WarpBuilderShared
{
WarpSnapshot
&
snapshot_
;
MIRGenerator
&
mirGen_
;
TempAllocator
&
alloc_
;
protected
:
MBasicBlock
*
current
;
WarpBuilderShared
(
WarpSnapshot
&
snapshot
MIRGenerator
&
mirGen
MBasicBlock
*
current_
)
;
MOZ_MUST_USE
bool
resumeAfter
(
MInstruction
*
ins
BytecodeLocation
loc
)
;
MConstant
*
constant
(
const
Value
&
v
)
;
void
pushConstant
(
const
Value
&
v
)
;
MCall
*
makeCall
(
CallInfo
&
callInfo
bool
needsThisCheck
WrappedFunction
*
target
=
nullptr
)
;
public
:
MBasicBlock
*
currentBlock
(
)
const
{
return
current
;
}
WarpSnapshot
&
snapshot
(
)
const
{
return
snapshot_
;
}
MIRGenerator
&
mirGen
(
)
{
return
mirGen_
;
}
TempAllocator
&
alloc
(
)
{
return
alloc_
;
}
}
;
}
}
#
endif
