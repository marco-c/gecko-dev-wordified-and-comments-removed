#
ifndef
jit_Linker_h
#
define
jit_Linker_h
#
include
"
jscntxt
.
h
"
#
include
"
jscompartment
.
h
"
#
include
"
jit
/
ExecutableAllocator
.
h
"
#
include
"
jit
/
IonCode
.
h
"
#
include
"
jit
/
JitCompartment
.
h
"
#
include
"
jit
/
MacroAssembler
.
h
"
namespace
js
{
namespace
jit
{
class
Linker
{
MacroAssembler
&
masm
;
mozilla
:
:
Maybe
<
AutoWritableJitCode
>
awjc
;
JitCode
*
fail
(
JSContext
*
cx
)
{
ReportOutOfMemory
(
cx
)
;
return
nullptr
;
}
public
:
explicit
Linker
(
MacroAssembler
&
masm
)
:
masm
(
masm
)
{
masm
.
finish
(
)
;
}
template
<
AllowGC
allowGC
>
JitCode
*
newCode
(
JSContext
*
cx
CodeKind
kind
bool
hasPatchableBackedges
=
false
)
;
}
;
}
}
#
endif
