#
ifndef
jit_Linker_h
#
define
jit_Linker_h
#
include
"
jit
/
ExecutableAllocator
.
h
"
#
include
"
jit
/
JitCode
.
h
"
#
include
"
jit
/
JitRealm
.
h
"
#
include
"
jit
/
MacroAssembler
.
h
"
#
include
"
vm
/
JSContext
.
h
"
#
include
"
vm
/
Realm
.
h
"
namespace
js
{
namespace
jit
{
class
MacroAssembler
;
class
Linker
{
MacroAssembler
&
masm
;
mozilla
:
:
Maybe
<
AutoWritableJitCodeFallible
>
awjcf
;
JitCode
*
fail
(
JSContext
*
cx
)
{
ReportOutOfMemory
(
cx
)
;
return
nullptr
;
}
public
:
explicit
Linker
(
MacroAssembler
&
masm
)
:
masm
(
masm
)
{
masm
.
finish
(
)
;
}
JitCode
*
newCode
(
JSContext
*
cx
CodeKind
kind
)
;
}
;
}
}
#
endif
