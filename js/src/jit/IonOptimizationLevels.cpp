#
include
"
jit
/
IonOptimizationLevels
.
h
"
#
include
"
jit
/
Ion
.
h
"
#
include
"
jit
/
JitHints
.
h
"
#
include
"
jit
/
JitRuntime
.
h
"
#
include
"
vm
/
JSScript
.
h
"
#
include
"
vm
/
JSScript
-
inl
.
h
"
using
namespace
js
;
using
namespace
js
:
:
jit
;
namespace
js
{
namespace
jit
{
uint32_t
OptimizationInfo
:
:
baseWarmUpThresholdForScript
(
JSContext
*
cx
JSScript
*
script
)
{
if
(
cx
-
>
runtime
(
)
-
>
jitRuntime
(
)
-
>
hasJitHintsMap
(
)
)
{
JitHintsMap
*
jitHints
=
cx
-
>
runtime
(
)
-
>
jitRuntime
(
)
-
>
getJitHintsMap
(
)
;
uint32_t
hintThreshold
;
if
(
jitHints
-
>
getIonThresholdHint
(
script
hintThreshold
)
)
{
return
hintThreshold
;
}
}
return
JitOptions
.
normalIonWarmUpThreshold
;
}
uint32_t
OptimizationInfo
:
:
warmUpThresholdForPC
(
JSScript
*
script
jsbytecode
*
pc
uint32_t
baseThreshold
)
{
MOZ_ASSERT
(
pc
=
=
nullptr
|
|
pc
=
=
script
-
>
code
(
)
|
|
JSOp
(
*
pc
)
=
=
JSOp
:
:
LoopHead
)
;
MOZ_ASSERT_IF
(
pc
&
&
JSOp
(
*
pc
)
=
=
JSOp
:
:
LoopHead
pc
>
script
-
>
code
(
)
)
;
uint32_t
warmUpThreshold
=
baseThreshold
;
if
(
pc
=
=
script
-
>
code
(
)
)
{
pc
=
nullptr
;
}
if
(
script
-
>
length
(
)
>
JitOptions
.
ionMaxScriptSizeMainThread
)
{
warmUpThreshold
*
=
(
script
-
>
length
(
)
/
double
(
JitOptions
.
ionMaxScriptSizeMainThread
)
)
;
}
uint32_t
numLocalsAndArgs
=
NumLocalsAndArgs
(
script
)
;
if
(
numLocalsAndArgs
>
JitOptions
.
ionMaxLocalsAndArgsMainThread
)
{
warmUpThreshold
*
=
(
numLocalsAndArgs
/
double
(
JitOptions
.
ionMaxLocalsAndArgsMainThread
)
)
;
}
if
(
!
pc
|
|
JitOptions
.
eagerIonCompilation
(
)
)
{
return
warmUpThreshold
;
}
uint32_t
loopDepth
=
LoopHeadDepthHint
(
pc
)
;
MOZ_ASSERT
(
loopDepth
>
0
)
;
return
warmUpThreshold
+
loopDepth
*
(
baseThreshold
/
10
)
;
}
OptimizationLevel
OptimizationLevelInfo
:
:
levelForScript
(
JSContext
*
cx
JSScript
*
script
jsbytecode
*
pc
)
const
{
uint32_t
baseThreshold
=
OptimizationInfo
:
:
baseWarmUpThresholdForScript
(
cx
script
)
;
if
(
script
-
>
getWarmUpCount
(
)
<
OptimizationInfo
:
:
warmUpThresholdForPC
(
script
pc
baseThreshold
)
)
{
return
OptimizationLevel
:
:
DontCompile
;
}
return
OptimizationLevel
:
:
Normal
;
}
}
}
