#
ifndef
jit_BaselineFrameInfo_inl_h
#
define
jit_BaselineFrameInfo_inl_h
namespace
js
{
namespace
jit
{
void
CompilerFrameInfo
:
:
pop
(
StackAdjustment
adjust
)
{
spIndex
-
-
;
StackValue
*
popped
=
&
stack
[
spIndex
]
;
if
(
adjust
=
=
AdjustStack
&
&
popped
-
>
kind
(
)
=
=
StackValue
:
:
Stack
)
{
masm
.
addToStackPtr
(
Imm32
(
sizeof
(
Value
)
)
)
;
}
popped
-
>
reset
(
)
;
}
void
CompilerFrameInfo
:
:
popn
(
uint32_t
n
StackAdjustment
adjust
)
{
uint32_t
poppedStack
=
0
;
for
(
uint32_t
i
=
0
;
i
<
n
;
i
+
+
)
{
if
(
peek
(
-
1
)
-
>
kind
(
)
=
=
StackValue
:
:
Stack
)
{
poppedStack
+
+
;
}
pop
(
DontAdjustStack
)
;
}
if
(
adjust
=
=
AdjustStack
&
&
poppedStack
>
0
)
{
masm
.
addToStackPtr
(
Imm32
(
sizeof
(
Value
)
*
poppedStack
)
)
;
}
}
}
}
#
endif
