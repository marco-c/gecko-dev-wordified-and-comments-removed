#
ifndef
jit_BaselineCompileTask_h
#
define
jit_BaselineCompileTask_h
#
include
"
jit
/
BaselineCodeGen
.
h
"
namespace
js
:
:
jit
{
class
BaselineSnapshot
{
JSScript
*
script_
;
GlobalLexicalEnvironmentObject
*
globalLexical_
;
JSObject
*
globalThis_
;
uint32_t
baseWarmUpThreshold_
;
bool
isIonCompileable_
;
bool
compileDebugInstrumentation_
;
public
:
explicit
BaselineSnapshot
(
JSScript
*
script
GlobalLexicalEnvironmentObject
*
globalLexical
JSObject
*
globalThis
uint32_t
baseWarmUpThreshold
bool
isIonCompileable
bool
compileDebugInstrumentation
)
:
script_
(
script
)
globalLexical_
(
globalLexical
)
globalThis_
(
globalThis
)
baseWarmUpThreshold_
(
baseWarmUpThreshold
)
isIonCompileable_
(
isIonCompileable
)
compileDebugInstrumentation_
(
compileDebugInstrumentation
)
{
}
JSScript
*
script
(
)
const
{
return
script_
;
}
GlobalLexicalEnvironmentObject
*
globalLexical
(
)
const
{
return
globalLexical_
;
}
JSObject
*
globalThis
(
)
const
{
return
globalThis_
;
}
uint32_t
baseWarmUpThreshold
(
)
const
{
return
baseWarmUpThreshold_
;
}
bool
isIonCompileable
(
)
const
{
return
isIonCompileable_
;
}
bool
compileDebugInstrumentation
(
)
const
{
return
compileDebugInstrumentation_
;
}
}
;
}
#
endif
