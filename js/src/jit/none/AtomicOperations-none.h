#
ifndef
jit_none_AtomicOperations_none_h
#
define
jit_none_AtomicOperations_none_h
#
include
"
mozilla
/
Assertions
.
h
"
inline
bool
js
:
:
jit
:
:
AtomicOperations
:
:
isLockfree8
(
)
{
MOZ_CRASH
(
)
;
}
inline
void
js
:
:
jit
:
:
AtomicOperations
:
:
fenceSeqCst
(
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
T
js
:
:
jit
:
:
AtomicOperations
:
:
loadSeqCst
(
T
*
addr
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
void
js
:
:
jit
:
:
AtomicOperations
:
:
storeSeqCst
(
T
*
addr
T
val
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
T
js
:
:
jit
:
:
AtomicOperations
:
:
compareExchangeSeqCst
(
T
*
addr
T
oldval
T
newval
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
T
js
:
:
jit
:
:
AtomicOperations
:
:
fetchAddSeqCst
(
T
*
addr
T
val
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
T
js
:
:
jit
:
:
AtomicOperations
:
:
fetchSubSeqCst
(
T
*
addr
T
val
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
T
js
:
:
jit
:
:
AtomicOperations
:
:
fetchAndSeqCst
(
T
*
addr
T
val
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
T
js
:
:
jit
:
:
AtomicOperations
:
:
fetchOrSeqCst
(
T
*
addr
T
val
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
T
js
:
:
jit
:
:
AtomicOperations
:
:
fetchXorSeqCst
(
T
*
addr
T
val
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
T
js
:
:
jit
:
:
AtomicOperations
:
:
exchangeSeqCst
(
T
*
addr
T
val
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
T
js
:
:
jit
:
:
AtomicOperations
:
:
loadSafeWhenRacy
(
T
*
addr
)
{
MOZ_CRASH
(
)
;
}
template
<
typename
T
>
inline
void
js
:
:
jit
:
:
AtomicOperations
:
:
storeSafeWhenRacy
(
T
*
addr
T
val
)
{
MOZ_CRASH
(
)
;
}
inline
void
js
:
:
jit
:
:
AtomicOperations
:
:
memcpySafeWhenRacy
(
void
*
dest
const
void
*
src
size_t
nbytes
)
{
MOZ_CRASH
(
)
;
}
inline
void
js
:
:
jit
:
:
AtomicOperations
:
:
memmoveSafeWhenRacy
(
void
*
dest
const
void
*
src
size_t
nbytes
)
{
MOZ_CRASH
(
)
;
}
template
<
size_t
nbytes
>
inline
void
js
:
:
jit
:
:
RegionLock
:
:
acquire
(
void
*
addr
)
{
(
void
)
spinlock
;
MOZ_CRASH
(
)
;
}
template
<
size_t
nbytes
>
inline
void
js
:
:
jit
:
:
RegionLock
:
:
release
(
void
*
addr
)
{
MOZ_CRASH
(
)
;
}
#
endif
