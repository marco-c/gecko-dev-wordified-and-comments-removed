#
ifndef
jit_JitHints_inl_h
#
define
jit_JitHints_inl_h
#
include
"
jit
/
JitHints
.
h
"
#
include
"
mozilla
/
HashFunctions
.
h
"
namespace
js
:
:
jit
{
inline
JitHintsMap
:
:
ScriptKey
JitHintsMap
:
:
getScriptKey
(
JSScript
*
script
)
const
{
if
(
ScriptKey
key
=
script
-
>
filenameHash
(
)
)
{
return
mozilla
:
:
AddToHash
(
key
script
-
>
sourceStart
(
)
)
;
}
return
0
;
}
inline
void
JitHintsMap
:
:
incrementEntryCount
(
)
{
if
(
+
+
entryCount_
>
MaxEntries_
)
{
map_
.
clear
(
)
;
entryCount_
=
0
;
}
}
inline
void
JitHintsMap
:
:
setEagerBaselineHint
(
JSScript
*
script
)
{
ScriptKey
key
=
getScriptKey
(
script
)
;
if
(
!
key
)
{
return
;
}
if
(
map_
.
mightContain
(
key
)
)
{
return
;
}
incrementEntryCount
(
)
;
script
-
>
setNoEagerBaselineHint
(
false
)
;
map_
.
add
(
key
)
;
}
inline
bool
JitHintsMap
:
:
mightHaveEagerBaselineHint
(
JSScript
*
script
)
const
{
if
(
ScriptKey
key
=
getScriptKey
(
script
)
)
{
return
map_
.
mightContain
(
key
)
;
}
script
-
>
setNoEagerBaselineHint
(
true
)
;
return
false
;
}
}
#
endif
