#
ifndef
jit_mips64_Lowering_mips64_h
#
define
jit_mips64_Lowering_mips64_h
#
include
"
jit
/
mips
-
shared
/
Lowering
-
mips
-
shared
.
h
"
namespace
js
{
namespace
jit
{
class
LIRGeneratorMIPS64
:
public
LIRGeneratorMIPSShared
{
protected
:
LIRGeneratorMIPS64
(
MIRGenerator
*
gen
MIRGraph
&
graph
LIRGraph
&
lirGraph
)
:
LIRGeneratorMIPSShared
(
gen
graph
lirGraph
)
{
}
protected
:
void
useBoxFixed
(
LInstruction
*
lir
size_t
n
MDefinition
*
mir
Register
reg1
Register
reg2
bool
useAtStart
=
false
)
;
inline
LDefinition
tempToUnbox
(
)
{
return
temp
(
)
;
}
void
lowerUntypedPhiInput
(
MPhi
*
phi
uint32_t
inputPosition
LBlock
*
block
size_t
lirIndex
)
;
void
defineUntypedPhi
(
MPhi
*
phi
size_t
lirIndex
)
;
void
lowerTruncateDToInt32
(
MTruncateToInt32
*
ins
)
;
void
lowerTruncateFToInt32
(
MTruncateToInt32
*
ins
)
;
public
:
void
visitBox
(
MBox
*
box
)
;
void
visitUnbox
(
MUnbox
*
unbox
)
;
void
visitReturn
(
MReturn
*
ret
)
;
void
visitRandom
(
MRandom
*
ins
)
;
}
;
typedef
LIRGeneratorMIPS64
LIRGeneratorSpecific
;
}
}
#
endif
