#
ifndef
jit_mips64_CodeGenerator_mips64_h
#
define
jit_mips64_CodeGenerator_mips64_h
#
include
"
jit
/
mips
-
shared
/
CodeGenerator
-
mips
-
shared
.
h
"
namespace
js
{
namespace
jit
{
class
CodeGeneratorMIPS64
:
public
CodeGeneratorMIPSShared
{
protected
:
CodeGeneratorMIPS64
(
MIRGenerator
*
gen
LIRGraph
*
graph
MacroAssembler
*
masm
)
:
CodeGeneratorMIPSShared
(
gen
graph
masm
)
{
}
template
<
typename
T
>
void
emitWasmLoadI64
(
T
*
ins
)
;
template
<
typename
T
>
void
emitWasmStoreI64
(
T
*
ins
)
;
ValueOperand
ToValue
(
LInstruction
*
ins
size_t
pos
)
;
ValueOperand
ToTempValue
(
LInstruction
*
ins
size_t
pos
)
;
void
emitBigIntPtrDiv
(
LBigIntPtrDiv
*
ins
Register
dividend
Register
divisor
Register
output
)
;
void
emitBigIntPtrMod
(
LBigIntPtrMod
*
ins
Register
dividend
Register
divisor
Register
output
)
;
}
;
typedef
CodeGeneratorMIPS64
CodeGeneratorSpecific
;
}
}
#
endif
