#
ifndef
jit_WarpOracle_h
#
define
jit_WarpOracle_h
#
include
"
jit
/
JitAllocPolicy
.
h
"
#
include
"
jit
/
JitContext
.
h
"
#
include
"
jit
/
WarpSnapshot
.
h
"
namespace
js
{
namespace
jit
{
class
MIRGenerator
;
class
MOZ_STACK_CLASS
WarpOracle
{
JSContext
*
cx_
;
MIRGenerator
&
mirGen_
;
TempAllocator
&
alloc_
;
HandleScript
outerScript_
;
WarpBailoutInfo
bailoutInfo_
;
Vector
<
JSObject
*
8
SystemAllocPolicy
>
nurseryObjects_
;
using
NurseryObjectsMap
=
HashMap
<
JSObject
*
uint32_t
DefaultHasher
<
JSObject
*
>
SystemAllocPolicy
>
;
NurseryObjectsMap
nurseryObjectsMap_
;
public
:
WarpOracle
(
JSContext
*
cx
MIRGenerator
&
mirGen
HandleScript
outerScript
)
;
MIRGenerator
&
mirGen
(
)
{
return
mirGen_
;
}
WarpBailoutInfo
&
bailoutInfo
(
)
{
return
bailoutInfo_
;
}
MOZ_MUST_USE
bool
registerNurseryObject
(
JSObject
*
obj
uint32_t
*
nurseryIndex
)
;
AbortReasonOr
<
WarpSnapshot
*
>
createSnapshot
(
)
;
mozilla
:
:
GenericErrorResult
<
AbortReason
>
abort
(
HandleScript
script
AbortReason
r
)
;
mozilla
:
:
GenericErrorResult
<
AbortReason
>
abort
(
HandleScript
script
AbortReason
r
const
char
*
message
.
.
.
)
;
}
;
}
}
#
endif
