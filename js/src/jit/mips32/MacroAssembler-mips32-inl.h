#
ifndef
jit_mips32_MacroAssembler_mips32_inl_h
#
define
jit_mips32_MacroAssembler_mips32_inl_h
#
include
"
jit
/
mips32
/
MacroAssembler
-
mips32
.
h
"
namespace
js
{
namespace
jit
{
void
MacroAssembler
:
:
and32
(
Register
src
Register
dest
)
{
ma_and
(
dest
dest
src
)
;
}
void
MacroAssembler
:
:
and32
(
Imm32
imm
Register
dest
)
{
ma_and
(
dest
imm
)
;
}
void
MacroAssembler
:
:
and32
(
Imm32
imm
const
Address
&
dest
)
{
load32
(
dest
SecondScratchReg
)
;
ma_and
(
SecondScratchReg
imm
)
;
store32
(
SecondScratchReg
dest
)
;
}
void
MacroAssembler
:
:
and32
(
const
Address
&
src
Register
dest
)
{
load32
(
src
SecondScratchReg
)
;
ma_and
(
dest
SecondScratchReg
)
;
}
void
MacroAssembler
:
:
andPtr
(
Register
src
Register
dest
)
{
ma_and
(
dest
src
)
;
}
void
MacroAssembler
:
:
andPtr
(
Imm32
imm
Register
dest
)
{
ma_and
(
dest
imm
)
;
}
void
MacroAssemblerMIPSCompat
:
:
and64
(
Imm64
imm
Register64
dest
)
{
asMasm
(
)
.
and32
(
Imm32
(
imm
.
value
&
LOW_32_MASK
)
dest
.
low
)
;
asMasm
(
)
.
and32
(
Imm32
(
(
imm
.
value
>
>
32
)
&
LOW_32_MASK
)
dest
.
high
)
;
}
}
}
#
endif
