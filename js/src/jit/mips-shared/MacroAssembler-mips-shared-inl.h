#
ifndef
jit_mips_shared_MacroAssembler_mips_shared_inl_h
#
define
jit_mips_shared_MacroAssembler_mips_shared_inl_h
#
include
"
jit
/
mips
-
shared
/
MacroAssembler
-
mips
-
shared
.
h
"
namespace
js
{
namespace
jit
{
void
MacroAssembler
:
:
not32
(
Register
reg
)
{
ma_not
(
reg
reg
)
;
}
void
MacroAssembler
:
:
and32
(
Register
src
Register
dest
)
{
as_and
(
dest
dest
src
)
;
}
void
MacroAssembler
:
:
and32
(
Imm32
imm
Register
dest
)
{
ma_and
(
dest
imm
)
;
}
void
MacroAssembler
:
:
and32
(
Imm32
imm
const
Address
&
dest
)
{
load32
(
dest
SecondScratchReg
)
;
ma_and
(
SecondScratchReg
imm
)
;
store32
(
SecondScratchReg
dest
)
;
}
void
MacroAssembler
:
:
and32
(
const
Address
&
src
Register
dest
)
{
load32
(
src
SecondScratchReg
)
;
ma_and
(
dest
SecondScratchReg
)
;
}
void
MacroAssembler
:
:
or32
(
Register
src
Register
dest
)
{
ma_or
(
dest
src
)
;
}
void
MacroAssembler
:
:
or32
(
Imm32
imm
Register
dest
)
{
ma_or
(
dest
imm
)
;
}
void
MacroAssembler
:
:
or32
(
Imm32
imm
const
Address
&
dest
)
{
load32
(
dest
SecondScratchReg
)
;
ma_or
(
SecondScratchReg
imm
)
;
store32
(
SecondScratchReg
dest
)
;
}
void
MacroAssembler
:
:
xor32
(
Imm32
imm
Register
dest
)
{
ma_xor
(
dest
imm
)
;
}
}
}
#
endif
