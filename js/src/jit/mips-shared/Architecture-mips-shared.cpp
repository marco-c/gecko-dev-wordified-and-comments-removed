#
include
"
jit
/
mips
-
shared
/
Architecture
-
mips
-
shared
.
h
"
#
include
<
fcntl
.
h
>
#
include
<
unistd
.
h
>
#
include
"
jit
/
RegisterSets
.
h
"
#
define
HWCAP_MIPS
(
1
<
<
28
)
#
define
HWCAP_LOONGSON
(
1
<
<
27
)
#
define
HWCAP_FPU
(
1
<
<
0
)
namespace
js
{
namespace
jit
{
uint32_t
GetMIPSFlags
(
)
{
static
uint32_t
flags
=
0
;
if
(
flags
)
return
flags
;
flags
|
=
HWCAP_MIPS
;
#
if
defined
(
JS_SIMULATOR_MIPS32
)
|
|
defined
(
JS_SIMULATOR_MIPS64
)
flags
|
=
HWCAP_FPU
;
#
else
#
ifdef
__linux__
FILE
*
fp
=
fopen
(
"
/
proc
/
cpuinfo
"
"
r
"
)
;
if
(
!
fp
)
return
flags
;
char
buf
[
1024
]
;
memset
(
buf
0
sizeof
(
buf
)
)
;
fread
(
buf
sizeof
(
char
)
sizeof
(
buf
)
-
1
fp
)
;
fclose
(
fp
)
;
if
(
strstr
(
buf
"
FPU
"
)
)
flags
|
=
HWCAP_FPU
;
if
(
strstr
(
buf
"
Loongson
"
)
)
flags
|
=
HWCAP_LOONGSON
;
#
endif
#
endif
return
flags
;
}
bool
hasFPU
(
)
{
return
js
:
:
jit
:
:
GetMIPSFlags
(
)
&
HWCAP_FPU
;
}
bool
isLoongson
(
)
{
return
js
:
:
jit
:
:
GetMIPSFlags
(
)
&
HWCAP_LOONGSON
;
}
Registers
:
:
Code
Registers
:
:
FromName
(
const
char
*
name
)
{
for
(
size_t
i
=
0
;
i
<
Total
;
i
+
+
)
{
if
(
strcmp
(
GetName
(
i
)
name
)
=
=
0
)
return
Code
(
i
)
;
}
return
Invalid
;
}
}
}
