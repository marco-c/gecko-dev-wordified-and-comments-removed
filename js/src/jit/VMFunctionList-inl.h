#
include
"
jit
/
BaselineIC
.
h
"
#
include
"
jit
/
JitRealm
.
h
"
#
include
"
jit
/
VMFunctions
.
h
"
#
include
"
vm
/
Interpreter
.
h
"
#
include
"
jit
/
BaselineFrame
-
inl
.
h
"
#
include
"
vm
/
Interpreter
-
inl
.
h
"
namespace
js
{
namespace
jit
{
#
define
VMFUNCTION_LIST
(
_
)
\
_
(
BaselineDebugPrologue
js
:
:
jit
:
:
DebugPrologue
)
\
_
(
BaselineGetFunctionThis
js
:
:
jit
:
:
BaselineGetFunctionThis
)
\
_
(
BaselineThrowInitializedThis
js
:
:
jit
:
:
BaselineThrowInitializedThis
)
\
_
(
BaselineThrowUninitializedThis
js
:
:
jit
:
:
BaselineThrowUninitializedThis
)
\
_
(
BindVarOperation
js
:
:
BindVarOperation
)
\
_
(
CheckIsCallable
js
:
:
jit
:
:
CheckIsCallable
)
\
_
(
CheckOverRecursedBaseline
js
:
:
jit
:
:
CheckOverRecursedBaseline
)
\
_
(
CloneRegExpObject
js
:
:
CloneRegExpObject
)
\
_
(
DefFunOperation
js
:
:
DefFunOperation
)
\
_
(
DefLexicalOperation
js
:
:
DefLexicalOperation
)
\
_
(
DefVarOperation
js
:
:
DefVarOperation
)
\
_
(
DeleteElementNonStrict
js
:
:
DeleteElementJit
<
false
>
)
\
_
(
DeleteElementStrict
js
:
:
DeleteElementJit
<
true
>
)
\
_
(
DeleteNameOperation
js
:
:
DeleteNameOperation
)
\
_
(
DeletePropertyNonStrict
js
:
:
DeletePropertyJit
<
false
>
)
\
_
(
DeletePropertyStrict
js
:
:
DeletePropertyJit
<
true
>
)
\
_
(
GetImportOperation
js
:
:
GetImportOperation
)
\
_
(
GetNonSyntacticGlobalThis
js
:
:
GetNonSyntacticGlobalThis
)
\
_
(
InitElemGetterSetterOperation
js
:
:
InitElemGetterSetterOperation
)
\
_
(
InitPropGetterSetterOperation
js
:
:
InitPropGetterSetterOperation
)
\
_
(
InterruptCheck
js
:
:
jit
:
:
InterruptCheck
)
\
_
(
IonCompileScriptForBaseline
js
:
:
jit
:
:
IonCompileScriptForBaseline
)
\
_
(
Lambda
js
:
:
Lambda
)
\
_
(
LambdaArrow
js
:
:
LambdaArrow
)
\
_
(
MutatePrototype
js
:
:
jit
:
:
MutatePrototype
)
\
_
(
NewArrayCopyOnWriteOperation
js
:
:
NewArrayCopyOnWriteOperation
)
\
_
(
NewDenseCopyOnWriteArray
js
:
:
NewDenseCopyOnWriteArray
)
\
_
(
OptimizeSpreadCall
js
:
:
OptimizeSpreadCall
)
\
_
(
ProcessCallSiteObjOperation
js
:
:
ProcessCallSiteObjOperation
)
\
_
(
SetFunctionName
js
:
:
SetFunctionName
)
\
_
(
SetIntrinsicOperation
js
:
:
SetIntrinsicOperation
)
\
_
(
SetPropertySuper
js
:
:
SetPropertySuper
)
\
_
(
SingletonObjectLiteralOperation
js
:
:
SingletonObjectLiteralOperation
)
\
_
(
ThrowBadDerivedReturn
js
:
:
jit
:
:
ThrowBadDerivedReturn
)
\
_
(
ThrowCheckIsObject
js
:
:
ThrowCheckIsObject
)
\
_
(
ThrowRuntimeLexicalError
js
:
:
jit
:
:
ThrowRuntimeLexicalError
)
enum
class
VMFunctionId
{
#
define
DEF_ID
(
name
fp
)
name
VMFUNCTION_LIST
(
DEF_ID
)
#
undef
DEF_ID
Count
}
;
template
<
typename
Function
Function
fun
>
struct
VMFunctionToId
;
#
if
MOZ_IS_GCC
#
pragma
GCC
diagnostic
push
#
pragma
GCC
diagnostic
ignored
"
-
Wignored
-
attributes
"
#
endif
#
define
DEF_TEMPLATE
(
name
fp
)
\
template
<
>
\
struct
VMFunctionToId
<
decltype
(
&
(
:
:
fp
)
)
:
:
fp
>
{
\
static
constexpr
VMFunctionId
id
=
VMFunctionId
:
:
name
;
\
}
;
VMFUNCTION_LIST
(
DEF_TEMPLATE
)
#
undef
DEF_TEMPLATE
#
if
MOZ_IS_GCC
#
pragma
GCC
diagnostic
pop
#
endif
}
}
