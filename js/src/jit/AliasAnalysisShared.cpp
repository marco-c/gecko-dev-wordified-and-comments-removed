#
include
"
jit
/
AliasAnalysisShared
.
h
"
namespace
js
{
namespace
jit
{
void
AliasAnalysisShared
:
:
spewDependencyList
(
)
{
#
ifdef
JS_JITSPEW
if
(
JitSpewEnabled
(
JitSpew_AliasSummaries
)
)
{
Fprinter
&
print
=
JitSpewPrinter
(
)
;
JitSpewHeader
(
JitSpew_AliasSummaries
)
;
print
.
printf
(
"
Dependency
list
for
other
passes
:
\
n
"
)
;
for
(
ReversePostorderIterator
block
(
graph_
.
rpoBegin
(
)
)
;
block
!
=
graph_
.
rpoEnd
(
)
;
block
+
+
)
{
for
(
MInstructionIterator
def
(
block
-
>
begin
(
)
)
end
(
block
-
>
begin
(
block
-
>
lastIns
(
)
)
)
;
def
!
=
end
;
+
+
def
)
{
if
(
!
def
-
>
dependency
(
)
)
continue
;
if
(
!
def
-
>
getAliasSet
(
)
.
isLoad
(
)
)
continue
;
JitSpewHeader
(
JitSpew_AliasSummaries
)
;
print
.
printf
(
"
"
)
;
MDefinition
:
:
PrintOpcodeName
(
print
def
-
>
op
(
)
)
;
print
.
printf
(
"
%
d
marked
depending
on
"
def
-
>
id
(
)
)
;
MDefinition
:
:
PrintOpcodeName
(
print
def
-
>
dependency
(
)
-
>
op
(
)
)
;
print
.
printf
(
"
%
d
\
n
"
def
-
>
dependency
(
)
-
>
id
(
)
)
;
}
}
}
#
endif
}
}
}
