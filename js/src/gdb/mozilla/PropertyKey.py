import
mozilla
.
prettyprinters
import
mozilla
.
Root
from
mozilla
.
prettyprinters
import
pretty_printer
mozilla
.
prettyprinters
.
clear_module_printers
(
__name__
)
pretty_printer
(
'
JS
:
:
PropertyKey
'
)
class
PropertyKey
(
object
)
:
    
TYPE_STRING
=
0x0
    
TYPE_INT
=
0x1
    
TYPE_VOID
=
0x2
    
TYPE_SYMBOL
=
0x4
    
TYPE_EMPTY
=
0x6
    
TYPE_MASK
=
0x7
    
def
__init__
(
self
value
cache
)
:
        
self
.
value
=
value
        
self
.
cache
=
cache
        
self
.
concrete_type
=
self
.
value
.
type
.
strip_typedefs
(
)
    
def
to_string
(
self
)
:
        
bits
=
self
.
value
[
'
asBits
'
]
        
tag
=
bits
&
PropertyKey
.
TYPE_MASK
        
if
tag
=
=
PropertyKey
.
TYPE_STRING
:
            
body
=
bits
.
cast
(
self
.
cache
.
JSString_ptr_t
)
        
elif
tag
&
PropertyKey
.
TYPE_INT
:
            
body
=
bits
>
>
1
        
elif
tag
=
=
PropertyKey
.
TYPE_VOID
:
            
return
"
JSID_VOID
"
        
elif
tag
=
=
PropertyKey
.
TYPE_SYMBOL
:
            
body
=
(
(
bits
&
~
PropertyKey
.
TYPE_MASK
)
                    
.
cast
(
self
.
cache
.
JSSymbol_ptr_t
)
)
        
elif
tag
=
=
PropertyKey
.
TYPE_EMPTY
:
            
return
"
JSID_EMPTY
"
        
else
:
            
body
=
"
<
unrecognized
>
"
        
return
'
jsid
(
%
s
)
'
%
(
body
)
pretty_printer
(
'
JS
:
:
Rooted
<
long
>
'
)
def
RootedPropertyKey
(
value
cache
)
:
    
return
mozilla
.
Root
.
Rooted
(
value
cache
PropertyKey
)
pretty_printer
(
'
JS
:
:
Handle
<
long
>
'
)
def
HandlePropertyKey
(
value
cache
)
:
    
return
mozilla
.
Root
.
Handle
(
value
cache
PropertyKey
)
pretty_printer
(
'
JS
:
:
MutableHandle
<
long
>
'
)
def
MutableHandlePropertyKey
(
value
cache
)
:
    
return
mozilla
.
Root
.
MutableHandle
(
value
cache
PropertyKey
)
