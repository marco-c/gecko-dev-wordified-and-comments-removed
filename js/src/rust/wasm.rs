#
[
no_mangle
]
pub
unsafe
extern
"
C
"
fn
wasm_text_to_binary
(
text
:
*
const
u16
text_len
:
usize
out_bytes
:
*
mut
*
mut
u8
out_bytes_len
:
*
mut
usize
out_error
:
*
mut
*
mut
u8
out_error_len
:
*
mut
usize
)
-
>
bool
{
let
text_slice
=
std
:
:
slice
:
:
from_raw_parts
(
text
text_len
)
;
let
text
=
String
:
:
from_utf16_lossy
(
text_slice
)
;
match
text_to_binary
(
&
text
)
{
Ok
(
bytes
)
=
>
{
let
bytes_box
=
bytes
.
into_boxed_slice
(
)
;
let
bytes_slice
=
Box
:
:
leak
(
bytes_box
)
;
out_bytes
.
write
(
bytes_slice
.
as_mut_ptr
(
)
)
;
out_bytes_len
.
write
(
bytes_slice
.
len
(
)
)
;
true
}
Err
(
error
)
=
>
{
let
error
=
Box
:
:
leak
(
format
!
(
"
{
}
\
0
"
error
)
.
into_boxed_str
(
)
)
;
out_error
.
write
(
error
.
as_mut_ptr
(
)
)
;
out_error_len
.
write
(
error
.
len
(
)
)
;
false
}
}
}
fn
text_to_binary
(
text
:
&
str
)
-
>
Result
<
Vec
<
u8
>
wast
:
:
Error
>
{
let
mut
lexer
=
wast
:
:
lexer
:
:
Lexer
:
:
new
(
text
)
;
lexer
.
allow_confusing_unicode
(
true
)
;
let
buf
=
wast
:
:
parser
:
:
ParseBuffer
:
:
new_with_lexer
(
lexer
)
?
;
let
mut
ast
=
wast
:
:
parser
:
:
parse
:
:
<
wast
:
:
Wat
>
(
&
buf
)
?
;
return
ast
.
encode
(
)
;
}
