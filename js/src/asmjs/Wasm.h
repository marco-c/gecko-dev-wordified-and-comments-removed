#
ifndef
wasm_h
#
define
wasm_h
#
include
"
NamespaceImports
.
h
"
#
include
"
gc
/
Rooting
.
h
"
#
include
"
js
/
Class
.
h
"
namespace
js
{
class
TypedArrayObject
;
namespace
wasm
{
bool
HasCompilerSupport
(
ExclusiveContext
*
cx
)
;
static
const
unsigned
PageSize
=
64
*
1024
;
#
ifdef
ASMJS_MAY_USE_SIGNAL_HANDLERS_FOR_OOB
static
const
uint64_t
Uint32Range
=
uint64_t
(
UINT32_MAX
)
+
1
;
static
const
uint64_t
MappedSize
=
2
*
Uint32Range
+
PageSize
;
#
endif
bool
Eval
(
JSContext
*
cx
Handle
<
TypedArrayObject
*
>
code
HandleObject
importObj
MutableHandleObject
exportObj
)
;
}
extern
const
Class
WasmClass
;
JSObject
*
InitWasmClass
(
JSContext
*
cx
HandleObject
global
)
;
}
#
endif
