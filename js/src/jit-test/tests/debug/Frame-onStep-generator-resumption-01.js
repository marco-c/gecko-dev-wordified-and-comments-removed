let
g
=
newGlobal
(
{
newCompartment
:
true
}
)
;
g
.
eval
(
function
*
f
(
)
{
yield
1
;
}
)
;
function
test
(
ttl
)
{
let
dbg
=
new
Debugger
(
g
)
;
let
exiting
=
false
;
let
done
=
false
;
dbg
.
onEnterFrame
=
frame
=
>
{
assertEq
(
frame
.
callee
.
name
"
f
"
)
;
frame
.
onEnterFrame
=
undefined
;
frame
.
onStep
=
(
)
=
>
{
if
(
ttl
=
=
0
)
{
exiting
=
true
;
return
{
return
:
"
ponies
"
}
;
}
ttl
-
-
;
}
;
frame
.
onPop
=
completion
=
>
{
if
(
!
exiting
)
done
=
true
;
}
;
}
;
let
result
=
g
.
f
(
)
;
if
(
done
)
assertEq
(
result
instanceof
g
.
f
true
)
;
else
assertEq
(
result
"
ponies
"
)
;
dbg
.
enabled
=
false
;
return
done
;
}
for
(
let
ttl
=
0
;
!
test
(
ttl
)
;
ttl
+
+
)
{
}
