function
runTest
(
script
expected
)
{
let
g
=
newGlobal
(
)
;
g
.
eval
(
script
)
;
let
dbg
=
new
Debugger
(
g
)
;
let
log
=
[
]
;
dbg
.
onEnterFrame
=
frame
=
>
{
let
previousLine
=
undefined
;
frame
.
onStep
=
function
(
)
{
let
line
=
this
.
script
.
getOffsetLocation
(
this
.
offset
)
.
lineNumber
;
if
(
line
!
=
previousLine
)
{
log
.
push
(
line
)
;
previousLine
=
line
;
}
}
;
dbg
.
onEnterFrame
=
undefined
;
}
;
g
.
f
(
)
;
assertEq
(
log
.
join
(
"
"
)
expected
.
join
(
"
"
)
)
;
}
runTest
(
\
var
f
=
(
function
(
)
{
/
/
line
1
let
x
=
1
;
/
/
line
2
funcb
(
"
funcb
"
)
;
/
/
line
3
function
funcb
(
msg
)
{
/
/
line
4
console
.
log
(
msg
)
}
}
)
;
/
/
line
7
[
2
3
7
]
)
;
runTest
(
\
function
f
(
)
{
/
/
1
var
x
=
0
;
/
/
2
a
(
)
;
/
/
3
function
a
(
)
{
/
/
5
x
+
=
1
;
/
/
6
}
/
/
7
class
Car
{
}
/
/
8
return
x
;
/
/
9
}
/
/
10
[
2
3
8
9
10
]
)
;
