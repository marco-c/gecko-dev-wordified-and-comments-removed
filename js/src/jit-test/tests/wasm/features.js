let
{
release_or_beta
}
=
getBuildConfiguration
(
)
;
let
nightly
=
!
release_or_beta
;
let
nightlyOnlyFeatures
=
[
[
'
gc
'
wasmGcEnabled
(
)
(
module
(
type
s
(
struct
)
)
(
func
(
param
(
ref
opt
s
)
)
)
)
]
[
'
simd
'
wasmSimdSupported
(
)
(
module
(
memory
1
1
)
(
func
i32
.
const
0
i8x16
.
splat
drop
)
)
]
]
;
for
(
let
[
name
enabled
test
]
of
nightlyOnlyFeatures
)
{
if
(
enabled
)
{
assertEq
(
nightly
true
{
name
}
must
be
enabled
only
on
nightly
)
;
wasmEvalText
(
test
)
;
}
else
{
assertErrorMessage
(
(
)
=
>
wasmEvalText
(
test
)
WebAssembly
.
CompileError
/
.
/
)
;
}
}
let
releasedFeatures
=
[
[
'
multi
-
value
'
wasmMultiValueEnabled
(
)
(
module
(
func
(
result
i32
i32
)
i32
.
const
0
i32
.
const
0
)
)
]
[
'
threads
'
wasmThreadsSupported
(
)
(
module
(
memory
1
1
shared
)
)
]
[
'
reference
-
types
'
wasmReftypesEnabled
(
)
(
module
(
func
(
param
externref
)
)
)
]
]
;
for
(
let
[
name
enabled
test
]
of
releasedFeatures
)
{
if
(
release_or_beta
)
{
assertEq
(
enabled
true
{
name
}
must
be
enabled
on
release
and
beta
)
;
wasmEvalText
(
test
)
;
}
}
