let
0
=
instantiate
(
(
module
(
func
(
export
"
f32x4
.
pmin
"
)
(
param
v128
v128
)
(
result
v128
)
(
f32x4
.
pmin
(
local
.
get
0
)
(
local
.
get
1
)
)
)
(
func
(
export
"
f32x4
.
pmax
"
)
(
param
v128
v128
)
(
result
v128
)
(
f32x4
.
pmax
(
local
.
get
0
)
(
local
.
get
1
)
)
)
)
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
0
0
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1
1
1
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmin
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xc0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
0
0
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1
1
1
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
0x0
0x0
0xc0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
0x0
0x0
0xc0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
0x0
0x0
0xa0
0x7f
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
0
0
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
value
(
"
f32
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
-
0
-
0
-
0
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
value
(
"
f32
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
-
0
.
000000000000000000000000000000000000000000001
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
-
0
.
000000000000000000000000000000000000011754944
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
value
(
"
f32
"
-
0
.
000000000000000000000000000000000000011754944
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
5
0
.
5
0
.
5
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
value
(
"
f32
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
0
.
5
-
0
.
5
-
0
.
5
-
0
.
5
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
value
(
"
f32
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1
1
1
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
value
(
"
f32
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
1
-
1
-
1
-
1
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
value
(
"
f32
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
6
.
2831855
6
.
2831855
6
.
2831855
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
value
(
"
f32
"
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
-
6
.
2831855
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
value
(
"
f32
"
-
6
.
2831855
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
value
(
"
f32
"
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
-
340282350000000000000000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
value
(
"
f32
"
-
340282350000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
Infinity
Infinity
Infinity
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
value
(
"
f32
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
-
Infinity
-
Infinity
-
Infinity
-
Infinity
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
value
(
"
f32
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
123456790
123456790
123456790
123456790
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
value
(
"
f32
"
123456790
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
1234567900000000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
value
(
"
f32
"
1234567900000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
0
.
000000000012345679
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
value
(
"
f32
"
0
.
000000000012345679
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
81985530000000000
81985530000000000
81985530000000000
81985530000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
value
(
"
f32
"
81985530000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
42984030000000000000000
42984030000000000000000
42984030000000000000000
42984030000000000000000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
value
(
"
f32
"
42984030000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32x4
.
pmax
[
f32x4
(
[
156374990000
156374990000
156374990000
156374990000
]
)
bytes
(
"
v128
"
[
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
0x0
0x0
0xa0
0xff
]
)
]
)
[
new
F32x4Pattern
(
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
value
(
"
f32
"
156374990000
)
)
]
)
;
assert_malformed
(
(
)
=
>
instantiate
(
(
memory
1
)
(
func
(
result
v128
)
(
i8x16
.
pmin
(
v128
.
const
i32x4
0
0
0
0
)
(
v128
.
const
i32x4
0
0
0
0
)
)
)
)
unknown
operator
)
;
assert_malformed
(
(
)
=
>
instantiate
(
(
memory
1
)
(
func
(
result
v128
)
(
i8x16
.
pmax
(
v128
.
const
i32x4
0
0
0
0
)
(
v128
.
const
i32x4
0
0
0
0
)
)
)
)
unknown
operator
)
;
assert_malformed
(
(
)
=
>
instantiate
(
(
memory
1
)
(
func
(
result
v128
)
(
i16x8
.
pmin
(
v128
.
const
i32x4
0
0
0
0
)
(
v128
.
const
i32x4
0
0
0
0
)
)
)
)
unknown
operator
)
;
assert_malformed
(
(
)
=
>
instantiate
(
(
memory
1
)
(
func
(
result
v128
)
(
i16x8
.
pmax
(
v128
.
const
i32x4
0
0
0
0
)
(
v128
.
const
i32x4
0
0
0
0
)
)
)
)
unknown
operator
)
;
assert_malformed
(
(
)
=
>
instantiate
(
(
memory
1
)
(
func
(
result
v128
)
(
i32x4
.
pmin
(
v128
.
const
i32x4
0
0
0
0
)
(
v128
.
const
i32x4
0
0
0
0
)
)
)
)
unknown
operator
)
;
assert_malformed
(
(
)
=
>
instantiate
(
(
memory
1
)
(
func
(
result
v128
)
(
i32x4
.
pmax
(
v128
.
const
i32x4
0
0
0
0
)
(
v128
.
const
i32x4
0
0
0
0
)
)
)
)
unknown
operator
)
;
assert_malformed
(
(
)
=
>
instantiate
(
(
memory
1
)
(
func
(
result
v128
)
(
i64x2
.
pmin
(
v128
.
const
i32x4
0
0
0
0
)
(
v128
.
const
i32x4
0
0
0
0
)
)
)
)
unknown
operator
)
;
assert_malformed
(
(
)
=
>
instantiate
(
(
memory
1
)
(
func
(
result
v128
)
(
i64x2
.
pmax
(
v128
.
const
i32x4
0
0
0
0
)
(
v128
.
const
i32x4
0
0
0
0
)
)
)
)
unknown
operator
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
(
result
v128
)
(
f32x4
.
pmin
(
i32
.
const
0
)
(
f32
.
const
0
.
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
(
result
v128
)
(
f32x4
.
pmax
(
i32
.
const
0
)
(
f32
.
const
0
.
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f32x4
.
pmin
-
1st
-
arg
-
empty
(
result
v128
)
(
f32x4
.
pmin
(
v128
.
const
f32x4
0
0
0
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f32x4
.
pmin
-
arg
-
empty
(
result
v128
)
(
f32x4
.
pmin
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f32x4
.
pmax
-
1st
-
arg
-
empty
(
result
v128
)
(
f32x4
.
pmax
(
v128
.
const
f32x4
0
0
0
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f32x4
.
pmax
-
arg
-
empty
(
result
v128
)
(
f32x4
.
pmax
)
)
)
)
type
mismatch
)
;
