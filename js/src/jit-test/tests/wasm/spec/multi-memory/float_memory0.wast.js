let
0
=
instantiate
(
(
module
(
memory
0
0
)
(
memory
0
0
)
(
memory
0
0
)
(
memory
m
(
data
"
\
\
00
\
\
00
\
\
a0
\
\
7f
"
)
)
(
memory
0
0
)
(
memory
0
0
)
(
func
(
export
"
f32
.
load
"
)
(
result
f32
)
(
f32
.
load
m
(
i32
.
const
0
)
)
)
(
func
(
export
"
i32
.
load
"
)
(
result
i32
)
(
i32
.
load
m
(
i32
.
const
0
)
)
)
(
func
(
export
"
f32
.
store
"
)
(
f32
.
store
m
(
i32
.
const
0
)
(
f32
.
const
nan
:
0x200000
)
)
)
(
func
(
export
"
i32
.
store
"
)
(
i32
.
store
m
(
i32
.
const
0
)
(
i32
.
const
0x7fa00000
)
)
)
(
func
(
export
"
reset
"
)
(
i32
.
store
m
(
i32
.
const
0
)
(
i32
.
const
0
)
)
)
)
)
;
assert_return
(
(
)
=
>
invoke
(
0
i32
.
load
[
]
)
[
value
(
"
i32
"
2141192192
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32
.
load
[
]
)
[
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
]
)
;
invoke
(
0
reset
[
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
i32
.
load
[
]
)
[
value
(
"
i32
"
0
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32
.
load
[
]
)
[
value
(
"
f32
"
0
)
]
)
;
invoke
(
0
f32
.
store
[
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
i32
.
load
[
]
)
[
value
(
"
i32
"
2141192192
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32
.
load
[
]
)
[
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
]
)
;
invoke
(
0
reset
[
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
i32
.
load
[
]
)
[
value
(
"
i32
"
0
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32
.
load
[
]
)
[
value
(
"
f32
"
0
)
]
)
;
invoke
(
0
i32
.
store
[
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
i32
.
load
[
]
)
[
value
(
"
i32
"
2141192192
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f32
.
load
[
]
)
[
bytes
(
"
f32
"
[
0x0
0x0
0xa0
0x7f
]
)
]
)
;
let
1
=
instantiate
(
(
module
(
memory
0
0
)
(
memory
m
(
data
"
\
\
00
\
\
00
\
\
00
\
\
00
\
\
00
\
\
00
\
\
f4
\
\
7f
"
)
)
(
func
(
export
"
f64
.
load
"
)
(
result
f64
)
(
f64
.
load
m
(
i32
.
const
0
)
)
)
(
func
(
export
"
i64
.
load
"
)
(
result
i64
)
(
i64
.
load
m
(
i32
.
const
0
)
)
)
(
func
(
export
"
f64
.
store
"
)
(
f64
.
store
m
(
i32
.
const
0
)
(
f64
.
const
nan
:
0x4000000000000
)
)
)
(
func
(
export
"
i64
.
store
"
)
(
i64
.
store
m
(
i32
.
const
0
)
(
i64
.
const
0x7ff4000000000000
)
)
)
(
func
(
export
"
reset
"
)
(
i64
.
store
m
(
i32
.
const
0
)
(
i64
.
const
0
)
)
)
)
)
;
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
]
)
[
value
(
"
i64
"
9219994337134247936n
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64
.
load
[
]
)
[
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
;
invoke
(
1
reset
[
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
]
)
[
value
(
"
i64
"
0n
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64
.
load
[
]
)
[
value
(
"
f64
"
0
)
]
)
;
invoke
(
1
f64
.
store
[
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
]
)
[
value
(
"
i64
"
9219994337134247936n
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64
.
load
[
]
)
[
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
;
invoke
(
1
reset
[
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
]
)
[
value
(
"
i64
"
0n
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64
.
load
[
]
)
[
value
(
"
f64
"
0
)
]
)
;
invoke
(
1
i64
.
store
[
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
i64
.
load
[
]
)
[
value
(
"
i64
"
9219994337134247936n
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64
.
load
[
]
)
[
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
;
