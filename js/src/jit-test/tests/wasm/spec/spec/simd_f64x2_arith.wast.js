let
0
=
instantiate
(
(
module
(
func
(
export
"
f64x2
.
add
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
add
(
local
.
get
0
)
(
local
.
get
1
)
)
)
(
func
(
export
"
f64x2
.
sub
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
sub
(
local
.
get
0
)
(
local
.
get
1
)
)
)
(
func
(
export
"
f64x2
.
mul
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
mul
(
local
.
get
0
)
(
local
.
get
1
)
)
)
(
func
(
export
"
f64x2
.
div
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
div
(
local
.
get
0
)
(
local
.
get
1
)
)
)
(
func
(
export
"
f64x2
.
neg
"
)
(
param
v128
)
(
result
v128
)
(
f64x2
.
neg
(
local
.
get
0
)
)
)
(
func
(
export
"
f64x2
.
sqrt
"
)
(
param
v128
)
(
result
v128
)
(
f64x2
.
sqrt
(
local
.
get
0
)
)
)
)
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
.
5
)
value
(
"
f64
"
1
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
783185307179586
)
value
(
"
f64
"
6
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
5
.
783185307179586
)
value
(
"
f64
"
-
5
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
.
5
)
value
(
"
f64
"
-
1
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5
.
783185307179586
)
value
(
"
f64
"
5
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
783185307179586
)
value
(
"
f64
"
-
6
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
.
5
)
value
(
"
f64
"
1
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2
)
value
(
"
f64
"
2
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
7
.
283185307179586
)
value
(
"
f64
"
7
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
5
.
283185307179586
)
value
(
"
f64
"
-
5
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
.
5
)
value
(
"
f64
"
-
1
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
2
)
value
(
"
f64
"
-
2
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5
.
283185307179586
)
value
(
"
f64
"
5
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
7
.
283185307179586
)
value
(
"
f64
"
-
7
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
783185307179586
)
value
(
"
f64
"
6
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5
.
783185307179586
)
value
(
"
f64
"
5
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
7
.
283185307179586
)
value
(
"
f64
"
7
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5
.
283185307179586
)
value
(
"
f64
"
5
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
12
.
566370614359172
)
value
(
"
f64
"
12
.
566370614359172
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
5
.
783185307179586
)
value
(
"
f64
"
-
5
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
783185307179586
)
value
(
"
f64
"
-
6
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
5
.
283185307179586
)
value
(
"
f64
"
-
5
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
7
.
283185307179586
)
value
(
"
f64
"
-
7
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
12
.
566370614359172
)
value
(
"
f64
"
-
12
.
566370614359172
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
123456789
123456789
]
)
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
246913578
)
value
(
"
f64
"
246913578
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2469135780000000000000000000
)
value
(
"
f64
"
2469135780000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2469135780000000000000000000
)
value
(
"
f64
"
2469135780000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000246913578
)
value
(
"
f64
"
0
.
0000000000246913578
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
123456789
123456789
]
)
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
246913578
)
value
(
"
f64
"
246913578
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2469135780000000000000000000
)
value
(
"
f64
"
2469135780000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2469135780000000000000000000
)
value
(
"
f64
"
2469135780000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000246913578
)
value
(
"
f64
"
0
.
0000000000246913578
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
246913578
.
02469134
)
value
(
"
f64
"
246913578
.
02469134
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2469135780246913700000000000
)
value
(
"
f64
"
2469135780246913700000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2469135780246913700000000000
)
value
(
"
f64
"
2469135780246913700000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000024691357802469137
)
value
(
"
f64
"
0
.
000000000024691357802469137
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2750977865078623000000000
)
value
(
"
f64
"
2750977865078623000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1442304682926341000000000000000
)
value
(
"
f64
"
1442304682926341000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1442304682926341000000000000000
)
value
(
"
f64
"
1442304682926341000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5247073869855161000
)
value
(
"
f64
"
5247073869855161000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2750977865078623000000000
)
value
(
"
f64
"
2750977865078623000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1442304682926341000000000000000
)
value
(
"
f64
"
1442304682926341000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1442304682926341000000000000000
)
value
(
"
f64
"
1442304682926341000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5247073869855161000
)
value
(
"
f64
"
5247073869855161000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2750977865078623000000000
)
value
(
"
f64
"
2750977865078623000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1442304682926341000000000000000
)
value
(
"
f64
"
1442304682926341000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1442304682926341000000000000000
)
value
(
"
f64
"
1442304682926341000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
add
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5247073869855161000
)
value
(
"
f64
"
5247073869855161000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
.
5
)
value
(
"
f64
"
1
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
5
.
783185307179586
)
value
(
"
f64
"
-
5
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
783185307179586
)
value
(
"
f64
"
6
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
.
5
)
value
(
"
f64
"
-
1
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
783185307179586
)
value
(
"
f64
"
-
6
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5
.
783185307179586
)
value
(
"
f64
"
5
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
.
5
)
value
(
"
f64
"
1
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2
)
value
(
"
f64
"
2
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
5
.
283185307179586
)
value
(
"
f64
"
-
5
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
7
.
283185307179586
)
value
(
"
f64
"
7
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
.
5
)
value
(
"
f64
"
-
1
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
2
)
value
(
"
f64
"
-
2
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
7
.
283185307179586
)
value
(
"
f64
"
-
7
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5
.
283185307179586
)
value
(
"
f64
"
5
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5
.
783185307179586
)
value
(
"
f64
"
5
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
783185307179586
)
value
(
"
f64
"
6
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5
.
283185307179586
)
value
(
"
f64
"
5
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
7
.
283185307179586
)
value
(
"
f64
"
7
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
12
.
566370614359172
)
value
(
"
f64
"
12
.
566370614359172
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
783185307179586
)
value
(
"
f64
"
-
6
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
5
.
783185307179586
)
value
(
"
f64
"
-
5
.
783185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
7
.
283185307179586
)
value
(
"
f64
"
-
7
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
5
.
283185307179586
)
value
(
"
f64
"
-
5
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
12
.
566370614359172
)
value
(
"
f64
"
-
12
.
566370614359172
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507201
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002225073858507202
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
123456789
123456789
]
)
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
123456789
123456789
]
)
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sub
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
3
.
9999999999999996
)
value
(
"
f64
"
3
.
9999999999999996
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
3
.
9999999999999996
)
value
(
"
f64
"
-
3
.
9999999999999996
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
3
.
9999999999999996
)
value
(
"
f64
"
-
3
.
9999999999999996
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
3
.
9999999999999996
)
value
(
"
f64
"
3
.
9999999999999996
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
25
)
value
(
"
f64
"
0
.
25
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
25
)
value
(
"
f64
"
-
0
.
25
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
3
.
141592653589793
)
value
(
"
f64
"
3
.
141592653589793
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
3
.
141592653589793
)
value
(
"
f64
"
-
3
.
141592653589793
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011125369292536007
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
25
)
value
(
"
f64
"
-
0
.
25
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
25
)
value
(
"
f64
"
0
.
25
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
3
.
141592653589793
)
value
(
"
f64
"
-
3
.
141592653589793
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
3
.
141592653589793
)
value
(
"
f64
"
3
.
141592653589793
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
3
.
141592653589793
)
value
(
"
f64
"
3
.
141592653589793
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
3
.
141592653589793
)
value
(
"
f64
"
-
3
.
141592653589793
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
39
.
47841760435743
)
value
(
"
f64
"
39
.
47841760435743
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
39
.
47841760435743
)
value
(
"
f64
"
-
39
.
47841760435743
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013980551375161837
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
3
.
141592653589793
)
value
(
"
f64
"
-
3
.
141592653589793
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
3
.
141592653589793
)
value
(
"
f64
"
3
.
141592653589793
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
39
.
47841760435743
)
value
(
"
f64
"
-
39
.
47841760435743
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
39
.
47841760435743
)
value
(
"
f64
"
39
.
47841760435743
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
3
.
9999999999999996
)
value
(
"
f64
"
3
.
9999999999999996
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
3
.
9999999999999996
)
value
(
"
f64
"
-
3
.
9999999999999996
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000008881784197001251
)
value
(
"
f64
"
0
.
0000000000000008881784197001251
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000008881784197001251
)
value
(
"
f64
"
0
.
0000000000000008881784197001251
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
3
.
9999999999999996
)
value
(
"
f64
"
-
3
.
9999999999999996
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
3
.
9999999999999996
)
value
(
"
f64
"
3
.
9999999999999996
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000000008881784197001251
)
value
(
"
f64
"
-
0
.
0000000000000008881784197001251
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000000008881784197001251
)
value
(
"
f64
"
-
0
.
0000000000000008881784197001251
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000008881784197001251
)
value
(
"
f64
"
0
.
0000000000000008881784197001251
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000000008881784197001251
)
value
(
"
f64
"
-
0
.
0000000000000008881784197001251
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000008881784197001251
)
value
(
"
f64
"
0
.
0000000000000008881784197001251
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000000008881784197001251
)
value
(
"
f64
"
-
0
.
0000000000000008881784197001251
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
123456789
123456789
]
)
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
15241578750190520
)
value
(
"
f64
"
15241578750190520
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1524157875019052000000000000000000000000000000000000000
)
value
(
"
f64
"
1524157875019052000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1524157875019052000000000000000000000000000000000000000
)
value
(
"
f64
"
1524157875019052000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000000000001524157875019052
)
value
(
"
f64
"
0
.
0000000000000000000001524157875019052
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
123456789
123456789
]
)
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
15241578750190520
)
value
(
"
f64
"
15241578750190520
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1524157875019052000000000000000000000000000000000000000
)
value
(
"
f64
"
1524157875019052000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1524157875019052000000000000000000000000000000000000000
)
value
(
"
f64
"
1524157875019052000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000000000001524157875019052
)
value
(
"
f64
"
0
.
0000000000000000000001524157875019052
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
15241578753238834
)
value
(
"
f64
"
15241578753238834
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1524157875323883800000000000000000000000000000000000000
)
value
(
"
f64
"
1524157875323883800000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1524157875323883800000000000000000000000000000000000000
)
value
(
"
f64
"
1524157875323883800000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000000000001524157875323884
)
value
(
"
f64
"
0
.
0000000000000000000001524157875323884
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1891969803538134400000000000000000000000000000000
)
value
(
"
f64
"
1891969803538134400000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6882946048929205000000000000000000000
)
value
(
"
f64
"
6882946048929205000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1891969803538134400000000000000000000000000000000
)
value
(
"
f64
"
1891969803538134400000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6882946048929205000000000000000000000
)
value
(
"
f64
"
6882946048929205000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1891969803538134400000000000000000000000000000000
)
value
(
"
f64
"
1891969803538134400000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
value
(
"
f64
"
520060699597813300000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
mul
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6882946048929205000000000000000000000
)
value
(
"
f64
"
6882946048929205000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003541315033259774
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003541315033259774
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003541315033259774
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003541315033259774
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
4503599627370496
)
value
(
"
f64
"
4503599627370496
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
4503599627370496
)
value
(
"
f64
"
4503599627370496
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003541315033259774
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003541315033259774
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003541315033259774
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003541315033259774
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
4503599627370496
)
value
(
"
f64
"
-
4503599627370496
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
4503599627370496
)
value
(
"
f64
"
-
4503599627370496
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
22471164185778950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
22471164185778950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
22471164185778950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
22471164185778950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
07957747154594767
)
value
(
"
f64
"
0
.
07957747154594767
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
07957747154594767
)
value
(
"
f64
"
-
0
.
07957747154594767
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002781342323134
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002781342323134
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002781342323134
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002781342323134
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
22471164185778950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
22471164185778950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
22471164185778950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
22471164185778950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
07957747154594767
)
value
(
"
f64
"
-
0
.
07957747154594767
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
07957747154594767
)
value
(
"
f64
"
0
.
07957747154594767
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002781342323134
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002781342323134
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002781342323134
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002781342323134
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
44942328371557900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
44942328371557900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
44942328371557900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
44942328371557900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2
)
value
(
"
f64
"
2
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
2
)
value
(
"
f64
"
-
2
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
15915494309189535
)
value
(
"
f64
"
0
.
15915494309189535
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
15915494309189535
)
value
(
"
f64
"
-
0
.
15915494309189535
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005562684646268003
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005562684646268003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005562684646268003
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005562684646268003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
44942328371557900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
44942328371557900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
44942328371557900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
44942328371557900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
2
)
value
(
"
f64
"
-
2
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2
)
value
(
"
f64
"
2
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
15915494309189535
)
value
(
"
f64
"
-
0
.
15915494309189535
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
15915494309189535
)
value
(
"
f64
"
0
.
15915494309189535
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005562684646268003
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005562684646268003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005562684646268003
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005562684646268003
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
12
.
566370614359172
)
value
(
"
f64
"
12
.
566370614359172
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
12
.
566370614359172
)
value
(
"
f64
"
-
12
.
566370614359172
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000349513784379046
)
value
(
"
f64
"
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000349513784379046
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000349513784379046
)
value
(
"
f64
"
-
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000349513784379046
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
12
.
566370614359172
)
value
(
"
f64
"
-
12
.
566370614359172
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
12
.
566370614359172
)
value
(
"
f64
"
12
.
566370614359172
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000349513784379046
)
value
(
"
f64
"
-
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000349513784379046
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000349513784379046
)
value
(
"
f64
"
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000349513784379046
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
28611174857570280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
28611174857570280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
28611174857570280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
28611174857570280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
28611174857570280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
28611174857570280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
28611174857570280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
28611174857570280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000002220446049250313
)
value
(
"
f64
"
0
.
0000000000000002220446049250313
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000000002220446049250313
)
value
(
"
f64
"
-
0
.
0000000000000002220446049250313
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000002220446049250313
)
value
(
"
f64
"
0
.
0000000000000002220446049250313
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000000002220446049250313
)
value
(
"
f64
"
-
0
.
0000000000000002220446049250313
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
value
(
"
f64
"
-
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
-
0
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
5
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
1
-
1
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
Infinity
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
123456789
123456789
]
)
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
123456789
123456789
]
)
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
div
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014916681462400413
)
value
(
"
f64
"
0
.
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014916681462400413
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
7071067811865476
)
value
(
"
f64
"
0
.
7071067811865476
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2
.
5066282746310002
)
value
(
"
f64
"
2
.
5066282746310002
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
13407807929942596000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
13407807929942596000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022227587494850775
)
value
(
"
f64
"
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022227587494850775
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022227587494850775
)
value
(
"
f64
"
0
.
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022227587494850775
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
canonical_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
arithmetic_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
11111
.
111060555555
)
value
(
"
f64
"
11111
.
111060555555
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
35136418286444
.
62
)
value
(
"
f64
"
35136418286444
.
62
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
35136418286444
.
62
)
value
(
"
f64
"
35136418286444
.
62
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000035136418286444623
)
value
(
"
f64
"
0
.
0000035136418286444623
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
11111
.
111060555555
)
value
(
"
f64
"
11111
.
111060555555
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
35136418286444
.
62
)
value
(
"
f64
"
35136418286444
.
62
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
35136418286444
.
62
)
value
(
"
f64
"
35136418286444
.
62
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
0000035136418286444623
)
value
(
"
f64
"
0
.
0000035136418286444623
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
11111
.
11106111111
)
value
(
"
f64
"
11111
.
11106111111
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
35136418288201
.
445
)
value
(
"
f64
"
35136418288201
.
445
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
35136418288201
.
445
)
value
(
"
f64
"
35136418288201
.
445
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000003513641828820144
)
value
(
"
f64
"
0
.
000003513641828820144
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1172812402961
.
0667
)
value
(
"
f64
"
1172812402961
.
0667
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
849206889670103
)
value
(
"
f64
"
849206889670103
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
849206889670103
)
value
(
"
f64
"
849206889670103
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1619733599
.
9872265
)
value
(
"
f64
"
1619733599
.
9872265
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1172812402961
.
0667
)
value
(
"
f64
"
1172812402961
.
0667
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
849206889670103
)
value
(
"
f64
"
849206889670103
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
849206889670103
)
value
(
"
f64
"
849206889670103
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1619733599
.
9872265
)
value
(
"
f64
"
1619733599
.
9872265
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1172812402961
.
0667
)
value
(
"
f64
"
1172812402961
.
0667
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
849206889670103
)
value
(
"
f64
"
849206889670103
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
849206889670103
)
value
(
"
f64
"
849206889670103
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
sqrt
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1619733599
.
9872265
)
value
(
"
f64
"
1619733599
.
9872265
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
0
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
)
value
(
"
f64
"
-
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
-
0
-
0
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
)
value
(
"
f64
"
0
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
value
(
"
f64
"
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
0
.
5
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
5
)
value
(
"
f64
"
-
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
-
0
.
5
-
0
.
5
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
5
)
value
(
"
f64
"
0
.
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
-
1
-
1
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
6
.
283185307179586
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
.
283185307179586
)
value
(
"
f64
"
-
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
-
6
.
283185307179586
-
6
.
283185307179586
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
.
283185307179586
)
value
(
"
f64
"
6
.
283185307179586
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
value
(
"
f64
"
179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
value
(
"
f64
"
-
0
.
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
Infinity
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
Infinity
)
value
(
"
f64
"
-
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
-
Infinity
-
Infinity
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
Infinity
)
value
(
"
f64
"
Infinity
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
]
)
[
new
F64x2Pattern
(
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0xff
]
)
]
)
[
new
F64x2Pattern
(
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf8
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
]
)
[
new
F64x2Pattern
(
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
bytes
(
'
v128
'
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0xff
]
)
]
)
[
new
F64x2Pattern
(
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
bytes
(
"
f64
"
[
0x0
0x0
0x0
0x0
0x0
0x0
0xf4
0x7f
]
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
123456789
)
value
(
"
f64
"
-
123456789
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1234567890000000000000000000
)
value
(
"
f64
"
-
1234567890000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1234567890000000000000000000
)
value
(
"
f64
"
-
1234567890000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000123456789
)
value
(
"
f64
"
-
0
.
0000000000123456789
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
123456789
123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
123456789
)
value
(
"
f64
"
-
123456789
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1234567890000000000000000000
)
value
(
"
f64
"
-
1234567890000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1234567890000000000000000000
1234567890000000000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1234567890000000000000000000
)
value
(
"
f64
"
-
1234567890000000000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
0
.
0000000000123456789
0
.
0000000000123456789
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
0000000000123456789
)
value
(
"
f64
"
-
0
.
0000000000123456789
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
123456789
.
01234567
123456789
.
01234567
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
123456789
.
01234567
)
value
(
"
f64
"
-
123456789
.
01234567
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1234567890123456900000000000
)
value
(
"
f64
"
-
1234567890123456900000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1234567890123456900000000000
1234567890123456900000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1234567890123456900000000000
)
value
(
"
f64
"
-
1234567890123456900000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
0
.
000000000012345678901234568
0
.
000000000012345678901234568
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
000000000012345678901234568
)
value
(
"
f64
"
-
0
.
000000000012345678901234568
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1375488932539311400000000
)
value
(
"
f64
"
-
1375488932539311400000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
721152341463170500000000000000
)
value
(
"
f64
"
-
721152341463170500000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
721152341463170500000000000000
)
value
(
"
f64
"
-
721152341463170500000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
2623536934927580700
)
value
(
"
f64
"
-
2623536934927580700
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1375488932539311400000000
)
value
(
"
f64
"
-
1375488932539311400000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
721152341463170500000000000000
)
value
(
"
f64
"
-
721152341463170500000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
721152341463170500000000000000
)
value
(
"
f64
"
-
721152341463170500000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
2623536934927580700
)
value
(
"
f64
"
-
2623536934927580700
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
1375488932539311400000000
1375488932539311400000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1375488932539311400000000
)
value
(
"
f64
"
-
1375488932539311400000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
721152341463170500000000000000
)
value
(
"
f64
"
-
721152341463170500000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
721152341463170500000000000000
721152341463170500000000000000
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
721152341463170500000000000000
)
value
(
"
f64
"
-
721152341463170500000000000000
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
0
f64x2
.
neg
[
f64x2
(
[
2623536934927580700
2623536934927580700
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
2623536934927580700
)
value
(
"
f64
"
-
2623536934927580700
)
)
]
)
;
let
1
=
instantiate
(
(
module
(
func
(
export
"
f64x2_add_arith
"
)
(
result
v128
)
(
f64x2
.
add
(
v128
.
const
f64x2
nan
:
0x8000000000000
1
.
0
)
(
v128
.
const
f64x2
nan
1
.
0
)
)
)
(
func
(
export
"
f64x2_div_mixed
"
)
(
result
v128
)
(
f64x2
.
div
(
v128
.
const
f64x2
nan
1
.
0
)
(
v128
.
const
f64x2
2
.
0
-
nan
:
0x8000000000000
)
)
)
(
func
(
export
"
f64x2_mul_mixed
"
)
(
result
v128
)
(
f64x2
.
mul
(
v128
.
const
f64x2
nan
:
0x8000000000000
1
.
0
)
(
v128
.
const
f64x2
2
.
0
nan
)
)
)
(
func
(
export
"
f64x2_neg_canon
"
)
(
result
v128
)
(
f64x2
.
neg
(
v128
.
const
f64x2
nan
1
.
0
)
)
)
(
func
(
export
"
f64x2_sqrt_canon
"
)
(
result
v128
)
(
f64x2
.
sqrt
(
v128
.
const
f64x2
4
.
0
-
nan
)
)
)
(
func
(
export
"
f64x2_sub_arith
"
)
(
result
v128
)
(
f64x2
.
sub
(
v128
.
const
f64x2
1
.
0
-
1
.
0
)
(
v128
.
const
f64x2
-
nan
1
.
0
)
)
)
)
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64x2_add_arith
[
]
)
[
new
F64x2Pattern
(
arithmetic_nan
value
(
"
f64
"
2
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64x2_div_mixed
[
]
)
[
new
F64x2Pattern
(
canonical_nan
arithmetic_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64x2_mul_mixed
[
]
)
[
new
F64x2Pattern
(
arithmetic_nan
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64x2_neg_canon
[
]
)
[
new
F64x2Pattern
(
canonical_nan
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64x2_sqrt_canon
[
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2
)
canonical_nan
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
1
f64x2_sub_arith
[
]
)
[
new
F64x2Pattern
(
canonical_nan
value
(
"
f64
"
-
2
)
)
]
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
(
result
v128
)
(
f64x2
.
neg
(
i64
.
const
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
(
result
v128
)
(
f64x2
.
sqrt
(
i64
.
const
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
(
result
v128
)
(
f64x2
.
add
(
i64
.
const
0
)
(
f64
.
const
0
.
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
(
result
v128
)
(
f64x2
.
sub
(
i64
.
const
0
)
(
f64
.
const
0
.
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
(
result
v128
)
(
f64x2
.
mul
(
i64
.
const
0
)
(
f64
.
const
0
.
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
(
result
v128
)
(
f64x2
.
div
(
i64
.
const
0
)
(
f64
.
const
0
.
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
neg
-
arg
-
empty
(
result
v128
)
(
f64x2
.
neg
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
sqrt
-
arg
-
empty
(
result
v128
)
(
f64x2
.
sqrt
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
add
-
1st
-
arg
-
empty
(
result
v128
)
(
f64x2
.
add
(
v128
.
const
f64x2
0
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
add
-
arg
-
empty
(
result
v128
)
(
f64x2
.
add
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
sub
-
1st
-
arg
-
empty
(
result
v128
)
(
f64x2
.
sub
(
v128
.
const
f64x2
0
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
sub
-
arg
-
empty
(
result
v128
)
(
f64x2
.
sub
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
mul
-
1st
-
arg
-
empty
(
result
v128
)
(
f64x2
.
mul
(
v128
.
const
f64x2
0
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
mul
-
arg
-
empty
(
result
v128
)
(
f64x2
.
mul
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
div
-
1st
-
arg
-
empty
(
result
v128
)
(
f64x2
.
div
(
v128
.
const
f64x2
0
0
)
)
)
)
)
type
mismatch
)
;
assert_invalid
(
(
)
=
>
instantiate
(
(
module
(
func
f64x2
.
div
-
arg
-
empty
(
result
v128
)
(
f64x2
.
div
)
)
)
)
type
mismatch
)
;
let
2
=
instantiate
(
(
module
(
func
(
export
"
add
-
sub
"
)
(
param
v128
v128
v128
)
(
result
v128
)
(
f64x2
.
add
(
f64x2
.
sub
(
local
.
get
0
)
(
local
.
get
1
)
)
(
local
.
get
2
)
)
)
(
func
(
export
"
div
-
add
"
)
(
param
v128
v128
v128
)
(
result
v128
)
(
f64x2
.
div
(
f64x2
.
add
(
local
.
get
0
)
(
local
.
get
1
)
)
(
local
.
get
2
)
)
)
(
func
(
export
"
div
-
mul
"
)
(
param
v128
v128
v128
)
(
result
v128
)
(
f64x2
.
div
(
f64x2
.
mul
(
local
.
get
0
)
(
local
.
get
1
)
)
(
local
.
get
2
)
)
)
(
func
(
export
"
div
-
sub
"
)
(
param
v128
v128
v128
)
(
result
v128
)
(
f64x2
.
div
(
f64x2
.
sub
(
local
.
get
0
)
(
local
.
get
1
)
)
(
local
.
get
2
)
)
)
(
func
(
export
"
mul
-
add
"
)
(
param
v128
v128
v128
)
(
result
v128
)
(
f64x2
.
mul
(
f64x2
.
add
(
local
.
get
0
)
(
local
.
get
1
)
)
(
local
.
get
2
)
)
)
(
func
(
export
"
mul
-
div
"
)
(
param
v128
v128
v128
)
(
result
v128
)
(
f64x2
.
mul
(
f64x2
.
div
(
local
.
get
0
)
(
local
.
get
1
)
)
(
local
.
get
2
)
)
)
(
func
(
export
"
mul
-
sub
"
)
(
param
v128
v128
v128
)
(
result
v128
)
(
f64x2
.
mul
(
f64x2
.
sub
(
local
.
get
0
)
(
local
.
get
1
)
)
(
local
.
get
2
)
)
)
(
func
(
export
"
sub
-
add
"
)
(
param
v128
v128
v128
)
(
result
v128
)
(
f64x2
.
sub
(
f64x2
.
add
(
local
.
get
0
)
(
local
.
get
1
)
)
(
local
.
get
2
)
)
)
(
func
(
export
"
add
-
neg
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
add
(
f64x2
.
neg
(
local
.
get
0
)
)
(
local
.
get
1
)
)
)
(
func
(
export
"
add
-
sqrt
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
add
(
f64x2
.
sqrt
(
local
.
get
0
)
)
(
local
.
get
1
)
)
)
(
func
(
export
"
div
-
neg
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
div
(
f64x2
.
neg
(
local
.
get
0
)
)
(
local
.
get
1
)
)
)
(
func
(
export
"
div
-
sqrt
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
div
(
f64x2
.
sqrt
(
local
.
get
0
)
)
(
local
.
get
1
)
)
)
(
func
(
export
"
mul
-
neg
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
mul
(
f64x2
.
neg
(
local
.
get
0
)
)
(
local
.
get
1
)
)
)
(
func
(
export
"
mul
-
sqrt
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
mul
(
f64x2
.
sqrt
(
local
.
get
0
)
)
(
local
.
get
1
)
)
)
(
func
(
export
"
sub
-
neg
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
sub
(
f64x2
.
neg
(
local
.
get
0
)
)
(
local
.
get
1
)
)
)
(
func
(
export
"
sub
-
sqrt
"
)
(
param
v128
v128
)
(
result
v128
)
(
f64x2
.
sub
(
f64x2
.
sqrt
(
local
.
get
0
)
)
(
local
.
get
1
)
)
)
)
)
;
assert_return
(
(
)
=
>
invoke
(
2
add
-
sub
[
f64x2
(
[
1
.
125
1
.
125
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
f64x2
(
[
0
.
125
0
.
125
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
)
value
(
"
f64
"
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
div
-
add
[
f64x2
(
[
1
.
125
1
.
125
]
)
f64x2
(
[
0
.
125
0
.
125
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
5
)
value
(
"
f64
"
5
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
div
-
mul
[
f64x2
(
[
1
.
125
1
.
125
]
)
f64x2
(
[
4
4
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
18
)
value
(
"
f64
"
18
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
div
-
sub
[
f64x2
(
[
1
.
125
1
.
125
]
)
f64x2
(
[
0
.
125
0
.
125
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
4
)
value
(
"
f64
"
4
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
mul
-
add
[
f64x2
(
[
1
.
25
1
.
25
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
375
)
value
(
"
f64
"
0
.
375
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
mul
-
div
[
f64x2
(
[
1
.
125
1
.
125
]
)
f64x2
(
[
0
.
125
0
.
125
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
2
.
25
)
value
(
"
f64
"
2
.
25
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
mul
-
sub
[
f64x2
(
[
1
.
125
1
.
125
]
)
f64x2
(
[
0
.
125
0
.
125
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
25
)
value
(
"
f64
"
0
.
25
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
sub
-
add
[
f64x2
(
[
1
.
125
1
.
125
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
f64x2
(
[
0
.
125
0
.
125
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
.
25
)
value
(
"
f64
"
1
.
25
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
add
-
neg
[
f64x2
(
[
1
.
125
1
.
125
]
)
f64x2
(
[
0
.
125
0
.
125
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
)
value
(
"
f64
"
-
1
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
add
-
sqrt
[
f64x2
(
[
2
.
25
2
.
25
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
.
75
)
value
(
"
f64
"
1
.
75
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
div
-
neg
[
f64x2
(
[
1
.
5
1
.
5
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
6
)
value
(
"
f64
"
-
6
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
div
-
sqrt
[
f64x2
(
[
2
.
25
2
.
25
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
6
)
value
(
"
f64
"
6
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
mul
-
neg
[
f64x2
(
[
1
.
5
1
.
5
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
0
.
375
)
value
(
"
f64
"
-
0
.
375
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
mul
-
sqrt
[
f64x2
(
[
2
.
25
2
.
25
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
0
.
375
)
value
(
"
f64
"
0
.
375
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
sub
-
neg
[
f64x2
(
[
1
.
125
1
.
125
]
)
f64x2
(
[
0
.
125
0
.
125
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
-
1
.
25
)
value
(
"
f64
"
-
1
.
25
)
)
]
)
;
assert_return
(
(
)
=
>
invoke
(
2
sub
-
sqrt
[
f64x2
(
[
2
.
25
2
.
25
]
)
f64x2
(
[
0
.
25
0
.
25
]
)
]
)
[
new
F64x2Pattern
(
value
(
"
f64
"
1
.
25
)
value
(
"
f64
"
1
.
25
)
)
]
)
;
