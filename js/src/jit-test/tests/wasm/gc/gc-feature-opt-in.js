var
bad_order
=
new
Uint8Array
(
[
0x00
0x61
0x73
0x6d
0x01
0x00
0x00
0x00
0x01
0x01
0x00
0x2a
0x01
0x01
]
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
bad_order
)
WebAssembly
.
CompileError
/
expected
custom
section
/
)
;
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
gc_feature_opt_in
1
)
)
)
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
gc_feature_opt_in
2
)
)
)
)
WebAssembly
.
CompileError
/
unsupported
version
of
the
gc
feature
/
)
;
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
gc_feature_opt_in
1
)
(
type
(
struct
(
field
i32
)
)
)
)
)
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
type
(
struct
(
field
i32
)
)
)
)
)
)
WebAssembly
.
CompileError
/
Structure
types
not
enabled
/
)
;
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
gc_feature_opt_in
1
)
(
type
(
func
(
param
anyref
)
)
)
)
)
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
type
(
func
(
param
anyref
)
)
)
)
)
)
WebAssembly
.
CompileError
/
reference
types
not
enabled
/
)
;
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
gc_feature_opt_in
1
)
(
type
(
func
(
result
anyref
)
)
)
)
)
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
type
(
func
(
result
anyref
)
)
)
)
)
)
WebAssembly
.
CompileError
/
reference
types
not
enabled
/
)
;
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
gc_feature_opt_in
1
)
(
func
(
result
i32
)
(
local
anyref
)
(
i32
.
const
0
)
)
)
)
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
func
(
result
i32
)
(
local
anyref
)
(
i32
.
const
0
)
)
)
)
)
WebAssembly
.
CompileError
/
reference
types
not
enabled
/
)
;
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
gc_feature_opt_in
1
)
(
global
(
mut
anyref
)
(
ref
.
null
anyref
)
)
)
)
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
global
(
mut
anyref
)
(
ref
.
null
anyref
)
)
)
)
)
WebAssembly
.
CompileError
/
reference
types
not
enabled
/
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
func
(
ref
.
null
anyref
)
)
)
)
)
WebAssembly
.
CompileError
/
unrecognized
opcode
/
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
func
ref
.
is_null
)
)
)
)
WebAssembly
.
CompileError
/
unrecognized
opcode
/
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
func
ref
.
eq
)
)
)
)
WebAssembly
.
CompileError
/
unrecognized
opcode
/
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
func
(
struct
.
new
0
)
)
)
)
)
WebAssembly
.
CompileError
/
unrecognized
opcode
/
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
func
(
struct
.
get
0
0
)
)
)
)
)
WebAssembly
.
CompileError
/
unrecognized
opcode
/
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
func
(
struct
.
set
0
0
)
)
)
)
)
WebAssembly
.
CompileError
/
unrecognized
opcode
/
)
;
assertErrorMessage
(
(
)
=
>
new
WebAssembly
.
Module
(
wasmTextToBinary
(
(
module
(
func
(
struct
.
narrow
anyref
anyref
)
)
)
)
)
WebAssembly
.
CompileError
/
unrecognized
opcode
/
)
;
