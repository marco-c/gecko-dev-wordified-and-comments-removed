let
VALUES
=
[
null
undefined
true
false
{
x
:
1337
}
[
"
abracadabra
"
]
1337
13
.
37
"
hi
"
Symbol
(
"
status
"
)
(
)
=
>
1337
]
;
for
(
let
v
of
VALUES
)
{
let
ins
=
wasmEvalText
(
(
module
(
gc_feature_opt_in
2
)
(
type
S
(
struct
(
field
S
.
x
(
mut
anyref
)
)
)
)
(
func
(
export
"
make
"
)
(
param
v
anyref
)
(
result
anyref
)
(
struct
.
new
S
(
get_local
v
)
)
)
)
)
;
let
x
=
ins
.
exports
.
make
(
v
)
;
}
for
(
let
v
of
VALUES
)
{
let
ins
=
wasmEvalText
(
(
module
(
gc_feature_opt_in
2
)
(
type
S
(
struct
(
field
S
.
x
(
mut
anyref
)
)
)
)
(
func
(
export
"
make
"
)
(
result
anyref
)
(
struct
.
new
S
(
ref
.
null
)
)
)
(
func
(
export
"
get
"
)
(
param
o
anyref
)
(
result
anyref
)
(
struct
.
get
S
0
(
struct
.
narrow
anyref
(
ref
S
)
(
get_local
o
)
)
)
)
)
)
;
let
x
=
ins
.
exports
.
make
(
)
;
}
for
(
let
v
of
VALUES
)
{
let
ins
=
wasmEvalText
(
(
module
(
gc_feature_opt_in
2
)
(
type
S
(
struct
(
field
S
.
x
(
mut
anyref
)
)
)
)
(
func
(
export
"
make
"
)
(
result
anyref
)
(
struct
.
new
S
(
ref
.
null
)
)
)
(
func
(
export
"
get
"
)
(
param
o
anyref
)
(
result
anyref
)
(
struct
.
get
S
0
(
struct
.
narrow
anyref
(
ref
S
)
(
get_local
o
)
)
)
)
)
)
;
let
constructor
=
ins
.
exports
.
make
(
)
.
constructor
;
}
