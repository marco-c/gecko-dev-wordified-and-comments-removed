if
(
!
wasmGcEnabled
(
)
)
quit
(
0
)
;
function
wasmCompile
(
text
)
{
return
new
WebAssembly
.
Module
(
wasmTextToBinary
(
text
)
)
;
}
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
x
i32
)
)
)
(
func
(
export
"
f
"
)
(
param
(
ref
box
)
)
(
unreachable
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
func
(
export
"
f
"
)
(
param
anyref
)
(
unreachable
)
)
)
)
"
object
"
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
x
i32
)
)
)
(
func
(
export
"
f
"
)
(
result
(
ref
box
)
)
(
ref
.
null
(
ref
box
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
func
(
export
"
f
"
)
(
result
anyref
)
(
ref
.
null
anyref
)
)
)
)
"
object
"
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
x
i32
)
)
)
(
import
"
m
"
"
f
"
(
param
(
ref
box
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
import
"
m
"
"
f
"
(
param
anyref
)
)
)
)
"
object
"
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
x
i32
)
)
)
(
import
"
m
"
"
f
"
(
param
i32
)
(
result
(
ref
box
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
import
"
m
"
"
f
"
(
param
i32
)
(
result
anyref
)
)
)
)
"
object
"
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
import
"
m
"
"
g
"
(
global
(
mut
(
ref
box
)
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
import
"
m
"
"
g
"
(
global
(
ref
box
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
import
"
m
"
"
g
"
(
global
(
mut
anyref
)
)
)
)
)
"
object
"
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
import
"
m
"
"
g
"
(
global
anyref
)
)
)
)
"
object
"
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
global
boxg
(
export
"
box
"
)
(
mut
(
ref
box
)
)
(
ref
.
null
(
ref
box
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
global
boxg
(
export
"
box
"
)
(
ref
box
)
(
ref
.
null
(
ref
box
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
global
boxg
(
export
"
box
"
)
(
mut
anyref
)
(
ref
.
null
anyref
)
)
)
)
"
object
"
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
global
boxg
(
export
"
box
"
)
anyref
(
ref
.
null
anyref
)
)
)
)
"
object
"
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
table
(
export
"
tbl
"
)
1
anyfunc
)
(
elem
(
i32
.
const
0
)
f1
)
(
func
f1
(
param
(
ref
box
)
)
(
unreachable
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
table
(
export
"
tbl
"
)
1
anyfunc
)
(
elem
(
i32
.
const
0
)
f1
)
(
func
f1
(
result
(
ref
box
)
)
(
ref
.
null
(
ref
box
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
table
(
export
"
tbl
"
)
1
anyfunc
)
(
elem
(
i32
.
const
0
)
f1
)
(
func
f1
(
param
anyref
)
(
unreachable
)
)
)
)
"
object
"
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
table
(
export
"
tbl
"
)
1
anyfunc
)
(
elem
(
i32
.
const
0
)
f1
)
(
func
f1
(
result
anyref
)
(
ref
.
null
anyref
)
)
)
)
"
object
"
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
import
"
m
"
"
tbl
"
(
table
1
anyfunc
)
)
(
elem
(
i32
.
const
0
)
f1
)
(
func
f1
(
param
(
ref
box
)
)
(
unreachable
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
import
"
m
"
"
tbl
"
(
table
1
anyfunc
)
)
(
elem
(
i32
.
const
0
)
f1
)
(
func
f1
(
result
(
ref
box
)
)
(
ref
.
null
(
ref
box
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
import
"
m
"
"
tbl
"
(
table
1
anyfunc
)
)
(
elem
(
i32
.
const
0
)
f1
)
(
func
f1
(
param
anyref
)
(
unreachable
)
)
)
)
"
object
"
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
import
"
m
"
"
tbl
"
(
table
1
anyfunc
)
)
(
elem
(
i32
.
const
0
)
f1
)
(
func
f1
(
result
anyref
)
(
ref
.
null
anyref
)
)
)
)
"
object
"
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
type
fn
(
func
(
param
(
ref
box
)
)
)
)
(
table
(
export
"
tbl
"
)
1
anyfunc
)
(
func
(
param
i32
)
(
call_indirect
fn
(
ref
.
null
(
ref
box
)
)
(
get_local
0
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
type
fn
(
func
(
result
(
ref
box
)
)
)
)
(
table
(
export
"
tbl
"
)
1
anyfunc
)
(
func
(
param
i32
)
(
result
(
ref
box
)
)
(
call_indirect
fn
(
get_local
0
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
fn
(
func
(
param
anyref
)
)
)
(
table
(
export
"
tbl
"
)
1
anyfunc
)
(
func
(
param
i32
)
(
call_indirect
fn
(
ref
.
null
anyref
)
(
get_local
0
)
)
)
)
)
"
object
"
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
fn
(
func
(
result
anyref
)
)
)
(
table
(
export
"
tbl
"
)
1
anyfunc
)
(
func
(
param
i32
)
(
result
anyref
)
(
call_indirect
fn
(
get_local
0
)
)
)
)
)
"
object
"
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
type
fn
(
func
(
param
(
ref
box
)
)
)
)
(
import
"
m
"
"
tbl
"
(
table
1
anyfunc
)
)
(
func
(
param
i32
)
(
call_indirect
fn
(
ref
.
null
(
ref
box
)
)
(
get_local
0
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertErrorMessage
(
(
)
=
>
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
type
fn
(
func
(
result
(
ref
box
)
)
)
)
(
import
"
m
"
"
tbl
"
(
table
1
anyfunc
)
)
(
func
(
param
i32
)
(
result
(
ref
box
)
)
(
call_indirect
fn
(
get_local
0
)
)
)
)
)
WebAssembly
.
CompileError
/
cannot
expose
reference
type
/
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
fn
(
func
(
param
anyref
)
)
)
(
import
"
m
"
"
tbl
"
(
table
1
anyfunc
)
)
(
func
(
param
i32
)
(
call_indirect
fn
(
ref
.
null
anyref
)
(
get_local
0
)
)
)
)
)
"
object
"
)
;
assertEq
(
typeof
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
fn
(
func
(
result
anyref
)
)
)
(
import
"
m
"
"
tbl
"
(
table
1
anyfunc
)
)
(
func
(
param
i32
)
(
result
anyref
)
(
call_indirect
fn
(
get_local
0
)
)
)
)
)
"
object
"
)
;
{
let
m
=
wasmCompile
(
(
module
(
gc_feature_opt_in
1
)
(
type
box
(
struct
(
field
val
i32
)
)
)
(
type
fn
(
func
(
param
(
ref
box
)
)
(
result
i32
)
)
)
(
table
1
anyfunc
)
(
elem
(
i32
.
const
0
)
f1
)
(
func
f1
(
param
(
ref
box
)
)
(
result
i32
)
(
i32
.
const
37
)
)
(
func
(
export
"
f
"
)
(
param
i32
)
(
result
i32
)
(
call_indirect
fn
(
ref
.
null
(
ref
box
)
)
(
get_local
0
)
)
)
)
)
;
let
i
=
new
WebAssembly
.
Instance
(
m
)
.
exports
;
assertEq
(
i
.
f
(
0
)
37
)
;
}
