let
t
=
(
module
(
type
structTy
(
struct
(
field
(
mut
f32
)
)
)
)
(
func
(
export
"
badness
"
)
(
param
struct
(
ref
null
structTy
)
)
(
result
f32
)
(
local
f
f32
)
(
local
i
i32
)
(
block
break
(
loop
cont
;
;
f
=
struct
-
>
field0
(
local
.
set
f
(
struct
.
get
structTy
0
(
local
.
get
struct
)
)
)
;
;
f
=
f
+
360
.
0
(
local
.
set
f
(
f32
.
add
(
local
.
get
f
)
(
f32
.
const
360
.
0
)
)
)
;
;
struct
-
>
field0
=
f
(
struct
.
set
structTy
0
(
local
.
get
struct
)
(
local
.
get
f
)
)
;
;
loop
control
(
local
.
set
i
(
i32
.
add
(
local
.
get
i
)
(
i32
.
const
1
)
)
)
(
br_if
cont
(
i32
.
lt_u
(
local
.
get
i
)
(
i32
.
const
12345
)
)
)
)
)
(
struct
.
get
structTy
0
(
local
.
get
struct
)
)
)
(
func
(
export
"
go
"
)
(
result
f32
)
(
struct
.
new_default
structTy
)
(
call
0
)
)
)
;
let
i
=
new
WebAssembly
.
Instance
(
new
WebAssembly
.
Module
(
wasmTextToBinary
(
t
)
)
)
;
assertEq
(
i
.
exports
.
go
(
)
4444200
)
;
