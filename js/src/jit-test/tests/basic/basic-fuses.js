function
intact
(
name
)
{
let
state
=
getFuseState
(
)
;
if
(
!
(
name
in
state
)
)
{
throw
"
No
such
fuse
"
+
name
;
}
return
state
[
name
]
.
intact
}
function
testRealmChange
(
)
{
let
g
=
newGlobal
(
)
;
g
.
evaluate
(
intact
.
toString
(
)
)
let
rdel
=
g
.
evaluate
(
"
function
del
(
o
)
{
delete
o
.
prototype
[
Symbol
.
iterator
]
}
;
del
"
)
g
.
evaluate
(
assertEq
(
intact
(
"
ArrayPrototypeIteratorFuse
"
)
true
)
)
;
let
g2
=
newGlobal
(
)
;
g2
.
evaluate
(
intact
.
toString
(
)
)
g2
.
rdel
=
rdel
;
g2
.
evaluate
(
rdel
(
Array
)
)
;
g
.
evaluate
(
assertEq
(
intact
(
"
ArrayPrototypeIteratorFuse
"
)
true
)
)
;
g2
.
evaluate
(
assertEq
(
intact
(
"
ArrayPrototypeIteratorFuse
"
)
false
)
)
;
}
testRealmChange
(
)
;
function
testInNewGlobal
(
pre
post
)
{
g
=
newGlobal
(
)
;
g
.
evaluate
(
intact
.
toString
(
)
)
;
g
.
evaluate
(
pre
)
g
.
evaluate
(
"
assertRealmFuseInvariants
(
)
"
)
;
g
.
evaluate
(
post
)
;
}
testInNewGlobal
(
"
delete
Array
.
prototype
[
Symbol
.
iterator
]
"
assertEq
(
intact
(
"
ArrayPrototypeIteratorFuse
"
)
false
)
)
testInNewGlobal
(
"
(
[
]
)
[
Symbol
.
iterator
]
(
)
.
__proto__
[
'
return
'
]
=
(
)
=
>
10
;
"
assertEq
(
intact
(
"
ArrayIteratorPrototypeHasNoReturnProperty
"
)
false
)
)
testInNewGlobal
(
"
(
[
]
)
[
Symbol
.
iterator
]
(
)
.
__proto__
.
__proto__
[
'
return
'
]
=
(
)
=
>
10
;
"
assertEq
(
intact
(
"
IteratorPrototypeHasNoReturnProperty
"
)
false
)
)
testInNewGlobal
(
"
Object
.
prototype
[
'
return
'
]
=
(
)
=
>
10
;
"
assertEq
(
intact
(
"
ObjectPrototypeHasNoReturnProperty
"
)
false
)
)
testInNewGlobal
(
assertEq
(
intact
(
"
ArrayIteratorPrototypeHasIteratorProto
"
)
true
)
;
Object
.
setPrototypeOf
(
(
(
[
]
)
[
Symbol
.
iterator
]
(
)
.
__proto__
)
{
a
:
10
}
)
assertEq
(
intact
(
"
ArrayIteratorPrototypeHasIteratorProto
"
)
false
)
;
)
;
testInNewGlobal
(
assertEq
(
intact
(
"
IteratorPrototypeHasObjectProto
"
)
true
)
;
Object
.
setPrototypeOf
(
(
(
[
]
)
[
Symbol
.
iterator
]
(
)
.
__proto__
.
__proto__
)
{
a
:
10
}
)
assertEq
(
intact
(
"
IteratorPrototypeHasObjectProto
"
)
false
)
;
)
;
