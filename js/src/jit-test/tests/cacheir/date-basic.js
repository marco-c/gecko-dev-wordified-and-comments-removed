function
testDateGetTime
(
)
{
var
timeValues
=
[
-
1000
+
1000
0
NaN
]
;
for
(
var
i
=
0
;
i
<
250
;
+
+
i
)
{
var
t
=
timeValues
[
i
&
3
]
;
var
d
=
new
Date
(
t
)
;
assertEq
(
d
.
getTime
(
)
t
)
;
assertEq
(
d
.
valueOf
(
)
t
)
;
}
}
testDateGetTime
(
)
;
var
dateValues
=
[
[
1970
1
-
1
1
4
]
[
2023
12
-
1
31
0
]
[
275760
9
-
1
13
-
1
5
]
[
-
271821
4
-
1
20
+
1
3
]
[
NaN
NaN
NaN
NaN
]
]
;
function
testDateGetFullYear
(
)
{
for
(
var
i
=
0
;
i
<
250
;
+
+
i
)
{
var
[
year
month
date
]
=
dateValues
[
i
%
dateValues
.
length
]
;
var
d
=
new
Date
(
year
month
date
)
;
assertEq
(
d
.
getFullYear
(
)
year
)
;
assertEq
(
d
.
getFullYear
(
)
year
)
;
}
}
testDateGetFullYear
(
)
;
function
testDateGetMonth
(
)
{
for
(
var
i
=
0
;
i
<
250
;
+
+
i
)
{
var
[
year
month
date
]
=
dateValues
[
i
%
dateValues
.
length
]
;
var
d
=
new
Date
(
year
month
date
)
;
assertEq
(
d
.
getMonth
(
)
month
)
;
assertEq
(
d
.
getMonth
(
)
month
)
;
}
}
testDateGetMonth
(
)
;
function
testDateGetDate
(
)
{
for
(
var
i
=
0
;
i
<
250
;
+
+
i
)
{
var
[
year
month
date
]
=
dateValues
[
i
%
dateValues
.
length
]
;
var
d
=
new
Date
(
year
month
date
)
;
assertEq
(
d
.
getDate
(
)
date
)
;
assertEq
(
d
.
getDate
(
)
date
)
;
}
}
testDateGetDate
(
)
;
function
testDateGetDay
(
)
{
for
(
var
i
=
0
;
i
<
250
;
+
+
i
)
{
var
[
year
month
date
day
]
=
dateValues
[
i
%
dateValues
.
length
]
;
var
d
=
new
Date
(
year
month
date
)
;
assertEq
(
d
.
getDay
(
)
day
)
;
assertEq
(
d
.
getDay
(
)
day
)
;
}
}
testDateGetDay
(
)
;
function
testDateGetFullYearMonthDateDay
(
)
{
for
(
var
i
=
0
;
i
<
250
;
+
+
i
)
{
var
[
year
month
date
day
]
=
dateValues
[
i
%
dateValues
.
length
]
;
var
d
=
new
Date
(
year
month
date
)
;
assertEq
(
d
.
getFullYear
(
)
year
)
;
assertEq
(
d
.
getMonth
(
)
month
)
;
assertEq
(
d
.
getDate
(
)
date
)
;
assertEq
(
d
.
getDay
(
)
day
)
;
}
}
testDateGetFullYearMonthDateDay
(
)
;
