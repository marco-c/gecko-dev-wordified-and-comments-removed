"
use
strict
"
;
load
(
libdir
+
"
asserts
.
js
"
)
;
load
(
libdir
+
"
dummyModuleResolveHook
.
js
"
)
;
moduleRepo
[
'
A
'
]
=
parseModule
(
'
import
"
B
"
;
export
{
x
}
from
"
C
"
'
)
;
moduleRepo
[
'
B
'
]
=
parseModule
(
'
import
*
as
a
from
"
A
"
'
)
;
moduleRepo
[
'
C
'
]
=
parseModule
(
'
export
*
from
"
D
"
;
export
*
from
"
E
"
'
)
;
moduleRepo
[
'
D
'
]
=
parseModule
(
'
export
let
x
'
)
;
moduleRepo
[
'
E
'
]
=
parseModule
(
'
export
let
x
'
)
;
let
m
=
moduleRepo
[
'
A
'
]
;
assertThrowsInstanceOf
(
(
)
=
>
instantiateModule
(
m
)
SyntaxError
)
;
