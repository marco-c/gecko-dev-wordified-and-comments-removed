"
use
strict
"
;
load
(
libdir
+
"
asserts
.
js
"
)
;
class
UniqueError
extends
Error
{
}
let
a
=
registerModule
(
'
a
'
parseModule
(
throw
new
UniqueError
(
)
;
)
)
;
let
b
=
registerModule
(
'
b
'
parseModule
(
import
*
as
ns0
from
"
a
"
;
)
)
;
a
.
declarationInstantiation
(
)
;
a
.
evaluation
(
)
.
then
(
r
=
>
{
assertEq
(
false
true
)
;
}
)
.
catch
(
e
=
>
assertEq
(
e
instanceof
UniqueError
true
)
)
;
b
.
declarationInstantiation
(
)
;
b
.
evaluation
(
)
.
then
(
r
=
>
{
assertEq
(
false
true
)
;
}
)
.
catch
(
e
=
>
assertEq
(
e
instanceof
UniqueError
true
)
)
;
drainJobQueue
(
)
;
