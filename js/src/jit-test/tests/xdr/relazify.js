load
(
libdir
+
'
bytecode
-
cache
.
js
'
)
;
var
test
=
"
"
;
gczeal
(
0
)
;
test
=
function
f
(
)
{
return
1
;
}
;
assertEq
(
isLazyFunction
(
f
)
generation
=
=
0
|
|
generation
=
=
3
)
;
f
(
)
;
expect
=
isRelazifiableFunction
(
f
)
;
assertEq
(
isLazyFunction
(
f
)
false
)
;
;
evalWithCache
(
test
{
checkAfter
:
function
(
ctx
)
{
relazifyFunctions
(
)
;
evaluate
(
"
assertEq
(
isLazyFunction
(
f
)
expect
)
;
"
ctx
)
;
}
}
)
;
evalWithCache
(
test
{
incremental
:
true
checkAfter
:
function
(
ctx
)
{
relazifyFunctions
(
)
;
evaluate
(
"
assertEq
(
isLazyFunction
(
f
)
expect
)
;
"
ctx
)
;
}
}
)
;
