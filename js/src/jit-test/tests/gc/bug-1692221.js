function
allocateGarbage
(
)
{
gc
(
)
;
for
(
let
j
=
0
;
j
<
100000
;
j
+
+
)
{
Symbol
(
)
;
}
}
function
collectUntilDecommit
(
)
{
startgc
(
1
)
;
while
(
gcstate
(
)
!
=
"
NotActive
"
&
&
gcstate
(
)
!
=
"
Decommit
"
)
{
gcslice
(
1000
)
;
}
}
function
triggerSyncDecommit
(
)
{
reportLargeAllocationFailure
(
1
)
;
}
gczeal
(
0
)
;
gc
(
)
;
allocateGarbage
(
)
;
collectUntilDecommit
(
)
;
triggerSyncDecommit
(
)
;
assertEq
(
gcstate
(
)
"
NotActive
"
)
;
allocateGarbage
(
)
;
collectUntilDecommit
(
)
;
oomAtAllocation
(
10
)
;
triggerSyncDecommit
(
)
;
resetOOMFailure
(
)
;
assertEq
(
gcstate
(
)
"
NotActive
"
)
;
