function
markConstant
(
obj
key
)
{
assertEq
(
getObjectFuseState
(
obj
)
.
properties
[
key
]
"
Untracked
"
)
;
obj
[
key
]
=
Object
.
getOwnPropertyDescriptor
(
obj
key
)
.
value
;
}
function
testGlobal
(
)
{
var
g
=
newGlobal
(
{
sameCompartmentAs
:
this
useWindowProxy
:
false
}
)
;
assertEq
(
getObjectFuseState
(
g
)
.
generation
0
)
;
g
.
evaluate
(
"
var
foo
=
1
;
var
bar
;
bar
=
function
(
)
{
}
;
function
baz
(
)
{
}
;
"
)
;
var
state
=
getObjectFuseState
(
g
)
;
assertEq
(
state
.
properties
.
foo
"
Constant
"
)
;
assertEq
(
state
.
properties
.
bar
"
Constant
"
)
;
assertEq
(
state
.
properties
.
baz
"
Untracked
"
)
;
g
.
evaluate
(
"
let
Object
=
{
}
;
"
)
;
assertEq
(
getObjectFuseState
(
g
)
.
generation
0
)
;
markConstant
(
g
"
Function
"
)
;
g
.
evaluate
(
"
let
Function
=
{
}
;
"
)
;
assertEq
(
getObjectFuseState
(
g
)
.
generation
1
)
;
g
.
Math
=
1
;
g
.
Math
=
2
;
g
.
evaluate
(
"
let
Math
=
{
}
;
"
)
;
assertEq
(
getObjectFuseState
(
g
)
.
generation
2
)
;
}
testGlobal
(
)
;
testGlobal
(
)
;
