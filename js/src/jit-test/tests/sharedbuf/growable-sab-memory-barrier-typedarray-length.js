function
setup
(
)
{
function
worker
(
gsab
)
{
var
ta
=
new
Int32Array
(
gsab
)
;
Atomics
.
store
(
ta
0
1
)
;
Atomics
.
wait
(
ta
1
0
500
)
;
Atomics
.
store
(
ta
2
1
)
;
Atomics
.
wait
(
ta
1
0
100
)
;
gsab
.
grow
(
16
)
;
}
var
gsab
=
new
SharedArrayBuffer
(
12
{
maxByteLength
:
16
}
)
;
setSharedObject
(
gsab
)
;
evalInWorker
(
(
{
worker
}
)
(
getSharedObject
(
)
)
;
)
;
var
ta
=
new
Int32Array
(
gsab
)
;
while
(
Atomics
.
load
(
ta
0
)
=
=
=
0
)
;
return
gsab
;
}
function
testTypedArrayLength
(
)
{
var
gsab
=
setup
(
)
;
var
ta
=
new
Int32Array
(
gsab
)
;
var
r
=
0
;
while
(
ta
.
length
<
=
3
)
{
r
+
=
ta
[
2
]
;
}
assertEq
(
r
>
0
true
"
ta
.
length
acts
as
a
memory
barrier
so
ta
[
2
]
can
'
t
be
hoisted
"
)
;
}
testTypedArrayLength
(
)
;
