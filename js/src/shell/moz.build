if
CONFIG
[
'
JS_SHELL_NAME
'
]
:
GeckoProgram
(
CONFIG
[
'
JS_SHELL_NAME
'
]
linkage
=
None
)
if
CONFIG
[
'
JS_BUNDLED_EDITLINE
'
]
:
DIRS
+
=
[
'
.
.
/
editline
'
]
USE_LIBS
+
=
[
'
editline
'
]
USE_LIBS
+
=
[
'
static
:
js
'
]
include
(
'
.
.
/
js
-
config
.
mozbuild
'
)
include
(
'
.
.
/
js
-
cxxflags
.
mozbuild
'
)
include
(
'
.
.
/
js
-
standalone
.
mozbuild
'
)
UNIFIED_SOURCES
+
=
[
'
js
.
cpp
'
'
jsoptparse
.
cpp
'
'
jsshell
.
cpp
'
'
OSObject
.
cpp
'
'
WasmTesting
.
cpp
'
]
if
CONFIG
[
'
FUZZING_INTERFACES
'
]
:
UNIFIED_SOURCES
+
=
[
'
jsrtfuzzing
/
jsrtfuzzing
.
cpp
'
]
USE_LIBS
+
=
[
'
static
:
fuzzer
'
]
DEFINES
[
'
EXPORT_JS_API
'
]
=
True
LOCAL_INCLUDES
+
=
[
'
!
.
.
'
'
.
.
'
]
OS_LIBS
+
=
CONFIG
[
'
EDITLINE_LIBS
'
]
GeneratedFile
(
'
shellmoduleloader
.
out
.
h
'
'
shellmoduleloader
.
js
'
script
=
'
.
.
/
builtin
/
embedjs
.
py
'
entry_point
=
'
generate_shellmoduleloader
'
inputs
=
[
'
.
.
/
js
.
msg
'
'
ModuleLoader
.
js
'
]
)
DEFINES
[
'
topsrcdir
'
]
=
'
%
s
/
js
/
src
'
%
TOPSRCDIR
FINAL_TARGET_PP_FILES
+
=
[
'
js
-
gdb
.
py
.
in
'
]
OBJDIR_FILES
.
js
.
src
.
shell
+
=
[
'
!
/
dist
/
bin
/
js
-
gdb
.
py
'
]
OBJDIR_FILES
.
js
.
src
+
=
[
'
!
/
dist
/
bin
/
js
%
s
'
%
CONFIG
[
'
BIN_SUFFIX
'
]
]
