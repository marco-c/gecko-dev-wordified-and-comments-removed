#
ifndef
shell_OSObject_h
#
define
shell_OSObject_h
#
include
<
stdio
.
h
>
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
js
/
Utility
.
h
"
class
JSLinearString
;
namespace
js
{
namespace
shell
{
#
ifdef
XP_WIN
constexpr
char
PathSeparator
=
'
\
\
'
;
#
else
constexpr
char
PathSeparator
=
'
/
'
;
#
endif
struct
RCFile
;
bool
DefineOS
(
JSContext
*
cx
JS
:
:
HandleObject
global
bool
fuzzingSafe
RCFile
*
*
shellOut
RCFile
*
*
shellErr
)
;
enum
PathResolutionMode
{
RootRelative
ScriptRelative
}
;
bool
IsAbsolutePath
(
JSLinearString
*
filename
)
;
JSString
*
ResolvePath
(
JSContext
*
cx
JS
:
:
HandleString
filenameStr
PathResolutionMode
resolveMode
)
;
JSObject
*
FileAsTypedArray
(
JSContext
*
cx
JS
:
:
HandleString
pathnameStr
)
;
JS
:
:
UniqueChars
GetCWD
(
JSContext
*
cx
)
;
FILE
*
OpenFile
(
JSContext
*
cx
const
char
*
filename
const
char
*
mode
)
;
bool
ReadFile
(
JSContext
*
cx
const
char
*
filename
FILE
*
file
char
*
buffer
size_t
length
)
;
bool
FileSize
(
JSContext
*
cx
const
char
*
filename
FILE
*
file
size_t
*
size
)
;
JS
:
:
UniqueChars
SystemErrorMessage
(
JSContext
*
cx
int
errnum
)
;
}
}
#
endif
