function
IteratorIdentity
(
)
{
return
this
;
}
function
IteratorNext
(
iteratorRecord
value
)
{
var
result
=
ArgumentsLength
(
)
<
2
?
callContentFunction
(
iteratorRecord
.
nextMethod
iteratorRecord
.
iterator
)
:
callContentFunction
(
iteratorRecord
.
nextMethod
iteratorRecord
.
iterator
value
)
;
if
(
!
IsObject
(
result
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
result
)
;
}
return
result
;
}
function
GetIterator
(
obj
isAsync
method
)
{
if
(
!
method
)
{
if
(
isAsync
)
{
method
=
GetMethod
(
obj
GetBuiltinSymbol
(
"
asyncIterator
"
)
)
;
if
(
!
method
)
{
var
syncMethod
=
GetMethod
(
obj
GetBuiltinSymbol
(
"
iterator
"
)
)
;
var
syncIteratorRecord
=
GetIterator
(
obj
false
syncMethod
)
;
return
CreateAsyncFromSyncIterator
(
syncIteratorRecord
.
iterator
syncIteratorRecord
.
nextMethod
)
;
}
}
else
{
method
=
GetMethod
(
obj
GetBuiltinSymbol
(
"
iterator
"
)
)
;
}
}
var
iterator
=
callContentFunction
(
method
obj
)
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_NOT_ITERABLE
obj
=
=
=
null
?
"
null
"
:
typeof
obj
)
;
}
var
nextMethod
=
iterator
.
next
;
var
iteratorRecord
=
{
__proto__
:
null
iterator
nextMethod
done
:
false
}
;
return
iteratorRecord
;
}
function
GetIteratorFlattenable
(
obj
rejectStrings
)
{
assert
(
typeof
rejectStrings
=
=
=
"
boolean
"
"
rejectStrings
is
a
boolean
"
)
;
if
(
!
IsObject
(
obj
)
)
{
if
(
rejectStrings
|
|
typeof
obj
!
=
=
"
string
"
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
obj
=
=
=
null
?
"
null
"
:
typeof
obj
)
;
}
}
var
method
=
obj
[
GetBuiltinSymbol
(
"
iterator
"
)
]
;
var
iterator
;
if
(
IsNullOrUndefined
(
method
)
)
{
iterator
=
obj
;
}
else
{
iterator
=
callContentFunction
(
method
obj
)
;
}
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
return
iterator
;
}
function
IteratorFrom
(
O
)
{
var
iterator
=
GetIteratorFlattenable
(
O
false
)
;
var
nextMethod
=
iterator
.
next
;
var
hasInstance
=
callFunction
(
std_Object_isPrototypeOf
GetBuiltinPrototype
(
"
Iterator
"
)
iterator
)
;
if
(
hasInstance
)
{
return
iterator
;
}
var
wrapper
=
NewWrapForValidIterator
(
)
;
UnsafeSetReservedSlot
(
wrapper
WRAP_FOR_VALID_ITERATOR_ITERATOR_SLOT
iterator
)
;
UnsafeSetReservedSlot
(
wrapper
WRAP_FOR_VALID_ITERATOR_NEXT_METHOD_SLOT
nextMethod
)
;
return
wrapper
;
}
function
WrapForValidIteratorNext
(
)
{
var
O
=
this
;
if
(
!
IsObject
(
O
)
|
|
(
O
=
GuardToWrapForValidIterator
(
O
)
)
=
=
=
null
)
{
return
callFunction
(
CallWrapForValidIteratorMethodIfWrapped
this
"
WrapForValidIteratorNext
"
)
;
}
var
iterator
=
UnsafeGetReservedSlot
(
O
WRAP_FOR_VALID_ITERATOR_ITERATOR_SLOT
)
;
var
nextMethod
=
UnsafeGetReservedSlot
(
O
WRAP_FOR_VALID_ITERATOR_NEXT_METHOD_SLOT
)
;
return
callContentFunction
(
nextMethod
iterator
)
;
}
function
WrapForValidIteratorReturn
(
)
{
var
O
=
this
;
if
(
!
IsObject
(
O
)
|
|
(
O
=
GuardToWrapForValidIterator
(
O
)
)
=
=
=
null
)
{
return
callFunction
(
CallWrapForValidIteratorMethodIfWrapped
this
"
WrapForValidIteratorReturn
"
)
;
}
var
iterator
=
UnsafeGetReservedSlot
(
O
WRAP_FOR_VALID_ITERATOR_ITERATOR_SLOT
)
;
assert
(
IsObject
(
iterator
)
"
iterator
is
an
object
"
)
;
var
returnMethod
=
iterator
.
return
;
if
(
IsNullOrUndefined
(
returnMethod
)
)
{
return
{
value
:
undefined
done
:
true
}
;
}
return
callContentFunction
(
returnMethod
iterator
)
;
}
#
ifdef
ENABLE_EXPLICIT_RESOURCE_MANAGEMENT
function
IteratorDispose
(
)
{
var
O
=
this
;
var
returnMethod
=
GetMethod
(
O
"
return
"
)
;
if
(
returnMethod
!
=
=
undefined
)
{
callContentFunction
(
returnMethod
O
)
;
}
}
#
endif
function
IteratorHelperNext
(
)
{
var
O
=
this
;
if
(
!
IsObject
(
O
)
|
|
(
O
=
GuardToIteratorHelper
(
O
)
)
=
=
=
null
)
{
return
callFunction
(
CallIteratorHelperMethodIfWrapped
this
"
IteratorHelperNext
"
)
;
}
var
generator
=
UnsafeGetReservedSlot
(
O
ITERATOR_HELPER_GENERATOR_SLOT
)
;
return
callFunction
(
GeneratorNext
generator
undefined
)
;
}
function
IteratorHelperReturn
(
)
{
var
O
=
this
;
if
(
!
IsObject
(
O
)
|
|
(
O
=
GuardToIteratorHelper
(
O
)
)
=
=
=
null
)
{
return
callFunction
(
CallIteratorHelperMethodIfWrapped
this
"
IteratorHelperReturn
"
)
;
}
var
generator
=
UnsafeGetReservedSlot
(
O
ITERATOR_HELPER_GENERATOR_SLOT
)
;
return
callFunction
(
GeneratorReturn
generator
undefined
)
;
}
function
IteratorMap
(
mapper
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
if
(
!
IsCallable
(
mapper
)
)
{
ThrowTypeError
(
JSMSG_NOT_FUNCTION
DecompileArg
(
0
mapper
)
)
;
}
var
nextMethod
=
iterator
.
next
;
var
result
=
NewIteratorHelper
(
)
;
var
generator
=
IteratorMapGenerator
(
iterator
nextMethod
mapper
)
;
UnsafeSetReservedSlot
(
result
ITERATOR_HELPER_GENERATOR_SLOT
generator
)
;
callFunction
(
GeneratorNext
generator
)
;
return
result
;
}
function
*
IteratorMapGenerator
(
iterator
nextMethod
mapper
)
{
var
isReturnCompletion
=
true
;
try
{
yield
;
isReturnCompletion
=
false
;
}
finally
{
if
(
isReturnCompletion
)
{
IteratorClose
(
iterator
)
;
}
}
var
counter
=
0
;
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
var
mapped
=
callContentFunction
(
mapper
undefined
value
counter
)
;
yield
mapped
;
counter
+
=
1
;
}
}
function
IteratorFilter
(
predicate
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
if
(
!
IsCallable
(
predicate
)
)
{
ThrowTypeError
(
JSMSG_NOT_FUNCTION
DecompileArg
(
0
predicate
)
)
;
}
var
nextMethod
=
iterator
.
next
;
var
result
=
NewIteratorHelper
(
)
;
var
generator
=
IteratorFilterGenerator
(
iterator
nextMethod
predicate
)
;
UnsafeSetReservedSlot
(
result
ITERATOR_HELPER_GENERATOR_SLOT
generator
)
;
callFunction
(
GeneratorNext
generator
)
;
return
result
;
}
function
*
IteratorFilterGenerator
(
iterator
nextMethod
predicate
)
{
var
isReturnCompletion
=
true
;
try
{
yield
;
isReturnCompletion
=
false
;
}
finally
{
if
(
isReturnCompletion
)
{
IteratorClose
(
iterator
)
;
}
}
var
counter
=
0
;
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
var
selected
=
callContentFunction
(
predicate
undefined
value
counter
)
;
if
(
selected
)
{
yield
value
;
}
counter
+
=
1
;
}
}
function
IteratorTake
(
limit
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
var
integerLimit
=
std_Math_trunc
(
limit
)
;
if
(
!
(
integerLimit
>
=
0
)
)
{
ThrowRangeError
(
JSMSG_NEGATIVE_LIMIT
)
;
}
var
nextMethod
=
iterator
.
next
;
var
result
=
NewIteratorHelper
(
)
;
var
generator
=
IteratorTakeGenerator
(
iterator
nextMethod
integerLimit
)
;
UnsafeSetReservedSlot
(
result
ITERATOR_HELPER_GENERATOR_SLOT
generator
)
;
callFunction
(
GeneratorNext
generator
)
;
return
result
;
}
function
*
IteratorTakeGenerator
(
iterator
nextMethod
remaining
)
{
var
isReturnCompletion
=
true
;
try
{
yield
;
isReturnCompletion
=
false
;
}
finally
{
if
(
isReturnCompletion
)
{
IteratorClose
(
iterator
)
;
}
}
if
(
remaining
=
=
=
0
)
{
IteratorClose
(
iterator
)
;
return
;
}
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
yield
value
;
if
(
-
-
remaining
=
=
=
0
)
{
break
;
}
}
}
function
IteratorDrop
(
limit
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
var
integerLimit
=
std_Math_trunc
(
limit
)
;
if
(
!
(
integerLimit
>
=
0
)
)
{
ThrowRangeError
(
JSMSG_NEGATIVE_LIMIT
)
;
}
var
nextMethod
=
iterator
.
next
;
var
result
=
NewIteratorHelper
(
)
;
var
generator
=
IteratorDropGenerator
(
iterator
nextMethod
integerLimit
)
;
UnsafeSetReservedSlot
(
result
ITERATOR_HELPER_GENERATOR_SLOT
generator
)
;
callFunction
(
GeneratorNext
generator
)
;
return
result
;
}
function
*
IteratorDropGenerator
(
iterator
nextMethod
remaining
)
{
var
isReturnCompletion
=
true
;
try
{
yield
;
isReturnCompletion
=
false
;
}
finally
{
if
(
isReturnCompletion
)
{
IteratorClose
(
iterator
)
;
}
}
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
if
(
remaining
-
-
<
=
0
)
{
yield
value
;
}
}
}
function
IteratorFlatMap
(
mapper
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
if
(
!
IsCallable
(
mapper
)
)
{
ThrowTypeError
(
JSMSG_NOT_FUNCTION
DecompileArg
(
0
mapper
)
)
;
}
var
nextMethod
=
iterator
.
next
;
var
result
=
NewIteratorHelper
(
)
;
var
generator
=
IteratorFlatMapGenerator
(
iterator
nextMethod
mapper
)
;
UnsafeSetReservedSlot
(
result
ITERATOR_HELPER_GENERATOR_SLOT
generator
)
;
callFunction
(
GeneratorNext
generator
)
;
return
result
;
}
function
*
IteratorFlatMapGenerator
(
iterator
nextMethod
mapper
)
{
var
isReturnCompletion
=
true
;
try
{
yield
;
isReturnCompletion
=
false
;
}
finally
{
if
(
isReturnCompletion
)
{
IteratorClose
(
iterator
)
;
}
}
var
counter
=
0
;
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
var
mapped
=
callContentFunction
(
mapper
undefined
value
counter
)
;
var
innerIterator
=
GetIteratorFlattenable
(
mapped
true
)
;
var
innerIteratorNextMethod
=
innerIterator
.
next
;
for
(
var
innerValue
of
allowContentIterWithNext
(
innerIterator
innerIteratorNextMethod
)
)
{
yield
innerValue
;
}
counter
+
=
1
;
}
}
function
IteratorReduce
(
reducer
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
if
(
!
IsCallable
(
reducer
)
)
{
ThrowTypeError
(
JSMSG_NOT_FUNCTION
DecompileArg
(
0
reducer
)
)
;
}
var
nextMethod
=
iterator
.
next
;
var
accumulator
;
var
counter
;
if
(
ArgumentsLength
(
)
=
=
=
1
)
{
counter
=
-
1
;
}
else
{
accumulator
=
GetArgument
(
1
)
;
counter
=
0
;
}
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
if
(
counter
<
0
)
{
accumulator
=
value
;
counter
=
1
;
}
else
{
accumulator
=
callContentFunction
(
reducer
undefined
accumulator
value
counter
+
+
)
;
}
}
if
(
counter
<
0
)
{
ThrowTypeError
(
JSMSG_EMPTY_ITERATOR_REDUCE
)
;
}
return
accumulator
;
}
function
IteratorToArray
(
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
var
nextMethod
=
iterator
.
next
;
return
[
.
.
.
allowContentIterWithNext
(
iterator
nextMethod
)
]
;
}
function
IteratorForEach
(
fn
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
if
(
!
IsCallable
(
fn
)
)
{
ThrowTypeError
(
JSMSG_NOT_FUNCTION
DecompileArg
(
0
fn
)
)
;
}
var
nextMethod
=
iterator
.
next
;
var
counter
=
0
;
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
callContentFunction
(
fn
undefined
value
counter
+
+
)
;
}
}
function
IteratorSome
(
predicate
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
if
(
!
IsCallable
(
predicate
)
)
{
ThrowTypeError
(
JSMSG_NOT_FUNCTION
DecompileArg
(
0
predicate
)
)
;
}
var
nextMethod
=
iterator
.
next
;
var
counter
=
0
;
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
if
(
callContentFunction
(
predicate
undefined
value
counter
+
+
)
)
{
return
true
;
}
}
return
false
;
}
function
IteratorEvery
(
predicate
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
if
(
!
IsCallable
(
predicate
)
)
{
ThrowTypeError
(
JSMSG_NOT_FUNCTION
DecompileArg
(
0
predicate
)
)
;
}
var
nextMethod
=
iterator
.
next
;
var
counter
=
0
;
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
if
(
!
callContentFunction
(
predicate
undefined
value
counter
+
+
)
)
{
return
false
;
}
}
return
true
;
}
function
IteratorFind
(
predicate
)
{
var
iterator
=
this
;
if
(
!
IsObject
(
iterator
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
iterator
=
=
=
null
?
"
null
"
:
typeof
iterator
)
;
}
if
(
!
IsCallable
(
predicate
)
)
{
ThrowTypeError
(
JSMSG_NOT_FUNCTION
DecompileArg
(
0
predicate
)
)
;
}
var
nextMethod
=
iterator
.
next
;
var
counter
=
0
;
for
(
var
value
of
allowContentIterWithNext
(
iterator
nextMethod
)
)
{
if
(
callContentFunction
(
predicate
undefined
value
counter
+
+
)
)
{
return
value
;
}
}
}
#
ifdef
NIGHTLY_BUILD
function
IteratorConcat
(
)
{
var
index
=
ArgumentsLength
(
)
*
2
;
var
iterables
=
std_Array
(
index
)
;
for
(
var
i
=
0
;
i
<
ArgumentsLength
(
)
;
i
+
+
)
{
var
item
=
GetArgument
(
i
)
;
if
(
!
IsObject
(
item
)
)
{
ThrowTypeError
(
JSMSG_OBJECT_REQUIRED
typeof
item
)
;
}
var
method
=
item
[
GetBuiltinSymbol
(
"
iterator
"
)
]
;
if
(
!
IsCallable
(
method
)
)
{
ThrowTypeError
(
JSMSG_NOT_ITERABLE
ToSource
(
item
)
)
;
}
DefineDataProperty
(
iterables
-
-
index
item
)
;
DefineDataProperty
(
iterables
-
-
index
method
)
;
}
assert
(
index
=
=
=
0
"
all
items
stored
"
)
;
var
result
=
NewIteratorHelper
(
)
;
var
generator
=
IteratorConcatGenerator
(
iterables
)
;
UnsafeSetReservedSlot
(
result
ITERATOR_HELPER_GENERATOR_SLOT
generator
)
;
return
result
;
}
function
*
IteratorConcatGenerator
(
iterables
)
{
assert
(
IsArray
(
iterables
)
"
iterables
is
an
array
"
)
;
assert
(
iterables
.
length
%
2
=
=
=
0
"
iterables
contains
pairs
(
item
method
)
"
)
;
for
(
var
i
=
iterables
.
length
;
i
>
0
;
)
{
var
item
=
iterables
[
-
-
i
]
;
var
method
=
iterables
[
-
-
i
]
;
iterables
.
length
-
=
2
;
for
(
var
innerValue
of
allowContentIterWith
(
item
method
)
)
{
yield
innerValue
;
}
}
}
function
IteratorZip
(
predicate
)
{
return
false
;
}
function
IteratorZipKeyed
(
predicate
)
{
return
false
;
}
function
IteratorRangeNext
(
)
{
var
obj
=
this
;
if
(
!
IsObject
(
obj
)
|
|
(
obj
=
GuardToIteratorRange
(
obj
)
)
=
=
=
null
)
{
return
callFunction
(
CallIteratorRangeMethodIfWrapped
this
"
IteratorRangeNext
"
)
;
}
var
start
=
UnsafeGetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_START
)
;
var
end
=
UnsafeGetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_END
)
;
var
step
=
UnsafeGetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_STEP
)
;
var
inclusiveEnd
=
UnsafeGetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_INCLUSIVE_END
)
;
var
zero
=
UnsafeGetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_ZERO
)
;
var
one
=
UnsafeGetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_ONE
)
;
var
currentCount
=
UnsafeGetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_CURRENT_COUNT
)
;
var
ifIncrease
=
end
>
start
;
var
ifStepIncrease
=
step
>
zero
;
if
(
ifIncrease
!
=
=
ifStepIncrease
)
{
return
{
value
:
undefined
done
:
true
}
;
}
var
hitsEnd
=
false
;
var
currentYieldingValue
=
start
+
(
step
*
currentCount
)
;
hitsEnd
=
currentYieldingValue
=
=
=
end
&
&
!
inclusiveEnd
;
currentCount
=
currentCount
+
one
;
if
(
ifIncrease
)
{
if
(
inclusiveEnd
)
{
if
(
currentYieldingValue
>
end
)
{
return
{
value
:
undefined
done
:
true
}
;
}
}
else
{
if
(
currentYieldingValue
>
=
end
)
{
return
{
value
:
undefined
done
:
true
}
;
}
}
}
else
{
if
(
inclusiveEnd
)
{
if
(
end
>
currentYieldingValue
)
{
return
{
value
:
undefined
done
:
true
}
;
}
}
else
{
if
(
end
>
=
currentYieldingValue
)
{
return
{
value
:
undefined
done
:
true
}
;
}
}
}
UnsafeSetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_CURRENT_COUNT
currentCount
)
;
if
(
hitsEnd
)
{
return
{
value
:
undefined
done
:
true
}
;
}
return
{
value
:
currentYieldingValue
done
:
false
}
;
}
function
CreateNumericRangeIterator
(
start
end
optionOrStep
isNumberRange
)
{
if
(
isNumberRange
&
&
Number_isNaN
(
start
)
)
{
ThrowRangeError
(
JSMSG_ITERATOR_RANGE_INVALID_START_RANGEERR
)
;
}
if
(
isNumberRange
&
&
Number_isNaN
(
end
)
)
{
ThrowRangeError
(
JSMSG_ITERATOR_RANGE_INVALID_END_RANGEERR
)
;
}
if
(
isNumberRange
)
{
assert
(
typeof
start
=
=
=
'
number
'
"
The
'
start
'
argument
must
be
a
number
"
)
;
if
(
typeof
end
!
=
=
'
number
'
)
{
ThrowTypeError
(
JSMSG_ITERATOR_RANGE_INVALID_END
)
;
}
var
zero
=
0
;
var
one
=
1
;
}
else
{
assert
(
typeof
start
=
=
=
'
bigint
'
"
The
'
start
'
argument
must
be
a
bigint
"
)
;
if
(
typeof
end
!
=
=
'
bigint
'
&
&
!
(
Number_isFinite
(
end
)
)
)
{
ThrowTypeError
(
JSMSG_ITERATOR_RANGE_INVALID_END
)
;
}
var
zero
=
0n
;
var
one
=
1n
;
}
if
(
typeof
start
=
=
=
'
number
'
&
&
!
Number_isFinite
(
start
)
)
{
ThrowRangeError
(
JSMSG_ITERATOR_RANGE_START_INFINITY
)
;
}
var
inclusiveEnd
=
false
;
var
step
;
if
(
optionOrStep
!
=
=
null
&
&
typeof
optionOrStep
=
=
=
'
object
'
)
{
step
=
optionOrStep
.
step
;
inclusiveEnd
=
ToBoolean
(
optionOrStep
.
inclusiveEnd
)
;
}
else
if
(
isNumberRange
&
&
typeof
optionOrStep
=
=
=
'
number
'
)
{
step
=
optionOrStep
;
}
else
if
(
!
isNumberRange
&
&
typeof
optionOrStep
=
=
=
'
bigint
'
)
{
step
=
optionOrStep
;
}
else
if
(
optionOrStep
!
=
=
undefined
&
&
optionOrStep
!
=
=
null
)
{
ThrowTypeError
(
JSMSG_ITERATOR_RANGE_INVALID_STEP
)
;
}
if
(
step
=
=
=
undefined
|
|
step
=
=
=
null
)
{
step
=
end
>
start
?
one
:
-
one
;
}
if
(
typeof
step
=
=
=
"
number
"
&
&
Number_isNaN
(
step
)
)
{
ThrowRangeError
(
JSMSG_ITERATOR_RANGE_STEP_NAN
)
;
}
if
(
isNumberRange
&
&
typeof
step
!
=
=
'
number
'
)
{
ThrowTypeError
(
JSMSG_ITERATOR_RANGE_STEP_NOT_NUMBER
)
;
}
else
if
(
!
isNumberRange
&
&
typeof
step
!
=
=
'
bigint
'
)
{
ThrowTypeError
(
JSMSG_ITERATOR_RANGE_STEP_NOT_BIGINT
)
;
}
if
(
typeof
step
=
=
=
'
number
'
&
&
!
Number_isFinite
(
step
)
)
{
ThrowRangeError
(
JSMSG_ITERATOR_RANGE_STEP_NOT_FINITE
)
;
}
if
(
step
=
=
=
zero
&
&
start
!
=
=
end
)
{
ThrowRangeError
(
JSMSG_ITERATOR_RANGE_STEP_ZERO
)
;
}
var
obj
=
NewIteratorRange
(
)
;
UnsafeSetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_START
start
)
;
UnsafeSetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_END
end
)
;
UnsafeSetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_STEP
step
)
;
UnsafeSetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_INCLUSIVE_END
inclusiveEnd
)
;
UnsafeSetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_ZERO
zero
)
;
UnsafeSetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_ONE
one
)
;
UnsafeSetReservedSlot
(
obj
ITERATOR_RANGE_SLOT_CURRENT_COUNT
zero
)
;
return
obj
;
}
function
IteratorRange
(
start
end
optionOrStep
)
{
if
(
typeof
start
=
=
=
'
number
'
)
{
return
CreateNumericRangeIterator
(
start
end
optionOrStep
true
)
;
}
if
(
typeof
start
=
=
=
'
bigint
'
)
{
return
CreateNumericRangeIterator
(
start
end
optionOrStep
false
)
;
}
ThrowTypeError
(
JSMSG_ITERATOR_RANGE_INVALID_START
)
;
}
#
endif
