#
include
"
builtin
/
RecordObject
.
h
"
#
include
"
jsapi
.
h
"
#
include
"
js
/
Class
.
h
"
#
include
"
vm
/
ObjectOperations
.
h
"
#
include
"
vm
/
RecordType
.
h
"
#
include
"
vm
/
JSObject
-
inl
.
h
"
using
namespace
js
;
RecordObject
*
RecordObject
:
:
create
(
JSContext
*
cx
Handle
<
RecordType
*
>
record
)
{
RecordObject
*
rec
=
NewBuiltinClassInstance
<
RecordObject
>
(
cx
)
;
if
(
!
rec
)
{
return
nullptr
;
}
rec
-
>
setFixedSlot
(
PrimitiveValueSlot
ExtendedPrimitiveValue
(
*
record
)
)
;
return
rec
;
}
RecordType
*
RecordObject
:
:
unbox
(
)
const
{
return
&
getFixedSlot
(
PrimitiveValueSlot
)
.
toExtendedPrimitive
(
)
.
as
<
RecordType
>
(
)
;
}
const
JSClass
RecordObject
:
:
class_
=
{
"
RecordObject
"
JSCLASS_HAS_RESERVED_SLOTS
(
SlotCount
)
JS_NULL_CLASS_OPS
JS_NULL_CLASS_SPEC
JS_NULL_CLASS_EXT
JS_NULL_OBJECT_OPS
}
;
