#
include
"
builtin
/
RawJSONObject
.
h
"
#
include
"
js
/
PropertyDescriptor
.
h
"
#
include
"
vm
/
JSObject
-
inl
.
h
"
using
namespace
js
;
const
JSClass
RawJSONObject
:
:
class_
=
{
"
RawJSON
"
JSCLASS_HAS_RESERVED_SLOTS
(
SlotCount
)
}
;
RawJSONObject
*
RawJSONObject
:
:
create
(
JSContext
*
cx
Handle
<
JSString
*
>
jsonString
)
{
Rooted
<
RawJSONObject
*
>
obj
(
cx
NewObjectWithGivenProto
<
RawJSONObject
>
(
cx
nullptr
)
)
;
if
(
!
obj
)
{
return
nullptr
;
}
Rooted
<
PropertyKey
>
id
(
cx
NameToId
(
cx
-
>
names
(
)
.
rawJSON
)
)
;
Rooted
<
Value
>
jsonStringVal
(
cx
StringValue
(
jsonString
)
)
;
if
(
!
NativeDefineDataProperty
(
cx
obj
id
jsonStringVal
0
)
)
{
return
nullptr
;
}
return
obj
;
}
JSString
*
RawJSONObject
:
:
rawJSON
(
JSContext
*
cx
)
{
PropertyKey
id
(
NameToId
(
cx
-
>
names
(
)
.
rawJSON
)
)
;
JS
:
:
Value
vp
;
MOZ_ALWAYS_TRUE
(
GetPropertyNoGC
(
cx
this
ObjectValue
(
*
this
)
id
&
vp
)
)
;
MOZ_ASSERT
(
vp
.
isString
(
)
)
;
return
vp
.
toString
(
)
;
}
