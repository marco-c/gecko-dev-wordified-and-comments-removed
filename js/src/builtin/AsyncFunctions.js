function
AsyncFunction_wrap
(
unwrapped
)
{
var
wrapper
=
function
(
)
{
try
{
return
AsyncFunction_start
(
callFunction
(
std_Function_apply
unwrapped
this
arguments
)
)
;
}
catch
(
e
)
{
var
promiseCtor
=
GetBuiltinConstructor
(
'
Promise
'
)
;
return
callFunction
(
Promise_static_reject
promiseCtor
e
)
;
}
}
;
return
CreateAsyncFunction
(
wrapper
unwrapped
)
;
}
function
AsyncFunction_start
(
generator
)
{
return
AsyncFunction_resume
(
generator
undefined
generator
.
next
)
;
}
function
AsyncFunction_resume
(
gen
v
method
)
{
var
promiseCtor
=
GetBuiltinConstructor
(
'
Promise
'
)
;
let
result
;
try
{
result
=
callFunction
(
method
gen
v
)
;
}
catch
(
exc
)
{
return
callFunction
(
Promise_static_reject
promiseCtor
exc
)
;
}
if
(
result
.
done
)
return
callFunction
(
Promise_static_resolve
promiseCtor
result
.
value
)
;
return
callFunction
(
Promise_then
callFunction
(
Promise_static_resolve
promiseCtor
result
.
value
)
function
(
val
)
{
return
AsyncFunction_resume
(
gen
val
gen
.
next
)
;
}
function
(
err
)
{
return
AsyncFunction_resume
(
gen
err
gen
.
throw
)
;
}
)
;
}
