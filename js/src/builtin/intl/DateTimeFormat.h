#
ifndef
builtin_intl_DateTimeFormat_h
#
define
builtin_intl_DateTimeFormat_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
builtin
/
intl
/
CommonFunctions
.
h
"
#
include
"
builtin
/
SelfHostingDefines
.
h
"
#
include
"
js
/
Class
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
vm
/
NativeObject
.
h
"
using
UDateFormat
=
void
*
;
namespace
js
{
class
GlobalObject
;
class
DateTimeFormatObject
:
public
NativeObject
{
public
:
static
const
JSClass
class_
;
static
constexpr
uint32_t
INTERNALS_SLOT
=
0
;
static
constexpr
uint32_t
UDATE_FORMAT_SLOT
=
1
;
static
constexpr
uint32_t
SLOT_COUNT
=
2
;
static_assert
(
INTERNALS_SLOT
=
=
INTL_INTERNALS_OBJECT_SLOT
"
INTERNALS_SLOT
must
match
self
-
hosting
define
for
internals
"
"
object
slot
"
)
;
UDateFormat
*
getDateFormat
(
)
const
{
const
auto
&
slot
=
getFixedSlot
(
UDATE_FORMAT_SLOT
)
;
if
(
slot
.
isUndefined
(
)
)
{
return
nullptr
;
}
return
static_cast
<
UDateFormat
*
>
(
slot
.
toPrivate
(
)
)
;
}
void
setDateFormat
(
UDateFormat
*
dateFormat
)
{
setFixedSlot
(
UDATE_FORMAT_SLOT
PrivateValue
(
dateFormat
)
)
;
}
private
:
static
const
JSClassOps
classOps_
;
static
void
finalize
(
JSFreeOp
*
fop
JSObject
*
obj
)
;
}
;
extern
JSObject
*
CreateDateTimeFormatPrototype
(
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
Intl
JS
:
:
Handle
<
GlobalObject
*
>
global
JS
:
:
MutableHandle
<
JSObject
*
>
constructor
intl
:
:
DateTimeFormatOptions
dtfOptions
)
;
extern
MOZ_MUST_USE
bool
intl_DateTimeFormat
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_availableCalendars
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_defaultCalendar
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_IsValidTimeZoneName
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_canonicalizeTimeZone
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_defaultTimeZone
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_defaultTimeZoneOffset
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_isDefaultTimeZone
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_patternForSkeleton
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_patternForStyle
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
extern
MOZ_MUST_USE
bool
intl_FormatDateTime
(
JSContext
*
cx
unsigned
argc
JS
:
:
Value
*
vp
)
;
}
#
endif
