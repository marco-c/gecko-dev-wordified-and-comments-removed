#
ifndef
builtin_intl_StringAsciiChars_h
#
define
builtin_intl_StringAsciiChars_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
Span
.
h
"
#
include
<
stddef
.
h
>
#
include
"
js
/
GCAPI
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
js
/
Vector
.
h
"
#
include
"
vm
/
StringType
.
h
"
namespace
js
:
:
intl
{
class
MOZ_STACK_CLASS
StringAsciiChars
final
{
static
const
size_t
InlineCapacity
=
24
;
JS
:
:
AutoCheckCannotGC
nogc_
;
JSLinearString
*
str_
;
mozilla
:
:
Maybe
<
Vector
<
Latin1Char
InlineCapacity
>
>
ownChars_
;
public
:
explicit
StringAsciiChars
(
JSLinearString
*
str
)
:
str_
(
str
)
{
MOZ_ASSERT
(
StringIsAscii
(
str
)
)
;
}
operator
mozilla
:
:
Span
<
const
char
>
(
)
const
{
if
(
str_
-
>
hasLatin1Chars
(
)
)
{
return
mozilla
:
:
AsChars
(
str_
-
>
latin1Range
(
nogc_
)
)
;
}
return
mozilla
:
:
AsChars
(
mozilla
:
:
Span
<
const
Latin1Char
>
(
*
ownChars_
)
)
;
}
[
[
nodiscard
]
]
bool
init
(
JSContext
*
cx
)
{
if
(
str_
-
>
hasLatin1Chars
(
)
)
{
return
true
;
}
ownChars_
.
emplace
(
cx
)
;
if
(
!
ownChars_
-
>
resize
(
str_
-
>
length
(
)
)
)
{
return
false
;
}
js
:
:
CopyChars
(
ownChars_
-
>
begin
(
)
*
str_
)
;
return
true
;
}
}
;
}
#
endif
