#
ifndef
builtin_streams_PipeToState_h
#
define
builtin_streams_PipeToState_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
<
stdint
.
h
>
#
include
"
js
/
Class
.
h
"
#
include
"
js
/
Value
.
h
"
#
include
"
vm
/
NativeObject
.
h
"
namespace
js
{
class
PipeToState
:
public
NativeObject
{
public
:
enum
Slots
{
Slot_Flags
SlotCount
}
;
private
:
enum
Flags
{
Flag_ShuttingDown
=
1
<
<
0
}
;
uint32_t
flags
(
)
const
{
return
getFixedSlot
(
Slot_Flags
)
.
toInt32
(
)
;
}
void
setFlags
(
uint32_t
flags
)
{
setFixedSlot
(
Slot_Flags
JS
:
:
Int32Value
(
flags
)
)
;
}
public
:
static
const
JSClass
class_
;
bool
shuttingDown
(
)
const
{
return
flags
(
)
&
Flag_ShuttingDown
;
}
void
setShuttingDown
(
)
{
MOZ_ASSERT
(
!
shuttingDown
(
)
)
;
setFlags
(
flags
(
)
|
Flag_ShuttingDown
)
;
}
static
PipeToState
*
create
(
JSContext
*
cx
)
;
}
;
}
#
endif
