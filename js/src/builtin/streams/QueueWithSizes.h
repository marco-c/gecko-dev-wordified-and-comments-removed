#
ifndef
builtin_streams_QueueWithSizes_h
#
define
builtin_streams_QueueWithSizes_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
jstypes
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
js
/
Value
.
h
"
#
include
"
vm
/
List
.
h
"
struct
JS_PUBLIC_API
JSContext
;
namespace
js
{
class
StreamController
;
extern
MOZ_MUST_USE
bool
DequeueValue
(
JSContext
*
cx
JS
:
:
Handle
<
StreamController
*
>
unwrappedContainer
JS
:
:
MutableHandle
<
JS
:
:
Value
>
chunk
)
;
extern
void
DequeueValue
(
StreamController
*
unwrappedContainer
JSContext
*
cx
)
;
extern
MOZ_MUST_USE
bool
EnqueueValueWithSize
(
JSContext
*
cx
JS
:
:
Handle
<
StreamController
*
>
unwrappedContainer
JS
:
:
Handle
<
JS
:
:
Value
>
value
JS
:
:
Handle
<
JS
:
:
Value
>
sizeVal
)
;
extern
MOZ_MUST_USE
bool
ResetQueue
(
JSContext
*
cx
JS
:
:
Handle
<
StreamController
*
>
unwrappedContainer
)
;
inline
bool
QueueIsEmpty
(
ListObject
*
unwrappedQueue
)
{
if
(
unwrappedQueue
-
>
isEmpty
(
)
)
{
return
true
;
}
MOZ_ASSERT
(
(
unwrappedQueue
-
>
length
(
)
%
2
)
=
=
0
"
queue
-
with
-
sizes
must
consist
of
(
value
size
)
element
pairs
and
"
"
so
must
have
even
length
"
)
;
return
false
;
}
}
#
endif
