#
ifndef
builtin_streams_ReadableStreamOperations_h
#
define
builtin_streams_ReadableStreamOperations_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
js
/
Value
.
h
"
class
JS_PUBLIC_API
JSObject
;
namespace
js
{
class
PromiseObject
;
class
ReadableStream
;
class
ReadableStreamDefaultController
;
class
TeeState
;
class
WritableStream
;
extern
MOZ_MUST_USE
PromiseObject
*
ReadableStreamTee_Pull
(
JSContext
*
cx
JS
:
:
Handle
<
TeeState
*
>
unwrappedTeeState
)
;
extern
MOZ_MUST_USE
JSObject
*
ReadableStreamTee_Cancel
(
JSContext
*
cx
JS
:
:
Handle
<
TeeState
*
>
unwrappedTeeState
JS
:
:
Handle
<
ReadableStreamDefaultController
*
>
unwrappedBranch
JS
:
:
Handle
<
JS
:
:
Value
>
reason
)
;
extern
MOZ_MUST_USE
bool
ReadableStreamTee
(
JSContext
*
cx
JS
:
:
Handle
<
ReadableStream
*
>
unwrappedStream
bool
cloneForBranch2
JS
:
:
MutableHandle
<
ReadableStream
*
>
branch1Stream
JS
:
:
MutableHandle
<
ReadableStream
*
>
branch2Stream
)
;
extern
MOZ_MUST_USE
PromiseObject
*
ReadableStreamPipeTo
(
JSContext
*
cx
JS
:
:
Handle
<
ReadableStream
*
>
unwrappedSource
JS
:
:
Handle
<
WritableStream
*
>
unwrappedDest
bool
preventClose
bool
preventAbort
bool
preventCancel
JS
:
:
Handle
<
JSObject
*
>
signal
)
;
}
#
endif
