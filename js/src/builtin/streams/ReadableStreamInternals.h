#
ifndef
builtin_streams_ReadableStreamInternals_h
#
define
builtin_streams_ReadableStreamInternals_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
jstypes
.
h
"
#
include
"
builtin
/
streams
/
ReadableStreamReader
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
js
/
Value
.
h
"
struct
JS_PUBLIC_API
JSContext
;
namespace
js
{
class
PromiseObject
;
class
ReadableStream
;
extern
MOZ_MUST_USE
PromiseObject
*
ReadableStreamAddReadOrReadIntoRequest
(
JSContext
*
cx
JS
:
:
Handle
<
ReadableStream
*
>
unwrappedStream
)
;
extern
MOZ_MUST_USE
JSObject
*
ReadableStreamCancel
(
JSContext
*
cx
JS
:
:
Handle
<
ReadableStream
*
>
unwrappedStream
JS
:
:
Handle
<
JS
:
:
Value
>
reason
)
;
extern
MOZ_MUST_USE
bool
ReadableStreamCloseInternal
(
JSContext
*
cx
JS
:
:
Handle
<
ReadableStream
*
>
unwrappedStream
)
;
extern
MOZ_MUST_USE
JSObject
*
ReadableStreamCreateReadResult
(
JSContext
*
cx
JS
:
:
Handle
<
JS
:
:
Value
>
value
bool
done
ForAuthorCodeBool
forAuthorCode
)
;
extern
MOZ_MUST_USE
bool
ReadableStreamErrorInternal
(
JSContext
*
cx
JS
:
:
Handle
<
ReadableStream
*
>
unwrappedStream
JS
:
:
Handle
<
JS
:
:
Value
>
e
)
;
extern
MOZ_MUST_USE
bool
ReadableStreamFulfillReadOrReadIntoRequest
(
JSContext
*
cx
JS
:
:
Handle
<
ReadableStream
*
>
unwrappedStream
JS
:
:
Handle
<
JS
:
:
Value
>
chunk
bool
done
)
;
extern
uint32_t
ReadableStreamGetNumReadRequests
(
ReadableStream
*
stream
)
;
extern
MOZ_MUST_USE
bool
ReadableStreamHasDefaultReader
(
JSContext
*
cx
JS
:
:
Handle
<
ReadableStream
*
>
unwrappedStream
bool
*
result
)
;
}
#
endif
