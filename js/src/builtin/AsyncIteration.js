function
AsyncIteratorIdentity
(
)
{
return
this
;
}
function
AsyncGeneratorNext
(
val
)
{
assert
(
IsAsyncGeneratorObject
(
this
)
"
ThisArgument
must
be
a
generator
object
for
async
generators
"
)
;
return
resumeGenerator
(
this
val
"
next
"
)
;
}
function
AsyncGeneratorThrow
(
val
)
{
assert
(
IsAsyncGeneratorObject
(
this
)
"
ThisArgument
must
be
a
generator
object
for
async
generators
"
)
;
return
resumeGenerator
(
this
val
"
throw
"
)
;
}
function
AsyncGeneratorReturn
(
val
)
{
assert
(
IsAsyncGeneratorObject
(
this
)
"
ThisArgument
must
be
a
generator
object
for
async
generators
"
)
;
var
rval
=
{
value
:
val
done
:
true
}
;
return
resumeGenerator
(
this
rval
"
return
"
)
;
}
