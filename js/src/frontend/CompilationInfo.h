#
ifndef
frontend_CompilationInfo_h
#
define
frontend_CompilationInfo_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Variant
.
h
"
#
include
"
ds
/
LifoAlloc
.
h
"
#
include
"
frontend
/
FunctionTree
.
h
"
#
include
"
frontend
/
Stencil
.
h
"
#
include
"
frontend
/
UsedNameTracker
.
h
"
#
include
"
js
/
RealmOptions
.
h
"
#
include
"
js
/
Vector
.
h
"
#
include
"
vm
/
JSContext
.
h
"
#
include
"
vm
/
Realm
.
h
"
namespace
js
{
namespace
frontend
{
struct
MOZ_RAII
CompilationInfo
{
UsedNameTracker
usedNames
;
LifoAllocScope
&
allocScope
;
FunctionTreeHolder
treeHolder
;
Vector
<
RegExpCreationData
>
regExpData
;
Vector
<
BigIntCreationData
>
bigIntData
;
JS
:
:
RootedVector
<
ScopeCreationData
>
scopeCreationData
;
JS
:
:
Rooted
<
ScriptSourceObject
*
>
sourceObject
;
CompilationInfo
(
JSContext
*
cx
LifoAllocScope
&
alloc
)
:
usedNames
(
cx
)
allocScope
(
alloc
)
treeHolder
(
cx
)
regExpData
(
cx
)
bigIntData
(
cx
)
scopeCreationData
(
cx
)
sourceObject
(
cx
)
{
}
bool
initFromOptions
(
JSContext
*
cx
const
JS
:
:
ReadOnlyCompileOptions
&
options
)
;
void
initFromSourceObject
(
ScriptSourceObject
*
sso
)
{
sourceObject
=
sso
;
}
CompilationInfo
(
const
CompilationInfo
&
)
=
delete
;
CompilationInfo
(
CompilationInfo
&
&
)
=
delete
;
CompilationInfo
&
operator
=
(
const
CompilationInfo
&
)
=
delete
;
CompilationInfo
&
operator
=
(
CompilationInfo
&
&
)
=
delete
;
}
;
}
}
#
endif
