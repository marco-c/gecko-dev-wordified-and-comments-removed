#
include
"
frontend
/
DecoratorEmitter
.
h
"
#
include
"
frontend
/
BytecodeEmitter
.
h
"
#
include
"
frontend
/
CallOrNewEmitter
.
h
"
#
include
"
frontend
/
IfEmitter
.
h
"
#
include
"
frontend
/
ObjectEmitter
.
h
"
#
include
"
frontend
/
ParseNode
.
h
"
#
include
"
frontend
/
ParserAtom
.
h
"
#
include
"
vm
/
ThrowMsgKind
.
h
"
using
namespace
js
;
using
namespace
js
:
:
frontend
;
DecoratorEmitter
:
:
DecoratorEmitter
(
BytecodeEmitter
*
bce
)
:
bce_
(
bce
)
{
}
bool
DecoratorEmitter
:
:
emitApplyDecoratorsToElementDefinition
(
DecoratorEmitter
:
:
Kind
kind
ParseNode
*
key
ListNode
*
decorators
bool
isStatic
)
{
if
(
decorators
-
>
empty
(
)
)
{
return
true
;
}
for
(
ParseNode
*
decorator
:
decorators
-
>
contents
(
)
)
{
if
(
!
emitDecorationState
(
)
)
{
return
false
;
}
CallOrNewEmitter
cone
(
bce_
JSOp
:
:
Call
CallOrNewEmitter
:
:
ArgumentsKind
:
:
Other
ValueUsage
:
:
WantValue
)
;
if
(
decorator
-
>
is
<
NameNode
>
(
)
)
{
if
(
!
cone
.
emitNameCallee
(
decorator
-
>
as
<
NameNode
>
(
)
.
name
(
)
)
)
{
return
false
;
}
}
else
if
(
decorator
-
>
is
<
ListNode
>
(
)
)
{
PropOpEmitter
&
poe
=
cone
.
prepareForPropCallee
(
false
)
;
if
(
!
poe
.
prepareForObj
(
)
)
{
return
false
;
}
ListNode
*
ln
=
&
decorator
-
>
as
<
ListNode
>
(
)
;
bool
first
=
true
;
for
(
ParseNode
*
node
:
ln
-
>
contentsTo
(
ln
-
>
last
(
)
)
)
{
MOZ_ASSERT
(
node
-
>
is
<
NameNode
>
(
)
)
;
if
(
first
)
{
NameNode
*
obj
=
&
node
-
>
as
<
NameNode
>
(
)
;
if
(
!
bce_
-
>
emitGetName
(
obj
)
)
{
return
false
;
}
first
=
false
;
}
else
{
NameNode
*
prop
=
&
node
-
>
as
<
NameNode
>
(
)
;
GCThingIndex
propAtomIndex
;
if
(
!
bce_
-
>
makeAtomIndex
(
prop
-
>
atom
(
)
ParserAtom
:
:
Atomize
:
:
Yes
&
propAtomIndex
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitAtomOp
(
JSOp
:
:
GetProp
propAtomIndex
)
)
{
return
false
;
}
}
}
NameNode
*
prop
=
&
ln
-
>
last
(
)
-
>
as
<
NameNode
>
(
)
;
if
(
!
poe
.
emitGet
(
prop
-
>
atom
(
)
)
)
{
return
false
;
}
}
else
{
if
(
!
cone
.
prepareForFunctionCallee
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitTree
(
decorator
)
)
{
return
false
;
}
}
if
(
!
cone
.
emitThis
(
)
)
{
return
false
;
}
if
(
!
cone
.
prepareForNonSpreadArguments
(
)
)
{
return
false
;
}
if
(
kind
=
=
Kind
:
:
Method
)
{
if
(
!
bce_
-
>
emitDupAt
(
2
)
)
{
return
false
;
}
}
if
(
!
emitCreateDecoratorContextObject
(
kind
key
isStatic
decorator
-
>
pn_pos
)
)
{
return
false
;
}
if
(
!
cone
.
emitEnd
(
2
decorator
-
>
pn_pos
.
begin
)
)
{
return
false
;
}
if
(
!
emitUpdateDecorationState
(
)
)
{
return
false
;
}
IfEmitter
ie
(
bce_
)
;
if
(
!
ie
.
emitIf
(
mozilla
:
:
Nothing
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Undefined
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Eq
)
)
{
return
false
;
}
if
(
!
ie
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitElseIf
(
mozilla
:
:
Nothing
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitAtomOp
(
JSOp
:
:
GetIntrinsic
TaggedParserAtomIndex
:
:
WellKnown
:
:
IsCallable
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Undefined
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
2
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitCall
(
JSOp
:
:
Call
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Swap
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit2
(
JSOp
:
:
ThrowMsg
uint8_t
(
ThrowMsgKind
:
:
DecoratorInvalidReturnType
)
)
)
{
return
false
;
}
if
(
!
ie
.
emitEnd
(
)
)
{
return
false
;
}
}
return
true
;
}
bool
DecoratorEmitter
:
:
emitDecorationState
(
)
{
return
true
;
}
bool
DecoratorEmitter
:
:
emitUpdateDecorationState
(
)
{
return
true
;
}
bool
DecoratorEmitter
:
:
emitCreateDecoratorAccessObject
(
)
{
ObjectEmitter
oe
(
bce_
)
;
if
(
!
oe
.
emitObject
(
0
)
)
{
return
false
;
}
return
oe
.
emitEnd
(
)
;
}
bool
DecoratorEmitter
:
:
emitCreateAddInitializerFunction
(
)
{
ObjectEmitter
oe
(
bce_
)
;
if
(
!
oe
.
emitObject
(
0
)
)
{
return
false
;
}
return
oe
.
emitEnd
(
)
;
}
bool
DecoratorEmitter
:
:
emitCreateDecoratorContextObject
(
Kind
kind
ParseNode
*
key
bool
isStatic
TokenPos
pos
)
{
MOZ_ASSERT
(
key
-
>
is
<
NameNode
>
(
)
)
;
ObjectEmitter
oe
(
bce_
)
;
if
(
!
oe
.
emitObject
(
6
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
kind
=
=
Kind
:
:
Method
)
{
if
(
!
bce_
-
>
emitStringOp
(
JSOp
:
:
String
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
method
(
)
)
)
{
return
false
;
}
}
else
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
kind
(
)
)
)
{
return
false
;
}
if
(
kind
!
=
Kind
:
:
Class
)
{
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
emitCreateDecoratorAccessObject
(
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
access
(
)
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
isStatic
?
JSOp
:
:
True
:
JSOp
:
:
False
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
static_
(
)
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
key
-
>
isKind
(
ParseNodeKind
:
:
PrivateName
)
?
JSOp
:
:
True
:
JSOp
:
:
False
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
private_
(
)
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitStringOp
(
JSOp
:
:
String
key
-
>
as
<
NameNode
>
(
)
.
atom
(
)
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
name
(
)
)
)
{
return
false
;
}
}
else
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
emitCreateAddInitializerFunction
(
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
addInitializer
(
)
)
)
{
return
false
;
}
return
oe
.
emitEnd
(
)
;
}
