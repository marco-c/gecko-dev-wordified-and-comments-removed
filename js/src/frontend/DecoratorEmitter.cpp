#
include
"
frontend
/
DecoratorEmitter
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
frontend
/
BytecodeEmitter
.
h
"
#
include
"
frontend
/
CallOrNewEmitter
.
h
"
#
include
"
frontend
/
FunctionEmitter
.
h
"
#
include
"
frontend
/
IfEmitter
.
h
"
#
include
"
frontend
/
LexicalScopeEmitter
.
h
"
#
include
"
frontend
/
NameAnalysisTypes
.
h
"
#
include
"
frontend
/
ObjectEmitter
.
h
"
#
include
"
frontend
/
ParseNode
.
h
"
#
include
"
frontend
/
ParserAtom
.
h
"
#
include
"
frontend
/
WhileEmitter
.
h
"
#
include
"
vm
/
ThrowMsgKind
.
h
"
using
namespace
js
;
using
namespace
js
:
:
frontend
;
DecoratorEmitter
:
:
DecoratorEmitter
(
BytecodeEmitter
*
bce
)
:
bce_
(
bce
)
{
}
bool
DecoratorEmitter
:
:
reverseDecoratorsToApplicationOrder
(
const
ListNode
*
decorators
DecoratorsVector
&
vec
)
const
{
MOZ_ASSERT
(
!
decorators
-
>
empty
(
)
)
;
if
(
!
vec
.
resize
(
decorators
-
>
count
(
)
)
)
{
ReportOutOfMemory
(
bce_
-
>
fc
)
;
return
false
;
}
int
end
=
decorators
-
>
count
(
)
-
1
;
for
(
ParseNode
*
decorator
:
decorators
-
>
contents
(
)
)
{
vec
[
end
-
-
]
=
decorator
;
}
return
true
;
}
bool
DecoratorEmitter
:
:
emitApplyDecoratorsToElementDefinition
(
DecoratorEmitter
:
:
Kind
kind
ParseNode
*
key
ListNode
*
decorators
bool
isStatic
)
{
MOZ_ASSERT
(
kind
!
=
Kind
:
:
Field
&
&
kind
!
=
Kind
:
:
Accessor
)
;
MOZ_ASSERT
(
!
decorators
-
>
empty
(
)
)
;
DecoratorsVector
dec_vecs
;
if
(
!
reverseDecoratorsToApplicationOrder
(
decorators
dec_vecs
)
)
{
return
false
;
}
for
(
auto
decorator
:
dec_vecs
)
{
if
(
!
emitDecorationState
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
1
)
)
{
return
false
;
}
if
(
!
emitCallDecoratorForElement
(
kind
key
isStatic
decorator
)
)
{
return
false
;
}
if
(
!
emitUpdateDecorationState
(
)
)
{
return
false
;
}
if
(
!
emitCheckIsUndefined
(
)
)
{
return
false
;
}
InternalIfEmitter
ie
(
bce_
)
;
if
(
!
ie
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitElseIf
(
mozilla
:
:
Nothing
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitCheckIsCallable
(
)
)
{
return
false
;
}
if
(
!
ie
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Swap
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit2
(
JSOp
:
:
ThrowMsg
uint8_t
(
ThrowMsgKind
:
:
DecoratorInvalidReturnType
)
)
)
{
return
false
;
}
if
(
!
ie
.
emitEnd
(
)
)
{
return
false
;
}
}
return
true
;
}
bool
DecoratorEmitter
:
:
emitApplyDecoratorsToFieldDefinition
(
ParseNode
*
key
ListNode
*
decorators
bool
isStatic
)
{
MOZ_ASSERT
(
!
decorators
-
>
empty
(
)
)
;
if
(
!
bce_
-
>
emitUint32Operand
(
JSOp
:
:
NewArray
1
)
)
{
return
false
;
}
if
(
!
emitPropertyKey
(
key
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitUint32Operand
(
JSOp
:
:
InitElemArray
0
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
One
)
)
{
return
false
;
}
DecoratorsVector
dec_vecs
;
if
(
!
reverseDecoratorsToApplicationOrder
(
decorators
dec_vecs
)
)
{
return
false
;
}
for
(
auto
it
=
dec_vecs
.
begin
(
)
;
it
!
=
dec_vecs
.
end
(
)
;
it
+
+
)
{
ParseNode
*
decorator
=
*
it
;
if
(
!
emitDecorationState
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
2
)
)
{
return
false
;
}
if
(
!
emitCallDecoratorForElement
(
Kind
:
:
Field
key
isStatic
decorator
)
)
{
return
false
;
}
if
(
!
emitUpdateDecorationState
(
)
)
{
return
false
;
}
if
(
!
emitCheckIsUndefined
(
)
)
{
return
false
;
}
InternalIfEmitter
ie
(
bce_
)
;
if
(
!
ie
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitElseIf
(
mozilla
:
:
Nothing
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitCheckIsCallable
(
)
)
{
return
false
;
}
if
(
!
ie
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
InitElemInc
)
)
{
return
false
;
}
if
(
!
ie
.
emitElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit2
(
JSOp
:
:
ThrowMsg
uint8_t
(
ThrowMsgKind
:
:
DecoratorInvalidReturnType
)
)
)
{
return
false
;
}
if
(
!
ie
.
emitEnd
(
)
)
{
return
false
;
}
}
return
bce_
-
>
emitPopN
(
1
)
;
}
bool
DecoratorEmitter
:
:
emitApplyDecoratorsToAccessorDefinition
(
ParseNode
*
key
ListNode
*
decorators
bool
isStatic
)
{
MOZ_ASSERT
(
key
-
>
is
<
NameNode
>
(
)
)
;
MOZ_ASSERT
(
!
decorators
-
>
empty
(
)
)
;
if
(
!
bce_
-
>
emitUint32Operand
(
JSOp
:
:
NewArray
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitGetPrivateName
(
&
key
-
>
as
<
NameNode
>
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitUint32Operand
(
JSOp
:
:
InitElemArray
0
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
One
)
)
{
return
false
;
}
DecoratorsVector
dec_vecs
;
if
(
!
reverseDecoratorsToApplicationOrder
(
decorators
dec_vecs
)
)
{
return
false
;
}
for
(
auto
it
=
dec_vecs
.
begin
(
)
;
it
!
=
dec_vecs
.
end
(
)
;
it
+
+
)
{
ParseNode
*
decorator
=
*
it
;
if
(
!
emitDecorationState
(
)
)
{
return
false
;
}
ObjectEmitter
oe
(
bce_
)
;
if
(
!
oe
.
emitObject
(
2
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
decorator
-
>
pn_pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
4
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
get
(
)
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
decorator
-
>
pn_pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
3
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
set
(
)
)
)
{
return
false
;
}
if
(
!
oe
.
emitEnd
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
5
)
)
{
return
false
;
}
if
(
!
emitCallDecoratorForElement
(
Kind
:
:
Accessor
key
isStatic
decorator
)
)
{
return
false
;
}
if
(
!
emitUpdateDecorationState
(
)
)
{
return
false
;
}
if
(
!
emitCheckIsUndefined
(
)
)
{
return
false
;
}
InternalIfEmitter
ie
(
bce_
)
;
if
(
!
ie
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit2
(
JSOp
:
:
CheckIsObj
uint8_t
(
CheckIsObjectKind
:
:
DecoratorReturn
)
)
)
{
return
false
;
}
if
(
!
emitHandleNewValueField
(
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
get
(
)
5
)
)
{
return
false
;
}
if
(
!
emitHandleNewValueField
(
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
set
(
)
4
)
)
{
return
false
;
}
if
(
!
emitHandleNewValueField
(
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
init
(
)
0
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitEnd
(
)
)
{
return
false
;
}
}
return
bce_
-
>
emitPopN
(
1
)
;
}
bool
DecoratorEmitter
:
:
emitApplyDecoratorsToClassDefinition
(
ParseNode
*
key
ListNode
*
decorators
)
{
DecoratorsVector
dec_vecs
;
if
(
!
reverseDecoratorsToApplicationOrder
(
decorators
dec_vecs
)
)
{
return
false
;
}
for
(
auto
it
=
dec_vecs
.
begin
(
)
;
it
!
=
dec_vecs
.
end
(
)
;
it
+
+
)
{
ParseNode
*
decorator
=
*
it
;
if
(
!
emitDecorationState
(
)
)
{
return
false
;
}
CallOrNewEmitter
cone
(
bce_
JSOp
:
:
Call
CallOrNewEmitter
:
:
ArgumentsKind
:
:
Other
ValueUsage
:
:
WantValue
)
;
if
(
!
bce_
-
>
emitCalleeAndThis
(
decorator
nullptr
cone
)
)
{
return
false
;
}
if
(
!
cone
.
prepareForNonSpreadArguments
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
2
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Undefined
)
)
{
return
false
;
}
if
(
!
emitCreateDecoratorContextObject
(
Kind
:
:
Class
key
false
decorator
-
>
pn_pos
)
)
{
return
false
;
}
if
(
!
cone
.
emitEnd
(
2
decorator
-
>
pn_pos
.
begin
)
)
{
return
false
;
}
if
(
!
emitUpdateDecorationState
(
)
)
{
return
false
;
}
if
(
!
emitCheckIsUndefined
(
)
)
{
return
false
;
}
InternalIfEmitter
ie
(
bce_
)
;
if
(
!
ie
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitElseIf
(
mozilla
:
:
Nothing
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitCheckIsCallable
(
)
)
{
return
false
;
}
if
(
!
ie
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Swap
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ie
.
emitElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit2
(
JSOp
:
:
ThrowMsg
uint8_t
(
ThrowMsgKind
:
:
DecoratorInvalidReturnType
)
)
)
{
return
false
;
}
if
(
!
ie
.
emitEnd
(
)
)
{
return
false
;
}
}
return
true
;
}
bool
DecoratorEmitter
:
:
emitInitializeFieldOrAccessor
(
)
{
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Zero
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
GetElem
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
3
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Swap
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
GetElem
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit2
(
JSOp
:
:
Pick
2
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitAtomOp
(
JSOp
:
:
GetProp
TaggedParserAtomIndex
:
:
WellKnown
:
:
length
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
One
)
)
{
return
false
;
}
InternalWhileEmitter
wh
(
bce_
)
;
if
(
!
wh
.
emitCond
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
2
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Lt
)
)
{
return
false
;
}
if
(
!
wh
.
emitBody
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
2
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
GetElem
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
6
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit2
(
JSOp
:
:
Pick
5
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitCall
(
JSOp
:
:
Call
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit2
(
JSOp
:
:
Unpick
3
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Inc
)
)
{
return
false
;
}
if
(
!
wh
.
emitEnd
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
3
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
InitElem
)
)
{
return
false
;
}
return
bce_
-
>
emitPopN
(
1
)
;
}
bool
DecoratorEmitter
:
:
emitCallExtraInitializers
(
TaggedParserAtomIndex
extraInitializers
)
{
MOZ_ASSERT
(
extraInitializers
=
=
TaggedParserAtomIndex
:
:
WellKnown
:
:
dot_instanceExtraInitializers_
(
)
)
;
if
(
!
bce_
-
>
emitGetName
(
extraInitializers
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitAtomOp
(
JSOp
:
:
GetProp
TaggedParserAtomIndex
:
:
WellKnown
:
:
length
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Zero
)
)
{
return
false
;
}
InternalWhileEmitter
wh
(
bce_
)
;
if
(
!
wh
.
emitCond
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
2
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Lt
)
)
{
return
false
;
}
if
(
!
wh
.
emitBody
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
2
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitDupAt
(
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
GetElem
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitGetName
(
TaggedParserAtomIndex
:
:
WellKnown
:
:
dot_this_
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitCall
(
JSOp
:
:
CallIgnoresRv
0
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Pop
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Inc
)
)
{
return
false
;
}
if
(
!
wh
.
emitEnd
(
)
)
{
return
false
;
}
return
bce_
-
>
emitPopN
(
3
)
;
}
bool
DecoratorEmitter
:
:
emitPropertyKey
(
ParseNode
*
key
)
{
if
(
key
-
>
is
<
NameNode
>
(
)
)
{
NameNode
*
keyAsNameNode
=
&
key
-
>
as
<
NameNode
>
(
)
;
if
(
keyAsNameNode
-
>
privateNameKind
(
)
=
=
PrivateNameKind
:
:
None
)
{
if
(
!
bce_
-
>
emitStringOp
(
JSOp
:
:
String
keyAsNameNode
-
>
atom
(
)
)
)
{
return
false
;
}
}
else
{
MOZ_ASSERT
(
keyAsNameNode
-
>
privateNameKind
(
)
=
=
PrivateNameKind
:
:
Field
)
;
if
(
!
bce_
-
>
emitGetPrivateName
(
keyAsNameNode
)
)
{
return
false
;
}
}
}
else
if
(
key
-
>
isKind
(
ParseNodeKind
:
:
NumberExpr
)
)
{
if
(
!
bce_
-
>
emitNumberOp
(
key
-
>
as
<
NumericLiteral
>
(
)
.
value
(
)
)
)
{
return
false
;
}
}
else
{
MOZ_ASSERT
(
key
-
>
isKind
(
ParseNodeKind
:
:
ComputedName
)
)
;
if
(
!
bce_
-
>
emitComputedPropertyName
(
&
key
-
>
as
<
UnaryNode
>
(
)
)
)
{
return
false
;
}
}
return
true
;
}
bool
DecoratorEmitter
:
:
emitDecorationState
(
)
{
return
true
;
}
bool
DecoratorEmitter
:
:
emitUpdateDecorationState
(
)
{
return
true
;
}
bool
DecoratorEmitter
:
:
emitCallDecoratorForElement
(
Kind
kind
ParseNode
*
key
bool
isStatic
ParseNode
*
decorator
)
{
MOZ_ASSERT
(
kind
!
=
Kind
:
:
Class
)
;
CallOrNewEmitter
cone
(
bce_
JSOp
:
:
Call
CallOrNewEmitter
:
:
ArgumentsKind
:
:
Other
ValueUsage
:
:
WantValue
)
;
if
(
!
bce_
-
>
emitCalleeAndThis
(
decorator
nullptr
cone
)
)
{
return
false
;
}
if
(
!
cone
.
prepareForNonSpreadArguments
(
)
)
{
return
false
;
}
if
(
kind
=
=
Kind
:
:
Field
)
{
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Undefined
)
)
{
return
false
;
}
}
else
if
(
kind
=
=
Kind
:
:
Getter
|
|
kind
=
=
Kind
:
:
Method
|
|
kind
=
=
Kind
:
:
Setter
)
{
if
(
!
bce_
-
>
emitDupAt
(
3
)
)
{
return
false
;
}
}
else
{
MOZ_ASSERT
(
kind
=
=
Kind
:
:
Accessor
)
;
if
(
!
bce_
-
>
emitPickN
(
3
)
)
{
return
false
;
}
}
if
(
!
bce_
-
>
emitPickN
(
3
)
)
{
return
false
;
}
if
(
!
emitCreateDecoratorContextObject
(
kind
key
isStatic
decorator
-
>
pn_pos
)
)
{
return
false
;
}
return
cone
.
emitEnd
(
2
decorator
-
>
pn_pos
.
begin
)
;
}
bool
DecoratorEmitter
:
:
emitCreateDecoratorAccessObject
(
)
{
ObjectEmitter
oe
(
bce_
)
;
if
(
!
oe
.
emitObject
(
0
)
)
{
return
false
;
}
return
oe
.
emitEnd
(
)
;
}
bool
DecoratorEmitter
:
:
emitCheckIsUndefined
(
)
{
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Undefined
)
)
{
return
false
;
}
return
bce_
-
>
emit1
(
JSOp
:
:
Eq
)
;
}
bool
DecoratorEmitter
:
:
emitCreateAddInitializerFunction
(
FunctionNode
*
addInitializerFunction
TaggedParserAtomIndex
initializers
)
{
MOZ_ASSERT
(
addInitializerFunction
)
;
MOZ_ASSERT
(
initializers
=
=
TaggedParserAtomIndex
:
:
WellKnown
:
:
dot_instanceExtraInitializers_
(
)
)
;
FunctionEmitter
fe
(
bce_
addInitializerFunction
-
>
funbox
(
)
FunctionSyntaxKind
:
:
Statement
FunctionEmitter
:
:
IsHoisted
:
:
No
)
;
if
(
!
fe
.
prepareForNonLazy
(
)
)
{
return
false
;
}
BytecodeEmitter
bce2
(
bce_
addInitializerFunction
-
>
funbox
(
)
)
;
if
(
!
bce2
.
init
(
)
)
{
return
false
;
}
FunctionScriptEmitter
fse
(
&
bce2
addInitializerFunction
-
>
funbox
(
)
mozilla
:
:
Nothing
(
)
mozilla
:
:
Nothing
(
)
)
;
if
(
!
fse
.
prepareForParameters
(
)
)
{
return
false
;
}
if
(
!
bce2
.
emitFunctionFormalParameters
(
addInitializerFunction
-
>
body
(
)
)
)
{
return
false
;
}
if
(
!
fse
.
prepareForBody
(
)
)
{
return
false
;
}
LexicalScopeNode
*
lexicalScope
=
addInitializerFunction
-
>
body
(
)
-
>
body
(
)
;
LexicalScopeEmitter
lse
(
&
bce2
)
;
if
(
lexicalScope
-
>
isEmptyScope
(
)
)
{
if
(
!
lse
.
emitEmptyScope
(
)
)
{
return
false
;
}
}
else
{
if
(
!
lse
.
emitScope
(
lexicalScope
-
>
kind
(
)
lexicalScope
-
>
scopeBindings
(
)
)
)
{
return
false
;
}
}
NameLocation
loc
=
bce2
.
lookupName
(
TaggedParserAtomIndex
:
:
WellKnown
:
:
initializer
(
)
)
;
MOZ_ASSERT
(
loc
.
kind
(
)
=
=
NameLocation
:
:
Kind
:
:
ArgumentSlot
)
;
if
(
!
bce2
.
emitArgOp
(
JSOp
:
:
GetArg
loc
.
argumentSlot
(
)
)
)
{
return
false
;
}
if
(
!
bce2
.
emitCheckIsCallable
(
)
)
{
return
false
;
}
InternalIfEmitter
ifCallable
(
&
bce2
)
;
if
(
!
ifCallable
.
emitThenElse
(
)
)
{
return
false
;
}
loc
=
bce2
.
lookupName
(
initializers
)
;
MOZ_ASSERT
(
loc
.
kind
(
)
=
=
NameLocation
:
:
Kind
:
:
EnvironmentCoordinate
)
;
if
(
!
bce2
.
emitEnvCoordOp
(
JSOp
:
:
GetAliasedVar
loc
.
environmentCoordinate
(
)
)
)
{
return
false
;
}
if
(
!
bce2
.
emitEnvCoordOp
(
JSOp
:
:
CheckAliasedLexical
loc
.
environmentCoordinate
(
)
)
)
{
return
false
;
}
if
(
!
bce2
.
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce2
.
emitAtomOp
(
JSOp
:
:
GetProp
TaggedParserAtomIndex
:
:
WellKnown
:
:
length
(
)
)
)
{
return
false
;
}
if
(
!
bce2
.
emitPickN
(
2
)
)
{
return
false
;
}
if
(
!
bce2
.
emit1
(
JSOp
:
:
InitElemInc
)
)
{
return
false
;
}
if
(
!
bce2
.
emitPopN
(
2
)
)
{
return
false
;
}
if
(
!
ifCallable
.
emitElse
(
)
)
{
return
false
;
}
if
(
!
bce2
.
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
bce2
.
emit2
(
JSOp
:
:
ThrowMsg
uint8_t
(
ThrowMsgKind
:
:
DecoratorInvalidReturnType
)
)
)
{
return
false
;
}
if
(
!
ifCallable
.
emitEnd
(
)
)
{
return
false
;
}
if
(
!
lse
.
emitEnd
(
)
)
{
return
false
;
}
if
(
!
fse
.
emitEndBody
(
)
)
{
return
false
;
}
if
(
!
fse
.
intoStencil
(
)
)
{
return
false
;
}
return
fe
.
emitNonLazyEnd
(
)
;
}
bool
DecoratorEmitter
:
:
emitCreateDecoratorContextObject
(
Kind
kind
ParseNode
*
key
bool
isStatic
TokenPos
pos
)
{
ObjectEmitter
oe
(
bce_
)
;
size_t
propertyCount
=
kind
=
=
Kind
:
:
Class
?
3
:
6
;
if
(
!
oe
.
emitObject
(
propertyCount
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
TaggedParserAtomIndex
kindStr
;
switch
(
kind
)
{
case
Kind
:
:
Method
:
kindStr
=
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
method
(
)
;
break
;
case
Kind
:
:
Getter
:
kindStr
=
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
getter
(
)
;
break
;
case
Kind
:
:
Setter
:
kindStr
=
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
setter
(
)
;
break
;
case
Kind
:
:
Accessor
:
kindStr
=
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
accessor
(
)
;
break
;
case
Kind
:
:
Field
:
kindStr
=
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
field
(
)
;
break
;
case
Kind
:
:
Class
:
kindStr
=
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
class_
(
)
;
break
;
default
:
MOZ_ASSERT_UNREACHABLE
(
"
Unknown
kind
"
)
;
break
;
}
if
(
!
bce_
-
>
emitStringOp
(
JSOp
:
:
String
kindStr
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
kind
(
)
)
)
{
return
false
;
}
if
(
kind
!
=
Kind
:
:
Class
)
{
MOZ_ASSERT
(
key
!
=
nullptr
"
Expect
key
to
be
present
except
for
classes
"
)
;
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
emitCreateDecoratorAccessObject
(
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
access
(
)
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
isStatic
?
JSOp
:
:
True
:
JSOp
:
:
False
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
static_
(
)
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
key
-
>
isKind
(
ParseNodeKind
:
:
PrivateName
)
?
JSOp
:
:
True
:
JSOp
:
:
False
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
private_
(
)
)
)
{
return
false
;
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
key
-
>
is
<
NameNode
>
(
)
)
{
if
(
!
bce_
-
>
emitStringOp
(
JSOp
:
:
String
key
-
>
as
<
NameNode
>
(
)
.
atom
(
)
)
)
{
return
false
;
}
}
else
{
if
(
!
emitPropertyKey
(
key
)
)
{
return
false
;
}
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
name
(
)
)
)
{
return
false
;
}
}
else
{
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
key
!
=
nullptr
)
{
if
(
!
bce_
-
>
emitStringOp
(
JSOp
:
:
String
key
-
>
as
<
NameNode
>
(
)
.
atom
(
)
)
)
{
return
false
;
}
}
else
{
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Undefined
)
)
{
return
false
;
}
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
name
(
)
)
)
{
return
false
;
}
}
if
(
!
oe
.
prepareForPropValue
(
pos
.
begin
PropertyEmitter
:
:
Kind
:
:
Prototype
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPickN
(
1
)
)
{
return
false
;
}
if
(
!
oe
.
emitInit
(
frontend
:
:
AccessorType
:
:
None
frontend
:
:
TaggedParserAtomIndex
:
:
WellKnown
:
:
addInitializer
(
)
)
)
{
return
false
;
}
return
oe
.
emitEnd
(
)
;
}
bool
DecoratorEmitter
:
:
emitHandleNewValueField
(
TaggedParserAtomIndex
atom
int8_t
offset
)
{
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Dup
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitStringOp
(
JSOp
:
:
String
atom
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
GetElem
)
)
{
return
false
;
}
if
(
!
emitCheckIsUndefined
(
)
)
{
return
false
;
}
InternalIfEmitter
ifCallable
(
bce_
)
;
if
(
!
ifCallable
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
ifCallable
.
emitElseIf
(
mozilla
:
:
Nothing
(
)
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitCheckIsCallable
(
)
)
{
return
false
;
}
if
(
!
ifCallable
.
emitThenElse
(
)
)
{
return
false
;
}
if
(
offset
!
=
0
)
{
if
(
!
bce_
-
>
emitPickN
(
offset
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitUnpickN
(
offset
-
1
)
)
{
return
false
;
}
}
else
{
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
Swap
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitUnpickN
(
3
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit1
(
JSOp
:
:
InitElemInc
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPickN
(
2
)
)
{
return
false
;
}
}
if
(
!
ifCallable
.
emitElse
(
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitPopN
(
1
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emit2
(
JSOp
:
:
ThrowMsg
uint8_t
(
ThrowMsgKind
:
:
DecoratorInvalidReturnType
)
)
)
{
return
false
;
}
return
ifCallable
.
emitEnd
(
)
;
}
