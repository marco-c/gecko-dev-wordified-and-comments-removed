FINAL_LIBRARY
=
'
js
'
LOCAL_INCLUDES
+
=
[
'
!
.
.
'
'
.
.
'
]
include
(
'
.
.
/
js
-
config
.
mozbuild
'
)
include
(
'
.
.
/
js
-
cxxflags
.
mozbuild
'
)
GeneratedFile
(
'
ReservedWordsGenerated
.
h
'
script
=
'
GenerateReservedWords
.
py
'
inputs
=
[
'
ReservedWords
.
h
'
]
)
if
CONFIG
[
'
JS_ENABLE_SMOOSH
'
]
:
GeneratedFile
(
'
smoosh_generated
.
h
'
script
=
'
/
build
/
RunCbindgen
.
py
'
entry_point
=
'
generate_with_same_crate
'
inputs
=
[
'
/
js
/
src
/
frontend
/
smoosh
'
]
)
UNIFIED_SOURCES
+
=
[
'
AbstractScopePtr
.
cpp
'
'
BCEScriptStencil
.
cpp
'
'
BytecodeCompiler
.
cpp
'
'
BytecodeControlStructures
.
cpp
'
'
BytecodeEmitter
.
cpp
'
'
BytecodeSection
.
cpp
'
'
CallOrNewEmitter
.
cpp
'
'
CForEmitter
.
cpp
'
'
DefaultEmitter
.
cpp
'
'
DoWhileEmitter
.
cpp
'
'
ElemOpEmitter
.
cpp
'
'
EmitterScope
.
cpp
'
'
ExpressionStatementEmitter
.
cpp
'
'
FoldConstants
.
cpp
'
'
ForInEmitter
.
cpp
'
'
ForOfEmitter
.
cpp
'
'
ForOfLoopControl
.
cpp
'
'
FunctionEmitter
.
cpp
'
'
IfEmitter
.
cpp
'
'
JumpList
.
cpp
'
'
LabelEmitter
.
cpp
'
'
LexicalScopeEmitter
.
cpp
'
'
NameFunctions
.
cpp
'
'
NameOpEmitter
.
cpp
'
'
ObjectEmitter
.
cpp
'
'
ObjLiteral
.
cpp
'
'
OptionalEmitter
.
cpp
'
'
ParseContext
.
cpp
'
'
ParseNode
.
cpp
'
'
ParseNodeVerify
.
cpp
'
'
PropOpEmitter
.
cpp
'
'
SharedContext
.
cpp
'
'
SourceNotes
.
cpp
'
'
Stencil
.
cpp
'
'
SwitchEmitter
.
cpp
'
'
TDZCheckCache
.
cpp
'
'
TokenStream
.
cpp
'
'
TryEmitter
.
cpp
'
'
WhileEmitter
.
cpp
'
]
if
CONFIG
[
'
JS_ENABLE_SMOOSH
'
]
:
UNIFIED_SOURCES
+
=
[
'
Frontend2
.
cpp
'
]
SOURCES
+
=
[
'
Parser
.
cpp
'
]
if
CONFIG
[
'
JS_BUILD_BINAST
'
]
:
SOURCES
+
=
[
'
BinASTParser
.
cpp
'
'
BinASTParserBase
.
cpp
'
'
BinASTParserPerTokenizer
.
cpp
'
'
BinASTRuntimeSupport
.
cpp
'
'
BinASTToken
.
cpp
'
'
BinASTTokenReaderBase
.
cpp
'
'
BinASTTokenReaderContext
.
cpp
'
'
BinASTTokenReaderMultipart
.
cpp
'
]
if
CONFIG
[
'
JS_STANDALONE
'
]
:
DIRS
+
=
[
'
binast
'
]
if
CONFIG
[
'
FUZZING_INTERFACES
'
]
and
CONFIG
[
'
LIBFUZZER
'
]
:
include
(
'
/
tools
/
fuzzing
/
libfuzzer
-
flags
.
mozbuild
'
)
SOURCES
[
'
BinASTParser
.
cpp
'
]
.
flags
+
=
libfuzzer_flags
SOURCES
[
'
BinASTParserBase
.
cpp
'
]
.
flags
+
=
libfuzzer_flags
SOURCES
[
'
BinASTParserPerTokenizer
.
cpp
'
]
.
flags
+
=
libfuzzer_flags
SOURCES
[
'
BinASTToken
.
cpp
'
]
.
flags
+
=
libfuzzer_flags
SOURCES
[
'
BinASTTokenReaderBase
.
cpp
'
]
.
flags
+
=
libfuzzer_flags
SOURCES
[
'
BinASTTokenReaderMultipart
.
cpp
'
]
.
flags
+
=
libfuzzer_flags
