#
ifndef
frontend_ParseInfo_h
#
define
frontend_ParseInfo_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
Variant
.
h
"
#
include
"
ds
/
LifoAlloc
.
h
"
#
include
"
frontend
/
FunctionTree
.
h
"
#
include
"
frontend
/
UsedNameTracker
.
h
"
#
include
"
js
/
RealmOptions
.
h
"
#
include
"
js
/
Vector
.
h
"
#
include
"
vm
/
JSContext
.
h
"
#
include
"
vm
/
Realm
.
h
"
namespace
js
{
namespace
frontend
{
class
BigIntLiteral
;
struct
MOZ_RAII
ParseInfo
{
UsedNameTracker
usedNames
;
LifoAllocScope
&
allocScope
;
FunctionTreeHolder
treeHolder
;
using
DeferredAllocationType
=
mozilla
:
:
Variant
<
BigIntLiteral
*
>
;
using
DeferredAllocationVector
=
js
:
:
Vector
<
DeferredAllocationType
>
;
DeferredAllocationVector
deferredAllocations
;
ParseInfo
(
JSContext
*
cx
LifoAllocScope
&
alloc
)
:
usedNames
(
cx
)
allocScope
(
alloc
)
treeHolder
(
cx
cx
-
>
realm
(
)
-
>
behaviors
(
)
.
deferredParserAlloc
(
)
?
FunctionTreeHolder
:
:
Mode
:
:
Deferred
:
FunctionTreeHolder
:
:
Mode
:
:
Eager
)
deferredAllocations
(
cx
)
{
}
}
;
}
}
#
endif
