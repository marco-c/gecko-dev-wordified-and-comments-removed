#
ifndef
frontend_BytecodeCompiler_h
#
define
frontend_BytecodeCompiler_h
#
include
"
NamespaceImports
.
h
"
#
include
"
vm
/
String
.
h
"
class
JSLinearString
;
namespace
js
{
class
LazyScript
;
class
LifoAlloc
;
class
ModuleObject
;
class
ScriptSourceObject
;
class
StaticScope
;
struct
SourceCompressionTask
;
namespace
frontend
{
JSScript
*
CompileScript
(
ExclusiveContext
*
cx
LifoAlloc
*
alloc
HandleObject
scopeChain
Handle
<
StaticScope
*
>
enclosingStaticScope
HandleScript
evalCaller
const
ReadOnlyCompileOptions
&
options
SourceBufferHolder
&
srcBuf
JSString
*
source_
=
nullptr
SourceCompressionTask
*
extraSct
=
nullptr
ScriptSourceObject
*
*
sourceObjectOut
=
nullptr
)
;
ModuleObject
*
CompileModule
(
JSContext
*
cx
const
ReadOnlyCompileOptions
&
options
SourceBufferHolder
&
srcBuf
)
;
ModuleObject
*
CompileModule
(
ExclusiveContext
*
cx
const
ReadOnlyCompileOptions
&
options
SourceBufferHolder
&
srcBuf
LifoAlloc
*
alloc
ScriptSourceObject
*
*
sourceObjectOut
=
nullptr
)
;
MOZ_MUST_USE
bool
CompileLazyFunction
(
JSContext
*
cx
Handle
<
LazyScript
*
>
lazy
const
char16_t
*
chars
size_t
length
)
;
MOZ_MUST_USE
bool
CompileFunctionBody
(
JSContext
*
cx
MutableHandleFunction
fun
const
ReadOnlyCompileOptions
&
options
Handle
<
PropertyNameVector
>
formals
JS
:
:
SourceBufferHolder
&
srcBuf
Handle
<
StaticScope
*
>
enclosingStaticScope
)
;
MOZ_MUST_USE
bool
CompileFunctionBody
(
JSContext
*
cx
MutableHandleFunction
fun
const
ReadOnlyCompileOptions
&
options
Handle
<
PropertyNameVector
>
formals
JS
:
:
SourceBufferHolder
&
srcBuf
)
;
MOZ_MUST_USE
bool
CompileStarGeneratorBody
(
JSContext
*
cx
MutableHandleFunction
fun
const
ReadOnlyCompileOptions
&
options
Handle
<
PropertyNameVector
>
formals
JS
:
:
SourceBufferHolder
&
srcBuf
)
;
ScriptSourceObject
*
CreateScriptSourceObject
(
ExclusiveContext
*
cx
const
ReadOnlyCompileOptions
&
options
)
;
bool
IsIdentifier
(
JSLinearString
*
str
)
;
bool
IsIdentifier
(
const
char16_t
*
chars
size_t
length
)
;
bool
IsKeyword
(
JSLinearString
*
str
)
;
void
MarkParser
(
JSTracer
*
trc
JS
:
:
AutoGCRooter
*
parser
)
;
}
}
#
endif
