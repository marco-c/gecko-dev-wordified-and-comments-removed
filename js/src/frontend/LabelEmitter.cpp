#
include
"
frontend
/
LabelEmitter
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
frontend
/
BytecodeEmitter
.
h
"
#
include
"
vm
/
Opcodes
.
h
"
using
namespace
js
;
using
namespace
js
:
:
frontend
;
bool
LabelEmitter
:
:
emitLabel
(
JSAtom
*
name
)
{
MOZ_ASSERT
(
state_
=
=
State
:
:
Start
)
;
uint32_t
index
;
if
(
!
bce_
-
>
makeAtomIndex
(
name
&
index
)
)
{
return
false
;
}
if
(
!
bce_
-
>
emitJump
(
JSOP_LABEL
&
top_
)
)
{
return
false
;
}
controlInfo_
.
emplace
(
bce_
name
bce_
-
>
offset
(
)
)
;
#
ifdef
DEBUG
state_
=
State
:
:
Label
;
#
endif
return
true
;
}
bool
LabelEmitter
:
:
emitEnd
(
)
{
MOZ_ASSERT
(
state_
=
=
State
:
:
Label
)
;
JumpTarget
brk
{
bce_
-
>
lastNonJumpTargetOffset
(
)
}
;
bce_
-
>
patchJumpsToTarget
(
top_
brk
)
;
if
(
!
controlInfo_
-
>
patchBreaks
(
bce_
)
)
{
return
false
;
}
controlInfo_
.
reset
(
)
;
#
ifdef
DEBUG
state_
=
State
:
:
End
;
#
endif
return
true
;
}
