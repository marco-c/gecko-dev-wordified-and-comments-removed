#
include
"
js
/
Realm
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
jsapi
-
tests
/
tests
.
h
"
#
include
"
vm
/
CommonPropertyNames
.
h
"
#
include
"
vm
/
JSAtomState
.
h
"
#
include
"
vm
/
JSContext
.
h
"
BEGIN_TEST
(
testAtomizeWithoutActiveZone
)
{
MOZ_ASSERT
(
cx
-
>
zone
(
)
)
;
JS
:
:
RootedString
testAtom1
(
cx
JS_AtomizeString
(
cx
"
test1234
!
"
)
)
;
CHECK
(
testAtom1
)
;
JS
:
:
RootedString
testAtom2
(
cx
)
;
{
JSAutoNullableRealm
ar
(
cx
nullptr
)
;
MOZ_ASSERT
(
!
cx
-
>
zone
(
)
)
;
JSString
*
atom
=
JS_AtomizeAndPinString
(
cx
"
boolean
"
)
;
CHECK
(
atom
)
;
CHECK_EQUAL
(
atom
cx
-
>
names
(
)
.
boolean
)
;
atom
=
JS_AtomizeAndPinString
(
cx
"
8
"
)
;
CHECK
(
atom
)
;
CHECK_EQUAL
(
atom
cx
-
>
staticStrings
(
)
.
getUint
(
8
)
)
;
atom
=
JS_AtomizeAndPinString
(
cx
"
test1234
!
"
)
;
CHECK
(
atom
)
;
CHECK_EQUAL
(
atom
testAtom1
)
;
testAtom2
=
JS_AtomizeAndPinString
(
cx
"
asdflkjsdf987_
"
)
;
CHECK
(
testAtom2
)
;
}
MOZ_ASSERT
(
cx
-
>
zone
(
)
)
;
JSString
*
atom
=
JS_AtomizeString
(
cx
"
asdflkjsdf987_
"
)
;
CHECK
(
atom
)
;
CHECK_EQUAL
(
atom
testAtom2
)
;
return
true
;
}
END_TEST
(
testAtomizeWithoutActiveZone
)
