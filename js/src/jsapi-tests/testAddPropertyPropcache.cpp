#
include
"
js
/
Array
.
h
"
#
include
"
jsapi
-
tests
/
tests
.
h
"
static
int
callCount
=
0
;
static
bool
AddProperty
(
JSContext
*
cx
JS
:
:
HandleObject
obj
JS
:
:
HandleId
id
JS
:
:
HandleValue
v
)
{
callCount
+
+
;
return
true
;
}
static
const
JSClassOps
AddPropertyClassOps
=
{
AddProperty
nullptr
nullptr
nullptr
nullptr
nullptr
nullptr
nullptr
nullptr
nullptr
nullptr
}
;
static
const
JSClass
AddPropertyClass
=
{
"
AddPropertyTester
"
0
&
AddPropertyClassOps
}
;
BEGIN_TEST
(
testAddPropertyHook
)
{
static
const
int
ExpectedCount
=
100
;
JS
:
:
RootedObject
obj
(
cx
JS_NewPlainObject
(
cx
)
)
;
CHECK
(
obj
)
;
JS
:
:
RootedValue
proto
(
cx
JS
:
:
ObjectValue
(
*
obj
)
)
;
JS_InitClass
(
cx
global
obj
&
AddPropertyClass
nullptr
0
nullptr
nullptr
nullptr
nullptr
)
;
obj
=
JS
:
:
NewArrayObject
(
cx
0
)
;
CHECK
(
obj
)
;
JS
:
:
RootedValue
arr
(
cx
JS
:
:
ObjectValue
(
*
obj
)
)
;
CHECK
(
JS_DefineProperty
(
cx
global
"
arr
"
arr
JSPROP_ENUMERATE
)
)
;
JS
:
:
RootedObject
arrObj
(
cx
&
arr
.
toObject
(
)
)
;
for
(
int
i
=
0
;
i
<
ExpectedCount
;
+
+
i
)
{
obj
=
JS_NewObject
(
cx
&
AddPropertyClass
)
;
CHECK
(
obj
)
;
CHECK
(
JS_DefineElement
(
cx
arrObj
i
obj
JSPROP_ENUMERATE
)
)
;
}
EXEC
(
"
'
use
strict
'
;
\
n
"
"
for
(
var
i
=
0
;
i
<
arr
.
length
;
+
+
i
)
\
n
"
"
arr
[
i
]
.
prop
=
42
;
\
n
"
)
;
CHECK
(
callCount
=
=
ExpectedCount
)
;
return
true
;
}
END_TEST
(
testAddPropertyHook
)
