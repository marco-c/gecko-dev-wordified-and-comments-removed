#
include
"
mozilla
/
Utf8
.
h
"
#
include
"
js
/
CompilationAndEvaluation
.
h
"
#
include
"
js
/
GlobalObject
.
h
"
#
include
"
js
/
MemoryFunctions
.
h
"
#
include
"
js
/
SourceText
.
h
"
#
include
"
jsapi
-
tests
/
tests
.
h
"
#
include
"
vm
/
JSScript
.
h
"
BEGIN_TEST
(
testBug795104
)
{
JS
:
:
RealmOptions
options
;
options
.
behaviors
(
)
.
setDiscardSource
(
true
)
;
JS
:
:
RootedObject
g
(
cx
JS_NewGlobalObject
(
cx
getGlobalClass
(
)
nullptr
JS
:
:
FireOnNewGlobalHook
options
)
)
;
CHECK
(
g
)
;
JSAutoRealm
ar
(
cx
g
)
;
const
size_t
strLen
=
60002
;
char
*
s
=
static_cast
<
char
*
>
(
JS_malloc
(
cx
strLen
)
)
;
CHECK
(
s
)
;
s
[
0
]
=
'
"
'
;
memset
(
s
+
1
'
x
'
strLen
-
2
)
;
s
[
strLen
-
1
]
=
'
"
'
;
JS
:
:
SourceText
<
mozilla
:
:
Utf8Unit
>
srcBuf
;
CHECK
(
srcBuf
.
init
(
cx
s
strLen
JS
:
:
SourceOwnership
:
:
Borrowed
)
)
;
JS
:
:
CompileOptions
opts
(
cx
)
;
opts
.
setNoScriptRval
(
true
)
;
JS
:
:
RootedValue
unused
(
cx
)
;
CHECK
(
JS
:
:
Evaluate
(
cx
opts
srcBuf
&
unused
)
)
;
JS
:
:
RootedFunction
fun
(
cx
)
;
JS
:
:
RootedObjectVector
emptyScopeChain
(
cx
)
;
opts
.
setNoScriptRval
(
false
)
;
fun
=
JS
:
:
CompileFunction
(
cx
emptyScopeChain
opts
"
f
"
0
nullptr
srcBuf
)
;
CHECK
(
fun
)
;
JS_free
(
cx
s
)
;
return
true
;
}
END_TEST
(
testBug795104
)
