#
include
"
js
/
SliceBudget
.
h
"
#
include
"
jsapi
-
tests
/
tests
.
h
"
using
namespace
js
;
BEGIN_TEST
(
testSliceBudgetUnlimited
)
{
SliceBudget
budget
=
SliceBudget
:
:
unlimited
(
)
;
CHECK
(
budget
.
isUnlimited
(
)
)
;
CHECK
(
!
budget
.
isTimeBudget
(
)
)
;
CHECK
(
!
budget
.
isWorkBudget
(
)
)
;
CHECK
(
!
budget
.
isOverBudget
(
)
)
;
budget
.
step
(
1000000
)
;
CHECK
(
!
budget
.
isOverBudget
(
)
)
;
return
true
;
}
END_TEST
(
testSliceBudgetUnlimited
)
BEGIN_TEST
(
testSliceBudgetWork
)
{
SliceBudget
budget
=
SliceBudget
(
WorkBudget
(
10000
)
)
;
CHECK
(
!
budget
.
isUnlimited
(
)
)
;
CHECK
(
budget
.
isWorkBudget
(
)
)
;
CHECK
(
!
budget
.
isTimeBudget
(
)
)
;
CHECK
(
budget
.
workBudget
(
)
=
=
10000
)
;
CHECK
(
!
budget
.
isOverBudget
(
)
)
;
budget
.
step
(
5000
)
;
CHECK
(
!
budget
.
isOverBudget
(
)
)
;
budget
.
step
(
5000
)
;
CHECK
(
budget
.
isOverBudget
(
)
)
;
CHECK
(
budget
.
isOverBudget
(
)
)
;
budget
.
resetOverBudget
(
)
;
CHECK
(
!
budget
.
isOverBudget
(
)
)
;
return
true
;
}
END_TEST
(
testSliceBudgetWork
)
BEGIN_TEST
(
testSliceBudgetTime
)
{
SliceBudget
budget
=
SliceBudget
(
TimeBudget
(
10000
)
)
;
CHECK
(
!
budget
.
isUnlimited
(
)
)
;
CHECK
(
!
budget
.
isWorkBudget
(
)
)
;
CHECK
(
budget
.
isTimeBudget
(
)
)
;
CHECK
(
budget
.
timeBudget
(
)
=
=
10000
)
;
CHECK
(
!
budget
.
isOverBudget
(
)
)
;
budget
.
step
(
5000
)
;
budget
.
step
(
5000
)
;
CHECK
(
!
budget
.
isOverBudget
(
)
)
;
return
true
;
}
END_TEST
(
testSliceBudgetTime
)
BEGIN_TEST
(
testSliceBudgetTimeZero
)
{
SliceBudget
budget
=
SliceBudget
(
TimeBudget
(
0
)
)
;
CHECK
(
!
budget
.
isOverBudget
(
)
)
;
budget
.
step
(
1000
)
;
CHECK
(
budget
.
isOverBudget
(
)
)
;
CHECK
(
budget
.
isOverBudget
(
)
)
;
budget
.
resetOverBudget
(
)
;
CHECK
(
!
budget
.
isOverBudget
(
)
)
;
return
true
;
}
END_TEST
(
testSliceBudgetTimeZero
)
