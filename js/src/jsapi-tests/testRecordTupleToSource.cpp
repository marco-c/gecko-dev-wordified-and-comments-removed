#
ifdef
ENABLE_RECORD_TUPLE
#
include
<
string
>
#
include
"
jsfriendapi
.
h
"
#
include
"
jsapi
-
tests
/
tests
.
h
"
static
const
struct
TestTuple
{
const
char
*
expr_string
;
const
char
*
expected
;
}
tests
[
]
=
{
{
"
#
[
]
"
"
#
[
]
"
}
{
"
#
[
1
2
3
]
"
"
#
[
1
2
3
]
"
}
{
"
#
{
}
"
"
#
{
}
"
}
{
"
#
{
\
"
a
\
"
:
1
\
"
b
\
"
:
\
"
c
\
"
\
"
c
\
"
:
#
[
]
}
"
"
#
{
\
"
a
\
"
:
1
\
"
b
\
"
:
\
"
c
\
"
\
"
c
\
"
:
#
[
]
}
"
}
{
"
Object
(
#
[
]
)
"
"
#
[
]
"
}
{
"
Object
(
#
[
1
2
3
]
)
"
"
#
[
1
2
3
]
"
}
{
"
Object
(
#
{
}
)
"
"
#
{
}
"
}
{
"
Object
(
#
{
\
"
a
\
"
:
1
\
"
b
\
"
:
\
"
c
\
"
\
"
c
\
"
:
#
[
]
}
)
"
"
#
{
\
"
a
\
"
:
1
\
"
b
\
"
:
\
"
c
\
"
\
"
c
\
"
:
#
[
]
}
"
}
}
;
BEGIN_TEST
(
testRecordTupleToSource
)
{
JS
:
:
Rooted
<
JS
:
:
Value
>
result
(
cx
)
;
for
(
const
auto
&
test
:
tests
)
{
EVAL
(
test
.
expr_string
&
result
)
;
JSLinearString
*
prettyPrinted
=
JS_ASSERT_STRING_IS_LINEAR
(
JS_ValueToSource
(
cx
result
)
)
;
CHECK
(
JS_LinearStringEqualsAscii
(
prettyPrinted
test
.
expected
)
)
;
}
return
true
;
}
END_TEST
(
testRecordTupleToSource
)
#
endif
