#
ifndef
wasm_exception_h
#
define
wasm_exception_h
#
include
"
js
/
Class
.
h
"
#
include
"
js
/
RefCounted
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
vm
/
JSObject
.
h
"
#
include
"
vm
/
NativeObject
.
h
"
namespace
js
{
namespace
wasm
{
struct
ExceptionTag
:
AtomicRefCounted
<
ExceptionTag
>
{
ExceptionTag
(
)
=
default
;
}
;
using
SharedExceptionTag
=
RefPtr
<
ExceptionTag
>
;
using
SharedExceptionTagVector
=
Vector
<
SharedExceptionTag
0
SystemAllocPolicy
>
;
class
WasmJSExceptionObject
:
public
NativeObject
{
static
const
unsigned
VALUE_SLOT
=
0
;
public
:
static
const
unsigned
RESERVED_SLOTS
=
1
;
static
const
JSClass
class_
;
const
Value
&
value
(
)
const
{
return
getFixedSlot
(
VALUE_SLOT
)
;
}
static
WasmJSExceptionObject
*
create
(
JSContext
*
cx
MutableHandleValue
value
)
;
}
;
}
}
#
endif
