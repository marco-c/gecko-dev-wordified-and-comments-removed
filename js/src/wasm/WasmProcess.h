#
ifndef
wasm_process_h
#
define
wasm_process_h
#
include
"
mozilla
/
Atomics
.
h
"
#
include
"
wasm
/
WasmMemory
.
h
"
namespace
js
{
namespace
wasm
{
class
Code
;
class
CodeRange
;
class
CodeSegment
;
class
TagType
;
extern
const
TagType
*
sWrappedJSValueTagType
;
static
constexpr
uint32_t
WrappedJSValueTagType_ValueOffset
=
0
;
const
CodeSegment
*
LookupCodeSegment
(
const
void
*
pc
const
CodeRange
*
*
codeRange
=
nullptr
)
;
const
Code
*
LookupCode
(
const
void
*
pc
const
CodeRange
*
*
codeRange
=
nullptr
)
;
bool
InCompiledCode
(
void
*
pc
)
;
extern
mozilla
:
:
Atomic
<
bool
>
CodeExists
;
bool
RegisterCodeSegment
(
const
CodeSegment
*
cs
)
;
void
UnregisterCodeSegment
(
const
CodeSegment
*
cs
)
;
bool
IsHugeMemoryEnabled
(
IndexType
t
)
;
[
[
nodiscard
]
]
bool
DisableHugeMemory
(
)
;
bool
Init
(
)
;
void
ShutDown
(
)
;
}
}
#
endif
