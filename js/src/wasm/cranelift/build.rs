extern
crate
bindgen
;
use
std
:
:
env
;
use
std
:
:
path
:
:
PathBuf
;
fn
main
(
)
{
println
!
(
"
cargo
:
rerun
-
if
-
changed
=
baldrapi
.
h
"
)
;
let
bindings
=
bindgen
:
:
builder
(
)
.
disable_name_namespacing
(
)
.
whitelist_function
(
"
env_
.
*
"
)
.
whitelist_function
(
"
global_
.
*
"
)
.
whitelist_function
(
"
table_
.
*
"
)
.
whitelist_function
(
"
funcType_
.
*
"
)
.
whitelist_type
(
"
Cranelift
.
*
"
)
.
rustified_enum
(
"
BD_
.
*
|
Trap
|
TypeCode
|
FuncTypeIdDescKind
"
)
.
whitelist_type
(
"
BD_
.
*
|
Trap
|
TypeCode
|
FuncTypeIdDescKind
"
)
.
header
(
"
baldrapi
.
h
"
)
.
clang_args
(
&
[
"
-
x
"
"
c
+
+
"
"
-
std
=
c
+
+
14
"
]
)
.
clang_arg
(
"
-
I
.
.
/
.
.
"
)
.
generate
(
)
.
expect
(
"
Unable
to
generate
baldrapi
.
h
bindings
"
)
;
let
out_path
=
PathBuf
:
:
from
(
env
:
:
var
(
"
OUT_DIR
"
)
.
unwrap
(
)
)
;
bindings
.
write_to_file
(
out_path
.
join
(
"
bindings
.
rs
"
)
)
.
expect
(
"
Couldn
'
t
write
bindings
!
"
)
;
}
