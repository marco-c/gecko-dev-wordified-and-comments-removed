#
ifndef
wasm_wasm_baseline_object_inl_h
#
define
wasm_wasm_baseline_object_inl_h
namespace
js
{
namespace
wasm
{
const
FuncType
&
BaseCompiler
:
:
funcType
(
)
const
{
return
*
moduleEnv_
.
funcs
[
func_
.
index
]
.
type
;
}
const
TypeIdDesc
&
BaseCompiler
:
:
funcTypeId
(
)
const
{
return
*
moduleEnv_
.
funcs
[
func_
.
index
]
.
typeId
;
}
bool
BaseCompiler
:
:
usesMemory
(
)
const
{
return
moduleEnv_
.
usesMemory
(
)
;
}
bool
BaseCompiler
:
:
usesSharedMemory
(
)
const
{
return
moduleEnv_
.
usesSharedMemory
(
)
;
}
const
Local
&
BaseCompiler
:
:
localFromSlot
(
uint32_t
slot
MIRType
type
)
{
MOZ_ASSERT
(
localInfo_
[
slot
]
.
type
=
=
type
)
;
return
localInfo_
[
slot
]
;
}
BytecodeOffset
BaseCompiler
:
:
bytecodeOffset
(
)
const
{
return
iter_
.
bytecodeOffset
(
)
;
}
bool
BaseCompiler
:
:
isMem32
(
)
const
{
return
moduleEnv_
.
memory
-
>
indexType
(
)
=
=
IndexType
:
:
I32
;
}
bool
BaseCompiler
:
:
isMem64
(
)
const
{
return
moduleEnv_
.
memory
-
>
indexType
(
)
=
=
IndexType
:
:
I64
;
}
}
}
#
endif
