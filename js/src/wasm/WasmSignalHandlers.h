#
ifndef
wasm_signal_handlers_h
#
define
wasm_signal_handlers_h
#
include
"
mozilla
/
Attributes
.
h
"
#
if
defined
(
XP_DARWIN
)
#
include
<
mach
/
mach
.
h
>
#
endif
#
include
"
js
/
ProfilingFrameIterator
.
h
"
#
include
"
threading
/
Thread
.
h
"
#
include
"
wasm
/
WasmProcess
.
h
"
namespace
js
{
namespace
wasm
{
typedef
JS
:
:
ProfilingFrameIterator
:
:
RegisterState
RegisterState
;
MOZ_MUST_USE
bool
EnsureSignalHandlers
(
JSContext
*
cx
)
;
bool
HaveSignalHandlers
(
)
;
bool
MemoryAccessTraps
(
const
RegisterState
&
regs
uint8_t
*
addr
uint32_t
numBytes
uint8_t
*
*
newPC
)
;
bool
HandleIllegalInstruction
(
const
RegisterState
&
regs
uint8_t
*
*
newPC
)
;
#
if
defined
(
XP_DARWIN
)
class
MachExceptionHandler
{
bool
installed_
;
js
:
:
Thread
thread_
;
mach_port_t
port_
;
void
uninstall
(
)
;
public
:
MachExceptionHandler
(
)
;
~
MachExceptionHandler
(
)
{
uninstall
(
)
;
}
mach_port_t
port
(
)
const
{
return
port_
;
}
bool
installed
(
)
const
{
return
installed_
;
}
bool
install
(
JSContext
*
cx
)
;
}
;
#
endif
}
}
#
endif
