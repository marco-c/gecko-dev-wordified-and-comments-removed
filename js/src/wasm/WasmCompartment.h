#
ifndef
wasm_compartment_h
#
define
wasm_compartment_h
#
include
"
wasm
/
WasmJS
.
h
"
namespace
js
{
namespace
wasm
{
class
CodeSegment
;
typedef
Vector
<
Instance
*
0
SystemAllocPolicy
>
InstanceVector
;
typedef
Vector
<
const
CodeSegment
*
0
SystemAllocPolicy
>
CodeSegmentVector
;
class
Compartment
{
InstanceVector
instances_
;
CodeSegmentVector
codeSegments_
;
volatile
bool
mutatingInstances_
;
struct
AutoMutateInstances
{
Compartment
&
c
;
explicit
AutoMutateInstances
(
Compartment
&
c
)
:
c
(
c
)
{
MOZ_ASSERT
(
!
c
.
mutatingInstances_
)
;
c
.
mutatingInstances_
=
true
;
}
~
AutoMutateInstances
(
)
{
MOZ_ASSERT
(
c
.
mutatingInstances_
)
;
c
.
mutatingInstances_
=
false
;
}
}
;
public
:
explicit
Compartment
(
Zone
*
zone
)
;
~
Compartment
(
)
;
bool
registerInstance
(
JSContext
*
cx
HandleWasmInstanceObject
instanceObj
)
;
void
unregisterInstance
(
Instance
&
instance
)
;
const
InstanceVector
&
instances
(
)
const
{
return
instances_
;
}
const
CodeSegment
*
lookupCodeSegment
(
const
void
*
pc
)
const
;
const
Code
*
lookupCode
(
const
void
*
pc
)
const
;
void
ensureProfilingLabels
(
bool
profilingEnabled
)
;
void
addSizeOfExcludingThis
(
mozilla
:
:
MallocSizeOf
mallocSizeOf
size_t
*
compartmentTables
)
;
}
;
}
}
#
endif
