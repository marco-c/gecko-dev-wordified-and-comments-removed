#
ifndef
js_wasm_WasmFeatures_h
#
define
js_wasm_WasmFeatures_h
#
include
"
js
/
WasmFeatures
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
namespace
js
{
class
JSStringBuilder
;
namespace
wasm
{
bool
HasPlatformSupport
(
JSContext
*
cx
)
;
bool
HasSupport
(
JSContext
*
cx
)
;
bool
BaselineAvailable
(
JSContext
*
cx
)
;
bool
IonAvailable
(
JSContext
*
cx
)
;
bool
AnyCompilerAvailable
(
JSContext
*
cx
)
;
bool
WasmCompilerForAsmJSAvailable
(
JSContext
*
cx
)
;
bool
BaselineDisabledByFeatures
(
JSContext
*
cx
bool
*
isDisabled
JSStringBuilder
*
reason
=
nullptr
)
;
bool
IonDisabledByFeatures
(
JSContext
*
cx
bool
*
isDisabled
JSStringBuilder
*
reason
=
nullptr
)
;
bool
StreamingCompilationAvailable
(
JSContext
*
cx
)
;
bool
CodeCachingAvailable
(
JSContext
*
cx
)
;
bool
ThreadsAvailable
(
JSContext
*
cx
)
;
#
define
WASM_FEATURE
(
NAME
.
.
.
)
bool
NAME
#
#
Available
(
JSContext
*
cx
)
;
JS_FOR_WASM_FEATURES
(
WASM_FEATURE
)
#
undef
WASM_FEATURE
bool
SimdAvailable
(
JSContext
*
cx
)
;
bool
IsSimdPrivilegedContext
(
JSContext
*
cx
)
;
#
if
defined
(
ENABLE_WASM_SIMD
)
&
&
defined
(
DEBUG
)
void
ReportSimdAnalysis
(
const
char
*
data
)
;
#
endif
bool
ExceptionsAvailable
(
JSContext
*
cx
)
;
}
}
#
endif
