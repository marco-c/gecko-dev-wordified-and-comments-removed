#
ifndef
wasm_pi_h
#
define
wasm_pi_h
#
include
"
mozilla
/
DoublyLinkedList
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
wasm
/
WasmValType
.
h
"
namespace
js
:
:
wasm
{
class
SuspenderObject
;
static
const
uint32_t
SuspenderObjectDataSlot
=
0
;
enum
SuspenderArgPosition
{
None
=
-
1
First
=
0
Last
=
1
}
;
enum
SuspenderState
{
Initial
Moribund
Active
Suspended
}
;
class
SuspenderObjectData
:
public
mozilla
:
:
DoublyLinkedListElement
<
SuspenderObjectData
>
{
void
*
stackMemory_
;
void
*
mainFP_
;
void
*
mainSP_
;
void
*
suspendableFP_
;
void
*
suspendableSP_
;
void
*
suspendableExitFP_
;
void
*
suspendedReturnAddress_
;
SuspenderState
state_
;
#
ifdef
_WIN64
void
*
savedStackBase_
;
void
*
savedStackLimit_
;
#
endif
public
:
explicit
SuspenderObjectData
(
void
*
stackMemory
)
;
inline
SuspenderState
state
(
)
const
{
return
state_
;
}
void
setState
(
SuspenderState
state
)
{
state_
=
state
;
}
inline
void
*
stackMemory
(
)
const
{
return
stackMemory_
;
}
inline
void
*
mainFP
(
)
const
{
return
mainFP_
;
}
inline
void
*
mainSP
(
)
const
{
return
mainSP_
;
}
inline
void
*
suspendableFP
(
)
const
{
return
suspendableFP_
;
}
inline
void
*
suspendableSP
(
)
const
{
return
suspendableSP_
;
}
inline
void
*
suspendableExitFP
(
)
const
{
return
suspendableExitFP_
;
}
inline
void
*
suspendedReturnAddress
(
)
const
{
return
suspendedReturnAddress_
;
}
#
ifdef
_WIN64
void
updateTIBStackFields
(
)
;
void
restoreTIBStackFields
(
)
;
#
endif
static
constexpr
size_t
offsetOfMainFP
(
)
{
return
offsetof
(
SuspenderObjectData
mainFP_
)
;
}
static
constexpr
size_t
offsetOfMainSP
(
)
{
return
offsetof
(
SuspenderObjectData
mainSP_
)
;
}
static
constexpr
size_t
offsetOfSuspendableFP
(
)
{
return
offsetof
(
SuspenderObjectData
suspendableFP_
)
;
}
static
constexpr
size_t
offsetOfSuspendableSP
(
)
{
return
offsetof
(
SuspenderObjectData
suspendableSP_
)
;
}
static
constexpr
size_t
offsetOfSuspendableExitFP
(
)
{
return
offsetof
(
SuspenderObjectData
suspendableExitFP_
)
;
}
static
constexpr
size_t
offsetOfSuspendedReturnAddress
(
)
{
return
offsetof
(
SuspenderObjectData
suspendedReturnAddress_
)
;
}
}
;
#
ifdef
ENABLE_WASM_JSPI
bool
ParseSuspendingPromisingString
(
JSContext
*
cx
JS
:
:
HandleValue
val
SuspenderArgPosition
&
result
)
;
bool
CallImportOnMainThread
(
JSContext
*
cx
Instance
*
instance
int32_t
funcImportIndex
int32_t
argc
uint64_t
*
argv
)
;
bool
IsAllowedOnSuspendableStack
(
HandleFunction
fn
)
;
void
UnwindStackSwitch
(
JSContext
*
cx
)
;
JSFunction
*
WasmSuspendingFunctionCreate
(
JSContext
*
cx
HandleObject
func
wasm
:
:
ValTypeVector
&
&
params
wasm
:
:
ValTypeVector
&
&
results
SuspenderArgPosition
argPosition
)
;
JSFunction
*
WasmPromisingFunctionCreate
(
JSContext
*
cx
HandleObject
func
wasm
:
:
ValTypeVector
&
&
params
wasm
:
:
ValTypeVector
&
&
results
SuspenderArgPosition
argPosition
)
;
#
endif
void
UpdateSuspenderState
(
Instance
*
instance
SuspenderObject
*
suspender
UpdateSuspenderStateAction
action
)
;
}
#
endif
