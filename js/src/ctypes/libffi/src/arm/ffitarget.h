#
ifndef
LIBFFI_TARGET_H
#
define
LIBFFI_TARGET_H
#
ifndef
LIBFFI_H
#
error
"
Please
do
not
include
ffitarget
.
h
directly
into
your
source
.
Use
ffi
.
h
instead
.
"
#
endif
#
ifndef
LIBFFI_ASM
typedef
unsigned
long
ffi_arg
;
typedef
signed
long
ffi_sarg
;
typedef
enum
ffi_abi
{
FFI_FIRST_ABI
=
0
FFI_SYSV
FFI_VFP
FFI_LAST_ABI
#
if
defined
(
__ARM_PCS_VFP
)
|
|
defined
(
_M_ARM
)
FFI_DEFAULT_ABI
=
FFI_VFP
#
else
FFI_DEFAULT_ABI
=
FFI_SYSV
#
endif
}
ffi_abi
;
#
endif
#
define
FFI_EXTRA_CIF_FIELDS
\
int
vfp_used
;
\
unsigned
short
vfp_reg_free
vfp_nargs
;
\
signed
char
vfp_args
[
16
]
\
#
define
FFI_TARGET_SPECIFIC_VARIADIC
#
ifndef
_M_ARM
#
define
FFI_TARGET_HAS_COMPLEX_TYPE
#
endif
#
define
FFI_CLOSURES
1
#
define
FFI_GO_CLOSURES
1
#
define
FFI_NATIVE_RAW_API
0
#
if
defined
(
FFI_EXEC_TRAMPOLINE_TABLE
)
&
&
FFI_EXEC_TRAMPOLINE_TABLE
#
ifdef
__MACH__
#
define
FFI_TRAMPOLINE_SIZE
12
#
define
FFI_TRAMPOLINE_CLOSURE_OFFSET
8
#
else
#
error
"
No
trampoline
table
implementation
"
#
endif
#
else
#
ifdef
_MSC_VER
#
define
FFI_TRAMPOLINE_SIZE
16
#
define
FFI_TRAMPOLINE_CLOSURE_FUNCTION
12
#
else
#
define
FFI_TRAMPOLINE_SIZE
12
#
endif
#
define
FFI_TRAMPOLINE_CLOSURE_OFFSET
FFI_TRAMPOLINE_SIZE
#
endif
#
endif
