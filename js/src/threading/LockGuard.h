#
ifndef
threading_LockGuard_h
#
define
threading_LockGuard_h
#
include
"
mozilla
/
Attributes
.
h
"
namespace
js
{
template
<
typename
GuardT
>
class
MOZ_RAII
UnlockGuard
;
template
<
typename
Mutex
>
class
MOZ_RAII
LockGuard
{
friend
class
UnlockGuard
<
LockGuard
<
Mutex
>
>
;
friend
class
ConditionVariable
;
Mutex
&
mutex
;
public
:
explicit
LockGuard
(
Mutex
&
mutex
)
:
mutex
(
mutex
)
{
lock
(
)
;
}
~
LockGuard
(
)
{
unlock
(
)
;
}
LockGuard
(
const
LockGuard
&
other
)
=
delete
;
protected
:
void
lock
(
)
{
mutex
.
lock
(
)
;
}
void
unlock
(
)
{
mutex
.
unlock
(
)
;
}
}
;
template
<
typename
GuardT
>
class
MOZ_RAII
UnlockGuard
{
GuardT
&
guard
;
public
:
explicit
UnlockGuard
(
GuardT
&
guard
)
:
guard
(
guard
)
{
guard
.
unlock
(
)
;
}
~
UnlockGuard
(
)
{
guard
.
lock
(
)
;
}
UnlockGuard
(
const
UnlockGuard
&
other
)
=
delete
;
}
;
}
#
endif
