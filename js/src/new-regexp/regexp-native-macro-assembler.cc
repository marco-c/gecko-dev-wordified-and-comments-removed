#
include
"
new
-
regexp
/
regexp
-
macro
-
assembler
-
arch
.
h
"
#
include
"
new
-
regexp
/
regexp
-
stack
.
h
"
#
include
"
jit
/
MacroAssembler
-
inl
.
h
"
namespace
v8
{
namespace
internal
{
using
js
:
:
jit
:
:
StackMacroAssembler
;
SMRegExpMacroAssembler
:
:
SMRegExpMacroAssembler
(
JSContext
*
cx
Isolate
*
isolate
StackMacroAssembler
&
masm
Zone
*
zone
Mode
mode
uint32_t
num_capture_registers
)
:
NativeRegExpMacroAssembler
(
isolate
zone
)
cx_
(
cx
)
masm_
(
masm
)
mode_
(
mode
)
num_registers_
(
num_capture_registers
)
num_capture_registers_
(
num_capture_registers
)
{
MOZ_ASSERT
(
num_capture_registers_
%
2
=
=
0
)
;
}
int
SMRegExpMacroAssembler
:
:
stack_limit_slack
(
)
{
return
RegExpStack
:
:
kStackLimitSlack
;
}
RegExpMacroAssembler
:
:
IrregexpImplementation
SMRegExpMacroAssembler
:
:
Implementation
(
)
{
return
kBytecodeImplementation
;
}
}
}
