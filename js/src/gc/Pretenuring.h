#
ifndef
gc_Pretenuring_h
#
define
gc_Pretenuring_h
#
include
"
mozilla
/
Atomics
.
h
"
#
include
"
gc
/
AllocKind
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
namespace
js
{
namespace
gc
{
class
AllocSite
{
public
:
enum
class
State
:
uint32_t
{
ShortLived
Unknown
LongLived
}
;
private
:
JS
:
:
Zone
*
const
zone_
;
JSScript
*
script_
=
nullptr
;
mozilla
:
:
Atomic
<
State
mozilla
:
:
ReleaseAcquire
>
state_
{
State
:
:
Unknown
}
;
public
:
explicit
AllocSite
(
JS
:
:
Zone
*
zone
)
:
zone_
(
zone
)
{
}
AllocSite
(
JS
:
:
Zone
*
zone
JSScript
*
script
)
:
zone_
(
zone
)
script_
(
script
)
{
}
JS
:
:
Zone
*
zone
(
)
const
{
return
zone_
;
}
bool
hasScript
(
)
const
{
return
script_
;
}
JSScript
*
script
(
)
const
{
return
script_
;
}
InitialHeap
initialHeap
(
)
const
{
return
state_
=
=
State
:
:
LongLived
?
TenuredHeap
:
DefaultHeap
;
}
}
;
struct
PretenuringZone
{
explicit
PretenuringZone
(
JS
:
:
Zone
*
zone
)
:
unknownAllocSite
(
zone
)
optimizedAllocSite
(
zone
)
{
}
AllocSite
unknownAllocSite
;
AllocSite
optimizedAllocSite
;
}
;
}
}
#
endif
