#
ifndef
gc_FreeOp_inl_h
#
define
gc_FreeOp_inl_h
#
include
"
gc
/
FreeOp
.
h
"
#
include
"
gc
/
ZoneAllocator
.
h
"
#
include
"
js
/
RefCounted
.
h
"
namespace
js
{
inline
void
FreeOp
:
:
free_
(
gc
:
:
Cell
*
cell
void
*
p
size_t
nbytes
MemoryUse
use
)
{
if
(
p
)
{
RemoveCellMemory
(
cell
nbytes
use
)
;
js_free
(
p
)
;
}
}
inline
void
FreeOp
:
:
freeLater
(
gc
:
:
Cell
*
cell
void
*
p
size_t
nbytes
MemoryUse
use
)
{
if
(
p
)
{
RemoveCellMemory
(
cell
nbytes
use
)
;
freeLater
(
p
)
;
}
}
inline
void
FreeOp
:
:
freeLater
(
void
*
p
)
{
MOZ_ASSERT
(
!
isDefaultFreeOp
(
)
)
;
AutoEnterOOMUnsafeRegion
oomUnsafe
;
if
(
!
freeLaterList
.
append
(
p
)
)
{
oomUnsafe
.
crash
(
"
FreeOp
:
:
freeLater
"
)
;
}
}
template
<
class
T
>
inline
void
FreeOp
:
:
release
(
gc
:
:
Cell
*
cell
T
*
p
size_t
nbytes
MemoryUse
use
)
{
if
(
p
)
{
RemoveCellMemory
(
cell
nbytes
use
)
;
p
-
>
Release
(
)
;
}
}
}
#
endif
