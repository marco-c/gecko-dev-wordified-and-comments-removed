#
ifndef
gc_MallocedBlockCache_h
#
define
gc_MallocedBlockCache_h
#
include
"
ds
/
PointerAndUint7
.
h
"
#
include
"
js
/
AllocPolicy
.
h
"
#
include
"
js
/
Vector
.
h
"
#
include
"
util
/
Poison
.
h
"
namespace
js
{
namespace
gc
{
class
MallocedBlockCache
{
public
:
static
const
size_t
STEP
=
16
;
static
const
size_t
NUM_LISTS
=
32
;
static_assert
(
NUM_LISTS
<
=
(
1
<
<
7
)
)
;
static
const
size_t
OVERSIZE_BLOCK_LIST_ID
=
0
;
using
MallocedBlockVector
=
Vector
<
void
*
0
SystemAllocPolicy
>
;
MallocedBlockVector
lists
[
NUM_LISTS
]
;
~
MallocedBlockCache
(
)
;
[
[
nodiscard
]
]
PointerAndUint7
alloc
(
size_t
size
)
;
void
free
(
PointerAndUint7
blockAndListID
)
;
void
preen
(
double
percentOfBlocksToDiscard
)
;
void
clear
(
)
;
size_t
sizeOfExcludingThis
(
mozilla
:
:
MallocSizeOf
mallocSizeOf
)
const
;
}
;
}
}
#
endif
