#
ifndef
gc_Rooting_h
#
define
gc_Rooting_h
#
include
"
gc
/
Allocator
.
h
"
#
include
"
gc
/
Policy
.
h
"
#
include
"
js
/
GCVector
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
js
/
TypeDecls
.
h
"
class
JSLinearString
;
namespace
js
{
class
PropertyName
;
class
NativeObject
;
class
ArrayObject
;
class
GlobalObject
;
using
HandleNativeObject
=
JS
:
:
Handle
<
NativeObject
*
>
;
using
HandleAtom
=
JS
:
:
Handle
<
JSAtom
*
>
;
using
HandleLinearString
=
JS
:
:
Handle
<
JSLinearString
*
>
;
using
HandlePropertyName
=
JS
:
:
Handle
<
PropertyName
*
>
;
using
HandleArrayObject
=
JS
:
:
Handle
<
ArrayObject
*
>
;
using
MutableHandleAtom
=
JS
:
:
MutableHandle
<
JSAtom
*
>
;
using
MutableHandleNativeObject
=
JS
:
:
MutableHandle
<
NativeObject
*
>
;
using
MutableHandleArrayObject
=
JS
:
:
MutableHandle
<
ArrayObject
*
>
;
using
RootedNativeObject
=
JS
:
:
Rooted
<
NativeObject
*
>
;
using
RootedAtom
=
JS
:
:
Rooted
<
JSAtom
*
>
;
using
RootedLinearString
=
JS
:
:
Rooted
<
JSLinearString
*
>
;
using
RootedPropertyName
=
JS
:
:
Rooted
<
PropertyName
*
>
;
using
RootedArrayObject
=
JS
:
:
Rooted
<
ArrayObject
*
>
;
using
RootedGlobalObject
=
JS
:
:
Rooted
<
GlobalObject
*
>
;
using
FunctionVector
=
JS
:
:
GCVector
<
JSFunction
*
>
;
using
PropertyNameVector
=
JS
:
:
GCVector
<
PropertyName
*
>
;
using
StringVector
=
JS
:
:
GCVector
<
JSString
*
>
;
}
#
endif
