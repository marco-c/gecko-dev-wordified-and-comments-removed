#
ifndef
gc_Tenuring_h
#
define
gc_Tenuring_h
#
include
"
gc
/
AllocKind
.
h
"
#
include
"
js
/
TracingAPI
.
h
"
namespace
js
{
class
NativeObject
;
class
Nursery
;
class
PlainObject
;
namespace
gc
{
class
RelocationOverlay
;
class
StringRelocationOverlay
;
}
class
TenuringTracer
final
:
public
GenericTracer
{
Nursery
&
nursery_
;
size_t
tenuredSize
=
0
;
size_t
tenuredCells
=
0
;
gc
:
:
RelocationOverlay
*
objHead
=
nullptr
;
gc
:
:
StringRelocationOverlay
*
stringHead
=
nullptr
;
#
define
DEFINE_ON_EDGE_METHOD
(
name
type
_1
_2
)
\
type
*
on
#
#
name
#
#
Edge
(
type
*
thing
)
override
;
JS_FOR_EACH_TRACEKIND
(
DEFINE_ON_EDGE_METHOD
)
#
undef
DEFINE_ON_EDGE_METHOD
public
:
TenuringTracer
(
JSRuntime
*
rt
Nursery
*
nursery
)
;
Nursery
&
nursery
(
)
{
return
nursery_
;
}
void
collectToObjectFixedPoint
(
)
;
void
collectToStringFixedPoint
(
)
;
size_t
getTenuredSize
(
)
const
;
size_t
getTenuredCells
(
)
const
;
void
traverse
(
JS
:
:
Value
*
thingp
)
;
void
traceObject
(
JSObject
*
src
)
;
void
traceObjectSlots
(
NativeObject
*
nobj
uint32_t
start
uint32_t
end
)
;
void
traceSlots
(
JS
:
:
Value
*
vp
uint32_t
nslots
)
;
void
traceString
(
JSString
*
src
)
;
void
traceBigInt
(
JS
:
:
BigInt
*
src
)
;
private
:
template
<
typename
CharT
>
void
relocateDependentStringChars
(
JSDependentString
*
tenuredDependentStr
JSLinearString
*
baseOrRelocOverlay
size_t
*
offset
bool
*
rootBaseNotYetForwarded
JSLinearString
*
*
rootBase
)
;
inline
void
insertIntoObjectFixupList
(
gc
:
:
RelocationOverlay
*
entry
)
;
inline
void
insertIntoStringFixupList
(
gc
:
:
StringRelocationOverlay
*
entry
)
;
template
<
typename
T
>
inline
T
*
allocTenured
(
JS
:
:
Zone
*
zone
gc
:
:
AllocKind
kind
)
;
JSString
*
allocTenuredString
(
JSString
*
src
JS
:
:
Zone
*
zone
gc
:
:
AllocKind
dstKind
)
;
inline
JSObject
*
movePlainObjectToTenured
(
PlainObject
*
src
)
;
JSObject
*
moveToTenuredSlow
(
JSObject
*
src
)
;
JSString
*
moveToTenured
(
JSString
*
src
)
;
JS
:
:
BigInt
*
moveToTenured
(
JS
:
:
BigInt
*
src
)
;
size_t
moveElementsToTenured
(
NativeObject
*
dst
NativeObject
*
src
gc
:
:
AllocKind
dstKind
)
;
size_t
moveSlotsToTenured
(
NativeObject
*
dst
NativeObject
*
src
)
;
size_t
moveStringToTenured
(
JSString
*
dst
JSString
*
src
gc
:
:
AllocKind
dstKind
)
;
size_t
moveBigIntToTenured
(
JS
:
:
BigInt
*
dst
JS
:
:
BigInt
*
src
gc
:
:
AllocKind
dstKind
)
;
void
traceSlots
(
JS
:
:
Value
*
vp
JS
:
:
Value
*
end
)
;
}
;
}
#
endif
