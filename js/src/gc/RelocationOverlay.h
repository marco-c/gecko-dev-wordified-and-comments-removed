#
ifndef
gc_RelocationOverlay_h
#
define
gc_RelocationOverlay_h
#
include
"
mozilla
/
Assertions
.
h
"
#
include
<
stdint
.
h
>
#
include
"
gc
/
Cell
.
h
"
namespace
js
{
namespace
gc
{
class
RelocatedCellHeader
:
public
CellHeader
{
public
:
RelocatedCellHeader
(
Cell
*
location
uintptr_t
flags
)
;
Cell
*
location
(
)
const
{
return
reinterpret_cast
<
Cell
*
>
(
header_
&
~
RESERVED_MASK
)
;
}
}
;
class
RelocationOverlay
:
public
Cell
{
protected
:
RelocatedCellHeader
header_
;
RelocationOverlay
*
next_
;
RelocationOverlay
(
Cell
*
dst
uintptr_t
flags
)
;
public
:
static
const
RelocationOverlay
*
fromCell
(
const
Cell
*
cell
)
{
return
static_cast
<
const
RelocationOverlay
*
>
(
cell
)
;
}
static
RelocationOverlay
*
fromCell
(
Cell
*
cell
)
{
return
static_cast
<
RelocationOverlay
*
>
(
cell
)
;
}
static
RelocationOverlay
*
forwardCell
(
Cell
*
src
Cell
*
dst
)
;
Cell
*
forwardingAddress
(
)
const
{
MOZ_ASSERT
(
isForwarded
(
)
)
;
return
header_
.
location
(
)
;
}
RelocationOverlay
*
&
nextRef
(
)
{
MOZ_ASSERT
(
isForwarded
(
)
)
;
return
next_
;
}
RelocationOverlay
*
next
(
)
const
{
MOZ_ASSERT
(
isForwarded
(
)
)
;
return
next_
;
}
}
;
}
}
#
endif
