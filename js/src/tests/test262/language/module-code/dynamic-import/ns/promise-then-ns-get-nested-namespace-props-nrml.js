function
hasOwnProperty
(
obj
property
)
{
return
Object
.
prototype
.
hasOwnProperty
.
call
(
obj
property
)
;
}
import
(
'
.
/
get
-
nested
-
namespace
-
props
-
nrml
-
1_FIXTURE
.
js
'
)
.
then
(
ns
=
>
{
assert
(
hasOwnProperty
(
ns
.
exportns
'
starAsVarDecl
'
)
'
starssVarDecl
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
starAsLetDecl
'
)
'
starSsLetDecl
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
starAsConstDecl
'
)
'
starSsConstDecl
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
starAsFuncDecl
'
)
'
starAsFuncDecl
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
starAsGenDecl
'
)
'
starAsGenDecl
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
starAsClassDecl
'
)
'
starAsClassDecl
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
starAsBindingId
'
)
'
starAsBindingId
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
starIdName
'
)
'
starIdName
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
starAsIndirectIdName
'
)
'
starAsIndirectIdName
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
starAsIndirectIdName2
'
)
'
starAsIndirectIdName2
'
)
;
assert
(
hasOwnProperty
(
ns
.
exportns
'
namespaceBinding
'
)
'
namespaceBinding
'
)
;
assert
.
sameValue
(
hasOwnProperty
(
ns
.
exportns
'
nonExportedVar
'
)
false
'
nonExportedVar
'
)
;
assert
.
sameValue
(
hasOwnProperty
(
ns
.
exportns
'
nonExportedLet
'
)
false
'
nonExportedLet
'
)
;
assert
.
sameValue
(
hasOwnProperty
(
ns
.
exportns
'
nonExportedConst
'
)
false
'
nonExportedConst
'
)
;
assert
.
sameValue
(
hasOwnProperty
(
ns
.
exportns
'
nonExportedFunc
'
)
false
'
nonExportedFunc
'
)
;
assert
.
sameValue
(
hasOwnProperty
(
ns
.
exportns
'
nonExportedGen
'
)
false
'
nonExportedGen
'
)
;
assert
.
sameValue
(
hasOwnProperty
(
ns
.
exportns
'
nonExportedClass
'
)
false
'
nonExportedClass
'
)
;
}
)
.
then
(
DONE
DONE
)
.
catch
(
DONE
)
;
