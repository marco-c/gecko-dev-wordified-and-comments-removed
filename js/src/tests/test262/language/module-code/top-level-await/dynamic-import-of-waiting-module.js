let
continueExecution
;
globalThis
.
promise
=
new
Promise
(
(
resolve
)
=
>
continueExecution
=
resolve
)
;
const
executionStartPromise
=
new
Promise
(
(
resolve
)
=
>
globalThis
.
executionStarted
=
resolve
)
;
asyncTest
(
async
function
(
)
{
const
promiseForNamespace
=
import
(
"
.
/
dynamic
-
import
-
of
-
waiting
-
module_FIXTURE
.
js
"
)
;
await
executionStartPromise
;
const
promiseForNamespace2
=
import
(
"
.
/
dynamic
-
import
-
of
-
waiting
-
module_FIXTURE
.
js
"
)
;
await
import
(
"
.
/
dynamic
-
import
-
of
-
waiting
-
module
-
2_FIXTURE
.
js
"
)
;
continueExecution
(
)
;
let
secondPromiseResolved
=
false
;
await
Promise
.
all
(
[
promiseForNamespace
.
then
(
(
)
=
>
{
assert
(
!
secondPromiseResolved
"
The
second
import
should
not
resolve
before
the
first
one
"
)
;
}
)
promiseForNamespace2
.
then
(
(
)
=
>
{
secondPromiseResolved
=
true
;
}
)
]
)
;
}
)
;
