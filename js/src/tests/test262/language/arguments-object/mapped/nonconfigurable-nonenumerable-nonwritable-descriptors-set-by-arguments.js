function
fn
(
a
)
{
Object
.
defineProperty
(
arguments
"
0
"
{
configurable
:
false
enumerable
:
false
}
)
;
arguments
[
0
]
=
2
;
Object
.
defineProperty
(
arguments
"
0
"
{
writable
:
false
}
)
;
let
propertyDescriptor
=
Object
.
getOwnPropertyDescriptor
(
arguments
"
0
"
)
;
assert
.
sameValue
(
propertyDescriptor
.
value
2
)
;
assert
.
sameValue
(
a
2
)
;
verifyNotEnumerable
(
arguments
"
0
"
)
;
verifyNotWritable
(
arguments
"
0
"
)
;
verifyNotConfigurable
(
arguments
"
0
"
)
;
a
=
3
;
propertyDescriptor
=
Object
.
getOwnPropertyDescriptor
(
arguments
"
0
"
)
;
assert
.
sameValue
(
propertyDescriptor
.
value
2
)
;
verifyNotEnumerable
(
arguments
"
0
"
)
;
verifyNotWritable
(
arguments
"
0
"
)
;
verifyNotConfigurable
(
arguments
"
0
"
)
;
}
fn
(
1
)
;
reportCompare
(
0
0
)
;
