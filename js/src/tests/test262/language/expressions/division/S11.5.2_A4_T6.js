if
(
1
/
Number
.
NEGATIVE_INFINITY
!
=
=
-
0
)
{
throw
new
Test262Error
(
'
#
1
.
1
:
1
/
-
Infinity
=
=
=
0
.
Actual
:
'
+
(
1
/
-
Infinity
)
)
;
}
else
{
if
(
1
/
(
1
/
Number
.
NEGATIVE_INFINITY
)
!
=
=
Number
.
NEGATIVE_INFINITY
)
{
throw
new
Test262Error
(
'
#
1
.
2
:
1
/
-
Infinity
=
=
=
-
0
.
Actual
:
+
0
'
)
;
}
}
if
(
-
1
/
Number
.
NEGATIVE_INFINITY
!
=
=
+
0
)
{
throw
new
Test262Error
(
'
#
2
.
1
:
-
1
/
-
Infinity
=
=
=
0
.
Actual
:
'
+
(
-
1
/
-
Infinity
)
)
;
}
else
{
if
(
1
/
(
-
1
/
Number
.
NEGATIVE_INFINITY
)
!
=
=
Number
.
POSITIVE_INFINITY
)
{
throw
new
Test262Error
(
'
#
2
.
2
:
-
1
/
-
Infinity
=
=
=
+
0
.
Actual
:
-
0
'
)
;
}
}
if
(
1
/
Number
.
POSITIVE_INFINITY
!
=
=
+
0
)
{
throw
new
Test262Error
(
'
#
3
.
1
:
1
/
Infinity
=
=
=
0
.
Actual
:
'
+
(
1
/
Infinity
)
)
;
}
else
{
if
(
1
/
(
1
/
Number
.
POSITIVE_INFINITY
)
!
=
=
Number
.
POSITIVE_INFINITY
)
{
throw
new
Test262Error
(
'
#
3
.
2
:
1
/
Infinity
=
=
=
+
0
.
Actual
:
-
0
'
)
;
}
}
if
(
-
1
/
Number
.
POSITIVE_INFINITY
!
=
=
-
0
)
{
throw
new
Test262Error
(
'
#
4
.
1
:
-
1
/
Infinity
=
=
=
0
.
Actual
:
'
+
(
-
1
/
Infinity
)
)
;
}
else
{
if
(
1
/
(
-
1
/
Number
.
POSITIVE_INFINITY
)
!
=
=
Number
.
NEGATIVE_INFINITY
)
{
throw
new
Test262Error
(
'
#
4
.
2
:
-
1
/
Infinity
=
=
=
-
0
.
Actual
:
+
0
'
)
;
}
}
reportCompare
(
0
0
)
;
