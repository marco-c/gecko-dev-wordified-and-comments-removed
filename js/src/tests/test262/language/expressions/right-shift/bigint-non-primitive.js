assert
.
sameValue
(
Object
(
0b101n
)
>
>
1n
0b10n
'
The
result
of
(
Object
(
0b101n
)
>
>
1n
)
is
0b10n
'
)
;
assert
.
sameValue
(
Object
(
0b101n
)
>
>
Object
(
1n
)
0b10n
'
The
result
of
(
Object
(
0b101n
)
>
>
Object
(
1n
)
)
is
0b10n
'
)
;
function
err
(
)
{
throw
new
Test262Error
(
)
;
}
assert
.
sameValue
(
{
[
Symbol
.
toPrimitive
]
:
function
(
)
{
return
0b101n
;
}
valueOf
:
err
toString
:
err
}
>
>
1n
0b10n
'
The
result
of
(
(
{
[
Symbol
.
toPrimitive
]
:
function
(
)
{
return
0b101n
;
}
valueOf
:
err
toString
:
err
}
)
>
>
1n
)
is
0b10n
'
)
;
assert
.
sameValue
(
{
valueOf
:
function
(
)
{
return
0b101n
;
}
toString
:
err
}
>
>
1n
0b10n
'
The
result
of
(
(
{
valueOf
:
function
(
)
{
return
0b101n
;
}
toString
:
err
}
)
>
>
1n
)
is
0b10n
'
)
;
assert
.
sameValue
(
{
toString
:
function
(
)
{
return
0b101n
;
}
}
>
>
1n
0b10n
'
The
result
of
(
(
{
toString
:
function
(
)
{
return
0b101n
;
}
}
)
>
>
1n
)
is
0b10n
'
)
;
assert
.
sameValue
(
0b101n
>
>
{
[
Symbol
.
toPrimitive
]
:
function
(
)
{
return
1n
;
}
valueOf
:
err
toString
:
err
}
0b10n
'
The
result
of
(
0b101n
>
>
{
[
Symbol
.
toPrimitive
]
:
function
(
)
{
return
1n
;
}
valueOf
:
err
toString
:
err
}
)
is
0b10n
'
)
;
assert
.
sameValue
(
0b101n
>
>
{
valueOf
:
function
(
)
{
return
1n
;
}
toString
:
err
}
0b10n
'
The
result
of
(
0b101n
>
>
{
valueOf
:
function
(
)
{
return
1n
;
}
toString
:
err
}
)
is
0b10n
'
)
;
assert
.
sameValue
(
0b101n
>
>
{
toString
:
function
(
)
{
return
1n
;
}
}
0b10n
'
The
result
of
(
0b101n
>
>
{
toString
:
function
(
)
{
return
1n
;
}
}
)
is
0b10n
'
)
;
assert
.
sameValue
(
{
valueOf
:
function
(
)
{
return
0b101n
;
}
}
>
>
{
valueOf
:
function
(
)
{
return
1n
;
}
}
0b10n
'
The
result
of
(
(
{
valueOf
:
function
(
)
{
return
0b101n
;
}
}
)
>
>
{
valueOf
:
function
(
)
{
return
1n
;
}
}
)
is
0b10n
'
)
;
reportCompare
(
0
0
)
;
