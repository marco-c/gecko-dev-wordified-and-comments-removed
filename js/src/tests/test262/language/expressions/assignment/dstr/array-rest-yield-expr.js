var
x
=
{
}
;
var
iterationResult
iter
;
iter
=
(
function
*
(
)
{
var
result
;
var
vals
=
[
33
44
55
]
;
result
=
[
.
.
.
x
[
yield
]
]
=
vals
;
assert
.
sameValue
(
result
vals
)
;
}
(
)
)
;
iterationResult
=
iter
.
next
(
)
;
assert
.
sameValue
(
iterationResult
.
value
undefined
)
;
assert
.
sameValue
(
iterationResult
.
done
false
)
;
assert
.
sameValue
(
x
.
prop
undefined
)
;
iterationResult
=
iter
.
next
(
'
prop
'
)
;
assert
.
sameValue
(
iterationResult
.
value
undefined
)
;
assert
.
sameValue
(
iterationResult
.
done
true
)
;
assert
.
sameValue
(
x
.
prop
.
length
3
)
;
assert
.
sameValue
(
x
.
prop
[
0
]
33
)
;
assert
.
sameValue
(
x
.
prop
[
1
]
44
)
;
assert
.
sameValue
(
x
.
prop
[
2
]
55
)
;
reportCompare
(
0
0
)
;
