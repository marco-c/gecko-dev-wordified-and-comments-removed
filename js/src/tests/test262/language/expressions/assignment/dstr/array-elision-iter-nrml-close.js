var
nextCount
=
0
;
var
returnCount
=
0
;
var
thisValue
=
null
;
var
args
=
null
;
var
iterable
=
{
}
;
var
iterator
=
{
next
:
function
(
)
{
nextCount
+
=
1
;
return
{
done
:
nextCount
>
10
}
;
}
return
:
function
(
)
{
returnCount
+
=
1
;
thisValue
=
this
;
args
=
arguments
;
return
{
}
;
}
}
;
iterable
[
Symbol
.
iterator
]
=
function
(
)
{
return
iterator
;
}
;
var
result
;
var
vals
=
iterable
;
result
=
[
]
=
vals
;
assert
.
sameValue
(
nextCount
1
)
;
assert
.
sameValue
(
returnCount
1
)
;
assert
.
sameValue
(
thisValue
iterator
'
correct
this
value
'
)
;
assert
(
!
!
args
'
arguments
object
provided
'
)
;
assert
.
sameValue
(
args
.
length
0
'
zero
arguments
specified
'
)
;
assert
.
sameValue
(
result
vals
)
;
reportCompare
(
0
0
)
;
