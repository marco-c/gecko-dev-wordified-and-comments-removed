var
log
=
[
]
;
var
targetKey
=
{
toString
:
(
)
=
>
{
log
.
push
(
"
targetKey
"
)
;
return
"
q
"
;
}
}
;
var
sourceKey
=
{
toString
:
(
)
=
>
{
log
.
push
(
"
sourceKey
"
)
;
return
"
p
"
;
}
}
;
var
source
=
{
get
p
(
)
{
log
.
push
(
"
get
source
"
)
;
return
undefined
;
}
}
;
var
target
=
{
set
q
(
v
)
{
log
.
push
(
"
set
target
"
)
;
}
}
;
var
env
=
new
Proxy
(
{
}
{
has
(
t
pk
)
{
log
.
push
(
"
binding
:
:
"
+
pk
)
;
}
}
)
;
var
defaultValue
=
0
;
with
(
env
)
{
(
{
[
sourceKey
]
:
target
[
targetKey
]
=
defaultValue
}
=
source
)
;
}
assert
.
compareArray
(
log
[
"
binding
:
:
source
"
"
binding
:
:
sourceKey
"
"
sourceKey
"
"
binding
:
:
target
"
"
binding
:
:
targetKey
"
"
get
source
"
"
binding
:
:
defaultValue
"
"
targetKey
"
"
set
target
"
]
)
;
reportCompare
(
0
0
)
;
