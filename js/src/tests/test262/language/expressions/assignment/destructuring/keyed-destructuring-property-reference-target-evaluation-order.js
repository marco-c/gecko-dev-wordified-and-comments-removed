var
log
=
[
]
;
function
source
(
)
{
log
.
push
(
"
source
"
)
;
return
{
get
p
(
)
{
log
.
push
(
"
get
"
)
;
}
}
;
}
function
target
(
)
{
log
.
push
(
"
target
"
)
;
return
{
set
q
(
v
)
{
log
.
push
(
"
set
"
)
;
}
}
;
}
function
sourceKey
(
)
{
log
.
push
(
"
source
-
key
"
)
;
return
{
toString
:
function
(
)
{
log
.
push
(
"
source
-
key
-
tostring
"
)
;
return
"
p
"
;
}
}
;
}
function
targetKey
(
)
{
log
.
push
(
"
target
-
key
"
)
;
return
{
toString
:
function
(
)
{
log
.
push
(
"
target
-
key
-
tostring
"
)
;
return
"
q
"
;
}
}
;
}
(
{
[
sourceKey
(
)
]
:
target
(
)
[
targetKey
(
)
]
}
=
source
(
)
)
;
assert
.
compareArray
(
log
[
"
source
"
"
source
-
key
"
"
source
-
key
-
tostring
"
"
target
"
"
target
-
key
"
"
get
"
"
target
-
key
-
tostring
"
"
set
"
]
)
;
reportCompare
(
0
0
)
;
