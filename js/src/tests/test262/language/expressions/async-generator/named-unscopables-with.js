let
count
=
0
;
var
v
=
1
;
globalThis
[
Symbol
.
unscopables
]
=
{
v
:
true
}
;
{
count
+
+
;
var
callCount
=
0
;
var
ref
;
ref
=
async
function
*
g
(
x
)
{
count
+
+
;
with
(
globalThis
)
{
count
+
+
;
assert
.
sameValue
(
v
undefined
'
The
value
of
v
is
expected
to
equal
undefined
'
)
;
}
count
+
+
;
var
v
=
x
;
with
(
globalThis
)
{
count
+
+
;
assert
.
sameValue
(
v
10
'
The
value
of
v
is
10
'
)
;
v
=
20
;
}
assert
.
sameValue
(
v
20
'
The
value
of
v
is
20
'
)
;
assert
.
sameValue
(
globalThis
.
v
1
'
The
value
of
globalThis
.
v
is
1
'
)
;
callCount
=
callCount
+
1
;
}
;
ref
(
10
)
.
next
(
)
.
then
(
(
)
=
>
{
assert
.
sameValue
(
callCount
1
'
generator
function
invoked
exactly
once
'
)
;
}
)
.
then
(
DONE
DONE
)
;
count
+
+
;
}
assert
.
sameValue
(
count
6
'
The
value
of
count
is
6
'
)
;
