var
fn
=
async
function
*
(
)
{
}
;
var
AsyncGeneratorPrototype
=
Object
.
getPrototypeOf
(
fn
.
prototype
)
;
fn
.
prototype
=
undefined
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
fn
(
)
)
AsyncGeneratorPrototype
'
fn
.
prototype
is
undefined
'
)
;
fn
.
prototype
=
null
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
fn
(
)
)
AsyncGeneratorPrototype
'
fn
.
prototype
is
null
'
)
;
fn
.
prototype
=
false
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
fn
(
)
)
AsyncGeneratorPrototype
'
fn
.
prototype
is
a
Boolean
'
)
;
fn
.
prototype
=
'
'
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
fn
(
)
)
AsyncGeneratorPrototype
'
fn
.
prototype
is
a
String
'
)
;
fn
.
prototype
=
Symbol
(
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
fn
(
)
)
AsyncGeneratorPrototype
'
fn
.
prototype
is
a
Symbol
'
)
;
fn
.
prototype
=
1
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
fn
(
)
)
AsyncGeneratorPrototype
'
fn
.
prototype
is
a
Number
'
)
;
reportCompare
(
0
0
)
;
