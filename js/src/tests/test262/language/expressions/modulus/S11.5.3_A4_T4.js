if
(
isNaN
(
-
0
%
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
1
:
-
0
%
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
-
0
%
0
)
)
;
}
if
(
isNaN
(
-
0
%
-
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
2
:
-
0
%
-
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
-
0
%
-
0
)
)
;
}
if
(
isNaN
(
0
%
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
3
:
0
%
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
0
%
0
)
)
;
}
if
(
isNaN
(
0
%
-
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
4
:
0
%
-
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
0
%
-
0
)
)
;
}
if
(
isNaN
(
-
1
%
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
5
:
1
%
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
1
%
0
)
)
;
}
if
(
isNaN
(
-
1
%
-
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
6
:
-
1
%
-
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
-
1
%
-
0
)
)
;
}
if
(
isNaN
(
1
%
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
7
:
1
%
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
1
%
0
)
)
;
}
if
(
isNaN
(
1
%
-
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
8
:
1
%
-
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
1
%
-
0
)
)
;
}
if
(
isNaN
(
Number
.
NEGATIVE_INFINITY
%
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
9
:
Infinity
%
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
Infinity
%
0
)
)
;
}
if
(
isNaN
(
Number
.
NEGATIVE_INFINITY
%
-
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
10
:
-
Infinity
%
-
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
-
Infinity
%
-
0
)
)
;
}
if
(
isNaN
(
Number
.
POSITIVE_INFINITY
%
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
11
:
Infinity
%
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
Infinity
%
0
)
)
;
}
if
(
isNaN
(
Number
.
POSITIVE_INFINITY
%
-
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
12
:
Infinity
%
-
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
Infinity
%
-
0
)
)
;
}
if
(
isNaN
(
Number
.
MIN_VALUE
%
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
13
:
Number
.
MIN_VALUE
%
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
Number
.
MIN_VALUE
%
0
)
)
;
}
if
(
isNaN
(
Number
.
MIN_VALUE
%
-
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
14
:
-
Number
.
MIN_VALUE
%
-
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
-
Number
.
MIN_VALUE
%
-
0
)
)
;
}
if
(
isNaN
(
Number
.
MAX_VALUE
%
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
15
:
Number
.
MAX_VALUE
%
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
Number
.
MAX_VALUE
%
0
)
)
;
}
if
(
isNaN
(
Number
.
MAX_VALUE
%
-
0
)
!
=
=
true
)
{
throw
new
Test262Error
(
'
#
16
:
Number
.
MAX_VALUE
%
-
0
=
=
=
Not
-
a
-
Number
.
Actual
:
'
+
(
Number
.
MAX_VALUE
%
-
0
)
)
;
}
reportCompare
(
0
0
)
;
