var
namedSym
=
Symbol
(
'
test262
'
)
;
var
anonSym
=
Symbol
(
)
;
var
o
;
o
=
{
xId
:
(
0
function
(
)
{
}
)
id
:
(
function
(
)
{
}
)
[
anonSym
]
:
(
function
(
)
{
}
)
[
namedSym
]
:
(
function
(
)
{
}
)
}
;
assert
(
o
.
xId
.
name
!
=
=
'
xId
'
)
;
assert
.
sameValue
(
o
.
id
.
name
'
id
'
'
via
IdentifierName
'
)
;
verifyNotEnumerable
(
o
.
id
'
name
'
)
;
verifyNotWritable
(
o
.
id
'
name
'
)
;
verifyConfigurable
(
o
.
id
'
name
'
)
;
assert
.
sameValue
(
o
[
anonSym
]
.
name
'
'
'
via
anonymous
Symbol
'
)
;
verifyNotEnumerable
(
o
[
anonSym
]
'
name
'
)
;
verifyNotWritable
(
o
[
anonSym
]
'
name
'
)
;
verifyConfigurable
(
o
[
anonSym
]
'
name
'
)
;
assert
.
sameValue
(
o
[
namedSym
]
.
name
'
[
test262
]
'
'
via
Symbol
'
)
;
verifyNotEnumerable
(
o
[
namedSym
]
'
name
'
)
;
verifyNotWritable
(
o
[
namedSym
]
'
name
'
)
;
verifyConfigurable
(
o
[
namedSym
]
'
name
'
)
;
reportCompare
(
0
0
)
;
