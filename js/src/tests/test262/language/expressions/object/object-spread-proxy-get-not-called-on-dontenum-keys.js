var
VALUE_LITERAL
=
"
VALUE_LITERAL
"
;
var
VALUE_GOPD
=
"
VALUE_GOPD
"
;
var
VALUE_GET
=
"
VALUE_GET
"
;
var
dontEnumSymbol
=
Symbol
(
"
dont_enum_symbol
"
)
;
var
enumerableSymbol
=
Symbol
(
"
enumerable_symbol
"
)
;
var
dontEnumKeys
=
[
dontEnumSymbol
"
dontEnumString
"
"
0
"
]
;
var
enumerableKeys
=
[
enumerableSymbol
"
enumerableString
"
"
1
"
]
;
var
ownKeysResult
=
[
.
.
.
dontEnumKeys
.
.
.
enumerableKeys
]
;
var
getOwnKeys
=
[
]
;
var
getKeys
=
[
]
;
var
proxy
=
new
Proxy
(
{
}
{
getOwnPropertyDescriptor
:
function
(
_target
key
)
{
getOwnKeys
.
push
(
key
)
;
var
isEnumerable
=
enumerableKeys
.
indexOf
(
key
)
!
=
=
-
1
;
return
{
value
:
VALUE_GOPD
writable
:
false
enumerable
:
isEnumerable
configurable
:
true
}
;
}
get
:
function
(
_target
key
)
{
getKeys
.
push
(
key
)
;
return
VALUE_GET
;
}
ownKeys
:
function
(
)
{
return
ownKeysResult
;
}
}
)
;
var
result
=
{
[
enumerableSymbol
]
:
VALUE_LITERAL
enumerableString
:
VALUE_LITERAL
[
1
]
:
VALUE_LITERAL
.
.
.
proxy
}
;
assert
.
compareArray
(
getOwnKeys
ownKeysResult
)
;
assert
.
compareArray
(
getKeys
enumerableKeys
)
;
verifyProperty
(
result
enumerableSymbol
{
value
:
VALUE_GET
writable
:
true
enumerable
:
true
configurable
:
true
}
)
;
verifyProperty
(
result
"
enumerableString
"
{
value
:
VALUE_GET
writable
:
true
enumerable
:
true
configurable
:
true
}
)
;
verifyProperty
(
result
"
1
"
{
value
:
VALUE_GET
writable
:
true
enumerable
:
true
configurable
:
true
}
)
;
reportCompare
(
0
0
)
;
