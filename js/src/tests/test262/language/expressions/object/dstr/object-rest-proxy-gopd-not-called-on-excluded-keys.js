var
excludedSymbol
=
Symbol
(
"
excluded_symbol
"
)
;
var
includedSymbol
=
Symbol
(
"
included_symbol
"
)
;
var
excludedKeys
=
[
excludedSymbol
"
excludedString
"
"
0
"
]
;
var
includedKeys
=
[
includedSymbol
"
includedString
"
"
1
"
]
;
var
ownKeysResult
=
[
.
.
.
excludedKeys
.
.
.
includedKeys
]
;
var
getOwnKeys
=
[
]
;
var
proxy
=
new
Proxy
(
{
}
{
getOwnPropertyDescriptor
:
function
(
_target
key
)
{
getOwnKeys
.
push
(
key
)
;
}
ownKeys
:
function
(
)
{
return
ownKeysResult
;
}
}
)
;
var
{
[
excludedSymbol
]
:
_
excludedString
0
:
excludedIndex
.
.
.
rest
}
=
proxy
;
assert
.
compareArray
(
getOwnKeys
includedKeys
)
;
reportCompare
(
0
0
)
;
