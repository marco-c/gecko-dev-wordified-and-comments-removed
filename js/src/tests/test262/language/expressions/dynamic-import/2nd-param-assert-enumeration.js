var
symbol
=
Symbol
(
'
'
)
;
var
target
=
{
enumerable1
:
'
'
enumerable2
:
'
'
[
symbol
]
:
'
'
unreported
:
'
'
nonEnumerable
:
'
'
}
;
var
descriptors
=
{
enumerable1
:
{
configurable
:
true
enumerable
:
true
}
enumerable2
:
{
configurable
:
true
enumerable
:
true
}
[
symbol
]
:
{
configurable
:
true
enumerable
:
true
}
nonEnumerable
:
{
configurable
:
true
enumerable
:
false
}
}
;
var
log
=
[
]
;
var
options
=
{
assert
:
new
Proxy
(
{
}
{
ownKeys
:
function
(
)
{
return
[
'
enumerable1
'
symbol
'
nonEnumerable
'
'
absent
'
'
enumerable2
'
]
;
}
get
(
_
name
)
{
log
.
push
(
name
)
;
return
target
[
name
]
;
}
getOwnPropertyDescriptor
(
target
name
)
{
return
descriptors
[
name
]
;
}
}
)
}
;
import
(
'
.
/
2nd
-
param_FIXTURE
.
js
'
options
)
.
then
(
function
(
module
)
{
assert
.
sameValue
(
module
.
default
262
)
;
}
)
.
then
(
DONE
DONE
)
;
assert
.
sameValue
(
log
.
length
2
)
;
assert
.
sameValue
(
log
[
0
]
'
enumerable1
'
)
;
assert
.
sameValue
(
log
[
1
]
'
enumerable2
'
)
;
