let
classStringExpression
=
(
class
{
set
#
m
(
v
)
{
this
.
_v
=
v
;
}
access
(
o
v
)
{
o
.
#
m
=
v
;
}
}
)
;
let
createAndInstantiateClass
=
function
(
)
{
return
new
(
eval
(
classStringExpression
)
)
;
}
;
let
c1
=
createAndInstantiateClass
(
)
;
let
c2
=
createAndInstantiateClass
(
)
;
c1
.
access
(
c1
'
test262
'
)
;
assert
.
sameValue
(
c1
.
_v
'
test262
'
)
;
c2
.
access
(
c2
'
test262
'
)
;
assert
.
sameValue
(
c2
.
_v
'
test262
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
c1
.
access
(
c2
'
foo
'
)
;
}
'
invalid
access
of
c1
private
method
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
c2
.
access
(
c1
'
foo
'
)
;
}
'
invalid
access
of
c2
private
method
'
)
;
reportCompare
(
0
0
)
;
