var
C
=
class
{
set
#
m
(
v
)
{
this
.
_v
=
v
;
}
method
(
v
)
{
this
.
#
m
=
v
;
}
B
=
class
{
method
(
o
v
)
{
o
.
#
m
=
v
;
}
get
#
m
(
)
{
return
'
test262
'
;
}
}
}
let
c
=
new
C
(
)
;
let
innerB
=
new
c
.
B
(
)
;
assert
.
throws
(
TypeError
function
(
)
{
innerB
.
method
(
innerB
)
;
}
'
invalid
[
[
Set
]
]
of
an
acessor
without
setter
'
)
;
c
.
method
(
'
outer
class
'
)
;
assert
.
sameValue
(
c
.
_v
'
outer
class
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
innerB
.
method
(
c
)
;
}
'
invalid
access
of
inner
class
getter
from
an
object
of
outer
class
'
)
;
reportCompare
(
0
0
)
;
