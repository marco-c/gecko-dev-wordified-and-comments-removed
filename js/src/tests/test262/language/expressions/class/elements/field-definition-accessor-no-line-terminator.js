var
C
=
class
{
accessor
;
static
accessor
;
}
let
c
=
new
C
(
)
;
assert
(
!
Object
.
prototype
.
hasOwnProperty
.
call
(
C
.
prototype
'
accessor
'
)
"
accessor
doesn
'
t
appear
as
an
own
property
on
C
prototype
"
)
;
assert
(
!
Object
.
prototype
.
hasOwnProperty
.
call
(
C
.
prototype
'
'
)
"
doesn
'
t
appear
as
an
own
property
on
C
prototype
"
)
;
assert
(
Object
.
prototype
.
hasOwnProperty
.
call
(
C
'
accessor
'
)
"
C
constructor
has
an
own
property
accessor
"
)
;
assert
(
!
Object
.
prototype
.
hasOwnProperty
.
call
(
C
'
'
)
"
doesn
'
t
appear
as
an
own
property
on
C
constructor
"
)
;
assert
(
Object
.
prototype
.
hasOwnProperty
.
call
(
c
'
accessor
'
)
"
C
instance
has
an
own
property
accessor
"
)
;
assert
(
Object
.
prototype
.
hasOwnProperty
.
call
(
c
'
'
)
"
C
instance
has
an
own
property
"
)
;
reportCompare
(
0
0
)
;
