var
C
=
class
{
async
*
m
(
)
{
return
42
;
}
static
#
;
static
#
_
;
static
#
\
u
{
6F
}
;
static
#
;
static
#
ZW_
_NJ
;
static
#
ZW_
_J
;
static
(
value
)
{
this
.
#
=
value
;
return
this
.
#
;
}
static
_
(
value
)
{
this
.
#
_
=
value
;
return
this
.
#
_
;
}
static
o
(
value
)
{
this
.
#
\
u
{
6F
}
=
value
;
return
this
.
#
\
u
{
6F
}
;
}
static
(
value
)
{
this
.
#
=
value
;
return
this
.
#
;
}
static
ZW_
_NJ
(
value
)
{
this
.
#
ZW_
_NJ
=
value
;
return
this
.
#
ZW_
_NJ
;
}
static
ZW_
_J
(
value
)
{
this
.
#
ZW_
_J
=
value
;
return
this
.
#
ZW_
_J
;
}
}
var
c
=
new
C
(
)
;
assert
.
sameValue
(
Object
.
hasOwnProperty
.
call
(
c
"
m
"
)
false
)
;
assert
.
sameValue
(
c
.
m
C
.
prototype
.
m
)
;
verifyProperty
(
C
.
prototype
"
m
"
{
enumerable
:
false
configurable
:
true
writable
:
true
}
{
restore
:
true
}
)
;
c
.
m
(
)
.
next
(
)
.
then
(
function
(
v
)
{
assert
.
sameValue
(
v
.
value
42
)
;
assert
.
sameValue
(
v
.
done
true
)
;
function
assertions
(
)
{
function
DONE
(
error
)
{
if
(
error
)
{
throw
new
Test262Error
(
'
Test262
:
AsyncTestFailure
'
)
}
}
assert
.
sameValue
(
C
.
(
1
)
1
)
;
assert
.
sameValue
(
C
.
_
(
1
)
1
)
;
assert
.
sameValue
(
C
.
o
(
1
)
1
)
;
assert
.
sameValue
(
C
.
(
1
)
1
)
;
assert
.
sameValue
(
C
.
ZW_
_NJ
(
1
)
1
)
;
assert
.
sameValue
(
C
.
ZW_
_J
(
1
)
1
)
;
}
return
Promise
.
resolve
(
assertions
(
)
)
;
}
)
.
then
(
DONE
DONE
)
;
