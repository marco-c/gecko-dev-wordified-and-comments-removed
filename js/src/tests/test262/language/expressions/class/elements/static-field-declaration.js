var
computed
=
'
h
'
;
var
C
=
class
{
static
f
=
'
test262
'
;
static
'
g
'
;
static
0
=
'
bar
'
;
static
[
computed
]
;
}
let
c
=
new
C
(
)
;
assert
.
sameValue
(
c
.
f
undefined
)
;
assert
.
sameValue
(
c
.
g
undefined
)
;
assert
.
sameValue
(
c
.
h
undefined
)
;
assert
.
sameValue
(
c
[
0
]
undefined
)
;
assert
.
sameValue
(
Object
.
hasOwnProperty
.
call
(
c
'
f
'
)
false
)
;
assert
.
sameValue
(
Object
.
hasOwnProperty
.
call
(
c
'
g
'
)
false
)
;
assert
.
sameValue
(
Object
.
hasOwnProperty
.
call
(
c
'
h
'
)
false
)
;
assert
.
sameValue
(
Object
.
hasOwnProperty
.
call
(
c
0
)
false
)
;
verifyProperty
(
C
'
f
'
{
value
:
'
test262
'
enumerable
:
true
writable
:
true
configurable
:
true
}
)
;
verifyProperty
(
C
'
g
'
{
value
:
undefined
enumerable
:
true
writable
:
true
configurable
:
true
}
)
;
verifyProperty
(
C
0
{
value
:
'
bar
'
enumerable
:
true
writable
:
true
configurable
:
true
}
)
;
verifyProperty
(
C
'
h
'
{
value
:
undefined
enumerable
:
true
writable
:
true
configurable
:
true
}
)
;
reportCompare
(
0
0
)
;
