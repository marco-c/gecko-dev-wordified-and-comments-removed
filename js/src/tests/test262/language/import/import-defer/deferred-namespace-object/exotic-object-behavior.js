import
defer
*
as
ns
from
"
.
/
dep_FIXTURE
.
js
"
;
assert
.
sameValue
(
typeof
ns
"
object
"
"
Deferred
namespaces
are
objects
"
)
;
assert
(
!
Reflect
.
isExtensible
(
ns
)
"
Deferred
namespaces
are
not
extensible
"
)
;
assert
.
sameValue
(
Reflect
.
preventExtensions
(
ns
)
true
"
Deferred
namespaces
can
made
non
-
extensible
"
)
;
assert
.
sameValue
(
Reflect
.
getPrototypeOf
(
ns
)
null
"
Deferred
namespaces
have
a
null
prototype
"
)
;
assert
.
sameValue
(
Reflect
.
setPrototypeOf
(
ns
{
}
)
false
"
Deferred
namespaces
'
prototype
cannot
be
changed
"
)
;
assert
.
sameValue
(
Reflect
.
setPrototypeOf
(
ns
null
)
true
"
Deferred
namespaces
'
prototype
can
be
'
set
'
to
null
"
)
;
assert
.
throws
(
TypeError
(
)
=
>
Reflect
.
apply
(
ns
null
[
]
)
"
Deferred
namespaces
are
not
callable
"
)
;
assert
.
throws
(
TypeError
(
)
=
>
Reflect
.
construct
(
ns
[
]
ns
)
"
Deferred
namespaces
are
not
constructable
"
)
;
assert
.
compareArray
(
Reflect
.
ownKeys
(
ns
)
[
"
bar
"
"
foo
"
Symbol
.
toStringTag
]
"
Deferred
namespaces
'
keys
are
the
exports
sorted
alphabetically
followed
by
toStringTag
"
)
;
verifyProperty
(
ns
"
foo
"
{
value
:
1
writable
:
true
enumerable
:
true
configurable
:
false
}
)
;
assert
.
sameValue
(
Reflect
.
getOwnPropertyDescriptor
(
ns
"
non
-
existent
"
)
undefined
"
No
descriptors
for
non
-
exports
"
)
;
reportCompare
(
0
0
)
;
