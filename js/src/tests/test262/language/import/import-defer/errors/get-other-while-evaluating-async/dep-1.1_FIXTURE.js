import
{
first
third
resolveSecond
rejectDone
resolveDone
}
from
"
.
/
promises_FIXTURE
.
js
"
;
import
defer
*
as
ns
from
"
.
/
dep
-
1
-
tla_FIXTURE
.
js
"
;
try
{
ns
.
foo
;
}
catch
(
error
)
{
globalThis
[
"
error
on
ns
.
foo
while
evaluating
"
]
=
error
;
}
first
.
then
(
(
)
=
>
{
try
{
ns
.
foo
;
}
catch
(
error
)
{
globalThis
[
"
error
on
ns
.
foo
while
evaluating
-
async
"
]
=
error
;
}
resolveSecond
(
)
;
}
)
.
then
(
(
)
=
>
{
return
third
.
then
(
(
)
=
>
{
let
foo
=
ns
.
foo
;
globalThis
[
"
value
of
ns
.
foo
when
evaluated
"
]
=
foo
;
}
)
}
)
.
then
(
resolveDone
rejectDone
)
;
