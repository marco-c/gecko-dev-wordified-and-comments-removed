var
innerPromise
=
Promise
.
resolve
(
"
unwrapped
value
"
)
;
var
asyncIter
=
{
[
Symbol
.
asyncIterator
]
(
)
{
return
this
;
}
next
(
)
{
return
{
done
:
false
value
:
innerPromise
}
;
}
get
return
(
)
{
throw
new
Test262Error
(
"
.
return
should
not
be
accessed
"
)
;
}
get
throw
(
)
{
throw
new
Test262Error
(
"
.
throw
should
not
be
accessed
"
)
;
}
}
;
async
function
*
f
(
)
{
yield
*
asyncIter
;
}
f
(
)
.
next
(
)
.
then
(
v
=
>
{
assert
.
sameValue
(
v
.
value
innerPromise
"
yield
*
should
not
unwrap
promises
from
manually
-
implemented
async
iterators
"
)
;
}
)
.
then
(
DONE
DONE
)
