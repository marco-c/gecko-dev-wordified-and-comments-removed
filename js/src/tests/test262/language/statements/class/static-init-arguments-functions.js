var
fn
fnParam
;
var
gen
genParam
;
var
asyncFn
asyncFnParam
;
class
C
{
static
{
(
function
(
{
test262
=
fnParam
=
arguments
}
)
{
fn
=
arguments
;
}
)
(
'
function
'
)
;
(
function
*
(
{
test262
=
genParam
=
arguments
}
)
{
gen
=
arguments
;
}
)
(
'
generator
function
'
)
.
next
(
)
;
(
async
function
(
{
test262
=
asyncFnParam
=
arguments
}
)
{
asyncFn
=
arguments
;
}
)
(
'
async
function
'
)
;
}
}
assert
(
compareArray
(
[
'
function
'
]
fn
)
'
body
'
)
;
assert
(
compareArray
(
[
'
function
'
]
fnParam
)
'
parameter
'
)
;
assert
(
compareArray
(
[
'
generator
function
'
]
gen
)
'
body
'
)
;
assert
(
compareArray
(
[
'
generator
function
'
]
genParam
)
'
parameter
'
)
;
assert
(
compareArray
(
[
'
async
function
'
]
asyncFn
)
'
body
'
)
;
assert
(
compareArray
(
[
'
async
function
'
]
asyncFnParam
)
'
parameter
'
)
;
reportCompare
(
0
0
)
;
