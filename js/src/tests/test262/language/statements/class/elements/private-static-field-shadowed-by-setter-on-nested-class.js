class
C
{
static
#
m
=
'
outer
class
'
;
static
fieldAccess
(
)
{
return
this
.
#
m
;
}
static
B
=
class
{
set
#
m
(
v
)
{
this
.
_v
=
v
;
}
static
access
(
o
)
{
o
.
#
m
=
'
inner
class
'
;
}
}
}
assert
.
sameValue
(
C
.
fieldAccess
(
)
'
outer
class
'
)
;
let
b
=
new
C
.
B
(
)
;
C
.
B
.
access
(
b
)
;
assert
.
sameValue
(
b
.
_v
'
inner
class
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
C
.
B
.
access
(
C
)
;
}
'
accessed
private
setter
from
an
arbritary
object
'
)
;
reportCompare
(
0
0
)
;
