var
instance
;
var
method
methodParam
;
var
getter
;
var
setter
setterParam
;
var
genMethod
genMethodParam
;
var
asyncMethod
asyncMethodParam
;
class
C
{
static
{
instance
=
new
class
{
method
(
{
test262
=
methodParam
=
arguments
}
)
{
method
=
arguments
;
}
get
accessor
(
)
{
getter
=
arguments
;
}
set
accessor
(
{
test262
=
setterParam
=
arguments
}
)
{
setter
=
arguments
;
}
*
gen
(
{
test262
=
genMethodParam
=
arguments
}
)
{
genMethod
=
arguments
;
}
async
async
(
{
test262
=
asyncMethodParam
=
arguments
}
)
{
asyncMethod
=
arguments
;
}
}
(
)
;
}
}
instance
.
method
(
'
method
'
)
;
instance
.
accessor
;
instance
.
accessor
=
'
setter
'
;
instance
.
gen
(
'
generator
method
'
)
.
next
(
)
;
instance
.
async
(
'
async
method
'
)
;
assert
(
compareArray
(
[
'
method
'
]
method
)
'
body
'
)
;
assert
(
compareArray
(
[
'
method
'
]
methodParam
)
'
parameter
'
)
;
assert
(
compareArray
(
[
]
getter
)
'
body
'
)
;
assert
(
compareArray
(
[
'
setter
'
]
setter
)
'
body
'
)
;
assert
(
compareArray
(
[
'
setter
'
]
setterParam
)
'
parameter
'
)
;
assert
(
compareArray
(
[
'
generator
method
'
]
genMethod
)
'
body
'
)
;
assert
(
compareArray
(
[
'
generator
method
'
]
genMethodParam
)
'
parameter
'
)
;
assert
(
compareArray
(
[
'
async
method
'
]
asyncMethod
)
'
body
'
)
;
assert
(
compareArray
(
[
'
async
method
'
]
asyncMethodParam
)
'
parameter
'
)
;
reportCompare
(
0
0
)
;
