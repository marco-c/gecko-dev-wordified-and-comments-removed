const
asyncIterable
=
{
}
;
asyncIterable
[
Symbol
.
asyncIterator
]
=
function
(
)
{
return
{
next
:
function
(
)
{
return
{
done
:
false
value
:
null
}
;
}
return
:
true
}
;
}
;
let
iterationCount
=
0
;
const
promise
=
(
async
function
(
)
{
for
await
(
const
x
of
asyncIterable
)
{
iterationCount
+
=
1
;
throw
new
Test262Error
(
"
should
not
be
overriden
"
)
;
}
}
)
(
)
;
promise
.
then
(
function
(
value
)
{
throw
new
Test262Error
(
"
Promise
should
be
rejected
got
:
"
+
value
)
;
}
function
(
error
)
{
assert
.
sameValue
(
error
.
constructor
Test262Error
)
;
assert
.
sameValue
(
iterationCount
1
"
The
loop
body
is
evaluated
"
)
;
}
)
.
then
(
DONE
DONE
)
;
