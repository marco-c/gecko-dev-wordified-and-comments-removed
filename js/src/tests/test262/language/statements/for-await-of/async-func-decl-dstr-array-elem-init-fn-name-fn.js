let
xFnexp
fnexp
;
let
iterCount
=
0
;
async
function
fn
(
)
{
for
await
(
[
xFnexp
=
function
x
(
)
{
}
fnexp
=
function
(
)
{
}
]
of
[
[
]
]
)
{
assert
(
xFnexp
.
name
!
=
=
'
xFnexp
'
)
;
verifyProperty
(
fnexp
'
name
'
{
enumerable
:
false
writable
:
false
configurable
:
true
value
:
'
fnexp
'
}
)
;
iterCount
+
=
1
;
}
}
let
promise
=
fn
(
)
;
promise
.
then
(
(
)
=
>
assert
.
sameValue
(
iterCount
1
'
iteration
occurred
as
expected
'
)
DONE
)
.
then
(
DONE
DONE
)
;
