var
count
=
0
;
var
iterCount
=
0
;
var
asyncIter
=
(
async
function
*
(
)
{
yield
*
[
{
get
v
(
)
{
count
+
+
;
return
2
;
}
}
]
;
}
)
(
)
;
async
function
*
fn
(
)
{
for
await
(
var
{
.
.
.
x
}
of
asyncIter
)
{
assert
.
sameValue
(
x
.
v
2
)
;
assert
.
sameValue
(
count
1
)
;
verifyProperty
(
x
"
v
"
{
enumerable
:
true
writable
:
true
configurable
:
true
value
:
2
}
)
;
iterCount
+
=
1
;
}
}
fn
(
)
.
next
(
)
.
then
(
(
)
=
>
assert
.
sameValue
(
iterCount
1
'
iteration
occurred
as
expected
'
)
DONE
)
.
then
(
DONE
DONE
)
;
