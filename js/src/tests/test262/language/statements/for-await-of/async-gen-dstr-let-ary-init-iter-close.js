var
doneCallCount
=
0
;
var
iter
=
{
}
;
iter
[
Symbol
.
iterator
]
=
function
(
)
{
return
{
next
(
)
{
return
{
value
:
null
done
:
false
}
;
}
return
(
)
{
doneCallCount
+
=
1
;
return
{
}
;
}
}
;
}
;
var
iterCount
=
0
;
async
function
*
fn
(
)
{
for
await
(
let
[
x
]
of
[
iter
]
)
{
assert
.
sameValue
(
doneCallCount
1
)
;
iterCount
+
=
1
;
}
}
fn
(
)
.
next
(
)
.
then
(
(
)
=
>
assert
.
sameValue
(
iterCount
1
'
iteration
occurred
as
expected
'
)
DONE
)
.
then
(
DONE
DONE
)
;
