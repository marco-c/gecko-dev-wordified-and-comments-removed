var
fn
count
=
{
}
;
count
.
catch
=
0
;
count
.
finally
=
0
;
fn
=
function
(
)
{
try
{
throw
'
try
'
;
}
catch
(
e
)
{
count
.
catch
+
=
1
;
throw
'
catch
'
;
}
finally
{
count
.
finally
+
=
1
;
throw
new
Test262Error
(
'
finally
'
)
;
}
return
'
wat
'
;
}
;
assert
.
throws
(
Test262Error
fn
'
1
:
try
Abrupt
catch
Abrupt
finally
Abrupt
;
Completion
:
finally
'
)
;
assert
.
sameValue
(
count
.
catch
1
'
1
:
catch
count
'
)
;
assert
.
sameValue
(
count
.
finally
1
'
1
:
finally
count
'
)
;
count
.
catch
=
0
;
count
.
finally
=
0
;
fn
=
function
(
)
{
try
{
throw
'
try
'
;
}
catch
(
e
)
{
count
.
catch
+
=
1
;
return
'
catch
'
;
}
finally
{
count
.
finally
+
=
1
;
throw
new
Test262Error
(
'
finally
'
)
;
}
return
'
wat
'
;
}
;
assert
.
throws
(
Test262Error
fn
'
2
:
try
Abrupt
catch
Return
finally
Abrupt
;
Completion
:
finally
'
)
;
assert
.
sameValue
(
count
.
catch
1
'
2
:
catch
count
'
)
;
assert
.
sameValue
(
count
.
finally
1
'
2
:
fiinally
count
'
)
;
count
.
catch
=
0
;
count
.
finally
=
0
;
fn
=
function
(
)
{
try
{
return
'
try
'
;
}
catch
(
e
)
{
count
.
catch
+
=
1
;
return
'
catch
'
;
}
finally
{
count
.
finally
+
=
1
;
throw
new
Test262Error
(
'
finally
'
)
;
}
return
'
wat
'
;
}
;
assert
.
throws
(
Test262Error
fn
'
3
:
try
Normal
catch
Normal
finally
Abrupt
;
Completion
:
finally
'
)
;
assert
.
sameValue
(
count
.
catch
0
'
3
:
catch
count
'
)
;
assert
.
sameValue
(
count
.
finally
1
'
3
:
fiinally
count
'
)
;
reportCompare
(
0
0
)
;
