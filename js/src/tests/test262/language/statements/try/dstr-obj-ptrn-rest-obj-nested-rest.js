var
ranCatch
=
false
;
try
{
throw
{
a
:
1
b
:
2
c
:
3
d
:
4
e
:
5
}
;
}
catch
(
{
a
b
.
.
.
{
c
.
.
.
rest
}
}
)
{
assert
.
sameValue
(
a
1
)
;
assert
.
sameValue
(
b
2
)
;
assert
.
sameValue
(
c
3
)
;
assert
.
sameValue
(
rest
.
d
4
)
;
assert
.
sameValue
(
rest
.
e
5
)
;
verifyEnumerable
(
rest
"
d
"
)
;
verifyWritable
(
rest
"
d
"
)
;
verifyConfigurable
(
rest
"
d
"
)
;
verifyEnumerable
(
rest
"
e
"
)
;
verifyWritable
(
rest
"
e
"
)
;
verifyConfigurable
(
rest
"
e
"
)
;
ranCatch
=
true
;
}
assert
(
ranCatch
'
executed
catch
block
'
)
;
reportCompare
(
0
0
)
;
