try
{
throw
13
;
}
catch
(
e
)
{
if
(
e
!
=
=
13
)
throw
new
Test262Error
(
'
#
1
:
Exception
=
=
=
13
.
Actual
:
Exception
=
=
=
'
+
e
)
;
}
var
b
=
13
;
try
{
throw
b
;
}
catch
(
e
)
{
if
(
e
!
=
=
13
)
throw
new
Test262Error
(
'
#
2
:
Exception
=
=
=
13
.
Actual
:
Exception
=
=
=
'
+
e
)
;
}
try
{
throw
2
.
13
;
}
catch
(
e
)
{
if
(
e
!
=
=
2
.
13
)
throw
new
Test262Error
(
'
#
3
:
Exception
=
=
=
2
.
13
.
Actual
:
Exception
=
=
=
'
+
e
)
;
}
try
{
throw
NaN
;
}
catch
(
e
)
{
assert
.
sameValue
(
e
NaN
"
e
is
NaN
"
)
;
}
try
{
throw
+
Infinity
;
}
catch
(
e
)
{
if
(
e
!
=
=
+
Infinity
)
throw
new
Test262Error
(
'
#
5
:
Exception
=
=
=
+
Infinity
.
Actual
:
Exception
=
=
=
'
+
e
)
;
}
try
{
throw
-
Infinity
;
}
catch
(
e
)
{
if
(
e
!
=
=
-
Infinity
)
throw
new
Test262Error
(
'
#
6
:
Exception
=
=
=
-
Infinity
.
Actual
:
Exception
=
=
=
'
+
e
)
;
}
try
{
throw
+
0
;
}
catch
(
e
)
{
if
(
e
!
=
=
+
0
)
throw
new
Test262Error
(
'
#
7
:
Exception
=
=
=
+
0
.
Actual
:
Exception
=
=
=
'
+
e
)
;
}
try
{
throw
-
0
;
}
catch
(
e
)
{
if
(
e
!
=
=
-
0
)
throw
new
Test262Error
(
'
#
8
:
Exception
=
=
=
-
0
.
Actual
:
Exception
=
=
=
'
+
e
)
;
}
reportCompare
(
0
0
)
;
