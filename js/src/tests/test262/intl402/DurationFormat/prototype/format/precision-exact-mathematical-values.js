const
durations
=
[
{
seconds
:
10_000_000
nanoseconds
:
1
}
{
seconds
:
Number
.
MAX_SAFE_INTEGER
milliseconds
:
Number
.
MAX_SAFE_INTEGER
microseconds
:
Number
.
MAX_SAFE_INTEGER
nanoseconds
:
Number
.
MAX_SAFE_INTEGER
}
{
seconds
:
Number
.
MIN_SAFE_INTEGER
milliseconds
:
Number
.
MIN_SAFE_INTEGER
microseconds
:
Number
.
MIN_SAFE_INTEGER
nanoseconds
:
Number
.
MIN_SAFE_INTEGER
}
{
seconds
:
1
milliseconds
:
2
microseconds
:
3
nanoseconds
:
Number
.
MAX_SAFE_INTEGER
}
{
seconds
:
Number
.
MAX_SAFE_INTEGER
milliseconds
:
10
*
*
3
microseconds
:
10
*
*
6
nanoseconds
:
10
*
*
9
}
{
seconds
:
0
milliseconds
:
0
microseconds
:
0
nanoseconds
:
Number
.
MAX_VALUE
}
]
;
const
df
=
new
Intl
.
DurationFormat
(
"
en
"
{
style
:
"
digital
"
}
)
;
for
(
let
duration
of
durations
)
{
let
expected
=
formatDurationFormatPattern
(
df
duration
)
;
assert
.
sameValue
(
df
.
format
(
duration
)
expected
Duration
is
{
JSON
.
stringify
(
duration
)
}
)
;
}
reportCompare
(
0
0
)
;
