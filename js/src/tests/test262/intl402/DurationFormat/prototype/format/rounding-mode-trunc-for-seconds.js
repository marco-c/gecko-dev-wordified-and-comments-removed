const
durations
=
[
{
fractionalDigits
:
0
numericValue
:
1
.
5
duration
:
{
seconds
:
1
milliseconds
:
500
}
}
{
fractionalDigits
:
3
numericValue
:
0
.
0015
duration
:
{
milliseconds
:
1
microseconds
:
500
}
}
{
fractionalDigits
:
6
numericValue
:
0
.
0000015
duration
:
{
microseconds
:
1
nanoseconds
:
500
}
}
]
;
for
(
const
{
numericValue
fractionalDigits
duration
}
of
durations
)
{
const
df
=
new
Intl
.
DurationFormat
(
"
en
"
{
seconds
:
"
numeric
"
fractionalDigits
}
)
;
const
nf
=
new
Intl
.
NumberFormat
(
"
en
"
{
maximumFractionDigits
:
fractionalDigits
roundingMode
:
"
trunc
"
}
)
;
const
expected
=
nf
.
format
(
numericValue
)
;
assert
.
sameValue
(
df
.
format
(
duration
)
expected
'
Intl
.
DurationFormat
should
format
seconds
milliseconds
and
microseconds
with
roundingMode
:
"
trunc
"
'
)
;
}
reportCompare
(
0
0
)
;
