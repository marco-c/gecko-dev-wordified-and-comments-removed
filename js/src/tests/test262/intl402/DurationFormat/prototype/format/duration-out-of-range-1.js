const
df
=
new
Intl
.
DurationFormat
(
)
;
const
units
=
[
"
years
"
"
months
"
"
weeks
"
]
;
const
invalidValues
=
[
2
*
*
32
2
*
*
32
+
1
Number
.
MAX_SAFE_INTEGER
Number
.
MAX_VALUE
]
;
const
validValues
=
[
2
*
*
32
-
1
]
;
for
(
let
unit
of
units
)
{
for
(
let
value
of
invalidValues
)
{
let
positive
=
{
[
unit
]
:
value
}
;
assert
.
throws
(
RangeError
(
)
=
>
df
.
format
(
positive
)
Duration
"
{
unit
}
"
throws
when
value
is
{
value
}
)
;
let
negative
=
{
[
unit
]
:
-
value
}
;
assert
.
throws
(
RangeError
(
)
=
>
df
.
format
(
negative
)
Duration
"
{
unit
}
"
throws
when
value
is
{
-
value
}
)
;
}
for
(
let
value
of
validValues
)
{
let
positive
=
{
[
unit
]
:
value
}
;
assert
.
sameValue
(
typeof
df
.
format
(
positive
)
"
string
"
Duration
"
{
unit
}
"
doesn
'
t
throw
when
value
is
{
value
}
)
;
let
negative
=
{
[
unit
]
:
-
value
}
;
assert
.
sameValue
(
typeof
df
.
format
(
negative
)
"
string
"
Duration
"
{
unit
}
"
doesn
'
t
throw
when
value
is
{
-
value
}
)
;
}
}
reportCompare
(
0
0
)
;
