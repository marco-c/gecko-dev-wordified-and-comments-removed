const
testData
=
{
"
Africa
/
Tunis
"
:
[
-
842918400n
-
842223600n
]
"
America
/
Argentina
/
Tucuman
"
:
[
1086058800n
1087099200n
]
"
America
/
Boa_Vista
"
:
[
970977600n
971578800n
]
"
America
/
Fortaleza
"
:
[
970974000n
972180000n
]
"
America
/
Maceio
"
:
[
970974000n
972180000n
]
"
America
/
Noronha
"
:
[
970970400n
971571600n
]
"
America
/
Recife
"
:
[
970974000n
971575200n
]
"
Europe
/
Riga
"
:
[
-
796777200n
-
795834000n
]
"
Europe
/
Simferopol
"
:
[
-
812502000n
-
811648800n
]
"
Europe
/
Tirane
"
:
[
-
844556400n
-
843519600n
]
"
Europe
/
Vienna
"
:
[
-
781052400n
-
780188400n
]
}
for
(
const
[
zone
[
first
second
]
]
of
Object
.
entries
(
testData
)
)
{
for
(
const
[
label
epochSeconds
]
of
Object
.
entries
(
{
first
second
}
)
)
{
const
transition
=
new
Temporal
.
ZonedDateTime
(
epochSeconds
*
1_000_000_000n
zone
)
;
const
before
=
new
Temporal
.
ZonedDateTime
(
(
epochSeconds
-
1800n
)
*
1_000_000_000n
zone
)
;
const
after
=
new
Temporal
.
ZonedDateTime
(
(
epochSeconds
+
1800n
)
*
1_000_000_000n
zone
)
;
assert
.
sameValue
(
before
.
getTimeZoneTransition
(
"
next
"
)
.
epochNanoseconds
transition
.
epochNanoseconds
{
zone
}
offset
transitions
close
together
next
to
{
label
}
transition
)
;
assert
.
sameValue
(
after
.
getTimeZoneTransition
(
"
previous
"
)
.
epochNanoseconds
transition
.
epochNanoseconds
{
zone
}
offset
transitions
close
together
previous
to
{
label
}
transition
)
;
}
}
reportCompare
(
0
0
)
;
