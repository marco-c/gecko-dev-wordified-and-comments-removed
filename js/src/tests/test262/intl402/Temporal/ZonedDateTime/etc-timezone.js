[
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
]
.
forEach
(
(
n
)
=
>
{
let
tz
=
"
Etc
/
GMT
-
"
+
n
;
let
instance
=
new
Temporal
.
ZonedDateTime
(
0n
tz
)
;
assert
.
sameValue
(
instance
.
timeZoneId
tz
tz
+
"
is
a
valid
timezone
"
)
;
}
)
;
let
gmtMinus24TZ
=
"
Etc
/
GMT
-
24
"
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Temporal
.
ZonedDateTime
(
0n
gmtMinus24TZ
)
;
}
gmtMinus24TZ
+
"
is
an
invalid
timezone
"
)
;
[
1
2
3
4
5
6
7
8
9
]
.
forEach
(
(
n
)
=
>
{
let
tz
=
"
Etc
/
GMT
-
0
"
+
n
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Temporal
.
ZonedDateTime
(
0n
tz
)
;
}
tz
+
"
is
an
invalid
timezone
"
)
;
}
)
;
[
0
1
2
3
4
5
6
7
8
9
]
.
forEach
(
(
n
)
=
>
{
let
tz
=
"
Etc
/
GMT
+
0
"
+
n
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Temporal
.
ZonedDateTime
(
0n
tz
)
;
}
tz
+
"
is
an
invalid
timezone
"
)
;
}
)
;
[
0
1
2
3
4
5
6
7
8
9
10
11
12
]
.
forEach
(
(
n
)
=
>
{
let
tz
=
"
Etc
/
GMT
+
"
+
n
;
let
instance
=
new
Temporal
.
ZonedDateTime
(
0n
tz
)
;
assert
.
sameValue
(
instance
.
timeZoneId
tz
tz
+
"
is
a
valid
timezone
"
)
;
}
)
;
let
gmtPlus24TZ
=
"
Etc
/
GMT
+
24
"
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Temporal
.
ZonedDateTime
(
0n
gmtPlus24TZ
)
;
}
gmtPlus24TZ
+
"
is
an
invalid
timezone
"
)
;
reportCompare
(
0
0
)
;
