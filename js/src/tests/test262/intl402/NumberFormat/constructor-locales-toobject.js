const
toObjectResults
=
[
[
true
new
Boolean
(
true
)
]
[
42
new
Number
(
42
)
]
[
{
}
{
}
]
[
Symbol
(
)
Object
(
Symbol
(
)
)
]
]
;
toObjectResults
.
forEach
(
pair
=
>
{
const
[
value
result
]
=
pair
;
const
actual
=
new
Intl
.
NumberFormat
(
value
)
.
resolvedOptions
(
)
;
const
expected
=
new
Intl
.
NumberFormat
(
result
)
.
resolvedOptions
(
)
assert
.
sameValue
(
actual
.
locale
expected
.
locale
)
;
assert
.
sameValue
(
actual
.
minimumIntegerDigits
expected
.
minimumIntegerDigits
)
;
assert
.
sameValue
(
actual
.
minimumFractionDigits
expected
.
minimumFractionDigits
)
;
assert
.
sameValue
(
actual
.
maximumFractionDigits
expected
.
maximumFractionDigits
)
;
assert
.
sameValue
(
actual
.
numberingSystem
expected
.
numberingSystem
)
;
assert
.
sameValue
(
actual
.
style
expected
.
style
)
;
assert
.
sameValue
(
actual
.
useGrouping
expected
.
useGrouping
)
;
}
)
;
assert
.
throws
(
TypeError
(
)
=
>
new
Intl
.
NumberFormat
(
null
)
)
;
reportCompare
(
0
0
)
;
