assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
NumberFormat
(
'
en
'
{
roundingMode
:
null
}
)
;
}
'
null
'
)
;
assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
NumberFormat
(
'
en
'
{
roundingMode
:
3
}
)
;
}
'
number
'
)
;
assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
NumberFormat
(
'
en
'
{
roundingMode
:
true
}
)
;
}
'
boolean
'
)
;
assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
NumberFormat
(
'
en
'
{
roundingMode
:
'
HalfExpand
'
}
)
;
}
'
invalid
string
'
)
;
var
symbol
=
Symbol
(
'
halfExpand
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
new
Intl
.
NumberFormat
(
'
en
'
{
roundingMode
:
symbol
}
)
;
}
'
Symbol
'
)
;
var
brokenToString
=
{
toString
:
function
(
)
{
throw
new
Test262Error
(
)
;
}
}
;
assert
.
throws
(
Test262Error
function
(
)
{
new
Intl
.
NumberFormat
(
'
en
'
{
roundingMode
:
brokenToString
}
)
;
}
'
broken
toString
implementation
'
)
;
reportCompare
(
0
0
)
;
