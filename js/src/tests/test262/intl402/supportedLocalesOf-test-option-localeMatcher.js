testWithIntlConstructors
(
function
(
Constructor
)
{
var
defaultLocale
=
new
Constructor
(
)
.
resolvedOptions
(
)
.
locale
;
var
validValues
=
[
undefined
"
lookup
"
"
best
fit
"
{
toString
:
function
(
)
{
return
"
lookup
"
;
}
}
]
;
validValues
.
forEach
(
function
(
value
)
{
var
supported
=
Constructor
.
supportedLocalesOf
(
[
defaultLocale
]
{
localeMatcher
:
value
}
)
;
}
)
;
var
invalidValues
=
[
null
0
5
NaN
true
false
"
invalid
"
]
;
invalidValues
.
forEach
(
function
(
value
)
{
assert
.
throws
(
RangeError
function
(
)
{
var
supported
=
Constructor
.
supportedLocalesOf
(
[
defaultLocale
]
{
localeMatcher
:
value
}
)
;
}
"
Invalid
localeMatcher
value
"
+
value
+
"
was
not
rejected
.
"
)
;
}
)
;
}
)
;
reportCompare
(
0
0
)
;
