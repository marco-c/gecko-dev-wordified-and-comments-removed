const
timeZones
=
Intl
.
supportedValuesOf
(
"
timeZone
"
)
;
assert
(
Array
.
isArray
(
timeZones
)
"
Returns
an
Array
object
.
"
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
timeZones
)
Array
.
prototype
"
The
array
prototype
is
Array
.
prototype
"
)
;
const
otherTimeZones
=
Intl
.
supportedValuesOf
(
"
timeZone
"
)
;
assert
.
notSameValue
(
otherTimeZones
timeZones
"
Returns
a
new
array
object
for
each
call
.
"
)
;
assert
.
compareArray
(
timeZones
otherTimeZones
.
sort
(
)
"
The
array
is
sorted
.
"
)
;
assert
.
sameValue
(
new
Set
(
timeZones
)
.
size
timeZones
.
length
"
The
array
doesn
'
t
contain
duplicates
.
"
)
;
for
(
let
timeZone
of
timeZones
)
{
assert
(
isCanonicalizedStructurallyValidTimeZoneName
(
timeZone
)
{
timeZone
}
is
a
canonicalised
and
structurally
valid
time
zone
name
)
;
}
reportCompare
(
0
0
)
;
