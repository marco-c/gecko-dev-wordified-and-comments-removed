const
collations
=
Intl
.
supportedValuesOf
(
"
collation
"
)
;
const
locales
=
[
"
en
"
"
ar
"
"
de
"
"
es
"
"
hi
"
"
ko
"
"
ln
"
"
si
"
"
sv
"
"
zh
"
]
;
for
(
let
collation
of
collations
)
{
let
supported
=
false
;
for
(
let
locale
of
locales
)
{
let
obj
=
new
Intl
.
Collator
(
locale
{
collation
}
)
;
if
(
obj
.
resolvedOptions
(
)
.
collation
=
=
=
collation
)
{
supported
=
true
;
break
;
}
}
assert
(
supported
{
collation
}
is
supported
by
Collator
)
;
}
for
(
let
collation
of
allCollations
(
)
)
{
let
supported
=
false
;
for
(
let
locale
of
locales
)
{
let
obj
=
new
Intl
.
Collator
(
locale
{
collation
}
)
;
if
(
obj
.
resolvedOptions
(
)
.
collation
=
=
=
collation
)
{
supported
=
true
;
break
;
}
}
if
(
supported
)
{
assert
(
collations
.
includes
(
collation
)
{
collation
}
supported
but
not
returned
by
supportedValuesOf
)
;
}
else
{
assert
(
!
collations
.
includes
(
collation
)
{
collation
}
not
supported
but
returned
by
supportedValuesOf
)
;
}
}
reportCompare
(
0
0
)
;
