const
units
=
Intl
.
supportedValuesOf
(
"
unit
"
)
;
assert
(
Array
.
isArray
(
units
)
"
Returns
an
Array
object
.
"
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
units
)
Array
.
prototype
"
The
array
prototype
is
Array
.
prototype
"
)
;
const
otherUnits
=
Intl
.
supportedValuesOf
(
"
unit
"
)
;
assert
.
notSameValue
(
otherUnits
units
"
Returns
a
new
array
object
for
each
call
.
"
)
;
assert
.
compareArray
(
units
otherUnits
.
sort
(
)
"
The
array
is
sorted
.
"
)
;
assert
.
sameValue
(
new
Set
(
units
)
.
size
units
.
length
"
The
array
doesn
'
t
contain
duplicates
.
"
)
;
const
simpleSanctioned
=
allSimpleSanctionedUnits
(
)
;
for
(
let
unit
of
units
)
{
assert
(
simpleSanctioned
.
includes
(
unit
)
{
unit
}
is
a
simple
sanctioned
unit
)
;
assert
(
!
unit
.
includes
(
"
-
per
-
"
)
{
unit
}
isn
'
t
a
compound
unit
)
;
}
reportCompare
(
0
0
)
;
