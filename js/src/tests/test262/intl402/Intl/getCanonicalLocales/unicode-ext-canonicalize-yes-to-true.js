const
unicodeKeys
=
[
"
kb
"
"
kc
"
"
kh
"
"
kk
"
"
kn
"
]
;
for
(
let
key
of
unicodeKeys
)
{
let
tag
=
und
-
u
-
{
key
}
-
yes
;
let
canonical
=
und
-
u
-
{
key
}
;
assert
.
sameValue
(
isCanonicalizedStructurallyValidLanguageTag
(
tag
)
false
"
\
"
"
+
tag
+
"
\
"
isn
'
t
a
canonical
language
tag
.
"
)
;
assert
(
isCanonicalizedStructurallyValidLanguageTag
(
canonical
)
"
\
"
"
+
canonical
+
"
\
"
is
a
canonical
and
structurally
valid
language
tag
.
"
)
;
let
result
=
Intl
.
getCanonicalLocales
(
tag
)
;
assert
.
sameValue
(
result
.
length
1
)
;
assert
.
sameValue
(
result
[
0
]
canonical
)
;
}
const
otherUnicodeKeys
=
[
"
ka
"
"
kf
"
"
kr
"
"
ks
"
"
kv
"
]
;
for
(
let
key
of
otherUnicodeKeys
)
{
let
tag
=
und
-
u
-
{
key
}
-
yes
;
assert
(
isCanonicalizedStructurallyValidLanguageTag
(
tag
)
"
\
"
"
+
tag
+
"
\
"
is
a
canonical
and
structurally
valid
language
tag
.
"
)
;
let
result
=
Intl
.
getCanonicalLocales
(
tag
)
;
assert
.
sameValue
(
result
.
length
1
)
;
assert
.
sameValue
(
result
[
0
]
tag
)
;
}
reportCompare
(
0
0
)
;
