const
testData
=
{
"
sl
-
t
-
sl
-
rozaj
-
biske
-
1994
"
:
"
sl
-
t
-
sl
-
1994
-
biske
-
rozaj
"
"
DE
-
T
-
M0
-
DIN
-
K0
-
QWERTZ
"
:
"
de
-
t
-
k0
-
qwertz
-
m0
-
din
"
"
en
-
t
-
m0
-
true
"
:
"
en
-
t
-
m0
-
true
"
"
en
-
t
-
iw
"
:
"
en
-
t
-
he
"
"
und
-
Latn
-
t
-
und
-
hani
-
m0
-
names
"
:
"
und
-
Latn
-
t
-
und
-
hani
-
m0
-
prprname
"
}
;
for
(
let
[
tag
canonical
]
of
Object
.
entries
(
testData
)
)
{
assert
(
isCanonicalizedStructurallyValidLanguageTag
(
canonical
)
"
\
"
"
+
canonical
+
"
\
"
is
a
canonical
and
structurally
valid
language
tag
.
"
)
;
let
result
=
Intl
.
getCanonicalLocales
(
tag
)
;
assert
.
sameValue
(
result
.
length
1
)
;
assert
.
sameValue
(
result
[
0
]
canonical
)
;
}
reportCompare
(
0
0
)
;
