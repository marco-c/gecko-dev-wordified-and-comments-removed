const
invalidCases
=
[
"
en
-
u
-
c0
"
"
en
-
u
-
00
"
]
;
const
validCases
=
[
"
en
-
u
-
0c
"
]
;
for
(
let
invalid
of
invalidCases
)
{
assert
.
sameValue
(
isCanonicalizedStructurallyValidLanguageTag
(
invalid
)
false
"
\
"
"
+
invalid
+
"
\
"
isn
'
t
a
structurally
valid
language
tag
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
Intl
.
getCanonicalLocales
(
invalid
)
)
;
}
for
(
let
valid
of
validCases
)
{
assert
(
isCanonicalizedStructurallyValidLanguageTag
(
valid
)
"
\
"
"
+
valid
+
"
\
"
is
a
canonical
and
structurally
valid
language
tag
.
"
)
;
let
result
=
Intl
.
getCanonicalLocales
(
valid
)
;
assert
.
sameValue
(
result
.
length
1
)
;
assert
.
sameValue
(
result
[
0
]
valid
)
;
}
reportCompare
(
0
0
)
;
