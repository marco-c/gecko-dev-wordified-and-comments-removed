var
invalidLanguageTags
=
[
"
"
"
i
"
"
x
"
"
u
"
"
419
"
"
u
-
nu
-
latn
-
cu
-
bob
"
"
hans
-
cmn
-
cn
"
"
cmn
-
hans
-
cn
-
u
-
u
"
"
cmn
-
hans
-
cn
-
t
-
u
-
ca
-
u
"
"
de
-
gregory
-
gregory
"
"
*
"
"
de
-
*
"
"
"
"
en
-
"
"
d
"
"
de_DE
"
"
DE_de
"
"
cmn_Hans
"
"
cmn
-
hans_cn
"
"
es_419
"
"
es
-
419
-
u
-
nu
-
latn
-
cu_bob
"
"
i_klingon
"
"
cmn
-
hans
-
cn
-
t
-
ca
-
u
-
ca
-
x_t
-
u
"
"
enochian_enochian
"
"
de
-
gregory_u
-
ca
-
gregory
"
"
en
\
u0000
"
"
en
"
"
en
"
"
it
-
IT
-
Latn
"
"
de
-
u
"
"
de
-
u
-
"
"
de
-
u
-
ca
-
"
"
de
-
u
-
ca
-
gregory
-
"
"
si
-
x
"
"
x
-
"
"
x
-
y
-
"
]
;
for
(
var
i
=
0
;
i
<
invalidLanguageTags
.
length
;
+
+
i
)
{
var
invalidTag
=
invalidLanguageTags
[
i
]
;
assert
(
!
isCanonicalizedStructurallyValidLanguageTag
(
invalidTag
)
"
Test
data
\
"
"
+
invalidTag
+
"
\
"
is
a
canonicalized
and
structurally
valid
language
tag
.
"
)
;
}
for
(
var
i
=
0
;
i
<
invalidLanguageTags
.
length
;
+
+
i
)
{
var
invalidTag
=
invalidLanguageTags
[
i
]
;
assert
.
throws
(
RangeError
function
(
)
{
Intl
.
getCanonicalLocales
(
invalidTag
)
}
"
Language
tag
:
"
+
invalidTag
)
;
}
reportCompare
(
0
0
)
;
