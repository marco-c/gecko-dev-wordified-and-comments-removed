testWithIntlConstructors
(
function
(
Constructor
)
{
var
info
=
getLocaleSupportInfo
(
Constructor
)
;
[
"
lookup
"
"
best
fit
"
]
.
forEach
(
function
(
matcher
)
{
var
supportedByConstructor
=
info
.
supported
.
concat
(
info
.
byFallback
)
;
var
supported
=
Constructor
.
supportedLocalesOf
(
supportedByConstructor
{
localeMatcher
:
matcher
}
)
;
var
i
=
0
;
var
limit
=
Math
.
min
(
supportedByConstructor
.
length
supported
.
length
)
;
while
(
i
<
limit
&
&
supportedByConstructor
[
i
]
=
=
=
supported
[
i
]
)
{
i
+
+
;
}
assert
.
sameValue
(
i
<
supportedByConstructor
.
length
false
"
Locale
"
+
supportedByConstructor
[
i
]
+
"
is
returned
by
resolvedOptions
but
not
by
supportedLocalesOf
.
"
)
;
assert
.
sameValue
(
i
<
supported
.
length
false
"
Locale
"
+
supported
[
i
]
+
"
is
returned
by
supportedLocalesOf
but
not
by
resolvedOptions
.
"
)
;
}
)
;
var
unsupportedByConstructor
=
info
.
unsupported
;
var
supported
=
Constructor
.
supportedLocalesOf
(
unsupportedByConstructor
{
localeMatcher
:
"
lookup
"
}
)
;
assert
.
sameValue
(
supported
.
length
>
0
false
"
Locale
"
+
supported
[
0
]
+
"
is
returned
by
supportedLocalesOf
but
not
by
resolvedOptions
.
"
)
;
}
)
;
reportCompare
(
0
0
)
;
