var
options
=
{
fallback
:
'
err
'
}
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
options
)
;
}
'
err
'
)
;
options
.
fallback
=
'
non
'
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
options
)
;
}
'
non
not
none
'
)
;
options
.
fallback
=
null
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
options
)
;
}
'
null
'
)
;
options
.
fallback
=
'
'
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
options
)
;
}
'
the
empty
string
'
)
;
options
.
fallback
=
[
'
code
'
'
none
'
]
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
options
)
;
}
'
an
array
with
the
valid
options
is
not
necessarily
valid
'
)
;
reportCompare
(
0
0
)
;
