assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
{
fallback
:
'
err
'
type
:
'
language
'
}
)
;
}
'
err
'
)
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
{
fallback
:
'
non
'
type
:
'
language
'
}
)
;
}
'
non
not
none
'
)
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
{
fallback
:
null
type
:
'
language
'
}
)
;
}
'
null
'
)
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
{
fallback
:
'
'
type
:
'
language
'
}
)
;
}
'
the
empty
string
'
)
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
DisplayNames
(
'
en
'
{
fallback
:
[
'
code
'
'
none
'
]
type
:
'
language
'
}
)
;
}
'
an
array
with
the
valid
options
is
not
necessarily
valid
'
)
;
reportCompare
(
0
0
)
;
