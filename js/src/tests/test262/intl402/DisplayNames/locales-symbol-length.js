var
calls
=
[
]
;
var
symbol
=
Symbol
(
)
;
Symbol
.
prototype
.
length
=
1
;
Object
.
defineProperty
(
Symbol
.
prototype
'
length
'
{
get
(
)
{
assert
.
notSameValue
(
this
symbol
'
this
is
an
object
from
given
symbol
'
)
;
assert
.
sameValue
(
this
.
valueOf
(
)
symbol
'
internal
value
is
the
symbol
'
)
;
assert
(
this
instanceof
Symbol
)
;
calls
.
push
(
'
length
'
)
;
return
1
;
}
}
)
;
Object
.
defineProperty
(
Symbol
.
prototype
'
0
'
{
get
(
)
{
assert
.
notSameValue
(
this
symbol
'
this
is
an
object
from
given
symbol
'
)
;
assert
.
sameValue
(
this
.
valueOf
(
)
symbol
'
internal
value
is
the
symbol
'
)
;
assert
(
this
instanceof
Symbol
)
;
calls
.
push
(
'
0
'
)
;
return
'
en
'
;
}
}
)
;
new
Intl
.
DisplayNames
(
symbol
)
;
assert
.
compareArray
(
calls
[
'
length
'
'
0
'
]
)
;
reportCompare
(
0
0
)
;
