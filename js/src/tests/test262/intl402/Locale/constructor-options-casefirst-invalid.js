const
invalidCaseFirstOptions
=
[
"
"
"
u
"
"
Upper
"
"
upper
\
0
"
"
uppercase
"
"
true
"
{
valueOf
(
)
{
return
false
;
}
}
]
;
for
(
const
caseFirst
of
invalidCaseFirstOptions
)
{
assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
Locale
(
"
en
"
{
caseFirst
}
)
;
}
new
Intl
.
Locale
(
"
en
"
{
caseFirst
:
"
{
caseFirst
}
"
}
)
throws
RangeError
)
;
}
reportCompare
(
0
0
)
;
