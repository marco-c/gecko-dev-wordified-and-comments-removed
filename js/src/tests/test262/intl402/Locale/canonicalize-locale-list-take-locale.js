const
tag
=
"
ar
"
;
const
tag2
=
"
fa
"
;
const
tag3
=
"
zh
"
;
const
loc
=
new
Intl
.
Locale
(
tag
)
;
class
PatchedLocale
extends
Intl
.
Locale
{
constructor
(
tag
options
)
{
super
(
tag
options
)
;
}
toString
(
)
{
assert
(
false
"
toString
should
not
be
called
"
)
}
}
const
ploc
=
new
PatchedLocale
(
tag2
)
;
let
res
=
Intl
.
getCanonicalLocales
(
loc
)
;
assert
.
sameValue
(
res
.
length
1
)
;
assert
.
sameValue
(
res
[
0
]
tag
)
;
res
=
Intl
.
getCanonicalLocales
(
ploc
)
;
assert
.
sameValue
(
res
.
length
1
)
;
assert
.
sameValue
(
res
[
0
]
tag2
)
;
res
=
Intl
.
getCanonicalLocales
(
[
loc
tag3
ploc
]
)
;
assert
.
sameValue
(
res
.
length
3
)
;
assert
.
sameValue
(
res
[
0
]
tag
)
;
assert
.
sameValue
(
res
[
1
]
tag3
)
;
assert
.
sameValue
(
res
[
2
]
tag2
)
;
reportCompare
(
0
0
)
;
