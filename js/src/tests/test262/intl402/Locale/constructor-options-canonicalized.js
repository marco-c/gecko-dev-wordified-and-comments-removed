const
keyValueTests
=
[
{
key
:
"
ca
"
option
:
"
calendar
"
tests
:
[
[
"
islamicc
"
"
islamic
-
civil
"
]
[
"
ethiopic
-
amete
-
alem
"
"
ethioaa
"
]
]
}
]
;
for
(
const
{
key
option
tests
}
of
keyValueTests
)
{
for
(
const
[
noncanonical
canonical
]
of
tests
)
{
let
canonicalInLocale
=
new
Intl
.
Locale
(
en
-
u
-
{
key
}
-
{
canonical
}
)
;
assert
.
sameValue
(
canonicalInLocale
[
option
]
canonical
new
Intl
.
Locale
(
"
en
-
u
-
{
key
}
-
{
canonical
}
"
)
.
{
option
}
returns
{
canonical
}
)
;
let
canonicalInOption
=
new
Intl
.
Locale
(
en
{
[
option
]
:
canonical
}
)
;
assert
.
sameValue
(
canonicalInOption
[
option
]
canonical
new
Intl
.
Locale
(
"
en
"
{
{
option
}
:
"
{
canonical
}
"
}
)
.
{
option
}
returns
{
canonical
}
)
;
let
noncanonicalInLocale
=
new
Intl
.
Locale
(
en
-
u
-
{
key
}
-
{
noncanonical
}
)
;
assert
.
sameValue
(
noncanonicalInLocale
[
option
]
canonical
new
Intl
.
Locale
(
"
en
-
u
-
{
key
}
-
{
noncanonical
}
"
)
.
{
option
}
returns
{
canonical
}
)
;
let
noncanonicalInOption
=
new
Intl
.
Locale
(
en
{
[
option
]
:
noncanonical
}
)
;
assert
.
sameValue
(
noncanonicalInOption
[
option
]
canonical
new
Intl
.
Locale
(
"
en
"
{
{
option
}
:
"
{
noncanonical
}
"
}
)
.
{
option
}
returns
{
canonical
}
)
;
}
}
reportCompare
(
0
0
)
;
