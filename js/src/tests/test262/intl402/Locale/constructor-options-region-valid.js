const
validRegionOptions
=
[
[
undefined
undefined
]
[
'
FR
'
'
en
-
FR
'
]
[
'
554
'
'
en
-
554
'
]
[
554
'
en
-
554
'
]
]
;
for
(
const
[
region
expected
]
of
validRegionOptions
)
{
let
options
=
{
region
}
;
let
expect
=
expected
|
|
'
en
'
;
assert
.
sameValue
(
new
Intl
.
Locale
(
'
en
'
options
)
.
toString
(
)
expect
new
Intl
.
Locale
(
'
en
'
{
region
:
"
{
region
}
"
}
)
.
toString
(
)
returns
"
{
expect
}
"
)
;
expect
=
expected
|
|
'
en
-
US
'
;
assert
.
sameValue
(
new
Intl
.
Locale
(
'
en
-
US
'
options
)
.
toString
(
)
expect
new
Intl
.
Locale
(
'
en
-
US
'
{
region
:
"
{
region
}
"
}
)
.
toString
(
)
returns
"
{
expect
}
"
)
;
expect
=
(
expected
|
|
'
en
'
)
+
'
-
u
-
ca
-
gregory
'
;
assert
.
sameValue
(
new
Intl
.
Locale
(
'
en
-
u
-
ca
-
gregory
'
options
)
.
toString
(
)
expect
new
Intl
.
Locale
(
'
en
-
u
-
ca
-
gregory
'
{
region
:
"
{
region
}
"
}
)
.
toString
(
)
returns
"
{
expect
}
"
)
;
expect
=
(
expected
|
|
'
en
-
US
'
)
+
'
-
u
-
ca
-
gregory
'
;
assert
.
sameValue
(
new
Intl
.
Locale
(
'
en
-
US
-
u
-
ca
-
gregory
'
options
)
.
toString
(
)
expect
new
Intl
.
Locale
(
'
en
-
US
-
u
-
ca
-
gregory
'
{
region
:
"
{
region
}
"
}
)
.
toString
(
)
returns
"
{
expect
}
"
)
;
}
reportCompare
(
0
0
)
;
