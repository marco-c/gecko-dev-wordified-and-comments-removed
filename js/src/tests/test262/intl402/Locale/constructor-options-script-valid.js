const
validScriptOptions
=
[
[
undefined
undefined
]
[
null
'
Null
'
]
[
'
bali
'
'
Bali
'
]
[
'
Bali
'
'
Bali
'
]
[
'
bALI
'
'
Bali
'
]
[
{
toString
(
)
{
return
'
Brai
'
}
}
'
Brai
'
]
]
;
for
(
const
[
script
expected
]
of
validScriptOptions
)
{
let
options
=
{
script
}
;
let
expect
=
expected
?
'
en
-
'
+
expected
:
'
en
'
;
assert
.
sameValue
(
new
Intl
.
Locale
(
'
en
'
options
)
.
toString
(
)
expect
new
Intl
.
Locale
(
'
en
'
options
)
.
toString
(
)
equals
the
value
of
{
expect
}
)
;
expect
=
(
expected
?
(
'
en
-
'
+
expected
)
:
'
en
'
)
+
'
-
DK
'
;
assert
.
sameValue
(
new
Intl
.
Locale
(
'
en
-
DK
'
options
)
.
toString
(
)
expect
new
Intl
.
Locale
(
'
en
'
options
)
.
toString
(
)
equals
the
value
of
{
expect
}
)
;
expect
=
expected
?
(
'
en
-
'
+
expected
)
:
'
en
-
Cyrl
'
;
assert
.
sameValue
(
new
Intl
.
Locale
(
'
en
-
Cyrl
'
options
)
.
toString
(
)
expect
new
Intl
.
Locale
(
'
en
-
Cyrl
'
options
)
.
toString
(
)
equals
the
value
of
{
expect
}
)
;
}
reportCompare
(
0
0
)
;
