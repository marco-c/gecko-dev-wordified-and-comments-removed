const
units
=
{
"
second
"
:
"
sec
.
"
"
minute
"
:
"
min
.
"
"
hour
"
:
"
hr
.
"
"
day
"
:
undefined
"
week
"
:
"
wk
.
"
"
month
"
:
"
mo
.
"
"
quarter
"
:
"
qtr
.
"
"
year
"
:
"
yr
.
"
}
;
const
rtf
=
new
Intl
.
RelativeTimeFormat
(
"
en
-
US
"
{
"
style
"
:
"
short
"
}
)
;
assert
.
sameValue
(
typeof
rtf
.
format
"
function
"
"
format
should
be
supported
"
)
;
for
(
const
[
unitArgument
unitString
]
of
Object
.
entries
(
units
)
)
{
const
singular
=
unitString
|
|
{
unitArgument
}
;
const
plural
=
unitString
|
|
{
unitArgument
}
s
;
assert
.
sameValue
(
rtf
.
format
(
1000
unitArgument
)
in
1
000
{
plural
}
)
;
assert
.
sameValue
(
rtf
.
format
(
10
unitArgument
)
in
10
{
plural
}
)
;
assert
.
sameValue
(
rtf
.
format
(
2
unitArgument
)
in
2
{
plural
}
)
;
assert
.
sameValue
(
rtf
.
format
(
1
unitArgument
)
in
1
{
singular
}
)
;
assert
.
sameValue
(
rtf
.
format
(
0
unitArgument
)
in
0
{
plural
}
)
;
assert
.
sameValue
(
rtf
.
format
(
-
0
unitArgument
)
0
{
plural
}
ago
)
;
assert
.
sameValue
(
rtf
.
format
(
-
1
unitArgument
)
1
{
singular
}
ago
)
;
assert
.
sameValue
(
rtf
.
format
(
-
2
unitArgument
)
2
{
plural
}
ago
)
;
assert
.
sameValue
(
rtf
.
format
(
-
10
unitArgument
)
10
{
plural
}
ago
)
;
assert
.
sameValue
(
rtf
.
format
(
-
1000
unitArgument
)
1
000
{
plural
}
ago
)
;
}
reportCompare
(
0
0
)
;
