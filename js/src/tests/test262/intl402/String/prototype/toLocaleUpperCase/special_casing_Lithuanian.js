assert
.
sameValue
(
"
I
\
u0307
"
.
toLocaleUpperCase
(
"
lt
"
)
"
I
\
u0307
"
"
COMBINING
DOT
ABOVE
preceded
by
LATIN
CAPITAL
LETTER
I
"
)
;
assert
.
sameValue
(
"
J
\
u0307
"
.
toLocaleUpperCase
(
"
lt
"
)
"
J
\
u0307
"
"
COMBINING
DOT
ABOVE
preceded
by
LATIN
CAPITAL
LETTER
J
"
)
;
var
softDotted
=
[
"
\
u0069
"
"
\
u006A
"
"
\
u012F
"
"
\
u0249
"
"
\
u0268
"
"
\
u029D
"
"
\
u02B2
"
"
\
u03F3
"
"
\
u0456
"
"
\
u0458
"
"
\
u1D62
"
"
\
u1D96
"
"
\
u1DA4
"
"
\
u1DA8
"
"
\
u1E2D
"
"
\
u1ECB
"
"
\
u2071
"
"
\
u2148
"
"
\
u2149
"
"
\
u2C7C
"
"
\
uD835
\
uDC22
"
"
\
uD835
\
uDC23
"
"
\
uD835
\
uDC56
"
"
\
uD835
\
uDC57
"
"
\
uD835
\
uDC8A
"
"
\
uD835
\
uDC8B
"
"
\
uD835
\
uDCBE
"
"
\
uD835
\
uDCBF
"
"
\
uD835
\
uDCF2
"
"
\
uD835
\
uDCF3
"
"
\
uD835
\
uDD26
"
"
\
uD835
\
uDD27
"
"
\
uD835
\
uDD5A
"
"
\
uD835
\
uDD5B
"
"
\
uD835
\
uDD8E
"
"
\
uD835
\
uDD8F
"
"
\
uD835
\
uDDC2
"
"
\
uD835
\
uDDC3
"
"
\
uD835
\
uDDF6
"
"
\
uD835
\
uDDF7
"
"
\
uD835
\
uDE2A
"
"
\
uD835
\
uDE2B
"
"
\
uD835
\
uDE5E
"
"
\
uD835
\
uDE5F
"
"
\
uD835
\
uDE92
"
"
\
uD835
\
uDE93
"
]
;
assert
.
sameValue
(
softDotted
.
length
46
"
Total
code
points
with
Soft_Dotted
property
"
)
;
function
charInfo
(
ch
)
{
function
hexString
(
n
)
{
var
s
=
n
.
toString
(
16
)
.
toUpperCase
(
)
;
return
"
0000
"
.
slice
(
s
.
length
)
+
s
;
}
if
(
ch
.
length
=
=
=
1
)
{
return
"
U
+
"
+
hexString
(
ch
.
charCodeAt
(
0
)
)
;
}
var
high
=
ch
.
charCodeAt
(
0
)
;
var
low
=
ch
.
charCodeAt
(
1
)
;
var
codePoint
=
(
(
high
<
<
10
)
+
low
)
+
(
0x10000
-
(
0xD800
<
<
10
)
-
0xDC00
)
;
return
"
U
+
"
+
hexString
(
codePoint
)
+
"
=
"
+
hexString
(
high
)
+
"
"
+
hexString
(
low
)
;
}
for
(
var
i
=
0
;
i
<
softDotted
.
length
;
+
+
i
)
{
assert
.
sameValue
(
(
softDotted
[
i
]
+
"
\
u0307
"
)
.
toLocaleUpperCase
(
"
lt
"
)
softDotted
[
i
]
.
toLocaleUpperCase
(
"
und
"
)
"
COMBINING
DOT
ABOVE
preceded
by
Soft_Dotted
(
"
+
charInfo
(
softDotted
[
i
]
)
+
"
)
"
)
;
}
for
(
var
i
=
0
;
i
<
softDotted
.
length
;
+
+
i
)
{
assert
.
sameValue
(
(
softDotted
[
i
]
+
"
\
u0323
\
u0307
"
)
.
toLocaleUpperCase
(
"
lt
"
)
softDotted
[
i
]
.
toLocaleUpperCase
(
"
und
"
)
+
"
\
u0323
"
"
COMBINING
DOT
ABOVE
preceded
by
Soft_Dotted
(
"
+
charInfo
(
softDotted
[
i
]
)
+
"
)
COMBINING
DOT
BELOW
"
)
;
}
for
(
var
i
=
0
;
i
<
softDotted
.
length
;
+
+
i
)
{
assert
.
sameValue
(
(
softDotted
[
i
]
+
"
\
uD800
\
uDDFD
\
u0307
"
)
.
toLocaleUpperCase
(
"
lt
"
)
softDotted
[
i
]
.
toLocaleUpperCase
(
"
und
"
)
+
"
\
uD800
\
uDDFD
"
"
COMBINING
DOT
ABOVE
preceded
by
Soft_Dotted
(
"
+
charInfo
(
softDotted
[
i
]
)
+
"
)
PHAISTOS
DISC
SIGN
COMBINING
OBLIQUE
STROKE
"
)
;
}
reportCompare
(
0
0
)
;
