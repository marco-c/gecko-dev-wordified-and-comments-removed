const
segmenter
=
new
Intl
.
Segmenter
(
)
;
const
input
=
"
ABC
"
;
const
segments
=
segmenter
.
segment
(
input
)
;
let
next_result
=
"
"
;
for
(
let
i
=
0
;
i
<
input
.
length
;
i
+
+
)
{
let
containing_result
=
segments
.
containing
(
i
)
;
let
msg
=
"
containing
(
"
+
i
+
"
)
before
the
loop
.
"
;
assert
.
sameValue
(
input
[
i
]
containing_result
.
segment
msg
+
"
segment
"
)
;
assert
.
sameValue
(
i
containing_result
.
index
msg
+
"
index
"
)
;
assert
.
sameValue
(
input
containing_result
.
input
msg
+
"
input
"
)
;
for
(
let
v
of
segments
)
{
next_result
+
=
v
.
segment
;
next_result
+
=
"
:
"
;
msg
=
"
containing
(
"
+
i
+
"
)
inside
the
loop
.
"
;
containing_result
=
segments
.
containing
(
i
)
;
assert
.
sameValue
(
input
[
i
]
containing_result
.
segment
msg
+
"
segment
"
)
;
assert
.
sameValue
(
i
containing_result
.
index
msg
+
"
index
"
)
;
assert
.
sameValue
(
input
containing_result
.
input
msg
+
"
input
"
)
;
}
}
assert
.
sameValue
(
"
A
:
B
:
C
:
A
:
B
:
C
:
A
:
B
:
C
:
"
next_result
)
;
reportCompare
(
0
0
)
;
