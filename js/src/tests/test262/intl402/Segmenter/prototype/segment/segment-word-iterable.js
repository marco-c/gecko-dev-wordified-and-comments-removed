const
seg
=
new
Intl
.
Segmenter
(
[
]
{
granularity
:
"
word
"
}
)
for
(
const
text
of
[
"
Hello
world
!
"
"
Hello
world
!
"
"
Hello
world
?
Foo
bar
!
"
"
Jedovatou
mambu
objevila
ena
v
zahr
dk
sk
kolonii
.
"
"
Vi
t
Nam
:
Nh
t
th
h
a
s
kh
c
Trung
Qu
c
?
"
"
"
"
-
400
"
"
"
"
:
.
.
"
"
400
"
"
;
!
"
"
'
'
"
"
P
pupu
"
"
"
"
(
2018
10
06
)
-
tenki
.
jp
"
"
MB
"
]
)
{
let
segments
=
[
]
;
let
iter
=
seg
.
segment
(
text
)
;
let
prev
=
0
;
for
(
const
v
of
seg
.
segment
(
text
)
)
{
assert
(
[
"
word
"
"
none
"
]
.
includes
(
v
.
breakType
)
v
.
breakType
)
;
assert
.
sameValue
(
"
string
"
typeof
v
.
segment
)
;
assert
(
v
.
segment
.
length
>
0
)
;
segments
.
push
(
v
.
segment
)
;
assert
.
sameValue
(
iter
.
following
(
)
false
)
;
assert
.
sameValue
(
iter
.
breakType
v
.
breakType
)
;
assert
.
sameValue
(
text
.
substring
(
prev
iter
.
index
)
v
.
segment
)
;
prev
=
iter
.
index
;
}
assert
(
iter
.
following
(
)
)
;
assert
.
sameValue
(
text
segments
.
join
(
'
'
)
)
;
}
reportCompare
(
0
0
)
;
