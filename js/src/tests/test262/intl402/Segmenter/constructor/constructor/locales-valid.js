const
defaultLocale
=
new
Intl
.
Segmenter
(
)
.
resolvedOptions
(
)
.
locale
;
const
tests
=
[
[
undefined
defaultLocale
"
undefined
"
]
[
"
EN
"
"
en
"
"
Single
value
"
]
[
[
]
defaultLocale
"
Empty
array
"
]
[
[
"
en
-
GB
-
oed
"
]
"
en
-
GB
"
"
Grandfathered
"
]
[
[
"
x
-
private
"
]
defaultLocale
"
Private
"
[
"
lookup
"
]
]
[
[
"
en
"
"
EN
"
]
"
en
"
"
Duplicate
value
(
canonical
first
)
"
]
[
[
"
EN
"
"
en
"
]
"
en
"
"
Duplicate
value
(
canonical
last
)
"
]
[
{
0
:
"
DE
"
length
:
0
}
defaultLocale
"
Object
with
zero
length
"
]
[
{
0
:
"
DE
"
length
:
1
}
"
de
"
"
Object
with
length
"
]
]
;
for
(
const
[
locales
expected
name
matchers
=
[
"
best
fit
"
"
lookup
"
]
]
of
tests
)
{
for
(
const
localeMatcher
of
matchers
)
{
const
segmenter
=
new
Intl
.
Segmenter
(
locales
{
localeMatcher
}
)
;
assert
.
sameValue
(
segmenter
.
resolvedOptions
(
)
.
locale
expected
name
)
;
}
}
reportCompare
(
0
0
)
;
