assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
DateTimeFormat
(
'
en
'
{
timeZoneName
:
'
'
}
)
;
}
'
empty
string
'
)
;
assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
DateTimeFormat
(
'
en
'
{
timeZoneName
:
'
short
'
}
)
;
}
'
"
short
"
'
)
;
assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
DateTimeFormat
(
'
en
'
{
timeZoneName
:
'
long
'
}
)
;
}
'
"
long
"
'
)
;
assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
DateTimeFormat
(
'
en
'
{
timeZoneName
:
'
offset
'
}
)
;
}
'
"
offset
"
'
)
;
assert
.
throws
(
RangeError
function
(
)
{
new
Intl
.
DateTimeFormat
(
'
en
'
{
timeZoneName
:
'
generic
'
}
)
;
}
'
"
generic
"
'
)
;
reportCompare
(
0
0
)
;
