let
formatRangeToParts
=
Intl
.
DateTimeFormat
.
prototype
.
formatRangeToParts
;
let
d1
=
new
Date
(
"
1997
-
08
-
22T00
:
00
"
)
;
let
d2
=
new
Date
(
"
1999
-
06
-
26T00
:
00
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
formatRangeToParts
.
call
(
undefined
d1
d2
)
;
}
"
undefined
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
formatRangeToParts
.
call
(
null
d1
d2
)
;
}
"
null
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
formatRangeToParts
.
call
(
42
d1
d2
)
;
}
"
number
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
formatRangeToParts
.
call
(
"
foo
"
d1
d2
)
;
}
"
string
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
formatRangeToParts
.
call
(
false
d1
d2
)
;
}
"
false
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
formatRangeToParts
.
call
(
true
d1
d2
)
;
}
"
true
"
)
;
var
s
=
Symbol
(
'
3
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
formatRangeToParts
.
call
(
s
d1
d2
)
;
}
"
symbol
"
)
;
reportCompare
(
0
0
)
;
