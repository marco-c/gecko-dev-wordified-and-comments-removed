var
dtf
=
new
Intl
.
DateTimeFormat
(
)
;
var
date
=
new
Date
(
)
;
assert
.
throws
(
RangeError
function
(
)
{
dtf
.
formatRangeToParts
(
Infinity
date
)
;
}
"
+
Infinity
/
date
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
dtf
.
formatRangeToParts
(
-
Infinity
date
)
;
}
"
-
Infinity
/
date
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
dtf
.
formatRangeToParts
(
date
Infinity
)
;
}
"
date
/
+
Infinity
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
dtf
.
formatRangeToParts
(
date
-
Infinity
)
;
}
"
date
/
-
Infinity
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
dtf
.
formatRangeToParts
(
Infinity
Infinity
)
;
}
"
+
Infinity
/
+
Infinity
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
dtf
.
formatRangeToParts
(
-
Infinity
-
Infinity
)
;
}
"
-
Infinity
/
-
Infinity
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
dtf
.
formatRangeToParts
(
Infinity
-
Infinity
)
;
}
"
+
Infinity
/
-
Infinity
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
dtf
.
formatRangeToParts
(
-
Infinity
Infinity
)
;
}
"
-
Infinity
/
+
Infinity
"
)
;
reportCompare
(
0
0
)
;
