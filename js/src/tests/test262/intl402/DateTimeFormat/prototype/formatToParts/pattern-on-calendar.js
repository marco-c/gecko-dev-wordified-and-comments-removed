let
calendars
=
[
"
buddhist
"
"
chinese
"
"
coptic
"
"
dangi
"
"
ethiopic
"
"
ethioaa
"
"
gregory
"
"
hebrew
"
"
indian
"
"
islamic
"
"
islamic
-
civil
"
"
islamic
-
rgsa
"
"
islamic
-
tbla
"
"
islamic
-
umalqura
"
"
japanese
"
"
persian
"
"
roc
"
]
;
let
date
=
new
Date
(
)
;
function
serializeTypesAndLiteral
(
parts
)
{
let
types
=
parts
.
map
(
part
=
>
{
if
(
part
.
type
=
=
"
literal
"
)
{
return
{
part
.
type
}
(
{
part
.
value
}
)
;
}
return
part
.
type
;
}
)
;
return
types
.
join
(
"
:
"
)
;
}
let
df
=
new
Intl
.
DateTimeFormat
(
"
en
"
)
;
let
base
=
serializeTypesAndLiteral
(
df
.
formatToParts
(
date
)
)
;
const
foundDifferentPattern
=
calendars
.
some
(
function
(
calendar
)
{
let
cdf
=
new
Intl
.
DateTimeFormat
(
"
en
-
u
-
ca
-
"
+
calendar
)
;
return
base
!
=
serializeTypesAndLiteral
(
cdf
.
formatToParts
(
date
)
)
;
}
)
;
assert
.
sameValue
(
foundDifferentPattern
true
)
;
reportCompare
(
0
0
)
;
