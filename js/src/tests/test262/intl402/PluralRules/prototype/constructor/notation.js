const
validValues
=
[
"
standard
"
"
compact
"
"
scientific
"
"
engineering
"
new
String
(
"
standard
"
)
new
String
(
"
compact
"
)
new
String
(
"
scientific
"
)
new
String
(
"
engineering
"
)
]
;
const
invalidValues
=
[
"
COMPACT
"
"
st
ndard
"
123
false
Symbol
(
"
foo
"
)
null
{
}
[
]
"
"
]
;
for
(
const
value
of
validValues
)
{
const
pr
=
new
Intl
.
PluralRules
(
"
en
"
{
notation
:
value
}
)
;
assert
(
pr
.
resolvedOptions
(
)
.
notation
=
=
=
value
Resolved
options
should
have
notation
{
value
}
)
;
}
for
(
const
value
of
invalidValues
)
{
assert
.
throws
(
RangeError
(
)
=
>
{
new
Intl
.
PluralRules
(
"
en
"
{
notation
:
value
}
)
;
}
Exception
should
be
thrown
for
{
value
}
)
;
}
reportCompare
(
0
0
)
;
