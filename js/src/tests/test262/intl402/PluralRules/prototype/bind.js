var
functions
=
{
select
:
Intl
.
PluralRules
.
prototype
.
select
resolvedOptions
:
Intl
.
PluralRules
.
prototype
.
resolvedOptions
}
;
var
invalidTargets
=
[
undefined
null
true
0
"
PluralRules
"
[
]
{
}
]
;
Object
.
getOwnPropertyNames
(
functions
)
.
forEach
(
function
(
functionName
)
{
var
f
=
functions
[
functionName
]
;
invalidTargets
.
forEach
(
function
(
target
)
{
var
error
;
try
{
f
.
call
(
target
)
;
}
catch
(
e
)
{
error
=
e
;
}
if
(
error
=
=
=
undefined
)
{
ERROR
(
"
Calling
"
+
functionName
+
"
on
"
+
target
+
"
was
not
rejected
.
"
)
;
}
else
if
(
error
.
name
!
=
=
"
TypeError
"
)
{
ERROR
(
"
Calling
"
+
functionName
+
"
on
"
+
target
+
"
was
rejected
with
wrong
error
"
+
error
.
name
+
"
.
"
)
;
}
}
)
;
}
)
;
reportCompare
(
0
0
)
;
