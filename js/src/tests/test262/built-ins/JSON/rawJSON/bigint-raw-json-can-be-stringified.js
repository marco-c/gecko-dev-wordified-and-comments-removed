const
tooBigForNumber
=
BigInt
(
Number
.
MAX_SAFE_INTEGER
)
+
2n
;
const
intToBigInt
=
(
key
val
{
source
}
)
=
>
typeof
val
=
=
=
'
number
'
&
&
val
%
1
=
=
=
0
?
BigInt
(
source
)
:
val
;
const
roundTripped
=
JSON
.
parse
(
String
(
tooBigForNumber
)
intToBigInt
)
;
assert
.
sameValue
(
roundTripped
tooBigForNumber
)
;
const
bigIntToRawJSON
=
(
key
val
)
=
>
typeof
val
=
=
=
'
bigint
'
?
JSON
.
rawJSON
(
val
)
:
val
;
const
embedded
=
JSON
.
stringify
(
{
tooBigForNumber
}
bigIntToRawJSON
)
;
assert
.
sameValue
(
embedded
'
{
"
tooBigForNumber
"
:
9007199254740993
}
'
)
;
reportCompare
(
0
0
)
;
