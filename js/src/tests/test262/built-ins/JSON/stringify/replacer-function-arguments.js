var
calls
=
[
]
;
var
replacer
=
function
(
key
value
)
{
if
(
key
!
=
=
'
'
)
{
calls
.
push
(
[
this
key
value
]
)
;
}
return
value
;
}
;
var
b1
=
[
1
2
]
;
var
b2
=
{
c1
:
true
c2
:
false
}
;
var
a1
=
{
b1
:
b1
b2
:
{
toJSON
:
function
(
)
{
return
b2
;
}
}
}
;
var
obj
=
{
a1
:
a1
a2
:
'
a2
'
}
;
assert
.
sameValue
(
JSON
.
stringify
(
obj
replacer
)
JSON
.
stringify
(
obj
)
)
;
assert
.
compareArray
(
calls
[
0
]
[
obj
'
a1
'
a1
]
)
;
assert
.
compareArray
(
calls
[
1
]
[
a1
'
b1
'
b1
]
)
;
assert
.
compareArray
(
calls
[
2
]
[
b1
'
0
'
1
]
)
;
assert
.
compareArray
(
calls
[
3
]
[
b1
'
1
'
2
]
)
;
assert
.
compareArray
(
calls
[
4
]
[
a1
'
b2
'
b2
]
)
;
assert
.
compareArray
(
calls
[
5
]
[
b2
'
c1
'
true
]
)
;
assert
.
compareArray
(
calls
[
6
]
[
b2
'
c2
'
false
]
)
;
assert
.
compareArray
(
calls
[
7
]
[
obj
'
a2
'
'
a2
'
]
)
;
reportCompare
(
0
0
)
;
