var
original
=
{
}
;
var
replacement
=
{
}
;
var
p
=
Promise
.
reject
(
original
)
;
p
.
finally
(
function
(
)
{
assert
.
sameValue
(
arguments
.
length
0
'
onFinally
receives
zero
args
'
)
;
return
replacement
;
}
)
.
then
(
function
(
)
{
ERROR
(
'
promise
is
rejected
pre
-
finally
;
onFulfill
should
not
be
called
'
)
;
}
)
.
catch
(
function
(
reason
)
{
assert
.
sameValue
(
reason
original
'
onFinally
can
not
override
the
rejection
value
by
returning
'
)
;
}
)
.
then
(
DONE
)
.
catch
(
ERROR
)
;
