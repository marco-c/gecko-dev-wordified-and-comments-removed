var
symbol
=
Symbol
(
)
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
prototype
.
catch
.
call
(
{
}
)
;
}
'
undefined
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
prototype
.
catch
.
call
(
{
then
:
null
}
)
;
}
'
null
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
prototype
.
catch
.
call
(
{
then
:
1
}
)
;
}
'
number
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
prototype
.
catch
.
call
(
{
then
:
'
'
}
)
;
}
'
string
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
prototype
.
catch
.
call
(
{
then
:
true
}
)
;
}
'
boolean
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
prototype
.
catch
.
call
(
{
then
:
symbol
}
)
;
}
'
symbol
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
prototype
.
catch
.
call
(
{
then
:
{
}
}
)
;
}
'
ordinary
object
'
)
;
reportCompare
(
0
0
)
;
