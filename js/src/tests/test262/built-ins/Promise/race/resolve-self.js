var
self
resolve
;
var
builtinResolve
=
Promise
.
resolve
;
var
thenable
=
{
then
:
function
(
r
)
{
resolve
=
r
;
}
}
;
try
{
Promise
.
resolve
=
function
(
v
)
{
return
v
;
}
;
self
=
Promise
.
race
(
[
thenable
]
)
;
}
finally
{
Promise
.
resolve
=
builtinResolve
;
}
resolve
(
self
)
;
self
.
then
(
function
(
)
{
DONE
(
'
The
promise
should
not
be
fulfilled
.
'
)
;
}
function
(
value
)
{
if
(
!
value
)
{
DONE
(
'
The
promise
should
be
rejected
with
a
value
.
'
)
;
return
;
}
if
(
value
.
constructor
!
=
=
TypeError
)
{
DONE
(
'
The
promise
should
be
rejected
with
a
TypeError
instance
.
'
)
;
return
;
}
DONE
(
)
;
}
)
;
