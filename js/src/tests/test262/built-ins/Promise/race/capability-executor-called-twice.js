var
checkPoint
=
"
"
;
Promise
.
race
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
)
;
checkPoint
+
=
"
b
"
;
executor
(
function
(
)
{
}
function
(
)
{
}
)
;
checkPoint
+
=
"
c
"
;
}
[
]
)
;
assert
.
sameValue
(
checkPoint
"
abc
"
"
executor
initially
called
with
no
arguments
"
)
;
var
checkPoint
=
"
"
;
Promise
.
race
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
undefined
undefined
)
;
checkPoint
+
=
"
b
"
;
executor
(
function
(
)
{
}
function
(
)
{
}
)
;
checkPoint
+
=
"
c
"
;
}
[
]
)
;
assert
.
sameValue
(
checkPoint
"
abc
"
"
executor
initially
called
with
(
undefined
undefined
)
"
)
;
var
checkPoint
=
"
"
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
race
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
undefined
function
(
)
{
}
)
;
checkPoint
+
=
"
b
"
;
executor
(
function
(
)
{
}
function
(
)
{
}
)
;
checkPoint
+
=
"
c
"
;
}
[
]
)
;
}
"
executor
initially
called
with
(
undefined
function
)
"
)
;
assert
.
sameValue
(
checkPoint
"
ab
"
"
executor
initially
called
with
(
undefined
function
)
"
)
;
var
checkPoint
=
"
"
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
race
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
function
(
)
{
}
undefined
)
;
checkPoint
+
=
"
b
"
;
executor
(
function
(
)
{
}
function
(
)
{
}
)
;
checkPoint
+
=
"
c
"
;
}
[
]
)
;
}
"
executor
initially
called
with
(
function
undefined
)
"
)
;
assert
.
sameValue
(
checkPoint
"
ab
"
"
executor
initially
called
with
(
function
undefined
)
"
)
;
var
checkPoint
=
"
"
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
race
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
"
invalid
value
"
123
)
;
checkPoint
+
=
"
b
"
;
executor
(
function
(
)
{
}
function
(
)
{
}
)
;
checkPoint
+
=
"
c
"
;
}
[
]
)
;
}
"
executor
initially
called
with
(
String
Number
)
"
)
;
assert
.
sameValue
(
checkPoint
"
ab
"
"
executor
initially
called
with
(
String
Number
)
"
)
;
reportCompare
(
0
0
)
;
