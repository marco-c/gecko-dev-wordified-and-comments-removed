var
checkPoint
=
"
"
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
all
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
}
[
]
)
;
}
"
executor
not
called
at
all
"
)
;
assert
.
sameValue
(
checkPoint
"
a
"
"
executor
not
called
at
all
"
)
;
var
checkPoint
=
"
"
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
all
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
)
;
checkPoint
+
=
"
b
"
;
}
[
]
)
;
}
"
executor
called
with
no
arguments
"
)
;
assert
.
sameValue
(
checkPoint
"
ab
"
"
executor
called
with
no
arguments
"
)
;
var
checkPoint
=
"
"
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
all
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
undefined
undefined
)
;
checkPoint
+
=
"
b
"
;
}
[
]
)
;
}
"
executor
called
with
(
undefined
undefined
)
"
)
;
assert
.
sameValue
(
checkPoint
"
ab
"
"
executor
called
with
(
undefined
undefined
)
"
)
;
var
checkPoint
=
"
"
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
all
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
undefined
function
(
)
{
}
)
;
checkPoint
+
=
"
b
"
;
}
[
]
)
;
}
"
executor
called
with
(
undefined
function
)
"
)
;
assert
.
sameValue
(
checkPoint
"
ab
"
"
executor
called
with
(
undefined
function
)
"
)
;
var
checkPoint
=
"
"
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
all
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
function
(
)
{
}
undefined
)
;
checkPoint
+
=
"
b
"
;
}
[
]
)
;
}
"
executor
called
with
(
function
undefined
)
"
)
;
assert
.
sameValue
(
checkPoint
"
ab
"
"
executor
called
with
(
function
undefined
)
"
)
;
var
checkPoint
=
"
"
;
assert
.
throws
(
TypeError
function
(
)
{
Promise
.
all
.
call
(
function
(
executor
)
{
checkPoint
+
=
"
a
"
;
executor
(
123
"
invalid
value
"
)
;
checkPoint
+
=
"
b
"
;
}
[
]
)
;
}
"
executor
called
with
(
Number
String
)
"
)
;
assert
.
sameValue
(
checkPoint
"
ab
"
"
executor
called
with
(
Number
String
)
"
)
;
reportCompare
(
0
0
)
;
