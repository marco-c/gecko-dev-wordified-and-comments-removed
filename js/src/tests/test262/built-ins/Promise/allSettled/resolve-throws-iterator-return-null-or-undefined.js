function
resolve
(
)
{
throw
new
Test262Error
(
"
Unexpected
call
to
resolve
"
)
;
}
var
rejectCallCount
=
0
;
function
reject
(
e
)
{
rejectCallCount
+
=
1
;
assert
.
sameValue
(
e
"
bad
promise
resolve
"
)
;
}
class
BadPromise
{
constructor
(
executor
)
{
executor
(
resolve
reject
)
;
}
static
resolve
(
)
{
throw
"
bad
promise
resolve
"
;
}
}
for
(
var
returnMethod
of
[
null
undefined
]
)
{
var
iterator
=
{
[
Symbol
.
iterator
]
(
)
{
return
this
;
}
next
(
)
{
return
{
done
:
false
}
;
}
return
:
returnMethod
}
;
rejectCallCount
=
0
;
Promise
.
allSettled
.
call
(
BadPromise
iterator
)
;
assert
.
sameValue
(
rejectCallCount
1
)
;
}
reportCompare
(
0
0
)
;
