let
rejectCallCount
=
0
;
let
returnValue
=
{
}
;
let
error
=
new
Test262Error
(
)
;
function
Constructor
(
executor
)
{
function
reject
(
value
)
{
assert
.
sameValue
(
value
error
)
;
rejectCallCount
+
=
1
;
return
returnValue
;
}
executor
(
(
)
=
>
{
throw
error
}
reject
)
;
}
Constructor
.
resolve
=
function
(
v
)
{
return
v
;
}
;
Constructor
.
reject
=
function
(
v
)
{
return
v
;
}
;
let
pOnRejected
;
let
p
=
{
then
(
onResolved
onRejected
)
{
pOnRejected
=
onRejected
;
onResolved
(
)
;
}
}
;
assert
.
sameValue
(
rejectCallCount
0
'
rejectCallCount
before
call
to
allSettled
(
)
'
)
;
Promise
.
allSettled
.
call
(
Constructor
[
p
]
)
;
assert
.
sameValue
(
rejectCallCount
1
'
rejectCallCount
after
call
to
allSettled
(
)
'
)
;
assert
.
sameValue
(
pOnRejected
(
)
undefined
)
;
assert
.
sameValue
(
rejectCallCount
1
'
rejectCallCount
after
call
to
pOnRejected
(
)
'
)
;
pOnRejected
(
)
;
assert
.
sameValue
(
rejectCallCount
1
'
rejectCallCount
after
call
to
pOnRejected
(
)
'
)
;
reportCompare
(
0
0
)
;
