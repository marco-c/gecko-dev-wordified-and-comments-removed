let
returnCount
=
0
;
let
poisonedDone
=
{
}
;
let
error
=
new
Test262Error
(
)
;
Object
.
defineProperties
(
poisonedDone
{
done
:
{
get
(
)
{
throw
error
;
}
}
value
:
{
get
(
)
{
}
}
}
)
;
let
iterStepThrows
=
{
[
Symbol
.
iterator
]
(
)
{
return
{
next
(
)
{
return
poisonedDone
;
}
return
(
)
{
returnCount
+
=
1
;
return
{
}
;
}
}
;
}
}
;
Promise
.
any
(
iterStepThrows
)
.
then
(
(
)
=
>
{
DONE
(
'
The
promise
should
be
rejected
.
'
)
;
}
(
reason
)
=
>
{
assert
.
sameValue
(
reason
error
)
;
assert
.
sameValue
(
returnCount
0
)
;
}
)
.
then
(
DONE
DONE
)
;
