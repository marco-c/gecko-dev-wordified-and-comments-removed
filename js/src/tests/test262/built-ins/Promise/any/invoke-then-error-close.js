let
error
=
new
Test262Error
(
)
;
let
promise
=
Promise
.
resolve
(
)
;
let
returnCount
=
0
;
let
iter
=
{
[
Symbol
.
iterator
]
(
)
{
return
{
next
(
)
{
return
{
done
:
false
value
:
promise
}
;
}
return
(
)
{
returnCount
+
=
1
;
return
{
}
;
}
}
;
}
}
;
promise
.
then
=
function
(
)
{
throw
error
;
}
;
Promise
.
any
(
iter
)
.
then
(
(
)
=
>
{
DONE
(
'
The
promise
should
be
rejected
but
was
resolved
'
)
;
}
(
reason
)
=
>
{
assert
.
sameValue
(
returnCount
1
)
;
assert
.
sameValue
(
reason
error
)
;
}
)
.
then
(
DONE
DONE
)
;
