let
promises
=
[
Promise
.
resolve
(
)
Promise
.
resolve
(
)
Promise
.
resolve
(
)
]
;
let
callCount
=
0
;
promises
.
forEach
(
promise
=
>
{
let
boundThen
=
promise
.
then
.
bind
(
promise
)
;
promise
.
then
=
function
(
.
.
.
args
)
{
assert
.
sameValue
(
this
promises
[
callCount
]
)
;
callCount
+
=
1
;
return
boundThen
(
.
.
.
args
)
;
}
;
}
)
;
Promise
.
any
(
promises
)
.
then
(
(
)
=
>
{
assert
.
sameValue
(
callCount
3
'
then
invoked
once
for
every
iterated
value
'
)
;
}
)
.
then
(
DONE
DONE
)
;
