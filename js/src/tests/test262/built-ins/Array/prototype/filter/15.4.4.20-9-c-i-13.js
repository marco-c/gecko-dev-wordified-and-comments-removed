function
callbackfn
(
val
idx
obj
)
{
return
idx
=
=
=
1
&
&
val
=
=
=
12
;
}
var
proto
=
{
}
;
Object
.
defineProperty
(
proto
"
1
"
{
get
:
function
(
)
{
return
6
;
}
configurable
:
true
}
)
;
var
Con
=
function
(
)
{
}
;
Con
.
prototype
=
proto
;
var
child
=
new
Con
(
)
;
child
.
length
=
10
;
Object
.
defineProperty
(
child
"
1
"
{
get
:
function
(
)
{
return
12
;
}
configurable
:
true
}
)
;
var
newArr
=
Array
.
prototype
.
filter
.
call
(
child
callbackfn
)
;
assert
.
sameValue
(
newArr
.
length
1
'
newArr
.
length
'
)
;
assert
.
sameValue
(
newArr
[
0
]
12
'
newArr
[
0
]
'
)
;
reportCompare
(
0
0
)
;
