var
obj
=
{
}
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
length
=
NaN
;
var
shift
=
obj
.
shift
(
)
;
if
(
shift
!
=
=
undefined
)
{
ERROR
(
'
#
1
:
var
obj
=
{
}
;
obj
.
length
=
NaN
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
=
=
=
undefined
.
Actual
:
'
+
(
shift
)
)
;
}
if
(
obj
.
length
!
=
=
0
)
{
ERROR
(
'
#
2
:
var
obj
=
{
}
;
obj
.
length
=
NaN
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
;
obj
.
length
=
=
=
0
.
Actual
:
'
+
(
obj
.
length
)
)
;
}
obj
.
length
=
Number
.
NEGATIVE_INFINITY
;
var
shift
=
obj
.
shift
(
)
;
if
(
shift
!
=
=
undefined
)
{
ERROR
(
'
#
5
:
var
obj
=
{
}
;
obj
.
length
=
Number
.
NEGATIVE_INFINITY
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
=
=
=
undefined
.
Actual
:
'
+
(
shift
)
)
;
}
if
(
obj
.
length
!
=
=
0
)
{
ERROR
(
'
#
6
:
var
obj
=
{
}
;
obj
.
length
=
Number
.
NEGATIVE_INFINITY
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
;
obj
.
length
=
=
=
0
.
Actual
:
'
+
(
obj
.
length
)
)
;
}
obj
.
length
=
-
0
;
var
shift
=
obj
.
shift
(
)
;
if
(
shift
!
=
=
undefined
)
{
ERROR
(
'
#
7
:
var
obj
=
{
}
;
obj
.
length
=
-
0
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
=
=
=
undefined
.
Actual
:
'
+
(
shift
)
)
;
}
if
(
obj
.
length
!
=
=
0
)
{
ERROR
(
'
#
8
:
var
obj
=
{
}
;
obj
.
length
=
-
0
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
;
obj
.
length
=
=
=
0
.
Actual
:
'
+
(
obj
.
length
)
)
;
}
else
{
if
(
1
/
obj
.
length
!
=
=
Number
.
POSITIVE_INFINITY
)
{
ERROR
(
'
#
8
:
var
obj
=
{
}
;
obj
.
length
=
-
0
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
;
obj
.
length
=
=
=
+
0
.
Actual
:
'
+
(
obj
.
length
)
)
;
}
}
obj
.
length
=
0
.
5
;
var
shift
=
obj
.
shift
(
)
;
if
(
shift
!
=
=
undefined
)
{
ERROR
(
'
#
9
:
var
obj
=
{
}
;
obj
.
length
=
0
.
5
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
=
=
=
undefined
.
Actual
:
'
+
(
shift
)
)
;
}
if
(
obj
.
length
!
=
=
0
)
{
ERROR
(
'
#
10
:
var
obj
=
{
}
;
obj
.
length
=
0
.
5
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
;
obj
.
length
=
=
=
0
.
Actual
:
'
+
(
obj
.
length
)
)
;
}
obj
.
length
=
new
Number
(
0
)
;
var
shift
=
obj
.
shift
(
)
;
if
(
shift
!
=
=
undefined
)
{
ERROR
(
'
#
11
:
var
obj
=
{
}
;
obj
.
length
=
new
Number
(
0
)
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
=
=
=
undefined
.
Actual
:
'
+
(
shift
)
)
;
}
if
(
obj
.
length
!
=
=
0
)
{
ERROR
(
'
#
12
:
var
obj
=
{
}
;
obj
.
length
=
new
Number
(
0
)
;
obj
.
shift
=
Array
.
prototype
.
shift
;
obj
.
shift
(
)
;
obj
.
length
=
=
=
0
.
Actual
:
'
+
(
obj
.
length
)
)
;
}
reportCompare
(
0
0
)
;
