var
a
=
[
1
[
2
]
]
;
var
expected
=
a
;
var
depthNum
=
'
TestString
'
;
var
actual
=
a
.
flat
(
depthNum
)
;
assert
(
compareArray
(
actual
expected
)
'
non
integral
string
depthNum
'
)
;
depthNum
=
{
}
;
actual
=
a
.
flat
(
depthNum
)
;
assert
(
compareArray
(
actual
expected
)
'
object
type
depthNum
'
)
;
depthNum
=
Number
.
NEGATIVE_INFINITY
;
actual
=
a
.
flat
(
depthNum
)
;
assert
(
compareArray
(
actual
expected
)
'
negative
infinity
depthNum
'
)
;
depthNum
=
+
0
;
actual
=
a
.
flat
(
depthNum
)
;
assert
(
compareArray
(
actual
expected
)
'
positive
zero
depthNum
'
)
;
depthNum
=
-
0
;
actual
=
a
.
flat
(
depthNum
)
;
assert
(
compareArray
(
actual
expected
)
'
negative
zero
depthNum
'
)
;
depthNum
=
'
1
'
;
actual
=
a
.
flat
(
depthNum
)
;
expected
=
[
1
2
]
assert
(
compareArray
(
actual
expected
)
'
integral
string
depthNum
'
)
;
reportCompare
(
0
0
)
;
