function
callbackfn
(
val
idx
obj
)
{
return
val
<
10
;
}
var
valueOfAccessed
=
false
;
var
toStringAccessed
=
false
;
var
proto
=
{
valueOf
:
function
(
)
{
valueOfAccessed
=
true
;
return
2
;
}
}
;
var
Con
=
function
(
)
{
}
;
Con
.
prototype
=
proto
;
var
child
=
new
Con
(
)
;
child
.
toString
=
function
(
)
{
toStringAccessed
=
true
;
return
'
1
'
;
}
;
var
obj
=
{
0
:
11
1
:
9
length
:
child
}
;
var
newArr
=
Array
.
prototype
.
map
.
call
(
obj
callbackfn
)
;
assert
.
sameValue
(
newArr
.
length
2
'
newArr
.
length
'
)
;
assert
(
valueOfAccessed
'
valueOfAccessed
!
=
=
true
'
)
;
assert
.
sameValue
(
toStringAccessed
false
'
toStringAccessed
'
)
;
reportCompare
(
0
0
)
;
