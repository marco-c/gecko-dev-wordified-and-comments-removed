var
kValue
=
"
abc
"
;
function
callbackfn
(
val
idx
obj
)
{
if
(
idx
=
=
=
5
)
{
return
val
=
=
=
kValue
;
}
return
false
;
}
var
proto
=
{
}
;
Object
.
defineProperty
(
proto
"
5
"
{
get
:
function
(
)
{
return
11
;
}
configurable
:
true
}
)
;
var
Con
=
function
(
)
{
}
;
Con
.
prototype
=
proto
;
var
child
=
new
Con
(
)
;
child
.
length
=
10
;
Object
.
defineProperty
(
child
"
5
"
{
value
:
kValue
configurable
:
true
}
)
;
var
testResult
=
Array
.
prototype
.
map
.
call
(
child
callbackfn
)
;
assert
.
sameValue
(
testResult
[
5
]
true
'
testResult
[
5
]
'
)
;
reportCompare
(
0
0
)
;
