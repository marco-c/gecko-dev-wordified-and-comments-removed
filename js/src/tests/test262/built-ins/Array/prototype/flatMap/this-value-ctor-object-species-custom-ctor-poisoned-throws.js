assert
.
sameValue
(
typeof
Array
.
prototype
.
flatMap
'
function
'
)
;
var
arr
=
[
]
;
var
mapperFn
=
function
(
e
)
{
return
e
;
}
;
var
called
=
0
;
var
ctorCalled
=
0
;
function
ctor
(
len
)
{
assert
.
sameValue
(
new
.
target
ctor
'
new
target
is
defined
'
)
;
assert
.
sameValue
(
len
0
'
first
argument
is
always
0
'
)
;
ctorCalled
+
+
;
throw
new
Test262Error
(
)
;
}
arr
.
constructor
=
{
get
[
Symbol
.
species
]
(
)
{
called
+
+
;
return
ctor
;
}
}
;
assert
.
throws
(
Test262Error
function
(
)
{
arr
.
flatMap
(
mapperFn
)
;
}
'
Return
abrupt
completion
from
species
custom
ctor
'
)
;
assert
.
sameValue
(
called
1
'
got
species
once
'
)
;
assert
.
sameValue
(
ctorCalled
1
'
called
custom
ctor
once
'
)
;
reportCompare
(
0
0
)
;
