assert
.
sameValue
(
typeof
Array
.
prototype
.
flatMap
"
function
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
[
]
.
flatMap
(
{
}
)
;
}
'
non
callable
argument
object
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
[
]
.
flatMap
(
0
)
;
}
'
non
callable
argument
number
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
[
]
.
flatMap
(
)
;
}
'
non
callable
argument
implict
undefined
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
[
]
.
flatMap
(
undefined
)
;
}
'
non
callable
argument
undefined
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
[
]
.
flatMap
(
null
)
;
}
'
non
callable
argument
null
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
[
]
.
flatMap
(
false
)
;
}
'
non
callable
argument
boolean
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
[
]
.
flatMap
(
'
'
)
;
}
'
non
callable
argument
string
'
)
;
var
s
=
Symbol
(
)
;
assert
.
throws
(
TypeError
function
(
)
{
[
]
.
flatMap
(
s
)
;
}
'
non
callable
argument
symbol
'
)
;
reportCompare
(
0
0
)
;
