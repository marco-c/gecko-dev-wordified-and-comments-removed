for
(
let
ctor
of
ctors
)
{
const
rab
=
CreateRabForTest
(
ctor
)
;
const
fixedLength
=
new
ctor
(
rab
0
4
)
;
TestIterationAndResize
(
Array
.
prototype
.
keys
.
call
(
fixedLength
)
[
0
1
2
3
]
rab
2
6
*
ctor
.
BYTES_PER_ELEMENT
)
;
}
for
(
let
ctor
of
ctors
)
{
const
rab
=
CreateRabForTest
(
ctor
)
;
const
fixedLengthWithOffset
=
new
ctor
(
rab
2
*
ctor
.
BYTES_PER_ELEMENT
2
)
;
TestIterationAndResize
(
Array
.
prototype
.
keys
.
call
(
fixedLengthWithOffset
)
[
0
1
]
rab
2
6
*
ctor
.
BYTES_PER_ELEMENT
)
;
}
for
(
let
ctor
of
ctors
)
{
const
rab
=
CreateRabForTest
(
ctor
)
;
const
lengthTracking
=
new
ctor
(
rab
0
)
;
TestIterationAndResize
(
Array
.
prototype
.
keys
.
call
(
lengthTracking
)
[
0
1
2
3
4
5
]
rab
2
6
*
ctor
.
BYTES_PER_ELEMENT
)
;
}
for
(
let
ctor
of
ctors
)
{
const
rab
=
CreateRabForTest
(
ctor
)
;
const
lengthTrackingWithOffset
=
new
ctor
(
rab
2
*
ctor
.
BYTES_PER_ELEMENT
)
;
TestIterationAndResize
(
Array
.
prototype
.
keys
.
call
(
lengthTrackingWithOffset
)
[
0
1
2
3
]
rab
2
6
*
ctor
.
BYTES_PER_ELEMENT
)
;
}
reportCompare
(
0
0
)
;
