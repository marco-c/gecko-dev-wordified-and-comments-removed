asyncTest
(
async
function
(
)
{
function
MyArray
(
)
{
Object
.
defineProperty
(
this
0
{
enumerable
:
true
writable
:
true
configurable
:
false
value
:
0
}
)
;
}
let
closed
=
false
;
const
iterator
=
{
next
(
)
{
return
{
value
:
1
done
:
false
}
;
}
return
(
)
{
closed
=
true
;
return
{
done
:
true
}
;
}
[
Symbol
.
iterator
]
(
)
{
return
this
;
}
}
await
assert
.
throwsAsync
(
TypeError
(
)
=
>
Array
.
fromAsync
.
call
(
MyArray
iterator
)
"
Promise
rejected
if
defining
element
fails
"
)
;
assert
(
closed
"
element
define
failure
should
close
iterator
"
)
;
}
)
;
