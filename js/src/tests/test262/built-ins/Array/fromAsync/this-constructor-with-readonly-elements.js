asyncTest
(
async
function
(
)
{
function
MyArray
(
)
{
this
.
length
=
4
;
for
(
let
ix
=
0
;
ix
<
this
.
length
;
ix
+
+
)
{
Object
.
defineProperty
(
this
ix
{
enumerable
:
true
writable
:
false
configurable
:
true
value
:
99
}
)
;
}
}
let
result
=
await
Array
.
fromAsync
.
call
(
MyArray
[
0
1
2
]
)
;
assert
.
sameValue
(
result
.
length
3
"
Length
property
is
overwritten
"
)
;
assert
.
sameValue
(
result
[
0
]
0
"
Read
-
only
element
0
is
overwritten
"
)
;
assert
.
sameValue
(
result
[
1
]
1
"
Read
-
only
element
1
is
overwritten
"
)
;
assert
.
sameValue
(
result
[
2
]
2
"
Read
-
only
element
2
is
overwritten
"
)
;
assert
.
sameValue
(
result
[
3
]
99
"
Element
3
is
not
overwritten
"
)
;
result
=
await
Array
.
fromAsync
.
call
(
MyArray
{
length
:
3
0
:
0
1
:
1
2
:
2
3
:
3
}
)
;
assert
.
sameValue
(
result
.
length
3
"
Length
property
is
overwritten
"
)
;
assert
.
sameValue
(
result
[
0
]
0
"
Read
-
only
element
0
is
overwritten
"
)
;
assert
.
sameValue
(
result
[
1
]
1
"
Read
-
only
element
1
is
overwritten
"
)
;
assert
.
sameValue
(
result
[
2
]
2
"
Read
-
only
element
2
is
overwritten
"
)
;
assert
.
sameValue
(
result
[
3
]
99
"
Element
3
is
not
overwritten
"
)
;
}
)
;
