'
use
strict
'
;
asyncTest
(
async
(
)
=
>
{
await
Array
.
fromAsync
(
[
1
2
3
]
async
function
(
)
{
assert
.
sameValue
(
this
undefined
"
undefined
thisArg
should
be
bound
as
the
this
-
value
of
mapfn
"
)
;
}
undefined
)
;
await
Array
.
fromAsync
(
[
1
2
3
]
async
function
(
)
{
assert
.
sameValue
(
this
null
"
null
thisArg
should
be
bound
as
the
this
-
value
of
mapfn
"
)
;
}
null
)
;
await
Array
.
fromAsync
(
[
1
2
3
]
async
function
(
)
{
assert
.
sameValue
(
this
"
string
"
"
string
thisArg
should
be
bound
as
the
this
-
value
of
mapfn
"
)
;
}
"
string
"
)
;
await
Array
.
fromAsync
(
[
1
2
3
]
async
function
(
)
{
assert
.
sameValue
(
this
3
.
1416
"
number
thisArg
should
be
bound
as
the
this
-
value
of
mapfn
"
)
;
}
3
.
1416
)
;
await
Array
.
fromAsync
(
[
1
2
3
]
async
function
(
)
{
assert
.
sameValue
(
this
42n
"
bigint
thisArg
should
be
bound
as
the
this
-
value
of
mapfn
"
)
;
}
42n
)
;
await
Array
.
fromAsync
(
[
1
2
3
]
async
function
(
)
{
assert
.
sameValue
(
this
true
"
boolean
thisArg
should
be
bound
as
the
this
-
value
of
mapfn
"
)
;
}
true
)
;
const
symbolThis
=
Symbol
(
"
symbol
"
)
;
await
Array
.
fromAsync
(
[
1
2
3
]
async
function
(
)
{
assert
.
sameValue
(
this
symbolThis
"
symbol
thisArg
should
be
bound
as
the
this
-
value
of
mapfn
"
)
;
}
symbolThis
)
;
}
)
;
