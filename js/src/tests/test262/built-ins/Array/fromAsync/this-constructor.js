asyncTest
(
async
function
(
)
{
const
constructorCalls
=
[
]
;
function
MyArray
(
.
.
.
args
)
{
constructorCalls
.
push
(
args
)
;
}
let
result
=
await
Array
.
fromAsync
.
call
(
MyArray
[
1
2
]
)
;
assert
(
result
instanceof
MyArray
"
result
is
an
instance
of
the
constructor
this
-
value
"
)
;
assert
.
sameValue
(
result
.
length
2
"
length
is
set
on
result
"
)
;
assert
.
sameValue
(
result
[
0
]
1
"
element
0
is
set
on
result
"
)
;
assert
.
sameValue
(
result
[
1
]
2
"
element
1
is
set
on
result
"
)
;
assert
.
sameValue
(
constructorCalls
.
length
1
"
constructor
is
called
once
"
)
;
assert
.
compareArray
(
constructorCalls
[
0
]
[
]
"
constructor
is
called
with
no
arguments
"
)
;
constructorCalls
.
splice
(
0
)
;
result
=
await
Array
.
fromAsync
.
call
(
MyArray
{
length
:
2
0
:
1
1
:
2
}
)
;
assert
(
result
instanceof
MyArray
"
result
is
an
instance
of
the
constructor
this
-
value
"
)
;
assert
.
sameValue
(
result
.
length
2
"
length
is
set
on
result
"
)
;
assert
.
sameValue
(
result
[
0
]
1
"
element
0
is
set
on
result
"
)
;
assert
.
sameValue
(
result
[
1
]
2
"
element
1
is
set
on
result
"
)
;
assert
.
sameValue
(
constructorCalls
.
length
1
"
constructor
is
called
once
"
)
;
assert
.
compareArray
(
constructorCalls
[
0
]
[
2
]
"
constructor
is
called
with
a
length
argument
"
)
;
}
)
;
