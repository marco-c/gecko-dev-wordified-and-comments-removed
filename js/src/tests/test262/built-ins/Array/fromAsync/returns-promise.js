asyncTest
(
async
function
(
)
{
let
p
=
Array
.
fromAsync
(
[
0
1
2
]
)
;
assert
(
p
instanceof
Promise
"
Array
.
fromAsync
returns
a
Promise
"
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
p
)
Promise
.
prototype
"
Array
.
fromAsync
returns
an
object
with
prototype
Promise
.
prototype
"
)
;
p
=
Array
.
fromAsync
(
[
0
1
2
]
(
)
=
>
{
throw
new
Test262Error
(
"
this
will
make
the
Promise
reject
"
)
;
}
)
assert
(
p
instanceof
Promise
"
Array
.
fromAsync
returns
a
Promise
even
on
error
"
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
p
)
Promise
.
prototype
"
Array
.
fromAsync
returns
an
object
with
prototype
Promise
.
prototype
even
on
error
"
)
;
await
assert
.
throwsAsync
(
Test262Error
(
)
=
>
p
"
Prevent
unhandled
rejection
"
)
;
}
)
;
