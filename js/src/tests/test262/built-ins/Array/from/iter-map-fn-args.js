var
args
=
[
]
;
var
firstResult
=
{
done
:
false
value
:
{
}
}
;
var
secondResult
=
{
done
:
false
value
:
{
}
}
;
var
mapFn
=
function
(
value
idx
)
{
args
.
push
(
arguments
)
;
}
;
var
items
=
{
}
;
var
nextResult
=
firstResult
;
var
nextNextResult
=
secondResult
;
items
[
Symbol
.
iterator
]
=
function
(
)
{
return
{
next
:
function
(
)
{
var
result
=
nextResult
;
nextResult
=
nextNextResult
;
nextNextResult
=
{
done
:
true
}
;
return
result
;
}
}
;
}
;
Array
.
from
(
items
mapFn
)
;
assert
.
sameValue
(
args
.
length
2
'
Iteration
count
'
)
;
assert
.
sameValue
(
args
[
0
]
.
length
2
'
First
iteration
:
arguments
length
'
)
;
assert
.
sameValue
(
args
[
0
]
[
0
]
firstResult
.
value
'
First
iteration
:
first
argument
'
)
;
assert
.
sameValue
(
args
[
0
]
[
1
]
0
'
First
iteration
:
second
argument
'
)
;
assert
.
sameValue
(
args
[
1
]
.
length
2
'
Second
iteration
:
arguments
length
'
)
;
assert
.
sameValue
(
args
[
1
]
[
0
]
secondResult
.
value
'
Second
iteration
:
first
argument
'
)
;
assert
.
sameValue
(
args
[
1
]
[
1
]
1
'
Second
iteration
:
second
argument
'
)
;
reportCompare
(
0
0
)
;
