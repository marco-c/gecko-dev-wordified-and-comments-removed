var
thisVal
args
;
var
callCount
=
0
;
var
C
=
function
(
)
{
thisVal
=
this
;
args
=
arguments
;
callCount
+
=
1
;
}
;
var
result
;
var
items
=
{
}
;
items
[
Symbol
.
iterator
]
=
function
(
)
{
return
{
next
:
function
(
)
{
return
{
done
:
true
}
;
}
}
;
}
;
result
=
Array
.
from
.
call
(
C
items
)
;
assert
(
result
instanceof
C
'
Constructed
value
is
an
instance
of
the
constructor
'
)
;
assert
.
sameValue
(
result
.
constructor
C
'
Constructed
value
correctly
defines
a
constructor
property
'
)
;
assert
.
sameValue
(
callCount
1
'
Constructor
invoked
exactly
once
'
)
;
assert
.
sameValue
(
thisVal
result
'
Constructed
value
is
returned
'
)
;
assert
.
sameValue
(
args
.
length
0
'
Constructor
invoked
without
arguments
'
)
;
reportCompare
(
0
0
)
;
