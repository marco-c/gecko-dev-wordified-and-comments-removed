var
valueOf
=
String
.
prototype
.
valueOf
;
assert
.
throws
(
TypeError
function
(
)
{
valueOf
.
call
(
true
)
;
}
)
;
assert
.
throws
(
TypeError
function
(
)
{
valueOf
.
call
(
-
0
)
;
}
)
;
assert
.
throws
(
TypeError
function
(
)
{
valueOf
.
call
(
null
)
;
}
)
;
assert
.
throws
(
TypeError
function
(
)
{
valueOf
.
call
(
)
;
}
)
;
assert
.
throws
(
TypeError
function
(
)
{
valueOf
.
call
(
Symbol
(
'
desc
'
)
)
;
}
)
;
assert
.
throws
(
TypeError
function
(
)
{
valueOf
.
call
(
{
toString
:
function
(
)
{
return
'
str
'
;
}
}
)
;
}
)
;
assert
.
throws
(
TypeError
function
(
)
{
valueOf
.
call
(
[
'
s
'
'
t
'
'
r
'
]
)
;
}
)
;
assert
.
throws
(
TypeError
function
(
)
{
'
str
'
+
{
valueOf
:
valueOf
}
;
}
)
;
reportCompare
(
0
0
)
;
