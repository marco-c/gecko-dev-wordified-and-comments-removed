assert
.
sameValue
(
typeof
String
.
prototype
.
at
'
function
'
)
;
let
s
=
"
01
"
;
assert
.
sameValue
(
s
.
at
(
false
)
'
0
'
'
s
.
at
(
false
)
must
return
0
'
)
;
assert
.
sameValue
(
s
.
at
(
null
)
'
0
'
'
s
.
at
(
null
)
must
return
0
'
)
;
assert
.
sameValue
(
s
.
at
(
undefined
)
'
0
'
'
s
.
at
(
undefined
)
must
return
0
'
)
;
assert
.
sameValue
(
s
.
at
(
"
"
)
'
0
'
'
s
.
at
(
"
"
)
must
return
0
'
)
;
assert
.
sameValue
(
s
.
at
(
function
(
)
{
}
)
'
0
'
'
s
.
at
(
function
(
)
{
}
)
must
return
0
'
)
;
assert
.
sameValue
(
s
.
at
(
[
]
)
'
0
'
'
s
.
at
(
[
]
)
must
return
0
'
)
;
assert
.
sameValue
(
s
.
at
(
true
)
'
1
'
'
s
.
at
(
true
)
must
return
1
'
)
;
assert
.
sameValue
(
s
.
at
(
"
1
"
)
'
1
'
'
s
.
at
(
"
1
"
)
must
return
1
'
)
;
reportCompare
(
0
0
)
;
