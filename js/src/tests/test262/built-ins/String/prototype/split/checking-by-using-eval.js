var
split
=
String
.
prototype
.
split
.
bind
(
this
)
;
var
__obj__lim
=
{
valueOf
:
function
(
)
{
return
5
;
}
}
;
try
{
toString
=
Object
.
prototype
.
toString
;
}
catch
(
e
)
{
;
}
if
(
toString
=
=
=
Object
.
prototype
.
toString
)
{
var
__class__
=
toString
(
)
;
var
__split
=
split
(
eval
(
"
\
"
[
\
"
"
)
__obj__lim
)
;
assert
.
sameValue
(
typeof
__split
"
object
"
'
The
value
of
typeof
__split
is
"
object
"
'
)
;
assert
.
sameValue
(
__split
.
constructor
Array
'
The
value
of
__split
.
constructor
is
expected
to
equal
the
value
of
Array
'
)
;
assert
.
sameValue
(
__split
.
length
2
'
The
value
of
__split
.
length
is
2
'
)
;
assert
.
sameValue
(
__split
[
1
]
.
substring
(
0
6
)
"
object
"
'
__split
[
1
]
.
substring
(
0
6
)
must
return
"
object
"
'
)
;
}
reportCompare
(
0
0
)
;
