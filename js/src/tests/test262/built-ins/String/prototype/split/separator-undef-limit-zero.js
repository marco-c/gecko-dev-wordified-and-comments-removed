var
str
=
'
undefined
is
not
a
function
'
;
var
result
=
str
.
split
(
undefined
0
)
;
assert
.
sameValue
(
Array
.
isArray
(
result
)
true
'
result
is
array
'
)
;
assert
.
sameValue
(
result
.
length
0
'
result
.
length
'
)
;
result
=
str
.
split
(
undefined
false
)
;
assert
.
sameValue
(
Array
.
isArray
(
result
)
true
'
boolean
result
is
array
'
)
;
assert
.
sameValue
(
result
.
length
0
'
boolean
result
.
length
'
)
;
result
=
str
.
split
(
undefined
null
)
;
assert
.
sameValue
(
Array
.
isArray
(
result
)
true
'
null
result
is
array
'
)
;
assert
.
sameValue
(
result
.
length
0
'
null
result
.
length
'
)
;
result
=
str
.
split
(
undefined
{
valueOf
(
)
{
return
undefined
;
}
}
)
;
assert
.
sameValue
(
Array
.
isArray
(
result
)
true
'
obj
>
undefined
result
is
array
'
)
;
assert
.
sameValue
(
result
.
length
0
'
obj
>
undefined
result
.
length
'
)
;
result
=
str
.
split
(
undefined
{
valueOf
(
)
{
return
0
;
}
}
)
;
assert
.
sameValue
(
Array
.
isArray
(
result
)
true
'
obj
>
0
result
is
array
'
)
;
assert
.
sameValue
(
result
.
length
0
'
obj
>
0
result
.
length
'
)
;
result
=
str
.
split
(
undefined
NaN
)
;
assert
.
sameValue
(
Array
.
isArray
(
result
)
true
'
NaN
result
is
array
'
)
;
assert
.
sameValue
(
result
.
length
0
'
NaN
result
.
length
'
)
;
result
=
str
.
split
(
undefined
2
*
*
32
)
;
assert
.
sameValue
(
Array
.
isArray
(
result
)
true
'
2
*
*
32
result
is
array
'
)
;
assert
.
sameValue
(
result
.
length
0
'
2
*
*
32
result
.
length
'
)
;
result
=
str
.
split
(
undefined
2
*
*
33
)
;
assert
.
sameValue
(
Array
.
isArray
(
result
)
true
'
2
*
*
33
result
is
array
'
)
;
assert
.
sameValue
(
result
.
length
0
'
2
*
*
33
result
.
length
'
)
;
reportCompare
(
0
0
)
;
