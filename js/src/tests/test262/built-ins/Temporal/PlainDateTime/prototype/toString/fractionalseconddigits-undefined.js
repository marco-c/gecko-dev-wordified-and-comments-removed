const
tests
=
[
[
new
Temporal
.
PlainDateTime
(
1976
2
4
5
3
1
)
"
1976
-
02
-
04T05
:
03
:
01
"
]
[
new
Temporal
.
PlainDateTime
(
1976
11
18
15
23
)
"
1976
-
11
-
18T15
:
23
:
00
"
]
[
new
Temporal
.
PlainDateTime
(
1976
11
18
15
23
30
)
"
1976
-
11
-
18T15
:
23
:
30
"
]
[
new
Temporal
.
PlainDateTime
(
1976
11
18
15
23
30
123
400
)
"
1976
-
11
-
18T15
:
23
:
30
.
1234
"
]
]
;
for
(
const
[
datetime
expected
]
of
tests
)
{
const
explicit
=
datetime
.
toString
(
{
fractionalSecondDigits
:
undefined
}
)
;
assert
.
sameValue
(
explicit
expected
"
default
fractionalSecondDigits
is
auto
(
property
present
but
undefined
)
"
)
;
const
implicit
=
datetime
.
toString
(
{
}
)
;
assert
.
sameValue
(
implicit
expected
"
default
fractionalSecondDigits
is
auto
(
property
not
present
)
"
)
;
const
lambda
=
datetime
.
toString
(
(
)
=
>
{
}
)
;
assert
.
sameValue
(
lambda
expected
"
default
fractionalSecondDigits
is
auto
(
property
not
present
function
object
)
"
)
;
}
reportCompare
(
0
0
)
;
