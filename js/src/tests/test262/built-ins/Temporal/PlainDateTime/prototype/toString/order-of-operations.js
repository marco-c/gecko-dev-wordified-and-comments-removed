const
expected
=
[
"
get
options
.
calendarName
"
"
get
options
.
calendarName
.
toString
"
"
call
options
.
calendarName
.
toString
"
"
get
options
.
fractionalSecondDigits
"
"
get
options
.
fractionalSecondDigits
.
toString
"
"
call
options
.
fractionalSecondDigits
.
toString
"
"
get
options
.
roundingMode
"
"
get
options
.
roundingMode
.
toString
"
"
call
options
.
roundingMode
.
toString
"
"
get
options
.
smallestUnit
"
"
get
options
.
smallestUnit
.
toString
"
"
call
options
.
smallestUnit
.
toString
"
]
;
const
actual
=
[
]
;
const
instance
=
new
Temporal
.
PlainDateTime
(
1990
11
3
15
54
37
123
456
789
"
iso8601
"
)
;
actual
.
splice
(
0
)
;
instance
.
toString
(
TemporalHelpers
.
propertyBagObserver
(
actual
{
fractionalSecondDigits
:
"
auto
"
roundingMode
:
"
halfExpand
"
smallestUnit
:
"
millisecond
"
calendarName
:
"
auto
"
}
"
options
"
)
)
;
assert
.
compareArray
(
actual
expected
"
order
of
operations
"
)
;
actual
.
splice
(
0
)
;
const
expectedForFractionalSecondDigits
=
[
"
get
options
.
calendarName
"
"
get
options
.
calendarName
.
toString
"
"
call
options
.
calendarName
.
toString
"
"
get
options
.
fractionalSecondDigits
"
"
get
options
.
fractionalSecondDigits
.
toString
"
"
call
options
.
fractionalSecondDigits
.
toString
"
"
get
options
.
roundingMode
"
"
get
options
.
roundingMode
.
toString
"
"
call
options
.
roundingMode
.
toString
"
"
get
options
.
smallestUnit
"
]
;
instance
.
toString
(
TemporalHelpers
.
propertyBagObserver
(
actual
{
fractionalSecondDigits
:
"
auto
"
roundingMode
:
"
halfExpand
"
smallestUnit
:
undefined
calendarName
:
"
auto
"
}
"
options
"
)
)
;
assert
.
compareArray
(
actual
expectedForFractionalSecondDigits
"
order
of
operations
with
smallestUnit
undefined
"
)
;
reportCompare
(
0
0
)
;
