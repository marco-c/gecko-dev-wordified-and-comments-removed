const
instance
=
new
Temporal
.
PlainDateTime
(
2000
5
2
12
34
56
987
654
321
)
;
const
rangeErrorTests
=
[
[
undefined
"
undefined
"
]
[
null
"
null
"
]
[
true
"
boolean
"
]
[
"
"
"
empty
string
"
]
[
1
"
number
that
doesn
'
t
convert
to
a
valid
ISO
string
"
]
[
1n
"
bigint
"
]
]
;
for
(
const
[
arg
description
]
of
rangeErrorTests
)
{
assert
.
throws
(
RangeError
(
)
=
>
instance
.
withPlainDate
(
arg
)
{
description
}
does
not
convert
to
a
valid
ISO
string
)
;
}
const
typeErrorTests
=
[
[
Symbol
(
)
"
symbol
"
]
[
{
}
"
plain
object
"
]
[
Temporal
.
PlainDate
"
Temporal
.
PlainDate
object
"
]
[
Temporal
.
PlainDate
.
prototype
"
Temporal
.
PlainDate
.
prototype
object
"
]
]
;
for
(
const
[
arg
description
]
of
typeErrorTests
)
{
assert
.
throws
(
TypeError
(
)
=
>
instance
.
withPlainDate
(
arg
)
{
description
}
is
not
a
valid
property
bag
and
does
not
convert
to
a
string
)
;
}
reportCompare
(
0
0
)
;
