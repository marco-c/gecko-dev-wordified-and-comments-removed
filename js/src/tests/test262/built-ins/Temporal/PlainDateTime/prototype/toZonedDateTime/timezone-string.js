const
getPossibleInstantsForOriginal
=
Object
.
getOwnPropertyDescriptor
(
Temporal
.
TimeZone
.
prototype
"
getPossibleInstantsFor
"
)
;
Object
.
defineProperty
(
Temporal
.
TimeZone
.
prototype
"
getPossibleInstantsFor
"
{
configurable
:
true
enumerable
:
false
get
(
)
{
TemporalHelpers
.
assertUnreachable
(
"
getPossibleInstantsFor
should
not
be
looked
up
"
)
;
}
}
)
;
const
getOffsetNanosecondsForOriginal
=
Object
.
getOwnPropertyDescriptor
(
Temporal
.
TimeZone
.
prototype
"
getOffsetNanosecondsFor
"
)
;
Object
.
defineProperty
(
Temporal
.
TimeZone
.
prototype
"
getOffsetNanosecondsFor
"
{
configurable
:
true
enumerable
:
false
get
(
)
{
TemporalHelpers
.
assertUnreachable
(
"
getOffsetNanosecondsFor
should
not
be
looked
up
"
)
;
}
}
)
;
const
instance
=
new
Temporal
.
PlainDateTime
(
2000
5
2
)
;
[
"
UTC
"
"
+
01
:
30
"
]
.
forEach
(
(
timeZone
)
=
>
{
const
result
=
instance
.
toZonedDateTime
(
timeZone
)
;
assert
.
sameValue
(
result
.
getISOFields
(
)
.
timeZone
timeZone
time
zone
slot
should
store
string
"
{
timeZone
}
"
)
;
}
)
;
Object
.
defineProperty
(
Temporal
.
TimeZone
.
prototype
"
getPossibleInstantsFor
"
getPossibleInstantsForOriginal
)
;
Object
.
defineProperty
(
Temporal
.
TimeZone
.
prototype
"
getOffsetNanosecondsFor
"
getOffsetNanosecondsForOriginal
)
;
reportCompare
(
0
0
)
;
