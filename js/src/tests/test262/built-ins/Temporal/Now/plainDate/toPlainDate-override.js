const
actual
=
[
]
;
const
expected
=
[
"
has
timeZone
.
timeZone
"
"
get
timeZone
.
getOffsetNanosecondsFor
"
"
call
timeZone
.
getOffsetNanosecondsFor
"
]
;
Object
.
defineProperty
(
Temporal
.
PlainDateTime
.
prototype
"
toPlainDate
"
{
get
(
)
{
actual
.
push
(
"
get
Temporal
.
PlainDateTime
.
prototype
.
toPlainDate
"
)
;
return
function
(
)
{
actual
.
push
(
"
call
Temporal
.
PlainDateTime
.
prototype
.
toPlainDate
"
)
;
}
;
}
}
)
;
const
timeZone
=
TemporalHelpers
.
timeZoneObserver
(
actual
"
timeZone
"
{
getOffsetNanosecondsFor
(
instant
)
{
assert
.
sameValue
(
instant
instanceof
Temporal
.
Instant
true
"
Instant
"
)
;
return
86399_999_999_999
;
}
}
)
;
const
result
=
Temporal
.
Now
.
plainDate
(
"
iso8601
"
timeZone
)
;
assert
.
notSameValue
(
result
undefined
)
;
assert
.
sameValue
(
result
instanceof
Temporal
.
PlainDate
true
)
;
assert
.
compareArray
(
actual
expected
)
;
reportCompare
(
0
0
)
;
