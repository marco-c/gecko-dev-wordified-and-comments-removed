const
actual
=
[
]
;
const
expected
=
[
"
has
timeZone
.
getOffsetNanosecondsFor
"
"
has
timeZone
.
getPossibleInstantsFor
"
"
has
timeZone
.
id
"
]
;
const
timeZone
=
TemporalHelpers
.
timeZoneObserver
(
actual
"
timeZone
"
{
getOffsetNanosecondsFor
(
instant
)
{
assert
.
sameValue
(
instant
instanceof
Temporal
.
Instant
true
'
The
result
of
evaluating
(
instant
instanceof
Temporal
.
Instant
)
is
expected
to
be
true
'
)
;
return
-
Number
(
instant
.
epochNanoseconds
%
86400000000000n
)
;
}
}
)
;
Object
.
defineProperty
(
Temporal
.
TimeZone
'
from
'
{
get
(
)
{
actual
.
push
(
'
get
Temporal
.
TimeZone
.
from
'
)
;
return
undefined
;
}
}
)
;
Temporal
.
Now
.
zonedDateTimeISO
(
timeZone
)
;
assert
.
compareArray
(
actual
expected
'
order
of
observable
operations
'
)
;
reportCompare
(
0
0
)
;
