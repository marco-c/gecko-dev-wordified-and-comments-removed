let
cal
=
new
Temporal
.
Calendar
(
"
iso8601
"
)
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
m1
"
day
:
17
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M1
"
day
:
17
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
m01
"
day
:
17
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
12
monthCode
:
"
M11
"
day
:
17
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M00
"
day
:
17
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M19
"
day
:
17
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M99
"
day
:
17
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M13
"
day
:
17
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
-
1
day
:
17
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
-
Infinity
day
:
17
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
7
day
:
-
17
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
7
day
:
-
Infinity
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
12
day
:
0
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
12
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
1
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
2
day
:
29
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
6
day
:
31
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
9
day
:
31
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
0
day
:
5
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
13
day
:
5
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M12
"
day
:
0
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M12
"
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M01
"
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M02
"
day
:
29
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M06
"
day
:
31
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M09
"
day
:
31
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M00
"
day
:
5
}
{
overflow
:
"
reject
"
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
monthCode
:
"
M13
"
day
:
5
}
{
overflow
:
"
reject
"
}
)
"
monthCode
value
is
out
of
range
.
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
12
day
:
0
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
0
day
:
3
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
7
day
:
13
}
{
overflow
:
"
invalid
"
}
)
RangeError
"
Value
invalid
out
of
range
for
Temporal
.
Calendar
.
prototype
.
dateFromFields
options
property
overflow
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
1
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
2
day
:
29
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
3
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
4
day
:
31
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
5
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
6
day
:
31
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
7
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
8
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
9
day
:
31
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
10
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
11
day
:
31
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
12
day
:
32
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
cal
.
dateFromFields
(
{
year
:
2021
month
:
13
day
:
5
}
{
overflow
:
"
reject
"
}
)
"
Invalid
time
value
"
)
;
reportCompare
(
0
0
)
;
