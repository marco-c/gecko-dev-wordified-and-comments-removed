const
calendar
=
new
Temporal
.
Calendar
(
"
iso8601
"
)
;
assert
.
throws
(
TypeError
(
)
=
>
calendar
.
fields
(
[
1
]
)
)
;
assert
.
throws
(
TypeError
(
)
=
>
calendar
.
fields
(
[
1n
]
)
)
;
assert
.
throws
(
TypeError
(
)
=
>
calendar
.
fields
(
[
Symbol
(
'
foo
'
)
]
)
)
;
assert
.
throws
(
TypeError
(
)
=
>
calendar
.
fields
(
[
true
]
)
)
;
assert
.
throws
(
TypeError
(
)
=
>
calendar
.
fields
(
[
null
]
)
)
;
assert
.
throws
(
TypeError
(
)
=
>
calendar
.
fields
(
[
{
}
]
)
)
;
assert
.
throws
(
TypeError
(
)
=
>
calendar
.
fields
(
[
undefined
]
)
)
;
assert
.
throws
(
TypeError
(
)
=
>
calendar
.
fields
(
[
"
day
"
1
]
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
calendar
.
fields
(
[
"
hour
"
]
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
calendar
.
fields
(
[
"
minute
"
]
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
calendar
.
fields
(
[
"
second
"
]
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
calendar
.
fields
(
[
"
millisecond
"
]
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
calendar
.
fields
(
[
"
microsecond
"
]
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
calendar
.
fields
(
[
"
nanosecond
"
]
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
calendar
.
fields
(
[
"
month
"
"
days
"
]
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
calendar
.
fields
(
[
"
days
"
]
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
calendar
.
fields
(
[
"
people
"
]
)
)
;
reportCompare
(
0
0
)
;
