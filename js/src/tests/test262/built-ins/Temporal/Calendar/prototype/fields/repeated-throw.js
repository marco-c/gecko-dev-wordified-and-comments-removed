let
cal
=
new
Temporal
.
Calendar
(
"
iso8601
"
)
let
i
=
0
;
const
fields
=
{
*
[
Symbol
.
iterator
]
(
)
{
yield
"
month
"
;
i
+
+
;
yield
"
year
"
;
i
+
+
;
yield
"
year
"
;
i
+
+
;
}
}
assert
.
throws
(
RangeError
(
)
=
>
cal
.
fields
(
fields
)
"
repeated
valid
value
should
throw
"
)
;
assert
.
sameValue
(
i
2
"
Should
stop
at
2
"
)
;
[
"
day
"
"
monthCode
"
"
month
"
"
year
"
]
.
forEach
(
(
f
)
=
>
{
i
=
0
;
const
fields2
=
{
*
[
Symbol
.
iterator
]
(
)
{
yield
f
;
i
+
+
;
yield
f
;
i
+
+
;
}
}
assert
.
throws
(
RangeError
(
)
=
>
cal
.
fields
(
fields2
)
"
repeated
valid
value
should
throw
"
)
;
assert
.
sameValue
(
i
1
"
Should
stop
at
1
"
)
;
}
)
;
reportCompare
(
0
0
)
;
