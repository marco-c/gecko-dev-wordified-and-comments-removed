const
cal
=
new
Temporal
.
Calendar
(
"
iso8601
"
)
let
result
=
cal
.
yearMonthFromFields
(
{
year
:
2021
month
:
7
}
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
2021
7
"
M07
"
"
year
2021
month
7
"
)
;
result
=
cal
.
yearMonthFromFields
(
{
year
:
2021
month
:
12
}
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
2021
12
"
M12
"
"
year
2021
month
12
"
)
;
result
=
cal
.
yearMonthFromFields
(
{
year
:
2021
monthCode
:
"
M07
"
}
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
2021
7
"
M07
"
"
year
2021
monthCode
M07
"
)
;
result
=
cal
.
yearMonthFromFields
(
{
year
:
2021
monthCode
:
"
M12
"
}
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
2021
12
"
M12
"
"
year
2021
monthCode
M12
"
)
;
[
"
constrain
"
"
reject
"
]
.
forEach
(
(
overflow
)
=
>
{
const
opt
=
{
overflow
}
;
result
=
cal
.
yearMonthFromFields
(
{
year
:
2021
month
:
7
}
opt
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
2021
7
"
M07
"
year
2021
month
7
overflow
{
overflow
}
)
;
result
=
cal
.
yearMonthFromFields
(
{
year
:
2021
month
:
12
}
opt
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
2021
12
"
M12
"
year
2021
month
12
overflow
{
overflow
}
)
;
result
=
cal
.
yearMonthFromFields
(
{
year
:
2021
monthCode
:
"
M07
"
}
opt
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
2021
7
"
M07
"
year
2021
monthCode
M07
overflow
{
overflow
}
)
;
result
=
cal
.
yearMonthFromFields
(
{
year
:
2021
monthCode
:
"
M12
"
}
opt
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
2021
12
"
M12
"
year
2021
monthCode
M12
overflow
{
overflow
}
)
;
}
)
;
reportCompare
(
0
0
)
;
