const
cal
=
new
Temporal
.
Calendar
(
"
iso8601
"
)
;
const
options
=
[
{
overflow
:
"
constrain
"
}
{
overflow
:
"
reject
"
}
{
}
undefined
]
;
options
.
forEach
(
(
opt
)
=
>
{
const
optionsDesc
=
opt
&
&
JSON
.
stringify
(
opt
)
;
let
result
=
cal
.
monthDayFromFields
(
{
year
:
2021
month
:
7
day
:
3
}
opt
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M07
"
3
month
7
day
3
with
year
options
=
{
optionsDesc
}
)
;
result
=
cal
.
monthDayFromFields
(
{
year
:
2021
month
:
12
day
:
31
}
opt
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M12
"
31
month
12
day
31
with
year
options
=
{
optionsDesc
}
)
;
result
=
cal
.
monthDayFromFields
(
{
monthCode
:
"
M07
"
day
:
3
}
opt
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M07
"
3
monthCode
M07
day
3
options
=
{
optionsDesc
}
)
;
result
=
cal
.
monthDayFromFields
(
{
monthCode
:
"
M12
"
day
:
31
}
opt
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M12
"
31
monthCode
M12
day
31
options
=
{
optionsDesc
}
)
;
}
)
;
TemporalHelpers
.
ISOMonths
.
forEach
(
(
{
month
monthCode
daysInMonth
}
)
=
>
{
let
result
=
cal
.
monthDayFromFields
(
{
month
day
:
daysInMonth
}
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
monthCode
daysInMonth
month
{
month
}
day
{
daysInMonth
}
)
;
result
=
cal
.
monthDayFromFields
(
{
monthCode
day
:
daysInMonth
}
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
monthCode
daysInMonth
monthCode
{
monthCode
}
day
{
daysInMonth
}
)
;
}
)
;
reportCompare
(
0
0
)
;
