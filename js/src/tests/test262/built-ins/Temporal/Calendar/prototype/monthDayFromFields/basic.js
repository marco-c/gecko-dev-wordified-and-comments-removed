const
cal
=
new
Temporal
.
Calendar
(
"
iso8601
"
)
;
let
result
=
cal
.
monthDayFromFields
(
{
year
:
2021
month
:
7
day
:
3
}
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M07
"
3
"
month
7
day
3
with
year
"
)
;
result
=
cal
.
monthDayFromFields
(
{
year
:
2021
month
:
12
day
:
31
}
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M12
"
31
"
month
12
day
31
with
year
"
)
;
result
=
cal
.
monthDayFromFields
(
{
monthCode
:
"
M07
"
day
:
3
}
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M07
"
3
"
monthCode
M07
day
3
"
)
;
result
=
cal
.
monthDayFromFields
(
{
monthCode
:
"
M12
"
day
:
31
}
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M12
"
31
"
monthCode
M12
day
31
"
)
;
[
"
constrain
"
"
reject
"
]
.
forEach
(
function
(
overflow
)
{
const
opt
=
{
overflow
}
;
result
=
cal
.
monthDayFromFields
(
{
year
:
2021
month
:
7
day
:
3
}
opt
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M07
"
3
"
month
7
day
3
with
year
"
)
;
result
=
cal
.
monthDayFromFields
(
{
year
:
2021
month
:
12
day
:
31
}
opt
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M12
"
31
"
month
12
day
31
with
year
"
)
;
result
=
cal
.
monthDayFromFields
(
{
monthCode
:
"
M07
"
day
:
3
}
opt
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M07
"
3
"
monthCode
M07
day
3
"
)
;
result
=
cal
.
monthDayFromFields
(
{
monthCode
:
"
M12
"
day
:
31
}
opt
)
;
TemporalHelpers
.
assertPlainMonthDay
(
result
"
M12
"
31
"
monthCode
M12
day
31
"
)
;
}
)
;
reportCompare
(
0
0
)
;
