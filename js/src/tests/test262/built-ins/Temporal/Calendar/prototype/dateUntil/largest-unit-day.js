let
cal
=
new
Temporal
.
Calendar
(
"
iso8601
"
)
;
[
"
day
"
"
days
"
]
.
forEach
(
function
(
largestUnit
)
{
let
opt
=
{
largestUnit
}
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2021
-
07
-
16
"
"
2021
-
07
-
16
"
opt
)
0
0
0
0
0
0
0
0
0
0
"
same
day
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2021
-
07
-
16
"
"
2021
-
07
-
17
"
opt
)
0
0
0
1
0
0
0
0
0
0
"
one
day
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2021
-
07
-
16
"
"
2021
-
08
-
17
"
opt
)
0
0
0
32
0
0
0
0
0
0
"
32
days
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2021
-
07
-
16
"
"
2021
-
09
-
16
"
opt
)
0
0
0
62
0
0
0
0
0
0
"
62
days
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2021
-
07
-
16
"
"
2022
-
07
-
16
"
opt
)
0
0
0
365
0
0
0
0
0
0
"
365
days
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2021
-
07
-
16
"
"
2031
-
07
-
16
"
opt
)
0
0
0
3652
0
0
0
0
0
0
"
3652
days
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2021
-
07
-
17
"
"
2021
-
07
-
16
"
opt
)
0
0
0
-
1
0
0
0
0
0
0
"
negative
one
day
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2021
-
08
-
17
"
"
2021
-
07
-
16
"
opt
)
0
0
0
-
32
0
0
0
0
0
0
"
negative
32
days
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2021
-
09
-
16
"
"
2021
-
07
-
16
"
opt
)
0
0
0
-
62
0
0
0
0
0
0
"
negative
62
days
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2022
-
07
-
16
"
"
2021
-
07
-
16
"
opt
)
0
0
0
-
365
0
0
0
0
0
0
"
negative
365
days
"
)
;
TemporalHelpers
.
assertDuration
(
cal
.
dateUntil
(
"
2031
-
07
-
16
"
"
2021
-
07
-
16
"
opt
)
0
0
0
-
3652
0
0
0
0
0
0
"
negative
3652
days
"
)
;
}
)
;
reportCompare
(
0
0
)
;
