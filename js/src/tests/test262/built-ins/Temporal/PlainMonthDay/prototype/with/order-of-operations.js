const
expected
=
[
"
get
fields
.
calendar
"
"
get
fields
.
timeZone
"
"
get
this
.
calendar
.
fields
"
"
call
this
.
calendar
.
fields
"
"
get
fields
.
day
"
"
get
fields
.
day
.
valueOf
"
"
call
fields
.
day
.
valueOf
"
"
get
fields
.
month
"
"
get
fields
.
month
.
valueOf
"
"
call
fields
.
month
.
valueOf
"
"
get
fields
.
monthCode
"
"
get
fields
.
monthCode
.
toString
"
"
call
fields
.
monthCode
.
toString
"
"
get
fields
.
year
"
"
get
fields
.
year
.
valueOf
"
"
call
fields
.
year
.
valueOf
"
"
get
this
.
calendar
.
day
"
"
call
this
.
calendar
.
day
"
"
get
this
.
calendar
.
monthCode
"
"
call
this
.
calendar
.
monthCode
"
"
get
this
.
calendar
.
mergeFields
"
"
call
this
.
calendar
.
mergeFields
"
"
get
this
.
calendar
.
monthDayFromFields
"
"
call
this
.
calendar
.
monthDayFromFields
"
"
get
options
.
overflow
"
"
get
options
.
overflow
.
toString
"
"
call
options
.
overflow
.
toString
"
]
;
const
actual
=
[
]
;
const
calendar
=
TemporalHelpers
.
calendarObserver
(
actual
"
this
.
calendar
"
)
;
const
instance
=
new
Temporal
.
PlainMonthDay
(
5
2
calendar
)
;
actual
.
splice
(
0
)
;
const
fields
=
TemporalHelpers
.
propertyBagObserver
(
actual
{
year
:
1
.
7
month
:
1
.
7
monthCode
:
"
M01
"
day
:
1
.
7
}
"
fields
"
)
;
const
options
=
TemporalHelpers
.
propertyBagObserver
(
actual
{
overflow
:
"
constrain
"
}
"
options
"
)
;
instance
.
with
(
fields
options
)
;
assert
.
compareArray
(
actual
expected
"
order
of
operations
"
)
;
reportCompare
(
0
0
)
;
