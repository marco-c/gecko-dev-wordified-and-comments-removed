const
calendarMethods
=
{
dateAdd
(
)
{
}
dateFromFields
(
)
{
}
dateUntil
(
)
{
}
day
(
)
{
}
dayOfWeek
(
)
{
}
dayOfYear
(
)
{
}
daysInMonth
(
)
{
}
daysInWeek
(
)
{
}
daysInYear
(
)
{
}
fields
(
)
{
}
inLeapYear
(
)
{
}
mergeFields
(
)
{
}
month
(
)
{
}
monthCode
(
)
{
}
monthDayFromFields
(
)
{
}
monthsInYear
(
)
{
}
weekOfYear
(
)
{
}
year
(
)
{
}
yearMonthFromFields
(
)
{
}
yearOfWeek
(
)
{
}
}
;
const
tests
=
[
[
[
]
"
05
-
02
"
"
built
-
in
ISO
"
]
[
[
{
id
:
"
custom
"
.
.
.
calendarMethods
}
]
"
1972
-
05
-
02
[
u
-
ca
=
custom
]
"
"
custom
"
]
[
[
{
id
:
"
iso8601
"
.
.
.
calendarMethods
}
]
"
05
-
02
"
"
custom
with
iso8601
id
"
]
[
[
{
id
:
"
ISO8601
"
.
.
.
calendarMethods
}
]
"
1972
-
05
-
02
[
u
-
ca
=
ISO8601
]
"
"
custom
with
caps
id
"
]
[
[
{
id
:
"
\
u0131so8601
"
.
.
.
calendarMethods
}
]
"
1972
-
05
-
02
[
u
-
ca
=
\
u0131so8601
]
"
"
custom
with
dotless
i
id
"
]
]
;
for
(
const
[
args
expected
description
]
of
tests
)
{
const
monthday
=
new
Temporal
.
PlainMonthDay
(
5
2
.
.
.
args
)
;
const
result
=
monthday
.
toString
(
{
calendarName
:
undefined
}
)
;
assert
.
sameValue
(
result
expected
default
calendarName
option
is
auto
with
{
description
}
calendar
)
;
}
reportCompare
(
0
0
)
;
