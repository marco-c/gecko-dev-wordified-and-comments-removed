const
calendar
=
new
Temporal
.
Calendar
(
"
iso8601
"
)
;
calendar
.
fields
=
undefined
;
const
timeZone
=
new
class
extends
Temporal
.
TimeZone
{
getPossibleInstantsFor
(
dt
)
{
const
instants
=
super
.
getPossibleInstantsFor
.
call
(
this
dt
)
;
return
{
*
[
Symbol
.
iterator
]
(
)
{
for
(
let
index
=
0
;
index
<
instants
.
length
;
index
+
+
)
{
yield
instants
[
index
]
;
}
}
}
}
}
(
"
UTC
"
)
;
const
instance
=
new
Temporal
.
ZonedDateTime
(
1_000_000_000_000_000_000n
timeZone
)
;
const
oldIterator
=
Array
.
prototype
[
Symbol
.
iterator
]
;
Array
.
prototype
[
Symbol
.
iterator
]
=
function
(
)
{
throw
new
Test262Error
(
array
shouldn
'
t
be
iterated
:
{
new
Error
(
)
.
stack
}
)
;
}
;
const
arg
=
{
year
:
1981
month
:
12
day
:
15
calendar
}
;
instance
.
withPlainDate
(
arg
)
;
Array
.
prototype
[
Symbol
.
iterator
]
=
oldIterator
;
reportCompare
(
0
0
)
;
