[
undefined
null
true
Math
.
PI
'
string
'
Symbol
(
'
sym
'
)
42n
{
}
]
.
forEach
(
(
notCallable
)
=
>
{
const
timeZone
=
new
Temporal
.
TimeZone
(
"
UTC
"
)
;
const
datetime
=
new
Temporal
.
ZonedDateTime
(
1_000_000_000_987_654_321n
"
UTC
"
)
;
timeZone
.
getPossibleInstantsFor
=
function
(
)
{
return
[
]
;
}
;
timeZone
.
getOffsetNanosecondsFor
=
notCallable
;
assert
.
throws
(
TypeError
(
)
=
>
datetime
.
equals
(
{
year
:
2000
month
:
5
day
:
2
hour
:
12
timeZone
}
)
Uncallable
{
notCallable
=
=
=
null
?
'
null
'
:
typeof
notCallable
}
getOffsetNanosecondsFor
should
throw
TypeError
)
;
}
)
;
reportCompare
(
0
0
)
;
