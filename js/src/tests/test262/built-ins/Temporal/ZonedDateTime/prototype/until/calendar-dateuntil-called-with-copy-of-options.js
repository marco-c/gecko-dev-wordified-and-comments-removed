const
originalOptions
=
{
largestUnit
:
"
year
"
shouldBeCopied
:
{
}
}
;
let
called
=
false
;
class
Calendar
extends
Temporal
.
Calendar
{
constructor
(
)
{
super
(
"
iso8601
"
)
;
}
dateUntil
(
d1
d2
options
)
{
called
=
true
;
assert
.
notSameValue
(
options
originalOptions
"
options
bag
should
be
a
copy
"
)
;
assert
.
sameValue
(
options
.
shouldBeCopied
originalOptions
.
shouldBeCopied
"
options
bag
should
be
a
shallow
copy
"
)
;
return
new
Temporal
.
Duration
(
1
)
;
}
}
const
calendar
=
new
Calendar
(
)
;
const
earlier
=
new
Temporal
.
ZonedDateTime
(
1_000_000_000_000_000_000n
"
UTC
"
calendar
)
;
const
later
=
new
Temporal
.
ZonedDateTime
(
1_031_536_000_000_000_000n
"
UTC
"
calendar
)
;
earlier
.
until
(
later
originalOptions
)
;
assert
(
called
"
calendar
.
dateUntil
must
be
called
"
)
;
reportCompare
(
0
0
)
;
