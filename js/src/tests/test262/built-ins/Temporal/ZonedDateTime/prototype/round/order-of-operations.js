const
expected
=
[
"
get
options
.
roundingIncrement
"
"
get
options
.
roundingIncrement
.
valueOf
"
"
call
options
.
roundingIncrement
.
valueOf
"
"
get
options
.
roundingMode
"
"
get
options
.
roundingMode
.
toString
"
"
call
options
.
roundingMode
.
toString
"
"
get
options
.
smallestUnit
"
"
get
options
.
smallestUnit
.
toString
"
"
call
options
.
smallestUnit
.
toString
"
"
get
this
.
timeZone
.
getOffsetNanosecondsFor
"
"
call
this
.
timeZone
.
getOffsetNanosecondsFor
"
"
get
this
.
timeZone
.
getPossibleInstantsFor
"
"
call
this
.
timeZone
.
getPossibleInstantsFor
"
"
get
this
.
timeZone
.
getOffsetNanosecondsFor
"
"
call
this
.
timeZone
.
getOffsetNanosecondsFor
"
"
get
this
.
calendar
.
dateAdd
"
"
call
this
.
calendar
.
dateAdd
"
"
get
this
.
timeZone
.
getPossibleInstantsFor
"
"
call
this
.
timeZone
.
getPossibleInstantsFor
"
"
get
this
.
timeZone
.
getOffsetNanosecondsFor
"
"
call
this
.
timeZone
.
getOffsetNanosecondsFor
"
"
get
this
.
timeZone
.
getPossibleInstantsFor
"
"
call
this
.
timeZone
.
getPossibleInstantsFor
"
"
get
this
.
timeZone
.
getOffsetNanosecondsFor
"
"
call
this
.
timeZone
.
getOffsetNanosecondsFor
"
]
;
const
actual
=
[
]
;
const
options
=
TemporalHelpers
.
propertyBagObserver
(
actual
{
smallestUnit
:
"
nanoseconds
"
roundingMode
:
"
halfExpand
"
roundingIncrement
:
1
}
"
options
"
)
;
const
instance
=
new
Temporal
.
ZonedDateTime
(
988786472_987_654_321n
TemporalHelpers
.
timeZoneObserver
(
actual
"
this
.
timeZone
"
)
TemporalHelpers
.
calendarObserver
(
actual
"
this
.
calendar
"
)
)
;
actual
.
splice
(
0
)
;
instance
.
round
(
options
)
;
assert
.
compareArray
(
actual
expected
"
order
of
operations
"
)
;
reportCompare
(
0
0
)
;
