const
earlier
=
new
Temporal
.
ZonedDateTime
(
1546935756_123_456_789n
"
UTC
"
)
;
const
later
=
new
Temporal
.
ZonedDateTime
(
1631018380_987_654_289n
"
UTC
"
)
;
const
expected
=
[
[
"
years
"
[
3
]
[
-
3
]
]
[
"
months
"
[
0
32
]
[
0
-
32
]
]
[
"
weeks
"
[
0
0
139
]
[
0
0
-
139
]
]
[
"
days
"
[
0
0
0
973
]
[
0
0
0
-
973
]
]
[
"
hours
"
[
0
0
0
0
23356
]
[
0
0
0
0
-
23356
]
]
[
"
minutes
"
[
0
0
0
0
23356
17
]
[
0
0
0
0
-
23356
-
17
]
]
[
"
seconds
"
[
0
0
0
0
23356
17
5
]
[
0
0
0
0
-
23356
-
17
-
5
]
]
[
"
milliseconds
"
[
0
0
0
0
23356
17
4
864
]
[
0
0
0
0
-
23356
-
17
-
4
-
864
]
]
[
"
microseconds
"
[
0
0
0
0
23356
17
4
864
198
]
[
0
0
0
0
-
23356
-
17
-
4
-
864
-
198
]
]
[
"
nanoseconds
"
[
0
0
0
0
23356
17
4
864
197
500
]
[
0
0
0
0
-
23356
-
17
-
4
-
864
-
197
-
500
]
]
]
;
const
roundingMode
=
"
halfExpand
"
;
expected
.
forEach
(
(
[
smallestUnit
expectedPositive
expectedNegative
]
)
=
>
{
const
[
py
pm
=
0
pw
=
0
pd
=
0
ph
=
0
pmin
=
0
ps
=
0
pms
=
0
p
s
=
0
pns
=
0
]
=
expectedPositive
;
const
[
ny
nm
=
0
nw
=
0
nd
=
0
nh
=
0
nmin
=
0
ns
=
0
nms
=
0
n
s
=
0
nns
=
0
]
=
expectedNegative
;
TemporalHelpers
.
assertDuration
(
earlier
.
until
(
later
{
smallestUnit
roundingMode
}
)
py
pm
pw
pd
ph
pmin
ps
pms
p
s
pns
rounds
to
{
smallestUnit
}
(
roundingMode
=
{
roundingMode
}
positive
case
)
)
;
TemporalHelpers
.
assertDuration
(
later
.
until
(
earlier
{
smallestUnit
roundingMode
}
)
ny
nm
nw
nd
nh
nmin
ns
nms
n
s
nns
rounds
to
{
smallestUnit
}
(
rounding
mode
=
{
roundingMode
}
negative
case
)
)
;
}
)
;
reportCompare
(
0
0
)
;
