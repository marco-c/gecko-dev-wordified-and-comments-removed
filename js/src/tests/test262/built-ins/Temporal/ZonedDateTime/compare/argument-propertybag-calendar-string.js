const
dateFromFieldsOriginal
=
Object
.
getOwnPropertyDescriptor
(
Temporal
.
Calendar
.
prototype
"
dateFromFields
"
)
;
Object
.
defineProperty
(
Temporal
.
Calendar
.
prototype
"
dateFromFields
"
{
configurable
:
true
enumerable
:
false
get
(
)
{
TemporalHelpers
.
assertUnreachable
(
"
dateFromFields
should
not
be
looked
up
"
)
;
}
}
)
;
const
calendar
=
"
iso8601
"
;
const
timeZone
=
new
Temporal
.
TimeZone
(
"
UTC
"
)
;
const
datetime
=
new
Temporal
.
ZonedDateTime
(
0n
timeZone
)
;
const
arg
=
{
year
:
1970
monthCode
:
"
M01
"
day
:
1
timeZone
calendar
}
;
const
result1
=
Temporal
.
ZonedDateTime
.
compare
(
arg
datetime
)
;
assert
.
sameValue
(
result1
0
Calendar
created
from
string
"
{
arg
}
"
(
first
argument
)
)
;
const
result2
=
Temporal
.
ZonedDateTime
.
compare
(
datetime
arg
)
;
assert
.
sameValue
(
result2
0
Calendar
created
from
string
"
{
arg
}
"
(
second
argument
)
)
;
Object
.
defineProperty
(
Temporal
.
Calendar
.
prototype
"
dateFromFields
"
dateFromFieldsOriginal
)
;
reportCompare
(
0
0
)
;
