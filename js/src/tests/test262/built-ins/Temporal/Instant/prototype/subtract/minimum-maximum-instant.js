let
min
=
new
Temporal
.
Instant
(
-
86_40000_00000_00000_00000n
)
;
let
max
=
new
Temporal
.
Instant
(
86_40000_00000_00000_00000n
)
;
let
zero
=
Temporal
.
Duration
.
from
(
{
nanoseconds
:
0
}
)
;
let
one
=
Temporal
.
Duration
.
from
(
{
nanoseconds
:
1
}
)
;
let
minusOne
=
Temporal
.
Duration
.
from
(
{
nanoseconds
:
-
1
}
)
;
assert
.
sameValue
(
min
.
subtract
(
zero
)
.
epochNanoseconds
min
.
epochNanoseconds
)
;
assert
.
sameValue
(
max
.
subtract
(
zero
)
.
epochNanoseconds
max
.
epochNanoseconds
)
;
assert
.
throws
(
RangeError
(
)
=
>
min
.
subtract
(
one
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
max
.
subtract
(
minusOne
)
)
;
assert
.
sameValue
(
min
.
subtract
(
minusOne
)
.
epochNanoseconds
min
.
epochNanoseconds
+
1n
)
;
assert
.
sameValue
(
max
.
subtract
(
one
)
.
epochNanoseconds
max
.
epochNanoseconds
-
1n
)
;
assert
.
sameValue
(
min
.
subtract
(
{
nanoseconds
:
-
86_40000_00000_00000_00000
*
2
}
)
.
epochNanoseconds
max
.
epochNanoseconds
)
;
assert
.
sameValue
(
min
.
subtract
(
{
microseconds
:
-
8640_00000_00000_00000
*
2
}
)
.
epochNanoseconds
max
.
epochNanoseconds
)
;
assert
.
sameValue
(
min
.
subtract
(
{
milliseconds
:
-
8_64000_00000_00000
*
2
}
)
.
epochNanoseconds
max
.
epochNanoseconds
)
;
assert
.
sameValue
(
min
.
subtract
(
{
seconds
:
-
864_00000_00000
*
2
}
)
.
epochNanoseconds
max
.
epochNanoseconds
)
;
assert
.
sameValue
(
max
.
subtract
(
{
nanoseconds
:
86_40000_00000_00000_00000
*
2
}
)
.
epochNanoseconds
min
.
epochNanoseconds
)
;
assert
.
sameValue
(
max
.
subtract
(
{
microseconds
:
8640_00000_00000_00000
*
2
}
)
.
epochNanoseconds
min
.
epochNanoseconds
)
;
assert
.
sameValue
(
max
.
subtract
(
{
milliseconds
:
8_64000_00000_00000
*
2
}
)
.
epochNanoseconds
min
.
epochNanoseconds
)
;
assert
.
sameValue
(
max
.
subtract
(
{
seconds
:
864_00000_00000
*
2
}
)
.
epochNanoseconds
min
.
epochNanoseconds
)
;
reportCompare
(
0
0
)
;
