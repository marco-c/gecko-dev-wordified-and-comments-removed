for
(
const
options
of
[
undefined
{
}
{
overflow
:
"
constrain
"
}
]
)
{
TemporalHelpers
.
assertPlainTime
(
Temporal
.
PlainTime
.
from
(
{
hour
:
23
minute
:
59
second
:
60
}
options
)
23
59
59
0
0
0
)
;
TemporalHelpers
.
assertPlainTime
(
Temporal
.
PlainTime
.
from
(
{
hour
:
12
minute
:
30
second
:
60
}
options
)
12
30
59
0
0
0
)
;
TemporalHelpers
.
assertPlainTime
(
Temporal
.
PlainTime
.
from
(
{
hour
:
23
minute
:
59
second
:
60
millisecond
:
170
}
options
)
23
59
59
170
0
0
)
;
}
const
options
=
{
overflow
:
"
reject
"
}
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
PlainTime
.
from
(
{
hour
:
23
minute
:
59
second
:
60
}
options
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
PlainTime
.
from
(
{
hour
:
12
minute
:
30
second
:
60
}
options
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
PlainTime
.
from
(
{
hour
:
23
minute
:
59
second
:
60
millisecond
:
170
}
options
)
)
;
reportCompare
(
0
0
)
;
