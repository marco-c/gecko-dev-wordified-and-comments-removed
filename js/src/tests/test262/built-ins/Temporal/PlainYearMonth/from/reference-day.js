const
result1
=
Temporal
.
PlainYearMonth
.
from
(
{
year
:
2023
monthCode
:
"
M01
"
day
:
13
}
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result1
2023
1
"
M01
"
"
reference
day
is
1
even
if
day
is
given
"
undefined
undefined
1
)
;
const
result2
=
Temporal
.
PlainYearMonth
.
from
(
{
year
:
2021
monthCode
:
"
M02
"
day
:
50
}
{
overflow
:
"
constrain
"
}
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result2
2021
2
"
M02
"
"
reference
day
is
1
even
if
day
is
out
of
range
(
overflow
constrain
)
"
undefined
undefined
1
)
;
const
result3
=
Temporal
.
PlainYearMonth
.
from
(
{
year
:
2021
monthCode
:
"
M02
"
day
:
50
}
{
overflow
:
"
reject
"
}
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result3
2021
2
"
M02
"
"
reference
day
is
1
even
if
day
is
out
of
range
(
overflow
reject
)
"
undefined
undefined
1
)
;
reportCompare
(
0
0
)
;
