const
actual
=
[
]
;
const
expected
=
[
"
ownKeys
options
"
"
getOwnPropertyDescriptor
options
.
extra
"
"
get
options
.
extra
"
"
get
options
.
overflow
"
"
getOwnPropertyDescriptor
options
.
overflow
"
]
;
const
options
=
TemporalHelpers
.
propertyBagObserver
(
actual
{
extra
:
5
}
"
options
"
)
;
class
CustomCalendar
extends
Temporal
.
Calendar
{
constructor
(
)
{
super
(
"
iso8601
"
)
;
}
dateAdd
(
date
duration
options
)
{
const
result
=
super
.
dateAdd
(
date
duration
options
)
;
options
.
overflow
=
'
meatloaf
'
;
return
result
;
}
yearMonthFromFields
(
.
.
.
args
)
{
assert
.
sameValue
(
args
.
length
2
"
args
.
length
"
)
;
assert
.
sameValue
(
typeof
args
[
0
]
"
object
"
"
args
[
0
]
"
)
;
assert
.
notSameValue
(
args
[
1
]
options
"
args
[
1
]
"
)
;
return
super
.
yearMonthFromFields
(
.
.
.
args
)
;
}
}
const
plainYearMonth
=
new
Temporal
.
PlainYearMonth
(
2000
3
new
CustomCalendar
(
)
)
;
const
result
=
plainYearMonth
.
add
(
{
months
:
5
}
options
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
2000
8
"
M08
"
)
;
assert
.
compareArray
(
actual
expected
"
extra
field
options
object
order
of
operations
"
)
;
reportCompare
(
0
0
)
;
