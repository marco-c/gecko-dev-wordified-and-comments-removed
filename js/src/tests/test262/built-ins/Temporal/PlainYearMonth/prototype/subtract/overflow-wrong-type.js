const
yearmonth
=
new
Temporal
.
PlainYearMonth
(
2000
5
)
;
const
duration
=
new
Temporal
.
Duration
(
1
1
)
;
assert
.
throws
(
RangeError
(
)
=
>
yearmonth
.
subtract
(
duration
{
overflow
:
null
}
)
"
null
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
yearmonth
.
subtract
(
duration
{
overflow
:
true
}
)
"
true
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
yearmonth
.
subtract
(
duration
{
overflow
:
false
}
)
"
false
"
)
;
assert
.
throws
(
TypeError
(
)
=
>
yearmonth
.
subtract
(
duration
{
overflow
:
Symbol
(
)
}
)
"
symbol
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
yearmonth
.
subtract
(
duration
{
overflow
:
2
}
)
"
number
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
yearmonth
.
subtract
(
duration
{
overflow
:
2n
}
)
"
bigint
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
yearmonth
.
subtract
(
duration
{
overflow
:
{
}
}
)
"
plain
object
"
)
;
const
expected
=
[
"
get
overflow
.
toString
"
"
call
overflow
.
toString
"
"
get
overflow
.
toString
"
"
call
overflow
.
toString
"
]
;
const
actual
=
[
]
;
const
observer
=
TemporalHelpers
.
toPrimitiveObserver
(
actual
"
constrain
"
"
overflow
"
)
;
const
result
=
yearmonth
.
subtract
(
duration
{
overflow
:
observer
}
)
;
TemporalHelpers
.
assertPlainYearMonth
(
result
1999
4
"
M04
"
"
object
with
toString
"
)
;
assert
.
compareArray
(
actual
expected
"
order
of
operations
"
)
;
reportCompare
(
0
0
)
;
