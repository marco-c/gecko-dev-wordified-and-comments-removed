const
expected
=
[
"
get
fields
.
days
"
"
get
fields
.
days
.
valueOf
"
"
call
fields
.
days
.
valueOf
"
"
get
fields
.
hours
"
"
get
fields
.
hours
.
valueOf
"
"
call
fields
.
hours
.
valueOf
"
"
get
fields
.
microseconds
"
"
get
fields
.
microseconds
.
valueOf
"
"
call
fields
.
microseconds
.
valueOf
"
"
get
fields
.
milliseconds
"
"
get
fields
.
milliseconds
.
valueOf
"
"
call
fields
.
milliseconds
.
valueOf
"
"
get
fields
.
minutes
"
"
get
fields
.
minutes
.
valueOf
"
"
call
fields
.
minutes
.
valueOf
"
"
get
fields
.
months
"
"
get
fields
.
months
.
valueOf
"
"
call
fields
.
months
.
valueOf
"
"
get
fields
.
nanoseconds
"
"
get
fields
.
nanoseconds
.
valueOf
"
"
call
fields
.
nanoseconds
.
valueOf
"
"
get
fields
.
seconds
"
"
get
fields
.
seconds
.
valueOf
"
"
call
fields
.
seconds
.
valueOf
"
"
get
fields
.
weeks
"
"
get
fields
.
weeks
.
valueOf
"
"
call
fields
.
weeks
.
valueOf
"
"
get
fields
.
years
"
"
get
fields
.
years
.
valueOf
"
"
call
fields
.
years
.
valueOf
"
"
get
this
.
calendar
.
dateAdd
"
"
get
this
.
calendar
.
dateFromFields
"
"
get
this
.
calendar
.
fields
"
"
get
this
.
calendar
.
yearMonthFromFields
"
"
call
this
.
calendar
.
fields
"
"
get
this
.
calendar
.
monthCode
"
"
call
this
.
calendar
.
monthCode
"
"
get
this
.
calendar
.
year
"
"
call
this
.
calendar
.
year
"
"
call
this
.
calendar
.
dateFromFields
"
"
ownKeys
options
"
"
getOwnPropertyDescriptor
options
.
overflow
"
"
get
options
.
overflow
"
"
call
this
.
calendar
.
dateAdd
"
"
get
options
.
overflow
"
"
get
options
.
overflow
.
toString
"
"
call
options
.
overflow
.
toString
"
"
get
this
.
calendar
.
monthCode
"
"
call
this
.
calendar
.
monthCode
"
"
get
this
.
calendar
.
year
"
"
call
this
.
calendar
.
year
"
"
call
this
.
calendar
.
yearMonthFromFields
"
"
get
options
.
overflow
.
toString
"
"
call
options
.
overflow
.
toString
"
]
;
const
actual
=
[
]
;
const
calendar
=
TemporalHelpers
.
calendarObserver
(
actual
"
this
.
calendar
"
)
;
const
instance
=
new
Temporal
.
PlainYearMonth
(
2000
5
calendar
)
;
actual
.
splice
(
0
)
;
const
fields
=
TemporalHelpers
.
propertyBagObserver
(
actual
{
years
:
1
months
:
1
weeks
:
1
days
:
1
hours
:
1
minutes
:
1
seconds
:
1
milliseconds
:
1
microseconds
:
1
nanoseconds
:
1
}
"
fields
"
)
;
const
options
=
TemporalHelpers
.
propertyBagObserver
(
actual
{
overflow
:
"
constrain
"
}
"
options
"
)
;
instance
.
add
(
fields
options
)
;
assert
.
compareArray
(
actual
expected
"
order
of
operations
"
)
;
actual
.
splice
(
0
)
;
const
noCalendarExpected
=
[
"
get
fields
.
days
"
"
get
fields
.
days
.
valueOf
"
"
call
fields
.
days
.
valueOf
"
"
get
fields
.
hours
"
"
get
fields
.
hours
.
valueOf
"
"
call
fields
.
hours
.
valueOf
"
"
get
fields
.
microseconds
"
"
get
fields
.
microseconds
.
valueOf
"
"
call
fields
.
microseconds
.
valueOf
"
"
get
fields
.
milliseconds
"
"
get
fields
.
milliseconds
.
valueOf
"
"
call
fields
.
milliseconds
.
valueOf
"
"
get
fields
.
minutes
"
"
get
fields
.
minutes
.
valueOf
"
"
call
fields
.
minutes
.
valueOf
"
"
get
fields
.
months
"
"
get
fields
.
nanoseconds
"
"
get
fields
.
nanoseconds
.
valueOf
"
"
call
fields
.
nanoseconds
.
valueOf
"
"
get
fields
.
seconds
"
"
get
fields
.
seconds
.
valueOf
"
"
call
fields
.
seconds
.
valueOf
"
"
get
fields
.
weeks
"
"
get
fields
.
years
"
"
get
this
.
calendar
.
dateFromFields
"
"
get
this
.
calendar
.
fields
"
"
get
this
.
calendar
.
yearMonthFromFields
"
"
call
this
.
calendar
.
fields
"
"
get
this
.
calendar
.
monthCode
"
"
call
this
.
calendar
.
monthCode
"
"
get
this
.
calendar
.
year
"
"
call
this
.
calendar
.
year
"
"
call
this
.
calendar
.
dateFromFields
"
"
ownKeys
options
"
"
getOwnPropertyDescriptor
options
.
overflow
"
"
get
options
.
overflow
"
"
get
options
.
overflow
"
"
get
options
.
overflow
.
toString
"
"
call
options
.
overflow
.
toString
"
"
get
this
.
calendar
.
monthCode
"
"
call
this
.
calendar
.
monthCode
"
"
get
this
.
calendar
.
year
"
"
call
this
.
calendar
.
year
"
"
call
this
.
calendar
.
yearMonthFromFields
"
"
get
options
.
overflow
.
toString
"
"
call
options
.
overflow
.
toString
"
]
;
const
noCalendarFields
=
TemporalHelpers
.
propertyBagObserver
(
actual
{
days
:
1
hours
:
1
minutes
:
1
seconds
:
1
milliseconds
:
1
microseconds
:
1
nanoseconds
:
1
}
"
fields
"
)
;
instance
.
add
(
noCalendarFields
options
)
;
assert
.
compareArray
(
actual
noCalendarExpected
"
order
of
operations
with
no
calendar
units
"
)
;
actual
.
splice
(
0
)
;
reportCompare
(
0
0
)
;
