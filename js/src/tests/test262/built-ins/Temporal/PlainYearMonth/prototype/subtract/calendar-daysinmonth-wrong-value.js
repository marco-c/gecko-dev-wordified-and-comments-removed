const
actual
=
[
]
;
class
CalendarDaysInMonthWrongValue
extends
Temporal
.
Calendar
{
constructor
(
badValue
)
{
super
(
"
iso8601
"
)
;
this
.
_badValue
=
badValue
;
}
dateFromFields
(
fields
options
)
{
actual
.
push
(
"
call
dateFromFields
"
)
;
return
super
.
dateFromFields
(
fields
options
)
;
}
daysInMonth
(
)
{
return
this
.
_badValue
;
}
}
const
duration
=
new
Temporal
.
Duration
(
1
1
)
;
[
Infinity
-
Infinity
-
42
]
.
forEach
(
(
badValue
)
=
>
{
const
calendar
=
new
CalendarDaysInMonthWrongValue
(
badValue
)
;
const
yearMonth
=
new
Temporal
.
PlainYearMonth
(
2000
5
calendar
)
;
assert
.
throws
(
RangeError
(
)
=
>
yearMonth
.
subtract
(
duration
)
daysInMonth
{
badValue
}
)
;
assert
.
compareArray
(
actual
[
]
"
dateFromFields
not
called
"
)
;
}
)
;
[
Symbol
(
'
foo
'
)
31n
]
.
forEach
(
(
badValue
)
=
>
{
const
calendar
=
new
CalendarDaysInMonthWrongValue
(
badValue
)
;
const
yearMonth
=
new
Temporal
.
PlainYearMonth
(
2000
5
calendar
)
;
assert
.
throws
(
TypeError
(
)
=
>
yearMonth
.
subtract
(
duration
)
daysInMonth
{
typeof
badValue
}
)
;
assert
.
compareArray
(
actual
[
]
"
dateFromFields
not
called
"
)
;
}
)
;
reportCompare
(
0
0
)
;
