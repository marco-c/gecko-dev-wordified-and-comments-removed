const
validValues
=
[
new
Temporal
.
PlainDate
(
2000
5
2
)
"
2000
-
05
-
02
"
]
;
validValues
.
forEach
(
(
value
)
=
>
{
const
explicit
=
Temporal
.
PlainDate
.
from
(
value
{
overflow
:
undefined
}
)
;
TemporalHelpers
.
assertPlainDate
(
explicit
2000
5
"
M05
"
2
"
overflow
is
ignored
"
)
;
const
implicit
=
Temporal
.
PlainDate
.
from
(
value
{
}
)
;
TemporalHelpers
.
assertPlainDate
(
implicit
2000
5
"
M05
"
2
"
overflow
is
ignored
"
)
;
const
lambda
=
Temporal
.
PlainDate
.
from
(
value
(
)
=
>
{
}
)
;
TemporalHelpers
.
assertPlainDate
(
lambda
2000
5
"
M05
"
2
"
overflow
is
ignored
"
)
;
}
)
;
const
propertyBag
=
{
year
:
2000
month
:
13
day
:
34
}
;
const
explicit
=
Temporal
.
PlainDate
.
from
(
propertyBag
{
overflow
:
undefined
}
)
;
TemporalHelpers
.
assertPlainDate
(
explicit
2000
12
"
M12
"
31
"
default
overflow
is
constrain
"
)
;
const
implicit
=
Temporal
.
PlainDate
.
from
(
propertyBag
{
}
)
;
TemporalHelpers
.
assertPlainDate
(
implicit
2000
12
"
M12
"
31
"
default
overflow
is
constrain
"
)
;
const
lambda
=
Temporal
.
PlainDate
.
from
(
propertyBag
(
)
=
>
{
}
)
;
TemporalHelpers
.
assertPlainDate
(
lambda
2000
12
"
M12
"
31
"
default
overflow
is
constrain
"
)
;
reportCompare
(
0
0
)
;
