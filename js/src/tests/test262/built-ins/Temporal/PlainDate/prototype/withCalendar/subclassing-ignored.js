const
customCalendar
=
{
era
(
)
{
return
undefined
;
}
eraYear
(
)
{
return
undefined
;
}
year
(
)
{
return
1900
;
}
month
(
)
{
return
2
;
}
monthCode
(
)
{
return
"
M02
"
;
}
day
(
)
{
return
5
;
}
id
:
"
custom
-
calendar
"
toString
(
)
{
return
"
custom
-
calendar
"
;
}
dateAdd
(
)
{
}
dateFromFields
(
)
{
}
dateUntil
(
)
{
}
dayOfWeek
(
)
{
}
dayOfYear
(
)
{
}
daysInMonth
(
)
{
}
daysInWeek
(
)
{
}
daysInYear
(
)
{
}
fields
(
)
{
}
inLeapYear
(
)
{
}
mergeFields
(
)
{
}
monthDayFromFields
(
)
{
}
monthsInYear
(
)
{
}
weekOfYear
(
)
{
}
yearMonthFromFields
(
)
{
}
yearOfWeek
(
)
{
}
}
;
TemporalHelpers
.
checkSubclassingIgnored
(
Temporal
.
PlainDate
[
2000
5
2
]
"
withCalendar
"
[
customCalendar
]
(
result
)
=
>
{
TemporalHelpers
.
assertPlainDate
(
result
1900
2
"
M02
"
5
)
;
assert
.
sameValue
(
result
.
getCalendar
(
)
customCalendar
"
calendar
result
"
)
;
}
)
;
reportCompare
(
0
0
)
;
