const
fieldsOriginal
=
Object
.
getOwnPropertyDescriptor
(
Temporal
.
Calendar
.
prototype
"
fields
"
)
;
Object
.
defineProperty
(
Temporal
.
Calendar
.
prototype
"
fields
"
{
configurable
:
true
enumerable
:
false
get
(
)
{
TemporalHelpers
.
assertUnreachable
(
"
fields
should
not
be
looked
up
"
)
;
}
}
)
;
const
mergeFieldsOriginal
=
Object
.
getOwnPropertyDescriptor
(
Temporal
.
Calendar
.
prototype
"
mergeFields
"
)
;
Object
.
defineProperty
(
Temporal
.
Calendar
.
prototype
"
mergeFields
"
{
configurable
:
true
enumerable
:
false
get
(
)
{
TemporalHelpers
.
assertUnreachable
(
"
mergeFields
should
not
be
looked
up
"
)
;
}
}
)
;
const
dateFromFieldsOriginal
=
Object
.
getOwnPropertyDescriptor
(
Temporal
.
Calendar
.
prototype
"
dateFromFields
"
)
;
Object
.
defineProperty
(
Temporal
.
Calendar
.
prototype
"
dateFromFields
"
{
configurable
:
true
enumerable
:
false
get
(
)
{
TemporalHelpers
.
assertUnreachable
(
"
dateFromFields
should
not
be
looked
up
"
)
;
}
}
)
;
const
instance
=
new
Temporal
.
PlainDate
(
2000
5
2
"
iso8601
"
)
;
instance
.
with
(
{
year
:
2001
}
)
;
Object
.
defineProperty
(
Temporal
.
Calendar
.
prototype
"
fields
"
fieldsOriginal
)
;
Object
.
defineProperty
(
Temporal
.
Calendar
.
prototype
"
mergeFields
"
mergeFieldsOriginal
)
;
Object
.
defineProperty
(
Temporal
.
Calendar
.
prototype
"
dateFromFields
"
dateFromFieldsOriginal
)
;
reportCompare
(
0
0
)
;
