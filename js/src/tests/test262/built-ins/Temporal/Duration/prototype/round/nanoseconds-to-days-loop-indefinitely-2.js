class
StopExecution
extends
Error
{
}
const
stopAt
=
1000
;
let
count
=
0
;
let
tz
=
new
class
extends
Temporal
.
TimeZone
{
getPossibleInstantsFor
(
dt
)
{
count
+
=
1
;
if
(
count
=
=
=
stopAt
)
{
throw
new
StopExecution
(
)
;
}
if
(
count
<
4
)
{
TemporalHelpers
.
assertPlainDateTime
(
dt
1970
1
"
M01
"
2
0
0
0
0
0
0
)
;
}
else
{
TemporalHelpers
.
assertPlainDateTime
(
dt
1970
1
"
M01
"
3
0
0
0
0
0
0
)
;
}
return
[
new
Temporal
.
Instant
(
86400000000000n
)
]
;
}
}
(
"
UTC
"
)
;
let
zdt
=
new
Temporal
.
ZonedDateTime
(
0n
tz
)
;
let
duration
=
Temporal
.
Duration
.
from
(
{
days
:
1
}
)
;
let
options
=
{
smallestUnit
:
"
days
"
relativeTo
:
zdt
}
;
assert
.
throws
(
StopExecution
(
)
=
>
duration
.
round
(
options
)
)
;
assert
.
sameValue
(
count
stopAt
)
;
reportCompare
(
0
0
)
;
