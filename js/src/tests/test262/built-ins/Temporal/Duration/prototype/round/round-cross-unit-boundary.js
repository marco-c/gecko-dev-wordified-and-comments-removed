const
relativeTo
=
new
Temporal
.
PlainDate
(
2022
1
1
)
;
const
roundingMode
=
"
expand
"
;
{
const
duration
=
new
Temporal
.
Duration
(
1
11
0
24
)
;
const
result
=
duration
.
round
(
{
smallestUnit
:
"
months
"
roundingMode
relativeTo
}
)
;
TemporalHelpers
.
assertDuration
(
result
2
0
0
0
0
0
0
0
0
0
"
1
year
12
months
balances
to
2
years
"
)
;
}
{
const
duration
=
new
Temporal
.
Duration
(
-
1
-
11
0
-
24
)
;
const
result
=
duration
.
round
(
{
smallestUnit
:
"
months
"
roundingMode
relativeTo
}
)
;
TemporalHelpers
.
assertDuration
(
result
-
2
0
0
0
0
0
0
0
0
0
"
-
1
year
-
12
months
balances
to
-
2
years
"
)
;
}
{
const
duration
=
new
Temporal
.
Duration
(
0
0
0
0
1
59
59
900
)
;
const
result
=
duration
.
round
(
{
smallestUnit
:
"
seconds
"
roundingMode
}
)
;
TemporalHelpers
.
assertDuration
(
result
0
0
0
0
2
0
0
0
0
0
"
1
:
59
:
60
balances
to
2
hours
"
)
;
}
{
const
duration
=
new
Temporal
.
Duration
(
0
0
0
0
-
1
-
59
-
59
-
900
)
;
const
result
=
duration
.
round
(
{
smallestUnit
:
"
seconds
"
roundingMode
}
)
;
TemporalHelpers
.
assertDuration
(
result
0
0
0
0
-
2
0
0
0
0
0
"
-
1
:
59
:
60
balances
to
-
2
hours
"
)
;
}
{
const
duration
=
new
Temporal
.
Duration
(
0
11
0
24
)
;
const
result
=
duration
.
round
(
{
smallestUnit
:
"
months
"
roundingMode
relativeTo
}
)
;
TemporalHelpers
.
assertDuration
(
result
0
12
0
0
0
0
0
0
0
0
"
12
months
stays
as
is
"
)
;
}
reportCompare
(
0
0
)
;
