const
d
=
new
Temporal
.
Duration
(
5
5
5
5
5
5
5
5
5
5
)
;
const
relativeTo
=
Temporal
.
PlainDate
.
from
(
"
2020
-
01
-
01
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
hours
"
roundingIncrement
:
11
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
minutes
"
roundingIncrement
:
29
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
seconds
"
roundingIncrement
:
29
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
milliseconds
"
roundingIncrement
:
29
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
microseconds
"
roundingIncrement
:
29
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
nanoseconds
"
roundingIncrement
:
29
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
hours
"
roundingIncrement
:
24
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
minutes
"
roundingIncrement
:
60
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
seconds
"
roundingIncrement
:
60
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
milliseconds
"
roundingIncrement
:
1000
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
microseconds
"
roundingIncrement
:
1000
}
)
)
;
assert
.
throws
(
RangeError
(
)
=
>
d
.
round
(
{
relativeTo
smallestUnit
:
"
nanoseconds
"
roundingIncrement
:
1000
}
)
)
;
reportCompare
(
0
0
)
;
