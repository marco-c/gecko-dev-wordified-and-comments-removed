const
duration1
=
new
Temporal
.
Duration
(
0
0
7
0
12
)
;
const
duration2
=
new
Temporal
.
Duration
(
0
0
0
-
1
)
;
{
const
tz
=
new
(
class
extends
Temporal
.
TimeZone
{
getPossibleInstantsFor
(
dateTime
)
{
return
super
.
getPossibleInstantsFor
(
dateTime
.
add
(
{
days
:
3
}
)
)
;
}
}
)
(
"
UTC
"
)
;
const
relativeTo
=
new
Temporal
.
ZonedDateTime
(
0n
tz
)
;
assert
.
throws
(
RangeError
(
)
=
>
duration1
.
subtract
(
duration2
{
relativeTo
}
)
"
Calendar
calculation
where
more
than
2
days
correction
is
needed
should
cause
RangeError
"
)
;
}
{
const
cal
=
new
(
class
extends
Temporal
.
Calendar
{
dateUntil
(
one
two
options
)
{
return
super
.
dateUntil
(
one
two
options
)
.
negated
(
)
;
}
}
)
(
"
iso8601
"
)
;
const
relativeTo
=
new
Temporal
.
ZonedDateTime
(
0n
"
UTC
"
cal
)
;
assert
.
throws
(
RangeError
(
)
=
>
duration1
.
subtract
(
duration2
{
relativeTo
}
)
"
Calendar
calculation
causing
mixed
-
sign
values
should
cause
RangeError
"
)
;
}
reportCompare
(
0
0
)
;
