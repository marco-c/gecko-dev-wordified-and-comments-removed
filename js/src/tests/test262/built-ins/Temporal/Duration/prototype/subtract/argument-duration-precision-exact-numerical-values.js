const
instance
=
new
Temporal
.
Duration
(
)
;
const
balanceFailCases
=
[
[
{
milliseconds
:
4503599627370497_000
microseconds
:
4503599627370495_000000
}
"
case
where
floating
point
inaccuracy
brings
total
below
limit
positive
"
]
[
{
milliseconds
:
-
4503599627370497_000
microseconds
:
-
4503599627370495_000000
}
"
case
where
floating
point
inaccuracy
brings
total
below
limit
negative
"
]
]
;
for
(
const
[
arg
descr
]
of
balanceFailCases
)
{
assert
.
throws
(
RangeError
(
)
=
>
instance
.
subtract
(
arg
)
descr
+
'
:
(
(
x
)
)
operation
after
balancing
brings
total
over
limit
'
)
}
const
balanceSuccessCases
=
[
[
{
seconds
:
2
milliseconds
:
4503599627370496_500
microseconds
:
4503599627370493_500000
}
"
-
PT9007199254740991
.
89056S
"
"
case
where
floating
point
inaccuracy
brings
total
below
limit
positive
"
]
[
{
seconds
:
-
2
milliseconds
:
-
4503599627370496_500
microseconds
:
-
4503599627370493_500000
}
"
PT9007199254740991
.
89056S
"
"
case
where
floating
point
inaccuracy
brings
total
below
limit
negative
"
]
]
;
for
(
const
[
arg
string
descr
]
of
balanceSuccessCases
)
{
const
result
=
instance
.
subtract
(
arg
)
;
assert
.
sameValue
(
result
.
toString
(
)
string
descr
)
;
}
reportCompare
(
0
0
)
;
