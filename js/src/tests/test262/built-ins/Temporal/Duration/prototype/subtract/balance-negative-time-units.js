const
duration
=
new
Temporal
.
Duration
(
0
0
0
0
1
1
1
1
1
1
)
;
const
timeZone
=
new
Temporal
.
TimeZone
(
"
UTC
"
)
;
const
relativeTo
=
new
Temporal
.
ZonedDateTime
(
830998861_000_000_000n
timeZone
)
;
const
options
=
{
largestUnit
:
"
days
"
relativeTo
}
;
const
result1
=
duration
.
subtract
(
new
Temporal
.
Duration
(
0
0
0
0
0
0
0
0
0
2
)
options
)
;
TemporalHelpers
.
assertDuration
(
result1
0
0
0
0
1
1
1
1
0
999
"
nanoseconds
balance
"
)
;
const
result2
=
duration
.
subtract
(
new
Temporal
.
Duration
(
0
0
0
0
0
0
0
0
2
)
options
)
;
TemporalHelpers
.
assertDuration
(
result2
0
0
0
0
1
1
1
0
999
1
"
microseconds
balance
"
)
;
const
result3
=
duration
.
subtract
(
new
Temporal
.
Duration
(
0
0
0
0
0
0
0
2
)
options
)
;
TemporalHelpers
.
assertDuration
(
result3
0
0
0
0
1
1
0
999
1
1
"
milliseconds
balance
"
)
;
const
result4
=
duration
.
subtract
(
new
Temporal
.
Duration
(
0
0
0
0
0
0
2
)
options
)
;
TemporalHelpers
.
assertDuration
(
result4
0
0
0
0
1
0
59
1
1
1
"
seconds
balance
"
)
;
const
result5
=
duration
.
subtract
(
new
Temporal
.
Duration
(
0
0
0
0
0
2
)
options
)
;
TemporalHelpers
.
assertDuration
(
result5
0
0
0
0
0
59
1
1
1
1
"
minutes
balance
"
)
;
const
result6
=
duration
.
subtract
(
new
Temporal
.
Duration
(
0
0
0
0
2
)
options
)
;
TemporalHelpers
.
assertDuration
(
result6
0
0
0
0
0
-
58
-
58
-
998
-
998
-
999
"
hours
balance
"
)
;
reportCompare
(
0
0
)
;
