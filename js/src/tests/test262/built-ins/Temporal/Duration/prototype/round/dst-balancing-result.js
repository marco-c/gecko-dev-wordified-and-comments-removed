const
timeZone
=
TemporalHelpers
.
springForwardFallBackTimeZone
(
)
;
{
const
duration
=
new
Temporal
.
Duration
(
1
0
0
0
24
)
;
const
relativeTo
=
new
Temporal
.
ZonedDateTime
(
941184000_000_000_000n
timeZone
)
;
const
result
=
duration
.
round
(
{
largestUnit
:
"
years
"
relativeTo
}
)
;
TemporalHelpers
.
assertDuration
(
result
1
0
0
0
24
0
0
0
0
0
"
24
hours
does
not
balance
to
1
day
in
25
-
hour
day
"
)
;
}
{
const
duration
=
new
Temporal
.
Duration
(
0
0
0
0
24
0
0
0
0
5
)
;
const
relativeTo
=
new
Temporal
.
ZonedDateTime
(
972802800_000_000_000n
timeZone
)
;
const
result
=
duration
.
round
(
{
largestUnit
:
"
days
"
smallestUnit
:
"
minutes
"
roundingMode
:
"
expand
"
roundingIncrement
:
30
relativeTo
}
)
;
TemporalHelpers
.
assertDuration
(
result
0
0
0
0
24
30
0
0
0
0
"
24
hours
does
not
balance
after
rounding
to
1
day
in
25
-
hour
day
"
)
;
}
reportCompare
(
0
0
)
;
