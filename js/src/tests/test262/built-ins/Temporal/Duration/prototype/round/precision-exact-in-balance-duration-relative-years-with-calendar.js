let
calendar
=
new
class
extends
Temporal
.
Calendar
{
#
dateUntil
=
0
;
dateUntil
(
one
two
options
)
{
this
.
#
dateUntil
+
+
;
if
(
this
.
#
dateUntil
<
=
6
)
{
return
Temporal
.
Duration
.
from
(
{
months
:
1
}
)
;
}
if
(
this
.
#
dateUntil
=
=
=
7
)
{
return
Temporal
.
Duration
.
from
(
{
months
:
Number
.
MAX_SAFE_INTEGER
}
)
;
}
throw
new
Test262Error
(
"
dateUntil
called
more
times
than
expected
"
)
;
}
}
(
"
iso8601
"
)
;
let
date
=
new
Temporal
.
PlainDate
(
1970
1
1
calendar
)
;
let
duration
=
Temporal
.
Duration
.
from
(
{
years
:
0
months
:
Number
.
MAX_SAFE_INTEGER
+
4
}
)
;
let
result
=
duration
.
round
(
{
largestUnit
:
"
years
"
relativeTo
:
date
}
)
;
TemporalHelpers
.
assertDuration
(
result
6
9007199254740990
0
0
0
0
0
0
0
0
)
;
reportCompare
(
0
0
)
;
