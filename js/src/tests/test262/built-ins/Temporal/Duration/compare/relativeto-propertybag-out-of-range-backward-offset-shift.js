class
ShiftLonger24Hour
extends
Temporal
.
TimeZone
{
id
=
'
TestTimeZone
'
;
constructor
(
)
{
super
(
'
UTC
'
)
;
}
getOffsetNanosecondsFor
(
instant
)
{
return
0
;
}
getPossibleInstantsFor
(
plainDateTime
)
{
const
utc
=
new
Temporal
.
TimeZone
(
"
UTC
"
)
;
const
[
utcInstant
]
=
utc
.
getPossibleInstantsFor
(
plainDateTime
)
;
return
[
utcInstant
.
subtract
(
{
hours
:
12
nanoseconds
:
1
}
)
utcInstant
.
add
(
{
hours
:
12
}
)
utcInstant
]
;
}
}
const
timeZone
=
new
ShiftLonger24Hour
(
)
;
const
relativeTo
=
{
year
:
1970
month
:
1
day
:
1
hour
:
12
timeZone
}
;
const
duration1
=
new
Temporal
.
Duration
(
1
)
;
const
duration2
=
new
Temporal
.
Duration
(
2
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
Duration
.
compare
(
duration1
duration2
{
relativeTo
:
relativeTo
}
)
"
RangeError
should
be
thrown
"
)
;
reportCompare
(
0
0
)
;
