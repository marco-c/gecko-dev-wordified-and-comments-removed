const
fields
=
[
'
years
'
'
months
'
'
weeks
'
'
days
'
'
hours
'
'
minutes
'
'
seconds
'
'
milliseconds
'
'
microseconds
'
'
nanoseconds
'
]
;
fields
.
forEach
(
(
field
)
=
>
{
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
Duration
.
from
(
{
[
field
]
:
Infinity
}
)
)
;
}
)
;
let
calls
=
0
;
const
obj
=
{
valueOf
(
)
{
calls
+
+
;
return
Infinity
;
}
}
;
fields
.
forEach
(
(
field
)
=
>
{
calls
=
0
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
Duration
.
from
(
{
[
field
]
:
obj
}
)
)
;
assert
.
sameValue
(
calls
1
"
it
fails
after
fetching
the
primitive
value
"
)
;
}
)
;
reportCompare
(
0
0
)
;
