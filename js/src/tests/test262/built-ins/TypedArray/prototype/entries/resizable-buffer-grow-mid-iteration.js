for
(
let
ctor
of
ctors
)
{
const
rab
=
CreateRabForTest
(
ctor
)
;
const
fixedLength
=
new
ctor
(
rab
0
4
)
;
TestIterationAndResize
(
fixedLength
.
entries
(
)
[
[
0
0
]
[
1
2
]
[
2
4
]
[
3
6
]
]
rab
2
6
*
ctor
.
BYTES_PER_ELEMENT
)
;
}
for
(
let
ctor
of
ctors
)
{
const
rab
=
CreateRabForTest
(
ctor
)
;
const
fixedLengthWithOffset
=
new
ctor
(
rab
2
*
ctor
.
BYTES_PER_ELEMENT
2
)
;
TestIterationAndResize
(
fixedLengthWithOffset
.
entries
(
)
[
[
0
4
]
[
1
6
]
]
rab
2
6
*
ctor
.
BYTES_PER_ELEMENT
)
;
}
for
(
let
ctor
of
ctors
)
{
const
rab
=
CreateRabForTest
(
ctor
)
;
const
lengthTracking
=
new
ctor
(
rab
0
)
;
TestIterationAndResize
(
lengthTracking
.
entries
(
)
[
[
0
0
]
[
1
2
]
[
2
4
]
[
3
6
]
[
4
0
]
[
5
0
]
]
rab
2
6
*
ctor
.
BYTES_PER_ELEMENT
)
;
}
for
(
let
ctor
of
ctors
)
{
const
rab
=
CreateRabForTest
(
ctor
)
;
const
lengthTrackingWithOffset
=
new
ctor
(
rab
2
*
ctor
.
BYTES_PER_ELEMENT
)
;
TestIterationAndResize
(
lengthTrackingWithOffset
.
entries
(
)
[
[
0
4
]
[
1
6
]
[
2
0
]
[
3
0
]
]
rab
2
6
*
ctor
.
BYTES_PER_ELEMENT
)
;
}
reportCompare
(
0
0
)
;
