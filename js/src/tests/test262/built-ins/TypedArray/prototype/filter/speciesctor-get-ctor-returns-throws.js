var
callbackfn
=
function
(
)
{
return
true
;
}
;
testWithTypedArrayConstructors
(
function
(
TA
)
{
var
sample
=
new
TA
(
[
40
41
42
43
]
)
;
sample
.
constructor
=
42
;
assert
.
throws
(
TypeError
function
(
)
{
sample
.
filter
(
callbackfn
)
;
}
"
42
"
)
;
sample
.
constructor
=
"
1
"
;
assert
.
throws
(
TypeError
function
(
)
{
sample
.
filter
(
callbackfn
)
;
}
"
string
"
)
;
sample
.
constructor
=
null
;
assert
.
throws
(
TypeError
function
(
)
{
sample
.
filter
(
callbackfn
)
;
}
"
null
"
)
;
sample
.
constructor
=
NaN
;
assert
.
throws
(
TypeError
function
(
)
{
sample
.
filter
(
callbackfn
)
;
}
"
NaN
"
)
;
sample
.
constructor
=
false
;
assert
.
throws
(
TypeError
function
(
)
{
sample
.
filter
(
callbackfn
)
;
}
"
false
"
)
;
sample
.
constructor
=
Symbol
(
"
1
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
sample
.
filter
(
callbackfn
)
;
}
"
symbol
"
)
;
}
)
;
reportCompare
(
0
0
)
;
