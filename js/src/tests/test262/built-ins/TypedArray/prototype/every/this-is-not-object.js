var
every
=
TypedArray
.
prototype
.
every
;
var
callbackfn
=
function
(
)
{
}
;
assert
.
throws
(
TypeError
function
(
)
{
every
.
call
(
undefined
callbackfn
)
;
}
"
this
is
undefined
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
every
.
call
(
null
callbackfn
)
;
}
"
this
is
null
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
every
.
call
(
42
callbackfn
)
;
}
"
this
is
42
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
every
.
call
(
"
1
"
callbackfn
)
;
}
"
this
is
a
string
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
every
.
call
(
true
callbackfn
)
;
}
"
this
is
true
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
every
.
call
(
false
callbackfn
)
;
}
"
this
is
false
"
)
;
var
s
=
Symbol
(
"
s
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
every
.
call
(
s
callbackfn
)
;
}
"
this
is
a
Symbol
"
)
;
reportCompare
(
0
0
)
;
