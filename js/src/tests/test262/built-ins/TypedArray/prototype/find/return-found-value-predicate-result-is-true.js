testWithTypedArrayConstructors
(
function
(
TA
)
{
var
sample
=
new
TA
(
[
39
2
62
]
)
;
var
called
result
;
called
=
0
;
result
=
sample
.
find
(
function
(
)
{
called
+
+
;
return
true
;
}
)
;
assert
.
sameValue
(
result
39
"
returned
true
on
sample
[
0
]
"
)
;
assert
.
sameValue
(
called
1
"
predicate
was
called
once
"
)
;
called
=
0
;
result
=
sample
.
find
(
function
(
val
)
{
called
+
+
;
return
val
=
=
=
62
;
}
)
;
assert
.
sameValue
(
called
3
"
predicate
was
called
three
times
"
)
;
assert
.
sameValue
(
result
62
"
returned
true
on
sample
[
3
]
"
)
;
result
=
sample
.
find
(
function
(
)
{
return
"
string
"
;
}
)
;
assert
.
sameValue
(
result
39
"
ToBoolean
(
string
)
"
)
;
result
=
sample
.
find
(
function
(
)
{
return
{
}
;
}
)
;
assert
.
sameValue
(
result
39
"
ToBoolean
(
object
)
"
)
;
result
=
sample
.
find
(
function
(
)
{
return
Symbol
(
"
"
)
;
}
)
;
assert
.
sameValue
(
result
39
"
ToBoolean
(
symbol
)
"
)
;
result
=
sample
.
find
(
function
(
)
{
return
1
;
}
)
;
assert
.
sameValue
(
result
39
"
ToBoolean
(
number
)
"
)
;
result
=
sample
.
find
(
function
(
)
{
return
-
1
;
}
)
;
assert
.
sameValue
(
result
39
"
ToBoolean
(
negative
number
)
"
)
;
}
)
;
reportCompare
(
0
0
)
;
