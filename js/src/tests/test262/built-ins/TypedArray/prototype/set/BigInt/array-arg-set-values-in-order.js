testWithBigIntTypedArrayConstructors
(
function
(
TA
)
{
var
sample
=
new
TA
(
5
)
;
var
calls
=
[
]
;
var
obj
=
{
length
:
3
}
;
Object
.
defineProperty
(
obj
0
{
get
:
function
(
)
{
calls
.
push
(
0
)
;
calls
.
push
(
sample
.
join
(
)
)
;
return
42n
;
}
}
)
;
Object
.
defineProperty
(
obj
1
{
get
:
function
(
)
{
calls
.
push
(
1
)
;
calls
.
push
(
sample
.
join
(
)
)
;
return
43n
;
}
}
)
;
Object
.
defineProperty
(
obj
2
{
get
:
function
(
)
{
calls
.
push
(
2
)
;
calls
.
push
(
sample
.
join
(
)
)
;
return
44n
;
}
}
)
;
Object
.
defineProperty
(
obj
3
{
get
:
function
(
)
{
throw
new
Test262Error
(
"
Should
not
call
obj
[
3
]
"
)
;
}
}
)
;
sample
.
set
(
obj
1
)
;
assert
(
compareArray
(
sample
[
0n
42n
43n
44n
0n
]
)
"
values
are
set
for
src
length
"
)
;
assert
(
compareArray
(
calls
[
0
"
0
0
0
0
0
"
1
"
0
42
0
0
0
"
2
"
0
42
43
0
0
"
]
)
"
values
are
set
in
order
"
)
;
}
)
;
reportCompare
(
0
0
)
;
