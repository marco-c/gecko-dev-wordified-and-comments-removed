var
set
=
TypedArray
.
prototype
.
set
;
assert
.
throws
(
TypeError
function
(
)
{
set
.
call
(
{
}
[
]
)
;
}
"
this
is
an
Object
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
set
.
call
(
[
]
[
]
)
;
}
"
this
is
an
Array
"
)
;
var
ab1
=
new
ArrayBuffer
(
8
)
;
assert
.
throws
(
TypeError
function
(
)
{
set
.
call
(
ab1
[
]
)
;
}
"
this
is
an
ArrayBuffer
instance
"
)
;
var
dv1
=
new
DataView
(
new
ArrayBuffer
(
8
)
0
1
)
;
assert
.
throws
(
TypeError
function
(
)
{
set
.
call
(
dv1
[
]
)
;
}
"
this
is
a
DataView
instance
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
set
.
call
(
{
}
new
Int8Array
(
)
)
;
}
"
this
is
an
Object
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
set
.
call
(
[
]
new
Int8Array
(
)
)
;
}
"
this
is
an
Array
"
)
;
var
ab2
=
new
ArrayBuffer
(
8
)
;
assert
.
throws
(
TypeError
function
(
)
{
set
.
call
(
ab2
new
Int8Array
(
)
)
;
}
"
this
is
an
ArrayBuffer
instance
"
)
;
var
dv2
=
new
DataView
(
new
ArrayBuffer
(
8
)
0
1
)
;
assert
.
throws
(
TypeError
function
(
)
{
set
.
call
(
dv2
new
Int8Array
(
)
)
;
}
"
this
is
a
DataView
instance
"
)
;
reportCompare
(
0
0
)
;
