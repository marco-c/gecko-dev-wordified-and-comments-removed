var
rab
=
new
ArrayBuffer
(
5
{
maxByteLength
:
10
}
)
;
var
typedArray
=
new
Int8Array
(
rab
)
;
var
log
=
[
]
;
var
growNumber
=
0
var
grow
=
{
valueOf
(
)
{
log
.
push
(
"
grow
"
)
;
rab
.
resize
(
rab
.
byteLength
+
1
)
;
return
-
-
growNumber
;
}
}
;
var
shrinkNumber
=
0
var
shrink
=
{
valueOf
(
)
{
log
.
push
(
"
shrink
"
)
;
rab
.
resize
(
rab
.
byteLength
-
1
)
;
return
+
+
shrinkNumber
;
}
}
;
var
array
=
{
get
length
(
)
{
return
5
;
}
0
:
shrink
1
:
shrink
2
:
shrink
3
:
grow
4
:
grow
}
typedArray
.
set
(
array
)
;
assert
.
compareArray
(
log
[
"
shrink
"
"
shrink
"
"
shrink
"
"
grow
"
"
grow
"
]
)
;
assert
.
compareArray
(
typedArray
[
1
2
0
0
]
)
;
reportCompare
(
0
0
)
;
