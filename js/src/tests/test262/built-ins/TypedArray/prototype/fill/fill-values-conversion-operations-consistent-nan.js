testWithTypedArrayConstructors
(
function
(
FA
)
{
var
precision
=
FA
=
=
=
Float32Array
?
"
single
"
:
"
double
"
;
var
samples
=
new
FA
(
3
)
;
var
controls
idx
aNaN
;
for
(
idx
=
0
;
idx
<
NaNs
.
length
;
+
+
idx
)
{
aNaN
=
NaNs
[
idx
]
;
controls
=
new
Float32Array
(
[
aNaN
aNaN
aNaN
]
)
;
samples
.
fill
(
aNaN
)
;
for
(
var
i
=
0
;
i
<
samples
.
length
;
i
+
+
)
{
var
sample
=
samples
[
i
]
;
var
control
=
controls
[
i
]
;
assert
(
samples
[
i
]
!
=
=
samples
[
i
]
samples
(
index
=
{
idx
}
)
produces
a
valid
NaN
(
{
precision
}
precision
)
)
;
assert
(
controls
[
i
]
!
=
=
controls
[
i
]
controls
(
index
=
{
idx
}
)
produces
a
valid
NaN
(
{
precision
}
precision
)
)
;
}
}
}
[
Float32Array
Float64Array
]
)
;
reportCompare
(
0
0
)
;
