const
str
=
buildString
(
{
loneCodePoints
:
[
]
ranges
:
[
[
0
0xFFFF
]
]
}
)
;
const
re
=
/
\
s
/
g
;
const
matchingRange
=
/
[
\
t
-
\
r
\
xA0
\
u1680
\
u2000
-
\
u200A
\
u2028
\
u2029
\
u202F
\
u205F
\
u3000
\
uFEFF
]
/
g
;
const
errors
=
[
]
;
function
matching
(
str
)
{
return
str
.
replace
(
re
'
'
)
=
=
=
str
.
replace
(
matchingRange
'
'
)
;
}
if
(
!
matching
(
str
)
)
{
for
(
const
char
of
str
)
{
if
(
!
matching
(
char
)
)
{
errors
.
push
(
'
0x
'
+
char
.
codePointAt
(
0
)
.
toString
(
16
)
)
;
}
}
}
assert
.
sameValue
(
errors
.
length
0
'
Expected
matching
code
points
but
received
:
'
+
errors
.
join
(
'
'
)
)
;
reportCompare
(
0
0
)
;
