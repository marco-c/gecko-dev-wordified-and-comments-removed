const
chunks
=
[
]
;
const
totalChunks
=
Math
.
ceil
(
0xffff
/
0x10000
)
;
for
(
let
codePoint
=
0
;
codePoint
<
0xFFFF
;
codePoint
+
+
)
{
chunks
[
codePoint
%
totalChunks
]
+
=
String
.
fromCodePoint
(
codePoint
)
;
}
const
re
=
/
\
w
+
/
g
;
const
matchingRange
=
/
[
0
-
9A
-
Z_a
-
z
]
+
/
g
;
const
errors
=
[
]
;
function
matching
(
str
)
{
return
str
.
replace
(
re
'
'
)
=
=
=
str
.
replace
(
matchingRange
'
'
)
;
}
for
(
const
str
of
chunks
)
{
if
(
!
matching
(
str
)
)
{
for
(
const
char
of
str
)
{
if
(
!
matching
(
char
)
)
{
errors
.
push
(
'
0x
'
+
char
.
codePointAt
(
0
)
.
toString
(
16
)
)
;
}
}
}
}
;
assert
.
sameValue
(
errors
.
length
0
'
Expected
matching
code
points
but
received
:
'
+
errors
.
join
(
'
'
)
)
;
reportCompare
(
0
0
)
;
