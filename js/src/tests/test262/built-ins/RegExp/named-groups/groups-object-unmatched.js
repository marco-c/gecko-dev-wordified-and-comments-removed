const
re
=
/
(
?
<
a
>
a
)
.
|
(
?
<
x
>
x
)
/
;
const
result
=
re
.
exec
(
"
ab
"
)
;
assert
.
sameValue
(
result
.
__proto__
Array
.
prototype
)
;
assert
(
result
.
hasOwnProperty
(
"
groups
"
)
)
;
assert
.
sameValue
(
"
ab
"
result
[
0
]
)
;
assert
.
sameValue
(
"
a
"
result
[
1
]
)
;
assert
.
sameValue
(
undefined
result
[
2
]
)
;
assert
.
sameValue
(
0
result
.
index
)
;
assert
.
sameValue
(
"
a
"
result
.
groups
.
a
)
;
assert
.
sameValue
(
undefined
result
.
groups
.
x
)
;
Array
.
prototype
.
groups
=
{
a
:
"
b
"
x
:
"
y
"
z
:
"
z
"
}
;
assert
.
sameValue
(
"
a
"
"
ab
"
.
replace
(
re
"
<
a
>
"
)
)
;
assert
.
sameValue
(
"
"
"
ab
"
.
replace
(
re
"
<
x
>
"
)
)
;
assert
.
sameValue
(
"
"
"
ab
"
.
replace
(
re
"
<
z
>
"
)
)
;
Array
.
prototype
.
groups
=
undefined
;
reportCompare
(
0
0
)
;
