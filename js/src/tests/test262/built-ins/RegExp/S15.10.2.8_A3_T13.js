var
__executed
=
/
(
a
(
b
(
c
)
)
)
(
d
(
e
(
f
)
)
)
\
2
\
5
/
.
exec
(
"
xabcdefbcefg
"
)
;
var
__expected
=
[
"
abcdefbcef
"
"
abc
"
"
bc
"
"
c
"
"
def
"
"
ef
"
"
f
"
]
;
__expected
.
index
=
1
;
__expected
.
input
=
"
xabcdefbcefg
"
;
assert
.
sameValue
(
__executed
.
length
__expected
.
length
'
The
value
of
__executed
.
length
is
expected
to
equal
the
value
of
__expected
.
length
'
)
;
assert
.
sameValue
(
__executed
.
index
__expected
.
index
'
The
value
of
__executed
.
index
is
expected
to
equal
the
value
of
__expected
.
index
'
)
;
assert
.
sameValue
(
__executed
.
input
__expected
.
input
'
The
value
of
__executed
.
input
is
expected
to
equal
the
value
of
__expected
.
input
'
)
;
for
(
var
index
=
0
;
index
<
__expected
.
length
;
index
+
+
)
{
assert
.
sameValue
(
__executed
[
index
]
__expected
[
index
]
'
The
value
of
__executed
[
index
]
is
expected
to
equal
the
value
of
__expected
[
index
]
'
)
;
}
reportCompare
(
0
0
)
;
