var
callCount
=
0
;
var
callArgs
;
var
regexp
=
/
\
d
/
u
;
regexp
.
constructor
=
{
[
Symbol
.
species
]
:
function
(
)
{
callCount
+
+
;
callArgs
=
arguments
;
return
/
\
w
/
g
;
}
}
;
var
str
=
'
a
*
b
'
;
var
iter
=
regexp
[
Symbol
.
matchAll
]
(
str
)
;
assert
.
sameValue
(
callCount
1
)
;
assert
.
sameValue
(
callArgs
.
length
2
)
;
assert
.
sameValue
(
callArgs
[
0
]
regexp
)
;
assert
.
sameValue
(
callArgs
[
1
]
'
u
'
)
;
assert
.
compareIterator
(
iter
[
matchValidator
(
[
'
a
'
]
0
str
)
]
)
;
reportCompare
(
0
0
)
;
