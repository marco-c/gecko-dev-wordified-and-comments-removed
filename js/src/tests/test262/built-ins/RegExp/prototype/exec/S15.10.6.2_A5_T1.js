var
__re
=
/
(
?
:
ab
|
cd
)
\
d
?
/
g
;
var
__executed
=
__re
.
exec
(
"
aac1dz2233a1bz12nm444ab42
"
)
;
var
__expected
=
[
"
ab4
"
]
;
__expected
.
index
=
21
;
__expected
.
input
=
"
aac1dz2233a1bz12nm444ab42
"
;
assert
.
sameValue
(
__executed
.
length
__expected
.
length
'
The
value
of
__executed
.
length
is
expected
to
equal
the
value
of
__expected
.
length
'
)
;
assert
.
sameValue
(
__executed
.
index
__expected
.
index
'
The
value
of
__executed
.
index
is
expected
to
equal
the
value
of
__expected
.
index
'
)
;
assert
.
sameValue
(
__executed
.
input
__expected
.
input
'
The
value
of
__executed
.
input
is
expected
to
equal
the
value
of
__expected
.
input
'
)
;
for
(
var
index
=
0
;
index
<
__expected
.
length
;
index
+
+
)
{
assert
.
sameValue
(
__executed
[
index
]
__expected
[
index
]
'
The
value
of
__executed
[
index
]
is
expected
to
equal
the
value
of
__expected
[
index
]
'
)
;
}
__executed
=
__re
.
exec
(
"
aacd22
"
)
;
assert
(
!
__executed
'
The
value
of
!
__executed
is
expected
to
be
true
'
)
;
assert
.
sameValue
(
__re
.
lastIndex
0
'
The
value
of
__re
.
lastIndex
is
expected
to
be
0
'
)
;
reportCompare
(
0
0
)
;
