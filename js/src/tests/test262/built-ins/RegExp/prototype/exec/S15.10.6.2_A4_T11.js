var
__re
=
/
(
?
:
ab
|
cd
)
\
d
?
/
g
;
var
__executed
=
__re
.
exec
(
"
aacd2233ab12nm444ab42
"
)
;
var
__expected
=
[
"
cd2
"
]
;
__expected
.
index
=
2
;
__expected
.
input
=
"
aacd2233ab12nm444ab42
"
;
if
(
__executed
.
length
!
=
=
__expected
.
length
)
{
throw
new
Test262Error
(
'
#
1
:
__re
=
/
(
?
:
ab
|
cd
)
\
\
d
?
/
g
;
__executed
=
__re
.
exec
(
"
aacd2233ab12nm444ab42
"
)
;
__executed
.
length
=
=
=
'
+
__expected
.
length
+
'
.
Actual
:
'
+
__executed
.
length
)
;
}
if
(
__executed
.
index
!
=
=
__expected
.
index
)
{
throw
new
Test262Error
(
'
#
2
:
__re
=
/
(
?
:
ab
|
cd
)
\
\
d
?
/
g
;
__executed
=
__re
.
exec
(
"
aacd2233ab12nm444ab42
"
)
;
__executed
.
index
=
=
=
'
+
__expected
.
index
+
'
.
Actual
:
'
+
__executed
.
index
)
;
}
if
(
__executed
.
input
!
=
=
__expected
.
input
)
{
throw
new
Test262Error
(
'
#
3
:
__re
=
/
(
?
:
ab
|
cd
)
\
\
d
?
/
g
;
__executed
=
__re
.
exec
(
"
aacd2233ab12nm444ab42
"
)
;
__executed
.
input
=
=
=
'
+
__expected
.
input
+
'
.
Actual
:
'
+
__executed
.
input
)
;
}
for
(
var
index
=
0
;
index
<
__expected
.
length
;
index
+
+
)
{
if
(
__executed
[
index
]
!
=
=
__expected
[
index
]
)
{
throw
new
Test262Error
(
'
#
4
:
__re
=
/
(
?
:
ab
|
cd
)
\
\
d
?
/
g
;
__executed
=
__re
.
exec
(
"
aacd2233ab12nm444ab42
"
)
;
__executed
[
'
+
index
+
'
]
=
=
=
'
+
__expected
[
index
]
+
'
.
Actual
:
'
+
__executed
[
index
]
)
;
}
}
var
__obj
=
{
valueOf
:
function
(
)
{
throw
"
intoint
"
;
}
}
;
__re
.
lastIndex
=
__obj
;
try
{
throw
new
Test262Error
(
'
#
5
.
1
:
__obj
=
{
valueOf
:
function
(
)
{
throw
"
intoint
"
;
}
}
;
__re
.
lastIndex
=
__obj
;
__executed
=
__re
.
exec
(
"
aacd2233ab12nm444ab42
"
)
throw
"
intoint
"
.
Actual
:
'
+
(
__re
.
exec
(
"
aacd2233ab12nm444ab42
"
)
)
)
;
}
catch
(
e
)
{
if
(
e
!
=
=
"
intoint
"
)
{
throw
new
Test262Error
(
'
#
5
.
2
:
__obj
=
{
valueOf
:
function
(
)
{
throw
"
intoint
"
;
}
}
;
__re
.
lastIndex
=
__obj
;
__executed
=
__re
.
exec
(
"
aacd2233ab12nm444ab42
"
)
throw
"
intoint
"
.
Actual
:
'
+
(
e
)
)
;
}
}
reportCompare
(
0
0
)
;
