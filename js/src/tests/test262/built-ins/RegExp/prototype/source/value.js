var
re
=
eval
(
'
/
'
+
/
ab
{
2
4
}
c
/
.
source
+
'
/
'
)
;
assert
(
re
.
test
(
'
abbc
'
)
'
input
:
abbc
'
)
;
assert
(
re
.
test
(
'
abbbc
'
)
'
input
:
abbbc
'
)
;
assert
(
re
.
test
(
'
abbbbc
'
)
'
input
:
abbbbc
'
)
;
assert
(
re
.
test
(
'
xabbc
'
)
'
input
:
xabbc
'
)
;
assert
(
re
.
test
(
'
xabbbc
'
)
'
input
:
xabbbc
'
)
;
assert
(
re
.
test
(
'
xabbbbc
'
)
'
input
:
xabbbbc
'
)
;
assert
.
sameValue
(
re
.
test
(
'
ac
'
)
false
'
input
:
ac
'
)
;
assert
.
sameValue
(
re
.
test
(
'
abc
'
)
false
'
input
:
abc
'
)
;
assert
.
sameValue
(
re
.
test
(
'
abbcx
'
)
false
'
input
:
abbcx
'
)
;
assert
.
sameValue
(
re
.
test
(
'
bbc
'
)
false
'
input
:
bbc
'
)
;
assert
.
sameValue
(
re
.
test
(
'
abb
'
)
false
'
input
:
abb
'
)
;
assert
.
sameValue
(
re
.
test
(
'
abbbbbc
'
)
false
'
input
:
abbbbbc
'
)
;
reportCompare
(
0
0
)
;
