assert
.
sameValue
(
"
abcdef
"
.
match
(
/
(
?
<
=
^
[
^
a
-
c
]
{
3
}
)
def
/
)
null
"
#
1
"
)
;
assert
.
sameValue
(
"
foooo
"
.
match
(
/
"
^
foooo
(
?
<
=
^
o
+
)
/
)
null
"
#
2
"
)
;
assert
.
sameValue
(
"
foooo
"
.
match
(
/
"
^
foooo
(
?
<
=
^
o
*
)
/
)
null
"
#
3
"
)
;
assert
.
compareArray
(
"
abcdef
"
.
match
(
/
(
?
<
=
^
abc
)
def
/
)
[
"
def
"
]
"
#
4
"
)
;
assert
.
compareArray
(
"
abcdef
"
.
match
(
/
(
?
<
=
^
[
a
-
c
]
{
3
}
)
def
/
)
[
"
def
"
]
"
#
5
"
)
;
assert
.
compareArray
(
"
xyz
\
nabcdef
"
.
match
(
/
(
?
<
=
^
[
a
-
c
]
{
3
}
)
def
/
m
)
[
"
def
"
]
"
#
6
"
)
;
assert
.
compareArray
(
"
ab
\
ncd
\
nefg
"
.
match
(
/
(
?
<
=
^
)
\
w
+
/
gm
)
[
"
ab
"
"
cd
"
"
efg
"
]
"
#
7
"
)
;
assert
.
compareArray
(
"
ab
\
ncd
\
nefg
"
.
match
(
/
\
w
+
(
?
<
=
)
/
gm
)
[
"
ab
"
"
cd
"
"
efg
"
]
"
#
8
"
)
;
assert
.
compareArray
(
"
ab
\
ncd
\
nefg
"
.
match
(
/
(
?
<
=
^
)
\
w
+
(
?
<
=
)
/
gm
)
[
"
ab
"
"
cd
"
"
efg
"
]
"
#
9
"
)
;
assert
.
compareArray
(
"
foo
"
.
match
(
/
^
foo
(
?
<
=
^
fo
+
)
/
)
[
"
foo
"
]
"
#
10
"
)
;
assert
.
compareArray
(
"
foooo
"
.
match
(
/
^
foooo
(
?
<
=
^
fo
*
)
/
)
[
"
foooo
"
]
"
#
11
"
)
;
assert
.
compareArray
(
"
foo
"
.
match
(
/
^
(
f
)
oo
(
?
<
=
^
\
1o
+
)
/
)
[
"
foo
"
"
f
"
]
"
#
12
"
)
;
assert
.
compareArray
(
"
foo
"
.
match
(
/
^
(
f
)
oo
(
?
<
=
^
\
1o
+
)
/
i
)
[
"
foo
"
"
f
"
]
"
#
13
"
)
;
assert
.
compareArray
(
"
foo
\
u1234
"
.
match
(
/
^
(
f
)
oo
(
?
<
=
^
\
1o
+
)
.
/
i
)
[
"
foo
\
u1234
"
"
f
"
]
"
#
14
"
)
;
assert
.
compareArray
(
"
abcdefdef
"
.
match
(
/
(
?
<
=
^
\
w
+
)
def
/
)
[
"
def
"
]
"
#
15
"
)
;
assert
.
compareArray
(
"
abcdefdef
"
.
match
(
/
(
?
<
=
^
\
w
+
)
def
/
g
)
[
"
def
"
"
def
"
]
"
#
16
"
)
;
reportCompare
(
0
0
)
;
