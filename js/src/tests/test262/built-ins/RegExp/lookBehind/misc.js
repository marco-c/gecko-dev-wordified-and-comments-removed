assert
.
sameValue
(
"
abcdef
"
.
match
(
/
(
?
<
=
abc
)
def
/
)
null
"
#
1
"
)
;
assert
.
sameValue
(
"
fno
"
.
match
(
/
^
f
.
o
(
?
<
=
foo
)
/
)
null
"
#
2
"
)
;
assert
.
sameValue
(
"
foo
"
.
match
(
/
^
foo
(
?
<
!
foo
)
/
)
null
"
#
3
"
)
;
assert
.
sameValue
(
"
foo
"
.
match
(
/
^
f
.
o
(
?
<
!
foo
)
/
)
null
"
#
4
"
)
;
assert
.
compareArray
(
"
foo
"
.
match
(
/
^
foo
(
?
<
=
foo
)
/
)
[
"
foo
"
]
"
#
5
"
)
;
assert
.
compareArray
(
"
foo
"
.
match
(
/
^
f
.
o
(
?
<
=
foo
)
/
)
[
"
foo
"
]
"
#
6
"
)
;
assert
.
compareArray
(
"
fno
"
.
match
(
/
^
f
.
o
(
?
<
!
foo
)
/
)
[
"
fno
"
]
"
#
7
"
)
;
assert
.
compareArray
(
"
foooo
"
.
match
(
/
^
foooo
(
?
<
=
fo
+
)
/
)
[
"
foooo
"
]
"
#
8
"
)
;
assert
.
compareArray
(
"
foooo
"
.
match
(
/
^
foooo
(
?
<
=
fo
*
)
/
)
[
"
foooo
"
]
"
#
9
"
)
;
assert
.
compareArray
(
/
(
abc
\
1
)
/
.
exec
(
"
abc
"
)
[
"
abc
"
"
abc
"
]
"
#
10
"
)
;
assert
.
compareArray
(
/
(
abc
\
1
)
/
.
exec
(
"
abc
\
u1234
"
)
[
"
abc
"
"
abc
"
]
"
#
11
"
)
;
assert
.
compareArray
(
/
(
abc
\
1
)
/
i
.
exec
(
"
abc
"
)
[
"
abc
"
"
abc
"
]
"
#
12
"
)
;
assert
.
compareArray
(
/
(
abc
\
1
)
/
i
.
exec
(
"
abc
\
u1234
"
)
[
"
abc
"
"
abc
"
]
"
#
13
"
)
;
reportCompare
(
0
0
)
;
