var
re1
=
/
(
?
i
:
\
p
{
Lu
}
)
/
u
;
assert
(
re1
.
test
(
"
A
"
)
"
\
\
p
{
Lu
}
should
match
A
"
)
;
assert
(
re1
.
test
(
"
a
"
)
"
\
\
p
{
Lu
}
should
match
a
(
ignores
case
)
"
)
;
assert
(
re1
.
test
(
"
Z
"
)
"
\
\
p
{
Lu
}
should
match
Z
"
)
;
assert
(
re1
.
test
(
"
z
"
)
"
\
\
p
{
Lu
}
should
match
z
(
ignores
case
)
"
)
;
var
re2
=
/
(
?
i
-
:
\
p
{
Lu
}
)
/
u
;
assert
(
re2
.
test
(
"
A
"
)
"
\
\
p
{
Lu
}
should
match
A
"
)
;
assert
(
re2
.
test
(
"
a
"
)
"
\
\
p
{
Lu
}
should
match
a
(
ignores
case
)
"
)
;
assert
(
re2
.
test
(
"
Z
"
)
"
\
\
p
{
Lu
}
should
match
Z
"
)
;
assert
(
re2
.
test
(
"
z
"
)
"
\
\
p
{
Lu
}
should
match
z
(
ignores
case
)
"
)
;
reportCompare
(
0
0
)
;
