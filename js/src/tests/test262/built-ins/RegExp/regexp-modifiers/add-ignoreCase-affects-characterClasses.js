var
re1
=
/
(
?
i
:
[
ab
]
)
c
/
;
assert
(
re1
.
test
(
"
ac
"
)
"
[
ab
]
should
match
a
"
)
;
assert
(
re1
.
test
(
"
Ac
"
)
"
[
ab
]
should
match
A
"
)
;
assert
(
re1
.
test
(
"
bc
"
)
"
[
ab
]
should
match
b
"
)
;
assert
(
re1
.
test
(
"
Bc
"
)
"
[
ab
]
should
match
B
"
)
;
var
re2
=
/
(
?
i
-
:
[
ab
]
)
c
/
;
assert
(
re2
.
test
(
"
ac
"
)
"
[
ab
]
should
match
a
"
)
;
assert
(
re2
.
test
(
"
Ac
"
)
"
[
ab
]
should
match
A
"
)
;
assert
(
re2
.
test
(
"
bc
"
)
"
[
ab
]
should
match
b
"
)
;
assert
(
re2
.
test
(
"
Bc
"
)
"
[
ab
]
should
match
B
"
)
;
var
re3
=
/
(
?
i
:
[
^
ab
]
)
c
/
;
assert
(
!
re3
.
test
(
"
ac
"
)
"
[
^
ab
]
should
not
match
a
"
)
;
assert
(
!
re3
.
test
(
"
Ac
"
)
"
[
^
ab
]
should
not
match
A
"
)
;
assert
(
!
re3
.
test
(
"
bc
"
)
"
[
^
ab
]
should
not
match
b
"
)
;
assert
(
!
re3
.
test
(
"
Bc
"
)
"
[
^
ab
]
should
not
match
B
"
)
;
var
re4
=
/
(
?
i
-
:
[
^
ab
]
)
c
/
;
assert
(
!
re4
.
test
(
"
ac
"
)
"
[
^
ab
]
should
not
match
a
"
)
;
assert
(
!
re4
.
test
(
"
Ac
"
)
"
[
^
ab
]
should
not
match
A
"
)
;
assert
(
!
re4
.
test
(
"
bc
"
)
"
[
^
ab
]
should
not
match
b
"
)
;
assert
(
!
re4
.
test
(
"
Bc
"
)
"
[
^
ab
]
should
not
match
B
"
)
;
reportCompare
(
0
0
)
;
