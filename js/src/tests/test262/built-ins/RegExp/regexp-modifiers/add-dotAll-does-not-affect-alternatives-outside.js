var
re1
=
/
a
.
a
|
b
.
b
|
(
?
s
:
c
.
c
)
|
d
.
d
|
e
.
e
/
;
assert
(
!
re1
.
test
(
"
a
\
na
"
)
"
Alternative
a
.
a
should
not
match
newline
"
)
;
assert
(
!
re1
.
test
(
"
b
\
nb
"
)
"
Alternative
b
.
b
should
not
match
newline
"
)
;
assert
(
re1
.
test
(
"
c
\
nc
"
)
"
Alternative
(
?
s
:
c
.
c
)
should
match
newline
in
modified
group
"
)
;
assert
(
!
re1
.
test
(
"
d
\
nd
"
)
"
Alternative
d
.
d
should
not
match
newline
"
)
;
assert
(
!
re1
.
test
(
"
e
\
ne
"
)
"
Alternative
e
.
e
should
not
match
newline
"
)
;
var
re2
=
/
(
a
.
a
)
|
(
?
:
b
.
b
)
|
(
?
s
:
c
.
c
)
|
(
?
:
d
.
d
)
|
(
e
.
e
)
/
;
assert
(
!
re2
.
test
(
"
a
\
na
"
)
"
Alternative
(
a
.
a
)
should
not
match
newline
"
)
;
assert
(
!
re2
.
test
(
"
b
\
nb
"
)
"
Alternative
(
?
:
b
.
b
)
should
not
match
newline
"
)
;
assert
(
re2
.
test
(
"
c
\
nc
"
)
"
Alternative
(
?
s
:
c
.
c
)
should
match
newline
in
modified
group
"
)
;
assert
(
!
re2
.
test
(
"
d
\
nd
"
)
"
Alternative
(
?
:
d
.
d
)
should
not
match
newline
"
)
;
assert
(
!
re2
.
test
(
"
e
\
ne
"
)
"
Alternative
(
e
.
e
)
should
not
match
newline
"
)
;
reportCompare
(
0
0
)
;
