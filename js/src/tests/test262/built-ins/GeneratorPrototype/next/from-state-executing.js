var
iter
result
;
function
*
withoutVal
(
)
{
iter
.
next
(
)
;
}
function
*
withVal
(
)
{
iter
.
next
(
42
)
;
}
iter
=
withoutVal
(
)
;
assert
.
throws
(
TypeError
function
(
)
{
iter
.
next
(
)
;
}
'
Error
when
invoked
without
value
'
)
;
result
=
iter
.
next
(
)
;
assert
.
sameValue
(
typeof
result
'
object
'
'
type
following
invocation
without
value
'
)
;
assert
.
sameValue
(
result
.
value
undefined
'
value
following
invocation
without
value
'
)
;
assert
.
sameValue
(
result
.
done
true
'
done
following
invocation
without
value
'
)
;
iter
=
withVal
(
)
;
assert
.
throws
(
TypeError
function
(
)
{
iter
.
next
(
)
;
}
'
Error
when
invoked
with
value
'
)
;
result
=
iter
.
next
(
)
;
assert
.
sameValue
(
typeof
result
'
object
'
'
type
following
invocation
with
value
'
)
;
assert
.
sameValue
(
result
.
value
undefined
'
value
following
invocation
with
value
'
)
;
assert
.
sameValue
(
result
.
done
true
'
done
following
invocation
with
value
'
)
;
reportCompare
(
0
0
)
;
