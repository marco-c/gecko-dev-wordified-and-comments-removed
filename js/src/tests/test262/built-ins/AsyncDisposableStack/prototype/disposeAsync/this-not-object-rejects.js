assert
.
sameValue
(
typeof
AsyncDisposableStack
.
prototype
.
disposeAsync
'
function
'
)
;
var
disposeAsync
=
AsyncDisposableStack
.
prototype
.
disposeAsync
;
asyncTest
(
async
function
(
)
{
await
assert
.
throwsAsync
(
TypeError
function
(
)
{
return
disposeAsync
.
call
(
undefined
)
;
}
'
undefined
'
)
;
await
assert
.
throwsAsync
(
TypeError
function
(
)
{
return
disposeAsync
.
call
(
null
)
;
}
'
null
'
)
;
await
assert
.
throwsAsync
(
TypeError
function
(
)
{
return
disposeAsync
.
call
(
true
)
;
}
'
true
'
)
;
await
assert
.
throwsAsync
(
TypeError
function
(
)
{
return
disposeAsync
.
call
(
false
)
;
}
'
false
'
)
;
await
assert
.
throwsAsync
(
TypeError
function
(
)
{
return
disposeAsync
.
call
(
1
)
;
}
'
number
'
)
;
await
assert
.
throwsAsync
(
TypeError
function
(
)
{
return
disposeAsync
.
call
(
'
object
'
)
;
}
'
string
'
)
;
var
s
=
Symbol
(
)
;
await
assert
.
throwsAsync
(
TypeError
function
(
)
{
return
disposeAsync
.
call
(
s
)
;
}
'
symbol
'
)
;
}
)
;
