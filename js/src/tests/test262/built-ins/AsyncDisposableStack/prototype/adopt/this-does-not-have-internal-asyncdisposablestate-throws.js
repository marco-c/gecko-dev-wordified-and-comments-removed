assert
.
sameValue
(
typeof
AsyncDisposableStack
.
prototype
.
adopt
'
function
'
)
;
var
adopt
=
AsyncDisposableStack
.
prototype
.
adopt
;
assert
.
throws
(
TypeError
function
(
)
{
adopt
.
call
(
{
[
'
[
[
AsyncDisposableState
]
]
'
]
:
{
}
}
)
;
}
'
Ordinary
object
without
[
[
AsyncDisposableState
]
]
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
adopt
.
call
(
AsyncDisposableStack
.
prototype
)
;
}
'
AsyncDisposableStack
.
prototype
does
not
have
a
[
[
AsyncDisposableState
]
]
internal
slot
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
adopt
.
call
(
AsyncDisposableStack
)
;
}
'
AsyncDisposableStack
does
not
have
a
[
[
AsyncDisposableState
]
]
internal
slot
'
)
;
var
stack
=
new
DisposableStack
(
)
;
assert
.
throws
(
TypeError
function
(
)
{
adopt
.
call
(
stack
)
;
}
'
DisposableStack
instance
'
)
;
reportCompare
(
0
0
)
;
