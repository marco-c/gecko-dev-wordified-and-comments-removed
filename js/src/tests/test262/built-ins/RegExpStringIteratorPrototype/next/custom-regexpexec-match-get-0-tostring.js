var
iter
=
/
.
/
g
[
Symbol
.
matchAll
]
(
'
'
)
;
var
execResult
=
{
get
'
0
'
(
)
{
return
{
toString
(
)
{
return
'
'
;
}
}
;
}
}
;
var
internalRegExp
;
RegExp
.
prototype
.
exec
=
function
(
)
{
internalRegExp
=
this
;
return
execResult
;
}
;
var
result
=
iter
.
next
(
)
;
assert
.
sameValue
(
internalRegExp
.
lastIndex
1
)
;
assert
.
sameValue
(
result
.
value
execResult
)
;
assert
(
!
result
.
done
)
;
result
=
iter
.
next
(
)
;
assert
.
sameValue
(
internalRegExp
.
lastIndex
2
)
;
assert
.
sameValue
(
result
.
value
execResult
)
;
assert
(
!
result
.
done
)
;
reportCompare
(
0
0
)
;
