var
throwGets
=
0
;
var
syncIterator
=
{
[
Symbol
.
iterator
]
(
)
{
return
this
;
}
next
(
)
{
return
{
value
:
1
done
:
false
}
;
}
get
throw
(
)
{
throwGets
+
=
1
;
return
null
;
}
}
;
async
function
*
asyncGenerator
(
)
{
yield
*
syncIterator
;
}
var
asyncIterator
=
asyncGenerator
(
)
;
var
thrownError
=
{
name
:
"
err
"
}
;
asyncIterator
.
next
(
)
.
then
(
function
(
)
{
return
asyncIterator
.
throw
(
thrownError
)
;
}
)
.
then
(
function
(
result
)
{
throw
new
Test262Error
(
"
Promise
should
be
rejected
got
:
"
+
result
.
value
)
;
}
function
(
err
)
{
assert
.
sameValue
(
err
thrownError
)
;
return
asyncIterator
.
next
(
)
.
then
(
function
(
result
)
{
assert
.
sameValue
(
result
.
value
undefined
)
;
assert
.
sameValue
(
result
.
done
true
)
;
}
)
;
}
)
.
then
(
DONE
DONE
)
;
