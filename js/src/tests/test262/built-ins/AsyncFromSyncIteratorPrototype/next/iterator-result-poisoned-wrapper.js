var
finallyCount
=
0
;
function
CatchError
(
)
{
}
var
thrownError
=
new
CatchError
(
)
;
function
*
gen
(
)
{
try
{
const
p
=
Promise
.
resolve
(
'
FAIL
'
)
;
Object
.
defineProperty
(
p
'
constructor
'
{
get
(
)
{
throw
thrownError
;
}
}
)
;
yield
p
;
}
finally
{
finallyCount
+
=
1
;
}
}
async
function
*
iter
(
)
{
yield
*
gen
(
)
;
}
asyncTest
(
async
function
(
)
{
await
assert
.
throwsAsync
(
CatchError
async
(
)
=
>
iter
(
)
.
next
(
)
"
Promise
should
be
rejected
"
)
;
assert
.
sameValue
(
finallyCount
1
'
iterator
closed
properly
'
)
;
}
)
