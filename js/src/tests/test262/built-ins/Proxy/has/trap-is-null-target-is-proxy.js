var
stringTarget
=
new
Proxy
(
new
String
(
"
str
"
)
{
}
)
;
var
stringProxy
=
new
Proxy
(
stringTarget
{
get
:
null
}
)
;
assert
(
Reflect
.
has
(
stringProxy
"
length
"
)
)
;
assert
(
0
in
stringProxy
)
;
assert
(
!
(
4
in
stringProxy
)
)
;
var
sym
=
Symbol
(
)
;
var
target
=
new
Proxy
(
{
}
{
has
:
function
(
_target
key
)
{
return
[
sym
"
6
"
"
foo
"
]
.
includes
(
key
)
;
}
}
)
;
var
proxy
=
new
Proxy
(
target
{
get
:
null
}
)
;
assert
(
Reflect
.
has
(
proxy
sym
)
)
;
assert
(
"
6
"
in
proxy
)
;
assert
(
"
foo
"
in
Object
.
create
(
proxy
)
)
;
assert
(
!
(
"
bar
"
in
proxy
)
)
;
reportCompare
(
0
0
)
;
