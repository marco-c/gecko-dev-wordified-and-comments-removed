var
calls
=
0
;
function
NewTarget
(
)
{
}
function
Target
(
a
b
)
{
assert
.
sameValue
(
new
.
target
NewTarget
)
;
calls
+
=
1
;
return
{
sum
:
a
+
b
}
;
}
var
P
=
new
Proxy
(
Target
{
}
)
;
var
obj
=
Reflect
.
construct
(
P
[
1
2
]
NewTarget
)
;
assert
.
sameValue
(
obj
.
sum
3
"
construct
trap
is
missing
"
)
;
assert
.
sameValue
(
calls
1
"
target
is
called
once
"
)
;
reportCompare
(
0
0
)
;
