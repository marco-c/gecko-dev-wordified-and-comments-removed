var
getOwnPropertyKeys
=
[
]
;
var
definePropertyKeys
=
[
]
;
var
p
=
new
Proxy
(
{
foo
:
1
}
{
getOwnPropertyDescriptor
:
function
(
target
key
)
{
getOwnPropertyKeys
.
push
(
key
)
;
return
Reflect
.
getOwnPropertyDescriptor
(
target
key
)
;
}
defineProperty
:
function
(
target
key
desc
)
{
definePropertyKeys
.
push
(
key
)
;
return
Reflect
.
defineProperty
(
target
key
desc
)
;
}
}
)
;
p
[
"
foo
"
]
=
2
;
p
.
foo
=
2
;
p
.
foo
=
2
;
assert
.
compareArray
(
getOwnPropertyKeys
[
"
foo
"
"
foo
"
"
foo
"
]
"
getOwnPropertyDescriptor
:
key
present
on
[
[
ProxyTarget
]
]
"
)
;
assert
.
compareArray
(
definePropertyKeys
[
"
foo
"
"
foo
"
"
foo
"
]
"
defineProperty
:
key
present
on
[
[
ProxyTarget
]
]
"
)
;
getOwnPropertyKeys
=
[
]
;
definePropertyKeys
=
[
]
;
p
.
bar
=
3
;
p
[
"
bar
"
]
=
3
;
p
.
bar
=
3
;
assert
.
compareArray
(
getOwnPropertyKeys
[
"
bar
"
"
bar
"
"
bar
"
]
"
getOwnPropertyDescriptor
:
key
absent
on
[
[
ProxyTarget
]
]
"
)
;
assert
.
compareArray
(
definePropertyKeys
[
"
bar
"
"
bar
"
"
bar
"
]
"
defineProperty
:
key
absent
on
[
[
ProxyTarget
]
]
"
)
;
reportCompare
(
0
0
)
;
