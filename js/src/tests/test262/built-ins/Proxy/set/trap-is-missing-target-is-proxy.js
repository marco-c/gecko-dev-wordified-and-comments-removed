var
barValue
;
var
plainObject
=
{
get
foo
(
)
{
}
set
bar
(
value
)
{
barValue
=
value
;
}
}
;
var
plainObjectTarget
=
new
Proxy
(
plainObject
{
}
)
;
var
plainObjectProxy
=
new
Proxy
(
plainObjectTarget
{
}
)
;
plainObjectProxy
.
bar
=
1
;
assert
.
sameValue
(
barValue
1
)
;
assert
.
throws
(
TypeError
function
(
)
{
"
use
strict
"
;
plainObjectProxy
.
foo
=
2
;
}
)
;
var
regExp
=
/
(
?
:
)
/
g
;
var
regExpTarget
=
new
Proxy
(
regExp
{
}
)
;
var
regExpProxy
=
new
Proxy
(
regExpTarget
{
}
)
;
assert
(
!
Reflect
.
set
(
regExpProxy
"
global
"
true
)
)
;
regExpProxy
.
lastIndex
=
1
;
assert
.
sameValue
(
regExp
.
lastIndex
1
)
;
reportCompare
(
0
0
)
;
