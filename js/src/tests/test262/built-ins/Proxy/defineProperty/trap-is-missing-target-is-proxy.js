var
string
=
new
String
(
"
str
"
)
;
var
stringTarget
=
new
Proxy
(
string
{
}
)
;
var
stringProxy
=
new
Proxy
(
stringTarget
{
}
)
;
assert
(
Reflect
.
defineProperty
(
stringProxy
"
4
"
{
value
:
4
}
)
)
;
assert
.
sameValue
(
string
[
4
]
4
)
;
assert
.
throws
(
TypeError
function
(
)
{
Object
.
defineProperty
(
stringProxy
"
0
"
{
value
:
"
x
"
}
)
;
}
)
;
Object
.
preventExtensions
(
string
)
;
assert
(
!
Reflect
.
defineProperty
(
stringProxy
"
foo
"
{
value
:
5
}
)
)
;
var
func
=
function
(
)
{
}
;
var
funcTarget
=
new
Proxy
(
func
{
}
)
;
var
funcProxy
=
new
Proxy
(
funcTarget
{
}
)
;
Object
.
defineProperty
(
funcProxy
"
name
"
{
value
:
"
foo
"
}
)
;
assert
.
sameValue
(
func
.
name
"
foo
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
Object
.
defineProperty
(
funcProxy
"
prototype
"
{
set
:
function
(
_value
)
{
}
}
)
;
}
)
;
reportCompare
(
0
0
)
;
