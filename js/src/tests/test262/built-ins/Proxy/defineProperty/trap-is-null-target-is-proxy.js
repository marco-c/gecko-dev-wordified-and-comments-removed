var
plainObject
=
Object
.
create
(
null
)
;
Object
.
defineProperty
(
plainObject
"
foo
"
{
configurable
:
false
}
)
;
var
plainObjectTarget
=
new
Proxy
(
plainObject
{
}
)
;
var
plainObjectProxy
=
new
Proxy
(
plainObjectTarget
{
defineProperty
:
null
}
)
;
assert
.
throws
(
TypeError
function
(
)
{
Object
.
defineProperty
(
plainObjectProxy
"
foo
"
{
configurable
:
true
}
)
;
}
)
;
Object
.
defineProperty
(
plainObjectProxy
"
bar
"
{
get
:
function
(
)
{
return
2
;
}
}
)
;
assert
.
sameValue
(
plainObject
.
bar
2
)
;
var
regExp
=
/
(
?
:
)
/
g
;
var
regExpTarget
=
new
Proxy
(
regExp
{
}
)
;
var
regExpProxy
=
new
Proxy
(
regExpTarget
{
defineProperty
:
null
}
)
;
assert
(
Reflect
.
defineProperty
(
regExpProxy
"
lastIndex
"
{
writable
:
false
}
)
)
;
verifyNotWritable
(
regExp
"
lastIndex
"
)
;
reportCompare
(
0
0
)
;
