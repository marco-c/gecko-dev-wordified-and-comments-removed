var
target
=
{
}
;
var
p
=
new
Proxy
(
target
{
defineProperty
:
function
(
t
prop
desc
)
{
return
Object
.
defineProperty
(
t
prop
desc
)
;
}
}
)
;
var
result
=
Reflect
.
defineProperty
(
p
"
attr
"
{
configurable
:
true
enumerable
:
true
writable
:
true
value
:
1
}
)
;
assert
.
sameValue
(
result
true
"
result
=
=
=
true
"
)
;
verifyEqualTo
(
target
"
attr
"
1
)
;
verifyWritable
(
target
"
attr
"
)
;
verifyEnumerable
(
target
"
attr
"
)
;
verifyConfigurable
(
target
"
attr
"
)
;
result
=
Reflect
.
defineProperty
(
p
"
attr
"
{
configurable
:
false
enumerable
:
false
writable
:
false
value
:
2
}
)
;
assert
.
sameValue
(
result
true
"
result
=
=
=
true
"
)
;
verifyEqualTo
(
target
"
attr
"
2
)
;
verifyNotWritable
(
target
"
attr
"
)
;
verifyNotEnumerable
(
target
"
attr
"
)
;
verifyNotConfigurable
(
target
"
attr
"
)
;
reportCompare
(
0
0
)
;
