var
calls
=
[
]
;
var
proto
=
{
}
;
var
target
=
new
Proxy
(
Object
.
create
(
proto
)
{
isExtensible
:
function
(
)
{
calls
.
push
(
"
target
.
[
[
IsExtensible
]
]
"
)
;
return
false
;
}
getPrototypeOf
:
function
(
)
{
calls
.
push
(
"
target
.
[
[
GetPrototypeOf
]
]
"
)
;
return
proto
;
}
}
)
;
Object
.
preventExtensions
(
target
)
;
var
proxy
=
new
Proxy
(
target
{
setPrototypeOf
:
function
(
)
{
calls
.
push
(
"
proxy
.
[
[
setPrototypeOf
]
]
"
)
;
return
true
;
}
}
)
;
assert
.
sameValue
(
Reflect
.
setPrototypeOf
(
proxy
proto
)
true
)
;
assert
.
sameValue
(
calls
.
length
3
)
;
assert
.
sameValue
(
calls
[
0
]
"
proxy
.
[
[
setPrototypeOf
]
]
"
)
;
assert
.
sameValue
(
calls
[
1
]
"
target
.
[
[
IsExtensible
]
]
"
)
;
assert
.
sameValue
(
calls
[
2
]
"
target
.
[
[
GetPrototypeOf
]
]
"
)
;
reportCompare
(
0
0
)
;
