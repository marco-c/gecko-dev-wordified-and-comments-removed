var
proxy
called
value
;
var
target
=
new
Proxy
(
{
}
{
setPrototypeOf
:
function
(
t
v
)
{
called
+
=
1
;
value
=
v
;
return
true
;
}
}
)
;
var
proto
=
{
}
;
proxy
=
new
Proxy
(
target
{
}
)
;
called
=
0
;
value
=
false
;
Object
.
setPrototypeOf
(
proxy
proto
)
;
assert
.
sameValue
(
called
1
"
undefined
target
.
[
[
SetPrototypeOf
]
]
is
called
"
)
;
assert
.
sameValue
(
value
proto
"
undefined
called
with
V
"
)
;
proxy
=
new
Proxy
(
target
{
setPrototypeOf
:
null
}
)
;
called
=
0
;
value
=
false
;
Object
.
setPrototypeOf
(
proxy
proto
)
;
assert
.
sameValue
(
called
1
"
null
target
.
[
[
SetPrototypeOf
]
]
is
called
"
)
;
assert
.
sameValue
(
value
proto
"
null
called
with
V
"
)
;
reportCompare
(
0
0
)
;
