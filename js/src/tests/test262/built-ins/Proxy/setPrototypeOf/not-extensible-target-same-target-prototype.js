var
proto
=
{
}
;
var
target
=
Object
.
setPrototypeOf
(
{
}
proto
)
;
Object
.
preventExtensions
(
target
)
;
var
proxy
;
proxy
=
new
Proxy
(
target
{
setPrototypeOf
:
function
(
)
{
return
true
;
}
}
)
;
assert
.
sameValue
(
Reflect
.
setPrototypeOf
(
proxy
proto
)
true
"
prototype
arg
is
the
same
in
target
"
)
;
var
outro
=
{
}
;
proxy
=
new
Proxy
(
outro
{
setPrototypeOf
:
function
(
t
p
)
{
Object
.
setPrototypeOf
(
t
p
)
;
Object
.
preventExtensions
(
t
)
;
return
true
;
}
}
)
;
assert
.
sameValue
(
Reflect
.
setPrototypeOf
(
proxy
proto
)
true
"
prototype
is
set
to
target
inside
handler
trap
"
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
outro
)
proto
"
target
has
the
custom
set
prototype
"
)
;
reportCompare
(
0
0
)
;
