var
float
=
new
Float64Array
(
1
)
;
var
ints
=
new
Uint8Array
(
float
.
buffer
)
;
var
len
=
distinctNaNs
.
length
;
var
idx
jdx
subject
first
second
;
function
byteValue
(
value
)
{
float
[
0
]
=
value
;
return
ints
[
0
]
+
(
ints
[
1
]
<
<
8
)
+
(
ints
[
2
]
<
<
16
)
+
(
ints
[
3
]
<
<
32
)
+
(
ints
[
4
]
<
<
64
)
+
(
ints
[
5
]
<
<
64
)
+
(
ints
[
6
]
<
<
128
)
+
(
ints
[
7
]
<
<
256
)
;
}
for
(
idx
=
0
;
idx
<
len
;
+
+
idx
)
{
for
(
jdx
=
0
;
jdx
<
len
;
+
+
jdx
)
{
first
=
distinctNaNs
[
idx
]
;
second
=
distinctNaNs
[
jdx
]
;
if
(
byteValue
(
first
)
=
=
=
byteValue
(
second
)
)
{
continue
;
}
subject
=
{
}
;
subject
.
prop
=
first
;
subject
.
prop
=
second
;
assert
.
sameValue
(
byteValue
(
subject
.
prop
)
byteValue
(
second
)
'
Property
value
was
re
-
set
'
)
;
}
}
reportCompare
(
0
0
)
;
