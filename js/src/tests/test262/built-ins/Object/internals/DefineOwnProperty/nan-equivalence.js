var
isLittleEndian
=
new
Uint8Array
(
new
Uint16Array
(
[
1
]
)
.
buffer
)
[
0
]
!
=
=
0
;
var
float
=
new
Float64Array
(
1
)
;
var
ints
=
new
Uint8Array
(
float
.
buffer
)
;
var
len
=
distinctNaNs
.
length
;
function
byteValue
(
value
)
{
float
[
0
]
=
value
;
var
hex
=
"
0123456789ABCDEF
"
;
var
s
=
"
"
;
for
(
var
i
=
0
;
i
<
8
;
+
+
i
)
{
var
v
=
ints
[
isLittleEndian
?
7
-
i
:
i
]
;
s
+
=
hex
[
(
v
>
>
4
)
&
0xf
]
+
hex
[
v
&
0xf
]
;
}
return
s
;
}
for
(
var
idx
=
0
;
idx
<
len
;
+
+
idx
)
{
for
(
var
jdx
=
0
;
jdx
<
len
;
+
+
jdx
)
{
if
(
byteValue
(
distinctNaNs
[
idx
]
)
=
=
=
byteValue
(
distinctNaNs
[
jdx
]
)
)
{
continue
;
}
var
subject
=
{
}
;
subject
.
prop
=
distinctNaNs
[
idx
]
;
subject
.
prop
=
distinctNaNs
[
jdx
]
;
assert
.
sameValue
(
byteValue
(
subject
.
prop
)
byteValue
(
distinctNaNs
[
jdx
]
)
'
Property
value
was
re
-
set
'
)
;
}
}
reportCompare
(
0
0
)
;
