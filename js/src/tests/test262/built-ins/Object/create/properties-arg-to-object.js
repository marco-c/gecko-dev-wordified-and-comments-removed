var
proto
=
{
}
;
var
obj
;
obj
=
Object
.
create
(
proto
true
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
obj
)
proto
'
Properties
is
true
:
prototype
is
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertyNames
(
obj
)
.
length
0
'
Properties
is
true
:
no
keys
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertySymbols
(
obj
)
.
length
0
'
Properties
is
true
:
no
symbol
keys
set
'
)
;
obj
=
undefined
;
obj
=
Object
.
create
(
proto
false
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
obj
)
proto
'
Properties
is
false
:
prototype
is
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertyNames
(
obj
)
.
length
0
'
Properties
is
false
:
no
keys
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertySymbols
(
obj
)
.
length
0
'
Properties
is
false
:
no
symbol
keys
set
'
)
;
obj
=
undefined
;
obj
=
Object
.
create
(
proto
1
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
obj
)
proto
'
Properties
is
1
:
prototype
is
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertyNames
(
obj
)
.
length
0
'
Properties
is
1
:
no
keys
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertySymbols
(
obj
)
.
length
0
'
Properties
is
1
:
no
symbol
keys
set
'
)
;
obj
=
undefined
;
obj
=
Object
.
create
(
proto
NaN
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
obj
)
proto
'
Properties
is
NaN
:
prototype
is
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertyNames
(
obj
)
.
length
0
'
Properties
is
NaN
:
no
keys
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertySymbols
(
obj
)
.
length
0
'
Properties
is
NaN
:
no
symbol
keys
set
'
)
;
obj
=
undefined
;
obj
=
Object
.
create
(
proto
'
'
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
obj
)
proto
'
Properties
is
the
empty
string
:
prototype
is
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertyNames
(
obj
)
.
length
0
'
Properties
is
the
empty
string
:
no
keys
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertySymbols
(
obj
)
.
length
0
'
Properties
is
the
empty
string
:
no
symbol
keys
set
'
)
;
obj
=
undefined
;
obj
=
Object
.
create
(
proto
Symbol
(
'
s
'
)
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
obj
)
proto
'
Properties
is
symbol
:
prototype
is
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertyNames
(
obj
)
.
length
0
'
Properties
is
symbol
:
no
keys
set
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertySymbols
(
obj
)
.
length
0
'
Properties
is
symbol
:
no
symbol
keys
set
'
)
;
reportCompare
(
0
0
)
;
