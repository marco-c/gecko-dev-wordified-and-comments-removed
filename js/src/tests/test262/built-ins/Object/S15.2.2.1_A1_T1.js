var
obj
=
new
Object
(
)
;
if
(
obj
=
=
=
undefined
)
{
ERROR
(
'
#
0
:
new
Object
(
)
return
the
newly
created
native
object
.
'
)
;
}
if
(
obj
.
constructor
!
=
=
Object
)
{
ERROR
(
'
#
1
:
new
Object
(
)
create
a
new
native
ECMAScript
object
'
)
;
}
if
(
!
(
Object
.
prototype
.
isPrototypeOf
(
obj
)
)
)
{
ERROR
(
'
#
2
:
when
new
Object
(
)
calls
the
[
[
Prototype
]
]
property
of
the
newly
constructed
object
is
set
to
the
Object
prototype
object
.
'
)
;
}
var
to_string_result
=
'
[
object
'
+
'
Object
'
+
'
]
'
;
if
(
obj
.
toString
(
)
!
=
=
to_string_result
)
{
ERROR
(
'
#
3
:
when
new
Object
(
)
calls
the
[
[
Class
]
]
property
of
the
newly
constructed
object
is
set
to
"
Object
"
.
'
)
;
}
if
(
obj
.
valueOf
(
)
.
toString
(
)
!
=
=
to_string_result
.
toString
(
)
)
{
ERROR
(
'
#
4
:
when
new
Object
(
)
calls
the
newly
constructed
object
has
no
[
[
Value
]
]
property
.
'
)
;
}
reportCompare
(
0
0
)
;
