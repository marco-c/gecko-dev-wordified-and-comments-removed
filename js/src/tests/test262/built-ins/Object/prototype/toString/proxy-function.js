var
functionProxy
=
new
Proxy
(
function
(
)
{
}
{
}
)
;
var
functionProxyProxy
=
new
Proxy
(
functionProxy
{
}
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
functionProxy
)
'
[
object
Function
]
'
'
function
proxy
'
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
functionProxyProxy
)
'
[
object
Function
]
'
'
proxy
for
function
proxy
'
)
;
var
arrowProxy
=
new
Proxy
(
(
)
=
>
{
}
{
}
)
;
var
arrowProxyProxy
=
new
Proxy
(
arrowProxy
{
}
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
arrowProxy
)
'
[
object
Function
]
'
'
arrow
function
proxy
'
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
arrowProxyProxy
)
'
[
object
Function
]
'
'
proxy
for
arrow
function
proxy
'
)
;
var
generatorProxy
=
new
Proxy
(
function
*
(
)
{
}
{
}
)
;
var
generatorProxyProxy
=
new
Proxy
(
generatorProxy
{
}
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
generatorProxy
)
'
[
object
GeneratorFunction
]
'
'
generator
function
proxy
'
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
generatorProxyProxy
)
'
[
object
GeneratorFunction
]
'
'
proxy
for
generator
function
proxy
'
)
;
var
asyncProxy
=
new
Proxy
(
async
function
(
)
{
}
{
}
)
;
var
asyncProxyProxy
=
new
Proxy
(
asyncProxy
{
}
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
asyncProxy
)
'
[
object
AsyncFunction
]
'
'
async
function
proxy
'
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
asyncProxyProxy
)
'
[
object
AsyncFunction
]
'
'
proxy
for
async
function
proxy
'
)
;
reportCompare
(
0
0
)
;
