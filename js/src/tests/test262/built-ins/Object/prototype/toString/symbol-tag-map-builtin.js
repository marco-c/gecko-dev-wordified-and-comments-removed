var
toString
=
Object
.
prototype
.
toString
;
var
map
=
new
Map
(
)
;
delete
Map
.
prototype
[
Symbol
.
toStringTag
]
;
assert
.
sameValue
(
toString
.
call
(
map
)
'
[
object
Object
]
'
)
;
var
mapIter
=
map
[
Symbol
.
iterator
]
(
)
;
var
mapIterProto
=
Object
.
getPrototypeOf
(
mapIter
)
;
assert
.
sameValue
(
toString
.
call
(
mapIter
)
'
[
object
Map
Iterator
]
'
)
;
Object
.
defineProperty
(
mapIterProto
Symbol
.
toStringTag
{
configurable
:
true
get
:
function
(
)
{
return
new
String
(
'
ShouldNotBeUnwrapped
'
)
;
}
}
)
;
assert
.
sameValue
(
toString
.
call
(
mapIter
)
'
[
object
Object
]
'
)
;
delete
mapIterProto
[
Symbol
.
toStringTag
]
;
assert
.
sameValue
(
toString
.
call
(
mapIter
)
'
[
object
Iterator
]
'
)
;
reportCompare
(
0
0
)
;
