var
toString
=
Object
.
prototype
.
toString
;
var
set
=
new
Set
(
)
;
delete
Set
.
prototype
[
Symbol
.
toStringTag
]
;
assert
.
sameValue
(
toString
.
call
(
set
)
'
[
object
Object
]
'
)
;
var
setIter
=
set
[
Symbol
.
iterator
]
(
)
;
var
setIterProto
=
Object
.
getPrototypeOf
(
setIter
)
;
assert
.
sameValue
(
toString
.
call
(
setIter
)
'
[
object
Set
Iterator
]
'
)
;
Object
.
defineProperty
(
setIterProto
Symbol
.
toStringTag
{
configurable
:
true
get
:
function
(
)
{
return
new
String
(
'
ShouldNotBeUnwrapped
'
)
;
}
}
)
;
assert
.
sameValue
(
toString
.
call
(
setIter
)
'
[
object
Object
]
'
)
;
delete
setIterProto
[
Symbol
.
toStringTag
]
;
assert
.
sameValue
(
toString
.
call
(
setIter
)
'
[
object
Iterator
]
'
)
;
reportCompare
(
0
0
)
;
