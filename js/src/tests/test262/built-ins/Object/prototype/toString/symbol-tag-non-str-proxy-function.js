var
generatorProxy
=
new
Proxy
(
function
*
(
)
{
}
{
}
)
;
var
generatorProxyProxy
=
new
Proxy
(
generatorProxy
{
}
)
;
delete
generatorProxy
.
constructor
.
prototype
[
Symbol
.
toStringTag
]
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
generatorProxy
)
'
[
object
Function
]
'
'
generator
function
proxy
without
Symbol
.
toStringTag
'
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
generatorProxyProxy
)
'
[
object
Function
]
'
'
proxy
for
generator
function
proxy
without
Symbol
.
toStringTag
'
)
;
var
asyncProxy
=
new
Proxy
(
async
function
(
)
{
}
{
}
)
;
var
asyncProxyProxy
=
new
Proxy
(
asyncProxy
{
}
)
;
Object
.
defineProperty
(
asyncProxy
.
constructor
.
prototype
Symbol
.
toStringTag
{
value
:
undefined
}
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
asyncProxy
)
'
[
object
Function
]
'
'
async
function
proxy
without
Symbol
.
toStringTag
'
)
;
assert
.
sameValue
(
Object
.
prototype
.
toString
.
call
(
asyncProxyProxy
)
'
[
object
Function
]
'
'
proxy
for
async
function
proxy
without
Symbol
.
toStringTag
'
)
;
reportCompare
(
0
0
)
;
