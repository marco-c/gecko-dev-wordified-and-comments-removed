(
function
(
a
b
c
)
{
Object
.
defineProperty
(
arguments
"
genericProperty
"
{
get
:
function
(
)
{
return
1001
;
}
set
:
function
(
value
)
{
this
.
testgetFunction1
=
value
;
}
enumerable
:
true
configurable
:
true
}
)
;
function
getFunc
(
)
{
return
"
getFunctionString
"
;
}
function
setFunc
(
value
)
{
this
.
testgetFunction
=
value
;
}
Object
.
defineProperty
(
arguments
"
genericProperty
"
{
get
:
getFunc
set
:
setFunc
enumerable
:
false
configurable
:
false
}
)
;
if
(
c
!
=
=
3
)
{
throw
new
Test262Error
(
'
Expected
c
=
=
=
3
actually
'
+
c
)
;
}
verifyEqualTo
(
arguments
"
genericProperty
"
getFunc
(
)
)
;
verifyWritable
(
arguments
"
genericProperty
"
"
testgetFunction
"
)
;
verifyNotEnumerable
(
arguments
"
genericProperty
"
)
;
verifyNotConfigurable
(
arguments
"
genericProperty
"
)
;
}
(
1
2
3
)
)
;
reportCompare
(
0
0
)
;
