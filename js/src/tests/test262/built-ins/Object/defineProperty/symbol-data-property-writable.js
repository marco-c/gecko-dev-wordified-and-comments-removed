var
sym
=
Symbol
(
)
;
var
obj
=
{
}
;
Object
.
defineProperty
(
obj
sym
{
value
:
1
writable
:
true
}
)
;
assert
.
sameValue
(
sym
in
obj
true
"
The
result
of
sym
in
obj
is
true
"
)
;
verifyProperty
(
obj
sym
{
value
:
1
configurable
:
false
writable
:
true
enumerable
:
false
}
)
;
assert
.
sameValue
(
Object
.
prototype
.
propertyIsEnumerable
.
call
(
obj
sym
)
false
"
Object
.
prototype
.
propertyIsEnumerable
.
call
(
obj
sym
)
returns
false
"
)
;
obj
[
sym
]
=
2
;
assert
.
sameValue
(
obj
[
sym
]
2
"
The
value
of
obj
[
sym
]
is
2
"
)
;
reportCompare
(
0
0
)
;
