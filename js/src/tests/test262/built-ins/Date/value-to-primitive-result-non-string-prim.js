var
toPrimitive
=
{
}
;
var
returnValue
;
toPrimitive
[
Symbol
.
toPrimitive
]
=
function
(
)
{
return
returnValue
;
}
;
returnValue
=
8
;
assert
.
sameValue
(
new
Date
(
toPrimitive
)
.
getTime
(
)
8
'
number
'
)
;
returnValue
=
undefined
;
assert
.
sameValue
(
new
Date
(
toPrimitive
)
.
getTime
(
)
NaN
'
undefined
'
)
;
returnValue
=
true
;
assert
.
sameValue
(
new
Date
(
toPrimitive
)
.
getTime
(
)
1
'
boolean
true
'
)
;
returnValue
=
false
;
assert
.
sameValue
(
new
Date
(
toPrimitive
)
.
getTime
(
)
0
'
boolean
false
'
)
;
returnValue
=
null
;
assert
.
sameValue
(
new
Date
(
toPrimitive
)
.
getTime
(
)
0
'
null
'
)
;
returnValue
=
Symbol
.
toPrimitive
;
assert
.
throws
(
TypeError
function
(
)
{
new
Date
(
toPrimitive
)
;
}
'
symbol
'
)
;
reportCompare
(
0
0
)
;
