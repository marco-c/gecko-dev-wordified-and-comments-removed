var
date
=
new
Date
(
2016
6
)
;
var
returnValue
expected
;
returnValue
=
date
.
setDate
(
6
)
;
expected
=
new
Date
(
2016
6
6
)
.
getTime
(
)
;
assert
.
sameValue
(
returnValue
expected
'
within
unit
boundary
(
return
value
)
'
)
;
assert
.
sameValue
(
date
.
getTime
(
)
expected
'
within
unit
boundary
(
[
[
DateValue
]
]
slot
)
'
)
;
returnValue
=
date
.
setDate
(
0
)
;
expected
=
new
Date
(
2016
5
30
)
.
getTime
(
)
;
assert
.
sameValue
(
returnValue
expected
'
before
time
unit
boundary
(
return
value
)
'
)
;
assert
.
sameValue
(
date
.
getTime
(
)
expected
'
before
time
unit
boundary
(
[
[
DateValue
]
]
slot
)
'
)
;
returnValue
=
date
.
setDate
(
31
)
;
expected
=
new
Date
(
2016
6
1
)
.
getTime
(
)
;
assert
.
sameValue
(
returnValue
expected
'
after
time
unit
boundary
(
return
value
)
'
)
;
assert
.
sameValue
(
date
.
getTime
(
)
expected
'
after
time
unit
boundary
(
[
[
DateValue
]
]
slot
)
'
)
;
reportCompare
(
0
0
)
;
