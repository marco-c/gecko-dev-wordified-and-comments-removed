function
assertRelativeDateMs
(
date
expectedMs
)
{
var
actualMs
=
date
.
valueOf
(
)
;
var
localOffset
=
date
.
getTimezoneOffset
(
)
*
60000
;
if
(
actualMs
-
localOffset
!
=
=
expectedMs
)
{
ERROR
(
'
Expected
'
+
date
+
'
to
be
'
+
expectedMs
+
'
milliseconds
from
the
Unix
epoch
'
)
;
}
}
var
date_1899_end
=
-
2208988800001
;
var
date_1900_start
=
-
2208988800000
;
var
date_1969_end
=
-
1
;
var
date_1970_start
=
0
;
var
date_1999_end
=
946684799999
;
var
date_2000_start
=
946684800000
;
var
date_2099_end
=
4102444799999
;
var
date_2100_start
=
4102444800000
;
var
start_of_time
=
-
8
.
64e15
;
var
end_of_time
=
8
.
64e15
;
function
isConstructor
(
f
)
{
try
{
Reflect
.
construct
(
function
(
)
{
}
[
]
f
)
;
}
catch
(
e
)
{
return
false
;
}
return
true
;
}
