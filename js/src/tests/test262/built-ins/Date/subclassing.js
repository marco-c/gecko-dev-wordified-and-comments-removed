var
callCount
=
0
;
var
Ctor
=
function
(
)
{
callCount
+
=
1
;
}
;
var
instance
;
instance
=
Reflect
.
construct
(
Date
[
64
]
Ctor
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
instance
)
Ctor
.
prototype
'
constructor
defines
an
object
prototype
property
'
)
;
assert
.
sameValue
(
callCount
0
'
constructor
not
invoked
'
)
;
assert
.
sameValue
(
Date
.
prototype
.
getTime
.
call
(
instance
)
64
'
proper
subclass
has
a
[
[
DateValue
]
]
slot
'
)
;
Ctor
.
prototype
=
null
;
instance
=
Reflect
.
construct
(
Date
[
64
]
Ctor
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
instance
)
Date
.
prototype
'
constructor
does
not
defines
an
object
prototype
property
'
)
;
assert
.
sameValue
(
callCount
0
'
constructor
not
invoked
'
)
;
assert
.
sameValue
(
instance
.
getTime
(
)
64
'
direct
instance
has
a
[
[
DateValue
]
]
slot
'
)
;
reportCompare
(
0
0
)
;
