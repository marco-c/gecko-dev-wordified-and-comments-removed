const
s1
=
new
Set
(
[
]
)
;
const
s2
=
new
Set
(
[
1
2
]
)
;
let
expected
=
[
1
2
]
;
let
combined
=
s1
.
symmetricDifference
(
s2
)
;
assert
.
compareArray
(
[
.
.
.
combined
]
expected
)
;
assert
.
sameValue
(
combined
instanceof
Set
true
"
The
returned
object
is
a
Set
"
)
;
const
s3
=
new
Set
(
[
1
2
]
)
;
const
s4
=
new
Set
(
[
]
)
;
expected
=
[
1
2
]
;
combined
=
s3
.
symmetricDifference
(
s4
)
;
assert
.
compareArray
(
[
.
.
.
combined
]
expected
)
;
assert
.
sameValue
(
combined
instanceof
Set
true
"
The
returned
object
is
a
Set
"
)
;
const
s5
=
new
Set
(
[
]
)
;
const
s6
=
new
Set
(
[
]
)
;
expected
=
[
]
;
combined
=
s5
.
symmetricDifference
(
s6
)
;
assert
.
compareArray
(
[
.
.
.
combined
]
expected
)
;
assert
.
sameValue
(
combined
instanceof
Set
true
"
The
returned
object
is
a
Set
"
)
;
reportCompare
(
0
0
)
;
