const
baseSet
=
new
Set
(
[
"
a
"
"
b
"
"
c
"
]
)
;
const
evilSetLike
=
{
size
:
3
has
(
v
)
{
if
(
v
=
=
=
"
a
"
)
{
baseSet
.
delete
(
"
c
"
)
;
}
return
[
"
x
"
"
a
"
"
b
"
]
.
includes
(
v
)
;
}
*
keys
(
)
{
throw
new
Test262Error
(
"
Set
.
prototype
.
isSubsetOf
should
not
call
its
argument
'
s
keys
iterator
"
)
;
}
}
;
const
result
=
baseSet
.
isSubsetOf
(
evilSetLike
)
;
assert
.
sameValue
(
result
true
)
;
const
expectedNewBase
=
[
"
a
"
"
b
"
]
;
assert
.
compareArray
(
[
.
.
.
baseSet
]
expectedNewBase
)
;
reportCompare
(
0
0
)
;
