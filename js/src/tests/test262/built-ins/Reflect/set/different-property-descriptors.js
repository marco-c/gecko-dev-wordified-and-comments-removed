var
receiver
=
{
}
;
var
fn
=
function
(
)
{
}
;
Object
.
defineProperty
(
receiver
'
p
'
{
set
:
fn
}
)
;
var
o1
=
{
}
;
var
result
=
Reflect
.
set
(
o1
'
p
'
42
receiver
)
;
assert
.
sameValue
(
result
false
'
target
has
no
own
p
and
receiver
.
p
has
an
accessor
descriptor
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertyDescriptor
(
receiver
'
p
'
)
.
set
fn
'
receiver
.
p
is
not
changed
'
)
;
assert
.
sameValue
(
o1
.
hasOwnProperty
(
'
p
'
)
false
'
target
.
p
is
not
set
'
)
;
var
o2
=
{
p
:
43
}
;
result
=
Reflect
.
set
(
o2
'
p
'
42
receiver
)
;
assert
.
sameValue
(
result
false
'
target
.
p
has
a
data
descriptor
and
receiver
.
p
has
an
accessor
descriptor
'
)
;
assert
.
sameValue
(
Object
.
getOwnPropertyDescriptor
(
receiver
'
p
'
)
.
set
fn
'
receiver
.
p
is
not
changed
'
)
;
assert
.
sameValue
(
o2
.
p
43
'
target
.
p
is
not
changed
'
)
;
reportCompare
(
0
0
)
;
