var
args
;
var
count
=
0
;
var
_this
;
var
proto
=
{
}
;
Object
.
defineProperty
(
proto
'
p
'
{
set
:
function
(
)
{
_this
=
this
;
args
=
arguments
;
count
+
+
;
}
}
)
;
var
target
=
Object
.
create
(
proto
)
;
var
result
=
Reflect
.
set
(
target
'
p
'
42
)
;
assert
.
sameValue
(
result
true
'
returns
true
'
)
;
assert
.
sameValue
(
args
.
length
1
'
prototype
set
called
with
1
argument
'
)
;
assert
.
sameValue
(
args
[
0
]
42
'
prototype
set
called
with
42
'
)
;
assert
.
sameValue
(
_this
target
'
prototype
set
called
with
target
as
this
'
)
;
assert
.
sameValue
(
count
1
'
prototype
set
called
once
'
)
;
reportCompare
(
0
0
)
;
