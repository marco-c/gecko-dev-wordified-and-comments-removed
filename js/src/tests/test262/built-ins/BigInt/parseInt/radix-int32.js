assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
2
.
1
)
0b11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
2
.
5
)
0b11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
2
.
9
)
0b11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
2
.
000000000001
)
0b11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
2
.
999999999999
)
0b11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
4294967298
)
0b11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
4294967296
)
11n
)
;
assert
.
throws
(
SyntaxError
(
)
=
>
BigInt
.
parseInt
(
"
11
"
-
2147483650
)
"
-
2147483650
"
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
-
4294967294
)
0b11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
NaN
)
11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
+
0
)
11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
-
0
)
11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
Number
.
POSITIVE_INFINITY
)
11n
)
;
assert
.
sameValue
(
BigInt
.
parseInt
(
"
11
"
Number
.
NEGATIVE_INFINITY
)
11n
)
;
reportCompare
(
0
0
)
;
