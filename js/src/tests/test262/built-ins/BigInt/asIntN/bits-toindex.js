testCoercibleToIndexZero
(
function
(
zero
)
{
assert
.
sameValue
(
BigInt
.
asIntN
(
zero
1n
)
0n
)
;
}
)
;
testCoercibleToIndexOne
(
function
(
one
)
{
assert
.
sameValue
(
BigInt
.
asIntN
(
one
1n
)
-
1n
)
;
}
)
;
testCoercibleToIndexFromIndex
(
3
function
(
three
)
{
assert
.
sameValue
(
BigInt
.
asIntN
(
three
10n
)
2n
)
;
}
)
;
testNotCoercibleToIndex
(
function
(
error
value
)
{
assert
.
throws
(
error
function
(
)
{
BigInt
.
asIntN
(
value
0n
)
;
}
)
;
}
)
;
reportCompare
(
0
0
)
;
