assert
(
Error
.
hasOwnProperty
(
'
prototype
'
)
'
Error
.
hasOwnProperty
(
\
'
prototype
\
'
)
must
return
true
'
)
;
assert
(
!
Error
.
propertyIsEnumerable
(
'
prototype
'
)
'
The
value
of
!
Error
.
propertyIsEnumerable
(
\
'
prototype
\
'
)
is
expected
to
be
true
'
)
;
var
cout
=
0
;
for
(
var
p
in
Error
)
{
if
(
p
=
=
=
"
prototype
"
)
{
cout
+
+
;
}
}
assert
.
sameValue
(
cout
0
'
The
value
of
cout
is
expected
to
be
0
'
)
;
reportCompare
(
0
0
)
;
