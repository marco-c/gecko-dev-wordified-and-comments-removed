var
constr
=
Error
.
prototype
.
constructor
;
var
err
=
new
constr
;
if
(
err
=
=
=
undefined
)
{
ERROR
(
'
#
0
:
constr
=
Error
.
prototype
.
constructor
;
err
=
new
constr
;
err
=
=
=
undefined
'
)
;
}
if
(
err
.
constructor
!
=
=
Error
)
{
ERROR
(
'
#
1
:
constr
=
Error
.
prototype
.
constructor
;
err
=
new
constr
;
err
.
constructor
=
=
=
Error
.
Actual
:
'
+
err
.
constructor
)
;
}
if
(
!
(
Error
.
prototype
.
isPrototypeOf
(
err
)
)
)
{
ERROR
(
'
#
2
:
constr
=
Error
.
prototype
.
constructor
;
err
=
new
constr
;
Error
.
prototype
.
isPrototypeOf
(
err
)
return
true
.
Actual
:
'
+
Error
.
prototype
.
isPrototypeOf
(
err
)
)
;
}
Error
.
prototype
.
toString
=
Object
.
prototype
.
toString
;
var
to_string_result
=
'
[
object
'
+
'
Error
'
+
'
]
'
;
if
(
err
.
toString
(
)
!
=
=
to_string_result
)
{
ERROR
(
'
#
3
:
constr
=
Error
.
prototype
.
constructor
;
err
=
new
constr
;
Error
.
prototype
.
toString
=
Object
.
prototype
.
toString
;
err
.
toString
(
)
=
=
=
\
'
[
object
Error
]
\
'
.
Actual
:
'
+
err
.
toString
(
)
)
;
}
if
(
err
.
valueOf
(
)
.
toString
(
)
!
=
=
to_string_result
)
{
ERROR
(
'
#
4
:
constr
=
Error
.
prototype
.
constructor
;
err
=
new
constr
;
Error
.
prototype
.
toString
=
Object
.
prototype
.
toString
;
err
.
valueOf
(
)
.
toString
(
)
=
=
=
\
'
[
object
Error
]
\
'
.
Actual
:
'
+
err
.
valueOf
(
)
.
toString
(
)
)
;
}
reportCompare
(
0
0
)
;
