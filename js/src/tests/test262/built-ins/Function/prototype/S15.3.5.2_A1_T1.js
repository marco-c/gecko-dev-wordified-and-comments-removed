var
f
=
new
Function
(
"
"
null
)
;
assert
(
f
.
hasOwnProperty
(
'
prototype
'
)
)
;
var
fproto
=
f
.
prototype
;
verifyNotConfigurable
(
f
"
prototype
"
)
;
try
{
assert
.
sameValue
(
delete
f
.
prototype
false
)
;
}
catch
(
e
)
{
if
(
e
instanceof
Test262Error
)
{
throw
e
;
}
assert
(
e
instanceof
TypeError
)
;
}
if
(
f
.
prototype
!
=
=
fproto
)
{
throw
new
Test262Error
(
'
#
3
:
the
prototype
property
has
the
attributes
{
DontDelete
}
'
)
;
}
reportCompare
(
0
0
)
;
