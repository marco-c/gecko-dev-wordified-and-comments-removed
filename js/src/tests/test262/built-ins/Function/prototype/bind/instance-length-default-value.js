function
foo
(
)
{
}
Object
.
defineProperty
(
foo
"
length
"
{
value
:
undefined
}
)
;
assert
.
sameValue
(
foo
.
bind
(
null
1
)
.
length
0
"
undefined
"
)
;
Object
.
defineProperty
(
foo
"
length
"
{
value
:
null
}
)
;
assert
.
sameValue
(
foo
.
bind
(
null
1
)
.
length
0
"
null
"
)
;
Object
.
defineProperty
(
foo
"
length
"
{
value
:
true
}
)
;
assert
.
sameValue
(
foo
.
bind
(
null
1
)
.
length
0
"
boolean
"
)
;
Object
.
defineProperty
(
foo
"
length
"
{
value
:
"
1
"
}
)
;
assert
.
sameValue
(
foo
.
bind
(
null
1
)
.
length
0
"
string
"
)
;
Object
.
defineProperty
(
foo
"
length
"
{
value
:
Symbol
(
"
1
"
)
}
)
;
assert
.
sameValue
(
foo
.
bind
(
null
1
)
.
length
0
"
symbol
"
)
;
Object
.
defineProperty
(
foo
"
length
"
{
value
:
new
Number
(
1
)
}
)
;
assert
.
sameValue
(
foo
.
bind
(
null
1
)
.
length
0
"
Number
object
"
)
;
function
bar
(
)
{
}
Object
.
setPrototypeOf
(
bar
{
length
:
42
}
)
;
assert
(
delete
bar
.
length
)
;
var
bound
=
Function
.
prototype
.
bind
.
call
(
bar
null
1
)
;
assert
.
sameValue
(
bound
.
length
0
"
not
own
"
)
;
reportCompare
(
0
0
)
;
