assert
.
sameValue
(
typeof
ShadowRealm
.
prototype
.
evaluate
'
function
'
'
This
test
must
fail
if
ShadowRealm
.
prototype
.
evaluate
is
not
a
function
'
)
;
const
r
=
new
ShadowRealm
(
)
;
assert
.
throws
(
TypeError
(
)
=
>
r
.
evaluate
(
const
revocable
=
Proxy
.
revocable
(
(
)
=
>
{
}
{
}
)
;
revocable
.
revoke
(
)
;
revocable
.
proxy
;
)
'
TypeError
on
wrapping
a
revoked
callable
proxy
'
)
;
assert
.
throws
(
TypeError
(
)
=
>
r
.
evaluate
(
const
fn
=
(
)
=
>
{
}
;
Object
.
defineProperty
(
fn
'
name
'
{
get
(
)
{
throw
new
Error
(
)
;
}
}
)
;
fn
;
)
'
TypeError
on
wrapping
a
fn
with
throwing
name
accessor
'
)
;
assert
.
throws
(
TypeError
(
)
=
>
r
.
evaluate
(
const
fn
=
(
)
=
>
{
}
;
Object
.
defineProperty
(
fn
'
length
'
{
get
(
)
{
throw
new
Error
(
)
;
}
}
)
;
fn
;
)
'
TypeError
on
wrapping
a
fn
with
throwing
length
accessor
'
)
;
assert
.
throws
(
TypeError
(
)
=
>
r
.
evaluate
(
const
proxy
=
new
Proxy
(
(
)
=
>
{
}
{
getOwnPropertyDescriptor
(
target
key
)
{
throw
new
Error
(
)
;
}
}
)
;
proxy
;
)
'
TypeError
on
wrapping
a
callable
proxy
with
throwing
getOwnPropertyDescriptor
trap
'
)
;
reportCompare
(
0
0
)
;
