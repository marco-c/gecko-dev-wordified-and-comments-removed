var
sab
=
new
SharedArrayBuffer
(
1024
)
;
var
ab
=
new
ArrayBuffer
(
16
)
;
var
views
=
intArrayConstructors
.
slice
(
)
;
testWithTypedArrayConstructors
(
function
(
TA
)
{
var
view
=
new
TA
(
sab
32
20
)
;
var
control
=
new
TA
(
ab
0
2
)
;
view
[
3
]
=
-
5
;
control
[
0
]
=
-
5
;
assert
.
sameValue
(
Atomics
.
load
(
view
3
)
control
[
0
]
"
Result
is
subject
to
coercion
"
)
;
control
[
0
]
=
12345
;
view
[
3
]
=
12345
;
assert
.
sameValue
(
Atomics
.
load
(
view
3
)
control
[
0
]
"
Result
is
subject
to
chopping
"
)
;
control
[
0
]
=
123456789
;
view
[
3
]
=
123456789
;
assert
.
sameValue
(
Atomics
.
load
(
view
3
)
control
[
0
]
"
Result
is
subject
to
chopping
"
)
;
testWithAtomicsInBoundsIndices
(
function
(
IdxGen
)
{
let
Idx
=
IdxGen
(
view
)
;
view
.
fill
(
0
)
;
Atomics
.
store
(
view
Idx
37
)
;
assert
.
sameValue
(
Atomics
.
load
(
view
Idx
)
37
)
;
}
)
;
}
views
)
;
reportCompare
(
0
0
)
;
