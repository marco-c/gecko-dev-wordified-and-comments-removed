const
sab
=
new
SharedArrayBuffer
(
1024
)
;
const
ab
=
new
ArrayBuffer
(
16
)
;
const
views
=
nonClampedIntArrayConstructors
.
slice
(
)
;
testWithTypedArrayConstructors
(
function
(
TA
)
{
const
view
=
new
TA
(
sab
32
20
)
;
const
control
=
new
TA
(
ab
0
2
)
;
view
[
3
]
=
-
5
;
control
[
0
]
=
-
5
;
assert
.
sameValue
(
Atomics
.
load
(
view
3
)
control
[
0
]
'
Atomics
.
load
(
view
3
)
returns
the
value
of
control
[
0
]
(
-
5
)
'
)
;
control
[
0
]
=
12345
;
view
[
3
]
=
12345
;
assert
.
sameValue
(
Atomics
.
load
(
view
3
)
control
[
0
]
'
Atomics
.
load
(
view
3
)
returns
the
value
of
control
[
0
]
(
12345
)
'
)
;
control
[
0
]
=
123456789
;
view
[
3
]
=
123456789
;
assert
.
sameValue
(
Atomics
.
load
(
view
3
)
control
[
0
]
'
Atomics
.
load
(
view
3
)
returns
the
value
of
control
[
0
]
(
123456789
)
'
)
;
testWithAtomicsInBoundsIndices
(
function
(
IdxGen
)
{
let
Idx
=
IdxGen
(
view
)
;
view
.
fill
(
0
)
;
Atomics
.
store
(
view
Idx
37
)
;
assert
.
sameValue
(
Atomics
.
load
(
view
Idx
)
37
'
Atomics
.
load
(
view
Idx
)
returns
37
'
)
;
}
)
;
}
views
)
;
reportCompare
(
0
0
)
;
