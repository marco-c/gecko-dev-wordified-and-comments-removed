const
i32a
=
new
Int32Array
(
new
SharedArrayBuffer
(
Int32Array
.
BYTES_PER_ELEMENT
*
4
)
)
;
const
valueOf
=
{
valueOf
:
function
(
)
{
return
true
;
}
}
;
const
toPrimitive
=
{
[
Symbol
.
toPrimitive
]
:
function
(
)
{
return
true
;
}
}
;
assert
.
sameValue
(
Atomics
.
wait
(
i32a
0
0
true
)
'
timed
-
out
'
'
Atomics
.
wait
(
i32a
0
0
true
)
returns
"
timed
-
out
"
'
)
;
assert
.
sameValue
(
Atomics
.
wait
(
i32a
0
0
valueOf
)
'
timed
-
out
'
'
Atomics
.
wait
(
i32a
0
0
valueOf
)
returns
"
timed
-
out
"
'
)
;
assert
.
sameValue
(
Atomics
.
wait
(
i32a
0
0
toPrimitive
)
'
timed
-
out
'
'
Atomics
.
wait
(
i32a
0
0
toPrimitive
)
returns
"
timed
-
out
"
'
)
;
reportCompare
(
0
0
)
;
