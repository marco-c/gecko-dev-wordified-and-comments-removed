function
getReport
(
)
{
var
r
;
while
(
(
r
=
262
.
agent
.
getReport
(
)
)
=
=
null
)
{
262
.
agent
.
sleep
(
100
)
;
}
return
r
;
}
262
.
agent
.
start
(
262
.
agent
.
receiveBroadcast
(
function
(
sab
)
{
var
int32Array
=
new
Int32Array
(
sab
)
;
262
.
agent
.
report
(
Atomics
.
wait
(
int32Array
0
0
NaN
)
)
;
/
/
NaN
=
>
+
Infinity
262
.
agent
.
leaving
(
)
;
}
)
)
;
var
int32Array
=
new
Int32Array
(
new
SharedArrayBuffer
(
Int32Array
.
BYTES_PER_ELEMENT
)
)
;
262
.
agent
.
broadcast
(
int32Array
.
buffer
)
;
262
.
agent
.
sleep
(
500
)
;
assert
.
sameValue
(
Atomics
.
wake
(
int32Array
0
)
1
)
;
assert
.
sameValue
(
getReport
(
)
"
ok
"
)
;
reportCompare
(
0
0
)
;
