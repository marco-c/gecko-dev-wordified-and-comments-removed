const
RUNNING
=
1
;
const
value
=
"
42n
"
;
262
.
agent
.
start
(
262
.
agent
.
receiveBroadcast
(
function
(
sab
)
{
const
i64a
=
new
BigInt64Array
(
sab
)
;
Atomics
.
add
(
i64a
{
RUNNING
}
1n
)
;
262
.
agent
.
report
(
Atomics
.
store
(
i64a
0
{
value
}
)
)
;
262
.
agent
.
report
(
Atomics
.
wait
(
i64a
0
0n
)
)
;
262
.
agent
.
leaving
(
)
;
}
)
;
)
;
const
i64a
=
new
BigInt64Array
(
new
SharedArrayBuffer
(
BigInt64Array
.
BYTES_PER_ELEMENT
*
4
)
)
;
262
.
agent
.
broadcast
(
i64a
.
buffer
)
;
262
.
agent
.
waitUntil
(
i64a
RUNNING
1n
)
;
262
.
agent
.
tryYield
(
)
;
assert
.
sameValue
(
262
.
agent
.
getReport
(
)
'
42
'
'
262
.
agent
.
getReport
(
)
returns
"
42
"
'
)
;
assert
.
sameValue
(
262
.
agent
.
getReport
(
)
'
not
-
equal
'
'
262
.
agent
.
getReport
(
)
returns
"
not
-
equal
"
'
)
;
reportCompare
(
0
0
)
;
