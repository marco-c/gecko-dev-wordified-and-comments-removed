const
poisoned
=
{
valueOf
:
function
(
)
{
throw
new
Test262Error
(
'
should
not
evaluate
this
code
'
)
;
}
}
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
wake
(
null
poisoned
poisoned
)
;
}
'
Atomics
.
wake
(
null
poisoned
poisoned
)
throws
TypeError
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
wake
(
undefined
poisoned
poisoned
)
;
}
'
Atomics
.
wake
(
undefined
poisoned
poisoned
)
throws
TypeError
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
wake
(
true
poisoned
poisoned
)
;
}
'
Atomics
.
wake
(
true
poisoned
poisoned
)
throws
TypeError
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
wake
(
false
poisoned
poisoned
)
;
}
'
Atomics
.
wake
(
false
poisoned
poisoned
)
throws
TypeError
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
wake
(
'
*
*
*
string
*
*
*
'
poisoned
poisoned
)
;
}
'
Atomics
.
wake
(
\
'
*
*
*
string
*
*
*
\
'
poisoned
poisoned
)
throws
TypeError
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
wake
(
Number
.
NEGATIVE_INFINITY
poisoned
poisoned
)
;
}
'
Atomics
.
wake
(
Number
.
NEGATIVE_INFINITY
poisoned
poisoned
)
throws
TypeError
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
wake
(
Symbol
(
'
*
*
*
symbol
*
*
*
'
)
poisoned
poisoned
)
;
}
'
Atomics
.
wake
(
Symbol
(
\
'
*
*
*
symbol
*
*
*
\
'
)
poisoned
poisoned
)
throws
TypeError
'
)
;
reportCompare
(
0
0
)
;
