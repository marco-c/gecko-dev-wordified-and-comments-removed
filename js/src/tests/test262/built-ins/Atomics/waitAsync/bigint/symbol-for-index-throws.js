assert
.
sameValue
(
typeof
Atomics
.
waitAsync
'
function
'
)
;
const
i64a
=
new
BigInt64Array
(
new
SharedArrayBuffer
(
BigInt64Array
.
BYTES_PER_ELEMENT
*
4
)
)
;
const
poisonedValueOf
=
{
valueOf
(
)
{
throw
new
Test262Error
(
'
should
not
evaluate
this
code
'
)
;
}
}
;
const
poisonedToPrimitive
=
{
[
Symbol
.
toPrimitive
]
(
)
{
throw
new
Test262Error
(
'
should
not
evaluate
this
code
'
)
;
}
}
;
assert
.
throws
(
Test262Error
function
(
)
{
Atomics
.
waitAsync
(
i64a
poisonedValueOf
poisonedValueOf
poisonedValueOf
)
;
}
'
Atomics
.
waitAsync
(
i64a
poisonedValueOf
poisonedValueOf
poisonedValueOf
)
throws
Test262Error
'
)
;
assert
.
throws
(
Test262Error
function
(
)
{
Atomics
.
waitAsync
(
i64a
poisonedToPrimitive
poisonedToPrimitive
poisonedToPrimitive
)
;
}
'
Atomics
.
waitAsync
(
i64a
poisonedToPrimitive
poisonedToPrimitive
poisonedToPrimitive
)
throws
Test262Error
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
waitAsync
(
i64a
Symbol
(
'
1
'
)
poisonedValueOf
poisonedValueOf
)
;
}
'
Atomics
.
waitAsync
(
i64a
Symbol
(
"
1
"
)
poisonedValueOf
poisonedValueOf
)
throws
TypeError
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
waitAsync
(
i64a
Symbol
(
'
2
'
)
poisonedToPrimitive
poisonedToPrimitive
)
;
}
'
Atomics
.
waitAsync
(
i64a
Symbol
(
"
2
"
)
poisonedToPrimitive
poisonedToPrimitive
)
throws
TypeError
'
)
;
reportCompare
(
0
0
)
;
