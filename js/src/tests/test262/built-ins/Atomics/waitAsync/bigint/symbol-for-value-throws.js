assert
.
sameValue
(
typeof
Atomics
.
waitAsync
'
function
'
'
The
value
of
typeof
Atomics
.
waitAsync
is
"
function
"
'
)
;
const
i64a
=
new
BigInt64Array
(
new
SharedArrayBuffer
(
BigInt64Array
.
BYTES_PER_ELEMENT
*
4
)
)
;
const
poisonedValueOf
=
{
valueOf
(
)
{
throw
new
Test262Error
(
'
should
not
evaluate
this
code
'
)
;
}
}
;
const
poisonedToPrimitive
=
{
[
Symbol
.
toPrimitive
]
(
)
{
throw
new
Test262Error
(
"
passing
a
poisoned
object
using
ToPrimitive
"
)
;
}
}
;
assert
.
throws
(
Test262Error
function
(
)
{
Atomics
.
waitAsync
(
i64a
0
poisonedValueOf
poisonedValueOf
)
;
}
'
Atomics
.
waitAsync
(
i64a
0
poisonedValueOf
poisonedValueOf
)
throws
a
Test262Error
exception
'
)
;
assert
.
throws
(
Test262Error
function
(
)
{
Atomics
.
waitAsync
(
i64a
0
poisonedToPrimitive
poisonedToPrimitive
)
;
}
'
Atomics
.
waitAsync
(
i64a
0
poisonedToPrimitive
poisonedToPrimitive
)
throws
a
Test262Error
exception
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
waitAsync
(
i64a
0
Symbol
(
"
foo
"
)
poisonedValueOf
)
;
}
'
Atomics
.
waitAsync
(
i64a
0
Symbol
(
"
foo
"
)
poisonedValueOf
)
throws
a
TypeError
exception
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
Atomics
.
waitAsync
(
i64a
0
Symbol
(
"
foo
"
)
poisonedToPrimitive
)
;
}
'
Atomics
.
waitAsync
(
i64a
0
Symbol
(
"
foo
"
)
poisonedToPrimitive
)
throws
a
TypeError
exception
'
)
;
reportCompare
(
0
0
)
;
