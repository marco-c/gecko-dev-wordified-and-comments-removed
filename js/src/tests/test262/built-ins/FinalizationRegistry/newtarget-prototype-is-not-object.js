var
finalizationRegistry
;
function
newTarget
(
)
{
}
function
fn
(
)
{
}
newTarget
.
prototype
=
undefined
;
finalizationRegistry
=
Reflect
.
construct
(
FinalizationRegistry
[
fn
]
newTarget
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
finalizationRegistry
)
FinalizationRegistry
.
prototype
'
newTarget
.
prototype
is
undefined
'
)
;
newTarget
.
prototype
=
null
;
finalizationRegistry
=
Reflect
.
construct
(
FinalizationRegistry
[
fn
]
newTarget
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
finalizationRegistry
)
FinalizationRegistry
.
prototype
'
newTarget
.
prototype
is
null
'
)
;
newTarget
.
prototype
=
true
;
finalizationRegistry
=
Reflect
.
construct
(
FinalizationRegistry
[
fn
]
newTarget
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
finalizationRegistry
)
FinalizationRegistry
.
prototype
'
newTarget
.
prototype
is
a
Boolean
'
)
;
newTarget
.
prototype
=
'
'
;
finalizationRegistry
=
Reflect
.
construct
(
FinalizationRegistry
[
fn
]
newTarget
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
finalizationRegistry
)
FinalizationRegistry
.
prototype
'
newTarget
.
prototype
is
a
String
'
)
;
newTarget
.
prototype
=
Symbol
(
)
;
finalizationRegistry
=
Reflect
.
construct
(
FinalizationRegistry
[
fn
]
newTarget
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
finalizationRegistry
)
FinalizationRegistry
.
prototype
'
newTarget
.
prototype
is
a
Symbol
'
)
;
newTarget
.
prototype
=
1
;
finalizationRegistry
=
Reflect
.
construct
(
FinalizationRegistry
[
fn
]
newTarget
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
finalizationRegistry
)
FinalizationRegistry
.
prototype
'
newTarget
.
prototype
is
a
Number
'
)
;
reportCompare
(
0
0
)
;
