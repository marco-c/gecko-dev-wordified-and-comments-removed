var
fn
=
function
(
)
{
}
;
var
reg
=
new
FinalizationRegistry
(
fn
)
;
var
target1
=
{
}
;
var
target2
=
{
}
;
var
target3
=
{
}
;
var
token
=
Symbol
(
'
unregister
'
)
;
assert
.
sameValue
(
reg
.
unregister
(
token
)
false
'
unregistering
regular
symbol
from
empty
registry
'
)
;
assert
.
sameValue
(
reg
.
unregister
(
Symbol
.
hasInstance
)
false
'
unregistering
well
-
known
symbol
from
empty
registry
'
)
;
reg
.
register
(
target1
undefined
token
)
;
reg
.
register
(
target1
undefined
token
)
;
reg
.
register
(
target2
undefined
Symbol
.
hasInstance
)
;
reg
.
register
(
target3
undefined
Symbol
.
hasInstance
)
;
assert
.
sameValue
(
reg
.
unregister
(
token
)
true
'
unregistering
regular
symbol
from
finalization
registry
'
)
;
assert
.
sameValue
(
reg
.
unregister
(
token
)
false
'
unregistering
regular
symbol
again
from
finalization
registry
'
)
;
assert
.
sameValue
(
reg
.
unregister
(
Symbol
.
hasInstance
)
true
'
unregistering
well
-
known
symbol
to
remove
target2
and
target3
'
)
;
assert
.
sameValue
(
reg
.
unregister
(
Symbol
.
hasInstance
)
false
'
unregistering
well
-
known
again
from
finalization
registry
'
)
;
reg
.
register
(
target1
token
)
;
reg
.
register
(
target2
Symbol
.
hasInstance
)
;
reg
.
register
(
target3
)
;
assert
.
sameValue
(
reg
.
unregister
(
token
)
false
'
nothing
to
remove
with
regular
symbol
unregister
token
'
)
;
assert
.
sameValue
(
reg
.
unregister
(
Symbol
.
hasInstance
)
false
'
nothing
to
remove
with
well
-
known
symbol
unregister
token
'
)
;
reportCompare
(
0
0
)
;
