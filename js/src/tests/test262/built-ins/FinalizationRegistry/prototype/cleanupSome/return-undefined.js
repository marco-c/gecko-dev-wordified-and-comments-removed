var
fn
=
function
(
)
{
}
;
var
cb
=
function
(
)
{
}
;
var
poisoned
=
function
(
)
{
throw
new
Test262Error
(
)
;
}
;
var
finalizationRegistry
=
new
FinalizationRegistry
(
fn
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
cb
)
undefined
'
regular
callback
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
fn
)
undefined
'
regular
callback
same
FG
cleanup
function
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
(
)
=
>
{
}
)
undefined
'
arrow
function
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
finalizationRegistry
.
cleanupSome
)
undefined
'
cleanupSome
itself
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
poisoned
)
undefined
'
poisoned
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
class
{
}
)
undefined
'
class
expression
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
async
function
(
)
{
}
)
undefined
'
async
function
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
function
*
(
)
{
}
)
undefined
'
generator
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
async
function
*
(
)
{
}
)
undefined
'
async
generator
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
)
undefined
'
undefined
implicit
'
)
;
assert
.
sameValue
(
finalizationRegistry
.
cleanupSome
(
undefined
)
undefined
'
undefined
explicit
'
)
;
var
poisonedFg
=
new
FinalizationRegistry
(
poisoned
)
;
assert
.
sameValue
(
poisonedFg
.
cleanupSome
(
cb
)
undefined
'
regular
callback
on
poisoned
FG
cleanup
callback
'
)
;
assert
.
sameValue
(
poisonedFg
.
cleanupSome
(
poisoned
)
undefined
'
poisoned
callback
on
poisoned
FG
cleanup
callback
'
)
;
reportCompare
(
0
0
)
;
