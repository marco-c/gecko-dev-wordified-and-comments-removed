var
token
=
{
}
;
var
finalizationRegistry
=
new
FinalizationRegistry
(
function
(
)
{
}
)
;
function
emptyCells
(
)
{
var
target
=
{
}
;
finalizationRegistry
.
register
(
target
'
target
!
'
token
)
;
var
prom
=
asyncGC
(
target
)
;
target
=
null
;
return
prom
;
}
emptyCells
(
)
.
then
(
function
(
)
{
var
called
=
0
;
var
res
=
finalizationRegistry
.
unregister
(
token
)
;
assert
.
sameValue
(
res
true
'
unregister
target
before
iterating
over
it
in
cleanup
'
)
;
finalizationRegistry
.
cleanupSome
(
function
cb
(
iterator
)
{
called
+
=
1
;
}
)
;
assert
.
sameValue
(
called
0
'
callback
was
not
called
'
)
;
}
)
.
then
(
DONE
resolveAsyncGC
)
;
