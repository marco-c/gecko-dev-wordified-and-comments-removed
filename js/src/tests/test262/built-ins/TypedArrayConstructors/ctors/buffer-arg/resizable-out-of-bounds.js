const
rab
=
CreateResizableArrayBuffer
(
40
80
)
;
for
(
let
ctor
of
ctors
)
{
assert
.
throws
(
RangeError
(
)
=
>
{
new
ctor
(
rab
0
40
/
ctor
.
BYTES_PER_ELEMENT
+
1
)
;
}
)
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
ctor
(
rab
40
-
ctor
.
BYTES_PER_ELEMENT
2
)
;
}
)
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
ctor
(
rab
40
1
)
;
}
)
;
if
(
ctor
.
BYTES_PER_ELEMENT
>
1
)
{
assert
.
throws
(
RangeError
(
)
=
>
{
new
ctor
(
rab
1
1
)
;
}
)
;
assert
.
throws
(
RangeError
(
)
=
>
{
new
ctor
(
rab
1
)
;
}
)
;
}
}
reportCompare
(
0
0
)
;
