var
parentKey
=
Symbol
(
"
2
"
)
;
TypedArray
.
prototype
[
parentKey
]
=
"
test262
"
;
testWithBigIntTypedArrayConstructors
(
function
(
TA
)
{
var
sample
=
new
TA
(
[
42n
]
)
;
var
s1
=
Symbol
(
"
1
"
)
;
assert
.
sameValue
(
sample
[
s1
]
undefined
"
return
undefined
if
not
property
is
present
"
)
;
sample
[
s1
]
=
"
foo
"
;
assert
.
sameValue
(
sample
[
s1
]
"
foo
"
"
return
value
"
)
;
Object
.
defineProperty
(
sample
s1
{
get
:
function
(
)
{
return
"
bar
"
;
}
}
)
;
assert
.
sameValue
(
sample
[
s1
]
"
bar
"
"
return
value
from
get
accessor
"
)
;
assert
.
sameValue
(
sample
[
parentKey
]
"
test262
"
"
value
from
parent
key
"
)
;
}
)
;
reportCompare
(
0
0
)
;
