testWithBigIntTypedArrayConstructors
(
function
(
TA
)
{
var
sample
=
new
TA
(
2
)
;
assert
.
sameValue
(
Reflect
.
defineProperty
(
sample
"
0
.
1
"
{
value
:
42n
configurable
:
false
enumerable
:
true
writable
:
true
}
)
false
"
0
.
1
"
)
;
assert
.
sameValue
(
sample
[
0
]
0n
"
'
0
.
1
'
-
does
not
change
the
value
for
[
0
]
"
)
;
assert
.
sameValue
(
sample
[
"
0
.
1
"
]
undefined
"
'
0
.
1
'
-
does
not
define
a
value
for
[
'
0
.
1
'
]
"
)
;
assert
.
sameValue
(
Reflect
.
defineProperty
(
sample
"
0
.
000001
"
{
value
:
42n
configurable
:
false
enumerable
:
true
writable
:
true
}
)
false
"
0
.
000001
"
)
;
assert
.
sameValue
(
sample
[
0
]
0n
"
'
0
.
000001
'
-
does
not
change
the
value
for
[
0
]
"
)
;
assert
.
sameValue
(
sample
[
"
0
.
000001
"
]
undefined
"
'
0
.
000001
'
-
does
not
define
a
value
for
[
'
0
.
000001
'
]
"
)
;
assert
.
sameValue
(
Reflect
.
defineProperty
(
sample
"
1
.
1
"
{
value
:
42n
configurable
:
false
enumerable
:
true
writable
:
true
}
)
false
"
1
.
1
"
)
;
assert
.
sameValue
(
sample
[
1
]
0n
"
'
1
.
1
'
-
does
not
change
the
value
for
[
1
]
"
)
;
assert
.
sameValue
(
sample
[
"
1
.
1
"
]
undefined
"
'
1
.
1
'
-
does
not
define
a
value
for
[
'
1
.
1
'
]
"
)
;
assert
.
sameValue
(
Reflect
.
defineProperty
(
sample
"
Infinity
"
{
value
:
42n
configurable
:
false
enumerable
:
true
writable
:
true
}
)
false
"
Infinity
"
)
;
assert
.
sameValue
(
sample
[
0
]
0n
"
'
Infinity
'
-
does
not
change
the
value
for
[
0
]
"
)
;
assert
.
sameValue
(
sample
[
1
]
0n
"
'
Infinity
'
-
does
not
change
the
value
for
[
1
]
"
)
;
assert
.
sameValue
(
sample
[
"
Infinity
"
]
undefined
"
'
Infinity
'
-
does
not
define
a
value
for
[
'
Infinity
'
]
"
)
;
assert
.
sameValue
(
Reflect
.
defineProperty
(
sample
"
-
Infinity
"
{
value
:
42n
configurable
:
false
enumerable
:
true
writable
:
true
}
)
false
"
-
Infinity
"
)
;
assert
.
sameValue
(
sample
[
0
]
0n
"
'
-
Infinity
'
-
does
not
change
the
value
for
[
0
]
"
)
;
assert
.
sameValue
(
sample
[
1
]
0n
"
'
-
Infinity
'
-
does
not
change
the
value
for
[
1
]
"
)
;
assert
.
sameValue
(
sample
[
"
-
Infinity
"
]
undefined
"
'
-
Infinity
'
-
does
not
define
a
value
for
[
'
-
Infinity
'
]
"
)
;
}
)
;
reportCompare
(
0
0
)
;
