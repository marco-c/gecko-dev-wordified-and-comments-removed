'
use
strict
'
;
testWithTypedArrayConstructors
(
function
(
TA
)
{
let
proto
=
TypedArray
.
prototype
;
let
descriptorGetterThrows
=
{
configurable
:
true
get
(
)
{
throw
new
Test262Error
(
"
OrdinaryGet
was
called
!
"
)
;
}
}
;
Object
.
defineProperties
(
proto
{
[
"
0
"
]
:
descriptorGetterThrows
[
"
1
"
]
:
descriptorGetterThrows
}
)
;
let
sab
=
new
SharedArrayBuffer
(
TA
.
BYTES_PER_ELEMENT
*
2
)
;
let
sample
=
new
TA
(
sab
)
;
assert
.
throws
(
TypeError
(
)
=
>
{
delete
sample
[
"
0
"
]
;
}
)
;
assert
.
throws
(
TypeError
(
)
=
>
{
delete
sample
[
0
]
;
}
)
;
assert
.
throws
(
TypeError
(
)
=
>
{
delete
sample
[
"
1
"
]
;
}
)
;
assert
.
throws
(
TypeError
(
)
=
>
{
delete
sample
[
1
]
;
}
)
;
}
)
;
reportCompare
(
0
0
)
;
