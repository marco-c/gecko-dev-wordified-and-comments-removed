var
keys
=
[
"
1
.
0
"
"
+
1
"
"
1000000000000000000000
"
"
0
.
0000001
"
]
;
testWithTypedArrayConstructors
(
function
(
TA
)
{
keys
.
forEach
(
function
(
key
)
{
var
sample
=
new
TA
(
[
42
]
)
;
assert
.
sameValue
(
Reflect
.
set
(
sample
key
"
ecma262
"
)
true
'
Reflect
.
set
(
sample
key
"
ecma262
"
)
must
return
true
'
)
;
assert
.
sameValue
(
sample
[
key
]
"
ecma262
"
'
The
value
of
sample
[
key
]
is
"
ecma262
"
'
)
;
assert
.
sameValue
(
Reflect
.
set
(
sample
key
"
es3000
"
)
true
'
Reflect
.
set
(
sample
key
"
es3000
"
)
must
return
true
'
)
;
assert
.
sameValue
(
sample
[
key
]
"
es3000
"
'
The
value
of
sample
[
key
]
is
"
es3000
"
'
)
;
Object
.
defineProperty
(
sample
key
{
writable
:
false
value
:
undefined
}
)
;
assert
.
sameValue
(
Reflect
.
set
(
sample
key
42
)
false
'
Reflect
.
set
(
sample
key
42
)
must
return
false
'
)
;
assert
.
sameValue
(
sample
[
key
]
undefined
'
The
value
of
sample
[
key
]
is
expected
to
equal
undefined
'
)
;
}
)
;
}
)
;
reportCompare
(
0
0
)
;
