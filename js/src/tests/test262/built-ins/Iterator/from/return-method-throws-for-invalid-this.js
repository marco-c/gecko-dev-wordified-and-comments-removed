const
WrapForValidIteratorPrototype
=
Object
.
getPrototypeOf
(
Iterator
.
from
(
{
}
)
)
;
{
assert
.
throws
(
TypeError
function
(
)
{
WrapForValidIteratorPrototype
.
return
.
call
(
{
}
)
;
}
)
;
}
{
const
originalIter
=
{
return
(
)
{
return
{
value
:
5
done
:
true
}
;
}
}
;
const
calls
=
[
]
;
TemporalHelpers
.
observeMethod
(
calls
originalIter
"
return
"
"
originalIter
"
)
;
const
iter
=
TemporalHelpers
.
propertyBagObserver
(
calls
originalIter
"
originalIter
"
)
;
assert
.
throws
(
TypeError
function
(
)
{
WrapForValidIteratorPrototype
.
return
.
call
(
iter
)
;
}
)
;
assert
.
compareArray
(
calls
[
]
)
;
}
reportCompare
(
0
0
)
;
