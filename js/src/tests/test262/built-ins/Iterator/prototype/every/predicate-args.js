function
*
g
(
)
{
yield
'
a
'
;
yield
'
b
'
;
yield
'
c
'
;
}
let
iter
=
g
(
)
;
let
assertionCount
=
0
;
let
result
=
iter
.
every
(
(
v
count
)
=
>
{
switch
(
v
)
{
case
'
a
'
:
assert
.
sameValue
(
count
0
)
;
break
;
case
'
b
'
:
assert
.
sameValue
(
count
1
)
;
break
;
case
'
c
'
:
assert
.
sameValue
(
count
2
)
;
break
;
default
:
throw
new
Error
(
)
;
}
+
+
assertionCount
;
return
true
;
}
)
;
assert
.
sameValue
(
result
true
)
;
assert
.
sameValue
(
assertionCount
3
)
;
reportCompare
(
0
0
)
;
