function
*
g
(
)
{
yield
'
a
'
;
}
let
iter
=
g
(
)
;
let
assertionCount
=
0
;
let
initialValue
=
{
}
;
let
result
=
iter
.
reduce
(
(
memo
v
count
)
=
>
{
switch
(
v
)
{
case
'
a
'
:
assert
.
sameValue
(
memo
initialValue
)
;
assert
.
sameValue
(
count
0
)
;
break
;
default
:
throw
new
Error
(
)
;
}
+
+
assertionCount
;
return
v
;
}
initialValue
)
;
assert
.
sameValue
(
result
'
a
'
)
;
assert
.
sameValue
(
assertionCount
1
)
;
reportCompare
(
0
0
)
;
