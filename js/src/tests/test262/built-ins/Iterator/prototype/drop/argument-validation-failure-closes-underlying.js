let
closed
=
false
;
let
closable
=
{
__proto__
:
Iterator
.
prototype
get
next
(
)
{
throw
new
Test262Error
(
'
next
should
not
be
read
'
)
;
}
return
(
)
{
closed
=
true
;
return
{
}
;
}
}
;
assert
.
throws
(
RangeError
function
(
)
{
closable
.
drop
(
)
;
}
)
;
assert
.
sameValue
(
closed
true
)
;
closed
=
false
;
assert
.
throws
(
RangeError
function
(
)
{
closable
.
drop
(
NaN
)
;
}
)
;
assert
.
sameValue
(
closed
true
)
;
closed
=
false
;
assert
.
throws
(
RangeError
function
(
)
{
closable
.
drop
(
-
1
)
;
}
)
;
assert
.
sameValue
(
closed
true
)
;
closed
=
false
;
class
ShouldNotGetValueOf
{
}
assert
.
throws
(
ShouldNotGetValueOf
function
(
)
{
closable
.
drop
(
{
get
valueOf
(
)
{
throw
new
ShouldNotGetValueOf
(
)
;
}
}
)
;
}
)
;
assert
.
sameValue
(
closed
true
)
;
reportCompare
(
0
0
)
;
