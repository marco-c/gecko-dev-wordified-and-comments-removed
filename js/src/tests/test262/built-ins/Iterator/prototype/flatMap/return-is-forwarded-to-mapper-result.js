let
returnCount
=
0
;
function
*
g
(
)
{
yield
0
;
}
let
iter
=
g
(
)
.
flatMap
(
v
=
>
(
{
next
(
)
{
return
{
done
:
false
value
:
1
}
;
}
return
(
)
{
+
+
returnCount
;
return
{
}
;
}
}
)
)
;
assert
.
sameValue
(
returnCount
0
)
;
let
{
done
value
}
=
iter
.
next
(
)
;
assert
.
sameValue
(
done
false
)
;
assert
.
sameValue
(
value
1
)
;
assert
.
sameValue
(
returnCount
0
)
;
iter
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
iter
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
reportCompare
(
0
0
)
;
