function
*
g
(
)
{
yield
0
;
yield
1
;
yield
2
;
}
class
TestIterator
extends
Iterator
{
get
next
(
)
{
let
n
=
g
(
)
;
return
function
(
)
{
return
n
.
next
(
)
;
}
;
}
return
(
)
{
throw
new
Test262Error
(
)
;
}
}
let
iterator
=
new
TestIterator
(
)
;
iterator
=
iterator
.
take
(
0
)
;
assert
.
throws
(
Test262Error
function
(
)
{
iterator
.
next
(
)
;
}
)
;
iterator
.
next
(
)
;
iterator
.
next
(
)
;
iterator
=
new
TestIterator
(
)
;
iterator
=
iterator
.
take
(
1
)
;
iterator
.
next
(
)
;
assert
.
throws
(
Test262Error
function
(
)
{
iterator
.
next
(
)
;
}
)
;
iterator
.
next
(
)
;
iterator
.
next
(
)
;
iterator
=
new
TestIterator
(
)
;
iterator
=
iterator
.
take
(
1
)
.
take
(
1
)
.
take
(
1
)
.
take
(
1
)
.
take
(
1
)
;
iterator
.
next
(
)
;
assert
.
throws
(
Test262Error
function
(
)
{
iterator
.
next
(
)
;
}
)
;
iterator
.
next
(
)
;
iterator
.
next
(
)
;
iterator
=
new
TestIterator
(
)
;
iterator
=
iterator
.
take
(
5
)
;
iterator
.
next
(
)
;
iterator
.
next
(
)
;
iterator
.
next
(
)
;
iterator
.
next
(
)
;
iterator
.
next
(
)
;
iterator
.
next
(
)
;
iterator
.
next
(
)
;
reportCompare
(
0
0
)
;
