let
returnCount
=
0
;
class
TestIterator
extends
Iterator
{
next
(
)
{
return
{
done
:
false
value
:
1
}
;
}
return
(
)
{
+
+
returnCount
;
return
{
}
;
}
}
let
iterator
=
new
TestIterator
(
)
.
take
(
0
)
;
assert
.
sameValue
(
returnCount
0
)
;
iterator
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
iterator
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
returnCount
=
0
;
iterator
=
new
TestIterator
(
)
.
take
(
1
)
;
assert
.
sameValue
(
returnCount
0
)
;
iterator
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
iterator
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
returnCount
=
0
;
iterator
=
new
TestIterator
(
)
.
take
(
1
)
.
take
(
1
)
.
take
(
1
)
.
take
(
1
)
.
take
(
1
)
;
assert
.
sameValue
(
returnCount
0
)
;
iterator
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
iterator
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
reportCompare
(
0
0
)
;
