class
ReturnCalledError
extends
Error
{
}
class
ValueGetterError
extends
Error
{
}
let
throwingIterator
=
{
next
(
)
{
return
{
get
value
(
)
{
throw
new
ValueGetterError
(
)
;
}
done
:
true
}
;
}
return
(
)
{
throw
new
ReturnCalledError
(
)
;
}
}
;
let
iterable
=
{
[
Symbol
.
iterator
]
(
)
{
return
throwingIterator
;
}
}
;
let
iterator
=
Iterator
.
concat
(
iterable
)
;
let
iterResult
=
iterator
.
next
(
)
;
assert
.
sameValue
(
iterResult
.
done
true
)
;
assert
.
sameValue
(
iterResult
.
value
undefined
)
;
reportCompare
(
0
0
)
;
