let
calledIterator
=
[
]
;
let
iterable1
=
{
[
Symbol
.
iterator
]
(
)
{
calledIterator
.
push
(
"
iterable1
"
)
;
return
[
1
]
[
Symbol
.
iterator
]
(
)
;
}
}
;
let
iterable2
=
{
[
Symbol
.
iterator
]
(
)
{
calledIterator
.
push
(
"
iterable2
"
)
;
return
[
2
]
[
Symbol
.
iterator
]
(
)
;
}
}
;
let
iterator
=
Iterator
.
concat
(
iterable1
iterable2
)
;
assert
.
compareArray
(
calledIterator
[
]
)
;
let
iterResult
=
iterator
.
next
(
)
;
assert
.
sameValue
(
iterResult
.
done
false
)
;
assert
.
sameValue
(
iterResult
.
value
1
)
;
assert
.
compareArray
(
calledIterator
[
"
iterable1
"
]
)
;
iterResult
=
iterator
.
next
(
)
;
assert
.
sameValue
(
iterResult
.
done
false
)
;
assert
.
sameValue
(
iterResult
.
value
2
)
;
assert
.
compareArray
(
calledIterator
[
"
iterable1
"
"
iterable2
"
]
)
;
reportCompare
(
0
0
)
;
