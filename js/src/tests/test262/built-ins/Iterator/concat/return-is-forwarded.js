let
returnCount
=
0
;
let
testIterator
=
{
next
(
)
{
return
{
done
:
false
value
:
1
}
;
}
return
(
)
{
+
+
returnCount
;
return
{
}
;
}
}
;
let
iterable
=
{
[
Symbol
.
iterator
]
(
)
{
return
testIterator
;
}
}
;
let
iterator
=
Iterator
.
concat
(
iterable
)
;
assert
.
sameValue
(
returnCount
0
)
;
let
iterResult
=
iterator
.
next
(
)
;
assert
.
sameValue
(
returnCount
0
)
;
assert
.
sameValue
(
iterResult
.
done
false
)
;
assert
.
sameValue
(
iterResult
.
value
1
)
;
iterator
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
iterator
.
return
(
)
;
assert
.
sameValue
(
returnCount
1
)
;
reportCompare
(
0
0
)
;
