var
sample
;
var
buffer
=
new
ArrayBuffer
(
4
)
;
sample
=
new
DataView
(
buffer
0
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
setInt8
(
Infinity
39
)
;
}
"
getIndex
=
=
Infinity
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
setInt8
(
5
39
)
;
}
"
5
+
1
>
4
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
setInt8
(
4
39
)
;
}
"
4
+
1
>
4
"
)
;
sample
=
new
DataView
(
buffer
3
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
setInt8
(
1
39
)
;
}
"
1
+
1
>
1
(
offset
)
"
)
;
sample
=
new
DataView
(
buffer
0
1
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
setInt8
(
1
39
)
;
}
"
1
+
1
>
1
(
length
)
"
)
;
sample
=
new
DataView
(
buffer
2
1
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
setInt8
(
1
39
)
;
}
"
1
+
1
>
1
(
offset
+
length
)
"
)
;
sample
=
new
DataView
(
buffer
0
)
;
assert
.
sameValue
(
sample
.
getInt8
(
0
)
0
"
[
0
]
no
value
was
set
"
)
;
assert
.
sameValue
(
sample
.
getInt8
(
1
)
0
"
[
1
]
no
value
was
set
"
)
;
assert
.
sameValue
(
sample
.
getInt8
(
2
)
0
"
[
2
]
no
value
was
set
"
)
;
assert
.
sameValue
(
sample
.
getInt8
(
3
)
0
"
[
3
]
no
value
was
set
"
)
;
reportCompare
(
0
0
)
;
