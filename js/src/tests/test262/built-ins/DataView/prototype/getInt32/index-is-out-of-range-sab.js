var
sample
;
var
buffer
=
new
SharedArrayBuffer
(
12
)
;
sample
=
new
DataView
(
buffer
0
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
Infinity
)
;
}
"
getIndex
=
=
Infinity
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
13
)
;
}
"
13
+
4
>
12
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
12
)
;
}
"
12
+
4
>
12
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
11
)
;
}
"
11
+
4
>
12
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
10
)
;
}
"
10
+
4
>
12
"
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
9
)
;
}
"
9
+
4
>
12
"
)
;
sample
=
new
DataView
(
buffer
8
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
1
)
;
}
"
1
+
4
>
4
(
offset
)
"
)
;
sample
=
new
DataView
(
buffer
9
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
0
)
;
}
"
0
+
4
>
3
(
offset
)
"
)
;
sample
=
new
DataView
(
buffer
0
4
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
1
)
;
}
"
1
+
4
>
4
(
length
)
"
)
;
sample
=
new
DataView
(
buffer
0
3
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
0
)
;
}
"
0
+
4
>
3
(
length
)
"
)
;
sample
=
new
DataView
(
buffer
4
4
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
1
)
;
}
"
1
+
4
>
4
(
offset
+
length
)
"
)
;
sample
=
new
DataView
(
buffer
4
3
)
;
assert
.
throws
(
RangeError
function
(
)
{
sample
.
getInt32
(
0
)
;
}
"
0
+
4
>
3
(
offset
+
length
)
"
)
;
reportCompare
(
0
0
)
;
