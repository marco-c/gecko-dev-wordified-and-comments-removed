var
AsyncFunction
=
async
function
foo
(
)
{
}
.
constructor
;
var
fn
;
fn
=
AsyncFunction
(
"
a
"
"
await
1
;
"
)
;
assert
.
sameValue
(
fn
.
length
1
"
length
with
1
argument
call
"
)
;
fn
=
AsyncFunction
(
"
a
b
"
"
await
1
;
"
)
;
assert
.
sameValue
(
fn
.
length
2
"
length
with
2
arguments
in
one
call
"
)
;
fn
=
AsyncFunction
(
"
a
"
"
b
"
"
await
1
;
"
)
;
assert
.
sameValue
(
fn
.
length
2
"
length
with
2
arguments
call
"
)
;
fn
=
new
AsyncFunction
(
"
a
"
"
await
1
;
"
)
;
assert
.
sameValue
(
fn
.
length
1
"
length
with
1
argument
construct
"
)
;
fn
=
new
AsyncFunction
(
"
a
b
"
"
await
1
;
"
)
;
assert
.
sameValue
(
fn
.
length
2
"
length
with
2
arguments
in
one
construct
"
)
;
fn
=
new
AsyncFunction
(
"
a
"
"
b
"
"
await
1
;
"
)
;
assert
.
sameValue
(
fn
.
length
2
"
length
with
2
arguments
construct
"
)
;
reportCompare
(
0
0
)
;
