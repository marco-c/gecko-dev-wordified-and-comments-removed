var
iter
;
var
executionorder
=
0
;
var
valueisset
=
false
;
async
function
*
g
(
)
{
iter
.
return
(
42
)
.
then
(
function
(
result
)
{
assert
(
valueisset
"
variable
valueisset
should
be
set
to
true
"
)
;
assert
.
sameValue
(
+
+
executionorder
2
)
;
assert
.
sameValue
(
result
.
value
42
)
;
assert
.
sameValue
(
result
.
done
true
)
;
}
)
.
catch
(
DONE
)
;
valueisset
=
true
;
yield
1
;
throw
new
Test262Error
(
"
This
line
should
no
be
reached
:
generator
closed
by
return
"
)
;
}
iter
=
g
(
)
;
iter
.
next
(
)
.
then
(
function
(
result
)
{
assert
.
sameValue
(
+
+
executionorder
1
)
;
assert
.
sameValue
(
result
.
value
1
)
;
assert
.
sameValue
(
result
.
done
false
)
;
iter
.
next
(
)
.
then
(
function
(
result
)
{
assert
.
sameValue
(
+
+
executionorder
3
)
;
assert
.
sameValue
(
result
.
value
undefined
)
;
assert
.
sameValue
(
result
.
done
true
)
;
}
)
.
then
(
DONE
DONE
)
;
}
)
.
catch
(
DONE
)
;
