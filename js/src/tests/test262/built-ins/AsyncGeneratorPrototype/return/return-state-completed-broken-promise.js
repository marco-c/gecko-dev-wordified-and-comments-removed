let
unblock
;
let
blocking
=
new
Promise
(
resolve
=
>
{
unblock
=
resolve
;
}
)
;
let
unblocked
=
false
;
var
g
=
async
function
*
(
)
{
await
blocking
;
unblocked
=
true
;
}
;
var
it
=
g
(
)
;
let
brokenPromise
=
Promise
.
resolve
(
42
)
;
Object
.
defineProperty
(
brokenPromise
'
constructor
'
{
get
:
function
(
)
{
throw
new
Error
(
'
broken
promise
'
)
;
}
}
)
;
it
.
next
(
)
;
it
.
return
(
brokenPromise
)
.
then
(
(
)
=
>
{
throw
new
Test262Error
(
"
Expected
rejection
"
)
;
}
err
=
>
{
assert
(
unblocked
false
'
return
should
be
rejected
before
generator
is
resumed
'
)
;
assert
.
sameValue
(
err
.
message
'
broken
promise
'
)
;
}
)
.
then
(
DONE
DONE
)
;
unblock
(
)
;
