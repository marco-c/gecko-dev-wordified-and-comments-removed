async
function
*
g
(
)
{
}
var
AsyncGeneratorPrototype
=
Object
.
getPrototypeOf
(
g
)
.
prototype
;
var
symbol
=
Symbol
(
)
;
var
testPromises
=
[
AsyncGeneratorPrototype
.
return
.
call
(
undefined
)
.
then
(
function
(
)
{
throw
new
Test262Error
(
"
AsyncGeneratorPrototype
.
return
should
reject
promise
"
+
"
when
this
value
undefined
"
)
;
}
function
(
e
)
{
if
(
!
(
e
instanceof
TypeError
)
)
{
throw
new
Test262Error
(
"
(
undefined
)
expected
TypeError
but
got
"
+
e
)
;
}
}
)
AsyncGeneratorPrototype
.
return
.
call
(
1
)
.
then
(
function
(
)
{
throw
new
Test262Error
(
"
AsyncGeneratorPrototype
.
return
should
reject
promise
"
+
"
when
this
value
is
a
Number
"
)
;
}
function
(
e
)
{
if
(
!
(
e
instanceof
TypeError
)
)
{
throw
new
Test262Error
(
"
(
Number
)
expected
TypeError
but
got
"
+
e
)
;
}
}
)
AsyncGeneratorPrototype
.
return
.
call
(
"
string
"
)
.
then
(
function
(
)
{
throw
new
Test262Error
(
"
AsyncGeneratorPrototype
.
return
should
reject
promise
"
+
"
when
this
value
is
a
String
"
)
;
}
function
(
e
)
{
if
(
!
(
e
instanceof
TypeError
)
)
{
throw
new
Test262Error
(
"
(
String
)
expected
TypeError
but
got
"
+
e
)
;
}
}
)
AsyncGeneratorPrototype
.
return
.
call
(
null
)
.
then
(
function
(
)
{
throw
new
Test262Error
(
"
AsyncGeneratorPrototype
.
return
should
reject
promise
"
+
"
when
this
value
null
"
)
;
}
function
(
e
)
{
if
(
!
(
e
instanceof
TypeError
)
)
{
throw
new
Test262Error
(
"
(
null
)
expected
TypeError
but
got
"
+
e
)
;
}
}
)
AsyncGeneratorPrototype
.
return
.
call
(
true
)
.
then
(
function
(
)
{
throw
new
Test262Error
(
"
AsyncGeneratorPrototype
.
return
should
reject
promise
"
+
"
when
this
value
is
a
Boolean
"
)
;
}
function
(
e
)
{
if
(
!
(
e
instanceof
TypeError
)
)
{
throw
new
Test262Error
(
"
(
Boolean
)
expected
TypeError
but
got
"
+
e
)
;
}
}
)
AsyncGeneratorPrototype
.
return
.
call
(
symbol
)
.
then
(
function
(
)
{
throw
new
Test262Error
(
"
AsyncGeneratorPrototype
.
return
should
reject
promise
"
+
"
when
this
value
is
a
Symbol
"
)
;
}
function
(
e
)
{
if
(
!
(
e
instanceof
TypeError
)
)
{
throw
new
Test262Error
(
"
(
Symbol
)
expected
TypeError
but
got
"
+
e
)
;
}
}
)
]
Promise
.
all
(
testPromises
)
.
then
(
(
)
=
>
{
}
)
.
then
(
DONE
DONE
)
