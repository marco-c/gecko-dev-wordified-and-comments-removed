var
iter
result
;
var
executionorder
=
0
;
var
valueisset
=
false
;
async
function
*
g
(
)
{
iter
.
next
(
)
.
then
(
function
(
result
)
{
assert
(
valueisset
"
variable
valueisset
should
be
set
to
true
"
)
;
assert
.
sameValue
(
+
+
executionorder
2
)
;
assert
.
sameValue
(
result
.
value
2
)
;
assert
.
sameValue
(
result
.
done
false
)
;
}
function
(
)
{
DONE
(
new
Test262Error
(
"
next
(
)
should
result
in
resolved
promise
.
"
)
)
;
}
)
.
catch
(
DONE
)
valueisset
=
true
;
yield
1
;
yield
2
;
}
iter
=
g
(
)
;
iter
.
next
(
)
.
then
(
function
(
result
)
{
assert
.
sameValue
(
+
+
executionorder
1
)
;
assert
.
sameValue
(
result
.
value
1
)
;
assert
.
sameValue
(
result
.
done
false
)
;
iter
.
next
(
)
.
then
(
function
(
result
)
{
assert
.
sameValue
(
+
+
executionorder
3
)
;
assert
.
sameValue
(
result
.
value
undefined
)
;
assert
.
sameValue
(
result
.
done
true
)
;
}
)
.
then
(
DONE
DONE
)
;
}
)
.
catch
(
DONE
)
;
