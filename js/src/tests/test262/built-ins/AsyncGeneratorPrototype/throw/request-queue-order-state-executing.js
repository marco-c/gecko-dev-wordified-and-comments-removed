var
iter
result
;
var
thrownErr
=
new
Error
(
"
Catch
me
.
"
)
;
var
caughtErr
;
var
order
=
0
;
var
promises
=
[
]
async
function
*
g
(
)
{
iter
.
throw
(
thrownErr
)
.
then
(
function
(
)
{
DONE
(
new
Test262Error
(
"
throw
(
)
should
result
in
reject
promise
.
"
)
)
;
}
function
(
e
)
{
caughtErr
=
e
;
order
+
+
;
}
)
;
yield
1
;
yield
2
;
}
iter
=
g
(
)
;
iter
.
next
(
)
.
then
(
function
(
result
)
{
assert
.
sameValue
(
+
+
order
1
)
;
assert
.
sameValue
(
result
.
value
1
)
;
assert
.
sameValue
(
result
.
done
false
)
;
iter
.
next
(
)
.
then
(
function
(
result
)
{
assert
.
sameValue
(
+
+
order
3
)
;
assert
.
sameValue
(
caughtErr
thrownErr
)
;
assert
.
sameValue
(
result
.
done
true
)
;
}
)
.
then
(
DONE
DONE
)
;
}
)
.
catch
(
DONE
)
