var
target
=
new
Uint8Array
(
[
255
255
255
255
]
)
;
var
result
=
target
.
setFromBase64
(
'
x
+
/
y
'
)
;
assert
.
sameValue
(
result
.
read
4
)
;
assert
.
sameValue
(
result
.
written
3
)
;
assert
.
compareArray
(
target
[
199
239
242
255
]
)
;
var
target
=
new
Uint8Array
(
[
255
255
255
255
]
)
;
var
result
=
target
.
setFromBase64
(
'
x
+
/
y
'
{
alphabet
:
'
base64
'
}
)
;
assert
.
sameValue
(
result
.
read
4
)
;
assert
.
sameValue
(
result
.
written
3
)
;
assert
.
compareArray
(
target
[
199
239
242
255
]
)
;
assert
.
throws
(
SyntaxError
function
(
)
{
var
target
=
new
Uint8Array
(
[
255
255
255
255
]
)
;
target
.
setFromBase64
(
'
x
+
/
y
'
{
alphabet
:
'
base64url
'
}
)
;
}
)
;
var
target
=
new
Uint8Array
(
[
255
255
255
255
]
)
;
var
result
=
target
.
setFromBase64
(
'
x
-
_y
'
{
alphabet
:
'
base64url
'
}
)
;
assert
.
sameValue
(
result
.
read
4
)
;
assert
.
sameValue
(
result
.
written
3
)
;
assert
.
compareArray
(
target
[
199
239
242
255
]
)
;
assert
.
throws
(
SyntaxError
function
(
)
{
var
target
=
new
Uint8Array
(
[
255
255
255
255
]
)
;
target
.
setFromBase64
(
'
x
-
_y
'
)
;
}
)
;
assert
.
throws
(
SyntaxError
function
(
)
{
var
target
=
new
Uint8Array
(
[
255
255
255
255
]
)
;
target
.
setFromBase64
(
'
x
-
_y
'
{
alphabet
:
'
base64
'
}
)
;
}
)
;
reportCompare
(
0
0
)
;
