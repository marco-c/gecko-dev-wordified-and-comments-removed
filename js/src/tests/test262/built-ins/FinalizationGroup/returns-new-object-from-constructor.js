var
cleanupCallback
=
function
(
)
{
}
;
var
fg
=
new
FinalizationGroup
(
cleanupCallback
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
fg
)
FinalizationGroup
.
prototype
)
;
assert
.
notSameValue
(
fg
cleanupCallback
'
does
not
return
the
same
function
'
)
;
assert
.
sameValue
(
fg
instanceof
FinalizationGroup
true
'
instanceof
'
)
;
for
(
let
key
of
Object
.
getOwnPropertyNames
(
fg
)
)
{
assert
(
false
should
not
set
any
own
named
properties
:
{
key
}
)
;
}
for
(
let
key
of
Object
.
getOwnPropertySymbols
(
fg
)
)
{
assert
(
false
should
not
set
any
own
symbol
properties
:
{
String
(
key
)
}
)
;
}
assert
.
sameValue
(
Object
.
getPrototypeOf
(
fg
)
FinalizationGroup
.
prototype
)
;
reportCompare
(
0
0
)
;
