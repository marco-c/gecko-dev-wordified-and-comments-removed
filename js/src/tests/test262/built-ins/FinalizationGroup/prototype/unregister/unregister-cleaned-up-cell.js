var
value
=
'
target
!
'
;
var
token
=
{
}
;
var
fg
=
new
FinalizationGroup
(
function
(
)
{
}
)
;
function
emptyCells
(
)
{
var
target
=
{
}
;
fg
.
register
(
target
value
token
)
;
var
prom
=
asyncGC
(
target
)
;
target
=
null
;
return
prom
;
}
emptyCells
(
)
.
then
(
function
(
)
{
var
called
=
0
;
var
holdings
;
fg
.
cleanupSome
(
function
cb
(
iterator
)
{
called
+
=
1
;
holdings
=
[
.
.
.
iterator
]
;
}
)
;
assert
.
sameValue
(
called
1
)
;
assert
.
sameValue
(
holdings
.
length
1
)
;
assert
.
sameValue
(
holdings
[
0
]
value
)
;
var
res
=
fg
.
unregister
(
token
)
;
assert
.
sameValue
(
res
false
'
unregister
after
iterating
over
it
in
cleanup
'
)
;
}
)
.
then
(
DONE
resolveAsyncGC
)
;
