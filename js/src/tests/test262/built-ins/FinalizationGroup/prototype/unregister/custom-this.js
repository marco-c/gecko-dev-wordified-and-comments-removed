var
fn
=
function
(
)
{
}
;
var
unregister
=
FinalizationGroup
.
prototype
.
unregister
;
var
fg
=
new
FinalizationGroup
(
fn
)
;
var
target1
=
{
}
;
var
target2
=
{
}
;
var
target3
=
{
}
;
var
token1
=
{
}
;
var
token2
=
{
}
;
assert
.
sameValue
(
unregister
.
call
(
fg
token1
)
false
'
unregistering
token1
from
empty
fg
'
)
;
assert
.
sameValue
(
unregister
.
call
(
fg
token2
)
false
'
unregistering
token2
from
empty
fg
'
)
;
fg
.
register
(
target1
undefined
token1
)
;
fg
.
register
(
target2
undefined
token2
)
;
fg
.
register
(
target3
undefined
token2
)
;
assert
.
sameValue
(
unregister
.
call
(
fg
target1
)
false
'
own
target
does
not
work
on
unregister
#
1
'
)
;
assert
.
sameValue
(
unregister
.
call
(
fg
target2
)
false
'
own
target
does
not
work
on
unregister
#
2
'
)
;
assert
.
sameValue
(
unregister
.
call
(
fg
target3
)
false
'
own
target
does
not
work
on
unregister
#
3
'
)
;
assert
.
sameValue
(
unregister
.
call
(
fg
token1
)
true
'
unregistering
token1
from
fg
'
)
;
assert
.
sameValue
(
unregister
.
call
(
fg
token1
)
false
'
unregistering
token1
again
from
fg
'
)
;
assert
.
sameValue
(
unregister
.
call
(
fg
token2
)
true
'
unregistering
token2
to
remove
target2
and
target3
'
)
;
assert
.
sameValue
(
unregister
.
call
(
fg
token2
)
false
'
unregistering
token2
from
empty
fg
'
)
;
reportCompare
(
0
0
)
;
