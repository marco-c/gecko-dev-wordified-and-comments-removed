var
holdingsList
;
function
cb
(
iterator
)
{
holdingsList
=
[
.
.
.
iterator
]
;
}
;
var
fg
=
new
FinalizationGroup
(
function
(
)
{
}
)
;
var
referenced
=
{
}
;
function
emptyCells
(
)
{
var
target
=
{
}
;
fg
.
register
(
target
'
target
!
'
)
;
fg
.
register
(
referenced
'
referenced
'
)
;
var
prom
=
asyncGC
(
target
)
;
target
=
null
;
return
prom
;
}
emptyCells
(
)
.
then
(
function
(
)
{
fg
.
cleanupSome
(
cb
)
;
assert
.
sameValue
(
holdingsList
.
length
1
)
;
assert
.
sameValue
(
holdingsList
[
0
]
'
target
!
'
)
;
assert
.
sameValue
(
typeof
referenced
'
object
'
'
referenced
preserved
'
)
;
}
)
.
then
(
DONE
resolveAsyncGC
)
;
