class
MyError
extends
Error
{
}
var
error1
=
new
MyError
(
)
;
var
error2
=
new
MyError
(
)
;
var
error3
=
new
MyError
(
)
;
var
stack
=
new
DisposableStack
(
)
;
stack
.
defer
(
function
(
)
{
throw
error1
;
}
)
;
stack
.
defer
(
function
(
)
{
throw
error2
;
}
)
;
stack
.
defer
(
function
(
)
{
throw
error3
;
}
)
;
try
{
stack
.
dispose
(
)
;
assert
(
false
'
Expected
stack
.
dispose
(
)
to
have
thrown
an
error
.
'
)
;
}
catch
(
e
)
{
assert
(
e
instanceof
SuppressedError
"
Expected
stack
.
dispose
(
)
to
have
thrown
a
SuppressedError
"
)
;
assert
.
sameValue
(
e
.
error
error1
"
Expected
the
outermost
suppressing
error
to
have
been
'
error1
'
"
)
;
assert
(
e
.
suppressed
instanceof
SuppressedError
"
Expected
the
outermost
suppressed
error
to
have
been
a
SuppressedError
"
)
;
assert
.
sameValue
(
e
.
suppressed
.
error
error2
"
Expected
the
innermost
suppressing
error
to
have
been
'
error2
'
"
)
;
assert
.
sameValue
(
e
.
suppressed
.
suppressed
error3
"
Expected
the
innermost
suppressed
error
to
have
been
'
error3
'
"
)
;
}
reportCompare
(
0
0
)
;
