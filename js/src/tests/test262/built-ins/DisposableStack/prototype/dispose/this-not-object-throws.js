assert
.
sameValue
(
typeof
DisposableStack
.
prototype
.
dispose
'
function
'
)
;
var
dispose
=
DisposableStack
.
prototype
.
dispose
;
assert
.
throws
(
TypeError
function
(
)
{
dispose
.
call
(
undefined
)
;
}
'
undefined
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
dispose
.
call
(
null
)
;
}
'
null
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
dispose
.
call
(
true
)
;
}
'
true
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
dispose
.
call
(
false
)
;
}
'
false
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
dispose
.
call
(
1
)
;
}
'
number
'
)
;
assert
.
throws
(
TypeError
function
(
)
{
dispose
.
call
(
'
object
'
)
;
}
'
string
'
)
;
var
s
=
Symbol
(
)
;
assert
.
throws
(
TypeError
function
(
)
{
dispose
.
call
(
s
)
;
}
'
symbol
'
)
;
reportCompare
(
0
0
)
;
