if
(
Number
.
prototype
.
toString
(
13
)
!
=
=
"
0
"
)
{
throw
new
Test262Error
(
'
#
1
:
Number
.
prototype
.
toString
(
13
)
=
=
=
"
0
"
'
)
;
}
if
(
(
new
Number
(
)
)
.
toString
(
13
)
!
=
=
"
0
"
)
{
throw
new
Test262Error
(
'
#
2
:
(
new
Number
(
)
)
.
toString
(
13
)
=
=
=
"
0
"
'
)
;
}
if
(
(
new
Number
(
0
)
)
.
toString
(
13
)
!
=
=
"
0
"
)
{
throw
new
Test262Error
(
'
#
3
:
(
new
Number
(
0
)
)
.
toString
(
13
)
=
=
=
"
0
"
'
)
;
}
if
(
(
new
Number
(
-
1
)
)
.
toString
(
13
)
!
=
=
"
-
1
"
)
{
throw
new
Test262Error
(
'
#
4
:
(
new
Number
(
-
1
)
)
.
toString
(
13
)
=
=
=
"
-
1
"
'
)
;
}
if
(
(
new
Number
(
1
)
)
.
toString
(
13
)
!
=
=
"
1
"
)
{
throw
new
Test262Error
(
'
#
5
:
(
new
Number
(
1
)
)
.
toString
(
13
)
=
=
=
"
1
"
'
)
;
}
if
(
(
new
Number
(
Number
.
NaN
)
)
.
toString
(
13
)
!
=
=
"
NaN
"
)
{
throw
new
Test262Error
(
'
#
6
:
(
new
Number
(
Number
.
NaN
)
)
.
toString
(
13
)
=
=
=
"
NaN
"
'
)
;
}
if
(
(
new
Number
(
Number
.
POSITIVE_INFINITY
)
)
.
toString
(
13
)
!
=
=
"
Infinity
"
)
{
throw
new
Test262Error
(
'
#
7
:
(
new
Number
(
Number
.
POSITIVE_INFINITY
)
)
.
toString
(
13
)
=
=
=
"
Infinity
"
'
)
;
}
if
(
(
new
Number
(
Number
.
NEGATIVE_INFINITY
)
)
.
toString
(
13
)
!
=
=
"
-
Infinity
"
)
{
throw
new
Test262Error
(
'
#
8
:
(
new
Number
(
Number
.
NEGATIVE_INFINITY
)
)
.
toString
(
13
)
=
=
=
"
-
Infinity
"
'
)
;
}
reportCompare
(
0
0
)
;
