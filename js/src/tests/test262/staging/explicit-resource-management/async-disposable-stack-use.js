function
TestAsyncDisposableStackUseWithNonObject
(
)
{
let
stack
=
new
AsyncDisposableStack
(
)
;
stack
.
use
(
42
)
;
}
;
assert
.
throws
(
TypeError
(
)
=
>
TestAsyncDisposableStackUseWithNonObject
(
)
'
use
(
)
is
called
on
non
-
object
'
)
;
function
TestAsyncDisposableStackUseWithNullDispose
(
)
{
let
stack
=
new
AsyncDisposableStack
(
)
;
const
disposable
=
{
value
:
1
[
Symbol
.
asyncDispose
]
:
null
}
;
stack
.
use
(
disposable
)
;
}
;
assert
.
throws
(
TypeError
(
)
=
>
TestAsyncDisposableStackUseWithNullDispose
(
)
'
symbol
.
asyncDispose
is
null
'
)
;
function
TestAsyncDisposableStackUseWithUndefinedDispose
(
)
{
let
stack
=
new
AsyncDisposableStack
(
)
;
const
disposable
=
{
value
:
1
[
Symbol
.
asyncDispose
]
:
undefined
}
;
stack
.
use
(
disposable
)
;
}
;
assert
.
throws
(
TypeError
(
)
=
>
TestAsyncDisposableStackUseWithUndefinedDispose
(
)
'
symbol
.
asyncDispose
is
undefined
'
)
;
function
TestAsyncDisposableStackUseWithNonCallableDispose
(
)
{
let
stack
=
new
AsyncDisposableStack
(
)
;
const
disposable
=
{
value
:
1
[
Symbol
.
asyncDispose
]
:
42
}
;
stack
.
use
(
disposable
)
;
}
;
assert
.
throws
(
TypeError
(
)
=
>
TestAsyncDisposableStackUseWithNonCallableDispose
(
)
'
symbol
.
asyncDispose
is
not
callable
'
)
;
reportCompare
(
0
0
)
;
