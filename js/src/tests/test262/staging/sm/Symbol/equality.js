assert
.
sameValue
(
Symbol
.
for
(
"
q
"
)
=
=
=
Symbol
.
for
(
"
q
"
)
true
)
;
var
symbols
=
[
Symbol
(
)
Symbol
(
"
Symbol
.
iterator
"
)
Symbol
(
"
Symbol
.
iterator
"
)
Symbol
.
for
(
"
Symbol
.
iterator
"
)
Symbol
.
iterator
]
;
for
(
var
i
=
0
;
i
<
symbols
.
length
;
i
+
+
)
{
for
(
var
j
=
i
;
j
<
symbols
.
length
;
j
+
+
)
{
var
expected
=
(
i
=
=
=
j
)
;
assert
.
sameValue
(
symbols
[
i
]
=
=
symbols
[
j
]
expected
)
;
assert
.
sameValue
(
symbols
[
i
]
!
=
symbols
[
j
]
!
expected
)
;
assert
.
sameValue
(
symbols
[
i
]
=
=
=
symbols
[
j
]
expected
)
;
assert
.
sameValue
(
symbols
[
i
]
!
=
=
symbols
[
j
]
!
expected
)
;
assert
.
sameValue
(
Object
.
is
(
symbols
[
i
]
symbols
[
j
]
)
expected
)
;
}
}
reportCompare
(
0
0
)
;
