var
sym
=
Symbol
(
)
;
assertThrowsInstanceOf
(
(
)
=
>
Symbol
(
sym
)
TypeError
)
;
assert
.
sameValue
(
Symbol
(
undefined
)
.
toString
(
)
"
Symbol
(
)
"
)
;
assert
.
sameValue
(
Symbol
(
7
)
.
toString
(
)
"
Symbol
(
7
)
"
)
;
assert
.
sameValue
(
Symbol
(
true
)
.
toString
(
)
"
Symbol
(
true
)
"
)
;
assert
.
sameValue
(
Symbol
(
null
)
.
toString
(
)
"
Symbol
(
null
)
"
)
;
assert
.
sameValue
(
Symbol
(
[
1
2
]
)
.
toString
(
)
"
Symbol
(
1
2
)
"
)
;
var
symobj
=
Object
(
sym
)
;
assertThrowsInstanceOf
(
(
)
=
>
Symbol
(
symobj
)
TypeError
)
;
var
hits
=
0
;
var
obj
=
{
toString
:
function
(
)
{
hits
+
+
;
return
"
ponies
"
;
}
}
;
assert
.
sameValue
(
Symbol
(
obj
)
.
toString
(
)
"
Symbol
(
ponies
)
"
)
;
assert
.
sameValue
(
hits
1
)
;
assert
.
sameValue
(
Object
.
getPrototypeOf
(
Symbol
.
prototype
)
Object
.
prototype
)
;
assertThrowsInstanceOf
(
(
)
=
>
Symbol
.
prototype
.
valueOf
(
)
TypeError
)
;
reportCompare
(
0
0
)
;
