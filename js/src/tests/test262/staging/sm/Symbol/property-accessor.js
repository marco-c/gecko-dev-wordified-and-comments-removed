var
obj
=
{
}
;
var
sym
=
Symbol
(
)
;
var
gets
=
0
;
var
sets
=
[
]
;
Object
.
defineProperty
(
obj
sym
{
get
:
function
(
)
{
return
+
+
gets
;
}
set
:
function
(
v
)
{
sets
.
push
(
v
)
;
}
}
)
;
for
(
var
i
=
1
;
i
<
9
;
i
+
+
)
assert
.
sameValue
(
obj
[
sym
]
i
)
;
var
expected
=
[
]
;
for
(
var
i
=
0
;
i
<
9
;
i
+
+
)
{
assert
.
sameValue
(
obj
[
sym
]
=
i
i
)
;
expected
.
push
(
i
)
;
}
assert
.
deepEqual
(
sets
expected
)
;
gets
=
0
;
sets
=
[
]
;
assert
.
sameValue
(
obj
[
sym
]
+
+
1
)
;
assert
.
deepEqual
(
sets
[
2
]
)
;
gets
=
0
;
sets
=
[
]
;
assert
.
sameValue
(
obj
[
sym
]
*
=
12
12
)
;
assert
.
deepEqual
(
sets
[
12
]
)
;
reportCompare
(
0
0
)
;
