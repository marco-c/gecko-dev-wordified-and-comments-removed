assert
.
sameValue
(
Symbol
.
for
(
"
ponies
"
)
Symbol
.
for
(
"
ponies
"
)
)
;
var
one
=
Array
(
64
+
1
)
.
join
(
"
x
"
)
;
var
two
=
Array
(
8
+
1
)
.
join
(
Array
(
8
+
1
)
.
join
(
"
x
"
)
)
;
assert
.
sameValue
(
Symbol
.
for
(
one
)
Symbol
.
for
(
two
)
)
;
var
sym
=
Symbol
(
"
123
"
)
;
assert
.
sameValue
(
Symbol
.
for
(
"
123
"
)
!
=
=
sym
true
)
;
assert
.
sameValue
(
typeof
Symbol
.
for
(
"
"
)
"
symbol
"
)
;
assert
.
sameValue
(
Symbol
.
for
(
3
)
Symbol
.
for
(
"
3
"
)
)
;
assert
.
sameValue
(
Symbol
.
for
(
null
)
Symbol
.
for
(
"
null
"
)
)
;
assert
.
sameValue
(
Symbol
.
for
(
undefined
)
Symbol
.
for
(
"
undefined
"
)
)
;
assert
.
sameValue
(
Symbol
.
for
(
)
Symbol
.
for
(
"
undefined
"
)
)
;
var
foo
=
Symbol
.
for
(
"
foo
"
)
assert
.
sameValue
(
Symbol
.
for
.
call
(
String
"
foo
"
)
foo
)
;
assert
.
sameValue
(
Symbol
.
for
.
call
(
3
.
14
"
foo
"
)
foo
)
;
reportCompare
(
0
0
)
;
