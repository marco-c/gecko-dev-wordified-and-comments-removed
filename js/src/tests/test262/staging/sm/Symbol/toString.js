var
cases
=
[
{
sym
:
Symbol
(
)
str
:
"
Symbol
(
)
"
}
{
sym
:
Symbol
(
"
ok
"
)
str
:
"
Symbol
(
ok
)
"
}
{
sym
:
Symbol
(
"
\
0
"
)
str
:
"
Symbol
(
\
0
)
"
}
{
sym
:
Symbol
.
iterator
str
:
"
Symbol
(
Symbol
.
iterator
)
"
}
{
sym
:
Symbol
.
for
(
"
dummies
"
)
str
:
"
Symbol
(
dummies
)
"
}
]
;
for
(
var
test
of
cases
)
{
assert
.
sameValue
(
test
.
sym
.
toString
(
)
test
.
str
)
;
assert
.
sameValue
(
Object
(
test
.
sym
)
.
toString
(
)
test
.
str
)
;
}
var
nonsymbols
=
[
undefined
null
"
not
-
ok
"
new
String
(
"
still
-
not
-
ok
"
)
{
}
[
]
]
;
for
(
var
nonsym
of
nonsymbols
)
assertThrowsInstanceOf
(
(
)
=
>
Symbol
.
prototype
.
toString
.
call
(
nonsym
)
TypeError
)
;
reportCompare
(
0
0
)
;
