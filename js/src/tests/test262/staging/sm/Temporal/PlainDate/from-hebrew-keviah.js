function
KeviahSymbol
(
year
)
{
let
startOfYear
=
Temporal
.
PlainDate
.
from
(
{
calendar
:
"
hebrew
"
year
monthCode
:
"
M01
"
day
:
1
}
)
;
let
firstDayOfPesach
=
Temporal
.
PlainDate
.
from
(
{
calendar
:
"
hebrew
"
year
monthCode
:
"
M07
"
day
:
15
}
)
;
let
yearSymbol
=
{
353
:
"
D
"
354
:
"
R
"
355
:
"
C
"
383
:
"
D
"
384
:
"
R
"
385
:
"
C
"
}
;
let
daySymbol
=
date
=
>
(
date
.
dayOfWeek
%
7
)
+
1
;
let
{
daysInYear
}
=
startOfYear
;
assert
.
sameValue
(
daysInYear
in
yearSymbol
true
)
;
return
{
daySymbol
(
startOfYear
)
}
{
yearSymbol
[
daysInYear
]
}
{
daySymbol
(
firstDayOfPesach
)
}
;
}
const
validKeviahSymbols
=
new
Set
(
[
"
2D3
"
"
2C5
"
"
2D5
"
"
2C7
"
"
3R5
"
"
3R7
"
"
5R7
"
"
5C1
"
"
5D1
"
"
5C3
"
"
7D1
"
"
7C3
"
"
7D3
"
"
7C5
"
]
)
;
for
(
let
year
=
5700
;
year
<
=
5800
;
+
+
year
)
{
let
sym
=
KeviahSymbol
(
year
)
;
assert
.
sameValue
(
validKeviahSymbols
.
has
(
sym
)
true
{
year
}
-
>
{
sym
}
)
;
}
reportCompare
(
0
0
)
;
