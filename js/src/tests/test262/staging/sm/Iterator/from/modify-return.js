const
iter
=
{
next
:
(
)
=
>
(
{
done
:
false
value
:
0
}
)
return
:
(
value
=
"
old
return
"
)
=
>
(
{
done
:
true
value
}
)
}
;
const
wrap
=
Iterator
.
from
(
iter
)
;
let
{
done
value
}
=
wrap
.
return
(
"
return
argument
ignored
"
)
;
assert
.
sameValue
(
done
true
)
;
assert
.
sameValue
(
value
"
old
return
"
)
;
iter
.
return
=
(
)
=
>
{
throw
new
Error
(
)
;
}
;
assertThrowsInstanceOf
(
(
)
=
>
wrap
.
return
(
)
Error
)
;
iter
.
return
=
null
;
let
nullResult
=
wrap
.
return
(
"
return
argument
ignored
"
)
;
assert
.
sameValue
(
nullResult
.
done
true
)
;
assert
.
sameValue
(
nullResult
.
value
undefined
)
;
reportCompare
(
0
0
)
;
