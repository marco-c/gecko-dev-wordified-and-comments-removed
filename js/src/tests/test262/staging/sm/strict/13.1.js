assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
x
y
)
{
}
'
parsesSuccessfully
parsesSuccessfully
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
x
x
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
x
y
z
y
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
a
b
c
d
e
f
g
h
d
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
[
x
y
]
)
{
}
'
parsesSuccessfully
parsesSuccessfully
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
[
x
x
]
)
{
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
x
[
x
]
)
{
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
x
x
)
{
"
use
strict
"
}
;
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
Function
(
"
x
"
"
x
"
"
"
)
'
completesNormally
completesNormally
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
Function
(
"
x
"
"
y
"
"
"
)
'
completesNormally
completesNormally
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
Function
(
"
x
"
"
x
"
"
\
'
use
strict
\
'
"
)
'
raisesException
(
SyntaxError
)
raisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
Function
(
"
x
"
"
y
"
"
\
'
use
strict
\
'
"
)
'
completesNormally
completesNormally
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
(
x
x
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
(
x
y
)
{
}
)
'
parsesSuccessfully
parsesSuccessfully
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
eval
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
[
eval
]
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
{
x
:
eval
}
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
eval
(
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
eval
)
{
"
use
strict
"
;
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
[
eval
]
)
{
"
use
strict
"
;
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
{
x
:
eval
}
)
{
"
use
strict
"
;
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
eval
(
)
{
"
use
strict
"
;
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
eval
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
[
eval
]
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
{
x
:
eval
}
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
eval
(
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
eval
)
{
"
use
strict
"
;
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
[
eval
]
)
{
"
use
strict
"
;
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
{
x
:
eval
}
)
{
"
use
strict
"
;
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
eval
(
)
{
"
use
strict
"
;
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
eval
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
[
eval
]
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
{
x
:
eval
}
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
eval
(
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
eval
)
{
}
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
[
eval
]
)
{
}
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
{
x
:
eval
}
)
{
}
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
eval
)
{
"
use
strict
"
;
}
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
[
eval
]
)
{
"
use
strict
"
;
}
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
{
x
:
eval
}
)
{
"
use
strict
"
;
}
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
arguments
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
[
arguments
]
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
{
x
:
arguments
}
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
arguments
(
)
{
}
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
arguments
)
{
"
use
strict
"
;
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
[
arguments
]
)
{
"
use
strict
"
;
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
f
(
{
x
:
arguments
}
)
{
"
use
strict
"
;
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
function
arguments
(
)
{
"
use
strict
"
;
}
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
arguments
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
[
arguments
]
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
{
x
:
arguments
}
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
arguments
(
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
arguments
)
{
"
use
strict
"
;
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
[
arguments
]
)
{
"
use
strict
"
;
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
{
x
:
arguments
}
)
{
"
use
strict
"
;
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
arguments
(
)
{
"
use
strict
"
;
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
arguments
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
[
arguments
]
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
f
(
{
x
:
arguments
}
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
function
arguments
(
)
{
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
arguments
)
{
}
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
[
arguments
]
)
{
}
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
{
x
:
arguments
}
)
{
}
}
)
'
parsesSuccessfully
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
arguments
)
{
"
use
strict
"
;
}
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
[
arguments
]
)
{
"
use
strict
"
;
}
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
(
{
set
x
(
{
x
:
arguments
}
)
{
"
use
strict
"
;
}
}
)
'
parseRaisesException
(
SyntaxError
)
parseRaisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
Function
(
"
eval
"
"
"
)
'
completesNormally
completesNormally
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
Function
(
"
eval
"
"
\
'
use
strict
\
'
;
"
)
'
raisesException
(
SyntaxError
)
raisesException
(
SyntaxError
)
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
Function
(
"
arguments
"
"
"
)
'
completesNormally
completesNormally
)
true
)
;
assert
.
sameValue
(
testLenientAndStrict
(
'
Function
(
"
arguments
"
"
\
'
use
strict
\
'
;
"
)
'
raisesException
(
SyntaxError
)
raisesException
(
SyntaxError
)
)
true
)
;
reportCompare
(
0
0
)
;
