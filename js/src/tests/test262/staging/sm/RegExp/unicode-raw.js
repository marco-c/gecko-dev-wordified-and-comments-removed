var
BUGNUMBER
=
1135377
;
var
summary
=
"
Implement
RegExp
unicode
flag
-
-
raw
unicode
.
"
;
print
(
BUGNUMBER
+
"
:
"
+
summary
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
uDC38
/
u
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
uDC38
/
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
sameValue
(
eval
(
/
\
\
uD83D
\
uDC38
/
u
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
sameValue
(
eval
(
/
\
\
u
{
D83D
}
\
uDC38
/
u
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
sameValue
(
eval
(
/
\
uD83D
\
\
uDC38
/
u
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
sameValue
(
eval
(
/
\
uD83D
\
\
u
{
DC38
}
/
u
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
compareArray
(
eval
(
/
\
\
uD83D
\
uDC38
/
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
\
uDC38
/
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
compareArray
(
new
RegExp
(
"
\
uD83D
\
uDC38
"
"
u
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
compareArray
(
new
RegExp
(
"
\
uD83D
\
uDC38
"
"
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
sameValue
(
new
RegExp
(
"
\
\
uD83D
\
uDC38
"
"
u
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
sameValue
(
new
RegExp
(
"
\
\
u
{
D83D
}
\
uDC38
"
"
u
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
sameValue
(
new
RegExp
(
"
\
uD83D
\
\
uDC38
"
"
u
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
sameValue
(
new
RegExp
(
"
\
uD83D
\
\
u
{
DC38
}
"
"
u
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
compareArray
(
new
RegExp
(
"
\
\
uD83D
\
uDC38
"
"
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
compareArray
(
new
RegExp
(
"
\
uD83D
\
\
uDC38
"
"
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
uDC38
?
/
u
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
uDC38
?
/
u
)
.
exec
(
"
"
)
[
"
"
]
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
uDC38
?
/
u
)
.
exec
(
"
\
uD83D
"
)
[
"
"
]
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
uDC38
?
/
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
sameValue
(
eval
(
/
\
uD83D
\
uDC38
?
/
)
.
exec
(
"
"
)
null
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
uDC38
?
/
)
.
exec
(
"
\
uD83D
"
)
[
"
\
uD83D
"
]
)
;
assert
.
sameValue
(
eval
(
/
\
\
uD83D
\
uDC38
?
/
u
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
sameValue
(
eval
(
/
\
\
uD83D
\
uDC38
?
/
u
)
.
exec
(
"
"
)
null
)
;
assert
.
compareArray
(
eval
(
/
\
\
uD83D
\
uDC38
?
/
u
)
.
exec
(
"
\
uD83D
"
)
[
"
\
uD83D
"
]
)
;
assert
.
sameValue
(
eval
(
/
\
uD83D
\
\
uDC38
?
/
u
)
.
exec
(
"
\
u
{
1F438
}
"
)
null
)
;
assert
.
sameValue
(
eval
(
/
\
uD83D
\
\
uDC38
?
/
u
)
.
exec
(
"
"
)
null
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
\
uDC38
?
/
u
)
.
exec
(
"
\
uD83D
"
)
[
"
\
uD83D
"
]
)
;
assert
.
compareArray
(
eval
(
/
\
\
uD83D
\
uDC38
?
/
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
sameValue
(
eval
(
/
\
\
uD83D
\
uDC38
?
/
)
.
exec
(
"
"
)
null
)
;
assert
.
compareArray
(
eval
(
/
\
\
uD83D
\
uDC38
?
/
)
.
exec
(
"
\
uD83D
"
)
[
"
\
uD83D
"
]
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
\
uDC38
?
/
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
sameValue
(
eval
(
/
\
uD83D
\
\
uDC38
?
/
)
.
exec
(
"
"
)
null
)
;
assert
.
compareArray
(
eval
(
/
\
uD83D
\
\
uDC38
?
/
)
.
exec
(
"
\
uD83D
"
)
[
"
\
uD83D
"
]
)
;
assert
.
compareArray
(
new
RegExp
(
"
\
uD83D
\
uDC38
?
"
"
u
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
compareArray
(
new
RegExp
(
"
\
uD83D
\
uDC38
?
"
"
u
"
)
.
exec
(
"
"
)
[
"
"
]
)
;
assert
.
compareArray
(
new
RegExp
(
"
\
uD83D
\
uDC38
?
"
"
u
"
)
.
exec
(
"
\
uD83D
"
)
[
"
"
]
)
;
assert
.
compareArray
(
new
RegExp
(
"
\
uD83D
\
uDC38
?
"
"
"
)
.
exec
(
"
\
u
{
1F438
}
"
)
[
"
\
u
{
1F438
}
"
]
)
;
assert
.
sameValue
(
new
RegExp
(
"
\
uD83D
\
uDC38
?
"
"
"
)
.
exec
(
"
"
)
null
)
;
assert
.
compareArray
(
new
RegExp
(
"
\
uD83D
\
uDC38
?
"
"
"
)
.
exec
(
"
\
uD83D
"
)
[
"
\
uD83D
"
]
)
;
reportCompare
(
0
0
)
;
