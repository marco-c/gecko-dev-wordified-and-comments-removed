var
BUGNUMBER
=
858677
;
var
summary
=
"
[
]
.
reverse
should
swap
elements
low
to
high
using
accesses
to
low
"
+
"
elements
then
accesses
to
high
elements
"
;
print
(
BUGNUMBER
+
"
:
"
+
summary
)
;
var
observed
=
[
]
;
var
props
=
{
0
:
{
configurable
:
true
get
:
function
(
)
{
observed
.
push
(
"
index
0
get
"
)
;
return
"
index
0
get
"
;
}
set
:
function
(
v
)
{
observed
.
push
(
"
index
0
set
:
"
+
v
)
;
}
}
2
:
{
configurable
:
true
get
:
function
(
)
{
observed
.
push
(
"
index
2
get
"
)
;
return
"
index
2
get
"
;
}
set
:
function
(
v
)
{
observed
.
push
(
"
index
2
set
:
"
+
v
)
;
}
}
6
:
{
configurable
:
true
get
:
function
(
)
{
observed
.
push
(
"
index
6
get
"
)
;
return
"
index
6
get
"
;
}
set
:
function
(
v
)
{
observed
.
push
(
"
index
6
set
:
"
+
v
)
;
}
}
7
:
{
configurable
:
true
get
:
function
(
)
{
observed
.
push
(
"
index
7
get
"
)
;
return
"
index
7
get
"
;
}
set
:
function
(
v
)
{
observed
.
push
(
"
index
7
set
:
"
+
v
)
;
}
}
}
;
var
arr
=
Object
.
defineProperties
(
new
Array
(
8
)
props
)
;
arr
.
reverse
(
)
;
var
expectedObserved
=
[
"
index
0
get
"
"
index
7
get
"
"
index
0
set
:
index
7
get
"
"
index
7
set
:
index
0
get
"
"
index
6
get
"
"
index
2
get
"
]
;
print
(
observed
)
;
assert
.
sameValue
(
observed
.
length
expectedObserved
.
length
)
;
for
(
var
i
=
0
;
i
<
expectedObserved
.
length
;
i
+
+
)
assert
.
sameValue
(
observed
[
i
]
expectedObserved
[
i
]
)
;
assert
.
sameValue
(
arr
[
0
]
"
index
0
get
"
)
;
assert
.
sameValue
(
arr
[
1
]
"
index
6
get
"
)
;
assert
.
sameValue
(
2
in
arr
false
)
;
assert
.
sameValue
(
3
in
arr
false
)
;
assert
.
sameValue
(
4
in
arr
false
)
;
assert
.
sameValue
(
arr
[
5
]
"
index
2
get
"
)
;
assert
.
sameValue
(
6
in
arr
false
)
;
assert
.
sameValue
(
arr
[
7
]
"
index
7
get
"
)
;
print
(
"
Tests
complete
"
)
;
reportCompare
(
0
0
)
;
