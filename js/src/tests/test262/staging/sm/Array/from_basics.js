var
src
=
[
1
2
3
]
copy
=
Array
.
from
(
src
)
;
assert
.
sameValue
(
copy
=
=
=
src
false
)
;
assert
.
sameValue
(
Array
.
isArray
(
copy
)
true
)
;
assert
.
deepEqual
(
copy
src
)
;
var
a
=
[
0
1
]
;
a
.
name
=
"
lisa
"
;
assert
.
deepEqual
(
Array
.
from
(
a
)
[
0
1
]
)
;
src
=
[
[
0
]
[
1
]
]
;
copy
=
Array
.
from
(
src
)
;
assert
.
sameValue
(
copy
[
0
]
src
[
0
]
)
;
assert
.
sameValue
(
copy
[
1
]
src
[
1
]
)
;
src
=
{
0
:
"
zero
"
1
:
"
one
"
length
:
2
}
;
copy
=
Array
.
from
(
src
)
;
assert
.
sameValue
(
Array
.
isArray
(
copy
)
true
)
;
assert
.
deepEqual
(
copy
[
"
zero
"
"
one
"
]
)
;
src
=
{
0
:
"
zero
"
1
:
"
one
"
2
:
"
two
"
9
:
"
nine
"
name
:
"
lisa
"
length
:
2
}
;
assert
.
deepEqual
(
Array
.
from
(
src
)
[
"
zero
"
"
one
"
]
)
;
assert
.
deepEqual
(
Array
.
from
(
{
}
)
[
]
)
;
src
=
{
length
:
2
1
:
"
last
"
0
:
"
first
"
}
;
assert
.
deepEqual
(
Array
.
from
(
src
)
[
"
first
"
"
last
"
]
)
;
assert
.
deepEqual
(
Array
.
from
(
Array
(
3
)
)
[
undefined
undefined
undefined
]
)
;
assert
.
deepEqual
(
Array
.
from
(
[
2
3
]
)
[
undefined
undefined
2
3
]
)
;
assert
.
deepEqual
(
Array
.
from
(
[
0
]
)
[
0
undefined
undefined
undefined
]
)
;
assert
.
deepEqual
(
Array
.
from
(
{
length
:
4
}
)
[
undefined
undefined
undefined
undefined
]
)
;
assert
.
deepEqual
(
Array
.
from
(
{
length
:
-
1
}
)
[
]
)
;
reportCompare
(
0
0
)
;
