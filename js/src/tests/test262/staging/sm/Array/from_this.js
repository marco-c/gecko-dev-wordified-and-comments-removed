var
hits
=
0
obj
=
{
}
;
function
f
(
x
)
{
assert
.
sameValue
(
this
obj
)
;
hits
+
+
;
}
Array
.
from
(
[
"
a
"
"
b
"
"
c
"
]
f
obj
)
;
assert
.
sameValue
(
hits
3
)
;
hits
=
0
;
function
gs
(
x
)
{
"
use
strict
"
;
assert
.
sameValue
(
this
undefined
)
;
hits
+
+
;
}
Array
.
from
(
"
def
"
gs
)
;
assert
.
sameValue
(
hits
3
)
;
var
global
=
this
;
hits
=
0
;
function
g
(
x
)
{
assert
.
sameValue
(
this
global
)
;
hits
+
+
;
}
Array
.
from
(
"
ghi
"
g
)
;
assert
.
sameValue
(
hits
3
)
;
for
(
var
v
of
[
0
"
str
"
undefined
]
)
{
hits
=
0
;
var
mapfn
=
function
h
(
x
)
{
"
use
strict
"
;
assert
.
sameValue
(
this
v
)
;
hits
+
+
;
}
;
Array
.
from
(
"
pq
"
mapfn
v
)
;
assert
.
sameValue
(
hits
2
)
;
}
reportCompare
(
0
0
)
;
