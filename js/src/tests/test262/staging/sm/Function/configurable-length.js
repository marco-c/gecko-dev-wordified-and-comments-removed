var
f
=
function
(
a1
a2
a3
a4
)
{
}
;
assert
.
sameValue
(
delete
f
.
length
true
)
;
assert
.
sameValue
(
f
.
hasOwnProperty
(
"
length
"
)
false
)
;
assert
.
sameValue
(
f
.
length
0
)
;
assert
.
sameValue
(
delete
Function
.
prototype
.
length
true
)
;
assert
.
sameValue
(
f
.
length
undefined
)
;
assert
.
sameValue
(
"
length
"
in
Function
.
prototype
false
)
;
Function
.
prototype
.
length
=
7
;
assert
.
sameValue
(
Function
.
prototype
.
length
7
)
;
delete
Function
.
prototype
.
length
;
assert
.
sameValue
(
Function
.
prototype
.
length
undefined
)
;
Object
.
defineProperty
(
Function
.
prototype
"
length
"
{
value
:
0
configurable
:
true
}
)
;
var
g
=
function
f
(
a1
a2
a3
a4
a5
)
{
}
;
var
desc
=
Object
.
getOwnPropertyDescriptor
(
g
"
length
"
)
;
assert
.
sameValue
(
desc
.
configurable
true
)
;
assert
.
sameValue
(
desc
.
enumerable
false
)
;
assert
.
sameValue
(
desc
.
writable
false
)
;
assert
.
sameValue
(
desc
.
value
5
)
;
delete
g
.
length
;
g
.
length
=
12
;
assert
.
sameValue
(
g
.
hasOwnProperty
(
"
length
"
)
false
)
;
assert
.
sameValue
(
g
.
length
0
)
;
delete
Function
.
prototype
.
length
;
g
.
length
=
13
;
var
desc
=
Object
.
getOwnPropertyDescriptor
(
g
"
length
"
)
;
assert
.
sameValue
(
desc
.
configurable
true
)
;
assert
.
sameValue
(
desc
.
enumerable
true
)
;
assert
.
sameValue
(
desc
.
writable
true
)
;
assert
.
sameValue
(
desc
.
value
13
)
;
function
mkfun
(
)
{
function
fun
(
a1
a2
a3
a4
a5
)
{
}
return
fun
;
}
g
=
mkfun
(
)
;
var
h
=
mkfun
(
)
;
delete
h
.
length
;
assert
.
sameValue
(
g
.
length
5
)
;
assert
.
sameValue
(
mkfun
(
)
.
length
5
)
;
g
=
mkfun
(
)
;
Object
.
defineProperty
(
g
"
length
"
{
value
:
0
}
)
;
assert
.
sameValue
(
delete
g
.
length
true
)
;
assert
.
sameValue
(
g
.
hasOwnProperty
(
"
length
"
)
false
)
;
g
=
mkfun
(
)
;
Object
.
defineProperty
(
g
"
length
"
{
value
:
42
}
)
;
desc
=
Object
.
getOwnPropertyDescriptor
(
g
"
length
"
)
;
assert
.
sameValue
(
desc
.
configurable
true
)
;
assert
.
sameValue
(
desc
.
enumerable
false
)
;
assert
.
sameValue
(
desc
.
writable
false
)
;
assert
.
sameValue
(
desc
.
value
42
)
;
reportCompare
(
0
0
)
;
