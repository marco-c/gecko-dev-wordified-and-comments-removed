let
ta
=
new
Int32Array
(
4
)
;
let
emptySources
=
[
[
]
new
Int32Array
(
0
)
]
;
let
nonEmptySource
=
[
[
0
]
new
Int32Array
(
1
)
]
;
let
sources
=
[
.
.
.
emptySources
.
.
.
nonEmptySource
]
;
let
validOffsets
=
[
0
0
.
1
3
3
.
9
-
0
-
0
.
1
-
0
.
9
NaN
undefined
null
true
"
"
"
3
"
"
1
\
t
\
n
"
"
some
string
"
{
valueOf
(
)
{
return
2
;
}
}
]
;
for
(
let
offset
of
validOffsets
)
{
for
(
let
source
of
sources
)
{
ta
.
set
(
source
offset
)
;
}
}
let
invalidOffsets
=
[
5
2147483647
2147483648
2147483649
4294967295
4294967296
4294967297
Infinity
-
1
-
1
.
1
-
2147483647
-
2147483648
-
2147483649
-
4294967295
-
4294967296
-
4294967297
-
Infinity
"
8
"
"
Infinity
"
"
Infinity
"
{
valueOf
(
)
{
return
10
;
}
}
]
;
for
(
let
offset
of
invalidOffsets
)
{
for
(
let
source
of
sources
)
{
assertThrowsInstanceOf
(
(
)
=
>
ta
.
set
(
source
offset
)
RangeError
)
;
}
}
for
(
let
source
of
emptySources
)
{
ta
.
set
(
source
4
)
;
ta
.
set
(
source
4
.
9
)
;
}
for
(
let
source
of
nonEmptySource
)
{
assertThrowsInstanceOf
(
(
)
=
>
ta
.
set
(
source
4
)
RangeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
ta
.
set
(
source
4
.
9
)
RangeError
)
;
}
for
(
let
source
of
sources
)
{
assertThrowsInstanceOf
(
(
)
=
>
ta
.
set
(
source
Symbol
(
)
)
TypeError
)
;
}
reportCompare
(
0
0
)
;
