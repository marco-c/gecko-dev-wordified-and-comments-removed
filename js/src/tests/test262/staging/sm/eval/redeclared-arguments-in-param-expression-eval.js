assert
.
sameValue
(
"
arguments
"
in
this
false
)
;
function
f1
(
p
=
eval
(
"
var
arguments
"
)
)
{
}
assertThrowsInstanceOf
(
f1
SyntaxError
)
;
function
f2
(
p
=
eval
(
"
var
arguments
"
)
)
{
var
arguments
;
}
assertThrowsInstanceOf
(
f2
SyntaxError
)
;
function
f3
(
p
=
eval
(
"
var
arguments
"
)
)
{
function
arguments
(
)
{
}
}
assertThrowsInstanceOf
(
f3
SyntaxError
)
;
function
f4
(
p
=
eval
(
"
var
arguments
"
)
)
{
let
arguments
;
}
assertThrowsInstanceOf
(
f4
SyntaxError
)
;
function
f5
(
p
=
eval
(
"
var
arguments
"
)
arguments
)
{
}
assertThrowsInstanceOf
(
f5
SyntaxError
)
;
function
f6
(
arguments
p
=
eval
(
"
var
arguments
"
)
)
{
}
assertThrowsInstanceOf
(
f6
SyntaxError
)
;
var
a1
=
(
p
=
eval
(
"
var
arguments
=
'
param
'
"
)
)
=
>
{
assert
.
sameValue
(
arguments
"
param
"
)
;
}
;
a1
(
)
;
var
a2
=
(
p
=
eval
(
"
var
arguments
=
'
param
'
"
)
q
=
(
)
=
>
arguments
)
=
>
{
var
arguments
=
"
local
"
;
assert
.
sameValue
(
arguments
"
local
"
)
;
assert
.
sameValue
(
q
(
)
"
param
"
)
;
}
;
a2
(
)
;
var
a3
=
(
p
=
eval
(
"
var
arguments
=
'
param
'
"
)
q
=
(
)
=
>
arguments
)
=
>
{
function
arguments
(
)
{
}
assert
.
sameValue
(
typeof
arguments
"
function
"
)
;
assert
.
sameValue
(
q
(
)
"
param
"
)
;
}
;
a3
(
)
;
var
a4
=
(
p
=
eval
(
"
var
arguments
=
'
param
'
"
)
q
=
(
)
=
>
arguments
)
=
>
{
let
arguments
=
"
local
"
;
assert
.
sameValue
(
arguments
"
local
"
)
;
assert
.
sameValue
(
q
(
)
"
param
"
)
;
}
;
a4
(
)
;
var
a5
=
(
p
=
eval
(
"
var
arguments
"
)
arguments
)
=
>
{
}
;
assertThrowsInstanceOf
(
a5
SyntaxError
)
;
var
a6
=
(
arguments
p
=
eval
(
"
var
arguments
"
)
)
=
>
{
}
;
assertThrowsInstanceOf
(
a6
SyntaxError
)
;
assert
.
sameValue
(
"
arguments
"
in
this
false
)
;
reportCompare
(
0
0
)
;
