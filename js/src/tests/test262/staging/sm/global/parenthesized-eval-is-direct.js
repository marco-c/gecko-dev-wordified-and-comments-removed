print
(
"
(
eval
)
(
.
.
.
)
is
a
direct
eval
(
1
eval
)
(
)
isn
'
t
etc
.
"
)
;
var
t
=
"
global
"
;
function
group
(
)
{
var
t
=
"
local
"
;
return
(
eval
)
(
"
t
"
)
;
}
assert
.
sameValue
(
group
(
)
"
local
"
)
;
function
groupAndComma
(
)
{
var
t
=
"
local
"
;
return
(
1
eval
)
(
"
t
"
)
;
}
assert
.
sameValue
(
groupAndComma
(
)
"
global
"
)
;
function
groupAndTrueTernary
(
)
{
var
t
=
"
local
"
;
return
(
true
?
eval
:
null
)
(
"
t
"
)
;
}
assert
.
sameValue
(
groupAndTrueTernary
(
)
"
global
"
)
;
function
groupAndEmptyStringTernary
(
)
{
var
t
=
"
local
"
;
return
(
"
"
?
null
:
eval
)
(
"
t
"
)
;
}
assert
.
sameValue
(
groupAndEmptyStringTernary
(
)
"
global
"
)
;
function
groupAndZeroTernary
(
)
{
var
t
=
"
local
"
;
return
(
0
?
null
:
eval
)
(
"
t
"
)
;
}
assert
.
sameValue
(
groupAndZeroTernary
(
)
"
global
"
)
;
function
groupAndNaNTernary
(
)
{
var
t
=
"
local
"
;
return
(
0
/
0
?
null
:
eval
)
(
"
t
"
)
;
}
assert
.
sameValue
(
groupAndNaNTernary
(
)
"
global
"
)
;
print
(
"
All
tests
passed
!
"
)
;
reportCompare
(
0
0
)
;
