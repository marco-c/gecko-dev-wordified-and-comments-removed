class
TestIterator
extends
AsyncIterator
{
async
next
(
)
{
return
{
done
:
false
value
:
'
value
'
}
;
}
closed
=
false
;
async
return
(
)
{
this
.
closed
=
true
;
return
{
done
:
true
}
;
}
}
const
iter
=
new
TestIterator
(
)
;
const
iterTake
=
iter
.
take
(
1
)
;
iterTake
.
next
(
)
.
then
(
(
{
done
value
}
)
=
>
{
assert
.
sameValue
(
done
false
)
;
assert
.
sameValue
(
value
'
value
'
)
;
assert
.
sameValue
(
iter
.
closed
false
)
;
iterTake
.
next
(
)
.
then
(
(
{
done
value
}
)
=
>
{
assert
.
sameValue
(
done
true
)
;
assert
.
sameValue
(
value
undefined
)
;
assert
.
sameValue
(
iter
.
closed
true
)
;
}
)
;
}
)
;
reportCompare
(
0
0
)
;
