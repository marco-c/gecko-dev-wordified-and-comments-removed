var
zdt1
=
Temporal
.
ZonedDateTime
.
from
(
"
1976
-
11
-
18T15
:
23
+
01
:
00
[
Europe
/
Vienna
]
"
)
;
assert
.
sameValue
(
zdt1
.
toString
(
{
calendarName
:
"
auto
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
+
01
:
00
[
Europe
/
Vienna
]
"
)
;
assert
.
sameValue
(
zdt1
.
withCalendar
(
"
gregory
"
)
.
toString
(
{
calendarName
:
"
auto
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
+
01
:
00
[
Europe
/
Vienna
]
[
u
-
ca
=
gregory
]
"
)
;
assert
.
sameValue
(
zdt1
.
toString
(
{
calendarName
:
"
always
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
+
01
:
00
[
Europe
/
Vienna
]
[
u
-
ca
=
iso8601
]
"
)
;
assert
.
sameValue
(
zdt1
.
withCalendar
(
"
gregory
"
)
.
toString
(
{
calendarName
:
"
never
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
+
01
:
00
[
Europe
/
Vienna
]
"
)
;
[
"
ALWAYS
"
"
sometimes
"
false
]
.
forEach
(
calendarName
=
>
{
assert
.
throws
(
RangeError
(
)
=
>
zdt1
.
toString
(
{
calendarName
}
)
)
;
}
)
;
assert
.
sameValue
(
zdt1
.
toString
(
{
timeZoneName
:
"
auto
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
+
01
:
00
[
Europe
/
Vienna
]
"
)
;
assert
.
sameValue
(
zdt1
.
toString
(
{
timeZoneName
:
"
never
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
+
01
:
00
"
)
;
assert
.
sameValue
(
zdt1
.
toString
(
{
offset
:
"
auto
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
+
01
:
00
[
Europe
/
Vienna
]
"
)
;
assert
.
sameValue
(
zdt1
.
toString
(
{
offset
:
"
never
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
[
Europe
/
Vienna
]
"
)
;
var
zdt
=
zdt1
.
withCalendar
(
"
gregory
"
)
;
assert
.
sameValue
(
zdt
.
toString
(
{
timeZoneName
:
"
never
"
calendarName
:
"
never
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
+
01
:
00
"
)
;
assert
.
sameValue
(
zdt
.
toString
(
{
offset
:
"
never
"
calendarName
:
"
never
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
[
Europe
/
Vienna
]
"
)
;
assert
.
sameValue
(
zdt
.
toString
(
{
offset
:
"
never
"
timeZoneName
:
"
never
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
[
u
-
ca
=
gregory
]
"
)
;
assert
.
sameValue
(
zdt
.
toString
(
{
offset
:
"
never
"
timeZoneName
:
"
never
"
calendarName
:
"
never
"
}
)
"
1976
-
11
-
18T15
:
23
:
00
"
)
;
var
zdt5
=
Temporal
.
ZonedDateTime
.
from
(
"
2018
-
11
-
03T23
:
59
:
59
.
999999999
-
03
:
00
[
America
/
Sao_Paulo
]
"
)
;
var
roundedString
=
zdt5
.
toString
(
{
fractionalSecondDigits
:
8
roundingMode
:
"
halfExpand
"
}
)
;
assert
.
sameValue
(
roundedString
"
2018
-
11
-
04T01
:
00
:
00
.
00000000
-
02
:
00
[
America
/
Sao_Paulo
]
"
)
;
var
zdt6
=
Temporal
.
ZonedDateTime
.
from
(
roundedString
)
;
assert
.
sameValue
(
zdt6
.
epochNanoseconds
-
zdt5
.
epochNanoseconds
1n
)
;
reportCompare
(
0
0
)
;
