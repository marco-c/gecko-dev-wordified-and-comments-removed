var
date
=
{
year
:
2000
month
:
10
day
:
29
timeZone
:
"
America
/
Vancouver
"
}
;
var
obj
=
{
.
.
.
date
hour
:
1
minute
:
30
offset
:
"
-
07
:
00
"
}
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
:
"
prefer
"
}
)
}
"
2000
-
10
-
29T01
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
var
obj
=
{
.
.
.
date
hour
:
1
minute
:
30
offset
:
"
-
08
:
00
"
}
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
:
"
prefer
"
}
)
}
"
2000
-
10
-
29T01
:
30
:
00
-
08
:
00
[
America
/
Vancouver
]
"
)
;
var
obj
=
{
.
.
.
date
hour
:
4
offset
:
"
-
07
:
00
"
}
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
:
"
prefer
"
}
)
}
"
2000
-
10
-
29T04
:
00
:
00
-
08
:
00
[
America
/
Vancouver
]
"
)
;
var
obj
=
{
.
.
.
date
hour
:
4
offset
:
"
-
12
:
00
"
}
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
:
"
ignore
"
}
)
}
"
2000
-
10
-
29T04
:
00
:
00
-
08
:
00
[
America
/
Vancouver
]
"
)
;
var
obj
=
{
.
.
.
date
hour
:
4
offset
:
"
-
07
:
00
"
}
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
:
"
use
"
}
)
}
"
2000
-
10
-
29T03
:
00
:
00
-
08
:
00
[
America
/
Vancouver
]
"
)
;
var
obj
=
{
year
:
2000
month
:
10
day
:
29
hour
:
1
minute
:
45
timeZone
:
"
America
/
Vancouver
"
}
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
)
}
"
2000
-
10
-
29T01
:
45
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
disambiguation
:
"
compatible
"
}
)
}
"
2000
-
10
-
29T01
:
45
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
disambiguation
:
"
earlier
"
}
)
}
"
2000
-
10
-
29T01
:
45
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
disambiguation
:
"
later
"
}
)
}
"
2000
-
10
-
29T01
:
45
:
00
-
08
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
ZonedDateTime
.
from
(
obj
{
disambiguation
:
"
reject
"
}
)
)
;
var
obj
=
{
year
:
2000
month
:
4
day
:
2
hour
:
2
minute
:
30
timeZone
:
"
America
/
Vancouver
"
}
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
)
}
"
2000
-
04
-
02T03
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
disambiguation
:
"
compatible
"
}
)
}
"
2000
-
04
-
02T03
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
disambiguation
:
"
earlier
"
}
)
}
"
2000
-
04
-
02T01
:
30
:
00
-
08
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
disambiguation
:
"
later
"
}
)
}
"
2000
-
04
-
02T03
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
ZonedDateTime
.
from
(
obj
{
disambiguation
:
"
reject
"
}
)
)
;
var
obj
=
{
year
:
2000
month
:
4
day
:
2
hour
:
2
minute
:
30
timeZone
:
"
America
/
Vancouver
"
}
;
var
offset
=
"
ignore
"
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
}
)
}
"
2000
-
04
-
02T03
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
disambiguation
:
"
compatible
"
}
)
}
"
2000
-
04
-
02T03
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
disambiguation
:
"
earlier
"
}
)
}
"
2000
-
04
-
02T01
:
30
:
00
-
08
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
disambiguation
:
"
later
"
}
)
}
"
2000
-
04
-
02T03
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
ZonedDateTime
.
from
(
obj
{
disambiguation
:
"
reject
"
}
)
)
;
var
obj
=
{
year
:
2000
month
:
4
day
:
2
hour
:
2
minute
:
30
offset
:
"
-
23
:
59
"
timeZone
:
"
America
/
Vancouver
"
}
;
var
offset
=
"
prefer
"
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
}
)
}
"
2000
-
04
-
02T03
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
disambiguation
:
"
compatible
"
}
)
}
"
2000
-
04
-
02T03
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
disambiguation
:
"
earlier
"
}
)
}
"
2000
-
04
-
02T01
:
30
:
00
-
08
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
disambiguation
:
"
later
"
}
)
}
"
2000
-
04
-
02T03
:
30
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
ZonedDateTime
.
from
(
obj
{
offset
disambiguation
:
"
reject
"
}
)
)
;
var
zdt
=
Temporal
.
ZonedDateTime
.
from
(
{
year
:
1971
month
:
1
day
:
1
hour
:
12
timeZone
:
"
Africa
/
Monrovia
"
}
)
;
assert
.
sameValue
(
zdt
.
offset
"
-
00
:
44
:
30
"
)
;
reportCompare
(
0
0
)
;
