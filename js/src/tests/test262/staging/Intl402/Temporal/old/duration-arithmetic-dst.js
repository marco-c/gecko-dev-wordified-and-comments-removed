var
skippedHourDay
=
Temporal
.
ZonedDateTime
.
from
(
"
2019
-
03
-
10T00
:
00
[
America
/
Vancouver
]
"
)
;
var
repeatedHourDay
=
Temporal
.
ZonedDateTime
.
from
(
"
2019
-
11
-
03T00
:
00
[
America
/
Vancouver
]
"
)
;
var
inRepeatedHour
=
Temporal
.
ZonedDateTime
.
from
(
"
2019
-
11
-
03T01
:
00
-
07
:
00
[
America
/
Vancouver
]
"
)
;
var
oneDay
=
new
Temporal
.
Duration
(
0
0
0
1
)
;
var
totalDays
=
Temporal
.
Duration
.
from
(
{
days
:
126
hours
:
1
}
)
.
total
(
{
unit
:
"
days
"
relativeTo
:
inRepeatedHour
}
)
;
assert
(
Math
.
abs
(
totalDays
-
(
126
+
1
/
23
)
)
<
Number
.
EPSILON
)
;
assert
.
sameValue
(
Temporal
.
Duration
.
from
(
{
days
:
126
hours
:
1
}
)
.
total
(
{
unit
:
"
hours
"
relativeTo
:
inRepeatedHour
}
)
3026
)
;
var
hours25
=
new
Temporal
.
Duration
(
0
0
0
0
25
)
;
assert
.
sameValue
(
{
hours25
.
round
(
{
largestUnit
:
"
days
"
relativeTo
:
"
2019
-
11
-
03T00
:
00
[
America
/
Vancouver
]
"
}
)
}
"
P1D
"
)
;
assert
.
sameValue
(
oneDay
.
total
(
{
unit
:
"
hours
"
relativeTo
:
"
2019
-
11
-
03T00
:
00
[
America
/
Vancouver
]
"
}
)
25
)
;
reportCompare
(
0
0
)
;
