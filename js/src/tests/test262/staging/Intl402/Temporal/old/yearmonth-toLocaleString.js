var
calendar
=
new
Intl
.
DateTimeFormat
(
"
en
"
)
.
resolvedOptions
(
)
.
calendar
;
var
yearmonth
=
Temporal
.
PlainYearMonth
.
from
(
{
year
:
1976
month
:
11
calendar
}
)
;
assert
.
sameValue
(
{
yearmonth
.
toLocaleString
(
"
en
"
{
timeZone
:
"
America
/
New_York
"
}
)
}
"
11
/
1976
"
)
assert
.
sameValue
(
{
yearmonth
.
toLocaleString
(
"
de
"
{
timeZone
:
"
Europe
/
Vienna
"
calendar
}
)
}
"
11
.
1976
"
)
assert
.
sameValue
(
yearmonth
.
toLocaleString
(
"
en
"
{
timeZoneName
:
"
long
"
}
)
"
11
/
1976
"
)
;
assert
.
sameValue
(
yearmonth
.
toLocaleString
(
"
en
"
{
day
:
"
numeric
"
}
)
"
11
/
1976
"
)
;
assert
.
sameValue
(
yearmonth
.
toLocaleString
(
"
en
"
{
hour
:
"
numeric
"
}
)
"
11
/
1976
"
)
;
assert
.
sameValue
(
yearmonth
.
toLocaleString
(
"
en
"
{
minute
:
"
numeric
"
}
)
"
11
/
1976
"
)
;
assert
.
sameValue
(
yearmonth
.
toLocaleString
(
"
en
"
{
second
:
"
numeric
"
}
)
"
11
/
1976
"
)
;
assert
.
sameValue
(
yearmonth
.
toLocaleString
(
"
en
"
{
weekday
:
"
long
"
}
)
"
11
/
1976
"
)
;
var
ym
=
Temporal
.
PlainYearMonth
.
from
(
{
era
:
"
showa
"
eraYear
:
51
month
:
11
calendar
:
"
japanese
"
}
)
;
var
result
=
ym
.
toLocaleString
(
"
en
-
US
-
u
-
ca
-
japanese
"
)
;
assert
(
result
=
=
=
"
11
/
51
"
|
|
result
=
=
=
"
11
/
51
S
"
)
;
var
ymISO
=
Temporal
.
PlainYearMonth
.
from
(
{
year
:
1976
month
:
11
}
)
;
assert
.
throws
(
RangeError
(
)
=
>
ymISO
.
toLocaleString
(
"
en
-
US
-
u
-
ca
-
japanese
"
)
)
;
reportCompare
(
0
0
)
;
