var
zdt
=
Temporal
.
ZonedDateTime
.
from
(
"
2020
-
03
-
08T02
:
30
[
America
/
Los_Angeles
]
"
{
disambiguation
:
"
earlier
"
}
)
;
assert
.
sameValue
(
zdt
.
toString
(
)
"
2020
-
03
-
08T01
:
30
:
00
-
08
:
00
[
America
/
Los_Angeles
]
"
)
;
var
zdt
=
Temporal
.
ZonedDateTime
.
from
(
"
2020
-
03
-
08T09
:
00
:
00Z
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
zdt
.
toString
(
)
"
2020
-
03
-
08T01
:
00
:
00
-
08
:
00
[
America
/
Los_Angeles
]
"
)
;
var
zdt
=
Temporal
.
ZonedDateTime
.
from
(
"
2020
-
11
-
01T01
:
30
-
07
:
00
[
America
/
Los_Angeles
]
"
{
offset
:
"
prefer
"
}
)
;
assert
.
sameValue
(
zdt
.
toString
(
)
"
2020
-
11
-
01T01
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
var
zdt
=
Temporal
.
ZonedDateTime
.
from
(
"
2020
-
11
-
01T01
:
30
-
08
:
00
[
America
/
Los_Angeles
]
"
{
offset
:
"
prefer
"
}
)
;
assert
.
sameValue
(
zdt
.
toString
(
)
"
2020
-
11
-
01T01
:
30
:
00
-
08
:
00
[
America
/
Los_Angeles
]
"
)
;
var
zdt
=
Temporal
.
ZonedDateTime
.
from
(
"
2020
-
11
-
01T04
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
{
offset
:
"
prefer
"
}
)
;
assert
.
sameValue
(
zdt
.
toString
(
)
"
2020
-
11
-
01T04
:
00
:
00
-
08
:
00
[
America
/
Los_Angeles
]
"
)
;
var
zdt
=
Temporal
.
ZonedDateTime
.
from
(
"
2020
-
11
-
01T04
:
00
-
12
:
00
[
America
/
Los_Angeles
]
"
{
offset
:
"
ignore
"
}
)
;
assert
.
sameValue
(
zdt
.
toString
(
)
"
2020
-
11
-
01T04
:
00
:
00
-
08
:
00
[
America
/
Los_Angeles
]
"
)
;
var
zdt
=
Temporal
.
ZonedDateTime
.
from
(
"
2020
-
11
-
01T04
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
{
offset
:
"
use
"
}
)
;
assert
.
sameValue
(
zdt
.
toString
(
)
"
2020
-
11
-
01T03
:
00
:
00
-
08
:
00
[
America
/
Los_Angeles
]
"
)
;
var
str
=
"
2019
-
02
-
16T23
:
45
[
America
/
Sao_Paulo
]
"
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
)
}
"
2019
-
02
-
16T23
:
45
:
00
-
02
:
00
[
America
/
Sao_Paulo
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
disambiguation
:
"
compatible
"
}
)
}
"
2019
-
02
-
16T23
:
45
:
00
-
02
:
00
[
America
/
Sao_Paulo
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
disambiguation
:
"
earlier
"
}
)
}
"
2019
-
02
-
16T23
:
45
:
00
-
02
:
00
[
America
/
Sao_Paulo
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
disambiguation
:
"
later
"
}
)
}
"
2019
-
02
-
16T23
:
45
:
00
-
03
:
00
[
America
/
Sao_Paulo
]
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
ZonedDateTime
.
from
(
str
{
disambiguation
:
"
reject
"
}
)
)
;
var
str
=
"
2020
-
03
-
08T02
:
30
[
America
/
Los_Angeles
]
"
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
)
}
"
2020
-
03
-
08T03
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
disambiguation
:
"
compatible
"
}
)
}
"
2020
-
03
-
08T03
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
disambiguation
:
"
earlier
"
}
)
}
"
2020
-
03
-
08T01
:
30
:
00
-
08
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
disambiguation
:
"
later
"
}
)
}
"
2020
-
03
-
08T03
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
ZonedDateTime
.
from
(
str
{
disambiguation
:
"
reject
"
}
)
)
;
var
str
=
"
2020
-
03
-
08T02
:
30
[
America
/
Los_Angeles
]
"
;
var
offset
=
"
ignore
"
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
}
)
}
"
2020
-
03
-
08T03
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
disambiguation
:
"
compatible
"
}
)
}
"
2020
-
03
-
08T03
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
disambiguation
:
"
earlier
"
}
)
}
"
2020
-
03
-
08T01
:
30
:
00
-
08
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
disambiguation
:
"
later
"
}
)
}
"
2020
-
03
-
08T03
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
disambiguation
:
"
reject
"
}
)
)
;
var
str
=
"
2020
-
03
-
08T02
:
30
-
23
:
59
[
America
/
Los_Angeles
]
"
;
var
offset
=
"
prefer
"
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
}
)
}
"
2020
-
03
-
08T03
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
disambiguation
:
"
compatible
"
}
)
}
"
2020
-
03
-
08T03
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
disambiguation
:
"
earlier
"
}
)
}
"
2020
-
03
-
08T01
:
30
:
00
-
08
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
sameValue
(
{
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
disambiguation
:
"
later
"
}
)
}
"
2020
-
03
-
08T03
:
30
:
00
-
07
:
00
[
America
/
Los_Angeles
]
"
)
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
ZonedDateTime
.
from
(
str
{
offset
disambiguation
:
"
reject
"
}
)
)
;
reportCompare
(
0
0
)
;
