var
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
5779
month
:
6
day
:
1
calendar
:
"
hebrew
"
}
)
;
assert
.
sameValue
(
date
.
month
6
)
;
assert
.
sameValue
(
date
.
monthCode
"
M05L
"
)
;
assert
.
sameValue
(
date
.
day
1
)
;
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
5779
monthCode
:
"
M05L
"
day
:
1
calendar
:
"
hebrew
"
}
)
;
assert
.
sameValue
(
date
.
month
6
)
;
assert
.
sameValue
(
date
.
monthCode
"
M05L
"
)
;
assert
.
sameValue
(
date
.
day
1
)
;
var
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
5779
month
:
7
day
:
1
calendar
:
"
hebrew
"
}
)
;
assert
.
sameValue
(
date
.
month
7
)
;
assert
.
sameValue
(
date
.
monthCode
"
M06
"
)
;
assert
.
sameValue
(
date
.
day
1
)
;
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
5779
monthCode
:
"
M06
"
day
:
1
calendar
:
"
hebrew
"
}
)
;
assert
.
sameValue
(
date
.
month
7
)
;
assert
.
sameValue
(
date
.
monthCode
"
M06
"
)
;
assert
.
sameValue
(
date
.
day
1
)
;
for
(
var
i
=
1
;
i
<
=
12
;
i
+
+
)
{
if
(
i
=
=
=
5
)
continue
;
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
PlainDate
.
from
(
{
year
:
5779
monthCode
:
M
{
i
.
toString
(
)
.
padStart
(
2
"
0
"
)
}
L
day
:
1
calendar
:
"
hebrew
"
}
)
)
;
}
assert
.
throws
(
RangeError
(
)
=
>
Temporal
.
PlainDate
.
from
(
{
year
:
5780
monthCode
:
"
M05L
"
day
:
1
calendar
:
"
hebrew
"
}
{
overflow
:
"
reject
"
}
)
)
;
var
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
5780
monthCode
:
"
M05L
"
day
:
15
calendar
:
"
hebrew
"
}
)
;
assert
.
sameValue
(
date
.
month
5
)
;
assert
.
sameValue
(
date
.
monthCode
"
M05
"
)
;
assert
.
sameValue
(
date
.
day
30
)
;
reportCompare
(
0
0
)
;
