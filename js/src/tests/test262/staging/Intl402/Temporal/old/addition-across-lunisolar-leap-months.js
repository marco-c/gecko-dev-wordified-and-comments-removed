var
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
5783
monthCode
:
"
M08
"
day
:
2
calendar
:
"
hebrew
"
}
)
;
var
added
=
date
.
add
(
{
years
:
1
}
)
;
assert
.
sameValue
(
added
.
monthCode
date
.
monthCode
)
;
assert
.
sameValue
(
added
.
year
date
.
year
+
1
)
;
var
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
5783
monthCode
:
"
M08
"
day
:
2
calendar
:
"
hebrew
"
}
)
;
var
added
=
date
.
add
(
{
months
:
13
}
)
;
assert
.
sameValue
(
added
.
monthCode
date
.
monthCode
)
;
assert
.
sameValue
(
added
.
year
date
.
year
+
1
)
;
var
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
5783
monthCode
:
"
M08
"
day
:
2
calendar
:
"
hebrew
"
}
)
;
var
added
=
date
.
add
(
{
years
:
1
months
:
12
}
)
;
assert
.
sameValue
(
added
.
monthCode
date
.
monthCode
)
;
assert
.
sameValue
(
added
.
year
date
.
year
+
2
)
;
var
testChineseData
=
new
Date
(
"
2001
-
02
-
01T00
:
00Z
"
)
.
toLocaleString
(
"
en
-
US
-
u
-
ca
-
chinese
"
{
day
:
"
numeric
"
month
:
"
numeric
"
year
:
"
numeric
"
era
:
"
short
"
timeZone
:
"
UTC
"
}
)
;
var
hasOutdatedChineseIcuData
=
!
testChineseData
.
endsWith
(
"
2001
"
)
;
if
(
hasOutdatedChineseIcuData
)
{
var
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
2000
monthCode
:
"
M08
"
day
:
2
calendar
:
"
chinese
"
}
)
;
var
added
=
date
.
add
(
{
years
:
1
}
)
;
assert
.
sameValue
(
added
.
monthCode
date
.
monthCode
)
;
assert
.
sameValue
(
added
.
year
date
.
year
+
1
)
;
}
if
(
hasOutdatedChineseIcuData
)
{
var
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
2000
monthCode
:
"
M08
"
day
:
2
calendar
:
"
chinese
"
}
)
;
var
added
=
date
.
add
(
{
months
:
13
}
)
;
assert
.
sameValue
(
added
.
monthCode
date
.
monthCode
)
;
assert
.
sameValue
(
added
.
year
date
.
year
+
1
)
;
}
if
(
hasOutdatedChineseIcuData
)
{
var
date
=
Temporal
.
PlainDate
.
from
(
{
year
:
2001
monthCode
:
"
M08
"
day
:
2
calendar
:
"
chinese
"
}
)
;
var
added
=
date
.
add
(
{
years
:
1
months
:
12
}
)
;
assert
.
sameValue
(
added
.
monthCode
date
.
monthCode
)
;
assert
.
sameValue
(
added
.
year
date
.
year
+
2
)
;
}
;
reportCompare
(
0
0
)
;
