const
rejectionValues
=
[
]
;
var
realDone
=
DONE
;
globalThis
.
DONE
=
function
(
mustBeDefined
)
{
rejectionValues
.
push
(
mustBeDefined
)
;
}
;
const
someObject
=
{
}
;
(
async
function
(
)
{
asyncTest
(
function
(
)
{
return
Promise
.
reject
(
null
)
;
}
)
;
}
)
(
)
.
then
(
(
)
=
>
{
asyncTest
(
function
(
)
{
return
Promise
.
reject
(
someObject
)
;
}
)
;
}
)
.
then
(
(
)
=
>
{
asyncTest
(
function
(
)
{
return
Promise
.
reject
(
"
hi
"
)
;
}
)
;
}
)
.
then
(
(
)
=
>
{
asyncTest
(
function
(
)
{
return
Promise
.
reject
(
10
)
;
}
)
;
}
)
.
then
(
(
)
=
>
{
asyncTest
(
function
(
)
{
return
{
then
(
res
rej
)
{
rej
(
true
)
;
}
}
;
}
)
;
}
)
.
then
(
(
)
=
>
{
assert
.
compareArray
(
rejectionValues
[
null
someObject
"
hi
"
10
true
]
)
;
}
)
.
then
(
realDone
realDone
)
;
