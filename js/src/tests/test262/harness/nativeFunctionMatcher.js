[
'
function
(
)
{
[
native
code
]
}
'
'
function
(
)
{
[
native
code
]
}
'
'
function
(
)
{
[
native
code
]
}
'
'
function
a
(
)
{
[
native
code
]
}
'
'
function
a
(
)
{
/
*
}
*
/
[
native
code
]
}
'
function
a
(
)
{
/
/
test
[
native
code
]
/
*
test
*
/
}
'
function
(
a
b
=
function
(
)
{
[
]
;
}
)
{
[
native
code
]
}
'
'
function
[
Symbol
.
xyz
]
(
)
{
[
native
code
]
}
'
'
function
[
x
[
y
]
[
z
[
d
]
(
)
]
]
(
)
{
[
native
code
]
}
'
'
function
[
"
]
"
]
(
)
{
[
native
code
]
}
'
'
function
[
\
'
]
\
'
]
(
)
{
[
native
code
]
}
'
'
/
*
test
*
/
function
(
)
{
[
native
code
]
}
'
'
function
(
)
{
[
native
code
]
}
/
*
test
*
/
'
'
function
(
)
{
[
native
code
]
}
/
/
test
'
]
.
forEach
(
(
s
)
=
>
{
try
{
validateNativeFunctionSource
(
s
)
;
}
catch
(
unused
)
{
ERROR
(
{
JSON
.
stringify
(
s
)
}
should
pass
)
;
}
}
)
;
[
'
native
code
'
'
function
(
)
{
}
'
'
function
(
)
{
"
native
code
"
}
'
'
function
(
)
{
[
]
native
code
}
'
'
function
(
)
)
{
[
native
code
]
}
'
'
function
(
(
)
{
[
native
code
]
}
'
'
function
[
]
]
(
)
{
[
native
code
]
}
'
'
function
[
[
]
(
)
{
[
native
code
]
}
'
'
function
[
"
]
]
(
)
{
[
native
code
]
}
'
'
function
[
\
'
]
]
(
)
{
[
native
code
]
}
'
'
function
(
)
{
[
native
code
]
/
*
}
'
'
/
/
function
(
)
{
[
native
code
]
}
'
]
.
forEach
(
(
s
)
=
>
{
let
fail
=
false
;
try
{
validateNativeFunctionSource
(
s
)
;
fail
=
true
;
}
catch
(
unused
)
{
}
if
(
fail
)
{
ERROR
(
{
JSON
.
stringify
(
s
)
}
should
fail
)
;
}
}
)
;
reportCompare
(
0
0
)
;
