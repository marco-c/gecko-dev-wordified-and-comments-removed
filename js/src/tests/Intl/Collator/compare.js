var
input
=
[
"
Argentina
"
"
Oerlikon
"
"
Offenbach
"
"
Sverige
"
"
Vaticano
"
"
Zimbabwe
"
"
la
France
"
"
viva
Espa
a
!
"
"
sterreich
"
"
"
"
"
"
"
]
;
var
collator
expected
;
function
assertEqualArray
(
actual
expected
collator
)
{
var
description
=
JSON
.
stringify
(
collator
.
resolvedOptions
(
)
)
;
assertEq
(
actual
.
length
expected
.
length
"
array
length
"
+
description
)
;
for
(
var
i
=
0
;
i
<
actual
.
length
;
i
+
+
)
{
assertEq
(
actual
[
i
]
expected
[
i
]
"
element
"
+
i
+
"
"
+
description
)
;
}
}
collator
=
new
Intl
.
Collator
(
"
en
-
US
"
)
;
expected
=
[
"
viva
Espa
a
!
"
"
Argentina
"
"
la
France
"
"
Oerlikon
"
"
Offenbach
"
"
sterreich
"
"
Sverige
"
"
Vaticano
"
"
Zimbabwe
"
"
"
"
"
"
"
]
;
assertEqualArray
(
input
.
sort
(
collator
.
compare
)
expected
collator
)
;
collator
=
new
Intl
.
Collator
(
"
sv
-
SE
"
)
;
expected
=
[
"
viva
Espa
a
!
"
"
Argentina
"
"
la
France
"
"
Oerlikon
"
"
Offenbach
"
"
Sverige
"
"
Vaticano
"
"
Zimbabwe
"
"
sterreich
"
"
"
"
"
"
"
]
;
assertEqualArray
(
input
.
sort
(
collator
.
compare
)
expected
collator
)
;
collator
=
new
Intl
.
Collator
(
"
sv
-
SE
"
{
ignorePunctuation
:
true
}
)
;
expected
=
[
"
Argentina
"
"
la
France
"
"
Oerlikon
"
"
Offenbach
"
"
Sverige
"
"
Vaticano
"
"
viva
Espa
a
!
"
"
Zimbabwe
"
"
sterreich
"
"
"
"
"
"
"
]
;
assertEqualArray
(
input
.
sort
(
collator
.
compare
)
expected
collator
)
;
collator
=
new
Intl
.
Collator
(
"
de
-
DE
"
)
;
expected
=
[
"
viva
Espa
a
!
"
"
Argentina
"
"
la
France
"
"
Oerlikon
"
"
Offenbach
"
"
sterreich
"
"
Sverige
"
"
Vaticano
"
"
Zimbabwe
"
"
"
"
"
"
"
]
;
assertEqualArray
(
input
.
sort
(
collator
.
compare
)
expected
collator
)
;
collator
=
new
Intl
.
Collator
(
"
de
-
DE
-
u
-
co
-
phonebk
"
)
;
expected
=
[
"
viva
Espa
a
!
"
"
Argentina
"
"
la
France
"
"
Oerlikon
"
"
sterreich
"
"
Offenbach
"
"
Sverige
"
"
Vaticano
"
"
Zimbabwe
"
"
"
"
"
"
"
]
;
assertEqualArray
(
input
.
sort
(
collator
.
compare
)
expected
collator
)
;
var
desc
=
Object
.
getOwnPropertyDescriptor
(
Intl
.
Collator
.
prototype
"
compare
"
)
;
assertEq
(
desc
!
=
=
undefined
true
)
;
assertEq
(
typeof
desc
.
get
"
function
"
)
;
assertEq
(
desc
.
get
.
name
"
get
compare
"
)
;
reportCompare
(
0
0
'
ok
'
)
;
