const
defaultValue
=
"
default
-
value
"
;
const
unreachable
=
(
)
=
>
{
throw
"
unreachable
"
;
}
;
var
forIn
;
for
(
{
forIn
=
defaultValue
}
in
{
"
"
:
null
}
)
;
assertEq
(
forIn
defaultValue
)
;
forIn
=
undefined
;
String
.
prototype
.
forIn
=
defaultValue
;
for
(
{
forIn
=
unreachable
(
)
}
in
{
"
"
:
null
}
)
;
delete
String
.
prototype
.
forIn
;
assertEq
(
forIn
defaultValue
)
;
forIn
=
undefined
;
for
(
[
forIn
=
defaultValue
]
in
{
"
"
:
null
}
)
;
assertEq
(
forIn
defaultValue
)
;
forIn
=
undefined
;
for
(
[
forIn
=
unreachable
(
)
]
in
{
"
ABC
"
:
null
}
)
;
assertEq
(
forIn
"
A
"
)
;
var
forOf
;
for
(
{
forOf
=
defaultValue
}
of
[
{
}
]
)
;
assertEq
(
forOf
defaultValue
)
;
forOf
=
undefined
;
for
(
{
forOf
=
unreachable
(
)
}
of
[
{
forOf
:
defaultValue
}
]
)
;
assertEq
(
forOf
defaultValue
)
;
forOf
=
undefined
;
for
(
[
forOf
=
defaultValue
]
of
[
[
]
]
)
;
assertEq
(
forOf
defaultValue
)
;
forOf
=
undefined
;
for
(
[
forOf
=
unreachable
(
)
]
of
[
[
defaultValue
]
]
)
;
assertEq
(
forOf
defaultValue
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
for
(
{
invalid
=
0
}
;
;
)
;
)
SyntaxError
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
