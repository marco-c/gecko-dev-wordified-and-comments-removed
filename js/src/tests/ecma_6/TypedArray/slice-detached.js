function
*
createTypedArrays
(
lengths
=
[
0
1
4
4096
]
)
{
for
(
let
length
of
lengths
)
{
let
buffer
=
new
ArrayBuffer
(
length
*
Int32Array
.
BYTES_PER_ELEMENT
)
;
let
typedArray
=
new
Int32Array
(
buffer
)
;
yield
{
typedArray
length
buffer
(
)
{
return
buffer
;
}
}
;
}
for
(
let
length
of
lengths
)
{
let
typedArray
=
new
Int32Array
(
length
)
;
yield
{
typedArray
length
buffer
(
)
{
return
typedArray
.
buffer
;
}
}
;
}
}
if
(
typeof
detachArrayBuffer
=
=
=
"
function
"
)
{
for
(
let
{
typedArray
buffer
}
of
createTypedArrays
(
)
)
{
detachArrayBuffer
(
buffer
(
)
)
;
assertThrowsInstanceOf
(
(
)
=
>
{
typedArray
.
slice
(
0
)
;
}
TypeError
"
ArrayBuffer
is
detached
on
function
entry
"
)
;
}
for
(
let
{
typedArray
length
buffer
}
of
createTypedArrays
(
)
)
{
let
detached
=
false
;
let
start
=
{
valueOf
(
)
{
assertEq
(
detached
false
)
;
detachArrayBuffer
(
buffer
(
)
)
;
assertEq
(
detached
false
)
;
detached
=
true
;
return
0
;
}
}
;
if
(
length
=
=
=
0
)
{
typedArray
.
slice
(
start
)
;
}
else
{
assertThrowsInstanceOf
(
(
)
=
>
{
typedArray
.
slice
(
start
)
;
}
TypeError
"
ArrayBuffer
is
detached
in
ToInteger
(
start
)
"
)
;
}
assertEq
(
detached
true
"
detachArrayBuffer
was
called
"
)
;
}
for
(
let
{
typedArray
length
buffer
}
of
createTypedArrays
(
)
)
{
let
detached
=
false
;
let
end
=
{
valueOf
(
)
{
assertEq
(
detached
false
)
;
detachArrayBuffer
(
buffer
(
)
)
;
assertEq
(
detached
false
)
;
detached
=
true
;
return
length
;
}
}
;
if
(
length
=
=
=
0
)
{
typedArray
.
slice
(
0
end
)
;
}
else
{
assertThrowsInstanceOf
(
(
)
=
>
{
typedArray
.
slice
(
0
end
)
;
}
TypeError
"
ArrayBuffer
is
detached
in
ToInteger
(
end
)
"
)
;
}
assertEq
(
detached
true
"
detachArrayBuffer
was
called
"
)
;
}
for
(
let
{
typedArray
length
buffer
}
of
createTypedArrays
(
)
)
{
let
detached
=
false
;
typedArray
.
constructor
=
{
[
Symbol
.
species
]
:
function
(
.
.
.
args
)
{
assertEq
(
detached
false
)
;
detachArrayBuffer
(
buffer
(
)
)
;
assertEq
(
detached
false
)
;
detached
=
true
;
return
new
Int32Array
(
.
.
.
args
)
;
}
}
;
if
(
length
=
=
=
0
)
{
typedArray
.
slice
(
0
)
;
}
else
{
assertThrowsInstanceOf
(
(
)
=
>
{
typedArray
.
slice
(
0
)
;
}
TypeError
"
ArrayBuffer
is
detached
in
TypedArraySpeciesCreate
(
.
.
.
)
"
)
;
}
assertEq
(
detached
true
"
detachArrayBuffer
was
called
"
)
;
}
}
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
