var
log
=
"
"
;
function
f
(
)
{
log
+
=
g
(
)
;
function
g
(
)
{
return
"
outer
-
g
"
;
}
var
o
=
{
g
:
function
(
)
{
return
"
with
-
g
"
;
}
}
;
with
(
o
)
{
eval
(
{
function
g
(
)
{
return
"
eval
-
g
"
;
}
}
)
;
}
log
+
=
g
(
)
;
log
+
=
o
.
g
(
)
;
}
f
(
)
;
function
h
(
)
{
eval
(
/
/
Should
return
true
as
var
bindings
introduced
by
eval
are
configurable
.
log
+
=
(
delete
q
)
;
{
function
q
(
)
{
log
+
=
"
q
"
;
}
/
/
Should
return
false
as
lexical
bindings
introduced
by
eval
are
not
/
/
configurable
.
log
+
=
(
delete
q
)
;
}
)
;
return
q
;
}
h
(
)
(
)
;
function
f2
(
)
{
eval
(
"
{
function
a
(
)
{
}
}
"
)
;
const
a
=
1
;
}
function
f3
(
)
{
eval
(
"
{
function
a
(
)
{
}
}
"
)
;
let
a
;
}
reportCompare
(
log
"
outer
-
geval
-
gwith
-
gtruefalseq
"
)
;
