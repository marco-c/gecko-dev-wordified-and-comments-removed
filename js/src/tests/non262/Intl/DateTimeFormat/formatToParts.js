const
{
Era
Year
Month
Weekday
Day
DayPeriod
Hour
Minute
Second
Literal
}
=
DateTimeFormatParts
var
format
;
var
date
=
Date
.
UTC
(
2012
11
17
3
0
42
)
;
format
=
new
Intl
.
DateTimeFormat
(
"
en
-
us
"
{
timeZone
:
"
UTC
"
}
)
;
assertParts
(
format
date
[
Month
(
"
12
"
)
Literal
(
"
/
"
)
Day
(
"
17
"
)
Literal
(
"
/
"
)
Year
(
"
2012
"
)
]
)
;
format
=
new
Intl
.
DateTimeFormat
(
"
en
-
us
"
{
year
:
'
numeric
'
month
:
'
numeric
'
day
:
'
numeric
'
timeZone
:
"
UTC
"
}
)
;
assertParts
(
format
date
[
Month
(
"
12
"
)
Literal
(
"
/
"
)
Day
(
"
17
"
)
Literal
(
"
/
"
)
Year
(
"
2012
"
)
]
)
;
format
=
new
Intl
.
DateTimeFormat
(
"
en
-
us
"
{
hour
:
'
numeric
'
minute
:
'
numeric
'
second
:
'
numeric
'
hour12
:
false
timeZone
:
"
UTC
"
}
)
;
assertParts
(
format
date
[
Hour
(
"
03
"
)
Literal
(
"
:
"
)
Minute
(
"
00
"
)
Literal
(
"
:
"
)
Second
(
"
42
"
)
]
)
;
format
=
new
Intl
.
DateTimeFormat
(
"
en
-
us
"
{
hour
:
'
numeric
'
minute
:
'
numeric
'
second
:
'
numeric
'
hour12
:
true
timeZone
:
"
UTC
"
}
)
;
assertParts
(
format
date
[
Hour
(
"
3
"
)
Literal
(
"
:
"
)
Minute
(
"
00
"
)
Literal
(
"
:
"
)
Second
(
"
42
"
)
Literal
(
"
"
)
DayPeriod
(
"
AM
"
)
]
)
;
format
=
new
Intl
.
DateTimeFormat
(
"
en
-
us
"
{
month
:
"
narrow
"
timeZone
:
"
UTC
"
}
)
;
assertParts
(
format
date
[
Month
(
"
D
"
)
]
)
;
format
=
new
Intl
.
DateTimeFormat
(
"
en
-
us
"
{
weekday
:
"
narrow
"
timeZone
:
"
UTC
"
}
)
;
assertParts
(
format
date
[
Weekday
(
"
M
"
)
]
)
;
format
=
new
Intl
.
DateTimeFormat
(
"
en
-
us
"
{
year
:
"
numeric
"
era
:
"
short
"
timeZone
:
"
UTC
"
}
)
;
assertParts
(
format
date
[
Year
(
"
2012
"
)
Literal
(
"
"
)
Era
(
"
AD
"
)
]
)
;
format
=
new
Intl
.
DateTimeFormat
(
"
en
-
us
"
{
weekday
:
'
long
'
year
:
'
numeric
'
month
:
'
numeric
'
day
:
'
numeric
'
hour
:
'
numeric
'
minute
:
'
numeric
'
second
:
'
numeric
'
hour12
:
true
timeZone
:
"
UTC
"
}
)
;
assertParts
(
format
date
[
Weekday
(
"
Monday
"
)
Literal
(
"
"
)
Month
(
"
12
"
)
Literal
(
"
/
"
)
Day
(
"
17
"
)
Literal
(
"
/
"
)
Year
(
"
2012
"
)
Literal
(
"
"
)
Hour
(
"
3
"
)
Literal
(
"
:
"
)
Minute
(
"
00
"
)
Literal
(
"
:
"
)
Second
(
"
42
"
)
Literal
(
"
"
)
DayPeriod
(
"
AM
"
)
]
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
0
0
'
ok
'
)
;
