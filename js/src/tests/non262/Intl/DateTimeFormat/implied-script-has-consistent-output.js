if
(
typeof
getAvailableLocalesOf
=
=
=
"
undefined
"
)
{
var
getAvailableLocalesOf
=
SpecialPowers
.
Cu
.
getJSTestingFunctions
(
)
.
getAvailableLocalesOf
;
}
const
available
=
getAvailableLocalesOf
(
"
DateTimeFormat
"
)
;
const
options
=
[
{
hour
:
"
2
-
digit
"
minute
:
"
2
-
digit
"
timeZone
:
"
UTC
"
}
{
timeZoneName
:
"
long
"
timeZone
:
"
America
/
Los_Angeles
"
}
]
;
const
date
=
Date
.
UTC
(
2021
6
-
1
7
15
0
)
;
available
.
map
(
x
=
>
{
return
new
Intl
.
Locale
(
x
)
;
}
)
.
filter
(
loc
=
>
{
return
loc
.
script
&
&
loc
.
region
;
}
)
.
forEach
(
loc
=
>
{
let
noScript
=
new
Intl
.
Locale
(
{
loc
.
language
}
-
{
loc
.
region
}
)
;
let
maximized
=
noScript
.
maximize
(
)
;
for
(
let
opt
of
options
)
{
let
df1
=
new
Intl
.
DateTimeFormat
(
noScript
options
)
;
let
df2
=
new
Intl
.
DateTimeFormat
(
maximized
options
)
;
assertEq
(
df1
.
format
(
date
)
df2
.
format
(
date
)
Mismatch
for
locale
"
{
noScript
}
"
)
;
}
}
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
0
0
"
ok
"
)
;
