{
let
dtf
=
new
Intl
.
DateTimeFormat
(
"
zh
"
{
month
:
"
narrow
"
day
:
"
2
-
digit
"
timeZone
:
"
UTC
"
}
)
;
assertEq
(
dtf
.
formatRange
(
0
0
)
dtf
.
format
(
0
)
)
;
}
{
let
dtf
=
new
Intl
.
DateTimeFormat
(
"
en
"
{
dateStyle
:
"
full
"
timeStyle
:
"
full
"
}
)
;
assertEq
(
dtf
.
formatRange
(
0
0
)
dtf
.
format
(
0
)
)
;
}
{
let
dtf
=
new
Intl
.
DateTimeFormat
(
"
en
-
u
-
hc
-
h24
"
{
hour
:
"
2
-
digit
"
timeZone
:
"
UTC
"
}
)
;
assertEq
(
dtf
.
formatRange
(
0
0
)
dtf
.
format
(
0
)
)
;
}
{
let
dtf
=
new
Intl
.
DateTimeFormat
(
"
en
"
{
hourCycle
:
"
h24
"
hour
:
"
2
-
digit
"
timeZone
:
"
UTC
"
}
)
;
assertEq
(
dtf
.
formatRange
(
0
0
)
dtf
.
format
(
0
)
)
;
}
{
let
dt
=
60
*
60
*
1000
;
let
dtf
=
new
Intl
.
DateTimeFormat
(
"
en
-
u
-
hc
-
h11
"
{
hour
:
"
2
-
digit
"
timeZone
:
"
UTC
"
}
)
;
assertEq
(
dtf
.
formatRange
(
dt
dt
)
dtf
.
format
(
dt
)
)
;
}
{
let
dt
=
60
*
60
*
1000
;
let
dtf
=
new
Intl
.
DateTimeFormat
(
"
en
"
{
hourCycle
:
"
h11
"
hour
:
"
2
-
digit
"
timeZone
:
"
UTC
"
}
)
;
assertEq
(
dtf
.
formatRange
(
dt
dt
)
dtf
.
format
(
dt
)
)
;
}
{
let
dtf
=
new
Intl
.
DateTimeFormat
(
"
en
-
001
-
u
-
ca
-
hebrew
"
)
;
assertEq
(
dtf
.
formatRange
(
0
0
)
dtf
.
format
(
0
)
)
;
}
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
0
0
)
;
