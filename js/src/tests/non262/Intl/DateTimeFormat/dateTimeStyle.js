var
dtf
=
new
Intl
.
DateTimeFormat
(
"
en
-
US
"
{
dateStyle
:
'
long
'
}
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
dateStyle
'
long
'
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
year
'
)
false
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
month
'
)
false
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
day
'
)
false
)
;
var
dtf
=
new
Intl
.
DateTimeFormat
(
"
en
-
US
"
{
timeStyle
:
'
long
'
}
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
timeStyle
'
long
'
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
hour
'
)
false
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
minute
'
)
false
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
second
'
)
false
)
;
var
dtf
=
new
Intl
.
DateTimeFormat
(
"
en
-
US
"
{
dateStyle
:
'
medium
'
timeStyle
:
'
medium
'
}
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
timeStyle
'
medium
'
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
dateStyle
'
medium
'
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
hour
'
)
false
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
minute
'
)
false
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
second
'
)
false
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
year
'
)
false
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
month
'
)
false
)
;
assertEq
(
dtf
.
resolvedOptions
(
)
.
hasOwnProperty
(
'
day
'
)
false
)
;
assertThrowsInstanceOf
(
(
)
=
>
{
new
Intl
.
DateTimeFormat
(
"
en
-
US
"
{
dateStyle
:
'
medium
'
year
:
'
numeric
'
}
)
;
}
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
{
new
Intl
.
DateTimeFormat
(
"
en
-
US
"
{
timeStyle
:
'
medium
'
year
:
'
numeric
'
}
)
;
}
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
{
new
Date
(
)
.
toLocaleTimeString
(
"
en
-
US
"
{
dateStyle
:
'
long
'
}
)
;
}
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
{
new
Date
(
)
.
toLocaleDateString
(
"
en
-
US
"
{
timeStyle
:
'
long
'
}
)
;
}
TypeError
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
0
0
'
ok
'
)
;
