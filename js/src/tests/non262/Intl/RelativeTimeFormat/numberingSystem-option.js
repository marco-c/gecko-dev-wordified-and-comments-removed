const
defaultLocale
=
"
en
"
;
const
defaultNumberingSystem
=
new
Intl
.
RelativeTimeFormat
(
defaultLocale
)
.
resolvedOptions
(
)
.
numberingSystem
;
function
createWithLocale
(
locale
numberingSystem
)
{
return
new
Intl
.
RelativeTimeFormat
(
locale
{
numberingSystem
}
)
;
}
function
create
(
numberingSystem
)
{
return
createWithLocale
(
defaultLocale
numberingSystem
)
;
}
assertThrowsInstanceOf
(
(
)
=
>
create
(
"
"
)
RangeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
create
(
"
latn
\
0
"
)
RangeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
create
(
"
a
"
)
RangeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
create
(
"
toolongstring
"
)
RangeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
create
(
"
latn
-
toolongstring
"
)
RangeError
)
;
let
nf
=
create
(
undefined
)
;
assertEq
(
nf
.
resolvedOptions
(
)
.
numberingSystem
defaultNumberingSystem
)
;
nf
=
create
(
"
xxxxxxxx
"
)
;
assertEq
(
nf
.
resolvedOptions
(
)
.
numberingSystem
defaultNumberingSystem
)
;
nf
=
createWithLocale
(
{
defaultLocale
}
-
u
-
nu
-
thai
"
arab
"
)
;
assertEq
(
nf
.
resolvedOptions
(
)
.
locale
defaultLocale
)
;
assertEq
(
nf
.
resolvedOptions
(
)
.
numberingSystem
"
arab
"
)
;
nf
=
create
(
"
ARAB
"
)
;
assertEq
(
nf
.
resolvedOptions
(
)
.
locale
defaultLocale
)
;
assertEq
(
nf
.
resolvedOptions
(
)
.
numberingSystem
"
arab
"
)
;
for
(
let
[
numberingSystem
{
algorithmic
}
]
of
Object
.
entries
(
numberingSystems
)
)
{
let
nf1
=
new
Intl
.
RelativeTimeFormat
(
{
defaultLocale
}
-
u
-
nu
-
{
numberingSystem
}
)
;
let
nf2
=
new
Intl
.
RelativeTimeFormat
(
defaultLocale
{
numberingSystem
}
)
;
if
(
!
algorithmic
)
{
assertEq
(
nf1
.
resolvedOptions
(
)
.
numberingSystem
numberingSystem
)
;
assertEq
(
nf2
.
resolvedOptions
(
)
.
numberingSystem
numberingSystem
)
;
}
else
{
assertEq
(
nf1
.
resolvedOptions
(
)
.
numberingSystem
defaultNumberingSystem
)
;
assertEq
(
nf2
.
resolvedOptions
(
)
.
numberingSystem
defaultNumberingSystem
)
;
}
assertEq
(
nf2
.
format
(
0
"
second
"
)
nf1
.
format
(
0
"
second
"
)
)
;
}
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
