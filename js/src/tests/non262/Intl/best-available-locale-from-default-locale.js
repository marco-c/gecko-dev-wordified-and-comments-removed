if
(
typeof
getDefaultLocale
=
=
=
"
undefined
"
)
{
var
getDefaultLocale
=
SpecialPowers
.
Cu
.
getJSTestingFunctions
(
)
.
getDefaultLocale
;
}
if
(
typeof
setDefaultLocale
=
=
=
"
undefined
"
)
{
var
setDefaultLocale
=
SpecialPowers
.
Cu
.
getJSTestingFunctions
(
)
.
setDefaultLocale
;
}
let
defaultLocale
=
null
;
function
withLocale
(
locale
fn
)
{
if
(
defaultLocale
=
=
=
null
)
defaultLocale
=
getDefaultLocale
(
)
;
setDefaultLocale
(
locale
)
;
try
{
fn
(
)
;
}
finally
{
setDefaultLocale
(
defaultLocale
)
;
}
}
const
supported
=
Intl
.
Collator
.
supportedLocalesOf
(
"
az
"
)
;
assertEq
(
supported
.
length
1
)
;
assertEq
(
supported
[
0
]
"
az
"
)
;
withLocale
(
"
az
"
(
)
=
>
{
assertEq
(
new
Intl
.
Collator
(
)
.
resolvedOptions
(
)
.
locale
"
az
"
)
;
assertEq
(
new
Intl
.
Collator
(
"
az
"
)
.
resolvedOptions
(
)
.
locale
"
az
"
)
;
assertEq
(
new
Intl
.
Collator
(
"
az
-
Cyrl
"
)
.
resolvedOptions
(
)
.
locale
"
az
"
)
;
assertEq
(
new
Intl
.
Collator
(
"
az
-
Cyrl
-
AZ
"
)
.
resolvedOptions
(
)
.
locale
"
az
"
)
;
}
)
;
withLocale
(
"
az
-
Cyrl
-
AZ
"
(
)
=
>
{
assertEq
(
new
Intl
.
Collator
(
)
.
resolvedOptions
(
)
.
locale
"
az
-
Cyrl
-
AZ
"
)
;
assertEq
(
new
Intl
.
Collator
(
"
az
"
)
.
resolvedOptions
(
)
.
locale
"
az
"
)
;
assertEq
(
new
Intl
.
Collator
(
"
az
-
Cyrl
"
)
.
resolvedOptions
(
)
.
locale
"
az
-
Cyrl
"
)
;
assertEq
(
new
Intl
.
Collator
(
"
az
-
Cyrl
-
AZ
"
)
.
resolvedOptions
(
)
.
locale
"
az
-
Cyrl
-
AZ
"
)
;
}
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
0
0
)
;
