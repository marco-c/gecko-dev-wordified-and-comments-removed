function
mustReject
(
tag
)
{
assertThrowsInstanceOf
(
(
)
=
>
{
new
Intl
.
Locale
(
tag
)
;
}
RangeError
tag
"
{
tag
}
"
must
be
considered
structurally
invalid
)
;
}
mustReject
(
"
en
-
emodeng
-
emodeng
"
)
;
mustReject
(
"
en
-
Emodeng
-
emodeng
"
)
;
mustReject
(
"
en
-
emodeng
-
Emodeng
"
)
;
mustReject
(
"
en
-
variant
-
emodeng
-
emodeng
"
)
;
mustReject
(
"
en
-
variant
-
Emodeng
-
emodeng
"
)
;
mustReject
(
"
en
-
variant
-
emodeng
-
Emodeng
"
)
;
mustReject
(
"
en
-
emodeng
-
variant
-
emodeng
"
)
;
mustReject
(
"
en
-
Emodeng
-
variant
-
emodeng
"
)
;
mustReject
(
"
en
-
emodeng
-
variant
-
Emodeng
"
)
;
mustReject
(
"
en
-
emodeng
-
emodeng
-
variant
"
)
;
mustReject
(
"
en
-
Emodeng
-
emodeng
-
variant
"
)
;
mustReject
(
"
en
-
emodeng
-
Emodeng
-
variant
"
)
;
mustReject
(
"
de
-
t
-
en
-
emodeng
-
emodeng
"
)
;
mustReject
(
"
de
-
t
-
en
-
Emodeng
-
emodeng
"
)
;
mustReject
(
"
de
-
t
-
en
-
emodeng
-
Emodeng
"
)
;
mustReject
(
"
de
-
t
-
en
-
variant
-
emodeng
-
emodeng
"
)
;
mustReject
(
"
de
-
t
-
en
-
variant
-
Emodeng
-
emodeng
"
)
;
mustReject
(
"
de
-
t
-
en
-
variant
-
emodeng
-
Emodeng
"
)
;
mustReject
(
"
de
-
t
-
en
-
emodeng
-
variant
-
emodeng
"
)
;
mustReject
(
"
de
-
t
-
en
-
Emodeng
-
variant
-
emodeng
"
)
;
mustReject
(
"
de
-
t
-
en
-
emodeng
-
variant
-
Emodeng
"
)
;
mustReject
(
"
de
-
t
-
en
-
emodeng
-
emodeng
-
variant
"
)
;
mustReject
(
"
de
-
t
-
en
-
Emodeng
-
emodeng
-
variant
"
)
;
mustReject
(
"
de
-
t
-
en
-
emodeng
-
Emodeng
-
variant
"
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
