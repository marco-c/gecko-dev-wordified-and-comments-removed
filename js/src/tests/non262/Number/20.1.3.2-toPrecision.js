var
BUGNUMBER
=
818617
;
var
summary
=
"
ECMAScript
2017
Draft
ECMA
-
262
Section
20
.
1
.
3
.
5
:
Number
.
prototype
.
toPrecision
"
;
print
(
BUGNUMBER
+
"
:
"
+
summary
)
;
assertEq
(
Number
.
prototype
.
toPrecision
.
call
(
NaN
555
)
'
NaN
'
)
;
assertEq
(
Number
.
prototype
.
toPrecision
.
call
(
NaN
5
)
'
NaN
'
)
;
assertEq
(
Number
.
prototype
.
toPrecision
.
call
(
Infinity
555
)
'
Infinity
'
)
;
assertEq
(
Number
.
prototype
.
toPrecision
.
call
(
Infinity
5
)
'
Infinity
'
)
;
assertEq
(
Number
.
prototype
.
toPrecision
.
call
(
-
Infinity
555
)
'
-
Infinity
'
)
;
assertEq
(
Number
.
prototype
.
toPrecision
.
call
(
-
Infinity
5
)
'
-
Infinity
'
)
;
let
x
=
10
;
assertEq
(
Number
.
prototype
.
toPrecision
.
call
(
NaN
{
valueOf
(
)
{
x
=
20
;
return
1
;
}
}
)
'
NaN
'
)
;
assertEq
(
x
20
)
;
assertThrowsValue
(
(
)
=
>
Number
.
prototype
.
toPrecision
.
call
(
NaN
{
valueOf
(
)
{
throw
"
hello
"
;
}
}
)
"
hello
"
)
;
assertThrowsInstanceOf
(
(
)
=
>
Number
.
prototype
.
toPrecision
.
call
(
"
Hello
"
)
TypeError
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
{
reportCompare
(
true
true
)
;
}
