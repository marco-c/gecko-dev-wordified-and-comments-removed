assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
'
1
'
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
null
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
undefined
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
{
}
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
[
]
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
true
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
Symbol
(
)
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
'
1
'
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
null
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
undefined
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
{
}
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
[
]
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
true
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
Symbol
(
)
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
10
'
1
'
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
10
true
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
10
Symbol
(
)
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
NaN
)
RangeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
NaN
)
RangeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
Infinity
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
10
NaN
)
RangeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
10
Infinity
)
RangeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
10
0
)
RangeError
)
;
Iterator
.
range
(
0
0
0
)
;
Iterator
.
range
(
0
10
{
step
:
2
}
)
;
Iterator
.
range
(
0
10
{
step
:
-
1
}
)
;
Iterator
.
range
(
0
10
{
inclusiveEnd
:
true
}
)
;
assertThrowsInstanceOf
(
(
)
=
>
Iterator
.
range
(
0
10
{
step
:
'
2
'
}
)
TypeError
)
;
Iterator
.
range
(
0
10
)
;
Iterator
.
range
(
0
10
2
)
;
if
(
typeof
reportCompare
=
=
=
'
function
'
)
{
reportCompare
(
0
0
)
;
}
