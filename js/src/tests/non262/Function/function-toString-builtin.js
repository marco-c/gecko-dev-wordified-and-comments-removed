var
propertyName
=
[
"
\
\
w
+
"
"
(
?
:
'
[
^
'
]
*
'
)
"
"
(
?
:
\
"
[
^
\
"
]
*
\
"
)
"
"
\
\
d
+
"
"
(
?
:
\
\
[
[
^
\
\
]
]
+
\
\
]
)
"
]
.
join
(
"
|
"
)
var
nativeCode
=
RegExp
(
[
"
^
"
"
function
"
"
(
get
|
set
)
?
"
(
"
(
"
+
propertyName
+
"
)
?
"
)
"
\
\
(
"
"
\
\
)
"
"
\
\
{
"
"
\
\
[
native
code
\
\
]
"
"
\
\
}
"
"
"
]
.
join
(
"
\
\
s
*
"
)
)
;
reportMatch
(
nativeCode
function
(
)
{
}
.
bind
(
)
.
toString
(
)
)
;
reportMatch
(
nativeCode
function
fn
(
)
{
}
.
bind
(
)
.
toString
(
)
)
;
reportMatch
(
nativeCode
Array
.
toString
(
)
)
;
reportMatch
(
nativeCode
Object
.
prototype
.
toString
.
toString
(
)
)
;
reportMatch
(
nativeCode
decodeURI
.
toString
(
)
)
;
reportMatch
(
nativeCode
Math
.
asin
.
toString
(
)
)
;
reportMatch
(
nativeCode
String
.
prototype
.
blink
.
toString
(
)
)
;
reportMatch
(
nativeCode
RegExp
.
prototype
[
Symbol
.
split
]
.
toString
(
)
)
;
reportMatch
(
nativeCode
Object
.
getOwnPropertyDescriptor
(
RegExp
.
prototype
"
flags
"
)
.
get
.
toString
(
)
)
;
reportMatch
(
nativeCode
Object
.
getOwnPropertyDescriptor
(
Object
.
prototype
"
__proto__
"
)
.
get
.
toString
(
)
)
;
reportMatch
(
nativeCode
Object
.
getOwnPropertyDescriptor
(
Object
.
prototype
"
__proto__
"
)
.
set
.
toString
(
)
)
;
