let
superArrow
;
let
thisArrow
;
let
thisStash
;
class
base
{
constructor
(
)
{
if
(
!
thisStash
)
thisStash
=
{
prop
:
45
}
;
return
thisStash
;
}
}
class
foo
extends
base
{
constructor
(
)
{
superArrow
=
(
(
)
=
>
super
(
)
)
;
thisArrow
=
(
)
=
>
this
;
}
}
assertThrowsInstanceOf
(
(
)
=
>
new
foo
(
)
ReferenceError
)
;
assertThrowsInstanceOf
(
thisArrow
ReferenceError
)
;
superArrow
(
)
;
assertThrowsInstanceOf
(
superArrow
ReferenceError
)
;
assertEq
(
thisArrow
(
)
thisStash
)
;
if
(
typeof
reportCompare
=
=
=
'
function
'
)
reportCompare
(
0
0
"
OK
"
)
;
