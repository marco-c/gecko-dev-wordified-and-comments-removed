async
function
*
gen
(
)
{
}
const
iter
=
gen
(
)
;
const
methods
=
[
value
=
>
iter
.
take
(
value
)
value
=
>
iter
.
drop
(
value
)
]
;
const
objectWithToPrimitive
=
{
[
Symbol
.
toPrimitive
]
(
)
{
return
{
}
;
}
}
;
for
(
const
method
of
methods
)
{
assertThrowsInstanceOf
(
(
)
=
>
method
(
0n
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
method
(
Symbol
(
'
'
)
)
TypeError
)
;
assertThrowsInstanceOf
(
(
)
=
>
method
(
objectWithToPrimitive
)
TypeError
)
;
}
if
(
typeof
reportCompare
=
=
'
function
'
)
reportCompare
(
0
0
)
;
