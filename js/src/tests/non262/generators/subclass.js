const
GeneratorFunction
=
function
*
(
)
{
}
.
constructor
;
class
MyGen
extends
GeneratorFunction
{
}
assertEq
(
Object
.
getPrototypeOf
(
MyGen
)
GeneratorFunction
)
;
assertEq
(
Object
.
getPrototypeOf
(
MyGen
.
prototype
)
GeneratorFunction
.
prototype
)
;
var
fn
=
new
MyGen
(
"
yield
*
[
1
2
3
]
"
)
;
assertEq
(
Object
.
getPrototypeOf
(
fn
)
MyGen
.
prototype
)
;
assertEq
(
Object
.
getPrototypeOf
(
fn
.
prototype
)
GeneratorFunction
.
prototype
.
prototype
)
;
var
it
=
fn
(
)
;
assertEq
(
Object
.
getPrototypeOf
(
it
)
fn
.
prototype
)
;
assertEqArray
(
[
.
.
.
it
]
[
1
2
3
]
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
0
0
)
;
