const
locales
=
[
"
en
"
"
de
"
"
fr
"
"
es
"
"
ar
"
"
th
"
"
zh
"
"
ja
"
]
;
const
options
=
[
{
month
:
"
long
"
}
{
month
:
"
numeric
"
day
:
"
numeric
"
}
]
;
const
dateStyles
=
[
"
full
"
"
long
"
"
medium
"
"
short
"
]
;
const
dateStyleToOptions
=
{
full
:
{
month
:
"
long
"
day
:
"
numeric
"
}
long
:
{
month
:
"
long
"
day
:
"
numeric
"
}
medium
:
{
month
:
"
short
"
day
:
"
numeric
"
}
short
:
{
month
:
"
numeric
"
day
:
"
numeric
"
}
overrides
:
{
de
:
{
medium
:
{
month
:
"
2
-
digit
"
day
:
"
2
-
digit
"
}
short
:
{
month
:
"
2
-
digit
"
day
:
"
2
-
digit
"
}
}
ar
:
{
medium
:
{
month
:
"
2
-
digit
"
day
:
"
2
-
digit
"
}
}
zh
:
{
full
:
{
month
:
"
numeric
"
day
:
"
numeric
"
}
long
:
{
month
:
"
numeric
"
day
:
"
numeric
"
}
medium
:
{
month
:
"
numeric
"
day
:
"
numeric
"
}
}
ja
:
{
full
:
{
month
:
"
numeric
"
day
:
"
numeric
"
}
long
:
{
month
:
"
numeric
"
day
:
"
numeric
"
}
medium
:
{
month
:
"
2
-
digit
"
day
:
"
2
-
digit
"
}
short
:
{
month
:
"
2
-
digit
"
day
:
"
2
-
digit
"
}
}
}
}
;
const
timeZone
=
"
UTC
"
;
let
date
=
new
Date
(
0
)
;
let
instant
=
date
.
toTemporalInstant
(
)
;
let
zonedDateTime
=
instant
.
toZonedDateTimeISO
(
timeZone
)
;
let
plainDate
=
zonedDateTime
.
toPlainDate
(
)
;
for
(
let
locale
of
locales
)
{
let
calendar
=
new
Intl
.
DateTimeFormat
(
locale
)
.
resolvedOptions
(
)
.
calendar
;
let
plainMonthDay
=
plainDate
.
withCalendar
(
calendar
)
.
toPlainMonthDay
(
)
;
for
(
let
opts
of
options
)
{
let
expected
=
date
.
toLocaleDateString
(
locale
{
timeZone
.
.
.
opts
}
)
;
assertEq
(
plainMonthDay
.
toLocaleString
(
locale
{
timeZone
.
.
.
opts
}
)
expected
)
;
}
for
(
let
dateStyle
of
dateStyles
)
{
let
opts
=
dateStyleToOptions
.
overrides
[
locale
]
?
.
[
dateStyle
]
?
?
dateStyleToOptions
[
dateStyle
]
;
assertEq
(
plainMonthDay
.
toLocaleString
(
locale
{
timeZone
dateStyle
}
)
date
.
toLocaleDateString
(
locale
{
timeZone
.
.
.
opts
}
)
l
=
{
locale
}
s
=
{
dateStyle
}
o
=
{
JSON
.
stringify
(
opts
)
}
)
;
}
}
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
