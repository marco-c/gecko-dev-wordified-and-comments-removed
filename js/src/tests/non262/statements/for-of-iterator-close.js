function
test
(
)
{
var
returnCalled
=
0
;
var
returnCalledExpected
=
0
;
var
iterable
=
{
}
;
iterable
[
Symbol
.
iterator
]
=
makeIterator
(
{
ret
:
function
(
)
{
returnCalled
+
+
;
return
{
}
;
}
}
)
;
function
throwlhs
(
)
{
throw
"
in
lhs
"
;
}
assertThrowsValue
(
function
(
)
{
for
(
(
throwlhs
(
)
)
of
iterable
)
continue
;
}
"
in
lhs
"
)
;
assertEq
(
returnCalled
+
+
returnCalledExpected
)
;
}
test
(
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
0
0
)
;
