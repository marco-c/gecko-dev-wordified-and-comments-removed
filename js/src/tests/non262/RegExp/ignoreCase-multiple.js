var
BUGNUMBER
=
1280046
;
var
summary
=
"
ignoreCase
match
should
perform
Canonicalize
both
on
input
and
pattern
.
"
;
print
(
BUGNUMBER
+
"
:
"
+
summary
)
;
var
pairs
=
[
[
"
\
u00B5
"
"
\
u039C
"
"
\
u03BC
"
]
[
"
\
u0345
"
"
\
u0399
"
"
\
u03B9
"
]
[
"
\
u03C2
"
"
\
u03A3
"
"
\
u03C3
"
]
[
"
\
u03D0
"
"
\
u0392
"
"
\
u03B2
"
]
[
"
\
u03D1
"
"
\
u0398
"
"
\
u03B8
"
]
[
"
\
u03D5
"
"
\
u03A6
"
"
\
u03C6
"
]
[
"
\
u03D6
"
"
\
u03A0
"
"
\
u03C0
"
]
[
"
\
u03F0
"
"
\
u039A
"
"
\
u03BA
"
]
[
"
\
u03F1
"
"
\
u03A1
"
"
\
u03C1
"
]
[
"
\
u03F5
"
"
\
u0395
"
"
\
u03B5
"
]
[
"
\
u1E9B
"
"
\
u1E60
"
"
\
u1E61
"
]
[
"
\
u1FBE
"
"
\
u0399
"
"
\
u03B9
"
]
]
;
for
(
var
[
code1
upper
code2
]
of
pairs
)
{
assertEq
(
new
RegExp
(
code1
"
i
"
)
.
test
(
code2
)
true
)
;
assertEq
(
new
RegExp
(
code1
"
i
"
)
.
test
(
upper
)
true
)
;
assertEq
(
new
RegExp
(
upper
"
i
"
)
.
test
(
code1
)
true
)
;
assertEq
(
new
RegExp
(
upper
"
i
"
)
.
test
(
code2
)
true
)
;
assertEq
(
new
RegExp
(
code2
"
i
"
)
.
test
(
code1
)
true
)
;
assertEq
(
new
RegExp
(
code2
"
i
"
)
.
test
(
upper
)
true
)
;
}
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
