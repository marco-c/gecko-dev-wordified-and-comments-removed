assertEq
(
Tuple
.
of
(
)
#
[
]
)
;
assertEq
(
Tuple
.
of
(
undefined
)
#
[
undefined
]
)
;
assertEq
(
Tuple
.
of
(
null
)
#
[
null
]
)
;
assertEq
(
Tuple
.
of
(
1
)
#
[
1
]
)
;
assertEq
(
Tuple
.
of
(
1
2
)
#
[
1
2
]
)
;
assertEq
(
Tuple
.
of
(
true
5
"
monkeys
"
#
[
3
4
]
)
#
[
true
5
"
monkeys
"
#
[
3
4
]
]
)
;
assertEq
(
Tuple
.
of
(
undefined
false
null
undefined
)
#
[
undefined
false
null
undefined
]
)
;
assertThrowsInstanceOf
(
(
)
=
>
Tuple
.
of
(
[
1
2
3
]
)
TypeError
"
Tuple
can
'
t
contain
Object
"
)
;
assertThrowsInstanceOf
(
(
)
=
>
Tuple
.
of
(
[
]
)
TypeError
"
Tuple
can
'
t
contain
Object
"
)
;
assertThrowsInstanceOf
(
(
)
=
>
Tuple
.
of
(
new
Object
(
)
[
1
2
3
]
new
String
(
"
a
"
)
)
TypeError
"
Tuple
can
'
t
contain
Object
"
)
;
reportCompare
(
0
0
)
;
