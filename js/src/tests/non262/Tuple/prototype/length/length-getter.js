let
TuplePrototype
=
Tuple
.
prototype
;
let
desc
=
Object
.
getOwnPropertyDescriptor
(
TuplePrototype
"
length
"
)
;
assertEq
(
typeof
desc
.
get
"
function
"
)
;
assertEq
(
desc
.
enumerable
false
)
;
assertEq
(
desc
.
configurable
true
)
;
assertEq
(
desc
.
set
undefined
)
;
let
values
=
[
[
#
[
1
2
3
]
3
]
[
#
[
1
]
1
]
[
#
[
]
0
]
]
;
for
(
pair
of
values
)
{
let
tup
=
pair
[
0
]
;
let
len
=
pair
[
1
]
;
assertEq
(
desc
.
get
.
call
(
tup
)
len
)
;
assertEq
(
desc
.
get
.
call
(
Object
(
tup
)
)
len
)
;
assertEq
(
tup
[
"
length
"
]
len
)
;
}
assertThrowsInstanceOf
(
(
)
=
>
desc
.
get
.
call
(
"
monkeys
"
)
TypeError
"
get
length
method
called
on
incompatible
string
"
)
;
assertThrowsInstanceOf
(
(
)
=
>
desc
.
get
.
call
(
new
Object
(
)
)
TypeError
"
get
length
method
called
on
incompatible
Object
"
)
;
reportCompare
(
0
0
)
;
