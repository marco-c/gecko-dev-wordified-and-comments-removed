(
function
(
)
{
var
{
a
:
yield
}
=
{
a
:
"
yield
-
with
-
name
"
}
;
assertEq
(
yield
"
yield
-
with
-
name
"
)
;
var
{
yield
}
=
{
yield
:
"
yield
-
with
-
shorthand
"
}
;
assertEq
(
yield
"
yield
-
with
-
shorthand
"
)
;
var
{
yield
=
0
}
=
{
yield
:
"
yield
-
with
-
coverinitname
"
}
;
assertEq
(
yield
"
yield
-
with
-
coverinitname
"
)
;
}
)
(
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
var
{
a
:
yield
}
=
{
}
;
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
var
{
yield
}
=
{
}
;
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
var
{
yield
=
0
}
=
{
}
;
}
)
SyntaxError
)
;
(
function
(
)
{
let
{
a
:
yield
}
=
{
a
:
"
yield
-
with
-
name
"
}
;
assertEq
(
yield
"
yield
-
with
-
name
"
)
;
}
)
(
)
;
(
function
(
)
{
let
{
yield
}
=
{
yield
:
"
yield
-
with
-
shorthand
"
}
;
assertEq
(
yield
"
yield
-
with
-
shorthand
"
)
;
}
)
(
)
;
(
function
(
)
{
let
{
yield
=
0
}
=
{
yield
:
"
yield
-
with
-
coverinitname
"
}
;
assertEq
(
yield
"
yield
-
with
-
coverinitname
"
)
;
}
)
(
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
let
{
a
:
yield
}
=
{
}
;
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
let
{
yield
}
=
{
}
;
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
let
{
yield
=
0
}
=
{
}
;
}
)
SyntaxError
)
;
(
function
(
)
{
const
{
a
:
yield
}
=
{
a
:
"
yield
-
with
-
name
"
}
;
assertEq
(
yield
"
yield
-
with
-
name
"
)
;
}
)
(
)
;
(
function
(
)
{
const
{
yield
}
=
{
yield
:
"
yield
-
with
-
shorthand
"
}
;
assertEq
(
yield
"
yield
-
with
-
shorthand
"
)
;
}
)
(
)
;
(
function
(
)
{
const
{
yield
=
0
}
=
{
yield
:
"
yield
-
with
-
coverinitname
"
}
;
assertEq
(
yield
"
yield
-
with
-
coverinitname
"
)
;
}
)
(
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
const
{
a
:
yield
}
=
{
}
;
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
const
{
yield
}
=
{
}
;
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
const
{
yield
=
0
}
=
{
}
;
}
)
SyntaxError
)
;
(
function
(
{
a
:
yield
}
=
{
a
:
"
yield
-
with
-
name
"
}
)
{
assertEq
(
yield
"
yield
-
with
-
name
"
)
;
}
)
(
)
;
(
function
(
{
yield
}
=
{
yield
:
"
yield
-
with
-
shorthand
"
}
)
{
assertEq
(
yield
"
yield
-
with
-
shorthand
"
)
;
}
)
(
)
;
(
function
(
{
yield
=
0
}
=
{
yield
:
"
yield
-
with
-
coverinitname
"
}
)
{
assertEq
(
yield
"
yield
-
with
-
coverinitname
"
)
;
}
)
(
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
{
a
:
yield
}
=
{
}
)
{
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
{
yield
}
=
{
}
)
{
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
{
yield
=
0
}
=
{
}
)
{
}
)
SyntaxError
)
;
(
function
(
)
{
var
a
yield
;
(
{
a
:
yield
}
=
{
a
:
"
yield
-
with
-
name
"
}
)
;
assertEq
(
yield
"
yield
-
with
-
name
"
)
;
(
{
yield
}
=
{
yield
:
"
yield
-
with
-
shorthand
"
}
)
;
assertEq
(
yield
"
yield
-
with
-
shorthand
"
)
;
(
{
yield
=
0
}
=
{
yield
:
"
yield
-
with
-
coverinitname
"
}
)
;
assertEq
(
yield
"
yield
-
with
-
coverinitname
"
)
;
}
)
(
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
(
{
a
:
yield
}
=
{
}
)
;
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
(
{
yield
}
=
{
}
)
;
}
)
SyntaxError
)
;
assertThrowsInstanceOf
(
(
)
=
>
eval
(
"
use
strict
"
;
function
f
(
)
{
(
{
yield
=
0
}
=
{
}
)
;
}
)
SyntaxError
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
0
0
"
ok
"
)
;
