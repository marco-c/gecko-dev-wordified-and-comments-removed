enableExpressionClosures
(
)
;
eval
(
var
ec1
=
function
(
)
0
?
1
:
a
=
>
{
}
;
assertEq
(
typeof
ec1
"
function
"
)
;
assertEq
(
typeof
ec1
(
)
"
function
"
)
;
assertEq
(
ec1
(
)
(
)
undefined
)
;
var
ec2
=
function
(
)
0
?
1
:
a
=
>
{
}
/
/
deliberately
exercise
ASI
here
assertEq
(
typeof
ec2
"
function
"
)
;
assertEq
(
typeof
ec2
(
)
"
function
"
)
;
assertEq
(
ec2
(
)
(
)
undefined
)
;
function
ec3
(
)
0
?
1
:
a
=
>
{
}
/
/
exercise
ASI
here
assertEq
(
typeof
ec3
(
)
"
function
"
)
;
function
ec4
(
)
0
?
1
:
a
=
>
{
}
;
assertEq
(
typeof
ec4
(
)
"
function
"
)
;
var
needle
=
"
"
;
var
x
=
42
;
var
g
=
{
test
(
)
{
assertEq
(
true
false
"
shouldn
'
t
be
called
"
)
;
}
}
;
function
ec5
(
)
0
?
1
:
a
=
>
{
}
/
/
ASI
/
x
/
g
.
test
(
(
needle
=
"
x
"
)
)
;
assertEq
(
needle
"
x
"
)
;
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
