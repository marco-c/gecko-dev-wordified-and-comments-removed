const
tests
=
[
[
"
24
-
Apr
-
2023
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
apr
-
2023
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
April
-
2023
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
APRIL
-
2023
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
2033
"
"
2033
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
0023
"
"
0023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
23
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
33
"
"
2033
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
023
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
2023
-
Apr
-
24
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
2033
-
Apr
-
24
"
"
2033
-
04
-
24T00
:
00
:
00
"
]
[
"
33
-
Apr
-
24
"
"
2033
-
04
-
24T00
:
00
:
00
"
]
[
"
033
-
Apr
-
24
"
"
2033
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
2023
12
:
34
:
56
"
"
2023
-
04
-
24T12
:
34
:
56
"
]
[
"
24
-
Apr
-
2023
Mon
12
:
34
:
56
"
"
2023
-
04
-
24T12
:
34
:
56
"
]
[
"
24
-
Apr
-
2023
(
Mon
)
12
:
34
:
56
"
"
2023
-
04
-
24T12
:
34
:
56
"
]
[
"
24
-
Apr
-
2023
(
Mon
)
12
:
34
:
56
"
"
2023
-
04
-
24T12
:
34
:
56
"
]
[
"
24
-
Apr
-
2023
12
:
34
:
56
"
"
2023
-
04
-
24T12
:
34
:
56
"
]
[
"
24
-
Apr
-
2023
Mon
12
:
34
:
56
"
"
2023
-
04
-
24T12
:
34
:
56
"
]
[
"
24
-
Apr
-
2023
12
:
34
:
56
GMT
"
"
2023
-
04
-
24T12
:
34
:
56Z
"
]
[
"
24
-
Apr
-
2023
12
:
34
:
56
+
04
"
"
2023
-
04
-
24T12
:
34
:
56
+
04
:
00
"
]
[
"
24
-
Apr
-
2023
12
:
34
:
56
+
04
:
30
"
"
2023
-
04
-
24T12
:
34
:
56
+
04
:
30
"
]
[
"
24
-
Apr
-
2023
12
:
34
:
56
-
04
"
"
2023
-
04
-
24T12
:
34
:
56
-
04
:
00
"
]
[
"
24
-
Apr
-
2023
12
:
34
:
56
-
04
:
30
"
"
2023
-
04
-
24T12
:
34
:
56
-
04
:
30
"
]
[
"
24
-
Apr
-
2023
GMT
"
"
2023
-
04
-
24T00
:
00
:
00Z
"
]
[
"
24
-
Apr
-
2023
+
04
"
"
2023
-
04
-
24T00
:
00
:
00
+
04
:
00
"
]
[
"
24
-
Apr
-
2023
+
04
:
30
"
"
2023
-
04
-
24T00
:
00
:
00
+
04
:
30
"
]
[
"
24
-
Apr
-
2023
-
04
"
"
2023
-
04
-
24T00
:
00
:
00
-
04
:
00
"
]
[
"
24
-
Apr
-
2023
-
04
:
30
"
"
2023
-
04
-
24T00
:
00
:
00
-
04
:
30
"
]
[
"
24
-
Apr
-
2023GMT
"
"
2023
-
04
-
24T00
:
00
:
00Z
"
]
[
"
24
-
Apr
-
2023
+
04
"
"
2023
-
04
-
24T00
:
00
:
00
+
04
:
00
"
]
[
"
24
-
Apr
-
2023
+
04
:
30
"
"
2023
-
04
-
24T00
:
00
:
00
+
04
:
30
"
]
[
"
24
-
Apr
-
2023
-
04
"
"
2023
-
04
-
24T00
:
00
:
00
-
04
:
00
"
]
[
"
24
-
Apr
-
2023
-
04
:
30
"
"
2023
-
04
-
24T00
:
00
:
00
-
04
:
30
"
]
[
"
24
-
Apr
-
2023
GMT
"
"
2023
-
04
-
24T00
:
00
:
00Z
"
]
[
"
24
-
Apr
-
2023
+
04
"
"
2023
-
04
-
24T00
:
00
:
00
+
04
:
00
"
]
[
"
24
-
Apr
-
2023
+
04
:
30
"
"
2023
-
04
-
24T00
:
00
:
00
+
04
:
30
"
]
[
"
24
-
Apr
-
2023
-
04
"
"
2023
-
04
-
24T00
:
00
:
00
-
04
:
00
"
]
[
"
24
-
Apr
-
2023
-
04
:
30
"
"
2023
-
04
-
24T00
:
00
:
00
-
04
:
30
"
]
[
"
24
-
Apr
-
2023
/
12
:
34
:
56
"
"
2023
-
04
-
24T12
:
34
:
56
"
]
[
"
24
-
Apr
-
2023
/
GMT
"
"
2023
-
04
-
24T00
:
00
:
00Z
"
]
[
"
24
-
Apr
-
202312
:
13
:
14
"
"
-
202312
-
04
-
24T13
:
14
:
00
"
]
[
"
24
-
Apr
-
2023
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
/
2023
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
/
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
/
Apr
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
/
-
Apr
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
-
(
)
2023
"
"
2023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
Apr
(
)
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
-
(
)
Apr
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
24
(
)
-
Apr
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
024
-
Apr
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
[
"
0024
-
Apr
-
2023
"
"
-
002023
-
04
-
24T00
:
00
:
00
"
]
]
;
for
(
const
[
testString
isoString
]
of
tests
)
{
const
testDate
=
new
Date
(
testString
)
;
const
isoDate
=
new
Date
(
isoString
)
;
assertEq
(
testDate
.
getTime
(
)
isoDate
.
getTime
(
)
testString
)
;
}
const
invalidTests
=
[
"
32
-
01
-
32
"
"
024
-
Apr
-
22
"
"
024
-
Apr
-
023
"
"
2012
-
Apr
-
08
12
/
12
/
12
"
"
2012
-
Apr
-
08T10
:
00
:
00
"
]
;
for
(
const
testString
of
invalidTests
)
{
assertEq
(
Number
.
isNaN
(
new
Date
(
testString
)
.
getTime
(
)
)
true
testString
)
;
}
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
