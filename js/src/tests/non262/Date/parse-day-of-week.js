const
expectedDate
=
new
Date
(
"
1995
-
09
-
26T00
:
00
:
00
"
)
;
const
prefixes
=
[
"
Tuesday
"
"
Tuesday
"
"
Tuesday
"
"
Tuesday
.
"
"
Tuesday
-
"
"
Tuesday
/
"
"
tuesday
"
"
tUeSdAy
"
"
Tuesda
"
"
Tue
"
"
T
"
"
t
"
"
"
"
"
"
"
"
.
"
"
-
"
"
/
"
"
Monday
"
"
foo
bar
"
]
;
const
formats
=
[
"
Sep
26
1995
"
"
26
Sep
1995
"
"
September
26
1995
"
"
26
-
Sep
-
1995
"
"
1995
-
9
-
26
"
"
1995
-
09
-
26
"
"
Sep
foo
bar
26
1995
"
"
Sep
-
foo
bar
-
26
1995
"
"
Sep
-
foo
-
bar
-
26
1995
"
"
Sep
sep
26
1995
"
"
Sep
26
sep
1995
"
"
Jan
26
1995
sep
"
]
;
const
rejected
=
[
"
Sep
26
foo
1995
"
"
Sep
26
1995
foo
"
"
1995
foo
Sep
26
"
"
foo2
Sep
26
1995
"
"
Tuesday_Sep
26
1995
"
"
foo_12
"
]
;
for
(
const
format
of
formats
)
{
for
(
const
prefix
of
prefixes
)
{
const
test
=
prefix
+
format
;
const
testDate
=
new
Date
(
test
)
;
assertEq
(
false
isNaN
(
testDate
)
{
test
}
should
be
accepted
.
)
;
assertEq
(
testDate
.
getTime
(
)
expectedDate
.
getTime
(
)
"
{
test
}
"
should
be
{
expectedDate
}
(
got
{
testDate
}
)
.
)
;
}
}
for
(
const
reject
of
rejected
)
{
assertEq
(
true
isNaN
(
new
Date
(
reject
)
)
"
{
reject
}
"
should
be
rejected
.
)
;
}
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
