inTimeZone
(
"
MST
"
(
)
=
>
{
const
accepted
=
{
"
19999
-
09
-
12
"
:
new
Date
(
19999
Month
.
September
12
)
"
19999
-
9
-
1
"
:
new
Date
(
19999
Month
.
September
1
)
"
19999
-
9
-
1
"
:
new
Date
(
19999
Month
.
September
1
)
"
275760
-
09
-
12
"
:
new
Date
(
275760
Month
.
September
12
)
"
275760
-
09
-
12
17
:
00
:
00
"
:
new
Date
(
275760
Month
.
September
12
17
)
"
19999
-
09
-
12
(
comment
)
23
:
00
:
00
"
:
new
Date
(
19999
Month
.
September
12
23
)
"
19999
-
09
-
12
22
:
00
:
00
GMT
-
0800
"
:
new
Date
(
19999
Month
.
September
12
23
)
"
2021
-
09
-
1
"
:
new
Date
(
2021
Month
.
September
1
)
"
2021
-
9
-
01
"
:
new
Date
(
2021
Month
.
September
1
)
"
2021
-
9
-
1
"
:
new
Date
(
2021
Month
.
September
1
)
"
1
-
09
-
12
"
:
new
Date
(
2012
Month
.
January
9
)
"
1
-
09
-
0012
"
:
new
Date
(
2012
Month
.
January
9
)
"
1
-
09
-
2012
"
:
new
Date
(
2012
Month
.
January
9
)
"
12
-
09
-
12
"
:
new
Date
(
2012
Month
.
December
9
)
"
32
-
09
-
12
"
:
new
Date
(
2032
Month
.
September
12
)
"
49
-
09
-
12
"
:
new
Date
(
2049
Month
.
September
12
)
"
50
-
09
-
12
"
:
new
Date
(
1950
Month
.
September
12
)
"
99
-
09
-
12
"
:
new
Date
(
1999
Month
.
September
12
)
"
0
-
9
-
12
"
:
new
Date
(
2000
Month
.
September
12
)
"
9
-
12
-
0
"
:
new
Date
(
2000
Month
.
September
12
)
"
999
-
09
-
12
"
:
new
Date
(
999
Month
.
September
12
)
"
2020
-
03
-
24
12
:
54
:
40
AM
+
00
:
00
"
:
new
Date
(
2020
Month
.
March
23
17
54
40
)
"
9999
-
09
-
12
:
00
:
01
"
:
new
Date
(
9999
Month
.
September
12
0
1
)
"
9999
-
09
-
12
01
:
:
01
"
:
new
Date
(
9999
Month
.
September
12
1
1
0
)
"
2022
-
02
-
29
"
:
new
Date
(
2022
Month
.
February
28
17
)
"
2022
-
02
-
30
"
:
new
Date
(
2022
Month
.
March
1
17
)
"
2022
-
02
-
31
"
:
new
Date
(
2022
Month
.
March
2
17
)
"
19999
-
9
-
1MST
"
:
new
Date
(
19999
Month
.
September
1
)
"
19999
-
9
-
1GMT
-
07
"
:
new
Date
(
19999
Month
.
September
1
)
"
19999
-
9
-
1
.
10
:
13
:
14
"
:
new
Date
(
19999
Month
.
September
1
10
13
14
)
"
19999
-
9
-
1
10
:
13
:
14
"
:
new
Date
(
19999
Month
.
September
1
10
13
14
)
"
19999
-
9
-
1
-
10
:
13
:
14
"
:
new
Date
(
19999
Month
.
September
1
10
13
14
)
"
19999
-
9
-
1
-
4
:
30
"
:
new
Date
(
19999
Month
.
September
1
4
30
)
"
19999
-
9
-
1
/
10
:
13
:
14
"
:
new
Date
(
19999
Month
.
September
1
10
13
14
)
"
19999
-
9
-
1
(
)
10
:
13
:
14
"
:
new
Date
(
19999
Month
.
September
1
10
13
14
)
"
19999
-
9
-
1
(
10
:
13
:
14
"
:
new
Date
(
19999
Month
.
September
1
)
}
;
const
rejected
=
[
"
275760
-
09
-
12
17
:
00
:
01
"
"
275760
-
09
-
13
"
"
19999
-
09
-
12T00
:
00
:
00
"
"
19999
-
09
-
12
:
00
:
00
:
00
"
"
19999
-
09
-
12
^
00
:
00
:
00
"
"
19999
-
09
-
12
|
00
:
00
:
00
"
"
19999
-
09
-
12
~
00
:
00
:
00
"
"
19999
-
09
-
12
+
00
:
00
:
00
"
"
19999
-
09
-
12
=
00
:
00
:
00
"
"
19999
-
09
-
12
?
00
:
00
:
00
"
"
13
-
09
-
12
"
"
13
-
09
-
2012
"
"
31
-
09
-
12
"
"
31
-
09
-
2012
"
"
32
-
09
-
2012
"
"
2022
-
02
-
32
"
"
2022
-
13
-
30
"
"
0000
-
00
-
00
"
"
0000
-
01
-
00
"
"
0000
-
00
-
01
"
]
;
for
(
const
[
test
dateObject
]
of
Object
.
entries
(
accepted
)
)
{
const
testDate
=
new
Date
(
test
)
;
assertEq
(
false
isNaN
(
testDate
)
{
test
}
should
be
accepted
.
)
;
assertEq
(
testDate
.
getTime
(
)
dateObject
.
getTime
(
)
"
{
test
}
"
should
be
{
dateObject
}
(
got
{
testDate
}
)
.
)
;
}
for
(
const
reject
of
rejected
)
{
assertEq
(
true
isNaN
(
new
Date
(
reject
)
)
"
{
reject
}
"
should
be
rejected
.
)
;
}
}
)
;
if
(
typeof
reportCompare
=
=
=
"
function
"
)
reportCompare
(
true
true
)
;
