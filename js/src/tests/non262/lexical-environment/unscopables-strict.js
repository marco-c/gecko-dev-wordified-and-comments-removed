let
env
=
{
k
:
1
}
;
let
f
;
with
(
env
)
{
f
=
function
(
)
{
"
use
strict
"
;
k
=
2
;
}
;
}
f
(
)
;
assertEq
(
env
.
k
2
)
;
env
[
Symbol
.
unscopables
]
=
{
k
:
true
}
;
assertThrowsInstanceOf
(
f
ReferenceError
)
;
let
g
;
with
(
env
)
{
g
=
function
(
)
{
"
use
strict
"
;
k
=
(
env
[
Symbol
.
unscopables
]
.
k
=
true
3
)
;
}
}
env
[
Symbol
.
unscopables
]
.
k
=
false
;
g
(
)
;
assertEq
(
env
.
k
3
)
;
reportCompare
(
0
0
)
;
