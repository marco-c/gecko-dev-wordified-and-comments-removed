assertThrowsInstanceOf
(
function
(
)
{
eval
(
function
f
(
)
{
let
x
;
try
{
}
catch
(
x
)
{
var
x
;
}
}
)
;
}
SyntaxError
)
;
assertThrowsInstanceOf
(
function
(
)
{
eval
(
function
f
(
)
{
try
{
}
catch
(
x
)
{
let
y
;
var
y
;
}
}
)
;
}
SyntaxError
)
;
assertThrowsInstanceOf
(
function
(
)
{
eval
(
function
f
(
)
{
try
{
}
catch
(
x
)
{
let
x
;
}
}
)
;
}
SyntaxError
)
;
assertThrowsInstanceOf
(
function
(
)
{
eval
(
function
f
(
)
{
try
{
}
catch
(
x
)
{
const
x
;
}
}
)
;
}
SyntaxError
)
;
assertThrowsInstanceOf
(
function
(
)
{
eval
(
let
x
;
try
{
}
catch
(
x
)
{
var
x
;
}
)
;
}
SyntaxError
)
;
var
log
=
'
'
;
var
x
=
'
global
-
x
'
;
function
g
(
)
{
x
=
'
g
'
;
try
{
throw
8
;
}
catch
(
x
)
{
var
x
=
42
;
log
+
=
x
;
}
log
+
=
x
;
}
g
(
)
;
function
h0
(
)
{
try
{
}
catch
(
e
)
{
for
(
var
e
in
{
}
)
;
}
}
h0
(
)
;
function
h1
(
)
{
try
{
}
catch
(
e
)
{
for
(
var
e
;
;
)
;
}
}
h1
(
)
;
function
h2
(
)
{
try
{
}
catch
(
e
)
{
for
(
var
e
of
{
}
)
;
}
}
h2
(
)
;
function
h3
(
)
{
var
e
;
try
{
}
catch
(
e
)
{
var
e
;
}
}
h3
(
)
;
if
(
typeof
evaluate
=
=
=
"
function
"
)
{
assertThrowsInstanceOf
(
function
(
)
{
evaluate
(
let
y
;
try
{
}
catch
(
y
)
{
var
y
;
}
)
;
}
SyntaxError
)
;
}
assertEq
(
log
"
42g
"
)
;
if
(
"
reportCompare
"
in
this
)
reportCompare
(
true
true
)
