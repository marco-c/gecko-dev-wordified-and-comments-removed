var
SECTION
=
'
As
described
in
Netscape
doc
"
Whats
new
in
JavaScript
1
.
2
"
'
;
var
VERSION
=
'
no
version
'
;
var
TITLE
=
'
RegExp
:
ignoreCase
'
;
writeHeaderToLog
(
'
Executing
script
:
ignoreCase
.
js
'
)
;
writeHeaderToLog
(
SECTION
+
"
"
+
TITLE
)
;
new
TestCase
(
"
/
xyz
/
i
.
ignoreCase
"
true
/
xyz
/
i
.
ignoreCase
)
;
new
TestCase
(
"
/
xyz
/
.
ignoreCase
"
false
/
xyz
/
.
ignoreCase
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
/
[
a
-
z
]
+
/
ig
)
"
String
(
[
"
ABC
"
"
def
"
"
ghi
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
/
[
a
-
z
]
+
/
ig
)
)
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
/
[
a
-
z
]
+
/
i
)
"
String
(
[
"
ABC
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
/
[
a
-
z
]
+
/
i
)
)
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
/
(
[
a
-
z
]
+
)
/
ig
)
"
String
(
[
"
ABC
"
"
def
"
"
ghi
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
/
(
[
a
-
z
]
+
)
/
ig
)
)
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
/
(
[
a
-
z
]
+
)
/
i
)
"
String
(
[
"
ABC
"
"
ABC
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
/
(
[
a
-
z
]
+
)
/
i
)
)
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
/
[
a
-
z
]
+
/
)
"
String
(
[
"
def
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
/
[
a
-
z
]
+
/
)
)
)
;
new
TestCase
(
"
(
new
RegExp
(
'
xyz
'
'
i
'
)
)
.
ignoreCase
"
true
(
new
RegExp
(
'
xyz
'
'
i
'
)
)
.
ignoreCase
)
;
new
TestCase
(
"
(
new
RegExp
(
'
xyz
'
)
)
.
ignoreCase
"
false
(
new
RegExp
(
'
xyz
'
)
)
.
ignoreCase
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
[
a
-
z
]
+
'
'
ig
'
)
)
"
String
(
[
"
ABC
"
"
def
"
"
ghi
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
[
a
-
z
]
+
'
'
ig
'
)
)
)
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
[
a
-
z
]
+
'
'
i
'
)
)
"
String
(
[
"
ABC
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
[
a
-
z
]
+
'
'
i
'
)
)
)
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
(
[
a
-
z
]
+
)
'
'
ig
'
)
)
"
String
(
[
"
ABC
"
"
def
"
"
ghi
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
(
[
a
-
z
]
+
)
'
'
ig
'
)
)
)
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
(
[
a
-
z
]
+
)
'
'
i
'
)
)
"
String
(
[
"
ABC
"
"
ABC
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
(
[
a
-
z
]
+
)
'
'
i
'
)
)
)
)
;
new
TestCase
(
"
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
[
a
-
z
]
+
'
)
)
"
String
(
[
"
def
"
]
)
String
(
'
ABC
def
ghi
'
.
match
(
new
RegExp
(
'
[
a
-
z
]
+
'
)
)
)
)
;
test
(
)
;
