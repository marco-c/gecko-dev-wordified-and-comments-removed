var
SECTION
=
"
11
.
6
.
3
"
;
writeHeaderToLog
(
SECTION
+
"
Applying
the
additive
operators
(
+
-
)
to
numbers
"
)
;
new
TestCase
(
"
Number
.
NaN
+
1
"
Number
.
NaN
Number
.
NaN
+
1
)
;
new
TestCase
(
"
1
+
Number
.
NaN
"
Number
.
NaN
1
+
Number
.
NaN
)
;
new
TestCase
(
"
Number
.
NaN
-
1
"
Number
.
NaN
Number
.
NaN
-
1
)
;
new
TestCase
(
"
1
-
Number
.
NaN
"
Number
.
NaN
1
-
Number
.
NaN
)
;
new
TestCase
(
"
Number
.
POSITIVE_INFINITY
+
Number
.
POSITIVE_INFINITY
"
Number
.
POSITIVE_INFINITY
Number
.
POSITIVE_INFINITY
+
Number
.
POSITIVE_INFINITY
)
;
new
TestCase
(
"
Number
.
NEGATIVE_INFINITY
+
Number
.
NEGATIVE_INFINITY
"
Number
.
NEGATIVE_INFINITY
Number
.
NEGATIVE_INFINITY
+
Number
.
NEGATIVE_INFINITY
)
;
new
TestCase
(
"
Number
.
POSITIVE_INFINITY
+
Number
.
NEGATIVE_INFINITY
"
Number
.
NaN
Number
.
POSITIVE_INFINITY
+
Number
.
NEGATIVE_INFINITY
)
;
new
TestCase
(
"
Number
.
NEGATIVE_INFINITY
+
Number
.
POSITIVE_INFINITY
"
Number
.
NaN
Number
.
NEGATIVE_INFINITY
+
Number
.
POSITIVE_INFINITY
)
;
new
TestCase
(
"
Number
.
POSITIVE_INFINITY
-
Number
.
POSITIVE_INFINITY
"
Number
.
NaN
Number
.
POSITIVE_INFINITY
-
Number
.
POSITIVE_INFINITY
)
;
new
TestCase
(
"
Number
.
NEGATIVE_INFINITY
-
Number
.
NEGATIVE_INFINITY
"
Number
.
NaN
Number
.
NEGATIVE_INFINITY
-
Number
.
NEGATIVE_INFINITY
)
;
new
TestCase
(
"
Number
.
POSITIVE_INFINITY
-
Number
.
NEGATIVE_INFINITY
"
Number
.
POSITIVE_INFINITY
Number
.
POSITIVE_INFINITY
-
Number
.
NEGATIVE_INFINITY
)
;
new
TestCase
(
"
Number
.
NEGATIVE_INFINITY
-
Number
.
POSITIVE_INFINITY
"
Number
.
NEGATIVE_INFINITY
Number
.
NEGATIVE_INFINITY
-
Number
.
POSITIVE_INFINITY
)
;
new
TestCase
(
"
-
0
+
-
0
"
-
0
-
0
+
-
0
)
;
new
TestCase
(
"
-
0
-
0
"
-
0
-
0
-
0
)
;
new
TestCase
(
"
0
+
0
"
0
0
+
0
)
;
new
TestCase
(
"
0
+
-
0
"
0
0
+
-
0
)
;
new
TestCase
(
"
0
-
-
0
"
0
0
-
-
0
)
;
new
TestCase
(
"
0
-
0
"
0
0
-
0
)
;
new
TestCase
(
"
-
0
-
-
0
"
0
-
0
-
-
0
)
;
new
TestCase
(
"
-
0
+
0
"
0
-
0
+
0
)
;
new
TestCase
(
"
Number
.
MAX_VALUE
-
Number
.
MAX_VALUE
"
0
Number
.
MAX_VALUE
-
Number
.
MAX_VALUE
)
;
new
TestCase
(
"
1
/
Number
.
MAX_VALUE
-
1
/
Number
.
MAX_VALUE
"
0
1
/
Number
.
MAX_VALUE
-
1
/
Number
.
MAX_VALUE
)
;
new
TestCase
(
"
Number
.
MIN_VALUE
-
Number
.
MIN_VALUE
"
0
Number
.
MIN_VALUE
-
Number
.
MIN_VALUE
)
;
test
(
)
;
