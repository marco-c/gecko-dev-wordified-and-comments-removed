var
SECTION
=
"
11
.
9
.
1
"
;
var
BUGNUMBER
=
"
77391
"
;
printBugNumber
(
BUGNUMBER
)
;
writeHeaderToLog
(
SECTION
+
"
The
equals
operator
(
=
=
)
"
)
;
new
TestCase
(
"
void
0
=
void
0
"
true
void
0
=
=
void
0
)
;
new
TestCase
(
"
null
=
=
null
"
true
null
=
=
null
)
;
new
TestCase
(
"
NaN
=
=
NaN
"
false
Number
.
NaN
=
=
Number
.
NaN
)
;
new
TestCase
(
"
NaN
=
=
0
"
false
Number
.
NaN
=
=
0
)
;
new
TestCase
(
"
0
=
=
NaN
"
false
0
=
=
Number
.
NaN
)
;
new
TestCase
(
"
NaN
=
=
Infinity
"
false
Number
.
NaN
=
=
Number
.
POSITIVE_INFINITY
)
;
new
TestCase
(
"
Infinity
=
=
NaN
"
false
Number
.
POSITIVE_INFINITY
=
=
Number
.
NaN
)
;
new
TestCase
(
"
Number
.
MAX_VALUE
=
=
Number
.
MAX_VALUE
"
true
Number
.
MAX_VALUE
=
=
Number
.
MAX_VALUE
)
;
new
TestCase
(
"
Number
.
MIN_VALUE
=
=
Number
.
MIN_VALUE
"
true
Number
.
MIN_VALUE
=
=
Number
.
MIN_VALUE
)
;
new
TestCase
(
"
Number
.
POSITIVE_INFINITY
=
=
Number
.
POSITIVE_INFINITY
"
true
Number
.
POSITIVE_INFINITY
=
=
Number
.
POSITIVE_INFINITY
)
;
new
TestCase
(
"
Number
.
NEGATIVE_INFINITY
=
=
Number
.
NEGATIVE_INFINITY
"
true
Number
.
NEGATIVE_INFINITY
=
=
Number
.
NEGATIVE_INFINITY
)
;
new
TestCase
(
"
0
=
=
0
"
true
0
=
=
0
)
;
new
TestCase
(
"
0
=
=
-
0
"
true
0
=
=
-
0
)
;
new
TestCase
(
"
-
0
=
=
0
"
true
-
0
=
=
0
)
;
new
TestCase
(
"
-
0
=
=
-
0
"
true
-
0
=
=
-
0
)
;
new
TestCase
(
"
0
.
9
=
=
1
"
false
0
.
9
=
=
1
)
;
new
TestCase
(
"
0
.
999999
=
=
1
"
false
0
.
999999
=
=
1
)
;
new
TestCase
(
"
0
.
9999999999
=
=
1
"
false
0
.
9999999999
=
=
1
)
;
new
TestCase
(
"
0
.
9999999999999
=
=
1
"
false
0
.
9999999999999
=
=
1
)
;
new
TestCase
(
"
'
hello
'
=
=
'
hello
'
"
true
"
hello
"
=
=
"
hello
"
)
;
new
TestCase
(
"
true
=
=
true
"
true
true
=
=
true
)
;
new
TestCase
(
"
false
=
=
false
"
true
false
=
=
false
)
;
new
TestCase
(
"
true
=
=
false
"
false
true
=
=
false
)
;
new
TestCase
(
"
false
=
=
true
"
false
false
=
=
true
)
;
new
TestCase
(
"
new
MyObject
(
true
)
=
=
new
MyObject
(
true
)
"
false
new
MyObject
(
true
)
=
=
new
MyObject
(
true
)
)
;
new
TestCase
(
"
new
Boolean
(
true
)
=
=
new
Boolean
(
true
)
"
false
new
Boolean
(
true
)
=
=
new
Boolean
(
true
)
)
;
new
TestCase
(
"
new
Boolean
(
false
)
=
=
new
Boolean
(
false
)
"
false
new
Boolean
(
false
)
=
=
new
Boolean
(
false
)
)
;
new
TestCase
(
"
x
=
new
MyObject
(
true
)
;
y
=
x
;
z
=
x
;
z
=
=
y
"
true
eval
(
"
x
=
new
MyObject
(
true
)
;
y
=
x
;
z
=
x
;
z
=
=
y
"
)
)
;
new
TestCase
(
"
x
=
new
MyObject
(
false
)
;
y
=
x
;
z
=
x
;
z
=
=
y
"
true
eval
(
"
x
=
new
MyObject
(
false
)
;
y
=
x
;
z
=
x
;
z
=
=
y
"
)
)
;
new
TestCase
(
"
x
=
new
Boolean
(
true
)
;
y
=
x
;
z
=
x
;
z
=
=
y
"
true
eval
(
"
x
=
new
Boolean
(
true
)
;
y
=
x
;
z
=
x
;
z
=
=
y
"
)
)
;
new
TestCase
(
"
x
=
new
Boolean
(
false
)
;
y
=
x
;
z
=
x
;
z
=
=
y
"
true
eval
(
"
x
=
new
Boolean
(
false
)
;
y
=
x
;
z
=
x
;
z
=
=
y
"
)
)
;
new
TestCase
(
"
new
Boolean
(
true
)
=
=
new
Boolean
(
true
)
"
false
new
Boolean
(
true
)
=
=
new
Boolean
(
true
)
)
;
new
TestCase
(
"
new
Boolean
(
false
)
=
=
new
Boolean
(
false
)
"
false
new
Boolean
(
false
)
=
=
new
Boolean
(
false
)
)
;
new
TestCase
(
"
null
=
=
void
0
"
true
null
=
=
void
0
)
;
new
TestCase
(
"
void
0
=
=
null
"
true
void
0
=
=
null
)
;
new
TestCase
(
"
1
=
=
'
1
'
"
true
1
=
=
'
1
'
)
;
new
TestCase
(
"
255
=
=
'
0xff
'
"
true
255
=
=
'
0xff
'
)
;
new
TestCase
(
"
0
=
=
'
\
r
'
"
true
0
=
=
"
\
r
"
)
;
new
TestCase
(
"
1e19
=
=
'
1e19
'
"
true
1e19
=
=
"
1e19
"
)
;
new
TestCase
(
"
new
Boolean
(
true
)
=
=
true
"
true
true
=
=
new
Boolean
(
true
)
)
;
new
TestCase
(
"
new
MyObject
(
true
)
=
=
true
"
true
true
=
=
new
MyObject
(
true
)
)
;
new
TestCase
(
"
new
Boolean
(
false
)
=
=
false
"
true
new
Boolean
(
false
)
=
=
false
)
;
new
TestCase
(
"
new
MyObject
(
false
)
=
=
false
"
true
new
MyObject
(
false
)
=
=
false
)
;
new
TestCase
(
"
true
=
=
new
Boolean
(
true
)
"
true
true
=
=
new
Boolean
(
true
)
)
;
new
TestCase
(
"
true
=
=
new
MyObject
(
true
)
"
true
true
=
=
new
MyObject
(
true
)
)
;
new
TestCase
(
"
false
=
=
new
Boolean
(
false
)
"
true
false
=
=
new
Boolean
(
false
)
)
;
new
TestCase
(
"
false
=
=
new
MyObject
(
false
)
"
true
false
=
=
new
MyObject
(
false
)
)
;
test
(
)
;
function
MyObject
(
value
)
{
this
.
value
=
value
;
this
.
valueOf
=
new
Function
(
"
return
this
.
value
"
)
;
}
