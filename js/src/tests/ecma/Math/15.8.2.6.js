var
SECTION
=
"
15
.
8
.
2
.
6
"
;
var
TITLE
=
"
Math
.
ceil
(
x
)
"
;
writeHeaderToLog
(
SECTION
+
"
"
+
TITLE
)
;
new
TestCase
(
"
Math
.
ceil
.
length
"
1
Math
.
ceil
.
length
)
;
new
TestCase
(
"
Math
.
ceil
(
NaN
)
"
Number
.
NaN
Math
.
ceil
(
Number
.
NaN
)
)
;
new
TestCase
(
"
Math
.
ceil
(
null
)
"
0
Math
.
ceil
(
null
)
)
;
new
TestCase
(
"
Math
.
ceil
(
)
"
Number
.
NaN
Math
.
ceil
(
)
)
;
new
TestCase
(
"
Math
.
ceil
(
void
0
)
"
Number
.
NaN
Math
.
ceil
(
void
0
)
)
;
new
TestCase
(
"
Math
.
ceil
(
'
0
'
)
"
0
Math
.
ceil
(
'
0
'
)
)
;
new
TestCase
(
"
Math
.
ceil
(
'
-
0
'
)
"
-
0
Math
.
ceil
(
'
-
0
'
)
)
;
new
TestCase
(
"
Infinity
/
Math
.
ceil
(
'
0
'
)
"
Infinity
Infinity
/
Math
.
ceil
(
'
0
'
)
)
;
new
TestCase
(
"
Infinity
/
Math
.
ceil
(
'
-
0
'
)
"
-
Infinity
Infinity
/
Math
.
ceil
(
'
-
0
'
)
)
;
new
TestCase
(
"
Math
.
ceil
(
0
)
"
0
Math
.
ceil
(
0
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
0
)
"
-
0
Math
.
ceil
(
-
0
)
)
;
new
TestCase
(
"
Infinity
/
Math
.
ceil
(
0
)
"
Infinity
Infinity
/
Math
.
ceil
(
0
)
)
;
new
TestCase
(
"
Infinity
/
Math
.
ceil
(
-
0
)
"
-
Infinity
Infinity
/
Math
.
ceil
(
-
0
)
)
;
new
TestCase
(
"
Math
.
ceil
(
Infinity
)
"
Number
.
POSITIVE_INFINITY
Math
.
ceil
(
Number
.
POSITIVE_INFINITY
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
Infinity
)
"
Number
.
NEGATIVE_INFINITY
Math
.
ceil
(
Number
.
NEGATIVE_INFINITY
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
Number
.
MIN_VALUE
)
"
-
0
Math
.
ceil
(
-
Number
.
MIN_VALUE
)
)
;
new
TestCase
(
"
Infinity
/
Math
.
ceil
(
-
Number
.
MIN_VALUE
)
"
-
Infinity
Infinity
/
Math
.
ceil
(
-
Number
.
MIN_VALUE
)
)
;
new
TestCase
(
"
Math
.
ceil
(
1
)
"
1
Math
.
ceil
(
1
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
1
)
"
-
1
Math
.
ceil
(
-
1
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
0
.
9
)
"
-
0
Math
.
ceil
(
-
0
.
9
)
)
;
new
TestCase
(
"
Infinity
/
Math
.
ceil
(
-
0
.
9
)
"
-
Infinity
Infinity
/
Math
.
ceil
(
-
0
.
9
)
)
;
new
TestCase
(
"
Math
.
ceil
(
0
.
9
)
"
1
Math
.
ceil
(
0
.
9
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
1
.
1
)
"
-
1
Math
.
ceil
(
-
1
.
1
)
)
;
new
TestCase
(
"
Math
.
ceil
(
1
.
1
)
"
2
Math
.
ceil
(
1
.
1
)
)
;
new
TestCase
(
"
Math
.
ceil
(
Infinity
)
"
-
Math
.
floor
(
-
Infinity
)
Math
.
ceil
(
Number
.
POSITIVE_INFINITY
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
Infinity
)
"
-
Math
.
floor
(
Infinity
)
Math
.
ceil
(
Number
.
NEGATIVE_INFINITY
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
Number
.
MIN_VALUE
)
"
-
Math
.
floor
(
Number
.
MIN_VALUE
)
Math
.
ceil
(
-
Number
.
MIN_VALUE
)
)
;
new
TestCase
(
"
Math
.
ceil
(
1
)
"
-
Math
.
floor
(
-
1
)
Math
.
ceil
(
1
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
1
)
"
-
Math
.
floor
(
1
)
Math
.
ceil
(
-
1
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
0
.
9
)
"
-
Math
.
floor
(
0
.
9
)
Math
.
ceil
(
-
0
.
9
)
)
;
new
TestCase
(
"
Math
.
ceil
(
0
.
9
)
"
-
Math
.
floor
(
-
0
.
9
)
Math
.
ceil
(
0
.
9
)
)
;
new
TestCase
(
"
Math
.
ceil
(
-
1
.
1
)
"
-
Math
.
floor
(
1
.
1
)
Math
.
ceil
(
-
1
.
1
)
)
;
new
TestCase
(
"
Math
.
ceil
(
1
.
1
)
"
-
Math
.
floor
(
-
1
.
1
)
Math
.
ceil
(
1
.
1
)
)
;
test
(
)
;
