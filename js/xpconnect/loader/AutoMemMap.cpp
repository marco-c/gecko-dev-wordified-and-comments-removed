#
include
"
AutoMemMap
.
h
"
#
include
"
ScriptPreloader
-
inl
.
h
"
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
nsIFile
.
h
"
namespace
mozilla
{
namespace
loader
{
AutoMemMap
:
:
~
AutoMemMap
(
)
{
if
(
fileMap
)
{
if
(
addr
)
{
Unused
<
<
NS_WARN_IF
(
PR_MemUnmap
(
addr
size
(
)
)
!
=
PR_SUCCESS
)
;
addr
=
nullptr
;
}
Unused
<
<
NS_WARN_IF
(
PR_CloseFileMap
(
fileMap
)
!
=
PR_SUCCESS
)
;
fileMap
=
nullptr
;
}
}
Result
<
Ok
nsresult
>
AutoMemMap
:
:
init
(
nsIFile
*
file
int
flags
int
mode
PRFileMapProtect
prot
)
{
MOZ_ASSERT
(
!
fd
)
;
MOZ_ASSERT
(
!
fileMap
)
;
MOZ_ASSERT
(
!
addr
)
;
int64_t
fileSize
;
NS_TRY
(
file
-
>
GetFileSize
(
&
fileSize
)
)
;
if
(
fileSize
>
UINT32_MAX
)
return
Err
(
NS_ERROR_INVALID_ARG
)
;
NS_TRY
(
file
-
>
OpenNSPRFileDesc
(
flags
mode
&
fd
.
rwget
(
)
)
)
;
fileMap
=
PR_CreateFileMap
(
fd
0
prot
)
;
if
(
!
fileMap
)
return
Err
(
NS_ERROR_FAILURE
)
;
size_
=
fileSize
;
addr
=
PR_MemMap
(
fileMap
0
size_
)
;
if
(
!
addr
)
return
Err
(
NS_ERROR_FAILURE
)
;
return
Ok
(
)
;
}
}
}
