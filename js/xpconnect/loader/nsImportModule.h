#
ifndef
nsImportModule_h
#
define
nsImportModule_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
namespace
mozilla
{
namespace
loader
{
nsresult
ImportModule
(
const
char
*
aURI
const
nsIID
&
aIID
void
*
*
aResult
)
;
}
}
class
MOZ_STACK_CLASS
nsImportModule
final
:
public
nsCOMPtr_helper
{
public
:
nsImportModule
(
const
char
*
aURI
nsresult
*
aErrorPtr
)
:
mURI
(
aURI
)
mErrorPtr
(
aErrorPtr
)
{
}
virtual
nsresult
NS_FASTCALL
operator
(
)
(
const
nsIID
&
aIID
void
*
*
aResult
)
const
override
{
nsresult
rv
=
:
:
mozilla
:
:
loader
:
:
ImportModule
(
mURI
aIID
aResult
)
;
if
(
mErrorPtr
)
{
*
mErrorPtr
=
rv
;
}
return
rv
;
}
private
:
const
char
*
mURI
;
nsresult
*
mErrorPtr
;
}
;
inline
nsImportModule
do_ImportModule
(
const
char
*
aURI
)
{
return
{
aURI
nullptr
}
;
}
inline
nsImportModule
do_ImportModule
(
const
char
*
aURI
nsresult
*
aRv
)
{
return
{
aURI
aRv
}
;
}
#
endif
