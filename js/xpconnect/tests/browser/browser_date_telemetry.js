const
triggers
=
[
"
Sep
26
Tues
1995
"
"
Sep
26
1995
Tues
"
"
Sep
26
1995
Tues
09
:
30
"
"
Sep
26
1995
09
:
Tues
:
30
"
"
Sep
26
1995
09
:
30
Tues
GMT
"
"
Sep
26
1995
09
:
30
GMT
Tues
"
"
26
Tues
Sep
1995
"
"
26
Sep
Tues
1995
"
"
26
Sep
1995
Tues
"
"
1995
-
09
-
26
Tues
"
"
Sep
26
Tues
1995
Tues
"
]
;
const
nonTriggers
=
[
"
Sep
26
1995
"
"
Tues
Sep
26
1995
"
"
Sep
Tues
26
1995
"
"
Sep
26
Tues
1995
foo
"
]
;
function
getCount
(
)
{
return
Glean
.
useCounterPage
.
jsLateWeekday
.
testGetValue
(
)
?
?
0
;
}
async
function
parseFormat
(
format
call
=
"
new
Date
"
)
{
let
newTab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
data
:
text
/
html
;
charset
=
utf
-
8
<
script
>
{
call
}
(
"
{
format
}
"
)
<
/
script
>
)
;
BrowserTestUtils
.
removeTab
(
newTab
)
;
}
add_task
(
async
function
test_date_telemetry
(
)
{
let
sum
=
getCount
(
)
;
for
(
const
format
of
nonTriggers
)
{
await
parseFormat
(
format
)
;
const
count
=
getCount
(
)
;
is
(
count
sum
{
format
}
should
not
trigger
telemetry
)
;
sum
=
count
;
}
for
(
const
[
i
format
]
of
triggers
.
entries
(
)
)
{
await
parseFormat
(
format
[
"
new
Date
"
"
Date
.
parse
"
]
[
i
%
2
]
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
getCount
(
)
>
sum
)
;
const
count
=
getCount
(
)
;
is
(
count
sum
+
1
{
format
}
should
trigger
telemetry
)
;
sum
=
count
;
}
}
)
;
