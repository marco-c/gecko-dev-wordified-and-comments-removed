function
run_test
(
)
{
let
ns
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
test
/
es6module
.
js
"
)
;
Assert
.
equal
(
ns
.
loadCount
1
)
;
Assert
.
equal
(
ns
.
value
2
)
;
let
ns2
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
test
/
es6module
.
js
"
)
;
Assert
.
equal
(
ns
.
loadCount
1
)
;
Assert
.
equal
(
ns
ns2
)
;
let
threw
=
false
;
try
{
ChromeUtils
.
importESModule
(
"
resource
:
/
/
test
/
es6module_not_found
.
js
"
)
;
}
catch
(
e
)
{
threw
=
true
;
}
Assert
.
ok
(
threw
)
;
threw
=
false
;
let
exception
;
try
{
ChromeUtils
.
importESModule
(
"
resource
:
/
/
test
/
es6module_throws
.
js
"
)
;
}
catch
(
e
)
{
exception
=
e
;
threw
=
true
;
}
Assert
.
ok
(
threw
)
;
Assert
.
ok
(
exception
.
toString
(
)
.
includes
(
"
foobar
"
)
)
;
threw
=
false
;
let
exception2
;
try
{
ChromeUtils
.
importESModule
(
"
resource
:
/
/
test
/
es6module_throws
.
js
"
)
;
}
catch
(
e
)
{
exception2
=
e
;
threw
=
true
;
}
Assert
.
ok
(
threw
)
;
Assert
.
equal
(
exception
exception2
)
;
ns
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
test
/
es6module_cycle_a
.
js
"
)
;
Assert
.
ok
(
ns
.
loaded
)
;
Assert
.
equal
(
ns
.
getValueFromB
(
)
"
b
"
)
;
ns
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
test
/
es6module_cycle_b
.
js
"
)
;
Assert
.
ok
(
ns
.
loaded
)
;
Assert
.
equal
(
ns
.
getValueFromC
(
)
"
c
"
)
;
ns
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
test
/
es6module_cycle_c
.
js
"
)
;
Assert
.
ok
(
ns
.
loaded
)
;
Assert
.
equal
(
ns
.
getValueFromA
(
)
"
a
"
)
;
threw
=
false
;
exception
=
undefined
;
try
{
ChromeUtils
.
importESModule
(
"
resource
:
/
/
test
/
es6module_top_level_await
.
js
"
)
;
}
catch
(
e
)
{
exception
=
e
;
threw
=
true
;
}
Assert
.
ok
(
threw
)
;
Assert
.
ok
(
exception
.
message
.
includes
(
"
not
supported
"
)
)
;
}
