var
{
addDebuggerToGlobal
addSandboxedDebuggerToGlobal
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
jsdebugger
.
jsm
"
)
;
const
testingFunctions
=
Cu
.
getJSTestingFunctions
(
)
;
const
systemPrincipal
=
Cc
[
"
mozilla
.
org
/
systemprincipal
;
1
"
]
.
createInstance
(
Ci
.
nsIPrincipal
)
;
function
addTestingFunctionsToGlobal
(
global
)
{
for
(
let
k
in
testingFunctions
)
{
global
[
k
]
=
testingFunctions
[
k
]
;
}
global
.
print
=
info
;
global
.
newGlobal
=
newGlobal
;
addDebuggerToGlobal
(
global
)
;
}
function
newGlobal
(
)
{
const
global
=
new
Cu
.
Sandbox
(
systemPrincipal
{
freshZone
:
true
}
)
;
addTestingFunctionsToGlobal
(
global
)
;
return
global
;
}
addTestingFunctionsToGlobal
(
this
)
;
function
executeSoon
(
f
)
{
Services
.
tm
.
dispatchToMainThread
(
{
run
:
f
}
)
;
}
if
(
typeof
gczeal
=
=
"
function
"
)
{
gczeal
(
0
)
;
}
gc
(
)
;
