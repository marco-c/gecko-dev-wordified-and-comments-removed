add_task
(
async
function
(
)
{
const
tests
=
[
{
throwError
(
)
{
eval
(
"
a
b
"
)
;
}
messagePattern
:
/
unexpected
token
/
lineNumber
:
1
columnNumber
:
3
}
{
throwError
(
)
{
not_found
(
)
;
}
messagePattern
:
/
is
not
defined
/
lineNumber
:
22
columnNumber
:
9
}
]
;
for
(
const
test
of
tests
)
{
const
{
promise
resolve
}
=
Promise
.
withResolvers
(
)
;
const
listener
=
{
observe
(
msg
)
{
if
(
msg
instanceof
Ci
.
nsIScriptError
)
{
resolve
(
msg
)
;
}
}
}
;
try
{
Services
.
console
.
registerListener
(
listener
)
;
try
{
test
.
throwError
(
)
;
}
catch
(
e
)
{
Cu
.
reportError
(
e
)
;
}
const
msg
=
await
promise
;
Assert
.
stringMatches
(
msg
.
errorMessage
test
.
messagePattern
)
;
Assert
.
equal
(
msg
.
lineNumber
test
.
lineNumber
)
;
Assert
.
equal
(
msg
.
columnNumber
test
.
columnNumber
)
;
}
finally
{
Services
.
console
.
unregisterListener
(
listener
)
;
}
}
}
)
;
