const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
allow_eval_with_system_principal
"
true
)
;
registerCleanupFunction
(
(
)
=
>
{
Services
.
prefs
.
clearUserPref
(
"
security
.
allow_eval_with_system_principal
"
)
;
}
)
;
var
TestUtils
=
{
QueryInterface
:
ChromeUtils
.
generateQI
(
[
"
nsIXPCTestUtils
"
]
)
doubleWrapFunction
(
fun
)
{
return
fun
}
}
;
function
run_test
(
)
{
var
sb
=
new
Cu
.
Sandbox
(
this
)
;
sb
.
eval
(
'
function
fun
(
x
)
{
return
x
;
}
'
)
;
Assert
.
equal
(
sb
.
fun
(
"
foo
"
)
"
foo
"
)
;
var
utils
=
xpcWrap
(
TestUtils
Ci
.
nsIXPCTestUtils
)
;
var
doubleWrapped
=
utils
.
doubleWrapFunction
(
sb
.
fun
)
;
Assert
.
equal
(
doubleWrapped
.
echo
(
"
foo
"
)
"
foo
"
)
;
Cu
.
forceGC
(
)
;
Assert
.
equal
(
doubleWrapped
.
echo
(
"
foo
"
)
"
foo
"
)
;
}
