async
function
testBody
(
)
{
setWatchdogEnabled
(
true
)
;
var
now
=
Date
.
now
(
)
*
1000
;
var
startHibernation
=
Cu
.
getWatchdogTimestamp
(
"
WatchdogHibernateStart
"
)
;
var
stopHibernation
=
Cu
.
getWatchdogTimestamp
(
"
WatchdogHibernateStop
"
)
;
do_log_info
(
"
Pre
-
hibernation
statistics
:
"
)
;
do_log_info
(
"
now
:
"
+
now
/
1000000
)
;
do_log_info
(
"
startHibernation
:
"
+
startHibernation
/
1000000
)
;
do_log_info
(
"
stopHibernation
:
"
+
stopHibernation
/
1000000
)
;
Assert
.
less
(
startHibernation
now
"
startHibernation
ok
"
)
;
Assert
.
less
(
stopHibernation
now
"
stopHibernation
ok
"
)
;
simulateNoScriptActivity
(
10
)
;
busyWait
(
1000
)
;
var
stateChange
=
Cu
.
getWatchdogTimestamp
(
"
ContextStateChange
"
)
;
startHibernation
=
Cu
.
getWatchdogTimestamp
(
"
WatchdogHibernateStart
"
)
;
stopHibernation
=
Cu
.
getWatchdogTimestamp
(
"
WatchdogHibernateStop
"
)
;
do_log_info
(
"
Post
-
hibernation
statistics
:
"
)
;
do_log_info
(
"
stateChange
:
"
+
stateChange
/
1000000
)
;
do_log_info
(
"
startHibernation
:
"
+
startHibernation
/
1000000
)
;
do_log_info
(
"
stopHibernation
:
"
+
stopHibernation
/
1000000
)
;
const
FUZZ_FACTOR
=
1
*
1000
*
1000
;
Assert
.
greater
(
stateChange
now
+
10
*
1000
*
1000
-
FUZZ_FACTOR
"
stateChange
ok
"
)
;
Assert
.
greater
(
startHibernation
now
+
2
*
1000
*
1000
-
FUZZ_FACTOR
"
startHibernation
ok
"
)
;
Assert
.
less
(
startHibernation
now
+
5
*
1000
*
1000
+
FUZZ_FACTOR
"
startHibernation
ok
"
)
;
Assert
.
greater
(
stopHibernation
now
+
10
*
1000
*
1000
-
FUZZ_FACTOR
"
stopHibernation
ok
"
)
;
}
