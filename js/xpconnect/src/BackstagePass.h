#
ifndef
BackstagePass_h__
#
define
BackstagePass_h__
#
include
"
nsISupports
.
h
"
#
include
"
nsWeakReference
.
h
"
#
include
"
nsIGlobalObject
.
h
"
#
include
"
nsIScriptObjectPrincipal
.
h
"
#
include
"
nsIXPCScriptable
.
h
"
#
include
"
js
/
HeapAPI
.
h
"
class
XPCWrappedNative
;
class
BackstagePass
:
public
nsIGlobalObject
public
nsIScriptObjectPrincipal
public
nsIXPCScriptable
public
nsIClassInfo
public
nsSupportsWeakReference
{
public
:
BackstagePass
(
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSIXPCSCRIPTABLE
NS_DECL_NSICLASSINFO
virtual
nsIPrincipal
*
GetPrincipal
(
)
override
{
return
mPrincipal
;
}
virtual
nsIPrincipal
*
GetEffectiveStoragePrincipal
(
)
override
{
return
mPrincipal
;
}
virtual
nsIPrincipal
*
PartitionedPrincipal
(
)
override
{
return
mPrincipal
;
}
JSObject
*
GetGlobalJSObject
(
)
override
;
JSObject
*
GetGlobalJSObjectPreserveColor
(
)
const
override
;
void
ForgetGlobalObject
(
)
{
mWrapper
=
nullptr
;
}
void
SetGlobalObject
(
JSObject
*
global
)
;
private
:
virtual
~
BackstagePass
(
)
=
default
;
nsCOMPtr
<
nsIPrincipal
>
mPrincipal
;
XPCWrappedNative
*
mWrapper
;
}
;
#
endif
