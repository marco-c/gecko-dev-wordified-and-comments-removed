#
ifndef
mozilla_JSThreadPool_h
#
define
mozilla_JSThreadPool_h
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
nsIThreadPool
.
h
"
#
include
"
js
/
Utility
.
h
"
#
include
"
js
/
UniquePtr
.
h
"
namespace
mozilla
{
class
HelperThreadTaskHandler
:
public
Runnable
{
public
:
NS_IMETHOD
Run
(
)
override
{
mOffThreadTask
-
>
runTask
(
)
;
mOffThreadTask
.
reset
(
)
;
return
NS_OK
;
}
explicit
HelperThreadTaskHandler
(
js
:
:
UniquePtr
<
RunnableTask
>
task
)
:
Runnable
(
"
HelperThreadTaskHandler
"
)
mOffThreadTask
(
std
:
:
move
(
task
)
)
{
}
private
:
~
HelperThreadTaskHandler
(
)
=
default
;
js
:
:
UniquePtr
<
RunnableTask
>
mOffThreadTask
;
}
;
class
HelperThreadPool
{
public
:
nsresult
Dispatch
(
already_AddRefed
<
HelperThreadTaskHandler
>
aRunnable
)
;
void
Shutdown
(
)
;
HelperThreadPool
(
)
;
virtual
~
HelperThreadPool
(
)
=
default
;
private
:
RefPtr
<
nsIThreadPool
>
mPool
;
}
;
}
#
endif
