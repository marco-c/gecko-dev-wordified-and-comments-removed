from
__future__
import
print_function
import
os
re
string
sys
from
mozbuild
.
util
import
FileAvoidWrite
def
find_in_path
(
file
searchpath
)
:
    
for
dir
in
searchpath
.
split
(
os
.
pathsep
)
:
        
f
=
os
.
path
.
join
(
dir
file
)
        
if
os
.
path
.
exists
(
f
)
:
            
return
f
    
return
'
'
def
header_path
(
header
compiler
)
:
    
if
compiler
=
=
'
gcc
'
:
        
return
header
    
elif
compiler
=
=
'
msvc
'
:
        
return
find_in_path
(
header
os
.
environ
.
get
(
'
INCLUDE
'
'
'
)
)
    
else
:
        
raise
NotImplementedError
(
compiler
)
def
gen_wrappers
(
unused
outdir
compiler
template_file
*
header_list
)
:
    
template
=
open
(
template_file
'
r
'
)
.
read
(
)
    
for
header
in
header_list
:
        
path
=
header_path
(
header
compiler
)
        
with
FileAvoidWrite
(
os
.
path
.
join
(
outdir
header
)
)
as
f
:
            
f
.
write
(
string
.
Template
(
template
)
.
substitute
(
HEADER
=
header
                                                         
HEADER_PATH
=
path
)
)
