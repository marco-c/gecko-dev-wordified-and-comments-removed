import
buildconfig
import
mozpack
.
path
as
mozpath
import
os
import
re
import
shlex
import
subprocess
def
main
(
output
input_asm
defines
includes
)
:
    
defines
=
shlex
.
split
(
defines
)
    
includes
=
shlex
.
split
(
includes
)
    
cpp
=
buildconfig
.
substs
[
'
CPP
'
]
+
[
'
-
EP
'
]
    
input_asm
=
mozpath
.
relpath
(
input_asm
os
.
getcwd
(
)
)
    
args
=
cpp
+
defines
+
includes
+
[
input_asm
]
    
print
(
'
'
.
join
(
args
)
)
    
preprocessed
=
subprocess
.
check_output
(
args
)
    
r
=
re
.
compile
(
'
F
[
dpa
]
[
^
]
*
'
)
    
for
line
in
preprocessed
.
splitlines
(
)
:
        
output
.
write
(
r
.
sub
(
'
'
line
)
)
        
output
.
write
(
'
\
n
'
)
