"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
permissions
"
]
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
lazy
=
{
}
;
XPCOMUtils
.
defineLazyModuleGetters
(
lazy
{
error
:
"
chrome
:
/
/
remote
/
content
/
shared
/
webdriver
/
Errors
.
jsm
"
MarionettePrefs
:
"
chrome
:
/
/
remote
/
content
/
marionette
/
prefs
.
js
"
}
)
;
const
permissions
=
{
}
;
permissions
.
set
=
function
(
descriptor
state
oneRealm
)
{
if
(
!
lazy
.
MarionettePrefs
.
setPermissionEnabled
)
{
throw
new
lazy
.
error
.
UnsupportedOperationError
(
"
'
Set
Permission
'
is
not
available
"
)
;
}
const
{
name
}
=
descriptor
;
if
(
!
[
"
clipboard
-
write
"
"
clipboard
-
read
"
]
.
includes
(
name
)
)
{
throw
new
lazy
.
error
.
UnsupportedOperationError
(
'
Set
Permission
'
doesn
'
t
support
'
{
name
}
'
)
;
}
if
(
state
=
=
=
"
prompt
"
)
{
throw
new
lazy
.
error
.
UnsupportedOperationError
(
"
'
Set
Permission
'
doesn
'
t
support
prompt
"
)
;
}
if
(
!
Services
.
prefs
.
getBoolPref
(
"
dom
.
events
.
testing
.
asyncClipboard
"
false
)
)
{
throw
new
lazy
.
error
.
UnsupportedOperationError
(
"
'
Set
Permission
'
expected
dom
.
events
.
testing
.
asyncClipboard
to
be
set
"
)
;
}
}
;
