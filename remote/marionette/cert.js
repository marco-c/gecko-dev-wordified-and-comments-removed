"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
allowAllCerts
"
]
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
sys
.
mjs
"
)
;
const
lazy
=
{
}
;
XPCOMUtils
.
defineLazyModuleGetters
(
lazy
{
Preferences
:
"
resource
:
/
/
gre
/
modules
/
Preferences
.
jsm
"
}
)
;
XPCOMUtils
.
defineLazyServiceGetter
(
lazy
"
sss
"
"
mozilla
.
org
/
ssservice
;
1
"
"
nsISiteSecurityService
"
)
;
XPCOMUtils
.
defineLazyServiceGetter
(
lazy
"
certOverrideService
"
"
mozilla
.
org
/
security
/
certoverride
;
1
"
"
nsICertOverrideService
"
)
;
const
CERT_PINNING_ENFORCEMENT_PREF
=
"
security
.
cert_pinning
.
enforcement_level
"
;
const
HSTS_PRELOAD_LIST_PREF
=
"
network
.
stricttransportsecurity
.
preloadlist
"
;
const
allowAllCerts
=
{
}
;
allowAllCerts
.
enable
=
function
(
)
{
lazy
.
Preferences
.
set
(
HSTS_PRELOAD_LIST_PREF
false
)
;
lazy
.
Preferences
.
set
(
CERT_PINNING_ENFORCEMENT_PREF
0
)
;
lazy
.
certOverrideService
.
setDisableAllSecurityChecksAndLetAttackersInterceptMyData
(
true
)
;
}
;
allowAllCerts
.
disable
=
function
(
)
{
lazy
.
certOverrideService
.
setDisableAllSecurityChecksAndLetAttackersInterceptMyData
(
false
)
;
lazy
.
Preferences
.
reset
(
HSTS_PRELOAD_LIST_PREF
)
;
lazy
.
Preferences
.
reset
(
CERT_PINNING_ENFORCEMENT_PREF
)
;
lazy
.
sss
.
clearAll
(
)
;
}
;
