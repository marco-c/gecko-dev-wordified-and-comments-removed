"
use
strict
"
;
add_task
(
async
function
(
_
CDP
)
{
const
{
webSocketDebuggerUrl
}
=
await
CDP
.
Version
(
)
;
const
client
=
await
CDP
(
{
target
:
webSocketDebuggerUrl
}
)
;
ok
(
true
"
CDP
client
has
been
instantiated
"
)
;
const
{
Target
}
=
client
;
ok
(
"
Target
"
in
client
"
Target
domain
is
available
"
)
;
const
targetsCreated
=
new
Promise
(
resolve
=
>
{
let
targets
=
0
;
const
unsubscribe
=
Target
.
targetCreated
(
event
=
>
{
if
(
+
+
targets
>
=
gBrowser
.
tabs
.
length
+
1
)
{
unsubscribe
(
)
;
resolve
(
)
;
}
}
)
;
}
)
;
Target
.
setDiscoverTargets
(
{
discover
:
true
}
)
;
await
targetsCreated
;
const
{
browserContextId
}
=
await
Target
.
createBrowserContext
(
)
;
const
targetCreated
=
Target
.
targetCreated
(
)
;
const
{
targetId
}
=
await
Target
.
createTarget
(
{
browserContextId
}
)
;
ok
(
true
Target
created
:
{
targetId
}
)
;
ok
(
!
!
targetId
"
createTarget
returns
a
non
-
empty
target
id
"
)
;
const
{
targetInfo
}
=
await
targetCreated
;
is
(
targetId
targetInfo
.
targetId
"
createTarget
and
targetCreated
refers
to
the
same
target
id
"
)
;
is
(
browserContextId
targetInfo
.
browserContextId
"
the
created
target
is
reported
to
be
of
the
same
browser
context
"
)
;
is
(
targetInfo
.
type
"
page
"
"
The
target
is
a
page
"
)
;
await
Target
.
disposeBrowserContext
(
{
browserContextId
}
)
;
await
client
.
close
(
)
;
ok
(
true
"
The
client
is
closed
"
)
;
}
)
;
