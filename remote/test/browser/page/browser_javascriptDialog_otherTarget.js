"
use
strict
"
;
add_task
(
async
function
(
client
)
{
const
{
Page
}
=
client
;
info
(
"
Enable
the
page
domain
"
)
;
await
Page
.
enable
(
)
;
Page
.
javascriptDialogOpening
(
(
)
=
>
{
ok
(
false
"
Should
never
receive
this
event
"
)
;
}
)
;
info
(
"
Open
another
tab
"
)
;
const
otherTab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
toDataURL
(
"
test
-
page
"
)
)
;
is
(
gBrowser
.
selectedTab
otherTab
"
Selected
tab
is
now
the
new
tab
"
)
;
const
onOtherPageDialog
=
new
Promise
(
r
=
>
{
Services
.
obs
.
addObserver
(
function
onDialogLoaded
(
promptContainer
)
{
Services
.
obs
.
removeObserver
(
onDialogLoaded
"
tabmodal
-
dialog
-
loaded
"
)
;
promptContainer
.
querySelector
(
"
.
tabmodalprompt
-
button0
"
)
.
click
(
)
;
r
(
)
;
}
"
tabmodal
-
dialog
-
loaded
"
)
;
}
)
;
info
(
"
Trigger
an
alert
in
the
second
page
"
)
;
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
(
)
=
>
{
content
.
alert
(
"
test
"
)
;
}
)
;
info
(
"
Wait
for
the
alert
to
be
detected
and
closed
"
)
;
await
onOtherPageDialog
;
info
(
"
Call
bringToFront
on
the
test
page
to
make
sure
we
received
"
)
;
await
Page
.
bringToFront
(
)
;
BrowserTestUtils
.
removeTab
(
otherTab
)
;
}
)
;
