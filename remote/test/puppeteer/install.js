const
compileTypeScriptIfRequired
=
require
(
'
.
/
typescript
-
if
-
required
.
js
'
)
;
async
function
download
(
)
{
await
compileTypeScriptIfRequired
(
)
;
const
{
downloadBrowser
logPolitely
}
=
require
(
'
.
/
lib
/
cjs
/
puppeteer
/
node
/
install
.
js
'
)
;
if
(
process
.
env
.
PUPPETEER_SKIP_DOWNLOAD
)
{
logPolitely
(
'
*
*
INFO
*
*
Skipping
browser
download
.
"
PUPPETEER_SKIP_DOWNLOAD
"
environment
variable
was
found
.
'
)
;
return
;
}
if
(
process
.
env
.
NPM_CONFIG_PUPPETEER_SKIP_DOWNLOAD
|
|
process
.
env
.
npm_config_puppeteer_skip_download
)
{
logPolitely
(
'
*
*
INFO
*
*
Skipping
browser
download
.
"
PUPPETEER_SKIP_DOWNLOAD
"
was
set
in
npm
config
.
'
)
;
return
;
}
if
(
process
.
env
.
NPM_PACKAGE_CONFIG_PUPPETEER_SKIP_DOWNLOAD
|
|
process
.
env
.
npm_package_config_puppeteer_skip_download
)
{
logPolitely
(
'
*
*
INFO
*
*
Skipping
browser
download
.
"
PUPPETEER_SKIP_DOWNLOAD
"
was
set
in
project
config
.
'
)
;
return
;
}
if
(
process
.
env
.
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
)
{
logPolitely
(
'
*
*
INFO
*
*
Skipping
browser
download
.
"
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
"
environment
variable
was
found
.
'
)
;
return
;
}
if
(
process
.
env
.
NPM_CONFIG_PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
|
|
process
.
env
.
npm_config_puppeteer_skip_chromium_download
)
{
logPolitely
(
'
*
*
INFO
*
*
Skipping
browser
download
.
"
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
"
was
set
in
npm
config
.
'
)
;
return
;
}
if
(
process
.
env
.
NPM_PACKAGE_CONFIG_PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
|
|
process
.
env
.
npm_package_config_puppeteer_skip_chromium_download
)
{
logPolitely
(
'
*
*
INFO
*
*
Skipping
browser
download
.
"
PUPPETEER_SKIP_CHROMIUM_DOWNLOAD
"
was
set
in
project
config
.
'
)
;
return
;
}
downloadBrowser
(
)
;
}
download
(
)
;
