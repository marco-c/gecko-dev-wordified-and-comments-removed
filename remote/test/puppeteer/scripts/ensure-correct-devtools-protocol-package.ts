import
{
PUPPETEER_REVISIONS
}
from
'
.
.
/
src
/
revisions
'
;
import
{
execSync
}
from
'
child_process
'
;
import
packageJson
from
'
.
.
/
package
.
json
'
;
const
currentProtocolPackageInstalledVersion
=
packageJson
.
dependencies
[
'
devtools
-
protocol
'
]
;
if
(
/
^
[
^
0
-
9
]
/
.
test
(
currentProtocolPackageInstalledVersion
)
)
{
console
.
log
(
ERROR
:
devtools
-
protocol
package
is
not
pinned
to
a
specific
version
.
\
n
)
;
process
.
exit
(
1
)
;
}
const
command
=
npm
view
"
devtools
-
protocol
<
=
0
.
0
.
{
PUPPETEER_REVISIONS
.
chromium
}
"
version
|
tail
-
1
;
console
.
log
(
'
Checking
npm
for
devtools
-
protocol
revisions
:
\
n
'
'
{
command
}
'
'
\
n
'
)
;
const
output
=
execSync
(
command
{
encoding
:
'
utf8
'
}
)
;
const
bestRevisionFromNpm
=
output
.
split
(
'
'
)
[
1
]
.
replace
(
/
'
|
\
n
/
g
'
'
)
;
if
(
currentProtocolPackageInstalledVersion
!
=
=
bestRevisionFromNpm
)
{
console
.
log
(
ERROR
:
bad
devtools
-
protocol
revision
detected
:
Current
Puppeteer
Chromium
revision
:
{
PUPPETEER_REVISIONS
.
chromium
}
Current
devtools
-
protocol
version
in
package
.
json
:
{
currentProtocolPackageInstalledVersion
}
Expected
devtools
-
protocol
version
:
{
bestRevisionFromNpm
}
)
;
process
.
exit
(
1
)
;
}
console
.
log
(
Correct
devtools
-
protocol
version
found
(
{
bestRevisionFromNpm
}
)
.
)
;
process
.
exit
(
0
)
;
