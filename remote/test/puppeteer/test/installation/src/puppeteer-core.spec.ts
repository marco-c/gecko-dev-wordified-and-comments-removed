import
{
describeInstallation
}
from
'
.
/
describeInstallation
.
js
'
;
import
{
readAsset
}
from
'
.
/
util
.
js
'
;
describeInstallation
(
'
puppeteer
-
core
'
{
dependencies
:
[
'
puppeteer
-
core
'
]
}
(
{
itEvaluates
}
)
=
>
{
itEvaluates
(
'
CommonJS
'
{
commonjs
:
true
}
async
(
)
=
>
{
return
readAsset
(
'
puppeteer
-
core
'
'
requires
.
cjs
'
)
;
}
)
;
itEvaluates
(
'
ES
modules
'
async
(
)
=
>
{
return
readAsset
(
'
puppeteer
-
core
'
'
imports
.
js
'
)
;
}
)
;
for
(
const
product
of
[
'
firefox
'
'
chrome
'
]
)
{
itEvaluates
(
\
launch
\
for
\
{
product
}
\
with
a
bad
\
executablePath
\
async
(
)
=
>
{
return
(
await
readAsset
(
'
puppeteer
-
core
'
'
launch
.
js
'
)
)
.
replace
(
'
{
product
}
'
product
)
;
}
)
;
}
}
)
;
