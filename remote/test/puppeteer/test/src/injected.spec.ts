import
expect
from
'
expect
'
;
import
{
PUPPETEER_WORLD
}
from
'
puppeteer
-
core
/
internal
/
common
/
IsolatedWorlds
.
js
'
;
import
{
getTestState
setupTestBrowserHooks
setupTestPageAndContextHooks
}
from
'
.
/
mocha
-
utils
.
js
'
;
describe
(
'
PuppeteerUtil
tests
'
function
(
)
{
setupTestBrowserHooks
(
)
;
setupTestPageAndContextHooks
(
)
;
it
(
'
should
work
'
async
(
)
=
>
{
const
{
page
}
=
getTestState
(
)
;
const
world
=
page
.
mainFrame
(
)
.
worlds
[
PUPPETEER_WORLD
]
;
const
value
=
await
world
.
evaluate
(
PuppeteerUtil
=
>
{
return
typeof
PuppeteerUtil
=
=
=
'
object
'
;
}
world
.
puppeteerUtil
)
;
expect
(
value
)
.
toBeTruthy
(
)
;
}
)
;
describe
(
'
createFunction
tests
'
function
(
)
{
it
(
'
should
work
'
async
(
)
=
>
{
const
{
page
}
=
getTestState
(
)
;
const
world
=
page
.
mainFrame
(
)
.
worlds
[
PUPPETEER_WORLD
]
;
const
value
=
await
world
.
evaluate
(
(
{
createFunction
}
fnString
)
=
>
{
return
createFunction
(
fnString
)
(
4
)
;
}
await
world
.
puppeteerUtil
(
(
)
=
>
{
return
4
;
}
)
.
toString
(
)
)
;
expect
(
value
)
.
toBe
(
4
)
;
}
)
;
}
)
;
}
)
;
