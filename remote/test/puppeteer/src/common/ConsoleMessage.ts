import
{
JSHandle
}
from
'
.
/
JSHandle
'
;
export
interface
ConsoleMessageLocation
{
url
?
:
string
;
lineNumber
?
:
number
;
columnNumber
?
:
number
;
}
export
type
ConsoleMessageType
=
|
'
log
'
|
'
debug
'
|
'
info
'
|
'
error
'
|
'
warning
'
|
'
dir
'
|
'
dirxml
'
|
'
table
'
|
'
trace
'
|
'
clear
'
|
'
startGroup
'
|
'
startGroupCollapsed
'
|
'
endGroup
'
|
'
assert
'
|
'
profile
'
|
'
profileEnd
'
|
'
count
'
|
'
timeEnd
'
|
'
verbose
'
;
export
class
ConsoleMessage
{
private
_type
:
ConsoleMessageType
;
private
_text
:
string
;
private
_args
:
JSHandle
[
]
;
private
_location
:
ConsoleMessageLocation
;
constructor
(
type
:
ConsoleMessageType
text
:
string
args
:
JSHandle
[
]
location
:
ConsoleMessageLocation
=
{
}
)
{
this
.
_type
=
type
;
this
.
_text
=
text
;
this
.
_args
=
args
;
this
.
_location
=
location
;
}
type
(
)
:
ConsoleMessageType
{
return
this
.
_type
;
}
text
(
)
:
string
{
return
this
.
_text
;
}
args
(
)
:
JSHandle
[
]
{
return
this
.
_args
;
}
location
(
)
:
ConsoleMessageLocation
{
return
this
.
_location
;
}
}
