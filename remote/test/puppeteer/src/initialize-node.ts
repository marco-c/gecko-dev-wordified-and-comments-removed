import
{
PuppeteerNode
}
from
'
.
/
node
/
Puppeteer
.
js
'
;
import
{
PUPPETEER_REVISIONS
}
from
'
.
/
revisions
.
js
'
;
import
pkgDir
from
'
pkg
-
dir
'
;
import
{
Product
}
from
'
.
/
common
/
Product
.
js
'
;
export
const
initializePuppeteerNode
=
(
packageName
:
string
)
:
PuppeteerNode
=
>
{
const
puppeteerRootDirectory
=
pkgDir
.
sync
(
__dirname
)
;
let
preferredRevision
=
PUPPETEER_REVISIONS
.
chromium
;
const
isPuppeteerCore
=
packageName
=
=
=
'
puppeteer
-
core
'
;
const
productName
=
isPuppeteerCore
?
undefined
:
process
.
env
.
PUPPETEER_PRODUCT
|
|
process
.
env
.
npm_config_puppeteer_product
|
|
process
.
env
.
npm_package_config_puppeteer_product
;
if
(
!
isPuppeteerCore
&
&
productName
=
=
=
'
firefox
'
)
preferredRevision
=
PUPPETEER_REVISIONS
.
firefox
;
return
new
PuppeteerNode
(
{
projectRoot
:
puppeteerRootDirectory
preferredRevision
isPuppeteerCore
productName
:
productName
as
Product
}
)
;
}
;
