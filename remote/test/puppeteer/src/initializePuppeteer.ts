import
{
Product
}
from
'
.
/
common
/
Product
.
js
'
;
import
{
rootDirname
}
from
'
.
/
constants
.
js
'
;
import
{
PuppeteerNode
}
from
'
.
/
node
/
Puppeteer
.
js
'
;
import
{
PUPPETEER_REVISIONS
}
from
'
.
/
revisions
.
js
'
;
import
{
getPackageDirectory
}
from
'
.
/
util
/
getPackageDirectory
.
js
'
;
export
const
initializePuppeteer
=
(
packageName
:
string
)
:
PuppeteerNode
=
>
{
const
isPuppeteerCore
=
packageName
=
=
=
'
puppeteer
-
core
'
;
let
preferredRevision
=
PUPPETEER_REVISIONS
.
chromium
;
const
productName
=
!
isPuppeteerCore
?
(
(
process
.
env
[
'
PUPPETEER_PRODUCT
'
]
|
|
process
.
env
[
'
npm_config_puppeteer_product
'
]
|
|
process
.
env
[
'
npm_package_config_puppeteer_product
'
]
)
as
Product
)
:
undefined
;
if
(
!
isPuppeteerCore
&
&
productName
=
=
=
'
firefox
'
)
{
preferredRevision
=
PUPPETEER_REVISIONS
.
firefox
;
}
return
new
PuppeteerNode
(
{
projectRoot
:
isPuppeteerCore
?
undefined
:
getPackageDirectory
(
rootDirname
)
preferredRevision
isPuppeteerCore
productName
}
)
;
}
;
