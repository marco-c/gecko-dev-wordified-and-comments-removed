import
{
MochaTestResult
TestExpectation
MochaResults
TestResult
}
from
'
.
/
types
.
js
'
;
export
declare
function
extendProcessEnv
(
envs
:
object
[
]
)
:
NodeJS
.
ProcessEnv
;
export
declare
function
getFilename
(
file
:
string
)
:
string
;
export
declare
function
readJSON
(
path
:
string
)
:
unknown
;
export
declare
function
filterByPlatform
<
T
extends
{
platforms
:
NodeJS
.
Platform
[
]
;
}
>
(
items
:
T
[
]
platform
:
NodeJS
.
Platform
)
:
T
[
]
;
export
declare
function
prettyPrintJSON
(
json
:
unknown
)
:
void
;
export
declare
function
filterByParameters
(
expectations
:
TestExpectation
[
]
parameters
:
string
[
]
)
:
TestExpectation
[
]
;
export
declare
function
findEffectiveExpectationForTest
(
expectations
:
TestExpectation
[
]
result
:
MochaTestResult
)
:
TestExpectation
|
undefined
;
type
RecommendedExpecation
=
{
expectation
:
TestExpectation
;
test
:
MochaTestResult
;
action
:
'
remove
'
|
'
add
'
|
'
update
'
;
}
;
export
declare
function
getExpectationUpdates
(
results
:
MochaResults
expecations
:
TestExpectation
[
]
context
:
{
platforms
:
NodeJS
.
Platform
[
]
;
parameters
:
string
[
]
;
}
)
:
RecommendedExpecation
[
]
;
export
declare
function
getTestResultForFailure
(
test
:
Pick
<
MochaTestResult
'
err
'
>
)
:
TestResult
;
export
declare
function
getTestId
(
file
:
string
fullTitle
?
:
string
)
:
string
;
export
{
}
;
