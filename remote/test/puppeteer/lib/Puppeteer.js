const
Launcher
=
require
(
'
.
/
Launcher
'
)
;
const
BrowserFetcher
=
require
(
'
.
/
BrowserFetcher
'
)
;
const
Errors
=
require
(
'
.
/
Errors
'
)
;
const
DeviceDescriptors
=
require
(
'
.
/
DeviceDescriptors
'
)
;
module
.
exports
=
class
{
constructor
(
projectRoot
preferredRevision
isPuppeteerCore
)
{
this
.
_projectRoot
=
projectRoot
;
this
.
_preferredRevision
=
preferredRevision
;
this
.
_isPuppeteerCore
=
isPuppeteerCore
;
}
launch
(
options
)
{
if
(
!
this
.
_productName
&
&
options
)
this
.
_productName
=
options
.
product
;
return
this
.
_launcher
.
launch
(
options
)
;
}
connect
(
options
)
{
return
this
.
_launcher
.
connect
(
options
)
;
}
executablePath
(
)
{
return
this
.
_launcher
.
executablePath
(
)
;
}
get
_launcher
(
)
{
if
(
!
this
.
_lazyLauncher
)
this
.
_lazyLauncher
=
Launcher
(
this
.
_projectRoot
this
.
_preferredRevision
this
.
_isPuppeteerCore
this
.
_productName
)
;
return
this
.
_lazyLauncher
;
}
get
product
(
)
{
return
this
.
_launcher
.
product
;
}
get
devices
(
)
{
return
DeviceDescriptors
;
}
get
errors
(
)
{
return
Errors
;
}
defaultArgs
(
options
)
{
return
this
.
_launcher
.
defaultArgs
(
options
)
;
}
createBrowserFetcher
(
options
)
{
return
new
BrowserFetcher
(
this
.
_projectRoot
options
)
;
}
}
;
