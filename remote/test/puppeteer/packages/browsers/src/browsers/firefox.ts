import
path
from
'
path
'
;
import
{
BrowserPlatform
}
from
'
.
/
types
.
js
'
;
function
archive
(
platform
:
BrowserPlatform
revision
:
string
)
:
string
{
switch
(
platform
)
{
case
BrowserPlatform
.
LINUX
:
return
firefox
-
{
revision
}
.
en
-
US
.
{
platform
}
-
x86_64
.
tar
.
bz2
;
case
BrowserPlatform
.
MAC_ARM
:
case
BrowserPlatform
.
MAC
:
return
firefox
-
{
revision
}
.
en
-
US
.
mac
.
dmg
;
case
BrowserPlatform
.
WIN32
:
case
BrowserPlatform
.
WIN64
:
return
firefox
-
{
revision
}
.
en
-
US
.
{
platform
}
.
zip
;
}
}
export
function
resolveDownloadUrl
(
platform
:
BrowserPlatform
revision
:
string
baseUrl
=
'
https
:
/
/
archive
.
mozilla
.
org
/
pub
/
firefox
/
nightly
/
latest
-
mozilla
-
central
'
)
:
string
{
return
{
baseUrl
}
/
{
archive
(
platform
revision
)
}
;
}
export
function
relativeExecutablePath
(
platform
:
BrowserPlatform
_revision
:
string
)
:
string
{
switch
(
platform
)
{
case
BrowserPlatform
.
MAC_ARM
:
case
BrowserPlatform
.
MAC
:
return
path
.
join
(
'
Firefox
Nightly
.
app
'
'
Contents
'
'
MacOS
'
'
firefox
'
)
;
case
BrowserPlatform
.
LINUX
:
return
path
.
join
(
'
firefox
'
'
firefox
'
)
;
case
BrowserPlatform
.
WIN32
:
case
BrowserPlatform
.
WIN64
:
return
path
.
join
(
'
firefox
'
'
firefox
.
exe
'
)
;
}
}
