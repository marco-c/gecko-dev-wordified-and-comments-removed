import
{
Protocol
}
from
'
devtools
-
protocol
'
;
import
{
CDPSession
}
from
'
.
/
Connection
.
js
'
;
import
{
Viewport
}
from
'
.
/
PuppeteerViewport
.
js
'
;
export
class
EmulationManager
{
#
client
:
CDPSession
;
#
emulatingMobile
=
false
;
#
hasTouch
=
false
;
constructor
(
client
:
CDPSession
)
{
this
.
#
client
=
client
;
}
async
emulateViewport
(
viewport
:
Viewport
)
:
Promise
<
boolean
>
{
const
mobile
=
viewport
.
isMobile
|
|
false
;
const
width
=
viewport
.
width
;
const
height
=
viewport
.
height
;
const
deviceScaleFactor
=
viewport
.
deviceScaleFactor
|
|
1
;
const
screenOrientation
:
Protocol
.
Emulation
.
ScreenOrientation
=
viewport
.
isLandscape
?
{
angle
:
90
type
:
'
landscapePrimary
'
}
:
{
angle
:
0
type
:
'
portraitPrimary
'
}
;
const
hasTouch
=
viewport
.
hasTouch
|
|
false
;
await
Promise
.
all
(
[
this
.
#
client
.
send
(
'
Emulation
.
setDeviceMetricsOverride
'
{
mobile
width
height
deviceScaleFactor
screenOrientation
}
)
this
.
#
client
.
send
(
'
Emulation
.
setTouchEmulationEnabled
'
{
enabled
:
hasTouch
}
)
]
)
;
const
reloadNeeded
=
this
.
#
emulatingMobile
!
=
=
mobile
|
|
this
.
#
hasTouch
!
=
=
hasTouch
;
this
.
#
emulatingMobile
=
mobile
;
this
.
#
hasTouch
=
hasTouch
;
return
reloadNeeded
;
}
}
