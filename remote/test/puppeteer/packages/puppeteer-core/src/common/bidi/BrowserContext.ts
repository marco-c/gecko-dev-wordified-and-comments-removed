import
{
BrowserContext
as
BrowserContextBase
}
from
'
.
.
/
.
.
/
api
/
BrowserContext
.
js
'
;
import
{
Page
as
PageBase
}
from
'
.
.
/
.
.
/
api
/
Page
.
js
'
;
import
{
Connection
}
from
'
.
/
Connection
.
js
'
;
import
{
Page
}
from
'
.
/
Page
.
js
'
;
export
class
BrowserContext
extends
BrowserContextBase
{
#
connection
:
Connection
;
constructor
(
connection
:
Connection
)
{
super
(
)
;
this
.
#
connection
=
connection
;
}
override
async
newPage
(
)
:
Promise
<
PageBase
>
{
const
result
=
(
await
this
.
#
connection
.
send
(
'
browsingContext
.
create
'
{
type
:
'
tab
'
}
)
)
as
{
context
:
string
}
;
return
new
Page
(
this
.
#
connection
result
.
context
)
;
}
override
async
close
(
)
:
Promise
<
void
>
{
}
}
