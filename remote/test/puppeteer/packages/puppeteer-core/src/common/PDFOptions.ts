export
interface
PDFMargin
{
top
?
:
string
|
number
;
bottom
?
:
string
|
number
;
left
?
:
string
|
number
;
right
?
:
string
|
number
;
}
export
type
LowerCasePaperFormat
=
|
'
letter
'
|
'
legal
'
|
'
tabloid
'
|
'
ledger
'
|
'
a0
'
|
'
a1
'
|
'
a2
'
|
'
a3
'
|
'
a4
'
|
'
a5
'
|
'
a6
'
;
export
type
PaperFormat
=
|
Uppercase
<
LowerCasePaperFormat
>
|
Capitalize
<
LowerCasePaperFormat
>
|
LowerCasePaperFormat
;
export
interface
PDFOptions
{
scale
?
:
number
;
displayHeaderFooter
?
:
boolean
;
headerTemplate
?
:
string
;
footerTemplate
?
:
string
;
printBackground
?
:
boolean
;
landscape
?
:
boolean
;
pageRanges
?
:
string
;
format
?
:
PaperFormat
;
width
?
:
string
|
number
;
height
?
:
string
|
number
;
preferCSSPageSize
?
:
boolean
;
margin
?
:
PDFMargin
;
path
?
:
string
;
omitBackground
?
:
boolean
;
tagged
?
:
boolean
;
timeout
?
:
number
;
}
export
interface
PaperFormatDimensions
{
width
:
number
;
height
:
number
;
}
export
interface
ParsedPDFOptionsInterface
{
width
:
number
;
height
:
number
;
margin
:
{
top
:
number
;
bottom
:
number
;
left
:
number
;
right
:
number
;
}
;
}
export
type
ParsedPDFOptions
=
Required
<
Omit
<
PDFOptions
'
path
'
|
'
format
'
|
'
timeout
'
>
&
ParsedPDFOptionsInterface
>
;
export
const
paperFormats
:
Record
<
LowerCasePaperFormat
PaperFormatDimensions
>
=
{
letter
:
{
width
:
8
.
5
height
:
11
}
legal
:
{
width
:
8
.
5
height
:
14
}
tabloid
:
{
width
:
11
height
:
17
}
ledger
:
{
width
:
17
height
:
11
}
a0
:
{
width
:
33
.
1
height
:
46
.
8
}
a1
:
{
width
:
23
.
4
height
:
33
.
1
}
a2
:
{
width
:
16
.
54
height
:
23
.
4
}
a3
:
{
width
:
11
.
7
height
:
16
.
54
}
a4
:
{
width
:
8
.
27
height
:
11
.
7
}
a5
:
{
width
:
5
.
83
height
:
8
.
27
}
a6
:
{
width
:
4
.
13
height
:
5
.
83
}
}
as
const
;
