import
type
{
HTTPRequest
}
from
'
.
.
/
api
/
HTTPRequest
.
js
'
;
import
type
{
HTTPResponse
}
from
'
.
.
/
api
/
HTTPResponse
.
js
'
;
import
type
{
EventType
}
from
'
.
/
EventEmitter
.
js
'
;
export
namespace
NetworkManagerEvent
{
export
const
Request
=
Symbol
(
'
NetworkManager
.
Request
'
)
;
export
const
RequestServedFromCache
=
Symbol
(
'
NetworkManager
.
RequestServedFromCache
'
)
;
export
const
Response
=
Symbol
(
'
NetworkManager
.
Response
'
)
;
export
const
RequestFailed
=
Symbol
(
'
NetworkManager
.
RequestFailed
'
)
;
export
const
RequestFinished
=
Symbol
(
'
NetworkManager
.
RequestFinished
'
)
;
}
export
interface
NetworkManagerEvents
extends
Record
<
EventType
unknown
>
{
[
NetworkManagerEvent
.
Request
]
:
HTTPRequest
;
[
NetworkManagerEvent
.
RequestServedFromCache
]
:
HTTPRequest
;
[
NetworkManagerEvent
.
Response
]
:
HTTPResponse
;
[
NetworkManagerEvent
.
RequestFailed
]
:
HTTPRequest
;
[
NetworkManagerEvent
.
RequestFinished
]
:
HTTPRequest
;
}
