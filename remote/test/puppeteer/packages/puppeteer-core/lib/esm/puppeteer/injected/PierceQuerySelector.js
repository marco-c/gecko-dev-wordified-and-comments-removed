export
const
pierceQuerySelector
=
(
root
selector
)
=
>
{
let
found
=
null
;
const
search
=
(
root
)
=
>
{
const
iter
=
document
.
createTreeWalker
(
root
NodeFilter
.
SHOW_ELEMENT
)
;
do
{
const
currentNode
=
iter
.
currentNode
;
if
(
currentNode
.
shadowRoot
)
{
search
(
currentNode
.
shadowRoot
)
;
}
if
(
currentNode
instanceof
ShadowRoot
)
{
continue
;
}
if
(
currentNode
!
=
=
root
&
&
!
found
&
&
currentNode
.
matches
(
selector
)
)
{
found
=
currentNode
;
}
}
while
(
!
found
&
&
iter
.
nextNode
(
)
)
;
}
;
if
(
root
instanceof
Document
)
{
root
=
root
.
documentElement
;
}
search
(
root
)
;
return
found
;
}
;
export
const
pierceQuerySelectorAll
=
(
element
selector
)
=
>
{
const
result
=
[
]
;
const
collect
=
(
root
)
=
>
{
const
iter
=
document
.
createTreeWalker
(
root
NodeFilter
.
SHOW_ELEMENT
)
;
do
{
const
currentNode
=
iter
.
currentNode
;
if
(
currentNode
.
shadowRoot
)
{
collect
(
currentNode
.
shadowRoot
)
;
}
if
(
currentNode
instanceof
ShadowRoot
)
{
continue
;
}
if
(
currentNode
!
=
=
root
&
&
currentNode
.
matches
(
selector
)
)
{
result
.
push
(
currentNode
)
;
}
}
while
(
iter
.
nextNode
(
)
)
;
}
;
if
(
element
instanceof
Document
)
{
element
=
element
.
documentElement
;
}
collect
(
element
)
;
return
result
;
}
;
