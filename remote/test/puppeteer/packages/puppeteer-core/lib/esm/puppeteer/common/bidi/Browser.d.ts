import
{
Browser
as
BrowserBase
BrowserCloseCallback
BrowserContextOptions
}
from
'
.
.
/
.
.
/
api
/
Browser
.
js
'
;
import
{
BrowserContext
as
BrowserContextBase
}
from
'
.
.
/
.
.
/
api
/
BrowserContext
.
js
'
;
import
{
Connection
}
from
'
.
/
Connection
.
js
'
;
import
{
ChildProcess
}
from
'
child_process
'
;
export
declare
class
Browser
extends
BrowserBase
{
#
private
;
static
create
(
opts
:
Options
)
:
Promise
<
Browser
>
;
constructor
(
opts
:
Options
)
;
close
(
)
:
Promise
<
void
>
;
isConnected
(
)
:
boolean
;
process
(
)
:
ChildProcess
|
null
;
createIncognitoBrowserContext
(
_options
?
:
BrowserContextOptions
)
:
Promise
<
BrowserContextBase
>
;
}
interface
Options
{
process
?
:
ChildProcess
;
closeCallback
?
:
BrowserCloseCallback
;
connection
:
Connection
;
}
export
{
}
;
