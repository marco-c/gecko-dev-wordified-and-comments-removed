import
{
Browser
}
from
'
.
.
/
api
/
Browser
.
js
'
;
import
{
BrowserConnectOptions
}
from
'
.
.
/
common
/
BrowserConnector
.
js
'
;
import
{
Product
}
from
'
.
.
/
common
/
Product
.
js
'
;
import
{
CommonPuppeteerSettings
ConnectOptions
Puppeteer
}
from
'
.
.
/
common
/
Puppeteer
.
js
'
;
import
{
Configuration
}
from
'
.
.
/
common
/
Configuration
.
js
'
;
import
{
BrowserFetcher
BrowserFetcherOptions
}
from
'
.
/
BrowserFetcher
.
js
'
;
import
{
BrowserLaunchArgumentOptions
ChromeReleaseChannel
LaunchOptions
}
from
'
.
/
LaunchOptions
.
js
'
;
export
interface
PuppeteerLaunchOptions
extends
LaunchOptions
BrowserLaunchArgumentOptions
BrowserConnectOptions
{
product
?
:
Product
;
extraPrefsFirefox
?
:
Record
<
string
unknown
>
;
}
export
declare
class
PuppeteerNode
extends
Puppeteer
{
#
private
;
defaultBrowserRevision
:
string
;
configuration
:
Configuration
;
constructor
(
settings
:
{
configuration
?
:
Configuration
;
}
&
CommonPuppeteerSettings
)
;
connect
(
options
:
ConnectOptions
)
:
Promise
<
Browser
>
;
launch
(
options
?
:
PuppeteerLaunchOptions
)
:
Promise
<
Browser
>
;
executablePath
(
channel
?
:
ChromeReleaseChannel
)
:
string
;
get
browserRevision
(
)
:
string
;
get
defaultDownloadPath
(
)
:
string
|
undefined
;
get
lastLaunchedProduct
(
)
:
Product
;
get
defaultProduct
(
)
:
Product
;
get
product
(
)
:
string
;
defaultArgs
(
options
?
:
BrowserLaunchArgumentOptions
)
:
string
[
]
;
createBrowserFetcher
(
options
?
:
Partial
<
BrowserFetcherOptions
>
)
:
BrowserFetcher
;
}
