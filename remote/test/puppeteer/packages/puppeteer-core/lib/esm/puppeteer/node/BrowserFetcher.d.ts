import
{
Product
}
from
'
.
.
/
common
/
Product
.
js
'
;
export
type
Platform
=
'
linux
'
|
'
mac
'
|
'
mac_arm
'
|
'
win32
'
|
'
win64
'
;
export
interface
BrowserFetcherOptions
{
path
:
string
;
platform
?
:
Platform
;
product
?
:
'
chrome
'
|
'
firefox
'
;
host
?
:
string
;
useMacOSARMBinary
?
:
boolean
;
}
export
interface
BrowserFetcherRevisionInfo
{
folderPath
:
string
;
executablePath
:
string
;
url
:
string
;
local
:
boolean
;
revision
:
string
;
product
:
string
;
}
export
declare
class
BrowserFetcher
{
#
private
;
constructor
(
options
:
BrowserFetcherOptions
)
;
platform
(
)
:
Platform
;
product
(
)
:
Product
;
host
(
)
:
string
;
canDownload
(
revision
:
string
)
:
Promise
<
boolean
>
;
download
(
revision
:
string
progressCallback
?
:
(
x
:
number
y
:
number
)
=
>
void
)
:
Promise
<
BrowserFetcherRevisionInfo
|
undefined
>
;
localRevisions
(
)
:
string
[
]
;
remove
(
revision
:
string
)
:
Promise
<
void
>
;
revisionInfo
(
revision
:
string
)
:
BrowserFetcherRevisionInfo
;
}
