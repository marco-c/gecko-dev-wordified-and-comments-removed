import
{
Protocol
}
from
'
devtools
-
protocol
'
;
import
type
{
Readable
}
from
'
stream
'
;
import
{
CDPSession
}
from
'
.
/
Connection
.
js
'
;
import
{
ElementHandle
}
from
'
.
/
ElementHandle
.
js
'
;
import
{
CommonEventEmitter
}
from
'
.
/
EventEmitter
.
js
'
;
import
{
ExecutionContext
}
from
'
.
/
ExecutionContext
.
js
'
;
import
{
JSHandle
}
from
'
.
/
JSHandle
.
js
'
;
export
declare
const
debugError
:
(
.
.
.
args
:
unknown
[
]
)
=
>
void
;
export
declare
function
getExceptionMessage
(
exceptionDetails
:
Protocol
.
Runtime
.
ExceptionDetails
)
:
string
;
export
declare
function
valueFromRemoteObject
(
remoteObject
:
Protocol
.
Runtime
.
RemoteObject
)
:
any
;
export
declare
function
releaseObject
(
client
:
CDPSession
remoteObject
:
Protocol
.
Runtime
.
RemoteObject
)
:
Promise
<
void
>
;
export
interface
PuppeteerEventListener
{
emitter
:
CommonEventEmitter
;
eventName
:
string
|
symbol
;
handler
:
(
.
.
.
args
:
any
[
]
)
=
>
void
;
}
export
declare
function
addEventListener
(
emitter
:
CommonEventEmitter
eventName
:
string
|
symbol
handler
:
(
.
.
.
args
:
any
[
]
)
=
>
void
)
:
PuppeteerEventListener
;
export
declare
function
removeEventListeners
(
listeners
:
Array
<
{
emitter
:
CommonEventEmitter
;
eventName
:
string
|
symbol
;
handler
:
(
.
.
.
args
:
any
[
]
)
=
>
void
;
}
>
)
:
void
;
export
declare
const
isString
:
(
obj
:
unknown
)
=
>
obj
is
string
;
export
declare
const
isNumber
:
(
obj
:
unknown
)
=
>
obj
is
number
;
export
declare
function
waitForEvent
<
T
>
(
emitter
:
CommonEventEmitter
eventName
:
string
|
symbol
predicate
:
(
event
:
T
)
=
>
Promise
<
boolean
>
|
boolean
timeout
:
number
abortPromise
:
Promise
<
Error
>
)
:
Promise
<
T
>
;
export
declare
function
createJSHandle
(
context
:
ExecutionContext
remoteObject
:
Protocol
.
Runtime
.
RemoteObject
)
:
JSHandle
|
ElementHandle
<
Node
>
;
export
declare
function
evaluationString
(
fun
:
Function
|
string
.
.
.
args
:
unknown
[
]
)
:
string
;
export
declare
function
pageBindingInitString
(
type
:
string
name
:
string
)
:
string
;
export
declare
function
pageBindingDeliverResultString
(
name
:
string
seq
:
number
result
:
unknown
)
:
string
;
export
declare
function
pageBindingDeliverErrorString
(
name
:
string
seq
:
number
message
:
string
stack
?
:
string
)
:
string
;
export
declare
function
pageBindingDeliverErrorValueString
(
name
:
string
seq
:
number
value
:
unknown
)
:
string
;
export
declare
function
waitWithTimeout
<
T
>
(
promise
:
Promise
<
T
>
taskName
:
string
timeout
:
number
)
:
Promise
<
T
>
;
export
declare
function
importFS
(
)
:
Promise
<
typeof
import
(
'
fs
'
)
>
;
export
declare
function
getReadableAsBuffer
(
readable
:
Readable
path
?
:
string
)
:
Promise
<
Buffer
|
null
>
;
export
declare
function
getReadableFromProtocolStream
(
client
:
CDPSession
handle
:
string
)
:
Promise
<
Readable
>
;
