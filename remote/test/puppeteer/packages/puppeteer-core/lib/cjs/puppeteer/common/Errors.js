"
use
strict
"
;
var
__classPrivateFieldSet
=
(
this
&
&
this
.
__classPrivateFieldSet
)
|
|
function
(
receiver
state
value
kind
f
)
{
if
(
kind
=
=
=
"
m
"
)
throw
new
TypeError
(
"
Private
method
is
not
writable
"
)
;
if
(
kind
=
=
=
"
a
"
&
&
!
f
)
throw
new
TypeError
(
"
Private
accessor
was
defined
without
a
setter
"
)
;
if
(
typeof
state
=
=
=
"
function
"
?
receiver
!
=
=
state
|
|
!
f
:
!
state
.
has
(
receiver
)
)
throw
new
TypeError
(
"
Cannot
write
private
member
to
an
object
whose
class
did
not
declare
it
"
)
;
return
(
kind
=
=
=
"
a
"
?
f
.
call
(
receiver
value
)
:
f
?
f
.
value
=
value
:
state
.
set
(
receiver
value
)
)
value
;
}
;
var
__classPrivateFieldGet
=
(
this
&
&
this
.
__classPrivateFieldGet
)
|
|
function
(
receiver
state
kind
f
)
{
if
(
kind
=
=
=
"
a
"
&
&
!
f
)
throw
new
TypeError
(
"
Private
accessor
was
defined
without
a
getter
"
)
;
if
(
typeof
state
=
=
=
"
function
"
?
receiver
!
=
=
state
|
|
!
f
:
!
state
.
has
(
receiver
)
)
throw
new
TypeError
(
"
Cannot
read
private
member
from
an
object
whose
class
did
not
declare
it
"
)
;
return
kind
=
=
=
"
m
"
?
f
:
kind
=
=
=
"
a
"
?
f
.
call
(
receiver
)
:
f
?
f
.
value
:
state
.
get
(
receiver
)
;
}
;
var
_ProtocolError_code
_ProtocolError_originalMessage
;
Object
.
defineProperty
(
exports
"
__esModule
"
{
value
:
true
}
)
;
exports
.
errors
=
exports
.
ProtocolError
=
exports
.
TimeoutError
=
exports
.
CustomError
=
void
0
;
class
CustomError
extends
Error
{
constructor
(
message
)
{
super
(
message
)
;
this
.
name
=
this
.
constructor
.
name
;
Error
.
captureStackTrace
(
this
this
.
constructor
)
;
}
}
exports
.
CustomError
=
CustomError
;
class
TimeoutError
extends
CustomError
{
}
exports
.
TimeoutError
=
TimeoutError
;
class
ProtocolError
extends
CustomError
{
constructor
(
)
{
super
(
.
.
.
arguments
)
;
_ProtocolError_code
.
set
(
this
void
0
)
;
_ProtocolError_originalMessage
.
set
(
this
'
'
)
;
}
set
code
(
code
)
{
__classPrivateFieldSet
(
this
_ProtocolError_code
code
"
f
"
)
;
}
get
code
(
)
{
return
__classPrivateFieldGet
(
this
_ProtocolError_code
"
f
"
)
;
}
set
originalMessage
(
originalMessage
)
{
__classPrivateFieldSet
(
this
_ProtocolError_originalMessage
originalMessage
"
f
"
)
;
}
get
originalMessage
(
)
{
return
__classPrivateFieldGet
(
this
_ProtocolError_originalMessage
"
f
"
)
;
}
}
exports
.
ProtocolError
=
ProtocolError
;
_ProtocolError_code
=
new
WeakMap
(
)
_ProtocolError_originalMessage
=
new
WeakMap
(
)
;
exports
.
errors
=
Object
.
freeze
(
{
TimeoutError
ProtocolError
}
)
;
