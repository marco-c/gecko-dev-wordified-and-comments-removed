"
use
strict
"
;
var
__classPrivateFieldSet
=
(
this
&
&
this
.
__classPrivateFieldSet
)
|
|
function
(
receiver
state
value
kind
f
)
{
if
(
kind
=
=
=
"
m
"
)
throw
new
TypeError
(
"
Private
method
is
not
writable
"
)
;
if
(
kind
=
=
=
"
a
"
&
&
!
f
)
throw
new
TypeError
(
"
Private
accessor
was
defined
without
a
setter
"
)
;
if
(
typeof
state
=
=
=
"
function
"
?
receiver
!
=
=
state
|
|
!
f
:
!
state
.
has
(
receiver
)
)
throw
new
TypeError
(
"
Cannot
write
private
member
to
an
object
whose
class
did
not
declare
it
"
)
;
return
(
kind
=
=
=
"
a
"
?
f
.
call
(
receiver
value
)
:
f
?
f
.
value
=
value
:
state
.
set
(
receiver
value
)
)
value
;
}
;
var
__classPrivateFieldGet
=
(
this
&
&
this
.
__classPrivateFieldGet
)
|
|
function
(
receiver
state
kind
f
)
{
if
(
kind
=
=
=
"
a
"
&
&
!
f
)
throw
new
TypeError
(
"
Private
accessor
was
defined
without
a
getter
"
)
;
if
(
typeof
state
=
=
=
"
function
"
?
receiver
!
=
=
state
|
|
!
f
:
!
state
.
has
(
receiver
)
)
throw
new
TypeError
(
"
Cannot
read
private
member
from
an
object
whose
class
did
not
declare
it
"
)
;
return
kind
=
=
=
"
m
"
?
f
:
kind
=
=
=
"
a
"
?
f
.
call
(
receiver
)
:
f
?
f
.
value
:
state
.
get
(
receiver
)
;
}
;
var
_BrowserContext_connection
;
Object
.
defineProperty
(
exports
"
__esModule
"
{
value
:
true
}
)
;
exports
.
BrowserContext
=
void
0
;
const
BrowserContext_js_1
=
require
(
"
.
.
/
.
.
/
api
/
BrowserContext
.
js
"
)
;
const
Page_js_1
=
require
(
"
.
/
Page
.
js
"
)
;
class
BrowserContext
extends
BrowserContext_js_1
.
BrowserContext
{
constructor
(
connection
)
{
super
(
)
;
_BrowserContext_connection
.
set
(
this
void
0
)
;
__classPrivateFieldSet
(
this
_BrowserContext_connection
connection
"
f
"
)
;
}
async
newPage
(
)
{
const
result
=
(
await
__classPrivateFieldGet
(
this
_BrowserContext_connection
"
f
"
)
.
send
(
'
browsingContext
.
create
'
{
type
:
'
tab
'
}
)
)
;
return
new
Page_js_1
.
Page
(
__classPrivateFieldGet
(
this
_BrowserContext_connection
"
f
"
)
result
.
context
)
;
}
async
close
(
)
{
}
}
exports
.
BrowserContext
=
BrowserContext
;
_BrowserContext_connection
=
new
WeakMap
(
)
;
