import
{
EventEmitter
}
from
'
.
.
/
common
/
EventEmitter
.
js
'
;
import
{
Page
}
from
'
.
/
Page
.
js
'
;
import
{
Target
}
from
'
.
.
/
common
/
Target
.
js
'
;
import
type
{
Permission
Browser
}
from
'
.
/
Browser
.
js
'
;
export
declare
class
BrowserContext
extends
EventEmitter
{
constructor
(
)
;
targets
(
)
:
Target
[
]
;
waitForTarget
(
predicate
:
(
x
:
Target
)
=
>
boolean
|
Promise
<
boolean
>
options
?
:
{
timeout
?
:
number
;
}
)
:
Promise
<
Target
>
;
pages
(
)
:
Promise
<
Page
[
]
>
;
isIncognito
(
)
:
boolean
;
overridePermissions
(
origin
:
string
permissions
:
Permission
[
]
)
:
Promise
<
void
>
;
clearPermissionOverrides
(
)
:
Promise
<
void
>
;
newPage
(
)
:
Promise
<
Page
>
;
browser
(
)
:
Browser
;
close
(
)
:
Promise
<
void
>
;
get
id
(
)
:
string
|
undefined
;
}
