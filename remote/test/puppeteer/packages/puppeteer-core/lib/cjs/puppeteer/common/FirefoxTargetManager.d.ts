import
{
CDPSession
Connection
}
from
'
.
/
Connection
.
js
'
;
import
{
Target
}
from
'
.
/
Target
.
js
'
;
import
{
TargetFilterCallback
}
from
'
.
.
/
api
/
Browser
.
js
'
;
import
{
TargetFactory
TargetInterceptor
TargetManager
}
from
'
.
/
TargetManager
.
js
'
;
import
{
EventEmitter
}
from
'
.
/
EventEmitter
.
js
'
;
export
declare
class
FirefoxTargetManager
extends
EventEmitter
implements
TargetManager
{
#
private
;
constructor
(
connection
:
Connection
targetFactory
:
TargetFactory
targetFilterCallback
?
:
TargetFilterCallback
)
;
addTargetInterceptor
(
client
:
CDPSession
|
Connection
interceptor
:
TargetInterceptor
)
:
void
;
removeTargetInterceptor
(
client
:
CDPSession
|
Connection
interceptor
:
TargetInterceptor
)
:
void
;
setupAttachmentListeners
(
session
:
CDPSession
|
Connection
)
:
void
;
removeSessionListeners
(
session
:
CDPSession
)
:
void
;
getAvailableTargets
(
)
:
Map
<
string
Target
>
;
dispose
(
)
:
void
;
initialize
(
)
:
Promise
<
void
>
;
}
