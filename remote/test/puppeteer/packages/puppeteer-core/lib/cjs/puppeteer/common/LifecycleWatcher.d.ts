import
{
TimeoutError
}
from
'
.
/
Errors
.
js
'
;
import
{
FrameManager
}
from
'
.
/
FrameManager
.
js
'
;
import
{
Frame
}
from
'
.
/
Frame
.
js
'
;
import
{
HTTPResponse
}
from
'
.
/
HTTPResponse
.
js
'
;
export
type
PuppeteerLifeCycleEvent
=
'
load
'
|
'
domcontentloaded
'
|
'
networkidle0
'
|
'
networkidle2
'
;
export
type
ProtocolLifeCycleEvent
=
'
load
'
|
'
DOMContentLoaded
'
|
'
networkIdle
'
|
'
networkAlmostIdle
'
;
export
declare
class
LifecycleWatcher
{
#
private
;
constructor
(
frameManager
:
FrameManager
frame
:
Frame
waitUntil
:
PuppeteerLifeCycleEvent
|
PuppeteerLifeCycleEvent
[
]
timeout
:
number
)
;
navigationResponse
(
)
:
Promise
<
HTTPResponse
|
null
>
;
sameDocumentNavigationPromise
(
)
:
Promise
<
Error
|
undefined
>
;
newDocumentNavigationPromise
(
)
:
Promise
<
Error
|
undefined
>
;
lifecyclePromise
(
)
:
Promise
<
void
>
;
timeoutOrTerminationPromise
(
)
:
Promise
<
Error
|
TimeoutError
|
undefined
>
;
dispose
(
)
:
void
;
}
