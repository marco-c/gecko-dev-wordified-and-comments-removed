"
use
strict
"
;
Object
.
defineProperty
(
exports
"
__esModule
"
{
value
:
true
}
)
;
exports
.
checkVisibility
=
exports
.
createFunction
=
void
0
;
const
createdFunctions
=
new
Map
(
)
;
const
createFunction
=
(
functionValue
)
=
>
{
let
fn
=
createdFunctions
.
get
(
functionValue
)
;
if
(
fn
)
{
return
fn
;
}
fn
=
new
Function
(
return
{
functionValue
}
)
(
)
;
createdFunctions
.
set
(
functionValue
fn
)
;
return
fn
;
}
;
exports
.
createFunction
=
createFunction
;
const
HIDDEN_VISIBILITY_VALUES
=
[
'
hidden
'
'
collapse
'
]
;
const
checkVisibility
=
(
node
visible
)
=
>
{
if
(
!
node
)
{
return
visible
=
=
=
false
;
}
if
(
visible
=
=
=
undefined
)
{
return
node
;
}
const
element
=
(
node
.
nodeType
=
=
=
Node
.
TEXT_NODE
?
node
.
parentElement
:
node
)
;
const
style
=
window
.
getComputedStyle
(
element
)
;
const
isVisible
=
style
&
&
!
HIDDEN_VISIBILITY_VALUES
.
includes
(
style
.
visibility
)
&
&
!
isBoundingBoxEmpty
(
element
)
;
return
visible
=
=
=
isVisible
?
node
:
false
;
}
;
exports
.
checkVisibility
=
checkVisibility
;
function
isBoundingBoxEmpty
(
element
)
{
const
rect
=
element
.
getBoundingClientRect
(
)
;
return
rect
.
width
=
=
=
0
|
|
rect
.
height
=
=
=
0
;
}
