export
{
Protocol
}
from
'
puppeteer
-
core
'
;
export
*
from
'
puppeteer
-
core
/
internal
/
puppeteer
-
core
.
js
'
;
import
{
PuppeteerNode
}
from
'
puppeteer
-
core
/
internal
/
node
/
PuppeteerNode
.
js
'
;
declare
const
puppeteer
:
PuppeteerNode
;
export
declare
const
connect
:
(
options
:
import
(
"
puppeteer
-
core
/
internal
/
puppeteer
-
core
.
js
"
)
.
ConnectOptions
)
=
>
Promise
<
import
(
"
puppeteer
-
core
/
internal
/
puppeteer
-
core
.
js
"
)
.
Browser
>
createBrowserFetcher
:
(
options
?
:
Partial
<
import
(
"
puppeteer
-
core
/
internal
/
puppeteer
-
core
.
js
"
)
.
BrowserFetcherOptions
>
|
undefined
)
=
>
import
(
"
puppeteer
-
core
/
internal
/
puppeteer
-
core
.
js
"
)
.
BrowserFetcher
defaultArgs
:
(
options
?
:
import
(
"
puppeteer
-
core
/
internal
/
puppeteer
-
core
.
js
"
)
.
BrowserLaunchArgumentOptions
|
undefined
)
=
>
string
[
]
executablePath
:
(
channel
?
:
import
(
"
puppeteer
-
core
/
internal
/
puppeteer
-
core
.
js
"
)
.
ChromeReleaseChannel
|
undefined
)
=
>
string
launch
:
(
options
?
:
import
(
"
puppeteer
-
core
/
internal
/
puppeteer
-
core
.
js
"
)
.
PuppeteerLaunchOptions
|
undefined
)
=
>
Promise
<
import
(
"
puppeteer
-
core
/
internal
/
puppeteer
-
core
.
js
"
)
.
Browser
>
;
export
default
puppeteer
;
