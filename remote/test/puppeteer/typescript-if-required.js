const
child_process
=
require
(
'
child_process
'
)
;
const
path
=
require
(
'
path
'
)
;
const
fs
=
require
(
'
fs
'
)
;
const
{
promisify
}
=
require
(
'
util
'
)
;
const
exec
=
promisify
(
child_process
.
exec
)
;
const
fsAccess
=
promisify
(
fs
.
access
)
;
const
fileExists
=
async
filePath
=
>
{
return
fsAccess
(
filePath
)
.
then
(
(
)
=
>
{
return
true
;
}
)
.
catch
(
(
)
=
>
{
return
false
;
}
)
;
}
;
async
function
compileTypeScript
(
)
{
return
exec
(
'
npm
run
build
'
)
.
catch
(
error
=
>
{
console
.
error
(
'
Error
running
TypeScript
'
error
)
;
process
.
exit
(
1
)
;
}
)
;
}
async
function
compileTypeScriptIfRequired
(
)
{
const
libPath
=
path
.
join
(
__dirname
'
lib
'
)
;
const
libExists
=
await
fileExists
(
libPath
)
;
if
(
libExists
)
{
return
;
}
console
.
log
(
'
Puppeteer
:
'
'
Compiling
TypeScript
.
.
.
'
)
;
await
compileTypeScript
(
)
;
}
if
(
require
.
main
=
=
=
module
)
{
compileTypeScriptIfRequired
(
)
;
}
module
.
exports
=
compileTypeScriptIfRequired
;
