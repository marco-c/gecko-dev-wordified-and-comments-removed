const
{
TabManager
}
=
ChromeUtils
.
importESModule
(
"
chrome
:
/
/
remote
/
content
/
shared
/
TabManager
.
sys
.
mjs
"
)
;
class
MockTopBrowsingContext
{
constructor
(
)
{
this
.
embedderElement
=
{
permanentKey
:
{
}
}
;
this
.
id
=
1
;
this
.
top
=
this
;
}
}
class
MockBrowsingContext
{
constructor
(
)
{
this
.
id
=
2
;
const
topContext
=
new
MockTopBrowsingContext
(
)
;
this
.
parent
=
topContext
;
this
.
top
=
topContext
;
}
}
const
mockTopBrowsingContext
=
new
MockTopBrowsingContext
(
)
;
const
mockBrowsingContext
=
new
MockBrowsingContext
(
)
;
add_task
(
async
function
test_getIdForBrowsingContext
(
)
{
equal
(
TabManager
.
getIdForBrowsingContext
(
null
)
null
)
;
equal
(
TabManager
.
getIdForBrowsingContext
(
undefined
)
null
)
;
equal
(
TabManager
.
getIdForBrowsingContext
(
mockBrowsingContext
)
mockBrowsingContext
.
id
)
;
const
browser
=
mockTopBrowsingContext
.
embedderElement
;
equal
(
TabManager
.
getIdForBrowsingContext
(
mockTopBrowsingContext
)
TabManager
.
getIdForBrowser
(
browser
)
)
;
}
)
;
