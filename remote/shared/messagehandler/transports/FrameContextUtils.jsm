"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
isBrowsingContextCompatible
"
]
;
function
isExtensionContext
(
browsingContext
)
{
let
principal
;
if
(
CanonicalBrowsingContext
.
isInstance
(
browsingContext
)
)
{
principal
=
browsingContext
.
currentWindowGlobal
.
documentPrincipal
;
}
else
{
principal
=
browsingContext
.
window
.
document
.
nodePrincipal
;
}
return
principal
.
isAddonOrExpandedAddonPrincipal
;
}
function
isParentProcess
(
browsingContext
)
{
if
(
CanonicalBrowsingContext
.
isInstance
(
browsingContext
)
)
{
return
browsingContext
.
currentWindowGlobal
.
osPid
=
=
=
-
1
;
}
return
false
;
}
function
isBrowsingContextCompatible
(
browsingContext
options
=
{
}
)
{
const
{
browserId
}
=
options
;
if
(
browserId
!
=
=
undefined
&
&
browsingContext
.
browserId
!
=
=
browserId
)
{
return
false
;
}
return
(
!
isExtensionContext
(
browsingContext
)
&
&
!
isParentProcess
(
browsingContext
)
)
;
}
