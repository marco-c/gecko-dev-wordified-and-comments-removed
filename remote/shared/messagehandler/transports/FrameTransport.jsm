"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
FrameTransport
"
]
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
MessageHandlerFrameActor
:
"
chrome
:
/
/
remote
/
content
/
shared
/
messagehandler
/
transports
/
js
-
window
-
actors
/
MessageHandlerFrameActor
.
jsm
"
}
)
;
class
FrameTransport
{
constructor
(
messageHandler
)
{
this
.
_messageHandler
=
messageHandler
;
MessageHandlerFrameActor
.
register
(
)
;
}
forwardCommand
(
command
)
{
const
browsingContext
=
BrowsingContext
.
get
(
command
.
destination
.
id
)
;
if
(
!
browsingContext
)
{
throw
new
Error
(
"
Unable
to
find
a
BrowsingContext
for
id
"
+
command
.
destination
.
id
)
;
}
return
browsingContext
.
currentWindowGlobal
.
getActor
(
"
MessageHandlerFrame
"
)
.
sendCommand
(
command
this
.
_messageHandler
.
sessionId
)
;
}
toString
(
)
{
return
[
object
{
this
.
constructor
.
name
}
{
this
.
_messageHandler
.
key
}
]
;
}
}
