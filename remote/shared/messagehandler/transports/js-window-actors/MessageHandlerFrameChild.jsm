"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
MessageHandlerFrameChild
"
]
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
MessageHandlerRegistry
:
"
chrome
:
/
/
remote
/
content
/
shared
/
messagehandler
/
MessageHandlerRegistry
.
jsm
"
WindowGlobalMessageHandler
:
"
chrome
:
/
/
remote
/
content
/
shared
/
messagehandler
/
WindowGlobalMessageHandler
.
jsm
"
}
)
;
class
MessageHandlerFrameChild
extends
JSWindowActorChild
{
actorCreated
(
)
{
this
.
type
=
WindowGlobalMessageHandler
.
type
;
this
.
context
=
this
.
manager
.
browsingContext
;
}
receiveMessage
(
message
)
{
if
(
message
.
name
=
=
=
"
MessageHandlerFrameParent
:
sendCommand
"
)
{
const
{
sessionId
command
}
=
message
.
data
;
const
messageHandler
=
this
.
_getMessageHandler
(
sessionId
)
;
return
messageHandler
.
handleCommand
(
command
)
;
}
return
null
;
}
_getMessageHandler
(
sessionId
)
{
return
MessageHandlerRegistry
.
getOrCreateMessageHandler
(
sessionId
this
.
type
this
.
context
)
;
}
didDestroy
(
)
{
MessageHandlerRegistry
.
contextDestroyed
(
this
.
context
this
.
type
)
;
}
}
