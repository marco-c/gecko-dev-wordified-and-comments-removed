"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
event
"
]
;
const
{
Module
}
=
ChromeUtils
.
import
(
"
chrome
:
/
/
remote
/
content
/
shared
/
messagehandler
/
Module
.
jsm
"
)
;
class
EventModule
extends
Module
{
destroy
(
)
{
}
interceptEvent
(
name
payload
)
{
if
(
name
=
=
=
"
event
.
testEventWithInterception
"
)
{
return
{
.
.
.
payload
additionalInformation
:
"
information
added
through
interception
"
}
;
}
return
payload
;
}
testEmitWindowGlobalInRootEvent
(
params
destination
)
{
this
.
emitEvent
(
"
event
-
from
-
window
-
global
-
in
-
root
"
{
text
:
windowglobal
-
in
-
root
event
for
{
destination
.
id
}
}
)
;
}
}
const
event
=
EventModule
;
