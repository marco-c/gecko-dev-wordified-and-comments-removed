"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
commandwindowglobalonly
"
]
;
const
{
Module
}
=
ChromeUtils
.
import
(
"
chrome
:
/
/
remote
/
content
/
shared
/
messagehandler
/
Module
.
jsm
"
)
;
class
CommandWindowGlobalOnly
extends
Module
{
destroy
(
)
{
}
testOnlyInWindowGlobal
(
)
{
return
"
only
-
in
-
windowglobal
"
;
}
testBroadcast
(
)
{
return
broadcast
-
{
this
.
messageHandler
.
contextId
}
;
}
testBroadcastWithParameter
(
params
)
{
return
broadcast
-
{
this
.
messageHandler
.
contextId
}
-
{
params
.
value
}
;
}
testError
(
)
{
throw
new
Error
(
"
error
-
from
-
module
"
)
;
}
testMissingIntermediaryMethod
(
params
destination
)
{
return
this
.
messageHandler
.
handleCommand
(
{
moduleName
:
"
commandwindowglobalonly
"
commandName
:
"
missingMethod
"
destination
}
)
;
}
}
const
commandwindowglobalonly
=
CommandWindowGlobalOnly
;
