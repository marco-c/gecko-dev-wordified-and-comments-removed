"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
command
"
]
;
const
{
Module
}
=
ChromeUtils
.
import
(
"
chrome
:
/
/
remote
/
content
/
shared
/
messagehandler
/
Module
.
jsm
"
)
;
class
Command
extends
Module
{
constructor
(
messageHandler
)
{
super
(
messageHandler
)
;
this
.
_testCategorySessionData
=
[
]
;
}
destroy
(
)
{
}
_applySessionData
(
params
)
{
if
(
params
.
category
=
=
=
"
testCategory
"
)
{
this
.
_testCategorySessionData
=
this
.
_testCategorySessionData
.
concat
(
params
.
values
)
;
return
{
newData
:
params
.
values
.
join
(
"
"
)
sessionData
:
this
.
_testCategorySessionData
.
join
(
"
"
)
contextId
:
this
.
messageHandler
.
contextId
}
;
}
return
{
}
;
}
testWindowGlobalModule
(
)
{
return
"
windowglobal
-
value
"
;
}
testSetValue
(
params
)
{
const
{
value
}
=
params
;
this
.
_testValue
=
value
;
}
testGetValue
(
)
{
return
this
.
_testValue
;
}
testForwardToWindowGlobal
(
)
{
return
"
forward
-
to
-
windowglobal
-
value
"
;
}
}
const
command
=
Command
;
