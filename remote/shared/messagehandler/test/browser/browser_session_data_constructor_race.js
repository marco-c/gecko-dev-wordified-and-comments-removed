"
use
strict
"
;
const
{
WindowGlobalMessageHandler
}
=
ChromeUtils
.
import
(
"
chrome
:
/
/
remote
/
content
/
shared
/
messagehandler
/
WindowGlobalMessageHandler
.
jsm
"
)
;
const
TEST_PAGE
=
"
https
:
/
/
example
.
com
/
document
-
builder
.
sjs
?
html
=
tab
"
;
add_task
(
async
function
(
)
{
const
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
TEST_PAGE
)
;
await
BrowserTestUtils
.
browserLoaded
(
tab
.
linkedBrowser
)
;
const
browsingContext
=
tab
.
linkedBrowser
.
browsingContext
;
const
root
=
createRootMessageHandler
(
"
session
-
id
-
event
"
)
;
info
(
"
Add
some
session
data
for
the
command
module
"
)
;
await
root
.
addSessionData
(
{
moduleName
:
"
command
"
category
:
"
testCategory
"
contextDescriptor
:
contextDescriptorAll
values
:
[
"
some
-
value
"
]
}
)
;
info
(
"
Reload
the
current
tab
to
create
new
message
handlers
and
modules
"
)
;
const
finished
=
BrowserTestUtils
.
browserLoaded
(
tab
.
linkedBrowser
)
;
gBrowser
.
reloadTab
(
tab
)
;
await
finished
;
info
(
"
Check
if
the
command
module
was
created
by
the
MessageHandler
constructor
"
)
;
const
isCreatedByMessageHandlerConstructor
=
await
root
.
handleCommand
(
{
moduleName
:
"
command
"
commandName
:
"
testIsCreatedByMessageHandlerConstructor
"
destination
:
{
type
:
WindowGlobalMessageHandler
.
type
id
:
browsingContext
.
id
}
}
)
;
is
(
isCreatedByMessageHandlerConstructor
false
"
The
command
module
from
session
data
should
not
be
created
by
the
MessageHandler
constructor
"
)
;
root
.
destroy
(
)
;
gBrowser
.
removeTab
(
tab
)
;
}
)
;
