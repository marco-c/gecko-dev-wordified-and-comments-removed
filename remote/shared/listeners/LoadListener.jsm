"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
LoadListener
"
]
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
EventEmitter
:
"
resource
:
/
/
gre
/
modules
/
EventEmitter
.
jsm
"
}
)
;
class
LoadListener
{
#
abortController
;
#
window
;
constructor
(
win
)
{
EventEmitter
.
decorate
(
this
)
;
this
.
#
abortController
=
null
;
this
.
#
window
=
win
;
}
destroy
(
)
{
this
.
stopListening
(
)
;
}
startListening
(
)
{
if
(
this
.
#
abortController
)
{
return
;
}
this
.
#
abortController
=
new
AbortController
(
)
;
this
.
#
window
.
addEventListener
(
"
DOMContentLoaded
"
this
.
#
onDOMContentLoaded
{
mozSystemGroup
:
true
signal
:
this
.
#
abortController
.
signal
}
)
;
}
stopListening
(
)
{
if
(
!
this
.
#
abortController
)
{
return
;
}
this
.
#
abortController
.
abort
(
)
;
this
.
#
abortController
=
null
;
}
#
onDOMContentLoaded
=
event
=
>
{
this
.
emit
(
"
DOMContentLoaded
"
{
target
:
event
.
target
}
)
;
}
;
}
