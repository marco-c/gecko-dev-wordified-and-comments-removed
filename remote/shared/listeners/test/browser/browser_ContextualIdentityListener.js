const
{
ContextualIdentityListener
}
=
ChromeUtils
.
importESModule
(
"
chrome
:
/
/
remote
/
content
/
shared
/
listeners
/
ContextualIdentityListener
.
sys
.
mjs
"
)
;
add_task
(
async
function
test_createdOnNewContextualIdentity
(
)
{
const
listener
=
new
ContextualIdentityListener
(
)
;
const
created
=
listener
.
once
(
"
created
"
)
;
listener
.
startListening
(
)
;
ContextualIdentityService
.
create
(
"
test_name
"
)
;
const
{
identity
}
=
await
created
;
is
(
identity
.
name
"
test_name
"
"
Received
expected
identity
"
)
;
listener
.
stopListening
(
)
;
ContextualIdentityService
.
remove
(
identity
.
userContextId
)
;
}
)
;
add_task
(
async
function
test_deletedOnRemovedContextualIdentity
(
)
{
const
listener
=
new
ContextualIdentityListener
(
)
;
const
deleted
=
listener
.
once
(
"
deleted
"
)
;
listener
.
startListening
(
)
;
const
testIdentity
=
ContextualIdentityService
.
create
(
"
test_name
"
)
;
ContextualIdentityService
.
remove
(
testIdentity
.
userContextId
)
;
const
{
identity
}
=
await
deleted
;
is
(
identity
.
name
"
test_name
"
"
Received
expected
identity
"
)
;
listener
.
stopListening
(
)
;
}
)
;
