"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
Emulation
"
]
;
const
{
ContentProcessDomain
}
=
ChromeUtils
.
import
(
"
chrome
:
/
/
remote
/
content
/
domains
/
ContentProcessDomain
.
jsm
"
)
;
class
Emulation
extends
ContentProcessDomain
{
async
_awaitViewportDimensions
(
{
width
height
}
)
{
const
win
=
this
.
content
;
if
(
win
.
innerWidth
=
=
=
width
&
&
win
.
innerHeight
=
=
=
height
)
{
return
;
}
await
new
Promise
(
resolve
=
>
{
win
.
addEventListener
(
"
resize
"
function
resized
(
)
{
if
(
win
.
innerWidth
=
=
=
width
&
&
win
.
innerHeight
=
=
=
height
)
{
win
.
removeEventListener
(
"
resize
"
resized
)
;
resolve
(
)
;
}
}
)
;
}
)
;
}
_setDPPXOverride
(
dppx
)
{
this
.
docShell
.
contentViewer
.
overrideDPPX
=
dppx
;
}
}
