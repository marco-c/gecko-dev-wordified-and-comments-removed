"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
Performance
"
]
;
var
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
lazy
=
{
}
;
XPCOMUtils
.
defineLazyModuleGetters
(
lazy
{
ContentProcessDomain
:
"
chrome
:
/
/
remote
/
content
/
cdp
/
domains
/
ContentProcessDomain
.
jsm
"
}
)
;
class
Performance
extends
lazy
.
ContentProcessDomain
{
constructor
(
session
)
{
super
(
session
)
;
this
.
enabled
=
false
;
}
destructor
(
)
{
this
.
disable
(
)
;
super
.
destructor
(
)
;
}
async
enable
(
)
{
if
(
!
this
.
enabled
)
{
this
.
enabled
=
true
;
}
}
disable
(
)
{
if
(
this
.
enabled
)
{
this
.
enabled
=
false
;
}
}
}
