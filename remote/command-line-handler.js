"
use
strict
"
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
ChromeUtils
.
defineModuleGetter
(
this
"
RemoteAgent
"
"
chrome
:
/
/
remote
/
content
/
RemoteAgent
.
jsm
"
)
;
const
RemoteAgentFactory
=
{
createInstance
(
outer
iid
)
{
if
(
outer
)
{
throw
Cr
.
NS_ERROR_NO_AGGREGATION
;
}
if
(
!
Services
.
prefs
.
getBoolPref
(
"
remote
.
enabled
"
)
)
{
return
{
}
;
}
return
RemoteAgent
.
QueryInterface
(
iid
)
;
}
}
;
function
RemoteAgentComponent
(
)
{
}
RemoteAgentComponent
.
prototype
=
{
classDescription
:
"
Remote
Agent
"
classID
:
Components
.
ID
(
"
{
8f685a9d
-
8181
-
46d6
-
a71d
-
869289099c6d
}
"
)
contractID
:
"
mozilla
.
org
/
remote
/
agent
"
_xpcom_factory
:
RemoteAgentFactory
}
;
this
.
NSGetFactory
=
XPCOMUtils
.
generateNSGetFactory
(
[
RemoteAgentComponent
]
)
;
