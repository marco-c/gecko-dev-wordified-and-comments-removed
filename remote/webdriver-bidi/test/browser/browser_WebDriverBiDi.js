"
use
strict
"
;
const
{
RemoteAgent
:
RemoteAgentModule
}
=
ChromeUtils
.
importESModule
(
"
chrome
:
/
/
remote
/
content
/
components
/
RemoteAgent
.
sys
.
mjs
"
)
;
const
{
WebDriverBiDi
}
=
ChromeUtils
.
importESModule
(
"
chrome
:
/
/
remote
/
content
/
webdriver
-
bidi
/
WebDriverBiDi
.
sys
.
mjs
"
)
;
async
function
runBiDiTest
(
test
options
=
{
}
)
{
const
{
capabilities
=
{
}
connection
isBidi
=
false
}
=
options
;
const
flags
=
new
Set
(
)
;
if
(
isBidi
)
{
flags
.
add
(
"
bidi
"
)
;
}
else
{
flags
.
add
(
"
http
"
)
;
}
const
wdBiDi
=
new
WebDriverBiDi
(
RemoteAgentModule
)
;
await
wdBiDi
.
createSession
(
capabilities
flags
connection
)
;
await
test
(
wdBiDi
)
;
wdBiDi
.
deleteSession
(
)
;
}
add_task
(
async
function
test_createSession
(
)
{
const
bidi
=
new
WebDriverBiDi
(
RemoteAgent
)
;
await
Assert
.
rejects
(
bidi
.
createSession
(
{
}
)
/
TypeError
/
)
;
for
(
const
flags
of
[
[
]
[
"
bidi
"
"
http
"
]
]
)
{
await
Assert
.
rejects
(
bidi
.
createSession
(
{
}
new
Set
(
flags
)
)
/
SessionNotCreatedError
:
/
)
;
}
await
runBiDiTest
(
wdBiDi
=
>
{
is
(
typeof
wdBiDi
.
session
.
id
"
string
"
)
;
is
(
wdBiDi
.
session
.
path
/
session
/
{
wdBiDi
.
session
.
id
}
)
;
}
)
;
await
runBiDiTest
(
wdBiDi
=
>
{
is
(
wdBiDi
.
session
.
bidi
false
)
;
is
(
wdBiDi
.
session
.
http
true
)
;
}
{
isBidi
:
false
}
)
;
await
runBiDiTest
(
wdBiDi
=
>
{
is
(
wdBiDi
.
session
.
bidi
true
)
;
is
(
wdBiDi
.
session
.
http
false
)
;
}
{
isBidi
:
true
}
)
;
const
capabilities
=
{
acceptInsecureCerts
:
true
unhandledPromptBehavior
:
"
ignore
"
pageLoadStrategy
:
"
eager
"
strictFileInteractability
:
true
timeouts
:
{
script
:
1000
}
}
;
await
runBiDiTest
(
wdBiDi
=
>
{
is
(
wdBiDi
.
session
.
bidi
false
)
;
is
(
wdBiDi
.
session
.
acceptInsecureCerts
true
)
;
is
(
wdBiDi
.
session
.
pageLoadStrategy
"
eager
"
)
;
is
(
wdBiDi
.
session
.
strictFileInteractability
true
)
;
is
(
wdBiDi
.
session
.
timeouts
.
script
1000
)
;
is
(
wdBiDi
.
session
.
userPromptHandler
.
toJSON
(
)
"
ignore
"
)
;
is
(
wdBiDi
.
session
.
webSocketUrl
undefined
)
;
}
{
capabilities
isBidi
:
false
}
)
;
capabilities
.
webSocketUrl
=
true
;
await
runBiDiTest
(
wdBiDi
=
>
{
is
(
wdBiDi
.
session
.
bidi
true
)
;
is
(
wdBiDi
.
session
.
acceptInsecureCerts
true
)
;
is
(
wdBiDi
.
session
.
pageLoadStrategy
"
eager
"
)
;
is
(
wdBiDi
.
session
.
strictFileInteractability
true
)
;
is
(
wdBiDi
.
session
.
timeouts
.
script
1000
)
;
is
(
wdBiDi
.
session
.
userPromptHandler
.
toJSON
(
)
"
ignore
"
)
;
is
(
wdBiDi
.
session
.
webSocketUrl
ws
:
/
/
127
.
0
.
0
.
1
:
9222
/
session
/
{
wdBiDi
.
session
.
id
}
)
;
}
{
capabilities
isBidi
:
false
}
)
;
await
runBiDiTest
(
wdBiDi
=
>
{
is
(
wdBiDi
.
session
.
bidi
true
)
;
is
(
wdBiDi
.
session
.
acceptInsecureCerts
true
)
;
is
(
wdBiDi
.
session
.
userPromptHandler
.
toJSON
(
)
"
ignore
"
)
;
is
(
wdBiDi
.
session
.
pageLoadStrategy
undefined
)
;
is
(
wdBiDi
.
session
.
strictFileInteractability
undefined
)
;
is
(
wdBiDi
.
session
.
timeouts
undefined
)
;
is
(
wdBiDi
.
session
.
webSocketUrl
undefined
)
;
}
{
capabilities
isBidi
:
true
}
)
;
}
)
;
