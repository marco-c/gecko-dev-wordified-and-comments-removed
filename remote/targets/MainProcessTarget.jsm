"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
MainProcessTarget
"
]
;
const
{
Target
}
=
ChromeUtils
.
import
(
"
chrome
:
/
/
remote
/
content
/
targets
/
Target
.
jsm
"
)
;
const
{
Session
}
=
ChromeUtils
.
import
(
"
chrome
:
/
/
remote
/
content
/
sessions
/
Session
.
jsm
"
)
;
const
{
RemoteAgent
}
=
ChromeUtils
.
import
(
"
chrome
:
/
/
remote
/
content
/
RemoteAgent
.
jsm
"
)
;
const
UUIDGen
=
Cc
[
"
mozilla
.
org
/
uuid
-
generator
;
1
"
]
.
getService
(
Ci
.
nsIUUIDGenerator
)
;
class
MainProcessTarget
extends
Target
{
constructor
(
targets
)
{
super
(
targets
Session
)
;
this
.
type
=
"
main
-
process
"
;
this
.
id
=
UUIDGen
.
generateUUID
(
)
.
toString
(
)
.
slice
(
1
-
1
)
;
this
.
path
=
/
devtools
/
browser
/
{
this
.
id
}
;
}
get
wsDebuggerURL
(
)
{
const
{
host
port
}
=
RemoteAgent
;
return
ws
:
/
/
{
host
}
:
{
port
}
{
this
.
path
}
;
}
toString
(
)
{
return
[
object
MainProcessTarget
]
;
}
toJSON
(
)
{
return
{
description
:
"
Main
process
target
"
devtoolsFrontendUrl
:
"
"
faviconUrl
:
"
"
id
:
this
.
id
title
:
"
Main
process
target
"
type
:
this
.
type
url
:
"
"
webSocketDebuggerUrl
:
this
.
wsDebuggerURL
}
;
}
}
