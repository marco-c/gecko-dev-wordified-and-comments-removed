#
ifndef
__tls13exthandle_h_
#
define
__tls13exthandle_h_
PRInt32
tls13_ServerSendStatusRequestXtn
(
sslSocket
*
ss
PRBool
append
PRUint32
maxBytes
)
;
PRInt32
tls13_ClientSendKeyShareXtn
(
sslSocket
*
ss
PRBool
append
PRUint32
maxBytes
)
;
SECStatus
tls13_ClientHandleKeyShareXtn
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
SECStatus
tls13_ClientHandleKeyShareXtnHrr
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
SECStatus
tls13_ServerHandleKeyShareXtn
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
PRInt32
tls13_ClientSendPreSharedKeyXtn
(
sslSocket
*
ss
PRBool
append
PRUint32
maxBytes
)
;
SECStatus
tls13_ServerHandlePreSharedKeyXtn
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
SECStatus
tls13_ClientHandlePreSharedKeyXtn
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
PRInt32
tls13_ClientSendEarlyDataXtn
(
sslSocket
*
ss
PRBool
append
PRUint32
maxBytes
)
;
SECStatus
tls13_ServerHandleEarlyDataXtn
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
SECStatus
tls13_ClientHandleEarlyDataXtn
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
SECStatus
tls13_ClientHandleTicketEarlyDataInfoXtn
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
SECStatus
tls13_ClientHandleSigAlgsXtn
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
PRInt32
tls13_ClientSendSupportedVersionsXtn
(
sslSocket
*
ss
PRBool
append
PRUint32
maxBytes
)
;
SECStatus
tls13_ClientHandleHrrCookie
(
sslSocket
*
ss
PRUint16
ex_type
SECItem
*
data
)
;
PRInt32
tls13_ClientSendHrrCookieXtn
(
sslSocket
*
ss
PRBool
append
PRUint32
maxBytes
)
;
#
endif
