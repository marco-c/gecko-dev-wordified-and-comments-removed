#
ifndef
__ssl3ext_h_
#
define
__ssl3ext_h_
typedef
enum
{
sni_nametype_hostname
}
SNINameType
;
typedef
struct
TLSExtensionDataStr
TLSExtensionData
;
typedef
PRInt32
(
*
ssl3HelloExtensionSenderFunc
)
(
const
sslSocket
*
ss
TLSExtensionData
*
xtnData
PRBool
append
PRUint32
maxBytes
)
;
typedef
SECStatus
(
*
ssl3ExtensionHandlerFunc
)
(
const
sslSocket
*
ss
TLSExtensionData
*
xtnData
PRUint16
ex_type
SECItem
*
data
)
;
typedef
struct
{
PRInt32
ex_type
;
ssl3HelloExtensionSenderFunc
ex_sender
;
}
ssl3HelloExtensionSender
;
typedef
struct
{
PRInt32
ex_type
;
ssl3ExtensionHandlerFunc
ex_handler
;
}
ssl3ExtensionHandler
;
struct
TLSExtensionDataStr
{
ssl3HelloExtensionSender
serverHelloSenders
[
SSL_MAX_EXTENSIONS
]
;
ssl3HelloExtensionSender
encryptedExtensionsSenders
[
SSL_MAX_EXTENSIONS
]
;
ssl3HelloExtensionSender
certificateSenders
[
SSL_MAX_EXTENSIONS
]
;
PRUint16
numAdvertised
;
PRUint16
numNegotiated
;
PRUint16
advertised
[
SSL_MAX_EXTENSIONS
]
;
PRUint16
negotiated
[
SSL_MAX_EXTENSIONS
]
;
PRUint16
paddingLen
;
PRBool
ticketTimestampVerified
;
PRBool
emptySessionTicket
;
PRBool
sentSessionTicketInClientHello
;
SECItem
psk_ke_modes
;
PRUint32
max_early_data_size
;
SECItem
*
sniNameArr
;
PRUint32
sniNameArrSize
;
SECItem
signedCertTimestamps
;
PRBool
peerSupportsFfdheGroups
;
SSLSignatureScheme
*
clientSigSchemes
;
unsigned
int
numClientSigScheme
;
SECItem
nextProto
;
SSLNextProtoState
nextProtoState
;
PRUint16
dtlsSRTPCipherSuite
;
SECItem
pskBinder
;
unsigned
long
pskBinderPrefixLen
;
PRCList
remoteKeyShares
;
}
;
typedef
struct
TLSExtensionStr
{
PRCList
link
;
PRUint16
type
;
SECItem
data
;
}
TLSExtension
;
SECStatus
ssl3_HandleExtensions
(
sslSocket
*
ss
SSL3Opaque
*
*
b
PRUint32
*
length
SSL3HandshakeType
handshakeMessage
)
;
SECStatus
ssl3_ParseExtensions
(
sslSocket
*
ss
SSL3Opaque
*
*
b
PRUint32
*
length
)
;
SECStatus
ssl3_HandleParsedExtensions
(
sslSocket
*
ss
SSL3HandshakeType
handshakeMessage
)
;
TLSExtension
*
ssl3_FindExtension
(
sslSocket
*
ss
SSLExtensionType
extension_type
)
;
void
ssl3_DestroyRemoteExtensions
(
PRCList
*
list
)
;
void
ssl3_InitExtensionData
(
TLSExtensionData
*
xtnData
)
;
void
ssl3_ResetExtensionData
(
TLSExtensionData
*
xtnData
)
;
PRBool
ssl3_ExtensionNegotiated
(
const
sslSocket
*
ss
PRUint16
ex_type
)
;
PRBool
ssl3_ClientExtensionAdvertised
(
const
sslSocket
*
ss
PRUint16
ex_type
)
;
SECStatus
ssl3_RegisterExtensionSender
(
const
sslSocket
*
ss
TLSExtensionData
*
xtnData
PRUint16
ex_type
ssl3HelloExtensionSenderFunc
cb
)
;
PRInt32
ssl3_CallHelloExtensionSenders
(
sslSocket
*
ss
PRBool
append
PRUint32
maxBytes
const
ssl3HelloExtensionSender
*
sender
)
;
void
ssl3_CalculatePaddingExtLen
(
sslSocket
*
ss
unsigned
int
clientHelloLength
)
;
SECStatus
ssl3_ExtAppendHandshake
(
const
sslSocket
*
ss
const
void
*
void_src
PRInt32
bytes
)
;
SECStatus
ssl3_ExtAppendHandshakeNumber
(
const
sslSocket
*
ss
PRInt32
num
PRInt32
lenSize
)
;
SECStatus
ssl3_ExtAppendHandshakeVariable
(
const
sslSocket
*
ss
const
SSL3Opaque
*
src
PRInt32
bytes
PRInt32
lenSize
)
;
void
ssl3_ExtSendAlert
(
const
sslSocket
*
ss
SSL3AlertLevel
level
SSL3AlertDescription
desc
)
;
void
ssl3_ExtDecodeError
(
const
sslSocket
*
ss
)
;
SECStatus
ssl3_ExtConsumeHandshake
(
const
sslSocket
*
ss
void
*
v
PRUint32
bytes
SSL3Opaque
*
*
b
PRUint32
*
length
)
;
SECStatus
ssl3_ExtConsumeHandshakeNumber
(
const
sslSocket
*
ss
PRUint32
*
num
PRUint32
bytes
SSL3Opaque
*
*
b
PRUint32
*
length
)
;
SECStatus
ssl3_ExtConsumeHandshakeVariable
(
const
sslSocket
*
ss
SECItem
*
i
PRUint32
bytes
SSL3Opaque
*
*
b
PRUint32
*
length
)
;
#
endif
