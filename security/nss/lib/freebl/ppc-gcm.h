#
ifndef
PPC_GCM_H
#
define
PPC_GCM_H
1
#
include
"
blapii
.
h
"
typedef
struct
ppc_AES_GCMContextStr
ppc_AES_GCMContext
;
ppc_AES_GCMContext
*
ppc_AES_GCM_CreateContext
(
void
*
context
freeblCipherFunc
cipher
const
unsigned
char
*
params
)
;
void
ppc_AES_GCM_DestroyContext
(
ppc_AES_GCMContext
*
gcm
PRBool
freeit
)
;
SECStatus
ppc_AES_GCM_EncryptUpdate
(
ppc_AES_GCMContext
*
gcm
unsigned
char
*
outbuf
unsigned
int
*
outlen
unsigned
int
maxout
const
unsigned
char
*
inbuf
unsigned
int
inlen
unsigned
int
blocksize
)
;
SECStatus
ppc_AES_GCM_DecryptUpdate
(
ppc_AES_GCMContext
*
gcm
unsigned
char
*
outbuf
unsigned
int
*
outlen
unsigned
int
maxout
const
unsigned
char
*
inbuf
unsigned
int
inlen
unsigned
int
blocksize
)
;
SECStatus
ppc_AES_GCM_EncryptAEAD
(
ppc_AES_GCMContext
*
gcm
unsigned
char
*
outbuf
unsigned
int
*
outlen
unsigned
int
maxout
const
unsigned
char
*
inbuf
unsigned
int
inlen
void
*
params
unsigned
int
paramLen
const
unsigned
char
*
aad
unsigned
int
aadLen
unsigned
int
blocksize
)
;
SECStatus
ppc_AES_GCM_DecryptAEAD
(
ppc_AES_GCMContext
*
gcm
unsigned
char
*
outbuf
unsigned
int
*
outlen
unsigned
int
maxout
const
unsigned
char
*
inbuf
unsigned
int
inlen
void
*
params
unsigned
int
paramLen
const
unsigned
char
*
aad
unsigned
int
aadLen
unsigned
int
blocksize
)
;
void
ppc_aes_gcmINIT
(
unsigned
char
Htbl
[
8
*
16
]
PRUint32
*
KS
int
NR
)
;
void
ppc_aes_gcmTAG
(
unsigned
char
Htbl
[
8
*
16
]
unsigned
char
*
Tp
unsigned
long
Mlen
unsigned
long
Alen
unsigned
char
*
X0
unsigned
char
*
TAG
)
;
void
ppc_aes_gcmHASH
(
unsigned
char
Htbl
[
8
*
16
]
const
unsigned
char
*
AAD
unsigned
long
Alen
unsigned
char
*
Tp
)
;
void
ppc_aes_gcmCRYPT
(
const
unsigned
char
*
PT
unsigned
char
*
CT
unsigned
long
len
unsigned
char
*
CTRP
PRUint32
*
KS
int
NR
)
;
#
endif
