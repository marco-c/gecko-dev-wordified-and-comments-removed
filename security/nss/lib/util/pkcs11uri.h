#
ifndef
_PKCS11URI_H_
#
define
_PKCS11URI_H_
1
#
include
"
seccomon
.
h
"
#
define
PK11URI_PATTR_TOKEN
"
token
"
#
define
PK11URI_PATTR_MANUFACTURER
"
manufacturer
"
#
define
PK11URI_PATTR_SERIAL
"
serial
"
#
define
PK11URI_PATTR_MODEL
"
model
"
#
define
PK11URI_PATTR_LIBRARY_MANUFACTURER
"
library
-
manufacturer
"
#
define
PK11URI_PATTR_LIBRARY_DESCRIPTION
"
library
-
description
"
#
define
PK11URI_PATTR_LIBRARY_VERSION
"
library
-
version
"
#
define
PK11URI_PATTR_OBJECT
"
object
"
#
define
PK11URI_PATTR_TYPE
"
type
"
#
define
PK11URI_PATTR_ID
"
id
"
#
define
PK11URI_PATTR_SLOT_MANUFACTURER
"
slot
-
manufacturer
"
#
define
PK11URI_PATTR_SLOT_DESCRIPTION
"
slot
-
description
"
#
define
PK11URI_PATTR_SLOT_ID
"
slot
-
id
"
#
define
PK11URI_QATTR_PIN_SOURCE
"
pin
-
source
"
#
define
PK11URI_QATTR_PIN_VALUE
"
pin
-
value
"
#
define
PK11URI_QATTR_MODULE_NAME
"
module
-
name
"
#
define
PK11URI_QATTR_MODULE_PATH
"
module
-
path
"
SEC_BEGIN_PROTOS
struct
PK11URIStr
;
typedef
struct
PK11URIStr
PK11URI
;
struct
PK11URIAttributeStr
{
const
char
*
name
;
const
char
*
value
;
}
;
typedef
struct
PK11URIAttributeStr
PK11URIAttribute
;
extern
PK11URI
*
PK11URI_CreateURI
(
const
PK11URIAttribute
*
pattrs
size_t
num_pattrs
const
PK11URIAttribute
*
qattrs
size_t
num_qattrs
)
;
extern
PK11URI
*
PK11URI_ParseURI
(
const
char
*
string
)
;
extern
char
*
PK11URI_FormatURI
(
PLArenaPool
*
arena
PK11URI
*
uri
)
;
extern
void
PK11URI_DestroyURI
(
PK11URI
*
uri
)
;
extern
const
char
*
PK11URI_GetPathAttribute
(
PK11URI
*
uri
const
char
*
name
)
;
extern
const
char
*
PK11URI_GetQueryAttribute
(
PK11URI
*
uri
const
char
*
name
)
;
SEC_END_PROTOS
#
endif
