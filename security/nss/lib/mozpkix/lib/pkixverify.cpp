#
include
"
mozpkix
/
pkixutil
.
h
"
namespace
mozilla
{
namespace
pkix
{
Result
VerifySignedData
(
TrustDomain
&
trustDomain
const
der
:
:
SignedDataWithSignature
&
signedData
Input
signerSubjectPublicKeyInfo
)
{
der
:
:
PublicKeyAlgorithm
publicKeyAlg
;
DigestAlgorithm
digestAlgorithm
;
Reader
signatureAlg
(
signedData
.
algorithm
)
;
Result
rv
=
der
:
:
SignatureAlgorithmIdentifierValue
(
signatureAlg
publicKeyAlg
digestAlgorithm
)
;
if
(
rv
!
=
Success
)
{
return
rv
;
}
if
(
!
signatureAlg
.
AtEnd
(
)
)
{
return
Result
:
:
ERROR_BAD_DER
;
}
switch
(
publicKeyAlg
)
{
case
der
:
:
PublicKeyAlgorithm
:
:
ECDSA
:
return
trustDomain
.
VerifyECDSASignedData
(
signedData
.
data
digestAlgorithm
signedData
.
signature
signerSubjectPublicKeyInfo
)
;
case
der
:
:
PublicKeyAlgorithm
:
:
RSA_PKCS1
:
return
trustDomain
.
VerifyRSAPKCS1SignedData
(
signedData
.
data
digestAlgorithm
signedData
.
signature
signerSubjectPublicKeyInfo
)
;
case
der
:
:
PublicKeyAlgorithm
:
:
RSA_PSS
:
return
trustDomain
.
VerifyRSAPSSSignedData
(
signedData
.
data
digestAlgorithm
signedData
.
signature
signerSubjectPublicKeyInfo
)
;
MOZILLA_PKIX_UNREACHABLE_DEFAULT_ENUM
}
}
}
}
