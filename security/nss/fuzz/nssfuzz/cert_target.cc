#
include
<
assert
.
h
>
#
include
<
stdint
.
h
>
#
include
<
memory
>
#
include
"
cert
.
h
"
#
include
"
registry
.
h
"
#
include
"
shared
.
h
"
extern
"
C
"
int
cert_fuzzing_target
(
const
uint8_t
*
Data
size_t
Size
)
{
SECItem
data
=
{
siBuffer
(
unsigned
char
*
)
Data
(
unsigned
int
)
Size
}
;
static
std
:
:
unique_ptr
<
NSSDatabase
>
db
(
new
NSSDatabase
(
)
)
;
assert
(
db
!
=
nullptr
)
;
static
CERTCertDBHandle
*
certDB
=
CERT_GetDefaultCertDB
(
)
;
assert
(
certDB
!
=
NULL
)
;
CERTCertificate
*
cert
=
CERT_NewTempCertificate
(
certDB
&
data
nullptr
false
true
)
;
if
(
cert
)
{
CERT_DestroyCertificate
(
cert
)
;
}
return
0
;
}
REGISTER_FUZZING_TARGET
(
"
cert
"
cert_fuzzing_target
3072
"
Certificate
Import
"
)
