#
include
<
assert
.
h
>
#
include
<
stdint
.
h
>
#
include
<
memory
>
#
include
"
keyhi
.
h
"
#
include
"
pk11pub
.
h
"
#
include
"
registry
.
h
"
#
include
"
shared
.
h
"
extern
"
C
"
int
spki_fuzzing_target
(
const
uint8_t
*
Data
size_t
Size
)
{
SECItem
data
=
{
siBuffer
(
unsigned
char
*
)
Data
(
unsigned
int
)
Size
}
;
static
std
:
:
unique_ptr
<
NSSDatabase
>
db
(
new
NSSDatabase
(
)
)
;
assert
(
db
!
=
nullptr
)
;
CERTSubjectPublicKeyInfo
*
spki
=
SECKEY_DecodeDERSubjectPublicKeyInfo
(
&
data
)
;
if
(
spki
)
{
SECKEYPublicKey
*
key
=
SECKEY_ExtractPublicKey
(
spki
)
;
SECKEY_DestroyPublicKey
(
key
)
;
}
SECKEY_DestroySubjectPublicKeyInfo
(
spki
)
;
return
0
;
}
REGISTER_FUZZING_TARGET
(
"
spki
"
spki_fuzzing_target
1024
"
SPKI
Import
"
)
