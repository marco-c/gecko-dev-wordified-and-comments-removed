#
include
"
secerr
.
h
"
#
include
"
ssl
.
h
"
#
include
"
sslerr
.
h
"
#
include
"
sslproto
.
h
"
#
include
"
scoped_ptrs
.
h
"
#
include
"
tls_parser
.
h
"
#
include
"
tls_filter
.
h
"
#
include
"
tls_connect
.
h
"
#
include
"
gtest_utils
.
h
"
namespace
nss_test
{
TEST_P
(
TlsConnectGenericPre13
ConnectExtendedMasterSecret
)
{
EnableExtendedMasterSecret
(
)
;
Connect
(
)
;
Reset
(
)
;
ExpectResumption
(
RESUME_SESSIONID
)
;
EnableExtendedMasterSecret
(
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectTls12Plus
ConnectExtendedMasterSecretSha384
)
{
EnableExtendedMasterSecret
(
)
;
server_
-
>
EnableSingleCipher
(
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
)
;
ConnectWithCipherSuite
(
TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
)
;
}
TEST_P
(
TlsConnectGenericPre13
ConnectExtendedMasterSecretStaticRSA
)
{
EnableOnlyStaticRsaCiphers
(
)
;
EnableExtendedMasterSecret
(
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectGenericPre13
ConnectExtendedMasterSecretECDHE
)
{
EnableExtendedMasterSecret
(
)
;
Connect
(
)
;
Reset
(
)
;
EnableExtendedMasterSecret
(
)
;
ExpectResumption
(
RESUME_SESSIONID
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectGenericPre13
ConnectExtendedMasterSecretTicket
)
{
ConfigureSessionCache
(
RESUME_BOTH
RESUME_TICKET
)
;
EnableExtendedMasterSecret
(
)
;
Connect
(
)
;
Reset
(
)
;
ConfigureSessionCache
(
RESUME_BOTH
RESUME_TICKET
)
;
EnableExtendedMasterSecret
(
)
;
ExpectResumption
(
RESUME_TICKET
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectGenericPre13
ConnectExtendedMasterSecretClientOnly
)
{
client_
-
>
EnableExtendedMasterSecret
(
)
;
ExpectExtendedMasterSecret
(
false
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectGenericPre13
ConnectExtendedMasterSecretServerOnly
)
{
server_
-
>
EnableExtendedMasterSecret
(
)
;
ExpectExtendedMasterSecret
(
false
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectGenericPre13
ConnectExtendedMasterSecretResumeWithout
)
{
EnableExtendedMasterSecret
(
)
;
Connect
(
)
;
Reset
(
)
;
server_
-
>
EnableExtendedMasterSecret
(
)
;
auto
alert_recorder
=
new
TlsAlertRecorder
(
)
;
server_
-
>
SetPacketFilter
(
alert_recorder
)
;
ConnectExpectFail
(
)
;
EXPECT_EQ
(
kTlsAlertFatal
alert_recorder
-
>
level
(
)
)
;
EXPECT_EQ
(
kTlsAlertHandshakeFailure
alert_recorder
-
>
description
(
)
)
;
}
TEST_P
(
TlsConnectGenericPre13
ConnectNormalResumeWithExtendedMasterSecret
)
{
ConfigureSessionCache
(
RESUME_SESSIONID
RESUME_SESSIONID
)
;
ExpectExtendedMasterSecret
(
false
)
;
Connect
(
)
;
Reset
(
)
;
EnableExtendedMasterSecret
(
)
;
ExpectResumption
(
RESUME_NONE
)
;
Connect
(
)
;
}
}
