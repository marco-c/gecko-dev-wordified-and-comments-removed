#
include
<
functional
>
#
include
<
memory
>
#
include
"
secerr
.
h
"
#
include
"
ssl
.
h
"
#
include
"
sslerr
.
h
"
#
include
"
sslproto
.
h
"
extern
"
C
"
{
#
include
"
libssl_internals
.
h
"
}
#
include
"
gtest_utils
.
h
"
#
include
"
scoped_ptrs
.
h
"
#
include
"
tls_connect
.
h
"
#
include
"
tls_filter
.
h
"
#
include
"
tls_parser
.
h
"
namespace
nss_test
{
const
uint8_t
kBogusClientKeyExchange
[
]
=
{
0x01
0x00
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
0xff
}
;
TEST_P
(
TlsConnectGenericPre13
ConnectStaticRSA
)
{
EnableOnlyStaticRsaCiphers
(
)
;
Connect
(
)
;
CheckKeys
(
ssl_kea_rsa
ssl_grp_none
ssl_auth_rsa_decrypt
ssl_sig_none
)
;
}
TEST_P
(
TlsConnectStreamPre13
ConnectStaticRSABogusCKE
)
{
EnableOnlyStaticRsaCiphers
(
)
;
TlsInspectorReplaceHandshakeMessage
*
i1
=
new
TlsInspectorReplaceHandshakeMessage
(
kTlsHandshakeClientKeyExchange
DataBuffer
(
kBogusClientKeyExchange
sizeof
(
kBogusClientKeyExchange
)
)
)
;
client_
-
>
SetPacketFilter
(
i1
)
;
auto
alert_recorder
=
new
TlsAlertRecorder
(
)
;
server_
-
>
SetPacketFilter
(
alert_recorder
)
;
ConnectExpectFail
(
)
;
EXPECT_EQ
(
kTlsAlertFatal
alert_recorder
-
>
level
(
)
)
;
EXPECT_EQ
(
kTlsAlertBadRecordMac
alert_recorder
-
>
description
(
)
)
;
}
TEST_P
(
TlsConnectStreamPre13
ConnectStaticRSABogusPMSVersionDetect
)
{
EnableOnlyStaticRsaCiphers
(
)
;
client_
-
>
SetPacketFilter
(
new
TlsInspectorClientHelloVersionChanger
(
server_
)
)
;
auto
alert_recorder
=
new
TlsAlertRecorder
(
)
;
server_
-
>
SetPacketFilter
(
alert_recorder
)
;
ConnectExpectFail
(
)
;
EXPECT_EQ
(
kTlsAlertFatal
alert_recorder
-
>
level
(
)
)
;
EXPECT_EQ
(
kTlsAlertBadRecordMac
alert_recorder
-
>
description
(
)
)
;
}
TEST_P
(
TlsConnectGenericPre13
ConnectStaticRSABogusPMSVersionIgnore
)
{
EnableOnlyStaticRsaCiphers
(
)
;
client_
-
>
SetPacketFilter
(
new
TlsInspectorClientHelloVersionChanger
(
server_
)
)
;
server_
-
>
DisableRollbackDetection
(
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectStreamPre13
ConnectExtendedMasterSecretStaticRSABogusCKE
)
{
EnableOnlyStaticRsaCiphers
(
)
;
EnableExtendedMasterSecret
(
)
;
TlsInspectorReplaceHandshakeMessage
*
inspect
=
new
TlsInspectorReplaceHandshakeMessage
(
kTlsHandshakeClientKeyExchange
DataBuffer
(
kBogusClientKeyExchange
sizeof
(
kBogusClientKeyExchange
)
)
)
;
client_
-
>
SetPacketFilter
(
inspect
)
;
auto
alert_recorder
=
new
TlsAlertRecorder
(
)
;
server_
-
>
SetPacketFilter
(
alert_recorder
)
;
ConnectExpectFail
(
)
;
EXPECT_EQ
(
kTlsAlertFatal
alert_recorder
-
>
level
(
)
)
;
EXPECT_EQ
(
kTlsAlertBadRecordMac
alert_recorder
-
>
description
(
)
)
;
}
TEST_P
(
TlsConnectStreamPre13
ConnectExtendedMasterSecretStaticRSABogusPMSVersionDetect
)
{
EnableOnlyStaticRsaCiphers
(
)
;
EnableExtendedMasterSecret
(
)
;
client_
-
>
SetPacketFilter
(
new
TlsInspectorClientHelloVersionChanger
(
server_
)
)
;
auto
alert_recorder
=
new
TlsAlertRecorder
(
)
;
server_
-
>
SetPacketFilter
(
alert_recorder
)
;
ConnectExpectFail
(
)
;
EXPECT_EQ
(
kTlsAlertFatal
alert_recorder
-
>
level
(
)
)
;
EXPECT_EQ
(
kTlsAlertBadRecordMac
alert_recorder
-
>
description
(
)
)
;
}
TEST_P
(
TlsConnectStreamPre13
ConnectExtendedMasterSecretStaticRSABogusPMSVersionIgnore
)
{
EnableOnlyStaticRsaCiphers
(
)
;
EnableExtendedMasterSecret
(
)
;
client_
-
>
SetPacketFilter
(
new
TlsInspectorClientHelloVersionChanger
(
server_
)
)
;
server_
-
>
DisableRollbackDetection
(
)
;
Connect
(
)
;
}
}
