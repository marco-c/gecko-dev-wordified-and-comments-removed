#
include
"
ssl
.
h
"
#
include
"
sslerr
.
h
"
#
include
"
sslproto
.
h
"
#
include
<
memory
>
#
include
"
databuffer
.
h
"
#
include
"
tls_agent
.
h
"
#
include
"
tls_connect
.
h
"
#
include
"
tls_parser
.
h
"
namespace
nss_test
{
void
MakeTrivialHandshakeMessage
(
uint8_t
hs_type
size_t
hs_len
DataBuffer
*
out
)
{
size_t
total_len
=
5
+
4
+
hs_len
;
out
-
>
Allocate
(
total_len
)
;
size_t
index
=
0
;
out
-
>
Write
(
index
kTlsHandshakeType
1
)
;
+
+
index
;
out
-
>
Write
(
index
3
1
)
;
+
+
index
;
out
-
>
Write
(
index
1
1
)
;
+
+
index
;
out
-
>
Write
(
index
4
+
hs_len
2
)
;
index
+
=
2
;
out
-
>
Write
(
index
hs_type
1
)
;
+
+
index
;
out
-
>
Write
(
index
hs_len
3
)
;
index
+
=
3
;
for
(
;
index
<
total_len
;
+
+
index
)
{
out
-
>
Write
(
index
1
1
)
;
}
}
TEST_P
(
TlsAgentTest
EarlyFinished
)
{
DataBuffer
buffer
;
MakeTrivialHandshakeMessage
(
kTlsHandshakeFinished
0
&
buffer
)
;
ProcessMessage
(
buffer
TlsAgent
:
:
STATE_ERROR
SSL_ERROR_RX_UNEXPECTED_FINISHED
)
;
}
TEST_P
(
TlsAgentTest
EarlyCertificateVerify
)
{
DataBuffer
buffer
;
MakeTrivialHandshakeMessage
(
kTlsHandshakeCertificateVerify
0
&
buffer
)
;
ProcessMessage
(
buffer
TlsAgent
:
:
STATE_ERROR
SSL_ERROR_RX_UNEXPECTED_CERT_VERIFY
)
;
}
INSTANTIATE_TEST_CASE_P
(
AgentTests
TlsAgentTest
:
:
testing
:
:
Combine
(
TlsAgentTestBase
:
:
kTlsRolesAll
TlsConnectTestBase
:
:
kTlsModesStream
)
)
;
}
