#
include
"
secerr
.
h
"
#
include
"
ssl
.
h
"
#
include
"
scoped_ptrs
.
h
"
#
include
"
tls_parser
.
h
"
#
include
"
tls_filter
.
h
"
#
include
"
tls_connect
.
h
"
#
include
"
gtest_utils
.
h
"
namespace
nss_test
{
class
SelectiveDropFilter
:
public
PacketFilter
public
PollTarget
{
public
:
SelectiveDropFilter
(
uint32_t
pattern
)
:
pattern_
(
pattern
)
counter_
(
0
)
{
}
protected
:
virtual
Action
Filter
(
const
DataBuffer
&
input
DataBuffer
*
output
)
override
{
if
(
counter_
>
=
32
)
{
return
KEEP
;
}
return
(
(
1
<
<
counter_
+
+
)
&
pattern_
)
?
DROP
:
KEEP
;
}
private
:
const
uint32_t
pattern_
;
uint8_t
counter_
;
}
;
TEST_P
(
TlsConnectDatagram
DropClientFirstFlightOnce
)
{
client_
-
>
SetPacketFilter
(
new
SelectiveDropFilter
(
0x1
)
)
;
Connect
(
)
;
SendReceive
(
)
;
}
TEST_P
(
TlsConnectDatagram
DropServerFirstFlightOnce
)
{
server_
-
>
SetPacketFilter
(
new
SelectiveDropFilter
(
0x1
)
)
;
Connect
(
)
;
SendReceive
(
)
;
}
TEST_P
(
TlsConnectDatagram
DropAllFirstTransmissions
)
{
client_
-
>
SetPacketFilter
(
new
SelectiveDropFilter
(
0x15
)
)
;
server_
-
>
SetPacketFilter
(
new
SelectiveDropFilter
(
0x5
)
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectDatagram
DropServerFirstFlightThrice
)
{
server_
-
>
SetPacketFilter
(
new
SelectiveDropFilter
(
0x7
)
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectDatagram
DropClientSecondFlightOnce
)
{
client_
-
>
SetPacketFilter
(
new
SelectiveDropFilter
(
0x2
)
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectDatagram
DropClientSecondFlightThrice
)
{
client_
-
>
SetPacketFilter
(
new
SelectiveDropFilter
(
0xe
)
)
;
Connect
(
)
;
}
TEST_P
(
TlsConnectDatagram
DropServerSecondFlightThrice
)
{
server_
-
>
SetPacketFilter
(
new
SelectiveDropFilter
(
0xe
)
)
;
Connect
(
)
;
}
}
