import
fs
from
"
fs
"
;
import
path
from
"
path
"
;
import
crypto
from
"
crypto
"
;
import
flatmap
from
"
flatmap
"
;
function
sha256
(
data
)
{
let
hash
=
crypto
.
createHash
(
"
sha256
"
)
;
hash
.
update
(
data
)
;
return
hash
.
digest
(
"
hex
"
)
;
}
function
collectFilesInDirectory
(
dir
)
{
return
flatmap
(
fs
.
readdirSync
(
dir
)
entry
=
>
{
let
entry_path
=
path
.
join
(
dir
entry
)
;
if
(
fs
.
lstatSync
(
entry_path
)
.
isDirectory
(
)
)
{
return
collectFilesInDirectory
(
entry_path
)
;
}
return
[
entry_path
]
;
}
)
;
}
function
collectFileHashes
(
context_path
)
{
let
root
=
path
.
join
(
__dirname
"
.
.
/
.
.
/
.
.
/
.
.
"
)
;
let
dir
=
path
.
join
(
root
context_path
)
;
let
files
=
collectFilesInDirectory
(
dir
)
.
sort
(
)
;
return
files
.
map
(
file
=
>
{
return
sha256
(
file
+
"
|
"
+
fs
.
readFileSync
(
file
"
utf
-
8
"
)
)
;
}
)
;
}
export
default
function
(
context_path
)
{
let
hashes
=
collectFileHashes
(
"
automation
/
taskcluster
/
image_builder
"
)
;
hashes
=
hashes
.
concat
(
collectFileHashes
(
context_path
)
)
;
let
now
=
new
Date
(
)
;
let
prefix
=
{
now
.
getUTCFullYear
(
)
}
-
{
now
.
getUTCMonth
(
)
+
1
}
:
;
return
sha256
(
prefix
+
hashes
.
join
(
"
"
)
)
;
}
