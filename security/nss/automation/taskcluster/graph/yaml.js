var
fs
=
require
(
"
fs
"
)
;
var
yaml
=
require
(
"
js
-
yaml
"
)
;
var
YAML_SCHEMA
=
yaml
.
Schema
.
create
(
[
new
yaml
.
Type
(
'
!
from_now
'
{
kind
:
"
scalar
"
resolve
:
function
(
data
)
{
return
true
;
}
construct
:
function
(
data
)
{
var
d
=
new
Date
(
)
;
d
.
setHours
(
d
.
getHours
(
)
+
(
data
|
0
)
)
;
return
d
.
toJSON
(
)
;
}
}
)
new
yaml
.
Type
(
'
!
env
'
{
kind
:
"
scalar
"
resolve
:
function
(
data
)
{
return
true
;
}
construct
:
function
(
data
)
{
return
process
.
env
[
data
]
|
|
"
{
{
"
+
data
.
toLowerCase
(
)
+
"
}
}
"
;
}
}
)
]
)
;
function
parse
(
file
fallback
)
{
if
(
!
fs
.
existsSync
(
file
)
&
&
fallback
)
{
return
fallback
;
}
var
source
=
fs
.
readFileSync
(
file
"
utf
-
8
"
)
;
return
yaml
.
load
(
source
{
schema
:
YAML_SCHEMA
}
)
;
}
module
.
exports
.
parse
=
parse
;
