from
taskgraph
.
transforms
.
base
import
TransformSequence
from
taskgraph
.
util
.
set_name
import
set_name_strip_kind
transforms
=
TransformSequence
(
)
transforms
.
add
def
set_task_name
(
config
tasks
)
:
    
for
task
in
tasks
:
        
primary_kind
=
task
[
"
attributes
"
]
[
"
primary
-
kind
-
dependency
"
]
        
primary_dep
=
[
dep
for
dep
in
config
.
kind_dependencies_tasks
.
values
(
)
if
dep
.
label
in
task
[
"
dependencies
"
]
.
values
(
)
]
[
0
]
        
task
[
"
name
"
]
+
=
f
"
-
{
set_name_strip_kind
(
config
[
]
primary_dep
primary_kind
)
}
"
        
yield
task
