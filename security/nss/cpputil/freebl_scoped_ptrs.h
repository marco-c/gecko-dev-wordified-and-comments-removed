#
ifndef
freebl_scoped_ptrs_h__
#
define
freebl_scoped_ptrs_h__
#
include
<
memory
>
#
include
"
blapi
.
h
"
struct
ScopedDelete
{
void
operator
(
)
(
CMACContext
*
ctx
)
{
CMAC_Destroy
(
ctx
PR_TRUE
)
;
}
}
;
template
<
class
T
>
struct
ScopedMaybeDelete
{
void
operator
(
)
(
T
*
ptr
)
{
if
(
ptr
)
{
ScopedDelete
del
;
del
(
ptr
)
;
}
}
}
;
#
define
SCOPED
(
x
)
typedef
std
:
:
unique_ptr
<
x
ScopedMaybeDelete
<
x
>
>
Scoped
#
#
x
SCOPED
(
CMACContext
)
;
#
undef
SCOPED
#
endif
