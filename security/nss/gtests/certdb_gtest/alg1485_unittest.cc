#
include
<
stdint
.
h
>
#
include
"
gtest
/
gtest
.
h
"
#
include
"
nss
.
h
"
#
include
"
scoped_ptrs
.
h
"
namespace
nss_test
{
typedef
struct
AVATestValuesStr
{
std
:
:
string
avaString
;
bool
expectedResult
;
}
AVATestValues
;
class
Alg1485Test
:
public
:
:
testing
:
:
Test
public
:
:
testing
:
:
WithParamInterface
<
AVATestValues
>
{
}
;
static
const
AVATestValues
kAVATestStrings
[
]
=
{
{
"
CN
=
Marshall
T
.
Rose
O
=
Dover
Beach
Consulting
L
=
Santa
Clara
"
"
ST
=
California
C
=
US
"
true
}
{
"
C
=
HU
L
=
Budapest
O
=
Organization
CN
=
Example
-
Qualified
Citizen
"
"
CA
2
.
5
.
4
.
97
=
VATHU
-
10
"
true
}
{
"
C
=
HU
L
=
Budapest
O
=
Example
CN
=
Example
-
Qualified
Citizen
"
"
CA
OID
.
2
.
5
.
4
.
97
=
VATHU
-
10
"
true
}
{
"
CN
=
Somebody
L
=
Set
O
=
Up
C
=
US
1
=
The
2
=
Bomb
"
true
}
{
"
OID
.
2
.
5
.
4
.
6
=
"
true
}
{
"
2
.
5
.
4
.
6
=
"
true
}
{
"
OID
.
moocow
=
"
false
}
{
"
3
.
2
=
bad
"
false
}
{
"
256
.
257
=
bad
"
false
}
{
"
YO
=
LO
"
false
}
{
"
CN
=
Tester
ZZ
=
Top
"
false
}
}
;
TEST_P
(
Alg1485Test
TryParsingAVAStrings
)
{
const
AVATestValues
&
param
(
GetParam
(
)
)
;
ScopedCERTName
certName
(
CERT_AsciiToName
(
param
.
avaString
.
c_str
(
)
)
)
;
ASSERT_EQ
(
certName
!
=
nullptr
param
.
expectedResult
)
;
}
INSTANTIATE_TEST_CASE_P
(
ParseAVAStrings
Alg1485Test
:
:
testing
:
:
ValuesIn
(
kAVATestStrings
)
)
;
}
