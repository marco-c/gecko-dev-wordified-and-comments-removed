#
include
"
secasn1
.
h
"
#
include
"
gtest
/
gtest
.
h
"
namespace
nss_test
{
class
SECASN1DTest
:
public
:
:
testing
:
:
Test
{
}
;
struct
InnerSequenceItem
{
SECItem
value
;
}
;
struct
OuterSequence
{
InnerSequenceItem
*
item
;
}
;
static
const
SEC_ASN1Template
InnerSequenceTemplate
[
]
=
{
{
SEC_ASN1_SEQUENCE
0
NULL
sizeof
(
InnerSequenceItem
)
}
{
SEC_ASN1_ANY
offsetof
(
InnerSequenceItem
value
)
}
{
0
}
}
;
static
const
SEC_ASN1Template
OuterSequenceTemplate
[
]
=
{
{
SEC_ASN1_SEQUENCE_OF
offsetof
(
OuterSequence
item
)
InnerSequenceTemplate
sizeof
(
OuterSequence
)
}
}
;
TEST_F
(
SECASN1DTest
IndefiniteSequenceInIndefiniteGroup
)
{
PLArenaPool
*
arena
=
PORT_NewArena
(
4096
)
;
OuterSequence
*
outer
=
nullptr
;
SECStatus
rv
;
unsigned
char
ber
[
]
=
{
0x30
0x80
0x30
0x80
0x13
0x14
0x54
0x65
0x73
0x74
0x20
0x66
0x6f
0x72
0x20
0x42
0x75
0x67
0x20
0x31
0x33
0x38
0x37
0x39
0x31
0x39
0x00
0x00
0x00
0x00
}
;
SECItem
missingEOC
=
{
siBuffer
ber
sizeof
(
ber
)
-
2
}
;
rv
=
SEC_ASN1DecodeItem
(
arena
&
outer
OuterSequenceTemplate
&
missingEOC
)
;
EXPECT_EQ
(
SECFailure
rv
)
;
SECItem
goodEncoding
=
{
siBuffer
ber
sizeof
(
ber
)
}
;
rv
=
SEC_ASN1DecodeItem
(
arena
&
outer
OuterSequenceTemplate
&
goodEncoding
)
;
EXPECT_EQ
(
SECSuccess
rv
)
;
EXPECT_EQ
(
outer
[
0
]
.
item
-
>
value
.
len
22U
)
;
EXPECT_EQ
(
0
memcmp
(
outer
[
0
]
.
item
-
>
value
.
data
ber
+
4
22
)
)
;
EXPECT_EQ
(
outer
[
1
]
.
item
nullptr
)
;
PORT_FreeArena
(
arena
PR_FALSE
)
;
}
}
