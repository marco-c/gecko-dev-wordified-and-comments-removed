#
include
"
secerr
.
h
"
#
include
"
ssl
.
h
"
#
include
"
sslerr
.
h
"
#
include
"
sslproto
.
h
"
extern
"
C
"
{
#
include
"
libssl_internals
.
h
"
}
#
include
"
gtest_utils
.
h
"
#
include
"
scoped_ptrs
.
h
"
#
include
"
tls_connect
.
h
"
#
include
"
tls_filter
.
h
"
#
include
"
tls_parser
.
h
"
namespace
nss_test
{
TEST_F
(
TlsConnectTest
KeyUpdateClient
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
Connect
(
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
client_
-
>
ssl_fd
(
)
PR_FALSE
)
)
;
SendReceive
(
50
)
;
SendReceive
(
60
)
;
CheckEpochs
(
4
3
)
;
}
TEST_F
(
TlsConnectTest
KeyUpdateClientRequestUpdate
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
Connect
(
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
client_
-
>
ssl_fd
(
)
PR_TRUE
)
)
;
SendReceive
(
50
)
;
SendReceive
(
60
)
;
CheckEpochs
(
4
4
)
;
}
TEST_F
(
TlsConnectTest
KeyUpdateServer
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
Connect
(
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_FALSE
)
)
;
SendReceive
(
50
)
;
SendReceive
(
60
)
;
CheckEpochs
(
3
4
)
;
}
TEST_F
(
TlsConnectTest
KeyUpdateServerRequestUpdate
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
Connect
(
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_TRUE
)
)
;
SendReceive
(
50
)
;
SendReceive
(
60
)
;
CheckEpochs
(
4
4
)
;
}
TEST_F
(
TlsConnectTest
KeyUpdateConsecutiveRequests
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
Connect
(
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_TRUE
)
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_TRUE
)
)
;
SendReceive
(
50
)
;
SendReceive
(
60
)
;
CheckEpochs
(
4
5
)
;
}
TEST_F
(
TlsConnectTest
KeyUpdateLocalUpdateThenConsecutiveRequests
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
Connect
(
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
client_
-
>
ssl_fd
(
)
PR_FALSE
)
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_TRUE
)
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_TRUE
)
)
;
SendReceive
(
50
)
;
SendReceive
(
60
)
;
CheckEpochs
(
5
5
)
;
}
TEST_F
(
TlsConnectTest
KeyUpdateMultiple
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
Connect
(
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_FALSE
)
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_TRUE
)
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_FALSE
)
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
client_
-
>
ssl_fd
(
)
PR_FALSE
)
)
;
SendReceive
(
50
)
;
SendReceive
(
60
)
;
CheckEpochs
(
5
6
)
;
}
TEST_F
(
TlsConnectTest
KeyUpdateBothRequest
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
Connect
(
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
client_
-
>
ssl_fd
(
)
PR_TRUE
)
)
;
EXPECT_EQ
(
SECSuccess
SSL_KeyUpdate
(
server_
-
>
ssl_fd
(
)
PR_TRUE
)
)
;
SendReceive
(
50
)
;
SendReceive
(
60
)
;
CheckEpochs
(
5
5
)
;
}
TEST_F
(
TlsConnectTest
KeyUpdateAutomaticOnWrite
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
ConnectWithCipherSuite
(
TLS_AES_128_GCM_SHA256
)
;
uint64_t
threshold
=
(
0x5aULL
<
<
28
)
*
3
/
4
;
EXPECT_EQ
(
SECSuccess
SSLInt_AdvanceWriteSeqNum
(
client_
-
>
ssl_fd
(
)
threshold
)
)
;
EXPECT_EQ
(
SECSuccess
SSLInt_AdvanceReadSeqNum
(
server_
-
>
ssl_fd
(
)
threshold
)
)
;
client_
-
>
SendData
(
10
)
;
server_
-
>
ReadBytes
(
)
;
client_
-
>
SendData
(
10
)
;
server_
-
>
ReadBytes
(
)
;
SendReceive
(
100
)
;
CheckEpochs
(
4
3
)
;
}
TEST_F
(
TlsConnectTest
KeyUpdateAutomaticOnRead
)
{
ConfigureVersion
(
SSL_LIBRARY_VERSION_TLS_1_3
)
;
ConnectWithCipherSuite
(
TLS_AES_128_GCM_SHA256
)
;
uint64_t
threshold
=
(
(
0x5aULL
<
<
28
)
*
7
/
8
)
+
1
;
EXPECT_EQ
(
SECSuccess
SSLInt_AdvanceWriteSeqNum
(
client_
-
>
ssl_fd
(
)
threshold
)
)
;
EXPECT_EQ
(
SECSuccess
SSLInt_AdvanceReadSeqNum
(
server_
-
>
ssl_fd
(
)
threshold
)
)
;
client_
-
>
SendData
(
10
)
;
server_
-
>
ReadBytes
(
)
;
SendReceive
(
70
)
;
SendReceive
(
80
)
;
CheckEpochs
(
5
4
)
;
}
}
