WASM_SOURCES
+
=
[
"
/
third_party
/
rlbox_wasm2c_sandbox
/
c_src
/
wasm2c_sandbox_wrapper
.
c
"
]
LOCAL_INCLUDES
+
=
[
"
/
third_party
/
wasm2c
/
wasm2c
/
"
]
EXPORTS
+
=
[
"
/
third_party
/
wasm2c
/
wasm2c
/
wasm
-
rt
.
h
"
]
SOURCES
+
=
[
"
!
rlbox
.
wasm
.
c
"
"
/
third_party
/
wasm2c
/
wasm2c
/
wasm
-
rt
-
impl
.
c
"
"
/
third_party
/
wasm2c
/
wasm2c
/
wasm
-
rt
-
os
-
unix
.
c
"
"
/
third_party
/
wasm2c
/
wasm2c
/
wasm
-
rt
-
os
-
win
.
c
"
"
/
third_party
/
wasm2c
/
wasm2c
/
wasm
-
rt
-
wasi
.
c
"
]
DEFINES
[
"
WASM_RT_CUSTOM_TRAP_HANDLER
"
]
=
"
moz_wasm2c_trap_handler
"
DEFINES
[
"
WASM2C_MALLOC_FAIL_CALLBACK
"
]
=
"
moz_wasm2c_malloc_failed
"
DEFINES
[
"
WASM_DONT_EXPORT_FUNCS
"
]
=
True
FINAL_LIBRARY
=
"
xul
"
AllowCompilerWarnings
(
)
WASM_DEFINES
[
"
MOZILLA_CLIENT
"
]
=
True
WASM_DEFINES
[
"
_WASI_EMULATED_PROCESS_CLOCKS
"
]
=
True
WASM_DEFINES
[
"
MOZ_IN_WASM_SANDBOX
"
]
=
True
SANDBOXED_WASM_LIBRARY_NAME
=
"
rlbox
.
wasm
"
if
CONFIG
[
"
MOZ_WASM_SANDBOXING_HUNSPELL
"
]
:
include
(
"
/
extensions
/
spellcheck
/
hunspell
/
src
/
sources
.
mozbuild
"
)
WASM_SOURCES
+
=
[
"
/
extensions
/
spellcheck
/
hunspell
/
src
/
"
+
s
for
s
in
hunspell_sources
]
LOCAL_INCLUDES
+
=
[
"
/
extensions
/
spellcheck
/
hunspell
/
glue
"
"
/
extensions
/
spellcheck
/
hunspell
/
src
"
]
if
CONFIG
[
"
MOZ_WASM_SANDBOXING_GRAPHITE
"
]
:
include
(
"
/
gfx
/
graphite2
/
src
/
sources
.
mozbuild
"
)
WASM_SOURCES
+
=
[
"
/
gfx
/
graphite2
/
src
/
"
+
s
for
s
in
graphite_sources
]
WASM_SOURCES
+
=
[
"
/
gfx
/
graphite2
/
src
/
call_machine
.
cpp
"
]
for
k
v
in
graphite_defines
:
WASM_DEFINES
[
k
]
=
v
LOCAL_INCLUDES
+
=
[
"
/
gfx
/
graphite2
/
src
"
]
if
CONFIG
[
"
MOZ_WASM_SANDBOXING_OGG
"
]
:
include
(
"
/
media
/
libogg
/
sources
.
mozbuild
"
)
WASM_SOURCES
+
=
[
"
/
media
/
libogg
/
"
+
s
for
s
in
ogg_sources
]
LOCAL_INCLUDES
+
=
[
"
/
media
/
libogg
"
]
if
CONFIG
[
"
MOZ_WASM_SANDBOXING_EXPAT
"
]
:
include
(
"
/
parser
/
expat
/
lib
/
sources
.
mozbuild
"
)
WASM_SOURCES
+
=
[
"
/
parser
/
expat
/
lib
/
"
+
s
for
s
in
expat_sources
]
for
k
v
in
expat_defines
:
WASM_DEFINES
[
k
]
=
v
LOCAL_INCLUDES
+
=
[
"
/
parser
/
expat
/
lib
/
"
]
if
CONFIG
[
"
MOZ_WASM_SANDBOXING_WOFF2
"
]
:
include
(
"
/
modules
/
woff2
/
sources
.
mozbuild
"
)
WASM_SOURCES
+
=
[
"
/
modules
/
woff2
/
"
+
s
for
s
in
woff2_sources
]
LOCAL_INCLUDES
+
=
[
"
/
modules
/
woff2
/
include
"
]
