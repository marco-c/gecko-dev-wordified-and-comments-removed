template
def
RLBoxLibrary
(
name
use_segue
=
True
)
:
WASM_SOURCES
+
=
[
"
/
memory
/
mozalloc
/
mozalloc
.
cpp
"
"
/
third_party
/
rlbox_wasm2c_sandbox
/
c_src
/
wasm2c_sandbox_wrapper
.
c
"
]
if
CONFIG
[
"
DEVELOPER_OPTIONS
"
]
:
wasm_sources
=
sorted
(
f
"
!
{
name
}
.
wasm_
{
n
}
.
c
"
for
n
in
range
(
16
)
)
else
:
wasm_sources
=
[
f
"
!
{
name
}
.
wasm
.
c
"
]
SOURCES
+
=
wasm_sources
SOURCES
+
=
[
"
/
third_party
/
wasm2c
/
wasm2c
/
wasm
-
rt
-
impl
.
c
"
]
SOURCES
+
=
[
"
/
third_party
/
wasm2c
/
wasm2c
/
wasm
-
rt
-
mem
-
impl
.
c
"
]
if
CONFIG
[
"
WASM_CC_VERSION
"
]
and
int
(
CONFIG
[
"
WASM_CC_VERSION
"
]
.
split
(
"
.
"
)
[
0
]
)
>
=
11
:
WASM_CXXFLAGS
+
=
[
"
-
msimd128
"
]
DEFINES
[
"
WASM_RT_USE_MMAP
"
]
=
1
DEFINES
[
"
WASM_RT_SKIP_SIGNAL_RECOVERY
"
]
=
1
DEFINES
[
"
WASM_RT_TRAP_HANDLER
"
]
=
"
moz_wasm2c_trap_handler
"
DEFINES
[
"
WASM_RT_NONCONFORMING_UNCHECKED_STACK_EXHAUSTION
"
]
=
1
DEFINES
[
"
WASM_RT_GROW_FAILED_HANDLER
"
]
=
"
moz_wasm2c_memgrow_failed
"
for
source
in
wasm_sources
:
SOURCES
[
source
]
.
flags
+
=
[
"
-
Wno
-
unused
"
]
if
(
use_segue
and
CONFIG
[
"
CC_TYPE
"
]
in
(
"
clang
"
"
gcc
"
)
and
CONFIG
[
"
TARGET_CPU
"
]
=
=
"
x86_64
"
and
CONFIG
[
"
OS_TARGET
"
]
!
=
"
Android
"
and
not
(
CONFIG
[
"
MOZ_ASAN
"
]
or
CONFIG
[
"
MOZ_TSAN
"
]
)
)
:
DEFINES
[
"
WASM_RT_ALLOW_SEGUE
"
]
=
1
DEFINES
[
"
WASM_RT_SEGUE_FREE_SEGMENT
"
]
=
1
CFLAGS
+
=
[
"
-
mfsgsbase
"
]
WASM_DEFINES
[
"
MOZ_IN_WASM_SANDBOX
"
]
=
True
if
CONFIG
[
"
ENABLE_CLANG_PLUGIN
"
]
:
WASM_DEFINES
[
"
MOZ_CLANG_PLUGIN
"
]
=
True
SANDBOXED_WASM_LIBRARY_NAME
=
f
"
{
name
}
.
wasm
"
GeneratedFile
(
f
"
{
name
}
.
wasm
.
c
"
script
=
"
/
config
/
wasm2c
.
py
"
entry_point
=
"
wasm2c
"
inputs
=
[
"
!
/
dist
/
host
/
bin
/
wasm2c
"
+
CONFIG
[
"
HOST_BIN_SUFFIX
"
]
f
"
!
{
name
}
.
wasm
"
]
flags
=
[
"
-
-
num
-
outputs
"
len
(
wasm_sources
)
]
if
len
(
wasm_sources
)
>
1
else
[
]
)
