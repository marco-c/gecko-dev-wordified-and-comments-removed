#
include
"
nsNSSDialogHelper
.
h
"
#
include
"
mozIDOMWindow
.
h
"
#
include
"
mozilla
/
dom
/
ScriptSettings
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIWindowWatcher
.
h
"
#
include
"
nsServiceManagerUtils
.
h
"
static
const
char
kOpenDialogParam
[
]
=
"
centerscreen
chrome
modal
titlebar
"
;
static
const
char
kOpenWindowParam
[
]
=
"
centerscreen
chrome
titlebar
"
;
nsresult
nsNSSDialogHelper
:
:
openDialog
(
mozIDOMWindowProxy
*
window
const
char
*
url
nsISupports
*
params
bool
modal
)
{
nsresult
rv
;
nsCOMPtr
<
nsIWindowWatcher
>
windowWatcher
=
do_GetService
(
NS_WINDOWWATCHER_CONTRACTID
&
rv
)
;
if
(
NS_FAILED
(
rv
)
)
return
rv
;
nsCOMPtr
<
mozIDOMWindowProxy
>
parent
=
window
;
if
(
!
parent
)
{
windowWatcher
-
>
GetActiveWindow
(
getter_AddRefs
(
parent
)
)
;
}
MOZ_ASSERT
(
!
strncmp
(
"
chrome
:
/
/
"
url
strlen
(
"
chrome
:
/
/
"
)
)
)
;
mozilla
:
:
dom
:
:
AutoNoJSAPI
nojsapi
;
nsCOMPtr
<
mozIDOMWindowProxy
>
newWindow
;
rv
=
windowWatcher
-
>
OpenWindow
(
parent
nsDependentCString
(
url
)
"
_blank
"
_ns
nsDependentCString
(
modal
?
kOpenDialogParam
:
kOpenWindowParam
)
params
getter_AddRefs
(
newWindow
)
)
;
return
rv
;
}
