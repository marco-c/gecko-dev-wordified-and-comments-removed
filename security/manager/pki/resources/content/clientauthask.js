"
use
strict
"
;
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
const
{
Services
}
=
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
{
}
)
;
var
dialogParams
;
var
itemCount
=
0
;
var
rememberBox
;
function
onLoad
(
)
{
dialogParams
=
window
.
arguments
[
0
]
.
QueryInterface
(
Ci
.
nsIDialogParamBlock
)
;
let
bundle
=
document
.
getElementById
(
"
pippki_bundle
"
)
;
let
rememberSetting
=
Services
.
prefs
.
getBoolPref
(
"
security
.
remember_cert_checkbox_default_setting
"
)
;
rememberBox
=
document
.
getElementById
(
"
rememberBox
"
)
;
rememberBox
.
label
=
bundle
.
getString
(
"
clientAuthRemember
"
)
;
rememberBox
.
checked
=
rememberSetting
;
let
cnAndPort
=
dialogParams
.
GetString
(
0
)
;
let
org
=
dialogParams
.
GetString
(
1
)
;
let
issuerOrg
=
dialogParams
.
GetString
(
2
)
;
let
formattedOrg
=
bundle
.
getFormattedString
(
"
clientAuthMessage1
"
[
org
]
)
;
let
formattedIssuerOrg
=
bundle
.
getFormattedString
(
"
clientAuthMessage2
"
[
issuerOrg
]
)
;
setText
(
"
hostname
"
cnAndPort
)
;
setText
(
"
organization
"
formattedOrg
)
;
setText
(
"
issuer
"
formattedIssuerOrg
)
;
let
selectElement
=
document
.
getElementById
(
"
nicknames
"
)
;
itemCount
=
dialogParams
.
GetInt
(
0
)
;
for
(
let
i
=
0
;
i
<
itemCount
;
i
+
+
)
{
let
menuItemNode
=
document
.
createElement
(
"
menuitem
"
)
;
let
nick
=
dialogParams
.
GetString
(
i
+
3
)
;
menuItemNode
.
setAttribute
(
"
value
"
i
)
;
menuItemNode
.
setAttribute
(
"
label
"
nick
)
;
selectElement
.
firstChild
.
appendChild
(
menuItemNode
)
;
if
(
i
=
=
0
)
{
selectElement
.
selectedItem
=
menuItemNode
;
}
}
setDetails
(
)
;
}
function
setDetails
(
)
{
let
index
=
parseInt
(
document
.
getElementById
(
"
nicknames
"
)
.
value
)
;
let
details
=
dialogParams
.
GetString
(
index
+
itemCount
+
3
)
;
document
.
getElementById
(
"
details
"
)
.
value
=
details
;
}
function
onCertSelected
(
)
{
setDetails
(
)
;
}
function
doOK
(
)
{
dialogParams
.
SetInt
(
0
1
)
;
let
index
=
parseInt
(
document
.
getElementById
(
"
nicknames
"
)
.
value
)
;
dialogParams
.
SetInt
(
1
index
)
;
dialogParams
.
SetInt
(
2
rememberBox
.
checked
)
;
return
true
;
}
function
doCancel
(
)
{
dialogParams
.
SetInt
(
0
0
)
;
dialogParams
.
SetInt
(
2
rememberBox
.
checked
)
;
return
true
;
}
