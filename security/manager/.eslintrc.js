"
use
strict
"
;
module
.
exports
=
{
"
rules
"
:
{
"
arrow
-
body
-
style
"
:
[
"
error
"
"
as
-
needed
"
]
"
arrow
-
spacing
"
:
"
error
"
"
block
-
spacing
"
:
"
error
"
"
comma
-
spacing
"
:
[
"
error
"
{
"
before
"
:
false
"
after
"
:
true
}
]
"
comma
-
style
"
:
"
error
"
"
computed
-
property
-
spacing
"
:
[
"
error
"
"
never
"
]
"
consistent
-
return
"
:
"
error
"
"
curly
"
:
[
"
error
"
"
multi
-
line
"
]
"
eol
-
last
"
:
"
error
"
"
func
-
call
-
spacing
"
:
[
"
error
"
"
never
"
]
"
generator
-
star
-
spacing
"
:
[
"
error
"
{
"
before
"
:
false
"
after
"
:
true
}
]
"
key
-
spacing
"
:
[
"
error
"
{
"
beforeColon
"
:
false
"
afterColon
"
:
true
"
mode
"
:
"
minimum
"
}
]
"
keyword
-
spacing
"
:
"
error
"
"
linebreak
-
style
"
:
[
"
error
"
"
unix
"
]
"
new
-
parens
"
:
"
error
"
"
no
-
alert
"
:
"
error
"
"
no
-
array
-
constructor
"
:
"
error
"
"
no
-
caller
"
:
"
error
"
"
no
-
class
-
assign
"
:
"
error
"
"
no
-
cond
-
assign
"
:
[
"
error
"
"
except
-
parens
"
]
"
no
-
console
"
:
"
error
"
"
no
-
const
-
assign
"
:
"
error
"
"
no
-
debugger
"
:
"
error
"
"
no
-
delete
-
var
"
:
"
error
"
"
no
-
dupe
-
args
"
:
"
error
"
"
no
-
dupe
-
keys
"
:
"
error
"
"
no
-
duplicate
-
case
"
:
"
error
"
"
no
-
eval
"
:
"
error
"
"
no
-
labels
"
:
"
error
"
"
no
-
else
-
return
"
:
"
error
"
"
no
-
empty
-
character
-
class
"
:
"
error
"
"
no
-
empty
-
pattern
"
:
"
error
"
"
no
-
ex
-
assign
"
:
"
error
"
"
no
-
extra
-
boolean
-
cast
"
:
"
error
"
"
no
-
extra
-
semi
"
:
"
error
"
"
no
-
func
-
assign
"
:
"
error
"
"
no
-
global
-
assign
"
:
"
error
"
"
no
-
invalid
-
regexp
"
:
"
error
"
"
no
-
irregular
-
whitespace
"
:
"
error
"
"
no
-
lonely
-
if
"
:
"
error
"
"
no
-
mixed
-
spaces
-
and
-
tabs
"
:
[
"
error
"
"
smart
-
tabs
"
]
"
no
-
multi
-
spaces
"
:
[
"
error
"
{
"
exceptions
"
:
{
"
AssignmentExpression
"
:
true
"
VariableDeclarator
"
:
true
"
ArrayExpression
"
:
true
"
ObjectExpression
"
:
true
}
}
]
"
no
-
nested
-
ternary
"
:
"
error
"
"
no
-
new
-
object
"
:
"
error
"
"
no
-
obj
-
calls
"
:
"
error
"
"
no
-
octal
"
:
"
error
"
"
no
-
redeclare
"
:
"
error
"
"
no
-
return
-
assign
"
:
[
"
error
"
"
always
"
]
"
no
-
self
-
assign
"
:
"
error
"
"
no
-
self
-
compare
"
:
"
error
"
"
no
-
shadow
-
restricted
-
names
"
:
"
error
"
"
no
-
sparse
-
arrays
"
:
"
error
"
"
no
-
throw
-
literal
"
:
"
error
"
"
no
-
trailing
-
spaces
"
:
"
error
"
"
no
-
undef
"
:
"
error
"
"
no
-
unexpected
-
multiline
"
:
"
error
"
"
no
-
unreachable
"
:
"
error
"
"
no
-
unused
-
expressions
"
:
"
error
"
"
no
-
with
"
:
"
error
"
"
semi
"
:
[
"
error
"
"
always
"
]
"
space
-
before
-
blocks
"
:
"
error
"
"
space
-
in
-
parens
"
:
[
"
error
"
"
never
"
]
"
space
-
infix
-
ops
"
:
"
error
"
"
space
-
unary
-
ops
"
:
[
"
error
"
{
"
words
"
:
true
"
nonwords
"
:
false
}
]
"
strict
"
:
[
"
error
"
"
global
"
]
"
use
-
isnan
"
:
"
error
"
"
valid
-
typeof
"
:
"
error
"
}
"
env
"
:
{
"
browser
"
:
true
}
"
globals
"
:
{
"
Components
"
:
false
"
dump
"
:
false
}
}
;
