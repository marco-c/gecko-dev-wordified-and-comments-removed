#
include
"
nsISupports
.
idl
"
interface
nsIArray
;
interface
nsIX509CertValidity
;
interface
nsICertVerificationListener
;
%
{
C
+
+
namespace
IPC
{
class
MessageReader
;
class
MessageWriter
;
}
typedef
struct
CERTCertificateStr
CERTCertificate
;
%
}
[
ptr
]
native
CERTCertificatePtr
(
CERTCertificate
)
;
[
ptr
]
native
IpcMessageReaderPtr
(
IPC
:
:
MessageReader
)
;
[
ptr
]
native
IpcMessageWriterPtr
(
IPC
:
:
MessageWriter
)
;
[
scriptable
builtinclass
uuid
(
bdc3979a
-
5422
-
4cd5
-
8589
-
696b6e96ea83
)
]
interface
nsIX509Cert
:
nsISupports
{
readonly
attribute
AString
emailAddress
;
[
must_use
]
Array
<
AString
>
getEmailAddresses
(
)
;
[
must_use
]
boolean
containsEmailAddress
(
in
AString
aEmailAddress
)
;
readonly
attribute
AString
subjectName
;
readonly
attribute
AString
commonName
;
readonly
attribute
AString
organization
;
[
must_use
]
readonly
attribute
AString
organizationalUnit
;
readonly
attribute
AString
sha256Fingerprint
;
[
must_use
]
readonly
attribute
AString
sha1Fingerprint
;
readonly
attribute
AString
tokenName
;
readonly
attribute
AString
issuerName
;
[
must_use
]
readonly
attribute
AString
serialNumber
;
[
must_use
]
readonly
attribute
AString
issuerCommonName
;
readonly
attribute
AString
issuerOrganization
;
[
must_use
]
readonly
attribute
AString
issuerOrganizationUnit
;
readonly
attribute
nsIX509CertValidity
validity
;
[
must_use
]
readonly
attribute
ACString
dbKey
;
[
must_use
]
readonly
attribute
AString
displayName
;
const
unsigned
long
UNKNOWN_CERT
=
0
;
const
unsigned
long
CA_CERT
=
1
<
<
0
;
const
unsigned
long
USER_CERT
=
1
<
<
1
;
const
unsigned
long
EMAIL_CERT
=
1
<
<
2
;
const
unsigned
long
SERVER_CERT
=
1
<
<
3
;
const
unsigned
long
ANY_CERT
=
0xffff
;
readonly
attribute
unsigned
long
certType
;
[
must_use
]
Array
<
octet
>
getRawDER
(
)
;
[
must_use
]
ACString
getBase64DERString
(
)
;
[
must_use
]
readonly
attribute
ACString
sha256SubjectPublicKeyInfoDigest
;
[
notxpcom
noscript
must_use
]
CERTCertificatePtr
getCert
(
)
;
[
notxpcom
noscript
]
void
SerializeToIPC
(
in
IpcMessageWriterPtr
aWriter
)
;
[
notxpcom
noscript
]
bool
DeserializeFromIPC
(
in
IpcMessageReaderPtr
aReader
)
;
}
;
