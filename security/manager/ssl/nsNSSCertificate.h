#
ifndef
nsNSSCertificate_h
#
define
nsNSSCertificate_h
#
include
<
functional
>
#
include
<
vector
>
#
include
"
ScopedNSSTypes
.
h
"
#
include
"
certt
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIASN1Object
.
h
"
#
include
"
nsIClassInfo
.
h
"
#
include
"
nsISerializable
.
h
"
#
include
"
nsIX509Cert
.
h
"
#
include
"
nsIX509CertDB
.
h
"
#
include
"
nsSimpleEnumerator
.
h
"
#
include
"
nsStringFwd
.
h
"
namespace
mozilla
{
namespace
pkix
{
class
DERArray
;
}
}
class
nsINSSComponent
;
class
nsIASN1Sequence
;
class
nsNSSCertificate
final
:
public
nsIX509Cert
public
nsISerializable
public
nsIClassInfo
{
public
:
NS_DECL_THREADSAFE_ISUPPORTS
NS_DECL_NSIX509CERT
NS_DECL_NSISERIALIZABLE
NS_DECL_NSICLASSINFO
explicit
nsNSSCertificate
(
CERTCertificate
*
cert
)
;
nsNSSCertificate
(
)
;
static
nsNSSCertificate
*
Create
(
CERTCertificate
*
cert
=
nullptr
)
;
static
nsNSSCertificate
*
ConstructFromDER
(
char
*
certDER
int
derLen
)
;
static
nsresult
GetDbKey
(
const
mozilla
:
:
UniqueCERTCertificate
&
cert
nsACString
&
aDbKey
)
;
static
nsresult
SegmentCertificateChain
(
const
nsTArray
<
RefPtr
<
nsIX509Cert
>
>
&
aCertList
nsCOMPtr
<
nsIX509Cert
>
&
aRoot
nsTArray
<
RefPtr
<
nsIX509Cert
>
>
&
aIntermediates
nsCOMPtr
<
nsIX509Cert
>
&
aEndEntity
)
;
static
nsresult
GetRootCertificate
(
const
nsTArray
<
RefPtr
<
nsIX509Cert
>
>
&
aCertList
nsCOMPtr
<
nsIX509Cert
>
&
aRoot
)
;
private
:
virtual
~
nsNSSCertificate
(
)
;
mozilla
:
:
UniqueCERTCertificate
mCert
;
bool
mPermDelete
;
uint32_t
mCertType
;
std
:
:
vector
<
nsString
>
mSubjectAltNames
;
nsresult
CreateASN1Struct
(
nsIASN1Object
*
*
aRetVal
)
;
nsresult
CreateTBSCertificateASN1Struct
(
nsIASN1Sequence
*
*
retSequence
)
;
nsresult
GetSortableDate
(
PRTime
aTime
nsAString
&
_aSortableDate
)
;
bool
InitFromDER
(
char
*
certDER
int
derLen
)
;
nsresult
GetCertificateHash
(
nsAString
&
aFingerprint
SECOidTag
aHashAlg
)
;
void
GetSubjectAltNames
(
)
;
}
;
namespace
mozilla
{
SECStatus
ConstructCERTCertListFromReversedDERArray
(
const
mozilla
:
:
pkix
:
:
DERArray
&
certArray
mozilla
:
:
UniqueCERTCertList
&
certList
)
;
}
#
define
NS_X509CERT_CID
\
{
/
*
660a3226
-
915c
-
4ffb
-
bb20
-
8985a632df05
*
/
\
0x660a3226
0x915c
0x4ffb
{
\
0xbb
0x20
0x89
0x85
0xa6
0x32
0xdf
0x05
\
}
\
}
#
endif
