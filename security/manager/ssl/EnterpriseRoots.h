#
ifndef
EnterpriseRoots_h
#
define
EnterpriseRoots_h
#
include
"
mozpkix
/
Input
.
h
"
#
include
"
mozpkix
/
Result
.
h
"
#
include
"
nsTArray
.
h
"
class
EnterpriseCert
{
public
:
EnterpriseCert
(
const
uint8_t
*
data
size_t
len
bool
isRoot
)
:
mDER
(
data
len
)
mIsRoot
(
isRoot
)
{
}
EnterpriseCert
(
const
EnterpriseCert
&
other
)
:
mDER
(
other
.
mDER
.
Clone
(
)
)
mIsRoot
(
other
.
mIsRoot
)
{
}
EnterpriseCert
(
EnterpriseCert
&
&
other
)
:
mDER
(
std
:
:
move
(
other
.
mDER
)
)
mIsRoot
(
other
.
mIsRoot
)
{
}
void
CopyBytes
(
nsTArray
<
uint8_t
>
&
dest
)
const
;
mozilla
:
:
pkix
:
:
Result
GetInput
(
mozilla
:
:
pkix
:
:
Input
&
input
)
const
;
bool
GetIsRoot
(
)
const
;
private
:
nsTArray
<
uint8_t
>
mDER
;
bool
mIsRoot
;
}
;
nsresult
GatherEnterpriseCerts
(
nsTArray
<
EnterpriseCert
>
&
certs
)
;
#
endif
