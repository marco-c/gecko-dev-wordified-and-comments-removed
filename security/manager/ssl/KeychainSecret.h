#
ifndef
KeychainSecret_h
#
define
KeychainSecret_h
#
include
"
CoreFoundation
/
CFBase
.
h
"
#
include
"
OSKeyStore
.
h
"
#
include
"
nsString
.
h
"
template
<
typename
T
>
class
ScopedCFType
{
public
:
explicit
ScopedCFType
(
T
value
)
:
mValue
(
value
)
{
}
~
ScopedCFType
(
)
{
if
(
mValue
)
{
CFRelease
(
(
CFTypeRef
)
mValue
)
;
}
}
T
get
(
)
{
return
mValue
;
}
explicit
operator
bool
(
)
const
{
return
mValue
!
=
nullptr
;
}
private
:
T
mValue
;
}
;
class
KeychainSecret
final
:
public
AbstractOSKeyStore
{
public
:
KeychainSecret
(
)
;
virtual
nsresult
RetrieveSecret
(
const
nsACString
&
label
nsACString
&
secret
)
override
;
virtual
nsresult
StoreSecret
(
const
nsACString
&
secret
const
nsACString
&
label
)
override
;
virtual
nsresult
DeleteSecret
(
const
nsACString
&
label
)
override
;
virtual
nsresult
Lock
(
)
override
;
virtual
nsresult
Unlock
(
)
override
;
virtual
~
KeychainSecret
(
)
;
}
;
#
endif
