pub
type
OSStatus
=
i32
;
pub
const
errSecSuccess
:
OSStatus
=
0
;
pub
type
SecKeyAlgorithm
=
CFStringRef
;
extern
"
C
"
{
pub
fn
SecCertificateGetTypeID
(
)
-
>
CFTypeID
;
pub
fn
SecIdentityGetTypeID
(
)
-
>
CFTypeID
;
pub
fn
SecIdentityCopyCertificate
(
identityRef
:
SecIdentityRef
certificateRef
:
*
mut
SecCertificateRef
)
-
>
OSStatus
;
pub
fn
SecIdentityCopyPrivateKey
(
identityRef
:
SecIdentityRef
privateKeyRef
:
*
mut
SecKeyRef
)
-
>
OSStatus
;
pub
fn
SecKeyGetTypeID
(
)
-
>
CFTypeID
;
pub
fn
SecCertificateCopyData
(
certificate
:
SecCertificateRef
)
-
>
CFDataRef
;
pub
fn
SecCertificateCopySubjectSummary
(
certificate
:
SecCertificateRef
)
-
>
CFStringRef
;
pub
fn
SecItemCopyMatching
(
query
:
CFDictionaryRef
result
:
*
mut
CFTypeRef
)
-
>
OSStatus
;
pub
static
kSecClass
:
CFStringRef
;
pub
static
kSecAttrKeyType
:
CFStringRef
;
pub
static
kSecAttrKeySizeInBits
:
CFStringRef
;
pub
static
kSecMatchLimit
:
CFStringRef
;
pub
static
kSecMatchLimitAll
:
CFStringRef
;
pub
static
kSecReturnRef
:
CFStringRef
;
pub
static
kSecClassIdentity
:
CFStringRef
;
pub
static
kSecAttrKeyTypeRSA
:
CFStringRef
;
}
