#
ifndef
nsPKCS11Slot_h
#
define
nsPKCS11Slot_h
#
include
"
ScopedNSSTypes
.
h
"
#
include
"
nsIPKCS11Module
.
h
"
#
include
"
nsIPKCS11Slot
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsString
.
h
"
#
include
"
pk11func
.
h
"
class
nsPKCS11Slot
:
public
nsIPKCS11Slot
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIPKCS11SLOT
explicit
nsPKCS11Slot
(
PK11SlotInfo
*
slot
)
;
protected
:
virtual
~
nsPKCS11Slot
(
)
=
default
;
private
:
mozilla
:
:
UniquePK11SlotInfo
mSlot
;
bool
mIsInternalCryptoSlot
;
bool
mIsInternalKeySlot
;
nsCString
mSlotDesc
;
nsCString
mSlotManufacturerID
;
nsCString
mSlotHWVersion
;
nsCString
mSlotFWVersion
;
int
mSeries
;
nsresult
refreshSlotInfo
(
)
;
nsresult
GetAttributeHelper
(
const
nsACString
&
attribute
nsACString
&
xpcomOutParam
)
;
}
;
class
nsPKCS11Module
:
public
nsIPKCS11Module
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIPKCS11MODULE
explicit
nsPKCS11Module
(
SECMODModule
*
module
)
;
protected
:
virtual
~
nsPKCS11Module
(
)
=
default
;
private
:
mozilla
:
:
UniqueSECMODModule
mModule
;
}
;
#
endif
