#
include
"
nsISupports
.
idl
"
interface
nsIArray
;
interface
nsIX509Cert
;
[
ref
]
native
const_OriginAttributesRef
(
const
mozilla
:
:
OriginAttributes
)
;
%
{
C
+
+
#
define
NS_CERTOVERRIDE_CONTRACTID
"
mozilla
.
org
/
security
/
certoverride
;
1
"
namespace
mozilla
{
class
OriginAttributes
;
}
%
}
[
scriptable
builtinclass
uuid
(
ed735e24
-
fa55
-
4163
-
906d
-
17fb78851fe1
)
]
interface
nsICertOverride
:
nsISupports
{
readonly
attribute
ACString
asciiHost
;
readonly
attribute
int32_t
port
;
readonly
attribute
ACString
hostPort
;
readonly
attribute
ACString
fingerprint
;
[
implicit_jscontext
]
readonly
attribute
jsval
originAttributes
;
}
;
[
scriptable
builtinclass
uuid
(
be019e47
-
22fc
-
4355
-
9f16
-
9ab047d6742d
)
]
interface
nsICertOverrideService
:
nsISupports
{
[
binaryname
(
RememberValidityOverride
)
noscript
must_use
]
void
rememberValidityOverrideNative
(
in
AUTF8String
aHostName
in
int32_t
aPort
in
const_OriginAttributesRef
aOriginAttributes
in
nsIX509Cert
aCert
in
boolean
aTemporary
)
;
[
binaryname
(
RememberValidityOverrideScriptable
)
implicit_jscontext
must_use
]
void
rememberValidityOverride
(
in
AUTF8String
aHostName
in
int32_t
aPort
in
jsval
aOriginAttributes
in
nsIX509Cert
aCert
in
boolean
aTemporary
)
;
[
binaryname
(
HasMatchingOverride
)
noscript
must_use
]
boolean
hasMatchingOverrideNative
(
in
AUTF8String
aHostName
in
int32_t
aPort
in
const_OriginAttributesRef
aOriginAttributes
in
nsIX509Cert
aCert
out
boolean
aIsTemporary
)
;
[
binaryname
(
HasMatchingOverrideScriptable
)
implicit_jscontext
must_use
]
boolean
hasMatchingOverride
(
in
AUTF8String
aHostName
in
int32_t
aPort
in
jsval
aOriginAttributes
in
nsIX509Cert
aCert
out
boolean
aIsTemporary
)
;
[
binaryname
(
ClearValidityOverride
)
noscript
]
void
clearValidityOverrideNative
(
in
AUTF8String
aHostName
in
int32_t
aPort
in
const_OriginAttributesRef
aOriginAttributes
)
;
[
binaryname
(
ClearValidityOverrideScriptable
)
implicit_jscontext
]
void
clearValidityOverride
(
in
AUTF8String
aHostName
in
int32_t
aPort
in
jsval
aOriginAttributes
)
;
void
clearAllOverrides
(
)
;
Array
<
nsICertOverride
>
getOverrides
(
)
;
void
setDisableAllSecurityChecksAndLetAttackersInterceptMyData
(
in
boolean
aDisable
)
;
readonly
attribute
boolean
securityCheckDisabled
;
}
;
