#
ifndef
mozilla__CryptoTask_h
#
define
mozilla__CryptoTask_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsThreadUtils
.
h
"
namespace
mozilla
{
class
CryptoTask
:
public
Runnable
{
public
:
template
<
size_t
LEN
>
nsresult
Dispatch
(
const
char
(
&
taskThreadName
)
[
LEN
]
)
{
static_assert
(
LEN
<
=
15
"
Thread
name
must
be
no
more
than
15
characters
"
)
;
return
Dispatch
(
nsDependentCString
(
taskThreadName
LEN
-
1
)
)
;
}
nsresult
Dispatch
(
const
nsACString
&
taskThreadName
)
;
protected
:
CryptoTask
(
)
:
Runnable
(
"
CryptoTask
"
)
mRv
(
NS_ERROR_NOT_INITIALIZED
)
{
}
virtual
~
CryptoTask
(
)
{
}
virtual
nsresult
CalculateResult
(
)
=
0
;
virtual
void
CallCallback
(
nsresult
rv
)
=
0
;
private
:
NS_IMETHOD
Run
(
)
override
final
;
nsresult
mRv
;
nsCOMPtr
<
nsIThread
>
mThread
;
}
;
}
#
endif
