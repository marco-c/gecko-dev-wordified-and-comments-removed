#
ifndef
nsPKCS12Blob_h
#
define
nsPKCS12Blob_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIMutableArray
.
h
"
#
include
"
nsString
.
h
"
#
include
"
p12
.
h
"
#
include
"
seccomon
.
h
"
class
nsIFile
;
class
nsIX509Cert
;
class
nsPKCS12Blob
{
public
:
nsPKCS12Blob
(
)
;
~
nsPKCS12Blob
(
)
{
}
nsresult
ImportFromFile
(
nsIFile
*
file
const
nsAString
&
password
uint32_t
&
error
)
;
nsresult
ExportToFile
(
nsIFile
*
file
const
nsTArray
<
RefPtr
<
nsIX509Cert
>
>
&
certs
const
nsAString
&
password
uint32_t
&
error
)
;
private
:
nsCOMPtr
<
nsIInterfaceRequestor
>
mUIContext
;
nsresult
inputToDecoder
(
mozilla
:
:
UniqueSEC_PKCS12DecoderContext
&
dcx
nsIFile
*
file
PRErrorCode
&
nssError
)
;
mozilla
:
:
UniquePtr
<
uint8_t
[
]
>
stringToBigEndianBytes
(
const
nsAString
&
uni
uint32_t
&
bytesLength
)
;
uint32_t
handlePRErrorCode
(
PRErrorCode
prerr
)
;
static
SECItem
*
nicknameCollision
(
SECItem
*
oldNick
PRBool
*
cancel
void
*
wincx
)
;
static
void
writeExportFile
(
void
*
arg
const
char
*
buf
unsigned
long
len
)
;
}
;
#
endif
