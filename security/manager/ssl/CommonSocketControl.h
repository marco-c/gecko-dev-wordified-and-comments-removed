#
ifndef
CommonSocketControl_h
#
define
CommonSocketControl_h
#
include
"
TransportSecurityInfo
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
net
/
SSLTokensCache
.
h
"
#
include
"
nsITLSSocketControl
.
h
"
class
CommonSocketControl
:
public
mozilla
:
:
psm
:
:
TransportSecurityInfo
public
nsITLSSocketControl
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_NSITLSSOCKETCONTROL
explicit
CommonSocketControl
(
uint32_t
providerFlags
)
;
uint32_t
GetProviderFlags
(
)
const
{
return
mProviderFlags
;
}
void
SetSSLVersionUsed
(
int16_t
version
)
{
mSSLVersionUsed
=
version
;
}
void
SetSessionCacheInfo
(
mozilla
:
:
net
:
:
SessionCacheInfo
&
&
aInfo
)
{
mSessionCacheInfo
.
reset
(
)
;
mSessionCacheInfo
.
emplace
(
std
:
:
move
(
aInfo
)
)
;
}
void
RebuildCertificateInfoFromSSLTokenCache
(
)
;
protected
:
~
CommonSocketControl
(
)
=
default
;
mozilla
:
:
Maybe
<
mozilla
:
:
net
:
:
SessionCacheInfo
>
mSessionCacheInfo
;
bool
mHandshakeCompleted
;
bool
mJoined
;
bool
mSentClientCert
;
bool
mFailedVerification
;
uint16_t
mSSLVersionUsed
;
uint32_t
mProviderFlags
;
}
;
#
endif
