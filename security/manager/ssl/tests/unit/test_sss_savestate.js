"
use
strict
"
;
const
EXPECTED_ENTRIES
=
5
;
const
EXPECTED_HSTS_COLUMNS
=
3
;
var
gProfileDir
=
null
;
var
gExpectingWrites
=
true
;
function
checkStateWritten
(
aSubject
aTopic
aData
)
{
if
(
aData
=
=
CLIENT_AUTH_FILE_NAME
)
{
return
;
}
equal
(
aData
SSS_STATE_FILE_NAME
)
;
ok
(
gExpectingWrites
)
;
let
stateFile
=
gProfileDir
.
clone
(
)
;
stateFile
.
append
(
SSS_STATE_FILE_NAME
)
;
ok
(
stateFile
.
exists
(
)
)
;
let
stateFileContents
=
readFile
(
stateFile
)
;
let
lines
=
stateFileContents
.
split
(
"
\
n
"
)
.
slice
(
0
-
1
)
;
equal
(
lines
.
length
EXPECTED_ENTRIES
)
;
let
sites
=
{
}
;
for
(
let
line
of
lines
)
{
let
parts
=
line
.
split
(
"
\
t
"
)
;
let
host
=
parts
[
0
]
;
let
entry
=
parts
[
3
]
.
split
(
"
"
)
;
let
expectedColumns
=
EXPECTED_HSTS_COLUMNS
;
equal
(
entry
.
length
expectedColumns
)
;
sites
[
host
]
=
entry
;
}
if
(
sites
[
"
includesubdomains
.
preloaded
.
test
"
]
[
1
]
!
=
1
)
{
return
;
}
if
(
sites
[
"
includesubdomains
.
preloaded
.
test
"
]
[
2
]
!
=
0
)
{
return
;
}
if
(
sites
[
"
a
.
example
.
com
"
]
[
1
]
!
=
1
)
{
return
;
}
if
(
sites
[
"
a
.
example
.
com
"
]
[
2
]
!
=
1
)
{
return
;
}
if
(
sites
[
"
b
.
example
.
com
"
]
[
1
]
!
=
1
)
{
return
;
}
if
(
sites
[
"
b
.
example
.
com
"
]
[
2
]
!
=
0
)
{
return
;
}
if
(
sites
[
"
c
.
c
.
example
.
com
"
]
[
1
]
!
=
1
)
{
return
;
}
if
(
sites
[
"
c
.
c
.
example
.
com
"
]
[
2
]
!
=
1
)
{
return
;
}
if
(
sites
[
"
d
.
example
.
com
"
]
[
1
]
!
=
1
)
{
return
;
}
if
(
sites
[
"
d
.
example
.
com
"
]
[
2
]
!
=
0
)
{
return
;
}
gExpectingWrites
=
false
;
process_headers
(
)
;
do_timeout
(
2000
function
(
)
{
do_test_finished
(
)
;
}
)
;
}
function
process_headers
(
)
{
let
SSService
=
Cc
[
"
mozilla
.
org
/
ssservice
;
1
"
]
.
getService
(
Ci
.
nsISiteSecurityService
)
;
let
uris
=
[
Services
.
io
.
newURI
(
"
http
:
/
/
includesubdomains
.
preloaded
.
test
"
)
Services
.
io
.
newURI
(
"
http
:
/
/
a
.
example
.
com
"
)
Services
.
io
.
newURI
(
"
http
:
/
/
b
.
example
.
com
"
)
Services
.
io
.
newURI
(
"
http
:
/
/
c
.
c
.
example
.
com
"
)
Services
.
io
.
newURI
(
"
http
:
/
/
d
.
example
.
com
"
)
]
;
for
(
let
i
=
0
;
i
<
1000
;
i
+
+
)
{
let
uriIndex
=
i
%
uris
.
length
;
let
maxAge
=
"
max
-
age
=
"
+
(
i
+
31536000
)
;
let
includeSubdomains
=
uriIndex
%
2
=
=
1
?
"
;
includeSubdomains
"
:
"
"
;
SSService
.
processHeader
(
uris
[
uriIndex
]
maxAge
+
includeSubdomains
)
;
}
}
function
run_test
(
)
{
Services
.
prefs
.
setIntPref
(
"
test
.
datastorage
.
write_timer_ms
"
100
)
;
gProfileDir
=
do_get_profile
(
)
;
process_headers
(
)
;
do_test_pending
(
)
;
Services
.
obs
.
addObserver
(
checkStateWritten
"
data
-
storage
-
written
"
)
;
}
