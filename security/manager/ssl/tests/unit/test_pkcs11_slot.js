"
use
strict
"
;
do_get_profile
(
)
;
function
run_test
(
)
{
loadPKCS11TestModule
(
false
)
;
let
moduleDB
=
Cc
[
"
mozilla
.
org
/
security
/
pkcs11moduledb
;
1
"
]
.
getService
(
Ci
.
nsIPKCS11ModuleDB
)
;
let
testModule
=
moduleDB
.
findModuleByName
(
"
PKCS11
Test
Module
"
)
;
let
testSlot
=
testModule
.
findSlotByName
(
"
Test
PKCS11
Slot
"
)
;
equal
(
testSlot
.
name
"
Test
PKCS11
Slot
"
"
Actual
and
expected
name
should
match
"
)
;
equal
(
testSlot
.
desc
"
Test
PKCS11
Slot
"
"
Actual
and
expected
description
should
match
"
)
;
equal
(
testSlot
.
manID
"
Test
PKCS11
Manufacturer
ID
"
"
Actual
and
expected
manufacturer
ID
should
match
"
)
;
equal
(
testSlot
.
HWVersion
"
0
.
0
"
"
Actual
and
expected
hardware
version
should
match
"
)
;
equal
(
testSlot
.
FWVersion
"
0
.
0
"
"
Actual
and
expected
firmware
version
should
match
"
)
;
let
testToken
=
testSlot
.
getToken
(
)
;
notEqual
(
testToken
null
"
getToken
(
)
should
succeed
"
)
;
equal
(
testToken
.
tokenLabel
"
Test
PKCS11
Toke
Label
"
"
Spot
check
:
the
actual
and
expected
test
token
labels
should
be
equal
"
)
;
}
