"
use
strict
"
;
var
gExpectOCSPRequest
;
function
add_ocsp_test
(
aHost
aExpectedResult
aStaplingEnabled
aExpectOCSPRequest
=
false
aWithSecurityInfo
=
undefined
)
{
add_connection_test
(
aHost
aExpectedResult
function
(
)
{
gExpectOCSPRequest
=
aExpectOCSPRequest
;
clearOCSPCache
(
)
;
clearSessionCache
(
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
ssl
.
enable_ocsp_stapling
"
aStaplingEnabled
)
;
}
aWithSecurityInfo
)
;
}
function
add_tests
(
)
{
add_ocsp_test
(
"
ocsp
-
stapling
-
plain
-
ee
-
with
-
must
-
staple
-
int
.
example
.
com
"
MOZILLA_PKIX_ERROR_REQUIRED_TLS_FEATURE_MISSING
true
)
;
add_ocsp_test
(
"
multi
-
tls
-
feature
-
good
.
example
.
com
"
PRErrorCodeSuccess
false
)
;
add_ocsp_test
(
"
multi
-
tls
-
feature
-
bad
.
example
.
com
"
MOZILLA_PKIX_ERROR_REQUIRED_TLS_FEATURE_MISSING
false
)
;
add_ocsp_test
(
"
ocsp
-
stapling
-
must
-
staple
.
example
.
com
"
PRErrorCodeSuccess
true
)
;
add_ocsp_test
(
"
ocsp
-
stapling
-
must
-
staple
-
revoked
.
example
.
com
"
SEC_ERROR_REVOKED_CERTIFICATE
true
)
;
add_ocsp_test
(
"
ocsp
-
stapling
-
must
-
staple
-
missing
.
example
.
com
"
MOZILLA_PKIX_ERROR_REQUIRED_TLS_FEATURE_MISSING
true
true
)
;
add_ocsp_test
(
"
ocsp
-
stapling
-
must
-
staple
-
empty
.
example
.
com
"
SEC_ERROR_OCSP_MALFORMED_RESPONSE
true
)
;
add_ocsp_test
(
"
ocsp
-
stapling
-
must
-
staple
-
missing
.
example
.
com
"
PRErrorCodeSuccess
false
true
)
;
add_ocsp_test
(
"
ocsp
-
stapling
-
must
-
staple
-
expired
.
example
.
com
"
SEC_ERROR_OCSP_OLD_RESPONSE
true
true
)
;
add_ocsp_test
(
"
ocsp
-
stapling
-
must
-
staple
-
try
-
later
.
example
.
com
"
SEC_ERROR_OCSP_TRY_SERVER_LATER
true
true
)
;
add_ocsp_test
(
"
ocsp
-
stapling
-
must
-
staple
-
invalid
-
signer
.
example
.
com
"
SEC_ERROR_OCSP_INVALID_SIGNING_CERT
true
true
)
;
add_test
(
function
(
)
{
clearSessionCache
(
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
ssl
.
enable_ocsp_must_staple
"
false
)
;
run_next_test
(
)
;
}
)
;
add_ocsp_test
(
"
ocsp
-
stapling
-
must
-
staple
-
missing
.
example
.
com
"
PRErrorCodeSuccess
true
true
)
;
}
function
run_test
(
)
{
do_get_profile
(
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
ssl
.
enable_ocsp_must_staple
"
true
)
;
Services
.
prefs
.
setIntPref
(
"
security
.
OCSP
.
enabled
"
1
)
;
Services
.
prefs
.
setIntPref
(
"
security
.
OCSP
.
timeoutMilliseconds
.
soft
"
5000
)
;
let
fakeOCSPResponder
=
new
HttpServer
(
)
;
fakeOCSPResponder
.
registerPrefixHandler
(
"
/
"
function
(
request
response
)
{
response
.
setStatusLine
(
request
.
httpVersion
500
"
Internal
Server
Error
"
)
;
ok
(
gExpectOCSPRequest
"
Should
be
getting
an
OCSP
request
only
when
expected
"
)
;
}
)
;
fakeOCSPResponder
.
start
(
8888
)
;
add_tls_server_setup
(
"
OCSPStaplingServer
"
"
ocsp_certs
"
)
;
add_tests
(
)
;
add_test
(
function
(
)
{
fakeOCSPResponder
.
stop
(
run_next_test
)
;
}
)
;
run_next_test
(
)
;
}
