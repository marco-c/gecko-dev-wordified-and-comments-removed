"
use
strict
"
;
Services
.
prefs
.
setBoolPref
(
"
security
.
osclientcerts
.
autoload
"
false
)
;
do_get_profile
(
)
;
const
{
TestUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
TestUtils
.
sys
.
mjs
"
)
;
async
function
check_osclientcerts_module_loaded
(
)
{
await
TestUtils
.
topicObserved
(
"
psm
:
load
-
os
-
client
-
certs
-
module
-
task
-
ran
"
)
;
let
testModule
=
checkPKCS11ModuleExists
(
"
OS
Client
Cert
Module
"
)
;
let
testModuleSlotNames
=
Array
.
from
(
testModule
.
listSlots
(
)
slot
=
>
slot
.
name
)
;
testModuleSlotNames
.
sort
(
)
;
const
expectedSlotNames
=
[
"
OS
Client
Cert
Slot
"
]
;
deepEqual
(
testModuleSlotNames
expectedSlotNames
"
Actual
and
expected
slot
names
should
be
equal
"
)
;
}
add_task
(
async
function
run_test
(
)
{
checkPKCS11ModuleNotPresent
(
"
OS
Client
Cert
Module
"
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
osclientcerts
.
autoload
"
true
)
;
await
check_osclientcerts_module_loaded
(
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
osclientcerts
.
autoload
"
false
)
;
checkPKCS11ModuleNotPresent
(
"
OS
Client
Cert
Module
"
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
osclientcerts
.
autoload
"
true
)
;
await
check_osclientcerts_module_loaded
(
)
;
Services
.
prefs
.
setBoolPref
(
"
security
.
osclientcerts
.
autoload
"
false
)
;
checkPKCS11ModuleNotPresent
(
"
OS
Client
Cert
Module
"
)
;
}
)
;
