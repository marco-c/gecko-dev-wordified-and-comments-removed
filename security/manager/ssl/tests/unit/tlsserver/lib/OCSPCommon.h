#
ifndef
OCSPCommon_h
#
define
OCSPCommon_h
#
include
"
ScopedNSSTypes
.
h
"
#
include
"
certt
.
h
"
#
include
"
mozpkix
/
test
/
pkixtestutil
.
h
"
#
include
"
seccomon
.
h
"
enum
OCSPResponseType
{
ORTNull
=
0
ORTGood
ORTRevoked
ORTRevokedOld
ORTUnknown
ORTUnknownOld
ORTGoodOtherCert
ORTGoodOtherCA
ORTExpired
ORTExpiredFreshCA
ORTNone
ORTEmpty
ORTMalformed
ORTSrverr
ORTTryLater
ORTNeedsSig
ORTUnauthorized
ORTBadSignature
ORTSkipResponseBytes
ORTCriticalExtension
ORTNoncriticalExtension
ORTEmptyExtensions
ORTDelegatedIncluded
ORTDelegatedIncludedLast
ORTDelegatedMissing
ORTDelegatedMissingMultiple
ORTLongValidityAlmostExpired
ORTAncientAlmostExpired
}
;
struct
OCSPHost
{
const
char
*
mHostName
;
OCSPResponseType
mORT
;
const
char
*
mAdditionalCertName
;
const
char
*
mServerCertName
;
}
;
SECItemArray
*
GetOCSPResponseForType
(
OCSPResponseType
aORT
const
mozilla
:
:
UniqueCERTCertificate
&
aCert
const
mozilla
:
:
UniquePLArenaPool
&
aArena
const
char
*
aAdditionalCertName
time_t
aThisUpdateSkew
mozilla
:
:
pkix
:
:
test
:
:
ByteString
*
aSignedCertificateTimestamps
=
nullptr
)
;
#
endif
