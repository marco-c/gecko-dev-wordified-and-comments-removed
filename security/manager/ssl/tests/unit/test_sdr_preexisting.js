"
use
strict
"
;
function
run_test
(
)
{
const
keyDBName
=
"
key4
.
db
"
;
let
profile
=
do_get_profile
(
)
;
let
keyDBFile
=
do_get_file
(
test_sdr_preexisting
/
{
keyDBName
}
)
;
keyDBFile
.
copyTo
(
profile
keyDBName
)
;
let
sdr
=
Cc
[
"
mozilla
.
org
/
security
/
sdr
;
1
"
]
.
getService
(
Ci
.
nsISecretDecoderRing
)
;
let
testcases
=
[
{
ciphertext
:
"
MDoEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECGeDHwVfyFqzBBAYvqMq
/
kDMsrARVNdC1C8d
"
plaintext
:
"
password
"
}
{
ciphertext
:
"
MDIEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECCAzLDVmYG2
/
BAh3IoIsMmT8dQ
=
=
"
plaintext
:
"
a
"
}
{
ciphertext
:
"
MDIEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECPN8zlZzn8FdBAiu2acpT8UHsg
=
=
"
plaintext
:
"
bb
"
}
{
ciphertext
:
"
MDIEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECD5px1eMKkJQBAgUPp35GlrDvQ
=
=
"
plaintext
:
"
!
seven
!
"
}
{
ciphertext
:
"
MDIEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECMh0hLtKDyUdBAixw9UZsMt
+
vA
=
=
"
plaintext
:
"
sixsix
"
}
{
ciphertext
:
"
MFoEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECDRX1qi
+
/
FX1BDATFIcIneQjvBuq3wdFxzllJt2VtUD69ACdOKAXH3eA87oHDvuHqOeCDwRy4UzoG5s
=
"
plaintext
:
"
thisismuchlongerandsotakesupmultipleblocks
"
}
{
ciphertext
:
"
MFoEEPgAAAAAAAAAAAAAAAAAAAEwFAYIKoZIhvcNAwcECDRX1qi
+
/
FX1BDAbFIcIneQjvBuq3wdFxzllJt2VtUD69ACdOKAXH3eA87oHDvuHqOeCDwRy4UzoG5s
=
"
plaintext
:
"
nnLbuwLRkhlongerandsotakesupmultipleblocks
"
}
]
;
for
(
let
testcase
of
testcases
)
{
let
decrypted
=
sdr
.
decryptString
(
testcase
.
ciphertext
)
;
equal
(
decrypted
testcase
.
plaintext
"
decrypted
ciphertext
should
match
expected
plaintext
"
)
;
}
}
