"
use
strict
"
;
function
shouldBeImminentlyDistrusted
(
aTransportSecurityInfo
)
{
let
isDistrust
=
aTransportSecurityInfo
.
securityState
&
Ci
.
nsIWebProgressListener
.
STATE_CERT_DISTRUST_IMMINENT
;
Assert
.
ok
(
isDistrust
"
This
host
should
be
imminently
distrusted
"
)
;
}
do_get_profile
(
)
;
const
certDB
=
Cc
[
"
mozilla
.
org
/
security
/
x509certdb
;
1
"
]
.
getService
(
Ci
.
nsIX509CertDB
)
;
add_tls_server_setup
(
"
SymantecSanctionsServer
"
"
test_symantec_apple_google
"
)
;
add_test
(
function
(
)
{
addCertFromFile
(
certDB
"
test_symantec_apple_google
/
intermediate
-
whitelisted
.
pem
"
"
"
)
;
addCertFromFile
(
certDB
"
test_symantec_apple_google
/
intermediate
-
other
.
pem
"
"
"
)
;
run_next_test
(
)
;
}
)
;
add_connection_test
(
"
symantec
-
not
-
whitelisted
-
after
-
cutoff
.
example
.
com
"
PRErrorCodeSuccess
null
shouldBeImminentlyDistrusted
)
;
add_connection_test
(
"
symantec
-
not
-
whitelisted
-
before
-
cutoff
.
example
.
com
"
MOZILLA_PKIX_ERROR_ADDITIONAL_POLICY_CONSTRAINT_FAILED
null
null
)
;
add_test
(
function
(
)
{
clearSessionCache
(
)
;
Services
.
prefs
.
setIntPref
(
"
security
.
pki
.
distrust_ca_policy
"
2
)
;
run_next_test
(
)
;
}
)
;
add_connection_test
(
"
symantec
-
not
-
whitelisted
-
before
-
cutoff
.
example
.
com
"
MOZILLA_PKIX_ERROR_ADDITIONAL_POLICY_CONSTRAINT_FAILED
null
null
)
;
add_connection_test
(
"
symantec
-
not
-
whitelisted
-
after
-
cutoff
.
example
.
com
"
MOZILLA_PKIX_ERROR_ADDITIONAL_POLICY_CONSTRAINT_FAILED
null
null
)
;
add_test
(
function
(
)
{
clearSessionCache
(
)
;
Services
.
prefs
.
setIntPref
(
"
security
.
pki
.
distrust_ca_policy
"
0
)
;
run_next_test
(
)
;
}
)
;
add_connection_test
(
"
symantec
-
not
-
whitelisted
-
before
-
cutoff
.
example
.
com
"
PRErrorCodeSuccess
null
shouldBeImminentlyDistrusted
)
;
add_test
(
function
(
)
{
clearSessionCache
(
)
;
Services
.
prefs
.
clearUserPref
(
"
security
.
pki
.
distrust_ca_policy
"
)
;
run_next_test
(
)
;
}
)
;
add_test
(
function
(
)
{
addCertFromFile
(
certDB
"
test_symantec_apple_google
/
intermediate
-
other
-
crossigned
.
pem
"
"
"
)
;
run_next_test
(
)
;
}
)
;
add_connection_test
(
"
symantec
-
not
-
whitelisted
-
before
-
cutoff
.
example
.
com
"
MOZILLA_PKIX_ERROR_ADDITIONAL_POLICY_CONSTRAINT_FAILED
null
null
)
;
add_task
(
async
function
(
)
{
addCertFromFile
(
certDB
"
test_symantec_apple_google
/
real
-
google
-
g2
-
intermediate
.
pem
"
"
"
)
;
let
whitelistedCert
=
constructCertFromFile
(
"
test_symantec_apple_google
/
real
-
googlecom
.
pem
"
)
;
Services
.
prefs
.
setIntPref
(
"
security
.
OCSP
.
enabled
"
0
)
;
Services
.
prefs
.
setIntPref
(
"
security
.
pki
.
distrust_ca_policy
"
1
)
;
const
VALIDATION_TIME
=
1518739200
;
await
checkCertErrorGenericAtTime
(
certDB
whitelistedCert
PRErrorCodeSuccess
certificateUsageSSLServer
VALIDATION_TIME
)
;
Services
.
prefs
.
setIntPref
(
"
security
.
pki
.
distrust_ca_policy
"
2
)
;
await
checkCertErrorGenericAtTime
(
certDB
whitelistedCert
PRErrorCodeSuccess
certificateUsageSSLServer
VALIDATION_TIME
)
;
}
)
;
