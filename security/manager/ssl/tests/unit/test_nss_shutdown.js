"
use
strict
"
;
function
startAsyncNSSOperation
(
certdb
appFile
)
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
certdb
.
openSignedAppFileAsync
(
Ci
.
nsIX509CertDB
.
AppXPCShellRoot
appFile
function
(
rv
aZipReader
aSignerCert
)
{
resolve
(
)
;
}
)
;
}
)
;
}
add_task
(
async
function
(
)
{
do_get_profile
(
)
;
let
psm
=
Cc
[
"
mozilla
.
org
/
psm
;
1
"
]
.
getService
(
Ci
.
nsISupports
)
.
QueryInterface
(
Ci
.
nsIObserver
)
;
let
certdb
=
Cc
[
"
mozilla
.
org
/
security
/
x509certdb
;
1
"
]
.
getService
(
Ci
.
nsIX509CertDB
)
;
let
appFile
=
do_get_file
(
"
test_signed_apps
/
signed_app
.
zip
"
)
;
let
promises
=
[
]
;
for
(
let
i
=
0
;
i
<
25
;
i
+
+
)
{
promises
.
push
(
startAsyncNSSOperation
(
certdb
appFile
)
)
;
}
psm
.
observe
(
null
"
profile
-
before
-
change
"
null
)
;
for
(
let
i
=
0
;
i
<
25
;
i
+
+
)
{
promises
.
push
(
startAsyncNSSOperation
(
certdb
appFile
)
)
;
}
await
Promise
.
all
(
promises
)
;
}
)
;
