"
use
strict
"
;
function
run_test
(
)
{
const
certDBName
=
"
cert9
.
db
"
;
const
keyDBName
=
"
key4
.
db
"
;
let
profile
=
do_get_profile
(
)
;
let
certDBFile
=
do_get_file
(
test_cert_isBuiltInRoot_reload
/
{
certDBName
}
)
;
certDBFile
.
copyTo
(
profile
certDBName
)
;
let
keyDBFile
=
do_get_file
(
test_cert_isBuiltInRoot_reload
/
{
keyDBName
}
)
;
keyDBFile
.
copyTo
(
profile
keyDBName
)
;
let
certdb
=
Cc
[
"
mozilla
.
org
/
security
/
x509certdb
;
1
"
]
.
getService
(
Ci
.
nsIX509CertDB
)
;
const
veriSignCertDBKey
=
AAAAAAAAAAAAAAAQAAAAzS
+
A
/
iOM
DiIPSGcSKJGHrLMwgcoxCzAJBgNVBAYTAlVTMRcwFQYDVQQKEw5WZXJpU2lnbiwg
SW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29yazE6MDgGA1UECxMx
KGMpIDIwMDcgVmVyaVNpZ24sIEluYy4gLSBGb3IgYXV0aG9yaXplZCB1c2Ugb25s
eTFFMEMGA1UEAxM8VmVyaVNpZ24gQ2xhc3MgMyBQdWJsaWMgUHJpbWFyeSBDZXJ0
aWZpY2F0aW9uIEF1dGhvcml0eSAtIEc0
;
let
veriSignCert
=
certdb
.
findCertByDBKey
(
veriSignCertDBKey
)
;
ok
(
veriSignCert
"
Should
be
able
to
find
VeriSign
root
"
)
;
ok
(
veriSignCert
.
isBuiltInRoot
"
VeriSign
root
is
a
built
-
in
"
)
;
const
geoTrustCertDBKey
=
AAAAAAAAAAAAAAAQAAAAmzyy9EgK
AOL
+
6yQ7XmA
+
w2swgZgxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1HZW9UcnVzdCBJ
bmMuMTkwNwYDVQQLEzAoYykgMjAwNyBHZW9UcnVzdCBJbmMuIC0gRm9yIGF1dGhv
cml6ZWQgdXNlIG9ubHkxNjA0BgNVBAMTLUdlb1RydXN0IFByaW1hcnkgQ2VydGlm
aWNhdGlvbiBBdXRob3JpdHkgLSBHMg
=
=
;
let
geoTrustCert
=
certdb
.
findCertByDBKey
(
geoTrustCertDBKey
)
;
ok
(
geoTrustCert
"
Should
be
able
to
find
GeoTrust
root
"
)
;
ok
(
geoTrustCert
.
isBuiltInRoot
"
GeoTrust
root
is
a
built
-
in
"
)
;
const
letsEncryptCertDBKey
=
AAAAAAAAAAAAAAARAAAAQQCYE
/
R1E
+
V1C0PnQx6XHkS9MD8xJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRyd
XN0IENvLjEXMBUGA1UEAxMORFNUIFJvb3QgQ0EgWDM
=
;
let
letsEncryptCert
=
certdb
.
findCertByDBKey
(
letsEncryptCertDBKey
)
;
ok
(
letsEncryptCert
"
Should
be
able
to
find
LetsEncrypt
root
"
)
;
ok
(
!
letsEncryptCert
.
isBuiltInRoot
"
LetsEncrypt
root
is
not
a
built
-
in
"
)
;
}
