"
use
strict
"
;
function
run_test
(
)
{
const
certDBName
=
"
cert9
.
db
"
;
const
keyDBName
=
"
key4
.
db
"
;
let
profile
=
do_get_profile
(
)
;
let
certDBFile
=
do_get_file
(
test_cert_isBuiltInRoot_reload
/
{
certDBName
}
)
;
certDBFile
.
copyTo
(
profile
certDBName
)
;
let
keyDBFile
=
do_get_file
(
test_cert_isBuiltInRoot_reload
/
{
keyDBName
}
)
;
keyDBFile
.
copyTo
(
profile
keyDBName
)
;
let
certdb
=
Cc
[
"
mozilla
.
org
/
security
/
x509certdb
;
1
"
]
.
getService
(
Ci
.
nsIX509CertDB
)
;
const
sectigoDBKey
=
AAAAAAAAAAAAAAAQAAAAYULyzNobaTdEXxX
+
dSgQuPQwXzELMAk
GA1UEBhMCR0IxGDAWBgNVBAoTD1NlY3RpZ28gTGltaXRlZDE2MDQGA1UEAxMtU2VjdGlnbyBQd
WJsaWMgU2VydmVyIEF1dGhlbnRpY2F0aW9uIFJvb3QgRTQ2
;
let
sectigoCert
=
certdb
.
findCertByDBKey
(
sectigoDBKey
)
;
ok
(
sectigoCert
"
Should
be
able
to
find
Sectigo
root
"
)
;
ok
(
sectigoCert
.
isBuiltInRoot
"
Sectigo
root
is
a
built
-
in
"
)
;
const
naverCertDBKey
=
AAAAAAAAAAAAAAAUAAAAawGUMB6iC93
1xTMqsUNEcfjWUE0NMGkxCzAJBgNVBAYTAktSMSYwJAYDVQQKDB1OQVZFUiBCVVN
JTkVTUyBQTEFURk9STSBDb3JwLjEyMDAGA1UEAwwpTkFWRVIgR2xvYmFsIFJvb3Q
gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHk
=
;
let
naverCert
=
certdb
.
findCertByDBKey
(
naverCertDBKey
)
;
ok
(
naverCert
"
Should
be
able
to
find
NAVER
root
"
)
;
ok
(
naverCert
.
isBuiltInRoot
"
NAVER
root
is
a
built
-
in
"
)
;
const
letsEncryptCertDBKey
=
AAAAAAAAAAAAAAARAAAAQQCYE
/
R1E
+
V1C0PnQx6XHkS9MD8xJDAiBgNVBAoTG0RpZ2l0YWwgU2lnbmF0dXJlIFRyd
XN0IENvLjEXMBUGA1UEAxMORFNUIFJvb3QgQ0EgWDM
=
;
let
letsEncryptCert
=
certdb
.
findCertByDBKey
(
letsEncryptCertDBKey
)
;
ok
(
letsEncryptCert
"
Should
be
able
to
find
LetsEncrypt
root
"
)
;
ok
(
!
letsEncryptCert
.
isBuiltInRoot
"
LetsEncrypt
root
is
not
a
built
-
in
"
)
;
}
