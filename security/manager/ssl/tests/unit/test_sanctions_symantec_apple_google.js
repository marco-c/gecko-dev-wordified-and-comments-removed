"
use
strict
"
;
do_get_profile
(
)
;
const
certDB
=
Cc
[
"
mozilla
.
org
/
security
/
x509certdb
;
1
"
]
.
getService
(
Ci
.
nsIX509CertDB
)
;
add_tls_server_setup
(
"
SanctionsTestServer
"
"
test_sanctions
"
false
)
;
addCertFromFile
(
certDB
"
test_sanctions
/
symantec
-
test
-
ca
.
pem
"
"
CTu
u
u
"
)
;
add_test
(
function
(
)
{
addCertFromFile
(
certDB
"
test_sanctions
/
symantec
-
intermediate
-
allowlisted
.
pem
"
"
"
)
;
addCertFromFile
(
certDB
"
test_sanctions
/
symantec
-
intermediate
-
other
.
pem
"
"
"
)
;
run_next_test
(
)
;
}
)
;
add_connection_test
(
"
symantec
-
not
-
allowlisted
-
before
-
cutoff
.
example
.
com
"
MOZILLA_PKIX_ERROR_ADDITIONAL_POLICY_CONSTRAINT_FAILED
null
null
)
;
add_connection_test
(
"
symantec
-
not
-
allowlisted
-
after
-
cutoff
.
example
.
com
"
MOZILLA_PKIX_ERROR_ADDITIONAL_POLICY_CONSTRAINT_FAILED
null
null
)
;
add_test
(
function
(
)
{
addCertFromFile
(
certDB
"
test_sanctions
/
symantec
-
intermediate
-
other
-
crossigned
.
pem
"
"
"
)
;
run_next_test
(
)
;
}
)
;
add_connection_test
(
"
symantec
-
not
-
allowlisted
-
before
-
cutoff
.
example
.
com
"
MOZILLA_PKIX_ERROR_ADDITIONAL_POLICY_CONSTRAINT_FAILED
null
null
)
;
add_task
(
async
function
(
)
{
addCertFromFile
(
certDB
"
test_sanctions
/
apple
-
ist
-
ca
-
8
-
g1
-
intermediate
.
pem
"
"
"
)
;
let
allowlistedCert
=
constructCertFromFile
(
"
test_sanctions
/
cds
-
apple
-
com
.
pem
"
)
;
Services
.
prefs
.
setIntPref
(
"
security
.
OCSP
.
enabled
"
0
)
;
const
VALIDATION_TIME
=
1577836800
;
await
checkCertErrorGenericAtTime
(
certDB
allowlistedCert
PRErrorCodeSuccess
certificateUsageSSLServer
VALIDATION_TIME
)
;
}
)
;
