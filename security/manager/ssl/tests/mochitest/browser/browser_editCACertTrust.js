"
use
strict
"
;
var
gCertDB
=
Cc
[
"
mozilla
.
org
/
security
/
x509certdb
;
1
"
]
.
getService
(
Ci
.
nsIX509CertDB
)
;
var
gCert
;
function
openEditCertTrustDialog
(
)
{
let
win
=
window
.
openDialog
(
"
chrome
:
/
/
pippki
/
content
/
editcacert
.
xhtml
"
"
"
"
"
gCert
)
;
return
new
Promise
(
resolve
=
>
{
win
.
addEventListener
(
"
load
"
function
(
)
{
executeSoon
(
(
)
=
>
resolve
(
win
)
)
;
}
{
once
:
true
}
)
;
}
)
;
}
add_setup
(
async
function
(
)
{
gCert
=
await
readCertificate
(
"
ca
.
pem
"
"
CT
"
)
;
Assert
.
ok
(
gCertDB
.
isCertTrusted
(
gCert
Ci
.
nsIX509Cert
.
CA_CERT
Ci
.
nsIX509CertDB
.
TRUSTED_SSL
)
"
Sanity
check
:
ca
.
pem
should
be
trusted
for
SSL
"
)
;
Assert
.
ok
(
!
gCertDB
.
isCertTrusted
(
gCert
Ci
.
nsIX509Cert
.
CA_CERT
Ci
.
nsIX509CertDB
.
TRUSTED_EMAIL
)
"
Sanity
check
:
ca
.
pem
should
not
be
trusted
for
e
-
mail
"
)
;
}
)
;
add_task
(
async
function
testAcceptDialog
(
)
{
let
win
=
await
openEditCertTrustDialog
(
)
;
let
sslCheckbox
=
win
.
document
.
getElementById
(
"
trustSSL
"
)
;
let
emailCheckbox
=
win
.
document
.
getElementById
(
"
trustEmail
"
)
;
Assert
.
ok
(
sslCheckbox
.
checked
"
Cert
should
be
trusted
for
SSL
in
UI
"
)
;
Assert
.
ok
(
!
emailCheckbox
.
checked
"
Cert
should
not
be
trusted
for
e
-
mail
in
UI
"
)
;
sslCheckbox
.
checked
=
false
;
emailCheckbox
.
checked
=
true
;
info
(
"
Accepting
dialog
"
)
;
win
.
document
.
getElementById
(
"
editCaCert
"
)
.
acceptDialog
(
)
;
await
BrowserTestUtils
.
windowClosed
(
win
)
;
Assert
.
ok
(
!
gCertDB
.
isCertTrusted
(
gCert
Ci
.
nsIX509Cert
.
CA_CERT
Ci
.
nsIX509CertDB
.
TRUSTED_SSL
)
"
Cert
should
no
longer
be
trusted
for
SSL
"
)
;
Assert
.
ok
(
gCertDB
.
isCertTrusted
(
gCert
Ci
.
nsIX509Cert
.
CA_CERT
Ci
.
nsIX509CertDB
.
TRUSTED_EMAIL
)
"
Cert
should
now
be
trusted
for
e
-
mail
"
)
;
}
)
;
add_task
(
async
function
testCancelDialog
(
)
{
let
win
=
await
openEditCertTrustDialog
(
)
;
let
sslCheckbox
=
win
.
document
.
getElementById
(
"
trustSSL
"
)
;
let
emailCheckbox
=
win
.
document
.
getElementById
(
"
trustEmail
"
)
;
Assert
.
ok
(
!
sslCheckbox
.
checked
"
Cert
should
not
be
trusted
for
SSL
in
UI
"
)
;
Assert
.
ok
(
emailCheckbox
.
checked
"
Cert
should
be
trusted
for
e
-
mail
in
UI
"
)
;
sslCheckbox
.
checked
=
true
;
emailCheckbox
.
checked
=
false
;
info
(
"
Canceling
dialog
"
)
;
win
.
document
.
getElementById
(
"
editCaCert
"
)
.
cancelDialog
(
)
;
await
BrowserTestUtils
.
windowClosed
(
win
)
;
Assert
.
ok
(
!
gCertDB
.
isCertTrusted
(
gCert
Ci
.
nsIX509Cert
.
CA_CERT
Ci
.
nsIX509CertDB
.
TRUSTED_SSL
)
"
Cert
should
still
not
be
trusted
for
SSL
"
)
;
Assert
.
ok
(
gCertDB
.
isCertTrusted
(
gCert
Ci
.
nsIX509Cert
.
CA_CERT
Ci
.
nsIX509CertDB
.
TRUSTED_EMAIL
)
"
Cert
should
still
be
trusted
for
e
-
mail
"
)
;
}
)
;
