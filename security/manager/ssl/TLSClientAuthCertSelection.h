#
ifndef
SECURITY_MANAGER_SSL_TLSCLIENTAUTHCERTSELECTION_H_
#
define
SECURITY_MANAGER_SSL_TLSCLIENTAUTHCERTSELECTION_H_
#
include
"
nsIX509Cert
.
h
"
#
include
"
ssl
.
h
"
#
include
"
nsNSSIOLayer
.
h
"
SECStatus
SSLGetClientAuthDataHook
(
void
*
arg
PRFileDesc
*
socket
CERTDistNames
*
caNames
CERTCertificate
*
*
pRetCert
SECKEYPrivateKey
*
*
pRetKey
)
;
class
ClientAuthCertificateSelectedBase
:
public
mozilla
:
:
Runnable
{
public
:
ClientAuthCertificateSelectedBase
(
)
:
Runnable
(
"
ClientAuthCertificateSelectedBase
"
)
{
}
void
SetSelectedClientAuthData
(
nsTArray
<
uint8_t
>
&
&
selectedCertBytes
nsTArray
<
nsTArray
<
uint8_t
>
>
&
&
selectedCertChainBytes
)
;
protected
:
nsTArray
<
uint8_t
>
mSelectedCertBytes
;
nsTArray
<
nsTArray
<
uint8_t
>
>
mSelectedCertChainBytes
;
}
;
class
ClientAuthCertificateSelected
:
public
ClientAuthCertificateSelectedBase
{
public
:
explicit
ClientAuthCertificateSelected
(
nsNSSSocketInfo
*
socketInfo
)
:
mSocketInfo
(
socketInfo
)
{
}
NS_IMETHOD
Run
(
)
override
;
private
:
RefPtr
<
nsNSSSocketInfo
>
mSocketInfo
;
}
;
#
endif
