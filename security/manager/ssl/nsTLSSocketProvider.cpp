#
include
"
mozilla
/
BasePrincipal
.
h
"
#
include
"
nsTLSSocketProvider
.
h
"
#
include
"
nsNSSIOLayer
.
h
"
#
include
"
nsError
.
h
"
using
mozilla
:
:
NeckoOriginAttributes
;
nsTLSSocketProvider
:
:
nsTLSSocketProvider
(
)
{
}
nsTLSSocketProvider
:
:
~
nsTLSSocketProvider
(
)
{
}
NS_IMPL_ISUPPORTS
(
nsTLSSocketProvider
nsISocketProvider
)
NS_IMETHODIMP
nsTLSSocketProvider
:
:
NewSocket
(
int32_t
family
const
char
*
host
int32_t
port
nsIProxyInfo
*
proxy
const
NeckoOriginAttributes
&
originAttributes
uint32_t
flags
PRFileDesc
*
*
_result
nsISupports
*
*
securityInfo
)
{
nsresult
rv
=
nsSSLIOLayerNewSocket
(
family
host
port
proxy
originAttributes
_result
securityInfo
true
flags
)
;
return
(
NS_FAILED
(
rv
)
)
?
NS_ERROR_SOCKET_CREATE_FAILED
:
NS_OK
;
}
NS_IMETHODIMP
nsTLSSocketProvider
:
:
AddToSocket
(
int32_t
family
const
char
*
host
int32_t
port
nsIProxyInfo
*
proxy
const
NeckoOriginAttributes
&
originAttributes
uint32_t
flags
PRFileDesc
*
aSocket
nsISupports
*
*
securityInfo
)
{
nsresult
rv
=
nsSSLIOLayerAddToSocket
(
family
host
port
proxy
originAttributes
aSocket
securityInfo
true
flags
)
;
return
(
NS_FAILED
(
rv
)
)
?
NS_ERROR_SOCKET_CREATE_FAILED
:
NS_OK
;
}
