#
ifndef
BASE_DEBUG_ACTIVITY_TRACKER_H_
#
define
BASE_DEBUG_ACTIVITY_TRACKER_H_
#
include
"
base
/
base_export
.
h
"
#
include
"
base
/
compiler_specific
.
h
"
#
include
"
base
/
macros
.
h
"
namespace
base
{
class
PlatformThreadHandle
;
class
WaitableEvent
;
namespace
internal
{
class
LockImpl
;
}
namespace
debug
{
class
BASE_EXPORT
ScopedLockAcquireActivity
{
public
:
ALWAYS_INLINE
explicit
ScopedLockAcquireActivity
(
const
base
:
:
internal
:
:
LockImpl
*
lock
)
{
}
DISALLOW_COPY_AND_ASSIGN
(
ScopedLockAcquireActivity
)
;
}
;
class
BASE_EXPORT
ScopedEventWaitActivity
{
public
:
ALWAYS_INLINE
explicit
ScopedEventWaitActivity
(
const
base
:
:
WaitableEvent
*
event
)
{
}
DISALLOW_COPY_AND_ASSIGN
(
ScopedEventWaitActivity
)
;
}
;
class
BASE_EXPORT
ScopedThreadJoinActivity
{
public
:
ALWAYS_INLINE
explicit
ScopedThreadJoinActivity
(
const
base
:
:
PlatformThreadHandle
*
thread
)
{
}
DISALLOW_COPY_AND_ASSIGN
(
ScopedThreadJoinActivity
)
;
}
;
}
}
#
endif
