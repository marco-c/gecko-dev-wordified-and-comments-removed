#
ifndef
BASE_FILE_VERSION_INFO_WIN_H_
#
define
BASE_FILE_VERSION_INFO_WIN_H_
#
include
<
memory
>
#
include
<
vector
>
#
include
"
base
/
version
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
struct
tagVS_FIXEDFILEINFO
;
typedef
tagVS_FIXEDFILEINFO
VS_FIXEDFILEINFO
;
namespace
base
{
class
FilePath
;
}
class
FileVersionInfoWin
{
public
:
FileVersionInfoWin
(
const
FileVersionInfoWin
&
)
=
delete
;
FileVersionInfoWin
&
operator
=
(
const
FileVersionInfoWin
&
)
=
delete
;
static
std
:
:
unique_ptr
<
FileVersionInfoWin
>
CreateFileVersionInfoWin
(
const
base
:
:
FilePath
&
file_path
)
;
base
:
:
Version
GetFileVersion
(
)
const
;
private
:
FileVersionInfoWin
(
std
:
:
vector
<
uint8_t
>
&
&
data
WORD
language
WORD
code_page
)
;
const
std
:
:
vector
<
uint8_t
>
owned_data_
;
const
void
*
const
data_
;
const
WORD
language_
;
const
WORD
code_page_
;
const
VS_FIXEDFILEINFO
&
fixed_file_info_
;
}
;
#
endif
