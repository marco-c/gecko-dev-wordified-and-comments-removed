#
include
"
sandboxTarget
.
h
"
#
include
"
sandbox
/
win
/
src
/
sandbox
.
h
"
namespace
mozilla
{
SandboxTarget
*
SandboxTarget
:
:
Instance
(
)
{
static
SandboxTarget
sb
;
return
&
sb
;
}
void
SandboxTarget
:
:
StartSandbox
(
)
{
if
(
mTargetServices
)
{
mTargetServices
-
>
LowerToken
(
)
;
NotifyStartObservers
(
)
;
}
}
void
SandboxTarget
:
:
NotifyStartObservers
(
)
{
for
(
auto
&
&
obs
:
mStartObservers
)
{
if
(
!
obs
)
{
continue
;
}
obs
(
)
;
}
mStartObservers
.
clear
(
)
;
}
bool
SandboxTarget
:
:
BrokerDuplicateHandle
(
HANDLE
aSourceHandle
DWORD
aTargetProcessId
HANDLE
*
aTargetHandle
DWORD
aDesiredAccess
DWORD
aOptions
)
{
if
(
!
mTargetServices
)
{
return
false
;
}
sandbox
:
:
ResultCode
result
=
mTargetServices
-
>
DuplicateHandle
(
aSourceHandle
aTargetProcessId
aTargetHandle
aDesiredAccess
aOptions
)
;
return
(
sandbox
:
:
SBOX_ALL_OK
=
=
result
)
;
}
bool
SandboxTarget
:
:
GetComplexLineBreaks
(
const
WCHAR
*
text
uint32_t
length
uint8_t
*
break_before
)
{
if
(
!
mTargetServices
)
{
return
false
;
}
sandbox
:
:
ResultCode
result
=
mTargetServices
-
>
GetComplexLineBreaks
(
text
length
break_before
)
;
return
(
sandbox
:
:
SBOX_ALL_OK
=
=
result
)
;
}
}
