#
ifndef
SECURITY_SANDBOX_WIN_SRC_SANDBOXBROKER_CONFIGHELPERS_H_
#
define
SECURITY_SANDBOX_WIN_SRC_SANDBOXBROKER_CONFIGHELPERS_H_
#
include
<
minwindef
.
h
>
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
nsStringFwd
.
h
"
#
include
"
sandbox
/
win
/
src
/
sandbox_policy
.
h
"
namespace
sandbox
{
class
TargetPolicy
;
}
namespace
mozilla
:
:
sandboxing
{
class
SizeTrackingConfig
{
public
:
explicit
SizeTrackingConfig
(
sandbox
:
:
TargetConfig
*
aConfig
int32_t
aStoragePages
)
;
virtual
sandbox
:
:
ResultCode
AllowFileAccess
(
sandbox
:
:
FileSemantics
aSemantics
const
wchar_t
*
aPattern
)
;
private
:
sandbox
:
:
TargetConfig
*
mConfig
;
int32_t
mRemainingSize
;
}
;
MOZ_RAII
class
UserFontConfigHelper
final
{
public
:
UserFontConfigHelper
(
const
wchar_t
*
aUserFontKeyPath
const
nsString
&
aWinUserProfile
const
nsString
&
aLocalAppData
)
;
~
UserFontConfigHelper
(
)
;
void
AddRules
(
sandboxing
:
:
SizeTrackingConfig
&
aPolicy
)
const
;
UserFontConfigHelper
(
const
UserFontConfigHelper
&
)
=
delete
;
UserFontConfigHelper
&
operator
=
(
const
UserFontConfigHelper
&
)
=
delete
;
private
:
const
nsString
&
mWinUserProfile
;
const
nsString
&
mLocalAppData
;
HKEY
mUserFontKey
=
nullptr
;
}
;
}
#
endif
