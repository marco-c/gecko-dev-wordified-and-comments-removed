#
ifndef
__REMOTE_SANDBOXBROKER_H__
#
define
__REMOTE_SANDBOXBROKER_H__
#
include
"
sandboxBroker
.
h
"
#
include
"
RemoteSandboxBrokerParent
.
h
"
namespace
mozilla
{
class
RemoteSandboxBroker
:
public
AbstractSandboxBroker
{
public
:
RemoteSandboxBroker
(
)
;
void
Shutdown
(
)
override
;
bool
LaunchApp
(
const
wchar_t
*
aPath
const
wchar_t
*
aArguments
base
:
:
EnvironmentMap
&
aEnvironment
GeckoProcessType
aProcessType
const
bool
aEnableLogging
const
IMAGE_THUNK_DATA
*
void
*
*
aProcessHandle
)
override
;
void
SetSecurityLevelForContentProcess
(
int32_t
aSandboxLevel
bool
aIsFileProcess
)
override
;
void
SetSecurityLevelForGPUProcess
(
int32_t
aSandboxLevel
const
nsCOMPtr
<
nsIFile
>
&
aProfileDir
)
override
;
bool
SetSecurityLevelForRDDProcess
(
)
override
;
bool
SetSecurityLevelForSocketProcess
(
)
override
;
bool
SetSecurityLevelForGMPlugin
(
SandboxLevel
aLevel
bool
aIsRemoteLaunch
=
false
)
override
;
bool
SetSecurityLevelForUtilityProcess
(
mozilla
:
:
ipc
:
:
SandboxingKind
aSandbox
)
override
;
bool
AllowReadFile
(
wchar_t
const
*
file
)
override
;
void
AddHandleToShare
(
HANDLE
aHandle
)
override
;
bool
IsWin32kLockedDown
(
)
final
{
return
false
;
}
;
private
:
virtual
~
RemoteSandboxBroker
(
)
;
LaunchParameters
mParameters
;
RemoteSandboxBrokerParent
mParent
;
nsCOMPtr
<
nsISerialEventTarget
>
mIPCLaunchThread
;
bool
mShutdown
=
false
;
}
;
}
#
endif
