#
ifndef
mozilla_SandboxReporter_h
#
define
mozilla_SandboxReporter_h
#
include
"
SandboxReporterCommon
.
h
"
#
include
"
base
/
platform_thread
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
mozilla
/
Types
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
class
SandboxReporter
final
:
public
PlatformThread
:
:
Delegate
{
public
:
explicit
SandboxReporter
(
)
;
~
SandboxReporter
(
)
;
bool
Init
(
)
;
int
GetClientFileDescriptor
(
)
const
;
struct
Snapshot
{
uint64_t
mOffset
;
nsTArray
<
SandboxReport
>
mReports
;
}
;
Snapshot
GetSnapshot
(
)
;
static
SandboxReporter
*
Singleton
(
)
;
private
:
int
mClientFd
;
int
mServerFd
;
PlatformThreadHandle
mThread
;
Mutex
mMutex
MOZ_UNANNOTATED
;
UniquePtr
<
SandboxReport
[
]
>
mBuffer
;
uint64_t
mCount
;
static
StaticAutoPtr
<
SandboxReporter
>
sSingleton
;
void
ThreadMain
(
void
)
override
;
void
AddOne
(
const
SandboxReport
&
aReport
)
;
}
;
static
const
size_t
kSandboxReporterBufferSize
=
32
;
}
#
endif
