#
ifndef
mozilla_SandboxBrokerClient_h
#
define
mozilla_SandboxBrokerClient_h
#
include
"
broker
/
SandboxBrokerCommon
.
h
"
#
include
"
broker
/
SandboxBrokerUtils
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
struct
stat
;
struct
sockaddr_un
;
namespace
mozilla
{
class
SandboxBrokerClient
final
:
private
SandboxBrokerCommon
{
public
:
explicit
SandboxBrokerClient
(
int
aFd
)
;
~
SandboxBrokerClient
(
)
;
int
Open
(
const
char
*
aPath
int
aFlags
)
;
int
Access
(
const
char
*
aPath
int
aMode
)
;
int
Stat
(
const
char
*
aPath
statstruct
*
aStat
)
;
int
LStat
(
const
char
*
aPath
statstruct
*
aStat
)
;
int
Chmod
(
const
char
*
aPath
int
aMode
)
;
int
Link
(
const
char
*
aPath
const
char
*
aPath2
)
;
int
Mkdir
(
const
char
*
aPath
int
aMode
)
;
int
Symlink
(
const
char
*
aOldPath
const
char
*
aNewPath
)
;
int
Rename
(
const
char
*
aOldPath
const
char
*
aNewPath
)
;
int
Unlink
(
const
char
*
aPath
)
;
int
Rmdir
(
const
char
*
aPath
)
;
int
Readlink
(
const
char
*
aPath
void
*
aBuf
size_t
aBufSize
)
;
int
Connect
(
const
struct
sockaddr_un
*
aAddr
size_t
aLen
int
aType
)
;
private
:
int
mFileDesc
;
int
DoCall
(
const
Request
*
aReq
const
char
*
aPath
const
char
*
aPath2
void
*
aReponseBuff
bool
expectFd
)
;
}
;
}
#
endif
