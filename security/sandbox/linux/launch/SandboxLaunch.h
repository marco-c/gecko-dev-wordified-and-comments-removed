#
ifndef
mozilla_SandboxLaunch_h
#
define
mozilla_SandboxLaunch_h
#
include
"
base
/
process_util
.
h
"
#
include
"
mozilla
/
ipc
/
UtilityProcessSandboxing
.
h
"
#
include
"
nsXULAppAPI
.
h
"
#
include
<
vector
>
namespace
mozilla
{
class
SandboxLaunch
final
{
public
:
SandboxLaunch
(
)
;
~
SandboxLaunch
(
)
;
SandboxLaunch
(
const
SandboxLaunch
&
)
=
delete
;
SandboxLaunch
&
operator
=
(
const
SandboxLaunch
&
)
=
delete
;
using
LaunchOptions
=
base
:
:
LaunchOptions
;
using
SandboxingKind
=
ipc
:
:
SandboxingKind
;
static
void
Configure
(
GeckoProcessType
aType
SandboxingKind
aKind
LaunchOptions
*
aOptions
)
;
bool
Prepare
(
LaunchOptions
*
aOptions
)
;
pid_t
Fork
(
)
;
private
:
int
mFlags
;
int
mChrootServer
;
int
mChrootClient
;
void
StartChrootServer
(
)
;
}
;
bool
HasAtiDrivers
(
)
;
}
#
endif
