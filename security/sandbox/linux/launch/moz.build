EXPORTS
.
mozilla
+
=
[
"
SandboxLaunch
.
h
"
]
UNIFIED_SOURCES
+
=
[
"
LinuxCapabilities
.
cpp
"
"
SandboxLaunch
.
cpp
"
]
SOURCES
+
=
[
"
.
.
/
.
.
/
chromium
-
shim
/
base
/
logging
.
cpp
"
"
.
.
/
.
.
/
chromium
/
base
/
check
.
cc
"
"
.
.
/
.
.
/
chromium
/
base
/
check_op
.
cc
"
"
.
.
/
.
.
/
chromium
/
base
/
debug
/
alias
.
cc
"
"
.
.
/
.
.
/
chromium
/
base
/
debug
/
crash_logging
.
cc
"
"
.
.
/
.
.
/
chromium
/
base
/
location
.
cc
"
"
.
.
/
.
.
/
chromium
/
base
/
strings
/
string_number_conversions
.
cc
"
"
.
.
/
.
.
/
chromium
/
base
/
strings
/
string_util_constants
.
cc
"
"
.
.
/
.
.
/
chromium
/
base
/
strings
/
stringprintf
.
cc
"
"
.
.
/
.
.
/
chromium
/
base
/
trace_event
/
trace_event_stub
.
cc
"
"
.
.
/
.
.
/
chromium
/
sandbox
/
linux
/
services
/
syscall_wrappers
.
cc
"
]
if
CONFIG
[
"
CC_TYPE
"
]
in
(
"
clang
"
"
gcc
"
)
:
SOURCES
[
"
.
.
/
.
.
/
chromium
/
sandbox
/
linux
/
services
/
syscall_wrappers
.
cc
"
]
.
flags
+
=
[
"
-
Wno
-
empty
-
body
"
]
LOCAL_INCLUDES
+
=
[
"
/
security
/
sandbox
/
chromium
"
"
/
security
/
sandbox
/
chromium
-
shim
"
"
/
security
/
sandbox
/
chromium
-
shim
/
base
/
allocator
/
partition_allocator
/
src
"
"
/
security
/
sandbox
/
chromium
/
base
/
allocator
/
partition_allocator
/
src
"
"
/
security
/
sandbox
/
linux
"
"
/
third_party
/
abseil
-
cpp
"
]
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
USE_LIBS
+
=
[
"
mozsandbox
"
]
if
CONFIG
[
"
MOZ_WIDGET_TOOLKIT
"
]
=
=
"
gtk
"
:
CXXFLAGS
+
=
CONFIG
[
"
MOZ_GTK3_CFLAGS
"
]
FINAL_LIBRARY
=
"
xul
"
