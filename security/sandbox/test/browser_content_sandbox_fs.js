"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
"
+
"
security
/
sandbox
/
test
/
browser_content_sandbox_utils
.
js
"
this
)
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
"
+
"
security
/
sandbox
/
test
/
browser_content_sandbox_fs_tests
.
js
"
this
)
;
add_task
(
async
function
(
)
{
if
(
!
gMultiProcessBrowser
)
{
ok
(
false
"
e10s
is
enabled
"
)
;
info
(
"
e10s
is
not
enabled
exiting
"
)
;
return
;
}
let
level
=
0
;
let
prefExists
=
true
;
try
{
level
=
Services
.
prefs
.
getIntPref
(
"
security
.
sandbox
.
content
.
level
"
)
;
}
catch
(
e
)
{
prefExists
=
false
;
}
ok
(
prefExists
"
pref
security
.
sandbox
.
content
.
level
exists
"
)
;
if
(
!
prefExists
)
{
return
;
}
info
(
security
.
sandbox
.
content
.
level
=
{
level
}
)
;
ok
(
level
>
0
"
content
sandbox
is
enabled
.
"
)
;
let
isFileIOSandboxed
=
isContentFileIOSandboxed
(
level
)
;
ok
(
isFileIOSandboxed
"
content
file
I
/
O
sandboxing
is
enabled
.
"
)
;
if
(
!
isFileIOSandboxed
)
{
info
(
"
content
sandbox
level
too
low
for
file
I
/
O
tests
exiting
\
n
"
)
;
return
;
}
add_task
(
createFileInHome
)
;
add_task
(
createTempFile
)
;
add_task
(
testFileAccessAllPlatforms
)
;
add_task
(
testFileAccessMacOnly
)
;
add_task
(
testFileAccessLinuxOnly
)
;
add_task
(
testFileAccessWindowsOnly
)
;
add_task
(
cleanupBrowserTabs
)
;
}
)
;
