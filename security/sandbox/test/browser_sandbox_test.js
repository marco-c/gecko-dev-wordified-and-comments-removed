"
use
strict
"
;
function
test
(
)
{
waitForExplicitFinish
(
)
;
var
processTypes
=
[
"
tab
"
"
socket
"
"
rdd
"
"
gmplugin
"
"
utility
:
0
"
"
gpu
"
]
;
const
platform
=
SpecialPowers
.
Services
.
appinfo
.
OS
;
if
(
platform
=
=
=
"
WINNT
"
|
|
platform
=
=
=
"
Darwin
"
)
{
processTypes
.
push
(
"
utility
:
1
"
)
;
}
let
sandboxTestResult
=
(
subject
topic
data
)
=
>
{
let
{
testid
passed
message
}
=
JSON
.
parse
(
data
)
;
ok
(
passed
"
Test
"
+
testid
+
(
passed
?
"
passed
:
"
:
"
failed
:
"
)
+
message
)
;
}
;
Services
.
obs
.
addObserver
(
sandboxTestResult
"
sandbox
-
test
-
result
"
)
;
var
remainingTests
=
processTypes
.
length
;
let
sandboxTestDone
=
(
)
=
>
{
remainingTests
=
remainingTests
-
1
;
if
(
remainingTests
=
=
0
)
{
Services
.
obs
.
removeObserver
(
sandboxTestResult
"
sandbox
-
test
-
result
"
)
;
Services
.
obs
.
removeObserver
(
sandboxTestDone
"
sandbox
-
test
-
done
"
)
;
comp
.
finishTests
(
)
;
finish
(
)
;
}
}
;
Services
.
obs
.
addObserver
(
sandboxTestDone
"
sandbox
-
test
-
done
"
)
;
var
comp
=
Cc
[
"
mozilla
.
org
/
sandbox
/
sandbox
-
test
;
1
"
]
.
getService
(
Ci
.
mozISandboxTest
)
;
comp
.
startTests
(
processTypes
)
;
}
