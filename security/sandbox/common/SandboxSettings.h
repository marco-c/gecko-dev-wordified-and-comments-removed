#
ifndef
mozilla_SandboxSettings_h
#
define
mozilla_SandboxSettings_h
#
include
<
cinttypes
>
#
include
"
nsIXULRuntime
.
h
"
#
ifdef
__OpenBSD__
#
include
"
nsXULAppAPI
.
h
"
#
include
"
mozilla
/
ipc
/
UtilityProcessSandboxing
.
h
"
#
endif
namespace
mozilla
{
int
GetEffectiveContentSandboxLevel
(
)
;
int
GetEffectiveSocketProcessSandboxLevel
(
)
;
int
GetEffectiveGpuSandboxLevel
(
)
;
bool
IsContentSandboxEnabled
(
)
;
const
char
*
ContentWin32kLockdownStateToString
(
nsIXULRuntime
:
:
ContentWin32kLockdownState
aValue
)
;
bool
GetContentWin32kLockdownEnabled
(
)
;
nsIXULRuntime
:
:
ContentWin32kLockdownState
GetContentWin32kLockdownState
(
)
;
#
if
defined
(
XP_MACOSX
)
int
ClampFlashSandboxLevel
(
const
int
aLevel
)
;
#
endif
#
if
defined
(
__OpenBSD__
)
bool
StartOpenBSDSandbox
(
GeckoProcessType
type
ipc
:
:
SandboxingKind
kind
=
ipc
:
:
SandboxingKind
:
:
COUNT
)
;
#
endif
}
#
endif
