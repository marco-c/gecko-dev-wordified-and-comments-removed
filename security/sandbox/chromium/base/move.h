#
ifndef
BASE_MOVE_H_
#
define
BASE_MOVE_H_
#
include
<
utility
>
#
include
"
base
/
compiler_specific
.
h
"
#
include
"
base
/
macros
.
h
"
#
include
"
build
/
build_config
.
h
"
#
define
MOVE_ONLY_TYPE_FOR_CPP_03
(
type
)
\
DISALLOW_COPY_AND_ASSIGN_WITH_MOVE_FOR_BIND
(
type
)
#
if
defined
(
OS_ANDROID
)
|
|
defined
(
OS_LINUX
)
|
|
defined
(
OS_MACOSX
)
#
define
DISALLOW_COPY_AND_ASSIGN_WITH_MOVE_FOR_BIND
(
type
)
\
private
:
\
type
(
const
type
&
)
=
delete
;
\
void
operator
=
(
const
type
&
)
=
delete
;
\
\
public
:
\
typedef
void
MoveOnlyTypeForCPP03
;
\
\
private
:
#
else
#
define
DISALLOW_COPY_AND_ASSIGN_WITH_MOVE_FOR_BIND
(
type
)
\
private
:
\
type
(
const
type
&
)
=
delete
;
\
void
operator
=
(
const
type
&
)
=
delete
;
\
\
public
:
\
type
&
&
Pass
(
)
WARN_UNUSED_RESULT
{
return
std
:
:
move
(
*
this
)
;
}
\
typedef
void
MoveOnlyTypeForCPP03
;
\
\
private
:
#
endif
#
endif
