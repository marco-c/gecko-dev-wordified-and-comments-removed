#
ifndef
BASE_PROCESS_MEMORY_H_
#
define
BASE_PROCESS_MEMORY_H_
#
include
<
stddef
.
h
>
#
include
"
base
/
base_export
.
h
"
#
include
"
base
/
process
/
process_handle
.
h
"
#
include
"
build
/
build_config
.
h
"
namespace
base
{
BASE_EXPORT
void
EnableTerminationOnHeapCorruption
(
)
;
BASE_EXPORT
void
EnableTerminationOnOutOfMemory
(
)
;
BASE_EXPORT
void
TerminateBecauseOutOfMemory
(
size_t
size
)
;
#
if
defined
(
OS_LINUX
)
|
|
defined
(
OS_ANDROID
)
|
|
defined
(
OS_AIX
)
BASE_EXPORT
extern
size_t
g_oom_size
;
const
int
kMaxOomScore
=
1000
;
BASE_EXPORT
bool
AdjustOOMScore
(
ProcessId
process
int
score
)
;
#
endif
namespace
internal
{
bool
ReleaseAddressSpaceReservation
(
)
;
}
#
if
defined
(
OS_WIN
)
namespace
win
{
const
DWORD
kOomExceptionCode
=
0xe0000008
;
}
#
endif
namespace
internal
{
BASE_EXPORT
void
OnNoMemoryInternal
(
size_t
size
)
;
}
BASE_EXPORT
WARN_UNUSED_RESULT
bool
UncheckedMalloc
(
size_t
size
void
*
*
result
)
;
BASE_EXPORT
WARN_UNUSED_RESULT
bool
UncheckedCalloc
(
size_t
num_items
size_t
size
void
*
*
result
)
;
}
#
endif
