#
ifndef
BASE_PROCESS_KILL_H_
#
define
BASE_PROCESS_KILL_H_
#
include
"
base
/
base_export
.
h
"
#
include
"
base
/
files
/
file_path
.
h
"
#
include
"
base
/
process
/
process
.
h
"
#
include
"
base
/
process
/
process_handle
.
h
"
#
include
"
base
/
time
/
time
.
h
"
#
include
"
build
/
build_config
.
h
"
namespace
base
{
class
ProcessFilter
;
#
if
BUILDFLAG
(
IS_WIN
)
namespace
win
{
const
DWORD
kSandboxFatalMemoryExceeded
=
7012
;
const
DWORD
kNormalTerminationExitCode
=
0
;
const
DWORD
kDebuggerInactiveExitCode
=
0xC0000354
;
const
DWORD
kKeyboardInterruptExitCode
=
0xC000013A
;
const
DWORD
kDebuggerTerminatedExitCode
=
0x40010004
;
const
DWORD
kStatusInvalidImageHashExitCode
=
0xC0000428
;
const
DWORD
kProcessKilledExitCode
=
1
;
}
#
endif
enum
TerminationStatus
{
TERMINATION_STATUS_NORMAL_TERMINATION
TERMINATION_STATUS_ABNORMAL_TERMINATION
TERMINATION_STATUS_PROCESS_WAS_KILLED
TERMINATION_STATUS_PROCESS_CRASHED
TERMINATION_STATUS_STILL_RUNNING
#
if
BUILDFLAG
(
IS_CHROMEOS
)
TERMINATION_STATUS_PROCESS_WAS_KILLED_BY_OOM
#
endif
#
if
BUILDFLAG
(
IS_ANDROID
)
TERMINATION_STATUS_OOM_PROTECTED
#
endif
TERMINATION_STATUS_LAUNCH_FAILED
TERMINATION_STATUS_OOM
#
if
BUILDFLAG
(
IS_WIN
)
TERMINATION_STATUS_INTEGRITY_FAILURE
#
endif
TERMINATION_STATUS_MAX_ENUM
}
;
BASE_EXPORT
bool
KillProcesses
(
const
FilePath
:
:
StringType
&
executable_name
int
exit_code
const
ProcessFilter
*
filter
)
;
BASE_EXPORT
TerminationStatus
GetTerminationStatus
(
ProcessHandle
handle
int
*
exit_code
)
;
#
if
BUILDFLAG
(
IS_POSIX
)
BASE_EXPORT
TerminationStatus
GetKnownDeadTerminationStatus
(
ProcessHandle
handle
int
*
exit_code
)
;
#
if
BUILDFLAG
(
IS_LINUX
)
|
|
BUILDFLAG
(
IS_CHROMEOS
)
BASE_EXPORT
void
EnsureProcessGetsReaped
(
Process
process
)
;
#
endif
#
endif
BASE_EXPORT
void
EnsureProcessTerminated
(
Process
process
)
;
#
if
!
BUILDFLAG
(
IS_FUCHSIA
)
BASE_EXPORT
bool
WaitForProcessesToExit
(
const
FilePath
:
:
StringType
&
executable_name
base
:
:
TimeDelta
wait
const
ProcessFilter
*
filter
)
;
BASE_EXPORT
bool
CleanupProcesses
(
const
FilePath
:
:
StringType
&
executable_name
base
:
:
TimeDelta
wait
int
exit_code
const
ProcessFilter
*
filter
)
;
#
endif
}
#
endif
