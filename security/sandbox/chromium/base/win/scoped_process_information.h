#
ifndef
BASE_WIN_SCOPED_PROCESS_INFORMATION_H_
#
define
BASE_WIN_SCOPED_PROCESS_INFORMATION_H_
#
include
<
windows
.
h
>
#
include
"
base
/
base_export
.
h
"
#
include
"
base
/
win
/
scoped_handle
.
h
"
namespace
base
{
namespace
win
{
class
BASE_EXPORT
ScopedProcessInformation
{
public
:
ScopedProcessInformation
(
)
;
explicit
ScopedProcessInformation
(
const
PROCESS_INFORMATION
&
process_info
)
;
ScopedProcessInformation
(
const
ScopedProcessInformation
&
)
=
delete
;
ScopedProcessInformation
&
operator
=
(
const
ScopedProcessInformation
&
)
=
delete
;
~
ScopedProcessInformation
(
)
;
bool
IsValid
(
)
const
;
void
Close
(
)
;
void
Set
(
const
PROCESS_INFORMATION
&
process_info
)
;
bool
DuplicateFrom
(
const
ScopedProcessInformation
&
other
)
;
PROCESS_INFORMATION
Take
(
)
;
HANDLE
TakeProcessHandle
(
)
;
HANDLE
TakeThreadHandle
(
)
;
HANDLE
process_handle
(
)
const
{
return
process_handle_
.
get
(
)
;
}
HANDLE
thread_handle
(
)
const
{
return
thread_handle_
.
get
(
)
;
}
DWORD
process_id
(
)
const
{
return
process_id_
;
}
DWORD
thread_id
(
)
const
{
return
thread_id_
;
}
private
:
ScopedHandle
process_handle_
;
ScopedHandle
thread_handle_
;
DWORD
process_id_
=
0
;
DWORD
thread_id_
=
0
;
}
;
}
}
#
endif
