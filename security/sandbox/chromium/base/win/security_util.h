#
ifndef
BASE_WIN_SECURITY_UTIL_H_
#
define
BASE_WIN_SECURITY_UTIL_H_
#
include
<
vector
>
#
include
"
base
/
base_export
.
h
"
#
include
"
base
/
win
/
sid
.
h
"
#
include
"
base
/
win
/
windows_types
.
h
"
#
include
"
third_party
/
abseil
-
cpp
/
absl
/
types
/
optional
.
h
"
namespace
base
{
class
FilePath
;
namespace
win
{
BASE_EXPORT
bool
GrantAccessToPath
(
const
FilePath
&
path
const
std
:
:
vector
<
Sid
>
&
sids
DWORD
access_mask
DWORD
inheritance
bool
recursive
=
true
)
;
BASE_EXPORT
bool
DenyAccessToPath
(
const
FilePath
&
path
const
std
:
:
vector
<
Sid
>
&
sids
DWORD
access_mask
DWORD
inheritance
bool
recursive
=
true
)
;
BASE_EXPORT
std
:
:
vector
<
Sid
>
CloneSidVector
(
const
std
:
:
vector
<
Sid
>
&
sids
)
;
BASE_EXPORT
void
AppendSidVector
(
std
:
:
vector
<
Sid
>
&
base_sids
const
std
:
:
vector
<
Sid
>
&
append_sids
)
;
BASE_EXPORT
absl
:
:
optional
<
ACCESS_MASK
>
GetGrantedAccess
(
HANDLE
handle
)
;
}
}
#
endif
