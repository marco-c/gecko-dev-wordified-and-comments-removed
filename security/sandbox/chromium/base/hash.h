#
ifndef
BASE_HASH_H_
#
define
BASE_HASH_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
<
limits
>
#
include
<
string
>
#
include
"
base
/
base_export
.
h
"
#
include
"
base
/
logging
.
h
"
namespace
base
{
BASE_EXPORT
uint32_t
SuperFastHash
(
const
char
*
data
int
len
)
;
inline
uint32_t
Hash
(
const
char
*
data
size_t
length
)
{
if
(
length
>
static_cast
<
size_t
>
(
std
:
:
numeric_limits
<
int
>
:
:
max
(
)
)
)
{
NOTREACHED
(
)
;
return
0
;
}
return
SuperFastHash
(
data
static_cast
<
int
>
(
length
)
)
;
}
inline
uint32_t
Hash
(
const
std
:
:
string
&
str
)
{
return
Hash
(
str
.
data
(
)
str
.
size
(
)
)
;
}
}
#
endif
