#
ifndef
BASE_SYNCHRONIZATION_CONDITION_VARIABLE_H_
#
define
BASE_SYNCHRONIZATION_CONDITION_VARIABLE_H_
#
include
"
base
/
base_export
.
h
"
#
include
"
base
/
logging
.
h
"
#
include
"
base
/
macros
.
h
"
#
include
"
base
/
synchronization
/
lock
.
h
"
#
include
"
build
/
build_config
.
h
"
#
if
defined
(
OS_POSIX
)
#
include
<
pthread
.
h
>
#
endif
#
if
defined
(
OS_WIN
)
#
include
<
windows
.
h
>
#
endif
namespace
base
{
class
TimeDelta
;
class
BASE_EXPORT
ConditionVariable
{
public
:
explicit
ConditionVariable
(
Lock
*
user_lock
)
;
~
ConditionVariable
(
)
;
void
Wait
(
)
;
void
TimedWait
(
const
TimeDelta
&
max_time
)
;
void
Broadcast
(
)
;
void
Signal
(
)
;
private
:
#
if
defined
(
OS_WIN
)
CONDITION_VARIABLE
cv_
;
SRWLOCK
*
const
srwlock_
;
#
elif
defined
(
OS_POSIX
)
pthread_cond_t
condition_
;
pthread_mutex_t
*
user_mutex_
;
#
endif
#
if
DCHECK_IS_ON
(
)
&
&
(
defined
(
OS_WIN
)
|
|
defined
(
OS_POSIX
)
)
base
:
:
Lock
*
const
user_lock_
;
#
endif
DISALLOW_COPY_AND_ASSIGN
(
ConditionVariable
)
;
}
;
}
#
endif
