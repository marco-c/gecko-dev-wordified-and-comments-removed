#
include
"
base
/
threading
/
platform_thread_internal_posix
.
h
"
#
include
<
errno
.
h
>
#
include
<
sys
/
resource
.
h
>
#
include
<
ostream
>
#
include
"
base
/
containers
/
adapters
.
h
"
#
include
"
base
/
logging
.
h
"
#
include
"
base
/
notreached
.
h
"
namespace
base
{
namespace
internal
{
BASE_EXPORT
int
ThreadTypeToNiceValue
(
ThreadType
thread_type
)
{
for
(
const
auto
&
pair
:
kThreadTypeToNiceValueMap
)
{
if
(
pair
.
thread_type
=
=
thread_type
)
return
pair
.
nice_value
;
}
NOTREACHED
(
)
<
<
"
Unknown
ThreadType
"
;
return
0
;
}
ThreadPriorityForTest
NiceValueToThreadPriorityForTest
(
int
nice_value
)
{
for
(
const
auto
&
pair
:
kThreadPriorityToNiceValueMapForTest
)
{
if
(
pair
.
nice_value
>
=
nice_value
)
return
pair
.
priority
;
}
return
ThreadPriorityForTest
:
:
kBackground
;
}
int
GetCurrentThreadNiceValue
(
)
{
#
if
BUILDFLAG
(
IS_NACL
)
NOTIMPLEMENTED
(
)
;
return
0
;
#
else
errno
=
0
;
int
nice_value
=
getpriority
(
PRIO_PROCESS
0
)
;
if
(
errno
!
=
0
)
{
DVPLOG
(
1
)
<
<
"
Failed
to
get
nice
value
of
thread
(
"
<
<
PlatformThread
:
:
CurrentId
(
)
<
<
"
)
"
;
return
0
;
}
return
nice_value
;
#
endif
}
}
}
