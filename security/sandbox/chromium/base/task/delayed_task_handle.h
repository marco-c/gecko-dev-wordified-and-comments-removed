#
ifndef
BASE_TASK_DELAYED_TASK_HANDLE_H_
#
define
BASE_TASK_DELAYED_TASK_HANDLE_H_
#
include
<
memory
>
#
include
"
base
/
base_export
.
h
"
namespace
base
{
class
BASE_EXPORT
DelayedTaskHandle
{
public
:
class
Delegate
{
public
:
virtual
~
Delegate
(
)
=
default
;
virtual
bool
IsValid
(
)
const
=
0
;
virtual
void
CancelTask
(
)
=
0
;
}
;
DelayedTaskHandle
(
)
;
explicit
DelayedTaskHandle
(
std
:
:
unique_ptr
<
Delegate
>
delegate
)
;
~
DelayedTaskHandle
(
)
;
DelayedTaskHandle
(
DelayedTaskHandle
&
&
)
;
DelayedTaskHandle
&
operator
=
(
DelayedTaskHandle
&
&
)
;
bool
IsValid
(
)
const
;
void
CancelTask
(
)
;
private
:
std
:
:
unique_ptr
<
Delegate
>
delegate_
;
}
;
}
#
endif
