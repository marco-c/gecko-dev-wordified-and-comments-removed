#
ifndef
BASE_TASK_POST_TASK_AND_REPLY_WITH_RESULT_INTERNAL_H_
#
define
BASE_TASK_POST_TASK_AND_REPLY_WITH_RESULT_INTERNAL_H_
#
include
<
memory
>
#
include
<
utility
>
#
include
"
base
/
check
.
h
"
#
include
"
base
/
functional
/
callback
.
h
"
namespace
base
{
namespace
internal
{
template
<
typename
ReturnType
>
void
ReturnAsParamAdapter
(
OnceCallback
<
ReturnType
(
)
>
func
std
:
:
unique_ptr
<
ReturnType
>
*
result
)
{
result
-
>
reset
(
new
ReturnType
(
std
:
:
move
(
func
)
.
Run
(
)
)
)
;
}
template
<
typename
TaskReturnType
typename
ReplyArgType
>
void
ReplyAdapter
(
OnceCallback
<
void
(
ReplyArgType
)
>
callback
std
:
:
unique_ptr
<
TaskReturnType
>
*
result
)
{
DCHECK
(
result
-
>
get
(
)
)
;
std
:
:
move
(
callback
)
.
Run
(
std
:
:
move
(
*
*
result
)
)
;
}
}
}
#
endif
