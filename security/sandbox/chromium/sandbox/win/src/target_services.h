#
ifndef
SANDBOX_SRC_TARGET_SERVICES_H__
#
define
SANDBOX_SRC_TARGET_SERVICES_H__
#
include
"
base
/
macros
.
h
"
#
include
"
sandbox
/
win
/
src
/
sandbox
.
h
"
#
include
"
sandbox
/
win
/
src
/
win_utils
.
h
"
namespace
sandbox
{
class
ProcessState
{
public
:
ProcessState
(
)
;
bool
InitCalled
(
)
const
;
bool
RevertedToSelf
(
)
const
;
bool
IsCsrssConnected
(
)
const
;
void
SetInitCalled
(
)
;
void
SetRevertedToSelf
(
)
;
void
SetCsrssConnected
(
bool
csrss_connected
)
;
private
:
enum
class
ProcessStateInternal
{
NONE
=
0
INIT_CALLED
REVERTED_TO_SELF
}
;
ProcessStateInternal
process_state_
;
bool
csrss_connected_
;
DISALLOW_COPY_AND_ASSIGN
(
ProcessState
)
;
}
;
class
TargetServicesBase
:
public
TargetServices
{
public
:
TargetServicesBase
(
)
;
ResultCode
Init
(
)
override
;
void
LowerToken
(
)
override
;
ProcessState
*
GetState
(
)
override
;
ResultCode
DuplicateHandle
(
HANDLE
source_handle
DWORD
target_process_id
HANDLE
*
target_handle
DWORD
desired_access
DWORD
options
)
override
;
static
TargetServicesBase
*
GetInstance
(
)
;
bool
TestIPCPing
(
int
version
)
;
private
:
~
TargetServicesBase
(
)
{
}
ProcessState
process_state_
;
DISALLOW_COPY_AND_ASSIGN
(
TargetServicesBase
)
;
}
;
}
#
endif
