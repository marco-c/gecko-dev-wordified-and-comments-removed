#
ifndef
SANDBOX_SRC_FILESYSTEM_POLICY_H__
#
define
SANDBOX_SRC_FILESYSTEM_POLICY_H__
#
include
<
stdint
.
h
>
#
include
<
string
>
#
include
"
sandbox
/
win
/
src
/
crosscall_server
.
h
"
#
include
"
sandbox
/
win
/
src
/
nt_internals
.
h
"
#
include
"
sandbox
/
win
/
src
/
policy_low_level
.
h
"
#
include
"
sandbox
/
win
/
src
/
sandbox_policy
.
h
"
namespace
sandbox
{
enum
IsBroker
{
BROKER_FALSE
BROKER_TRUE
}
;
class
FileSystemPolicy
{
public
:
static
bool
GenerateRules
(
const
wchar_t
*
name
TargetPolicy
:
:
Semantics
semantics
LowLevelPolicy
*
policy
)
;
static
bool
SetInitialRules
(
LowLevelPolicy
*
policy
)
;
static
bool
CreateFileAction
(
EvalResult
eval_result
const
ClientInfo
&
client_info
const
std
:
:
wstring
&
file
uint32_t
attributes
uint32_t
desired_access
uint32_t
file_attributes
uint32_t
share_access
uint32_t
create_disposition
uint32_t
create_options
HANDLE
*
handle
NTSTATUS
*
nt_status
ULONG_PTR
*
io_information
)
;
static
bool
OpenFileAction
(
EvalResult
eval_result
const
ClientInfo
&
client_info
const
std
:
:
wstring
&
file
uint32_t
attributes
uint32_t
desired_access
uint32_t
share_access
uint32_t
open_options
HANDLE
*
handle
NTSTATUS
*
nt_status
ULONG_PTR
*
io_information
)
;
static
bool
QueryAttributesFileAction
(
EvalResult
eval_result
const
ClientInfo
&
client_info
const
std
:
:
wstring
&
file
uint32_t
attributes
FILE_BASIC_INFORMATION
*
file_info
NTSTATUS
*
nt_status
)
;
static
bool
QueryFullAttributesFileAction
(
EvalResult
eval_result
const
ClientInfo
&
client_info
const
std
:
:
wstring
&
file
uint32_t
attributes
FILE_NETWORK_OPEN_INFORMATION
*
file_info
NTSTATUS
*
nt_status
)
;
static
bool
SetInformationFileAction
(
EvalResult
eval_result
const
ClientInfo
&
client_info
HANDLE
target_file_handle
void
*
file_info
uint32_t
length
uint32_t
info_class
IO_STATUS_BLOCK
*
io_block
NTSTATUS
*
nt_status
)
;
}
;
bool
PreProcessName
(
std
:
:
wstring
*
path
)
;
std
:
:
wstring
FixNTPrefixForMatch
(
const
std
:
:
wstring
&
name
)
;
}
#
endif
