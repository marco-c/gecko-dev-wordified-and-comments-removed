#
ifndef
SANDBOX_SRC_HANDLE_CLOSER_AGENT_H_
#
define
SANDBOX_SRC_HANDLE_CLOSER_AGENT_H_
#
include
<
string
>
#
include
"
base
/
macros
.
h
"
#
include
"
base
/
win
/
scoped_handle
.
h
"
#
include
"
sandbox
/
win
/
src
/
handle_closer
.
h
"
#
include
"
sandbox
/
win
/
src
/
sandbox_types
.
h
"
#
include
"
sandbox
/
win
/
src
/
target_services
.
h
"
namespace
sandbox
{
class
HandleCloserAgent
{
public
:
HandleCloserAgent
(
)
;
~
HandleCloserAgent
(
)
;
void
InitializeHandlesToClose
(
bool
*
is_csrss_connected
)
;
bool
CloseHandles
(
)
;
static
bool
NeedsHandlesClosed
(
)
;
private
:
bool
AttemptToStuffHandleSlot
(
HANDLE
closed_handle
const
std
:
:
wstring
&
type
)
;
HandleMap
handles_to_close_
;
base
:
:
win
:
:
ScopedHandle
dummy_handle_
;
DISALLOW_COPY_AND_ASSIGN
(
HandleCloserAgent
)
;
}
;
}
#
endif
