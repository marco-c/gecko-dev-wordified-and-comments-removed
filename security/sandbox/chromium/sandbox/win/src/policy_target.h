#
ifndef
SANDBOX_WIN_SRC_POLICY_TARGET_H_
#
define
SANDBOX_WIN_SRC_POLICY_TARGET_H_
#
include
"
sandbox
/
win
/
src
/
ipc_tags
.
h
"
#
include
"
sandbox
/
win
/
src
/
nt_internals
.
h
"
#
include
"
sandbox
/
win
/
src
/
sandbox_types
.
h
"
namespace
sandbox
{
struct
CountedParameterSetBase
;
bool
QueryBroker
(
IpcTag
ipc_id
CountedParameterSetBase
*
params
)
;
extern
"
C
"
{
SANDBOX_INTERCEPT
NTSTATUS
WINAPI
TargetNtImpersonateAnonymousToken
(
NtImpersonateAnonymousTokenFunction
orig_ImpersonateAnonymousToken
HANDLE
thread
)
;
SANDBOX_INTERCEPT
NTSTATUS
WINAPI
TargetNtSetInformationThread
(
NtSetInformationThreadFunction
orig_SetInformationThread
HANDLE
thread
NT_THREAD_INFORMATION_CLASS
thread_info_class
PVOID
thread_information
ULONG
thread_information_bytes
)
;
SANDBOX_INTERCEPT
NTSTATUS
WINAPI
TargetNtOpenThreadToken
(
NtOpenThreadTokenFunction
orig_OpenThreadToken
HANDLE
thread
ACCESS_MASK
desired_access
BOOLEAN
open_as_self
PHANDLE
token
)
;
SANDBOX_INTERCEPT
NTSTATUS
WINAPI
TargetNtOpenThreadTokenEx
(
NtOpenThreadTokenExFunction
orig_OpenThreadTokenEx
HANDLE
thread
ACCESS_MASK
desired_access
BOOLEAN
open_as_self
ULONG
handle_attributes
PHANDLE
token
)
;
}
}
#
endif
