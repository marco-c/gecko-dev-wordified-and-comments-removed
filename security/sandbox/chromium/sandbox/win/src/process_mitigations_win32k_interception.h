#
ifndef
SANDBOX_WIN_SRC_PROCESS_MITIGATIONS_WIN32K_INTERCEPTION_H_
#
define
SANDBOX_WIN_SRC_PROCESS_MITIGATIONS_WIN32K_INTERCEPTION_H_
#
include
<
windows
.
h
>
#
include
"
sandbox
/
win
/
src
/
sandbox_types
.
h
"
namespace
sandbox
{
typedef
BOOL
(
WINAPI
*
GdiDllInitializeFunction
)
(
HANDLE
dll
DWORD
reason
LPVOID
reserved
)
;
using
GetStockObjectFunction
=
decltype
(
&
:
:
GetStockObject
)
;
using
GetForegroundWindowFunction
=
decltype
(
&
:
:
GetForegroundWindow
)
;
using
RegisterClassWFunction
=
decltype
(
&
:
:
RegisterClassW
)
;
extern
"
C
"
{
SANDBOX_INTERCEPT
BOOL
WINAPI
TargetGdiDllInitialize
(
GdiDllInitializeFunction
orig_gdi_dll_initialize
HANDLE
dll
DWORD
reason
)
;
SANDBOX_INTERCEPT
HGDIOBJ
WINAPI
TargetGetStockObject
(
GetStockObjectFunction
orig_get_stock_object
int
object
)
;
SANDBOX_INTERCEPT
HWND
WINAPI
TargetGetForegroundWindow
(
GetForegroundWindowFunction
orig_get_foreground_window_function
)
;
SANDBOX_INTERCEPT
ATOM
WINAPI
TargetRegisterClassW
(
RegisterClassWFunction
orig_register_class_function
const
WNDCLASS
*
wnd_class
)
;
}
}
#
endif
