#
ifndef
SANDBOX_SRC_WIN2K_THREADPOOL_H_
#
define
SANDBOX_SRC_WIN2K_THREADPOOL_H_
#
include
<
stddef
.
h
>
#
include
<
algorithm
>
#
include
<
list
>
#
include
"
base
/
macros
.
h
"
#
include
"
sandbox
/
win
/
src
/
crosscall_server
.
h
"
namespace
sandbox
{
class
Win2kThreadPool
:
public
ThreadProvider
{
public
:
Win2kThreadPool
(
)
;
~
Win2kThreadPool
(
)
override
;
bool
RegisterWait
(
const
void
*
cookie
HANDLE
waitable_object
CrossCallIPCCallback
callback
void
*
context
)
override
;
bool
UnRegisterWaits
(
void
*
cookie
)
override
;
size_t
OutstandingWaits
(
)
;
private
:
struct
PoolObject
{
const
void
*
cookie
;
HANDLE
wait
;
}
;
typedef
std
:
:
list
<
PoolObject
>
PoolObjects
;
PoolObjects
pool_objects_
;
CRITICAL_SECTION
lock_
;
DISALLOW_COPY_AND_ASSIGN
(
Win2kThreadPool
)
;
}
;
}
#
endif
