#
include
"
sandbox
/
win
/
src
/
win2k_threadpool
.
h
"
#
include
<
stdint
.
h
>
#
include
"
testing
/
gtest
/
include
/
gtest
/
gtest
.
h
"
void
__stdcall
EmptyCallBack
(
void
*
unsigned
char
)
{
}
void
__stdcall
TestCallBack
(
void
*
context
unsigned
char
)
{
HANDLE
event
=
reinterpret_cast
<
HANDLE
>
(
context
)
;
:
:
SetEvent
(
event
)
;
}
namespace
sandbox
{
TEST
(
IPCTest
ThreadPoolRegisterTest1
)
{
Win2kThreadPool
thread_pool
;
EXPECT_EQ
(
0u
thread_pool
.
OutstandingWaits
(
)
)
;
HANDLE
event1
=
:
:
CreateEventW
(
nullptr
false
false
nullptr
)
;
HANDLE
event2
=
:
:
CreateEventW
(
nullptr
false
false
nullptr
)
;
uint32_t
context
=
0
;
EXPECT_FALSE
(
thread_pool
.
RegisterWait
(
0
event1
EmptyCallBack
&
context
)
)
;
EXPECT_EQ
(
0u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_TRUE
(
thread_pool
.
RegisterWait
(
this
event1
EmptyCallBack
&
context
)
)
;
EXPECT_EQ
(
1u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_TRUE
(
thread_pool
.
RegisterWait
(
this
event2
EmptyCallBack
&
context
)
)
;
EXPECT_EQ
(
2u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_TRUE
(
thread_pool
.
UnRegisterWaits
(
this
)
)
;
EXPECT_EQ
(
0u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_TRUE
(
:
:
CloseHandle
(
event1
)
)
;
EXPECT_TRUE
(
:
:
CloseHandle
(
event2
)
)
;
}
TEST
(
IPCTest
ThreadPoolRegisterTest2
)
{
Win2kThreadPool
thread_pool
;
HANDLE
event1
=
:
:
CreateEventW
(
nullptr
false
false
nullptr
)
;
HANDLE
event2
=
:
:
CreateEventW
(
nullptr
false
false
nullptr
)
;
uint32_t
context
=
0
;
uint32_t
c1
=
0
;
uint32_t
c2
=
0
;
EXPECT_TRUE
(
thread_pool
.
RegisterWait
(
&
c1
event1
EmptyCallBack
&
context
)
)
;
EXPECT_EQ
(
1u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_TRUE
(
thread_pool
.
RegisterWait
(
&
c2
event2
EmptyCallBack
&
context
)
)
;
EXPECT_EQ
(
2u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_TRUE
(
thread_pool
.
UnRegisterWaits
(
&
c2
)
)
;
EXPECT_EQ
(
1u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_TRUE
(
thread_pool
.
UnRegisterWaits
(
&
c2
)
)
;
EXPECT_EQ
(
1u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_TRUE
(
thread_pool
.
UnRegisterWaits
(
&
c1
)
)
;
EXPECT_EQ
(
0u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_TRUE
(
:
:
CloseHandle
(
event1
)
)
;
EXPECT_TRUE
(
:
:
CloseHandle
(
event2
)
)
;
}
TEST
(
IPCTest
ThreadPoolSignalAndWaitTest
)
{
Win2kThreadPool
thread_pool
;
HANDLE
event1
=
:
:
CreateEventW
(
nullptr
false
false
nullptr
)
;
HANDLE
event2
=
:
:
CreateEventW
(
nullptr
false
false
nullptr
)
;
EXPECT_TRUE
(
thread_pool
.
RegisterWait
(
this
event1
TestCallBack
event2
)
)
;
EXPECT_EQ
(
WAIT_OBJECT_0
:
:
SignalObjectAndWait
(
event1
event2
5000
false
)
)
;
EXPECT_EQ
(
WAIT_OBJECT_0
:
:
SignalObjectAndWait
(
event1
event2
5000
false
)
)
;
EXPECT_TRUE
(
thread_pool
.
UnRegisterWaits
(
this
)
)
;
EXPECT_EQ
(
0u
thread_pool
.
OutstandingWaits
(
)
)
;
EXPECT_EQ
(
static_cast
<
DWORD
>
(
WAIT_TIMEOUT
)
:
:
SignalObjectAndWait
(
event1
event2
1000
false
)
)
;
EXPECT_TRUE
(
:
:
CloseHandle
(
event1
)
)
;
EXPECT_TRUE
(
:
:
CloseHandle
(
event2
)
)
;
}
}
