#
ifndef
SANDBOX_SRC_SERVICE_RESOLVER_H__
#
define
SANDBOX_SRC_SERVICE_RESOLVER_H__
#
include
<
stddef
.
h
>
#
include
"
base
/
macros
.
h
"
#
include
"
sandbox
/
win
/
src
/
nt_internals
.
h
"
#
include
"
sandbox
/
win
/
src
/
resolver
.
h
"
namespace
sandbox
{
class
ServiceResolverThunk
:
public
ResolverThunk
{
public
:
ServiceResolverThunk
(
HANDLE
process
bool
relaxed
)
:
ntdll_base_
(
nullptr
)
process_
(
process
)
relaxed_
(
relaxed
)
relative_jump_
(
0
)
{
}
~
ServiceResolverThunk
(
)
override
{
}
NTSTATUS
Setup
(
const
void
*
target_module
const
void
*
interceptor_module
const
char
*
target_name
const
char
*
interceptor_name
const
void
*
interceptor_entry_point
void
*
thunk_storage
size_t
storage_bytes
size_t
*
storage_used
)
override
;
NTSTATUS
ResolveInterceptor
(
const
void
*
module
const
char
*
function_name
const
void
*
*
address
)
override
;
NTSTATUS
ResolveTarget
(
const
void
*
module
const
char
*
function_name
void
*
*
address
)
override
;
size_t
GetThunkSize
(
)
const
override
;
virtual
void
AllowLocalPatches
(
)
;
virtual
NTSTATUS
CopyThunk
(
const
void
*
target_module
const
char
*
target_name
BYTE
*
thunk_storage
size_t
storage_bytes
size_t
*
storage_used
)
;
protected
:
HMODULE
ntdll_base_
;
HANDLE
process_
;
private
:
virtual
bool
IsFunctionAService
(
void
*
local_thunk
)
const
;
virtual
NTSTATUS
PerformPatch
(
void
*
local_thunk
void
*
remote_thunk
)
;
bool
SaveOriginalFunction
(
void
*
local_thunk
void
*
remote_thunk
)
;
bool
relaxed_
;
ULONG
relative_jump_
;
DISALLOW_COPY_AND_ASSIGN
(
ServiceResolverThunk
)
;
}
;
class
Wow64ResolverThunk
:
public
ServiceResolverThunk
{
public
:
Wow64ResolverThunk
(
HANDLE
process
bool
relaxed
)
:
ServiceResolverThunk
(
process
relaxed
)
{
}
~
Wow64ResolverThunk
(
)
override
{
}
private
:
bool
IsFunctionAService
(
void
*
local_thunk
)
const
override
;
DISALLOW_COPY_AND_ASSIGN
(
Wow64ResolverThunk
)
;
}
;
class
Wow64W8ResolverThunk
:
public
ServiceResolverThunk
{
public
:
Wow64W8ResolverThunk
(
HANDLE
process
bool
relaxed
)
:
ServiceResolverThunk
(
process
relaxed
)
{
}
~
Wow64W8ResolverThunk
(
)
override
{
}
private
:
bool
IsFunctionAService
(
void
*
local_thunk
)
const
override
;
DISALLOW_COPY_AND_ASSIGN
(
Wow64W8ResolverThunk
)
;
}
;
class
Win8ResolverThunk
:
public
ServiceResolverThunk
{
public
:
Win8ResolverThunk
(
HANDLE
process
bool
relaxed
)
:
ServiceResolverThunk
(
process
relaxed
)
{
}
~
Win8ResolverThunk
(
)
override
{
}
private
:
bool
IsFunctionAService
(
void
*
local_thunk
)
const
override
;
DISALLOW_COPY_AND_ASSIGN
(
Win8ResolverThunk
)
;
}
;
class
Wow64W10ResolverThunk
:
public
ServiceResolverThunk
{
public
:
Wow64W10ResolverThunk
(
HANDLE
process
bool
relaxed
)
:
ServiceResolverThunk
(
process
relaxed
)
{
}
~
Wow64W10ResolverThunk
(
)
override
{
}
private
:
bool
IsFunctionAService
(
void
*
local_thunk
)
const
override
;
DISALLOW_COPY_AND_ASSIGN
(
Wow64W10ResolverThunk
)
;
}
;
}
#
endif
