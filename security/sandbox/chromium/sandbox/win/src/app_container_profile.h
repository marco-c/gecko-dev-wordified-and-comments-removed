#
ifndef
SANDBOX_SRC_APP_CONTAINER_PROFILE_H_
#
define
SANDBOX_SRC_APP_CONTAINER_PROFILE_H_
#
include
<
windows
.
h
>
#
include
<
accctrl
.
h
>
#
include
"
base
/
files
/
file_path
.
h
"
#
include
"
base
/
win
/
scoped_handle
.
h
"
#
include
"
sandbox
/
win
/
src
/
sid
.
h
"
namespace
sandbox
{
class
AppContainerProfile
{
public
:
virtual
void
AddRef
(
)
=
0
;
virtual
void
Release
(
)
=
0
;
virtual
bool
GetRegistryLocation
(
REGSAM
desired_access
base
:
:
win
:
:
ScopedHandle
*
key
)
=
0
;
virtual
bool
GetFolderPath
(
base
:
:
FilePath
*
file_path
)
=
0
;
virtual
bool
GetPipePath
(
const
wchar_t
*
pipe_name
base
:
:
FilePath
*
pipe_path
)
=
0
;
virtual
bool
AccessCheck
(
const
wchar_t
*
object_name
SE_OBJECT_TYPE
object_type
DWORD
desired_access
DWORD
*
granted_access
BOOL
*
access_status
)
=
0
;
virtual
bool
AddCapability
(
const
wchar_t
*
capability_name
)
=
0
;
virtual
bool
AddCapability
(
WellKnownCapabilities
capability
)
=
0
;
virtual
bool
AddCapabilitySddl
(
const
wchar_t
*
sddl_sid
)
=
0
;
virtual
bool
AddImpersonationCapability
(
const
wchar_t
*
capability_name
)
=
0
;
virtual
bool
AddImpersonationCapability
(
WellKnownCapabilities
capability
)
=
0
;
virtual
bool
AddImpersonationCapabilitySddl
(
const
wchar_t
*
sddl_sid
)
=
0
;
virtual
void
SetEnableLowPrivilegeAppContainer
(
bool
enable
)
=
0
;
virtual
bool
GetEnableLowPrivilegeAppContainer
(
)
=
0
;
}
;
}
#
endif
