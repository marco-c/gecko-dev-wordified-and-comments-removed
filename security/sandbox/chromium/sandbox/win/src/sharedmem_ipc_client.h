#
ifndef
SANDBOX_WIN_SRC_SHAREDMEM_IPC_CLIENT_H_
#
define
SANDBOX_WIN_SRC_SHAREDMEM_IPC_CLIENT_H_
#
include
<
stddef
.
h
>
#
include
<
stdint
.
h
>
#
include
"
base
/
memory
/
raw_ptr_exclusion
.
h
"
#
include
"
sandbox
/
win
/
src
/
crosscall_params
.
h
"
#
include
"
sandbox
/
win
/
src
/
ipc_tags
.
h
"
#
include
"
sandbox
/
win
/
src
/
sandbox
.
h
"
namespace
sandbox
{
enum
ChannelState
{
kFreeChannel
=
1
kBusyChannel
kAckChannel
kReadyChannel
kAbandonedChannel
}
;
const
DWORD
kIPCWaitTimeOut1
=
1000
;
const
DWORD
kIPCWaitTimeOut2
=
50
;
struct
ChannelControl
{
size_t
channel_base
;
volatile
LONG
state
;
HANDLE
ping_event
;
HANDLE
pong_event
;
IpcTag
ipc_tag
;
}
;
struct
IPCControl
{
size_t
channels_count
;
HANDLE
server_alive
;
ChannelControl
channels
[
1
]
;
}
;
class
SharedMemIPCClient
{
public
:
explicit
SharedMemIPCClient
(
void
*
shared_mem
)
;
void
*
GetBuffer
(
)
;
void
FreeBuffer
(
void
*
buffer
)
;
ResultCode
DoCall
(
CrossCallParams
*
params
CrossCallReturn
*
answer
)
;
private
:
size_t
LockFreeChannel
(
bool
*
severe_failure
)
;
size_t
ChannelIndexFromBuffer
(
const
void
*
buffer
)
;
RAW_PTR_EXCLUSION
IPCControl
*
control_
;
RAW_PTR_EXCLUSION
char
*
first_base_
;
}
;
}
#
endif
