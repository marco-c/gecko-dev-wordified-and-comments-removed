#
ifndef
SANDBOX_LINUX_BPF_DSL_BPF_DSL_IMPL_H_
#
define
SANDBOX_LINUX_BPF_DSL_BPF_DSL_IMPL_H_
#
include
"
sandbox
/
linux
/
bpf_dsl
/
codegen
.
h
"
#
include
"
sandbox
/
sandbox_export
.
h
"
namespace
sandbox
{
namespace
bpf_dsl
{
class
PolicyCompiler
;
namespace
internal
{
class
BoolExprImpl
{
public
:
BoolExprImpl
(
const
BoolExprImpl
&
)
=
delete
;
BoolExprImpl
&
operator
=
(
const
BoolExprImpl
&
)
=
delete
;
virtual
CodeGen
:
:
Node
Compile
(
PolicyCompiler
*
pc
CodeGen
:
:
Node
then_node
CodeGen
:
:
Node
else_node
)
const
=
0
;
protected
:
BoolExprImpl
(
)
{
}
virtual
~
BoolExprImpl
(
)
{
}
}
;
class
ResultExprImpl
{
public
:
ResultExprImpl
(
const
ResultExprImpl
&
)
=
delete
;
ResultExprImpl
&
operator
=
(
const
ResultExprImpl
&
)
=
delete
;
virtual
CodeGen
:
:
Node
Compile
(
PolicyCompiler
*
pc
)
const
=
0
;
virtual
bool
HasUnsafeTraps
(
)
const
;
virtual
bool
IsAllow
(
)
const
;
virtual
bool
IsDeny
(
)
const
;
protected
:
ResultExprImpl
(
)
{
}
virtual
~
ResultExprImpl
(
)
{
}
}
;
}
}
}
#
endif
