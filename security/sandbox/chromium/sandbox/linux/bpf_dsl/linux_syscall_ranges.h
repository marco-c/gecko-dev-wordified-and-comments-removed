#
ifndef
SANDBOX_LINUX_BPF_DSL_LINUX_SYSCALL_RANGES_H_
#
define
SANDBOX_LINUX_BPF_DSL_LINUX_SYSCALL_RANGES_H_
#
if
defined
(
__x86_64__
)
#
define
MIN_SYSCALL
0u
#
define
MAX_PUBLIC_SYSCALL
1024u
#
define
MAX_SYSCALL
MAX_PUBLIC_SYSCALL
#
elif
defined
(
__i386__
)
#
define
MIN_SYSCALL
0u
#
define
MAX_PUBLIC_SYSCALL
1024u
#
define
MAX_SYSCALL
MAX_PUBLIC_SYSCALL
#
elif
defined
(
__arm__
)
&
&
(
defined
(
__thumb__
)
|
|
defined
(
__ARM_EABI__
)
)
#
define
MIN_SYSCALL
0u
#
define
MAX_PUBLIC_SYSCALL
(
MIN_SYSCALL
+
1024u
)
#
define
MIN_PRIVATE_SYSCALL
0xf0000u
#
define
MAX_PRIVATE_SYSCALL
(
MIN_PRIVATE_SYSCALL
+
16u
)
#
define
MIN_GHOST_SYSCALL
(
MIN_PRIVATE_SYSCALL
+
0xfff0u
)
#
define
MAX_SYSCALL
(
MIN_GHOST_SYSCALL
+
4u
)
#
elif
defined
(
__mips__
)
&
&
(
_MIPS_SIM
=
=
_ABIO32
)
#
include
<
asm
/
unistd
.
h
>
#
define
MIN_SYSCALL
__NR_O32_Linux
#
define
MAX_PUBLIC_SYSCALL
(
MIN_SYSCALL
+
__NR_Linux_syscalls
)
#
define
MAX_SYSCALL
MAX_PUBLIC_SYSCALL
#
elif
defined
(
__mips__
)
&
&
(
_MIPS_SIM
=
=
_ABI64
)
#
error
"
Add
support
to
header
file
"
#
elif
defined
(
__aarch64__
)
#
define
MIN_SYSCALL
0u
#
define
MAX_PUBLIC_SYSCALL
279u
#
define
MAX_SYSCALL
MAX_PUBLIC_SYSCALL
#
else
#
error
"
Unsupported
architecture
"
#
endif
#
endif
