#
ifndef
MultiLogCTVerifier_h
#
define
MultiLogCTVerifier_h
#
include
"
CTLogVerifier
.
h
"
#
include
"
mozilla
/
Vector
.
h
"
#
include
"
pkix
/
Input
.
h
"
#
include
"
pkix
/
Result
.
h
"
#
include
"
SignedCertificateTimestamp
.
h
"
namespace
mozilla
{
namespace
ct
{
typedef
Vector
<
SignedCertificateTimestamp
>
SCTList
;
class
CTVerifyResult
{
public
:
SCTList
verifiedScts
;
SCTList
invalidScts
;
SCTList
unknownLogsScts
;
size_t
decodingErrors
;
void
Reset
(
)
;
}
;
class
MultiLogCTVerifier
{
public
:
pkix
:
:
Result
AddLog
(
pkix
:
:
Input
publicKey
)
;
pkix
:
:
Result
Verify
(
pkix
:
:
Input
cert
pkix
:
:
Input
issuerSubjectPublicKeyInfo
pkix
:
:
Input
sctListFromCert
pkix
:
:
Input
sctListFromOCSPResponse
pkix
:
:
Input
sctListFromTLSExtension
uint64_t
time
CTVerifyResult
&
result
)
;
private
:
pkix
:
:
Result
VerifySCTs
(
pkix
:
:
Input
encodedSctList
const
LogEntry
&
expectedEntry
SignedCertificateTimestamp
:
:
Origin
origin
uint64_t
time
CTVerifyResult
&
result
)
;
pkix
:
:
Result
VerifySingleSCT
(
SignedCertificateTimestamp
&
&
sct
const
ct
:
:
LogEntry
&
expectedEntry
uint64_t
time
CTVerifyResult
&
result
)
;
Vector
<
CTLogVerifier
>
mLogs
;
}
;
}
}
#
endif
