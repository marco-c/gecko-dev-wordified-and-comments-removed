#
ifndef
_SYS_TIME_H_
#
define
_SYS_TIME_H_
#
include
<
time
.
h
>
#
include
<
sys
/
types
.
h
>
struct
timeval
{
time_t
tv_sec
;
suseconds_t
tv_usec
;
}
;
struct
timespec
{
time_t
tv_sec
;
long
tv_nsec
;
}
;
#
define
TIMEVAL_TO_TIMESPEC
(
tv
ts
)
{
\
(
ts
)
-
>
tv_sec
=
(
tv
)
-
>
tv_sec
;
\
(
ts
)
-
>
tv_nsec
=
(
tv
)
-
>
tv_usec
*
1000
;
\
}
#
define
TIMESPEC_TO_TIMEVAL
(
tv
ts
)
{
\
(
tv
)
-
>
tv_sec
=
(
ts
)
-
>
tv_sec
;
\
(
tv
)
-
>
tv_usec
=
(
ts
)
-
>
tv_nsec
/
1000
;
\
}
struct
timezone
{
int
tz_minuteswest
;
int
tz_dsttime
;
}
;
#
define
DST_NONE
0
/
*
not
on
dst
*
/
#
define
DST_USA
1
/
*
USA
style
dst
*
/
#
define
DST_AUST
2
/
*
Australian
style
dst
*
/
#
define
DST_WET
3
/
*
Western
European
dst
*
/
#
define
DST_MET
4
/
*
Middle
European
dst
*
/
#
define
DST_EET
5
/
*
Eastern
European
dst
*
/
#
define
DST_CAN
6
/
*
Canada
*
/
#
define
timerclear
(
tvp
)
(
tvp
)
-
>
tv_sec
=
(
tvp
)
-
>
tv_usec
=
0
#
define
timerisset
(
tvp
)
(
(
tvp
)
-
>
tv_sec
|
|
(
tvp
)
-
>
tv_usec
)
#
define
timercmp
(
tvp
uvp
cmp
)
\
(
(
(
tvp
)
-
>
tv_sec
=
=
(
uvp
)
-
>
tv_sec
)
?
\
(
(
tvp
)
-
>
tv_usec
cmp
(
uvp
)
-
>
tv_usec
)
:
\
(
(
tvp
)
-
>
tv_sec
cmp
(
uvp
)
-
>
tv_sec
)
)
#
define
ITIMER_REAL
0
#
define
ITIMER_VIRTUAL
1
#
define
ITIMER_PROF
2
struct
itimerval
{
struct
timeval
it_interval
;
struct
timeval
it_value
;
}
;
struct
clockinfo
{
int
hz
;
int
tick
;
int
stathz
;
int
profhz
;
}
;
#
define
NBBY
8
/
*
number
of
bits
in
a
byte
*
/
#
ifndef
FD_SETSIZE
#
define
FD_SETSIZE
256
#
endif
typedef
long
fd_mask
;
#
define
NFDBITS
(
sizeof
(
fd_mask
)
*
NBBY
)
/
*
bits
per
mask
*
/
#
ifndef
howmany
#
define
howmany
(
x
y
)
(
(
(
x
)
+
(
(
y
)
-
1
)
)
/
(
y
)
)
#
endif
typedef
struct
fd_set
{
fd_mask
fds_bits
[
howmany
(
FD_SETSIZE
NFDBITS
)
]
;
}
fd_set
;
#
define
FD_SET
(
n
p
)
(
(
p
)
-
>
fds_bits
[
(
n
)
/
NFDBITS
]
|
=
(
1
<
<
(
(
n
)
%
NFDBITS
)
)
)
#
define
FD_CLR
(
n
p
)
(
(
p
)
-
>
fds_bits
[
(
n
)
/
NFDBITS
]
&
=
~
(
1
<
<
(
(
n
)
%
NFDBITS
)
)
)
#
define
FD_ISSET
(
n
p
)
(
(
p
)
-
>
fds_bits
[
(
n
)
/
NFDBITS
]
&
(
1
<
<
(
(
n
)
%
NFDBITS
)
)
)
#
define
FD_COPY
(
f
t
)
memcpy
(
t
f
sizeof
(
*
(
f
)
)
)
#
define
FD_ZERO
(
p
)
memset
(
p
0
sizeof
(
*
(
p
)
)
)
#
include
<
time
.
h
>
#
include
<
sys
/
cdefs
.
h
>
__BEGIN_DECLS
int
getitimer
__P
(
(
int
struct
itimerval
*
)
)
;
int
gettimeofday
__P
(
(
struct
timeval
*
struct
timezone
*
)
)
;
int
setitimer
__P
(
(
int
const
struct
itimerval
*
struct
itimerval
*
)
)
;
int
utimes
__P
(
(
const
char
*
const
struct
timeval
*
)
)
;
int
select
__P
(
(
int
fd_set
*
fd_set
*
fd_set
*
struct
timeval
*
)
)
;
__END_DECLS
#
endif
