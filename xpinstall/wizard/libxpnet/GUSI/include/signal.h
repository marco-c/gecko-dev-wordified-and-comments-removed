#
ifndef
_USER_SIGNAL_H
#
define
_USER_SIGNAL_H
#
include
<
sys
/
types
.
h
>
#
include
<
sys
/
cdefs
.
h
>
#
include
<
sys
/
signal
.
h
>
#
include
<
pthread
.
h
>
#
if
!
defined
(
_ANSI_SOURCE
)
&
&
!
defined
(
_POSIX_SOURCE
)
extern
const
char
*
const
sys_signame
[
NSIG
]
;
#
endif
__BEGIN_DECLS
int
raise
__P
(
(
int
)
)
;
#
ifndef
_ANSI_SOURCE
int
kill
__P
(
(
pid_t
int
)
)
;
int
sigaction
__P
(
(
int
const
struct
sigaction
*
struct
sigaction
*
)
)
;
int
sigaddset
__P
(
(
sigset_t
*
int
)
)
;
int
sigdelset
__P
(
(
sigset_t
*
int
)
)
;
int
sigemptyset
__P
(
(
sigset_t
*
)
)
;
int
sigfillset
__P
(
(
sigset_t
*
)
)
;
int
sigismember
__P
(
(
const
sigset_t
*
int
)
)
;
int
sigpending
__P
(
(
sigset_t
*
)
)
;
int
sigprocmask
__P
(
(
int
const
sigset_t
*
sigset_t
*
)
)
;
int
sigsuspend
__P
(
(
const
sigset_t
*
)
)
;
int
pthread_kill
__P
(
(
pthread_t
int
)
)
;
int
pthread_sigmask
__P
(
(
int
const
sigset_t
*
sigset_t
*
)
)
;
int
sigwait
__P
(
(
const
sigset_t
*
int
*
)
)
;
#
endif
__END_DECLS
#
define
sigaddset
(
set
signo
)
(
*
(
set
)
|
=
1
<
<
(
(
signo
)
-
1
)
0
)
#
define
sigdelset
(
set
signo
)
(
*
(
set
)
&
=
~
(
1
<
<
(
(
signo
)
-
1
)
)
0
)
#
define
sigemptyset
(
set
)
(
*
(
set
)
=
0
0
)
#
define
sigfillset
(
set
)
(
*
(
set
)
=
~
(
sigset_t
)
0
0
)
#
define
sigismember
(
set
signo
)
(
(
*
(
set
)
&
(
1
<
<
(
(
signo
)
-
1
)
)
)
!
=
0
)
#
endif
