with
Files
(
"
*
*
"
)
:
BUG_COMPONENT
=
(
"
Toolkit
"
"
Storage
"
)
DIRS
+
=
[
"
build
"
]
TEST_DIRS
+
=
[
"
test
"
]
XPIDL_SOURCES
+
=
[
"
mozIStorageAsyncConnection
.
idl
"
"
mozIStorageAsyncStatement
.
idl
"
"
mozIStorageBaseStatement
.
idl
"
"
mozIStorageBindingParams
.
idl
"
"
mozIStorageBindingParamsArray
.
idl
"
"
mozIStorageCompletionCallback
.
idl
"
"
mozIStorageConnection
.
idl
"
"
mozIStorageError
.
idl
"
"
mozIStorageFunction
.
idl
"
"
mozIStoragePendingStatement
.
idl
"
"
mozIStorageProgressHandler
.
idl
"
"
mozIStorageResultSet
.
idl
"
"
mozIStorageRow
.
idl
"
"
mozIStorageService
.
idl
"
"
mozIStorageStatement
.
idl
"
"
mozIStorageStatementCallback
.
idl
"
"
mozIStorageVacuumParticipant
.
idl
"
"
mozIStorageValueArray
.
idl
"
]
XPIDL_MODULE
=
"
storage
"
EXPORTS
+
=
[
"
mozStorageHelper
.
h
"
]
EXPORTS
.
mozilla
+
=
[
"
storage
.
h
"
]
EXPORTS
.
mozilla
.
storage
+
=
[
"
mozStorageAsyncStatementParams
.
h
"
"
mozStorageStatementParams
.
h
"
"
mozStorageStatementRow
.
h
"
"
SQLiteMutex
.
h
"
"
StatementCache
.
h
"
"
Variant
.
h
"
"
Variant_inl
.
h
"
]
UNIFIED_SOURCES
+
=
[
"
FileSystemModule
.
cpp
"
"
mozStorageArgValueArray
.
cpp
"
"
mozStorageAsyncStatement
.
cpp
"
"
mozStorageAsyncStatementExecution
.
cpp
"
"
mozStorageAsyncStatementJSHelper
.
cpp
"
"
mozStorageAsyncStatementParams
.
cpp
"
"
mozStorageBindingParamsArray
.
cpp
"
"
mozStorageError
.
cpp
"
"
mozStoragePrivateHelpers
.
cpp
"
"
mozStorageResultSet
.
cpp
"
"
mozStorageRow
.
cpp
"
"
mozStorageService
.
cpp
"
"
mozStorageSQLFunctions
.
cpp
"
"
mozStorageStatement
.
cpp
"
"
mozStorageStatementJSHelper
.
cpp
"
"
mozStorageStatementParams
.
cpp
"
"
mozStorageStatementRow
.
cpp
"
"
ObfuscatingVFS
.
cpp
"
"
SQLCollations
.
cpp
"
"
StorageBaseStatementInternal
.
cpp
"
"
TelemetryVFS
.
cpp
"
"
VacuumManager
.
cpp
"
"
Variant
.
cpp
"
]
SOURCES
+
=
[
"
mozStorageBindingParams
.
cpp
"
"
mozStorageConnection
.
cpp
"
]
include
(
"
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
"
)
FINAL_LIBRARY
=
"
xul
"
if
CONFIG
[
"
MOZ_THUNDERBIRD
"
]
or
CONFIG
[
"
MOZ_SUITE
"
]
:
DEFINES
[
"
MOZ_SQLITE_FTS3_TOKENIZER
"
]
=
1
DEFINES
[
"
SQLITE_MAX_LIKE_PATTERN_LENGTH
"
]
=
50000
LOCAL_INCLUDES
+
=
[
"
/
dom
/
base
"
"
/
third_party
/
sqlite3
/
src
"
]
CXXFLAGS
+
=
CONFIG
[
"
SQLITE_CFLAGS
"
]
