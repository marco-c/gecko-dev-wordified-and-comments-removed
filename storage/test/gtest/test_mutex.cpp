#
include
"
storage_test_harness
.
h
"
#
include
"
SQLiteMutex
.
h
"
using
namespace
mozilla
;
using
namespace
mozilla
:
:
storage
;
TEST
(
storage_mutex
AutoLock
)
{
int
lockTypes
[
]
=
{
SQLITE_MUTEX_FAST
SQLITE_MUTEX_RECURSIVE
}
;
for
(
int
lockType
:
lockTypes
)
{
SQLiteMutex
mutex
(
"
TestMutex
"
)
;
sqlite3_mutex
*
inner
=
sqlite3_mutex_alloc
(
lockType
)
;
do_check_true
(
inner
)
;
mutex
.
initWithMutex
(
inner
)
;
mutex
.
assertNotCurrentThreadOwns
(
)
;
{
SQLiteMutexAutoLock
lockedScope
(
mutex
)
;
mutex
.
assertCurrentThreadOwns
(
)
;
}
mutex
.
assertNotCurrentThreadOwns
(
)
;
sqlite3_mutex_free
(
inner
)
;
}
}
TEST
(
storage_mutex
AutoUnlock
)
{
int
lockTypes
[
]
=
{
SQLITE_MUTEX_FAST
SQLITE_MUTEX_RECURSIVE
}
;
for
(
int
lockType
:
lockTypes
)
{
SQLiteMutex
mutex
(
"
TestMutex
"
)
;
sqlite3_mutex
*
inner
=
sqlite3_mutex_alloc
(
lockType
)
;
do_check_true
(
inner
)
;
mutex
.
initWithMutex
(
inner
)
;
{
SQLiteMutexAutoLock
lockedScope
(
mutex
)
;
{
SQLiteMutexAutoUnlock
unlockedScope
(
mutex
)
;
mutex
.
assertNotCurrentThreadOwns
(
)
;
}
mutex
.
assertCurrentThreadOwns
(
)
;
}
sqlite3_mutex_free
(
inner
)
;
}
}
