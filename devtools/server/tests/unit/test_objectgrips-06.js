"
use
strict
"
;
Services
.
prefs
.
setBoolPref
(
"
security
.
allow_eval_with_system_principal
"
true
)
;
registerCleanupFunction
(
(
)
=
>
{
Services
.
prefs
.
clearUserPref
(
"
security
.
allow_eval_with_system_principal
"
)
;
}
)
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
debuggee
client
}
)
=
>
{
return
new
Promise
(
resolve
=
>
{
threadFront
.
once
(
"
paused
"
async
function
(
packet
)
{
const
obj1
=
packet
.
frame
.
arguments
[
0
]
;
Assert
.
ok
(
obj1
.
sealed
)
;
const
obj1Client
=
threadFront
.
pauseGrip
(
obj1
)
;
Assert
.
ok
(
obj1Client
.
isSealed
)
;
const
obj2
=
packet
.
frame
.
arguments
[
1
]
;
Assert
.
ok
(
!
obj2
.
sealed
)
;
const
obj2Client
=
threadFront
.
pauseGrip
(
obj2
)
;
Assert
.
ok
(
!
obj2Client
.
isSealed
)
;
await
threadFront
.
resume
(
)
;
resolve
(
)
;
}
)
;
debuggee
.
eval
(
function
stopMe
(
arg1
)
{
debugger
;
}
.
toString
(
)
)
;
debuggee
.
eval
(
"
(
"
+
function
(
)
{
const
obj1
=
{
}
;
Object
.
seal
(
obj1
)
;
stopMe
(
obj1
{
}
)
;
}
+
"
(
)
)
"
)
;
}
)
;
}
)
)
;
