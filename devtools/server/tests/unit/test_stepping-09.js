"
use
strict
"
;
add_task
(
threadClientTest
(
async
(
{
threadClient
debuggee
}
)
=
>
{
dumpn
(
"
Evaluating
test
code
and
waiting
for
first
debugger
statement
"
)
;
const
dbgStmt
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
evaluateTestCode
(
debuggee
)
threadClient
)
;
equal
(
dbgStmt
.
frame
.
where
.
line
2
"
Should
be
at
debugger
statement
on
line
2
"
)
;
dumpn
(
"
Step
out
of
inner
and
into
outer
"
)
;
const
step2
=
await
stepOut
(
threadClient
)
;
equal
(
step2
.
frame
.
where
.
line
2
)
;
deepEqual
(
step2
.
why
.
frameFinished
.
return
{
type
:
"
undefined
"
}
)
;
}
)
)
;
function
evaluateTestCode
(
debuggee
)
{
Cu
.
evalInSandbox
(
function
outer
(
)
{
inner
(
)
;
return
42
;
}
function
inner
(
)
{
debugger
;
}
outer
(
)
;
debuggee
"
1
.
8
"
"
test_stepping
-
09
-
test
-
code
.
js
"
1
)
;
}
