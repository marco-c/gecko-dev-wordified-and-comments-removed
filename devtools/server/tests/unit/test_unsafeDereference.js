ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
jsdebugger
.
jsm
"
)
;
addDebuggerToGlobal
(
this
)
;
Debugger
.
Object
.
prototype
.
getProperty
=
function
(
name
)
{
const
desc
=
this
.
getOwnPropertyDescriptor
(
name
)
;
if
(
!
desc
)
{
return
undefined
;
}
if
(
!
desc
.
value
)
{
throw
Error
(
"
Debugger
.
Object
.
prototype
.
getProperty
:
"
+
"
not
a
value
property
:
"
+
name
)
;
}
return
desc
.
value
;
}
;
function
run_test
(
)
{
const
contentBox
=
Cu
.
Sandbox
(
"
http
:
/
/
www
.
example
.
com
"
)
;
const
chromeBox
=
Cu
.
Sandbox
(
this
)
;
const
mainObj
=
{
name
:
"
mainObj
"
}
;
Cu
.
evalInSandbox
(
'
var
contentObj
=
{
name
:
"
contentObj
"
}
;
'
contentBox
)
;
Cu
.
evalInSandbox
(
'
var
chromeObj
=
{
name
:
"
chromeObj
"
}
;
'
chromeBox
)
;
contentBox
.
mainObj
=
chromeBox
.
mainObj
=
mainObj
;
const
contentObj
=
chromeBox
.
contentObj
=
contentBox
.
contentObj
;
const
chromeObj
=
contentBox
.
chromeObj
=
chromeBox
.
chromeObj
;
Assert
.
ok
(
Cu
.
evalInSandbox
(
"
mainObj
"
contentBox
)
=
=
=
contentBox
.
mainObj
)
;
Assert
.
ok
(
Cu
.
evalInSandbox
(
"
contentObj
"
contentBox
)
=
=
=
contentBox
.
contentObj
)
;
Assert
.
ok
(
Cu
.
evalInSandbox
(
"
chromeObj
"
contentBox
)
=
=
=
contentBox
.
chromeObj
)
;
Assert
.
ok
(
Cu
.
evalInSandbox
(
"
mainObj
"
chromeBox
)
=
=
=
chromeBox
.
mainObj
)
;
Assert
.
ok
(
Cu
.
evalInSandbox
(
"
contentObj
"
chromeBox
)
=
=
=
chromeBox
.
contentObj
)
;
Assert
.
ok
(
Cu
.
evalInSandbox
(
"
chromeObj
"
chromeBox
)
=
=
=
chromeBox
.
chromeObj
)
;
Assert
.
ok
(
contentBox
.
mainObj
.
name
=
=
=
"
mainObj
"
)
;
Assert
.
ok
(
contentBox
.
contentObj
.
name
=
=
=
"
contentObj
"
)
;
Assert
.
ok
(
contentBox
.
chromeObj
.
name
=
=
=
"
chromeObj
"
)
;
Assert
.
equal
(
Cu
.
evalInSandbox
(
"
mainObj
.
name
"
chromeBox
)
"
mainObj
"
)
;
Assert
.
equal
(
Cu
.
evalInSandbox
(
"
contentObj
.
name
"
chromeBox
)
"
contentObj
"
)
;
Assert
.
equal
(
Cu
.
evalInSandbox
(
"
chromeObj
.
name
"
chromeBox
)
"
chromeObj
"
)
;
Assert
.
equal
(
Cu
.
evalInSandbox
(
"
mainObj
.
name
"
contentBox
)
undefined
)
;
Assert
.
equal
(
Cu
.
evalInSandbox
(
"
contentObj
.
name
"
contentBox
)
"
contentObj
"
)
;
Assert
.
equal
(
Cu
.
evalInSandbox
(
"
chromeObj
.
name
"
contentBox
)
undefined
)
;
const
dbg
=
new
Debugger
(
)
;
const
contentBoxDO
=
dbg
.
addDebuggee
(
contentBox
)
;
const
chromeBoxDO
=
dbg
.
addDebuggee
(
chromeBox
)
;
const
mainFromContentDO
=
contentBoxDO
.
getProperty
(
"
mainObj
"
)
;
Assert
.
equal
(
mainFromContentDO
contentBoxDO
.
makeDebuggeeValue
(
mainObj
)
)
;
Assert
.
equal
(
mainFromContentDO
.
getProperty
(
"
name
"
)
undefined
)
;
Assert
.
equal
(
mainFromContentDO
.
unsafeDereference
(
)
mainObj
)
;
const
contentFromContentDO
=
contentBoxDO
.
getProperty
(
"
contentObj
"
)
;
Assert
.
equal
(
contentFromContentDO
contentBoxDO
.
makeDebuggeeValue
(
contentObj
)
)
;
Assert
.
equal
(
contentFromContentDO
.
getProperty
(
"
name
"
)
"
contentObj
"
)
;
Assert
.
equal
(
contentFromContentDO
.
unsafeDereference
(
)
contentObj
)
;
const
chromeFromContentDO
=
contentBoxDO
.
getProperty
(
"
chromeObj
"
)
;
Assert
.
equal
(
chromeFromContentDO
contentBoxDO
.
makeDebuggeeValue
(
chromeObj
)
)
;
Assert
.
equal
(
chromeFromContentDO
.
getProperty
(
"
name
"
)
undefined
)
;
Assert
.
equal
(
chromeFromContentDO
.
unsafeDereference
(
)
chromeObj
)
;
const
mainFromChromeDO
=
chromeBoxDO
.
getProperty
(
"
mainObj
"
)
;
Assert
.
equal
(
mainFromChromeDO
chromeBoxDO
.
makeDebuggeeValue
(
mainObj
)
)
;
Assert
.
equal
(
mainFromChromeDO
.
getProperty
(
"
name
"
)
"
mainObj
"
)
;
Assert
.
equal
(
mainFromChromeDO
.
unsafeDereference
(
)
mainObj
)
;
const
contentFromChromeDO
=
chromeBoxDO
.
getProperty
(
"
contentObj
"
)
;
Assert
.
equal
(
contentFromChromeDO
chromeBoxDO
.
makeDebuggeeValue
(
contentObj
)
)
;
Assert
.
equal
(
contentFromChromeDO
.
getProperty
(
"
name
"
)
"
contentObj
"
)
;
Assert
.
equal
(
contentFromChromeDO
.
unsafeDereference
(
)
contentObj
)
;
const
chromeFromChromeDO
=
chromeBoxDO
.
getProperty
(
"
chromeObj
"
)
;
Assert
.
equal
(
chromeFromChromeDO
chromeBoxDO
.
makeDebuggeeValue
(
chromeObj
)
)
;
Assert
.
equal
(
chromeFromChromeDO
.
getProperty
(
"
name
"
)
"
chromeObj
"
)
;
Assert
.
equal
(
chromeFromChromeDO
.
unsafeDereference
(
)
chromeObj
)
;
}
