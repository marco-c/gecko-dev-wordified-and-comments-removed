"
use
strict
"
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
debuggee
client
}
)
=
>
{
const
rootActor
=
client
.
transport
.
_serverConnection
.
rootActor
;
const
threadActor
=
rootActor
.
_parameters
.
tabList
.
_targetActors
[
0
]
.
threadActor
;
let
lastMessage
;
threadActor
.
_parent
.
_consoleActor
=
{
onConsoleAPICall
(
message
)
{
lastMessage
=
message
;
}
}
;
const
packet
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
evalCode
(
debuggee
)
threadFront
)
;
const
source
=
await
getSourceById
(
threadFront
packet
.
frame
.
where
.
actor
)
;
await
threadFront
.
setBreakpoint
(
{
sourceUrl
:
source
.
url
line
:
3
}
{
logValue
:
"
c
"
}
)
;
await
threadFront
.
resume
(
)
;
Assert
.
equal
(
lastMessage
.
level
"
logPointError
"
)
;
Assert
.
equal
(
lastMessage
.
arguments
[
0
]
"
c
is
not
defined
"
)
;
}
)
)
;
function
evalCode
(
debuggee
)
{
Cu
.
evalInSandbox
(
"
debugger
;
\
n
"
+
"
var
a
=
'
three
'
;
\
n
"
+
"
var
b
=
2
;
\
n
"
debuggee
"
1
.
8
"
"
test
.
js
"
1
)
;
}
