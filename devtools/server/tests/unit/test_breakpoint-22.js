"
use
strict
"
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
debuggee
}
)
=
>
{
await
getSources
(
threadFront
)
;
const
packet
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
{
evalCode
(
debuggee
)
;
}
threadFront
)
;
const
source
=
await
getSourceById
(
threadFront
packet
.
frame
.
where
.
actor
)
;
const
location
=
{
line
:
debuggee
.
line0
+
2
}
;
const
[
res
]
=
await
setBreakpoint
(
source
location
)
;
ok
(
!
res
.
error
)
;
const
location2
=
{
line
:
debuggee
.
line0
+
7
}
;
await
source
.
setBreakpoint
(
location2
)
.
then
(
(
)
=
>
{
do_throw
(
"
no
code
shall
not
be
found
the
specified
line
or
below
it
"
)
;
}
reason
=
>
{
Assert
.
equal
(
reason
.
error
"
noCodeAtLineColumn
"
)
;
ok
(
reason
.
message
)
;
}
)
;
await
resume
(
threadFront
)
;
}
)
)
;
function
evalCode
(
debuggee
)
{
Cu
.
evalInSandbox
(
var
line0
=
Error
(
)
.
lineNumber
;
function
some_function
(
)
{
/
/
breakpoint
is
valid
here
-
-
it
slides
one
line
below
(
line0
+
2
)
}
debugger
;
/
/
no
breakpoint
is
allowed
after
the
EOF
(
line0
+
6
)
debuggee
)
;
}
