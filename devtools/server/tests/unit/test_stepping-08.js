"
use
strict
"
;
add_task
(
threadClientTest
(
async
(
{
threadClient
debuggee
client
}
)
=
>
{
dumpn
(
"
Evaluating
test
code
and
waiting
for
first
debugger
statement
"
)
;
const
dbgStmt
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
evaluateTestCode
(
debuggee
)
client
)
;
equal
(
dbgStmt
.
frame
.
where
.
line
3
"
Should
be
at
debugger
statement
on
line
3
"
)
;
dumpn
(
"
Setting
breakpoint
in
innerFunction
"
)
;
const
source
=
await
getSourceById
(
threadClient
dbgStmt
.
frame
.
where
.
actor
)
;
await
source
.
setBreakpoint
(
{
line
:
7
}
)
;
dumpn
(
"
Step
in
to
innerFunction
"
)
;
const
step1
=
await
stepIn
(
client
threadClient
)
;
equal
(
step1
.
frame
.
where
.
line
7
)
;
dumpn
(
"
Step
out
of
innerFunction
"
)
;
const
step2
=
await
stepOut
(
client
threadClient
)
;
equal
(
step2
.
frame
.
where
.
line
4
)
;
}
)
)
;
function
evaluateTestCode
(
debuggee
)
{
Cu
.
evalInSandbox
(
/
/
1
function
outerFunction
(
)
{
/
/
2
debugger
;
innerFunction
(
)
;
/
/
3
}
/
/
4
/
/
5
function
innerFunction
(
)
{
/
/
6
var
x
=
0
;
/
/
7
var
y
=
72
;
/
/
8
return
x
+
y
;
/
/
9
}
/
/
10
outerFunction
(
)
;
/
/
11
debuggee
"
1
.
8
"
"
test_stepping
-
08
-
test
-
code
.
js
"
1
)
;
}
