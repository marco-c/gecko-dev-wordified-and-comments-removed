"
use
strict
"
;
add_task
(
threadFrontTest
(
(
{
threadFront
client
debuggee
targetFront
}
)
=
>
{
return
new
Promise
(
resolve
=
>
{
threadFront
.
once
(
"
paused
"
async
function
(
packet
)
{
ok
(
true
"
The
page
is
paused
"
)
;
ok
(
!
debuggee
.
foo
"
foo
is
still
false
after
we
hit
the
breakpoint
"
)
;
await
targetFront
.
detach
(
)
;
await
new
Promise
(
executeSoon
)
;
ok
(
debuggee
.
foo
"
foo
is
true
after
target
'
s
detach
request
"
)
;
executeSoon
(
resolve
)
;
}
)
;
Cu
.
evalInSandbox
(
"
var
foo
=
false
;
\
n
"
+
"
debugger
;
\
n
"
+
"
foo
=
true
;
\
n
"
debuggee
)
;
ok
(
debuggee
.
foo
"
foo
is
false
at
startup
"
)
;
}
)
;
}
)
)
;
add_task
(
threadFrontTest
(
(
{
threadFront
client
debuggee
}
)
=
>
{
return
new
Promise
(
resolve
=
>
{
threadFront
.
once
(
"
paused
"
async
function
(
packet
)
{
ok
(
true
"
The
page
is
paused
"
)
;
ok
(
!
debuggee
.
foo
"
foo
is
still
false
after
we
hit
the
breakpoint
"
)
;
await
client
.
close
(
)
;
await
new
Promise
(
executeSoon
)
;
ok
(
debuggee
.
foo
"
foo
is
true
after
client
close
"
)
;
executeSoon
(
resolve
)
;
dump
(
"
resolved
\
n
"
)
;
}
)
;
Cu
.
evalInSandbox
(
"
var
foo
=
false
;
\
n
"
+
"
debugger
;
\
n
"
+
"
foo
=
true
;
\
n
"
debuggee
)
;
ok
(
debuggee
.
foo
"
foo
is
false
at
startup
"
)
;
}
)
;
}
)
)
;
