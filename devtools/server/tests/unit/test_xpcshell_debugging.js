"
use
strict
"
;
function
run_test
(
)
{
const
testFile
=
do_get_file
(
"
xpcshell_debugging_script
.
js
"
)
;
let
testResumed
=
false
;
const
DebuggerServer
=
_setupDebuggerServer
(
[
testFile
.
path
]
(
)
=
>
{
testResumed
=
true
;
}
)
;
const
transport
=
DebuggerServer
.
connectPipe
(
)
;
const
client
=
new
DebuggerClient
(
transport
)
;
client
.
connect
(
)
.
then
(
(
)
=
>
{
client
.
getProcess
(
)
.
then
(
response
=
>
{
const
actor
=
response
.
form
.
actor
;
client
.
attachTab
(
actor
)
.
then
(
(
[
response
tabClient
]
)
=
>
{
tabClient
.
attachThread
(
null
)
.
then
(
(
[
response
threadClient
]
)
=
>
{
threadClient
.
addOneTimeListener
(
"
paused
"
(
event
packet
)
=
>
{
equal
(
packet
.
why
.
type
"
breakpoint
"
"
yay
-
hit
the
breakpoint
at
the
first
line
in
our
script
"
)
;
threadClient
.
addOneTimeListener
(
"
paused
"
(
event
packet
)
=
>
{
equal
(
packet
.
why
.
type
"
debuggerStatement
"
"
yay
-
hit
the
'
debugger
'
statement
in
our
script
"
)
;
threadClient
.
resume
(
(
)
=
>
{
finishClient
(
client
)
;
}
)
;
}
)
;
threadClient
.
resume
(
)
;
}
)
;
threadClient
.
resume
(
response
=
>
{
ok
(
testResumed
)
;
load
(
testFile
.
path
)
;
}
)
;
}
)
;
}
)
;
}
)
;
}
)
;
do_test_pending
(
)
;
}
