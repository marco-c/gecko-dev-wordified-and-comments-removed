const
PROPERTIES
=
[
{
property
:
"
z
-
index
"
value
:
"
2
"
}
{
property
:
"
top
"
value
:
"
20px
"
}
{
property
:
"
right
"
value
:
"
20px
"
}
{
property
:
"
bottom
"
value
:
"
20px
"
}
{
property
:
"
left
"
value
:
"
20px
"
}
]
;
const
POSITIONS
=
[
{
position
:
"
unset
"
isActive
:
false
}
{
position
:
"
initial
"
isActive
:
false
}
{
position
:
"
inherit
"
isActive
:
false
}
{
position
:
"
static
"
isActive
:
false
}
{
position
:
"
absolute
"
isActive
:
true
}
{
position
:
"
relative
"
isActive
:
true
}
{
position
:
"
fixed
"
isActive
:
true
}
{
position
:
"
sticky
"
isActive
:
true
}
]
;
function
makeTestCase
(
property
value
position
isActive
)
{
return
{
info
:
{
property
}
is
{
isActive
?
"
"
:
"
in
"
}
active
when
position
is
{
position
}
property
tagName
:
"
div
"
rules
:
[
div
{
{
property
}
:
{
value
}
;
position
:
{
position
}
;
}
]
isActive
}
;
}
function
makeTestCases
(
)
{
const
tests
=
[
]
;
for
(
const
{
property
value
}
of
PROPERTIES
)
{
for
(
const
{
position
isActive
}
of
POSITIONS
)
{
tests
.
push
(
makeTestCase
(
property
value
position
isActive
)
)
;
}
}
return
tests
;
}
export
default
makeTestCases
(
)
;
