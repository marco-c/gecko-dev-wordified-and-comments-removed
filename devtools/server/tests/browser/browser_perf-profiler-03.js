const
{
PerformanceFront
}
=
require
(
"
devtools
/
shared
/
fronts
/
performance
"
)
;
const
{
pmmIsProfilerActive
pmmStartProfiler
pmmStopProfiler
pmmLoadFrameScripts
pmmClearFrameScripts
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
profiler
-
mm
-
utils
"
)
;
add_task
(
function
*
(
)
{
pmmLoadFrameScripts
(
gBrowser
)
;
let
entries
=
1000000
;
let
interval
=
1
;
let
features
=
[
"
js
"
]
;
yield
pmmStartProfiler
(
{
entries
interval
features
}
)
;
ok
(
(
yield
pmmIsProfilerActive
(
)
)
"
The
built
-
in
profiler
module
should
still
be
active
.
"
)
;
yield
addTab
(
MAIN_DOMAIN
+
"
doc_perf
.
html
"
)
;
initDebuggerServer
(
)
;
let
client
=
new
DebuggerClient
(
DebuggerServer
.
connectPipe
(
)
)
;
let
form
=
yield
connectDebuggerClient
(
client
)
;
let
firstFront
=
PerformanceFront
(
client
form
)
;
yield
firstFront
.
connect
(
)
;
let
recording
=
yield
firstFront
.
startRecording
(
)
;
yield
addTab
(
MAIN_DOMAIN
+
"
doc_perf
.
html
"
)
;
let
client2
=
new
DebuggerClient
(
DebuggerServer
.
connectPipe
(
)
)
;
let
form2
=
yield
connectDebuggerClient
(
client2
)
;
let
secondFront
=
PerformanceFront
(
client2
form2
)
;
yield
secondFront
.
connect
(
)
;
yield
secondFront
.
destroy
(
)
;
yield
closeDebuggerClient
(
client2
)
;
ok
(
(
yield
pmmIsProfilerActive
(
)
)
"
The
built
-
in
profiler
module
should
still
be
active
.
"
)
;
yield
firstFront
.
destroy
(
)
;
yield
closeDebuggerClient
(
client
)
;
ok
(
!
(
yield
pmmIsProfilerActive
(
)
)
"
The
built
-
in
profiler
module
should
have
been
automatically
stopped
.
"
)
;
pmmClearFrameScripts
(
)
;
gBrowser
.
removeCurrentTab
(
)
;
gBrowser
.
removeCurrentTab
(
)
;
}
)
;
