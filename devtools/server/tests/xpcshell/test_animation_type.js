"
use
strict
"
;
const
{
ANIMATION_TYPES
AnimationPlayerActor
}
=
require
(
"
devtools
/
server
/
actors
/
animation
"
)
;
function
run_test
(
)
{
const
window
=
{
}
;
window
.
MutationObserver
=
class
{
constructor
(
)
{
this
.
observe
=
(
)
=
>
{
}
;
}
}
;
window
.
Animation
=
class
{
constructor
(
)
{
this
.
effect
=
{
target
:
getMockNode
(
)
}
;
}
}
;
window
.
CSSAnimation
=
class
extends
window
.
Animation
{
}
;
window
.
CSSTransition
=
class
extends
window
.
Animation
{
}
;
function
getMockNode
(
)
{
return
{
ownerDocument
:
{
defaultView
:
window
}
}
;
}
const
TEST_DATA
=
[
{
desc
:
"
Test
CSSAnimation
type
"
animation
:
new
window
.
CSSAnimation
(
)
expectedType
:
ANIMATION_TYPES
.
CSS_ANIMATION
}
{
desc
:
"
Test
CSSTransition
type
"
animation
:
new
window
.
CSSTransition
(
)
expectedType
:
ANIMATION_TYPES
.
CSS_TRANSITION
}
{
desc
:
"
Test
ScriptAnimation
type
"
animation
:
new
window
.
Animation
(
)
expectedType
:
ANIMATION_TYPES
.
SCRIPT_ANIMATION
}
{
desc
:
"
Test
unknown
type
"
animation
:
{
effect
:
{
target
:
getMockNode
(
)
}
}
expectedType
:
ANIMATION_TYPES
.
UNKNOWN
}
]
;
for
(
const
{
desc
animation
expectedType
}
of
TEST_DATA
)
{
info
(
desc
)
;
const
actor
=
AnimationPlayerActor
(
{
}
animation
)
;
Assert
.
equal
(
actor
.
getType
(
)
expectedType
)
;
}
}
