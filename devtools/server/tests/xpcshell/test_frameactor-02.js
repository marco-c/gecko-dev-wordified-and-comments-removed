"
use
strict
"
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
debuggee
}
)
=
>
{
const
packet1
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
evalCode
(
debuggee
)
threadFront
)
;
const
packet2
=
await
resumeAndWaitForPause
(
threadFront
)
;
Assert
.
equal
(
packet1
.
frame
.
actor
packet2
.
frame
.
actor
)
;
await
threadFront
.
resume
(
)
;
}
)
)
;
function
evalCode
(
debuggee
)
{
debuggee
.
eval
(
"
(
"
+
function
(
)
{
function
stopMe
(
)
{
debugger
;
debugger
;
}
stopMe
(
)
;
}
+
"
)
(
)
"
)
;
}
