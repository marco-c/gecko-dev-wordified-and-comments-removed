"
use
strict
"
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
debuggee
}
)
=
>
{
const
packet
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
evalCode
(
debuggee
)
threadFront
)
;
const
source
=
await
getSourceById
(
threadFront
packet
.
frame
.
where
.
actor
)
;
threadFront
.
setBreakpoint
(
{
sourceUrl
:
source
.
url
line
:
4
}
{
}
)
;
await
threadFront
.
resume
(
)
;
await
threadFront
.
getSources
(
)
;
const
sourceFront
=
await
getSource
(
threadFront
BLACK_BOXED_URL
)
;
await
blackBox
(
sourceFront
)
;
const
packet2
=
await
executeOnNextTickAndWaitForPause
(
debuggee
.
runTest
threadFront
)
;
Assert
.
equal
(
packet2
.
why
.
type
"
breakpoint
"
"
We
should
pass
over
the
debugger
statement
.
"
)
;
threadFront
.
removeBreakpoint
(
{
sourceUrl
:
source
.
url
line
:
4
}
{
}
)
;
await
threadFront
.
resume
(
)
;
await
unBlackBox
(
sourceFront
)
;
const
packet3
=
await
executeOnNextTickAndWaitForPause
(
debuggee
.
runTest
threadFront
)
;
Assert
.
equal
(
packet3
.
why
.
type
"
debuggerStatement
"
"
We
should
stop
at
the
debugger
statement
again
"
)
;
await
threadFront
.
resume
(
)
;
threadFront
.
setBreakpoint
(
{
sourceUrl
:
source
.
url
line
:
4
}
{
}
)
;
await
blackBox
(
sourceFront
{
start
:
{
line
:
1
column
:
0
}
end
:
{
line
:
9
column
:
0
}
}
)
;
const
packet4
=
await
executeOnNextTickAndWaitForPause
(
debuggee
.
runTest
threadFront
)
;
Assert
.
equal
(
packet4
.
why
.
type
"
breakpoint
"
"
We
should
pass
over
the
debugger
statement
.
"
)
;
threadFront
.
removeBreakpoint
(
{
sourceUrl
:
source
.
url
line
:
4
}
{
}
)
;
await
unBlackBox
(
sourceFront
)
;
await
threadFront
.
resume
(
)
;
}
)
)
;
const
BLACK_BOXED_URL
=
"
http
:
/
/
example
.
com
/
blackboxme
.
js
"
;
const
SOURCE_URL
=
"
http
:
/
/
example
.
com
/
source
.
js
"
;
function
evalCode
(
debuggee
)
{
Cu
.
evalInSandbox
(
"
"
+
function
doStuff
(
k
)
{
debugger
;
k
(
100
)
;
}
debuggee
"
1
.
8
"
BLACK_BOXED_URL
1
)
;
Cu
.
evalInSandbox
(
"
"
+
function
runTest
(
)
{
doStuff
(
function
(
n
)
{
Math
.
abs
(
n
)
;
}
)
;
}
+
"
\
n
debugger
;
"
debuggee
"
1
.
8
"
SOURCE_URL
1
)
;
}
