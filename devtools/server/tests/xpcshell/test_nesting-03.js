"
use
strict
"
;
add_task
(
async
function
(
)
{
const
GLOBAL_NAME
=
"
test
-
nesting1
"
;
initTestDevToolsServer
(
)
;
addTestGlobal
(
GLOBAL_NAME
)
;
addTestGlobal
(
GLOBAL_NAME
)
;
const
firstClient
=
new
DevToolsClient
(
DevToolsServer
.
connectPipe
(
)
)
;
await
firstClient
.
connect
(
)
;
const
{
threadFront
:
firstThreadFront
}
=
await
attachTestThread
(
firstClient
GLOBAL_NAME
)
;
await
firstThreadFront
.
interrupt
(
)
;
const
secondClient
=
new
DevToolsClient
(
DevToolsServer
.
connectPipe
(
)
)
;
await
secondClient
.
connect
(
)
;
const
{
threadFront
:
secondThreadFront
}
=
await
attachTestThread
(
secondClient
GLOBAL_NAME
)
;
await
secondThreadFront
.
interrupt
(
)
;
let
result
;
try
{
result
=
await
firstThreadFront
.
resume
(
)
;
}
catch
(
e
)
{
Assert
.
ok
(
e
.
includes
(
"
wrongOrder
"
)
"
rejects
with
the
wrong
order
"
)
;
}
Assert
.
ok
(
!
result
"
no
response
"
)
;
result
=
await
secondThreadFront
.
resume
(
)
;
Assert
.
ok
(
true
"
resumed
as
expected
"
)
;
await
firstThreadFront
.
resume
(
)
;
Assert
.
ok
(
true
"
resumed
as
expected
"
)
;
await
firstClient
.
close
(
)
;
await
finishClient
(
secondClient
)
;
}
)
;
