"
use
strict
"
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
debuggee
}
)
=
>
{
const
packet
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
evalCode
(
debuggee
)
threadFront
)
;
Assert
.
ok
(
!
!
packet
.
frame
)
;
Assert
.
ok
(
!
!
packet
.
frame
.
getActorByID
)
;
Assert
.
equal
(
packet
.
frame
.
displayName
"
stopMe
"
)
;
await
threadFront
.
resume
(
)
;
}
)
)
;
function
evalCode
(
debuggee
)
{
debuggee
.
eval
(
"
(
"
+
function
(
)
{
function
stopMe
(
)
{
debugger
;
}
stopMe
(
)
;
}
+
"
)
(
)
"
)
;
}
