"
use
strict
"
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
client
}
)
=
>
{
const
thread
=
client
.
_transport
.
_serverConnection
.
getActor
(
threadFront
.
actorID
)
;
test_nesting
(
thread
)
;
}
)
)
;
function
test_nesting
(
thread
)
{
let
currentStep
=
0
;
const
p
=
new
Promise
(
resolve
=
>
{
executeSoon
(
function
(
)
{
Assert
.
equal
(
+
+
currentStep
1
)
;
Assert
.
equal
(
thread
.
_nestedEventLoops
.
size
1
)
;
resolve
(
true
)
;
}
)
;
}
)
;
Assert
.
equal
(
thread
.
unsafeSynchronize
(
p
)
true
)
;
Assert
.
equal
(
+
+
currentStep
2
)
;
Assert
.
equal
(
thread
.
_nestedEventLoops
.
size
0
)
;
}
