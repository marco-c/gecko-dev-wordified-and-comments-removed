"
use
strict
"
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
debuggee
}
)
=
>
{
const
packet
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
debuggee
.
eval
(
function
foo
(
__proto__
)
{
debugger
;
}
foo
(
"
bar
"
)
)
threadFront
)
;
const
environment
=
await
packet
.
frame
.
getEnvironment
(
)
;
Assert
.
equal
(
environment
.
type
"
function
"
)
;
Assert
.
equal
(
structuredClone
(
environment
)
.
bindings
.
arguments
[
0
]
.
__proto__
.
value
"
bar
"
)
;
await
threadFront
.
resume
(
)
;
}
)
)
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
debuggee
}
)
=
>
{
const
packet
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
debuggee
.
eval
(
(
function
(
)
{
const
__proto__
=
"
foo
"
;
debugger
;
}
)
(
)
)
threadFront
)
;
const
environment
=
await
packet
.
frame
.
getEnvironment
(
)
;
Assert
.
equal
(
structuredClone
(
environment
)
.
bindings
.
variables
.
__proto__
.
value
"
foo
"
)
;
await
threadFront
.
resume
(
)
;
}
)
)
;
