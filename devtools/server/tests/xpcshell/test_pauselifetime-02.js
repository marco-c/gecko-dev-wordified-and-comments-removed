"
use
strict
"
;
add_task
(
threadFrontTest
(
async
(
{
threadFront
debuggee
client
}
)
=
>
{
const
packet
=
await
executeOnNextTickAndWaitForPause
(
(
)
=
>
evaluateTestCode
(
debuggee
)
threadFront
)
;
const
args
=
packet
.
frame
.
arguments
;
const
objActor
=
args
[
0
]
.
actor
;
Assert
.
equal
(
args
[
0
]
.
class
"
Object
"
)
;
Assert
.
ok
(
!
!
objActor
)
;
try
{
await
client
.
request
(
{
to
:
objActor
type
:
"
bogusRequest
"
}
)
;
ok
(
false
"
bogusRequest
should
throw
"
)
;
}
catch
(
e
)
{
ok
(
true
"
bogusRequest
thrown
"
)
;
Assert
.
equal
(
e
.
error
"
unrecognizedPacketType
"
)
;
}
await
threadFront
.
resume
(
)
;
try
{
await
client
.
request
(
{
to
:
objActor
type
:
"
bogusRequest
"
}
)
;
ok
(
false
"
bogusRequest
should
throw
"
)
;
}
catch
(
e
)
{
ok
(
true
"
bogusRequest
thrown
"
)
;
Assert
.
equal
(
e
.
error
"
noSuchActor
"
)
;
}
}
)
)
;
function
evaluateTestCode
(
debuggee
)
{
debuggee
.
eval
(
"
(
"
+
function
(
)
{
function
stopMe
(
obj
)
{
debugger
;
}
stopMe
(
{
foo
:
"
bar
"
}
)
;
}
+
"
)
(
)
"
)
;
}
