"
use
strict
"
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
event
-
emitter
"
)
;
const
Debugger
=
require
(
"
Debugger
"
)
;
const
{
reportException
}
=
require
(
"
devtools
/
shared
/
DevToolsUtils
"
)
;
module
.
exports
=
function
makeDebugger
(
{
findDebuggees
shouldAddNewGlobalAsDebuggee
}
)
{
const
dbg
=
new
Debugger
(
)
;
EventEmitter
.
decorate
(
dbg
)
;
dbg
.
allowUnobservedAsmJS
=
true
;
dbg
.
uncaughtExceptionHook
=
reportDebuggerHookException
;
dbg
.
onNewGlobalObject
=
function
(
global
)
{
if
(
shouldAddNewGlobalAsDebuggee
(
global
)
)
{
safeAddDebuggee
(
this
global
)
;
}
}
;
dbg
.
addDebuggees
=
function
(
)
{
for
(
let
global
of
findDebuggees
(
this
)
)
{
safeAddDebuggee
(
this
global
)
;
}
}
;
return
dbg
;
}
;
const
reportDebuggerHookException
=
e
=
>
reportException
(
"
Debugger
Hook
"
e
)
;
function
safeAddDebuggee
(
dbg
global
)
{
try
{
let
wrappedGlobal
=
dbg
.
addDebuggee
(
global
)
;
if
(
wrappedGlobal
)
{
dbg
.
emit
(
"
newGlobal
"
wrappedGlobal
)
;
}
}
catch
(
e
)
{
}
}
