"
use
strict
"
;
const
protocol
=
require
(
"
resource
:
/
/
devtools
/
shared
/
protocol
.
js
"
)
;
const
{
ActorClassWithSpec
Actor
}
=
protocol
;
const
{
actorBridgeWithSpec
}
=
require
(
"
resource
:
/
/
devtools
/
server
/
actors
/
common
.
js
"
)
;
const
{
perfSpec
}
=
require
(
"
resource
:
/
/
devtools
/
shared
/
specs
/
perf
.
js
"
)
;
const
{
ActorReadyGeckoProfilerInterface
}
=
require
(
"
resource
:
/
/
devtools
/
shared
/
performance
-
new
/
gecko
-
profiler
-
interface
.
js
"
)
;
function
_bridgeEvents
(
actor
names
)
{
for
(
const
name
of
names
)
{
actor
.
bridge
.
on
(
name
(
.
.
.
args
)
=
>
actor
.
emit
(
name
.
.
.
args
)
)
;
}
}
exports
.
PerfActor
=
ActorClassWithSpec
(
perfSpec
{
initialize
(
conn
targetActor
)
{
Actor
.
prototype
.
initialize
.
call
(
this
conn
)
;
this
.
bridge
=
new
ActorReadyGeckoProfilerInterface
(
)
;
_bridgeEvents
(
this
[
"
profiler
-
started
"
"
profiler
-
stopped
"
]
)
;
}
destroy
(
conn
)
{
Actor
.
prototype
.
destroy
.
call
(
this
conn
)
;
this
.
bridge
.
destroy
(
)
;
}
startProfiler
:
actorBridgeWithSpec
(
"
startProfiler
"
)
stopProfilerAndDiscardProfile
:
actorBridgeWithSpec
(
"
stopProfilerAndDiscardProfile
"
)
getSymbolTable
:
actorBridgeWithSpec
(
"
getSymbolTable
"
)
getProfileAndStopProfiler
:
actorBridgeWithSpec
(
"
getProfileAndStopProfiler
"
)
isActive
:
actorBridgeWithSpec
(
"
isActive
"
)
isSupportedPlatform
:
actorBridgeWithSpec
(
"
isSupportedPlatform
"
)
getSupportedFeatures
:
actorBridgeWithSpec
(
"
getSupportedFeatures
"
)
}
)
;
