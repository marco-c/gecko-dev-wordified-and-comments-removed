"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
WatchedDataHelpers
"
]
;
const
SUPPORTED_DATA
=
{
TARGETS
:
"
targets
"
RESOURCES
:
"
resources
"
}
;
const
WatchedDataHelpers
=
{
SUPPORTED_DATA
addWatchedDataEntry
(
watchedData
type
entries
)
{
for
(
const
entry
of
entries
)
{
if
(
watchedData
[
type
]
.
includes
(
entry
)
)
{
throw
new
Error
(
'
{
type
}
:
{
entry
}
already
exists
)
;
}
}
for
(
const
entry
of
entries
)
{
watchedData
[
type
]
.
push
(
entry
)
;
}
}
removeWatchedDataEntry
(
watchedData
type
entries
)
{
let
includesAtLeastOne
=
false
;
for
(
const
entry
of
entries
)
{
const
idx
=
watchedData
[
type
]
.
indexOf
(
entry
)
;
if
(
idx
!
=
=
-
1
)
{
watchedData
[
type
]
.
splice
(
idx
1
)
;
includesAtLeastOne
=
true
;
}
}
return
includesAtLeastOne
;
}
}
;
