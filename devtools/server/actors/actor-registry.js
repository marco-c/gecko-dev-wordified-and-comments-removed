"
use
strict
"
;
const
protocol
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
const
{
registerActor
unregisterActor
}
=
require
(
"
devtools
/
server
/
actors
/
utils
/
actor
-
registry
-
utils
"
)
;
const
{
actorActorSpec
actorRegistrySpec
}
=
require
(
"
devtools
/
shared
/
specs
/
actor
-
registry
"
)
;
const
ActorActor
=
protocol
.
ActorClassWithSpec
(
actorActorSpec
{
initialize
:
function
(
conn
options
)
{
protocol
.
Actor
.
prototype
.
initialize
.
call
(
this
conn
)
;
this
.
options
=
options
;
}
unregister
:
function
(
)
{
unregisterActor
(
this
.
options
)
;
}
}
)
;
const
ActorRegistryActor
=
protocol
.
ActorClassWithSpec
(
actorRegistrySpec
{
initialize
:
function
(
conn
)
{
protocol
.
Actor
.
prototype
.
initialize
.
call
(
this
conn
)
;
}
registerActor
:
function
(
sourceText
fileName
options
)
{
return
registerActor
(
sourceText
fileName
options
)
.
then
(
(
)
=
>
{
const
{
constructor
type
}
=
options
;
return
ActorActor
(
this
.
conn
{
name
:
constructor
tab
:
type
.
tab
global
:
type
.
global
}
)
;
}
)
;
}
}
)
;
exports
.
ActorRegistryActor
=
ActorRegistryActor
;
