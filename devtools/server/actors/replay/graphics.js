"
use
strict
"
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
CC
=
Components
.
Constructor
;
const
sandbox
=
Cu
.
Sandbox
(
CC
(
"
mozilla
.
org
/
systemprincipal
;
1
"
"
nsIPrincipal
"
)
(
)
)
;
Cu
.
evalInSandbox
(
"
Components
.
utils
.
import
(
'
resource
:
/
/
gre
/
modules
/
jsdebugger
.
jsm
'
)
;
"
+
"
addDebuggerToGlobal
(
this
)
;
"
sandbox
)
;
function
setupContents
(
window
)
{
const
canvas
=
(
window
.
middlemanCanvas
=
window
.
document
.
createElement
(
"
canvas
"
)
)
;
canvas
.
style
.
position
=
"
absolute
"
;
window
.
document
.
body
.
style
.
margin
=
"
0px
"
;
window
.
document
.
body
.
prepend
(
canvas
)
;
}
function
getCanvas
(
window
)
{
if
(
!
window
.
middlemanCanvas
)
{
setupContents
(
window
)
;
}
return
window
.
middlemanCanvas
;
}
function
updateWindowCanvas
(
window
buffer
width
height
)
{
const
canvas
=
getCanvas
(
window
)
;
canvas
.
width
=
width
;
canvas
.
height
=
height
;
const
scale
=
window
.
devicePixelRatio
;
if
(
scale
!
=
1
)
{
canvas
.
style
.
transform
=
scale
(
{
1
/
scale
}
)
translate
(
-
{
width
/
scale
}
px
-
{
height
/
scale
}
px
)
;
}
const
cx
=
canvas
.
getContext
(
"
2d
"
)
;
const
graphicsData
=
new
Uint8Array
(
buffer
)
;
const
imageData
=
cx
.
getImageData
(
0
0
width
height
)
;
imageData
.
data
.
set
(
graphicsData
)
;
cx
.
putImageData
(
imageData
0
0
)
;
}
function
clearWindowCanvas
(
window
)
{
const
canvas
=
getCanvas
(
window
)
;
const
cx
=
canvas
.
getContext
(
"
2d
"
)
;
cx
.
clearRect
(
0
0
canvas
.
width
canvas
.
height
)
;
}
function
UpdateCanvas
(
buffer
width
height
)
{
try
{
for
(
const
window
of
Services
.
ww
.
getWindowEnumerator
(
)
)
{
updateWindowCanvas
(
window
buffer
width
height
)
;
}
}
catch
(
e
)
{
dump
(
Middleman
Graphics
UpdateCanvas
Exception
:
{
e
}
\
n
)
;
}
}
function
ClearCanvas
(
)
{
try
{
for
(
const
window
of
Services
.
ww
.
getWindowEnumerator
(
)
)
{
clearWindowCanvas
(
window
)
;
}
}
catch
(
e
)
{
dump
(
Middleman
Graphics
ClearCanvas
Exception
:
{
e
}
\
n
)
;
}
}
var
EXPORTED_SYMBOLS
=
[
"
UpdateCanvas
"
"
ClearCanvas
"
]
;
