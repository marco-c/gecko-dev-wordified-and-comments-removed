"
use
strict
"
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
function
updateWindow
(
window
buffer
width
height
)
{
let
canvas
=
window
.
middlemanCanvas
;
if
(
!
canvas
)
{
canvas
=
window
.
document
.
createElement
(
"
canvas
"
)
;
window
.
document
.
body
.
style
.
margin
=
"
0px
"
;
window
.
document
.
body
.
insertBefore
(
canvas
window
.
document
.
body
.
firstChild
)
;
window
.
middlemanCanvas
=
canvas
;
}
canvas
.
width
=
width
;
canvas
.
height
=
height
;
const
scale
=
window
.
devicePixelRatio
;
if
(
scale
!
=
1
)
{
canvas
.
style
.
transform
=
scale
(
{
1
/
scale
}
)
translate
(
-
{
width
/
scale
}
px
-
{
height
/
scale
}
px
)
;
}
const
graphicsData
=
new
Uint8Array
(
buffer
)
;
const
imageData
=
canvas
.
getContext
(
"
2d
"
)
.
getImageData
(
0
0
width
height
)
;
imageData
.
data
.
set
(
graphicsData
)
;
canvas
.
getContext
(
"
2d
"
)
.
putImageData
(
imageData
0
0
)
;
window
.
document
.
title
=
"
RECORD
/
REPLAY
"
;
}
function
Update
(
buffer
width
height
)
{
try
{
const
windowEnumerator
=
Services
.
ww
.
getWindowEnumerator
(
)
;
while
(
windowEnumerator
.
hasMoreElements
(
)
)
{
const
window
=
windowEnumerator
.
getNext
(
)
.
QueryInterface
(
Ci
.
nsIDOMWindow
)
;
updateWindow
(
window
buffer
width
height
)
;
}
}
catch
(
e
)
{
dump
(
"
Middleman
Graphics
Update
Exception
:
"
+
e
+
"
\
n
"
)
;
}
}
var
EXPORTED_SYMBOLS
=
[
"
Update
"
]
;
