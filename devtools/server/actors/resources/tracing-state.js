"
use
strict
"
;
const
{
TYPES
:
{
TRACING_STATE
}
}
=
require
(
"
resource
:
/
/
devtools
/
server
/
actors
/
resources
/
index
.
js
"
)
;
const
{
addTracingListener
removeTracingListener
}
=
require
(
"
resource
:
/
/
devtools
/
server
/
tracer
/
tracer
.
jsm
"
)
;
class
TracingStateWatcher
{
async
watch
(
targetActor
{
onAvailable
}
)
{
this
.
targetActor
=
targetActor
;
this
.
onAvailable
=
onAvailable
;
this
.
tracingListener
=
{
onTracingToggled
:
this
.
onTracingToggled
.
bind
(
this
)
}
;
addTracingListener
(
this
.
tracingListener
)
;
}
destroy
(
)
{
removeTracingListener
(
this
.
tracingListener
)
;
}
onTracingToggled
(
enabled
)
{
const
tracerActor
=
this
.
targetActor
.
getTargetScopedActor
(
"
tracer
"
)
;
const
logMethod
=
tracerActor
?
.
getLogMethod
(
)
|
"
stdout
"
;
this
.
onAvailable
(
[
{
resourceType
:
TRACING_STATE
enabled
logMethod
}
]
)
;
}
}
module
.
exports
=
TracingStateWatcher
;
