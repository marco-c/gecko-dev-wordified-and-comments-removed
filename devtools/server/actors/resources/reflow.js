"
use
strict
"
;
const
{
TYPES
:
{
REFLOW
}
}
=
require
(
"
resource
:
/
/
devtools
/
server
/
actors
/
resources
/
index
.
js
"
)
;
const
Targets
=
require
(
"
resource
:
/
/
devtools
/
server
/
actors
/
targets
/
index
.
js
"
)
;
const
{
getLayoutChangesObserver
releaseLayoutChangesObserver
}
=
require
(
"
resource
:
/
/
devtools
/
server
/
actors
/
reflow
.
js
"
)
;
class
ReflowWatcher
{
async
watch
(
targetActor
{
onAvailable
}
)
{
if
(
targetActor
.
targetType
!
=
=
Targets
.
TYPES
.
FRAME
|
|
targetActor
.
typeName
=
=
=
"
parentProcessTarget
"
)
{
return
;
}
this
.
_targetActor
=
targetActor
;
const
onReflows
=
reflows
=
>
{
onAvailable
(
[
{
resourceType
:
REFLOW
reflows
}
]
)
;
}
;
this
.
_observer
=
getLayoutChangesObserver
(
targetActor
)
;
this
.
_offReflows
=
this
.
_observer
.
on
(
"
reflows
"
onReflows
)
;
this
.
_observer
.
start
(
)
;
}
destroy
(
)
{
releaseLayoutChangesObserver
(
this
.
_targetActor
)
;
if
(
this
.
_offReflows
)
{
this
.
_offReflows
(
)
;
this
.
_offReflows
=
null
;
}
}
}
module
.
exports
=
ReflowWatcher
;
