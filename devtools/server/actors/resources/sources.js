"
use
strict
"
;
const
{
TYPES
:
{
SOURCE
}
}
=
require
(
"
devtools
/
server
/
actors
/
resources
/
index
"
)
;
class
SourceWatcher
{
constructor
(
)
{
this
.
onNewSource
=
this
.
onNewSource
.
bind
(
this
)
;
}
async
watch
(
targetActor
{
onAvailable
}
)
{
targetActor
.
attach
(
)
;
const
{
threadActor
}
=
targetActor
;
this
.
threadActor
=
threadActor
;
this
.
onAvailable
=
onAvailable
;
threadActor
.
disableNewSourceEvents
(
)
;
threadActor
.
sourcesManager
.
on
(
"
newSource
"
this
.
onNewSource
)
;
onAvailable
(
threadActor
.
sourcesManager
.
iter
(
)
.
map
(
s
=
>
{
const
resource
=
s
.
form
(
)
;
resource
.
resourceType
=
SOURCE
;
return
resource
;
}
)
)
;
threadActor
.
addAllSources
(
)
;
}
destroy
(
)
{
this
.
threadActor
.
sourcesManager
.
off
(
"
newSource
"
this
.
onNewSource
)
;
}
onNewSource
(
source
)
{
const
resource
=
source
.
form
(
)
;
resource
.
resourceType
=
SOURCE
;
this
.
onAvailable
(
[
resource
]
)
;
}
}
module
.
exports
=
SourceWatcher
;
