"
use
strict
"
;
const
{
Actor
ActorClassWithSpec
}
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
const
performanceSpec
=
require
(
"
devtools
/
shared
/
specs
/
performance
-
entries
"
)
;
var
PerformanceEntriesActor
=
ActorClassWithSpec
(
performanceSpec
{
listenerAdded
:
false
initialize
:
function
(
conn
tabActor
)
{
Actor
.
prototype
.
initialize
.
call
(
this
conn
)
;
this
.
window
=
tabActor
.
window
;
}
start
:
function
(
)
{
if
(
!
this
.
listenerAdded
)
{
this
.
onPerformanceEntry
=
this
.
onPerformanceEntry
.
bind
(
this
)
;
this
.
window
.
addEventListener
(
"
performanceentry
"
this
.
onPerformanceEntry
true
)
;
this
.
listenerAdded
=
true
;
}
}
stop
:
function
(
)
{
if
(
this
.
listenerAdded
)
{
this
.
window
.
removeEventListener
(
"
performanceentry
"
this
.
onPerformanceEntry
true
)
;
this
.
listenerAdded
=
false
;
}
}
destroy
:
function
(
)
{
this
.
stop
(
)
;
Actor
.
prototype
.
destroy
.
call
(
this
)
;
}
onPerformanceEntry
:
function
(
e
)
{
let
emitDetail
=
{
type
:
e
.
entryType
name
:
e
.
name
origin
:
e
.
origin
epoch
:
e
.
epoch
}
;
this
.
emit
(
"
entry
"
emitDetail
)
;
}
}
)
;
exports
.
PerformanceEntriesActor
=
PerformanceEntriesActor
;
