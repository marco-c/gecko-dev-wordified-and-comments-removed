"
use
strict
"
;
const
{
Ci
}
=
require
(
"
chrome
"
)
;
const
Services
=
require
(
"
Services
"
)
;
const
{
XPCOMUtils
}
=
require
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
{
Actor
ActorClass
}
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
const
events
=
require
(
"
sdk
/
event
/
core
"
)
;
const
{
eventLoopLagSpec
}
=
require
(
"
devtools
/
shared
/
specs
/
eventlooplag
"
)
;
var
EventLoopLagActor
=
exports
.
EventLoopLagActor
=
ActorClass
(
eventLoopLagSpec
{
_observerAdded
:
false
start
:
function
(
)
{
if
(
!
this
.
_observerAdded
)
{
Services
.
obs
.
addObserver
(
this
"
event
-
loop
-
lag
"
false
)
;
this
.
_observerAdded
=
true
;
}
return
Services
.
appShell
.
startEventLoopLagTracking
(
)
;
}
stop
:
function
(
)
{
if
(
this
.
_observerAdded
)
{
Services
.
obs
.
removeObserver
(
this
"
event
-
loop
-
lag
"
)
;
this
.
_observerAdded
=
false
;
}
Services
.
appShell
.
stopEventLoopLagTracking
(
)
;
}
destroy
:
function
(
)
{
this
.
stop
(
)
;
Actor
.
prototype
.
destroy
.
call
(
this
)
;
}
observe
:
function
(
subject
topic
data
)
{
if
(
topic
=
=
"
event
-
loop
-
lag
"
)
{
events
.
emit
(
this
"
event
-
loop
-
lag
"
data
)
;
}
}
QueryInterface
:
XPCOMUtils
.
generateQI
(
[
Ci
.
nsIObserver
]
)
}
)
;
