"
use
strict
"
;
const
{
Actor
ActorClassWithSpec
}
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
const
{
actorBridgeWithSpec
}
=
require
(
"
devtools
/
server
/
actors
/
common
"
)
;
const
{
on
once
off
emit
}
=
require
(
"
sdk
/
event
/
core
"
)
;
const
{
Framerate
}
=
require
(
"
devtools
/
server
/
performance
/
framerate
"
)
;
const
{
framerateSpec
}
=
require
(
"
devtools
/
shared
/
specs
/
framerate
"
)
;
var
FramerateActor
=
exports
.
FramerateActor
=
ActorClassWithSpec
(
framerateSpec
{
initialize
:
function
(
conn
tabActor
)
{
Actor
.
prototype
.
initialize
.
call
(
this
conn
)
;
this
.
bridge
=
new
Framerate
(
tabActor
)
;
}
destroy
:
function
(
conn
)
{
Actor
.
prototype
.
destroy
.
call
(
this
conn
)
;
this
.
bridge
.
destroy
(
)
;
}
startRecording
:
actorBridgeWithSpec
(
"
startRecording
"
)
stopRecording
:
actorBridgeWithSpec
(
"
stopRecording
"
)
cancelRecording
:
actorBridgeWithSpec
(
"
cancelRecording
"
)
isRecording
:
actorBridgeWithSpec
(
"
isRecording
"
)
getPendingTicks
:
actorBridgeWithSpec
(
"
getPendingTicks
"
)
}
)
;
