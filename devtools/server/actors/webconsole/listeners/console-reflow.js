"
use
strict
"
;
const
{
components
}
=
require
(
"
chrome
"
)
;
const
ChromeUtils
=
require
(
"
ChromeUtils
"
)
;
function
ConsoleReflowListener
(
window
listener
)
{
this
.
docshell
=
window
.
docShell
;
this
.
listener
=
listener
;
this
.
docshell
.
addWeakReflowObserver
(
this
)
;
}
exports
.
ConsoleReflowListener
=
ConsoleReflowListener
;
ConsoleReflowListener
.
prototype
=
{
QueryInterface
:
ChromeUtils
.
generateQI
(
[
"
nsIReflowObserver
"
"
nsISupportsWeakReference
"
]
)
docshell
:
null
listener
:
null
sendReflow
:
function
(
start
end
interruptible
)
{
const
frame
=
components
.
stack
.
caller
.
caller
;
let
filename
=
frame
?
frame
.
filename
:
null
;
if
(
filename
)
{
filename
=
filename
.
split
(
"
"
)
.
pop
(
)
;
}
this
.
listener
.
onReflowActivity
(
{
interruptible
:
interruptible
start
:
start
end
:
end
sourceURL
:
filename
sourceLine
:
frame
?
frame
.
lineNumber
:
null
functionName
:
frame
?
frame
.
name
:
null
}
)
;
}
reflow
:
function
(
start
end
)
{
this
.
sendReflow
(
start
end
false
)
;
}
reflowInterruptible
:
function
(
start
end
)
{
this
.
sendReflow
(
start
end
true
)
;
}
destroy
:
function
(
)
{
this
.
docshell
.
removeWeakReflowObserver
(
this
)
;
this
.
listener
=
this
.
docshell
=
null
;
}
}
;
