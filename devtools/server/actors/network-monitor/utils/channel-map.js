"
use
strict
"
;
class
ChannelMap
{
constructor
(
)
{
this
.
weakMap
=
new
WeakMap
(
)
;
this
.
refSet
=
new
Set
(
)
;
this
.
finalizationGroup
=
new
FinalizationRegistry
(
ChannelMap
.
cleanup
)
;
}
static
cleanup
(
{
set
ref
}
)
{
set
.
delete
(
ref
)
;
}
set
(
channel
value
)
{
const
ref
=
new
WeakRef
(
channel
)
;
this
.
weakMap
.
set
(
channel
{
value
ref
}
)
;
this
.
refSet
.
add
(
ref
)
;
this
.
finalizationGroup
.
register
(
channel
{
set
:
this
.
refSet
ref
}
ref
)
;
}
getChannelById
(
channelId
)
{
for
(
const
ref
of
this
.
refSet
)
{
const
key
=
ref
.
deref
(
)
;
if
(
!
key
)
{
continue
;
}
const
{
value
}
=
this
.
weakMap
.
get
(
key
)
;
if
(
value
.
channel
.
channelId
=
=
=
channelId
)
{
return
value
;
}
}
return
null
;
}
delete
(
channel
)
{
const
entry
=
this
.
weakMap
.
get
(
channel
)
;
if
(
!
entry
)
{
return
false
;
}
this
.
weakMap
.
delete
(
channel
)
;
this
.
refSet
.
delete
(
entry
.
ref
)
;
this
.
finalizationGroup
.
unregister
(
entry
.
ref
)
;
return
true
;
}
}
exports
.
ChannelMap
=
ChannelMap
;
