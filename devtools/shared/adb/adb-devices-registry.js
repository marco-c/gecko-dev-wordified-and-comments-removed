"
use
strict
"
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
event
-
emitter
"
)
;
const
{
adbAddon
ADB_ADDON_STATES
}
=
require
(
"
devtools
/
shared
/
adb
/
adb
-
addon
"
)
;
class
AdbDevicesRegistry
extends
EventEmitter
{
constructor
(
)
{
super
(
)
;
this
.
_devices
=
{
}
;
this
.
_onAdbAddonUpdate
=
this
.
_onAdbAddonUpdate
.
bind
(
this
)
;
adbAddon
.
on
(
"
update
"
this
.
_onAdbAddonUpdate
)
;
}
register
(
name
device
)
{
this
.
_devices
[
name
]
=
device
;
this
.
emit
(
"
register
"
)
;
}
unregister
(
name
)
{
delete
this
.
_devices
[
name
]
;
this
.
emit
(
"
unregister
"
)
;
}
available
(
)
{
return
Object
.
keys
(
this
.
_devices
)
.
sort
(
)
;
}
getByName
(
name
)
{
return
this
.
_devices
[
name
]
;
}
_onAdbAddonUpdate
(
)
{
const
installed
=
adbAddon
.
status
=
=
=
ADB_ADDON_STATES
.
INSTALLED
;
if
(
!
installed
)
{
for
(
const
name
in
this
.
_devices
)
{
this
.
unregister
(
name
)
;
}
}
}
}
exports
.
adbDevicesRegistry
=
new
AdbDevicesRegistry
(
)
;
