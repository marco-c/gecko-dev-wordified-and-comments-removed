"
use
strict
"
;
const
{
DevToolsLoader
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
devtools
/
shared
/
Loader
.
jsm
"
)
;
const
loader
=
new
DevToolsLoader
(
)
;
loader
.
invisibleToDebugger
=
true
;
loader
.
freshCompartment
=
true
;
const
{
allocationTracker
}
=
loader
.
require
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
devtools
/
shared
/
test
-
helpers
/
allocation
-
tracker
"
)
;
add_task
(
async
function
(
)
{
const
global
=
Cu
.
Sandbox
(
"
http
:
/
/
example
.
com
"
)
;
const
tracker
=
allocationTracker
(
{
watchGlobal
:
global
}
)
;
const
before
=
tracker
.
stillAllocatedObjects
(
)
;
Cu
.
evalInSandbox
(
"
let
list
;
new
"
+
function
(
)
{
list
=
[
]
;
for
(
let
i
=
0
;
i
<
1000
;
i
+
+
)
{
list
.
push
(
{
}
)
;
}
}
global
undefined
"
test
-
file
.
js
"
1
)
;
const
allocations
=
tracker
.
countAllocations
(
)
;
ok
(
allocations
>
1000
At
least
1000
objects
are
reported
as
created
(
{
allocations
}
)
)
;
const
afterCreation
=
tracker
.
stillAllocatedObjects
(
)
;
ok
(
afterCreation
-
before
>
1000
At
least
1000
more
objects
are
reported
still
allocated
(
{
before
}
+
+
{
afterCreation
-
before
}
-
>
{
afterCreation
}
)
)
;
Cu
.
evalInSandbox
(
"
list
=
null
;
"
global
undefined
"
test
-
file
.
js
"
7
)
;
Cu
.
forceGC
(
)
;
Cu
.
forceCC
(
)
;
const
afterGC
=
tracker
.
stillAllocatedObjects
(
)
;
ok
(
afterCreation
-
afterGC
>
1000
At
least
1000
less
objects
are
reported
still
allocated
(
{
afterCreation
}
+
-
(
{
afterGC
-
afterCreation
}
)
-
>
{
afterGC
}
)
)
;
tracker
.
stop
(
)
;
}
)
;
