"
use
strict
"
;
const
{
traceAllJSCalls
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
devtools
/
shared
/
test
-
helpers
/
thread
-
helpers
.
sys
.
mjs
"
)
;
const
{
setTimeout
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
Timer
.
sys
.
mjs
"
)
;
add_task
(
async
function
sanityCheck
(
)
{
let
ranTheOtherEventLoop
=
false
;
setTimeout
(
function
otherEventLoop
(
)
{
ranTheOtherEventLoop
=
true
;
}
0
)
;
const
jsTracer
=
traceAllJSCalls
(
)
;
function
foo
(
)
{
}
for
(
let
i
=
0
;
i
<
10
;
i
+
+
)
{
foo
(
)
;
}
jsTracer
.
stop
(
)
;
ok
(
!
ranTheOtherEventLoop
"
When
we
don
'
t
pause
frame
execution
the
other
event
do
not
execute
"
)
;
}
)
;
add_task
(
async
function
withPrefix
(
)
{
const
jsTracer
=
traceAllJSCalls
(
{
prefix
:
"
my
-
prefix
"
}
)
;
function
foo
(
)
{
}
for
(
let
i
=
0
;
i
<
10
;
i
+
+
)
{
foo
(
)
;
}
jsTracer
.
stop
(
)
;
ok
(
true
"
Were
able
to
run
with
a
prefix
argument
"
)
;
}
)
;
add_task
(
async
function
pause
(
)
{
const
start
=
Cu
.
now
(
)
;
let
ranTheOtherEventLoop
=
false
;
setTimeout
(
function
otherEventLoop
(
)
{
ranTheOtherEventLoop
=
true
;
}
0
)
;
const
jsTracer
=
traceAllJSCalls
(
{
pause
:
100
}
)
;
function
foo
(
)
{
}
for
(
let
i
=
0
;
i
<
10
;
i
+
+
)
{
foo
(
)
;
}
jsTracer
.
stop
(
)
;
const
duration
=
Cu
.
now
(
)
-
start
;
ok
(
duration
>
10
*
100
"
The
execution
of
the
for
loop
was
slow
down
by
at
least
the
pause
duration
in
each
loop
"
)
;
ok
(
ranTheOtherEventLoop
"
When
we
pause
frame
execution
the
other
event
can
execute
"
)
;
}
)
;
