"
use
strict
"
;
const
{
require
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
devtools
/
shared
/
Loader
.
jsm
"
{
}
)
;
Object
.
defineProperty
(
this
"
NetworkHelper
"
{
get
:
function
(
)
{
return
require
(
"
devtools
/
shared
/
webconsole
/
network
-
helper
"
)
;
}
configurable
:
true
writeable
:
false
enumerable
:
true
}
)
;
function
run_test
(
)
{
test_isTextMimeType
(
)
;
}
function
test_isTextMimeType
(
)
{
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
text
/
plain
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
javascript
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
json
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
text
/
css
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
text
/
html
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
image
/
svg
+
xml
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
xml
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
vnd
.
tent
.
posts
-
feed
.
v0
+
json
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
vnd
.
tent
.
posts
-
feed
.
v0
-
json
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
vnd
.
tent
.
posts
-
feed
.
v0
+
xml
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
vnd
.
tent
.
posts
-
feed
.
v0
-
xml
"
)
false
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
vnd
.
BIG
-
CORP
+
json
"
)
true
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
image
/
png
"
)
false
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
foo
-
+
json
"
)
false
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
-
foo
+
json
"
)
false
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
foo
-
-
bar
+
json
"
)
false
)
;
Assert
.
equal
(
NetworkHelper
.
isTextMimeType
(
"
application
/
vnd
.
google
.
safebrowsing
-
chunk
"
)
false
)
;
}
