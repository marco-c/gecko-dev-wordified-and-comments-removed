"
use
strict
"
;
const
{
require
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
devtools
/
shared
/
Loader
.
jsm
"
{
}
)
;
const
Services
=
require
(
"
Services
"
)
;
Object
.
defineProperty
(
this
"
NetworkHelper
"
{
get
:
function
(
)
{
return
require
(
"
devtools
/
shared
/
webconsole
/
network
-
helper
"
)
;
}
configurable
:
true
writeable
:
false
enumerable
:
true
}
)
;
const
wpl
=
Ci
.
nsIWebProgressListener
;
const
MockSecurityInfo
=
{
QueryInterface
:
ChromeUtils
.
generateQI
(
[
Ci
.
nsITransportSecurityInfo
]
)
securityState
:
wpl
.
STATE_IS_SECURE
errorCode
:
0
cipherName
:
"
TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
"
protocolVersion
:
3
serverCert
:
{
validity
:
{
}
}
}
;
const
MockHttpInfo
=
{
hostname
:
"
include
-
subdomains
.
pinning
.
example
.
com
"
private
:
false
}
;
function
run_test
(
)
{
Services
.
prefs
.
setIntPref
(
"
security
.
cert_pinning
.
enforcement_level
"
1
)
;
const
result
=
NetworkHelper
.
parseSecurityInfo
(
MockSecurityInfo
MockHttpInfo
)
;
equal
(
result
.
hpkp
true
"
Static
HPKP
detected
.
"
)
;
}
