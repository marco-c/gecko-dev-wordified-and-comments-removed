"
use
strict
"
;
class
ScriptCommand
{
constructor
(
{
commands
}
)
{
this
.
_commands
=
commands
;
}
async
execute
(
expression
options
=
{
}
)
{
const
{
selectedObjectActor
selectedNodeActor
frameActor
selectedTargetFront
}
=
options
;
let
targetFront
=
this
.
_commands
.
targetCommand
.
targetFront
;
const
selectedActor
=
selectedObjectActor
|
|
selectedNodeActor
|
|
frameActor
;
if
(
selectedTargetFront
)
{
targetFront
=
selectedTargetFront
;
}
else
if
(
selectedActor
)
{
const
selectedFront
=
this
.
_commands
.
client
.
getFrontByID
(
selectedActor
)
;
if
(
selectedFront
)
{
targetFront
=
selectedFront
.
targetFront
;
}
}
const
front
=
await
targetFront
.
getFront
(
"
console
"
)
;
return
front
.
evaluateJSAsync
(
expression
options
)
;
}
}
module
.
exports
=
ScriptCommand
;
