"
use
strict
"
;
class
ResponsiveCommand
{
constructor
(
{
commands
}
)
{
this
.
#
commands
=
commands
;
}
#
commands
=
null
;
async
getAllResponsiveFronts
(
)
{
return
this
.
#
commands
.
targetCommand
.
getAllFronts
(
[
this
.
#
commands
.
targetCommand
.
TYPES
.
FRAME
]
"
responsive
"
)
;
}
async
setElementPickerState
(
state
pickerType
)
{
const
fronts
=
await
this
.
getAllResponsiveFronts
(
)
;
await
Promise
.
all
(
fronts
.
map
(
async
front
=
>
{
try
{
await
front
.
setElementPickerState
(
state
pickerType
)
;
}
catch
(
e
)
{
if
(
front
.
isDestroyed
(
)
)
{
return
;
}
throw
e
;
}
}
)
)
;
}
}
module
.
exports
=
ResponsiveCommand
;
