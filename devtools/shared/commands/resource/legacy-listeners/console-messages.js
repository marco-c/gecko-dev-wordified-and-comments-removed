"
use
strict
"
;
const
ResourceCommand
=
require
(
"
resource
:
/
/
devtools
/
shared
/
commands
/
resource
/
resource
-
command
.
js
"
)
;
module
.
exports
=
async
function
(
{
targetCommand
targetFront
onAvailableArray
}
)
{
const
listenForFrames
=
targetCommand
.
descriptorFront
.
isTabDescriptor
;
const
listenForWorkers
=
!
targetCommand
.
rootFront
.
traits
.
workerConsoleApiMessagesDispatchedToMainThread
;
const
acceptTarget
=
targetFront
.
isTopLevel
|
|
targetFront
.
targetType
=
=
=
targetCommand
.
TYPES
.
PROCESS
|
|
(
targetFront
.
targetType
=
=
=
targetCommand
.
TYPES
.
FRAME
&
&
listenForFrames
)
|
|
(
targetFront
.
targetType
=
=
=
targetCommand
.
TYPES
.
WORKER
&
&
listenForWorkers
)
;
if
(
!
acceptTarget
)
{
return
;
}
const
webConsoleFront
=
await
targetFront
.
getFront
(
"
console
"
)
;
if
(
webConsoleFront
.
isDestroyed
(
)
)
{
return
;
}
await
webConsoleFront
.
startListeners
(
[
"
ConsoleAPI
"
]
)
;
const
{
messages
}
=
await
webConsoleFront
.
getCachedMessages
(
[
"
ConsoleAPI
"
]
)
;
onAvailableArray
(
[
[
ResourceCommand
.
TYPES
.
CONSOLE_MESSAGE
messages
]
]
)
;
webConsoleFront
.
on
(
"
consoleAPICall
"
message
=
>
{
if
(
message
.
clonedFromContentProcess
)
{
return
;
}
onAvailableArray
(
[
[
ResourceCommand
.
TYPES
.
CONSOLE_MESSAGE
[
message
]
]
]
)
;
}
)
;
}
;
