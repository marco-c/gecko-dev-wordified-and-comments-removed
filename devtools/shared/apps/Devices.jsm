"
use
strict
"
;
const
{
require
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
devtools
/
shared
/
Loader
.
jsm
"
{
}
)
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
event
-
emitter
"
)
;
const
EXPORTED_SYMBOLS
=
[
"
Devices
"
]
;
var
addonInstalled
=
false
;
const
Devices
=
{
_devices
:
{
}
get
adbExtensionInstalled
(
)
{
return
addonInstalled
;
}
set
adbExtensionInstalled
(
v
)
{
addonInstalled
=
v
;
if
(
!
addonInstalled
)
{
for
(
const
name
in
this
.
_devices
)
{
this
.
unregister
(
name
)
;
}
}
this
.
emit
(
"
addon
-
status
-
updated
"
v
)
;
}
register
:
function
(
name
device
)
{
this
.
_devices
[
name
]
=
device
;
this
.
emit
(
"
register
"
)
;
}
unregister
:
function
(
name
)
{
delete
this
.
_devices
[
name
]
;
this
.
emit
(
"
unregister
"
)
;
}
available
:
function
(
)
{
return
Object
.
keys
(
this
.
_devices
)
.
sort
(
)
;
}
getByName
:
function
(
name
)
{
return
this
.
_devices
[
name
]
;
}
}
;
Object
.
defineProperty
(
this
"
Devices
"
{
value
:
Devices
enumerable
:
true
writable
:
false
}
)
;
EventEmitter
.
decorate
(
Devices
)
;
