"
use
strict
"
;
const
{
utils
:
Cu
}
=
Components
;
const
{
require
}
=
Cu
.
import
(
"
resource
:
/
/
devtools
/
shared
/
Loader
.
jsm
"
{
}
)
;
const
{
SimulatorCore
}
=
require
(
"
devtools
/
shared
/
touch
/
simulator
-
core
"
)
;
var
simulator
=
{
messages
:
[
"
TouchEventSimulator
:
Start
"
"
TouchEventSimulator
:
Stop
"
]
init
(
)
{
this
.
simulatorCore
=
new
SimulatorCore
(
docShell
.
chromeEventHandler
)
;
this
.
messages
.
forEach
(
msgName
=
>
{
addMessageListener
(
msgName
this
)
;
}
)
;
}
receiveMessage
(
msg
)
{
switch
(
msg
.
name
)
{
case
"
TouchEventSimulator
:
Start
"
:
this
.
simulatorCore
.
start
(
)
;
sendAsyncMessage
(
"
TouchEventSimulator
:
Started
"
)
;
break
;
case
"
TouchEventSimulator
:
Stop
"
:
this
.
simulatorCore
.
stop
(
)
;
sendAsyncMessage
(
"
TouchEventSimulator
:
Stopped
"
)
;
break
;
}
}
}
;
simulator
.
init
(
)
;
