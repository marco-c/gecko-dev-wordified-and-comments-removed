"
use
strict
"
;
function
MainThreadWorkerDebuggerTransport
(
dbg
id
)
{
this
.
_dbg
=
dbg
;
this
.
_id
=
id
;
this
.
onMessage
=
this
.
_onMessage
.
bind
(
this
)
;
}
MainThreadWorkerDebuggerTransport
.
prototype
=
{
constructor
:
MainThreadWorkerDebuggerTransport
ready
:
function
(
)
{
this
.
_dbg
.
addListener
(
this
)
;
}
close
:
function
(
)
{
this
.
_dbg
.
removeListener
(
this
)
;
if
(
this
.
hooks
)
{
this
.
hooks
.
onClosed
(
)
;
}
}
send
:
function
(
packet
)
{
this
.
_dbg
.
postMessage
(
JSON
.
stringify
(
{
type
:
"
message
"
id
:
this
.
_id
message
:
packet
}
)
)
;
}
startBulkSend
:
function
(
)
{
throw
new
Error
(
"
Can
'
t
send
bulk
data
from
worker
threads
!
"
)
;
}
_onMessage
:
function
(
message
)
{
const
packet
=
JSON
.
parse
(
message
)
;
if
(
packet
.
type
!
=
=
"
message
"
|
|
packet
.
id
!
=
=
this
.
_id
)
{
return
;
}
if
(
this
.
hooks
)
{
this
.
hooks
.
onPacket
(
packet
.
message
)
;
}
}
}
;
exports
.
MainThreadWorkerDebuggerTransport
=
MainThreadWorkerDebuggerTransport
;
function
WorkerThreadWorkerDebuggerTransport
(
scope
id
)
{
this
.
_scope
=
scope
;
this
.
_id
=
id
;
this
.
_onMessage
=
this
.
_onMessage
.
bind
(
this
)
;
}
WorkerThreadWorkerDebuggerTransport
.
prototype
=
{
constructor
:
WorkerThreadWorkerDebuggerTransport
ready
:
function
(
)
{
this
.
_scope
.
addEventListener
(
"
message
"
this
.
_onMessage
)
;
}
close
:
function
(
)
{
this
.
_scope
.
removeEventListener
(
"
message
"
this
.
_onMessage
)
;
if
(
this
.
hooks
)
{
this
.
hooks
.
onClosed
(
)
;
}
}
send
:
function
(
packet
)
{
this
.
_scope
.
postMessage
(
JSON
.
stringify
(
{
type
:
"
message
"
id
:
this
.
_id
message
:
packet
}
)
)
;
}
startBulkSend
:
function
(
)
{
throw
new
Error
(
"
Can
'
t
send
bulk
data
from
worker
threads
!
"
)
;
}
_onMessage
:
function
(
event
)
{
const
packet
=
JSON
.
parse
(
event
.
data
)
;
if
(
packet
.
type
!
=
=
"
message
"
|
|
packet
.
id
!
=
=
this
.
_id
)
{
return
;
}
if
(
this
.
hooks
)
{
this
.
hooks
.
onPacket
(
packet
.
message
)
;
}
}
}
;
exports
.
WorkerThreadWorkerDebuggerTransport
=
WorkerThreadWorkerDebuggerTransport
;
