"
use
strict
"
;
const
{
FileUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
FileUtils
.
jsm
"
)
;
add_task
(
async
function
test_save_file
(
)
{
const
testText
=
"
This
is
a
text
"
;
const
fileName
=
"
test_console_save
-
file
-
"
+
Math
.
random
(
)
;
const
file
=
FileUtils
.
getFile
(
"
TmpD
"
[
fileName
]
)
;
info
(
"
Test
creating
temporary
file
:
"
+
file
.
path
)
;
await
DevToolsUtils
.
saveFileStream
(
file
convertToInputStream
(
testText
)
)
;
Assert
.
ok
(
file
.
exists
(
)
"
Checking
if
test
file
exists
"
)
;
const
{
content
}
=
await
DevToolsUtils
.
fetch
(
file
.
path
)
;
deepEqual
(
content
testText
"
The
content
was
correct
.
"
)
;
cleanup
(
fileName
)
;
}
)
;
function
convertToInputStream
(
content
)
{
const
converter
=
Cc
[
"
mozilla
.
org
/
intl
/
scriptableunicodeconverter
"
]
.
createInstance
(
Ci
.
nsIScriptableUnicodeConverter
)
;
converter
.
charset
=
"
UTF
-
8
"
;
return
converter
.
convertToInputStream
(
content
)
;
}
function
cleanup
(
fileName
)
{
const
file
=
FileUtils
.
getFile
(
"
TmpD
"
[
fileName
]
)
;
registerCleanupFunction
(
(
)
=
>
{
file
.
remove
(
false
)
;
}
)
;
}
