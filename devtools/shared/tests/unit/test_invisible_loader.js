"
use
strict
"
;
const
{
addDebuggerToGlobal
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
jsdebugger
.
jsm
"
{
}
)
;
addDebuggerToGlobal
(
this
)
;
function
run_test
(
)
{
visible_loader
(
)
;
invisible_loader
(
)
;
}
function
visible_loader
(
)
{
let
loader
=
new
DevToolsLoader
(
)
;
loader
.
invisibleToDebugger
=
false
;
loader
.
require
(
"
devtools
/
shared
/
indentation
"
)
;
let
dbg
=
new
Debugger
(
)
;
let
sandbox
=
loader
.
_provider
.
loader
.
sharedGlobalSandbox
;
try
{
dbg
.
addDebuggee
(
sandbox
)
;
Assert
.
ok
(
true
)
;
}
catch
(
e
)
{
do_throw
(
"
debugger
could
not
add
visible
value
"
)
;
}
const
promise
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Promise
.
jsm
"
{
}
)
.
Promise
;
Assert
.
equal
(
loader
.
require
(
"
promise
"
)
promise
)
;
}
function
invisible_loader
(
)
{
let
loader
=
new
DevToolsLoader
(
)
;
loader
.
invisibleToDebugger
=
true
;
loader
.
require
(
"
devtools
/
shared
/
indentation
"
)
;
let
dbg
=
new
Debugger
(
)
;
let
sandbox
=
loader
.
_provider
.
loader
.
sharedGlobalSandbox
;
try
{
dbg
.
addDebuggee
(
sandbox
)
;
do_throw
(
"
debugger
added
invisible
value
"
)
;
}
catch
(
e
)
{
Assert
.
ok
(
true
)
;
}
const
promise
=
loader
.
require
(
"
promise
"
)
;
const
promiseModule
=
loader
.
_provider
.
loader
.
modules
[
"
resource
:
/
/
gre
/
modules
/
Promise
-
backend
.
js
"
]
;
Assert
.
equal
(
promise
promiseModule
.
exports
)
;
}
