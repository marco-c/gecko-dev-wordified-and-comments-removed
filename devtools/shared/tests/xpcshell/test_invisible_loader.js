"
use
strict
"
;
const
{
addDebuggerToGlobal
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
jsdebugger
.
sys
.
mjs
"
)
;
addDebuggerToGlobal
(
globalThis
)
;
function
run_test
(
)
{
visible_loader
(
)
;
invisible_loader
(
)
;
distinct_system_principal_loader
(
)
;
}
function
visible_loader
(
)
{
const
loader
=
new
DevToolsLoader
(
{
invisibleToDebugger
:
false
}
)
;
loader
.
require
(
"
resource
:
/
/
devtools
/
shared
/
indentation
.
js
"
)
;
const
dbg
=
new
Debugger
(
)
;
const
sandbox
=
loader
.
loader
.
sharedGlobal
;
try
{
dbg
.
addDebuggee
(
sandbox
)
;
Assert
.
ok
(
true
)
;
}
catch
(
e
)
{
do_throw
(
"
debugger
could
not
add
visible
value
"
)
;
}
}
function
invisible_loader
(
)
{
const
loader
=
new
DevToolsLoader
(
{
invisibleToDebugger
:
true
}
)
;
loader
.
require
(
"
resource
:
/
/
devtools
/
shared
/
indentation
.
js
"
)
;
const
dbg
=
new
Debugger
(
)
;
const
sandbox
=
loader
.
loader
.
sharedGlobal
;
try
{
dbg
.
addDebuggee
(
sandbox
)
;
do_throw
(
"
debugger
added
invisible
value
"
)
;
}
catch
(
e
)
{
Assert
.
ok
(
true
)
;
}
}
function
distinct_system_principal_loader
(
)
{
const
{
useDistinctSystemPrincipalLoader
releaseDistinctSystemPrincipalLoader
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
devtools
/
shared
/
loader
/
DistinctSystemPrincipalLoader
.
sys
.
mjs
"
)
;
const
requester
=
{
}
;
const
loader
=
useDistinctSystemPrincipalLoader
(
requester
)
;
loader
.
require
(
"
resource
:
/
/
devtools
/
shared
/
indentation
.
js
"
)
;
const
dbg
=
new
Debugger
(
)
;
const
sandbox
=
loader
.
loader
.
sharedGlobal
;
try
{
dbg
.
addDebuggee
(
sandbox
)
;
do_throw
(
"
debugger
added
invisible
value
"
)
;
}
catch
(
e
)
{
Assert
.
ok
(
true
)
;
}
releaseDistinctSystemPrincipalLoader
(
requester
)
;
}
