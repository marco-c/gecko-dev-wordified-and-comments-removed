"
use
strict
"
;
function
run_test
(
)
{
test_with_error
(
)
;
test_with_tricky_error
(
)
;
test_with_string
(
)
;
test_with_thrower
(
)
;
test_with_psychotic
(
)
;
}
function
test_with_error
(
)
{
const
s
=
DevToolsUtils
.
safeErrorString
(
new
Error
(
"
foo
bar
"
)
)
;
Assert
.
ok
(
s
.
includes
(
"
foo
bar
"
)
)
;
Assert
.
ok
(
s
.
includes
(
"
test_with_error
"
)
)
;
Assert
.
ok
(
s
.
includes
(
"
test_safeErrorString
.
js
"
)
)
;
Assert
.
ok
(
s
.
includes
(
"
Line
"
)
)
;
Assert
.
ok
(
s
.
includes
(
"
column
"
)
)
;
}
function
test_with_tricky_error
(
)
{
const
e
=
new
Error
(
"
batman
"
)
;
e
.
stack
=
{
toString
:
Object
.
create
(
null
)
}
;
const
s
=
DevToolsUtils
.
safeErrorString
(
e
)
;
Assert
.
ok
(
s
.
includes
(
"
batman
"
)
)
;
}
function
test_with_string
(
)
{
const
s
=
DevToolsUtils
.
safeErrorString
(
"
not
really
an
error
"
)
;
Assert
.
ok
(
s
.
includes
(
"
not
really
an
error
"
)
)
;
}
function
test_with_thrower
(
)
{
const
s
=
DevToolsUtils
.
safeErrorString
(
{
toString
:
(
)
=
>
{
throw
new
Error
(
"
Muahahaha
"
)
;
}
}
)
;
Assert
.
equal
(
typeof
s
"
string
"
)
;
}
function
test_with_psychotic
(
)
{
const
s
=
DevToolsUtils
.
safeErrorString
(
{
toString
:
(
)
=
>
Object
.
create
(
null
)
}
)
;
Assert
.
equal
(
typeof
s
"
string
"
)
;
Assert
.
equal
(
s
"
[
object
Object
]
"
)
;
}
