"
use
strict
"
;
const
{
types
Arg
Option
RetVal
generateActorSpec
}
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
types
.
addDictType
(
"
messageportevent
"
{
isTrusted
:
"
boolean
"
data
:
"
nullable
:
primitive
"
origin
:
"
nullable
:
string
"
lastEventId
:
"
nullable
:
string
"
source
:
"
messageport
"
ports
:
"
nullable
:
array
:
messageport
"
}
)
;
const
messagePortSpec
=
generateActorSpec
(
{
typeName
:
"
messageport
"
events
:
{
message
:
{
type
:
"
message
"
msg
:
Arg
(
0
"
nullable
:
messageportevent
"
)
}
}
methods
:
{
postMessage
:
{
oneway
:
true
request
:
{
msg
:
Arg
(
0
"
nullable
:
json
"
)
}
}
start
:
{
oneway
:
true
request
:
{
}
}
close
:
{
oneway
:
true
request
:
{
}
}
finalize
:
{
oneway
:
true
}
}
}
)
;
exports
.
messagePortSpec
=
messagePortSpec
;
types
.
addDictType
(
"
director
-
script
-
error
"
{
directorScriptId
:
"
string
"
message
:
"
nullable
:
string
"
stack
:
"
nullable
:
string
"
fileName
:
"
nullable
:
string
"
lineNumber
:
"
nullable
:
number
"
columnNumber
:
"
nullable
:
number
"
}
)
;
types
.
addDictType
(
"
director
-
script
-
attach
"
{
directorScriptId
:
"
string
"
url
:
"
string
"
innerId
:
"
number
"
port
:
"
nullable
:
messageport
"
}
)
;
types
.
addDictType
(
"
director
-
script
-
detach
"
{
directorScriptId
:
"
string
"
innerId
:
"
number
"
}
)
;
const
directorScriptSpec
=
generateActorSpec
(
{
typeName
:
"
director
-
script
"
events
:
{
error
:
{
type
:
"
error
"
data
:
Arg
(
0
"
director
-
script
-
error
"
)
}
attach
:
{
type
:
"
attach
"
data
:
Arg
(
0
"
director
-
script
-
attach
"
)
}
detach
:
{
type
:
"
detach
"
data
:
Arg
(
0
"
director
-
script
-
detach
"
)
}
}
methods
:
{
setup
:
{
request
:
{
reload
:
Option
(
0
"
boolean
"
)
skipAttach
:
Option
(
0
"
boolean
"
)
}
oneway
:
true
}
getMessagePort
:
{
request
:
{
}
response
:
{
port
:
RetVal
(
"
nullable
:
messageport
"
)
}
}
finalize
:
{
oneway
:
true
}
}
}
)
;
exports
.
directorScriptSpec
=
directorScriptSpec
;
const
directorManagerSpec
=
generateActorSpec
(
{
typeName
:
"
director
-
manager
"
events
:
{
"
director
-
script
-
error
"
:
{
type
:
"
error
"
data
:
Arg
(
0
"
director
-
script
-
error
"
)
}
"
director
-
script
-
attach
"
:
{
type
:
"
attach
"
data
:
Arg
(
0
"
director
-
script
-
attach
"
)
}
"
director
-
script
-
detach
"
:
{
type
:
"
detach
"
data
:
Arg
(
0
"
director
-
script
-
detach
"
)
}
}
methods
:
{
list
:
{
response
:
{
directorScripts
:
RetVal
(
"
json
"
)
}
}
enableByScriptIds
:
{
oneway
:
true
request
:
{
selectedIds
:
Arg
(
0
"
array
:
string
"
)
reload
:
Option
(
1
"
boolean
"
)
}
}
disableByScriptIds
:
{
oneway
:
true
request
:
{
selectedIds
:
Arg
(
0
"
array
:
string
"
)
reload
:
Option
(
1
"
boolean
"
)
}
}
getByScriptId
:
{
request
:
{
scriptId
:
Arg
(
0
"
string
"
)
}
response
:
{
directorScript
:
RetVal
(
"
director
-
script
"
)
}
}
finalize
:
{
oneway
:
true
}
}
}
)
;
exports
.
directorManagerSpec
=
directorManagerSpec
;
