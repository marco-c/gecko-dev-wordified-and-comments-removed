"
use
strict
"
;
const
{
Arg
RetVal
generateActorSpec
types
}
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
types
.
addDictType
(
"
sourceposition
"
{
line
:
"
number
"
column
:
"
number
"
}
)
;
types
.
addDictType
(
"
nullablesourceposition
"
{
line
:
"
nullable
:
number
"
column
:
"
nullable
:
number
"
}
)
;
types
.
addDictType
(
"
breakpointquery
"
{
start
:
"
nullable
:
nullablesourceposition
"
end
:
"
nullable
:
nullablesourceposition
"
}
)
;
const
sourceSpec
=
generateActorSpec
(
{
typeName
:
"
source
"
methods
:
{
getExecutableLines
:
{
response
:
{
lines
:
RetVal
(
"
json
"
)
}
}
getBreakpointPositions
:
{
request
:
{
query
:
Arg
(
0
"
nullable
:
breakpointquery
"
)
}
response
:
{
positions
:
RetVal
(
"
array
:
sourceposition
"
)
}
}
getBreakpointPositionsCompressed
:
{
request
:
{
query
:
Arg
(
0
"
nullable
:
breakpointquery
"
)
}
response
:
{
positions
:
RetVal
(
"
json
"
)
}
}
onSource
:
{
request
:
{
type
:
"
source
"
}
response
:
RetVal
(
"
json
"
)
}
setPausePoints
:
{
request
:
{
pausePoints
:
Arg
(
0
"
json
"
)
}
}
blackbox
:
{
request
:
{
range
:
Arg
(
0
"
nullable
:
json
"
)
}
response
:
{
pausedInSource
:
RetVal
(
"
boolean
"
)
}
}
unblackbox
:
{
request
:
{
range
:
Arg
(
0
"
nullable
:
json
"
)
}
}
setBreakpoint
:
{
request
:
{
location
:
{
line
:
Arg
(
0
"
number
"
)
column
:
Arg
(
1
"
nullable
:
number
"
)
}
options
:
Arg
(
2
"
nullable
:
json
"
)
}
response
:
RetVal
(
"
json
"
)
}
}
}
)
;
exports
.
sourceSpec
=
sourceSpec
;
