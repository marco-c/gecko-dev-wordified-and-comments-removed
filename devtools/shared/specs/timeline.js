"
use
strict
"
;
const
{
Arg
RetVal
Option
generateActorSpec
types
}
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
types
.
addType
(
"
array
-
of
-
numbers
-
as
-
strings
"
{
write
:
(
v
)
=
>
v
.
join
(
"
"
)
read
:
(
v
)
=
>
typeof
v
=
=
=
"
string
"
?
v
.
split
(
"
"
)
:
v
}
)
;
const
timelineSpec
=
generateActorSpec
(
{
typeName
:
"
timeline
"
events
:
{
"
doc
-
loading
"
:
{
type
:
"
doc
-
loading
"
marker
:
Arg
(
0
"
json
"
)
endTime
:
Arg
(
0
"
number
"
)
}
"
markers
"
:
{
type
:
"
markers
"
markers
:
Arg
(
0
"
json
"
)
endTime
:
Arg
(
1
"
number
"
)
}
"
memory
"
:
{
type
:
"
memory
"
delta
:
Arg
(
0
"
number
"
)
measurement
:
Arg
(
1
"
json
"
)
}
"
ticks
"
:
{
type
:
"
ticks
"
delta
:
Arg
(
0
"
number
"
)
timestamps
:
Arg
(
1
"
array
-
of
-
numbers
-
as
-
strings
"
)
}
"
frames
"
:
{
type
:
"
frames
"
delta
:
Arg
(
0
"
number
"
)
frames
:
Arg
(
1
"
json
"
)
}
}
methods
:
{
isRecording
:
{
request
:
{
}
response
:
{
value
:
RetVal
(
"
boolean
"
)
}
}
start
:
{
request
:
{
withMarkers
:
Option
(
0
"
boolean
"
)
withTicks
:
Option
(
0
"
boolean
"
)
withMemory
:
Option
(
0
"
boolean
"
)
withFrames
:
Option
(
0
"
boolean
"
)
withGCEvents
:
Option
(
0
"
boolean
"
)
withDocLoadingEvents
:
Option
(
0
"
boolean
"
)
}
response
:
{
value
:
RetVal
(
"
number
"
)
}
}
stop
:
{
response
:
{
value
:
RetVal
(
"
nullable
:
number
"
)
}
}
}
}
)
;
exports
.
timelineSpec
=
timelineSpec
;
