"
use
strict
"
;
var
{
Task
}
=
require
(
"
devtools
/
shared
/
task
"
)
;
var
Promise
=
require
(
"
promise
"
)
;
exports
.
asyncOnce
=
function
asyncOnce
(
func
)
{
const
promises
=
new
WeakMap
(
)
;
return
function
(
.
.
.
args
)
{
let
promise
=
promises
.
get
(
this
)
;
if
(
!
promise
)
{
promise
=
Task
.
spawn
(
func
.
apply
(
this
args
)
)
;
promises
.
set
(
this
promise
)
;
}
return
promise
;
}
;
}
;
exports
.
listenOnce
=
function
listenOnce
(
element
event
useCapture
)
{
return
new
Promise
(
function
(
resolve
reject
)
{
let
onEvent
=
function
(
ev
)
{
element
.
removeEventListener
(
event
onEvent
useCapture
)
;
resolve
(
ev
)
;
}
;
element
.
addEventListener
(
event
onEvent
useCapture
)
;
}
)
;
}
;
function
promisify
(
obj
func
args
)
{
return
new
Promise
(
resolve
=
>
{
args
.
push
(
(
.
.
.
results
)
=
>
{
resolve
(
results
.
length
>
1
?
results
:
results
[
0
]
)
;
}
)
;
func
.
apply
(
obj
args
)
;
}
)
;
}
exports
.
promiseInvoke
=
function
promiseInvoke
(
obj
func
.
.
.
args
)
{
return
promisify
(
obj
func
args
)
;
}
;
exports
.
promiseCall
=
function
promiseCall
(
func
.
.
.
args
)
{
return
promisify
(
undefined
func
args
)
;
}
;
