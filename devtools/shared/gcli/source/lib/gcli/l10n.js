"
use
strict
"
;
var
Cc
=
require
(
"
chrome
"
)
.
Cc
;
var
Ci
=
require
(
"
chrome
"
)
.
Ci
;
var
prefSvc
=
Cc
[
"
mozilla
.
org
/
preferences
-
service
;
1
"
]
.
getService
(
Ci
.
nsIPrefService
)
;
var
prefBranch
=
prefSvc
.
getBranch
(
null
)
.
QueryInterface
(
Ci
.
nsIPrefBranch
)
;
const
{
LocalizationHelper
}
=
require
(
"
devtools
/
client
/
shared
/
l10n
"
)
;
const
L10N
=
new
LocalizationHelper
(
"
devtools
-
shared
/
locale
/
gclicommands
.
properties
"
)
;
exports
.
lookup
=
function
(
name
)
{
try
{
return
L10N
.
getStr
(
name
)
;
}
catch
(
ex
)
{
throw
new
Error
(
"
Failure
in
lookup
(
'
"
+
name
+
"
'
)
"
)
;
}
}
;
exports
.
propertyLookup
=
new
Proxy
(
{
}
{
get
:
function
(
rcvr
name
)
{
return
exports
.
lookup
(
name
)
;
}
}
)
;
exports
.
lookupFormat
=
function
(
name
swaps
)
{
try
{
return
L10N
.
getFormatStr
(
name
.
.
.
swaps
)
;
}
catch
(
ex
)
{
throw
new
Error
(
"
Failure
in
lookupFormat
(
'
"
+
name
+
"
'
)
"
)
;
}
}
;
exports
.
hiddenByChromePref
=
function
(
)
{
return
!
prefBranch
.
getBoolPref
(
"
devtools
.
chrome
.
enabled
"
)
;
}
;
