"
use
strict
"
;
const
{
LocalizationHelper
}
=
require
(
"
devtools
/
shared
/
l10n
"
)
;
const
L10N
=
new
LocalizationHelper
(
"
devtools
-
shared
/
locale
/
gcli
.
properties
"
)
;
exports
.
registerStringsSource
=
function
(
modulePath
)
{
throw
new
Error
(
"
registerStringsSource
is
not
available
in
mozilla
"
)
;
}
;
exports
.
unregisterStringsSource
=
function
(
modulePath
)
{
throw
new
Error
(
"
unregisterStringsSource
is
not
available
in
mozilla
"
)
;
}
;
exports
.
lookupSwap
=
function
(
key
swaps
)
{
throw
new
Error
(
"
lookupSwap
is
not
available
in
mozilla
"
)
;
}
;
exports
.
lookupPlural
=
function
(
key
ord
swaps
)
{
throw
new
Error
(
"
lookupPlural
is
not
available
in
mozilla
"
)
;
}
;
exports
.
getPreferredLocales
=
function
(
)
{
return
[
"
root
"
]
;
}
;
exports
.
lookup
=
function
(
key
)
{
try
{
return
L10N
.
getStr
(
key
)
;
}
catch
(
ex
)
{
console
.
error
(
"
Failed
to
lookup
"
key
ex
)
;
return
key
;
}
}
;
exports
.
propertyLookup
=
new
Proxy
(
{
}
{
get
:
function
(
rcvr
name
)
{
return
exports
.
lookup
(
name
)
;
}
}
)
;
exports
.
lookupFormat
=
function
(
key
swaps
)
{
try
{
return
L10N
.
getFormatStr
(
key
.
.
.
swaps
)
;
}
catch
(
ex
)
{
console
.
error
(
"
Failed
to
format
"
key
ex
)
;
return
key
;
}
}
;
