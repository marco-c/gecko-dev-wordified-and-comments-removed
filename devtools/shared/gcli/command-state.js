"
use
strict
"
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
event
-
emitter
"
)
;
loader
.
lazyRequireGetter
(
this
"
getBrowserForTab
"
"
sdk
/
tabs
/
utils
"
true
)
;
const
getTargetId
=
(
{
tab
}
)
=
>
getBrowserForTab
(
tab
)
.
outerWindowID
;
const
enabledCommands
=
new
Map
(
)
;
const
CommandState
=
EventEmitter
.
decorate
(
{
isEnabledForTarget
(
target
command
)
{
if
(
!
target
.
tab
|
|
!
enabledCommands
.
has
(
command
)
)
{
return
false
;
}
return
enabledCommands
.
get
(
command
)
.
has
(
getTargetId
(
target
)
)
;
}
enableForTarget
(
target
command
)
{
if
(
!
target
.
tab
)
{
return
;
}
if
(
!
enabledCommands
.
has
(
command
)
)
{
enabledCommands
.
set
(
command
new
Set
(
)
)
;
}
enabledCommands
.
get
(
command
)
.
add
(
getTargetId
(
target
)
)
;
CommandState
.
emit
(
"
changed
"
{
target
command
}
)
;
}
disableForTarget
(
target
command
)
{
if
(
!
target
.
tab
|
|
!
enabledCommands
.
has
(
command
)
)
{
return
;
}
enabledCommands
.
get
(
command
)
.
delete
(
getTargetId
(
target
)
)
;
CommandState
.
emit
(
"
changed
"
{
target
command
}
)
;
}
}
)
;
exports
.
CommandState
=
CommandState
;
