"
use
strict
"
;
const
{
sourceSpec
}
=
require
(
"
devtools
/
shared
/
specs
/
source
"
)
;
const
{
FrontClassWithSpec
registerFront
}
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
class
SourceFront
extends
FrontClassWithSpec
(
sourceSpec
)
{
constructor
(
client
form
activeThread
)
{
super
(
client
)
;
this
.
_url
=
form
.
url
;
this
.
_activeThread
=
activeThread
;
this
.
actorID
=
form
.
actor
;
this
.
manage
(
this
)
;
}
get
actor
(
)
{
return
this
.
actorID
;
}
get
url
(
)
{
return
this
.
_url
;
}
blackBox
(
range
)
{
return
this
.
blackbox
(
range
)
;
}
unblackBox
(
)
{
return
this
.
unblackbox
(
)
;
}
async
source
(
)
{
const
response
=
await
this
.
onSource
(
)
;
return
this
.
_onSourceResponse
(
response
)
;
}
_onSourceResponse
(
response
)
{
if
(
typeof
response
.
source
=
=
=
"
string
"
)
{
return
response
;
}
const
{
contentType
source
}
=
response
;
if
(
source
.
type
=
=
=
"
arrayBuffer
"
)
{
const
arrayBuffer
=
this
.
_activeThread
.
threadArrayBuffer
(
source
)
;
return
arrayBuffer
.
slice
(
0
source
.
length
)
.
then
(
function
(
resp
)
{
if
(
resp
.
error
)
{
return
resp
;
}
const
str
=
atob
(
resp
.
encoded
)
;
const
newResponse
=
{
source
:
{
binary
:
str
toString
:
(
)
=
>
"
[
wasm
]
"
}
contentType
}
;
return
newResponse
;
}
)
;
}
return
source
.
substring
(
0
source
.
length
)
.
then
(
function
(
resp
)
{
if
(
resp
.
error
)
{
return
resp
;
}
const
newResponse
=
{
source
:
resp
contentType
:
contentType
}
;
return
newResponse
;
}
)
;
}
}
exports
.
SourceFront
=
SourceFront
;
registerFront
(
SourceFront
)
;
