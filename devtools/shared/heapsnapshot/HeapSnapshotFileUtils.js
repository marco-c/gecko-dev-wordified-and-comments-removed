"
use
strict
"
;
const
lazy
=
{
}
;
ChromeUtils
.
defineESModuleGetters
(
lazy
{
FileUtils
:
"
resource
:
/
/
gre
/
modules
/
FileUtils
.
sys
.
mjs
"
}
)
;
function
getHeapSnapshotFileTemplate
(
)
{
return
PathUtils
.
join
(
PathUtils
.
tempDir
{
Date
.
now
(
)
}
.
fxsnapshot
)
;
}
exports
.
getNewUniqueHeapSnapshotTempFilePath
=
function
(
)
{
const
file
=
new
lazy
.
FileUtils
.
File
(
getHeapSnapshotFileTemplate
(
)
)
;
file
.
createUnique
(
Ci
.
nsIFile
.
NORMAL_FILE_TYPE
0o666
)
;
return
file
.
path
;
}
;
function
isValidSnapshotFileId
(
snapshotId
)
{
return
/
^
\
d
+
(
\
-
\
d
+
)
?
/
.
test
(
snapshotId
)
;
}
exports
.
getHeapSnapshotTempFilePath
=
function
(
snapshotId
)
{
if
(
!
isValidSnapshotFileId
(
snapshotId
)
)
{
return
null
;
}
return
PathUtils
.
join
(
PathUtils
.
tempDir
snapshotId
+
"
.
fxsnapshot
"
)
;
}
;
exports
.
haveHeapSnapshotTempFile
=
function
(
snapshotId
)
{
const
path
=
exports
.
getHeapSnapshotTempFilePath
(
snapshotId
)
;
if
(
!
path
)
{
return
Promise
.
resolve
(
false
)
;
}
return
IOUtils
.
stat
(
path
)
.
then
(
(
)
=
>
true
(
)
=
>
false
)
;
}
;
