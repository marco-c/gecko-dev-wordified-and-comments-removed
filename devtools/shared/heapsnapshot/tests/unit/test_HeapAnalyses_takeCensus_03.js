"
use
strict
"
;
add_task
(
function
*
(
)
{
const
client
=
new
HeapAnalysesClient
(
)
;
let
failed
=
false
;
try
{
yield
client
.
readHeapSnapshot
(
getFilePath
(
"
foo
-
bar
-
baz
"
+
Math
.
random
(
)
true
)
)
;
}
catch
(
e
)
{
failed
=
true
;
}
ok
(
failed
"
should
not
read
heap
snapshots
that
do
not
exist
"
)
;
failed
=
false
;
try
{
yield
client
.
readHeapSnapshot
(
getFilePath
(
"
test_HeapAnalyses_takeCensus_03
.
js
"
)
)
;
}
catch
(
e
)
{
failed
=
true
;
}
ok
(
failed
"
should
not
be
able
to
read
a
file
"
+
"
that
is
not
a
heap
snapshot
as
a
heap
snapshot
"
)
;
const
snapshotFilePath
=
saveNewHeapSnapshot
(
)
;
yield
client
.
readHeapSnapshot
(
snapshotFilePath
)
;
ok
(
true
"
Should
have
read
the
heap
snapshot
"
)
;
failed
=
false
;
try
{
yield
client
.
takeCensus
(
snapshotFilePath
{
breakdown
:
{
by
:
"
some
classification
that
we
do
not
have
"
}
}
)
;
}
catch
(
e
)
{
failed
=
true
;
}
ok
(
failed
"
should
not
be
able
to
breakdown
by
an
unknown
classification
"
)
;
client
.
destroy
(
)
;
}
)
;
