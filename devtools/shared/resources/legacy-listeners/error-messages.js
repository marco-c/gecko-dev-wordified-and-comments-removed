"
use
strict
"
;
module
.
exports
=
async
function
(
{
targetList
targetFront
isFissionEnabledOnContentToolbox
onAvailable
}
)
{
const
isContentToolbox
=
targetList
.
targetFront
.
isLocalTab
;
const
listenForFrames
=
isContentToolbox
&
&
isFissionEnabledOnContentToolbox
;
const
isAllowed
=
targetFront
.
isTopLevel
|
|
targetFront
.
targetType
=
=
=
targetList
.
TYPES
.
PROCESS
|
|
(
targetFront
.
targetType
=
=
=
targetList
.
TYPES
.
FRAME
&
&
listenForFrames
)
;
if
(
!
isAllowed
)
{
return
;
}
const
webConsoleFront
=
await
targetFront
.
getFront
(
"
console
"
)
;
await
webConsoleFront
.
startListeners
(
[
"
PageError
"
]
)
;
const
{
messages
}
=
await
webConsoleFront
.
getCachedMessages
(
[
"
PageError
"
]
)
;
for
(
const
message
of
messages
)
{
if
(
!
webConsoleFront
.
traits
.
newCacheStructure
&
&
message
.
_type
!
=
=
"
PageError
"
)
{
continue
;
}
onAvailable
(
{
pageError
:
message
}
)
;
}
webConsoleFront
.
on
(
"
pageError
"
onAvailable
)
;
}
;
