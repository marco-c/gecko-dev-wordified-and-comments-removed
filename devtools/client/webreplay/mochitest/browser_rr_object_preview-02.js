"
use
strict
"
;
PromiseTestUtils
.
whitelistRejectionsGlobally
(
/
can
'
t
be
sent
as
the
connection
just
closed
/
)
;
function
findNode
(
dbg
text
)
{
for
(
let
index
=
0
;
;
index
+
+
)
{
const
elem
=
findElement
(
dbg
"
scopeNode
"
index
)
;
if
(
elem
&
&
elem
.
innerText
=
=
text
)
{
return
elem
;
}
}
}
function
toggleNode
(
dbg
text
)
{
return
toggleObjectInspectorNode
(
findNode
(
dbg
text
)
)
;
}
add_task
(
async
function
(
)
{
const
dbg
=
await
attachRecordingDebugger
(
"
doc_rr_objects
.
html
"
{
waitForRecording
:
true
}
)
;
const
console
=
await
getDebuggerSplitConsole
(
dbg
)
;
const
hud
=
console
.
hud
;
await
warpToMessage
(
hud
dbg
"
Done
"
)
;
await
toggleNode
(
dbg
"
<
this
>
"
)
;
findNode
(
dbg
"
bar
(
)
"
)
;
findNode
(
dbg
"
baz
(
)
"
)
;
await
shutdownDebugger
(
dbg
)
;
}
)
;
