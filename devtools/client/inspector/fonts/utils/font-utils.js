"
use
strict
"
;
module
.
exports
=
{
getStepForUnit
(
unit
)
{
let
step
=
1
;
if
(
unit
=
=
=
"
em
"
|
|
unit
=
=
=
"
rem
"
)
{
step
=
0
.
1
;
}
return
step
;
}
getUnitFromValue
(
value
)
{
if
(
typeof
value
!
=
=
"
string
"
)
{
return
null
;
}
const
match
=
value
.
match
(
/
\
D
+
?
/
)
;
return
match
&
&
match
.
length
?
match
[
0
]
:
null
;
}
parseFontVariationAxes
(
string
)
{
let
axes
=
{
}
;
const
keywords
=
[
"
initial
"
"
normal
"
"
inherit
"
"
unset
"
]
;
if
(
keywords
.
includes
(
string
.
trim
(
)
)
)
{
return
axes
;
}
axes
=
string
.
split
(
"
"
)
.
reduce
(
(
acc
pair
)
=
>
{
pair
=
pair
.
split
(
/
[
"
'
]
/
)
.
filter
(
part
=
>
part
.
trim
(
)
!
=
=
"
"
)
;
const
tag
=
pair
[
0
]
.
trim
(
)
;
const
value
=
pair
[
1
]
.
trim
(
)
;
acc
[
tag
]
=
value
;
return
acc
;
}
{
}
)
;
return
axes
;
}
}
;
