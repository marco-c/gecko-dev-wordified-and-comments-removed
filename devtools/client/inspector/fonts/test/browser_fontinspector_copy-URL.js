"
use
strict
"
;
const
TEST_URI
=
URL_ROOT
+
"
browser_fontinspector
.
html
"
;
add_task
(
async
function
(
)
{
let
{
view
toolbox
}
=
await
openFontInspectorForURL
(
TEST_URI
)
;
let
viewDoc
=
view
.
document
;
let
win
=
viewDoc
.
defaultView
;
let
fontEl
=
getUsedFontsEls
(
viewDoc
)
[
0
]
;
let
linkEl
=
fontEl
.
querySelector
(
"
.
font
-
url
"
)
;
let
popupset
=
toolbox
.
doc
.
querySelector
(
"
popupset
"
)
;
info
(
"
Right
-
clicking
on
the
first
font
'
s
link
"
)
;
EventUtils
.
synthesizeMouse
(
linkEl
2
2
{
type
:
"
contextmenu
"
button
:
2
}
win
)
;
info
(
"
Waiting
for
the
new
menu
to
open
"
)
;
let
menu
=
popupset
.
querySelector
(
"
menupopup
[
menu
-
api
]
"
)
;
await
once
(
menu
"
popupshown
"
)
;
let
items
=
menu
.
querySelectorAll
(
"
menuitem
"
)
;
is
(
items
.
length
1
"
There
'
s
only
one
menu
item
displayed
"
)
;
is
(
items
[
0
]
.
getAttribute
(
"
label
"
)
"
Copy
Link
"
"
This
is
the
right
menu
item
"
)
;
info
(
"
Clicking
the
menu
item
and
waiting
for
the
clipboard
to
receive
the
URL
"
)
;
let
expected
=
linkEl
.
href
;
await
waitForClipboardPromise
(
(
)
=
>
items
[
0
]
.
click
(
)
expected
)
;
info
(
"
Closing
the
menu
"
)
;
let
onHidden
=
once
(
menu
"
popuphidden
"
)
;
menu
.
hidePopup
(
)
;
await
onHidden
;
}
)
;
