"
use
strict
"
;
const
TEST_URI
=
URL_ROOT
+
"
doc_browser_fontinspector
.
html
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
inspector
.
fonteditor
.
enabled
"
false
)
;
const
{
inspector
view
}
=
await
openFontInspectorForURL
(
TEST_URI
)
;
const
viewDoc
=
view
.
document
;
const
otherFontsAccordion
=
getFontsAccordion
(
viewDoc
)
;
ok
(
otherFontsAccordion
"
There
'
s
an
accordion
in
the
panel
"
)
;
is
(
otherFontsAccordion
.
textContent
"
Other
fonts
in
page
"
"
It
has
the
right
title
"
)
;
await
expandAccordion
(
otherFontsAccordion
)
;
let
allFontsEls
=
getAllFontsEls
(
viewDoc
)
;
is
(
allFontsEls
.
length
1
"
There
is
one
font
listed
in
the
other
fonts
section
"
)
;
const
name
=
getName
(
allFontsEls
[
0
]
)
;
ok
(
name
=
=
=
"
Times
New
Roman
"
|
|
name
=
=
=
"
Liberation
Serif
"
"
The
other
font
listed
is
the
right
one
"
)
;
info
(
"
Checking
that
fonts
of
the
current
element
aren
'
t
listed
"
)
;
await
selectNode
(
"
.
bold
-
text
"
inspector
)
;
await
expandFontsAccordion
(
viewDoc
)
;
allFontsEls
=
getAllFontsEls
(
viewDoc
)
;
for
(
const
otherFontEl
of
allFontsEls
)
{
ok
(
!
[
.
.
.
getUsedFontsEls_obsolete
(
viewDoc
)
]
.
some
(
el
=
>
getName
(
el
)
=
=
=
getName
(
otherFontEl
)
)
"
Other
font
isn
'
t
listed
in
the
main
fonts
section
"
)
;
}
}
)
;
