"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
devtools
/
client
/
inspector
/
test
/
head
.
js
"
this
)
;
var
openFontInspectorForURL
=
Task
.
async
(
function
*
(
url
)
{
yield
addTab
(
url
)
;
let
{
toolbox
inspector
}
=
yield
openInspectorSidebarTab
(
"
fontinspector
"
)
;
let
onUpdated
=
inspector
.
once
(
"
fontinspector
-
updated
"
)
;
yield
selectNode
(
"
body
"
inspector
)
;
yield
onUpdated
;
return
{
toolbox
inspector
view
:
inspector
.
fontInspector
}
;
}
)
;
function
*
updatePreviewText
(
view
text
)
{
info
(
Changing
the
preview
text
to
'
{
text
}
'
)
;
let
doc
=
view
.
chromeDoc
;
let
input
=
doc
.
getElementById
(
"
font
-
preview
-
text
-
input
"
)
;
let
update
=
view
.
inspector
.
once
(
"
fontinspector
-
updated
"
)
;
info
(
"
Focusing
the
input
field
.
"
)
;
input
.
focus
(
)
;
is
(
doc
.
activeElement
input
"
The
input
was
focused
.
"
)
;
info
(
"
Blanking
the
input
field
.
"
)
;
for
(
let
i
=
input
.
value
.
length
;
i
>
=
0
;
i
-
-
)
{
EventUtils
.
sendKey
(
"
BACK_SPACE
"
doc
.
defaultView
)
;
}
is
(
input
.
value
"
"
"
The
input
is
now
blank
.
"
)
;
info
(
"
Typing
the
specified
text
to
the
input
field
.
"
)
;
EventUtils
.
sendString
(
text
doc
.
defaultView
)
;
is
(
input
.
value
text
"
The
input
now
contains
the
correct
text
.
"
)
;
info
(
"
Waiting
for
the
font
-
inspector
to
update
.
"
)
;
yield
update
;
}
