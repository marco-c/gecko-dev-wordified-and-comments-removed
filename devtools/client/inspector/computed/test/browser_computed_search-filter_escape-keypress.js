"
use
strict
"
;
requestLongerTimeout
(
2
)
;
const
TEST_URI
=
<
style
type
=
"
text
/
css
"
>
.
matches
{
color
:
#
F00
;
}
<
/
style
>
<
span
id
=
"
matches
"
class
=
"
matches
"
>
Some
styled
text
<
/
span
>
;
add_task
(
async
function
(
)
{
await
addTab
(
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
encodeURIComponent
(
TEST_URI
)
)
;
let
{
inspector
view
}
=
await
openComputedView
(
)
;
await
selectNode
(
"
#
matches
"
inspector
)
;
await
testAddTextInFilter
(
inspector
view
)
;
await
testEscapeKeypress
(
inspector
view
)
;
}
)
;
async
function
testAddTextInFilter
(
inspector
computedView
)
{
info
(
"
Setting
filter
text
to
\
"
background
-
color
\
"
"
)
;
let
win
=
computedView
.
styleWindow
;
let
propertyViews
=
computedView
.
propertyViews
;
let
searchField
=
computedView
.
searchField
;
let
checkbox
=
computedView
.
includeBrowserStylesCheckbox
;
info
(
"
Include
browser
styles
"
)
;
checkbox
.
click
(
)
;
await
inspector
.
once
(
"
computed
-
view
-
refreshed
"
)
;
searchField
.
focus
(
)
;
synthesizeKeys
(
"
background
-
color
"
win
)
;
await
inspector
.
once
(
"
computed
-
view
-
refreshed
"
)
;
info
(
"
Check
that
the
correct
properties
are
visible
"
)
;
propertyViews
.
forEach
(
(
propView
)
=
>
{
let
name
=
propView
.
name
;
is
(
propView
.
visible
name
.
indexOf
(
"
background
-
color
"
)
>
-
1
"
span
"
+
name
+
"
property
visibility
check
"
)
;
}
)
;
}
async
function
testEscapeKeypress
(
inspector
computedView
)
{
info
(
"
Pressing
the
escape
key
on
search
filter
"
)
;
let
win
=
computedView
.
styleWindow
;
let
propertyViews
=
computedView
.
propertyViews
;
let
searchField
=
computedView
.
searchField
;
let
onRefreshed
=
inspector
.
once
(
"
computed
-
view
-
refreshed
"
)
;
searchField
.
focus
(
)
;
EventUtils
.
synthesizeKey
(
"
VK_ESCAPE
"
{
}
win
)
;
await
onRefreshed
;
info
(
"
Check
that
the
correct
properties
are
visible
"
)
;
ok
(
!
searchField
.
value
"
Search
filter
is
cleared
"
)
;
propertyViews
.
forEach
(
(
propView
)
=
>
{
let
name
=
propView
.
name
;
is
(
propView
.
visible
true
"
span
"
+
name
+
"
property
is
visible
"
)
;
}
)
;
}
