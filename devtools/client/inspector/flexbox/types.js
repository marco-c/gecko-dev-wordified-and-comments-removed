"
use
strict
"
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
flexItemProperties
=
exports
.
flexItemProperties
=
{
"
flex
-
basis
"
:
PropTypes
.
string
"
flex
-
grow
"
:
PropTypes
.
string
"
min
-
height
"
:
PropTypes
.
string
"
min
-
width
"
:
PropTypes
.
string
"
max
-
height
"
:
PropTypes
.
string
"
max
-
width
"
:
PropTypes
.
string
"
height
"
:
PropTypes
.
string
"
width
"
:
PropTypes
.
string
}
;
const
flexItemSizing
=
exports
.
flexItemSizing
=
{
crossMaxSize
:
PropTypes
.
number
crossMinSize
:
PropTypes
.
number
mainBaseSize
:
PropTypes
.
number
mainDeltaSize
:
PropTypes
.
number
mainMaxSize
:
PropTypes
.
number
mainMinSize
:
PropTypes
.
number
}
;
const
flexItem
=
exports
.
flexItem
=
{
actorID
:
PropTypes
.
string
computedStyle
:
PropTypes
.
object
flexItemSizing
:
PropTypes
.
shape
(
flexItemSizing
)
nodeFront
:
PropTypes
.
object
properties
:
PropTypes
.
shape
(
flexItemProperties
)
}
;
const
flexContainerProperties
=
exports
.
flexContainerProperties
=
{
"
align
-
content
"
:
PropTypes
.
string
"
align
-
items
"
:
PropTypes
.
string
"
flex
-
direction
"
:
PropTypes
.
string
"
flex
-
wrap
"
:
PropTypes
.
string
"
justify
-
content
"
:
PropTypes
.
string
}
;
const
flexContainer
=
exports
.
flexContainer
=
{
actorID
:
PropTypes
.
string
flexItems
:
PropTypes
.
arrayOf
(
PropTypes
.
shape
(
flexItem
)
)
isFlexItemContainer
:
PropTypes
.
bool
flexItemShown
:
PropTypes
.
string
nodeFront
:
PropTypes
.
object
properties
:
PropTypes
.
shape
(
flexContainerProperties
)
}
;
exports
.
flexbox
=
{
color
:
PropTypes
.
string
flexContainer
:
PropTypes
.
shape
(
flexContainer
)
flexItemContainer
:
PropTypes
.
shape
(
flexContainer
)
highlighted
:
PropTypes
.
bool
}
;
