"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
devtools
/
client
/
inspector
/
test
/
head
.
js
"
this
)
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
devtools
/
client
/
shared
/
test
/
shared
-
redux
-
head
.
js
"
this
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
layout
.
flexbox
.
opened
"
true
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
layout
.
boxmodel
.
opened
"
false
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
layout
.
grid
.
opened
"
false
)
;
registerCleanupFunction
(
(
)
=
>
{
Services
.
prefs
.
clearUserPref
(
"
devtools
.
layout
.
flexbox
.
opened
"
)
;
Services
.
prefs
.
clearUserPref
(
"
devtools
.
layout
.
boxmodel
.
opened
"
)
;
Services
.
prefs
.
clearUserPref
(
"
devtools
.
layout
.
grid
.
opened
"
)
;
}
)
;
async
function
toggleHighlighterON
(
button
highlighters
store
)
{
info
(
"
Toggling
ON
the
flexbox
highlighter
from
the
layout
panel
.
"
)
;
const
onHighlighterShown
=
highlighters
.
once
(
"
flexbox
-
highlighter
-
shown
"
)
;
const
onToggleChange
=
waitUntilState
(
store
state
=
>
state
.
flexbox
.
highlighted
)
;
button
.
click
(
)
;
await
onHighlighterShown
;
await
onToggleChange
;
}
async
function
toggleHighlighterOFF
(
button
highlighters
store
)
{
info
(
"
Toggling
OFF
the
flexbox
highlighter
from
the
layout
panel
.
"
)
;
const
onHighlighterHidden
=
highlighters
.
once
(
"
flexbox
-
highlighter
-
hidden
"
)
;
const
onToggleChange
=
waitUntilState
(
store
state
=
>
!
state
.
flexbox
.
highlighted
)
;
button
.
click
(
)
;
await
onHighlighterHidden
;
await
onToggleChange
;
}
