"
use
strict
"
;
const
{
createFactory
PureComponent
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
dom
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
UnsupportedBrowserItem
=
createFactory
(
require
(
"
devtools
/
client
/
inspector
/
compatibility
/
components
/
UnsupportedBrowserItem
"
)
)
;
const
Types
=
require
(
"
devtools
/
client
/
inspector
/
compatibility
/
types
"
)
;
const
FluentReact
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
fluent
-
react
"
)
;
const
Localized
=
createFactory
(
FluentReact
.
Localized
)
;
class
UnsupportedBrowserList
extends
PureComponent
{
static
get
propTypes
(
)
{
return
{
browsers
:
PropTypes
.
arrayOf
(
PropTypes
.
shape
(
Types
.
browser
)
)
.
isRequired
}
;
}
render
(
)
{
const
{
browsers
}
=
this
.
props
;
const
unsupportedBrowserItems
=
{
}
;
const
browsersList
=
[
]
;
for
(
const
{
id
name
version
status
}
of
browsers
)
{
if
(
!
unsupportedBrowserItems
[
id
]
)
{
unsupportedBrowserItems
[
id
]
=
UnsupportedBrowserItem
(
{
key
:
id
id
name
}
)
;
}
browsersList
.
push
(
{
name
}
{
version
}
{
status
?
(
{
status
}
)
:
"
"
}
)
;
}
return
Localized
(
{
id
:
"
compatibility
-
issue
-
browsers
-
list
"
browsers
:
browsersList
.
join
(
"
\
n
"
)
attrs
:
{
title
:
true
}
}
dom
.
ul
(
{
className
:
"
compatibility
-
unsupported
-
browser
-
list
"
}
Object
.
values
(
unsupportedBrowserItems
)
)
)
;
}
}
module
.
exports
=
UnsupportedBrowserList
;
