"
use
strict
"
;
const
toolbox
=
require
(
"
.
.
/
node_modules
/
devtools
-
launchpad
/
index
"
)
;
const
feature
=
require
(
"
devtools
-
config
"
)
;
const
envConfig
=
require
(
"
.
.
/
configs
/
development
.
json
"
)
;
const
fs
=
require
(
"
fs
"
)
;
const
path
=
require
(
"
path
"
)
;
feature
.
setConfig
(
envConfig
)
;
const
webpackConfig
=
require
(
"
.
.
/
webpack
.
config
"
)
(
envConfig
)
;
let
{
app
}
=
toolbox
.
startDevServer
(
envConfig
webpackConfig
)
;
function
sendFile
(
res
src
encoding
)
{
const
filePath
=
path
.
join
(
__dirname
src
)
;
const
file
=
encoding
?
fs
.
readFileSync
(
filePath
encoding
)
:
fs
.
readFileSync
(
filePath
)
;
res
.
send
(
file
)
;
}
function
addFileRoute
(
from
to
)
{
app
.
get
(
from
function
(
req
res
)
{
sendFile
(
res
to
"
utf
-
8
"
)
;
}
)
;
}
addFileRoute
(
"
/
"
"
.
.
/
inspector
.
xhtml
"
)
;
addFileRoute
(
"
/
markup
/
markup
.
xhtml
"
"
.
.
/
markup
/
markup
.
xhtml
"
)
;
app
.
get
(
"
/
devtools
/
skin
/
images
/
:
file
.
png
"
function
(
req
res
)
{
res
.
contentType
(
"
image
/
png
"
)
;
sendFile
(
res
"
.
.
/
.
.
/
themes
/
images
/
"
+
req
.
params
.
file
+
"
.
png
"
)
;
}
)
;
app
.
get
(
"
/
devtools
/
skin
/
images
/
:
file
.
svg
"
function
(
req
res
)
{
res
.
contentType
(
"
image
/
svg
+
xml
"
)
;
sendFile
(
res
"
.
.
/
.
.
/
themes
/
images
/
"
+
req
.
params
.
file
+
"
.
svg
"
"
utf
-
8
"
)
;
}
)
;
app
.
get
(
"
/
images
/
:
file
.
svg
"
function
(
req
res
)
{
res
.
contentType
(
"
image
/
svg
+
xml
"
)
;
sendFile
(
res
"
.
.
/
.
.
/
themes
/
images
/
"
+
req
.
params
.
file
+
"
.
svg
"
"
utf
-
8
"
)
;
}
)
;
app
.
get
(
"
/
devtools
/
skin
/
:
file
.
css
"
function
(
req
res
)
{
res
.
contentType
(
"
text
/
css
;
charset
=
utf
-
8
"
)
;
sendFile
(
res
"
.
.
/
.
.
/
themes
/
"
+
req
.
params
.
file
+
"
.
css
"
"
utf
-
8
"
)
;
}
)
;
app
.
get
(
/
^
\
/
devtools
\
/
(
?
:
client
|
content
)
\
/
(
.
*
)
\
.
css
/
function
(
req
res
)
{
res
.
contentType
(
"
text
/
css
;
charset
=
utf
-
8
"
)
;
sendFile
(
res
"
.
.
/
.
.
/
"
+
req
.
params
[
0
]
+
"
.
css
"
)
;
}
)
;
