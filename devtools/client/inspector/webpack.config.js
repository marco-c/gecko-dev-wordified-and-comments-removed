"
use
strict
"
;
const
{
toolboxConfig
}
=
require
(
"
devtools
-
launchpad
/
index
"
)
;
const
path
=
require
(
"
path
"
)
;
const
webpack
=
require
(
"
webpack
"
)
;
module
.
exports
=
envConfig
=
>
{
let
webpackConfig
=
{
bail
:
false
entry
:
[
path
.
join
(
__dirname
"
local
-
toolbox
.
js
"
)
]
output
:
{
path
:
path
.
join
(
__dirname
"
assets
/
build
"
)
filename
:
"
inspector
.
js
"
publicPath
:
"
/
"
}
module
:
{
noParse
:
[
/
netmonitor
\
/
panel
\
.
js
/
i
/
debugger
\
/
new
\
/
panel
\
.
js
/
i
]
unknownContextRegExp
:
/
^
/
unknownContextCritical
:
false
exprContextRegExp
:
/
^
/
exprContextCritical
:
false
wrappedContextCritical
:
true
loaders
:
[
{
test
:
/
event
-
emitter
/
exclude
:
/
node_modules
/
loaders
:
[
"
rewrite
-
event
-
emitter
"
]
}
{
test
:
/
client
(
\
/
|
\
\
)
inspector
(
\
/
|
\
\
)
.
*
\
.
js
/
loaders
:
[
"
rewrite
-
browser
-
require
"
"
rewrite
-
lazy
-
require
"
]
}
{
test
:
/
shared
(
\
/
|
\
\
)
inspector
(
\
/
|
\
\
)
css
-
logic
\
.
js
/
loaders
:
[
"
rewrite
-
css
-
logic
-
importer
"
]
}
{
test
:
/
react
-
redux
\
.
js
/
loaders
:
[
"
rewrite
-
react
-
redux
"
]
}
{
test
:
/
sdk
(
\
/
|
\
\
)
.
*
\
.
js
/
loaders
:
[
"
rewrite
-
sdk
-
lazy
-
require
"
]
}
]
}
resolveLoader
:
{
root
:
[
path
.
resolve
(
"
.
/
node_modules
"
)
path
.
resolve
(
"
.
.
/
shared
/
webpack
"
)
]
}
resolve
:
{
alias
:
{
"
react
"
:
"
devtools
/
client
/
shared
/
vendor
/
react
"
"
redux
"
:
"
devtools
/
client
/
shared
/
vendor
/
redux
"
"
react
-
dom
"
:
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
"
"
acorn
/
util
/
walk
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
shared
/
acorn
/
walk
"
)
"
acorn
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
shared
/
acorn
"
)
"
devtools
/
client
/
framework
/
about
-
devtools
-
toolbox
"
:
path
.
join
(
__dirname
"
.
/
webpack
/
about
-
devtools
-
sham
.
js
"
)
"
devtools
/
client
/
framework
/
attach
-
thread
"
:
path
.
join
(
__dirname
"
.
/
webpack
/
attach
-
thread
-
sham
.
js
"
)
"
devtools
/
client
/
framework
/
target
-
from
-
url
"
:
path
.
join
(
__dirname
"
.
/
webpack
/
target
-
from
-
url
-
sham
.
js
"
)
"
devtools
/
client
/
jsonview
/
main
"
:
path
.
join
(
__dirname
"
.
/
webpack
/
jsonview
-
sham
.
js
"
)
"
devtools
/
client
/
sourceeditor
/
editor
"
:
path
.
join
(
__dirname
"
.
/
webpack
/
editor
-
sham
.
js
"
)
"
devtools
/
client
/
locales
"
:
path
.
join
(
__dirname
"
.
.
/
locales
/
en
-
US
"
)
"
devtools
/
shared
/
DevToolsUtils
"
:
path
.
join
(
__dirname
"
.
/
webpack
/
devtools
-
utils
-
sham
.
js
"
)
"
devtools
/
shared
/
locales
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
shared
/
locales
/
en
-
US
"
)
"
devtools
/
shared
/
platform
/
clipboard
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
client
/
shared
/
webpack
/
shims
/
platform
-
clipboard
-
stub
"
)
"
devtools
/
shared
/
platform
/
stack
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
client
/
shared
/
webpack
/
shims
/
platform
-
clipboard
-
stub
"
)
"
devtools
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
"
)
"
gcli
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
shared
/
gcli
/
source
/
lib
/
gcli
"
)
"
method
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
.
.
/
addon
-
sdk
/
source
/
lib
/
method
"
)
"
modules
/
libpref
/
init
/
all
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
.
.
/
modules
/
libpref
/
init
/
all
.
js
"
)
"
devtools
/
shared
/
generate
-
uuid
"
:
path
.
join
(
__dirname
"
.
/
webpack
/
uuid
-
sham
.
js
"
)
"
sdk
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
.
.
/
addon
-
sdk
/
source
/
lib
/
sdk
"
)
"
Services
"
:
path
.
join
(
__dirname
"
.
.
/
shared
/
shim
/
Services
.
js
"
)
"
toolkit
/
locales
"
:
path
.
join
(
__dirname
"
.
.
/
.
.
/
.
.
/
toolkit
/
locales
/
en
-
US
/
chrome
/
global
"
)
}
}
plugins
:
[
new
webpack
.
DefinePlugin
(
{
"
isWorker
"
:
JSON
.
stringify
(
false
)
"
reportError
"
:
"
console
.
error
"
"
AppConstants
"
:
"
{
DEBUG
:
true
DEBUG_JS_MODULES
:
true
}
"
"
loader
"
:
{
lazyRequireGetter
:
(
)
=
>
{
}
lazyGetter
:
(
)
=
>
{
}
lazyImporter
:
(
)
=
>
{
}
}
"
dump
"
:
"
console
.
log
"
}
)
]
}
;
webpackConfig
.
externals
=
[
/
codemirror
\
/
/
{
"
promise
"
:
"
var
Promise
"
"
devtools
/
server
/
main
"
:
"
{
}
"
"
chrome
"
:
"
{
}
"
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
:
"
{
}
"
"
resource
:
/
/
devtools
/
client
/
styleeditor
/
StyleEditorUI
.
jsm
"
:
"
{
}
"
"
resource
:
/
/
devtools
/
client
/
styleeditor
/
StyleEditorUtil
.
jsm
"
:
"
{
}
"
"
devtools
/
client
/
shared
/
developer
-
toolbar
"
:
"
{
}
"
}
]
;
webpackConfig
.
babelExcludes
=
/
(
devtools
(
\
/
|
\
\
)
|
addon
-
sdk
(
\
/
|
\
\
)
|
modules
(
\
/
|
\
\
)
)
/
;
return
toolboxConfig
(
webpackConfig
envConfig
)
;
}
;
