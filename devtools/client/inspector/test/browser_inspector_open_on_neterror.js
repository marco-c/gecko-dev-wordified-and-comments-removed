"
use
strict
"
;
const
TEST_URL_1
=
"
http
:
/
/
127
.
0
.
0
.
1
:
36325
/
"
;
const
TEST_URL_2
=
"
data
:
text
/
html
<
html
>
<
body
>
test
-
doc
-
2
<
/
body
>
<
/
html
>
"
;
add_task
(
async
function
(
)
{
let
tab
=
gBrowser
.
selectedTab
=
BrowserTestUtils
.
addTab
(
gBrowser
"
data
:
text
/
html
empty
"
)
;
await
BrowserTestUtils
.
browserLoaded
(
tab
.
linkedBrowser
)
;
await
ContentTask
.
spawn
(
tab
.
linkedBrowser
{
url
:
TEST_URL_1
}
async
function
(
{
url
}
)
{
let
{
chromeEventHandler
}
=
docShell
;
let
onDOMContentLoaded
=
ContentTaskUtils
.
waitForEvent
(
chromeEventHandler
"
DOMContentLoaded
"
true
)
;
content
.
location
=
url
;
await
onDOMContentLoaded
;
}
)
;
let
{
inspector
testActor
}
=
await
openInspector
(
)
;
ok
(
true
"
Inspector
loaded
on
the
already
opened
net
error
"
)
;
let
documentURI
=
await
testActor
.
eval
(
"
document
.
documentURI
;
"
)
;
ok
(
documentURI
.
startsWith
(
"
about
:
neterror
"
)
"
content
is
really
a
net
error
page
.
"
)
;
info
(
"
Navigate
to
a
valid
url
"
)
;
await
navigateTo
(
inspector
TEST_URL_2
)
;
is
(
await
getDisplayedNodeTextContent
(
"
body
"
inspector
)
"
test
-
doc
-
2
"
"
Inspector
really
inspects
the
valid
url
"
)
;
}
)
;
