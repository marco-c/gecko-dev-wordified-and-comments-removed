"
use
strict
"
;
const
TEST_URL
=
URL_ROOT
+
"
doc_inspector_highlighter_csstransform
.
html
"
;
const
{
TYPES
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
devtools
/
shared
/
highlighters
.
mjs
"
)
;
add_task
(
async
function
(
)
{
const
{
inspector
highlighterTestFront
}
=
await
openInspectorForURL
(
TEST_URL
)
;
const
front
=
inspector
.
inspectorFront
;
const
highlighter
=
await
front
.
getHighlighterByType
(
TYPES
.
TRANSFORM
)
;
const
nodeFront
=
await
getNodeFront
(
"
#
test
-
node
"
inspector
)
;
info
(
"
Displaying
the
transform
highlighter
on
test
node
"
)
;
await
highlighter
.
show
(
nodeFront
)
;
const
data
=
await
getAllAdjustedQuadsForContentPageElement
(
"
#
test
-
node
"
)
;
const
[
expected
]
=
data
.
border
;
const
points
=
await
highlighterTestFront
.
getHighlighterNodeAttribute
(
"
css
-
transform
-
transformed
"
"
points
"
highlighter
)
;
const
polygonPoints
=
points
.
split
(
"
"
)
.
map
(
p
=
>
{
return
{
x
:
+
p
.
substring
(
0
p
.
indexOf
(
"
"
)
)
y
:
+
p
.
substring
(
p
.
indexOf
(
"
"
)
+
1
)
}
;
}
)
;
for
(
let
i
=
1
;
i
<
5
;
i
+
+
)
{
is
(
polygonPoints
[
i
-
1
]
.
x
expected
[
"
p
"
+
i
]
.
x
"
p
"
+
i
+
"
x
coordinate
is
correct
"
)
;
is
(
polygonPoints
[
i
-
1
]
.
y
expected
[
"
p
"
+
i
]
.
y
"
p
"
+
i
+
"
y
coordinate
is
correct
"
)
;
}
info
(
"
Hiding
the
transform
highlighter
"
)
;
await
highlighter
.
hide
(
)
;
await
highlighter
.
finalize
(
)
;
}
)
;
