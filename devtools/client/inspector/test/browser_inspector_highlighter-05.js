"
use
strict
"
;
const
server
=
createTestHTTPServer
(
)
;
const
filepath
=
"
/
slow
.
css
"
;
const
cssuri
=
http
:
/
/
localhost
:
{
server
.
identity
.
primaryPort
}
{
filepath
}
;
server
.
registerContentType
(
"
css
"
"
text
/
css
"
)
;
server
.
registerPathHandler
(
filepath
(
metadata
response
)
=
>
{
info
(
"
CSS
has
been
requested
"
)
;
response
.
processAsync
(
)
;
setTimeout
(
(
)
=
>
{
info
(
"
CSS
is
responding
"
)
;
response
.
finish
(
)
;
}
2000
)
;
}
)
;
const
TEST_URL
=
"
data
:
text
/
html
"
+
encodeURIComponent
(
<
!
DOCTYPE
html
>
<
html
>
<
head
>
<
link
href
=
"
{
cssuri
}
"
rel
=
"
stylesheet
"
/
>
<
/
head
>
<
body
>
<
p
>
Slow
page
<
/
p
>
<
/
body
>
<
/
html
>
)
;
add_task
(
async
function
(
)
{
info
(
"
Open
the
inspector
to
a
blank
page
.
"
)
;
let
{
inspector
tab
testActor
}
=
await
openInspectorForURL
(
"
about
:
blank
"
)
;
let
pageLoaded
=
BrowserTestUtils
.
browserLoaded
(
tab
.
linkedBrowser
)
;
info
(
"
Navigate
to
the
test
url
and
waiting
for
the
page
to
be
loaded
.
"
)
;
await
navigateTo
(
inspector
TEST_URL
)
;
await
pageLoaded
;
info
(
"
Shows
the
box
model
highligher
for
the
<
p
>
node
.
"
)
;
let
divFront
=
await
getNodeFront
(
"
p
"
inspector
)
;
await
inspector
.
highlighter
.
showBoxModel
(
divFront
)
;
info
(
"
Check
the
node
is
highlighted
.
"
)
;
is
(
await
testActor
.
isHighlighting
(
)
true
"
Box
Model
highlighter
is
working
as
expected
.
"
)
;
}
)
;
