"
use
strict
"
;
const
TEST_URI
=
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
"
<
div
id
=
\
"
outer
\
"
>
<
/
div
>
"
+
"
<
iframe
style
=
'
margin
:
100px
'
src
=
'
data
:
text
/
html
"
+
"
<
div
id
=
\
"
inner
\
"
>
Look
I
am
here
!
<
/
div
>
'
>
"
;
add_task
(
async
function
(
)
{
info
(
"
Enable
command
-
button
-
frames
preference
setting
"
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
command
-
button
-
frames
.
enabled
"
true
)
;
let
{
inspector
toolbox
testActor
}
=
await
openInspectorForURL
(
TEST_URI
)
;
info
(
"
Switch
to
the
iframe
context
.
"
)
;
await
switchToFrameContext
(
1
toolbox
inspector
)
;
info
(
"
Check
navigation
was
successful
.
"
)
;
let
hasOuterNode
=
await
testActor
.
hasNode
(
"
#
outer
"
)
;
ok
(
!
hasOuterNode
"
Check
testActor
has
no
access
to
outer
element
"
)
;
let
hasTestNode
=
await
testActor
.
hasNode
(
"
#
inner
"
)
;
ok
(
hasTestNode
"
Check
testActor
has
access
to
inner
element
"
)
;
info
(
"
Check
highlighting
is
correct
after
switching
iframe
context
"
)
;
await
selectAndHighlightNode
(
"
#
inner
"
inspector
)
;
let
isHighlightCorrect
=
await
testActor
.
assertHighlightedNode
(
"
#
inner
"
)
;
ok
(
isHighlightCorrect
"
The
selected
node
is
properly
highlighted
.
"
)
;
info
(
"
Cleanup
command
-
button
-
frames
preferences
.
"
)
;
Services
.
prefs
.
clearUserPref
(
"
devtools
.
command
-
button
-
frames
.
enabled
"
)
;
}
)
;
async
function
switchToFrameContext
(
frameIndex
toolbox
inspector
)
{
let
btn
=
toolbox
.
doc
.
getElementById
(
"
command
-
button
-
frames
"
)
;
let
menu
=
await
toolbox
.
showFramesMenu
(
{
target
:
btn
}
)
;
await
once
(
menu
"
open
"
)
;
info
(
"
Select
the
iframe
in
the
frame
list
.
"
)
;
let
newRoot
=
inspector
.
once
(
"
new
-
root
"
)
;
menu
.
items
[
frameIndex
]
.
click
(
)
;
await
newRoot
;
await
inspector
.
once
(
"
inspector
-
updated
"
)
;
info
(
"
Navigation
to
the
iframe
is
done
.
"
)
;
}
