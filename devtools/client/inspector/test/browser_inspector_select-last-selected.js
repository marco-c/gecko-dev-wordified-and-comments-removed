"
use
strict
"
;
requestLongerTimeout
(
2
)
;
var
PAGE_1
=
URL_ROOT_SSL
+
"
doc_inspector_select
-
last
-
selected
-
01
.
html
"
;
var
PAGE_2
=
URL_ROOT_SSL
+
"
doc_inspector_select
-
last
-
selected
-
02
.
html
"
;
var
TEST_DATA
=
[
{
url
:
PAGE_1
nodeToSelect
:
"
#
id1
"
selectedNode
:
"
#
id1
"
}
{
url
:
PAGE_1
nodeToSelect
:
"
#
id2
"
selectedNode
:
"
#
id2
"
}
{
url
:
PAGE_1
nodeToSelect
:
"
#
id3
"
selectedNode
:
"
#
id3
"
}
{
url
:
PAGE_1
nodeToSelect
:
"
#
id4
"
selectedNode
:
"
#
id4
"
}
{
url
:
PAGE_2
nodeToSelect
:
null
selectedNode
:
"
body
"
}
{
url
:
PAGE_1
nodeToSelect
:
"
#
id5
"
selectedNode
:
"
body
"
}
{
url
:
PAGE_2
nodeToSelect
:
null
selectedNode
:
"
body
"
}
]
;
add_task
(
async
function
(
)
{
const
{
inspector
}
=
await
openInspectorForURL
(
PAGE_1
)
;
for
(
const
{
url
nodeToSelect
selectedNode
}
of
TEST_DATA
)
{
if
(
nodeToSelect
)
{
info
(
"
Selecting
node
"
+
nodeToSelect
+
"
before
navigation
.
"
)
;
await
selectNode
(
nodeToSelect
inspector
)
;
}
await
navigateTo
(
url
)
;
const
nodeFront
=
await
getNodeFront
(
selectedNode
inspector
)
;
ok
(
nodeFront
"
Got
expected
node
front
"
)
;
is
(
inspector
.
selection
.
nodeFront
nodeFront
selectedNode
+
"
is
selected
after
navigation
.
"
)
;
}
}
)
;
