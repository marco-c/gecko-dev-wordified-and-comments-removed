"
use
strict
"
;
const
{
PSEUDO_CLASSES
}
=
require
(
"
devtools
/
shared
/
css
/
constants
"
)
;
const
TEST_URI
=
"
data
:
text
/
html
;
charset
=
UTF
-
8
"
+
"
pseudo
-
class
lock
node
menu
tests
"
+
"
<
div
>
test
div
<
/
div
>
"
;
const
PSEUDOS
=
PSEUDO_CLASSES
.
map
(
pseudo
=
>
pseudo
.
substr
(
1
)
)
;
add_task
(
async
function
(
)
{
const
{
inspector
testActor
}
=
await
openInspectorForURL
(
TEST_URI
)
;
await
selectNode
(
"
div
"
inspector
)
;
const
allMenuItems
=
openContextMenuAndGetAllItems
(
inspector
)
;
await
testMenuItems
(
testActor
allMenuItems
inspector
)
;
}
)
;
async
function
testMenuItems
(
testActor
allMenuItems
inspector
)
{
for
(
const
pseudo
of
PSEUDOS
)
{
const
menuItem
=
allMenuItems
.
find
(
item
=
>
item
.
id
=
=
=
"
node
-
menu
-
pseudo
-
"
+
pseudo
)
;
ok
(
menuItem
"
:
"
+
pseudo
+
"
menuitem
exists
"
)
;
is
(
menuItem
.
disabled
false
"
:
"
+
pseudo
+
"
menuitem
is
enabled
"
)
;
const
onPseudo
=
inspector
.
selection
.
once
(
"
pseudoclass
"
)
;
const
onRefresh
=
inspector
.
once
(
"
rule
-
view
-
refreshed
"
)
;
const
onMutations
=
once
(
inspector
.
walker
"
mutations
"
)
;
menuItem
.
click
(
)
;
await
onPseudo
;
await
onRefresh
;
await
onMutations
;
const
hasLock
=
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
:
{
pseudo
}
]
pseudoClass
=
>
{
const
element
=
content
.
document
.
querySelector
(
"
div
"
)
;
return
InspectorUtils
.
hasPseudoClassLock
(
element
pseudoClass
)
;
}
)
;
ok
(
hasLock
"
pseudo
-
class
lock
has
been
applied
"
)
;
}
}
