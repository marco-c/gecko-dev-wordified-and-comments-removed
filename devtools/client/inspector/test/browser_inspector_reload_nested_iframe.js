"
use
strict
"
;
const
NESTED_IFRAME_URL
=
https
:
/
/
example
.
com
/
document
-
builder
.
sjs
?
html
=
{
encodeURIComponent
(
"
<
h3
>
second
level
iframe
<
/
h3
>
"
)
}
&
delay
=
500
;
const
TEST_URI
=
data
:
text
/
html
;
charset
=
utf
-
8
<
h1
>
Top
-
level
<
/
h1
>
<
iframe
id
=
first
-
level
src
=
'
data
:
text
/
html
;
charset
=
utf
-
8
{
encodeURIComponent
(
<
h2
>
first
level
iframe
<
/
h2
>
<
iframe
id
=
second
-
level
src
=
"
{
NESTED_IFRAME_URL
}
"
>
<
/
iframe
>
)
}
'
>
<
/
iframe
>
;
add_task
(
async
function
(
)
{
const
{
inspector
}
=
await
openInspectorForURL
(
TEST_URI
)
;
await
selectNodeInFrames
(
[
"
iframe
#
first
-
level
"
"
iframe
#
second
-
level
"
"
h3
"
]
inspector
)
;
const
markupLoaded
=
inspector
.
once
(
"
markuploaded
"
)
;
info
(
"
Reloading
page
.
"
)
;
await
navigateTo
(
TEST_URI
)
;
info
(
"
Waiting
for
markupview
to
load
after
reload
.
"
)
;
await
markupLoaded
;
ok
(
true
"
The
markup
did
reload
fine
"
)
;
const
reloadedNodeFront
=
await
getNodeFrontInFrames
(
[
"
iframe
#
first
-
level
"
"
iframe
#
second
-
level
"
"
h3
"
]
inspector
)
;
is
(
inspector
.
selection
.
nodeFront
reloadedNodeFront
h3
selected
after
reload
)
;
}
)
;
