"
use
strict
"
;
const
TEST_URL
=
URL_ROOT
+
"
doc_inspector_highlighter_xbl
.
xul
"
;
add_task
(
async
function
(
)
{
let
{
inspector
toolbox
testActor
}
=
await
openInspectorForURL
(
TEST_URL
)
;
await
startPicker
(
toolbox
)
;
info
(
"
Selecting
the
scale
"
)
;
await
moveMouseOver
(
"
#
scale
"
)
;
await
doKeyPick
(
{
key
:
"
VK_RETURN
"
options
:
{
}
}
)
;
is
(
inspector
.
selection
.
nodeFront
.
className
"
scale
-
slider
"
"
The
.
scale
-
slider
inside
the
scale
was
selected
"
)
;
function
doKeyPick
(
msg
)
{
info
(
"
Key
pressed
.
Waiting
for
element
to
be
picked
"
)
;
testActor
.
synthesizeKey
(
msg
)
;
return
promise
.
all
(
[
inspector
.
selection
.
once
(
"
new
-
node
-
front
"
)
inspector
.
once
(
"
inspector
-
updated
"
)
]
)
;
}
function
moveMouseOver
(
selector
)
{
info
(
"
Waiting
for
element
"
+
selector
+
"
to
be
highlighted
"
)
;
testActor
.
synthesizeMouse
(
{
options
:
{
type
:
"
mousemove
"
}
center
:
true
selector
:
selector
}
)
;
return
inspector
.
toolbox
.
once
(
"
picker
-
node
-
hovered
"
)
;
}
}
)
;
