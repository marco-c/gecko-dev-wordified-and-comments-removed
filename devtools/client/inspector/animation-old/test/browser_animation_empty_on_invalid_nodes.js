"
use
strict
"
;
requestLongerTimeout
(
2
)
;
add_task
(
async
function
(
)
{
await
addTab
(
URL_ROOT
+
"
doc_simple_animation
.
html
"
)
;
let
{
inspector
panel
window
}
=
await
openAnimationInspector
(
)
;
let
{
document
}
=
window
;
info
(
"
Select
node
.
still
and
check
that
the
panel
is
empty
"
)
;
let
stillNode
=
await
getNodeFront
(
"
.
still
"
inspector
)
;
await
selectNodeAndWaitForAnimations
(
stillNode
inspector
)
;
is
(
panel
.
animationsTimelineComponent
.
animations
.
length
0
"
No
animation
players
stored
in
the
timeline
component
for
a
still
node
"
)
;
is
(
panel
.
animationsTimelineComponent
.
animationsEl
.
childNodes
.
length
0
"
No
animation
displayed
in
the
timeline
component
for
a
still
node
"
)
;
is
(
document
.
querySelector
(
"
#
error
-
type
"
)
.
textContent
ANIMATION_L10N
.
getStr
(
"
panel
.
invalidElementSelected
"
)
"
The
correct
error
message
is
displayed
"
)
;
info
(
"
Select
the
comment
text
node
and
check
that
the
panel
is
empty
"
)
;
let
commentNode
=
await
inspector
.
walker
.
previousSibling
(
stillNode
)
;
await
selectNodeAndWaitForAnimations
(
commentNode
inspector
)
;
is
(
panel
.
animationsTimelineComponent
.
animations
.
length
0
"
No
animation
players
stored
in
the
timeline
component
for
a
text
node
"
)
;
is
(
panel
.
animationsTimelineComponent
.
animationsEl
.
childNodes
.
length
0
"
No
animation
displayed
in
the
timeline
component
for
a
text
node
"
)
;
is
(
document
.
querySelector
(
"
#
error
-
type
"
)
.
textContent
ANIMATION_L10N
.
getStr
(
"
panel
.
invalidElementSelected
"
)
"
The
correct
error
message
is
displayed
"
)
;
}
)
;
