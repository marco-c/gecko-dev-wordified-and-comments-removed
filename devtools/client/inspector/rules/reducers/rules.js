"
use
strict
"
;
const
{
UPDATE_RULES
}
=
require
(
"
.
.
/
actions
/
index
"
)
;
const
INITIAL_RULES
=
{
rules
:
[
]
}
;
function
getDeclarationState
(
declaration
ruleId
)
{
return
{
computedProperties
:
declaration
.
computedProperties
id
:
declaration
.
id
isEnabled
:
declaration
.
enabled
isKnownProperty
:
declaration
.
isKnownProperty
isOverridden
:
!
!
declaration
.
overridden
name
:
declaration
.
name
priority
:
declaration
.
priority
ruleId
value
:
declaration
.
value
}
;
}
function
getRuleState
(
rule
)
{
return
{
declarations
:
rule
.
declarations
.
map
(
declaration
=
>
getDeclarationState
(
declaration
rule
.
domRule
.
actorID
)
)
id
:
rule
.
domRule
.
actorID
inheritance
:
rule
.
inheritance
isUnmatched
:
rule
.
isUnmatched
isUserAgentStyle
:
rule
.
isSystem
keyframesRule
:
rule
.
keyframesRule
pseudoElement
:
rule
.
pseudoElement
selector
:
rule
.
selector
sourceLink
:
rule
.
sourceLink
type
:
rule
.
domRule
.
type
}
;
}
const
reducers
=
{
[
UPDATE_RULES
]
(
_
{
rules
}
)
{
return
{
rules
:
rules
.
map
(
rule
=
>
getRuleState
(
rule
)
)
}
;
}
}
;
module
.
exports
=
function
(
rules
=
INITIAL_RULES
action
)
{
const
reducer
=
reducers
[
action
.
type
]
;
if
(
!
reducer
)
{
return
rules
;
}
return
reducer
(
rules
action
)
;
}
;
