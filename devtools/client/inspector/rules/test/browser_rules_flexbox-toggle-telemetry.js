"
use
strict
"
;
const
TEST_URI
=
<
style
type
=
'
text
/
css
'
>
#
flex
{
display
:
flex
;
}
<
/
style
>
<
div
id
=
"
flex
"
>
<
/
div
>
;
add_task
(
async
function
(
)
{
await
addTab
(
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
encodeURIComponent
(
TEST_URI
)
)
;
startTelemetry
(
)
;
const
{
inspector
view
}
=
await
openRuleView
(
)
;
const
{
highlighters
}
=
view
;
await
selectNode
(
"
#
flex
"
inspector
)
;
const
container
=
getRuleViewProperty
(
view
"
#
flex
"
"
display
"
)
.
valueSpan
;
const
flexboxToggle
=
container
.
querySelector
(
"
.
ruleview
-
flex
"
)
;
info
(
"
Toggling
ON
the
flexbox
highlighter
from
the
rule
-
view
.
"
)
;
const
onHighlighterShown
=
highlighters
.
once
(
"
flexbox
-
highlighter
-
shown
"
)
;
flexboxToggle
.
click
(
)
;
await
onHighlighterShown
;
info
(
"
Toggling
OFF
the
flexbox
highlighter
from
the
rule
-
view
.
"
)
;
const
onHighlighterHidden
=
highlighters
.
once
(
"
flexbox
-
highlighter
-
hidden
"
)
;
flexboxToggle
.
click
(
)
;
await
onHighlighterHidden
;
checkResults
(
)
;
}
)
;
function
checkResults
(
)
{
checkTelemetry
(
"
devtools
.
rules
.
flexboxhighlighter
.
opened
"
"
"
1
"
scalar
"
)
;
checkTelemetry
(
"
DEVTOOLS_FLEXBOX_HIGHLIGHTER_TIME_ACTIVE_SECONDS
"
"
"
null
"
hasentries
"
)
;
}
