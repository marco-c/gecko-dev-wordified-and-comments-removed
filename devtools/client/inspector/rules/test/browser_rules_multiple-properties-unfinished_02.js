"
use
strict
"
;
const
TEST_URI
=
"
<
div
>
Test
Element
<
/
div
>
"
;
add_task
(
function
*
(
)
{
yield
addTab
(
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
encodeURIComponent
(
TEST_URI
)
)
;
let
{
inspector
view
}
=
yield
openRuleView
(
)
;
yield
selectNode
(
"
div
"
inspector
)
;
let
ruleEditor
=
getRuleViewRuleEditor
(
view
0
)
;
let
onMutation
=
inspector
.
once
(
"
markupmutation
"
)
;
let
onRuleViewChanged
=
view
.
once
(
"
ruleview
-
changed
"
)
;
yield
createNewRuleViewProperty
(
ruleEditor
"
width
:
100px
;
heig
"
)
;
yield
onMutation
;
yield
onRuleViewChanged
;
is
(
ruleEditor
.
rule
.
textProps
.
length
2
"
Should
have
created
a
new
text
property
.
"
)
;
is
(
ruleEditor
.
propertyList
.
children
.
length
2
"
Should
have
created
a
property
editor
.
"
)
;
onMutation
=
inspector
.
once
(
"
markupmutation
"
)
;
onRuleViewChanged
=
view
.
once
(
"
ruleview
-
changed
"
)
;
let
valueEditor
=
ruleEditor
.
propertyList
.
children
[
1
]
.
querySelector
(
"
input
"
)
;
valueEditor
.
value
=
"
10px
;
background
:
orangered
;
color
:
black
;
"
;
EventUtils
.
synthesizeKey
(
"
VK_RETURN
"
{
}
view
.
styleWindow
)
;
yield
onMutation
;
yield
onRuleViewChanged
;
is
(
ruleEditor
.
rule
.
textProps
.
length
4
"
Should
have
added
the
changed
value
.
"
)
;
is
(
ruleEditor
.
propertyList
.
children
.
length
5
"
Should
have
added
the
changed
value
editor
.
"
)
;
is
(
ruleEditor
.
rule
.
textProps
[
0
]
.
name
"
width
"
"
Should
have
correct
property
name
"
)
;
is
(
ruleEditor
.
rule
.
textProps
[
0
]
.
value
"
100px
"
"
Should
have
correct
property
value
"
)
;
is
(
ruleEditor
.
rule
.
textProps
[
1
]
.
name
"
heig
"
"
Should
have
correct
property
name
"
)
;
is
(
ruleEditor
.
rule
.
textProps
[
1
]
.
value
"
10px
"
"
Should
have
correct
property
value
"
)
;
is
(
ruleEditor
.
rule
.
textProps
[
2
]
.
name
"
background
"
"
Should
have
correct
property
name
"
)
;
is
(
ruleEditor
.
rule
.
textProps
[
2
]
.
value
"
orangered
"
"
Should
have
correct
property
value
"
)
;
is
(
ruleEditor
.
rule
.
textProps
[
3
]
.
name
"
color
"
"
Should
have
correct
property
name
"
)
;
is
(
ruleEditor
.
rule
.
textProps
[
3
]
.
value
"
black
"
"
Should
have
correct
property
value
"
)
;
}
)
;
