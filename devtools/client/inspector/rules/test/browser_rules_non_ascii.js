"
use
strict
"
;
const
SHEET_TEXT
=
"
/
*
*
/
#
q
{
color
:
orange
}
"
;
const
HTML
=
<
style
type
=
"
text
/
css
"
>
\
n
{
SHEET_TEXT
}
<
/
style
>
<
div
id
=
"
q
"
>
Styled
Node
<
/
div
>
;
const
TEST_URI
=
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
encodeURIComponent
(
HTML
)
;
add_task
(
async
function
(
)
{
await
addTab
(
TEST_URI
)
;
const
{
inspector
view
}
=
await
openRuleView
(
)
;
await
selectNode
(
"
#
q
"
inspector
)
;
const
elementStyle
=
view
.
_elementStyle
;
const
expected
=
[
{
name
:
"
color
"
overridden
:
false
}
]
;
const
rule
=
elementStyle
.
rules
[
1
]
;
for
(
let
i
=
0
;
i
<
expected
.
length
;
+
+
i
)
{
const
prop
=
rule
.
textProps
[
i
]
;
is
(
prop
.
name
expected
[
i
]
.
name
Got
expected
property
name
{
prop
.
name
}
)
;
is
(
prop
.
overridden
expected
[
i
]
.
overridden
Got
expected
overridden
value
{
prop
.
overridden
}
)
;
}
}
)
;
