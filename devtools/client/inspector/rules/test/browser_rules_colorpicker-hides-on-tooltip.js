"
use
strict
"
;
const
TEST_URI
=
<
style
type
=
"
text
/
css
"
>
body
{
color
:
red
;
background
-
color
:
#
ededed
;
background
-
image
:
url
(
chrome
:
/
/
global
/
skin
/
icons
/
warning
-
64
.
png
)
;
border
:
2em
solid
rgba
(
120
120
120
.
5
)
;
}
<
/
style
>
Testing
the
color
picker
tooltip
!
;
add_task
(
async
function
(
)
{
await
addTab
(
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
encodeURIComponent
(
TEST_URI
)
)
;
let
{
view
}
=
await
openRuleView
(
)
;
let
swatch
=
getRuleViewProperty
(
view
"
body
"
"
color
"
)
.
valueSpan
.
querySelector
(
"
.
ruleview
-
colorswatch
"
)
;
let
bgImageSpan
=
getRuleViewProperty
(
view
"
body
"
"
background
-
image
"
)
.
valueSpan
;
let
uriSpan
=
bgImageSpan
.
querySelector
(
"
.
theme
-
link
"
)
;
let
colorPicker
=
view
.
tooltips
.
getTooltip
(
"
colorPicker
"
)
;
info
(
"
Showing
the
color
picker
tooltip
by
clicking
on
the
color
swatch
"
)
;
let
onColorPickerReady
=
colorPicker
.
once
(
"
ready
"
)
;
swatch
.
click
(
)
;
await
onColorPickerReady
;
info
(
"
Now
showing
the
image
preview
tooltip
to
hide
the
color
picker
"
)
;
let
onHidden
=
colorPicker
.
tooltip
.
once
(
"
hidden
"
)
;
let
onRuleViewChanged
=
view
.
once
(
"
ruleview
-
changed
"
)
;
let
previewTooltip
=
await
assertShowPreviewTooltip
(
view
uriSpan
)
;
await
onHidden
;
await
onRuleViewChanged
;
await
assertTooltipHiddenOnMouseOut
(
previewTooltip
uriSpan
)
;
ok
(
true
"
The
color
picker
closed
when
the
image
preview
tooltip
appeared
"
)
;
}
)
;
