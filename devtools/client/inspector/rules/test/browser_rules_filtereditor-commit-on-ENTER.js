"
use
strict
"
;
const
TEST_URL
=
URL_ROOT
+
"
doc_filter
.
html
"
;
add_task
(
function
*
(
)
{
yield
addTab
(
TEST_URL
)
;
let
{
view
}
=
yield
openRuleView
(
)
;
info
(
"
Get
the
filter
swatch
element
"
)
;
let
swatch
=
getRuleViewProperty
(
view
"
body
"
"
filter
"
)
.
valueSpan
.
querySelector
(
"
.
ruleview
-
filterswatch
"
)
;
info
(
"
Click
on
the
filter
swatch
element
"
)
;
let
onRuleViewChanged
=
view
.
once
(
"
ruleview
-
changed
"
)
;
swatch
.
click
(
)
;
yield
onRuleViewChanged
;
info
(
"
Get
the
cssfilter
widget
instance
"
)
;
let
filterTooltip
=
view
.
tooltips
.
filterEditor
;
let
widget
=
yield
filterTooltip
.
widget
;
info
(
"
Set
a
new
value
in
the
cssfilter
widget
"
)
;
onRuleViewChanged
=
view
.
once
(
"
ruleview
-
changed
"
)
;
widget
.
setCssValue
(
"
blur
(
2px
)
"
)
;
yield
waitForComputedStyleProperty
(
"
body
"
null
"
filter
"
"
blur
(
2px
)
"
)
;
yield
onRuleViewChanged
;
ok
(
true
"
Changes
previewed
on
the
element
"
)
;
info
(
"
Press
RETURN
to
commit
changes
"
)
;
onRuleViewChanged
=
waitForNEvents
(
view
"
ruleview
-
changed
"
2
)
;
EventUtils
.
sendKey
(
"
RETURN
"
widget
.
styleWindow
)
;
yield
onRuleViewChanged
;
is
(
(
yield
getComputedStyleProperty
(
"
body
"
null
"
filter
"
)
)
"
blur
(
2px
)
"
"
The
elemenet
'
s
filter
was
kept
after
RETURN
"
)
;
}
)
;
