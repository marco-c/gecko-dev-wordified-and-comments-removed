"
use
strict
"
;
class
CurrentTimeTimer
{
constructor
(
timeScale
shouldStopAfterEndTime
win
onUpdated
)
{
this
.
baseCurrentTime
=
timeScale
.
getCurrentTime
(
)
;
this
.
endTime
=
timeScale
.
getDuration
(
)
;
this
.
timerStartTime
=
win
.
performance
.
now
(
)
;
this
.
shouldStopAfterEndTime
=
shouldStopAfterEndTime
;
this
.
onUpdated
=
onUpdated
;
this
.
win
=
win
;
this
.
next
=
this
.
next
.
bind
(
this
)
;
}
destroy
(
)
{
this
.
stop
(
)
;
this
.
onUpdated
=
null
;
this
.
win
=
null
;
}
next
(
)
{
if
(
this
.
doStop
)
{
return
;
}
const
currentTime
=
this
.
baseCurrentTime
+
this
.
win
.
performance
.
now
(
)
-
this
.
timerStartTime
;
if
(
this
.
endTime
<
currentTime
&
&
this
.
shouldStopAfterEndTime
)
{
this
.
onUpdated
(
this
.
endTime
true
)
;
return
;
}
this
.
onUpdated
(
currentTime
)
;
this
.
win
.
requestAnimationFrame
(
this
.
next
)
;
}
start
(
)
{
this
.
next
(
)
;
}
stop
(
)
{
this
.
doStop
=
true
;
}
}
module
.
exports
=
CurrentTimeTimer
;
