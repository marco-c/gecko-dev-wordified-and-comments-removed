"
use
strict
"
;
const
OPTIMAL_TIME_INTERVAL_MAX_ITERS
=
100
;
const
OPTIMAL_TIME_INTERVAL_MULTIPLES
=
[
1
2
.
5
5
]
;
function
findOptimalTimeInterval
(
minTimeInterval
)
{
if
(
!
minTimeInterval
)
{
return
0
;
}
let
numIters
=
0
;
let
multiplier
=
1
;
let
interval
;
while
(
true
)
{
for
(
let
i
=
0
;
i
<
OPTIMAL_TIME_INTERVAL_MULTIPLES
.
length
;
i
+
+
)
{
interval
=
OPTIMAL_TIME_INTERVAL_MULTIPLES
[
i
]
*
multiplier
;
if
(
minTimeInterval
<
=
interval
)
{
return
interval
;
}
}
if
(
+
+
numIters
>
OPTIMAL_TIME_INTERVAL_MAX_ITERS
)
{
return
interval
;
}
multiplier
*
=
10
;
}
}
function
hasAnimationIterationCountInfinite
(
animations
)
{
return
animations
.
some
(
(
{
state
}
)
=
>
!
state
.
iterationCount
)
;
}
function
hasRunningAnimation
(
animations
)
{
return
animations
.
some
(
(
{
state
}
)
=
>
state
.
playState
=
=
=
"
running
"
)
;
}
exports
.
findOptimalTimeInterval
=
findOptimalTimeInterval
;
exports
.
hasAnimationIterationCountInfinite
=
hasAnimationIterationCountInfinite
;
exports
.
hasRunningAnimation
=
hasRunningAnimation
;
