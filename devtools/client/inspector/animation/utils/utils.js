"
use
strict
"
;
function
isAllTimingEffectEqual
(
animationsA
animationsB
)
{
if
(
animationsA
.
length
!
=
=
animationsB
.
length
)
{
return
false
;
}
for
(
let
i
=
0
;
i
<
animationsA
.
length
;
i
+
+
)
{
if
(
!
isTimingEffectEqual
(
animationsA
[
i
]
.
state
animationsB
[
i
]
.
state
)
)
{
return
false
;
}
}
return
true
;
}
function
isTimingEffectEqual
(
stateA
stateB
)
{
return
stateA
.
delay
=
=
=
stateB
.
delay
&
&
stateA
.
direction
=
=
=
stateB
.
direction
&
&
stateA
.
duration
=
=
=
stateB
.
duration
&
&
stateA
.
easing
=
=
=
stateB
.
easing
&
&
stateA
.
endDelay
=
=
=
stateB
.
endDelay
&
&
stateA
.
fill
=
=
=
stateB
.
fill
&
&
stateA
.
iterationCount
=
=
=
stateB
.
iterationCount
&
&
stateA
.
iterationStart
=
=
=
stateB
.
iterationStart
;
}
module
.
exports
.
isAllTimingEffectEqual
=
isAllTimingEffectEqual
;
module
.
exports
.
isTimingEffectEqual
=
isTimingEffectEqual
;
