"
use
strict
"
;
const
{
connect
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
redux
"
)
;
const
{
createFactory
PureComponent
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
dom
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
AnimationDetailHeader
=
createFactory
(
require
(
"
.
/
AnimationDetailHeader
"
)
)
;
const
AnimatedPropertyListContainer
=
createFactory
(
require
(
"
.
/
AnimatedPropertyListContainer
"
)
)
;
class
AnimationDetailContainer
extends
PureComponent
{
static
get
propTypes
(
)
{
return
{
animation
:
PropTypes
.
object
.
isRequired
getAnimatedPropertyMap
:
PropTypes
.
func
.
isRequired
}
;
}
render
(
)
{
const
{
animation
getAnimatedPropertyMap
}
=
this
.
props
;
return
dom
.
div
(
{
className
:
"
animation
-
detail
-
container
"
}
animation
?
AnimationDetailHeader
(
{
animation
}
)
:
null
animation
?
AnimatedPropertyListContainer
(
{
animation
getAnimatedPropertyMap
}
)
:
null
)
;
}
}
const
mapStateToProps
=
state
=
>
{
return
{
animation
:
state
.
animations
.
selectedAnimation
}
;
}
;
module
.
exports
=
connect
(
mapStateToProps
)
(
AnimationDetailContainer
)
;
