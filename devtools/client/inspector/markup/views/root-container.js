"
use
strict
"
;
function
RootContainer
(
markupView
node
)
{
this
.
doc
=
markupView
.
doc
;
this
.
elt
=
this
.
doc
.
createElement
(
"
ul
"
)
;
this
.
elt
.
setAttribute
(
"
role
"
"
tree
"
)
;
this
.
elt
.
setAttribute
(
"
tabindex
"
"
0
"
)
;
this
.
elt
.
setAttribute
(
"
aria
-
dropeffect
"
"
none
"
)
;
this
.
elt
.
container
=
this
;
this
.
children
=
this
.
elt
;
this
.
node
=
node
;
this
.
toString
=
(
)
=
>
"
[
root
container
]
"
;
}
RootContainer
.
prototype
=
{
hasChildren
:
true
expanded
:
true
update
(
)
{
}
destroy
(
)
{
}
getChildContainers
(
)
{
return
[
.
.
.
this
.
children
.
children
]
.
filter
(
node
=
>
node
.
container
)
.
map
(
node
=
>
node
.
container
)
;
}
setExpanded
(
)
{
}
setChildrenRole
(
)
{
}
updateLevel
(
)
{
}
isSlotted
(
)
{
return
false
;
}
}
;
module
.
exports
=
RootContainer
;
