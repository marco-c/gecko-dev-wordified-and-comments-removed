"
use
strict
"
;
function
testNavigationState
(
inspector
elms
focused
activedescendant
)
{
const
doc
=
inspector
.
markup
.
doc
;
const
id
=
activedescendant
.
getAttribute
(
"
id
"
)
;
is
(
doc
.
activeElement
focused
Keyboard
focus
should
be
set
to
{
focused
}
)
;
is
(
elms
.
root
.
elt
.
getAttribute
(
"
aria
-
activedescendant
"
)
id
Active
descendant
should
be
set
to
{
id
}
)
;
}
async
function
runAccessibilityNavigationTest
(
inspector
elms
{
desc
key
options
focused
activedescendant
waitFor
}
)
{
info
(
desc
)
;
const
markup
=
inspector
.
markup
;
const
doc
=
markup
.
doc
;
const
win
=
doc
.
defaultView
;
let
updated
;
if
(
waitFor
)
{
updated
=
waitFor
=
=
=
"
inspector
-
updated
"
?
inspector
.
once
(
waitFor
)
:
markup
.
once
(
waitFor
)
;
}
else
{
updated
=
Promise
.
resolve
(
)
;
}
EventUtils
.
synthesizeKey
(
key
options
win
)
;
await
updated
;
const
focusedElement
=
lookupPath
(
elms
focused
)
;
const
activeDescendantElement
=
lookupPath
(
elms
activedescendant
)
;
testNavigationState
(
inspector
elms
focusedElement
activeDescendantElement
)
;
}
