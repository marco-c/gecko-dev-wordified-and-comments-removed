"
use
strict
"
;
const
HTML
=
<
div
>
<
p
id
=
"
container
"
>
<
span
>
1
<
/
span
>
<
span
id
=
"
after
-
whitespace
"
>
2
<
/
span
>
<
/
p
>
<
/
div
>
;
const
TEST_URL
=
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
encodeURIComponent
(
HTML
)
;
add_task
(
function
*
(
)
{
let
{
inspector
}
=
yield
openInspectorForURL
(
TEST_URL
)
;
info
(
"
Test
deleting
a
node
that
will
modify
the
whitespace
nodes
rendered
in
the
"
+
"
markup
view
.
"
)
;
info
(
"
Select
node
#
after
-
whitespace
and
make
sure
it
is
focused
"
)
;
yield
selectNode
(
"
#
after
-
whitespace
"
inspector
)
;
yield
clickContainer
(
"
#
after
-
whitespace
"
inspector
)
;
info
(
"
Delete
the
node
with
the
delete
key
"
)
;
let
mutated
=
inspector
.
once
(
"
markupmutation
"
)
;
EventUtils
.
sendKey
(
"
delete
"
inspector
.
panelWin
)
;
yield
Promise
.
all
(
[
mutated
inspector
.
once
(
"
inspector
-
updated
"
)
]
)
;
let
parentNodeFront
=
yield
inspector
.
selection
.
nodeFront
.
parentNode
(
)
;
let
nodeFront
=
yield
getNodeFront
(
"
#
container
"
inspector
)
;
is
(
parentNodeFront
nodeFront
"
Selection
is
as
expected
after
deletion
"
)
;
info
(
"
Check
that
the
node
was
really
removed
"
)
;
let
node
=
yield
getNodeFront
(
"
#
after
-
whitespace
"
inspector
)
;
ok
(
!
node
"
The
node
can
'
t
be
found
in
the
page
anymore
"
)
;
info
(
"
Undo
the
deletion
to
restore
the
original
markup
"
)
;
yield
undoChange
(
inspector
)
;
node
=
yield
getNodeFront
(
"
#
after
-
whitespace
"
inspector
)
;
ok
(
node
"
The
node
is
back
"
)
;
}
)
;
