"
use
strict
"
;
const
TEST_URL
=
URL_ROOT
+
"
doc_markup_search
.
html
"
;
add_task
(
async
function
(
)
{
let
{
inspector
}
=
await
openInspectorForURL
(
TEST_URL
)
;
let
container
=
await
getContainerForSelector
(
"
em
"
inspector
true
)
;
ok
(
!
container
"
The
<
em
>
tag
isn
'
t
present
yet
in
the
markup
-
view
"
)
;
info
(
"
searching
for
the
innermost
child
:
<
em
>
"
)
;
await
searchFor
(
"
em
"
inspector
)
;
container
=
await
getContainerForSelector
(
"
em
"
inspector
)
;
ok
(
container
"
The
<
em
>
tag
is
now
imported
in
the
markup
-
view
"
)
;
let
nodeFront
=
await
getNodeFront
(
"
em
"
inspector
)
;
is
(
inspector
.
selection
.
nodeFront
nodeFront
"
The
<
em
>
tag
is
the
currently
selected
node
"
)
;
info
(
"
searching
for
other
nodes
too
"
)
;
for
(
let
node
of
[
"
span
"
"
li
"
"
ul
"
]
)
{
await
searchFor
(
node
inspector
)
;
nodeFront
=
await
getNodeFront
(
node
inspector
)
;
is
(
inspector
.
selection
.
nodeFront
nodeFront
"
The
<
"
+
node
+
"
>
tag
is
the
currently
selected
node
"
)
;
}
}
)
;
async
function
searchFor
(
selector
inspector
)
{
let
onNewNodeFront
=
inspector
.
selection
.
once
(
"
new
-
node
-
front
"
)
;
searchUsingSelectorSearch
(
selector
inspector
)
;
await
onNewNodeFront
;
await
inspector
.
once
(
"
inspector
-
updated
"
)
;
}
