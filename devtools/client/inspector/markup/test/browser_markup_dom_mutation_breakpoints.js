"
use
strict
"
;
async
function
waitFor
(
condition
message
=
"
waitFor
"
interval
=
10
maxTries
=
500
)
{
await
BrowserTestUtils
.
waitForCondition
(
condition
message
interval
maxTries
)
;
return
condition
(
)
;
}
function
toggleMutationBreakpoint
(
inspector
)
{
const
allMenuItems
=
openContextMenuAndGetAllItems
(
inspector
)
;
const
attributeMenuItem
=
allMenuItems
.
find
(
(
{
id
}
)
=
>
id
=
=
=
"
node
-
menu
-
mutation
-
breakpoint
-
attribute
"
)
;
attributeMenuItem
.
click
(
)
;
}
async
function
waitForMutationMarkerStyle
(
win
node
value
)
{
return
waitFor
(
(
)
=
>
win
.
getComputedStyle
(
node
)
.
display
=
=
=
value
)
;
}
add_task
(
async
function
(
)
{
const
{
inspector
}
=
await
openInspectorForURL
(
"
data
:
text
/
html
;
charset
=
utf
-
8
<
h1
>
foo
<
/
h1
>
<
span
>
bar
<
/
span
>
"
)
;
const
{
win
}
=
inspector
.
markup
;
await
selectNode
(
"
span
"
inspector
)
;
toggleMutationBreakpoint
(
inspector
)
;
const
span
=
await
getContainerForSelector
(
"
span
"
inspector
)
;
const
mutationMarker
=
span
.
tagLine
.
querySelector
(
"
.
markup
-
tag
-
mutation
-
marker
"
)
;
await
waitForMutationMarkerStyle
(
win
mutationMarker
"
block
"
)
;
ok
(
true
"
DOM
Mutation
marker
is
displaying
"
)
;
toggleMutationBreakpoint
(
inspector
)
;
await
waitForMutationMarkerStyle
(
win
mutationMarker
"
none
"
)
;
ok
(
true
"
DOM
Mutation
marker
is
hidden
"
)
;
}
)
;
