"
use
strict
"
;
const
{
getFormatStr
getStr
}
=
require
(
"
.
/
l10n
"
)
;
function
getSourceHash
(
source
)
{
const
{
type
index
href
=
"
inline
"
}
=
source
;
return
{
type
}
{
index
}
{
href
}
;
}
function
getRuleHash
(
ruleData
)
{
const
{
selector
=
"
"
ancestors
=
[
]
ruleIndex
}
=
ruleData
;
const
atRules
=
ancestors
.
reduce
(
(
acc
rule
)
=
>
{
acc
+
=
{
rule
.
typeName
}
{
(
rule
.
conditionText
|
|
rule
.
name
|
|
rule
.
keyText
)
}
;
return
acc
;
}
"
"
)
;
return
{
atRules
}
{
selector
}
{
ruleIndex
}
;
}
function
getSourceForDisplay
(
source
)
{
let
href
;
switch
(
source
.
type
)
{
case
"
element
"
:
href
=
getStr
(
"
changes
.
elementStyleLabel
"
)
;
break
;
case
"
stylesheet
"
:
if
(
source
.
href
)
{
const
url
=
new
URL
(
source
.
href
)
;
href
=
url
.
pathname
.
substring
(
url
.
pathname
.
lastIndexOf
(
"
/
"
)
+
1
)
;
}
else
{
href
=
getFormatStr
(
"
changes
.
inlineStyleSheetLabel
"
#
{
source
.
index
}
)
;
}
break
;
}
return
href
;
}
module
.
exports
.
getSourceForDisplay
=
getSourceForDisplay
;
module
.
exports
.
getSourceHash
=
getSourceHash
;
module
.
exports
.
getRuleHash
=
getRuleHash
;
