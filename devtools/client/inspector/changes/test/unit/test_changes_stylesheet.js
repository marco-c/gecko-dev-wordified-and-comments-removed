"
use
strict
"
;
const
{
getChangesStylesheet
}
=
require
(
"
devtools
/
client
/
inspector
/
changes
/
selectors
/
changes
"
)
;
const
{
CHANGES_STATE
}
=
require
(
"
resource
:
/
/
test
/
mocks
"
)
;
const
STYLESHEET_FOR_ANCESTOR
=
/
*
Inline
#
0
|
http
:
/
/
localhost
:
5000
/
at
-
rules
-
nested
.
html
*
/
media
(
min
-
width
:
50em
)
{
supports
(
display
:
grid
)
{
body
{
/
*
background
-
color
:
royalblue
;
*
/
background
-
color
:
red
;
}
}
}
.
trim
(
)
;
const
STYLESHEET_FOR_DESCENDANT
=
/
*
Inline
#
0
|
http
:
/
/
localhost
:
5000
/
at
-
rules
-
nested
.
html
*
/
body
{
/
*
background
-
color
:
royalblue
;
*
/
background
-
color
:
red
;
}
.
trim
(
)
;
add_test
(
(
)
=
>
{
info
(
"
Check
stylesheet
generated
for
the
first
ancestor
in
the
CSS
rule
tree
.
"
)
;
equal
(
getChangesStylesheet
(
CHANGES_STATE
)
STYLESHEET_FOR_ANCESTOR
"
Stylesheet
includes
all
ancestors
.
"
)
;
info
(
"
Check
stylesheet
generated
for
the
last
descendant
in
the
CSS
rule
tree
.
"
)
;
const
filter
=
{
sourceIds
:
[
"
source1
"
]
ruleIds
:
[
"
rule3
"
]
}
;
equal
(
getChangesStylesheet
(
CHANGES_STATE
filter
)
STYLESHEET_FOR_DESCENDANT
"
Stylesheet
includes
just
descendant
.
"
)
;
run_next_test
(
)
;
}
)
;
