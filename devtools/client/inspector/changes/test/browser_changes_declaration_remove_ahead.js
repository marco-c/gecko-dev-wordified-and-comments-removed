"
use
strict
"
;
const
TEST_URI
=
<
style
type
=
'
text
/
css
'
>
div
{
color
:
red
;
display
:
block
;
}
<
/
style
>
<
div
>
<
/
div
>
;
add_task
(
async
function
(
)
{
await
addTab
(
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
encodeURIComponent
(
TEST_URI
)
)
;
const
{
inspector
view
:
ruleView
}
=
await
openRuleView
(
)
;
const
{
document
:
doc
store
}
=
selectChangesView
(
inspector
)
;
await
selectNode
(
"
div
"
inspector
)
;
const
prop1
=
getTextProperty
(
ruleView
1
{
color
:
"
red
"
}
)
;
const
prop2
=
getTextProperty
(
ruleView
1
{
display
:
"
block
"
}
)
;
let
onTrackChange
=
waitUntilAction
(
store
"
TRACK_CHANGE
"
)
;
info
(
"
Change
the
second
declaration
"
)
;
await
setProperty
(
ruleView
prop2
"
grid
"
)
;
await
onTrackChange
;
onTrackChange
=
waitUntilAction
(
store
"
TRACK_CHANGE
"
)
;
info
(
"
Remove
the
first
declaration
"
)
;
await
removeProperty
(
ruleView
prop1
)
;
await
onTrackChange
;
onTrackChange
=
waitUntilAction
(
store
"
TRACK_CHANGE
"
)
;
info
(
"
Change
the
second
declaration
again
"
)
;
await
setProperty
(
ruleView
prop2
"
flex
"
)
;
info
(
"
Wait
for
change
to
be
tracked
"
)
;
await
onTrackChange
;
const
removeDecl
=
getRemovedDeclarations
(
doc
)
;
const
addDecl
=
getAddedDeclarations
(
doc
)
;
is
(
removeDecl
.
length
2
"
Two
declarations
tracked
as
removed
"
)
;
is
(
addDecl
.
length
1
"
One
declaration
tracked
as
added
"
)
;
is
(
addDecl
[
0
]
.
property
"
display
"
"
Added
declaration
has
updated
property
name
"
)
;
is
(
addDecl
[
0
]
.
value
"
flex
"
"
Added
declaration
has
updated
property
value
"
)
;
}
)
;
