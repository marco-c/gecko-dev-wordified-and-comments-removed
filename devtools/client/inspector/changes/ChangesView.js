"
use
strict
"
;
const
{
createFactory
createElement
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
Provider
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
redux
"
)
;
const
ChangesApp
=
createFactory
(
require
(
"
.
/
components
/
ChangesApp
"
)
)
;
const
{
resetChanges
}
=
require
(
"
.
/
actions
/
changes
"
)
;
class
ChangesView
{
constructor
(
inspector
)
{
this
.
inspector
=
inspector
;
this
.
store
=
this
.
inspector
.
store
;
this
.
destroy
=
this
.
destroy
.
bind
(
this
)
;
this
.
init
(
)
;
}
init
(
)
{
const
changesApp
=
ChangesApp
(
{
}
)
;
this
.
provider
=
createElement
(
Provider
{
id
:
"
changesview
"
key
:
"
changesview
"
store
:
this
.
store
}
changesApp
)
;
this
.
inspector
.
target
.
once
(
"
will
-
navigate
"
this
.
destroy
)
;
}
destroy
(
)
{
this
.
store
.
dispatch
(
resetChanges
(
)
)
;
this
.
inspector
=
null
;
this
.
store
=
null
;
}
}
module
.
exports
=
ChangesView
;
