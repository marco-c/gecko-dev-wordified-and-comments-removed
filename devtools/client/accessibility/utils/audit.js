"
use
strict
"
;
class
CombinedProgress
{
constructor
(
{
onProgress
totalFrames
}
)
{
this
.
onProgress
=
onProgress
;
this
.
totalFrames
=
totalFrames
;
this
.
combinedProgress
=
new
Map
(
)
;
}
onProgressForWalker
(
walker
progress
)
{
this
.
combinedProgress
.
set
(
walker
progress
)
;
if
(
this
.
combinedProgress
.
size
<
this
.
totalFrames
)
{
return
;
}
let
combinedTotal
=
0
;
let
combinedCompleted
=
0
;
for
(
const
{
completed
total
}
of
this
.
combinedProgress
.
values
(
)
)
{
combinedTotal
+
=
total
;
combinedCompleted
+
=
completed
;
}
this
.
onProgress
(
{
total
:
combinedTotal
percentage
:
Math
.
round
(
(
combinedCompleted
/
combinedTotal
)
*
100
)
}
)
;
}
}
exports
.
CombinedProgress
=
CombinedProgress
;
exports
.
isFiltered
=
filters
=
>
Object
.
values
(
filters
)
.
some
(
active
=
>
active
)
;
