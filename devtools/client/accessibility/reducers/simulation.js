"
use
strict
"
;
const
{
accessibility
:
{
SIMULATION_TYPE
}
}
=
require
(
"
devtools
/
shared
/
constants
"
)
;
const
{
SIMULATE
}
=
require
(
"
devtools
/
client
/
accessibility
/
constants
"
)
;
function
getInitialState
(
)
{
return
{
[
SIMULATION_TYPE
.
ACHROMATOPSIA
]
:
false
[
SIMULATION_TYPE
.
PROTANOPIA
]
:
false
[
SIMULATION_TYPE
.
DEUTERANOPIA
]
:
false
[
SIMULATION_TYPE
.
TRITANOPIA
]
:
false
[
SIMULATION_TYPE
.
CONTRAST_LOSS
]
:
false
}
;
}
function
simulation
(
state
=
getInitialState
(
)
action
)
{
switch
(
action
.
type
)
{
case
SIMULATE
:
if
(
action
.
error
)
{
console
.
warn
(
"
Error
running
simulation
"
action
.
error
)
;
return
state
;
}
const
simTypes
=
action
.
simTypes
;
if
(
simTypes
.
length
=
=
=
0
)
{
return
getInitialState
(
)
;
}
const
updatedState
=
getInitialState
(
)
;
simTypes
.
forEach
(
simType
=
>
{
updatedState
[
simType
]
=
true
;
}
)
;
return
updatedState
;
default
:
return
state
;
}
}
exports
.
simulation
=
simulation
;
