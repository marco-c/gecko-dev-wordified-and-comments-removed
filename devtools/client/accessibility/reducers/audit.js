"
use
strict
"
;
const
{
AUDIT
AUDITING
AUDIT_PROGRESS
FILTER_TOGGLE
FILTERS
RESET
SELECT
}
=
require
(
"
.
.
/
constants
"
)
;
function
getInitialState
(
)
{
return
{
filters
:
{
[
FILTERS
.
CONTRAST
]
:
false
}
auditing
:
null
progress
:
null
}
;
}
function
audit
(
state
=
getInitialState
(
)
action
)
{
switch
(
action
.
type
)
{
case
FILTER_TOGGLE
:
const
{
filter
}
=
action
;
let
{
filters
}
=
state
;
const
active
=
!
filters
[
filter
]
;
filters
=
{
.
.
.
filters
[
filter
]
:
active
}
;
return
{
.
.
.
state
filters
}
;
case
AUDITING
:
const
{
auditing
}
=
action
;
return
{
.
.
.
state
auditing
}
;
case
AUDIT
:
return
{
.
.
.
state
auditing
:
null
progress
:
null
}
;
case
AUDIT_PROGRESS
:
const
{
progress
}
=
action
;
return
{
.
.
.
state
progress
}
;
case
SELECT
:
case
RESET
:
return
getInitialState
(
)
;
default
:
return
state
;
}
}
exports
.
audit
=
audit
;
