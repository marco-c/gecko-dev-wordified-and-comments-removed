"
use
strict
"
;
const
{
UPDATE_DETAILS
RESET
}
=
require
(
"
.
.
/
constants
"
)
;
function
getInitialState
(
)
{
return
{
}
;
}
function
details
(
state
=
getInitialState
(
)
action
)
{
switch
(
action
.
type
)
{
case
UPDATE_DETAILS
:
return
onUpdateDetails
(
state
action
)
;
case
RESET
:
return
getInitialState
(
)
;
default
:
return
state
;
}
}
function
onUpdateDetails
(
state
action
)
{
const
{
accessible
response
error
}
=
action
;
if
(
error
)
{
console
.
warn
(
"
Error
fetching
DOMNode
for
accessible
"
accessible
error
)
;
return
state
;
}
const
[
DOMNode
relationObjects
audit
]
=
response
;
const
relations
=
{
}
;
relationObjects
.
forEach
(
(
{
type
targets
}
)
=
>
{
relations
[
type
]
=
targets
.
length
=
=
=
1
?
targets
[
0
]
:
targets
;
}
)
;
return
{
accessible
DOMNode
relations
audit
}
;
}
exports
.
details
=
details
;
