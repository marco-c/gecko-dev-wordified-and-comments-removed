"
use
strict
"
;
const
TEST_URI
=
<
html
>
<
head
>
<
meta
charset
=
"
utf
-
8
"
/
>
<
title
>
Accessibility
Panel
Test
<
/
title
>
<
/
head
>
<
body
>
<
p
style
=
"
color
:
red
;
"
>
Red
<
/
p
>
<
p
style
=
"
color
:
blue
;
"
>
Blue
<
/
p
>
<
p
style
=
"
color
:
gray
;
background
:
linear
-
gradient
(
#
e66465
#
9198e5
)
;
"
>
Gray
<
/
p
>
<
/
body
>
<
/
html
>
;
const
tests
=
[
{
desc
:
"
Test
the
initial
accessibility
audit
state
.
"
expected
:
{
audit
:
{
contrastRatio
:
null
}
}
}
{
desc
:
"
Check
accessible
representing
text
node
in
red
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleRow
(
doc
0
)
;
await
toggleRow
(
doc
1
)
;
await
selectRow
(
doc
2
)
;
}
expected
:
{
audit
:
{
"
contrastRatio
"
:
{
"
value
"
:
4
.
00
"
color
"
:
[
255
0
0
1
]
"
backgroundColor
"
:
[
255
255
255
1
]
"
isLargeText
"
:
false
}
}
}
}
{
desc
:
"
Check
accessible
representing
text
node
in
blue
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleRow
(
doc
3
)
;
await
selectRow
(
doc
4
)
;
}
expected
:
{
audit
:
{
"
contrastRatio
"
:
{
"
value
"
:
8
.
59
"
color
"
:
[
0
0
255
1
]
"
backgroundColor
"
:
[
255
255
255
1
]
"
isLargeText
"
:
false
}
}
}
}
{
desc
:
"
Check
accessible
representing
text
node
in
gray
over
gradient
background
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleRow
(
doc
5
)
;
await
selectRow
(
doc
6
)
;
}
expected
:
{
audit
:
{
"
contrastRatio
"
:
{
"
min
"
:
1
.
19
"
max
"
:
1
.
39
"
color
"
:
[
128
128
128
1
]
"
backgroundColorMin
"
:
[
219
106
116
1
]
"
backgroundColorMax
"
:
[
156
145
211
1
]
"
isLargeText
"
:
false
}
}
}
}
]
;
addA11yPanelTestsTask
(
tests
TEST_URI
"
Test
Accessibility
panel
sidebar
.
"
)
;
