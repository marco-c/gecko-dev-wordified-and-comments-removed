"
use
strict
"
;
const
TEST_URI
=
<
html
>
<
head
>
<
meta
charset
=
"
utf
-
8
"
/
>
<
title
>
Accessibility
Panel
Test
<
/
title
>
<
/
head
>
<
body
>
<
/
body
>
<
/
html
>
;
const
tests
=
[
{
desc
:
"
Check
initial
state
.
"
expected
:
{
activeToolbarFilters
:
[
true
false
false
false
]
}
}
{
desc
:
"
Toggle
first
filter
(
all
)
to
activate
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleMenuItem
(
doc
0
1
)
;
}
expected
:
{
activeToolbarFilters
:
[
false
true
true
true
]
}
}
{
desc
:
"
Click
on
the
filter
again
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleMenuItem
(
doc
0
1
)
;
}
expected
:
{
activeToolbarFilters
:
[
true
false
false
false
]
}
}
{
desc
:
"
Toggle
first
custom
filter
to
activate
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleMenuItem
(
doc
0
2
)
;
}
expected
:
{
activeToolbarFilters
:
[
false
false
true
false
]
}
}
{
desc
:
"
Click
on
the
filter
again
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleMenuItem
(
doc
0
2
)
;
}
expected
:
{
activeToolbarFilters
:
[
true
false
false
false
]
}
}
{
desc
:
"
Toggle
first
custom
filter
to
activate
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleMenuItem
(
doc
0
2
)
;
}
expected
:
{
activeToolbarFilters
:
[
false
false
true
false
]
}
}
{
desc
:
"
Toggle
second
custom
filter
to
activate
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleMenuItem
(
doc
0
3
)
;
}
expected
:
{
activeToolbarFilters
:
[
false
true
true
true
]
}
}
{
desc
:
"
Click
on
the
none
filter
to
de
-
activate
all
.
"
setup
:
async
(
{
doc
}
)
=
>
{
await
toggleMenuItem
(
doc
0
0
)
;
}
expected
:
{
activeToolbarFilters
:
[
true
false
false
false
]
}
}
]
;
addA11yPanelTestsTask
(
tests
TEST_URI
"
Test
Accessibility
panel
filter
toggle
states
.
"
)
;
