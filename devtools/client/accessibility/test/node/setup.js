"
use
strict
"
;
const
Enzyme
=
require
(
"
enzyme
"
)
;
const
Adapter
=
require
(
"
enzyme
-
adapter
-
react
-
16
"
)
;
Enzyme
.
configure
(
{
adapter
:
new
Adapter
(
)
}
)
;
global
.
loader
=
{
lazyGetter
:
(
context
name
fn
)
=
>
{
const
module
=
fn
(
)
;
global
[
name
]
=
module
;
}
lazyRequireGetter
:
(
context
names
module
destructure
)
=
>
{
if
(
!
Array
.
isArray
(
names
)
)
{
names
=
[
names
]
;
}
for
(
const
name
of
names
)
{
const
value
=
destructure
?
require
(
module
)
[
name
]
:
require
(
module
|
|
name
)
;
global
[
name
]
=
value
;
}
}
}
;
global
.
requestIdleCallback
=
function
(
)
{
}
;
global
.
document
.
nodePrincipal
=
{
isSystemPrincipal
:
false
}
;
