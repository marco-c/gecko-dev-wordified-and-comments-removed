:
root
{
-
-
console
-
output
-
line
-
height
:
14px
;
-
-
console
-
output
-
vertical
-
padding
:
3px
;
-
-
console
-
inline
-
start
-
gutter
:
32px
;
-
-
console
-
icon
-
horizontal
-
offset
:
1px
;
}
.
theme
-
dark
{
-
-
console
-
input
-
background
:
var
(
-
-
theme
-
tab
-
toolbar
-
background
)
;
-
-
console
-
message
-
background
:
var
(
-
-
theme
-
body
-
background
)
;
-
-
console
-
message
-
border
:
var
(
-
-
theme
-
splitter
-
color
)
;
-
-
console
-
message
-
color
:
var
(
-
-
theme
-
text
-
color
-
strong
)
;
-
-
console
-
error
-
background
:
hsl
(
345
23
%
24
%
)
;
-
-
console
-
error
-
border
:
hsl
(
345
30
%
35
%
)
;
-
-
console
-
error
-
color
:
var
(
-
-
red
-
20
)
;
-
-
console
-
error
-
icon
-
color
:
var
(
-
-
red
-
40
)
;
-
-
console
-
warning
-
background
:
hsl
(
42
37
%
19
%
)
;
-
-
console
-
warning
-
border
:
hsl
(
60
30
%
26
%
)
;
-
-
console
-
warning
-
color
:
hsl
(
43
94
%
81
%
)
;
-
-
console
-
warning
-
icon
-
color
:
var
(
-
-
yellow
-
60
)
;
-
-
console
-
navigation
-
color
:
var
(
-
-
theme
-
highlight
-
blue
)
;
-
-
console
-
navigation
-
border
:
var
(
-
-
blue
-
60
)
;
-
-
console
-
indent
-
border
-
color
:
var
(
-
-
theme
-
highlight
-
blue
)
;
-
-
console
-
repeat
-
bubble
-
background
:
var
(
-
-
blue
-
60
)
;
-
-
error
-
color
:
var
(
-
-
red
-
20
)
;
-
-
console
-
output
-
color
:
white
;
}
.
theme
-
light
{
-
-
console
-
input
-
background
:
var
(
-
-
theme
-
body
-
background
)
;
-
-
console
-
message
-
background
:
var
(
-
-
theme
-
body
-
background
)
;
-
-
console
-
message
-
border
:
#
f2f2f4
;
-
-
console
-
message
-
color
:
var
(
-
-
theme
-
text
-
color
-
strong
)
;
-
-
console
-
error
-
background
:
hsl
(
344
73
%
97
%
)
;
-
-
console
-
error
-
border
:
rgba
(
215
0
34
0
.
12
)
;
-
-
console
-
error
-
color
:
var
(
-
-
red
-
70
)
;
-
-
console
-
error
-
icon
-
color
:
var
(
-
-
red
-
60
)
;
-
-
console
-
warning
-
background
:
hsl
(
54
100
%
92
%
)
;
-
-
console
-
warning
-
border
:
rgba
(
215
182
0
0
.
28
)
;
-
-
console
-
warning
-
color
:
var
(
-
-
yellow
-
80
)
;
-
-
console
-
warning
-
icon
-
color
:
var
(
-
-
yellow
-
65
)
;
-
-
console
-
navigation
-
color
:
var
(
-
-
theme
-
highlight
-
blue
)
;
-
-
console
-
navigation
-
border
:
var
(
-
-
blue
-
30
)
;
-
-
console
-
indent
-
border
-
color
:
var
(
-
-
theme
-
highlight
-
blue
)
;
-
-
console
-
repeat
-
bubble
-
background
:
var
(
-
-
theme
-
highlight
-
blue
)
;
-
-
error
-
color
:
var
(
-
-
red
-
70
)
;
-
-
console
-
output
-
color
:
var
(
-
-
grey
-
90
)
;
}
a
{
-
moz
-
user
-
focus
:
normal
;
cursor
:
pointer
;
text
-
decoration
:
underline
;
}
*
:
visited
{
}
*
{
box
-
sizing
:
border
-
box
;
}
.
message
{
position
:
relative
;
z
-
index
:
1
;
display
:
flex
;
width
:
100
%
;
margin
-
top
:
-
1px
;
border
-
top
:
1px
solid
var
(
-
-
console
-
message
-
border
)
;
border
-
bottom
:
1px
solid
var
(
-
-
console
-
message
-
border
)
;
padding
-
block
:
0
;
padding
-
inline
-
start
:
4px
;
padding
-
inline
-
end
:
8px
;
font
-
size
:
var
(
-
-
theme
-
code
-
font
-
size
)
;
line
-
height
:
var
(
-
-
console
-
output
-
line
-
height
)
;
color
:
var
(
-
-
console
-
message
-
color
)
;
background
-
color
:
var
(
-
-
console
-
message
-
background
)
;
}
media
(
min
-
width
:
1000px
)
{
.
message
{
padding
-
inline
-
end
:
12px
;
}
}
.
webconsole
-
app
:
not
(
.
jsterm
-
editor
)
.
message
:
last
-
child
{
border
-
bottom
-
width
:
0
;
}
.
message
:
hover
:
:
before
{
content
:
"
"
;
position
:
absolute
;
inset
-
inline
:
0
;
top
:
0
;
bottom
:
0
;
background
:
var
(
-
-
theme
-
highlight
-
blue
)
;
width
:
3px
;
}
.
message
:
not
(
.
network
)
*
{
overflow
:
hidden
;
}
.
message
.
error
{
z
-
index
:
2
;
color
:
var
(
-
-
console
-
error
-
color
)
;
border
-
color
:
var
(
-
-
console
-
error
-
border
)
;
background
-
color
:
var
(
-
-
console
-
error
-
background
)
;
}
.
message
.
warn
{
z
-
index
:
2
;
color
:
var
(
-
-
console
-
warning
-
color
)
;
border
-
color
:
var
(
-
-
console
-
warning
-
border
)
;
background
-
color
:
var
(
-
-
console
-
warning
-
background
)
;
}
.
message
.
navigationMarker
{
z
-
index
:
3
;
color
:
var
(
-
-
console
-
navigation
-
color
)
;
border
-
color
:
var
(
-
-
console
-
navigation
-
border
)
;
}
.
message
.
paused
{
z
-
index
:
3
;
}
.
message
.
paused
.
paused
-
before
{
border
-
top
-
color
:
var
(
-
-
purple
-
50
)
;
}
.
message
.
paused
:
not
(
.
paused
-
before
)
{
border
-
bottom
-
color
:
var
(
-
-
purple
-
50
)
;
border
-
bottom
-
width
:
1px
;
}
.
message
.
paused
~
.
message
:
not
(
.
command
)
:
not
(
.
result
)
.
message
-
body
-
wrapper
.
message
.
paused
.
paused
-
before
.
message
-
body
-
wrapper
{
opacity
:
0
.
5
;
}
.
message
.
startGroup
.
message
.
startGroupCollapsed
{
-
-
console
-
indent
-
border
-
color
:
transparent
;
}
.
message
.
command
+
.
result
.
log
{
border
-
top
-
width
:
0
;
}
.
message
>
.
prefix
.
message
>
.
timestamp
{
flex
:
none
;
color
:
var
(
-
-
theme
-
comment
)
;
margin
:
var
(
-
-
console
-
output
-
vertical
-
padding
)
4px
;
}
media
(
max
-
width
:
500px
)
{
.
message
>
.
timestamp
{
display
:
none
;
}
}
.
message
>
.
indent
{
flex
:
none
;
display
:
inline
-
block
;
margin
-
block
:
-
1px
;
margin
-
inline
-
start
:
12px
;
border
-
inline
-
end
:
solid
1px
var
(
-
-
console
-
indent
-
border
-
color
)
;
}
.
message
>
.
indent
.
warning
-
indent
{
border
-
inline
-
end
-
color
:
var
(
-
-
console
-
warning
-
color
)
;
}
.
message
>
.
indent
[
data
-
indent
=
"
0
"
]
{
display
:
none
;
}
.
message
:
not
(
.
startGroup
)
:
not
(
.
startGroupCollapsed
)
>
.
indent
[
data
-
indent
=
"
1
"
]
{
margin
-
inline
-
start
:
calc
(
1px
+
var
(
-
-
console
-
icon
-
horizontal
-
offset
)
)
;
margin
-
inline
-
end
:
calc
(
11px
-
var
(
-
-
console
-
icon
-
horizontal
-
offset
)
)
;
}
.
message
>
.
icon
{
flex
:
none
;
align
-
self
:
flex
-
start
;
width
:
14px
;
height
:
14px
;
margin
:
var
(
-
-
console
-
output
-
vertical
-
padding
)
4px
;
background
-
image
:
none
;
background
-
position
:
center
;
background
-
repeat
:
no
-
repeat
;
background
-
size
:
12px
;
-
moz
-
context
-
properties
:
fill
;
fill
:
currentColor
;
}
.
message
>
.
indent
[
data
-
indent
=
"
0
"
]
+
.
icon
{
width
:
24px
;
margin
-
inline
-
start
:
var
(
-
-
console
-
icon
-
horizontal
-
offset
)
;
margin
-
inline
-
end
:
calc
(
4px
-
var
(
-
-
console
-
icon
-
horizontal
-
offset
)
)
;
}
.
message
.
command
>
.
icon
{
color
:
var
(
-
-
theme
-
icon
-
color
)
;
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
webconsole
/
input
.
svg
)
;
}
.
message
.
result
>
.
icon
{
color
:
var
(
-
-
theme
-
icon
-
dimmed
-
color
)
;
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
webconsole
/
return
.
svg
)
;
}
.
message
.
info
>
.
icon
{
color
:
var
(
-
-
theme
-
icon
-
color
)
;
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
webconsole
/
info
.
svg
)
;
}
.
message
.
error
>
.
icon
{
color
:
var
(
-
-
console
-
error
-
icon
-
color
)
;
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
webconsole
/
error
.
svg
)
;
}
.
message
.
warn
>
.
icon
{
color
:
var
(
-
-
console
-
warning
-
icon
-
color
)
;
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
alert
.
svg
)
;
}
.
message
.
navigationMarker
>
.
icon
{
color
:
var
(
-
-
console
-
navigation
-
color
)
;
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
webconsole
/
navigation
.
svg
)
;
}
.
message
:
hover
>
.
icon
.
rewindable
{
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
next
-
circle
.
svg
)
;
cursor
:
pointer
;
transform
:
rotate
(
180deg
)
;
}
.
message
>
.
icon
.
logpoint
{
background
-
image
:
url
(
resource
:
/
/
devtools
/
client
/
debugger
/
images
/
webconsole
-
logpoint
.
svg
)
;
color
:
var
(
-
-
theme
-
graphs
-
purple
)
;
}
.
message
.
paused
~
.
message
:
hover
.
icon
.
rewindable
{
transform
:
none
;
}
.
message
>
.
message
-
body
-
wrapper
{
flex
:
auto
;
min
-
width
:
0px
;
margin
:
var
(
-
-
console
-
output
-
vertical
-
padding
)
0
;
}
.
message
-
body
-
wrapper
.
table
-
widget
-
body
{
overflow
:
visible
;
}
.
message
-
body
-
wrapper
.
elements
-
label
{
color
:
var
(
-
-
location
-
color
)
;
margin
:
calc
(
var
(
-
-
console
-
output
-
vertical
-
padding
)
*
2
)
0
;
}
.
message
-
repeats
.
warning
-
group
-
badge
{
flex
-
shrink
:
0
;
margin
:
2px
5px
0
5px
;
padding
:
0
6px
;
height
:
1
.
25em
;
border
-
radius
:
40px
;
font
:
message
-
box
;
font
-
size
:
0
.
8em
;
font
-
weight
:
normal
;
}
.
message
-
repeats
{
display
:
inline
-
block
;
color
:
white
;
background
-
color
:
var
(
-
-
console
-
repeat
-
bubble
-
background
)
;
}
.
message
-
repeats
[
value
=
"
1
"
]
{
display
:
none
;
}
.
warning
-
group
-
badge
{
display
:
inline
-
block
;
color
:
var
(
-
-
console
-
warning
-
background
)
;
background
-
color
:
var
(
-
-
console
-
warning
-
color
)
;
}
.
message
-
location
{
max
-
width
:
40vw
;
flex
-
shrink
:
0
;
color
:
var
(
-
-
frame
-
link
-
source
)
;
margin
-
left
:
1ch
;
direction
:
rtl
;
white
-
space
:
nowrap
;
overflow
:
hidden
;
text
-
overflow
:
ellipsis
;
text
-
align
:
end
;
}
.
message
-
location
:
empty
{
display
:
none
;
}
.
message
-
location
.
frame
-
link
-
source
-
inner
{
direction
:
ltr
;
unicode
-
bidi
:
embed
;
}
.
message
-
flex
-
body
{
display
:
flex
;
}
.
message
-
body
{
white
-
space
:
pre
-
wrap
;
word
-
wrap
:
break
-
word
;
}
.
message
-
flex
-
body
>
.
message
-
body
{
display
:
block
;
flex
:
1
;
}
.
console
-
string
{
color
:
var
(
-
-
theme
-
highlight
-
lightorange
)
;
}
.
theme
-
selected
.
console
-
string
.
theme
-
selected
.
cm
-
number
.
theme
-
selected
.
cm
-
variable
.
theme
-
selected
.
kind
-
ArrayLike
{
color
:
#
f5f7fa
!
important
;
}
.
message
.
network
>
.
message
-
body
{
display
:
flex
;
flex
-
wrap
:
wrap
;
}
.
message
.
network
.
method
{
flex
:
none
;
}
.
message
.
network
.
url
{
flex
:
1
1
auto
;
width
:
100px
;
min
-
width
:
5em
;
white
-
space
:
nowrap
;
overflow
:
hidden
;
text
-
overflow
:
ellipsis
;
cursor
:
default
;
}
.
message
.
network
.
status
{
flex
:
none
;
cursor
:
default
;
margin
-
left
:
1ch
;
cursor
:
default
;
}
.
message
.
network
.
mixed
-
content
.
url
{
color
:
var
(
-
-
theme
-
highlight
-
red
)
;
cursor
:
default
;
}
.
message
.
learn
-
more
-
link
{
-
moz
-
user
-
select
:
none
;
color
:
var
(
-
-
theme
-
highlight
-
blue
)
;
margin
:
0
1ch
;
}
.
message
.
network
.
xhr
{
background
-
color
:
var
(
-
-
theme
-
text
-
color
-
alt
)
;
color
:
var
(
-
-
theme
-
body
-
background
)
;
border
-
radius
:
3px
;
font
-
weight
:
bold
;
font
-
size
:
10px
;
padding
:
1px
2px
;
line
-
height
:
10px
;
margin
-
inline
-
start
:
0
;
margin
-
inline
-
end
:
1ex
;
}
html
.
jsterm
-
input
-
node
-
html
html
#
webconsole
-
notificationbox
{
flex
:
0
;
width
:
100vw
;
}
.
jsterm
-
input
-
container
{
background
-
color
:
var
(
-
-
console
-
input
-
background
)
;
border
-
top
:
1px
solid
var
(
-
-
theme
-
splitter
-
color
)
;
position
:
relative
;
}
.
jsterm
-
input
-
node
{
box
-
sizing
:
border
-
box
;
min
-
height
:
100
%
;
color
:
var
(
-
-
theme
-
text
-
color
-
strong
)
;
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
webconsole
/
input
.
svg
)
;
background
-
position
-
x
:
calc
(
10px
+
var
(
-
-
console
-
icon
-
horizontal
-
offset
)
)
;
background
-
position
-
y
:
7px
;
background
-
repeat
:
no
-
repeat
;
background
-
size
:
12px
12px
;
-
moz
-
context
-
properties
:
fill
;
fill
:
var
(
-
-
theme
-
icon
-
dimmed
-
color
)
;
}
.
jsterm
-
complete
-
node
{
color
:
var
(
-
-
theme
-
comment
)
;
}
textarea
.
jsterm
-
input
-
node
textarea
.
jsterm
-
complete
-
node
{
width
:
100
%
;
margin
:
0
;
border
:
none
;
background
-
color
:
transparent
;
resize
:
none
;
font
-
size
:
inherit
;
line
-
height
:
16px
;
overflow
-
x
:
hidden
;
padding
:
5px
0
;
padding
-
inline
-
start
:
var
(
-
-
console
-
inline
-
start
-
gutter
)
;
}
textarea
.
jsterm
-
complete
-
node
{
position
:
absolute
;
top
:
0
;
left
:
0
;
height
:
100
%
;
pointer
-
events
:
none
;
}
textarea
.
jsterm
-
input
-
node
:
focus
{
fill
:
var
(
-
-
theme
-
icon
-
checked
-
color
)
;
box
-
shadow
:
none
;
outline
:
none
;
}
.
jsterm
-
cm
.
jsterm
-
input
-
container
>
.
CodeMirror
{
font
-
size
:
var
(
-
-
theme
-
code
-
font
-
size
)
;
line
-
height
:
var
(
-
-
console
-
output
-
line
-
height
)
;
padding
-
inline
-
start
:
calc
(
var
(
-
-
console
-
inline
-
start
-
gutter
)
-
4px
)
;
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
webconsole
/
input
.
svg
)
;
background
-
position
-
x
:
calc
(
10px
+
var
(
-
-
console
-
icon
-
horizontal
-
offset
)
)
;
background
-
position
-
y
:
5px
;
background
-
repeat
:
no
-
repeat
;
background
-
size
:
12px
12px
;
-
moz
-
context
-
properties
:
fill
;
fill
:
var
(
-
-
theme
-
icon
-
dimmed
-
color
)
;
}
.
jsterm
-
cm
.
jsterm
-
input
-
container
>
.
CodeMirror
-
focused
{
fill
:
var
(
-
-
theme
-
icon
-
checked
-
color
)
;
}
.
jsterm
-
cm
.
cm
-
auto
-
complete
-
shadow
-
text
:
:
after
{
content
:
attr
(
title
)
;
color
:
var
(
-
-
theme
-
comment
)
;
}
.
stacktrace
{
display
:
none
;
overflow
-
y
:
auto
;
margin
-
block
-
start
:
5px
;
margin
-
block
-
end
:
var
(
-
-
attachment
-
margin
-
block
-
end
)
;
padding
-
inline
-
start
:
16px
;
}
.
message
.
open
.
stacktrace
{
display
:
block
;
}
.
objectBox
-
stackTrace
.
frames
{
padding
-
inline
-
start
:
16px
;
}
.
consoletable
{
margin
:
5px
0
0
0
;
}
.
consoletable
.
table
-
widget
-
cell
>
span
{
overflow
:
hidden
;
display
:
flex
;
height
:
1
.
25em
;
line
-
height
:
1
.
25em
;
}
.
message
.
theme
-
twisty
:
dir
(
rtl
)
.
message
.
theme
-
twisty
:
-
moz
-
locale
-
dir
(
rtl
)
{
transform
:
none
;
}
.
cm
-
s
-
mozilla
a
[
class
]
{
font
-
style
:
italic
;
text
-
decoration
:
none
;
}
.
cm
-
s
-
mozilla
a
[
class
]
:
hover
.
cm
-
s
-
mozilla
a
[
class
]
:
focus
{
text
-
decoration
:
underline
;
}
a
.
learn
-
more
-
link
.
webconsole
-
learn
-
more
-
link
{
font
-
style
:
normal
;
}
.
webconsole
-
filteringbar
-
wrapper
{
display
:
grid
;
grid
-
template
-
columns
:
1fr
auto
;
-
-
primary
-
toolbar
-
height
:
29px
;
}
.
webconsole
-
filteringbar
-
wrapper
.
devtools
-
toolbar
{
background
-
color
:
var
(
-
-
theme
-
body
-
background
)
;
}
.
webconsole
-
filterbar
-
primary
{
display
:
flex
;
flex
:
100
0
-
moz
-
fit
-
content
;
align
-
items
:
center
;
min
-
height
:
var
(
-
-
primary
-
toolbar
-
height
)
;
}
.
devtools
-
toolbar
.
webconsole
-
filterbar
-
secondary
{
-
-
separator
-
inline
-
margin
:
5px
;
display
:
flex
;
align
-
items
:
center
;
align
-
self
:
stretch
;
-
moz
-
user
-
select
:
none
;
grid
-
column
:
1
/
-
1
;
min
-
height
:
var
(
-
-
primary
-
toolbar
-
height
)
;
}
.
split
-
console
-
close
-
button
-
wrapper
{
min
-
height
:
var
(
-
-
primary
-
toolbar
-
height
)
;
grid
-
column
:
-
1
/
-
2
;
grid
-
row
:
1
/
2
;
padding
-
inline
-
end
:
0
;
}
:
root
[
platform
=
"
mac
"
]
.
split
-
console
-
close
-
button
-
wrapper
:
root
[
platform
=
"
mac
"
]
.
webconsole
-
sidebar
-
toolbar
{
padding
-
inline
-
end
:
2px
;
}
#
split
-
console
-
close
-
button
{
height
:
100
%
;
margin
:
0
;
}
#
split
-
console
-
close
-
button
:
:
before
{
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
close
.
svg
)
;
}
.
webconsole
-
filterbar
-
primary
.
devtools
-
searchbox
{
align
-
self
:
stretch
;
height
:
unset
;
flex
:
1
1
100
%
;
margin
-
inline
-
start
:
1px
;
min
-
width
:
150px
;
}
.
webconsole
-
filterbar
-
primary
.
filter
-
checkbox
{
flex
-
shrink
:
0
;
margin
:
0
3px
;
display
:
flex
;
align
-
items
:
center
;
-
moz
-
user
-
select
:
none
;
}
.
webconsole
-
filterbar
-
filtered
-
messages
{
flex
-
grow
:
1
;
justify
-
content
:
flex
-
end
;
color
:
var
(
-
-
theme
-
comment
)
;
text
-
align
:
end
;
align
-
items
:
center
;
min
-
height
:
var
(
-
-
primary
-
toolbar
-
height
)
;
line
-
height
:
var
(
-
-
primary
-
toolbar
-
height
)
;
}
media
(
max
-
width
:
965px
)
{
.
webconsole
-
filterbar
-
filtered
-
messages
{
grid
-
row
:
2
/
3
;
grid
-
column
:
1
/
-
1
;
justify
-
self
:
stretch
;
}
}
.
webconsole
-
filterbar
-
filtered
-
messages
.
filter
-
message
-
text
{
font
-
style
:
italic
;
-
moz
-
user
-
select
:
none
;
}
.
webconsole
-
filterbar
-
filtered
-
messages
.
reset
-
filters
-
button
{
margin
-
inline
-
start
:
0
.
5em
;
}
.
message
.
message
-
body
>
.
objectBox
-
string
.
message
.
error
.
objectBox
-
string
.
message
.
warn
.
objectBox
-
string
{
color
:
inherit
;
}
.
theme
-
dark
.
message
.
error
.
tree
.
object
-
inspector
.
object
-
label
.
theme
-
dark
.
message
.
error
.
tree
.
object
-
inspector
.
object
-
label
*
.
theme
-
dark
.
message
.
warn
.
tree
.
object
-
inspector
.
object
-
label
.
theme
-
dark
.
message
.
warn
.
tree
.
object
-
inspector
.
object
-
label
*
.
theme
-
dark
.
message
.
error
.
objectLeftBrace
.
theme
-
dark
.
message
.
error
.
objectRightBrace
.
theme
-
dark
.
message
.
error
.
arrayLeftBracket
.
theme
-
dark
.
message
.
error
.
arrayRightBracket
.
theme
-
dark
.
message
.
warn
.
objectLeftBrace
.
theme
-
dark
.
message
.
warn
.
objectRightBrace
.
theme
-
dark
.
message
.
warn
.
arrayLeftBracket
.
theme
-
dark
.
message
.
warn
.
arrayRightBracket
{
color
:
var
(
-
-
theme
-
body
-
color
)
;
}
.
theme
-
dark
.
message
.
error
.
tree
.
object
-
inspector
.
theme
-
dark
.
message
.
warn
.
tree
.
object
-
inspector
{
-
-
console
-
indent
-
border
-
color
:
var
(
-
-
theme
-
body
-
color
)
;
}
.
webconsole
-
app
.
message
-
flex
-
body
>
.
message
-
body
{
overflow
:
hidden
;
}
.
webconsole
-
app
.
message
-
body
>
*
{
flex
-
shrink
:
0
;
vertical
-
align
:
top
;
}
.
message
.
startGroup
.
message
-
body
>
.
objectBox
-
string
.
message
.
startGroupCollapsed
.
message
-
body
>
.
objectBox
-
string
{
color
:
var
(
-
-
theme
-
body
-
color
)
;
font
-
weight
:
bold
;
}
.
webconsole
-
app
.
console
-
message
-
prefix
{
color
:
var
(
-
-
theme
-
comment
)
;
}
.
webconsole
-
app
.
message
.
network
.
method
{
margin
-
inline
-
end
:
1ch
;
}
.
webconsole
-
app
.
message
.
network
.
xhr
{
background
-
color
:
var
(
-
-
theme
-
comment
)
;
color
:
white
;
border
-
radius
:
2px
;
font
-
weight
:
normal
;
line
-
height
:
inherit
;
}
.
webconsole
-
app
.
message
.
network
.
url
{
color
:
var
(
-
-
theme
-
comment
)
;
font
-
style
:
inherit
;
}
.
webconsole
-
app
.
message
.
network
.
status
{
color
:
var
(
-
-
theme
-
highlight
-
blue
)
;
font
-
style
:
inherit
;
}
.
network
.
message
.
network
-
info
{
display
:
none
;
margin
-
block
-
start
:
6px
;
margin
-
block
-
end
:
2px
;
border
:
solid
1px
var
(
-
-
theme
-
splitter
-
color
)
;
}
.
network
.
message
.
open
.
network
-
info
{
display
:
block
;
}
.
network
.
message
.
network
-
info
.
panels
{
max
-
height
:
250px
;
min
-
height
:
100px
;
}
.
network
.
message
#
headers
-
panel
.
edit
-
and
-
resend
-
button
{
display
:
none
;
}
.
network
.
message
-
flex
-
body
>
.
message
-
body
{
display
:
flex
;
flex
-
wrap
:
wrap
;
align
-
items
:
baseline
;
}
.
webconsole
-
app
.
open
-
inspector
{
background
-
image
:
unset
;
}
.
new
-
consoletable
{
width
:
100
%
;
-
-
consoletable
-
border
:
var
(
-
-
theme
-
splitter
-
color
)
;
margin
-
block
-
end
:
var
(
-
-
attachment
-
margin
-
block
-
end
)
;
color
:
var
(
-
-
theme
-
body
-
color
)
;
display
:
grid
;
max
-
height
:
250px
;
overflow
-
y
:
auto
;
border
:
1px
solid
var
(
-
-
consoletable
-
border
)
;
border
-
left
:
none
;
}
.
new
-
consoletable
>
div
{
border
-
left
:
1px
solid
var
(
-
-
consoletable
-
border
)
;
}
.
new
-
consoletable
-
header
{
position
:
sticky
;
top
:
0
;
border
-
bottom
:
1px
solid
var
(
-
-
consoletable
-
border
)
;
background
-
color
:
var
(
-
-
theme
-
toolbar
-
background
)
;
color
:
var
(
-
-
theme
-
body
-
color
)
;
margin
:
0
;
padding
:
5px
4px
;
font
-
weight
:
inherit
;
z
-
index
:
1
;
}
.
new
-
consoletable
>
[
role
=
gridcell
]
{
background
-
color
:
var
(
-
-
theme
-
body
-
background
)
;
padding
:
3px
4px
;
min
-
width
:
100px
;
color
:
var
(
-
-
theme
-
body
-
color
)
;
}
.
new
-
consoletable
>
[
role
=
gridcell
]
.
even
{
background
-
color
:
var
(
-
-
table
-
zebra
-
background
)
;
}
.
webconsole
-
output
{
direction
:
ltr
;
overflow
:
auto
;
overflow
-
anchor
:
none
;
-
moz
-
user
-
select
:
text
;
position
:
relative
;
}
html
body
{
height
:
100vh
;
margin
:
0
;
padding
:
0
;
overflow
:
hidden
;
}
#
app
-
wrapper
{
height
:
100vh
;
max
-
height
:
100vh
;
}
.
webconsole
-
app
{
-
-
object
-
inspector
-
hover
-
background
:
transparent
;
-
-
attachment
-
margin
-
block
-
end
:
3px
;
-
-
primary
-
toolbar
-
height
:
29px
;
display
:
grid
;
grid
-
template
-
columns
:
minmax
(
200px
1fr
)
auto
;
max
-
height
:
100vh
!
important
;
height
:
100vh
!
important
;
width
:
100vw
;
overflow
:
hidden
;
color
:
var
(
-
-
console
-
output
-
color
)
;
-
moz
-
user
-
focus
:
normal
;
}
.
webconsole
-
wrapper
{
display
:
flex
;
flex
-
direction
:
column
;
height
:
100vh
;
max
-
height
:
100vh
;
overflow
:
hidden
;
}
.
webconsole
-
wrapper
.
webconsole
-
filteringbar
-
wrapper
{
flex
-
shrink
:
0
;
overflow
:
hidden
;
}
.
webconsole
-
wrapper
.
webconsole
-
output
{
flex
-
shrink
:
100000
;
overflow
-
x
:
hidden
;
}
.
webconsole
-
wrapper
>
.
webconsole
-
output
:
not
(
:
empty
)
{
min
-
height
:
19px
;
}
.
webconsole
-
app
#
webconsole
-
notificationbox
{
flex
-
shrink
:
0
;
}
.
webconsole
-
app
.
jsterm
-
input
-
container
{
min
-
height
:
28px
;
overflow
-
y
:
auto
;
overflow
-
x
:
hidden
;
flex
-
grow
:
1
;
}
.
jsterm
-
cm
.
jsterm
-
input
-
container
{
padding
-
block
-
start
:
2px
;
}
.
webconsole
-
wrapper
>
.
webconsole
-
output
:
empty
~
.
jsterm
-
input
-
container
{
border
-
top
:
none
;
}
.
webconsole
-
app
.
object
-
inspector
.
tree
{
display
:
inline
-
block
;
max
-
width
:
100
%
;
}
.
webconsole
-
app
.
object
-
inspector
.
tree
.
tree
-
indent
{
border
-
inline
-
start
-
color
:
var
(
-
-
console
-
indent
-
border
-
color
)
;
}
.
webconsole
-
app
.
object
-
inspector
.
tree
.
tree
-
node
:
hover
:
not
(
.
focused
)
{
background
-
color
:
var
(
-
-
object
-
inspector
-
hover
-
background
)
;
}
.
collapse
-
button
{
flex
:
none
;
align
-
self
:
flex
-
start
;
margin
-
block
-
start
:
calc
(
var
(
-
-
console
-
output
-
vertical
-
padding
)
-
1px
)
;
margin
-
inline
-
start
:
-
2px
;
padding
:
3px
;
border
:
none
;
color
:
var
(
-
-
theme
-
icon
-
dimmed
-
color
)
;
background
:
transparent
;
}
.
collapse
-
button
:
:
before
{
content
:
"
"
;
display
:
block
;
width
:
10px
;
height
:
10px
;
background
:
url
(
"
chrome
:
/
/
devtools
/
skin
/
images
/
arrow
.
svg
"
)
no
-
repeat
center
;
background
-
size
:
10px
;
transform
:
rotate
(
-
90deg
)
;
transition
:
transform
125ms
ease
;
-
moz
-
context
-
properties
:
fill
;
fill
:
currentColor
;
}
.
collapse
-
button
[
aria
-
expanded
=
"
true
"
]
:
:
before
{
transform
:
rotate
(
0
)
;
}
.
collapse
-
button
:
:
-
moz
-
focus
-
inner
{
border
:
none
;
}
.
message
.
network
>
.
icon
.
message
.
startGroup
>
.
icon
.
message
.
startGroupCollapsed
>
.
icon
{
display
:
none
;
}
.
message
.
network
>
.
collapse
-
button
.
message
.
startGroup
>
.
indent
[
data
-
indent
=
"
0
"
]
~
.
collapse
-
button
.
message
.
startGroupCollapsed
>
.
indent
[
data
-
indent
=
"
0
"
]
~
.
collapse
-
button
{
width
:
24px
;
margin
-
inline
-
start
:
var
(
-
-
console
-
icon
-
horizontal
-
offset
)
;
margin
-
inline
-
end
:
calc
(
4px
-
var
(
-
-
console
-
icon
-
horizontal
-
offset
)
)
;
}
.
message
.
network
>
.
collapse
-
button
:
:
before
.
message
.
startGroup
>
.
indent
[
data
-
indent
=
"
0
"
]
~
.
collapse
-
button
:
:
before
.
message
.
startGroupCollapsed
>
.
indent
[
data
-
indent
=
"
0
"
]
~
.
collapse
-
button
:
:
before
{
width
:
100
%
;
background
-
image
:
url
(
"
chrome
:
/
/
devtools
/
skin
/
images
/
arrow
-
big
.
svg
"
)
;
fill
:
var
(
-
-
theme
-
icon
-
dimmed
-
color
)
;
}
.
webconsole
-
app
.
tree
.
arrow
.
webconsole
-
app
.
object
-
inspector
.
tree
-
node
.
arrow
{
width
:
10px
;
height
:
10px
;
background
:
url
(
"
chrome
:
/
/
devtools
/
skin
/
images
/
arrow
.
svg
"
)
no
-
repeat
center
;
background
-
size
:
10px
;
transform
:
rotate
(
-
90deg
)
;
margin
-
top
:
-
1px
;
-
moz
-
context
-
properties
:
fill
;
fill
:
var
(
-
-
theme
-
icon
-
dimmed
-
color
)
;
}
.
webconsole
-
app
.
tree
.
arrow
.
expanded
.
webconsole
-
app
.
object
-
inspector
.
tree
-
node
.
arrow
.
expanded
{
transform
:
rotate
(
0deg
)
;
}
.
webconsole
-
app
.
tree
.
focused
.
arrow
.
webconsole
-
app
.
object
-
inspector
.
tree
-
node
.
focused
.
arrow
{
fill
:
currentColor
}
.
sidebar
{
display
:
flex
;
grid
-
row
:
1
/
-
1
;
grid
-
column
:
-
1
/
-
2
;
background
-
color
:
var
(
-
-
theme
-
sidebar
-
background
)
;
border
-
inline
-
start
:
1px
solid
var
(
-
-
theme
-
splitter
-
color
)
;
}
.
sidebar
.
splitter
{
background
-
color
:
transparent
;
}
.
split
-
box
.
vert
.
sidebar
{
width
:
unset
;
height
:
100vh
;
}
.
sidebar
-
wrapper
{
display
:
grid
;
grid
-
template
-
rows
:
auto
1fr
;
width
:
100
%
;
overflow
:
hidden
;
}
.
webconsole
-
sidebar
-
toolbar
{
grid
-
row
:
1
/
2
;
min
-
height
:
var
(
-
-
primary
-
toolbar
-
height
)
;
display
:
flex
;
justify
-
content
:
end
;
padding
:
0
;
}
.
sidebar
-
contents
{
grid
-
row
:
2
/
3
;
overflow
:
auto
;
}
.
webconsole
-
sidebar
-
toolbar
.
sidebar
-
close
-
button
{
padding
:
4px
0
;
margin
:
0
;
}
.
sidebar
-
close
-
button
:
:
before
{
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
close
.
svg
)
;
}
.
sidebar
-
contents
.
object
-
inspector
{
min
-
width
:
100
%
;
}
.
jsterm
-
editor
.
webconsole
-
wrapper
{
display
:
grid
;
grid
-
template
-
rows
:
var
(
-
-
primary
-
toolbar
-
height
)
auto
1fr
auto
;
grid
-
template
-
columns
:
auto
1fr
;
}
.
jsterm
-
editor
.
webconsole
-
filteringbar
-
wrapper
{
grid
-
column
:
2
/
3
;
grid
-
row
:
1
/
3
;
grid
-
template
-
rows
:
subgrid
;
}
.
jsterm
-
editor
.
webconsole
-
filterbar
-
primary
{
grid
-
row
:
1
/
2
;
}
.
jsterm
-
editor
.
narrow
.
devtools
-
toolbar
.
webconsole
-
filterbar
-
secondary
{
grid
-
row
:
2
/
3
;
}
.
jsterm
-
editor
.
webconsole
-
editor
-
toolbar
{
grid
-
column
:
1
/
2
;
grid
-
row
:
1
/
2
;
border
-
inline
-
end
:
1px
solid
var
(
-
-
theme
-
splitter
-
color
)
;
display
:
flex
;
flex
-
direction
:
row
;
justify
-
content
:
start
;
height
:
unset
;
}
.
jsterm
-
editor
.
webconsole
-
output
{
grid
-
column
:
2
/
3
;
grid
-
row
:
3
/
-
1
;
}
.
jsterm
-
editor
.
jsterm
-
input
-
container
{
grid
-
column
:
1
/
2
;
grid
-
row
:
2
/
4
;
width
:
50vw
;
border
-
inline
-
end
:
1px
solid
var
(
-
-
theme
-
splitter
-
color
)
;
border
-
top
:
none
;
}
.
jsterm
-
editor
#
webconsole
-
notificationbox
{
display
:
none
;
}
.
jsterm
-
cm
.
jsterm
-
editor
.
jsterm
-
input
-
container
>
.
CodeMirror
{
padding
-
inline
-
start
:
0
;
background
-
image
:
none
;
}
.
jsterm
-
editor
.
reverse
-
search
{
grid
-
column
:
1
/
2
;
grid
-
row
:
-
1
/
-
2
;
border
-
top
:
1px
solid
var
(
-
-
theme
-
splitter
-
color
)
;
}
.
clipboard
-
only
{
position
:
absolute
;
left
:
-
9999px
;
width
:
0
;
height
:
0
;
}
