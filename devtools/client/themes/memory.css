.
theme
-
dark
{
-
-
cell
-
border
-
color
:
rgba
(
255
255
255
0
.
15
)
;
-
-
cell
-
border
-
color
-
light
:
rgba
(
255
255
255
0
.
1
)
;
-
-
focus
-
cell
-
border
-
color
:
rgba
(
255
255
255
0
.
5
)
;
-
-
row
-
alt
-
background
-
color
:
rgba
(
86
117
185
0
.
15
)
;
-
-
row
-
hover
-
background
-
color
:
rgba
(
86
117
185
0
.
25
)
;
}
.
theme
-
light
{
-
-
cell
-
border
-
color
:
rgba
(
0
0
0
0
.
15
)
;
-
-
cell
-
border
-
color
-
light
:
rgba
(
0
0
0
0
.
1
)
;
-
-
focus
-
cell
-
border
-
color
:
rgba
(
0
0
0
0
.
3
)
;
-
-
row
-
alt
-
background
-
color
:
rgba
(
76
158
217
0
.
1
)
;
-
-
row
-
hover
-
background
-
color
:
rgba
(
76
158
217
0
.
2
)
;
}
html
body
#
app
#
memory
-
tool
{
height
:
100
%
;
}
#
memory
-
tool
{
display
:
flex
;
flex
-
direction
:
column
;
-
-
sidebar
-
width
:
185px
;
-
-
heap
-
tree
-
row
-
height
:
18px
;
-
-
heap
-
tree
-
header
-
height
:
18px
;
}
.
devtools
-
toolbar
{
display
:
flex
;
align
-
items
:
center
;
}
.
devtools
-
toolbar
>
.
toolbar
-
group
:
nth
-
of
-
type
(
1
)
{
flex
:
0
0
calc
(
var
(
-
-
sidebar
-
width
)
-
4px
)
;
border
-
inline
-
end
:
1px
solid
var
(
-
-
theme
-
splitter
-
color
)
;
margin
-
inline
-
end
:
5px
;
padding
-
right
:
1px
;
}
.
devtools
-
toolbar
>
.
toolbar
-
group
{
display
:
flex
;
align
-
items
:
center
;
flex
:
1
;
white
-
space
:
nowrap
;
overflow
:
hidden
;
text
-
overflow
:
ellipsis
;
}
.
devtools
-
toolbar
>
.
toolbar
-
group
>
label
{
display
:
flex
;
align
-
items
:
center
;
margin
-
inline
-
end
:
5px
;
}
.
devtools
-
toolbar
>
.
toolbar
-
group
>
label
.
display
-
by
>
span
{
margin
-
inline
-
end
:
5px
;
}
.
devtools
-
toolbar
>
.
toolbar
-
group
>
label
.
label
-
by
>
span
{
margin
-
inline
-
end
:
5px
;
}
.
devtools
-
toolbar
>
label
{
margin
-
inline
-
end
:
5px
;
display
:
flex
;
align
-
items
:
center
;
}
#
select
-
view
{
margin
-
inline
-
start
:
5px
;
}
#
take
-
snapshot
:
:
before
{
background
-
image
:
url
(
images
/
command
-
screenshot
.
svg
)
;
}
#
clear
-
snapshots
:
:
before
{
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
clear
.
svg
)
;
}
#
diff
-
snapshots
:
:
before
{
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
diff
.
svg
)
;
}
#
import
-
snapshot
:
:
before
{
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
import
.
svg
)
;
}
#
record
-
allocation
-
stacks
-
label
#
pop
-
view
-
button
-
label
{
border
-
inline
-
end
:
1px
solid
var
(
-
-
theme
-
splitter
-
color
)
;
padding
-
inline
-
end
:
5px
;
}
.
spacer
{
flex
:
1
;
}
#
filter
{
align
-
self
:
stretch
;
margin
:
2px
;
}
#
memory
-
tool
-
container
{
display
:
flex
;
flex
:
1
;
overflow
:
hidden
;
}
.
list
{
width
:
var
(
-
-
sidebar
-
width
)
;
min
-
width
:
var
(
-
-
sidebar
-
width
)
;
overflow
-
y
:
auto
;
margin
:
0
;
padding
:
0
;
background
-
color
:
var
(
-
-
theme
-
sidebar
-
background
)
;
border
-
inline
-
end
:
1px
solid
var
(
-
-
theme
-
splitter
-
color
)
;
}
.
snapshot
-
list
-
item
{
display
:
flex
;
flex
-
direction
:
column
;
color
:
var
(
-
-
theme
-
body
-
color
)
;
border
-
bottom
:
1px
solid
rgba
(
128
128
128
0
.
15
)
;
padding
:
8px
;
cursor
:
default
;
}
.
snapshot
-
list
-
item
.
selected
{
background
-
color
:
var
(
-
-
theme
-
selection
-
background
)
;
color
:
var
(
-
-
theme
-
selection
-
color
)
;
}
.
snapshot
-
list
-
item
.
selected
:
:
-
moz
-
selection
{
background
-
color
:
var
(
-
-
theme
-
selection
-
color
)
;
color
:
var
(
-
-
theme
-
selection
-
background
)
;
}
.
snapshot
-
list
-
item
.
snapshot
-
info
{
display
:
flex
;
justify
-
content
:
space
-
between
;
font
-
size
:
90
%
;
}
.
snapshot
-
list
-
item
.
snapshot
-
title
{
display
:
flex
;
justify
-
content
:
space
-
between
;
}
.
snapshot
-
list
-
item
.
save
{
text
-
decoration
:
underline
;
cursor
:
pointer
;
}
.
snapshot
-
list
-
item
.
delete
{
cursor
:
pointer
;
background
-
color
:
transparent
;
border
:
0
;
padding
:
0
;
position
:
relative
;
min
-
height
:
1em
;
min
-
width
:
1
.
3em
;
color
:
currentColor
;
}
.
snapshot
-
list
-
item
.
delete
:
:
before
{
display
:
block
;
width
:
16px
;
height
:
16px
;
content
:
"
"
;
background
-
image
:
url
(
"
chrome
:
/
/
devtools
/
skin
/
images
/
close
.
svg
"
)
;
background
-
repeat
:
no
-
repeat
;
-
moz
-
context
-
properties
:
fill
;
fill
:
currentColor
;
}
.
snapshot
-
list
-
item
>
.
snapshot
-
title
{
margin
-
bottom
:
14px
;
}
.
snapshot
-
list
-
item
>
.
snapshot
-
title
>
input
[
type
=
checkbox
]
{
margin
:
0
;
margin
-
inline
-
end
:
5px
;
}
.
snapshot
-
list
-
item
>
.
snapshot
-
state
.
snapshot
-
list
-
item
>
.
snapshot
-
totals
{
font
-
size
:
90
%
;
color
:
var
(
-
-
theme
-
body
-
color
-
alt
)
;
}
.
snapshot
-
list
-
item
.
selected
>
.
snapshot
-
state
.
snapshot
-
list
-
item
.
selected
>
.
snapshot
-
totals
{
color
:
inherit
!
important
;
}
.
vbox
{
display
:
flex
;
flex
-
direction
:
column
;
width
:
100
%
;
height
:
100
%
;
overflow
:
auto
;
padding
:
0
;
margin
:
0
;
}
.
vbox
>
*
{
flex
:
1
;
min
-
width
:
0
;
}
#
heap
-
view
{
;
display
:
flex
;
flex
:
1
;
background
-
color
:
var
(
-
-
theme
-
body
-
background
)
;
min
-
width
:
0
;
font
-
size
:
90
%
;
}
#
heap
-
view
>
.
heap
-
view
-
panel
{
display
:
flex
;
flex
-
direction
:
column
;
flex
:
1
;
min
-
width
:
0
;
}
#
heap
-
view
>
.
heap
-
view
-
panel
>
.
snapshot
-
status
#
heap
-
view
>
.
heap
-
view
-
panel
>
.
take
-
snapshot
#
heap
-
view
.
empty
#
shortest
-
paths
-
select
-
node
-
msg
{
margin
:
auto
;
margin
-
top
:
65px
;
font
-
size
:
120
%
;
}
#
heap
-
view
>
.
heap
-
view
-
panel
>
.
take
-
snapshot
{
padding
:
5px
;
}
#
heap
-
view
>
.
heap
-
view
-
panel
[
data
-
state
=
"
snapshot
-
state
-
error
"
]
pre
{
background
-
color
:
var
(
-
-
theme
-
body
-
background
)
;
margin
:
20px
;
padding
:
20px
;
}
.
header
{
display
:
flex
;
color
:
var
(
-
-
theme
-
body
-
color
)
;
background
-
color
:
var
(
-
-
theme
-
tab
-
toolbar
-
background
)
;
border
-
bottom
:
1px
solid
var
(
-
-
cell
-
border
-
color
)
;
flex
:
0
;
}
.
header
>
span
#
shortest
-
paths
-
header
{
text
-
overflow
:
ellipsis
;
line
-
height
:
var
(
-
-
heap
-
tree
-
header
-
height
)
;
justify
-
content
:
center
;
justify
-
self
:
center
;
white
-
space
:
nowrap
;
}
.
header
>
span
{
overflow
:
hidden
;
}
.
header
>
.
heap
-
tree
-
item
-
name
{
justify
-
content
:
flex
-
start
;
}
#
shortest
-
paths
{
background
-
color
:
var
(
-
-
theme
-
body
-
background
)
;
overflow
:
hidden
;
height
:
100
%
;
width
:
100
%
;
}
#
shortest
-
paths
-
select
-
node
-
msg
{
justify
-
self
:
center
;
}
.
tree
{
flex
:
1
;
overflow
-
y
:
auto
;
background
-
color
:
var
(
-
-
theme
-
body
-
background
)
;
}
.
tree
-
node
{
height
:
var
(
-
-
heap
-
tree
-
row
-
height
)
;
line
-
height
:
var
(
-
-
heap
-
tree
-
row
-
height
)
;
cursor
:
default
;
}
.
children
-
pointer
{
padding
-
inline
-
end
:
5px
;
}
.
children
-
pointer
:
dir
(
rtl
)
{
transform
:
scaleX
(
-
1
)
;
}
.
heap
-
tree
-
item
{
display
:
flex
;
}
.
tree
-
node
-
odd
{
background
-
color
:
var
(
-
-
row
-
alt
-
background
-
color
)
;
}
.
tree
-
node
:
hover
{
background
-
color
:
var
(
-
-
row
-
hover
-
background
-
color
)
;
}
.
heap
-
tree
-
item
.
focused
{
background
-
color
:
var
(
-
-
theme
-
selection
-
background
)
;
color
:
var
(
-
-
theme
-
selection
-
color
)
;
}
.
heap
-
tree
-
item
.
focused
:
:
-
moz
-
selection
{
background
-
color
:
var
(
-
-
theme
-
selection
-
color
)
;
color
:
var
(
-
-
theme
-
selection
-
background
)
;
}
.
heap
-
tree
-
item
-
individuals
.
heap
-
tree
-
item
-
bytes
.
heap
-
tree
-
item
-
count
.
heap
-
tree
-
item
-
total
-
bytes
.
heap
-
tree
-
item
-
total
-
count
{
display
:
flex
;
text
-
align
:
right
;
border
-
inline
-
end
:
var
(
-
-
cell
-
border
-
color
)
1px
solid
;
}
.
heap
-
tree
-
item
-
count
.
heap
-
tree
-
item
-
total
-
count
.
heap
-
tree
-
item
-
bytes
.
heap
-
tree
-
item
-
total
-
bytes
{
width
:
10
%
;
min
-
width
:
19ch
;
}
.
heap
-
tree
-
item
-
name
{
flex
:
1
;
padding
-
inline
-
start
:
5px
;
overflow
:
hidden
;
text
-
overflow
:
ellipsis
;
}
.
heap
-
tree
-
item
-
name
.
arrow
{
display
:
inline
-
block
;
vertical
-
align
:
middle
;
}
.
heap
-
tree
-
number
.
heap
-
tree
-
percent
.
heap
-
tree
-
item
-
name
{
white
-
space
:
nowrap
;
}
.
heap
-
tree
-
number
{
padding
:
0
3px
;
flex
:
1
;
color
:
var
(
-
-
theme
-
content
-
color3
)
;
direction
:
ltr
;
}
.
heap
-
tree
-
percent
{
padding
-
inline
-
start
:
3px
;
padding
-
inline
-
end
:
3px
;
}
.
heap
-
tree
-
number
.
heap
-
tree
-
percent
{
font
-
family
:
var
(
-
-
monospace
-
font
-
family
)
;
}
.
heap
-
tree
-
percent
{
width
:
4ch
;
}
.
heap
-
tree
-
item
.
focused
.
heap
-
tree
-
number
.
heap
-
tree
-
item
.
focused
.
heap
-
tree
-
percent
{
color
:
inherit
;
}
.
heap
-
tree
-
item
-
individuals
{
min
-
width
:
38px
;
overflow
:
hidden
;
margin
:
0
;
}
.
heap
-
tree
-
item
-
individuals
>
button
{
width
:
32px
;
margin
:
0
auto
!
important
;
color
:
inherit
;
}
.
tree
-
map
-
container
{
width
:
100
%
;
height
:
100
%
;
position
:
relative
;
overflow
:
hidden
;
}
.
error
:
:
before
{
content
:
"
"
;
display
:
inline
-
block
;
width
:
12px
;
height
:
12px
;
max
-
height
:
12px
;
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
webconsole
.
svg
)
;
background
-
size
:
72px
60px
;
background
-
position
:
-
24px
-
24px
;
background
-
repeat
:
no
-
repeat
;
margin
:
0px
;
margin
-
top
:
2px
;
margin
-
inline
-
end
:
5px
;
}
.
theme
-
light
.
error
:
:
before
{
background
-
image
:
url
(
chrome
:
/
/
devtools
/
skin
/
images
/
webconsole
.
svg
#
light
-
icons
)
;
}
.
separator
.
not
-
available
.
heap
-
tree
-
item
-
address
{
opacity
:
.
5
;
margin
-
left
:
.
5em
;
margin
-
right
:
.
5em
;
}
.
heap
-
tree
-
item
-
address
{
font
-
family
:
monospace
;
}
.
no
-
allocation
-
stacks
{
border
-
color
:
var
(
-
-
theme
-
splitter
-
color
)
;
border
-
style
:
solid
;
border
-
width
:
0px
0px
1px
0px
;
text
-
align
:
center
;
padding
:
5px
;
}
svg
{
-
-
arrow
-
color
:
var
(
-
-
theme
-
splitter
-
color
)
;
-
-
text
-
color
:
var
(
-
-
theme
-
body
-
color
)
;
}
.
theme
-
dark
svg
{
-
-
arrow
-
color
:
var
(
-
-
theme
-
body
-
color
-
alt
)
;
}
svg
#
arrowhead
{
fill
:
var
(
-
-
arrow
-
color
)
!
important
;
}
.
edgePath
path
{
stroke
-
width
:
1px
;
fill
:
none
;
stroke
:
var
(
-
-
arrow
-
color
)
;
}
g
.
edgeLabel
rect
{
fill
:
var
(
-
-
theme
-
body
-
background
)
;
}
g
.
edgeLabel
tspan
{
fill
:
var
(
-
-
text
-
color
)
;
}
.
nodes
rect
{
stroke
-
width
:
1px
;
stroke
:
var
(
-
-
theme
-
splitter
-
color
)
;
fill
:
var
(
-
-
theme
-
toolbar
-
background
)
;
}
text
{
font
-
size
:
1
.
25em
;
fill
:
var
(
-
-
text
-
color
)
;
direction
:
ltr
;
}
