"
use
strict
"
;
const
{
actions
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
memory
/
constants
.
js
"
)
;
const
{
refresh
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
memory
/
actions
/
refresh
.
js
"
)
;
const
{
debounce
}
=
require
(
"
resource
:
/
/
devtools
/
shared
/
debounce
.
js
"
)
;
const
{
isIgnoringActions
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
redux
/
middleware
/
ignore
.
js
"
)
;
const
setFilterString
=
(
exports
.
setFilterString
=
function
(
filterString
)
{
return
{
type
:
actions
.
SET_FILTER_STRING
filter
:
filterString
}
;
}
)
;
const
FILTER_INPUT_DEBOUNCE_MS
=
250
;
const
debouncedRefreshDispatcher
=
debounce
(
(
dispatch
getState
heapWorker
)
=
>
{
if
(
isIgnoringActions
(
getState
(
)
)
)
{
return
;
}
dispatch
(
refresh
(
heapWorker
)
)
;
}
FILTER_INPUT_DEBOUNCE_MS
)
;
exports
.
setFilterStringAndRefresh
=
function
(
filterString
heapWorker
)
{
return
(
{
dispatch
getState
}
)
=
>
{
dispatch
(
setFilterString
(
filterString
)
)
;
debouncedRefreshDispatcher
(
dispatch
getState
heapWorker
)
;
}
;
}
;
