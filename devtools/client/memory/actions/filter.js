"
use
strict
"
;
const
{
clearTimeout
setTimeout
}
=
require
(
"
sdk
/
timers
"
)
;
const
{
actions
}
=
require
(
"
.
.
/
constants
"
)
;
const
{
refreshSelectedCensus
}
=
require
(
"
.
/
snapshot
"
)
;
const
setFilterString
=
exports
.
setFilterString
=
function
(
filterString
)
{
return
{
type
:
actions
.
SET_FILTER_STRING
filter
:
filterString
}
;
}
;
const
FILTER_INPUT_DEBOUNCE_MS
=
250
;
let
timerId
=
null
;
exports
.
setFilterStringAndRefresh
=
function
(
filterString
heapWorker
)
{
return
function
*
(
dispatch
getState
)
{
dispatch
(
setFilterString
(
filterString
)
)
;
if
(
timerId
!
=
=
null
)
{
clearTimeout
(
timerId
)
;
}
timerId
=
setTimeout
(
(
)
=
>
dispatch
(
refreshSelectedCensus
(
heapWorker
)
)
FILTER_INPUT_DEBOUNCE_MS
)
;
}
;
}
;
