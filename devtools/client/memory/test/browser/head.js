"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
devtools
/
client
/
framework
/
test
/
shared
-
head
.
js
"
this
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
memory
.
enabled
"
true
)
;
function
dumpn
(
msg
)
{
dump
(
"
MEMORY
:
"
+
msg
+
"
\
n
"
)
;
}
this
.
openMemoryPanel
=
Task
.
async
(
function
*
(
tab
)
{
info
(
"
Opening
memory
panel
.
"
)
;
const
target
=
TargetFactory
.
forTab
(
tab
)
;
const
toolbox
=
yield
gDevTools
.
showToolbox
(
target
"
memory
"
)
;
info
(
"
Memory
panel
shown
successfully
.
"
)
;
let
panel
=
toolbox
.
getCurrentPanel
(
)
;
return
{
tab
panel
}
;
}
)
;
this
.
closeMemoryPanel
=
Task
.
async
(
function
*
(
tab
)
{
info
(
"
Closing
memory
panel
.
"
)
;
const
target
=
TargetFactory
.
forTab
(
tab
)
;
const
toolbox
=
gDevTools
.
getToolbox
(
target
)
;
yield
toolbox
.
destroy
(
)
;
info
(
"
Closed
memory
panel
successfully
.
"
)
;
}
)
;
function
makeMemoryTest
(
url
generator
)
{
return
Task
.
async
(
function
*
(
)
{
waitForExplicitFinish
(
)
;
const
tab
=
yield
addTab
(
url
)
;
const
results
=
yield
openMemoryPanel
(
tab
)
;
try
{
yield
*
generator
(
results
)
;
}
catch
(
err
)
{
ok
(
false
"
Got
an
error
:
"
+
DevToolsUtils
.
safeErrorString
(
err
)
)
;
}
yield
closeMemoryPanel
(
tab
)
;
yield
removeTab
(
tab
)
;
finish
(
)
;
}
)
;
}
