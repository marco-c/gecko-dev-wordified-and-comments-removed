"
use
strict
"
;
define
(
function
(
require
exports
module
)
{
const
{
Component
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
dom
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
{
input
}
=
dom
;
const
searchDelay
=
250
;
class
SearchBox
extends
Component
{
static
get
propTypes
(
)
{
return
{
actions
:
PropTypes
.
object
}
;
}
constructor
(
props
)
{
super
(
props
)
;
this
.
onSearch
=
this
.
onSearch
.
bind
(
this
)
;
this
.
doSearch
=
this
.
doSearch
.
bind
(
this
)
;
}
onSearch
(
event
)
{
const
searchBox
=
event
.
target
;
const
win
=
searchBox
.
ownerDocument
.
defaultView
;
if
(
this
.
searchTimeout
)
{
win
.
clearTimeout
(
this
.
searchTimeout
)
;
}
const
callback
=
this
.
doSearch
.
bind
(
this
searchBox
)
;
this
.
searchTimeout
=
win
.
setTimeout
(
callback
searchDelay
)
;
}
doSearch
(
searchBox
)
{
this
.
props
.
actions
.
onSearch
(
searchBox
.
value
)
;
}
render
(
)
{
return
(
input
(
{
className
:
"
searchBox
devtools
-
filterinput
"
placeholder
:
JSONView
.
Locale
.
STR
(
"
jsonViewer
.
filterJSON
"
)
onChange
:
this
.
onSearch
}
)
)
;
}
}
exports
.
SearchBox
=
SearchBox
;
}
)
;
