"
use
strict
"
;
const
{
ELLIPSIS
}
=
require
(
"
devtools
/
shared
/
l10n
"
)
;
add_task
(
async
function
(
)
{
info
(
"
Test
short
URL
linkification
JSON
started
"
)
;
const
url
=
"
http
:
/
/
example
.
com
/
"
;
const
tab
=
await
addJsonViewTab
(
"
data
:
application
/
json
"
+
JSON
.
stringify
(
[
url
]
)
)
;
await
testLinkNavigation
(
{
browser
:
tab
.
linkedBrowser
url
}
)
;
info
(
"
Switch
back
to
the
JSONViewer
"
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab
)
;
await
testLinkNavigation
(
{
browser
:
tab
.
linkedBrowser
url
clickLabel
:
true
}
)
;
}
)
;
add_task
(
async
function
(
)
{
info
(
"
Test
long
URL
linkification
JSON
started
"
)
;
const
url
=
"
http
:
/
/
example
.
com
/
"
+
"
a
"
.
repeat
(
100
)
;
const
tab
=
await
addJsonViewTab
(
"
data
:
application
/
json
"
+
JSON
.
stringify
(
[
url
]
)
)
;
await
testLinkNavigation
(
{
browser
:
tab
.
linkedBrowser
url
}
)
;
info
(
"
Switch
back
to
the
JSONViewer
"
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab
)
;
await
testLinkNavigation
(
{
browser
:
tab
.
linkedBrowser
url
urlText
:
url
.
slice
(
0
24
)
+
ELLIPSIS
+
url
.
slice
(
-
24
)
clickLabel
:
true
}
)
;
}
)
;
async
function
testLinkNavigation
(
{
browser
url
urlText
clickLabel
=
false
}
)
{
const
onTabLoaded
=
BrowserTestUtils
.
waitForNewTab
(
gBrowser
url
)
;
SpecialPowers
.
spawn
(
browser
[
[
urlText
|
|
url
url
clickLabel
]
]
args
=
>
{
const
[
expectedURLText
expectedURL
shouldClickLabel
]
=
args
;
const
{
document
}
=
content
;
if
(
shouldClickLabel
=
=
=
true
)
{
document
.
querySelector
(
"
.
jsonPanelBox
.
treeTable
.
treeLabel
"
)
.
click
(
)
;
}
const
link
=
document
.
querySelector
(
"
.
jsonPanelBox
.
treeTable
.
treeValueCell
a
"
)
;
is
(
link
.
textContent
expectedURLText
"
The
expected
URL
is
displayed
.
"
)
;
is
(
link
.
href
expectedURL
"
The
URL
was
linkified
.
"
)
;
link
.
click
(
)
;
}
)
;
const
newTab
=
await
onTabLoaded
;
ok
(
newTab
"
The
expected
tab
was
opened
.
"
)
;
}
