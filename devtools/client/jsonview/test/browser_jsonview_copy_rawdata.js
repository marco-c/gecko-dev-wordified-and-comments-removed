"
use
strict
"
;
const
TEST_JSON_URL
=
URL_ROOT
+
"
simple_json
.
json
"
;
let
jsonText
=
"
{
\
"
name
\
"
:
\
"
value
\
"
}
\
n
"
;
let
prettyJson
=
"
{
\
n
\
"
name
\
"
:
\
"
value
\
"
\
n
}
"
;
add_task
(
function
*
(
)
{
info
(
"
Test
copy
raw
data
started
"
)
;
yield
addJsonViewTab
(
TEST_JSON_URL
)
;
yield
selectJsonViewContentTab
(
"
rawdata
"
)
;
let
text
=
yield
getElementText
(
"
.
textPanelBox
.
data
"
)
;
is
(
text
jsonText
"
Proper
JSON
must
be
displayed
in
DOM
"
)
;
let
browser
=
gBrowser
.
selectedBrowser
;
yield
waitForClipboardPromise
(
function
setup
(
)
{
BrowserTestUtils
.
synthesizeMouseAtCenter
(
"
.
textPanelBox
.
toolbar
button
.
copy
"
{
}
browser
)
;
}
jsonText
)
;
yield
BrowserTestUtils
.
synthesizeMouseAtCenter
(
"
.
textPanelBox
.
toolbar
button
.
prettyprint
"
{
}
browser
)
;
let
prettyText
=
yield
getElementText
(
"
.
textPanelBox
.
data
"
)
;
prettyText
=
normalizeNewLines
(
prettyText
)
;
ok
(
prettyText
.
startsWith
(
prettyJson
)
"
Pretty
printed
JSON
must
be
displayed
"
)
;
yield
waitForClipboardPromise
(
function
setup
(
)
{
BrowserTestUtils
.
synthesizeMouseAtCenter
(
"
.
textPanelBox
.
toolbar
button
.
copy
"
{
}
browser
)
;
}
function
validator
(
value
)
{
let
str
=
normalizeNewLines
(
value
)
;
return
str
=
=
prettyJson
;
}
)
;
}
)
;
