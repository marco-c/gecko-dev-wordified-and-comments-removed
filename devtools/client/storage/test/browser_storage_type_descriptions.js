"
use
strict
"
;
const
getStorageTypeURL
=
require
(
"
devtools
/
client
/
storage
/
utils
/
mdn
-
utils
"
)
;
const
storeItems
=
[
"
Cache
"
"
cookies
"
"
indexedDB
"
"
localStorage
"
"
sessionStorage
"
]
;
function
testTree
(
)
{
const
doc
=
gPanelWindow
.
document
;
for
(
const
type
of
storeItems
)
{
ok
(
doc
.
querySelector
(
[
data
-
id
=
'
{
JSON
.
stringify
(
[
type
]
)
}
'
]
)
Tree
item
{
type
}
should
be
present
in
the
storage
tree
)
;
}
}
const
testDescriptions
=
async
function
(
)
{
const
doc
=
gPanelWindow
.
document
;
const
win
=
doc
.
defaultView
;
gUI
.
tree
.
expandAll
(
)
;
for
(
const
type
of
storeItems
)
{
await
selectTreeItem
(
[
type
]
)
;
is
(
win
.
getComputedStyle
(
doc
.
querySelector
(
"
.
table
-
widget
-
body
"
)
)
.
display
"
none
"
"
Table
must
be
hidden
"
)
;
is
(
win
.
getComputedStyle
(
doc
.
querySelector
(
"
.
table
-
widget
-
empty
-
text
"
)
)
.
display
"
block
"
"
Description
for
the
type
must
be
shown
"
)
;
const
learnMoreLink
=
doc
.
querySelector
(
"
.
table
-
widget
-
empty
-
text
>
a
"
)
;
ok
(
learnMoreLink
"
There
is
a
[
Learn
more
]
link
"
)
;
const
expectedURL
=
getStorageTypeURL
(
type
)
+
"
?
utm_source
=
devtools
&
utm_medium
=
storage
-
inspector
"
;
is
(
learnMoreLink
.
href
expectedURL
Learn
more
link
refers
to
{
expectedURL
}
)
;
}
}
;
add_task
(
async
function
(
)
{
await
openTabAndSetupStorage
(
MAIN_DOMAIN
+
"
storage
-
empty
-
objectstores
.
html
"
)
;
testTree
(
)
;
await
testDescriptions
(
)
;
await
finishTests
(
)
;
}
)
;
