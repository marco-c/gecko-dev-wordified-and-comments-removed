"
use
strict
"
;
add_task
(
function
*
(
)
{
yield
openTabAndSetupStorage
(
MAIN_DOMAIN
+
"
storage
-
updates
.
html
"
)
;
gUI
.
tree
.
expandAll
(
)
;
ok
(
gUI
.
sidebar
.
hidden
"
Sidebar
is
initially
hidden
"
)
;
let
c1id
=
getCookieId
(
"
c1
"
"
test1
.
example
.
org
"
"
/
browser
"
)
;
yield
selectTableItem
(
c1id
)
;
let
initialValue
=
[
[
{
name
:
"
c1
"
value
:
"
1
.
2
.
3
.
4
.
5
.
6
.
7
"
}
{
name
:
"
c1
.
Path
"
value
:
"
/
browser
"
}
]
[
{
name
:
"
c1
"
value
:
"
Array
"
}
{
name
:
"
c1
.
0
"
value
:
"
1
"
}
{
name
:
"
c1
.
6
"
value
:
"
7
"
}
]
]
;
let
finalValue
=
[
[
{
name
:
"
c1
"
value
:
'
{
"
foo
"
:
4
"
bar
"
:
6
}
'
}
{
name
:
"
c1
.
Path
"
value
:
"
/
browser
"
}
]
[
{
name
:
"
c1
"
value
:
"
Object
"
}
{
name
:
"
c1
.
foo
"
value
:
"
4
"
}
{
name
:
"
c1
.
bar
"
value
:
"
6
"
}
]
]
;
yield
findVariableViewProperties
(
initialValue
[
0
]
false
)
;
yield
findVariableViewProperties
(
initialValue
[
1
]
true
)
;
yield
checkState
(
[
[
[
"
cookies
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
getCookieId
(
"
c1
"
"
test1
.
example
.
org
"
"
/
browser
"
)
getCookieId
(
"
c2
"
"
test1
.
example
.
org
"
"
/
browser
"
)
]
]
]
)
;
checkCell
(
c1id
"
value
"
"
1
.
2
.
3
.
4
.
5
.
6
.
7
"
)
;
yield
addCookie
(
"
c1
"
'
{
"
foo
"
:
4
"
bar
"
:
6
}
'
"
/
browser
"
)
;
yield
gUI
.
once
(
"
store
-
objects
-
edit
"
)
;
yield
findVariableViewProperties
(
finalValue
[
0
]
false
)
;
yield
findVariableViewProperties
(
finalValue
[
1
]
true
)
;
yield
checkState
(
[
[
[
"
cookies
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
getCookieId
(
"
c1
"
"
test1
.
example
.
org
"
"
/
browser
"
)
getCookieId
(
"
c2
"
"
test1
.
example
.
org
"
"
/
browser
"
)
]
]
]
)
;
checkCell
(
c1id
"
value
"
'
{
"
foo
"
:
4
"
bar
"
:
6
}
'
)
;
yield
addCookie
(
"
c3
"
"
booyeah
"
)
;
yield
gUI
.
once
(
"
store
-
objects
-
edit
"
)
;
yield
checkState
(
[
[
[
"
cookies
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
getCookieId
(
"
c1
"
"
test1
.
example
.
org
"
"
/
browser
"
)
getCookieId
(
"
c2
"
"
test1
.
example
.
org
"
"
/
browser
"
)
getCookieId
(
"
c3
"
"
test1
.
example
.
org
"
"
/
browser
/
devtools
/
client
/
storage
/
test
/
"
)
]
]
]
)
;
let
c3id
=
getCookieId
(
"
c3
"
"
test1
.
example
.
org
"
"
/
browser
/
devtools
/
client
/
storage
/
test
/
"
)
;
checkCell
(
c3id
"
value
"
"
booyeah
"
)
;
yield
addCookie
(
"
c4
"
"
booyeah
"
)
;
yield
gUI
.
once
(
"
store
-
objects
-
edit
"
)
;
yield
checkState
(
[
[
[
"
cookies
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
getCookieId
(
"
c1
"
"
test1
.
example
.
org
"
"
/
browser
"
)
getCookieId
(
"
c2
"
"
test1
.
example
.
org
"
"
/
browser
"
)
getCookieId
(
"
c3
"
"
test1
.
example
.
org
"
"
/
browser
/
devtools
/
client
/
storage
/
test
/
"
)
getCookieId
(
"
c4
"
"
test1
.
example
.
org
"
"
/
browser
/
devtools
/
client
/
storage
/
test
/
"
)
]
]
]
)
;
let
c4id
=
getCookieId
(
"
c4
"
"
test1
.
example
.
org
"
"
/
browser
/
devtools
/
client
/
storage
/
test
/
"
)
;
checkCell
(
c4id
"
value
"
"
booyeah
"
)
;
yield
removeCookie
(
"
c1
"
"
/
browser
"
)
;
yield
gUI
.
once
(
"
store
-
objects
-
edit
"
)
;
yield
checkState
(
[
[
[
"
cookies
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
getCookieId
(
"
c2
"
"
test1
.
example
.
org
"
"
/
browser
"
)
getCookieId
(
"
c3
"
"
test1
.
example
.
org
"
"
/
browser
/
devtools
/
client
/
storage
/
test
/
"
)
getCookieId
(
"
c4
"
"
test1
.
example
.
org
"
"
/
browser
/
devtools
/
client
/
storage
/
test
/
"
)
]
]
]
)
;
ok
(
!
gUI
.
sidebar
.
hidden
"
Sidebar
still
visible
for
next
row
"
)
;
yield
findVariableViewProperties
(
[
{
name
:
"
c2
"
value
:
"
foobar
"
}
]
)
;
yield
removeCookie
(
"
c3
"
)
;
yield
gUI
.
once
(
"
store
-
objects
-
edit
"
)
;
yield
checkState
(
[
[
[
"
cookies
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
getCookieId
(
"
c2
"
"
test1
.
example
.
org
"
"
/
browser
"
)
getCookieId
(
"
c4
"
"
test1
.
example
.
org
"
"
/
browser
/
devtools
/
client
/
storage
/
test
/
"
)
]
]
]
)
;
yield
findVariableViewProperties
(
[
{
name
:
"
c2
"
value
:
"
foobar
"
}
]
)
;
yield
removeCookie
(
"
c2
"
"
/
browser
"
)
;
yield
gUI
.
once
(
"
store
-
objects
-
edit
"
)
;
yield
checkState
(
[
[
[
"
cookies
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
getCookieId
(
"
c4
"
"
test1
.
example
.
org
"
"
/
browser
/
devtools
/
client
/
storage
/
test
/
"
)
]
]
]
)
;
yield
findVariableViewProperties
(
[
{
name
:
"
c4
"
value
:
"
booyeah
"
}
]
)
;
yield
removeCookie
(
"
c4
"
)
;
yield
gUI
.
once
(
"
store
-
objects
-
edit
"
)
;
yield
checkState
(
[
[
[
"
cookies
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
]
]
]
)
;
ok
(
gUI
.
sidebar
.
hidden
"
Sidebar
is
hidden
when
no
rows
"
)
;
yield
finishTests
(
)
;
}
)
;
function
*
addCookie
(
name
value
path
)
{
yield
ContentTask
.
spawn
(
gBrowser
.
selectedBrowser
[
name
value
path
]
(
[
nam
valu
pat
]
)
=
>
{
content
.
wrappedJSObject
.
addCookie
(
nam
valu
pat
)
;
}
)
;
}
function
*
removeCookie
(
name
path
)
{
yield
ContentTask
.
spawn
(
gBrowser
.
selectedBrowser
[
name
path
]
(
[
nam
pat
]
)
=
>
{
content
.
wrappedJSObject
.
removeCookie
(
nam
pat
)
;
}
)
;
}
