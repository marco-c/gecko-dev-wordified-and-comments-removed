"
use
strict
"
;
add_task
(
async
function
(
)
{
await
testNavigation
(
)
;
}
)
;
add_task
(
async
function
(
)
{
enableTargetSwitching
(
)
;
await
testNavigation
(
)
;
}
)
;
async
function
testNavigation
(
)
{
const
URL1
=
buildURLWithContent
(
"
example
.
com
"
<
h1
>
example
.
com
<
/
h1
>
+
<
script
>
localStorage
.
setItem
(
"
lorem
"
"
ipsum
"
)
;
<
/
script
>
)
;
const
URL2
=
buildURLWithContent
(
"
example
.
net
"
<
h1
>
example
.
net
<
/
h1
>
+
<
script
>
localStorage
.
setItem
(
"
foo
"
"
bar
"
)
;
<
/
script
>
)
;
await
openTabAndSetupStorage
(
URL1
)
;
const
doc
=
gPanelWindow
.
document
;
checkTree
(
doc
[
"
localStorage
"
"
https
:
/
/
example
.
com
"
]
)
;
await
selectTreeItem
(
[
"
localStorage
"
"
https
:
/
/
example
.
com
"
]
)
;
checkStorageData
(
"
lorem
"
"
ipsum
"
)
;
info
(
"
Cleaning
up
localStorage
"
)
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
async
function
(
)
{
const
win
=
content
.
wrappedJSObject
;
await
win
.
localStorage
.
clear
(
)
;
}
)
;
await
navigateTo
(
URL2
)
;
info
(
"
Waiting
for
storage
tree
to
refresh
and
show
correct
host
"
)
;
await
waitUntil
(
(
)
=
>
isInTree
(
doc
[
"
localStorage
"
"
https
:
/
/
example
.
net
"
]
)
)
;
ok
(
!
isInTree
(
doc
[
"
localStorage
"
"
https
:
/
/
example
.
com
"
]
)
"
example
.
com
item
is
not
in
the
tree
anymore
"
)
;
await
reloadBrowser
(
)
;
info
(
"
Waiting
for
storage
tree
to
refresh
and
show
correct
host
"
)
;
await
waitUntil
(
(
)
=
>
isInTree
(
doc
[
"
localStorage
"
"
https
:
/
/
example
.
net
"
]
)
)
;
await
selectTreeItem
(
[
"
localStorage
"
"
https
:
/
/
example
.
net
"
]
)
;
checkStorageData
(
"
foo
"
"
bar
"
)
;
info
(
"
Check
that
the
localStorage
node
still
has
the
expected
label
"
)
;
is
(
getTreeNodeLabel
(
doc
[
"
localStorage
"
]
)
"
Local
Storage
"
"
localStorage
item
is
properly
displayed
"
)
;
}
