"
use
strict
"
;
const
storeItems
=
[
[
[
"
indexedDB
"
"
https
:
/
/
test1
.
example
.
org
"
]
[
"
idb1
(
default
)
"
"
idb2
(
default
)
"
]
]
[
[
"
indexedDB
"
"
https
:
/
/
test1
.
example
.
org
"
"
idb1
(
default
)
"
]
[
"
obj1
"
"
obj2
"
]
]
[
[
"
indexedDB
"
"
https
:
/
/
test1
.
example
.
org
"
"
idb2
(
default
)
"
]
[
]
]
[
[
"
indexedDB
"
"
https
:
/
/
test1
.
example
.
org
"
"
idb1
(
default
)
"
"
obj1
"
]
[
1
2
3
]
]
[
[
"
indexedDB
"
"
https
:
/
/
test1
.
example
.
org
"
"
idb1
(
default
)
"
"
obj2
"
]
[
1
]
]
]
;
function
testTree
(
)
{
const
doc
=
gPanelWindow
.
document
;
for
(
const
[
item
]
of
storeItems
)
{
ok
(
doc
.
querySelector
(
[
data
-
id
=
'
{
JSON
.
stringify
(
item
)
}
'
]
)
Tree
item
{
item
}
should
be
present
in
the
storage
tree
)
;
}
}
const
testTables
=
async
function
(
)
{
const
doc
=
gPanelWindow
.
document
;
gUI
.
tree
.
expandAll
(
)
;
for
(
const
[
item
ids
]
of
storeItems
)
{
await
selectTreeItem
(
item
)
;
is
(
doc
.
querySelectorAll
(
"
.
table
-
widget
-
wrapper
:
first
-
of
-
type
.
table
-
widget
-
cell
"
)
.
length
ids
.
length
"
Number
of
items
in
table
is
correct
"
)
;
for
(
const
id
of
ids
)
{
ok
(
doc
.
querySelector
(
"
.
table
-
widget
-
cell
[
data
-
id
=
'
"
+
id
+
"
'
]
"
)
Table
item
{
id
}
should
be
present
)
;
}
}
}
;
add_task
(
async
function
(
)
{
await
openTabAndSetupStorage
(
MAIN_DOMAIN_SECURED
+
"
storage
-
empty
-
objectstores
.
html
"
)
;
testTree
(
)
;
await
testTables
(
)
;
}
)
;
