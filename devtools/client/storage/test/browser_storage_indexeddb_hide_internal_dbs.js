"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
devtools
/
client
/
framework
/
browser
-
toolbox
/
test
/
helpers
-
browser
-
toolbox
.
js
"
this
)
;
add_task
(
async
function
(
)
{
await
openTabAndSetupStorage
(
MAIN_DOMAIN
+
"
storage
-
empty
-
objectstores
.
html
"
)
;
const
doc
=
gPanelWindow
.
document
;
info
(
"
Check
indexedDB
tree
in
toolbox
"
)
;
const
hosts
=
getDBHostsInTree
(
doc
)
;
is
(
hosts
.
length
1
"
There
is
only
one
host
for
indexedDB
storage
"
)
;
is
(
hosts
[
0
]
"
http
:
/
/
test1
.
example
.
org
"
"
Host
is
test1
.
example
.
org
"
)
;
info
(
"
awaiting
to
open
browser
toolbox
"
)
;
const
ToolboxTask
=
await
initBrowserToolboxTask
(
)
;
await
ToolboxTask
.
importFunctions
(
{
getDBHostsInTree
}
)
;
await
ToolboxTask
.
spawn
(
null
async
(
)
=
>
{
info
(
"
Selecting
storage
panel
"
)
;
await
gToolbox
.
selectTool
(
"
storage
"
)
;
info
(
"
Check
indexedDB
tree
in
browser
toolbox
"
)
;
const
browserToolboxDoc
=
gToolbox
.
getCurrentPanel
(
)
.
panelWindow
.
document
;
const
browserToolboxHosts
=
getDBHostsInTree
(
browserToolboxDoc
)
;
ok
(
browserToolboxHosts
.
length
>
1
"
There
are
more
than
1
indexedDB
hosts
"
)
;
ok
(
browserToolboxHosts
.
includes
(
"
about
:
devtools
-
toolbox
"
)
"
about
:
devtools
-
toolbox
host
is
present
"
)
;
ok
(
browserToolboxHosts
.
includes
(
"
chrome
"
)
"
chrome
host
is
present
"
)
;
ok
(
browserToolboxHosts
.
includes
(
"
indexeddb
+
+
+
fx
-
devtools
"
)
"
fx
-
devtools
host
is
present
"
)
;
}
)
;
info
(
"
Destroying
browser
toolbox
"
)
;
await
ToolboxTask
.
destroy
(
)
;
}
)
;
function
getDBHostsInTree
(
doc
)
{
const
treeId
=
JSON
.
stringify
(
[
"
indexedDB
"
]
)
;
const
items
=
doc
.
querySelectorAll
(
[
data
-
id
=
'
{
treeId
}
'
]
>
.
tree
-
widget
-
children
>
*
)
;
return
[
.
.
.
items
]
.
map
(
x
=
>
JSON
.
parse
(
x
.
dataset
.
id
)
[
1
]
)
;
}
