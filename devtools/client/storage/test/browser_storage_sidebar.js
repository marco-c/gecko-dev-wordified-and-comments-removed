"
use
strict
"
;
const
testCases
=
[
{
location
:
[
"
cookies
"
"
https
:
/
/
sectest1
.
example
.
org
"
]
sidebarHidden
:
true
}
{
location
:
getCookieId
(
"
cs2
"
"
.
example
.
org
"
"
/
"
)
sidebarHidden
:
false
}
{
sendEscape
:
true
}
{
location
:
getCookieId
(
"
cs2
"
"
.
example
.
org
"
"
/
"
)
sidebarHidden
:
true
}
{
location
:
getCookieId
(
"
uc1
"
"
.
example
.
org
"
"
/
"
)
sidebarHidden
:
true
}
{
location
:
getCookieId
(
"
uc1
"
"
.
example
.
org
"
"
/
"
)
sidebarHidden
:
true
}
{
location
:
[
"
localStorage
"
"
http
:
/
/
sectest1
.
example
.
org
"
]
sidebarHidden
:
true
}
{
location
:
"
iframe
-
u
-
ls1
"
sidebarHidden
:
false
}
{
location
:
"
iframe
-
u
-
ls1
"
sidebarHidden
:
false
}
{
sendEscape
:
true
}
{
location
:
[
"
sessionStorage
"
"
http
:
/
/
test1
.
example
.
org
"
]
sidebarHidden
:
true
}
{
location
:
"
ss1
"
sidebarHidden
:
false
}
{
sendEscape
:
true
}
{
location
:
[
"
indexedDB
"
"
http
:
/
/
test1
.
example
.
org
"
]
sidebarHidden
:
true
}
{
location
:
"
idb2
(
default
)
"
sidebarHidden
:
false
}
{
location
:
[
"
indexedDB
"
"
http
:
/
/
test1
.
example
.
org
"
"
idb2
(
default
)
"
"
obj3
"
]
sidebarHidden
:
true
}
{
location
:
[
"
indexedDB
"
"
https
:
/
/
sectest1
.
example
.
org
"
"
idb
-
s2
(
default
)
"
]
sidebarHidden
:
true
}
{
location
:
"
obj
-
s2
"
sidebarHidden
:
false
}
{
sendEscape
:
true
}
{
location
:
"
obj
-
s2
"
sidebarHidden
:
true
}
]
;
add_task
(
async
function
(
)
{
await
openTabAndSetupStorage
(
MAIN_DOMAIN
+
"
storage
-
listings
.
html
"
)
;
for
(
const
test
of
testCases
)
{
const
{
location
sidebarHidden
sendEscape
}
=
test
;
info
(
"
running
"
+
JSON
.
stringify
(
test
)
)
;
if
(
Array
.
isArray
(
location
)
)
{
await
selectTreeItem
(
location
)
;
}
else
if
(
location
)
{
await
selectTableItem
(
location
)
;
}
if
(
sendEscape
)
{
EventUtils
.
sendKey
(
"
ESCAPE
"
gPanelWindow
)
;
}
else
{
is
(
gUI
.
sidebar
.
hidden
sidebarHidden
"
correct
visibility
state
of
sidebar
.
"
)
;
}
info
(
"
-
"
.
repeat
(
80
)
)
;
}
}
)
;
