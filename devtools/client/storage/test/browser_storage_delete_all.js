"
use
strict
"
;
add_task
(
function
*
(
)
{
yield
openTabAndSetupStorage
(
MAIN_DOMAIN
+
"
storage
-
listings
.
html
"
)
;
let
contextMenu
=
gPanelWindow
.
document
.
getElementById
(
"
storage
-
table
-
popup
"
)
;
let
menuDeleteAllItem
=
contextMenu
.
querySelector
(
"
#
storage
-
table
-
popup
-
delete
-
all
"
)
;
info
(
test
state
before
delete
)
;
const
beforeState
=
[
[
[
"
localStorage
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
"
ls1
"
"
ls2
"
]
]
[
[
"
localStorage
"
"
http
:
/
/
sectest1
.
example
.
org
"
]
[
"
iframe
-
u
-
ls1
"
]
]
[
[
"
localStorage
"
"
https
:
/
/
sectest1
.
example
.
org
"
]
[
"
iframe
-
s
-
ls1
"
]
]
[
[
"
sessionStorage
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
"
ss1
"
]
]
[
[
"
sessionStorage
"
"
http
:
/
/
sectest1
.
example
.
org
"
]
[
"
iframe
-
u
-
ss1
"
"
iframe
-
u
-
ss2
"
]
]
[
[
"
sessionStorage
"
"
https
:
/
/
sectest1
.
example
.
org
"
]
[
"
iframe
-
s
-
ss1
"
]
]
]
;
yield
checkState
(
beforeState
)
;
info
(
do
the
delete
)
;
const
deleteHosts
=
[
[
[
"
localStorage
"
"
https
:
/
/
sectest1
.
example
.
org
"
]
"
iframe
-
s
-
ls1
"
]
[
[
"
sessionStorage
"
"
https
:
/
/
sectest1
.
example
.
org
"
]
"
iframe
-
s
-
ss1
"
]
]
;
for
(
let
[
store
rowName
]
of
deleteHosts
)
{
let
storeName
=
store
.
join
(
"
>
"
)
;
yield
selectTreeItem
(
store
)
;
let
eventWait
=
gUI
.
once
(
"
store
-
objects
-
cleared
"
)
;
let
cell
=
getRowCells
(
rowName
)
.
name
;
yield
waitForContextMenu
(
contextMenu
cell
(
)
=
>
{
info
(
Opened
context
menu
in
{
storeName
}
row
'
{
rowName
}
'
)
;
menuDeleteAllItem
.
click
(
)
;
}
)
;
yield
eventWait
;
}
info
(
test
state
after
delete
)
;
const
afterState
=
[
[
[
"
localStorage
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
"
ls1
"
"
ls2
"
]
]
[
[
"
localStorage
"
"
http
:
/
/
sectest1
.
example
.
org
"
]
[
"
iframe
-
u
-
ls1
"
]
]
[
[
"
localStorage
"
"
https
:
/
/
sectest1
.
example
.
org
"
]
[
]
]
[
[
"
sessionStorage
"
"
http
:
/
/
test1
.
example
.
org
"
]
[
"
ss1
"
]
]
[
[
"
sessionStorage
"
"
http
:
/
/
sectest1
.
example
.
org
"
]
[
"
iframe
-
u
-
ss1
"
"
iframe
-
u
-
ss2
"
]
]
[
[
"
sessionStorage
"
"
https
:
/
/
sectest1
.
example
.
org
"
]
[
]
]
]
;
yield
checkState
(
afterState
)
;
yield
finishTests
(
)
;
}
)
;
