"
use
strict
"
;
add_task
(
function
*
(
)
{
yield
openTabAndSetupStorage
(
MAIN_DOMAIN
+
"
storage
-
search
.
html
"
)
;
let
=
sel
=
>
gPanelWindow
.
document
.
querySelectorAll
(
sel
)
;
gUI
.
tree
.
expandAll
(
)
;
yield
selectTreeItem
(
[
"
localStorage
"
"
http
:
/
/
test1
.
example
.
org
"
]
)
;
let
testcases
=
[
{
value
:
"
FoO
"
results
:
[
0
0
1
1
0
1
0
]
}
{
value
:
"
OR
"
results
:
[
0
1
0
0
0
1
0
]
}
{
value
:
"
aNImAl
"
results
:
[
0
1
0
0
0
0
0
]
}
{
value
:
"
01
"
results
:
[
1
0
0
0
0
0
1
]
}
{
value
:
"
2016
"
results
:
[
0
0
0
0
0
0
1
]
}
{
value
:
"
56789
"
results
:
[
1
0
0
0
0
0
0
]
}
{
value
:
"
horse
"
results
:
[
0
1
0
0
0
0
0
]
}
{
value
:
"
"
results
:
[
0
0
0
0
1
0
0
]
}
{
value
:
"
bar
"
results
:
[
0
0
1
1
0
0
0
]
}
{
value
:
"
energy
b
"
results
:
[
0
0
0
1
0
0
0
]
}
{
value
:
"
"
results
:
[
1
1
1
1
1
1
1
]
}
{
value
:
"
input
that
matches
nothing
"
results
:
[
0
0
0
0
0
0
0
]
}
]
;
let
names
=
(
"
#
name
.
table
-
widget
-
cell
"
)
;
let
rows
=
(
"
#
value
.
table
-
widget
-
cell
"
)
;
for
(
let
testcase
of
testcases
)
{
info
(
Testing
input
:
{
testcase
.
value
}
)
;
gUI
.
searchBox
.
value
=
testcase
.
value
;
gUI
.
filterItems
(
)
;
for
(
let
i
=
0
;
i
<
rows
.
length
;
i
+
+
)
{
info
(
Testing
row
{
i
}
)
;
info
(
key
:
{
names
[
i
]
.
value
}
value
:
{
rows
[
i
]
.
value
}
)
;
let
state
=
testcase
.
results
[
i
]
?
"
visible
"
:
"
hidden
"
;
is
(
rows
[
i
]
.
hasAttribute
(
"
hidden
"
)
!
testcase
.
results
[
i
]
Row
{
i
}
should
be
{
state
}
)
;
}
}
yield
finishTests
(
)
;
}
)
;
