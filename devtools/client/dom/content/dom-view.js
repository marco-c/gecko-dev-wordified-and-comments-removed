"
use
strict
"
;
const
React
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
.
js
"
)
;
const
ReactDOM
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
dom
.
mjs
"
)
;
const
{
Provider
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
redux
.
js
"
)
;
const
MainFrame
=
React
.
createFactory
(
require
(
"
resource
:
/
/
devtools
/
client
/
dom
/
content
/
components
/
MainFrame
.
js
"
)
)
;
const
createStore
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
redux
/
create
-
store
.
js
"
)
;
const
{
reducers
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
dom
/
content
/
reducers
/
index
.
js
"
)
;
const
store
=
createStore
(
reducers
)
;
function
DomView
(
localStore
)
{
addEventListener
(
"
devtools
/
chrome
/
message
"
this
.
onMessage
.
bind
(
this
)
true
)
;
this
.
store
=
localStore
;
}
DomView
.
prototype
=
{
initialize
(
rootGrip
)
{
const
content
=
document
.
querySelector
(
"
#
content
"
)
;
const
mainFrame
=
MainFrame
(
{
object
:
rootGrip
}
)
;
const
provider
=
React
.
createElement
(
Provider
{
store
:
this
.
store
}
mainFrame
)
;
this
.
mainFrame
=
ReactDOM
.
render
(
provider
content
)
;
}
onMessage
(
event
)
{
const
data
=
event
.
data
;
const
method
=
data
.
type
;
if
(
typeof
this
[
method
]
=
=
"
function
"
)
{
this
[
method
]
(
data
.
args
)
;
}
}
}
;
window
.
view
=
new
DomView
(
store
)
;
