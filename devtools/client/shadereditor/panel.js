"
use
strict
"
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
event
-
emitter
"
)
;
const
{
EventsHandler
ShadersListView
ShadersEditorsView
EVENTS
L10N
}
=
require
(
"
.
/
shadereditor
"
)
;
function
ShaderEditorPanel
(
toolbox
)
{
this
.
_toolbox
=
toolbox
;
this
.
_destroyer
=
null
;
this
.
panelWin
=
window
;
EventEmitter
.
decorate
(
this
)
;
}
exports
.
ShaderEditorPanel
=
ShaderEditorPanel
;
ShaderEditorPanel
.
prototype
=
{
EVENTS
L10N
async
open
(
)
{
this
.
front
=
this
.
target
.
getFront
(
"
webgl
"
)
;
this
.
shadersListView
=
new
ShadersListView
(
)
;
this
.
eventsHandler
=
new
EventsHandler
(
)
;
this
.
shadersEditorsView
=
new
ShadersEditorsView
(
)
;
await
this
.
shadersListView
.
initialize
(
this
.
_toolbox
this
.
shadersEditorsView
)
;
await
this
.
eventsHandler
.
initialize
(
this
this
.
_toolbox
this
.
target
this
.
front
this
.
shadersListView
)
;
await
this
.
shadersEditorsView
.
initialize
(
this
this
.
shadersListView
)
;
this
.
isReady
=
true
;
this
.
emit
(
"
ready
"
)
;
return
this
;
}
get
target
(
)
{
return
this
.
_toolbox
.
target
;
}
destroy
(
)
{
if
(
this
.
_destroyer
)
{
return
this
.
_destroyer
;
}
return
(
this
.
_destroyer
=
(
async
(
)
=
>
{
await
this
.
shadersListView
.
destroy
(
)
;
await
this
.
eventsHandler
.
destroy
(
)
;
await
this
.
shadersEditorsView
.
destroy
(
)
;
this
.
front
.
destroy
(
)
;
this
.
emit
(
"
destroyed
"
)
;
}
)
(
)
)
;
}
}
;
