"
use
strict
"
;
const
DEVICE_ID
=
"
FAKE_DEVICE_ID
"
;
const
SOCKET_PATH
=
"
fake
/
socket
/
path
"
;
add_task
(
async
function
testParseFileUri
(
)
{
info
(
"
Enable
devtools
.
testing
for
this
test
to
allow
mocked
modules
"
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
testing
"
true
)
;
registerCleanupFunction
(
(
)
=
>
{
Services
.
prefs
.
clearUserPref
(
"
devtools
.
testing
"
)
;
}
)
;
info
(
"
Create
a
BrowserLoader
to
enable
mocks
in
the
test
"
)
;
const
{
BrowserLoader
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
devtools
/
shared
/
loader
/
browser
-
loader
.
js
"
)
;
const
mockedRequire
=
BrowserLoader
(
{
baseURI
:
"
resource
:
/
/
devtools
/
client
/
shared
/
remote
-
debugging
/
adb
"
window
:
{
}
}
)
.
require
;
info
(
"
Create
a
run
-
command
module
mock
"
)
;
let
createdPort
;
const
mock
=
{
runCommand
:
command
=
>
{
const
socketPathRe
=
SOCKET_PATH
.
replace
(
/
\
/
/
g
"
\
\
/
"
)
;
const
regexp
=
new
RegExp
(
host
-
serial
:
{
DEVICE_ID
}
:
forward
:
tcp
:
(
\
\
d
+
)
;
localfilesystem
:
{
socketPathRe
}
)
;
const
matches
=
regexp
.
exec
(
command
)
;
equal
(
matches
.
length
2
"
The
command
is
the
expected
"
)
;
createdPort
=
matches
[
1
]
;
return
{
then
:
(
)
=
>
{
}
}
;
}
}
;
info
(
"
Enable
the
mocked
run
-
command
module
"
)
;
const
{
setMockedModule
removeMockedModule
}
=
mockedRequire
(
"
devtools
/
shared
/
loader
/
browser
-
loader
-
mocks
"
)
;
setMockedModule
(
mock
"
devtools
/
client
/
shared
/
remote
-
debugging
/
adb
/
commands
/
run
-
command
"
)
;
registerCleanupFunction
(
(
)
=
>
{
removeMockedModule
(
"
devtools
/
client
/
shared
/
remote
-
debugging
/
adb
/
commands
/
run
-
command
"
)
;
}
)
;
const
{
prepareTCPConnection
}
=
mockedRequire
(
"
devtools
/
client
/
shared
/
remote
-
debugging
/
adb
/
commands
/
prepare
-
tcp
-
connection
"
)
;
const
port
=
await
prepareTCPConnection
(
DEVICE_ID
SOCKET_PATH
)
;
ok
(
!
Number
.
isNaN
(
port
)
"
prepareTCPConnection
returned
a
valid
port
"
)
;
equal
(
port
Number
(
createdPort
)
"
prepareTCPConnection
returned
the
port
sent
to
the
host
-
serial
command
"
)
;
}
)
;
