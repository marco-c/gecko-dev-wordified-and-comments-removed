"
use
strict
"
;
const
{
getJSON
}
=
require
(
"
devtools
/
client
/
shared
/
getjson
"
)
;
const
{
LocalizationHelper
}
=
require
(
"
devtools
/
shared
/
l10n
"
)
;
const
L10N
=
new
LocalizationHelper
(
"
devtools
/
client
/
locales
/
device
.
properties
"
)
;
loader
.
lazyRequireGetter
(
this
"
asyncStorage
"
"
devtools
/
shared
/
async
-
storage
"
)
;
const
DEVICES_URL
=
"
devtools
.
devices
.
url
"
;
const
LOCAL_DEVICES
=
"
devtools
.
devices
.
local
"
;
let
localDevices
;
let
localDevicesLoaded
=
false
;
async
function
loadLocalDevices
(
)
{
if
(
localDevicesLoaded
)
{
return
;
}
let
devicesJSON
=
await
asyncStorage
.
getItem
(
LOCAL_DEVICES
)
;
if
(
!
devicesJSON
)
{
devicesJSON
=
"
{
}
"
;
}
localDevices
=
JSON
.
parse
(
devicesJSON
)
;
localDevicesLoaded
=
true
;
}
async
function
addDevice
(
device
type
=
"
phones
"
)
{
await
loadLocalDevices
(
)
;
let
list
=
localDevices
[
type
]
;
if
(
!
list
)
{
list
=
localDevices
[
type
]
=
[
]
;
}
list
.
push
(
Object
.
assign
(
{
}
device
)
)
;
await
asyncStorage
.
setItem
(
LOCAL_DEVICES
JSON
.
stringify
(
localDevices
)
)
;
}
async
function
removeDevice
(
device
type
=
"
phones
"
)
{
await
loadLocalDevices
(
)
;
let
list
=
localDevices
[
type
]
;
if
(
!
list
)
{
return
false
;
}
let
index
=
list
.
findIndex
(
item
=
>
device
)
;
if
(
index
=
=
=
-
1
)
{
return
false
;
}
list
.
splice
(
index
1
)
;
await
asyncStorage
.
setItem
(
LOCAL_DEVICES
JSON
.
stringify
(
localDevices
)
)
;
return
true
;
}
async
function
removeLocalDevices
(
)
{
await
asyncStorage
.
removeItem
(
LOCAL_DEVICES
)
;
localDevices
=
{
}
;
}
async
function
getDevices
(
)
{
let
devices
=
await
getJSON
(
DEVICES_URL
)
;
await
loadLocalDevices
(
)
;
for
(
let
type
in
localDevices
)
{
if
(
!
devices
[
type
]
)
{
devices
.
TYPES
.
push
(
type
)
;
devices
[
type
]
=
[
]
;
}
devices
[
type
]
=
localDevices
[
type
]
.
concat
(
devices
[
type
]
)
;
}
return
devices
;
}
function
getDeviceString
(
deviceType
)
{
return
L10N
.
getStr
(
"
device
.
"
+
deviceType
)
;
}
module
.
exports
=
{
addDevice
removeDevice
removeLocalDevices
getDevices
getDeviceString
}
;
