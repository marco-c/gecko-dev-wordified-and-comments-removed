"
use
strict
"
;
const
HTML_NS
=
"
http
:
/
/
www
.
w3
.
org
/
1999
/
xhtml
"
;
const
TEST_URI
=
CHROME_URL_ROOT
+
"
doc_html_tooltip
-
05
.
xul
"
;
const
{
HTMLTooltip
}
=
require
(
"
devtools
/
client
/
shared
/
widgets
/
tooltip
/
HTMLTooltip
"
)
;
loadHelperScript
(
"
helper_html_tooltip
.
js
"
)
;
const
TOOLTIP_HEIGHT
=
160
;
const
TOOLTIP_WIDTH
=
200
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
toolbox
.
footer
.
height
"
200
)
;
const
[
win
doc
]
=
await
createHost
(
"
bottom
"
TEST_URI
)
;
info
(
"
Resize
and
move
the
window
to
have
space
below
.
"
)
;
const
originalWidth
=
win
.
outerWidth
;
const
originalHeight
=
win
.
outerHeight
;
win
.
resizeBy
(
-
100
-
200
)
;
const
originalTop
=
win
.
screenTop
;
const
originalLeft
=
win
.
screenLeft
;
win
.
moveTo
(
100
100
)
;
registerCleanupFunction
(
(
)
=
>
{
info
(
"
Restore
original
window
dimensions
and
position
.
"
)
;
win
.
resizeTo
(
originalWidth
originalHeight
)
;
win
.
moveTo
(
originalTop
originalLeft
)
;
}
)
;
info
(
"
Create
HTML
tooltip
"
)
;
const
tooltip
=
new
HTMLTooltip
(
doc
{
useXulWrapper
:
true
}
)
;
const
div
=
doc
.
createElementNS
(
HTML_NS
"
div
"
)
;
div
.
style
.
height
=
"
200px
"
;
div
.
style
.
background
=
"
red
"
;
tooltip
.
panel
.
appendChild
(
div
)
;
tooltip
.
setContentSize
(
{
width
:
TOOLTIP_WIDTH
height
:
TOOLTIP_HEIGHT
}
)
;
const
box1
=
doc
.
getElementById
(
"
box1
"
)
;
info
(
"
Display
the
tooltip
above
box1
.
"
)
;
await
showTooltip
(
tooltip
box1
{
position
:
"
top
"
}
)
;
checkTooltip
(
tooltip
"
top
"
TOOLTIP_HEIGHT
)
;
await
hideTooltip
(
tooltip
)
;
info
(
"
Display
the
tooltip
below
box1
.
"
)
;
await
showTooltip
(
tooltip
box1
{
position
:
"
bottom
"
}
)
;
checkTooltip
(
tooltip
"
bottom
"
TOOLTIP_HEIGHT
)
;
await
hideTooltip
(
tooltip
)
;
is
(
tooltip
.
isVisible
(
)
false
"
Tooltip
is
not
visible
"
)
;
tooltip
.
destroy
(
)
;
}
)
;
function
checkTooltip
(
tooltip
position
height
)
{
is
(
tooltip
.
position
position
"
Actual
tooltip
position
is
"
+
position
)
;
const
rect
=
tooltip
.
container
.
getBoundingClientRect
(
)
;
is
(
rect
.
height
height
"
Actual
tooltip
height
is
"
+
height
)
;
}
