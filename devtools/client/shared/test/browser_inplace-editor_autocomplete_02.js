"
use
strict
"
;
const
AutocompletePopup
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
autocomplete
-
popup
.
js
"
)
;
const
{
InplaceEditor
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
inplace
-
editor
.
js
"
)
;
loadHelperScript
(
"
helper_inplace_editor
.
js
"
)
;
const
mockValues
=
{
"
background
-
image
"
:
[
"
linear
-
gradient
"
"
radial
-
gradient
"
"
repeating
-
radial
-
gradient
"
]
color
:
[
"
blue
"
"
red
"
"
rgb
"
]
display
:
[
"
block
"
"
flex
"
"
inline
"
"
inline
-
block
"
"
none
"
]
"
grid
-
template
-
areas
"
:
[
"
unset
"
"
inherits
"
]
}
;
add_task
(
async
function
(
)
{
await
addTab
(
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
"
inplace
editor
CSS
value
autocomplete
"
)
;
const
{
host
win
doc
}
=
await
createHost
(
)
;
info
(
"
Test
for
css
property
completion
"
)
;
await
createEditorAndRunCompletionTest
(
doc
win
"
display
"
[
[
"
b
"
"
block
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
b
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
"
-
1
[
]
]
[
"
i
"
"
inline
"
0
[
"
inline
"
"
inline
-
block
"
]
]
[
"
VK_DOWN
"
"
inline
-
block
"
1
[
"
inline
"
"
inline
-
block
"
]
]
[
"
VK_DOWN
"
"
inline
"
0
[
"
inline
"
"
inline
-
block
"
]
]
[
"
VK_LEFT
"
"
inline
"
-
1
[
]
]
[
{
key
:
"
VK_UP
"
shiftKey
:
true
}
"
inline
"
-
1
[
]
null
false
true
]
[
{
key
:
"
VK_DOWN
"
shiftKey
:
true
}
"
inline
"
-
1
[
]
null
false
true
]
[
{
key
:
"
VK_LEFT
"
shiftKey
:
true
}
"
inline
"
-
1
[
]
null
false
true
]
[
{
key
:
"
VK_RIGHT
"
shiftKey
:
true
}
"
inline
"
-
1
[
]
null
false
true
]
[
{
key
:
"
VK_HOME
"
shiftKey
:
true
}
"
inline
"
-
1
[
]
null
false
true
]
[
{
key
:
"
VK_END
"
shiftKey
:
true
}
"
inline
"
-
1
[
]
null
false
true
]
[
{
key
:
"
a
"
[
AppConstants
.
platform
=
=
"
macosx
"
?
"
metaKey
"
:
"
ctrlKey
"
]
:
true
}
"
inline
"
-
1
[
]
null
false
true
]
]
)
;
info
(
"
Test
for
css
property
completion
after
css
comment
"
)
;
await
createEditorAndRunCompletionTest
(
doc
win
"
display
"
[
[
"
/
"
"
/
"
-
1
[
]
]
[
"
*
"
"
/
*
"
-
1
[
]
]
[
"
/
"
"
/
*
/
"
-
1
[
]
]
[
"
"
"
/
*
/
"
-
1
[
]
]
[
"
h
"
"
/
*
/
h
"
-
1
[
]
]
[
"
i
"
"
/
*
/
hi
"
-
1
[
]
]
[
"
"
"
/
*
/
hi
"
-
1
[
]
]
[
"
*
"
"
/
*
/
hi
*
"
-
1
[
]
]
[
"
/
"
"
/
*
/
hi
*
/
block
"
0
mockValues
.
display
]
[
"
b
"
"
/
*
/
hi
*
/
block
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
/
*
/
hi
*
/
b
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
/
*
/
hi
*
/
"
-
1
[
]
]
[
"
i
"
"
/
*
/
hi
*
/
inline
"
0
[
"
inline
"
"
inline
-
block
"
]
]
[
"
VK_DOWN
"
"
/
*
/
hi
*
/
inline
-
block
"
1
[
"
inline
"
"
inline
-
block
"
]
]
[
"
VK_DOWN
"
"
/
*
/
hi
*
/
inline
"
0
[
"
inline
"
"
inline
-
block
"
]
]
[
"
VK_LEFT
"
"
/
*
/
hi
*
/
inline
"
-
1
[
]
]
]
)
;
info
(
"
Test
that
!
important
is
only
added
when
we
want
"
)
;
await
createEditorAndRunCompletionTest
(
doc
win
"
display
"
[
[
"
"
"
block
"
0
mockValues
.
display
]
[
"
!
"
"
!
"
-
1
[
]
]
[
"
i
"
"
!
i
"
-
1
[
]
]
[
"
m
"
"
!
im
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
!
i
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
!
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
"
-
1
[
]
]
[
"
b
"
"
block
"
-
1
[
]
]
[
"
VK_RIGHT
"
"
block
"
-
1
[
]
]
[
"
"
"
block
block
"
0
[
.
.
.
mockValues
.
display
"
!
important
"
]
]
[
"
"
"
block
block
"
0
[
.
.
.
mockValues
.
display
"
!
important
"
]
]
[
"
!
"
"
block
!
important
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
block
!
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
block
"
-
1
[
]
]
[
"
VK_LEFT
"
"
block
"
-
1
[
]
]
[
"
"
"
block
block
"
0
[
.
.
.
mockValues
.
display
"
!
important
"
]
]
[
"
x
"
"
block
x
"
-
1
[
]
]
[
"
VK_LEFT
"
"
block
x
"
-
1
[
]
]
[
"
VK_LEFT
"
"
block
x
"
-
1
[
]
]
[
"
"
"
block
block
x
"
0
mockValues
.
display
]
[
"
VK_BACK_SPACE
"
"
block
x
"
-
1
[
]
]
.
.
.
Array
.
from
(
{
length
:
3
}
)
.
map
(
(
)
=
>
[
"
VK_RIGHT
"
"
block
x
"
-
1
[
]
]
)
[
"
!
"
"
block
x
!
important
"
-
1
[
]
]
[
"
VK_RIGHT
"
"
block
x
!
important
"
-
1
[
]
]
[
"
"
"
block
x
!
important
"
-
1
[
]
]
[
"
!
"
"
block
x
!
important
!
"
-
1
[
]
]
]
)
;
info
(
"
Test
for
css
property
completion
in
gradient
function
"
)
;
await
createEditorAndRunCompletionTest
(
doc
win
"
background
-
image
"
[
[
r
radial
-
gradient
0
[
"
radial
-
gradient
"
"
repeating
-
radial
-
gradient
"
]
]
[
VK_RIGHT
radial
-
gradient
-
1
[
]
]
[
(
radial
-
gradient
(
blue
)
0
[
"
blue
"
"
red
"
"
rgb
"
]
]
[
r
radial
-
gradient
(
red
)
0
[
"
red
"
"
rgb
"
]
]
[
VK_RIGHT
radial
-
gradient
(
red
)
-
1
[
]
]
[
radial
-
gradient
(
red
blue
)
0
[
"
blue
"
"
red
"
"
rgb
"
]
]
[
1
radial
-
gradient
(
red
1
)
-
1
[
]
]
[
0
radial
-
gradient
(
red
10
)
-
1
[
]
]
[
%
radial
-
gradient
(
red
10
%
)
-
1
[
]
]
[
radial
-
gradient
(
red
10
%
blue
)
0
[
"
blue
"
"
red
"
"
rgb
"
]
]
[
r
radial
-
gradient
(
red
10
%
red
)
0
[
"
red
"
"
rgb
"
]
]
[
g
radial
-
gradient
(
red
10
%
rgb
)
-
1
[
]
]
[
VK_RIGHT
radial
-
gradient
(
red
10
%
rgb
)
-
1
[
]
]
[
(
radial
-
gradient
(
red
10
%
rgb
(
)
)
-
1
[
]
]
[
0
radial
-
gradient
(
red
10
%
rgb
(
0
)
)
-
1
[
]
]
[
radial
-
gradient
(
red
10
%
rgb
(
0
)
)
-
1
[
]
]
[
1
radial
-
gradient
(
red
10
%
rgb
(
0
1
)
)
-
1
[
]
]
[
radial
-
gradient
(
red
10
%
rgb
(
0
1
)
)
-
1
[
]
]
[
2
radial
-
gradient
(
red
10
%
rgb
(
0
1
2
)
)
-
1
[
]
]
[
)
radial
-
gradient
(
red
10
%
rgb
(
0
1
2
)
)
-
1
[
]
]
[
radial
-
gradient
(
red
10
%
rgb
(
0
1
2
)
blue
)
0
[
"
blue
"
"
red
"
"
rgb
"
]
]
[
"
VK_BACK_SPACE
"
"
radial
-
gradient
(
red
10
%
rgb
(
0
1
2
)
)
"
-
1
[
]
]
[
"
VK_BACK_SPACE
"
"
radial
-
gradient
(
red
10
%
rgb
(
0
1
2
)
)
"
-
1
[
]
]
[
"
)
"
"
radial
-
gradient
(
red
10
%
rgb
(
0
1
2
)
)
"
-
1
[
]
]
[
"
"
"
radial
-
gradient
(
red
10
%
rgb
(
0
1
2
)
)
linear
-
gradient
"
0
[
"
linear
-
gradient
"
"
radial
-
gradient
"
"
repeating
-
radial
-
gradient
"
]
]
]
)
;
info
(
"
Test
for
no
completion
in
string
value
"
)
;
await
createEditorAndRunCompletionTest
(
doc
win
"
grid
-
template
-
areas
"
[
[
"
"
-
1
0
]
[
a
"
a
-
1
0
]
[
"
a
-
1
0
]
[
.
"
a
.
-
1
0
]
[
"
"
a
.
"
-
1
0
]
]
)
;
host
.
destroy
(
)
;
gBrowser
.
removeCurrentTab
(
)
;
}
)
;
async
function
createEditorAndRunCompletionTest
(
doc
win
property
testData
)
{
const
xulDocument
=
win
.
top
.
document
;
const
popup
=
new
AutocompletePopup
(
xulDocument
{
autoSelect
:
true
}
)
;
await
new
Promise
(
resolve
=
>
{
createInplaceEditorAndClick
(
{
start
:
async
editor
=
>
{
for
(
const
data
of
testData
)
{
await
testCompletion
(
data
editor
)
;
}
EventUtils
.
synthesizeKey
(
"
VK_RETURN
"
{
}
editor
.
input
.
defaultView
)
;
}
contentType
:
InplaceEditor
.
CONTENT_TYPES
.
CSS_VALUE
property
:
{
name
:
property
}
cssProperties
:
{
getNames
:
(
)
=
>
Object
.
keys
(
mockValues
)
getValues
:
propertyName
=
>
mockValues
[
propertyName
]
|
|
[
]
}
done
:
resolve
popup
}
doc
)
;
}
)
;
popup
.
destroy
(
)
;
}
