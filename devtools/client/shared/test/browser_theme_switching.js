"
use
strict
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
theme
"
"
light
"
)
;
const
tab
=
await
addTab
(
"
data
:
text
/
html
;
charset
=
utf
-
8
Test
page
"
)
;
const
toolbox
=
await
gDevTools
.
showToolboxForTab
(
tab
)
;
const
doc
=
toolbox
.
doc
;
const
root
=
doc
.
documentElement
;
const
platform
=
root
.
getAttribute
(
"
platform
"
)
;
const
expectedPlatform
=
getPlatform
(
)
;
is
(
platform
expectedPlatform
"
:
root
[
platform
]
is
correct
"
)
;
const
theme
=
Services
.
prefs
.
getCharPref
(
"
devtools
.
theme
"
)
;
const
className
=
"
theme
-
"
+
theme
;
ok
(
root
.
classList
.
contains
(
className
)
"
:
root
has
"
+
className
+
"
class
(
current
theme
)
"
)
;
const
sheetsInDOM
=
Array
.
from
(
doc
.
querySelectorAll
(
"
link
[
rel
=
'
stylesheet
'
]
"
)
l
=
>
l
.
href
)
;
const
sheetsFromTheme
=
gDevTools
.
getThemeDefinition
(
theme
)
.
stylesheets
;
info
(
"
Checking
for
existence
of
"
+
sheetsInDOM
.
length
+
"
sheets
"
)
;
for
(
const
themeSheet
of
sheetsFromTheme
)
{
ok
(
sheetsInDOM
.
some
(
s
=
>
s
.
includes
(
themeSheet
)
)
"
There
is
a
stylesheet
for
"
+
themeSheet
)
;
}
await
toolbox
.
destroy
(
)
;
}
)
;
function
getPlatform
(
)
{
const
{
OS
}
=
Services
.
appinfo
;
if
(
OS
=
=
"
WINNT
"
)
{
return
"
win
"
;
}
else
if
(
OS
=
=
"
Darwin
"
)
{
return
"
mac
"
;
}
return
"
linux
"
;
}
