"
use
strict
"
;
function
stylesheetLoadPromise
(
styleSheet
url
)
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
styleSheet
.
addEventListener
(
"
load
"
resolve
{
once
:
true
}
)
;
styleSheet
.
addEventListener
(
"
error
"
reject
{
once
:
true
}
)
;
}
)
;
}
function
appendStyleSheet
(
doc
url
)
{
const
styleSheet
=
doc
.
createElementNS
(
"
http
:
/
/
www
.
w3
.
org
/
1999
/
xhtml
"
"
link
"
)
;
styleSheet
.
setAttribute
(
"
rel
"
"
stylesheet
"
)
;
styleSheet
.
setAttribute
(
"
href
"
url
)
;
const
loadPromise
=
stylesheetLoadPromise
(
styleSheet
)
;
const
globalSheet
=
doc
.
querySelector
(
"
link
[
href
=
'
chrome
:
/
/
global
/
skin
/
global
.
css
'
]
"
)
;
if
(
globalSheet
)
{
globalSheet
.
after
(
styleSheet
)
;
return
{
styleSheet
loadPromise
}
;
}
const
links
=
doc
.
querySelectorAll
(
"
link
"
)
;
if
(
links
.
length
)
{
links
[
0
]
.
before
(
styleSheet
)
;
return
{
styleSheet
loadPromise
}
;
}
if
(
doc
.
head
)
{
doc
.
head
.
prepend
(
styleSheet
)
;
}
else
{
doc
.
documentElement
.
prepend
(
styleSheet
)
;
}
return
{
styleSheet
loadPromise
}
;
}
exports
.
appendStyleSheet
=
appendStyleSheet
;
