const
base64
=
require
(
"
.
/
base64
"
)
;
const
VLQ_BASE_SHIFT
=
5
;
const
VLQ_BASE
=
1
<
<
VLQ_BASE_SHIFT
;
const
VLQ_BASE_MASK
=
VLQ_BASE
-
1
;
const
VLQ_CONTINUATION_BIT
=
VLQ_BASE
;
function
toVLQSigned
(
aValue
)
{
return
aValue
<
0
?
(
-
aValue
<
<
1
)
+
1
:
(
aValue
<
<
1
)
+
0
;
}
exports
.
encode
=
function
base64VLQ_encode
(
aValue
)
{
let
encoded
=
"
"
;
let
digit
;
let
vlq
=
toVLQSigned
(
aValue
)
;
do
{
digit
=
vlq
&
VLQ_BASE_MASK
;
vlq
>
>
>
=
VLQ_BASE_SHIFT
;
if
(
vlq
>
0
)
{
digit
|
=
VLQ_CONTINUATION_BIT
;
}
encoded
+
=
base64
.
encode
(
digit
)
;
}
while
(
vlq
>
0
)
;
return
encoded
;
}
;
