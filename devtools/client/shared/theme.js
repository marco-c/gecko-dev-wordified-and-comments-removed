"
use
strict
"
;
const
THEME_PREF
=
"
devtools
.
theme
"
;
const
getAutoTheme
=
(
exports
.
getAutoTheme
=
(
)
=
>
{
return
Services
.
appinfo
.
chromeColorSchemeIsDark
?
"
dark
"
:
"
light
"
;
}
)
;
const
getTheme
=
(
exports
.
getTheme
=
(
)
=
>
{
const
theme
=
getThemePrefValue
(
)
;
if
(
theme
=
=
"
auto
"
)
{
return
getAutoTheme
(
)
;
}
return
theme
;
}
)
;
const
getThemePrefValue
=
(
exports
.
getThemePrefValue
=
(
)
=
>
{
return
Services
.
prefs
.
getCharPref
(
THEME_PREF
"
"
)
;
}
)
;
const
getCssVariableColor
=
(
exports
.
getCssVariableColor
=
(
variableName
win
)
=
>
{
const
value
=
win
.
getComputedStyle
(
win
.
document
.
documentElement
)
.
getPropertyValue
(
variableName
)
;
if
(
!
value
)
{
console
.
warn
(
"
Unknown
"
variableName
"
CSS
variable
"
)
;
return
null
;
}
return
value
;
}
)
;
const
setTheme
=
(
exports
.
setTheme
=
newTheme
=
>
{
Services
.
prefs
.
setCharPref
(
THEME_PREF
newTheme
)
;
}
)
;
const
addThemeObserver
=
(
exports
.
addThemeObserver
=
observer
=
>
{
Services
.
obs
.
addObserver
(
observer
"
look
-
and
-
feel
-
changed
"
)
;
Services
.
prefs
.
addObserver
(
THEME_PREF
observer
)
;
}
)
;
const
removeThemeObserver
=
(
exports
.
removeThemeObserver
=
observer
=
>
{
Services
.
obs
.
removeObserver
(
observer
"
look
-
and
-
feel
-
changed
"
)
;
Services
.
prefs
.
removeObserver
(
THEME_PREF
observer
)
;
}
)
;
