"
use
strict
"
;
const
{
createStore
applyMiddleware
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
redux
.
js
"
)
;
const
{
task
ERROR_TYPE
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
redux
/
middleware
/
task
.
js
"
)
;
add_task
(
async
function
(
)
{
const
store
=
applyMiddleware
(
task
)
(
createStore
)
(
reducer
)
;
store
.
dispatch
(
asyncError
(
)
)
;
await
waitUntilState
(
store
(
)
=
>
store
.
getState
(
)
.
length
=
=
=
1
)
;
equal
(
store
.
getState
(
)
[
0
]
.
type
ERROR_TYPE
"
generator
errors
dispatch
ERROR_TYPE
actions
"
)
;
equal
(
store
.
getState
(
)
[
0
]
.
error
"
task
-
middleware
-
error
-
generator
"
"
generator
errors
dispatch
ERROR_TYPE
actions
with
error
"
)
;
}
)
;
function
asyncError
(
)
{
return
async
(
{
dispatch
getState
}
)
=
>
{
const
error
=
"
task
-
middleware
-
error
-
generator
"
;
throw
error
;
}
;
}
function
reducer
(
state
=
[
]
action
)
{
info
(
"
Action
called
:
"
+
action
.
type
)
;
if
(
action
.
type
=
=
=
ERROR_TYPE
)
{
state
.
push
(
action
)
;
}
return
[
.
.
.
state
]
;
}
