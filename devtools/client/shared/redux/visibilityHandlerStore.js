"
use
strict
"
;
function
visibilityHandlerStore
(
store
)
{
return
{
subscribe
(
listener
{
ignoreVisibility
=
false
}
=
{
}
)
{
if
(
ignoreVisibility
)
{
return
store
.
subscribe
(
listener
)
;
}
function
onVisibilityChange
(
)
{
if
(
document
.
visibilityState
=
=
"
visible
"
)
{
listener
(
)
;
}
}
document
.
addEventListener
(
"
visibilitychange
"
onVisibilityChange
)
;
const
unsubscribe
=
store
.
subscribe
(
function
(
)
{
if
(
document
.
visibilityState
=
=
"
visible
"
)
{
listener
(
)
;
}
}
)
;
return
function
(
)
{
unsubscribe
(
)
;
document
.
removeEventListener
(
"
visibilitychange
"
onVisibilityChange
)
;
}
;
}
getState
(
)
{
return
store
.
getState
(
)
;
}
dispatch
(
action
)
{
return
store
.
dispatch
(
action
)
;
}
}
;
}
exports
.
visibilityHandlerStore
=
visibilityHandlerStore
;
