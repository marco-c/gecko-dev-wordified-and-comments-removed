"
use
strict
"
;
const
_mocks
=
{
}
;
function
getMockedModule
(
uri
)
{
return
_mocks
[
uri
]
;
}
exports
.
getMockedModule
=
getMockedModule
;
function
_getUriForModulePath
(
modulePath
)
{
if
(
!
modulePath
.
endsWith
(
"
.
js
"
)
)
{
modulePath
=
modulePath
+
"
.
js
"
;
}
if
(
!
modulePath
.
includes
(
"
:
/
/
"
)
)
{
modulePath
=
"
resource
:
/
/
"
+
modulePath
;
}
return
modulePath
;
}
function
setMockedModule
(
mock
modulePath
)
{
const
uri
=
_getUriForModulePath
(
modulePath
)
;
_mocks
[
uri
]
=
new
Proxy
(
mock
{
get
(
target
key
)
{
if
(
typeof
target
[
key
]
=
=
=
"
function
"
)
{
return
function
(
)
{
return
target
[
key
]
.
apply
(
target
arguments
)
;
}
;
}
return
target
[
key
]
;
}
}
)
;
}
exports
.
setMockedModule
=
setMockedModule
;
function
removeMockedModule
(
modulePath
)
{
const
uri
=
_getUriForModulePath
(
modulePath
)
;
delete
_mocks
[
uri
]
;
}
exports
.
removeMockedModule
=
removeMockedModule
;
