const
{
createNode
makeNodesForEntries
nodeSupportsNumericalBucketing
}
=
require
(
"
devtools
/
client
/
shared
/
components
/
reps
/
object
-
inspector
/
utils
/
node
"
)
;
const
createRootNode
=
stub
=
>
createNode
(
{
name
:
"
root
"
contents
:
{
value
:
stub
}
}
)
;
const
gripArrayStubs
=
require
(
"
devtools
/
client
/
shared
/
components
/
test
/
node
/
stubs
/
reps
/
grip
-
array
"
)
;
const
gripMapStubs
=
require
(
"
devtools
/
client
/
shared
/
components
/
test
/
node
/
stubs
/
reps
/
grip
-
map
"
)
;
describe
(
"
nodeSupportsNumericalBucketing
"
(
)
=
>
{
it
(
"
returns
true
for
Arrays
"
(
)
=
>
{
expect
(
nodeSupportsNumericalBucketing
(
createRootNode
(
gripArrayStubs
.
get
(
"
testBasic
"
)
)
)
)
.
toBe
(
true
)
;
}
)
;
it
(
"
returns
true
for
NodeMap
"
(
)
=
>
{
expect
(
nodeSupportsNumericalBucketing
(
createRootNode
(
gripArrayStubs
.
get
(
"
testNamedNodeMap
"
)
)
)
)
.
toBe
(
true
)
;
}
)
;
it
(
"
returns
true
for
NodeList
"
(
)
=
>
{
expect
(
nodeSupportsNumericalBucketing
(
createRootNode
(
gripArrayStubs
.
get
(
"
testNodeList
"
)
)
)
)
.
toBe
(
true
)
;
}
)
;
it
(
"
returns
true
for
DocumentFragment
"
(
)
=
>
{
expect
(
nodeSupportsNumericalBucketing
(
createRootNode
(
gripArrayStubs
.
get
(
"
testDocumentFragment
"
)
)
)
)
.
toBe
(
true
)
;
}
)
;
it
(
"
returns
true
for
<
entries
>
node
"
(
)
=
>
{
expect
(
nodeSupportsNumericalBucketing
(
makeNodesForEntries
(
createRootNode
(
gripMapStubs
.
get
(
"
testSymbolKeyedMap
"
)
)
)
)
)
.
toBe
(
true
)
;
}
)
;
it
(
"
returns
true
for
buckets
node
"
(
)
=
>
{
expect
(
nodeSupportsNumericalBucketing
(
makeNodesForEntries
(
createRootNode
(
gripMapStubs
.
get
(
"
testSymbolKeyedMap
"
)
)
)
)
)
.
toBe
(
true
)
;
}
)
;
}
)
;
