"
use
strict
"
;
const
Menu
=
require
(
"
devtools
/
client
/
framework
/
menu
"
)
;
const
MenuItem
=
require
(
"
devtools
/
client
/
framework
/
menu
-
item
"
)
;
loader
.
lazyRequireGetter
(
this
"
getTopLevelWindow
"
"
devtools
/
client
/
responsive
.
html
/
utils
/
window
"
true
)
;
function
showMenu
(
items
options
)
{
if
(
items
.
length
=
=
=
0
)
{
return
;
}
const
menu
=
new
Menu
(
)
;
items
.
forEach
(
(
item
)
=
>
{
if
(
item
=
=
"
-
"
)
{
item
=
{
type
:
"
separator
"
}
;
}
const
menuItem
=
new
MenuItem
(
item
)
;
const
subItems
=
item
.
submenu
;
if
(
subItems
)
{
const
subMenu
=
new
Menu
(
)
;
subItems
.
forEach
(
(
subItem
)
=
>
{
subMenu
.
append
(
new
MenuItem
(
subItem
)
)
;
}
)
;
menuItem
.
submenu
=
subMenu
;
}
menu
.
append
(
menuItem
)
;
}
)
;
let
screenX
=
options
.
screenX
;
let
screenY
=
options
.
screenY
;
if
(
options
.
button
)
{
const
button
=
options
.
button
;
const
rect
=
button
.
getBoundingClientRect
(
)
;
const
defaultView
=
button
.
ownerDocument
.
defaultView
;
screenX
=
rect
.
left
+
defaultView
.
mozInnerScreenX
;
screenY
=
rect
.
bottom
+
defaultView
.
mozInnerScreenY
;
}
let
doc
;
if
(
options
.
useTopLevelWindow
)
{
doc
=
getTopLevelWindow
(
window
)
.
document
;
}
else
{
doc
=
window
.
document
;
}
menu
.
popup
(
screenX
screenY
doc
)
;
}
module
.
exports
=
{
showMenu
}
;
