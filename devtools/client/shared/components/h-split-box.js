const
{
DOM
:
dom
createClass
PropTypes
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
assert
}
=
require
(
"
devtools
/
shared
/
DevToolsUtils
"
)
;
module
.
exports
=
createClass
(
{
displayName
:
"
HSplitBox
"
getDefaultProps
(
)
{
return
{
startWidth
:
0
.
5
minStartWidth
:
"
20px
"
minEndWidth
:
"
20px
"
}
;
}
getInitialState
(
)
{
return
{
mouseDown
:
false
}
;
}
propTypes
:
{
start
:
PropTypes
.
any
.
isRequired
end
:
PropTypes
.
any
.
isRequired
startWidth
:
PropTypes
.
number
minStartWidth
:
PropTypes
.
any
minEndWidth
:
PropTypes
.
any
onResize
:
PropTypes
.
func
.
isRequired
}
_onMouseDown
(
event
)
{
if
(
event
.
button
!
=
=
0
)
{
return
;
}
this
.
setState
(
{
mouseDown
:
true
}
)
;
event
.
preventDefault
(
)
;
}
_onMouseUp
(
event
)
{
if
(
event
.
button
!
=
=
0
|
|
!
this
.
state
.
mouseDown
)
{
return
;
}
this
.
setState
(
{
mouseDown
:
false
}
)
;
event
.
preventDefault
(
)
;
}
_onMouseMove
(
event
)
{
if
(
!
this
.
state
.
mouseDown
)
{
return
;
}
const
rect
=
this
.
refs
.
box
.
getBoundingClientRect
(
)
;
const
{
left
right
}
=
rect
;
const
width
=
right
-
left
;
const
relative
=
event
.
clientX
-
left
;
this
.
props
.
onResize
(
relative
/
width
)
;
event
.
preventDefault
(
)
;
}
componentDidMount
(
)
{
document
.
defaultView
.
top
.
addEventListener
(
"
mouseup
"
this
.
_onMouseUp
false
)
;
document
.
defaultView
.
top
.
addEventListener
(
"
mousemove
"
this
.
_onMouseMove
false
)
;
}
componentWillUnmount
(
)
{
document
.
defaultView
.
top
.
removeEventListener
(
"
mouseup
"
this
.
_onMouseUp
false
)
;
document
.
defaultView
.
top
.
removeEventListener
(
"
mousemove
"
this
.
_onMouseMove
false
)
;
}
render
(
)
{
const
{
start
end
startWidth
minStartWidth
minEndWidth
}
=
this
.
props
;
assert
(
0
<
=
startWidth
&
&
startWidth
<
=
1
"
0
<
=
this
.
props
.
startWidth
<
=
1
"
)
;
return
dom
.
div
(
{
className
:
"
h
-
split
-
box
"
ref
:
"
box
"
}
dom
.
div
(
{
className
:
"
h
-
split
-
box
-
pane
"
style
:
{
flex
:
startWidth
minWidth
:
minStartWidth
}
}
start
)
dom
.
div
(
{
className
:
"
h
-
split
-
box
-
splitter
"
onMouseDown
:
this
.
_onMouseDown
}
)
dom
.
div
(
{
className
:
"
h
-
split
-
box
-
pane
"
style
:
{
flex
:
1
-
startWidth
minWidth
:
minEndWidth
}
}
end
)
)
;
}
}
)
;
