"
use
strict
"
;
define
(
function
(
require
exports
module
)
{
const
React
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
createFactories
wrapRender
}
=
require
(
"
.
/
rep
-
utils
"
)
;
const
{
MODE
}
=
require
(
"
.
/
constants
"
)
;
const
{
span
}
=
React
.
DOM
;
let
PropRep
=
React
.
createClass
(
{
displayName
:
"
PropRep
"
propTypes
:
{
name
:
React
.
PropTypes
.
oneOfType
(
[
React
.
PropTypes
.
string
React
.
PropTypes
.
object
]
)
.
isRequired
equal
:
React
.
PropTypes
.
string
delim
:
React
.
PropTypes
.
string
mode
:
React
.
PropTypes
.
oneOf
(
Object
.
keys
(
MODE
)
.
map
(
key
=
>
MODE
[
key
]
)
)
}
render
:
wrapRender
(
function
(
)
{
const
{
Grip
}
=
require
(
"
.
/
grip
"
)
;
let
{
Rep
}
=
createFactories
(
require
(
"
.
/
rep
"
)
)
;
let
key
;
if
(
typeof
this
.
props
.
name
=
=
=
"
string
"
)
{
key
=
span
(
{
"
className
"
:
"
nodeName
"
}
this
.
props
.
name
)
;
}
else
{
key
=
Rep
(
{
object
:
this
.
props
.
name
mode
:
this
.
props
.
mode
|
|
MODE
.
TINY
defaultRep
:
Grip
objectLink
:
this
.
props
.
objectLink
}
)
;
}
return
(
span
(
{
}
key
span
(
{
"
className
"
:
"
objectEqual
"
}
this
.
props
.
equal
)
Rep
(
this
.
props
)
span
(
{
"
className
"
:
"
objectComma
"
}
this
.
props
.
delim
)
)
)
;
}
)
}
)
;
exports
.
PropRep
=
PropRep
;
}
)
;
