"
use
strict
"
;
define
(
function
(
require
exports
module
)
{
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
{
span
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
{
getGripType
wrapRender
}
=
require
(
"
devtools
/
client
/
shared
/
components
/
reps
/
reps
/
rep
-
utils
"
)
;
const
{
rep
:
StringRep
}
=
require
(
"
devtools
/
client
/
shared
/
components
/
reps
/
reps
/
string
"
)
;
const
MAX_STRING_LENGTH
=
50
;
SymbolRep
.
propTypes
=
{
object
:
PropTypes
.
object
.
isRequired
shouldRenderTooltip
:
PropTypes
.
bool
}
;
function
SymbolRep
(
props
)
{
const
{
className
=
"
objectBox
objectBox
-
symbol
"
object
shouldRenderTooltip
}
=
props
;
const
{
name
}
=
object
;
let
symbolText
=
name
|
|
"
"
;
if
(
name
&
&
name
!
=
=
"
Symbol
.
iterator
"
&
&
name
!
=
=
"
Symbol
.
asyncIterator
"
)
{
symbolText
=
StringRep
(
{
object
:
symbolText
shouldCrop
:
true
cropLimit
:
MAX_STRING_LENGTH
useQuotes
:
true
}
)
;
}
const
config
=
getElementConfig
(
{
shouldRenderTooltip
className
name
}
object
)
;
return
span
(
config
"
Symbol
(
"
symbolText
"
)
"
)
;
}
function
getElementConfig
(
opts
object
)
{
const
{
shouldRenderTooltip
className
name
}
=
opts
;
return
{
"
data
-
link
-
actor
-
id
"
:
object
.
actor
className
:
className
title
:
shouldRenderTooltip
?
Symbol
(
{
name
}
)
:
null
}
;
}
function
supportsObject
(
object
noGrip
=
false
)
{
return
getGripType
(
object
noGrip
)
=
=
"
symbol
"
;
}
module
.
exports
=
{
rep
:
wrapRender
(
SymbolRep
)
supportsObject
}
;
}
)
;
