"
use
strict
"
;
define
(
function
(
require
exports
module
)
{
const
React
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
isGrip
cropMultipleLines
}
=
require
(
"
.
/
rep
-
utils
"
)
;
const
nodeConstants
=
require
(
"
devtools
/
shared
/
dom
-
node
-
constants
"
)
;
const
{
span
}
=
React
.
DOM
;
const
CommentNode
=
React
.
createClass
(
{
displayName
:
"
CommentNode
"
propTypes
:
{
object
:
React
.
PropTypes
.
object
.
isRequired
mode
:
React
.
PropTypes
.
string
}
getCroppedTextContent
:
function
(
textContent
limit
)
{
return
cropMultipleLines
(
textContent
limit
)
;
}
render
:
function
(
)
{
let
{
object
}
=
this
.
props
;
let
mode
=
this
.
props
.
mode
|
|
"
short
"
;
let
{
textContent
}
=
object
.
preview
;
if
(
mode
=
=
=
"
tiny
"
)
{
textContent
=
this
.
getCroppedTextContent
(
textContent
30
)
;
}
else
if
(
mode
=
=
=
"
short
"
)
{
textContent
=
this
.
getCroppedTextContent
(
textContent
)
;
}
return
span
(
{
className
:
"
objectBox
theme
-
comment
"
}
<
!
-
-
{
textContent
}
-
-
>
)
;
}
}
)
;
function
supportsObject
(
object
type
)
{
if
(
!
isGrip
(
object
)
)
{
return
false
;
}
return
object
.
preview
&
&
object
.
preview
.
nodeType
=
=
=
nodeConstants
.
COMMENT_NODE
;
}
exports
.
CommentNode
=
{
rep
:
CommentNode
supportsObject
:
supportsObject
}
;
}
)
;
