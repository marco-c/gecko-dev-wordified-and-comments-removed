"
use
strict
"
;
define
(
function
(
require
exports
module
)
{
const
React
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
createFactories
isGrip
wrapRender
}
=
require
(
"
.
/
rep
-
utils
"
)
;
const
{
StringRep
}
=
require
(
"
.
/
string
"
)
;
const
{
span
}
=
React
.
DOM
;
const
{
rep
:
StringRepFactory
}
=
createFactories
(
StringRep
)
;
let
Attribute
=
React
.
createClass
(
{
displayName
:
"
Attr
"
propTypes
:
{
object
:
React
.
PropTypes
.
object
.
isRequired
objectLink
:
React
.
PropTypes
.
func
}
getTitle
(
grip
)
{
return
grip
.
preview
.
nodeName
;
}
render
:
wrapRender
(
function
(
)
{
let
object
=
this
.
props
.
object
;
let
value
=
object
.
preview
.
value
;
let
objectLink
=
this
.
props
.
objectLink
|
|
span
;
return
(
objectLink
(
{
className
:
"
objectLink
-
Attr
"
object
}
span
(
{
}
span
(
{
className
:
"
attrTitle
"
}
this
.
getTitle
(
object
)
)
span
(
{
className
:
"
attrEqual
"
}
"
=
"
)
StringRepFactory
(
{
object
:
value
}
)
)
)
)
;
}
)
}
)
;
function
supportsObject
(
grip
type
)
{
if
(
!
isGrip
(
grip
)
)
{
return
false
;
}
return
(
type
=
=
"
Attr
"
&
&
grip
.
preview
)
;
}
exports
.
Attribute
=
{
rep
:
Attribute
supportsObject
}
;
}
)
;
