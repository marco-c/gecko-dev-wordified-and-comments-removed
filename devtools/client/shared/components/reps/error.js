"
use
strict
"
;
define
(
function
(
require
exports
module
)
{
const
React
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
isGrip
wrapRender
}
=
require
(
"
.
/
rep
-
utils
"
)
;
const
{
MODE
}
=
require
(
"
.
/
constants
"
)
;
const
{
span
}
=
React
.
DOM
;
const
ErrorRep
=
React
.
createClass
(
{
displayName
:
"
Error
"
propTypes
:
{
object
:
React
.
PropTypes
.
object
.
isRequired
mode
:
React
.
PropTypes
.
oneOf
(
Object
.
keys
(
MODE
)
.
map
(
key
=
>
MODE
[
key
]
)
)
objectLink
:
React
.
PropTypes
.
func
}
render
:
wrapRender
(
function
(
)
{
let
object
=
this
.
props
.
object
;
let
preview
=
object
.
preview
;
let
name
=
preview
&
&
preview
.
name
?
preview
.
name
:
"
Error
"
;
let
content
=
this
.
props
.
mode
=
=
=
MODE
.
TINY
?
name
:
{
name
}
:
{
preview
.
message
}
;
if
(
preview
.
stack
&
&
this
.
props
.
mode
!
=
=
MODE
.
TINY
)
{
content
=
{
content
}
\
nStack
trace
:
\
n
{
preview
.
stack
}
;
}
let
objectLink
=
this
.
props
.
objectLink
|
|
span
;
return
(
objectLink
(
{
object
className
:
"
objectBox
-
stackTrace
"
}
span
(
{
}
content
)
)
)
;
}
)
}
)
;
function
supportsObject
(
object
type
)
{
if
(
!
isGrip
(
object
)
)
{
return
false
;
}
return
(
object
.
preview
&
&
type
=
=
=
"
Error
"
)
;
}
exports
.
ErrorRep
=
{
rep
:
ErrorRep
supportsObject
:
supportsObject
}
;
}
)
;
