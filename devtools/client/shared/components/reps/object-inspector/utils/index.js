const
client
=
require
(
"
.
/
client
"
)
;
const
loadProperties
=
require
(
"
.
/
load
-
properties
"
)
;
const
node
=
require
(
"
.
/
node
"
)
;
const
{
nodeIsError
nodeIsPrimitive
}
=
node
;
const
selection
=
require
(
"
.
/
selection
"
)
;
const
{
MODE
}
=
require
(
"
.
.
/
.
.
/
reps
/
constants
"
)
;
const
{
REPS
:
{
Rep
Grip
}
}
=
require
(
"
.
.
/
.
.
/
reps
/
rep
"
)
;
function
shouldRenderRootsInReps
(
roots
props
=
{
}
)
{
if
(
roots
.
length
!
=
=
1
)
{
return
false
;
}
const
root
=
roots
[
0
]
;
const
name
=
root
&
&
root
.
name
;
return
(
(
name
=
=
=
null
|
|
typeof
name
=
=
=
"
undefined
"
)
&
&
(
nodeIsPrimitive
(
root
)
|
|
(
nodeIsError
(
root
)
&
&
props
?
.
customFormat
=
=
=
true
)
)
)
;
}
function
renderRep
(
item
props
)
{
return
Rep
(
{
.
.
.
props
object
:
node
.
getValue
(
item
)
mode
:
props
.
mode
|
|
MODE
.
TINY
defaultRep
:
Grip
}
)
;
}
module
.
exports
=
{
client
loadProperties
node
renderRep
selection
shouldRenderRootsInReps
}
;
