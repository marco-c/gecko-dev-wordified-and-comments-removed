"
use
strict
"
;
define
(
function
(
require
exports
module
)
{
const
React
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
createFactories
isGrip
cropMultipleLines
}
=
require
(
"
.
/
rep
-
utils
"
)
;
const
{
ObjectLink
}
=
createFactories
(
require
(
"
.
/
object
-
link
"
)
)
;
const
DOM
=
React
.
DOM
;
let
TextNode
=
React
.
createClass
(
{
displayName
:
"
TextNode
"
propTypes
:
{
object
:
React
.
PropTypes
.
object
.
isRequired
mode
:
React
.
PropTypes
.
string
}
getTextContent
:
function
(
grip
)
{
return
cropMultipleLines
(
grip
.
preview
.
textContent
)
;
}
getTitle
:
function
(
win
context
)
{
return
"
textNode
"
;
}
render
:
function
(
)
{
let
grip
=
this
.
props
.
object
;
let
mode
=
this
.
props
.
mode
|
|
"
short
"
;
if
(
mode
=
=
"
short
"
|
|
mode
=
=
"
tiny
"
)
{
return
(
ObjectLink
(
{
className
:
"
textNode
"
}
"
\
"
"
+
this
.
getTextContent
(
grip
)
+
"
\
"
"
)
)
;
}
return
(
ObjectLink
(
{
className
:
"
textNode
"
}
"
<
"
DOM
.
span
(
{
className
:
"
nodeTag
"
}
"
TextNode
"
)
"
textContent
=
\
"
"
DOM
.
span
(
{
className
:
"
nodeValue
"
}
this
.
getTextContent
(
grip
)
)
"
\
"
"
"
>
;
"
)
)
;
}
}
)
;
function
supportsObject
(
grip
type
)
{
if
(
!
isGrip
(
grip
)
)
{
return
false
;
}
return
(
grip
.
preview
&
&
grip
.
class
=
=
"
Text
"
)
;
}
exports
.
TextNode
=
{
rep
:
TextNode
supportsObject
:
supportsObject
}
;
}
)
;
