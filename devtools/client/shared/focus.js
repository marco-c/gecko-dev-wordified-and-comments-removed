"
use
strict
"
;
const
focusableSelector
=
[
"
a
[
href
]
:
not
(
[
tabindex
=
'
-
1
'
]
)
"
"
button
:
not
(
[
disabled
]
[
tabindex
=
'
-
1
'
]
)
"
"
iframe
:
not
(
[
tabindex
=
'
-
1
'
]
)
"
"
input
:
not
(
[
disabled
]
[
tabindex
=
'
-
1
'
]
)
"
"
select
:
not
(
[
disabled
]
[
tabindex
=
'
-
1
'
]
)
"
"
textarea
:
not
(
[
disabled
]
[
tabindex
=
'
-
1
'
]
)
"
"
[
tabindex
]
:
not
(
[
tabindex
=
'
-
1
'
]
)
"
]
.
join
(
"
"
)
;
function
wrapMoveFocus
(
elms
current
back
)
{
let
next
;
if
(
elms
.
length
=
=
=
0
)
{
return
false
;
}
if
(
back
)
{
if
(
elms
.
indexOf
(
current
)
=
=
=
0
)
{
next
=
elms
[
elms
.
length
-
1
]
;
next
.
focus
(
)
;
}
}
else
if
(
elms
.
indexOf
(
current
)
=
=
=
elms
.
length
-
1
)
{
next
=
elms
[
0
]
;
next
.
focus
(
)
;
}
return
next
;
}
function
getFocusableElements
(
parentEl
)
{
return
parentEl
?
Array
.
from
(
parentEl
.
querySelectorAll
(
focusableSelector
)
)
:
[
]
;
}
define
(
function
(
require
exports
module
)
{
module
.
exports
.
focusableSelector
=
focusableSelector
;
exports
.
wrapMoveFocus
=
wrapMoveFocus
;
exports
.
getFocusableElements
=
getFocusableElements
;
}
)
;
