"
use
strict
"
;
function
scrollIntoViewIfNeeded
(
elem
centered
=
true
)
{
let
win
=
elem
.
ownerDocument
.
defaultView
;
let
clientRect
=
elem
.
getBoundingClientRect
(
)
;
let
topToBottom
=
clientRect
.
bottom
;
let
bottomToTop
=
clientRect
.
top
-
win
.
innerHeight
;
let
yAllowed
=
true
;
if
(
(
topToBottom
>
0
|
|
!
centered
)
&
&
topToBottom
<
=
elem
.
offsetHeight
)
{
win
.
scrollBy
(
0
topToBottom
-
elem
.
offsetHeight
)
;
yAllowed
=
false
;
}
else
if
(
(
bottomToTop
<
0
|
|
!
centered
)
&
&
bottomToTop
>
=
-
elem
.
offsetHeight
)
{
win
.
scrollBy
(
0
bottomToTop
+
elem
.
offsetHeight
)
;
yAllowed
=
false
;
}
if
(
centered
)
{
if
(
yAllowed
&
&
(
topToBottom
<
=
0
|
|
bottomToTop
>
=
0
)
)
{
win
.
scroll
(
win
.
scrollX
win
.
scrollY
+
clientRect
.
top
-
(
win
.
innerHeight
-
elem
.
offsetHeight
)
/
2
)
;
}
}
}
exports
.
scrollIntoViewIfNeeded
=
scrollIntoViewIfNeeded
;
