"
use
strict
"
;
const
{
Cc
Ci
}
=
require
(
"
chrome
"
)
;
const
idnService
=
Cc
[
"
mozilla
.
org
/
network
/
idn
-
service
;
1
"
]
.
getService
(
Ci
.
nsIIDNService
)
;
function
getUnicodeHostname
(
hostname
)
{
return
idnService
.
convertToDisplayIDN
(
hostname
{
}
)
;
}
function
getUnicodeUrlPath
(
urlPath
)
{
try
{
return
decodeURIComponent
(
urlPath
)
;
}
catch
(
err
)
{
dump
(
"
Warning
:
getUnicodeUrlPath
failed
to
get
a
Unicode
URL
from
"
+
{
urlPath
}
reason
:
{
err
}
)
;
}
return
urlPath
;
}
function
getUnicodeUrl
(
url
)
{
try
{
const
{
protocol
hostname
}
=
new
URL
(
url
)
;
if
(
protocol
=
=
=
"
data
:
"
)
{
return
url
;
}
const
readableHostname
=
getUnicodeHostname
(
hostname
)
;
url
=
decodeURIComponent
(
url
)
;
return
url
.
replace
(
hostname
readableHostname
)
;
}
catch
(
err
)
{
dump
(
"
Warning
:
getUnicodeUrl
failed
to
get
a
Unicode
URL
from
"
+
{
url
}
reason
:
{
err
}
)
;
}
return
url
;
}
module
.
exports
=
{
getUnicodeHostname
getUnicodeUrlPath
getUnicodeUrl
}
;
