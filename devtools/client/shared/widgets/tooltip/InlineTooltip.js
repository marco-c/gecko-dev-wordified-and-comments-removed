"
use
strict
"
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
old
-
event
-
emitter
"
)
;
function
InlineTooltip
(
doc
)
{
EventEmitter
.
decorate
(
this
)
;
this
.
doc
=
doc
;
this
.
panel
=
this
.
doc
.
createElement
(
"
div
"
)
;
this
.
topWindow
=
this
.
_getTopWindow
(
)
;
}
InlineTooltip
.
prototype
=
{
show
(
anchor
)
{
anchor
.
parentNode
.
insertBefore
(
this
.
panel
anchor
.
nextSibling
)
;
this
.
emit
(
"
shown
"
)
;
}
hide
(
)
{
if
(
!
this
.
isVisible
(
)
)
{
return
;
}
this
.
panel
.
parentNode
.
remove
(
this
.
panel
)
;
this
.
emit
(
"
hidden
"
)
;
}
isVisible
(
)
{
return
typeof
this
.
panel
.
parentNode
!
=
=
"
undefined
"
&
&
this
.
panel
.
parentNode
!
=
=
null
;
}
clear
(
)
{
this
.
panel
.
innerHTML
=
"
"
;
}
setContent
(
content
)
{
this
.
clear
(
)
;
this
.
panel
.
appendChild
(
content
)
;
}
get
content
(
)
{
return
this
.
panel
.
firstChild
;
}
_getTopWindow
:
function
(
)
{
return
this
.
doc
.
defaultView
;
}
destroy
(
)
{
this
.
hide
(
)
;
this
.
doc
=
null
;
this
.
panel
=
null
;
}
}
;
module
.
exports
=
InlineTooltip
;
