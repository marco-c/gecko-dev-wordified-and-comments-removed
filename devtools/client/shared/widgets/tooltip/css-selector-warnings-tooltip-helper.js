"
use
strict
"
;
const
XHTML_NS
=
"
http
:
/
/
www
.
w3
.
org
/
1999
/
xhtml
"
;
const
SELECTOR_WARNINGS
=
{
UnconstrainedHas
:
{
l10nId
:
"
css
-
selector
-
warning
-
unconstrained
-
has
"
learnMoreUrl
:
null
}
}
;
class
CssSelectorWarningsTooltipHelper
{
async
setContent
(
data
tooltip
)
{
const
fragment
=
this
.
#
getTemplate
(
data
tooltip
)
;
tooltip
.
panel
.
innerHTML
=
"
"
;
tooltip
.
panel
.
append
(
fragment
)
;
tooltip
.
setContentSize
(
{
width
:
267
height
:
Infinity
}
)
;
}
#
getTemplate
(
data
tooltip
)
{
const
{
doc
}
=
tooltip
;
const
templateNode
=
doc
.
createElementNS
(
XHTML_NS
"
template
"
)
;
const
tooltipContainer
=
doc
.
createElementNS
(
XHTML_NS
"
ul
"
)
;
tooltipContainer
.
classList
.
add
(
"
devtools
-
tooltip
-
selector
-
warnings
"
)
;
templateNode
.
content
.
appendChild
(
tooltipContainer
)
;
for
(
const
selectorWarningKind
of
data
)
{
if
(
!
SELECTOR_WARNINGS
[
selectorWarningKind
]
)
{
console
.
error
(
"
Unknown
selector
warning
kind
"
data
)
;
continue
;
}
const
{
l10nId
}
=
SELECTOR_WARNINGS
[
selectorWarningKind
]
;
const
li
=
doc
.
createElementNS
(
XHTML_NS
"
li
"
)
;
li
.
setAttribute
(
"
data
-
l10n
-
id
"
l10nId
)
;
tooltipContainer
.
append
(
li
)
;
}
return
doc
.
importNode
(
templateNode
.
content
true
)
;
}
}
module
.
exports
=
CssSelectorWarningsTooltipHelper
;
