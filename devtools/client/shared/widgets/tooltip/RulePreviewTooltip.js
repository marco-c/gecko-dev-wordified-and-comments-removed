"
use
strict
"
;
const
{
LocalizationHelper
}
=
require
(
"
resource
:
/
/
devtools
/
shared
/
l10n
.
js
"
)
;
const
{
HTMLTooltip
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
widgets
/
tooltip
/
HTMLTooltip
.
js
"
)
;
const
XHTML_NS
=
"
http
:
/
/
www
.
w3
.
org
/
1999
/
xhtml
"
;
const
L10N
=
new
LocalizationHelper
(
"
devtools
/
client
/
locales
/
inspector
.
properties
"
)
;
class
RulePreviewTooltip
{
constructor
(
doc
)
{
this
.
show
=
this
.
show
.
bind
(
this
)
;
this
.
destroy
=
this
.
destroy
.
bind
(
this
)
;
this
.
_tooltip
=
new
HTMLTooltip
(
doc
{
type
:
"
arrow
"
consumeOutsideClicks
:
true
useXulWrapper
:
true
}
)
;
this
.
container
=
doc
.
createElementNS
(
XHTML_NS
"
div
"
)
;
this
.
container
.
className
=
"
rule
-
preview
-
tooltip
-
container
"
;
this
.
message
=
doc
.
createElementNS
(
XHTML_NS
"
span
"
)
;
this
.
message
.
className
=
"
rule
-
preview
-
tooltip
-
message
"
;
this
.
message
.
textContent
=
L10N
.
getStr
(
"
rulePreviewTooltip
.
noAssociatedRule
"
)
;
this
.
container
.
appendChild
(
this
.
message
)
;
this
.
_tooltip
.
panel
.
innerHTML
=
"
"
;
this
.
_tooltip
.
panel
.
appendChild
(
this
.
container
)
;
this
.
_tooltip
.
setContentSize
(
{
width
:
"
auto
"
height
:
"
auto
"
}
)
;
}
show
(
element
)
{
element
.
addEventListener
(
"
mouseout
"
(
)
=
>
this
.
_tooltip
.
hide
(
)
)
;
this
.
_tooltip
.
show
(
element
)
;
}
destroy
(
)
{
this
.
_tooltip
.
destroy
(
)
;
this
.
container
=
null
;
this
.
message
=
null
;
}
}
module
.
exports
=
RulePreviewTooltip
;
