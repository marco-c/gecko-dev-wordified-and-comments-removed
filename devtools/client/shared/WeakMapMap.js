"
use
strict
"
;
class
WeakMapMap
{
constructor
(
)
{
this
.
clear
(
)
;
}
get
(
key
nestedKey
)
{
if
(
!
this
.
has
(
key
nestedKey
)
)
{
return
undefined
;
}
return
this
.
store
.
get
(
key
)
.
get
(
nestedKey
)
;
}
has
(
key
nestedKey
)
{
const
hasKey
=
this
.
store
.
has
(
key
)
;
return
hasKey
&
&
this
.
store
.
get
(
key
)
.
has
(
nestedKey
)
;
}
set
(
key
nestedKey
value
)
{
if
(
!
this
.
store
.
has
(
key
)
)
{
this
.
store
.
set
(
key
new
Map
(
)
)
;
}
const
innerMap
=
this
.
store
.
get
(
key
)
;
innerMap
.
set
(
nestedKey
value
)
;
}
delete
(
key
nestedKey
)
{
if
(
!
this
.
store
.
has
(
key
)
)
{
return
false
;
}
return
this
.
store
.
get
(
key
)
.
delete
(
nestedKey
)
;
}
clear
(
)
{
this
.
store
=
new
WeakMap
(
)
;
}
}
module
.
exports
=
WeakMapMap
;
