"
use
strict
"
;
exports
.
viewSourceInStyleEditor
=
async
function
(
toolbox
sourceURL
sourceLine
sourceColumn
)
{
const
panel
=
await
toolbox
.
loadTool
(
"
styleeditor
"
)
;
try
{
await
panel
.
selectStyleSheet
(
sourceURL
sourceLine
sourceColumn
)
;
await
toolbox
.
selectTool
(
"
styleeditor
"
)
;
return
true
;
}
catch
(
e
)
{
exports
.
viewSource
(
toolbox
sourceURL
sourceLine
)
;
return
false
;
}
}
;
exports
.
viewSourceInDebugger
=
async
function
(
toolbox
sourceURL
sourceLine
sourceColumn
sourceId
reason
=
"
unknown
"
)
{
const
dbg
=
await
toolbox
.
loadTool
(
"
jsdebugger
"
)
;
const
source
=
sourceId
?
dbg
.
getSourceByActorId
(
sourceId
)
:
dbg
.
getSourceByURL
(
sourceURL
)
;
if
(
source
&
&
dbg
.
canLoadSource
(
source
.
id
)
)
{
await
toolbox
.
selectTool
(
"
jsdebugger
"
reason
)
;
try
{
await
dbg
.
selectSource
(
source
.
id
sourceLine
sourceColumn
)
;
}
catch
(
err
)
{
console
.
error
(
"
Failed
to
view
source
in
debugger
"
err
)
;
return
false
;
}
return
true
;
}
else
if
(
await
toolbox
.
sourceMapService
.
hasOriginalURL
(
sourceURL
)
)
{
await
toolbox
.
selectTool
(
"
jsdebugger
"
reason
)
;
try
{
await
dbg
.
selectSourceURL
(
sourceURL
sourceLine
sourceColumn
)
;
}
catch
(
err
)
{
console
.
error
(
"
Failed
to
view
source
in
debugger
"
err
)
;
return
false
;
}
return
true
;
}
exports
.
viewSource
(
toolbox
sourceURL
sourceLine
sourceColumn
)
;
return
false
;
}
;
exports
.
viewSource
=
async
function
(
toolbox
sourceURL
sourceLine
)
{
const
utils
=
toolbox
.
gViewSourceUtils
;
utils
.
viewSource
(
{
URL
:
sourceURL
lineNumber
:
sourceLine
|
|
0
}
)
;
}
;
