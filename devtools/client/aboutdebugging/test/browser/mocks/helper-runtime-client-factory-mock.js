"
use
strict
"
;
function
enableRuntimeClientFactoryMock
(
mock
)
{
const
{
setMockedModule
}
=
require
(
"
resource
:
/
/
devtools
/
shared
/
loader
/
browser
-
loader
-
mocks
.
js
"
)
;
setMockedModule
(
mock
"
devtools
/
client
/
aboutdebugging
/
src
/
modules
/
runtime
-
client
-
factory
"
)
;
mockRuntimeDefaultPreferences
(
)
;
}
const
mockRuntimeDefaultPreferences
=
function
(
)
{
const
{
removeMockedModule
setMockedModule
}
=
require
(
"
resource
:
/
/
devtools
/
shared
/
loader
/
browser
-
loader
-
mocks
.
js
"
)
;
const
mock
=
{
setDefaultPreferencesIfNeeded
:
(
)
=
>
{
}
DEFAULT_PREFERENCES
:
[
]
}
;
setMockedModule
(
mock
"
devtools
/
client
/
aboutdebugging
/
src
/
modules
/
runtime
-
default
-
preferences
"
)
;
registerCleanupFunction
(
(
)
=
>
{
removeMockedModule
(
"
devtools
/
client
/
aboutdebugging
/
src
/
modules
/
runtime
-
default
-
preferences
"
)
;
}
)
;
}
;
function
disableRuntimeClientFactoryMock
(
)
{
const
{
removeMockedModule
}
=
require
(
"
resource
:
/
/
devtools
/
shared
/
loader
/
browser
-
loader
-
mocks
.
js
"
)
;
removeMockedModule
(
"
devtools
/
client
/
aboutdebugging
/
src
/
modules
/
runtime
-
client
-
factory
"
)
;
}
function
createRuntimeClientFactoryMock
(
)
{
const
RuntimeClientFactoryMock
=
{
}
;
RuntimeClientFactoryMock
.
createClientForRuntime
=
function
(
)
{
console
.
log
(
"
MOCKED
METHOD
createClientForRuntime
"
)
;
}
;
return
RuntimeClientFactoryMock
;
}
