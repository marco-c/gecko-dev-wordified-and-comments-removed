"
use
strict
"
;
requestLongerTimeout
(
5
)
;
Services
.
scriptloader
.
loadSubScript
(
CHROME_URL_ROOT
+
"
helper
-
collapsibilities
.
js
"
this
)
;
const
TOOLS
=
[
"
inspector
"
"
webconsole
"
"
jsdebugger
"
"
styleeditor
"
"
memory
"
"
netmonitor
"
"
storage
"
"
accessibility
"
]
;
add_task
(
async
function
(
)
{
info
(
"
Force
all
debug
target
panes
to
be
expanded
"
)
;
prepareCollapsibilitiesTest
(
)
;
for
(
const
toolId
of
TOOLS
)
{
await
testReloadAboutDevToolsToolbox
(
toolId
)
;
}
}
)
;
async
function
testReloadAboutDevToolsToolbox
(
toolId
)
{
const
{
document
tab
window
}
=
await
openAboutDebugging
(
)
;
await
selectThisFirefoxPage
(
document
window
.
AboutDebugging
.
store
)
;
await
pushPref
(
"
devtools
.
toolbox
.
selectedTool
"
"
options
"
)
;
const
{
devtoolsBrowser
devtoolsTab
devtoolsWindow
}
=
await
openAboutDevtoolsToolbox
(
document
tab
window
)
;
info
(
Select
tool
:
{
toolId
}
)
;
const
toolbox
=
getToolbox
(
devtoolsWindow
)
;
await
toolbox
.
selectTool
(
toolId
)
;
info
(
"
Wait
for
requests
to
settle
before
reloading
"
)
;
await
toolbox
.
commands
.
client
.
waitForRequestsToSettle
(
)
;
info
(
"
Reload
about
:
devtools
-
toolbox
page
"
)
;
devtoolsBrowser
.
reload
(
)
;
await
gDevTools
.
once
(
"
toolbox
-
ready
"
)
;
ok
(
true
"
Toolbox
is
re
-
created
again
"
)
;
is
(
devtoolsBrowser
gBrowser
.
selectedBrowser
"
about
:
devtools
-
toolbox
is
still
selected
"
)
;
info
(
"
Check
whether
about
:
devtools
-
toolbox
page
displays
correctly
"
)
;
ok
(
devtoolsBrowser
.
contentDocument
.
querySelector
(
"
.
debug
-
target
-
info
"
)
"
about
:
devtools
-
toolbox
page
displays
correctly
"
)
;
await
closeAboutDevtoolsToolbox
(
document
devtoolsTab
window
)
;
await
removeTab
(
tab
)
;
}
