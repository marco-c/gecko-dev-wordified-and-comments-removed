"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
CHROME_URL_ROOT
+
"
helper
-
addons
.
js
"
this
)
;
const
{
PromiseTestUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
PromiseTestUtils
.
jsm
"
)
;
PromiseTestUtils
.
allowMatchingRejectionsGlobally
(
/
File
closed
/
)
;
requestLongerTimeout
(
2
)
;
const
ADDON_ID
=
"
test
-
devtools
-
webextension
mozilla
.
org
"
;
const
ADDON_NAME
=
"
test
-
devtools
-
webextension
"
;
add_task
(
async
function
testWebExtensionsToolboxWebConsole
(
)
{
await
enableExtensionDebugging
(
)
;
const
{
document
tab
window
}
=
await
openAboutDebugging
(
)
;
await
selectThisFirefoxPage
(
document
window
.
AboutDebugging
.
store
)
;
await
installTemporaryExtensionFromXPI
(
{
background
:
function
(
)
{
document
.
body
.
innerText
=
"
Background
Page
Body
Test
Content
"
;
}
id
:
ADDON_ID
name
:
ADDON_NAME
}
document
)
;
info
(
"
Open
a
toolbox
to
debug
the
addon
"
)
;
const
{
devtoolsTab
devtoolsWindow
}
=
await
openAboutDevtoolsToolbox
(
document
tab
window
ADDON_NAME
)
;
const
toolbox
=
getToolbox
(
devtoolsWindow
)
;
const
onToolboxClose
=
gDevTools
.
once
(
"
toolbox
-
destroyed
"
)
;
toolboxTestScript
(
toolbox
devtoolsTab
)
;
info
(
"
Wait
for
the
toolbox
to
close
"
)
;
await
onToolboxClose
;
ok
(
true
"
Addon
toolbox
closed
"
)
;
await
removeTemporaryExtension
(
ADDON_NAME
document
)
;
await
removeTab
(
tab
)
;
}
)
;
async
function
toolboxTestScript
(
toolbox
devtoolsTab
)
{
const
inspector
=
await
toolbox
.
selectTool
(
"
inspector
"
)
;
const
nodeActor
=
await
inspector
.
walker
.
querySelector
(
inspector
.
walker
.
rootNode
"
body
"
)
;
ok
(
nodeActor
"
Got
a
nodeActor
"
)
;
ok
(
nodeActor
.
inlineTextChild
"
Got
a
nodeActor
with
an
inline
text
child
"
)
;
const
actualValue
=
nodeActor
.
inlineTextChild
.
_form
.
nodeValue
;
is
(
String
(
actualValue
)
.
trim
(
)
"
Background
Page
Body
Test
Content
"
"
nodeActor
has
the
expected
inlineTextChild
value
"
)
;
info
(
"
Wait
for
all
pending
requests
to
settle
on
the
DevToolsClient
"
)
;
await
toolbox
.
target
.
client
.
waitForRequestsToSettle
(
)
;
await
removeTab
(
devtoolsTab
)
;
}
