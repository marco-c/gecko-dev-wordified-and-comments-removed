"
use
strict
"
;
function
waitUntil
(
predicate
interval
=
10
)
{
if
(
predicate
(
)
)
{
return
Promise
.
resolve
(
true
)
;
}
return
new
Promise
(
resolve
=
>
{
setTimeout
(
function
(
)
{
waitUntil
(
predicate
interval
)
.
then
(
(
)
=
>
resolve
(
true
)
)
;
}
interval
)
;
}
)
;
}
let
canInstall
=
false
;
self
.
addEventListener
(
"
message
"
function
(
event
)
{
if
(
event
.
data
=
=
=
"
install
-
service
-
worker
"
)
{
canInstall
=
true
;
}
if
(
event
.
data
=
=
=
"
install
-
service
-
worker
-
and
-
pause
"
)
{
canInstall
=
true
;
debugger
;
}
}
)
;
self
.
addEventListener
(
"
install
"
function
(
event
)
{
event
.
waitUntil
(
waitUntil
(
(
)
=
>
canInstall
)
)
;
console
.
log
(
"
service
worker
installed
"
)
;
}
)
;
