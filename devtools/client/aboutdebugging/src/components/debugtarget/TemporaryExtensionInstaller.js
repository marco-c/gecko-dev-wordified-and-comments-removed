"
use
strict
"
;
const
{
createFactory
PureComponent
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
.
mjs
"
)
;
const
dom
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
.
js
"
)
;
const
PropTypes
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
.
mjs
"
)
;
const
FluentReact
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
fluent
-
react
.
js
"
)
;
const
Localized
=
createFactory
(
FluentReact
.
Localized
)
;
const
Actions
=
require
(
"
resource
:
/
/
devtools
/
client
/
aboutdebugging
/
src
/
actions
/
index
.
js
"
)
;
class
TemporaryExtensionInstaller
extends
PureComponent
{
static
get
propTypes
(
)
{
return
{
className
:
PropTypes
.
string
dispatch
:
PropTypes
.
func
.
isRequired
}
;
}
install
(
)
{
this
.
props
.
dispatch
(
Actions
.
installTemporaryExtension
(
)
)
;
}
render
(
)
{
const
{
className
}
=
this
.
props
;
return
Localized
(
{
id
:
"
about
-
debugging
-
tmp
-
extension
-
install
-
button
"
}
dom
.
button
(
{
className
:
{
className
}
default
-
button
qa
-
temporary
-
extension
-
install
-
button
onClick
:
(
)
=
>
this
.
install
(
)
disabled
:
!
Services
.
policies
.
isAllowed
(
"
installTemporaryAddon
"
)
}
"
Load
Temporary
Add
-
on
"
)
)
;
}
}
module
.
exports
=
TemporaryExtensionInstaller
;
