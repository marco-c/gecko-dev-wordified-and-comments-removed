"
use
strict
"
;
const
{
createFactory
PureComponent
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
.
js
"
)
;
const
dom
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
.
js
"
)
;
const
PropTypes
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
.
js
"
)
;
const
FluentReact
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
fluent
-
react
.
js
"
)
;
const
Localized
=
createFactory
(
FluentReact
.
Localized
)
;
const
{
MESSAGE_LEVEL
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
aboutdebugging
/
src
/
constants
.
js
"
)
;
const
ICONS
=
{
[
MESSAGE_LEVEL
.
ERROR
]
:
"
chrome
:
/
/
devtools
/
skin
/
images
/
aboutdebugging
-
error
.
svg
"
[
MESSAGE_LEVEL
.
INFO
]
:
"
chrome
:
/
/
devtools
/
skin
/
images
/
aboutdebugging
-
information
.
svg
"
[
MESSAGE_LEVEL
.
WARNING
]
:
"
chrome
:
/
/
devtools
/
skin
/
images
/
alert
.
svg
"
}
;
const
CLOSE_ICON_SRC
=
"
chrome
:
/
/
devtools
/
skin
/
images
/
close
.
svg
"
;
class
Message
extends
PureComponent
{
static
get
propTypes
(
)
{
return
{
children
:
PropTypes
.
node
.
isRequired
className
:
PropTypes
.
string
isCloseable
:
PropTypes
.
bool
level
:
PropTypes
.
oneOf
(
Object
.
values
(
MESSAGE_LEVEL
)
)
.
isRequired
}
;
}
constructor
(
props
)
{
super
(
props
)
;
this
.
state
=
{
isClosed
:
false
}
;
}
closeMessage
(
)
{
this
.
setState
(
{
isClosed
:
true
}
)
;
}
renderButton
(
level
)
{
return
dom
.
button
(
{
className
:
ghost
-
button
message__button
message__button
-
-
{
level
}
+
qa
-
message
-
button
-
close
-
button
onClick
:
(
)
=
>
this
.
closeMessage
(
)
}
Localized
(
{
id
:
"
about
-
debugging
-
message
-
close
-
icon
"
attrs
:
{
alt
:
true
}
}
dom
.
img
(
{
className
:
"
qa
-
message
-
button
-
close
-
icon
"
src
:
CLOSE_ICON_SRC
}
)
)
)
;
}
render
(
)
{
const
{
children
className
level
isCloseable
}
=
this
.
props
;
const
{
isClosed
}
=
this
.
state
;
if
(
isClosed
)
{
return
null
;
}
return
dom
.
aside
(
{
className
:
message
message
-
-
level
-
{
level
}
qa
-
message
+
(
className
?
{
className
}
:
"
"
)
}
dom
.
img
(
{
className
:
"
message__icon
"
src
:
ICONS
[
level
]
}
)
dom
.
div
(
{
className
:
"
message__body
"
}
children
)
isCloseable
?
this
.
renderButton
(
level
)
:
null
)
;
}
}
module
.
exports
=
Message
;
