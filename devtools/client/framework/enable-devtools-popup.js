"
use
strict
"
;
loader
.
lazyGetter
(
this
"
telemetry
"
(
)
=
>
{
const
Telemetry
=
require
(
"
devtools
/
client
/
shared
/
telemetry
"
)
;
return
new
Telemetry
(
)
;
}
)
;
let
telemetrySessionId
=
null
;
exports
.
toggleEnableDevToolsPopup
=
function
(
doc
)
{
const
popup
=
doc
.
getElementById
(
"
enable
-
devtools
-
popup
"
)
;
const
anchor
=
doc
.
getElementById
(
"
PanelUI
-
menu
-
button
"
)
.
querySelector
(
"
.
toolbarbutton
-
icon
"
)
;
const
isVisible
=
popup
.
state
=
=
=
"
open
"
;
if
(
isVisible
)
{
popup
.
hidePopup
(
)
;
}
else
{
if
(
!
telemetrySessionId
)
{
telemetrySessionId
=
parseInt
(
telemetry
.
msSinceProcessStart
(
)
10
)
;
}
popup
.
openPopup
(
anchor
"
bottomcenter
topright
"
)
;
telemetry
.
recordEvent
(
"
f12_popup_displayed
"
"
tools
"
null
{
session_id
:
telemetrySessionId
}
)
;
}
}
;
exports
.
getF12SessionId
=
function
(
)
{
return
telemetrySessionId
;
}
;
