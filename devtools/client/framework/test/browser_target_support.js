async
function
testTarget
(
client
target
)
{
await
target
.
attach
(
)
;
is
(
target
.
hasActor
(
"
inspector
"
)
true
"
target
.
hasActor
(
)
true
when
actor
exists
.
"
)
;
is
(
target
.
hasActor
(
"
storage
"
)
true
"
target
.
hasActor
(
)
true
when
actor
exists
.
"
)
;
is
(
target
.
hasActor
(
"
notreal
"
)
false
"
target
.
hasActor
(
)
false
when
actor
does
not
exist
.
"
)
;
is
(
target
.
getTrait
(
"
giddyup
"
)
undefined
"
target
.
getTrait
(
)
returns
undefined
when
trait
does
not
exist
"
)
;
close
(
target
client
)
;
}
function
test
(
)
{
waitForExplicitFinish
(
)
;
getParentProcessActors
(
testTarget
)
;
}
function
close
(
target
client
)
{
target
.
on
(
"
close
"
(
)
=
>
{
ok
(
true
"
Target
was
closed
"
)
;
finish
(
)
;
}
)
;
client
.
close
(
)
;
}
