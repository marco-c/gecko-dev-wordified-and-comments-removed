"
use
strict
"
;
let
gToolbox
=
null
;
let
panelWin
=
null
;
const
URL
=
"
data
:
text
/
html
;
charset
=
utf8
test
split
console
key
delegation
"
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
debugger
.
new
-
debugger
-
frontend
"
false
)
;
registerCleanupFunction
(
function
*
(
)
{
Services
.
prefs
.
clearUserPref
(
"
devtools
.
debugger
.
new
-
debugger
-
frontend
"
)
;
}
)
;
add_task
(
function
*
(
)
{
let
tab
=
yield
addTab
(
URL
)
;
let
target
=
TargetFactory
.
forTab
(
tab
)
;
gToolbox
=
yield
gDevTools
.
showToolbox
(
target
"
jsdebugger
"
)
;
panelWin
=
gToolbox
.
getPanel
(
"
jsdebugger
"
)
.
panelWin
;
yield
gToolbox
.
openSplitConsole
(
)
;
yield
testIsSplitConsoleFocused
(
)
;
yield
testUseKeyWithSplitConsole
(
)
;
yield
testUseKeyWithSplitConsoleWrongTool
(
)
;
yield
cleanup
(
)
;
}
)
;
function
*
testIsSplitConsoleFocused
(
)
{
yield
gToolbox
.
openSplitConsole
(
)
;
ok
(
gToolbox
.
isSplitConsoleFocused
(
)
"
Split
console
is
focused
"
)
;
panelWin
.
focus
(
)
;
ok
(
!
gToolbox
.
isSplitConsoleFocused
(
)
"
Split
console
is
no
longer
focused
"
)
;
}
function
*
testUseKeyWithSplitConsole
(
)
{
let
commandCalled
=
false
;
info
(
"
useKeyWithSplitConsole
on
debugger
while
debugger
is
focused
"
)
;
gToolbox
.
useKeyWithSplitConsole
(
"
F3
"
(
)
=
>
{
commandCalled
=
true
;
}
"
jsdebugger
"
)
;
info
(
"
synthesizeKey
with
the
console
focused
"
)
;
let
consoleInput
=
gToolbox
.
getPanel
(
"
webconsole
"
)
.
hud
.
jsterm
.
inputNode
;
consoleInput
.
focus
(
)
;
synthesizeKeyShortcut
(
"
F3
"
panelWin
)
;
ok
(
commandCalled
"
Shortcut
key
should
trigger
the
command
"
)
;
}
function
*
testUseKeyWithSplitConsoleWrongTool
(
)
{
let
commandCalled
=
false
;
info
(
"
useKeyWithSplitConsole
on
inspector
while
debugger
is
focused
"
)
;
gToolbox
.
useKeyWithSplitConsole
(
"
F4
"
(
)
=
>
{
commandCalled
=
true
;
}
"
inspector
"
)
;
info
(
"
synthesizeKey
with
the
console
focused
"
)
;
let
consoleInput
=
gToolbox
.
getPanel
(
"
webconsole
"
)
.
hud
.
jsterm
.
inputNode
;
consoleInput
.
focus
(
)
;
synthesizeKeyShortcut
(
"
F4
"
panelWin
)
;
ok
(
!
commandCalled
"
Shortcut
key
shouldn
'
t
trigger
the
command
"
)
;
}
function
*
cleanup
(
)
{
yield
gToolbox
.
destroy
(
)
;
gBrowser
.
removeCurrentTab
(
)
;
gToolbox
=
panelWin
=
null
;
}
