"
use
strict
"
;
var
{
Toolbox
}
=
require
(
"
devtools
/
client
/
framework
/
toolbox
"
)
;
const
URL
=
URL_ROOT
+
"
browser_toolbox_window_title_frame_select_page
.
html
"
;
const
IFRAME_URL
=
URL_ROOT
+
"
browser_toolbox_window_title_changes_page
.
html
"
;
add_task
(
function
*
(
)
{
Services
.
prefs
.
setBoolPref
(
"
devtools
.
command
-
button
-
frames
.
enabled
"
true
)
;
yield
addTab
(
URL
)
;
let
target
=
TargetFactory
.
forTab
(
gBrowser
.
selectedTab
)
;
let
toolbox
=
yield
gDevTools
.
showToolbox
(
target
null
Toolbox
.
HostType
.
BOTTOM
)
;
yield
toolbox
.
selectTool
(
"
inspector
"
)
;
yield
toolbox
.
switchHost
(
Toolbox
.
HostType
.
WINDOW
)
;
is
(
getTitle
(
)
Developer
Tools
-
Page
title
-
{
URL
}
"
Devtools
title
correct
after
switching
to
detached
window
host
"
)
;
let
btn
=
toolbox
.
doc
.
getElementById
(
"
command
-
button
-
frames
"
)
;
let
frames
=
Array
.
slice
(
btn
.
firstChild
.
querySelectorAll
(
"
[
data
-
window
-
id
]
"
)
)
;
is
(
frames
.
length
2
"
We
have
both
frames
in
the
list
"
)
;
let
topFrameBtn
=
frames
.
filter
(
b
=
>
b
.
getAttribute
(
"
label
"
)
=
=
URL
)
[
0
]
;
let
iframeBtn
=
frames
.
filter
(
b
=
>
b
.
getAttribute
(
"
label
"
)
=
=
IFRAME_URL
)
[
0
]
;
ok
(
topFrameBtn
"
Got
top
level
document
in
the
list
"
)
;
ok
(
iframeBtn
"
Got
iframe
document
in
the
list
"
)
;
let
willNavigate
=
toolbox
.
target
.
once
(
"
will
-
navigate
"
)
;
let
newRoot
=
toolbox
.
getPanel
(
"
inspector
"
)
.
once
(
"
new
-
root
"
)
;
info
(
"
Select
the
iframe
"
)
;
iframeBtn
.
click
(
)
;
yield
willNavigate
;
yield
newRoot
;
info
(
"
Navigation
to
the
iframe
is
done
the
inspector
should
be
back
up
"
)
;
is
(
getTitle
(
)
Developer
Tools
-
Page
title
-
{
URL
}
"
Devtools
title
was
not
updated
after
changing
inspected
frame
"
)
;
info
(
"
Cleanup
toolbox
and
test
preferences
.
"
)
;
yield
toolbox
.
destroy
(
)
;
toolbox
=
null
;
gBrowser
.
removeCurrentTab
(
)
;
Services
.
prefs
.
clearUserPref
(
"
devtools
.
toolbox
.
host
"
)
;
Services
.
prefs
.
clearUserPref
(
"
devtools
.
toolbox
.
selectedTool
"
)
;
Services
.
prefs
.
clearUserPref
(
"
devtools
.
toolbox
.
sideEnabled
"
)
;
Services
.
prefs
.
clearUserPref
(
"
devtools
.
command
-
button
-
frames
.
enabled
"
)
;
finish
(
)
;
}
)
;
function
getTitle
(
)
{
return
Services
.
wm
.
getMostRecentWindow
(
"
devtools
:
toolbox
"
)
.
document
.
title
;
}
