const
SHOW_THEME_NOTIFICATION_PREF
=
"
devtools
.
theme
.
show
-
auto
-
theme
-
info
"
;
const
FORCE_THEME_NOTIFICATION_PREF
=
"
devtools
.
theme
.
force
-
auto
-
theme
-
info
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
FORCE_THEME_NOTIFICATION_PREF
true
)
;
await
pushPref
(
SHOW_THEME_NOTIFICATION_PREF
true
)
;
const
tab
=
await
addTab
(
"
data
:
text
/
html
test
"
)
;
let
toolbox
=
await
gDevTools
.
showToolboxForTab
(
tab
)
;
info
(
"
Check
the
auto
-
theme
notification
is
displayed
"
)
;
let
notification
=
await
waitFor
(
(
)
=
>
getAutoThemeNotification
(
toolbox
)
)
;
ok
(
notification
"
A
notification
was
displayed
"
)
;
info
(
"
Click
on
the
settings
button
from
the
notification
"
)
;
const
onSettingsCallbackDone
=
toolbox
.
once
(
"
test
-
theme
-
settings
-
opened
"
)
;
const
settingsButton
=
notification
.
querySelector
(
"
.
notificationButton
"
)
;
settingsButton
.
click
(
)
;
info
(
"
Wait
until
the
open
settings
button
callback
is
done
"
)
;
await
onSettingsCallbackDone
;
is
(
toolbox
.
currentToolId
"
options
"
"
The
options
panel
was
selected
"
)
;
info
(
"
Close
and
reopen
the
toolbox
"
)
;
await
toolbox
.
destroy
(
)
;
toolbox
=
await
gDevTools
.
showToolboxForTab
(
tab
)
;
info
(
"
Check
the
notification
is
displayed
again
"
)
;
notification
=
await
waitFor
(
(
)
=
>
getAutoThemeNotification
(
toolbox
)
)
;
ok
(
notification
"
A
notification
was
displayed
after
reopening
the
toolbox
"
)
;
info
(
"
Close
the
notification
"
)
;
const
closeButton
=
notification
.
querySelector
(
"
.
messageCloseButton
"
)
;
closeButton
.
click
(
)
;
info
(
"
Wait
for
the
notification
to
be
removed
"
)
;
await
waitFor
(
(
)
=
>
!
getAutoThemeNotification
(
toolbox
)
)
;
info
(
"
Close
and
reopen
the
toolbox
"
)
;
await
toolbox
.
destroy
(
)
;
toolbox
=
await
gDevTools
.
showToolboxForTab
(
tab
)
;
await
wait
(
1000
)
;
ok
(
!
getAutoThemeNotification
(
toolbox
)
)
;
is
(
Services
.
prefs
.
getBoolPref
(
SHOW_THEME_NOTIFICATION_PREF
)
false
"
The
show
theme
notification
preference
was
set
to
false
"
)
;
}
)
;
function
getAutoThemeNotification
(
toolbox
)
{
return
toolbox
.
doc
.
querySelector
(
'
.
notification
[
data
-
key
=
"
auto
-
theme
-
notification
"
]
'
)
;
}
