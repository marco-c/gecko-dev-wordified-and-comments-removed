"
use
strict
"
;
const
TEST_URL
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
framework
/
test
/
allocations
/
reloaded
-
page
.
html
"
;
const
{
require
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
devtools
/
shared
/
Loader
.
jsm
"
)
;
const
{
BrowserConsoleManager
}
=
require
(
"
devtools
/
client
/
webconsole
/
browser
-
console
-
manager
"
)
;
async
function
testScript
(
)
{
await
BrowserConsoleManager
.
toggleBrowserConsole
(
)
;
const
hud
=
BrowserConsoleManager
.
getBrowserConsole
(
)
;
const
onTargetProcessed
=
hud
.
commands
.
targetCommand
.
once
(
"
processed
-
available
-
target
"
)
;
gBrowser
.
reloadTab
(
gBrowser
.
selectedTab
)
;
info
(
"
Wait
for
target
of
the
new
document
to
be
fully
processed
"
)
;
await
onTargetProcessed
;
await
new
Promise
(
resolve
=
>
setTimeout
(
resolve
1000
)
)
;
await
BrowserConsoleManager
.
toggleBrowserConsole
(
)
;
await
new
Promise
(
resolve
=
>
setTimeout
(
resolve
500
)
)
;
}
add_task
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
devtools
.
browsertoolbox
.
fission
"
true
]
]
}
)
;
const
tab
=
await
addTab
(
TEST_URL
)
;
await
testScript
(
)
;
await
startRecordingAllocations
(
)
;
for
(
let
i
=
0
;
i
<
3
;
i
+
+
)
{
await
testScript
(
)
;
}
await
stopRecordingAllocations
(
"
browser
-
console
"
)
;
gBrowser
.
removeTab
(
tab
)
;
}
)
;
