"
use
strict
"
;
function
createPanelReloadTest
(
recordName
toolId
)
{
return
async
function
panelReloadTest
(
)
{
const
TEST_URL
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
framework
/
test
/
allocations
/
reloaded
-
page
.
html
"
;
async
function
testScript
(
toolbox
)
{
const
onTargetSwitched
=
toolbox
.
commands
.
targetCommand
.
once
(
"
switched
-
target
"
)
;
const
onReloaded
=
toolbox
.
getCurrentPanel
(
)
.
once
(
"
reloaded
"
)
;
gBrowser
.
reloadTab
(
gBrowser
.
selectedTab
)
;
if
(
toolbox
.
commands
.
targetCommand
.
targetFront
.
targetForm
.
followWindowGlobalLifeCycle
)
{
info
(
"
Wait
for
target
switched
"
)
;
await
onTargetSwitched
;
}
info
(
"
Wait
for
panel
reload
"
)
;
await
onReloaded
;
await
new
Promise
(
resolve
=
>
setTimeout
(
resolve
1000
)
)
;
}
const
tab
=
await
addTab
(
TEST_URL
)
;
const
{
require
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
devtools
/
shared
/
loader
/
Loader
.
sys
.
mjs
"
)
;
const
{
gDevTools
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
framework
/
devtools
.
js
"
)
;
const
toolbox
=
await
gDevTools
.
showToolboxForTab
(
tab
{
toolId
}
)
;
await
testScript
(
toolbox
)
;
await
startRecordingAllocations
(
{
alsoRecordContentProcess
:
true
}
)
;
for
(
let
i
=
0
;
i
<
10
;
i
+
+
)
{
await
testScript
(
toolbox
)
;
}
await
stopRecordingAllocations
(
recordName
{
alsoRecordContentProcess
:
true
}
)
;
await
toolbox
.
destroy
(
)
;
gBrowser
.
removeTab
(
tab
)
;
}
;
}
