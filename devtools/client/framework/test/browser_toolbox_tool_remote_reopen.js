"
use
strict
"
;
const
{
DebuggerServer
}
=
require
(
"
devtools
/
server
/
main
"
)
;
const
{
DebuggerClient
}
=
require
(
"
devtools
/
shared
/
client
/
debugger
-
client
"
)
;
requestLongerTimeout
(
2
)
;
function
runTools
(
target
)
{
return
(
async
function
(
)
{
const
toolIds
=
gDevTools
.
getToolDefinitionArray
(
)
.
filter
(
def
=
>
def
.
isTargetSupported
(
target
)
)
.
map
(
def
=
>
def
.
id
)
;
let
toolbox
;
for
(
let
index
=
0
;
index
<
toolIds
.
length
;
index
+
+
)
{
const
toolId
=
toolIds
[
index
]
;
info
(
"
About
to
open
"
+
index
+
"
/
"
+
toolId
)
;
toolbox
=
await
gDevTools
.
showToolbox
(
target
toolId
"
window
"
)
;
ok
(
toolbox
"
toolbox
exists
for
"
+
toolId
)
;
is
(
toolbox
.
currentToolId
toolId
"
currentToolId
should
be
"
+
toolId
)
;
const
panel
=
toolbox
.
getCurrentPanel
(
)
;
ok
(
panel
.
isReady
toolId
+
"
panel
should
be
ready
"
)
;
}
await
toolbox
.
destroy
(
)
;
}
)
(
)
;
}
function
getClient
(
)
{
DebuggerServer
.
init
(
)
;
DebuggerServer
.
registerAllActors
(
)
;
const
transport
=
DebuggerServer
.
connectPipe
(
)
;
const
client
=
new
DebuggerClient
(
transport
)
;
return
client
.
connect
(
)
.
then
(
(
)
=
>
client
)
;
}
function
getTarget
(
client
)
{
return
new
Promise
(
resolve
=
>
{
client
.
listTabs
(
)
.
then
(
tabList
=
>
{
const
target
=
TargetFactory
.
forRemoteTab
(
{
client
:
client
form
:
tabList
.
tabs
[
tabList
.
selected
]
chrome
:
false
}
)
;
resolve
(
target
)
;
}
)
;
}
)
;
}
function
test
(
)
{
(
async
function
(
)
{
toggleAllTools
(
true
)
;
await
addTab
(
"
about
:
blank
"
)
;
const
client
=
await
getClient
(
)
;
const
target
=
await
getTarget
(
client
)
;
await
runTools
(
target
)
;
const
rootFronts
=
[
.
.
.
client
.
mainRoot
.
fronts
.
values
(
)
]
;
for
(
const
pool
of
client
.
__pools
)
{
if
(
!
pool
.
__poolMap
)
{
continue
;
}
if
(
rootFronts
.
includes
(
pool
)
)
{
continue
;
}
for
(
const
actor
of
pool
.
__poolMap
.
keys
(
)
)
{
if
(
actor
.
includes
(
"
framerateActor
"
)
)
{
todo
(
false
"
Front
for
"
+
actor
+
"
still
held
in
pool
!
"
)
;
continue
;
}
ok
(
false
"
Front
for
"
+
actor
+
"
still
held
in
pool
!
"
)
;
}
}
gBrowser
.
removeCurrentTab
(
)
;
DebuggerServer
.
destroy
(
)
;
toggleAllTools
(
false
)
;
finish
(
)
;
}
)
(
)
;
}
