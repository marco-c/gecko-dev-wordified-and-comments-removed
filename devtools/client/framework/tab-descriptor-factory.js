"
use
strict
"
;
loader
.
lazyRequireGetter
(
this
"
CommandsFactory
"
"
devtools
/
shared
/
commands
/
commands
-
factory
"
true
)
;
const
commandsMap
=
new
WeakMap
(
)
;
exports
.
TabDescriptorFactory
=
{
async
createDescriptorForTab
(
tab
)
{
let
commands
=
commandsMap
.
get
(
tab
)
;
if
(
commands
)
{
commands
=
await
commands
;
return
commands
.
descriptorFront
;
}
const
promise
=
CommandsFactory
.
forTab
(
tab
)
;
commandsMap
.
set
(
tab
promise
)
;
commands
=
await
promise
;
commandsMap
.
set
(
tab
commands
)
;
commands
.
descriptorFront
.
once
(
"
descriptor
-
destroyed
"
(
)
=
>
{
commandsMap
.
delete
(
tab
)
;
}
)
;
return
commands
.
descriptorFront
;
}
async
getDescriptorForTab
(
tab
)
{
const
commands
=
await
commandsMap
.
get
(
tab
)
;
return
commands
?
.
descriptorFront
;
}
isKnownTab
(
tab
)
{
return
commandsMap
.
has
(
tab
)
;
}
}
;
