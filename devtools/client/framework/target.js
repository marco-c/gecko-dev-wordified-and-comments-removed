"
use
strict
"
;
loader
.
lazyRequireGetter
(
this
"
DevToolsServer
"
"
devtools
/
server
/
devtools
-
server
"
true
)
;
loader
.
lazyRequireGetter
(
this
"
DevToolsClient
"
"
devtools
/
client
/
devtools
-
client
"
true
)
;
const
targets
=
new
WeakMap
(
)
;
exports
.
TargetFactory
=
{
forTab
:
async
function
(
tab
client
)
{
let
target
=
targets
.
get
(
tab
)
;
if
(
target
)
{
return
target
;
}
const
promise
=
this
.
_createTargetForTab
(
tab
client
)
;
targets
.
set
(
tab
promise
)
;
target
=
await
promise
;
targets
.
set
(
tab
target
)
;
target
.
once
(
"
close
"
(
)
=
>
{
targets
.
delete
(
tab
)
;
}
)
;
return
target
;
}
async
_createTargetForTab
(
tab
client
)
{
const
tabDescriptor
=
await
this
.
createDescriptorForTab
(
tab
client
)
;
return
tabDescriptor
.
getTarget
(
)
;
}
async
createDescriptorForTab
(
tab
client
)
{
function
createLocalServer
(
)
{
DevToolsServer
.
init
(
)
;
DevToolsServer
.
registerAllActors
(
)
;
DevToolsServer
.
allowChromeProcess
=
true
;
}
function
createLocalClient
(
)
{
createLocalServer
(
)
;
return
new
DevToolsClient
(
DevToolsServer
.
connectPipe
(
)
)
;
}
if
(
!
client
)
{
client
=
createLocalClient
(
)
;
await
client
.
connect
(
)
;
}
return
client
.
mainRoot
.
getTab
(
{
tab
}
)
;
}
isKnownTab
:
function
(
tab
)
{
return
targets
.
has
(
tab
)
;
}
}
;
