"
use
strict
"
;
const
{
DOM
createClass
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
img
button
span
}
=
DOM
;
module
.
exports
=
createClass
(
{
displayName
:
"
ToolboxTab
"
renderIcon
(
definition
isHighlighted
)
{
const
{
icon
}
=
definition
;
if
(
!
icon
)
{
return
[
]
;
}
return
[
img
(
{
src
:
icon
}
)
]
;
}
render
(
)
{
const
{
panelDefinition
currentToolId
highlightedTool
selectTool
focusedButton
focusButton
}
=
this
.
props
;
const
{
id
tooltip
label
iconOnly
}
=
panelDefinition
;
const
isHighlighted
=
id
=
=
=
currentToolId
;
const
className
=
[
"
devtools
-
tab
"
panelDefinition
.
invertIconForLightTheme
|
|
panelDefinition
.
invertIconForDarkTheme
?
"
icon
-
invertable
"
:
"
"
panelDefinition
.
invertIconForLightTheme
?
"
icon
-
invertable
-
light
-
theme
"
:
"
"
panelDefinition
.
invertIconForDarkTheme
?
"
icon
-
invertable
-
dark
-
theme
"
:
"
"
currentToolId
=
=
=
id
?
"
selected
"
:
"
"
highlightedTool
=
=
=
id
?
"
highlighted
"
:
"
"
iconOnly
?
"
devtools
-
tab
-
icon
-
only
"
:
"
"
]
.
join
(
"
"
)
;
return
button
(
{
className
id
:
toolbox
-
tab
-
{
id
}
"
data
-
id
"
:
id
title
:
tooltip
type
:
"
button
"
tabIndex
:
focusedButton
=
=
=
id
?
"
0
"
:
"
-
1
"
onFocus
:
(
)
=
>
focusButton
(
id
)
onMouseDown
:
(
)
=
>
selectTool
(
id
)
}
span
(
{
className
:
"
devtools
-
tab
-
line
"
}
)
.
.
.
this
.
renderIcon
(
panelDefinition
isHighlighted
)
iconOnly
?
null
:
span
(
{
className
:
"
devtools
-
tab
-
label
"
}
label
)
)
;
}
}
)
;
