"
use
strict
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
browsertoolbox
.
scope
"
"
everything
"
)
;
await
pushPref
(
"
network
.
proxy
.
allow_hijacking_localhost
"
true
)
;
const
ToolboxTask
=
await
initBrowserToolboxTask
(
)
;
await
ToolboxTask
.
importFunctions
(
{
waitUntil
}
)
;
await
ToolboxTask
.
spawn
(
null
async
(
)
=
>
{
await
gToolbox
.
selectTool
(
"
netmonitor
"
)
;
}
)
;
ok
(
true
"
Netmonitor
selected
"
)
;
await
addTab
(
"
data
:
text
/
html
<
head
>
<
link
rel
=
'
icon
'
href
=
'
https
:
/
/
example
.
com
/
favicon
.
ico
'
/
>
<
/
head
>
"
)
;
await
ToolboxTask
.
spawn
(
null
async
(
)
=
>
{
const
monitor
=
gToolbox
.
getCurrentPanel
(
)
;
const
{
document
store
windowRequire
}
=
monitor
.
panelWin
;
const
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
let
request
;
await
waitUntil
(
(
)
=
>
{
request
=
store
.
getState
(
)
.
requests
.
requests
.
find
(
request
=
>
request
.
url
=
=
"
https
:
/
/
example
.
com
/
favicon
.
ico
"
)
;
return
!
!
request
;
}
)
;
const
faviconCell
=
document
.
querySelector
(
"
td
.
requests
-
list
-
file
[
title
*
=
'
favicon
.
ico
'
]
"
)
;
const
faviconRow
=
faviconCell
&
&
faviconCell
.
closest
(
"
tr
.
request
-
list
-
item
"
)
;
ok
(
!
!
faviconRow
"
Favicon
request
row
should
appear
in
the
Netmonitor
"
)
;
store
.
dispatch
(
Actions
.
selectRequest
(
request
.
id
)
)
;
await
waitUntil
(
(
)
=
>
document
.
querySelector
(
"
.
network
-
details
-
bar
"
)
)
;
const
stackTab
=
document
.
querySelector
(
"
#
stack
-
trace
-
tab
"
)
;
ok
(
!
!
stackTab
"
Favicon
request
should
show
a
stack
trace
tab
"
)
;
}
)
;
await
ToolboxTask
.
destroy
(
)
;
}
)
;
