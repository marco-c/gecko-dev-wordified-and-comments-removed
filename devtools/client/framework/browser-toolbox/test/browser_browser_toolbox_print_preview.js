const
{
PromiseTestUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
PromiseTestUtils
.
jsm
"
)
;
PromiseTestUtils
.
allowMatchingRejectionsGlobally
(
/
File
closed
/
)
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
devtools
/
client
/
inspector
/
test
/
shared
-
head
.
js
"
this
)
;
requestLongerTimeout
(
4
)
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
browsertoolbox
.
panel
"
"
inspector
"
)
;
await
pushPref
(
"
print
.
tab_modal
.
enabled
"
true
)
;
await
addTab
(
data
:
text
/
html
<
div
id
=
"
test
-
div
"
>
PRINT
PREVIEW
TEST
<
/
div
>
)
;
info
(
"
Start
the
print
preview
for
the
current
tab
"
)
;
document
.
getElementById
(
"
cmd_printPreview
"
)
.
doCommand
(
)
;
const
ToolboxTask
=
await
initBrowserToolboxTask
(
{
enableBrowserToolboxFission
:
true
}
)
;
await
ToolboxTask
.
importFunctions
(
{
getNodeFront
selectNode
selectNodeInFrames
}
)
;
const
hasCloseButton
=
await
ToolboxTask
.
spawn
(
null
async
(
)
=
>
{
const
inspector
=
gToolbox
.
getPanel
(
"
inspector
"
)
;
info
(
"
Select
the
#
test
-
div
element
in
the
printpreview
document
"
)
;
await
selectNodeInFrames
(
[
'
browser
[
printpreview
=
"
true
"
]
'
"
#
test
-
div
"
]
inspector
)
;
return
!
!
gToolbox
.
doc
.
getElementById
(
"
toolbox
-
close
"
)
;
}
)
;
ok
(
!
hasCloseButton
"
Browser
toolbox
doesn
'
t
have
a
close
button
"
)
;
await
ToolboxTask
.
destroy
(
)
;
}
)
;
