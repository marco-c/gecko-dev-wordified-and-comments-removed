"
use
strict
"
;
const
TESTCASE_URI
=
TEST_BASE_HTTP
+
"
nostyle
.
html
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
styleeditor
.
navSidebarWidth
"
500
)
;
const
{
panel
ui
}
=
await
openStyleEditorForURL
(
TESTCASE_URI
)
;
const
{
panelWindow
}
=
panel
;
ok
(
!
getRootElement
(
panel
)
.
classList
.
contains
(
"
loading
"
)
"
style
editor
root
element
does
not
have
'
loading
'
class
name
anymore
"
)
;
const
newButton
=
panelWindow
.
document
.
querySelector
(
"
toolbarbutton
.
style
-
editor
-
newButton
"
)
;
ok
(
!
newButton
.
hasAttribute
(
"
disabled
"
)
"
new
style
sheet
button
is
enabled
"
)
;
const
importButton
=
panelWindow
.
document
.
querySelector
(
"
.
style
-
editor
-
importButton
"
)
;
ok
(
!
importButton
.
hasAttribute
(
"
disabled
"
)
"
import
button
is
enabled
"
)
;
const
emptyPlaceHolderEl
=
getRootElement
(
panel
)
.
querySelector
(
"
.
empty
.
placeholder
"
)
;
isnot
(
emptyPlaceHolderEl
.
ownerGlobal
.
getComputedStyle
(
emptyPlaceHolderEl
)
.
display
"
none
"
"
showing
'
no
style
'
indicator
"
)
;
info
(
"
Check
that
clicking
on
the
append
new
stylesheet
link
do
add
a
stylesheet
"
)
;
const
onEditorAdded
=
ui
.
once
(
"
editor
-
added
"
)
;
const
newLink
=
emptyPlaceHolderEl
.
querySelector
(
"
a
.
style
-
editor
-
newButton
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
newLink
{
}
newLink
.
ownerGlobal
)
;
await
onEditorAdded
;
ok
(
true
"
A
stylesheet
was
added
"
)
;
is
(
emptyPlaceHolderEl
.
ownerGlobal
.
getComputedStyle
(
emptyPlaceHolderEl
)
.
display
"
none
"
"
The
empty
placeholder
element
is
now
hidden
"
)
;
}
)
;
