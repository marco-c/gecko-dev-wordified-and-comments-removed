"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochitests
/
content
/
browser
/
devtools
/
client
/
netmonitor
/
test
/
shared
-
head
.
js
"
this
)
;
const
TEST_URL
=
TEST_BASE_HTTP
+
"
doc_uncached
.
html
"
;
add_task
(
function
*
(
)
{
yield
pushPref
(
"
network
.
http
.
rcwn
.
enabled
"
false
)
;
info
(
"
Opening
netmonitor
"
)
;
let
tab
=
yield
addTab
(
"
about
:
blank
"
)
;
let
target
=
TargetFactory
.
forTab
(
tab
)
;
let
toolbox
=
yield
gDevTools
.
showToolbox
(
target
"
netmonitor
"
)
;
let
monitor
=
toolbox
.
getPanel
(
"
netmonitor
"
)
;
let
{
store
windowRequire
}
=
monitor
.
panelWin
;
let
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
let
{
getSortedRequests
}
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
selectors
/
index
"
)
;
store
.
dispatch
(
Actions
.
batchEnable
(
false
)
)
;
info
(
"
Navigating
to
test
page
"
)
;
yield
navigateTo
(
TEST_URL
)
;
info
(
"
Opening
Style
Editor
"
)
;
let
styleeditor
=
yield
toolbox
.
selectTool
(
"
styleeditor
"
)
;
info
(
"
Waiting
for
the
source
to
be
loaded
.
"
)
;
yield
styleeditor
.
UI
.
editors
[
0
]
.
getSourceEditor
(
)
;
yield
waitForExistingRequests
(
monitor
)
;
info
(
"
Checking
Netmonitor
contents
.
"
)
;
let
items
=
[
]
;
for
(
let
item
of
getSortedRequests
(
store
.
getState
(
)
)
)
{
if
(
item
.
url
.
endsWith
(
"
doc_uncached
.
css
"
)
)
{
items
.
push
(
item
)
;
}
}
is
(
items
.
length
2
"
Got
two
requests
for
doc_uncached
.
css
after
Style
Editor
was
loaded
.
"
)
;
ok
(
items
[
1
]
.
fromCache
"
Second
request
was
loaded
from
browser
cache
"
)
;
}
)
;
