"
use
strict
"
;
const
TESTCASE_URI
=
TEST_BASE_HTTPS
+
"
simple
.
html
"
;
const
NEW_RULE
=
"
body
{
background
-
color
:
purple
;
}
"
;
add_task
(
async
function
(
)
{
let
{
ui
}
=
await
openStyleEditorForURL
(
TESTCASE_URI
)
;
is
(
ui
.
editors
.
length
2
"
correct
number
of
editors
"
)
;
let
editor
=
ui
.
editors
[
0
]
;
await
openEditor
(
editor
)
;
let
styleChanges
=
listenForStyleChange
(
editor
.
styleSheet
)
;
editor
.
sourceEditor
.
setText
(
NEW_RULE
)
;
editor
.
sourceEditor
.
setText
(
NEW_RULE
+
"
"
)
;
await
styleChanges
;
let
rules
=
await
ContentTask
.
spawn
(
gBrowser
.
selectedBrowser
0
async
function
(
index
)
{
let
sheet
=
content
.
document
.
styleSheets
[
index
]
;
return
[
.
.
.
sheet
.
cssRules
]
.
map
(
rule
=
>
rule
.
cssText
)
;
}
)
;
is
(
rules
.
length
1
"
only
one
rule
in
stylesheet
"
)
;
is
(
rules
[
0
]
NEW_RULE
"
stylesheet
only
contains
rule
we
added
"
)
;
}
)
;
function
openEditor
(
editor
)
{
let
link
=
editor
.
summary
.
querySelector
(
"
.
stylesheet
-
name
"
)
;
link
.
click
(
)
;
return
editor
.
getSourceEditor
(
)
;
}
function
listenForStyleChange
(
sheet
)
{
return
new
Promise
(
resolve
=
>
{
sheet
.
on
(
"
style
-
applied
"
resolve
)
;
}
)
;
}
