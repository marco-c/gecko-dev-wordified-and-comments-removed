"
use
strict
"
;
const
{
Task
}
=
require
(
"
devtools
/
shared
/
task
"
)
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
old
-
event
-
emitter
"
)
;
const
{
DomNodePreview
}
=
require
(
"
devtools
/
client
/
inspector
/
shared
/
dom
-
node
-
preview
"
)
;
var
nodeFronts
=
new
WeakMap
(
)
;
function
AnimationTargetNode
(
inspector
options
)
{
this
.
inspector
=
inspector
;
this
.
previewer
=
new
DomNodePreview
(
inspector
options
)
;
EventEmitter
.
decorate
(
this
)
;
}
exports
.
AnimationTargetNode
=
AnimationTargetNode
;
AnimationTargetNode
.
prototype
=
{
init
:
function
(
containerEl
)
{
this
.
previewer
.
init
(
containerEl
)
;
this
.
isDestroyed
=
false
;
}
destroy
:
function
(
)
{
this
.
previewer
.
destroy
(
)
;
this
.
inspector
=
null
;
this
.
isDestroyed
=
true
;
}
render
:
Task
.
async
(
function
*
(
playerFront
)
{
let
nodeFront
=
nodeFronts
.
get
(
playerFront
)
;
if
(
!
nodeFront
)
{
nodeFront
=
playerFront
.
animationTargetNodeFront
;
}
if
(
!
nodeFront
)
{
try
{
nodeFront
=
yield
this
.
inspector
.
walker
.
getNodeFromActor
(
playerFront
.
actorID
[
"
node
"
]
)
;
}
catch
(
e
)
{
if
(
!
this
.
isDestroyed
)
{
console
.
error
(
e
)
;
}
return
;
}
if
(
this
.
isDestroyed
)
{
return
;
}
}
nodeFronts
.
set
(
playerFront
nodeFront
)
;
this
.
previewer
.
render
(
nodeFront
)
;
this
.
emit
(
"
target
-
retrieved
"
)
;
}
)
}
;
