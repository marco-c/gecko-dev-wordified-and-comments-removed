"
use
strict
"
;
requestLongerTimeout
(
2
)
;
add_task
(
function
*
(
)
{
yield
addTab
(
URL_ROOT
+
"
doc_simple_animation
.
html
"
)
;
let
{
panel
}
=
yield
openAnimationInspector
(
)
;
let
label
=
panel
.
timelineCurrentTimeEl
;
ok
(
label
"
The
current
time
label
exists
"
)
;
info
(
"
Make
sure
the
time
displayed
actually
changes
"
)
;
yield
isCurrentTimeLabelChanging
(
panel
true
)
;
info
(
"
Pause
the
animations
and
check
that
the
time
stops
changing
"
)
;
yield
clickTimelinePlayPauseButton
(
panel
)
;
yield
isCurrentTimeLabelChanging
(
panel
false
)
;
info
(
"
Rewind
the
animations
and
check
that
the
time
stops
changing
"
)
;
yield
clickTimelineRewindButton
(
panel
)
;
yield
isCurrentTimeLabelChanging
(
panel
false
)
;
is
(
label
.
textContent
"
00
:
00
.
000
"
)
;
}
)
;
function
*
isCurrentTimeLabelChanging
(
panel
isChanging
)
{
let
label
=
panel
.
timelineCurrentTimeEl
;
let
time1
=
label
.
textContent
;
yield
new
Promise
(
r
=
>
setTimeout
(
r
200
)
)
;
let
time2
=
label
.
textContent
;
if
(
isChanging
)
{
ok
(
time1
!
=
=
time2
"
The
text
displayed
in
the
label
changes
with
time
"
)
;
}
else
{
is
(
time1
time2
"
The
text
displayed
in
the
label
doesn
'
t
change
"
)
;
}
}
