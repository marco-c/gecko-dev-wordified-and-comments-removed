"
use
strict
"
;
const
{
BrowserLoader
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
devtools
/
client
/
shared
/
browser
-
loader
.
js
"
{
}
)
;
const
{
require
}
=
BrowserLoader
(
{
baseURI
:
"
resource
:
/
/
devtools
/
client
/
aboutdebugging
-
new
/
"
window
}
)
;
const
Services
=
require
(
"
Services
"
)
;
const
{
createFactory
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
render
unmountComponentAtNode
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
"
)
;
const
App
=
createFactory
(
require
(
"
.
/
src
/
components
/
App
"
)
)
;
const
AboutDebugging
=
{
init
(
)
{
if
(
!
Services
.
prefs
.
getBoolPref
(
"
devtools
.
enabled
"
true
)
)
{
window
.
location
=
"
about
:
devtools
?
reason
=
AboutDebugging
"
;
return
;
}
render
(
App
(
)
this
.
mount
)
;
}
destroy
(
)
{
unmountComponentAtNode
(
this
.
mount
)
;
}
get
mount
(
)
{
return
document
.
getElementById
(
"
mount
"
)
;
}
}
;
window
.
addEventListener
(
"
DOMContentLoaded
"
(
)
=
>
{
AboutDebugging
.
init
(
)
;
}
{
once
:
true
}
)
;
window
.
addEventListener
(
"
unload
"
(
)
=
>
{
AboutDebugging
.
destroy
(
)
;
}
{
once
:
true
}
)
;
