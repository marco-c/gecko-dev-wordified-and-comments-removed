"
use
strict
"
;
const
{
PureComponent
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
dom
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
class
SidebarItem
extends
PureComponent
{
static
get
propTypes
(
)
{
return
{
children
:
PropTypes
.
node
.
isRequired
className
:
PropTypes
.
string
isSelected
:
PropTypes
.
bool
.
isRequired
selectable
:
PropTypes
.
bool
.
isRequired
onSelect
:
(
props
propName
componentName
)
=
>
{
const
isFn
=
props
[
propName
]
&
&
typeof
props
[
propName
]
=
=
=
"
function
"
;
if
(
props
.
selectable
&
&
!
isFn
)
{
return
new
Error
(
Missing
{
propName
}
function
supplied
to
{
componentName
}
.
+
"
(
you
must
set
this
prop
when
selectable
is
true
)
"
)
;
}
return
null
;
}
}
;
}
onItemClick
(
)
{
this
.
props
.
onSelect
(
)
;
}
render
(
)
{
const
{
children
className
isSelected
selectable
}
=
this
.
props
;
return
dom
.
li
(
{
className
:
"
sidebar
-
item
js
-
sidebar
-
item
"
+
(
className
?
{
className
}
:
"
"
)
+
(
isSelected
?
"
sidebar
-
item
-
-
selected
js
-
sidebar
-
item
-
selected
"
:
"
"
)
+
(
selectable
?
"
sidebar
-
item
-
-
selectable
"
:
"
"
)
onClick
:
selectable
?
(
)
=
>
this
.
onItemClick
(
)
:
null
}
children
)
;
}
}
module
.
exports
=
SidebarItem
;
