"
use
strict
"
;
const
{
DEBUG_TARGETS
REQUEST_EXTENSIONS_SUCCESS
}
=
require
(
"
.
.
/
constants
"
)
;
const
extensionComponentDataMiddleware
=
store
=
>
next
=
>
action
=
>
{
switch
(
action
.
type
)
{
case
REQUEST_EXTENSIONS_SUCCESS
:
{
action
.
installedExtensions
=
toComponentData
(
action
.
installedExtensions
)
;
action
.
temporaryExtensions
=
toComponentData
(
action
.
temporaryExtensions
)
;
break
;
}
}
return
next
(
action
)
;
}
;
function
getFilePath
(
extension
)
{
if
(
!
extension
.
temporarilyInstalled
|
|
!
extension
.
url
|
|
!
extension
.
url
.
startsWith
(
"
file
:
/
/
"
)
)
{
return
null
;
}
const
windowsRegex
=
/
^
file
:
\
/
\
/
\
/
(
[
a
-
zA
-
Z
]
:
\
/
.
*
)
/
;
if
(
windowsRegex
.
test
(
extension
.
url
)
)
{
return
windowsRegex
.
exec
(
extension
.
url
)
[
1
]
;
}
return
extension
.
url
.
slice
(
"
file
:
/
/
"
.
length
)
;
}
function
toComponentData
(
extensions
)
{
return
extensions
.
map
(
extension
=
>
{
const
type
=
DEBUG_TARGETS
.
EXTENSION
;
const
{
actor
iconURL
id
manifestURL
name
}
=
extension
;
const
icon
=
iconURL
|
|
"
chrome
:
/
/
mozapps
/
skin
/
extensions
/
extensionGeneric
.
svg
"
;
const
location
=
getFilePath
(
extension
)
;
const
uuid
=
manifestURL
?
/
moz
-
extension
:
\
/
\
/
(
[
^
/
]
*
)
/
.
exec
(
manifestURL
)
[
1
]
:
null
;
return
{
name
icon
id
type
details
:
{
actor
location
manifestURL
uuid
}
}
;
}
)
;
}
module
.
exports
=
extensionComponentDataMiddleware
;
