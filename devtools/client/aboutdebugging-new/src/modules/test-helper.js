"
use
strict
"
;
const
flags
=
require
(
"
devtools
/
shared
/
flags
"
)
;
const
{
Cu
}
=
require
(
"
chrome
"
)
;
const
{
loader
}
=
Cu
.
import
(
"
resource
:
/
/
devtools
/
shared
/
Loader
.
jsm
"
{
}
)
;
const
ROOT_PATH
=
"
resource
:
/
/
devtools
/
client
/
aboutdebugging
-
new
/
src
/
"
;
function
enableMocks
(
moduleToMock
modulePath
)
{
if
(
flags
.
testing
)
{
const
path
=
ROOT_PATH
+
modulePath
+
"
.
js
"
;
if
(
loader
.
mocks
&
&
loader
.
mocks
[
path
]
)
{
moduleToMock
.
exports
=
loader
.
mocks
[
path
]
;
}
}
}
exports
.
enableMocks
=
enableMocks
;
function
setMockedModule
(
mock
modulePath
)
{
loader
.
mocks
=
loader
.
mocks
|
|
{
}
;
const
mockedModule
=
{
}
;
Object
.
keys
(
mock
)
.
forEach
(
key
=
>
{
if
(
typeof
mock
[
key
]
=
=
=
"
function
"
)
{
mockedModule
[
key
]
=
function
(
)
{
return
mock
[
key
]
.
apply
(
mock
arguments
)
;
}
;
}
else
{
mockedModule
[
key
]
=
mock
[
key
]
;
}
}
)
;
const
path
=
ROOT_PATH
+
modulePath
+
"
.
js
"
;
loader
.
mocks
[
path
]
=
mockedModule
;
}
exports
.
setMockedModule
=
setMockedModule
;
function
removeMockedModule
(
modulePath
)
{
const
path
=
ROOT_PATH
+
modulePath
+
"
.
js
"
;
if
(
loader
.
mocks
&
&
loader
.
mocks
[
path
]
)
{
delete
loader
.
mocks
[
path
]
;
}
}
exports
.
removeMockedModule
=
removeMockedModule
;
