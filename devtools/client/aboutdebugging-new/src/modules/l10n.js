"
use
strict
"
;
const
Services
=
require
(
"
Services
"
)
;
const
FluentReact
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
fluent
-
react
"
)
;
const
{
L10nRegistry
FileSource
}
=
require
(
"
resource
:
/
/
gre
/
modules
/
L10nRegistry
.
jsm
"
)
;
class
L10n
{
async
init
(
)
{
if
(
!
L10nRegistry
.
sources
.
has
(
"
aboutdebugging
"
)
)
{
const
temporarySource
=
new
FileSource
(
"
aboutdebugging
"
[
"
en
-
US
"
]
"
chrome
:
/
/
devtools
/
content
/
aboutdebugging
-
new
/
tmp
-
locale
/
{
locale
}
/
"
)
;
L10nRegistry
.
registerSource
(
temporarySource
)
;
}
const
locales
=
Services
.
locale
.
appLocalesAsBCP47
;
const
generator
=
L10nRegistry
.
generateBundles
(
locales
[
"
aboutdebugging
.
ftl
"
]
)
;
this
.
_bundles
=
[
]
;
for
await
(
const
bundle
of
generator
)
{
this
.
_bundles
.
push
(
bundle
)
;
}
this
.
_reactLocalization
=
new
FluentReact
.
ReactLocalization
(
this
.
_bundles
)
;
}
getBundles
(
)
{
return
this
.
_bundles
;
}
getString
(
id
args
fallback
)
{
return
this
.
_reactLocalization
.
getString
.
apply
(
this
.
_reactLocalization
arguments
)
;
}
destroy
(
)
{
L10nRegistry
.
removeSource
(
"
aboutdebugging
"
)
;
}
}
exports
.
l10n
=
new
L10n
(
)
;
