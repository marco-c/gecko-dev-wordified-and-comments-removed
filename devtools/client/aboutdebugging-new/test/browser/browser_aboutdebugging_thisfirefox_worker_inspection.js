"
use
strict
"
;
const
{
gDevToolsBrowser
}
=
require
(
"
devtools
/
client
/
framework
/
devtools
-
browser
"
)
;
add_task
(
async
function
(
)
{
const
thisFirefoxClient
=
createThisFirefoxClientMock
(
)
;
const
testWorkerTargetFront
=
{
actorID
:
"
test
-
worker
-
id
"
}
;
const
testWorker
=
{
name
:
"
Test
Worker
"
workerTargetFront
:
testWorkerTargetFront
}
;
thisFirefoxClient
.
listWorkers
=
(
)
=
>
(
{
otherWorkers
:
[
testWorker
]
serviceWorkers
:
[
]
sharedWorkers
:
[
]
}
)
;
thisFirefoxClient
.
client
.
getActor
=
id
=
>
{
return
id
=
=
=
testWorkerTargetFront
.
actorID
?
testWorkerTargetFront
:
null
;
}
;
const
runtimeClientFactoryMock
=
createRuntimeClientFactoryMock
(
)
;
runtimeClientFactoryMock
.
createClientForRuntime
=
runtime
=
>
{
const
{
RUNTIMES
}
=
require
(
"
devtools
/
client
/
aboutdebugging
-
new
/
src
/
constants
"
)
;
if
(
runtime
.
id
=
=
=
RUNTIMES
.
THIS_FIREFOX
)
{
return
thisFirefoxClient
;
}
throw
new
Error
(
"
Unexpected
runtime
id
"
+
runtime
.
id
)
;
}
;
info
(
"
Enable
mocks
"
)
;
enableRuntimeClientFactoryMock
(
runtimeClientFactoryMock
)
;
const
originalOpenWorkerForToolbox
=
gDevToolsBrowser
.
openWorkerToolbox
;
registerCleanupFunction
(
(
)
=
>
{
disableRuntimeClientFactoryMock
(
)
;
gDevToolsBrowser
.
openWorkerToolbox
=
originalOpenWorkerForToolbox
;
}
)
;
const
{
document
tab
window
}
=
await
openAboutDebugging
(
)
;
await
selectThisFirefoxPage
(
document
window
.
AboutDebugging
.
store
)
;
const
workerTarget
=
findDebugTargetByText
(
testWorker
.
name
document
)
;
ok
(
workerTarget
"
Worker
target
appeared
for
the
test
worker
"
)
;
const
inspectButton
=
workerTarget
.
querySelector
(
"
.
js
-
debug
-
target
-
inspect
-
button
"
)
;
ok
(
inspectButton
"
Inspect
button
for
the
worker
appeared
"
)
;
info
(
"
Check
whether
the
correct
actor
front
will
be
opened
in
worker
toolbox
"
)
;
const
waitForWorkerInspection
=
new
Promise
(
resolve
=
>
{
gDevToolsBrowser
.
openWorkerToolbox
=
front
=
>
{
if
(
front
=
=
=
testWorkerTargetFront
)
{
resolve
(
)
;
}
}
;
}
)
;
inspectButton
.
click
(
)
;
await
waitForWorkerInspection
;
ok
(
true
"
Correct
actor
front
will
be
opened
in
worker
toolbox
"
)
;
await
removeTab
(
tab
)
;
}
)
;
