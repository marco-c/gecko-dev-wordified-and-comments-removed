"
use
strict
"
;
async
function
enableServiceWorkerDebugging
(
)
{
await
pushPref
(
"
dom
.
serviceWorkers
.
enabled
"
true
)
;
await
pushPref
(
"
dom
.
serviceWorkers
.
testing
.
enabled
"
true
)
;
await
pushPref
(
"
dom
.
ipc
.
processCount
"
1
)
;
Services
.
ppmm
.
releaseCachedProcesses
(
)
;
}
function
onTabMessage
(
tab
message
)
{
const
mm
=
tab
.
linkedBrowser
.
messageManager
;
return
new
Promise
(
resolve
=
>
{
mm
.
addMessageListener
(
message
function
listener
(
)
{
mm
.
removeMessageListener
(
message
listener
)
;
resolve
(
)
;
}
)
;
}
)
;
}
function
forwardServiceWorkerMessage
(
tab
)
{
info
(
"
Make
the
test
page
notify
us
when
the
service
worker
sends
a
message
.
"
)
;
return
ContentTask
.
spawn
(
tab
.
linkedBrowser
{
}
function
(
)
{
const
win
=
content
.
wrappedJSObject
;
win
.
navigator
.
serviceWorker
.
addEventListener
(
"
message
"
function
(
event
)
{
sendAsyncMessage
(
event
.
data
)
;
}
)
;
}
)
;
}
async
function
unregisterServiceWorker
(
tab
reference
)
{
await
ContentTask
.
spawn
(
tab
.
linkedBrowser
reference
async
function
(
_reference
)
{
const
registration
=
await
content
.
wrappedJSObject
[
_reference
]
;
await
registration
.
unregister
(
)
;
}
)
;
}
