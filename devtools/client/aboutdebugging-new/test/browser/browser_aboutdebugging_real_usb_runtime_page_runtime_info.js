"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
CHROME_URL_ROOT
+
"
helper
-
real
-
usb
.
js
"
this
)
;
add_task
(
async
function
(
)
{
if
(
!
isAvailable
(
)
)
{
ok
(
true
"
Real
usb
runtime
test
is
not
available
"
)
;
return
;
}
const
{
document
tab
}
=
await
openAboutDebuggingWithADB
(
)
;
const
expectedRuntime
=
await
getExpectedRuntime
(
)
;
const
{
runtimeDetails
sidebarInfo
}
=
expectedRuntime
;
info
(
"
Connect
a
USB
runtime
"
)
;
await
Promise
.
race
(
[
connectToRuntime
(
sidebarInfo
.
deviceName
document
)
new
Promise
(
resolve
=
>
setTimeout
(
(
)
=
>
{
ok
(
false
"
Failed
to
connect
did
you
disable
the
connection
prompt
for
this
runtime
?
"
)
;
resolve
(
)
;
}
5000
)
)
]
)
;
info
(
"
Select
a
USB
runtime
"
)
;
await
selectRuntime
(
sidebarInfo
.
deviceName
runtimeDetails
.
info
.
name
document
)
;
info
(
"
Check
that
runtime
info
is
properly
displayed
"
)
;
const
runtimeInfo
=
document
.
querySelector
(
"
.
js
-
runtime
-
name
"
)
;
ok
(
runtimeInfo
"
Runtime
info
is
displayed
"
)
;
const
runtimeInfoText
=
runtimeInfo
.
textContent
;
ok
(
runtimeInfoText
.
includes
(
runtimeDetails
.
info
.
name
)
"
Runtime
info
shows
the
correct
runtime
name
:
"
+
runtimeInfoText
)
;
ok
(
runtimeInfoText
.
includes
(
runtimeDetails
.
info
.
version
)
"
Runtime
info
shows
the
correct
version
number
:
"
+
runtimeInfoText
)
;
await
removeTab
(
tab
)
;
}
)
;
