"
use
strict
"
;
const
{
adbAddon
}
=
require
(
"
devtools
/
shared
/
adb
/
adb
-
addon
"
)
;
const
{
ADB
}
=
require
(
"
devtools
/
shared
/
adb
/
adb
"
)
;
add_task
(
async
function
(
)
{
registerCleanupFunction
(
async
function
(
)
{
try
{
await
adbAddon
.
uninstall
(
)
;
}
catch
(
e
)
{
}
}
)
;
await
pushPref
(
"
devtools
.
remote
.
adb
.
extensionURL
"
CHROME_URL_ROOT
+
"
resources
/
test
-
adb
-
extension
/
adb
-
extension
-
#
OS
#
.
xpi
"
)
;
const
{
document
tab
}
=
await
openAboutDebugging
(
)
;
const
usbStatusElement
=
document
.
querySelector
(
"
.
js
-
sidebar
-
usb
-
status
"
)
;
ok
(
usbStatusElement
"
Sidebar
shows
the
USB
status
element
"
)
;
ok
(
usbStatusElement
.
textContent
.
includes
(
"
USB
devices
disabled
"
)
"
USB
status
element
has
the
expected
content
"
)
;
info
(
"
Install
the
adb
extension
and
wait
for
the
message
to
udpate
"
)
;
adbAddon
.
install
(
)
;
await
waitUntil
(
(
)
=
>
usbStatusElement
.
textContent
.
includes
(
"
USB
devices
enabled
"
)
)
;
info
(
"
Wait
until
ADB
has
started
.
"
)
;
await
waitUntil
(
(
)
=
>
ADB
.
ready
)
;
info
(
"
Uninstall
the
adb
extension
and
wait
for
the
message
to
udpate
"
)
;
adbAddon
.
uninstall
(
)
;
await
waitUntil
(
(
)
=
>
usbStatusElement
.
textContent
.
includes
(
"
USB
devices
disabled
"
)
)
;
await
removeTab
(
tab
)
;
}
)
;
