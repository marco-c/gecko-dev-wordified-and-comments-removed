"
use
strict
"
;
async
function
checkAdbNotRunning
(
)
{
info
(
"
Check
if
ADB
is
already
running
before
the
test
starts
"
)
;
const
{
check
}
=
require
(
"
devtools
/
shared
/
adb
/
adb
-
running
-
checker
"
)
;
const
isAdbAlreadyRunning
=
await
check
(
)
;
if
(
isAdbAlreadyRunning
)
{
throw
new
Error
(
"
The
ADB
process
is
already
running
on
this
machine
it
should
be
"
+
"
stopped
before
running
this
test
"
)
;
}
}
async
function
waitForAdbStart
(
)
{
info
(
"
Wait
for
ADB
to
start
"
)
;
const
{
adbProcess
}
=
require
(
"
devtools
/
shared
/
adb
/
adb
-
process
"
)
;
const
{
check
}
=
require
(
"
devtools
/
shared
/
adb
/
adb
-
running
-
checker
"
)
;
return
asyncWaitUntil
(
async
(
)
=
>
{
const
isProcessReady
=
adbProcess
.
ready
;
const
isRunning
=
await
check
(
)
;
return
isProcessReady
&
&
isRunning
;
}
)
;
}
async
function
waitForAdbStop
(
)
{
info
(
"
Wait
for
ADB
to
stop
"
)
;
const
{
adbProcess
}
=
require
(
"
devtools
/
shared
/
adb
/
adb
-
process
"
)
;
const
{
check
}
=
require
(
"
devtools
/
shared
/
adb
/
adb
-
running
-
checker
"
)
;
return
asyncWaitUntil
(
async
(
)
=
>
{
const
isProcessReady
=
adbProcess
.
ready
;
const
isRunning
=
await
check
(
)
;
return
!
isProcessReady
&
&
!
isRunning
;
}
)
;
}
