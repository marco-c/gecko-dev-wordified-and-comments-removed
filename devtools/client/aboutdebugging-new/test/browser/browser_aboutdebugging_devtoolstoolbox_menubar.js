"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
CHROME_URL_ROOT
+
"
helper
-
collapsibilities
.
js
"
this
)
;
add_task
(
async
function
(
)
{
info
(
"
Force
all
debug
target
panes
to
be
expanded
"
)
;
prepareCollapsibilitiesTest
(
)
;
const
{
document
tab
window
}
=
await
openAboutDebugging
(
)
;
const
{
devtoolsTab
}
=
await
openAboutDevtoolsToolbox
(
document
tab
window
)
;
info
(
"
Check
whether
the
menu
items
are
disabled
"
)
;
const
rootDocument
=
devtoolsTab
.
ownerDocument
;
await
assertMenusItems
(
rootDocument
false
)
;
info
(
"
Force
to
select
about
:
debugging
page
"
)
;
gBrowser
.
selectedTab
=
tab
;
info
(
"
Check
whether
the
menu
items
are
enabled
"
)
;
await
assertMenusItems
(
rootDocument
true
)
;
await
closeAboutDevtoolsToolbox
(
devtoolsTab
window
)
;
await
removeTab
(
tab
)
;
}
)
;
async
function
assertMenusItems
(
rootDocument
shouldBeEnabled
)
{
const
menuItem
=
rootDocument
.
getElementById
(
"
menu_devToolbox
"
)
;
await
waitUntil
(
(
)
=
>
menuItem
.
hidden
=
=
=
!
shouldBeEnabled
)
;
assertMenuItem
(
rootDocument
"
menu_devToolbox
"
shouldBeEnabled
)
;
for
(
const
toolDefinition
of
gDevTools
.
getToolDefinitionArray
(
)
)
{
if
(
!
toolDefinition
.
inMenu
)
{
continue
;
}
assertMenuItem
(
rootDocument
"
menuitem_
"
+
toolDefinition
.
id
shouldBeEnabled
)
;
}
}
function
assertMenuItem
(
rootDocument
menuItemId
shouldBeEnabled
)
{
const
menuItem
=
rootDocument
.
getElementById
(
menuItemId
)
;
is
(
menuItem
.
hidden
!
shouldBeEnabled
"
hidden
"
attribute
of
menu
item
(
{
menuItemId
}
)
should
be
correct
)
;
}
