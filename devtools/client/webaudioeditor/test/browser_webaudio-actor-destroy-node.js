add_task
(
async
function
(
)
{
let
{
target
front
}
=
await
initBackend
(
DESTROY_NODES_URL
)
;
let
[
created
]
=
await
Promise
.
all
(
[
front
.
setup
(
{
reload
:
true
}
)
once
(
front
"
start
-
context
"
)
getN
(
front
"
create
-
node
"
13
)
]
)
;
let
waitUntilDestroyed
=
getN
(
front
"
destroy
-
node
"
10
)
;
forceNodeCollection
(
)
;
let
destroyed
=
await
waitUntilDestroyed
;
destroyed
.
forEach
(
(
node
i
)
=
>
{
ok
(
node
.
type
"
AudioBufferSourceNode
"
"
Only
buffer
nodes
are
destroyed
"
)
;
ok
(
actorIsInList
(
created
destroyed
[
i
]
)
"
destroy
-
node
called
only
on
AudioNodes
in
current
document
.
"
)
;
}
)
;
await
removeTab
(
target
.
tab
)
;
}
)
;
function
actorIsInList
(
list
actor
)
{
for
(
let
i
=
0
;
i
<
list
.
length
;
i
+
+
)
{
if
(
list
[
i
]
.
actorID
=
=
=
actor
.
actorID
)
return
list
[
i
]
;
}
return
null
;
}
