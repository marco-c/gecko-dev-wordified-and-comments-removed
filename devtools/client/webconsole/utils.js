"
use
strict
"
;
const
CONSOLE_ENTRY_THRESHOLD
=
5
;
var
WebConsoleUtils
=
{
CONSOLE_ENTRY_THRESHOLD
supportsString
(
string
)
{
const
str
=
Cc
[
"
mozilla
.
org
/
supports
-
string
;
1
"
]
.
createInstance
(
Ci
.
nsISupportsString
)
;
str
.
data
=
string
;
return
str
;
}
_usageCount
:
0
get
usageCount
(
)
{
if
(
WebConsoleUtils
.
_usageCount
<
CONSOLE_ENTRY_THRESHOLD
)
{
WebConsoleUtils
.
_usageCount
=
Services
.
prefs
.
getIntPref
(
"
devtools
.
selfxss
.
count
"
)
;
if
(
Services
.
prefs
.
getBoolPref
(
"
devtools
.
chrome
.
enabled
"
)
)
{
WebConsoleUtils
.
usageCount
=
CONSOLE_ENTRY_THRESHOLD
;
}
}
return
WebConsoleUtils
.
_usageCount
;
}
set
usageCount
(
newUC
)
{
if
(
newUC
<
=
CONSOLE_ENTRY_THRESHOLD
)
{
WebConsoleUtils
.
_usageCount
=
newUC
;
Services
.
prefs
.
setIntPref
(
"
devtools
.
selfxss
.
count
"
newUC
)
;
}
}
}
;
exports
.
Utils
=
WebConsoleUtils
;
