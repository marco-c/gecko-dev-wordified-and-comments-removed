"
use
strict
"
;
const
{
getAllFilters
}
=
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
selectors
/
filters
"
)
;
const
{
getLogLimit
}
=
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
selectors
/
prefs
"
)
;
const
{
MESSAGE_TYPE
}
=
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
constants
"
)
;
function
getAllMessages
(
state
)
{
let
messages
=
state
.
messages
;
let
logLimit
=
getLogLimit
(
state
)
;
let
filters
=
getAllFilters
(
state
)
;
return
prune
(
search
(
filterSeverity
(
messages
filters
)
filters
.
text
)
logLimit
)
;
}
function
filterSeverity
(
messages
filters
)
{
return
messages
.
filter
(
(
message
)
=
>
{
return
filters
[
message
.
level
]
=
=
=
true
|
|
[
MESSAGE_TYPE
.
COMMAND
MESSAGE_TYPE
.
RESULT
]
.
includes
(
message
.
type
)
;
}
)
;
}
function
search
(
messages
text
=
"
"
)
{
if
(
text
=
=
=
"
"
)
{
return
messages
;
}
return
messages
.
filter
(
function
(
message
)
{
if
(
!
Array
.
isArray
(
message
.
parameters
)
)
{
return
true
;
}
return
message
.
parameters
.
join
(
"
"
)
.
toLocaleLowerCase
(
)
.
includes
(
text
.
toLocaleLowerCase
(
)
)
;
}
)
;
}
function
prune
(
messages
logLimit
)
{
let
messageCount
=
messages
.
count
(
)
;
if
(
messageCount
>
logLimit
)
{
return
messages
.
splice
(
0
messageCount
-
logLimit
)
;
}
return
messages
;
}
exports
.
getAllMessages
=
getAllMessages
;
