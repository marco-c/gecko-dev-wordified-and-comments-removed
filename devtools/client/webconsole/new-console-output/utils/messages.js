"
use
strict
"
;
const
{
CATEGORY_CLASS_FRAGMENTS
CATEGORY_WEBDEV
CATEGORY_OUTPUT
LEVELS
SEVERITY_CLASS_FRAGMENTS
SEVERITY_LOG
}
=
require
(
"
.
.
/
constants
"
)
;
const
WebConsoleUtils
=
require
(
"
devtools
/
shared
/
webconsole
/
utils
"
)
.
Utils
;
function
prepareMessage
(
packet
)
{
let
allowRepeating
;
let
category
;
let
data
;
let
messageType
;
let
repeat
;
let
repeatId
;
let
severity
;
switch
(
packet
.
type
)
{
case
"
consoleAPICall
"
:
data
=
Object
.
assign
(
{
}
packet
.
message
)
;
allowRepeating
=
true
;
category
=
CATEGORY_CLASS_FRAGMENTS
[
CATEGORY_WEBDEV
]
;
messageType
=
"
ConsoleApiCall
"
;
repeat
=
1
;
repeatId
=
getRepeatId
(
data
)
;
severity
=
SEVERITY_CLASS_FRAGMENTS
[
LEVELS
[
data
.
level
]
]
;
break
;
case
"
evaluationResult
"
:
default
:
data
=
Object
.
assign
(
{
}
packet
.
result
)
;
allowRepeating
=
true
;
category
=
CATEGORY_CLASS_FRAGMENTS
[
CATEGORY_OUTPUT
]
;
messageType
=
"
EvaluationResult
"
;
repeat
=
1
;
repeatId
=
getRepeatId
(
data
)
;
severity
=
SEVERITY_CLASS_FRAGMENTS
[
SEVERITY_LOG
]
;
break
;
}
return
{
allowRepeating
category
data
messageType
repeat
repeatId
severity
}
;
}
function
getRepeatId
(
message
)
{
let
clonedMessage
=
JSON
.
parse
(
JSON
.
stringify
(
message
)
)
;
delete
clonedMessage
.
timeStamp
;
delete
clonedMessage
.
uniqueID
;
return
JSON
.
stringify
(
clonedMessage
)
;
}
exports
.
prepareMessage
=
prepareMessage
;
exports
.
getRepeatId
=
getRepeatId
;
