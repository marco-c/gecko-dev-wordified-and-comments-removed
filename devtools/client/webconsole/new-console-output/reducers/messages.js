"
use
strict
"
;
const
Immutable
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
immutable
"
)
;
const
constants
=
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
constants
"
)
;
function
messages
(
state
=
Immutable
.
List
(
)
action
)
{
switch
(
action
.
type
)
{
case
constants
.
MESSAGE_ADD
:
let
newMessage
=
action
.
message
;
if
(
newMessage
.
data
.
level
=
=
=
"
clear
"
)
{
return
Immutable
.
List
(
[
newMessage
]
)
;
}
if
(
newMessage
.
allowRepeating
&
&
state
.
size
>
0
)
{
let
lastMessage
=
state
.
last
(
)
;
if
(
lastMessage
.
repeatId
=
=
=
newMessage
.
repeatId
)
{
newMessage
.
repeat
=
lastMessage
.
repeat
+
1
;
return
state
.
pop
(
)
.
push
(
newMessage
)
;
}
}
return
state
.
push
(
newMessage
)
;
case
constants
.
MESSAGES_CLEAR
:
return
Immutable
.
List
(
)
;
}
return
state
;
}
exports
.
messages
=
messages
;
