"
use
strict
"
;
const
React
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
ReactDOM
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
"
)
;
const
{
Provider
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
redux
"
)
;
const
{
MESSAGE_ADD
MESSAGES_CLEAR
}
=
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
constants
"
)
;
const
actions
=
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
actions
/
messages
"
)
;
const
{
store
}
=
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
store
"
)
;
const
ConsoleOutput
=
React
.
createFactory
(
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
components
/
console
-
output
"
)
)
;
function
OutputWrapperThingy
(
parentNode
)
{
let
childComponent
=
ConsoleOutput
(
{
}
)
;
let
provider
=
React
.
createElement
(
Provider
{
store
:
store
}
childComponent
)
;
this
.
body
=
ReactDOM
.
render
(
provider
parentNode
)
;
}
OutputWrapperThingy
.
prototype
=
{
dispatchMessageAdd
:
(
message
)
=
>
{
store
.
dispatch
(
actions
.
messageAdd
(
message
)
)
;
}
dispatchMessagesClear
:
(
)
=
>
{
store
.
dispatch
(
actions
.
messagesClear
(
)
)
;
}
}
;
module
.
exports
=
OutputWrapperThingy
;
