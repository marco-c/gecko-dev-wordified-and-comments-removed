"
use
strict
"
;
requestLongerTimeout
(
2
)
;
const
TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
webconsole
/
"
+
"
new
-
console
-
output
/
test
/
mochitest
/
test
-
location
-
debugger
-
link
.
html
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
debugger
.
new
-
debugger
-
frontend
"
true
)
;
await
pushPref
(
"
devtools
.
webconsole
.
filter
.
error
"
true
)
;
await
pushPref
(
"
devtools
.
webconsole
.
filter
.
log
"
true
)
;
if
(
!
Services
.
appinfo
.
browserTabsRemoteAutostart
)
{
expectUncaughtException
(
)
;
}
let
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
let
target
=
TargetFactory
.
forTab
(
gBrowser
.
selectedTab
)
;
let
toolbox
=
gDevTools
.
getToolbox
(
target
)
;
await
testOpenInDebugger
(
hud
toolbox
"
document
.
bar
"
)
;
info
(
"
Selecting
the
console
again
"
)
;
await
toolbox
.
selectTool
(
"
webconsole
"
)
;
await
testOpenInDebugger
(
hud
toolbox
"
Blah
Blah
"
)
;
info
(
"
Selecting
the
console
again
"
)
;
await
toolbox
.
selectTool
(
"
webconsole
"
)
;
await
testOpenInDebugger
(
hud
toolbox
"
document
.
bar
"
)
;
}
)
;
