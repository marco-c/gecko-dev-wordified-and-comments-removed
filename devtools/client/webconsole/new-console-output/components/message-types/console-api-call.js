"
use
strict
"
;
const
{
createFactory
DOM
:
dom
PropTypes
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
MessageRepeat
=
createFactory
(
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
components
/
message
-
repeat
"
)
.
MessageRepeat
)
;
const
MessageIcon
=
createFactory
(
require
(
"
devtools
/
client
/
webconsole
/
new
-
console
-
output
/
components
/
message
-
icon
"
)
.
MessageIcon
)
;
ConsoleApiCall
.
displayName
=
"
ConsoleApiCall
"
;
ConsoleApiCall
.
propTypes
=
{
message
:
PropTypes
.
object
.
isRequired
}
;
function
ConsoleApiCall
(
props
)
{
const
{
message
}
=
props
;
const
messageBody
=
dom
.
span
(
{
className
:
"
message
-
body
devtools
-
monospace
"
}
formatTextContent
(
message
.
data
.
arguments
)
)
;
const
icon
=
MessageIcon
(
{
severity
:
message
.
severity
}
)
;
const
repeat
=
MessageRepeat
(
{
repeat
:
message
.
repeat
}
)
;
const
children
=
[
messageBody
repeat
]
;
return
dom
.
div
(
{
class
:
"
message
cm
-
s
-
mozilla
"
is
:
"
fdt
-
message
"
category
:
message
.
category
severity
:
message
.
severity
}
icon
dom
.
span
(
{
className
:
"
message
-
body
-
wrapper
"
}
dom
.
span
(
{
}
dom
.
span
(
{
className
:
"
message
-
flex
-
body
"
}
children
)
)
)
)
;
}
function
formatTextContent
(
args
)
{
return
args
.
map
(
function
(
arg
i
arr
)
{
const
str
=
dom
.
span
(
{
className
:
"
console
-
string
"
}
arg
)
;
if
(
i
<
arr
.
length
-
1
)
{
return
[
str
"
"
]
;
}
return
str
;
}
)
;
}
module
.
exports
.
ConsoleApiCall
=
ConsoleApiCall
;
