"
use
strict
"
;
const
TEST_URI
=
"
data
:
text
/
html
;
charset
=
utf
-
8
Web
Console
test
for
bug
817834
"
;
add_task
(
async
function
(
)
{
await
loadTab
(
TEST_URI
)
;
let
hud
=
await
openConsole
(
)
;
await
testEditedInputHistory
(
hud
)
;
}
)
;
async
function
testEditedInputHistory
(
HUD
)
{
let
jsterm
=
HUD
.
jsterm
;
let
inputNode
=
jsterm
.
inputNode
;
ok
(
!
jsterm
.
getInputValue
(
)
"
jsterm
.
getInputValue
(
)
is
empty
"
)
;
is
(
inputNode
.
selectionStart
0
)
;
is
(
inputNode
.
selectionEnd
0
)
;
jsterm
.
setInputValue
(
'
"
first
item
"
'
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowUp
"
)
;
is
(
jsterm
.
getInputValue
(
)
'
"
first
item
"
'
"
null
test
history
up
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowDown
"
)
;
is
(
jsterm
.
getInputValue
(
)
'
"
first
item
"
'
"
null
test
history
down
"
)
;
await
jsterm
.
execute
(
)
;
is
(
jsterm
.
getInputValue
(
)
"
"
"
cleared
input
line
after
submit
"
)
;
jsterm
.
setInputValue
(
'
"
editing
input
1
"
'
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowUp
"
)
;
is
(
jsterm
.
getInputValue
(
)
'
"
first
item
"
'
"
test
history
up
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowDown
"
)
;
is
(
jsterm
.
getInputValue
(
)
'
"
editing
input
1
"
'
"
test
history
down
restores
in
-
progress
input
"
)
;
jsterm
.
setInputValue
(
'
"
second
item
"
'
)
;
await
jsterm
.
execute
(
)
;
jsterm
.
setInputValue
(
'
"
editing
input
2
"
'
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowUp
"
)
;
is
(
jsterm
.
getInputValue
(
)
'
"
second
item
"
'
"
test
history
up
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowUp
"
)
;
is
(
jsterm
.
getInputValue
(
)
'
"
first
item
"
'
"
test
history
up
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowDown
"
)
;
is
(
jsterm
.
getInputValue
(
)
'
"
second
item
"
'
"
test
history
down
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowDown
"
)
;
is
(
jsterm
.
getInputValue
(
)
'
"
editing
input
2
"
'
"
test
history
down
restores
new
in
-
progress
input
again
"
)
;
}
