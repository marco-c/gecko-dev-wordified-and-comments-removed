"
use
strict
"
;
add_task
(
function
*
(
)
{
const
TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
webconsole
/
old
/
test
/
test
-
console
-
server
-
logging
.
sjs
"
;
yield
loadTab
(
TEST_URI
)
;
let
hud
=
yield
openConsole
(
)
;
hud
.
setFilterState
(
"
serverlog
"
true
)
;
yield
updateServerLoggingListener
(
hud
)
;
BrowserReloadSkipCache
(
)
;
let
text
=
"
values
:
string
Object
{
a
:
10
}
123
1
.
12
\
u2713
"
;
yield
waitForMessages
(
{
webconsole
:
hud
messages
:
[
{
text
:
text
category
:
CATEGORY_SERVER
severity
:
SEVERITY_LOG
}
]
}
)
;
hud
.
setFilterState
(
"
serverlog
"
false
)
;
yield
updateServerLoggingListener
(
hud
)
;
}
)
;
add_task
(
function
*
(
)
{
const
TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
webconsole
/
old
/
test
/
test
-
console
-
server
-
logging
-
array
.
sjs
"
;
yield
loadTab
(
TEST_URI
)
;
let
hud
=
yield
openConsole
(
)
;
hud
.
setFilterState
(
"
serverlog
"
true
)
;
yield
updateServerLoggingListener
(
hud
)
;
BrowserReloadSkipCache
(
)
;
let
text
=
"
Object
{
best
:
\
"
Firefox
\
"
reckless
:
\
"
Chrome
\
"
"
+
"
new_ie
:
\
"
Safari
\
"
new_new_ie
:
\
"
Edge
\
"
}
"
;
yield
waitForMessages
(
{
webconsole
:
hud
messages
:
[
{
text
:
text
category
:
CATEGORY_SERVER
severity
:
SEVERITY_LOG
}
]
}
)
;
hud
.
setFilterState
(
"
serverlog
"
false
)
;
yield
updateServerLoggingListener
(
hud
)
;
}
)
;
add_task
(
function
*
(
)
{
const
TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
webconsole
/
old
/
test
/
test
-
console
-
server
-
logging
-
backtrace
.
sjs
"
;
yield
loadTab
(
TEST_URI
)
;
let
hud
=
yield
openConsole
(
)
;
hud
.
setFilterState
(
"
serverlog
"
true
)
;
yield
updateServerLoggingListener
(
hud
)
;
BrowserReloadSkipCache
(
)
;
yield
waitForMessages
(
{
webconsole
:
hud
messages
:
[
{
text
:
"
correct
1
"
category
:
CATEGORY_SERVER
severity
:
SEVERITY_ERROR
source
:
{
url
:
"
/
some
/
path
/
to
/
file
.
py
"
line
:
33
}
}
{
text
:
"
correct
2
"
category
:
CATEGORY_SERVER
severity
:
SEVERITY_ERROR
source
:
{
url
:
"
/
some
/
path
/
to
/
file
.
py
"
line
:
33
}
}
{
text
:
"
wrong
1
"
category
:
CATEGORY_SERVER
severity
:
SEVERITY_ERROR
source
:
{
url
:
"
/
some
/
path
/
to
/
file
.
py
:
33wrong
"
}
}
{
text
:
"
wrong
2
"
category
:
CATEGORY_SERVER
severity
:
SEVERITY_ERROR
source
:
{
url
:
"
/
some
/
path
/
to
/
file
.
py
"
}
}
]
}
)
;
hud
.
setFilterState
(
"
serverlog
"
false
)
;
yield
updateServerLoggingListener
(
hud
)
;
}
)
;
function
updateServerLoggingListener
(
hud
)
{
let
deferred
=
defer
(
)
;
hud
.
ui
.
_updateServerLoggingListener
(
response
=
>
{
deferred
.
resolve
(
response
)
;
}
)
;
return
deferred
.
promise
;
}
