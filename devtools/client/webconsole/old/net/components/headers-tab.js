"
use
strict
"
;
const
{
Component
createFactory
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
dom
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
NetInfoGroupList
=
createFactory
(
require
(
"
.
/
net
-
info
-
group
-
list
"
)
)
;
const
Spinner
=
createFactory
(
require
(
"
.
/
spinner
"
)
)
;
class
HeadersTab
extends
Component
{
static
get
propTypes
(
)
{
return
{
actions
:
PropTypes
.
shape
(
{
requestData
:
PropTypes
.
func
.
isRequired
}
)
data
:
PropTypes
.
object
.
isRequired
}
;
}
componentDidMount
(
)
{
let
{
actions
data
}
=
this
.
props
;
let
requestHeaders
=
data
.
request
.
headers
;
let
responseHeaders
=
data
.
response
.
headers
;
if
(
!
requestHeaders
)
{
actions
.
requestData
(
"
requestHeaders
"
)
;
}
if
(
!
responseHeaders
)
{
actions
.
requestData
(
"
responseHeaders
"
)
;
}
}
render
(
)
{
let
{
data
}
=
this
.
props
;
let
requestHeaders
=
data
.
request
.
headers
;
let
responseHeaders
=
data
.
response
.
headers
;
let
groups
=
[
{
key
:
"
responseHeaders
"
name
:
Locale
.
STR
(
"
responseHeaders
"
)
params
:
responseHeaders
}
{
key
:
"
requestHeaders
"
name
:
Locale
.
STR
(
"
requestHeaders
"
)
params
:
requestHeaders
}
]
;
if
(
!
responseHeaders
|
|
!
responseHeaders
.
length
)
{
groups
[
0
]
.
content
=
Spinner
(
)
;
}
return
(
dom
.
div
(
{
className
:
"
headersTabBox
"
}
dom
.
div
(
{
className
:
"
panelContent
"
}
NetInfoGroupList
(
{
groups
:
groups
}
)
)
)
)
;
}
}
module
.
exports
=
HeadersTab
;
