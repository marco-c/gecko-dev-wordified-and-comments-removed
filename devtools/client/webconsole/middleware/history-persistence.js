"
use
strict
"
;
const
{
APPEND_TO_HISTORY
CLEAR_HISTORY
EVALUATE_EXPRESSION
}
=
require
(
"
devtools
/
client
/
webconsole
/
constants
"
)
;
const
historyActions
=
require
(
"
devtools
/
client
/
webconsole
/
actions
/
history
"
)
;
loader
.
lazyRequireGetter
(
this
"
asyncStorage
"
"
devtools
/
shared
/
async
-
storage
"
)
;
function
historyPersistenceMiddleware
(
store
)
{
let
historyLoaded
=
false
;
asyncStorage
.
getItem
(
"
webConsoleHistory
"
)
.
then
(
value
=
>
{
if
(
Array
.
isArray
(
value
)
)
{
store
.
dispatch
(
historyActions
.
historyLoaded
(
value
)
)
;
}
historyLoaded
=
true
;
}
err
=
>
{
historyLoaded
=
true
;
console
.
error
(
err
)
;
}
)
;
return
next
=
>
action
=
>
{
const
res
=
next
(
action
)
;
const
triggerStoreActions
=
[
APPEND_TO_HISTORY
CLEAR_HISTORY
EVALUATE_EXPRESSION
]
;
if
(
historyLoaded
&
&
triggerStoreActions
.
includes
(
action
.
type
)
)
{
const
state
=
store
.
getState
(
)
;
asyncStorage
.
setItem
(
"
webConsoleHistory
"
state
.
history
.
entries
)
.
catch
(
e
=
>
{
console
.
error
(
"
Error
when
saving
WebConsole
input
history
"
e
)
;
}
)
;
}
return
res
;
}
;
}
module
.
exports
=
historyPersistenceMiddleware
;
