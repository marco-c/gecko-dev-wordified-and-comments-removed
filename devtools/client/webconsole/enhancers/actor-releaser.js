"
use
strict
"
;
const
{
MESSAGES_ADD
MESSAGES_CLEAR
PRIVATE_MESSAGES_CLEAR
MESSAGES_CLEAR_LOGPOINT
FRONTS_TO_RELEASE_CLEAR
}
=
require
(
"
devtools
/
client
/
webconsole
/
constants
"
)
;
function
enableActorReleaser
(
webConsoleUI
)
{
return
next
=
>
(
reducer
initialState
enhancer
)
=
>
{
function
releaseActorsEnhancer
(
state
action
)
{
state
=
reducer
(
state
action
)
;
const
type
=
action
.
type
;
if
(
webConsoleUI
&
&
[
MESSAGES_ADD
MESSAGES_CLEAR
PRIVATE_MESSAGES_CLEAR
MESSAGES_CLEAR_LOGPOINT
]
.
includes
(
type
)
)
{
const
promises
=
[
]
;
state
.
messages
.
frontsToRelease
.
forEach
(
front
=
>
{
if
(
front
&
&
typeof
front
.
release
=
=
=
"
function
"
&
&
(
!
state
.
ui
.
frontInSidebar
|
|
state
.
ui
.
frontInSidebar
.
actorID
!
=
=
front
.
actorID
)
)
{
promises
.
push
(
front
.
release
(
)
)
;
}
}
)
;
Promise
.
all
(
promises
)
.
then
(
(
)
=
>
webConsoleUI
.
emit
(
"
fronts
-
released
"
)
)
;
state
=
reducer
(
state
{
type
:
FRONTS_TO_RELEASE_CLEAR
}
)
;
}
return
state
;
}
return
next
(
releaseActorsEnhancer
initialState
enhancer
)
;
}
;
}
module
.
exports
=
enableActorReleaser
;
