"
use
strict
"
;
const
TEST_URI
=
"
https
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
webconsole
/
"
+
"
test
/
mochitest
/
"
+
"
test
-
mixedcontent
-
securityerrors
.
html
"
;
const
LEARN_MORE_URI
=
"
https
:
/
/
developer
.
mozilla
.
org
/
docs
/
Web
/
Security
/
"
+
"
Mixed_content
"
+
DOCS_GA_PARAMS
;
const
blockedActiveContentText
=
"
Blocked
loading
mixed
active
content
"
+
"
\
u201chttp
:
/
/
example
.
com
/
\
u201d
"
;
const
blockedDisplayContentText
=
"
Blocked
loading
mixed
display
content
"
+
"
\
u201chttp
:
/
/
example
.
com
/
tests
/
image
/
test
/
mochitest
/
blue
.
png
\
u201d
"
;
const
activeContentText
=
"
Loading
mixed
(
insecure
)
active
content
"
+
"
\
u201chttp
:
/
/
example
.
com
/
\
u201d
on
a
secure
page
"
;
const
displayContentText
=
"
Loading
mixed
(
insecure
)
display
content
"
+
"
\
u201chttp
:
/
/
example
.
com
/
tests
/
image
/
test
/
mochitest
/
blue
.
png
\
u201d
on
a
"
+
"
secure
page
"
;
add_task
(
async
function
(
)
{
await
pushPrefEnv
(
)
;
const
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
const
waitForErrorMessage
=
text
=
>
waitFor
(
(
)
=
>
findMessage
(
hud
text
"
.
message
.
error
"
)
undefined
100
)
;
const
onBlockedIframe
=
waitForErrorMessage
(
blockedActiveContentText
)
;
const
onBlockedImage
=
waitForErrorMessage
(
blockedDisplayContentText
)
;
await
onBlockedImage
;
ok
(
true
"
Blocked
mixed
display
content
error
message
is
visible
"
)
;
const
blockedMixedActiveContentMessage
=
await
onBlockedIframe
;
ok
(
true
"
Blocked
mixed
active
content
error
message
is
visible
"
)
;
info
(
"
Clicking
on
the
Learn
More
link
"
)
;
let
learnMoreLink
=
blockedMixedActiveContentMessage
.
querySelector
(
"
.
learn
-
more
-
link
"
)
;
let
response
=
await
simulateLinkClick
(
learnMoreLink
)
;
is
(
response
.
link
LEARN_MORE_URI
Clicking
the
provided
link
opens
{
response
.
link
}
)
;
info
(
"
Test
disabling
mixed
content
protection
"
)
;
let
{
gIdentityHandler
}
=
gBrowser
.
ownerGlobal
;
ok
(
gIdentityHandler
.
_identityBox
.
classList
.
contains
(
"
mixedActiveBlocked
"
)
"
Mixed
Active
Content
state
appeared
on
identity
box
"
)
;
gIdentityHandler
.
disableMixedContentProtection
(
)
;
const
waitForWarningMessage
=
text
=
>
waitFor
(
(
)
=
>
findMessage
(
hud
text
"
.
message
.
warn
"
)
undefined
100
)
;
const
onMixedActiveContent
=
waitForWarningMessage
(
activeContentText
)
;
const
onMixedDisplayContent
=
waitForWarningMessage
(
displayContentText
)
;
await
onMixedDisplayContent
;
ok
(
true
"
Mixed
display
content
warning
message
is
visible
"
)
;
const
mixedActiveContentMessage
=
await
onMixedActiveContent
;
ok
(
true
"
Mixed
active
content
warning
message
is
visible
"
)
;
info
(
"
Clicking
on
the
Learn
More
link
"
)
;
learnMoreLink
=
mixedActiveContentMessage
.
querySelector
(
"
.
learn
-
more
-
link
"
)
;
response
=
await
simulateLinkClick
(
learnMoreLink
)
;
is
(
response
.
link
LEARN_MORE_URI
Clicking
the
provided
link
opens
{
response
.
link
}
)
;
}
)
;
function
pushPrefEnv
(
)
{
const
prefs
=
[
[
"
security
.
mixed_content
.
block_active_content
"
true
]
[
"
security
.
mixed_content
.
block_display_content
"
true
]
[
"
security
.
mixed_content
.
upgrade_display_content
"
false
]
]
;
return
Promise
.
all
(
prefs
.
map
(
(
[
pref
value
]
)
=
>
pushPref
(
pref
value
)
)
)
;
}
