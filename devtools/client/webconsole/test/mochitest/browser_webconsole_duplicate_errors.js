"
use
strict
"
;
const
TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
webconsole
/
"
+
"
test
/
mochitest
/
test
-
duplicate
-
error
.
html
"
;
add_task
(
async
function
(
)
{
if
(
!
Services
.
appinfo
.
browserTabsRemoteAutostart
)
{
expectUncaughtException
(
)
;
}
const
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
await
waitFor
(
(
)
=
>
findMessage
(
hud
"
fooDuplicateError1
"
"
.
message
.
error
"
)
)
;
const
errorMessages
=
hud
.
ui
.
outputNode
.
querySelectorAll
(
"
.
message
.
error
"
)
;
is
(
errorMessages
.
length
1
"
There
'
s
only
one
error
message
for
fooDuplicateError1
"
)
;
is
(
errorMessages
[
0
]
.
querySelector
(
"
.
message
-
repeats
"
)
null
"
There
is
no
repeat
bubble
on
the
error
message
"
)
;
}
)
;
