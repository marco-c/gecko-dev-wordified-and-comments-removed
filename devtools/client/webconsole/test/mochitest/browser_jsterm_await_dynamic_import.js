"
use
strict
"
;
const
TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
webconsole
/
test
/
mochitest
/
test
-
dynamic
-
import
.
html
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
javascript
.
options
.
dynamicImport
"
true
)
;
await
pushPref
(
"
devtools
.
debugger
.
features
.
map
-
await
-
expression
"
true
)
;
await
pushPref
(
"
devtools
.
webconsole
.
jsterm
.
codeMirror
"
false
)
;
await
performTests
(
)
;
await
pushPref
(
"
devtools
.
webconsole
.
jsterm
.
codeMirror
"
true
)
;
await
performTests
(
)
;
}
)
;
async
function
performTests
(
)
{
const
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
const
executeAndWaitForResultMessage
=
(
input
expectedOutput
)
=
>
executeAndWaitForMessage
(
hud
input
expectedOutput
"
.
result
"
)
;
info
(
"
Evaluate
an
expression
with
a
dynamic
import
"
)
;
let
importAwaitExpression
=
var
{
sum
}
=
await
import
(
"
.
/
test
-
dynamic
-
import
.
js
"
)
;
sum
(
1
2
3
)
;
;
await
executeAndWaitForResultMessage
(
importAwaitExpression
1
+
2
+
3
=
6
)
;
ok
(
true
"
The
sum
module
was
imported
and
used
successfully
"
)
;
info
(
"
Import
the
same
module
a
second
time
"
)
;
importAwaitExpression
=
var
{
sum
}
=
await
import
(
"
.
/
test
-
dynamic
-
import
.
js
"
)
;
sum
(
2
3
4
)
;
;
await
executeAndWaitForResultMessage
(
importAwaitExpression
2
+
3
+
4
=
9
)
;
ok
(
true
"
The
sum
module
was
imported
and
used
successfully
a
second
time
"
)
;
}
