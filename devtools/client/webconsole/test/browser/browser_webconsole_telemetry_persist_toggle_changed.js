"
use
strict
"
;
const
{
TelemetryTestUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
TelemetryTestUtils
.
jsm
"
)
;
const
TEST_URI
=
data
:
text
/
html
<
meta
charset
=
utf8
>
<
script
>
console
.
log
(
"
test
message
"
)
;
<
/
script
>
;
add_task
(
async
function
(
)
{
Services
.
telemetry
.
clearEvents
(
)
;
TelemetryTestUtils
.
assertNumberOfEvents
(
0
)
;
const
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
const
logPersistToggle
=
await
waitFor
(
(
)
=
>
hud
.
ui
.
window
.
document
.
querySelector
(
"
.
filter
-
checkbox
"
)
)
;
logPersistToggle
.
click
(
)
;
await
waitUntil
(
(
)
=
>
hud
.
ui
.
wrapper
.
getStore
(
)
.
getState
(
)
.
ui
.
persistLogs
=
=
=
true
)
;
logPersistToggle
.
click
(
)
;
await
waitUntil
(
(
)
=
>
hud
.
ui
.
wrapper
.
getStore
(
)
.
getState
(
)
.
ui
.
persistLogs
=
=
=
false
)
;
const
expectedEvents
=
[
{
category
:
"
devtools
.
main
"
method
:
"
persist_changed
"
object
:
"
webconsole
"
value
:
"
true
"
}
{
category
:
"
devtools
.
main
"
method
:
"
persist_changed
"
object
:
"
webconsole
"
value
:
"
false
"
}
]
;
const
filter
=
{
category
:
"
devtools
.
main
"
method
:
"
persist_changed
"
object
:
"
webconsole
"
}
;
await
TelemetryTestUtils
.
assertEvents
(
expectedEvents
filter
)
;
}
)
;
