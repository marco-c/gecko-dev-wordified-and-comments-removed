"
use
strict
"
;
const
TEST_URI
=
"
http
:
/
/
example
.
com
/
"
;
add_task
(
async
function
testSelectAll
(
)
{
const
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
await
testSelectionWhenMovingBetweenBoxes
(
hud
)
;
testBrowserMenuSelectAll
(
hud
)
;
}
)
;
async
function
testSelectionWhenMovingBetweenBoxes
(
hud
)
{
await
clearOutput
(
hud
)
;
await
executeAndWaitForMessage
(
hud
"
1
+
2
"
"
3
"
"
.
result
"
)
;
await
executeAndWaitForMessage
(
hud
"
3
+
4
"
"
7
"
"
.
result
"
)
;
await
executeAndWaitForMessage
(
hud
"
5
+
6
"
"
11
"
"
.
result
"
)
;
}
function
testBrowserMenuSelectAll
(
hud
)
{
const
{
ui
}
=
hud
;
const
outputContainer
=
ui
.
outputNode
.
querySelector
(
"
.
webconsole
-
output
"
)
;
is
(
outputContainer
.
querySelectorAll
(
"
.
message
"
)
.
length
6
"
the
output
node
contains
the
expected
number
of
messages
"
)
;
outputContainer
.
ownerDocument
.
activeElement
.
blur
(
)
;
goDoCommand
(
"
cmd_selectAll
"
)
;
checkMessagesSelected
(
outputContainer
)
;
hud
.
iframeWindow
.
getSelection
(
)
.
removeAllRanges
(
)
;
}
function
checkMessagesSelected
(
outputContainer
)
{
const
selection
=
outputContainer
.
ownerDocument
.
getSelection
(
)
;
const
messages
=
outputContainer
.
querySelectorAll
(
"
.
message
"
)
;
for
(
const
message
of
messages
)
{
const
selected
=
[
.
.
.
message
.
children
]
.
every
(
c
=
>
selection
.
containsNode
(
c
)
)
;
ok
(
selected
Node
containing
text
"
{
message
.
textContent
}
"
was
selected
)
;
}
}
