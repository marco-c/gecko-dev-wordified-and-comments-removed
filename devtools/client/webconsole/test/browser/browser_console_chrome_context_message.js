"
use
strict
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
security
.
allow_parent_unrestricted_js_loads
"
true
)
;
await
pushPref
(
"
devtools
.
browserconsole
.
contentMessages
"
true
)
;
const
hud
=
await
BrowserConsoleManager
.
toggleBrowserConsole
(
)
;
await
openNewTabAndConsole
(
data
:
text
/
html
<
script
>
console
.
log
(
"
hello
from
content
"
)
<
/
script
>
)
;
const
expectedMessages
=
[
Cu
.
reportError
]
;
info
(
"
Set
the
focus
on
the
Browser
Console
"
)
;
hud
.
iframeWindow
.
focus
(
)
;
execute
(
hud
Cu
.
reportError
(
"
Cu
.
reportError
"
)
;
)
;
info
(
"
Wait
for
expected
message
are
shown
on
browser
console
"
)
;
await
waitFor
(
(
)
=
>
expectedMessages
.
every
(
expectedMessage
=
>
findMessage
(
hud
expectedMessage
)
)
)
;
await
waitFor
(
(
)
=
>
findMessage
(
hud
"
hello
from
content
"
)
)
;
ok
(
true
"
Expected
messages
are
displayed
in
the
browser
console
"
)
;
info
(
"
Uncheck
the
Show
content
messages
checkbox
"
)
;
await
toggleConsoleSetting
(
hud
"
.
webconsole
-
console
-
settings
-
menu
-
item
-
contentMessages
"
)
;
await
waitFor
(
(
)
=
>
!
findMessage
(
hud
"
hello
from
content
"
)
)
;
info
(
"
Check
the
expected
messages
are
still
visiable
in
the
browser
console
"
)
;
for
(
const
expectedMessage
of
expectedMessages
)
{
ok
(
findMessage
(
hud
expectedMessage
)
"
{
expectedMessage
}
"
should
be
still
visible
)
;
}
}
)
;
