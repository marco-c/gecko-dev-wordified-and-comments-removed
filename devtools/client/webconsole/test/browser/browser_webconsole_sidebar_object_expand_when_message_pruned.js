"
use
strict
"
;
const
TEST_URI
=
"
data
:
text
/
html
;
charset
=
utf8
<
!
DOCTYPE
html
>
"
+
"
<
script
>
console
.
log
(
{
a
:
1
b
:
2
c
:
[
3
4
5
]
}
)
;
<
/
script
>
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
webconsole
.
sidebarToggle
"
true
)
;
await
pushPref
(
"
devtools
.
hud
.
loglimit
"
1
)
;
const
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
const
message
=
await
waitFor
(
(
)
=
>
findConsoleAPIMessage
(
hud
"
Object
"
)
)
;
const
object
=
message
.
querySelector
(
"
.
object
-
inspector
.
objectBox
-
object
"
)
;
const
sidebar
=
await
showSidebarWithContextMenu
(
hud
object
true
)
;
const
oi
=
sidebar
.
querySelector
(
"
.
object
-
inspector
"
)
;
let
oiNodes
=
oi
.
querySelectorAll
(
"
.
node
"
)
;
if
(
oiNodes
.
length
=
=
=
1
)
{
await
waitFor
(
(
)
=
>
oi
.
querySelectorAll
(
"
.
node
"
)
.
length
>
1
)
;
oiNodes
=
oi
.
querySelectorAll
(
"
.
node
"
)
;
}
info
(
"
Log
a
message
so
the
original
one
gets
pruned
"
)
;
const
messageText
=
"
hello
world
"
;
const
onMessage
=
waitForMessage
(
hud
messageText
)
;
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
messageText
]
async
function
(
str
)
{
content
.
console
.
log
(
str
)
;
}
)
;
await
onMessage
;
ok
(
!
findConsoleAPIMessage
(
hud
"
Object
"
)
"
Message
with
object
was
pruned
"
)
;
info
(
"
Expand
the
'
c
'
node
in
the
sidebar
"
)
;
const
cNode
=
oiNodes
[
3
]
;
const
onNodeExpanded
=
waitFor
(
(
)
=
>
oi
.
querySelectorAll
(
"
.
node
"
)
.
length
>
5
)
;
cNode
.
click
(
)
;
await
onNodeExpanded
;
is
(
oi
.
querySelectorAll
(
"
.
node
"
)
.
length
10
"
The
'
c
'
property
was
expanded
"
)
;
}
)
;
async
function
showSidebarWithContextMenu
(
hud
node
)
{
const
appNode
=
hud
.
ui
.
document
.
querySelector
(
"
.
webconsole
-
app
"
)
;
const
onSidebarShown
=
waitFor
(
(
)
=
>
appNode
.
querySelector
(
"
.
sidebar
"
)
)
;
const
contextMenu
=
await
openContextMenu
(
hud
node
)
;
const
openInSidebar
=
contextMenu
.
querySelector
(
"
#
console
-
menu
-
open
-
sidebar
"
)
;
openInSidebar
.
click
(
)
;
await
onSidebarShown
;
await
hideContextMenu
(
hud
)
;
return
onSidebarShown
;
}
