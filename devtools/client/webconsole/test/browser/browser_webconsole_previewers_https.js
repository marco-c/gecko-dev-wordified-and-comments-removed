"
use
strict
"
;
add_task
(
async
function
(
)
{
const
hud
=
await
openNewTabAndConsole
(
URL_ROOT_COM_SSL
+
"
test
-
blank
.
html
"
)
;
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
function
(
)
{
const
openReq
=
content
.
indexedDB
.
open
(
"
idb
-
bug
-
demo
"
1
)
;
openReq
.
onupgradeneeded
=
e
=
>
{
e
.
target
.
result
.
createObjectStore
(
"
demo
"
{
keyPath
:
"
id
"
}
)
;
}
;
openReq
.
onsuccess
=
e
=
>
{
const
db
=
e
.
target
.
result
;
const
store
=
db
.
transaction
(
[
"
demo
"
]
"
readonly
"
)
.
objectStore
(
"
demo
"
)
;
const
idbRequest
=
store
.
get
(
"
unknown
"
)
;
idbRequest
.
onsuccess
=
(
)
=
>
{
content
.
console
.
log
(
idbRequest
)
;
db
.
close
(
)
;
}
;
}
;
}
)
;
const
message
=
await
waitForMessageByType
(
hud
"
IDBRequest
"
"
.
console
-
api
"
)
;
is
(
message
.
node
.
querySelector
(
"
.
message
-
body
"
)
.
innerText
.
trim
(
)
'
IDBRequest
{
result
:
undefined
error
:
null
source
:
IDBObjectStore
transaction
:
IDBTransaction
readyState
:
"
done
"
onsuccess
:
Restricted
onerror
:
null
}
'
"
Got
expected
IDBRequest
object
with
undefined
result
property
"
)
;
const
oi
=
message
.
node
.
querySelector
(
"
.
tree
"
)
;
await
expandObjectInspectorNode
(
oi
.
querySelector
(
"
.
tree
-
node
"
)
)
;
const
resultPropertyTreeItemEl
=
Array
.
from
(
oi
.
querySelectorAll
(
"
.
object
-
node
"
)
)
.
find
(
el
=
>
el
.
querySelector
(
"
.
object
-
label
"
)
?
.
innerText
=
=
=
"
result
"
)
;
is
(
resultPropertyTreeItemEl
.
innerText
"
result
:
undefined
"
"
Got
expected
result
property
in
the
object
inspector
for
the
IDBRequest
"
)
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
async
function
(
)
{
const
{
promise
resolve
}
=
content
.
Promise
.
withResolvers
(
)
;
content
.
indexedDB
.
deleteDatabase
(
"
idb
-
bug
-
demo
"
)
.
onsuccess
=
resolve
;
await
promise
;
}
)
;
}
)
;
