"
use
strict
"
;
const
TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
webconsole
/
"
+
"
test
/
browser
/
test
-
reopen
-
closed
-
tab
.
html
"
;
add_task
(
async
function
(
)
{
pushPref
(
"
devtools
.
webconsole
.
persistlog
"
false
)
;
info
(
"
Open
console
and
refresh
tab
.
"
)
;
expectUncaughtExceptionNoE10s
(
)
;
let
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
await
clearOutput
(
hud
)
;
expectUncaughtExceptionNoE10s
(
)
;
await
refreshTab
(
)
;
await
waitForError
(
hud
)
;
await
closeConsole
(
)
;
expectUncaughtExceptionNoE10s
(
)
;
gBrowser
.
removeCurrentTab
(
)
;
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
expectUncaughtExceptionNoE10s
(
)
;
await
refreshTab
(
)
;
await
waitForError
(
hud
)
;
}
)
;
async
function
waitForError
(
hud
)
{
info
(
"
Wait
for
error
message
"
)
;
await
waitFor
(
(
)
=
>
findMessage
(
hud
"
fooBug597756_error
"
"
.
message
.
error
"
)
)
;
ok
(
true
"
error
message
displayed
"
)
;
}
function
expectUncaughtExceptionNoE10s
(
)
{
if
(
!
Services
.
appinfo
.
browserTabsRemoteAutostart
)
{
expectUncaughtException
(
)
;
}
}
