"
use
strict
"
;
const
{
waitForRecordingStartedEvents
waitForRecordingStoppedEvents
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
actions
"
)
;
const
TEST_URI
=
"
data
:
text
/
html
;
charset
=
utf8
<
h1
>
test
console
.
profile
<
/
h1
>
"
;
const
EXPECTED_WARNING
=
"
console
.
profile
is
not
compatible
with
the
new
Performance
recorder
"
;
add_task
(
async
function
consoleProfileWarningWithNewPerfPanel
(
)
{
await
pushPref
(
"
devtools
.
performance
.
new
-
panel
-
enabled
"
true
)
;
const
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
info
(
"
Use
console
.
profile
in
the
content
page
"
)
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
function
(
)
{
content
.
wrappedJSObject
.
console
.
profile
(
)
;
}
)
;
await
waitFor
(
(
)
=
>
findMessage
(
hud
EXPECTED_WARNING
)
"
Wait
until
the
warning
about
console
.
profile
is
displayed
"
)
;
ok
(
true
"
The
expected
warning
was
displayed
.
"
)
;
}
)
;
add_task
(
async
function
consoleProfileNoWarningWithOldPerfPanel
(
)
{
await
pushPref
(
"
devtools
.
performance
.
new
-
panel
-
enabled
"
false
)
;
const
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
await
hud
.
toolbox
.
loadTool
(
"
performance
"
)
;
const
perfPanel
=
hud
.
toolbox
.
getPanel
(
"
performance
"
)
;
const
profileStarted
=
waitForRecordingStartedEvents
(
perfPanel
{
skipWaitingForBackendReady
:
true
}
)
;
const
profileStopped
=
waitForRecordingStoppedEvents
(
perfPanel
{
skipWaitingForBackendReady
:
true
}
)
;
info
(
"
Use
console
.
profile
in
the
content
page
"
)
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
function
(
)
{
content
.
wrappedJSObject
.
console
.
profile
(
)
;
}
)
;
await
profileStarted
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
function
(
)
{
content
.
wrappedJSObject
.
console
.
profileEnd
(
)
;
}
)
;
await
profileStopped
;
await
wait
(
1000
)
;
ok
(
!
findMessage
(
hud
EXPECTED_WARNING
)
"
The
console
.
profile
warning
was
not
displayed
.
"
)
;
}
)
;
