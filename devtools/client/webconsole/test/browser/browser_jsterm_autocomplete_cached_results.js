"
use
strict
"
;
const
TEST_URI
=
"
data
:
text
/
html
;
charset
=
utf8
<
p
>
test
cached
autocompletion
results
"
;
add_task
(
async
function
(
)
{
const
hud
=
await
openNewTabAndConsole
(
TEST_URI
)
;
const
{
jsterm
}
=
hud
;
const
{
autocompletePopup
:
popup
}
=
jsterm
;
const
jstermComplete
=
(
value
pos
)
=
>
setInputValueForAutocompletion
(
hud
value
pos
)
;
await
jstermComplete
(
"
doc
"
)
;
is
(
getInputValue
(
hud
)
"
doc
"
"
'
docu
'
completion
(
input
.
value
)
"
)
;
checkInputCompletionValue
(
hud
"
ument
"
"
'
docu
'
completion
(
completeNode
)
"
)
;
await
jstermComplete
(
"
window
.
"
)
;
ok
(
popup
.
getItems
(
)
.
length
>
0
"
'
window
.
'
gave
a
list
of
suggestions
"
)
;
info
(
"
Add
a
property
on
the
window
object
"
)
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
(
)
=
>
{
content
.
wrappedJSObject
.
window
.
docfoobar
=
true
;
}
)
;
let
onUpdated
=
jsterm
.
once
(
"
autocomplete
-
updated
"
)
;
EventUtils
.
synthesizeKey
(
"
d
"
)
;
await
onUpdated
;
ok
(
!
hasPopupLabel
(
popup
"
docfoobar
"
)
"
autocomplete
popup
does
not
contain
docfoobar
.
List
has
not
been
updated
"
)
;
jsterm
.
once
(
"
autocomplete
-
updated
"
)
;
EventUtils
.
synthesizeKey
(
"
o
"
)
;
await
onUpdated
;
ok
(
!
hasPopupLabel
(
popup
"
docfoobar
"
)
"
autocomplete
popup
does
not
contain
docfoobar
.
List
has
not
been
updated
"
)
;
onUpdated
=
jsterm
.
once
(
"
autocomplete
-
updated
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Backspace
"
)
;
await
onUpdated
;
ok
(
!
hasPopupLabel
(
popup
"
docfoobar
"
)
"
autocomplete
cached
results
do
not
contain
docfoobar
.
list
has
not
been
updated
"
)
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
(
)
=
>
{
delete
content
.
wrappedJSObject
.
window
.
docfoobar
;
}
)
;
await
jstermComplete
(
"
window
.
"
)
;
await
jstermComplete
(
"
window
.
getC
"
)
;
ok
(
hasPopupLabel
(
popup
"
getComputedStyle
"
)
"
autocomplete
results
do
contain
getComputedStyle
"
)
;
await
jstermComplete
(
"
dump
(
d
"
)
;
ok
(
popup
.
getItems
(
)
.
length
>
0
"
'
dump
(
d
'
gives
non
-
zero
results
"
)
;
await
jstermComplete
(
"
dump
(
window
)
"
-
1
)
;
onUpdated
=
jsterm
.
once
(
"
autocomplete
-
updated
"
)
;
EventUtils
.
sendString
(
"
.
"
)
;
await
onUpdated
;
ok
(
popup
.
getItems
(
)
.
length
>
0
"
'
dump
(
window
.
'
gave
a
list
of
suggestions
"
)
;
info
(
"
Add
a
property
on
the
window
object
"
)
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
(
)
=
>
{
content
.
wrappedJSObject
.
window
.
docfoobar
=
true
;
}
)
;
onUpdated
=
jsterm
.
once
(
"
autocomplete
-
updated
"
)
;
EventUtils
.
sendString
(
"
d
"
)
;
await
onUpdated
;
ok
(
!
hasPopupLabel
(
popup
"
docfoobar
"
)
"
autocomplete
cached
results
do
not
contain
docfoobar
.
list
has
not
been
updated
"
)
;
info
(
"
Ensure
filtering
from
the
cache
does
work
"
)
;
execute
(
hud
window
.
testObject
=
Object
.
create
(
null
)
;
window
.
testObject
.
zz
=
"
zz
"
;
window
.
testObject
.
zzz
=
"
zzz
"
;
window
.
testObject
.
zzzz
=
"
zzzz
"
;
)
;
await
jstermComplete
(
"
window
.
testObject
.
"
)
;
await
jstermComplete
(
"
window
.
testObject
.
z
"
)
;
ok
(
hasExactPopupLabels
(
popup
[
"
zz
"
"
zzz
"
"
zzzz
"
]
)
"
results
are
the
expected
ones
"
)
;
onUpdated
=
jsterm
.
once
(
"
autocomplete
-
updated
"
)
;
EventUtils
.
sendString
(
"
z
"
)
;
await
onUpdated
;
ok
(
hasExactPopupLabels
(
popup
[
"
zz
"
"
zzz
"
"
zzzz
"
]
)
"
filtering
from
the
cache
works
-
step
1
"
)
;
onUpdated
=
jsterm
.
once
(
"
autocomplete
-
updated
"
)
;
EventUtils
.
sendString
(
"
z
"
)
;
await
onUpdated
;
ok
(
hasExactPopupLabels
(
popup
[
"
zzz
"
"
zzzz
"
]
)
"
filtering
from
the
cache
works
-
step
2
"
)
;
}
)
;
