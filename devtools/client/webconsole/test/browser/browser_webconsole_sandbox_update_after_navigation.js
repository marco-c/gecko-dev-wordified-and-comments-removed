"
use
strict
"
;
const
BASE_URI
=
"
browser
/
devtools
/
client
/
webconsole
/
test
/
browser
/
test
-
console
.
html
"
;
const
TEST_URI1
=
"
http
:
/
/
example
.
com
/
"
+
BASE_URI
;
const
TEST_URI2
=
"
http
:
/
/
example
.
org
/
"
+
BASE_URI
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
webconsole
.
persistlog
"
false
)
;
const
hud
=
await
openNewTabAndConsole
(
TEST_URI1
)
;
await
executeAndWaitForMessage
(
hud
"
window
.
location
.
href
"
TEST_URI1
"
.
result
"
)
;
await
navigateTo
(
TEST_URI2
)
;
ok
(
!
findMessage
(
hud
"
Permission
denied
"
)
"
no
permission
denied
errors
"
)
;
info
(
"
wait
for
window
.
location
.
href
after
page
navigation
"
)
;
await
clearOutput
(
hud
)
;
await
executeAndWaitForMessage
(
hud
"
window
.
location
.
href
"
TEST_URI2
"
.
result
"
)
;
ok
(
!
findMessage
(
hud
"
Permission
denied
"
)
"
no
permission
denied
errors
"
)
;
const
promises
=
[
hud
.
ui
.
once
(
"
messages
-
cleared
"
)
]
;
if
(
isFissionEnabled
(
)
)
{
promises
.
push
(
hud
.
targetList
.
once
(
"
switched
-
target
"
)
)
;
}
gBrowser
.
goBack
(
)
;
info
(
"
Waiting
for
messages
-
cleared
event
due
to
navigation
"
)
;
await
Promise
.
all
(
promises
)
;
info
(
"
Messages
cleared
after
navigation
;
checking
location
"
)
;
await
executeAndWaitForMessage
(
hud
"
window
.
location
.
href
"
TEST_URI1
"
.
result
"
)
;
ok
(
!
findMessage
(
hud
"
Permission
denied
"
)
"
no
permission
denied
errors
"
)
;
}
)
;
