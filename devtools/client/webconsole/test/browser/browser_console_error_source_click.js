"
use
strict
"
;
const
TEST_URI
=
"
data
:
text
/
html
;
charset
=
utf8
<
!
DOCTYPE
html
>
<
p
>
hello
world
"
+
"
<
button
onclick
=
'
foobar
.
explode
(
)
'
>
click
!
<
/
button
>
"
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
dom
.
ipc
.
processPrelaunch
.
enabled
"
false
)
;
await
pushPref
(
"
devtools
.
browserconsole
.
contentMessages
"
true
)
;
await
addTab
(
TEST_URI
)
;
const
hud
=
await
BrowserConsoleManager
.
toggleBrowserConsole
(
)
;
ok
(
hud
"
browser
console
opened
"
)
;
if
(
!
Services
.
appinfo
.
browserTabsRemoteAutostart
)
{
expectUncaughtException
(
)
;
}
info
(
"
generate
exception
and
wait
for
the
message
"
)
;
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
(
)
=
>
{
const
button
=
content
.
document
.
querySelector
(
"
button
"
)
;
button
.
click
(
)
;
}
)
;
const
messageText
=
"
ReferenceError
:
foobar
is
not
defined
"
;
const
msg
=
await
waitFor
(
(
)
=
>
findErrorMessage
(
hud
messageText
)
Message
"
{
messageText
}
"
wasn
'
t
found
)
;
ok
(
msg
Message
found
:
"
{
messageText
}
"
)
;
const
locationNode
=
msg
.
querySelector
(
"
.
message
-
location
.
frame
-
link
-
source
"
)
;
ok
(
locationNode
"
Message
location
link
element
found
"
)
;
const
onTabOpen
=
BrowserTestUtils
.
waitForNewTab
(
gBrowser
url
=
>
url
.
startsWith
(
"
view
-
source
:
"
)
true
)
;
locationNode
.
click
(
)
;
await
onTabOpen
;
ok
(
true
"
The
view
source
tab
was
opened
in
response
to
clicking
the
link
"
)
;
}
)
;
