"
use
strict
"
;
const
TEST_PAGE_URL
=
URL_ROOT
+
"
page_basic
.
html
"
;
const
TEXT_XHR_URL
=
URL_ROOT
+
"
test
.
txt
"
;
const
JSON_XHR_URL
=
URL_ROOT
+
"
test
.
json
"
;
const
XML_XHR_URL
=
URL_ROOT
+
"
test
.
xml
"
;
const
textResponseBody
=
"
this
is
a
response
"
;
const
jsonResponseBody
=
"
name
\
"
John
\
"
"
;
add_task
(
async
function
(
)
{
info
(
"
Test
XHR
Spy
respone
plain
body
started
"
)
;
let
{
hud
}
=
await
addTestTab
(
TEST_PAGE_URL
)
;
let
netInfoBody
=
await
executeAndInspectXhr
(
hud
{
method
:
"
GET
"
url
:
TEXT_XHR_URL
}
)
;
let
tabBody
=
await
selectNetInfoTab
(
hud
netInfoBody
"
response
"
)
;
let
responseContent
=
tabBody
.
querySelector
(
"
.
netInfoGroup
.
raw
.
opened
.
netInfoGroupContent
"
)
;
ok
(
responseContent
.
textContent
.
indexOf
(
textResponseBody
)
>
-
1
"
Response
body
must
be
properly
rendered
"
)
;
}
)
;
add_task
(
async
function
(
)
{
info
(
"
Test
XHR
Spy
response
XML
body
started
"
)
;
let
{
hud
}
=
await
addTestTab
(
TEST_PAGE_URL
)
;
let
netInfoBody
=
await
executeAndInspectXhr
(
hud
{
method
:
"
GET
"
url
:
XML_XHR_URL
}
)
;
let
tabBody
=
await
selectNetInfoTab
(
hud
netInfoBody
"
response
"
)
;
let
rawResponseContent
=
tabBody
.
querySelector
(
"
.
netInfoGroup
.
raw
.
opened
.
netInfoGroupContent
"
)
;
ok
(
rawResponseContent
"
Raw
response
group
must
not
be
collapsed
"
)
;
}
)
;
add_task
(
async
function
(
)
{
info
(
"
Test
XHR
Spy
response
JSON
body
started
"
)
;
let
{
hud
}
=
await
addTestTab
(
TEST_PAGE_URL
)
;
let
netInfoBody
=
await
executeAndInspectXhr
(
hud
{
method
:
"
GET
"
url
:
JSON_XHR_URL
}
)
;
let
tabBody
=
await
selectNetInfoTab
(
hud
netInfoBody
"
response
"
)
;
let
responseContent
=
tabBody
.
querySelector
(
"
.
netInfoGroup
.
json
.
netInfoGroupContent
"
)
;
is
(
responseContent
.
textContent
jsonResponseBody
"
Response
body
must
be
properly
rendered
"
)
;
let
rawResponseContent
=
tabBody
.
querySelector
(
"
.
netInfoGroup
.
raw
.
opened
.
netInfoGroupContent
"
)
;
ok
(
!
rawResponseContent
"
Raw
response
group
must
be
collapsed
"
)
;
}
)
;
