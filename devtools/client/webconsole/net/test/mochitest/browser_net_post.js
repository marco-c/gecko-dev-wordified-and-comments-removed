"
use
strict
"
;
const
TEST_PAGE_URL
=
URL_ROOT
+
"
page_basic
.
html
"
;
const
JSON_XHR_URL
=
URL_ROOT
+
"
test
.
json
"
;
const
plainPostBody
=
"
test
-
data
"
;
const
jsonData
=
"
{
\
"
bar
\
"
:
\
"
baz
\
"
}
"
;
const
jsonRendered
=
"
bar
\
"
baz
\
"
"
;
const
xmlPostBody
=
"
<
xml
>
<
name
>
John
<
/
name
>
<
/
xml
>
"
;
add_task
(
async
function
(
)
{
info
(
"
Test
XHR
Spy
post
plain
body
started
"
)
;
let
{
hud
}
=
await
addTestTab
(
TEST_PAGE_URL
)
;
let
netInfoBody
=
await
executeAndInspectXhr
(
hud
{
method
:
"
POST
"
url
:
JSON_XHR_URL
body
:
plainPostBody
}
)
;
let
tabBody
=
await
selectNetInfoTab
(
hud
netInfoBody
"
post
"
)
;
let
postContent
=
tabBody
.
querySelector
(
"
.
netInfoGroup
.
raw
.
opened
.
netInfoGroupContent
"
)
;
is
(
postContent
.
textContent
plainPostBody
"
Post
body
must
be
properly
rendered
"
)
;
}
)
;
add_task
(
async
function
(
)
{
info
(
"
Test
XHR
Spy
post
JSON
body
started
"
)
;
let
{
hud
}
=
await
addTestTab
(
TEST_PAGE_URL
)
;
let
netInfoBody
=
await
executeAndInspectXhr
(
hud
{
method
:
"
POST
"
url
:
JSON_XHR_URL
body
:
jsonData
requestHeaders
:
[
{
name
:
"
Content
-
Type
"
value
:
"
application
/
json
"
}
]
}
)
;
let
tabBody
=
await
selectNetInfoTab
(
hud
netInfoBody
"
post
"
)
;
let
postContent
=
tabBody
.
querySelector
(
"
.
netInfoGroup
.
json
.
opened
.
netInfoGroupContent
"
)
;
is
(
postContent
.
textContent
jsonRendered
"
Post
body
must
be
properly
rendered
"
)
;
let
rawPostContent
=
tabBody
.
querySelector
(
"
.
netInfoGroup
.
raw
.
opened
.
netInfoGroupContent
"
)
;
ok
(
!
rawPostContent
"
Raw
response
group
must
be
collapsed
"
)
;
}
)
;
add_task
(
async
function
(
)
{
info
(
"
Test
XHR
Spy
post
XML
body
started
"
)
;
let
{
hud
}
=
await
addTestTab
(
TEST_PAGE_URL
)
;
let
netInfoBody
=
await
executeAndInspectXhr
(
hud
{
method
:
"
POST
"
url
:
JSON_XHR_URL
body
:
xmlPostBody
requestHeaders
:
[
{
name
:
"
Content
-
Type
"
value
:
"
application
/
xml
"
}
]
}
)
;
let
tabBody
=
await
selectNetInfoTab
(
hud
netInfoBody
"
post
"
)
;
let
rawPostContent
=
tabBody
.
querySelector
(
"
.
netInfoGroup
.
raw
.
opened
.
netInfoGroupContent
"
)
;
is
(
rawPostContent
.
textContent
xmlPostBody
"
Raw
response
group
must
not
be
collapsed
"
)
;
}
)
;
