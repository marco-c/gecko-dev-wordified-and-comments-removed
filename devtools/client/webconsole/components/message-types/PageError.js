"
use
strict
"
;
const
{
createFactory
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
Message
=
createFactory
(
require
(
"
devtools
/
client
/
webconsole
/
components
/
Message
"
)
)
;
PageError
.
displayName
=
"
PageError
"
;
PageError
.
propTypes
=
{
message
:
PropTypes
.
object
.
isRequired
open
:
PropTypes
.
bool
timestampsVisible
:
PropTypes
.
bool
.
isRequired
serviceContainer
:
PropTypes
.
object
}
;
PageError
.
defaultProps
=
{
open
:
false
}
;
function
PageError
(
props
)
{
const
{
dispatch
message
open
repeat
serviceContainer
timestampsVisible
}
=
props
;
const
{
id
:
messageId
indent
source
type
level
messageText
stacktrace
frame
exceptionDocURL
timeStamp
notes
}
=
message
;
let
messageBody
;
if
(
typeof
messageText
=
=
=
"
string
"
)
{
messageBody
=
messageText
;
}
else
if
(
typeof
messageText
=
=
=
"
object
"
&
&
messageText
.
type
=
=
=
"
longString
"
)
{
messageBody
=
{
message
.
messageText
.
initial
}
;
}
return
Message
(
{
dispatch
messageId
open
collapsible
:
Array
.
isArray
(
stacktrace
)
source
type
level
topLevelClasses
:
[
]
indent
messageBody
repeat
frame
stacktrace
serviceContainer
exceptionDocURL
timeStamp
notes
timestampsVisible
}
)
;
}
module
.
exports
=
PageError
;
