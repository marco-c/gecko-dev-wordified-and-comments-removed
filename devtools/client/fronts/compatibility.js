"
use
strict
"
;
const
{
FrontClassWithSpec
registerFront
}
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
const
{
compatibilitySpec
}
=
require
(
"
devtools
/
shared
/
specs
/
compatibility
"
)
;
const
PREF_TARGET_BROWSERS
=
"
devtools
.
inspector
.
compatibility
.
target
-
browsers
"
;
class
CompatibilityFront
extends
FrontClassWithSpec
(
compatibilitySpec
)
{
constructor
(
client
targetFront
parentFront
)
{
super
(
client
targetFront
parentFront
)
;
this
.
client
=
client
;
}
async
initialize
(
)
{
const
preferenceFront
=
await
this
.
client
.
mainRoot
.
getFront
(
"
preference
"
)
;
try
{
await
preferenceFront
.
getCharPref
(
PREF_TARGET_BROWSERS
)
;
}
catch
(
e
)
{
await
preferenceFront
.
setCharPref
(
PREF_TARGET_BROWSERS
"
"
)
;
}
}
async
_getTraits
(
)
{
if
(
!
this
.
_traits
)
{
try
{
const
{
traits
}
=
await
super
.
getTraits
(
)
;
this
.
_traits
=
traits
;
}
catch
(
e
)
{
this
.
_traits
=
{
}
;
}
}
return
this
.
_traits
;
}
async
getCSSDeclarationBlockIssues
(
declarationBlock
targetBrowsers
)
{
const
traits
=
await
this
.
_getTraits
(
)
;
if
(
!
traits
.
declarationBlockIssueComputationEnabled
)
{
return
[
]
;
}
return
super
.
getCSSDeclarationBlockIssues
(
declarationBlock
targetBrowsers
)
;
}
}
exports
.
CompatibilityFront
=
CompatibilityFront
;
registerFront
(
CompatibilityFront
)
;
