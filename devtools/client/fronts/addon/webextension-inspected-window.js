"
use
strict
"
;
const
{
webExtensionInspectedWindowSpec
}
=
require
(
"
devtools
/
shared
/
specs
/
addon
/
webextension
-
inspected
-
window
"
)
;
const
{
FrontClassWithSpec
registerFront
}
=
require
(
"
devtools
/
shared
/
protocol
"
)
;
const
{
getAdHocFrontOrPrimitiveGrip
}
=
require
(
"
devtools
/
client
/
fronts
/
object
"
)
;
class
WebExtensionInspectedWindowFront
extends
FrontClassWithSpec
(
webExtensionInspectedWindowSpec
)
{
constructor
(
client
targetFront
parentFront
)
{
super
(
client
targetFront
parentFront
)
;
this
.
formAttributeName
=
"
webExtensionInspectedWindowActor
"
;
}
async
eval
(
webExtensionCallerInfo
expression
options
=
{
}
)
{
const
{
consoleFront
}
=
options
;
if
(
consoleFront
)
{
options
.
evalResultAsGrip
=
true
;
options
.
toolboxConsoleActorID
=
consoleFront
.
actor
;
delete
options
.
consoleFront
;
}
const
response
=
await
super
.
eval
(
webExtensionCallerInfo
expression
options
)
;
if
(
!
consoleFront
)
{
return
response
;
}
if
(
!
response
.
hasOwnProperty
(
"
exceptionInfo
"
)
&
&
!
response
.
hasOwnProperty
(
"
valueGrip
"
)
)
{
throw
new
Error
(
"
Response
does
not
have
exceptionInfo
or
valueGrip
property
"
)
;
}
if
(
response
.
exceptionInfo
)
{
console
.
error
(
response
.
exceptionInfo
.
description
.
.
.
(
response
.
exceptionInfo
.
details
|
|
[
]
)
)
;
return
response
;
}
return
getAdHocFrontOrPrimitiveGrip
(
response
.
valueGrip
consoleFront
|
|
this
)
;
}
}
exports
.
WebExtensionInspectedWindowFront
=
WebExtensionInspectedWindowFront
;
registerFront
(
WebExtensionInspectedWindowFront
)
;
