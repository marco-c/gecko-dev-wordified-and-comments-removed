"
use
strict
"
;
const
{
workerTargetSpec
}
=
require
(
"
resource
:
/
/
devtools
/
shared
/
specs
/
targets
/
worker
.
js
"
)
;
const
{
FrontClassWithSpec
registerFront
}
=
require
(
"
resource
:
/
/
devtools
/
shared
/
protocol
.
js
"
)
;
const
{
TargetMixin
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
fronts
/
targets
/
target
-
mixin
.
js
"
)
;
class
WorkerTargetFront
extends
TargetMixin
(
FrontClassWithSpec
(
workerTargetSpec
)
)
{
get
isDedicatedWorker
(
)
{
return
this
.
_type
=
=
=
Ci
.
nsIWorkerDebugger
.
TYPE_DEDICATED
;
}
get
isSharedWorker
(
)
{
return
this
.
_type
=
=
=
Ci
.
nsIWorkerDebugger
.
TYPE_SHARED
;
}
get
isServiceWorker
(
)
{
return
this
.
_type
=
=
=
Ci
.
nsIWorkerDebugger
.
TYPE_SERVICE
;
}
get
name
(
)
{
return
this
.
_url
.
split
(
"
/
"
)
.
pop
(
)
;
}
form
(
json
)
{
this
.
actorID
=
json
.
actor
;
this
.
targetForm
=
json
;
this
.
_title
=
json
.
title
;
this
.
_url
=
json
.
url
;
this
.
_type
=
json
.
type
;
this
.
id
=
json
.
id
;
this
.
relatedDocumentInnerWindowId
=
json
.
relatedDocumentInnerWindowId
;
}
}
exports
.
WorkerTargetFront
=
WorkerTargetFront
;
registerFront
(
exports
.
WorkerTargetFront
)
;
