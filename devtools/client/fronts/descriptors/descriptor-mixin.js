"
use
strict
"
;
const
{
createCommandsDictionary
}
=
require
(
"
devtools
/
shared
/
commands
/
index
"
)
;
function
DescriptorMixin
(
parentClass
)
{
class
Descriptor
extends
parentClass
{
constructor
(
client
targetFront
parentFront
)
{
super
(
client
targetFront
parentFront
)
;
this
.
_client
=
client
;
this
.
on
(
"
descriptor
-
destroyed
"
this
.
destroy
.
bind
(
this
{
isServerDestroyEvent
:
true
}
)
)
;
this
.
shouldCloseClient
=
false
;
}
get
client
(
)
{
return
this
.
_client
;
}
async
getCommands
(
)
{
if
(
!
this
.
_commands
)
{
this
.
_commands
=
createCommandsDictionary
(
this
)
;
}
return
this
.
_commands
;
}
async
destroy
(
{
isServerDestroyEvent
}
=
{
}
)
{
if
(
this
.
isDestroyed
(
)
)
{
return
;
}
const
{
client
}
=
this
;
if
(
isServerDestroyEvent
)
{
this
.
baseFrontClassDestroy
(
)
;
}
await
super
.
destroy
(
)
;
if
(
this
.
shouldCloseClient
)
{
await
client
.
close
(
)
;
}
}
}
return
Descriptor
;
}
exports
.
DescriptorMixin
=
DescriptorMixin
;
