var
app
=
{
}
;
app
.
TodoModel
=
function
(
key
)
{
this
.
key
=
key
;
this
.
todos
=
[
]
;
this
.
onChanges
=
[
]
;
}
;
app
.
TodoModel
.
prototype
.
addTodo
=
function
(
title
)
{
this
.
todos
=
this
.
todos
.
concat
(
[
{
id
:
Utils
.
uuid
(
)
title
:
title
completed
:
false
}
]
)
;
}
;
app
.
TodoModel
.
prototype
.
inform
=
function
(
)
{
return
null
;
}
;
app
.
TodoModel
.
prototype
.
toggleAll
=
function
(
checked
)
{
this
.
todos
=
this
.
todos
.
map
(
function
(
todo
)
{
return
Object
.
assign
(
{
}
todo
{
completed
:
checked
}
)
;
}
)
;
this
.
inform
(
)
;
}
;
app
.
TodoModel
.
prototype
.
toggle
=
function
(
todoToToggle
)
{
this
.
todos
=
this
.
todos
.
map
(
function
(
todo
)
{
return
todo
!
=
=
todoToToggle
?
todo
:
Object
.
assign
(
{
}
todo
{
completed
:
!
todo
.
completed
}
)
;
}
)
;
this
.
inform
(
)
;
}
;
app
.
TodoModel
.
prototype
.
destroy
=
function
(
todo
)
{
this
.
todos
=
this
.
todos
.
filter
(
function
(
candidate
)
{
return
candidate
!
=
=
todo
;
}
)
;
this
.
inform
(
)
;
}
;
app
.
TodoModel
.
prototype
.
save
=
function
(
todoToSave
text
)
{
this
.
todos
=
this
.
todos
.
map
(
function
(
todo
)
{
return
todo
!
=
=
todoToSave
?
todo
:
Object
.
assign
(
{
}
todo
{
title
:
text
}
)
;
}
)
;
this
.
inform
(
)
;
}
;
app
.
TodoModel
.
prototype
.
clearCompleted
=
function
(
)
{
this
.
todos
=
this
.
todos
.
filter
(
function
(
todo
)
{
return
!
todo
.
completed
;
}
)
;
this
.
inform
(
)
;
}
;
function
testModel
(
)
{
const
model
=
new
app
.
TodoModel
(
)
;
model
.
clearCompleted
(
)
;
}
