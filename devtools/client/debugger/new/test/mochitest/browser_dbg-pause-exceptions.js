function
uncaughtException
(
)
{
return
invokeInTab
(
"
uncaughtException
"
)
.
catch
(
(
)
=
>
{
}
)
;
}
function
caughtException
(
)
{
return
invokeInTab
(
"
caughtException
"
)
;
}
add_task
(
function
*
(
)
{
const
dbg
=
yield
initDebugger
(
"
doc
-
exceptions
.
html
"
)
;
yield
uncaughtException
(
)
;
ok
(
!
isPaused
(
dbg
)
)
;
yield
togglePauseOnExceptions
(
dbg
true
false
)
;
uncaughtException
(
)
;
yield
waitForPaused
(
dbg
)
;
assertPausedLocation
(
dbg
"
exceptions
.
js
"
2
)
;
yield
resume
(
dbg
)
;
caughtException
(
)
;
yield
waitForPaused
(
dbg
)
;
assertPausedLocation
(
dbg
"
exceptions
.
js
"
15
)
;
yield
resume
(
dbg
)
;
yield
togglePauseOnExceptions
(
dbg
true
true
)
;
caughtException
(
)
;
yield
waitForPaused
(
dbg
)
;
assertPausedLocation
(
dbg
"
exceptions
.
js
"
17
)
;
yield
resume
(
dbg
)
;
}
)
;
