function
waitForInspectorPanelChange
(
dbg
)
{
const
{
toolbox
}
=
dbg
;
return
new
Promise
(
resolve
=
>
{
toolbox
.
getPanelWhenReady
(
"
inspector
"
)
.
then
(
(
)
=
>
{
ok
(
toolbox
.
inspector
"
Inspector
is
shown
.
"
)
;
resolve
(
toolbox
.
inspector
)
;
}
)
;
}
)
;
}
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
script
-
switching
.
html
"
)
;
await
addExpression
(
dbg
"
window
.
document
.
body
.
firstChild
"
)
;
await
waitForElement
(
dbg
"
openInspector
"
)
;
findElement
(
dbg
"
openInspector
"
)
.
click
(
)
;
await
waitForInspectorPanelChange
(
dbg
)
;
}
)
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
event
-
handler
.
html
"
)
;
invokeInTab
(
"
synthesizeClick
"
)
;
await
waitForPaused
(
dbg
)
;
findElement
(
dbg
"
frame
"
2
)
.
focus
(
)
;
await
clickElement
(
dbg
"
frame
"
2
)
;
await
tryHovering
(
dbg
5
8
"
popup
"
)
;
await
waitForElement
(
dbg
"
openInspector
"
)
;
findElement
(
dbg
"
openInspector
"
)
.
click
(
)
;
await
waitForInspectorPanelChange
(
dbg
)
;
}
)
;
