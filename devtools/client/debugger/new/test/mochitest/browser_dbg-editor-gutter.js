function
clickGutter
(
dbg
line
)
{
clickElement
(
dbg
"
gutter
"
line
)
;
}
function
getLineEl
(
dbg
line
)
{
const
lines
=
dbg
.
win
.
document
.
querySelectorAll
(
"
.
CodeMirror
-
code
>
div
"
)
;
return
lines
[
line
-
1
]
;
}
function
assertEditorBreakpoint
(
dbg
line
shouldExist
)
{
const
exists
=
!
!
getLineEl
(
dbg
line
)
.
querySelector
(
"
.
new
-
breakpoint
"
)
;
ok
(
exists
=
=
=
shouldExist
"
Breakpoint
"
+
(
shouldExist
?
"
exists
"
:
"
does
not
exist
"
)
+
"
on
line
"
+
line
)
;
}
add_task
(
function
*
(
)
{
const
dbg
=
yield
initDebugger
(
"
doc
-
scripts
.
html
"
)
;
const
{
selectors
:
{
getBreakpoints
getBreakpoint
}
getState
}
=
dbg
;
const
source
=
findSource
(
dbg
"
simple1
.
js
"
)
;
yield
selectSource
(
dbg
source
.
url
)
;
clickGutter
(
dbg
4
)
;
yield
waitForDispatch
(
dbg
"
ADD_BREAKPOINT
"
)
;
is
(
getBreakpoints
(
getState
(
)
)
.
size
1
"
One
breakpoint
exists
"
)
;
assertEditorBreakpoint
(
dbg
4
true
)
;
clickGutter
(
dbg
4
)
;
yield
waitForDispatch
(
dbg
"
REMOVE_BREAKPOINT
"
)
;
is
(
getBreakpoints
(
getState
(
)
)
.
size
0
"
No
breakpoints
exist
"
)
;
assertEditorBreakpoint
(
dbg
4
false
)
;
clickGutter
(
dbg
2
)
;
yield
waitForDispatch
(
dbg
"
ADD_BREAKPOINT
"
)
;
is
(
getBreakpoints
(
getState
(
)
)
.
size
1
"
One
breakpoint
exists
"
)
;
ok
(
getBreakpoint
(
getState
(
)
{
sourceId
:
source
.
id
line
:
4
}
)
"
Breakpoint
has
correct
line
"
)
;
assertEditorBreakpoint
(
dbg
2
false
)
;
assertEditorBreakpoint
(
dbg
4
true
)
;
clickGutter
(
dbg
2
)
;
yield
waitForDispatch
(
dbg
"
ADD_BREAKPOINT
"
)
;
is
(
getBreakpoints
(
getState
(
)
)
.
size
1
"
One
breakpoint
exists
"
)
;
assertEditorBreakpoint
(
dbg
2
false
)
;
assertEditorBreakpoint
(
dbg
4
true
)
;
clickGutter
(
dbg
4
)
;
yield
waitForDispatch
(
dbg
"
REMOVE_BREAKPOINT
"
)
;
is
(
getBreakpoints
(
getState
(
)
)
.
size
0
"
No
breakpoints
exist
"
)
;
assertEditorBreakpoint
(
dbg
4
false
)
;
}
)
;
