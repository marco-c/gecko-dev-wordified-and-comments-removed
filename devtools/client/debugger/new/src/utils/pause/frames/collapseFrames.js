import
{
get
findIndex
}
from
"
lodash
"
;
import
type
{
LocalFrame
}
from
"
.
.
/
.
.
/
.
.
/
components
/
SecondaryPanes
/
Frames
/
types
"
;
import
{
getFrameUrl
}
from
"
.
/
getFrameUrl
"
;
function
collapseLastFrames
(
frames
)
{
const
index
=
findIndex
(
frames
frame
=
>
getFrameUrl
(
frame
)
.
match
(
/
webpack
\
/
bootstrap
/
i
)
)
;
if
(
index
=
=
-
1
)
{
return
{
newFrames
:
frames
lastGroup
:
[
]
}
;
}
const
newFrames
=
frames
.
slice
(
0
index
)
;
const
lastGroup
=
frames
.
slice
(
index
)
;
return
{
newFrames
lastGroup
}
;
}
type
FrameGroup
=
LocalFrame
[
]
;
type
GroupedFrames
=
Array
<
FrameGroup
|
LocalFrame
>
;
export
function
collapseFrames
(
frames
:
LocalFrame
[
]
)
:
GroupedFrames
{
function
addGroupToList
(
group
list
)
{
if
(
!
group
)
{
return
list
;
}
if
(
group
.
length
>
1
)
{
list
.
push
(
group
)
;
}
else
{
list
=
list
.
concat
(
group
)
;
}
return
list
;
}
const
{
newFrames
lastGroup
}
=
collapseLastFrames
(
frames
)
;
frames
=
newFrames
;
let
items
=
[
]
;
let
currentGroup
=
null
;
let
prevItem
=
null
;
for
(
const
frame
of
frames
)
{
const
prevLibrary
=
get
(
prevItem
"
library
"
)
;
if
(
!
currentGroup
)
{
currentGroup
=
[
frame
]
;
}
else
if
(
prevLibrary
&
&
prevLibrary
=
=
frame
.
library
)
{
currentGroup
.
push
(
frame
)
;
}
else
{
items
=
addGroupToList
(
currentGroup
items
)
;
currentGroup
=
[
frame
]
;
}
prevItem
=
frame
;
}
items
=
addGroupToList
(
currentGroup
items
)
;
items
=
addGroupToList
(
lastGroup
items
)
;
return
items
;
}
