import
{
sortBy
}
from
"
lodash
"
;
import
{
getSelectedLocation
}
from
"
.
/
source
-
maps
"
;
import
type
{
MappedLocation
PartialPosition
SourceLocation
SourceId
Source
}
from
"
.
.
/
types
"
;
type
IncompleteLocation
=
{
sourceId
:
SourceId
line
?
:
number
column
?
:
number
sourceUrl
?
:
string
}
;
export
function
comparePosition
(
a
:
?
PartialPosition
b
:
?
PartialPosition
)
{
return
a
&
&
b
&
&
a
.
line
=
=
b
.
line
&
&
a
.
column
=
=
b
.
column
;
}
export
function
createLocation
(
{
sourceId
line
=
1
column
sourceUrl
=
"
"
}
:
IncompleteLocation
)
:
SourceLocation
{
return
{
sourceId
line
column
sourceUrl
}
;
}
export
function
sortSelectedLocations
<
T
:
MappedLocation
>
(
locations
:
ReadOnlyArray
<
T
>
selectedSource
:
?
Source
)
:
Array
<
T
>
{
return
sortBy
(
locations
[
location
=
>
getSelectedLocation
(
location
selectedSource
)
.
line
location
=
>
{
const
selectedLocation
=
getSelectedLocation
(
location
selectedSource
)
;
return
selectedLocation
.
column
=
=
=
undefined
|
|
selectedLocation
.
column
;
}
]
)
;
}
