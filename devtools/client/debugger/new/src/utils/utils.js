export
function
handleError
(
err
:
any
)
{
console
.
log
(
"
ERROR
:
"
err
)
;
}
export
function
promisify
(
context
:
any
method
:
any
.
.
.
args
:
any
)
:
Promise
<
mixed
>
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
args
.
push
(
response
=
>
{
if
(
response
.
error
)
{
reject
(
response
)
;
}
else
{
resolve
(
response
)
;
}
}
)
;
method
.
apply
(
context
args
)
;
}
)
;
}
export
function
endTruncateStr
(
str
:
any
size
:
number
)
{
if
(
str
.
length
>
size
)
{
return
{
str
.
slice
(
str
.
length
-
size
)
}
;
}
return
str
;
}
export
function
waitForMs
(
ms
:
number
)
:
Promise
<
void
>
{
return
new
Promise
(
resolve
=
>
setTimeout
(
resolve
ms
)
)
;
}
