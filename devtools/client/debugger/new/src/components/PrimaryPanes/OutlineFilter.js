import
React
{
Component
}
from
"
react
"
;
import
classnames
from
"
classnames
"
;
import
"
.
/
OutlineFilter
.
css
"
;
type
Props
=
{
filter
:
string
updateFilter
:
(
filter
:
string
)
=
>
void
}
;
type
State
=
{
focused
:
boolean
}
;
export
default
class
OutlineFilter
extends
Component
<
Props
State
>
{
state
=
{
focused
:
false
}
;
setFocus
=
(
shouldFocus
:
boolean
)
=
>
{
this
.
setState
(
{
focused
:
shouldFocus
}
)
;
}
;
onChange
=
(
e
:
SyntheticInputEvent
<
HTMLElement
>
)
=
>
{
this
.
props
.
updateFilter
(
e
.
target
.
value
)
;
}
;
onKeyDown
=
(
e
:
SyntheticKeyboardEvent
<
HTMLInputElement
>
)
=
>
{
if
(
e
.
key
=
=
=
"
Escape
"
&
&
this
.
props
.
filter
!
=
=
"
"
)
{
e
.
preventDefault
(
)
;
this
.
props
.
updateFilter
(
"
"
)
;
}
}
;
render
(
)
{
const
{
focused
}
=
this
.
state
;
return
(
<
div
className
=
"
outline
-
filter
"
>
<
form
>
<
input
className
=
{
classnames
(
"
outline
-
filter
-
input
"
{
focused
}
)
}
onFocus
=
{
(
)
=
>
this
.
setFocus
(
true
)
}
onBlur
=
{
(
)
=
>
this
.
setFocus
(
false
)
}
placeholder
=
{
L10N
.
getStr
(
"
outline
.
placeholder
"
)
}
value
=
{
this
.
props
.
filter
}
type
=
"
text
"
onChange
=
{
this
.
onChange
}
onKeyDown
=
{
this
.
onKeyDown
}
/
>
<
/
form
>
<
/
div
>
)
;
}
}
