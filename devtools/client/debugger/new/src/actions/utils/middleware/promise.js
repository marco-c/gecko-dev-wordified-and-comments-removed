"
use
strict
"
;
Object
.
defineProperty
(
exports
"
__esModule
"
{
value
:
true
}
)
;
exports
.
promise
=
exports
.
PROMISE
=
undefined
;
var
_lodash
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
lodash
"
)
;
var
_DevToolsUtils
=
require
(
"
.
.
/
.
.
/
.
.
/
utils
/
DevToolsUtils
"
)
;
let
seqIdVal
=
1
;
function
seqIdGen
(
)
{
return
seqIdVal
+
+
;
}
function
filterAction
(
action
)
{
return
(
0
_lodash
.
fromPairs
)
(
(
0
_lodash
.
toPairs
)
(
action
)
.
filter
(
pair
=
>
pair
[
0
]
!
=
=
PROMISE
)
)
;
}
function
promiseMiddleware
(
{
dispatch
getState
}
)
{
return
next
=
>
action
=
>
{
if
(
!
(
PROMISE
in
action
)
)
{
return
next
(
action
)
;
}
const
promiseInst
=
action
[
PROMISE
]
;
const
seqId
=
seqIdGen
(
)
.
toString
(
)
;
action
=
{
.
.
.
filterAction
(
action
)
seqId
}
;
dispatch
(
{
.
.
.
action
status
:
"
start
"
}
)
;
return
new
Promise
(
(
resolve
reject
)
=
>
{
promiseInst
.
then
(
value
=
>
{
(
0
_DevToolsUtils
.
executeSoon
)
(
(
)
=
>
{
dispatch
(
{
.
.
.
action
status
:
"
done
"
value
:
value
}
)
;
resolve
(
value
)
;
}
)
;
}
error
=
>
{
(
0
_DevToolsUtils
.
executeSoon
)
(
(
)
=
>
{
dispatch
(
{
.
.
.
action
status
:
"
error
"
error
:
error
.
message
|
|
error
}
)
;
reject
(
error
)
;
}
)
;
}
)
;
}
)
;
}
;
}
const
PROMISE
=
exports
.
PROMISE
=
"
dispatch
/
promise
"
;
exports
.
promise
=
promiseMiddleware
;
