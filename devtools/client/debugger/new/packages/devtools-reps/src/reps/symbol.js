const
PropTypes
=
require
(
"
prop
-
types
"
)
;
const
{
getGripType
wrapRender
}
=
require
(
"
.
/
rep
-
utils
"
)
;
const
dom
=
require
(
"
react
-
dom
-
factories
"
)
;
const
{
rep
:
StringRep
}
=
require
(
"
.
/
string
"
)
;
const
{
span
}
=
dom
;
const
MAX_STRING_LENGTH
=
50
;
SymbolRep
.
propTypes
=
{
object
:
PropTypes
.
object
.
isRequired
}
;
function
SymbolRep
(
props
)
{
const
{
className
=
"
objectBox
objectBox
-
symbol
"
object
}
=
props
;
const
{
name
}
=
object
;
let
symbolText
=
name
|
|
"
"
;
if
(
name
&
&
name
.
type
&
&
name
.
type
=
=
=
"
longString
"
)
{
symbolText
=
StringRep
(
{
object
:
symbolText
shouldCrop
:
true
cropLimit
:
MAX_STRING_LENGTH
useQuotes
:
false
}
)
;
}
return
span
(
{
className
"
data
-
link
-
actor
-
id
"
:
object
.
actor
}
"
Symbol
(
"
symbolText
"
)
"
)
;
}
function
supportsObject
(
object
noGrip
=
false
)
{
return
getGripType
(
object
noGrip
)
=
=
"
symbol
"
;
}
module
.
exports
=
{
rep
:
wrapRender
(
SymbolRep
)
supportsObject
}
;
