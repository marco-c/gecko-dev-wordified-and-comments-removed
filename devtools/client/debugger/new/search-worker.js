(
function
webpackUniversalModuleDefinition
(
root
factory
)
{
if
(
typeof
exports
=
=
=
'
object
'
&
&
typeof
module
=
=
=
'
object
'
)
module
.
exports
=
factory
(
)
;
else
if
(
typeof
define
=
=
=
'
function
'
&
&
define
.
amd
)
define
(
[
]
factory
)
;
else
{
var
a
=
factory
(
)
;
for
(
var
i
in
a
)
(
typeof
exports
=
=
=
'
object
'
?
exports
:
root
)
[
i
]
=
a
[
i
]
;
}
}
)
(
typeof
self
!
=
=
'
undefined
'
?
self
:
this
function
(
)
{
return
(
function
(
modules
)
{
var
installedModules
=
{
}
;
function
__webpack_require__
(
moduleId
)
{
if
(
installedModules
[
moduleId
]
)
{
return
installedModules
[
moduleId
]
.
exports
;
}
var
module
=
installedModules
[
moduleId
]
=
{
i
:
moduleId
l
:
false
exports
:
{
}
}
;
modules
[
moduleId
]
.
call
(
module
.
exports
module
module
.
exports
__webpack_require__
)
;
module
.
l
=
true
;
return
module
.
exports
;
}
__webpack_require__
.
m
=
modules
;
__webpack_require__
.
c
=
installedModules
;
__webpack_require__
.
d
=
function
(
exports
name
getter
)
{
if
(
!
__webpack_require__
.
o
(
exports
name
)
)
{
Object
.
defineProperty
(
exports
name
{
configurable
:
false
enumerable
:
true
get
:
getter
}
)
;
}
}
;
__webpack_require__
.
n
=
function
(
module
)
{
var
getter
=
module
&
&
module
.
__esModule
?
function
getDefault
(
)
{
return
module
[
'
default
'
]
;
}
:
function
getModuleExports
(
)
{
return
module
;
}
;
__webpack_require__
.
d
(
getter
'
a
'
getter
)
;
return
getter
;
}
;
__webpack_require__
.
o
=
function
(
object
property
)
{
return
Object
.
prototype
.
hasOwnProperty
.
call
(
object
property
)
;
}
;
__webpack_require__
.
p
=
"
/
assets
/
build
"
;
return
__webpack_require__
(
__webpack_require__
.
s
=
814
)
;
}
)
(
{
16
:
(
function
(
module
exports
)
{
var
isArray
=
Array
.
isArray
;
module
.
exports
=
isArray
;
}
)
164
:
(
function
(
module
exports
__webpack_require__
)
{
"
use
strict
"
;
Object
.
defineProperty
(
exports
"
__esModule
"
{
value
:
true
}
)
;
exports
.
default
=
buildQuery
;
var
_escapeRegExp
=
__webpack_require__
(
165
)
;
var
_escapeRegExp2
=
_interopRequireDefault
(
_escapeRegExp
)
;
function
_interopRequireDefault
(
obj
)
{
return
obj
&
&
obj
.
__esModule
?
obj
:
{
default
:
obj
}
;
}
function
ignoreWhiteSpace
(
str
)
{
return
(
/
^
\
s
{
0
2
}
/
.
test
(
str
)
?
"
(
?
!
\
\
s
*
.
*
)
"
:
str
)
;
}
function
wholeMatch
(
query
wholeWord
)
{
if
(
query
=
=
=
"
"
|
|
!
wholeWord
)
{
return
query
;
}
return
\
\
b
{
query
}
\
\
b
;
}
function
buildFlags
(
caseSensitive
isGlobal
)
{
if
(
caseSensitive
&
&
isGlobal
)
{
return
"
g
"
;
}
if
(
!
caseSensitive
&
&
isGlobal
)
{
return
"
gi
"
;
}
if
(
!
caseSensitive
&
&
!
isGlobal
)
{
return
"
i
"
;
}
return
;
}
function
buildQuery
(
originalQuery
modifiers
{
isGlobal
=
false
ignoreSpaces
=
false
}
)
{
const
{
caseSensitive
regexMatch
wholeWord
}
=
modifiers
;
if
(
originalQuery
=
=
=
"
"
)
{
return
new
RegExp
(
originalQuery
)
;
}
let
query
=
originalQuery
;
if
(
ignoreSpaces
)
{
query
=
ignoreWhiteSpace
(
query
)
;
}
if
(
!
regexMatch
)
{
query
=
(
0
_escapeRegExp2
.
default
)
(
query
)
;
}
query
=
wholeMatch
(
query
wholeWord
)
;
const
flags
=
buildFlags
(
caseSensitive
isGlobal
)
;
if
(
flags
)
{
return
new
RegExp
(
query
flags
)
;
}
return
new
RegExp
(
query
)
;
}
}
)
165
:
(
function
(
module
exports
__webpack_require__
)
{
var
toString
=
__webpack_require__
(
55
)
;
var
reRegExpChar
=
/
[
\
\
^
.
*
+
?
(
)
[
\
]
{
}
|
]
/
g
reHasRegExpChar
=
RegExp
(
reRegExpChar
.
source
)
;
function
escapeRegExp
(
string
)
{
string
=
toString
(
string
)
;
return
(
string
&
&
reHasRegExpChar
.
test
(
string
)
)
?
string
.
replace
(
reRegExpChar
'
\
\
&
'
)
:
string
;
}
module
.
exports
=
escapeRegExp
;
}
)
18
:
(
function
(
module
exports
__webpack_require__
)
{
var
freeGlobal
=
__webpack_require__
(
52
)
;
var
freeSelf
=
typeof
self
=
=
'
object
'
&
&
self
&
&
self
.
Object
=
=
=
Object
&
&
self
;
var
root
=
freeGlobal
|
|
freeSelf
|
|
Function
(
'
return
this
'
)
(
)
;
module
.
exports
=
root
;
}
)
20
:
(
function
(
module
exports
__webpack_require__
)
{
var
root
=
__webpack_require__
(
18
)
;
var
Symbol
=
root
.
Symbol
;
module
.
exports
=
Symbol
;
}
)
21
:
(
function
(
module
exports
)
{
function
isObjectLike
(
value
)
{
return
value
!
=
null
&
&
typeof
value
=
=
'
object
'
;
}
module
.
exports
=
isObjectLike
;
}
)
23
:
(
function
(
module
exports
__webpack_require__
)
{
var
Symbol
=
__webpack_require__
(
20
)
getRawTag
=
__webpack_require__
(
63
)
objectToString
=
__webpack_require__
(
64
)
;
var
nullTag
=
'
[
object
Null
]
'
undefinedTag
=
'
[
object
Undefined
]
'
;
var
symToStringTag
=
Symbol
?
Symbol
.
toStringTag
:
undefined
;
function
baseGetTag
(
value
)
{
if
(
value
=
=
null
)
{
return
value
=
=
=
undefined
?
undefinedTag
:
nullTag
;
}
return
(
symToStringTag
&
&
symToStringTag
in
Object
(
value
)
)
?
getRawTag
(
value
)
:
objectToString
(
value
)
;
}
module
.
exports
=
baseGetTag
;
}
)
27
:
(
function
(
module
exports
__webpack_require__
)
{
const
networkRequest
=
__webpack_require__
(
46
)
;
const
workerUtils
=
__webpack_require__
(
47
)
;
module
.
exports
=
{
networkRequest
workerUtils
}
;
}
)
30
:
(
function
(
module
exports
__webpack_require__
)
{
var
baseGetTag
=
__webpack_require__
(
23
)
isObjectLike
=
__webpack_require__
(
21
)
;
var
symbolTag
=
'
[
object
Symbol
]
'
;
function
isSymbol
(
value
)
{
return
typeof
value
=
=
'
symbol
'
|
|
(
isObjectLike
(
value
)
&
&
baseGetTag
(
value
)
=
=
symbolTag
)
;
}
module
.
exports
=
isSymbol
;
}
)
40
:
(
function
(
module
exports
)
{
var
g
;
g
=
(
function
(
)
{
return
this
;
}
)
(
)
;
try
{
g
=
g
|
|
Function
(
"
return
this
"
)
(
)
|
|
(
1
eval
)
(
"
this
"
)
;
}
catch
(
e
)
{
if
(
typeof
window
=
=
=
"
object
"
)
g
=
window
;
}
module
.
exports
=
g
;
}
)
46
:
(
function
(
module
exports
)
{
function
networkRequest
(
url
opts
)
{
return
fetch
(
url
{
cache
:
opts
.
loadFromCache
?
"
default
"
:
"
no
-
cache
"
}
)
.
then
(
res
=
>
{
if
(
res
.
status
>
=
200
&
&
res
.
status
<
300
)
{
return
res
.
text
(
)
.
then
(
text
=
>
(
{
content
:
text
}
)
)
;
}
return
Promise
.
reject
(
request
failed
with
status
{
res
.
status
}
)
;
}
)
;
}
module
.
exports
=
networkRequest
;
}
)
47
:
(
function
(
module
exports
)
{
function
_asyncToGenerator
(
fn
)
{
return
function
(
)
{
var
gen
=
fn
.
apply
(
this
arguments
)
;
return
new
Promise
(
function
(
resolve
reject
)
{
function
step
(
key
arg
)
{
try
{
var
info
=
gen
[
key
]
(
arg
)
;
var
value
=
info
.
value
;
}
catch
(
error
)
{
reject
(
error
)
;
return
;
}
if
(
info
.
done
)
{
resolve
(
value
)
;
}
else
{
return
Promise
.
resolve
(
value
)
.
then
(
function
(
value
)
{
step
(
"
next
"
value
)
;
}
function
(
err
)
{
step
(
"
throw
"
err
)
;
}
)
;
}
}
return
step
(
"
next
"
)
;
}
)
;
}
;
}
function
WorkerDispatcher
(
)
{
this
.
msgId
=
1
;
this
.
worker
=
null
;
}
WorkerDispatcher
.
prototype
=
{
start
(
url
)
{
this
.
worker
=
new
Worker
(
url
)
;
this
.
worker
.
onerror
=
(
)
=
>
{
console
.
error
(
Error
in
worker
{
url
}
)
;
}
;
}
stop
(
)
{
if
(
!
this
.
worker
)
{
return
;
}
this
.
worker
.
terminate
(
)
;
this
.
worker
=
null
;
}
task
(
method
)
{
return
(
.
.
.
args
)
=
>
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
const
id
=
this
.
msgId
+
+
;
this
.
worker
.
postMessage
(
{
id
method
args
}
)
;
const
listener
=
(
{
data
:
result
}
)
=
>
{
if
(
result
.
id
!
=
=
id
)
{
return
;
}
if
(
!
this
.
worker
)
{
return
;
}
this
.
worker
.
removeEventListener
(
"
message
"
listener
)
;
if
(
result
.
error
)
{
reject
(
result
.
error
)
;
}
else
{
resolve
(
result
.
response
)
;
}
}
;
this
.
worker
.
addEventListener
(
"
message
"
listener
)
;
}
)
;
}
;
}
}
;
function
workerHandler
(
publicInterface
)
{
return
function
(
msg
)
{
const
{
id
method
args
}
=
msg
.
data
;
try
{
const
response
=
publicInterface
[
method
]
.
apply
(
undefined
args
)
;
if
(
response
instanceof
Promise
)
{
response
.
then
(
val
=
>
self
.
postMessage
(
{
id
response
:
val
}
)
err
=
>
self
.
postMessage
(
{
id
error
:
err
.
toString
(
)
}
)
)
;
}
else
{
self
.
postMessage
(
{
id
response
}
)
;
}
}
catch
(
error
)
{
self
.
postMessage
(
{
id
error
:
error
.
toString
(
)
}
)
;
}
}
;
}
function
streamingWorkerHandler
(
publicInterface
{
timeout
=
100
}
=
{
}
worker
=
self
)
{
let
streamingWorker
=
(
(
)
=
>
{
var
_ref
=
_asyncToGenerator
(
function
*
(
id
tasks
)
{
let
isWorking
=
true
;
const
intervalId
=
setTimeout
(
function
(
)
{
isWorking
=
false
;
}
timeout
)
;
const
results
=
[
]
;
while
(
tasks
.
length
!
=
=
0
&
&
isWorking
)
{
const
{
callback
context
args
}
=
tasks
.
shift
(
)
;
const
result
=
yield
callback
.
call
(
context
args
)
;
results
.
push
(
result
)
;
}
worker
.
postMessage
(
{
id
status
:
"
pending
"
data
:
results
}
)
;
clearInterval
(
intervalId
)
;
if
(
tasks
.
length
!
=
=
0
)
{
yield
streamingWorker
(
id
tasks
)
;
}
}
)
;
return
function
streamingWorker
(
_x
_x2
)
{
return
_ref
.
apply
(
this
arguments
)
;
}
;
}
)
(
)
;
return
(
(
)
=
>
{
var
_ref2
=
_asyncToGenerator
(
function
*
(
msg
)
{
const
{
id
method
args
}
=
msg
.
data
;
const
workerMethod
=
publicInterface
[
method
]
;
if
(
!
workerMethod
)
{
console
.
error
(
Could
not
find
{
method
}
defined
in
worker
.
)
;
}
worker
.
postMessage
(
{
id
status
:
"
start
"
}
)
;
try
{
const
tasks
=
workerMethod
(
args
)
;
yield
streamingWorker
(
id
tasks
)
;
worker
.
postMessage
(
{
id
status
:
"
done
"
}
)
;
}
catch
(
error
)
{
worker
.
postMessage
(
{
id
status
:
"
error
"
error
}
)
;
}
}
)
;
return
function
(
_x3
)
{
return
_ref2
.
apply
(
this
arguments
)
;
}
;
}
)
(
)
;
}
module
.
exports
=
{
WorkerDispatcher
workerHandler
streamingWorkerHandler
}
;
}
)
52
:
(
function
(
module
exports
__webpack_require__
)
{
(
function
(
global
)
{
var
freeGlobal
=
typeof
global
=
=
'
object
'
&
&
global
&
&
global
.
Object
=
=
=
Object
&
&
global
;
module
.
exports
=
freeGlobal
;
}
.
call
(
exports
__webpack_require__
(
40
)
)
)
}
)
55
:
(
function
(
module
exports
__webpack_require__
)
{
var
baseToString
=
__webpack_require__
(
67
)
;
function
toString
(
value
)
{
return
value
=
=
null
?
'
'
:
baseToString
(
value
)
;
}
module
.
exports
=
toString
;
}
)
56
:
(
function
(
module
exports
)
{
function
arrayMap
(
array
iteratee
)
{
var
index
=
-
1
length
=
array
=
=
null
?
0
:
array
.
length
result
=
Array
(
length
)
;
while
(
+
+
index
<
length
)
{
result
[
index
]
=
iteratee
(
array
[
index
]
index
array
)
;
}
return
result
;
}
module
.
exports
=
arrayMap
;
}
)
63
:
(
function
(
module
exports
__webpack_require__
)
{
var
Symbol
=
__webpack_require__
(
20
)
;
var
objectProto
=
Object
.
prototype
;
var
hasOwnProperty
=
objectProto
.
hasOwnProperty
;
var
nativeObjectToString
=
objectProto
.
toString
;
var
symToStringTag
=
Symbol
?
Symbol
.
toStringTag
:
undefined
;
function
getRawTag
(
value
)
{
var
isOwn
=
hasOwnProperty
.
call
(
value
symToStringTag
)
tag
=
value
[
symToStringTag
]
;
try
{
value
[
symToStringTag
]
=
undefined
;
var
unmasked
=
true
;
}
catch
(
e
)
{
}
var
result
=
nativeObjectToString
.
call
(
value
)
;
if
(
unmasked
)
{
if
(
isOwn
)
{
value
[
symToStringTag
]
=
tag
;
}
else
{
delete
value
[
symToStringTag
]
;
}
}
return
result
;
}
module
.
exports
=
getRawTag
;
}
)
64
:
(
function
(
module
exports
)
{
var
objectProto
=
Object
.
prototype
;
var
nativeObjectToString
=
objectProto
.
toString
;
function
objectToString
(
value
)
{
return
nativeObjectToString
.
call
(
value
)
;
}
module
.
exports
=
objectToString
;
}
)
67
:
(
function
(
module
exports
__webpack_require__
)
{
var
Symbol
=
__webpack_require__
(
20
)
arrayMap
=
__webpack_require__
(
56
)
isArray
=
__webpack_require__
(
16
)
isSymbol
=
__webpack_require__
(
30
)
;
var
INFINITY
=
1
/
0
;
var
symbolProto
=
Symbol
?
Symbol
.
prototype
:
undefined
symbolToString
=
symbolProto
?
symbolProto
.
toString
:
undefined
;
function
baseToString
(
value
)
{
if
(
typeof
value
=
=
'
string
'
)
{
return
value
;
}
if
(
isArray
(
value
)
)
{
return
arrayMap
(
value
baseToString
)
+
'
'
;
}
if
(
isSymbol
(
value
)
)
{
return
symbolToString
?
symbolToString
.
call
(
value
)
:
'
'
;
}
var
result
=
(
value
+
'
'
)
;
return
(
result
=
=
'
0
'
&
&
(
1
/
value
)
=
=
-
INFINITY
)
?
'
-
0
'
:
result
;
}
module
.
exports
=
baseToString
;
}
)
814
:
(
function
(
module
exports
__webpack_require__
)
{
module
.
exports
=
__webpack_require__
(
815
)
;
}
)
815
:
(
function
(
module
exports
__webpack_require__
)
{
"
use
strict
"
;
var
_getMatches
=
__webpack_require__
(
816
)
;
var
_getMatches2
=
_interopRequireDefault
(
_getMatches
)
;
var
_projectSearch
=
__webpack_require__
(
817
)
;
var
_devtoolsUtils
=
__webpack_require__
(
27
)
;
function
_interopRequireDefault
(
obj
)
{
return
obj
&
&
obj
.
__esModule
?
obj
:
{
default
:
obj
}
;
}
const
{
workerHandler
}
=
_devtoolsUtils
.
workerUtils
;
self
.
onmessage
=
workerHandler
(
{
getMatches
:
_getMatches2
.
default
findSourceMatches
:
_projectSearch
.
findSourceMatches
}
)
;
}
)
816
:
(
function
(
module
exports
__webpack_require__
)
{
"
use
strict
"
;
Object
.
defineProperty
(
exports
"
__esModule
"
{
value
:
true
}
)
;
exports
.
default
=
getMatches
;
var
_buildQuery
=
__webpack_require__
(
164
)
;
var
_buildQuery2
=
_interopRequireDefault
(
_buildQuery
)
;
function
_interopRequireDefault
(
obj
)
{
return
obj
&
&
obj
.
__esModule
?
obj
:
{
default
:
obj
}
;
}
function
getMatches
(
query
text
modifiers
)
{
if
(
!
query
|
|
!
text
|
|
!
modifiers
)
{
return
[
]
;
}
const
regexQuery
=
(
0
_buildQuery2
.
default
)
(
query
modifiers
{
isGlobal
:
true
}
)
;
const
matchedLocations
=
[
]
;
const
lines
=
text
.
split
(
"
\
n
"
)
;
for
(
let
i
=
0
;
i
<
lines
.
length
;
i
+
+
)
{
let
singleMatch
;
const
line
=
lines
[
i
]
;
while
(
(
singleMatch
=
regexQuery
.
exec
(
line
)
)
!
=
=
null
)
{
matchedLocations
.
push
(
{
line
:
i
ch
:
singleMatch
.
index
}
)
;
}
}
return
matchedLocations
;
}
}
)
817
:
(
function
(
module
exports
__webpack_require__
)
{
"
use
strict
"
;
Object
.
defineProperty
(
exports
"
__esModule
"
{
value
:
true
}
)
;
exports
.
findSourceMatches
=
findSourceMatches
;
function
findSourceMatches
(
source
queryText
)
{
const
text
=
source
.
text
;
if
(
source
.
loadedState
!
=
=
"
loaded
"
|
|
!
text
|
|
queryText
=
=
"
"
)
{
return
[
]
;
}
const
lines
=
text
.
split
(
"
\
n
"
)
;
let
result
=
undefined
;
const
query
=
new
RegExp
(
queryText
"
g
"
)
;
let
matches
=
lines
.
map
(
(
_text
line
)
=
>
{
const
indices
=
[
]
;
while
(
result
=
query
.
exec
(
_text
)
)
{
indices
.
push
(
{
sourceId
:
source
.
id
line
:
line
+
1
column
:
result
.
index
match
:
result
[
0
]
value
:
_text
text
:
result
.
input
}
)
;
}
return
indices
;
}
)
.
filter
(
_matches
=
>
_matches
.
length
>
0
)
;
matches
=
[
]
.
concat
(
.
.
.
matches
)
;
return
matches
;
}
}
)
}
)
;
}
)
;
