(
function
webpackUniversalModuleDefinition
(
root
factory
)
{
if
(
typeof
exports
=
=
=
'
object
'
&
&
typeof
module
=
=
=
'
object
'
)
module
.
exports
=
factory
(
)
;
else
if
(
typeof
define
=
=
=
'
function
'
&
&
define
.
amd
)
define
(
[
]
factory
)
;
else
{
var
a
=
factory
(
)
;
for
(
var
i
in
a
)
(
typeof
exports
=
=
=
'
object
'
?
exports
:
root
)
[
i
]
=
a
[
i
]
;
}
}
)
(
this
function
(
)
{
return
(
function
(
modules
)
{
var
installedModules
=
{
}
;
function
__webpack_require__
(
moduleId
)
{
if
(
installedModules
[
moduleId
]
)
return
installedModules
[
moduleId
]
.
exports
;
var
module
=
installedModules
[
moduleId
]
=
{
exports
:
{
}
id
:
moduleId
loaded
:
false
}
;
modules
[
moduleId
]
.
call
(
module
.
exports
module
module
.
exports
__webpack_require__
)
;
module
.
loaded
=
true
;
return
module
.
exports
;
}
__webpack_require__
.
m
=
modules
;
__webpack_require__
.
c
=
installedModules
;
__webpack_require__
.
p
=
"
/
assets
/
build
"
;
return
__webpack_require__
(
0
)
;
}
)
(
{
0
:
function
(
module
exports
__webpack_require__
)
{
module
.
exports
=
__webpack_require__
(
1122
)
;
}
6
:
function
(
module
exports
__webpack_require__
)
{
var
Symbol
=
__webpack_require__
(
7
)
getRawTag
=
__webpack_require__
(
10
)
objectToString
=
__webpack_require__
(
11
)
;
var
nullTag
=
'
[
object
Null
]
'
undefinedTag
=
'
[
object
Undefined
]
'
;
var
symToStringTag
=
Symbol
?
Symbol
.
toStringTag
:
undefined
;
function
baseGetTag
(
value
)
{
if
(
value
=
=
null
)
{
return
value
=
=
=
undefined
?
undefinedTag
:
nullTag
;
}
return
(
symToStringTag
&
&
symToStringTag
in
Object
(
value
)
)
?
getRawTag
(
value
)
:
objectToString
(
value
)
;
}
module
.
exports
=
baseGetTag
;
}
7
:
function
(
module
exports
__webpack_require__
)
{
var
root
=
__webpack_require__
(
8
)
;
var
Symbol
=
root
.
Symbol
;
module
.
exports
=
Symbol
;
}
8
:
function
(
module
exports
__webpack_require__
)
{
var
freeGlobal
=
__webpack_require__
(
9
)
;
var
freeSelf
=
typeof
self
=
=
'
object
'
&
&
self
&
&
self
.
Object
=
=
=
Object
&
&
self
;
var
root
=
freeGlobal
|
|
freeSelf
|
|
Function
(
'
return
this
'
)
(
)
;
module
.
exports
=
root
;
}
9
:
function
(
module
exports
)
{
(
function
(
global
)
{
var
freeGlobal
=
typeof
global
=
=
'
object
'
&
&
global
&
&
global
.
Object
=
=
=
Object
&
&
global
;
module
.
exports
=
freeGlobal
;
}
.
call
(
exports
(
function
(
)
{
return
this
;
}
(
)
)
)
)
}
10
:
function
(
module
exports
__webpack_require__
)
{
var
Symbol
=
__webpack_require__
(
7
)
;
var
objectProto
=
Object
.
prototype
;
var
hasOwnProperty
=
objectProto
.
hasOwnProperty
;
var
nativeObjectToString
=
objectProto
.
toString
;
var
symToStringTag
=
Symbol
?
Symbol
.
toStringTag
:
undefined
;
function
getRawTag
(
value
)
{
var
isOwn
=
hasOwnProperty
.
call
(
value
symToStringTag
)
tag
=
value
[
symToStringTag
]
;
try
{
value
[
symToStringTag
]
=
undefined
;
var
unmasked
=
true
;
}
catch
(
e
)
{
}
var
result
=
nativeObjectToString
.
call
(
value
)
;
if
(
unmasked
)
{
if
(
isOwn
)
{
value
[
symToStringTag
]
=
tag
;
}
else
{
delete
value
[
symToStringTag
]
;
}
}
return
result
;
}
module
.
exports
=
getRawTag
;
}
11
:
function
(
module
exports
)
{
var
objectProto
=
Object
.
prototype
;
var
nativeObjectToString
=
objectProto
.
toString
;
function
objectToString
(
value
)
{
return
nativeObjectToString
.
call
(
value
)
;
}
module
.
exports
=
objectToString
;
}
14
:
function
(
module
exports
)
{
function
isObjectLike
(
value
)
{
return
value
!
=
null
&
&
typeof
value
=
=
'
object
'
;
}
module
.
exports
=
isObjectLike
;
}
70
:
function
(
module
exports
)
{
var
isArray
=
Array
.
isArray
;
module
.
exports
=
isArray
;
}
72
:
function
(
module
exports
__webpack_require__
)
{
var
baseGetTag
=
__webpack_require__
(
6
)
isObjectLike
=
__webpack_require__
(
14
)
;
var
symbolTag
=
'
[
object
Symbol
]
'
;
function
isSymbol
(
value
)
{
return
typeof
value
=
=
'
symbol
'
|
|
(
isObjectLike
(
value
)
&
&
baseGetTag
(
value
)
=
=
symbolTag
)
;
}
module
.
exports
=
isSymbol
;
}
108
:
function
(
module
exports
__webpack_require__
)
{
var
baseToString
=
__webpack_require__
(
109
)
;
function
toString
(
value
)
{
return
value
=
=
null
?
'
'
:
baseToString
(
value
)
;
}
module
.
exports
=
toString
;
}
109
:
function
(
module
exports
__webpack_require__
)
{
var
Symbol
=
__webpack_require__
(
7
)
arrayMap
=
__webpack_require__
(
110
)
isArray
=
__webpack_require__
(
70
)
isSymbol
=
__webpack_require__
(
72
)
;
var
INFINITY
=
1
/
0
;
var
symbolProto
=
Symbol
?
Symbol
.
prototype
:
undefined
symbolToString
=
symbolProto
?
symbolProto
.
toString
:
undefined
;
function
baseToString
(
value
)
{
if
(
typeof
value
=
=
'
string
'
)
{
return
value
;
}
if
(
isArray
(
value
)
)
{
return
arrayMap
(
value
baseToString
)
+
'
'
;
}
if
(
isSymbol
(
value
)
)
{
return
symbolToString
?
symbolToString
.
call
(
value
)
:
'
'
;
}
var
result
=
(
value
+
'
'
)
;
return
(
result
=
=
'
0
'
&
&
(
1
/
value
)
=
=
-
INFINITY
)
?
'
-
0
'
:
result
;
}
module
.
exports
=
baseToString
;
}
110
:
function
(
module
exports
)
{
function
arrayMap
(
array
iteratee
)
{
var
index
=
-
1
length
=
array
=
=
null
?
0
:
array
.
length
result
=
Array
(
length
)
;
while
(
+
+
index
<
length
)
{
result
[
index
]
=
iteratee
(
array
[
index
]
index
array
)
;
}
return
result
;
}
module
.
exports
=
arrayMap
;
}
259
:
function
(
module
exports
__webpack_require__
)
{
var
toString
=
__webpack_require__
(
108
)
;
var
reRegExpChar
=
/
[
\
\
^
.
*
+
?
(
)
[
\
]
{
}
|
]
/
g
reHasRegExpChar
=
RegExp
(
reRegExpChar
.
source
)
;
function
escapeRegExp
(
string
)
{
string
=
toString
(
string
)
;
return
(
string
&
&
reHasRegExpChar
.
test
(
string
)
)
?
string
.
replace
(
reRegExpChar
'
\
\
&
'
)
:
string
;
}
module
.
exports
=
escapeRegExp
;
}
900
:
function
(
module
exports
__webpack_require__
)
{
const
networkRequest
=
__webpack_require__
(
901
)
;
const
workerUtils
=
__webpack_require__
(
902
)
;
module
.
exports
=
{
networkRequest
workerUtils
}
;
}
901
:
function
(
module
exports
)
{
function
networkRequest
(
url
opts
)
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
const
req
=
new
XMLHttpRequest
(
)
;
req
.
addEventListener
(
"
readystatechange
"
(
)
=
>
{
if
(
req
.
readyState
=
=
=
XMLHttpRequest
.
DONE
)
{
if
(
req
.
status
=
=
=
200
)
{
resolve
(
{
content
:
req
.
responseText
}
)
;
}
else
{
resolve
(
req
.
statusText
)
;
}
}
}
)
;
req
.
open
(
"
GET
"
url
)
;
req
.
send
(
)
;
}
)
;
}
module
.
exports
=
networkRequest
;
}
902
:
function
(
module
exports
)
{
function
WorkerDispatcher
(
)
{
this
.
msgId
=
1
;
this
.
worker
=
null
;
}
WorkerDispatcher
.
prototype
=
{
start
(
url
)
{
this
.
worker
=
new
Worker
(
url
)
;
this
.
worker
.
onerror
=
(
)
=
>
{
console
.
error
(
Error
in
worker
{
url
}
)
;
}
;
}
stop
(
)
{
if
(
!
this
.
worker
)
{
return
;
}
this
.
worker
.
terminate
(
)
;
this
.
worker
=
null
;
}
task
(
method
)
{
return
(
.
.
.
args
)
=
>
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
const
id
=
this
.
msgId
+
+
;
this
.
worker
.
postMessage
(
{
id
method
args
}
)
;
const
listener
=
(
{
data
:
result
}
)
=
>
{
if
(
result
.
id
!
=
=
id
)
{
return
;
}
this
.
worker
.
removeEventListener
(
"
message
"
listener
)
;
if
(
result
.
error
)
{
reject
(
result
.
error
)
;
}
else
{
resolve
(
result
.
response
)
;
}
}
;
this
.
worker
.
addEventListener
(
"
message
"
listener
)
;
}
)
;
}
;
}
}
;
function
workerHandler
(
publicInterface
)
{
return
function
workerHandler
(
msg
)
{
const
{
id
method
args
}
=
msg
.
data
;
const
response
=
publicInterface
[
method
]
.
apply
(
undefined
args
)
;
if
(
response
instanceof
Promise
)
{
response
.
then
(
val
=
>
self
.
postMessage
(
{
id
response
:
val
}
)
err
=
>
self
.
postMessage
(
{
id
error
:
err
}
)
)
;
}
else
{
self
.
postMessage
(
{
id
response
}
)
;
}
}
;
}
module
.
exports
=
{
WorkerDispatcher
workerHandler
}
;
}
1116
:
function
(
module
exports
__webpack_require__
)
{
"
use
strict
"
;
Object
.
defineProperty
(
exports
"
__esModule
"
{
value
:
true
}
)
;
exports
.
default
=
buildQuery
;
var
_escapeRegExp
=
__webpack_require__
(
259
)
;
var
_escapeRegExp2
=
_interopRequireDefault
(
_escapeRegExp
)
;
function
_interopRequireDefault
(
obj
)
{
return
obj
&
&
obj
.
__esModule
?
obj
:
{
default
:
obj
}
;
}
function
ignoreWhiteSpace
(
str
)
{
return
(
/
^
\
s
{
0
2
}
/
.
test
(
str
)
?
"
(
?
!
\
\
s
*
.
*
)
"
:
str
)
;
}
function
wholeMatch
(
query
wholeWord
)
{
if
(
query
=
=
"
"
|
|
!
wholeWord
)
{
return
query
;
}
return
\
\
b
{
query
}
\
\
b
;
}
function
buildFlags
(
caseSensitive
isGlobal
)
{
if
(
caseSensitive
&
&
isGlobal
)
{
return
"
g
"
;
}
if
(
!
caseSensitive
&
&
isGlobal
)
{
return
"
gi
"
;
}
if
(
!
caseSensitive
&
&
!
isGlobal
)
{
return
"
i
"
;
}
return
;
}
function
buildQuery
(
originalQuery
modifiers
_ref
)
{
var
_ref
isGlobal
=
_ref
.
isGlobal
isGlobal
=
_ref
isGlobal
=
=
=
undefined
?
false
:
_ref
isGlobal
_ref
ignoreSpaces
=
_ref
.
ignoreSpaces
ignoreSpaces
=
_ref
ignoreSpaces
=
=
=
undefined
?
false
:
_ref
ignoreSpaces
;
var
caseSensitive
=
modifiers
.
caseSensitive
regexMatch
=
modifiers
.
regexMatch
wholeWord
=
modifiers
.
wholeWord
;
if
(
originalQuery
=
=
"
"
)
{
return
new
RegExp
(
originalQuery
)
;
}
var
query
=
originalQuery
;
if
(
ignoreSpaces
)
{
query
=
ignoreWhiteSpace
(
query
)
;
}
if
(
!
regexMatch
)
{
query
=
(
0
_escapeRegExp2
.
default
)
(
query
)
;
}
query
=
wholeMatch
(
query
wholeWord
)
;
var
flags
=
buildFlags
(
caseSensitive
isGlobal
)
;
if
(
flags
)
{
return
new
RegExp
(
query
flags
)
;
}
return
new
RegExp
(
query
)
;
}
}
1122
:
function
(
module
exports
__webpack_require__
)
{
"
use
strict
"
;
Object
.
defineProperty
(
exports
"
__esModule
"
{
value
:
true
}
)
;
exports
.
countMatches
=
countMatches
;
var
_buildQuery
=
__webpack_require__
(
1116
)
;
var
_buildQuery2
=
_interopRequireDefault
(
_buildQuery
)
;
var
_devtoolsUtils
=
__webpack_require__
(
900
)
;
function
_interopRequireDefault
(
obj
)
{
return
obj
&
&
obj
.
__esModule
?
obj
:
{
default
:
obj
}
;
}
var
workerHandler
=
_devtoolsUtils
.
workerUtils
.
workerHandler
;
function
countMatches
(
query
text
modifiers
)
{
var
regexQuery
=
(
0
_buildQuery2
.
default
)
(
query
modifiers
{
isGlobal
:
true
}
)
;
var
match
=
text
.
match
(
regexQuery
)
;
return
match
?
match
.
length
:
0
;
}
self
.
onmessage
=
workerHandler
(
{
countMatches
}
)
;
}
}
)
}
)
;
;
