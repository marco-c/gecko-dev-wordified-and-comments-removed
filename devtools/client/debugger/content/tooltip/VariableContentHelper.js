"
use
strict
"
;
const
ChromeUtils
=
require
(
"
ChromeUtils
"
)
;
ChromeUtils
.
defineModuleGetter
(
this
"
VariablesView
"
"
resource
:
/
/
devtools
/
client
/
shared
/
widgets
/
VariablesView
.
jsm
"
)
;
ChromeUtils
.
defineModuleGetter
(
this
"
VariablesViewController
"
"
resource
:
/
/
devtools
/
client
/
shared
/
widgets
/
VariablesViewController
.
jsm
"
)
;
function
setTooltipVariableContent
(
tooltip
objectActor
viewOptions
=
{
}
controllerOptions
=
{
}
relayEvents
=
{
}
extraButtons
=
[
]
toolbox
=
null
)
{
const
doc
=
tooltip
.
doc
;
const
vbox
=
doc
.
createElement
(
"
vbox
"
)
;
vbox
.
className
=
"
devtools
-
tooltip
-
variables
-
view
-
box
"
;
vbox
.
setAttribute
(
"
flex
"
"
1
"
)
;
const
innerbox
=
doc
.
createElement
(
"
vbox
"
)
;
innerbox
.
className
=
"
devtools
-
tooltip
-
variables
-
view
-
innerbox
"
;
innerbox
.
setAttribute
(
"
flex
"
"
1
"
)
;
vbox
.
appendChild
(
innerbox
)
;
for
(
const
{
label
className
command
}
of
extraButtons
)
{
const
button
=
doc
.
createElement
(
"
button
"
)
;
button
.
className
=
className
;
button
.
setAttribute
(
"
label
"
label
)
;
button
.
addEventListener
(
"
command
"
command
)
;
vbox
.
appendChild
(
button
)
;
}
const
widget
=
new
VariablesView
(
innerbox
viewOptions
)
;
if
(
toolbox
)
{
widget
.
toolbox
=
toolbox
;
}
widget
.
commitHierarchy
=
(
)
=
>
{
}
;
for
(
const
e
in
relayEvents
)
{
widget
.
on
(
e
relayEvents
[
e
]
)
;
}
VariablesViewController
.
attach
(
widget
controllerOptions
)
;
widget
.
searchPlaceholder
=
viewOptions
.
searchPlaceholder
;
widget
.
searchEnabled
=
viewOptions
.
searchEnabled
;
widget
.
controller
.
setSingleVariable
(
{
objectActor
:
objectActor
}
controllerOptions
)
;
tooltip
.
content
=
vbox
;
tooltip
.
panel
.
setAttribute
(
"
clamped
-
dimensions
"
"
"
)
;
}
exports
.
setTooltipVariableContent
=
setTooltipVariableContent
;
