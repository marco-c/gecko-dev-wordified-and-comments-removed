"
use
strict
"
;
const
{
promiseInvoke
}
=
require
(
"
devtools
/
shared
/
async
-
utils
"
)
;
const
{
reportException
}
=
require
(
"
devtools
/
shared
/
DevToolsUtils
"
)
;
function
rdpInvoke
(
client
method
.
.
.
args
)
{
return
promiseInvoke
(
client
method
.
.
.
args
)
.
then
(
(
packet
)
=
>
{
let
{
error
message
}
=
packet
;
if
(
error
)
{
throw
new
Error
(
error
+
"
:
"
+
message
)
;
}
return
packet
;
}
)
;
}
function
asPaused
(
client
func
)
{
if
(
client
.
state
!
=
"
paused
"
)
{
return
Task
.
spawn
(
function
*
(
)
{
yield
rdpInvoke
(
client
client
.
interrupt
)
;
let
result
;
try
{
result
=
yield
func
(
)
;
}
catch
(
e
)
{
yield
rdpInvoke
(
client
client
.
resume
)
;
throw
e
;
}
yield
rdpInvoke
(
client
client
.
resume
)
;
return
result
;
}
)
;
}
else
{
return
func
(
)
;
}
}
module
.
exports
=
{
rdpInvoke
asPaused
}
;
