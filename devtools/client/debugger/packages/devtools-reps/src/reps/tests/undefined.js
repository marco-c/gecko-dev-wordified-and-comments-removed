const
{
shallow
}
=
require
(
"
enzyme
"
)
;
const
{
REPS
getRep
}
=
require
(
"
.
.
/
rep
"
)
;
const
{
Undefined
Rep
}
=
REPS
;
const
stubs
=
require
(
"
.
.
/
stubs
/
undefined
"
)
;
describe
(
"
Test
Undefined
"
(
)
=
>
{
const
stub
=
stubs
.
get
(
"
Undefined
"
)
;
it
(
"
selects
Undefined
as
expected
"
(
)
=
>
{
expect
(
getRep
(
stub
)
)
.
toBe
(
Undefined
.
rep
)
;
}
)
;
it
(
"
Rep
correctly
selects
Undefined
Rep
for
plain
JS
undefined
"
(
)
=
>
{
expect
(
getRep
(
undefined
undefined
true
)
)
.
toBe
(
Undefined
.
rep
)
;
}
)
;
it
(
"
Undefined
rep
has
expected
text
content
"
(
)
=
>
{
const
renderedComponent
=
shallow
(
Rep
(
{
object
:
stub
}
)
)
;
expect
(
renderedComponent
.
text
(
)
)
.
toEqual
(
"
undefined
"
)
;
}
)
;
it
(
"
Undefined
rep
has
expected
class
names
"
(
)
=
>
{
const
renderedComponent
=
shallow
(
Rep
(
{
object
:
stub
}
)
)
;
expect
(
renderedComponent
.
hasClass
(
"
objectBox
objectBox
-
undefined
"
)
)
.
toEqual
(
true
)
;
}
)
;
it
(
"
Undefined
rep
has
expected
title
"
(
)
=
>
{
const
renderedComponent
=
shallow
(
Rep
(
{
object
:
stub
shouldRenderTooltip
:
true
}
)
)
;
expect
(
renderedComponent
.
prop
(
"
title
"
)
)
.
toEqual
(
"
undefined
"
)
;
}
)
;
}
)
;
