const
PropTypes
=
require
(
"
prop
-
types
"
)
;
const
{
getGripType
isGrip
getURLDisplayString
wrapRender
}
=
require
(
"
.
/
rep
-
utils
"
)
;
const
{
MODE
}
=
require
(
"
.
/
constants
"
)
;
const
dom
=
require
(
"
react
-
dom
-
factories
"
)
;
const
{
span
}
=
dom
;
WindowRep
.
propTypes
=
{
mode
:
PropTypes
.
oneOf
(
Object
.
keys
(
MODE
)
.
map
(
key
=
>
MODE
[
key
]
)
)
object
:
PropTypes
.
object
.
isRequired
}
;
function
WindowRep
(
props
)
{
const
{
mode
object
}
=
props
;
const
config
=
{
"
data
-
link
-
actor
-
id
"
:
object
.
actor
className
:
"
objectBox
objectBox
-
Window
"
}
;
if
(
mode
=
=
=
MODE
.
TINY
)
{
return
span
(
config
getTitle
(
object
)
)
;
}
return
span
(
config
getTitle
(
object
true
)
span
(
{
className
:
"
location
"
}
getLocation
(
object
)
)
)
;
}
function
getTitle
(
object
trailingSpace
)
{
let
title
=
object
.
displayClass
|
|
object
.
class
|
|
"
Window
"
;
if
(
trailingSpace
=
=
=
true
)
{
title
=
{
title
}
;
}
return
span
(
{
className
:
"
objectTitle
"
}
title
)
;
}
function
getLocation
(
object
)
{
return
getURLDisplayString
(
object
.
preview
.
url
)
;
}
function
supportsObject
(
object
noGrip
=
false
)
{
if
(
noGrip
=
=
=
true
|
|
!
isGrip
(
object
)
)
{
return
false
;
}
return
object
.
preview
&
&
getGripType
(
object
noGrip
)
=
=
"
Window
"
;
}
module
.
exports
=
{
rep
:
wrapRender
(
WindowRep
)
supportsObject
}
;
