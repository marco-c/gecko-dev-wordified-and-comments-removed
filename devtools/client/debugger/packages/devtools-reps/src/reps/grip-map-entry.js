const
PropTypes
=
require
(
"
prop
-
types
"
)
;
const
dom
=
require
(
"
react
-
dom
-
factories
"
)
;
const
{
span
}
=
dom
;
const
{
wrapRender
}
=
require
(
"
.
/
rep
-
utils
"
)
;
const
PropRep
=
require
(
"
.
/
prop
-
rep
"
)
;
const
{
MODE
}
=
require
(
"
.
/
constants
"
)
;
GripMapEntry
.
propTypes
=
{
object
:
PropTypes
.
object
mode
:
PropTypes
.
oneOf
(
Object
.
keys
(
MODE
)
.
map
(
key
=
>
MODE
[
key
]
)
)
onDOMNodeMouseOver
:
PropTypes
.
func
onDOMNodeMouseOut
:
PropTypes
.
func
onInspectIconClick
:
PropTypes
.
func
}
;
function
GripMapEntry
(
props
)
{
const
{
object
}
=
props
;
const
{
key
value
}
=
object
.
preview
;
return
span
(
{
className
:
"
objectBox
objectBox
-
map
-
entry
"
}
PropRep
(
{
.
.
.
props
name
:
key
object
:
value
equal
:
"
\
u2192
"
title
:
null
suppressQuotes
:
false
}
)
)
;
}
function
supportsObject
(
grip
noGrip
=
false
)
{
if
(
noGrip
=
=
=
true
)
{
return
false
;
}
return
(
grip
&
&
(
grip
.
type
=
=
=
"
mapEntry
"
|
|
grip
.
type
=
=
=
"
storageEntry
"
)
&
&
grip
.
preview
)
;
}
function
createGripMapEntry
(
key
value
)
{
return
{
type
:
"
mapEntry
"
preview
:
{
key
value
}
}
;
}
module
.
exports
=
{
rep
:
wrapRender
(
GripMapEntry
)
createGripMapEntry
supportsObject
}
;
