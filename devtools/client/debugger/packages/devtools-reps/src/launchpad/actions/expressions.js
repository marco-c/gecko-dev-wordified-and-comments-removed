const
constants
=
require
(
"
.
.
/
constants
"
)
;
const
{
generateKey
}
=
require
(
"
.
.
/
utils
/
utils
"
)
;
function
evaluateInput
(
input
)
{
return
async
function
(
{
dispatch
client
}
)
{
try
{
const
packet
=
await
client
.
clientCommands
.
evaluate
(
input
)
;
dispatch
(
addExpression
(
input
packet
)
)
;
}
catch
(
err
)
{
console
.
warn
(
"
Error
when
evaluating
expression
"
err
)
;
}
}
;
}
function
addExpression
(
input
packet
)
{
return
{
key
:
generateKey
(
)
type
:
constants
.
ADD_EXPRESSION
value
:
{
input
packet
}
}
;
}
function
clearExpressions
(
)
{
return
{
type
:
constants
.
CLEAR_EXPRESSIONS
}
;
}
function
showResultPacket
(
key
)
{
return
{
key
type
:
constants
.
SHOW_RESULT_PACKET
}
;
}
function
hideResultPacket
(
key
)
{
return
{
key
type
:
constants
.
HIDE_RESULT_PACKET
}
;
}
function
createObjectFront
(
grip
)
{
return
function
(
{
dispatch
client
}
)
{
return
client
.
getObjectFront
(
grip
)
;
}
;
}
function
createLongStringClient
(
grip
)
{
return
function
(
{
dispatch
client
}
)
{
return
client
.
getLongStringClient
(
grip
)
;
}
;
}
function
releaseActor
(
actor
)
{
return
function
(
{
dispatch
client
}
)
{
client
.
releaseActor
(
actor
)
;
}
;
}
module
.
exports
=
{
addExpression
clearExpressions
evaluateInput
showResultPacket
hideResultPacket
createObjectFront
createLongStringClient
releaseActor
}
;
