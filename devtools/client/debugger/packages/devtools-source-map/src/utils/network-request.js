const
InlineBase64JSON
=
"
data
:
application
/
json
;
"
;
function
networkRequest
(
url
opts
)
{
if
(
url
.
startsWith
(
InlineBase64JSON
)
)
{
const
content
=
atob
(
url
.
slice
(
url
.
indexOf
(
"
base64
"
)
+
7
)
)
;
return
Promise
.
resolve
(
{
content
}
)
;
}
return
Promise
.
race
(
[
fetch
(
/
get
?
url
=
{
url
}
)
.
then
(
res
=
>
{
if
(
res
.
status
>
=
200
&
&
res
.
status
<
300
)
{
if
(
res
.
headers
.
get
(
"
Content
-
Type
"
)
=
=
=
"
application
/
wasm
"
)
{
return
res
.
arrayBuffer
(
)
.
then
(
buffer
=
>
(
{
content
:
buffer
isDwarf
:
true
}
)
)
;
}
return
res
.
text
(
)
.
then
(
text
=
>
(
{
content
:
text
}
)
)
;
}
return
Promise
.
reject
(
new
Error
(
failed
to
request
{
url
}
)
)
;
}
)
new
Promise
(
(
resolve
reject
)
=
>
{
setTimeout
(
(
)
=
>
reject
(
new
Error
(
"
Connect
timeout
error
"
)
)
6000
)
;
}
)
]
)
;
}
module
.
exports
=
{
networkRequest
}
;
