import
{
createSelector
}
from
"
reselect
"
;
import
{
uniqBy
}
from
"
lodash
"
;
import
{
getBreakpointsList
}
from
"
.
.
/
reducers
/
breakpoints
"
;
import
{
getSelectedSource
}
from
"
.
.
/
reducers
/
sources
"
;
import
{
sortSelectedBreakpoints
}
from
"
.
.
/
utils
/
breakpoint
"
;
import
{
getSelectedLocation
}
from
"
.
.
/
utils
/
selected
-
location
"
;
export
const
getVisibleBreakpoints
=
createSelector
(
getSelectedSource
getBreakpointsList
(
selectedSource
breakpoints
)
=
>
{
if
(
!
selectedSource
)
{
return
null
;
}
return
breakpoints
.
filter
(
bp
=
>
selectedSource
&
&
getSelectedLocation
(
bp
selectedSource
)
.
sourceId
=
=
=
selectedSource
.
id
)
;
}
)
;
export
const
getFirstVisibleBreakpoints
=
createSelector
(
getVisibleBreakpoints
getSelectedSource
(
breakpoints
selectedSource
)
=
>
{
if
(
!
breakpoints
|
|
!
selectedSource
)
{
return
[
]
;
}
return
uniqBy
(
sortSelectedBreakpoints
(
breakpoints
selectedSource
)
bp
=
>
getSelectedLocation
(
bp
selectedSource
)
.
line
)
;
}
)
;
