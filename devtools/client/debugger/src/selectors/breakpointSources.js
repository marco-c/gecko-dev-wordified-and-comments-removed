import
{
createSelector
}
from
"
reselect
"
;
import
{
getSelectedSource
}
from
"
.
/
sources
"
;
import
{
getBreakpointsList
}
from
"
.
/
breakpoints
"
;
import
{
getBlackBoxRanges
}
from
"
.
/
source
-
blackbox
"
;
import
{
getFilename
}
from
"
.
.
/
utils
/
source
"
;
import
{
getSelectedLocation
}
from
"
.
.
/
utils
/
selected
-
location
"
;
export
const
getBreakpointSources
=
createSelector
(
getBreakpointsList
getSelectedSource
getBlackBoxRanges
(
breakpoints
selectedSource
blackBoxRanges
)
=
>
{
const
visibleBreakpoints
=
breakpoints
.
filter
(
bp
=
>
!
bp
.
options
.
hidden
&
&
(
bp
.
text
|
|
bp
.
originalText
|
|
bp
.
options
.
condition
|
|
bp
.
disabled
)
)
;
const
sources
=
new
Map
(
)
;
for
(
const
breakpoint
of
visibleBreakpoints
)
{
const
location
=
getSelectedLocation
(
breakpoint
selectedSource
)
;
const
{
source
}
=
location
;
if
(
blackBoxRanges
[
source
.
url
]
)
{
continue
;
}
if
(
!
sources
.
has
(
source
)
)
{
sources
.
set
(
source
{
source
breakpoints
:
[
breakpoint
]
filename
:
getFilename
(
source
)
}
)
;
}
else
{
sources
.
get
(
source
)
.
breakpoints
.
push
(
breakpoint
)
;
}
}
return
[
.
.
.
sources
.
values
(
)
]
.
sort
(
(
a
b
)
=
>
a
.
filename
.
localeCompare
(
b
.
filename
)
)
;
}
)
;
