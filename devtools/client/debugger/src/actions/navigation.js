import
sourceQueue
from
"
.
.
/
utils
/
source
-
queue
"
;
import
{
getMainThread
}
from
"
.
.
/
selectors
/
index
"
;
import
{
evaluateExpressionsForCurrentContext
}
from
"
.
.
/
actions
/
expressions
"
;
import
{
getEditor
}
from
"
.
.
/
utils
/
editor
/
index
"
;
export
function
willNavigate
(
event
)
{
return
async
function
(
{
dispatch
getState
sourceMapLoader
}
)
{
sourceQueue
.
clear
(
)
;
sourceMapLoader
.
clearSourceMaps
(
)
;
const
editor
=
getEditor
(
)
;
editor
.
clearSources
(
)
;
const
thread
=
getMainThread
(
getState
(
)
)
;
dispatch
(
{
type
:
"
NAVIGATE
"
mainThread
:
{
.
.
.
thread
url
:
event
.
url
}
}
)
;
}
;
}
export
function
navigated
(
)
{
return
async
function
(
{
dispatch
panel
}
)
{
try
{
await
dispatch
(
evaluateExpressionsForCurrentContext
(
)
)
;
}
catch
(
e
)
{
console
.
error
(
"
Failed
to
update
expression
on
navigation
"
e
)
;
}
panel
.
emit
(
"
reloaded
"
)
;
}
;
}
