import
{
getSelectedSource
getSelectedFrame
getClosestBreakpointPosition
getBreakpoint
}
from
"
.
.
/
.
.
/
selectors
"
;
import
{
createLocation
}
from
"
.
.
/
.
.
/
utils
/
location
"
;
import
{
addHiddenBreakpoint
}
from
"
.
.
/
breakpoints
"
;
import
{
setBreakpointPositions
}
from
"
.
.
/
breakpoints
/
breakpointPositions
"
;
import
{
resume
}
from
"
.
/
commands
"
;
export
function
continueToHere
(
cx
location
)
{
return
async
function
(
{
dispatch
getState
}
)
{
const
{
line
column
}
=
location
;
const
selectedSource
=
getSelectedSource
(
getState
(
)
)
;
const
selectedFrame
=
getSelectedFrame
(
getState
(
)
cx
.
thread
)
;
if
(
!
selectedFrame
|
|
!
selectedSource
)
{
return
;
}
const
debugLine
=
selectedFrame
.
location
.
line
;
if
(
!
column
&
&
debugLine
=
=
line
)
{
return
;
}
await
dispatch
(
setBreakpointPositions
(
location
)
)
;
const
position
=
getClosestBreakpointPosition
(
getState
(
)
location
)
;
if
(
column
&
&
!
position
)
{
return
;
}
const
pauseLocation
=
column
&
&
position
?
position
.
location
:
location
;
if
(
!
getBreakpoint
(
getState
(
)
pauseLocation
)
)
{
await
dispatch
(
addHiddenBreakpoint
(
cx
createLocation
(
{
source
:
selectedSource
line
:
pauseLocation
.
line
column
:
pauseLocation
.
column
}
)
)
)
;
}
dispatch
(
resume
(
)
)
;
}
;
}
