import
{
selectLocation
}
from
"
.
.
/
sources
"
;
import
{
evaluateExpressions
}
from
"
.
.
/
expressions
"
;
import
{
fetchScopes
}
from
"
.
/
fetchScopes
"
;
import
assert
from
"
.
.
/
.
.
/
utils
/
assert
"
;
import
type
{
Frame
ThreadContext
}
from
"
.
.
/
.
.
/
types
"
;
import
type
{
ThunkArgs
}
from
"
.
.
/
types
"
;
export
function
selectFrame
(
cx
:
ThreadContext
frame
:
Frame
)
{
return
async
(
{
dispatch
client
getState
sourceMaps
}
:
ThunkArgs
)
=
>
{
assert
(
cx
.
thread
=
=
frame
.
thread
"
Thread
mismatch
"
)
;
if
(
frame
.
asyncCause
)
{
return
dispatch
(
selectLocation
(
cx
frame
.
location
)
)
;
}
dispatch
(
{
type
:
"
SELECT_FRAME
"
cx
thread
:
cx
.
thread
frame
}
)
;
dispatch
(
selectLocation
(
cx
frame
.
location
)
)
;
dispatch
(
evaluateExpressions
(
cx
)
)
;
dispatch
(
fetchScopes
(
cx
)
)
;
}
;
}
