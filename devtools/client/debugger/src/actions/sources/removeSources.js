import
{
getEditor
}
from
"
.
.
/
.
.
/
utils
/
editor
/
index
"
;
export
function
removeSources
(
sources
actors
{
resetSelectedLocation
=
true
}
=
{
}
)
{
return
async
(
{
parserWorker
dispatch
sourceMapLoader
}
)
=
>
{
dispatch
(
{
type
:
"
REMOVE_SOURCES
"
sources
actors
resetSelectedLocation
}
)
;
const
sourceIds
=
sources
.
map
(
source
=
>
source
.
id
)
;
parserWorker
.
clearSources
(
sourceIds
)
;
const
editor
=
getEditor
(
)
;
editor
.
clearSources
(
sourceIds
)
;
const
generatedSourceIds
=
new
Set
(
)
;
for
(
const
source
of
sources
)
{
if
(
source
.
isOriginal
)
{
generatedSourceIds
.
add
(
source
.
generatedSource
.
id
)
;
}
}
await
sourceMapLoader
.
clearSourceMapForGeneratedSources
(
Array
.
from
(
generatedSourceIds
)
)
;
}
;
}
