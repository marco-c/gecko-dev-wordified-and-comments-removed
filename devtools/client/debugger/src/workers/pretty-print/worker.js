import
{
workerHandler
}
from
"
.
.
/
.
.
/
.
.
/
.
.
/
shared
/
worker
-
utils
"
;
import
{
prettyFast
}
from
"
.
/
pretty
-
fast
"
;
var
{
SourceMapGenerator
}
=
require
(
"
source
-
map
"
)
;
const
sourceMapGeneratorByTaskId
=
new
Map
(
)
;
function
prettyPrint
(
{
url
indent
sourceText
}
)
{
const
{
code
map
:
sourceMapGenerator
}
=
prettyFast
(
sourceText
{
url
indent
}
)
;
return
{
code
sourceMap
:
sourceMapGenerator
.
toJSON
(
)
}
;
}
function
prettyPrintInlineScript
(
{
taskId
url
indent
sourceText
originalStartLine
originalStartColumn
generatedStartLine
}
)
{
let
taskSourceMapGenerator
;
if
(
!
sourceMapGeneratorByTaskId
.
has
(
taskId
)
)
{
taskSourceMapGenerator
=
new
SourceMapGenerator
(
{
file
:
url
}
)
;
sourceMapGeneratorByTaskId
.
set
(
taskId
taskSourceMapGenerator
)
;
}
else
{
taskSourceMapGenerator
=
sourceMapGeneratorByTaskId
.
get
(
taskId
)
;
}
const
{
code
}
=
prettyFast
(
sourceText
{
url
indent
sourceMapGenerator
:
taskSourceMapGenerator
prefixWithNewLine
:
true
originalStartLine
originalStartColumn
generatedStartLine
}
)
;
return
code
;
}
function
getSourceMapForTask
(
taskId
)
{
if
(
!
sourceMapGeneratorByTaskId
.
has
(
taskId
)
)
{
return
null
;
}
const
taskSourceMapGenerator
=
sourceMapGeneratorByTaskId
.
get
(
taskId
)
;
sourceMapGeneratorByTaskId
.
delete
(
taskId
)
;
return
taskSourceMapGenerator
.
toJSON
(
)
;
}
self
.
onmessage
=
workerHandler
(
{
prettyPrint
prettyPrintInlineScript
getSourceMapForTask
}
)
;
