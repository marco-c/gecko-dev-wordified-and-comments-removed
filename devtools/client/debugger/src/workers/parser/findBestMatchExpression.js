import
{
getInternalSymbols
}
from
"
.
/
getSymbols
"
;
function
findBestMatchExpression
(
sourceId
tokenPos
)
{
const
symbols
=
getInternalSymbols
(
sourceId
)
;
if
(
!
symbols
)
{
return
null
;
}
const
{
line
column
}
=
tokenPos
;
const
{
memberExpressions
identifiers
literals
}
=
symbols
;
function
matchExpression
(
expression
)
{
const
{
location
}
=
expression
;
const
{
start
end
}
=
location
;
return
start
.
line
=
=
line
&
&
start
.
column
<
=
column
&
&
end
.
column
>
=
column
;
}
function
matchMemberExpression
(
expression
)
{
return
!
expression
.
computed
&
&
matchExpression
(
expression
)
;
}
return
(
memberExpressions
.
find
(
matchMemberExpression
)
|
|
literals
.
find
(
matchExpression
)
|
|
identifiers
.
find
(
matchExpression
)
)
;
}
export
default
findBestMatchExpression
;
