const
DevToolsUtils
=
require
(
"
resource
:
/
/
devtools
/
shared
/
DevToolsUtils
.
js
"
)
;
export
function
handleError
(
err
)
{
console
.
log
(
"
ERROR
:
"
err
)
;
}
export
function
promisify
(
context
method
.
.
.
args
)
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
args
.
push
(
response
=
>
{
if
(
response
.
error
)
{
reject
(
response
)
;
}
else
{
resolve
(
response
)
;
}
}
)
;
method
.
apply
(
context
args
)
;
}
)
;
}
export
function
endTruncateStr
(
str
size
)
{
if
(
str
.
length
>
size
)
{
return
{
str
.
slice
(
str
.
length
-
size
)
}
;
}
return
str
;
}
export
function
waitForMs
(
ms
)
{
return
new
Promise
(
resolve
=
>
setTimeout
(
resolve
ms
)
)
;
}
export
async
function
saveAsLocalFile
(
content
fileName
)
{
if
(
content
.
type
!
=
=
"
text
"
)
{
return
null
;
}
const
data
=
new
TextEncoder
(
)
.
encode
(
content
.
value
)
;
return
DevToolsUtils
.
saveAs
(
window
data
fileName
)
;
}
