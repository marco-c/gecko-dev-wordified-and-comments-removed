export
function
memoizeLast
(
fn
)
{
let
lastArgs
;
let
lastResult
;
const
memoized
=
(
.
.
.
args
)
=
>
{
if
(
lastArgs
&
&
args
.
length
=
=
=
lastArgs
.
length
&
&
args
.
every
(
(
arg
i
)
=
>
arg
=
=
=
lastArgs
[
i
]
)
)
{
return
lastResult
;
}
lastArgs
=
args
;
lastResult
=
fn
(
.
.
.
args
)
;
return
lastResult
;
}
;
return
memoized
;
}
export
default
memoizeLast
;
