export
*
from
"
.
/
source
-
search
"
;
export
*
from
"
.
.
/
ui
"
;
export
*
from
"
.
/
tokens
"
;
import
{
createEditor
}
from
"
.
/
create
-
editor
"
;
let
editor
;
export
function
getEditor
(
)
{
if
(
editor
)
{
return
editor
;
}
editor
=
createEditor
(
{
cm6
:
true
}
)
;
return
editor
;
}
export
function
removeEditor
(
)
{
editor
=
null
;
}
export
function
updateEditorLineWrapping
(
value
)
{
if
(
!
editor
)
{
return
;
}
editor
.
setLineWrapping
(
value
)
;
}
export
function
toWasmSourceLine
(
offset
)
{
return
editor
.
wasmOffsetToLine
(
offset
)
|
|
0
;
}
export
function
toEditorLine
(
source
lineOrOffset
)
{
if
(
editor
.
isWasm
&
&
!
source
.
isOriginal
)
{
return
toWasmSourceLine
(
lineOrOffset
)
+
1
;
}
return
lineOrOffset
;
}
export
function
fromEditorLine
(
source
line
)
{
if
(
editor
.
isWasm
&
&
!
source
.
isOriginal
)
{
return
editor
.
lineToWasmOffset
(
line
-
1
)
;
}
return
line
;
}
export
function
toEditorPosition
(
location
)
{
const
isSourceWasm
=
editor
.
isWasm
&
&
!
location
.
source
.
isOriginal
;
return
{
line
:
toEditorLine
(
location
.
source
location
.
line
)
column
:
isSourceWasm
|
|
!
location
.
column
?
0
:
location
.
column
}
;
}
export
function
toSourceLine
(
source
line
)
{
if
(
editor
.
isWasm
&
&
!
source
.
isOriginal
)
{
return
editor
.
lineToWasmOffset
(
line
-
1
)
;
}
return
line
;
}
