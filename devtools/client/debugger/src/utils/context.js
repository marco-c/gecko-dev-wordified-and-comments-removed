import
{
getThreadContext
getSelectedFrame
getCurrentThread
hasSource
hasSourceActor
getCurrentlyFetchedTopFrame
hasFrame
}
from
"
.
.
/
selectors
/
index
"
;
export
class
ContextError
extends
Error
{
constructor
(
msg
)
{
super
(
DebuggerContextError
:
{
msg
}
)
;
}
}
export
function
validateNavigateContext
(
state
cx
)
{
const
newcx
=
getThreadContext
(
state
)
;
if
(
newcx
.
navigateCounter
!
=
cx
.
navigateCounter
)
{
throw
new
ContextError
(
"
Page
has
navigated
"
)
;
}
}
export
function
validateThreadContext
(
state
cx
)
{
const
newcx
=
getThreadContext
(
state
)
;
if
(
cx
.
thread
!
=
newcx
.
thread
)
{
throw
new
ContextError
(
"
Current
thread
has
changed
"
)
;
}
if
(
cx
.
pauseCounter
!
=
newcx
.
pauseCounter
)
{
throw
new
ContextError
(
"
Current
thread
has
paused
or
resumed
"
)
;
}
}
export
function
validateContext
(
state
cx
)
{
validateNavigateContext
(
state
cx
)
;
if
(
"
thread
"
in
cx
)
{
validateThreadContext
(
state
cx
)
;
}
}
export
function
validateSelectedFrame
(
state
selectedFrame
)
{
const
newThread
=
getCurrentThread
(
state
)
;
if
(
selectedFrame
.
thread
!
=
newThread
)
{
throw
new
ContextError
(
"
Selected
thread
has
changed
"
)
;
}
const
newSelectedFrame
=
getSelectedFrame
(
state
newThread
)
;
if
(
selectedFrame
.
id
!
=
newSelectedFrame
?
.
id
)
{
throw
new
ContextError
(
"
Selected
frame
changed
"
)
;
}
}
export
function
validateBreakpoint
(
state
breakpoint
)
{
if
(
!
breakpoint
.
location
)
{
return
;
}
if
(
!
hasSource
(
state
breakpoint
.
location
.
source
.
id
)
)
{
throw
new
ContextError
(
Breakpoint
'
s
location
is
obsolete
(
source
'
{
breakpoint
.
location
.
source
.
id
}
'
no
longer
exists
)
)
;
}
if
(
!
hasSource
(
state
breakpoint
.
generatedLocation
.
source
.
id
)
)
{
throw
new
ContextError
(
Breakpoint
'
s
generated
location
is
obsolete
(
source
'
{
breakpoint
.
generatedLocation
.
source
.
id
}
'
no
longer
exists
)
)
;
}
}
export
function
validateSource
(
state
source
)
{
if
(
!
hasSource
(
state
source
.
id
)
)
{
throw
new
ContextError
(
Obsolete
source
(
source
'
{
source
.
id
}
'
no
longer
exists
)
)
;
}
}
export
function
validateSourceActor
(
state
sourceActor
)
{
if
(
!
hasSourceActor
(
state
sourceActor
.
id
)
)
{
throw
new
ContextError
(
Obsolete
source
actor
(
source
'
{
sourceActor
.
id
}
'
no
longer
exists
)
)
;
}
}
export
function
validateThreadFrames
(
state
thread
frames
)
{
const
newThread
=
getCurrentThread
(
state
)
;
if
(
thread
!
=
newThread
)
{
throw
new
ContextError
(
"
Selected
thread
has
changed
"
)
;
}
const
newTopFrame
=
getCurrentlyFetchedTopFrame
(
state
newThread
)
;
if
(
newTopFrame
?
.
id
!
=
frames
[
0
]
.
id
)
{
throw
new
ContextError
(
"
Thread
moved
to
another
location
"
)
;
}
}
export
function
validateFrame
(
state
frame
)
{
if
(
!
hasFrame
(
state
frame
)
)
{
throw
new
ContextError
(
Obsolete
frame
(
frame
'
{
frame
.
id
}
'
no
longer
exists
)
)
;
}
}
export
function
isValidThreadContext
(
state
cx
)
{
const
newcx
=
getThreadContext
(
state
)
;
return
cx
.
thread
=
=
newcx
.
thread
&
&
cx
.
pauseCounter
=
=
newcx
.
pauseCounter
;
}
