import
{
getThreadContext
}
from
"
.
.
/
selectors
"
;
export
class
ContextError
extends
Error
{
}
export
function
validateNavigateContext
(
state
cx
)
{
const
newcx
=
getThreadContext
(
state
)
;
if
(
newcx
.
navigateCounter
!
=
cx
.
navigateCounter
)
{
throw
new
ContextError
(
"
Page
has
navigated
"
)
;
}
}
export
function
validateThreadContext
(
state
cx
)
{
const
newcx
=
getThreadContext
(
state
)
;
if
(
cx
.
thread
!
=
newcx
.
thread
)
{
throw
new
ContextError
(
"
Current
thread
has
changed
"
)
;
}
if
(
cx
.
pauseCounter
!
=
newcx
.
pauseCounter
)
{
throw
new
ContextError
(
"
Current
thread
has
paused
or
resumed
"
)
;
}
}
export
function
validateContext
(
state
cx
)
{
validateNavigateContext
(
state
cx
)
;
if
(
"
thread
"
in
cx
)
{
validateThreadContext
(
state
cx
)
;
}
}
export
function
isValidThreadContext
(
state
cx
)
{
const
newcx
=
getThreadContext
(
state
)
;
return
cx
.
thread
=
=
newcx
.
thread
&
&
cx
.
pauseCounter
=
=
newcx
.
pauseCounter
;
}
