export
function
initialThreadsState
(
)
{
return
{
threads
:
[
]
isWebExtension
:
false
}
;
}
export
default
function
update
(
state
=
initialThreadsState
(
)
action
)
{
switch
(
action
.
type
)
{
case
"
CONNECT
"
:
return
{
.
.
.
state
isWebExtension
:
action
.
isWebExtension
}
;
case
"
INSERT_THREAD
"
:
return
{
.
.
.
state
threads
:
[
.
.
.
state
.
threads
action
.
newThread
]
}
;
case
"
REMOVE_THREAD
"
:
return
{
.
.
.
state
threads
:
state
.
threads
.
filter
(
thread
=
>
action
.
threadActorID
!
=
thread
.
actor
)
}
;
case
"
UPDATE_SERVICE_WORKER_STATUS
"
:
const
{
thread
status
}
=
action
;
return
{
.
.
.
state
threads
:
state
.
threads
.
map
(
t
=
>
{
if
(
t
.
actor
=
=
thread
)
{
return
{
.
.
.
t
serviceWorkerStatus
:
status
}
;
}
return
t
;
}
)
}
;
default
:
return
state
;
}
}
