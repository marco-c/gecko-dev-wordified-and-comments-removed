import
{
Component
}
from
"
react
"
;
import
{
form
div
input
}
from
"
react
-
dom
-
factories
"
;
import
PropTypes
from
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
;
const
classnames
=
require
(
"
devtools
/
client
/
shared
/
classnames
.
js
"
)
;
import
"
.
/
OutlineFilter
.
css
"
;
export
default
class
OutlineFilter
extends
Component
{
state
=
{
focused
:
false
}
;
static
get
propTypes
(
)
{
return
{
filter
:
PropTypes
.
string
.
isRequired
updateFilter
:
PropTypes
.
func
.
isRequired
}
;
}
setFocus
=
shouldFocus
=
>
{
this
.
setState
(
{
focused
:
shouldFocus
}
)
;
}
;
onChange
=
e
=
>
{
this
.
props
.
updateFilter
(
e
.
target
.
value
)
;
}
;
onKeyDown
=
e
=
>
{
if
(
e
.
key
=
=
=
"
Escape
"
&
&
this
.
props
.
filter
!
=
=
"
"
)
{
e
.
preventDefault
(
)
;
this
.
props
.
updateFilter
(
"
"
)
;
}
else
if
(
e
.
key
=
=
=
"
Enter
"
)
{
e
.
preventDefault
(
)
;
}
}
;
render
(
)
{
const
{
focused
}
=
this
.
state
;
return
div
(
{
className
:
"
outline
-
filter
"
}
form
(
null
input
(
{
className
:
classnames
(
"
outline
-
filter
-
input
devtools
-
filterinput
"
{
focused
}
)
onFocus
:
(
)
=
>
this
.
setFocus
(
true
)
onBlur
:
(
)
=
>
this
.
setFocus
(
false
)
placeholder
:
L10N
.
getStr
(
"
outline
.
placeholder
"
)
value
:
this
.
props
.
filter
type
:
"
text
"
onChange
:
this
.
onChange
onKeyDown
:
this
.
onKeyDown
}
)
)
)
;
}
}
