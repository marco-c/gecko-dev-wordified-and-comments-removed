const
TAB_URL
=
EXAMPLE_URL
+
"
doc_script_webext_contentscript
.
html
"
;
let
{
getExtensionUUID
}
=
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Extension
.
jsm
"
{
}
)
;
function
test
(
)
{
let
gPanel
gDebugger
;
let
gSources
gAddon
;
let
cleanup
=
function
*
(
e
)
{
if
(
gAddon
)
{
yield
removeAddon
(
gAddon
)
;
}
if
(
gPanel
)
{
yield
closeDebuggerAndFinish
(
gPanel
)
;
}
else
{
finish
(
)
;
}
}
;
return
Task
.
spawn
(
function
*
(
)
{
gAddon
=
yield
addAddon
(
EXAMPLE_URL
+
"
/
addon
-
webext
-
contentscript
.
xpi
"
)
;
let
uuid
=
getExtensionUUID
(
gAddon
.
id
)
;
let
options
=
{
source
:
moz
-
extension
:
/
/
{
uuid
}
/
webext
-
content
-
script
.
js
line
:
1
}
;
[
gPanel
]
=
yield
initDebugger
(
TAB_URL
options
)
;
gDebugger
=
gPanel
.
panelWin
;
gSources
=
gDebugger
.
DebuggerView
.
Sources
;
is
(
gSources
.
values
.
length
1
"
Should
have
1
source
"
)
;
let
item
=
gSources
.
getItemForAttachment
(
attachment
=
>
{
return
attachment
.
source
.
url
.
includes
(
"
moz
-
extension
"
)
;
}
)
;
ok
(
item
"
Got
the
expected
WebExtensions
ContentScript
source
"
)
;
ok
(
item
&
&
item
.
attachment
.
source
.
url
.
includes
(
item
.
attachment
.
group
)
"
The
source
is
in
the
expected
source
group
"
)
;
is
(
item
&
&
item
.
attachment
.
label
"
webext
-
content
-
script
.
js
"
"
Got
the
expected
filename
in
the
label
"
)
;
yield
cleanup
(
)
;
}
)
.
catch
(
(
e
)
=
>
{
ok
(
false
Got
an
unexpected
exception
:
{
e
}
)
;
return
Task
.
spawn
(
cleanup
)
;
}
)
;
}
