"
use
strict
"
;
requestLongerTimeout
(
2
)
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
sourcemap
-
bogus
.
html
"
"
non
-
existant
-
map
.
js
"
"
map
-
with
-
failed
-
original
-
request
.
js
"
"
map
-
with
-
failed
-
original
-
request
.
original
.
js
"
"
invalid
-
json
-
map
.
js
"
)
;
is
(
dbg
.
selectors
.
getSourceCount
(
)
4
"
Only
4
source
exists
"
)
;
await
selectSource
(
dbg
"
non
-
existant
-
map
.
js
"
)
;
is
(
findFooterNotificationMessage
(
dbg
)
"
Source
Map
Error
:
request
failed
with
status
404
"
"
There
is
a
warning
about
the
missing
source
map
file
"
)
;
await
addBreakpoint
(
dbg
"
non
-
existant
-
map
.
js
"
4
)
;
invokeInTab
(
"
runCode
"
)
;
await
waitForPaused
(
dbg
)
;
await
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
non
-
existant
-
map
.
js
"
)
.
id
4
)
;
await
resume
(
dbg
)
;
await
selectSource
(
dbg
"
invalid
-
json
-
map
.
js
"
)
;
is
(
findFooterNotificationMessage
(
dbg
)
"
Source
Map
Error
:
JSON
.
parse
:
expected
property
name
or
'
}
'
at
line
2
column
3
of
the
JSON
data
"
"
There
is
a
warning
about
the
missing
source
map
file
"
)
;
let
footerButton
=
findElement
(
dbg
"
sourceMapFooterButton
"
)
;
ok
(
footerButton
.
classList
.
contains
(
"
not
-
mapped
"
)
"
The
source
map
error
causes
the
file
to
be
reported
as
not
mapped
"
)
;
ok
(
footerButton
.
classList
.
contains
(
"
error
"
)
"
The
source
map
error
is
displayed
in
the
source
map
icon
"
)
;
await
selectSource
(
dbg
"
map
-
with
-
failed
-
original
-
request
.
js
"
)
;
ok
(
!
findElement
(
dbg
"
editorNotificationFooter
"
)
"
The
source
-
map
is
valid
enough
to
not
spawn
a
warning
message
"
)
;
await
addBreakpoint
(
dbg
"
map
-
with
-
failed
-
original
-
request
.
js
"
7
)
;
invokeInTab
(
"
changeStyleAttribute
"
)
;
await
waitForPaused
(
dbg
)
;
await
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
map
-
with
-
failed
-
original
-
request
.
js
"
)
.
id
7
)
;
await
selectSource
(
dbg
"
map
-
with
-
failed
-
original
-
request
.
original
.
js
"
)
;
const
notificationMessage
=
DEBUGGER_L10N
.
getFormatStr
(
"
editorNotificationFooter
.
noOriginalScopes
"
DEBUGGER_L10N
.
getStr
(
"
scopes
.
showOriginalScopes
"
)
)
;
is
(
findFooterNotificationMessage
(
dbg
)
notificationMessage
"
There
is
no
warning
about
source
-
map
but
rather
one
about
original
scopes
"
)
;
const
editorContent
=
getEditorContent
(
dbg
)
;
Assert
.
stringContains
(
editorContent
Error
while
fetching
an
original
source
:
request
failed
with
status
404
\
n
)
;
Assert
.
stringContains
(
editorContent
Source
URL
:
{
EXAMPLE_URL
}
map
-
with
-
failed
-
original
-
request
.
original
.
js
)
;
footerButton
=
findElement
(
dbg
"
sourceMapFooterButton
"
)
;
is
(
footerButton
.
textContent
"
original
file
"
"
Even
if
the
original
can
'
t
be
loaded
it
is
reported
as
original
in
the
footer
"
)
;
ok
(
!
footerButton
.
classList
.
contains
(
"
loading
"
)
"
The
source
map
isn
'
t
loading
because
of
the
missing
text
content
"
)
;
ok
(
!
footerButton
.
classList
.
contains
(
"
error
"
)
"
The
source
map
isn
'
t
reported
with
an
error
because
of
the
missing
text
content
"
)
;
ok
(
footerButton
.
classList
.
contains
(
"
original
"
)
"
The
source
map
icon
is
set
to
original
"
)
;
await
resume
(
dbg
)
;
}
)
;
