if
(
!
gMultiProcessBrowser
)
{
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
PromiseTestUtils
.
jsm
"
this
)
;
PromiseTestUtils
.
expectUncaughtRejection
(
/
error
\
.
message
is
undefined
/
)
;
}
const
TAB_URL
=
EXAMPLE_URL
+
"
doc_terminate
-
on
-
tab
-
close
.
html
"
;
add_task
(
async
(
)
=
>
{
const
options
=
{
source
:
TAB_URL
line
:
1
}
;
const
{
tab
panel
}
=
await
initDebugger
(
TAB_URL
options
)
;
const
{
gThreadClient
}
=
panel
.
panelWin
;
gThreadClient
.
addOneTimeListener
(
"
paused
"
(
)
=
>
{
resumeDebuggerThenCloseAndFinish
(
gPanel
)
.
then
(
function
(
)
{
ok
(
true
"
should
not
throw
after
this
point
"
)
;
}
)
;
}
)
;
callInTab
(
gTab
"
debuggerThenThrow
"
)
;
}
)
;
