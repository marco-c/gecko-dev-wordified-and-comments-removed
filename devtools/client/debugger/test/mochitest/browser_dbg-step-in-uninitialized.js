"
use
strict
"
;
add_task
(
async
function
test
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
step
-
in
-
uninitialized
.
html
"
)
;
invokeInTab
(
"
main
"
)
;
await
waitForPaused
(
dbg
"
doc
-
step
-
in
-
uninitialized
.
html
"
)
;
await
stepOver
(
dbg
)
;
await
stepIn
(
dbg
)
;
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
step
-
in
-
uninitialized
.
html
"
)
.
id
8
)
;
Assert
.
equal
(
findNodeValue
(
dbg
"
x
"
)
"
undefined
"
"
x
undefined
"
)
;
Assert
.
equal
(
findNodeValue
(
dbg
"
y
"
)
"
(
uninitialized
)
"
"
y
uninitialized
"
)
;
await
stepOver
(
dbg
)
;
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
step
-
in
-
uninitialized
.
html
"
)
.
id
9
)
;
Assert
.
equal
(
findNodeValue
(
dbg
"
y
"
)
"
3
"
"
y
initialized
"
)
;
}
)
;
function
findNodeValue
(
dbg
text
)
{
for
(
let
index
=
0
;
;
index
+
+
)
{
const
elem
=
findElement
(
dbg
"
scopeNode
"
index
)
;
if
(
elem
?
.
innerText
=
=
text
)
{
return
getScopeNodeValue
(
dbg
index
)
;
}
}
}
