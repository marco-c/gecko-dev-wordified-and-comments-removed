"
use
strict
"
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
merge
-
scopes
.
html
"
)
;
invokeInTab
(
"
run
"
)
;
await
waitForPaused
(
dbg
"
doc
-
merge
-
scopes
.
html
"
)
;
expectLabels
(
dbg
[
"
first
"
"
<
this
>
"
"
arguments
"
"
x
"
"
y
"
"
z
"
]
)
;
await
resume
(
dbg
)
;
await
waitForPaused
(
dbg
)
;
await
toggleScopeNode
(
dbg
4
)
;
expectLabels
(
dbg
[
"
Block
"
"
<
this
>
"
"
y
"
"
second
"
"
arguments
"
"
x
"
]
)
;
await
resume
(
dbg
)
;
await
waitForPaused
(
dbg
)
;
await
toggleScopeNode
(
dbg
4
)
;
expectLabels
(
dbg
[
"
Block
"
"
<
this
>
"
"
z
"
"
third
"
"
arguments
"
"
v
"
"
x
"
"
y
"
]
)
;
}
)
;
function
getLabel
(
dbg
index
)
{
return
findElement
(
dbg
"
scopeNode
"
index
)
.
innerText
;
}
function
expectLabels
(
dbg
array
)
{
for
(
let
i
=
0
;
i
<
array
.
length
;
i
+
+
)
{
is
(
getLabel
(
dbg
i
+
1
)
array
[
i
]
Correct
label
{
array
[
i
]
}
for
index
{
i
+
1
}
)
;
}
}
