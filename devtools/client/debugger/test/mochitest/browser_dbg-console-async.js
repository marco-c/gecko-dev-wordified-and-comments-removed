"
use
strict
"
;
add_task
(
async
function
(
)
{
Services
.
prefs
.
setBoolPref
(
"
devtools
.
toolbox
.
splitconsole
.
open
"
true
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
debugger
.
features
.
map
-
await
-
expression
"
true
)
;
const
dbg
=
await
initDebugger
(
"
doc
-
script
-
switching
.
html
"
"
script
-
switching
-
01
.
js
"
)
;
await
selectSource
(
dbg
"
script
-
switching
-
01
.
js
"
)
;
await
getDebuggerSplitConsole
(
dbg
)
;
ok
(
dbg
.
toolbox
.
splitConsole
"
Split
console
is
shown
.
"
)
;
const
webConsole
=
await
dbg
.
toolbox
.
getPanel
(
"
webconsole
"
)
;
const
wrapper
=
webConsole
.
hud
.
ui
.
wrapper
;
wrapper
.
dispatchEvaluateExpression
(
let
sleep
=
async
(
time
v
)
=
>
new
Promise
(
res
=
>
setTimeout
(
(
)
=
>
res
(
v
+
'
!
!
!
'
)
time
)
)
)
;
await
hasMessageByType
(
dbg
"
sleep
"
"
.
command
"
)
;
wrapper
.
dispatchEvaluateExpression
(
await
sleep
(
200
"
DONE
"
)
)
;
await
hasMessageByType
(
dbg
"
DONE
!
!
!
"
"
.
result
"
)
;
}
)
;
async
function
hasMessageByType
(
dbg
msg
typeSelector
)
{
const
webConsole
=
await
dbg
.
toolbox
.
getPanel
(
"
webconsole
"
)
;
const
hud
=
webConsole
.
hud
;
return
waitFor
(
async
(
)
=
>
!
!
findMessagesByType
(
hud
msg
typeSelector
)
.
length
)
;
}
