"
use
strict
"
;
PromiseTestUtils
.
allowMatchingRejectionsGlobally
(
/
File
closed
/
)
;
PromiseTestUtils
.
allowMatchingRejectionsGlobally
(
/
NS_ERROR_FAILURE
/
)
;
requestLongerTimeout
(
5
)
;
const
{
BrowserToolboxLauncher
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
devtools
/
client
/
framework
/
browser
-
toolbox
/
Launcher
.
sys
.
mjs
"
)
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
chrome
.
enabled
"
true
)
;
await
pushPref
(
"
devtools
.
debugger
.
remote
-
enabled
"
true
)
;
info
(
"
Call
BrowserToolboxLauncher
.
init
"
)
;
const
[
browserToolboxLauncher
process
profilePath
]
=
await
new
Promise
(
resolve
=
>
{
BrowserToolboxLauncher
.
init
(
{
onRun
:
(
btl
dbgProcess
dbgProfilePath
)
=
>
{
info
(
"
Browser
toolbox
process
started
successfully
.
"
)
;
resolve
(
[
btl
dbgProcess
dbgProfilePath
]
)
;
}
}
)
;
}
)
;
ok
(
process
"
The
remote
debugger
process
was
created
"
)
;
ok
(
process
.
exitCode
=
=
null
"
The
remote
debugger
process
is
running
"
)
;
is
(
typeof
process
.
pid
"
number
"
The
remote
debugger
process
has
a
proper
pid
(
{
process
.
pid
}
)
)
;
is
(
profilePath
PathUtils
.
join
(
PathUtils
.
profileDir
"
chrome_debugger_profile
"
)
The
remote
debugger
profile
has
the
expected
path
)
;
info
(
"
Close
the
browser
toolbox
"
)
;
await
browserToolboxLauncher
.
close
(
)
;
is
(
process
.
exitCode
Services
.
appinfo
.
OS
=
=
"
WINNT
"
?
-
9
:
-
15
"
The
remote
debugger
process
died
cleanly
"
)
;
}
)
;
