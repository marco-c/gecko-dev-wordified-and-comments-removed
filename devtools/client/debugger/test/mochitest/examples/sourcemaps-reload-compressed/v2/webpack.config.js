const
path
=
require
(
"
path
"
)
;
const
webpack
=
require
(
"
webpack
"
)
;
const
config
=
{
devtool
:
"
sourcemap
"
}
;
if
(
webpack
.
version
&
&
webpack
.
version
[
0
]
=
=
=
"
4
"
)
{
config
.
mode
=
"
production
"
;
}
else
{
config
.
module
=
{
loaders
:
[
{
test
:
/
\
.
js
/
exclude
:
/
node_modules
/
loader
:
"
babel
-
loader
"
}
]
}
;
}
const
originalBundle
=
Object
.
assign
(
{
}
config
{
entry
:
[
path
.
join
(
__dirname
"
original
.
js
"
)
]
output
:
{
path
:
__dirname
filename
:
"
bundle
.
js
"
}
}
)
;
const
bundleWithAnotherOriginalFile
=
Object
.
assign
(
{
}
config
{
entry
:
[
path
.
join
(
__dirname
"
another
-
original
.
js
"
)
path
.
join
(
__dirname
"
original
-
with
-
no
-
update
.
js
"
)
]
output
:
{
path
:
__dirname
filename
:
"
bundle
-
with
-
another
-
original
.
js
"
}
}
)
;
const
replacedBundle
=
Object
.
assign
(
{
}
config
{
entry
:
[
path
.
join
(
__dirname
"
new
-
original
.
js
"
)
]
output
:
{
path
:
__dirname
filename
:
"
replaced
-
bundle
.
js
"
}
}
)
;
module
.
exports
=
[
originalBundle
bundleWithAnotherOriginalFile
replacedBundle
]
;
