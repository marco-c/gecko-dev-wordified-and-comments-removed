var
rollupTypescriptClasses
=
(
function
(
)
{
'
use
strict
'
;
var
extendStatics
=
function
(
d
b
)
{
extendStatics
=
Object
.
setPrototypeOf
|
|
(
{
__proto__
:
[
]
}
instanceof
Array
&
&
function
(
d
b
)
{
d
.
__proto__
=
b
;
}
)
|
|
function
(
d
b
)
{
for
(
var
p
in
b
)
if
(
b
.
hasOwnProperty
(
p
)
)
d
[
p
]
=
b
[
p
]
;
}
;
return
extendStatics
(
d
b
)
;
}
;
function
__extends
(
d
b
)
{
extendStatics
(
d
b
)
;
function
__
(
)
{
this
.
constructor
=
d
;
}
d
.
prototype
=
b
=
=
=
null
?
Object
.
create
(
b
)
:
(
__
.
prototype
=
b
.
prototype
new
__
(
)
)
;
}
function
__decorate
(
decorators
target
key
desc
)
{
var
c
=
arguments
.
length
r
=
c
<
3
?
target
:
desc
=
=
=
null
?
desc
=
Object
.
getOwnPropertyDescriptor
(
target
key
)
:
desc
d
;
if
(
typeof
Reflect
=
=
=
"
object
"
&
&
typeof
Reflect
.
decorate
=
=
=
"
function
"
)
r
=
Reflect
.
decorate
(
decorators
target
key
desc
)
;
else
for
(
var
i
=
decorators
.
length
-
1
;
i
>
=
0
;
i
-
-
)
if
(
d
=
decorators
[
i
]
)
r
=
(
c
<
3
?
d
(
r
)
:
c
>
3
?
d
(
target
key
r
)
:
d
(
target
key
)
)
|
|
r
;
return
c
>
3
&
&
r
&
&
Object
.
defineProperty
(
target
key
r
)
r
;
}
function
decoratorFactory
(
opts
)
{
return
function
decorator
(
target
)
{
return
target
;
}
;
}
var
AppComponent
=
(
function
(
)
{
function
AppComponent
(
)
{
this
.
title
=
'
app
'
;
}
AppComponent
=
__decorate
(
[
decoratorFactory
(
{
selector
:
'
app
-
root
'
}
)
]
AppComponent
)
;
return
AppComponent
;
}
(
)
)
;
var
fn
=
function
(
arg
)
{
console
.
log
(
"
here
"
)
;
}
;
fn
(
"
arg
"
)
;
var
AnotherThing
=
(
function
(
)
{
function
AnotherThing
(
)
{
this
.
prop
=
4
;
}
return
AnotherThing
;
}
(
)
)
;
var
SubDecl
=
(
function
(
_super
)
{
__extends
(
SubDecl
_super
)
;
function
SubDecl
(
)
{
var
_this
=
_super
!
=
=
null
&
&
_super
.
apply
(
this
arguments
)
|
|
this
;
_this
.
prop
=
4
;
return
_this
;
}
return
SubDecl
;
}
(
AnotherThing
)
)
;
var
SubVar
=
(
function
(
_super
)
{
__extends
(
SubExpr
_super
)
;
function
SubExpr
(
)
{
var
_this
=
_super
!
=
=
null
&
&
_super
.
apply
(
this
arguments
)
|
|
this
;
_this
.
prop
=
4
;
return
_this
;
}
return
SubExpr
;
}
(
AnotherThing
)
)
;
function
test
(
)
{
eval
(
"
"
)
;
console
.
log
(
"
pause
here
"
)
;
}
return
test
;
}
(
)
)
;
