var
webpack3Babel7StepOverRegeneratorAwait
=
(
function
(
modules
)
{
var
installedModules
=
{
}
;
function
__webpack_require__
(
moduleId
)
{
if
(
installedModules
[
moduleId
]
)
{
return
installedModules
[
moduleId
]
.
exports
;
}
var
module
=
installedModules
[
moduleId
]
=
{
i
:
moduleId
l
:
false
exports
:
{
}
}
;
modules
[
moduleId
]
.
call
(
module
.
exports
module
module
.
exports
__webpack_require__
)
;
module
.
l
=
true
;
return
module
.
exports
;
}
__webpack_require__
.
m
=
modules
;
__webpack_require__
.
c
=
installedModules
;
__webpack_require__
.
d
=
function
(
exports
name
getter
)
{
if
(
!
__webpack_require__
.
o
(
exports
name
)
)
{
Object
.
defineProperty
(
exports
name
{
configurable
:
false
enumerable
:
true
get
:
getter
}
)
;
}
}
;
__webpack_require__
.
n
=
function
(
module
)
{
var
getter
=
module
&
&
module
.
__esModule
?
function
getDefault
(
)
{
return
module
[
'
default
'
]
;
}
:
function
getModuleExports
(
)
{
return
module
;
}
;
__webpack_require__
.
d
(
getter
'
a
'
getter
)
;
return
getter
;
}
;
__webpack_require__
.
o
=
function
(
object
property
)
{
return
Object
.
prototype
.
hasOwnProperty
.
call
(
object
property
)
;
}
;
__webpack_require__
.
p
=
"
"
;
return
__webpack_require__
(
__webpack_require__
.
s
=
0
)
;
}
)
(
[
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
Object
.
defineProperty
(
__webpack_exports__
"
__esModule
"
{
value
:
true
}
)
;
__webpack_exports__
[
"
default
"
]
=
root
;
function
asyncGeneratorStep
(
gen
resolve
reject
_next
_throw
key
arg
)
{
try
{
var
info
=
gen
[
key
]
(
arg
)
;
var
value
=
info
.
value
;
}
catch
(
error
)
{
reject
(
error
)
;
return
;
}
if
(
info
.
done
)
{
resolve
(
value
)
;
}
else
{
Promise
.
resolve
(
value
)
.
then
(
_next
_throw
)
;
}
}
function
_asyncToGenerator
(
fn
)
{
return
function
(
)
{
var
self
=
this
args
=
arguments
;
return
new
Promise
(
function
(
resolve
reject
)
{
var
gen
=
fn
.
apply
(
self
args
)
;
function
_next
(
value
)
{
asyncGeneratorStep
(
gen
resolve
reject
_next
_throw
"
next
"
value
)
;
}
function
_throw
(
err
)
{
asyncGeneratorStep
(
gen
resolve
reject
_next
_throw
"
throw
"
err
)
;
}
_next
(
undefined
)
;
}
)
;
}
;
}
var
fn
=
function
(
)
{
var
_fn
=
_asyncToGenerator
(
regeneratorRuntime
.
mark
(
function
_callee
(
)
{
return
regeneratorRuntime
.
wrap
(
function
_callee
(
_context
)
{
while
(
1
)
{
switch
(
_context
.
prev
=
_context
.
next
)
{
case
0
:
console
.
log
(
"
pause
here
"
)
;
_context
.
next
=
3
;
return
doAsync
(
)
;
case
3
:
console
.
log
(
"
stopped
here
"
)
;
case
4
:
case
"
end
"
:
return
_context
.
stop
(
)
;
}
}
}
_callee
this
)
;
}
)
)
;
return
function
fn
(
)
{
return
_fn
.
apply
(
this
arguments
)
;
}
;
}
(
)
;
function
doAsync
(
)
{
return
Promise
.
resolve
(
)
;
}
function
root
(
)
{
fn
(
)
;
}
}
)
]
)
[
"
default
"
]
;
