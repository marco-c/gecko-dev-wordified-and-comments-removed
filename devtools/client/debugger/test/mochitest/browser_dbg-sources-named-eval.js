add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
sources
.
html
"
"
simple1
.
js
"
"
simple2
.
js
"
"
nested
-
source
.
js
"
"
long
.
js
"
)
;
const
{
selectors
:
{
getSelectedSource
}
getState
}
=
dbg
;
info
(
>
>
>
contentTask
:
evaluate
evaled
.
js
\
n
)
;
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
function
(
)
{
content
.
eval
(
"
window
.
evaledFunc
=
function
(
)
{
}
/
/
#
sourceURL
=
evaled
.
js
"
)
;
}
)
;
await
waitForSourceCount
(
dbg
3
)
;
ok
(
true
)
;
}
)
;
async
function
waitForSourceCount
(
dbg
i
)
{
await
waitUntil
(
(
)
=
>
{
return
findAllElements
(
dbg
"
sourceNodes
"
)
.
length
=
=
=
i
;
}
waiting
for
source
count
{
i
}
)
;
}
function
getLabel
(
dbg
index
)
{
return
findElement
(
dbg
"
sourceNode
"
index
)
.
textContent
.
trim
(
)
.
replace
(
/
^
[
\
s
\
u200b
]
*
/
g
"
"
)
;
}
