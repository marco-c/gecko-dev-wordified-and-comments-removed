"
use
strict
"
;
requestLongerTimeout
(
3
)
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
iframes
.
html
"
)
;
const
onReloaded
=
reload
(
dbg
)
;
await
waitForPaused
(
dbg
)
;
await
waitForLoadedSource
(
dbg
"
doc
-
iframes
.
html
"
)
;
await
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
iframes
.
html
"
)
.
id
11
)
;
await
resume
(
dbg
)
;
await
waitForPaused
(
dbg
)
;
await
waitForLoadedSource
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
;
await
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
.
id
11
)
;
await
resume
(
dbg
)
;
await
waitForPaused
(
dbg
)
;
await
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
.
id
16
)
;
await
waitFor
(
(
)
=
>
dbg
.
toolbox
.
isHighlighted
(
"
jsdebugger
"
)
)
;
ok
(
true
"
Debugger
is
highlighted
when
paused
"
)
;
info
(
"
Remove
the
iframe
and
wait
for
resume
"
)
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
]
(
)
=
>
{
const
iframe
=
content
.
document
.
querySelector
(
"
iframe
"
)
;
iframe
.
remove
(
)
;
}
)
;
await
waitForResumed
(
dbg
)
;
await
waitFor
(
(
)
=
>
!
dbg
.
toolbox
.
isHighlighted
(
"
jsdebugger
"
)
)
;
ok
(
true
"
Debugger
is
no
longer
highlighted
when
resumed
"
)
;
info
(
"
Wait
for
reload
to
complete
after
resume
"
)
;
await
onReloaded
;
}
)
;
