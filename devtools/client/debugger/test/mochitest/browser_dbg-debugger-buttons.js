"
use
strict
"
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
debugger
-
statements
.
html
"
)
;
const
onReloaded
=
reload
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
;
await
waitForPaused
(
dbg
)
;
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
.
id
11
)
;
info
(
"
resume
"
)
;
await
clickResume
(
dbg
)
;
await
waitForPaused
(
dbg
)
;
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
.
id
16
)
;
info
(
"
step
over
"
)
;
await
clickStepOver
(
dbg
)
;
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
.
id
17
)
;
info
(
"
step
into
"
)
;
await
clickStepIn
(
dbg
)
;
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
.
id
22
)
;
info
(
"
step
over
"
)
;
await
clickStepOver
(
dbg
)
;
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
.
id
24
)
;
info
(
"
step
out
"
)
;
await
clickStepOut
(
dbg
)
;
assertPausedAtSourceAndLine
(
dbg
findSource
(
dbg
"
doc
-
debugger
-
statements
.
html
"
)
.
id
18
)
;
await
resume
(
dbg
)
;
info
(
"
Wait
for
reload
to
complete
after
resume
"
)
;
await
onReloaded
;
}
)
;
function
clickButton
(
dbg
button
)
{
const
resumeFired
=
waitForDispatch
(
dbg
.
store
"
COMMAND
"
)
;
clickElement
(
dbg
button
)
;
return
resumeFired
;
}
async
function
clickStepOver
(
dbg
)
{
await
clickButton
(
dbg
"
stepOver
"
)
;
return
waitForPaused
(
dbg
)
;
}
async
function
clickStepIn
(
dbg
)
{
await
clickButton
(
dbg
"
stepIn
"
)
;
return
waitForPaused
(
dbg
)
;
}
async
function
clickStepOut
(
dbg
)
{
await
clickButton
(
dbg
"
stepOut
"
)
;
return
waitForPaused
(
dbg
)
;
}
async
function
clickResume
(
dbg
)
{
return
clickButton
(
dbg
"
resume
"
)
;
}
