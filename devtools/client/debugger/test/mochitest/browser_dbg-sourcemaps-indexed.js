requestLongerTimeout
(
2
)
;
function
assertBpInGutter
(
dbg
lineNumber
)
{
const
el
=
findElement
(
dbg
"
breakpoint
"
)
;
const
bpLineNumber
=
+
el
.
querySelector
(
"
.
CodeMirror
-
linenumber
"
)
.
innerText
;
is
(
bpLineNumber
lineNumber
"
Breakpoint
is
on
the
correct
line
in
the
gutter
"
)
;
}
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
sourcemaps
-
indexed
.
html
"
"
main
.
js
"
"
main
.
min
.
js
"
)
;
const
{
selectors
:
{
getBreakpoint
getBreakpointCount
}
getState
}
=
dbg
;
ok
(
true
"
Original
sources
exist
"
)
;
const
mainSrc
=
findSource
(
dbg
"
main
.
js
"
)
;
await
selectSource
(
dbg
mainSrc
)
;
await
addBreakpoint
(
dbg
mainSrc
4
2
)
;
is
(
getBreakpointCount
(
)
1
"
One
breakpoint
exists
"
)
;
ok
(
getBreakpoint
(
{
sourceId
:
mainSrc
.
id
line
:
4
column
:
2
}
)
"
Breakpoint
has
correct
line
"
)
;
assertBpInGutter
(
dbg
4
)
;
invokeInTab
(
"
logMessage
"
)
;
await
waitForPaused
(
dbg
)
;
assertPausedLocation
(
dbg
)
;
ok
(
findElement
(
dbg
"
sourceMapLink
"
)
"
Sourcemap
link
in
original
source
"
)
;
await
selectSource
(
dbg
"
main
.
min
.
js
"
)
;
ok
(
!
findElement
(
dbg
"
sourceMapLink
"
)
"
No
Sourcemap
link
exists
in
generated
source
"
)
;
}
)
;
