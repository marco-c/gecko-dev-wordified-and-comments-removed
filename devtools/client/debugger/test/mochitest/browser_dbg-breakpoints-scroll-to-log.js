"
use
strict
"
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
scripts
.
html
"
)
;
await
selectSource
(
dbg
"
long
.
js
"
)
;
await
waitForSelectedSource
(
dbg
"
long
.
js
"
)
;
await
addBreakpoint
(
dbg
"
long
.
js
"
66
)
;
await
waitForBreakpoint
(
dbg
"
long
.
js
"
66
)
;
info
(
"
scroll
editor
to
the
top
"
)
;
await
scrollEditorIntoView
(
dbg
1
0
)
;
ok
(
isScrolledPositionVisible
(
dbg
1
0
)
"
editor
is
scrolled
to
the
top
.
"
)
;
info
(
"
open
breakpointContextMenu
and
select
add
log
"
)
;
await
openBreakpointContextMenu
(
dbg
)
;
selectContextMenuItem
(
dbg
{
selectors
.
addLogItem
}
{
selectors
.
editLogItem
}
)
;
info
(
"
set
the
log
value
"
)
;
await
typeInPanel
(
dbg
"
this
.
todos
"
)
;
await
waitForDispatch
(
dbg
.
store
"
SET_BREAKPOINT
"
)
;
ok
(
isScrolledPositionVisible
(
dbg
67
)
"
editor
is
scrolled
to
the
log
input
line
.
"
)
;
info
(
"
scroll
editor
to
the
top
"
)
;
await
scrollEditorIntoView
(
dbg
1
0
)
;
ok
(
isScrolledPositionVisible
(
dbg
1
0
)
"
editor
is
scrolled
to
the
top
.
"
)
;
info
(
"
open
breakpointContextMenu
and
select
edit
log
"
)
;
await
openBreakpointContextMenu
(
dbg
)
;
selectContextMenuItem
(
dbg
{
selectors
.
addLogItem
}
{
selectors
.
editLogItem
}
)
;
info
(
"
set
the
log
value
"
)
;
await
typeInPanel
(
dbg
"
.
id
"
)
;
await
waitForDispatch
(
dbg
.
store
"
SET_BREAKPOINT
"
)
;
ok
(
isScrolledPositionVisible
(
dbg
67
)
"
editor
is
scrolled
to
the
log
input
line
.
"
)
;
}
)
;
async
function
openBreakpointContextMenu
(
dbg
)
{
rightClickElement
(
dbg
"
breakpointItem
"
2
)
;
await
waitForContextMenu
(
dbg
)
;
}
