"
use
strict
"
;
add_task
(
async
function
testTracingFunctionReturn
(
)
{
await
pushPref
(
"
devtools
.
debugger
.
features
.
javascript
-
tracing
"
true
)
;
const
jsCode
=
async
function
foo
(
)
{
nullReturn
(
)
;
falseReturn
(
)
;
await
new
Promise
(
r
=
>
setTimeout
(
r
0
)
)
;
return
bar
(
)
;
}
;
function
nullReturn
(
)
{
return
null
;
}
function
falseReturn
(
)
{
return
false
;
}
function
bar
(
)
{
return
42
;
}
;
function
throwingFunction
(
)
{
throw
new
Error
(
"
the
exception
"
)
}
;
const
dbg
=
await
initDebuggerWithAbsoluteURL
(
"
data
:
text
/
html
"
+
encodeURIComponent
(
<
script
>
{
jsCode
}
<
/
script
>
<
body
>
<
/
body
>
)
)
;
await
toggleJsTracerMenuItem
(
dbg
"
#
jstracer
-
menu
-
item
-
console
"
)
;
await
toggleJsTracerMenuItem
(
dbg
"
#
jstracer
-
menu
-
item
-
function
-
return
"
)
;
info
(
"
Enable
tracing
with
function
returns
but
without
values
"
)
;
await
toggleJsTracer
(
dbg
.
toolbox
)
;
invokeInTab
(
"
foo
"
)
;
await
hasConsoleMessage
(
dbg
"
interpreter
foo
"
)
;
await
hasConsoleMessage
(
dbg
"
interpreter
bar
"
)
;
await
hasConsoleMessage
(
dbg
"
bar
"
)
;
await
hasConsoleMessage
(
dbg
"
foo
"
)
;
await
toggleJsTracer
(
dbg
.
toolbox
)
;
await
toggleJsTracerMenuItem
(
dbg
"
#
jstracer
-
menu
-
item
-
log
-
values
"
)
;
info
(
"
Re
-
enable
with
returned
values
"
)
;
await
toggleJsTracer
(
dbg
.
toolbox
)
;
invokeInTab
(
"
foo
"
)
;
await
hasConsoleMessage
(
dbg
"
interpreter
foo
"
)
;
await
hasConsoleMessage
(
dbg
"
interpreter
bar
"
)
;
await
hasConsoleMessage
(
dbg
"
bar
return
42
"
)
;
await
hasConsoleMessage
(
dbg
"
interpreter
nullReturn
"
)
;
await
hasConsoleMessage
(
dbg
"
nullReturn
return
null
"
)
;
await
hasConsoleMessage
(
dbg
"
interpreter
falseReturn
"
)
;
await
hasConsoleMessage
(
dbg
"
falseReturn
return
false
"
)
;
await
hasConsoleMessage
(
dbg
foo
return
\
nPromise
{
<
state
>
:
"
fulfilled
"
<
value
>
:
42
}
)
;
invokeInTab
(
"
throwingFunction
"
)
.
catch
(
(
)
=
>
{
}
)
;
await
hasConsoleMessage
(
dbg
throwingFunction
throw
\
nError
:
the
exception
)
;
info
(
"
Stop
tracing
"
)
;
await
toggleJsTracer
(
dbg
.
toolbox
)
;
info
(
"
Toggle
the
two
settings
to
the
default
value
"
)
;
await
toggleJsTracerMenuItem
(
dbg
"
#
jstracer
-
menu
-
item
-
log
-
values
"
)
;
await
toggleJsTracerMenuItem
(
dbg
"
#
jstracer
-
menu
-
item
-
function
-
return
"
)
;
Services
.
prefs
.
clearUserPref
(
"
devtools
.
debugger
.
javascript
-
tracing
-
on
-
next
-
interaction
"
)
;
}
)
;
