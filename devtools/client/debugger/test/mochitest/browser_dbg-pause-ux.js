"
use
strict
"
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
scripts
.
html
"
)
;
const
longSrc
=
findSource
(
dbg
"
long
.
js
"
)
;
await
selectSource
(
dbg
"
long
.
js
"
)
;
await
addBreakpoint
(
dbg
longSrc
66
)
;
invokeInTab
(
"
testModel
"
)
;
await
waitForPaused
(
dbg
"
long
.
js
"
)
;
await
waitForScrolling
(
dbg
)
;
ok
(
isScrolledPositionVisible
(
dbg
66
)
"
The
paused
line
is
visible
"
)
;
info
(
"
1
.
adding
a
breakpoint
should
not
scroll
the
editor
"
)
;
await
scrollEditorIntoView
(
dbg
0
0
)
;
await
addBreakpoint
(
dbg
longSrc
11
)
;
ok
(
isScrolledPositionVisible
(
dbg
0
)
"
scroll
position
"
)
;
info
(
"
2
.
searching
should
jump
to
the
match
"
)
;
pressKey
(
dbg
"
fileSearch
"
)
;
type
(
dbg
"
check
"
)
;
const
cm
=
getCM
(
dbg
)
;
await
waitFor
(
(
)
=
>
cm
.
getSelection
(
)
=
=
"
check
"
"
Wait
for
actual
selection
in
CodeMirror
"
)
;
is
(
cm
.
getCursor
(
)
.
line
26
"
The
line
of
first
check
occurence
in
long
.
js
is
selected
(
this
is
zero
-
based
)
"
)
;
is
(
cm
.
getCursor
(
)
.
ch
51
"
The
column
of
first
check
occurence
in
long
.
js
is
selected
(
this
is
zero
-
based
)
"
)
;
ok
(
!
isScrolledPositionVisible
(
dbg
66
)
"
The
paused
line
is
no
longer
visible
"
)
;
ok
(
isScrolledPositionVisible
(
dbg
26
)
"
The
line
with
the
text
match
is
now
visible
"
)
;
}
)
;
