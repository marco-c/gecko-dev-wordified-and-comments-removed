"
use
strict
"
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
sources
.
html
"
)
;
await
waitForSources
(
dbg
"
simple1
.
js
"
"
simple2
.
js
"
)
;
await
selectSource
(
dbg
"
simple2
.
js
"
)
;
await
addBreakpoint
(
dbg
"
simple2
.
js
"
5
)
;
invokeInTab
(
"
main
"
)
;
await
waitForPaused
(
dbg
)
;
findElement
(
dbg
"
frame
"
2
)
.
focus
(
)
;
let
pausedLocation
=
findElementWithSelector
(
dbg
"
.
paused
-
location
"
)
;
ok
(
pausedLocation
.
classList
.
contains
(
"
first
-
column
"
)
"
This
paused
caret
is
displayed
as
the
first
element
in
the
line
"
)
;
const
dispatched
=
waitForDispatch
(
dbg
.
store
"
ADD_INLINE_PREVIEW
"
)
;
await
clickElement
(
dbg
"
frame
"
2
)
;
await
dispatched
;
await
waitForRequestsToSettle
(
dbg
)
;
await
waitForSelectedSource
(
dbg
"
simple1
.
js
"
)
;
await
waitForSelectedLocation
(
dbg
4
18
)
;
pausedLocation
=
findElementWithSelector
(
dbg
"
.
paused
-
location
"
)
;
ok
(
!
pausedLocation
.
classList
.
contains
(
"
first
-
column
"
)
"
This
paused
caret
is
no
longer
displayed
as
the
first
element
in
the
line
"
)
;
await
resume
(
dbg
)
;
await
selectSource
(
dbg
"
simple2
.
js
"
)
;
info
(
"
Ensuring
there
'
s
no
zombie
debug
line
"
)
;
is
(
findAllElements
(
dbg
"
pausedLine
"
)
.
length
0
"
Debug
line
no
longer
exists
!
"
)
;
}
)
;
