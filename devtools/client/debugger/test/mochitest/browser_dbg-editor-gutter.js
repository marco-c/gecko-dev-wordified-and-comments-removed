"
use
strict
"
;
PromiseTestUtils
.
allowMatchingRejectionsGlobally
(
/
NS_ERROR_NOT_INITIALIZED
/
)
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
scripts
.
html
"
"
simple1
.
js
"
)
;
const
source
=
findSource
(
dbg
"
simple1
.
js
"
)
;
await
selectSource
(
dbg
source
)
;
await
clickGutter
(
dbg
4
)
;
await
waitForDispatch
(
dbg
.
store
"
SET_BREAKPOINT
"
)
;
is
(
dbg
.
selectors
.
getBreakpointCount
(
)
1
"
One
breakpoint
exists
"
)
;
await
assertBreakpoint
(
dbg
4
)
;
await
clickGutter
(
dbg
4
)
;
await
waitForDispatch
(
dbg
.
store
"
REMOVE_BREAKPOINT
"
)
;
is
(
dbg
.
selectors
.
getBreakpointCount
(
)
0
"
No
breakpoints
exist
"
)
;
await
assertNoBreakpoint
(
dbg
4
)
;
}
)
;
add_task
(
async
function
(
)
{
info
(
"
Ensure
clicking
on
gutter
to
add
breakpoint
will
un
-
blackbox
source
"
)
;
const
dbg
=
await
initDebugger
(
"
doc
-
sourcemaps3
.
html
"
)
;
dbg
.
actions
.
toggleMapScopes
(
)
;
await
waitForSources
(
dbg
"
bundle
.
js
"
"
sorted
.
js
"
"
test
.
js
"
)
;
info
(
"
blackbox
the
source
"
)
;
const
sortedSrc
=
findSource
(
dbg
"
sorted
.
js
"
)
;
await
selectSource
(
dbg
sortedSrc
)
;
await
clickElement
(
dbg
"
blackbox
"
)
;
await
waitForDispatch
(
dbg
.
store
"
BLACKBOX
"
)
;
invokeInTab
(
"
test
"
)
;
assertNotPaused
(
dbg
)
;
info
(
"
ensure
gutter
breakpoint
gets
set
with
click
"
)
;
await
clickGutter
(
dbg
4
)
;
await
waitForDispatch
(
dbg
.
store
"
SET_BREAKPOINT
"
)
;
is
(
dbg
.
selectors
.
getBreakpointCount
(
)
1
"
One
breakpoint
exists
"
)
;
await
assertBreakpoint
(
dbg
4
)
;
invokeInTab
(
"
test
"
)
;
await
waitForPaused
(
dbg
)
;
ok
(
true
"
source
is
un
-
blackboxed
"
)
;
}
)
;
