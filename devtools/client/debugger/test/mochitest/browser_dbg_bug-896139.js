const
TAB_URL
=
EXAMPLE_URL
+
"
doc_bug
-
896139
.
html
"
;
const
SCRIPT_URL
=
"
code_bug
-
896139
.
js
"
;
function
test
(
)
{
Task
.
spawn
(
function
*
(
)
{
function
testBreakpoint
(
)
{
let
promise
=
waitForDebuggerEvents
(
panel
win
.
EVENTS
.
FETCHED_SCOPES
)
;
callInTab
(
tab
"
f
"
)
;
return
promise
.
then
(
(
)
=
>
doResume
(
panel
)
)
;
}
let
[
tab
panel
]
=
yield
initDebugger
(
)
;
let
win
=
panel
.
panelWin
;
let
Sources
=
win
.
DebuggerView
.
Sources
;
yield
navigateActiveTabTo
(
panel
TAB_URL
win
.
EVENTS
.
SOURCE_SHOWN
)
;
if
(
Sources
.
selectedItem
.
attachment
.
source
.
url
.
indexOf
(
SCRIPT_URL
)
=
=
=
-
1
)
{
if
(
Sources
.
itemCount
=
=
1
)
{
yield
waitForDebuggerEvents
(
panel
win
.
EVENTS
.
NEW_SOURCE
)
;
yield
waitForTick
(
)
;
}
let
onSource
=
waitForSourceAndCaret
(
panel
SCRIPT_URL
1
)
;
Sources
.
selectedValue
=
getSourceActor
(
win
.
DebuggerView
.
Sources
EXAMPLE_URL
+
SCRIPT_URL
)
;
yield
onSource
;
}
yield
panel
.
addBreakpoint
(
{
actor
:
getSourceActor
(
win
.
DebuggerView
.
Sources
EXAMPLE_URL
+
SCRIPT_URL
)
line
:
6
}
)
;
if
(
panel
.
panelWin
.
gThreadClient
.
state
!
=
=
"
attached
"
)
{
yield
waitForThreadEvents
(
panel
"
resumed
"
)
;
}
yield
testBreakpoint
(
)
;
yield
reloadActiveTab
(
panel
win
.
EVENTS
.
SOURCE_SHOWN
)
;
yield
testBreakpoint
(
)
;
yield
closeDebuggerAndFinish
(
panel
)
;
}
)
;
}
