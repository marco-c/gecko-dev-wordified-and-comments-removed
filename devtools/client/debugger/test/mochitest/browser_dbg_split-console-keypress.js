const
TAB_URL
=
EXAMPLE_URL
+
"
doc_step
-
many
-
statements
.
html
"
;
function
test
(
)
{
requestLongerTimeout
(
2
)
;
let
gDebugger
gToolbox
gThreadClient
gTab
gPanel
;
let
options
=
{
source
:
TAB_URL
line
:
1
}
;
initDebugger
(
TAB_URL
options
)
.
then
(
(
[
aTab
debuggeeWin
aPanel
]
)
=
>
{
gPanel
=
aPanel
;
gDebugger
=
aPanel
.
panelWin
;
gToolbox
=
gDevTools
.
getToolbox
(
aPanel
.
target
)
;
gTab
=
aTab
;
gThreadClient
=
gDebugger
.
DebuggerController
.
activeThread
;
testConsole
(
)
;
}
)
;
let
testConsole
=
Task
.
async
(
function
*
(
)
{
let
jsterm
=
yield
getSplitConsole
(
gToolbox
gDebugger
)
;
ok
(
gToolbox
.
splitConsole
"
Split
console
is
shown
.
"
)
;
let
stepTests
=
[
{
key
:
"
KEY_F11
"
keyRepeat
:
1
caretLine
:
16
}
{
key
:
"
KEY_F11
"
keyRepeat
:
2
caretLine
:
18
}
{
key
:
"
KEY_F11
"
keyRepeat
:
2
caretLine
:
27
}
{
key
:
"
KEY_F10
"
keyRepeat
:
1
caretLine
:
27
}
{
key
:
"
KEY_F11
"
keyRepeat
:
1
caretLine
:
18
}
{
key
:
"
KEY_F11
"
keyRepeat
:
5
caretLine
:
32
}
{
key
:
"
KEY_F11
"
modifier
:
"
Shift
"
keyRepeat
:
1
caretLine
:
29
}
{
key
:
"
KEY_F11
"
modifier
:
"
Shift
"
keyRepeat
:
2
caretLine
:
34
}
{
key
:
"
KEY_F11
"
modifier
:
"
Shift
"
keyRepeat
:
2
caretLine
:
34
}
]
;
executeSoon
(
(
)
=
>
generateMouseClickInTab
(
gTab
"
content
.
document
.
getElementById
(
'
start
'
)
"
)
)
;
yield
waitForPause
(
gThreadClient
)
;
let
consoleLostFocus
=
false
;
jsterm
.
focus
(
)
;
const
node
=
jsterm
.
inputNode
|
|
jsterm
.
node
;
node
.
addEventListener
(
"
blur
"
(
)
=
>
{
consoleLostFocus
=
true
;
}
)
;
is
(
gThreadClient
.
paused
true
"
Should
be
paused
at
debugger
statement
.
"
)
;
for
(
let
i
=
0
thisTest
;
thisTest
=
stepTests
[
i
]
;
i
+
+
)
{
while
(
thisTest
.
keyRepeat
>
0
)
{
thisTest
.
keyRepeat
-
-
;
let
keyMods
=
thisTest
.
modifier
=
=
=
"
Shift
"
?
{
shiftKey
:
true
}
:
{
}
;
executeSoon
(
(
)
=
>
{
EventUtils
.
synthesizeKey
(
thisTest
.
key
keyMods
)
;
}
)
;
yield
waitForPause
(
gThreadClient
)
;
}
is
(
gThreadClient
.
paused
true
"
Should
still
be
paused
"
)
;
ok
(
isDebugPos
(
gPanel
thisTest
.
caretLine
)
"
Test
"
+
i
+
"
:
DebugPos
at
line
"
+
thisTest
.
caretLine
)
;
}
is
(
consoleLostFocus
false
"
Console
input
should
not
lose
focus
"
)
;
executeSoon
(
(
)
=
>
EventUtils
.
synthesizeKey
(
"
KEY_F8
"
)
)
;
consoleLostFocus
=
false
;
gPanel
.
target
.
on
(
"
thread
-
resumed
"
(
)
=
>
{
is
(
gThreadClient
.
paused
false
"
Should
not
be
paused
after
resume
"
)
;
is
(
consoleLostFocus
false
"
Resume
-
console
should
keep
focus
"
)
;
closeDebuggerAndFinish
(
gPanel
)
;
}
)
;
}
)
;
}
