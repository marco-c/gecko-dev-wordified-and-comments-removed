add_task
(
async
function
(
)
{
await
pushPref
(
"
devtools
.
debugger
.
end
-
panel
-
size
"
600
)
;
const
dbg
=
await
initDebugger
(
"
doc
-
script
-
switching
.
html
"
)
;
const
{
toolbox
}
=
dbg
;
await
addExpression
(
dbg
"
window
.
document
.
querySelector
(
'
button
'
)
"
)
;
await
waitForElement
(
dbg
"
openInspector
"
)
;
const
inspectorNode
=
findElement
(
dbg
"
openInspector
"
)
;
const
view
=
inspectorNode
.
ownerDocument
.
defaultView
;
const
inspectorFront
=
await
toolbox
.
target
.
getFront
(
"
inspector
"
)
;
const
onNodeHighlight
=
inspectorFront
.
highlighter
.
once
(
"
node
-
highlight
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
inspectorNode
{
type
:
"
mousemove
"
}
view
)
;
const
nodeFront
=
await
onNodeHighlight
;
is
(
nodeFront
.
displayName
"
button
"
"
The
correct
node
was
highlighted
"
)
;
inspectorNode
.
click
(
)
;
await
waitForInspectorPanelChange
(
dbg
)
;
}
)
;
add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
event
-
handler
.
html
"
)
;
invokeInTab
(
"
synthesizeClick
"
)
;
await
waitForPaused
(
dbg
)
;
findElement
(
dbg
"
frame
"
2
)
.
focus
(
)
;
await
clickElement
(
dbg
"
frame
"
2
)
;
await
tryHovering
(
dbg
5
8
"
popup
"
)
;
await
waitForElement
(
dbg
"
openInspector
"
)
;
findElement
(
dbg
"
openInspector
"
)
.
click
(
)
;
await
waitForInspectorPanelChange
(
dbg
)
;
}
)
;
