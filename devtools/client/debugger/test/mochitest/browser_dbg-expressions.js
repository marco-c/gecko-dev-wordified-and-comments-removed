add_task
(
async
function
(
)
{
const
dbg
=
await
initDebugger
(
"
doc
-
script
-
switching
.
html
"
)
;
invokeInTab
(
"
firstCall
"
)
;
await
waitForPaused
(
dbg
)
;
await
addExpression
(
dbg
"
f
"
)
;
is
(
getWatchExpressionLabel
(
dbg
1
)
"
f
"
)
;
is
(
getWatchExpressionValue
(
dbg
1
)
"
(
unavailable
)
"
)
;
await
editExpression
(
dbg
"
oo
"
)
;
is
(
getWatchExpressionLabel
(
dbg
1
)
"
foo
(
)
"
)
;
assertEmptyValue
(
dbg
1
)
;
await
addExpression
(
dbg
"
location
"
)
;
is
(
getWatchExpressionLabel
(
dbg
2
)
"
location
"
)
;
ok
(
getWatchExpressionValue
(
dbg
2
)
.
includes
(
"
Location
"
)
"
has
a
value
"
)
;
await
toggleExpressionNode
(
dbg
2
)
;
is
(
findAllElements
(
dbg
"
expressionNodes
"
)
.
length
35
)
;
is
(
dbg
.
selectors
.
getExpressions
(
dbg
.
store
.
getState
(
)
)
.
length
2
)
;
await
deleteExpression
(
dbg
"
foo
"
)
;
await
deleteExpression
(
dbg
"
location
"
)
;
is
(
findAllElements
(
dbg
"
expressionNodes
"
)
.
length
0
)
;
is
(
dbg
.
selectors
.
getExpressions
(
dbg
.
store
.
getState
(
)
)
.
length
0
)
;
const
evaluated
=
waitForDispatch
(
dbg
.
store
"
EVALUATE_EXPRESSIONS
"
)
;
await
resume
(
dbg
)
;
await
evaluated
;
await
addExpression
(
dbg
"
location
"
)
;
is
(
dbg
.
selectors
.
getExpressions
(
dbg
.
store
.
getState
(
)
)
.
length
1
)
;
is
(
findAllElements
(
dbg
"
expressionNodes
"
)
.
length
1
)
;
await
toggleExpressionNode
(
dbg
1
)
;
is
(
findAllElements
(
dbg
"
expressionNodes
"
)
.
length
34
)
;
await
deleteExpression
(
dbg
"
location
"
)
;
is
(
findAllElements
(
dbg
"
expressionNodes
"
)
.
length
0
)
;
}
)
;
function
assertEmptyValue
(
dbg
index
)
{
const
value
=
findElement
(
dbg
"
expressionValue
"
index
)
;
if
(
value
)
{
is
(
value
.
innerText
"
"
)
;
return
;
}
is
(
value
null
)
;
}
