"
use
strict
"
;
const
Services
=
require
(
"
Services
"
)
;
function
getTopLevelWindow
(
window
)
{
return
window
.
browsingContext
.
topChromeWindow
;
}
exports
.
getTopLevelWindow
=
getTopLevelWindow
;
function
getDOMWindowUtils
(
window
)
{
return
window
.
windowUtils
;
}
exports
.
getDOMWindowUtils
=
getDOMWindowUtils
;
const
isStartupFinished
=
window
=
>
window
.
gBrowserInit
?
.
delayedStartupFinished
;
function
startup
(
window
)
{
return
new
Promise
(
resolve
=
>
{
if
(
isStartupFinished
(
window
)
)
{
resolve
(
window
)
;
return
;
}
Services
.
obs
.
addObserver
(
function
listener
(
{
subject
}
)
{
if
(
subject
=
=
=
window
)
{
Services
.
obs
.
removeObserver
(
listener
"
browser
-
delayed
-
startup
-
finished
"
)
;
resolve
(
window
)
;
}
}
"
browser
-
delayed
-
startup
-
finished
"
)
;
}
)
;
}
exports
.
startup
=
startup
;
