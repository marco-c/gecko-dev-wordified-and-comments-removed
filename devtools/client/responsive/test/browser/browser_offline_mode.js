"
use
strict
"
;
const
TEST_URL
=
"
https
:
/
/
example
.
net
/
document
-
builder
.
sjs
?
html
=
offline
"
;
addRDMTask
(
TEST_URL
async
function
(
{
browser
ui
}
)
{
await
selectNetworkThrottling
(
ui
"
Offline
"
)
;
browser
.
reloadWithFlags
(
Ci
.
nsIWebNavigation
.
LOAD_FLAGS_BYPASS_CACHE
)
;
await
BrowserTestUtils
.
browserLoaded
(
browser
false
TEST_URL
true
)
;
await
assertPageIsOffline
(
TEST_URL
)
;
await
selectNetworkThrottling
(
ui
"
No
Throttling
"
)
;
browser
.
reload
(
)
;
await
BrowserTestUtils
.
browserLoaded
(
browser
false
TEST_URL
false
)
;
await
assertPageIsOnline
(
TEST_URL
)
;
}
)
;
function
assertPageIsOnline
(
url
)
{
return
SpecialPowers
.
spawn
(
gBrowser
.
selectedTab
.
linkedBrowser
[
url
]
function
(
uri
)
{
is
(
content
.
document
.
documentURI
uri
Document
URI
is
actual
page
.
)
;
is
(
content
.
location
.
href
uri
"
Docshell
URI
is
the
original
URI
.
"
)
;
}
)
;
}
function
assertPageIsOffline
(
url
)
{
return
SpecialPowers
.
spawn
(
gBrowser
.
selectedTab
.
linkedBrowser
[
url
]
function
(
uri
)
{
is
(
content
.
document
.
documentURI
.
substring
(
0
27
)
"
about
:
neterror
?
e
=
netOffline
"
"
Document
URI
is
the
error
page
.
"
)
;
is
(
content
.
location
.
href
uri
"
Docshell
URI
is
the
original
URI
.
"
)
;
}
)
;
}
