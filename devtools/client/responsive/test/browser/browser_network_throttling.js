"
use
strict
"
;
const
throttlingProfiles
=
require
(
"
devtools
/
client
/
shared
/
components
/
throttling
/
profiles
"
)
;
const
TEST_URL
=
"
data
:
text
/
html
;
charset
=
utf
-
8
Network
throttling
test
"
;
addRDMTask
(
TEST_URL
async
function
(
{
ui
manager
}
)
{
testNetworkThrottlingSelectorLabel
(
ui
"
No
Throttling
"
)
;
await
testNetworkThrottlingState
(
ui
null
)
;
await
testThrottlingProfile
(
ui
"
Wi
-
Fi
"
)
;
await
testThrottlingProfile
(
ui
"
Regular
3G
"
)
;
await
selectNetworkThrottling
(
ui
"
No
Throttling
"
)
;
testNetworkThrottlingSelectorLabel
(
ui
"
No
Throttling
"
)
;
await
testNetworkThrottlingState
(
ui
null
)
;
}
{
usingBrowserUI
:
true
}
)
;
function
testNetworkThrottlingSelectorLabel
(
ui
expected
)
{
const
title
=
ui
.
toolWindow
.
document
.
querySelector
(
"
#
network
-
throttling
-
menu
.
title
"
)
;
is
(
title
.
textContent
expected
Button
title
should
be
changed
to
{
expected
}
)
;
}
var
testNetworkThrottlingState
=
async
function
(
ui
expected
)
{
const
state
=
await
ui
.
responsiveFront
.
getNetworkThrottling
(
)
;
Assert
.
deepEqual
(
state
expected
"
Network
throttling
state
should
be
"
+
JSON
.
stringify
(
expected
null
2
)
)
;
}
;
var
testThrottlingProfile
=
async
function
(
ui
profile
)
{
await
selectNetworkThrottling
(
ui
profile
)
;
testNetworkThrottlingSelectorLabel
(
ui
profile
)
;
const
data
=
throttlingProfiles
.
find
(
(
{
id
}
)
=
>
id
=
=
profile
)
;
const
{
download
upload
latency
}
=
data
;
await
testNetworkThrottlingState
(
ui
{
downloadThroughput
:
download
uploadThroughput
:
upload
latency
}
)
;
}
;
