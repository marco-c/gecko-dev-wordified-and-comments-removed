"
use
strict
"
;
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochikit
/
content
/
tests
/
SimpleTest
/
WindowSnapshot
.
js
"
this
)
;
const
TEST_URL
=
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
"
<
head
>
"
+
'
<
meta
name
=
"
viewport
"
content
=
"
width
=
device
-
width
initial
-
scale
=
1
"
/
>
'
+
"
<
/
head
>
"
+
'
<
body
>
<
div
style
=
"
background
:
orange
;
width
:
1000px
;
height
:
1000px
"
>
<
/
div
>
<
/
body
>
'
;
addRDMTask
(
TEST_URL
async
function
(
{
ui
manager
}
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
layout
.
testing
.
overlay
-
scrollbars
.
always
-
visible
"
true
]
]
}
)
;
info
(
"
-
-
-
Starting
viewport
test
output
-
-
-
"
)
;
const
browser
=
ui
.
getViewportBrowser
(
)
;
const
expected
=
[
false
true
]
;
for
(
const
e
of
expected
)
{
const
message
=
"
Meta
Viewport
"
+
(
e
?
"
ON
"
:
"
OFF
"
)
;
info
(
message
+
"
setting
meta
viewport
support
.
"
)
;
await
setTouchAndMetaViewportSupport
(
ui
e
.
metaSupport
)
;
await
setViewportSizeAndAwaitReflow
(
ui
manager
300
600
)
;
const
initialSnapshot
=
await
snapshotWindow
(
browser
)
;
await
setViewportSizeAndAwaitReflow
(
ui
manager
600
300
)
;
await
reloadBrowser
(
)
;
await
setViewportSizeAndAwaitReflow
(
ui
manager
300
600
)
;
const
finalSnapshot
=
await
snapshotWindow
(
browser
)
;
const
result
=
compareSnapshots
(
initialSnapshot
finalSnapshot
true
)
;
is
(
result
[
2
]
result
[
1
]
"
Window
snapshots
should
match
.
"
)
;
}
}
)
;
