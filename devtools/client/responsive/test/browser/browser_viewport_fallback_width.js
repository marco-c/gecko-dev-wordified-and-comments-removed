"
use
strict
"
;
const
TEST_URL
=
data
:
text
/
html
;
charset
=
utf
-
8
+
<
div
id
=
"
outer
"
style
=
"
display
:
grid
;
justify
-
items
:
end
;
font
-
size
:
64px
"
>
<
div
id
=
"
inner
"
>
Click
me
!
<
/
div
>
<
/
div
>
;
addRDMTask
(
TEST_URL
async
function
(
{
ui
manager
}
)
{
info
(
"
Toggling
on
touch
simulation
.
"
)
;
reloadOnTouchChange
(
true
)
;
await
toggleTouchSimulation
(
ui
)
;
await
setViewportSizeAndAwaitReflow
(
ui
manager
1280
600
)
;
await
testICBWidth
(
ui
)
;
info
(
"
Toggling
off
touch
simulation
.
"
)
;
await
toggleTouchSimulation
(
ui
)
;
reloadOnTouchChange
(
false
)
;
}
)
;
async
function
testICBWidth
(
ui
)
{
await
SpecialPowers
.
spawn
(
ui
.
getViewportBrowser
(
)
[
]
async
function
(
)
{
const
innerDiv
=
content
.
document
.
getElementById
(
"
inner
"
)
;
innerDiv
.
addEventListener
(
"
click
"
(
)
=
>
{
innerDiv
.
style
.
color
=
"
green
"
;
}
)
;
info
(
"
Check
that
touch
point
(
via
click
)
registers
on
inner
div
.
"
)
;
const
mousedown
=
ContentTaskUtils
.
waitForEvent
(
innerDiv
"
click
"
)
;
await
EventUtils
.
synthesizeClick
(
innerDiv
)
;
await
mousedown
;
const
win
=
content
.
document
.
defaultView
;
const
bg
=
win
.
getComputedStyle
(
innerDiv
)
.
getPropertyValue
(
"
color
"
)
;
is
(
bg
"
rgb
(
0
128
0
)
"
"
inner
div
'
s
background
color
changed
to
green
.
"
)
;
}
)
;
}
