"
use
strict
"
;
const
TEST_URL
=
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
'
<
head
>
<
meta
name
=
"
viewport
"
content
=
"
width
=
300
"
/
>
<
/
head
>
'
+
"
<
body
>
meta
viewport
width
300
<
/
body
>
"
;
addRDMTask
(
TEST_URL
async
function
(
{
ui
manager
}
)
{
info
(
"
-
-
-
Starting
viewport
test
output
-
-
-
"
)
;
const
expected
=
[
{
metaSupport
:
false
before
:
[
2
.
0
300
150
]
after
:
[
0
.
25
300
300
]
}
{
metaSupport
:
true
before
:
[
2
.
0
300
150
]
after
:
[
0
.
25
300
300
]
}
]
;
for
(
const
e
of
expected
)
{
const
b
=
e
.
before
;
const
a
=
e
.
after
;
const
message
=
"
Meta
Viewport
"
+
(
e
.
metaSupport
?
"
ON
"
:
"
OFF
"
)
;
info
(
message
+
"
setting
meta
viewport
support
.
"
)
;
await
setTouchAndMetaViewportSupport
(
ui
e
.
metaSupport
)
;
await
setViewportSizeAndAwaitReflow
(
ui
manager
600
300
)
;
await
testViewportZoomWidthAndHeight
(
message
+
"
before
resize
"
ui
b
[
0
]
b
[
1
]
b
[
2
]
)
;
await
setViewportSizeAndAwaitReflow
(
ui
manager
50
50
)
;
await
testViewportZoomWidthAndHeight
(
message
+
"
after
resize
"
ui
a
[
0
]
a
[
1
]
a
[
2
]
)
;
await
setViewportSizeAndAwaitReflow
(
ui
manager
600
300
)
;
await
testViewportZoomWidthAndHeight
(
message
+
"
return
to
initial
size
"
ui
b
[
0
]
b
[
1
]
b
[
2
]
)
;
}
}
)
;
