"
use
strict
"
;
const
{
PureComponent
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
.
js
"
)
;
const
dom
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
.
js
"
)
;
const
PropTypes
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
.
js
"
)
;
const
{
connect
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
redux
.
js
"
)
;
const
{
KeyCodes
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
keycodes
.
js
"
)
;
const
{
getStr
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
responsive
/
utils
/
l10n
.
js
"
)
;
class
UserAgentInput
extends
PureComponent
{
static
get
propTypes
(
)
{
return
{
onChangeUserAgent
:
PropTypes
.
func
.
isRequired
userAgent
:
PropTypes
.
string
.
isRequired
}
;
}
static
getDerivedStateFromProps
(
props
state
)
{
if
(
props
.
userAgent
!
=
=
state
.
prevUserAgent
)
{
return
{
value
:
props
.
userAgent
prevUserAgent
:
props
.
userAgent
}
;
}
return
null
;
}
constructor
(
props
)
{
super
(
props
)
;
this
.
state
=
{
value
:
this
.
props
.
userAgent
prevUserAgent
:
this
.
props
.
userAgent
}
;
this
.
onChange
=
this
.
onChange
.
bind
(
this
)
;
this
.
onKeyUp
=
this
.
onKeyUp
.
bind
(
this
)
;
}
onChange
(
{
target
}
)
{
const
value
=
target
.
value
;
this
.
setState
(
prevState
=
>
{
return
{
.
.
.
prevState
value
}
;
}
)
;
}
onKeyUp
(
{
target
keyCode
}
)
{
if
(
keyCode
=
=
KeyCodes
.
DOM_VK_RETURN
)
{
this
.
props
.
onChangeUserAgent
(
target
.
value
)
;
target
.
blur
(
)
;
}
if
(
keyCode
=
=
KeyCodes
.
DOM_VK_ESCAPE
)
{
target
.
blur
(
)
;
}
}
render
(
)
{
return
dom
.
label
(
{
id
:
"
user
-
agent
-
label
"
}
"
UA
:
"
dom
.
input
(
{
id
:
"
user
-
agent
-
input
"
className
:
"
text
-
input
"
onChange
:
this
.
onChange
onKeyUp
:
this
.
onKeyUp
placeholder
:
getStr
(
"
responsive
.
customUserAgent
"
)
type
:
"
text
"
value
:
this
.
state
.
value
}
)
)
;
}
}
const
mapStateToProps
=
state
=
>
{
return
{
userAgent
:
state
.
ui
.
userAgent
}
;
}
;
module
.
exports
=
connect
(
mapStateToProps
)
(
UserAgentInput
)
;
