"
use
strict
"
;
const
asyncStorage
=
require
(
"
resource
:
/
/
devtools
/
shared
/
async
-
storage
.
js
"
)
;
const
{
ADD_VIEWPORT
CHANGE_DEVICE
CHANGE_PIXEL_RATIO
CHANGE_VIEWPORT_ANGLE
REMOVE_DEVICE_ASSOCIATION
RESIZE_VIEWPORT
ROTATE_VIEWPORT
ZOOM_VIEWPORT
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
responsive
/
actions
/
index
.
js
"
)
;
module
.
exports
=
{
addViewport
(
userContextId
=
0
)
{
return
{
type
:
ADD_VIEWPORT
userContextId
}
;
}
changeDevice
(
id
device
deviceType
)
{
return
async
function
(
{
dispatch
}
)
{
dispatch
(
{
type
:
CHANGE_DEVICE
id
device
deviceType
}
)
;
try
{
await
asyncStorage
.
setItem
(
"
devtools
.
responsive
.
deviceState
"
{
id
device
deviceType
}
)
;
}
catch
(
e
)
{
console
.
error
(
e
)
;
}
}
;
}
changePixelRatio
(
id
pixelRatio
=
0
)
{
return
{
type
:
CHANGE_PIXEL_RATIO
id
pixelRatio
}
;
}
changeViewportAngle
(
id
angle
)
{
return
{
type
:
CHANGE_VIEWPORT_ANGLE
id
angle
}
;
}
removeDeviceAssociation
(
id
{
resetProfile
}
=
{
}
)
{
return
async
function
(
{
dispatch
}
)
{
window
.
postMessage
(
{
type
:
"
remove
-
device
-
association
"
resetProfile
}
)
;
dispatch
(
{
type
:
REMOVE_DEVICE_ASSOCIATION
id
}
)
;
await
asyncStorage
.
removeItem
(
"
devtools
.
responsive
.
deviceState
"
)
;
}
;
}
resizeViewport
(
id
width
height
)
{
return
{
type
:
RESIZE_VIEWPORT
id
width
height
}
;
}
rotateViewport
(
id
)
{
return
{
type
:
ROTATE_VIEWPORT
id
}
;
}
zoomViewport
(
id
zoom
)
{
return
{
type
:
ZOOM_VIEWPORT
id
zoom
}
;
}
}
;
