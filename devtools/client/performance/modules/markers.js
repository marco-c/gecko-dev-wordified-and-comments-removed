"
use
strict
"
;
const
{
L10N
}
=
require
(
"
devtools
/
client
/
performance
/
modules
/
global
"
)
;
const
{
Formatters
}
=
require
(
"
devtools
/
client
/
performance
/
modules
/
marker
-
formatters
"
)
;
const
TIMELINE_BLUEPRINT
=
{
"
UNKNOWN
"
:
{
group
:
2
colorName
:
"
graphs
-
grey
"
label
:
Formatters
.
UnknownLabel
}
"
Styles
"
:
{
group
:
0
colorName
:
"
graphs
-
purple
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
styles
"
)
fields
:
Formatters
.
StylesFields
}
"
StylesApplyChanges
"
:
{
group
:
0
colorName
:
"
graphs
-
purple
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
stylesApplyChanges
"
)
}
"
Reflow
"
:
{
group
:
0
colorName
:
"
graphs
-
purple
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
reflow
"
)
}
"
Paint
"
:
{
group
:
0
colorName
:
"
graphs
-
green
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
paint
"
)
}
"
Composite
"
:
{
group
:
0
colorName
:
"
graphs
-
green
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
composite
"
)
}
"
CompositeForwardTransaction
"
:
{
group
:
0
colorName
:
"
graphs
-
bluegrey
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
compositeForwardTransaction
"
)
}
"
DOMEvent
"
:
{
group
:
1
colorName
:
"
graphs
-
yellow
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
domevent
"
)
fields
:
Formatters
.
DOMEventFields
}
"
document
:
:
DOMContentLoaded
"
:
{
group
:
1
colorName
:
"
graphs
-
full
-
red
"
label
:
"
DOMContentLoaded
"
}
"
document
:
:
Load
"
:
{
group
:
1
colorName
:
"
graphs
-
full
-
blue
"
label
:
"
Load
"
}
"
Javascript
"
:
{
group
:
1
colorName
:
"
graphs
-
yellow
"
label
:
Formatters
.
JSLabel
fields
:
Formatters
.
JSFields
}
"
Parse
HTML
"
:
{
group
:
1
colorName
:
"
graphs
-
yellow
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
parseHTML
"
)
}
"
Parse
XML
"
:
{
group
:
1
colorName
:
"
graphs
-
yellow
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
parseXML
"
)
}
"
GarbageCollection
"
:
{
group
:
1
colorName
:
"
graphs
-
red
"
label
:
Formatters
.
GCLabel
fields
:
Formatters
.
GCFields
}
"
MinorGC
"
:
{
group
:
1
colorName
:
"
graphs
-
red
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
minorGC
"
)
fields
:
Formatters
.
MinorGCFields
}
"
nsCycleCollector
:
:
Collect
"
:
{
group
:
1
colorName
:
"
graphs
-
red
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
cycleCollection
"
)
fields
:
Formatters
.
CycleCollectionFields
}
"
nsCycleCollector
:
:
ForgetSkippable
"
:
{
group
:
1
colorName
:
"
graphs
-
red
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
cycleCollection
.
forgetSkippable
"
)
fields
:
Formatters
.
CycleCollectionFields
}
"
Worker
"
:
{
group
:
1
colorName
:
"
graphs
-
orange
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
worker
"
)
fields
:
Formatters
.
WorkerFields
}
"
MessagePort
"
:
{
group
:
1
colorName
:
"
graphs
-
orange
"
label
:
L10N
.
getStr
(
"
marker
.
label
.
messagePort
"
)
fields
:
Formatters
.
MessagePortFields
}
"
ConsoleTime
"
:
{
group
:
2
colorName
:
"
graphs
-
blue
"
label
:
Formatters
.
labelForProperty
(
L10N
.
getStr
(
"
marker
.
label
.
consoleTime
"
)
"
causeName
"
)
fields
:
Formatters
.
ConsoleTimeFields
nestable
:
false
collapsible
:
false
}
"
TimeStamp
"
:
{
group
:
2
colorName
:
"
graphs
-
blue
"
label
:
Formatters
.
labelForProperty
(
L10N
.
getStr
(
"
marker
.
label
.
timestamp
"
)
"
causeName
"
)
fields
:
Formatters
.
TimeStampFields
collapsible
:
false
}
}
;
exports
.
TIMELINE_BLUEPRINT
=
TIMELINE_BLUEPRINT
;
