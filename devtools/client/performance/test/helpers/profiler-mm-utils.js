"
use
strict
"
;
const
{
Cc
Ci
}
=
require
(
"
chrome
"
)
;
const
{
Task
}
=
require
(
"
resource
:
/
/
gre
/
modules
/
Task
.
jsm
"
)
;
const
FRAME_SCRIPT_UTILS_URL
=
"
chrome
:
/
/
devtools
/
content
/
shared
/
frame
-
script
-
utils
.
js
"
;
let
gMM
=
null
;
exports
.
PMM_loadFrameScripts
=
(
gBrowser
)
=
>
{
gMM
=
gBrowser
.
selectedBrowser
.
messageManager
;
gMM
.
loadFrameScript
(
FRAME_SCRIPT_UTILS_URL
false
)
;
}
;
exports
.
PMM_clearFrameScripts
=
(
)
=
>
{
gMM
=
null
;
}
;
exports
.
PMM_uniqueMessage
=
function
(
message
payload
)
{
if
(
!
gMM
)
{
throw
new
Error
(
"
PMM_loadFrameScripts
(
)
must
be
called
when
using
MessageManager
.
"
)
;
}
let
{
generateUUID
}
=
Cc
[
"
mozilla
.
org
/
uuid
-
generator
;
1
"
]
.
getService
(
Ci
.
nsIUUIDGenerator
)
;
payload
.
id
=
generateUUID
(
)
.
toString
(
)
;
return
new
Promise
(
resolve
=
>
{
gMM
.
addMessageListener
(
message
+
"
:
response
"
function
onHandler
(
{
data
}
)
{
if
(
payload
.
id
=
=
data
.
id
)
{
gMM
.
removeMessageListener
(
message
+
"
:
response
"
onHandler
)
;
resolve
(
data
.
data
)
;
}
}
)
;
gMM
.
sendAsyncMessage
(
message
payload
)
;
}
)
;
}
;
exports
.
PMM_isProfilerActive
=
(
)
=
>
{
return
exports
.
PMM_sendProfilerCommand
(
"
IsActive
"
)
;
}
;
exports
.
PMM_startProfiler
=
Task
.
async
(
function
*
(
{
entries
interval
features
}
)
{
let
isActive
=
(
yield
exports
.
PMM_sendProfilerCommand
(
"
IsActive
"
)
)
.
isActive
;
if
(
!
isActive
)
{
return
exports
.
PMM_sendProfilerCommand
(
"
StartProfiler
"
[
entries
interval
features
features
.
length
]
)
;
}
}
)
;
exports
.
PMM_stopProfiler
=
Task
.
async
(
function
*
(
)
{
let
isActive
=
(
yield
exports
.
PMM_sendProfilerCommand
(
"
IsActive
"
)
)
.
isActive
;
if
(
isActive
)
{
return
exports
.
PMM_sendProfilerCommand
(
"
StopProfiler
"
)
;
}
}
)
;
exports
.
PMM_sendProfilerCommand
=
(
method
args
=
[
]
)
=
>
{
return
exports
.
PMM_uniqueMessage
(
"
devtools
:
test
:
profiler
"
{
method
args
}
)
;
}
;
exports
.
PMM_evalInDebuggee
=
(
script
)
=
>
{
return
exports
.
PMM_uniqueMessage
(
"
devtools
:
test
:
eval
"
{
script
}
)
;
}
;
exports
.
PMM_consoleMethod
=
function
(
method
.
.
.
args
)
{
if
(
args
[
0
]
=
=
null
)
{
args
[
0
]
=
"
"
;
}
return
exports
.
PMM_uniqueMessage
(
"
devtools
:
test
:
console
"
{
method
args
}
)
;
}
;
