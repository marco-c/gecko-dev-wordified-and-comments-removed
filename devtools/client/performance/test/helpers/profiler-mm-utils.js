"
use
strict
"
;
let
gSelectedBrowser
=
null
;
exports
.
pmmInitWithBrowser
=
gBrowser
=
>
{
gSelectedBrowser
=
gBrowser
.
selectedBrowser
;
}
;
exports
.
pmmIsProfilerActive
=
(
)
=
>
{
return
exports
.
pmmSendProfilerCommand
(
"
IsActive
"
)
;
}
;
exports
.
pmmStartProfiler
=
async
function
(
{
entries
interval
features
}
)
{
const
isActive
=
(
await
exports
.
pmmSendProfilerCommand
(
"
IsActive
"
)
)
.
isActive
;
if
(
!
isActive
)
{
return
exports
.
pmmSendProfilerCommand
(
"
StartProfiler
"
[
entries
interval
features
features
.
length
]
)
;
}
return
null
;
}
;
exports
.
pmmStopProfiler
=
async
function
(
)
{
const
isActive
=
(
await
exports
.
pmmSendProfilerCommand
(
"
IsActive
"
)
)
.
isActive
;
if
(
isActive
)
{
return
exports
.
pmmSendProfilerCommand
(
"
StopProfiler
"
)
;
}
return
null
;
}
;
exports
.
pmmSendProfilerCommand
=
(
method
args
=
[
]
)
=
>
{
return
gSelectedBrowser
.
ownerGlobal
.
SpecialPowers
.
spawn
(
gSelectedBrowser
[
method
args
]
(
methodChild
argsChild
)
=
>
{
return
Services
.
profiler
[
methodChild
]
(
.
.
.
argsChild
)
;
}
)
;
}
;
exports
.
pmmConsoleMethod
=
function
(
method
.
.
.
args
)
{
return
gSelectedBrowser
.
ownerGlobal
.
SpecialPowers
.
spawn
(
gSelectedBrowser
[
method
args
]
(
methodChild
argsChild
)
=
>
{
content
.
console
[
methodChild
]
.
apply
(
content
.
console
argsChild
)
;
}
)
;
}
;
