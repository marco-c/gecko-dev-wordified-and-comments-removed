"
use
strict
"
;
const
{
BrowserTestUtils
}
=
require
(
"
resource
:
/
/
testing
-
common
/
BrowserTestUtils
.
jsm
"
)
;
const
Services
=
require
(
"
Services
"
)
;
const
{
waitForDelayedStartupFinished
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
wait
-
utils
"
)
;
const
{
gDevTools
}
=
require
(
"
devtools
/
client
/
framework
/
devtools
"
)
;
function
getRandomInt
(
min
max
)
{
return
Math
.
floor
(
Math
.
random
(
)
*
(
max
-
min
+
1
)
)
+
min
;
}
exports
.
addTab
=
function
(
{
url
win
}
options
=
{
}
)
{
let
id
=
getRandomInt
(
0
Number
.
MAX_SAFE_INTEGER
-
1
)
;
url
+
=
#
{
id
}
;
dump
(
Adding
tab
with
url
:
{
url
}
.
\
n
)
;
let
{
gBrowser
}
=
win
|
|
window
;
return
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
url
!
options
.
dontWaitForTabReady
)
;
}
;
exports
.
removeTab
=
function
(
tab
options
=
{
}
)
{
dump
(
Removing
tab
:
{
tab
.
linkedBrowser
.
currentURI
.
spec
}
.
\
n
)
;
return
new
Promise
(
resolve
=
>
{
BrowserTestUtils
.
removeTab
(
tab
)
.
then
(
(
)
=
>
resolve
(
tab
)
)
;
if
(
options
.
dontWaitForTabClose
)
{
resolve
(
tab
)
;
}
}
)
;
}
;
exports
.
addWindow
=
function
*
(
options
)
{
let
{
OpenBrowserWindow
}
=
Services
.
wm
.
getMostRecentWindow
(
gDevTools
.
chromeWindowType
)
;
let
win
=
OpenBrowserWindow
(
options
)
;
yield
waitForDelayedStartupFinished
(
win
)
;
return
win
;
}
;
