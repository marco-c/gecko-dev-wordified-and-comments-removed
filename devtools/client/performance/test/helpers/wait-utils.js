"
use
strict
"
;
const
{
CC
}
=
require
(
"
chrome
"
)
;
const
DevToolsUtils
=
require
(
"
devtools
/
shared
/
DevToolsUtils
"
)
;
const
{
once
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
event
-
utils
"
)
;
exports
.
busyWait
=
function
(
time
)
{
dump
(
Busy
waiting
for
:
{
time
}
milliseconds
.
\
n
)
;
const
start
=
Date
.
now
(
)
;
let
stack
;
while
(
Date
.
now
(
)
-
start
<
time
)
{
stack
=
CC
.
stack
;
}
}
;
exports
.
idleWait
=
function
(
time
)
{
dump
(
Idly
waiting
for
:
{
time
}
milliseconds
.
\
n
)
;
return
DevToolsUtils
.
waitForTime
(
time
)
;
}
;
exports
.
waitUntil
=
async
function
(
predicate
interval
=
100
tries
=
100
)
{
for
(
let
i
=
1
;
i
<
=
tries
;
i
+
+
)
{
if
(
await
predicate
(
)
)
{
dump
(
Predicate
returned
true
after
{
i
}
tries
.
\
n
)
;
return
;
}
await
exports
.
idleWait
(
interval
)
;
}
throw
new
Error
(
Predicate
returned
false
after
{
tries
}
tries
aborting
.
\
n
)
;
}
;
exports
.
waitForMozAfterPaint
=
function
(
window
)
{
return
once
(
window
"
MozAfterPaint
"
)
;
}
;
