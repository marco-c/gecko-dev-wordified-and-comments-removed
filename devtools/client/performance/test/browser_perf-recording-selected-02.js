"
use
strict
"
;
const
{
SIMPLE_URL
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
urls
"
)
;
const
{
initPerformanceInNewTab
teardownToolboxAndRemoveTab
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
panel
-
utils
"
)
;
const
{
startRecording
stopRecording
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
actions
"
)
;
const
{
once
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
event
-
utils
"
)
;
const
{
getSelectedRecordingIndex
setSelectedRecording
getRecordingsCount
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
recording
-
utils
"
)
;
add_task
(
async
function
(
)
{
requestLongerTimeout
(
4
)
;
let
{
panel
}
=
await
initPerformanceInNewTab
(
{
url
:
SIMPLE_URL
win
:
window
}
)
;
let
{
EVENTS
PerformanceController
}
=
panel
.
panelWin
;
await
startRecording
(
panel
)
;
await
stopRecording
(
panel
)
;
await
startRecording
(
panel
)
;
is
(
getRecordingsCount
(
panel
)
2
"
There
should
be
two
recordings
visible
.
"
)
;
is
(
getSelectedRecordingIndex
(
panel
)
1
"
The
new
recording
item
should
be
selected
.
"
)
;
let
selected
=
once
(
PerformanceController
EVENTS
.
RECORDING_SELECTED
)
;
setSelectedRecording
(
panel
0
)
;
await
selected
;
is
(
getRecordingsCount
(
panel
)
2
"
There
should
still
be
two
recordings
visible
.
"
)
;
is
(
getSelectedRecordingIndex
(
panel
)
0
"
The
first
recording
item
should
be
selected
now
.
"
)
;
selected
=
once
(
PerformanceController
EVENTS
.
RECORDING_SELECTED
)
;
setSelectedRecording
(
panel
1
)
;
await
selected
;
is
(
getRecordingsCount
(
panel
)
2
"
There
should
still
be
two
recordings
visible
.
"
)
;
is
(
getSelectedRecordingIndex
(
panel
)
1
"
The
second
recording
item
should
be
selected
again
.
"
)
;
await
stopRecording
(
panel
)
;
await
teardownToolboxAndRemoveTab
(
panel
)
;
}
)
;
