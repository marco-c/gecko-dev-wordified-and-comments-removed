"
use
strict
"
;
const
{
SIMPLE_URL
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
urls
"
)
;
const
{
UI_ENABLE_MEMORY_PREF
UI_ENABLE_ALLOCATIONS_PREF
PROFILER_SAMPLE_RATE_PREF
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
prefs
"
)
;
const
{
initPerformanceInNewTab
teardownToolboxAndRemoveTab
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
panel
-
utils
"
)
;
const
{
startRecording
stopRecording
waitForAllWidgetsRendered
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
actions
"
)
;
const
{
setSelectedRecording
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
recording
-
utils
"
)
;
add_task
(
async
function
(
)
{
const
{
panel
}
=
await
initPerformanceInNewTab
(
{
url
:
SIMPLE_URL
win
:
window
}
)
;
const
{
DetailsView
DetailsSubview
}
=
panel
.
panelWin
;
Services
.
prefs
.
setBoolPref
(
UI_ENABLE_MEMORY_PREF
true
)
;
Services
.
prefs
.
setBoolPref
(
UI_ENABLE_ALLOCATIONS_PREF
true
)
;
Services
.
prefs
.
setIntPref
(
PROFILER_SAMPLE_RATE_PREF
100
)
;
ok
(
true
"
Starting
recording
.
.
.
"
)
;
await
startRecording
(
panel
)
;
ok
(
true
"
Recording
started
!
"
)
;
ok
(
true
"
Stopping
recording
.
.
.
"
)
;
await
stopRecording
(
panel
)
;
ok
(
true
"
Recording
stopped
!
"
)
;
DetailsSubview
.
canUpdateWhileHidden
=
true
;
await
DetailsView
.
selectView
(
"
js
-
calltree
"
)
;
await
DetailsView
.
selectView
(
"
js
-
flamegraph
"
)
;
await
DetailsView
.
selectView
(
"
memory
-
calltree
"
)
;
await
DetailsView
.
selectView
(
"
memory
-
flamegraph
"
)
;
await
startRecording
(
panel
)
;
await
stopRecording
(
panel
)
;
let
rerender
=
waitForAllWidgetsRendered
(
panel
)
;
setSelectedRecording
(
panel
0
)
;
await
rerender
;
ok
(
true
"
All
widgets
were
rendered
when
selecting
the
first
recording
.
"
)
;
rerender
=
waitForAllWidgetsRendered
(
panel
)
;
setSelectedRecording
(
panel
1
)
;
await
rerender
;
ok
(
true
"
All
widgets
were
rendered
when
selecting
the
second
recording
.
"
)
;
await
teardownToolboxAndRemoveTab
(
panel
)
;
}
)
;
