"
use
strict
"
;
const
{
SIMPLE_URL
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
urls
"
)
;
const
{
UI_ENABLE_MEMORY_PREF
UI_ENABLE_ALLOCATIONS_PREF
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
prefs
"
)
;
const
{
initPerformanceInNewTab
teardownToolboxAndRemoveTab
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
panel
-
utils
"
)
;
const
{
startRecording
stopRecording
waitForAllWidgetsRendered
}
=
require
(
"
devtools
/
client
/
performance
/
test
/
helpers
/
actions
"
)
;
add_task
(
function
*
(
)
{
let
{
panel
}
=
yield
initPerformanceInNewTab
(
{
url
:
SIMPLE_URL
win
:
window
}
)
;
let
{
DetailsView
DetailsSubview
RecordingsView
}
=
panel
.
panelWin
;
Services
.
prefs
.
setBoolPref
(
UI_ENABLE_MEMORY_PREF
true
)
;
Services
.
prefs
.
setBoolPref
(
UI_ENABLE_ALLOCATIONS_PREF
true
)
;
yield
startRecording
(
panel
)
;
yield
stopRecording
(
panel
)
;
DetailsSubview
.
canUpdateWhileHidden
=
true
;
yield
DetailsView
.
selectView
(
"
js
-
calltree
"
)
;
yield
DetailsView
.
selectView
(
"
js
-
flamegraph
"
)
;
yield
DetailsView
.
selectView
(
"
memory
-
calltree
"
)
;
yield
DetailsView
.
selectView
(
"
memory
-
flamegraph
"
)
;
yield
startRecording
(
panel
)
;
yield
stopRecording
(
panel
)
;
let
rerender
=
waitForAllWidgetsRendered
(
panel
)
;
RecordingsView
.
selectedIndex
=
0
;
yield
rerender
;
ok
(
true
"
All
widgets
were
rendered
when
selecting
the
first
recording
.
"
)
;
rerender
=
waitForAllWidgetsRendered
(
panel
)
;
RecordingsView
.
selectedIndex
=
1
;
yield
rerender
;
ok
(
true
"
All
widgets
were
rendered
when
selecting
the
second
recording
.
"
)
;
yield
teardownToolboxAndRemoveTab
(
panel
)
;
}
)
;
