var
DEVTOOLS_CHROME_ENABLED
=
"
devtools
.
chrome
.
enabled
"
;
var
EDITOR_TEXT
=
[
"
var
evt
=
new
CustomEvent
(
'
foo
'
{
bubbles
:
true
}
)
;
"
"
document
.
body
.
innerHTML
=
'
Modified
text
'
;
"
"
window
.
dispatchEvent
(
evt
)
;
"
]
.
join
(
"
\
n
"
)
;
function
test
(
)
{
requestLongerTimeout
(
2
)
;
waitForExplicitFinish
(
)
;
Services
.
prefs
.
setBoolPref
(
DEVTOOLS_CHROME_ENABLED
true
)
;
gBrowser
.
selectedTab
=
BrowserTestUtils
.
addTab
(
gBrowser
)
;
gBrowser
.
selectedBrowser
.
addEventListener
(
"
load
"
function
(
)
{
openScratchpad
(
runTests
)
;
}
{
capture
:
true
once
:
true
}
)
;
content
.
location
=
"
data
:
text
/
html
Scratchpad
test
for
bug
740948
"
;
}
function
runTests
(
)
{
let
sp
=
gScratchpadWindow
.
Scratchpad
;
ok
(
sp
"
Scratchpad
object
exists
in
new
window
"
)
;
let
reloadAndRun
=
gScratchpadWindow
.
document
.
getElementById
(
"
sp
-
cmd
-
reloadAndRun
"
)
;
ok
(
reloadAndRun
"
Reload
And
Run
command
exists
"
)
;
ok
(
!
reloadAndRun
.
hasAttribute
(
"
disabled
"
)
"
Reload
And
Run
command
is
enabled
"
)
;
sp
.
setBrowserContext
(
)
;
ok
(
reloadAndRun
.
hasAttribute
(
"
disabled
"
)
"
Reload
And
Run
command
is
disabled
in
the
browser
context
.
"
)
;
sp
.
setContentContext
(
)
;
sp
.
setText
(
EDITOR_TEXT
)
;
let
browser
=
gBrowser
.
selectedBrowser
;
let
deferred
=
defer
(
)
;
browser
.
addEventListener
(
"
DOMWindowCreated
"
function
(
)
{
browser
.
contentWindow
.
addEventListener
(
"
foo
"
function
(
)
{
is
(
browser
.
contentWindow
.
document
.
body
.
innerHTML
"
Modified
text
"
"
After
reloading
HTML
is
different
.
"
)
;
Services
.
prefs
.
clearUserPref
(
DEVTOOLS_CHROME_ENABLED
)
;
deferred
.
resolve
(
)
;
}
{
capture
:
true
once
:
true
}
)
;
}
{
capture
:
true
once
:
true
}
)
;
ok
(
browser
.
contentWindow
.
document
.
body
.
innerHTML
!
=
=
"
Modified
text
"
"
Before
reloading
HTML
is
intact
.
"
)
;
sp
.
reloadAndRun
(
)
.
then
(
deferred
.
promise
)
.
then
(
finish
)
;
}
