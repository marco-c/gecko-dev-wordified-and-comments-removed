var
DEVTOOLS_CHROME_ENABLED
=
"
devtools
.
chrome
.
enabled
"
;
var
EDITOR_TEXT
=
[
"
var
evt
=
new
CustomEvent
(
'
foo
'
{
bubbles
:
true
}
)
;
"
"
document
.
body
.
innerHTML
=
'
Modified
text
'
;
"
"
window
.
dispatchEvent
(
evt
)
;
"
]
.
join
(
"
\
n
"
)
;
add_task
(
async
function
test
(
)
{
Services
.
prefs
.
setBoolPref
(
DEVTOOLS_CHROME_ENABLED
true
)
;
let
url
=
"
data
:
text
/
html
Scratchpad
test
for
bug
740948
"
;
gBrowser
.
selectedTab
=
BrowserTestUtils
.
addTab
(
gBrowser
url
)
;
await
BrowserTestUtils
.
browserLoaded
(
gBrowser
.
selectedBrowser
)
;
await
new
Promise
(
(
resolve
)
=
>
openScratchpad
(
resolve
)
)
;
await
runTests
(
)
;
Services
.
prefs
.
clearUserPref
(
DEVTOOLS_CHROME_ENABLED
)
;
}
)
;
async
function
runTests
(
)
{
let
sp
=
gScratchpadWindow
.
Scratchpad
;
ok
(
sp
"
Scratchpad
object
exists
in
new
window
"
)
;
let
reloadAndRun
=
gScratchpadWindow
.
document
.
getElementById
(
"
sp
-
cmd
-
reloadAndRun
"
)
;
ok
(
reloadAndRun
"
Reload
And
Run
command
exists
"
)
;
ok
(
!
reloadAndRun
.
hasAttribute
(
"
disabled
"
)
"
Reload
And
Run
command
is
enabled
"
)
;
sp
.
setBrowserContext
(
)
;
ok
(
reloadAndRun
.
hasAttribute
(
"
disabled
"
)
"
Reload
And
Run
command
is
disabled
in
the
browser
context
.
"
)
;
sp
.
setContentContext
(
)
;
sp
.
setText
(
EDITOR_TEXT
)
;
let
browser
=
gBrowser
.
selectedBrowser
;
await
ContentTask
.
spawn
(
browser
null
function
(
)
{
ok
(
content
.
document
.
body
.
innerHTML
!
=
=
"
Modified
text
"
"
Before
reloading
HTML
is
intact
.
"
)
;
}
)
;
let
reloaded
=
BrowserTestUtils
.
browserLoaded
(
browser
)
;
sp
.
reloadAndRun
(
)
;
await
reloaded
;
await
ContentTask
.
spawn
(
browser
null
async
function
(
)
{
if
(
!
content
.
wrappedJSObject
.
evt
)
{
await
new
Promise
(
(
resolve
)
=
>
{
content
.
addEventListener
(
"
foo
"
resolve
{
once
:
true
}
)
;
}
)
;
}
is
(
content
.
document
.
body
.
innerHTML
"
Modified
text
"
"
After
reloading
HTML
is
different
.
"
)
;
}
)
;
}
