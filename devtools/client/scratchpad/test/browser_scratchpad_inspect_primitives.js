function
test
(
)
{
const
options
=
{
tabContent
:
"
test
inspecting
primitive
values
"
}
;
openTabAndScratchpad
(
options
)
.
then
(
runTests
)
.
then
(
finish
console
.
error
)
;
}
async
function
runTests
(
[
win
sp
]
)
{
await
checkResults
(
sp
7
)
;
await
checkResults
(
sp
"
foobar
"
true
)
;
await
checkResults
(
sp
true
)
;
}
var
checkResults
=
async
function
(
sp
value
isString
=
false
)
{
let
sourceValue
=
value
;
if
(
isString
)
{
sourceValue
=
'
"
'
+
value
+
'
"
'
;
}
const
source
=
"
var
foobar
=
"
+
sourceValue
+
"
;
foobar
"
;
sp
.
setText
(
source
)
;
await
sp
.
inspect
(
)
;
const
sidebar
=
sp
.
sidebar
;
ok
(
sidebar
.
visible
"
sidebar
is
open
"
)
;
let
found
=
false
;
outer
:
for
(
const
scope
of
sidebar
.
variablesView
)
{
for
(
const
[
obj
]
of
scope
)
{
for
(
const
[
prop
]
of
obj
)
{
if
(
prop
.
name
=
=
"
value
"
&
&
prop
.
value
=
=
value
)
{
found
=
true
;
break
outer
;
}
}
}
}
ok
(
found
"
found
the
value
of
"
+
value
)
;
const
tabbox
=
sidebar
.
_sidebar
.
_tabbox
;
ok
(
!
tabbox
.
hasAttribute
(
"
hidden
"
)
"
Scratchpad
sidebar
visible
"
)
;
sidebar
.
hide
(
)
;
ok
(
tabbox
.
hasAttribute
(
"
hidden
"
)
"
Scratchpad
sidebar
hidden
"
)
;
}
;
