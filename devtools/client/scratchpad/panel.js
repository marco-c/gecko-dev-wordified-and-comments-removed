"
use
strict
"
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
event
-
emitter
"
)
;
function
ScratchpadPanel
(
iframeWindow
toolbox
)
{
const
{
Scratchpad
}
=
iframeWindow
;
this
.
_toolbox
=
toolbox
;
this
.
panelWin
=
iframeWindow
;
this
.
scratchpad
=
Scratchpad
;
Scratchpad
.
target
=
this
.
target
;
Scratchpad
.
hideMenu
(
)
;
this
.
_readyObserver
=
new
Promise
(
resolve
=
>
{
Scratchpad
.
addObserver
(
{
onReady
(
)
{
Scratchpad
.
removeObserver
(
this
)
;
resolve
(
)
;
}
}
)
;
}
)
;
EventEmitter
.
decorate
(
this
)
;
}
exports
.
ScratchpadPanel
=
ScratchpadPanel
;
ScratchpadPanel
.
prototype
=
{
open
(
)
{
return
this
.
_readyObserver
.
then
(
(
)
=
>
{
this
.
isReady
=
true
;
this
.
emit
(
"
ready
"
)
;
return
this
;
}
)
;
}
get
target
(
)
{
return
this
.
_toolbox
.
target
;
}
destroy
(
)
{
this
.
emit
(
"
destroyed
"
)
;
return
Promise
.
resolve
(
)
;
}
}
;
