"
use
strict
"
;
const
{
debounce
}
=
require
(
"
devtools
/
shared
/
debounce
"
)
;
const
{
RESIZE_VIEWPORT
ROTATE_VIEWPORT
}
=
require
(
"
.
.
/
actions
/
index
"
)
;
const
TELEMETRY_SCALAR_VIEWPORT_CHANGE_COUNT
=
"
devtools
.
responsive
.
viewport_change_count
"
;
function
telemetryMiddleware
(
telemetry
)
{
function
logViewportChange
(
)
{
telemetry
.
scalarAdd
(
TELEMETRY_SCALAR_VIEWPORT_CHANGE_COUNT
1
)
;
}
const
logViewportChangeDebounced
=
debounce
(
logViewportChange
300
null
true
)
;
return
store
=
>
next
=
>
action
=
>
{
switch
(
action
.
type
)
{
case
ROTATE_VIEWPORT
:
logViewportChange
(
)
;
break
;
case
RESIZE_VIEWPORT
:
logViewportChangeDebounced
(
)
;
break
;
}
return
next
(
action
)
;
}
;
}
module
.
exports
=
telemetryMiddleware
;
