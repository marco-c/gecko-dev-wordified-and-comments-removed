"
use
strict
"
;
const
Services
=
require
(
"
Services
"
)
;
const
{
Task
}
=
require
(
"
resource
:
/
/
gre
/
modules
/
Task
.
jsm
"
)
;
const
{
GetDevices
}
=
require
(
"
devtools
/
client
/
shared
/
devices
"
)
;
const
{
addDevice
addDeviceType
}
=
require
(
"
.
/
actions
/
devices
"
)
;
const
DISPLAYED_DEVICES_PREF
=
"
devtools
.
responsive
.
html
.
displayedDeviceList
"
;
let
initDevices
=
Task
.
async
(
function
*
(
dispatch
)
{
let
deviceList
=
loadDeviceList
(
)
;
let
devices
=
yield
GetDevices
(
)
;
for
(
let
type
of
devices
.
TYPES
)
{
dispatch
(
addDeviceType
(
type
)
)
;
for
(
let
device
of
devices
[
type
]
)
{
if
(
device
.
os
=
=
"
fxos
"
)
{
continue
;
}
let
newDevice
=
Object
.
assign
(
{
}
device
{
displayed
:
deviceList
.
includes
(
device
.
name
)
?
true
:
!
!
device
.
featured
}
)
;
if
(
newDevice
.
displayed
)
{
deviceList
.
push
(
newDevice
.
name
)
;
}
dispatch
(
addDevice
(
newDevice
type
)
)
;
}
}
updateDeviceList
(
deviceList
)
;
}
)
;
function
loadDeviceList
(
)
{
let
deviceList
=
[
]
;
if
(
Services
.
prefs
.
prefHasUserValue
(
DISPLAYED_DEVICES_PREF
)
)
{
try
{
deviceList
=
JSON
.
parse
(
Services
.
prefs
.
getCharPref
(
DISPLAYED_DEVICES_PREF
)
)
;
}
catch
(
e
)
{
console
.
error
(
e
)
;
}
}
return
deviceList
;
}
function
updateDeviceList
(
devices
)
{
Services
.
prefs
.
setCharPref
(
DISPLAYED_DEVICES_PREF
JSON
.
stringify
(
devices
)
)
;
}
exports
.
initDevices
=
initDevices
;
exports
.
loadDeviceList
=
loadDeviceList
;
exports
.
updateDeviceList
=
updateDeviceList
;
