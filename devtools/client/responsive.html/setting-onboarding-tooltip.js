"
use
strict
"
;
const
Services
=
require
(
"
Services
"
)
;
const
{
HTMLTooltip
}
=
require
(
"
devtools
/
client
/
shared
/
widgets
/
tooltip
/
HTMLTooltip
"
)
;
const
{
getStr
}
=
require
(
"
.
/
utils
/
l10n
"
)
;
const
SHOW_SETTING_TOOLTIP_PREF
=
"
devtools
.
responsive
.
show
-
setting
-
tooltip
"
;
const
CONTAINER_WIDTH
=
270
;
class
SettingOnboardingTooltip
{
constructor
(
doc
)
{
this
.
doc
=
doc
;
this
.
tooltip
=
new
HTMLTooltip
(
this
.
doc
{
type
:
"
arrow
"
}
)
;
this
.
onCloseButtonClick
=
this
.
onCloseButtonClick
.
bind
(
this
)
;
const
container
=
doc
.
createElement
(
"
div
"
)
;
container
.
className
=
"
onboarding
-
container
"
;
const
icon
=
doc
.
createElement
(
"
span
"
)
;
icon
.
className
=
"
onboarding
-
icon
"
;
container
.
appendChild
(
icon
)
;
const
content
=
doc
.
createElement
(
"
div
"
)
;
content
.
className
=
"
onboarding
-
content
"
;
content
.
textContent
=
getStr
(
"
responsive
.
settingOnboarding
.
content
"
)
;
container
.
appendChild
(
content
)
;
this
.
closeButton
=
doc
.
createElement
(
"
button
"
)
;
this
.
closeButton
.
className
=
"
onboarding
-
close
-
button
devtools
-
button
"
;
container
.
appendChild
(
this
.
closeButton
)
;
this
.
closeButton
.
addEventListener
(
"
click
"
this
.
onCloseButtonClick
)
;
this
.
tooltip
.
setContent
(
container
{
width
:
CONTAINER_WIDTH
}
)
;
this
.
tooltip
.
show
(
this
.
doc
.
getElementById
(
"
settings
-
button
"
)
{
position
:
"
bottom
"
}
)
;
}
destroy
(
)
{
this
.
closeButton
.
removeEventListener
(
"
click
"
this
.
onCloseButtonClick
)
;
this
.
tooltip
.
destroy
(
)
;
this
.
closeButton
=
null
;
this
.
doc
=
null
;
this
.
tooltip
=
null
;
}
onCloseButtonClick
(
)
{
Services
.
prefs
.
setBoolPref
(
SHOW_SETTING_TOOLTIP_PREF
false
)
;
this
.
tooltip
.
hide
(
)
;
}
}
module
.
exports
=
SettingOnboardingTooltip
;
