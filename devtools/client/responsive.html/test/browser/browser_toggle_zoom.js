"
use
strict
"
;
const
TEST_URL
=
"
http
:
/
/
example
.
com
/
"
;
function
getZoomForBrowser
(
browser
)
{
return
ZoomManager
.
getZoomForBrowser
(
browser
)
;
}
function
setZoomForBrowser
(
browser
zoom
)
{
ZoomManager
.
setZoomForBrowser
(
browser
zoom
)
;
}
add_task
(
async
function
(
)
{
const
INITIAL_ZOOM_LEVEL
=
1
;
const
MID_RDM_ZOOM_LEVEL
=
2
;
const
tab
=
await
addTab
(
TEST_URL
)
;
const
browser
=
tab
.
linkedBrowser
;
await
load
(
browser
TEST_URL
)
;
setZoomForBrowser
(
browser
INITIAL_ZOOM_LEVEL
)
;
const
{
ui
}
=
await
openRDM
(
tab
)
;
const
uiDocShell
=
ui
.
toolWindow
.
docShell
;
const
initialUIZoom
=
uiDocShell
.
contentViewer
.
fullZoom
;
isnot
(
initialUIZoom
MID_RDM_ZOOM_LEVEL
"
We
should
have
a
different
UI
initial
zoom
so
we
can
ensure
it
stays
unchanged
.
"
)
;
setZoomForBrowser
(
browser
MID_RDM_ZOOM_LEVEL
)
;
const
postZoomUIZoom
=
uiDocShell
.
contentViewer
.
fullZoom
;
is
(
postZoomUIZoom
initialUIZoom
"
UI
zoom
should
be
unchanged
by
RDM
zoom
.
"
)
;
const
finalRDMZoom
=
getZoomForBrowser
(
browser
)
;
is
(
finalRDMZoom
MID_RDM_ZOOM_LEVEL
"
RDM
zoom
should
be
"
+
MID_RDM_ZOOM_LEVEL
+
"
.
"
)
;
await
closeRDM
(
tab
)
;
}
)
;
