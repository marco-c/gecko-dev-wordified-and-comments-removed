"
use
strict
"
;
const
DUMMY_URL
=
"
http
:
/
/
example
.
com
/
"
;
const
TEST_URL
=
{
URL_ROOT
}
geolocation
.
html
;
const
TEST_SURL
=
TEST_URL
.
replace
(
"
http
:
/
/
example
.
com
"
"
https
:
/
/
example
.
com
"
)
;
function
waitForGeolocationPrompt
(
win
browser
)
{
return
new
Promise
(
resolve
=
>
{
win
.
PopupNotifications
.
panel
.
addEventListener
(
"
popupshown
"
function
popupShown
(
)
{
let
notification
=
win
.
PopupNotifications
.
getNotification
(
"
geolocation
"
browser
)
;
if
(
notification
)
{
win
.
PopupNotifications
.
panel
.
removeEventListener
(
"
popupshown
"
popupShown
)
;
resolve
(
)
;
}
}
)
;
}
)
;
}
add_task
(
function
*
(
)
{
let
tab
=
yield
addTab
(
DUMMY_URL
)
;
let
browser
=
tab
.
linkedBrowser
;
let
win
=
browser
.
ownerGlobal
;
let
waitPromptPromise
=
waitForGeolocationPrompt
(
win
browser
)
;
yield
load
(
browser
TEST_SURL
)
;
yield
waitPromptPromise
;
ok
(
true
"
Permission
doorhanger
appeared
without
RDM
enabled
"
)
;
yield
load
(
browser
DUMMY_URL
)
;
let
{
ui
}
=
yield
openRDM
(
tab
)
;
let
newBrowser
=
ui
.
getViewportBrowser
(
)
;
waitPromptPromise
=
waitForGeolocationPrompt
(
win
newBrowser
)
;
yield
load
(
browser
TEST_SURL
)
;
yield
waitPromptPromise
;
ok
(
true
"
Permission
doorhanger
appeared
inside
RDM
"
)
;
yield
closeRDM
(
tab
)
;
yield
removeTab
(
tab
)
;
}
)
;
