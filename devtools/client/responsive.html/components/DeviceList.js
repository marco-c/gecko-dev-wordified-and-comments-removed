"
use
strict
"
;
const
{
createFactory
PureComponent
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
dom
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
Types
=
require
(
"
.
.
/
types
"
)
;
const
Device
=
createFactory
(
require
(
"
.
/
Device
"
)
)
;
class
DeviceList
extends
PureComponent
{
static
get
propTypes
(
)
{
return
{
devices
:
PropTypes
.
shape
(
Types
.
devices
)
.
isRequired
onDeviceCheckboxChange
:
PropTypes
.
func
.
isRequired
onRemoveCustomDevice
:
PropTypes
.
func
.
isRequired
type
:
PropTypes
.
string
.
isRequired
}
;
}
renderCustomDevice
(
device
)
{
const
{
onRemoveCustomDevice
onDeviceCheckboxChange
type
}
=
this
.
props
;
const
removeDeviceButton
=
dom
.
button
(
{
id
:
"
device
-
editor
-
remove
"
className
:
"
device
-
remove
-
button
devtools
-
button
"
onClick
:
(
)
=
>
onRemoveCustomDevice
(
device
)
}
)
;
return
Device
(
{
device
key
:
device
.
name
type
onDeviceCheckboxChange
}
removeDeviceButton
)
;
}
render
(
)
{
const
{
devices
type
onDeviceCheckboxChange
}
=
this
.
props
;
return
(
dom
.
div
(
{
className
:
"
device
-
list
"
}
devices
[
type
]
.
map
(
device
=
>
{
if
(
type
=
=
=
"
custom
"
)
{
return
this
.
renderCustomDevice
(
device
)
;
}
return
Device
(
{
device
key
:
device
.
name
type
onDeviceCheckboxChange
}
)
;
}
)
)
)
;
}
}
module
.
exports
=
DeviceList
;
