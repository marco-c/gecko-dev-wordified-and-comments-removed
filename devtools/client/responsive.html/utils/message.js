"
use
strict
"
;
const
promise
=
require
(
"
promise
"
)
;
const
REQUEST_DONE_SUFFIX
=
"
:
done
"
;
function
wait
(
win
type
)
{
let
deferred
=
promise
.
defer
(
)
;
let
onMessage
=
event
=
>
{
if
(
event
.
data
.
type
!
=
=
type
)
{
return
;
}
win
.
removeEventListener
(
"
message
"
onMessage
)
;
deferred
.
resolve
(
)
;
}
;
win
.
addEventListener
(
"
message
"
onMessage
)
;
return
deferred
.
promise
;
}
function
post
(
win
typeOrMessage
)
{
if
(
!
win
)
{
return
;
}
let
message
=
typeOrMessage
;
if
(
typeof
typeOrMessage
=
=
"
string
"
)
{
message
=
{
type
:
typeOrMessage
}
;
}
win
.
postMessage
(
message
"
*
"
)
;
}
function
request
(
win
type
)
{
let
done
=
wait
(
win
type
+
REQUEST_DONE_SUFFIX
)
;
post
(
win
type
)
;
return
done
;
}
exports
.
wait
=
wait
;
exports
.
post
=
post
;
exports
.
request
=
request
;
