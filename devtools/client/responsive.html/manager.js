"
use
strict
"
;
const
promise
=
require
(
"
promise
"
)
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
event
-
emitter
"
)
;
exports
.
ResponsiveUIManager
=
{
activeTabs
:
new
Map
(
)
toggle
(
window
tab
)
{
if
(
this
.
isActiveForTab
(
tab
)
)
{
this
.
activeTabs
.
get
(
tab
)
.
close
(
)
;
}
else
{
this
.
runIfNeeded
(
window
tab
)
;
}
return
promise
.
resolve
(
)
;
}
runIfNeeded
(
window
tab
)
{
if
(
!
this
.
isActiveForTab
(
tab
)
)
{
}
}
isActiveForTab
(
tab
)
{
return
this
.
activeTabs
.
has
(
tab
)
;
}
getResponsiveUIForTab
(
tab
)
{
return
this
.
activeTabs
.
get
(
tab
)
;
}
handleGcliCommand
:
function
(
window
tab
command
args
)
{
switch
(
command
)
{
case
"
resize
to
"
:
this
.
runIfNeeded
(
window
tab
)
;
this
.
activeTabs
.
get
(
tab
)
.
setSize
(
args
.
width
args
.
height
)
;
break
;
case
"
resize
on
"
:
this
.
runIfNeeded
(
window
tab
)
;
break
;
case
"
resize
off
"
:
if
(
this
.
isActiveForTab
(
tab
)
)
{
this
.
activeTabs
.
get
(
tab
)
.
close
(
)
;
}
break
;
case
"
resize
toggle
"
:
this
.
toggle
(
window
tab
)
;
break
;
default
:
}
}
}
;
EventEmitter
.
decorate
(
exports
.
ResponsiveUIManager
)
;
