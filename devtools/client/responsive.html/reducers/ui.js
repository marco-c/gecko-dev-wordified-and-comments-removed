"
use
strict
"
;
const
Services
=
require
(
"
Services
"
)
;
const
{
CHANGE_DISPLAY_PIXEL_RATIO
CHANGE_USER_AGENT
TOGGLE_LEFT_ALIGNMENT
TOGGLE_RELOAD_ON_TOUCH_SIMULATION
TOGGLE_RELOAD_ON_USER_AGENT
TOGGLE_TOUCH_SIMULATION
TOGGLE_USER_AGENT_INPUT
}
=
require
(
"
.
.
/
actions
/
index
"
)
;
const
LEFT_ALIGNMENT_ENABLED
=
"
devtools
.
responsive
.
leftAlignViewport
.
enabled
"
;
const
RELOAD_ON_TOUCH_SIMULATION
=
"
devtools
.
responsive
.
reloadConditions
.
touchSimulation
"
;
const
RELOAD_ON_USER_AGENT
=
"
devtools
.
responsive
.
reloadConditions
.
userAgent
"
;
const
SHOW_USER_AGENT_INPUT
=
"
devtools
.
responsive
.
showUserAgentInput
"
;
const
INITIAL_UI
=
{
displayPixelRatio
:
0
leftAlignmentEnabled
:
Services
.
prefs
.
getBoolPref
(
LEFT_ALIGNMENT_ENABLED
)
reloadOnTouchSimulation
:
Services
.
prefs
.
getBoolPref
(
RELOAD_ON_TOUCH_SIMULATION
)
reloadOnUserAgent
:
Services
.
prefs
.
getBoolPref
(
RELOAD_ON_USER_AGENT
)
showUserAgentInput
:
Services
.
prefs
.
getBoolPref
(
SHOW_USER_AGENT_INPUT
)
touchSimulationEnabled
:
false
userAgent
:
"
"
}
;
const
reducers
=
{
[
CHANGE_DISPLAY_PIXEL_RATIO
]
(
ui
{
displayPixelRatio
}
)
{
return
{
.
.
.
ui
displayPixelRatio
}
;
}
[
CHANGE_USER_AGENT
]
(
ui
{
userAgent
}
)
{
return
{
.
.
.
ui
userAgent
}
;
}
[
TOGGLE_LEFT_ALIGNMENT
]
(
ui
{
enabled
}
)
{
const
leftAlignmentEnabled
=
enabled
!
=
=
undefined
?
enabled
:
!
ui
.
leftAlignmentEnabled
;
Services
.
prefs
.
setBoolPref
(
LEFT_ALIGNMENT_ENABLED
leftAlignmentEnabled
)
;
return
{
.
.
.
ui
leftAlignmentEnabled
}
;
}
[
TOGGLE_RELOAD_ON_TOUCH_SIMULATION
]
(
ui
{
enabled
}
)
{
const
reloadOnTouchSimulation
=
enabled
!
=
=
undefined
?
enabled
:
!
ui
.
reloadOnTouchSimulation
;
Services
.
prefs
.
setBoolPref
(
RELOAD_ON_TOUCH_SIMULATION
reloadOnTouchSimulation
)
;
return
{
.
.
.
ui
reloadOnTouchSimulation
}
;
}
[
TOGGLE_RELOAD_ON_USER_AGENT
]
(
ui
{
enabled
}
)
{
const
reloadOnUserAgent
=
enabled
!
=
=
undefined
?
enabled
:
!
ui
.
reloadOnUserAgent
;
Services
.
prefs
.
setBoolPref
(
RELOAD_ON_USER_AGENT
reloadOnUserAgent
)
;
return
{
.
.
.
ui
reloadOnUserAgent
}
;
}
[
TOGGLE_TOUCH_SIMULATION
]
(
ui
{
enabled
}
)
{
return
{
.
.
.
ui
touchSimulationEnabled
:
enabled
}
;
}
[
TOGGLE_USER_AGENT_INPUT
]
(
ui
{
enabled
}
)
{
const
showUserAgentInput
=
enabled
!
=
=
undefined
?
enabled
:
!
ui
.
showUserAgentInput
;
Services
.
prefs
.
setBoolPref
(
SHOW_USER_AGENT_INPUT
showUserAgentInput
)
;
return
{
.
.
.
ui
showUserAgentInput
}
;
}
}
;
module
.
exports
=
function
(
ui
=
INITIAL_UI
action
)
{
const
reducer
=
reducers
[
action
.
type
]
;
if
(
!
reducer
)
{
return
ui
;
}
return
reducer
(
ui
action
)
;
}
;
