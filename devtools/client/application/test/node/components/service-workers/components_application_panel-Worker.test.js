"
use
strict
"
;
const
{
shallow
}
=
require
(
"
enzyme
"
)
;
const
{
createFactory
}
=
require
(
"
react
"
)
;
const
{
WORKER_RUNNING
WORKER_STOPPED
WORKER_WAITING
}
=
require
(
"
devtools
/
client
/
application
/
test
/
node
/
fixtures
/
data
/
constants
"
)
;
const
Worker
=
createFactory
(
require
(
"
devtools
/
client
/
application
/
src
/
components
/
service
-
workers
/
Worker
"
)
)
;
describe
(
"
Worker
"
(
)
=
>
{
it
(
"
Renders
the
expected
snapshot
for
a
running
worker
"
(
)
=
>
{
const
wrapper
=
shallow
(
Worker
(
{
isDebugEnabled
:
true
worker
:
WORKER_RUNNING
}
)
)
;
expect
(
wrapper
.
find
(
"
.
js
-
worker
-
status
"
)
.
text
(
)
)
.
toBe
(
"
serviceworker
-
worker
-
status
-
running
"
)
;
expect
(
wrapper
.
find
(
"
.
js
-
start
-
button
"
)
)
.
toHaveLength
(
0
)
;
expect
(
wrapper
)
.
toMatchSnapshot
(
)
;
}
)
;
it
(
"
Renders
the
expected
snapshot
for
a
stopped
worker
"
(
)
=
>
{
const
wrapper
=
shallow
(
Worker
(
{
isDebugEnabled
:
true
worker
:
WORKER_STOPPED
}
)
)
;
expect
(
wrapper
.
find
(
"
.
js
-
worker
-
status
"
)
.
text
(
)
)
.
toBe
(
"
serviceworker
-
worker
-
status
-
stopped
"
)
;
expect
(
wrapper
.
find
(
"
.
js
-
start
-
button
"
)
)
.
toHaveLength
(
1
)
;
expect
(
wrapper
)
.
toMatchSnapshot
(
)
;
}
)
;
it
(
"
Renders
the
expected
snapshot
for
a
non
-
active
worker
"
(
)
=
>
{
const
wrapper
=
shallow
(
Worker
(
{
isDebugEnabled
:
true
worker
:
WORKER_WAITING
}
)
)
;
expect
(
wrapper
.
find
(
"
.
js
-
worker
-
status
"
)
.
text
(
)
)
.
toBe
(
"
installed
"
)
;
expect
(
wrapper
.
find
(
"
.
js
-
start
-
button
"
)
)
.
toHaveLength
(
0
)
;
expect
(
wrapper
)
.
toMatchSnapshot
(
)
;
}
)
;
it
(
"
Enables
/
disabled
the
debug
button
depending
of
debugging
being
available
"
(
)
=
>
{
let
wrapper
=
shallow
(
Worker
(
{
isDebugEnabled
:
false
worker
:
WORKER_RUNNING
}
)
)
;
expect
(
wrapper
.
find
(
"
.
js
-
debug
-
button
[
disabled
=
true
]
"
)
)
.
toHaveLength
(
1
)
;
wrapper
=
shallow
(
Worker
(
{
isDebugEnabled
:
true
worker
:
WORKER_RUNNING
}
)
)
;
expect
(
wrapper
.
find
(
"
.
js
-
debug
-
button
[
disabled
=
false
]
"
)
)
.
toHaveLength
(
1
)
;
}
)
;
}
)
;
