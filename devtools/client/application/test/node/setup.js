"
use
strict
"
;
const
Enzyme
=
require
(
"
enzyme
"
)
;
const
Adapter
=
require
(
"
enzyme
-
adapter
-
react
-
16
"
)
;
Enzyme
.
configure
(
{
adapter
:
new
Adapter
(
)
}
)
;
global
.
loader
=
{
lazyGetter
:
(
context
name
fn
)
=
>
{
const
module
=
fn
(
)
;
global
[
name
]
=
module
;
}
lazyRequireGetter
:
(
obj
properties
module
destructure
)
=
>
{
if
(
!
Array
.
isArray
(
properties
)
)
{
properties
=
[
properties
]
;
}
for
(
const
property
of
properties
)
{
Object
.
defineProperty
(
obj
property
{
get
:
(
)
=
>
{
delete
obj
[
property
]
;
const
value
=
destructure
?
require
(
module
)
[
property
]
:
require
(
module
|
|
property
)
;
Object
.
defineProperty
(
obj
property
{
value
writable
:
true
configurable
:
true
enumerable
:
true
}
)
;
return
value
;
}
configurable
:
true
enumerable
:
true
}
)
;
}
}
lazyImporter
:
(
)
=
>
{
}
}
;
