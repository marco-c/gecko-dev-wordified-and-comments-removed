"
use
strict
"
;
const
TAB_URL
=
URL_ROOT
+
"
resources
/
service
-
workers
/
debug
.
html
"
;
const
SW_URL
=
URL_ROOT
+
"
resources
/
service
-
workers
/
debug
-
sw
.
js
"
;
add_task
(
async
function
(
)
{
await
enableApplicationPanel
(
)
;
await
pushPref
(
"
devtools
.
debugger
.
features
.
windowless
-
service
-
workers
"
false
)
;
const
{
panel
tab
target
}
=
await
openNewTabAndApplicationPanel
(
TAB_URL
)
;
const
doc
=
panel
.
panelWin
.
document
;
selectPage
(
panel
"
service
-
workers
"
)
;
info
(
"
Wait
until
the
service
worker
appears
in
the
application
panel
"
)
;
await
waitUntil
(
(
)
=
>
getWorkerContainers
(
doc
)
.
length
=
=
=
1
)
;
const
container
=
getWorkerContainers
(
doc
)
[
0
]
;
info
(
"
Wait
until
the
inspect
link
is
displayed
"
)
;
await
waitUntil
(
(
)
=
>
{
return
container
.
querySelector
(
"
.
js
-
inspect
-
link
"
)
;
}
)
;
info
(
"
Click
on
the
inspect
link
and
wait
for
a
new
view
-
source
:
tab
open
"
)
;
const
onTabLoaded
=
BrowserTestUtils
.
waitForNewTab
(
gBrowser
view
-
source
:
{
SW_URL
}
)
;
const
inspectLink
=
container
.
querySelector
(
"
.
js
-
inspect
-
link
"
)
;
inspectLink
.
click
(
)
;
const
sourceTab
=
await
onTabLoaded
;
ok
(
sourceTab
"
The
service
worker
source
was
opened
in
a
new
tab
"
)
;
await
unregisterAllWorkers
(
target
.
client
doc
)
;
info
(
"
Closing
the
tabs
.
"
)
;
await
BrowserTestUtils
.
removeTab
(
sourceTab
)
;
await
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
