"
use
strict
"
;
const
{
createFactory
PureComponent
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
br
code
img
span
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
FluentReact
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
fluent
-
react
"
)
;
const
Localized
=
createFactory
(
FluentReact
.
Localized
)
;
const
{
l10n
}
=
require
(
"
.
.
/
.
.
/
modules
/
l10n
"
)
;
const
Types
=
require
(
"
.
.
/
.
.
/
types
/
index
"
)
;
const
ManifestItem
=
createFactory
(
require
(
"
.
/
ManifestItem
"
)
)
;
class
ManifestIconItem
extends
PureComponent
{
static
get
propTypes
(
)
{
return
{
.
.
.
Types
.
manifestItemIcon
}
;
}
getLocalizedImgTitle
(
)
{
const
{
sizes
}
=
this
.
props
.
label
;
return
sizes
&
&
sizes
.
length
>
0
?
l10n
.
getString
(
"
manifest
-
icon
-
img
-
title
"
{
sizes
}
)
:
l10n
.
getString
(
"
manifest
-
icon
-
img
-
title
-
no
-
sizes
"
)
;
}
renderLabel
(
)
{
const
{
contentType
sizes
}
=
this
.
props
.
label
;
const
shallRenderBr
=
contentType
&
&
sizes
;
return
[
sizes
?
sizes
:
null
shallRenderBr
?
br
(
{
key
:
"
label
-
br
"
}
)
:
null
contentType
?
contentType
:
null
]
;
}
render
(
)
{
const
{
src
purpose
}
=
this
.
props
.
value
;
return
ManifestItem
(
{
label
:
this
.
renderLabel
(
)
}
Localized
(
{
id
:
"
manifest
-
icon
-
img
"
attrs
:
{
alt
:
true
}
}
img
(
{
className
:
"
manifest
-
item__icon
"
src
title
:
this
.
getLocalizedImgTitle
(
)
}
)
)
br
(
{
}
)
Localized
(
{
id
:
"
manifest
-
icon
-
purpose
"
code
:
code
(
{
}
)
purpose
:
purpose
}
span
(
{
}
)
)
)
;
}
}
module
.
exports
=
ManifestIconItem
;
