"
use
strict
"
;
const
{
PureComponent
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
div
button
p
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
{
openDocLink
}
=
require
(
"
devtools
/
client
/
shared
/
link
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
{
connect
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
redux
"
)
;
const
selectors
=
require
(
"
devtools
/
client
/
performance
-
new
/
store
/
selectors
"
)
;
class
Description
extends
PureComponent
{
static
get
propTypes
(
)
{
return
{
toolbox
:
PropTypes
.
object
.
isRequired
}
;
}
constructor
(
props
)
{
super
(
props
)
;
this
.
handleLinkClick
=
this
.
handleLinkClick
.
bind
(
this
)
;
}
handleLinkClick
(
event
)
{
openDocLink
(
event
.
target
.
value
)
;
}
renderLink
(
href
text
)
{
return
button
(
{
className
:
"
perf
-
external
-
link
"
value
:
href
onClick
:
this
.
handleLinkClick
}
text
)
;
}
render
(
)
{
return
div
(
{
className
:
"
perf
-
description
"
}
p
(
null
"
This
new
recording
panel
is
a
bit
different
from
the
existing
"
+
"
performance
panel
.
It
records
the
entire
browser
and
then
opens
up
"
+
"
and
shares
the
profile
with
"
this
.
renderLink
(
"
https
:
/
/
perf
-
html
.
io
"
"
perf
-
html
.
io
"
)
"
a
Mozilla
performance
analysis
tool
.
"
)
p
(
null
"
This
is
still
a
prototype
.
Join
along
or
file
bugs
at
:
"
this
.
renderLink
(
"
https
:
/
/
github
.
com
/
devtools
-
html
/
perf
.
html
"
"
github
.
com
/
devtools
-
html
/
perf
.
html
"
)
"
.
"
)
)
;
}
}
const
mapStateToProps
=
state
=
>
(
{
toolbox
:
selectors
.
getToolbox
(
state
)
}
)
;
module
.
exports
=
connect
(
mapStateToProps
)
(
Description
)
;
