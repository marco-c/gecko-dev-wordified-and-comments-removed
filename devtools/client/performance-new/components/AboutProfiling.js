"
use
strict
"
;
const
{
PureComponent
createFactory
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
connect
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
redux
"
)
;
const
{
div
h1
button
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
Settings
=
createFactory
(
require
(
"
devtools
/
client
/
performance
-
new
/
components
/
Settings
.
js
"
)
)
;
const
Presets
=
createFactory
(
require
(
"
devtools
/
client
/
performance
-
new
/
components
/
Presets
"
)
)
;
const
selectors
=
require
(
"
devtools
/
client
/
performance
-
new
/
store
/
selectors
"
)
;
const
{
restartBrowserWithEnvironmentVariable
}
=
require
(
"
devtools
/
client
/
performance
-
new
/
browser
"
)
;
class
AboutProfiling
extends
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
handleRestart
=
this
.
handleRestart
.
bind
(
this
)
;
}
handleRestart
(
)
{
const
{
promptEnvRestart
}
=
this
.
props
;
if
(
!
promptEnvRestart
)
{
throw
new
Error
(
"
handleRestart
(
)
should
only
be
called
when
promptEnvRestart
exists
.
"
)
;
}
restartBrowserWithEnvironmentVariable
(
promptEnvRestart
"
1
"
)
;
}
render
(
)
{
const
{
isSupportedPlatform
pageContext
promptEnvRestart
openRemoteDevTools
}
=
this
.
props
;
if
(
isSupportedPlatform
=
=
=
null
)
{
return
null
;
}
return
div
(
{
className
:
perf
perf
-
{
pageContext
}
}
promptEnvRestart
?
div
(
{
className
:
"
perf
-
env
-
restart
"
}
div
(
{
className
:
"
perf
-
photon
-
message
-
bar
perf
-
photon
-
message
-
bar
-
warning
perf
-
env
-
restart
-
fixed
"
}
div
(
{
className
:
"
perf
-
photon
-
message
-
bar
-
warning
-
icon
"
}
)
"
The
browser
must
be
restarted
to
enable
this
feature
.
"
button
(
{
className
:
"
perf
-
photon
-
button
perf
-
photon
-
button
-
micro
"
type
:
"
button
"
onClick
:
this
.
handleRestart
}
"
Restart
"
)
)
)
:
null
openRemoteDevTools
?
div
(
{
className
:
"
perf
-
back
"
}
button
(
{
className
:
"
perf
-
back
-
button
"
type
:
"
button
"
onClick
:
openRemoteDevTools
}
"
Save
settings
and
go
back
"
)
)
:
null
div
(
{
className
:
"
perf
-
intro
"
}
h1
(
{
className
:
"
perf
-
intro
-
title
"
}
"
Profiler
Settings
"
)
div
(
{
className
:
"
perf
-
intro
-
row
"
}
div
(
{
}
div
(
{
className
:
"
perf
-
intro
-
icon
"
}
)
)
div
(
{
className
:
"
perf
-
intro
-
text
"
}
"
Recordings
launch
profiler
.
firefox
.
com
in
a
new
tab
.
All
data
is
stored
"
+
"
locally
but
you
can
choose
to
upload
it
for
sharing
.
"
)
)
)
Presets
(
)
Settings
(
)
)
;
}
}
function
mapStateToProps
(
state
)
{
return
{
isSupportedPlatform
:
selectors
.
getIsSupportedPlatform
(
state
)
pageContext
:
selectors
.
getPageContext
(
state
)
promptEnvRestart
:
selectors
.
getPromptEnvRestart
(
state
)
openRemoteDevTools
:
selectors
.
getOpenRemoteDevTools
(
state
)
}
;
}
module
.
exports
=
connect
(
mapStateToProps
)
(
AboutProfiling
)
;
