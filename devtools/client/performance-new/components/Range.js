"
use
strict
"
;
const
{
PureComponent
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
div
input
label
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
class
Range
extends
PureComponent
{
handleInput
=
event
=
>
{
event
.
preventDefault
(
)
;
const
{
scale
onChange
}
=
this
.
props
;
const
frac
=
Number
(
event
.
target
.
value
)
/
scale
.
steps
;
onChange
(
scale
.
fromFractionToSingleDigitValue
(
frac
)
)
;
}
;
render
(
)
{
const
{
label
:
labelText
scale
id
value
display
}
=
this
.
props
;
const
min
=
"
0
"
;
const
max
=
scale
.
steps
;
const
rangeValue
=
scale
.
fromValueToFraction
(
value
)
*
max
;
return
div
(
{
className
:
"
perf
-
settings
-
range
-
row
"
}
label
(
{
className
:
"
perf
-
settings
-
label
"
htmlFor
:
id
}
labelText
)
input
(
{
type
:
"
range
"
className
:
perf
-
settings
-
range
-
input
min
"
aria
-
valuemin
"
:
scale
.
fromFractionToValue
(
0
)
max
"
aria
-
valuemax
"
:
scale
.
fromFractionToValue
(
1
)
value
:
rangeValue
"
aria
-
valuenow
"
:
value
onChange
:
this
.
handleInput
id
}
)
div
(
{
className
:
perf
-
settings
-
range
-
value
}
display
(
value
)
)
)
;
}
}
module
.
exports
=
Range
;
