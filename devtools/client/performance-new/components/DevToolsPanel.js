"
use
strict
"
;
const
{
PureComponent
createFactory
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
connect
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
redux
"
)
;
const
{
div
hr
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
RecordingButton
=
createFactory
(
require
(
"
devtools
/
client
/
performance
-
new
/
components
/
RecordingButton
"
)
)
;
const
Description
=
createFactory
(
require
(
"
devtools
/
client
/
performance
-
new
/
components
/
Description
"
)
)
;
const
DevToolsPresetSelection
=
createFactory
(
require
(
"
devtools
/
client
/
performance
-
new
/
components
/
DevToolsPresetSelection
"
)
)
;
const
OnboardingMessage
=
createFactory
(
require
(
"
devtools
/
client
/
performance
-
new
/
components
/
OnboardingMessage
"
)
)
;
const
selectors
=
require
(
"
devtools
/
client
/
performance
-
new
/
store
/
selectors
"
)
;
class
DevToolsPanel
extends
PureComponent
{
render
(
)
{
const
{
isSupportedPlatform
perfFront
onProfileReceived
onEditSettingsLinkClicked
}
=
this
.
props
;
if
(
isSupportedPlatform
=
=
=
null
)
{
return
null
;
}
return
[
OnboardingMessage
(
)
div
(
{
className
:
perf
perf
-
devtools
}
RecordingButton
(
{
perfFront
onProfileReceived
}
)
Description
(
)
hr
(
{
className
:
"
perf
-
presets
-
hr
"
}
)
DevToolsPresetSelection
(
{
onEditSettingsLinkClicked
}
)
)
]
;
}
}
function
mapStateToProps
(
state
)
{
return
{
isSupportedPlatform
:
selectors
.
getIsSupportedPlatform
(
state
)
}
;
}
module
.
exports
=
connect
(
mapStateToProps
)
(
DevToolsPanel
)
;
