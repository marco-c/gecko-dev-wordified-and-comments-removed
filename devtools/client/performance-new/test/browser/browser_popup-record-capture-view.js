"
use
strict
"
;
const
FRONTEND_BASE_HOST
=
"
http
:
/
/
example
.
com
"
;
const
FRONTEND_BASE_PATH
=
"
/
browser
/
devtools
/
client
/
performance
-
new
/
test
/
browser
/
fake
-
frontend
.
html
"
;
const
FRONTEND_BASE_URL
=
FRONTEND_BASE_HOST
+
FRONTEND_BASE_PATH
;
add_setup
(
async
function
setup
(
)
{
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
devtools
.
performance
.
recording
.
active
-
tab
-
view
.
enabled
"
true
]
]
}
)
;
}
)
;
add_task
(
async
function
test
(
)
{
info
(
"
Test
that
the
profiler
pop
-
up
correctly
opens
the
captured
profile
on
the
"
+
"
correct
frontend
view
by
adding
proper
view
query
string
"
)
;
BackgroundJSM
.
changePreset
(
"
aboutprofiling
"
"
web
-
developer
"
Services
.
profiler
.
GetFeatures
(
)
)
;
await
setProfilerFrontendUrl
(
FRONTEND_BASE_HOST
FRONTEND_BASE_PATH
)
;
await
makeSureProfilerPopupIsEnabled
(
)
;
await
openPopupAndAssertUrlForPreset
(
{
window
preset
:
"
Media
"
expectedUrl
:
FRONTEND_BASE_URL
}
)
;
await
openPopupAndAssertUrlForPreset
(
{
window
preset
:
"
Web
Developer
"
expectedUrl
:
FRONTEND_BASE_URL
+
"
?
view
=
active
-
tab
&
implementation
=
js
"
}
)
;
}
)
;
add_task
(
async
function
test_in_private_window
(
)
{
info
(
"
Test
that
the
profiler
pop
-
up
correctly
opens
the
captured
profile
on
the
"
+
"
correct
frontend
view
by
adding
proper
view
query
string
.
This
also
tests
"
+
"
that
a
tab
is
opened
on
the
non
-
private
window
even
when
the
popup
is
used
"
+
"
in
the
private
window
.
"
)
;
BackgroundJSM
.
changePreset
(
"
aboutprofiling
"
"
web
-
developer
"
Services
.
profiler
.
GetFeatures
(
)
)
;
await
setProfilerFrontendUrl
(
FRONTEND_BASE_HOST
FRONTEND_BASE_PATH
)
;
await
makeSureProfilerPopupIsEnabled
(
)
;
info
(
"
Open
a
private
window
.
"
)
;
const
privateWindow
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
{
private
:
true
}
)
;
await
openPopupAndAssertUrlForPreset
(
{
window
:
privateWindow
preset
:
"
Media
"
expectedUrl
:
FRONTEND_BASE_URL
}
)
;
await
openPopupAndAssertUrlForPreset
(
{
window
:
privateWindow
preset
:
"
Web
Developer
"
expectedUrl
:
FRONTEND_BASE_URL
+
"
?
view
=
active
-
tab
&
implementation
=
js
"
}
)
;
await
BrowserTestUtils
.
closeWindow
(
privateWindow
)
;
}
)
;
async
function
openPopupAndAssertUrlForPreset
(
{
window
preset
expectedUrl
}
)
{
await
openPopupAndEnsureCloses
(
window
async
(
)
=
>
{
const
{
document
}
=
window
;
{
const
presetsInPopup
=
document
.
getElementById
(
"
PanelUI
-
profiler
-
presets
"
)
;
presetsInPopup
.
menupopup
.
openPopup
(
)
;
presetsInPopup
.
menupopup
.
activateItem
(
await
getElementByLabel
(
presetsInPopup
preset
)
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
presetsInPopup
.
label
=
=
=
preset
After
selecting
the
preset
in
the
popup
waiting
until
the
preset
is
changed
to
{
preset
}
in
the
popup
.
)
;
}
{
const
button
=
await
getElementByLabel
(
document
"
Start
Recording
"
)
;
info
(
"
Click
the
button
to
start
recording
.
"
)
;
button
.
click
(
)
;
}
{
const
button
=
await
getElementByLabel
(
document
"
Capture
"
)
;
info
(
"
Click
the
button
to
capture
the
recording
.
"
)
;
button
.
click
(
)
;
}
info
(
"
If
the
profiler
successfully
captures
a
profile
it
will
create
a
new
"
+
"
tab
with
the
proper
view
query
string
depending
on
the
preset
.
"
)
;
await
waitForTabUrl
(
{
initialTitle
:
"
Waiting
on
the
profile
"
successTitle
:
"
Profile
received
"
errorTitle
:
"
Error
"
expectedUrl
}
)
;
}
)
;
}
