"
use
strict
"
;
const
FRONTEND_BASE_URL
=
"
http
:
/
/
example
.
com
/
browser
/
devtools
/
client
/
performance
-
new
/
test
/
browser
/
fake
-
frontend
.
html
"
;
add_task
(
async
function
test
(
)
{
info
(
"
Test
that
DevTools
can
capture
profiles
.
This
function
also
unit
tests
the
"
+
"
internal
RecordingState
of
the
client
.
"
)
;
BackgroundJSM
.
changePreset
(
"
aboutprofiling
"
"
web
-
developer
"
Services
.
profiler
.
GetFeatures
(
)
)
;
await
setProfilerFrontendUrl
(
FRONTEND_BASE_URL
)
;
await
withDevToolsPanel
(
async
document
=
>
{
const
getRecordingState
=
setupGetRecordingState
(
document
)
;
ok
(
getRecordingState
(
)
=
=
=
"
not
-
yet
-
known
"
|
|
getRecordingState
(
)
=
=
=
"
available
-
to
-
record
"
"
The
component
starts
out
in
an
unknown
state
or
is
already
available
to
record
.
"
)
;
await
setPresetCaptureAndAssertUrl
(
{
document
preset
:
"
firefox
-
platform
"
expectedUrl
:
FRONTEND_BASE_URL
getRecordingState
}
)
;
await
setPresetCaptureAndAssertUrl
(
{
document
preset
:
"
web
-
developer
"
expectedUrl
:
FRONTEND_BASE_URL
+
"
?
view
=
active
-
tab
&
implementation
=
js
"
getRecordingState
}
)
;
}
)
;
}
)
;
async
function
setPresetCaptureAndAssertUrl
(
{
document
preset
expectedUrl
getRecordingState
}
)
{
const
presetsInDevtools
=
await
getNearestInputFromText
(
document
"
Settings
"
)
;
setReactFriendlyInputValue
(
presetsInDevtools
preset
)
;
const
startRecording
=
await
getActiveButtonFromText
(
document
"
Start
recording
"
)
;
is
(
getRecordingState
(
)
"
available
-
to
-
record
"
"
After
talking
to
the
actor
we
'
re
ready
to
record
.
"
)
;
info
(
"
Click
the
button
to
start
recording
"
)
;
startRecording
.
click
(
)
;
is
(
getRecordingState
(
)
"
request
-
to
-
start
-
recording
"
"
Clicking
the
start
recording
button
sends
in
a
request
to
start
recording
.
"
)
;
const
captureRecording
=
await
getActiveButtonFromText
(
document
"
Capture
recording
"
)
;
is
(
getRecordingState
(
)
"
recording
"
"
Once
the
Capture
recording
button
is
available
the
actor
has
started
"
+
"
its
recording
"
)
;
info
(
"
Click
the
button
to
capture
the
recording
.
"
)
;
captureRecording
.
click
(
)
;
is
(
getRecordingState
(
)
"
request
-
to
-
get
-
profile
-
and
-
stop
-
profiler
"
"
We
have
requested
to
stop
the
profiler
.
"
)
;
await
getActiveButtonFromText
(
document
"
Start
recording
"
)
;
is
(
getRecordingState
(
)
"
available
-
to
-
record
"
"
The
profiler
is
available
to
record
again
.
"
)
;
info
(
"
If
the
DevTools
successfully
injects
a
profile
into
the
page
then
the
"
+
"
fake
frontend
will
rename
the
title
of
the
page
.
"
)
;
await
waitForTabUrl
(
{
initialTitle
:
"
Waiting
on
the
profile
"
successTitle
:
"
Profile
received
"
errorTitle
:
"
Error
"
expectedUrl
}
)
;
}
