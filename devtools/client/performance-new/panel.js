"
use
strict
"
;
class
PerformancePanel
{
constructor
(
iframeWindow
toolbox
commands
)
{
this
.
panelWin
=
iframeWindow
;
this
.
toolbox
=
toolbox
;
this
.
commands
=
commands
;
const
EventEmitter
=
require
(
"
resource
:
/
/
devtools
/
shared
/
event
-
emitter
.
js
"
)
;
EventEmitter
.
decorate
(
this
)
;
}
emit
(
eventName
)
{
}
open
(
)
{
if
(
!
this
.
_opening
)
{
this
.
_opening
=
this
.
_doOpen
(
)
;
}
return
this
.
_opening
;
}
async
_doOpen
(
)
{
this
.
panelWin
.
gToolbox
=
this
.
toolbox
;
this
.
panelWin
.
gIsPanelDestroyed
=
false
;
const
perfFront
=
await
this
.
commands
.
client
.
mainRoot
.
getFront
(
"
perf
"
)
;
const
traits
=
{
}
;
await
this
.
panelWin
.
gInit
(
perfFront
traits
"
devtools
"
this
.
_openAboutProfiling
)
;
return
this
;
}
_openAboutProfiling
(
)
{
const
{
openTrustedLink
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
link
.
js
"
)
;
openTrustedLink
(
"
about
:
profiling
"
{
}
)
;
}
get
target
(
)
{
return
this
.
toolbox
.
target
;
}
destroy
(
)
{
if
(
this
.
_destroyed
)
{
return
;
}
this
.
panelWin
.
gDestroy
(
)
;
this
.
emit
(
"
destroyed
"
)
;
this
.
_destroyed
=
true
;
this
.
panelWin
.
gIsPanelDestroyed
=
true
;
}
}
exports
.
PerformancePanel
=
PerformancePanel
;
