"
use
strict
"
;
const
getRecordingState
=
state
=
>
state
.
recordingState
;
const
getRecordingUnexpectedlyStopped
=
state
=
>
state
.
recordingUnexpectedlyStopped
;
const
getIsSupportedPlatform
=
state
=
>
state
.
isSupportedPlatform
;
const
getInterval
=
state
=
>
state
.
interval
;
const
getEntries
=
state
=
>
state
.
entries
;
const
getFeatures
=
state
=
>
state
.
features
;
const
getThreads
=
state
=
>
state
.
threads
;
const
getThreadsString
=
state
=
>
getThreads
(
state
)
.
join
(
"
"
)
;
const
getObjdirs
=
state
=
>
state
.
objdirs
;
const
getPresets
=
state
=
>
getInitializedValues
(
state
)
.
presets
;
const
getPresetName
=
state
=
>
state
.
presetName
;
const
getProfilerViewMode
=
state
=
>
state
.
profilerViewMode
;
const
getOpenRemoteDevTools
=
state
=
>
getInitializedValues
(
state
)
.
openRemoteDevTools
;
const
getOpenAboutProfiling
=
state
=
>
{
const
{
openAboutProfiling
}
=
getInitializedValues
(
state
)
;
if
(
!
openAboutProfiling
)
{
throw
new
Error
(
"
Expected
to
get
an
openAboutProfiling
function
.
"
)
;
}
return
openAboutProfiling
;
}
;
const
getRecordingSettings
=
state
=
>
{
const
presets
=
getPresets
(
state
)
;
const
presetName
=
getPresetName
(
state
)
;
const
preset
=
presets
[
presetName
]
;
if
(
preset
)
{
return
{
presetName
:
presetName
entries
:
preset
.
entries
interval
:
preset
.
interval
features
:
preset
.
features
threads
:
preset
.
threads
objdirs
:
getObjdirs
(
state
)
duration
:
preset
.
duration
}
;
}
return
{
presetName
:
"
custom
"
entries
:
getEntries
(
state
)
interval
:
getInterval
(
state
)
features
:
getFeatures
(
state
)
threads
:
getThreads
(
state
)
objdirs
:
getObjdirs
(
state
)
duration
:
0
}
;
}
;
const
getInitializedValues
=
state
=
>
{
const
values
=
state
.
initializedValues
;
if
(
!
values
)
{
throw
new
Error
(
"
The
store
must
be
initialized
before
it
can
be
used
.
"
)
;
}
return
values
;
}
;
const
getPerfFront
=
state
=
>
getInitializedValues
(
state
)
.
perfFront
;
const
getReceiveProfileFn
=
state
=
>
getInitializedValues
(
state
)
.
receiveProfile
;
const
getSetRecordingSettingsFn
=
state
=
>
getInitializedValues
(
state
)
.
setRecordingSettings
;
const
getPageContext
=
state
=
>
getInitializedValues
(
state
)
.
pageContext
;
const
getSymbolTableGetter
=
state
=
>
getInitializedValues
(
state
)
.
getSymbolTableGetter
;
const
getSupportedFeatures
=
state
=
>
getInitializedValues
(
state
)
.
supportedFeatures
;
const
getPromptEnvRestart
=
state
=
>
state
.
promptEnvRestart
;
module
.
exports
=
{
getRecordingState
getRecordingUnexpectedlyStopped
getIsSupportedPlatform
getInterval
getEntries
getFeatures
getThreads
getThreadsString
getObjdirs
getPresets
getPresetName
getProfilerViewMode
getOpenRemoteDevTools
getOpenAboutProfiling
getRecordingSettings
getInitializedValues
getPerfFront
getReceiveProfileFn
getSetRecordingSettingsFn
getPageContext
getSymbolTableGetter
getPromptEnvRestart
getSupportedFeatures
}
;
