"
use
strict
"
;
const
{
getAbbreviatedMimeType
getUrlBaseNameWithQuery
getUrlHost
}
=
require
(
"
.
/
request
-
utils
"
)
;
function
waterfall
(
first
second
)
{
return
first
.
startedMillis
-
second
.
startedMillis
;
}
function
status
(
first
second
)
{
return
first
.
status
=
=
second
.
status
?
first
.
startedMillis
-
second
.
startedMillis
:
first
.
status
-
second
.
status
;
}
function
method
(
first
second
)
{
if
(
first
.
method
=
=
second
.
method
)
{
return
first
.
startedMillis
-
second
.
startedMillis
;
}
return
first
.
method
>
second
.
method
?
1
:
-
1
;
}
function
file
(
first
second
)
{
let
firstUrl
=
getUrlBaseNameWithQuery
(
first
.
url
)
.
toLowerCase
(
)
;
let
secondUrl
=
getUrlBaseNameWithQuery
(
second
.
url
)
.
toLowerCase
(
)
;
if
(
firstUrl
=
=
secondUrl
)
{
return
first
.
startedMillis
-
second
.
startedMillis
;
}
return
firstUrl
>
secondUrl
?
1
:
-
1
;
}
function
domain
(
first
second
)
{
let
firstDomain
=
getUrlHost
(
first
.
url
)
.
toLowerCase
(
)
;
let
secondDomain
=
getUrlHost
(
second
.
url
)
.
toLowerCase
(
)
;
if
(
firstDomain
=
=
secondDomain
)
{
return
first
.
startedMillis
-
second
.
startedMillis
;
}
return
firstDomain
>
secondDomain
?
1
:
-
1
;
}
function
cause
(
first
second
)
{
let
firstCause
=
first
.
cause
.
type
;
let
secondCause
=
second
.
cause
.
type
;
if
(
firstCause
=
=
secondCause
)
{
return
first
.
startedMillis
-
second
.
startedMillis
;
}
return
firstCause
>
secondCause
?
1
:
-
1
;
}
function
type
(
first
second
)
{
let
firstType
=
getAbbreviatedMimeType
(
first
.
mimeType
)
.
toLowerCase
(
)
;
let
secondType
=
getAbbreviatedMimeType
(
second
.
mimeType
)
.
toLowerCase
(
)
;
if
(
firstType
=
=
secondType
)
{
return
first
.
startedMillis
-
second
.
startedMillis
;
}
return
firstType
>
secondType
?
1
:
-
1
;
}
function
transferred
(
first
second
)
{
return
first
.
transferredSize
-
second
.
transferredSize
;
}
function
size
(
first
second
)
{
return
first
.
contentSize
-
second
.
contentSize
;
}
exports
.
Sorters
=
{
status
method
file
domain
cause
type
transferred
size
waterfall
}
;
