"
use
strict
"
;
add_task
(
async
function
(
)
{
const
{
tab
monitor
}
=
await
initNetMonitor
(
POST_DATA_URL
)
;
info
(
"
Starting
test
.
.
.
"
)
;
const
{
document
store
windowRequire
}
=
monitor
.
panelWin
;
const
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
const
{
getSortedRequests
}
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
selectors
/
index
"
)
;
store
.
dispatch
(
Actions
.
batchEnable
(
false
)
)
;
await
performRequests
(
monitor
tab
2
)
;
let
wait
=
waitForDOM
(
document
"
#
headers
-
panel
.
tree
-
section
"
2
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
mousedown
"
}
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
[
0
]
)
;
await
wait
;
wait
=
waitForDOM
(
document
"
textarea
.
raw
-
headers
"
2
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
click
"
}
getRawHeadersToggle
(
"
RESPONSE
"
)
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
click
"
}
getRawHeadersToggle
(
"
REQUEST
"
)
)
;
await
wait
;
testRawHeaderToggleStyle
(
true
)
;
testShowRawHeaders
(
getSortedRequests
(
store
.
getState
(
)
)
.
get
(
0
)
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
click
"
}
getRawHeadersToggle
(
"
RESPONSE
"
)
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
click
"
}
getRawHeadersToggle
(
"
REQUEST
"
)
)
;
testRawHeaderToggleStyle
(
false
)
;
testHideRawHeaders
(
document
)
;
return
teardown
(
monitor
)
;
function
testRawHeaderToggleStyle
(
checked
)
{
const
rawHeadersRequestToggle
=
getRawHeadersToggle
(
"
REQUEST
"
)
;
const
rawHeadersResponseToggle
=
getRawHeadersToggle
(
"
RESPONSE
"
)
;
if
(
checked
)
{
is
(
rawHeadersRequestToggle
.
checked
true
"
The
'
Raw
Request
Headers
'
toggle
should
be
'
checked
'
"
)
;
is
(
rawHeadersResponseToggle
.
checked
true
"
The
'
Raw
Response
Headers
'
toggle
should
be
'
checked
'
"
)
;
}
else
{
is
(
rawHeadersRequestToggle
.
checked
false
"
The
'
Raw
Request
Headers
'
toggle
should
NOT
be
'
checked
'
"
)
;
is
(
rawHeadersResponseToggle
.
checked
false
"
The
'
Raw
Response
Headers
'
toggle
should
NOT
be
'
checked
'
"
)
;
}
}
function
testShowRawHeaders
(
data
)
{
const
requestHeaders
=
document
.
querySelectorAll
(
"
textarea
.
raw
-
headers
"
)
[
1
]
.
value
;
for
(
const
header
of
data
.
requestHeaders
.
headers
)
{
ok
(
requestHeaders
.
includes
(
header
.
name
+
"
:
"
+
header
.
value
)
"
textarea
contains
request
headers
"
)
;
}
const
responseHeaders
=
document
.
querySelectorAll
(
"
textarea
.
raw
-
headers
"
)
[
0
]
.
value
;
for
(
const
header
of
data
.
responseHeaders
.
headers
)
{
ok
(
responseHeaders
.
includes
(
header
.
name
+
"
:
"
+
header
.
value
)
"
textarea
contains
response
headers
"
)
;
}
}
function
testHideRawHeaders
(
)
{
ok
(
!
document
.
querySelector
(
"
.
raw
-
headers
-
container
"
)
"
raw
request
headers
textarea
is
empty
"
)
;
}
function
getRawHeadersToggle
(
rawHeaderType
)
{
if
(
rawHeaderType
=
=
=
"
RESPONSE
"
)
{
return
document
.
querySelectorAll
(
"
.
devtools
-
checkbox
-
toggle
"
)
[
0
]
;
}
return
document
.
querySelectorAll
(
"
.
devtools
-
checkbox
-
toggle
"
)
[
1
]
;
}
}
)
;
