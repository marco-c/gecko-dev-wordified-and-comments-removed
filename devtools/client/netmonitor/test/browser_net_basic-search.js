"
use
strict
"
;
add_task
(
async
function
(
)
{
const
{
tab
monitor
}
=
await
initNetMonitor
(
HTTPS_CUSTOM_GET_URL
{
requestCount
:
1
}
)
;
info
(
"
Starting
test
.
.
.
"
)
;
const
{
document
store
windowRequire
}
=
monitor
.
panelWin
;
const
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
store
.
dispatch
(
Actions
.
batchEnable
(
false
)
)
;
const
URL
=
HTTPS_SEARCH_SJS
+
"
?
value
=
test
"
;
const
wait
=
waitForNetworkEvents
(
monitor
2
)
;
await
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
URL
]
async
function
(
url
)
{
content
.
wrappedJSObject
.
performRequests
(
2
url
)
;
}
)
;
await
wait
;
const
searchButton
=
document
.
querySelector
(
"
.
devtools
-
search
-
icon
"
)
;
is
(
searchButton
.
getAttribute
(
"
aria
-
pressed
"
)
"
false
"
"
The
search
toolbar
button
should
not
be
highlighted
"
)
;
searchButton
.
click
(
)
;
await
waitForDOMIfNeeded
(
document
"
.
search
-
panel
"
)
;
is
(
searchButton
.
getAttribute
(
"
aria
-
pressed
"
)
"
true
"
"
The
search
toolbar
button
should
now
be
highlighted
"
)
;
is
(
document
.
querySelector
(
"
.
requests
-
list
-
blocking
-
button
"
)
.
getAttribute
(
"
aria
-
pressed
"
)
"
false
"
"
The
block
toolbar
button
should
not
be
highlighted
"
)
;
is
(
document
.
querySelector
(
"
.
devtools
-
http
-
custom
-
request
-
icon
"
)
.
getAttribute
(
"
aria
-
pressed
"
)
"
false
"
"
The
custom
request
toolbar
button
should
not
be
highlighted
"
)
;
typeInNetmonitor
(
"
test
"
monitor
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Enter
"
)
;
await
waitForDOMIfNeeded
(
document
"
.
search
-
panel
-
content
.
treeRow
.
resourceRow
"
2
)
;
AccessibilityUtils
.
setEnv
(
{
mustHaveAccessibleRule
:
false
}
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
click
"
}
document
.
querySelector
(
"
.
search
-
panel
-
content
.
treeRow
.
treeIcon
"
)
)
;
AccessibilityUtils
.
resetEnv
(
)
;
const
matches
=
document
.
querySelectorAll
(
"
.
search
-
panel
-
content
.
treeRow
.
resultRow
"
)
;
is
(
matches
.
length
5
"
There
must
be
5
matches
"
)
;
await
teardown
(
monitor
)
;
}
)
;
