"
use
strict
"
;
add_task
(
async
function
(
)
{
let
{
tab
monitor
}
=
await
initNetMonitor
(
SIMPLE_URL
)
;
info
(
"
Starting
test
.
.
.
"
)
;
let
{
document
store
windowRequire
}
=
monitor
.
panelWin
;
let
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
let
clearButton
=
document
.
querySelector
(
"
.
requests
-
list
-
clear
-
button
"
)
;
store
.
dispatch
(
Actions
.
batchEnable
(
false
)
)
;
assertNoRequestState
(
)
;
let
onMonitorUpdated
=
waitForAllRequestsFinished
(
monitor
)
;
tab
.
linkedBrowser
.
reload
(
)
;
await
onMonitorUpdated
;
assertSingleRequestState
(
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
click
"
}
clearButton
)
;
assertNoRequestState
(
)
;
onMonitorUpdated
=
waitForAllRequestsFinished
(
monitor
)
;
tab
.
linkedBrowser
.
reload
(
)
;
await
onMonitorUpdated
;
assertSingleRequestState
(
)
;
store
.
dispatch
(
Actions
.
toggleNetworkDetails
(
)
)
;
let
detailsPanelToggleButton
=
document
.
querySelector
(
"
.
sidebar
-
toggle
"
)
;
ok
(
detailsPanelToggleButton
&
&
!
detailsPanelToggleButton
.
classList
.
contains
(
"
pane
-
collapsed
"
)
"
The
details
pane
should
be
visible
.
"
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
click
"
}
clearButton
)
;
assertNoRequestState
(
)
;
ok
(
!
document
.
querySelector
(
"
.
network
-
details
-
panel
"
)
"
The
details
pane
should
not
be
visible
clicking
'
clear
'
.
"
)
;
return
teardown
(
monitor
)
;
function
assertSingleRequestState
(
)
{
is
(
store
.
getState
(
)
.
requests
.
requests
.
size
1
"
The
request
menu
should
have
one
item
at
this
point
.
"
)
;
}
function
assertNoRequestState
(
)
{
is
(
store
.
getState
(
)
.
requests
.
requests
.
size
0
"
The
request
menu
should
be
empty
at
this
point
.
"
)
;
}
}
)
;
