"
use
strict
"
;
add_task
(
function
*
(
)
{
requestLongerTimeout
(
2
)
;
let
{
monitor
}
=
yield
initNetMonitor
(
INFINITE_GET_URL
)
;
let
{
}
=
monitor
.
panelWin
;
yield
waitForRequestListToAppear
(
)
;
let
requestsContainer
=
(
"
.
requests
-
menu
-
contents
"
)
;
ok
(
requestsContainer
"
Container
element
exists
as
expected
.
"
)
;
yield
waitForRequestsToOverflowContainer
(
)
;
yield
waitForScroll
(
)
;
ok
(
true
"
Scrolled
to
bottom
on
overflow
.
"
)
;
let
firstNode
=
requestsContainer
.
firstChild
;
firstNode
.
scrollIntoView
(
)
;
yield
waitSomeTime
(
)
;
ok
(
!
scrolledToBottom
(
requestsContainer
)
"
Not
scrolled
to
bottom
.
"
)
;
let
scrollTop
=
requestsContainer
.
scrollTop
;
yield
waitForNetworkEvents
(
monitor
8
)
;
yield
waitSomeTime
(
)
;
is
(
requestsContainer
.
scrollTop
scrollTop
"
Did
not
scroll
.
"
)
;
requestsContainer
.
scrollTop
=
requestsContainer
.
scrollHeight
;
ok
(
scrolledToBottom
(
requestsContainer
)
"
Set
scroll
position
to
bottom
.
"
)
;
yield
waitForNetworkEvents
(
monitor
8
)
;
yield
waitForScroll
(
)
;
ok
(
true
"
Still
scrolled
to
bottom
.
"
)
;
monitor
.
panelWin
.
NetMonitorView
.
RequestsMenu
.
selectedIndex
=
0
;
yield
waitForNetworkEvents
(
monitor
8
)
;
yield
waitSomeTime
(
)
;
is
(
requestsContainer
.
scrollTop
0
"
Did
not
scroll
.
"
)
;
return
teardown
(
monitor
)
;
function
waitForRequestListToAppear
(
)
{
info
(
"
Waiting
until
the
empty
notice
disappears
and
is
replaced
with
the
list
"
)
;
return
waitUntil
(
(
)
=
>
!
!
(
"
.
requests
-
menu
-
contents
"
)
)
;
}
function
*
waitForRequestsToOverflowContainer
(
)
{
info
(
"
Waiting
for
enough
requests
to
overflow
the
container
"
)
;
while
(
true
)
{
info
(
"
Waiting
for
one
network
request
"
)
;
yield
waitForNetworkEvents
(
monitor
1
)
;
if
(
requestsContainer
.
scrollHeight
>
requestsContainer
.
clientHeight
)
{
info
(
"
The
list
is
long
enough
returning
"
)
;
return
;
}
}
}
function
scrolledToBottom
(
element
)
{
return
element
.
scrollTop
+
element
.
clientHeight
>
=
element
.
scrollHeight
;
}
function
waitSomeTime
(
)
{
return
wait
(
50
)
;
}
function
waitForScroll
(
)
{
info
(
"
Waiting
for
the
list
to
scroll
to
bottom
"
)
;
return
waitUntil
(
(
)
=
>
scrolledToBottom
(
requestsContainer
)
)
;
}
}
)
;
