"
use
strict
"
;
add_task
(
function
*
(
)
{
requestLongerTimeout
(
2
)
;
let
[
monitor
]
=
yield
initNetMonitor
(
INFINITE_GET_URL
)
;
let
win
=
monitor
.
panelWin
;
let
topNode
=
win
.
document
.
getElementById
(
"
requests
-
menu
-
contents
"
)
;
let
requestsContainer
=
topNode
.
getElementsByTagName
(
"
scrollbox
"
)
[
0
]
;
ok
(
!
!
requestsContainer
"
Container
element
exists
as
expected
.
"
)
;
yield
waitForRequestsToOverflowContainer
(
)
;
yield
waitForScroll
(
)
;
ok
(
scrolledToBottom
(
requestsContainer
)
"
Scrolled
to
bottom
on
overflow
.
"
)
;
let
children
=
requestsContainer
.
childNodes
;
let
middleNode
=
children
.
item
(
children
.
length
/
2
)
;
middleNode
.
scrollIntoView
(
)
;
ok
(
!
scrolledToBottom
(
requestsContainer
)
"
Not
scrolled
to
bottom
.
"
)
;
let
scrollTop
=
requestsContainer
.
scrollTop
;
yield
waitForNetworkEvents
(
monitor
8
)
;
yield
waitSomeTime
(
)
;
is
(
requestsContainer
.
scrollTop
scrollTop
"
Did
not
scroll
.
"
)
;
requestsContainer
.
scrollTop
=
requestsContainer
.
scrollHeight
;
ok
(
scrolledToBottom
(
requestsContainer
)
"
Set
scroll
position
to
bottom
.
"
)
;
yield
waitForNetworkEvents
(
monitor
8
)
;
yield
waitForScroll
(
)
;
ok
(
scrolledToBottom
(
requestsContainer
)
"
Still
scrolled
to
bottom
.
"
)
;
monitor
.
panelWin
.
NetMonitorView
.
RequestsMenu
.
selectedIndex
=
0
;
yield
waitForNetworkEvents
(
monitor
8
)
;
yield
waitSomeTime
(
)
;
is
(
requestsContainer
.
scrollTop
0
"
Did
not
scroll
.
"
)
;
yield
teardown
(
monitor
)
;
function
*
waitForRequestsToOverflowContainer
(
)
{
while
(
true
)
{
yield
waitForNetworkEvents
(
monitor
1
)
;
if
(
requestsContainer
.
scrollHeight
>
requestsContainer
.
clientHeight
)
{
return
;
}
}
}
function
scrolledToBottom
(
element
)
{
return
element
.
scrollTop
+
element
.
clientHeight
>
=
element
.
scrollHeight
;
}
function
waitSomeTime
(
)
{
return
wait
(
50
)
;
}
function
waitForScroll
(
)
{
return
monitor
.
_view
.
RequestsMenu
.
widget
.
once
(
"
scroll
-
to
-
bottom
"
)
;
}
}
)
;
