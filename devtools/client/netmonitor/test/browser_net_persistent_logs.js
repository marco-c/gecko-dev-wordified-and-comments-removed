"
use
strict
"
;
add_task
(
function
*
(
)
{
let
{
tab
monitor
}
=
yield
initNetMonitor
(
SINGLE_GET_URL
)
;
info
(
"
Starting
test
.
.
.
"
)
;
let
{
document
store
windowRequire
}
=
monitor
.
panelWin
;
let
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
store
.
dispatch
(
Actions
.
batchEnable
(
false
)
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
netmonitor
.
persistlog
"
false
)
;
yield
reloadAndWait
(
)
;
yield
waitUntil
(
(
)
=
>
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
.
length
=
=
=
2
)
;
is
(
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
.
length
2
"
The
request
list
should
have
two
items
at
this
point
.
"
)
;
yield
reloadAndWait
(
)
;
yield
waitUntil
(
(
)
=
>
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
.
length
=
=
=
2
)
;
is
(
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
.
length
2
"
The
request
list
should
still
have
two
items
at
this
point
.
"
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
netmonitor
.
persistlog
"
true
)
;
yield
reloadAndWait
(
)
;
yield
waitUntil
(
(
)
=
>
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
.
length
=
=
=
4
)
;
is
(
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
.
length
4
"
The
request
list
should
now
have
four
items
at
this
point
.
"
)
;
Services
.
prefs
.
setBoolPref
(
"
devtools
.
netmonitor
.
persistlog
"
false
)
;
return
teardown
(
monitor
)
;
function
reloadAndWait
(
)
{
let
wait
=
waitForNetworkEvents
(
monitor
2
)
;
tab
.
linkedBrowser
.
reload
(
)
;
return
wait
;
}
}
)
;
