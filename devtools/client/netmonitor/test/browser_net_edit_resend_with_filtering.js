"
use
strict
"
;
add_task
(
async
function
(
)
{
const
{
tab
monitor
}
=
await
initNetMonitor
(
POST_RAW_URL
{
requestCount
:
1
}
)
;
const
{
document
store
windowRequire
}
=
monitor
.
panelWin
;
const
{
getSelectedRequest
}
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
selectors
/
index
"
)
;
const
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
store
.
dispatch
(
Actions
.
batchEnable
(
false
)
)
;
await
performRequests
(
monitor
tab
1
)
;
document
.
querySelector
(
"
.
requests
-
list
-
filter
-
xhr
-
button
"
)
.
click
(
)
;
const
xhrRequestItem
=
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
[
0
]
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
mousedown
"
}
xhrRequestItem
)
;
const
waitForHeaders
=
waitUntil
(
(
)
=
>
document
.
querySelector
(
"
.
headers
-
overview
"
)
)
;
await
waitForHeaders
;
const
firstRequest
=
getSelectedRequest
(
store
.
getState
(
)
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
contextmenu
"
}
xhrRequestItem
)
;
getContextMenuItem
(
monitor
"
request
-
list
-
context
-
resend
"
)
.
click
(
)
;
await
waitUntil
(
(
)
=
>
document
.
querySelector
(
"
#
custom
-
request
-
send
-
button
"
)
)
;
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
[
1
]
.
click
(
)
;
const
cloneRequest
=
getSelectedRequest
(
store
.
getState
(
)
)
;
ok
(
cloneRequest
.
id
.
replace
(
/
-
clone
/
"
"
)
=
=
firstRequest
.
id
"
The
second
XHR
request
is
a
clone
of
the
first
"
)
;
document
.
querySelector
(
"
#
custom
-
request
-
send
-
button
"
)
.
click
(
)
;
await
waitForNetworkEvents
(
monitor
1
)
;
document
.
querySelector
(
"
.
requests
-
list
-
filter
-
other
-
button
"
)
.
click
(
)
;
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
[
0
]
.
click
(
)
;
const
resendRequest
=
getSelectedRequest
(
store
.
getState
(
)
)
;
ok
(
resendRequest
.
id
!
=
=
firstRequest
.
id
"
The
second
XHR
request
was
made
and
is
unique
"
)
;
return
teardown
(
monitor
)
;
}
)
;
