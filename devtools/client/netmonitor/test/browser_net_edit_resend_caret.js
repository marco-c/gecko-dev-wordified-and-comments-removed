"
use
strict
"
;
add_task
(
async
function
(
)
{
const
{
tab
monitor
}
=
await
initNetMonitor
(
SIMPLE_URL
)
;
info
(
"
Starting
test
.
.
.
"
)
;
const
{
document
store
windowRequire
parent
}
=
monitor
.
panelWin
;
const
parentDocument
=
parent
.
document
;
const
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
store
.
dispatch
(
Actions
.
batchEnable
(
false
)
)
;
const
waitForEvents
=
waitForNetworkEvents
(
monitor
1
)
;
tab
.
linkedBrowser
.
loadURI
(
SIMPLE_URL
)
;
await
waitForEvents
;
const
firstRequest
=
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
[
0
]
;
const
waitForHeaders
=
waitUntil
(
(
)
=
>
document
.
querySelector
(
"
.
headers
-
overview
"
)
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
mousedown
"
}
firstRequest
)
;
await
waitForHeaders
;
await
waitForRequestData
(
store
[
"
requestHeaders
"
]
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
contextmenu
"
}
firstRequest
)
;
const
contextResend
=
parentDocument
.
querySelector
(
"
#
request
-
list
-
context
-
resend
"
)
;
contextResend
.
click
(
)
;
await
waitUntil
(
(
)
=
>
document
.
querySelector
(
"
#
custom
-
headers
-
value
"
)
)
;
const
headersTextarea
=
document
.
querySelector
(
"
#
custom
-
headers
-
value
"
)
;
const
{
getSelectedRequest
}
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
selectors
/
index
"
)
;
const
request
=
getSelectedRequest
(
store
.
getState
(
)
)
;
const
hostHeader
=
request
.
requestHeaders
.
headers
[
0
]
;
EventUtils
.
synthesizeKey
(
"
VK_ESCAPE
"
{
}
)
;
headersTextarea
.
focus
(
)
;
const
headersContent
=
headersTextarea
.
value
;
const
start
=
"
Host
:
"
.
length
;
const
end
=
headersContent
.
indexOf
(
"
\
n
"
)
;
headersTextarea
.
setSelectionRange
(
start
end
)
;
EventUtils
.
synthesizeKey
(
"
VK_DELETE
"
{
}
)
;
ok
(
getSelectedRequest
(
store
.
getState
(
)
)
.
requestHeaders
.
headers
[
0
]
!
=
=
hostHeader
"
Value
of
Host
header
was
edited
and
should
change
"
)
;
ok
(
headersTextarea
.
selectionStart
=
=
=
start
&
&
headersTextarea
.
selectionEnd
=
=
=
start
"
Position
of
caret
should
not
change
"
)
;
return
teardown
(
monitor
)
;
}
)
;
