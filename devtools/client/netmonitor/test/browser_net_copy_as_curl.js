"
use
strict
"
;
add_task
(
function
*
(
)
{
let
{
tab
monitor
}
=
yield
initNetMonitor
(
CURL_URL
)
;
info
(
"
Starting
test
.
.
.
"
)
;
const
QUOTE
=
Services
.
appinfo
.
OS
=
=
"
WINNT
"
?
"
\
"
"
:
"
'
"
;
function
quote
(
str
)
{
return
QUOTE
+
str
.
replace
(
new
RegExp
(
QUOTE
"
g
"
)
\
\
{
QUOTE
}
)
+
QUOTE
;
}
function
header
(
h
)
{
return
"
-
H
"
+
quote
(
h
)
;
}
const
EXPECTED_RESULT
=
[
"
curl
"
+
quote
(
SIMPLE_SJS
)
"
-
-
compressed
"
header
(
"
Host
:
example
.
com
"
)
header
(
"
User
-
Agent
:
"
+
navigator
.
userAgent
)
header
(
"
Accept
:
*
/
*
"
)
header
(
"
Accept
-
Language
:
"
+
navigator
.
language
)
header
(
"
X
-
Custom
-
Header
-
1
:
Custom
value
"
)
header
(
"
X
-
Custom
-
Header
-
2
:
8
.
8
.
8
.
8
"
)
header
(
"
X
-
Custom
-
Header
-
3
:
Mon
3
Mar
2014
11
:
11
:
11
GMT
"
)
header
(
"
Referer
:
"
+
CURL_URL
)
header
(
"
Connection
:
keep
-
alive
"
)
header
(
"
Pragma
:
no
-
cache
"
)
header
(
"
Cache
-
Control
:
no
-
cache
"
)
]
;
let
{
document
}
=
monitor
.
panelWin
;
let
wait
=
waitForNetworkEvents
(
monitor
1
)
;
yield
ContentTask
.
spawn
(
tab
.
linkedBrowser
SIMPLE_SJS
function
*
(
url
)
{
content
.
wrappedJSObject
.
performRequest
(
url
)
;
}
)
;
yield
wait
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
mousedown
"
}
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
[
0
]
)
;
EventUtils
.
sendMouseEvent
(
{
type
:
"
contextmenu
"
}
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
[
0
]
)
;
yield
waitForClipboardPromise
(
function
setup
(
)
{
monitor
.
panelWin
.
parent
.
document
.
querySelector
(
"
#
request
-
list
-
context
-
copy
-
as
-
curl
"
)
.
click
(
)
;
}
function
validate
(
result
)
{
if
(
typeof
result
!
=
=
"
string
"
)
{
return
false
;
}
let
matchRe
=
/
[
-
A
-
Za
-
z1
-
9
]
+
(
?
:
(
[
\
"
'
]
)
(
?
:
\
\
\
1
|
.
)
*
?
\
1
)
?
/
g
;
let
actual
=
result
.
match
(
matchRe
)
;
if
(
!
actual
|
|
EXPECTED_RESULT
[
0
]
!
=
actual
[
0
]
)
{
return
false
;
}
return
EXPECTED_RESULT
.
length
=
=
=
actual
.
length
&
&
EXPECTED_RESULT
.
every
(
param
=
>
actual
.
includes
(
param
)
)
;
}
)
;
info
(
"
Clipboard
contains
a
cURL
command
for
the
currently
selected
item
'
s
url
.
"
)
;
yield
teardown
(
monitor
)
;
}
)
;
