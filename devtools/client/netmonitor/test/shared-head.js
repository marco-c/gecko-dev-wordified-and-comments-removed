"
use
strict
"
;
const
{
EVENTS
}
=
require
(
"
devtools
/
client
/
netmonitor
/
src
/
constants
"
)
;
async
function
waitForExistingRequests
(
monitor
)
{
let
{
store
}
=
monitor
.
panelWin
;
function
getRequests
(
)
{
return
store
.
getState
(
)
.
requests
.
requests
;
}
function
areAllRequestsFullyLoaded
(
)
{
let
requests
=
getRequests
(
)
.
valueSeq
(
)
;
for
(
let
request
of
requests
)
{
if
(
request
.
id
.
includes
(
"
-
clone
"
)
)
{
continue
;
}
if
(
!
request
.
requestHeaders
|
|
!
request
.
requestCookies
|
|
!
request
.
eventTimings
|
|
(
(
!
request
.
responseHeaders
|
|
!
request
.
responseCookies
)
&
&
request
.
securityState
!
=
"
broken
"
&
&
(
!
request
.
responseContentAvailable
|
|
request
.
status
)
)
)
{
return
false
;
}
}
return
true
;
}
if
(
getRequests
(
)
.
size
=
=
0
)
{
return
;
}
while
(
!
areAllRequestsFullyLoaded
(
)
)
{
await
monitor
.
panelWin
.
once
(
EVENTS
.
PAYLOAD_READY
)
;
}
}
