"
use
strict
"
;
const
REQUESTS
=
[
{
url
:
"
sjs_status
-
codes
-
test
-
server
.
sjs
?
sts
=
400
"
}
{
url
:
"
sjs_status
-
codes
-
test
-
server
.
sjs
?
sts
=
300
"
}
{
url
:
"
sjs_status
-
codes
-
test
-
server
.
sjs
?
sts
=
304
"
}
]
;
add_task
(
async
function
(
)
{
await
pushPref
(
"
dom
.
security
.
https_first
"
false
)
;
const
{
monitor
}
=
await
initNetMonitor
(
FILTERING_URL
{
requestCount
:
1
}
)
;
const
{
document
store
windowRequire
}
=
monitor
.
panelWin
;
const
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
const
{
getDisplayedRequests
}
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
selectors
/
index
"
)
;
store
.
dispatch
(
Actions
.
batchEnable
(
false
)
)
;
info
(
"
Starting
test
.
.
.
"
)
;
const
waitNetwork
=
waitForNetworkEvents
(
monitor
REQUESTS
.
length
)
;
await
performRequestsInContent
(
REQUESTS
)
;
await
waitNetwork
;
document
.
querySelector
(
"
.
devtools
-
filterinput
"
)
.
focus
(
)
;
EventUtils
.
sendString
(
"
status
-
code
:
3
"
)
;
let
visibleItems
=
getDisplayedRequests
(
store
.
getState
(
)
)
;
await
waitUntil
(
(
)
=
>
{
visibleItems
=
getDisplayedRequests
(
store
.
getState
(
)
)
;
return
visibleItems
.
length
=
=
=
2
;
}
)
;
is
(
Number
(
visibleItems
[
0
]
.
status
)
303
"
First
visible
item
has
expected
status
"
)
;
is
(
Number
(
visibleItems
[
1
]
.
status
)
304
"
Second
visible
item
has
expected
status
"
)
;
await
teardown
(
monitor
)
;
}
)
;
