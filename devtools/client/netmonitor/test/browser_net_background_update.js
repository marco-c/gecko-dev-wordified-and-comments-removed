"
use
strict
"
;
add_task
(
async
(
)
=
>
{
let
{
tab
monitor
toolbox
}
=
await
initNetMonitor
(
CUSTOM_GET_URL
)
;
info
(
"
Starting
test
.
.
.
"
)
;
let
{
document
store
windowRequire
}
=
monitor
.
panelWin
;
let
Actions
=
windowRequire
(
"
devtools
/
client
/
netmonitor
/
src
/
actions
/
index
"
)
;
store
.
dispatch
(
Actions
.
batchEnable
(
false
)
)
;
await
performRequests
(
monitor
tab
2
)
;
await
waitUntil
(
(
)
=
>
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
.
length
=
=
2
)
;
info
(
"
Select
the
inspector
"
)
;
await
toolbox
.
selectTool
(
"
inspector
"
)
;
info
(
"
Wait
for
Net
panel
to
be
hidden
"
)
;
await
waitUntil
(
(
)
=
>
(
document
.
visibilityState
=
=
"
hidden
"
)
)
;
await
performRequests
(
monitor
tab
2
)
;
is
(
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
.
length
2
"
There
should
be
expected
number
of
requests
"
)
;
info
(
"
Select
the
Net
panel
again
"
)
;
await
toolbox
.
selectTool
(
"
netmonitor
"
)
;
await
waitUntil
(
(
)
=
>
document
.
querySelectorAll
(
"
.
request
-
list
-
item
"
)
.
length
=
=
4
)
;
return
teardown
(
monitor
)
;
}
)
;
async
function
performRequests
(
monitor
tab
count
)
{
let
wait
=
waitForNetworkEvents
(
monitor
count
)
;
await
ContentTask
.
spawn
(
tab
.
linkedBrowser
count
requestCount
=
>
{
content
.
wrappedJSObject
.
performRequests
(
requestCount
)
;
}
)
;
await
wait
;
}
