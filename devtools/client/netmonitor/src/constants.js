"
use
strict
"
;
const
actionTypes
=
{
ADD_REQUEST
:
"
ADD_REQUEST
"
ADD_TIMING_MARKER
:
"
ADD_TIMING_MARKER
"
BATCH_ACTIONS
:
"
BATCH_ACTIONS
"
BATCH_ENABLE
:
"
BATCH_ENABLE
"
CLEAR_REQUESTS
:
"
CLEAR_REQUESTS
"
CLEAR_TIMING_MARKERS
:
"
CLEAR_TIMING_MARKERS
"
CLONE_SELECTED_REQUEST
:
"
CLONE_SELECTED_REQUEST
"
ENABLE_REQUEST_FILTER_TYPE_ONLY
:
"
ENABLE_REQUEST_FILTER_TYPE_ONLY
"
OPEN_NETWORK_DETAILS
:
"
OPEN_NETWORK_DETAILS
"
ENABLE_PERSISTENT_LOGS
:
"
ENABLE_PERSISTENT_LOGS
"
DISABLE_BROWSER_CACHE
:
"
DISABLE_BROWSER_CACHE
"
OPEN_STATISTICS
:
"
OPEN_STATISTICS
"
REMOVE_SELECTED_CUSTOM_REQUEST
:
"
REMOVE_SELECTED_CUSTOM_REQUEST
"
RESET_COLUMNS
:
"
RESET_COLUMNS
"
SELECT_REQUEST
:
"
SELECT_REQUEST
"
SELECT_DETAILS_PANEL_TAB
:
"
SELECT_DETAILS_PANEL_TAB
"
SEND_CUSTOM_REQUEST
:
"
SEND_CUSTOM_REQUEST
"
SET_REQUEST_FILTER_TEXT
:
"
SET_REQUEST_FILTER_TEXT
"
SORT_BY
:
"
SORT_BY
"
TOGGLE_COLUMN
:
"
TOGGLE_COLUMN
"
TOGGLE_RECORDING
:
"
TOGGLE_RECORDING
"
TOGGLE_REQUEST_FILTER_TYPE
:
"
TOGGLE_REQUEST_FILTER_TYPE
"
UPDATE_REQUEST
:
"
UPDATE_REQUEST
"
WATERFALL_RESIZE
:
"
WATERFALL_RESIZE
"
}
;
const
ACTIVITY_TYPE
=
{
NONE
:
0
RELOAD
:
{
WITH_CACHE_ENABLED
:
1
WITH_CACHE_DISABLED
:
2
WITH_CACHE_DEFAULT
:
3
}
ENABLE_CACHE
:
3
DISABLE_CACHE
:
4
}
;
const
EVENTS
=
{
NETWORK_EVENT
:
"
NetMonitor
:
NetworkEvent
"
TIMELINE_EVENT
:
"
NetMonitor
:
TimelineEvent
"
REQUEST_ADDED
:
"
NetMonitor
:
RequestAdded
"
UPDATING_REQUEST_HEADERS
:
"
NetMonitor
:
NetworkEventUpdating
:
RequestHeaders
"
RECEIVED_REQUEST_HEADERS
:
"
NetMonitor
:
NetworkEventUpdated
:
RequestHeaders
"
UPDATING_REQUEST_COOKIES
:
"
NetMonitor
:
NetworkEventUpdating
:
RequestCookies
"
RECEIVED_REQUEST_COOKIES
:
"
NetMonitor
:
NetworkEventUpdated
:
RequestCookies
"
UPDATING_REQUEST_POST_DATA
:
"
NetMonitor
:
NetworkEventUpdating
:
RequestPostData
"
RECEIVED_REQUEST_POST_DATA
:
"
NetMonitor
:
NetworkEventUpdated
:
RequestPostData
"
UPDATING_SECURITY_INFO
:
"
NetMonitor
:
:
NetworkEventUpdating
:
SecurityInfo
"
RECEIVED_SECURITY_INFO
:
"
NetMonitor
:
:
NetworkEventUpdated
:
SecurityInfo
"
UPDATING_RESPONSE_HEADERS
:
"
NetMonitor
:
NetworkEventUpdating
:
ResponseHeaders
"
RECEIVED_RESPONSE_HEADERS
:
"
NetMonitor
:
NetworkEventUpdated
:
ResponseHeaders
"
UPDATING_RESPONSE_COOKIES
:
"
NetMonitor
:
NetworkEventUpdating
:
ResponseCookies
"
RECEIVED_RESPONSE_COOKIES
:
"
NetMonitor
:
NetworkEventUpdated
:
ResponseCookies
"
UPDATING_EVENT_TIMINGS
:
"
NetMonitor
:
NetworkEventUpdating
:
EventTimings
"
RECEIVED_EVENT_TIMINGS
:
"
NetMonitor
:
NetworkEventUpdated
:
EventTimings
"
STARTED_RECEIVING_RESPONSE
:
"
NetMonitor
:
NetworkEventUpdating
:
ResponseStart
"
UPDATING_RESPONSE_CONTENT
:
"
NetMonitor
:
NetworkEventUpdating
:
ResponseContent
"
RECEIVED_RESPONSE_CONTENT
:
"
NetMonitor
:
NetworkEventUpdated
:
ResponseContent
"
CONNECTED
:
"
connected
"
PAYLOAD_READY
:
"
NetMonitor
:
PayloadReady
"
}
;
const
UPDATE_PROPS
=
[
"
method
"
"
url
"
"
remotePort
"
"
remoteAddress
"
"
status
"
"
statusText
"
"
httpVersion
"
"
securityState
"
"
securityInfo
"
"
mimeType
"
"
contentSize
"
"
transferredSize
"
"
totalTime
"
"
eventTimings
"
"
headersSize
"
"
customQueryValue
"
"
requestHeaders
"
"
requestHeadersFromUploadStream
"
"
requestCookies
"
"
requestPostData
"
"
responseHeaders
"
"
responseCookies
"
"
responseContent
"
"
responseContentDataUri
"
"
formDataSections
"
]
;
const
PANELS
=
{
COOKIES
:
"
cookies
"
HEADERS
:
"
headers
"
PARAMS
:
"
params
"
RESPONSE
:
"
response
"
SECURITY
:
"
security
"
STACK_TRACE
:
"
stack
-
trace
"
TIMINGS
:
"
timings
"
}
;
const
RESPONSE_HEADERS
=
[
"
Cache
-
Control
"
"
Connection
"
"
Content
-
Encoding
"
"
Content
-
Length
"
"
ETag
"
"
Keep
-
Alive
"
"
Last
-
Modified
"
"
Server
"
"
Vary
"
]
;
const
HEADERS
=
[
{
name
:
"
status
"
label
:
"
status3
"
canFilter
:
true
filterKey
:
"
status
-
code
"
}
{
name
:
"
method
"
canFilter
:
true
}
{
name
:
"
file
"
canFilter
:
false
}
{
name
:
"
protocol
"
canFilter
:
true
}
{
name
:
"
scheme
"
canFilter
:
true
}
{
name
:
"
domain
"
canFilter
:
true
}
{
name
:
"
remoteip
"
canFilter
:
true
filterKey
:
"
remote
-
ip
"
}
{
name
:
"
cause
"
canFilter
:
true
}
{
name
:
"
type
"
canFilter
:
false
}
{
name
:
"
cookies
"
canFilter
:
false
}
{
name
:
"
setCookies
"
boxName
:
"
set
-
cookies
"
canFilter
:
false
}
{
name
:
"
transferred
"
canFilter
:
true
}
{
name
:
"
contentSize
"
boxName
:
"
size
"
filterKey
:
"
size
"
canFilter
:
true
}
{
name
:
"
startTime
"
boxName
:
"
start
-
time
"
canFilter
:
false
subMenu
:
"
timings
"
}
{
name
:
"
endTime
"
boxName
:
"
end
-
time
"
canFilter
:
false
subMenu
:
"
timings
"
}
{
name
:
"
responseTime
"
boxName
:
"
response
-
time
"
canFilter
:
false
subMenu
:
"
timings
"
}
{
name
:
"
duration
"
canFilter
:
false
subMenu
:
"
timings
"
}
{
name
:
"
latency
"
canFilter
:
false
subMenu
:
"
timings
"
}
.
.
.
RESPONSE_HEADERS
.
map
(
header
=
>
(
{
name
:
header
canFilter
:
false
subMenu
:
"
responseHeaders
"
noLocalization
:
true
}
)
)
{
name
:
"
waterfall
"
canFilter
:
false
}
]
;
const
HEADER_FILTERS
=
HEADERS
.
filter
(
h
=
>
h
.
canFilter
)
.
map
(
h
=
>
h
.
filterKey
|
|
h
.
name
)
;
const
FILTER_FLAGS
=
[
.
.
.
HEADER_FILTERS
"
set
-
cookie
-
domain
"
"
set
-
cookie
-
name
"
"
set
-
cookie
-
value
"
"
mime
-
type
"
"
larger
-
than
"
"
transferred
-
larger
-
than
"
"
is
"
"
has
-
response
-
header
"
"
regexp
"
]
;
const
FILTER_TAGS
=
[
"
html
"
"
css
"
"
js
"
"
xhr
"
"
fonts
"
"
images
"
"
media
"
"
flash
"
"
ws
"
"
other
"
]
;
const
REQUESTS_WATERFALL
=
{
BACKGROUND_TICKS_MULTIPLE
:
5
BACKGROUND_TICKS_SCALES
:
3
BACKGROUND_TICKS_SPACING_MIN
:
10
BACKGROUND_TICKS_COLOR_RGB
:
[
128
136
144
]
BACKGROUND_TICKS_OPACITY_MIN
:
32
BACKGROUND_TICKS_OPACITY_ADD
:
32
DOMCONTENTLOADED_TICKS_COLOR
:
"
highlight
-
blue
"
LOAD_TICKS_COLOR
:
"
highlight
-
red
"
TICKS_COLOR_OPACITY
:
192
HEADER_TICKS_MULTIPLE
:
5
HEADER_TICKS_SPACING_MIN
:
60
LABEL_WIDTH
:
50
}
;
const
general
=
{
ACTIVITY_TYPE
EVENTS
FILTER_SEARCH_DELAY
:
200
UPDATE_PROPS
HEADERS
RESPONSE_HEADERS
FILTER_FLAGS
FILTER_TAGS
SOURCE_EDITOR_SYNTAX_HIGHLIGHT_MAX_SIZE
:
51200
REQUESTS_WATERFALL
PANELS
}
;
module
.
exports
=
Object
.
assign
(
{
}
general
actionTypes
)
;
