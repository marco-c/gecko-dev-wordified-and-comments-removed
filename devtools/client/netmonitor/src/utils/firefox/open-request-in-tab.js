"
use
strict
"
;
const
{
Cc
Ci
}
=
require
(
"
chrome
"
)
;
const
Services
=
require
(
"
Services
"
)
;
const
{
gDevTools
}
=
require
(
"
devtools
/
client
/
framework
/
devtools
"
)
;
function
openRequestInTab
(
url
requestHeaders
requestPostData
)
{
const
win
=
Services
.
wm
.
getMostRecentWindow
(
gDevTools
.
chromeWindowType
)
;
const
rawData
=
requestPostData
?
requestPostData
.
postData
:
null
;
let
postData
;
if
(
rawData
?
.
text
)
{
const
stringStream
=
getInputStreamFromString
(
rawData
.
text
)
;
postData
=
Cc
[
"
mozilla
.
org
/
network
/
mime
-
input
-
stream
;
1
"
]
.
createInstance
(
Ci
.
nsIMIMEInputStream
)
;
const
contentTypeHeader
=
requestHeaders
.
headers
.
find
(
e
=
>
{
return
e
.
name
.
toLowerCase
(
)
=
=
=
"
content
-
type
"
;
}
)
;
postData
.
addHeader
(
"
Content
-
Type
"
contentTypeHeader
?
contentTypeHeader
.
value
:
"
application
/
x
-
www
-
form
-
urlencoded
"
)
;
postData
.
setData
(
stringStream
)
;
}
const
{
userContextId
}
=
win
.
gBrowser
.
contentPrincipal
;
win
.
gBrowser
.
selectedTab
=
win
.
gBrowser
.
addWebTab
(
url
{
triggeringPrincipal
:
Services
.
scriptSecurityManager
.
createNullPrincipal
(
{
userContextId
}
)
userContextId
postData
}
)
;
}
function
getInputStreamFromString
(
data
)
{
const
stringStream
=
Cc
[
"
mozilla
.
org
/
io
/
string
-
input
-
stream
;
1
"
]
.
createInstance
(
Ci
.
nsIStringInputStream
)
;
stringStream
.
data
=
data
;
return
stringStream
;
}
module
.
exports
=
{
openRequestInTab
}
;
