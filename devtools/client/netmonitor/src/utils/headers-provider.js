"
use
strict
"
;
const
{
ObjectProvider
}
=
require
(
"
devtools
/
client
/
shared
/
components
/
tree
/
ObjectProvider
"
)
;
var
HeadersProvider
=
{
.
.
.
ObjectProvider
getChildren
(
object
)
{
if
(
object
.
value
instanceof
HeaderList
)
{
return
object
.
value
.
headers
.
map
(
(
header
index
)
=
>
new
Header
(
header
.
name
header
.
value
index
)
)
;
}
return
ObjectProvider
.
getChildren
(
object
)
;
}
hasChildren
:
function
(
object
)
{
if
(
object
.
value
instanceof
HeaderList
)
{
return
object
.
value
.
headers
.
length
>
0
;
}
else
if
(
object
instanceof
Header
)
{
return
false
;
}
return
ObjectProvider
.
hasChildren
(
object
)
;
}
getLabel
:
function
(
object
)
{
if
(
object
instanceof
Header
)
{
return
object
.
name
;
}
return
ObjectProvider
.
getLabel
(
object
)
;
}
getValue
:
function
(
object
)
{
if
(
object
instanceof
Header
)
{
return
object
.
value
;
}
return
ObjectProvider
.
getValue
(
object
)
;
}
getKey
(
object
)
{
if
(
object
instanceof
Header
)
{
return
object
.
key
;
}
return
ObjectProvider
.
getKey
(
object
)
;
}
getType
:
function
(
object
)
{
if
(
object
instanceof
Header
)
{
return
"
string
"
;
}
return
ObjectProvider
.
getType
(
object
)
;
}
}
;
function
HeaderList
(
headers
)
{
this
.
headers
=
headers
.
slice
(
0
)
;
this
.
headers
.
sort
(
(
a
b
)
=
>
{
return
a
.
name
.
toLowerCase
(
)
.
localeCompare
(
b
.
name
.
toLowerCase
(
)
)
;
}
)
;
}
function
Header
(
name
value
key
)
{
this
.
name
=
name
;
this
.
value
=
value
;
this
.
key
=
key
;
}
module
.
exports
=
{
HeadersProvider
HeaderList
}
;
