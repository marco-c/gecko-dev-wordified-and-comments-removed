"
use
strict
"
;
const
{
createStore
applyMiddleware
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
redux
"
)
;
const
{
thunk
}
=
require
(
"
devtools
/
client
/
shared
/
redux
/
middleware
/
thunk
"
)
;
const
batching
=
require
(
"
.
.
/
middleware
/
batching
"
)
;
const
prefs
=
require
(
"
.
.
/
middleware
/
prefs
"
)
;
const
{
Prefs
}
=
require
(
"
.
/
prefs
"
)
;
const
rootReducer
=
require
(
"
.
.
/
reducers
/
index
"
)
;
const
{
FilterTypes
Filters
}
=
require
(
"
.
.
/
reducers
/
filters
"
)
;
const
{
Requests
}
=
require
(
"
.
.
/
reducers
/
requests
"
)
;
const
{
Sort
}
=
require
(
"
.
.
/
reducers
/
sort
"
)
;
const
{
TimingMarkers
}
=
require
(
"
.
.
/
reducers
/
timing
-
markers
"
)
;
const
{
UI
Columns
}
=
require
(
"
.
.
/
reducers
/
ui
"
)
;
function
configureStore
(
)
{
let
activeFilters
=
{
}
;
Prefs
.
filters
.
forEach
(
(
filter
)
=
>
{
activeFilters
[
filter
]
=
true
;
}
)
;
let
inactiveColumns
=
Prefs
.
hiddenColumns
.
reduce
(
(
acc
col
)
=
>
{
acc
[
col
]
=
false
;
return
acc
;
}
{
}
)
;
const
initialState
=
{
filters
:
new
Filters
(
{
requestFilterTypes
:
new
FilterTypes
(
activeFilters
)
}
)
requests
:
new
Requests
(
)
sort
:
new
Sort
(
)
timingMarkers
:
new
TimingMarkers
(
)
ui
:
new
UI
(
{
columns
:
new
Columns
(
inactiveColumns
)
}
)
}
;
return
createStore
(
rootReducer
initialState
applyMiddleware
(
thunk
prefs
batching
)
)
;
}
exports
.
configureStore
=
configureStore
;
