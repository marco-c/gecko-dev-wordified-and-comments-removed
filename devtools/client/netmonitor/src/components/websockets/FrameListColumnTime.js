"
use
strict
"
;
const
{
Component
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
dom
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
{
L10N
}
=
require
(
"
devtools
/
client
/
netmonitor
/
src
/
utils
/
l10n
"
)
;
const
dateTimeFormat
=
new
Intl
.
DateTimeFormat
(
undefined
{
formatMatcher
:
"
basic
"
hour12
:
false
}
)
;
class
FrameListColumnTime
extends
Component
{
static
get
propTypes
(
)
{
return
{
item
:
PropTypes
.
object
.
isRequired
}
;
}
shouldComponentUpdate
(
nextProps
)
{
return
(
this
.
props
.
item
.
type
!
=
=
nextProps
.
item
.
type
|
|
this
.
props
.
item
.
timeStamp
!
=
=
nextProps
.
item
.
timeStamp
)
;
}
formatTime
(
highResTimeStamp
)
{
const
timeStamp
=
Math
.
floor
(
highResTimeStamp
/
1000
)
;
const
hoursMinutesSeconds
=
dateTimeFormat
.
format
(
new
Date
(
timeStamp
)
)
;
return
L10N
.
getFormatStr
(
"
netmonitor
.
ws
.
time
.
format
"
hoursMinutesSeconds
String
(
timeStamp
%
1000
)
.
padStart
(
3
"
0
"
)
)
;
}
render
(
)
{
const
label
=
this
.
formatTime
(
this
.
props
.
item
.
timeStamp
)
;
return
dom
.
td
(
{
className
:
"
ws
-
frames
-
list
-
column
ws
-
frames
-
list
-
time
"
title
:
label
}
label
)
;
}
}
module
.
exports
=
FrameListColumnTime
;
