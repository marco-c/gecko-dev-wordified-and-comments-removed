"
use
strict
"
;
const
{
Component
}
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
.
js
"
)
;
const
dom
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
.
js
"
)
;
const
PropTypes
=
require
(
"
resource
:
/
/
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
.
js
"
)
;
class
ColumnTime
extends
Component
{
static
get
propTypes
(
)
{
return
{
item
:
PropTypes
.
object
.
isRequired
}
;
}
shouldComponentUpdate
(
nextProps
)
{
return
(
this
.
props
.
item
.
type
!
=
=
nextProps
.
item
.
type
|
|
this
.
props
.
item
.
timeStamp
!
=
=
nextProps
.
item
.
timeStamp
)
;
}
formatTime
(
highResTimeStamp
)
{
const
date
=
new
Date
(
highResTimeStamp
/
1000
)
;
const
hh
=
date
.
getHours
(
)
.
toString
(
)
.
padStart
(
2
"
0
"
)
;
const
mm
=
date
.
getMinutes
(
)
.
toString
(
)
.
padStart
(
2
"
0
"
)
;
const
ss
=
date
.
getSeconds
(
)
.
toString
(
)
.
padStart
(
2
"
0
"
)
;
const
mmm
=
date
.
getMilliseconds
(
)
.
toString
(
)
.
padStart
(
3
"
0
"
)
;
return
{
hh
}
:
{
mm
}
:
{
ss
}
.
{
mmm
}
;
}
render
(
)
{
const
label
=
this
.
formatTime
(
this
.
props
.
item
.
timeStamp
)
;
return
dom
.
td
(
{
className
:
"
message
-
list
-
column
message
-
list
-
time
"
title
:
label
}
label
)
;
}
}
module
.
exports
=
ColumnTime
;
