"
use
strict
"
;
const
{
createFactory
DOM
PropTypes
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
connect
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
redux
"
)
;
const
Actions
=
require
(
"
.
.
/
actions
/
index
"
)
;
const
{
getSelectedRequest
}
=
require
(
"
.
.
/
selectors
/
index
"
)
;
const
CustomRequestPanel
=
createFactory
(
require
(
"
.
/
CustomRequestPanel
"
)
)
;
const
TabboxPanel
=
createFactory
(
require
(
"
.
/
TabboxPanel
"
)
)
;
const
{
div
}
=
DOM
;
function
NetworkDetailsPanel
(
{
connector
activeTabId
cloneSelectedRequest
request
selectTab
sourceMapService
openLink
}
)
{
if
(
!
request
)
{
return
null
;
}
return
(
div
(
{
className
:
"
network
-
details
-
panel
"
}
!
request
.
isCustom
?
TabboxPanel
(
{
activeTabId
cloneSelectedRequest
connector
openLink
request
selectTab
sourceMapService
}
)
:
CustomRequestPanel
(
{
connector
request
}
)
)
)
;
}
NetworkDetailsPanel
.
displayName
=
"
NetworkDetailsPanel
"
;
NetworkDetailsPanel
.
propTypes
=
{
connector
:
PropTypes
.
object
.
isRequired
activeTabId
:
PropTypes
.
string
cloneSelectedRequest
:
PropTypes
.
func
.
isRequired
open
:
PropTypes
.
bool
request
:
PropTypes
.
object
selectTab
:
PropTypes
.
func
.
isRequired
sourceMapService
:
PropTypes
.
object
openLink
:
PropTypes
.
func
}
;
module
.
exports
=
connect
(
(
state
)
=
>
(
{
activeTabId
:
state
.
ui
.
detailsPanelSelectedTab
request
:
getSelectedRequest
(
state
)
}
)
(
dispatch
)
=
>
(
{
cloneSelectedRequest
:
(
)
=
>
dispatch
(
Actions
.
cloneSelectedRequest
(
)
)
selectTab
:
(
tabId
)
=
>
dispatch
(
Actions
.
selectDetailsPanelTab
(
tabId
)
)
}
)
)
(
NetworkDetailsPanel
)
;
