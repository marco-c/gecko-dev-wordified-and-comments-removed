"
use
strict
"
;
const
{
createClass
DOM
PropTypes
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
propertiesEqual
}
=
require
(
"
.
.
/
utils
/
request
-
utils
"
)
;
const
{
div
span
}
=
DOM
;
const
UPDATED_STATUS_PROPS
=
[
"
fromCache
"
"
fromServiceWorker
"
"
status
"
"
statusText
"
]
;
const
RequestListColumnStatus
=
createClass
(
{
displayName
:
"
RequestListColumnStatus
"
propTypes
:
{
item
:
PropTypes
.
object
.
isRequired
}
shouldComponentUpdate
(
nextProps
)
{
return
!
propertiesEqual
(
UPDATED_STATUS_PROPS
this
.
props
.
item
nextProps
.
item
)
;
}
render
(
)
{
const
{
status
statusText
fromCache
fromServiceWorker
}
=
this
.
props
.
item
;
let
code
title
;
if
(
status
)
{
if
(
fromCache
)
{
code
=
"
cached
"
;
}
else
if
(
fromServiceWorker
)
{
code
=
"
service
worker
"
;
}
else
{
code
=
status
;
}
if
(
statusText
)
{
title
=
{
status
}
{
statusText
}
;
if
(
fromCache
)
{
title
+
=
"
(
cached
)
"
;
}
if
(
fromServiceWorker
)
{
title
+
=
"
(
service
worker
)
"
;
}
}
}
return
(
div
(
{
className
:
"
requests
-
list
-
subitem
requests
-
list
-
status
"
title
}
div
(
{
className
:
"
requests
-
list
-
status
-
icon
"
"
data
-
code
"
:
code
}
)
span
(
{
className
:
"
subitem
-
label
requests
-
list
-
status
-
code
"
}
status
)
)
)
;
}
}
)
;
module
.
exports
=
RequestListColumnStatus
;
