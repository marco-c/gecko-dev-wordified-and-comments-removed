"
use
strict
"
;
const
{
Component
createFactory
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
dom
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
dom
-
factories
"
)
;
const
PropTypes
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
prop
-
types
"
)
;
const
{
fetchNetworkUpdatePacket
}
=
require
(
"
.
.
/
utils
/
request
-
utils
"
)
;
const
{
div
}
=
dom
;
const
StackTrace
=
createFactory
(
require
(
"
devtools
/
client
/
shared
/
components
/
StackTrace
"
)
)
;
class
StackTracePanel
extends
Component
{
static
get
propTypes
(
)
{
return
{
connector
:
PropTypes
.
object
.
isRequired
request
:
PropTypes
.
object
.
isRequired
sourceMapService
:
PropTypes
.
object
openLink
:
PropTypes
.
func
}
;
}
componentDidMount
(
)
{
const
{
request
connector
}
=
this
.
props
;
fetchNetworkUpdatePacket
(
connector
.
requestData
request
[
"
stackTrace
"
]
)
;
}
componentWillReceiveProps
(
nextProps
)
{
const
{
request
connector
}
=
nextProps
;
fetchNetworkUpdatePacket
(
connector
.
requestData
request
[
"
stackTrace
"
]
)
;
}
render
(
)
{
const
{
connector
openLink
request
sourceMapService
}
=
this
.
props
;
const
{
stacktrace
=
[
]
}
=
request
;
return
(
div
(
{
className
:
"
panel
-
container
"
}
StackTrace
(
{
stacktrace
onViewSourceInDebugger
:
(
{
url
line
}
)
=
>
{
return
connector
.
viewSourceInDebugger
(
url
line
)
;
}
sourceMapService
openLink
}
)
)
)
;
}
}
module
.
exports
=
StackTracePanel
;
