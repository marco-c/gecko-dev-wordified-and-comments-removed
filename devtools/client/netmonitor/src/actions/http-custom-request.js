"
use
strict
"
;
const
{
OPEN_ACTION_BAR
SELECT_ACTION_BAR_TAB
PANELS
SEND_CUSTOM_REQUEST
RIGHT_CLICK_REQUEST
}
=
require
(
"
devtools
/
client
/
netmonitor
/
src
/
constants
"
)
;
function
openHTTPCustomRequest
(
isOpen
)
{
return
(
{
dispatch
getState
}
)
=
>
{
dispatch
(
{
type
:
OPEN_ACTION_BAR
open
:
isOpen
}
)
;
dispatch
(
{
type
:
SELECT_ACTION_BAR_TAB
id
:
PANELS
.
HTTP_CUSTOM_REQUEST
}
)
;
}
;
}
function
toggleHTTPCustomRequestPanel
(
)
{
return
(
{
dispatch
getState
}
)
=
>
{
const
state
=
getState
(
)
;
const
shouldClose
=
state
.
ui
.
networkActionOpen
&
&
state
.
ui
.
selectedActionBarTabId
=
=
=
PANELS
.
HTTP_CUSTOM_REQUEST
;
dispatch
(
{
type
:
OPEN_ACTION_BAR
open
:
!
shouldClose
}
)
;
dispatch
(
{
type
:
RIGHT_CLICK_REQUEST
id
:
null
}
)
;
dispatch
(
{
type
:
SELECT_ACTION_BAR_TAB
id
:
PANELS
.
HTTP_CUSTOM_REQUEST
}
)
;
}
;
}
function
sendHTTPCustomRequest
(
connector
request
)
{
return
async
(
{
dispatch
getState
}
)
=
>
{
if
(
!
request
)
{
return
;
}
const
data
=
{
cause
:
request
.
cause
|
|
{
}
url
:
request
.
url
method
:
request
.
method
httpVersion
:
request
.
httpVersion
}
;
if
(
request
.
headers
)
{
data
.
headers
=
request
.
headers
.
headers
;
}
if
(
request
.
requestPostData
)
{
data
.
body
=
request
.
requestPostData
.
postData
.
text
;
}
const
{
channelId
}
=
await
connector
.
sendHTTPRequest
(
data
)
;
dispatch
(
{
type
:
SEND_CUSTOM_REQUEST
id
:
channelId
}
)
;
}
;
}
module
.
exports
=
{
openHTTPCustomRequest
toggleHTTPCustomRequestPanel
sendHTTPCustomRequest
}
;
