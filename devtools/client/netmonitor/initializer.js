"
use
strict
"
;
const
{
BrowserLoader
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
devtools
/
client
/
shared
/
browser
-
loader
.
js
"
)
;
const
require
=
(
window
.
windowRequire
=
BrowserLoader
(
{
baseURI
:
"
resource
:
/
/
devtools
/
client
/
netmonitor
/
"
window
}
)
.
require
)
;
const
{
NetMonitorAPI
}
=
require
(
"
devtools
/
client
/
netmonitor
/
src
/
api
"
)
;
const
{
NetMonitorApp
}
=
require
(
"
devtools
/
client
/
netmonitor
/
src
/
app
"
)
;
const
EventEmitter
=
require
(
"
devtools
/
shared
/
event
-
emitter
"
)
;
EventEmitter
.
decorate
(
window
)
;
function
initialize
(
api
)
{
const
app
=
new
NetMonitorApp
(
api
)
;
window
.
Netmonitor
=
app
;
window
.
api
=
api
;
window
.
store
=
app
.
api
.
store
;
window
.
connector
=
app
.
api
.
connector
;
window
.
actions
=
app
.
api
.
actions
;
return
app
;
}
const
href
=
window
.
location
.
href
.
replace
(
/
chrome
:
/
"
http
:
/
/
"
)
;
const
url
=
new
window
.
URL
(
href
)
;
if
(
window
.
location
.
protocol
=
=
=
"
chrome
:
"
&
&
url
.
search
.
length
>
1
)
{
const
{
descriptorFromURL
}
=
require
(
"
devtools
/
client
/
framework
/
descriptor
-
from
-
url
"
)
;
(
async
function
(
)
{
try
{
const
descriptor
=
await
descriptorFromURL
(
url
)
;
const
target
=
await
descriptor
.
getTarget
(
)
;
const
toolbox
=
{
target
viewSourceInDebugger
(
)
{
throw
new
Error
(
"
toolbox
.
viewSourceInDebugger
is
not
implement
from
a
tab
"
)
;
}
}
;
const
api
=
new
NetMonitorAPI
(
)
;
await
api
.
connect
(
toolbox
)
;
const
app
=
window
.
initialize
(
api
)
;
app
.
bootstrap
(
{
toolbox
document
:
window
.
document
}
)
;
}
catch
(
err
)
{
window
.
alert
(
"
Unable
to
start
the
network
monitor
:
"
+
err
)
;
}
}
)
(
)
;
}
