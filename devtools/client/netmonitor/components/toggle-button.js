"
use
strict
"
;
const
{
DOM
PropTypes
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
"
)
;
const
{
connect
}
=
require
(
"
devtools
/
client
/
shared
/
vendor
/
react
-
redux
"
)
;
const
{
L10N
}
=
require
(
"
.
.
/
l10n
"
)
;
const
Actions
=
require
(
"
.
.
/
actions
/
index
"
)
;
const
{
button
}
=
DOM
;
function
ToggleButton
(
{
disabled
onToggle
visible
}
)
{
let
className
=
[
"
devtools
-
button
"
]
;
if
(
!
visible
)
{
className
.
push
(
"
pane
-
collapsed
"
)
;
}
let
titleMsg
=
visible
?
L10N
.
getStr
(
"
collapseDetailsPane
"
)
:
L10N
.
getStr
(
"
expandDetailsPane
"
)
;
return
button
(
{
id
:
"
details
-
pane
-
toggle
"
className
:
className
.
join
(
"
"
)
title
:
titleMsg
disabled
:
disabled
tabIndex
:
"
0
"
onMouseDown
:
onToggle
}
)
;
}
ToggleButton
.
propTypes
=
{
disabled
:
PropTypes
.
bool
.
isRequired
onToggle
:
PropTypes
.
func
.
isRequired
visible
:
PropTypes
.
bool
.
isRequired
}
;
module
.
exports
=
connect
(
(
state
)
=
>
(
{
disabled
:
state
.
sidebar
.
toggleButtonDisabled
visible
:
state
.
sidebar
.
visible
}
)
(
dispatch
)
=
>
(
{
onToggle
:
(
)
=
>
{
dispatch
(
Actions
.
toggleSidebar
(
)
)
;
let
requestsMenu
=
NetMonitorView
.
RequestsMenu
;
let
selectedIndex
=
requestsMenu
.
selectedIndex
;
if
(
selectedIndex
=
=
-
1
&
&
requestsMenu
.
itemCount
)
{
requestsMenu
.
selectedIndex
=
0
;
}
else
{
requestsMenu
.
selectedIndex
=
-
1
;
}
}
}
)
)
(
ToggleButton
)
;
