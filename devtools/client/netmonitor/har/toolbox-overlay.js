"
use
strict
"
;
const
Services
=
require
(
"
Services
"
)
;
loader
.
lazyRequireGetter
(
this
"
HarAutomation
"
"
devtools
/
client
/
netmonitor
/
har
/
har
-
automation
"
true
)
;
const
overlays
=
new
WeakMap
(
)
;
function
ToolboxOverlay
(
toolbox
)
{
this
.
toolbox
=
toolbox
;
this
.
onInit
=
this
.
onInit
.
bind
(
this
)
;
this
.
onDestroy
=
this
.
onDestroy
.
bind
(
this
)
;
this
.
toolbox
.
on
(
"
ready
"
this
.
onInit
)
;
this
.
toolbox
.
on
(
"
destroy
"
this
.
onDestroy
)
;
}
ToolboxOverlay
.
prototype
=
{
onInit
(
)
{
let
autoExport
=
Services
.
prefs
.
getBoolPref
(
"
devtools
.
netmonitor
.
har
.
enableAutoExportToFile
"
)
;
if
(
!
autoExport
)
{
return
;
}
this
.
initAutomation
(
)
;
}
onDestroy
(
eventId
toolbox
)
{
this
.
destroyAutomation
(
)
;
}
initAutomation
(
)
{
this
.
automation
=
new
HarAutomation
(
this
.
toolbox
)
;
}
destroyAutomation
(
)
{
if
(
this
.
automation
)
{
this
.
automation
.
destroy
(
)
;
}
}
}
;
function
register
(
toolbox
)
{
if
(
overlays
.
has
(
toolbox
)
)
{
throw
Error
(
"
There
is
an
existing
overlay
for
the
toolbox
"
)
;
}
let
overlay
=
new
ToolboxOverlay
(
toolbox
)
;
overlays
.
set
(
toolbox
overlay
)
;
}
function
get
(
toolbox
)
{
return
overlays
.
get
(
toolbox
)
;
}
exports
.
register
=
register
;
exports
.
get
=
get
;
