"
use
strict
"
;
const
Cu
=
Components
.
utils
;
const
{
Services
}
=
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
{
}
)
;
function
unload
(
reason
)
{
Services
.
ppmm
.
loadProcessScript
(
"
data
:
(
"
+
function
(
scriptReason
)
{
let
obs
=
Components
.
classes
[
"
mozilla
.
org
/
observer
-
service
;
1
"
]
.
getService
(
Components
.
interfaces
.
nsIObserverService
)
;
obs
.
notifyObservers
(
null
"
message
-
manager
-
flush
-
caches
"
)
;
if
(
Services
.
appinfo
.
processType
=
=
Services
.
appinfo
.
PROCESS_TYPE_CONTENT
)
{
Services
.
obs
.
notifyObservers
(
null
"
devtools
-
unload
"
scriptReason
)
;
}
}
+
"
)
(
\
"
"
+
reason
.
replace
(
/
"
/
g
'
\
\
"
'
)
+
"
\
"
)
"
false
)
;
Services
.
obs
.
notifyObservers
(
null
"
devtools
-
unload
"
reason
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
shared
/
Loader
.
jsm
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
client
/
shared
/
browser
-
loader
.
js
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
client
/
framework
/
ToolboxProcess
.
jsm
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
shared
/
apps
/
Devices
.
jsm
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
client
/
scratchpad
/
scratchpad
-
manager
.
jsm
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
shared
/
Parser
.
jsm
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
client
/
shared
/
DOMHelpers
.
jsm
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
client
/
shared
/
widgets
/
VariablesView
.
jsm
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
client
/
responsivedesign
/
responsivedesign
.
jsm
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
client
/
shared
/
widgets
/
AbstractTreeItem
.
jsm
"
)
;
Cu
.
unload
(
"
resource
:
/
/
devtools
/
shared
/
deprecated
-
sync
-
thenables
.
js
"
)
;
}
function
startup
(
data
)
{
}
function
shutdown
(
data
reason
)
{
if
(
reason
=
=
APP_SHUTDOWN
)
{
return
;
}
unload
(
"
disable
"
)
;
}
function
install
(
)
{
}
function
uninstall
(
)
{
}
