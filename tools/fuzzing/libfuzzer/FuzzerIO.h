#
ifndef
LLVM_FUZZER_IO_H
#
define
LLVM_FUZZER_IO_H
#
include
"
FuzzerDefs
.
h
"
namespace
fuzzer
{
long
GetEpoch
(
const
std
:
:
string
&
Path
)
;
Unit
FileToVector
(
const
std
:
:
string
&
Path
size_t
MaxSize
=
0
bool
ExitOnError
=
true
)
;
std
:
:
string
FileToString
(
const
std
:
:
string
&
Path
)
;
void
CopyFileToErr
(
const
std
:
:
string
&
Path
)
;
void
WriteToFile
(
const
Unit
&
U
const
std
:
:
string
&
Path
)
;
void
ReadDirToVectorOfUnits
(
const
char
*
Path
std
:
:
vector
<
Unit
>
*
V
long
*
Epoch
size_t
MaxSize
bool
ExitOnError
)
;
std
:
:
string
DirPlusFile
(
const
std
:
:
string
&
DirPath
const
std
:
:
string
&
FileName
)
;
std
:
:
string
DirName
(
const
std
:
:
string
&
FileName
)
;
std
:
:
string
TmpDir
(
)
;
bool
IsInterestingCoverageFile
(
const
std
:
:
string
&
FileName
)
;
void
DupAndCloseStderr
(
)
;
void
CloseStdout
(
)
;
void
Printf
(
const
char
*
Fmt
.
.
.
)
;
void
RawPrint
(
const
char
*
Str
)
;
bool
IsFile
(
const
std
:
:
string
&
Path
)
;
void
ListFilesInDirRecursive
(
const
std
:
:
string
&
Dir
long
*
Epoch
std
:
:
vector
<
std
:
:
string
>
*
V
bool
TopDir
)
;
char
GetSeparator
(
)
;
FILE
*
OpenFile
(
int
Fd
const
char
*
Mode
)
;
int
CloseFile
(
int
Fd
)
;
int
DuplicateFile
(
int
Fd
)
;
void
RemoveFile
(
const
std
:
:
string
&
Path
)
;
void
DiscardOutput
(
int
Fd
)
;
intptr_t
GetHandleFromFd
(
int
fd
)
;
}
#
endif
