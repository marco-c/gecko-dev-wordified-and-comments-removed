#
ifndef
mozilla_dom_MessageManagerFuzzer_h__
#
define
mozilla_dom_MessageManagerFuzzer_h__
#
include
"
jspubtd
.
h
"
#
include
"
nsAString
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
dom
{
namespace
ipc
{
class
StructuredCloneData
;
}
#
ifdef
IsLoggingEnabled
#
undef
IsLoggingEnabled
#
endif
class
MessageManagerFuzzer
{
public
:
static
void
TryMutate
(
JSContext
*
aCx
const
nsAString
&
aMessageName
ipc
:
:
StructuredCloneData
*
aData
const
JS
:
:
Value
&
aTransfer
)
;
private
:
static
void
ReadFile
(
const
char
*
path
nsTArray
<
nsCString
>
&
aArray
)
;
static
nsCString
GetFuzzValueFromFile
(
)
;
static
bool
IsMessageNameBlacklisted
(
const
nsAString
&
aMessageName
)
;
static
bool
Mutate
(
JSContext
*
aCx
const
nsAString
&
aMessageName
ipc
:
:
StructuredCloneData
*
aData
const
JS
:
:
Value
&
aTransfer
)
;
static
void
Mutate
(
JSContext
*
aCx
JS
:
:
Rooted
<
JS
:
:
Value
>
&
aMutation
)
;
static
void
MutateObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JS
:
:
Value
>
aValue
unsigned
short
int
aRecursionCounter
)
;
static
bool
MutateValue
(
JSContext
*
aCx
JS
:
:
Handle
<
JS
:
:
Value
>
aValue
JS
:
:
MutableHandle
<
JS
:
:
Value
>
aOutMutationValue
unsigned
short
int
aRecursionCounter
)
;
static
unsigned
int
DefaultMutationProbability
(
)
;
static
nsAutoString
ReadJSON
(
JSContext
*
aCx
const
JS
:
:
Value
&
aJSON
)
;
static
bool
IsEnabled
(
)
;
static
bool
IsLoggingEnabled
(
)
;
}
;
}
}
#
endif
