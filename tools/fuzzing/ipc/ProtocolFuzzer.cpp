#
include
"
mozilla
/
layers
/
CompositorBridgeParent
.
h
"
#
include
"
ProtocolFuzzer
.
h
"
namespace
mozilla
{
namespace
ipc
{
nsTArray
<
nsCString
>
LoadIPCMessageBlacklist
(
const
char
*
aPath
)
{
nsTArray
<
nsCString
>
blacklist
;
if
(
aPath
)
{
nsresult
result
=
Faulty
:
:
ReadFile
(
aPath
blacklist
)
;
MOZ_RELEASE_ASSERT
(
result
=
=
NS_OK
)
;
}
return
blacklist
;
}
mozilla
:
:
dom
:
:
ContentParent
*
ProtocolFuzzerHelper
:
:
CreateContentParent
(
const
nsAString
&
aRemoteType
)
{
auto
*
cp
=
new
mozilla
:
:
dom
:
:
ContentParent
(
aRemoteType
)
;
cp
-
>
GetIPCChannel
(
)
-
>
mWorkerThread
=
PR_GetCurrentThread
(
)
;
cp
-
>
GetIPCChannel
(
)
-
>
mMonitor
=
new
RefCountedMonitor
(
)
;
return
cp
;
}
void
ProtocolFuzzerHelper
:
:
CompositorBridgeParentSetup
(
)
{
mozilla
:
:
layers
:
:
CompositorBridgeParent
:
:
Setup
(
)
;
}
}
}
