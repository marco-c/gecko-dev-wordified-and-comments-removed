from
__future__
import
absolute_import
from
subprocess
import
Popen
PIPE
import
os
import
platform
import
sys
fix_stacks
=
None
def
fixSymbols
(
line
jsonMode
=
False
)
:
    
global
fix_stacks
    
if
not
fix_stacks
:
        
base
=
os
.
environ
.
get
(
            
'
MOZ_FETCHES_DIR
'
            
os
.
environ
.
get
(
                
'
MOZBUILD_STATE_PATH
'
                
os
.
path
.
expanduser
(
'
~
/
.
mozbuild
'
)
            
)
        
)
        
fix_stacks_exe
=
base
+
'
/
fix
-
stacks
/
fix
-
stacks
'
        
if
platform
.
system
(
)
=
=
'
Windows
'
:
            
fix_stacks_exe
=
fix_stacks_exe
+
'
.
exe
'
        
if
not
(
os
.
path
.
isfile
(
fix_stacks_exe
)
and
os
.
access
(
fix_stacks_exe
os
.
X_OK
)
)
:
            
raise
Exception
(
'
cannot
find
fix
-
stacks
;
please
run
.
/
mach
bootstrap
'
)
        
args
=
[
fix_stacks_exe
]
        
if
jsonMode
:
            
args
.
append
(
'
-
j
'
)
        
fix_stacks
=
Popen
(
args
stdin
=
PIPE
stdout
=
PIPE
stderr
=
None
)
    
fix_stacks
.
stdin
.
write
(
line
)
    
fix_stacks
.
stdin
.
flush
(
)
    
return
fix_stacks
.
stdout
.
readline
(
)
if
__name__
=
=
"
__main__
"
:
    
for
line
in
sys
.
stdin
:
        
sys
.
stdout
.
write
(
fixSymbols
(
line
)
)
