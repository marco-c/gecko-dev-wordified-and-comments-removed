declare
global
{
interface
nsIGNOMEShellService
extends
nsIShellService
{
readonly
canSetDesktopBackground
:
boolean
;
isDefaultForScheme
(
aScheme
:
string
)
:
boolean
;
}
interface
nsIOpenTabsProvider
extends
nsISupports
{
getOpenTabs
(
)
:
string
[
]
;
switchToOpenTab
(
url
:
string
)
:
void
;
}
type
nsIApplicationChooserFinishedCallback
=
Callable
<
{
done
(
handlerApp
:
nsIHandlerApp
)
:
void
;
}
>
interface
nsIApplicationChooser
extends
nsISupports
{
init
(
parent
:
mozIDOMWindowProxy
title
:
string
)
:
void
;
open
(
contentType
:
string
applicationChooserFinishedCallback
:
nsIApplicationChooserFinishedCallback
)
:
void
;
}
interface
nsIGtkTaskbarProgress
extends
nsITaskbarProgress
{
setPrimaryWindow
(
aWindow
:
mozIDOMWindowProxy
)
:
void
;
}
interface
nsITaskbarProgress
extends
nsISupports
{
readonly
STATE_NO_PROGRESS
?
:
0
;
readonly
STATE_INDETERMINATE
?
:
1
;
readonly
STATE_NORMAL
?
:
2
;
readonly
STATE_ERROR
?
:
3
;
readonly
STATE_PAUSED
?
:
4
;
setProgressState
(
state
:
nsTaskbarProgressState
currentValue
?
:
u64
maxValue
?
:
u64
)
:
void
;
}
interface
nsIXPCComponents_Interfaces
{
nsIGNOMEShellService
:
nsJSIID
<
nsIGNOMEShellService
>
;
nsIOpenTabsProvider
:
nsJSIID
<
nsIOpenTabsProvider
>
;
nsIApplicationChooserFinishedCallback
:
nsJSIID
<
nsIApplicationChooserFinishedCallback
>
;
nsIApplicationChooser
:
nsJSIID
<
nsIApplicationChooser
>
;
nsIGtkTaskbarProgress
:
nsJSIID
<
nsIGtkTaskbarProgress
>
;
nsITaskbarProgress
:
nsJSIID
<
nsITaskbarProgress
>
;
}
}
type
PRTime
=
i64
;
type
nsHandlerInfoAction
=
i32
;
type
nsTaskbarProgressState
=
i32
;
type
InOutParam
<
T
>
=
{
value
:
T
}
;
type
OutParam
<
T
>
=
{
value
?
:
T
}
;
type
Enums
<
enums
>
=
Partial
<
Pick
<
enums
keyof
enums
>
>
;
type
Callable
<
iface
>
=
iface
|
Extract
<
iface
[
keyof
iface
]
Function
>
export
{
}
;
