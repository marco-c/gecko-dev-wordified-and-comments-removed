interface
CanonicalBrowsingContext
extends
LoadContextMixin
{
embedderElement
:
XULBrowserElement
;
currentWindowContext
:
WindowGlobalParent
;
parent
:
CanonicalBrowsingContext
;
parentWindowContext
:
WindowGlobalParent
;
top
:
CanonicalBrowsingContext
;
topWindowContext
:
WindowGlobalParent
;
}
interface
ChromeWindow
extends
Window
{
isChromeWindow
:
true
;
}
interface
Document
{
createXULElement
(
name
:
"
browser
"
)
:
XULBrowserElement
;
}
interface
MessageListenerManagerMixin
{
addMessageListener
(
msg
:
string
listener
:
{
receiveMessage
(
_
:
ReceiveMessageArgument
&
{
data
}
)
}
)
;
removeMessageListener
(
msg
:
string
listener
:
{
receiveMessage
(
_
:
ReceiveMessageArgument
&
{
data
}
)
}
)
;
}
interface
MozQueryInterface
{
<
T
>
(
iid
:
T
)
:
nsQIResult
<
T
>
;
}
interface
nsICryptoHash
extends
nsISupports
{
update
(
aData
:
ArrayLike
<
number
>
aLen
:
number
)
:
void
;
}
interface
nsIDOMWindow
extends
Window
{
}
interface
nsISimpleEnumerator
extends
Iterable
<
any
>
{
}
interface
nsISupports
{
wrappedJSObject
?
:
object
;
}
interface
nsIXPCComponents_Constructor
{
<
const
T
IIDs
=
nsIXPCComponents_Interfaces
>
(
cid
id
:
T
init
?
)
:
{
new
(
.
.
.
any
)
:
nsQIResult
<
T
extends
keyof
IIDs
?
IIDs
[
T
]
:
T
>
;
(
.
.
.
any
)
:
nsQIResult
<
T
extends
keyof
IIDs
?
IIDs
[
T
]
:
T
>
;
}
}
interface
ComponentsExceptionOptions
{
result
?
:
number
stack
?
:
nsIStackFrame
data
?
:
object
}
interface
nsIException
extends
Exception
{
}
interface
nsIXPCComponents_Exception
{
(
message
?
:
string
resultOrOptions
?
:
number
|
ComponentsExceptionOptions
stack
?
:
nsIStackFrame
data
?
:
object
)
:
nsIException
;
}
interface
nsIXPCComponents_ID
{
(
uuid
:
string
)
:
nsID
}
interface
nsIXPCComponents_utils_Sandbox
{
(
principal
:
nsIPrincipal
|
nsIPrincipal
[
]
options
:
object
)
:
Sandbox
;
}
interface
nsXPCComponents_Classes
{
[
cid
:
string
]
:
{
createInstance
<
T
>
(
aID
:
T
)
:
nsQIResult
<
T
>
;
getService
<
T
>
(
aID
?
:
T
)
:
unknown
extends
T
?
nsISupports
:
nsQIResult
<
T
>
;
}
}
interface
nsXPCComponents_Utils
{
cloneInto
<
T
>
(
value
:
T
.
.
.
any
)
:
T
;
createObjectIn
<
T
=
object
>
(
_
object
?
:
T
)
:
T
;
exportFunction
<
T
>
(
func
:
T
.
.
.
any
)
:
T
;
getWeakReference
<
T
>
(
value
:
T
)
:
{
get
(
)
:
T
}
;
waiveXrays
<
T
>
(
object
:
T
)
:
T
;
}
type
Sandbox
=
typeof
globalThis
&
nsISupports
;
interface
XULBrowserElement
extends
XULFrameElement
FrameLoader
{
currentURI
:
nsIURI
;
docShellIsActive
:
boolean
;
isRemoteBrowser
:
boolean
;
remoteType
:
string
;
}
interface
Localization
{
formatValuesSync
(
aKeys
:
L10nKey
[
]
)
:
(
string
|
null
)
[
]
;
}
