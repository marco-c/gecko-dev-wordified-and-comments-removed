#
include
"
linux
/
handler
/
exception_handler
.
h
"
using
google_breakpad
:
:
ExceptionHandler
;
static
ExceptionHandler
*
gExceptionHandler
=
nullptr
;
bool
gBreakpadInjectorEnabled
=
true
;
bool
TestEnabled
(
void
*
)
{
return
gBreakpadInjectorEnabled
;
}
bool
SetGlobalExceptionHandler
(
ExceptionHandler
:
:
FilterCallback
filterCallback
ExceptionHandler
:
:
MinidumpCallback
minidumpCallback
)
{
const
char
*
tempPath
=
getenv
(
"
TMPDIR
"
)
;
if
(
!
tempPath
)
tempPath
=
"
/
tmp
"
;
google_breakpad
:
:
MinidumpDescriptor
descriptor
(
tempPath
)
;
gExceptionHandler
=
new
ExceptionHandler
(
descriptor
filterCallback
minidumpCallback
nullptr
true
-
1
)
;
if
(
!
gExceptionHandler
)
return
false
;
return
true
;
}
void
__attribute__
(
(
constructor
)
)
SetBreakpadExceptionHandler
(
)
{
if
(
gExceptionHandler
)
abort
(
)
;
if
(
!
SetGlobalExceptionHandler
(
TestEnabled
nullptr
)
)
abort
(
)
;
if
(
!
gExceptionHandler
)
abort
(
)
;
}
