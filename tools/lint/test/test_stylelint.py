import
mozunit
import
pytest
from
conftest
import
build
LINTER
=
"
stylelint
"
fixed
=
0
pytest
.
fixture
def
stylelint
(
lint
)
:
    
def
inner
(
*
args
*
*
kwargs
)
:
        
kwargs
[
"
extra_args
"
]
=
[
            
"
-
-
ignore
-
path
=
tools
/
lint
/
test
/
files
/
eslint
/
testprettierignore
"
        
]
        
return
lint
(
*
args
*
*
kwargs
)
    
return
inner
def
test_lint_with_global_exclude
(
lint
config
paths
)
:
    
config
[
"
exclude
"
]
=
[
"
subdir
"
"
import
"
]
    
results
=
lint
(
paths
(
)
config
=
config
root
=
build
.
topsrcdir
)
    
assert
len
(
results
)
=
=
0
def
test_no_files_to_lint
(
stylelint
config
paths
)
:
    
results
=
stylelint
(
paths
(
"
nolint
"
)
root
=
build
.
topsrcdir
)
    
assert
results
=
=
[
]
    
results
=
stylelint
(
paths
(
"
nolint
"
"
subdir
/
bad
.
css
"
)
root
=
build
.
topsrcdir
)
    
assert
len
(
results
)
=
=
1
def
test_stylelint
(
stylelint
config
create_temp_file
)
:
    
contents
=
"
"
"
#
foo
{
    
font
-
size
:
12px
;
    
font
-
size
:
12px
;
}
"
"
"
    
path
=
create_temp_file
(
contents
"
bad
.
css
"
)
    
results
=
stylelint
(
[
path
]
config
=
config
root
=
build
.
topsrcdir
)
    
assert
len
(
results
)
=
=
1
def
test_stylelint_fix
(
stylelint
config
create_temp_file
)
:
    
contents
=
"
"
"
#
foo
{
    
font
-
size
:
12px
;
    
font
-
size
:
12px
;
}
"
"
"
    
path
=
create_temp_file
(
contents
"
bad
.
css
"
)
    
stylelint
(
[
path
]
config
=
config
root
=
build
.
topsrcdir
fix
=
True
)
    
assert
fixed
=
=
1
if
__name__
=
=
"
__main__
"
:
    
mozunit
.
main
(
)
