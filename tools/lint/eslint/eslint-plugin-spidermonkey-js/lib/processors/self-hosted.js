"
use
strict
"
;
const
selfHostedRegex
=
/
js
\
/
src
\
/
(
?
:
builtin
|
shell
)
\
/
.
*
?
\
.
js
/
;
const
macroRegex
=
/
\
s
*
\
#
(
if
|
ifdef
|
else
|
elif
|
endif
|
include
|
define
|
undef
)
.
*
/
;
module
.
exports
=
{
preprocess
(
text
filename
)
{
if
(
!
selfHostedRegex
.
test
(
filename
)
)
{
return
[
text
]
;
}
let
lines
=
text
.
split
(
/
\
n
/
)
;
for
(
let
i
=
0
;
i
<
lines
.
length
;
i
+
+
)
{
if
(
!
macroRegex
.
test
(
lines
[
i
]
)
)
{
continue
;
}
for
(
;
i
<
lines
.
length
;
i
+
+
)
{
lines
[
i
]
=
"
/
/
"
+
lines
[
i
]
;
if
(
!
lines
[
i
]
.
endsWith
(
"
\
\
"
)
)
{
break
;
}
}
}
return
[
lines
.
join
(
"
\
n
"
)
]
;
}
postprocess
(
messages
filename
)
{
return
Array
.
prototype
.
concat
.
apply
(
[
]
messages
)
;
}
}
;
