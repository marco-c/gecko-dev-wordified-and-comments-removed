"
use
strict
"
;
var
mocha
=
require
(
"
mocha
"
)
;
var
path
=
require
(
"
path
"
)
;
module
.
exports
=
MozillaFormatter
;
function
MozillaFormatter
(
runner
)
{
mocha
.
reporters
.
Base
.
call
(
this
runner
)
;
var
passes
=
0
;
var
failures
=
[
]
;
runner
.
on
(
"
start
"
(
)
=
>
{
console
.
log
(
"
SUITE
-
START
|
eslint
-
plugin
-
mozilla
"
)
;
}
)
;
runner
.
on
(
"
pass
"
function
(
test
)
{
passes
+
+
;
let
title
=
test
.
title
.
replace
(
/
\
n
/
g
"
|
"
)
;
console
.
log
(
TEST
-
PASS
|
{
path
.
basename
(
test
.
file
)
}
|
{
title
}
)
;
}
)
;
runner
.
on
(
"
fail
"
function
(
test
err
)
{
failures
.
push
(
test
)
;
let
title
=
test
.
title
.
replace
(
/
\
n
/
g
"
|
"
)
;
console
.
log
(
TEST
-
UNEXPECTED
-
FAIL
|
{
path
.
basename
(
test
.
file
)
}
|
{
title
}
|
{
err
.
message
}
)
;
mocha
.
reporters
.
Base
.
list
(
[
test
]
)
;
}
)
;
runner
.
on
(
"
end
"
function
(
)
{
console
.
log
(
"
"
)
;
console
.
log
(
"
INFO
|
Result
summary
:
"
)
;
console
.
log
(
INFO
|
Passed
:
{
passes
}
)
;
console
.
log
(
INFO
|
Failed
:
{
failures
.
length
}
)
;
console
.
log
(
"
SUITE
-
END
"
)
;
console
.
log
(
"
"
)
;
console
.
log
(
"
Failure
summary
:
"
)
;
mocha
.
reporters
.
Base
.
list
(
failures
)
;
process
.
exit
(
failures
.
length
)
;
}
)
;
}
