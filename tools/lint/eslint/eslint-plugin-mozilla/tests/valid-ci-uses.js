"
use
strict
"
;
var
os
=
require
(
"
os
"
)
;
var
rule
=
require
(
"
.
.
/
lib
/
rules
/
valid
-
ci
-
uses
"
)
;
var
RuleTester
=
require
(
"
eslint
"
)
.
RuleTester
;
const
ruleTester
=
new
RuleTester
(
{
parserOptions
:
{
ecmaVersion
:
"
latest
"
}
}
)
;
function
invalidCode
(
code
messageId
data
)
{
return
{
code
errors
:
[
{
messageId
data
}
]
}
;
}
process
.
env
.
MOZ_XPT_ARTIFACTS_DIR
=
{
__dirname
}
/
xpidl
;
const
tests
=
{
valid
:
[
"
Ci
.
nsIURIFixup
"
"
Ci
.
nsIURIFixup
.
FIXUP_FLAG_NONE
"
]
invalid
:
[
invalidCode
(
"
Ci
.
nsIURIFixup
.
UNKNOWN_CONSTANT
"
"
unknownProperty
"
{
interface
:
"
nsIURIFixup
"
property
:
"
UNKNOWN_CONSTANT
"
}
)
invalidCode
(
"
Ci
.
nsIFoo
"
"
unknownInterface
"
{
interface
:
"
nsIFoo
"
}
)
]
}
;
switch
(
os
.
platform
)
{
case
"
windows
"
:
tests
.
invalid
.
push
(
invalidCode
(
"
Ci
.
nsIJumpListShortcut
"
"
missingInterface
"
)
)
;
break
;
case
"
darwin
"
:
tests
.
invalid
.
push
(
invalidCode
(
"
Ci
.
nsIMacShellService
"
"
missingInterface
"
)
)
;
break
;
case
"
linux
"
:
tests
.
invalid
.
push
(
invalidCode
(
"
Ci
.
mozISandboxReporter
"
"
missingInterface
"
)
)
;
}
ruleTester
.
run
(
"
valid
-
ci
-
uses
"
rule
tests
)
;
