"
use
strict
"
;
var
rule
=
require
(
"
.
.
/
lib
/
rules
/
use
-
finally
"
)
;
var
RuleTester
=
require
(
"
eslint
"
)
.
RuleTester
;
const
ruleTester
=
new
RuleTester
(
{
parserOptions
:
{
ecmaVersion
:
6
}
}
)
;
let
gError
=
[
{
message
:
Use
.
finally
instead
of
passing
2
identical
arguments
to
.
then
type
:
"
CallExpression
"
}
]
;
ruleTester
.
run
(
"
use
-
finally
"
rule
{
valid
:
[
"
foo
.
finally
(
a
)
"
"
foo
.
then
(
a
)
"
"
foo
.
then
(
(
)
=
>
{
}
)
"
]
invalid
:
[
{
code
:
"
foo
.
then
(
a
a
)
;
"
output
:
"
foo
.
finally
(
a
)
;
"
errors
:
gError
}
{
code
:
"
foo
.
then
(
(
)
=
>
{
}
(
)
=
>
{
}
)
;
"
output
:
"
foo
.
finally
(
(
)
=
>
{
}
)
;
"
errors
:
gError
}
{
code
:
"
foo
.
then
(
a
/
*
make
sure
we
always
do
this
*
/
a
)
;
"
output
:
"
foo
.
finally
(
/
*
make
sure
we
always
do
this
*
/
a
)
;
"
errors
:
gError
}
]
}
)
;
