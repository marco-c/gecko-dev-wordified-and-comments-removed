"
use
strict
"
;
module
.
exports
=
{
env
:
{
browser
:
true
es2022
:
true
"
mozilla
/
privileged
"
:
true
"
mozilla
/
specific
"
:
true
}
extends
:
[
"
eslint
:
recommended
"
"
prettier
"
"
plugin
:
json
/
recommended
-
with
-
comments
"
]
overrides
:
[
{
env
:
{
browser
:
false
"
mozilla
/
jsm
"
:
true
}
files
:
[
"
*
*
/
*
.
sys
.
mjs
"
"
*
*
/
*
.
jsm
"
"
*
*
/
*
.
jsm
.
js
"
]
rules
:
{
"
mozilla
/
lazy
-
getter
-
object
-
name
"
:
"
error
"
"
mozilla
/
reject
-
eager
-
module
-
in
-
lazy
-
getter
"
:
"
error
"
"
mozilla
/
reject
-
global
-
this
"
:
"
error
"
"
mozilla
/
reject
-
globalThis
-
modification
"
:
"
error
"
"
mozilla
/
reject
-
importGlobalProperties
"
:
[
"
error
"
"
everything
"
]
"
mozilla
/
reject
-
mixing
-
eager
-
and
-
lazy
"
:
"
error
"
"
mozilla
/
reject
-
top
-
level
-
await
"
:
"
error
"
"
no
-
redeclare
"
:
[
"
error
"
{
builtinGlobals
:
false
}
]
}
}
{
files
:
[
"
*
*
/
*
.
mjs
"
"
*
*
/
*
.
jsm
"
"
*
*
/
?
(
*
.
)
worker
.
?
(
m
)
js
"
]
rules
:
{
"
no
-
unused
-
vars
"
:
[
"
error
"
{
args
:
"
none
"
vars
:
"
all
"
}
]
}
}
{
files
:
[
"
*
*
/
*
.
sys
.
mjs
"
]
rules
:
{
"
mozilla
/
use
-
static
-
import
"
:
"
error
"
}
}
{
excludedFiles
:
[
"
*
*
/
*
.
sys
.
mjs
"
]
files
:
[
"
*
*
/
*
.
mjs
"
]
rules
:
{
"
mozilla
/
reject
-
import
-
system
-
module
-
from
-
non
-
system
"
:
"
error
"
"
mozilla
/
reject
-
lazy
-
imports
-
into
-
globals
"
:
"
error
"
"
no
-
shadow
"
:
[
"
error
"
{
allow
:
[
"
event
"
]
builtinGlobals
:
true
}
]
}
}
{
files
:
[
"
*
*
/
*
.
mjs
"
]
parserOptions
:
{
sourceType
:
"
module
"
}
rules
:
{
"
mozilla
/
use
-
static
-
import
"
:
"
error
"
strict
:
"
error
"
}
}
{
files
:
[
"
*
*
/
*
.
jsm
"
"
*
*
/
*
.
jsm
.
js
"
]
rules
:
{
"
mozilla
/
mark
-
exported
-
symbols
-
as
-
used
"
:
"
error
"
}
}
{
env
:
{
browser
:
false
"
mozilla
/
privileged
"
:
false
"
mozilla
/
sjs
"
:
true
"
mozilla
/
specific
"
:
false
}
files
:
[
"
*
*
/
*
.
sjs
"
]
rules
:
{
"
mozilla
/
reject
-
importGlobalProperties
"
:
[
"
error
"
"
everything
"
]
}
}
{
env
:
{
browser
:
false
worker
:
true
}
files
:
[
"
*
*
/
?
(
*
.
)
worker
.
?
(
m
)
js
"
]
}
]
parserOptions
:
{
ecmaVersion
:
"
latest
"
}
plugins
:
[
"
fetch
-
options
"
"
html
"
"
json
"
"
no
-
unsanitized
"
]
rules
:
{
"
arrow
-
body
-
style
"
:
"
off
"
complexity
:
[
"
error
"
34
]
"
consistent
-
return
"
:
"
error
"
"
constructor
-
super
"
:
"
off
"
curly
:
[
"
error
"
"
all
"
]
"
dot
-
notation
"
:
"
error
"
"
fetch
-
options
/
no
-
fetch
-
credentials
"
:
"
off
"
"
getter
-
return
"
:
"
off
"
"
max
-
depth
"
:
"
off
"
"
max
-
nested
-
callbacks
"
:
[
"
error
"
10
]
"
mozilla
/
avoid
-
removeChild
"
:
"
error
"
"
mozilla
/
consistent
-
if
-
bracing
"
:
"
error
"
"
mozilla
/
import
-
browser
-
window
-
globals
"
:
"
error
"
"
mozilla
/
import
-
globals
"
:
"
error
"
"
mozilla
/
no
-
compare
-
against
-
boolean
-
literals
"
:
"
error
"
"
mozilla
/
no
-
cu
-
reportError
"
:
"
error
"
"
mozilla
/
no
-
define
-
cc
-
etc
"
:
"
error
"
"
mozilla
/
no
-
throw
-
cr
-
literal
"
:
"
error
"
"
mozilla
/
no
-
useless
-
parameters
"
:
"
error
"
"
mozilla
/
no
-
useless
-
removeEventListener
"
:
"
error
"
"
mozilla
/
prefer
-
boolean
-
length
-
check
"
:
"
error
"
"
mozilla
/
prefer
-
formatValues
"
:
"
error
"
"
mozilla
/
reject
-
addtask
-
only
"
:
"
error
"
"
mozilla
/
reject
-
chromeutils
-
import
-
params
"
:
"
error
"
"
mozilla
/
reject
-
importGlobalProperties
"
:
[
"
error
"
"
allownonwebidl
"
]
"
mozilla
/
reject
-
multiple
-
getters
-
calls
"
:
"
error
"
"
mozilla
/
reject
-
scriptableunicodeconverter
"
:
"
warn
"
"
mozilla
/
rejects
-
requires
-
await
"
:
"
error
"
"
mozilla
/
use
-
cc
-
etc
"
:
"
error
"
"
mozilla
/
use
-
chromeutils
-
definelazygetter
"
:
"
error
"
"
mozilla
/
use
-
chromeutils
-
generateqi
"
:
"
error
"
"
mozilla
/
use
-
chromeutils
-
import
"
:
"
error
"
"
mozilla
/
use
-
console
-
createInstance
"
:
"
error
"
"
mozilla
/
use
-
default
-
preference
-
values
"
:
"
error
"
"
mozilla
/
use
-
includes
-
instead
-
of
-
indexOf
"
:
"
error
"
"
mozilla
/
use
-
isInstance
"
:
"
error
"
"
mozilla
/
use
-
ownerGlobal
"
:
"
error
"
"
mozilla
/
use
-
returnValue
"
:
"
error
"
"
mozilla
/
use
-
services
"
:
"
error
"
"
mozilla
/
valid
-
lazy
"
:
"
error
"
"
mozilla
/
valid
-
services
"
:
"
error
"
"
no
-
array
-
constructor
"
:
"
error
"
"
no
-
caller
"
:
"
error
"
"
no
-
case
-
declarations
"
:
"
off
"
"
no
-
console
"
:
"
off
"
"
no
-
constant
-
binary
-
expression
"
:
"
error
"
"
no
-
constant
-
condition
"
:
"
off
"
"
no
-
dupe
-
keys
"
:
"
error
"
"
no
-
else
-
return
"
:
"
error
"
"
no
-
empty
"
:
[
"
error
"
{
allowEmptyCatch
:
true
}
]
"
no
-
eval
"
:
"
error
"
"
no
-
extra
-
bind
"
:
"
error
"
"
no
-
fallthrough
"
:
[
"
error
"
{
commentPattern
:
"
[
Ff
]
[
Aa
]
[
Ll
]
[
Ll
]
[
Ss
]
?
[
\
\
s
-
]
?
(
[
Tt
]
[
Hh
]
[
Rr
]
[
Oo
]
[
Uu
]
[
Gg
]
[
Hh
]
|
[
Tt
]
[
Hh
]
[
Rr
]
[
Uu
]
)
"
}
]
"
no
-
global
-
assign
"
:
"
error
"
"
no
-
implied
-
eval
"
:
"
error
"
"
no
-
inner
-
declarations
"
:
"
off
"
"
no
-
iterator
"
:
"
error
"
"
no
-
labels
"
:
"
error
"
"
no
-
lone
-
blocks
"
:
"
error
"
"
no
-
lonely
-
if
"
:
"
error
"
"
no
-
loss
-
of
-
precision
"
:
"
error
"
"
no
-
nested
-
ternary
"
:
"
error
"
"
no
-
new
-
object
"
:
"
error
"
"
no
-
new
-
wrappers
"
:
"
error
"
"
no
-
prototype
-
builtins
"
:
"
off
"
"
no
-
redeclare
"
:
[
"
error
"
{
builtinGlobals
:
false
}
]
"
no
-
restricted
-
globals
"
:
[
"
error
"
"
event
"
]
"
no
-
self
-
compare
"
:
"
error
"
"
no
-
sequences
"
:
"
error
"
"
no
-
shadow
-
restricted
-
names
"
:
"
error
"
"
no
-
throw
-
literal
"
:
"
error
"
"
no
-
unneeded
-
ternary
"
:
"
error
"
"
no
-
unsanitized
/
method
"
:
"
error
"
"
no
-
unsanitized
/
property
"
:
"
error
"
"
no
-
unused
-
vars
"
:
[
"
error
"
{
args
:
"
none
"
vars
:
"
local
"
}
]
"
no
-
useless
-
call
"
:
"
error
"
"
no
-
useless
-
concat
"
:
"
error
"
"
no
-
useless
-
escape
"
:
"
off
"
"
no
-
useless
-
return
"
:
"
error
"
"
no
-
with
"
:
"
error
"
"
object
-
shorthand
"
:
[
"
error
"
"
always
"
{
avoidQuotes
:
true
}
]
"
prefer
-
arrow
-
callback
"
:
"
off
"
"
require
-
atomic
-
updates
"
:
"
off
"
"
require
-
yield
"
:
"
off
"
}
settings
:
{
"
html
/
xml
-
extensions
"
:
[
"
.
xhtml
"
]
}
}
;
