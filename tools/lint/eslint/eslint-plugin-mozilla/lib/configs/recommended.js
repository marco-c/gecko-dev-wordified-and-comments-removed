"
use
strict
"
;
module
.
exports
=
{
"
env
"
:
{
"
browser
"
:
true
"
es6
"
:
true
"
mozilla
/
privileged
"
:
true
}
"
extends
"
:
[
"
eslint
:
recommended
"
]
"
globals
"
:
{
"
Cc
"
:
false
"
ChromeUtils
"
:
false
"
Ci
"
:
false
"
Components
"
:
false
"
Cr
"
:
false
"
Cu
"
:
false
"
Debugger
"
:
false
"
InstallTrigger
"
:
false
"
InternalError
"
:
true
"
Intl
"
:
false
"
SharedArrayBuffer
"
:
false
"
StopIteration
"
:
false
"
dump
"
:
true
"
location
"
:
true
"
openDialog
"
:
false
"
saveStack
"
:
false
"
sizeToContent
"
:
false
"
uneval
"
:
false
}
"
overrides
"
:
[
{
"
files
"
:
"
*
*
/
*
.
xml
"
"
rules
"
:
{
"
mozilla
/
use
-
services
"
:
"
off
"
}
}
{
"
env
"
:
{
"
browser
"
:
false
"
mozilla
/
jsm
"
:
true
}
"
files
"
:
"
*
*
/
*
.
jsm
"
"
rules
"
:
{
"
mozilla
/
mark
-
exported
-
symbols
-
as
-
used
"
:
"
error
"
"
no
-
unused
-
vars
"
:
[
"
error
"
{
"
args
"
:
"
none
"
"
vars
"
:
"
all
"
}
]
}
}
]
"
parserOptions
"
:
{
"
ecmaVersion
"
:
9
}
"
plugins
"
:
[
"
mozilla
"
"
no
-
unsanitized
"
]
"
rules
"
:
{
"
arrow
-
spacing
"
:
"
error
"
"
block
-
spacing
"
:
"
error
"
"
brace
-
style
"
:
[
"
error
"
"
1tbs
"
{
"
allowSingleLine
"
:
true
}
]
"
comma
-
dangle
"
:
[
"
error
"
"
always
-
multiline
"
]
"
comma
-
spacing
"
:
[
"
error
"
{
"
after
"
:
true
"
before
"
:
false
}
]
"
comma
-
style
"
:
"
error
"
"
complexity
"
:
[
"
error
"
34
]
"
computed
-
property
-
spacing
"
:
[
"
error
"
"
never
"
]
"
consistent
-
return
"
:
"
error
"
"
constructor
-
super
"
:
"
off
"
"
dot
-
notation
"
:
"
error
"
"
eol
-
last
"
:
"
error
"
"
func
-
call
-
spacing
"
:
"
error
"
"
generator
-
star
-
spacing
"
:
[
"
error
"
{
"
after
"
:
true
"
before
"
:
false
}
]
"
getter
-
return
"
:
"
off
"
"
key
-
spacing
"
:
[
"
error
"
{
"
afterColon
"
:
true
"
beforeColon
"
:
false
"
mode
"
:
"
minimum
"
}
]
"
keyword
-
spacing
"
:
"
error
"
"
linebreak
-
style
"
:
[
"
error
"
"
unix
"
]
"
max
-
depth
"
:
"
off
"
"
max
-
nested
-
callbacks
"
:
[
"
error
"
10
]
"
mozilla
/
avoid
-
removeChild
"
:
"
error
"
"
mozilla
/
import
-
browser
-
window
-
globals
"
:
"
error
"
"
mozilla
/
import
-
globals
"
:
"
error
"
"
mozilla
/
no
-
compare
-
against
-
boolean
-
literals
"
:
"
error
"
"
mozilla
/
no
-
define
-
cc
-
etc
"
:
"
error
"
"
mozilla
/
no
-
import
-
into
-
var
-
and
-
global
"
:
"
error
"
"
mozilla
/
no
-
useless
-
parameters
"
:
"
error
"
"
mozilla
/
no
-
useless
-
removeEventListener
"
:
"
error
"
"
mozilla
/
reject
-
importGlobalProperties
"
:
[
"
error
"
"
allownonwebidl
"
]
"
mozilla
/
rejects
-
requires
-
await
"
:
"
error
"
"
mozilla
/
use
-
cc
-
etc
"
:
"
error
"
"
mozilla
/
use
-
chromeutils
-
generateqi
"
:
"
error
"
"
mozilla
/
use
-
chromeutils
-
import
"
:
"
error
"
"
mozilla
/
use
-
default
-
preference
-
values
"
:
"
error
"
"
mozilla
/
use
-
includes
-
instead
-
of
-
indexOf
"
:
"
error
"
"
mozilla
/
use
-
ownerGlobal
"
:
"
error
"
"
mozilla
/
use
-
services
"
:
"
error
"
"
no
-
array
-
constructor
"
:
"
error
"
"
no
-
caller
"
:
"
error
"
"
no
-
case
-
declarations
"
:
"
off
"
"
no
-
console
"
:
"
off
"
"
no
-
constant
-
condition
"
:
"
off
"
"
no
-
dupe
-
keys
"
:
"
error
"
"
no
-
else
-
return
"
:
"
error
"
"
no
-
empty
"
:
[
"
error
"
{
"
allowEmptyCatch
"
:
true
}
]
"
no
-
eval
"
:
"
error
"
"
no
-
extra
-
bind
"
:
"
error
"
"
no
-
fallthrough
"
:
"
off
"
"
no
-
global
-
assign
"
:
"
error
"
"
no
-
implied
-
eval
"
:
"
error
"
"
no
-
inner
-
declarations
"
:
"
off
"
"
no
-
iterator
"
:
"
error
"
"
no
-
labels
"
:
"
error
"
"
no
-
lone
-
blocks
"
:
"
error
"
"
no
-
lonely
-
if
"
:
"
error
"
"
no
-
multi
-
spaces
"
:
[
"
error
"
{
exceptions
:
{
"
ArrayExpression
"
:
true
"
AssignmentExpression
"
:
true
"
ObjectExpression
"
:
true
"
VariableDeclarator
"
:
true
}
}
]
"
no
-
nested
-
ternary
"
:
"
error
"
"
no
-
new
-
object
"
:
"
error
"
"
no
-
new
-
wrappers
"
:
"
error
"
"
no
-
restricted
-
globals
"
:
[
"
error
"
"
event
"
]
"
no
-
return
-
await
"
:
"
error
"
"
no
-
self
-
compare
"
:
"
error
"
"
no
-
sequences
"
:
"
error
"
"
no
-
shadow
-
restricted
-
names
"
:
"
error
"
"
no
-
tabs
"
:
"
error
"
"
no
-
trailing
-
spaces
"
:
"
error
"
"
no
-
unneeded
-
ternary
"
:
"
error
"
"
no
-
unsanitized
/
method
"
:
"
error
"
"
no
-
unsanitized
/
property
"
:
"
error
"
"
no
-
unused
-
vars
"
:
[
"
error
"
{
"
args
"
:
"
none
"
"
vars
"
:
"
local
"
}
]
"
no
-
useless
-
call
"
:
"
error
"
"
no
-
useless
-
concat
"
:
"
error
"
"
no
-
useless
-
escape
"
:
"
off
"
"
no
-
useless
-
return
"
:
"
error
"
"
no
-
whitespace
-
before
-
property
"
:
"
error
"
"
no
-
with
"
:
"
error
"
"
object
-
shorthand
"
:
[
"
error
"
"
always
"
{
"
avoidQuotes
"
:
true
}
]
"
quotes
"
:
[
"
error
"
"
double
"
{
"
allowTemplateLiterals
"
:
true
"
avoidEscape
"
:
true
}
]
"
require
-
yield
"
:
"
off
"
"
rest
-
spread
-
spacing
"
:
"
error
"
"
semi
"
:
[
"
error
"
"
always
"
]
"
space
-
before
-
blocks
"
:
"
error
"
"
space
-
before
-
function
-
paren
"
:
[
"
error
"
{
"
anonymous
"
:
"
never
"
"
asyncArrow
"
:
"
always
"
"
named
"
:
"
never
"
}
]
"
space
-
infix
-
ops
"
:
[
"
error
"
{
"
int32Hint
"
:
true
}
]
"
space
-
unary
-
ops
"
:
[
"
error
"
{
"
nonwords
"
:
false
"
overrides
"
:
{
"
typeof
"
:
false
}
"
words
"
:
true
}
]
"
spaced
-
comment
"
:
[
"
error
"
"
always
"
{
"
markers
"
:
[
"
#
"
]
}
]
}
}
;
