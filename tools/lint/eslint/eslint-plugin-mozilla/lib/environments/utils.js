"
use
strict
"
;
var
path
=
require
(
"
path
"
)
;
var
helpers
=
require
(
"
.
.
/
helpers
"
)
;
var
globals
=
require
(
"
.
.
/
globals
"
)
;
function
getGlobalsForScripts
(
environmentName
files
extraDefinitions
)
{
let
fileGlobals
=
extraDefinitions
;
const
root
=
helpers
.
rootDir
;
for
(
const
file
of
files
)
{
const
fileName
=
path
.
join
(
root
file
)
;
try
{
fileGlobals
=
fileGlobals
.
concat
(
globals
.
getGlobalsForFile
(
fileName
)
)
;
}
catch
(
e
)
{
console
.
error
(
Could
not
load
globals
from
file
{
fileName
}
:
{
e
}
)
;
console
.
error
(
You
may
need
to
update
the
mappings
for
the
{
environmentName
}
environment
)
;
throw
new
Error
(
Could
not
load
globals
from
file
{
fileName
}
:
{
e
}
)
;
}
}
var
globalObjects
=
{
}
;
for
(
let
global
of
fileGlobals
)
{
globalObjects
[
global
.
name
]
=
global
.
writable
;
}
return
globalObjects
;
}
module
.
exports
=
{
getScriptGlobals
(
environmentName
files
extraDefinitions
=
[
]
extraEnv
=
{
}
)
{
if
(
helpers
.
isMozillaCentralBased
(
)
)
{
return
{
globals
:
getGlobalsForScripts
(
environmentName
files
extraDefinitions
)
.
.
.
extraEnv
}
;
}
return
helpers
.
getSavedEnvironmentItems
(
environmentName
)
;
}
}
;
