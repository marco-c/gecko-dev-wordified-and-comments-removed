"
use
strict
"
;
module
.
exports
=
{
meta
:
{
messages
:
{
consistentIfBracing
:
"
Bracing
of
if
.
.
else
bodies
should
be
consistent
.
"
}
}
create
(
context
)
{
return
{
IfStatement
(
node
)
{
if
(
node
.
parent
.
type
!
=
=
"
IfStatement
"
)
{
let
types
=
new
Set
(
)
;
for
(
let
currentNode
=
node
;
currentNode
;
currentNode
=
currentNode
.
alternate
)
{
let
type
=
currentNode
.
consequent
.
type
;
types
.
add
(
type
=
=
"
BlockStatement
"
?
"
Block
"
:
"
NotBlock
"
)
;
if
(
currentNode
.
alternate
&
&
currentNode
.
alternate
.
type
!
=
=
"
IfStatement
"
)
{
type
=
currentNode
.
alternate
.
type
;
types
.
add
(
type
=
=
"
BlockStatement
"
?
"
Block
"
:
"
NotBlock
"
)
;
break
;
}
}
if
(
types
.
size
>
1
)
{
context
.
report
(
{
node
messageId
:
"
consistentIfBracing
"
}
)
;
}
}
}
}
;
}
}
;
