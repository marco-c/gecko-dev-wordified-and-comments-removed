"
use
strict
"
;
module
.
exports
=
{
meta
:
{
docs
:
{
url
:
"
https
:
/
/
firefox
-
source
-
docs
.
mozilla
.
org
/
code
-
quality
/
lint
/
linters
/
eslint
-
plugin
-
mozilla
/
use
-
returnValue
.
html
"
}
messages
:
{
useReturnValue
:
"
{
Array
/
String
}
.
{
{
property
}
}
doesn
'
t
modify
the
instance
in
-
place
"
}
schema
:
[
]
type
:
"
problem
"
}
create
(
context
)
{
return
{
ExpressionStatement
(
node
)
{
if
(
node
.
expression
?
.
type
!
=
"
CallExpression
"
|
|
node
.
expression
.
callee
?
.
type
!
=
"
MemberExpression
"
|
|
node
.
expression
.
callee
.
property
?
.
type
!
=
"
Identifier
"
|
|
!
[
"
concat
"
"
join
"
"
slice
"
]
.
includes
(
node
.
expression
.
callee
.
property
?
.
name
)
)
{
return
;
}
context
.
report
(
{
node
messageId
:
"
useReturnValue
"
data
:
{
property
:
node
.
expression
.
callee
.
property
.
name
}
}
)
;
}
}
;
}
}
;
