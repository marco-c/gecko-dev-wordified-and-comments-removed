"
use
strict
"
;
function
isCuReportError
(
node
)
{
return
(
node
.
type
=
=
"
MemberExpression
"
&
&
node
.
object
.
type
=
=
"
Identifier
"
&
&
node
.
object
.
name
=
=
"
Cu
"
&
&
node
.
property
.
type
=
=
"
Identifier
"
&
&
node
.
property
.
name
=
=
"
reportError
"
)
;
}
module
.
exports
=
{
meta
:
{
docs
:
{
url
:
"
https
:
/
/
firefox
-
source
-
docs
.
mozilla
.
org
/
code
-
quality
/
lint
/
linters
/
eslint
-
plugin
-
mozilla
/
no
-
cu
-
reportError
.
html
"
}
fixable
:
"
code
"
messages
:
{
useConsoleError
:
"
Please
use
console
.
error
instead
of
Cu
.
reportError
"
}
type
:
"
suggestion
"
}
create
(
context
)
{
return
{
CallExpression
(
node
)
{
let
checkNode
;
if
(
node
.
arguments
.
length
>
=
1
&
&
node
.
arguments
[
0
]
.
type
=
=
"
MemberExpression
"
)
{
checkNode
=
node
.
arguments
[
0
]
;
}
else
{
checkNode
=
node
.
callee
;
}
if
(
!
isCuReportError
(
checkNode
)
)
{
return
;
}
if
(
checkNode
=
=
node
.
callee
&
&
node
.
arguments
.
length
>
1
)
{
return
;
}
context
.
report
(
{
node
fix
:
fixer
=
>
{
return
[
fixer
.
replaceText
(
checkNode
.
object
"
console
"
)
fixer
.
replaceText
(
checkNode
.
property
"
error
"
)
]
;
}
messageId
:
"
useConsoleError
"
}
)
;
}
}
;
}
}
;
