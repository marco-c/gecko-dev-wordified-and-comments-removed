"
use
strict
"
;
var
fs
=
require
(
"
fs
"
)
;
var
helpers
=
require
(
"
.
.
/
helpers
"
)
;
var
globals
=
require
(
"
.
.
/
globals
"
)
;
function
importHead
(
context
path
)
{
try
{
let
stats
=
fs
.
statSync
(
path
)
;
if
(
!
stats
.
isFile
(
)
)
{
return
;
}
}
catch
(
e
)
{
return
;
}
let
newGlobals
=
globals
.
getGlobalsForFile
(
path
)
;
helpers
.
addGlobals
(
newGlobals
context
.
getScope
(
)
)
;
}
module
.
exports
=
{
meta
:
{
docs
:
{
url
:
"
https
:
/
/
firefox
-
source
-
docs
.
mozilla
.
org
/
code
-
quality
/
lint
/
linters
/
eslint
-
plugin
-
mozilla
/
rules
/
import
-
headjs
-
globals
.
html
"
}
schema
:
[
]
type
:
"
problem
"
}
create
(
context
)
{
return
{
Program
(
node
)
{
let
heads
=
helpers
.
getTestHeadFiles
(
context
)
;
for
(
let
head
of
heads
)
{
importHead
(
context
head
node
)
;
}
}
}
;
}
}
;
