"
use
strict
"
;
function
isIdentifier
(
node
id
)
{
return
node
.
type
=
=
=
"
Identifier
"
&
&
node
.
name
=
=
=
id
;
}
module
.
exports
=
{
meta
:
{
docs
:
{
url
:
"
https
:
/
/
firefox
-
source
-
docs
.
mozilla
.
org
/
code
-
quality
/
lint
/
linters
/
eslint
-
plugin
-
mozilla
/
lazy
-
getter
-
object
-
name
.
html
"
}
schema
:
[
]
type
:
"
problem
"
}
create
(
context
)
{
return
{
CallExpression
(
node
)
{
let
{
callee
}
=
node
;
if
(
callee
.
type
=
=
=
"
MemberExpression
"
&
&
isIdentifier
(
callee
.
object
"
ChromeUtils
"
)
&
&
isIdentifier
(
callee
.
property
"
defineESModuleGetters
"
)
&
&
node
.
arguments
.
length
>
=
1
&
&
!
isIdentifier
(
node
.
arguments
[
0
]
"
lazy
"
)
)
{
context
.
report
(
{
node
message
:
"
The
variable
name
of
the
object
passed
to
ChromeUtils
.
defineESModuleGetters
must
be
lazy
"
}
)
;
}
}
}
;
}
}
;
