"
use
strict
"
;
module
.
exports
=
function
(
context
)
{
return
{
CallExpression
(
node
)
{
if
(
node
.
callee
.
type
=
=
"
MemberExpression
"
&
&
node
.
callee
.
property
.
name
=
=
"
then
"
&
&
node
.
arguments
.
length
=
=
2
)
{
let
sourceCode
=
context
.
getSourceCode
(
)
;
let
firstArg
=
sourceCode
.
getText
(
node
.
arguments
[
0
]
)
;
let
secondArg
=
sourceCode
.
getText
(
node
.
arguments
[
1
]
)
;
if
(
firstArg
=
=
secondArg
|
|
firstArg
.
replace
(
/
\
s
+
/
g
"
"
)
=
=
secondArg
.
replace
(
/
\
s
+
/
g
"
"
)
)
{
context
.
report
(
{
node
message
:
"
Use
.
finally
instead
of
passing
2
identical
arguments
to
.
then
"
fix
(
fixer
)
{
let
endNode
=
node
.
arguments
[
1
]
;
let
comments
=
sourceCode
.
getCommentsBefore
(
endNode
)
;
if
(
comments
.
length
)
{
endNode
=
comments
[
0
]
;
}
return
fixer
.
replaceTextRange
(
[
node
.
callee
.
property
.
start
endNode
.
start
]
"
finally
(
"
)
;
}
}
)
;
}
}
}
}
;
}
;
