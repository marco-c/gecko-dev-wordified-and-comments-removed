"
use
strict
"
;
module
.
exports
=
{
meta
:
{
fixable
:
"
code
"
messages
:
{
bareCR
:
"
Do
not
throw
bare
Cr
.
ERRORs
use
Components
.
Exception
instead
"
bareComponentsResults
:
"
Do
not
throw
bare
Components
.
results
.
ERRORs
use
Components
.
Exception
instead
"
}
}
create
(
context
)
{
return
{
ThrowStatement
(
node
)
{
if
(
node
.
argument
.
type
=
=
=
"
MemberExpression
"
)
{
function
fix
(
fixer
)
{
const
sourceCode
=
context
.
getSourceCode
(
)
;
const
source
=
sourceCode
.
getText
(
node
.
argument
)
;
return
fixer
.
replaceText
(
node
.
argument
Components
.
Exception
(
"
"
{
source
}
)
)
;
}
const
obj
=
node
.
argument
.
object
;
if
(
obj
.
type
=
=
=
"
Identifier
"
&
&
obj
.
name
=
=
=
"
Cr
"
)
{
context
.
report
(
{
node
messageId
:
"
bareCR
"
fix
}
)
;
}
else
if
(
obj
.
type
=
=
=
"
MemberExpression
"
&
&
obj
.
object
.
type
=
=
=
"
Identifier
"
&
&
obj
.
object
.
name
=
=
=
"
Components
"
&
&
obj
.
property
.
type
=
=
=
"
Identifier
"
&
&
obj
.
property
.
name
=
=
=
"
results
"
)
{
context
.
report
(
{
node
messageId
:
"
bareComponentsResults
"
fix
}
)
;
}
}
}
}
;
}
}
;
