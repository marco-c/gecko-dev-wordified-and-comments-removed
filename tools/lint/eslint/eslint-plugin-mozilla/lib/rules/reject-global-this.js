"
use
strict
"
;
function
isGlobalThis
(
context
node
)
{
for
(
let
ancestor
of
context
.
getAncestors
(
)
)
{
if
(
ancestor
.
type
=
=
"
FunctionDeclaration
"
|
|
ancestor
.
type
=
=
"
FunctionExpression
"
|
|
ancestor
.
type
=
=
"
ClassProperty
"
|
|
ancestor
.
type
=
=
"
ClassPrivateProperty
"
|
|
ancestor
.
type
=
=
"
PropertyDefinition
"
|
|
ancestor
.
type
=
=
"
StaticBlock
"
)
{
return
false
;
}
}
return
true
;
}
module
.
exports
=
{
meta
:
{
docs
:
{
url
:
"
https
:
/
/
firefox
-
source
-
docs
.
mozilla
.
org
/
code
-
quality
/
lint
/
linters
/
eslint
-
plugin
-
mozilla
/
reject
-
global
-
this
.
html
"
}
type
:
"
problem
"
}
create
(
context
)
{
return
{
ThisExpression
(
node
)
{
if
(
!
isGlobalThis
(
context
node
)
)
{
return
;
}
context
.
report
(
{
node
message
:
JSM
should
not
use
the
global
this
}
)
;
}
}
;
}
}
;
