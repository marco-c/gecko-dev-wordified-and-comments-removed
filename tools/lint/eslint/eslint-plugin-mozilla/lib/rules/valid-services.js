"
use
strict
"
;
const
helpers
=
require
(
"
.
.
/
helpers
"
)
;
module
.
exports
=
{
meta
:
{
docs
:
{
url
:
"
https
:
/
/
firefox
-
source
-
docs
.
mozilla
.
org
/
code
-
quality
/
lint
/
linters
/
eslint
-
plugin
-
mozilla
/
use
-
services
.
html
"
}
type
:
"
problem
"
}
create
(
context
)
{
let
servicesInterfaceMap
=
helpers
.
servicesData
;
let
serviceAliases
=
new
Set
(
[
.
.
.
Object
.
values
(
servicesInterfaceMap
)
"
androidBridge
"
"
cpmm
"
"
crashmanager
"
"
mm
"
"
ppmm
"
"
xulStore
"
]
)
;
return
{
MemberExpression
(
node
)
{
if
(
node
.
computed
|
|
node
.
object
.
type
!
=
=
"
Identifier
"
)
{
return
;
}
let
alias
;
if
(
node
.
object
.
name
=
=
"
Services
"
)
{
alias
=
node
.
property
.
name
;
}
else
if
(
node
.
property
.
name
=
=
"
Services
"
&
&
node
.
parent
.
type
=
=
"
MemberExpression
"
)
{
alias
=
node
.
parent
.
property
.
name
;
}
else
{
return
;
}
if
(
!
serviceAliases
.
has
(
alias
)
)
{
context
.
report
(
node
Unknown
Services
member
property
{
alias
}
)
;
}
}
}
;
}
}
;
