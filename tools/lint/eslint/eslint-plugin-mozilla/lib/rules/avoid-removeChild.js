"
use
strict
"
;
var
helpers
=
require
(
"
.
.
/
helpers
"
)
;
module
.
exports
=
function
(
context
)
{
return
{
"
CallExpression
"
:
function
(
node
)
{
let
callee
=
node
.
callee
;
if
(
callee
.
type
!
=
=
"
MemberExpression
"
|
|
callee
.
property
.
type
!
=
=
"
Identifier
"
|
|
callee
.
property
.
name
!
=
"
removeChild
"
|
|
callee
.
object
.
type
!
=
"
MemberExpression
"
|
|
callee
.
object
.
property
.
type
!
=
"
Identifier
"
|
|
callee
.
object
.
property
.
name
!
=
"
parentNode
"
|
|
helpers
.
getASTSource
(
callee
.
object
.
object
)
!
=
helpers
.
getASTSource
(
node
.
arguments
[
0
]
)
|
|
node
.
arguments
.
length
!
=
1
)
{
return
;
}
context
.
report
(
node
"
use
element
.
remove
(
)
instead
of
"
+
"
element
.
parentNode
.
removeChild
(
element
)
"
)
;
}
}
;
}
;
