"
use
strict
"
;
var
fs
=
require
(
"
fs
"
)
;
var
path
=
require
(
"
path
"
)
;
var
helpers
=
require
(
"
.
.
/
lib
/
helpers
"
)
;
const
eslintDir
=
path
.
join
(
helpers
.
rootDir
"
tools
"
"
lint
"
"
eslint
"
)
;
const
globalsFile
=
path
.
join
(
eslintDir
"
eslint
-
plugin
-
mozilla
"
"
lib
"
"
environments
"
"
saved
-
globals
.
json
"
)
;
const
rulesFile
=
path
.
join
(
eslintDir
"
eslint
-
plugin
-
mozilla
"
"
lib
"
"
rules
"
"
saved
-
rules
-
data
.
json
"
)
;
console
.
log
(
"
Copying
modules
.
json
"
)
;
const
modulesFile
=
path
.
join
(
eslintDir
"
modules
.
json
"
)
;
const
shipModulesFile
=
path
.
join
(
eslintDir
"
eslint
-
plugin
-
mozilla
"
"
lib
"
"
modules
.
json
"
)
;
fs
.
writeFileSync
(
shipModulesFile
fs
.
readFileSync
(
modulesFile
)
)
;
console
.
log
(
"
Generating
globals
file
"
)
;
let
environmentGlobals
=
require
(
"
.
.
/
lib
/
index
.
js
"
)
.
environments
;
return
fs
.
writeFile
(
globalsFile
JSON
.
stringify
(
{
environments
:
environmentGlobals
}
)
err
=
>
{
if
(
err
)
{
console
.
error
(
err
)
;
process
.
exit
(
1
)
;
}
console
.
log
(
"
Globals
file
generation
complete
"
)
;
console
.
log
(
"
Creating
rules
data
file
"
)
;
let
rulesData
=
{
"
use
-
services
.
js
"
:
require
(
"
.
.
/
lib
/
rules
/
use
-
services
.
js
"
)
(
)
.
getServicesInterfaceMap
(
)
}
;
return
fs
.
writeFile
(
rulesFile
JSON
.
stringify
(
{
rulesData
}
)
err1
=
>
{
if
(
err1
)
{
console
.
error
(
err1
)
;
process
.
exit
(
1
)
;
}
console
.
log
(
"
Globals
file
generation
complete
"
)
;
}
)
;
}
)
;
