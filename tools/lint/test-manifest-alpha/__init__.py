import
os
from
manifestparser
import
TestManifest
from
mozlint
import
result
from
mozlint
.
pathutils
import
expand_exclusions
FILENAME_ALLOWLIST
=
[
"
mochitest
"
"
browser
"
"
chrome
"
"
a11y
"
]
def
lint
(
paths
config
fix
=
None
*
*
lintargs
)
:
    
results
=
[
]
    
file_names
=
list
(
expand_exclusions
(
paths
config
lintargs
[
"
root
"
]
)
)
    
for
file_name
in
file_names
:
        
name
=
os
.
path
.
basename
(
file_name
)
        
if
not
any
(
name
.
startswith
(
allowed
)
for
allowed
in
FILENAME_ALLOWLIST
)
:
            
continue
        
manifest
=
TestManifest
(
manifests
=
(
file_name
)
strict
=
False
)
        
test_names
=
[
test
[
"
name
"
]
for
test
in
manifest
.
tests
]
        
sorted_test_names
=
sorted
(
test_names
)
        
if
test_names
!
=
sorted_test_names
:
            
res
=
{
                
"
path
"
:
file_name
                
"
lineno
"
:
0
                
"
column
"
:
0
                
"
message
"
:
(
                    
"
The
mochitest
test
manifest
is
not
in
alphabetical
order
.
"
                    
"
Expected
ordering
:
\
n
\
n
%
s
\
n
\
n
"
%
"
\
n
"
.
join
(
sorted_test_names
)
                
)
                
"
level
"
:
"
warning
"
            
}
            
results
.
append
(
result
.
from_config
(
config
*
*
res
)
)
    
return
{
"
results
"
:
results
"
fixed
"
:
0
}
