#
ifndef
MOZ_PROFILE_BUFFER_H
#
define
MOZ_PROFILE_BUFFER_H
#
include
"
platform
.
h
"
#
include
"
ProfileBufferEntry
.
h
"
#
include
"
ProfilerMarker
.
h
"
#
include
"
ProfileJSONWriter
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
RefCounted
.
h
"
class
ProfileBuffer
final
{
public
:
explicit
ProfileBuffer
(
int
aEntrySize
)
;
~
ProfileBuffer
(
)
;
struct
LastSample
{
LastSample
(
)
:
mGeneration
(
0
)
mPos
(
-
1
)
{
}
uint32_t
mGeneration
;
int
mPos
;
}
;
void
addTag
(
const
ProfileBufferEntry
&
aTag
)
;
void
addTagThreadId
(
int
aThreadId
LastSample
*
aLS
=
nullptr
)
;
void
StreamSamplesToJSON
(
SpliceableJSONWriter
&
aWriter
int
aThreadId
double
aSinceTime
JSContext
*
cx
UniqueStacks
&
aUniqueStacks
)
;
void
StreamMarkersToJSON
(
SpliceableJSONWriter
&
aWriter
int
aThreadId
const
mozilla
:
:
TimeStamp
&
aProcessStartTime
double
aSinceTime
UniqueStacks
&
aUniqueStacks
)
;
bool
DuplicateLastSample
(
int
aThreadId
const
mozilla
:
:
TimeStamp
&
aProcessStartTime
LastSample
&
aLS
)
;
void
addStoredMarker
(
ProfilerMarker
*
aStoredMarker
)
;
void
deleteExpiredStoredMarkers
(
)
;
void
reset
(
)
;
size_t
SizeOfIncludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
const
;
protected
:
char
*
processDynamicTag
(
int
readPos
int
*
tagsConsumed
char
*
tagBuff
)
;
int
FindLastSampleOfThread
(
int
aThreadId
const
LastSample
&
aLS
)
;
public
:
mozilla
:
:
UniquePtr
<
ProfileBufferEntry
[
]
>
mEntries
;
int
mWritePos
;
int
mReadPos
;
int
mEntrySize
;
uint32_t
mGeneration
;
ProfilerMarkerLinkedList
mStoredMarkers
;
}
;
#
endif
