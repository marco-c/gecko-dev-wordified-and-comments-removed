#
include
"
ETWTools
.
h
"
#
include
<
atomic
>
namespace
ETW
{
std
:
:
atomic
<
ULONGLONG
>
gETWCollectionMask
=
0
;
TRACELOGGING_DEFINE_PROVIDER
(
kFirefoxTraceLoggingProvider
"
Mozilla
.
FirefoxTraceLogger
"
(
0xc923f508
0x96e4
0x5515
0xe3
0x3c
0x75
0x39
0xd1
0xb1
0x05
0x04
)
)
;
static
void
NTAPI
ETWEnableCallback
(
LPCGUID
aSourceId
ULONG
aIsEnabled
UCHAR
aLevel
ULONGLONG
aMatchAnyKeyword
ULONGLONG
aMatchAllKeyword
PEVENT_FILTER_DESCRIPTOR
aFilterData
PVOID
aCallbackContext
)
{
if
(
aIsEnabled
)
{
mozilla
:
:
profiler
:
:
detail
:
:
RacyFeatures
:
:
SetETWCollectionActive
(
)
;
}
else
{
mozilla
:
:
profiler
:
:
detail
:
:
RacyFeatures
:
:
SetETWCollectionInactive
(
)
;
}
gETWCollectionMask
=
aMatchAnyKeyword
;
}
void
Init
(
)
{
TraceLoggingRegisterEx
(
kFirefoxTraceLoggingProvider
ETWEnableCallback
nullptr
)
;
}
void
Shutdown
(
)
{
TraceLoggingUnregister
(
kFirefoxTraceLoggingProvider
)
;
}
}
