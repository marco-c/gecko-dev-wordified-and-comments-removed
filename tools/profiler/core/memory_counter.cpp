#
include
"
memory_counter
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozmemory
.
h
"
#
include
"
GeckoProfiler
.
h
"
namespace
mozilla
:
:
profiler
{
class
MemoryCounter
:
public
BaseProfilerCount
{
public
:
MemoryCounter
(
)
:
BaseProfilerCount
(
"
malloc
"
"
Memory
"
"
Amount
of
allocated
memory
"
)
{
}
;
virtual
~
MemoryCounter
(
)
{
}
CountSample
Sample
(
)
override
{
CountSample
sample
=
{
.
count
=
0
.
number
=
0
.
isSampleNew
=
true
}
;
jemalloc_stats_lite_t
mallocStats
;
jemalloc_stats_lite
(
&
mallocStats
)
;
sample
.
count
+
=
int64_t
(
mallocStats
.
allocated_bytes
)
;
sample
.
number
+
=
mallocStats
.
num_operations
;
js
:
:
gc
:
:
ProfilerMemoryCounts
jsStats
=
js
:
:
gc
:
:
GetProfilerMemoryCounts
(
)
;
sample
.
count
+
=
int64_t
(
jsStats
.
bytes
)
;
sample
.
number
+
=
jsStats
.
operations
;
return
sample
;
}
}
;
UniquePtr
<
BaseProfilerCount
>
create_memory_counter
(
)
{
return
MakeUnique
<
MemoryCounter
>
(
)
;
}
}
