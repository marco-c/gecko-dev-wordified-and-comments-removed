#
include
"
mozilla
/
ProfilerThreadRegistry
.
h
"
namespace
mozilla
:
:
profiler
{
MOZ_RUNINIT
ThreadRegistry
:
:
RegistryContainer
ThreadRegistry
:
:
sRegistryContainer
;
MOZ_RUNINIT
ThreadRegistry
:
:
RegistryMutex
ThreadRegistry
:
:
sRegistryMutex
;
#
if
!
defined
(
MOZ_GECKO_PROFILER
)
void
ThreadRegistry
:
:
Register
(
ThreadRegistration
:
:
OnThreadRef
aOnThreadRef
)
{
LockedRegistry
lock
;
MOZ_RELEASE_ASSERT
(
sRegistryContainer
.
append
(
OffThreadRef
{
aOnThreadRef
}
)
)
;
}
void
ThreadRegistry
:
:
Unregister
(
ThreadRegistration
:
:
OnThreadRef
aOnThreadRef
)
{
LockedRegistry
lock
;
for
(
OffThreadRef
&
thread
:
sRegistryContainer
)
{
if
(
thread
.
IsPointingAt
(
*
aOnThreadRef
.
mThreadRegistration
)
)
{
sRegistryContainer
.
erase
(
&
thread
)
;
break
;
}
}
}
#
endif
}
