#
include
"
RegisteredThread
.
h
"
RegisteredThread
:
:
RegisteredThread
(
ThreadInfo
*
aInfo
nsIEventTarget
*
aThread
void
*
aStackTop
)
:
mRacyRegisteredThread
(
aInfo
-
>
ThreadId
(
)
)
mPlatformData
(
AllocPlatformData
(
aInfo
-
>
ThreadId
(
)
)
)
mStackTop
(
aStackTop
)
mThreadInfo
(
aInfo
)
mThread
(
aThread
)
mContext
(
nullptr
)
mJSSampling
(
INACTIVE
)
{
MOZ_COUNT_CTOR
(
RegisteredThread
)
;
#
if
defined
(
GP_OS_darwin
)
pthread_t
self
=
pthread_self
(
)
;
mStackTop
=
pthread_get_stackaddr_np
(
self
)
;
#
endif
}
RegisteredThread
:
:
~
RegisteredThread
(
)
{
MOZ_COUNT_DTOR
(
RegisteredThread
)
;
}
size_t
RegisteredThread
:
:
SizeOfIncludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
const
{
size_t
n
=
aMallocSizeOf
(
this
)
;
return
n
;
}
