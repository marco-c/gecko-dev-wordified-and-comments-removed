#
include
"
RegisteredThread
.
h
"
#
include
"
js
/
AllocationRecording
.
h
"
#
include
"
js
/
ProfilingStack
.
h
"
#
include
"
js
/
TraceLoggerAPI
.
h
"
RacyRegisteredThread
:
:
RacyRegisteredThread
(
int
aThreadId
)
:
mProfilingStackOwner
(
mozilla
:
:
MakeNotNull
<
RefPtr
<
mozilla
:
:
ProfilingStackOwner
>
>
(
)
)
mThreadId
(
aThreadId
)
mSleep
(
AWAKE
)
mIsBeingProfiled
(
false
)
{
MOZ_COUNT_CTOR
(
RacyRegisteredThread
)
;
}
RegisteredThread
:
:
RegisteredThread
(
ThreadInfo
*
aInfo
nsIThread
*
aThread
void
*
aStackTop
)
:
mRacyRegisteredThread
(
aInfo
-
>
ThreadId
(
)
)
mPlatformData
(
AllocPlatformData
(
aInfo
-
>
ThreadId
(
)
)
)
mStackTop
(
aStackTop
)
mThreadInfo
(
aInfo
)
mThread
(
aThread
)
mContext
(
nullptr
)
mJSSampling
(
INACTIVE
)
mJSFlags
(
0
)
{
MOZ_COUNT_CTOR
(
RegisteredThread
)
;
#
if
defined
(
GP_OS_darwin
)
pthread_t
self
=
pthread_self
(
)
;
mStackTop
=
pthread_get_stackaddr_np
(
self
)
;
#
endif
}
RegisteredThread
:
:
~
RegisteredThread
(
)
{
MOZ_COUNT_DTOR
(
RegisteredThread
)
;
}
size_t
RegisteredThread
:
:
SizeOfIncludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
const
{
size_t
n
=
aMallocSizeOf
(
this
)
;
return
n
;
}
void
RegisteredThread
:
:
GetRunningEventDelay
(
const
mozilla
:
:
TimeStamp
&
aNow
mozilla
:
:
TimeDuration
&
aDelay
mozilla
:
:
TimeDuration
&
aRunning
)
{
if
(
mThread
)
{
mozilla
:
:
TimeStamp
start
;
mThread
-
>
GetRunningEventDelay
(
&
aDelay
&
start
)
;
if
(
!
start
.
IsNull
(
)
)
{
aRunning
=
aNow
-
start
;
return
;
}
}
aDelay
=
mozilla
:
:
TimeDuration
(
)
;
aRunning
=
mozilla
:
:
TimeDuration
(
)
;
}
void
RegisteredThread
:
:
SetJSContext
(
JSContext
*
aContext
)
{
MOZ_ASSERT
(
aContext
&
&
!
mContext
)
;
mContext
=
aContext
;
js
:
:
SetContextProfilingStack
(
aContext
&
RacyRegisteredThread
(
)
.
ProfilingStack
(
)
)
;
}
void
RegisteredThread
:
:
PollJSSampling
(
)
{
if
(
mContext
)
{
if
(
mJSSampling
=
=
ACTIVE_REQUESTED
)
{
mJSSampling
=
ACTIVE
;
js
:
:
EnableContextProfilingStack
(
mContext
true
)
;
if
(
JSTracerEnabled
(
)
)
{
JS
:
:
StartTraceLogger
(
mContext
)
;
}
if
(
JSAllocationsEnabled
(
)
)
{
JS
:
:
EnableRecordingAllocations
(
mContext
profiler_add_js_allocation_marker
0
.
01
)
;
}
js
:
:
RegisterContextProfilingEventMarker
(
mContext
profiler_add_js_marker
)
;
}
else
if
(
mJSSampling
=
=
INACTIVE_REQUESTED
)
{
mJSSampling
=
INACTIVE
;
js
:
:
EnableContextProfilingStack
(
mContext
false
)
;
if
(
JSTracerEnabled
(
)
)
{
JS
:
:
StopTraceLogger
(
mContext
)
;
}
if
(
JSAllocationsEnabled
(
)
)
{
JS
:
:
DisableRecordingAllocations
(
mContext
)
;
}
}
}
}
