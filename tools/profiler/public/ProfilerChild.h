#
ifndef
ProfilerChild_h
#
define
ProfilerChild_h
#
include
"
mozilla
/
PProfilerChild
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
class
nsIThread
;
namespace
mozilla
{
class
ProfilerChild
final
:
public
PProfilerChild
public
mozilla
:
:
ipc
:
:
IShmemAllocator
{
NS_INLINE_DECL_REFCOUNTING
(
ProfilerChild
)
ProfilerChild
(
)
;
nsCString
GrabShutdownProfile
(
)
;
void
Destroy
(
)
;
private
:
virtual
~
ProfilerChild
(
)
;
mozilla
:
:
ipc
:
:
IPCResult
RecvStart
(
const
ProfilerInitParams
&
params
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvEnsureStarted
(
const
ProfilerInitParams
&
params
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvStop
(
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvPause
(
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvResume
(
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvGatherProfile
(
GatherProfileResolver
&
&
aResolve
)
override
;
void
ActorDestroy
(
ActorDestroyReason
aActorDestroyReason
)
override
;
FORWARD_SHMEM_ALLOCATOR_TO
(
PProfilerChild
)
nsCOMPtr
<
nsIThread
>
mThread
;
bool
mDestroyed
;
}
;
}
#
endif
