#
ifndef
ProfilerThreadState_h
#
define
ProfilerThreadState_h
#
include
"
mozilla
/
ProfilerState
.
h
"
#
include
"
mozilla
/
ProfilerThreadRegistration
.
h
"
#
include
"
mozilla
/
ProfilerThreadRegistry
.
h
"
[
[
nodiscard
]
]
inline
bool
profiler_is_active_and_thread_is_registered
(
)
{
return
profiler_is_active
(
)
&
&
mozilla
:
:
profiler
:
:
ThreadRegistration
:
:
IsRegistered
(
)
;
}
[
[
nodiscard
]
]
inline
bool
profiler_thread_is_being_profiled
(
ThreadProfilingFeatures
aThreadProfilingFeatures
=
ThreadProfilingFeatures
:
:
Any
)
{
return
profiler_is_active_and_unpaused
(
)
&
&
mozilla
:
:
profiler
:
:
ThreadRegistration
:
:
WithOnThreadRefOr
(
[
aThreadProfilingFeatures
]
(
mozilla
:
:
profiler
:
:
ThreadRegistration
:
:
OnThreadRef
aTR
)
{
return
DoFeaturesIntersect
(
aTR
.
UnlockedConstReaderAndAtomicRWCRef
(
)
.
ProfilingFeatures
(
)
aThreadProfilingFeatures
)
;
}
false
)
;
}
[
[
nodiscard
]
]
inline
bool
profiler_thread_is_being_profiled
(
const
ProfilerThreadId
&
aThreadId
ThreadProfilingFeatures
aThreadProfilingFeatures
=
ThreadProfilingFeatures
:
:
Any
)
{
if
(
!
profiler_is_active_and_unpaused
(
)
)
{
return
false
;
}
if
(
!
aThreadId
.
IsSpecified
(
)
|
|
aThreadId
=
=
profiler_current_thread_id
(
)
)
{
return
mozilla
:
:
profiler
:
:
ThreadRegistration
:
:
WithOnThreadRefOr
(
[
aThreadProfilingFeatures
]
(
mozilla
:
:
profiler
:
:
ThreadRegistration
:
:
OnThreadRef
aTR
)
{
return
DoFeaturesIntersect
(
aTR
.
UnlockedConstReaderAndAtomicRWCRef
(
)
.
ProfilingFeatures
(
)
aThreadProfilingFeatures
)
;
}
false
)
;
}
return
mozilla
:
:
profiler
:
:
ThreadRegistry
:
:
WithOffThreadRefOr
(
aThreadId
[
aThreadProfilingFeatures
]
(
mozilla
:
:
profiler
:
:
ThreadRegistry
:
:
OffThreadRef
aTR
)
{
return
DoFeaturesIntersect
(
aTR
.
UnlockedConstReaderAndAtomicRWCRef
(
)
.
ProfilingFeatures
(
)
aThreadProfilingFeatures
)
;
}
false
)
;
}
[
[
nodiscard
]
]
inline
bool
profiler_thread_is_sleeping
(
)
{
return
profiler_is_active
(
)
&
&
mozilla
:
:
profiler
:
:
ThreadRegistration
:
:
WithOnThreadRefOr
(
[
]
(
mozilla
:
:
profiler
:
:
ThreadRegistration
:
:
OnThreadRef
aTR
)
{
return
aTR
.
UnlockedConstReaderAndAtomicRWCRef
(
)
.
IsSleeping
(
)
;
}
false
)
;
}
#
endif
