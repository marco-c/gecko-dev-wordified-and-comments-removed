#
ifndef
ProfilerUtils_h
#
define
ProfilerUtils_h
#
include
"
mozilla
/
BaseProfilerUtils
.
h
"
#
ifndef
MOZ_GECKO_PROFILER
[
[
nodiscard
]
]
inline
int
profiler_current_process_id
(
)
{
return
0
;
}
[
[
nodiscard
]
]
inline
int
profiler_current_thread_id
(
)
{
return
0
;
}
[
[
nodiscard
]
]
inline
int
profiler_main_thread_id
(
)
{
return
0
;
}
[
[
nodiscard
]
]
inline
bool
profiler_is_main_thread
(
)
{
return
false
;
}
#
else
[
[
nodiscard
]
]
int
profiler_current_process_id
(
)
;
[
[
nodiscard
]
]
int
profiler_current_thread_id
(
)
;
namespace
mozilla
:
:
profiler
:
:
detail
{
extern
int
scProfilerMainThreadId
;
}
[
[
nodiscard
]
]
inline
int
profiler_main_thread_id
(
)
{
return
mozilla
:
:
profiler
:
:
detail
:
:
scProfilerMainThreadId
;
}
[
[
nodiscard
]
]
inline
bool
profiler_is_main_thread
(
)
{
return
profiler_current_thread_id
(
)
=
=
profiler_main_thread_id
(
)
;
}
#
endif
#
endif
