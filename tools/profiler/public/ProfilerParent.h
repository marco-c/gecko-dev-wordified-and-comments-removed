#
ifndef
ProfilerParent_h
#
define
ProfilerParent_h
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
PProfilerParent
.
h
"
namespace
mozilla
{
class
ProfilerParentTracker
;
class
ProfilerParent
final
:
public
PProfilerParent
{
public
:
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
ProfilerParent
)
static
bool
Alloc
(
mozilla
:
:
ipc
:
:
Endpoint
<
PProfilerParent
>
&
&
aEndpoint
)
;
static
uint32_t
GatherProfiles
(
)
;
static
void
ProfilerStarted
(
nsIProfilerStartParams
*
aParams
)
;
static
void
ProfilerStopped
(
)
;
static
void
ProfilerPaused
(
)
;
static
void
ProfilerResumed
(
)
;
private
:
friend
class
ProfilerParentTracker
;
ProfilerParent
(
)
;
virtual
~
ProfilerParent
(
)
;
void
Init
(
)
;
void
ActorDestroy
(
ActorDestroyReason
aActorDestroyReason
)
override
;
void
DeallocPProfilerParent
(
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvProfile
(
const
nsCString
&
aProfile
)
override
;
RefPtr
<
ProfilerParent
>
mSelfRef
;
uint32_t
mPendingRequestedProfilesCount
;
bool
mDestroyed
;
}
;
}
#
endif
