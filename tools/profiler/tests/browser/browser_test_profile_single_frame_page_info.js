add_task
(
async
function
test_profile_single_frame_page_info
(
)
{
if
(
!
AppConstants
.
MOZ_GECKO_PROFILER
)
{
return
;
}
Assert
.
ok
(
!
Services
.
profiler
.
IsActive
(
)
)
;
await
Services
.
profiler
.
ClearAllPages
(
)
;
startProfiler
(
)
;
const
url
=
BASE_URL
+
"
single_frame
.
html
"
;
let
contentPid
;
await
BrowserTestUtils
.
withNewTab
(
url
async
function
(
contentBrowser
)
{
contentPid
=
await
ContentTask
.
spawn
(
contentBrowser
null
(
)
=
>
{
return
Services
.
appinfo
.
processID
;
}
)
;
}
)
;
const
profile
=
await
Services
.
profiler
.
getProfileDataAsync
(
)
;
Services
.
profiler
.
StopProfiler
(
)
;
let
pageFound
=
false
;
let
contentProcess
=
profile
.
processes
.
find
(
p
=
>
p
.
threads
[
0
]
.
pid
=
=
contentPid
)
;
for
(
const
page
of
contentProcess
.
pages
)
{
if
(
page
.
url
=
=
url
)
{
Assert
.
equal
(
page
.
url
url
)
;
Assert
.
equal
(
typeof
page
.
browsingContextID
"
number
"
)
;
Assert
.
equal
(
typeof
page
.
innerWindowID
"
number
"
)
;
Assert
.
equal
(
page
.
embedderInnerWindowID
0
)
;
pageFound
=
true
;
break
;
}
}
Assert
.
equal
(
pageFound
true
)
;
}
)
;
