#
include
"
gtest
/
gtest
.
h
"
#
include
"
ProfileBufferEntry
.
h
"
#
include
"
ThreadInfo
.
h
"
TEST
(
ThreadProfile
Initialization
)
{
Thread
:
:
tid_t
tid
=
1000
;
ThreadInfo
info
(
"
testThread
"
tid
true
nullptr
)
;
info
.
SetHasProfile
(
)
;
}
TEST
(
ThreadProfile
InsertOneTag
)
{
Thread
:
:
tid_t
tid
=
1000
;
ThreadInfo
info
(
"
testThread
"
tid
true
nullptr
)
;
ProfileBuffer
*
pb
=
new
ProfileBuffer
(
10
)
;
pb
-
>
addTag
(
ProfileBufferEntry
:
:
Time
(
123
.
1
)
)
;
ASSERT_TRUE
(
pb
-
>
mEntries
!
=
nullptr
)
;
ASSERT_TRUE
(
pb
-
>
mEntries
[
pb
-
>
mReadPos
]
.
kind
(
)
=
=
ProfileBufferEntry
:
:
Kind
:
:
Time
)
;
ASSERT_TRUE
(
pb
-
>
mEntries
[
pb
-
>
mReadPos
]
.
mTagDouble
=
=
123
.
1
)
;
}
TEST
(
ThreadProfile
InsertTagsNoWrap
)
{
Thread
:
:
tid_t
tid
=
1000
;
ThreadInfo
info
(
"
testThread
"
tid
true
nullptr
)
;
ProfileBuffer
*
pb
=
new
ProfileBuffer
(
100
)
;
int
test_size
=
50
;
for
(
int
i
=
0
;
i
<
test_size
;
i
+
+
)
{
pb
-
>
addTag
(
ProfileBufferEntry
:
:
Time
(
i
)
)
;
}
ASSERT_TRUE
(
pb
-
>
mEntries
!
=
nullptr
)
;
int
readPos
=
pb
-
>
mReadPos
;
while
(
readPos
!
=
pb
-
>
mWritePos
)
{
ASSERT_TRUE
(
pb
-
>
mEntries
[
readPos
]
.
kind
(
)
=
=
ProfileBufferEntry
:
:
Kind
:
:
Time
)
;
ASSERT_TRUE
(
pb
-
>
mEntries
[
readPos
]
.
mTagDouble
=
=
readPos
)
;
readPos
=
(
readPos
+
1
)
%
pb
-
>
mEntrySize
;
}
}
TEST
(
ThreadProfile
InsertTagsWrap
)
{
Thread
:
:
tid_t
tid
=
1000
;
int
tags
=
24
;
int
buffer_size
=
tags
+
1
;
ThreadInfo
info
(
"
testThread
"
tid
true
nullptr
)
;
ProfileBuffer
*
pb
=
new
ProfileBuffer
(
buffer_size
)
;
int
test_size
=
43
;
for
(
int
i
=
0
;
i
<
test_size
;
i
+
+
)
{
pb
-
>
addTag
(
ProfileBufferEntry
:
:
Time
(
i
)
)
;
}
ASSERT_TRUE
(
pb
-
>
mEntries
!
=
nullptr
)
;
int
readPos
=
pb
-
>
mReadPos
;
int
ctr
=
0
;
while
(
readPos
!
=
pb
-
>
mWritePos
)
{
ASSERT_TRUE
(
pb
-
>
mEntries
[
readPos
]
.
kind
(
)
=
=
ProfileBufferEntry
:
:
Kind
:
:
Time
)
;
ASSERT_TRUE
(
pb
-
>
mEntries
[
readPos
]
.
mTagDouble
=
=
ctr
+
(
test_size
-
tags
)
)
;
ctr
+
+
;
readPos
=
(
readPos
+
1
)
%
pb
-
>
mEntrySize
;
}
}
