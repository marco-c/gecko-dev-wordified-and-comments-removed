#
include
"
gtest
/
gtest
.
h
"
#
include
"
ProfileBufferEntry
.
h
"
#
include
"
ThreadInfo
.
h
"
TEST
(
ThreadProfile
Initialization
)
{
int
tid
=
1000
;
nsCOMPtr
<
nsIThread
>
mainThread
;
NS_GetMainThread
(
getter_AddRefs
(
mainThread
)
)
;
ThreadInfo
info
(
"
testThread
"
tid
true
mainThread
nullptr
)
;
info
.
StartProfiling
(
)
;
}
TEST
(
ThreadProfile
InsertOneEntry
)
{
int
tid
=
1000
;
nsCOMPtr
<
nsIThread
>
mainThread
;
NS_GetMainThread
(
getter_AddRefs
(
mainThread
)
)
;
ThreadInfo
info
(
"
testThread
"
tid
true
mainThread
nullptr
)
;
auto
pb
=
MakeUnique
<
ProfileBuffer
>
(
10
)
;
pb
-
>
AddEntry
(
ProfileBufferEntry
:
:
Time
(
123
.
1
)
)
;
ASSERT_TRUE
(
pb
-
>
GetEntry
(
pb
-
>
mRangeStart
)
.
IsTime
(
)
)
;
ASSERT_TRUE
(
pb
-
>
GetEntry
(
pb
-
>
mRangeStart
)
.
u
.
mDouble
=
=
123
.
1
)
;
}
TEST
(
ThreadProfile
InsertEntriesNoWrap
)
{
int
tid
=
1000
;
nsCOMPtr
<
nsIThread
>
mainThread
;
NS_GetMainThread
(
getter_AddRefs
(
mainThread
)
)
;
ThreadInfo
info
(
"
testThread
"
tid
true
mainThread
nullptr
)
;
auto
pb
=
MakeUnique
<
ProfileBuffer
>
(
100
)
;
int
test_size
=
50
;
for
(
int
i
=
0
;
i
<
test_size
;
i
+
+
)
{
pb
-
>
AddEntry
(
ProfileBufferEntry
:
:
Time
(
i
)
)
;
}
uint64_t
readPos
=
pb
-
>
mRangeStart
;
while
(
readPos
!
=
pb
-
>
mRangeEnd
)
{
ASSERT_TRUE
(
pb
-
>
GetEntry
(
readPos
)
.
IsTime
(
)
)
;
ASSERT_TRUE
(
pb
-
>
GetEntry
(
readPos
)
.
u
.
mDouble
=
=
readPos
)
;
readPos
+
+
;
}
}
TEST
(
ThreadProfile
InsertEntriesWrap
)
{
int
tid
=
1000
;
int
entries
=
32
;
nsCOMPtr
<
nsIThread
>
mainThread
;
NS_GetMainThread
(
getter_AddRefs
(
mainThread
)
)
;
ThreadInfo
info
(
"
testThread
"
tid
true
mainThread
nullptr
)
;
auto
pb
=
MakeUnique
<
ProfileBuffer
>
(
entries
)
;
ASSERT_TRUE
(
pb
-
>
mRangeStart
=
=
0
)
;
ASSERT_TRUE
(
pb
-
>
mRangeEnd
=
=
0
)
;
int
test_size
=
43
;
for
(
int
i
=
0
;
i
<
test_size
;
i
+
+
)
{
pb
-
>
AddEntry
(
ProfileBufferEntry
:
:
Time
(
i
)
)
;
}
ASSERT_TRUE
(
pb
-
>
mRangeStart
=
=
11
)
;
uint64_t
readPos
=
pb
-
>
mRangeStart
;
while
(
readPos
!
=
pb
-
>
mRangeEnd
)
{
ASSERT_TRUE
(
pb
-
>
GetEntry
(
readPos
)
.
IsTime
(
)
)
;
ASSERT_TRUE
(
pb
-
>
GetEntry
(
readPos
)
.
u
.
mDouble
=
=
readPos
)
;
readPos
+
+
;
}
}
