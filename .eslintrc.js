"
use
strict
"
;
const
xpcshellTestConfig
=
require
(
"
eslint
-
plugin
-
mozilla
/
lib
/
configs
/
xpcshell
-
test
.
js
"
)
;
const
browserTestConfig
=
require
(
"
eslint
-
plugin
-
mozilla
/
lib
/
configs
/
browser
-
test
.
js
"
)
;
const
mochitestTestConfig
=
require
(
"
eslint
-
plugin
-
mozilla
/
lib
/
configs
/
mochitest
-
test
.
js
"
)
;
const
chromeTestConfig
=
require
(
"
eslint
-
plugin
-
mozilla
/
lib
/
configs
/
chrome
-
test
.
js
"
)
;
function
removeOverrides
(
config
)
{
config
=
{
.
.
.
config
}
;
delete
config
.
overrides
;
return
config
;
}
const
xpcshellTestPaths
=
[
"
*
*
/
test
*
/
unit
*
/
"
"
*
*
/
test
*
/
xpcshell
/
"
]
;
const
browserTestPaths
=
[
"
*
*
/
test
*
/
*
*
/
browser
/
"
]
;
const
mochitestTestPaths
=
[
"
*
*
/
test
*
/
mochitest
/
"
]
;
const
chromeTestPaths
=
[
"
*
*
/
test
*
/
chrome
/
"
]
;
module
.
exports
=
{
"
extends
"
:
[
"
plugin
:
mozilla
/
recommended
"
]
"
plugins
"
:
[
"
mozilla
"
]
"
settings
"
:
{
"
html
/
xml
-
extensions
"
:
[
"
.
xhtml
"
]
}
"
overrides
"
:
[
{
"
files
"
:
"
*
*
/
*
.
*
html
"
"
rules
"
:
{
"
eol
-
last
"
:
"
off
"
}
}
{
"
files
"
:
[
"
browser
/
base
/
content
/
tabbrowser
.
xml
"
"
browser
/
base
/
content
/
urlbarBindings
.
xml
"
"
browser
/
components
/
search
/
content
/
search
.
xml
"
"
browser
/
components
/
translation
/
translation
-
infobar
.
xml
"
"
toolkit
/
components
/
prompts
/
content
/
tabprompts
.
xml
"
]
"
env
"
:
{
"
mozilla
/
browser
-
window
"
:
true
}
}
{
"
files
"
:
"
dom
/
*
*
"
"
rules
"
:
{
"
mozilla
/
reject
-
importGlobalProperties
"
:
"
off
"
}
}
{
"
files
"
:
"
gfx
/
layers
/
apz
/
test
/
mochitest
/
*
*
"
"
rules
"
:
{
"
no
-
undef
"
:
"
off
"
}
}
{
.
.
.
removeOverrides
(
xpcshellTestConfig
)
"
files
"
:
xpcshellTestPaths
.
map
(
path
=
>
{
path
}
*
*
)
"
excludedFiles
"
:
"
devtools
/
*
*
"
}
{
"
files
"
:
xpcshellTestPaths
.
map
(
path
=
>
{
path
}
head
*
.
js
)
"
rules
"
:
{
"
no
-
unused
-
vars
"
:
[
"
error
"
{
"
args
"
:
"
none
"
"
vars
"
:
"
local
"
}
]
}
}
{
.
.
.
browserTestConfig
"
files
"
:
browserTestPaths
.
map
(
path
=
>
{
path
}
*
*
)
"
excludedFiles
"
:
"
devtools
/
*
*
"
}
{
.
.
.
removeOverrides
(
mochitestTestConfig
)
"
files
"
:
mochitestTestPaths
.
map
(
path
=
>
{
path
}
*
*
)
"
excludedFiles
"
:
[
"
devtools
/
*
*
"
"
security
/
manager
/
ssl
/
tests
/
mochitest
/
browser
/
*
*
"
"
testing
/
mochitest
/
*
*
"
]
}
{
.
.
.
removeOverrides
(
chromeTestConfig
)
"
files
"
:
chromeTestPaths
.
map
(
path
=
>
{
path
}
*
*
)
"
excludedFiles
"
:
[
"
devtools
/
*
*
"
]
}
{
"
env
"
:
{
"
mozilla
/
simpletest
"
:
true
}
"
files
"
:
[
.
.
.
mochitestTestPaths
.
map
(
path
=
>
{
path
}
/
*
*
/
*
.
js
)
.
.
.
chromeTestPaths
.
map
(
path
=
>
{
path
}
/
*
*
/
*
.
js
)
]
}
{
"
files
"
:
[
"
extensions
/
permissions
/
test
/
*
*
"
"
extensions
/
spellcheck
/
*
*
"
"
extensions
/
universalchardet
/
tests
/
*
*
"
]
"
rules
"
:
{
"
mozilla
/
reject
-
importGlobalProperties
"
:
"
off
"
"
mozilla
/
use
-
default
-
preference
-
values
"
:
"
off
"
"
mozilla
/
use
-
services
"
:
"
off
"
"
no
-
array
-
constructor
"
:
"
off
"
"
no
-
undef
"
:
"
off
"
"
no
-
unused
-
vars
"
:
"
off
"
"
no
-
redeclare
"
:
"
off
"
"
no
-
global
-
assign
"
:
"
off
"
"
brace
-
style
"
:
"
off
"
"
comma
-
dangle
"
:
"
off
"
"
linebreak
-
style
"
:
"
off
"
"
no
-
tabs
"
:
"
off
"
"
no
-
mixed
-
spaces
-
and
-
tabs
"
:
"
off
"
"
no
-
multi
-
spaces
"
:
"
off
"
"
no
-
trailing
-
spaces
"
:
"
off
"
"
padded
-
blocks
"
:
"
off
"
"
quotes
"
:
"
off
"
"
semi
"
:
"
off
"
"
space
-
infix
-
ops
"
:
"
off
"
}
}
]
}
;
