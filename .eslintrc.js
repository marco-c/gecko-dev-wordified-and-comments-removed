"
use
strict
"
;
const
xpcshellTestConfig
=
require
(
"
eslint
-
plugin
-
mozilla
/
lib
/
configs
/
xpcshell
-
test
.
js
"
)
;
const
browserTestConfig
=
require
(
"
eslint
-
plugin
-
mozilla
/
lib
/
configs
/
browser
-
test
.
js
"
)
;
const
mochitestTestConfig
=
require
(
"
eslint
-
plugin
-
mozilla
/
lib
/
configs
/
mochitest
-
test
.
js
"
)
;
const
chromeTestConfig
=
require
(
"
eslint
-
plugin
-
mozilla
/
lib
/
configs
/
chrome
-
test
.
js
"
)
;
const
{
testPaths
}
=
require
(
"
.
/
.
eslintrc
-
test
-
paths
.
js
"
)
;
const
{
rollouts
}
=
require
(
"
.
/
.
eslintrc
-
rollouts
.
js
"
)
;
const
fs
=
require
(
"
fs
"
)
;
const
path
=
require
(
"
path
"
)
;
function
removeOverrides
(
config
)
{
config
=
{
.
.
.
config
}
;
delete
config
.
overrides
;
return
config
;
}
function
readFile
(
path
)
{
return
fs
.
readFileSync
(
path
{
encoding
:
"
utf
-
8
"
}
)
.
split
(
"
\
n
"
)
.
filter
(
p
=
>
p
&
&
!
p
.
startsWith
(
"
#
"
)
)
;
}
const
ignorePatterns
=
[
.
.
.
readFile
(
path
.
join
(
__dirname
"
tools
"
"
rewriting
"
"
ThirdPartyPaths
.
txt
"
)
)
.
.
.
readFile
(
path
.
join
(
__dirname
"
tools
"
"
rewriting
"
"
Generated
.
txt
"
)
)
.
.
.
readFile
(
path
.
join
(
__dirname
"
devtools
"
"
client
"
"
debugger
"
"
src
"
"
.
eslintignore
"
)
)
.
map
(
p
=
>
devtools
/
client
/
debugger
/
src
/
{
p
}
)
]
;
const
httpTestingPaths
=
[
"
*
*
/
*
mixedcontent
"
"
*
*
/
*
CrossOrigin
"
"
*
*
/
*
crossorigin
"
"
*
*
/
*
cors
"
"
*
*
/
*
downgrade
"
"
*
*
/
*
Downgrade
"
]
;
module
.
exports
=
{
settings
:
{
"
import
/
extensions
"
:
[
"
.
mjs
"
]
}
ignorePatterns
root
:
true
extends
:
[
"
plugin
:
mozilla
/
recommended
"
]
plugins
:
[
"
mozilla
"
"
import
"
"
json
"
]
overrides
:
[
{
files
:
[
"
.
eslintrc
*
.
js
"
"
*
.
config
.
?
(
m
)
js
"
]
env
:
{
node
:
true
browser
:
false
}
}
{
files
:
[
"
browser
/
base
/
content
/
browser
.
js
"
]
rules
:
{
"
mozilla
/
no
-
more
-
globals
"
:
"
error
"
}
}
{
files
:
[
"
*
*
/
*
.
jsx
"
"
browser
/
components
/
pocket
/
content
/
*
*
/
*
.
js
"
"
browser
/
components
/
storybook
/
.
storybook
/
*
*
/
*
.
mjs
"
]
parserOptions
:
{
ecmaFeatures
:
{
jsx
:
true
}
}
}
{
files
:
[
"
browser
/
components
/
storybook
/
*
*
"
]
env
:
{
"
mozilla
/
privileged
"
:
false
}
}
{
files
:
[
"
*
.
mjs
"
]
rules
:
{
"
import
/
default
"
:
"
error
"
"
import
/
export
"
:
"
error
"
"
import
/
named
"
:
"
error
"
"
import
/
namespace
"
:
"
error
"
"
import
/
newline
-
after
-
import
"
:
"
error
"
"
import
/
no
-
duplicates
"
:
"
error
"
"
import
/
no
-
absolute
-
path
"
:
"
error
"
"
import
/
no
-
named
-
default
"
:
"
error
"
"
import
/
no
-
named
-
as
-
default
"
:
"
error
"
"
import
/
no
-
named
-
as
-
default
-
member
"
:
"
error
"
"
import
/
no
-
self
-
import
"
:
"
error
"
"
import
/
no
-
unassigned
-
import
"
:
"
error
"
"
import
/
no
-
unresolved
"
:
[
"
error
"
{
ignore
:
[
"
chrome
:
/
/
"
"
resource
:
/
/
"
]
}
]
"
import
/
no
-
useless
-
path
-
segments
"
:
"
error
"
}
}
{
files
:
[
"
*
*
/
*
.
stories
.
mjs
"
]
rules
:
{
"
import
/
no
-
unassigned
-
import
"
:
"
off
"
}
}
{
files
:
[
"
*
*
/
test
/
*
*
"
"
*
*
/
tests
/
*
*
"
]
extends
:
[
"
plugin
:
mozilla
/
general
-
test
"
]
}
{
.
.
.
removeOverrides
(
xpcshellTestConfig
)
files
:
testPaths
.
xpcshell
.
map
(
path
=
>
{
path
}
*
*
)
excludedFiles
:
[
"
*
*
/
*
.
jsm
"
"
*
*
/
*
.
mjs
"
"
*
*
/
*
.
sjs
"
]
}
{
files
:
testPaths
.
xpcshell
.
map
(
path
=
>
{
path
}
head
*
.
js
)
rules
:
{
"
no
-
unused
-
vars
"
:
[
"
error
"
{
argsIgnorePattern
:
"
^
_
"
vars
:
"
local
"
}
]
}
}
{
files
:
testPaths
.
xpcshell
.
map
(
path
=
>
{
path
}
test
*
.
js
)
rules
:
{
"
no
-
unused
-
vars
"
:
[
"
error
"
{
argsIgnorePattern
:
"
^
_
"
vars
:
"
all
"
}
]
}
}
{
.
.
.
removeOverrides
(
browserTestConfig
)
files
:
testPaths
.
browser
.
map
(
path
=
>
{
path
}
*
*
)
excludedFiles
:
[
"
*
*
/
*
.
jsm
"
"
*
*
/
*
.
mjs
"
"
*
*
/
*
.
sjs
"
]
}
{
.
.
.
removeOverrides
(
mochitestTestConfig
)
files
:
testPaths
.
mochitest
.
map
(
path
=
>
{
path
}
*
*
)
excludedFiles
:
[
"
*
*
/
*
.
jsm
"
"
*
*
/
*
.
mjs
"
"
security
/
manager
/
ssl
/
tests
/
mochitest
/
browser
/
*
*
"
]
}
{
.
.
.
removeOverrides
(
chromeTestConfig
)
files
:
testPaths
.
chrome
.
map
(
path
=
>
{
path
}
*
*
)
excludedFiles
:
[
"
*
*
/
*
.
jsm
"
"
*
*
/
*
.
mjs
"
"
*
*
/
*
.
sjs
"
]
}
{
env
:
{
"
mozilla
/
simpletest
"
:
true
}
files
:
[
.
.
.
testPaths
.
mochitest
.
map
(
path
=
>
{
path
}
/
*
*
/
*
.
js
)
.
.
.
testPaths
.
chrome
.
map
(
path
=
>
{
path
}
/
*
*
/
*
.
js
)
]
excludedFiles
:
[
"
*
*
/
*
.
jsm
"
"
*
*
/
*
.
mjs
"
"
*
*
/
*
.
sjs
"
]
}
{
files
:
testPaths
.
xpcshell
.
concat
(
testPaths
.
browser
)
.
map
(
path
=
>
[
{
path
}
/
*
*
/
*
.
html
{
path
}
/
*
*
/
*
.
xhtml
]
)
.
flat
(
)
rules
:
{
"
mozilla
/
no
-
comparison
-
or
-
assignment
-
inside
-
ok
"
:
"
off
"
}
}
{
files
:
[
"
dom
/
indexedDB
/
test
/
*
*
"
"
toolkit
/
components
/
antitracking
/
test
/
*
*
"
]
rules
:
{
"
mozilla
/
no
-
comparison
-
or
-
assignment
-
inside
-
ok
"
:
"
off
"
}
}
{
extends
:
[
"
plugin
:
react
-
hooks
/
recommended
"
]
files
:
[
"
browser
/
components
/
aboutwelcome
/
*
*
"
"
browser
/
components
/
asrouter
/
*
*
"
"
browser
/
components
/
newtab
/
*
*
"
"
browser
/
components
/
pocket
/
*
*
"
"
devtools
/
*
*
"
]
rules
:
{
"
react
-
hooks
/
exhaustive
-
deps
"
:
"
error
"
}
}
{
files
:
httpTestingPaths
.
map
(
path
=
>
{
path
}
*
*
)
rules
:
{
"
microsoft
/
sdl
/
no
-
insecure
-
url
"
:
"
off
"
}
}
{
env
:
{
browser
:
false
"
mozilla
/
sysmjs
"
:
true
}
files
:
[
"
*
*
/
*
.
jsm
"
]
rules
:
{
"
mozilla
/
lazy
-
getter
-
object
-
name
"
:
"
error
"
"
mozilla
/
mark
-
exported
-
symbols
-
as
-
used
"
:
"
error
"
"
mozilla
/
reject
-
eager
-
module
-
in
-
lazy
-
getter
"
:
"
error
"
"
mozilla
/
reject
-
global
-
this
"
:
"
error
"
"
mozilla
/
reject
-
globalThis
-
modification
"
:
"
error
"
"
mozilla
/
reject
-
importGlobalProperties
"
:
[
"
error
"
"
everything
"
]
"
mozilla
/
reject
-
mixing
-
eager
-
and
-
lazy
"
:
"
error
"
"
mozilla
/
reject
-
top
-
level
-
await
"
:
"
error
"
"
no
-
redeclare
"
:
[
"
error
"
{
builtinGlobals
:
false
}
]
"
no
-
unused
-
vars
"
:
[
"
error
"
{
argsIgnorePattern
:
"
^
_
"
vars
:
"
all
"
}
]
}
}
.
.
.
rollouts
]
}
;
