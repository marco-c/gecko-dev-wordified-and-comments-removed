#
ifndef
WebExecutorSupport_h__
#
define
WebExecutorSupport_h__
#
include
"
mozilla
/
java
/
GeckoWebExecutorNatives
.
h
"
#
include
"
mozilla
/
java
/
GeckoResultWrappers
.
h
"
#
include
"
mozilla
/
java
/
WebRequestWrappers
.
h
"
#
if
defined
(
ENABLE_TESTS
)
#
include
"
nsIOhttpClientTest
.
h
"
#
endif
class
nsIChannel
;
namespace
mozilla
{
namespace
widget
{
class
WebExecutorSupport
final
:
public
java
:
:
GeckoWebExecutor
:
:
Natives
<
WebExecutorSupport
>
{
public
:
static
void
Fetch
(
jni
:
:
Object
:
:
Param
request
int32_t
flags
jni
:
:
Object
:
:
Param
result
)
;
static
void
Resolve
(
jni
:
:
String
:
:
Param
aUri
jni
:
:
Object
:
:
Param
result
)
;
static
void
CompleteWithError
(
java
:
:
GeckoResult
:
:
Param
aResult
nsresult
aStatus
nsIChannel
*
aChannel
)
;
static
void
CompleteWithError
(
java
:
:
GeckoResult
:
:
Param
aResult
nsresult
aStatus
)
{
CompleteWithError
(
aResult
aStatus
nullptr
)
;
}
static
nsresult
CreateStreamLoader
(
java
:
:
WebRequest
:
:
Param
aRequest
int32_t
aFlags
java
:
:
GeckoResult
:
:
Param
aResult
)
;
static
nsresult
PerformOrQueueOhttpRequest
(
java
:
:
WebRequest
:
:
Param
aRequest
int32_t
aFlags
java
:
:
GeckoResult
:
:
Param
aResult
bool
bypassConfigCache
=
false
)
;
#
if
defined
(
ENABLE_TESTS
)
static
void
TestOhttp
(
const
nsACString
&
url
const
nsACString
&
method
const
nsACString
&
body
const
nsTArray
<
nsCString
>
&
headerKeys
const
nsTArray
<
nsCString
>
&
headerValues
ohttpClientTestCallback
*
callback
)
;
#
endif
}
;
}
}
#
endif
