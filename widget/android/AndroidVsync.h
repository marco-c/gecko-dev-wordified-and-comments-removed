#
ifndef
mozilla_widget_AndroidVsync_h
#
define
mozilla_widget_AndroidVsync_h
#
include
"
mozilla
/
DataMutex
.
h
"
#
include
"
mozilla
/
java
/
AndroidVsyncNatives
.
h
"
#
include
"
mozilla
/
ThreadSafeWeakPtr
.
h
"
#
include
"
mozilla
/
TimeStamp
.
h
"
namespace
mozilla
{
namespace
widget
{
class
AndroidVsyncSupport
;
class
AndroidVsync
final
:
public
SupportsThreadSafeWeakPtr
<
AndroidVsync
>
{
public
:
MOZ_DECLARE_REFCOUNTED_TYPENAME
(
AndroidVsync
)
static
RefPtr
<
AndroidVsync
>
GetInstance
(
)
;
~
AndroidVsync
(
)
;
class
Observer
{
public
:
virtual
void
OnVsync
(
const
TimeStamp
&
aTimeStamp
)
=
0
;
virtual
void
Dispose
(
)
{
}
virtual
~
Observer
(
)
=
default
;
}
;
enum
ObserverType
{
INPUT
RENDER
}
;
void
RegisterObserver
(
Observer
*
aObserver
ObserverType
aType
)
;
void
UnregisterObserver
(
Observer
*
aObserver
ObserverType
aType
)
;
TimeDuration
GetVsyncRate
(
)
;
private
:
friend
class
AndroidVsyncSupport
;
AndroidVsync
(
)
;
void
NotifyVsync
(
int64_t
aFrameTimeNanos
)
;
struct
Impl
{
void
UpdateObservingVsync
(
)
;
TimeDuration
mVsyncDuration
;
nsTArray
<
Observer
*
>
mInputObservers
;
nsTArray
<
Observer
*
>
mRenderObservers
;
RefPtr
<
AndroidVsyncSupport
>
mSupport
;
java
:
:
AndroidVsync
:
:
GlobalRef
mSupportJava
;
bool
mObservingVsync
=
false
;
}
;
DataMutex
<
Impl
>
mImpl
;
static
StaticDataMutex
<
ThreadSafeWeakPtr
<
AndroidVsync
>
>
sInstance
;
}
;
}
}
#
endif
