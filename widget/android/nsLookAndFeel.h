#
ifndef
__nsLookAndFeel
#
define
__nsLookAndFeel
#
include
"
nsXPLookAndFeel
.
h
"
namespace
mozilla
{
struct
AndroidSystemColors
{
nscolor
textColorPrimary
;
nscolor
textColorPrimaryInverse
;
nscolor
textColorSecondary
;
nscolor
textColorSecondaryInverse
;
nscolor
textColorTertiary
;
nscolor
textColorTertiaryInverse
;
nscolor
textColorHighlight
;
nscolor
colorForeground
;
nscolor
colorBackground
;
nscolor
panelColorForeground
;
nscolor
panelColorBackground
;
nscolor
colorAccent
;
}
;
}
class
nsLookAndFeel
final
:
public
nsXPLookAndFeel
{
public
:
explicit
nsLookAndFeel
(
)
;
virtual
~
nsLookAndFeel
(
)
;
void
NativeInit
(
)
final
;
virtual
void
RefreshImpl
(
)
override
;
nsresult
NativeGetInt
(
IntID
int32_t
&
aResult
)
override
;
nsresult
NativeGetFloat
(
FloatID
float
&
aResult
)
override
;
nsresult
NativeGetColor
(
ColorID
ColorScheme
nscolor
&
aResult
)
override
;
bool
NativeGetFont
(
FontID
aID
nsString
&
aName
gfxFontStyle
&
aStyle
)
override
;
bool
GetEchoPasswordImpl
(
)
override
;
uint32_t
GetPasswordMaskDelayImpl
(
)
override
;
char16_t
GetPasswordCharacterImpl
(
)
override
;
nsresult
GetKeyboardLayoutImpl
(
nsACString
&
aLayout
)
override
;
protected
:
bool
mInitializedSystemColors
=
false
;
mozilla
:
:
AndroidSystemColors
mSystemColors
;
bool
mInitializedShowPassword
=
false
;
bool
mShowPassword
=
false
;
nsresult
GetSystemColors
(
)
;
void
EnsureInitSystemColors
(
)
;
void
EnsureInitShowPassword
(
)
;
}
;
#
endif
