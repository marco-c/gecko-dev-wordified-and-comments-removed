#
include
"
AndroidAlerts
.
h
"
#
include
"
GeneratedJNIWrappers
.
h
"
#
include
"
nsAlertsUtils
.
h
"
#
include
"
nsAppShell
.
h
"
namespace
mozilla
{
namespace
widget
{
NS_IMPL_ISUPPORTS
(
AndroidAlerts
nsIAlertsService
)
NS_IMETHODIMP
AndroidAlerts
:
:
ShowAlertNotification
(
const
nsAString
&
aImageUrl
const
nsAString
&
aAlertTitle
const
nsAString
&
aAlertText
bool
aAlertTextClickable
const
nsAString
&
aAlertCookie
nsIObserver
*
aAlertListener
const
nsAString
&
aAlertName
const
nsAString
&
aBidi
const
nsAString
&
aLang
const
nsAString
&
aData
nsIPrincipal
*
aPrincipal
bool
aInPrivateBrowsing
)
{
MOZ_ASSERT_UNREACHABLE
(
"
Should
be
implemented
by
nsAlertsService
.
"
)
;
return
NS_ERROR_NOT_IMPLEMENTED
;
}
NS_IMETHODIMP
AndroidAlerts
:
:
ShowAlert
(
nsIAlertNotification
*
aAlert
nsIObserver
*
aAlertListener
)
{
return
ShowPersistentNotification
(
EmptyString
(
)
aAlert
aAlertListener
)
;
}
NS_IMETHODIMP
AndroidAlerts
:
:
ShowPersistentNotification
(
const
nsAString
&
aPersistentData
nsIAlertNotification
*
aAlert
nsIObserver
*
aAlertListener
)
{
nsresult
rv
;
nsAutoString
imageUrl
;
rv
=
aAlert
-
>
GetImageURL
(
imageUrl
)
;
NS_ENSURE_SUCCESS
(
rv
NS_OK
)
;
nsAutoString
title
;
rv
=
aAlert
-
>
GetTitle
(
title
)
;
NS_ENSURE_SUCCESS
(
rv
NS_OK
)
;
nsAutoString
text
;
rv
=
aAlert
-
>
GetText
(
text
)
;
NS_ENSURE_SUCCESS
(
rv
NS_OK
)
;
nsAutoString
cookie
;
rv
=
aAlert
-
>
GetCookie
(
cookie
)
;
NS_ENSURE_SUCCESS
(
rv
NS_OK
)
;
nsAutoString
name
;
rv
=
aAlert
-
>
GetName
(
name
)
;
NS_ENSURE_SUCCESS
(
rv
NS_OK
)
;
nsCOMPtr
<
nsIPrincipal
>
principal
;
rv
=
aAlert
-
>
GetPrincipal
(
getter_AddRefs
(
principal
)
)
;
NS_ENSURE_SUCCESS
(
rv
NS_OK
)
;
nsAutoString
host
;
nsAlertsUtils
:
:
GetSourceHostPort
(
principal
host
)
;
if
(
!
aPersistentData
.
IsEmpty
(
)
)
{
java
:
:
GeckoAppShell
:
:
ShowPersistentAlertNotificationWrapper
(
aPersistentData
imageUrl
title
text
cookie
name
host
)
;
}
else
{
if
(
aAlertListener
)
{
nsAppShell
:
:
PostEvent
(
AndroidGeckoEvent
:
:
MakeAddObserver
(
name
aAlertListener
)
)
;
}
java
:
:
GeckoAppShell
:
:
ShowAlertNotificationWrapper
(
imageUrl
title
text
cookie
name
host
)
;
}
return
NS_OK
;
}
NS_IMETHODIMP
AndroidAlerts
:
:
CloseAlert
(
const
nsAString
&
aAlertName
nsIPrincipal
*
aPrincipal
)
{
java
:
:
GeckoAppShell
:
:
CloseNotification
(
aAlertName
)
;
return
NS_OK
;
}
}
}
