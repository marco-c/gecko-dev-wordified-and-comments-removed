#
ifndef
mozilla_widget_WindowEvent_h
#
define
mozilla_widget_WindowEvent_h
#
include
"
nsThreadUtils
.
h
"
#
include
"
mozilla
/
jni
/
Natives
.
h
"
namespace
mozilla
{
namespace
widget
{
template
<
typename
Lambda
bool
IsStatic
=
Lambda
:
:
isStatic
typename
InstanceType
=
typename
Lambda
:
:
ThisArgType
class
Impl
=
typename
Lambda
:
:
TargetClass
>
class
WindowEvent
:
public
Runnable
{
bool
IsStaleCall
(
)
{
if
(
IsStatic
)
{
return
false
;
}
return
jni
:
:
NativePtrTraits
<
Impl
>
:
:
IsStale
(
mInstance
)
;
}
Lambda
mLambda
;
const
InstanceType
mInstance
;
public
:
WindowEvent
(
Lambda
&
&
aLambda
InstanceType
&
&
aInstance
)
:
Runnable
(
"
mozilla
:
:
widget
:
:
WindowEvent
"
)
mLambda
(
std
:
:
move
(
aLambda
)
)
mInstance
(
std
:
:
forward
<
InstanceType
>
(
aInstance
)
)
{
}
explicit
WindowEvent
(
Lambda
&
&
aLambda
)
:
Runnable
(
"
mozilla
:
:
widget
:
:
WindowEvent
"
)
mLambda
(
std
:
:
move
(
aLambda
)
)
mInstance
(
mLambda
.
GetThisArg
(
)
)
{
}
NS_IMETHOD
Run
(
)
override
{
if
(
!
IsStaleCall
(
)
)
{
mLambda
(
)
;
}
return
NS_OK
;
}
}
;
}
}
#
endif
