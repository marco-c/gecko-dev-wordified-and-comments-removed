#
ifndef
mozilla_widget_AndroidCompositorWidget_h
#
define
mozilla_widget_AndroidCompositorWidget_h
#
include
"
CompositorWidget
.
h
"
#
include
"
AndroidNativeWindow
.
h
"
#
include
"
GLDefs
.
h
"
namespace
mozilla
{
namespace
widget
{
class
PlatformCompositorWidgetDelegate
:
public
CompositorWidgetDelegate
{
public
:
PlatformCompositorWidgetDelegate
*
AsPlatformSpecificDelegate
(
)
override
{
return
this
;
}
}
;
class
AndroidCompositorWidgetInitData
;
class
AndroidCompositorWidget
:
public
CompositorWidget
{
public
:
AndroidCompositorWidget
(
const
AndroidCompositorWidgetInitData
&
aInitData
const
layers
:
:
CompositorOptions
&
aOptions
)
;
~
AndroidCompositorWidget
(
)
override
;
virtual
void
OnCompositorSurfaceChanged
(
)
=
0
;
EGLNativeWindowType
GetEGLNativeWindow
(
)
;
already_AddRefed
<
gfx
:
:
DrawTarget
>
StartRemoteDrawingInRegion
(
const
LayoutDeviceIntRegion
&
aInvalidRegion
layers
:
:
BufferMode
*
aBufferMode
)
override
;
void
EndRemoteDrawingInRegion
(
gfx
:
:
DrawTarget
*
aDrawTarget
const
LayoutDeviceIntRegion
&
aInvalidRegion
)
override
;
void
OnResumeComposition
(
)
override
;
AndroidCompositorWidget
*
AsAndroid
(
)
override
{
return
this
;
}
LayoutDeviceIntSize
GetClientSize
(
)
override
;
protected
:
int32_t
mWidgetId
;
java
:
:
sdk
:
:
Surface
:
:
GlobalRef
mSurface
;
ANativeWindow
*
mNativeWindow
;
ANativeWindow_Buffer
mBuffer
;
int32_t
mFormat
;
}
;
}
}
#
endif
