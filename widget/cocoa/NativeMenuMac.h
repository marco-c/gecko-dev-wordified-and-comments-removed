#
ifndef
NativeMenuMac_h
#
define
NativeMenuMac_h
#
include
"
mozilla
/
widget
/
NativeMenu
.
h
"
#
include
"
nsMenuItemIconX
.
h
"
#
include
"
nsMenuX
.
h
"
class
nsIContent
;
class
nsMenuGroupOwnerX
;
namespace
mozilla
{
namespace
dom
{
class
Element
;
}
namespace
widget
{
class
NativeMenuMac
:
public
NativeMenu
public
nsMenuItemIconX
:
:
Listener
public
nsMenuX
:
:
Observer
{
public
:
explicit
NativeMenuMac
(
mozilla
:
:
dom
:
:
Element
*
aElement
)
;
void
ShowAsContextMenu
(
const
mozilla
:
:
DesktopPoint
&
aPosition
)
override
;
bool
Close
(
)
override
;
void
ActivateItem
(
dom
:
:
Element
*
aItemElement
Modifiers
aModifiers
ErrorResult
&
aRv
)
override
;
void
OpenSubmenu
(
dom
:
:
Element
*
aMenuElement
)
override
;
void
CloseSubmenu
(
dom
:
:
Element
*
aMenuElement
)
override
;
RefPtr
<
dom
:
:
Element
>
Element
(
)
override
;
void
AddObserver
(
NativeMenu
:
:
Observer
*
aObserver
)
override
{
mObservers
.
AppendElement
(
aObserver
)
;
}
void
RemoveObserver
(
NativeMenu
:
:
Observer
*
aObserver
)
override
{
mObservers
.
RemoveElement
(
aObserver
)
;
}
void
IconUpdated
(
)
override
;
void
OnMenuWillOpen
(
mozilla
:
:
dom
:
:
Element
*
aPopupElement
)
override
;
void
OnMenuDidOpen
(
mozilla
:
:
dom
:
:
Element
*
aPopupElement
)
override
;
void
OnMenuClosed
(
mozilla
:
:
dom
:
:
Element
*
aPopupElement
)
override
;
NSMenu
*
NativeNSMenu
(
)
{
return
mMenu
?
mMenu
-
>
NativeNSMenu
(
)
:
nil
;
}
void
MenuWillOpen
(
)
;
bool
ActivateNativeMenuItemAt
(
const
nsAString
&
aIndexString
)
;
void
ForceUpdateNativeMenuAt
(
const
nsAString
&
aIndexString
)
;
void
Dump
(
)
;
void
SetContainerStatusBarItem
(
NSStatusItem
*
aItem
)
;
protected
:
virtual
~
NativeMenuMac
(
)
;
void
OpenMenu
(
const
mozilla
:
:
DesktopPoint
&
aPosition
)
;
RefPtr
<
nsMenuX
>
GetOpenMenuContainingElement
(
dom
:
:
Element
*
aElement
)
;
RefPtr
<
dom
:
:
Element
>
mElement
;
RefPtr
<
CancelableRunnable
>
mOpenRunnable
;
RefPtr
<
nsMenuGroupOwnerX
>
mMenuGroupOwner
;
RefPtr
<
nsMenuX
>
mMenu
;
nsTArray
<
NativeMenu
:
:
Observer
*
>
mObservers
;
NSStatusItem
*
mContainerStatusBarItem
;
}
;
}
}
#
endif
