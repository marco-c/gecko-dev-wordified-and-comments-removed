#
ifndef
nsClipboard_h_
#
define
nsClipboard_h_
#
include
"
nsBaseClipboard
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIClipboard
.
h
"
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
#
import
<
Cocoa
/
Cocoa
.
h
>
class
nsITransferable
;
class
nsClipboard
:
public
nsBaseClipboard
{
public
:
nsClipboard
(
)
;
NS_DECL_ISUPPORTS_INHERITED
NS_IMETHOD
EmptyClipboard
(
int32_t
aWhichClipboard
)
override
;
static
mozilla
:
:
StaticRefPtr
<
nsITransferable
>
sSelectionCache
;
static
int32_t
sSelectionCacheChangeCount
;
static
NSDictionary
*
PasteboardDictFromTransferable
(
nsITransferable
*
aTransferable
)
;
static
bool
IsStringType
(
const
nsCString
&
aMIMEType
NSString
*
*
aPasteboardType
)
;
static
bool
IsImageType
(
const
nsACString
&
aMIMEType
)
;
static
NSString
*
WrapHtmlForSystemPasteboard
(
NSString
*
aString
)
;
static
nsresult
TransferableFromPasteboard
(
nsITransferable
*
aTransferable
NSPasteboard
*
pboard
)
;
protected
:
NS_IMETHOD
SetNativeClipboardData
(
nsITransferable
*
aTransferable
nsIClipboardOwner
*
aOwner
int32_t
aWhichClipboard
)
override
;
NS_IMETHOD
GetNativeClipboardData
(
nsITransferable
*
aTransferable
int32_t
aWhichClipboard
)
override
;
mozilla
:
:
Result
<
int32_t
nsresult
>
GetNativeClipboardSequenceNumber
(
int32_t
aWhichClipboard
)
override
;
mozilla
:
:
Result
<
bool
nsresult
>
HasNativeClipboardDataMatchingFlavors
(
const
nsTArray
<
nsCString
>
&
aFlavorList
int32_t
aWhichClipboard
)
override
;
void
ClearSelectionCache
(
)
;
void
SetSelectionCache
(
nsITransferable
*
aTransferable
)
;
private
:
virtual
~
nsClipboard
(
)
;
static
mozilla
:
:
Maybe
<
uint32_t
>
FindIndexOfImageFlavor
(
const
nsTArray
<
nsCString
>
&
aMIMETypes
)
;
int32_t
mCachedClipboard
=
-
1
;
int32_t
mChangeCount
=
0
;
}
;
#
endif
