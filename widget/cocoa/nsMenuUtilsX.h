#
ifndef
nsMenuUtilsX_h_
#
define
nsMenuUtilsX_h_
#
include
"
nscore
.
h
"
#
include
"
nsStringFwd
.
h
"
#
import
<
Cocoa
/
Cocoa
.
h
>
class
nsIContent
;
class
nsMenuBarX
;
class
nsMenuX
;
namespace
nsMenuUtilsX
{
void
DispatchCommandTo
(
nsIContent
*
aTargetContent
NSEventModifierFlags
aModifierFlags
int16_t
aButton
)
;
NSString
*
GetTruncatedCocoaLabel
(
const
nsString
&
itemLabel
)
;
uint8_t
GeckoModifiersForNodeAttribute
(
const
nsString
&
modifiersAttribute
)
;
unsigned
int
MacModifiersForGeckoModifiers
(
uint8_t
geckoModifiers
)
;
nsMenuBarX
*
GetHiddenWindowMenuBar
(
)
;
NSMenuItem
*
GetStandardEditMenuItem
(
)
;
bool
NodeIsHiddenOrCollapsed
(
nsIContent
*
aContent
)
;
NSMenuItem
*
NativeMenuItemWithLocation
(
NSMenu
*
aRootMenu
NSString
*
aLocationString
bool
aIsMenuBar
)
;
void
CheckNativeMenuConsistency
(
NSMenu
*
aMenu
)
;
void
CheckNativeMenuConsistency
(
NSMenuItem
*
aMenuItem
)
;
void
DumpNativeMenu
(
NSMenu
*
aMenu
)
;
void
DumpNativeMenuItem
(
NSMenuItem
*
aMenuItem
)
;
extern
bool
gIsSynchronouslyActivatingNativeMenuItemDuringTest
;
}
#
endif
