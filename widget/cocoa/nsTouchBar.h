#
ifndef
nsTouchBar_h_
#
define
nsTouchBar_h_
#
import
<
Cocoa
/
Cocoa
.
h
>
#
include
"
nsITouchBarHelper
.
h
"
#
include
"
nsITouchBarInput
.
h
"
#
include
"
nsTouchBarInputIcon
.
h
"
#
include
"
nsTouchBarNativeAPIDefines
.
h
"
using
namespace
mozilla
:
:
dom
;
interface
TouchBarInput
:
NSObject
{
NSString
*
mKey
;
NSString
*
mTitle
;
nsCOMPtr
<
nsIURI
>
mImageURI
;
RefPtr
<
nsTouchBarInputIcon
>
mIcon
;
NSString
*
mType
;
NSColor
*
mColor
;
BOOL
mDisabled
;
nsCOMPtr
<
nsITouchBarInputCallback
>
mCallback
;
RefPtr
<
Document
>
mDocument
;
BOOL
mIsIconPositionSet
;
NSMutableArray
<
TouchBarInput
*
>
*
mChildren
;
}
-
(
NSString
*
)
key
;
-
(
NSString
*
)
title
;
-
(
nsCOMPtr
<
nsIURI
>
)
imageURI
;
-
(
RefPtr
<
nsTouchBarInputIcon
>
)
icon
;
-
(
NSString
*
)
type
;
-
(
NSColor
*
)
color
;
-
(
BOOL
)
isDisabled
;
-
(
NSTouchBarItemIdentifier
)
nativeIdentifier
;
-
(
nsCOMPtr
<
nsITouchBarInputCallback
>
)
callback
;
-
(
RefPtr
<
Document
>
)
document
;
-
(
BOOL
)
isIconPositionSet
;
-
(
NSMutableArray
<
TouchBarInput
*
>
*
)
children
;
-
(
void
)
setKey
:
(
NSString
*
)
aKey
;
-
(
void
)
setTitle
:
(
NSString
*
)
aTitle
;
-
(
void
)
setImageURI
:
(
nsCOMPtr
<
nsIURI
>
)
aImageURI
;
-
(
void
)
setIcon
:
(
RefPtr
<
nsTouchBarInputIcon
>
)
aIcon
;
-
(
void
)
setType
:
(
NSString
*
)
aType
;
-
(
void
)
setColor
:
(
NSColor
*
)
aColor
;
-
(
void
)
setDisabled
:
(
BOOL
)
aDisabled
;
-
(
void
)
setCallback
:
(
nsCOMPtr
<
nsITouchBarInputCallback
>
)
aCallback
;
-
(
void
)
setDocument
:
(
RefPtr
<
Document
>
)
aDocument
;
-
(
void
)
setIconPositionSet
:
(
BOOL
)
aIsIconPositionSet
;
-
(
void
)
setChildren
:
(
NSMutableArray
<
TouchBarInput
*
>
*
)
aChildren
;
-
(
id
)
initWithKey
:
(
NSString
*
)
aKey
title
:
(
NSString
*
)
aTitle
imageURI
:
(
nsCOMPtr
<
nsIURI
>
)
aImageURI
type
:
(
NSString
*
)
aType
callback
:
(
nsCOMPtr
<
nsITouchBarInputCallback
>
)
aCallback
color
:
(
uint32_t
)
aColor
disabled
:
(
BOOL
)
aDisabled
document
:
(
RefPtr
<
Document
>
)
aDocument
children
:
(
nsCOMPtr
<
nsIArray
>
)
aChildren
;
-
(
TouchBarInput
*
)
initWithXPCOM
:
(
nsCOMPtr
<
nsITouchBarInput
>
)
aInput
;
-
(
void
)
releaseJSObjects
;
-
(
void
)
dealloc
;
+
(
NSTouchBarItemIdentifier
)
nativeIdentifierWithType
:
(
NSString
*
)
aType
withKey
:
(
NSString
*
)
aKey
;
end
interface
nsTouchBar
:
NSTouchBar
<
NSTouchBarDelegate
NSSharingServicePickerTouchBarItemDelegate
NSSharingServiceDelegate
>
{
nsCOMPtr
<
nsITouchBarHelper
>
mTouchBarHelper
;
}
property
(
strong
)
NSMutableDictionary
<
NSTouchBarItemIdentifier
TouchBarInput
*
>
*
mappedLayoutItems
;
property
(
strong
)
NSMutableDictionary
<
NSTouchBarItemIdentifier
NSButton
*
>
*
scrollViewButtons
;
-
(
instancetype
)
init
;
-
(
instancetype
)
initWithInputs
:
(
NSMutableArray
<
TouchBarInput
*
>
*
)
aInputs
;
-
(
void
)
dealloc
;
-
(
NSTouchBarItem
*
)
touchBar
:
(
NSTouchBar
*
)
aTouchBar
makeItemForIdentifier
:
(
NSTouchBarItemIdentifier
)
aIdentifier
;
-
(
bool
)
updateItem
:
(
TouchBarInput
*
)
aInput
;
-
(
bool
)
maybeUpdatePopoverChild
:
(
TouchBarInput
*
)
aInput
;
-
(
bool
)
maybeUpdateScrollViewChild
:
(
TouchBarInput
*
)
aInput
;
-
(
void
)
replaceMappedLayoutItem
:
(
TouchBarInput
*
)
aItem
;
-
(
void
)
updateButton
:
(
NSButton
*
)
aButton
input
:
(
TouchBarInput
*
)
aInput
;
-
(
void
)
updateMainButton
:
(
NSButton
*
)
aMainButton
input
:
(
TouchBarInput
*
)
aInput
;
-
(
void
)
updatePopover
:
(
NSPopoverTouchBarItem
*
)
aPopoverItem
input
:
(
TouchBarInput
*
)
aInput
;
-
(
void
)
updateScrollView
:
(
NSCustomTouchBarItem
*
)
aScrollViewItem
input
:
(
TouchBarInput
*
)
aInput
;
-
(
NSTouchBarItem
*
)
makeShareScrubberForIdentifier
:
(
NSTouchBarItemIdentifier
)
aIdentifier
;
-
(
void
)
showPopover
:
(
TouchBarInput
*
)
aPopover
showing
:
(
bool
)
aShowing
;
-
(
void
)
touchBarAction
:
(
id
)
aSender
;
-
(
NSArray
*
)
itemsForSharingServicePickerTouchBarItem
:
(
NSSharingServicePickerTouchBarItem
*
)
aPickerTouchBarItem
;
-
(
NSArray
<
NSSharingService
*
>
*
)
sharingServicePicker
:
(
NSSharingServicePicker
*
)
aSharingServicePicker
sharingServicesForItems
:
(
NSArray
*
)
aItems
proposedSharingServices
:
(
NSArray
<
NSSharingService
*
>
*
)
aProposedServices
;
-
(
void
)
releaseJSObjects
;
end
#
endif
