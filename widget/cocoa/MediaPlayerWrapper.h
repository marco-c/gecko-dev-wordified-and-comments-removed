#
ifndef
WIDGET_COCOA_MEDIAPLAYERWRAPPER_H_
#
define
WIDGET_COCOA_MEDIAPLAYERWRAPPER_H_
#
import
<
Foundation
/
Foundation
.
h
>
#
include
<
dlfcn
.
h
>
#
import
<
Cocoa
/
Cocoa
.
h
>
bool
MediaPlayerWrapperInit
(
)
;
void
MediaPlayerWrapperClose
(
)
;
typedef
NS_ENUM
(
NSUInteger
MPNowPlayingPlaybackState
)
{
MPNowPlayingPlaybackStateUnknown
=
0
MPNowPlayingPlaybackStatePlaying
MPNowPlayingPlaybackStatePaused
MPNowPlayingPlaybackStateStopped
MPNowPlayingPlaybackStateInterrupted
}
;
typedef
NS_ENUM
(
NSInteger
MPRemoteCommandHandlerStatus
)
{
MPRemoteCommandHandlerStatusSuccess
=
0
MPRemoteCommandHandlerStatusNoSuchContent
=
100
MPRemoteCommandHandlerStatusNoActionableNowPlayingItem
=
110
MPRemoteCommandHandlerStatusDeviceNotFound
=
120
MPRemoteCommandHandlerStatusCommandFailed
=
200
}
;
NS_ASSUME_NONNULL_BEGIN
interface
MPNowPlayingInfoCenter
:
NSObject
+
(
MPNowPlayingInfoCenter
*
)
defaultCenter
;
+
(
instancetype
)
new
NS_UNAVAILABLE
;
-
(
instancetype
)
init
NS_UNAVAILABLE
;
property
(
nonatomic
copy
nullable
)
NSDictionary
<
NSString
*
id
>
*
nowPlayingInfo
;
property
(
nonatomic
)
MPNowPlayingPlaybackState
playbackState
;
end
class
MPRemoteCommand
;
interface
MPRemoteCommandEvent
:
NSObject
property
(
nonatomic
readonly
)
MPRemoteCommand
*
command
;
property
(
nonatomic
readonly
)
NSTimeInterval
timestamp
;
end
interface
MPRemoteCommand
:
NSObject
property
(
nonatomic
assign
getter
=
isEnabled
)
BOOL
enabled
;
-
(
void
)
addTarget
:
(
id
)
target
action
:
(
SEL
)
action
;
-
(
void
)
removeTarget
:
(
id
)
target
action
:
(
nullable
SEL
)
action
;
-
(
void
)
removeTarget
:
(
nullable
id
)
target
;
-
(
id
)
addTargetWithHandler
:
(
MPRemoteCommandHandlerStatus
(
^
)
(
MPRemoteCommandEvent
*
event
)
)
handler
;
end
interface
MPRemoteCommandCenter
:
NSObject
property
(
nonatomic
readonly
)
MPRemoteCommand
*
pauseCommand
;
property
(
nonatomic
readonly
)
MPRemoteCommand
*
playCommand
;
property
(
nonatomic
readonly
)
MPRemoteCommand
*
stopCommand
;
property
(
nonatomic
readonly
)
MPRemoteCommand
*
togglePlayPauseCommand
;
property
(
nonatomic
readonly
)
MPRemoteCommand
*
nextTrackCommand
;
property
(
nonatomic
readonly
)
MPRemoteCommand
*
previousTrackCommand
;
+
(
MPRemoteCommandCenter
*
)
sharedCommandCenter
;
end
NS_ASSUME_NONNULL_END
#
endif
