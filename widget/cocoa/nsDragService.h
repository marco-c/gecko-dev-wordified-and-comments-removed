#
ifndef
nsDragService_h_
#
define
nsDragService_h_
#
include
"
nsBaseDragService
.
h
"
#
include
"
nsChildView
.
h
"
#
include
<
Cocoa
/
Cocoa
.
h
>
class
nsDragSession
:
public
nsBaseDragService
{
public
:
NS_IMETHOD
GetData
(
nsITransferable
*
aTransferable
uint32_t
aItemIndex
)
override
;
NS_IMETHOD
IsDataFlavorSupported
(
const
char
*
aDataFlavor
bool
*
_retval
)
override
;
NS_IMETHOD
GetNumDropItems
(
uint32_t
*
aNumItems
)
override
;
NS_IMETHOD
UpdateDragImage
(
nsINode
*
aImage
int32_t
aImageX
int32_t
aImageY
)
override
;
protected
:
nsCOMPtr
<
nsIArray
>
mDataItems
;
bool
mDragImageChanged
=
false
;
}
;
class
nsDragService
final
:
public
nsDragSession
{
public
:
nsDragService
(
)
;
MOZ_CAN_RUN_SCRIPT
virtual
nsresult
InvokeDragSessionImpl
(
nsIArray
*
anArrayTransferables
const
mozilla
:
:
Maybe
<
mozilla
:
:
CSSIntRegion
>
&
aRegion
uint32_t
aActionType
)
override
;
MOZ_CAN_RUN_SCRIPT
NS_IMETHOD
EndDragSession
(
bool
aDoneDrag
uint32_t
aKeyModifiers
)
override
;
void
DragMovedWithView
(
NSDraggingSession
*
aSession
NSPoint
aPoint
)
;
protected
:
virtual
~
nsDragService
(
)
;
private
:
NSImage
*
ConstructDragImage
(
nsINode
*
aDOMNode
const
mozilla
:
:
Maybe
<
mozilla
:
:
CSSIntRegion
>
&
aRegion
NSPoint
*
aImagePoint
)
;
NSImage
*
ConstructDragImage
(
nsINode
*
aDOMNode
const
mozilla
:
:
Maybe
<
mozilla
:
:
CSSIntRegion
>
&
aRegion
mozilla
:
:
CSSIntPoint
aPoint
mozilla
:
:
LayoutDeviceIntRect
*
aDragRect
)
;
ChildView
*
mNativeDragView
;
NSEvent
*
mNativeDragEvent
;
}
;
#
endif
