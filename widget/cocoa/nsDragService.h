#
ifndef
nsDragService_h_
#
define
nsDragService_h_
#
include
"
nsBaseDragService
.
h
"
#
include
"
nsChildView
.
h
"
#
include
<
Cocoa
/
Cocoa
.
h
>
extern
NSString
*
const
kWildcardPboardType
;
extern
NSString
*
const
kCorePboardType_url
;
extern
NSString
*
const
kCorePboardType_urld
;
extern
NSString
*
const
kCorePboardType_urln
;
extern
NSString
*
const
kCustomTypesPboardType
;
class
nsDragService
:
public
nsBaseDragService
{
public
:
nsDragService
(
)
;
virtual
nsresult
InvokeDragSessionImpl
(
nsIArray
*
anArrayTransferables
nsIScriptableRegion
*
aRegion
uint32_t
aActionType
)
;
NS_IMETHOD
EndDragSession
(
bool
aDoneDrag
)
;
NS_IMETHOD
GetData
(
nsITransferable
*
aTransferable
uint32_t
aItemIndex
)
;
NS_IMETHOD
IsDataFlavorSupported
(
const
char
*
aDataFlavor
bool
*
_retval
)
;
NS_IMETHOD
GetNumDropItems
(
uint32_t
*
aNumItems
)
;
protected
:
virtual
~
nsDragService
(
)
;
private
:
NSImage
*
ConstructDragImage
(
nsIDOMNode
*
aDOMNode
mozilla
:
:
LayoutDeviceIntRect
*
aDragRect
nsIScriptableRegion
*
aRegion
)
;
bool
IsValidType
(
NSString
*
availableType
bool
allowFileURL
)
;
NSString
*
GetStringForType
(
NSPasteboardItem
*
item
const
NSString
*
type
bool
allowFileURL
=
false
)
;
NSString
*
GetTitleForURL
(
NSPasteboardItem
*
item
)
;
NSString
*
GetFilePath
(
NSPasteboardItem
*
item
)
;
nsCOMPtr
<
nsIArray
>
mDataItems
;
ChildView
*
mNativeDragView
;
NSEvent
*
mNativeDragEvent
;
}
;
#
endif
