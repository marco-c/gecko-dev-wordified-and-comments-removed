#
ifndef
nsDragService_h_
#
define
nsDragService_h_
#
include
"
nsBaseDragService
.
h
"
#
include
"
nsChildView
.
h
"
#
include
<
Cocoa
/
Cocoa
.
h
>
extern
NSString
*
const
kPublicUrlPboardType
;
extern
NSString
*
const
kPublicUrlNamePboardType
;
extern
NSString
*
const
kUrlsWithTitlesPboardType
;
extern
NSString
*
const
kMozWildcardPboardType
;
extern
NSString
*
const
kMozCustomTypesPboardType
;
extern
NSString
*
const
kMozFileUrlsPboardType
;
class
nsDragService
:
public
nsBaseDragService
{
public
:
nsDragService
(
)
;
virtual
nsresult
InvokeDragSessionImpl
(
nsIArray
*
anArrayTransferables
nsIScriptableRegion
*
aRegion
uint32_t
aActionType
)
;
NS_IMETHOD
EndDragSession
(
bool
aDoneDrag
uint32_t
aKeyModifiers
)
;
NS_IMETHOD
UpdateDragImage
(
nsIDOMNode
*
aImage
int32_t
aImageX
int32_t
aImageY
)
;
NS_IMETHOD
GetData
(
nsITransferable
*
aTransferable
uint32_t
aItemIndex
)
;
NS_IMETHOD
IsDataFlavorSupported
(
const
char
*
aDataFlavor
bool
*
_retval
)
;
NS_IMETHOD
GetNumDropItems
(
uint32_t
*
aNumItems
)
;
void
DragMovedWithView
(
NSDraggingSession
*
aSession
NSPoint
aPoint
)
;
protected
:
virtual
~
nsDragService
(
)
;
private
:
NSImage
*
ConstructDragImage
(
nsIDOMNode
*
aDOMNode
nsIScriptableRegion
*
aRegion
NSPoint
*
aImagePoint
)
;
NSImage
*
ConstructDragImage
(
nsIDOMNode
*
aDOMNode
nsIScriptableRegion
*
aRegion
mozilla
:
:
CSSIntPoint
aPoint
mozilla
:
:
LayoutDeviceIntRect
*
aDragRect
)
;
bool
IsValidType
(
NSString
*
availableType
bool
allowFileURL
)
;
NSString
*
GetStringForType
(
NSPasteboardItem
*
item
const
NSString
*
type
bool
allowFileURL
=
false
)
;
NSString
*
GetTitleForURL
(
NSPasteboardItem
*
item
)
;
NSString
*
GetFilePath
(
NSPasteboardItem
*
item
)
;
nsCOMPtr
<
nsIArray
>
mDataItems
;
ChildView
*
mNativeDragView
;
NSEvent
*
mNativeDragEvent
;
bool
mDragImageChanged
;
}
;
#
endif
