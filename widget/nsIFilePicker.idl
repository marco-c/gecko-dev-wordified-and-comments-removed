#
include
"
nsISupports
.
idl
"
interface
nsIFile
;
interface
nsIURI
;
interface
mozIDOMWindowProxy
;
interface
nsISimpleEnumerator
;
[
scriptable
function
uuid
(
0d79adad
-
b244
-
49A5
-
9997
-
2a8cad93fc44
)
]
interface
nsIFilePickerShownCallback
:
nsISupports
{
void
done
(
in
short
aResult
)
;
}
;
[
scriptable
uuid
(
9285b984
-
02d3
-
46b4
-
9514
-
7da8c471a747
)
]
interface
nsIFilePicker
:
nsISupports
{
const
short
modeOpen
=
0
;
const
short
modeSave
=
1
;
const
short
modeGetFolder
=
2
;
const
short
modeOpenMultiple
=
3
;
const
short
returnOK
=
0
;
const
short
returnCancel
=
1
;
const
short
returnReplace
=
2
;
const
long
filterAll
=
0x001
;
const
long
filterHTML
=
0x002
;
const
long
filterText
=
0x004
;
const
long
filterImages
=
0x008
;
const
long
filterXML
=
0x010
;
const
long
filterXUL
=
0x020
;
const
long
filterApps
=
0x040
;
const
long
filterAllowURLs
=
0x080
;
const
long
filterAudio
=
0x100
;
const
long
filterVideo
=
0x200
;
const
short
captureNone
=
0
;
const
short
captureDefault
=
1
;
const
short
captureUser
=
2
;
const
short
captureEnv
=
3
;
void
init
(
in
mozIDOMWindowProxy
parent
in
AString
title
in
short
mode
)
;
void
appendFilters
(
in
long
filterMask
)
;
void
appendFilter
(
in
AString
title
in
AString
filter
)
;
void
appendRawFilter
(
in
AString
filter
)
;
attribute
AString
defaultString
;
attribute
AString
defaultExtension
;
attribute
long
filterIndex
;
attribute
nsIFile
displayDirectory
;
attribute
AString
displaySpecialDirectory
;
readonly
attribute
nsIFile
file
;
readonly
attribute
nsIURI
fileURL
;
readonly
attribute
nsISimpleEnumerator
files
;
readonly
attribute
nsISupports
domFileOrDirectory
;
readonly
attribute
nsISimpleEnumerator
domFileOrDirectoryEnumerator
;
attribute
boolean
addToRecentDocs
;
void
open
(
in
nsIFilePickerShownCallback
aFilePickerShownCallback
)
;
readonly
attribute
short
mode
;
attribute
AString
okButtonLabel
;
attribute
short
capture
;
}
;
