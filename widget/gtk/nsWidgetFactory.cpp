#
include
"
nsWidgetFactory
.
h
"
#
include
"
mozilla
/
Components
.
h
"
#
include
"
mozilla
/
WidgetUtils
.
h
"
#
include
"
NativeKeyBindings
.
h
"
#
include
"
nsWidgetsCID
.
h
"
#
include
"
nsAppShell
.
h
"
#
include
"
nsAppShellSingleton
.
h
"
#
include
"
nsBaseWidget
.
h
"
#
include
"
nsGtkKeyUtils
.
h
"
#
include
"
nsLookAndFeel
.
h
"
#
include
"
nsWindow
.
h
"
#
include
"
nsHTMLFormatConverter
.
h
"
#
include
"
HeadlessClipboard
.
h
"
#
include
"
IMContextWrapper
.
h
"
#
ifdef
MOZ_X11
#
include
"
nsClipboard
.
h
"
#
endif
#
include
"
TaskbarProgress
.
h
"
#
include
"
nsFilePicker
.
h
"
#
include
"
nsSound
.
h
"
#
include
"
nsGTKToolkit
.
h
"
#
include
"
WakeLockListener
.
h
"
#
include
"
mozilla
/
gfx
/
2D
.
h
"
#
include
"
mozilla
/
widget
/
ScreenManager
.
h
"
#
include
<
gtk
/
gtk
.
h
>
using
namespace
mozilla
;
using
namespace
mozilla
:
:
widget
;
#
ifdef
MOZ_X11
NS_IMPL_COMPONENT_FACTORY
(
nsIClipboard
)
{
nsCOMPtr
<
nsIClipboard
>
inst
;
if
(
gfxPlatform
:
:
IsHeadless
(
)
)
{
inst
=
new
HeadlessClipboard
(
)
;
}
else
{
auto
clipboard
=
MakeRefPtr
<
nsClipboard
>
(
)
;
if
(
NS_FAILED
(
clipboard
-
>
Init
(
)
)
)
{
return
nullptr
;
}
inst
=
clipboard
.
forget
(
)
;
}
return
inst
.
forget
(
)
.
downcast
<
nsISupports
>
(
)
;
}
#
endif
nsresult
nsWidgetGtk2ModuleCtor
(
)
{
return
nsAppShellInit
(
)
;
}
void
nsWidgetGtk2ModuleDtor
(
)
{
WidgetUtils
:
:
Shutdown
(
)
;
NativeKeyBindings
:
:
Shutdown
(
)
;
nsLookAndFeel
:
:
Shutdown
(
)
;
nsFilePicker
:
:
Shutdown
(
)
;
nsSound
:
:
Shutdown
(
)
;
nsWindow
:
:
ReleaseGlobals
(
)
;
IMContextWrapper
:
:
Shutdown
(
)
;
KeymapWrapper
:
:
Shutdown
(
)
;
nsGTKToolkit
:
:
Shutdown
(
)
;
nsAppShellShutdown
(
)
;
#
ifdef
MOZ_ENABLE_DBUS
WakeLockListener
:
:
Shutdown
(
)
;
#
endif
}
