#
ifndef
__nsClipboardWaylandAsync_h_
#
define
__nsClipboardWaylandAsync_h_
#
include
<
gtk
/
gtk
.
h
>
#
include
<
gdk
/
gdkwayland
.
h
>
#
include
<
nsTArray
.
h
>
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
nsIThread
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
nsClipboard
.
h
"
#
include
"
nsWaylandDisplay
.
h
"
class
nsRetrievalContextWaylandAsync
:
public
nsRetrievalContext
{
public
:
nsRetrievalContextWaylandAsync
(
)
;
virtual
const
char
*
GetClipboardData
(
const
char
*
aMimeType
int32_t
aWhichClipboard
uint32_t
*
aContentLength
)
override
;
virtual
const
char
*
GetClipboardText
(
int32_t
aWhichClipboard
)
override
;
virtual
void
ReleaseClipboardData
(
const
char
*
aClipboardData
)
override
;
virtual
GdkAtom
*
GetTargetsImpl
(
int32_t
aWhichClipboard
int
*
aTargetNum
)
override
;
void
TransferAsyncClipboardData
(
ClipboardDataType
aDataType
int
aClipboardRequestNumber
const
void
*
aData
)
;
bool
HasSelectionSupport
(
void
)
override
{
return
true
;
}
private
:
bool
WaitForClipboardContent
(
)
;
private
:
int
mClipboardRequestNumber
;
bool
mClipboardDataReceived
;
char
*
mClipboardData
;
uint32_t
mClipboardDataLength
;
mozilla
:
:
Mutex
mMutex
;
}
;
#
endif
