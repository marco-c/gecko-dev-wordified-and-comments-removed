#
ifndef
__MOZ_CONTAINER_H__
#
define
__MOZ_CONTAINER_H__
#
include
<
gtk
/
gtk
.
h
>
#
include
<
functional
>
#
include
<
vector
>
#
define
MOZ_CONTAINER_TYPE
(
moz_container_get_type
(
)
)
#
define
MOZ_CONTAINER
(
obj
)
\
(
G_TYPE_CHECK_INSTANCE_CAST
(
(
obj
)
MOZ_CONTAINER_TYPE
MozContainer
)
)
#
define
MOZ_CONTAINER_CLASS
(
klass
)
\
(
G_TYPE_CHECK_CLASS_CAST
(
(
klass
)
MOZ_CONTAINER_TYPE
MozContainerClass
)
)
#
define
IS_MOZ_CONTAINER
(
obj
)
\
(
G_TYPE_CHECK_INSTANCE_TYPE
(
(
obj
)
MOZ_CONTAINER_TYPE
)
)
#
define
IS_MOZ_CONTAINER_CLASS
(
klass
)
\
(
G_TYPE_CHECK_CLASS_TYPE
(
(
klass
)
MOZ_CONTAINER_TYPE
)
)
#
define
MOZ_CONTAINER_GET_CLASS
(
obj
)
\
(
G_TYPE_INSTANCE_GET_CLASS
(
(
obj
)
MOZ_CONTAINER_TYPE
MozContainerClass
)
)
typedef
struct
_MozContainer
MozContainer
;
typedef
struct
_MozContainerClass
MozContainerClass
;
#
ifdef
MOZ_WAYLAND
struct
wl_surface
;
struct
wl_subsurface
;
#
endif
struct
_MozContainer
{
GtkContainer
container
;
GList
*
children
;
#
ifdef
MOZ_WAYLAND
struct
wl_surface
*
surface
;
struct
wl_subsurface
*
subsurface
;
int
subsurface_dx
subsurface_dy
;
struct
wl_egl_window
*
eglwindow
;
struct
wl_callback
*
frame_callback_handler
;
int
frame_callback_handler_surface_id
;
gboolean
opaque_region_needs_update
;
gboolean
opaque_region_subtract_corners
;
gboolean
surface_position_needs_update
;
gboolean
surface_needs_clear
;
gboolean
ready_to_draw
;
std
:
:
vector
<
std
:
:
function
<
void
(
void
)
>
>
initial_draw_cbs
;
gboolean
is_accelerated
;
#
endif
gboolean
force_default_visual
;
}
;
struct
_MozContainerClass
{
GtkContainerClass
parent_class
;
}
;
GType
moz_container_get_type
(
void
)
;
GtkWidget
*
moz_container_new
(
void
)
;
void
moz_container_put
(
MozContainer
*
container
GtkWidget
*
child_widget
gint
x
gint
y
)
;
void
moz_container_force_default_visual
(
MozContainer
*
container
)
;
#
ifdef
MOZ_WAYLAND
struct
wl_surface
*
moz_container_get_wl_surface
(
MozContainer
*
container
)
;
struct
wl_egl_window
*
moz_container_get_wl_egl_window
(
MozContainer
*
container
int
scale
)
;
gboolean
moz_container_has_wl_egl_window
(
MozContainer
*
container
)
;
gboolean
moz_container_surface_needs_clear
(
MozContainer
*
container
)
;
void
moz_container_move_resize
(
MozContainer
*
container
int
dx
int
dy
int
width
int
height
)
;
void
moz_container_egl_window_set_size
(
MozContainer
*
container
int
width
int
height
)
;
void
moz_container_scale_changed
(
MozContainer
*
container
GtkAllocation
*
aAllocation
)
;
void
moz_container_add_initial_draw_callback
(
MozContainer
*
container
const
std
:
:
function
<
void
(
void
)
>
&
initial_draw_cb
)
;
wl_surface
*
moz_gtk_widget_get_wl_surface
(
GtkWidget
*
aWidget
)
;
void
moz_container_update_opaque_region
(
MozContainer
*
container
bool
aSubtractCorners
)
;
void
moz_container_set_accelerated
(
MozContainer
*
container
)
;
#
endif
#
endif
