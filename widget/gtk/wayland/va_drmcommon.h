#
ifndef
VA_DRM_COMMON_H
#
define
VA_DRM_COMMON_H
#
include
<
stdint
.
h
>
enum
{
VA_DRM_AUTH_NONE
=
0
VA_DRM_AUTH_DRI1
=
1
VA_DRM_AUTH_DRI2
=
2
VA_DRM_AUTH_CUSTOM
=
3
}
;
struct
drm_state
{
int
fd
;
int
auth_type
;
int
va_reserved
[
8
]
;
}
;
#
define
VA_SURFACE_ATTRIB_MEM_TYPE_KERNEL_DRM
0x10000000
#
define
VA_SURFACE_ATTRIB_MEM_TYPE_DRM_PRIME
0x20000000
#
define
VA_SURFACE_ATTRIB_MEM_TYPE_DRM_PRIME_2
0x40000000
typedef
struct
_VADRMPRIMESurfaceDescriptor
{
uint32_t
fourcc
;
uint32_t
width
;
uint32_t
height
;
uint32_t
num_objects
;
struct
{
int
fd
;
uint32_t
size
;
uint64_t
drm_format_modifier
;
}
objects
[
4
]
;
uint32_t
num_layers
;
struct
{
uint32_t
drm_format
;
uint32_t
num_planes
;
uint32_t
object_index
[
4
]
;
uint32_t
offset
[
4
]
;
uint32_t
pitch
[
4
]
;
}
layers
[
4
]
;
}
VADRMPRIMESurfaceDescriptor
;
#
endif
