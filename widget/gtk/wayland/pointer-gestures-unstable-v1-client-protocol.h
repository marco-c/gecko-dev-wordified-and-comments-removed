#
ifndef
POINTER_GESTURES_UNSTABLE_V1_CLIENT_PROTOCOL_H
#
define
POINTER_GESTURES_UNSTABLE_V1_CLIENT_PROTOCOL_H
#
include
<
stdint
.
h
>
#
include
<
stddef
.
h
>
#
include
"
wayland
-
client
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
struct
wl_pointer
;
struct
wl_surface
;
struct
zwp_pointer_gesture_hold_v1
;
struct
zwp_pointer_gesture_pinch_v1
;
struct
zwp_pointer_gesture_swipe_v1
;
struct
zwp_pointer_gestures_v1
;
#
ifndef
ZWP_POINTER_GESTURES_V1_INTERFACE
#
define
ZWP_POINTER_GESTURES_V1_INTERFACE
extern
const
struct
wl_interface
zwp_pointer_gestures_v1_interface
;
#
endif
#
ifndef
ZWP_POINTER_GESTURE_SWIPE_V1_INTERFACE
#
define
ZWP_POINTER_GESTURE_SWIPE_V1_INTERFACE
extern
const
struct
wl_interface
zwp_pointer_gesture_swipe_v1_interface
;
#
endif
#
ifndef
ZWP_POINTER_GESTURE_PINCH_V1_INTERFACE
#
define
ZWP_POINTER_GESTURE_PINCH_V1_INTERFACE
extern
const
struct
wl_interface
zwp_pointer_gesture_pinch_v1_interface
;
#
endif
#
ifndef
ZWP_POINTER_GESTURE_HOLD_V1_INTERFACE
#
define
ZWP_POINTER_GESTURE_HOLD_V1_INTERFACE
extern
const
struct
wl_interface
zwp_pointer_gesture_hold_v1_interface
;
#
endif
#
define
ZWP_POINTER_GESTURES_V1_GET_SWIPE_GESTURE
0
#
define
ZWP_POINTER_GESTURES_V1_GET_PINCH_GESTURE
1
#
define
ZWP_POINTER_GESTURES_V1_RELEASE
2
#
define
ZWP_POINTER_GESTURES_V1_GET_HOLD_GESTURE
3
#
define
ZWP_POINTER_GESTURES_V1_GET_SWIPE_GESTURE_SINCE_VERSION
1
#
define
ZWP_POINTER_GESTURES_V1_GET_PINCH_GESTURE_SINCE_VERSION
1
#
define
ZWP_POINTER_GESTURES_V1_RELEASE_SINCE_VERSION
2
#
define
ZWP_POINTER_GESTURES_V1_GET_HOLD_GESTURE_SINCE_VERSION
3
static
inline
void
zwp_pointer_gestures_v1_set_user_data
(
struct
zwp_pointer_gestures_v1
*
zwp_pointer_gestures_v1
void
*
user_data
)
{
wl_proxy_set_user_data
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
user_data
)
;
}
static
inline
void
*
zwp_pointer_gestures_v1_get_user_data
(
struct
zwp_pointer_gestures_v1
*
zwp_pointer_gestures_v1
)
{
return
wl_proxy_get_user_data
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
)
;
}
static
inline
uint32_t
zwp_pointer_gestures_v1_get_version
(
struct
zwp_pointer_gestures_v1
*
zwp_pointer_gestures_v1
)
{
return
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
)
;
}
static
inline
void
zwp_pointer_gestures_v1_destroy
(
struct
zwp_pointer_gestures_v1
*
zwp_pointer_gestures_v1
)
{
wl_proxy_destroy
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
)
;
}
static
inline
struct
zwp_pointer_gesture_swipe_v1
*
zwp_pointer_gestures_v1_get_swipe_gesture
(
struct
zwp_pointer_gestures_v1
*
zwp_pointer_gestures_v1
struct
wl_pointer
*
pointer
)
{
struct
wl_proxy
*
id
;
id
=
wl_proxy_marshal_flags
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
ZWP_POINTER_GESTURES_V1_GET_SWIPE_GESTURE
&
zwp_pointer_gesture_swipe_v1_interface
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
)
0
NULL
pointer
)
;
return
(
struct
zwp_pointer_gesture_swipe_v1
*
)
id
;
}
static
inline
struct
zwp_pointer_gesture_pinch_v1
*
zwp_pointer_gestures_v1_get_pinch_gesture
(
struct
zwp_pointer_gestures_v1
*
zwp_pointer_gestures_v1
struct
wl_pointer
*
pointer
)
{
struct
wl_proxy
*
id
;
id
=
wl_proxy_marshal_flags
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
ZWP_POINTER_GESTURES_V1_GET_PINCH_GESTURE
&
zwp_pointer_gesture_pinch_v1_interface
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
)
0
NULL
pointer
)
;
return
(
struct
zwp_pointer_gesture_pinch_v1
*
)
id
;
}
static
inline
void
zwp_pointer_gestures_v1_release
(
struct
zwp_pointer_gestures_v1
*
zwp_pointer_gestures_v1
)
{
wl_proxy_marshal_flags
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
ZWP_POINTER_GESTURES_V1_RELEASE
NULL
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
)
WL_MARSHAL_FLAG_DESTROY
)
;
}
static
inline
struct
zwp_pointer_gesture_hold_v1
*
zwp_pointer_gestures_v1_get_hold_gesture
(
struct
zwp_pointer_gestures_v1
*
zwp_pointer_gestures_v1
struct
wl_pointer
*
pointer
)
{
struct
wl_proxy
*
id
;
id
=
wl_proxy_marshal_flags
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
ZWP_POINTER_GESTURES_V1_GET_HOLD_GESTURE
&
zwp_pointer_gesture_hold_v1_interface
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gestures_v1
)
0
NULL
pointer
)
;
return
(
struct
zwp_pointer_gesture_hold_v1
*
)
id
;
}
struct
zwp_pointer_gesture_swipe_v1_listener
{
void
(
*
begin
)
(
void
*
data
struct
zwp_pointer_gesture_swipe_v1
*
zwp_pointer_gesture_swipe_v1
uint32_t
serial
uint32_t
time
struct
wl_surface
*
surface
uint32_t
fingers
)
;
void
(
*
update
)
(
void
*
data
struct
zwp_pointer_gesture_swipe_v1
*
zwp_pointer_gesture_swipe_v1
uint32_t
time
wl_fixed_t
dx
wl_fixed_t
dy
)
;
void
(
*
end
)
(
void
*
data
struct
zwp_pointer_gesture_swipe_v1
*
zwp_pointer_gesture_swipe_v1
uint32_t
serial
uint32_t
time
int32_t
cancelled
)
;
}
;
static
inline
int
zwp_pointer_gesture_swipe_v1_add_listener
(
struct
zwp_pointer_gesture_swipe_v1
*
zwp_pointer_gesture_swipe_v1
const
struct
zwp_pointer_gesture_swipe_v1_listener
*
listener
void
*
data
)
{
return
wl_proxy_add_listener
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_swipe_v1
(
void
(
*
*
)
(
void
)
)
listener
data
)
;
}
#
define
ZWP_POINTER_GESTURE_SWIPE_V1_DESTROY
0
#
define
ZWP_POINTER_GESTURE_SWIPE_V1_BEGIN_SINCE_VERSION
1
#
define
ZWP_POINTER_GESTURE_SWIPE_V1_UPDATE_SINCE_VERSION
1
#
define
ZWP_POINTER_GESTURE_SWIPE_V1_END_SINCE_VERSION
1
#
define
ZWP_POINTER_GESTURE_SWIPE_V1_DESTROY_SINCE_VERSION
1
static
inline
void
zwp_pointer_gesture_swipe_v1_set_user_data
(
struct
zwp_pointer_gesture_swipe_v1
*
zwp_pointer_gesture_swipe_v1
void
*
user_data
)
{
wl_proxy_set_user_data
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_swipe_v1
user_data
)
;
}
static
inline
void
*
zwp_pointer_gesture_swipe_v1_get_user_data
(
struct
zwp_pointer_gesture_swipe_v1
*
zwp_pointer_gesture_swipe_v1
)
{
return
wl_proxy_get_user_data
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_swipe_v1
)
;
}
static
inline
uint32_t
zwp_pointer_gesture_swipe_v1_get_version
(
struct
zwp_pointer_gesture_swipe_v1
*
zwp_pointer_gesture_swipe_v1
)
{
return
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_swipe_v1
)
;
}
static
inline
void
zwp_pointer_gesture_swipe_v1_destroy
(
struct
zwp_pointer_gesture_swipe_v1
*
zwp_pointer_gesture_swipe_v1
)
{
wl_proxy_marshal_flags
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_swipe_v1
ZWP_POINTER_GESTURE_SWIPE_V1_DESTROY
NULL
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_swipe_v1
)
WL_MARSHAL_FLAG_DESTROY
)
;
}
struct
zwp_pointer_gesture_pinch_v1_listener
{
void
(
*
begin
)
(
void
*
data
struct
zwp_pointer_gesture_pinch_v1
*
zwp_pointer_gesture_pinch_v1
uint32_t
serial
uint32_t
time
struct
wl_surface
*
surface
uint32_t
fingers
)
;
void
(
*
update
)
(
void
*
data
struct
zwp_pointer_gesture_pinch_v1
*
zwp_pointer_gesture_pinch_v1
uint32_t
time
wl_fixed_t
dx
wl_fixed_t
dy
wl_fixed_t
scale
wl_fixed_t
rotation
)
;
void
(
*
end
)
(
void
*
data
struct
zwp_pointer_gesture_pinch_v1
*
zwp_pointer_gesture_pinch_v1
uint32_t
serial
uint32_t
time
int32_t
cancelled
)
;
}
;
static
inline
int
zwp_pointer_gesture_pinch_v1_add_listener
(
struct
zwp_pointer_gesture_pinch_v1
*
zwp_pointer_gesture_pinch_v1
const
struct
zwp_pointer_gesture_pinch_v1_listener
*
listener
void
*
data
)
{
return
wl_proxy_add_listener
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_pinch_v1
(
void
(
*
*
)
(
void
)
)
listener
data
)
;
}
#
define
ZWP_POINTER_GESTURE_PINCH_V1_DESTROY
0
#
define
ZWP_POINTER_GESTURE_PINCH_V1_BEGIN_SINCE_VERSION
1
#
define
ZWP_POINTER_GESTURE_PINCH_V1_UPDATE_SINCE_VERSION
1
#
define
ZWP_POINTER_GESTURE_PINCH_V1_END_SINCE_VERSION
1
#
define
ZWP_POINTER_GESTURE_PINCH_V1_DESTROY_SINCE_VERSION
1
static
inline
void
zwp_pointer_gesture_pinch_v1_set_user_data
(
struct
zwp_pointer_gesture_pinch_v1
*
zwp_pointer_gesture_pinch_v1
void
*
user_data
)
{
wl_proxy_set_user_data
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_pinch_v1
user_data
)
;
}
static
inline
void
*
zwp_pointer_gesture_pinch_v1_get_user_data
(
struct
zwp_pointer_gesture_pinch_v1
*
zwp_pointer_gesture_pinch_v1
)
{
return
wl_proxy_get_user_data
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_pinch_v1
)
;
}
static
inline
uint32_t
zwp_pointer_gesture_pinch_v1_get_version
(
struct
zwp_pointer_gesture_pinch_v1
*
zwp_pointer_gesture_pinch_v1
)
{
return
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_pinch_v1
)
;
}
static
inline
void
zwp_pointer_gesture_pinch_v1_destroy
(
struct
zwp_pointer_gesture_pinch_v1
*
zwp_pointer_gesture_pinch_v1
)
{
wl_proxy_marshal_flags
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_pinch_v1
ZWP_POINTER_GESTURE_PINCH_V1_DESTROY
NULL
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_pinch_v1
)
WL_MARSHAL_FLAG_DESTROY
)
;
}
struct
zwp_pointer_gesture_hold_v1_listener
{
void
(
*
begin
)
(
void
*
data
struct
zwp_pointer_gesture_hold_v1
*
zwp_pointer_gesture_hold_v1
uint32_t
serial
uint32_t
time
struct
wl_surface
*
surface
uint32_t
fingers
)
;
void
(
*
end
)
(
void
*
data
struct
zwp_pointer_gesture_hold_v1
*
zwp_pointer_gesture_hold_v1
uint32_t
serial
uint32_t
time
int32_t
cancelled
)
;
}
;
static
inline
int
zwp_pointer_gesture_hold_v1_add_listener
(
struct
zwp_pointer_gesture_hold_v1
*
zwp_pointer_gesture_hold_v1
const
struct
zwp_pointer_gesture_hold_v1_listener
*
listener
void
*
data
)
{
return
wl_proxy_add_listener
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_hold_v1
(
void
(
*
*
)
(
void
)
)
listener
data
)
;
}
#
define
ZWP_POINTER_GESTURE_HOLD_V1_DESTROY
0
#
define
ZWP_POINTER_GESTURE_HOLD_V1_BEGIN_SINCE_VERSION
3
#
define
ZWP_POINTER_GESTURE_HOLD_V1_END_SINCE_VERSION
3
#
define
ZWP_POINTER_GESTURE_HOLD_V1_DESTROY_SINCE_VERSION
3
static
inline
void
zwp_pointer_gesture_hold_v1_set_user_data
(
struct
zwp_pointer_gesture_hold_v1
*
zwp_pointer_gesture_hold_v1
void
*
user_data
)
{
wl_proxy_set_user_data
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_hold_v1
user_data
)
;
}
static
inline
void
*
zwp_pointer_gesture_hold_v1_get_user_data
(
struct
zwp_pointer_gesture_hold_v1
*
zwp_pointer_gesture_hold_v1
)
{
return
wl_proxy_get_user_data
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_hold_v1
)
;
}
static
inline
uint32_t
zwp_pointer_gesture_hold_v1_get_version
(
struct
zwp_pointer_gesture_hold_v1
*
zwp_pointer_gesture_hold_v1
)
{
return
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_hold_v1
)
;
}
static
inline
void
zwp_pointer_gesture_hold_v1_destroy
(
struct
zwp_pointer_gesture_hold_v1
*
zwp_pointer_gesture_hold_v1
)
{
wl_proxy_marshal_flags
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_hold_v1
ZWP_POINTER_GESTURE_HOLD_V1_DESTROY
NULL
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
zwp_pointer_gesture_hold_v1
)
WL_MARSHAL_FLAG_DESTROY
)
;
}
#
ifdef
__cplusplus
}
#
endif
#
endif
