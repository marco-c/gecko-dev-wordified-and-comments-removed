#
ifndef
XDG_ACTIVATION_V1_CLIENT_PROTOCOL_H
#
define
XDG_ACTIVATION_V1_CLIENT_PROTOCOL_H
#
include
<
stdint
.
h
>
#
include
<
stddef
.
h
>
#
include
"
wayland
-
client
.
h
"
#
ifdef
__cplusplus
extern
"
C
"
{
#
endif
struct
wl_seat
;
struct
wl_surface
;
struct
xdg_activation_token_v1
;
struct
xdg_activation_v1
;
#
ifndef
XDG_ACTIVATION_V1_INTERFACE
#
define
XDG_ACTIVATION_V1_INTERFACE
extern
const
struct
wl_interface
xdg_activation_v1_interface
;
#
endif
#
ifndef
XDG_ACTIVATION_TOKEN_V1_INTERFACE
#
define
XDG_ACTIVATION_TOKEN_V1_INTERFACE
extern
const
struct
wl_interface
xdg_activation_token_v1_interface
;
#
endif
#
define
XDG_ACTIVATION_V1_DESTROY
0
#
define
XDG_ACTIVATION_V1_GET_ACTIVATION_TOKEN
1
#
define
XDG_ACTIVATION_V1_ACTIVATE
2
#
define
XDG_ACTIVATION_V1_DESTROY_SINCE_VERSION
1
#
define
XDG_ACTIVATION_V1_GET_ACTIVATION_TOKEN_SINCE_VERSION
1
#
define
XDG_ACTIVATION_V1_ACTIVATE_SINCE_VERSION
1
static
inline
void
xdg_activation_v1_set_user_data
(
struct
xdg_activation_v1
*
xdg_activation_v1
void
*
user_data
)
{
wl_proxy_set_user_data
(
(
struct
wl_proxy
*
)
xdg_activation_v1
user_data
)
;
}
static
inline
void
*
xdg_activation_v1_get_user_data
(
struct
xdg_activation_v1
*
xdg_activation_v1
)
{
return
wl_proxy_get_user_data
(
(
struct
wl_proxy
*
)
xdg_activation_v1
)
;
}
static
inline
uint32_t
xdg_activation_v1_get_version
(
struct
xdg_activation_v1
*
xdg_activation_v1
)
{
return
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
xdg_activation_v1
)
;
}
static
inline
void
xdg_activation_v1_destroy
(
struct
xdg_activation_v1
*
xdg_activation_v1
)
{
wl_proxy_marshal
(
(
struct
wl_proxy
*
)
xdg_activation_v1
XDG_ACTIVATION_V1_DESTROY
)
;
wl_proxy_destroy
(
(
struct
wl_proxy
*
)
xdg_activation_v1
)
;
}
static
inline
struct
xdg_activation_token_v1
*
xdg_activation_v1_get_activation_token
(
struct
xdg_activation_v1
*
xdg_activation_v1
)
{
struct
wl_proxy
*
id
;
id
=
wl_proxy_marshal_constructor
(
(
struct
wl_proxy
*
)
xdg_activation_v1
XDG_ACTIVATION_V1_GET_ACTIVATION_TOKEN
&
xdg_activation_token_v1_interface
NULL
)
;
return
(
struct
xdg_activation_token_v1
*
)
id
;
}
static
inline
void
xdg_activation_v1_activate
(
struct
xdg_activation_v1
*
xdg_activation_v1
const
char
*
token
struct
wl_surface
*
surface
)
{
wl_proxy_marshal
(
(
struct
wl_proxy
*
)
xdg_activation_v1
XDG_ACTIVATION_V1_ACTIVATE
token
surface
)
;
}
#
ifndef
XDG_ACTIVATION_TOKEN_V1_ERROR_ENUM
#
define
XDG_ACTIVATION_TOKEN_V1_ERROR_ENUM
enum
xdg_activation_token_v1_error
{
XDG_ACTIVATION_TOKEN_V1_ERROR_ALREADY_USED
=
0
}
;
#
endif
struct
xdg_activation_token_v1_listener
{
void
(
*
done
)
(
void
*
data
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
const
char
*
token
)
;
}
;
static
inline
int
xdg_activation_token_v1_add_listener
(
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
const
struct
xdg_activation_token_v1_listener
*
listener
void
*
data
)
{
return
wl_proxy_add_listener
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
(
void
(
*
*
)
(
void
)
)
listener
data
)
;
}
#
define
XDG_ACTIVATION_TOKEN_V1_SET_SERIAL
0
#
define
XDG_ACTIVATION_TOKEN_V1_SET_APP_ID
1
#
define
XDG_ACTIVATION_TOKEN_V1_SET_SURFACE
2
#
define
XDG_ACTIVATION_TOKEN_V1_COMMIT
3
#
define
XDG_ACTIVATION_TOKEN_V1_DESTROY
4
#
define
XDG_ACTIVATION_TOKEN_V1_DONE_SINCE_VERSION
1
#
define
XDG_ACTIVATION_TOKEN_V1_SET_SERIAL_SINCE_VERSION
1
#
define
XDG_ACTIVATION_TOKEN_V1_SET_APP_ID_SINCE_VERSION
1
#
define
XDG_ACTIVATION_TOKEN_V1_SET_SURFACE_SINCE_VERSION
1
#
define
XDG_ACTIVATION_TOKEN_V1_COMMIT_SINCE_VERSION
1
#
define
XDG_ACTIVATION_TOKEN_V1_DESTROY_SINCE_VERSION
1
static
inline
void
xdg_activation_token_v1_set_user_data
(
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
void
*
user_data
)
{
wl_proxy_set_user_data
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
user_data
)
;
}
static
inline
void
*
xdg_activation_token_v1_get_user_data
(
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
)
{
return
wl_proxy_get_user_data
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
)
;
}
static
inline
uint32_t
xdg_activation_token_v1_get_version
(
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
)
{
return
wl_proxy_get_version
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
)
;
}
static
inline
void
xdg_activation_token_v1_set_serial
(
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
uint32_t
serial
struct
wl_seat
*
seat
)
{
wl_proxy_marshal
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
XDG_ACTIVATION_TOKEN_V1_SET_SERIAL
serial
seat
)
;
}
static
inline
void
xdg_activation_token_v1_set_app_id
(
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
const
char
*
app_id
)
{
wl_proxy_marshal
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
XDG_ACTIVATION_TOKEN_V1_SET_APP_ID
app_id
)
;
}
static
inline
void
xdg_activation_token_v1_set_surface
(
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
struct
wl_surface
*
surface
)
{
wl_proxy_marshal
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
XDG_ACTIVATION_TOKEN_V1_SET_SURFACE
surface
)
;
}
static
inline
void
xdg_activation_token_v1_commit
(
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
)
{
wl_proxy_marshal
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
XDG_ACTIVATION_TOKEN_V1_COMMIT
)
;
}
static
inline
void
xdg_activation_token_v1_destroy
(
struct
xdg_activation_token_v1
*
xdg_activation_token_v1
)
{
wl_proxy_marshal
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
XDG_ACTIVATION_TOKEN_V1_DESTROY
)
;
wl_proxy_destroy
(
(
struct
wl_proxy
*
)
xdg_activation_token_v1
)
;
}
#
ifdef
__cplusplus
}
#
endif
#
endif
