#
ifndef
__nsLookAndFeel
#
define
__nsLookAndFeel
#
include
"
nsXPLookAndFeel
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
gfxFont
.
h
"
struct
_GtkStyle
;
class
nsLookAndFeel
final
:
public
nsXPLookAndFeel
{
public
:
nsLookAndFeel
(
)
;
virtual
~
nsLookAndFeel
(
)
;
virtual
void
NativeInit
(
)
final
;
virtual
void
RefreshImpl
(
)
;
virtual
nsresult
NativeGetColor
(
ColorID
aID
nscolor
&
aResult
)
;
virtual
nsresult
GetIntImpl
(
IntID
aID
int32_t
&
aResult
)
;
virtual
nsresult
GetFloatImpl
(
FloatID
aID
float
&
aResult
)
;
virtual
bool
GetFontImpl
(
FontID
aID
nsString
&
aFontName
gfxFontStyle
&
aFontStyle
float
aDevPixPerCSSPixel
)
;
virtual
char16_t
GetPasswordCharacterImpl
(
)
;
virtual
bool
GetEchoPasswordImpl
(
)
;
bool
IsCSDAvailable
(
)
const
{
return
mCSDAvailable
;
}
protected
:
bool
mDefaultFontCached
;
bool
mButtonFontCached
;
bool
mFieldFontCached
;
bool
mMenuFontCached
;
nsString
mDefaultFontName
;
nsString
mButtonFontName
;
nsString
mFieldFontName
;
nsString
mMenuFontName
;
gfxFontStyle
mDefaultFontStyle
;
gfxFontStyle
mButtonFontStyle
;
gfxFontStyle
mFieldFontStyle
;
gfxFontStyle
mMenuFontStyle
;
nscolor
mInfoBackground
;
nscolor
mInfoText
;
nscolor
mMenuBackground
;
nscolor
mMenuBarText
;
nscolor
mMenuBarHoverText
;
nscolor
mMenuText
;
nscolor
mMenuTextInactive
;
nscolor
mMenuHover
;
nscolor
mMenuHoverText
;
nscolor
mButtonDefault
;
nscolor
mButtonText
;
nscolor
mButtonHoverText
;
nscolor
mButtonHoverFace
;
nscolor
mFrameOuterLightBorder
;
nscolor
mFrameInnerDarkBorder
;
nscolor
mOddCellBackground
;
nscolor
mNativeHyperLinkText
;
nscolor
mComboBoxText
;
nscolor
mComboBoxBackground
;
nscolor
mMozFieldText
;
nscolor
mMozFieldBackground
;
nscolor
mMozWindowText
;
nscolor
mMozWindowBackground
;
nscolor
mMozWindowActiveBorder
;
nscolor
mMozWindowInactiveBorder
;
nscolor
mMozWindowInactiveCaption
;
nscolor
mTextSelectedText
;
nscolor
mTextSelectedBackground
;
nscolor
mMozScrollbar
;
nscolor
mInfoBarText
;
char16_t
mInvisibleCharacter
;
float
mCaretRatio
;
bool
mMenuSupportsDrag
;
bool
mCSDAvailable
;
bool
mCSDMaximizeButton
;
bool
mCSDMinimizeButton
;
bool
mCSDCloseButton
;
bool
mInitialized
;
void
EnsureInit
(
)
;
}
;
#
endif
