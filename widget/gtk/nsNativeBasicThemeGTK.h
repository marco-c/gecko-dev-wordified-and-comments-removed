#
ifndef
nsNativeBasicThemeGTK_h
#
define
nsNativeBasicThemeGTK_h
#
include
"
nsNativeBasicTheme
.
h
"
class
nsNativeBasicThemeGTK
:
public
nsNativeBasicTheme
{
public
:
nsNativeBasicThemeGTK
(
)
=
default
;
NS_IMETHOD
GetMinimumWidgetSize
(
nsPresContext
*
aPresContext
nsIFrame
*
StyleAppearance
mozilla
:
:
LayoutDeviceIntSize
*
aResult
bool
*
aIsOverridable
)
override
;
nsITheme
:
:
Transparency
GetWidgetTransparency
(
nsIFrame
*
StyleAppearance
)
override
;
bool
PaintScrollbarThumb
(
DrawTarget
&
const
LayoutDeviceRect
&
bool
aHorizontal
nsIFrame
*
const
ComputedStyle
&
aStyle
const
EventStates
&
aElementState
const
EventStates
&
aDocumentState
UseSystemColors
DPIRatio
)
override
;
bool
PaintScrollbarThumb
(
WebRenderBackendData
&
const
LayoutDeviceRect
&
bool
aHorizontal
nsIFrame
*
const
ComputedStyle
&
aStyle
const
EventStates
&
aElementState
const
EventStates
&
aDocumentState
UseSystemColors
DPIRatio
)
override
;
template
<
typename
PaintBackendData
>
bool
DoPaintScrollbarThumb
(
PaintBackendData
&
const
LayoutDeviceRect
&
bool
aHorizontal
nsIFrame
*
const
ComputedStyle
&
const
EventStates
&
aElementState
const
EventStates
&
aDocumentState
UseSystemColors
DPIRatio
)
;
bool
ThemeSupportsScrollbarButtons
(
)
override
;
protected
:
virtual
~
nsNativeBasicThemeGTK
(
)
=
default
;
}
;
#
endif
