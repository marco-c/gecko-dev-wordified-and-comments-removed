#
include
"
mozilla
/
Logging
.
h
"
#
include
"
TaskbarProgress
.
h
"
#
include
"
nsWindow
.
h
"
#
include
"
WidgetUtils
.
h
"
#
include
"
nsPIDOMWindow
.
h
"
using
mozilla
:
:
LogLevel
;
static
mozilla
:
:
LazyLogModule
gGtkTaskbarProgressLog
(
"
nsIGtkTaskbarProgress
"
)
;
NS_IMPL_ISUPPORTS
(
TaskbarProgress
nsIGtkTaskbarProgress
nsITaskbarProgress
)
TaskbarProgress
:
:
TaskbarProgress
(
)
:
mPrimaryWindow
(
nullptr
)
{
MOZ_LOG
(
gGtkTaskbarProgressLog
LogLevel
:
:
Info
(
"
%
p
TaskbarProgress
(
)
"
this
)
)
;
}
TaskbarProgress
:
:
~
TaskbarProgress
(
)
{
MOZ_LOG
(
gGtkTaskbarProgressLog
LogLevel
:
:
Info
(
"
%
p
~
TaskbarProgress
(
)
"
this
)
)
;
}
NS_IMETHODIMP
TaskbarProgress
:
:
SetProgressState
(
nsTaskbarProgressState
aState
uint64_t
aCurrentValue
uint64_t
aMaxValue
)
{
#
ifdef
MOZ_X11
NS_ENSURE_TRUE
(
mPrimaryWindow
!
=
nullptr
NS_ERROR_FAILURE
)
;
NS_ENSURE_ARG_RANGE
(
aState
0
STATE_PAUSED
)
;
if
(
aState
=
=
STATE_NO_PROGRESS
|
|
aState
=
=
STATE_INDETERMINATE
)
{
NS_ENSURE_TRUE
(
aCurrentValue
=
=
0
NS_ERROR_INVALID_ARG
)
;
NS_ENSURE_TRUE
(
aMaxValue
=
=
0
NS_ERROR_INVALID_ARG
)
;
}
NS_ENSURE_TRUE
(
(
aCurrentValue
<
=
aMaxValue
)
NS_ERROR_ILLEGAL_VALUE
)
;
gulong
progress
;
if
(
aMaxValue
=
=
0
)
{
progress
=
0
;
}
else
{
progress
=
(
gulong
)
(
(
(
double
)
aCurrentValue
/
aMaxValue
)
*
100
.
0
)
;
}
if
(
progress
=
=
mCurrentProgress
)
{
return
NS_OK
;
}
mCurrentProgress
=
progress
;
MOZ_LOG
(
gGtkTaskbarProgressLog
LogLevel
:
:
Debug
(
"
GtkTaskbarProgress
:
:
SetProgressState
progress
:
%
lu
"
progress
)
)
;
mPrimaryWindow
-
>
SetProgress
(
progress
)
;
#
endif
return
NS_OK
;
}
NS_IMETHODIMP
TaskbarProgress
:
:
SetPrimaryWindow
(
mozIDOMWindowProxy
*
aWindow
)
{
NS_ENSURE_TRUE
(
aWindow
!
=
nullptr
NS_ERROR_ILLEGAL_VALUE
)
;
auto
*
parent
=
nsPIDOMWindowOuter
:
:
From
(
aWindow
)
;
RefPtr
<
nsIWidget
>
widget
=
mozilla
:
:
widget
:
:
WidgetUtils
:
:
DOMWindowToWidget
(
parent
)
;
mPrimaryWindow
=
static_cast
<
nsWindow
*
>
(
widget
.
get
(
)
)
;
mCurrentProgress
=
0
;
MOZ_LOG
(
gGtkTaskbarProgressLog
LogLevel
:
:
Debug
(
"
GtkTaskbarProgress
:
:
SetPrimaryWindow
window
:
%
p
"
mPrimaryWindow
.
get
(
)
)
)
;
return
NS_OK
;
}
