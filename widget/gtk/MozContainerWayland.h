#
ifndef
__MOZ_CONTAINER_WAYLAND_H__
#
define
__MOZ_CONTAINER_WAYLAND_H__
#
include
<
gtk
/
gtk
.
h
>
#
include
<
functional
>
#
include
<
vector
>
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
WindowSurface
.
h
"
struct
wl_surface
;
struct
wl_subsurface
;
struct
MozContainerWayland
{
struct
wl_surface
*
surface
;
struct
wl_subsurface
*
subsurface
;
int
subsurface_dx
subsurface_dy
;
struct
wl_egl_window
*
eglwindow
;
struct
wl_callback
*
frame_callback_handler
;
struct
wp_viewport
*
viewport
;
gboolean
opaque_region_needs_updates
;
gboolean
opaque_region_subtract_corners
;
gboolean
opaque_region_used
;
gboolean
surface_needs_clear
;
gboolean
ready_to_draw
;
gboolean
before_first_size_alloc
;
int
buffer_scale
;
RefPtr
<
mozilla
:
:
widget
:
:
WindowSurface
>
window_surface
;
std
:
:
vector
<
std
:
:
function
<
void
(
void
)
>
>
initial_draw_cbs
;
mozilla
:
:
Mutex
*
container_lock
;
}
;
struct
_MozContainer
;
struct
_MozContainerClass
;
typedef
struct
_MozContainer
MozContainer
;
typedef
struct
_MozContainerClass
MozContainerClass
;
void
moz_container_wayland_class_init
(
MozContainerClass
*
klass
)
;
void
moz_container_wayland_init
(
MozContainerWayland
*
container
)
;
struct
wl_surface
*
moz_container_wayland_surface_lock
(
MozContainer
*
container
)
;
void
moz_container_wayland_surface_unlock
(
MozContainer
*
container
struct
wl_surface
*
*
surface
)
;
struct
wl_egl_window
*
moz_container_wayland_get_egl_window
(
MozContainer
*
container
double
scale
)
;
gboolean
moz_container_wayland_has_egl_window
(
MozContainer
*
container
)
;
gboolean
moz_container_wayland_surface_needs_clear
(
MozContainer
*
container
)
;
void
moz_container_wayland_egl_window_set_size
(
MozContainer
*
container
int
width
int
height
)
;
void
moz_container_wayland_set_scale_factor
(
MozContainer
*
container
)
;
void
moz_container_wayland_add_initial_draw_callback
(
MozContainer
*
container
const
std
:
:
function
<
void
(
void
)
>
&
initial_draw_cb
)
;
wl_surface
*
moz_gtk_widget_get_wl_surface
(
GtkWidget
*
aWidget
)
;
void
moz_container_wayland_update_opaque_region
(
MozContainer
*
container
bool
aSubtractCorners
)
;
gboolean
moz_container_wayland_can_draw
(
MozContainer
*
container
)
;
double
moz_container_wayland_get_scale
(
MozContainer
*
container
)
;
struct
wp_viewport
*
moz_container_wayland_get_viewport
(
MozContainer
*
container
)
;
void
moz_container_wayland_set_window_surface
(
MozContainer
*
container
RefPtr
<
mozilla
:
:
widget
:
:
WindowSurface
>
window_surface
)
;
#
endif
