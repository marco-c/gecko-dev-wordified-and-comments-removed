#
ifndef
GTKTOOLKIT_H
#
define
GTKTOOLKIT_H
#
include
"
nsString
.
h
"
#
include
<
gtk
/
gtk
.
h
>
class
nsGTKToolkit
final
{
public
:
nsGTKToolkit
(
)
=
default
;
static
nsGTKToolkit
*
GetToolkit
(
)
;
static
void
Shutdown
(
)
{
delete
gToolkit
;
gToolkit
=
nullptr
;
}
void
SetStartupToken
(
const
nsACString
&
aToken
)
{
mStartupToken
=
aToken
;
}
const
nsCString
&
GetStartupToken
(
)
const
{
return
mStartupToken
;
}
void
SetFocusTimestamp
(
uint32_t
aTimestamp
)
{
mFocusTimestamp
=
aTimestamp
;
}
uint32_t
GetFocusTimestamp
(
)
const
{
return
mFocusTimestamp
;
}
private
:
static
nsGTKToolkit
*
gToolkit
;
nsCString
mStartupToken
;
uint32_t
mFocusTimestamp
=
0
;
}
;
#
endif
