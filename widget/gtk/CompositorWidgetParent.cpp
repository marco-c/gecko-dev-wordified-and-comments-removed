#
include
"
CompositorWidgetParent
.
h
"
#
include
"
mozilla
/
Unused
.
h
"
#
include
"
mozilla
/
widget
/
PlatformWidgetTypes
.
h
"
namespace
mozilla
{
namespace
widget
{
CompositorWidgetParent
:
:
CompositorWidgetParent
(
const
CompositorWidgetInitData
&
aInitData
const
layers
:
:
CompositorOptions
&
aOptions
)
:
GtkCompositorWidget
(
aInitData
.
get_GtkCompositorWidgetInitData
(
)
aOptions
nullptr
)
{
MOZ_ASSERT
(
XRE_GetProcessType
(
)
=
=
GeckoProcessType_GPU
)
;
}
CompositorWidgetParent
:
:
~
CompositorWidgetParent
(
)
=
default
;
void
CompositorWidgetParent
:
:
ObserveVsync
(
VsyncObserver
*
aObserver
)
{
if
(
aObserver
)
{
Unused
<
<
SendObserveVsync
(
)
;
}
else
{
Unused
<
<
SendUnobserveVsync
(
)
;
}
mVsyncObserver
=
aObserver
;
}
RefPtr
<
VsyncObserver
>
CompositorWidgetParent
:
:
GetVsyncObserver
(
)
const
{
MOZ_ASSERT
(
XRE_GetProcessType
(
)
=
=
GeckoProcessType_GPU
)
;
return
mVsyncObserver
;
}
mozilla
:
:
ipc
:
:
IPCResult
CompositorWidgetParent
:
:
RecvNotifyClientSizeChanged
(
const
LayoutDeviceIntSize
&
aClientSize
)
{
NotifyClientSizeChanged
(
aClientSize
)
;
return
IPC_OK
(
)
;
}
}
}
