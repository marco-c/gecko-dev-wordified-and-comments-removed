#
ifndef
nsUserIdleServiceGTK_h__
#
define
nsUserIdleServiceGTK_h__
#
include
"
nsUserIdleService
.
h
"
#
include
"
mozilla
/
AppShutdown
.
h
"
#
ifdef
MOZ_X11
#
include
<
X11
/
Xlib
.
h
>
#
include
<
X11
/
Xutil
.
h
>
#
include
<
gdk
/
gdkx
.
h
>
#
endif
#
ifdef
MOZ_X11
typedef
struct
{
Window
window
;
int
state
;
int
kind
;
unsigned
long
til_or_since
;
unsigned
long
idle
;
unsigned
long
event_mask
;
}
XScreenSaverInfo
;
#
endif
class
nsUserIdleServiceGTK
:
public
nsUserIdleService
{
public
:
NS_INLINE_DECL_REFCOUNTING_INHERITED
(
nsUserIdleServiceGTK
nsUserIdleService
)
virtual
bool
PollIdleTime
(
uint32_t
*
aIdleTime
)
override
;
static
already_AddRefed
<
nsUserIdleServiceGTK
>
GetInstance
(
)
{
RefPtr
<
nsUserIdleServiceGTK
>
idleService
=
nsUserIdleService
:
:
GetInstance
(
)
.
downcast
<
nsUserIdleServiceGTK
>
(
)
;
if
(
!
idleService
)
{
if
(
mozilla
:
:
AppShutdown
:
:
IsInOrBeyond
(
mozilla
:
:
ShutdownPhase
:
:
AppShutdownConfirmed
)
)
{
return
nullptr
;
}
idleService
=
new
nsUserIdleServiceGTK
(
)
;
}
return
idleService
.
forget
(
)
;
}
private
:
~
nsUserIdleServiceGTK
(
)
;
#
ifdef
MOZ_X11
XScreenSaverInfo
*
mXssInfo
;
#
endif
protected
:
nsUserIdleServiceGTK
(
)
;
}
;
#
endif
