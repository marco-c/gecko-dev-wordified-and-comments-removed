#
ifndef
__MOZ_CONTAINER_H__
#
define
__MOZ_CONTAINER_H__
#
ifdef
MOZ_WAYLAND
#
include
"
MozContainerWayland
.
h
"
#
endif
#
include
<
gtk
/
gtk
.
h
>
#
include
<
functional
>
#
define
MOZ_CONTAINER_TYPE
(
moz_container_get_type
(
)
)
#
define
MOZ_CONTAINER
(
obj
)
\
(
G_TYPE_CHECK_INSTANCE_CAST
(
(
obj
)
MOZ_CONTAINER_TYPE
MozContainer
)
)
#
define
MOZ_CONTAINER_CLASS
(
klass
)
\
(
G_TYPE_CHECK_CLASS_CAST
(
(
klass
)
MOZ_CONTAINER_TYPE
MozContainerClass
)
)
#
define
IS_MOZ_CONTAINER
(
obj
)
\
(
G_TYPE_CHECK_INSTANCE_TYPE
(
(
obj
)
MOZ_CONTAINER_TYPE
)
)
#
define
IS_MOZ_CONTAINER_CLASS
(
klass
)
\
(
G_TYPE_CHECK_CLASS_TYPE
(
(
klass
)
MOZ_CONTAINER_TYPE
)
)
#
define
MOZ_CONTAINER_GET_CLASS
(
obj
)
\
(
G_TYPE_INSTANCE_GET_CLASS
(
(
obj
)
MOZ_CONTAINER_TYPE
MozContainerClass
)
)
#
define
TITLEBAR_SHAPE_MASK_HEIGHT
10
typedef
struct
_MozContainer
MozContainer
;
typedef
struct
_MozContainerClass
MozContainerClass
;
struct
_MozContainer
{
GtkContainer
container
;
GList
*
children
;
gboolean
force_default_visual
;
#
ifdef
MOZ_WAYLAND
MozContainerWayland
wl_container
;
#
endif
}
;
struct
_MozContainerClass
{
GtkContainerClass
parent_class
;
}
;
GType
moz_container_get_type
(
void
)
;
GtkWidget
*
moz_container_new
(
void
)
;
void
moz_container_put
(
MozContainer
*
container
GtkWidget
*
child_widget
gint
x
gint
y
)
;
void
moz_container_force_default_visual
(
MozContainer
*
container
)
;
#
endif
