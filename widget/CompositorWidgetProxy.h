#
ifndef
mozilla_widget_CompositorWidgetProxy_h__
#
define
mozilla_widget_CompositorWidgetProxy_h__
#
include
"
nsISupports
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
Units
.
h
"
namespace
mozilla
{
namespace
layers
{
class
Compositor
;
class
LayerManagerComposite
;
class
Compositor
;
class
Composer2D
;
}
namespace
gfx
{
class
DrawTarget
;
}
namespace
widget
{
class
CompositorWidgetProxy
{
public
:
virtual
bool
PreRender
(
layers
:
:
LayerManagerComposite
*
aManager
)
{
return
true
;
}
virtual
void
PostRender
(
layers
:
:
LayerManagerComposite
*
aManager
)
{
}
virtual
void
DrawWindowUnderlay
(
layers
:
:
LayerManagerComposite
*
aManager
LayoutDeviceIntRect
aRect
)
{
}
virtual
void
DrawWindowOverlay
(
layers
:
:
LayerManagerComposite
*
aManager
LayoutDeviceIntRect
aRect
)
{
}
virtual
already_AddRefed
<
gfx
:
:
DrawTarget
>
StartRemoteDrawing
(
)
=
0
;
virtual
already_AddRefed
<
gfx
:
:
DrawTarget
>
StartRemoteDrawingInRegion
(
LayoutDeviceIntRegion
&
aInvalidRegion
layers
:
:
BufferMode
*
aBufferMode
)
{
return
StartRemoteDrawing
(
)
;
}
virtual
void
EndRemoteDrawing
(
)
{
}
virtual
void
EndRemoteDrawingInRegion
(
gfx
:
:
DrawTarget
*
aDrawTarget
LayoutDeviceIntRegion
&
aInvalidRegion
)
{
EndRemoteDrawing
(
)
;
}
virtual
void
CleanupRemoteDrawing
(
)
=
0
;
virtual
void
CleanupWindowEffects
(
)
{
}
virtual
already_AddRefed
<
gfx
:
:
DrawTarget
>
CreateBackBufferDrawTarget
(
gfx
:
:
DrawTarget
*
aScreenTarget
const
LayoutDeviceIntRect
&
aRect
const
LayoutDeviceIntRect
&
aClearRect
)
=
0
;
virtual
bool
InitCompositor
(
layers
:
:
Compositor
*
aCompositor
)
{
return
true
;
}
virtual
LayoutDeviceIntSize
GetClientSize
(
)
=
0
;
virtual
uint32_t
GetGLFrameBufferFormat
(
)
{
return
0
;
}
virtual
layers
:
:
Composer2D
*
GetComposer2D
(
)
{
return
nullptr
;
}
virtual
nsIWidget
*
RealWidget
(
)
=
0
;
}
;
}
}
#
endif
