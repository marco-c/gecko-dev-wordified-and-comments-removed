#
ifndef
nsPrinter_h__
#
define
nsPrinter_h__
#
include
"
nsPrinterBase
.
h
"
#
include
"
nsPaper
.
h
"
#
include
"
nsString
.
h
"
class
nsPrinter
final
:
public
nsPrinterBase
{
public
:
NS_IMETHOD
GetName
(
nsAString
&
aName
)
override
;
bool
SupportsDuplex
(
)
const
final
{
return
false
;
}
bool
SupportsColor
(
)
const
final
{
return
false
;
}
nsTArray
<
mozilla
:
:
PaperInfo
>
PaperList
(
)
const
final
{
return
{
}
;
}
MarginDouble
GetMarginsForPaper
(
uint64_t
)
const
final
{
MOZ_ASSERT_UNREACHABLE
(
"
We
have
no
paper
so
this
shouldn
'
t
be
reached
"
)
;
return
{
}
;
}
nsPrinter
(
)
=
delete
;
static
already_AddRefed
<
nsPrinter
>
Create
(
const
nsAString
&
aName
)
;
private
:
explicit
nsPrinter
(
const
nsAString
&
aName
)
;
~
nsPrinter
(
)
;
const
nsString
mName
;
}
;
#
endif
