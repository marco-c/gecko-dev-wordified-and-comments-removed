#
ifndef
mozilla_widget_ScrollbarDrawing_h
#
define
mozilla_widget_ScrollbarDrawing_h
#
include
"
nsColor
.
h
"
#
include
"
nsITheme
.
h
"
#
include
"
Units
.
h
"
#
include
"
mozilla
/
Array
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
DrawTarget
;
}
namespace
widget
{
struct
ScrollbarParams
{
bool
overlay
=
false
;
bool
rolledOver
=
false
;
bool
small
=
false
;
bool
horizontal
=
false
;
bool
rtl
=
false
;
bool
onDarkBackground
=
false
;
bool
custom
=
false
;
nscolor
trackColor
=
NS_RGBA
(
0
0
0
0
)
;
nscolor
faceColor
=
NS_RGBA
(
0
0
0
0
)
;
}
;
class
ScrollbarDrawingMac
final
{
public
:
struct
FillRect
{
gfx
:
:
Rect
mRect
;
nscolor
mColor
;
}
;
static
CSSIntCoord
GetScrollbarSize
(
StyleScrollbarWidth
bool
aOverlay
)
;
static
LayoutDeviceIntCoord
GetScrollbarSize
(
StyleScrollbarWidth
bool
aOverlay
float
aDpiRatio
)
;
static
LayoutDeviceIntSize
GetMinimumWidgetSize
(
StyleAppearance
aAppearance
nsIFrame
*
aFrame
float
aDpiRatio
)
;
static
ScrollbarParams
ComputeScrollbarParams
(
nsIFrame
*
aFrame
const
ComputedStyle
&
aStyle
bool
aIsHorizontal
)
;
struct
ThumbRect
{
gfx
:
:
Rect
mRect
;
nscolor
mFillColor
;
nscolor
mStrokeColor
;
float
mStrokeWidth
;
float
mStrokeOutset
;
}
;
static
ThumbRect
GetThumbRect
(
const
gfx
:
:
Rect
&
aRect
const
ScrollbarParams
&
aParams
float
aScale
)
;
using
ScrollbarTrackRects
=
Array
<
FillRect
4
>
;
static
bool
GetScrollbarTrackRects
(
const
gfx
:
:
Rect
&
aRect
const
ScrollbarParams
&
aParams
float
aScale
ScrollbarTrackRects
&
)
;
using
ScrollCornerRects
=
Array
<
FillRect
7
>
;
static
bool
GetScrollCornerRects
(
const
gfx
:
:
Rect
&
aRect
const
ScrollbarParams
&
aParams
float
aScale
ScrollCornerRects
&
)
;
}
;
}
}
#
endif
