#
ifndef
mozilla_widget_RemotePlugin_h__
#
define
mozilla_widget_RemotePlugin_h__
#
ifndef
XP_WIN
#
error
"
Plugin
widgets
are
Windows
-
only
.
"
#
endif
#
include
"
PuppetWidget
.
h
"
#
include
"
mozilla
/
dom
/
BrowserChild
.
h
"
namespace
mozilla
{
namespace
plugins
{
class
PluginWidgetChild
;
}
namespace
widget
{
class
PluginWidgetProxy
final
:
public
PuppetWidget
{
public
:
explicit
PluginWidgetProxy
(
dom
:
:
BrowserChild
*
aBrowserChild
mozilla
:
:
plugins
:
:
PluginWidgetChild
*
aChannel
)
;
protected
:
virtual
~
PluginWidgetProxy
(
)
;
public
:
NS_DECL_ISUPPORTS_INHERITED
using
PuppetWidget
:
:
Create
;
virtual
MOZ_MUST_USE
nsresult
Create
(
nsIWidget
*
aParent
nsNativeWidget
aNativeParent
const
LayoutDeviceIntRect
&
aRect
nsWidgetInitData
*
aInitData
=
nullptr
)
override
;
virtual
void
Destroy
(
)
override
;
virtual
void
SetFocus
(
Raise
)
override
;
virtual
void
SetParent
(
nsIWidget
*
aNewParent
)
override
;
virtual
nsIWidget
*
GetParent
(
void
)
override
;
virtual
void
*
GetNativeData
(
uint32_t
aDataType
)
override
;
void
SetNativeData
(
uint32_t
aDataType
uintptr_t
aVal
)
override
;
virtual
nsTransparencyMode
GetTransparencyMode
(
)
override
{
return
eTransparencyOpaque
;
}
virtual
void
GetWindowClipRegion
(
nsTArray
<
LayoutDeviceIntRect
>
*
aRects
)
override
;
public
:
void
ChannelDestroyed
(
)
{
mActor
=
nullptr
;
}
private
:
mozilla
:
:
plugins
:
:
PluginWidgetChild
*
mActor
;
nsCOMPtr
<
nsIWidget
>
mParent
;
uintptr_t
mCachedPluginPort
;
}
;
}
}
#
endif
