var
Ci
=
Components
.
interfaces
;
var
Cc
=
Components
.
classes
;
var
Cu
=
Components
.
utils
;
var
Cr
=
Components
.
results
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
function
test_find_app
(
)
{
var
mwaUtils
=
Cc
[
"
mozilla
.
org
/
widget
/
mac
-
web
-
app
-
utils
;
1
"
]
.
createInstance
(
Ci
.
nsIMacWebAppUtils
)
;
let
sig
=
"
com
.
apple
.
TextEdit
"
;
let
path
;
path
=
mwaUtils
.
pathForAppWithIdentifier
(
sig
)
;
info
(
"
TextEdit
path
:
"
+
path
+
"
\
n
"
)
;
Assert
.
notEqual
(
path
"
"
)
;
}
function
test_dont_find_fake_app
(
)
{
var
mwaUtils
=
Cc
[
"
mozilla
.
org
/
widget
/
mac
-
web
-
app
-
utils
;
1
"
]
.
createInstance
(
Ci
.
nsIMacWebAppUtils
)
;
let
sig
=
"
calliope
.
penitentiary
.
dramamine
"
;
let
path
;
path
=
mwaUtils
.
pathForAppWithIdentifier
(
sig
)
;
Assert
.
equal
(
path
"
"
)
;
}
function
run_test
(
)
{
test_find_app
(
)
;
test_dont_find_fake_app
(
)
;
}
