#
ifndef
mozilla_ClipboardWriteRequestParent_h
#
define
mozilla_ClipboardWriteRequestParent_h
#
include
"
mozilla
/
PClipboardWriteRequestParent
.
h
"
#
include
"
nsIClipboard
.
h
"
namespace
mozilla
{
namespace
dom
{
class
ContentParent
;
}
class
ClipboardWriteRequestParent
final
:
public
PClipboardWriteRequestParent
public
nsIAsyncSetClipboardDataCallback
{
using
IPCResult
=
mozilla
:
:
ipc
:
:
IPCResult
;
using
ContentParent
=
mozilla
:
:
dom
:
:
ContentParent
;
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIASYNCSETCLIPBOARDDATACALLBACK
explicit
ClipboardWriteRequestParent
(
ContentParent
*
aManager
)
;
nsresult
Init
(
const
int32_t
&
aClipboardType
)
;
IPCResult
RecvSetData
(
const
IPCTransferableData
&
aTransferableData
const
bool
&
aIsPrivateData
nsIPrincipal
*
aRequestingPrincipal
Maybe
<
CookieJarSettingsArgs
>
aCookieJarSettingsArgs
const
nsContentPolicyType
&
aContentPolicyType
nsIReferrerInfo
*
aReferrerInfo
)
;
IPCResult
Recv__delete__
(
nsresult
aReason
)
;
void
ActorDestroy
(
ActorDestroyReason
aReason
)
override
final
;
private
:
~
ClipboardWriteRequestParent
(
)
;
RefPtr
<
ContentParent
>
mManager
;
nsCOMPtr
<
nsIAsyncSetClipboardData
>
mAsyncSetClipboardData
;
}
;
}
#
endif
