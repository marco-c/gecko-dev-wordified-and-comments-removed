#
include
"
nsISupports
.
idl
"
interface
nsIArray
;
[
scriptable
function
uuid
(
5131a62a
-
e99f
-
4631
-
9138
-
751f8aad1ae4
)
]
interface
nsIJumpListCommittedCallback
:
nsISupports
{
void
done
(
in
boolean
result
)
;
}
;
[
scriptable
uuid
(
1FE6A9CD
-
2B18
-
4dd5
-
A176
-
C2B32FA4F683
)
]
interface
nsIJumpListBuilder
:
nsISupports
{
const
short
JUMPLIST_CATEGORY_TASKS
=
0
;
const
short
JUMPLIST_CATEGORY_RECENT
=
1
;
const
short
JUMPLIST_CATEGORY_FREQUENT
=
2
;
const
short
JUMPLIST_CATEGORY_CUSTOMLIST
=
3
;
readonly
attribute
short
available
;
readonly
attribute
boolean
isListCommitted
;
readonly
attribute
short
maxListItems
;
[
implicit_jscontext
]
Promise
initListBuild
(
)
;
boolean
addListToBuild
(
in
short
aCatType
[
optional
]
in
nsIArray
items
[
optional
]
in
AString
catName
)
;
void
abortListBuild
(
)
;
void
commitListBuild
(
[
optional
]
in
nsIJumpListCommittedCallback
callback
)
;
boolean
deleteActiveList
(
)
;
void
setAppUserModelID
(
in
AString
aAppUserModelId
)
;
}
;
