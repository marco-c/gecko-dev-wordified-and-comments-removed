#
ifndef
nsPaper_h__
#
define
nsPaper_h__
#
include
"
mozilla
/
dom
/
ToJSValue
.
h
"
#
include
"
mozilla
/
gfx
/
Point
.
h
"
#
include
"
mozilla
/
gfx
/
Rect
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsIPaper
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
js
/
RootingAPI
.
h
"
#
include
"
nsString
.
h
"
struct
JSContext
;
namespace
mozilla
{
struct
PaperInfo
{
using
MarginDouble
=
mozilla
:
:
gfx
:
:
MarginDouble
;
using
SizeDouble
=
mozilla
:
:
gfx
:
:
SizeDouble
;
PaperInfo
(
)
=
default
;
PaperInfo
(
const
nsAString
&
aName
const
SizeDouble
&
aSize
const
Maybe
<
MarginDouble
>
&
aUnwriteableMargin
short
aPaperId
=
0
)
:
mName
(
aName
)
mSize
(
aSize
)
mUnwriteableMargin
(
aUnwriteableMargin
)
mPaperId
(
aPaperId
)
{
}
const
nsString
mName
;
SizeDouble
mSize
;
const
Maybe
<
MarginDouble
>
mUnwriteableMargin
{
Nothing
(
)
}
;
short
mPaperId
{
0
}
;
}
;
}
class
nsPrinterBase
;
class
nsPaper
final
:
public
nsIPaper
{
using
Promise
=
mozilla
:
:
dom
:
:
Promise
;
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS
(
nsPaper
)
NS_DECL_NSIPAPER
nsPaper
(
)
=
delete
;
explicit
nsPaper
(
const
mozilla
:
:
PaperInfo
&
)
;
nsPaper
(
nsPrinterBase
&
const
mozilla
:
:
PaperInfo
&
)
;
private
:
~
nsPaper
(
)
;
RefPtr
<
nsPrinterBase
>
mPrinter
;
RefPtr
<
Promise
>
mMarginPromise
;
const
mozilla
:
:
PaperInfo
mInfo
;
}
;
#
endif
