#
ifndef
widget_headless_HeadlessCompositorWidget_h
#
define
widget_headless_HeadlessCompositorWidget_h
#
include
"
mozilla
/
widget
/
CompositorWidget
.
h
"
#
include
"
HeadlessWidget
.
h
"
namespace
mozilla
{
namespace
widget
{
class
HeadlessCompositorWidgetInitData
;
class
HeadlessCompositorWidget
final
:
public
CompositorWidget
public
CompositorWidgetDelegate
{
public
:
HeadlessCompositorWidget
(
const
HeadlessCompositorWidgetInitData
&
aInitData
const
layers
:
:
CompositorOptions
&
aOptions
HeadlessWidget
*
aWindow
)
;
void
NotifyClientSizeChanged
(
const
LayoutDeviceIntSize
&
aClientSize
)
;
uintptr_t
GetWidgetKey
(
)
override
;
LayoutDeviceIntSize
GetClientSize
(
)
override
;
nsIWidget
*
RealWidget
(
)
override
;
CompositorWidgetDelegate
*
AsDelegate
(
)
override
{
return
this
;
}
void
ObserveVsync
(
VsyncObserver
*
aObserver
)
override
;
HeadlessCompositorWidget
*
AsHeadlessCompositorWidget
(
)
override
{
return
this
;
}
private
:
HeadlessWidget
*
mWidget
;
LayoutDeviceIntSize
mClientSize
;
}
;
}
}
#
endif
