#
include
"
HeadlessKeyBindings
.
h
"
#
import
<
Cocoa
/
Cocoa
.
h
>
#
include
"
nsCocoaUtils
.
h
"
#
include
"
NativeKeyBindings
.
h
"
#
include
"
mozilla
/
ClearOnShutdown
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
WritingModes
.
h
"
namespace
mozilla
{
namespace
widget
{
HeadlessKeyBindings
&
HeadlessKeyBindings
:
:
GetInstance
(
)
{
static
UniquePtr
<
HeadlessKeyBindings
>
sInstance
;
if
(
!
sInstance
)
{
sInstance
.
reset
(
new
HeadlessKeyBindings
(
)
)
;
ClearOnShutdown
(
&
sInstance
)
;
}
return
*
sInstance
;
}
nsresult
HeadlessKeyBindings
:
:
AttachNativeKeyEvent
(
WidgetKeyboardEvent
&
aEvent
)
{
NS_OBJC_BEGIN_TRY_ABORT_BLOCK_NSRESULT
;
aEvent
.
mNativeKeyEvent
=
nsCocoaUtils
:
:
MakeNewCococaEventFromWidgetEvent
(
aEvent
0
nil
)
;
return
NS_OK
;
NS_OBJC_END_TRY_ABORT_BLOCK_NSRESULT
;
}
void
HeadlessKeyBindings
:
:
GetEditCommands
(
nsIWidget
:
:
NativeKeyBindingsType
aType
const
WidgetKeyboardEvent
&
aEvent
const
Maybe
<
WritingMode
>
&
aWritingMode
nsTArray
<
CommandInt
>
&
aCommands
)
{
WidgetKeyboardEvent
modifiedEvent
(
aEvent
)
;
modifiedEvent
.
mNativeKeyEvent
=
nsCocoaUtils
:
:
MakeNewCococaEventFromWidgetEvent
(
aEvent
0
nil
)
;
NativeKeyBindings
*
keyBindings
=
NativeKeyBindings
:
:
GetInstance
(
aType
)
;
keyBindings
-
>
GetEditCommands
(
modifiedEvent
aWritingMode
aCommands
)
;
}
}
}
