#
include
"
nsIDeviceContextSpec
.
h
"
#
include
"
gfxPoint
.
h
"
#
include
"
nsIPrintSettings
.
h
"
using
mozilla
:
:
gfx
:
:
PrintEndDocumentPromise
;
float
nsIDeviceContextSpec
:
:
GetPrintingScale
(
)
{
#
ifdef
XP_WIN
if
(
mPrintSettings
-
>
GetOutputFormat
(
)
!
=
nsIPrintSettings
:
:
kOutputFormatPDF
#
ifdef
MOZ_ENABLE_SKIA_PDF
&
&
!
mPrintViaSkPDF
#
endif
)
{
int32_t
resolution
;
mPrintSettings
-
>
GetResolution
(
&
resolution
)
;
return
float
(
resolution
)
/
GetDPI
(
)
;
}
#
endif
return
72
.
0f
/
GetDPI
(
)
;
}
gfxPoint
nsIDeviceContextSpec
:
:
GetPrintingTranslate
(
)
{
#
ifdef
XP_WIN
double
marginTop
marginLeft
;
mPrintSettings
-
>
GetUnwriteableMarginTop
(
&
marginTop
)
;
mPrintSettings
-
>
GetUnwriteableMarginLeft
(
&
marginLeft
)
;
int32_t
resolution
;
mPrintSettings
-
>
GetResolution
(
&
resolution
)
;
return
gfxPoint
(
-
marginLeft
*
resolution
-
marginTop
*
resolution
)
;
#
else
return
gfxPoint
(
0
0
)
;
#
endif
}
RefPtr
<
PrintEndDocumentPromise
>
nsIDeviceContextSpec
:
:
EndDocumentPromiseFromResult
(
nsresult
aResult
const
char
*
aSite
)
{
return
NS_SUCCEEDED
(
aResult
)
?
PrintEndDocumentPromise
:
:
CreateAndResolve
(
true
aSite
)
:
PrintEndDocumentPromise
:
:
CreateAndReject
(
aResult
aSite
)
;
}
