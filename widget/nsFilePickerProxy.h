#
ifndef
NSFILEPICKERPROXY_H
#
define
NSFILEPICKERPROXY_H
#
include
"
nsBaseFilePicker
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsIURI
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsCOMArray
.
h
"
#
include
"
mozilla
/
dom
/
BrowsingContext
.
h
"
#
include
"
mozilla
/
dom
/
PFilePickerChild
.
h
"
#
include
"
mozilla
/
dom
/
UnionTypes
.
h
"
class
nsIWidget
;
class
nsIFile
;
class
nsPIDOMWindowInner
;
class
nsFilePickerProxy
:
public
nsBaseFilePicker
public
mozilla
:
:
dom
:
:
PFilePickerChild
{
public
:
nsFilePickerProxy
(
)
;
NS_DECL_ISUPPORTS
NS_IMETHOD
Init
(
mozilla
:
:
dom
:
:
BrowsingContext
*
aBrowsingContext
const
nsAString
&
aTitle
nsIFilePicker
:
:
Mode
aMode
)
override
;
NS_IMETHOD
AppendFilter
(
const
nsAString
&
aTitle
const
nsAString
&
aFilter
)
override
;
NS_IMETHOD
GetCapture
(
nsIFilePicker
:
:
CaptureTarget
*
aCapture
)
override
;
NS_IMETHOD
SetCapture
(
nsIFilePicker
:
:
CaptureTarget
aCapture
)
override
;
NS_IMETHOD
GetDefaultString
(
nsAString
&
aDefaultString
)
override
;
NS_IMETHOD
SetDefaultString
(
const
nsAString
&
aDefaultString
)
override
;
NS_IMETHOD
GetDefaultExtension
(
nsAString
&
aDefaultExtension
)
override
;
NS_IMETHOD
SetDefaultExtension
(
const
nsAString
&
aDefaultExtension
)
override
;
NS_IMETHOD
GetFilterIndex
(
int32_t
*
aFilterIndex
)
override
;
NS_IMETHOD
SetFilterIndex
(
int32_t
aFilterIndex
)
override
;
NS_IMETHOD
GetFile
(
nsIFile
*
*
aFile
)
override
;
NS_IMETHOD
GetFileURL
(
nsIURI
*
*
aFileURL
)
override
;
NS_IMETHOD
GetFiles
(
nsISimpleEnumerator
*
*
aFiles
)
override
;
NS_IMETHOD
GetDomFileOrDirectory
(
nsISupports
*
*
aValue
)
override
;
NS_IMETHOD
GetDomFileOrDirectoryEnumerator
(
nsISimpleEnumerator
*
*
aValue
)
override
;
NS_IMETHOD
Open
(
nsIFilePickerShownCallback
*
aCallback
)
override
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
Recv__delete__
(
const
MaybeInputData
&
aData
const
nsIFilePicker
:
:
ResultCode
&
aResult
)
override
;
private
:
~
nsFilePickerProxy
(
)
;
void
InitNative
(
nsIWidget
*
const
nsAString
&
)
override
;
nsresult
ResolveSpecialDirectory
(
const
nsAString
&
aSpecialDirectory
)
override
;
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
nsTArray
<
mozilla
:
:
dom
:
:
OwningFileOrDirectory
>
mFilesOrDirectories
;
nsCOMPtr
<
nsIFilePickerShownCallback
>
mCallback
;
int16_t
mSelectedType
;
nsString
mFile
;
nsString
mDefault
;
nsString
mDefaultExtension
;
nsIFilePicker
:
:
CaptureTarget
mCapture
;
bool
mIPCActive
;
nsTArray
<
nsString
>
mFilters
;
nsTArray
<
nsString
>
mFilterNames
;
}
;
#
endif
