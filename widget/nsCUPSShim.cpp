#
include
"
nsDebug
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsCUPSShim
.
h
"
#
include
"
mozilla
/
ArrayUtils
.
h
"
#
include
"
prlink
.
h
"
#
ifdef
XP_MACOSX
static
const
char
gCUPSLibraryName
[
]
=
"
libcups
.
2
.
dylib
"
;
#
else
static
const
char
gCUPSLibraryName
[
]
=
"
libcups
.
so
.
2
"
;
#
endif
template
<
typename
FuncT
>
static
bool
LoadCupsFunc
(
PRLibrary
*
const
lib
FuncT
*
&
dest
const
char
*
const
name
)
{
dest
=
(
FuncT
*
)
PR_FindSymbol
(
lib
name
)
;
if
(
MOZ_UNLIKELY
(
!
dest
)
)
{
#
ifdef
DEBUG
nsAutoCString
msg
(
name
)
;
msg
.
AppendLiteral
(
"
not
found
in
CUPS
library
"
)
;
NS_WARNING
(
msg
.
get
(
)
)
;
#
endif
return
false
;
}
return
true
;
}
#
define
CUPS_SHIM_LOAD
(
MEMBER
NAME
)
LoadCupsFunc
(
mCupsLib
MEMBER
#
NAME
)
bool
nsCUPSShim
:
:
Init
(
)
{
MOZ_ASSERT
(
!
mInited
)
;
mCupsLib
=
PR_LoadLibrary
(
gCUPSLibraryName
)
;
if
(
!
mCupsLib
)
{
return
false
;
}
if
(
!
(
CUPS_SHIM_LOAD
(
mCupsAddOption
cupsAddOption
)
&
&
CUPS_SHIM_LOAD
(
mCupsCheckDestSupported
cupsCheckDestSupported
)
&
&
CUPS_SHIM_LOAD
(
mCupsCopyDest
cupsCopyDest
)
&
&
CUPS_SHIM_LOAD
(
mCupsCopyDestInfo
cupsCopyDestInfo
)
&
&
CUPS_SHIM_LOAD
(
mCupsFreeDestInfo
cupsFreeDestInfo
)
&
&
CUPS_SHIM_LOAD
(
mCupsFreeDests
cupsFreeDests
)
&
&
CUPS_SHIM_LOAD
(
mCupsGetDest
cupsGetDest
)
&
&
CUPS_SHIM_LOAD
(
mCupsGetDests
cupsGetDests
)
&
&
CUPS_SHIM_LOAD
(
mCupsPrintFile
cupsPrintFile
)
&
&
CUPS_SHIM_LOAD
(
mCupsTempFd
cupsTempFd
)
)
)
{
#
ifndef
MOZ_TSAN
PR_UnloadLibrary
(
mCupsLib
)
;
#
endif
mCupsLib
=
nullptr
;
return
false
;
}
mInited
=
true
;
return
true
;
}
