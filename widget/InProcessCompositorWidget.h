#
ifndef
mozilla_widget_InProcessCompositorWidget_h__
#
define
mozilla_widget_InProcessCompositorWidget_h__
#
include
"
CompositorWidget
.
h
"
namespace
mozilla
{
namespace
widget
{
class
InProcessCompositorWidget
:
public
CompositorWidget
{
public
:
explicit
InProcessCompositorWidget
(
nsBaseWidget
*
aWidget
)
;
virtual
bool
PreRender
(
layers
:
:
LayerManagerComposite
*
aManager
)
override
;
virtual
void
PostRender
(
layers
:
:
LayerManagerComposite
*
aManager
)
override
;
virtual
void
DrawWindowUnderlay
(
layers
:
:
LayerManagerComposite
*
aManager
LayoutDeviceIntRect
aRect
)
override
;
virtual
void
DrawWindowOverlay
(
layers
:
:
LayerManagerComposite
*
aManager
LayoutDeviceIntRect
aRect
)
override
;
virtual
already_AddRefed
<
gfx
:
:
DrawTarget
>
StartRemoteDrawing
(
)
override
;
virtual
already_AddRefed
<
gfx
:
:
DrawTarget
>
StartRemoteDrawingInRegion
(
LayoutDeviceIntRegion
&
aInvalidRegion
layers
:
:
BufferMode
*
aBufferMode
)
override
;
virtual
void
EndRemoteDrawing
(
)
override
;
virtual
void
EndRemoteDrawingInRegion
(
gfx
:
:
DrawTarget
*
aDrawTarget
LayoutDeviceIntRegion
&
aInvalidRegion
)
override
;
virtual
void
CleanupRemoteDrawing
(
)
override
;
virtual
void
CleanupWindowEffects
(
)
override
;
virtual
bool
InitCompositor
(
layers
:
:
Compositor
*
aCompositor
)
override
;
virtual
LayoutDeviceIntSize
GetClientSize
(
)
override
;
virtual
uint32_t
GetGLFrameBufferFormat
(
)
override
;
virtual
layers
:
:
Composer2D
*
GetComposer2D
(
)
override
;
virtual
void
ObserveVsync
(
VsyncObserver
*
aObserver
)
override
;
virtual
uintptr_t
GetWidgetKey
(
)
override
;
nsIWidget
*
RealWidget
(
)
override
;
private
:
nsBaseWidget
*
mWidget
;
}
;
}
}
#
endif
