#
ifndef
nsCUPSShim_h___
#
define
nsCUPSShim_h___
#
include
<
cups
/
cups
.
h
>
#
include
"
mozilla
/
Atomics
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
struct
PRLibrary
;
class
nsCUPSShim
{
public
:
bool
EnsureInitialized
(
)
{
return
mInited
|
|
Init
(
)
;
}
#
define
CUPS_SHIM_ALL_FUNCS
(
X
)
\
X
(
cupsAddOption
)
\
X
(
cupsCheckDestSupported
)
\
X
(
cupsConnectDest
)
\
X
(
cupsCopyDest
)
\
X
(
cupsCopyDestInfo
)
\
X
(
cupsFreeDestInfo
)
\
X
(
cupsFreeDests
)
\
X
(
cupsGetDestMediaCount
)
\
X
(
cupsGetDestMediaByIndex
)
\
X
(
cupsGetDest
)
\
X
(
cupsGetDests
)
\
X
(
cupsGetNamedDest
)
\
X
(
cupsLocalizeDestMedia
)
\
X
(
cupsPrintFile
)
\
X
(
cupsTempFd
)
\
X
(
httpClose
)
#
define
CUPS_SHIM_FUNC_DECL
(
X
)
decltype
(
:
:
X
)
*
X
;
CUPS_SHIM_ALL_FUNCS
(
CUPS_SHIM_FUNC_DECL
)
#
undef
CUPS_SHIM_FUNC_DECL
private
:
bool
Init
(
)
;
bool
IsInitialized
(
)
const
{
return
mInited
;
}
mozilla
:
:
Atomic
<
bool
mozilla
:
:
ReleaseAcquire
>
mInited
{
false
}
;
mozilla
:
:
OffTheBooksMutex
mInitMutex
{
"
nsCUPSShim
:
:
mInitMutex
"
}
;
PRLibrary
*
mCupsLib
;
}
;
#
endif
