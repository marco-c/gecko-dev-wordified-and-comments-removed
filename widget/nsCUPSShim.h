#
ifndef
nsCUPSShim_h___
#
define
nsCUPSShim_h___
#
include
<
cups
/
cups
.
h
>
#
include
"
mozilla
/
Atomics
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
#
ifndef
XP_MACOSX
#
define
CUPS_SHIM_RUNTIME_LINK
#
endif
struct
PRLibrary
;
class
nsCUPSShim
{
public
:
bool
EnsureInitialized
(
)
{
return
mInited
|
|
Init
(
)
;
}
#
define
CUPS_SHIM_ALL_FUNCS
(
X
)
\
X
(
cupsAddOption
)
\
X
(
cupsCheckDestSupported
)
\
X
(
cupsConnectDest
)
\
X
(
cupsCopyDest
)
\
X
(
cupsCopyDestInfo
)
\
X
(
cupsDoRequest
)
\
X
(
cupsEnumDests
)
\
X
(
cupsFindDestDefault
)
\
X
(
cupsFreeDestInfo
)
\
X
(
cupsFreeDests
)
\
X
(
cupsGetDestMediaDefault
)
\
X
(
cupsGetDestMediaCount
)
\
X
(
cupsGetDestMediaByIndex
)
\
X
(
cupsGetDestMediaByName
)
\
X
(
cupsGetDest
)
\
X
(
cupsGetDests
)
\
X
(
cupsGetNamedDest
)
\
X
(
cupsGetOption
)
\
X
(
cupsLocalizeDestMedia
)
\
X
(
cupsPrintFile
)
\
X
(
cupsTempFd
)
\
X
(
httpClose
)
\
X
(
ippAddString
)
\
X
(
ippAddStrings
)
\
X
(
ippDelete
)
\
X
(
ippFindAttribute
)
\
X
(
ippGetCount
)
\
X
(
ippGetString
)
\
X
(
ippNewRequest
)
#
ifdef
CUPS_SHIM_RUNTIME_LINK
#
define
CUPS_SHIM_FUNC_DECL
(
X
)
decltype
(
:
:
X
)
*
X
;
#
else
#
define
CUPS_SHIM_FUNC_DECL
(
X
)
static
constexpr
decltype
(
:
:
X
)
*
const
X
=
:
:
X
;
#
endif
CUPS_SHIM_ALL_FUNCS
(
CUPS_SHIM_FUNC_DECL
)
#
undef
CUPS_SHIM_FUNC_DECL
private
:
bool
Init
(
)
;
mozilla
:
:
Atomic
<
bool
mozilla
:
:
ReleaseAcquire
>
mInited
{
false
}
;
#
ifdef
CUPS_SHIM_RUNTIME_LINK
mozilla
:
:
OffTheBooksMutex
mInitMutex
{
"
nsCUPSShim
:
:
mInitMutex
"
}
;
PRLibrary
*
mCupsLib
;
#
endif
}
;
#
endif
