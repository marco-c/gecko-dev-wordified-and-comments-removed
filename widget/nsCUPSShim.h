#
ifndef
nsCUPSShim_h___
#
define
nsCUPSShim_h___
#
include
<
cups
/
cups
.
h
>
#
include
"
mozilla
/
Atomics
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
#
ifndef
XP_MACOSX
#
define
CUPS_SHIM_RUNTIME_LINK
#
endif
struct
PRLibrary
;
class
nsCUPSShim
{
public
:
#
ifdef
CUPS_SHIM_RUNTIME_LINK
nsCUPSShim
(
)
;
bool
InitOkay
(
)
{
return
mInitOkay
;
}
#
else
nsCUPSShim
(
)
=
default
;
bool
InitOkay
(
)
{
return
true
;
}
#
endif
enum
class
Optional
:
bool
{
No
Yes
}
;
#
define
CUPS_SHIM_ALL_FUNCS
(
X
)
\
X
(
Optional
:
:
No
cupsAddOption
)
\
X
(
Optional
:
:
No
cupsCheckDestSupported
)
\
X
(
Optional
:
:
No
cupsConnectDest
)
\
X
(
Optional
:
:
No
cupsCopyDest
)
\
X
(
Optional
:
:
No
cupsCopyDestInfo
)
\
X
(
Optional
:
:
No
cupsDoRequest
)
\
X
(
Optional
:
:
No
cupsEnumDests
)
\
X
(
Optional
:
:
No
cupsFreeDestInfo
)
\
X
(
Optional
:
:
No
cupsFreeDests
)
\
X
(
Optional
:
:
No
cupsGetDestMediaByName
)
\
X
(
Optional
:
:
Yes
cupsFindDestDefault
)
\
X
(
Optional
:
:
Yes
cupsGetDestMediaDefault
)
\
X
(
Optional
:
:
Yes
cupsGetDestMediaCount
)
\
X
(
Optional
:
:
Yes
cupsGetDestMediaByIndex
)
\
X
(
Optional
:
:
Yes
cupsLocalizeDestMedia
)
\
X
(
Optional
:
:
No
cupsGetDest
)
\
X
(
Optional
:
:
No
cupsGetDests
)
\
X
(
Optional
:
:
No
cupsGetNamedDest
)
\
X
(
Optional
:
:
No
cupsGetOption
)
\
X
(
Optional
:
:
No
httpClose
)
\
X
(
Optional
:
:
No
ippAddString
)
\
X
(
Optional
:
:
No
ippAddStrings
)
\
X
(
Optional
:
:
No
ippDelete
)
\
X
(
Optional
:
:
No
ippFindAttribute
)
\
X
(
Optional
:
:
No
ippGetCount
)
\
X
(
Optional
:
:
No
ippGetString
)
\
X
(
Optional
:
:
No
ippNewRequest
)
#
ifdef
CUPS_SHIM_RUNTIME_LINK
#
define
CUPS_SHIM_FUNC_DECL
(
opt_
fn_
)
decltype
(
:
:
fn_
)
*
fn_
=
nullptr
;
#
else
#
define
CUPS_SHIM_FUNC_DECL
(
opt_
fn_
)
\
static
constexpr
decltype
(
:
:
fn_
)
*
const
fn_
=
:
:
fn_
;
#
endif
CUPS_SHIM_ALL_FUNCS
(
CUPS_SHIM_FUNC_DECL
)
#
undef
CUPS_SHIM_FUNC_DECL
#
ifdef
CUPS_SHIM_RUNTIME_LINK
private
:
bool
mInitOkay
=
false
;
PRLibrary
*
mCupsLib
=
nullptr
;
#
endif
}
;
#
endif
