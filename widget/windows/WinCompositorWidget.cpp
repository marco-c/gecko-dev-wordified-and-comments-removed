#
include
"
WinCompositorWidget
.
h
"
#
include
"
mozilla
/
StaticPrefs_layers
.
h
"
#
include
"
mozilla
/
gfx
/
DeviceManagerDx
.
h
"
#
include
"
mozilla
/
gfx
/
Point
.
h
"
#
include
"
mozilla
/
layers
/
Compositor
.
h
"
#
include
"
mozilla
/
layers
/
CompositorThread
.
h
"
#
include
"
mozilla
/
webrender
/
RenderThread
.
h
"
#
include
"
mozilla
/
widget
/
PlatformWidgetTypes
.
h
"
#
include
"
nsWindow
.
h
"
#
include
"
VsyncDispatcher
.
h
"
#
include
"
WinCompositorWindowThread
.
h
"
#
include
"
VRShMem
.
h
"
#
include
<
ddraw
.
h
>
namespace
mozilla
{
namespace
widget
{
using
namespace
mozilla
:
:
gfx
;
using
namespace
mozilla
;
WinCompositorWidget
:
:
WinCompositorWidget
(
const
WinCompositorWidgetInitData
&
aInitData
const
layers
:
:
CompositorOptions
&
aOptions
)
:
CompositorWidget
(
aOptions
)
mSetParentCompleted
(
false
)
mWidgetKey
(
aInitData
.
widgetKey
(
)
)
mWnd
(
reinterpret_cast
<
HWND
>
(
aInitData
.
hWnd
(
)
)
)
mCompositorWnds
(
nullptr
nullptr
)
{
MOZ_ASSERT
(
mWnd
&
&
:
:
IsWindow
(
mWnd
)
)
;
}
WinCompositorWidget
:
:
~
WinCompositorWidget
(
)
{
DestroyCompositorWindow
(
)
;
}
uintptr_t
WinCompositorWidget
:
:
GetWidgetKey
(
)
{
return
mWidgetKey
;
}
void
WinCompositorWidget
:
:
EnsureCompositorWindow
(
)
{
if
(
mCompositorWnds
.
mCompositorWnd
|
|
mCompositorWnds
.
mInitialParentWnd
)
{
return
;
}
mCompositorWnds
=
WinCompositorWindowThread
:
:
CreateCompositorWindow
(
)
;
UpdateCompositorWnd
(
mCompositorWnds
.
mCompositorWnd
mWnd
)
;
MOZ_ASSERT
(
mCompositorWnds
.
mCompositorWnd
)
;
MOZ_ASSERT
(
mCompositorWnds
.
mInitialParentWnd
)
;
}
void
WinCompositorWidget
:
:
DestroyCompositorWindow
(
)
{
if
(
!
mCompositorWnds
.
mCompositorWnd
&
&
!
mCompositorWnds
.
mInitialParentWnd
)
{
return
;
}
WinCompositorWindowThread
:
:
DestroyCompositorWindow
(
mCompositorWnds
)
;
mCompositorWnds
=
WinCompositorWnds
(
nullptr
nullptr
)
;
}
void
WinCompositorWidget
:
:
UpdateCompositorWndSizeIfNecessary
(
)
{
if
(
!
mCompositorWnds
.
mCompositorWnd
)
{
return
;
}
LayoutDeviceIntSize
size
=
GetClientSize
(
)
;
if
(
mLastCompositorWndSize
=
=
size
)
{
return
;
}
if
(
!
mSetParentCompleted
)
{
return
;
}
MOZ_ASSERT
(
mWnd
=
=
:
:
GetParent
(
mCompositorWnds
.
mCompositorWnd
)
)
;
if
(
!
:
:
SetWindowPos
(
mCompositorWnds
.
mCompositorWnd
nullptr
0
0
size
.
width
size
.
height
SWP_NOACTIVATE
|
SWP_NOCOPYBITS
|
SWP_NOOWNERZORDER
|
SWP_NOZORDER
)
)
{
return
;
}
mLastCompositorWndSize
=
size
;
}
void
WinCompositorWidget
:
:
RequestFxrOutput
(
)
{
MOZ_ASSERT
(
mFxrHandler
=
=
nullptr
)
;
mFxrHandler
.
reset
(
new
FxROutputHandler
(
)
)
;
}
}
}
