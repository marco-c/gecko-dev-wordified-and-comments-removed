#
ifndef
WinGesture_h__
#
define
WinGesture_h__
#
include
"
nsdefs
.
h
"
#
include
<
winuser
.
h
>
#
include
<
tpcshrd
.
h
>
#
include
"
nsPoint
.
h
"
#
include
"
mozilla
/
EventForwards
.
h
"
#
include
"
mozilla
/
TouchEvents
.
h
"
#
define
TABLET_ROTATE_GESTURE_ENABLE
0x02000000
class
nsPointWin
:
public
nsIntPoint
{
public
:
nsPointWin
&
operator
=
(
const
POINTS
&
aPoint
)
{
x
=
aPoint
.
x
;
y
=
aPoint
.
y
;
return
*
this
;
}
nsPointWin
&
operator
=
(
const
POINT
&
aPoint
)
{
x
=
aPoint
.
x
;
y
=
aPoint
.
y
;
return
*
this
;
}
nsPointWin
&
operator
=
(
int
val
)
{
x
=
y
=
val
;
return
*
this
;
}
void
ScreenToClient
(
HWND
hWnd
)
{
POINT
tmp
;
tmp
.
x
=
x
;
tmp
.
y
=
y
;
:
:
ScreenToClient
(
hWnd
&
tmp
)
;
*
this
=
tmp
;
}
}
;
class
nsWinGesture
{
public
:
nsWinGesture
(
)
;
public
:
bool
SetWinGestureSupport
(
HWND
hWnd
mozilla
:
:
WidgetGestureNotifyEvent
:
:
PanDirection
aDirection
)
;
bool
ShutdownWinGestureSupport
(
)
;
bool
ProcessGestureMessage
(
HWND
hWnd
WPARAM
wParam
LPARAM
lParam
mozilla
:
:
WidgetSimpleGestureEvent
&
evt
)
;
bool
IsPanEvent
(
LPARAM
lParam
)
;
bool
ProcessPanMessage
(
HWND
hWnd
WPARAM
wParam
LPARAM
lParam
)
;
bool
PanDeltaToPixelScroll
(
mozilla
:
:
WidgetWheelEvent
&
aWheelEvent
)
;
void
UpdatePanFeedbackX
(
HWND
hWnd
int32_t
scrollOverflow
bool
&
endFeedback
)
;
void
UpdatePanFeedbackY
(
HWND
hWnd
int32_t
scrollOverflow
bool
&
endFeedback
)
;
void
PanFeedbackFinalize
(
HWND
hWnd
bool
endFeedback
)
;
private
:
bool
InitLibrary
(
)
;
nsPointWin
mPanIntermediate
;
nsPointWin
mPanRefPoint
;
nsPointWin
mPixelScrollDelta
;
bool
mPanActive
;
bool
mFeedbackActive
;
bool
mXAxisFeedback
;
bool
mYAxisFeedback
;
bool
mPanInertiaActive
;
nsPointWin
mPixelScrollOverflow
;
double
mZoomIntermediate
;
double
mRotateIntermediate
;
}
;
#
endif
