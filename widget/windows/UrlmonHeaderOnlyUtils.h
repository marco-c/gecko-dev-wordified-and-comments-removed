#
ifndef
mozilla_UrlmonHeaderOnlyUtils_h
#
define
mozilla_UrlmonHeaderOnlyUtils_h
#
include
"
mozilla
/
ShellHeaderOnlyUtils
.
h
"
namespace
mozilla
{
inline
LauncherResult
<
_bstr_t
>
UrlmonValidateUri
(
const
wchar_t
*
aUri
)
{
LauncherResult
<
UniqueAbsolutePidl
>
pidlResult
=
ShellParseDisplayName
(
aUri
)
;
if
(
pidlResult
.
isErr
(
)
)
{
return
pidlResult
.
propagateErr
(
)
;
}
constexpr
DWORD
flags
=
Uri_CREATE_NO_DECODE_EXTRA_INFO
|
Uri_CREATE_CANONICALIZE
|
Uri_CREATE_CRACK_UNKNOWN_SCHEMES
|
Uri_CREATE_PRE_PROCESS_HTML_URI
|
Uri_CREATE_IE_SETTINGS
;
RefPtr
<
IUri
>
uri
;
HRESULT
hr
=
CreateUri
(
aUri
flags
0
getter_AddRefs
(
uri
)
)
;
if
(
FAILED
(
hr
)
)
{
return
LAUNCHER_ERROR_FROM_HRESULT
(
hr
)
;
}
_bstr_t
bstrUri
;
hr
=
uri
-
>
GetAbsoluteUri
(
bstrUri
.
GetAddress
(
)
)
;
if
(
FAILED
(
hr
)
)
{
return
LAUNCHER_ERROR_FROM_HRESULT
(
hr
)
;
}
if
(
hr
=
=
S_FALSE
)
{
hr
=
uri
-
>
GetRawUri
(
bstrUri
.
GetAddress
(
)
)
;
if
(
FAILED
(
hr
)
)
{
return
LAUNCHER_ERROR_FROM_HRESULT
(
hr
)
;
}
}
return
bstrUri
;
}
}
#
endif
