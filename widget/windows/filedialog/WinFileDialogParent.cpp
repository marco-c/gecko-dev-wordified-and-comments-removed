#
include
"
mozilla
/
widget
/
filedialog
/
WinFileDialogParent
.
h
"
#
include
"
mozilla
/
Logging
.
h
"
#
include
"
mozilla
/
Result
.
h
"
#
include
"
mozilla
/
SpinEventLoopUntil
.
h
"
#
include
"
mozilla
/
ipc
/
UtilityProcessManager
.
h
"
#
include
"
nsISupports
.
h
"
mozilla
:
:
LazyLogModule
sLogWFD
(
"
FileDialog
"
)
;
namespace
mozilla
:
:
widget
:
:
filedialog
{
static
size_t
sOpenDialogActors
=
0
;
WinFileDialogParent
:
:
WinFileDialogParent
(
)
{
MOZ_LOG
(
sLogWFD
LogLevel
:
:
Info
(
"
%
s
%
p
"
__PRETTY_FUNCTION__
this
)
)
;
}
WinFileDialogParent
:
:
~
WinFileDialogParent
(
)
{
MOZ_LOG
(
sLogWFD
LogLevel
:
:
Info
(
"
%
s
%
p
"
__PRETTY_FUNCTION__
this
)
)
;
}
PWinFileDialogParent
:
:
nsresult
WinFileDialogParent
:
:
BindToUtilityProcess
(
mozilla
:
:
ipc
:
:
UtilityProcessParent
*
aUtilityParent
)
{
Endpoint
<
PWinFileDialogParent
>
parentEnd
;
Endpoint
<
PWinFileDialogChild
>
childEnd
;
nsresult
rv
=
PWinFileDialog
:
:
CreateEndpoints
(
base
:
:
GetCurrentProcId
(
)
aUtilityParent
-
>
OtherPid
(
)
&
parentEnd
&
childEnd
)
;
if
(
NS_FAILED
(
rv
)
)
{
MOZ_ASSERT
(
false
"
Protocol
endpoints
failure
"
)
;
return
NS_ERROR_FAILURE
;
}
if
(
!
aUtilityParent
-
>
SendStartWinFileDialogService
(
std
:
:
move
(
childEnd
)
)
)
{
MOZ_ASSERT
(
false
"
SendStartWinFileDialogService
failed
"
)
;
return
NS_ERROR_FAILURE
;
}
if
(
!
parentEnd
.
Bind
(
this
)
)
{
MOZ_ASSERT
(
false
"
parentEnd
.
Bind
failed
"
)
;
return
NS_ERROR_FAILURE
;
}
sOpenDialogActors
+
+
;
return
NS_OK
;
}
ProcessProxy
:
:
ProcessProxy
(
RefPtr
<
WFDP
>
&
&
obj
)
:
data
(
MakeRefPtr
<
Contents
>
(
std
:
:
move
(
obj
)
)
)
{
}
ProcessProxy
:
:
Contents
:
:
Contents
(
RefPtr
<
WFDP
>
&
&
obj
)
:
ptr
(
std
:
:
move
(
obj
)
)
{
}
ProcessProxy
:
:
Contents
:
:
~
Contents
(
)
{
AssertIsOnMainThread
(
)
;
ptr
-
>
Close
(
)
;
if
(
!
-
-
sOpenDialogActors
)
{
MOZ_LOG
(
sLogWFD
LogLevel
:
:
Info
(
"
%
s
:
killing
the
WINDOWS_FILE_DIALOG
process
(
no
more
live
actors
)
"
__PRETTY_FUNCTION__
)
)
;
ipc
:
:
UtilityProcessManager
:
:
GetSingleton
(
)
-
>
CleanShutdown
(
ipc
:
:
SandboxingKind
:
:
WINDOWS_FILE_DIALOG
)
;
}
}
}
