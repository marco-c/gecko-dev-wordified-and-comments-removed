#
include
"
PDFiumParent
.
h
"
#
include
"
nsDeviceContextSpecWin
.
h
"
#
include
"
mozilla
/
gfx
/
PrintTargetEMF
.
h
"
namespace
mozilla
{
namespace
widget
{
PDFiumParent
:
:
PDFiumParent
(
PrintTargetEMF
*
aTarget
)
:
mTarget
(
aTarget
)
{
}
bool
PDFiumParent
:
:
Init
(
IPC
:
:
Channel
*
aChannel
base
:
:
ProcessId
aPid
)
{
if
(
NS_WARN_IF
(
!
Open
(
aChannel
aPid
)
)
)
{
return
false
;
}
AddRef
(
)
;
return
true
;
}
void
PDFiumParent
:
:
ActorDestroy
(
ActorDestroyReason
aWhy
)
{
if
(
mTarget
)
{
mTarget
-
>
ChannelIsBroken
(
)
;
}
}
mozilla
:
:
ipc
:
:
IPCResult
PDFiumParent
:
:
RecvConvertToEMFDone
(
const
nsresult
&
aResult
mozilla
:
:
ipc
:
:
Shmem
&
&
aEMFContents
)
{
MOZ_ASSERT
(
aEMFContents
.
IsReadable
(
)
)
;
if
(
mTarget
)
{
mTarget
-
>
ConvertToEMFDone
(
aResult
std
:
:
move
(
aEMFContents
)
)
;
}
return
IPC_OK
(
)
;
}
void
PDFiumParent
:
:
EndConversion
(
)
{
mTarget
=
nullptr
;
}
void
PDFiumParent
:
:
OnChannelConnected
(
int32_t
pid
)
{
SetOtherProcessId
(
pid
)
;
}
void
PDFiumParent
:
:
DeallocPPDFiumParent
(
)
{
Release
(
)
;
}
}
}
