#
ifndef
nsUserIdleServiceWin_h__
#
define
nsUserIdleServiceWin_h__
#
include
"
nsUserIdleService
.
h
"
#
include
"
mozilla
/
AppShutdown
.
h
"
#
ifndef
SAFE_COMPARE_EVEN_WITH_WRAPPING
#
define
SAFE_COMPARE_EVEN_WITH_WRAPPING
(
A
B
)
\
(
(
(
int
)
(
(
long
)
A
-
(
long
)
B
)
&
0xFFFFFFFF
)
)
#
endif
class
nsUserIdleServiceWin
:
public
nsUserIdleService
{
public
:
NS_INLINE_DECL_REFCOUNTING_INHERITED
(
nsUserIdleServiceWin
nsUserIdleService
)
bool
PollIdleTime
(
uint32_t
*
aIdleTime
)
override
;
static
already_AddRefed
<
nsUserIdleServiceWin
>
GetInstance
(
)
{
RefPtr
<
nsUserIdleServiceWin
>
idleService
=
nsUserIdleService
:
:
GetInstance
(
)
.
downcast
<
nsUserIdleServiceWin
>
(
)
;
if
(
!
idleService
)
{
if
(
mozilla
:
:
AppShutdown
:
:
IsInOrBeyond
(
mozilla
:
:
ShutdownPhase
:
:
AppShutdownConfirmed
)
)
{
return
nullptr
;
}
idleService
=
new
nsUserIdleServiceWin
(
)
;
}
return
idleService
.
forget
(
)
;
}
protected
:
nsUserIdleServiceWin
(
)
{
}
virtual
~
nsUserIdleServiceWin
(
)
{
}
}
;
#
endif
