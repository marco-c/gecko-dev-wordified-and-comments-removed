#
ifndef
__UXThemeData_h__
#
define
__UXThemeData_h__
#
include
<
windows
.
h
>
#
include
<
uxtheme
.
h
>
#
include
"
nscore
.
h
"
#
include
"
mozilla
/
LookAndFeel
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
WinUtils
.
h
"
#
include
"
nsWindowDefs
.
h
"
enum
nsUXThemeClass
{
eUXButton
=
0
eUXEdit
eUXToolbar
eUXProgress
eUXTab
eUXTrackbar
eUXCombobox
eUXHeader
eUXListview
eUXMenu
eUXNumClasses
}
;
class
nsUXThemeData
{
class
ThemeHandle
final
{
mozilla
:
:
Maybe
<
HANDLE
>
mHandle
;
public
:
ThemeHandle
(
)
=
default
;
~
ThemeHandle
(
)
;
ThemeHandle
(
const
ThemeHandle
&
)
=
delete
;
ThemeHandle
(
ThemeHandle
&
&
)
=
delete
;
ThemeHandle
&
operator
=
(
const
ThemeHandle
&
)
=
delete
;
ThemeHandle
&
operator
=
(
ThemeHandle
&
&
)
=
delete
;
operator
HANDLE
(
)
;
void
OpenOnce
(
HWND
aWindow
LPCWSTR
aClassList
)
;
void
Close
(
)
;
}
;
static
ThemeHandle
sThemes
[
eUXNumClasses
]
;
static
const
wchar_t
*
GetClassName
(
nsUXThemeClass
)
;
public
:
static
bool
sIsHighContrastOn
;
static
void
Invalidate
(
)
;
static
HANDLE
GetTheme
(
nsUXThemeClass
cls
)
;
static
HMODULE
GetThemeDLL
(
)
;
static
void
UpdateNativeThemeInfo
(
)
;
static
bool
IsHighContrastOn
(
)
{
return
sIsHighContrastOn
;
}
}
;
#
endif
