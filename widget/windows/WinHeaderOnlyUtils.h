#
ifndef
mozilla_WinHeaderOnlyUtils_h
#
define
mozilla_WinHeaderOnlyUtils_h
#
include
<
windows
.
h
>
namespace
mozilla
{
const
DWORD
kWaitForInputIdleTimeoutMS
=
10
*
1000
;
inline
bool
WaitForInputIdle
(
HANDLE
aProcess
DWORD
aTimeoutMs
=
kWaitForInputIdleTimeoutMS
)
{
const
DWORD
kSleepTimeMs
=
10
;
const
DWORD
waitStart
=
aTimeoutMs
=
=
INFINITE
?
0
:
:
:
GetTickCount
(
)
;
DWORD
elapsed
=
0
;
while
(
true
)
{
if
(
aTimeoutMs
!
=
INFINITE
)
{
elapsed
=
:
:
GetTickCount
(
)
-
waitStart
;
}
if
(
elapsed
>
=
aTimeoutMs
)
{
return
false
;
}
DWORD
waitResult
=
:
:
WaitForInputIdle
(
aProcess
aTimeoutMs
-
elapsed
)
;
if
(
!
waitResult
)
{
return
true
;
}
if
(
waitResult
=
=
WAIT_FAILED
&
&
:
:
GetLastError
(
)
=
=
ERROR_NOT_GUI_PROCESS
)
{
:
:
Sleep
(
kSleepTimeMs
)
;
continue
;
}
return
false
;
}
}
}
#
endif
