#
define
NTDDI_VERSION
NTDDI_WIN10_RS1
#
include
"
OSKInputPaneManager
.
h
"
#
include
"
nsDebug
.
h
"
#
ifndef
__MINGW32__
#
include
<
inputpaneinterop
.
h
>
#
include
<
windows
.
ui
.
viewmanagement
.
h
>
#
include
<
wrl
.
h
>
using
namespace
ABI
:
:
Windows
:
:
UI
:
:
ViewManagement
;
using
namespace
Microsoft
:
:
WRL
;
using
namespace
Microsoft
:
:
WRL
:
:
Wrappers
;
#
endif
namespace
mozilla
{
namespace
widget
{
#
ifndef
__MINGW32__
static
ComPtr
<
IInputPane2
>
GetInputPane
(
HWND
aHwnd
)
{
ComPtr
<
IInputPaneInterop
>
inputPaneInterop
;
HRESULT
hr
=
RoGetActivationFactory
(
HStringReference
(
RuntimeClass_Windows_UI_ViewManagement_InputPane
)
.
Get
(
)
IID_PPV_ARGS
(
&
inputPaneInterop
)
)
;
if
(
NS_WARN_IF
(
FAILED
(
hr
)
)
)
{
return
nullptr
;
}
ComPtr
<
IInputPane
>
inputPane
;
hr
=
inputPaneInterop
-
>
GetForWindow
(
aHwnd
IID_PPV_ARGS
(
&
inputPane
)
)
;
if
(
NS_WARN_IF
(
FAILED
(
hr
)
)
)
{
return
nullptr
;
}
ComPtr
<
IInputPane2
>
inputPane2
;
inputPane
.
As
(
&
inputPane2
)
;
return
inputPane2
;
}
#
endif
void
OSKInputPaneManager
:
:
ShowOnScreenKeyboard
(
HWND
aWnd
)
{
#
ifndef
__MINGW32__
ComPtr
<
IInputPane2
>
inputPane2
=
GetInputPane
(
aWnd
)
;
if
(
!
inputPane2
)
{
return
;
}
boolean
result
;
inputPane2
-
>
TryShow
(
&
result
)
;
NS_WARNING_ASSERTION
(
result
"
IInputPane2
:
:
TryShow
is
faiure
"
)
;
#
endif
}
void
OSKInputPaneManager
:
:
DismissOnScreenKeyboard
(
HWND
aWnd
)
{
#
ifndef
__MINGW32__
ComPtr
<
IInputPane2
>
inputPane2
=
GetInputPane
(
aWnd
)
;
if
(
!
inputPane2
)
{
return
;
}
boolean
result
;
inputPane2
-
>
TryHide
(
&
result
)
;
NS_WARNING_ASSERTION
(
result
"
IInputPane2
:
:
TryHide
is
failure
"
)
;
#
endif
}
}
}
