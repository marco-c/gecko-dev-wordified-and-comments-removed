#
ifndef
PDFIUMPARENT_H_
#
define
PDFIUMPARENT_H_
#
include
"
mozilla
/
widget
/
PPDFiumParent
.
h
"
namespace
mozilla
{
namespace
gfx
{
class
PrintTargetEMF
;
}
}
namespace
mozilla
{
namespace
widget
{
class
PDFiumParent
final
:
public
PPDFiumParent
public
mozilla
:
:
ipc
:
:
IShmemAllocator
{
NS_INLINE_DECL_THREADSAFE_REFCOUNTING
(
PDFiumParent
)
typedef
mozilla
:
:
gfx
:
:
PrintTargetEMF
PrintTargetEMF
;
typedef
std
:
:
function
<
void
(
)
>
ConversionDoneCallback
;
explicit
PDFiumParent
(
PrintTargetEMF
*
aTarget
)
;
bool
Init
(
IPC
:
:
Channel
*
aChannel
base
:
:
ProcessId
aPid
)
;
void
AbortConversion
(
ConversionDoneCallback
aCallback
)
;
void
EndConversion
(
)
;
FORWARD_SHMEM_ALLOCATOR_TO
(
PPDFiumParent
)
private
:
~
PDFiumParent
(
)
{
}
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
mozilla
:
:
ipc
:
:
IPCResult
RecvConvertToEMFDone
(
const
nsresult
&
aResult
mozilla
:
:
ipc
:
:
Shmem
&
&
aEMFContents
)
override
;
void
OnChannelConnected
(
int32_t
pid
)
override
;
void
DeallocPPDFiumParent
(
)
override
;
PrintTargetEMF
*
mTarget
;
ConversionDoneCallback
mConversionDoneCallback
;
}
;
}
}
#
endif
