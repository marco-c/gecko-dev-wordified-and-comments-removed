#
include
"
InputDeviceUtils
.
h
"
#
define
INITGUID
#
include
<
dbt
.
h
>
#
include
<
hidclass
.
h
>
#
include
<
ntddmou
.
h
>
#
include
<
setupapi
.
h
>
namespace
mozilla
{
namespace
widget
{
HDEVNOTIFY
InputDeviceUtils
:
:
RegisterNotification
(
HWND
aHwnd
)
{
DEV_BROADCAST_DEVICEINTERFACE
filter
=
{
}
;
filter
.
dbcc_size
=
sizeof
(
DEV_BROADCAST_DEVICEINTERFACE
)
;
filter
.
dbcc_devicetype
=
DBT_DEVTYP_DEVICEINTERFACE
;
filter
.
dbcc_classguid
=
GUID_DEVINTERFACE_MOUSE
;
return
RegisterDeviceNotification
(
aHwnd
&
filter
DEVICE_NOTIFY_WINDOW_HANDLE
)
;
}
void
InputDeviceUtils
:
:
UnregisterNotification
(
HDEVNOTIFY
aHandle
)
{
if
(
!
aHandle
)
{
return
;
}
UnregisterDeviceNotification
(
aHandle
)
;
}
DWORD
InputDeviceUtils
:
:
CountMouseDevices
(
)
{
HDEVINFO
hdev
=
SetupDiGetClassDevs
(
&
GUID_DEVINTERFACE_MOUSE
nullptr
nullptr
DIGCF_DEVICEINTERFACE
|
DIGCF_PRESENT
)
;
if
(
hdev
=
=
INVALID_HANDLE_VALUE
)
{
return
0
;
}
DWORD
count
=
0
;
SP_INTERFACE_DEVICE_DATA
info
=
{
}
;
info
.
cbSize
=
sizeof
(
SP_INTERFACE_DEVICE_DATA
)
;
while
(
SetupDiEnumDeviceInterfaces
(
hdev
nullptr
&
GUID_DEVINTERFACE_MOUSE
index
&
info
)
)
{
if
(
info
.
Flags
&
SPINT_ACTIVE
)
{
count
+
+
;
}
}
SetupDiDestroyDeviceInfoList
(
hdev
)
;
return
count
;
}
}
}
