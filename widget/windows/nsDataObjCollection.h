#
ifndef
_NSDATAOBJCOLLECTION_H_
#
define
_NSDATAOBJCOLLECTION_H_
#
include
<
oleidl
.
h
>
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsDataObj
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
define
MULTI_MIME
"
Mozilla
/
IDataObjectCollectionFormat
"
EXTERN_C
const
IID
IID_IDataObjCollection
;
class
nsIDataObjCollection
:
public
IUnknown
{
public
:
}
;
class
nsDataObjCollection
final
:
public
nsIDataObjCollection
public
nsDataObj
{
public
:
nsDataObjCollection
(
)
;
private
:
~
nsDataObjCollection
(
)
final
;
public
:
STDMETHODIMP_
(
ULONG
)
AddRef
(
)
final
;
STDMETHODIMP
QueryInterface
(
REFIID
void
*
*
)
final
;
STDMETHODIMP_
(
ULONG
)
Release
(
)
final
;
private
:
HRESULT
GetFile
(
LPFORMATETC
pFE
LPSTGMEDIUM
pSTM
)
;
HRESULT
GetText
(
LPFORMATETC
pFE
LPSTGMEDIUM
pSTM
)
;
HRESULT
GetFileDescriptors
(
LPFORMATETC
pFE
LPSTGMEDIUM
pSTM
)
;
HRESULT
GetFileContents
(
LPFORMATETC
pFE
LPSTGMEDIUM
pSTM
)
;
HRESULT
GetFirstSupporting
(
LPFORMATETC
pFE
LPSTGMEDIUM
pSTM
)
;
using
nsDataObj
:
:
GetFile
;
using
nsDataObj
:
:
GetFileContents
;
using
nsDataObj
:
:
GetText
;
void
AddDataFlavor
(
const
char
*
aDataFlavor
LPFORMATETC
aFE
)
final
;
public
:
void
AddDataObject
(
IDataObject
*
aDataObj
)
;
int32_t
GetNumDataObjects
(
)
{
return
mDataObjects
.
Length
(
)
;
}
nsDataObj
*
GetDataObjectAt
(
uint32_t
aItem
)
{
return
mDataObjects
.
SafeElementAt
(
aItem
RefPtr
<
nsDataObj
>
(
)
)
;
}
public
:
STDMETHODIMP
GetData
(
LPFORMATETC
pFE
LPSTGMEDIUM
pSTM
)
final
;
STDMETHODIMP
GetDataHere
(
LPFORMATETC
pFE
LPSTGMEDIUM
pSTM
)
final
;
STDMETHODIMP
QueryGetData
(
LPFORMATETC
pFE
)
final
;
STDMETHODIMP
SetData
(
LPFORMATETC
pFE
LPSTGMEDIUM
pSTM
BOOL
release
)
final
;
private
:
nsTArray
<
RefPtr
<
nsDataObj
>
>
mDataObjects
;
}
;
#
endif
