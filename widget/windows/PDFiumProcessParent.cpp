#
include
"
PDFiumProcessParent
.
h
"
#
include
"
nsIRunnable
.
h
"
#
if
defined
(
XP_WIN
)
&
&
defined
(
MOZ_SANDBOX
)
#
include
"
WinUtils
.
h
"
#
endif
#
include
"
nsDeviceContextSpecWin
.
h
"
#
include
"
PDFiumParent
.
h
"
using
mozilla
:
:
ipc
:
:
GeckoChildProcessHost
;
namespace
mozilla
{
namespace
widget
{
PDFiumProcessParent
:
:
PDFiumProcessParent
(
)
:
GeckoChildProcessHost
(
GeckoProcessType_PDFium
)
{
MOZ_COUNT_CTOR
(
PDFiumProcessParent
)
;
}
PDFiumProcessParent
:
:
~
PDFiumProcessParent
(
)
{
MOZ_COUNT_DTOR
(
PDFiumProcessParent
)
;
if
(
mPDFiumParentActor
)
{
mPDFiumParentActor
-
>
Close
(
)
;
}
}
bool
PDFiumProcessParent
:
:
Launch
(
)
{
mLaunchThread
=
NS_GetCurrentThread
(
)
;
if
(
!
SyncLaunch
(
)
)
{
return
false
;
}
MOZ_ASSERT
(
!
mPDFiumParentActor
)
;
mPDFiumParentActor
=
new
PDFiumParent
(
)
;
return
mPDFiumParentActor
-
>
Init
(
GetChannel
(
)
base
:
:
GetProcId
(
GetChildProcessHandle
(
)
)
)
;
}
void
PDFiumProcessParent
:
:
Delete
(
)
{
if
(
!
mLaunchThread
)
{
delete
this
;
return
;
}
if
(
mLaunchThread
=
=
NS_GetCurrentThread
(
)
)
{
delete
this
;
return
;
}
mLaunchThread
-
>
Dispatch
(
NewNonOwningRunnableMethod
(
"
PDFiumProcessParent
:
:
Delete
"
this
&
PDFiumProcessParent
:
:
Delete
)
)
;
}
}
}
