#
ifndef
mozilla_widget_WinContentSystemParameters_h
#
define
mozilla_widget_WinContentSystemParameters_h
#
include
<
memory
>
#
include
<
cinttypes
>
#
include
"
nsTArray
.
h
"
namespace
mozilla
{
namespace
dom
{
class
SystemParameterKVPair
;
}
namespace
widget
{
enum
class
SystemParameterId
:
uint8_t
{
IsPerMonitorDPIAware
=
0
SystemDPI
FlatMenusEnabled
IsAppThemed
Count
}
;
class
WinContentSystemParameters
{
public
:
static
WinContentSystemParameters
*
GetSingleton
(
)
;
bool
IsPerMonitorDPIAware
(
)
;
float
SystemDPI
(
)
;
bool
AreFlatMenusEnabled
(
)
;
bool
IsAppThemed
(
)
;
void
SetContentValues
(
const
nsTArray
<
dom
:
:
SystemParameterKVPair
>
&
values
)
;
nsTArray
<
dom
:
:
SystemParameterKVPair
>
GetParentValues
(
)
;
void
OnThemeChanged
(
)
;
WinContentSystemParameters
(
const
WinContentSystemParameters
&
)
=
delete
;
WinContentSystemParameters
(
WinContentSystemParameters
&
&
)
=
delete
;
WinContentSystemParameters
&
operator
=
(
const
WinContentSystemParameters
&
)
=
delete
;
WinContentSystemParameters
&
operator
=
(
WinContentSystemParameters
&
&
)
=
delete
;
private
:
WinContentSystemParameters
(
)
;
~
WinContentSystemParameters
(
)
;
void
SetContentValueInternal
(
const
dom
:
:
SystemParameterKVPair
&
aKVPair
)
;
bool
GetParentValueInternal
(
SystemParameterId
aId
dom
:
:
SystemParameterKVPair
*
aKVPair
)
;
bool
IsCachedValueValid
(
SystemParameterId
aId
)
;
void
SetCachedValueValid
(
SystemParameterId
aId
bool
aIsValid
)
;
struct
Detail
;
std
:
:
unique_ptr
<
Detail
>
mDetail
;
}
;
}
}
#
endif
