#
ifndef
mozilla_widget_IconLoader_h_
#
define
mozilla_widget_IconLoader_h_
#
include
"
imgINotificationObserver
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsIContentPolicy
.
h
"
#
include
"
nsISupports
.
h
"
class
nsIURI
;
class
nsINode
;
class
imgRequestProxy
;
class
imgIContainer
;
namespace
mozilla
:
:
widget
{
class
IconLoader
:
public
imgINotificationObserver
{
public
:
class
Helper
:
public
nsISupports
{
public
:
virtual
nsresult
OnComplete
(
imgIContainer
*
aContainer
const
nsIntRect
&
aRect
)
=
0
;
protected
:
virtual
~
Helper
(
)
=
default
;
}
;
IconLoader
(
Helper
*
aHelper
const
nsIntRect
&
aImageRegionRect
)
;
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_IMGINOTIFICATIONOBSERVER
NS_DECL_CYCLE_COLLECTION_CLASS
(
IconLoader
)
nsresult
LoadIcon
(
nsIURI
*
aIconURI
nsINode
*
aNode
bool
aIsInternalIcon
=
false
)
;
void
Destroy
(
)
;
protected
:
virtual
~
IconLoader
(
)
;
private
:
nsresult
OnFrameComplete
(
imgIRequest
*
aRequest
)
;
nsContentPolicyType
mContentType
;
RefPtr
<
imgRequestProxy
>
mIconRequest
;
nsIntRect
mImageRegionRect
;
bool
mLoadedIcon
;
Helper
*
mHelper
;
}
;
}
#
endif
