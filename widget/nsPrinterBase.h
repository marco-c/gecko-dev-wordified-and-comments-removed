#
ifndef
nsPrinterBase_h__
#
define
nsPrinterBase_h__
#
include
"
nsIPrinter
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
mozilla
/
EnumeratedArray
.
h
"
#
include
"
mozilla
/
Result
.
h
"
namespace
mozilla
:
:
dom
{
class
Promise
;
}
class
nsPrinterBase
:
public
nsIPrinter
{
public
:
using
Promise
=
mozilla
:
:
dom
:
:
Promise
;
NS_IMETHOD
GetSupportsDuplex
(
JSContext
*
Promise
*
*
)
final
;
NS_IMETHOD
GetSupportsColor
(
JSContext
*
Promise
*
*
)
final
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS
(
nsPrinterBase
)
nsPrinterBase
(
const
nsPrinterBase
&
)
=
delete
;
nsPrinterBase
(
nsPrinterBase
&
&
)
=
delete
;
private
:
enum
class
AsyncAttribute
{
SupportsDuplex
=
0
SupportsColor
Last
}
;
template
<
typename
T
>
using
AsyncAttributeBackgroundTask
=
T
(
nsPrinterBase
:
:
*
)
(
)
const
;
template
<
typename
T
>
nsresult
AsyncPromiseAttributeGetter
(
JSContext
*
aCx
Promise
*
*
aResultPromise
AsyncAttribute
AsyncAttributeBackgroundTask
<
T
>
)
;
protected
:
nsPrinterBase
(
)
;
virtual
~
nsPrinterBase
(
)
;
virtual
bool
SupportsDuplex
(
)
const
=
0
;
virtual
bool
SupportsColor
(
)
const
=
0
;
nsTArray
<
RefPtr
<
nsIPaper
>
>
mPaperList
;
private
:
mozilla
:
:
EnumeratedArray
<
AsyncAttribute
AsyncAttribute
:
:
Last
RefPtr
<
Promise
>
>
mAsyncAttributePromises
;
}
;
#
endif
