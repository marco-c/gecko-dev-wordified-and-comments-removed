#
ifndef
nsContentTreeOwner_h__
#
define
nsContentTreeOwner_h__
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsIBaseWindow
.
h
"
#
include
"
nsIDocShellTreeOwner
.
h
"
#
include
"
nsIInterfaceRequestor
.
h
"
#
include
"
nsIInterfaceRequestorUtils
.
h
"
#
include
"
nsIWebBrowserChrome
.
h
"
#
include
"
nsIWindowProvider
.
h
"
namespace
mozilla
{
class
AppWindow
;
}
class
nsContentTreeOwner
final
:
public
nsIDocShellTreeOwner
public
nsIBaseWindow
public
nsIInterfaceRequestor
public
nsIWebBrowserChrome
public
nsIWindowProvider
{
friend
class
mozilla
:
:
AppWindow
;
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIBASEWINDOW
NS_DECL_NSIDOCSHELLTREEOWNER
NS_DECL_NSIINTERFACEREQUESTOR
NS_DECL_NSIWINDOWPROVIDER
NS_IMETHOD
SetLinkStatus
(
const
nsAString
&
status
)
override
;
NS_IMETHOD
GetChromeFlags
(
uint32_t
*
aChromeFlags
)
override
;
NS_IMETHOD
SetChromeFlags
(
uint32_t
aChromeFlags
)
override
;
NS_IMETHOD
ShowAsModal
(
)
override
;
NS_IMETHOD
IsWindowModal
(
bool
*
_retval
)
override
;
NS_IMETHOD
Blur
(
)
override
;
protected
:
explicit
nsContentTreeOwner
(
bool
fPrimary
)
;
virtual
~
nsContentTreeOwner
(
)
=
default
;
void
AppWindow
(
mozilla
:
:
AppWindow
*
aAppWindow
)
;
mozilla
:
:
AppWindow
*
AppWindow
(
)
;
protected
:
mozilla
:
:
AppWindow
*
mAppWindow
;
bool
mPrimary
;
}
;
#
endif
