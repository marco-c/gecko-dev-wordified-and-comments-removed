const
UNPACKAGED_ADDON
=
do_get_file
(
"
data
/
test_bug564667
"
)
;
const
PACKAGED_ADDON
=
do_get_file
(
"
data
/
test_bug564667
.
xpi
"
)
;
var
gCR
=
Cc
[
"
mozilla
.
org
/
chrome
/
chrome
-
registry
;
1
"
]
.
getService
(
Ci
.
nsIChromeRegistry
)
;
function
test_mapping
(
chromeURL
target
)
{
var
uri
=
Services
.
io
.
newURI
(
chromeURL
)
;
try
{
var
result
=
gCR
.
convertChromeURL
(
uri
)
;
Assert
.
equal
(
result
.
spec
target
)
;
}
catch
(
ex
)
{
do_throw
(
chromeURL
+
"
not
Registered
"
)
;
}
}
function
test_removed_mapping
(
chromeURL
target
)
{
var
uri
=
Services
.
io
.
newURI
(
chromeURL
)
;
try
{
gCR
.
convertChromeURL
(
uri
)
;
do_throw
(
chromeURL
+
"
not
removed
"
)
;
}
catch
(
ex
)
{
}
}
function
testManifest
(
manifestPath
baseURI
)
{
Components
.
manager
.
addBootstrappedManifestLocation
(
manifestPath
)
;
test_mapping
(
"
chrome
:
/
/
test1
/
content
"
baseURI
+
"
test
/
test1
.
xhtml
"
)
;
test_mapping
(
"
chrome
:
/
/
test1
/
locale
"
baseURI
+
"
test
/
test1
.
dtd
"
)
;
test_mapping
(
"
chrome
:
/
/
test1
/
skin
"
baseURI
+
"
test
/
test1
.
css
"
)
;
test_mapping
(
"
chrome
:
/
/
test2
/
content
"
baseURI
+
"
test
/
test2
.
xhtml
"
)
;
test_mapping
(
"
chrome
:
/
/
test2
/
locale
"
baseURI
+
"
test
/
test2
.
dtd
"
)
;
test_mapping
(
"
chrome
:
/
/
testOverride
/
content
"
"
file
:
/
/
/
test1
/
override
"
)
;
Components
.
manager
.
removeBootstrappedManifestLocation
(
manifestPath
)
;
test_removed_mapping
(
"
chrome
:
/
/
test1
/
content
"
baseURI
+
"
test
/
test1
.
xhtml
"
)
;
test_removed_mapping
(
"
chrome
:
/
/
test1
/
locale
"
baseURI
+
"
test
/
test1
.
dtd
"
)
;
test_removed_mapping
(
"
chrome
:
/
/
test1
/
skin
"
baseURI
+
"
test
/
test1
.
css
"
)
;
test_removed_mapping
(
"
chrome
:
/
/
test2
/
content
"
baseURI
+
"
test
/
test2
.
xhtml
"
)
;
test_removed_mapping
(
"
chrome
:
/
/
test2
/
locale
"
baseURI
+
"
test
/
test2
.
dtd
"
)
;
}
function
run_test
(
)
{
testManifest
(
UNPACKAGED_ADDON
Services
.
io
.
newFileURI
(
UNPACKAGED_ADDON
)
.
spec
)
;
testManifest
(
PACKAGED_ADDON
"
jar
:
"
+
Services
.
io
.
newFileURI
(
PACKAGED_ADDON
)
.
spec
+
"
!
/
"
)
;
}
