EXPORTS
+
=
[
"
malloc_decls
.
h
"
"
mozjemalloc_types
.
h
"
"
mozmemory
.
h
"
"
mozmemory_wrap
.
h
"
]
LIBRARY_DEFINES
[
"
MOZ_HAS_MOZGLUE
"
]
=
True
DEFINES
[
"
MOZ_MEMORY_IMPL
"
]
=
True
if
CONFIG
[
"
MOZ_REPLACE_MALLOC
"
]
:
EXPORTS
+
=
[
"
replace_malloc
.
h
"
"
replace_malloc_bridge
.
h
"
]
if
CONFIG
[
"
MOZ_PHC
"
]
:
DEFINES
[
"
MOZ_PHC
"
]
=
True
if
CONFIG
[
"
MOZ_MEMORY
"
]
:
UNIFIED_SOURCES
+
=
[
"
mozjemalloc
.
cpp
"
"
mozmemory_wrap
.
cpp
"
]
else
:
UNIFIED_SOURCES
+
=
[
"
fallback
.
cpp
"
]
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
Darwin
"
and
(
CONFIG
[
"
MOZ_REPLACE_MALLOC
"
]
or
CONFIG
[
"
MOZ_MEMORY
"
]
)
:
SOURCES
+
=
[
"
Mutex
.
cpp
"
"
zone
.
c
"
]
Library
(
"
memory
"
)
if
CONFIG
[
"
OS_TARGET
"
]
=
=
"
Android
"
and
CONFIG
[
"
CC_TYPE
"
]
=
=
"
clang
"
:
CXXFLAGS
+
=
[
"
-
Wno
-
tautological
-
pointer
-
compare
"
]
if
CONFIG
[
"
MOZ_BUILD_APP
"
]
!
=
"
memory
"
:
FINAL_LIBRARY
=
"
mozglue
"
if
CONFIG
[
"
MOZ_REPLACE_MALLOC_STATIC
"
]
:
DEFINES
[
"
MOZ_REPLACE_MALLOC_STATIC
"
]
=
True
DisableStlWrapping
(
)
if
CONFIG
[
"
CC_TYPE
"
]
=
=
"
clang
-
cl
"
:
AllowCompilerWarnings
(
)
if
CONFIG
[
"
NIGHTLY_BUILD
"
]
and
CONFIG
[
"
OS_TARGET
"
]
=
=
"
WINNT
"
:
DEFINES
[
"
MOZ_STALL_ON_OOM
"
]
=
True
REQUIRES_UNIFIED_BUILD
=
True
