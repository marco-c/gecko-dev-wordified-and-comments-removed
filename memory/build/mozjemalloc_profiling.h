#
ifndef
_MOZJEMALLOC_PROFILING_H
#
define
_MOZJEMALLOC_PROFILING_H
#
include
"
mozilla
/
TimeStamp
.
h
"
#
include
"
mozjemalloc_types
.
h
"
#
include
"
mozmemory_wrap
.
h
"
namespace
mozilla
{
struct
PurgeStats
{
arena_id_t
arena_id
;
const
char
*
arena_label
;
const
char
*
caller
;
size_t
pages
=
0
;
size_t
system_calls
=
0
;
PurgeStats
(
arena_id_t
aId
const
char
*
aLabel
const
char
*
aCaller
)
:
arena_id
(
aId
)
arena_label
(
aLabel
)
caller
(
aCaller
)
{
}
}
;
#
ifdef
MOZJEMALLOC_PROFILING_CALLBACKS
class
MallocProfilerCallbacks
{
public
:
virtual
~
MallocProfilerCallbacks
(
)
{
}
using
TS
=
mozilla
:
:
TimeStamp
;
virtual
void
OnPurge
(
TS
aStart
TS
aEnd
const
PurgeStats
&
aStats
)
=
0
;
}
;
MOZ_JEMALLOC_API
void
jemalloc_set_profiler_callbacks
(
MallocProfilerCallbacks
*
aCallbacks
)
;
#
endif
}
#
endif
