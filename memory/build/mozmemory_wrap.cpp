#
include
<
string
.
h
>
#
include
"
mozmemory_wrap
.
h
"
#
include
"
mozilla
/
Types
.
h
"
#
define
NOTHROW_MALLOC_DECL
(
name
return_type
.
.
.
)
\
MOZ_MEMORY_API
return_type
name
#
#
_impl
(
__VA_ARGS__
)
noexcept
(
true
)
;
#
define
MALLOC_DECL
(
name
return_type
.
.
.
)
\
MOZ_MEMORY_API
return_type
name
#
#
_impl
(
__VA_ARGS__
)
;
#
define
MALLOC_FUNCS
MALLOC_FUNCS_MALLOC
#
include
"
malloc_decls
.
h
"
#
undef
strndup
#
undef
strdup
MOZ_MEMORY_API
char
*
strndup_impl
(
const
char
*
src
size_t
len
)
{
char
*
dst
=
(
char
*
)
malloc_impl
(
len
+
1
)
;
if
(
dst
)
{
strncpy
(
dst
src
len
)
;
dst
[
len
]
=
'
\
0
'
;
}
return
dst
;
}
MOZ_MEMORY_API
char
*
strdup_impl
(
const
char
*
src
)
{
size_t
len
=
strlen
(
src
)
;
return
strndup_impl
(
src
len
)
;
}
#
ifdef
ANDROID
#
include
<
stdarg
.
h
>
#
include
<
stdio
.
h
>
MOZ_MEMORY_API
int
vasprintf_impl
(
char
*
*
str
const
char
*
fmt
va_list
ap
)
{
char
*
ptr
*
_ptr
;
int
ret
;
if
(
str
=
=
NULL
|
|
fmt
=
=
NULL
)
{
return
-
1
;
}
ptr
=
(
char
*
)
malloc_impl
(
128
)
;
if
(
ptr
=
=
NULL
)
{
*
str
=
NULL
;
return
-
1
;
}
ret
=
vsnprintf
(
ptr
128
fmt
ap
)
;
if
(
ret
<
0
)
{
free_impl
(
ptr
)
;
*
str
=
NULL
;
return
-
1
;
}
_ptr
=
reinterpret_cast
<
char
*
>
(
realloc_impl
(
ptr
ret
+
1
)
)
;
if
(
_ptr
=
=
NULL
)
{
free_impl
(
ptr
)
;
*
str
=
NULL
;
return
-
1
;
}
*
str
=
_ptr
;
return
ret
;
}
MOZ_MEMORY_API
int
asprintf_impl
(
char
*
*
str
const
char
*
fmt
.
.
.
)
{
int
ret
;
va_list
ap
;
va_start
(
ap
fmt
)
;
ret
=
vasprintf_impl
(
str
fmt
ap
)
;
va_end
(
ap
)
;
return
ret
;
}
#
endif
#
ifdef
XP_WIN
#
include
<
wchar
.
h
>
MOZ_MEMORY_API
wchar_t
*
wcsdup_impl
(
const
wchar_t
*
src
)
{
size_t
len
=
wcslen
(
src
)
;
wchar_t
*
dst
=
(
wchar_t
*
)
malloc_impl
(
(
len
+
1
)
*
sizeof
(
wchar_t
)
)
;
if
(
dst
)
wcsncpy
(
dst
src
len
+
1
)
;
return
dst
;
}
MOZ_MEMORY_API
void
*
_aligned_malloc_impl
(
size_t
size
size_t
alignment
)
{
return
memalign_impl
(
alignment
size
)
;
}
#
ifdef
__MINGW32__
MOZ_BEGIN_EXTERN_C
void
*
_aligned_malloc
(
size_t
size
size_t
alignment
)
__attribute__
(
(
alias
(
MOZ_STRINGIFY
(
_aligned_malloc_impl
)
)
)
)
;
void
_aligned_free
(
void
*
aPtr
)
__attribute__
(
(
alias
(
MOZ_STRINGIFY
(
free_impl
)
)
)
)
;
char
*
strndup
(
const
char
*
src
size_t
len
)
__attribute__
(
(
alias
(
MOZ_STRINGIFY
(
strdup_impl
)
)
)
)
;
char
*
strdup
(
const
char
*
src
)
__attribute__
(
(
alias
(
MOZ_STRINGIFY
(
strdup_impl
)
)
)
)
;
char
*
_strdup
(
const
char
*
src
)
__attribute__
(
(
alias
(
MOZ_STRINGIFY
(
strdup_impl
)
)
)
)
;
wchar_t
*
wcsdup
(
const
wchar_t
*
src
)
__attribute__
(
(
alias
(
MOZ_STRINGIFY
(
wcsdup_impl
)
)
)
)
;
wchar_t
*
_wcsdup
(
const
wchar_t
*
src
)
__attribute__
(
(
alias
(
MOZ_STRINGIFY
(
wcsdup_impl
)
)
)
)
;
void
(
*
__MINGW_IMP_SYMBOL
(
_aligned_free
)
)
(
void
*
)
=
_aligned_free
;
void
*
(
*
__MINGW_IMP_SYMBOL
(
_aligned_malloc
)
)
(
size_t
size_t
)
=
_aligned_malloc
;
MOZ_END_EXTERN_C
#
endif
#
endif
