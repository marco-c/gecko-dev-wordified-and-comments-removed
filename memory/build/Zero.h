#
ifndef
ZERO_H
#
define
ZERO_H
#
include
"
Globals
.
h
"
#
include
"
mozjemalloc
.
h
"
#
include
<
string
.
h
>
namespace
mozilla
{
static
inline
void
MaybePoison
(
void
*
aPtr
size_t
aSize
)
{
size_t
size
;
switch
(
opt_poison
)
{
case
NONE
:
return
;
case
SOME
:
size
=
std
:
:
min
(
aSize
opt_poison_size
)
;
break
;
case
ALL
:
size
=
aSize
;
break
;
}
MOZ_ASSERT
(
size
!
=
0
&
&
size
<
=
aSize
)
;
memset
(
aPtr
kAllocPoison
size
)
;
}
static
inline
void
ApplyZeroOrJunk
(
void
*
aPtr
size_t
aSize
)
{
if
(
opt_junk
)
{
memset
(
aPtr
kAllocJunk
aSize
)
;
}
else
if
(
opt_zero
)
{
memset
(
aPtr
0
aSize
)
;
}
}
}
#
endif
