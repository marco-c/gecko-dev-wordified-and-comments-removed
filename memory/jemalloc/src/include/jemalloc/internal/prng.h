#
ifdef
JEMALLOC_H_TYPES
#
define
PRNG_A
UINT64_C
(
6364136223846793005
)
#
define
PRNG_C
UINT64_C
(
1442695040888963407
)
#
endif
#
ifdef
JEMALLOC_H_STRUCTS
#
endif
#
ifdef
JEMALLOC_H_EXTERNS
#
endif
#
ifdef
JEMALLOC_H_INLINES
#
ifndef
JEMALLOC_ENABLE_INLINE
uint64_t
prng_lg_range
(
uint64_t
*
state
unsigned
lg_range
)
;
uint64_t
prng_range
(
uint64_t
*
state
uint64_t
range
)
;
#
endif
#
if
(
defined
(
JEMALLOC_ENABLE_INLINE
)
|
|
defined
(
JEMALLOC_PRNG_C_
)
)
JEMALLOC_ALWAYS_INLINE
uint64_t
prng_lg_range
(
uint64_t
*
state
unsigned
lg_range
)
{
uint64_t
ret
;
assert
(
lg_range
>
0
)
;
assert
(
lg_range
<
=
64
)
;
ret
=
(
*
state
*
PRNG_A
)
+
PRNG_C
;
*
state
=
ret
;
ret
>
>
=
(
64
-
lg_range
)
;
return
(
ret
)
;
}
JEMALLOC_ALWAYS_INLINE
uint64_t
prng_range
(
uint64_t
*
state
uint64_t
range
)
{
uint64_t
ret
;
unsigned
lg_range
;
assert
(
range
>
1
)
;
lg_range
=
ffs_u64
(
pow2_ceil_u64
(
range
)
)
-
1
;
do
{
ret
=
prng_lg_range
(
state
lg_range
)
;
}
while
(
ret
>
=
range
)
;
return
(
ret
)
;
}
#
endif
#
endif
