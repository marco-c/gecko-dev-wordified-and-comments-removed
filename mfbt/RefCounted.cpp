#
include
"
mozilla
/
RefCounted
.
h
"
namespace
mozilla
:
:
detail
{
#
ifdef
MOZ_REFCOUNTED_LEAK_CHECKING
RefCountLogger
:
:
LogAddRefFunc
RefCountLogger
:
:
sLogAddRefFunc
=
nullptr
;
RefCountLogger
:
:
LogReleaseFunc
RefCountLogger
:
:
sLogReleaseFunc
=
nullptr
;
size_t
RefCountLogger
:
:
sNumStaticCtors
=
0
;
const
char
*
RefCountLogger
:
:
sLastStaticCtorTypeName
=
nullptr
;
MFBT_API
void
RefCountLogger
:
:
SetLeakCheckingFunctions
(
LogAddRefFunc
aLogAddRefFunc
LogReleaseFunc
aLogReleaseFunc
)
{
if
(
sNumStaticCtors
>
0
)
{
fprintf
(
stderr
"
RefCounted
objects
addrefed
/
released
(
static
ctor
?
)
total
:
%
zu
"
"
last
type
:
%
s
\
n
"
sNumStaticCtors
sLastStaticCtorTypeName
)
;
sNumStaticCtors
=
0
;
sLastStaticCtorTypeName
=
nullptr
;
}
sLogAddRefFunc
=
aLogAddRefFunc
;
sLogReleaseFunc
=
aLogReleaseFunc
;
}
#
endif
}
