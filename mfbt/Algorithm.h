#
ifndef
mozilla_Algorithm_h
#
define
mozilla_Algorithm_h
namespace
mozilla
{
template
<
class
Iter
class
Pred
>
bool
AllOf
(
Iter
aFirst
Iter
aLast
Pred
aPred
)
{
for
(
;
aFirst
!
=
aLast
;
+
+
aFirst
)
{
if
(
!
aPred
(
*
aFirst
)
)
{
return
false
;
}
}
return
true
;
}
template
<
class
Iter
class
Pred
>
constexpr
bool
ConstExprAllOf
(
Iter
aFirst
Iter
aLast
Pred
aPred
)
{
return
aFirst
=
=
aLast
?
true
:
aLast
-
aFirst
=
=
1
?
aPred
(
*
aFirst
)
:
ConstExprAllOf
(
aFirst
aFirst
+
(
aLast
-
aFirst
)
/
2
aPred
)
&
&
ConstExprAllOf
(
aFirst
+
(
aLast
-
aFirst
)
/
2
aLast
aPred
)
;
}
}
#
endif
