#
ifndef
mozilla_Opaque_h
#
define
mozilla_Opaque_h
#
include
"
mozilla
/
TypeTraits
.
h
"
namespace
mozilla
{
template
<
typename
T
>
class
Opaque
final
{
static_assert
(
mozilla
:
:
IsIntegral
<
T
>
:
:
value
"
mozilla
:
:
Opaque
only
supports
integral
types
"
)
;
T
mValue
;
public
:
Opaque
(
)
{
}
explicit
Opaque
(
T
aValue
)
:
mValue
(
aValue
)
{
}
bool
operator
=
=
(
const
Opaque
&
aOther
)
const
{
return
mValue
=
=
aOther
.
mValue
;
}
bool
operator
!
=
(
const
Opaque
&
aOther
)
const
{
return
!
(
*
this
=
=
aOther
)
;
}
}
;
}
#
endif
