#
include
<
type_traits
>
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
TypeTraits
.
h
"
using
mozilla
:
:
IsDestructible
;
class
PublicDestructible
{
public
:
~
PublicDestructible
(
)
;
}
;
class
PrivateDestructible
{
private
:
~
PrivateDestructible
(
)
;
}
;
class
TrivialDestructible
{
}
;
static_assert
(
IsDestructible
<
PublicDestructible
>
:
:
value
"
public
destructible
class
is
destructible
"
)
;
static_assert
(
!
IsDestructible
<
PrivateDestructible
>
:
:
value
"
private
destructible
class
is
not
destructible
"
)
;
static_assert
(
IsDestructible
<
TrivialDestructible
>
:
:
value
"
trivial
destructible
class
is
destructible
"
)
;
#
if
defined
(
ANDROID
)
&
&
!
defined
(
__LP64__
)
static_assert
(
std
:
:
is_same_v
<
int
intptr_t
>
"
emulated
PRI
[
di
]
PTR
definitions
will
be
wrong
"
)
;
static_assert
(
std
:
:
is_same_v
<
unsigned
int
uintptr_t
>
"
emulated
PRI
[
ouxX
]
PTR
definitions
will
be
wrong
"
)
;
#
endif
int
main
(
)
{
return
0
;
}
