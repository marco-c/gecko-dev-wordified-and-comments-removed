#
include
"
mozilla
/
Range
.
h
"
#
include
<
type_traits
>
using
mozilla
:
:
Range
;
static_assert
(
std
:
:
is_convertible_v
<
Range
<
int
>
Range
<
const
int
>
>
"
Range
should
convert
into
const
"
)
;
static_assert
(
!
std
:
:
is_convertible_v
<
Range
<
const
int
>
Range
<
int
>
>
"
Range
should
not
drop
const
in
conversion
"
)
;
void
test_RangeToBoolConversionShouldCompile
(
)
{
auto
dummy
=
bool
{
Range
<
int
>
{
}
}
;
(
void
)
dummy
;
}
int
main
(
)
{
return
0
;
}
