#
include
"
mozilla
/
Assertions
.
h
"
#
include
<
unistd
.
h
>
#
include
<
signal
.
h
>
#
include
<
sys
/
wait
.
h
>
void
sighandler
(
int
signum
)
{
exit
(
gMozCrashReason
=
=
nullptr
?
1
:
0
)
;
}
int
main
(
int
argc
char
*
*
argv
)
{
if
(
gMozCrashReason
)
{
fprintf
(
stderr
"
gMozCrashReason
unexpectedly
starts
set
to
%
s
.
\
n
"
gMozCrashReason
)
;
return
1
;
}
pid_t
child
=
fork
(
)
;
if
(
child
=
=
0
)
{
if
(
signal
(
SIGSEGV
sighandler
)
=
=
SIG_ERR
)
{
perror
(
argv
[
0
]
)
;
return
1
;
}
mozilla
:
:
detail
:
:
InvalidArrayIndex_CRASH
(
2
2
)
;
}
else
{
int
waitres
;
if
(
wait
(
&
waitres
)
>
=
0
)
{
if
(
WIFEXITED
(
waitres
)
&
&
WEXITSTATUS
(
waitres
)
=
=
0
)
return
0
;
fputs
(
"
Crash
didn
'
t
happen
in
the
expected
way
.
\
n
"
stderr
)
;
return
1
;
}
}
}
