#
ifndef
mozilla_MulOverflowMask_h
#
define
mozilla_MulOverflowMask_h
#
include
<
limits
>
#
include
<
cstdint
>
namespace
mozilla
{
template
<
size_t
N
>
constexpr
size_t
MulOverflowMask
(
)
{
static_assert
(
N
!
=
0
"
Multiplication
requires
at
least
one
bit
"
)
;
if
constexpr
(
N
=
=
1
)
{
return
0
;
}
else
{
constexpr
size_t
highbit
=
size_t
(
1
)
<
<
(
std
:
:
numeric_limits
<
size_t
>
:
:
digits
-
1
)
;
return
highbit
|
(
MulOverflowMask
<
N
/
2
+
(
N
&
1
)
>
(
)
>
>
1
)
;
}
}
}
#
endif
