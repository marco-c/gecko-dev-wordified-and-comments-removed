#
ifndef
mozilla_StaticAnalysisFunctions_h
#
define
mozilla_StaticAnalysisFunctions_h
#
ifndef
__cplusplus
#
ifndef
bool
#
include
<
stdbool
.
h
>
#
endif
#
define
MOZ_CONSTEXPR
#
else
#
include
"
mozilla
/
Attributes
.
h
"
#
define
MOZ_CONSTEXPR
constexpr
#
endif
#
ifdef
MOZ_CLANG_PLUGIN
#
ifdef
__cplusplus
template
<
typename
T
>
static
MOZ_ALWAYS_INLINE
T
*
MOZ_KnownLive
(
T
*
ptr
)
{
return
ptr
;
}
template
<
typename
T
>
static
MOZ_ALWAYS_INLINE
T
&
MOZ_KnownLive
(
T
&
ref
)
{
return
ref
;
}
#
endif
static
MOZ_ALWAYS_INLINE
MOZ_CONSTEXPR
bool
MOZ_AssertAssignmentTest
(
bool
exprResult
)
{
return
exprResult
;
}
#
define
MOZ_CHECK_ASSERT_ASSIGNMENT
(
expr
)
MOZ_AssertAssignmentTest
(
!
!
(
expr
)
)
#
else
#
define
MOZ_CHECK_ASSERT_ASSIGNMENT
(
expr
)
(
!
!
(
expr
)
)
#
define
MOZ_KnownLive
(
expr
)
(
expr
)
#
endif
#
endif
