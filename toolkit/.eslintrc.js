"
use
strict
"
;
module
.
exports
=
{
"
rules
"
:
{
"
arrow
-
spacing
"
:
"
error
"
"
block
-
spacing
"
:
"
error
"
"
comma
-
spacing
"
:
[
"
error
"
{
"
before
"
:
false
"
after
"
:
true
}
]
"
computed
-
property
-
spacing
"
:
[
"
error
"
"
never
"
]
"
consistent
-
return
"
:
"
error
"
"
eol
-
last
"
:
"
error
"
"
keyword
-
spacing
"
:
"
error
"
"
linebreak
-
style
"
:
[
"
error
"
"
unix
"
]
"
no
-
dupe
-
args
"
:
"
error
"
"
no
-
dupe
-
keys
"
:
"
error
"
"
no
-
duplicate
-
case
"
:
"
error
"
"
no
-
labels
"
:
"
error
"
"
no
-
else
-
return
"
:
"
error
"
"
no
-
empty
"
:
[
"
error
"
{
"
allowEmptyCatch
"
:
true
}
]
"
no
-
empty
-
character
-
class
"
:
"
error
"
"
no
-
empty
-
pattern
"
:
"
error
"
"
no
-
ex
-
assign
"
:
"
error
"
"
no
-
extra
-
boolean
-
cast
"
:
"
error
"
"
no
-
extra
-
semi
"
:
"
error
"
"
no
-
func
-
assign
"
:
"
error
"
"
no
-
invalid
-
regexp
"
:
"
error
"
"
no
-
irregular
-
whitespace
"
:
"
error
"
"
no
-
lonely
-
if
"
:
"
error
"
"
no
-
mixed
-
spaces
-
and
-
tabs
"
:
[
"
error
"
"
smart
-
tabs
"
]
"
no
-
native
-
reassign
"
:
"
error
"
"
no
-
negated
-
in
-
lhs
"
:
"
error
"
"
no
-
nested
-
ternary
"
:
"
error
"
"
no
-
new
-
object
"
:
"
error
"
"
no
-
obj
-
calls
"
:
"
error
"
"
no
-
octal
"
:
"
error
"
"
no
-
redeclare
"
:
"
error
"
"
no
-
self
-
compare
"
:
"
error
"
"
no
-
shadow
-
restricted
-
names
"
:
"
error
"
"
no
-
trailing
-
spaces
"
:
"
error
"
"
no
-
unexpected
-
multiline
"
:
"
error
"
"
no
-
unreachable
"
:
"
error
"
"
no
-
with
"
:
"
error
"
"
space
-
before
-
blocks
"
:
"
error
"
"
spaced
-
comment
"
:
"
error
"
"
use
-
isnan
"
:
"
error
"
"
valid
-
typeof
"
:
"
error
"
}
"
env
"
:
{
"
es6
"
:
true
"
browser
"
:
true
}
"
globals
"
:
{
"
Components
"
:
false
"
dump
"
:
true
"
openDialog
"
:
false
"
sizeToContent
"
:
false
}
}
;
