"
use
strict
"
;
const
{
BackgroundUpdate
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
BackgroundUpdate
.
sys
.
mjs
"
)
;
add_setup
(
async
function
test_setup
(
)
{
setupTestCommon
(
null
)
;
await
standardInit
(
)
;
do_get_profile
(
)
;
Services
.
fog
.
initializeFOG
(
)
;
}
)
;
add_task
(
async
function
test_reasons_length
(
)
{
for
(
const
key
of
Object
.
keys
(
BackgroundUpdate
.
REASON
)
)
{
Glean
.
backgroundUpdate
.
reasonsToNotUpdate
.
add
(
key
)
;
Assert
.
ok
(
Array
.
isArray
(
Glean
.
backgroundUpdate
.
reasonsToNotUpdate
.
testGetValue
(
)
)
"
Glean
allows
the
name
of
the
reason
to
be
'
"
+
key
+
"
'
"
)
;
}
}
)
;
add_task
(
async
function
test_reasons_overflow
(
)
{
let
prev
=
await
UpdateUtils
.
getAppUpdateAutoEnabled
(
)
;
try
{
for
(
let
i
=
1
;
i
<
=
21
;
i
+
+
)
{
await
UpdateUtils
.
setAppUpdateAutoEnabled
(
false
)
;
await
BackgroundUpdate
.
_reasonsToNotUpdateInstallation
(
)
;
await
UpdateUtils
.
setAppUpdateAutoEnabled
(
true
)
;
await
BackgroundUpdate
.
_reasonsToNotUpdateInstallation
(
)
;
Assert
.
ok
(
true
"
Overflow
test
successful
for
run
#
"
+
i
)
;
}
}
finally
{
ok
(
true
"
resetting
AppUpdateAutoEnabled
to
"
+
prev
)
;
await
UpdateUtils
.
setAppUpdateAutoEnabled
(
prev
)
;
}
}
)
;
add_task
(
(
)
=
>
{
doTestFinish
(
)
;
}
)
;
