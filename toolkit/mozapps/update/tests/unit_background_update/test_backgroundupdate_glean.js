"
use
strict
"
;
const
{
BackgroundUpdate
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
BackgroundUpdate
.
jsm
"
)
;
const
{
maybeSubmitBackgroundUpdatePing
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
backgroundtasks
/
BackgroundTask_backgroundupdate
.
jsm
"
)
;
XPCOMUtils
.
defineLazyServiceGetter
(
this
"
UpdateService
"
"
mozilla
.
org
/
updates
/
update
-
service
;
1
"
"
nsIApplicationUpdateService
"
)
;
add_task
(
function
test_setup
(
)
{
do_get_profile
(
)
;
Services
.
fog
.
initializeFOG
(
)
;
}
)
;
add_task
(
async
function
test_record_update_environment
(
)
{
await
BackgroundUpdate
.
recordUpdateEnvironment
(
)
;
let
pingSubmitted
=
false
;
let
appUpdateAutoEnabled
=
await
UpdateUtils
.
getAppUpdateAutoEnabled
(
)
;
let
backgroundUpdateEnabled
=
await
UpdateUtils
.
readUpdateConfigSetting
(
"
app
.
update
.
background
.
enabled
"
)
;
GleanPings
.
backgroundUpdate
.
testBeforeNextSubmit
(
reason
=
>
{
Assert
.
equal
(
reason
"
backgroundupdate_task
"
)
;
pingSubmitted
=
true
;
Assert
.
equal
(
Services
.
prefs
.
getBoolPref
(
"
app
.
update
.
service
.
enabled
"
false
)
Glean
.
update
.
serviceEnabled
.
testGetValue
(
)
)
;
Assert
.
equal
(
appUpdateAutoEnabled
Glean
.
update
.
autoDownload
.
testGetValue
(
)
)
;
Assert
.
equal
(
backgroundUpdateEnabled
Glean
.
update
.
backgroundUpdate
.
testGetValue
(
)
)
;
Assert
.
equal
(
UpdateUtils
.
UpdateChannel
Glean
.
update
.
channel
.
testGetValue
(
)
)
;
Assert
.
equal
(
!
Services
.
policies
|
|
Services
.
policies
.
isAllowed
(
"
appUpdate
"
)
Glean
.
update
.
enabled
.
testGetValue
(
)
)
;
Assert
.
equal
(
UpdateService
.
canUsuallyApplyUpdates
Glean
.
update
.
canUsuallyApplyUpdates
.
testGetValue
(
)
)
;
Assert
.
equal
(
UpdateService
.
canUsuallyCheckForUpdates
Glean
.
update
.
canUsuallyCheckForUpdates
.
testGetValue
(
)
)
;
Assert
.
equal
(
UpdateService
.
canUsuallyStageUpdates
Glean
.
update
.
canUsuallyStageUpdates
.
testGetValue
(
)
)
;
Assert
.
equal
(
UpdateService
.
canUsuallyUseBits
Glean
.
update
.
canUsuallyUseBits
.
testGetValue
(
)
)
;
}
)
;
await
maybeSubmitBackgroundUpdatePing
(
)
;
ok
(
pingSubmitted
"
'
background
-
update
'
ping
was
submitted
"
)
;
}
)
;
