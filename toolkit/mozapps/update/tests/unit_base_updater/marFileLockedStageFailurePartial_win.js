const
STATE_AFTER_STAGE
=
STATE_PENDING
;
function
run_test
(
)
{
if
(
!
setupTestCommon
(
)
)
{
return
;
}
gTestFiles
=
gTestFilesPartialSuccess
;
gTestDirs
=
gTestDirsPartialSuccess
;
setTestFilesAndDirsForFailure
(
)
;
setupUpdaterTest
(
FILE_PARTIAL_MAR
false
)
;
}
async
function
setupUpdaterTestFinished
(
)
{
await
runHelperLockFile
(
gTestFiles
[
2
]
)
;
stageUpdate
(
true
)
;
}
function
stageUpdateFinished
(
)
{
checkPostUpdateRunningFile
(
false
)
;
checkUpdateLogContains
(
ERR_ENSURE_COPY
)
;
runUpdate
(
STATE_FAILED_READ_ERROR
false
1
false
)
;
waitForHelperExit
(
)
;
}
async
function
waitForHelperExitFinished
(
)
{
standardInit
(
)
;
checkPostUpdateRunningFile
(
false
)
;
checkFilesAfterUpdateFailure
(
getApplyDirFile
)
;
checkUpdateLogContains
(
ERR_UNABLE_OPEN_DEST
)
;
checkUpdateLogContains
(
STATE_FAILED_READ_ERROR
+
"
\
n
"
+
CALL_QUIT
)
;
await
waitForUpdateXMLFiles
(
)
;
checkUpdateManager
(
STATE_NONE
false
STATE_FAILED
READ_ERROR
1
)
;
checkCallbackLog
(
)
;
}
