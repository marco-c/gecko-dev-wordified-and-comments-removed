function
run_test
(
)
{
if
(
!
MOZ_VERIFY_MAR_SIGNATURE
)
{
return
;
}
if
(
!
setupTestCommon
(
)
)
{
return
;
}
gTestFiles
=
gTestFilesCompleteSuccess
;
gTestDirs
=
gTestDirsCompleteSuccess
;
setTestFilesAndDirsForFailure
(
)
;
setupUpdaterTest
(
FILE_WRONG_CHANNEL_MAR
false
)
;
}
function
setupUpdaterTestFinished
(
)
{
runUpdate
(
STATE_FAILED_MAR_CHANNEL_MISMATCH_ERROR
false
(
USE_EXECV
?
0
:
1
)
false
)
;
}
function
runUpdateFinished
(
)
{
standardInit
(
)
;
Assert
.
equal
(
readStatusState
(
)
STATE_NONE
"
the
status
file
state
"
+
MSG_SHOULD_EQUAL
)
;
Assert
.
ok
(
!
gUpdateManager
.
activeUpdate
"
the
active
update
should
not
be
defined
"
)
;
Assert
.
equal
(
gUpdateManager
.
updateCount
1
"
the
update
manager
updateCount
attribute
"
+
MSG_SHOULD_EQUAL
)
;
Assert
.
equal
(
gUpdateManager
.
getUpdateAt
(
0
)
.
state
STATE_FAILED
"
the
update
state
"
+
MSG_SHOULD_EQUAL
)
;
Assert
.
equal
(
gUpdateManager
.
getUpdateAt
(
0
)
.
errorCode
MAR_CHANNEL_MISMATCH_ERROR
"
the
update
errorCode
"
+
MSG_SHOULD_EQUAL
)
;
checkPostUpdateRunningFile
(
false
)
;
checkFilesAfterUpdateFailure
(
getApplyDirFile
)
;
checkUpdateLogContains
(
STATE_FAILED_MAR_CHANNEL_MISMATCH_ERROR
)
;
waitForFilesInUse
(
)
;
}
