print
(
"
child
process
is
running
"
)
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
function
adjustGeneralPaths
(
)
{
let
dirProvider
=
{
getFile
:
function
AGP_DP_getFile
(
aProp
aPersistent
)
{
aPersistent
.
value
=
false
;
if
(
aProp
=
=
"
XREExeF
"
)
{
let
file
=
Cc
[
"
mozilla
.
org
/
file
/
local
;
1
"
]
.
createInstance
(
Ci
.
nsIFile
)
;
file
.
initWithPath
(
customExePath
)
;
return
file
;
}
return
null
;
}
QueryInterface
:
ChromeUtils
.
generateQI
(
[
"
nsIDirectoryServiceProvider
"
]
)
}
;
let
ds
=
Services
.
dirsvc
.
QueryInterface
(
Ci
.
nsIDirectoryService
)
;
ds
.
QueryInterface
(
Ci
.
nsIProperties
)
.
undefine
(
"
XREExeF
"
)
;
ds
.
registerProvider
(
dirProvider
)
;
let
syncManager
=
Cc
[
"
mozilla
.
org
/
updates
/
update
-
sync
-
manager
;
1
"
]
.
getService
(
Ci
.
nsIUpdateSyncManager
)
;
syncManager
.
resetSemaphore
(
)
;
}
adjustGeneralPaths
(
)
;
print
(
"
child
process
should
now
have
the
semaphore
;
will
exit
in
5
seconds
"
)
;
simulateNoScriptActivity
(
5
)
;
print
(
"
child
process
exiting
now
"
)
;
