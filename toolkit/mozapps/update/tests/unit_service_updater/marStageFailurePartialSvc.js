const
STATE_AFTER_STAGE
=
STATE_FAILED
;
gStagingRemovedUpdate
=
true
;
function
run_test
(
)
{
if
(
!
setupTestCommon
(
)
)
{
return
;
}
gTestFiles
=
gTestFilesPartialSuccess
;
gTestFiles
[
11
]
.
originalFile
=
"
partial
.
png
"
;
gTestDirs
=
gTestDirsPartialSuccess
;
setTestFilesAndDirsForFailure
(
)
;
setupUpdaterTest
(
FILE_PARTIAL_MAR
false
)
;
}
function
setupUpdaterTestFinished
(
)
{
stageUpdate
(
)
;
}
function
stageUpdateFinished
(
)
{
Assert
.
equal
(
readStatusState
(
)
STATE_NONE
"
the
status
file
state
"
+
MSG_SHOULD_EQUAL
)
;
Assert
.
equal
(
gUpdateManager
.
getUpdateAt
(
0
)
.
errorCode
LOADSOURCE_ERROR_WRONG_SIZE
"
the
update
errorCode
"
+
MSG_SHOULD_EQUAL
)
;
checkPostUpdateRunningFile
(
false
)
;
checkFilesAfterUpdateFailure
(
getApplyDirFile
)
;
checkUpdateLogContains
(
ERR_LOADSOURCEFILE_FAILED
)
;
waitForFilesInUse
(
)
;
}
