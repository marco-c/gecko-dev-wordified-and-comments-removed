ChromeUtils
.
defineESModuleGetters
(
this
{
BackgroundUpdate
:
"
resource
:
/
/
gre
/
modules
/
BackgroundUpdate
.
sys
.
mjs
"
}
)
;
const
transitionPerformedPref
=
"
app
.
update
.
background
.
rolledout
"
;
const
backgroundUpdateEnabledPref
=
"
app
.
update
.
background
.
enabled
"
;
const
defaultPrefValue
=
UpdateUtils
.
PER_INSTALLATION_PREFS
[
backgroundUpdateEnabledPref
]
.
defaultValue
;
async
function
testTransition
(
options
)
{
Services
.
prefs
.
clearUserPref
(
transitionPerformedPref
)
;
await
UpdateUtils
.
writeUpdateConfigSetting
(
backgroundUpdateEnabledPref
options
.
initialDefaultValue
{
setDefaultOnly
:
true
}
)
;
await
UpdateUtils
.
writeUpdateConfigSetting
(
backgroundUpdateEnabledPref
options
.
initialUserValue
)
;
BackgroundUpdate
.
ensureExperimentToRolloutTransitionPerformed
(
)
;
Assert
.
equal
(
await
UpdateUtils
.
readUpdateConfigSetting
(
backgroundUpdateEnabledPref
)
options
.
expectedPostTransitionValue
"
Post
transition
option
value
does
not
match
the
expected
value
"
)
;
await
UpdateUtils
.
writeUpdateConfigSetting
(
backgroundUpdateEnabledPref
!
defaultPrefValue
{
setDefaultOnly
:
true
}
)
;
await
UpdateUtils
.
writeUpdateConfigSetting
(
backgroundUpdateEnabledPref
!
defaultPrefValue
)
;
BackgroundUpdate
.
ensureExperimentToRolloutTransitionPerformed
(
)
;
Assert
.
equal
(
await
UpdateUtils
.
readUpdateConfigSetting
(
backgroundUpdateEnabledPref
)
!
defaultPrefValue
"
Transition
should
not
change
the
pref
value
if
it
already
ran
"
)
;
}
async
function
run_test
(
)
{
setupTestCommon
(
null
)
;
standardInit
(
)
;
Services
.
prefs
.
setBoolPref
(
PREF_APP_UPDATE_DISABLEDFORTESTING
true
)
;
const
originalBackgroundUpdateEnabled
=
await
UpdateUtils
.
readUpdateConfigSetting
(
backgroundUpdateEnabledPref
)
;
registerCleanupFunction
(
async
(
)
=
>
{
Services
.
prefs
.
clearUserPref
(
transitionPerformedPref
)
;
await
UpdateUtils
.
writeUpdateConfigSetting
(
backgroundUpdateEnabledPref
originalBackgroundUpdateEnabled
)
;
await
UpdateUtils
.
writeUpdateConfigSetting
(
backgroundUpdateEnabledPref
defaultPrefValue
{
setDefaultOnly
:
true
}
)
;
}
)
;
await
testTransition
(
{
initialDefaultValue
:
true
initialUserValue
:
true
expectedPostTransitionValue
:
true
}
)
;
await
testTransition
(
{
initialDefaultValue
:
true
initialUserValue
:
false
expectedPostTransitionValue
:
false
}
)
;
await
testTransition
(
{
initialDefaultValue
:
false
initialUserValue
:
false
expectedPostTransitionValue
:
true
}
)
;
await
testTransition
(
{
initialDefaultValue
:
false
initialUserValue
:
true
expectedPostTransitionValue
:
true
}
)
;
doTestFinish
(
)
;
}
