async
function
verifyPref
(
expectedValue
)
{
let
configValue
=
await
UpdateUtils
.
getAppUpdateAutoEnabled
(
)
;
Assert
.
equal
(
configValue
expectedValue
"
Value
returned
by
getAppUpdateAutoEnabled
should
have
"
+
"
matched
the
expected
value
"
)
;
}
async
function
run_test
(
)
{
setupTestCommon
(
null
)
;
await
standardInit
(
)
;
let
configFile
=
getUpdateDirFile
(
FILE_UPDATE_CONFIG_JSON
)
;
Services
.
prefs
.
setBoolPref
(
"
app
.
update
.
auto
.
migrated
"
false
)
;
Services
.
prefs
.
clearUserPref
(
"
app
.
update
.
auto
"
)
;
Assert
.
ok
(
!
configFile
.
exists
(
)
"
Config
file
should
not
exist
yet
"
)
;
await
verifyPref
(
UpdateUtils
.
PER_INSTALLATION_PREFS
[
"
app
.
update
.
auto
"
]
.
defaultValue
)
;
debugDump
(
"
about
to
remove
config
file
"
)
;
configFile
.
remove
(
false
)
;
Services
.
prefs
.
setBoolPref
(
"
app
.
update
.
auto
.
migrated
"
false
)
;
Services
.
prefs
.
setBoolPref
(
"
app
.
update
.
auto
"
false
)
;
Assert
.
ok
(
!
configFile
.
exists
(
)
"
Config
file
should
have
been
removed
"
)
;
await
verifyPref
(
false
)
;
Services
.
prefs
.
setBoolPref
(
"
app
.
update
.
auto
"
true
)
;
await
verifyPref
(
false
)
;
debugDump
(
"
about
to
remove
config
file
"
)
;
configFile
.
remove
(
false
)
;
Assert
.
ok
(
!
configFile
.
exists
(
)
"
Config
file
should
have
been
removed
"
)
;
let
configValue
=
await
UpdateUtils
.
getAppUpdateAutoEnabled
(
)
;
Assert
.
equal
(
configValue
true
"
getAppUpdateAutoEnabled
should
have
returned
the
default
value
(
true
)
"
)
;
await
UpdateUtils
.
setAppUpdateAutoEnabled
(
false
)
;
await
verifyPref
(
false
)
;
Services
.
prefs
.
setBoolPref
(
"
app
.
update
.
auto
.
migrated
"
false
)
;
Services
.
prefs
.
setBoolPref
(
"
app
.
update
.
auto
"
true
)
;
configFile
.
remove
(
false
)
;
Assert
.
ok
(
!
configFile
.
exists
(
)
"
App
update
config
file
should
have
been
removed
"
)
;
await
verifyPref
(
true
)
;
await
UpdateUtils
.
setAppUpdateAutoEnabled
(
false
)
;
await
verifyPref
(
false
)
;
await
doTestFinish
(
)
;
}
