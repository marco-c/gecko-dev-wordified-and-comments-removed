"
use
strict
"
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
AppUpdater
:
"
resource
:
/
/
gre
/
modules
/
AppUpdater
.
jsm
"
sinon
:
"
resource
:
/
/
testing
-
common
/
Sinon
.
jsm
"
}
)
;
add_setup
(
function
setup_internalErrorTest
(
)
{
const
sandbox
=
sinon
.
createSandbox
(
)
;
sandbox
.
stub
(
AppUpdater
.
prototype
"
aus
"
)
.
get
(
(
)
=
>
{
throw
new
Error
(
"
intentional
test
error
"
)
;
}
)
;
sandbox
.
stub
(
AppUpdater
.
prototype
"
checker
"
)
.
get
(
(
)
=
>
{
throw
new
Error
(
"
intentional
test
error
"
)
;
}
)
;
sandbox
.
stub
(
AppUpdater
.
prototype
"
um
"
)
.
get
(
(
)
=
>
{
throw
new
Error
(
"
intentional
test
error
"
)
;
}
)
;
registerCleanupFunction
(
(
)
=
>
{
sandbox
.
restore
(
)
;
}
)
;
}
)
;
add_task
(
async
function
aboutDialog_AppUpdater_stop_internal_error
(
)
{
let
params
=
{
}
;
await
runAboutDialogUpdateTest
(
params
[
{
panelId
:
"
internalError
"
}
aboutDialog
=
>
{
aboutDialog
.
gAppUpdater
.
_appUpdater
.
stop
(
)
;
}
{
panelId
:
"
internalError
"
}
]
)
;
}
)
;
