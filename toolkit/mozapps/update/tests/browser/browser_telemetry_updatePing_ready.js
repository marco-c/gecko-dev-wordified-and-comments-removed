"
use
strict
"
;
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
TelemetryArchiveTesting
.
jsm
"
this
)
;
add_task
(
async
function
telemetry_updatePing_ready
(
)
{
let
archiveChecker
=
new
TelemetryArchiveTesting
.
Checker
(
)
;
await
archiveChecker
.
promiseInit
(
)
;
let
updateParams
=
"
"
;
await
runTelemetryUpdateTest
(
updateParams
"
update
-
downloaded
"
)
;
let
updatePing
;
await
TestUtils
.
waitForCondition
(
async
function
(
)
{
updatePing
=
await
archiveChecker
.
promiseFindPing
(
"
update
"
[
[
[
"
payload
"
"
reason
"
]
"
ready
"
]
[
[
"
payload
"
"
targetBuildId
"
]
"
20080811053724
"
]
]
)
;
return
!
!
updatePing
;
}
"
Make
sure
the
ping
is
generated
before
trying
to
validate
it
.
"
500
100
)
;
ok
(
updatePing
"
The
'
update
'
ping
must
be
correctly
sent
.
"
)
;
for
(
let
f
of
[
"
targetVersion
"
"
targetChannel
"
"
targetDisplayVersion
"
]
)
{
ok
(
f
in
updatePing
.
payload
{
f
}
must
be
available
in
the
update
ping
payload
.
)
;
ok
(
typeof
updatePing
.
payload
[
f
]
=
=
"
string
"
{
f
}
must
have
the
correct
format
.
)
;
}
ok
(
"
clientId
"
in
updatePing
"
The
update
ping
must
report
a
client
id
.
"
)
;
ok
(
"
environment
"
in
updatePing
"
The
update
ping
must
report
the
environment
.
"
)
;
}
)
;
