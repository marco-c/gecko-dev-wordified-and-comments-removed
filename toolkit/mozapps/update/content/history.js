var
gUpdateHistory
=
{
_view
:
null
onLoad
(
)
{
this
.
_view
=
document
.
getElementById
(
"
historyItems
"
)
;
var
um
=
Cc
[
"
mozilla
.
org
/
updates
/
update
-
manager
;
1
"
]
.
getService
(
Ci
.
nsIUpdateManager
)
;
var
uc
=
um
.
updateCount
;
if
(
uc
)
{
while
(
this
.
_view
.
hasChildNodes
(
)
)
this
.
_view
.
firstChild
.
remove
(
)
;
var
bundle
=
document
.
getElementById
(
"
updateBundle
"
)
;
for
(
var
i
=
0
;
i
<
uc
;
+
+
i
)
{
var
update
=
um
.
getUpdateAt
(
i
)
;
if
(
!
update
|
|
!
update
.
name
)
continue
;
if
(
!
update
.
statusText
)
continue
;
var
element
=
document
.
createXULElement
(
"
richlistitem
"
)
;
element
.
className
=
"
update
"
;
this
.
_view
.
appendChild
(
element
)
;
element
.
name
=
bundle
.
getFormattedString
(
"
updateFullName
"
[
update
.
name
update
.
buildID
]
)
;
element
.
installDate
=
this
.
_formatDate
(
update
.
installDate
)
;
if
(
update
.
detailsURL
)
element
.
detailsURL
=
update
.
detailsURL
;
else
element
.
hideDetailsURL
=
true
;
element
.
status
=
update
.
statusText
;
}
}
var
cancelbutton
=
document
.
documentElement
.
getButton
(
"
cancel
"
)
;
cancelbutton
.
focus
(
)
;
}
_formatDate
(
seconds
)
{
var
date
=
new
Date
(
seconds
)
;
const
dtOptions
=
{
year
:
"
numeric
"
month
:
"
long
"
day
:
"
numeric
"
hour
:
"
numeric
"
minute
:
"
numeric
"
second
:
"
numeric
"
}
;
return
date
.
toLocaleString
(
undefined
dtOptions
)
;
}
}
;
