"
use
strict
"
;
const
TEST_PATH
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
http
:
/
/
example
.
com
"
)
;
add_task
(
async
function
test_download_filename_extension
(
)
{
let
windowObserver
=
BrowserTestUtils
.
domWindowOpenedAndLoaded
(
)
;
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
{
gBrowser
opening
:
TEST_PATH
+
"
unknownContentType
.
EXE
"
waitForLoad
:
false
}
)
;
let
win
=
await
windowObserver
;
let
list
=
await
Downloads
.
getList
(
Downloads
.
ALL
)
;
let
downloadFinishedPromise
=
new
Promise
(
resolve
=
>
{
list
.
addView
(
{
onDownloadChanged
(
download
)
{
if
(
download
.
stopped
)
{
list
.
removeView
(
this
)
;
resolve
(
download
)
;
}
}
}
)
;
}
)
;
let
dialog
=
win
.
document
.
querySelector
(
"
dialog
"
)
;
dialog
.
getButton
(
"
accept
"
)
.
removeAttribute
(
"
disabled
"
)
;
dialog
.
acceptDialog
(
)
;
let
download
=
await
downloadFinishedPromise
;
let
f
=
new
FileUtils
.
File
(
download
.
target
.
path
)
;
let
extensions
=
f
.
leafName
.
substring
(
f
.
leafName
.
indexOf
(
"
.
"
)
)
;
is
(
extensions
"
.
EXE
"
"
Should
not
duplicate
extension
"
)
;
await
list
.
remove
(
download
)
;
f
.
remove
(
true
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
