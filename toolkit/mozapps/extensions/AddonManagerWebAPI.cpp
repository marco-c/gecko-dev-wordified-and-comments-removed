#
include
"
AddonManagerWebAPI
.
h
"
#
include
"
mozilla
/
BasePrincipal
.
h
"
#
include
"
mozilla
/
dom
/
Document
.
h
"
#
include
"
mozilla
/
dom
/
Navigator
.
h
"
#
include
"
mozilla
/
dom
/
NavigatorBinding
.
h
"
#
include
"
mozilla
/
Preferences
.
h
"
#
include
"
mozilla
/
StaticPrefs_extensions
.
h
"
#
include
"
nsGlobalWindowInner
.
h
"
#
include
"
xpcpublic
.
h
"
#
include
"
nsIDocShell
.
h
"
#
include
"
nsIScriptObjectPrincipal
.
h
"
namespace
mozilla
{
using
namespace
mozilla
:
:
dom
;
#
ifndef
MOZ_THUNDERBIRD
#
define
MOZ_AMO_HOSTNAME
"
addons
.
mozilla
.
org
"
#
define
MOZ_AMO_STAGE_HOSTNAME
"
addons
.
allizom
.
org
"
#
define
MOZ_AMO_DEV_HOSTNAME
"
addons
-
dev
.
allizom
.
org
"
#
else
#
define
MOZ_AMO_HOSTNAME
"
addons
.
thunderbird
.
net
"
#
define
MOZ_AMO_STAGE_HOSTNAME
"
addons
-
stage
.
thunderbird
.
net
"
#
undef
MOZ_AMO_DEV_HOSTNAME
#
endif
static
bool
IsValidHost
(
const
nsACString
&
host
)
{
if
(
StaticPrefs
:
:
privacy_resistFingerprinting_block_mozAddonManager
(
)
)
{
return
false
;
}
if
(
host
.
EqualsLiteral
(
MOZ_AMO_HOSTNAME
)
)
{
return
true
;
}
if
(
StaticPrefs
:
:
extensions_webapi_testing
(
)
)
{
if
(
host
.
LowerCaseEqualsLiteral
(
MOZ_AMO_STAGE_HOSTNAME
)
|
|
#
ifdef
MOZ_AMO_DEV_HOSTNAME
host
.
LowerCaseEqualsLiteral
(
MOZ_AMO_DEV_HOSTNAME
)
|
|
#
endif
host
.
LowerCaseEqualsLiteral
(
"
example
.
com
"
)
)
{
return
true
;
}
}
return
false
;
}
bool
AddonManagerWebAPI
:
:
IsValidSite
(
nsIURI
*
uri
)
{
if
(
!
uri
)
{
return
false
;
}
if
(
!
uri
-
>
SchemeIs
(
"
https
"
)
)
{
if
(
!
(
xpc
:
:
IsInAutomation
(
)
&
&
StaticPrefs
:
:
extensions_webapi_testing_http
(
)
)
)
{
return
false
;
}
}
nsAutoCString
host
;
nsresult
rv
=
uri
-
>
GetHost
(
host
)
;
if
(
NS_FAILED
(
rv
)
)
{
return
false
;
}
return
IsValidHost
(
host
)
;
}
#
ifndef
ANDROID
bool
AddonManagerWebAPI
:
:
IsAPIEnabled
(
JSContext
*
aCx
JSObject
*
aGlobal
)
{
MOZ_DIAGNOSTIC_ASSERT
(
JS_IsGlobalObject
(
aGlobal
)
)
;
nsCOMPtr
<
nsPIDOMWindowInner
>
win
=
xpc
:
:
WindowOrNull
(
aGlobal
)
;
if
(
!
win
)
{
return
false
;
}
while
(
win
)
{
nsCOMPtr
<
nsIScriptObjectPrincipal
>
sop
=
do_QueryInterface
(
win
)
;
if
(
!
sop
)
{
return
false
;
}
nsCOMPtr
<
nsIPrincipal
>
principal
=
sop
-
>
GetPrincipal
(
)
;
if
(
!
principal
)
{
return
false
;
}
if
(
principal
-
>
IsSystemPrincipal
(
)
)
{
return
true
;
}
nsCOMPtr
<
nsIDocShell
>
docShell
=
win
-
>
GetDocShell
(
)
;
if
(
!
docShell
)
{
return
false
;
}
if
(
!
IsValidSite
(
win
-
>
GetDocumentURI
(
)
)
)
{
return
false
;
}
nsCOMPtr
<
nsIDocShellTreeItem
>
parent
;
nsresult
rv
=
docShell
-
>
GetInProcessSameTypeParent
(
getter_AddRefs
(
parent
)
)
;
if
(
NS_FAILED
(
rv
)
)
{
return
false
;
}
if
(
!
parent
)
{
return
docShell
-
>
GetBrowsingContext
(
)
-
>
IsTopContent
(
)
;
}
Document
*
doc
=
win
-
>
GetDoc
(
)
;
if
(
!
doc
)
{
return
false
;
}
doc
=
doc
-
>
GetInProcessParentDocument
(
)
;
if
(
!
doc
)
{
return
false
;
}
win
=
doc
-
>
GetInnerWindow
(
)
;
}
return
false
;
}
#
else
bool
AddonManagerWebAPI
:
:
IsAPIEnabled
(
JSContext
*
aCx
JSObject
*
aGlobal
)
{
return
false
;
}
#
endif
namespace
dom
{
bool
AddonManagerPermissions
:
:
IsHostPermitted
(
const
GlobalObject
&
const
nsAString
&
host
)
{
return
IsValidHost
(
NS_ConvertUTF16toUTF8
(
host
)
)
;
}
}
}
