Components
.
utils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
Components
.
utils
.
import
(
"
resource
:
/
/
gre
/
modules
/
AddonManager
.
jsm
"
)
;
const
PASS_PREF
=
"
symboltest
.
instanceid
.
pass
"
;
const
FAIL_BOGUS_PREF
=
"
symboltest
.
instanceid
.
fail_bogus
"
;
const
FAIL_ID_PREF
=
"
symboltest
.
instanceid
.
fail_bogus
"
;
const
ADDON_ID
=
"
test_symbol
tests
.
mozilla
.
org
"
;
function
install
(
data
reason
)
{
}
function
startup
(
data
reason
)
{
Services
.
prefs
.
setBoolPref
(
PASS_PREF
false
)
;
Services
.
prefs
.
setBoolPref
(
FAIL_BOGUS_PREF
false
)
;
Services
.
prefs
.
setBoolPref
(
FAIL_ID_PREF
false
)
;
if
(
data
.
hasOwnProperty
(
"
instanceID
"
)
&
&
data
.
instanceID
)
{
AddonManager
.
getAddonByInstanceID
(
data
.
instanceID
)
.
then
(
addon
=
>
{
if
(
addon
.
id
=
=
ADDON_ID
)
{
Services
.
prefs
.
setBoolPref
(
PASS_PREF
true
)
;
}
}
)
.
catch
(
err
=
>
{
throw
Error
(
"
no
addon
found
for
symbol
"
)
;
}
)
;
}
AddonManager
.
getAddonByInstanceID
(
Symbol
(
"
bad
symbol
"
)
)
.
then
(
addon
=
>
{
if
(
addon
=
=
null
)
{
Services
.
prefs
.
setBoolPref
(
FAIL_BOGUS_PREF
true
)
;
}
else
{
throw
Error
(
"
bad
symbol
should
not
match
:
"
addon
)
;
}
}
)
.
catch
(
err
=
>
{
throw
Error
(
"
promise
should
not
have
rejected
:
"
+
err
)
;
}
)
;
AddonManager
.
getAddonByInstanceID
(
Symbol
(
ADDON_ID
)
)
.
then
(
addon
=
>
{
if
(
addon
=
=
null
)
{
Services
.
prefs
.
setBoolPref
(
FAIL_ID_PREF
true
)
;
}
else
{
throw
Error
(
"
bad
symbol
should
not
match
:
"
addon
)
;
}
}
)
.
catch
(
err
=
>
{
throw
Error
(
"
promise
should
not
have
rejected
:
"
+
err
)
;
}
)
;
}
function
shutdown
(
data
reason
)
{
}
function
uninstall
(
data
reason
)
{
}
