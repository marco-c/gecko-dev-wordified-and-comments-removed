function
setup_redirect
(
aSettings
)
{
var
url
=
"
https
:
/
/
example
.
com
/
browser
/
"
+
RELATIVE_DIR
+
"
redirect
.
sjs
?
mode
=
setup
"
;
for
(
var
name
in
aSettings
)
{
url
+
=
"
&
"
+
name
+
"
=
"
+
aSettings
[
name
]
;
}
var
req
=
new
XMLHttpRequest
(
)
;
req
.
open
(
"
GET
"
url
false
)
;
req
.
send
(
null
)
;
}
var
gInstall
=
null
;
function
test
(
)
{
setInstallTriggerPrefs
(
)
;
Harness
.
downloadFailedCallback
=
download_failed
;
Harness
.
installsCompletedCallback
=
finish_failed_download
;
Harness
.
setup
(
)
;
PermissionTestUtils
.
add
(
"
http
:
/
/
example
.
com
/
"
"
install
"
Services
.
perms
.
ALLOW_ACTION
)
;
Services
.
prefs
.
setBoolPref
(
PREF_INSTALL_REQUIREBUILTINCERTS
false
)
;
setup_redirect
(
{
"
X
-
Target
-
Digest
"
:
"
sha1
:
foo
"
Location
:
"
http
:
/
/
example
.
com
/
browser
/
"
+
RELATIVE_DIR
+
"
amosigned
.
xpi
"
}
)
;
var
url
=
"
https
:
/
/
example
.
com
/
browser
/
"
+
RELATIVE_DIR
+
"
redirect
.
sjs
?
mode
=
redirect
"
;
var
triggers
=
encodeURIComponent
(
JSON
.
stringify
(
{
"
Unsigned
XPI
"
:
{
URL
:
url
toString
(
)
{
return
this
.
URL
;
}
}
}
)
)
;
gBrowser
.
selectedTab
=
BrowserTestUtils
.
addTab
(
gBrowser
)
;
BrowserTestUtils
.
startLoadingURIString
(
gBrowser
TESTROOT
+
"
installtrigger
.
html
?
"
+
triggers
)
;
}
function
download_failed
(
install
)
{
is
(
install
.
error
AddonManager
.
ERROR_INCORRECT_HASH
"
Should
have
seen
a
hash
failure
"
)
;
gInstall
=
install
;
}
function
finish_failed_download
(
)
{
Harness
.
installEndedCallback
=
install_ended
;
Harness
.
installsCompletedCallback
=
finish_test
;
Harness
.
setup
(
)
;
setup_redirect
(
{
"
X
-
Target
-
Digest
"
:
"
sha1
:
ee95834ad862245a9ef99ccecc2a857cadc16404
"
Location
:
"
http
:
/
/
example
.
com
/
browser
/
"
+
RELATIVE_DIR
+
"
amosigned
.
xpi
"
}
)
;
Harness
.
onNewInstall
(
gInstall
)
;
AddonManager
.
installAddonFromWebpage
(
"
application
/
x
-
xpinstall
"
gBrowser
.
selectedBrowser
gBrowser
.
contentPrincipal
gInstall
)
;
}
function
install_ended
(
install
addon
)
{
return
addon
.
uninstall
(
)
;
}
function
finish_test
(
count
)
{
is
(
count
1
"
1
Add
-
on
should
have
been
successfully
installed
"
)
;
PermissionTestUtils
.
remove
(
"
http
:
/
/
example
.
com
"
"
install
"
)
;
Services
.
prefs
.
clearUserPref
(
PREF_INSTALL_REQUIREBUILTINCERTS
)
;
gBrowser
.
removeCurrentTab
(
)
;
Harness
.
finish
(
)
;
}
