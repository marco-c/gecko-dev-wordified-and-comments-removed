"
use
strict
"
;
SimpleTest
.
ignoreAllUncaughtExceptions
(
true
)
;
function
changeFullscreen
(
browser
fullscreenState
)
{
return
SpecialPowers
.
spawn
(
browser
[
fullscreenState
]
async
function
(
state
)
{
if
(
state
)
{
await
content
.
document
.
body
.
requestFullscreen
(
)
;
}
else
{
await
content
.
document
.
exitFullscreen
(
)
;
}
}
)
;
}
function
triggerInstall
(
browser
xpi_url
)
{
return
SpecialPowers
.
spawn
(
browser
[
xpi_url
]
async
function
(
xpi_url
)
{
content
.
location
=
xpi_url
;
}
)
;
}
add_task
(
async
function
testFullscreenBlockAddonInstallPrompt
(
)
{
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
TESTROOT
)
;
await
changeFullscreen
(
gBrowser
.
selectedBrowser
true
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
window
.
fullScreen
"
Waiting
for
window
to
enter
fullscreen
"
)
;
let
addonEventPromise
=
TestUtils
.
topicObserved
(
"
addon
-
install
-
fullscreen
-
blocked
"
)
;
await
triggerInstall
(
gBrowser
.
selectedBrowser
"
amosigned
.
xpi
"
)
;
await
addonEventPromise
;
let
panelOpened
;
try
{
panelOpened
=
await
TestUtils
.
waitForCondition
(
(
)
=
>
PopupNotifications
.
isPanelOpen
100
10
)
;
}
catch
(
ex
)
{
panelOpened
=
false
;
}
is
(
panelOpened
false
"
Addon
installation
prompt
not
opened
"
)
;
window
.
fullScreen
=
false
;
await
BrowserTestUtils
.
waitForEvent
(
window
"
fullscreenchange
"
)
;
await
BrowserTestUtils
.
removeTab
(
gBrowser
.
selectedTab
)
;
}
)
;
add_task
(
async
function
testFullscreenCloseAddonInstallPrompt
(
)
{
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
http
:
/
/
example
.
com
"
)
;
let
addonEventPromise
=
TestUtils
.
topicObserved
(
"
webextension
-
permission
-
prompt
"
)
;
await
SpecialPowers
.
spawn
(
gBrowser
.
selectedBrowser
[
TESTROOT
+
"
amosigned
.
xpi
"
]
xpi_url
=
>
{
this
.
content
.
location
=
xpi_url
;
}
)
;
info
(
"
Wait
for
webextension
-
permission
-
prompt
"
)
;
await
addonEventPromise
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
PopupNotifications
.
isPanelOpen
"
Waiting
for
addon
installation
prompt
to
open
"
)
;
Assert
.
ok
(
PopupNotifications
.
getNotification
(
"
addon
-
webext
-
permissions
"
gBrowser
.
selectedBrowser
)
!
=
null
"
Opened
notification
is
webextension
permissions
prompt
"
)
;
await
changeFullscreen
(
gBrowser
.
selectedBrowser
true
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
window
.
fullScreen
"
Waiting
for
window
to
enter
fullscreen
"
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
!
PopupNotifications
.
isPanelOpen
"
Waiting
for
addon
installation
prompt
to
close
"
)
;
window
.
fullScreen
=
false
;
await
BrowserTestUtils
.
waitForEvent
(
window
"
fullscreenchange
"
)
;
await
BrowserTestUtils
.
removeTab
(
gBrowser
.
selectedTab
)
;
}
)
;
