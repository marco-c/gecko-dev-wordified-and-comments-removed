"
use
strict
"
;
SimpleTest
.
ignoreAllUncaughtExceptions
(
true
)
;
function
changeFullscreen
(
browser
fullscreenState
)
{
return
ContentTask
.
spawn
(
browser
fullscreenState
async
function
(
state
)
{
if
(
state
)
{
await
content
.
document
.
body
.
requestFullscreen
(
)
;
}
else
{
await
content
.
document
.
exitFullscreen
(
)
;
}
}
)
;
}
function
triggerInstall
(
browser
trigger
)
{
return
ContentTask
.
spawn
(
browser
trigger
async
function
(
trigger
)
{
content
.
InstallTrigger
.
install
(
trigger
)
;
}
)
;
}
add_task
(
async
function
testFullscreenBlockAddonInstallPrompt
(
)
{
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
TESTROOT
)
;
await
changeFullscreen
(
gBrowser
.
selectedBrowser
true
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
window
.
fullScreen
"
Waiting
for
window
to
enter
fullscreen
"
)
;
let
addonEventPromise
=
TestUtils
.
topicObserved
(
"
addon
-
install
-
blocked
-
silent
"
)
;
await
triggerInstall
(
gBrowser
.
selectedBrowser
{
"
XPI
"
:
"
amosigned
.
xpi
"
}
)
;
await
addonEventPromise
;
let
panelOpened
;
try
{
panelOpened
=
await
TestUtils
.
waitForCondition
(
(
)
=
>
PopupNotifications
.
isPanelOpen
100
10
)
;
}
catch
(
ex
)
{
panelOpened
=
false
;
}
is
(
panelOpened
false
"
Addon
installation
prompt
not
opened
"
)
;
window
.
fullScreen
=
false
;
await
BrowserTestUtils
.
removeTab
(
gBrowser
.
selectedTab
)
;
}
)
;
add_task
(
async
function
testFullscreenCloseAddonInstallPrompt
(
)
{
let
triggers
=
encodeURIComponent
(
JSON
.
stringify
(
{
"
XPI
"
:
"
amosigned
.
xpi
"
}
)
)
;
let
target
=
TESTROOT
+
"
installtrigger
.
html
?
"
+
triggers
;
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
http
:
/
/
example
.
com
"
)
;
let
addonEventPromise
=
TestUtils
.
topicObserved
(
"
addon
-
install
-
blocked
"
)
;
BrowserTestUtils
.
loadURI
(
gBrowser
.
selectedBrowser
target
)
;
await
addonEventPromise
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
PopupNotifications
.
isPanelOpen
"
Waiting
for
addon
installation
prompt
to
open
"
)
;
Assert
.
ok
(
PopupNotifications
.
getNotification
(
"
addon
-
install
-
blocked
"
gBrowser
.
selectedBrowser
)
!
=
null
"
Opened
notification
is
installation
blocked
prompt
"
)
;
await
changeFullscreen
(
gBrowser
.
selectedBrowser
true
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
window
.
fullScreen
"
Waiting
for
window
to
enter
fullscreen
"
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
!
PopupNotifications
.
isPanelOpen
"
Waiting
for
addon
installation
prompt
to
close
"
)
;
window
.
fullScreen
=
false
;
await
BrowserTestUtils
.
removeTab
(
gBrowser
.
selectedTab
)
;
}
)
;
