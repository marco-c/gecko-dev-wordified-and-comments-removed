const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
var
EXPORTED_SYMBOLS
=
[
"
monitor
"
]
;
function
notify
(
event
originalMethod
data
reason
)
{
let
info
=
{
event
data
:
Object
.
assign
(
{
}
data
{
installPath
:
data
.
installPath
.
path
resourceURI
:
data
.
resourceURI
.
spec
}
)
reason
}
;
let
subject
=
{
wrappedJSObject
:
{
data
}
}
;
Services
.
obs
.
notifyObservers
(
subject
"
bootstrapmonitor
-
event
"
JSON
.
stringify
(
info
)
)
;
if
(
originalMethod
)
originalMethod
(
data
reason
)
;
}
var
monitor
=
function
(
scope
methods
=
[
"
install
"
"
startup
"
"
shutdown
"
"
uninstall
"
]
)
{
for
(
let
event
of
methods
)
{
scope
[
event
]
=
notify
.
bind
(
null
event
scope
[
event
]
)
;
}
}
;
