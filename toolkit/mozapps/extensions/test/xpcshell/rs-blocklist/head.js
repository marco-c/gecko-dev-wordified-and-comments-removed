const
MLBF_RECORD
=
{
id
:
"
A
blocklist
entry
that
refers
to
a
MLBF
file
"
last_modified
:
1
attachment
:
{
size
:
32
hash
:
"
6af648a5d6ce6dbee99b0aab1780d24d204977a6606ad670d5372ef22fac1052
"
filename
:
"
does
-
not
-
matter
.
bin
"
}
attachment_type
:
"
bloomfilter
-
base
"
generation_time
:
1577833200000
}
;
async
function
load_mlbf_record_as_blob
(
)
{
const
url
=
Services
.
io
.
newFileURI
(
do_get_file
(
"
.
.
/
data
/
mlbf
-
blocked1
-
unblocked2
.
bin
"
)
)
.
spec
;
Cu
.
importGlobalProperties
(
[
"
fetch
"
]
)
;
return
(
await
fetch
(
url
)
)
.
blob
(
)
;
}
function
getExtensionBlocklistMLBF
(
)
{
const
ExtensionBlocklistMLBF
=
Blocklist
.
ExtensionBlocklist
;
Assert
.
ok
(
Services
.
prefs
.
getBoolPref
(
"
extensions
.
blocklist
.
useMLBF
"
false
)
"
blocklist
.
useMLBF
should
be
true
"
)
;
return
ExtensionBlocklistMLBF
;
}
async
function
toggleStashPref
(
val
callbackAfterPrefChange
=
(
)
=
>
{
}
)
{
const
ExtensionBlocklistMLBF
=
getExtensionBlocklistMLBF
(
)
;
Assert
.
ok
(
!
ExtensionBlocklistMLBF
.
_updatePromise
"
no
pending
update
"
)
;
Services
.
prefs
.
setBoolPref
(
"
extensions
.
blocklist
.
useMLBF
.
stashes
"
val
)
;
callbackAfterPrefChange
(
)
;
Assert
.
ok
(
ExtensionBlocklistMLBF
.
_updatePromise
"
update
pending
"
)
;
await
Blocklist
.
ExtensionBlocklist
.
_updatePromise
;
}
