"
use
strict
"
;
Services
.
prefs
.
setBoolPref
(
"
extensions
.
blocklist
.
useMLBF
"
true
)
;
const
ExtensionBlocklistMLBF
=
getExtensionBlocklistMLBF
(
)
;
ExtensionBlocklistMLBF
.
ensureInitialized
(
)
;
add_task
(
async
function
collapse_multiple_pending_update_requests
(
)
{
const
observed
=
[
]
;
const
originalClientGet
=
ExtensionBlocklistMLBF
.
_client
.
get
;
const
spyClientGet
=
tag
=
>
{
ExtensionBlocklistMLBF
.
_client
.
get
=
async
function
(
)
{
observed
.
push
(
tag
)
;
let
dummyRecord
=
JSON
.
parse
(
JSON
.
stringify
(
MLBF_RECORD
)
)
;
dummyRecord
.
tagged
=
tag
;
return
[
dummyRecord
]
;
}
;
}
;
const
originalFetchMLBF
=
ExtensionBlocklistMLBF
.
_fetchMLBF
;
ExtensionBlocklistMLBF
.
_fetchMLBF
=
async
function
(
record
)
{
observed
.
push
(
fetchMLBF
:
{
record
.
tagged
}
)
;
throw
new
Error
(
Deliberately
ignoring
call
to
MLBF
:
{
record
.
tagged
}
)
;
}
;
spyClientGet
(
"
initial
"
)
;
let
update1
=
ExtensionBlocklistMLBF
.
_updateMLBF
(
false
)
;
spyClientGet
(
"
unexpected
update2
"
)
;
let
update2
=
ExtensionBlocklistMLBF
.
_updateMLBF
(
false
)
;
spyClientGet
(
"
forced1
"
)
;
let
forcedUpdate1
=
ExtensionBlocklistMLBF
.
_updateMLBF
(
true
)
;
spyClientGet
(
"
forced2
"
)
;
let
forcedUpdate2
=
ExtensionBlocklistMLBF
.
_updateMLBF
(
true
)
;
let
res
=
await
Promise
.
all
(
[
update1
update2
forcedUpdate1
forcedUpdate2
]
)
;
Assert
.
equal
(
observed
.
length
4
"
expected
number
of
observed
events
"
)
;
Assert
.
equal
(
observed
[
0
]
"
initial
"
"
First
update
should
request
records
"
)
;
Assert
.
equal
(
observed
[
1
]
"
forced1
"
"
Forced
update
supersedes
initial
"
)
;
Assert
.
equal
(
observed
[
2
]
"
forced2
"
"
Forced
update
supersedes
forced1
"
)
;
Assert
.
equal
(
observed
[
3
]
"
fetchMLBF
:
forced2
"
"
expected
fetch
result
"
)
;
Assert
.
equal
(
res
[
0
]
res
[
1
]
"
update1
=
=
update2
"
)
;
Assert
.
equal
(
res
[
1
]
res
[
2
]
"
update2
=
=
forcedUpdate1
"
)
;
Assert
.
equal
(
res
[
2
]
res
[
3
]
"
forcedUpdate1
=
=
forcedUpdate2
"
)
;
ExtensionBlocklistMLBF
.
_client
.
get
=
originalClientGet
;
ExtensionBlocklistMLBF
.
_fetchMLBF
=
originalFetchMLBF
;
}
)
;
