var
PLUGINS
=
[
{
name
:
"
test_bug514327_1
"
version
:
"
5
"
disabled
:
false
blocklisted
:
false
}
{
name
:
"
test_bug514327_2
"
version
:
"
5
"
disabled
:
false
blocklisted
:
false
}
{
name
:
"
test_bug514327_3
"
version
:
"
5
"
disabled
:
false
blocklisted
:
false
}
{
name
:
"
test_bug514327_4
"
version
:
"
5
"
disabled
:
false
blocklisted
:
false
outdated
:
false
}
]
;
let
BLOCKLIST_DATA
=
{
plugins
:
[
{
matchName
:
"
^
test_bug514327_1
"
versionRange
:
[
]
}
{
matchName
:
"
^
test_bug514327_2
"
versionRange
:
[
{
severity
:
"
0
"
}
]
}
{
matchName
:
"
^
test_bug514327_3
"
versionRange
:
[
{
severity
:
"
0
"
}
]
}
]
}
;
add_task
(
async
function
checkBlocklistSeverities
(
)
{
createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
"
)
;
await
AddonTestUtils
.
loadBlocklistRawData
(
BLOCKLIST_DATA
)
;
var
{
blocklist
}
=
Services
;
executeSoon
(
(
)
=
>
{
void
Blocklist
;
}
)
;
Assert
.
equal
(
await
blocklist
.
getPluginBlocklistState
(
PLUGINS
[
0
]
"
1
"
"
1
.
9
"
)
blocklist
.
STATE_BLOCKED
)
;
Assert
.
equal
(
await
blocklist
.
getPluginBlocklistState
(
PLUGINS
[
1
]
"
1
"
"
1
.
9
"
)
blocklist
.
STATE_OUTDATED
)
;
Assert
.
equal
(
await
blocklist
.
getPluginBlocklistState
(
PLUGINS
[
2
]
"
1
"
"
1
.
9
"
)
blocklist
.
STATE_OUTDATED
)
;
Assert
.
equal
(
await
blocklist
.
getPluginBlocklistState
(
PLUGINS
[
3
]
"
1
"
"
1
.
9
"
)
blocklist
.
STATE_NOT_BLOCKED
)
;
}
)
;
