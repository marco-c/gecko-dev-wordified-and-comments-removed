const
profileDir
=
gProfD
.
clone
(
)
;
profileDir
.
append
(
"
extensions
"
)
;
function
run_test
(
)
{
createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
"
)
;
startupManager
(
)
;
if
(
TEST_UNPACKED
)
run_test_unpacked
(
)
;
else
run_test_packed
(
)
;
}
async
function
run_test_packed
(
)
{
do_test_pending
(
)
;
prepare_test
(
{
"
corrupt
tests
.
mozilla
.
org
"
:
[
[
"
onInstalling
"
false
]
[
"
onInstalled
"
false
]
]
}
[
"
onNewInstall
"
"
onInstallStarted
"
"
onInstallEnded
"
]
)
;
await
promiseInstallAllFiles
(
[
do_get_file
(
"
data
/
corruptfile
.
xpi
"
)
]
)
;
ensure_test_completed
(
)
;
let
addon
=
await
AddonManager
.
getAddonByID
(
"
corrupt
tests
.
mozilla
.
org
"
)
;
Assert
.
notEqual
(
addon
null
)
;
do_test_finished
(
)
;
}
async
function
run_test_unpacked
(
)
{
do_test_pending
(
)
;
prepare_test
(
{
"
corrupt
tests
.
mozilla
.
org
"
:
[
[
"
onInstalling
"
false
]
"
onOperationCancelled
"
]
}
[
"
onNewInstall
"
"
onInstallStarted
"
"
onInstallFailed
"
]
)
;
await
promiseInstallAllFiles
(
[
do_get_file
(
"
data
/
corruptfile
.
xpi
"
)
]
)
;
ensure_test_completed
(
)
;
var
addonDir
=
profileDir
.
clone
(
)
;
addonDir
.
append
(
"
corrupt
tests
.
mozilla
.
org
"
)
;
pathShouldntExist
(
addonDir
)
;
var
stageDir
=
profileDir
.
clone
(
)
;
stageDir
.
append
(
"
staged
"
)
;
pathShouldntExist
(
stageDir
)
;
let
addon
=
await
AddonManager
.
getAddonByID
(
"
corrupt
tests
.
mozilla
.
org
"
)
;
Assert
.
equal
(
addon
null
)
;
do_test_finished
(
)
;
}
