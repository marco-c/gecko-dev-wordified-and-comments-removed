const
{
XPIExports
:
{
XPIInternal
:
{
DB_SCHEMA
}
}
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
addons
/
XPIExports
.
sys
.
mjs
"
)
;
createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
.
2
"
)
;
function
checkPending
(
)
{
try
{
Assert
.
ok
(
!
Services
.
prefs
.
getBoolPref
(
"
extensions
.
pendingOperations
"
)
)
;
}
catch
(
e
)
{
}
}
function
check_empty_state
(
)
{
Assert
.
equal
(
Services
.
prefs
.
getIntPref
(
"
extensions
.
databaseSchema
"
)
DB_SCHEMA
)
;
checkPending
(
)
;
}
add_task
(
async
function
first_run
(
)
{
await
promiseStartupManager
(
)
;
check_empty_state
(
)
;
await
true
;
}
)
;
async
function
trigger_db_load
(
)
{
let
addonList
=
await
AddonManager
.
getAddonsByTypes
(
[
"
extension
"
]
)
;
Assert
.
equal
(
addonList
.
length
0
)
;
check_empty_state
(
)
;
await
true
;
}
add_task
(
trigger_db_load
)
;
add_task
(
async
function
restart_and_recheck
(
)
{
await
promiseRestartManager
(
)
;
check_empty_state
(
)
;
await
true
;
}
)
;
add_task
(
trigger_db_load
)
;
add_task
(
async
function
upgrade_schema_version
(
)
{
await
promiseShutdownManager
(
)
;
Services
.
prefs
.
setIntPref
(
"
extensions
.
databaseSchema
"
1
)
;
await
promiseStartupManager
(
)
;
Assert
.
equal
(
Services
.
prefs
.
getIntPref
(
"
extensions
.
databaseSchema
"
)
DB_SCHEMA
)
;
check_empty_state
(
)
;
}
)
;
