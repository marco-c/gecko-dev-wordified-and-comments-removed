var
addon1
=
{
id
:
"
addon1
tests
.
mozilla
.
org
"
version
:
"
2
.
0
"
name
:
"
Test
1
"
bootstrap
:
true
targetApplications
:
[
{
id
:
"
xpcshell
tests
.
mozilla
.
org
"
minVersion
:
"
1
"
maxVersion
:
"
1
"
}
]
}
;
const
profileDir
=
gProfD
.
clone
(
)
;
profileDir
.
append
(
"
extensions
"
)
;
add_task
(
async
function
(
)
{
createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
.
2
"
)
;
await
promiseWriteInstallRDFForExtension
(
addon1
profileDir
)
;
await
promiseStartupManager
(
)
;
await
promiseShutdownManager
(
)
;
await
saveJSON
(
{
not
:
"
what
we
expect
to
find
"
}
gExtensionsJSON
.
path
)
;
await
promiseStartupManager
(
)
;
let
a1
=
await
AddonManager
.
getAddonByID
(
addon1
.
id
)
;
Assert
.
equal
(
a1
.
id
addon1
.
id
)
;
await
promiseShutdownManager
(
)
;
let
data
=
await
loadJSON
(
gExtensionsJSON
.
path
)
;
Assert
.
ok
(
"
schemaVersion
"
in
data
)
;
Assert
.
equal
(
data
.
addons
[
0
]
.
id
addon1
.
id
)
;
}
)
;
