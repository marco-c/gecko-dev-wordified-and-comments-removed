const
{
XPIInstall
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
addons
/
XPIInstall
.
jsm
"
)
;
function
run_test
(
)
{
XPIInstall
.
cancelAll
(
)
;
let
getsCancelled
=
{
isCancelled
:
false
cancel
(
)
{
if
(
this
.
isCancelled
)
{
do_throw
(
"
Already
cancelled
"
)
;
}
this
.
isCancelled
=
true
;
}
}
;
XPIInstall
.
doing
(
getsCancelled
)
;
XPIInstall
.
cancelAll
(
)
;
Assert
.
ok
(
getsCancelled
.
isCancelled
)
;
let
doesntGetCancelled
=
{
cancel
:
(
)
=
>
do_throw
(
"
This
should
not
have
been
cancelled
"
)
}
;
XPIInstall
.
doing
(
doesntGetCancelled
)
;
Assert
.
ok
(
XPIInstall
.
done
(
doesntGetCancelled
)
)
;
XPIInstall
.
cancelAll
(
)
;
getsCancelled
.
isCancelled
=
false
;
let
addsAnother
=
{
isCancelled
:
false
cancel
(
)
{
if
(
this
.
isCancelled
)
{
do_throw
(
"
Already
cancelled
"
)
;
}
this
.
isCancelled
=
true
;
XPIInstall
.
doing
(
getsCancelled
)
;
}
}
;
XPIInstall
.
doing
(
addsAnother
)
;
XPIInstall
.
cancelAll
(
)
;
Assert
.
ok
(
addsAnother
.
isCancelled
)
;
Assert
.
ok
(
getsCancelled
.
isCancelled
)
;
let
removesAnother
=
{
isCancelled
:
false
cancel
(
)
{
if
(
this
.
isCancelled
)
{
do_throw
(
"
Already
cancelled
"
)
;
}
this
.
isCancelled
=
true
;
XPIInstall
.
done
(
doesntGetCancelled
)
;
}
}
;
XPIInstall
.
doing
(
removesAnother
)
;
XPIInstall
.
doing
(
doesntGetCancelled
)
;
XPIInstall
.
cancelAll
(
)
;
Assert
.
ok
(
removesAnother
.
isCancelled
)
;
}
