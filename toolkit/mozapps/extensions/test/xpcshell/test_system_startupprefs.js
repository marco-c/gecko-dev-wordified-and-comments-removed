let
scopes
=
AddonManager
.
SCOPE_PROFILE
|
AddonManager
.
SCOPE_APPLICATION
;
Services
.
prefs
.
setIntPref
(
"
extensions
.
enabledScopes
"
scopes
)
;
createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
2
"
)
;
let
distroDir
=
FileUtils
.
getDir
(
"
ProfD
"
[
"
sysfeatures
"
"
empty
"
]
)
;
distroDir
.
create
(
Ci
.
nsIFile
.
DIRECTORY_TYPE
FileUtils
.
PERMS_DIRECTORY
)
;
registerDirectory
(
"
XREAppFeat
"
distroDir
)
;
AddonTestUtils
.
usePrivilegedSignatures
=
"
system
"
;
BootstrapMonitor
.
init
(
)
;
add_setup
(
async
function
setup
(
)
{
await
initSystemAddonDirs
(
)
;
let
xpi
=
await
getSystemAddonXPI
(
1
"
1
.
0
"
)
;
await
AddonTestUtils
.
manuallyInstall
(
xpi
distroDir
)
;
}
)
;
async
function
systemAddonPreffedOff
(
{
asBuiltIn
=
true
}
=
{
}
)
{
const
id
=
"
system1
tests
.
mozilla
.
org
"
;
Services
.
prefs
.
setBoolPref
(
"
extensions
.
system1
.
enabled
"
false
)
;
await
overrideBuiltIns
(
{
builtins
:
asBuiltIn
?
[
await
getSystemBuiltin
(
1
"
1
.
0
"
)
]
:
[
]
system
:
!
asBuiltIn
?
[
id
]
:
[
]
}
)
;
await
promiseStartupManager
(
"
1
.
0
"
)
;
BootstrapMonitor
.
checkInstalled
(
id
)
;
BootstrapMonitor
.
checkNotStarted
(
id
)
;
await
promiseRestartManager
(
)
;
BootstrapMonitor
.
checkNotStarted
(
id
)
;
await
promiseShutdownManager
(
{
clearOverrides
:
false
}
)
;
}
async
function
systemAddonPreffedOn
(
{
asBuiltIn
=
true
}
=
{
}
)
{
const
id
=
"
system1
tests
.
mozilla
.
org
"
;
Services
.
prefs
.
setBoolPref
(
"
extensions
.
system1
.
enabled
"
true
)
;
await
overrideBuiltIns
(
{
builtins
:
asBuiltIn
?
[
await
getSystemBuiltin
(
1
"
1
.
0
"
)
]
:
[
]
system
:
!
asBuiltIn
?
[
id
]
:
[
]
}
)
;
await
promiseStartupManager
(
"
2
.
0
"
)
;
BootstrapMonitor
.
checkInstalled
(
id
)
;
BootstrapMonitor
.
checkStarted
(
id
)
;
await
promiseRestartManager
(
)
;
BootstrapMonitor
.
checkStarted
(
id
)
;
await
promiseShutdownManager
(
{
clearOverrides
:
false
}
)
;
}
add_task
(
async
function
systemPref_xpi
(
)
{
await
systemAddonPreffedOff
(
{
asBuiltIn
:
false
}
)
;
await
systemAddonPreffedOn
(
{
asBuiltIn
:
false
}
)
;
}
)
;
add_task
(
async
function
systemPref_builtin
(
)
{
await
systemAddonPreffedOff
(
)
;
await
systemAddonPreffedOn
(
)
;
}
)
;
