createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
.
2
"
)
;
const
profileDir
=
gProfD
.
clone
(
)
;
profileDir
.
append
(
"
extensions
"
)
;
const
ADDONS
=
{
test_bootstrap1_1
:
{
"
install
.
rdf
"
:
{
"
id
"
:
"
bootstrap1
tests
.
mozilla
.
org
"
"
name
"
:
"
Test
Bootstrap
1
"
}
"
bootstrap
.
js
"
:
BOOTSTRAP_MONITOR_BOOTSTRAP_JS
}
}
;
function
run_test
(
)
{
registerCleanupFunction
(
promiseShutdownManager
)
;
run_next_test
(
)
;
}
add_task
(
async
function
setup
(
)
{
await
promiseWriteInstallRDFToXPI
(
{
id
:
"
packed
-
enabled
tests
.
mozilla
.
org
"
name
:
"
Packed
Enabled
"
}
profileDir
)
;
await
promiseWriteInstallRDFToXPI
(
{
id
:
"
packed
-
disabled
tests
.
mozilla
.
org
"
name
:
"
Packed
Disabled
"
}
profileDir
)
;
}
)
;
var
lastTimestamp
=
Date
.
now
(
)
;
function
checkChange
(
XS
aPath
aChange
)
{
Assert
.
ok
(
aPath
.
exists
(
)
)
;
lastTimestamp
+
=
10000
;
info
(
"
Touching
file
"
+
aPath
.
path
+
"
with
"
+
lastTimestamp
)
;
aPath
.
lastModifiedTime
=
lastTimestamp
;
Assert
.
equal
(
XS
.
scanForChanges
(
)
aChange
)
;
XS
.
save
(
)
;
}
function
getXS
(
)
{
let
XPI
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
addons
/
XPIProvider
.
jsm
"
{
}
)
;
return
XPI
.
XPIStates
;
}
async
function
getXSJSON
(
)
{
await
AddonTestUtils
.
loadAddonsList
(
true
)
;
return
aomStartup
.
readStartupData
(
)
;
}
add_task
(
async
function
detect_touches
(
)
{
await
promiseStartupManager
(
)
;
let
[
pd
]
=
await
promiseAddonsByIDs
(
[
"
packed
-
enabled
tests
.
mozilla
.
org
"
"
packed
-
disabled
tests
.
mozilla
.
org
"
]
)
;
info
(
"
Disable
test
add
-
ons
"
)
;
await
pd
.
disable
(
)
;
let
XS
=
getXS
(
)
;
Assert
.
ok
(
!
XS
.
scanForChanges
(
)
)
;
let
states
=
XS
.
getLocation
(
"
app
-
profile
"
)
;
Assert
.
ok
(
states
.
get
(
"
packed
-
enabled
tests
.
mozilla
.
org
"
)
.
enabled
)
;
Assert
.
ok
(
!
states
.
get
(
"
packed
-
disabled
tests
.
mozilla
.
org
"
)
.
enabled
)
;
let
peFile
=
profileDir
.
clone
(
)
;
peFile
.
append
(
"
packed
-
enabled
tests
.
mozilla
.
org
.
xpi
"
)
;
checkChange
(
XS
peFile
true
)
;
let
pdFile
=
profileDir
.
clone
(
)
;
pdFile
.
append
(
"
packed
-
disabled
tests
.
mozilla
.
org
.
xpi
"
)
;
checkChange
(
XS
pdFile
true
)
;
}
)
;
add_task
(
async
function
uninstall_bootstrap
(
)
{
let
[
pe
]
=
await
promiseAddonsByIDs
(
[
"
packed
-
enabled
tests
.
mozilla
.
org
"
"
packed
-
disabled
tests
.
mozilla
.
org
"
]
)
;
await
pe
.
uninstall
(
)
;
let
xpiState
=
await
getXSJSON
(
)
;
Assert
.
equal
(
false
"
packed
-
enabled
tests
.
mozilla
.
org
"
in
xpiState
[
"
app
-
profile
"
]
.
addons
)
;
}
)
;
add_task
(
async
function
install_bootstrap
(
)
{
let
XS
=
getXS
(
)
;
let
{
addon
}
=
await
AddonTestUtils
.
promiseInstallXPI
(
ADDONS
.
test_bootstrap1_1
)
;
let
xState
=
XS
.
getAddon
(
"
app
-
profile
"
addon
.
id
)
;
Assert
.
ok
(
!
!
xState
)
;
Assert
.
ok
(
xState
.
enabled
)
;
Assert
.
equal
(
xState
.
mtime
addon
.
updateDate
.
getTime
(
)
)
;
await
addon
.
uninstall
(
)
;
}
)
;
