function
run_test
(
)
{
do_test_pending
(
)
;
createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
.
2
"
)
;
Services
.
locale
.
setRequestedLocales
(
[
"
fr
-
FR
"
]
)
;
startupManager
(
)
;
run_test_1
(
)
;
}
function
run_test_1
(
)
{
AddonManager
.
getInstallForFile
(
do_get_addon
(
"
test_locale
"
)
function
(
install
)
{
Assert
.
equal
(
install
.
addon
.
name
"
fr
-
FR
Name
"
)
;
Assert
.
equal
(
install
.
addon
.
description
"
fr
-
FR
Description
"
)
;
prepare_test
(
{
"
addon1
tests
.
mozilla
.
org
"
:
[
"
onInstalling
"
]
}
[
"
onInstallStarted
"
"
onInstallEnded
"
]
callback_soon
(
run_test_2
)
)
;
install
.
install
(
)
;
}
)
;
}
function
run_test_2
(
)
{
restartManager
(
)
;
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
function
(
addon
)
{
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
fr
-
FR
Name
"
)
;
Assert
.
equal
(
addon
.
description
"
fr
-
FR
Description
"
)
;
addon
.
userDisabled
=
true
;
do_execute_soon
(
run_test_3
)
;
}
)
;
}
function
run_test_3
(
)
{
restartManager
(
)
;
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
function
(
addon
)
{
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
fr
-
FR
Name
"
)
;
do_execute_soon
(
run_test_4
)
;
}
)
;
}
function
run_test_4
(
)
{
Services
.
prefs
.
setCharPref
(
"
extensions
.
addon1
tests
.
mozilla
.
org
.
name
"
"
Name
from
prefs
"
)
;
Services
.
prefs
.
setCharPref
(
"
extensions
.
addon1
tests
.
mozilla
.
org
.
contributor
.
1
"
"
Contributor
1
"
)
;
Services
.
prefs
.
setCharPref
(
"
extensions
.
addon1
tests
.
mozilla
.
org
.
contributor
.
2
"
"
Contributor
2
"
)
;
restartManager
(
)
;
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
function
(
addon
)
{
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
fr
-
FR
Name
"
)
;
let
contributors
=
addon
.
contributors
;
Assert
.
equal
(
contributors
.
length
3
)
;
Assert
.
equal
(
contributors
[
0
]
"
Fr
Contributor
1
"
)
;
Assert
.
equal
(
contributors
[
1
]
"
Fr
Contributor
2
"
)
;
Assert
.
equal
(
contributors
[
2
]
"
Fr
Contributor
3
"
)
;
do_execute_soon
(
run_test_5
)
;
}
)
;
}
function
run_test_5
(
)
{
Services
.
locale
.
setRequestedLocales
(
[
"
de
-
DE
"
]
)
;
restartManager
(
)
;
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
function
(
addon
)
{
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
de
-
DE
Name
"
)
;
Assert
.
equal
(
addon
.
description
null
)
;
do_execute_soon
(
run_test_6
)
;
}
)
;
}
function
run_test_6
(
)
{
Services
.
locale
.
setRequestedLocales
(
[
"
nl
-
NL
"
]
)
;
restartManager
(
)
;
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
callback_soon
(
function
(
addon
)
{
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
Fallback
Name
"
)
;
Assert
.
equal
(
addon
.
description
"
Fallback
Description
"
)
;
addon
.
userDisabled
=
false
;
do_execute_soon
(
run_test_7
)
;
}
)
)
;
}
function
run_test_7
(
)
{
restartManager
(
)
;
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
function
(
addon
)
{
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
Name
from
prefs
"
)
;
do_execute_soon
(
run_test_8
)
;
}
)
;
}
function
run_test_8
(
)
{
Services
.
locale
.
setRequestedLocales
(
[
"
fr
-
FR
"
]
)
;
restartManager
(
)
;
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
function
(
addon
)
{
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
Name
from
prefs
"
)
;
let
contributors
=
addon
.
contributors
;
Assert
.
equal
(
contributors
.
length
2
)
;
Assert
.
equal
(
contributors
[
0
]
"
Contributor
1
"
)
;
Assert
.
equal
(
contributors
[
1
]
"
Contributor
2
"
)
;
do_execute_soon
(
do_test_finished
)
;
}
)
;
}
