add_task
(
async
function
setup
(
)
{
createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
.
2
"
)
;
Services
.
locale
.
setRequestedLocales
(
[
"
fr
-
FR
"
]
)
;
await
promiseStartupManager
(
)
;
}
)
;
add_task
(
async
function
test_1
(
)
{
let
install
=
await
AddonManager
.
getInstallForFile
(
do_get_addon
(
"
test_locale
"
)
)
;
Assert
.
equal
(
install
.
addon
.
name
"
fr
-
FR
Name
"
)
;
Assert
.
equal
(
install
.
addon
.
description
"
fr
-
FR
Description
"
)
;
await
new
Promise
(
resolve
=
>
{
prepare_test
(
{
"
addon1
tests
.
mozilla
.
org
"
:
[
[
"
onInstalling
"
false
]
[
"
onInstalled
"
false
]
]
}
[
"
onInstallStarted
"
"
onInstallEnded
"
]
resolve
)
;
install
.
install
(
)
;
}
)
;
}
)
;
add_task
(
async
function
test_2
(
)
{
await
promiseRestartManager
(
)
;
let
addon
=
await
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
)
;
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
fr
-
FR
Name
"
)
;
Assert
.
equal
(
addon
.
description
"
fr
-
FR
Description
"
)
;
await
addon
.
disable
(
)
;
}
)
;
add_task
(
async
function
test_3
(
)
{
await
promiseRestartManager
(
)
;
let
addon
=
await
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
)
;
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
fr
-
FR
Name
"
)
;
}
)
;
add_task
(
async
function
test_4
(
)
{
await
promiseRestartManager
(
)
;
let
addon
=
await
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
)
;
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
fr
-
FR
Name
"
)
;
let
contributors
=
addon
.
contributors
;
Assert
.
equal
(
contributors
.
length
3
)
;
Assert
.
equal
(
contributors
[
0
]
"
Fr
Contributor
1
"
)
;
Assert
.
equal
(
contributors
[
1
]
"
Fr
Contributor
2
"
)
;
Assert
.
equal
(
contributors
[
2
]
"
Fr
Contributor
3
"
)
;
}
)
;
add_task
(
async
function
test_5
(
)
{
Services
.
locale
.
setRequestedLocales
(
[
"
de
-
DE
"
]
)
;
await
promiseRestartManager
(
)
;
let
addon
=
await
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
)
;
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
de
-
DE
Name
"
)
;
Assert
.
equal
(
addon
.
description
null
)
;
}
)
;
add_task
(
async
function
test_6
(
)
{
Services
.
locale
.
setRequestedLocales
(
[
"
nl
-
NL
"
]
)
;
await
promiseRestartManager
(
)
;
let
addon
=
await
AddonManager
.
getAddonByID
(
"
addon1
tests
.
mozilla
.
org
"
)
;
Assert
.
notEqual
(
addon
null
)
;
Assert
.
equal
(
addon
.
name
"
Fallback
Name
"
)
;
Assert
.
equal
(
addon
.
description
"
Fallback
Description
"
)
;
await
addon
.
enable
(
)
;
}
)
;
