add_task
(
async
function
(
)
{
let
blocklist
=
AM_Cc
[
"
mozilla
.
org
/
extensions
/
blocklist
;
1
"
]
.
getService
(
)
.
wrappedJSObject
;
let
scope
=
Components
.
utils
.
import
(
"
resource
:
/
/
gre
/
modules
/
osfile
.
jsm
"
{
}
)
;
blocklist
.
_loadBlocklist
(
)
;
Assert
.
ok
(
blocklist
.
_isBlocklistLoaded
(
)
)
;
await
blocklist
.
_preloadBlocklist
(
)
;
Assert
.
ok
(
!
blocklist
.
_isBlocklistPreloaded
(
)
)
;
blocklist
.
_clear
(
)
;
await
blocklist
.
_preloadBlocklist
(
)
;
Assert
.
ok
(
!
blocklist
.
_isBlocklistLoaded
(
)
)
;
Assert
.
ok
(
blocklist
.
_isBlocklistPreloaded
(
)
)
;
blocklist
.
_loadBlocklist
(
)
;
Assert
.
ok
(
blocklist
.
_isBlocklistLoaded
(
)
)
;
Assert
.
ok
(
!
blocklist
.
_isBlocklistPreloaded
(
)
)
;
blocklist
.
_clear
(
)
;
let
read
=
scope
.
OS
.
File
.
read
;
scope
.
OS
.
File
.
read
=
function
(
.
.
.
args
)
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
do_execute_soon
(
(
)
=
>
{
blocklist
.
_loadBlocklist
(
)
;
resolve
(
read
(
.
.
.
args
)
)
;
}
)
;
}
)
;
}
;
await
blocklist
.
_preloadBlocklist
(
)
;
Assert
.
ok
(
blocklist
.
_isBlocklistLoaded
(
)
)
;
Assert
.
ok
(
!
blocklist
.
_isBlocklistPreloaded
(
)
)
;
}
)
;
