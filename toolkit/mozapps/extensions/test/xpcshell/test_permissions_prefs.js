const
PREF_XPI_WHITELIST_PERMISSIONS
=
"
xpinstall
.
whitelist
.
add
"
;
const
PREF_XPI_BLACKLIST_PERMISSIONS
=
"
xpinstall
.
blacklist
.
add
"
;
const
{
PermissionsTestUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
PermissionsUtils
.
sys
.
mjs
"
)
;
function
newPrincipal
(
uri
)
{
return
Services
.
scriptSecurityManager
.
createContentPrincipal
(
NetUtil
.
newURI
(
uri
)
{
}
)
;
}
function
do_check_permission_prefs
(
preferences
)
{
for
(
let
pref
of
preferences
)
{
try
{
Assert
.
equal
(
Services
.
prefs
.
getCharPref
(
pref
)
"
"
)
;
}
catch
(
e
)
{
}
}
}
add_task
(
async
function
setup
(
)
{
createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
"
)
;
Services
.
prefs
.
setCharPref
(
"
xpinstall
.
whitelist
.
add
.
EMPTY
"
"
"
)
;
Services
.
prefs
.
setCharPref
(
"
xpinstall
.
whitelist
.
add
.
TEST
"
"
http
:
/
/
whitelist
.
example
.
com
"
)
;
Services
.
prefs
.
setCharPref
(
"
xpinstall
.
blacklist
.
add
.
EMPTY
"
"
"
)
;
Services
.
prefs
.
setCharPref
(
"
xpinstall
.
blacklist
.
add
.
TEST
"
"
http
:
/
/
blacklist
.
example
.
com
"
)
;
var
whitelistPreferences
=
Services
.
prefs
.
getChildList
(
PREF_XPI_WHITELIST_PERMISSIONS
)
;
var
blacklistPreferences
=
Services
.
prefs
.
getChildList
(
PREF_XPI_BLACKLIST_PERMISSIONS
)
;
var
preferences
=
whitelistPreferences
.
concat
(
blacklistPreferences
)
;
await
promiseStartupManager
(
)
;
AddonManager
.
isInstallAllowed
(
"
application
/
x
-
xpinstall
"
newPrincipal
(
"
http
:
/
/
example
.
com
/
file
.
xpi
"
)
)
;
do_check_permission_prefs
(
preferences
)
;
PermissionsTestUtils
.
clearImportedPrefBranches
(
)
;
Services
.
prefs
.
setCharPref
(
"
xpinstall
.
whitelist
.
add
.
TEST2
"
"
https
:
/
/
whitelist2
.
example
.
com
"
)
;
Services
.
obs
.
notifyObservers
(
null
"
flush
-
pending
-
permissions
"
"
install
"
)
;
do_check_permission_prefs
(
preferences
)
;
PermissionsTestUtils
.
clearImportedPrefBranches
(
)
;
Services
.
prefs
.
setCharPref
(
"
xpinstall
.
whitelist
.
add
.
TEST3
"
"
https
:
/
/
whitelist3
.
example
.
com
"
)
;
Services
.
obs
.
notifyObservers
(
null
"
flush
-
pending
-
permissions
"
)
;
do_check_permission_prefs
(
preferences
)
;
PermissionsTestUtils
.
clearImportedPrefBranches
(
)
;
Services
.
prefs
.
setCharPref
(
"
xpinstall
.
whitelist
.
add
.
TEST4
"
"
https
:
/
/
whitelist4
.
example
.
com
"
)
;
Services
.
obs
.
notifyObservers
(
null
"
flush
-
pending
-
permissions
"
"
lolcats
"
)
;
Assert
.
equal
(
Services
.
prefs
.
getCharPref
(
"
xpinstall
.
whitelist
.
add
.
TEST4
"
)
"
https
:
/
/
whitelist4
.
example
.
com
"
)
;
}
)
;
