const
{
BasePromiseWorker
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
PromiseWorker
.
sys
.
mjs
"
)
;
add_task
(
async
function
test
(
)
{
createAppInfo
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
.
2
"
)
;
await
promiseStartupManager
(
)
;
let
profileDir
=
PathUtils
.
profileDir
;
let
trashDir
=
PathUtils
.
join
(
profileDir
"
extensions
"
"
trash
"
)
;
let
testFile
=
PathUtils
.
join
(
trashDir
"
test
.
txt
"
)
;
await
IOUtils
.
makeDirectory
(
trashDir
)
;
let
trashDirExists
=
await
IOUtils
.
exists
(
trashDir
)
;
ok
(
trashDirExists
"
trash
directory
should
have
been
created
"
)
;
await
IOUtils
.
writeUTF8
(
testFile
"
"
)
;
const
worker
=
new
BasePromiseWorker
(
"
resource
:
/
/
test
/
data
/
test_trash_directory
.
worker
.
js
"
)
;
await
worker
.
post
(
"
open
"
[
testFile
]
)
;
let
fileExists
=
await
IOUtils
.
exists
(
testFile
)
;
ok
(
fileExists
"
test
.
txt
should
have
been
created
in
"
+
trashDir
)
;
await
promiseInstallWebExtension
(
{
}
)
;
fileExists
=
await
IOUtils
.
exists
(
testFile
)
;
ok
(
fileExists
"
test
.
txt
should
still
exist
"
)
;
await
promiseShutdownManager
(
)
;
await
worker
.
post
(
"
close
"
[
]
)
;
await
IOUtils
.
remove
(
testFile
)
;
await
IOUtils
.
remove
(
trashDir
{
recursive
:
true
}
)
;
}
)
;
