registerCleanupFunction
(
(
)
=
>
{
Services
.
prefs
.
clearUserPref
(
"
extensions
.
webapi
.
testing
"
)
;
}
)
;
function
check_frame_availability
(
browser
)
{
return
ContentTask
.
spawn
(
browser
null
function
*
(
)
{
let
frame
=
content
.
document
.
getElementById
(
"
frame
"
)
;
return
frame
.
contentWindow
.
document
.
getElementById
(
"
result
"
)
.
textContent
=
=
"
true
"
;
}
)
;
}
function
check_availability
(
browser
)
{
return
ContentTask
.
spawn
(
browser
null
function
*
(
)
{
return
content
.
document
.
getElementById
(
"
result
"
)
.
textContent
=
=
"
true
"
;
}
)
;
}
add_task
(
function
*
test_not_available
(
)
{
yield
BrowserTestUtils
.
withNewTab
(
{
SECURE_TESTROOT
}
webapi_checkavailable
.
html
function
*
test_not_available
(
browser
)
{
let
available
=
yield
check_availability
(
browser
)
;
ok
(
!
available
"
API
should
not
be
available
.
"
)
;
}
)
}
)
;
add_task
(
function
*
test_available
(
)
{
Services
.
prefs
.
setBoolPref
(
"
extensions
.
webapi
.
testing
"
true
)
;
yield
BrowserTestUtils
.
withNewTab
(
{
SECURE_TESTROOT
}
webapi_checkavailable
.
html
function
*
test_not_available
(
browser
)
{
let
available
=
yield
check_availability
(
browser
)
;
ok
(
available
"
API
should
be
available
.
"
)
;
}
)
}
)
;
add_task
(
function
*
test_bad_domain
(
)
{
yield
BrowserTestUtils
.
withNewTab
(
{
SECURE_TESTROOT2
}
webapi_checkavailable
.
html
function
*
test_not_available
(
browser
)
{
let
available
=
yield
check_availability
(
browser
)
;
ok
(
!
available
"
API
should
not
be
available
.
"
)
;
}
)
}
)
;
add_task
(
function
*
test_not_available_http
(
)
{
yield
BrowserTestUtils
.
withNewTab
(
{
TESTROOT
}
webapi_checkavailable
.
html
function
*
test_not_available
(
browser
)
{
let
available
=
yield
check_availability
(
browser
)
;
ok
(
!
available
"
API
should
not
be
available
.
"
)
;
}
)
}
)
;
add_task
(
function
*
test_available_framed
(
)
{
yield
BrowserTestUtils
.
withNewTab
(
{
SECURE_TESTROOT
}
webapi_checkframed
.
html
function
*
test_available
(
browser
)
{
let
available
=
yield
check_frame_availability
(
browser
)
;
ok
(
available
"
API
should
be
available
.
"
)
;
}
)
}
)
;
add_task
(
function
*
test_not_available_http_framed
(
)
{
yield
BrowserTestUtils
.
withNewTab
(
{
TESTROOT
}
webapi_checkframed
.
html
function
*
test_not_available
(
browser
)
{
let
available
=
yield
check_frame_availability
(
browser
)
;
ok
(
!
available
"
API
should
not
be
available
.
"
)
;
}
)
}
)
;
add_task
(
function
*
test_not_available_framed
(
)
{
yield
BrowserTestUtils
.
withNewTab
(
{
SECURE_TESTROOT2
}
webapi_checkframed
.
html
function
*
test_not_available
(
browser
)
{
let
available
=
yield
check_frame_availability
(
browser
)
;
ok
(
!
available
"
API
should
not
be
available
.
"
)
;
}
)
}
)
;
add_task
(
function
*
test_navigated_window
(
)
{
yield
BrowserTestUtils
.
withNewTab
(
{
SECURE_TESTROOT2
}
webapi_checknavigatedwindow
.
html
function
*
test_available
(
browser
)
{
let
tabPromise
=
BrowserTestUtils
.
waitForNewTab
(
gBrowser
)
;
yield
ContentTask
.
spawn
(
browser
null
function
*
(
)
{
yield
content
.
wrappedJSObject
.
openWindow
(
)
;
}
)
;
let
tab
=
yield
tabPromise
;
let
loadPromise
=
BrowserTestUtils
.
browserLoaded
(
gBrowser
.
getBrowserForTab
(
tab
)
)
;
ContentTask
.
spawn
(
browser
null
function
*
(
)
{
content
.
wrappedJSObject
.
navigate
(
)
;
}
)
;
yield
loadPromise
;
let
available
=
yield
ContentTask
.
spawn
(
browser
null
function
*
(
)
{
return
content
.
wrappedJSObject
.
check
(
)
;
}
)
;
ok
(
!
available
"
API
should
not
be
available
.
"
)
;
gBrowser
.
removeTab
(
tab
)
;
}
)
}
)
;
add_task
(
function
*
test_chrome_frame
(
)
{
yield
BrowserTestUtils
.
withNewTab
(
{
CHROMEROOT
}
webapi_checkchromeframe
.
xul
function
*
test_available
(
browser
)
{
let
available
=
yield
check_frame_availability
(
browser
)
;
ok
(
available
"
API
should
be
available
.
"
)
;
}
)
}
)
;
