use
winapi
:
:
shared
:
:
minwindef
:
:
DWORD
;
use
winapi
:
:
shared
:
:
ntdef
:
:
NULL
;
use
winapi
:
:
um
:
:
errhandlingapi
:
:
GetLastError
;
use
winapi
:
:
um
:
:
wininet
:
:
{
InternetCloseHandle
HINTERNET
}
;
#
[
repr
(
transparent
)
]
#
[
derive
(
Debug
)
]
pub
struct
InternetHandle
(
HINTERNET
)
;
impl
InternetHandle
{
pub
unsafe
fn
new
(
h
:
HINTERNET
)
-
>
Result
<
InternetHandle
DWORD
>
{
if
h
=
=
NULL
{
Err
(
GetLastError
(
)
)
}
else
{
Ok
(
InternetHandle
(
h
)
)
}
}
pub
fn
as_raw
(
&
self
)
-
>
HINTERNET
{
self
.
0
}
}
impl
Drop
for
InternetHandle
{
fn
drop
(
&
mut
self
)
{
unsafe
{
InternetCloseHandle
(
self
.
0
)
;
}
}
}
