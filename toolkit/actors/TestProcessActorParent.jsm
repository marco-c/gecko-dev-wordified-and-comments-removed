"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
TestProcessActorParent
"
]
;
class
TestProcessActorParent
extends
JSProcessActorParent
{
constructor
(
)
{
super
(
)
;
this
.
wrappedJSObject
=
this
;
}
receiveMessage
(
aMessage
)
{
switch
(
aMessage
.
name
)
{
case
"
init
"
:
aMessage
.
data
.
initial
=
true
;
this
.
sendAsyncMessage
(
"
toChild
"
aMessage
.
data
)
;
break
;
case
"
toParent
"
:
aMessage
.
data
.
toParent
=
true
;
this
.
sendAsyncMessage
(
"
done
"
aMessage
.
data
)
;
break
;
case
"
asyncMul
"
:
let
{
a
b
}
=
aMessage
.
data
;
return
{
result
:
a
*
b
}
;
}
return
undefined
;
}
show
(
)
{
return
"
TestProcessActorParent
"
;
}
}
