"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
AboutHttpsOnlyErrorParent
"
]
;
const
{
HomePage
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
/
modules
/
HomePage
.
jsm
"
)
;
const
{
PrivateBrowsingUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
PrivateBrowsingUtils
.
sys
.
mjs
"
)
;
class
AboutHttpsOnlyErrorParent
extends
JSWindowActorParent
{
get
browser
(
)
{
return
this
.
browsingContext
.
top
.
embedderElement
;
}
receiveMessage
(
aMessage
)
{
switch
(
aMessage
.
name
)
{
case
"
goBack
"
:
this
.
goBackFromErrorPage
(
this
.
browser
)
;
break
;
}
}
goBackFromErrorPage
(
aBrowser
)
{
if
(
!
aBrowser
.
canGoBack
)
{
aBrowser
.
loadURI
(
this
.
getDefaultHomePage
(
aBrowser
.
ownerGlobal
)
{
triggeringPrincipal
:
Services
.
scriptSecurityManager
.
getSystemPrincipal
(
)
}
)
;
}
else
{
aBrowser
.
goBack
(
)
;
}
}
getDefaultHomePage
(
win
)
{
if
(
PrivateBrowsingUtils
.
isWindowPrivate
(
win
)
)
{
return
win
.
BROWSER_NEW_TAB_URL
|
|
"
about
:
blank
"
;
}
let
url
=
HomePage
.
getDefault
(
)
;
if
(
url
.
includes
(
"
|
"
)
)
{
url
=
url
.
split
(
"
|
"
)
[
0
]
;
}
return
url
;
}
}
