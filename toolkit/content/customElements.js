"
use
strict
"
;
{
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
gXULDOMParser
=
new
DOMParser
(
)
;
gXULDOMParser
.
forceEnableXULXBL
(
)
;
class
MozXULElement
extends
XULElement
{
static
parseXULToFragment
(
str
entities
=
"
"
)
{
let
doc
=
gXULDOMParser
.
parseFromString
(
{
entities
}
<
box
xmlns
=
"
http
:
/
/
www
.
mozilla
.
org
/
keymaster
/
gatekeeper
/
there
.
is
.
only
.
xul
"
>
{
str
}
<
/
box
>
"
application
/
xml
"
)
;
let
nodeIterator
=
doc
.
createNodeIterator
(
doc
NodeFilter
.
SHOW_TEXT
)
;
let
currentNode
=
nodeIterator
.
nextNode
(
)
;
while
(
currentNode
)
{
currentNode
.
remove
(
)
;
currentNode
=
nodeIterator
.
nextNode
(
)
;
}
let
range
=
doc
.
createRange
(
)
;
range
.
selectNodeContents
(
doc
.
querySelector
(
"
box
"
)
)
;
return
range
.
extractContents
(
)
;
}
}
window
.
MozXULElement
=
MozXULElement
;
for
(
let
script
of
[
"
chrome
:
/
/
global
/
content
/
elements
/
stringbundle
.
js
"
"
chrome
:
/
/
global
/
content
/
elements
/
general
.
js
"
]
)
{
Services
.
scriptloader
.
loadSubScript
(
script
window
)
;
}
customElements
.
setElementCreationCallback
(
"
printpreview
-
toolbar
"
type
=
>
{
Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
global
/
content
/
printPreviewToolbar
.
js
"
window
)
;
}
)
;
}
