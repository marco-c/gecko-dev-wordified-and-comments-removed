import
url
(
"
chrome
:
/
/
global
/
skin
/
tooltip
.
css
"
)
;
namespace
url
(
"
http
:
/
/
www
.
mozilla
.
org
/
keymaster
/
gatekeeper
/
there
.
is
.
only
.
xul
"
)
;
namespace
html
url
(
"
http
:
/
/
www
.
w3
.
org
/
1999
/
xhtml
"
)
;
*
|
*
:
root
{
-
-
animation
-
easing
-
function
:
cubic
-
bezier
(
.
07
.
95
0
1
)
;
}
:
root
{
text
-
rendering
:
optimizeLegibility
;
-
moz
-
control
-
character
-
visibility
:
visible
;
}
:
root
:
-
moz
-
locale
-
dir
(
rtl
)
{
direction
:
rtl
;
}
popupgroup
:
-
moz
-
native
-
anonymous
:
-
moz
-
locale
-
dir
(
rtl
)
tooltip
:
-
moz
-
native
-
anonymous
:
-
moz
-
locale
-
dir
(
rtl
)
{
direction
:
rtl
;
}
*
|
*
:
root
[
chromehidden
~
=
"
menubar
"
]
.
chromeclass
-
menubar
*
|
*
:
root
[
chromehidden
~
=
"
directories
"
]
.
chromeclass
-
directories
*
|
*
:
root
[
chromehidden
~
=
"
status
"
]
.
chromeclass
-
status
*
|
*
:
root
[
chromehidden
~
=
"
extrachrome
"
]
.
chromeclass
-
extrachrome
*
|
*
:
root
[
chromehidden
~
=
"
location
"
]
.
chromeclass
-
location
*
|
*
:
root
[
chromehidden
~
=
"
location
"
]
[
chromehidden
~
=
"
toolbar
"
]
.
chromeclass
-
toolbar
*
|
*
:
root
[
chromehidden
~
=
"
toolbar
"
]
.
chromeclass
-
toolbar
-
additional
{
display
:
none
;
}
.
uri
-
element
{
direction
:
ltr
!
important
;
}
script
data
commandset
command
broadcasterset
broadcaster
observes
keyset
key
toolbarpalette
template
treeitem
treeseparator
treerow
treecell
{
display
:
none
;
}
button
checkbox
menulist
radiogroup
tree
browser
editor
iframe
{
-
moz
-
user
-
focus
:
normal
;
}
window
{
overflow
:
clip
;
-
moz
-
box
-
orient
:
vertical
;
}
vbox
{
-
moz
-
box
-
orient
:
vertical
;
}
label
.
text
-
link
label
[
onclick
]
{
-
moz
-
user
-
focus
:
normal
;
}
label
html
|
span
.
accesskey
{
text
-
decoration
:
underline
;
text
-
decoration
-
skip
-
ink
:
none
;
}
toolbar
[
mode
=
"
icons
"
]
.
toolbarbutton
-
text
toolbar
[
mode
=
"
text
"
]
.
toolbarbutton
-
icon
html
|
label
.
toolbarbutton
-
badge
:
empty
{
display
:
none
;
}
button
{
-
moz
-
default
-
appearance
:
button
;
appearance
:
auto
;
}
browser
editor
iframe
{
display
:
inline
;
}
supports
-
moz
-
bool
-
pref
(
"
layout
.
css
.
emulate
-
moz
-
box
-
with
-
flex
"
)
{
browser
editor
iframe
{
display
:
block
;
}
}
browser
{
align
-
self
:
stretch
;
justify
-
self
:
stretch
;
min
-
height
:
0
;
min
-
width
:
0
;
}
popupnotification
{
-
moz
-
box
-
orient
:
vertical
;
}
.
popup
-
notification
-
menubutton
:
not
(
[
label
]
)
{
display
:
none
;
}
radiogroup
{
-
moz
-
box
-
orient
:
vertical
;
}
groupbox
{
-
moz
-
box
-
orient
:
vertical
;
}
%
ifndef
MOZ_WIDGET_GTK
titlebar
toolbar
:
not
(
[
nowindowdrag
=
"
true
"
]
)
:
not
(
[
customizing
=
"
true
"
]
)
{
-
moz
-
window
-
dragging
:
drag
;
}
%
endif
toolbaritem
toolbarbutton
toolbarseparator
button
search
-
textbox
html
|
input
tab
radio
splitter
menulist
{
-
moz
-
window
-
dragging
:
no
-
drag
;
}
titlebar
{
pointer
-
events
:
auto
!
important
;
}
toolbox
{
-
moz
-
box
-
orient
:
vertical
;
}
%
ifdef
XP_MACOSX
toolbar
[
type
=
"
menubar
"
]
{
min
-
height
:
0
!
important
;
border
:
0
!
important
;
}
%
endif
toolbarspring
{
-
moz
-
box
-
flex
:
1000
;
}
menubar
>
menu
:
empty
{
visibility
:
collapse
;
}
.
menu
-
text
{
-
moz
-
box
-
flex
:
1
;
}
menupopup
panel
{
-
moz
-
box
-
orient
:
vertical
;
}
menupopup
panel
tooltip
{
display
:
-
moz
-
popup
;
z
-
index
:
2147483647
;
text
-
shadow
:
none
;
}
tooltip
{
-
moz
-
box
-
orient
:
vertical
;
white
-
space
:
pre
-
wrap
;
margin
-
top
:
21px
;
}
%
excluding
Android
here
to
work
around
bug
1637975
:
%
ifndef
ANDROID
supports
-
moz
-
bool
-
pref
(
"
xul
.
panel
-
animations
.
enabled
"
)
{
media
(
prefers
-
reduced
-
motion
:
no
-
preference
)
{
%
ifdef
MOZ_WIDGET_COCOA
panel
[
type
=
"
arrow
"
]
:
not
(
[
animate
=
"
false
"
]
)
{
transition
-
property
:
-
moz
-
window
-
transform
-
moz
-
window
-
opacity
;
transition
-
duration
:
0
.
18s
0
.
18s
;
transition
-
timing
-
function
:
var
(
-
-
animation
-
easing
-
function
)
ease
-
out
;
}
media
(
-
moz
-
mac
-
big
-
sur
-
theme
:
0
)
{
panel
[
type
=
"
arrow
"
]
:
not
(
[
animate
=
"
false
"
]
)
{
-
moz
-
window
-
opacity
:
0
;
-
moz
-
window
-
transform
:
translateY
(
-
70px
)
;
}
}
panel
[
type
=
"
arrow
"
]
[
side
=
"
bottom
"
]
:
not
(
[
animate
=
"
false
"
]
)
{
-
moz
-
window
-
transform
:
translateY
(
70px
)
;
}
panel
[
type
=
"
arrow
"
]
[
animate
]
[
animate
=
"
open
"
]
{
-
moz
-
window
-
opacity
:
1
.
0
;
transition
-
duration
:
0
.
18s
0
.
18s
;
-
moz
-
window
-
transform
:
none
;
transition
-
timing
-
function
:
var
(
-
-
animation
-
easing
-
function
)
ease
-
in
-
out
;
}
panel
[
type
=
"
arrow
"
]
[
animate
]
[
animate
=
"
cancel
"
]
{
-
moz
-
window
-
opacity
:
0
;
-
moz
-
window
-
transform
:
none
;
}
%
else
panel
[
type
=
"
arrow
"
]
:
not
(
[
animate
=
"
false
"
]
)
{
opacity
:
0
;
transform
:
translateY
(
-
70px
)
;
transition
-
property
:
transform
opacity
;
transition
-
duration
:
0
.
18s
0
.
18s
;
transition
-
timing
-
function
:
var
(
-
-
animation
-
easing
-
function
)
ease
-
out
;
}
panel
[
type
=
"
arrow
"
]
[
side
=
"
bottom
"
]
:
not
(
[
animate
=
"
false
"
]
)
{
transform
:
translateY
(
70px
)
;
}
panel
[
type
=
"
arrow
"
]
[
animate
]
[
animate
=
"
open
"
]
{
opacity
:
1
.
0
;
transition
-
duration
:
0
.
18s
0
.
18s
;
transform
:
none
;
transition
-
timing
-
function
:
var
(
-
-
animation
-
easing
-
function
)
ease
-
in
-
out
;
}
panel
[
type
=
"
arrow
"
]
[
animate
]
[
animate
=
"
cancel
"
]
{
transform
:
none
;
}
%
endif
}
}
%
endif
panel
[
type
=
"
arrow
"
]
[
animating
]
{
pointer
-
events
:
none
;
}
treecolpicker
{
-
moz
-
box
-
ordinal
-
group
:
2147483646
;
}
treechildren
{
display
:
-
moz
-
box
;
user
-
select
:
none
;
-
moz
-
box
-
flex
:
1
;
}
tree
{
-
moz
-
box
-
orient
:
vertical
;
width
:
10px
;
height
:
10px
;
}
tree
[
hidecolumnpicker
=
"
true
"
]
treecolpicker
{
display
:
none
;
}
treecol
{
min
-
width
:
16px
;
}
treecol
[
hidden
=
"
true
"
]
{
visibility
:
collapse
;
display
:
-
moz
-
box
;
}
tree
:
not
(
[
treelines
=
"
true
"
]
)
treechildren
:
:
-
moz
-
tree
-
line
{
visibility
:
hidden
;
}
treechildren
:
:
-
moz
-
tree
-
cell
(
ltr
)
{
direction
:
ltr
!
important
;
}
deck
{
display
:
-
moz
-
deck
;
}
stack
{
display
:
grid
;
position
:
relative
;
}
stack
>
*
|
*
:
not
(
:
-
moz
-
native
-
anonymous
)
{
grid
-
area
:
1
/
1
;
z
-
index
:
0
;
min
-
height
:
0
;
}
legacy
-
stack
{
display
:
-
moz
-
stack
;
}
tabbox
{
-
moz
-
box
-
orient
:
vertical
;
}
tabs
{
-
moz
-
box
-
orient
:
horizontal
;
}
tab
{
-
moz
-
box
-
align
:
center
;
-
moz
-
box
-
pack
:
center
;
}
tab
[
selected
=
"
true
"
]
:
not
(
[
ignorefocus
=
"
true
"
]
)
{
-
moz
-
user
-
focus
:
normal
;
}
tabpanels
{
display
:
-
moz
-
deck
;
}
tooltip
[
titletip
=
"
true
"
]
{
max
-
width
:
none
;
}
.
box
-
inherit
{
-
moz
-
box
-
orient
:
inherit
;
-
moz
-
box
-
pack
:
inherit
;
-
moz
-
box
-
align
:
inherit
;
-
moz
-
box
-
direction
:
inherit
;
}
search
-
textbox
{
user
-
select
:
text
;
text
-
shadow
:
none
;
}
:
root
html
|
textarea
:
not
(
[
resizable
=
"
true
"
]
)
{
resize
:
none
;
}
supports
-
moz
-
bool
-
pref
(
"
layout
.
css
.
emulate
-
moz
-
box
-
with
-
flex
"
)
{
html
|
*
.
textbox
-
input
{
display
:
block
;
}
}
%
ifndef
MOZ_SUITE
.
autocomplete
-
richlistbox
{
-
moz
-
user
-
focus
:
ignore
;
overflow
-
x
:
hidden
!
important
;
}
.
autocomplete
-
richlistitem
{
-
moz
-
box
-
orient
:
vertical
;
-
moz
-
box
-
align
:
center
;
overflow
:
clip
;
}
%
endif
.
autocomplete
-
result
-
popupset
{
max
-
width
:
0px
;
width
:
0
!
important
;
min
-
width
:
0
%
;
min
-
height
:
0
%
;
}
menulist
[
popuponly
]
{
appearance
:
none
!
important
;
margin
:
0
!
important
;
height
:
0
!
important
;
min
-
height
:
0
!
important
;
border
:
0
!
important
;
}
.
tree
-
splitter
{
width
:
0px
;
max
-
width
:
0px
;
min
-
width
:
0
%
!
important
;
min
-
height
:
0
%
!
important
;
-
moz
-
box
-
ordinal
-
group
:
2147483646
;
}
slider
{
overflow
:
hidden
;
}
scrollbox
{
overflow
:
hidden
;
}
scrollbox
[
smoothscroll
=
true
]
{
scroll
-
behavior
:
smooth
;
}
stringbundle
stringbundleset
{
display
:
none
;
}
dialog
{
-
moz
-
box
-
flex
:
1
;
-
moz
-
box
-
orient
:
vertical
;
}
wizard
{
-
moz
-
box
-
flex
:
1
;
-
moz
-
box
-
orient
:
vertical
;
width
:
40em
;
height
:
30em
;
}
wizardpage
{
-
moz
-
box
-
orient
:
vertical
;
overflow
:
auto
;
}
richlistbox
{
-
moz
-
user
-
focus
:
normal
;
-
moz
-
box
-
orient
:
vertical
;
}
findbar
{
overflow
-
x
:
hidden
;
}
label
button
image
{
display
:
-
moz
-
inline
-
box
;
}
.
menu
-
iconic
-
highlightable
-
text
:
not
(
[
highlightable
=
"
true
"
]
)
.
menu
-
iconic
-
text
[
highlightable
=
"
true
"
]
{
display
:
none
;
}
[
orient
=
"
vertical
"
]
{
-
moz
-
box
-
orient
:
vertical
!
important
;
}
[
orient
=
"
horizontal
"
]
{
-
moz
-
box
-
orient
:
horizontal
!
important
;
}
[
align
=
"
start
"
]
{
-
moz
-
box
-
align
:
start
!
important
;
}
[
align
=
"
center
"
]
{
-
moz
-
box
-
align
:
center
!
important
;
}
[
align
=
"
end
"
]
{
-
moz
-
box
-
align
:
end
!
important
;
}
[
align
=
"
baseline
"
]
{
-
moz
-
box
-
align
:
baseline
!
important
;
}
[
align
=
"
stretch
"
]
{
-
moz
-
box
-
align
:
stretch
!
important
;
}
[
pack
=
"
start
"
]
{
-
moz
-
box
-
pack
:
start
!
important
;
}
[
pack
=
"
center
"
]
{
-
moz
-
box
-
pack
:
center
!
important
;
}
[
pack
=
"
end
"
]
{
-
moz
-
box
-
pack
:
end
!
important
;
}
supports
-
moz
-
bool
-
pref
(
"
layout
.
css
.
emulate
-
moz
-
box
-
with
-
flex
"
)
{
[
flex
=
"
1
"
]
{
-
moz
-
box
-
flex
:
1
;
}
[
flex
=
"
2
"
]
{
-
moz
-
box
-
flex
:
2
;
}
[
flex
=
"
3
"
]
{
-
moz
-
box
-
flex
:
3
;
}
[
flex
=
"
4
"
]
{
-
moz
-
box
-
flex
:
4
;
}
[
flex
=
"
5
"
]
{
-
moz
-
box
-
flex
:
5
;
}
[
flex
=
"
6
"
]
{
-
moz
-
box
-
flex
:
6
;
}
[
flex
=
"
7
"
]
{
-
moz
-
box
-
flex
:
7
;
}
[
flex
=
"
8
"
]
{
-
moz
-
box
-
flex
:
8
;
}
[
flex
=
"
9
"
]
{
-
moz
-
box
-
flex
:
9
;
}
[
flex
=
"
100
"
]
{
-
moz
-
box
-
flex
:
100
;
}
[
flex
=
"
400
"
]
{
-
moz
-
box
-
flex
:
400
;
}
[
flex
=
"
1000
"
]
{
-
moz
-
box
-
flex
:
1000
;
}
[
flex
=
"
10000
"
]
{
-
moz
-
box
-
flex
:
10000
;
}
}
