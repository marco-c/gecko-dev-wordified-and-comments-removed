namespace
url
(
"
http
:
/
/
www
.
mozilla
.
org
/
keymaster
/
gatekeeper
/
there
.
is
.
only
.
xul
"
)
;
namespace
html
url
(
"
http
:
/
/
www
.
w3
.
org
/
1999
/
xhtml
"
)
;
namespace
xbl
url
(
"
http
:
/
/
www
.
mozilla
.
org
/
xbl
"
)
;
:
root
{
-
-
animation
-
easing
-
function
:
cubic
-
bezier
(
.
07
.
95
0
1
)
;
}
window
[
chromehidden
~
=
"
menubar
"
]
.
chromeclass
-
menubar
window
[
chromehidden
~
=
"
directories
"
]
.
chromeclass
-
directories
window
[
chromehidden
~
=
"
status
"
]
.
chromeclass
-
status
window
[
chromehidden
~
=
"
extrachrome
"
]
.
chromeclass
-
extrachrome
window
[
chromehidden
~
=
"
location
"
]
.
chromeclass
-
location
window
[
chromehidden
~
=
"
location
"
]
[
chromehidden
~
=
"
toolbar
"
]
.
chromeclass
-
toolbar
window
[
chromehidden
~
=
"
toolbar
"
]
.
chromeclass
-
toolbar
-
additional
{
display
:
none
;
}
.
uri
-
element
{
direction
:
ltr
!
important
;
}
script
data
commands
commandset
command
broadcasterset
broadcaster
observes
keyset
key
toolbarpalette
toolbarset
template
rule
conditions
action
bindings
binding
content
member
triple
treechildren
treeitem
treeseparator
treerow
treecell
{
display
:
none
;
}
xbl
|
children
{
display
:
none
!
important
;
}
button
checkbox
colorpicker
[
type
=
"
button
"
]
datepicker
[
type
=
"
grid
"
]
menulist
radiogroup
tree
browser
editor
iframe
{
-
moz
-
user
-
focus
:
normal
;
}
menulist
[
editable
=
"
true
"
]
{
-
moz
-
user
-
focus
:
ignore
;
}
window
page
{
overflow
:
-
moz
-
hidden
-
unscrollable
;
-
moz
-
box
-
orient
:
vertical
;
}
vbox
{
-
moz
-
box
-
orient
:
vertical
;
}
bbox
{
-
moz
-
box
-
align
:
baseline
;
}
button
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
button
.
xml
#
button
"
)
;
}
button
[
type
=
"
repeat
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
button
.
xml
#
button
-
repeat
"
)
;
}
button
[
type
=
"
menu
"
]
button
[
type
=
"
panel
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
button
.
xml
#
menu
"
)
;
}
button
[
type
=
"
menu
-
button
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
button
.
xml
#
menu
-
button
"
)
;
}
toolbarbutton
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbarbutton
.
xml
#
toolbarbutton
"
)
;
}
toolbarbutton
.
badged
-
button
>
toolbarbutton
toolbarbutton
.
badged
-
button
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbarbutton
.
xml
#
toolbarbutton
-
badged
"
)
;
}
.
toolbarbutton
-
badge
:
not
(
[
value
]
)
.
toolbarbutton
-
badge
[
value
=
"
"
]
{
display
:
none
;
}
toolbarbutton
[
type
=
"
menu
"
]
toolbarbutton
[
type
=
"
panel
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbarbutton
.
xml
#
menu
"
)
;
}
toolbarbutton
.
badged
-
button
[
type
=
"
menu
"
]
toolbarbutton
.
badged
-
button
[
type
=
"
panel
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbarbutton
.
xml
#
toolbarbutton
-
badged
-
menu
"
)
;
}
toolbarbutton
[
type
=
"
menu
-
button
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbarbutton
.
xml
#
menu
-
button
"
)
;
}
toolbar
[
mode
=
"
icons
"
]
.
toolbarbutton
-
text
toolbar
[
mode
=
"
icons
"
]
.
toolbarbutton
-
multiline
-
text
toolbar
[
mode
=
"
text
"
]
.
toolbarbutton
-
icon
.
toolbarbutton
-
multiline
-
text
:
not
(
[
wrap
=
"
true
"
]
)
.
toolbarbutton
-
text
[
wrap
=
"
true
"
]
{
display
:
none
;
-
moz
-
binding
:
none
;
}
browser
editor
iframe
{
display
:
inline
;
}
browser
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
browser
.
xml
#
browser
"
)
;
}
browser
[
remote
=
true
]
:
not
(
.
lightweight
)
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
remote
-
browser
.
xml
#
remote
-
browser
"
)
;
}
editor
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
editor
.
xml
#
editor
"
)
;
}
iframe
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
general
.
xml
#
iframe
"
)
;
}
notificationbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
notification
.
xml
#
notificationbox
"
)
;
-
moz
-
box
-
orient
:
vertical
;
}
.
notificationbox
-
stack
{
overflow
:
-
moz
-
hidden
-
unscrollable
;
}
notification
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
notification
.
xml
#
notification
"
)
;
}
notification
.
animated
{
transition
:
margin
-
top
300ms
var
(
-
-
animation
-
easing
-
function
)
opacity
300ms
var
(
-
-
animation
-
easing
-
function
)
;
}
popupnotification
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
notification
.
xml
#
popup
-
notification
"
)
;
}
.
popup
-
notification
-
menubutton
:
not
(
[
label
]
)
{
display
:
none
;
}
checkbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
checkbox
.
xml
#
checkbox
"
)
;
}
radiogroup
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
radio
.
xml
#
radiogroup
"
)
;
-
moz
-
box
-
orient
:
vertical
;
}
radio
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
radio
.
xml
#
radio
"
)
;
}
groupbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
groupbox
.
xml
#
groupbox
"
)
;
display
:
-
moz
-
groupbox
;
}
caption
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
groupbox
.
xml
#
caption
"
)
;
}
.
groupbox
-
body
{
-
moz
-
box
-
pack
:
inherit
;
-
moz
-
box
-
align
:
inherit
;
-
moz
-
box
-
orient
:
vertical
;
}
%
ifndef
MOZ_WIDGET_GTK
titlebar
toolbar
:
not
(
[
nowindowdrag
=
"
true
"
]
)
:
not
(
[
customizing
=
"
true
"
]
)
%
endif
windowdragbox
{
-
moz
-
window
-
dragging
:
drag
;
}
toolbaritem
toolbarbutton
toolbarseparator
button
textbox
tab
radio
splitter
scale
menulist
{
-
moz
-
window
-
dragging
:
no
-
drag
;
}
toolbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbar
.
xml
#
toolbox
"
)
;
-
moz
-
box
-
orient
:
vertical
;
}
toolbar
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbar
.
xml
#
toolbar
"
)
;
}
toolbar
[
customizing
=
"
true
"
]
[
collapsed
=
"
true
"
]
{
visibility
:
visible
;
}
toolbar
[
customizing
=
"
true
"
]
[
hidden
=
"
true
"
]
{
display
:
-
moz
-
box
;
}
%
ifdef
XP_MACOSX
toolbar
[
type
=
"
menubar
"
]
{
min
-
height
:
0
!
important
;
border
:
0
!
important
;
}
%
else
toolbar
[
type
=
"
menubar
"
]
[
autohide
=
"
true
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbar
.
xml
#
toolbar
-
menubar
-
autohide
"
)
;
overflow
:
hidden
;
}
toolbar
[
type
=
"
menubar
"
]
[
autohide
=
"
true
"
]
[
inactive
=
"
true
"
]
:
not
(
[
customizing
=
"
true
"
]
)
{
min
-
height
:
0
!
important
;
height
:
0
!
important
;
-
moz
-
appearance
:
none
!
important
;
border
-
style
:
none
!
important
;
}
%
endif
toolbarseparator
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbar
.
xml
#
toolbardecoration
"
)
;
}
toolbarspacer
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbar
.
xml
#
toolbardecoration
"
)
;
}
toolbarspring
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbar
.
xml
#
toolbardecoration
"
)
;
-
moz
-
box
-
flex
:
1000
;
}
toolbarpaletteitem
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbar
.
xml
#
toolbarpaletteitem
"
)
;
}
toolbarpaletteitem
[
place
=
"
palette
"
]
{
-
moz
-
box
-
orient
:
vertical
;
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbar
.
xml
#
toolbarpaletteitem
-
palette
"
)
;
}
menubar
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
toolbar
.
xml
#
menubar
"
)
;
}
menubar
>
menu
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menu
-
menubar
"
)
;
}
menubar
>
menu
.
menu
-
iconic
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menu
-
menubar
-
iconic
"
)
;
}
menu
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menu
"
)
;
}
menu
.
menu
-
iconic
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menu
-
iconic
"
)
;
}
menubar
>
menu
:
empty
{
visibility
:
collapse
;
}
menuitem
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menuitem
"
)
;
}
menuitem
.
menuitem
-
iconic
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menuitem
-
iconic
"
)
;
}
menuitem
[
description
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menuitem
-
iconic
-
desc
-
noaccel
"
)
;
}
menuitem
[
type
=
"
checkbox
"
]
menuitem
[
type
=
"
radio
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menuitem
-
iconic
"
)
;
}
menuitem
.
menuitem
-
non
-
iconic
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menubutton
-
item
"
)
;
}
menucaption
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menucaption
"
)
;
}
.
menu
-
text
{
-
moz
-
box
-
flex
:
1
;
}
popup
menupopup
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
popup
.
xml
#
popup
"
)
;
-
moz
-
box
-
orient
:
vertical
;
}
panel
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
popup
.
xml
#
panel
"
)
;
-
moz
-
box
-
orient
:
vertical
;
}
popup
menupopup
panel
tooltip
{
display
:
-
moz
-
popup
;
z
-
index
:
2147483647
;
text
-
shadow
:
none
;
}
tooltip
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
popup
.
xml
#
tooltip
"
)
;
-
moz
-
box
-
orient
:
vertical
;
white
-
space
:
pre
-
wrap
;
margin
-
top
:
21px
;
}
panel
[
type
=
"
arrow
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
popup
.
xml
#
arrowpanel
"
)
;
}
%
ifdef
MOZ_WIDGET_COCOA
panel
[
type
=
"
arrow
"
]
[
side
]
:
not
(
[
animate
=
"
false
"
]
)
{
-
moz
-
window
-
opacity
:
0
;
-
moz
-
window
-
transform
:
translateY
(
-
70px
)
;
transition
-
property
:
-
moz
-
window
-
transform
-
moz
-
window
-
opacity
;
transition
-
duration
:
0
.
18s
0
.
18s
;
transition
-
timing
-
function
:
var
(
-
-
animation
-
easing
-
function
)
ease
-
out
;
}
panel
[
type
=
"
arrow
"
]
[
side
=
"
bottom
"
]
:
not
(
[
animate
=
"
false
"
]
)
{
-
moz
-
window
-
transform
:
translateY
(
70px
)
;
}
panel
[
type
=
"
arrow
"
]
[
side
]
[
animate
=
"
open
"
]
{
-
moz
-
window
-
opacity
:
1
.
0
;
transition
-
duration
:
0
.
18s
0
.
18s
;
-
moz
-
window
-
transform
:
none
;
transition
-
timing
-
function
:
var
(
-
-
animation
-
easing
-
function
)
ease
-
in
-
out
;
}
panel
[
type
=
"
arrow
"
]
[
side
]
[
animate
=
"
cancel
"
]
{
-
moz
-
window
-
transform
:
none
;
}
%
elifndef
MOZ_WIDGET_GTK
panel
[
type
=
"
arrow
"
]
[
side
]
{
will
-
change
:
transform
opacity
;
}
panel
[
type
=
"
arrow
"
]
[
side
]
:
not
(
[
animate
=
"
false
"
]
)
{
opacity
:
0
;
transform
:
translateY
(
-
70px
)
;
transition
-
property
:
transform
opacity
;
transition
-
duration
:
0
.
18s
0
.
18s
;
transition
-
timing
-
function
:
var
(
-
-
animation
-
easing
-
function
)
ease
-
out
;
}
panel
[
type
=
"
arrow
"
]
[
side
=
"
bottom
"
]
:
not
(
[
animate
=
"
false
"
]
)
{
transform
:
translateY
(
70px
)
;
}
panel
[
type
=
"
arrow
"
]
[
side
]
[
animate
=
"
open
"
]
{
opacity
:
1
.
0
;
transition
-
duration
:
0
.
18s
0
.
18s
;
transform
:
none
;
transition
-
timing
-
function
:
var
(
-
-
animation
-
easing
-
function
)
ease
-
in
-
out
;
}
panel
[
type
=
"
arrow
"
]
[
side
]
[
animate
=
"
cancel
"
]
{
transform
:
none
;
}
%
endif
panel
[
type
=
"
arrow
"
]
[
animating
]
{
pointer
-
events
:
none
;
}
grid
{
display
:
-
moz
-
grid
;
}
rows
columns
{
display
:
-
moz
-
grid
-
group
;
}
row
column
{
display
:
-
moz
-
grid
-
line
;
}
rows
{
-
moz
-
box
-
orient
:
vertical
;
}
column
{
-
moz
-
box
-
orient
:
vertical
;
}
listbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listbox
"
)
;
}
listhead
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listhead
"
)
;
}
listrows
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listrows
"
)
;
}
listitem
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listitem
"
)
;
}
listitem
[
type
=
"
checkbox
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listitem
-
checkbox
"
)
;
}
listheader
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listheader
"
)
;
-
moz
-
box
-
ordinal
-
group
:
2147483646
;
}
listcell
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listcell
"
)
;
}
listcell
[
type
=
"
checkbox
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listcell
-
checkbox
"
)
;
}
.
listitem
-
iconic
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listitem
-
iconic
"
)
;
}
listitem
[
type
=
"
checkbox
"
]
.
listitem
-
iconic
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listitem
-
checkbox
-
iconic
"
)
;
}
.
listcell
-
iconic
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listcell
-
iconic
"
)
;
}
listcell
[
type
=
"
checkbox
"
]
.
listcell
-
iconic
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
listbox
.
xml
#
listcell
-
checkbox
-
iconic
"
)
;
}
listbox
{
display
:
-
moz
-
grid
;
}
listbox
[
rows
]
{
height
:
auto
;
}
listcols
listhead
listrows
listboxbody
{
display
:
-
moz
-
grid
-
group
;
}
listcol
listitem
listheaditem
{
display
:
-
moz
-
grid
-
line
;
}
listbox
{
-
moz
-
user
-
focus
:
normal
;
-
moz
-
box
-
orient
:
vertical
;
min
-
width
:
0px
;
min
-
height
:
0px
;
width
:
200px
;
height
:
200px
;
}
listhead
{
-
moz
-
box
-
orient
:
vertical
;
}
listrows
{
-
moz
-
box
-
orient
:
vertical
;
-
moz
-
box
-
flex
:
1
;
}
listboxbody
{
-
moz
-
box
-
orient
:
vertical
;
-
moz
-
box
-
flex
:
1
;
overflow
-
x
:
hidden
!
important
;
overflow
-
y
:
auto
;
min
-
height
:
0px
;
}
listcol
{
-
moz
-
box
-
orient
:
vertical
;
min
-
width
:
16px
;
}
listcell
{
-
moz
-
box
-
align
:
center
;
}
tree
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tree
.
xml
#
tree
"
)
;
}
treecols
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tree
.
xml
#
treecols
"
)
;
}
treecol
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tree
.
xml
#
treecol
"
)
;
-
moz
-
box
-
ordinal
-
group
:
2147483646
;
}
treecol
.
treecol
-
image
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tree
.
xml
#
treecol
-
image
"
)
;
}
tree
>
treechildren
{
display
:
-
moz
-
box
;
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tree
.
xml
#
treebody
"
)
;
-
moz
-
user
-
select
:
none
;
-
moz
-
box
-
flex
:
1
;
}
treerows
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tree
.
xml
#
treerows
"
)
;
}
treecolpicker
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tree
.
xml
#
columnpicker
"
)
;
}
tree
{
-
moz
-
box
-
orient
:
vertical
;
min
-
width
:
0px
;
min
-
height
:
0px
;
width
:
10px
;
height
:
10px
;
}
tree
[
hidecolumnpicker
=
"
true
"
]
>
treecols
>
treecolpicker
{
display
:
none
;
}
treecol
{
min
-
width
:
16px
;
}
treecol
[
hidden
=
"
true
"
]
{
visibility
:
collapse
;
display
:
-
moz
-
box
;
}
.
tree
-
scrollable
-
columns
{
overflow
:
hidden
;
}
tree
:
not
(
[
treelines
=
"
true
"
]
)
>
treechildren
:
:
-
moz
-
tree
-
line
{
visibility
:
hidden
;
}
treechildren
:
:
-
moz
-
tree
-
cell
(
ltr
)
{
direction
:
ltr
!
important
;
}
deck
{
display
:
-
moz
-
deck
;
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
general
.
xml
#
deck
"
)
;
}
stack
bulletinboard
{
display
:
-
moz
-
stack
;
}
tabbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tabbox
.
xml
#
tabbox
"
)
;
-
moz
-
box
-
orient
:
vertical
;
}
tabs
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tabbox
.
xml
#
tabs
"
)
;
-
moz
-
box
-
orient
:
horizontal
;
}
tab
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tabbox
.
xml
#
tab
"
)
;
-
moz
-
box
-
align
:
center
;
-
moz
-
box
-
pack
:
center
;
}
tab
[
selected
=
"
true
"
]
:
not
(
[
ignorefocus
=
"
true
"
]
)
{
-
moz
-
user
-
focus
:
normal
;
}
tabpanels
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
tabbox
.
xml
#
tabpanels
"
)
;
display
:
-
moz
-
deck
;
}
progressmeter
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
progressmeter
.
xml
#
progressmeter
"
)
;
}
.
box
-
inherit
{
-
moz
-
box
-
orient
:
inherit
;
-
moz
-
box
-
pack
:
inherit
;
-
moz
-
box
-
align
:
inherit
;
-
moz
-
box
-
direction
:
inherit
;
}
textbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
textbox
.
xml
#
textbox
"
)
;
-
moz
-
user
-
select
:
text
;
text
-
shadow
:
none
;
}
textbox
[
multiline
=
"
true
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
textbox
.
xml
#
textarea
"
)
;
}
.
textbox
-
input
-
box
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
textbox
.
xml
#
input
-
box
"
)
;
}
html
|
textarea
.
textbox
-
textarea
{
resize
:
none
;
}
textbox
[
resizable
=
"
true
"
]
>
.
textbox
-
input
-
box
>
html
|
textarea
.
textbox
-
textarea
{
resize
:
both
;
}
.
textbox
-
input
-
box
[
spellcheck
=
"
true
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
textbox
.
xml
#
input
-
box
-
spell
"
)
;
}
textbox
[
type
=
"
timed
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
textbox
.
xml
#
timed
-
textbox
"
)
;
}
textbox
[
type
=
"
search
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
textbox
.
xml
#
search
-
textbox
"
)
;
}
textbox
[
type
=
"
number
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
numberbox
.
xml
#
numberbox
"
)
;
}
.
textbox
-
contextmenu
:
-
moz
-
locale
-
dir
(
rtl
)
{
direction
:
rtl
;
}
%
ifndef
MOZ_SUITE
textbox
[
type
=
"
autocomplete
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
autocomplete
.
xml
#
autocomplete
"
)
;
}
panel
[
type
=
"
autocomplete
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
autocomplete
.
xml
#
autocomplete
-
result
-
popup
"
)
;
}
panel
[
type
=
"
autocomplete
-
richlistbox
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
autocomplete
.
xml
#
autocomplete
-
rich
-
result
-
popup
"
)
;
}
.
autocomplete
-
tree
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
autocomplete
.
xml
#
autocomplete
-
tree
"
)
;
-
moz
-
user
-
focus
:
ignore
;
}
.
autocomplete
-
treebody
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
autocomplete
.
xml
#
autocomplete
-
treebody
"
)
;
}
.
autocomplete
-
richlistbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
autocomplete
.
xml
#
autocomplete
-
richlistbox
"
)
;
-
moz
-
user
-
focus
:
ignore
;
}
.
autocomplete
-
richlistbox
>
scrollbox
{
overflow
-
x
:
hidden
!
important
;
}
.
autocomplete
-
richlistitem
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
autocomplete
.
xml
#
autocomplete
-
richlistitem
"
)
;
-
moz
-
box
-
orient
:
vertical
;
overflow
:
-
moz
-
hidden
-
unscrollable
;
}
.
autocomplete
-
treerows
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
autocomplete
.
xml
#
autocomplete
-
treerows
"
)
;
}
%
endif
popup
[
type
=
"
autocomplete
"
]
[
hidden
=
"
true
"
]
{
visibility
:
hidden
;
}
.
autocomplete
-
result
-
popupset
{
max
-
width
:
0px
;
width
:
0
!
important
;
min
-
width
:
0
%
;
min
-
height
:
0
%
;
}
colorpicker
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
colorpicker
.
xml
#
colorpicker
"
)
;
}
colorpicker
[
type
=
"
button
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
colorpicker
.
xml
#
colorpicker
-
button
"
)
;
}
.
colorpickertile
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
colorpicker
.
xml
#
colorpickertile
"
)
;
}
menulist
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menulist
.
xml
#
menulist
"
)
;
}
menulist
[
popuponly
=
"
true
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menulist
.
xml
#
menulist
-
popuponly
"
)
;
-
moz
-
appearance
:
none
!
important
;
margin
:
0
!
important
;
height
:
0
!
important
;
min
-
height
:
0
!
important
;
border
:
0
!
important
;
}
menulist
[
editable
=
"
true
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menulist
.
xml
#
menulist
-
editable
"
)
;
}
menulist
[
type
=
"
description
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menulist
.
xml
#
menulist
-
description
"
)
;
}
menulist
>
menupopup
>
menuitem
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
menu
.
xml
#
menuitem
-
iconic
-
noaccel
"
)
;
}
dropmarker
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
general
.
xml
#
dropmarker
"
)
;
}
splitter
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
splitter
.
xml
#
splitter
"
)
;
}
grippy
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
splitter
.
xml
#
grippy
"
)
;
}
.
tree
-
splitter
{
width
:
0px
;
max
-
width
:
0px
;
min
-
width
:
0
%
!
important
;
min
-
height
:
0
%
!
important
;
-
moz
-
box
-
ordinal
-
group
:
2147483646
;
}
slider
{
overflow
:
hidden
;
}
scrollbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
scrollbox
.
xml
#
scrollbox
"
)
;
overflow
:
hidden
;
}
scrollbox
[
smoothscroll
=
true
]
{
scroll
-
behavior
:
smooth
;
}
arrowscrollbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
scrollbox
.
xml
#
arrowscrollbox
"
)
;
}
arrowscrollbox
[
clicktoscroll
=
"
true
"
]
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
scrollbox
.
xml
#
arrowscrollbox
-
clicktoscroll
"
)
;
}
autorepeatbutton
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
scrollbox
.
xml
#
autorepeatbutton
"
)
;
}
spinbuttons
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
spinbuttons
.
xml
#
spinbuttons
"
)
;
}
.
spinbuttons
-
button
{
-
moz
-
user
-
focus
:
ignore
;
}
stringbundleset
{
visibility
:
collapse
;
}
stringbundle
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
stringbundle
.
xml
#
stringbundle
"
)
;
visibility
:
collapse
;
}
dialog
dialog
:
root
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
dialog
.
xml
#
dialog
"
)
;
-
moz
-
box
-
orient
:
vertical
;
}
page
{
-
moz
-
box
-
orient
:
vertical
;
}
wizard
wizard
:
root
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
wizard
.
xml
#
wizard
"
)
;
-
moz
-
box
-
orient
:
vertical
;
width
:
40em
;
height
:
30em
;
}
wizardpage
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
wizard
.
xml
#
wizardpage
"
)
;
-
moz
-
box
-
orient
:
vertical
;
overflow
:
auto
;
}
.
wizard
-
header
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
wizard
.
xml
#
wizard
-
header
"
)
;
}
.
wizard
-
buttons
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
wizard
.
xml
#
wizard
-
buttons
"
)
;
}
richlistbox
{
-
moz
-
binding
:
url
(
'
chrome
:
/
/
global
/
content
/
bindings
/
richlistbox
.
xml
#
richlistbox
'
)
;
-
moz
-
user
-
focus
:
normal
;
-
moz
-
box
-
orient
:
vertical
;
}
richlistitem
{
-
moz
-
binding
:
url
(
'
chrome
:
/
/
global
/
content
/
bindings
/
richlistbox
.
xml
#
richlistitem
'
)
;
}
richlistbox
>
listheader
{
-
moz
-
box
-
ordinal
-
group
:
1
;
}
datepicker
{
-
moz
-
binding
:
url
(
'
chrome
:
/
/
global
/
content
/
bindings
/
datetimepicker
.
xml
#
datepicker
'
)
;
}
datepicker
[
type
=
"
popup
"
]
{
-
moz
-
binding
:
url
(
'
chrome
:
/
/
global
/
content
/
bindings
/
datetimepicker
.
xml
#
datepicker
-
popup
'
)
;
}
datepicker
[
type
=
"
grid
"
]
{
-
moz
-
binding
:
url
(
'
chrome
:
/
/
global
/
content
/
bindings
/
datetimepicker
.
xml
#
datepicker
-
grid
'
)
;
}
timepicker
{
-
moz
-
binding
:
url
(
'
chrome
:
/
/
global
/
content
/
bindings
/
datetimepicker
.
xml
#
timepicker
'
)
;
}
findbar
{
-
moz
-
binding
:
url
(
'
chrome
:
/
/
global
/
content
/
bindings
/
findbar
.
xml
#
findbar
'
)
;
overflow
-
x
:
hidden
;
}
.
findbar
-
textbox
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
findbar
.
xml
#
findbar
-
textbox
"
)
;
}
filefield
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
bindings
/
filefield
.
xml
#
filefield
"
)
;
}
tabmodalprompt
{
-
moz
-
binding
:
url
(
"
chrome
:
/
/
global
/
content
/
tabprompts
.
xml
#
tabmodalprompt
"
)
;
overflow
:
hidden
;
text
-
shadow
:
none
;
}
.
button
-
highlightable
-
text
:
not
(
[
highlightable
=
"
true
"
]
)
.
button
-
text
[
highlightable
=
"
true
"
]
.
menulist
-
highlightable
-
label
:
not
(
[
highlightable
=
"
true
"
]
)
.
menulist
-
label
[
highlightable
=
"
true
"
]
.
menu
-
iconic
-
highlightable
-
text
:
not
(
[
highlightable
=
"
true
"
]
)
.
menu
-
iconic
-
text
[
highlightable
=
"
true
"
]
{
display
:
none
;
}
