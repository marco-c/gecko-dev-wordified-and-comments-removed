Services
.
scriptloader
.
loadSubScript
(
"
chrome
:
/
/
mochikit
/
content
/
tests
/
SimpleTest
/
MockObjects
.
js
"
this
)
;
var
mockTransferCallback
;
function
MockTransfer
(
)
{
this
.
_downloadIsSuccessful
=
true
;
}
MockTransfer
.
prototype
=
{
QueryInterface
:
ChromeUtils
.
generateQI
(
[
Ci
.
nsIWebProgressListener
Ci
.
nsIWebProgressListener2
Ci
.
nsITransfer
]
)
onStateChange
:
function
MTFC_onStateChange
(
aWebProgress
aRequest
aStateFlags
aStatus
)
{
if
(
!
Components
.
isSuccessCode
(
aStatus
)
)
this
.
_downloadIsSuccessful
=
false
;
if
(
(
aStateFlags
&
Ci
.
nsIWebProgressListener
.
STATE_STOP
)
&
&
(
aStateFlags
&
Ci
.
nsIWebProgressListener
.
STATE_IS_NETWORK
)
)
mockTransferCallback
(
this
.
_downloadIsSuccessful
)
;
}
onProgressChange
(
)
{
}
onLocationChange
(
)
{
}
onStatusChange
:
function
MTFC_onStatusChange
(
aWebProgress
aRequest
aStatus
aMessage
)
{
if
(
!
Components
.
isSuccessCode
(
aStatus
)
)
this
.
_downloadIsSuccessful
=
false
;
}
onSecurityChange
(
)
{
}
onContentBlockingEvent
(
)
{
}
onProgressChange64
(
)
{
}
onRefreshAttempted
(
)
{
}
init
(
)
{
}
setSha256Hash
(
)
{
}
setSignatureInfo
(
)
{
}
}
;
var
mockTransferRegisterer
=
new
MockObjectRegisterer
(
"
mozilla
.
org
/
transfer
;
1
"
MockTransfer
)
;
