var
kPrefName
=
"
accessibility
.
typeaheadfind
.
prefillwithselection
"
;
var
kEmptyURI
=
"
data
:
text
/
html
"
;
Services
.
prefs
.
setBoolPref
(
kPrefName
true
)
;
registerCleanupFunction
(
function
(
)
{
Services
.
prefs
.
clearUserPref
(
kPrefName
)
;
}
)
;
add_task
(
function
*
(
)
{
let
aTab
=
yield
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
kEmptyURI
)
;
ok
(
!
gFindBarInitialized
"
findbar
isn
'
t
initialized
yet
"
)
;
let
findBar
=
gFindBar
;
is
(
findBar
.
_findField
.
value
"
"
"
findbar
is
empty
"
)
;
findBar
.
_findField
.
value
=
"
xy
"
;
findBar
.
startFind
(
)
;
is
(
findBar
.
_findField
.
value
"
xy
"
"
findbar
should
have
xy
initial
query
"
)
;
is
(
findBar
.
_findField
.
mInputField
document
.
activeElement
"
findbar
is
now
focused
"
)
;
EventUtils
.
sendChar
(
"
z
"
window
)
;
is
(
findBar
.
_findField
.
value
"
z
"
"
z
erases
xy
"
)
;
findBar
.
_findField
.
value
=
"
"
;
ok
(
!
findBar
.
_findField
.
value
"
erase
findbar
after
first
test
"
)
;
findBar
.
startFind
(
)
;
ok
(
findBar
.
_startFindDeferred
"
prefilled
value
hasn
'
t
been
fetched
yet
"
)
;
is
(
findBar
.
_findField
.
mInputField
document
.
activeElement
"
findbar
is
still
focused
"
)
;
EventUtils
.
sendChar
(
"
a
"
window
)
;
EventUtils
.
sendChar
(
"
b
"
window
)
;
is
(
findBar
.
_findField
.
value
"
ab
"
"
initial
ab
typed
in
the
findbar
"
)
;
findBar
.
onCurrentSelection
(
"
foo
"
true
)
;
ok
(
!
findBar
.
_startFindDeferred
"
prefilled
value
fetched
"
)
;
is
(
findBar
.
_findField
.
value
"
ab
"
"
ab
kept
instead
of
prefill
value
"
)
;
EventUtils
.
sendChar
(
"
c
"
window
)
;
is
(
findBar
.
_findField
.
value
"
abc
"
"
c
is
appended
after
ab
"
)
;
findBar
.
_findField
.
value
=
"
"
;
yield
BrowserTestUtils
.
removeTab
(
aTab
)
;
}
)
;
