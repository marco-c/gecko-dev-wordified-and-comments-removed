var
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
var
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
var
{
ActorManagerChild
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
ActorManagerChild
.
jsm
"
)
;
ActorManagerChild
.
attach
(
this
)
;
ChromeUtils
.
defineModuleGetter
(
this
"
AutoCompletePopup
"
"
resource
:
/
/
gre
/
modules
/
AutoCompletePopupContent
.
jsm
"
)
;
ChromeUtils
.
defineModuleGetter
(
this
"
AutoScrollController
"
"
resource
:
/
/
gre
/
modules
/
AutoScrollController
.
jsm
"
)
;
XPCOMUtils
.
defineLazyServiceGetter
(
this
"
formFill
"
"
mozilla
.
org
/
satchel
/
form
-
fill
-
controller
;
1
"
"
nsIFormFillController
"
)
;
var
global
=
this
;
var
AutoScrollListener
=
{
handleEvent
(
event
)
{
if
(
event
.
isTrusted
&
!
event
.
defaultPrevented
&
&
event
.
button
=
=
1
)
{
if
(
!
this
.
_controller
)
{
this
.
_controller
=
new
AutoScrollController
(
global
)
;
}
this
.
_controller
.
handleEvent
(
event
)
;
}
}
}
;
Services
.
els
.
addSystemEventListener
(
global
"
mousedown
"
AutoScrollListener
true
)
;
let
AutoComplete
=
{
_connected
:
false
init
(
)
{
addEventListener
(
"
unload
"
this
{
once
:
true
}
)
;
addEventListener
(
"
DOMContentLoaded
"
this
{
once
:
true
}
)
;
addEventListener
(
"
pageshow
"
this
{
capture
:
true
once
:
true
}
)
;
XPCOMUtils
.
defineLazyProxy
(
this
"
popup
"
(
)
=
>
new
AutoCompletePopup
(
global
)
{
QueryInterface
:
null
}
)
;
this
.
init
=
null
;
}
handleEvent
(
event
)
{
switch
(
event
.
type
)
{
case
"
DOMContentLoaded
"
:
case
"
pageshow
"
:
if
(
!
this
.
_connected
)
{
formFill
.
attachToBrowser
(
docShell
this
.
popup
)
;
this
.
_connected
=
true
;
}
break
;
case
"
unload
"
:
if
(
this
.
_connected
)
{
formFill
.
detachFromBrowser
(
docShell
)
;
this
.
_connected
=
false
;
}
break
;
}
}
}
;
AutoComplete
.
init
(
)
;
