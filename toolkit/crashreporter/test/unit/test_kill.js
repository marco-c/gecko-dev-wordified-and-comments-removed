add_task
(
async
function
run_test
(
)
{
if
(
!
(
"
mozilla
.
org
/
toolkit
/
crash
-
reporter
;
1
"
in
Cc
)
)
{
dump
(
"
INFO
|
test_kill
.
js
|
Can
'
t
test
crashreporter
in
a
non
-
libxul
build
.
\
n
"
)
;
return
;
}
do_load_child_test_harness
(
)
;
let
crashReporter
=
Cc
[
"
mozilla
.
org
/
toolkit
/
crash
-
reporter
;
1
"
]
.
getService
(
Ci
.
nsICrashReporter
)
;
crashReporter
.
minidumpPath
=
do_get_tempdir
(
)
;
let
headfile
=
do_get_file
(
"
.
.
/
unit
/
crasher_subprocess_head
.
js
"
)
;
const
CRASH_THEN_WAIT
=
"
const
ProcessTools
=
Cc
[
'
mozilla
.
org
/
processtools
-
service
;
1
'
]
.
getService
(
Ci
.
nsIProcessToolsService
)
;
\
console
.
log
(
'
Child
process
commiting
ritual
self
-
sacrifice
'
)
;
\
ProcessTools
.
kill
(
ProcessTools
.
pid
)
;
\
console
.
error
(
'
Oops
I
should
be
dead
'
)
;
\
while
(
true
)
{
}
;
"
;
do_get_profile
(
)
;
await
makeFakeAppDir
(
)
;
await
sendCommandAsync
(
'
load
(
"
'
+
headfile
.
path
.
replace
(
/
\
\
/
g
"
/
"
)
+
'
"
)
;
'
)
;
await
sendCommandAsync
(
CRASH_THEN_WAIT
)
;
let
{
setTimeout
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Timer
.
jsm
"
)
;
await
new
Promise
(
resolve
=
>
setTimeout
(
resolve
100
)
)
;
let
minidump
=
getMinidump
(
)
;
Assert
.
equal
(
minidump
null
There
should
be
no
minidump
{
minidump
=
=
null
?
"
null
"
:
minidump
.
path
}
)
;
}
)
;
