add_task
(
async
function
run_test
(
)
{
if
(
!
(
"
mozilla
.
org
/
toolkit
/
crash
-
reporter
;
1
"
in
Cc
)
)
{
dump
(
"
INFO
|
test_crash_modules
.
js
|
Can
'
t
test
crashreporter
in
a
non
-
libxul
build
.
\
n
"
)
;
return
;
}
await
do_crash
(
function
(
)
{
const
{
ctypes
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
ctypes
.
jsm
"
)
;
let
lib
=
ctypes
.
open
(
"
wininet
"
)
;
lib
.
close
(
)
;
}
async
function
(
mdump
extra
extraFile
)
{
runMinidumpAnalyzer
(
mdump
)
;
let
data
=
await
OS
.
File
.
read
(
extraFile
.
path
)
;
let
decoder
=
new
TextDecoder
(
)
;
extra
=
JSON
.
parse
(
decoder
.
decode
(
data
)
)
;
const
unloadedModules
=
extra
.
StackTraces
.
unloaded_modules
;
Assert
.
ok
(
!
!
unloadedModules
"
The
unloaded_modules
field
exists
"
)
;
Assert
.
notEqual
(
unloadedModules
.
find
(
e
=
>
e
.
filename
=
=
"
wininet
.
DLL
"
)
)
;
}
true
)
;
}
)
;
