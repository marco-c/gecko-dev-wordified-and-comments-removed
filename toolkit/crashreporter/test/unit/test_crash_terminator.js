"
use
strict
"
;
function
setup_crash
(
)
{
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
Services
.
prefs
.
setBoolPref
(
"
toolkit
.
terminator
.
testing
"
true
)
;
Services
.
prefs
.
setIntPref
(
"
toolkit
.
asyncshutdown
.
crash_timeout
"
10
)
;
let
terminator
=
Cc
[
"
mozilla
.
org
/
toolkit
/
shutdown
-
terminator
;
1
"
]
.
createInstance
(
Ci
.
nsIObserver
)
;
terminator
.
observe
(
null
"
profile
-
after
-
change
"
null
)
;
terminator
.
observe
(
null
"
xpcom
-
will
-
shutdown
"
null
)
;
terminator
.
observe
(
null
"
profile
-
before
-
change
"
null
)
;
dump
(
"
Waiting
(
actively
)
for
the
crash
\
n
"
)
;
Services
.
tm
.
spinEventLoopUntil
(
(
)
=
>
false
)
;
}
function
after_crash
(
mdump
extra
)
{
info
(
"
Crash
signature
:
"
+
JSON
.
stringify
(
extra
null
"
\
t
"
)
)
;
Assert
.
equal
(
extra
.
ShutdownProgress
"
profile
-
before
-
change
"
)
;
}
function
run_test
(
)
{
do_crash
(
setup_crash
after_crash
)
;
}
