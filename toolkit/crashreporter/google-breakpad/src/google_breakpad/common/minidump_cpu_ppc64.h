#
ifndef
GOOGLE_BREAKPAD_COMMON_MINIDUMP_CPU_PPC64_H__
#
define
GOOGLE_BREAKPAD_COMMON_MINIDUMP_CPU_PPC64_H__
#
include
"
minidump_cpu_ppc
.
h
"
typedef
MDFloatingSaveAreaPPC
MDFloatingSaveAreaPPC64
;
typedef
MDVectorSaveAreaPPC
MDVectorSaveAreaPPC64
;
#
define
MD_CONTEXT_PPC64_GPR_COUNT
MD_CONTEXT_PPC_GPR_COUNT
typedef
struct
{
uint64_t
context_flags
;
uint64_t
srr0
;
uint64_t
srr1
;
uint64_t
gpr
[
MD_CONTEXT_PPC64_GPR_COUNT
]
;
uint64_t
cr
;
uint64_t
xer
;
uint64_t
lr
;
uint64_t
ctr
;
uint64_t
vrsave
;
MDFloatingSaveAreaPPC
float_save
;
MDVectorSaveAreaPPC
vector_save
;
}
MDRawContextPPC64
;
enum
MDPPC64RegisterNumbers
{
MD_CONTEXT_PPC64_REG_SP
=
1
}
;
#
define
MD_CONTEXT_PPC64
0x01000000
#
define
MD_CONTEXT_PPC64_BASE
(
MD_CONTEXT_PPC64
|
0x00000001
)
#
define
MD_CONTEXT_PPC64_FLOATING_POINT
(
MD_CONTEXT_PPC64
|
0x00000008
)
#
define
MD_CONTEXT_PPC64_VECTOR
(
MD_CONTEXT_PPC64
|
0x00000020
)
#
define
MD_CONTEXT_PPC64_FULL
MD_CONTEXT_PPC64_BASE
#
define
MD_CONTEXT_PPC64_ALL
(
MD_CONTEXT_PPC64_FULL
|
\
MD_CONTEXT_PPC64_FLOATING_POINT
|
\
MD_CONTEXT_PPC64_VECTOR
)
#
endif
