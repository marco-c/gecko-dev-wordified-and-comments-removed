#
include
<
stdio
.
h
>
#
include
<
stdlib
.
h
>
#
include
<
unistd
.
h
>
#
include
"
common
/
linux
/
symbol_upload
.
h
"
using
google_breakpad
:
:
sym_upload
:
:
Options
;
static
void
Usage
(
int
argc
const
char
*
argv
[
]
)
{
fprintf
(
stderr
"
Submit
symbol
information
.
\
n
"
)
;
fprintf
(
stderr
"
Usage
:
%
s
[
options
.
.
.
]
<
symbols
>
<
upload
-
URL
>
\
n
"
argv
[
0
]
)
;
fprintf
(
stderr
"
Options
:
\
n
"
)
;
fprintf
(
stderr
"
<
symbols
>
should
be
created
by
using
the
dump_syms
tool
.
\
n
"
)
;
fprintf
(
stderr
"
<
upload
-
URL
>
is
the
destination
for
the
upload
\
n
"
)
;
fprintf
(
stderr
"
-
v
:
\
t
Version
information
(
e
.
g
.
1
.
2
.
3
.
4
)
\
n
"
)
;
fprintf
(
stderr
"
-
x
:
\
t
<
host
[
:
port
]
>
Use
HTTP
proxy
on
given
port
\
n
"
)
;
fprintf
(
stderr
"
-
u
:
\
t
<
user
[
:
password
]
>
Set
proxy
user
and
password
\
n
"
)
;
fprintf
(
stderr
"
-
h
:
\
t
Usage
\
n
"
)
;
fprintf
(
stderr
"
-
?
:
\
t
Usage
\
n
"
)
;
}
static
void
SetupOptions
(
int
argc
const
char
*
argv
[
]
Options
*
options
)
{
extern
int
optind
;
int
ch
;
while
(
(
ch
=
getopt
(
argc
(
char
*
const
*
)
argv
"
u
:
v
:
x
:
h
?
"
)
)
!
=
-
1
)
{
switch
(
ch
)
{
case
'
h
'
:
case
'
?
'
:
Usage
(
argc
argv
)
;
exit
(
0
)
;
break
;
case
'
u
'
:
options
-
>
proxy_user_pwd
=
optarg
;
break
;
case
'
v
'
:
options
-
>
version
=
optarg
;
break
;
case
'
x
'
:
options
-
>
proxy
=
optarg
;
break
;
default
:
fprintf
(
stderr
"
Invalid
option
'
%
c
'
\
n
"
ch
)
;
Usage
(
argc
argv
)
;
exit
(
1
)
;
break
;
}
}
if
(
(
argc
-
optind
)
!
=
2
)
{
fprintf
(
stderr
"
%
s
:
Missing
symbols
file
and
/
or
upload
-
URL
\
n
"
argv
[
0
]
)
;
Usage
(
argc
argv
)
;
exit
(
1
)
;
}
options
-
>
symbolsPath
=
argv
[
optind
]
;
options
-
>
uploadURLStr
=
argv
[
optind
+
1
]
;
}
int
main
(
int
argc
const
char
*
argv
[
]
)
{
Options
options
;
SetupOptions
(
argc
argv
&
options
)
;
google_breakpad
:
:
sym_upload
:
:
Start
(
&
options
)
;
return
options
.
success
?
0
:
1
;
}
