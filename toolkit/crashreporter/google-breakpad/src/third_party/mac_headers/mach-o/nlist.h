#
ifndef
_MACHO_NLIST_H_
#
define
_MACHO_NLIST_H_
#
include
<
stdint
.
h
>
struct
nlist
{
union
{
#
ifndef
__LP64__
char
*
n_name
;
#
endif
int32_t
n_strx
;
}
n_un
;
uint8_t
n_type
;
uint8_t
n_sect
;
int16_t
n_desc
;
uint32_t
n_value
;
}
;
struct
nlist_64
{
union
{
uint32_t
n_strx
;
}
n_un
;
uint8_t
n_type
;
uint8_t
n_sect
;
uint16_t
n_desc
;
uint64_t
n_value
;
}
;
#
define
N_STAB
0xe0
/
*
if
any
of
these
bits
set
a
symbolic
debugging
entry
*
/
#
define
N_PEXT
0x10
/
*
private
external
symbol
bit
*
/
#
define
N_TYPE
0x0e
/
*
mask
for
the
type
bits
*
/
#
define
N_EXT
0x01
/
*
external
symbol
bit
set
for
external
symbols
*
/
#
define
N_UNDF
0x0
/
*
undefined
n_sect
=
=
NO_SECT
*
/
#
define
N_ABS
0x2
/
*
absolute
n_sect
=
=
NO_SECT
*
/
#
define
N_SECT
0xe
/
*
defined
in
section
number
n_sect
*
/
#
define
N_PBUD
0xc
/
*
prebound
undefined
(
defined
in
a
dylib
)
*
/
#
define
N_INDR
0xa
/
*
indirect
*
/
#
define
NO_SECT
0
/
*
symbol
is
not
in
any
section
*
/
#
define
MAX_SECT
255
/
*
1
thru
255
inclusive
*
/
#
define
GET_COMM_ALIGN
(
n_desc
)
(
(
(
n_desc
)
>
>
8
)
&
0x0f
)
#
define
SET_COMM_ALIGN
(
n_desc
align
)
\
(
n_desc
)
=
(
(
(
n_desc
)
&
0xf0ff
)
|
(
(
(
align
)
&
0x0f
)
<
<
8
)
)
#
define
REFERENCE_TYPE
0x7
#
define
REFERENCE_FLAG_UNDEFINED_NON_LAZY
0
#
define
REFERENCE_FLAG_UNDEFINED_LAZY
1
#
define
REFERENCE_FLAG_DEFINED
2
#
define
REFERENCE_FLAG_PRIVATE_DEFINED
3
#
define
REFERENCE_FLAG_PRIVATE_UNDEFINED_NON_LAZY
4
#
define
REFERENCE_FLAG_PRIVATE_UNDEFINED_LAZY
5
#
define
REFERENCED_DYNAMICALLY
0x0010
#
define
GET_LIBRARY_ORDINAL
(
n_desc
)
(
(
(
n_desc
)
>
>
8
)
&
0xff
)
#
define
SET_LIBRARY_ORDINAL
(
n_desc
ordinal
)
\
(
n_desc
)
=
(
(
(
n_desc
)
&
0x00ff
)
|
(
(
(
ordinal
)
&
0xff
)
<
<
8
)
)
#
define
SELF_LIBRARY_ORDINAL
0x0
#
define
MAX_LIBRARY_ORDINAL
0xfd
#
define
DYNAMIC_LOOKUP_ORDINAL
0xfe
#
define
EXECUTABLE_ORDINAL
0xff
#
define
N_NO_DEAD_STRIP
0x0020
/
*
symbol
is
not
to
be
dead
stripped
*
/
#
define
N_DESC_DISCARDED
0x0020
/
*
symbol
is
discarded
*
/
#
define
N_WEAK_REF
0x0040
/
*
symbol
is
weak
referenced
*
/
#
define
N_WEAK_DEF
0x0080
/
*
coalesed
symbol
is
a
weak
definition
*
/
#
define
N_REF_TO_WEAK
0x0080
/
*
reference
to
a
weak
symbol
*
/
#
define
N_ARM_THUMB_DEF
0x0008
/
*
symbol
is
a
Thumb
function
(
ARM
)
*
/
#
define
N_SYMBOL_RESOLVER
0x0100
#
ifndef
__STRICT_BSD__
#
if
__cplusplus
extern
"
C
"
{
#
endif
extern
int
nlist
(
const
char
*
filename
struct
nlist
*
list
)
;
#
if
__cplusplus
}
#
endif
#
endif
#
endif
