#
include
"
processor
/
convert_old_arm64_context
.
h
"
#
include
<
string
.
h
>
namespace
google_breakpad
{
void
ConvertOldARM64Context
(
const
MDRawContextARM64_Old
&
old
MDRawContextARM64
*
context
)
{
context
-
>
context_flags
=
MD_CONTEXT_ARM64
;
if
(
old
.
context_flags
&
MD_CONTEXT_ARM64_INTEGER_OLD
)
{
context
-
>
context_flags
|
=
MD_CONTEXT_ARM64_INTEGER
|
MD_CONTEXT_ARM64_CONTROL
;
}
if
(
old
.
context_flags
&
MD_CONTEXT_ARM64_FLOATING_POINT_OLD
)
{
context
-
>
context_flags
|
=
MD_CONTEXT_ARM64_FLOATING_POINT
;
}
context
-
>
cpsr
=
old
.
cpsr
;
static_assert
(
sizeof
(
old
.
iregs
)
=
=
sizeof
(
context
-
>
iregs
)
"
iregs
size
mismatch
"
)
;
memcpy
(
context
-
>
iregs
old
.
iregs
sizeof
(
context
-
>
iregs
)
)
;
static_assert
(
sizeof
(
old
.
float_save
.
regs
)
=
=
sizeof
(
context
-
>
float_save
.
regs
)
"
float_save
.
regs
size
mismatch
"
)
;
memcpy
(
context
-
>
float_save
.
regs
old
.
float_save
.
regs
sizeof
(
context
-
>
float_save
.
regs
)
)
;
context
-
>
float_save
.
fpcr
=
old
.
float_save
.
fpcr
;
context
-
>
float_save
.
fpsr
=
old
.
float_save
.
fpsr
;
memset
(
context
-
>
bcr
0
sizeof
(
context
-
>
bcr
)
)
;
memset
(
context
-
>
bvr
0
sizeof
(
context
-
>
bvr
)
)
;
memset
(
context
-
>
wcr
0
sizeof
(
context
-
>
wcr
)
)
;
memset
(
context
-
>
wvr
0
sizeof
(
context
-
>
wvr
)
)
;
}
}
