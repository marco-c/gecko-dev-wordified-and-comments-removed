#
ifndef
PROCESSOR_LOGGING_H__
#
define
PROCESSOR_LOGGING_H__
#
include
<
iostream
>
#
include
<
string
>
#
include
"
common
/
using_std_string
.
h
"
#
include
"
google_breakpad
/
common
/
breakpad_types
.
h
"
#
ifdef
BP_LOGGING_INCLUDE
#
include
BP_LOGGING_INCLUDE
#
endif
#
ifndef
THIRD_PARTY_BREAKPAD_GOOGLE_GLUE_LOGGING_H_
namespace
base_logging
{
typedef
std
:
:
ostream
LogMessage
;
}
#
endif
namespace
google_breakpad
{
#
ifdef
SEVERITY_ERROR
#
undef
SEVERITY_ERROR
#
endif
#
ifdef
ERROR
#
undef
ERROR
#
endif
class
LogStream
{
public
:
enum
Severity
{
SEVERITY_INFO
SEVERITY_ERROR
}
;
LogStream
(
std
:
:
ostream
&
stream
Severity
severity
const
char
*
file
int
line
)
;
~
LogStream
(
)
;
template
<
typename
T
>
std
:
:
ostream
&
operator
<
<
(
const
T
&
t
)
{
return
stream_
<
<
t
;
}
private
:
std
:
:
ostream
&
stream_
;
explicit
LogStream
(
const
LogStream
&
that
)
;
void
operator
=
(
const
LogStream
&
that
)
;
}
;
class
LogMessageVoidify
{
public
:
LogMessageVoidify
(
)
{
}
void
operator
&
(
base_logging
:
:
LogMessage
&
)
{
}
}
;
string
HexString
(
uint32_t
number
)
;
string
HexString
(
uint64_t
number
)
;
string
HexString
(
int
number
)
;
int
ErrnoString
(
string
*
error_string
)
;
}
#
ifndef
BPLOG_INIT
#
define
BPLOG_INIT
(
pargc
pargv
)
#
endif
#
define
BPLOG_LAZY_STREAM
(
stream
condition
)
\
!
(
condition
)
?
(
void
)
0
:
\
google_breakpad
:
:
LogMessageVoidify
(
)
&
(
BPLOG_
#
#
stream
)
#
ifndef
BPLOG_MINIMUM_SEVERITY
#
define
BPLOG_MINIMUM_SEVERITY
SEVERITY_INFO
#
endif
#
define
BPLOG_LOG_IS_ON
(
severity
)
\
(
(
google_breakpad
:
:
LogStream
:
:
SEVERITY_
#
#
severity
)
>
=
\
(
google_breakpad
:
:
LogStream
:
:
BPLOG_MINIMUM_SEVERITY
)
)
#
ifndef
BPLOG
#
define
BPLOG
(
severity
)
BPLOG_LAZY_STREAM
(
severity
BPLOG_LOG_IS_ON
(
severity
)
)
#
endif
#
ifndef
BPLOG_INFO
#
ifndef
BPLOG_INFO_STREAM
#
define
BPLOG_INFO_STREAM
std
:
:
clog
#
endif
#
define
BPLOG_INFO
google_breakpad
:
:
LogStream
(
BPLOG_INFO_STREAM
\
google_breakpad
:
:
LogStream
:
:
SEVERITY_INFO
\
__FILE__
__LINE__
)
#
endif
#
ifndef
BPLOG_ERROR
#
ifndef
BPLOG_ERROR_STREAM
#
define
BPLOG_ERROR_STREAM
std
:
:
cerr
#
endif
#
define
BPLOG_ERROR
google_breakpad
:
:
LogStream
(
BPLOG_ERROR_STREAM
\
google_breakpad
:
:
LogStream
:
:
SEVERITY_ERROR
\
__FILE__
__LINE__
)
#
endif
#
define
BPLOG_IF
(
severity
condition
)
\
BPLOG_LAZY_STREAM
(
severity
(
(
condition
)
&
&
BPLOG_LOG_IS_ON
(
severity
)
)
)
#
endif
