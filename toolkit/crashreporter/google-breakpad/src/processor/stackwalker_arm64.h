#
ifndef
PROCESSOR_STACKWALKER_ARM64_H__
#
define
PROCESSOR_STACKWALKER_ARM64_H__
#
include
"
google_breakpad
/
common
/
breakpad_types
.
h
"
#
include
"
google_breakpad
/
common
/
minidump_format
.
h
"
#
include
"
google_breakpad
/
processor
/
stackwalker
.
h
"
namespace
google_breakpad
{
class
CodeModules
;
class
StackwalkerARM64
:
public
Stackwalker
{
public
:
StackwalkerARM64
(
const
SystemInfo
*
system_info
const
MDRawContextARM64
*
context
MemoryRegion
*
memory
const
CodeModules
*
modules
StackFrameSymbolizer
*
frame_symbolizer
)
;
void
SetContextFrameValidity
(
uint64_t
valid
)
{
context_frame_validity_
=
valid
;
}
private
:
virtual
StackFrame
*
GetContextFrame
(
)
;
virtual
StackFrame
*
GetCallerFrame
(
const
CallStack
*
stack
bool
stack_scan_allowed
)
;
StackFrameARM64
*
GetCallerByCFIFrameInfo
(
const
vector
<
StackFrame
*
>
&
frames
CFIFrameInfo
*
cfi_frame_info
)
;
StackFrameARM64
*
GetCallerByFramePointer
(
const
vector
<
StackFrame
*
>
&
frames
)
;
StackFrameARM64
*
GetCallerByStackScan
(
const
vector
<
StackFrame
*
>
&
frames
)
;
const
MDRawContextARM64
*
context_
;
uint64_t
context_frame_validity_
;
}
;
}
#
endif
