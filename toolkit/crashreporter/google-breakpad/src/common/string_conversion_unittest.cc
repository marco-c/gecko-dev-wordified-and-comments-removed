#
include
<
string
>
#
include
<
vector
>
#
include
"
breakpad_googletest_includes
.
h
"
#
include
"
common
/
string_conversion
.
h
"
using
google_breakpad
:
:
UTF8ToUTF16
;
using
google_breakpad
:
:
UTF8ToUTF16Char
;
using
google_breakpad
:
:
UTF16ToUTF8
;
using
std
:
:
vector
;
TEST
(
StringConversionTest
UTF8ToUTF16
)
{
const
char
in
[
]
=
"
a
c
"
;
vector
<
uint16_t
>
out
;
vector
<
uint16_t
>
exp
{
'
a
'
0xdf
'
c
'
0
}
;
UTF8ToUTF16
(
in
&
out
)
;
EXPECT_EQ
(
4u
out
.
size
(
)
)
;
EXPECT_EQ
(
exp
out
)
;
}
TEST
(
StringConversionTest
UTF8ToUTF16Char
)
{
const
char
in
[
]
=
"
a
"
;
uint16_t
out
[
3
]
=
{
0xff
0xff
0xff
}
;
EXPECT_EQ
(
1
UTF8ToUTF16Char
(
in
1
out
)
)
;
EXPECT_EQ
(
'
a
'
out
[
0
]
)
;
EXPECT_EQ
(
0
out
[
1
]
)
;
EXPECT_EQ
(
0xff
out
[
2
]
)
;
}
TEST
(
StringConversionTest
UTF16ToUTF8
)
{
vector
<
uint16_t
>
in
{
'
a
'
0xdf
'
c
'
0
}
;
EXPECT_EQ
(
"
a
c
"
UTF16ToUTF8
(
in
false
)
)
;
}
