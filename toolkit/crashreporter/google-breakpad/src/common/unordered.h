#
ifndef
COMMON_UNORDERED_H_
#
define
COMMON_UNORDERED_H_
#
if
defined
(
BP_USE_HASH_SET
)
#
include
<
hash_map
>
#
include
<
hash_set
>
#
include
"
util
/
hash
/
hash
.
h
"
template
<
class
T
class
U
class
H
=
__gnu_cxx
:
:
hash
<
T
>
>
struct
unordered_map
:
public
__gnu_cxx
:
:
hash_map
<
T
U
H
>
{
}
;
template
<
class
T
class
H
=
__gnu_cxx
:
:
hash
<
T
>
>
struct
unordered_set
:
public
__gnu_cxx
:
:
hash_set
<
T
H
>
{
}
;
#
elif
defined
(
_LIBCPP_VERSION
)
#
include
<
unordered_map
>
#
include
<
unordered_set
>
using
std
:
:
unordered_map
;
using
std
:
:
unordered_set
;
#
else
#
include
<
tr1
/
unordered_map
>
#
include
<
tr1
/
unordered_set
>
using
std
:
:
tr1
:
:
unordered_map
;
using
std
:
:
tr1
:
:
unordered_set
;
#
endif
#
endif
