#
ifndef
COMMON_LINUX_LIBCURL_WRAPPER_H_
#
define
COMMON_LINUX_LIBCURL_WRAPPER_H_
#
include
<
string
>
#
include
<
map
>
#
include
"
common
/
using_std_string
.
h
"
#
include
"
third_party
/
curl
/
curl
.
h
"
namespace
google_breakpad
{
class
LibcurlWrapper
{
public
:
LibcurlWrapper
(
)
;
virtual
~
LibcurlWrapper
(
)
;
virtual
bool
Init
(
)
;
virtual
bool
SetProxy
(
const
string
&
proxy_host
const
string
&
proxy_userpwd
)
;
virtual
bool
AddFile
(
const
string
&
upload_file_path
const
string
&
basename
)
;
virtual
bool
SendRequest
(
const
string
&
url
const
std
:
:
map
<
string
string
>
&
parameters
long
*
http_status_code
string
*
http_header_data
string
*
http_response_data
)
;
bool
SendGetRequest
(
const
string
&
url
long
*
http_status_code
string
*
http_header_data
string
*
http_response_data
)
;
bool
SendPutRequest
(
const
string
&
url
const
string
&
path
long
*
http_status_code
string
*
http_header_data
string
*
http_response_data
)
;
bool
SendSimplePostRequest
(
const
string
&
url
const
string
&
body
const
string
&
content_type
long
*
http_status_code
string
*
http_header_data
string
*
http_response_data
)
;
private
:
bool
SetFunctionPointers
(
)
;
bool
SendRequestInner
(
const
string
&
url
long
*
http_status_code
string
*
http_header_data
string
*
http_response_data
)
;
void
Reset
(
)
;
bool
CheckInit
(
)
;
bool
init_ok_
;
void
*
curl_lib_
;
string
last_curl_error_
;
CURL
*
curl_
;
CURL
*
(
*
easy_init_
)
(
void
)
;
struct
curl_httppost
*
formpost_
;
struct
curl_httppost
*
lastptr_
;
struct
curl_slist
*
headerlist_
;
CURLcode
(
*
easy_setopt_
)
(
CURL
*
CURLoption
.
.
.
)
;
CURLFORMcode
(
*
formadd_
)
(
struct
curl_httppost
*
*
struct
curl_httppost
*
*
.
.
.
)
;
struct
curl_slist
*
(
*
slist_append_
)
(
struct
curl_slist
*
const
char
*
)
;
void
(
*
slist_free_all_
)
(
struct
curl_slist
*
)
;
CURLcode
(
*
easy_perform_
)
(
CURL
*
)
;
const
char
*
(
*
easy_strerror_
)
(
CURLcode
)
;
void
(
*
easy_cleanup_
)
(
CURL
*
)
;
CURLcode
(
*
easy_getinfo_
)
(
CURL
*
CURLINFO
info
.
.
.
)
;
void
(
*
easy_reset_
)
(
CURL
*
)
;
void
(
*
formfree_
)
(
struct
curl_httppost
*
)
;
}
;
}
#
endif
