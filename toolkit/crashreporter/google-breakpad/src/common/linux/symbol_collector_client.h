#
ifndef
COMMON_LINUX_SYMBOL_COLLECTOR_CLIENT_H_
#
define
COMMON_LINUX_SYMBOL_COLLECTOR_CLIENT_H_
#
include
<
string
>
#
include
"
common
/
linux
/
libcurl_wrapper
.
h
"
#
include
"
common
/
using_std_string
.
h
"
namespace
google_breakpad
{
namespace
sym_upload
{
struct
UploadUrlResponse
{
string
upload_url
;
string
upload_key
;
}
;
enum
SymbolStatus
{
Found
Missing
Unknown
}
;
enum
CompleteUploadResult
{
Ok
DuplicateData
Error
}
;
class
SymbolCollectorClient
{
public
:
static
bool
CreateUploadUrl
(
LibcurlWrapper
*
libcurl_wrapper
const
string
&
api_url
const
string
&
api_key
UploadUrlResponse
*
uploadUrlResponse
)
;
static
CompleteUploadResult
CompleteUpload
(
LibcurlWrapper
*
libcurl_wrapper
const
string
&
api_url
const
string
&
api_key
const
string
&
upload_key
const
string
&
debug_file
const
string
&
debug_id
const
string
&
type
)
;
static
SymbolStatus
CheckSymbolStatus
(
LibcurlWrapper
*
libcurl_wrapper
const
string
&
api_url
const
string
&
api_key
const
string
&
debug_file
const
string
&
debug_id
)
;
}
;
}
}
#
endif
