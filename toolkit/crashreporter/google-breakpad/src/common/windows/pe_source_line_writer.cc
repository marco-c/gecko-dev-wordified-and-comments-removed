#
include
"
common
/
windows
/
pe_source_line_writer
.
h
"
#
include
"
common
/
windows
/
pe_util
.
h
"
namespace
google_breakpad
{
PESourceLineWriter
:
:
PESourceLineWriter
(
const
wstring
&
pe_file
)
:
pe_file_
(
pe_file
)
{
}
PESourceLineWriter
:
:
~
PESourceLineWriter
(
)
{
}
bool
PESourceLineWriter
:
:
WriteSymbols
(
FILE
*
symbol_file
)
{
PDBModuleInfo
module_info
;
if
(
!
GetModuleInfo
(
&
module_info
)
)
{
return
false
;
}
fprintf
(
symbol_file
"
MODULE
windows
%
ws
%
ws
%
ws
\
n
"
module_info
.
cpu
.
c_str
(
)
module_info
.
debug_identifier
.
c_str
(
)
module_info
.
debug_file
.
c_str
(
)
)
;
PEModuleInfo
pe_info
;
if
(
!
GetPEInfo
(
&
pe_info
)
)
{
return
false
;
}
fprintf
(
symbol_file
"
INFO
CODE_ID
%
ws
%
ws
\
n
"
pe_info
.
code_identifier
.
c_str
(
)
pe_info
.
code_file
.
c_str
(
)
)
;
if
(
!
PrintPEFrameData
(
pe_file_
symbol_file
)
)
{
return
false
;
}
return
true
;
}
bool
PESourceLineWriter
:
:
GetModuleInfo
(
PDBModuleInfo
*
info
)
{
return
ReadModuleInfo
(
pe_file_
info
)
;
}
bool
PESourceLineWriter
:
:
GetPEInfo
(
PEModuleInfo
*
info
)
{
return
ReadPEInfo
(
pe_file_
info
)
;
}
}
