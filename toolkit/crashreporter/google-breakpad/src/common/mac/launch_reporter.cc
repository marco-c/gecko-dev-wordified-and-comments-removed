#
include
<
stdio
.
h
>
#
include
<
sys
/
wait
.
h
>
#
include
<
unistd
.
h
>
namespace
google_breakpad
{
void
LaunchReporter
(
const
char
*
reporter_executable_path
const
char
*
config_file_path
)
{
const
char
*
argv
[
]
=
{
reporter_executable_path
config_file_path
NULL
}
;
pid_t
pid
=
fork
(
)
;
if
(
pid
=
=
-
1
)
{
perror
(
"
fork
"
)
;
fprintf
(
stderr
"
Failed
to
fork
reporter
process
\
n
"
)
;
return
;
}
if
(
pid
=
=
0
)
{
execv
(
argv
[
0
]
(
char
*
const
*
)
argv
)
;
perror
(
"
exec
"
)
;
fprintf
(
stderr
"
Failed
to
launch
reporter
process
from
path
%
s
\
n
"
reporter_executable_path
)
;
unlink
(
config_file_path
)
;
_exit
(
1
)
;
}
int
timeout_count
=
60
;
while
(
timeout_count
-
-
>
0
)
{
int
status
;
pid_t
result
=
waitpid
(
pid
&
status
WNOHANG
)
;
if
(
result
=
=
0
)
{
sleep
(
1
)
;
}
else
if
(
result
=
=
-
1
)
{
break
;
}
else
{
break
;
}
}
}
}
