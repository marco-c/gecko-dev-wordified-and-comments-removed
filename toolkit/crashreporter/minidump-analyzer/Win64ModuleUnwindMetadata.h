#
ifndef
Win64ModuleUnwindMetadata_h
#
define
Win64ModuleUnwindMetadata_h
#
if
XP_WIN
&
&
HAVE_64BIT_BUILD
#
include
<
functional
>
#
include
<
map
>
#
include
<
string
>
#
include
<
windows
.
h
>
#
include
<
winnt
.
h
>
#
include
<
imagehlp
.
h
>
namespace
CrashReporter
{
struct
UnwindCFI
{
uint32_t
beginAddress
;
uint32_t
size
;
uint32_t
stackSize
;
uint32_t
ripOffset
;
}
;
class
ModuleUnwindParser
{
PLOADED_IMAGE
mImg
;
std
:
:
string
mPath
;
std
:
:
map
<
DWORD
PIMAGE_RUNTIME_FUNCTION_ENTRY
>
mUnwindMap
;
std
:
:
map
<
DWORD
UnwindCFI
>
mCFIMap
;
bool
GenerateCFIForFunction
(
IMAGE_RUNTIME_FUNCTION_ENTRY
&
aFunc
UnwindCFI
&
aRet
)
;
void
*
RvaToVa
(
ULONG
aRva
)
;
public
:
explicit
ModuleUnwindParser
(
const
std
:
:
string
&
aPath
)
;
~
ModuleUnwindParser
(
)
;
bool
GetCFI
(
DWORD
aAddress
UnwindCFI
&
aRet
)
;
DWORD
GetAnyOffsetAddr
(
)
const
;
}
;
}
#
endif
#
endif
