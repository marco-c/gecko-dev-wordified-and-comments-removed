use
std
:
:
collections
:
:
HashMap
;
#
[
derive
(
Debug
)
]
pub
struct
TwoWay
<
K
V
>
{
forward
:
HashMap
<
K
V
>
reverse
:
HashMap
<
V
K
>
}
impl
<
K
V
>
Default
for
TwoWay
<
K
V
>
{
fn
default
(
)
-
>
Self
{
TwoWay
{
forward
:
Default
:
:
default
(
)
reverse
:
Default
:
:
default
(
)
}
}
}
impl
<
K
:
Eq
+
std
:
:
hash
:
:
Hash
+
Clone
V
:
Eq
+
std
:
:
hash
:
:
Hash
+
Clone
>
TwoWay
<
K
V
>
{
pub
fn
insert
(
&
mut
self
key
:
K
value
:
V
)
{
self
.
forward
.
insert
(
key
.
clone
(
)
value
.
clone
(
)
)
;
self
.
reverse
.
insert
(
value
key
)
;
}
pub
fn
forward
(
&
self
)
-
>
&
HashMap
<
K
V
>
{
&
self
.
forward
}
pub
fn
reverse
(
&
self
)
-
>
&
HashMap
<
V
K
>
{
&
self
.
reverse
}
}
