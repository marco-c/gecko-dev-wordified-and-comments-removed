#
ifndef
CLIENT_LINUX_DUMP_WRITER_COMMON_UCONTEXT_READER_H
#
define
CLIENT_LINUX_DUMP_WRITER_COMMON_UCONTEXT_READER_H
#
include
<
sys
/
ucontext
.
h
>
#
include
<
sys
/
user
.
h
>
#
include
"
linux
/
dump_writer_common
/
raw_context_cpu
.
h
"
#
include
"
common
/
memory
.
h
"
#
include
"
google_breakpad
/
common
/
minidump_format
.
h
"
namespace
google_breakpad
{
struct
UContextReader
{
static
uintptr_t
GetStackPointer
(
const
ucontext_t
*
uc
)
;
static
uintptr_t
GetInstructionPointer
(
const
ucontext_t
*
uc
)
;
#
if
defined
(
__i386__
)
|
|
defined
(
__x86_64
)
static
void
FillCPUContext
(
RawContextCPU
*
out
const
ucontext_t
*
uc
const
struct
_libc_fpstate
*
fp
)
;
#
elif
defined
(
__aarch64__
)
static
void
FillCPUContext
(
RawContextCPU
*
out
const
ucontext_t
*
uc
const
struct
fpsimd_context
*
fpregs
)
;
#
else
static
void
FillCPUContext
(
RawContextCPU
*
out
const
ucontext_t
*
uc
)
;
#
endif
}
;
}
#
endif
