#
ifndef
GOOGLE_BREAKPAD_CLIENT_MAC_CRASH_GENERATION_CRASH_GENERATION_CLIENT_H_
#
define
GOOGLE_BREAKPAD_CLIENT_MAC_CRASH_GENERATION_CRASH_GENERATION_CLIENT_H_
#
include
"
common
/
mac
/
MachIPC
.
h
"
#
include
<
os
/
lock
.
h
>
#
include
<
memory
>
#
include
<
string
>
namespace
google_breakpad
{
class
CrashGenerationClient
{
public
:
explicit
CrashGenerationClient
(
const
char
*
mach_port_name
)
:
sync_
(
OS_UNFAIR_LOCK_INIT
)
state_
(
State
:
:
Uninitialized
)
mach_port_name_
(
mach_port_name
)
sender_
(
)
{
AsynchronousInitialization
(
)
;
}
bool
RequestDumpForException
(
int
exception_type
int
exception_code
int64_t
exception_subcode
mach_port_t
crashing_thread
mach_port_t
crashing_task
)
;
bool
RequestDump
(
)
{
return
RequestDumpForException
(
0
0
0
MACH_PORT_NULL
mach_task_self
(
)
)
;
}
private
:
enum
State
{
Uninitialized
Initializing
Initialized
Failed
}
;
os_unfair_lock
sync_
;
State
state_
;
std
:
:
string
mach_port_name_
;
std
:
:
unique_ptr
<
MachPortSender
>
sender_
;
void
AsynchronousInitialization
(
)
;
static
void
*
AsynchronousInitializationThread
(
void
*
arg
)
;
void
Initialization
(
)
;
bool
WaitForInitialization
(
)
;
CrashGenerationClient
(
const
CrashGenerationClient
&
)
;
CrashGenerationClient
&
operator
=
(
const
CrashGenerationClient
&
)
;
}
;
}
#
endif
