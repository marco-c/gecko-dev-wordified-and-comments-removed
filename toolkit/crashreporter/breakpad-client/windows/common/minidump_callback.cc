#
include
"
minidump_callback
.
h
"
#
include
<
algorithm
>
#
include
<
cassert
>
namespace
google_breakpad
{
BOOL
CALLBACK
MinidumpWriteDumpCallback
(
PVOID
context
const
PMINIDUMP_CALLBACK_INPUT
callback_input
PMINIDUMP_CALLBACK_OUTPUT
callback_output
)
{
switch
(
callback_input
-
>
CallbackType
)
{
case
MemoryCallback
:
{
MinidumpCallbackContext
*
callback_context
=
reinterpret_cast
<
MinidumpCallbackContext
*
>
(
context
)
;
if
(
callback_context
-
>
iter
=
=
callback_context
-
>
end
)
return
FALSE
;
callback_output
-
>
MemoryBase
=
callback_context
-
>
iter
-
>
ptr
;
callback_output
-
>
MemorySize
=
callback_context
-
>
iter
-
>
length
;
callback_context
-
>
iter
+
+
;
return
TRUE
;
}
case
IncludeModuleCallback
:
case
ModuleCallback
:
return
TRUE
;
case
IncludeThreadCallback
:
case
ThreadCallback
:
return
TRUE
;
case
CancelCallback
:
callback_output
-
>
CheckCancel
=
FALSE
;
callback_output
-
>
Cancel
=
FALSE
;
return
TRUE
;
}
return
FALSE
;
}
}
