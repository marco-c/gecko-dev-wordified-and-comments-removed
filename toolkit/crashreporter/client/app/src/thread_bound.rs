pub
struct
ThreadBound
<
T
>
{
data
:
T
origin
:
std
:
:
thread
:
:
ThreadId
}
impl
<
T
:
Default
>
Default
for
ThreadBound
<
T
>
{
fn
default
(
)
-
>
Self
{
ThreadBound
:
:
new
(
Default
:
:
default
(
)
)
}
}
impl
<
T
>
ThreadBound
<
T
>
{
pub
fn
new
(
data
:
T
)
-
>
Self
{
ThreadBound
{
data
origin
:
std
:
:
thread
:
:
current
(
)
.
id
(
)
}
}
pub
fn
borrow
(
&
self
)
-
>
&
T
{
assert
!
(
std
:
:
thread
:
:
current
(
)
.
id
(
)
=
=
self
.
origin
"
unsafe
access
to
thread
-
bound
value
"
)
;
&
self
.
data
}
}
unsafe
impl
<
T
>
Send
for
ThreadBound
<
T
>
{
}
unsafe
impl
<
T
>
Sync
for
ThreadBound
<
T
>
{
}
