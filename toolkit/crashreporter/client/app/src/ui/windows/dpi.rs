use
windows_sys
:
:
Win32
:
:
{
Foundation
:
:
HWND
UI
:
:
{
HiDpi
:
:
GetDpiForWindow
WindowsAndMessaging
:
:
USER_DEFAULT_SCREEN_DPI
as
DEFAULT_DPI
}
}
;
thread_local
!
{
static
CONTEXT_DPI
:
std
:
:
cell
:
:
Cell
<
Dpi
>
=
Dpi
:
:
default
(
)
.
into
(
)
;
}
#
[
derive
(
Clone
Copy
Debug
)
]
pub
struct
Dpi
(
u32
)
;
impl
Default
for
Dpi
{
fn
default
(
)
-
>
Self
{
Dpi
(
DEFAULT_DPI
)
}
}
impl
Dpi
{
pub
fn
new
(
dpi
:
u32
)
-
>
Self
{
Dpi
(
dpi
)
}
pub
fn
for_window
(
hwnd
:
HWND
)
-
>
Self
{
Dpi
(
unsafe
{
GetDpiForWindow
(
hwnd
)
}
)
}
pub
fn
scale
(
&
self
value
:
u32
)
-
>
u32
{
if
self
.
0
=
=
DEFAULT_DPI
{
value
}
else
{
(
value
as
u64
*
self
.
0
as
u64
/
DEFAULT_DPI
as
u64
)
as
u32
}
}
pub
fn
with_context
<
F
R
>
(
&
self
f
:
F
)
-
>
R
where
F
:
FnOnce
(
)
-
>
R
{
let
old
=
CONTEXT_DPI
.
replace
(
*
self
)
;
let
ret
=
f
(
)
;
CONTEXT_DPI
.
set
(
old
)
;
ret
}
pub
fn
context_scale
(
value
:
u32
)
-
>
u32
{
CONTEXT_DPI
.
get
(
)
.
scale
(
value
)
}
}
