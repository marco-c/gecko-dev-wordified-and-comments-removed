use
minidump_analyzer
:
:
MinidumpAnalyzer
;
pub
fn
main
(
)
{
let
mut
args
=
std
:
:
env
:
:
args_os
(
)
.
skip
(
2
)
;
let
mut
minidump_path
=
None
;
let
mut
analyze_all_threads
=
false
;
while
let
Some
(
arg
)
=
args
.
next
(
)
{
if
arg
=
=
"
-
-
full
"
&
&
!
analyze_all_threads
{
analyze_all_threads
=
true
;
}
else
if
minidump_path
.
is_none
(
)
{
minidump_path
=
Some
(
arg
)
;
}
else
{
eprintln
!
(
"
ignoring
extraneous
argument
:
{
}
"
arg
.
to_string_lossy
(
)
)
;
}
}
let
Some
(
minidump_path
)
=
minidump_path
else
{
eprintln
!
(
"
expected
minidump
path
to
analyze
"
)
;
std
:
:
process
:
:
exit
(
1
)
;
}
;
if
let
Err
(
e
)
=
MinidumpAnalyzer
:
:
new
(
minidump_path
.
as_ref
(
)
)
.
all_threads
(
analyze_all_threads
)
.
analyze
(
)
{
eprintln
!
(
"
minidump
analyzer
failed
:
{
e
}
"
)
;
std
:
:
process
:
:
exit
(
1
)
;
}
}
