use
std
:
:
process
;
use
crate
:
:
{
errors
:
:
IPCError
IPCConnector
IPCListener
Pid
}
;
pub
struct
IPCChannel
{
listener
:
IPCListener
client_endpoint
:
IPCConnector
server_endpoint
:
IPCConnector
}
impl
IPCChannel
{
pub
fn
new
(
)
-
>
Result
<
IPCChannel
IPCError
>
{
let
pid
=
process
:
:
id
(
)
as
Pid
;
let
mut
listener
=
IPCListener
:
:
new
(
pid
)
?
;
listener
.
listen
(
)
?
;
let
client_endpoint
=
IPCConnector
:
:
connect
(
pid
)
?
;
let
server_endpoint
=
listener
.
accept
(
)
?
;
Ok
(
IPCChannel
{
listener
client_endpoint
server_endpoint
}
)
}
pub
fn
deconstruct
(
self
)
-
>
(
IPCListener
IPCConnector
IPCConnector
)
{
(
self
.
listener
self
.
server_endpoint
self
.
client_endpoint
)
}
}
