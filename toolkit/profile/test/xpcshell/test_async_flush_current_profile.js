add_task
(
{
skip_if
:
(
)
=
>
!
AppConstants
.
MOZ_SELECTABLE_PROFILES
}
async
(
)
=
>
{
let
hash
=
xreDirProvider
.
getInstallHash
(
)
;
let
defaultProfile
=
makeRandomProfileDir
(
"
default
"
)
;
let
otherProfile
=
makeRandomProfileDir
(
"
other
"
)
;
let
storeID
=
"
b0bacafe
"
;
let
profilesIni
=
{
profiles
:
[
{
name
:
"
default
"
path
:
defaultProfile
.
leafName
storeID
default
:
true
}
]
installs
:
{
[
hash
]
:
{
default
:
defaultProfile
.
leafName
}
}
}
;
writeProfilesIni
(
profilesIni
)
;
Services
.
prefs
.
setCharPref
(
"
toolkit
.
profiles
.
storeID
"
storeID
)
;
let
service
=
getProfileService
(
)
;
selectStartupProfile
(
)
;
let
overwriteProfilesIni
=
(
)
=
>
{
let
updated
=
{
profiles
:
[
{
name
:
"
default
"
path
:
otherProfile
.
leafName
storeID
default
:
true
}
]
installs
:
{
[
hash
]
:
{
default
:
otherProfile
.
leafName
}
}
}
;
writeProfilesIni
(
updated
)
;
let
profileData
=
readProfilesIni
(
)
;
Assert
.
equal
(
profileData
.
profiles
[
0
]
.
path
otherProfile
.
leafName
"
Default
path
should
now
be
the
unmanaged
profile
path
"
)
;
}
;
overwriteProfilesIni
(
)
;
let
asyncRewriteDefault
=
async
(
)
=
>
{
await
service
.
asyncFlushCurrentProfile
(
)
;
let
profileData
=
readProfilesIni
(
)
;
Assert
.
equal
(
profileData
.
profiles
[
0
]
.
path
defaultProfile
.
leafName
"
AsyncFlushCurrentProfile
should
have
updated
the
path
to
the
path
of
the
current
managed
profile
"
)
;
}
;
await
asyncRewriteDefault
(
)
;
overwriteProfilesIni
(
)
;
await
asyncRewriteDefault
(
)
;
}
)
;
