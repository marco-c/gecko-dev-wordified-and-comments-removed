add_task
(
async
(
)
=
>
{
let
dir
=
makeRandomProfileDir
(
"
default
"
)
;
let
profileData
=
{
options
:
{
startWithLastProfile
:
true
}
profiles
:
[
{
name
:
"
default
"
path
:
dir
.
leafName
default
:
true
}
]
}
;
writeProfilesIni
(
profileData
)
;
checkProfileService
(
profileData
)
;
let
lockFile
=
dir
.
clone
(
)
;
lockFile
.
append
(
"
parent
.
lock
"
)
;
try
{
lockFile
.
create
(
Ci
.
nsIFile
.
NORMAL_FILE_TYPE
0o777
)
;
}
catch
(
_e
)
{
}
await
IOUtils
.
touch
(
lockFile
.
path
)
;
writeCompatibilityIni
(
dir
undefined
undefined
{
downgrade
:
true
}
)
;
simulateWinPackageEnvironment
(
)
;
let
{
rootDir
profile
didCreate
}
=
selectStartupProfile
(
)
;
checkStartupReason
(
"
firstrun
-
claimed
-
default
"
)
;
Assert
.
ok
(
!
didCreate
"
Should
not
have
created
a
new
profile
.
"
)
;
Assert
.
ok
(
profile
"
Should
have
selected
an
existing
profile
.
"
)
;
Assert
.
ok
(
rootDir
.
equals
(
dir
)
"
Should
have
selected
our
root
dir
.
"
)
;
}
)
;
