"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
WebNavigationFrames
"
]
;
function
*
iterateDocShellTree
(
docShell
)
{
let
docShellsEnum
=
docShell
.
getDocShellEnumerator
(
docShell
.
typeContent
docShell
.
ENUMERATE_FORWARDS
)
;
while
(
docShellsEnum
.
hasMoreElements
(
)
)
{
yield
docShellsEnum
.
getNext
(
)
.
QueryInterface
(
Ci
.
nsIDocShell
)
;
}
}
function
getFrameId
(
window
)
{
if
(
window
.
parent
=
=
=
window
)
{
return
0
;
}
let
utils
=
window
.
windowUtils
;
return
utils
.
outerWindowID
;
}
function
getParentFrameId
(
window
)
{
if
(
window
.
parent
=
=
=
window
)
{
return
-
1
;
}
return
getFrameId
(
window
.
parent
)
;
}
function
getDocShellFrameId
(
docShell
)
{
if
(
!
docShell
)
{
return
undefined
;
}
return
getFrameId
(
docShell
.
domWindow
)
;
}
function
convertDocShellToFrameDetail
(
docShell
)
{
let
window
=
docShell
.
domWindow
;
return
{
frameId
:
getFrameId
(
window
)
parentFrameId
:
getParentFrameId
(
window
)
url
:
window
.
location
.
href
}
;
}
function
findDocShell
(
frameId
rootDocShell
)
{
for
(
let
docShell
of
iterateDocShellTree
(
rootDocShell
)
)
{
if
(
frameId
=
=
getFrameId
(
docShell
.
domWindow
)
)
{
return
docShell
;
}
}
return
null
;
}
var
WebNavigationFrames
=
{
iterateDocShellTree
findDocShell
getFrame
(
docShell
frameId
)
{
let
result
=
findDocShell
(
frameId
docShell
)
;
if
(
result
)
{
return
convertDocShellToFrameDetail
(
result
)
;
}
return
null
;
}
getFrameId
getParentFrameId
getAllFrames
(
docShell
)
{
return
Array
.
from
(
iterateDocShellTree
(
docShell
)
convertDocShellToFrameDetail
)
;
}
getDocShellFrameId
}
;
