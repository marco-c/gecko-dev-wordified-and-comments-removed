const
URI
=
<
div
>
content
<
/
div
>
<
iframe
style
=
"
margin
-
top
:
100000px
"
loading
=
"
lazy
"
>
<
/
iframe
>
;
add_task
(
async
function
test_finder_null_global
(
)
{
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
"
data
:
text
/
html
;
charset
=
utf
-
8
"
+
encodeURIComponent
(
URI
)
}
async
function
(
browser
)
{
let
finder
=
browser
.
finder
;
let
listener
=
{
onFindResult
(
)
{
ok
(
false
"
callback
wasn
'
t
replaced
"
)
;
}
}
;
finder
.
addResultListener
(
listener
)
;
function
waitForFind
(
)
{
return
new
Promise
(
resolve
=
>
{
listener
.
onFindResult
=
resolve
;
}
)
;
}
let
promiseFind
=
waitForFind
(
)
;
finder
.
fastFind
(
"
content
"
false
false
)
;
let
findResult
=
await
promiseFind
;
is
(
findResult
.
result
Ci
.
nsITypeAheadFind
.
FIND_FOUND
"
find
first
string
"
)
;
promiseFind
=
waitForFind
(
)
;
finder
.
findAgain
(
"
content
"
false
false
false
)
;
findResult
=
await
promiseFind
;
is
(
findResult
.
result
Ci
.
nsITypeAheadFind
.
FIND_WRAPPED
"
find
the
same
string
second
time
"
)
;
finder
.
removeResultListener
(
listener
)
;
}
)
;
}
)
;
