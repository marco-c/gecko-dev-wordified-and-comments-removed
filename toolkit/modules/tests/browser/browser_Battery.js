"
use
strict
"
;
var
{
GetBattery
Debugging
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Battery
.
jsm
"
{
}
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
this
)
;
function
test
(
)
{
waitForExplicitFinish
(
)
;
is
(
Debugging
.
fake
false
"
Battery
spoofing
is
initially
false
"
)
;
GetBattery
(
)
.
then
(
function
(
battery
)
{
for
(
let
k
of
[
"
charging
"
"
chargingTime
"
"
dischargingTime
"
"
level
"
]
)
{
let
backup
=
battery
[
k
]
;
try
{
battery
[
k
]
=
"
__magic__
"
;
}
catch
(
e
)
{
if
(
e
.
name
!
=
"
TypeError
"
)
throw
e
;
}
is
(
battery
[
k
]
backup
"
Setting
battery
"
+
k
+
"
preference
without
spoofing
enabled
should
fail
"
)
;
}
Debugging
.
fake
=
true
;
GetBattery
(
)
.
then
(
function
(
battery
)
{
battery
.
charging
=
true
;
battery
.
chargingTime
=
100
;
battery
.
level
=
0
.
5
;
ok
(
battery
.
charging
"
Test
for
charging
setter
"
)
;
is
(
battery
.
chargingTime
100
"
Test
for
chargingTime
setter
"
)
;
is
(
battery
.
level
0
.
5
"
Test
for
level
setter
"
)
;
battery
.
charging
=
false
;
battery
.
dischargingTime
=
50
;
battery
.
level
=
0
.
7
;
ok
(
!
battery
.
charging
"
Test
for
charging
setter
"
)
;
is
(
battery
.
dischargingTime
50
"
Test
for
dischargingTime
setter
"
)
;
is
(
battery
.
level
0
.
7
"
Test
for
level
setter
"
)
;
Debugging
.
fake
=
false
;
finish
(
)
;
}
)
;
}
)
;
}
