ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
BrowserUtils
.
jsm
"
)
;
add_task
(
async
function
test_getSelectionDetails_input
(
)
{
const
url
=
kFixtureBaseURL
+
"
file_getSelectionDetails_inputs
.
html
"
;
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
}
async
browser
=
>
{
await
ContentTask
.
spawn
(
browser
null
(
)
=
>
{
function
checkSelection
(
{
id
text
linkURL
}
)
{
content
.
document
.
getElementById
(
id
)
.
select
(
)
;
content
.
getSelection
(
)
.
removeAllRanges
(
)
;
let
info
=
BrowserUtils
.
getSelectionDetails
(
content
)
;
Assert
.
equal
(
text
info
.
text
)
;
Assert
.
ok
(
!
info
.
collapsed
)
;
Assert
.
equal
(
linkURL
info
.
linkURL
)
;
}
checkSelection
(
{
id
:
"
url
-
no
-
scheme
"
text
:
"
test
.
example
.
com
"
linkURL
:
"
http
:
/
/
test
.
example
.
com
/
"
}
)
;
checkSelection
(
{
id
:
"
url
-
with
-
scheme
"
text
:
"
https
:
/
/
test
.
example
.
com
"
linkURL
:
"
https
:
/
/
test
.
example
.
com
/
"
}
)
;
checkSelection
(
{
id
:
"
not
-
url
"
text
:
"
foo
.
bar
"
linkURL
:
null
}
)
;
checkSelection
(
{
id
:
"
not
-
url
-
number
"
text
:
"
3
.
5
"
linkURL
:
null
}
)
;
}
)
;
}
)
;
}
)
;
