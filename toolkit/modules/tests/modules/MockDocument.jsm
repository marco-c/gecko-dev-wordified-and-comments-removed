"
use
strict
"
;
this
.
EXPORTED_SYMBOLS
=
[
"
MockDocument
"
]
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
Cu
.
importGlobalProperties
(
[
"
URL
"
]
)
;
const
MockDocument
=
{
createTestDocument
(
aDocumentURL
aContent
=
"
<
form
>
"
aType
=
"
text
/
html
"
)
{
let
parser
=
Cc
[
"
mozilla
.
org
/
xmlextras
/
domparser
;
1
"
]
.
createInstance
(
Ci
.
nsIDOMParser
)
;
parser
.
init
(
)
;
let
parsedDoc
=
parser
.
parseFromString
(
aContent
aType
)
;
for
(
let
element
of
parsedDoc
.
forms
)
{
this
.
mockOwnerDocumentProperty
(
element
parsedDoc
aDocumentURL
)
;
}
return
parsedDoc
;
}
mockOwnerDocumentProperty
(
aElement
aDoc
aURL
)
{
let
document
=
new
Proxy
(
aDoc
{
get
(
target
property
receiver
)
{
if
(
property
=
=
"
location
"
)
{
return
new
URL
(
aURL
)
;
}
return
target
[
property
]
;
}
}
)
;
Object
.
defineProperty
(
aElement
"
ownerDocument
"
{
value
:
document
}
)
;
}
}
;
