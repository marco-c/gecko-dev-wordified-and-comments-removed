"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
LayoutUtils
"
]
;
var
LayoutUtils
=
{
getElementBoundingScreenRect
(
aElement
)
{
return
this
.
getElementBoundingRect
(
aElement
true
)
;
}
getElementBoundingRect
(
aElement
aInScreenCoords
)
{
let
rect
=
aElement
.
getBoundingClientRect
(
)
;
let
win
=
aElement
.
ownerGlobal
;
let
x
=
rect
.
left
;
let
y
=
rect
.
top
;
let
parentFrame
=
win
.
frameElement
;
while
(
parentFrame
)
{
win
=
parentFrame
.
ownerGlobal
;
let
cstyle
=
win
.
getComputedStyle
(
parentFrame
)
;
let
framerect
=
parentFrame
.
getBoundingClientRect
(
)
;
x
+
=
framerect
.
left
+
parseFloat
(
cstyle
.
borderLeftWidth
)
+
parseFloat
(
cstyle
.
paddingLeft
)
;
y
+
=
framerect
.
top
+
parseFloat
(
cstyle
.
borderTopWidth
)
+
parseFloat
(
cstyle
.
paddingTop
)
;
parentFrame
=
win
.
frameElement
;
}
rect
=
{
left
:
x
top
:
y
width
:
rect
.
width
height
:
rect
.
height
}
;
rect
=
win
.
windowUtils
.
transformRectLayoutToVisual
(
rect
.
left
rect
.
top
rect
.
width
rect
.
height
)
;
if
(
aInScreenCoords
)
{
rect
=
{
left
:
rect
.
left
+
win
.
mozInnerScreenX
top
:
rect
.
top
+
win
.
mozInnerScreenY
width
:
rect
.
width
height
:
rect
.
height
}
;
}
let
fullZoom
=
win
.
windowUtils
.
fullZoom
;
rect
=
{
left
:
rect
.
left
*
fullZoom
top
:
rect
.
top
*
fullZoom
width
:
rect
.
width
*
fullZoom
height
:
rect
.
height
*
fullZoom
}
;
return
rect
;
}
}
;
