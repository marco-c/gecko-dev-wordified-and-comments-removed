include
(
"
gkrust
-
features
.
mozbuild
"
)
RustLibrary
(
"
gkrust
"
gkrust_features
is_gkrust
=
True
)
for
feature
in
gkrust_features
:
if
feature
not
in
(
"
gkrust
-
shared
/
gecko_refcount_logging
"
"
gkrust
-
shared
/
glean_with_gecko
"
)
:
RUST_TEST_FEATURES
.
append
(
feature
)
RUST_TESTS
=
[
"
crashreporter
"
"
firefox
-
on
-
glean
"
"
l10nregistry
"
"
selectors
"
"
servo_arc
"
"
qcms
"
"
gkrust
"
]
RUST_TEST_FEATURES
.
append
(
"
crashreporter
/
mock
"
)
if
not
CONFIG
[
"
MOZ_CODE_COVERAGE
"
]
:
RUST_TESTS
+
=
[
"
stylo_tests
"
]
if
CONFIG
[
"
OS_TARGET
"
]
!
=
"
WINNT
"
:
RUST_TESTS
+
=
[
"
style
"
]
if
CONFIG
[
"
TARGET_CPU
"
]
!
=
"
x86
"
:
RUST_TESTS
+
=
[
"
malloc_size_of_derive
"
]
if
CONFIG
[
"
MOZ_BITS_DOWNLOAD
"
]
:
RUST_TESTS
+
=
[
"
bits_client
"
]
EXPORTS
+
=
[
"
/
third_party
/
rust
/
rure
/
include
/
rure
.
h
"
]
COMPILE_FLAGS
[
"
BASE_INCLUDES
"
]
=
[
]
HOST_COMPILE_FLAGS
[
"
BASE_INCLUDES
"
]
=
[
]
