#
ifndef
mozilla_recordreplay_ValueIndex_h
#
define
mozilla_recordreplay_ValueIndex_h
#
include
"
mozilla
/
Types
.
h
"
#
include
<
unordered_map
>
namespace
mozilla
{
namespace
recordreplay
{
class
ValueIndex
{
public
:
ValueIndex
(
)
:
mIndexCount
(
0
)
{
}
typedef
std
:
:
unordered_map
<
const
void
*
size_t
>
ValueToIndexMap
;
size_t
Insert
(
const
void
*
aValue
)
;
void
Remove
(
const
void
*
aValue
)
;
size_t
GetIndex
(
const
void
*
aValue
)
;
bool
MaybeGetIndex
(
const
void
*
aValue
size_t
*
aIndex
)
;
bool
Contains
(
const
void
*
aValue
)
;
const
void
*
GetValue
(
size_t
aIndex
)
;
bool
IsEmpty
(
)
;
const
ValueToIndexMap
&
GetValueToIndexMap
(
)
;
private
:
typedef
std
:
:
unordered_map
<
size_t
const
void
*
>
IndexToValueMap
;
ValueToIndexMap
mValueToIndex
;
IndexToValueMap
mIndexToValue
;
size_t
mIndexCount
;
}
;
}
}
#
endif
