#
ifndef
mozilla_recordreplay_ThreadSnapshot_h
#
define
mozilla_recordreplay_ThreadSnapshot_h
#
include
"
File
.
h
"
#
include
"
ProcessRewind
.
h
"
#
include
"
Thread
.
h
"
namespace
mozilla
{
namespace
recordreplay
{
bool
SaveThreadState
(
size_t
aId
int
*
aStackSeparator
)
;
struct
SavedThreadStack
{
void
*
mStackPointer
;
uint8_t
*
mStack
;
size_t
mStackBytes
;
jmp_buf
mRegisters
;
SavedThreadStack
(
)
{
PodZero
(
this
)
;
}
void
ReleaseContents
(
)
{
if
(
mStackBytes
)
{
DeallocateMemory
(
mStack
mStackBytes
MemoryKind
:
:
ThreadSnapshot
)
;
}
}
}
;
struct
AllSavedThreadStacks
{
SavedThreadStack
mStacks
[
MaxRecordedThreadId
]
;
void
ReleaseContents
(
)
{
for
(
SavedThreadStack
&
stack
:
mStacks
)
{
stack
.
ReleaseContents
(
)
;
}
}
}
;
bool
SaveAllThreads
(
AllSavedThreadStacks
&
aSaved
)
;
void
RestoreAllThreads
(
const
AllSavedThreadStacks
&
aSaved
)
;
void
WaitForIdleThreadsToRestoreTheirStacks
(
)
;
bool
ShouldRestoreThreadStack
(
size_t
aId
)
;
void
RestoreThreadStack
(
size_t
aId
)
;
void
InitializeThreadSnapshots
(
size_t
aNumThreads
)
;
}
}
#
endif
