#
ifndef
mozilla_recordreplay_ChildInternal_h
#
define
mozilla_recordreplay_ChildInternal_h
#
include
"
ChildIPC
.
h
"
#
include
"
JSControl
.
h
"
#
include
"
Monitor
.
h
"
namespace
mozilla
{
namespace
recordreplay
{
namespace
navigation
{
bool
IsInitialized
(
)
;
js
:
:
ExecutionPoint
GetRecordingEndpoint
(
)
;
void
SetRecordingEndpoint
(
size_t
aIndex
const
js
:
:
ExecutionPoint
&
aEndpoint
)
;
void
AlwaysSaveTemporaryCheckpoints
(
)
;
void
DebuggerRequest
(
js
:
:
CharBuffer
*
aBuffer
)
;
void
SetBreakpoint
(
size_t
aId
const
js
:
:
BreakpointPosition
&
aPosition
)
;
void
Resume
(
bool
aForward
)
;
void
RestoreCheckpoint
(
size_t
aId
)
;
void
RunToPoint
(
const
js
:
:
ExecutionPoint
&
aPoint
)
;
bool
MaybeDivergeFromRecording
(
)
;
void
PositionHit
(
const
js
:
:
BreakpointPosition
&
aPosition
)
;
js
:
:
ExecutionPoint
CurrentExecutionPoint
(
const
js
:
:
BreakpointPosition
&
aPosition
)
;
js
:
:
ExecutionPoint
TimeWarpTargetExecutionPoint
(
ProgressCounter
aTarget
)
;
void
BeforeCheckpoint
(
)
;
void
AfterCheckpoint
(
const
CheckpointId
&
aCheckpoint
)
;
}
namespace
child
{
void
RespondToRequest
(
const
js
:
:
CharBuffer
&
aBuffer
)
;
void
HitCheckpoint
(
size_t
aId
bool
aRecordingEndpoint
)
;
void
HitBreakpoint
(
bool
aRecordingEndpoint
const
uint32_t
*
aBreakpoints
size_t
aNumBreakpoints
)
;
extern
Monitor
*
gMonitor
;
}
}
}
#
endif
