#
ifndef
mozilla_recordreplay_JSControl_h
#
define
mozilla_recordreplay_JSControl_h
#
include
"
jsapi
.
h
"
#
include
"
Channel
.
h
"
#
include
"
InfallibleVector
.
h
"
#
include
"
ProcessRewind
.
h
"
#
include
"
mozilla
/
DefineEnum
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
{
namespace
recordreplay
{
struct
Message
;
namespace
parent
{
class
ChildProcessInfo
;
}
namespace
js
{
typedef
InfallibleVector
<
char16_t
>
CharBuffer
;
void
SetupDevtoolsSandbox
(
)
;
bool
IsInitialized
(
)
;
void
ManifestStart
(
const
CharBuffer
&
aContents
)
;
void
SetupMiddlemanControl
(
const
Maybe
<
size_t
>
&
aRecordingChildId
)
;
void
ForwardManifestFinished
(
parent
:
:
ChildProcessInfo
*
aChild
const
ManifestFinishedMessage
&
aMsg
)
;
void
ForwardUnhandledDivergence
(
parent
:
:
ChildProcessInfo
*
aChild
const
UnhandledDivergenceMessage
&
aMsg
)
;
void
ForwardPingResponse
(
parent
:
:
ChildProcessInfo
*
aChild
const
PingResponseMessage
&
aMsg
)
;
void
BeforeSaveRecording
(
)
;
void
AfterSaveRecording
(
)
;
void
HitCheckpoint
(
size_t
aCheckpoint
)
;
bool
RecoverFromCrash
(
size_t
aRootId
size_t
aForkId
)
;
void
BeginIdleTime
(
)
;
void
EndIdleTime
(
)
;
}
}
}
#
endif
