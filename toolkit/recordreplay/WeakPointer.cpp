#
include
"
WeakPointer
.
h
"
#
include
"
mozilla
/
dom
/
ScriptSettings
.
h
"
#
include
"
mozilla
/
StaticMutex
.
h
"
#
include
"
jsapi
.
h
"
#
include
<
unordered_map
>
namespace
mozilla
{
namespace
recordreplay
{
typedef
std
:
:
unordered_map
<
const
void
*
UniquePtr
<
JS
:
:
PersistentRootedObject
>
>
WeakPointerRootMap
;
static
WeakPointerRootMap
*
gWeakPointerRootMap
;
static
StaticMutexNotRecorded
gWeakPointerMutex
;
static
UniquePtr
<
JS
:
:
PersistentRootedObject
>
NewRoot
(
JSObject
*
aJSObj
)
{
MOZ_RELEASE_ASSERT
(
aJSObj
)
;
JSContext
*
cx
=
dom
:
:
danger
:
:
GetJSContext
(
)
;
UniquePtr
<
JS
:
:
PersistentRootedObject
>
root
=
MakeUnique
<
JS
:
:
PersistentRootedObject
>
(
cx
)
;
*
root
=
aJSObj
;
return
root
;
}
extern
"
C
"
{
MOZ_EXPORT
void
RecordReplayInterface_SetWeakPointerJSRoot
(
const
void
*
aPtr
JSObject
*
aJSObj
)
{
MOZ_RELEASE_ASSERT
(
IsReplaying
(
)
)
;
StaticMutexAutoLock
lock
(
gWeakPointerMutex
)
;
auto
iter
=
gWeakPointerRootMap
-
>
find
(
aPtr
)
;
if
(
iter
!
=
gWeakPointerRootMap
-
>
end
(
)
)
{
if
(
aJSObj
)
{
*
iter
-
>
second
=
aJSObj
;
}
else
{
gWeakPointerRootMap
-
>
erase
(
aPtr
)
;
}
}
else
if
(
aJSObj
)
{
gWeakPointerRootMap
-
>
insert
(
WeakPointerRootMap
:
:
value_type
(
aPtr
NewRoot
(
aJSObj
)
)
)
;
}
}
}
void
InitializeWeakPointers
(
)
{
gWeakPointerRootMap
=
new
WeakPointerRootMap
(
)
;
}
}
}
