#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIFile
.
h
"
#
include
"
nsDependentString
.
h
"
#
include
"
prenv
.
h
"
#
ifdef
XP_WIN
#
include
<
windows
.
h
>
#
endif
namespace
mozilla
{
already_AddRefed
<
nsIFile
>
GetFileFromEnv
(
const
char
*
name
)
{
nsresult
rv
;
nsCOMPtr
<
nsIFile
>
file
;
#
ifdef
XP_WIN
WCHAR
path
[
_MAX_PATH
]
;
if
(
!
GetEnvironmentVariableW
(
NS_ConvertASCIItoUTF16
(
name
)
.
get
(
)
path
_MAX_PATH
)
)
return
nullptr
;
rv
=
NS_NewLocalFile
(
nsDependentString
(
path
)
getter_AddRefs
(
file
)
)
;
if
(
NS_FAILED
(
rv
)
)
return
nullptr
;
return
file
.
forget
(
)
;
#
else
const
char
*
arg
=
PR_GetEnv
(
name
)
;
if
(
!
arg
|
|
!
*
arg
)
{
return
nullptr
;
}
rv
=
NS_NewNativeLocalFile
(
nsDependentCString
(
arg
)
getter_AddRefs
(
file
)
)
;
if
(
NS_FAILED
(
rv
)
)
{
return
nullptr
;
}
return
file
.
forget
(
)
;
#
endif
}
}
