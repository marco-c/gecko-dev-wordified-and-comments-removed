#
include
"
ModuleVersionInfo_windows
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
namespace
mozilla
{
static
bool
QueryStringValue
(
const
void
*
aBlock
DWORD
aTranslation
const
wchar_t
*
aFieldName
nsAString
&
aResult
)
{
nsAutoString
path
;
path
.
AppendPrintf
(
"
\
\
StringFileInfo
\
\
%
02X
%
02X
%
02X
%
02X
\
\
%
S
"
(
aTranslation
&
0x0000ff00
)
>
>
8
(
aTranslation
&
0x000000ff
)
(
aTranslation
&
0xff000000
)
>
>
24
(
aTranslation
&
0x00ff0000
)
>
>
16
aFieldName
)
;
wchar_t
*
lpBuffer
=
nullptr
;
UINT
len
=
0
;
if
(
!
:
:
VerQueryValueW
(
aBlock
path
.
get
(
)
(
PVOID
*
)
&
lpBuffer
&
len
)
)
{
return
false
;
}
aResult
.
Assign
(
lpBuffer
(
size_t
)
len
-
1
)
;
return
true
;
}
static
bool
QueryStringValue
(
const
void
*
aBlock
const
DWORD
*
aTranslations
size_t
aNumTrans
const
wchar_t
*
aFieldName
nsAString
&
aResult
)
{
static
const
DWORD
kPreferredTranslation
=
0x04b00409
;
if
(
QueryStringValue
(
aBlock
kPreferredTranslation
aFieldName
aResult
)
)
{
return
true
;
}
for
(
size_t
i
=
0
;
i
<
aNumTrans
;
+
+
i
)
{
if
(
QueryStringValue
(
aBlock
aTranslations
[
i
]
aFieldName
aResult
)
)
{
return
true
;
}
}
return
false
;
}
bool
ModuleVersionInfo
:
:
GetFromImage
(
const
nsAString
&
aPath
)
{
nsString
path
(
aPath
)
;
DWORD
infoSize
=
GetFileVersionInfoSizeW
(
path
.
get
(
)
nullptr
)
;
if
(
!
infoSize
)
{
return
false
;
}
auto
verInfo
=
MakeUnique
<
BYTE
[
]
>
(
infoSize
)
;
if
(
!
:
:
GetFileVersionInfoW
(
path
.
get
(
)
0
infoSize
verInfo
.
get
(
)
)
)
{
return
false
;
}
VS_FIXEDFILEINFO
*
vInfo
=
nullptr
;
UINT
vInfoLen
=
0
;
if
(
:
:
VerQueryValueW
(
verInfo
.
get
(
)
L
"
\
\
"
(
LPVOID
*
)
&
vInfo
&
vInfoLen
)
)
{
mFileVersion
=
VersionNumber
(
vInfo
-
>
dwFileVersionMS
vInfo
-
>
dwFileVersionLS
)
;
mProductVersion
=
VersionNumber
(
vInfo
-
>
dwProductVersionMS
vInfo
-
>
dwProductVersionLS
)
;
}
DWORD
*
pTrans
=
nullptr
;
UINT
cbTrans
=
0
;
if
(
:
:
VerQueryValueW
(
verInfo
.
get
(
)
L
"
\
\
VarFileInfo
\
\
Translation
"
(
PVOID
*
)
&
pTrans
&
cbTrans
)
)
{
size_t
numTrans
=
cbTrans
/
sizeof
(
DWORD
)
;
QueryStringValue
(
verInfo
.
get
(
)
pTrans
numTrans
L
"
CompanyName
"
mCompanyName
)
;
QueryStringValue
(
verInfo
.
get
(
)
pTrans
numTrans
L
"
ProductName
"
mProductName
)
;
QueryStringValue
(
verInfo
.
get
(
)
pTrans
numTrans
L
"
LegalCopyright
"
mLegalCopyright
)
;
QueryStringValue
(
verInfo
.
get
(
)
pTrans
numTrans
L
"
FileDescription
"
mFileDescription
)
;
}
return
true
;
}
}
