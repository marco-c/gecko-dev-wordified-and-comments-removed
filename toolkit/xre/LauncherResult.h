#
ifndef
mozilla_LauncherResult_h
#
define
mozilla_LauncherResult_h
#
include
"
mozilla
/
Result
.
h
"
#
include
"
mozilla
/
WinHeaderOnlyUtils
.
h
"
namespace
mozilla
{
#
if
defined
(
MOZILLA_INTERNAL_API
)
template
<
typename
T
>
using
LauncherResult
=
WindowsErrorResult
<
T
>
;
#
else
struct
LauncherError
{
LauncherError
(
const
char
*
aFile
int
aLine
WindowsError
aWin32Error
)
:
mFile
(
aFile
)
mLine
(
aLine
)
mError
(
aWin32Error
)
{
}
const
char
*
mFile
;
int
mLine
;
WindowsError
mError
;
bool
operator
=
=
(
const
LauncherError
&
aOther
)
const
{
return
mError
=
=
aOther
.
mError
;
}
bool
operator
!
=
(
const
LauncherError
&
aOther
)
const
{
return
mError
!
=
aOther
.
mError
;
}
bool
operator
=
=
(
const
WindowsError
&
aOther
)
const
{
return
mError
=
=
aOther
;
}
bool
operator
!
=
(
const
WindowsError
&
aOther
)
const
{
return
mError
!
=
aOther
;
}
}
;
template
<
typename
T
>
using
LauncherResult
=
Result
<
T
LauncherError
>
;
#
endif
using
LauncherVoidResult
=
LauncherResult
<
Ok
>
;
}
#
if
defined
(
MOZILLA_INTERNAL_API
)
#
define
LAUNCHER_ERROR_GENERIC
(
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
WindowsError
:
:
CreateGeneric
(
)
)
#
define
LAUNCHER_ERROR_FROM_WIN32
(
err
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
WindowsError
:
:
FromWin32Error
(
err
)
)
#
define
LAUNCHER_ERROR_FROM_LAST
(
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
WindowsError
:
:
FromLastError
(
)
)
#
define
LAUNCHER_ERROR_FROM_NTSTATUS
(
ntstatus
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
WindowsError
:
:
FromNtStatus
(
ntstatus
)
)
#
define
LAUNCHER_ERROR_FROM_HRESULT
(
hresult
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
WindowsError
:
:
FromHResult
(
hresult
)
)
#
define
LAUNCHER_ERROR_FROM_MOZ_WINDOWS_ERROR
(
err
)
:
:
mozilla
:
:
Err
(
err
)
#
else
#
define
LAUNCHER_ERROR_GENERIC
(
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
LauncherError
(
\
__FILE__
__LINE__
:
:
mozilla
:
:
WindowsError
:
:
CreateGeneric
(
)
)
)
#
define
LAUNCHER_ERROR_FROM_WIN32
(
err
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
LauncherError
(
\
__FILE__
__LINE__
:
:
mozilla
:
:
WindowsError
:
:
FromWin32Error
(
err
)
)
)
#
define
LAUNCHER_ERROR_FROM_LAST
(
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
LauncherError
(
\
__FILE__
__LINE__
:
:
mozilla
:
:
WindowsError
:
:
FromLastError
(
)
)
)
#
define
LAUNCHER_ERROR_FROM_NTSTATUS
(
ntstatus
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
LauncherError
(
\
__FILE__
__LINE__
:
:
mozilla
:
:
WindowsError
:
:
FromNtStatus
(
ntstatus
)
)
)
#
define
LAUNCHER_ERROR_FROM_HRESULT
(
hresult
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
LauncherError
(
\
__FILE__
__LINE__
:
:
mozilla
:
:
WindowsError
:
:
FromHResult
(
hresult
)
)
)
#
define
LAUNCHER_ERROR_FROM_MOZ_WINDOWS_ERROR
(
err
)
\
:
:
mozilla
:
:
Err
(
:
:
mozilla
:
:
LauncherError
(
__FILE__
__LINE__
err
)
)
#
endif
#
define
LAUNCHER_ERROR_FROM_RESULT
(
result
)
:
:
mozilla
:
:
Err
(
result
.
unwrapErr
(
)
)
#
endif
