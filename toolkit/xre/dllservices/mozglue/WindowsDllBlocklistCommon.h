#
ifndef
mozilla_WindowsDllBlocklistCommon_h
#
define
mozilla_WindowsDllBlocklistCommon_h
#
include
"
mozilla
/
ArrayUtils
.
h
"
#
include
"
mozilla
/
WindowsDllBlocklistInfo
.
h
"
#
if
!
defined
(
DLL_BLOCKLIST_STRING_TYPE
)
#
error
"
You
must
define
DLL_BLOCKLIST_STRING_TYPE
"
#
endif
#
define
DLL_BLOCKLIST_DEFINITIONS_BEGIN_NAMED
(
name
)
\
using
DllBlockInfo
=
mozilla
:
:
DllBlockInfoT
<
DLL_BLOCKLIST_STRING_TYPE
>
;
\
static
const
DllBlockInfo
name
[
]
=
{
#
define
DLL_BLOCKLIST_DEFINITIONS_BEGIN
\
DLL_BLOCKLIST_DEFINITIONS_BEGIN_NAMED
(
gWindowsDllBlocklist
)
#
define
DLL_BLOCKLIST_DEFINITIONS_END
\
{
}
\
}
\
;
#
define
DECLARE_POINTER_TO_FIRST_DLL_BLOCKLIST_ENTRY_FOR
(
name
list
)
\
const
DllBlockInfo
*
name
=
&
list
[
0
]
#
define
DECLARE_POINTER_TO_FIRST_DLL_BLOCKLIST_ENTRY
(
name
)
\
DECLARE_POINTER_TO_FIRST_DLL_BLOCKLIST_ENTRY_FOR
(
name
gWindowsDllBlocklist
)
#
define
DECLARE_POINTER_TO_LAST_DLL_BLOCKLIST_ENTRY_FOR
(
name
list
)
\
const
DllBlockInfo
*
name
=
&
list
[
std
:
:
size
(
list
)
-
1
]
#
define
DECLARE_POINTER_TO_LAST_DLL_BLOCKLIST_ENTRY
(
name
)
\
DECLARE_POINTER_TO_LAST_DLL_BLOCKLIST_ENTRY_FOR
(
name
gWindowsDllBlocklist
)
#
define
DECLARE_DLL_BLOCKLIST_NUM_ENTRIES_FOR
(
name
list
)
\
const
size_t
name
=
std
:
:
size
(
list
)
-
1
#
define
DECLARE_DLL_BLOCKLIST_NUM_ENTRIES
(
name
)
\
DECLARE_DLL_BLOCKLIST_NUM_ENTRIES_FOR
(
name
gWindowsDllBlocklist
)
#
endif
