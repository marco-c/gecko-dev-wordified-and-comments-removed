#
include
"
CacheNtDllThunk
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
Span
.
h
"
#
include
"
mozilla
/
StaticPtr
.
h
"
namespace
mozilla
{
static
StaticAutoPtr
<
Buffer
<
IMAGE_THUNK_DATA
>
>
sCachedNtDllThunk
;
static
void
CacheNtDllThunk
(
)
{
if
(
sCachedNtDllThunk
)
{
return
;
}
do
{
nt
:
:
PEHeaders
ourExeImage
(
:
:
GetModuleHandleW
(
nullptr
)
)
;
if
(
!
ourExeImage
)
{
break
;
}
nt
:
:
PEHeaders
ntdllImage
(
:
:
GetModuleHandleW
(
L
"
ntdll
.
dll
"
)
)
;
if
(
!
ntdllImage
)
{
break
;
}
Maybe
<
Range
<
const
uint8_t
>
>
ntdllBoundaries
=
ntdllImage
.
GetBounds
(
)
;
if
(
!
ntdllBoundaries
)
{
break
;
}
Maybe
<
Span
<
IMAGE_THUNK_DATA
>
>
maybeNtDllThunks
=
ourExeImage
.
GetIATThunksForModule
(
"
ntdll
.
dll
"
ntdllBoundaries
.
ptr
(
)
)
;
if
(
maybeNtDllThunks
.
isNothing
(
)
)
{
break
;
}
sCachedNtDllThunk
=
new
Buffer
<
IMAGE_THUNK_DATA
>
(
maybeNtDllThunks
.
value
(
)
)
;
return
;
}
while
(
false
)
;
sCachedNtDllThunk
=
new
Buffer
<
IMAGE_THUNK_DATA
>
(
)
;
}
static
Buffer
<
IMAGE_THUNK_DATA
>
*
GetCachedNtDllThunk
(
)
{
return
sCachedNtDllThunk
;
}
}
