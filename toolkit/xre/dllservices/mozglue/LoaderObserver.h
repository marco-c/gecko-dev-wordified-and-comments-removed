#
ifndef
mozilla_glue_LoaderObserver_h
#
define
mozilla_glue_LoaderObserver_h
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
LoaderAPIInterfaces
.
h
"
#
include
"
mozilla
/
glue
/
WindowsDllServices
.
h
"
#
include
"
mozilla
/
glue
/
WinUtils
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
namespace
mozilla
{
namespace
glue
{
class
MOZ_ONLY_USED_TO_AVOID_STATIC_CONSTRUCTORS
LoaderObserver
final
:
public
nt
:
:
LoaderObserver
{
public
:
constexpr
LoaderObserver
(
)
:
mModuleLoads
(
nullptr
)
mEnabled
(
true
)
{
}
void
OnBeginDllLoad
(
void
*
*
aContext
PCUNICODE_STRING
aPreliminaryDllName
)
final
;
bool
SubstituteForLSP
(
PCUNICODE_STRING
aLspLeafName
PHANDLE
aOutHandle
)
final
;
void
OnEndDllLoad
(
void
*
aContext
NTSTATUS
aNtStatus
ModuleLoadInfo
&
&
aModuleLoadInfo
)
final
;
void
Forward
(
nt
:
:
LoaderObserver
*
aNext
)
final
;
void
OnForward
(
ModuleLoadInfoVec
&
&
aInfo
)
final
;
void
Forward
(
mozilla
:
:
glue
:
:
detail
:
:
DllServicesBase
*
aSvc
)
;
void
Disable
(
)
;
private
:
Win32SRWLock
mLock
;
ModuleLoadInfoVec
*
mModuleLoads
;
bool
mEnabled
;
}
;
}
}
#
endif
