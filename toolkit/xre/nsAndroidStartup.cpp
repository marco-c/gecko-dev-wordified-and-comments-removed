#
include
<
android
/
log
.
h
>
#
include
<
jni
.
h
>
#
include
<
stdlib
.
h
>
#
include
<
string
.
h
>
#
include
<
pthread
.
h
>
#
include
"
mozilla
/
jni
/
Utils
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsIFile
.
h
"
#
include
"
nsAppRunner
.
h
"
#
include
"
APKOpen
.
h
"
#
include
"
nsExceptionHandler
.
h
"
#
define
LOG
(
args
.
.
.
)
__android_log_print
(
ANDROID_LOG_INFO
MOZ_APP_NAME
args
)
using
namespace
mozilla
;
extern
"
C
"
NS_EXPORT
void
GeckoStart
(
JNIEnv
*
env
char
*
*
argv
int
argc
const
StaticXREAppData
&
aAppData
)
{
mozilla
:
:
jni
:
:
SetGeckoThreadEnv
(
env
)
;
#
ifdef
MOZ_CRASHREPORTER
const
struct
mapping_info
*
info
=
getLibraryMapping
(
)
;
while
(
info
-
>
name
)
{
CrashReporter
:
:
AddLibraryMapping
(
info
-
>
name
info
-
>
base
info
-
>
len
info
-
>
offset
)
;
info
+
+
;
}
#
endif
if
(
!
argv
)
{
LOG
(
"
Failed
to
get
arguments
for
GeckoStart
\
n
"
)
;
return
;
}
XREAppData
appData
;
appData
=
aAppData
;
int
result
=
XRE_main
(
argc
argv
appData
)
;
if
(
result
)
LOG
(
"
XRE_main
returned
%
d
"
result
)
;
}
