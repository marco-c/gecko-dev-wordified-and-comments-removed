#
include
"
nsCommandLineServiceMac
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
MacApplicationDelegate
.
h
"
#
include
<
cstring
>
#
include
<
Cocoa
/
Cocoa
.
h
>
namespace
CommandLineServiceMac
{
static
const
int
kArgsGrowSize
=
20
;
static
char
*
*
sArgs
=
nullptr
;
static
int
sArgsAllocated
=
0
;
static
int
sArgsUsed
=
0
;
void
AddToCommandLine
(
const
char
*
inArgText
)
{
if
(
sArgsUsed
>
=
sArgsAllocated
-
1
)
{
char
*
*
temp
=
static_cast
<
char
*
*
>
(
realloc
(
sArgs
(
sArgsAllocated
+
kArgsGrowSize
)
*
sizeof
(
char
*
)
)
)
;
if
(
!
temp
)
return
;
sArgs
=
temp
;
sArgsAllocated
+
=
kArgsGrowSize
;
}
char
*
temp2
=
strdup
(
inArgText
)
;
if
(
!
temp2
)
return
;
sArgs
[
sArgsUsed
+
+
]
=
temp2
;
sArgs
[
sArgsUsed
]
=
nullptr
;
return
;
}
void
SetupMacCommandLine
(
int
&
argc
char
*
*
&
argv
bool
forRestart
)
{
sArgs
=
static_cast
<
char
*
*
>
(
malloc
(
kArgsGrowSize
*
sizeof
(
char
*
)
)
)
;
if
(
!
sArgs
)
return
;
sArgsAllocated
=
kArgsGrowSize
;
sArgs
[
0
]
=
nullptr
;
sArgsUsed
=
0
;
for
(
int
arg
=
0
;
arg
<
argc
;
arg
+
+
)
{
char
*
flag
=
argv
[
arg
]
;
if
(
strncmp
(
flag
"
-
psn_
"
5
)
!
=
0
&
&
strncmp
(
flag
"
-
foreground
"
11
)
!
=
0
)
AddToCommandLine
(
flag
)
;
}
nsTArray
<
nsCString
>
startupURLs
=
TakeStartupURLs
(
)
;
for
(
const
nsCString
&
url
:
startupURLs
)
{
AddToCommandLine
(
"
-
url
"
)
;
AddToCommandLine
(
url
.
get
(
)
)
;
}
if
(
forRestart
)
{
NSRunningApplication
*
frontApp
=
[
[
NSWorkspace
sharedWorkspace
]
frontmostApplication
]
;
if
(
[
frontApp
isEqual
:
[
NSRunningApplication
currentApplication
]
]
)
{
AddToCommandLine
(
"
-
foreground
"
)
;
}
}
free
(
argv
)
;
argc
=
sArgsUsed
;
argv
=
sArgs
;
}
}
