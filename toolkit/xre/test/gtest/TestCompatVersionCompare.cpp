#
include
"
gtest
/
gtest
.
h
"
#
include
"
nsAppRunner
.
h
"
#
include
"
nsString
.
h
"
void
CheckExpectedResult
(
const
char
*
aOldAppVersion
const
char
*
aOldAppID
const
char
*
aOldToolkitID
const
char
*
aNewAppVersion
const
char
*
aNewAppID
const
char
*
aNewToolkitID
bool
aExpectedSame
bool
aExpectedDowngrade
)
{
nsCString
oldCompatVersion
;
BuildCompatVersion
(
aOldAppVersion
aOldAppID
aOldToolkitID
oldCompatVersion
)
;
nsCString
newCompatVersion
;
BuildCompatVersion
(
aNewAppVersion
aNewAppID
aNewToolkitID
newCompatVersion
)
;
printf
(
"
Comparing
'
%
s
'
to
'
%
s
'
.
\
n
"
oldCompatVersion
.
get
(
)
newCompatVersion
.
get
(
)
)
;
bool
isDowngrade
=
false
;
bool
isSame
=
CheckCompatVersions
(
oldCompatVersion
newCompatVersion
&
isDowngrade
)
;
ASSERT_EQ
(
aExpectedSame
isSame
)
<
<
"
Version
sameness
check
should
match
.
"
;
ASSERT_EQ
(
aExpectedDowngrade
isDowngrade
)
<
<
"
Version
downgrade
check
should
match
.
"
;
}
TEST
(
CompatVersionCompare
CompareVersionChange
)
{
CheckExpectedResult
(
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
true
false
)
;
CheckExpectedResult
(
"
67
.
0
"
"
20000000000000
"
"
20000000000001
"
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
false
true
)
;
CheckExpectedResult
(
"
67
.
0
"
"
20000000000001
"
"
20000000000000
"
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
false
true
)
;
CheckExpectedResult
(
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
"
"
20000000000000
"
"
20000000000001
"
false
false
)
;
CheckExpectedResult
(
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
"
"
20000000000001
"
"
20000000000000
"
false
false
)
;
CheckExpectedResult
(
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
"
68
.
0
"
"
20000000000000
"
"
20000000000000
"
false
false
)
;
CheckExpectedResult
(
"
68
.
0
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
false
true
)
;
CheckExpectedResult
(
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
.
1
"
"
20000000000000
"
"
20000000000000
"
false
false
)
;
CheckExpectedResult
(
"
67
.
0
.
1
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
"
"
20000000000000
"
"
20000000000000
"
false
true
)
;
CheckExpectedResult
(
"
67
.
0
.
1
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
.
1
"
"
20000000000000
"
"
20000000000000
"
true
false
)
;
CheckExpectedResult
(
"
67
.
0
.
1
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
.
2
"
"
20000000000000
"
"
20000000000000
"
false
false
)
;
CheckExpectedResult
(
"
67
.
0
.
2
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
.
1
"
"
20000000000000
"
"
20000000000000
"
false
true
)
;
CheckExpectedResult
(
"
67
.
0
.
1
"
"
build1
"
"
build1
"
"
67
.
0
.
1
"
"
build2
"
"
build2
"
false
false
)
;
CheckExpectedResult
(
"
67
.
0
.
1
"
"
build10
"
"
build10
"
"
67
.
0
.
1
"
"
build2
"
"
build2
"
false
true
)
;
CheckExpectedResult
(
"
67
.
0
.
1
"
"
1
"
"
1
"
"
67
.
0
.
1
"
"
10
"
"
10
"
false
false
)
;
CheckExpectedResult
(
"
67
.
0
.
1
"
"
10
"
"
10
"
"
67
.
0
.
1
"
"
1
"
"
1
"
false
true
)
;
CheckExpectedResult
(
"
67
.
0
.
1
"
"
20000000000000
"
"
20000000000000
"
"
67
.
0
.
1
"
"
build1
"
"
build1
"
false
false
)
;
CheckExpectedResult
(
"
67
.
0
.
1
"
"
build1
"
"
build1
"
"
67
.
0
.
1
"
"
20000000000000
"
"
20000000000000
"
false
true
)
;
}
