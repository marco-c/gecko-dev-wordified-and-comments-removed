const
NUM_RANDOMIZED_CANVAS_BITS
=
256
;
function
countDifferencesInUint8Arrays
(
arr1
arr2
)
{
let
count
=
0
;
for
(
let
i
=
0
;
i
<
arr1
.
length
;
i
+
+
)
{
let
diff
=
arr1
[
i
]
^
arr2
[
i
]
;
while
(
diff
>
0
)
{
count
+
=
diff
&
1
;
diff
>
>
=
1
;
}
}
return
count
;
}
function
countDifferencesInArrayBuffers
(
buffer1
buffer2
)
{
if
(
buffer1
.
byteLength
!
=
=
buffer2
.
byteLength
)
{
return
true
;
}
const
view1
=
new
DataView
(
buffer1
)
;
const
view2
=
new
DataView
(
buffer2
)
;
let
differences
=
0
;
for
(
let
i
=
0
;
i
<
buffer1
.
byteLength
;
i
+
+
)
{
if
(
view1
.
getUint8
(
i
)
!
=
=
view2
.
getUint8
(
i
)
)
{
differences
+
=
1
;
}
}
return
differences
;
}
function
promiseObserver
(
topic
)
{
return
new
Promise
(
resolve
=
>
{
let
obs
=
(
aSubject
aTopic
aData
)
=
>
{
Services
.
obs
.
removeObserver
(
obs
aTopic
)
;
resolve
(
aSubject
)
;
}
;
Services
.
obs
.
addObserver
(
obs
topic
)
;
}
)
;
}
