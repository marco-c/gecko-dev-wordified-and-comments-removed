#
ifndef
LookupCacheV4_h__
#
define
LookupCacheV4_h__
#
include
"
LookupCache
.
h
"
namespace
mozilla
{
namespace
safebrowsing
{
class
TableUpdateV4
;
class
LookupCacheV4
final
:
public
LookupCache
{
public
:
explicit
LookupCacheV4
(
const
nsACString
&
aTableName
nsIFile
*
aStoreFile
)
:
LookupCache
(
aTableName
aStoreFile
)
{
}
~
LookupCacheV4
(
)
{
}
virtual
nsresult
Init
(
)
override
;
virtual
nsresult
Has
(
const
Completion
&
aCompletion
bool
*
aHas
bool
*
aComplete
)
override
;
nsresult
Build
(
PrefixStringMap
&
aPrefixMap
)
;
nsresult
GetPrefixes
(
PrefixStringMap
&
aPrefixMap
)
;
nsresult
ApplyPartialUpdate
(
TableUpdateV4
*
aTableUpdate
PrefixStringMap
&
aInputMap
PrefixStringMap
&
aOutputMap
)
;
static
const
int
VER
;
protected
:
virtual
nsresult
ClearPrefixes
(
)
override
;
virtual
nsresult
StoreToFile
(
nsIFile
*
aFile
)
override
;
virtual
nsresult
LoadFromFile
(
nsIFile
*
aFile
)
override
;
virtual
size_t
SizeOfPrefixSet
(
)
override
;
private
:
virtual
int
Ver
(
)
const
override
{
return
VER
;
}
enum
UPDATE_ERROR_TYPES
{
DUPLICATE_PREFIX
=
0
INFINITE_LOOP
=
1
WRONG_REMOVAL_INDICES
=
2
}
;
RefPtr
<
VariableLengthPrefixSet
>
mVLPrefixSet
;
}
;
}
}
#
endif
