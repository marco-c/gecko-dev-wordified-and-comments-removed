const
{
SafeBrowsing
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
SafeBrowsing
.
jsm
"
)
;
const
{
updateAppInfo
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
AppInfo
.
sys
.
mjs
"
)
;
add_setup
(
async
(
)
=
>
{
updateAppInfo
(
)
;
Services
.
prefs
.
setCharPref
(
"
browser
.
safebrowsing
.
provider
.
mozilla
.
updateURL
"
http
:
/
/
localhost
:
4444
/
safebrowsing
/
update
)
;
registerCleanupFunction
(
(
)
=
>
{
Services
.
prefs
.
clearUserPref
(
"
browser
.
safebrowsing
.
provider
.
mozilla
.
updateURL
"
)
;
Services
.
prefs
.
clearUserPref
(
"
browser
.
safebrowsing
.
provider
.
google
.
lists
"
)
;
Services
.
prefs
.
clearUserPref
(
"
browser
.
safebrowsing
.
provider
.
google4
.
lists
"
)
;
}
)
;
}
)
;
add_task
(
async
function
test
(
)
{
SafeBrowsing
.
init
(
)
;
let
origListV2
=
Services
.
prefs
.
getCharPref
(
"
browser
.
safebrowsing
.
provider
.
google
.
lists
"
)
;
let
origListV4
=
Services
.
prefs
.
getCharPref
(
"
browser
.
safebrowsing
.
provider
.
google4
.
lists
"
)
;
let
trimmedListV2
=
origListV2
.
replace
(
"
goog
-
malware
-
shavar
"
"
"
)
;
Services
.
prefs
.
setCharPref
(
"
browser
.
safebrowsing
.
provider
.
google
.
lists
"
trimmedListV2
)
;
let
trimmedListV4
=
origListV4
.
replace
(
"
goog
-
malware
-
proto
"
"
"
)
;
Services
.
prefs
.
setCharPref
(
"
browser
.
safebrowsing
.
provider
.
google4
.
lists
"
trimmedListV4
)
;
try
{
SafeBrowsing
.
registerTables
(
)
;
ok
(
true
"
SafeBrowsing
.
registerTables
(
)
did
not
throw
.
"
)
;
}
catch
(
e
)
{
ok
(
false
"
Exception
thrown
due
to
"
+
e
.
toString
(
)
)
;
}
}
)
;
