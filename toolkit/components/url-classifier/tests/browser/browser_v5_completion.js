"
use
strict
"
;
const
GETHASH_URL
=
"
http
:
/
/
mochi
.
test
:
8888
/
"
+
TEST_PATH
+
"
gethashV5
.
sjs
?
"
;
const
MALWARE_URL
=
"
https
:
/
/
malware
.
example
.
com
/
"
;
let
{
UrlClassifierTestUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
UrlClassifierTestUtils
.
sys
.
mjs
"
)
;
add_setup
(
async
_
=
>
{
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
safebrowsing
.
provider
.
google5
.
enabled
"
true
]
[
"
browser
.
safebrowsing
.
provider
.
google5
.
gethashURL
"
GETHASH_URL
]
]
}
)
;
}
)
;
add_task
(
async
function
test_v5_completion
(
)
{
await
UrlClassifierTestUtils
.
addTestV5Entry
(
)
;
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
MALWARE_URL
)
;
await
BrowserTestUtils
.
waitForContentEvent
(
tab
.
linkedBrowser
"
AboutBlockedLoaded
"
true
undefined
true
)
;
ok
(
true
"
The
page
should
be
blocked
.
"
)
;
await
BrowserTestUtils
.
removeTab
(
tab
)
;
await
UrlClassifierTestUtils
.
cleanupTestV5Entry
(
)
;
}
)
;
