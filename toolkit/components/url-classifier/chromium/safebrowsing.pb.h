#
ifndef
GOOGLE_PROTOBUF_INCLUDED_safebrowsing_2eproto
#
define
GOOGLE_PROTOBUF_INCLUDED_safebrowsing_2eproto
#
include
<
limits
>
#
include
<
string
>
#
include
<
google
/
protobuf
/
port_def
.
inc
>
#
if
PROTOBUF_VERSION
<
3011000
#
error
This
file
was
generated
by
a
newer
version
of
protoc
which
is
#
error
incompatible
with
your
Protocol
Buffer
headers
.
Please
update
#
error
your
headers
.
#
endif
#
if
3011004
<
PROTOBUF_MIN_PROTOC_VERSION
#
error
This
file
was
generated
by
an
older
version
of
protoc
which
is
#
error
incompatible
with
your
Protocol
Buffer
headers
.
Please
#
error
regenerate
this
file
with
a
newer
version
of
protoc
.
#
endif
#
include
<
google
/
protobuf
/
port_undef
.
inc
>
#
include
<
google
/
protobuf
/
io
/
coded_stream
.
h
>
#
include
<
google
/
protobuf
/
arena
.
h
>
#
include
<
google
/
protobuf
/
arenastring
.
h
>
#
include
<
google
/
protobuf
/
generated_message_table_driven
.
h
>
#
include
<
google
/
protobuf
/
generated_message_util
.
h
>
#
include
<
google
/
protobuf
/
inlined_string_field
.
h
>
#
include
<
google
/
protobuf
/
metadata_lite
.
h
>
#
include
<
google
/
protobuf
/
message_lite
.
h
>
#
include
<
google
/
protobuf
/
repeated_field
.
h
>
#
include
<
google
/
protobuf
/
extension_set
.
h
>
#
include
<
google
/
protobuf
/
generated_enum_util
.
h
>
#
include
<
google
/
protobuf
/
port_def
.
inc
>
#
define
PROTOBUF_INTERNAL_EXPORT_safebrowsing_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace
internal
{
class
AnyMetadata
;
}
PROTOBUF_NAMESPACE_CLOSE
struct
TableStruct_safebrowsing_2eproto
{
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseTableField
entries
[
]
PROTOBUF_SECTION_VARIABLE
(
protodesc_cold
)
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AuxillaryParseTableField
aux
[
]
PROTOBUF_SECTION_VARIABLE
(
protodesc_cold
)
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseTable
schema
[
27
]
PROTOBUF_SECTION_VARIABLE
(
protodesc_cold
)
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
FieldMetadata
field_metadata
[
]
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
SerializationTable
serialization_table
[
]
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint32
offsets
[
]
;
}
;
namespace
mozilla
{
namespace
safebrowsing
{
class
Checksum
;
class
ChecksumDefaultTypeInternal
;
extern
ChecksumDefaultTypeInternal
_Checksum_default_instance_
;
class
ChromeClientInfo
;
class
ChromeClientInfoDefaultTypeInternal
;
extern
ChromeClientInfoDefaultTypeInternal
_ChromeClientInfo_default_instance_
;
class
ClientInfo
;
class
ClientInfoDefaultTypeInternal
;
extern
ClientInfoDefaultTypeInternal
_ClientInfo_default_instance_
;
class
Duration
;
class
DurationDefaultTypeInternal
;
extern
DurationDefaultTypeInternal
_Duration_default_instance_
;
class
FetchThreatListUpdatesRequest
;
class
FetchThreatListUpdatesRequestDefaultTypeInternal
;
extern
FetchThreatListUpdatesRequestDefaultTypeInternal
_FetchThreatListUpdatesRequest_default_instance_
;
class
FetchThreatListUpdatesRequest_ListUpdateRequest
;
class
FetchThreatListUpdatesRequest_ListUpdateRequestDefaultTypeInternal
;
extern
FetchThreatListUpdatesRequest_ListUpdateRequestDefaultTypeInternal
_FetchThreatListUpdatesRequest_ListUpdateRequest_default_instance_
;
class
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
;
class
FetchThreatListUpdatesRequest_ListUpdateRequest_ConstraintsDefaultTypeInternal
;
extern
FetchThreatListUpdatesRequest_ListUpdateRequest_ConstraintsDefaultTypeInternal
_FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints_default_instance_
;
class
FetchThreatListUpdatesResponse
;
class
FetchThreatListUpdatesResponseDefaultTypeInternal
;
extern
FetchThreatListUpdatesResponseDefaultTypeInternal
_FetchThreatListUpdatesResponse_default_instance_
;
class
FetchThreatListUpdatesResponse_ListUpdateResponse
;
class
FetchThreatListUpdatesResponse_ListUpdateResponseDefaultTypeInternal
;
extern
FetchThreatListUpdatesResponse_ListUpdateResponseDefaultTypeInternal
_FetchThreatListUpdatesResponse_ListUpdateResponse_default_instance_
;
class
FindFullHashesRequest
;
class
FindFullHashesRequestDefaultTypeInternal
;
extern
FindFullHashesRequestDefaultTypeInternal
_FindFullHashesRequest_default_instance_
;
class
FindFullHashesResponse
;
class
FindFullHashesResponseDefaultTypeInternal
;
extern
FindFullHashesResponseDefaultTypeInternal
_FindFullHashesResponse_default_instance_
;
class
FindThreatMatchesRequest
;
class
FindThreatMatchesRequestDefaultTypeInternal
;
extern
FindThreatMatchesRequestDefaultTypeInternal
_FindThreatMatchesRequest_default_instance_
;
class
FindThreatMatchesResponse
;
class
FindThreatMatchesResponseDefaultTypeInternal
;
extern
FindThreatMatchesResponseDefaultTypeInternal
_FindThreatMatchesResponse_default_instance_
;
class
ListThreatListsResponse
;
class
ListThreatListsResponseDefaultTypeInternal
;
extern
ListThreatListsResponseDefaultTypeInternal
_ListThreatListsResponse_default_instance_
;
class
RawHashes
;
class
RawHashesDefaultTypeInternal
;
extern
RawHashesDefaultTypeInternal
_RawHashes_default_instance_
;
class
RawIndices
;
class
RawIndicesDefaultTypeInternal
;
extern
RawIndicesDefaultTypeInternal
_RawIndices_default_instance_
;
class
RiceDeltaEncoding
;
class
RiceDeltaEncodingDefaultTypeInternal
;
extern
RiceDeltaEncodingDefaultTypeInternal
_RiceDeltaEncoding_default_instance_
;
class
ThreatEntry
;
class
ThreatEntryDefaultTypeInternal
;
extern
ThreatEntryDefaultTypeInternal
_ThreatEntry_default_instance_
;
class
ThreatEntryMetadata
;
class
ThreatEntryMetadataDefaultTypeInternal
;
extern
ThreatEntryMetadataDefaultTypeInternal
_ThreatEntryMetadata_default_instance_
;
class
ThreatEntryMetadata_MetadataEntry
;
class
ThreatEntryMetadata_MetadataEntryDefaultTypeInternal
;
extern
ThreatEntryMetadata_MetadataEntryDefaultTypeInternal
_ThreatEntryMetadata_MetadataEntry_default_instance_
;
class
ThreatEntrySet
;
class
ThreatEntrySetDefaultTypeInternal
;
extern
ThreatEntrySetDefaultTypeInternal
_ThreatEntrySet_default_instance_
;
class
ThreatHit
;
class
ThreatHitDefaultTypeInternal
;
extern
ThreatHitDefaultTypeInternal
_ThreatHit_default_instance_
;
class
ThreatHit_ThreatSource
;
class
ThreatHit_ThreatSourceDefaultTypeInternal
;
extern
ThreatHit_ThreatSourceDefaultTypeInternal
_ThreatHit_ThreatSource_default_instance_
;
class
ThreatHit_UserInfo
;
class
ThreatHit_UserInfoDefaultTypeInternal
;
extern
ThreatHit_UserInfoDefaultTypeInternal
_ThreatHit_UserInfo_default_instance_
;
class
ThreatInfo
;
class
ThreatInfoDefaultTypeInternal
;
extern
ThreatInfoDefaultTypeInternal
_ThreatInfo_default_instance_
;
class
ThreatListDescriptor
;
class
ThreatListDescriptorDefaultTypeInternal
;
extern
ThreatListDescriptorDefaultTypeInternal
_ThreatListDescriptor_default_instance_
;
class
ThreatMatch
;
class
ThreatMatchDefaultTypeInternal
;
extern
ThreatMatchDefaultTypeInternal
_ThreatMatch_default_instance_
;
}
}
PROTOBUF_NAMESPACE_OPEN
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
Duration
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
FindFullHashesRequest
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FindFullHashesRequest
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
FindFullHashesResponse
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FindFullHashesResponse
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
FindThreatMatchesRequest
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FindThreatMatchesRequest
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
FindThreatMatchesResponse
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FindThreatMatchesResponse
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ListThreatListsResponse
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ListThreatListsResponse
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
>
(
Arena
*
)
;
template
<
>
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
Arena
:
:
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
(
Arena
*
)
;
PROTOBUF_NAMESPACE_CLOSE
namespace
mozilla
{
namespace
safebrowsing
{
enum
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
:
int
{
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_RESPONSE_TYPE_UNSPECIFIED
=
0
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_PARTIAL_UPDATE
=
1
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_FULL_UPDATE
=
2
}
;
bool
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_IsValid
(
int
value
)
;
constexpr
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_ResponseType_MIN
=
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_RESPONSE_TYPE_UNSPECIFIED
;
constexpr
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_ResponseType_MAX
=
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_FULL_UPDATE
;
constexpr
int
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_ResponseType_ARRAYSIZE
=
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_ResponseType_MAX
+
1
;
const
std
:
:
string
&
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_Name
(
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
value
)
;
template
<
typename
T
>
inline
const
std
:
:
string
&
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_Name
.
"
)
;
return
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_Name
(
static_cast
<
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
>
(
enum_t_value
)
)
;
}
bool
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_Parse
(
const
std
:
:
string
&
name
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
*
value
)
;
enum
ThreatHit_ThreatSourceType
:
int
{
ThreatHit_ThreatSourceType_THREAT_SOURCE_TYPE_UNSPECIFIED
=
0
ThreatHit_ThreatSourceType_MATCHING_URL
=
1
ThreatHit_ThreatSourceType_TAB_URL
=
2
ThreatHit_ThreatSourceType_TAB_REDIRECT
=
3
ThreatHit_ThreatSourceType_TAB_RESOURCE
=
4
}
;
bool
ThreatHit_ThreatSourceType_IsValid
(
int
value
)
;
constexpr
ThreatHit_ThreatSourceType
ThreatHit_ThreatSourceType_ThreatSourceType_MIN
=
ThreatHit_ThreatSourceType_THREAT_SOURCE_TYPE_UNSPECIFIED
;
constexpr
ThreatHit_ThreatSourceType
ThreatHit_ThreatSourceType_ThreatSourceType_MAX
=
ThreatHit_ThreatSourceType_TAB_RESOURCE
;
constexpr
int
ThreatHit_ThreatSourceType_ThreatSourceType_ARRAYSIZE
=
ThreatHit_ThreatSourceType_ThreatSourceType_MAX
+
1
;
const
std
:
:
string
&
ThreatHit_ThreatSourceType_Name
(
ThreatHit_ThreatSourceType
value
)
;
template
<
typename
T
>
inline
const
std
:
:
string
&
ThreatHit_ThreatSourceType_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
ThreatHit_ThreatSourceType
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
ThreatHit_ThreatSourceType_Name
.
"
)
;
return
ThreatHit_ThreatSourceType_Name
(
static_cast
<
ThreatHit_ThreatSourceType
>
(
enum_t_value
)
)
;
}
bool
ThreatHit_ThreatSourceType_Parse
(
const
std
:
:
string
&
name
ThreatHit_ThreatSourceType
*
value
)
;
enum
ChromeClientInfo_SafeBrowsingReportingPopulation
:
int
{
ChromeClientInfo_SafeBrowsingReportingPopulation_UNSPECIFIED
=
0
ChromeClientInfo_SafeBrowsingReportingPopulation_OPT_OUT
=
1
ChromeClientInfo_SafeBrowsingReportingPopulation_EXTENDED
=
2
ChromeClientInfo_SafeBrowsingReportingPopulation_SCOUT
=
3
}
;
bool
ChromeClientInfo_SafeBrowsingReportingPopulation_IsValid
(
int
value
)
;
constexpr
ChromeClientInfo_SafeBrowsingReportingPopulation
ChromeClientInfo_SafeBrowsingReportingPopulation_SafeBrowsingReportingPopulation_MIN
=
ChromeClientInfo_SafeBrowsingReportingPopulation_UNSPECIFIED
;
constexpr
ChromeClientInfo_SafeBrowsingReportingPopulation
ChromeClientInfo_SafeBrowsingReportingPopulation_SafeBrowsingReportingPopulation_MAX
=
ChromeClientInfo_SafeBrowsingReportingPopulation_SCOUT
;
constexpr
int
ChromeClientInfo_SafeBrowsingReportingPopulation_SafeBrowsingReportingPopulation_ARRAYSIZE
=
ChromeClientInfo_SafeBrowsingReportingPopulation_SafeBrowsingReportingPopulation_MAX
+
1
;
const
std
:
:
string
&
ChromeClientInfo_SafeBrowsingReportingPopulation_Name
(
ChromeClientInfo_SafeBrowsingReportingPopulation
value
)
;
template
<
typename
T
>
inline
const
std
:
:
string
&
ChromeClientInfo_SafeBrowsingReportingPopulation_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
ChromeClientInfo_SafeBrowsingReportingPopulation
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
ChromeClientInfo_SafeBrowsingReportingPopulation_Name
.
"
)
;
return
ChromeClientInfo_SafeBrowsingReportingPopulation_Name
(
static_cast
<
ChromeClientInfo_SafeBrowsingReportingPopulation
>
(
enum_t_value
)
)
;
}
bool
ChromeClientInfo_SafeBrowsingReportingPopulation_Parse
(
const
std
:
:
string
&
name
ChromeClientInfo_SafeBrowsingReportingPopulation
*
value
)
;
enum
ThreatType
:
int
{
THREAT_TYPE_UNSPECIFIED
=
0
MALWARE_THREAT
=
1
SOCIAL_ENGINEERING_PUBLIC
=
2
UNWANTED_SOFTWARE
=
3
POTENTIALLY_HARMFUL_APPLICATION
=
4
SOCIAL_ENGINEERING
=
5
API_ABUSE
=
6
MALICIOUS_BINARY
=
7
CSD_WHITELIST
=
8
CSD_DOWNLOAD_WHITELIST
=
9
CLIENT_INCIDENT
=
10
SUBRESOURCE_FILTER
=
13
}
;
bool
ThreatType_IsValid
(
int
value
)
;
constexpr
ThreatType
ThreatType_MIN
=
THREAT_TYPE_UNSPECIFIED
;
constexpr
ThreatType
ThreatType_MAX
=
SUBRESOURCE_FILTER
;
constexpr
int
ThreatType_ARRAYSIZE
=
ThreatType_MAX
+
1
;
const
std
:
:
string
&
ThreatType_Name
(
ThreatType
value
)
;
template
<
typename
T
>
inline
const
std
:
:
string
&
ThreatType_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
ThreatType
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
ThreatType_Name
.
"
)
;
return
ThreatType_Name
(
static_cast
<
ThreatType
>
(
enum_t_value
)
)
;
}
bool
ThreatType_Parse
(
const
std
:
:
string
&
name
ThreatType
*
value
)
;
enum
PlatformType
:
int
{
PLATFORM_TYPE_UNSPECIFIED
=
0
WINDOWS_PLATFORM
=
1
LINUX_PLATFORM
=
2
ANDROID_PLATFORM
=
3
OSX_PLATFORM
=
4
IOS_PLATFORM
=
5
ANY_PLATFORM
=
6
ALL_PLATFORMS
=
7
CHROME_PLATFORM
=
8
}
;
bool
PlatformType_IsValid
(
int
value
)
;
constexpr
PlatformType
PlatformType_MIN
=
PLATFORM_TYPE_UNSPECIFIED
;
constexpr
PlatformType
PlatformType_MAX
=
CHROME_PLATFORM
;
constexpr
int
PlatformType_ARRAYSIZE
=
PlatformType_MAX
+
1
;
const
std
:
:
string
&
PlatformType_Name
(
PlatformType
value
)
;
template
<
typename
T
>
inline
const
std
:
:
string
&
PlatformType_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
PlatformType
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
PlatformType_Name
.
"
)
;
return
PlatformType_Name
(
static_cast
<
PlatformType
>
(
enum_t_value
)
)
;
}
bool
PlatformType_Parse
(
const
std
:
:
string
&
name
PlatformType
*
value
)
;
enum
CompressionType
:
int
{
COMPRESSION_TYPE_UNSPECIFIED
=
0
RAW
=
1
RICE
=
2
}
;
bool
CompressionType_IsValid
(
int
value
)
;
constexpr
CompressionType
CompressionType_MIN
=
COMPRESSION_TYPE_UNSPECIFIED
;
constexpr
CompressionType
CompressionType_MAX
=
RICE
;
constexpr
int
CompressionType_ARRAYSIZE
=
CompressionType_MAX
+
1
;
const
std
:
:
string
&
CompressionType_Name
(
CompressionType
value
)
;
template
<
typename
T
>
inline
const
std
:
:
string
&
CompressionType_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
CompressionType
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
CompressionType_Name
.
"
)
;
return
CompressionType_Name
(
static_cast
<
CompressionType
>
(
enum_t_value
)
)
;
}
bool
CompressionType_Parse
(
const
std
:
:
string
&
name
CompressionType
*
value
)
;
enum
ThreatEntryType
:
int
{
THREAT_ENTRY_TYPE_UNSPECIFIED
=
0
URL
=
1
EXECUTABLE
=
2
IP_RANGE
=
3
CHROME_EXTENSION
=
4
FILENAME
=
5
CERT
=
6
}
;
bool
ThreatEntryType_IsValid
(
int
value
)
;
constexpr
ThreatEntryType
ThreatEntryType_MIN
=
THREAT_ENTRY_TYPE_UNSPECIFIED
;
constexpr
ThreatEntryType
ThreatEntryType_MAX
=
CERT
;
constexpr
int
ThreatEntryType_ARRAYSIZE
=
ThreatEntryType_MAX
+
1
;
const
std
:
:
string
&
ThreatEntryType_Name
(
ThreatEntryType
value
)
;
template
<
typename
T
>
inline
const
std
:
:
string
&
ThreatEntryType_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
ThreatEntryType
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
ThreatEntryType_Name
.
"
)
;
return
ThreatEntryType_Name
(
static_cast
<
ThreatEntryType
>
(
enum_t_value
)
)
;
}
bool
ThreatEntryType_Parse
(
const
std
:
:
string
&
name
ThreatEntryType
*
value
)
;
class
ThreatInfo
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatInfo
(
)
;
virtual
~
ThreatInfo
(
)
;
ThreatInfo
(
const
ThreatInfo
&
from
)
;
ThreatInfo
(
ThreatInfo
&
&
from
)
noexcept
:
ThreatInfo
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatInfo
&
operator
=
(
const
ThreatInfo
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatInfo
&
operator
=
(
ThreatInfo
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatInfo
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatInfo
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatInfo
*
>
(
&
_ThreatInfo_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
0
;
friend
void
swap
(
ThreatInfo
&
a
ThreatInfo
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatInfo
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatInfo
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatInfo
>
(
nullptr
)
;
}
ThreatInfo
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatInfo
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatInfo
&
from
)
;
void
MergeFrom
(
const
ThreatInfo
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatInfo
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatInfo
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kThreatTypesFieldNumber
=
1
kPlatformTypesFieldNumber
=
2
kThreatEntriesFieldNumber
=
3
kThreatEntryTypesFieldNumber
=
4
}
;
int
threat_types_size
(
)
const
;
private
:
int
_internal_threat_types_size
(
)
const
;
public
:
void
clear_threat_types
(
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
_internal_threat_types
(
int
index
)
const
;
void
_internal_add_threat_types
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
_internal_mutable_threat_types
(
)
;
public
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
threat_types
(
int
index
)
const
;
void
set_threat_types
(
int
index
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
void
add_threat_types
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
&
threat_types
(
)
const
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
mutable_threat_types
(
)
;
int
platform_types_size
(
)
const
;
private
:
int
_internal_platform_types_size
(
)
const
;
public
:
void
clear_platform_types
(
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
_internal_platform_types
(
int
index
)
const
;
void
_internal_add_platform_types
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
_internal_mutable_platform_types
(
)
;
public
:
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
platform_types
(
int
index
)
const
;
void
set_platform_types
(
int
index
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
void
add_platform_types
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
&
platform_types
(
)
const
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
mutable_platform_types
(
)
;
int
threat_entries_size
(
)
const
;
private
:
int
_internal_threat_entries_size
(
)
const
;
public
:
void
clear_threat_entries
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
mutable_threat_entries
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
>
*
mutable_threat_entries
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
_internal_threat_entries
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
_internal_add_threat_entries
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
threat_entries
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
add_threat_entries
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
>
&
threat_entries
(
)
const
;
int
threat_entry_types_size
(
)
const
;
private
:
int
_internal_threat_entry_types_size
(
)
const
;
public
:
void
clear_threat_entry_types
(
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
_internal_threat_entry_types
(
int
index
)
const
;
void
_internal_add_threat_entry_types
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
_internal_mutable_threat_entry_types
(
)
;
public
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
threat_entry_types
(
int
index
)
const
;
void
set_threat_entry_types
(
int
index
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
void
add_threat_entry_types
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
&
threat_entry_types
(
)
const
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
mutable_threat_entry_types
(
)
;
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
threat_types_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
platform_types_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
>
threat_entries_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
threat_entry_types_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ThreatMatch
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatMatch
(
)
;
virtual
~
ThreatMatch
(
)
;
ThreatMatch
(
const
ThreatMatch
&
from
)
;
ThreatMatch
(
ThreatMatch
&
&
from
)
noexcept
:
ThreatMatch
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatMatch
&
operator
=
(
const
ThreatMatch
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatMatch
&
operator
=
(
ThreatMatch
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatMatch
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatMatch
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatMatch
*
>
(
&
_ThreatMatch_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
1
;
friend
void
swap
(
ThreatMatch
&
a
ThreatMatch
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatMatch
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatMatch
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatMatch
>
(
nullptr
)
;
}
ThreatMatch
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatMatch
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatMatch
&
from
)
;
void
MergeFrom
(
const
ThreatMatch
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatMatch
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatMatch
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kThreatFieldNumber
=
3
kThreatEntryMetadataFieldNumber
=
4
kCacheDurationFieldNumber
=
5
kThreatTypeFieldNumber
=
1
kPlatformTypeFieldNumber
=
2
kThreatEntryTypeFieldNumber
=
6
}
;
bool
has_threat
(
)
const
;
private
:
bool
_internal_has_threat
(
)
const
;
public
:
void
clear_threat
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
threat
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
release_threat
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
mutable_threat
(
)
;
void
set_allocated_threat
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
threat
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
_internal_threat
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
_internal_mutable_threat
(
)
;
public
:
bool
has_threat_entry_metadata
(
)
const
;
private
:
bool
_internal_has_threat_entry_metadata
(
)
const
;
public
:
void
clear_threat_entry_metadata
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
&
threat_entry_metadata
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
release_threat_entry_metadata
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
mutable_threat_entry_metadata
(
)
;
void
set_allocated_threat_entry_metadata
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
threat_entry_metadata
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
&
_internal_threat_entry_metadata
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
_internal_mutable_threat_entry_metadata
(
)
;
public
:
bool
has_cache_duration
(
)
const
;
private
:
bool
_internal_has_cache_duration
(
)
const
;
public
:
void
clear_cache_duration
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
cache_duration
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
release_cache_duration
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
mutable_cache_duration
(
)
;
void
set_allocated_cache_duration
(
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
cache_duration
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
_internal_cache_duration
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
_internal_mutable_cache_duration
(
)
;
public
:
bool
has_threat_type
(
)
const
;
private
:
bool
_internal_has_threat_type
(
)
const
;
public
:
void
clear_threat_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
threat_type
(
)
const
;
void
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
_internal_threat_type
(
)
const
;
void
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
public
:
bool
has_platform_type
(
)
const
;
private
:
bool
_internal_has_platform_type
(
)
const
;
public
:
void
clear_platform_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
platform_type
(
)
const
;
void
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
_internal_platform_type
(
)
const
;
void
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
public
:
bool
has_threat_entry_type
(
)
const
;
private
:
bool
_internal_has_threat_entry_type
(
)
const
;
public
:
void
clear_threat_entry_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
threat_entry_type
(
)
const
;
void
set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
_internal_threat_entry_type
(
)
const
;
void
_internal_set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
threat_
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
threat_entry_metadata_
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
cache_duration_
;
int
threat_type_
;
int
platform_type_
;
int
threat_entry_type_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
FindThreatMatchesRequest
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
FindThreatMatchesRequest
(
)
;
virtual
~
FindThreatMatchesRequest
(
)
;
FindThreatMatchesRequest
(
const
FindThreatMatchesRequest
&
from
)
;
FindThreatMatchesRequest
(
FindThreatMatchesRequest
&
&
from
)
noexcept
:
FindThreatMatchesRequest
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
FindThreatMatchesRequest
&
operator
=
(
const
FindThreatMatchesRequest
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
FindThreatMatchesRequest
&
operator
=
(
FindThreatMatchesRequest
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
FindThreatMatchesRequest
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
FindThreatMatchesRequest
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
FindThreatMatchesRequest
*
>
(
&
_FindThreatMatchesRequest_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
2
;
friend
void
swap
(
FindThreatMatchesRequest
&
a
FindThreatMatchesRequest
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
FindThreatMatchesRequest
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
FindThreatMatchesRequest
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
FindThreatMatchesRequest
>
(
nullptr
)
;
}
FindThreatMatchesRequest
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
FindThreatMatchesRequest
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
FindThreatMatchesRequest
&
from
)
;
void
MergeFrom
(
const
FindThreatMatchesRequest
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
FindThreatMatchesRequest
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
FindThreatMatchesRequest
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kClientFieldNumber
=
1
kThreatInfoFieldNumber
=
2
}
;
bool
has_client
(
)
const
;
private
:
bool
_internal_has_client
(
)
const
;
public
:
void
clear_client
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
client
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
release_client
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
mutable_client
(
)
;
void
set_allocated_client
(
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
_internal_client
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
_internal_mutable_client
(
)
;
public
:
bool
has_threat_info
(
)
const
;
private
:
bool
_internal_has_threat_info
(
)
const
;
public
:
void
clear_threat_info
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
&
threat_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
release_threat_info
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
mutable_threat_info
(
)
;
void
set_allocated_threat_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
threat_info
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
&
_internal_threat_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
_internal_mutable_threat_info
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client_
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
threat_info_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
FindThreatMatchesResponse
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
FindThreatMatchesResponse
(
)
;
virtual
~
FindThreatMatchesResponse
(
)
;
FindThreatMatchesResponse
(
const
FindThreatMatchesResponse
&
from
)
;
FindThreatMatchesResponse
(
FindThreatMatchesResponse
&
&
from
)
noexcept
:
FindThreatMatchesResponse
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
FindThreatMatchesResponse
&
operator
=
(
const
FindThreatMatchesResponse
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
FindThreatMatchesResponse
&
operator
=
(
FindThreatMatchesResponse
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
FindThreatMatchesResponse
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
FindThreatMatchesResponse
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
FindThreatMatchesResponse
*
>
(
&
_FindThreatMatchesResponse_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
3
;
friend
void
swap
(
FindThreatMatchesResponse
&
a
FindThreatMatchesResponse
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
FindThreatMatchesResponse
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
FindThreatMatchesResponse
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
FindThreatMatchesResponse
>
(
nullptr
)
;
}
FindThreatMatchesResponse
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
FindThreatMatchesResponse
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
FindThreatMatchesResponse
&
from
)
;
void
MergeFrom
(
const
FindThreatMatchesResponse
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
FindThreatMatchesResponse
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
FindThreatMatchesResponse
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kMatchesFieldNumber
=
1
}
;
int
matches_size
(
)
const
;
private
:
int
_internal_matches_size
(
)
const
;
public
:
void
clear_matches
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
mutable_matches
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
*
mutable_matches
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
&
_internal_matches
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
_internal_add_matches
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
&
matches
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
add_matches
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
&
matches
(
)
const
;
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
matches_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
(
)
;
virtual
~
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
(
)
;
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
(
const
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
from
)
;
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
(
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
&
from
)
noexcept
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
operator
=
(
const
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
operator
=
(
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
>
(
&
_FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
4
;
friend
void
swap
(
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
a
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
>
(
nullptr
)
;
}
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
from
)
;
void
MergeFrom
(
const
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
FetchThreatListUpdatesRequest
.
ListUpdateRequest
.
Constraints
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kSupportedCompressionsFieldNumber
=
4
kRegionFieldNumber
=
3
kMaxUpdateEntriesFieldNumber
=
1
kMaxDatabaseEntriesFieldNumber
=
2
}
;
int
supported_compressions_size
(
)
const
;
private
:
int
_internal_supported_compressions_size
(
)
const
;
public
:
void
clear_supported_compressions
(
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
_internal_supported_compressions
(
int
index
)
const
;
void
_internal_add_supported_compressions
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
_internal_mutable_supported_compressions
(
)
;
public
:
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
supported_compressions
(
int
index
)
const
;
void
set_supported_compressions
(
int
index
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
;
void
add_supported_compressions
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
&
supported_compressions
(
)
const
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
mutable_supported_compressions
(
)
;
bool
has_region
(
)
const
;
private
:
bool
_internal_has_region
(
)
const
;
public
:
void
clear_region
(
)
;
const
std
:
:
string
&
region
(
)
const
;
void
set_region
(
const
std
:
:
string
&
value
)
;
void
set_region
(
std
:
:
string
&
&
value
)
;
void
set_region
(
const
char
*
value
)
;
void
set_region
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_region
(
)
;
std
:
:
string
*
release_region
(
)
;
void
set_allocated_region
(
std
:
:
string
*
region
)
;
private
:
const
std
:
:
string
&
_internal_region
(
)
const
;
void
_internal_set_region
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_region
(
)
;
public
:
bool
has_max_update_entries
(
)
const
;
private
:
bool
_internal_has_max_update_entries
(
)
const
;
public
:
void
clear_max_update_entries
(
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
max_update_entries
(
)
const
;
void
set_max_update_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
private
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
_internal_max_update_entries
(
)
const
;
void
_internal_set_max_update_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
public
:
bool
has_max_database_entries
(
)
const
;
private
:
bool
_internal_has_max_database_entries
(
)
const
;
public
:
void
clear_max_database_entries
(
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
max_database_entries
(
)
const
;
void
set_max_database_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
private
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
_internal_max_database_entries
(
)
const
;
void
_internal_set_max_database_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
supported_compressions_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
region_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
max_update_entries_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
max_database_entries_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
FetchThreatListUpdatesRequest_ListUpdateRequest
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
FetchThreatListUpdatesRequest_ListUpdateRequest
(
)
;
virtual
~
FetchThreatListUpdatesRequest_ListUpdateRequest
(
)
;
FetchThreatListUpdatesRequest_ListUpdateRequest
(
const
FetchThreatListUpdatesRequest_ListUpdateRequest
&
from
)
;
FetchThreatListUpdatesRequest_ListUpdateRequest
(
FetchThreatListUpdatesRequest_ListUpdateRequest
&
&
from
)
noexcept
:
FetchThreatListUpdatesRequest_ListUpdateRequest
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
FetchThreatListUpdatesRequest_ListUpdateRequest
&
operator
=
(
const
FetchThreatListUpdatesRequest_ListUpdateRequest
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
FetchThreatListUpdatesRequest_ListUpdateRequest
&
operator
=
(
FetchThreatListUpdatesRequest_ListUpdateRequest
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
FetchThreatListUpdatesRequest_ListUpdateRequest
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
FetchThreatListUpdatesRequest_ListUpdateRequest
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
FetchThreatListUpdatesRequest_ListUpdateRequest
*
>
(
&
_FetchThreatListUpdatesRequest_ListUpdateRequest_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
5
;
friend
void
swap
(
FetchThreatListUpdatesRequest_ListUpdateRequest
&
a
FetchThreatListUpdatesRequest_ListUpdateRequest
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
FetchThreatListUpdatesRequest_ListUpdateRequest
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
FetchThreatListUpdatesRequest_ListUpdateRequest
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesRequest_ListUpdateRequest
>
(
nullptr
)
;
}
FetchThreatListUpdatesRequest_ListUpdateRequest
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesRequest_ListUpdateRequest
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
FetchThreatListUpdatesRequest_ListUpdateRequest
&
from
)
;
void
MergeFrom
(
const
FetchThreatListUpdatesRequest_ListUpdateRequest
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
FetchThreatListUpdatesRequest_ListUpdateRequest
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
FetchThreatListUpdatesRequest
.
ListUpdateRequest
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
typedef
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
Constraints
;
enum
:
int
{
kStateFieldNumber
=
3
kConstraintsFieldNumber
=
4
kThreatTypeFieldNumber
=
1
kPlatformTypeFieldNumber
=
2
kThreatEntryTypeFieldNumber
=
5
}
;
bool
has_state
(
)
const
;
private
:
bool
_internal_has_state
(
)
const
;
public
:
void
clear_state
(
)
;
const
std
:
:
string
&
state
(
)
const
;
void
set_state
(
const
std
:
:
string
&
value
)
;
void
set_state
(
std
:
:
string
&
&
value
)
;
void
set_state
(
const
char
*
value
)
;
void
set_state
(
const
void
*
value
size_t
size
)
;
std
:
:
string
*
mutable_state
(
)
;
std
:
:
string
*
release_state
(
)
;
void
set_allocated_state
(
std
:
:
string
*
state
)
;
private
:
const
std
:
:
string
&
_internal_state
(
)
const
;
void
_internal_set_state
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_state
(
)
;
public
:
bool
has_constraints
(
)
const
;
private
:
bool
_internal_has_constraints
(
)
const
;
public
:
void
clear_constraints
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
constraints
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
release_constraints
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
mutable_constraints
(
)
;
void
set_allocated_constraints
(
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
constraints
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
_internal_constraints
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
_internal_mutable_constraints
(
)
;
public
:
bool
has_threat_type
(
)
const
;
private
:
bool
_internal_has_threat_type
(
)
const
;
public
:
void
clear_threat_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
threat_type
(
)
const
;
void
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
_internal_threat_type
(
)
const
;
void
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
public
:
bool
has_platform_type
(
)
const
;
private
:
bool
_internal_has_platform_type
(
)
const
;
public
:
void
clear_platform_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
platform_type
(
)
const
;
void
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
_internal_platform_type
(
)
const
;
void
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
public
:
bool
has_threat_entry_type
(
)
const
;
private
:
bool
_internal_has_threat_entry_type
(
)
const
;
public
:
void
clear_threat_entry_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
threat_entry_type
(
)
const
;
void
set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
_internal_threat_entry_type
(
)
const
;
void
_internal_set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
state_
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
constraints_
;
int
threat_type_
;
int
platform_type_
;
int
threat_entry_type_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
FetchThreatListUpdatesRequest
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
FetchThreatListUpdatesRequest
(
)
;
virtual
~
FetchThreatListUpdatesRequest
(
)
;
FetchThreatListUpdatesRequest
(
const
FetchThreatListUpdatesRequest
&
from
)
;
FetchThreatListUpdatesRequest
(
FetchThreatListUpdatesRequest
&
&
from
)
noexcept
:
FetchThreatListUpdatesRequest
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
FetchThreatListUpdatesRequest
&
operator
=
(
const
FetchThreatListUpdatesRequest
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
FetchThreatListUpdatesRequest
&
operator
=
(
FetchThreatListUpdatesRequest
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
FetchThreatListUpdatesRequest
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
FetchThreatListUpdatesRequest
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
FetchThreatListUpdatesRequest
*
>
(
&
_FetchThreatListUpdatesRequest_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
6
;
friend
void
swap
(
FetchThreatListUpdatesRequest
&
a
FetchThreatListUpdatesRequest
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
FetchThreatListUpdatesRequest
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
FetchThreatListUpdatesRequest
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesRequest
>
(
nullptr
)
;
}
FetchThreatListUpdatesRequest
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesRequest
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
FetchThreatListUpdatesRequest
&
from
)
;
void
MergeFrom
(
const
FetchThreatListUpdatesRequest
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
FetchThreatListUpdatesRequest
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
FetchThreatListUpdatesRequest
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
typedef
FetchThreatListUpdatesRequest_ListUpdateRequest
ListUpdateRequest
;
enum
:
int
{
kListUpdateRequestsFieldNumber
=
3
kClientFieldNumber
=
1
kChromeClientInfoFieldNumber
=
4
}
;
int
list_update_requests_size
(
)
const
;
private
:
int
_internal_list_update_requests_size
(
)
const
;
public
:
void
clear_list_update_requests
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
*
mutable_list_update_requests
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
>
*
mutable_list_update_requests
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
&
_internal_list_update_requests
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
*
_internal_add_list_update_requests
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
&
list_update_requests
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
*
add_list_update_requests
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
>
&
list_update_requests
(
)
const
;
bool
has_client
(
)
const
;
private
:
bool
_internal_has_client
(
)
const
;
public
:
void
clear_client
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
client
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
release_client
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
mutable_client
(
)
;
void
set_allocated_client
(
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
_internal_client
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
_internal_mutable_client
(
)
;
public
:
bool
has_chrome_client_info
(
)
const
;
private
:
bool
_internal_has_chrome_client_info
(
)
const
;
public
:
void
clear_chrome_client_info
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
&
chrome_client_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
release_chrome_client_info
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
mutable_chrome_client_info
(
)
;
void
set_allocated_chrome_client_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
chrome_client_info
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
&
_internal_chrome_client_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
_internal_mutable_chrome_client_info
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
>
list_update_requests_
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client_
;
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
chrome_client_info_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
FetchThreatListUpdatesResponse_ListUpdateResponse
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
FetchThreatListUpdatesResponse_ListUpdateResponse
(
)
;
virtual
~
FetchThreatListUpdatesResponse_ListUpdateResponse
(
)
;
FetchThreatListUpdatesResponse_ListUpdateResponse
(
const
FetchThreatListUpdatesResponse_ListUpdateResponse
&
from
)
;
FetchThreatListUpdatesResponse_ListUpdateResponse
(
FetchThreatListUpdatesResponse_ListUpdateResponse
&
&
from
)
noexcept
:
FetchThreatListUpdatesResponse_ListUpdateResponse
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
FetchThreatListUpdatesResponse_ListUpdateResponse
&
operator
=
(
const
FetchThreatListUpdatesResponse_ListUpdateResponse
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
FetchThreatListUpdatesResponse_ListUpdateResponse
&
operator
=
(
FetchThreatListUpdatesResponse_ListUpdateResponse
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
FetchThreatListUpdatesResponse_ListUpdateResponse
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
FetchThreatListUpdatesResponse_ListUpdateResponse
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
FetchThreatListUpdatesResponse_ListUpdateResponse
*
>
(
&
_FetchThreatListUpdatesResponse_ListUpdateResponse_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
7
;
friend
void
swap
(
FetchThreatListUpdatesResponse_ListUpdateResponse
&
a
FetchThreatListUpdatesResponse_ListUpdateResponse
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
FetchThreatListUpdatesResponse_ListUpdateResponse
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
FetchThreatListUpdatesResponse_ListUpdateResponse
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesResponse_ListUpdateResponse
>
(
nullptr
)
;
}
FetchThreatListUpdatesResponse_ListUpdateResponse
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesResponse_ListUpdateResponse
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
FetchThreatListUpdatesResponse_ListUpdateResponse
&
from
)
;
void
MergeFrom
(
const
FetchThreatListUpdatesResponse_ListUpdateResponse
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
FetchThreatListUpdatesResponse_ListUpdateResponse
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
FetchThreatListUpdatesResponse
.
ListUpdateResponse
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
typedef
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
ResponseType
;
static
constexpr
ResponseType
RESPONSE_TYPE_UNSPECIFIED
=
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_RESPONSE_TYPE_UNSPECIFIED
;
static
constexpr
ResponseType
PARTIAL_UPDATE
=
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_PARTIAL_UPDATE
;
static
constexpr
ResponseType
FULL_UPDATE
=
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_FULL_UPDATE
;
static
inline
bool
ResponseType_IsValid
(
int
value
)
{
return
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_IsValid
(
value
)
;
}
static
constexpr
ResponseType
ResponseType_MIN
=
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_ResponseType_MIN
;
static
constexpr
ResponseType
ResponseType_MAX
=
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_ResponseType_MAX
;
static
constexpr
int
ResponseType_ARRAYSIZE
=
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_ResponseType_ARRAYSIZE
;
template
<
typename
T
>
static
inline
const
std
:
:
string
&
ResponseType_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
ResponseType
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
ResponseType_Name
.
"
)
;
return
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_Name
(
enum_t_value
)
;
}
static
inline
bool
ResponseType_Parse
(
const
std
:
:
string
&
name
ResponseType
*
value
)
{
return
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_Parse
(
name
value
)
;
}
enum
:
int
{
kAdditionsFieldNumber
=
5
kRemovalsFieldNumber
=
6
kNewClientStateFieldNumber
=
7
kChecksumFieldNumber
=
8
kThreatTypeFieldNumber
=
1
kThreatEntryTypeFieldNumber
=
2
kPlatformTypeFieldNumber
=
3
kResponseTypeFieldNumber
=
4
}
;
int
additions_size
(
)
const
;
private
:
int
_internal_additions_size
(
)
const
;
public
:
void
clear_additions
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
mutable_additions
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
*
mutable_additions
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
&
_internal_additions
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
_internal_add_additions
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
&
additions
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
add_additions
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
&
additions
(
)
const
;
int
removals_size
(
)
const
;
private
:
int
_internal_removals_size
(
)
const
;
public
:
void
clear_removals
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
mutable_removals
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
*
mutable_removals
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
&
_internal_removals
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
_internal_add_removals
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
&
removals
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
add_removals
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
&
removals
(
)
const
;
bool
has_new_client_state
(
)
const
;
private
:
bool
_internal_has_new_client_state
(
)
const
;
public
:
void
clear_new_client_state
(
)
;
const
std
:
:
string
&
new_client_state
(
)
const
;
void
set_new_client_state
(
const
std
:
:
string
&
value
)
;
void
set_new_client_state
(
std
:
:
string
&
&
value
)
;
void
set_new_client_state
(
const
char
*
value
)
;
void
set_new_client_state
(
const
void
*
value
size_t
size
)
;
std
:
:
string
*
mutable_new_client_state
(
)
;
std
:
:
string
*
release_new_client_state
(
)
;
void
set_allocated_new_client_state
(
std
:
:
string
*
new_client_state
)
;
private
:
const
std
:
:
string
&
_internal_new_client_state
(
)
const
;
void
_internal_set_new_client_state
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_new_client_state
(
)
;
public
:
bool
has_checksum
(
)
const
;
private
:
bool
_internal_has_checksum
(
)
const
;
public
:
void
clear_checksum
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
&
checksum
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
release_checksum
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
mutable_checksum
(
)
;
void
set_allocated_checksum
(
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
checksum
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
&
_internal_checksum
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
_internal_mutable_checksum
(
)
;
public
:
bool
has_threat_type
(
)
const
;
private
:
bool
_internal_has_threat_type
(
)
const
;
public
:
void
clear_threat_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
threat_type
(
)
const
;
void
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
_internal_threat_type
(
)
const
;
void
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
public
:
bool
has_threat_entry_type
(
)
const
;
private
:
bool
_internal_has_threat_entry_type
(
)
const
;
public
:
void
clear_threat_entry_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
threat_entry_type
(
)
const
;
void
set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
_internal_threat_entry_type
(
)
const
;
void
_internal_set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
public
:
bool
has_platform_type
(
)
const
;
private
:
bool
_internal_has_platform_type
(
)
const
;
public
:
void
clear_platform_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
platform_type
(
)
const
;
void
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
_internal_platform_type
(
)
const
;
void
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
public
:
bool
has_response_type
(
)
const
;
private
:
bool
_internal_has_response_type
(
)
const
;
public
:
void
clear_response_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
response_type
(
)
const
;
void
set_response_type
(
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
_internal_response_type
(
)
const
;
void
_internal_set_response_type
(
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
additions_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
removals_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
new_client_state_
;
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
checksum_
;
int
threat_type_
;
int
threat_entry_type_
;
int
platform_type_
;
int
response_type_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
FetchThreatListUpdatesResponse
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
FetchThreatListUpdatesResponse
(
)
;
virtual
~
FetchThreatListUpdatesResponse
(
)
;
FetchThreatListUpdatesResponse
(
const
FetchThreatListUpdatesResponse
&
from
)
;
FetchThreatListUpdatesResponse
(
FetchThreatListUpdatesResponse
&
&
from
)
noexcept
:
FetchThreatListUpdatesResponse
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
FetchThreatListUpdatesResponse
&
operator
=
(
const
FetchThreatListUpdatesResponse
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
FetchThreatListUpdatesResponse
&
operator
=
(
FetchThreatListUpdatesResponse
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
FetchThreatListUpdatesResponse
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
FetchThreatListUpdatesResponse
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
FetchThreatListUpdatesResponse
*
>
(
&
_FetchThreatListUpdatesResponse_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
8
;
friend
void
swap
(
FetchThreatListUpdatesResponse
&
a
FetchThreatListUpdatesResponse
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
FetchThreatListUpdatesResponse
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
FetchThreatListUpdatesResponse
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesResponse
>
(
nullptr
)
;
}
FetchThreatListUpdatesResponse
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
FetchThreatListUpdatesResponse
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
FetchThreatListUpdatesResponse
&
from
)
;
void
MergeFrom
(
const
FetchThreatListUpdatesResponse
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
FetchThreatListUpdatesResponse
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
FetchThreatListUpdatesResponse
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
typedef
FetchThreatListUpdatesResponse_ListUpdateResponse
ListUpdateResponse
;
enum
:
int
{
kListUpdateResponsesFieldNumber
=
1
kMinimumWaitDurationFieldNumber
=
2
}
;
int
list_update_responses_size
(
)
const
;
private
:
int
_internal_list_update_responses_size
(
)
const
;
public
:
void
clear_list_update_responses
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
*
mutable_list_update_responses
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
>
*
mutable_list_update_responses
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
&
_internal_list_update_responses
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
*
_internal_add_list_update_responses
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
&
list_update_responses
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
*
add_list_update_responses
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
>
&
list_update_responses
(
)
const
;
bool
has_minimum_wait_duration
(
)
const
;
private
:
bool
_internal_has_minimum_wait_duration
(
)
const
;
public
:
void
clear_minimum_wait_duration
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
minimum_wait_duration
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
release_minimum_wait_duration
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
mutable_minimum_wait_duration
(
)
;
void
set_allocated_minimum_wait_duration
(
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
minimum_wait_duration
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
_internal_minimum_wait_duration
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
_internal_mutable_minimum_wait_duration
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
>
list_update_responses_
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
minimum_wait_duration_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
FindFullHashesRequest
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
FindFullHashesRequest
(
)
;
virtual
~
FindFullHashesRequest
(
)
;
FindFullHashesRequest
(
const
FindFullHashesRequest
&
from
)
;
FindFullHashesRequest
(
FindFullHashesRequest
&
&
from
)
noexcept
:
FindFullHashesRequest
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
FindFullHashesRequest
&
operator
=
(
const
FindFullHashesRequest
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
FindFullHashesRequest
&
operator
=
(
FindFullHashesRequest
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
FindFullHashesRequest
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
FindFullHashesRequest
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
FindFullHashesRequest
*
>
(
&
_FindFullHashesRequest_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
9
;
friend
void
swap
(
FindFullHashesRequest
&
a
FindFullHashesRequest
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
FindFullHashesRequest
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
FindFullHashesRequest
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
FindFullHashesRequest
>
(
nullptr
)
;
}
FindFullHashesRequest
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
FindFullHashesRequest
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
FindFullHashesRequest
&
from
)
;
void
MergeFrom
(
const
FindFullHashesRequest
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
FindFullHashesRequest
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
FindFullHashesRequest
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kClientStatesFieldNumber
=
2
kClientFieldNumber
=
1
kThreatInfoFieldNumber
=
3
}
;
int
client_states_size
(
)
const
;
private
:
int
_internal_client_states_size
(
)
const
;
public
:
void
clear_client_states
(
)
;
const
std
:
:
string
&
client_states
(
int
index
)
const
;
std
:
:
string
*
mutable_client_states
(
int
index
)
;
void
set_client_states
(
int
index
const
std
:
:
string
&
value
)
;
void
set_client_states
(
int
index
std
:
:
string
&
&
value
)
;
void
set_client_states
(
int
index
const
char
*
value
)
;
void
set_client_states
(
int
index
const
void
*
value
size_t
size
)
;
std
:
:
string
*
add_client_states
(
)
;
void
add_client_states
(
const
std
:
:
string
&
value
)
;
void
add_client_states
(
std
:
:
string
&
&
value
)
;
void
add_client_states
(
const
char
*
value
)
;
void
add_client_states
(
const
void
*
value
size_t
size
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
std
:
:
string
>
&
client_states
(
)
const
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
std
:
:
string
>
*
mutable_client_states
(
)
;
private
:
const
std
:
:
string
&
_internal_client_states
(
int
index
)
const
;
std
:
:
string
*
_internal_add_client_states
(
)
;
public
:
bool
has_client
(
)
const
;
private
:
bool
_internal_has_client
(
)
const
;
public
:
void
clear_client
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
client
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
release_client
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
mutable_client
(
)
;
void
set_allocated_client
(
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
_internal_client
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
_internal_mutable_client
(
)
;
public
:
bool
has_threat_info
(
)
const
;
private
:
bool
_internal_has_threat_info
(
)
const
;
public
:
void
clear_threat_info
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
&
threat_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
release_threat_info
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
mutable_threat_info
(
)
;
void
set_allocated_threat_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
threat_info
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
&
_internal_threat_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
_internal_mutable_threat_info
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
std
:
:
string
>
client_states_
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client_
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
threat_info_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
FindFullHashesResponse
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
FindFullHashesResponse
(
)
;
virtual
~
FindFullHashesResponse
(
)
;
FindFullHashesResponse
(
const
FindFullHashesResponse
&
from
)
;
FindFullHashesResponse
(
FindFullHashesResponse
&
&
from
)
noexcept
:
FindFullHashesResponse
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
FindFullHashesResponse
&
operator
=
(
const
FindFullHashesResponse
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
FindFullHashesResponse
&
operator
=
(
FindFullHashesResponse
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
FindFullHashesResponse
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
FindFullHashesResponse
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
FindFullHashesResponse
*
>
(
&
_FindFullHashesResponse_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
10
;
friend
void
swap
(
FindFullHashesResponse
&
a
FindFullHashesResponse
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
FindFullHashesResponse
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
FindFullHashesResponse
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
FindFullHashesResponse
>
(
nullptr
)
;
}
FindFullHashesResponse
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
FindFullHashesResponse
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
FindFullHashesResponse
&
from
)
;
void
MergeFrom
(
const
FindFullHashesResponse
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
FindFullHashesResponse
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
FindFullHashesResponse
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kMatchesFieldNumber
=
1
kMinimumWaitDurationFieldNumber
=
2
kNegativeCacheDurationFieldNumber
=
3
}
;
int
matches_size
(
)
const
;
private
:
int
_internal_matches_size
(
)
const
;
public
:
void
clear_matches
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
mutable_matches
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
*
mutable_matches
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
&
_internal_matches
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
_internal_add_matches
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
&
matches
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
add_matches
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
&
matches
(
)
const
;
bool
has_minimum_wait_duration
(
)
const
;
private
:
bool
_internal_has_minimum_wait_duration
(
)
const
;
public
:
void
clear_minimum_wait_duration
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
minimum_wait_duration
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
release_minimum_wait_duration
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
mutable_minimum_wait_duration
(
)
;
void
set_allocated_minimum_wait_duration
(
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
minimum_wait_duration
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
_internal_minimum_wait_duration
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
_internal_mutable_minimum_wait_duration
(
)
;
public
:
bool
has_negative_cache_duration
(
)
const
;
private
:
bool
_internal_has_negative_cache_duration
(
)
const
;
public
:
void
clear_negative_cache_duration
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
negative_cache_duration
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
release_negative_cache_duration
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
mutable_negative_cache_duration
(
)
;
void
set_allocated_negative_cache_duration
(
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
negative_cache_duration
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
_internal_negative_cache_duration
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
_internal_mutable_negative_cache_duration
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
matches_
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
minimum_wait_duration_
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
negative_cache_duration_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ThreatHit_ThreatSource
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatHit_ThreatSource
(
)
;
virtual
~
ThreatHit_ThreatSource
(
)
;
ThreatHit_ThreatSource
(
const
ThreatHit_ThreatSource
&
from
)
;
ThreatHit_ThreatSource
(
ThreatHit_ThreatSource
&
&
from
)
noexcept
:
ThreatHit_ThreatSource
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatHit_ThreatSource
&
operator
=
(
const
ThreatHit_ThreatSource
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatHit_ThreatSource
&
operator
=
(
ThreatHit_ThreatSource
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatHit_ThreatSource
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatHit_ThreatSource
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatHit_ThreatSource
*
>
(
&
_ThreatHit_ThreatSource_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
11
;
friend
void
swap
(
ThreatHit_ThreatSource
&
a
ThreatHit_ThreatSource
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatHit_ThreatSource
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatHit_ThreatSource
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatHit_ThreatSource
>
(
nullptr
)
;
}
ThreatHit_ThreatSource
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatHit_ThreatSource
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatHit_ThreatSource
&
from
)
;
void
MergeFrom
(
const
ThreatHit_ThreatSource
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatHit_ThreatSource
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatHit
.
ThreatSource
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kUrlFieldNumber
=
1
kRemoteIpFieldNumber
=
3
kReferrerFieldNumber
=
4
kTypeFieldNumber
=
2
}
;
bool
has_url
(
)
const
;
private
:
bool
_internal_has_url
(
)
const
;
public
:
void
clear_url
(
)
;
const
std
:
:
string
&
url
(
)
const
;
void
set_url
(
const
std
:
:
string
&
value
)
;
void
set_url
(
std
:
:
string
&
&
value
)
;
void
set_url
(
const
char
*
value
)
;
void
set_url
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_url
(
)
;
std
:
:
string
*
release_url
(
)
;
void
set_allocated_url
(
std
:
:
string
*
url
)
;
private
:
const
std
:
:
string
&
_internal_url
(
)
const
;
void
_internal_set_url
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_url
(
)
;
public
:
bool
has_remote_ip
(
)
const
;
private
:
bool
_internal_has_remote_ip
(
)
const
;
public
:
void
clear_remote_ip
(
)
;
const
std
:
:
string
&
remote_ip
(
)
const
;
void
set_remote_ip
(
const
std
:
:
string
&
value
)
;
void
set_remote_ip
(
std
:
:
string
&
&
value
)
;
void
set_remote_ip
(
const
char
*
value
)
;
void
set_remote_ip
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_remote_ip
(
)
;
std
:
:
string
*
release_remote_ip
(
)
;
void
set_allocated_remote_ip
(
std
:
:
string
*
remote_ip
)
;
private
:
const
std
:
:
string
&
_internal_remote_ip
(
)
const
;
void
_internal_set_remote_ip
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_remote_ip
(
)
;
public
:
bool
has_referrer
(
)
const
;
private
:
bool
_internal_has_referrer
(
)
const
;
public
:
void
clear_referrer
(
)
;
const
std
:
:
string
&
referrer
(
)
const
;
void
set_referrer
(
const
std
:
:
string
&
value
)
;
void
set_referrer
(
std
:
:
string
&
&
value
)
;
void
set_referrer
(
const
char
*
value
)
;
void
set_referrer
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_referrer
(
)
;
std
:
:
string
*
release_referrer
(
)
;
void
set_allocated_referrer
(
std
:
:
string
*
referrer
)
;
private
:
const
std
:
:
string
&
_internal_referrer
(
)
const
;
void
_internal_set_referrer
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_referrer
(
)
;
public
:
bool
has_type
(
)
const
;
private
:
bool
_internal_has_type
(
)
const
;
public
:
void
clear_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
type
(
)
const
;
void
set_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
_internal_type
(
)
const
;
void
_internal_set_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
url_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
remote_ip_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
referrer_
;
int
type_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ThreatHit_UserInfo
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatHit_UserInfo
(
)
;
virtual
~
ThreatHit_UserInfo
(
)
;
ThreatHit_UserInfo
(
const
ThreatHit_UserInfo
&
from
)
;
ThreatHit_UserInfo
(
ThreatHit_UserInfo
&
&
from
)
noexcept
:
ThreatHit_UserInfo
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatHit_UserInfo
&
operator
=
(
const
ThreatHit_UserInfo
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatHit_UserInfo
&
operator
=
(
ThreatHit_UserInfo
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatHit_UserInfo
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatHit_UserInfo
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatHit_UserInfo
*
>
(
&
_ThreatHit_UserInfo_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
12
;
friend
void
swap
(
ThreatHit_UserInfo
&
a
ThreatHit_UserInfo
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatHit_UserInfo
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatHit_UserInfo
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatHit_UserInfo
>
(
nullptr
)
;
}
ThreatHit_UserInfo
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatHit_UserInfo
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatHit_UserInfo
&
from
)
;
void
MergeFrom
(
const
ThreatHit_UserInfo
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatHit_UserInfo
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatHit
.
UserInfo
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kRegionCodeFieldNumber
=
1
kUserIdFieldNumber
=
2
}
;
bool
has_region_code
(
)
const
;
private
:
bool
_internal_has_region_code
(
)
const
;
public
:
void
clear_region_code
(
)
;
const
std
:
:
string
&
region_code
(
)
const
;
void
set_region_code
(
const
std
:
:
string
&
value
)
;
void
set_region_code
(
std
:
:
string
&
&
value
)
;
void
set_region_code
(
const
char
*
value
)
;
void
set_region_code
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_region_code
(
)
;
std
:
:
string
*
release_region_code
(
)
;
void
set_allocated_region_code
(
std
:
:
string
*
region_code
)
;
private
:
const
std
:
:
string
&
_internal_region_code
(
)
const
;
void
_internal_set_region_code
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_region_code
(
)
;
public
:
bool
has_user_id
(
)
const
;
private
:
bool
_internal_has_user_id
(
)
const
;
public
:
void
clear_user_id
(
)
;
const
std
:
:
string
&
user_id
(
)
const
;
void
set_user_id
(
const
std
:
:
string
&
value
)
;
void
set_user_id
(
std
:
:
string
&
&
value
)
;
void
set_user_id
(
const
char
*
value
)
;
void
set_user_id
(
const
void
*
value
size_t
size
)
;
std
:
:
string
*
mutable_user_id
(
)
;
std
:
:
string
*
release_user_id
(
)
;
void
set_allocated_user_id
(
std
:
:
string
*
user_id
)
;
private
:
const
std
:
:
string
&
_internal_user_id
(
)
const
;
void
_internal_set_user_id
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_user_id
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
region_code_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
user_id_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ThreatHit
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatHit
(
)
;
virtual
~
ThreatHit
(
)
;
ThreatHit
(
const
ThreatHit
&
from
)
;
ThreatHit
(
ThreatHit
&
&
from
)
noexcept
:
ThreatHit
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatHit
&
operator
=
(
const
ThreatHit
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatHit
&
operator
=
(
ThreatHit
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatHit
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatHit
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatHit
*
>
(
&
_ThreatHit_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
13
;
friend
void
swap
(
ThreatHit
&
a
ThreatHit
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatHit
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatHit
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatHit
>
(
nullptr
)
;
}
ThreatHit
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatHit
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatHit
&
from
)
;
void
MergeFrom
(
const
ThreatHit
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatHit
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatHit
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
typedef
ThreatHit_ThreatSource
ThreatSource
;
typedef
ThreatHit_UserInfo
UserInfo
;
typedef
ThreatHit_ThreatSourceType
ThreatSourceType
;
static
constexpr
ThreatSourceType
THREAT_SOURCE_TYPE_UNSPECIFIED
=
ThreatHit_ThreatSourceType_THREAT_SOURCE_TYPE_UNSPECIFIED
;
static
constexpr
ThreatSourceType
MATCHING_URL
=
ThreatHit_ThreatSourceType_MATCHING_URL
;
static
constexpr
ThreatSourceType
TAB_URL
=
ThreatHit_ThreatSourceType_TAB_URL
;
static
constexpr
ThreatSourceType
TAB_REDIRECT
=
ThreatHit_ThreatSourceType_TAB_REDIRECT
;
static
constexpr
ThreatSourceType
TAB_RESOURCE
=
ThreatHit_ThreatSourceType_TAB_RESOURCE
;
static
inline
bool
ThreatSourceType_IsValid
(
int
value
)
{
return
ThreatHit_ThreatSourceType_IsValid
(
value
)
;
}
static
constexpr
ThreatSourceType
ThreatSourceType_MIN
=
ThreatHit_ThreatSourceType_ThreatSourceType_MIN
;
static
constexpr
ThreatSourceType
ThreatSourceType_MAX
=
ThreatHit_ThreatSourceType_ThreatSourceType_MAX
;
static
constexpr
int
ThreatSourceType_ARRAYSIZE
=
ThreatHit_ThreatSourceType_ThreatSourceType_ARRAYSIZE
;
template
<
typename
T
>
static
inline
const
std
:
:
string
&
ThreatSourceType_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
ThreatSourceType
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
ThreatSourceType_Name
.
"
)
;
return
ThreatHit_ThreatSourceType_Name
(
enum_t_value
)
;
}
static
inline
bool
ThreatSourceType_Parse
(
const
std
:
:
string
&
name
ThreatSourceType
*
value
)
{
return
ThreatHit_ThreatSourceType_Parse
(
name
value
)
;
}
enum
:
int
{
kResourcesFieldNumber
=
4
kEntryFieldNumber
=
3
kClientInfoFieldNumber
=
5
kUserInfoFieldNumber
=
6
kThreatTypeFieldNumber
=
1
kPlatformTypeFieldNumber
=
2
}
;
int
resources_size
(
)
const
;
private
:
int
_internal_resources_size
(
)
const
;
public
:
void
clear_resources
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
*
mutable_resources
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
>
*
mutable_resources
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
&
_internal_resources
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
*
_internal_add_resources
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
&
resources
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
*
add_resources
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
>
&
resources
(
)
const
;
bool
has_entry
(
)
const
;
private
:
bool
_internal_has_entry
(
)
const
;
public
:
void
clear_entry
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
entry
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
release_entry
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
mutable_entry
(
)
;
void
set_allocated_entry
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
entry
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
_internal_entry
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
_internal_mutable_entry
(
)
;
public
:
bool
has_client_info
(
)
const
;
private
:
bool
_internal_has_client_info
(
)
const
;
public
:
void
clear_client_info
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
client_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
release_client_info
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
mutable_client_info
(
)
;
void
set_allocated_client_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client_info
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
_internal_client_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
_internal_mutable_client_info
(
)
;
public
:
bool
has_user_info
(
)
const
;
private
:
bool
_internal_has_user_info
(
)
const
;
public
:
void
clear_user_info
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
&
user_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
release_user_info
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
mutable_user_info
(
)
;
void
set_allocated_user_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
user_info
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
&
_internal_user_info
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
_internal_mutable_user_info
(
)
;
public
:
bool
has_threat_type
(
)
const
;
private
:
bool
_internal_has_threat_type
(
)
const
;
public
:
void
clear_threat_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
threat_type
(
)
const
;
void
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
_internal_threat_type
(
)
const
;
void
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
public
:
bool
has_platform_type
(
)
const
;
private
:
bool
_internal_has_platform_type
(
)
const
;
public
:
void
clear_platform_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
platform_type
(
)
const
;
void
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
_internal_platform_type
(
)
const
;
void
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
>
resources_
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
entry_
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client_info_
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
user_info_
;
int
threat_type_
;
int
platform_type_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ClientInfo
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ClientInfo
(
)
;
virtual
~
ClientInfo
(
)
;
ClientInfo
(
const
ClientInfo
&
from
)
;
ClientInfo
(
ClientInfo
&
&
from
)
noexcept
:
ClientInfo
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ClientInfo
&
operator
=
(
const
ClientInfo
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ClientInfo
&
operator
=
(
ClientInfo
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ClientInfo
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ClientInfo
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ClientInfo
*
>
(
&
_ClientInfo_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
14
;
friend
void
swap
(
ClientInfo
&
a
ClientInfo
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ClientInfo
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ClientInfo
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ClientInfo
>
(
nullptr
)
;
}
ClientInfo
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ClientInfo
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ClientInfo
&
from
)
;
void
MergeFrom
(
const
ClientInfo
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ClientInfo
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ClientInfo
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kClientIdFieldNumber
=
1
kClientVersionFieldNumber
=
2
}
;
bool
has_client_id
(
)
const
;
private
:
bool
_internal_has_client_id
(
)
const
;
public
:
void
clear_client_id
(
)
;
const
std
:
:
string
&
client_id
(
)
const
;
void
set_client_id
(
const
std
:
:
string
&
value
)
;
void
set_client_id
(
std
:
:
string
&
&
value
)
;
void
set_client_id
(
const
char
*
value
)
;
void
set_client_id
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_client_id
(
)
;
std
:
:
string
*
release_client_id
(
)
;
void
set_allocated_client_id
(
std
:
:
string
*
client_id
)
;
private
:
const
std
:
:
string
&
_internal_client_id
(
)
const
;
void
_internal_set_client_id
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_client_id
(
)
;
public
:
bool
has_client_version
(
)
const
;
private
:
bool
_internal_has_client_version
(
)
const
;
public
:
void
clear_client_version
(
)
;
const
std
:
:
string
&
client_version
(
)
const
;
void
set_client_version
(
const
std
:
:
string
&
value
)
;
void
set_client_version
(
std
:
:
string
&
&
value
)
;
void
set_client_version
(
const
char
*
value
)
;
void
set_client_version
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_client_version
(
)
;
std
:
:
string
*
release_client_version
(
)
;
void
set_allocated_client_version
(
std
:
:
string
*
client_version
)
;
private
:
const
std
:
:
string
&
_internal_client_version
(
)
const
;
void
_internal_set_client_version
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_client_version
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
client_id_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
client_version_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ChromeClientInfo
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ChromeClientInfo
(
)
;
virtual
~
ChromeClientInfo
(
)
;
ChromeClientInfo
(
const
ChromeClientInfo
&
from
)
;
ChromeClientInfo
(
ChromeClientInfo
&
&
from
)
noexcept
:
ChromeClientInfo
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ChromeClientInfo
&
operator
=
(
const
ChromeClientInfo
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ChromeClientInfo
&
operator
=
(
ChromeClientInfo
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ChromeClientInfo
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ChromeClientInfo
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ChromeClientInfo
*
>
(
&
_ChromeClientInfo_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
15
;
friend
void
swap
(
ChromeClientInfo
&
a
ChromeClientInfo
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ChromeClientInfo
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ChromeClientInfo
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ChromeClientInfo
>
(
nullptr
)
;
}
ChromeClientInfo
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ChromeClientInfo
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ChromeClientInfo
&
from
)
;
void
MergeFrom
(
const
ChromeClientInfo
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ChromeClientInfo
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ChromeClientInfo
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
typedef
ChromeClientInfo_SafeBrowsingReportingPopulation
SafeBrowsingReportingPopulation
;
static
constexpr
SafeBrowsingReportingPopulation
UNSPECIFIED
=
ChromeClientInfo_SafeBrowsingReportingPopulation_UNSPECIFIED
;
static
constexpr
SafeBrowsingReportingPopulation
OPT_OUT
=
ChromeClientInfo_SafeBrowsingReportingPopulation_OPT_OUT
;
static
constexpr
SafeBrowsingReportingPopulation
EXTENDED
=
ChromeClientInfo_SafeBrowsingReportingPopulation_EXTENDED
;
static
constexpr
SafeBrowsingReportingPopulation
SCOUT
=
ChromeClientInfo_SafeBrowsingReportingPopulation_SCOUT
;
static
inline
bool
SafeBrowsingReportingPopulation_IsValid
(
int
value
)
{
return
ChromeClientInfo_SafeBrowsingReportingPopulation_IsValid
(
value
)
;
}
static
constexpr
SafeBrowsingReportingPopulation
SafeBrowsingReportingPopulation_MIN
=
ChromeClientInfo_SafeBrowsingReportingPopulation_SafeBrowsingReportingPopulation_MIN
;
static
constexpr
SafeBrowsingReportingPopulation
SafeBrowsingReportingPopulation_MAX
=
ChromeClientInfo_SafeBrowsingReportingPopulation_SafeBrowsingReportingPopulation_MAX
;
static
constexpr
int
SafeBrowsingReportingPopulation_ARRAYSIZE
=
ChromeClientInfo_SafeBrowsingReportingPopulation_SafeBrowsingReportingPopulation_ARRAYSIZE
;
template
<
typename
T
>
static
inline
const
std
:
:
string
&
SafeBrowsingReportingPopulation_Name
(
T
enum_t_value
)
{
static_assert
(
:
:
std
:
:
is_same
<
T
SafeBrowsingReportingPopulation
>
:
:
value
|
|
:
:
std
:
:
is_integral
<
T
>
:
:
value
"
Incorrect
type
passed
to
function
SafeBrowsingReportingPopulation_Name
.
"
)
;
return
ChromeClientInfo_SafeBrowsingReportingPopulation_Name
(
enum_t_value
)
;
}
static
inline
bool
SafeBrowsingReportingPopulation_Parse
(
const
std
:
:
string
&
name
SafeBrowsingReportingPopulation
*
value
)
{
return
ChromeClientInfo_SafeBrowsingReportingPopulation_Parse
(
name
value
)
;
}
enum
:
int
{
kReportingPopulationFieldNumber
=
1
}
;
bool
has_reporting_population
(
)
const
;
private
:
bool
_internal_has_reporting_population
(
)
const
;
public
:
void
clear_reporting_population
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
reporting_population
(
)
const
;
void
set_reporting_population
(
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
_internal_reporting_population
(
)
const
;
void
_internal_set_reporting_population
(
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
int
reporting_population_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
Checksum
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
Checksum
(
)
;
virtual
~
Checksum
(
)
;
Checksum
(
const
Checksum
&
from
)
;
Checksum
(
Checksum
&
&
from
)
noexcept
:
Checksum
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
Checksum
&
operator
=
(
const
Checksum
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
Checksum
&
operator
=
(
Checksum
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
Checksum
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
Checksum
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
Checksum
*
>
(
&
_Checksum_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
16
;
friend
void
swap
(
Checksum
&
a
Checksum
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
Checksum
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
Checksum
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
Checksum
>
(
nullptr
)
;
}
Checksum
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
Checksum
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
Checksum
&
from
)
;
void
MergeFrom
(
const
Checksum
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
Checksum
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
Checksum
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kSha256FieldNumber
=
1
}
;
bool
has_sha256
(
)
const
;
private
:
bool
_internal_has_sha256
(
)
const
;
public
:
void
clear_sha256
(
)
;
const
std
:
:
string
&
sha256
(
)
const
;
void
set_sha256
(
const
std
:
:
string
&
value
)
;
void
set_sha256
(
std
:
:
string
&
&
value
)
;
void
set_sha256
(
const
char
*
value
)
;
void
set_sha256
(
const
void
*
value
size_t
size
)
;
std
:
:
string
*
mutable_sha256
(
)
;
std
:
:
string
*
release_sha256
(
)
;
void
set_allocated_sha256
(
std
:
:
string
*
sha256
)
;
private
:
const
std
:
:
string
&
_internal_sha256
(
)
const
;
void
_internal_set_sha256
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_sha256
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
sha256_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ThreatEntry
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatEntry
(
)
;
virtual
~
ThreatEntry
(
)
;
ThreatEntry
(
const
ThreatEntry
&
from
)
;
ThreatEntry
(
ThreatEntry
&
&
from
)
noexcept
:
ThreatEntry
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatEntry
&
operator
=
(
const
ThreatEntry
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatEntry
&
operator
=
(
ThreatEntry
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatEntry
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatEntry
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatEntry
*
>
(
&
_ThreatEntry_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
17
;
friend
void
swap
(
ThreatEntry
&
a
ThreatEntry
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatEntry
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatEntry
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatEntry
>
(
nullptr
)
;
}
ThreatEntry
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatEntry
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatEntry
&
from
)
;
void
MergeFrom
(
const
ThreatEntry
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatEntry
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatEntry
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kHashFieldNumber
=
1
kUrlFieldNumber
=
2
}
;
bool
has_hash
(
)
const
;
private
:
bool
_internal_has_hash
(
)
const
;
public
:
void
clear_hash
(
)
;
const
std
:
:
string
&
hash
(
)
const
;
void
set_hash
(
const
std
:
:
string
&
value
)
;
void
set_hash
(
std
:
:
string
&
&
value
)
;
void
set_hash
(
const
char
*
value
)
;
void
set_hash
(
const
void
*
value
size_t
size
)
;
std
:
:
string
*
mutable_hash
(
)
;
std
:
:
string
*
release_hash
(
)
;
void
set_allocated_hash
(
std
:
:
string
*
hash
)
;
private
:
const
std
:
:
string
&
_internal_hash
(
)
const
;
void
_internal_set_hash
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_hash
(
)
;
public
:
bool
has_url
(
)
const
;
private
:
bool
_internal_has_url
(
)
const
;
public
:
void
clear_url
(
)
;
const
std
:
:
string
&
url
(
)
const
;
void
set_url
(
const
std
:
:
string
&
value
)
;
void
set_url
(
std
:
:
string
&
&
value
)
;
void
set_url
(
const
char
*
value
)
;
void
set_url
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_url
(
)
;
std
:
:
string
*
release_url
(
)
;
void
set_allocated_url
(
std
:
:
string
*
url
)
;
private
:
const
std
:
:
string
&
_internal_url
(
)
const
;
void
_internal_set_url
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_url
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
hash_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
url_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ThreatEntrySet
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatEntrySet
(
)
;
virtual
~
ThreatEntrySet
(
)
;
ThreatEntrySet
(
const
ThreatEntrySet
&
from
)
;
ThreatEntrySet
(
ThreatEntrySet
&
&
from
)
noexcept
:
ThreatEntrySet
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatEntrySet
&
operator
=
(
const
ThreatEntrySet
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatEntrySet
&
operator
=
(
ThreatEntrySet
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatEntrySet
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatEntrySet
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatEntrySet
*
>
(
&
_ThreatEntrySet_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
18
;
friend
void
swap
(
ThreatEntrySet
&
a
ThreatEntrySet
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatEntrySet
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatEntrySet
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatEntrySet
>
(
nullptr
)
;
}
ThreatEntrySet
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatEntrySet
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatEntrySet
&
from
)
;
void
MergeFrom
(
const
ThreatEntrySet
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatEntrySet
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatEntrySet
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kRawHashesFieldNumber
=
2
kRawIndicesFieldNumber
=
3
kRiceHashesFieldNumber
=
4
kRiceIndicesFieldNumber
=
5
kCompressionTypeFieldNumber
=
1
}
;
bool
has_raw_hashes
(
)
const
;
private
:
bool
_internal_has_raw_hashes
(
)
const
;
public
:
void
clear_raw_hashes
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
&
raw_hashes
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
release_raw_hashes
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
mutable_raw_hashes
(
)
;
void
set_allocated_raw_hashes
(
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
raw_hashes
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
&
_internal_raw_hashes
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
_internal_mutable_raw_hashes
(
)
;
public
:
bool
has_raw_indices
(
)
const
;
private
:
bool
_internal_has_raw_indices
(
)
const
;
public
:
void
clear_raw_indices
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
&
raw_indices
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
release_raw_indices
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
mutable_raw_indices
(
)
;
void
set_allocated_raw_indices
(
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
raw_indices
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
&
_internal_raw_indices
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
_internal_mutable_raw_indices
(
)
;
public
:
bool
has_rice_hashes
(
)
const
;
private
:
bool
_internal_has_rice_hashes
(
)
const
;
public
:
void
clear_rice_hashes
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
&
rice_hashes
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
release_rice_hashes
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
mutable_rice_hashes
(
)
;
void
set_allocated_rice_hashes
(
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
rice_hashes
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
&
_internal_rice_hashes
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
_internal_mutable_rice_hashes
(
)
;
public
:
bool
has_rice_indices
(
)
const
;
private
:
bool
_internal_has_rice_indices
(
)
const
;
public
:
void
clear_rice_indices
(
)
;
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
&
rice_indices
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
release_rice_indices
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
mutable_rice_indices
(
)
;
void
set_allocated_rice_indices
(
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
rice_indices
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
&
_internal_rice_indices
(
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
_internal_mutable_rice_indices
(
)
;
public
:
bool
has_compression_type
(
)
const
;
private
:
bool
_internal_has_compression_type
(
)
const
;
public
:
void
clear_compression_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
compression_type
(
)
const
;
void
set_compression_type
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
_internal_compression_type
(
)
const
;
void
_internal_set_compression_type
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
raw_hashes_
;
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
raw_indices_
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
rice_hashes_
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
rice_indices_
;
int
compression_type_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
RawIndices
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
RawIndices
(
)
;
virtual
~
RawIndices
(
)
;
RawIndices
(
const
RawIndices
&
from
)
;
RawIndices
(
RawIndices
&
&
from
)
noexcept
:
RawIndices
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
RawIndices
&
operator
=
(
const
RawIndices
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
RawIndices
&
operator
=
(
RawIndices
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
RawIndices
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
RawIndices
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
RawIndices
*
>
(
&
_RawIndices_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
19
;
friend
void
swap
(
RawIndices
&
a
RawIndices
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
RawIndices
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
RawIndices
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
RawIndices
>
(
nullptr
)
;
}
RawIndices
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
RawIndices
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
RawIndices
&
from
)
;
void
MergeFrom
(
const
RawIndices
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
RawIndices
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
RawIndices
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kIndicesFieldNumber
=
1
}
;
int
indices_size
(
)
const
;
private
:
int
_internal_indices_size
(
)
const
;
public
:
void
clear_indices
(
)
;
private
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
_internal_indices
(
int
index
)
const
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
>
&
_internal_indices
(
)
const
;
void
_internal_add_indices
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
>
*
_internal_mutable_indices
(
)
;
public
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
indices
(
int
index
)
const
;
void
set_indices
(
int
index
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
void
add_indices
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
>
&
indices
(
)
const
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
>
*
mutable_indices
(
)
;
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
>
indices_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
RawHashes
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
RawHashes
(
)
;
virtual
~
RawHashes
(
)
;
RawHashes
(
const
RawHashes
&
from
)
;
RawHashes
(
RawHashes
&
&
from
)
noexcept
:
RawHashes
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
RawHashes
&
operator
=
(
const
RawHashes
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
RawHashes
&
operator
=
(
RawHashes
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
RawHashes
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
RawHashes
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
RawHashes
*
>
(
&
_RawHashes_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
20
;
friend
void
swap
(
RawHashes
&
a
RawHashes
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
RawHashes
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
RawHashes
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
RawHashes
>
(
nullptr
)
;
}
RawHashes
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
RawHashes
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
RawHashes
&
from
)
;
void
MergeFrom
(
const
RawHashes
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
RawHashes
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
RawHashes
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kRawHashesFieldNumber
=
2
kPrefixSizeFieldNumber
=
1
}
;
bool
has_raw_hashes
(
)
const
;
private
:
bool
_internal_has_raw_hashes
(
)
const
;
public
:
void
clear_raw_hashes
(
)
;
const
std
:
:
string
&
raw_hashes
(
)
const
;
void
set_raw_hashes
(
const
std
:
:
string
&
value
)
;
void
set_raw_hashes
(
std
:
:
string
&
&
value
)
;
void
set_raw_hashes
(
const
char
*
value
)
;
void
set_raw_hashes
(
const
void
*
value
size_t
size
)
;
std
:
:
string
*
mutable_raw_hashes
(
)
;
std
:
:
string
*
release_raw_hashes
(
)
;
void
set_allocated_raw_hashes
(
std
:
:
string
*
raw_hashes
)
;
private
:
const
std
:
:
string
&
_internal_raw_hashes
(
)
const
;
void
_internal_set_raw_hashes
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_raw_hashes
(
)
;
public
:
bool
has_prefix_size
(
)
const
;
private
:
bool
_internal_has_prefix_size
(
)
const
;
public
:
void
clear_prefix_size
(
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
prefix_size
(
)
const
;
void
set_prefix_size
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
private
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
_internal_prefix_size
(
)
const
;
void
_internal_set_prefix_size
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
raw_hashes_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
prefix_size_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
RiceDeltaEncoding
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
RiceDeltaEncoding
(
)
;
virtual
~
RiceDeltaEncoding
(
)
;
RiceDeltaEncoding
(
const
RiceDeltaEncoding
&
from
)
;
RiceDeltaEncoding
(
RiceDeltaEncoding
&
&
from
)
noexcept
:
RiceDeltaEncoding
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
RiceDeltaEncoding
&
operator
=
(
const
RiceDeltaEncoding
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
RiceDeltaEncoding
&
operator
=
(
RiceDeltaEncoding
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
RiceDeltaEncoding
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
RiceDeltaEncoding
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
RiceDeltaEncoding
*
>
(
&
_RiceDeltaEncoding_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
21
;
friend
void
swap
(
RiceDeltaEncoding
&
a
RiceDeltaEncoding
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
RiceDeltaEncoding
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
RiceDeltaEncoding
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
RiceDeltaEncoding
>
(
nullptr
)
;
}
RiceDeltaEncoding
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
RiceDeltaEncoding
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
RiceDeltaEncoding
&
from
)
;
void
MergeFrom
(
const
RiceDeltaEncoding
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
RiceDeltaEncoding
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
RiceDeltaEncoding
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kEncodedDataFieldNumber
=
4
kFirstValueFieldNumber
=
1
kRiceParameterFieldNumber
=
2
kNumEntriesFieldNumber
=
3
}
;
bool
has_encoded_data
(
)
const
;
private
:
bool
_internal_has_encoded_data
(
)
const
;
public
:
void
clear_encoded_data
(
)
;
const
std
:
:
string
&
encoded_data
(
)
const
;
void
set_encoded_data
(
const
std
:
:
string
&
value
)
;
void
set_encoded_data
(
std
:
:
string
&
&
value
)
;
void
set_encoded_data
(
const
char
*
value
)
;
void
set_encoded_data
(
const
void
*
value
size_t
size
)
;
std
:
:
string
*
mutable_encoded_data
(
)
;
std
:
:
string
*
release_encoded_data
(
)
;
void
set_allocated_encoded_data
(
std
:
:
string
*
encoded_data
)
;
private
:
const
std
:
:
string
&
_internal_encoded_data
(
)
const
;
void
_internal_set_encoded_data
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_encoded_data
(
)
;
public
:
bool
has_first_value
(
)
const
;
private
:
bool
_internal_has_first_value
(
)
const
;
public
:
void
clear_first_value
(
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
first_value
(
)
const
;
void
set_first_value
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
value
)
;
private
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
_internal_first_value
(
)
const
;
void
_internal_set_first_value
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
value
)
;
public
:
bool
has_rice_parameter
(
)
const
;
private
:
bool
_internal_has_rice_parameter
(
)
const
;
public
:
void
clear_rice_parameter
(
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
rice_parameter
(
)
const
;
void
set_rice_parameter
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
private
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
_internal_rice_parameter
(
)
const
;
void
_internal_set_rice_parameter
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
public
:
bool
has_num_entries
(
)
const
;
private
:
bool
_internal_has_num_entries
(
)
const
;
public
:
void
clear_num_entries
(
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
num_entries
(
)
const
;
void
set_num_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
private
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
_internal_num_entries
(
)
const
;
void
_internal_set_num_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
encoded_data_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
first_value_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
rice_parameter_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
num_entries_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ThreatEntryMetadata_MetadataEntry
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatEntryMetadata_MetadataEntry
(
)
;
virtual
~
ThreatEntryMetadata_MetadataEntry
(
)
;
ThreatEntryMetadata_MetadataEntry
(
const
ThreatEntryMetadata_MetadataEntry
&
from
)
;
ThreatEntryMetadata_MetadataEntry
(
ThreatEntryMetadata_MetadataEntry
&
&
from
)
noexcept
:
ThreatEntryMetadata_MetadataEntry
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatEntryMetadata_MetadataEntry
&
operator
=
(
const
ThreatEntryMetadata_MetadataEntry
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatEntryMetadata_MetadataEntry
&
operator
=
(
ThreatEntryMetadata_MetadataEntry
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatEntryMetadata_MetadataEntry
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatEntryMetadata_MetadataEntry
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatEntryMetadata_MetadataEntry
*
>
(
&
_ThreatEntryMetadata_MetadataEntry_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
22
;
friend
void
swap
(
ThreatEntryMetadata_MetadataEntry
&
a
ThreatEntryMetadata_MetadataEntry
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatEntryMetadata_MetadataEntry
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatEntryMetadata_MetadataEntry
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatEntryMetadata_MetadataEntry
>
(
nullptr
)
;
}
ThreatEntryMetadata_MetadataEntry
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatEntryMetadata_MetadataEntry
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatEntryMetadata_MetadataEntry
&
from
)
;
void
MergeFrom
(
const
ThreatEntryMetadata_MetadataEntry
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatEntryMetadata_MetadataEntry
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatEntryMetadata
.
MetadataEntry
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kKeyFieldNumber
=
1
kValueFieldNumber
=
2
}
;
bool
has_key
(
)
const
;
private
:
bool
_internal_has_key
(
)
const
;
public
:
void
clear_key
(
)
;
const
std
:
:
string
&
key
(
)
const
;
void
set_key
(
const
std
:
:
string
&
value
)
;
void
set_key
(
std
:
:
string
&
&
value
)
;
void
set_key
(
const
char
*
value
)
;
void
set_key
(
const
void
*
value
size_t
size
)
;
std
:
:
string
*
mutable_key
(
)
;
std
:
:
string
*
release_key
(
)
;
void
set_allocated_key
(
std
:
:
string
*
key
)
;
private
:
const
std
:
:
string
&
_internal_key
(
)
const
;
void
_internal_set_key
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_key
(
)
;
public
:
bool
has_value
(
)
const
;
private
:
bool
_internal_has_value
(
)
const
;
public
:
void
clear_value
(
)
;
const
std
:
:
string
&
value
(
)
const
;
void
set_value
(
const
std
:
:
string
&
value
)
;
void
set_value
(
std
:
:
string
&
&
value
)
;
void
set_value
(
const
char
*
value
)
;
void
set_value
(
const
void
*
value
size_t
size
)
;
std
:
:
string
*
mutable_value
(
)
;
std
:
:
string
*
release_value
(
)
;
void
set_allocated_value
(
std
:
:
string
*
value
)
;
private
:
const
std
:
:
string
&
_internal_value
(
)
const
;
void
_internal_set_value
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_value
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
key_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
value_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ThreatEntryMetadata
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatEntryMetadata
(
)
;
virtual
~
ThreatEntryMetadata
(
)
;
ThreatEntryMetadata
(
const
ThreatEntryMetadata
&
from
)
;
ThreatEntryMetadata
(
ThreatEntryMetadata
&
&
from
)
noexcept
:
ThreatEntryMetadata
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatEntryMetadata
&
operator
=
(
const
ThreatEntryMetadata
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatEntryMetadata
&
operator
=
(
ThreatEntryMetadata
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatEntryMetadata
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatEntryMetadata
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatEntryMetadata
*
>
(
&
_ThreatEntryMetadata_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
23
;
friend
void
swap
(
ThreatEntryMetadata
&
a
ThreatEntryMetadata
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatEntryMetadata
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatEntryMetadata
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatEntryMetadata
>
(
nullptr
)
;
}
ThreatEntryMetadata
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatEntryMetadata
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatEntryMetadata
&
from
)
;
void
MergeFrom
(
const
ThreatEntryMetadata
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatEntryMetadata
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatEntryMetadata
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
typedef
ThreatEntryMetadata_MetadataEntry
MetadataEntry
;
enum
:
int
{
kEntriesFieldNumber
=
1
}
;
int
entries_size
(
)
const
;
private
:
int
_internal_entries_size
(
)
const
;
public
:
void
clear_entries
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
*
mutable_entries
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
>
*
mutable_entries
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
&
_internal_entries
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
*
_internal_add_entries
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
&
entries
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
*
add_entries
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
>
&
entries
(
)
const
;
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
>
entries_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ThreatListDescriptor
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ThreatListDescriptor
(
)
;
virtual
~
ThreatListDescriptor
(
)
;
ThreatListDescriptor
(
const
ThreatListDescriptor
&
from
)
;
ThreatListDescriptor
(
ThreatListDescriptor
&
&
from
)
noexcept
:
ThreatListDescriptor
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ThreatListDescriptor
&
operator
=
(
const
ThreatListDescriptor
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ThreatListDescriptor
&
operator
=
(
ThreatListDescriptor
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ThreatListDescriptor
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ThreatListDescriptor
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ThreatListDescriptor
*
>
(
&
_ThreatListDescriptor_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
24
;
friend
void
swap
(
ThreatListDescriptor
&
a
ThreatListDescriptor
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ThreatListDescriptor
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ThreatListDescriptor
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ThreatListDescriptor
>
(
nullptr
)
;
}
ThreatListDescriptor
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ThreatListDescriptor
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ThreatListDescriptor
&
from
)
;
void
MergeFrom
(
const
ThreatListDescriptor
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ThreatListDescriptor
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ThreatListDescriptor
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kThreatTypeFieldNumber
=
1
kPlatformTypeFieldNumber
=
2
kThreatEntryTypeFieldNumber
=
3
}
;
bool
has_threat_type
(
)
const
;
private
:
bool
_internal_has_threat_type
(
)
const
;
public
:
void
clear_threat_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
threat_type
(
)
const
;
void
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
_internal_threat_type
(
)
const
;
void
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
;
public
:
bool
has_platform_type
(
)
const
;
private
:
bool
_internal_has_platform_type
(
)
const
;
public
:
void
clear_platform_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
platform_type
(
)
const
;
void
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
_internal_platform_type
(
)
const
;
void
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
;
public
:
bool
has_threat_entry_type
(
)
const
;
private
:
bool
_internal_has_threat_entry_type
(
)
const
;
public
:
void
clear_threat_entry_type
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
threat_entry_type
(
)
const
;
void
set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
private
:
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
_internal_threat_entry_type
(
)
const
;
void
_internal_set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
int
threat_type_
;
int
platform_type_
;
int
threat_entry_type_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
ListThreatListsResponse
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
ListThreatListsResponse
(
)
;
virtual
~
ListThreatListsResponse
(
)
;
ListThreatListsResponse
(
const
ListThreatListsResponse
&
from
)
;
ListThreatListsResponse
(
ListThreatListsResponse
&
&
from
)
noexcept
:
ListThreatListsResponse
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
ListThreatListsResponse
&
operator
=
(
const
ListThreatListsResponse
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
ListThreatListsResponse
&
operator
=
(
ListThreatListsResponse
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
ListThreatListsResponse
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
ListThreatListsResponse
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
ListThreatListsResponse
*
>
(
&
_ListThreatListsResponse_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
25
;
friend
void
swap
(
ListThreatListsResponse
&
a
ListThreatListsResponse
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
ListThreatListsResponse
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
ListThreatListsResponse
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
ListThreatListsResponse
>
(
nullptr
)
;
}
ListThreatListsResponse
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
ListThreatListsResponse
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
ListThreatListsResponse
&
from
)
;
void
MergeFrom
(
const
ListThreatListsResponse
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
ListThreatListsResponse
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
ListThreatListsResponse
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kThreatListsFieldNumber
=
1
}
;
int
threat_lists_size
(
)
const
;
private
:
int
_internal_threat_lists_size
(
)
const
;
public
:
void
clear_threat_lists
(
)
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
*
mutable_threat_lists
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
>
*
mutable_threat_lists
(
)
;
private
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
&
_internal_threat_lists
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
*
_internal_add_threat_lists
(
)
;
public
:
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
&
threat_lists
(
int
index
)
const
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
*
add_threat_lists
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
>
&
threat_lists
(
)
const
;
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
>
threat_lists_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
class
Duration
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
{
public
:
Duration
(
)
;
virtual
~
Duration
(
)
;
Duration
(
const
Duration
&
from
)
;
Duration
(
Duration
&
&
from
)
noexcept
:
Duration
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
Duration
&
operator
=
(
const
Duration
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
Duration
&
operator
=
(
Duration
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
inline
const
std
:
:
string
&
unknown_fields
(
)
const
{
return
_internal_metadata_
.
unknown_fields
(
)
;
}
inline
std
:
:
string
*
mutable_unknown_fields
(
)
{
return
_internal_metadata_
.
mutable_unknown_fields
(
)
;
}
static
const
Duration
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
Duration
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
Duration
*
>
(
&
_Duration_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
26
;
friend
void
swap
(
Duration
&
a
Duration
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
Duration
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
Duration
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
Duration
>
(
nullptr
)
;
}
Duration
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
Duration
>
(
arena
)
;
}
void
CheckTypeAndMergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
&
from
)
final
;
void
CopyFrom
(
const
Duration
&
from
)
;
void
MergeFrom
(
const
Duration
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
void
DiscardUnknownFields
(
)
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
;
void
InternalSwap
(
Duration
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
mozilla
.
safebrowsing
.
Duration
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
std
:
:
string
GetTypeName
(
)
const
final
;
enum
:
int
{
kSecondsFieldNumber
=
1
kNanosFieldNumber
=
2
}
;
bool
has_seconds
(
)
const
;
private
:
bool
_internal_has_seconds
(
)
const
;
public
:
void
clear_seconds
(
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
seconds
(
)
const
;
void
set_seconds
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
value
)
;
private
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
_internal_seconds
(
)
const
;
void
_internal_set_seconds
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
value
)
;
public
:
bool
has_nanos
(
)
const
;
private
:
bool
_internal_has_nanos
(
)
const
;
public
:
void
clear_nanos
(
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
nanos
(
)
const
;
void
set_nanos
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
private
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
_internal_nanos
(
)
const
;
void
_internal_set_nanos
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArenaLite
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
HasBits
<
1
>
_has_bits_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
seconds_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
nanos_
;
friend
struct
:
:
TableStruct_safebrowsing_2eproto
;
}
;
#
ifdef
__GNUC__
#
pragma
GCC
diagnostic
push
#
pragma
GCC
diagnostic
ignored
"
-
Wstrict
-
aliasing
"
#
endif
inline
int
ThreatInfo
:
:
_internal_threat_types_size
(
)
const
{
return
threat_types_
.
size
(
)
;
}
inline
int
ThreatInfo
:
:
threat_types_size
(
)
const
{
return
_internal_threat_types_size
(
)
;
}
inline
void
ThreatInfo
:
:
clear_threat_types
(
)
{
threat_types_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
ThreatInfo
:
:
_internal_threat_types
(
int
index
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
>
(
threat_types_
.
Get
(
index
)
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
ThreatInfo
:
:
threat_types
(
int
index
)
const
{
return
_internal_threat_types
(
index
)
;
}
inline
void
ThreatInfo
:
:
set_threat_types
(
int
index
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType_IsValid
(
value
)
)
;
threat_types_
.
Set
(
index
value
)
;
}
inline
void
ThreatInfo
:
:
_internal_add_threat_types
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType_IsValid
(
value
)
)
;
threat_types_
.
Add
(
value
)
;
}
inline
void
ThreatInfo
:
:
add_threat_types
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
_internal_add_threat_types
(
value
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
&
ThreatInfo
:
:
threat_types
(
)
const
{
return
threat_types_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
ThreatInfo
:
:
_internal_mutable_threat_types
(
)
{
return
&
threat_types_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
ThreatInfo
:
:
mutable_threat_types
(
)
{
return
_internal_mutable_threat_types
(
)
;
}
inline
int
ThreatInfo
:
:
_internal_platform_types_size
(
)
const
{
return
platform_types_
.
size
(
)
;
}
inline
int
ThreatInfo
:
:
platform_types_size
(
)
const
{
return
_internal_platform_types_size
(
)
;
}
inline
void
ThreatInfo
:
:
clear_platform_types
(
)
{
platform_types_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
ThreatInfo
:
:
_internal_platform_types
(
int
index
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
>
(
platform_types_
.
Get
(
index
)
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
ThreatInfo
:
:
platform_types
(
int
index
)
const
{
return
_internal_platform_types
(
index
)
;
}
inline
void
ThreatInfo
:
:
set_platform_types
(
int
index
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType_IsValid
(
value
)
)
;
platform_types_
.
Set
(
index
value
)
;
}
inline
void
ThreatInfo
:
:
_internal_add_platform_types
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType_IsValid
(
value
)
)
;
platform_types_
.
Add
(
value
)
;
}
inline
void
ThreatInfo
:
:
add_platform_types
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
_internal_add_platform_types
(
value
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
&
ThreatInfo
:
:
platform_types
(
)
const
{
return
platform_types_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
ThreatInfo
:
:
_internal_mutable_platform_types
(
)
{
return
&
platform_types_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
ThreatInfo
:
:
mutable_platform_types
(
)
{
return
_internal_mutable_platform_types
(
)
;
}
inline
int
ThreatInfo
:
:
_internal_threat_entry_types_size
(
)
const
{
return
threat_entry_types_
.
size
(
)
;
}
inline
int
ThreatInfo
:
:
threat_entry_types_size
(
)
const
{
return
_internal_threat_entry_types_size
(
)
;
}
inline
void
ThreatInfo
:
:
clear_threat_entry_types
(
)
{
threat_entry_types_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
ThreatInfo
:
:
_internal_threat_entry_types
(
int
index
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
>
(
threat_entry_types_
.
Get
(
index
)
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
ThreatInfo
:
:
threat_entry_types
(
int
index
)
const
{
return
_internal_threat_entry_types
(
index
)
;
}
inline
void
ThreatInfo
:
:
set_threat_entry_types
(
int
index
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType_IsValid
(
value
)
)
;
threat_entry_types_
.
Set
(
index
value
)
;
}
inline
void
ThreatInfo
:
:
_internal_add_threat_entry_types
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType_IsValid
(
value
)
)
;
threat_entry_types_
.
Add
(
value
)
;
}
inline
void
ThreatInfo
:
:
add_threat_entry_types
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
_internal_add_threat_entry_types
(
value
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
&
ThreatInfo
:
:
threat_entry_types
(
)
const
{
return
threat_entry_types_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
ThreatInfo
:
:
_internal_mutable_threat_entry_types
(
)
{
return
&
threat_entry_types_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
ThreatInfo
:
:
mutable_threat_entry_types
(
)
{
return
_internal_mutable_threat_entry_types
(
)
;
}
inline
int
ThreatInfo
:
:
_internal_threat_entries_size
(
)
const
{
return
threat_entries_
.
size
(
)
;
}
inline
int
ThreatInfo
:
:
threat_entries_size
(
)
const
{
return
_internal_threat_entries_size
(
)
;
}
inline
void
ThreatInfo
:
:
clear_threat_entries
(
)
{
threat_entries_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
ThreatInfo
:
:
mutable_threat_entries
(
int
index
)
{
return
threat_entries_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
>
*
ThreatInfo
:
:
mutable_threat_entries
(
)
{
return
&
threat_entries_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
ThreatInfo
:
:
_internal_threat_entries
(
int
index
)
const
{
return
threat_entries_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
ThreatInfo
:
:
threat_entries
(
int
index
)
const
{
return
_internal_threat_entries
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
ThreatInfo
:
:
_internal_add_threat_entries
(
)
{
return
threat_entries_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
ThreatInfo
:
:
add_threat_entries
(
)
{
return
_internal_add_threat_entries
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
>
&
ThreatInfo
:
:
threat_entries
(
)
const
{
return
threat_entries_
;
}
inline
bool
ThreatMatch
:
:
_internal_has_threat_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000008u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatMatch
:
:
has_threat_type
(
)
const
{
return
_internal_has_threat_type
(
)
;
}
inline
void
ThreatMatch
:
:
clear_threat_type
(
)
{
threat_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000008u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
ThreatMatch
:
:
_internal_threat_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
>
(
threat_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
ThreatMatch
:
:
threat_type
(
)
const
{
return
_internal_threat_type
(
)
;
}
inline
void
ThreatMatch
:
:
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000008u
;
threat_type_
=
value
;
}
inline
void
ThreatMatch
:
:
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
_internal_set_threat_type
(
value
)
;
}
inline
bool
ThreatMatch
:
:
_internal_has_platform_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000010u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatMatch
:
:
has_platform_type
(
)
const
{
return
_internal_has_platform_type
(
)
;
}
inline
void
ThreatMatch
:
:
clear_platform_type
(
)
{
platform_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000010u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
ThreatMatch
:
:
_internal_platform_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
>
(
platform_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
ThreatMatch
:
:
platform_type
(
)
const
{
return
_internal_platform_type
(
)
;
}
inline
void
ThreatMatch
:
:
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000010u
;
platform_type_
=
value
;
}
inline
void
ThreatMatch
:
:
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
_internal_set_platform_type
(
value
)
;
}
inline
bool
ThreatMatch
:
:
_internal_has_threat_entry_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000020u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatMatch
:
:
has_threat_entry_type
(
)
const
{
return
_internal_has_threat_entry_type
(
)
;
}
inline
void
ThreatMatch
:
:
clear_threat_entry_type
(
)
{
threat_entry_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000020u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
ThreatMatch
:
:
_internal_threat_entry_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
>
(
threat_entry_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
ThreatMatch
:
:
threat_entry_type
(
)
const
{
return
_internal_threat_entry_type
(
)
;
}
inline
void
ThreatMatch
:
:
_internal_set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000020u
;
threat_entry_type_
=
value
;
}
inline
void
ThreatMatch
:
:
set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
_internal_set_threat_entry_type
(
value
)
;
}
inline
bool
ThreatMatch
:
:
_internal_has_threat
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
threat_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatMatch
:
:
has_threat
(
)
const
{
return
_internal_has_threat
(
)
;
}
inline
void
ThreatMatch
:
:
clear_threat
(
)
{
if
(
threat_
!
=
nullptr
)
threat_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
ThreatMatch
:
:
_internal_threat
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
p
=
threat_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ThreatEntry_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
ThreatMatch
:
:
threat
(
)
const
{
return
_internal_threat
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
ThreatMatch
:
:
release_threat
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
temp
=
threat_
;
threat_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
ThreatMatch
:
:
_internal_mutable_threat
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
if
(
threat_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
>
(
GetArenaNoVirtual
(
)
)
;
threat_
=
p
;
}
return
threat_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
ThreatMatch
:
:
mutable_threat
(
)
{
return
_internal_mutable_threat
(
)
;
}
inline
void
ThreatMatch
:
:
set_allocated_threat
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
threat
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
threat_
;
}
if
(
threat
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
threat
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
threat
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
threat_
=
threat
;
}
inline
bool
ThreatMatch
:
:
_internal_has_threat_entry_metadata
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
threat_entry_metadata_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatMatch
:
:
has_threat_entry_metadata
(
)
const
{
return
_internal_has_threat_entry_metadata
(
)
;
}
inline
void
ThreatMatch
:
:
clear_threat_entry_metadata
(
)
{
if
(
threat_entry_metadata_
!
=
nullptr
)
threat_entry_metadata_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
&
ThreatMatch
:
:
_internal_threat_entry_metadata
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
p
=
threat_entry_metadata_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ThreatEntryMetadata_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
&
ThreatMatch
:
:
threat_entry_metadata
(
)
const
{
return
_internal_threat_entry_metadata
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
ThreatMatch
:
:
release_threat_entry_metadata
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
temp
=
threat_entry_metadata_
;
threat_entry_metadata_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
ThreatMatch
:
:
_internal_mutable_threat_entry_metadata
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
if
(
threat_entry_metadata_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
>
(
GetArenaNoVirtual
(
)
)
;
threat_entry_metadata_
=
p
;
}
return
threat_entry_metadata_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
ThreatMatch
:
:
mutable_threat_entry_metadata
(
)
{
return
_internal_mutable_threat_entry_metadata
(
)
;
}
inline
void
ThreatMatch
:
:
set_allocated_threat_entry_metadata
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata
*
threat_entry_metadata
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
threat_entry_metadata_
;
}
if
(
threat_entry_metadata
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
threat_entry_metadata
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
threat_entry_metadata
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
threat_entry_metadata_
=
threat_entry_metadata
;
}
inline
bool
ThreatMatch
:
:
_internal_has_cache_duration
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000004u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
cache_duration_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatMatch
:
:
has_cache_duration
(
)
const
{
return
_internal_has_cache_duration
(
)
;
}
inline
void
ThreatMatch
:
:
clear_cache_duration
(
)
{
if
(
cache_duration_
!
=
nullptr
)
cache_duration_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
ThreatMatch
:
:
_internal_cache_duration
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
p
=
cache_duration_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_Duration_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
ThreatMatch
:
:
cache_duration
(
)
const
{
return
_internal_cache_duration
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
ThreatMatch
:
:
release_cache_duration
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000004u
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
temp
=
cache_duration_
;
cache_duration_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
ThreatMatch
:
:
_internal_mutable_cache_duration
(
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
if
(
cache_duration_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
Duration
>
(
GetArenaNoVirtual
(
)
)
;
cache_duration_
=
p
;
}
return
cache_duration_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
ThreatMatch
:
:
mutable_cache_duration
(
)
{
return
_internal_mutable_cache_duration
(
)
;
}
inline
void
ThreatMatch
:
:
set_allocated_cache_duration
(
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
cache_duration
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
cache_duration_
;
}
if
(
cache_duration
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
cache_duration
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
cache_duration
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000004u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
cache_duration_
=
cache_duration
;
}
inline
bool
FindThreatMatchesRequest
:
:
_internal_has_client
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
client_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FindThreatMatchesRequest
:
:
has_client
(
)
const
{
return
_internal_has_client
(
)
;
}
inline
void
FindThreatMatchesRequest
:
:
clear_client
(
)
{
if
(
client_
!
=
nullptr
)
client_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
FindThreatMatchesRequest
:
:
_internal_client
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
p
=
client_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ClientInfo_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
FindThreatMatchesRequest
:
:
client
(
)
const
{
return
_internal_client
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
FindThreatMatchesRequest
:
:
release_client
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
temp
=
client_
;
client_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
FindThreatMatchesRequest
:
:
_internal_mutable_client
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
if
(
client_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
>
(
GetArenaNoVirtual
(
)
)
;
client_
=
p
;
}
return
client_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
FindThreatMatchesRequest
:
:
mutable_client
(
)
{
return
_internal_mutable_client
(
)
;
}
inline
void
FindThreatMatchesRequest
:
:
set_allocated_client
(
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
client_
;
}
if
(
client
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
client
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
client
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
client_
=
client
;
}
inline
bool
FindThreatMatchesRequest
:
:
_internal_has_threat_info
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
threat_info_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FindThreatMatchesRequest
:
:
has_threat_info
(
)
const
{
return
_internal_has_threat_info
(
)
;
}
inline
void
FindThreatMatchesRequest
:
:
clear_threat_info
(
)
{
if
(
threat_info_
!
=
nullptr
)
threat_info_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
&
FindThreatMatchesRequest
:
:
_internal_threat_info
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
p
=
threat_info_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ThreatInfo_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
&
FindThreatMatchesRequest
:
:
threat_info
(
)
const
{
return
_internal_threat_info
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
FindThreatMatchesRequest
:
:
release_threat_info
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
temp
=
threat_info_
;
threat_info_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
FindThreatMatchesRequest
:
:
_internal_mutable_threat_info
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
if
(
threat_info_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
>
(
GetArenaNoVirtual
(
)
)
;
threat_info_
=
p
;
}
return
threat_info_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
FindThreatMatchesRequest
:
:
mutable_threat_info
(
)
{
return
_internal_mutable_threat_info
(
)
;
}
inline
void
FindThreatMatchesRequest
:
:
set_allocated_threat_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
threat_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
threat_info_
;
}
if
(
threat_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
threat_info
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
threat_info
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
threat_info_
=
threat_info
;
}
inline
int
FindThreatMatchesResponse
:
:
_internal_matches_size
(
)
const
{
return
matches_
.
size
(
)
;
}
inline
int
FindThreatMatchesResponse
:
:
matches_size
(
)
const
{
return
_internal_matches_size
(
)
;
}
inline
void
FindThreatMatchesResponse
:
:
clear_matches
(
)
{
matches_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
FindThreatMatchesResponse
:
:
mutable_matches
(
int
index
)
{
return
matches_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
*
FindThreatMatchesResponse
:
:
mutable_matches
(
)
{
return
&
matches_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
&
FindThreatMatchesResponse
:
:
_internal_matches
(
int
index
)
const
{
return
matches_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
&
FindThreatMatchesResponse
:
:
matches
(
int
index
)
const
{
return
_internal_matches
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
FindThreatMatchesResponse
:
:
_internal_add_matches
(
)
{
return
matches_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
FindThreatMatchesResponse
:
:
add_matches
(
)
{
return
_internal_add_matches
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
&
FindThreatMatchesResponse
:
:
matches
(
)
const
{
return
matches_
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_has_max_update_entries
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
has_max_update_entries
(
)
const
{
return
_internal_has_max_update_entries
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
clear_max_update_entries
(
)
{
max_update_entries_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_max_update_entries
(
)
const
{
return
max_update_entries_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
max_update_entries
(
)
const
{
return
_internal_max_update_entries
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_set_max_update_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
max_update_entries_
=
value
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
set_max_update_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_internal_set_max_update_entries
(
value
)
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_has_max_database_entries
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000004u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
has_max_database_entries
(
)
const
{
return
_internal_has_max_database_entries
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
clear_max_database_entries
(
)
{
max_database_entries_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_max_database_entries
(
)
const
{
return
max_database_entries_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
max_database_entries
(
)
const
{
return
_internal_max_database_entries
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_set_max_database_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
max_database_entries_
=
value
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
set_max_database_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_internal_set_max_database_entries
(
value
)
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_has_region
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
has_region
(
)
const
{
return
_internal_has_region
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
clear_region
(
)
{
region_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
region
(
)
const
{
return
_internal_region
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
set_region
(
const
std
:
:
string
&
value
)
{
_internal_set_region
(
value
)
;
}
inline
std
:
:
string
*
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
mutable_region
(
)
{
return
_internal_mutable_region
(
)
;
}
inline
const
std
:
:
string
&
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_region
(
)
const
{
return
region_
.
GetNoArena
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_set_region
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
region_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
set_region
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
region_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
set_region
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
region_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
set_region
(
const
char
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
region_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_mutable_region
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
region_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
release_region
(
)
{
if
(
!
_internal_has_region
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
region_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
set_allocated_region
(
std
:
:
string
*
region
)
{
if
(
region
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
region_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
region
)
;
}
inline
int
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_supported_compressions_size
(
)
const
{
return
supported_compressions_
.
size
(
)
;
}
inline
int
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
supported_compressions_size
(
)
const
{
return
_internal_supported_compressions_size
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
clear_supported_compressions
(
)
{
supported_compressions_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_supported_compressions
(
int
index
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
>
(
supported_compressions_
.
Get
(
index
)
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
supported_compressions
(
int
index
)
const
{
return
_internal_supported_compressions
(
index
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
set_supported_compressions
(
int
index
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType_IsValid
(
value
)
)
;
supported_compressions_
.
Set
(
index
value
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_add_supported_compressions
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType_IsValid
(
value
)
)
;
supported_compressions_
.
Add
(
value
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
add_supported_compressions
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
{
_internal_add_supported_compressions
(
value
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
&
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
supported_compressions
(
)
const
{
return
supported_compressions_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
_internal_mutable_supported_compressions
(
)
{
return
&
supported_compressions_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
int
>
*
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
:
:
mutable_supported_compressions
(
)
{
return
_internal_mutable_supported_compressions
(
)
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_has_threat_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000004u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
has_threat_type
(
)
const
{
return
_internal_has_threat_type
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
clear_threat_type
(
)
{
threat_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_threat_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
>
(
threat_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
threat_type
(
)
const
{
return
_internal_threat_type
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000004u
;
threat_type_
=
value
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
_internal_set_threat_type
(
value
)
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_has_platform_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000008u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
has_platform_type
(
)
const
{
return
_internal_has_platform_type
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
clear_platform_type
(
)
{
platform_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000008u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_platform_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
>
(
platform_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
platform_type
(
)
const
{
return
_internal_platform_type
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000008u
;
platform_type_
=
value
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
_internal_set_platform_type
(
value
)
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_has_threat_entry_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000010u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
has_threat_entry_type
(
)
const
{
return
_internal_has_threat_entry_type
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
clear_threat_entry_type
(
)
{
threat_entry_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000010u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_threat_entry_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
>
(
threat_entry_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
threat_entry_type
(
)
const
{
return
_internal_threat_entry_type
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000010u
;
threat_entry_type_
=
value
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
_internal_set_threat_entry_type
(
value
)
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_has_state
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
has_state
(
)
const
{
return
_internal_has_state
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
clear_state
(
)
{
state_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
state
(
)
const
{
return
_internal_state
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
set_state
(
const
std
:
:
string
&
value
)
{
_internal_set_state
(
value
)
;
}
inline
std
:
:
string
*
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
mutable_state
(
)
{
return
_internal_mutable_state
(
)
;
}
inline
const
std
:
:
string
&
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_state
(
)
const
{
return
state_
.
GetNoArena
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_set_state
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
state_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
set_state
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
state_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
set_state
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
state_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
set_state
(
const
void
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
state_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_mutable_state
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
state_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
release_state
(
)
{
if
(
!
_internal_has_state
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
state_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
set_allocated_state
(
std
:
:
string
*
state
)
{
if
(
state
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
state_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
state
)
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_has_constraints
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
constraints_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
has_constraints
(
)
const
{
return
_internal_has_constraints
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
clear_constraints
(
)
{
if
(
constraints_
!
=
nullptr
)
constraints_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_constraints
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
p
=
constraints_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
&
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
constraints
(
)
const
{
return
_internal_constraints
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
release_constraints
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
temp
=
constraints_
;
constraints_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
_internal_mutable_constraints
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
if
(
constraints_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
>
(
GetArenaNoVirtual
(
)
)
;
constraints_
=
p
;
}
return
constraints_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
mutable_constraints
(
)
{
return
_internal_mutable_constraints
(
)
;
}
inline
void
FetchThreatListUpdatesRequest_ListUpdateRequest
:
:
set_allocated_constraints
(
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest_Constraints
*
constraints
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
constraints_
;
}
if
(
constraints
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
constraints
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
constraints
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
constraints_
=
constraints
;
}
inline
bool
FetchThreatListUpdatesRequest
:
:
_internal_has_client
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
client_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest
:
:
has_client
(
)
const
{
return
_internal_has_client
(
)
;
}
inline
void
FetchThreatListUpdatesRequest
:
:
clear_client
(
)
{
if
(
client_
!
=
nullptr
)
client_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
FetchThreatListUpdatesRequest
:
:
_internal_client
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
p
=
client_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ClientInfo_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
FetchThreatListUpdatesRequest
:
:
client
(
)
const
{
return
_internal_client
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
FetchThreatListUpdatesRequest
:
:
release_client
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
temp
=
client_
;
client_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
FetchThreatListUpdatesRequest
:
:
_internal_mutable_client
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
if
(
client_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
>
(
GetArenaNoVirtual
(
)
)
;
client_
=
p
;
}
return
client_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
FetchThreatListUpdatesRequest
:
:
mutable_client
(
)
{
return
_internal_mutable_client
(
)
;
}
inline
void
FetchThreatListUpdatesRequest
:
:
set_allocated_client
(
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
client_
;
}
if
(
client
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
client
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
client
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
client_
=
client
;
}
inline
int
FetchThreatListUpdatesRequest
:
:
_internal_list_update_requests_size
(
)
const
{
return
list_update_requests_
.
size
(
)
;
}
inline
int
FetchThreatListUpdatesRequest
:
:
list_update_requests_size
(
)
const
{
return
_internal_list_update_requests_size
(
)
;
}
inline
void
FetchThreatListUpdatesRequest
:
:
clear_list_update_requests
(
)
{
list_update_requests_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
*
FetchThreatListUpdatesRequest
:
:
mutable_list_update_requests
(
int
index
)
{
return
list_update_requests_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
>
*
FetchThreatListUpdatesRequest
:
:
mutable_list_update_requests
(
)
{
return
&
list_update_requests_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
&
FetchThreatListUpdatesRequest
:
:
_internal_list_update_requests
(
int
index
)
const
{
return
list_update_requests_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
&
FetchThreatListUpdatesRequest
:
:
list_update_requests
(
int
index
)
const
{
return
_internal_list_update_requests
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
*
FetchThreatListUpdatesRequest
:
:
_internal_add_list_update_requests
(
)
{
return
list_update_requests_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
*
FetchThreatListUpdatesRequest
:
:
add_list_update_requests
(
)
{
return
_internal_add_list_update_requests
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesRequest_ListUpdateRequest
>
&
FetchThreatListUpdatesRequest
:
:
list_update_requests
(
)
const
{
return
list_update_requests_
;
}
inline
bool
FetchThreatListUpdatesRequest
:
:
_internal_has_chrome_client_info
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
chrome_client_info_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FetchThreatListUpdatesRequest
:
:
has_chrome_client_info
(
)
const
{
return
_internal_has_chrome_client_info
(
)
;
}
inline
void
FetchThreatListUpdatesRequest
:
:
clear_chrome_client_info
(
)
{
if
(
chrome_client_info_
!
=
nullptr
)
chrome_client_info_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
&
FetchThreatListUpdatesRequest
:
:
_internal_chrome_client_info
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
p
=
chrome_client_info_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ChromeClientInfo_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
&
FetchThreatListUpdatesRequest
:
:
chrome_client_info
(
)
const
{
return
_internal_chrome_client_info
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
FetchThreatListUpdatesRequest
:
:
release_chrome_client_info
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
temp
=
chrome_client_info_
;
chrome_client_info_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
FetchThreatListUpdatesRequest
:
:
_internal_mutable_chrome_client_info
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
if
(
chrome_client_info_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
>
(
GetArenaNoVirtual
(
)
)
;
chrome_client_info_
=
p
;
}
return
chrome_client_info_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
FetchThreatListUpdatesRequest
:
:
mutable_chrome_client_info
(
)
{
return
_internal_mutable_chrome_client_info
(
)
;
}
inline
void
FetchThreatListUpdatesRequest
:
:
set_allocated_chrome_client_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo
*
chrome_client_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
chrome_client_info_
;
}
if
(
chrome_client_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
chrome_client_info
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
chrome_client_info
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
chrome_client_info_
=
chrome_client_info
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_has_threat_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000004u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
has_threat_type
(
)
const
{
return
_internal_has_threat_type
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
clear_threat_type
(
)
{
threat_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_threat_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
>
(
threat_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
threat_type
(
)
const
{
return
_internal_threat_type
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000004u
;
threat_type_
=
value
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
_internal_set_threat_type
(
value
)
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_has_threat_entry_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000008u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
has_threat_entry_type
(
)
const
{
return
_internal_has_threat_entry_type
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
clear_threat_entry_type
(
)
{
threat_entry_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000008u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_threat_entry_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
>
(
threat_entry_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
threat_entry_type
(
)
const
{
return
_internal_threat_entry_type
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000008u
;
threat_entry_type_
=
value
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
_internal_set_threat_entry_type
(
value
)
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_has_platform_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000010u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
has_platform_type
(
)
const
{
return
_internal_has_platform_type
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
clear_platform_type
(
)
{
platform_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000010u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_platform_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
>
(
platform_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
platform_type
(
)
const
{
return
_internal_platform_type
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000010u
;
platform_type_
=
value
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
_internal_set_platform_type
(
value
)
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_has_response_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000020u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
has_response_type
(
)
const
{
return
_internal_has_response_type
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
clear_response_type
(
)
{
response_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000020u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_response_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
>
(
response_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
response_type
(
)
const
{
return
_internal_response_type
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_set_response_type
(
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000020u
;
response_type_
=
value
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_response_type
(
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
value
)
{
_internal_set_response_type
(
value
)
;
}
inline
int
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_additions_size
(
)
const
{
return
additions_
.
size
(
)
;
}
inline
int
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
additions_size
(
)
const
{
return
_internal_additions_size
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
clear_additions
(
)
{
additions_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
mutable_additions
(
int
index
)
{
return
additions_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
mutable_additions
(
)
{
return
&
additions_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_additions
(
int
index
)
const
{
return
additions_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
additions
(
int
index
)
const
{
return
_internal_additions
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_add_additions
(
)
{
return
additions_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
add_additions
(
)
{
return
_internal_add_additions
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
additions
(
)
const
{
return
additions_
;
}
inline
int
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_removals_size
(
)
const
{
return
removals_
.
size
(
)
;
}
inline
int
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
removals_size
(
)
const
{
return
_internal_removals_size
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
clear_removals
(
)
{
removals_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
mutable_removals
(
int
index
)
{
return
removals_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
mutable_removals
(
)
{
return
&
removals_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_removals
(
int
index
)
const
{
return
removals_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
removals
(
int
index
)
const
{
return
_internal_removals
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_add_removals
(
)
{
return
removals_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
add_removals
(
)
{
return
_internal_add_removals
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntrySet
>
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
removals
(
)
const
{
return
removals_
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_has_new_client_state
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
has_new_client_state
(
)
const
{
return
_internal_has_new_client_state
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
clear_new_client_state
(
)
{
new_client_state_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
new_client_state
(
)
const
{
return
_internal_new_client_state
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_new_client_state
(
const
std
:
:
string
&
value
)
{
_internal_set_new_client_state
(
value
)
;
}
inline
std
:
:
string
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
mutable_new_client_state
(
)
{
return
_internal_mutable_new_client_state
(
)
;
}
inline
const
std
:
:
string
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_new_client_state
(
)
const
{
return
new_client_state_
.
GetNoArena
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_set_new_client_state
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
new_client_state_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_new_client_state
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
new_client_state_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_new_client_state
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
new_client_state_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_new_client_state
(
const
void
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
new_client_state_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_mutable_new_client_state
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
new_client_state_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
release_new_client_state
(
)
{
if
(
!
_internal_has_new_client_state
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
new_client_state_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_allocated_new_client_state
(
std
:
:
string
*
new_client_state
)
{
if
(
new_client_state
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
new_client_state_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
new_client_state
)
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_has_checksum
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
checksum_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
has_checksum
(
)
const
{
return
_internal_has_checksum
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
clear_checksum
(
)
{
if
(
checksum_
!
=
nullptr
)
checksum_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_checksum
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
p
=
checksum_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_Checksum_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
&
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
checksum
(
)
const
{
return
_internal_checksum
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
release_checksum
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
temp
=
checksum_
;
checksum_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
_internal_mutable_checksum
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
if
(
checksum_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
>
(
GetArenaNoVirtual
(
)
)
;
checksum_
=
p
;
}
return
checksum_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
mutable_checksum
(
)
{
return
_internal_mutable_checksum
(
)
;
}
inline
void
FetchThreatListUpdatesResponse_ListUpdateResponse
:
:
set_allocated_checksum
(
:
:
mozilla
:
:
safebrowsing
:
:
Checksum
*
checksum
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
checksum_
;
}
if
(
checksum
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
checksum
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
checksum
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
checksum_
=
checksum
;
}
inline
int
FetchThreatListUpdatesResponse
:
:
_internal_list_update_responses_size
(
)
const
{
return
list_update_responses_
.
size
(
)
;
}
inline
int
FetchThreatListUpdatesResponse
:
:
list_update_responses_size
(
)
const
{
return
_internal_list_update_responses_size
(
)
;
}
inline
void
FetchThreatListUpdatesResponse
:
:
clear_list_update_responses
(
)
{
list_update_responses_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
*
FetchThreatListUpdatesResponse
:
:
mutable_list_update_responses
(
int
index
)
{
return
list_update_responses_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
>
*
FetchThreatListUpdatesResponse
:
:
mutable_list_update_responses
(
)
{
return
&
list_update_responses_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
&
FetchThreatListUpdatesResponse
:
:
_internal_list_update_responses
(
int
index
)
const
{
return
list_update_responses_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
&
FetchThreatListUpdatesResponse
:
:
list_update_responses
(
int
index
)
const
{
return
_internal_list_update_responses
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
*
FetchThreatListUpdatesResponse
:
:
_internal_add_list_update_responses
(
)
{
return
list_update_responses_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
*
FetchThreatListUpdatesResponse
:
:
add_list_update_responses
(
)
{
return
_internal_add_list_update_responses
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse
>
&
FetchThreatListUpdatesResponse
:
:
list_update_responses
(
)
const
{
return
list_update_responses_
;
}
inline
bool
FetchThreatListUpdatesResponse
:
:
_internal_has_minimum_wait_duration
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
minimum_wait_duration_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FetchThreatListUpdatesResponse
:
:
has_minimum_wait_duration
(
)
const
{
return
_internal_has_minimum_wait_duration
(
)
;
}
inline
void
FetchThreatListUpdatesResponse
:
:
clear_minimum_wait_duration
(
)
{
if
(
minimum_wait_duration_
!
=
nullptr
)
minimum_wait_duration_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
FetchThreatListUpdatesResponse
:
:
_internal_minimum_wait_duration
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
p
=
minimum_wait_duration_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_Duration_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
FetchThreatListUpdatesResponse
:
:
minimum_wait_duration
(
)
const
{
return
_internal_minimum_wait_duration
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
FetchThreatListUpdatesResponse
:
:
release_minimum_wait_duration
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
temp
=
minimum_wait_duration_
;
minimum_wait_duration_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
FetchThreatListUpdatesResponse
:
:
_internal_mutable_minimum_wait_duration
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
if
(
minimum_wait_duration_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
Duration
>
(
GetArenaNoVirtual
(
)
)
;
minimum_wait_duration_
=
p
;
}
return
minimum_wait_duration_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
FetchThreatListUpdatesResponse
:
:
mutable_minimum_wait_duration
(
)
{
return
_internal_mutable_minimum_wait_duration
(
)
;
}
inline
void
FetchThreatListUpdatesResponse
:
:
set_allocated_minimum_wait_duration
(
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
minimum_wait_duration
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
minimum_wait_duration_
;
}
if
(
minimum_wait_duration
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
minimum_wait_duration
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
minimum_wait_duration
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
minimum_wait_duration_
=
minimum_wait_duration
;
}
inline
bool
FindFullHashesRequest
:
:
_internal_has_client
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
client_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FindFullHashesRequest
:
:
has_client
(
)
const
{
return
_internal_has_client
(
)
;
}
inline
void
FindFullHashesRequest
:
:
clear_client
(
)
{
if
(
client_
!
=
nullptr
)
client_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
FindFullHashesRequest
:
:
_internal_client
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
p
=
client_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ClientInfo_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
FindFullHashesRequest
:
:
client
(
)
const
{
return
_internal_client
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
FindFullHashesRequest
:
:
release_client
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
temp
=
client_
;
client_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
FindFullHashesRequest
:
:
_internal_mutable_client
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
if
(
client_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
>
(
GetArenaNoVirtual
(
)
)
;
client_
=
p
;
}
return
client_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
FindFullHashesRequest
:
:
mutable_client
(
)
{
return
_internal_mutable_client
(
)
;
}
inline
void
FindFullHashesRequest
:
:
set_allocated_client
(
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
client_
;
}
if
(
client
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
client
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
client
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
client_
=
client
;
}
inline
int
FindFullHashesRequest
:
:
_internal_client_states_size
(
)
const
{
return
client_states_
.
size
(
)
;
}
inline
int
FindFullHashesRequest
:
:
client_states_size
(
)
const
{
return
_internal_client_states_size
(
)
;
}
inline
void
FindFullHashesRequest
:
:
clear_client_states
(
)
{
client_states_
.
Clear
(
)
;
}
inline
std
:
:
string
*
FindFullHashesRequest
:
:
add_client_states
(
)
{
return
_internal_add_client_states
(
)
;
}
inline
const
std
:
:
string
&
FindFullHashesRequest
:
:
_internal_client_states
(
int
index
)
const
{
return
client_states_
.
Get
(
index
)
;
}
inline
const
std
:
:
string
&
FindFullHashesRequest
:
:
client_states
(
int
index
)
const
{
return
_internal_client_states
(
index
)
;
}
inline
std
:
:
string
*
FindFullHashesRequest
:
:
mutable_client_states
(
int
index
)
{
return
client_states_
.
Mutable
(
index
)
;
}
inline
void
FindFullHashesRequest
:
:
set_client_states
(
int
index
const
std
:
:
string
&
value
)
{
client_states_
.
Mutable
(
index
)
-
>
assign
(
value
)
;
}
inline
void
FindFullHashesRequest
:
:
set_client_states
(
int
index
std
:
:
string
&
&
value
)
{
client_states_
.
Mutable
(
index
)
-
>
assign
(
std
:
:
move
(
value
)
)
;
}
inline
void
FindFullHashesRequest
:
:
set_client_states
(
int
index
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
client_states_
.
Mutable
(
index
)
-
>
assign
(
value
)
;
}
inline
void
FindFullHashesRequest
:
:
set_client_states
(
int
index
const
void
*
value
size_t
size
)
{
client_states_
.
Mutable
(
index
)
-
>
assign
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
;
}
inline
std
:
:
string
*
FindFullHashesRequest
:
:
_internal_add_client_states
(
)
{
return
client_states_
.
Add
(
)
;
}
inline
void
FindFullHashesRequest
:
:
add_client_states
(
const
std
:
:
string
&
value
)
{
client_states_
.
Add
(
)
-
>
assign
(
value
)
;
}
inline
void
FindFullHashesRequest
:
:
add_client_states
(
std
:
:
string
&
&
value
)
{
client_states_
.
Add
(
std
:
:
move
(
value
)
)
;
}
inline
void
FindFullHashesRequest
:
:
add_client_states
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
client_states_
.
Add
(
)
-
>
assign
(
value
)
;
}
inline
void
FindFullHashesRequest
:
:
add_client_states
(
const
void
*
value
size_t
size
)
{
client_states_
.
Add
(
)
-
>
assign
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
std
:
:
string
>
&
FindFullHashesRequest
:
:
client_states
(
)
const
{
return
client_states_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
std
:
:
string
>
*
FindFullHashesRequest
:
:
mutable_client_states
(
)
{
return
&
client_states_
;
}
inline
bool
FindFullHashesRequest
:
:
_internal_has_threat_info
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
threat_info_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FindFullHashesRequest
:
:
has_threat_info
(
)
const
{
return
_internal_has_threat_info
(
)
;
}
inline
void
FindFullHashesRequest
:
:
clear_threat_info
(
)
{
if
(
threat_info_
!
=
nullptr
)
threat_info_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
&
FindFullHashesRequest
:
:
_internal_threat_info
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
p
=
threat_info_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ThreatInfo_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
&
FindFullHashesRequest
:
:
threat_info
(
)
const
{
return
_internal_threat_info
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
FindFullHashesRequest
:
:
release_threat_info
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
temp
=
threat_info_
;
threat_info_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
FindFullHashesRequest
:
:
_internal_mutable_threat_info
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
if
(
threat_info_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
>
(
GetArenaNoVirtual
(
)
)
;
threat_info_
=
p
;
}
return
threat_info_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
FindFullHashesRequest
:
:
mutable_threat_info
(
)
{
return
_internal_mutable_threat_info
(
)
;
}
inline
void
FindFullHashesRequest
:
:
set_allocated_threat_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatInfo
*
threat_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
threat_info_
;
}
if
(
threat_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
threat_info
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
threat_info
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
threat_info_
=
threat_info
;
}
inline
int
FindFullHashesResponse
:
:
_internal_matches_size
(
)
const
{
return
matches_
.
size
(
)
;
}
inline
int
FindFullHashesResponse
:
:
matches_size
(
)
const
{
return
_internal_matches_size
(
)
;
}
inline
void
FindFullHashesResponse
:
:
clear_matches
(
)
{
matches_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
FindFullHashesResponse
:
:
mutable_matches
(
int
index
)
{
return
matches_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
*
FindFullHashesResponse
:
:
mutable_matches
(
)
{
return
&
matches_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
&
FindFullHashesResponse
:
:
_internal_matches
(
int
index
)
const
{
return
matches_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
&
FindFullHashesResponse
:
:
matches
(
int
index
)
const
{
return
_internal_matches
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
FindFullHashesResponse
:
:
_internal_add_matches
(
)
{
return
matches_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
*
FindFullHashesResponse
:
:
add_matches
(
)
{
return
_internal_add_matches
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatMatch
>
&
FindFullHashesResponse
:
:
matches
(
)
const
{
return
matches_
;
}
inline
bool
FindFullHashesResponse
:
:
_internal_has_minimum_wait_duration
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
minimum_wait_duration_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FindFullHashesResponse
:
:
has_minimum_wait_duration
(
)
const
{
return
_internal_has_minimum_wait_duration
(
)
;
}
inline
void
FindFullHashesResponse
:
:
clear_minimum_wait_duration
(
)
{
if
(
minimum_wait_duration_
!
=
nullptr
)
minimum_wait_duration_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
FindFullHashesResponse
:
:
_internal_minimum_wait_duration
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
p
=
minimum_wait_duration_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_Duration_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
FindFullHashesResponse
:
:
minimum_wait_duration
(
)
const
{
return
_internal_minimum_wait_duration
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
FindFullHashesResponse
:
:
release_minimum_wait_duration
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
temp
=
minimum_wait_duration_
;
minimum_wait_duration_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
FindFullHashesResponse
:
:
_internal_mutable_minimum_wait_duration
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
if
(
minimum_wait_duration_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
Duration
>
(
GetArenaNoVirtual
(
)
)
;
minimum_wait_duration_
=
p
;
}
return
minimum_wait_duration_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
FindFullHashesResponse
:
:
mutable_minimum_wait_duration
(
)
{
return
_internal_mutable_minimum_wait_duration
(
)
;
}
inline
void
FindFullHashesResponse
:
:
set_allocated_minimum_wait_duration
(
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
minimum_wait_duration
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
minimum_wait_duration_
;
}
if
(
minimum_wait_duration
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
minimum_wait_duration
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
minimum_wait_duration
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
minimum_wait_duration_
=
minimum_wait_duration
;
}
inline
bool
FindFullHashesResponse
:
:
_internal_has_negative_cache_duration
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
negative_cache_duration_
!
=
nullptr
)
;
return
value
;
}
inline
bool
FindFullHashesResponse
:
:
has_negative_cache_duration
(
)
const
{
return
_internal_has_negative_cache_duration
(
)
;
}
inline
void
FindFullHashesResponse
:
:
clear_negative_cache_duration
(
)
{
if
(
negative_cache_duration_
!
=
nullptr
)
negative_cache_duration_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
FindFullHashesResponse
:
:
_internal_negative_cache_duration
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
p
=
negative_cache_duration_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_Duration_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
Duration
&
FindFullHashesResponse
:
:
negative_cache_duration
(
)
const
{
return
_internal_negative_cache_duration
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
FindFullHashesResponse
:
:
release_negative_cache_duration
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
temp
=
negative_cache_duration_
;
negative_cache_duration_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
FindFullHashesResponse
:
:
_internal_mutable_negative_cache_duration
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
if
(
negative_cache_duration_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
Duration
>
(
GetArenaNoVirtual
(
)
)
;
negative_cache_duration_
=
p
;
}
return
negative_cache_duration_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
FindFullHashesResponse
:
:
mutable_negative_cache_duration
(
)
{
return
_internal_mutable_negative_cache_duration
(
)
;
}
inline
void
FindFullHashesResponse
:
:
set_allocated_negative_cache_duration
(
:
:
mozilla
:
:
safebrowsing
:
:
Duration
*
negative_cache_duration
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
negative_cache_duration_
;
}
if
(
negative_cache_duration
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
negative_cache_duration
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
negative_cache_duration
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
negative_cache_duration_
=
negative_cache_duration
;
}
inline
bool
ThreatHit_ThreatSource
:
:
_internal_has_url
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatHit_ThreatSource
:
:
has_url
(
)
const
{
return
_internal_has_url
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
clear_url
(
)
{
url_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
ThreatHit_ThreatSource
:
:
url
(
)
const
{
return
_internal_url
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_url
(
const
std
:
:
string
&
value
)
{
_internal_set_url
(
value
)
;
}
inline
std
:
:
string
*
ThreatHit_ThreatSource
:
:
mutable_url
(
)
{
return
_internal_mutable_url
(
)
;
}
inline
const
std
:
:
string
&
ThreatHit_ThreatSource
:
:
_internal_url
(
)
const
{
return
url_
.
GetNoArena
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
_internal_set_url
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_url
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_url
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_url
(
const
char
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ThreatHit_ThreatSource
:
:
_internal_mutable_url
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
url_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ThreatHit_ThreatSource
:
:
release_url
(
)
{
if
(
!
_internal_has_url
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
url_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_allocated_url
(
std
:
:
string
*
url
)
{
if
(
url
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
url_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
url
)
;
}
inline
bool
ThreatHit_ThreatSource
:
:
_internal_has_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000008u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatHit_ThreatSource
:
:
has_type
(
)
const
{
return
_internal_has_type
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
clear_type
(
)
{
type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000008u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
ThreatHit_ThreatSource
:
:
_internal_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
>
(
type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
ThreatHit_ThreatSource
:
:
type
(
)
const
{
return
_internal_type
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
_internal_set_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000008u
;
type_
=
value
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
value
)
{
_internal_set_type
(
value
)
;
}
inline
bool
ThreatHit_ThreatSource
:
:
_internal_has_remote_ip
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatHit_ThreatSource
:
:
has_remote_ip
(
)
const
{
return
_internal_has_remote_ip
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
clear_remote_ip
(
)
{
remote_ip_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
std
:
:
string
&
ThreatHit_ThreatSource
:
:
remote_ip
(
)
const
{
return
_internal_remote_ip
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_remote_ip
(
const
std
:
:
string
&
value
)
{
_internal_set_remote_ip
(
value
)
;
}
inline
std
:
:
string
*
ThreatHit_ThreatSource
:
:
mutable_remote_ip
(
)
{
return
_internal_mutable_remote_ip
(
)
;
}
inline
const
std
:
:
string
&
ThreatHit_ThreatSource
:
:
_internal_remote_ip
(
)
const
{
return
remote_ip_
.
GetNoArena
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
_internal_set_remote_ip
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
remote_ip_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_remote_ip
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
remote_ip_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_remote_ip
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000002u
;
remote_ip_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_remote_ip
(
const
char
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
remote_ip_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ThreatHit_ThreatSource
:
:
_internal_mutable_remote_ip
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
return
remote_ip_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ThreatHit_ThreatSource
:
:
release_remote_ip
(
)
{
if
(
!
_internal_has_remote_ip
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000002u
;
return
remote_ip_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_allocated_remote_ip
(
std
:
:
string
*
remote_ip
)
{
if
(
remote_ip
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
remote_ip_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
remote_ip
)
;
}
inline
bool
ThreatHit_ThreatSource
:
:
_internal_has_referrer
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000004u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatHit_ThreatSource
:
:
has_referrer
(
)
const
{
return
_internal_has_referrer
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
clear_referrer
(
)
{
referrer_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
inline
const
std
:
:
string
&
ThreatHit_ThreatSource
:
:
referrer
(
)
const
{
return
_internal_referrer
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_referrer
(
const
std
:
:
string
&
value
)
{
_internal_set_referrer
(
value
)
;
}
inline
std
:
:
string
*
ThreatHit_ThreatSource
:
:
mutable_referrer
(
)
{
return
_internal_mutable_referrer
(
)
;
}
inline
const
std
:
:
string
&
ThreatHit_ThreatSource
:
:
_internal_referrer
(
)
const
{
return
referrer_
.
GetNoArena
(
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
_internal_set_referrer
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
referrer_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_referrer
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
referrer_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_referrer
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000004u
;
referrer_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_referrer
(
const
char
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
referrer_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ThreatHit_ThreatSource
:
:
_internal_mutable_referrer
(
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
return
referrer_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ThreatHit_ThreatSource
:
:
release_referrer
(
)
{
if
(
!
_internal_has_referrer
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000004u
;
return
referrer_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ThreatHit_ThreatSource
:
:
set_allocated_referrer
(
std
:
:
string
*
referrer
)
{
if
(
referrer
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
referrer_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
referrer
)
;
}
inline
bool
ThreatHit_UserInfo
:
:
_internal_has_region_code
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatHit_UserInfo
:
:
has_region_code
(
)
const
{
return
_internal_has_region_code
(
)
;
}
inline
void
ThreatHit_UserInfo
:
:
clear_region_code
(
)
{
region_code_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
ThreatHit_UserInfo
:
:
region_code
(
)
const
{
return
_internal_region_code
(
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_region_code
(
const
std
:
:
string
&
value
)
{
_internal_set_region_code
(
value
)
;
}
inline
std
:
:
string
*
ThreatHit_UserInfo
:
:
mutable_region_code
(
)
{
return
_internal_mutable_region_code
(
)
;
}
inline
const
std
:
:
string
&
ThreatHit_UserInfo
:
:
_internal_region_code
(
)
const
{
return
region_code_
.
GetNoArena
(
)
;
}
inline
void
ThreatHit_UserInfo
:
:
_internal_set_region_code
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
region_code_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_region_code
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
region_code_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_region_code
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
region_code_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_region_code
(
const
char
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
region_code_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ThreatHit_UserInfo
:
:
_internal_mutable_region_code
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
region_code_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ThreatHit_UserInfo
:
:
release_region_code
(
)
{
if
(
!
_internal_has_region_code
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
region_code_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_allocated_region_code
(
std
:
:
string
*
region_code
)
{
if
(
region_code
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
region_code_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
region_code
)
;
}
inline
bool
ThreatHit_UserInfo
:
:
_internal_has_user_id
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatHit_UserInfo
:
:
has_user_id
(
)
const
{
return
_internal_has_user_id
(
)
;
}
inline
void
ThreatHit_UserInfo
:
:
clear_user_id
(
)
{
user_id_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
std
:
:
string
&
ThreatHit_UserInfo
:
:
user_id
(
)
const
{
return
_internal_user_id
(
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_user_id
(
const
std
:
:
string
&
value
)
{
_internal_set_user_id
(
value
)
;
}
inline
std
:
:
string
*
ThreatHit_UserInfo
:
:
mutable_user_id
(
)
{
return
_internal_mutable_user_id
(
)
;
}
inline
const
std
:
:
string
&
ThreatHit_UserInfo
:
:
_internal_user_id
(
)
const
{
return
user_id_
.
GetNoArena
(
)
;
}
inline
void
ThreatHit_UserInfo
:
:
_internal_set_user_id
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
user_id_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_user_id
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
user_id_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_user_id
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000002u
;
user_id_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_user_id
(
const
void
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
user_id_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ThreatHit_UserInfo
:
:
_internal_mutable_user_id
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
return
user_id_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ThreatHit_UserInfo
:
:
release_user_id
(
)
{
if
(
!
_internal_has_user_id
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000002u
;
return
user_id_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ThreatHit_UserInfo
:
:
set_allocated_user_id
(
std
:
:
string
*
user_id
)
{
if
(
user_id
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
user_id_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
user_id
)
;
}
inline
bool
ThreatHit
:
:
_internal_has_threat_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000008u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatHit
:
:
has_threat_type
(
)
const
{
return
_internal_has_threat_type
(
)
;
}
inline
void
ThreatHit
:
:
clear_threat_type
(
)
{
threat_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000008u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
ThreatHit
:
:
_internal_threat_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
>
(
threat_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
ThreatHit
:
:
threat_type
(
)
const
{
return
_internal_threat_type
(
)
;
}
inline
void
ThreatHit
:
:
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000008u
;
threat_type_
=
value
;
}
inline
void
ThreatHit
:
:
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
_internal_set_threat_type
(
value
)
;
}
inline
bool
ThreatHit
:
:
_internal_has_platform_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000010u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatHit
:
:
has_platform_type
(
)
const
{
return
_internal_has_platform_type
(
)
;
}
inline
void
ThreatHit
:
:
clear_platform_type
(
)
{
platform_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000010u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
ThreatHit
:
:
_internal_platform_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
>
(
platform_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
ThreatHit
:
:
platform_type
(
)
const
{
return
_internal_platform_type
(
)
;
}
inline
void
ThreatHit
:
:
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000010u
;
platform_type_
=
value
;
}
inline
void
ThreatHit
:
:
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
_internal_set_platform_type
(
value
)
;
}
inline
bool
ThreatHit
:
:
_internal_has_entry
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
entry_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatHit
:
:
has_entry
(
)
const
{
return
_internal_has_entry
(
)
;
}
inline
void
ThreatHit
:
:
clear_entry
(
)
{
if
(
entry_
!
=
nullptr
)
entry_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
ThreatHit
:
:
_internal_entry
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
p
=
entry_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ThreatEntry_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
&
ThreatHit
:
:
entry
(
)
const
{
return
_internal_entry
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
ThreatHit
:
:
release_entry
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
temp
=
entry_
;
entry_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
ThreatHit
:
:
_internal_mutable_entry
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
if
(
entry_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
>
(
GetArenaNoVirtual
(
)
)
;
entry_
=
p
;
}
return
entry_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
ThreatHit
:
:
mutable_entry
(
)
{
return
_internal_mutable_entry
(
)
;
}
inline
void
ThreatHit
:
:
set_allocated_entry
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntry
*
entry
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
entry_
;
}
if
(
entry
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
entry
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
entry
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
entry_
=
entry
;
}
inline
int
ThreatHit
:
:
_internal_resources_size
(
)
const
{
return
resources_
.
size
(
)
;
}
inline
int
ThreatHit
:
:
resources_size
(
)
const
{
return
_internal_resources_size
(
)
;
}
inline
void
ThreatHit
:
:
clear_resources
(
)
{
resources_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
*
ThreatHit
:
:
mutable_resources
(
int
index
)
{
return
resources_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
>
*
ThreatHit
:
:
mutable_resources
(
)
{
return
&
resources_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
&
ThreatHit
:
:
_internal_resources
(
int
index
)
const
{
return
resources_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
&
ThreatHit
:
:
resources
(
int
index
)
const
{
return
_internal_resources
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
*
ThreatHit
:
:
_internal_add_resources
(
)
{
return
resources_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
*
ThreatHit
:
:
add_resources
(
)
{
return
_internal_add_resources
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSource
>
&
ThreatHit
:
:
resources
(
)
const
{
return
resources_
;
}
inline
bool
ThreatHit
:
:
_internal_has_client_info
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
client_info_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatHit
:
:
has_client_info
(
)
const
{
return
_internal_has_client_info
(
)
;
}
inline
void
ThreatHit
:
:
clear_client_info
(
)
{
if
(
client_info_
!
=
nullptr
)
client_info_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
ThreatHit
:
:
_internal_client_info
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
p
=
client_info_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ClientInfo_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
&
ThreatHit
:
:
client_info
(
)
const
{
return
_internal_client_info
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
ThreatHit
:
:
release_client_info
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
temp
=
client_info_
;
client_info_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
ThreatHit
:
:
_internal_mutable_client_info
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
if
(
client_info_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
>
(
GetArenaNoVirtual
(
)
)
;
client_info_
=
p
;
}
return
client_info_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
ThreatHit
:
:
mutable_client_info
(
)
{
return
_internal_mutable_client_info
(
)
;
}
inline
void
ThreatHit
:
:
set_allocated_client_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ClientInfo
*
client_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
client_info_
;
}
if
(
client_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
client_info
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
client_info
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
client_info_
=
client_info
;
}
inline
bool
ThreatHit
:
:
_internal_has_user_info
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000004u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
user_info_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatHit
:
:
has_user_info
(
)
const
{
return
_internal_has_user_info
(
)
;
}
inline
void
ThreatHit
:
:
clear_user_info
(
)
{
if
(
user_info_
!
=
nullptr
)
user_info_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
&
ThreatHit
:
:
_internal_user_info
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
p
=
user_info_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_ThreatHit_UserInfo_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
&
ThreatHit
:
:
user_info
(
)
const
{
return
_internal_user_info
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
ThreatHit
:
:
release_user_info
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000004u
;
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
temp
=
user_info_
;
user_info_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
ThreatHit
:
:
_internal_mutable_user_info
(
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
if
(
user_info_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
>
(
GetArenaNoVirtual
(
)
)
;
user_info_
=
p
;
}
return
user_info_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
ThreatHit
:
:
mutable_user_info
(
)
{
return
_internal_mutable_user_info
(
)
;
}
inline
void
ThreatHit
:
:
set_allocated_user_info
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_UserInfo
*
user_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
user_info_
;
}
if
(
user_info
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
user_info
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
user_info
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000004u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
user_info_
=
user_info
;
}
inline
bool
ClientInfo
:
:
_internal_has_client_id
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
ClientInfo
:
:
has_client_id
(
)
const
{
return
_internal_has_client_id
(
)
;
}
inline
void
ClientInfo
:
:
clear_client_id
(
)
{
client_id_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
ClientInfo
:
:
client_id
(
)
const
{
return
_internal_client_id
(
)
;
}
inline
void
ClientInfo
:
:
set_client_id
(
const
std
:
:
string
&
value
)
{
_internal_set_client_id
(
value
)
;
}
inline
std
:
:
string
*
ClientInfo
:
:
mutable_client_id
(
)
{
return
_internal_mutable_client_id
(
)
;
}
inline
const
std
:
:
string
&
ClientInfo
:
:
_internal_client_id
(
)
const
{
return
client_id_
.
GetNoArena
(
)
;
}
inline
void
ClientInfo
:
:
_internal_set_client_id
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
client_id_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ClientInfo
:
:
set_client_id
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
client_id_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ClientInfo
:
:
set_client_id
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
client_id_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ClientInfo
:
:
set_client_id
(
const
char
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
client_id_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ClientInfo
:
:
_internal_mutable_client_id
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
client_id_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ClientInfo
:
:
release_client_id
(
)
{
if
(
!
_internal_has_client_id
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
client_id_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ClientInfo
:
:
set_allocated_client_id
(
std
:
:
string
*
client_id
)
{
if
(
client_id
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
client_id_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
client_id
)
;
}
inline
bool
ClientInfo
:
:
_internal_has_client_version
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
ClientInfo
:
:
has_client_version
(
)
const
{
return
_internal_has_client_version
(
)
;
}
inline
void
ClientInfo
:
:
clear_client_version
(
)
{
client_version_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
std
:
:
string
&
ClientInfo
:
:
client_version
(
)
const
{
return
_internal_client_version
(
)
;
}
inline
void
ClientInfo
:
:
set_client_version
(
const
std
:
:
string
&
value
)
{
_internal_set_client_version
(
value
)
;
}
inline
std
:
:
string
*
ClientInfo
:
:
mutable_client_version
(
)
{
return
_internal_mutable_client_version
(
)
;
}
inline
const
std
:
:
string
&
ClientInfo
:
:
_internal_client_version
(
)
const
{
return
client_version_
.
GetNoArena
(
)
;
}
inline
void
ClientInfo
:
:
_internal_set_client_version
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
client_version_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ClientInfo
:
:
set_client_version
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
client_version_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ClientInfo
:
:
set_client_version
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000002u
;
client_version_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ClientInfo
:
:
set_client_version
(
const
char
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
client_version_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ClientInfo
:
:
_internal_mutable_client_version
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
return
client_version_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ClientInfo
:
:
release_client_version
(
)
{
if
(
!
_internal_has_client_version
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000002u
;
return
client_version_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ClientInfo
:
:
set_allocated_client_version
(
std
:
:
string
*
client_version
)
{
if
(
client_version
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
client_version_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
client_version
)
;
}
inline
bool
ChromeClientInfo
:
:
_internal_has_reporting_population
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
ChromeClientInfo
:
:
has_reporting_population
(
)
const
{
return
_internal_has_reporting_population
(
)
;
}
inline
void
ChromeClientInfo
:
:
clear_reporting_population
(
)
{
reporting_population_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
ChromeClientInfo
:
:
_internal_reporting_population
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
>
(
reporting_population_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
ChromeClientInfo
:
:
reporting_population
(
)
const
{
return
_internal_reporting_population
(
)
;
}
inline
void
ChromeClientInfo
:
:
_internal_set_reporting_population
(
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
reporting_population_
=
value
;
}
inline
void
ChromeClientInfo
:
:
set_reporting_population
(
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
value
)
{
_internal_set_reporting_population
(
value
)
;
}
inline
bool
Checksum
:
:
_internal_has_sha256
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
Checksum
:
:
has_sha256
(
)
const
{
return
_internal_has_sha256
(
)
;
}
inline
void
Checksum
:
:
clear_sha256
(
)
{
sha256_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
Checksum
:
:
sha256
(
)
const
{
return
_internal_sha256
(
)
;
}
inline
void
Checksum
:
:
set_sha256
(
const
std
:
:
string
&
value
)
{
_internal_set_sha256
(
value
)
;
}
inline
std
:
:
string
*
Checksum
:
:
mutable_sha256
(
)
{
return
_internal_mutable_sha256
(
)
;
}
inline
const
std
:
:
string
&
Checksum
:
:
_internal_sha256
(
)
const
{
return
sha256_
.
GetNoArena
(
)
;
}
inline
void
Checksum
:
:
_internal_set_sha256
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
sha256_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
Checksum
:
:
set_sha256
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
sha256_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
Checksum
:
:
set_sha256
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
sha256_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
Checksum
:
:
set_sha256
(
const
void
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
sha256_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
Checksum
:
:
_internal_mutable_sha256
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
sha256_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
Checksum
:
:
release_sha256
(
)
{
if
(
!
_internal_has_sha256
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
sha256_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
Checksum
:
:
set_allocated_sha256
(
std
:
:
string
*
sha256
)
{
if
(
sha256
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
sha256_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
sha256
)
;
}
inline
bool
ThreatEntry
:
:
_internal_has_hash
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatEntry
:
:
has_hash
(
)
const
{
return
_internal_has_hash
(
)
;
}
inline
void
ThreatEntry
:
:
clear_hash
(
)
{
hash_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
ThreatEntry
:
:
hash
(
)
const
{
return
_internal_hash
(
)
;
}
inline
void
ThreatEntry
:
:
set_hash
(
const
std
:
:
string
&
value
)
{
_internal_set_hash
(
value
)
;
}
inline
std
:
:
string
*
ThreatEntry
:
:
mutable_hash
(
)
{
return
_internal_mutable_hash
(
)
;
}
inline
const
std
:
:
string
&
ThreatEntry
:
:
_internal_hash
(
)
const
{
return
hash_
.
GetNoArena
(
)
;
}
inline
void
ThreatEntry
:
:
_internal_set_hash
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
hash_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ThreatEntry
:
:
set_hash
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
hash_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ThreatEntry
:
:
set_hash
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
hash_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ThreatEntry
:
:
set_hash
(
const
void
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
hash_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ThreatEntry
:
:
_internal_mutable_hash
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
hash_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ThreatEntry
:
:
release_hash
(
)
{
if
(
!
_internal_has_hash
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
hash_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ThreatEntry
:
:
set_allocated_hash
(
std
:
:
string
*
hash
)
{
if
(
hash
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
hash_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
hash
)
;
}
inline
bool
ThreatEntry
:
:
_internal_has_url
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatEntry
:
:
has_url
(
)
const
{
return
_internal_has_url
(
)
;
}
inline
void
ThreatEntry
:
:
clear_url
(
)
{
url_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
std
:
:
string
&
ThreatEntry
:
:
url
(
)
const
{
return
_internal_url
(
)
;
}
inline
void
ThreatEntry
:
:
set_url
(
const
std
:
:
string
&
value
)
{
_internal_set_url
(
value
)
;
}
inline
std
:
:
string
*
ThreatEntry
:
:
mutable_url
(
)
{
return
_internal_mutable_url
(
)
;
}
inline
const
std
:
:
string
&
ThreatEntry
:
:
_internal_url
(
)
const
{
return
url_
.
GetNoArena
(
)
;
}
inline
void
ThreatEntry
:
:
_internal_set_url
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ThreatEntry
:
:
set_url
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ThreatEntry
:
:
set_url
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000002u
;
url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ThreatEntry
:
:
set_url
(
const
char
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ThreatEntry
:
:
_internal_mutable_url
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
return
url_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ThreatEntry
:
:
release_url
(
)
{
if
(
!
_internal_has_url
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000002u
;
return
url_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ThreatEntry
:
:
set_allocated_url
(
std
:
:
string
*
url
)
{
if
(
url
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
url_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
url
)
;
}
inline
bool
ThreatEntrySet
:
:
_internal_has_compression_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000010u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatEntrySet
:
:
has_compression_type
(
)
const
{
return
_internal_has_compression_type
(
)
;
}
inline
void
ThreatEntrySet
:
:
clear_compression_type
(
)
{
compression_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000010u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
ThreatEntrySet
:
:
_internal_compression_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
>
(
compression_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
ThreatEntrySet
:
:
compression_type
(
)
const
{
return
_internal_compression_type
(
)
;
}
inline
void
ThreatEntrySet
:
:
_internal_set_compression_type
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000010u
;
compression_type_
=
value
;
}
inline
void
ThreatEntrySet
:
:
set_compression_type
(
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
value
)
{
_internal_set_compression_type
(
value
)
;
}
inline
bool
ThreatEntrySet
:
:
_internal_has_raw_hashes
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
raw_hashes_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatEntrySet
:
:
has_raw_hashes
(
)
const
{
return
_internal_has_raw_hashes
(
)
;
}
inline
void
ThreatEntrySet
:
:
clear_raw_hashes
(
)
{
if
(
raw_hashes_
!
=
nullptr
)
raw_hashes_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
&
ThreatEntrySet
:
:
_internal_raw_hashes
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
p
=
raw_hashes_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_RawHashes_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
&
ThreatEntrySet
:
:
raw_hashes
(
)
const
{
return
_internal_raw_hashes
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
ThreatEntrySet
:
:
release_raw_hashes
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
temp
=
raw_hashes_
;
raw_hashes_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
ThreatEntrySet
:
:
_internal_mutable_raw_hashes
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
if
(
raw_hashes_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
>
(
GetArenaNoVirtual
(
)
)
;
raw_hashes_
=
p
;
}
return
raw_hashes_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
ThreatEntrySet
:
:
mutable_raw_hashes
(
)
{
return
_internal_mutable_raw_hashes
(
)
;
}
inline
void
ThreatEntrySet
:
:
set_allocated_raw_hashes
(
:
:
mozilla
:
:
safebrowsing
:
:
RawHashes
*
raw_hashes
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
raw_hashes_
;
}
if
(
raw_hashes
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
raw_hashes
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
raw_hashes
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
raw_hashes_
=
raw_hashes
;
}
inline
bool
ThreatEntrySet
:
:
_internal_has_raw_indices
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
raw_indices_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatEntrySet
:
:
has_raw_indices
(
)
const
{
return
_internal_has_raw_indices
(
)
;
}
inline
void
ThreatEntrySet
:
:
clear_raw_indices
(
)
{
if
(
raw_indices_
!
=
nullptr
)
raw_indices_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
&
ThreatEntrySet
:
:
_internal_raw_indices
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
p
=
raw_indices_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_RawIndices_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
&
ThreatEntrySet
:
:
raw_indices
(
)
const
{
return
_internal_raw_indices
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
ThreatEntrySet
:
:
release_raw_indices
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
temp
=
raw_indices_
;
raw_indices_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
ThreatEntrySet
:
:
_internal_mutable_raw_indices
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
if
(
raw_indices_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
>
(
GetArenaNoVirtual
(
)
)
;
raw_indices_
=
p
;
}
return
raw_indices_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
ThreatEntrySet
:
:
mutable_raw_indices
(
)
{
return
_internal_mutable_raw_indices
(
)
;
}
inline
void
ThreatEntrySet
:
:
set_allocated_raw_indices
(
:
:
mozilla
:
:
safebrowsing
:
:
RawIndices
*
raw_indices
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
raw_indices_
;
}
if
(
raw_indices
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
raw_indices
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
raw_indices
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
raw_indices_
=
raw_indices
;
}
inline
bool
ThreatEntrySet
:
:
_internal_has_rice_hashes
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000004u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
rice_hashes_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatEntrySet
:
:
has_rice_hashes
(
)
const
{
return
_internal_has_rice_hashes
(
)
;
}
inline
void
ThreatEntrySet
:
:
clear_rice_hashes
(
)
{
if
(
rice_hashes_
!
=
nullptr
)
rice_hashes_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
&
ThreatEntrySet
:
:
_internal_rice_hashes
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
p
=
rice_hashes_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_RiceDeltaEncoding_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
&
ThreatEntrySet
:
:
rice_hashes
(
)
const
{
return
_internal_rice_hashes
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
ThreatEntrySet
:
:
release_rice_hashes
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000004u
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
temp
=
rice_hashes_
;
rice_hashes_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
ThreatEntrySet
:
:
_internal_mutable_rice_hashes
(
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
if
(
rice_hashes_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
>
(
GetArenaNoVirtual
(
)
)
;
rice_hashes_
=
p
;
}
return
rice_hashes_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
ThreatEntrySet
:
:
mutable_rice_hashes
(
)
{
return
_internal_mutable_rice_hashes
(
)
;
}
inline
void
ThreatEntrySet
:
:
set_allocated_rice_hashes
(
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
rice_hashes
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
rice_hashes_
;
}
if
(
rice_hashes
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
rice_hashes
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
rice_hashes
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000004u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
rice_hashes_
=
rice_hashes
;
}
inline
bool
ThreatEntrySet
:
:
_internal_has_rice_indices
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000008u
)
!
=
0
;
PROTOBUF_ASSUME
(
!
value
|
|
rice_indices_
!
=
nullptr
)
;
return
value
;
}
inline
bool
ThreatEntrySet
:
:
has_rice_indices
(
)
const
{
return
_internal_has_rice_indices
(
)
;
}
inline
void
ThreatEntrySet
:
:
clear_rice_indices
(
)
{
if
(
rice_indices_
!
=
nullptr
)
rice_indices_
-
>
Clear
(
)
;
_has_bits_
[
0
]
&
=
~
0x00000008u
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
&
ThreatEntrySet
:
:
_internal_rice_indices
(
)
const
{
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
p
=
rice_indices_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
>
(
&
:
:
mozilla
:
:
safebrowsing
:
:
_RiceDeltaEncoding_default_instance_
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
&
ThreatEntrySet
:
:
rice_indices
(
)
const
{
return
_internal_rice_indices
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
ThreatEntrySet
:
:
release_rice_indices
(
)
{
_has_bits_
[
0
]
&
=
~
0x00000008u
;
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
temp
=
rice_indices_
;
rice_indices_
=
nullptr
;
return
temp
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
ThreatEntrySet
:
:
_internal_mutable_rice_indices
(
)
{
_has_bits_
[
0
]
|
=
0x00000008u
;
if
(
rice_indices_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
>
(
GetArenaNoVirtual
(
)
)
;
rice_indices_
=
p
;
}
return
rice_indices_
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
ThreatEntrySet
:
:
mutable_rice_indices
(
)
{
return
_internal_mutable_rice_indices
(
)
;
}
inline
void
ThreatEntrySet
:
:
set_allocated_rice_indices
(
:
:
mozilla
:
:
safebrowsing
:
:
RiceDeltaEncoding
*
rice_indices
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
rice_indices_
;
}
if
(
rice_indices
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
rice_indices
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
rice_indices
submessage_arena
)
;
}
_has_bits_
[
0
]
|
=
0x00000008u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000008u
;
}
rice_indices_
=
rice_indices
;
}
inline
int
RawIndices
:
:
_internal_indices_size
(
)
const
{
return
indices_
.
size
(
)
;
}
inline
int
RawIndices
:
:
indices_size
(
)
const
{
return
_internal_indices_size
(
)
;
}
inline
void
RawIndices
:
:
clear_indices
(
)
{
indices_
.
Clear
(
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
RawIndices
:
:
_internal_indices
(
int
index
)
const
{
return
indices_
.
Get
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
RawIndices
:
:
indices
(
int
index
)
const
{
return
_internal_indices
(
index
)
;
}
inline
void
RawIndices
:
:
set_indices
(
int
index
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
indices_
.
Set
(
index
value
)
;
}
inline
void
RawIndices
:
:
_internal_add_indices
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
indices_
.
Add
(
value
)
;
}
inline
void
RawIndices
:
:
add_indices
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_internal_add_indices
(
value
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
>
&
RawIndices
:
:
_internal_indices
(
)
const
{
return
indices_
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
>
&
RawIndices
:
:
indices
(
)
const
{
return
_internal_indices
(
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
>
*
RawIndices
:
:
_internal_mutable_indices
(
)
{
return
&
indices_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedField
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
>
*
RawIndices
:
:
mutable_indices
(
)
{
return
_internal_mutable_indices
(
)
;
}
inline
bool
RawHashes
:
:
_internal_has_prefix_size
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
RawHashes
:
:
has_prefix_size
(
)
const
{
return
_internal_has_prefix_size
(
)
;
}
inline
void
RawHashes
:
:
clear_prefix_size
(
)
{
prefix_size_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
RawHashes
:
:
_internal_prefix_size
(
)
const
{
return
prefix_size_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
RawHashes
:
:
prefix_size
(
)
const
{
return
_internal_prefix_size
(
)
;
}
inline
void
RawHashes
:
:
_internal_set_prefix_size
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
prefix_size_
=
value
;
}
inline
void
RawHashes
:
:
set_prefix_size
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_internal_set_prefix_size
(
value
)
;
}
inline
bool
RawHashes
:
:
_internal_has_raw_hashes
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
RawHashes
:
:
has_raw_hashes
(
)
const
{
return
_internal_has_raw_hashes
(
)
;
}
inline
void
RawHashes
:
:
clear_raw_hashes
(
)
{
raw_hashes_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
RawHashes
:
:
raw_hashes
(
)
const
{
return
_internal_raw_hashes
(
)
;
}
inline
void
RawHashes
:
:
set_raw_hashes
(
const
std
:
:
string
&
value
)
{
_internal_set_raw_hashes
(
value
)
;
}
inline
std
:
:
string
*
RawHashes
:
:
mutable_raw_hashes
(
)
{
return
_internal_mutable_raw_hashes
(
)
;
}
inline
const
std
:
:
string
&
RawHashes
:
:
_internal_raw_hashes
(
)
const
{
return
raw_hashes_
.
GetNoArena
(
)
;
}
inline
void
RawHashes
:
:
_internal_set_raw_hashes
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
raw_hashes_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
RawHashes
:
:
set_raw_hashes
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
raw_hashes_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
RawHashes
:
:
set_raw_hashes
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
raw_hashes_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
RawHashes
:
:
set_raw_hashes
(
const
void
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
raw_hashes_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
RawHashes
:
:
_internal_mutable_raw_hashes
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
raw_hashes_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
RawHashes
:
:
release_raw_hashes
(
)
{
if
(
!
_internal_has_raw_hashes
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
raw_hashes_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
RawHashes
:
:
set_allocated_raw_hashes
(
std
:
:
string
*
raw_hashes
)
{
if
(
raw_hashes
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
raw_hashes_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
raw_hashes
)
;
}
inline
bool
RiceDeltaEncoding
:
:
_internal_has_first_value
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
RiceDeltaEncoding
:
:
has_first_value
(
)
const
{
return
_internal_has_first_value
(
)
;
}
inline
void
RiceDeltaEncoding
:
:
clear_first_value
(
)
{
first_value_
=
PROTOBUF_LONGLONG
(
0
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
RiceDeltaEncoding
:
:
_internal_first_value
(
)
const
{
return
first_value_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
RiceDeltaEncoding
:
:
first_value
(
)
const
{
return
_internal_first_value
(
)
;
}
inline
void
RiceDeltaEncoding
:
:
_internal_set_first_value
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
first_value_
=
value
;
}
inline
void
RiceDeltaEncoding
:
:
set_first_value
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
value
)
{
_internal_set_first_value
(
value
)
;
}
inline
bool
RiceDeltaEncoding
:
:
_internal_has_rice_parameter
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000004u
)
!
=
0
;
return
value
;
}
inline
bool
RiceDeltaEncoding
:
:
has_rice_parameter
(
)
const
{
return
_internal_has_rice_parameter
(
)
;
}
inline
void
RiceDeltaEncoding
:
:
clear_rice_parameter
(
)
{
rice_parameter_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
RiceDeltaEncoding
:
:
_internal_rice_parameter
(
)
const
{
return
rice_parameter_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
RiceDeltaEncoding
:
:
rice_parameter
(
)
const
{
return
_internal_rice_parameter
(
)
;
}
inline
void
RiceDeltaEncoding
:
:
_internal_set_rice_parameter
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_has_bits_
[
0
]
|
=
0x00000004u
;
rice_parameter_
=
value
;
}
inline
void
RiceDeltaEncoding
:
:
set_rice_parameter
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_internal_set_rice_parameter
(
value
)
;
}
inline
bool
RiceDeltaEncoding
:
:
_internal_has_num_entries
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000008u
)
!
=
0
;
return
value
;
}
inline
bool
RiceDeltaEncoding
:
:
has_num_entries
(
)
const
{
return
_internal_has_num_entries
(
)
;
}
inline
void
RiceDeltaEncoding
:
:
clear_num_entries
(
)
{
num_entries_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000008u
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
RiceDeltaEncoding
:
:
_internal_num_entries
(
)
const
{
return
num_entries_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
RiceDeltaEncoding
:
:
num_entries
(
)
const
{
return
_internal_num_entries
(
)
;
}
inline
void
RiceDeltaEncoding
:
:
_internal_set_num_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_has_bits_
[
0
]
|
=
0x00000008u
;
num_entries_
=
value
;
}
inline
void
RiceDeltaEncoding
:
:
set_num_entries
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_internal_set_num_entries
(
value
)
;
}
inline
bool
RiceDeltaEncoding
:
:
_internal_has_encoded_data
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
RiceDeltaEncoding
:
:
has_encoded_data
(
)
const
{
return
_internal_has_encoded_data
(
)
;
}
inline
void
RiceDeltaEncoding
:
:
clear_encoded_data
(
)
{
encoded_data_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
RiceDeltaEncoding
:
:
encoded_data
(
)
const
{
return
_internal_encoded_data
(
)
;
}
inline
void
RiceDeltaEncoding
:
:
set_encoded_data
(
const
std
:
:
string
&
value
)
{
_internal_set_encoded_data
(
value
)
;
}
inline
std
:
:
string
*
RiceDeltaEncoding
:
:
mutable_encoded_data
(
)
{
return
_internal_mutable_encoded_data
(
)
;
}
inline
const
std
:
:
string
&
RiceDeltaEncoding
:
:
_internal_encoded_data
(
)
const
{
return
encoded_data_
.
GetNoArena
(
)
;
}
inline
void
RiceDeltaEncoding
:
:
_internal_set_encoded_data
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
encoded_data_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
RiceDeltaEncoding
:
:
set_encoded_data
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
encoded_data_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
RiceDeltaEncoding
:
:
set_encoded_data
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
encoded_data_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
RiceDeltaEncoding
:
:
set_encoded_data
(
const
void
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
encoded_data_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
RiceDeltaEncoding
:
:
_internal_mutable_encoded_data
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
encoded_data_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
RiceDeltaEncoding
:
:
release_encoded_data
(
)
{
if
(
!
_internal_has_encoded_data
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
encoded_data_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
RiceDeltaEncoding
:
:
set_allocated_encoded_data
(
std
:
:
string
*
encoded_data
)
{
if
(
encoded_data
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
encoded_data_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
encoded_data
)
;
}
inline
bool
ThreatEntryMetadata_MetadataEntry
:
:
_internal_has_key
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatEntryMetadata_MetadataEntry
:
:
has_key
(
)
const
{
return
_internal_has_key
(
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
clear_key
(
)
{
key_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
const
std
:
:
string
&
ThreatEntryMetadata_MetadataEntry
:
:
key
(
)
const
{
return
_internal_key
(
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_key
(
const
std
:
:
string
&
value
)
{
_internal_set_key
(
value
)
;
}
inline
std
:
:
string
*
ThreatEntryMetadata_MetadataEntry
:
:
mutable_key
(
)
{
return
_internal_mutable_key
(
)
;
}
inline
const
std
:
:
string
&
ThreatEntryMetadata_MetadataEntry
:
:
_internal_key
(
)
const
{
return
key_
.
GetNoArena
(
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
_internal_set_key
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
key_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_key
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
key_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_key
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
key_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_key
(
const
void
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
key_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ThreatEntryMetadata_MetadataEntry
:
:
_internal_mutable_key
(
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
return
key_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ThreatEntryMetadata_MetadataEntry
:
:
release_key
(
)
{
if
(
!
_internal_has_key
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000001u
;
return
key_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_allocated_key
(
std
:
:
string
*
key
)
{
if
(
key
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
key_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
key
)
;
}
inline
bool
ThreatEntryMetadata_MetadataEntry
:
:
_internal_has_value
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatEntryMetadata_MetadataEntry
:
:
has_value
(
)
const
{
return
_internal_has_value
(
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
clear_value
(
)
{
value_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
const
std
:
:
string
&
ThreatEntryMetadata_MetadataEntry
:
:
value
(
)
const
{
return
_internal_value
(
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_value
(
const
std
:
:
string
&
value
)
{
_internal_set_value
(
value
)
;
}
inline
std
:
:
string
*
ThreatEntryMetadata_MetadataEntry
:
:
mutable_value
(
)
{
return
_internal_mutable_value
(
)
;
}
inline
const
std
:
:
string
&
ThreatEntryMetadata_MetadataEntry
:
:
_internal_value
(
)
const
{
return
value_
.
GetNoArena
(
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
_internal_set_value
(
const
std
:
:
string
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
value_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_value
(
std
:
:
string
&
&
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
value_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_value
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
_has_bits_
[
0
]
|
=
0x00000002u
;
value_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_value
(
const
void
*
value
size_t
size
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
value_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
ThreatEntryMetadata_MetadataEntry
:
:
_internal_mutable_value
(
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
return
value_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
ThreatEntryMetadata_MetadataEntry
:
:
release_value
(
)
{
if
(
!
_internal_has_value
(
)
)
{
return
nullptr
;
}
_has_bits_
[
0
]
&
=
~
0x00000002u
;
return
value_
.
ReleaseNonDefaultNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
ThreatEntryMetadata_MetadataEntry
:
:
set_allocated_value
(
std
:
:
string
*
value
)
{
if
(
value
!
=
nullptr
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
}
else
{
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
value_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
int
ThreatEntryMetadata
:
:
_internal_entries_size
(
)
const
{
return
entries_
.
size
(
)
;
}
inline
int
ThreatEntryMetadata
:
:
entries_size
(
)
const
{
return
_internal_entries_size
(
)
;
}
inline
void
ThreatEntryMetadata
:
:
clear_entries
(
)
{
entries_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
*
ThreatEntryMetadata
:
:
mutable_entries
(
int
index
)
{
return
entries_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
>
*
ThreatEntryMetadata
:
:
mutable_entries
(
)
{
return
&
entries_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
&
ThreatEntryMetadata
:
:
_internal_entries
(
int
index
)
const
{
return
entries_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
&
ThreatEntryMetadata
:
:
entries
(
int
index
)
const
{
return
_internal_entries
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
*
ThreatEntryMetadata
:
:
_internal_add_entries
(
)
{
return
entries_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
*
ThreatEntryMetadata
:
:
add_entries
(
)
{
return
_internal_add_entries
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryMetadata_MetadataEntry
>
&
ThreatEntryMetadata
:
:
entries
(
)
const
{
return
entries_
;
}
inline
bool
ThreatListDescriptor
:
:
_internal_has_threat_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatListDescriptor
:
:
has_threat_type
(
)
const
{
return
_internal_has_threat_type
(
)
;
}
inline
void
ThreatListDescriptor
:
:
clear_threat_type
(
)
{
threat_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
ThreatListDescriptor
:
:
_internal_threat_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
>
(
threat_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
ThreatListDescriptor
:
:
threat_type
(
)
const
{
return
_internal_threat_type
(
)
;
}
inline
void
ThreatListDescriptor
:
:
_internal_set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000001u
;
threat_type_
=
value
;
}
inline
void
ThreatListDescriptor
:
:
set_threat_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
value
)
{
_internal_set_threat_type
(
value
)
;
}
inline
bool
ThreatListDescriptor
:
:
_internal_has_platform_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatListDescriptor
:
:
has_platform_type
(
)
const
{
return
_internal_has_platform_type
(
)
;
}
inline
void
ThreatListDescriptor
:
:
clear_platform_type
(
)
{
platform_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
ThreatListDescriptor
:
:
_internal_platform_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
>
(
platform_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
ThreatListDescriptor
:
:
platform_type
(
)
const
{
return
_internal_platform_type
(
)
;
}
inline
void
ThreatListDescriptor
:
:
_internal_set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000002u
;
platform_type_
=
value
;
}
inline
void
ThreatListDescriptor
:
:
set_platform_type
(
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
value
)
{
_internal_set_platform_type
(
value
)
;
}
inline
bool
ThreatListDescriptor
:
:
_internal_has_threat_entry_type
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000004u
)
!
=
0
;
return
value
;
}
inline
bool
ThreatListDescriptor
:
:
has_threat_entry_type
(
)
const
{
return
_internal_has_threat_entry_type
(
)
;
}
inline
void
ThreatListDescriptor
:
:
clear_threat_entry_type
(
)
{
threat_entry_type_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000004u
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
ThreatListDescriptor
:
:
_internal_threat_entry_type
(
)
const
{
return
static_cast
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
>
(
threat_entry_type_
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
ThreatListDescriptor
:
:
threat_entry_type
(
)
const
{
return
_internal_threat_entry_type
(
)
;
}
inline
void
ThreatListDescriptor
:
:
_internal_set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
assert
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType_IsValid
(
value
)
)
;
_has_bits_
[
0
]
|
=
0x00000004u
;
threat_entry_type_
=
value
;
}
inline
void
ThreatListDescriptor
:
:
set_threat_entry_type
(
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
value
)
{
_internal_set_threat_entry_type
(
value
)
;
}
inline
int
ListThreatListsResponse
:
:
_internal_threat_lists_size
(
)
const
{
return
threat_lists_
.
size
(
)
;
}
inline
int
ListThreatListsResponse
:
:
threat_lists_size
(
)
const
{
return
_internal_threat_lists_size
(
)
;
}
inline
void
ListThreatListsResponse
:
:
clear_threat_lists
(
)
{
threat_lists_
.
Clear
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
*
ListThreatListsResponse
:
:
mutable_threat_lists
(
int
index
)
{
return
threat_lists_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
>
*
ListThreatListsResponse
:
:
mutable_threat_lists
(
)
{
return
&
threat_lists_
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
&
ListThreatListsResponse
:
:
_internal_threat_lists
(
int
index
)
const
{
return
threat_lists_
.
Get
(
index
)
;
}
inline
const
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
&
ListThreatListsResponse
:
:
threat_lists
(
int
index
)
const
{
return
_internal_threat_lists
(
index
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
*
ListThreatListsResponse
:
:
_internal_add_threat_lists
(
)
{
return
threat_lists_
.
Add
(
)
;
}
inline
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
*
ListThreatListsResponse
:
:
add_threat_lists
(
)
{
return
_internal_add_threat_lists
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatListDescriptor
>
&
ListThreatListsResponse
:
:
threat_lists
(
)
const
{
return
threat_lists_
;
}
inline
bool
Duration
:
:
_internal_has_seconds
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000001u
)
!
=
0
;
return
value
;
}
inline
bool
Duration
:
:
has_seconds
(
)
const
{
return
_internal_has_seconds
(
)
;
}
inline
void
Duration
:
:
clear_seconds
(
)
{
seconds_
=
PROTOBUF_LONGLONG
(
0
)
;
_has_bits_
[
0
]
&
=
~
0x00000001u
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
Duration
:
:
_internal_seconds
(
)
const
{
return
seconds_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
Duration
:
:
seconds
(
)
const
{
return
_internal_seconds
(
)
;
}
inline
void
Duration
:
:
_internal_set_seconds
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
value
)
{
_has_bits_
[
0
]
|
=
0x00000001u
;
seconds_
=
value
;
}
inline
void
Duration
:
:
set_seconds
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int64
value
)
{
_internal_set_seconds
(
value
)
;
}
inline
bool
Duration
:
:
_internal_has_nanos
(
)
const
{
bool
value
=
(
_has_bits_
[
0
]
&
0x00000002u
)
!
=
0
;
return
value
;
}
inline
bool
Duration
:
:
has_nanos
(
)
const
{
return
_internal_has_nanos
(
)
;
}
inline
void
Duration
:
:
clear_nanos
(
)
{
nanos_
=
0
;
_has_bits_
[
0
]
&
=
~
0x00000002u
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
Duration
:
:
_internal_nanos
(
)
const
{
return
nanos_
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
Duration
:
:
nanos
(
)
const
{
return
_internal_nanos
(
)
;
}
inline
void
Duration
:
:
_internal_set_nanos
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_has_bits_
[
0
]
|
=
0x00000002u
;
nanos_
=
value
;
}
inline
void
Duration
:
:
set_nanos
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
int32
value
)
{
_internal_set_nanos
(
value
)
;
}
#
ifdef
__GNUC__
#
pragma
GCC
diagnostic
pop
#
endif
}
}
PROTOBUF_NAMESPACE_OPEN
template
<
>
struct
is_proto_enum
<
:
:
mozilla
:
:
safebrowsing
:
:
FetchThreatListUpdatesResponse_ListUpdateResponse_ResponseType
>
:
:
:
std
:
:
true_type
{
}
;
template
<
>
struct
is_proto_enum
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatHit_ThreatSourceType
>
:
:
:
std
:
:
true_type
{
}
;
template
<
>
struct
is_proto_enum
<
:
:
mozilla
:
:
safebrowsing
:
:
ChromeClientInfo_SafeBrowsingReportingPopulation
>
:
:
:
std
:
:
true_type
{
}
;
template
<
>
struct
is_proto_enum
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatType
>
:
:
:
std
:
:
true_type
{
}
;
template
<
>
struct
is_proto_enum
<
:
:
mozilla
:
:
safebrowsing
:
:
PlatformType
>
:
:
:
std
:
:
true_type
{
}
;
template
<
>
struct
is_proto_enum
<
:
:
mozilla
:
:
safebrowsing
:
:
CompressionType
>
:
:
:
std
:
:
true_type
{
}
;
template
<
>
struct
is_proto_enum
<
:
:
mozilla
:
:
safebrowsing
:
:
ThreatEntryType
>
:
:
:
std
:
:
true_type
{
}
;
PROTOBUF_NAMESPACE_CLOSE
#
include
<
google
/
protobuf
/
port_undef
.
inc
>
#
endif
