"
use
strict
"
;
function
run_test
(
)
{
let
defaultBranch
=
Services
.
prefs
.
getDefaultBranch
(
SearchUtils
.
BROWSER_SEARCH_PREF
)
;
defaultBranch
.
setCharPref
(
"
ignoredJAREngines
"
"
engine
"
)
;
Services
.
prefs
.
getDefaultBranch
(
"
"
)
.
setCharPref
(
"
distribution
.
id
"
"
partner
-
1
"
)
;
let
url
=
"
resource
:
/
/
test
/
data
/
"
;
let
resProt
=
Services
.
io
.
getProtocolHandler
(
"
resource
"
)
.
QueryInterface
(
Ci
.
nsIResProtocolHandler
)
;
resProt
.
setSubstitution
(
"
search
-
extensions
"
Services
.
io
.
newURI
(
url
)
)
;
Assert
.
ok
(
!
Services
.
search
.
isInitialized
)
;
run_next_test
(
)
;
}
add_task
(
async
function
test_disthidden
(
)
{
await
AddonTestUtils
.
promiseStartupManager
(
)
;
await
Services
.
search
.
init
(
)
;
Assert
.
ok
(
Services
.
search
.
isInitialized
)
;
let
engines
=
await
Services
.
search
.
getEngines
(
)
;
Assert
.
equal
(
engines
.
length
5
)
;
let
engine
=
Services
.
search
.
getEngineByName
(
"
Test
search
engine
"
)
;
Assert
.
equal
(
engine
null
)
;
}
)
;
