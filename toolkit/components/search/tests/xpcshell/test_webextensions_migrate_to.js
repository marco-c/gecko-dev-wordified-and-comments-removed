"
use
strict
"
;
add_task
(
async
function
setup
(
)
{
useHttpServer
(
"
opensearch
"
)
;
await
AddonTestUtils
.
promiseStartupManager
(
)
;
await
SearchTestUtils
.
useTestEngines
(
"
data1
"
)
;
let
data
=
await
readJSONFile
(
do_get_file
(
"
data
/
search
-
migration
.
json
"
)
)
;
await
promiseSaveSettingsData
(
data
)
;
await
Services
.
search
.
init
(
)
;
let
oldFunc
=
Services
.
search
.
wrappedJSObject
.
addEnginesFromExtension
;
Services
.
search
.
wrappedJSObject
.
addEnginesFromExtension
=
(
)
=
>
{
}
;
await
SearchTestUtils
.
installSearchExtension
(
{
id
:
"
simple
"
name
:
"
simple
search
"
search_url
:
"
https
:
/
/
example
.
com
/
"
}
)
;
Services
.
search
.
wrappedJSObject
.
addEnginesFromExtension
=
oldFunc
;
}
)
;
add_task
(
async
function
test_migrateLegacyEngineDifferentName
(
)
{
await
Services
.
search
.
init
(
)
;
let
engine
=
Services
.
search
.
getEngineByName
(
"
simple
"
)
;
Assert
.
ok
(
engine
"
Should
have
the
legacy
add
-
on
engine
.
"
)
;
await
Services
.
search
.
setDefault
(
engine
Ci
.
nsISearchService
.
CHANGE_REASON_UNKNOWN
)
;
engine
=
Services
.
search
.
getEngineByName
(
"
simple
search
"
)
;
Assert
.
ok
(
engine
"
Should
have
the
WebExtension
engine
.
"
)
;
await
Services
.
search
.
runBackgroundChecks
(
)
;
engine
=
Services
.
search
.
getEngineByName
(
"
simple
"
)
;
Assert
.
ok
(
!
engine
"
Should
have
removed
the
legacy
add
-
on
engine
"
)
;
engine
=
Services
.
search
.
getEngineByName
(
"
simple
search
"
)
;
Assert
.
ok
(
engine
"
Should
have
kept
the
WebExtension
engine
.
"
)
;
Assert
.
equal
(
(
await
Services
.
search
.
getDefault
(
)
)
.
name
engine
.
name
"
Should
have
switched
to
the
WebExtension
engine
as
default
.
"
)
;
}
)
;
