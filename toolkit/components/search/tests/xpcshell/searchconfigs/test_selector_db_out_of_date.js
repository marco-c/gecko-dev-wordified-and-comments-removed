"
use
strict
"
;
ChromeUtils
.
defineESModuleGetters
(
this
{
RemoteSettingsWorker
:
"
resource
:
/
/
services
-
settings
/
RemoteSettingsWorker
.
sys
.
mjs
"
}
)
;
do_get_profile
(
)
;
add_task
(
async
function
test_selector_db_out_of_date
(
)
{
updateAppInfo
(
{
name
:
"
firefox
"
ID
:
"
xpcshell
tests
.
mozilla
.
org
"
version
:
"
128
"
platformVersion
:
"
128
"
}
)
;
let
searchConfig
=
RemoteSettings
(
SearchUtils
.
SETTINGS_KEY
)
;
await
searchConfig
.
get
(
)
;
await
searchConfig
.
db
.
clear
(
)
;
let
dbTimestamp
=
await
searchConfig
.
db
.
getLastModified
(
)
;
Assert
.
equal
(
dbTimestamp
null
"
Should
have
cleared
the
database
.
"
)
;
await
RemoteSettingsWorker
.
_execute
(
"
_test_only_import
"
[
"
main
"
SearchUtils
.
SETTINGS_KEY
[
{
id
:
"
b70edfdd
-
1c3f
-
4b7b
-
ab55
-
38cb048636c0
"
identifier
:
"
outofdate
"
recordType
:
"
engine
"
base
:
{
}
variants
:
[
{
environment
:
{
allRegionsAndLocales
:
true
}
}
]
last_modified
:
1606227264000
}
]
1606227264000
]
)
;
let
engineSelector
=
new
SearchEngineSelector
(
)
;
let
result
=
await
engineSelector
.
fetchEngineConfiguration
(
{
locale
:
"
default
"
region
:
"
default
"
}
)
;
Assert
.
deepEqual
(
result
.
engines
.
map
(
e
=
>
e
.
identifier
)
[
"
google
"
"
bing
"
"
ddg
"
"
wikipedia
"
]
"
Should
have
returned
the
correct
data
.
"
)
;
}
)
;
