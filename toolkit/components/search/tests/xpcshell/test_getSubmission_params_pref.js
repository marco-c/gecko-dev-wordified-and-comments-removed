"
use
strict
"
;
const
{
AppConstants
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
AppConstants
.
sys
.
mjs
"
)
;
const
defaultBranch
=
Services
.
prefs
.
getDefaultBranch
(
SearchUtils
.
BROWSER_SEARCH_PREF
)
;
const
baseURL
=
"
https
:
/
/
example
.
com
/
search
?
"
;
const
CONFIG
=
[
{
identifier
:
"
preferenceEngine
"
base
:
{
urls
:
{
search
:
{
base
:
"
https
:
/
/
example
.
com
/
search
"
params
:
[
{
name
:
"
code
"
enterpriseValue
:
"
enterprise
"
}
{
name
:
"
code
"
experimentConfig
:
"
code
"
}
{
name
:
"
test
"
experimentConfig
:
"
test
"
}
]
searchTermParamName
:
"
q
"
}
}
}
}
]
;
add_setup
(
async
function
(
)
{
SearchTestUtils
.
setRemoteSettingsConfig
(
CONFIG
)
;
}
)
;
add_task
(
async
function
test_pref_initial_value
(
)
{
defaultBranch
.
setCharPref
(
"
param
.
code
"
"
good
&
id
=
unique
"
)
;
if
(
!
AppConstants
.
NIGHTLY_BUILD
)
{
Services
.
prefs
.
setCharPref
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
param
.
code
"
"
bad
"
)
;
}
await
Services
.
search
.
init
(
)
;
const
engine
=
Services
.
search
.
getEngineById
(
"
preferenceEngine
"
)
;
Assert
.
equal
(
engine
.
getSubmission
(
"
foo
"
)
.
uri
.
spec
baseURL
+
"
code
=
good
%
26id
%
3Dunique
&
q
=
foo
"
"
Should
have
got
the
submission
URL
with
the
correct
code
"
)
;
Services
.
prefs
.
clearUserPref
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
param
.
code
"
)
;
}
)
;
add_task
(
async
function
test_pref_updated
(
)
{
defaultBranch
.
setCharPref
(
"
param
.
code
"
"
supergood
&
id
=
unique123456
"
)
;
const
engine
=
Services
.
search
.
getEngineById
(
"
preferenceEngine
"
)
;
Assert
.
equal
(
engine
.
getSubmission
(
"
foo
"
)
.
uri
.
spec
baseURL
+
"
code
=
supergood
%
26id
%
3Dunique123456
&
q
=
foo
"
"
Should
have
got
the
submission
URL
with
the
updated
code
"
)
;
}
)
;
add_task
(
async
function
test_pref_cleared
(
)
{
defaultBranch
.
setCharPref
(
"
param
.
code
"
"
"
)
;
let
engine
=
Services
.
search
.
getEngineById
(
"
preferenceEngine
"
)
;
Assert
.
equal
(
engine
.
getSubmission
(
"
foo
"
)
.
uri
.
spec
baseURL
+
"
q
=
foo
"
"
Should
have
just
the
base
URL
after
the
pref
was
cleared
"
)
;
}
)
;
add_task
(
async
function
test_pref_updated_enterprise
(
)
{
defaultBranch
.
setCharPref
(
"
param
.
code
"
"
supergood
&
id
=
unique123456
"
)
;
await
enableEnterprise
(
)
;
const
engine
=
Services
.
search
.
getEngineById
(
"
preferenceEngine
"
)
;
Assert
.
equal
(
engine
.
getSubmission
(
"
foo
"
)
.
uri
.
spec
baseURL
+
"
code
=
enterprise
&
q
=
foo
"
"
Enterprise
parameter
should
override
experiment
config
.
"
)
;
}
)
;
