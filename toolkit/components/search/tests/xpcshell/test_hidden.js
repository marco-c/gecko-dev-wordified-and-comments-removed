const
kUrlPref
=
"
geoSpecificDefaults
.
url
"
;
function
run_test
(
)
{
do_load_manifest
(
"
data
/
chrome
.
manifest
"
)
;
configureToLoadJarEngines
(
)
;
Services
.
prefs
.
setCharPref
(
"
browser
.
search
.
geoip
.
url
"
'
data
:
application
/
json
{
"
country_code
"
:
"
US
"
}
'
)
;
let
url
=
"
data
:
application
/
json
"
+
JSON
.
stringify
(
{
"
interval
"
:
31536000
"
settings
"
:
{
"
searchDefault
"
:
"
hidden
"
"
visibleDefaultEngines
"
:
[
"
hidden
"
]
}
}
)
;
Services
.
prefs
.
getDefaultBranch
(
BROWSER_SEARCH_PREF
)
.
setCharPref
(
kUrlPref
url
)
;
Assert
.
ok
(
!
Services
.
search
.
isInitialized
)
;
run_next_test
(
)
;
}
add_task
(
async
function
async_init
(
)
{
let
commitPromise
=
promiseAfterCache
(
)
;
await
asyncInit
(
)
;
let
engines
=
await
Services
.
search
.
getEngines
(
)
;
Assert
.
equal
(
engines
.
length
1
)
;
let
engine
=
Services
.
search
.
getEngineByName
(
"
bug645970
"
)
;
Assert
.
equal
(
engine
null
)
;
engine
=
Services
.
search
.
getEngineByName
(
"
hidden
"
)
;
Assert
.
notEqual
(
engine
null
)
;
await
commitPromise
;
}
)
;
add_task
(
async
function
invalid_engine
(
)
{
await
forceExpiration
(
)
;
let
url
=
"
data
:
application
/
json
"
+
JSON
.
stringify
(
{
"
interval
"
:
31536000
"
settings
"
:
{
"
searchDefault
"
:
"
hidden
"
"
visibleDefaultEngines
"
:
[
"
hidden
"
"
bogus
"
]
}
}
)
;
Services
.
prefs
.
getDefaultBranch
(
BROWSER_SEARCH_PREF
)
.
setCharPref
(
kUrlPref
url
)
;
await
asyncReInit
(
)
;
let
engines
=
await
Services
.
search
.
getEngines
(
)
;
Assert
.
equal
(
engines
.
length
1
)
;
let
engine
=
Services
.
search
.
getEngineByName
(
"
bug645970
"
)
;
Assert
.
notEqual
(
engine
null
)
;
engine
=
Services
.
search
.
getEngineByName
(
"
hidden
"
)
;
Assert
.
equal
(
engine
null
)
;
}
)
;
