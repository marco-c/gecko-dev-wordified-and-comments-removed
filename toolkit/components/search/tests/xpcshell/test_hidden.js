const
kUrlPref
=
"
geoSpecificDefaults
.
url
"
;
function
run_test
(
)
{
removeMetadata
(
)
;
removeCacheFile
(
)
;
do_load_manifest
(
"
data
/
chrome
.
manifest
"
)
;
configureToLoadJarEngines
(
)
;
Services
.
prefs
.
setCharPref
(
"
browser
.
search
.
geoip
.
url
"
'
data
:
application
/
json
{
"
country_code
"
:
"
US
"
}
'
)
;
let
url
=
"
data
:
application
/
json
{
\
"
interval
\
"
:
31536000
\
"
settings
\
"
:
{
\
"
searchDefault
\
"
:
\
"
hidden
\
"
\
"
visibleDefaultEngines
\
"
:
[
\
"
hidden
\
"
]
}
}
"
;
Services
.
prefs
.
getDefaultBranch
(
BROWSER_SEARCH_PREF
)
.
setCharPref
(
kUrlPref
url
)
;
do_check_false
(
Services
.
search
.
isInitialized
)
;
run_next_test
(
)
;
}
add_task
(
async
function
async_init
(
)
{
let
commitPromise
=
promiseAfterCache
(
)
await
asyncInit
(
)
;
let
engines
=
Services
.
search
.
getEngines
(
)
;
do_check_eq
(
engines
.
length
1
)
;
let
engine
=
Services
.
search
.
getEngineByName
(
"
bug645970
"
)
;
do_check_eq
(
engine
null
)
;
engine
=
Services
.
search
.
getEngineByName
(
"
hidden
"
)
;
do_check_neq
(
engine
null
)
;
await
commitPromise
;
}
)
;
add_task
(
async
function
sync_init
(
)
{
let
unInitPromise
=
waitForSearchNotification
(
"
uninit
-
complete
"
)
;
let
reInitPromise
=
asyncReInit
(
)
;
await
unInitPromise
;
do_check_false
(
Services
.
search
.
isInitialized
)
;
do_check_eq
(
Services
.
search
.
currentEngine
.
name
"
hidden
"
)
;
do_check_true
(
Services
.
search
.
isInitialized
)
;
let
engines
=
Services
.
search
.
getEngines
(
)
;
do_check_eq
(
engines
.
length
1
)
;
let
engine
=
Services
.
search
.
getEngineByName
(
"
bug645970
"
)
;
do_check_eq
(
engine
null
)
;
engine
=
Services
.
search
.
getEngineByName
(
"
hidden
"
)
;
do_check_neq
(
engine
null
)
;
await
reInitPromise
;
}
)
;
add_task
(
async
function
invalid_engine
(
)
{
await
forceExpiration
(
)
;
let
url
=
"
data
:
application
/
json
{
\
"
interval
\
"
:
31536000
\
"
settings
\
"
:
{
\
"
searchDefault
\
"
:
\
"
hidden
\
"
\
"
visibleDefaultEngines
\
"
:
[
\
"
hidden
\
"
\
"
bogus
\
"
]
}
}
"
;
Services
.
prefs
.
getDefaultBranch
(
BROWSER_SEARCH_PREF
)
.
setCharPref
(
kUrlPref
url
)
;
await
asyncReInit
(
)
;
let
engines
=
Services
.
search
.
getEngines
(
)
;
do_check_eq
(
engines
.
length
1
)
;
let
engine
=
Services
.
search
.
getEngineByName
(
"
bug645970
"
)
;
do_check_neq
(
engine
null
)
;
engine
=
Services
.
search
.
getEngineByName
(
"
hidden
"
)
;
do_check_eq
(
engine
null
)
;
}
)
;
