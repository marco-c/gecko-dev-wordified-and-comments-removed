"
use
strict
"
;
const
{
SearchService
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
SearchService
.
sys
.
mjs
"
)
;
const
ss
=
new
SearchService
(
)
;
add_task
(
async
function
test_validate_engines
(
)
{
let
settings
=
RemoteSettings
(
SearchUtils
.
SETTINGS_KEY
)
;
let
config
=
await
settings
.
get
(
)
;
consoleAllowList
.
push
(
"
Could
not
load
app
provided
search
engine
"
)
;
config
=
config
.
map
(
obj
=
>
{
if
(
obj
.
recordType
=
=
"
engine
"
)
{
return
{
recordType
:
"
engine
"
identifier
:
obj
.
identifier
base
:
{
name
:
obj
.
base
.
name
urls
:
{
search
:
{
base
:
obj
.
base
.
urls
.
search
.
base
|
|
"
"
searchTermParamName
:
"
q
"
}
}
}
variants
:
[
{
environment
:
{
allRegionsAndLocales
:
true
}
}
]
}
;
}
return
obj
;
}
)
;
sinon
.
stub
(
settings
"
get
"
)
.
returns
(
config
)
;
await
ss
.
init
(
)
;
}
)
;
