"
use
strict
"
;
var
cacheTemplate
appPluginsPath
profPlugins
;
function
run_test
(
)
{
let
cacheTemplateFile
=
do_get_file
(
"
data
/
search_ignorelist
.
json
"
)
;
cacheTemplate
=
readJSONFile
(
cacheTemplateFile
)
;
cacheTemplate
.
buildID
=
getAppInfo
(
)
.
platformBuildID
;
let
engineFile
=
gProfD
.
clone
(
)
;
engineFile
.
append
(
"
searchplugins
"
)
;
engineFile
.
append
(
"
test
-
search
-
engine
.
xml
"
)
;
engineFile
.
parent
.
create
(
Ci
.
nsIFile
.
DIRECTORY_TYPE
FileUtils
.
PERMS_DIRECTORY
)
;
let
engineTemplateFile
=
do_get_file
(
"
data
/
engine
.
xml
"
)
;
engineTemplateFile
.
copyTo
(
engineFile
.
parent
"
test
-
search
-
engine
.
xml
"
)
;
cacheTemplate
.
visibleDefaultEngines
=
getDefaultEngineList
(
false
)
;
run_next_test
(
)
;
}
add_test
(
function
prepare_test_data
(
)
{
promiseSaveCacheData
(
cacheTemplate
)
.
then
(
run_next_test
)
;
}
)
;
add_test
(
function
test_cache_rest
(
)
{
info
(
"
init
search
service
"
)
;
Services
.
search
.
init
(
function
initComplete
(
aResult
)
{
info
(
"
init
'
d
search
service
"
)
;
Assert
.
ok
(
Components
.
isSuccessCode
(
aResult
)
)
;
let
engines
=
Services
.
search
.
getEngines
(
{
}
)
;
Assert
.
ok
(
engines
.
length
>
1
)
;
removeCacheFile
(
)
;
run_next_test
(
)
;
}
)
;
}
)
;
