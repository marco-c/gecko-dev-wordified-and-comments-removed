"
use
strict
"
;
const
modernConfig
=
Services
.
prefs
.
getBoolPref
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
modernConfig
"
false
)
;
const
EXPECTED_ORDER_GET_DEFAULT_ENGINES
=
modernConfig
?
[
"
Test
search
engine
"
"
engine
-
pref
"
"
engine
-
resourceicon
"
"
engine
-
chromeicon
"
"
engine
-
rel
-
searchform
-
purpose
"
"
Test
search
engine
(
Reordered
)
"
]
:
[
"
engine
-
resourceicon
"
"
engine
-
chromeicon
"
"
engine
-
pref
"
"
engine
-
rel
-
searchform
-
purpose
"
"
Test
search
engine
"
"
Test
search
engine
(
Reordered
)
"
]
;
const
EXPECTED_ORDER_GET_ENGINES
=
[
"
Test
search
engine
"
"
engine
-
pref
"
"
engine
-
resourceicon
"
"
engine
-
chromeicon
"
"
engine
-
rel
-
searchform
-
purpose
"
"
Test
search
engine
(
Reordered
)
"
]
;
add_task
(
async
function
setup
(
)
{
await
AddonTestUtils
.
promiseStartupManager
(
)
;
await
useTestEngines
(
)
;
Services
.
prefs
.
setBoolPref
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
separatePrivateDefault
"
true
)
;
Services
.
prefs
.
getDefaultBranch
(
"
distribution
.
"
)
.
setCharPref
(
"
id
"
"
test
"
)
;
}
)
;
async
function
checkOrder
(
type
expectedOrder
)
{
Services
.
search
.
wrappedJSObject
.
__sortedEngines
=
null
;
const
sortedEngines
=
await
Services
.
search
[
type
]
(
)
;
Assert
.
deepEqual
(
sortedEngines
.
map
(
s
=
>
s
.
name
)
expectedOrder
Should
have
the
expected
engine
order
from
{
type
}
)
;
}
add_task
(
async
function
test_engine_sort_only_builtins
(
)
{
await
checkOrder
(
"
getDefaultEngines
"
EXPECTED_ORDER_GET_DEFAULT_ENGINES
)
;
await
checkOrder
(
"
getEngines
"
EXPECTED_ORDER_GET_ENGINES
)
;
}
)
;
add_task
(
async
function
test_engine_sort_with_non_builtins_sort
(
)
{
await
Services
.
search
.
addEngineWithDetails
(
"
nonbuiltin1
"
{
method
:
"
get
"
template
:
"
http
:
/
/
example
.
com
/
?
search
=
{
searchTerms
}
"
}
)
;
Services
.
prefs
.
setBoolPref
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
useDBForOrder
"
false
)
;
await
checkOrder
(
"
getDefaultEngines
"
EXPECTED_ORDER_GET_DEFAULT_ENGINES
)
;
const
expected
=
[
.
.
.
EXPECTED_ORDER_GET_ENGINES
]
;
expected
.
splice
(
modernConfig
?
EXPECTED_ORDER_GET_ENGINES
.
length
:
5
0
"
nonbuiltin1
"
)
;
await
checkOrder
(
"
getEngines
"
expected
)
;
}
)
;
add_task
(
async
function
test_engine_sort_with_distro
(
)
{
Services
.
prefs
.
setCharPref
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
order
.
extra
.
bar
"
"
engine
-
pref
"
)
;
Services
.
prefs
.
setCharPref
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
order
.
extra
.
foo
"
"
engine
-
resourceicon
"
)
;
let
localizedStr
=
Cc
[
"
mozilla
.
org
/
pref
-
localizedstring
;
1
"
]
.
createInstance
(
Ci
.
nsIPrefLocalizedString
)
;
localizedStr
.
data
=
"
engine
-
rel
-
searchform
-
purpose
"
;
Services
.
prefs
.
setComplexValue
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
order
.
1
"
Ci
.
nsIPrefLocalizedString
localizedStr
)
;
localizedStr
=
Cc
[
"
mozilla
.
org
/
pref
-
localizedstring
;
1
"
]
.
createInstance
(
Ci
.
nsIPrefLocalizedString
)
;
localizedStr
.
data
=
"
engine
-
chromeicon
"
;
Services
.
prefs
.
setComplexValue
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
order
.
2
"
Ci
.
nsIPrefLocalizedString
localizedStr
)
;
let
expected
=
modernConfig
?
[
"
Test
search
engine
"
"
engine
-
pref
"
"
engine
-
resourceicon
"
"
engine
-
chromeicon
"
"
engine
-
rel
-
searchform
-
purpose
"
"
Test
search
engine
(
Reordered
)
"
]
:
[
"
engine
-
pref
"
"
engine
-
rel
-
searchform
-
purpose
"
"
engine
-
resourceicon
"
"
engine
-
chromeicon
"
"
Test
search
engine
"
"
Test
search
engine
(
Reordered
)
"
]
;
await
checkOrder
(
"
getDefaultEngines
"
expected
)
;
expected
=
modernConfig
?
[
"
engine
-
pref
"
"
engine
-
resourceicon
"
"
engine
-
rel
-
searchform
-
purpose
"
"
engine
-
chromeicon
"
"
Test
search
engine
"
"
Test
search
engine
(
Reordered
)
"
"
nonbuiltin1
"
]
:
[
"
engine
-
pref
"
"
engine
-
resourceicon
"
"
engine
-
rel
-
searchform
-
purpose
"
"
engine
-
chromeicon
"
"
Test
search
engine
"
"
nonbuiltin1
"
"
Test
search
engine
(
Reordered
)
"
]
;
await
checkOrder
(
"
getEngines
"
expected
)
;
}
)
;
