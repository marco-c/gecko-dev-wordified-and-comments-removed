"
use
strict
"
;
add_setup
(
async
function
(
)
{
let
server
=
useHttpServer
(
"
"
)
;
server
.
registerContentType
(
"
sjs
"
"
sjs
"
)
;
}
)
;
add_task
(
async
function
test_installedresourceicon
(
)
{
let
engine1
=
await
SearchTestUtils
.
installOpenSearchEngine
(
{
url
:
{
gDataUrl
}
opensearch
/
resourceicon
.
xml
}
)
;
let
engine2
=
await
SearchTestUtils
.
installOpenSearchEngine
(
{
url
:
{
gDataUrl
}
opensearch
/
chromeicon
.
xml
}
)
;
Assert
.
equal
(
undefined
await
engine1
.
getIconURL
(
)
)
;
Assert
.
equal
(
undefined
await
engine2
.
getIconURL
(
)
)
;
}
)
;
add_task
(
async
function
test_installedhttpplace
(
)
{
let
observed
=
TestUtils
.
consoleMessageObserved
(
msg
=
>
{
return
msg
.
wrappedJSObject
.
arguments
[
0
]
.
includes
(
"
Content
type
does
not
match
expected
"
)
;
}
)
;
let
engine
=
await
SearchTestUtils
.
installOpenSearchEngine
(
{
url
:
{
gDataUrl
}
data
/
engineMaker
.
sjs
?
+
JSON
.
stringify
(
{
baseURL
:
gDataUrl
image
:
"
head_search
.
js
"
name
:
"
invalidicon
"
method
:
"
GET
"
}
)
}
)
;
await
observed
;
Assert
.
equal
(
undefined
await
engine
.
getIconURL
(
)
"
Should
not
have
set
an
iconURI
"
)
;
}
)
;
