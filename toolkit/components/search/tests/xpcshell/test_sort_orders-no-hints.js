"
use
strict
"
;
const
CONFIG
=
[
{
identifier
:
"
defaultSearchEngine
"
}
{
identifier
:
"
anEngineEarlyInAlphabet
"
}
{
identifier
:
"
engineLaterInAlphabet
"
}
{
identifier
:
"
zEngineEvenLaterInAlphabet
"
}
{
identifier
:
"
secondEngineInSortOrder
"
}
{
identifier
:
"
zFirstEngineInSortOrder
"
}
{
orders
:
[
{
environment
:
{
allRegionsAndLocales
:
true
}
order
:
[
"
zFirstEngineInSortOrder
"
"
secondEngineInSortOrder
"
]
}
]
}
]
;
add_setup
(
async
function
(
)
{
SearchTestUtils
.
setRemoteSettingsConfig
(
CONFIG
)
;
Services
.
prefs
.
setBoolPref
(
SearchUtils
.
BROWSER_SEARCH_PREF
+
"
separatePrivateDefault
"
true
)
;
}
)
;
async
function
checkOrder
(
type
expectedOrder
)
{
Services
.
search
.
wrappedJSObject
.
_cachedSortedEngines
=
null
;
const
sortedEngines
=
await
Services
.
search
[
type
]
(
)
;
Assert
.
deepEqual
(
sortedEngines
.
map
(
s
=
>
s
.
name
)
expectedOrder
Should
have
the
expected
engine
order
from
{
type
}
)
;
}
add_task
(
async
function
test_engine_sort_with_non_builtins_sort
(
)
{
await
SearchTestUtils
.
installSearchExtension
(
{
name
:
"
nonbuiltin1
"
}
)
;
Services
.
search
.
wrappedJSObject
.
_settings
.
setMetaDataAttribute
(
"
useSavedOrder
"
false
)
;
const
EXPECTED_ORDER
=
[
"
defaultSearchEngine
"
"
zFirstEngineInSortOrder
"
"
secondEngineInSortOrder
"
"
anEngineEarlyInAlphabet
"
"
engineLaterInAlphabet
"
"
zEngineEvenLaterInAlphabet
"
]
;
await
checkOrder
(
"
getAppProvidedEngines
"
EXPECTED_ORDER
)
;
const
expected
=
[
.
.
.
EXPECTED_ORDER
]
;
expected
.
splice
(
expected
.
length
-
1
0
"
nonbuiltin1
"
)
;
await
checkOrder
(
"
getEngines
"
expected
)
;
}
)
;
