"
use
strict
"
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
var
EXPORTED_SYMBOLS
=
[
"
SearchTestUtils
"
]
;
var
gTestGlobals
;
var
SearchTestUtils
=
Object
.
freeze
(
{
init
(
Assert
registerCleanupFunction
)
{
gTestGlobals
=
{
Assert
registerCleanupFunction
}
;
}
async
promiseNewSearchEngine
(
url
)
{
let
engine
=
await
Services
.
search
.
addEngine
(
url
"
"
false
)
;
gTestGlobals
.
registerCleanupFunction
(
async
(
)
=
>
Services
.
search
.
removeEngine
(
engine
)
)
;
return
engine
;
}
promiseSearchNotification
(
expectedData
topic
=
"
browser
-
search
-
service
"
)
{
return
new
Promise
(
resolve
=
>
{
Services
.
obs
.
addObserver
(
function
observer
(
aSubject
aTopic
aData
)
{
if
(
aData
!
=
expectedData
)
return
;
Services
.
obs
.
removeObserver
(
observer
topic
)
;
resolve
(
aSubject
)
;
}
topic
)
;
}
)
;
}
}
)
;
