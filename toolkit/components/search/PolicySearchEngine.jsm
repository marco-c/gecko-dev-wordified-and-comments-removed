const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
{
SearchEngine
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
SearchEngine
.
jsm
"
)
;
const
lazy
=
{
}
;
XPCOMUtils
.
defineLazyModuleGetters
(
lazy
{
SearchUtils
:
"
resource
:
/
/
gre
/
modules
/
SearchUtils
.
jsm
"
}
)
;
class
PolicySearchEngine
extends
SearchEngine
{
constructor
(
options
=
{
}
)
{
super
(
{
loadPath
:
"
[
other
]
addEngineWithDetails
:
set
-
via
-
policy
"
isAppProvided
:
false
}
)
;
if
(
options
.
details
)
{
this
.
_initWithDetails
(
options
.
details
)
;
}
else
{
this
.
_initWithJSON
(
options
.
json
)
;
}
}
get
telemetryId
(
)
{
return
other
-
{
this
.
name
}
;
}
update
(
details
)
{
this
.
_urls
=
[
]
;
this
.
_iconMapObj
=
null
;
this
.
_initWithDetails
(
details
)
;
lazy
.
SearchUtils
.
notifyAction
(
this
lazy
.
SearchUtils
.
MODIFIED_TYPE
.
CHANGED
)
;
}
}
var
EXPORTED_SYMBOLS
=
[
"
PolicySearchEngine
"
]
;
