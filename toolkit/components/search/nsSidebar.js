const
{
interfaces
:
Ci
utils
:
Cu
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
SHERLOCK_FILE_EXT_REGEXP
=
/
\
.
src
/
i
;
function
nsSidebar
(
)
{
}
nsSidebar
.
prototype
=
{
init
(
window
)
{
this
.
window
=
window
;
try
{
this
.
mm
=
window
.
QueryInterface
(
Ci
.
nsIInterfaceRequestor
)
.
getInterface
(
Ci
.
nsIDocShell
)
.
QueryInterface
(
Ci
.
nsIInterfaceRequestor
)
.
getInterface
(
Ci
.
nsIContentFrameMessageManager
)
;
}
catch
(
e
)
{
Cu
.
reportError
(
e
)
;
}
}
addSearchEngine
(
engineURL
iconURL
suggestedTitle
suggestedCategory
)
{
if
(
SHERLOCK_FILE_EXT_REGEXP
.
test
(
engineURL
)
)
{
Cu
.
reportError
(
"
Installing
Sherlock
search
plugins
is
no
longer
supported
.
"
)
;
return
;
}
this
.
AddSearchProvider
(
engineURL
)
;
}
AddSearchProvider
(
engineURL
)
{
if
(
!
this
.
mm
)
{
Cu
.
reportError
(
Installing
a
search
provider
from
this
context
is
not
currently
supported
:
{
Error
(
)
.
stack
}
.
)
;
return
;
}
this
.
mm
.
sendAsyncMessage
(
"
Search
:
AddEngine
"
{
pageURL
:
this
.
window
.
document
.
documentURIObject
.
spec
engineURL
}
)
;
}
IsSearchProviderInstalled
(
engineURL
)
{
return
0
;
}
classID
:
Components
.
ID
(
"
{
22117140
-
9c6e
-
11d3
-
aaf1
-
00805f8a4905
}
"
)
QueryInterface
:
XPCOMUtils
.
generateQI
(
[
Ci
.
nsISupports
Ci
.
nsIDOMGlobalPropertyInitializer
]
)
}
;
this
.
NSGetFactory
=
XPCOMUtils
.
generateNSGetFactory
(
[
nsSidebar
]
)
;
