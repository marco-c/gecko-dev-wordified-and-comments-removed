#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
ArrayUtils
.
h
"
#
include
"
mozilla
/
Assertions
.
h
"
#
include
"
mozilla
/
CmdLineAndEnvUtils
.
h
"
#
include
"
content_analysis
/
sdk
/
analysis_client
.
h
"
#
include
"
TestContentAnalysisAgent
.
h
"
#
include
<
processenv
.
h
>
#
include
<
synchapi
.
h
>
#
include
<
windows
.
h
>
using
namespace
content_analysis
:
:
sdk
;
namespace
{
MozAgentInfo
LaunchAgentMisbehaving
(
const
wchar_t
*
mode
)
{
nsString
cmdLineArguments
;
cmdLineArguments
.
Append
(
L
"
-
-
misbehave
=
"
)
;
cmdLineArguments
.
Append
(
mode
)
;
cmdLineArguments
.
Append
(
L
"
-
-
user
"
)
;
cmdLineArguments
.
Append
(
L
"
-
-
path
=
"
)
;
nsString
pipeName
;
GeneratePipeName
(
L
"
contentanalysissdk
-
gtest
-
"
pipeName
)
;
cmdLineArguments
.
Append
(
pipeName
)
;
MozAgentInfo
agentInfo
;
LaunchAgentWithCommandLineArguments
(
cmdLineArguments
pipeName
agentInfo
)
;
return
agentInfo
;
}
}
TEST
(
ContentAnalysisMisbehaving
InvalidUtf8StringStartByteIsContinuationByte
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
invalidUtf8StringStartByteIsContinuationByte
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
request
.
set_text_content
(
"
unused
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
0
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
ASSERT_STREQ
(
"
\
x80
\
x41
\
x41
\
x41
"
response
.
request_token
(
)
.
c_str
(
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
InvalidUtf8StringEndsInMiddleOfMultibyteSequence
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
invalidUtf8StringEndsInMiddleOfMultibyteSequence
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
request
.
set_text_content
(
"
unused
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
0
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
ASSERT_STREQ
(
"
\
x41
\
xf0
\
x90
\
x8d
"
response
.
request_token
(
)
.
c_str
(
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
InvalidUtf8StringMultibyteSequenceTooShort
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
invalidUtf8StringMultibyteSequenceTooShort
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
request
.
set_text_content
(
"
unused
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
0
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
ASSERT_STREQ
(
"
\
xf0
\
x90
\
x8d
\
x41
"
response
.
request_token
(
)
.
c_str
(
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
InvalidUtf8StringDecodesToInvalidCodePoint
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
invalidUtf8StringDecodesToInvalidCodePoint
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
request
.
set_text_content
(
"
unused
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
0
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
ASSERT_STREQ
(
"
\
xf7
\
xbf
\
xbf
\
xbf
"
response
.
request_token
(
)
.
c_str
(
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
InvalidUtf8StringOverlongEncoding
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
invalidUtf8StringOverlongEncoding
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
request
.
set_text_content
(
"
unused
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
0
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
ASSERT_STREQ
(
"
\
xf0
\
x82
\
x82
\
xac
"
response
.
request_token
(
)
.
c_str
(
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
StringWithEmbeddedNull
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
stringWithEmbeddedNull
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
request
.
set_text_content
(
"
unused
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
0
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
std
:
:
string
expected
(
"
\
x41
\
x00
\
x41
"
)
;
ASSERT_EQ
(
expected
response
.
request_token
(
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
ZeroResults
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
zeroResults
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
request
.
set_text_content
(
"
unused
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
0
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
ASSERT_EQ
(
0
response
.
results
(
)
.
size
(
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
ResultWithInvalidStatus
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
resultWithInvalidStatus
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
request
.
set_text_content
(
"
unused
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
0
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
ASSERT_EQ
(
1
response
.
results
(
)
.
size
(
)
)
;
ASSERT_GE
(
static_cast
<
int
>
(
response
.
results
(
0
)
.
status
(
)
)
0
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
MessageTruncatedInMiddleOfString
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
messageTruncatedInMiddleOfString
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
-
1
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
MessageWithInvalidWireType
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
messageWithInvalidWireType
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
-
1
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
MessageWithUnusedFieldNumber
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
messageWithUnusedFieldNumber
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
0
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
ASSERT_STREQ
(
"
"
response
.
request_token
(
)
.
c_str
(
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
MessageWithWrongStringWireType
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
messageWithWrongStringWireType
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
-
1
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
MessageWithZeroTag
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
messageWithZeroTag
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
-
1
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
MessageWithZeroFieldButNonzeroWireType
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
messageWithZeroFieldButNonzeroWireType
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
-
1
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
MessageWithGroupEnd
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
messageWithZeroFieldButNonzeroWireType
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
-
1
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
MessageTruncatedInMiddleOfVarint
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
messageTruncatedInMiddleOfVarint
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
-
1
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
TEST
(
ContentAnalysisMisbehaving
MessageTruncatedInMiddleOfTag
)
{
auto
MozAgentInfo
=
LaunchAgentMisbehaving
(
L
"
messageTruncatedInMiddleOfTag
"
)
;
ASSERT_NE
(
MozAgentInfo
.
processInfo
.
dwProcessId
0UL
)
;
ASSERT_NE
(
nullptr
MozAgentInfo
.
client
.
get
(
)
)
;
ContentAnalysisRequest
request
;
request
.
set_request_token
(
"
request
token
"
)
;
ContentAnalysisResponse
response
;
ASSERT_EQ
(
-
1
MozAgentInfo
.
client
-
>
Send
(
request
&
response
)
)
;
BOOL
terminateResult
=
:
:
TerminateProcess
(
MozAgentInfo
.
processInfo
.
hProcess
0
)
;
ASSERT_NE
(
FALSE
terminateResult
)
<
<
"
Failed
to
terminate
content_analysis_sdk_agent
process
"
;
}
