"
use
strict
"
;
Components
.
utils
.
import
(
"
resource
:
/
/
gre
/
modules
/
osfile
.
jsm
"
)
;
Components
.
utils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
do_register_cleanup
(
function
(
)
{
Services
.
prefs
.
setBoolPref
(
"
toolkit
.
osfile
.
log
"
false
)
;
}
)
;
function
run_test
(
)
{
Services
.
prefs
.
setBoolPref
(
"
toolkit
.
osfile
.
log
"
true
)
;
run_next_test
(
)
;
}
add_task
(
async
function
(
)
{
do_get_profile
(
)
;
let
dir
=
OS
.
Path
.
join
(
OS
.
Constants
.
Path
.
profileDir
"
directory
"
)
;
Assert
.
equal
(
false
(
await
OS
.
File
.
exists
(
dir
)
)
)
;
await
OS
.
File
.
removeEmptyDir
(
dir
)
;
await
OS
.
File
.
removeEmptyDir
(
dir
{
ignoreAbsent
:
true
}
)
;
let
exception
=
null
;
try
{
await
OS
.
File
.
removeEmptyDir
(
dir
{
ignoreAbsent
:
false
}
)
;
}
catch
(
ex
)
{
exception
=
ex
;
}
Assert
.
ok
(
!
!
exception
)
;
Assert
.
ok
(
exception
instanceof
OS
.
File
.
Error
)
;
Assert
.
ok
(
exception
.
becauseNoSuchFile
)
;
await
OS
.
File
.
makeDir
(
dir
)
;
await
OS
.
File
.
removeEmptyDir
(
dir
)
;
Assert
.
equal
(
false
(
await
OS
.
File
.
exists
(
dir
)
)
)
;
}
)
;
