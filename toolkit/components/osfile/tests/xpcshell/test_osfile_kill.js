"
use
strict
"
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
osfile
.
jsm
"
)
;
var
AsyncFrontGlobal
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
osfile
/
osfile_async_front
.
jsm
"
null
)
;
var
Scheduler
=
AsyncFrontGlobal
.
Scheduler
;
add_task
(
async
function
test_kill_race
(
)
{
await
OS
.
File
.
exists
(
"
foo
.
foo
"
)
;
info
(
"
issuing
first
request
"
)
;
let
firstRequest
=
OS
.
File
.
exists
(
"
foo
.
bar
"
)
;
let
secondRequest
;
let
secondResolved
=
false
;
Scheduler
.
queue
.
then
(
function
(
)
{
info
(
"
issuing
second
request
"
)
;
secondRequest
=
OS
.
File
.
exists
(
"
foo
.
baz
"
)
;
secondRequest
.
then
(
function
(
)
{
secondResolved
=
true
;
}
)
;
}
)
;
info
(
"
issuing
kill
request
"
)
;
let
killRequest
=
Scheduler
.
kill
(
{
reset
:
true
shutdown
:
false
}
)
;
await
killRequest
;
await
OS
.
File
.
exists
(
"
foo
.
goz
"
)
;
ok
(
secondResolved
"
The
second
request
was
resolved
so
we
avoided
the
bug
.
Victory
!
"
)
;
}
)
;
