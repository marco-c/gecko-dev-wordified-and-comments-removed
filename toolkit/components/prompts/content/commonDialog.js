var
Ci
=
Components
.
interfaces
;
var
Cr
=
Components
.
results
;
var
Cc
=
Components
.
classes
;
var
Cu
=
Components
.
utils
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
CommonDialog
.
jsm
"
)
;
var
propBag
args
Dialog
;
function
commonDialogOnLoad
(
)
{
propBag
=
window
.
arguments
[
0
]
.
QueryInterface
(
Ci
.
nsIWritablePropertyBag2
)
.
QueryInterface
(
Ci
.
nsIWritablePropertyBag
)
;
args
=
{
}
;
let
propEnum
=
propBag
.
enumerator
;
while
(
propEnum
.
hasMoreElements
(
)
)
{
let
prop
=
propEnum
.
getNext
(
)
.
QueryInterface
(
Ci
.
nsIProperty
)
;
args
[
prop
.
name
]
=
prop
.
value
;
}
let
dialog
=
document
.
documentElement
;
let
ui
=
{
prompt
:
window
loginContainer
:
document
.
getElementById
(
"
loginContainer
"
)
loginTextbox
:
document
.
getElementById
(
"
loginTextbox
"
)
loginLabel
:
document
.
getElementById
(
"
loginLabel
"
)
password1Container
:
document
.
getElementById
(
"
password1Container
"
)
password1Textbox
:
document
.
getElementById
(
"
password1Textbox
"
)
password1Label
:
document
.
getElementById
(
"
password1Label
"
)
infoBody
:
document
.
getElementById
(
"
infoBody
"
)
infoTitle
:
document
.
getElementById
(
"
infoTitle
"
)
infoIcon
:
document
.
getElementById
(
"
infoIcon
"
)
checkbox
:
document
.
getElementById
(
"
checkbox
"
)
checkboxContainer
:
document
.
getElementById
(
"
checkboxContainer
"
)
button3
:
dialog
.
getButton
(
"
extra2
"
)
button2
:
dialog
.
getButton
(
"
extra1
"
)
button1
:
dialog
.
getButton
(
"
cancel
"
)
button0
:
dialog
.
getButton
(
"
accept
"
)
focusTarget
:
window
}
;
document
.
getElementById
(
"
filler
"
)
.
maxWidth
=
screen
.
availWidth
;
Dialog
=
new
CommonDialog
(
args
ui
)
;
Dialog
.
onLoad
(
dialog
)
;
window
.
sizeToContent
(
)
;
window
.
getAttention
(
)
;
}
function
commonDialogOnUnload
(
)
{
for
(
let
propName
in
args
)
propBag
.
setProperty
(
propName
args
[
propName
]
)
;
}
