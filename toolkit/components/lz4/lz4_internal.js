"
use
strict
"
;
var
Primitives
=
{
}
;
var
SharedAll
;
if
(
typeof
Components
!
=
"
undefined
"
)
{
SharedAll
=
{
}
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
osfile
/
osfile_shared_allthreads
.
jsm
"
SharedAll
)
;
this
.
EXPORTED_SYMBOLS
=
[
"
Primitives
"
]
;
this
.
Primitives
=
Primitives
;
this
.
exports
=
{
}
;
}
else
if
(
typeof
module
!
=
"
undefined
"
&
&
typeof
require
!
=
"
undefined
"
)
{
SharedAll
=
require
(
"
resource
:
/
/
gre
/
modules
/
osfile
/
osfile_shared_allthreads
.
jsm
"
)
;
}
else
{
throw
new
Error
(
"
Please
load
this
module
with
Component
.
utils
.
import
or
with
require
(
)
"
)
;
}
var
libxul
=
new
SharedAll
.
Library
(
"
libxul
"
SharedAll
.
Constants
.
Path
.
libxul
)
;
var
Type
=
SharedAll
.
Type
;
libxul
.
declareLazyFFI
(
Primitives
"
compress
"
"
workerlz4_compress
"
null
Type
.
size_t
Type
.
void_t
.
in_ptr
Type
.
size_t
Type
.
void_t
.
out_ptr
)
;
libxul
.
declareLazyFFI
(
Primitives
"
decompress
"
"
workerlz4_decompress
"
null
Type
.
int
Type
.
void_t
.
in_ptr
Type
.
size_t
Type
.
void_t
.
out_ptr
Type
.
size_t
Type
.
size_t
.
out_ptr
)
;
libxul
.
declareLazyFFI
(
Primitives
"
maxCompressedSize
"
"
workerlz4_maxCompressedSize
"
null
Type
.
size_t
Type
.
size_t
)
;
if
(
typeof
module
!
=
"
undefined
"
)
{
module
.
exports
=
{
get
compress
(
)
{
return
Primitives
.
compress
;
}
get
decompress
(
)
{
return
Primitives
.
decompress
;
}
get
maxCompressedSize
(
)
{
return
Primitives
.
maxCompressedSize
;
}
}
;
}
