var
REGEXPS
=
{
unlikelyCandidates
:
/
-
ad
-
|
banner
|
breadcrumbs
|
combx
|
comment
|
community
|
cover
-
wrap
|
disqus
|
extra
|
foot
|
header
|
legends
|
menu
|
related
|
remark
|
replies
|
rss
|
shoutbox
|
sidebar
|
skyscraper
|
social
|
sponsor
|
supplemental
|
ad
-
break
|
agegate
|
pagination
|
pager
|
popup
|
yom
-
remote
/
i
okMaybeItsACandidate
:
/
and
|
article
|
body
|
column
|
main
|
shadow
/
i
}
;
function
isNodeVisible
(
node
)
{
return
node
.
style
.
display
!
=
"
none
"
&
&
!
node
.
hasAttribute
(
"
hidden
"
)
;
}
function
isProbablyReaderable
(
doc
isVisible
)
{
if
(
!
isVisible
)
{
isVisible
=
isNodeVisible
;
}
var
nodes
=
doc
.
querySelectorAll
(
"
p
pre
"
)
;
var
brNodes
=
doc
.
querySelectorAll
(
"
div
>
br
"
)
;
if
(
brNodes
.
length
)
{
var
set
=
new
Set
(
nodes
)
;
[
]
.
forEach
.
call
(
brNodes
function
(
node
)
{
set
.
add
(
node
.
parentNode
)
;
}
)
;
nodes
=
Array
.
from
(
set
)
;
}
var
score
=
0
;
return
[
]
.
some
.
call
(
nodes
function
(
node
)
{
if
(
!
isVisible
(
node
)
)
return
false
;
var
matchString
=
node
.
className
+
"
"
+
node
.
id
;
if
(
REGEXPS
.
unlikelyCandidates
.
test
(
matchString
)
&
&
!
REGEXPS
.
okMaybeItsACandidate
.
test
(
matchString
)
)
{
return
false
;
}
if
(
node
.
matches
(
"
li
p
"
)
)
{
return
false
;
}
var
textContentLength
=
node
.
textContent
.
trim
(
)
.
length
;
if
(
textContentLength
<
140
)
{
return
false
;
}
score
+
=
Math
.
sqrt
(
textContentLength
-
140
)
;
if
(
score
>
20
)
{
return
true
;
}
return
false
;
}
)
;
}
if
(
typeof
exports
=
=
=
"
object
"
)
{
exports
.
isProbablyReaderable
=
isProbablyReaderable
;
}
