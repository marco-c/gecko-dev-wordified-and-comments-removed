"
use
strict
"
;
const
TEST_PATH
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
http
:
/
/
example
.
com
"
)
;
async
function
testRefresh
(
url
)
{
await
BrowserTestUtils
.
withNewTab
(
url
async
function
(
browser
)
{
let
pageShownPromise
=
BrowserTestUtils
.
waitForContentEvent
(
browser
"
AboutReaderContentReady
"
)
;
let
readerButton
=
document
.
getElementById
(
"
reader
-
mode
-
button
"
)
;
let
refreshButton
=
document
.
getElementById
(
"
reload
-
button
"
)
;
readerButton
.
click
(
)
;
await
pageShownPromise
;
pageShownPromise
=
BrowserTestUtils
.
waitForContentEvent
(
browser
"
AboutReaderContentReady
"
)
;
refreshButton
.
click
(
)
;
await
pageShownPromise
;
await
SpecialPowers
.
spawn
(
browser
[
]
(
)
=
>
{
ok
(
!
content
.
document
.
documentElement
.
hasAttribute
(
"
data
-
is
-
error
"
)
"
The
data
-
is
-
error
attribute
is
present
when
Reader
Mode
failed
to
load
an
article
.
"
)
;
}
)
;
}
)
;
}
add_task
(
async
function
(
)
{
await
testRefresh
(
TEST_PATH
+
"
readerModeArticle
.
html
"
)
;
await
testRefresh
(
TEST_PATH
+
"
readerModeArticleTextPlain
.
txt
"
)
;
}
)
;
