var
testnum
=
0
;
var
iter
;
function
run_test
(
)
{
do_test_pending
(
)
;
iter
=
next_test
(
)
;
iter
.
next
(
)
;
}
function
*
next_test
(
)
{
try
{
let
testfile
=
do_get_file
(
"
formhistory_v3v4
.
sqlite
"
)
;
let
profileDir
=
Services
.
dirsvc
.
get
(
"
ProfD
"
Ci
.
nsIFile
)
;
let
destFile
=
profileDir
.
clone
(
)
;
destFile
.
append
(
"
formhistory
.
sqlite
"
)
;
if
(
destFile
.
exists
(
)
)
{
destFile
.
remove
(
false
)
;
}
testfile
.
copyTo
(
profileDir
"
formhistory
.
sqlite
"
)
;
Assert
.
equal
(
3
getDBVersion
(
testfile
)
)
;
testnum
+
+
;
destFile
=
profileDir
.
clone
(
)
;
destFile
.
append
(
"
formhistory
.
sqlite
"
)
;
let
dbConnection
=
Services
.
storage
.
openUnsharedDatabase
(
destFile
)
;
Assert
.
equal
(
CURRENT_SCHEMA
FormHistory
.
schemaVersion
)
;
Assert
.
ok
(
dbConnection
.
tableExists
(
"
moz_deleted_formhistory
"
)
)
;
dbConnection
.
close
(
)
;
yield
countEntries
(
"
name
-
A
"
"
value
-
A
"
function
(
num
)
{
Assert
.
ok
(
num
>
0
)
;
do_test_finished
(
)
;
}
)
;
}
catch
(
e
)
{
throw
new
Error
(
FAILED
in
test
#
{
testnum
}
-
-
{
e
}
)
;
}
}
