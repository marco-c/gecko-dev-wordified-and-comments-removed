var
bakFile
;
var
dbFile
;
function
run_test
(
)
{
let
testfile
=
do_get_file
(
"
formhistory_apitest
.
sqlite
"
)
;
let
profileDir
=
Services
.
dirsvc
.
get
(
"
ProfD
"
Ci
.
nsIFile
)
;
let
destFile
=
profileDir
.
clone
(
)
;
destFile
.
append
(
"
formhistory
.
sqlite
"
)
;
if
(
destFile
.
exists
(
)
)
{
destFile
.
remove
(
false
)
;
}
bakFile
=
profileDir
.
clone
(
)
;
bakFile
.
append
(
"
formhistory
.
sqlite
.
corrupt
"
)
;
if
(
bakFile
.
exists
(
)
)
{
bakFile
.
remove
(
false
)
;
}
dbFile
=
profileDir
.
clone
(
)
;
dbFile
.
append
(
"
formhistory
.
sqlite
"
)
;
testfile
.
copyTo
(
profileDir
"
formhistory
.
sqlite
"
)
;
run_next_test
(
)
;
}
add_test
(
async
function
initialize_database_in_readonly_results_in_db_reset
(
)
{
dbFile
.
permissions
=
0
;
do_timeout
(
70
(
)
=
>
(
dbFile
.
permissions
=
440
)
)
;
const
numEntriesAfter
=
await
FormHistory
.
count
(
{
}
)
;
Assert
.
equal
(
9
numEntriesAfter
)
;
Assert
.
ok
(
!
bakFile
.
exists
(
)
"
backup
file
does
not
exist
"
)
;
run_next_test
(
)
;
}
)
;
