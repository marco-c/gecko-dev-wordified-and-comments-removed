#
include
"
nsISupports
.
idl
"
interface
nsIPrincipal
;
interface
nsIClearDataCallback
;
[
scriptable
uuid
(
6ef3ef16
-
a502
-
4576
-
9fb4
-
919f1c40bf61
)
]
interface
nsIClearDataService
:
nsISupports
{
void
deleteDataFromLocalFiles
(
in
boolean
aIsUserRequest
in
uint32_t
aFlags
in
nsIClearDataCallback
aCallback
)
;
void
deleteDataFromHost
(
in
AUTF8String
aHost
in
boolean
aIsUserRequest
in
uint32_t
aFlags
in
nsIClearDataCallback
aCallback
)
;
void
deleteDataFromBaseDomain
(
in
AUTF8String
aDomainOrHost
in
boolean
aIsUserRequest
in
uint32_t
aFlags
in
nsIClearDataCallback
aCallback
)
;
void
deleteDataFromPrincipal
(
in
nsIPrincipal
aPrincipal
in
boolean
aIsUserRequest
in
uint32_t
aFlags
in
nsIClearDataCallback
aCallback
)
;
void
deleteDataInTimeRange
(
in
PRTime
aFrom
in
PRTime
aTo
in
boolean
aIsUserRequest
in
uint32_t
aFlags
in
nsIClearDataCallback
aCallback
)
;
void
deleteData
(
in
uint32_t
aFlags
in
nsIClearDataCallback
aCallback
)
;
void
deleteDataFromOriginAttributesPattern
(
in
jsval
aOriginAttributesPattern
[
optional
]
in
nsIClearDataCallback
aCallback
)
;
void
deleteUserInteractionForClearingHistory
(
in
Array
<
nsIPrincipal
>
aPrincipalsWithStorage
[
optional
]
in
PRTime
aFrom
[
optional
]
in
nsIClearDataCallback
aCallback
)
;
void
cleanupAfterDeletionAtShutdown
(
in
uint32_t
aFlags
in
nsIClearDataCallback
aCallback
)
;
const
uint32_t
CLEAR_COOKIES
=
1
<
<
0
;
const
uint32_t
CLEAR_NETWORK_CACHE
=
1
<
<
1
;
const
uint32_t
CLEAR_IMAGE_CACHE
=
1
<
<
2
;
const
uint32_t
CLEAR_DOWNLOADS
=
1
<
<
4
;
const
uint32_t
CLEAR_PASSWORDS
=
1
<
<
5
;
const
uint32_t
CLEAR_MEDIA_DEVICES
=
1
<
<
6
;
const
uint32_t
CLEAR_DOM_QUOTA
=
1
<
<
7
;
const
uint32_t
CLEAR_PREDICTOR_NETWORK_DATA
=
1
<
<
8
;
const
uint32_t
CLEAR_DOM_PUSH_NOTIFICATIONS
=
1
<
<
9
;
const
uint32_t
CLEAR_HISTORY
=
1
<
<
10
;
const
uint32_t
CLEAR_SESSION_HISTORY
=
1
<
<
11
;
const
uint32_t
CLEAR_AUTH_TOKENS
=
1
<
<
12
;
const
uint32_t
CLEAR_AUTH_CACHE
=
1
<
<
13
;
const
uint32_t
CLEAR_SITE_PERMISSIONS
=
1
<
<
14
;
const
uint32_t
CLEAR_CONTENT_PREFERENCES
=
1
<
<
15
;
const
uint32_t
CLEAR_HSTS
=
1
<
<
16
;
const
uint32_t
CLEAR_EME
=
1
<
<
17
;
const
uint32_t
CLEAR_REPORTS
=
1
<
<
18
;
const
uint32_t
CLEAR_STORAGE_ACCESS
=
1
<
<
19
;
const
uint32_t
CLEAR_CERT_EXCEPTIONS
=
1
<
<
20
;
const
uint32_t
CLEAR_CONTENT_BLOCKING_RECORDS
=
1
<
<
21
;
const
uint32_t
CLEAR_CSS_CACHE
=
1
<
<
22
;
const
uint32_t
CLEAR_PREFLIGHT_CACHE
=
1
<
<
23
;
const
uint32_t
CLEAR_CLIENT_AUTH_REMEMBER_SERVICE
=
1
<
<
24
;
const
uint32_t
CLEAR_CREDENTIAL_MANAGER_STATE
=
1
<
<
25
;
const
uint32_t
CLEAR_COOKIE_BANNER_EXCEPTION
=
1
<
<
26
;
const
uint32_t
CLEAR_COOKIE_BANNER_EXECUTED_RECORD
=
1
<
<
27
;
const
uint32_t
CLEAR_FINGERPRINTING_PROTECTION_STATE
=
1
<
<
28
;
const
uint32_t
CLEAR_BOUNCE_TRACKING_PROTECTION_STATE
=
1
<
<
29
;
const
uint32_t
CLEAR_STORAGE_PERMISSIONS
=
1
<
<
30
;
const
uint32_t
CLEAR_SHUTDOWN_EXCEPTIONS
=
1
<
<
31
;
const
uint32_t
CLEAR_ALL
=
0xFFFFFFFF
;
const
uint32_t
CLEAR_PERMISSIONS
=
CLEAR_SITE_PERMISSIONS
|
CLEAR_SHUTDOWN_EXCEPTIONS
;
const
uint32_t
CLEAR_ALL_CACHES
=
CLEAR_NETWORK_CACHE
|
CLEAR_IMAGE_CACHE
|
CLEAR_CSS_CACHE
|
CLEAR_PREFLIGHT_CACHE
|
CLEAR_HSTS
;
const
uint32_t
CLEAR_DOM_STORAGES
=
CLEAR_DOM_QUOTA
|
CLEAR_DOM_PUSH_NOTIFICATIONS
|
CLEAR_REPORTS
;
const
uint32_t
CLEAR_FORGET_ABOUT_SITE
=
CLEAR_HISTORY
|
CLEAR_SESSION_HISTORY
|
CLEAR_ALL_CACHES
|
CLEAR_COOKIES
|
CLEAR_EME
|
CLEAR_DOWNLOADS
|
CLEAR_PERMISSIONS
|
CLEAR_DOM_STORAGES
|
CLEAR_CONTENT_PREFERENCES
|
CLEAR_PREDICTOR_NETWORK_DATA
|
CLEAR_DOM_PUSH_NOTIFICATIONS
|
CLEAR_CLIENT_AUTH_REMEMBER_SERVICE
|
CLEAR_REPORTS
|
CLEAR_CERT_EXCEPTIONS
|
CLEAR_CREDENTIAL_MANAGER_STATE
|
CLEAR_COOKIE_BANNER_EXCEPTION
|
CLEAR_COOKIE_BANNER_EXECUTED_RECORD
|
CLEAR_FINGERPRINTING_PROTECTION_STATE
|
CLEAR_BOUNCE_TRACKING_PROTECTION_STATE
;
const
uint32_t
CLEAR_COOKIES_AND_SITE_DATA
=
CLEAR_COOKIES
|
CLEAR_COOKIE_BANNER_EXECUTED_RECORD
|
CLEAR_DOM_STORAGES
|
CLEAR_HSTS
|
CLEAR_EME
|
CLEAR_AUTH_TOKENS
|
CLEAR_AUTH_CACHE
|
CLEAR_FINGERPRINTING_PROTECTION_STATE
|
CLEAR_BOUNCE_TRACKING_PROTECTION_STATE
|
CLEAR_STORAGE_PERMISSIONS
;
}
;
[
function
scriptable
uuid
(
e225517b
-
24c5
-
498a
-
b9fb
-
9993e341a398
)
]
interface
nsIClearDataCallback
:
nsISupports
{
void
onDataDeleted
(
in
uint32_t
aFailedFlags
)
;
}
;
