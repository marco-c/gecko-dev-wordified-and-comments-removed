#
include
"
nsISupports
.
idl
"
%
{
C
+
+
class
nsDocShellLoadState
;
%
}
webidl
BrowsingContext
;
interface
mozIDOMWindowProxy
;
interface
nsISimpleEnumerator
;
interface
nsIWebBrowserChrome
;
interface
nsIDocShellTreeItem
;
interface
nsIArray
;
interface
nsIRemoteTab
;
interface
nsIOpenWindowInfo
;
native
nsDocShellLoadStatePtr
(
nsDocShellLoadState
*
)
;
[
uuid
(
d162f9c4
-
19d5
-
4723
-
931f
-
f1e51bfa9f68
)
]
interface
nsPIWindowWatcher
:
nsISupports
{
void
addWindow
(
in
mozIDOMWindowProxy
aWindow
in
nsIWebBrowserChrome
aChrome
)
;
void
removeWindow
(
in
mozIDOMWindowProxy
aWindow
)
;
cenum
PrintKind
:
8
{
PRINT_NONE
PRINT_REGULAR
PRINT_PREVIEW
}
;
[
noscript
]
BrowsingContext
openWindow2
(
in
mozIDOMWindowProxy
aParent
in
ACString
aUrl
in
ACString
aName
in
ACString
aFeatures
in
boolean
aCalledFromScript
in
boolean
aDialog
in
boolean
aNavigate
in
nsISupports
aArgs
in
boolean
aIsPopupSpam
in
boolean
aForceNoOpener
in
boolean
aForceNoReferrer
in
nsPIWindowWatcher_PrintKind
aPrintKind
in
nsDocShellLoadStatePtr
aLoadState
)
;
nsIRemoteTab
openWindowWithRemoteTab
(
in
nsIRemoteTab
aOpeningTab
in
ACString
aFeatures
in
boolean
aCalledFromJS
in
float
aOpenerFullZoom
in
nsIOpenWindowInfo
aOpenWindowInfo
)
;
}
;
