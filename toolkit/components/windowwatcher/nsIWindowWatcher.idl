#
include
"
nsISupports
.
idl
"
interface
mozIDOMWindowProxy
;
interface
nsIObserver
;
interface
nsIPrompt
;
interface
nsIAuthPrompt
;
interface
nsISimpleEnumerator
;
interface
nsIWebBrowserChrome
;
interface
nsIWindowCreator
;
[
scriptable
uuid
(
641fe945
-
6902
-
4b3f
-
87c2
-
0daef32499b3
)
]
interface
nsIWindowWatcher
:
nsISupports
{
mozIDOMWindowProxy
openWindow
(
in
mozIDOMWindowProxy
aParent
in
ACString
aUrl
in
ACString
aName
in
ACString
aFeatures
in
nsISupports
aArguments
)
;
void
registerNotification
(
in
nsIObserver
aObserver
)
;
void
unregisterNotification
(
in
nsIObserver
aObserver
)
;
nsISimpleEnumerator
getWindowEnumerator
(
)
;
nsIPrompt
getNewPrompter
(
in
mozIDOMWindowProxy
aParent
)
;
nsIAuthPrompt
getNewAuthPrompter
(
in
mozIDOMWindowProxy
aParent
)
;
void
setWindowCreator
(
in
nsIWindowCreator
creator
)
;
boolean
hasWindowCreator
(
)
;
nsIWebBrowserChrome
getChromeForWindow
(
in
mozIDOMWindowProxy
aWindow
)
;
mozIDOMWindowProxy
getWindowByName
(
in
AString
aTargetName
)
;
readonly
attribute
mozIDOMWindowProxy
activeWindow
;
}
;
%
{
C
+
+
#
define
NS_WINDOWWATCHER_CONTRACTID
"
mozilla
.
org
/
embedcomp
/
window
-
watcher
;
1
"
%
}
