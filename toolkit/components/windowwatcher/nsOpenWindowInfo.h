#
ifndef
nsOpenWindowInfo_h
#
define
nsOpenWindowInfo_h
#
include
"
nsIOpenWindowInfo
.
h
"
#
include
"
nsISupportsImpl
.
h
"
#
include
"
mozilla
/
OriginAttributes
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
mozilla
/
dom
/
ClientOpenWindowUtils
.
h
"
class
nsOpenWindowInfo
:
public
nsIOpenWindowInfo
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIOPENWINDOWINFO
bool
mForceNoOpener
=
false
;
bool
mIsRemote
=
false
;
bool
mIsForPrinting
=
false
;
bool
mIsForWindowDotPrint
=
false
;
RefPtr
<
mozilla
:
:
dom
:
:
BrowserParent
>
mNextRemoteBrowser
;
mozilla
:
:
OriginAttributes
mOriginAttributes
;
RefPtr
<
mozilla
:
:
dom
:
:
BrowsingContext
>
mParent
;
RefPtr
<
nsIBrowsingContextReadyCallback
>
mBrowsingContextReadyCallback
;
private
:
virtual
~
nsOpenWindowInfo
(
)
=
default
;
}
;
class
nsBrowsingContextReadyCallback
:
public
nsIBrowsingContextReadyCallback
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIBROWSINGCONTEXTREADYCALLBACK
explicit
nsBrowsingContextReadyCallback
(
RefPtr
<
mozilla
:
:
dom
:
:
BrowsingContextCallbackReceivedPromise
:
:
Private
>
aPromise
)
;
private
:
virtual
~
nsBrowsingContextReadyCallback
(
)
;
RefPtr
<
mozilla
:
:
dom
:
:
BrowsingContextCallbackReceivedPromise
:
:
Private
>
mPromise
;
}
;
#
endif
