#
include
"
AntiTrackingUtils
.
h
"
#
include
"
mozilla
/
dom
/
BrowsingContext
.
h
"
#
include
"
mozilla
/
dom
/
Document
.
h
"
#
include
"
nsIChannel
.
h
"
#
include
"
nsIURI
.
h
"
#
include
"
nsPIDOMWindow
.
h
"
using
namespace
mozilla
;
using
namespace
mozilla
:
:
dom
;
already_AddRefed
<
nsPIDOMWindowOuter
>
AntiTrackingUtils
:
:
GetTopWindow
(
nsPIDOMWindowInner
*
aWindow
)
{
Document
*
document
=
aWindow
-
>
GetExtantDoc
(
)
;
if
(
!
document
)
{
return
nullptr
;
}
nsIChannel
*
channel
=
document
-
>
GetChannel
(
)
;
if
(
!
channel
)
{
return
nullptr
;
}
nsCOMPtr
<
nsPIDOMWindowOuter
>
pwin
=
aWindow
-
>
GetBrowsingContext
(
)
-
>
Top
(
)
-
>
GetDOMWindow
(
)
;
if
(
!
pwin
)
{
return
nullptr
;
}
return
pwin
.
forget
(
)
;
}
already_AddRefed
<
nsIURI
>
AntiTrackingUtils
:
:
MaybeGetDocumentURIBeingLoaded
(
nsIChannel
*
aChannel
)
{
nsCOMPtr
<
nsIURI
>
uriBeingLoaded
;
nsLoadFlags
loadFlags
=
0
;
nsresult
rv
=
aChannel
-
>
GetLoadFlags
(
&
loadFlags
)
;
if
(
NS_WARN_IF
(
NS_FAILED
(
rv
)
)
)
{
return
nullptr
;
}
if
(
loadFlags
&
nsIChannel
:
:
LOAD_DOCUMENT_URI
)
{
rv
=
aChannel
-
>
GetURI
(
getter_AddRefs
(
uriBeingLoaded
)
)
;
if
(
NS_WARN_IF
(
NS_FAILED
(
rv
)
)
)
{
return
nullptr
;
}
}
return
uriBeingLoaded
.
forget
(
)
;
}
