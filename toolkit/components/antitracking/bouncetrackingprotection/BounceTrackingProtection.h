#
ifndef
mozilla_BounceTrackingProtection_h__
#
define
mozilla_BounceTrackingProtection_h__
#
include
"
mozilla
/
Logging
.
h
"
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
nsIBounceTrackingProtection
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsIObserver
.
h
"
class
nsIPrincipal
;
class
nsITimer
;
namespace
mozilla
{
class
BounceTrackingAllowList
;
class
BounceTrackingState
;
class
BounceTrackingStateGlobal
;
class
BounceTrackingProtectionStorage
;
class
ClearDataCallback
;
class
OriginAttributes
;
using
ClearDataMozPromise
=
MozPromise
<
nsCString
uint32_t
true
>
;
extern
LazyLogModule
gBounceTrackingProtectionLog
;
class
BounceTrackingProtection
final
:
public
nsIObserver
public
nsIBounceTrackingProtection
{
NS_DECL_ISUPPORTS
NS_DECL_NSIOBSERVER
NS_DECL_NSIBOUNCETRACKINGPROTECTION
public
:
static
already_AddRefed
<
BounceTrackingProtection
>
GetSingleton
(
)
;
[
[
nodiscard
]
]
nsresult
RecordStatefulBounces
(
BounceTrackingState
*
aBounceTrackingState
)
;
[
[
nodiscard
]
]
static
nsresult
RecordUserActivation
(
nsIPrincipal
*
aPrincipal
Maybe
<
PRTime
>
aActivationTime
=
Nothing
(
)
)
;
[
[
nodiscard
]
]
static
nsresult
RecordUserActivation
(
dom
:
:
WindowContext
*
aWindowContext
)
;
[
[
nodiscard
]
]
nsresult
ClearExpiredUserInteractions
(
BounceTrackingStateGlobal
*
aStateGlobal
=
nullptr
)
;
private
:
BounceTrackingProtection
(
)
=
default
;
~
BounceTrackingProtection
(
)
=
default
;
[
[
nodiscard
]
]
nsresult
Init
(
)
;
static
Maybe
<
bool
>
sFeatureIsEnabled
;
nsCOMPtr
<
nsITimer
>
mBounceTrackingPurgeTimer
;
RefPtr
<
BounceTrackingProtectionStorage
>
mStorage
;
using
PurgeBounceTrackersMozPromise
=
MozPromise
<
nsTArray
<
nsCString
>
nsresult
true
>
;
RefPtr
<
PurgeBounceTrackersMozPromise
>
PurgeBounceTrackers
(
)
;
static
void
ReportPurgedTrackersToAntiTrackingDB
(
const
nsTArray
<
nsCString
>
&
aPurgedSiteHosts
)
;
[
[
nodiscard
]
]
nsresult
PurgeBounceTrackersForStateGlobal
(
BounceTrackingStateGlobal
*
aStateGlobal
BounceTrackingAllowList
&
aBounceTrackingAllowList
nsTArray
<
RefPtr
<
ClearDataMozPromise
>
>
&
aClearPromises
)
;
bool
mPurgeInProgress
=
false
;
[
[
nodiscard
]
]
nsresult
MaybeMigrateUserInteractionPermissions
(
)
;
}
;
}
#
endif
