"
use
strict
"
;
add_task
(
async
function
test
(
)
{
do_get_profile
(
)
;
let
btp
=
Cc
[
"
mozilla
.
org
/
bounce
-
tracking
-
protection
;
1
"
]
.
getService
(
Ci
.
nsIBounceTrackingProtection
)
;
btp
.
clearAll
(
)
;
Assert
.
deepEqual
(
btp
.
testGetBounceTrackerCandidateHosts
(
{
}
)
[
]
"
No
tracker
candidates
initially
.
"
)
;
Assert
.
deepEqual
(
btp
.
testGetUserActivationHosts
(
{
}
)
[
]
"
No
user
activation
hosts
initially
.
"
)
;
let
bounceTrackingActivationLifetimeUSec
=
1000
*
1000
*
Services
.
prefs
.
getIntPref
(
"
privacy
.
bounceTrackingProtection
.
bounceTrackingActivationLifetimeSec
"
)
;
btp
.
testAddUserActivation
(
{
}
"
not
-
expired1
.
com
"
Date
.
now
(
)
*
1000
)
;
btp
.
testAddUserActivation
(
{
}
"
not
-
expired2
.
com
"
Date
.
now
(
)
*
1000
-
bounceTrackingActivationLifetimeUSec
/
2
)
;
btp
.
testAddUserActivation
(
{
privateBrowsingId
:
1
}
"
pbm
-
not
-
expired
.
com
"
Date
.
now
(
)
*
1000
)
;
btp
.
testAddUserActivation
(
{
}
"
expired1
.
com
"
Date
.
now
(
)
*
1000
-
bounceTrackingActivationLifetimeUSec
*
2
)
;
btp
.
testAddUserActivation
(
{
}
"
expired2
.
com
"
Date
.
now
(
)
*
1000
-
(
bounceTrackingActivationLifetimeUSec
+
1000
*
1000
)
)
;
btp
.
testAddUserActivation
(
{
privateBrowsingId
:
1
}
"
pbm
-
expired
.
com
"
1
)
;
btp
.
testClearExpiredUserActivations
(
)
;
Assert
.
deepEqual
(
btp
.
testGetUserActivationHosts
(
{
}
)
.
sort
(
)
[
"
not
-
expired1
.
com
"
"
not
-
expired2
.
com
"
]
"
Expired
user
activation
flags
have
been
cleared
for
normal
browsing
.
"
)
;
Assert
.
deepEqual
(
btp
.
testGetUserActivationHosts
(
{
privateBrowsingId
:
1
}
)
.
sort
(
)
[
"
pbm
-
not
-
expired
.
com
"
]
"
Expired
user
activation
flags
have
been
cleared
for
private
browsing
.
"
)
;
btp
.
clearAll
(
)
;
}
)
;
