#
include
"
BounceTrackingRecord
.
h
"
#
include
"
mozilla
/
Logging
.
h
"
#
include
"
nsPrintfCString
.
h
"
namespace
mozilla
{
extern
LazyLogModule
gBounceTrackingProtectionLog
;
NS_IMPL_CYCLE_COLLECTION
(
BounceTrackingRecord
)
;
void
BounceTrackingRecord
:
:
SetInitialHost
(
const
nsACString
&
aHost
)
{
mInitialHost
=
aHost
;
}
const
nsACString
&
BounceTrackingRecord
:
:
GetInitialHost
(
)
{
return
mInitialHost
;
}
void
BounceTrackingRecord
:
:
SetFinalHost
(
const
nsACString
&
aHost
)
{
mFinalHost
=
aHost
;
}
const
nsACString
&
BounceTrackingRecord
:
:
GetFinalHost
(
)
{
return
mFinalHost
;
}
void
BounceTrackingRecord
:
:
AddBounceHost
(
const
nsACString
&
aHost
)
{
mBounceHosts
.
Insert
(
aHost
)
;
MOZ_LOG
(
gBounceTrackingProtectionLog
LogLevel
:
:
Debug
(
"
%
s
:
%
s
"
__FUNCTION__
Describe
(
)
.
get
(
)
)
)
;
}
nsCString
BounceTrackingRecord
:
:
DescribeSet
(
const
nsTHashSet
<
nsCString
>
&
set
)
{
nsAutoCString
setStr
;
setStr
.
AppendLiteral
(
"
[
"
)
;
if
(
!
set
.
IsEmpty
(
)
)
{
for
(
const
nsACString
&
host
:
set
)
{
setStr
.
Append
(
host
)
;
setStr
.
AppendLiteral
(
"
"
)
;
}
setStr
.
Truncate
(
setStr
.
Length
(
)
-
1
)
;
}
setStr
.
AppendLiteral
(
"
]
"
)
;
;
return
setStr
;
}
void
BounceTrackingRecord
:
:
AddStorageAccessHost
(
const
nsACString
&
aHost
)
{
mStorageAccessHosts
.
Insert
(
aHost
)
;
}
const
nsTHashSet
<
nsCString
>
&
BounceTrackingRecord
:
:
GetBounceHosts
(
)
{
return
mBounceHosts
;
}
const
nsTHashSet
<
nsCString
>
&
BounceTrackingRecord
:
:
GetStorageAccessHosts
(
)
{
return
mStorageAccessHosts
;
}
nsCString
BounceTrackingRecord
:
:
Describe
(
)
{
return
nsPrintfCString
(
"
{
mInitialHost
:
%
s
mFinalHost
:
%
s
mBounceHosts
:
%
s
"
"
mStorageAccessHosts
:
%
s
}
"
mInitialHost
.
get
(
)
mFinalHost
.
get
(
)
DescribeSet
(
mBounceHosts
)
.
get
(
)
DescribeSet
(
mStorageAccessHosts
)
.
get
(
)
)
;
}
}
