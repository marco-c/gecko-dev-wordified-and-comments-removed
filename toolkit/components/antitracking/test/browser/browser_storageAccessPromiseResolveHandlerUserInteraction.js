ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
AntiTracking
.
runTest
(
"
Storage
Access
API
returns
promises
that
maintain
user
activation
"
async
_
=
>
{
let
[
threw
rejected
]
=
await
callRequestStorageAccess
(
dwu
=
>
{
ok
(
dwu
.
isHandlingUserInput
"
Promise
handler
must
run
as
if
we
'
re
handling
user
input
"
)
;
}
)
;
ok
(
!
threw
"
requestStorageAccess
should
not
throw
"
)
;
ok
(
!
rejected
"
requestStorageAccess
should
be
available
"
)
;
let
dwu
=
SpecialPowers
.
getDOMWindowUtils
(
window
)
;
let
helper
=
dwu
.
setHandlingUserInput
(
true
)
;
let
promise
;
try
{
promise
=
document
.
hasStorageAccess
(
)
;
}
finally
{
helper
.
destruct
(
)
;
}
await
promise
.
then
(
_
=
>
{
ok
(
dwu
.
isHandlingUserInput
"
Promise
handler
must
run
as
if
we
'
re
handling
user
input
"
)
;
}
)
;
}
null
async
_
=
>
{
await
new
Promise
(
resolve
=
>
{
Services
.
clearData
.
deleteData
(
Ci
.
nsIClearDataService
.
CLEAR_ALL
value
=
>
resolve
(
)
)
;
}
)
;
}
null
false
false
)
;
