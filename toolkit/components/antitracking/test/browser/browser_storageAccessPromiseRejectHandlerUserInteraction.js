const
{
Services
}
=
ChromeUtils
.
import
(
'
resource
:
/
/
gre
/
modules
/
Services
.
jsm
'
)
;
AntiTracking
.
runTest
(
"
Storage
Access
API
returns
promises
that
maintain
user
activation
for
calling
its
reject
handler
"
async
_
=
>
{
let
[
threw
rejected
]
=
await
callRequestStorageAccess
(
dwu
=
>
{
ok
(
dwu
.
isHandlingUserInput
"
Promise
reject
handler
must
run
as
if
we
'
re
handling
user
input
"
)
;
}
true
)
;
ok
(
!
threw
"
requestStorageAccess
should
not
throw
"
)
;
ok
(
rejected
"
requestStorageAccess
should
not
be
available
"
)
;
}
null
async
_
=
>
{
await
new
Promise
(
resolve
=
>
{
Services
.
clearData
.
deleteData
(
Ci
.
nsIClearDataService
.
CLEAR_ALL
value
=
>
resolve
(
)
)
;
}
)
;
}
null
false
false
Ci
.
nsIWebProgressListener
.
STATE_COOKIES_BLOCKED_TRACKER
false
"
allow
-
scripts
allow
-
same
-
origin
allow
-
popups
"
)
;
