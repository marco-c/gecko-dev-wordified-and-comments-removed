ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
AntiTracking
.
runTest
(
"
Image
cache
-
should
load
the
image
twice
.
"
async
_
=
>
{
let
img
=
document
.
createElement
(
"
img
"
)
;
document
.
body
.
appendChild
(
img
)
;
img
.
src
=
"
https
:
/
/
tracking
.
example
.
org
/
browser
/
toolkit
/
components
/
antitracking
/
test
/
browser
/
image
.
sjs
"
;
await
new
Promise
(
resolve
=
>
{
img
.
onload
=
resolve
;
}
)
;
ok
(
true
"
Image
1
loaded
"
)
;
img
=
document
.
createElement
(
"
img
"
)
;
document
.
body
.
appendChild
(
img
)
;
img
.
src
=
"
https
:
/
/
tracking
.
example
.
org
/
browser
/
toolkit
/
components
/
antitracking
/
test
/
browser
/
image
.
sjs
"
;
await
new
Promise
(
resolve
=
>
{
img
.
onload
=
resolve
;
}
)
;
ok
(
true
"
Image
2
loaded
"
)
;
}
{
runExtraTests
:
false
cookieBehavior
blockingByContentBlocking
blockingByAllowList
callback
:
async
_
=
>
{
let
img
=
document
.
createElement
(
"
img
"
)
;
document
.
body
.
appendChild
(
img
)
;
img
.
src
=
"
https
:
/
/
tracking
.
example
.
org
/
browser
/
toolkit
/
components
/
antitracking
/
test
/
browser
/
image
.
sjs
"
;
await
new
Promise
(
resolve
=
>
{
img
.
onload
=
resolve
;
}
)
;
ok
(
true
"
Image
3
loaded
"
)
;
img
=
document
.
createElement
(
"
img
"
)
;
document
.
body
.
appendChild
(
img
)
;
img
.
src
=
"
https
:
/
/
tracking
.
example
.
org
/
browser
/
toolkit
/
components
/
antitracking
/
test
/
browser
/
image
.
sjs
"
;
await
new
Promise
(
resolve
=
>
{
img
.
onload
=
resolve
;
}
)
;
ok
(
true
"
Image
4
loaded
"
)
;
}
}
null
null
false
false
)
;
add_task
(
async
_
=
>
{
await
fetch
(
"
https
:
/
/
tracking
.
example
.
org
/
browser
/
toolkit
/
components
/
antitracking
/
test
/
browser
/
image
.
sjs
?
result
"
)
.
then
(
r
=
>
r
.
text
(
)
)
.
then
(
text
=
>
{
is
(
text
2
"
The
image
should
be
loaded
correctly
.
"
)
;
}
)
;
await
new
Promise
(
resolve
=
>
{
Services
.
clearData
.
deleteData
(
Ci
.
nsIClearDataService
.
CLEAR_ALL
value
=
>
resolve
(
)
)
;
}
)
;
}
)
;
