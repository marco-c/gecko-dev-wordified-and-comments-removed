#
ifndef
mozilla_antitrackingipcutils_h
#
define
mozilla_antitrackingipcutils_h
#
include
"
ipc
/
EnumSerializer
.
h
"
#
include
"
mozilla
/
ContentBlockingNotifier
.
h
"
#
include
"
mozilla
/
ContentBlocking
.
h
"
#
include
"
nsILoadInfo
.
h
"
namespace
IPC
{
template
<
>
struct
ParamTraits
<
mozilla
:
:
ContentBlockingNotifier
:
:
StorageAccessPermissionGrantedReason
>
:
public
ContiguousEnumSerializerInclusive
<
mozilla
:
:
ContentBlockingNotifier
:
:
StorageAccessPermissionGrantedReason
mozilla
:
:
ContentBlockingNotifier
:
:
StorageAccessPermissionGrantedReason
:
:
eStorageAccessAPI
mozilla
:
:
ContentBlockingNotifier
:
:
StorageAccessPermissionGrantedReason
:
:
ePrivilegeStorageAccessForOriginAPI
>
{
}
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
ContentBlockingNotifier
:
:
BlockingDecision
>
:
public
ContiguousEnumSerializerInclusive
<
mozilla
:
:
ContentBlockingNotifier
:
:
BlockingDecision
mozilla
:
:
ContentBlockingNotifier
:
:
BlockingDecision
:
:
eBlock
mozilla
:
:
ContentBlockingNotifier
:
:
BlockingDecision
:
:
eAllow
>
{
}
;
template
<
>
struct
ParamTraits
<
mozilla
:
:
ContentBlocking
:
:
StorageAccessPromptChoices
>
:
public
ContiguousEnumSerializerInclusive
<
mozilla
:
:
ContentBlocking
:
:
StorageAccessPromptChoices
mozilla
:
:
ContentBlocking
:
:
StorageAccessPromptChoices
:
:
eAllow
mozilla
:
:
ContentBlocking
:
:
StorageAccessPromptChoices
:
:
eAllowAutoGrant
>
{
}
;
template
<
>
struct
ParamTraits
<
nsILoadInfo
:
:
StoragePermissionState
>
:
public
ContiguousEnumSerializerInclusive
<
nsILoadInfo
:
:
StoragePermissionState
nsILoadInfo
:
:
StoragePermissionState
:
:
NoStoragePermission
nsILoadInfo
:
:
StoragePermissionState
:
:
StoragePermissionAllowListed
>
{
}
;
}
#
endif
