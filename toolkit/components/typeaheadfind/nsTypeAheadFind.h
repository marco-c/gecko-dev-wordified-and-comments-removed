#
include
"
nsComponentManagerUtils
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsISelectionController
.
h
"
#
include
"
nsIController
.
h
"
#
include
"
nsIControllers
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
nsUnicharUtils
.
h
"
#
include
"
nsIFind
.
h
"
#
include
"
nsIWebBrowserFind
.
h
"
#
include
"
nsWeakReference
.
h
"
#
include
"
nsISelection
.
h
"
#
include
"
nsIDOMRange
.
h
"
#
include
"
nsIDocShellTreeItem
.
h
"
#
include
"
nsITypeAheadFind
.
h
"
#
include
"
nsISound
.
h
"
class
nsPIDOMWindowInner
;
class
nsIPresShell
;
class
nsPresContext
;
class
nsRange
;
namespace
mozilla
{
namespace
dom
{
class
Element
;
class
Selection
;
}
}
#
define
TYPEAHEADFIND_NOTFOUND_WAV_URL
\
"
chrome
:
/
/
global
/
content
/
notfound
.
wav
"
class
nsTypeAheadFind
:
public
nsITypeAheadFind
public
nsIObserver
public
nsSupportsWeakReference
{
public
:
nsTypeAheadFind
(
)
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_NSITYPEAHEADFIND
NS_DECL_NSIOBSERVER
NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS
(
nsTypeAheadFind
nsITypeAheadFind
)
protected
:
virtual
~
nsTypeAheadFind
(
)
;
nsresult
PrefsReset
(
)
;
void
SaveFind
(
)
;
void
PlayNotFoundSound
(
)
;
nsresult
GetWebBrowserFind
(
nsIDocShell
*
aDocShell
nsIWebBrowserFind
*
*
aWebBrowserFind
)
;
void
RangeStartsInsideLink
(
nsRange
*
aRange
nsIPresShell
*
aPresShell
bool
*
aIsInsideLink
bool
*
aIsStartingLink
)
;
void
GetSelection
(
nsIPresShell
*
aPresShell
nsISelectionController
*
*
aSelCon
mozilla
:
:
dom
:
:
Selection
*
*
aDomSel
)
;
bool
IsRangeVisible
(
nsIPresShell
*
aPresShell
nsPresContext
*
aPresContext
nsRange
*
aRange
bool
aMustBeVisible
bool
aGetTopVisibleLeaf
nsRange
*
*
aNewRange
bool
*
aUsesIndependentSelection
)
;
bool
IsRangeRendered
(
nsIPresShell
*
aPresShell
nsPresContext
*
aPresContext
nsRange
*
aRange
)
;
nsresult
FindItNow
(
nsIPresShell
*
aPresShell
bool
aIsLinksOnly
bool
aIsFirstVisiblePreferred
bool
aFindPrev
uint16_t
*
aResult
)
;
nsresult
GetSearchContainers
(
nsISupports
*
aContainer
nsISelectionController
*
aSelectionController
bool
aIsFirstVisiblePreferred
bool
aFindPrev
nsIPresShell
*
*
aPresShell
nsPresContext
*
*
aPresContext
)
;
already_AddRefed
<
nsIPresShell
>
GetPresShell
(
)
;
void
ReleaseStrongMemberVariables
(
)
;
nsString
mTypeAheadBuffer
;
nsCString
mNotFoundSoundURL
;
bool
mStartLinksOnlyPref
;
bool
mCaretBrowsingOn
;
bool
mDidAddObservers
;
nsCOMPtr
<
nsIDOMElement
>
mFoundLink
;
nsCOMPtr
<
mozilla
:
:
dom
:
:
Element
>
mFoundEditable
;
RefPtr
<
nsRange
>
mFoundRange
;
nsCOMPtr
<
nsPIDOMWindowInner
>
mCurrentWindow
;
uint32_t
mLastFindLength
;
nsCOMPtr
<
nsISound
>
mSoundInterface
;
bool
mIsSoundInitialized
;
RefPtr
<
nsRange
>
mStartFindRange
;
RefPtr
<
nsRange
>
mSearchRange
;
RefPtr
<
nsRange
>
mStartPointRange
;
RefPtr
<
nsRange
>
mEndPointRange
;
nsCOMPtr
<
nsIFind
>
mFind
;
bool
mCaseSensitive
;
bool
mEntireWord
;
bool
EnsureFind
(
)
{
if
(
mFind
)
{
return
true
;
}
mFind
=
do_CreateInstance
(
"
mozilla
.
org
/
embedcomp
/
rangefind
;
1
"
)
;
if
(
!
mFind
)
{
return
false
;
}
mFind
-
>
SetCaseSensitive
(
mCaseSensitive
)
;
mFind
-
>
SetEntireWord
(
mEntireWord
)
;
return
true
;
}
nsCOMPtr
<
nsIWebBrowserFind
>
mWebBrowserFind
;
nsWeakPtr
mDocShell
;
nsWeakPtr
mPresShell
;
nsWeakPtr
mSelectionController
;
}
;
