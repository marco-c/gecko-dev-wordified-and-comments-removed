"
use
strict
"
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
TelemetryController
:
"
resource
:
/
/
gre
/
modules
/
TelemetryController
.
jsm
"
}
)
;
function
ContentProcessSingleton
(
)
{
}
ContentProcessSingleton
.
prototype
=
{
classID
:
Components
.
ID
(
"
{
ca2a8470
-
45c7
-
11e4
-
916c
-
0800200c9a66
}
"
)
QueryInterface
:
ChromeUtils
.
generateQI
(
[
Ci
.
nsIObserver
Ci
.
nsISupportsWeakReference
]
)
observe
(
subject
topic
data
)
{
switch
(
topic
)
{
case
"
app
-
startup
"
:
{
Services
.
obs
.
addObserver
(
this
"
xpcom
-
shutdown
"
)
;
TelemetryController
.
observe
(
null
topic
null
)
;
break
;
}
case
"
xpcom
-
shutdown
"
:
Services
.
obs
.
removeObserver
(
this
"
xpcom
-
shutdown
"
)
;
break
;
}
}
}
;
var
EXPORTED_SYMBOLS
=
[
"
ContentProcessSingleton
"
]
;
