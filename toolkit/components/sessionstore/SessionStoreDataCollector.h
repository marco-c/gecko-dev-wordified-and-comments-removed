#
ifndef
mozilla_dom_SessionStoreDataCollector_h
#
define
mozilla_dom_SessionStoreDataCollector_h
#
include
"
ErrorList
.
h
"
#
include
"
nsITimer
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
namespace
mozilla
:
:
dom
{
class
BrowserChild
;
class
EventTarget
;
class
WindowGlobalChild
;
namespace
sessionstore
{
class
FormData
;
}
class
SessionStoreDataCollector
final
:
public
nsITimerCallback
public
nsINamed
{
public
:
NS_DECL_NSITIMERCALLBACK
NS_DECL_NSINAMED
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS
(
SessionStoreDataCollector
nsITimerCallback
)
enum
class
Change
{
Input
Scroll
}
;
static
already_AddRefed
<
SessionStoreDataCollector
>
CollectSessionStoreData
(
WindowGlobalChild
*
aWindowChild
)
;
void
RecordInputChange
(
)
;
void
RecordScrollChange
(
)
;
void
Flush
(
)
;
void
Cancel
(
)
;
private
:
void
Collect
(
)
;
nsresult
Apply
(
Maybe
<
sessionstore
:
:
FormData
>
&
&
aFormData
Maybe
<
nsPoint
>
&
&
aScroll
)
;
SessionStoreDataCollector
(
WindowGlobalChild
*
aWindowChild
uint32_t
aEpoch
)
;
~
SessionStoreDataCollector
(
)
;
RefPtr
<
WindowGlobalChild
>
mWindowChild
;
nsCOMPtr
<
nsITimer
>
mTimer
;
uint32_t
mEpoch
;
bool
mInputChanged
:
1
;
bool
mScrollChanged
:
1
;
}
;
}
#
endif
