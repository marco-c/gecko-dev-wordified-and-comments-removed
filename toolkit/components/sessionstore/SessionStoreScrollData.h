#
ifndef
mozilla_dom_SessionStoreScrollData_h
#
define
mozilla_dom_SessionStoreScrollData_h
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
WeakPtr
.
h
"
#
include
"
nsPoint
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
mozilla
/
dom
/
WindowGlobalParent
.
h
"
#
include
"
mozilla
/
dom
/
SessionStoreChangeListener
.
h
"
namespace
mozilla
:
:
dom
{
class
BrowsingContext
;
class
WindowGlobalParent
;
class
OwningByteStringOrObjectOrNull
;
struct
SessionStoreZoomData
;
using
SessionStoreZoom
=
mozilla
:
:
Tuple
<
float
uint32_t
uint32_t
>
;
using
MaybeSessionStoreZoom
=
mozilla
:
:
Maybe
<
mozilla
:
:
Tuple
<
float
uint32_t
uint32_t
>
>
;
class
SessionStoreScrollData
final
:
public
nsISupports
public
nsWrapperCache
public
SupportsWeakPtr
{
public
:
using
CollectedType
=
nsPoint
;
using
LocationType
=
WeakPtr
<
SessionStoreScrollData
>
;
using
ChildrenArray
=
nsTArray
<
RefPtr
<
SessionStoreScrollData
>
>
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
SessionStoreScrollData
)
nsISupports
*
GetParentObject
(
)
const
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
void
GetScroll
(
nsACString
&
aScroll
)
const
;
ChildrenArray
&
Children
(
)
;
void
GetChildren
(
Nullable
<
ChildrenArray
>
&
aChildren
)
const
;
void
ToJSON
(
JSContext
*
aCx
JS
:
:
MutableHandle
<
JSObject
*
>
aRetval
)
;
void
Update
(
const
CollectedType
&
aUpdate
)
;
void
ClearCachedChildren
(
)
;
static
bool
HasData
(
const
CollectedType
&
aPoint
)
;
bool
IsEmpty
(
)
const
;
private
:
~
SessionStoreScrollData
(
)
=
default
;
nsPoint
mScroll
;
MaybeSessionStoreZoom
mZoom
;
nsTArray
<
RefPtr
<
SessionStoreScrollData
>
>
mChildren
;
}
;
}
#
endif
