"
use
strict
"
;
add_task
(
async
function
test_durationChange
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
media
.
videocontrols
.
picture
-
in
-
picture
.
video
-
toggle
.
always
-
show
"
false
]
[
"
media
.
videocontrols
.
picture
-
in
-
picture
.
video
-
toggle
.
min
-
video
-
secs
"
5
]
]
}
)
;
await
testToggle
(
TEST_PAGE
{
"
with
-
controls
"
:
{
canToggle
:
false
}
"
no
-
controls
"
:
{
canToggle
:
false
}
}
)
;
await
testToggle
(
TEST_PAGE
{
"
with
-
controls
"
:
{
canToggle
:
true
}
"
no
-
controls
"
:
{
canToggle
:
true
}
}
async
browser
=
>
{
await
SpecialPowers
.
spawn
(
browser
[
]
async
(
)
=
>
{
for
(
let
videoID
of
[
"
with
-
controls
"
"
no
-
controls
"
]
)
{
let
video
=
content
.
document
.
getElementById
(
videoID
)
;
video
.
src
=
"
gizmo
.
mp4
"
;
let
durationChangePromise
=
ContentTaskUtils
.
waitForEvent
(
video
"
durationchange
"
)
;
video
.
load
(
)
;
await
durationChangePromise
;
}
}
)
;
}
)
;
}
)
;
