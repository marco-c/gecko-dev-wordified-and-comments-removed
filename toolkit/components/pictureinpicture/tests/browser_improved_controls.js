"
use
strict
"
;
add_task
(
async
(
)
=
>
{
let
videoID
=
"
with
-
controls
"
;
await
BrowserTestUtils
.
withNewTab
(
{
url
:
TEST_PAGE
gBrowser
}
async
browser
=
>
{
await
ensureVideosReady
(
browser
)
;
await
SpecialPowers
.
spawn
(
browser
[
videoID
]
async
videoID
=
>
{
await
content
.
document
.
getElementById
(
videoID
)
.
play
(
)
;
}
)
;
const
IMPROVED_CONTROLS_ENABLED_PREF
=
"
media
.
videocontrols
.
picture
-
in
-
picture
.
improved
-
video
-
controls
.
enabled
"
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
IMPROVED_CONTROLS_ENABLED_PREF
true
]
]
}
)
;
let
pipWin
=
await
triggerPictureInPicture
(
browser
videoID
)
;
ok
(
pipWin
"
Got
Picture
-
in
-
Picture
window
.
"
)
;
let
fullscreenButton
=
pipWin
.
document
.
getElementById
(
"
fullscreen
"
)
;
Assert
.
ok
(
!
fullscreenButton
.
hidden
"
The
Fullscreen
button
is
visible
"
)
;
let
pipClosed
=
BrowserTestUtils
.
domWindowClosed
(
pipWin
)
;
let
closeButton
=
pipWin
.
document
.
getElementById
(
"
close
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
closeButton
{
}
pipWin
)
;
await
pipClosed
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
IMPROVED_CONTROLS_ENABLED_PREF
false
]
]
}
)
;
pipWin
=
await
triggerPictureInPicture
(
browser
videoID
)
;
ok
(
pipWin
"
Got
Picture
-
in
-
Picture
window
.
"
)
;
fullscreenButton
=
pipWin
.
document
.
getElementById
(
"
fullscreen
"
)
;
Assert
.
ok
(
fullscreenButton
.
hidden
"
The
Fullscreen
button
is
not
visible
"
)
;
}
)
;
}
)
;
