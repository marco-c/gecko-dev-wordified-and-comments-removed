"
use
strict
"
;
add_task
(
async
(
)
=
>
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
media
.
videocontrols
.
picture
-
in
-
picture
.
audio
-
toggle
.
enabled
"
true
]
]
}
)
;
let
videoID
=
"
with
-
controls
"
;
info
(
Testing
{
videoID
}
case
.
)
;
await
BrowserTestUtils
.
withNewTab
(
{
url
:
TEST_PAGE
gBrowser
}
async
browser
=
>
{
await
ensureVideosReady
(
browser
)
;
await
SpecialPowers
.
spawn
(
browser
[
videoID
]
async
videoID
=
>
{
await
content
.
document
.
getElementById
(
videoID
)
.
play
(
)
;
}
)
;
let
pipWin
=
await
triggerPictureInPicture
(
browser
videoID
)
;
let
playPause
=
pipWin
.
document
.
getElementById
(
"
playpause
"
)
;
let
audioButton
=
pipWin
.
document
.
getElementById
(
"
audio
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
playPause
{
button
:
1
}
pipWin
)
;
ok
(
!
(
await
isVideoPaused
(
browser
videoID
)
)
"
The
video
is
not
paused
.
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
playPause
{
button
:
2
}
pipWin
)
;
ok
(
!
(
await
isVideoPaused
(
browser
videoID
)
)
"
The
video
is
not
paused
.
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
audioButton
{
button
:
1
}
pipWin
)
;
ok
(
!
(
await
isVideoMuted
(
browser
videoID
)
)
"
The
audio
is
not
muted
.
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
audioButton
{
button
:
2
}
pipWin
)
;
ok
(
!
(
await
isVideoMuted
(
browser
videoID
)
)
"
The
audio
is
not
muted
.
"
)
;
}
)
;
}
)
;
