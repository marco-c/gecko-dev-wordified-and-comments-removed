"
use
strict
"
;
add_task
(
async
(
)
=
>
{
for
(
let
videoID
of
[
"
with
-
controls
"
"
no
-
controls
"
]
)
{
info
(
Testing
{
videoID
}
case
.
)
;
await
BrowserTestUtils
.
withNewTab
(
{
url
:
TEST_PAGE_WITH_IFRAME
gBrowser
}
async
browser
=
>
{
await
SpecialPowers
.
spawn
(
browser
[
TEST_PAGE
]
async
TEST_PAGE
=
>
{
let
iframe
=
content
.
document
.
getElementById
(
"
iframe
"
)
;
let
loadPromise
=
ContentTaskUtils
.
waitForEvent
(
iframe
"
load
"
)
;
iframe
.
src
=
TEST_PAGE
;
await
loadPromise
;
}
)
;
let
iframeBc
=
browser
.
browsingContext
.
children
[
0
]
;
if
(
gFissionBrowser
)
{
Assert
.
notEqual
(
browser
.
browsingContext
.
currentWindowGlobal
.
osPid
iframeBc
.
currentWindowGlobal
.
osPid
"
The
iframe
should
be
running
in
a
different
process
.
"
)
;
}
let
pipWin
=
await
triggerPictureInPicture
(
iframeBc
videoID
)
;
ok
(
pipWin
"
Got
Picture
-
in
-
Picture
window
.
"
)
;
await
ensureMessageAndClosePiP
(
iframeBc
videoID
pipWin
true
)
;
}
)
;
}
}
)
;
