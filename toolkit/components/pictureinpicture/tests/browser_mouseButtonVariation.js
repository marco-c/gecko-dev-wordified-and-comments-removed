"
use
strict
"
;
add_task
(
async
(
)
=
>
{
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
TEST_PAGE
}
async
browser
=
>
{
await
SimpleTest
.
promiseFocus
(
browser
)
;
await
ensureVideosReady
(
browser
)
;
let
videoID
=
"
no
-
controls
"
;
await
prepareForToggleClick
(
browser
videoID
)
;
await
BrowserTestUtils
.
synthesizeMouseAtCenter
(
#
{
videoID
}
{
type
:
"
mousemove
"
}
browser
)
;
await
BrowserTestUtils
.
synthesizeMouseAtCenter
(
#
{
videoID
}
{
type
:
"
mouseover
"
}
browser
)
;
info
(
"
Waiting
for
toggle
to
become
visible
"
)
;
await
toggleOpacityReachesThreshold
(
browser
videoID
"
hoverVideo
"
)
;
let
toggleClientRect
=
await
getToggleClientRect
(
browser
videoID
)
;
let
toggleLeft
=
toggleClientRect
.
left
+
15
;
let
toggleTop
=
toggleClientRect
.
top
+
15
;
info
(
"
Clicking
on
toggle
and
expecting
a
Picture
-
in
-
Picture
window
to
open
"
)
;
let
domWindowOpened
=
BrowserTestUtils
.
domWindowOpenedAndLoaded
(
null
)
;
await
BrowserTestUtils
.
synthesizeMouseAtPoint
(
toggleLeft
toggleTop
{
type
:
"
mousedown
"
}
browser
)
;
await
BrowserTestUtils
.
synthesizeMouseAtPoint
(
1
1
{
type
:
"
mouseup
"
}
browser
)
;
let
win
=
await
domWindowOpened
;
ok
(
win
"
A
Picture
-
in
-
Picture
window
opened
.
"
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
await
assertSawMouseEvents
(
browser
false
)
;
await
BrowserTestUtils
.
synthesizeMouseAtPoint
(
1
1
{
}
browser
)
;
await
assertSawMouseEvents
(
browser
true
)
;
}
)
;
}
)
;
