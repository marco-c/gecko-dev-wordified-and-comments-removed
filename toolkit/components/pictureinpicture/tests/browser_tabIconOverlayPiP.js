"
use
strict
"
;
add_task
(
async
(
)
=
>
{
let
videoID
=
"
with
-
controls
"
;
await
BrowserTestUtils
.
withNewTab
(
{
url
:
TEST_PAGE_WITH_SOUND
gBrowser
}
async
browser
=
>
{
let
isVideoPaused
=
(
)
=
>
{
return
SpecialPowers
.
spawn
(
browser
[
videoID
]
async
videoID
=
>
{
return
content
.
document
.
getElementById
(
videoID
)
.
paused
;
}
)
;
}
;
await
ensureVideosReady
(
browser
)
;
let
audioPromise
=
BrowserTestUtils
.
waitForEvent
(
browser
"
DOMAudioPlaybackStarted
"
)
;
await
SpecialPowers
.
spawn
(
browser
[
videoID
]
async
videoID
=
>
{
await
content
.
document
.
getElementById
(
videoID
)
.
play
(
)
;
}
)
;
ok
(
!
(
await
isVideoPaused
(
)
)
"
The
video
is
not
paused
.
"
)
;
await
audioPromise
;
let
tab
=
gBrowser
.
getTabForBrowser
(
browser
)
;
let
tabIconOverlay
=
tab
.
getElementsByClassName
(
"
tab
-
icon
-
overlay
"
)
[
0
]
;
ok
(
!
tabIconOverlay
.
hasAttribute
(
"
pictureinpicture
"
)
"
Not
using
PiP
"
)
;
ok
(
tabIconOverlay
.
hasAttribute
(
"
soundplaying
"
)
"
Sound
is
playing
"
)
;
let
pipWin
=
await
triggerPictureInPicture
(
browser
videoID
)
;
ok
(
pipWin
"
Got
Picture
-
in
-
Picture
window
.
"
)
;
ok
(
!
(
await
isVideoPaused
(
)
)
"
The
video
is
not
paused
.
"
)
;
ok
(
tabIconOverlay
.
hasAttribute
(
"
soundplaying
"
)
"
Tab
knows
sound
is
playing
"
)
;
ok
(
tabIconOverlay
.
hasAttribute
(
"
pictureinpicture
"
)
"
Tab
knows
were
using
PiP
"
)
;
let
style
=
window
.
getComputedStyle
(
tabIconOverlay
)
;
Assert
.
equal
(
style
.
listStyleImage
'
url
(
"
chrome
:
/
/
browser
/
skin
/
tabbrowser
/
tab
-
audio
-
playing
-
small
.
svg
"
)
'
"
Got
the
tab
-
icon
-
overlay
image
"
)
;
ok
(
!
tabIconOverlay
.
hasAttribute
(
"
muted
"
)
"
Tab
is
not
muted
"
)
;
tabIconOverlay
.
click
(
)
;
ok
(
tabIconOverlay
.
hasAttribute
(
"
muted
"
)
"
Tab
is
muted
"
)
;
tabIconOverlay
.
click
(
)
;
ok
(
!
tabIconOverlay
.
hasAttribute
(
"
muted
"
)
"
Tab
is
not
muted
"
)
;
}
)
;
}
)
;
