const
HOST
=
"
https
:
/
/
example
.
com
"
;
const
URL
=
HOST
+
"
/
browser
/
toolkit
/
components
/
passwordmgr
/
test
/
browser
/
form_basic
.
html
"
;
const
TIMEOUT_PREF
=
"
signon
.
masterPasswordReprompt
.
timeout_ms
"
;
function
waitForDialog
(
)
{
let
dialogShown
=
TestUtils
.
topicObserved
(
"
common
-
dialog
-
loaded
"
)
;
return
dialogShown
.
then
(
function
(
[
subject
]
)
{
let
dialog
=
subject
.
Dialog
;
is
(
dialog
.
args
.
title
"
Password
Required
"
)
;
dialog
.
ui
.
button1
.
click
(
)
;
return
BrowserTestUtils
.
waitForEvent
(
window
"
DOMModalDialogClosed
"
)
;
}
)
;
}
add_task
(
async
function
test_mpAutocompleteTimeout
(
)
{
let
login
=
LoginTestUtils
.
testData
.
formLogin
(
{
origin
:
"
https
:
/
/
example
.
com
"
formActionOrigin
:
"
https
:
/
/
example
.
com
"
username
:
"
username
"
password
:
"
password
"
}
)
;
Services
.
logins
.
addLogin
(
login
)
;
LoginTestUtils
.
masterPassword
.
enable
(
)
;
registerCleanupFunction
(
function
(
)
{
LoginTestUtils
.
masterPassword
.
disable
(
)
;
Services
.
logins
.
removeAllLogins
(
)
;
}
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
TIMEOUT_PREF
3000
]
]
}
)
;
let
dialogShown
=
waitForDialog
(
)
;
await
BrowserTestUtils
.
withNewTab
(
URL
async
function
(
browser
)
{
await
dialogShown
;
await
ContentTask
.
spawn
(
browser
null
async
function
(
)
{
content
.
document
.
getElementById
(
"
form
-
basic
-
password
"
)
.
focus
(
)
;
}
)
;
await
new
Promise
(
c
=
>
setTimeout
(
c
4000
)
)
;
dialogShown
=
waitForDialog
(
)
;
await
ContentTask
.
spawn
(
browser
null
async
function
(
)
{
content
.
document
.
getElementById
(
"
form
-
basic
-
username
"
)
.
focus
(
)
;
content
.
document
.
getElementById
(
"
form
-
basic
-
password
"
)
.
focus
(
)
;
}
)
;
await
dialogShown
;
closePopup
(
document
.
getElementById
(
"
PopupAutoComplete
"
)
)
;
}
)
;
}
)
;
