const
Ci
=
Components
.
interfaces
;
const
Cu
=
Components
.
utils
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
function
PrivateBrowsingTrackingProtectionWhitelist
(
)
{
this
.
_allowlist
=
[
]
;
Services
.
obs
.
addObserver
(
this
"
last
-
pb
-
context
-
exited
"
true
)
;
}
PrivateBrowsingTrackingProtectionWhitelist
.
prototype
=
{
classID
:
Components
.
ID
(
"
{
a319b616
-
c45d
-
4037
-
8d86
-
01c592b5a9af
}
"
)
QueryInterface
:
XPCOMUtils
.
generateQI
(
[
Ci
.
nsIPrivateBrowsingTrackingProtectionWhitelist
Ci
.
nsIObserver
Ci
.
nsISupportsWeakReference
Ci
.
nsISupports
]
)
_xpcom_factory
:
XPCOMUtils
.
generateSingletonFactory
(
PrivateBrowsingTrackingProtectionWhitelist
)
addToAllowList
(
uri
)
{
if
(
this
.
_allowlist
.
indexOf
(
uri
.
spec
)
=
=
=
-
1
)
{
this
.
_allowlist
.
push
(
uri
.
spec
)
;
}
}
removeFromAllowList
(
uri
)
{
let
index
=
this
.
_allowlist
.
indexOf
(
uri
.
spec
)
;
if
(
index
!
=
=
-
1
)
{
this
.
_allowlist
.
splice
(
index
1
)
;
}
}
existsInAllowList
(
uri
)
{
return
this
.
_allowlist
.
indexOf
(
uri
.
spec
)
!
=
=
-
1
;
}
observe
(
subject
topic
data
)
{
if
(
topic
=
=
"
last
-
pb
-
context
-
exited
"
)
{
this
.
_allowlist
=
[
]
;
}
}
}
;
this
.
NSGetFactory
=
XPCOMUtils
.
generateNSGetFactory
(
[
PrivateBrowsingTrackingProtectionWhitelist
]
)
;
