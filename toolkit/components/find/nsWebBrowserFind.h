#
ifndef
nsWebBrowserFindImpl_h__
#
define
nsWebBrowserFindImpl_h__
#
include
"
nsIWebBrowserFind
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsIWeakReferenceUtils
.
h
"
#
include
"
nsIFind
.
h
"
#
include
"
nsString
.
h
"
class
nsIDOMWindow
;
class
nsIDocShell
;
class
nsIDocument
;
class
nsRange
;
namespace
mozilla
{
namespace
dom
{
class
Element
;
class
Selection
;
}
}
class
nsWebBrowserFind
:
public
nsIWebBrowserFind
public
nsIWebBrowserFindInFrames
{
public
:
nsWebBrowserFind
(
)
;
NS_DECL_ISUPPORTS
NS_DECL_NSIWEBBROWSERFIND
NS_DECL_NSIWEBBROWSERFINDINFRAMES
protected
:
virtual
~
nsWebBrowserFind
(
)
;
bool
CanFindNext
(
)
{
return
mSearchString
.
Length
(
)
!
=
0
;
}
nsresult
SearchInFrame
(
nsPIDOMWindowOuter
*
aWindow
bool
aWrapping
bool
*
aDidFind
)
;
nsresult
OnStartSearchFrame
(
nsPIDOMWindowOuter
*
aWindow
)
;
nsresult
OnEndSearchFrame
(
nsPIDOMWindowOuter
*
aWindow
)
;
already_AddRefed
<
mozilla
:
:
dom
:
:
Selection
>
GetFrameSelection
(
nsPIDOMWindowOuter
*
aWindow
)
;
nsresult
ClearFrameSelection
(
nsPIDOMWindowOuter
*
aWindow
)
;
nsresult
OnFind
(
nsPIDOMWindowOuter
*
aFoundWindow
)
;
void
SetSelectionAndScroll
(
nsPIDOMWindowOuter
*
aWindow
nsRange
*
aRange
)
;
nsresult
GetRootNode
(
nsIDocument
*
aDomDoc
mozilla
:
:
dom
:
:
Element
*
*
aNode
)
;
nsresult
GetSearchLimits
(
nsRange
*
aRange
nsRange
*
aStartPt
nsRange
*
aEndPt
nsIDocument
*
aDoc
mozilla
:
:
dom
:
:
Selection
*
aSel
bool
aWrap
)
;
nsresult
SetRangeAroundDocument
(
nsRange
*
aSearchRange
nsRange
*
aStartPoint
nsRange
*
aEndPoint
nsIDocument
*
aDoc
)
;
protected
:
nsString
mSearchString
;
bool
mFindBackwards
;
bool
mWrapFind
;
bool
mEntireWord
;
bool
mMatchCase
;
bool
mSearchSubFrames
;
bool
mSearchParentFrames
;
nsWeakPtr
mCurrentSearchFrame
;
nsWeakPtr
mRootSearchFrame
;
nsWeakPtr
mLastFocusedWindow
;
}
;
#
endif
