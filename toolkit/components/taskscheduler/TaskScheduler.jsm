"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
TaskScheduler
"
]
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
WinImpl
"
"
resource
:
/
/
gre
/
modules
/
TaskSchedulerWinImpl
.
jsm
"
"
_TaskSchedulerWinImpl
"
)
;
XPCOMUtils
.
defineLazyGetter
(
this
"
gImpl
"
(
)
=
>
{
if
(
AppConstants
.
platform
=
=
"
win
"
)
{
return
WinImpl
;
}
return
{
registerTask
(
)
{
}
deleteTask
(
)
{
}
deleteAllTasks
(
)
{
}
}
;
}
)
;
const
{
AppConstants
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
AppConstants
.
jsm
"
)
;
var
TaskScheduler
=
{
MIN_INTERVAL_SECONDS
:
1800
registerTask
(
id
command
intervalSeconds
options
)
{
if
(
!
Number
.
isInteger
(
intervalSeconds
)
)
{
throw
new
Error
(
"
Interval
is
not
an
integer
"
)
;
}
if
(
intervalSeconds
<
this
.
MIN_INTERVAL_SECONDS
)
{
throw
new
Error
(
"
Interval
is
too
short
"
)
;
}
return
gImpl
.
registerTask
(
id
command
intervalSeconds
options
)
;
}
deleteTask
(
id
)
{
return
gImpl
.
deleteTask
(
id
)
;
}
deleteAllTasks
(
)
{
return
gImpl
.
deleteAllTasks
(
)
;
}
}
;
