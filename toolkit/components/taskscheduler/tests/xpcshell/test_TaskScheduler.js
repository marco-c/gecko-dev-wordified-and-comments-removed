"
use
strict
"
;
const
{
updateAppInfo
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
AppInfo
.
sys
.
mjs
"
)
;
updateAppInfo
(
)
;
const
{
TaskScheduler
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
TaskScheduler
.
jsm
"
)
;
registerCleanupFunction
(
async
(
)
=
>
{
await
TaskScheduler
.
deleteAllTasks
(
)
;
}
)
;
add_task
(
async
function
test_gen
(
)
{
await
TaskScheduler
.
registerTask
(
"
FOO
"
"
xyz
"
TaskScheduler
.
MIN_INTERVAL_SECONDS
{
disabled
:
true
}
)
;
Assert
.
equal
(
await
TaskScheduler
.
taskExists
(
"
FOO
"
)
true
"
Task
should
exist
after
we
created
it
.
"
)
;
await
TaskScheduler
.
deleteTask
(
"
FOO
"
)
;
Assert
.
equal
(
await
TaskScheduler
.
taskExists
(
"
FOO
"
)
false
"
Task
should
not
exist
after
we
deleted
it
.
"
)
;
await
Assert
.
rejects
(
TaskScheduler
.
registerTask
(
"
BAR
"
"
123
"
1
{
disabled
:
true
}
)
/
Interval
is
too
short
/
)
;
}
)
;
