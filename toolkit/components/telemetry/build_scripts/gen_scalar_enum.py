from
__future__
import
print_function
import
sys
import
buildconfig
from
mozparsers
import
parse_scalars
from
mozparsers
.
shared_telemetry_utils
import
ParserError
banner
=
"
"
"
/
*
This
file
is
auto
-
generated
see
gen_scalar_enum
.
py
.
*
/
"
"
"
file_header
=
"
"
"
\
#
ifndef
mozilla_TelemetryScalarEnums_h
#
define
mozilla_TelemetryScalarEnums_h
namespace
mozilla
{
namespace
Telemetry
{
enum
class
ScalarID
:
uint32_t
{
\
"
"
"
file_footer
=
"
"
"
\
}
;
}
/
/
namespace
mozilla
}
/
/
namespace
Telemetry
#
endif
/
/
mozilla_TelemetryScalarEnums_h
"
"
"
def
main
(
output
*
filenames
)
:
    
scalars
=
[
]
    
for
filename
in
filenames
:
        
try
:
            
batch
=
parse_scalars
.
load_scalars
(
filename
)
            
scalars
.
extend
(
batch
)
        
except
ParserError
as
ex
:
            
print
(
"
\
nError
processing
%
s
:
\
n
%
s
\
n
"
%
(
filename
str
(
ex
)
)
file
=
sys
.
stderr
)
            
sys
.
exit
(
1
)
    
print
(
banner
file
=
output
)
    
print
(
file_header
file
=
output
)
    
for
s
in
scalars
:
        
if
s
.
record_on_os
(
buildconfig
.
substs
[
"
OS_TARGET
"
]
)
:
            
print
(
"
%
s
"
%
s
.
enum_label
file
=
output
)
    
print
(
"
ScalarCount
"
file
=
output
)
    
print
(
file_footer
file
=
output
)
if
__name__
=
=
"
__main__
"
:
    
main
(
sys
.
stdout
*
sys
.
argv
[
1
:
]
)
