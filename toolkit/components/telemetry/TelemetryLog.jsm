this
.
EXPORTED_SYMBOLS
=
[
"
TelemetryLog
"
]
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
LOG_ENTRY_MAX_COUNT
=
1000
;
var
gLogEntries
=
[
]
;
this
.
TelemetryLog
=
Object
.
freeze
(
{
log
(
id
data
)
{
if
(
gLogEntries
.
length
>
=
LOG_ENTRY_MAX_COUNT
)
{
return
;
}
id
=
String
(
id
)
;
var
ts
;
try
{
ts
=
Math
.
floor
(
Services
.
telemetry
.
msSinceProcessStart
(
)
)
;
}
catch
(
e
)
{
return
;
}
var
entry
=
[
id
ts
]
;
if
(
data
!
=
=
undefined
)
{
entry
=
entry
.
concat
(
Array
.
prototype
.
map
.
call
(
data
String
)
)
;
}
gLogEntries
.
push
(
entry
)
;
}
entries
(
)
{
return
gLogEntries
;
}
}
)
;
