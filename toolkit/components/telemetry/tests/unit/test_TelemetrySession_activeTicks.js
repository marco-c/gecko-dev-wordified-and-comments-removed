Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
TelemetryController
.
jsm
"
this
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
TelemetrySession
.
jsm
"
this
)
;
add_task
(
async
function
test_setup
(
)
{
do_get_profile
(
)
;
loadAddonManager
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
.
2
"
)
;
await
setEmptyPrefWatchlist
(
)
;
Services
.
prefs
.
setBoolPref
(
TelemetryUtils
.
Preferences
.
TelemetryEnabled
true
)
;
}
)
;
add_task
(
async
function
test_record_activeTicks
(
)
{
await
TelemetryController
.
testSetup
(
)
;
let
checkActiveTicks
=
(
expected
)
=
>
{
let
payload
=
TelemetrySession
.
getPayload
(
)
;
Assert
.
equal
(
payload
.
simpleMeasurements
.
activeTicks
expected
"
TelemetrySession
must
record
the
expected
number
of
active
ticks
.
"
)
;
}
;
for
(
let
i
=
0
;
i
<
3
;
i
+
+
)
{
Services
.
obs
.
notifyObservers
(
null
"
user
-
interaction
-
active
"
)
;
}
checkActiveTicks
(
3
)
;
Services
.
obs
.
notifyObservers
(
null
"
user
-
interaction
-
inactive
"
)
;
checkActiveTicks
(
3
)
;
Services
.
obs
.
notifyObservers
(
null
"
user
-
interaction
-
active
"
)
;
checkActiveTicks
(
3
)
;
Services
.
obs
.
notifyObservers
(
null
"
user
-
interaction
-
active
"
)
;
checkActiveTicks
(
4
)
;
Services
.
obs
.
notifyObservers
(
null
"
user
-
interaction
-
active
"
)
;
checkActiveTicks
(
5
)
;
await
TelemetryController
.
testShutdown
(
)
;
}
)
;
