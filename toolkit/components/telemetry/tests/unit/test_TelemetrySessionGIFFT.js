"
use
strict
"
;
const
{
TelemetrySession
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
TelemetrySession
.
jsm
"
)
;
Services
.
prefs
.
setBoolPref
(
"
toolkit
.
telemetry
.
testing
.
overrideProductsCheck
"
true
)
;
add_task
(
function
test_setup
(
)
{
do_get_profile
(
)
;
Services
.
fog
.
initializeFOG
(
)
;
TelemetrySession
.
earlyInit
(
true
)
;
}
)
;
add_task
(
function
test_assemblingInstrumentation
(
)
{
Telemetry
.
clearScalars
(
)
;
let
snapshot
=
Telemetry
.
getSnapshotForScalars
(
)
.
parent
;
Assert
.
ok
(
!
snapshot
|
|
!
(
"
gifft
.
validation
.
main_ping_assembling
"
in
snapshot
)
)
;
Assert
.
ok
(
!
snapshot
|
|
!
(
"
gifft
.
validation
.
mirror_for_main_ping_assembling
"
in
snapshot
)
)
;
let
payload
=
TelemetrySession
.
getPayload
(
"
reason
"
true
)
;
snapshot
=
Telemetry
.
getSnapshotForScalars
(
)
.
parent
;
Assert
.
ok
(
!
snapshot
|
|
!
(
"
gifft
.
validation
.
main_ping_assembling
"
in
snapshot
)
)
;
Assert
.
ok
(
!
snapshot
|
|
!
(
"
gifft
.
validation
.
mirror_for_main_ping_assembling
"
in
snapshot
)
)
;
Assert
.
ok
(
payload
.
processes
.
parent
.
scalars
[
"
gifft
.
validation
.
main_ping_assembling
"
]
)
;
}
)
;
