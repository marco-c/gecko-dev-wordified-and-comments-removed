ChromeUtils
.
defineModuleGetter
(
this
"
TelemetryTestUtils
"
"
resource
:
/
/
testing
-
common
/
TelemetryTestUtils
.
jsm
"
)
;
add_task
(
async
function
test_bug1555798
(
)
{
Telemetry
.
clearEvents
(
)
;
const
DYNAMIC_CATEGORY
=
"
telemetry
.
test
.
dynamic
.
event
"
;
Telemetry
.
registerEvents
(
DYNAMIC_CATEGORY
{
an_event
:
{
methods
:
[
"
a_method
"
]
objects
:
[
"
an_object
"
"
another_object
"
]
record_on_release
:
true
expired
:
false
}
}
)
;
Telemetry
.
recordEvent
(
DYNAMIC_CATEGORY
"
a_method
"
"
an_object
"
)
;
for
(
let
i
=
0
;
i
<
100
;
+
+
i
)
{
Telemetry
.
registerScalars
(
"
telemetry
.
test
.
dynamic
"
+
i
{
scalar_name
:
{
kind
:
Ci
.
nsITelemetry
.
SCALAR_TYPE_COUNT
record_on_release
:
true
}
}
)
;
Telemetry
.
scalarAdd
(
"
telemetry
.
test
.
dynamic
"
+
i
+
"
.
scalar_name
"
1
)
;
}
Telemetry
.
recordEvent
(
DYNAMIC_CATEGORY
"
a_method
"
"
another_object
"
)
;
TelemetryTestUtils
.
assertNumberOfEvents
(
2
{
}
{
process
:
"
dynamic
"
}
)
;
}
)
;
