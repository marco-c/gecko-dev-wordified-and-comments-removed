"
use
strict
"
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
PromiseUtils
.
jsm
"
this
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
this
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
ContentTaskUtils
.
jsm
"
this
)
;
const
CONTENT_ONLY_UINT_SCALAR
=
"
telemetry
.
test
.
content_only_uint
"
;
const
ALL_PROCESSES_UINT_SCALAR
=
"
telemetry
.
test
.
all_processes_uint
"
;
const
DEFAULT_PRODUCTS_SCALAR
=
"
telemetry
.
test
.
default_products
"
;
const
CHILD_KEYED_UNSIGNED_INT
=
"
telemetry
.
test
.
child_keyed_unsigned_int
"
;
add_task
(
async
function
setup
(
)
{
let
profileDir
=
do_get_profile
(
true
)
;
Services
.
prefs
.
setBoolPref
(
"
toolkit
.
telemetry
.
isGeckoViewMode
"
true
)
;
let
env
=
Cc
[
"
mozilla
.
org
/
process
/
environment
;
1
"
]
.
getService
(
Ci
.
nsIEnvironment
)
;
env
.
set
(
"
MOZ_ANDROID_DATA_DIR
"
profileDir
.
path
)
;
}
)
;
add_task
(
async
function
test_MultiprocessScalarSemantics
(
)
{
Telemetry
.
clearScalars
(
)
;
TelemetryGeckoView
.
initPersistence
(
)
;
Telemetry
.
scalarSet
(
ALL_PROCESSES_UINT_SCALAR
34
)
;
let
child
=
run_in_child
(
"
test_GeckoView_content_scalars
.
js
"
)
;
await
waitForScalarSnapshotData
(
ALL_PROCESSES_UINT_SCALAR
"
parent
"
false
)
;
await
waitForScalarSnapshotData
(
CONTENT_ONLY_UINT_SCALAR
"
content
"
false
)
;
await
waitForScalarSnapshotData
(
ALL_PROCESSES_UINT_SCALAR
"
content
"
false
)
;
await
waitForScalarSnapshotData
(
CHILD_KEYED_UNSIGNED_INT
"
content
"
true
)
;
let
snapshot
=
Telemetry
.
snapshotScalars
(
Ci
.
nsITelemetry
.
DATASET_RELEASE_CHANNEL_OPTIN
false
)
;
let
keyedSnapshot
=
Telemetry
.
snapshotKeyedScalars
(
Ci
.
nsITelemetry
.
DATASET_RELEASE_CHANNEL_OPTIN
false
)
;
Assert
.
equal
(
snapshot
.
content
[
CONTENT_ONLY_UINT_SCALAR
]
14
The
{
CONTENT_ONLY_UINT_SCALAR
}
scalar
must
have
the
expected
value
in
the
content
section
.
)
;
Assert
.
equal
(
snapshot
.
content
[
ALL_PROCESSES_UINT_SCALAR
]
24
The
{
ALL_PROCESSES_UINT_SCALAR
}
scalar
must
have
the
expected
value
in
the
content
section
.
)
;
Assert
.
equal
(
snapshot
.
parent
[
ALL_PROCESSES_UINT_SCALAR
]
34
The
{
ALL_PROCESSES_UINT_SCALAR
}
scalar
must
have
the
expected
value
in
the
parent
section
.
)
;
Assert
.
equal
(
keyedSnapshot
.
content
[
CHILD_KEYED_UNSIGNED_INT
]
[
"
chewbacca
"
]
44
The
{
CHILD_KEYED_UNSIGNED_INT
}
keyed
scalar
must
have
the
expected
value
in
the
content
section
.
)
;
TelemetryGeckoView
.
forcePersist
(
)
;
TelemetryGeckoView
.
deInitPersistence
(
)
;
Telemetry
.
clearScalars
(
)
;
TelemetryGeckoView
.
deserializationStarted
(
)
;
Telemetry
.
scalarAdd
(
ALL_PROCESSES_UINT_SCALAR
10
)
;
do_send_remote_message
(
'
child
-
scalar
-
semantics
'
)
;
await
child
;
let
loadPromise
=
waitGeckoViewLoadComplete
(
)
;
TelemetryGeckoView
.
initPersistence
(
)
;
await
loadPromise
;
await
waitForScalarSnapshotData
(
DEFAULT_PRODUCTS_SCALAR
"
content
"
false
)
;
snapshot
=
Telemetry
.
snapshotScalars
(
Ci
.
nsITelemetry
.
DATASET_RELEASE_CHANNEL_OPTIN
false
)
;
keyedSnapshot
=
Telemetry
.
snapshotKeyedScalars
(
Ci
.
nsITelemetry
.
DATASET_RELEASE_CHANNEL_OPTIN
false
)
;
Assert
.
ok
(
"
parent
"
in
snapshot
"
The
snapshot
object
must
have
a
'
content
'
entry
.
"
)
;
Assert
.
ok
(
"
content
"
in
snapshot
"
The
snapshot
object
must
have
a
'
content
'
entry
.
"
)
;
Assert
.
ok
(
"
content
"
in
keyedSnapshot
"
The
keyed
snapshot
object
must
have
a
'
content
'
entry
.
"
)
;
Assert
.
ok
(
ALL_PROCESSES_UINT_SCALAR
in
snapshot
.
parent
The
{
ALL_PROCESSES_UINT_SCALAR
}
scalar
must
exist
in
the
parent
section
.
)
;
Assert
.
ok
(
CONTENT_ONLY_UINT_SCALAR
in
snapshot
.
content
The
{
CONTENT_ONLY_UINT_SCALAR
}
scalar
must
exist
in
the
content
section
.
)
;
Assert
.
ok
(
ALL_PROCESSES_UINT_SCALAR
in
snapshot
.
content
The
{
ALL_PROCESSES_UINT_SCALAR
}
scalar
must
exist
in
the
content
section
.
)
;
Assert
.
equal
(
snapshot
.
content
[
CONTENT_ONLY_UINT_SCALAR
]
24
The
{
CONTENT_ONLY_UINT_SCALAR
}
must
have
the
expected
value
in
the
content
section
.
)
;
Assert
.
equal
(
snapshot
.
content
[
ALL_PROCESSES_UINT_SCALAR
]
34
The
{
ALL_PROCESSES_UINT_SCALAR
}
must
have
the
expected
value
in
the
content
section
.
)
;
Assert
.
equal
(
snapshot
.
parent
[
ALL_PROCESSES_UINT_SCALAR
]
44
The
{
ALL_PROCESSES_UINT_SCALAR
}
must
have
the
expected
value
in
the
parent
section
.
)
;
Assert
.
equal
(
keyedSnapshot
.
content
[
CHILD_KEYED_UNSIGNED_INT
]
[
"
chewbacca
"
]
54
The
{
CHILD_KEYED_UNSIGNED_INT
}
keyed
scalar
must
have
the
expected
value
in
the
content
section
.
)
;
TelemetryGeckoView
.
deInitPersistence
(
)
;
}
)
;
add_task
(
async
function
cleanup
(
)
{
Services
.
prefs
.
clearUserPref
(
"
toolkit
.
telemetry
.
isGeckoViewMode
"
)
;
}
)
;
