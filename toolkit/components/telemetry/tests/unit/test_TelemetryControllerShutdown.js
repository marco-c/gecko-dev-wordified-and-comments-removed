"
use
strict
"
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
this
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
TelemetryController
.
jsm
"
this
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
TelemetrySend
.
jsm
"
this
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Timer
.
jsm
"
this
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
this
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
AsyncShutdown
.
jsm
"
this
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
TelemetryUtils
.
jsm
"
this
)
;
Cu
.
import
(
"
resource
:
/
/
testing
-
common
/
httpd
.
js
"
this
)
;
function
contentHandler
(
metadata
response
)
{
dump
(
"
contentHandler
called
for
path
:
"
+
metadata
.
_path
+
"
\
n
"
)
;
response
.
processAsync
(
)
;
response
.
setHeader
(
"
Content
-
Type
"
"
text
/
plain
"
)
;
}
add_task
(
function
*
test_setup
(
)
{
do_get_profile
(
)
;
loadAddonManager
(
"
xpcshell
tests
.
mozilla
.
org
"
"
XPCShell
"
"
1
"
"
1
.
9
.
2
"
)
;
yield
setEmptyPrefWatchlist
(
)
;
Services
.
prefs
.
setBoolPref
(
TelemetryUtils
.
Preferences
.
TelemetryEnabled
true
)
;
Services
.
prefs
.
setBoolPref
(
TelemetryUtils
.
Preferences
.
FhrUploadEnabled
true
)
;
}
)
;
add_task
(
function
*
test_sendTelemetryShutsDownWithinReasonableTimeout
(
)
{
const
CRASH_TIMEOUT_MS
=
5
*
1000
;
Services
.
prefs
.
setBoolPref
(
"
toolkit
.
asyncshutdown
.
testing
"
true
)
;
Services
.
prefs
.
setIntPref
(
"
toolkit
.
asyncshutdown
.
crash_timeout
"
CRASH_TIMEOUT_MS
)
;
let
httpServer
=
new
HttpServer
(
)
;
httpServer
.
registerPrefixHandler
(
"
/
"
contentHandler
)
;
httpServer
.
start
(
-
1
)
;
yield
TelemetryController
.
testSetup
(
)
;
TelemetrySend
.
setServer
(
"
http
:
/
/
localhost
:
"
+
httpServer
.
identity
.
primaryPort
)
;
let
submissionPromise
=
TelemetryController
.
submitExternalPing
(
"
test
-
ping
-
type
"
{
}
)
;
AsyncShutdown
.
profileBeforeChange
.
_trigger
(
)
;
AsyncShutdown
.
sendTelemetry
.
_trigger
(
)
;
yield
submissionPromise
;
Assert
.
ok
(
true
"
Didn
'
t
time
out
on
shutdown
.
"
)
;
}
)
;
