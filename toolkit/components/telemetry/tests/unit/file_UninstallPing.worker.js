importScripts
(
"
resource
:
/
/
gre
/
modules
/
workers
/
require
.
js
"
)
;
const
PromiseWorker
=
require
(
"
resource
:
/
/
gre
/
modules
/
workers
/
PromiseWorker
.
js
"
)
;
const
Agent
=
{
_file
:
null
open
(
path
)
{
this
.
_file
=
IOUtils
.
openFileForSyncReading
(
path
)
;
}
close
(
)
{
this
.
_file
.
close
(
)
;
}
}
;
const
worker
=
new
PromiseWorker
.
AbstractWorker
(
)
;
worker
.
dispatch
=
function
(
method
args
=
[
]
)
{
return
Agent
[
method
]
(
.
.
.
args
)
;
}
;
worker
.
postMessage
=
function
(
result
.
.
.
transfers
)
{
self
.
postMessage
(
result
.
.
.
transfers
)
;
}
;
worker
.
close
=
function
(
)
{
self
.
close
(
)
;
}
;
self
.
addEventListener
(
"
message
"
msg
=
>
worker
.
handleMessage
(
msg
)
)
;
self
.
addEventListener
(
"
unhandledrejection
"
function
(
error
)
{
throw
error
.
reason
;
}
)
;
