#
ifndef
TelemetryIPCAccumulator_h__
#
define
TelemetryIPCAccumulator_h__
#
include
"
mozilla
/
AlreadyAddRefed
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsStringFwd
.
h
"
#
include
"
TelemetryComms
.
h
"
class
nsIRunnable
;
class
nsITimer
;
namespace
mozilla
{
class
TimeStamp
;
namespace
TelemetryIPCAccumulator
{
void
AccumulateChildHistogram
(
mozilla
:
:
Telemetry
:
:
HistogramID
aId
uint32_t
aSample
)
;
void
AccumulateChildKeyedHistogram
(
mozilla
:
:
Telemetry
:
:
HistogramID
aId
const
nsCString
&
aKey
uint32_t
aSample
)
;
void
RecordChildScalarAction
(
uint32_t
aId
bool
aDynamic
mozilla
:
:
Telemetry
:
:
ScalarActionType
aAction
const
mozilla
:
:
Telemetry
:
:
ScalarVariant
&
aValue
)
;
void
RecordChildKeyedScalarAction
(
uint32_t
aId
bool
aDynamic
const
nsAString
&
aKey
mozilla
:
:
Telemetry
:
:
ScalarActionType
aAction
const
mozilla
:
:
Telemetry
:
:
ScalarVariant
&
aValue
)
;
void
RecordChildEvent
(
const
mozilla
:
:
TimeStamp
&
timestamp
const
nsACString
&
category
const
nsACString
&
method
const
nsACString
&
object
const
mozilla
:
:
Maybe
<
nsCString
>
&
value
const
nsTArray
<
mozilla
:
:
Telemetry
:
:
EventExtraEntry
>
&
extra
)
;
void
IPCTimerFired
(
nsITimer
*
aTimer
void
*
aClosure
)
;
void
DeInitializeGlobalState
(
)
;
void
DispatchToMainThread
(
already_AddRefed
<
nsIRunnable
>
&
&
aEvent
)
;
}
}
#
endif
