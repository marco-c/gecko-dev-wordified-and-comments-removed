#
include
"
TelemetryIPCAccumulator
.
h
"
using
mozilla
:
:
Telemetry
:
:
ScalarActionType
;
using
mozilla
:
:
Telemetry
:
:
ScalarVariant
;
namespace
TelemetryIPCAccumulator
=
mozilla
:
:
TelemetryIPCAccumulator
;
void
TelemetryIPCAccumulator
:
:
AccumulateChildHistogram
(
mozilla
:
:
Telemetry
:
:
HistogramID
aId
uint32_t
aSample
)
{
}
void
TelemetryIPCAccumulator
:
:
AccumulateChildKeyedHistogram
(
mozilla
:
:
Telemetry
:
:
HistogramID
aId
const
nsCString
&
aKey
uint32_t
aSample
)
{
}
void
TelemetryIPCAccumulator
:
:
RecordChildScalarAction
(
uint32_t
aId
bool
aDynamic
ScalarActionType
aAction
const
ScalarVariant
&
aValue
)
{
}
void
TelemetryIPCAccumulator
:
:
RecordChildKeyedScalarAction
(
uint32_t
aId
bool
aDynamic
const
nsAString
&
aKey
ScalarActionType
aAction
const
ScalarVariant
&
aValue
)
{
}
void
TelemetryIPCAccumulator
:
:
RecordChildEvent
(
const
mozilla
:
:
TimeStamp
&
timestamp
const
nsACString
&
category
const
nsACString
&
method
const
nsACString
&
object
const
mozilla
:
:
Maybe
<
nsCString
>
&
value
const
nsTArray
<
mozilla
:
:
Telemetry
:
:
EventExtraEntry
>
&
extra
)
{
}
void
TelemetryIPCAccumulator
:
:
IPCTimerFired
(
nsITimer
*
aTimer
void
*
aClosure
)
{
}
void
TelemetryIPCAccumulator
:
:
DeInitializeGlobalState
(
)
{
}
void
TelemetryIPCAccumulator
:
:
DispatchToMainThread
(
already_AddRefed
<
nsIRunnable
>
&
&
aEvent
)
{
}
