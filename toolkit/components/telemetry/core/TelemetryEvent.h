#
ifndef
TelemetryEvent_h__
#
define
TelemetryEvent_h__
#
include
<
stdint
.
h
>
#
include
"
mozilla
/
TelemetryEventEnums
.
h
"
#
include
"
mozilla
/
TelemetryProcessEnums
.
h
"
namespace
mozilla
{
namespace
Telemetry
{
struct
ChildEventData
;
}
}
namespace
TelemetryEvent
{
void
InitializeGlobalState
(
bool
canRecordBase
bool
canRecordExtended
)
;
void
DeInitializeGlobalState
(
)
;
void
SetCanRecordBase
(
bool
b
)
;
void
SetCanRecordExtended
(
bool
b
)
;
nsresult
RecordEvent
(
const
nsACString
&
aCategory
const
nsACString
&
aMethod
const
nsACString
&
aObject
JS
:
:
HandleValue
aValue
JS
:
:
HandleValue
aExtra
JSContext
*
aCx
uint8_t
optional_argc
)
;
void
SetEventRecordingEnabled
(
const
nsACString
&
aCategory
bool
aEnabled
)
;
nsresult
RegisterEvents
(
const
nsACString
&
aCategory
JS
:
:
Handle
<
JS
:
:
Value
>
aEventData
bool
aBuiltin
JSContext
*
cx
)
;
nsresult
CreateSnapshots
(
uint32_t
aDataset
bool
aClear
uint32_t
aEventLimit
JSContext
*
aCx
uint8_t
optional_argc
JS
:
:
MutableHandleValue
aResult
)
;
nsresult
RecordChildEvents
(
mozilla
:
:
Telemetry
:
:
ProcessID
aProcessType
const
nsTArray
<
mozilla
:
:
Telemetry
:
:
ChildEventData
>
&
aEvents
)
;
void
ClearEvents
(
)
;
size_t
SizeOfIncludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
;
}
#
endif
