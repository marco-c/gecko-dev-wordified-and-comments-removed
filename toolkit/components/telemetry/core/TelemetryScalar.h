#
ifndef
TelemetryScalar_h__
#
define
TelemetryScalar_h__
#
include
<
stdint
.
h
>
#
include
"
mozilla
/
TelemetryProcessEnums
.
h
"
#
include
"
mozilla
/
TelemetryScalarEnums
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
TelemetryCommon
.
h
"
namespace
mozilla
{
namespace
Telemetry
{
struct
ScalarAction
;
struct
KeyedScalarAction
;
struct
DiscardedData
;
struct
DynamicScalarDefinition
;
}
}
namespace
TelemetryScalar
{
void
InitializeGlobalState
(
bool
canRecordBase
bool
canRecordExtended
)
;
void
DeInitializeGlobalState
(
)
;
void
SetCanRecordBase
(
bool
b
)
;
void
SetCanRecordExtended
(
bool
b
)
;
nsresult
CreateSnapshots
(
unsigned
int
aDataset
bool
aClearScalars
JSContext
*
aCx
uint8_t
optional_argc
JS
:
:
MutableHandle
<
JS
:
:
Value
>
aResult
bool
aFilterTest
const
nsACString
&
aStoreName
)
;
nsresult
CreateKeyedSnapshots
(
unsigned
int
aDataset
bool
aClearScalars
JSContext
*
aCx
uint8_t
optional_argc
JS
:
:
MutableHandle
<
JS
:
:
Value
>
aResult
bool
aFilterTest
const
nsACString
&
aStoreName
)
;
void
Add
(
mozilla
:
:
Telemetry
:
:
ScalarID
aId
uint32_t
aValue
)
;
void
Set
(
mozilla
:
:
Telemetry
:
:
ScalarID
aId
uint32_t
aValue
)
;
void
Set
(
mozilla
:
:
Telemetry
:
:
ScalarID
aId
const
nsAString
&
aValue
)
;
void
Set
(
mozilla
:
:
Telemetry
:
:
ScalarID
aId
bool
aValue
)
;
void
Add
(
mozilla
:
:
Telemetry
:
:
ScalarID
aId
const
nsAString
&
aKey
uint32_t
aValue
)
;
void
Set
(
mozilla
:
:
Telemetry
:
:
ScalarID
aId
const
nsAString
&
aKey
uint32_t
aValue
)
;
void
Set
(
mozilla
:
:
Telemetry
:
:
ScalarID
aId
const
nsAString
&
aKey
bool
aValue
)
;
nsresult
RegisterScalars
(
const
nsACString
&
aCategoryName
JS
:
:
Handle
<
JS
:
:
Value
>
aScalarData
JSContext
*
cx
)
;
void
SummarizeEvent
(
const
nsCString
&
aUniqueEventName
mozilla
:
:
Telemetry
:
:
ProcessID
aProcessType
)
;
void
ClearScalars
(
)
;
size_t
GetMapShallowSizesOfExcludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
;
size_t
GetScalarSizesOfIncludingThis
(
mozilla
:
:
MallocSizeOf
aMallocSizeOf
)
;
void
UpdateChildData
(
mozilla
:
:
Telemetry
:
:
ProcessID
aProcessType
const
nsTArray
<
mozilla
:
:
Telemetry
:
:
ScalarAction
>
&
aScalarActions
)
;
void
UpdateChildKeyedData
(
mozilla
:
:
Telemetry
:
:
ProcessID
aProcessType
const
nsTArray
<
mozilla
:
:
Telemetry
:
:
KeyedScalarAction
>
&
aScalarActions
)
;
void
RecordDiscardedData
(
mozilla
:
:
Telemetry
:
:
ProcessID
aProcessType
const
mozilla
:
:
Telemetry
:
:
DiscardedData
&
aDiscardedData
)
;
void
GetDynamicScalarDefinitions
(
nsTArray
<
mozilla
:
:
Telemetry
:
:
DynamicScalarDefinition
>
&
)
;
void
AddDynamicScalarDefinitions
(
const
nsTArray
<
mozilla
:
:
Telemetry
:
:
DynamicScalarDefinition
>
&
)
;
nsresult
GetAllStores
(
mozilla
:
:
Telemetry
:
:
Common
:
:
StringHashSet
&
set
)
;
}
#
endif
