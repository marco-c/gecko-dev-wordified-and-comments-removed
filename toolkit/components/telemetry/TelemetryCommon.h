#
ifndef
TelemetryCommon_h__
#
define
TelemetryCommon_h__
#
include
"
nsTHashtable
.
h
"
#
include
"
jsapi
.
h
"
#
include
"
nsIScriptError
.
h
"
namespace
mozilla
{
namespace
Telemetry
{
namespace
Common
{
template
<
class
EntryType
>
class
AutoHashtable
:
public
nsTHashtable
<
EntryType
>
{
public
:
explicit
AutoHashtable
(
uint32_t
initLength
=
PLDHashTable
:
:
kDefaultInitialLength
)
;
typedef
bool
(
*
ReflectEntryFunc
)
(
EntryType
*
entry
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
obj
)
;
bool
ReflectIntoJS
(
ReflectEntryFunc
entryFunc
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
obj
)
;
}
;
template
<
class
EntryType
>
AutoHashtable
<
EntryType
>
:
:
AutoHashtable
(
uint32_t
initLength
)
:
nsTHashtable
<
EntryType
>
(
initLength
)
{
}
template
<
typename
EntryType
>
bool
AutoHashtable
<
EntryType
>
:
:
ReflectIntoJS
(
ReflectEntryFunc
entryFunc
JSContext
*
cx
JS
:
:
Handle
<
JSObject
*
>
obj
)
{
for
(
auto
iter
=
this
-
>
Iter
(
)
;
!
iter
.
Done
(
)
;
iter
.
Next
(
)
)
{
if
(
!
entryFunc
(
iter
.
Get
(
)
cx
obj
)
)
{
return
false
;
}
}
return
true
;
}
bool
IsExpiredVersion
(
const
char
*
aExpiration
)
;
bool
IsInDataset
(
uint32_t
aDataset
uint32_t
aContainingDataset
)
;
bool
CanRecordDataset
(
uint32_t
aDataset
bool
aCanRecordBase
bool
aCanRecordExtended
)
;
nsresult
MsSinceProcessStart
(
double
*
aResult
)
;
void
LogToBrowserConsole
(
uint32_t
aLogLevel
const
nsAString
&
aMsg
)
;
}
}
}
#
endif
