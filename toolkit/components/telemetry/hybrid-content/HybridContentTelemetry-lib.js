if
(
typeof
Mozilla
=
=
"
undefined
"
)
{
var
Mozilla
=
{
}
;
}
(
function
(
)
{
"
use
strict
"
;
var
_canUpload
=
false
;
if
(
typeof
Mozilla
.
ContentTelemetry
=
=
"
undefined
"
)
{
Mozilla
.
ContentTelemetry
=
{
}
;
}
function
_sendMessageToChrome
(
name
data
)
{
var
event
=
new
CustomEvent
(
"
mozTelemetry
"
{
bubbles
:
true
detail
:
{
name
data
:
data
|
|
{
}
}
}
)
;
document
.
dispatchEvent
(
event
)
;
}
function
_registerInternalPolicyHandler
(
)
{
function
policyChangeHandler
(
updatedPref
)
{
if
(
!
(
"
detail
"
in
updatedPref
)
|
|
!
(
"
canUpload
"
in
updatedPref
.
detail
)
|
|
typeof
updatedPref
.
detail
.
canUpload
!
=
"
boolean
"
)
{
return
;
}
_canUpload
=
updatedPref
.
detail
.
canUpload
;
}
document
.
addEventListener
(
"
mozTelemetryPolicyChange
"
policyChangeHandler
)
;
_sendMessageToChrome
(
"
init
"
)
;
}
Mozilla
.
ContentTelemetry
.
canUpload
=
function
(
)
{
return
_canUpload
;
}
;
Mozilla
.
ContentTelemetry
.
registerEvents
=
function
(
category
eventData
)
{
_sendMessageToChrome
(
"
registerEvents
"
{
category
eventData
}
)
;
}
;
Mozilla
.
ContentTelemetry
.
recordEvent
=
function
(
category
method
object
value
extra
)
{
_sendMessageToChrome
(
"
recordEvent
"
{
category
method
object
value
extra
}
)
;
}
;
_registerInternalPolicyHandler
(
)
;
}
)
(
)
;
if
(
typeof
module
!
=
=
"
undefined
"
&
&
module
.
exports
)
{
module
.
exports
=
Mozilla
.
ContentTelemetry
;
}
