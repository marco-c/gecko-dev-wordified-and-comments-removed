#
include
"
nsITelemetry
.
h
"
#
include
"
nsVersionComparator
.
h
"
#
include
"
TelemetryCommon
.
h
"
#
include
<
cstring
>
namespace
mozilla
{
namespace
Telemetry
{
namespace
Common
{
bool
IsExpiredVersion
(
const
char
*
aExpiration
)
{
static
mozilla
:
:
Version
current_version
=
mozilla
:
:
Version
(
MOZ_APP_VERSION
)
;
MOZ_ASSERT
(
aExpiration
)
;
return
strcmp
(
aExpiration
"
never
"
)
&
&
strcmp
(
aExpiration
"
default
"
)
&
&
(
mozilla
:
:
Version
(
aExpiration
)
<
=
current_version
)
;
}
bool
IsInDataset
(
uint32_t
aDataset
uint32_t
aContainingDataset
)
{
if
(
aDataset
=
=
aContainingDataset
)
{
return
true
;
}
if
(
aContainingDataset
=
=
nsITelemetry
:
:
DATASET_RELEASE_CHANNEL_OPTIN
&
&
aDataset
=
=
nsITelemetry
:
:
DATASET_RELEASE_CHANNEL_OPTOUT
)
{
return
true
;
}
return
false
;
}
bool
CanRecordDataset
(
uint32_t
aDataset
bool
aCanRecordBase
bool
aCanRecordExtended
)
{
if
(
aCanRecordExtended
)
{
return
true
;
}
if
(
aCanRecordBase
&
&
IsInDataset
(
aDataset
nsITelemetry
:
:
DATASET_RELEASE_CHANNEL_OPTOUT
)
)
{
return
true
;
}
return
false
;
}
}
}
}
