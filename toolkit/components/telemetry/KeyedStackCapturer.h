#
ifndef
KeyedStackCapturer_h__
#
define
KeyedStackCapturer_h__
#
ifdef
MOZ_GECKO_PROFILER
#
include
"
Telemetry
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsClassHashtable
.
h
"
#
include
"
mozilla
/
Mutex
.
h
"
#
include
"
CombinedStacks
.
h
"
struct
JSContext
;
namespace
mozilla
{
namespace
Telemetry
{
class
KeyedStackCapturer
{
public
:
KeyedStackCapturer
(
)
:
mStackCapturerMutex
(
"
Telemetry
:
:
StackCapturerMutex
"
)
{
}
void
Capture
(
const
nsACString
&
aKey
)
;
NS_IMETHODIMP
ReflectCapturedStacks
(
JSContext
*
cx
JS
:
:
MutableHandle
<
JS
:
:
Value
>
ret
)
;
void
Clear
(
)
;
private
:
struct
StackFrequencyInfo
{
uint32_t
mCount
;
uint32_t
mIndex
;
StackFrequencyInfo
(
uint32_t
aCount
uint32_t
aIndex
)
:
mCount
(
aCount
)
mIndex
(
aIndex
)
{
}
}
;
typedef
nsClassHashtable
<
nsCStringHashKey
StackFrequencyInfo
>
FrequencyInfoMapType
;
FrequencyInfoMapType
mStackInfos
;
CombinedStacks
mStacks
;
Mutex
mStackCapturerMutex
;
}
;
}
}
#
endif
#
endif
