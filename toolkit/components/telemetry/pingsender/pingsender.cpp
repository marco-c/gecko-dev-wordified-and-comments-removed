#
include
<
cstdlib
>
#
include
<
string
>
#
include
<
cstdio
>
#
include
"
pingsender
.
h
"
using
std
:
:
string
;
namespace
PingSender
{
const
char
*
kUserAgent
=
"
pingsender
/
1
.
0
"
;
static
std
:
:
string
ReadPingFromStdin
(
)
{
const
size_t
kBufferSize
=
32768
;
char
buff
[
kBufferSize
]
;
string
ping
;
size_t
readBytes
=
0
;
do
{
readBytes
=
fread
(
buff
1
kBufferSize
stdin
)
;
ping
.
append
(
buff
readBytes
)
;
}
while
(
!
feof
(
stdin
)
&
&
!
ferror
(
stdin
)
)
;
if
(
ferror
(
stdin
)
)
{
PINGSENDER_LOG
(
"
ERROR
:
Could
not
read
from
stdin
\
n
"
)
;
return
"
"
;
}
return
ping
;
}
}
using
namespace
PingSender
;
int
main
(
int
argc
char
*
argv
[
]
)
{
string
url
;
if
(
argc
=
=
2
)
{
url
=
argv
[
1
]
;
}
else
{
PINGSENDER_LOG
(
"
Usage
:
pingsender
URL
\
n
"
"
Send
the
payload
passed
via
stdin
to
the
specified
URL
"
"
using
an
HTTP
POST
message
\
n
"
)
;
exit
(
EXIT_FAILURE
)
;
}
if
(
url
.
empty
(
)
)
{
PINGSENDER_LOG
(
"
ERROR
:
No
URL
was
provided
\
n
"
)
;
exit
(
EXIT_FAILURE
)
;
}
string
ping
(
ReadPingFromStdin
(
)
)
;
if
(
ping
.
empty
(
)
)
{
PINGSENDER_LOG
(
"
ERROR
:
Ping
payload
is
empty
\
n
"
)
;
exit
(
EXIT_FAILURE
)
;
}
if
(
!
Post
(
url
ping
)
)
{
exit
(
EXIT_FAILURE
)
;
}
exit
(
EXIT_SUCCESS
)
;
}
