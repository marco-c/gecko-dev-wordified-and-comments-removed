#
ifndef
UntrustedModulesDataSerializer_h__
#
define
UntrustedModulesDataSerializer_h__
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
UntrustedModulesData
.
h
"
#
include
"
mozilla
/
Vector
.
h
"
#
include
"
nsDataHashtable
.
h
"
namespace
mozilla
{
namespace
Telemetry
{
class
MOZ_RAII
UntrustedModulesDataSerializer
final
{
using
IndexMap
=
nsDataHashtable
<
nsStringHashKey
uint32_t
>
;
nsresult
mCtorResult
;
JSContext
*
mCx
;
JS
:
:
RootedObject
mMainObj
;
JS
:
:
RootedObject
mModulesArray
;
JS
:
:
RootedObject
mPerProcObjContainer
;
IndexMap
mIndexMap
;
const
uint32_t
mMaxModulesArrayLen
;
uint32_t
mCurModulesArrayIdx
;
static
bool
SerializeEvent
(
JSContext
*
aCx
JS
:
:
MutableHandleValue
aElement
const
ProcessedModuleLoadEvent
&
aEvent
const
IndexMap
&
aModuleIndices
)
;
nsresult
GetPerProcObject
(
const
UntrustedModulesData
&
aData
JS
:
:
MutableHandleObject
aObj
)
;
nsresult
AddSingleData
(
const
UntrustedModulesData
&
aData
)
;
public
:
UntrustedModulesDataSerializer
(
JSContext
*
aCx
uint32_t
aMaxModulesArrayLen
)
;
explicit
operator
bool
(
)
const
;
void
GetObject
(
JS
:
:
MutableHandleValue
aRet
)
;
nsresult
Add
(
const
Vector
<
UntrustedModulesData
>
&
aData
)
;
}
;
}
}
#
endif
