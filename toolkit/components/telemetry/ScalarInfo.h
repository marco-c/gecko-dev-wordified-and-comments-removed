#
ifndef
TelemetryScalarInfo_h__
#
define
TelemetryScalarInfo_h__
#
include
"
TelemetryCommon
.
h
"
namespace
{
struct
BaseScalarInfo
{
uint32_t
kind
;
uint32_t
dataset
;
mozilla
:
:
Telemetry
:
:
Common
:
:
RecordedProcessType
record_in_processes
;
bool
keyed
;
mozilla
:
:
Telemetry
:
:
Common
:
:
SupportedProduct
products
;
bool
builtin
;
BaseScalarInfo
(
uint32_t
aKind
uint32_t
aDataset
mozilla
:
:
Telemetry
:
:
Common
:
:
RecordedProcessType
aRecordInProcess
bool
aKeyed
mozilla
:
:
Telemetry
:
:
Common
:
:
SupportedProduct
aProducts
bool
aBuiltin
=
true
)
:
kind
(
aKind
)
dataset
(
aDataset
)
record_in_processes
(
aRecordInProcess
)
keyed
(
aKeyed
)
products
(
aProducts
)
builtin
(
aBuiltin
)
{
}
virtual
~
BaseScalarInfo
(
)
{
}
virtual
const
char
*
name
(
)
const
=
0
;
virtual
const
char
*
expiration
(
)
const
=
0
;
}
;
struct
ScalarInfo
:
BaseScalarInfo
{
uint32_t
name_offset
;
uint32_t
expiration_offset
;
ScalarInfo
(
uint32_t
aKind
uint32_t
aNameOffset
uint32_t
aExpirationOffset
uint32_t
aDataset
mozilla
:
:
Telemetry
:
:
Common
:
:
RecordedProcessType
aRecordInProcess
bool
aKeyed
mozilla
:
:
Telemetry
:
:
Common
:
:
SupportedProduct
aProducts
)
:
BaseScalarInfo
(
aKind
aDataset
aRecordInProcess
aKeyed
aProducts
)
name_offset
(
aNameOffset
)
expiration_offset
(
aExpirationOffset
)
{
}
const
char
*
name
(
)
const
override
;
const
char
*
expiration
(
)
const
override
;
}
;
}
#
endif
