"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
WebNavigationFrames
"
]
;
function
getFrameId
(
bc
)
{
if
(
!
BrowsingContext
.
isInstance
(
bc
)
)
{
bc
=
bc
.
browsingContext
;
}
return
bc
.
parent
?
bc
.
id
:
0
;
}
function
getParentFrameId
(
bc
)
{
if
(
!
BrowsingContext
.
isInstance
(
bc
)
)
{
bc
=
bc
.
browsingContext
;
}
return
bc
.
parent
?
getFrameId
(
bc
.
parent
)
:
-
1
;
}
function
getFrameDetail
(
bc
)
{
return
{
frameId
:
getFrameId
(
bc
)
parentFrameId
:
getParentFrameId
(
bc
)
url
:
bc
.
currentURI
?
.
spec
}
;
}
var
WebNavigationFrames
=
{
getFrame
(
bc
frameId
)
{
let
frame
=
BrowsingContext
.
get
(
frameId
|
|
bc
.
id
)
;
if
(
frame
&
&
frame
.
top
=
=
=
bc
)
{
return
getFrameDetail
(
frame
)
;
}
return
null
;
}
getFrameId
getParentFrameId
getAllFrames
(
bc
)
{
let
frames
=
[
]
;
function
visit
(
bc
)
{
frames
.
push
(
bc
)
;
bc
.
children
.
forEach
(
visit
)
;
}
visit
(
bc
)
;
return
frames
.
map
(
getFrameDetail
)
;
}
getFromWindow
(
target
)
{
if
(
Window
.
isInstance
(
target
)
)
{
return
getFrameId
(
BrowsingContext
.
getFromWindow
(
target
)
)
;
}
return
-
1
;
}
}
;
