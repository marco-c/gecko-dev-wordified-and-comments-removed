"
use
strict
"
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
ProxyScriptContext
"
"
resource
:
/
/
gre
/
modules
/
ProxyScriptContext
.
jsm
"
)
;
let
proxyScriptContextMap
=
new
WeakMap
(
)
;
this
.
proxy
=
class
extends
ExtensionAPI
{
onShutdown
(
)
{
let
{
extension
}
=
this
;
let
proxyScriptContext
=
proxyScriptContextMap
.
get
(
extension
)
;
if
(
proxyScriptContext
)
{
proxyScriptContext
.
unload
(
)
;
proxyScriptContextMap
.
delete
(
extension
)
;
}
}
getAPI
(
context
)
{
let
{
extension
}
=
context
;
return
{
proxy
:
{
registerProxyScript
:
(
url
)
=
>
{
if
(
proxyScriptContextMap
.
has
(
extension
)
)
{
proxyScriptContextMap
.
get
(
extension
)
.
unload
(
)
;
proxyScriptContextMap
.
delete
(
extension
)
;
}
let
proxyScriptContext
=
new
ProxyScriptContext
(
extension
url
)
;
if
(
proxyScriptContext
.
load
(
)
)
{
proxyScriptContextMap
.
set
(
extension
proxyScriptContext
)
;
}
}
onProxyError
:
new
SingletonEventManager
(
context
"
proxy
.
onProxyError
"
fire
=
>
{
let
listener
=
(
name
error
)
=
>
{
fire
.
async
(
error
)
;
}
;
extension
.
on
(
"
proxy
-
error
"
listener
)
;
return
(
)
=
>
{
extension
.
off
(
"
proxy
-
error
"
listener
)
;
}
;
}
)
.
api
(
)
}
}
;
}
}
;
