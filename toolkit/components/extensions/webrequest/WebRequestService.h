#
ifndef
mozilla_WebRequestService_h
#
define
mozilla_WebRequestService_h
#
include
"
mozilla
/
LinkedList
.
h
"
#
include
"
mozilla
/
UniquePtr
.
h
"
#
include
"
mozilla
/
extensions
/
ChannelWrapper
.
h
"
#
include
"
mozilla
/
extensions
/
WebExtensionPolicy
.
h
"
#
include
"
nsHashKeys
.
h
"
#
include
"
nsDataHashtable
.
h
"
class
nsAtom
;
class
nsITabParent
;
class
nsITraceableChannel
;
namespace
mozilla
{
namespace
dom
{
class
TabParent
;
class
nsIContentParent
;
}
namespace
extensions
{
class
WebRequestChannelEntry
final
{
public
:
~
WebRequestChannelEntry
(
)
;
private
:
friend
class
WebRequestService
;
explicit
WebRequestChannelEntry
(
ChannelWrapper
*
aChannel
)
;
uint64_t
mChannelId
;
WeakPtr
<
ChannelWrapper
>
mChannel
;
}
;
class
WebRequestService
final
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
WebRequestService
)
WebRequestService
(
)
=
default
;
static
already_AddRefed
<
WebRequestService
>
GetInstance
(
)
{
return
do_AddRef
(
&
GetSingleton
(
)
)
;
}
static
WebRequestService
&
GetSingleton
(
)
;
using
ChannelEntry
=
WebRequestChannelEntry
;
UniquePtr
<
ChannelEntry
>
RegisterChannel
(
ChannelWrapper
*
aChannel
)
;
void
UnregisterTraceableChannel
(
uint64_t
aChannelId
)
;
already_AddRefed
<
nsITraceableChannel
>
GetTraceableChannel
(
uint64_t
aChannelId
nsAtom
*
aAddonId
dom
:
:
nsIContentParent
*
aContentParent
)
;
private
:
~
WebRequestService
(
)
;
friend
ChannelEntry
;
nsDataHashtable
<
nsUint64HashKey
ChannelEntry
*
>
mChannelEntries
;
}
;
}
}
#
endif
