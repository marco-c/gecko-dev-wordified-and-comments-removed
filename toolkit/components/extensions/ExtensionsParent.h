#
ifndef
mozilla_extensions_ExtensionsParent_h
#
define
mozilla_extensions_ExtensionsParent_h
#
include
"
mozilla
/
extensions
/
PExtensionsParent
.
h
"
#
include
"
nsISupportsImpl
.
h
"
class
extIWebNavigation
;
namespace
mozilla
{
namespace
extensions
{
class
ExtensionsParent
final
:
public
PExtensionsParent
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
ExtensionsParent
final
)
ExtensionsParent
(
)
;
ipc
:
:
IPCResult
RecvDocumentChange
(
MaybeDiscardedBrowsingContext
&
&
aBC
FrameTransitionData
&
&
aTransitionData
nsIURI
*
aLocation
)
;
ipc
:
:
IPCResult
RecvHistoryChange
(
MaybeDiscardedBrowsingContext
&
&
aBC
FrameTransitionData
&
&
aTransitionData
nsIURI
*
aLocation
bool
aIsHistoryStateUpdated
bool
aIsReferenceFragmentUpdated
)
;
ipc
:
:
IPCResult
RecvStateChange
(
MaybeDiscardedBrowsingContext
&
&
aBC
nsIURI
*
aRequestURI
nsresult
aStatus
uint32_t
aStateFlags
)
;
ipc
:
:
IPCResult
RecvCreatedNavigationTarget
(
MaybeDiscardedBrowsingContext
&
&
aBC
MaybeDiscardedBrowsingContext
&
&
aSourceBC
const
nsCString
&
aURI
)
;
ipc
:
:
IPCResult
RecvDOMContentLoaded
(
MaybeDiscardedBrowsingContext
&
&
aBC
nsIURI
*
aDocumentURI
)
;
private
:
~
ExtensionsParent
(
)
;
extIWebNavigation
*
WebNavigation
(
)
;
nsCOMPtr
<
extIWebNavigation
>
mWebNavigation
;
protected
:
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
override
;
}
;
}
}
#
endif
