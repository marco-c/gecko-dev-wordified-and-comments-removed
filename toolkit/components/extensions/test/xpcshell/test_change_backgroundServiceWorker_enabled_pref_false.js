"
use
strict
"
;
const
PREF_EXT_SW_ENABLED
=
"
extensions
.
backgroundServiceWorker
.
enabled
"
;
add_task
(
async
function
test_backgroundServiceWorkerEnabled
(
)
{
Assert
.
equal
(
Services
.
prefs
.
getBoolPref
(
PREF_EXT_SW_ENABLED
)
false
"
Pref
value
should
be
false
"
)
;
Assert
.
equal
(
WebExtensionPolicy
.
backgroundServiceWorkerEnabled
false
"
backgroundServiceWorkerEnabled
should
be
false
"
)
;
if
(
AppConstants
.
MOZ_WEBEXT_WEBIDL_ENABLED
)
{
Assert
.
ok
(
!
Services
.
prefs
.
prefIsLocked
(
PREF_EXT_SW_ENABLED
)
"
Pref
should
be
not
locked
when
MOZ_WEBEXT_WEBIDL_ENABLED
is
true
"
)
;
}
else
{
Assert
.
ok
(
Services
.
prefs
.
prefIsLocked
(
PREF_EXT_SW_ENABLED
)
"
Pref
should
be
locked
when
MOZ_WEBEXT_WEBIDL_ENABLED
is
false
"
)
;
Services
.
prefs
.
unlockPref
(
PREF_EXT_SW_ENABLED
)
;
}
Services
.
prefs
.
setBoolPref
(
PREF_EXT_SW_ENABLED
true
)
;
Assert
.
ok
(
Services
.
prefs
.
getBoolPref
(
PREF_EXT_SW_ENABLED
)
"
pref
can
change
after
setting
it
"
)
;
Assert
.
equal
(
WebExtensionPolicy
.
backgroundServiceWorkerEnabled
false
"
backgroundServiceWorkerEnabled
is
still
false
despite
the
pref
flip
"
)
;
}
)
;
