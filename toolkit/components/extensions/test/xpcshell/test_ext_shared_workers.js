"
use
strict
"
;
add_task
(
async
function
test_spawn_shared_worker
(
)
{
const
background
=
WebExtensionPolicy
.
useRemoteWebExtensions
?
async
function
(
)
{
const
worker
=
new
SharedWorker
(
"
worker
.
js
"
)
;
await
new
Promise
(
resolve
=
>
{
worker
.
port
.
onmessage
=
resolve
;
worker
.
port
.
postMessage
(
"
bgpage
-
>
worker
"
)
;
}
)
;
browser
.
test
.
sendMessage
(
"
test
-
shared
-
worker
:
done
"
)
;
}
:
function
(
)
{
browser
.
test
.
assertThrows
(
(
)
=
>
{
try
{
new
SharedWorker
(
"
worker
.
js
"
)
;
}
catch
(
e
)
{
throw
new
Error
(
{
e
}
)
;
}
}
/
NS_ERROR_ABORT
/
"
Got
the
expected
failure
in
non
-
remote
mode
"
)
;
browser
.
test
.
sendMessage
(
"
test
-
shared
-
worker
:
done
"
)
;
}
;
const
extension
=
ExtensionTestUtils
.
loadExtension
(
{
background
files
:
{
"
worker
.
js
"
:
function
(
)
{
self
.
onconnect
=
evt
=
>
{
const
port
=
evt
.
ports
[
0
]
;
port
.
onmessage
=
(
)
=
>
port
.
postMessage
(
"
worker
-
reply
"
)
;
}
;
}
}
}
)
;
await
extension
.
startup
(
)
;
await
extension
.
awaitMessage
(
"
test
-
shared
-
worker
:
done
"
)
;
await
extension
.
unload
(
)
;
}
)
;
