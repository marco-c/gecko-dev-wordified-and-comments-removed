"
use
strict
"
;
add_task
(
async
function
test_missing_background_file
(
)
{
let
extension
=
ExtensionTestUtils
.
loadExtension
(
{
delayedStartup
:
false
manifest
:
{
background
:
{
page
:
"
non_existing_background_page
.
html
"
}
}
files
:
{
"
tab
.
html
"
:
<
script
src
=
"
tab
.
js
"
>
<
/
script
>
"
tab
.
js
"
:
async
(
)
=
>
{
browser
.
test
.
assertEq
(
browser
.
extension
.
getBackgroundPage
(
)
null
"
extension
.
getBackgroundPage
(
)
is
null
"
)
;
browser
.
test
.
assertEq
(
await
browser
.
runtime
.
getBackgroundPage
(
)
null
"
runtime
.
getBackgroundPage
(
)
is
null
"
)
;
browser
.
test
.
sendMessage
(
"
done
"
)
;
}
}
}
)
;
info
(
"
Waiting
for
extension
to
start
up
"
)
;
await
extension
.
startup
(
)
;
if
(
WebExtensionPolicy
.
useRemoteWebExtensions
)
{
equal
(
extension
.
extension
.
backgroundState
"
running
"
"
backgroundState
"
)
;
}
else
{
equal
(
extension
.
extension
.
backgroundState
"
stopped
"
"
backgroundState
"
)
;
}
let
contentPage
=
await
ExtensionTestUtils
.
loadContentPage
(
moz
-
extension
:
/
/
{
extension
.
uuid
}
/
tab
.
html
)
;
await
extension
.
awaitMessage
(
"
done
"
)
;
await
contentPage
.
close
(
)
;
equal
(
extension
.
extension
.
backgroundState
WebExtensionPolicy
.
useRemoteWebExtensions
?
"
running
"
:
"
stopped
"
"
backgroundState
not
changed
"
)
;
await
extension
.
unload
(
)
;
}
)
;
