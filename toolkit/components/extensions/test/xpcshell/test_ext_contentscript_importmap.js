"
use
strict
"
;
Services
.
prefs
.
setBoolPref
(
"
dom
.
importMaps
.
enabled
"
true
)
;
const
server
=
createHttpServer
(
{
hosts
:
[
"
example
.
com
"
]
}
)
;
const
importMapString
=
<
script
type
=
"
importmap
"
>
{
"
imports
"
:
{
"
simple
"
:
"
.
/
simple
.
js
"
"
simple2
"
:
"
.
/
simple2
.
js
"
}
}
<
/
script
>
;
const
importMapHtml
=
<
!
DOCTYPE
html
>
<
html
>
<
meta
charset
=
utf
-
8
>
<
title
>
Test
a
simple
import
map
in
normal
webpage
<
/
title
>
<
body
>
{
importMapString
}
<
/
body
>
<
/
html
>
;
const
pageHtml
=
<
!
DOCTYPE
html
>
<
html
>
<
meta
charset
=
utf
-
8
>
<
title
>
Test
a
simple
import
map
in
moz
-
extension
documents
<
/
title
>
<
body
>
{
importMapString
}
<
script
src
=
"
page
.
js
"
>
<
/
script
>
<
/
body
>
<
/
html
>
;
const
simple2JS
=
export
let
foo
=
2
;
;
server
.
registerPathHandler
(
"
/
importmap
.
html
"
(
request
response
)
=
>
{
response
.
setStatusLine
(
request
.
httpVersion
200
"
OK
"
)
;
response
.
setHeader
(
"
Content
-
Type
"
"
text
/
html
"
false
)
;
response
.
write
(
importMapHtml
)
;
}
)
;
server
.
registerPathHandler
(
"
/
simple
.
js
"
(
request
response
)
=
>
{
ok
(
false
"
Unexpected
request
to
/
simple
.
js
"
)
;
}
)
;
server
.
registerPathHandler
(
"
/
simple2
.
js
"
(
request
response
)
=
>
{
response
.
setStatusLine
(
request
.
httpVersion
200
"
OK
"
)
;
response
.
setHeader
(
"
Content
-
Type
"
"
text
/
javascript
"
false
)
;
response
.
write
(
simple2JS
)
;
}
)
;
add_task
(
async
function
test_importMaps_not_supported
(
)
{
let
extension
=
ExtensionTestUtils
.
loadExtension
(
{
manifest
:
{
content_scripts
:
[
{
matches
:
[
"
http
:
/
/
example
.
com
/
importmap
.
html
"
]
js
:
[
"
main
.
js
"
]
}
]
}
files
:
{
"
main
.
js
"
:
async
function
(
)
{
await
browser
.
test
.
assertRejects
(
import
(
"
simple
"
)
/
The
specifier
simple
was
a
bare
specifier
/
should
reject
import
(
"
simple
"
)
)
;
browser
.
test
.
sendMessage
(
"
done
"
)
;
}
"
page
.
html
"
:
pageHtml
"
page
.
js
"
:
async
function
(
)
{
await
browser
.
test
.
assertRejects
(
import
(
"
simple
"
)
/
The
specifier
simple
was
a
bare
specifier
/
should
reject
import
(
"
simple
"
)
)
;
browser
.
test
.
sendMessage
(
"
page
-
done
"
)
;
}
}
}
)
;
await
extension
.
startup
(
)
;
let
contentPage
=
await
ExtensionTestUtils
.
loadContentPage
(
"
http
:
/
/
example
.
com
/
importmap
.
html
"
)
;
await
extension
.
awaitMessage
(
"
done
"
)
;
await
contentPage
.
spawn
(
null
async
(
)
=
>
{
let
promise
=
content
.
eval
(
import
(
"
simple2
"
)
)
;
let
mod
=
(
await
promise
.
wrappedJSObject
)
.
wrappedJSObject
;
Assert
.
equal
(
mod
.
foo
2
"
mod
.
foo
should
be
2
"
)
;
}
)
;
let
url
=
moz
-
extension
:
/
/
{
extension
.
uuid
}
/
page
.
html
;
let
page
=
await
ExtensionTestUtils
.
loadContentPage
(
url
{
extension
}
)
;
await
extension
.
awaitMessage
(
"
page
-
done
"
)
;
await
contentPage
.
close
(
)
;
await
page
.
close
(
)
;
await
extension
.
unload
(
)
;
}
)
;
