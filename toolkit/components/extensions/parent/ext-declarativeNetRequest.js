"
use
strict
"
;
ChromeUtils
.
defineESModuleGetters
(
this
{
ExtensionDNR
:
"
resource
:
/
/
gre
/
modules
/
ExtensionDNR
.
sys
.
mjs
"
}
)
;
var
{
ExtensionError
}
=
ExtensionUtils
;
this
.
declarativeNetRequest
=
class
extends
ExtensionAPI
{
onShutdown
(
)
{
ExtensionDNR
.
clearRuleManager
(
this
.
extension
)
;
}
getAPI
(
context
)
{
const
{
extension
}
=
this
;
return
{
declarativeNetRequest
:
{
updateSessionRules
(
{
removeRuleIds
addRules
}
)
{
const
ruleManager
=
ExtensionDNR
.
getRuleManager
(
extension
)
;
let
ruleValidator
=
new
ExtensionDNR
.
RuleValidator
(
ruleManager
.
getSessionRules
(
)
)
;
if
(
removeRuleIds
)
{
ruleValidator
.
removeRuleIds
(
removeRuleIds
)
;
}
if
(
addRules
)
{
ruleValidator
.
addRules
(
addRules
)
;
}
let
failures
=
ruleValidator
.
getFailures
(
)
;
if
(
failures
.
length
)
{
throw
new
ExtensionError
(
failures
[
0
]
.
message
)
;
}
ruleManager
.
setSessionRules
(
ruleValidator
.
getValidatedRules
(
)
)
;
}
getSessionRules
(
)
{
return
ExtensionDNR
.
getRuleManager
(
extension
)
.
getSessionRules
(
)
;
}
async
testMatchOutcome
(
request
)
{
return
[
]
;
}
}
}
;
}
}
;
