#
ifndef
mozilla_extensions_ExtensionBrowser_h
#
define
mozilla_extensions_ExtensionBrowser_h
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsWrapperCache
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
{
class
ErrorResult
;
namespace
extensions
{
class
ExtensionAlarms
;
class
ExtensionMockAPI
;
class
ExtensionRuntime
;
class
ExtensionTest
;
bool
ExtensionAPIAllowed
(
JSContext
*
aCx
JSObject
*
aGlobal
)
;
class
ExtensionBrowser
final
:
public
nsISupports
public
nsWrapperCache
{
nsCOMPtr
<
nsIGlobalObject
>
mGlobal
;
JS
:
:
Heap
<
JS
:
:
Value
>
mLastError
;
bool
mCheckedLastError
;
RefPtr
<
ExtensionAlarms
>
mExtensionAlarms
;
RefPtr
<
ExtensionMockAPI
>
mExtensionMockAPI
;
RefPtr
<
ExtensionRuntime
>
mExtensionRuntime
;
RefPtr
<
ExtensionTest
>
mExtensionTest
;
~
ExtensionBrowser
(
)
=
default
;
public
:
explicit
ExtensionBrowser
(
nsIGlobalObject
*
aGlobal
)
;
void
SetLastError
(
JS
:
:
Handle
<
JS
:
:
Value
>
aLastError
)
;
void
GetLastError
(
JS
:
:
MutableHandle
<
JS
:
:
Value
>
aRetVal
)
;
bool
ClearLastError
(
)
;
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
nsIGlobalObject
*
GetParentObject
(
)
const
;
ExtensionAlarms
*
GetExtensionAlarms
(
)
;
ExtensionMockAPI
*
GetExtensionMockAPI
(
)
;
ExtensionRuntime
*
GetExtensionRuntime
(
)
;
ExtensionTest
*
GetExtensionTest
(
)
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS
(
ExtensionBrowser
)
}
;
}
}
#
endif
