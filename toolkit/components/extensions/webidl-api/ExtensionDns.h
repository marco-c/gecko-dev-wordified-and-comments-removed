#
ifndef
mozilla_extensions_ExtensionDns_h
#
define
mozilla_extensions_ExtensionDns_h
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
mozilla
/
Attributes
.
h
"
#
include
"
mozilla
/
dom
/
BindingDeclarations
.
h
"
#
include
"
nsCycleCollectionParticipant
.
h
"
#
include
"
nsCOMPtr
.
h
"
#
include
"
nsISupports
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
ExtensionAPIBase
.
h
"
#
include
"
ExtensionBrowser
.
h
"
class
nsIGlobalObject
;
namespace
mozilla
:
:
extensions
{
class
ExtensionEventManager
;
class
ExtensionDns
final
:
public
nsISupports
public
nsWrapperCache
public
ExtensionAPINamespace
{
public
:
ExtensionDns
(
nsIGlobalObject
*
aGlobal
ExtensionBrowser
*
aExtensionBrowser
)
;
nsIGlobalObject
*
GetGlobalObject
(
)
const
override
{
return
mGlobal
;
}
ExtensionBrowser
*
GetExtensionBrowser
(
)
const
override
{
return
mExtensionBrowser
;
}
nsString
GetAPINamespace
(
)
const
override
{
return
u
"
dns
"
_ns
;
}
JSObject
*
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
override
;
static
bool
IsAllowed
(
JSContext
*
aCx
JSObject
*
aGlobal
)
;
nsIGlobalObject
*
GetParentObject
(
)
const
;
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
NS_DECL_CYCLE_COLLECTION_WRAPPERCACHE_CLASS
(
ExtensionDns
)
private
:
~
ExtensionDns
(
)
=
default
;
nsCOMPtr
<
nsIGlobalObject
>
mGlobal
;
RefPtr
<
ExtensionBrowser
>
mExtensionBrowser
;
}
;
}
#
endif
