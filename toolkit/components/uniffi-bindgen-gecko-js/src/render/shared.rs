use
crate
:
:
Config
;
use
extend
:
:
ext
;
use
uniffi_bindgen
:
:
interface
:
:
{
Function
Method
Object
}
;
fn
use_async_wrapper
(
config
:
&
Config
spec
:
&
str
)
-
>
bool
{
config
.
async_wrappers
.
enable
&
&
!
config
.
async_wrappers
.
main_thread
.
contains
(
spec
)
}
#
[
ext
]
pub
impl
Function
{
fn
use_async_wrapper
(
&
self
config
:
&
Config
)
-
>
bool
{
use_async_wrapper
(
config
self
.
name
(
)
)
}
}
#
[
ext
]
pub
impl
Object
{
fn
use_async_wrapper_for_constructor
(
&
self
config
:
&
Config
)
-
>
bool
{
use_async_wrapper
(
config
self
.
name
(
)
)
}
fn
use_async_wrapper_for_method
(
&
self
method
:
&
Method
config
:
&
Config
)
-
>
bool
{
use_async_wrapper
(
config
&
format
!
(
"
{
}
.
{
}
"
self
.
name
(
)
method
.
name
(
)
)
)
}
}
