use
super
:
:
*
;
use
crate
:
:
Config
;
use
std
:
:
collections
:
:
HashMap
;
pub
fn
pass
(
mut
config_map
:
HashMap
<
String
Config
>
)
-
>
impl
FnMut
(
&
mut
Module
)
-
>
Result
<
(
)
>
{
move
|
module
:
&
mut
Module
|
{
module
.
config
=
config_map
.
remove
(
&
module
.
crate_name
)
.
unwrap_or_default
(
)
;
if
module
.
name
.
starts_with
(
"
uniffi_bindings_tests
"
)
{
module
.
fixture
=
true
;
}
module
.
string_type_node
=
TypeNode
{
ty
:
Type
:
:
String
canonical_name
:
"
String
"
.
to_string
(
)
.
.
TypeNode
:
:
default
(
)
}
;
Ok
(
(
)
)
}
}
