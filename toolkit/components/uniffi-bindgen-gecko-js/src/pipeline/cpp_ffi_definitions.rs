use
super
:
:
*
;
use
std
:
:
collections
:
:
HashSet
;
pub
fn
pass
(
root
:
&
mut
Root
)
-
>
Result
<
(
)
>
{
let
mut
seen
=
HashSet
:
:
new
(
)
;
root
.
cpp_scaffolding
.
ffi_definitions
=
CombinedItems
:
:
new
(
root
|
module
_
items
|
{
module
.
visit
(
|
def
:
&
FfiDefinition
|
{
let
name
=
match
def
{
FfiDefinition
:
:
RustFunction
(
FfiFunction
{
name
.
.
}
)
=
>
name
.
0
.
clone
(
)
FfiDefinition
:
:
FunctionType
(
FfiFunctionType
{
name
.
.
}
)
=
>
name
.
0
.
clone
(
)
FfiDefinition
:
:
Struct
(
FfiStruct
{
name
.
.
}
)
=
>
name
.
0
.
clone
(
)
}
;
if
seen
.
insert
(
name
)
{
items
.
push
(
def
.
clone
(
)
)
}
}
)
}
)
;
Ok
(
(
)
)
}
