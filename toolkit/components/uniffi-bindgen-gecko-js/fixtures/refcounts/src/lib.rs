use
std
:
:
sync
:
:
{
Arc
Mutex
}
;
pub
struct
SingletonObject
;
impl
SingletonObject
{
pub
fn
method
(
&
self
)
{
}
}
static
SINGLETON
:
Mutex
<
Option
<
Arc
<
SingletonObject
>
>
>
=
Mutex
:
:
new
(
None
)
;
pub
fn
get_singleton
(
)
-
>
Arc
<
SingletonObject
>
{
Arc
:
:
clone
(
SINGLETON
.
lock
(
)
.
unwrap
(
)
.
get_or_insert_with
(
|
|
Arc
:
:
new
(
SingletonObject
)
)
)
}
pub
fn
get_js_refcount
(
)
-
>
i32
{
(
Arc
:
:
strong_count
(
&
get_singleton
(
)
)
as
i32
)
-
2
}
include
!
(
concat
!
(
env
!
(
"
OUT_DIR
"
)
"
/
refcounts
.
uniffi
.
rs
"
)
)
;
