"
use
strict
"
;
const
{
DownloadHistory
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
DownloadHistory
.
jsm
"
)
;
add_task
(
async
function
test_initialization_via_addDownload
(
)
{
async
function
cleanup
(
)
{
await
PlacesUtils
.
history
.
clear
(
)
;
}
registerCleanupFunction
(
cleanup
)
;
await
cleanup
(
)
;
const
download1FileLocation
=
getTempFile
(
{
TEST_TARGET_FILE_NAME
}
1
)
.
path
;
const
download2FileLocation
=
getTempFile
(
{
TEST_TARGET_FILE_NAME
}
2
)
.
path
;
const
download
=
{
source
:
{
url
:
httpUrl
(
source1
)
isPrivate
:
false
}
target
:
{
path
:
download1FileLocation
}
}
;
await
DownloadHistory
.
addDownloadToHistory
(
download
)
;
let
historyList
=
await
DownloadHistory
.
getList
(
)
;
let
downloads
=
await
historyList
.
getAll
(
)
;
Assert
.
equal
(
downloads
.
length
1
"
Should
have
only
one
entry
"
)
;
Assert
.
equal
(
downloads
[
0
]
.
target
.
path
download1FileLocation
"
Should
have
the
correct
target
path
"
)
;
download
.
target
.
path
=
download2FileLocation
;
await
DownloadHistory
.
addDownloadToHistory
(
download
)
;
historyList
=
await
DownloadHistory
.
getList
(
)
;
downloads
=
await
historyList
.
getAll
(
)
;
Assert
.
equal
(
downloads
.
length
1
"
Should
still
have
only
one
entry
"
)
;
Assert
.
equal
(
downloads
[
0
]
.
target
.
path
download2FileLocation
"
Should
have
the
correct
revised
target
path
"
)
;
}
)
;
