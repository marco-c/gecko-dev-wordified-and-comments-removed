"
use
strict
"
;
function
run_test
(
)
{
do_get_profile
(
)
;
run_next_test
(
)
;
}
add_task
(
async
function
test_error_with_no_error_callback
(
)
{
let
watcher
=
makeWatcher
(
)
;
let
testPath
=
"
someInvalidPath
"
;
let
dummyFunc
=
function
(
changed
)
{
do_throw
(
"
Not
expected
in
this
test
.
"
)
;
}
;
watcher
.
addPath
(
testPath
dummyFunc
)
;
}
)
;
add_task
(
async
function
test_watch_single_path_file_creation_no_error_cb
(
)
{
let
watchedDir
=
OS
.
Path
.
join
(
OS
.
Constants
.
Path
.
profileDir
"
filewatcher_playground
"
)
;
await
OS
.
File
.
makeDir
(
watchedDir
)
;
let
tempFileName
=
"
test_filecreation
.
tmp
"
;
let
watcher
=
makeWatcher
(
)
;
let
deferred
=
Promise
.
defer
(
)
;
await
promiseAddPath
(
watcher
watchedDir
deferred
.
resolve
)
;
let
tmpFilePath
=
OS
.
Path
.
join
(
watchedDir
tempFileName
)
;
await
OS
.
File
.
writeAtomic
(
tmpFilePath
"
some
data
"
)
;
let
changed
=
await
deferred
.
promise
;
Assert
.
equal
(
changed
tmpFilePath
)
;
watcher
.
removePath
(
watchedDir
deferred
.
resolve
)
;
await
OS
.
File
.
removeDir
(
watchedDir
)
;
}
)
;
