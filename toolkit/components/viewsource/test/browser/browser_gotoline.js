Cu
.
import
(
"
resource
:
/
/
testing
-
common
/
ContentTaskUtils
.
jsm
"
this
)
;
var
content
=
"
line
1
\
nline
2
\
nline
3
"
;
add_task
(
async
function
(
)
{
let
win
=
await
loadViewSourceWindow
(
"
data
:
text
/
html
"
+
encodeURIComponent
(
content
)
)
;
await
checkViewSource
(
win
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
win
=
await
loadViewSourceWindow
(
"
data
:
text
/
plain
"
+
encodeURIComponent
(
content
)
)
;
await
checkViewSource
(
win
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
}
)
;
var
checkViewSource
=
async
function
(
aWindow
)
{
is
(
aWindow
.
gBrowser
.
contentDocument
.
body
.
textContent
content
"
Correct
content
loaded
"
)
;
for
(
let
i
=
1
;
i
<
=
3
;
i
+
+
)
{
aWindow
.
viewSourceChrome
.
goToLine
(
i
)
;
await
ContentTask
.
spawn
(
aWindow
.
gBrowser
i
async
function
(
i
)
{
let
selection
=
content
.
getSelection
(
)
;
Assert
.
equal
(
selection
.
toString
(
)
"
line
"
+
i
"
Correct
text
selected
"
)
;
}
)
;
}
}
;
