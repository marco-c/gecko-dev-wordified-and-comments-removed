#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
Telemetry
.
h
"
#
include
"
mozilla
/
DataMutex
.
h
"
#
ifndef
mozilla_glean_HistogramGifftMap_h
#
define
mozilla_glean_HistogramGifftMap_h
namespace
mozilla
:
:
glean
{
using
Telemetry
:
:
HistogramID
;
typedef
uint64_t
TimerId
;
typedef
StaticDataMutex
<
UniquePtr
<
nsTHashMap
<
TimerId
TimeStamp
>
>
>
TimerToStampMutex
;
static
inline
TimerToStampMutex
:
:
AutoLock
GetTimerIdToStartsLock
(
)
{
static
TimerToStampMutex
sTimerIdToStarts
(
"
sTimerIdToStarts
"
)
;
auto
lock
=
sTimerIdToStarts
.
Lock
(
)
;
if
(
!
*
lock
)
{
*
lock
=
MakeUnique
<
nsTHashMap
<
TimerId
TimeStamp
>
>
(
)
;
}
return
lock
;
}
static
Maybe
<
HistogramID
>
HistogramIdForMetric
(
uint32_t
aId
)
{
switch
(
aId
)
{
case
12
:
{
return
Some
(
HistogramID
:
:
SOME_TIME_HISTOGRAM_MS
)
;
}
case
13
:
{
return
Some
(
HistogramID
:
:
SOME_MEM_HISTOGRAM_KB
)
;
}
default
:
{
return
Nothing
(
)
;
}
}
}
}
#
endif
