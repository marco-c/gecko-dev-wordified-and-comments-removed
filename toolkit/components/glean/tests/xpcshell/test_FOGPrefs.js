"
use
strict
"
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
TELEMETRY_SERVER_PREF
=
"
toolkit
.
telemetry
.
server
"
;
const
UPLOAD_PREF
=
"
datareporting
.
healthreport
.
uploadEnabled
"
;
const
LOCALHOST_PREF
=
"
telemetry
.
fog
.
test
.
localhost_port
"
;
do_get_profile
(
)
;
Services
.
prefs
.
setIntPref
(
LOCALHOST_PREF
45326
)
;
Services
.
fog
.
initializeFOG
(
)
;
add_task
(
function
test_fog_upload_only
(
)
{
Services
.
prefs
.
setStringPref
(
TELEMETRY_SERVER_PREF
"
http
:
/
/
localhost
/
telemetry
-
fake
/
"
)
;
Services
.
prefs
.
setIntPref
(
LOCALHOST_PREF
-
1
)
;
Services
.
prefs
.
setBoolPref
(
UPLOAD_PREF
true
)
;
const
value
=
42
;
Glean
.
testOnly
.
meaningOfLife
.
set
(
value
)
;
Assert
.
equal
(
value
Glean
.
testOnly
.
meaningOfLife
.
testGetValue
(
"
test
-
ping
"
)
)
;
Services
.
prefs
.
setBoolPref
(
UPLOAD_PREF
false
)
;
Assert
.
equal
(
value
Glean
.
testOnly
.
meaningOfLife
.
testGetValue
(
"
test
-
ping
"
)
)
;
Services
.
prefs
.
setIntPref
(
LOCALHOST_PREF
0
)
;
Assert
.
equal
(
undefined
Glean
.
testOnly
.
meaningOfLife
.
testGetValue
(
"
test
-
ping
"
)
)
;
}
)
;
