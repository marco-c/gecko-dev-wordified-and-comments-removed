#
include
"
mozilla
/
glean
/
bindings
/
ScalarGIFFTMap
.
h
"
#
include
"
mozilla
/
glean
/
bindings
/
GleanJSMetricsLookup
.
h
"
#
include
"
mozilla
/
glean
/
bindings
/
jog
/
JOG
.
h
"
#
define
DYNAMIC_METRIC_BIT
(
26
)
#
define
GLEAN_METRIC_ID
(
id
)
(
(
id
)
&
(
(
1ULL
<
<
27
)
-
1
)
)
namespace
mozilla
:
:
glean
{
using
Telemetry
:
:
ScalarID
;
Maybe
<
ScalarID
>
ScalarIdForMetric
(
uint32_t
aId
)
{
switch
(
aId
)
{
case
22495729
:
{
return
Some
(
ScalarID
:
:
SOME_BOOL_SCALAR
)
;
}
case
30349935
:
{
return
Some
(
ScalarID
:
:
SOME_UINT_SCALAR
)
;
}
case
21875658
:
{
return
Some
(
ScalarID
:
:
SOME_KEYED_BOOL_SCALAR
)
;
}
case
7966417
:
{
return
Some
(
ScalarID
:
:
SOME_OTHER_KEYED_BOOL_SCALAR
)
;
}
case
139440
:
{
return
Some
(
ScalarID
:
:
SOME_KEYED_UINT_SCALAR
)
;
}
case
6593356
:
{
return
Some
(
ScalarID
:
:
SOME_OTHER_KEYED_UINT_SCALAR
)
;
}
case
18320715
:
{
return
Some
(
ScalarID
:
:
YET_ANOTHER_KEYED_BOOL_SCALAR
)
;
}
case
25252540
:
{
return
Some
(
ScalarID
:
:
SOME_STRING_SCALAR
)
;
}
case
11887791
:
{
return
Some
(
ScalarID
:
:
SOME_OTHER_UINT_SCALAR
)
;
}
case
32461197
:
{
return
Some
(
ScalarID
:
:
SOME_STILL_OTHER_STRING_SCALAR
)
;
}
case
8082779
:
{
return
Some
(
ScalarID
:
:
TELEMETRY_TEST_MIRROR_FOR_QUANTITY
)
;
}
case
32794253
:
{
return
Some
(
ScalarID
:
:
SOME_OTHER_STRING_SCALAR
)
;
}
default
:
{
if
(
MOZ_UNLIKELY
(
aId
&
(
1
<
<
DYNAMIC_METRIC_BIT
)
)
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
auto
metricName
=
JOG
:
:
GetMetricName
(
aId
)
;
if
(
metricName
.
isSome
(
)
)
{
auto
maybeMetric
=
MetricByNameLookup
(
metricName
.
ref
(
)
)
;
if
(
maybeMetric
.
isSome
(
)
)
{
uint32_t
staticId
=
GLEAN_METRIC_ID
(
maybeMetric
.
value
(
)
)
;
MOZ_ASSERT
(
!
(
staticId
&
(
1
<
<
DYNAMIC_METRIC_BIT
)
)
)
;
return
ScalarIdForMetric
(
staticId
)
;
}
}
}
return
Nothing
(
)
;
}
}
}
}
#
undef
GLEAN_METRIC_ID
#
undef
DYNAMIC_METRIC_BIT
