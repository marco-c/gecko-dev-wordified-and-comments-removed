#
include
"
mozilla
/
glean
/
bindings
/
GleanJSPingsLookup
.
h
"
#
include
"
mozilla
/
PerfectHash
.
h
"
#
include
"
nsString
.
h
"
#
include
"
mozilla
/
PerfectHash
.
h
"
#
define
GLEAN_PING_INDEX_BITS
(
16
)
#
define
GLEAN_PING_ID
(
entry
)
(
(
entry
)
>
>
GLEAN_PING_INDEX_BITS
)
#
define
GLEAN_PING_INDEX
(
entry
)
(
(
entry
)
&
(
(
1UL
<
<
GLEAN_PING_INDEX_BITS
)
-
1
)
)
namespace
mozilla
:
:
glean
{
using
ping_entry_t
=
uint32_t
;
Maybe
<
uint32_t
>
ping_result_check
(
const
nsACString
&
aKey
ping_entry_t
aEntry
)
;
#
if
defined
(
_MSC_VER
)
&
&
!
defined
(
__clang__
)
const
char
gPingStringTable
[
]
=
{
#
else
constexpr
char
gPingStringTable
[
]
=
{
#
endif
'
n
'
'
o
'
'
t
'
'
B
'
'
a
'
'
s
'
'
e
'
'
l
'
'
i
'
'
n
'
'
e
'
'
\
0
'
'
n
'
'
o
'
'
t
'
'
D
'
'
e
'
'
l
'
'
e
'
'
t
'
'
i
'
'
o
'
'
n
'
'
R
'
'
e
'
'
q
'
'
u
'
'
e
'
'
s
'
'
t
'
'
\
0
'
'
n
'
'
o
'
'
t
'
'
E
'
'
v
'
'
e
'
'
n
'
'
t
'
'
s
'
'
\
0
'
'
n
'
'
o
'
'
t
'
'
M
'
'
e
'
'
t
'
'
r
'
'
i
'
'
c
'
'
s
'
'
\
0
'
'
n
'
'
o
'
'
t
'
'
O
'
'
h
'
'
t
'
'
t
'
'
p
'
'
\
0
'
}
;
const
ping_entry_t
sPingByNameLookupEntries
[
]
=
{
65536
327732
262185
131084
196639
}
;
Maybe
<
uint32_t
>
PingByNameLookup
(
const
nsACString
&
aKey
)
{
static
const
uint8_t
BASES
[
]
=
{
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
1
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
2
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
14
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
0
}
;
const
char
*
bytes
=
aKey
.
BeginReading
(
)
;
size_t
length
=
aKey
.
Length
(
)
;
auto
&
entry
=
mozilla
:
:
perfecthash
:
:
Lookup
(
bytes
length
BASES
sPingByNameLookupEntries
)
;
return
ping_result_check
(
aKey
entry
)
;
}
const
char
*
GetPingName
(
ping_entry_t
aEntry
)
{
uint32_t
idx
=
GLEAN_PING_INDEX
(
aEntry
)
;
MOZ_ASSERT
(
idx
<
sizeof
(
gPingStringTable
)
"
Ping
index
larger
than
string
table
"
)
;
return
&
gPingStringTable
[
idx
]
;
}
Maybe
<
uint32_t
>
ping_result_check
(
const
nsACString
&
aKey
ping_entry_t
aEntry
)
{
uint32_t
idx
=
GLEAN_PING_INDEX
(
aEntry
)
;
uint32_t
id
=
GLEAN_PING_ID
(
aEntry
)
;
if
(
MOZ_UNLIKELY
(
idx
>
sizeof
(
gPingStringTable
)
)
)
{
return
Nothing
(
)
;
}
if
(
aKey
.
EqualsASCII
(
&
gPingStringTable
[
idx
]
)
)
{
return
Some
(
id
)
;
}
return
Nothing
(
)
;
}
#
undef
GLEAN_PING_INDEX_BITS
#
undef
GLEAN_PING_ID
#
undef
GLEAN_PING_INDEX
}
