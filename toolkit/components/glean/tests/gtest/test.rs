fn
nonfatal_fail
(
msg
:
String
)
{
extern
"
C
"
{
fn
GTest_FOG_ExpectFailure
(
message
:
*
const
:
:
std
:
:
os
:
:
raw
:
:
c_char
)
;
}
unsafe
{
let
msg
=
:
:
std
:
:
ffi
:
:
CString
:
:
new
(
msg
)
.
unwrap
(
)
;
GTest_FOG_ExpectFailure
(
msg
.
as_ptr
(
)
)
;
}
}
macro_rules
!
expect
{
(
x
:
expr
)
=
>
{
match
(
&
x
)
{
true
=
>
{
}
false
=
>
nonfatal_fail
(
format
!
(
"
check
failed
:
(
{
}
)
at
{
}
:
{
}
"
stringify
!
(
x
)
file
!
(
)
line
!
(
)
)
)
}
}
;
}
#
[
no_mangle
]
pub
extern
"
C
"
fn
Rust_MeasureInitializeTime
(
)
{
let
metric
=
&
*
fog
:
:
metrics
:
:
fog
:
:
initialization
;
while
metric
.
test_get_value
(
"
metrics
"
)
.
is_none
(
)
{
std
:
:
thread
:
:
yield_now
(
)
;
}
let
value
=
metric
.
test_get_value
(
"
metrics
"
)
.
unwrap
(
)
;
expect
!
(
value
>
0
)
;
}
