#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
FOGIPC
.
h
"
#
include
<
functional
>
#
include
"
mozilla
/
ipc
/
ByteBuf
.
h
"
#
include
"
nsTArray
.
h
"
#
include
"
nsXULAppAPI
.
h
"
using
mozilla
:
:
ipc
:
:
ByteBuf
;
TEST
(
FOG
TestFlushFOGData
)
{
std
:
:
function
<
void
(
ByteBuf
&
&
)
>
resolver
=
[
]
(
ByteBuf
&
&
bufs
)
{
}
;
mozilla
:
:
glean
:
:
FlushFOGData
(
std
:
:
move
(
resolver
)
)
;
}
TEST
(
FOG
TestFlushAllChildData
)
{
std
:
:
function
<
void
(
const
nsTArray
<
ByteBuf
>
&
&
)
>
resolver
=
[
]
(
const
nsTArray
<
ByteBuf
>
&
&
bufs
)
{
ASSERT_TRUE
(
bufs
.
Length
(
)
=
=
0
)
<
<
"
Not
expecting
any
bufs
yet
.
"
;
}
;
mozilla
:
:
glean
:
:
FlushAllChildData
(
std
:
:
move
(
resolver
)
)
;
}
TEST
(
FOG
FOGData
)
{
ByteBuf
buf
;
mozilla
:
:
glean
:
:
FOGData
(
std
:
:
move
(
buf
)
)
;
}
TEST
(
FOG
SendFOGData
)
{
ASSERT_EQ
(
XRE_GetProcessType
(
)
GeckoProcessType_Default
)
<
<
"
If
we
can
run
a
test
as
a
different
process
type
we
can
write
a
"
"
test
for
this
function
.
"
;
}
