pub
extern
crate
fog
;
use
nserror
:
:
{
nsresult
NS_ERROR_FAILURE
NS_OK
}
;
use
nsstring
:
:
nsACString
;
#
[
cfg
(
not
(
target_os
=
"
android
"
)
)
]
#
[
macro_use
]
extern
crate
cstr
;
#
[
cfg
(
not
(
target_os
=
"
android
"
)
)
]
#
[
macro_use
]
extern
crate
xpcom
;
#
[
cfg
(
not
(
target_os
=
"
android
"
)
)
]
mod
init
;
#
[
cfg
(
target_os
=
"
android
"
)
]
#
[
path
=
"
android_init
.
rs
"
]
mod
init
;
pub
use
init
:
:
fog_init
;
#
[
no_mangle
]
pub
unsafe
extern
"
C
"
fn
fog_shutdown
(
)
{
glean
:
:
shutdown
(
)
;
}
static
mut
PENDING_BUF
:
Vec
<
u8
>
=
Vec
:
:
new
(
)
;
#
[
no_mangle
]
pub
unsafe
extern
"
C
"
fn
fog_serialize_ipc_buf
(
)
-
>
usize
{
if
let
Some
(
buf
)
=
fog
:
:
ipc
:
:
take_buf
(
)
{
PENDING_BUF
=
buf
;
PENDING_BUF
.
len
(
)
}
else
{
PENDING_BUF
=
vec
!
[
]
;
0
}
}
#
[
no_mangle
]
pub
unsafe
extern
"
C
"
fn
fog_give_ipc_buf
(
buf
:
*
mut
u8
buf_len
:
usize
)
-
>
usize
{
let
pending_len
=
PENDING_BUF
.
len
(
)
;
if
buf
.
is_null
(
)
|
|
buf_len
<
pending_len
{
return
0
;
}
std
:
:
ptr
:
:
copy_nonoverlapping
(
PENDING_BUF
.
as_ptr
(
)
buf
pending_len
)
;
PENDING_BUF
=
Vec
:
:
new
(
)
;
pending_len
}
#
[
no_mangle
]
pub
unsafe
extern
"
C
"
fn
fog_use_ipc_buf
(
buf
:
*
const
u8
buf_len
:
usize
)
{
let
slice
=
std
:
:
slice
:
:
from_raw_parts
(
buf
buf_len
)
;
let
res
=
fog
:
:
ipc
:
:
replay_from_buf
(
slice
)
;
if
res
.
is_err
(
)
{
log
:
:
warn
!
(
"
Unable
to
replay
ipc
buffer
.
This
will
result
in
data
loss
.
"
)
;
fog
:
:
metrics
:
:
fog_ipc
:
:
replay_failures
.
add
(
1
)
;
}
}
#
[
no_mangle
]
pub
unsafe
extern
"
C
"
fn
fog_set_debug_view_tag
(
value
:
&
nsACString
)
-
>
nsresult
{
let
result
=
glean
:
:
set_debug_view_tag
(
&
value
.
to_string
(
)
)
;
if
result
{
return
NS_OK
;
}
else
{
return
NS_ERROR_FAILURE
;
}
}
#
[
no_mangle
]
pub
unsafe
extern
"
C
"
fn
fog_submit_ping
(
ping_name
:
&
nsACString
)
-
>
nsresult
{
glean
:
:
submit_ping_by_name
(
&
ping_name
.
to_string
(
)
None
)
;
NS_OK
}
#
[
no_mangle
]
pub
unsafe
extern
"
C
"
fn
fog_set_log_pings
(
value
:
bool
)
-
>
nsresult
{
glean
:
:
set_log_pings
(
value
)
;
NS_OK
}
#
[
no_mangle
]
pub
unsafe
extern
"
C
"
fn
fog_persist_ping_lifetime_data
(
)
-
>
nsresult
{
glean
:
:
persist_ping_lifetime_data
(
)
;
NS_OK
}
