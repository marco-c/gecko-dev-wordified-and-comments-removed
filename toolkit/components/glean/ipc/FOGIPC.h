#
ifndef
FOGIPC_h__
#
define
FOGIPC_h__
#
include
<
functional
>
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
nsTArrayForwardDeclare
.
h
"
namespace
mozilla
{
namespace
ipc
{
class
ByteBuf
;
}
}
namespace
mozilla
{
namespace
glean
{
void
FlushFOGData
(
std
:
:
function
<
void
(
ipc
:
:
ByteBuf
&
&
)
>
&
&
aResolver
)
;
void
FlushAllChildData
(
std
:
:
function
<
void
(
nsTArray
<
ipc
:
:
ByteBuf
>
&
&
)
>
&
&
aResolver
)
;
void
FOGData
(
ipc
:
:
ByteBuf
&
&
buf
)
;
void
SendFOGData
(
ipc
:
:
ByteBuf
&
&
buf
)
;
RefPtr
<
GenericPromise
>
FlushAndUseFOGData
(
)
;
void
TestTriggerMetrics
(
uint32_t
processType
const
RefPtr
<
dom
:
:
Promise
>
&
promise
)
;
}
}
#
endif
