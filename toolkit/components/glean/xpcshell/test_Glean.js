"
use
strict
"
;
Cu
.
importGlobalProperties
(
[
"
Glean
"
]
)
;
const
{
setTimeout
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Timer
.
jsm
"
)
;
function
sleep
(
ms
)
{
return
new
Promise
(
resolve
=
>
setTimeout
(
resolve
ms
)
)
;
}
add_task
(
function
test_setup
(
)
{
do_get_profile
(
)
;
let
FOG
=
Cc
[
"
mozilla
.
org
/
toolkit
/
glean
;
1
"
]
.
createInstance
(
Ci
.
nsIFOG
)
;
FOG
.
initializeFOG
(
)
;
}
)
;
add_task
(
function
test_fog_counter_works
(
)
{
Glean
.
test_only
.
bad_code
.
add
(
31
)
;
Assert
.
ok
(
Glean
.
test_only
.
bad_code
.
testHasValue
(
"
test
-
ping
"
)
)
;
Assert
.
equal
(
31
Glean
.
test_only
.
bad_code
.
testGetValue
(
"
test
-
ping
"
)
)
;
}
)
;
