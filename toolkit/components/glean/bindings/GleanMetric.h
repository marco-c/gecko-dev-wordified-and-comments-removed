#
ifndef
mozilla_glean_GleanMetric_h
#
define
mozilla_glean_GleanMetric_h
#
include
"
js
/
TypeDecls
.
h
"
#
include
"
nsIGlobalObject
.
h
"
#
include
"
nsWrapperCache
.
h
"
#
include
"
nsClassHashtable
.
h
"
#
include
"
nsGlobalWindowInner
.
h
"
#
include
"
nsTHashMap
.
h
"
#
include
"
mozilla
/
DataMutex
.
h
"
namespace
mozilla
:
:
Telemetry
{
enum
class
ScalarID
:
uint32_t
;
}
namespace
mozilla
:
:
glean
{
typedef
uint64_t
TimerId
;
class
GleanMetric
:
public
nsISupports
public
nsWrapperCache
{
public
:
NS_DECL_CYCLE_COLLECTING_ISUPPORTS
;
NS_DECL_CYCLE_COLLECTION_WRAPPERCACHE_CLASS
(
GleanMetric
)
;
nsISupports
*
GetParentObject
(
)
const
{
return
mParent
;
}
protected
:
GleanMetric
(
nsISupports
*
aParent
)
:
mParent
(
aParent
)
{
}
virtual
~
GleanMetric
(
)
=
default
;
nsCOMPtr
<
nsISupports
>
mParent
;
}
;
typedef
nsUint32HashKey
SubmetricIdHashKey
;
typedef
nsTHashMap
<
SubmetricIdHashKey
std
:
:
tuple
<
Telemetry
:
:
ScalarID
nsString
>
>
SubmetricToLabeledMirrorMapType
;
typedef
StaticDataMutex
<
UniquePtr
<
SubmetricToLabeledMirrorMapType
>
>
SubmetricToMirrorMutex
;
Maybe
<
SubmetricToMirrorMutex
:
:
AutoLock
>
GetLabeledMirrorLock
(
)
;
}
#
endif
