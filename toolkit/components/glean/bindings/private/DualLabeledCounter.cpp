#
include
"
mozilla
/
glean
/
bindings
/
DualLabeledCounter
.
h
"
#
include
"
mozilla
/
dom
/
GleanMetricsBinding
.
h
"
#
include
"
mozilla
/
glean
/
fog_ffi_generated
.
h
"
#
include
"
mozilla
/
glean
/
bindings
/
GleanJSMetricsLookup
.
h
"
#
include
"
mozilla
/
glean
/
bindings
/
MetricTypes
.
h
"
#
include
"
nsString
.
h
"
namespace
mozilla
:
:
glean
{
namespace
impl
{
CounterMetric
<
CounterType
:
:
eDualLabeled
>
DualLabeledCounterMetric
:
:
Get
(
const
nsACString
&
aKey
const
nsACString
&
aCategory
)
const
{
uint32_t
submetricId
=
fog_dual_labeled_counter_get
(
mId
&
aKey
&
aCategory
)
;
return
CounterMetric
<
CounterType
:
:
eDualLabeled
>
(
submetricId
)
;
}
}
JSObject
*
GleanDualLabeledCounter
:
:
WrapObject
(
JSContext
*
aCx
JS
:
:
Handle
<
JSObject
*
>
aGivenProto
)
{
return
dom
:
:
GleanDualLabeledCounter_Binding
:
:
Wrap
(
aCx
this
aGivenProto
)
;
}
already_AddRefed
<
GleanCounter
>
GleanDualLabeledCounter
:
:
Get
(
const
nsACString
&
aKey
const
nsACString
&
aCategory
)
{
uint32_t
submetricId
=
impl
:
:
fog_dual_labeled_counter_get
(
mId
&
aKey
&
aCategory
)
;
return
MakeAndAddRef
<
GleanCounter
>
(
submetricId
mParent
impl
:
:
CounterType
:
:
eDualLabeled
)
;
}
}
