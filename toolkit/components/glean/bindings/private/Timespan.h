#
ifndef
mozilla_glean_GleanTimespan_h
#
define
mozilla_glean_GleanTimespan_h
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsIGleanMetrics
.
h
"
#
include
"
mozilla
/
glean
/
fog_ffi_generated
.
h
"
namespace
mozilla
:
:
glean
{
namespace
impl
{
class
TimespanMetric
{
public
:
constexpr
explicit
TimespanMetric
(
uint32_t
aId
)
:
mId
(
aId
)
{
}
void
Start
(
)
const
{
fog_timespan_start
(
mId
)
;
}
void
Stop
(
)
const
{
fog_timespan_stop
(
mId
)
;
}
Maybe
<
int64_t
>
TestGetValue
(
const
nsACString
&
aPingName
=
nsCString
(
)
)
const
{
if
(
!
fog_timespan_test_has_value
(
mId
&
aPingName
)
)
{
return
Nothing
(
)
;
}
return
Some
(
fog_timespan_test_get_value
(
mId
&
aPingName
)
)
;
}
private
:
const
uint32_t
mId
;
}
;
}
class
GleanTimespan
final
:
public
nsIGleanTimespan
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIGLEANTIMESPAN
explicit
GleanTimespan
(
uint32_t
aId
)
:
mTimespan
(
aId
)
{
}
;
private
:
virtual
~
GleanTimespan
(
)
=
default
;
const
impl
:
:
TimespanMetric
mTimespan
;
}
;
}
#
endif
