#
ifndef
mozilla_glean_GleanStringList_h
#
define
mozilla_glean_GleanStringList_h
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsIGleanMetrics
.
h
"
#
include
"
mozilla
/
glean
/
fog_ffi_generated
.
h
"
#
include
"
nsString
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
:
:
glean
{
namespace
impl
{
class
StringListMetric
{
public
:
constexpr
explicit
StringListMetric
(
uint32_t
aId
)
:
mId
(
aId
)
{
}
void
Add
(
const
nsACString
&
aValue
)
const
{
fog_string_list_add
(
mId
&
aValue
)
;
}
void
Set
(
const
nsTArray
<
nsCString
>
&
aValue
)
const
{
fog_string_list_set
(
mId
&
aValue
)
;
}
Maybe
<
nsTArray
<
nsCString
>
>
TestGetValue
(
const
nsACString
&
aPingName
=
nsCString
(
)
)
const
{
if
(
!
fog_string_list_test_has_value
(
mId
&
aPingName
)
)
{
return
Nothing
(
)
;
}
nsTArray
<
nsCString
>
ret
;
fog_string_list_test_get_value
(
mId
&
aPingName
&
ret
)
;
return
Some
(
std
:
:
move
(
ret
)
)
;
}
private
:
const
uint32_t
mId
;
}
;
}
class
GleanStringList
final
:
public
nsIGleanStringList
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIGLEANSTRINGLIST
explicit
GleanStringList
(
uint32_t
aId
)
:
mStringList
(
aId
)
{
}
;
private
:
virtual
~
GleanStringList
(
)
=
default
;
const
impl
:
:
StringListMetric
mStringList
;
}
;
}
#
endif
