#
ifndef
mozilla_glean_GleanTimingDistribution_h
#
define
mozilla_glean_GleanTimingDistribution_h
#
include
"
mozilla
/
glean
/
bindings
/
DistributionData
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
mozilla
/
Result
.
h
"
#
include
"
mozilla
/
TimeStamp
.
h
"
#
include
"
nsIGleanMetrics
.
h
"
#
include
"
nsTArray
.
h
"
namespace
mozilla
:
:
glean
{
typedef
uint64_t
TimerId
;
namespace
impl
{
class
TimingDistributionMetric
{
public
:
constexpr
explicit
TimingDistributionMetric
(
uint32_t
aId
)
:
mId
(
aId
)
{
}
TimerId
Start
(
)
const
;
void
StopAndAccumulate
(
const
TimerId
&
&
aId
)
const
;
void
AccumulateRawDuration
(
const
TimeDuration
&
aDuration
)
const
;
void
Cancel
(
const
TimerId
&
&
aId
)
const
;
Result
<
Maybe
<
DistributionData
>
nsCString
>
TestGetValue
(
const
nsACString
&
aPingName
=
nsCString
(
)
)
const
;
private
:
const
uint32_t
mId
;
}
;
}
class
GleanTimingDistribution
final
:
public
nsIGleanTimingDistribution
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIGLEANTIMINGDISTRIBUTION
explicit
GleanTimingDistribution
(
uint64_t
aId
)
:
mTimingDist
(
aId
)
{
}
;
private
:
virtual
~
GleanTimingDistribution
(
)
=
default
;
const
impl
:
:
TimingDistributionMetric
mTimingDist
;
}
;
}
#
endif
