#
ifndef
mozilla_glean_GleanCounter_h
#
define
mozilla_glean_GleanCounter_h
#
include
"
nsIGleanMetrics
.
h
"
namespace
mozilla
{
namespace
glean
{
namespace
impl
{
extern
"
C
"
{
void
fog_counter_add
(
uint32_t
id
int32_t
amount
)
;
uint32_t
fog_counter_test_has_value
(
uint32_t
id
const
char
*
storageName
)
;
int32_t
fog_counter_test_get_value
(
uint32_t
id
const
char
*
storageName
)
;
}
class
CounterMetric
{
public
:
constexpr
explicit
CounterMetric
(
uint32_t
id
)
:
mId
(
id
)
{
}
void
Add
(
int32_t
amount
=
1
)
const
{
fog_counter_add
(
mId
amount
)
;
}
bool
TestHasValue
(
const
char
*
aStorageName
)
const
{
return
fog_counter_test_has_value
(
mId
aStorageName
)
!
=
0
;
}
int32_t
TestGetValue
(
const
char
*
aStorageName
)
const
{
return
fog_counter_test_get_value
(
mId
aStorageName
)
;
}
private
:
uint32_t
mId
;
}
;
}
class
GleanCounter
final
:
public
nsIGleanCounter
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSIGLEANCOUNTER
explicit
GleanCounter
(
uint32_t
id
)
:
mCounter
(
id
)
{
}
;
private
:
virtual
~
GleanCounter
(
)
=
default
;
impl
:
:
CounterMetric
mCounter
;
}
;
}
}
#
endif
