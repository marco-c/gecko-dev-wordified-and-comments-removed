use
std
:
:
sync
:
:
{
Mutex
MutexGuard
}
;
use
glean
:
:
once_cell
:
:
sync
:
:
Lazy
;
const
GLOBAL_APPLICATION_ID
:
&
str
=
"
org
.
mozilla
.
firefox
.
test
"
;
pub
fn
lock_test
(
)
-
>
MutexGuard
<
'
static
(
)
>
{
static
GLOBAL_LOCK
:
Lazy
<
Mutex
<
(
)
>
>
=
Lazy
:
:
new
(
|
|
Mutex
:
:
new
(
(
)
)
)
;
GLOBAL_LOCK
.
lock
(
)
.
unwrap
(
)
}
pub
fn
setup_glean
(
tempdir
:
Option
<
tempfile
:
:
TempDir
>
)
-
>
tempfile
:
:
TempDir
{
let
dir
=
match
tempdir
{
Some
(
tempdir
)
=
>
tempdir
None
=
>
tempfile
:
:
tempdir
(
)
.
unwrap
(
)
}
;
let
tmpname
=
dir
.
path
(
)
.
display
(
)
.
to_string
(
)
;
let
cfg
=
glean_core
:
:
Configuration
{
data_path
:
tmpname
application_id
:
GLOBAL_APPLICATION_ID
.
into
(
)
upload_enabled
:
true
max_events
:
None
delay_ping_lifetime_io
:
false
language_binding_name
:
"
Rust
"
.
into
(
)
}
;
let
glean
=
glean_core
:
:
Glean
:
:
new
(
cfg
)
.
unwrap
(
)
;
glean_core
:
:
setup_glean
(
glean
)
.
expect
(
"
can
'
t
set
up
global
Glean
object
"
)
;
dir
}
