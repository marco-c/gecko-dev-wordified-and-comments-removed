use
super
:
:
{
CommonMetricData
MemoryUnit
}
;
#
[
derive
(
Debug
)
]
pub
struct
MemoryDistributionMetric
{
inner
:
glean_core
:
:
metrics
:
:
MemoryDistributionMetric
}
impl
MemoryDistributionMetric
{
pub
fn
new
(
meta
:
CommonMetricData
memory_unit
:
MemoryUnit
)
-
>
Self
{
let
inner
=
glean_core
:
:
metrics
:
:
MemoryDistributionMetric
:
:
new
(
meta
memory_unit
)
;
Self
{
inner
}
}
pub
fn
accumulate
(
&
self
sample
:
u64
)
{
crate
:
:
with_glean
(
|
glean
|
self
.
inner
.
accumulate
(
glean
sample
)
)
}
pub
fn
test_get_value
(
&
self
storage_name
:
&
str
)
-
>
Option
<
String
>
{
crate
:
:
with_glean
(
move
|
glean
|
{
self
.
inner
.
test_get_value_as_json_string
(
glean
storage_name
)
}
)
}
}
