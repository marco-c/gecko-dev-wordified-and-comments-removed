#
include
"
nsISupports
.
idl
"
[
scriptable
uuid
(
d3180fe0
-
19fa
-
11eb
-
8b6f
-
0800200c9a66
)
]
interface
nsIGleanBoolean
:
nsISupports
{
void
set
(
in
bool
value
)
;
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
aa15fd20
-
1e8a
-
11eb
-
9bec
-
0800200c9a66
)
]
interface
nsIGleanDatetime
:
nsISupports
{
[
optional_argc
]
void
set
(
[
optional
]
in
PRTime
aValue
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
05b89d2a
-
d57c
-
11ea
-
82da
-
3f63399a6f5a
)
]
interface
nsIGleanCounter
:
nsISupports
{
void
add
(
in
int32_t
amount
)
;
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
92e14730
-
9b5f
-
45a1
-
b018
-
f588d0b964d8
)
]
interface
nsIGleanTimingDistribution
:
nsISupports
{
[
implicit_jscontext
]
jsval
start
(
)
;
void
stopAndAccumulate
(
in
uint64_t
aId
)
;
void
cancel
(
in
uint64_t
aId
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
ACString
aPingName
)
;
void
testAccumulateRawMillis
(
in
uint64_t
aSample
)
;
}
;
[
scriptable
uuid
(
eea5ed46
-
16ba
-
46cd
-
bb1f
-
504581987fe1
)
]
interface
nsIGleanMemoryDistribution
:
nsISupports
{
void
accumulate
(
in
uint64_t
aSample
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
ACString
aPingName
)
;
}
;
[
scriptable
uuid
(
45cc016f
-
c1d5
-
4d54
-
aaa5
-
a802cf65f23b
)
]
interface
nsIGleanCustomDistribution
:
nsISupports
{
void
accumulateSamples
(
in
Array
<
int64_t
>
aSamples
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
ACString
aPingName
)
;
}
;
[
scriptable
function
uuid
(
e5447f62
-
4b03
-
497c
-
81e9
-
6ab683d20380
)
]
interface
nsIGleanPingTestCallback
:
nsISupports
{
void
call
(
in
ACString
aReason
)
;
}
;
[
scriptable
uuid
(
5223a48b
-
687d
-
47ff
-
a629
-
fd4a72d1ecfa
)
]
interface
nsIGleanPing
:
nsISupports
{
void
submit
(
[
optional
]
in
ACString
aReason
)
;
void
testBeforeNextSubmit
(
in
nsIGleanPingTestCallback
aCallback
)
;
}
;
[
scriptable
uuid
(
d84a3555
-
46f1
-
48c1
-
9122
-
e8e88b069d2b
)
]
interface
nsIGleanString
:
nsISupports
{
void
set
(
in
AUTF8String
value
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
46751205
-
2ac7
-
47dc
-
91d2
-
ef4a95ef2af9
)
]
interface
nsIGleanStringList
:
nsISupports
{
void
add
(
in
AUTF8String
value
)
;
void
set
(
in
Array
<
AUTF8String
>
value
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
2586530c
-
030f
-
11eb
-
93cb
-
cbf30d25225a
)
]
interface
nsIGleanTimespan
:
nsISupports
{
void
start
(
)
;
void
stop
(
)
;
void
cancel
(
)
;
void
setRaw
(
in
uint32_t
aDuration
)
;
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
395700e7
-
06f6
-
46be
-
adcc
-
ea58977fda6d
)
]
interface
nsIGleanUuid
:
nsISupports
{
void
set
(
in
AUTF8String
aValue
)
;
void
generateAndSet
(
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
1b01424a
-
1f55
-
11eb
-
92a5
-
0754f6c3f240
)
]
interface
nsIGleanEvent
:
nsISupports
{
[
implicit_jscontext
]
void
record
(
[
optional
]
in
jsval
aExtra
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
0558c1b2
-
2cb1
-
4e21
-
a0a0
-
6a91a35ef219
)
]
interface
nsIGleanQuantity
:
nsISupports
{
void
set
(
in
int64_t
value
)
;
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
394d9d3b
-
9e7e
-
48cc
-
b76c
-
a89a51830da3
)
]
interface
nsIGleanDenominator
:
nsISupports
{
void
add
(
in
int32_t
amount
)
;
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
153fff71
-
7edd
-
49b4
-
a166
-
4697aa89c7a1
)
]
interface
nsIGleanNumerator
:
nsISupports
{
void
addToNumerator
(
in
int32_t
amount
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
920cf631
-
2b1e
-
4efe
-
ae2e
-
f03277c3112a
)
]
interface
nsIGleanRate
:
nsISupports
{
void
addToNumerator
(
in
int32_t
amount
)
;
void
addToDenominator
(
in
int32_t
amount
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
[
scriptable
uuid
(
a59672c4
-
bc48
-
4bfe
-
8f9c
-
6f408a59d819
)
]
interface
nsIGleanUrl
:
nsISupports
{
void
set
(
in
AUTF8String
value
)
;
[
implicit_jscontext
]
jsval
testGetValue
(
[
optional
]
in
AUTF8String
aPingName
)
;
}
;
