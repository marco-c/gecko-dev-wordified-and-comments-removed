#
include
"
nsIFOG
.
h
"
#
include
"
mozilla
/
FOG
.
h
"
#
include
"
mozilla
/
glean
/
fog_ffi_generated
.
h
"
#
include
"
mozilla
/
ClearOnShutdown
.
h
"
namespace
mozilla
{
static
StaticRefPtr
<
FOG
>
gFOG
;
already_AddRefed
<
FOG
>
FOG
:
:
GetSingleton
(
)
{
if
(
gFOG
)
{
return
do_AddRef
(
gFOG
)
;
}
gFOG
=
new
FOG
(
)
;
RunOnShutdown
(
[
&
]
{
gFOG
-
>
Shutdown
(
)
;
gFOG
=
nullptr
;
}
)
;
return
do_AddRef
(
gFOG
)
;
}
void
FOG
:
:
Shutdown
(
)
{
glean
:
:
impl
:
:
fog_shutdown
(
)
;
}
NS_IMETHODIMP
FOG
:
:
InitializeFOG
(
const
nsACString
&
aDataPathOverride
)
{
return
glean
:
:
impl
:
:
fog_init
(
&
aDataPathOverride
)
;
}
NS_IMETHODIMP
FOG
:
:
SetLogPings
(
bool
aEnableLogPings
)
{
return
glean
:
:
impl
:
:
fog_set_log_pings
(
aEnableLogPings
)
;
}
NS_IMETHODIMP
FOG
:
:
SetTagPings
(
const
nsACString
&
aDebugTag
)
{
return
glean
:
:
impl
:
:
fog_set_debug_view_tag
(
&
aDebugTag
)
;
}
NS_IMETHODIMP
FOG
:
:
SendPing
(
const
nsACString
&
aPingName
)
{
return
glean
:
:
impl
:
:
fog_submit_ping
(
&
aPingName
)
;
}
NS_IMPL_ISUPPORTS
(
FOG
nsIFOG
)
}
