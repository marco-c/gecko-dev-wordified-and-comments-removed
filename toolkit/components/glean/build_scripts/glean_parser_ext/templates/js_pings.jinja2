{
#
The
rendered
source
is
autogenerated
but
this
Jinja2
template
is
not
.
Please
file
bugs
!
#
}
#
ifndef
mozilla_GleanJSPingsLookup_h
#
define
mozilla_GleanJSPingsLookup_h
#
define
GLEAN_PING_INDEX_BITS
(
{
{
ping_index_bits
}
}
)
#
define
GLEAN_PING_ID
(
entry
)
(
(
entry
)
>
>
GLEAN_PING_INDEX_BITS
)
#
define
GLEAN_PING_INDEX
(
entry
)
(
(
entry
)
&
(
(
1UL
<
<
GLEAN_PING_INDEX_BITS
)
-
1
)
)
namespace
mozilla
:
:
glean
{
using
ping_entry_t
=
uint32_t
;
static
Maybe
<
uint32_t
>
ping_result_check
(
const
nsACString
&
aKey
ping_entry_t
aEntry
)
;
{
{
ping_string_table
}
}
{
{
ping_by_name_lookup
}
}
static
const
char
*
GetPingName
(
ping_entry_t
aEntry
)
{
uint32_t
idx
=
GLEAN_PING_INDEX
(
aEntry
)
;
MOZ_ASSERT
(
idx
<
sizeof
(
gPingStringTable
)
"
Ping
index
larger
than
string
table
"
)
;
return
&
gPingStringTable
[
idx
]
;
}
static
Maybe
<
uint32_t
>
ping_result_check
(
const
nsACString
&
aKey
ping_entry_t
aEntry
)
{
uint32_t
idx
=
GLEAN_PING_INDEX
(
aEntry
)
;
uint32_t
id
=
GLEAN_PING_ID
(
aEntry
)
;
if
(
MOZ_UNLIKELY
(
idx
>
sizeof
(
gPingStringTable
)
)
)
{
return
Nothing
(
)
;
}
if
(
aKey
.
EqualsASCII
(
&
gPingStringTable
[
idx
]
)
)
{
return
Some
(
id
)
;
}
return
Nothing
(
)
;
}
#
undef
GLEAN_PING_INDEX_BITS
#
undef
GLEAN_PING_ID
#
undef
GLEAN_PING_INDEX
}
#
endif
