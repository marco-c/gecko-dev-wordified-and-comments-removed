{
#
The
rendered
source
is
autogenerated
but
this
Jinja2
template
is
not
.
Please
file
bugs
!
#
}
#
include
"
mozilla
/
glean
/
bindings
/
{
{
probe_type
}
}
GIFFTMap
.
h
"
#
include
"
mozilla
/
glean
/
bindings
/
GleanJSMetricsLookup
.
h
"
#
include
"
mozilla
/
glean
/
bindings
/
jog
/
JOG
.
h
"
#
define
DYNAMIC_METRIC_BIT
(
{
{
runtime_metric_bit
}
}
)
#
define
GLEAN_METRIC_ID
(
id
)
(
(
id
)
&
(
(
1ULL
<
<
{
{
id_bits
}
}
)
-
1
)
)
namespace
mozilla
:
:
glean
{
using
Telemetry
:
:
{
{
probe_type
}
}
ID
;
Maybe
<
{
{
probe_type
}
}
ID
>
{
{
probe_type
}
}
IdForMetric
(
uint32_t
aId
)
{
switch
(
aId
)
{
{
%
for
id
(
mirror
metric_name
)
in
ids_to_probes
.
items
(
)
%
}
case
{
{
id
}
}
:
{
return
Some
(
{
{
probe_type
}
}
ID
:
:
{
{
mirror
}
}
)
;
}
{
%
endfor
%
}
default
:
{
if
(
MOZ_UNLIKELY
(
aId
&
(
1
<
<
DYNAMIC_METRIC_BIT
)
)
)
{
MOZ_ASSERT
(
NS_IsMainThread
(
)
)
;
auto
metricName
=
JOG
:
:
GetMetricName
(
aId
)
;
if
(
metricName
.
isSome
(
)
)
{
auto
maybeMetric
=
MetricByNameLookup
(
metricName
.
ref
(
)
)
;
if
(
maybeMetric
.
isSome
(
)
)
{
uint32_t
staticId
=
GLEAN_METRIC_ID
(
maybeMetric
.
value
(
)
)
;
MOZ_ASSERT
(
!
(
staticId
&
(
1
<
<
DYNAMIC_METRIC_BIT
)
)
)
;
return
{
{
probe_type
}
}
IdForMetric
(
staticId
)
;
}
}
}
return
Nothing
(
)
;
}
}
}
}
#
undef
GLEAN_METRIC_ID
#
undef
DYNAMIC_METRIC_BIT
