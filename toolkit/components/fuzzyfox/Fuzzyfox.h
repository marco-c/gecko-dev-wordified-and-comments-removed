#
ifndef
mozilla_Fuzzyfox_h
#
define
mozilla_Fuzzyfox_h
#
include
"
nsIObserver
.
h
"
#
include
"
nsIObserverService
.
h
"
#
include
"
nsISupportsPrimitives
.
h
"
#
include
"
nsThreadUtils
.
h
"
#
include
"
mozilla
/
TimeStamp
.
h
"
#
define
FUZZYFOX_UPDATECLOCK_OBSERVER_TOPIC
"
fuzzyfox
-
update
-
clocks
"
#
define
FUZZYFOX_FIREOUTBOUND_OBSERVER_TOPIC
"
fuzzyfox
-
fire
-
outbound
"
namespace
mozilla
{
class
Fuzzyfox
final
:
public
Runnable
public
nsIObserver
{
public
:
NS_DECL_ISUPPORTS_INHERITED
NS_DECL_NSIOBSERVER
static
void
Start
(
)
;
NS_IMETHOD
Run
(
)
override
;
private
:
Fuzzyfox
(
)
;
~
Fuzzyfox
(
)
;
uint64_t
ActualTime
(
)
;
uint64_t
PickDuration
(
)
;
void
UpdateClocks
(
uint64_t
aNewTime
TimeStamp
aNewTimeStamp
)
;
uint64_t
FloorToGrain
(
uint64_t
aValue
)
;
TimeStamp
FloorToGrain
(
TimeStamp
aValue
)
;
uint64_t
CeilToGrain
(
uint64_t
aValue
)
;
TimeStamp
CeilToGrain
(
TimeStamp
aValue
)
;
bool
mSanityCheck
;
uint64_t
mStartTime
;
uint32_t
mDuration
;
enum
Tick
{
eUptick
eDowntick
}
;
Tick
mTickType
;
nsCOMPtr
<
nsIObserverService
>
mObs
=
nullptr
;
nsCOMPtr
<
nsISupportsPRInt64
>
mTimeUpdateWrapper
=
nullptr
;
static
Atomic
<
bool
Relaxed
>
sFuzzyfoxEnabledPrefMapped
;
}
;
}
#
endif
