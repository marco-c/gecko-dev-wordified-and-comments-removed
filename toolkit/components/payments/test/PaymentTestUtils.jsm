"
use
strict
"
;
this
.
EXPORTED_SYMBOLS
=
[
"
PaymentTestUtils
"
]
;
this
.
PaymentTestUtils
=
{
ContentTasks
:
{
addCompletionHandler
:
async
(
)
=
>
{
let
response
=
await
content
.
showPromise
;
response
.
complete
(
)
;
return
{
response
:
response
.
toJSON
(
)
methodDetails
:
response
.
details
}
;
}
createRequest
:
(
{
methodData
details
options
}
)
=
>
{
const
rq
=
new
content
.
PaymentRequest
(
methodData
details
options
)
;
content
.
rq
=
rq
;
}
createAndShowRequest
:
(
{
methodData
details
options
}
)
=
>
{
const
rq
=
new
content
.
PaymentRequest
(
methodData
details
options
)
;
content
.
rq
=
rq
;
content
.
showPromise
=
rq
.
show
(
)
;
}
}
DialogContentTasks
:
{
manuallyClickCancel
:
(
)
=
>
{
content
.
document
.
getElementById
(
"
cancel
"
)
.
click
(
)
;
}
completePayment
:
(
)
=
>
{
content
.
document
.
getElementById
(
"
pay
"
)
.
click
(
)
;
}
setSecurityCode
:
(
{
securityCode
}
)
=
>
{
let
picker
=
Cu
.
waiveXrays
(
content
.
document
.
querySelector
(
"
payment
-
method
-
picker
"
)
)
;
Cu
.
unwaiveXrays
(
picker
.
securityCodeInput
)
.
setUserInput
(
securityCode
)
;
}
}
MethodData
:
{
basicCard
:
{
supportedMethods
:
"
basic
-
card
"
}
}
Details
:
{
total60USD
:
{
total
:
{
label
:
"
Total
due
"
amount
:
{
currency
:
"
USD
"
value
:
"
60
.
00
"
}
}
}
}
}
;
