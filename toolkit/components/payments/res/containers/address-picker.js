"
use
strict
"
;
class
AddressPicker
extends
PaymentStateSubscriberMixin
(
HTMLElement
)
{
constructor
(
)
{
super
(
)
;
this
.
dropdown
=
document
.
createElement
(
"
rich
-
select
"
)
;
}
connectedCallback
(
)
{
this
.
appendChild
(
this
.
dropdown
)
;
super
.
connectedCallback
(
)
;
}
render
(
state
)
{
let
{
savedAddresses
}
=
state
;
let
desiredOptions
=
[
]
;
for
(
let
[
guid
address
]
of
Object
.
entries
(
savedAddresses
)
)
{
let
optionEl
=
this
.
dropdown
.
namedItem
(
guid
)
;
if
(
!
optionEl
)
{
optionEl
=
document
.
createElement
(
"
address
-
option
"
)
;
optionEl
.
name
=
guid
;
optionEl
.
guid
=
guid
;
}
for
(
let
[
key
val
]
of
Object
.
entries
(
address
)
)
{
optionEl
.
setAttribute
(
key
val
)
;
}
desiredOptions
.
push
(
optionEl
)
;
}
let
el
=
null
;
while
(
(
el
=
this
.
dropdown
.
popupBox
.
querySelector
(
"
:
scope
>
address
-
option
"
)
)
)
{
el
.
remove
(
)
;
}
this
.
dropdown
.
popupBox
.
append
(
.
.
.
desiredOptions
)
;
}
}
customElements
.
define
(
"
address
-
picker
"
AddressPicker
)
;
