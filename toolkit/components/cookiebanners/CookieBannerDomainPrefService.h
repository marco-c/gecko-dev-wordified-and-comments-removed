#
ifndef
mozilla_CookieBannerDomainPrefService_h__
#
define
mozilla_CookieBannerDomainPrefService_h__
#
include
"
nsIContentPrefService2
.
h
"
#
include
"
mozilla
/
Maybe
.
h
"
#
include
"
nsStringFwd
.
h
"
#
include
"
nsTHashMap
.
h
"
#
include
"
nsICookieBannerService
.
h
"
#
include
"
nsIObserver
.
h
"
namespace
mozilla
{
class
CookieBannerDomainPrefService
final
:
public
nsIContentPrefCallback2
public
nsIObserver
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSICONTENTPREFCALLBACK2
NS_DECL_NSIOBSERVER
static
already_AddRefed
<
CookieBannerDomainPrefService
>
GetOrCreate
(
)
;
Maybe
<
nsICookieBannerService
:
:
Modes
>
GetPref
(
const
nsACString
&
aDomain
bool
aIsPrivate
)
;
[
[
nodiscard
]
]
nsresult
SetPref
(
const
nsACString
&
aDomain
nsICookieBannerService
:
:
Modes
aMode
bool
aIsPrivate
)
;
[
[
nodiscard
]
]
nsresult
RemovePref
(
const
nsACString
&
aDomain
bool
aIsPrivate
)
;
[
[
nodiscard
]
]
nsresult
RemoveAll
(
bool
aIsPrivate
)
;
void
Init
(
)
;
private
:
~
CookieBannerDomainPrefService
(
)
=
default
;
CookieBannerDomainPrefService
(
)
:
mIsInitialized
(
false
)
mIsContentPrefLoaded
(
false
)
{
}
bool
mIsInitialized
;
bool
mIsContentPrefLoaded
;
nsTHashMap
<
nsCStringHashKey
nsICookieBannerService
:
:
Modes
>
mPrefs
;
nsTHashMap
<
nsCStringHashKey
nsICookieBannerService
:
:
Modes
>
mPrefsPrivate
;
void
EnsureInitCompleted
(
)
;
void
Shutdown
(
)
;
}
;
}
#
endif
