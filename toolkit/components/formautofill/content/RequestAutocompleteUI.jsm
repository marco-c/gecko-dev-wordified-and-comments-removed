"
use
strict
"
;
this
.
EXPORTED_SYMBOLS
=
[
"
RequestAutocompleteUI
"
]
;
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
Promise
"
"
resource
:
/
/
gre
/
modules
/
Promise
.
jsm
"
)
;
this
.
RequestAutocompleteUI
=
function
(
aAutofillData
)
{
this
.
_autofillData
=
aAutofillData
;
}
this
.
RequestAutocompleteUI
.
prototype
=
{
_autofillData
:
null
async
show
(
)
{
let
resolveFn
;
let
uiPromise
=
new
Promise
(
resolve
=
>
resolveFn
=
resolve
)
;
let
args
=
{
resolveFn
autofillData
:
this
.
_autofillData
}
;
args
.
wrappedJSObject
=
args
;
Services
.
ww
.
openWindow
(
null
"
chrome
:
/
/
requestautocomplete
/
content
/
requestAutocomplete
.
xhtml
"
"
Toolkit
:
RequestAutocomplete
"
"
chrome
dialog
=
no
resizable
"
args
)
;
return
await
uiPromise
;
}
}
;
