const
TEST_PATH
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
http
:
/
/
example
.
com
"
)
;
add_task
(
async
function
set_simplify_and_reader_pref
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
print
.
use_simplify_page
"
true
]
[
"
reader
.
parse
-
on
-
load
.
enabled
"
true
]
]
}
)
;
}
)
;
add_task
(
async
function
switch_print_preview_browsers
(
)
{
let
url
=
TEST_PATH
+
"
simplifyNonArticleSample
.
html
"
;
if
(
AppConstants
.
platform
!
=
"
win
"
&
&
AppConstants
.
platform
!
=
"
linux
"
)
{
ok
(
false
"
Can
'
t
test
if
there
'
s
no
print
preview
.
"
)
;
return
;
}
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
url
false
true
)
;
tab
.
linkedBrowser
.
isArticle
=
true
;
let
defaultPPBrowser
=
PrintPreviewListener
.
getPrintPreviewBrowser
(
)
;
let
defaultPPEntered
=
BrowserTestUtils
.
waitForMessage
(
defaultPPBrowser
.
messageManager
"
Printing
:
Preview
:
Entered
"
)
;
document
.
getElementById
(
"
cmd_printPreview
"
)
.
doCommand
(
)
;
await
defaultPPEntered
;
await
SpecialPowers
.
spawn
(
defaultPPBrowser
[
]
async
function
(
)
{
is
(
content
.
document
.
title
"
Non
article
title
"
"
Should
have
initial
content
.
"
)
;
}
)
;
let
simplifiedPPBrowser
=
PrintPreviewListener
.
getSimplifiedPrintPreviewBrowser
(
)
;
let
simplifiedPPEntered
=
BrowserTestUtils
.
waitForMessage
(
simplifiedPPBrowser
.
messageManager
"
Printing
:
Preview
:
Entered
"
)
;
let
printPreviewToolbar
=
document
.
getElementById
(
"
print
-
preview
-
toolbar
"
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
{
return
!
printPreviewToolbar
.
mSimplifyPageCheckbox
.
disabled
;
}
)
;
printPreviewToolbar
.
mSimplifyPageCheckbox
.
click
(
)
;
await
simplifiedPPEntered
;
is
(
printPreviewToolbar
.
mSimplifyPageCheckbox
.
checked
true
"
Should
have
simplify
page
option
checked
"
)
;
await
SpecialPowers
.
spawn
(
simplifiedPPBrowser
[
]
async
function
(
)
{
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
content
.
document
.
title
=
=
=
"
Failed
to
load
article
from
page
"
"
Simplified
document
title
should
be
updated
with
recovery
title
.
"
)
;
}
)
;
is
(
gBrowser
.
selectedTab
.
linkedBrowser
simplifiedPPBrowser
"
Should
have
simplified
print
preview
browser
selected
"
)
;
isnot
(
gBrowser
.
selectedTab
.
linkedBrowser
defaultPPBrowser
"
Should
not
have
default
print
preview
browser
selected
"
)
;
PrintUtils
.
exitPrintPreview
(
)
;
await
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
