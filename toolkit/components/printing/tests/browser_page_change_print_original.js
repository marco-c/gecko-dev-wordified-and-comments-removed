add_task
(
async
function
pp_after_orientation_change
(
)
{
const
DATA_URI
=
data
:
text
/
html
<
script
>
window
.
onafterprint
=
function
(
)
{
setTimeout
(
"
window
.
location
=
'
data
:
text
/
plain
REPLACED
PAGE
!
'
"
0
)
;
}
<
/
script
>
<
pre
>
INITIAL
PAGE
<
/
pre
>
;
if
(
AppConstants
.
platform
!
=
"
win
"
&
&
AppConstants
.
platform
!
=
"
linux
"
)
{
ok
(
true
"
Can
'
t
test
if
there
'
s
no
print
preview
.
"
)
;
return
;
}
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
DATA_URI
false
true
)
;
let
browserToPrint
=
tab
.
linkedBrowser
;
let
ppBrowser
=
PrintPreviewListener
.
getPrintPreviewBrowser
(
)
;
let
originalTabNavigated
=
BrowserTestUtils
.
browserStopped
(
browserToPrint
)
;
let
printPreviewEntered
=
BrowserTestUtils
.
waitForMessage
(
ppBrowser
.
messageManager
"
Printing
:
Preview
:
Entered
"
)
;
document
.
getElementById
(
"
cmd_printPreview
"
)
.
doCommand
(
)
;
await
printPreviewEntered
;
await
ContentTask
.
spawn
(
ppBrowser
null
async
function
(
)
{
is
(
content
.
document
.
body
.
textContent
"
INITIAL
PAGE
"
"
Should
have
initial
page
print
previewed
.
"
)
;
}
)
;
await
originalTabNavigated
;
let
orient
=
PrintUtils
.
getPrintSettings
(
)
.
orientation
;
let
orientToSwitchTo
=
orient
!
=
Ci
.
nsIPrintSettings
.
kPortraitOrientation
?
"
portrait
"
:
"
landscape
"
;
let
printPreviewToolbar
=
document
.
querySelector
(
"
toolbar
[
printpreview
=
true
]
"
)
;
printPreviewEntered
=
BrowserTestUtils
.
waitForMessage
(
ppBrowser
.
messageManager
"
Printing
:
Preview
:
Entered
"
)
;
printPreviewToolbar
.
orient
(
orientToSwitchTo
)
;
await
printPreviewEntered
;
await
ContentTask
.
spawn
(
ppBrowser
null
async
function
(
)
{
is
(
content
.
document
.
body
.
textContent
"
INITIAL
PAGE
"
"
Should
still
have
initial
page
print
previewed
.
"
)
;
}
)
;
await
ContentTask
.
spawn
(
browserToPrint
null
async
function
(
)
{
is
(
content
.
document
.
body
.
textContent
"
REPLACED
PAGE
!
"
"
Original
page
should
have
changed
.
"
)
;
}
)
;
PrintUtils
.
exitPrintPreview
(
)
;
await
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
