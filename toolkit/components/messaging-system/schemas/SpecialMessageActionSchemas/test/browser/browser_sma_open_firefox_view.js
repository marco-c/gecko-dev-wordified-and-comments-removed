"
use
strict
"
;
add_setup
(
async
(
)
=
>
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
tabs
.
firefox
-
view
"
true
]
]
}
)
;
CustomizableUI
.
addWidgetToArea
(
"
firefox
-
view
-
button
"
CustomizableUI
.
AREA_TABSTRIP
0
)
;
registerCleanupFunction
(
async
(
)
=
>
{
CustomizableUI
.
removeWidgetFromArea
(
"
firefox
-
view
-
button
"
)
;
await
SpecialPowers
.
popPrefEnv
(
)
;
}
)
;
}
)
;
function
assertFirefoxViewTab
(
w
=
window
)
{
ok
(
w
.
FirefoxViewHandler
.
tab
"
Firefox
View
tab
exists
"
)
;
ok
(
w
.
FirefoxViewHandler
.
tab
?
.
hidden
"
Firefox
View
tab
is
hidden
"
)
;
is
(
w
.
gBrowser
.
tabs
.
indexOf
(
w
.
FirefoxViewHandler
.
tab
)
0
"
Firefox
View
tab
is
the
first
tab
"
)
;
is
(
w
.
gBrowser
.
visibleTabs
.
indexOf
(
w
.
FirefoxViewHandler
.
tab
)
-
1
"
Firefox
View
tab
is
not
in
the
list
of
visible
tabs
"
)
;
}
function
closeFirefoxViewTab
(
w
=
window
)
{
w
.
gBrowser
.
removeTab
(
w
.
FirefoxViewHandler
.
tab
)
;
ok
(
!
w
.
FirefoxViewHandler
.
tab
"
Reference
to
Firefox
View
tab
got
removed
when
closing
the
tab
"
)
;
}
add_task
(
async
function
test_open_firefox_view
(
)
{
let
newTabOpened
=
BrowserTestUtils
.
waitForEvent
(
gBrowser
.
tabContainer
"
TabOpen
"
)
;
await
SMATestUtils
.
executeAndValidateAction
(
{
type
:
"
OPEN_FIREFOX_VIEW
"
}
)
;
await
newTabOpened
;
assertFirefoxViewTab
(
)
;
closeFirefoxViewTab
(
)
;
}
)
;
