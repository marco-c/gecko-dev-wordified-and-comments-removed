add_task
(
async
function
test_query_title_update
(
)
{
try
{
var
histsvc
=
Cc
[
"
mozilla
.
org
/
browser
/
nav
-
history
-
service
;
1
"
]
.
getService
(
Ci
.
nsINavHistoryService
)
;
}
catch
(
ex
)
{
do_throw
(
"
Unable
to
initialize
Places
services
"
)
;
}
let
bmQuery
=
await
PlacesUtils
.
bookmarks
.
insert
(
{
parentGuid
:
PlacesUtils
.
bookmarks
.
toolbarGuid
title
:
"
test
query
"
url
:
"
place
:
"
}
)
;
var
options
=
histsvc
.
getNewQueryOptions
(
)
;
let
query
=
histsvc
.
getNewQuery
(
)
;
query
.
setParents
(
[
PlacesUtils
.
bookmarks
.
toolbarGuid
]
1
)
;
var
result
=
histsvc
.
executeQuery
(
query
options
)
;
var
root
=
result
.
root
;
root
.
containerOpen
=
true
;
var
queryNode
=
root
.
getChild
(
0
)
;
Assert
.
equal
(
queryNode
.
title
"
test
query
"
)
;
await
PlacesUtils
.
bookmarks
.
update
(
{
guid
:
bmQuery
.
guid
title
:
"
foo
"
}
)
;
Assert
.
equal
(
queryNode
.
title
"
foo
"
)
;
root
.
containerOpen
=
false
;
}
)
;
