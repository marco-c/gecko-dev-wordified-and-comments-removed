add_task
(
async
function
test_execute
(
)
{
var
referrer
=
uri
(
"
about
:
blank
"
)
;
var
uri1
=
uri
(
"
http
:
/
/
mozilla
.
com
"
)
;
await
PlacesTestUtils
.
addVisits
(
{
uri
:
uri1
referrer
}
)
;
do_check_guid_for_uri
(
uri1
)
;
Assert
.
ok
(
await
promiseIsURIVisited
(
uri1
)
)
;
var
uri2
=
uri
(
"
https
:
/
/
etrade
.
com
"
)
;
await
PlacesTestUtils
.
addVisits
(
{
uri
:
uri2
referrer
}
)
;
do_check_guid_for_uri
(
uri2
)
;
Assert
.
ok
(
await
promiseIsURIVisited
(
uri2
)
)
;
var
uri3
=
uri
(
"
ftp
:
/
/
ftp
.
mozilla
.
org
"
)
;
await
PlacesTestUtils
.
addVisits
(
{
uri
:
uri3
referrer
}
)
;
do_check_guid_for_uri
(
uri3
)
;
Assert
.
ok
(
await
promiseIsURIVisited
(
uri3
)
)
;
var
uri4
=
uri
(
"
http
:
/
/
foobarcheese
.
com
"
)
;
Assert
.
equal
(
false
await
promiseIsURIVisited
(
uri4
)
)
;
const
URLS
=
[
"
about
:
config
"
"
imap
:
/
/
cyrus
.
andrew
.
cmu
.
edu
/
archive
.
imap
"
"
news
:
/
/
new
.
mozilla
.
org
/
mozilla
.
dev
.
apps
.
firefox
"
"
mailbox
:
Inbox
"
"
moz
-
anno
:
favicon
:
http
:
/
/
mozilla
.
org
/
made
-
up
-
favicon
"
"
view
-
source
:
http
:
/
/
mozilla
.
org
"
"
chrome
:
/
/
browser
/
content
/
browser
.
xul
"
"
resource
:
/
/
gre
-
resources
/
hiddenWindow
.
html
"
"
data
:
Hello
%
2C
%
20World
!
"
"
wyciwyg
:
/
0
/
http
:
/
/
mozilla
.
org
"
"
javascript
:
alert
(
'
hello
wolrd
!
'
)
;
"
"
http
:
/
/
localhost
/
"
+
"
a
"
.
repeat
(
1984
)
]
;
for
(
let
currentURL
of
URLS
)
{
try
{
var
cantAddUri
=
uri
(
currentURL
)
;
}
catch
(
e
)
{
info
(
"
Could
not
construct
URI
for
'
"
+
currentURL
+
"
'
;
ignoring
"
)
;
}
if
(
cantAddUri
)
{
PlacesTestUtils
.
addVisits
(
{
uri
:
cantAddUri
referrer
}
)
.
then
(
(
)
=
>
{
do_throw
(
"
Should
not
have
added
history
for
invalid
URI
.
"
)
;
}
error
=
>
{
Assert
.
ok
(
error
.
message
.
includes
(
"
No
items
were
added
to
history
"
)
)
;
}
)
;
Assert
.
equal
(
false
await
promiseIsURIVisited
(
cantAddUri
)
)
;
}
}
}
)
;
