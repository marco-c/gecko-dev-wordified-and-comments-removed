add_task
(
async
function
test_InsertVisitedURIs_UpdateFrecency_and_History_InsertPlace
(
)
{
let
url
=
Services
.
io
.
newURI
(
"
http
:
/
/
example
.
com
/
a
"
)
;
let
promise
=
onRankingChanged
(
)
;
await
PlacesUtils
.
history
.
insert
(
{
url
visits
:
[
{
transition
:
PlacesUtils
.
history
.
TRANSITIONS
.
DOWNLOAD
}
]
}
)
;
await
promise
;
}
)
;
add_task
(
async
function
test_nsNavHistory_UpdateFrecency
(
)
{
let
url
=
Services
.
io
.
newURI
(
"
http
:
/
/
example
.
com
/
b
"
)
;
let
promise
=
onRankingChanged
(
)
;
await
PlacesUtils
.
bookmarks
.
insert
(
{
parentGuid
:
PlacesUtils
.
bookmarks
.
unfiledGuid
url
title
:
"
test
"
}
)
;
await
PlacesFrecencyRecalculator
.
recalculateAnyOutdatedFrecencies
(
)
;
await
promise
;
}
)
;
add_task
(
async
function
test_invalidateFrecencies
(
)
{
let
url
=
Services
.
io
.
newURI
(
"
http
:
/
/
test
-
invalidateFrecencies
.
com
/
"
)
;
await
PlacesUtils
.
bookmarks
.
insert
(
{
parentGuid
:
PlacesUtils
.
bookmarks
.
unfiledGuid
url
title
:
"
test
"
}
)
;
let
promise
=
onRankingChanged
(
)
;
await
PlacesUtils
.
history
.
removeByFilter
(
{
host
:
url
.
host
}
)
;
await
PlacesFrecencyRecalculator
.
recalculateAnyOutdatedFrecencies
(
)
;
await
promise
;
}
)
;
add_task
(
async
function
test_clear
(
)
{
let
received
=
[
]
;
let
listener
=
events
=
>
(
received
=
received
.
concat
(
events
.
map
(
e
=
>
e
.
type
)
)
)
;
PlacesObservers
.
addListener
(
[
"
history
-
cleared
"
"
pages
-
rank
-
changed
"
]
listener
)
;
await
PlacesUtils
.
history
.
clear
(
)
;
PlacesObservers
.
removeListener
(
[
"
history
-
cleared
"
"
pages
-
rank
-
changed
"
]
listener
)
;
Assert
.
deepEqual
(
received
[
"
history
-
cleared
"
]
)
;
}
)
;
add_task
(
async
function
test_nsNavHistory_idleDaily
(
)
{
await
PlacesUtils
.
bookmarks
.
insert
(
{
parentGuid
:
PlacesUtils
.
bookmarks
.
unfiledGuid
url
:
"
https
:
/
/
test
-
site1
.
org
"
title
:
"
test
"
}
)
;
PlacesFrecencyRecalculator
.
observe
(
null
"
idle
-
daily
"
"
"
)
;
await
Promise
.
all
(
[
onRankingChanged
(
)
]
)
;
}
)
;
add_task
(
async
function
test_nsNavHistory_recalculate
(
)
{
await
PlacesUtils
.
bookmarks
.
insert
(
{
parentGuid
:
PlacesUtils
.
bookmarks
.
unfiledGuid
url
:
"
https
:
/
/
test
-
site1
.
org
"
title
:
"
test
"
}
)
;
await
Promise
.
all
(
[
onRankingChanged
(
)
PlacesFrecencyRecalculator
.
recalculateAnyOutdatedFrecencies
(
)
]
)
;
}
)
;
function
onRankingChanged
(
)
{
return
PlacesTestUtils
.
waitForNotification
(
"
pages
-
rank
-
changed
"
)
;
}
