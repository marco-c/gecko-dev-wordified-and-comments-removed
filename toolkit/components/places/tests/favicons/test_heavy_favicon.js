add_task
(
async
function
(
)
{
let
file
=
do_get_file
(
"
noise
.
png
"
)
;
let
icon
=
{
file
uri
:
NetUtil
.
newURI
(
file
)
data
:
readFileData
(
file
)
mimetype
:
"
image
/
png
"
}
;
Assert
.
ok
(
icon
.
data
.
length
>
Ci
.
nsIFaviconService
.
MAX_FAVICON_BUFFER_SIZE
"
The
test
icon
file
size
must
be
larger
than
Ci
.
nsIFaviconService
.
MAX_FAVICON_BUFFER_SIZE
"
)
let
pageURI
=
uri
(
"
http
:
/
/
foo
.
bar
/
"
)
;
await
PlacesTestUtils
.
addVisits
(
pageURI
)
;
PlacesUtils
.
favicons
.
replaceFaviconData
(
icon
.
uri
icon
.
data
icon
.
data
.
length
icon
.
mimetype
)
;
await
setFaviconForPage
(
pageURI
icon
.
uri
)
;
Assert
.
equal
(
await
getFaviconUrlForPage
(
pageURI
)
icon
.
uri
.
spec
"
A
resampled
version
of
the
icon
should
be
stored
"
)
;
}
)
;
