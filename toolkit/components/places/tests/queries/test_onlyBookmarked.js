var
testData
=
[
{
isBookmark
:
true
uri
:
"
http
:
/
/
bookmarked
.
com
/
"
title
:
"
"
parentGuid
:
PlacesUtils
.
bookmarks
.
toolbarGuid
index
:
PlacesUtils
.
bookmarks
.
DEFAULT_INDEX
isInQuery
:
true
}
{
isBookmark
:
true
uri
:
"
http
:
/
/
bookmarked
-
elsewhere
.
com
/
"
title
:
"
"
parentGuid
:
PlacesUtils
.
bookmarks
.
menuGuid
index
:
PlacesUtils
.
bookmarks
.
DEFAULT_INDEX
isInQuery
:
false
}
{
isVisit
:
true
uri
:
"
http
:
/
/
notbookmarked
.
com
/
"
title
:
"
"
isInQuery
:
false
}
]
;
add_task
(
async
function
test_onlyBookmarked
(
)
{
await
task_populateDB
(
testData
)
;
var
query
=
PlacesUtils
.
history
.
getNewQuery
(
)
;
query
.
setFolders
(
[
PlacesUtils
.
toolbarFolderId
]
1
)
;
query
.
onlyBookmarked
=
true
;
var
options
=
PlacesUtils
.
history
.
getNewQueryOptions
(
)
;
options
.
queryType
=
options
.
QUERY_TYPE_HISTORY
;
var
result
=
PlacesUtils
.
history
.
executeQuery
(
query
options
)
;
var
root
=
result
.
root
;
root
.
containerOpen
=
true
;
info
(
"
begin
first
test
"
)
;
compareArrayToResult
(
testData
root
)
;
info
(
"
end
first
test
"
)
;
var
liveUpdateTestData
=
[
{
isBookmark
:
true
uri
:
"
http
:
/
/
bookmarked2
.
com
/
"
title
:
"
"
parentGuid
:
PlacesUtils
.
bookmarks
.
toolbarGuid
index
:
PlacesUtils
.
bookmarks
.
DEFAULT_INDEX
isInQuery
:
true
}
{
isBookmark
:
true
uri
:
"
http
:
/
/
bookmarked
-
elsewhere2
.
com
/
"
title
:
"
"
parentGuid
:
PlacesUtils
.
bookmarks
.
menuGuid
index
:
PlacesUtils
.
bookmarks
.
DEFAULT_INDEX
isInQuery
:
false
}
]
;
await
task_populateDB
(
liveUpdateTestData
)
;
testData
.
push
(
liveUpdateTestData
[
0
]
)
;
testData
.
push
(
liveUpdateTestData
[
1
]
)
;
info
(
"
begin
live
-
update
test
"
)
;
compareArrayToResult
(
testData
root
)
;
info
(
"
end
live
-
update
test
"
)
;
root
.
containerOpen
=
false
;
}
)
;
