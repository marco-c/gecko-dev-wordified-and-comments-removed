const
DAY_MSEC
=
86400000
;
const
MIN_MSEC
=
60000
;
const
HOUR_MSEC
=
3600000
;
var
beginTimeDate
=
new
Date
(
2008
0
6
8
0
0
0
)
;
var
endTimeDate
=
new
Date
(
2008
0
15
21
30
0
0
)
;
var
beginTime
=
beginTimeDate
.
getTime
(
)
;
var
endTime
=
endTimeDate
.
getTime
(
)
;
var
jan7_800
=
(
beginTime
+
DAY_MSEC
)
*
1000
;
var
jan6_815
=
(
beginTime
+
(
MIN_MSEC
*
15
)
)
*
1000
;
var
jan14_2130
=
(
endTime
-
DAY_MSEC
)
*
1000
;
var
jan15_2045
=
(
endTime
-
(
MIN_MSEC
*
45
)
)
*
1000
;
var
jan12_1730
=
(
endTime
-
(
DAY_MSEC
*
3
)
-
(
HOUR_MSEC
*
4
)
)
*
1000
;
var
jan6_700
=
(
beginTime
-
HOUR_MSEC
)
*
1000
;
var
dec27_800
=
(
beginTime
-
(
DAY_MSEC
*
10
)
)
*
1000
;
beginTime
*
=
1000
;
endTime
*
=
1000
;
var
goodAnnoName
=
"
moz
-
test
-
places
/
testing123
"
;
var
val
=
"
test
"
;
var
badAnnoName
=
"
text
/
foo
"
;
var
testData
=
[
{
isInQuery
:
true
isVisit
:
true
isDetails
:
true
isPageAnnotation
:
true
uri
:
"
http
:
/
/
foo
.
com
/
"
annoName
:
goodAnnoName
annoVal
:
val
lastVisit
:
jan14_2130
title
:
"
moz
"
}
{
isInQuery
:
false
isVisit
:
true
isDetails
:
true
isPageAnnotation
:
true
uri
:
"
http
:
/
/
www
.
foo
.
com
/
yiihah
"
annoName
:
goodAnnoName
annoVal
:
val
lastVisit
:
jan7_800
title
:
"
moz
"
}
{
isInQuery
:
false
isVisit
:
true
isDetails
:
true
uri
:
"
http
:
/
/
mail
.
foo
.
com
/
yiihah
"
title
:
"
moz
"
lastVisit
:
jan6_815
}
{
isInQuery
:
false
isVisit
:
true
isDetails
:
true
title
:
"
moz
"
uri
:
"
https
:
/
/
foo
.
com
/
"
lastVisit
:
jan15_2045
}
{
isInQuery
:
false
isVisit
:
true
isDetails
:
true
uri
:
"
ftp
:
/
/
foo
.
com
/
ftp
"
lastVisit
:
jan12_1730
title
:
"
hugelongconfmozlagurationofwordswithasearchtermsinit
whoo
-
hoo
"
}
{
isInQuery
:
false
isVisit
:
true
isDetails
:
true
title
:
"
moz
"
uri
:
"
http
:
/
/
foo
.
com
/
tooearly
.
php
"
lastVisit
:
jan6_700
}
{
isInQuery
:
false
isVisit
:
true
isDetails
:
true
isPageAnnotation
:
true
title
:
"
moz
"
uri
:
"
http
:
/
/
foo
.
com
/
badanno
.
htm
"
lastVisit
:
jan12_1730
annoName
:
badAnnoName
annoVal
:
val
}
{
isInQuery
:
false
isVisit
:
true
isDetails
:
true
title
:
"
changeme
"
uri
:
"
http
:
/
/
foo
.
com
/
changeme1
.
htm
"
lastVisit
:
jan12_1730
}
{
isInQuery
:
false
isVisit
:
true
isDetails
:
true
title
:
"
changeme2
"
uri
:
"
http
:
/
/
foo
.
com
/
changeme2
.
htm
"
lastVisit
:
jan7_800
}
{
isInQuery
:
false
isVisit
:
true
isDetails
:
true
title
:
"
moz
"
uri
:
"
http
:
/
/
foo
.
com
/
changeme3
.
htm
"
lastVisit
:
dec27_800
}
]
;
add_task
(
async
function
test_abstime_annotation_uri
(
)
{
await
task_populateDB
(
testData
)
;
var
query
=
PlacesUtils
.
history
.
getNewQuery
(
)
;
query
.
beginTime
=
beginTime
;
query
.
endTime
=
endTime
;
query
.
beginTimeReference
=
PlacesUtils
.
history
.
TIME_RELATIVE_EPOCH
;
query
.
endTimeReference
=
PlacesUtils
.
history
.
TIME_RELATIVE_EPOCH
;
query
.
searchTerms
=
"
moz
"
;
query
.
uri
=
uri
(
"
http
:
/
/
foo
.
com
"
)
;
query
.
annotation
=
"
text
/
foo
"
;
query
.
annotationIsNot
=
true
;
var
options
=
PlacesUtils
.
history
.
getNewQueryOptions
(
)
;
options
.
sortingMode
=
options
.
SORT_BY_URI_ASCENDING
;
options
.
resultType
=
options
.
RESULTS_AS_URI
;
var
result
=
PlacesUtils
.
history
.
executeQuery
(
query
options
)
;
var
root
=
result
.
root
;
root
.
containerOpen
=
true
;
compareArrayToResult
(
testData
root
)
;
do_print
(
"
change
title
"
)
;
var
change1
=
[
{
isDetails
:
true
uri
:
"
http
:
/
/
foo
.
com
/
"
title
:
"
mo
"
}
]
;
await
task_populateDB
(
change1
)
;
do_check_false
(
isInResult
(
{
uri
:
"
http
:
/
/
foo
.
com
/
"
}
root
)
)
;
var
change2
=
[
{
isDetails
:
true
uri
:
"
http
:
/
/
foo
.
com
/
"
title
:
"
moz
"
lastvisit
:
endTime
}
]
;
await
task_populateDB
(
change2
)
;
dump_table
(
"
moz_places
"
)
;
do_check_false
(
isInResult
(
{
uri
:
"
http
:
/
/
foo
.
com
/
"
}
root
)
)
;
var
change3
=
[
{
isPageAnnotation
:
true
uri
:
"
http
:
/
/
foo
.
com
/
"
annoName
:
badAnnoName
annoVal
:
"
test
"
}
]
;
await
task_populateDB
(
change3
)
;
do_print
(
"
LiveUpdate
by
removing
annotation
"
)
;
do_check_false
(
isInResult
(
{
uri
:
"
http
:
/
/
foo
.
com
/
"
}
root
)
)
;
root
.
containerOpen
=
false
;
}
)
;
