function
promiseURIDeleted
(
testURI
)
{
return
new
Promise
(
resolve
=
>
{
let
obs
=
new
NavHistoryObserver
(
)
;
obs
.
onDeleteURI
=
(
uri
guid
reason
)
=
>
{
PlacesUtils
.
history
.
removeObserver
(
obs
)
;
Assert
.
equal
(
uri
.
spec
testURI
.
spec
"
Deleted
URI
should
be
the
expected
one
"
)
;
resolve
(
)
;
}
;
PlacesUtils
.
history
.
addObserver
(
obs
)
;
}
)
;
}
add_task
(
async
function
test_autocomplete_on_value_removed
(
)
{
let
listener
=
Cc
[
"
mozilla
.
org
/
autocomplete
/
search
;
1
?
name
=
unifiedcomplete
"
]
.
getService
(
Components
.
interfaces
.
nsIAutoCompleteSimpleResultListener
)
;
let
testUri
=
NetUtil
.
newURI
(
"
http
:
/
/
foo
.
mozilla
.
com
/
"
)
;
await
PlacesTestUtils
.
addVisits
(
{
uri
:
testUri
referrer
:
uri
(
"
http
:
/
/
mozilla
.
com
/
"
)
}
)
;
let
promise
=
promiseURIDeleted
(
testUri
)
;
listener
.
onValueRemoved
(
null
testUri
.
spec
true
)
;
await
promise
;
}
)
;
