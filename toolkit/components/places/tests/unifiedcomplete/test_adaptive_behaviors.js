const
TEST_URL
=
"
http
:
/
/
adapt
.
mozilla
.
org
/
"
;
const
SEARCH_STRING
=
"
adapt
"
;
const
SUGGEST_TYPES
=
[
"
history
"
"
bookmark
"
"
openpage
"
]
;
add_task
(
async
function
test_adaptive_search_specific
(
)
{
Services
.
prefs
.
setBoolPref
(
"
browser
.
urlbar
.
autoFill
"
false
)
;
await
PlacesUtils
.
bookmarks
.
insert
(
{
parentGuid
:
PlacesUtils
.
bookmarks
.
unfiledGuid
title
:
"
test_book
"
url
:
TEST_URL
}
)
;
registerCleanupFunction
(
async
function
(
)
{
await
PlacesUtils
.
bookmarks
.
eraseEverything
(
)
;
}
)
;
for
(
let
type
of
SUGGEST_TYPES
)
{
type
=
=
"
history
"
?
Services
.
prefs
.
setBoolPref
(
"
browser
.
urlbar
.
suggest
.
"
+
type
true
)
:
Services
.
prefs
.
setBoolPref
(
"
browser
.
urlbar
.
suggest
.
"
+
type
false
)
;
}
await
addAdaptiveFeedback
(
TEST_URL
SEARCH_STRING
)
;
await
check_autocomplete
(
{
search
:
SEARCH_STRING
matches
:
[
]
}
)
;
}
)
;
