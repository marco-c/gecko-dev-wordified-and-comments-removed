#
include
"
nsPlacesTables
.
h
"
#
ifndef
__nsPlacesTriggers_h__
#
define
__nsPlacesTriggers_h__
#
define
VISIT_COUNT_INC
(
field
)
\
"
(
CASE
WHEN
"
field
"
IN
(
0
4
7
8
9
)
THEN
0
ELSE
1
END
)
"
#
define
CREATE_HISTORYVISITS_AFTERINSERT_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_historyvisits_afterinsert_v2_trigger
"
\
"
AFTER
INSERT
ON
moz_historyvisits
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
SELECT
invalidate_days_of_history
(
)
;
"
\
"
SELECT
store_last_inserted_id
(
'
moz_historyvisits
'
NEW
.
id
)
;
"
\
"
UPDATE
moz_places
SET
"
\
"
visit_count
=
visit_count
+
"
VISIT_COUNT_INC
(
"
NEW
.
visit_type
"
)
"
"
\
"
recalc_frecency
=
(
frecency
<
>
0
)
"
\
"
last_visit_date
=
MAX
(
IFNULL
(
last_visit_date
0
)
NEW
.
visit_date
)
"
\
"
WHERE
id
=
NEW
.
place_id
;
"
\
"
END
"
)
#
define
CREATE_HISTORYVISITS_AFTERDELETE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_historyvisits_afterdelete_v2_trigger
"
\
"
AFTER
DELETE
ON
moz_historyvisits
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
SELECT
invalidate_days_of_history
(
)
;
"
\
"
UPDATE
moz_places
SET
"
\
"
visit_count
=
visit_count
-
"
VISIT_COUNT_INC
(
"
OLD
.
visit_type
"
)
"
"
\
"
recalc_frecency
=
(
frecency
<
>
0
)
"
\
"
last_visit_date
=
(
SELECT
visit_date
FROM
moz_historyvisits
"
\
"
WHERE
place_id
=
OLD
.
place_id
"
\
"
ORDER
BY
visit_date
DESC
LIMIT
1
)
"
\
"
WHERE
id
=
OLD
.
place_id
;
"
\
"
END
"
)
#
define
UPDATE_ORIGIN_FRECENCY_STATS
(
op
)
\
"
INSERT
OR
REPLACE
INTO
moz_meta
(
key
value
)
"
\
"
SELECT
'
"
MOZ_META_KEY_ORIGIN_FRECENCY_COUNT
\
"
'
"
\
"
IFNULL
(
(
SELECT
value
FROM
moz_meta
WHERE
key
=
"
\
"
'
"
MOZ_META_KEY_ORIGIN_FRECENCY_COUNT
"
'
)
0
)
"
op
\
"
CAST
(
frecency
>
0
AS
INT
)
"
\
"
FROM
moz_origins
WHERE
prefix
=
OLD
.
prefix
AND
host
=
OLD
.
host
"
\
"
UNION
"
\
"
SELECT
'
"
MOZ_META_KEY_ORIGIN_FRECENCY_SUM
\
"
'
"
\
"
IFNULL
(
(
SELECT
value
FROM
moz_meta
WHERE
key
=
"
\
"
'
"
MOZ_META_KEY_ORIGIN_FRECENCY_SUM
"
'
)
0
)
"
op
\
"
MAX
(
frecency
0
)
"
\
"
FROM
moz_origins
WHERE
prefix
=
OLD
.
prefix
AND
host
=
OLD
.
host
"
\
"
UNION
"
\
"
SELECT
'
"
MOZ_META_KEY_ORIGIN_FRECENCY_SUM_OF_SQUARES
\
"
'
"
\
"
IFNULL
(
(
SELECT
value
FROM
moz_meta
WHERE
key
=
"
\
"
'
"
MOZ_META_KEY_ORIGIN_FRECENCY_SUM_OF_SQUARES
"
'
)
0
)
"
op
\
"
(
MAX
(
frecency
0
)
*
MAX
(
frecency
0
)
)
"
\
"
FROM
moz_origins
WHERE
prefix
=
OLD
.
prefix
AND
host
=
OLD
.
host
"
#
define
CREATE_PLACES_AFTERINSERT_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_places_afterinsert_trigger
"
\
"
AFTER
INSERT
ON
moz_places
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
SELECT
store_last_inserted_id
(
'
moz_places
'
NEW
.
id
)
;
"
\
"
INSERT
OR
IGNORE
INTO
moz_updateoriginsinsert_temp
(
place_id
"
\
"
prefix
"
\
"
host
frecency
)
"
\
"
VALUES
(
NEW
.
id
get_prefix
(
NEW
.
url
)
get_host_and_port
(
NEW
.
url
)
"
\
"
NEW
.
frecency
)
;
"
\
"
END
"
)
#
define
CREATE_UPDATEORIGINSINSERT_AFTERDELETE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_updateoriginsinsert_afterdelete_trigger
"
\
"
AFTER
DELETE
ON
moz_updateoriginsinsert_temp
FOR
EACH
ROW
"
\
"
BEGIN
"
\
/
*
Deduct
the
origin
'
s
current
contribution
to
frecency
stats
*
/
\
UPDATE_ORIGIN_FRECENCY_STATS
(
"
-
"
)
"
;
"
\
"
INSERT
INTO
moz_origins
(
prefix
host
frecency
recalc_alt_frecency
)
"
\
"
VALUES
(
OLD
.
prefix
OLD
.
host
MAX
(
OLD
.
frecency
0
)
1
)
"
\
"
ON
CONFLICT
(
prefix
host
)
DO
UPDATE
"
\
"
SET
frecency
=
frecency
+
OLD
.
frecency
"
\
"
WHERE
OLD
.
frecency
>
0
;
"
\
/
*
Add
the
origin
'
s
new
contribution
to
frecency
stats
*
/
\
UPDATE_ORIGIN_FRECENCY_STATS
(
"
+
"
)
"
;
"
\
"
UPDATE
moz_places
SET
origin_id
=
(
"
\
"
SELECT
id
"
\
"
FROM
moz_origins
"
\
"
WHERE
prefix
=
OLD
.
prefix
AND
host
=
OLD
.
host
"
\
"
)
"
\
"
WHERE
id
=
OLD
.
place_id
;
"
\
"
END
"
\
)
#
define
CREATE_PLACES_AFTERDELETE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_places_afterdelete_trigger
"
\
"
AFTER
DELETE
ON
moz_places
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
INSERT
INTO
moz_updateoriginsdelete_temp
(
prefix
host
"
\
"
frecency_delta
)
"
\
"
VALUES
(
get_prefix
(
OLD
.
url
)
get_host_and_port
(
OLD
.
url
)
"
\
"
-
MAX
(
OLD
.
frecency
0
)
)
"
\
"
ON
CONFLICT
(
prefix
host
)
DO
UPDATE
"
\
"
SET
frecency_delta
=
frecency_delta
-
OLD
.
frecency
"
\
"
WHERE
OLD
.
frecency
>
0
;
"
\
"
END
"
)
#
define
CREATE_PLACES_AFTERDELETE_WPREVIEWS_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_places_afterdelete_wpreviews_trigger
"
\
"
AFTER
DELETE
ON
moz_places
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
INSERT
INTO
moz_updateoriginsdelete_temp
(
prefix
host
"
\
"
frecency_delta
)
"
\
"
VALUES
(
get_prefix
(
OLD
.
url
)
get_host_and_port
(
OLD
.
url
)
"
\
"
-
MAX
(
OLD
.
frecency
0
)
)
"
\
"
ON
CONFLICT
(
prefix
host
)
DO
UPDATE
"
\
"
SET
frecency_delta
=
frecency_delta
-
OLD
.
frecency
"
\
"
WHERE
OLD
.
frecency
>
0
;
"
\
"
INSERT
OR
IGNORE
INTO
moz_previews_tombstones
VALUES
"
\
"
(
md5hex
(
OLD
.
url
)
)
;
"
\
"
END
"
)
#
define
CREATE_UPDATEORIGINSDELETE_AFTERDELETE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_updateoriginsdelete_afterdelete_trigger
"
\
"
AFTER
DELETE
ON
moz_updateoriginsdelete_temp
FOR
EACH
ROW
"
\
"
BEGIN
"
\
/
*
Deduct
the
origin
'
s
current
contribution
to
frecency
stats
*
/
\
UPDATE_ORIGIN_FRECENCY_STATS
(
"
-
"
)
"
;
"
\
"
UPDATE
moz_origins
SET
frecency
=
frecency
+
OLD
.
frecency_delta
"
\
"
recalc_frecency
=
0
"
\
"
WHERE
prefix
=
OLD
.
prefix
AND
host
=
OLD
.
host
;
"
\
"
DELETE
FROM
moz_origins
"
\
"
WHERE
prefix
=
OLD
.
prefix
AND
host
=
OLD
.
host
AND
NOT
EXISTS
(
"
\
"
SELECT
id
FROM
moz_places
"
\
"
WHERE
origin_id
=
moz_origins
.
id
"
\
"
LIMIT
1
"
\
"
)
;
"
\
/
*
Add
the
origin
'
s
new
contribution
to
frecency
stats
*
/
\
UPDATE_ORIGIN_FRECENCY_STATS
(
"
+
"
)
"
;
"
\
"
DELETE
FROM
moz_icons
WHERE
id
IN
(
"
\
"
SELECT
id
FROM
moz_icons
"
\
"
WHERE
fixed_icon_url_hash
=
hash
(
fixup_url
(
OLD
.
host
|
|
'
/
favicon
.
ico
'
)
)
"
\
"
AND
fixup_url
(
icon_url
)
=
fixup_url
(
OLD
.
host
|
|
'
/
favicon
.
ico
'
)
"
\
"
AND
NOT
EXISTS
(
SELECT
1
FROM
moz_origins
WHERE
host
=
OLD
.
host
"
\
"
OR
host
=
fixup_url
(
OLD
.
host
)
)
"
\
"
EXCEPT
"
\
"
SELECT
icon_id
FROM
moz_icons_to_pages
"
\
"
)
;
"
\
"
END
"
\
)
#
define
CREATE_PLACES_AFTERUPDATE_FRECENCY_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_places_afterupdate_frecency_trigger
"
\
"
AFTER
UPDATE
OF
frecency
ON
moz_places
FOR
EACH
ROW
"
\
"
WHEN
NOT
is_frecency_decaying
(
)
"
\
"
BEGIN
"
\
"
INSERT
INTO
moz_updateoriginsupdate_temp
(
prefix
host
"
\
"
frecency_delta
)
"
\
"
VALUES
(
get_prefix
(
NEW
.
url
)
get_host_and_port
(
NEW
.
url
)
"
\
"
MAX
(
NEW
.
frecency
0
)
-
MAX
(
OLD
.
frecency
0
)
)
"
\
"
ON
CONFLICT
(
prefix
host
)
DO
UPDATE
"
\
"
SET
frecency_delta
=
frecency_delta
+
EXCLUDED
.
frecency_delta
;
"
\
"
UPDATE
moz_places
SET
recalc_frecency
=
0
WHERE
id
=
NEW
.
id
;
"
\
"
UPDATE
moz_origins
SET
recalc_frecency
=
1
recalc_alt_frecency
=
1
"
\
"
WHERE
id
=
NEW
.
origin_id
;
"
\
"
END
"
)
#
define
CREATE_UPDATEORIGINSUPDATE_AFTERDELETE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_updateoriginsupdate_afterdelete_trigger
"
\
"
AFTER
DELETE
ON
moz_updateoriginsupdate_temp
FOR
EACH
ROW
"
\
"
BEGIN
"
\
/
*
Deduct
the
origin
'
s
current
contribution
to
frecency
stats
*
/
\
UPDATE_ORIGIN_FRECENCY_STATS
(
"
-
"
)
"
;
"
\
"
UPDATE
moz_origins
"
\
"
SET
frecency
=
frecency
+
OLD
.
frecency_delta
"
\
"
recalc_frecency
=
0
"
\
"
WHERE
prefix
=
OLD
.
prefix
AND
host
=
OLD
.
host
;
"
\
/
*
Add
the
origin
'
s
new
contribution
to
frecency
stats
*
/
\
UPDATE_ORIGIN_FRECENCY_STATS
(
"
+
"
)
"
;
"
\
"
END
"
\
)
#
define
CREATE_PLACES_AFTERUPDATE_RECALC_FRECENCY_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_places_afterupdate_recalc_frecency_trigger
"
\
"
AFTER
UPDATE
OF
recalc_frecency
ON
moz_places
FOR
EACH
ROW
"
\
"
WHEN
NEW
.
recalc_frecency
=
1
"
\
"
BEGIN
"
\
"
SELECT
set_should_start_frecency_recalculation
(
)
;
"
\
"
END
"
)
#
define
CREATE_REMOVEOPENPAGE_CLEANUP_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMPORARY
TRIGGER
moz_openpages_temp_afterupdate_trigger
"
\
"
AFTER
UPDATE
OF
open_count
ON
moz_openpages_temp
FOR
EACH
ROW
"
\
"
WHEN
NEW
.
open_count
=
0
"
\
"
BEGIN
"
\
"
DELETE
FROM
moz_openpages_temp
"
\
"
WHERE
url
=
NEW
.
url
"
\
"
AND
userContextId
=
NEW
.
userContextId
;
"
\
"
END
"
)
#
define
IS_PLACE_QUERY
\
"
url_hash
BETWEEN
hash
(
'
place
'
'
prefix_lo
'
)
"
\
"
AND
hash
(
'
place
'
'
prefix_hi
'
)
"
#
define
CREATE_BOOKMARKS_FOREIGNCOUNT_AFTERDELETE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_bookmarks_foreign_count_afterdelete_trigger
"
\
"
AFTER
DELETE
ON
moz_bookmarks
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
UPDATE
moz_places
"
\
"
SET
foreign_count
=
foreign_count
-
1
"
\
"
recalc_frecency
=
NOT
"
IS_PLACE_QUERY
\
"
WHERE
id
=
OLD
.
fk
;
"
\
"
END
"
)
#
define
CREATE_BOOKMARKS_FOREIGNCOUNT_AFTERINSERT_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_bookmarks_foreign_count_afterinsert_trigger
"
\
"
AFTER
INSERT
ON
moz_bookmarks
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
SELECT
store_last_inserted_id
(
'
moz_bookmarks
'
NEW
.
id
)
;
"
\
"
SELECT
note_sync_change
(
)
WHERE
NEW
.
syncChangeCounter
>
0
;
"
\
"
UPDATE
moz_places
"
\
"
SET
frecency
=
1
WHERE
frecency
=
-
1
AND
NOT
"
IS_PLACE_QUERY
\
"
;
"
\
"
UPDATE
moz_places
"
\
"
SET
foreign_count
=
foreign_count
+
1
"
\
"
hidden
=
"
IS_PLACE_QUERY
\
"
"
\
"
recalc_frecency
=
NOT
"
IS_PLACE_QUERY
\
"
WHERE
id
=
NEW
.
fk
;
"
\
"
END
"
)
#
define
CREATE_BOOKMARKS_FOREIGNCOUNT_AFTERUPDATE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_bookmarks_foreign_count_afterupdate_trigger
"
\
"
AFTER
UPDATE
OF
fk
syncChangeCounter
ON
moz_bookmarks
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
SELECT
note_sync_change
(
)
"
\
"
WHERE
NEW
.
syncChangeCounter
<
>
OLD
.
syncChangeCounter
;
"
\
"
UPDATE
moz_places
"
\
"
SET
foreign_count
=
foreign_count
+
1
"
\
"
hidden
=
"
IS_PLACE_QUERY
\
"
"
\
"
recalc_frecency
=
NOT
"
IS_PLACE_QUERY
\
"
WHERE
OLD
.
fk
<
>
NEW
.
fk
AND
id
=
NEW
.
fk
;
"
\
"
UPDATE
moz_places
"
\
"
SET
foreign_count
=
foreign_count
-
1
"
\
"
recalc_frecency
=
NOT
"
IS_PLACE_QUERY
\
"
WHERE
OLD
.
fk
<
>
NEW
.
fk
AND
id
=
OLD
.
fk
;
"
\
"
END
"
)
#
define
CREATE_KEYWORDS_FOREIGNCOUNT_AFTERDELETE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_keywords_foreign_count_afterdelete_trigger
"
\
"
AFTER
DELETE
ON
moz_keywords
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
UPDATE
moz_places
"
\
"
SET
foreign_count
=
foreign_count
-
1
"
\
"
WHERE
id
=
OLD
.
place_id
;
"
\
"
END
"
)
#
define
CREATE_KEYWORDS_FOREIGNCOUNT_AFTERINSERT_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_keywords_foreign_count_afterinsert_trigger
"
\
"
AFTER
INSERT
ON
moz_keywords
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
UPDATE
moz_places
"
\
"
SET
foreign_count
=
foreign_count
+
1
"
\
"
WHERE
id
=
NEW
.
place_id
;
"
\
"
END
"
)
#
define
CREATE_KEYWORDS_FOREIGNCOUNT_AFTERUPDATE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_keywords_foreign_count_afterupdate_trigger
"
\
"
AFTER
UPDATE
OF
place_id
ON
moz_keywords
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
UPDATE
moz_places
"
\
"
SET
foreign_count
=
foreign_count
+
1
"
\
"
WHERE
id
=
NEW
.
place_id
;
"
\
"
UPDATE
moz_places
"
\
"
SET
foreign_count
=
foreign_count
-
1
"
\
"
WHERE
id
=
OLD
.
place_id
;
"
\
"
END
"
)
#
define
CREATE_ICONS_AFTERINSERT_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_icons_afterinsert_v1_trigger
"
\
"
AFTER
INSERT
ON
moz_icons
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
SELECT
store_last_inserted_id
(
'
moz_icons
'
NEW
.
id
)
;
"
\
"
END
"
)
#
define
CREATE_BOOKMARKS_DELETED_AFTERINSERT_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_bookmarks_deleted_afterinsert_v1_trigger
"
\
"
AFTER
INSERT
ON
moz_bookmarks_deleted
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
SELECT
note_sync_change
(
)
;
"
\
"
END
"
)
#
define
CREATE_BOOKMARKS_DELETED_AFTERDELETE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_bookmarks_deleted_afterdelete_v1_trigger
"
\
"
AFTER
DELETE
ON
moz_bookmarks_deleted
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
SELECT
note_sync_change
(
)
;
"
\
"
END
"
)
#
define
CREATE_PLACES_METADATA_AFTERDELETE_TRIGGER
\
nsLiteralCString
(
\
"
CREATE
TEMP
TRIGGER
moz_places_metadata_afterdelete_trigger
"
\
"
AFTER
DELETE
ON
moz_places_metadata
"
\
"
FOR
EACH
ROW
"
\
"
BEGIN
"
\
"
DELETE
FROM
moz_places_metadata_search_queries
"
\
"
WHERE
id
=
OLD
.
search_query_id
AND
NOT
EXISTS
(
"
\
"
SELECT
id
FROM
moz_places_metadata
"
\
"
WHERE
search_query_id
=
OLD
.
search_query_id
"
\
"
)
;
"
\
"
END
"
)
#
endif
