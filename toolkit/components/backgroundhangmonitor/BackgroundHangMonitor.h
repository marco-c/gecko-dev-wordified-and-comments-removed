#
ifndef
mozilla_BackgroundHangMonitor_h
#
define
mozilla_BackgroundHangMonitor_h
#
include
"
mozilla
/
HangAnnotations
.
h
"
#
include
"
mozilla
/
Monitor
.
h
"
#
include
"
mozilla
/
RefPtr
.
h
"
#
include
"
nsString
.
h
"
#
include
<
stdint
.
h
>
namespace
mozilla
{
class
BackgroundHangThread
;
class
BackgroundHangManager
;
class
BackgroundHangMonitor
{
private
:
friend
BackgroundHangManager
;
RefPtr
<
BackgroundHangThread
>
mThread
;
static
bool
ShouldDisableOnBeta
(
const
nsCString
&
)
;
static
bool
DisableOnBeta
(
)
;
public
:
static
const
uint32_t
kNoTimeout
=
0
;
enum
ThreadType
{
THREAD_SHARED
THREAD_PRIVATE
}
;
static
void
Startup
(
)
;
static
void
Shutdown
(
)
;
static
bool
IsDisabled
(
)
;
BackgroundHangMonitor
(
const
char
*
aName
uint32_t
aTimeoutMs
uint32_t
aMaxTimeoutMs
ThreadType
aThreadType
=
THREAD_SHARED
)
;
BackgroundHangMonitor
(
)
;
~
BackgroundHangMonitor
(
)
;
void
NotifyActivity
(
)
;
void
NotifyWait
(
)
;
static
bool
RegisterAnnotator
(
HangMonitor
:
:
Annotator
&
aAnnotator
)
;
static
bool
UnregisterAnnotator
(
HangMonitor
:
:
Annotator
&
aAnnotator
)
;
}
;
}
#
endif
