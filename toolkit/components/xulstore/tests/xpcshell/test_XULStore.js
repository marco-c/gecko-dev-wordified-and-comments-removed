"
use
strict
"
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
osfile
.
jsm
"
)
;
var
XULStore
=
null
;
var
browserURI
=
"
chrome
:
/
/
browser
/
content
/
browser
.
xul
"
;
var
aboutURI
=
"
about
:
config
"
;
function
run_test
(
)
{
do_get_profile
(
)
;
run_next_test
(
)
;
}
function
checkValue
(
uri
id
attr
reference
)
{
let
value
=
XULStore
.
getValue
(
uri
id
attr
)
;
Assert
.
equal
(
value
reference
)
;
}
function
checkValueExists
(
uri
id
attr
exists
)
{
Assert
.
equal
(
XULStore
.
hasValue
(
uri
id
attr
)
exists
)
;
}
function
getIDs
(
uri
)
{
let
it
=
XULStore
.
getIDsEnumerator
(
uri
)
;
let
result
=
[
]
;
while
(
it
.
hasMore
(
)
)
{
let
value
=
it
.
getNext
(
)
;
result
.
push
(
value
)
;
}
result
.
sort
(
)
;
return
result
;
}
function
getAttributes
(
uri
id
)
{
let
it
=
XULStore
.
getAttributeEnumerator
(
uri
id
)
;
let
result
=
[
]
;
while
(
it
.
hasMore
(
)
)
{
let
value
=
it
.
getNext
(
)
;
result
.
push
(
value
)
;
}
result
.
sort
(
)
;
return
result
;
}
function
checkArrays
(
a
b
)
{
a
.
sort
(
)
;
b
.
sort
(
)
;
Assert
.
equal
(
a
.
toString
(
)
b
.
toString
(
)
)
;
}
add_task
(
async
function
setup
(
)
{
XULStore
=
Cc
[
"
mozilla
.
org
/
xul
/
xulstore
;
1
"
]
.
getService
(
Ci
.
nsIXULStore
)
;
XULStore
.
setValue
(
browserURI
"
main
-
window
"
"
width
"
"
994
"
)
;
}
)
;
add_task
(
async
function
testTruncation
(
)
{
let
dos
=
Array
(
8192
)
.
join
(
"
~
"
)
;
Assert
.
throws
(
(
)
=
>
XULStore
.
setValue
(
browserURI
dos
"
foo
"
"
foo
"
)
/
NS_ERROR_ILLEGAL_VALUE
/
)
;
Assert
.
throws
(
(
)
=
>
XULStore
.
setValue
(
browserURI
"
foo
"
dos
"
foo
"
)
/
NS_ERROR_ILLEGAL_VALUE
/
)
;
XULStore
.
setValue
(
browserURI
"
dos
"
"
dos
"
dos
)
;
dos
=
XULStore
.
getValue
(
browserURI
"
dos
"
"
dos
"
)
;
Assert
.
ok
(
dos
.
length
=
=
4096
)
;
XULStore
.
removeValue
(
browserURI
"
dos
"
"
dos
"
)
;
}
)
;
add_task
(
async
function
testGetValue
(
)
{
checkValue
(
browserURI
"
side
-
window
"
"
height
"
"
"
)
;
checkValue
(
browserURI
"
main
-
window
"
"
width
"
"
994
"
)
;
}
)
;
add_task
(
async
function
testHasValue
(
)
{
checkValueExists
(
browserURI
"
side
-
window
"
"
height
"
false
)
;
checkValueExists
(
browserURI
"
main
-
window
"
"
width
"
true
)
;
}
)
;
add_task
(
async
function
testSetValue
(
)
{
checkValue
(
browserURI
"
side
-
bar
"
"
width
"
"
"
)
;
XULStore
.
setValue
(
browserURI
"
side
-
bar
"
"
width
"
"
1000
"
)
;
checkValue
(
browserURI
"
side
-
bar
"
"
width
"
"
1000
"
)
;
checkArrays
(
[
"
main
-
window
"
"
side
-
bar
"
]
getIDs
(
browserURI
)
)
;
checkArrays
(
[
"
width
"
]
getAttributes
(
browserURI
"
side
-
bar
"
)
)
;
checkValue
(
browserURI
"
side
-
bar
"
"
width
"
"
1000
"
)
;
XULStore
.
setValue
(
browserURI
"
side
-
bar
"
"
width
"
"
1024
"
)
;
checkValue
(
browserURI
"
side
-
bar
"
"
width
"
"
1024
"
)
;
checkArrays
(
[
"
main
-
window
"
"
side
-
bar
"
]
getIDs
(
browserURI
)
)
;
checkArrays
(
[
"
width
"
]
getAttributes
(
browserURI
"
side
-
bar
"
)
)
;
checkValue
(
browserURI
"
side
-
bar
"
"
height
"
"
"
)
;
XULStore
.
setValue
(
browserURI
"
side
-
bar
"
"
height
"
"
1000
"
)
;
checkValue
(
browserURI
"
side
-
bar
"
"
height
"
"
1000
"
)
;
checkArrays
(
[
"
main
-
window
"
"
side
-
bar
"
]
getIDs
(
browserURI
)
)
;
checkArrays
(
[
"
width
"
"
height
"
]
getAttributes
(
browserURI
"
side
-
bar
"
)
)
;
}
)
;
add_task
(
async
function
testRemoveValue
(
)
{
checkValue
(
browserURI
"
side
-
bar
"
"
width
"
"
1024
"
)
;
XULStore
.
removeValue
(
browserURI
"
side
-
bar
"
"
width
"
)
;
checkValue
(
browserURI
"
side
-
bar
"
"
width
"
"
"
)
;
checkValueExists
(
browserURI
"
side
-
bar
"
"
width
"
false
)
;
checkArrays
(
[
"
main
-
window
"
"
side
-
bar
"
]
getIDs
(
browserURI
)
)
;
checkArrays
(
[
"
height
"
]
getAttributes
(
browserURI
"
side
-
bar
"
)
)
;
checkValue
(
browserURI
"
side
-
bar
"
"
height
"
"
1000
"
)
;
XULStore
.
removeValue
(
browserURI
"
side
-
bar
"
"
height
"
)
;
checkValue
(
browserURI
"
side
-
bar
"
"
height
"
"
"
)
;
checkArrays
(
[
"
main
-
window
"
]
getIDs
(
browserURI
)
)
;
XULStore
.
removeValue
(
browserURI
"
main
-
window
"
"
bar
"
)
;
XULStore
.
removeValue
(
browserURI
"
foo
"
"
bar
"
)
;
let
nonDocURI
=
"
chrome
:
/
/
example
/
content
/
other
.
xul
"
;
XULStore
.
removeValue
(
nonDocURI
"
foo
"
"
bar
"
)
;
XULStore
.
removeValue
(
browserURI
"
addon
-
bar
"
"
collapsed
"
)
;
checkArrays
(
[
]
getAttributes
(
browserURI
"
addon
-
bar
"
)
)
;
XULStore
.
removeValue
(
browserURI
"
main
-
window
"
"
width
"
)
;
XULStore
.
removeValue
(
browserURI
"
main
-
window
"
"
height
"
)
;
XULStore
.
removeValue
(
browserURI
"
main
-
window
"
"
screenX
"
)
;
XULStore
.
removeValue
(
browserURI
"
main
-
window
"
"
screenY
"
)
;
XULStore
.
removeValue
(
browserURI
"
main
-
window
"
"
sizemode
"
)
;
checkArrays
(
[
]
getAttributes
(
browserURI
"
main
-
window
"
)
)
;
XULStore
.
removeValue
(
browserURI
"
sidebar
-
title
"
"
value
"
)
;
checkArrays
(
[
]
getAttributes
(
browserURI
"
sidebar
-
title
"
)
)
;
checkArrays
(
[
]
getIDs
(
browserURI
)
)
;
XULStore
.
removeValue
(
aboutURI
"
prefCol
"
"
ordinal
"
)
;
XULStore
.
removeValue
(
aboutURI
"
prefCol
"
"
sortDirection
"
)
;
checkArrays
(
[
]
getAttributes
(
aboutURI
"
prefCol
"
)
)
;
XULStore
.
removeValue
(
aboutURI
"
lockCol
"
"
ordinal
"
)
;
checkArrays
(
[
]
getAttributes
(
aboutURI
"
lockCol
"
)
)
;
checkArrays
(
[
]
getIDs
(
aboutURI
)
)
;
}
)
;
