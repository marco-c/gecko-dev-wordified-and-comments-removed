#
ifndef
mozilla_XULStore_h
#
define
mozilla_XULStore_h
#
include
"
nsIXULStore
.
h
"
namespace
mozilla
{
class
XULStoreIterator
final
{
public
:
bool
HasMore
(
)
const
;
nsresult
GetNext
(
nsAString
*
item
)
;
private
:
XULStoreIterator
(
)
=
delete
;
XULStoreIterator
(
const
XULStoreIterator
&
)
=
delete
;
XULStoreIterator
&
operator
=
(
const
XULStoreIterator
&
)
=
delete
;
~
XULStoreIterator
(
)
=
delete
;
}
;
template
<
>
class
DefaultDelete
<
XULStoreIterator
>
{
public
:
void
operator
(
)
(
XULStoreIterator
*
ptr
)
const
;
}
;
namespace
XULStore
{
already_AddRefed
<
nsIXULStore
>
GetService
(
)
;
nsresult
SetValue
(
const
nsAString
&
doc
const
nsAString
&
id
const
nsAString
&
attr
const
nsAString
&
value
)
;
nsresult
HasValue
(
const
nsAString
&
doc
const
nsAString
&
id
const
nsAString
&
attr
bool
&
has_value
)
;
nsresult
GetValue
(
const
nsAString
&
doc
const
nsAString
&
id
const
nsAString
&
attr
nsAString
&
value
)
;
nsresult
RemoveValue
(
const
nsAString
&
doc
const
nsAString
&
id
const
nsAString
&
attr
)
;
nsresult
GetIDs
(
const
nsAString
&
doc
UniquePtr
<
XULStoreIterator
>
&
iter
)
;
nsresult
GetAttrs
(
const
nsAString
&
doc
const
nsAString
&
id
UniquePtr
<
XULStoreIterator
>
&
iter
)
;
}
;
}
;
#
endif
