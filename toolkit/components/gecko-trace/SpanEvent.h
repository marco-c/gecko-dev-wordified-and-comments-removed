#
ifndef
GECKO_TRACE_SPAN_EVENT_H
#
define
GECKO_TRACE_SPAN_EVENT_H
#
include
"
nsVariant
.
h
"
namespace
mozilla
:
:
gecko_trace
{
using
string_view
=
std
:
:
string_view
;
using
AttributeValue
=
Variant
<
bool
int64_t
string_view
mozilla
:
:
Span
<
const
bool
>
mozilla
:
:
Span
<
const
int64_t
>
mozilla
:
:
Span
<
const
string_view
>
>
;
class
SpanEvent
{
public
:
virtual
~
SpanEvent
(
)
=
default
;
virtual
bool
ForEachKeyValue
(
std
:
:
function
<
bool
(
string_view
AttributeValue
)
>
aCallback
)
const
=
0
;
virtual
string_view
GetEventName
(
)
const
=
0
;
virtual
size_t
Size
(
)
const
=
0
;
#
ifdef
GECKO_TRACE_ENABLE
void
Emit
(
)
;
#
else
constexpr
void
Emit
(
)
{
}
;
#
endif
}
;
}
#
endif
