#
ifndef
mozilla_embedding_PrintingParent_h
#
define
mozilla_embedding_PrintingParent_h
#
include
"
mozilla
/
dom
/
PBrowserParent
.
h
"
#
include
"
mozilla
/
embedding
/
PPrintingParent
.
h
"
class
nsIPrintSettingsService
;
class
nsIWebProgressListener
;
class
nsPIDOMWindowOuter
;
class
PPrintProgressDialogParent
;
class
PPrintSettingsDialogParent
;
namespace
mozilla
{
namespace
layout
{
class
PRemotePrintJobParent
;
class
RemotePrintJobParent
;
}
namespace
embedding
{
class
PrintingParent
final
:
public
PPrintingParent
{
public
:
NS_INLINE_DECL_REFCOUNTING
(
PrintingParent
)
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvShowProgress
(
PBrowserParent
*
parent
PPrintProgressDialogParent
*
printProgressDialog
PRemotePrintJobParent
*
remotePrintJob
const
bool
&
isForPrinting
bool
*
notifyOnOpen
nsresult
*
result
)
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvShowPrintDialog
(
PPrintSettingsDialogParent
*
aDialog
PBrowserParent
*
aParent
const
PrintData
&
aData
)
;
virtual
mozilla
:
:
ipc
:
:
IPCResult
RecvSavePrintSettings
(
const
PrintData
&
data
const
bool
&
usePrinterNamePrefix
const
uint32_t
&
flags
nsresult
*
rv
)
;
virtual
PPrintProgressDialogParent
*
AllocPPrintProgressDialogParent
(
)
;
virtual
bool
DeallocPPrintProgressDialogParent
(
PPrintProgressDialogParent
*
aActor
)
;
virtual
PPrintSettingsDialogParent
*
AllocPPrintSettingsDialogParent
(
)
;
virtual
bool
DeallocPPrintSettingsDialogParent
(
PPrintSettingsDialogParent
*
aActor
)
;
virtual
PRemotePrintJobParent
*
AllocPRemotePrintJobParent
(
)
;
virtual
bool
DeallocPRemotePrintJobParent
(
PRemotePrintJobParent
*
aActor
)
;
virtual
void
ActorDestroy
(
ActorDestroyReason
aWhy
)
;
MOZ_IMPLICIT
PrintingParent
(
)
;
nsresult
SerializeAndEnsureRemotePrintJob
(
nsIPrintSettings
*
aPrintSettings
nsIWebProgressListener
*
aListener
layout
:
:
RemotePrintJobParent
*
aRemotePrintJob
PrintData
*
aPrintData
)
;
private
:
virtual
~
PrintingParent
(
)
;
nsPIDOMWindowOuter
*
DOMWindowFromBrowserParent
(
PBrowserParent
*
parent
)
;
nsresult
ShowPrintDialog
(
PBrowserParent
*
parent
const
PrintData
&
data
PrintData
*
result
)
;
nsCOMPtr
<
nsIPrintSettingsService
>
mPrintSettingsSvc
;
}
;
}
}
#
endif
