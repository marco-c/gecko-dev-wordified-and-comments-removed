add_task
(
async
function
test_backgroundtask_deletes_profile
(
)
{
let
sentinel
=
Services
.
uuid
.
generateUUID
(
)
.
toString
(
)
;
sentinel
=
sentinel
.
substring
(
1
sentinel
.
length
-
1
)
;
let
stdoutLines
=
[
]
;
let
exitCode
=
await
do_backgroundtask
(
"
unique_profile
"
{
extraArgs
:
[
sentinel
]
onStdoutLine
:
line
=
>
stdoutLines
.
push
(
line
)
}
)
;
Assert
.
equal
(
0
exitCode
)
;
let
profile
;
for
(
let
line
of
stdoutLines
)
{
if
(
line
.
includes
(
sentinel
)
)
{
let
info
=
JSON
.
parse
(
line
.
split
(
sentinel
)
[
1
]
)
;
profile
=
info
[
1
]
;
}
}
Assert
.
ok
(
!
!
profile
Found
profile
:
{
profile
}
)
;
let
dir
=
Cc
[
"
mozilla
.
org
/
file
/
local
;
1
"
]
.
createInstance
(
Ci
.
nsIFile
)
;
dir
.
initWithPath
(
profile
)
;
Assert
.
ok
(
!
dir
.
exists
(
)
Temporary
profile
directory
does
not
exist
:
{
profile
}
)
;
}
)
;
