const
{
updateAppInfo
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
AppInfo
.
jsm
"
)
;
updateAppInfo
(
{
name
:
"
XPCShell
"
ID
:
"
xpcshell
tests
.
mozilla
.
org
"
version
:
"
48
"
platformVersion
:
"
48
"
}
)
;
const
{
EnterprisePolicyTesting
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
EnterprisePolicyTesting
.
jsm
"
)
;
let
policies
=
Cc
[
"
mozilla
.
org
/
enterprisepolicies
;
1
"
]
.
getService
(
Ci
.
nsIObserver
)
;
policies
.
observe
(
null
"
policies
-
startup
"
null
)
;
add_task
(
async
function
test_backgroundtask_policies
(
)
{
let
url
=
"
https
:
/
/
www
.
example
.
com
/
"
;
await
EnterprisePolicyTesting
.
setupPolicyEngineWithJson
(
{
policies
:
{
AppUpdateURL
:
url
}
}
)
;
let
filePath
=
Services
.
prefs
.
getStringPref
(
"
browser
.
policies
.
alternatePath
"
)
;
let
exitCode
=
await
do_backgroundtask
(
"
policies
"
{
extraArgs
:
[
filePath
url
]
}
)
;
Assert
.
equal
(
0
exitCode
)
;
}
)
;
