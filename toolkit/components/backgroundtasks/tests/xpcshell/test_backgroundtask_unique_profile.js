add_task
(
async
function
test_backgroundtask_unique_profile
(
)
{
let
sentinel
=
Services
.
uuid
.
generateUUID
(
)
.
toString
(
)
;
sentinel
=
sentinel
.
substring
(
1
sentinel
.
length
-
1
)
;
let
count
=
3
;
let
stdoutLines
=
[
]
;
let
exitCode
=
await
do_backgroundtask
(
"
unique_profile
"
{
extraArgs
:
[
sentinel
count
.
toString
(
)
]
stdoutLines
}
)
;
Assert
.
equal
(
0
exitCode
)
;
let
infos
=
[
]
;
let
profiles
=
new
Set
(
)
;
for
(
let
line
of
stdoutLines
)
{
if
(
line
.
includes
(
sentinel
)
)
{
let
info
=
JSON
.
parse
(
line
.
split
(
sentinel
)
[
1
]
)
;
infos
.
push
(
info
)
;
profiles
.
add
(
info
[
1
]
)
;
}
}
Assert
.
equal
(
count
profiles
.
size
Found
{
count
}
distinct
profiles
:
{
JSON
.
stringify
(
Array
.
from
(
profiles
)
)
}
in
:
{
JSON
.
stringify
(
infos
)
}
)
;
}
)
;
