"
use
strict
"
;
const
{
BaseStudyAction
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
normandy
/
actions
/
BaseStudyAction
.
jsm
"
)
;
ChromeUtils
.
defineModuleGetter
(
this
"
ExperimentManager
"
"
resource
:
/
/
messaging
-
system
/
experiments
/
ExperimentManager
.
jsm
"
)
;
ChromeUtils
.
defineModuleGetter
(
this
"
ActionSchemas
"
"
resource
:
/
/
normandy
/
actions
/
schemas
/
index
.
js
"
)
;
const
EXPORTED_SYMBOLS
=
[
"
MessagingExperimentAction
"
]
;
class
MessagingExperimentAction
extends
BaseStudyAction
{
constructor
(
)
{
super
(
)
;
this
.
manager
=
ExperimentManager
;
}
get
schema
(
)
{
return
ActionSchemas
[
"
messaging
-
experiment
"
]
;
}
async
_run
(
recipe
)
{
if
(
recipe
.
arguments
)
{
await
this
.
manager
.
onRecipe
(
recipe
.
arguments
)
;
}
}
async
_finalize
(
)
{
this
.
manager
.
onFinalize
(
)
;
}
}
