#
include
"
mozilla
/
browser
/
NimbusFeatures
.
h
"
namespace
mozilla
{
void
NimbusFeatures
:
:
GetPrefName
(
const
nsACString
&
aFeatureId
const
nsACString
&
aVariable
nsACString
&
aPref
)
{
constexpr
auto
kSyncDataPrefBranch
=
"
nimbus
.
syncdatastore
.
"
_ns
;
aPref
.
Truncate
(
)
;
aPref
.
Append
(
kSyncDataPrefBranch
)
;
aPref
.
Append
(
aFeatureId
)
;
aPref
.
Append
(
"
.
"
)
;
aPref
.
Append
(
aVariable
)
;
}
bool
NimbusFeatures
:
:
GetBool
(
const
nsACString
&
aFeatureId
const
nsACString
&
aVariable
bool
aDefault
)
{
nsAutoCString
pref
;
GetPrefName
(
aFeatureId
aVariable
pref
)
;
return
Preferences
:
:
GetBool
(
pref
.
get
(
)
aDefault
)
;
}
int
NimbusFeatures
:
:
GetInt
(
const
nsACString
&
aFeatureId
const
nsACString
&
aVariable
int
aDefault
)
{
nsAutoCString
pref
;
GetPrefName
(
aFeatureId
aVariable
pref
)
;
return
Preferences
:
:
GetInt
(
pref
.
get
(
)
aDefault
)
;
}
nsresult
NimbusFeatures
:
:
OnUpdate
(
const
nsACString
&
aFeatureId
const
nsACString
&
aVariable
PrefChangedFunc
aUserCallback
void
*
aUserData
)
{
nsAutoCString
pref
;
GetPrefName
(
aFeatureId
aVariable
pref
)
;
return
Preferences
:
:
RegisterCallback
(
aUserCallback
pref
aUserData
)
;
}
nsresult
NimbusFeatures
:
:
OffUpdate
(
const
nsACString
&
aFeatureId
const
nsACString
&
aVariable
PrefChangedFunc
aUserCallback
void
*
aUserData
)
{
nsAutoCString
pref
;
GetPrefName
(
aFeatureId
aVariable
pref
)
;
return
Preferences
:
:
UnregisterCallback
(
aUserCallback
pref
aUserData
)
;
}
}
