#
include
"
gtest
/
gtest
.
h
"
#
include
"
mozilla
/
ArrayUtils
.
h
"
#
include
"
nsLocalFileCommon
.
h
"
#
include
"
ApplicationReputation
.
h
"
static
const
char
*
const
kTestFileExtensions
[
]
=
{
"
.
accda
"
"
.
accdb
"
"
.
accde
"
"
.
accdr
"
"
.
action
"
"
.
ad
"
"
.
ade
"
"
.
adp
"
"
.
air
"
"
.
apk
"
"
.
app
"
"
.
applescript
"
"
.
application
"
"
.
appref
-
ms
"
"
.
as
"
"
.
asp
"
"
.
asx
"
"
.
bas
"
"
.
bash
"
"
.
bat
"
"
.
bin
"
"
.
btapp
"
"
.
btinstall
"
"
.
btkey
"
"
.
btsearch
"
"
.
btskin
"
"
.
bz
"
"
.
bz2
"
"
.
bzip2
"
"
.
cab
"
"
.
caction
"
"
.
cdr
"
"
.
cer
"
"
.
cfg
"
"
.
chi
"
"
.
chm
"
"
.
class
"
"
.
cmd
"
"
.
com
"
"
.
command
"
"
.
configprofile
"
"
.
cpgz
"
"
.
cpi
"
"
.
cpl
"
"
.
crt
"
"
.
crx
"
"
.
csh
"
"
.
dart
"
"
.
dc42
"
"
.
deb
"
"
.
definition
"
"
.
der
"
"
.
desktop
"
"
.
dex
"
"
.
dht
"
"
.
dhtm
"
"
.
dhtml
"
"
.
diskcopy42
"
"
.
dll
"
"
.
dmg
"
"
.
dmgpart
"
"
.
doc
"
"
.
docb
"
"
.
docm
"
"
.
docx
"
"
.
dot
"
"
.
dotm
"
"
.
dott
"
"
.
dotx
"
"
.
drv
"
"
.
dvdr
"
"
.
dylib
"
"
.
efi
"
"
.
eml
"
"
.
exe
"
"
.
fileloc
"
"
.
fon
"
"
.
fxp
"
"
.
gadget
"
"
.
grp
"
"
.
gz
"
"
.
gzip
"
"
.
hfs
"
"
.
hlp
"
"
.
hqx
"
"
.
hta
"
"
.
htm
"
"
.
html
"
"
.
htt
"
"
.
img
"
"
.
imgpart
"
"
.
inf
"
"
.
ini
"
"
.
ins
"
"
.
internetconnect
"
"
.
iso
"
"
.
isp
"
"
.
jar
"
"
.
jnlp
"
"
.
js
"
"
.
jse
"
"
.
ksh
"
"
.
lnk
"
"
.
local
"
"
.
mad
"
"
.
maf
"
"
.
mag
"
"
.
mam
"
"
.
manifest
"
"
.
maq
"
"
.
mar
"
"
.
mas
"
"
.
mat
"
"
.
mau
"
"
.
mav
"
"
.
maw
"
"
.
mda
"
"
.
mdb
"
"
.
mde
"
"
.
mdt
"
"
.
mdw
"
"
.
mdz
"
"
.
mht
"
"
.
mhtml
"
"
.
mim
"
"
.
mmc
"
"
.
mobileconfig
"
"
.
mof
"
"
.
mpkg
"
"
.
msc
"
"
.
msg
"
"
.
msh
"
"
.
msh1
"
"
.
msh1xml
"
"
.
msh2
"
"
.
msh2xml
"
"
.
mshxml
"
"
.
msi
"
"
.
msp
"
"
.
mst
"
"
.
ndif
"
"
.
networkconnect
"
"
.
ocx
"
"
.
ops
"
"
.
osas
"
"
.
osax
"
"
.
oxt
"
"
.
partial
"
"
.
pax
"
"
.
pcd
"
"
.
pdf
"
"
.
pet
"
"
.
pif
"
"
.
pkg
"
"
.
pl
"
"
.
plg
"
"
.
pot
"
"
.
potm
"
"
.
potx
"
"
.
ppam
"
"
.
pps
"
"
.
ppsm
"
"
.
ppsx
"
"
.
ppt
"
"
.
pptm
"
"
.
pptx
"
"
.
prf
"
"
.
prg
"
"
.
ps1
"
"
.
ps1xml
"
"
.
ps2
"
"
.
ps2xml
"
"
.
psc1
"
"
.
psc2
"
"
.
pst
"
"
.
pup
"
"
.
py
"
"
.
pyc
"
"
.
pyd
"
"
.
pyo
"
"
.
pyw
"
"
.
rb
"
"
.
reg
"
"
.
rels
"
"
.
rpm
"
"
.
rtf
"
"
.
scf
"
"
.
scpt
"
"
.
scptd
"
"
.
scr
"
"
.
sct
"
"
.
search
-
ms
"
"
.
seplugin
"
"
.
service
"
"
.
settingcontent
-
ms
"
"
.
sh
"
"
.
shar
"
"
.
shb
"
"
.
shs
"
"
.
sht
"
"
.
shtm
"
"
.
shtml
"
"
.
sldm
"
"
.
sldx
"
"
.
slk
"
"
.
slp
"
"
.
smi
"
"
.
sparsebundle
"
"
.
sparseimage
"
"
.
spl
"
"
.
svg
"
"
.
swf
"
"
.
swm
"
"
.
sys
"
"
.
tar
"
"
.
taz
"
"
.
tbz
"
"
.
tbz2
"
"
.
tcsh
"
"
.
tgz
"
"
.
torrent
"
"
.
tpz
"
"
.
txz
"
"
.
tz
"
"
.
udf
"
"
.
udif
"
"
.
url
"
"
.
vb
"
"
.
vbe
"
"
.
vbs
"
"
.
vdx
"
"
.
vhd
"
"
.
vhdx
"
"
.
vmdk
"
"
.
vsd
"
"
.
vsdm
"
"
.
vsdx
"
"
.
vsmacros
"
"
.
vss
"
"
.
vssm
"
"
.
vssx
"
"
.
vst
"
"
.
vstm
"
"
.
vstx
"
"
.
vsw
"
"
.
vsx
"
"
.
vtx
"
"
.
webloc
"
"
.
website
"
"
.
wflow
"
"
.
wim
"
"
.
workflow
"
"
.
ws
"
"
.
wsc
"
"
.
wsf
"
"
.
wsh
"
"
.
xar
"
"
.
xbap
"
"
.
xht
"
"
.
xhtm
"
"
.
xhtml
"
"
.
xip
"
"
.
xla
"
"
.
xlam
"
"
.
xldm
"
"
.
xll
"
"
.
xlm
"
"
.
xls
"
"
.
xlsb
"
"
.
xlsm
"
"
.
xlsx
"
"
.
xlt
"
"
.
xltm
"
"
.
xltx
"
"
.
xlw
"
"
.
xml
"
"
.
xnk
"
"
.
xrm
-
ms
"
"
.
xsl
"
"
.
xz
"
"
.
z
"
#
ifdef
XP_WIN
"
.
zip
"
#
endif
"
.
zipx
"
}
;
#
define
CheckListSorted
(
_list
)
\
{
\
for
(
size_t
i
=
1
;
i
<
mozilla
:
:
ArrayLength
(
_list
)
;
+
+
i
)
{
\
nsDependentCString
str1
(
(
_list
)
[
i
-
1
]
)
;
\
nsDependentCString
str2
(
(
_list
)
[
i
]
)
;
\
EXPECT_LE
(
Compare
(
str1
str2
)
-
1
)
\
<
<
"
Expected
"
<
<
str1
.
get
(
)
<
<
"
to
be
sorted
after
"
\
<
<
str2
.
get
(
)
;
\
}
\
}
TEST
(
TestExecutableLists
ListsAreSorted
)
{
CheckListSorted
(
sExecutableExts
)
;
CheckListSorted
(
ApplicationReputationService
:
:
kBinaryFileExtensions
)
;
CheckListSorted
(
ApplicationReputationService
:
:
kNonBinaryExecutables
)
;
CheckListSorted
(
kTestFileExtensions
)
;
}
bool
_IsInList
(
const
char
*
ext
const
char
*
const
_list
[
]
const
size_t
len
)
{
nsDependentCString
extStr
(
ext
)
;
for
(
size_t
i
=
0
;
i
<
len
;
+
+
i
)
{
if
(
extStr
.
EqualsASCII
(
_list
[
i
]
)
)
{
return
true
;
}
}
return
false
;
}
#
define
IsInList
(
_ext
_list
)
\
_IsInList
(
_ext
_list
mozilla
:
:
ArrayLength
(
_list
)
)
TEST
(
TestExecutableLists
NonBinariesInExecutablesList
)
{
for
(
auto
nonBinary
:
ApplicationReputationService
:
:
kNonBinaryExecutables
)
{
EXPECT_TRUE
(
IsInList
(
nonBinary
sExecutableExts
)
)
<
<
"
Expected
"
<
<
nonBinary
<
<
"
to
be
part
of
sExecutableExts
list
"
;
}
}
TEST
(
TestExecutableLists
AllExtensionsInTestList
)
{
for
(
auto
ext
:
ApplicationReputationService
:
:
kBinaryFileExtensions
)
{
EXPECT_TRUE
(
IsInList
(
ext
kTestFileExtensions
)
)
<
<
"
Expected
binary
extension
"
<
<
ext
<
<
"
to
be
listed
in
the
test
extension
list
"
;
}
for
(
auto
ext
:
sExecutableExts
)
{
EXPECT_TRUE
(
IsInList
(
ext
kTestFileExtensions
)
)
<
<
"
Expected
executable
extension
"
<
<
ext
<
<
"
to
be
listed
in
the
test
extension
list
"
;
}
for
(
auto
ext
:
ApplicationReputationService
:
:
kNonBinaryExecutables
)
{
EXPECT_TRUE
(
IsInList
(
ext
kTestFileExtensions
)
)
<
<
"
Expected
non
-
binary
executable
extension
"
<
<
ext
<
<
"
to
be
listed
in
the
test
extension
list
"
;
}
}
TEST
(
TestExecutableLists
TestListExtensionsExistSomewhere
)
{
for
(
auto
ext
:
kTestFileExtensions
)
{
EXPECT_TRUE
(
IsInList
(
ext
ApplicationReputationService
:
:
kBinaryFileExtensions
)
!
=
IsInList
(
ext
sExecutableExts
)
)
<
<
"
Expected
test
extension
"
<
<
ext
<
<
"
to
be
in
exactly
one
of
the
other
lists
.
"
;
}
}
