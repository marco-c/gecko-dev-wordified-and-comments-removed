#
ifndef
LoginReputation_h__
#
define
LoginReputation_h__
#
include
"
mozilla
/
Logging
.
h
"
#
include
"
mozilla
/
MozPromise
.
h
"
#
include
"
nsILoginReputation
.
h
"
#
include
"
nsIObserver
.
h
"
#
include
"
nsISupportsImpl
.
h
"
class
LoginWhitelist
;
namespace
mozilla
{
typedef
uint32_t
VerdictType
;
typedef
MozPromise
<
VerdictType
nsresult
false
>
ReputationPromise
;
class
LoginReputationService
final
:
public
nsILoginReputationService
public
nsIObserver
{
public
:
NS_DECL_ISUPPORTS
NS_DECL_NSILOGINREPUTATIONSERVICE
NS_DECL_NSIOBSERVER
public
:
static
already_AddRefed
<
LoginReputationService
>
GetSingleton
(
)
;
static
nsCString
VerdictTypeToString
(
VerdictType
aVerdict
)
;
private
:
struct
QueryRequest
{
QueryRequest
(
nsILoginReputationQuery
*
aParam
nsILoginReputationQueryCallback
*
aCallback
)
:
mParam
(
aParam
)
mCallback
(
aCallback
)
{
}
nsCOMPtr
<
nsILoginReputationQuery
>
mParam
;
nsCOMPtr
<
nsILoginReputationQueryCallback
>
mCallback
;
}
;
static
LoginReputationService
*
gLoginReputationService
;
LoginReputationService
(
)
;
~
LoginReputationService
(
)
;
nsresult
Enable
(
)
;
nsresult
Disable
(
)
;
nsresult
QueryLoginWhitelist
(
QueryRequest
*
aRequest
)
;
nsresult
Finish
(
const
QueryRequest
*
aRequest
nsresult
aStatus
VerdictType
aVerdict
)
;
nsresult
Shutdown
(
)
;
RefPtr
<
LoginWhitelist
>
mLoginWhitelist
;
nsTArray
<
UniquePtr
<
QueryRequest
>
>
mQueryRequests
;
}
;
}
#
endif
