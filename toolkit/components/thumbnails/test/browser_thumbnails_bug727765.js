const
URL
=
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
toolkit
/
components
/
thumbnails
/
"
+
"
test
/
background_red_scroll
.
html
"
;
function
isRedThumbnailFuzz
(
r
g
b
expectedR
expectedB
expectedG
aFuzz
)
{
return
(
Math
.
abs
(
r
-
expectedR
)
<
=
aFuzz
&
&
Math
.
abs
(
g
-
expectedG
)
<
=
aFuzz
&
&
Math
.
abs
(
b
-
expectedB
)
<
=
aFuzz
)
;
}
add_setup
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
test
.
wait300msAfterTabSwitch
"
true
]
]
}
)
;
}
)
;
add_task
(
async
function
thumbnails_bg_bug727765
(
)
{
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
URL
}
async
(
)
=
>
{
await
captureAndCheckColor
(
255
0
0
"
we
have
a
red
thumbnail
"
)
;
await
whenFileExists
(
URL
)
;
let
data
=
await
retrieveImageDataForURL
(
URL
)
;
let
[
r
g
b
]
=
[
]
.
slice
.
call
(
data
-
4
)
;
let
fuzz
=
2
;
var
message
=
"
Expected
red
thumbnail
rgb
(
255
0
0
)
got
"
+
r
+
"
"
+
g
+
"
"
+
b
;
ok
(
isRedThumbnailFuzz
(
r
g
b
255
0
0
fuzz
)
message
)
;
}
)
;
}
)
;
