#
ifndef
GOOGLE_PROTOBUF_UTIL_CONVERTER_PROTOSTREAM_OBJECTWRITER_H__
#
define
GOOGLE_PROTOBUF_UTIL_CONVERTER_PROTOSTREAM_OBJECTWRITER_H__
#
include
<
deque
>
#
include
<
google
/
protobuf
/
stubs
/
hash
.
h
>
#
include
<
string
>
#
include
<
google
/
protobuf
/
stubs
/
common
.
h
>
#
include
<
google
/
protobuf
/
io
/
coded_stream
.
h
>
#
include
<
google
/
protobuf
/
io
/
zero_copy_stream_impl
.
h
>
#
include
<
google
/
protobuf
/
descriptor
.
h
>
#
include
<
google
/
protobuf
/
util
/
internal
/
type_info
.
h
>
#
include
<
google
/
protobuf
/
util
/
internal
/
datapiece
.
h
>
#
include
<
google
/
protobuf
/
util
/
internal
/
error_listener
.
h
>
#
include
<
google
/
protobuf
/
util
/
internal
/
proto_writer
.
h
>
#
include
<
google
/
protobuf
/
util
/
internal
/
structured_objectwriter
.
h
>
#
include
<
google
/
protobuf
/
util
/
type_resolver
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
bytestream
.
h
>
namespace
google
{
namespace
protobuf
{
namespace
io
{
class
CodedOutputStream
;
}
}
namespace
protobuf
{
class
Type
;
class
Field
;
}
namespace
protobuf
{
namespace
util
{
namespace
converter
{
class
ObjectLocationTracker
;
class
LIBPROTOBUF_EXPORT
ProtoStreamObjectWriter
:
public
ProtoWriter
{
public
:
struct
Options
{
bool
struct_integers_as_strings
;
bool
ignore_unknown_fields
;
bool
use_lower_camel_for_enums
;
Options
(
)
:
struct_integers_as_strings
(
false
)
ignore_unknown_fields
(
false
)
use_lower_camel_for_enums
(
false
)
{
}
static
const
Options
&
Defaults
(
)
{
static
Options
defaults
;
return
defaults
;
}
}
;
ProtoStreamObjectWriter
(
TypeResolver
*
type_resolver
const
google
:
:
protobuf
:
:
Type
&
type
strings
:
:
ByteSink
*
output
ErrorListener
*
listener
const
ProtoStreamObjectWriter
:
:
Options
&
options
=
ProtoStreamObjectWriter
:
:
Options
:
:
Defaults
(
)
)
;
virtual
~
ProtoStreamObjectWriter
(
)
;
virtual
ProtoStreamObjectWriter
*
StartObject
(
StringPiece
name
)
;
virtual
ProtoStreamObjectWriter
*
EndObject
(
)
;
virtual
ProtoStreamObjectWriter
*
StartList
(
StringPiece
name
)
;
virtual
ProtoStreamObjectWriter
*
EndList
(
)
;
virtual
ProtoStreamObjectWriter
*
RenderDataPiece
(
StringPiece
name
const
DataPiece
&
value
)
;
protected
:
typedef
util
:
:
Status
(
*
TypeRenderer
)
(
ProtoStreamObjectWriter
*
const
DataPiece
&
)
;
class
LIBPROTOBUF_EXPORT
AnyWriter
{
public
:
explicit
AnyWriter
(
ProtoStreamObjectWriter
*
parent
)
;
~
AnyWriter
(
)
;
void
StartObject
(
StringPiece
name
)
;
bool
EndObject
(
)
;
void
StartList
(
StringPiece
name
)
;
void
EndList
(
)
;
void
RenderDataPiece
(
StringPiece
name
const
DataPiece
&
value
)
;
private
:
class
LIBPROTOBUF_EXPORT
Event
{
public
:
enum
Type
{
START_OBJECT
=
0
END_OBJECT
=
1
START_LIST
=
2
END_LIST
=
3
RENDER_DATA_PIECE
=
4
}
;
explicit
Event
(
Type
type
)
:
type_
(
type
)
value_
(
DataPiece
:
:
NullData
(
)
)
{
}
explicit
Event
(
Type
type
StringPiece
name
)
:
type_
(
type
)
name_
(
name
.
ToString
(
)
)
value_
(
DataPiece
:
:
NullData
(
)
)
{
}
explicit
Event
(
StringPiece
name
const
DataPiece
&
value
)
:
type_
(
RENDER_DATA_PIECE
)
name_
(
name
.
ToString
(
)
)
value_
(
value
)
{
DeepCopy
(
)
;
}
Event
(
const
Event
&
other
)
:
type_
(
other
.
type_
)
name_
(
other
.
name_
)
value_
(
other
.
value_
)
{
DeepCopy
(
)
;
}
Event
&
operator
=
(
const
Event
&
other
)
{
type_
=
other
.
type_
;
name_
=
other
.
name_
;
value_
=
other
.
value_
;
DeepCopy
(
)
;
return
*
this
;
}
void
Replay
(
AnyWriter
*
writer
)
const
;
private
:
void
DeepCopy
(
)
;
Type
type_
;
string
name_
;
DataPiece
value_
;
string
value_storage_
;
}
;
void
StartAny
(
const
DataPiece
&
value
)
;
void
WriteAny
(
)
;
ProtoStreamObjectWriter
*
parent_
;
google
:
:
protobuf
:
:
scoped_ptr
<
ProtoStreamObjectWriter
>
ow_
;
string
type_url_
;
bool
invalid_
;
string
data_
;
strings
:
:
StringByteSink
output_
;
int
depth_
;
bool
is_well_known_type_
;
TypeRenderer
*
well_known_type_render_
;
std
:
:
vector
<
Event
>
uninterpreted_events_
;
}
;
class
LIBPROTOBUF_EXPORT
Item
:
public
BaseElement
{
public
:
enum
ItemType
{
MESSAGE
MAP
ANY
}
;
Item
(
ProtoStreamObjectWriter
*
enclosing
ItemType
item_type
bool
is_placeholder
bool
is_list
)
;
Item
(
Item
*
parent
ItemType
item_type
bool
is_placeholder
bool
is_list
)
;
virtual
~
Item
(
)
{
}
bool
IsMap
(
)
{
return
item_type_
=
=
MAP
;
}
bool
IsAny
(
)
{
return
item_type_
=
=
ANY
;
}
AnyWriter
*
any
(
)
const
{
return
any_
.
get
(
)
;
}
virtual
Item
*
parent
(
)
const
{
return
static_cast
<
Item
*
>
(
BaseElement
:
:
parent
(
)
)
;
}
bool
InsertMapKeyIfNotPresent
(
StringPiece
map_key
)
;
bool
is_placeholder
(
)
const
{
return
is_placeholder_
;
}
bool
is_list
(
)
const
{
return
is_list_
;
}
private
:
ProtoStreamObjectWriter
*
ow_
;
google
:
:
protobuf
:
:
scoped_ptr
<
AnyWriter
>
any_
;
ItemType
item_type_
;
google
:
:
protobuf
:
:
scoped_ptr
<
hash_set
<
string
>
>
map_keys_
;
bool
is_placeholder_
;
bool
is_list_
;
GOOGLE_DISALLOW_IMPLICIT_CONSTRUCTORS
(
Item
)
;
}
;
ProtoStreamObjectWriter
(
const
TypeInfo
*
typeinfo
const
google
:
:
protobuf
:
:
Type
&
type
strings
:
:
ByteSink
*
output
ErrorListener
*
listener
)
;
inline
bool
IsMap
(
const
google
:
:
protobuf
:
:
Field
&
field
)
;
inline
bool
IsAny
(
const
google
:
:
protobuf
:
:
Field
&
field
)
;
inline
bool
IsStruct
(
const
google
:
:
protobuf
:
:
Field
&
field
)
;
inline
bool
IsStructValue
(
const
google
:
:
protobuf
:
:
Field
&
field
)
;
inline
bool
IsStructListValue
(
const
google
:
:
protobuf
:
:
Field
&
field
)
;
static
util
:
:
Status
RenderStructValue
(
ProtoStreamObjectWriter
*
ow
const
DataPiece
&
value
)
;
static
util
:
:
Status
RenderTimestamp
(
ProtoStreamObjectWriter
*
ow
const
DataPiece
&
value
)
;
static
util
:
:
Status
RenderFieldMask
(
ProtoStreamObjectWriter
*
ow
const
DataPiece
&
value
)
;
static
util
:
:
Status
RenderDuration
(
ProtoStreamObjectWriter
*
ow
const
DataPiece
&
value
)
;
static
util
:
:
Status
RenderWrapperType
(
ProtoStreamObjectWriter
*
ow
const
DataPiece
&
value
)
;
static
void
InitRendererMap
(
)
;
static
void
DeleteRendererMap
(
)
;
static
TypeRenderer
*
FindTypeRenderer
(
const
string
&
type_url
)
;
bool
ValidMapKey
(
StringPiece
unnormalized_name
)
;
void
Push
(
StringPiece
name
Item
:
:
ItemType
item_type
bool
is_placeholder
bool
is_list
)
;
void
Pop
(
)
;
void
PopOneElement
(
)
;
private
:
static
hash_map
<
string
TypeRenderer
>
*
renderers_
;
const
google
:
:
protobuf
:
:
Type
&
master_type_
;
google
:
:
protobuf
:
:
scoped_ptr
<
Item
>
current_
;
const
ProtoStreamObjectWriter
:
:
Options
options_
;
GOOGLE_DISALLOW_IMPLICIT_CONSTRUCTORS
(
ProtoStreamObjectWriter
)
;
}
;
}
}
}
}
#
endif
