#
ifndef
GOOGLE_PROTOBUF_UTIL_CONVERTER_OBJECT_WRITER_H__
#
define
GOOGLE_PROTOBUF_UTIL_CONVERTER_OBJECT_WRITER_H__
#
include
<
google
/
protobuf
/
stubs
/
common
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
stringpiece
.
h
>
namespace
google
{
namespace
protobuf
{
namespace
util
{
namespace
converter
{
class
DataPiece
;
class
LIBPROTOBUF_EXPORT
ObjectWriter
{
public
:
virtual
~
ObjectWriter
(
)
{
}
virtual
ObjectWriter
*
StartObject
(
StringPiece
name
)
=
0
;
virtual
ObjectWriter
*
EndObject
(
)
=
0
;
virtual
ObjectWriter
*
StartList
(
StringPiece
name
)
=
0
;
virtual
ObjectWriter
*
EndList
(
)
=
0
;
virtual
ObjectWriter
*
RenderBool
(
StringPiece
name
bool
value
)
=
0
;
virtual
ObjectWriter
*
RenderInt32
(
StringPiece
name
int32
value
)
=
0
;
virtual
ObjectWriter
*
RenderUint32
(
StringPiece
name
uint32
value
)
=
0
;
virtual
ObjectWriter
*
RenderInt64
(
StringPiece
name
int64
value
)
=
0
;
virtual
ObjectWriter
*
RenderUint64
(
StringPiece
name
uint64
value
)
=
0
;
virtual
ObjectWriter
*
RenderDouble
(
StringPiece
name
double
value
)
=
0
;
virtual
ObjectWriter
*
RenderFloat
(
StringPiece
name
float
value
)
=
0
;
virtual
ObjectWriter
*
RenderString
(
StringPiece
name
StringPiece
value
)
=
0
;
virtual
ObjectWriter
*
RenderBytes
(
StringPiece
name
StringPiece
value
)
=
0
;
virtual
ObjectWriter
*
RenderNull
(
StringPiece
name
)
=
0
;
static
void
RenderDataPieceTo
(
const
DataPiece
&
data
StringPiece
name
ObjectWriter
*
ow
)
;
virtual
bool
done
(
)
{
return
false
;
}
void
set_use_strict_base64_decoding
(
bool
value
)
{
use_strict_base64_decoding_
=
value
;
}
bool
use_strict_base64_decoding
(
)
const
{
return
use_strict_base64_decoding_
;
}
virtual
void
empty_name_ok_for_next_key
(
)
{
}
protected
:
ObjectWriter
(
)
:
use_strict_base64_decoding_
(
true
)
{
}
private
:
bool
use_strict_base64_decoding_
;
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
ObjectWriter
)
;
}
;
}
}
}
}
#
endif
