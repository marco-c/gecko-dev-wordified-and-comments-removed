#
ifndef
GOOGLE_PROTOBUF_UTIL_CONVERTER_TYPE_INFO_H__
#
define
GOOGLE_PROTOBUF_UTIL_CONVERTER_TYPE_INFO_H__
#
include
<
google
/
protobuf
/
stubs
/
common
.
h
>
#
include
<
google
/
protobuf
/
type
.
pb
.
h
>
#
include
<
google
/
protobuf
/
util
/
type_resolver
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
strutil
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
status
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
statusor
.
h
>
#
include
<
google
/
protobuf
/
port_def
.
inc
>
namespace
google
{
namespace
protobuf
{
namespace
util
{
namespace
converter
{
class
PROTOBUF_EXPORT
TypeInfo
{
public
:
TypeInfo
(
)
{
}
virtual
~
TypeInfo
(
)
{
}
virtual
util
:
:
StatusOr
<
const
google
:
:
protobuf
:
:
Type
*
>
ResolveTypeUrl
(
StringPiece
type_url
)
const
=
0
;
virtual
const
google
:
:
protobuf
:
:
Type
*
GetTypeByTypeUrl
(
StringPiece
type_url
)
const
=
0
;
virtual
const
google
:
:
protobuf
:
:
Enum
*
GetEnumByTypeUrl
(
StringPiece
type_url
)
const
=
0
;
virtual
const
google
:
:
protobuf
:
:
Field
*
FindField
(
const
google
:
:
protobuf
:
:
Type
*
type
StringPiece
camel_case_name
)
const
=
0
;
static
TypeInfo
*
NewTypeInfo
(
TypeResolver
*
type_resolver
)
;
private
:
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
TypeInfo
)
;
}
;
}
}
}
}
#
include
<
google
/
protobuf
/
port_undef
.
inc
>
#
endif
