#
include
<
google
/
protobuf
/
io
/
strtod
.
h
>
#
include
<
cstdio
>
#
include
<
cstring
>
#
include
<
limits
>
#
include
<
string
>
#
include
<
google
/
protobuf
/
stubs
/
logging
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
common
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
strutil
.
h
>
namespace
google
{
namespace
protobuf
{
namespace
io
{
const
double
MAX_FLOAT_AS_DOUBLE_ROUNDED
=
3
.
4028235677973366e
+
38
;
float
SafeDoubleToFloat
(
double
value
)
{
if
(
value
>
std
:
:
numeric_limits
<
float
>
:
:
max
(
)
)
{
if
(
value
<
=
MAX_FLOAT_AS_DOUBLE_ROUNDED
)
{
return
std
:
:
numeric_limits
<
float
>
:
:
max
(
)
;
}
return
std
:
:
numeric_limits
<
float
>
:
:
infinity
(
)
;
}
else
if
(
value
<
-
std
:
:
numeric_limits
<
float
>
:
:
max
(
)
)
{
if
(
value
>
=
-
MAX_FLOAT_AS_DOUBLE_ROUNDED
)
{
return
-
std
:
:
numeric_limits
<
float
>
:
:
max
(
)
;
}
return
-
std
:
:
numeric_limits
<
float
>
:
:
infinity
(
)
;
}
else
{
return
static_cast
<
float
>
(
value
)
;
}
}
double
NoLocaleStrtod
(
const
char
*
str
char
*
*
endptr
)
{
return
google
:
:
protobuf
:
:
internal
:
:
NoLocaleStrtod
(
str
endptr
)
;
}
}
}
}
