#
ifndef
GOOGLE_PROTOBUF_GENERATED_MESSAGE_UTIL_H__
#
define
GOOGLE_PROTOBUF_GENERATED_MESSAGE_UTIL_H__
#
include
<
assert
.
h
>
#
include
<
atomic
>
#
include
<
climits
>
#
include
<
string
>
#
include
<
vector
>
#
include
<
google
/
protobuf
/
stubs
/
common
.
h
>
#
include
<
google
/
protobuf
/
any
.
h
>
#
include
<
google
/
protobuf
/
has_bits
.
h
>
#
include
<
google
/
protobuf
/
implicit_weak_message
.
h
>
#
include
<
google
/
protobuf
/
message_lite
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
once
.
h
>
#
include
<
google
/
protobuf
/
port
.
h
>
#
include
<
google
/
protobuf
/
repeated_field
.
h
>
#
include
<
google
/
protobuf
/
wire_format_lite
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
strutil
.
h
>
#
include
<
google
/
protobuf
/
stubs
/
casts
.
h
>
#
include
<
google
/
protobuf
/
port_def
.
inc
>
#
ifdef
SWIG
#
error
"
You
cannot
SWIG
proto
headers
"
#
endif
namespace
google
{
namespace
protobuf
{
class
Arena
;
namespace
io
{
class
CodedInputStream
;
}
namespace
internal
{
template
<
typename
To
typename
From
>
inline
To
DownCast
(
From
*
f
)
{
return
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
down_cast
<
To
>
(
f
)
;
}
template
<
typename
To
typename
From
>
inline
To
DownCast
(
From
&
f
)
{
return
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
down_cast
<
To
>
(
f
)
;
}
PROTOBUF_EXPORT
void
InitProtobufDefaults
(
)
;
PROTOBUF_EXPORT
inline
const
std
:
:
string
&
GetEmptyString
(
)
{
InitProtobufDefaults
(
)
;
return
GetEmptyStringAlreadyInited
(
)
;
}
template
<
typename
Msg
>
bool
AllAreInitialized
(
const
RepeatedPtrField
<
Msg
>
&
t
)
{
for
(
int
i
=
t
.
size
(
)
;
-
-
i
>
=
0
;
)
{
if
(
!
t
.
Get
(
i
)
.
IsInitialized
(
)
)
return
false
;
}
return
true
;
}
template
<
class
T
>
bool
AllAreInitializedWeak
(
const
RepeatedPtrField
<
T
>
&
t
)
{
for
(
int
i
=
t
.
size
(
)
;
-
-
i
>
=
0
;
)
{
if
(
!
reinterpret_cast
<
const
RepeatedPtrFieldBase
&
>
(
t
)
.
Get
<
ImplicitWeakTypeHandler
<
T
>
>
(
i
)
.
IsInitialized
(
)
)
{
return
false
;
}
}
return
true
;
}
inline
bool
IsPresent
(
const
void
*
base
uint32
hasbit
)
{
const
uint32
*
has_bits_array
=
static_cast
<
const
uint32
*
>
(
base
)
;
return
(
has_bits_array
[
hasbit
/
32
]
&
(
1u
<
<
(
hasbit
&
31
)
)
)
!
=
0
;
}
inline
bool
IsOneofPresent
(
const
void
*
base
uint32
offset
uint32
tag
)
{
const
uint32
*
oneof
=
reinterpret_cast
<
const
uint32
*
>
(
static_cast
<
const
uint8
*
>
(
base
)
+
offset
)
;
return
*
oneof
=
=
tag
>
>
3
;
}
typedef
void
(
*
SpecialSerializer
)
(
const
uint8
*
base
uint32
offset
uint32
tag
uint32
has_offset
io
:
:
CodedOutputStream
*
output
)
;
PROTOBUF_EXPORT
void
ExtensionSerializer
(
const
uint8
*
base
uint32
offset
uint32
tag
uint32
has_offset
io
:
:
CodedOutputStream
*
output
)
;
PROTOBUF_EXPORT
void
UnknownFieldSerializerLite
(
const
uint8
*
base
uint32
offset
uint32
tag
uint32
has_offset
io
:
:
CodedOutputStream
*
output
)
;
PROTOBUF_EXPORT
MessageLite
*
DuplicateIfNonNullInternal
(
MessageLite
*
message
)
;
PROTOBUF_EXPORT
MessageLite
*
GetOwnedMessageInternal
(
Arena
*
message_arena
MessageLite
*
submessage
Arena
*
submessage_arena
)
;
PROTOBUF_EXPORT
void
GenericSwap
(
MessageLite
*
m1
MessageLite
*
m2
)
;
template
<
typename
T
>
T
*
DuplicateIfNonNull
(
T
*
message
)
{
return
reinterpret_cast
<
T
*
>
(
DuplicateIfNonNullInternal
(
reinterpret_cast
<
MessageLite
*
>
(
message
)
)
)
;
}
template
<
typename
T
>
T
*
GetOwnedMessage
(
Arena
*
message_arena
T
*
submessage
Arena
*
submessage_arena
)
{
return
reinterpret_cast
<
T
*
>
(
GetOwnedMessageInternal
(
message_arena
reinterpret_cast
<
MessageLite
*
>
(
submessage
)
submessage_arena
)
)
;
}
class
PROTOBUF_EXPORT
CachedSize
{
public
:
int
Get
(
)
const
{
return
size_
.
load
(
std
:
:
memory_order_relaxed
)
;
}
void
Set
(
int
size
)
{
size_
.
store
(
size
std
:
:
memory_order_relaxed
)
;
}
private
:
std
:
:
atomic
<
int
>
size_
{
0
}
;
}
;
struct
PROTOBUF_EXPORT
SCCInfoBase
{
enum
{
kInitialized
=
0
kRunning
=
1
kUninitialized
=
-
1
}
;
#
if
defined
(
_MSC_VER
)
&
&
!
defined
(
__clang__
)
union
{
int
visit_status_to_make_linker_init
;
std
:
:
atomic
<
int
>
visit_status
;
}
;
#
else
std
:
:
atomic
<
int
>
visit_status
;
#
endif
int
num_deps
;
int
num_implicit_weak_deps
;
void
(
*
init_func
)
(
)
;
}
;
#
ifdef
__GNUC__
#
define
PROTOBUF_ARRAY_SIZE
(
n
)
(
n
)
#
else
#
define
PROTOBUF_ARRAY_SIZE
(
n
)
(
(
n
)
?
(
n
)
:
1
)
#
endif
template
<
int
N
>
struct
SCCInfo
{
SCCInfoBase
base
;
void
*
deps
[
PROTOBUF_ARRAY_SIZE
(
N
)
]
;
}
;
#
undef
PROTOBUF_ARRAY_SIZE
PROTOBUF_EXPORT
void
InitSCCImpl
(
SCCInfoBase
*
scc
)
;
inline
void
InitSCC
(
SCCInfoBase
*
scc
)
{
auto
status
=
scc
-
>
visit_status
.
load
(
std
:
:
memory_order_acquire
)
;
if
(
PROTOBUF_PREDICT_FALSE
(
status
!
=
SCCInfoBase
:
:
kInitialized
)
)
InitSCCImpl
(
scc
)
;
}
PROTOBUF_EXPORT
void
DestroyMessage
(
const
void
*
message
)
;
PROTOBUF_EXPORT
void
DestroyString
(
const
void
*
s
)
;
inline
void
OnShutdownDestroyMessage
(
const
void
*
ptr
)
{
OnShutdownRun
(
DestroyMessage
ptr
)
;
}
inline
void
OnShutdownDestroyString
(
const
std
:
:
string
*
ptr
)
{
OnShutdownRun
(
DestroyString
ptr
)
;
}
}
}
}
#
include
<
google
/
protobuf
/
port_undef
.
inc
>
#
endif
