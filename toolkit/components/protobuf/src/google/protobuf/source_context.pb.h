#
ifndef
GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fsource_5fcontext_2eproto
#
define
GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fsource_5fcontext_2eproto
#
include
<
limits
>
#
include
<
string
>
#
include
<
google
/
protobuf
/
port_def
.
inc
>
#
if
PROTOBUF_VERSION
<
3021000
#
error
This
file
was
generated
by
a
newer
version
of
protoc
which
is
#
error
incompatible
with
your
Protocol
Buffer
headers
.
Please
update
#
error
your
headers
.
#
endif
#
if
3021002
<
PROTOBUF_MIN_PROTOC_VERSION
#
error
This
file
was
generated
by
an
older
version
of
protoc
which
is
#
error
incompatible
with
your
Protocol
Buffer
headers
.
Please
#
error
regenerate
this
file
with
a
newer
version
of
protoc
.
#
endif
#
include
<
google
/
protobuf
/
port_undef
.
inc
>
#
include
<
google
/
protobuf
/
io
/
coded_stream
.
h
>
#
include
<
google
/
protobuf
/
arena
.
h
>
#
include
<
google
/
protobuf
/
arenastring
.
h
>
#
include
<
google
/
protobuf
/
generated_message_util
.
h
>
#
include
<
google
/
protobuf
/
metadata_lite
.
h
>
#
include
<
google
/
protobuf
/
generated_message_reflection
.
h
>
#
include
<
google
/
protobuf
/
message
.
h
>
#
include
<
google
/
protobuf
/
repeated_field
.
h
>
#
include
<
google
/
protobuf
/
extension_set
.
h
>
#
include
<
google
/
protobuf
/
unknown_field_set
.
h
>
#
include
<
google
/
protobuf
/
port_def
.
inc
>
#
define
PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fsource_5fcontext_2eproto
PROTOBUF_EXPORT
PROTOBUF_NAMESPACE_OPEN
namespace
internal
{
class
AnyMetadata
;
}
PROTOBUF_NAMESPACE_CLOSE
struct
PROTOBUF_EXPORT
TableStruct_google_2fprotobuf_2fsource_5fcontext_2eproto
{
static
const
uint32_t
offsets
[
]
;
}
;
PROTOBUF_EXPORT
extern
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
DescriptorTable
descriptor_table_google_2fprotobuf_2fsource_5fcontext_2eproto
;
PROTOBUF_NAMESPACE_OPEN
class
SourceContext
;
struct
SourceContextDefaultTypeInternal
;
PROTOBUF_EXPORT
extern
SourceContextDefaultTypeInternal
_SourceContext_default_instance_
;
PROTOBUF_NAMESPACE_CLOSE
PROTOBUF_NAMESPACE_OPEN
template
<
>
PROTOBUF_EXPORT
:
:
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
Arena
:
:
CreateMaybeMessage
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
>
(
Arena
*
)
;
PROTOBUF_NAMESPACE_CLOSE
PROTOBUF_NAMESPACE_OPEN
class
PROTOBUF_EXPORT
SourceContext
final
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
{
public
:
inline
SourceContext
(
)
:
SourceContext
(
nullptr
)
{
}
~
SourceContext
(
)
override
;
explicit
PROTOBUF_CONSTEXPR
SourceContext
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ConstantInitialized
)
;
SourceContext
(
const
SourceContext
&
from
)
;
SourceContext
(
SourceContext
&
&
from
)
noexcept
:
SourceContext
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
SourceContext
&
operator
=
(
const
SourceContext
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
SourceContext
&
operator
=
(
SourceContext
&
&
from
)
noexcept
{
if
(
this
=
=
&
from
)
return
*
this
;
if
(
GetOwningArena
(
)
=
=
from
.
GetOwningArena
(
)
#
ifdef
PROTOBUF_FORCE_COPY_IN_MOVE
&
&
GetOwningArena
(
)
!
=
nullptr
#
endif
)
{
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Descriptor
*
descriptor
(
)
{
return
GetDescriptor
(
)
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Descriptor
*
GetDescriptor
(
)
{
return
default_instance
(
)
.
GetMetadata
(
)
.
descriptor
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Reflection
*
GetReflection
(
)
{
return
default_instance
(
)
.
GetMetadata
(
)
.
reflection
;
}
static
const
SourceContext
&
default_instance
(
)
{
return
*
internal_default_instance
(
)
;
}
static
inline
const
SourceContext
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
SourceContext
*
>
(
&
_SourceContext_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
0
;
friend
void
swap
(
SourceContext
&
a
SourceContext
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
SourceContext
*
other
)
{
if
(
other
=
=
this
)
return
;
#
ifdef
PROTOBUF_FORCE_COPY_IN_SWAP
if
(
GetOwningArena
(
)
!
=
nullptr
&
&
GetOwningArena
(
)
=
=
other
-
>
GetOwningArena
(
)
)
{
#
else
if
(
GetOwningArena
(
)
=
=
other
-
>
GetOwningArena
(
)
)
{
#
endif
InternalSwap
(
other
)
;
}
else
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GenericSwap
(
this
other
)
;
}
}
void
UnsafeArenaSwap
(
SourceContext
*
other
)
{
if
(
other
=
=
this
)
return
;
GOOGLE_DCHECK
(
GetOwningArena
(
)
=
=
other
-
>
GetOwningArena
(
)
)
;
InternalSwap
(
other
)
;
}
SourceContext
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
=
nullptr
)
const
final
{
return
CreateMaybeMessage
<
SourceContext
>
(
arena
)
;
}
using
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
:
:
CopyFrom
;
void
CopyFrom
(
const
SourceContext
&
from
)
;
using
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
:
:
MergeFrom
;
void
MergeFrom
(
const
SourceContext
&
from
)
{
SourceContext
:
:
MergeImpl
(
*
this
from
)
;
}
private
:
static
void
MergeImpl
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
&
to_msg
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
&
from_msg
)
;
public
:
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
uint8_t
*
_InternalSerialize
(
uint8_t
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
int
GetCachedSize
(
)
const
final
{
return
_impl_
.
_cached_size_
.
Get
(
)
;
}
private
:
void
SharedCtor
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
bool
is_message_owned
)
;
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
final
;
void
InternalSwap
(
SourceContext
*
other
)
;
private
:
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
google
.
protobuf
.
SourceContext
"
;
}
protected
:
explicit
SourceContext
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
bool
is_message_owned
=
false
)
;
public
:
static
const
ClassData
_class_data_
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
:
:
ClassData
*
GetClassData
(
)
const
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
Metadata
GetMetadata
(
)
const
final
;
enum
:
int
{
kFileNameFieldNumber
=
1
}
;
void
clear_file_name
(
)
;
const
std
:
:
string
&
file_name
(
)
const
;
template
<
typename
ArgT0
=
const
std
:
:
string
&
typename
.
.
.
ArgT
>
void
set_file_name
(
ArgT0
&
&
arg0
ArgT
.
.
.
args
)
;
std
:
:
string
*
mutable_file_name
(
)
;
PROTOBUF_NODISCARD
std
:
:
string
*
release_file_name
(
)
;
void
set_allocated_file_name
(
std
:
:
string
*
file_name
)
;
private
:
const
std
:
:
string
&
_internal_file_name
(
)
const
;
inline
PROTOBUF_ALWAYS_INLINE
void
_internal_set_file_name
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_file_name
(
)
;
public
:
private
:
class
_Internal
;
template
<
typename
T
>
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
:
:
InternalHelper
;
typedef
void
InternalArenaConstructable_
;
typedef
void
DestructorSkippable_
;
struct
Impl_
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
file_name_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
}
;
union
{
Impl_
_impl_
;
}
;
friend
struct
:
:
TableStruct_google_2fprotobuf_2fsource_5fcontext_2eproto
;
}
;
#
ifdef
__GNUC__
#
pragma
GCC
diagnostic
push
#
pragma
GCC
diagnostic
ignored
"
-
Wstrict
-
aliasing
"
#
endif
inline
void
SourceContext
:
:
clear_file_name
(
)
{
_impl_
.
file_name_
.
ClearToEmpty
(
)
;
}
inline
const
std
:
:
string
&
SourceContext
:
:
file_name
(
)
const
{
return
_internal_file_name
(
)
;
}
template
<
typename
ArgT0
typename
.
.
.
ArgT
>
inline
PROTOBUF_ALWAYS_INLINE
void
SourceContext
:
:
set_file_name
(
ArgT0
&
&
arg0
ArgT
.
.
.
args
)
{
_impl_
.
file_name_
.
Set
(
static_cast
<
ArgT0
&
&
>
(
arg0
)
args
.
.
.
GetArenaForAllocation
(
)
)
;
}
inline
std
:
:
string
*
SourceContext
:
:
mutable_file_name
(
)
{
std
:
:
string
*
_s
=
_internal_mutable_file_name
(
)
;
return
_s
;
}
inline
const
std
:
:
string
&
SourceContext
:
:
_internal_file_name
(
)
const
{
return
_impl_
.
file_name_
.
Get
(
)
;
}
inline
void
SourceContext
:
:
_internal_set_file_name
(
const
std
:
:
string
&
value
)
{
_impl_
.
file_name_
.
Set
(
value
GetArenaForAllocation
(
)
)
;
}
inline
std
:
:
string
*
SourceContext
:
:
_internal_mutable_file_name
(
)
{
return
_impl_
.
file_name_
.
Mutable
(
GetArenaForAllocation
(
)
)
;
}
inline
std
:
:
string
*
SourceContext
:
:
release_file_name
(
)
{
return
_impl_
.
file_name_
.
Release
(
)
;
}
inline
void
SourceContext
:
:
set_allocated_file_name
(
std
:
:
string
*
file_name
)
{
if
(
file_name
!
=
nullptr
)
{
}
else
{
}
_impl_
.
file_name_
.
SetAllocated
(
file_name
GetArenaForAllocation
(
)
)
;
#
ifdef
PROTOBUF_FORCE_COPY_DEFAULT_STRING
if
(
_impl_
.
file_name_
.
IsDefault
(
)
)
{
_impl_
.
file_name_
.
Set
(
"
"
GetArenaForAllocation
(
)
)
;
}
#
endif
}
#
ifdef
__GNUC__
#
pragma
GCC
diagnostic
pop
#
endif
PROTOBUF_NAMESPACE_CLOSE
#
include
<
google
/
protobuf
/
port_undef
.
inc
>
#
endif
