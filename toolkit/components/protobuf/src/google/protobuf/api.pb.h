#
ifndef
GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fapi_2eproto
#
define
GOOGLE_PROTOBUF_INCLUDED_google_2fprotobuf_2fapi_2eproto
#
include
<
limits
>
#
include
<
string
>
#
include
<
google
/
protobuf
/
port_def
.
inc
>
#
if
PROTOBUF_VERSION
<
3011000
#
error
This
file
was
generated
by
a
newer
version
of
protoc
which
is
#
error
incompatible
with
your
Protocol
Buffer
headers
.
Please
update
#
error
your
headers
.
#
endif
#
if
3011004
<
PROTOBUF_MIN_PROTOC_VERSION
#
error
This
file
was
generated
by
an
older
version
of
protoc
which
is
#
error
incompatible
with
your
Protocol
Buffer
headers
.
Please
#
error
regenerate
this
file
with
a
newer
version
of
protoc
.
#
endif
#
include
<
google
/
protobuf
/
port_undef
.
inc
>
#
include
<
google
/
protobuf
/
io
/
coded_stream
.
h
>
#
include
<
google
/
protobuf
/
arena
.
h
>
#
include
<
google
/
protobuf
/
arenastring
.
h
>
#
include
<
google
/
protobuf
/
generated_message_table_driven
.
h
>
#
include
<
google
/
protobuf
/
generated_message_util
.
h
>
#
include
<
google
/
protobuf
/
inlined_string_field
.
h
>
#
include
<
google
/
protobuf
/
metadata
.
h
>
#
include
<
google
/
protobuf
/
generated_message_reflection
.
h
>
#
include
<
google
/
protobuf
/
message
.
h
>
#
include
<
google
/
protobuf
/
repeated_field
.
h
>
#
include
<
google
/
protobuf
/
extension_set
.
h
>
#
include
<
google
/
protobuf
/
unknown_field_set
.
h
>
#
include
<
google
/
protobuf
/
source_context
.
pb
.
h
>
#
include
<
google
/
protobuf
/
type
.
pb
.
h
>
#
include
<
google
/
protobuf
/
port_def
.
inc
>
#
define
PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fapi_2eproto
PROTOBUF_EXPORT
PROTOBUF_NAMESPACE_OPEN
namespace
internal
{
class
AnyMetadata
;
}
PROTOBUF_NAMESPACE_CLOSE
struct
PROTOBUF_EXPORT
TableStruct_google_2fprotobuf_2fapi_2eproto
{
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseTableField
entries
[
]
PROTOBUF_SECTION_VARIABLE
(
protodesc_cold
)
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AuxillaryParseTableField
aux
[
]
PROTOBUF_SECTION_VARIABLE
(
protodesc_cold
)
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseTable
schema
[
3
]
PROTOBUF_SECTION_VARIABLE
(
protodesc_cold
)
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
FieldMetadata
field_metadata
[
]
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
SerializationTable
serialization_table
[
]
;
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint32
offsets
[
]
;
}
;
extern
PROTOBUF_EXPORT
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
DescriptorTable
descriptor_table_google_2fprotobuf_2fapi_2eproto
;
PROTOBUF_NAMESPACE_OPEN
class
Api
;
class
ApiDefaultTypeInternal
;
PROTOBUF_EXPORT
extern
ApiDefaultTypeInternal
_Api_default_instance_
;
class
Method
;
class
MethodDefaultTypeInternal
;
PROTOBUF_EXPORT
extern
MethodDefaultTypeInternal
_Method_default_instance_
;
class
Mixin
;
class
MixinDefaultTypeInternal
;
PROTOBUF_EXPORT
extern
MixinDefaultTypeInternal
_Mixin_default_instance_
;
PROTOBUF_NAMESPACE_CLOSE
PROTOBUF_NAMESPACE_OPEN
template
<
>
PROTOBUF_EXPORT
PROTOBUF_NAMESPACE_ID
:
:
Api
*
Arena
:
:
CreateMaybeMessage
<
PROTOBUF_NAMESPACE_ID
:
:
Api
>
(
Arena
*
)
;
template
<
>
PROTOBUF_EXPORT
PROTOBUF_NAMESPACE_ID
:
:
Method
*
Arena
:
:
CreateMaybeMessage
<
PROTOBUF_NAMESPACE_ID
:
:
Method
>
(
Arena
*
)
;
template
<
>
PROTOBUF_EXPORT
PROTOBUF_NAMESPACE_ID
:
:
Mixin
*
Arena
:
:
CreateMaybeMessage
<
PROTOBUF_NAMESPACE_ID
:
:
Mixin
>
(
Arena
*
)
;
PROTOBUF_NAMESPACE_CLOSE
PROTOBUF_NAMESPACE_OPEN
class
PROTOBUF_EXPORT
Api
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
{
public
:
Api
(
)
;
virtual
~
Api
(
)
;
Api
(
const
Api
&
from
)
;
Api
(
Api
&
&
from
)
noexcept
:
Api
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
Api
&
operator
=
(
const
Api
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
Api
&
operator
=
(
Api
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Descriptor
*
descriptor
(
)
{
return
GetDescriptor
(
)
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Descriptor
*
GetDescriptor
(
)
{
return
GetMetadataStatic
(
)
.
descriptor
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Reflection
*
GetReflection
(
)
{
return
GetMetadataStatic
(
)
.
reflection
;
}
static
const
Api
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
Api
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
Api
*
>
(
&
_Api_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
0
;
friend
void
swap
(
Api
&
a
Api
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
Api
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
Api
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
Api
>
(
nullptr
)
;
}
Api
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
Api
>
(
arena
)
;
}
void
CopyFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
&
from
)
final
;
void
MergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
&
from
)
final
;
void
CopyFrom
(
const
Api
&
from
)
;
void
MergeFrom
(
const
Api
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
final
;
void
InternalSwap
(
Api
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
google
.
protobuf
.
Api
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
Metadata
GetMetadata
(
)
const
final
;
private
:
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
Metadata
GetMetadataStatic
(
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AssignDescriptors
(
&
:
:
descriptor_table_google_2fprotobuf_2fapi_2eproto
)
;
return
:
:
descriptor_table_google_2fprotobuf_2fapi_2eproto
.
file_level_metadata
[
kIndexInFileMessages
]
;
}
public
:
enum
:
int
{
kMethodsFieldNumber
=
2
kOptionsFieldNumber
=
3
kMixinsFieldNumber
=
6
kNameFieldNumber
=
1
kVersionFieldNumber
=
4
kSourceContextFieldNumber
=
5
kSyntaxFieldNumber
=
7
}
;
int
methods_size
(
)
const
;
private
:
int
_internal_methods_size
(
)
const
;
public
:
void
clear_methods
(
)
;
PROTOBUF_NAMESPACE_ID
:
:
Method
*
mutable_methods
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Method
>
*
mutable_methods
(
)
;
private
:
const
PROTOBUF_NAMESPACE_ID
:
:
Method
&
_internal_methods
(
int
index
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
Method
*
_internal_add_methods
(
)
;
public
:
const
PROTOBUF_NAMESPACE_ID
:
:
Method
&
methods
(
int
index
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
Method
*
add_methods
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Method
>
&
methods
(
)
const
;
int
options_size
(
)
const
;
private
:
int
_internal_options_size
(
)
const
;
public
:
void
clear_options
(
)
;
PROTOBUF_NAMESPACE_ID
:
:
Option
*
mutable_options
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
*
mutable_options
(
)
;
private
:
const
PROTOBUF_NAMESPACE_ID
:
:
Option
&
_internal_options
(
int
index
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
Option
*
_internal_add_options
(
)
;
public
:
const
PROTOBUF_NAMESPACE_ID
:
:
Option
&
options
(
int
index
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
Option
*
add_options
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
&
options
(
)
const
;
int
mixins_size
(
)
const
;
private
:
int
_internal_mixins_size
(
)
const
;
public
:
void
clear_mixins
(
)
;
PROTOBUF_NAMESPACE_ID
:
:
Mixin
*
mutable_mixins
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Mixin
>
*
mutable_mixins
(
)
;
private
:
const
PROTOBUF_NAMESPACE_ID
:
:
Mixin
&
_internal_mixins
(
int
index
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
Mixin
*
_internal_add_mixins
(
)
;
public
:
const
PROTOBUF_NAMESPACE_ID
:
:
Mixin
&
mixins
(
int
index
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
Mixin
*
add_mixins
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Mixin
>
&
mixins
(
)
const
;
void
clear_name
(
)
;
const
std
:
:
string
&
name
(
)
const
;
void
set_name
(
const
std
:
:
string
&
value
)
;
void
set_name
(
std
:
:
string
&
&
value
)
;
void
set_name
(
const
char
*
value
)
;
void
set_name
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_name
(
)
;
std
:
:
string
*
release_name
(
)
;
void
set_allocated_name
(
std
:
:
string
*
name
)
;
private
:
const
std
:
:
string
&
_internal_name
(
)
const
;
void
_internal_set_name
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_name
(
)
;
public
:
void
clear_version
(
)
;
const
std
:
:
string
&
version
(
)
const
;
void
set_version
(
const
std
:
:
string
&
value
)
;
void
set_version
(
std
:
:
string
&
&
value
)
;
void
set_version
(
const
char
*
value
)
;
void
set_version
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_version
(
)
;
std
:
:
string
*
release_version
(
)
;
void
set_allocated_version
(
std
:
:
string
*
version
)
;
private
:
const
std
:
:
string
&
_internal_version
(
)
const
;
void
_internal_set_version
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_version
(
)
;
public
:
bool
has_source_context
(
)
const
;
private
:
bool
_internal_has_source_context
(
)
const
;
public
:
void
clear_source_context
(
)
;
const
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
&
source_context
(
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
release_source_context
(
)
;
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
mutable_source_context
(
)
;
void
set_allocated_source_context
(
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
source_context
)
;
private
:
const
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
&
_internal_source_context
(
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
_internal_mutable_source_context
(
)
;
public
:
void
clear_syntax
(
)
;
PROTOBUF_NAMESPACE_ID
:
:
Syntax
syntax
(
)
const
;
void
set_syntax
(
PROTOBUF_NAMESPACE_ID
:
:
Syntax
value
)
;
private
:
PROTOBUF_NAMESPACE_ID
:
:
Syntax
_internal_syntax
(
)
const
;
void
_internal_set_syntax
(
PROTOBUF_NAMESPACE_ID
:
:
Syntax
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArena
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Method
>
methods_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
options_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Mixin
>
mixins_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
name_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
version_
;
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
source_context_
;
int
syntax_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
friend
struct
:
:
TableStruct_google_2fprotobuf_2fapi_2eproto
;
}
;
class
PROTOBUF_EXPORT
Method
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
{
public
:
Method
(
)
;
virtual
~
Method
(
)
;
Method
(
const
Method
&
from
)
;
Method
(
Method
&
&
from
)
noexcept
:
Method
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
Method
&
operator
=
(
const
Method
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
Method
&
operator
=
(
Method
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Descriptor
*
descriptor
(
)
{
return
GetDescriptor
(
)
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Descriptor
*
GetDescriptor
(
)
{
return
GetMetadataStatic
(
)
.
descriptor
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Reflection
*
GetReflection
(
)
{
return
GetMetadataStatic
(
)
.
reflection
;
}
static
const
Method
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
Method
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
Method
*
>
(
&
_Method_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
1
;
friend
void
swap
(
Method
&
a
Method
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
Method
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
Method
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
Method
>
(
nullptr
)
;
}
Method
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
Method
>
(
arena
)
;
}
void
CopyFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
&
from
)
final
;
void
MergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
&
from
)
final
;
void
CopyFrom
(
const
Method
&
from
)
;
void
MergeFrom
(
const
Method
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
final
;
void
InternalSwap
(
Method
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
google
.
protobuf
.
Method
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
Metadata
GetMetadata
(
)
const
final
;
private
:
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
Metadata
GetMetadataStatic
(
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AssignDescriptors
(
&
:
:
descriptor_table_google_2fprotobuf_2fapi_2eproto
)
;
return
:
:
descriptor_table_google_2fprotobuf_2fapi_2eproto
.
file_level_metadata
[
kIndexInFileMessages
]
;
}
public
:
enum
:
int
{
kOptionsFieldNumber
=
6
kNameFieldNumber
=
1
kRequestTypeUrlFieldNumber
=
2
kResponseTypeUrlFieldNumber
=
4
kRequestStreamingFieldNumber
=
3
kResponseStreamingFieldNumber
=
5
kSyntaxFieldNumber
=
7
}
;
int
options_size
(
)
const
;
private
:
int
_internal_options_size
(
)
const
;
public
:
void
clear_options
(
)
;
PROTOBUF_NAMESPACE_ID
:
:
Option
*
mutable_options
(
int
index
)
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
*
mutable_options
(
)
;
private
:
const
PROTOBUF_NAMESPACE_ID
:
:
Option
&
_internal_options
(
int
index
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
Option
*
_internal_add_options
(
)
;
public
:
const
PROTOBUF_NAMESPACE_ID
:
:
Option
&
options
(
int
index
)
const
;
PROTOBUF_NAMESPACE_ID
:
:
Option
*
add_options
(
)
;
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
&
options
(
)
const
;
void
clear_name
(
)
;
const
std
:
:
string
&
name
(
)
const
;
void
set_name
(
const
std
:
:
string
&
value
)
;
void
set_name
(
std
:
:
string
&
&
value
)
;
void
set_name
(
const
char
*
value
)
;
void
set_name
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_name
(
)
;
std
:
:
string
*
release_name
(
)
;
void
set_allocated_name
(
std
:
:
string
*
name
)
;
private
:
const
std
:
:
string
&
_internal_name
(
)
const
;
void
_internal_set_name
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_name
(
)
;
public
:
void
clear_request_type_url
(
)
;
const
std
:
:
string
&
request_type_url
(
)
const
;
void
set_request_type_url
(
const
std
:
:
string
&
value
)
;
void
set_request_type_url
(
std
:
:
string
&
&
value
)
;
void
set_request_type_url
(
const
char
*
value
)
;
void
set_request_type_url
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_request_type_url
(
)
;
std
:
:
string
*
release_request_type_url
(
)
;
void
set_allocated_request_type_url
(
std
:
:
string
*
request_type_url
)
;
private
:
const
std
:
:
string
&
_internal_request_type_url
(
)
const
;
void
_internal_set_request_type_url
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_request_type_url
(
)
;
public
:
void
clear_response_type_url
(
)
;
const
std
:
:
string
&
response_type_url
(
)
const
;
void
set_response_type_url
(
const
std
:
:
string
&
value
)
;
void
set_response_type_url
(
std
:
:
string
&
&
value
)
;
void
set_response_type_url
(
const
char
*
value
)
;
void
set_response_type_url
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_response_type_url
(
)
;
std
:
:
string
*
release_response_type_url
(
)
;
void
set_allocated_response_type_url
(
std
:
:
string
*
response_type_url
)
;
private
:
const
std
:
:
string
&
_internal_response_type_url
(
)
const
;
void
_internal_set_response_type_url
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_response_type_url
(
)
;
public
:
void
clear_request_streaming
(
)
;
bool
request_streaming
(
)
const
;
void
set_request_streaming
(
bool
value
)
;
private
:
bool
_internal_request_streaming
(
)
const
;
void
_internal_set_request_streaming
(
bool
value
)
;
public
:
void
clear_response_streaming
(
)
;
bool
response_streaming
(
)
const
;
void
set_response_streaming
(
bool
value
)
;
private
:
bool
_internal_response_streaming
(
)
const
;
void
_internal_set_response_streaming
(
bool
value
)
;
public
:
void
clear_syntax
(
)
;
PROTOBUF_NAMESPACE_ID
:
:
Syntax
syntax
(
)
const
;
void
set_syntax
(
PROTOBUF_NAMESPACE_ID
:
:
Syntax
value
)
;
private
:
PROTOBUF_NAMESPACE_ID
:
:
Syntax
_internal_syntax
(
)
const
;
void
_internal_set_syntax
(
PROTOBUF_NAMESPACE_ID
:
:
Syntax
value
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArena
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
options_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
name_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
request_type_url_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
response_type_url_
;
bool
request_streaming_
;
bool
response_streaming_
;
int
syntax_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
friend
struct
:
:
TableStruct_google_2fprotobuf_2fapi_2eproto
;
}
;
class
PROTOBUF_EXPORT
Mixin
:
public
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
{
public
:
Mixin
(
)
;
virtual
~
Mixin
(
)
;
Mixin
(
const
Mixin
&
from
)
;
Mixin
(
Mixin
&
&
from
)
noexcept
:
Mixin
(
)
{
*
this
=
:
:
std
:
:
move
(
from
)
;
}
inline
Mixin
&
operator
=
(
const
Mixin
&
from
)
{
CopyFrom
(
from
)
;
return
*
this
;
}
inline
Mixin
&
operator
=
(
Mixin
&
&
from
)
noexcept
{
if
(
GetArenaNoVirtual
(
)
=
=
from
.
GetArenaNoVirtual
(
)
)
{
if
(
this
!
=
&
from
)
InternalSwap
(
&
from
)
;
}
else
{
CopyFrom
(
from
)
;
}
return
*
this
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Descriptor
*
descriptor
(
)
{
return
GetDescriptor
(
)
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Descriptor
*
GetDescriptor
(
)
{
return
GetMetadataStatic
(
)
.
descriptor
;
}
static
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Reflection
*
GetReflection
(
)
{
return
GetMetadataStatic
(
)
.
reflection
;
}
static
const
Mixin
&
default_instance
(
)
;
static
void
InitAsDefaultInstance
(
)
;
static
inline
const
Mixin
*
internal_default_instance
(
)
{
return
reinterpret_cast
<
const
Mixin
*
>
(
&
_Mixin_default_instance_
)
;
}
static
constexpr
int
kIndexInFileMessages
=
2
;
friend
void
swap
(
Mixin
&
a
Mixin
&
b
)
{
a
.
Swap
(
&
b
)
;
}
inline
void
Swap
(
Mixin
*
other
)
{
if
(
other
=
=
this
)
return
;
InternalSwap
(
other
)
;
}
inline
Mixin
*
New
(
)
const
final
{
return
CreateMaybeMessage
<
Mixin
>
(
nullptr
)
;
}
Mixin
*
New
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
arena
)
const
final
{
return
CreateMaybeMessage
<
Mixin
>
(
arena
)
;
}
void
CopyFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
&
from
)
final
;
void
MergeFrom
(
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
Message
&
from
)
final
;
void
CopyFrom
(
const
Mixin
&
from
)
;
void
MergeFrom
(
const
Mixin
&
from
)
;
PROTOBUF_ATTRIBUTE_REINITIALIZES
void
Clear
(
)
final
;
bool
IsInitialized
(
)
const
final
;
size_t
ByteSizeLong
(
)
const
final
;
const
char
*
_InternalParse
(
const
char
*
ptr
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ParseContext
*
ctx
)
final
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
_InternalSerialize
(
:
:
PROTOBUF_NAMESPACE_ID
:
:
uint8
*
target
:
:
PROTOBUF_NAMESPACE_ID
:
:
io
:
:
EpsCopyOutputStream
*
stream
)
const
final
;
int
GetCachedSize
(
)
const
final
{
return
_cached_size_
.
Get
(
)
;
}
private
:
inline
void
SharedCtor
(
)
;
inline
void
SharedDtor
(
)
;
void
SetCachedSize
(
int
size
)
const
final
;
void
InternalSwap
(
Mixin
*
other
)
;
friend
class
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AnyMetadata
;
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
StringPiece
FullMessageName
(
)
{
return
"
google
.
protobuf
.
Mixin
"
;
}
private
:
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
GetArenaNoVirtual
(
)
const
{
return
nullptr
;
}
inline
void
*
MaybeArenaPtr
(
)
const
{
return
nullptr
;
}
public
:
:
:
PROTOBUF_NAMESPACE_ID
:
:
Metadata
GetMetadata
(
)
const
final
;
private
:
static
:
:
PROTOBUF_NAMESPACE_ID
:
:
Metadata
GetMetadataStatic
(
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
AssignDescriptors
(
&
:
:
descriptor_table_google_2fprotobuf_2fapi_2eproto
)
;
return
:
:
descriptor_table_google_2fprotobuf_2fapi_2eproto
.
file_level_metadata
[
kIndexInFileMessages
]
;
}
public
:
enum
:
int
{
kNameFieldNumber
=
1
kRootFieldNumber
=
2
}
;
void
clear_name
(
)
;
const
std
:
:
string
&
name
(
)
const
;
void
set_name
(
const
std
:
:
string
&
value
)
;
void
set_name
(
std
:
:
string
&
&
value
)
;
void
set_name
(
const
char
*
value
)
;
void
set_name
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_name
(
)
;
std
:
:
string
*
release_name
(
)
;
void
set_allocated_name
(
std
:
:
string
*
name
)
;
private
:
const
std
:
:
string
&
_internal_name
(
)
const
;
void
_internal_set_name
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_name
(
)
;
public
:
void
clear_root
(
)
;
const
std
:
:
string
&
root
(
)
const
;
void
set_root
(
const
std
:
:
string
&
value
)
;
void
set_root
(
std
:
:
string
&
&
value
)
;
void
set_root
(
const
char
*
value
)
;
void
set_root
(
const
char
*
value
size_t
size
)
;
std
:
:
string
*
mutable_root
(
)
;
std
:
:
string
*
release_root
(
)
;
void
set_allocated_root
(
std
:
:
string
*
root
)
;
private
:
const
std
:
:
string
&
_internal_root
(
)
const
;
void
_internal_set_root
(
const
std
:
:
string
&
value
)
;
std
:
:
string
*
_internal_mutable_root
(
)
;
public
:
private
:
class
_Internal
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
InternalMetadataWithArena
_internal_metadata_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
name_
;
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
ArenaStringPtr
root_
;
mutable
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
CachedSize
_cached_size_
;
friend
struct
:
:
TableStruct_google_2fprotobuf_2fapi_2eproto
;
}
;
#
ifdef
__GNUC__
#
pragma
GCC
diagnostic
push
#
pragma
GCC
diagnostic
ignored
"
-
Wstrict
-
aliasing
"
#
endif
inline
void
Api
:
:
clear_name
(
)
{
name_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
const
std
:
:
string
&
Api
:
:
name
(
)
const
{
return
_internal_name
(
)
;
}
inline
void
Api
:
:
set_name
(
const
std
:
:
string
&
value
)
{
_internal_set_name
(
value
)
;
}
inline
std
:
:
string
*
Api
:
:
mutable_name
(
)
{
return
_internal_mutable_name
(
)
;
}
inline
const
std
:
:
string
&
Api
:
:
_internal_name
(
)
const
{
return
name_
.
GetNoArena
(
)
;
}
inline
void
Api
:
:
_internal_set_name
(
const
std
:
:
string
&
value
)
{
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
Api
:
:
set_name
(
std
:
:
string
&
&
value
)
{
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
Api
:
:
set_name
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
Api
:
:
set_name
(
const
char
*
value
size_t
size
)
{
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
Api
:
:
_internal_mutable_name
(
)
{
return
name_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
Api
:
:
release_name
(
)
{
return
name_
.
ReleaseNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
Api
:
:
set_allocated_name
(
std
:
:
string
*
name
)
{
if
(
name
!
=
nullptr
)
{
}
else
{
}
name_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
name
)
;
}
inline
int
Api
:
:
_internal_methods_size
(
)
const
{
return
methods_
.
size
(
)
;
}
inline
int
Api
:
:
methods_size
(
)
const
{
return
_internal_methods_size
(
)
;
}
inline
void
Api
:
:
clear_methods
(
)
{
methods_
.
Clear
(
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Method
*
Api
:
:
mutable_methods
(
int
index
)
{
return
methods_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Method
>
*
Api
:
:
mutable_methods
(
)
{
return
&
methods_
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
Method
&
Api
:
:
_internal_methods
(
int
index
)
const
{
return
methods_
.
Get
(
index
)
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
Method
&
Api
:
:
methods
(
int
index
)
const
{
return
_internal_methods
(
index
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Method
*
Api
:
:
_internal_add_methods
(
)
{
return
methods_
.
Add
(
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Method
*
Api
:
:
add_methods
(
)
{
return
_internal_add_methods
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Method
>
&
Api
:
:
methods
(
)
const
{
return
methods_
;
}
inline
int
Api
:
:
_internal_options_size
(
)
const
{
return
options_
.
size
(
)
;
}
inline
int
Api
:
:
options_size
(
)
const
{
return
_internal_options_size
(
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Option
*
Api
:
:
mutable_options
(
int
index
)
{
return
options_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
*
Api
:
:
mutable_options
(
)
{
return
&
options_
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
Option
&
Api
:
:
_internal_options
(
int
index
)
const
{
return
options_
.
Get
(
index
)
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
Option
&
Api
:
:
options
(
int
index
)
const
{
return
_internal_options
(
index
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Option
*
Api
:
:
_internal_add_options
(
)
{
return
options_
.
Add
(
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Option
*
Api
:
:
add_options
(
)
{
return
_internal_add_options
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
&
Api
:
:
options
(
)
const
{
return
options_
;
}
inline
void
Api
:
:
clear_version
(
)
{
version_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
const
std
:
:
string
&
Api
:
:
version
(
)
const
{
return
_internal_version
(
)
;
}
inline
void
Api
:
:
set_version
(
const
std
:
:
string
&
value
)
{
_internal_set_version
(
value
)
;
}
inline
std
:
:
string
*
Api
:
:
mutable_version
(
)
{
return
_internal_mutable_version
(
)
;
}
inline
const
std
:
:
string
&
Api
:
:
_internal_version
(
)
const
{
return
version_
.
GetNoArena
(
)
;
}
inline
void
Api
:
:
_internal_set_version
(
const
std
:
:
string
&
value
)
{
version_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
Api
:
:
set_version
(
std
:
:
string
&
&
value
)
{
version_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
Api
:
:
set_version
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
version_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
Api
:
:
set_version
(
const
char
*
value
size_t
size
)
{
version_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
Api
:
:
_internal_mutable_version
(
)
{
return
version_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
Api
:
:
release_version
(
)
{
return
version_
.
ReleaseNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
Api
:
:
set_allocated_version
(
std
:
:
string
*
version
)
{
if
(
version
!
=
nullptr
)
{
}
else
{
}
version_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
version
)
;
}
inline
bool
Api
:
:
_internal_has_source_context
(
)
const
{
return
this
!
=
internal_default_instance
(
)
&
&
source_context_
!
=
nullptr
;
}
inline
bool
Api
:
:
has_source_context
(
)
const
{
return
_internal_has_source_context
(
)
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
&
Api
:
:
_internal_source_context
(
)
const
{
const
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
p
=
source_context_
;
return
p
!
=
nullptr
?
*
p
:
*
reinterpret_cast
<
const
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
>
(
&
PROTOBUF_NAMESPACE_ID
:
:
_SourceContext_default_instance_
)
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
&
Api
:
:
source_context
(
)
const
{
return
_internal_source_context
(
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
Api
:
:
release_source_context
(
)
{
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
temp
=
source_context_
;
source_context_
=
nullptr
;
return
temp
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
Api
:
:
_internal_mutable_source_context
(
)
{
if
(
source_context_
=
=
nullptr
)
{
auto
*
p
=
CreateMaybeMessage
<
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
>
(
GetArenaNoVirtual
(
)
)
;
source_context_
=
p
;
}
return
source_context_
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
Api
:
:
mutable_source_context
(
)
{
return
_internal_mutable_source_context
(
)
;
}
inline
void
Api
:
:
set_allocated_source_context
(
PROTOBUF_NAMESPACE_ID
:
:
SourceContext
*
source_context
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
message_arena
=
GetArenaNoVirtual
(
)
;
if
(
message_arena
=
=
nullptr
)
{
delete
reinterpret_cast
<
:
:
PROTOBUF_NAMESPACE_ID
:
:
MessageLite
*
>
(
source_context_
)
;
}
if
(
source_context
)
{
:
:
PROTOBUF_NAMESPACE_ID
:
:
Arena
*
submessage_arena
=
nullptr
;
if
(
message_arena
!
=
submessage_arena
)
{
source_context
=
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetOwnedMessage
(
message_arena
source_context
submessage_arena
)
;
}
}
else
{
}
source_context_
=
source_context
;
}
inline
int
Api
:
:
_internal_mixins_size
(
)
const
{
return
mixins_
.
size
(
)
;
}
inline
int
Api
:
:
mixins_size
(
)
const
{
return
_internal_mixins_size
(
)
;
}
inline
void
Api
:
:
clear_mixins
(
)
{
mixins_
.
Clear
(
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Mixin
*
Api
:
:
mutable_mixins
(
int
index
)
{
return
mixins_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Mixin
>
*
Api
:
:
mutable_mixins
(
)
{
return
&
mixins_
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
Mixin
&
Api
:
:
_internal_mixins
(
int
index
)
const
{
return
mixins_
.
Get
(
index
)
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
Mixin
&
Api
:
:
mixins
(
int
index
)
const
{
return
_internal_mixins
(
index
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Mixin
*
Api
:
:
_internal_add_mixins
(
)
{
return
mixins_
.
Add
(
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Mixin
*
Api
:
:
add_mixins
(
)
{
return
_internal_add_mixins
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Mixin
>
&
Api
:
:
mixins
(
)
const
{
return
mixins_
;
}
inline
void
Api
:
:
clear_syntax
(
)
{
syntax_
=
0
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Syntax
Api
:
:
_internal_syntax
(
)
const
{
return
static_cast
<
PROTOBUF_NAMESPACE_ID
:
:
Syntax
>
(
syntax_
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Syntax
Api
:
:
syntax
(
)
const
{
return
_internal_syntax
(
)
;
}
inline
void
Api
:
:
_internal_set_syntax
(
PROTOBUF_NAMESPACE_ID
:
:
Syntax
value
)
{
syntax_
=
value
;
}
inline
void
Api
:
:
set_syntax
(
PROTOBUF_NAMESPACE_ID
:
:
Syntax
value
)
{
_internal_set_syntax
(
value
)
;
}
inline
void
Method
:
:
clear_name
(
)
{
name_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
const
std
:
:
string
&
Method
:
:
name
(
)
const
{
return
_internal_name
(
)
;
}
inline
void
Method
:
:
set_name
(
const
std
:
:
string
&
value
)
{
_internal_set_name
(
value
)
;
}
inline
std
:
:
string
*
Method
:
:
mutable_name
(
)
{
return
_internal_mutable_name
(
)
;
}
inline
const
std
:
:
string
&
Method
:
:
_internal_name
(
)
const
{
return
name_
.
GetNoArena
(
)
;
}
inline
void
Method
:
:
_internal_set_name
(
const
std
:
:
string
&
value
)
{
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
Method
:
:
set_name
(
std
:
:
string
&
&
value
)
{
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
Method
:
:
set_name
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
Method
:
:
set_name
(
const
char
*
value
size_t
size
)
{
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
Method
:
:
_internal_mutable_name
(
)
{
return
name_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
Method
:
:
release_name
(
)
{
return
name_
.
ReleaseNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
Method
:
:
set_allocated_name
(
std
:
:
string
*
name
)
{
if
(
name
!
=
nullptr
)
{
}
else
{
}
name_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
name
)
;
}
inline
void
Method
:
:
clear_request_type_url
(
)
{
request_type_url_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
const
std
:
:
string
&
Method
:
:
request_type_url
(
)
const
{
return
_internal_request_type_url
(
)
;
}
inline
void
Method
:
:
set_request_type_url
(
const
std
:
:
string
&
value
)
{
_internal_set_request_type_url
(
value
)
;
}
inline
std
:
:
string
*
Method
:
:
mutable_request_type_url
(
)
{
return
_internal_mutable_request_type_url
(
)
;
}
inline
const
std
:
:
string
&
Method
:
:
_internal_request_type_url
(
)
const
{
return
request_type_url_
.
GetNoArena
(
)
;
}
inline
void
Method
:
:
_internal_set_request_type_url
(
const
std
:
:
string
&
value
)
{
request_type_url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
Method
:
:
set_request_type_url
(
std
:
:
string
&
&
value
)
{
request_type_url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
Method
:
:
set_request_type_url
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
request_type_url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
Method
:
:
set_request_type_url
(
const
char
*
value
size_t
size
)
{
request_type_url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
Method
:
:
_internal_mutable_request_type_url
(
)
{
return
request_type_url_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
Method
:
:
release_request_type_url
(
)
{
return
request_type_url_
.
ReleaseNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
Method
:
:
set_allocated_request_type_url
(
std
:
:
string
*
request_type_url
)
{
if
(
request_type_url
!
=
nullptr
)
{
}
else
{
}
request_type_url_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
request_type_url
)
;
}
inline
void
Method
:
:
clear_request_streaming
(
)
{
request_streaming_
=
false
;
}
inline
bool
Method
:
:
_internal_request_streaming
(
)
const
{
return
request_streaming_
;
}
inline
bool
Method
:
:
request_streaming
(
)
const
{
return
_internal_request_streaming
(
)
;
}
inline
void
Method
:
:
_internal_set_request_streaming
(
bool
value
)
{
request_streaming_
=
value
;
}
inline
void
Method
:
:
set_request_streaming
(
bool
value
)
{
_internal_set_request_streaming
(
value
)
;
}
inline
void
Method
:
:
clear_response_type_url
(
)
{
response_type_url_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
const
std
:
:
string
&
Method
:
:
response_type_url
(
)
const
{
return
_internal_response_type_url
(
)
;
}
inline
void
Method
:
:
set_response_type_url
(
const
std
:
:
string
&
value
)
{
_internal_set_response_type_url
(
value
)
;
}
inline
std
:
:
string
*
Method
:
:
mutable_response_type_url
(
)
{
return
_internal_mutable_response_type_url
(
)
;
}
inline
const
std
:
:
string
&
Method
:
:
_internal_response_type_url
(
)
const
{
return
response_type_url_
.
GetNoArena
(
)
;
}
inline
void
Method
:
:
_internal_set_response_type_url
(
const
std
:
:
string
&
value
)
{
response_type_url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
Method
:
:
set_response_type_url
(
std
:
:
string
&
&
value
)
{
response_type_url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
Method
:
:
set_response_type_url
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
response_type_url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
Method
:
:
set_response_type_url
(
const
char
*
value
size_t
size
)
{
response_type_url_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
Method
:
:
_internal_mutable_response_type_url
(
)
{
return
response_type_url_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
Method
:
:
release_response_type_url
(
)
{
return
response_type_url_
.
ReleaseNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
Method
:
:
set_allocated_response_type_url
(
std
:
:
string
*
response_type_url
)
{
if
(
response_type_url
!
=
nullptr
)
{
}
else
{
}
response_type_url_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
response_type_url
)
;
}
inline
void
Method
:
:
clear_response_streaming
(
)
{
response_streaming_
=
false
;
}
inline
bool
Method
:
:
_internal_response_streaming
(
)
const
{
return
response_streaming_
;
}
inline
bool
Method
:
:
response_streaming
(
)
const
{
return
_internal_response_streaming
(
)
;
}
inline
void
Method
:
:
_internal_set_response_streaming
(
bool
value
)
{
response_streaming_
=
value
;
}
inline
void
Method
:
:
set_response_streaming
(
bool
value
)
{
_internal_set_response_streaming
(
value
)
;
}
inline
int
Method
:
:
_internal_options_size
(
)
const
{
return
options_
.
size
(
)
;
}
inline
int
Method
:
:
options_size
(
)
const
{
return
_internal_options_size
(
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Option
*
Method
:
:
mutable_options
(
int
index
)
{
return
options_
.
Mutable
(
index
)
;
}
inline
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
*
Method
:
:
mutable_options
(
)
{
return
&
options_
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
Option
&
Method
:
:
_internal_options
(
int
index
)
const
{
return
options_
.
Get
(
index
)
;
}
inline
const
PROTOBUF_NAMESPACE_ID
:
:
Option
&
Method
:
:
options
(
int
index
)
const
{
return
_internal_options
(
index
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Option
*
Method
:
:
_internal_add_options
(
)
{
return
options_
.
Add
(
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Option
*
Method
:
:
add_options
(
)
{
return
_internal_add_options
(
)
;
}
inline
const
:
:
PROTOBUF_NAMESPACE_ID
:
:
RepeatedPtrField
<
PROTOBUF_NAMESPACE_ID
:
:
Option
>
&
Method
:
:
options
(
)
const
{
return
options_
;
}
inline
void
Method
:
:
clear_syntax
(
)
{
syntax_
=
0
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Syntax
Method
:
:
_internal_syntax
(
)
const
{
return
static_cast
<
PROTOBUF_NAMESPACE_ID
:
:
Syntax
>
(
syntax_
)
;
}
inline
PROTOBUF_NAMESPACE_ID
:
:
Syntax
Method
:
:
syntax
(
)
const
{
return
_internal_syntax
(
)
;
}
inline
void
Method
:
:
_internal_set_syntax
(
PROTOBUF_NAMESPACE_ID
:
:
Syntax
value
)
{
syntax_
=
value
;
}
inline
void
Method
:
:
set_syntax
(
PROTOBUF_NAMESPACE_ID
:
:
Syntax
value
)
{
_internal_set_syntax
(
value
)
;
}
inline
void
Mixin
:
:
clear_name
(
)
{
name_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
const
std
:
:
string
&
Mixin
:
:
name
(
)
const
{
return
_internal_name
(
)
;
}
inline
void
Mixin
:
:
set_name
(
const
std
:
:
string
&
value
)
{
_internal_set_name
(
value
)
;
}
inline
std
:
:
string
*
Mixin
:
:
mutable_name
(
)
{
return
_internal_mutable_name
(
)
;
}
inline
const
std
:
:
string
&
Mixin
:
:
_internal_name
(
)
const
{
return
name_
.
GetNoArena
(
)
;
}
inline
void
Mixin
:
:
_internal_set_name
(
const
std
:
:
string
&
value
)
{
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
Mixin
:
:
set_name
(
std
:
:
string
&
&
value
)
{
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
Mixin
:
:
set_name
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
Mixin
:
:
set_name
(
const
char
*
value
size_t
size
)
{
name_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
Mixin
:
:
_internal_mutable_name
(
)
{
return
name_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
Mixin
:
:
release_name
(
)
{
return
name_
.
ReleaseNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
Mixin
:
:
set_allocated_name
(
std
:
:
string
*
name
)
{
if
(
name
!
=
nullptr
)
{
}
else
{
}
name_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
name
)
;
}
inline
void
Mixin
:
:
clear_root
(
)
{
root_
.
ClearToEmptyNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
const
std
:
:
string
&
Mixin
:
:
root
(
)
const
{
return
_internal_root
(
)
;
}
inline
void
Mixin
:
:
set_root
(
const
std
:
:
string
&
value
)
{
_internal_set_root
(
value
)
;
}
inline
std
:
:
string
*
Mixin
:
:
mutable_root
(
)
{
return
_internal_mutable_root
(
)
;
}
inline
const
std
:
:
string
&
Mixin
:
:
_internal_root
(
)
const
{
return
root_
.
GetNoArena
(
)
;
}
inline
void
Mixin
:
:
_internal_set_root
(
const
std
:
:
string
&
value
)
{
root_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
value
)
;
}
inline
void
Mixin
:
:
set_root
(
std
:
:
string
&
&
value
)
{
root_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
move
(
value
)
)
;
}
inline
void
Mixin
:
:
set_root
(
const
char
*
value
)
{
GOOGLE_DCHECK
(
value
!
=
nullptr
)
;
root_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
value
)
)
;
}
inline
void
Mixin
:
:
set_root
(
const
char
*
value
size_t
size
)
{
root_
.
SetNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
:
:
std
:
:
string
(
reinterpret_cast
<
const
char
*
>
(
value
)
size
)
)
;
}
inline
std
:
:
string
*
Mixin
:
:
_internal_mutable_root
(
)
{
return
root_
.
MutableNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
std
:
:
string
*
Mixin
:
:
release_root
(
)
{
return
root_
.
ReleaseNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
)
;
}
inline
void
Mixin
:
:
set_allocated_root
(
std
:
:
string
*
root
)
{
if
(
root
!
=
nullptr
)
{
}
else
{
}
root_
.
SetAllocatedNoArena
(
&
:
:
PROTOBUF_NAMESPACE_ID
:
:
internal
:
:
GetEmptyStringAlreadyInited
(
)
root
)
;
}
#
ifdef
__GNUC__
#
pragma
GCC
diagnostic
pop
#
endif
PROTOBUF_NAMESPACE_CLOSE
#
include
<
google
/
protobuf
/
port_undef
.
inc
>
#
endif
