#
ifndef
__has_cpp_attribute
#
define
__has_cpp_attribute
(
x
)
0
#
define
PROTOBUF_has_cpp_attribute_DEFINED_
#
endif
#
ifndef
__has_feature
#
define
__has_feature
(
x
)
0
#
define
PROTOBUF_has_feature_DEFINED_
#
endif
#
ifndef
__has_warning
#
define
__has_warning
(
x
)
0
#
define
PROTOBUF_has_warning_DEFINED_
#
endif
#
ifndef
__has_attribute
#
define
__has_attribute
(
x
)
0
#
define
PROTOBUF_has_attribute_DEFINED_
#
endif
#
ifndef
__has_builtin
#
define
__has_builtin
(
x
)
0
#
define
PROTOBUF_has_builtin_DEFINED_
#
endif
#
ifdef
PROTOBUF_BUILTIN_BSWAP16
#
error
PROTOBUF_BUILTIN_BSWAP16
was
previously
defined
#
endif
#
ifdef
PROTOBUF_BUILTIN_BSWAP32
#
error
PROTOBUF_BUILTIN_BSWAP32
was
previously
defined
#
endif
#
ifdef
PROTOBUF_BUILTIN_BSWAP64
#
error
PROTOBUF_BUILTIN_BSWAP64
was
previously
defined
#
endif
#
if
defined
(
__GNUC__
)
|
|
__has_builtin
(
__builtin_bswap16
)
#
define
PROTOBUF_BUILTIN_BSWAP16
(
x
)
__builtin_bswap16
(
x
)
#
endif
#
if
defined
(
__GNUC__
)
|
|
__has_builtin
(
__builtin_bswap32
)
#
define
PROTOBUF_BUILTIN_BSWAP32
(
x
)
__builtin_bswap32
(
x
)
#
endif
#
if
defined
(
__GNUC__
)
|
|
__has_builtin
(
__builtin_bswap64
)
#
define
PROTOBUF_BUILTIN_BSWAP64
(
x
)
__builtin_bswap64
(
x
)
#
endif
#
if
defined
(
__GNUC__
)
&
&
defined
(
__GNUC_MINOR__
)
\
&
&
defined
(
__GNUC_PATCHLEVEL__
)
#
define
PROTOBUF_GNUC_MIN
(
x
y
)
\
(
__GNUC__
>
(
x
)
|
|
__GNUC__
=
=
(
x
)
&
&
__GNUC_MINOR__
>
=
(
y
)
)
#
else
#
define
PROTOBUF_GNUC_MIN
(
x
y
)
0
#
endif
#
if
defined
(
_MSC_VER
)
#
define
PROTOBUF_MSC_VER_MIN
(
x
)
(
_MSC_VER
>
=
x
)
#
else
#
define
PROTOBUF_MSC_VER_MIN
(
x
)
0
#
endif
#
if
!
defined
(
_MSVC_LANG
)
#
define
PROTOBUF_CPLUSPLUS_MIN
(
x
)
(
__cplusplus
>
=
x
)
#
else
#
define
PROTOBUF_CPLUSPLUS_MIN
(
x
)
(
_MSVC_LANG
>
=
x
)
#
endif
#
define
PROTOBUF_FUTURE_FINAL
#
ifdef
PROTOBUF_VERSION
#
error
PROTOBUF_VERSION
was
previously
defined
#
endif
#
define
PROTOBUF_VERSION
3021004
#
ifdef
PROTOBUF_MIN_HEADER_VERSION_FOR_PROTOC
#
error
PROTOBUF_MIN_HEADER_VERSION_FOR_PROTOC
was
previously
defined
#
endif
#
define
PROTOBUF_MIN_HEADER_VERSION_FOR_PROTOC
3021000
#
ifdef
PROTOBUF_MIN_PROTOC_VERSION
#
error
PROTOBUF_MIN_PROTOC_VERSION
was
previously
defined
#
endif
#
define
PROTOBUF_MIN_PROTOC_VERSION
3021000
#
ifdef
PROTOBUF_VERSION_SUFFIX
#
error
PROTOBUF_VERSION_SUFFIX
was
previously
defined
#
endif
#
define
PROTOBUF_VERSION_SUFFIX
"
"
#
if
defined
(
PROTOBUF_NAMESPACE
)
|
|
defined
(
PROTOBUF_NAMESPACE_ID
)
#
error
PROTOBUF_NAMESPACE
or
PROTOBUF_NAMESPACE_ID
was
previously
defined
#
endif
#
define
PROTOBUF_NAMESPACE
"
google
:
:
protobuf
"
#
define
PROTOBUF_NAMESPACE_ID
google
:
:
protobuf
#
define
PROTOBUF_NAMESPACE_OPEN
\
namespace
google
{
\
namespace
protobuf
{
#
define
PROTOBUF_NAMESPACE_CLOSE
\
}
/
*
namespace
protobuf
*
/
\
}
/
*
namespace
google
*
/
#
ifdef
PROTOBUF_ALWAYS_INLINE
#
error
PROTOBUF_ALWAYS_INLINE
was
previously
defined
#
endif
#
if
defined
(
PROTOBUF_NO_INLINE
)
#
define
PROTOBUF_ALWAYS_INLINE
#
elif
PROTOBUF_GNUC_MIN
(
3
1
)
#
define
PROTOBUF_ALWAYS_INLINE
__attribute__
(
(
always_inline
)
)
#
elif
defined
(
_MSC_VER
)
#
define
PROTOBUF_ALWAYS_INLINE
__forceinline
#
else
#
define
PROTOBUF_ALWAYS_INLINE
#
endif
#
ifdef
PROTOBUF_NDEBUG_INLINE
#
error
PROTOBUF_NDEBUG_INLINE
was
previously
defined
#
endif
#
if
defined
(
NDEBUG
)
|
|
(
defined
(
_MSC_VER
)
&
&
!
defined
(
_DEBUG
)
)
#
define
PROTOBUF_NDEBUG_INLINE
PROTOBUF_ALWAYS_INLINE
#
else
#
define
PROTOBUF_NDEBUG_INLINE
#
endif
#
ifdef
PROTOBUF_NOINLINE
#
error
PROTOBUF_NOINLINE
was
previously
defined
#
endif
#
if
PROTOBUF_GNUC_MIN
(
3
1
)
#
define
PROTOBUF_NOINLINE
__attribute__
(
(
noinline
)
)
#
elif
defined
(
_MSC_VER
)
#
define
PROTOBUF_NOINLINE
__declspec
(
noinline
)
#
endif
#
ifdef
PROTOBUF_MUSTTAIL
#
error
PROTOBUF_MUSTTAIL
was
previously
defined
#
endif
#
ifdef
PROTOBUF_TAILCALL
#
error
PROTOBUF_TAILCALL
was
previously
defined
#
endif
#
if
__has_cpp_attribute
(
clang
:
:
musttail
)
&
&
!
defined
(
__arm__
)
&
&
\
!
defined
(
_ARCH_PPC
)
&
&
!
defined
(
__wasm__
)
&
&
\
!
(
defined
(
_MSC_VER
)
&
&
defined
(
_M_IX86
)
)
&
&
\
!
(
defined
(
__NDK_MAJOR__
)
&
&
__NDK_MAJOR
<
=
24
)
#
ifndef
PROTO2_OPENSOURCE
#
endif
#
define
PROTOBUF_MUSTTAIL
[
[
clang
:
:
musttail
]
]
#
define
PROTOBUF_TAILCALL
true
#
else
#
define
PROTOBUF_MUSTTAIL
#
define
PROTOBUF_TAILCALL
false
#
endif
#
ifdef
PROTOBUF_EXCLUSIVE_LOCKS_REQUIRED
#
error
PROTOBUF_EXCLUSIVE_LOCKS_REQUIRED
was
previously
defined
#
endif
#
if
__has_attribute
(
exclusive_locks_required
)
#
define
PROTOBUF_EXCLUSIVE_LOCKS_REQUIRED
(
.
.
.
)
\
__attribute__
(
(
exclusive_locks_required
(
__VA_ARGS__
)
)
)
#
else
#
define
PROTOBUF_EXCLUSIVE_LOCKS_REQUIRED
(
.
.
.
)
#
endif
#
ifdef
PROTOBUF_NO_THREAD_SAFETY_ANALYSIS
#
error
PROTOBUF_NO_THREAD_SAFETY_ANALYSIS
was
previously
defined
#
endif
#
if
__has_attribute
(
no_thread_safety_analysis
)
#
define
PROTOBUF_NO_THREAD_SAFETY_ANALYSIS
\
__attribute__
(
(
no_thread_safety_analysis
)
)
#
else
#
define
PROTOBUF_NO_THREAD_SAFETY_ANALYSIS
#
endif
#
ifdef
PROTOBUF_GUARDED_BY
#
error
PROTOBUF_GUARDED_BY
was
previously
defined
#
endif
#
if
__has_attribute
(
guarded_by
)
#
define
PROTOBUF_GUARDED_BY
(
x
)
__attribute__
(
(
guarded_by
(
x
)
)
)
#
else
#
define
PROTOBUF_GUARDED_BY
(
x
)
#
endif
#
ifdef
PROTOBUF_LOCKS_EXCLUDED
#
error
PROTOBUF_LOCKS_EXCLUDED
was
previously
defined
#
endif
#
if
__has_attribute
(
locks_excluded
)
#
define
PROTOBUF_LOCKS_EXCLUDED
(
.
.
.
)
\
__attribute__
(
(
locks_excluded
(
__VA_ARGS__
)
)
)
#
else
#
define
PROTOBUF_LOCKS_EXCLUDED
(
.
.
.
)
#
endif
#
ifdef
PROTOBUF_COLD
#
error
PROTOBUF_COLD
was
previously
defined
#
endif
#
if
__has_attribute
(
cold
)
|
|
PROTOBUF_GNUC_MIN
(
4
3
)
#
define
PROTOBUF_COLD
__attribute__
(
(
cold
)
)
#
else
#
define
PROTOBUF_COLD
#
endif
#
ifdef
PROTOBUF_SECTION_VARIABLE
#
error
PROTOBUF_SECTION_VARIABLE
was
previously
defined
#
endif
#
if
(
__has_attribute
(
section
)
|
|
defined
(
__GNUC__
)
)
&
&
defined
(
__ELF__
)
#
define
PROTOBUF_SECTION_VARIABLE
(
x
)
__attribute__
(
(
section
(
#
x
)
)
)
#
else
#
define
PROTOBUF_SECTION_VARIABLE
(
x
)
#
endif
#
if
defined
(
PROTOBUF_DEPRECATED
)
#
error
PROTOBUF_DEPRECATED
was
previously
defined
#
endif
#
if
defined
(
PROTOBUF_DEPRECATED_MSG
)
#
error
PROTOBUF_DEPRECATED_MSG
was
previously
defined
#
endif
#
if
__has_attribute
(
deprecated
)
|
|
PROTOBUF_GNUC_MIN
(
3
0
)
#
define
PROTOBUF_DEPRECATED
__attribute__
(
(
deprecated
)
)
#
define
PROTOBUF_DEPRECATED_MSG
(
msg
)
__attribute__
(
(
deprecated
(
msg
)
)
)
#
elif
defined
(
_MSC_VER
)
#
define
PROTOBUF_DEPRECATED
__declspec
(
deprecated
)
#
define
PROTOBUF_DEPRECATED_MSG
(
msg
)
__declspec
(
deprecated
(
msg
)
)
#
else
#
define
PROTOBUF_DEPRECATED
#
define
PROTOBUF_DEPRECATED_MSG
(
msg
)
#
endif
#
if
defined
(
PROTOBUF_DEPRECATED_ENUM
)
#
error
PROTOBUF_DEPRECATED_ENUM
was
previously
defined
#
endif
#
if
defined
(
__clang__
)
|
|
PROTOBUF_GNUC_MIN
(
6
0
)
#
define
PROTOBUF_DEPRECATED_ENUM
__attribute__
(
(
deprecated
)
)
#
else
#
define
PROTOBUF_DEPRECATED_ENUM
#
endif
#
ifdef
PROTOBUF_FUNC_ALIGN
#
error
PROTOBUF_FUNC_ALIGN
was
previously
defined
#
endif
#
if
__has_attribute
(
aligned
)
|
|
PROTOBUF_GNUC_MIN
(
4
3
)
#
define
PROTOBUF_FUNC_ALIGN
(
bytes
)
__attribute__
(
(
aligned
(
bytes
)
)
)
#
else
#
define
PROTOBUF_FUNC_ALIGN
(
bytes
)
#
endif
#
ifdef
PROTOBUF_RETURNS_NONNULL
#
error
PROTOBUF_RETURNS_NONNULL
was
previously
defined
#
endif
#
if
__has_attribute
(
returns_nonnull
)
|
|
PROTOBUF_GNUC_MIN
(
4
9
)
#
define
PROTOBUF_RETURNS_NONNULL
__attribute__
(
(
returns_nonnull
)
)
#
else
#
define
PROTOBUF_RETURNS_NONNULL
#
endif
#
ifdef
PROTOBUF_ATTRIBUTE_REINITIALIZES
#
error
PROTOBUF_ATTRIBUTE_REINITIALIZES
was
previously
defined
#
endif
#
if
__has_cpp_attribute
(
clang
:
:
reinitializes
)
#
define
PROTOBUF_ATTRIBUTE_REINITIALIZES
[
[
clang
:
:
reinitializes
]
]
#
else
#
define
PROTOBUF_ATTRIBUTE_REINITIALIZES
#
endif
#
define
GOOGLE_PROTOBUF_MIN_LIBRARY_VERSION
3021000
#
ifdef
PROTOBUF_RTTI
#
error
PROTOBUF_RTTI
was
previously
defined
#
endif
#
if
defined
(
GOOGLE_PROTOBUF_NO_RTTI
)
&
&
GOOGLE_PROTOBUF_NO_RTTI
#
define
PROTOBUF_RTTI
0
#
elif
defined
(
__cpp_rtti
)
#
define
PROTOBUF_RTTI
1
#
elif
__has_feature
(
cxx_rtti
)
#
define
PROTOBUF_RTTI
1
#
elif
defined
(
__GXX_RTTI
)
#
define
PROTOBUF_RTTI
1
#
elif
defined
(
_CPPRTTI
)
#
define
PROTOBUF_RTTI
1
#
else
#
define
PROTOBUF_RTTI
0
#
endif
#
ifdef
PROTOBUF_FIELD_OFFSET
#
error
PROTOBUF_FIELD_OFFSET
was
previously
defined
#
endif
#
if
defined
(
__clang__
)
#
define
PROTOBUF_FIELD_OFFSET
(
TYPE
FIELD
)
\
_Pragma
(
"
clang
diagnostic
push
"
)
\
_Pragma
(
"
clang
diagnostic
ignored
\
"
-
Winvalid
-
offsetof
\
"
"
)
\
__builtin_offsetof
(
TYPE
FIELD
)
\
_Pragma
(
"
clang
diagnostic
pop
"
)
#
elif
PROTOBUF_GNUC_MIN
(
4
8
)
#
define
PROTOBUF_FIELD_OFFSET
(
TYPE
FIELD
)
__builtin_offsetof
(
TYPE
FIELD
)
#
else
#
define
PROTOBUF_FIELD_OFFSET
(
TYPE
FIELD
)
\
static_cast
<
:
:
uint32_t
>
(
reinterpret_cast
<
const
char
*
>
(
\
&
reinterpret_cast
<
const
TYPE
*
>
(
16
)
-
>
FIELD
)
-
\
reinterpret_cast
<
const
char
*
>
(
16
)
)
#
endif
#
ifdef
PROTOBUF_EXPORT
#
error
PROTOBUF_EXPORT
was
previously
defined
#
endif
#
if
defined
(
PROTOBUF_USE_DLLS
)
&
&
defined
(
_MSC_VER
)
#
if
defined
(
LIBPROTOBUF_EXPORTS
)
#
define
PROTOBUF_EXPORT
__declspec
(
dllexport
)
#
define
PROTOBUF_EXPORT_TEMPLATE_DECLARE
#
define
PROTOBUF_EXPORT_TEMPLATE_DEFINE
__declspec
(
dllexport
)
#
else
#
define
PROTOBUF_EXPORT
__declspec
(
dllimport
)
#
define
PROTOBUF_EXPORT_TEMPLATE_DECLARE
#
define
PROTOBUF_EXPORT_TEMPLATE_DEFINE
__declspec
(
dllimport
)
#
endif
#
elif
defined
(
PROTOBUF_USE_DLLS
)
&
&
defined
(
LIBPROTOBUF_EXPORTS
)
#
define
PROTOBUF_EXPORT
__attribute__
(
(
visibility
(
"
default
"
)
)
)
#
define
PROTOBUF_EXPORT_TEMPLATE_DECLARE
__attribute__
(
(
visibility
(
"
default
"
)
)
)
#
define
PROTOBUF_EXPORT_TEMPLATE_DEFINE
#
else
#
define
PROTOBUF_EXPORT
#
define
PROTOBUF_EXPORT_TEMPLATE_DECLARE
#
define
PROTOBUF_EXPORT_TEMPLATE_DEFINE
#
endif
#
ifdef
PROTOC_EXPORT
#
error
PROTOC_EXPORT
was
previously
defined
#
endif
#
if
defined
(
PROTOBUF_USE_DLLS
)
&
&
defined
(
_MSC_VER
)
#
if
defined
(
LIBPROTOC_EXPORTS
)
#
define
PROTOC_EXPORT
__declspec
(
dllexport
)
#
else
#
define
PROTOC_EXPORT
__declspec
(
dllimport
)
#
endif
#
elif
defined
(
PROTOBUF_USE_DLLS
)
&
&
defined
(
LIBPROTOC_EXPORTS
)
#
define
PROTOC_EXPORT
__attribute__
(
(
visibility
(
"
default
"
)
)
)
#
else
#
define
PROTOC_EXPORT
#
endif
#
if
defined
(
PROTOBUF_PREDICT_TRUE
)
|
|
defined
(
PROTOBUF_PREDICT_FALSE
)
#
error
PROTOBUF_PREDICT_
(
TRUE
|
FALSE
)
was
previously
defined
#
endif
#
if
PROTOBUF_GNUC_MIN
(
3
0
)
#
define
PROTOBUF_PREDICT_TRUE
(
x
)
(
__builtin_expect
(
false
|
|
(
x
)
true
)
)
#
define
PROTOBUF_PREDICT_FALSE
(
x
)
(
__builtin_expect
(
false
|
|
(
x
)
false
)
)
#
else
#
define
PROTOBUF_PREDICT_TRUE
(
x
)
(
x
)
#
define
PROTOBUF_PREDICT_FALSE
(
x
)
(
x
)
#
endif
#
ifdef
PROTOBUF_NODISCARD
#
error
PROTOBUF_NODISCARD
was
previously
defined
#
endif
#
if
__has_cpp_attribute
(
nodiscard
)
&
&
PROTOBUF_CPLUSPLUS_MIN
(
201703L
)
#
define
PROTOBUF_NODISCARD
[
[
nodiscard
]
]
#
elif
__has_attribute
(
warn_unused_result
)
|
|
PROTOBUF_GNUC_MIN
(
4
8
)
#
define
PROTOBUF_NODISCARD
__attribute__
(
(
warn_unused_result
)
)
#
else
#
define
PROTOBUF_NODISCARD
#
endif
#
ifdef
PROTOBUF_ENABLE_STABLE_EXPERIMENTS
#
define
PROTOBUF_FORCE_MESSAGE_OWNED_ARENA
#
endif
#
ifdef
PROTOBUF_FORCE_COPY_IN_RELEASE
#
error
PROTOBUF_FORCE_COPY_IN_RELEASE
was
previously
defined
#
endif
#
ifdef
PROTOBUF_FORCE_COPY_IN_SWAP
#
error
PROTOBUF_FORCE_COPY_IN_SWAP
was
previously
defined
#
endif
#
ifdef
PROTOBUF_FORCE_COPY_IN_MOVE
#
error
PROTOBUF_FORCE_COPY_IN_MOVE
was
previously
defined
#
endif
#
ifdef
PROTOBUF_FORCE_RESET_IN_CLEAR
#
error
PROTOBUF_FORCE_RESET_IN_CLEAR
was
previously
defined
#
endif
#
ifdef
PROTOBUF_FORCE_COPY_DEFAULT_STRING
#
error
PROTOBUF_FORCE_COPY_DEFAULT_STRING
was
previously
defined
#
endif
#
ifdef
PROTOBUF_FALLTHROUGH_INTENDED
#
error
PROTOBUF_FALLTHROUGH_INTENDED
was
previously
defined
#
endif
#
if
__has_cpp_attribute
(
fallthrough
)
#
define
PROTOBUF_FALLTHROUGH_INTENDED
[
[
fallthrough
]
]
#
elif
__has_feature
(
cxx_attributes
)
&
&
__has_warning
(
"
-
Wimplicit
-
fallthrough
"
)
#
define
PROTOBUF_FALLTHROUGH_INTENDED
[
[
clang
:
:
fallthrough
]
]
#
elif
PROTOBUF_GNUC_MIN
(
7
0
)
#
define
PROTOBUF_FALLTHROUGH_INTENDED
[
[
gnu
:
:
fallthrough
]
]
#
else
#
define
PROTOBUF_FALLTHROUGH_INTENDED
#
endif
#
ifdef
PROTOBUF_ASSUME
#
error
PROTOBUF_ASSUME
was
previously
defined
#
endif
#
if
__has_builtin
(
__builtin_assume
)
#
define
PROTOBUF_ASSUME
(
pred
)
\
GOOGLE_DCHECK
(
pred
)
;
\
__builtin_assume
(
pred
)
#
else
#
define
PROTOBUF_ASSUME
(
pred
)
GOOGLE_DCHECK
(
pred
)
#
endif
#
ifdef
PROTOBUF_ALIGNAS
#
error
PROTOBUF_ALIGNAS
was
previously
defined
#
endif
#
if
defined
(
_MSC_VER
)
#
define
PROTOBUF_ALIGNAS
(
byte_alignment
)
__declspec
(
align
(
byte_alignment
)
)
#
elif
PROTOBUF_GNUC_MIN
(
3
0
)
#
define
PROTOBUF_ALIGNAS
(
byte_alignment
)
\
__attribute__
(
(
aligned
(
byte_alignment
)
)
)
#
else
#
define
PROTOBUF_ALIGNAS
(
byte_alignment
)
alignas
(
byte_alignment
)
#
endif
#
ifdef
PROTOBUF_FINAL
#
error
PROTOBUF_FINAL
was
previously
defined
#
endif
#
define
PROTOBUF_FINAL
final
#
ifdef
PROTOBUF_THREAD_LOCAL
#
error
PROTOBUF_THREAD_LOCAL
was
previously
defined
#
endif
#
if
defined
(
_MSC_VER
)
#
define
PROTOBUF_THREAD_LOCAL
__declspec
(
thread
)
#
else
#
define
PROTOBUF_THREAD_LOCAL
__thread
#
endif
#
if
(
defined
(
__BYTE_ORDER__
)
&
&
defined
(
__ORDER_LITTLE_ENDIAN__
)
&
&
\
__BYTE_ORDER__
=
=
__ORDER_LITTLE_ENDIAN__
)
#
define
PROTOBUF_LITTLE_ENDIAN
1
#
ifdef
PROTOBUF_BIG_ENDIAN
#
error
Conflicting
PROTOBUF_BIG_ENDIAN
was
previously
defined
#
endif
#
elif
defined
(
__BYTE_ORDER__
)
&
&
defined
(
__ORDER_BIG_ENDIAN__
)
&
&
\
__BYTE_ORDER__
=
=
__ORDER_BIG_ENDIAN__
#
define
PROTOBUF_BIG_ENDIAN
1
#
elif
defined
(
_WIN32
)
|
|
defined
(
__x86_64__
)
|
|
defined
(
__aarch64__
)
#
define
PROTOBUF_LITTLE_ENDIAN
1
#
else
#
error
"
endian
detection
failed
for
current
compiler
"
#
endif
#
define
PROTOBUF_MESSAGE_OWNED_ARENA_EXPERIMENT
#
ifdef
PROTOBUF_CONSTINIT
#
error
PROTOBUF_CONSTINIT
was
previously
defined
#
endif
#
if
defined
(
__cpp_constinit
)
&
&
!
defined
(
_MSC_VER
)
#
define
PROTOBUF_CONSTINIT
constinit
#
define
PROTOBUF_CONSTEXPR
constexpr
#
elif
!
defined
(
_MSC_VER
)
&
&
__has_cpp_attribute
(
clang
:
:
require_constant_initialization
)
&
&
\
(
(
defined
(
__APPLE__
)
&
&
__clang_major__
>
=
13
)
|
|
\
(
!
defined
(
__APPLE__
)
&
&
__clang_major__
>
=
12
)
)
#
define
PROTOBUF_CONSTINIT
[
[
clang
:
:
require_constant_initialization
]
]
#
define
PROTOBUF_CONSTEXPR
constexpr
#
elif
PROTOBUF_GNUC_MIN
(
12
2
)
#
define
PROTOBUF_CONSTINIT
__constinit
#
define
PROTOBUF_CONSTEXPR
constexpr
#
elif
defined
(
_MSC_VER
)
&
&
_MSC_VER
>
=
1930
#
define
PROTOBUF_CONSTINIT
#
define
PROTOBUF_CONSTEXPR
constexpr
#
else
#
define
PROTOBUF_CONSTINIT
#
define
PROTOBUF_CONSTEXPR
#
endif
#
ifdef
PROTOBUF_ATTRIBUTE_NO_DESTROY
#
error
PROTOBUF_ATTRIBUTE_NO_DESTROY
was
previously
defined
#
endif
#
if
__has_cpp_attribute
(
clang
:
:
no_destroy
)
#
define
PROTOBUF_ATTRIBUTE_NO_DESTROY
[
[
clang
:
:
no_destroy
]
]
#
else
#
define
PROTOBUF_ATTRIBUTE_NO_DESTROY
#
endif
#
ifdef
PROTOBUF_ATTRIBUTE_STANDALONE_DEBUG
#
error
PROTOBUF_ATTRIBUTE_STANDALONE_DEBUG
was
previously
defined
#
endif
#
if
__has_cpp_attribute
(
clang
:
:
standalone_debug
)
#
define
PROTOBUF_ATTRIBUTE_STANDALONE_DEBUG
[
[
clang
:
:
standalone_debug
]
]
#
else
#
define
PROTOBUF_ATTRIBUTE_STANDALONE_DEBUG
#
endif
#
ifdef
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
#
error
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
was
previously
defined
#
endif
#
ifdef
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
#
error
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
was
previously
defined
#
endif
#
if
PROTOBUF_GNUC_MIN
(
3
0
)
&
&
(
!
defined
(
__APPLE__
)
|
|
defined
(
__clang__
)
)
&
&
\
!
(
(
defined
(
sun
)
|
|
defined
(
__sun
)
)
&
&
\
(
defined
(
__SVR4
)
|
|
defined
(
__svr4__
)
)
)
#
define
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
__attribute__
(
(
init_priority
(
(
101
)
)
)
)
#
define
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
__attribute__
(
(
init_priority
(
(
102
)
)
)
)
#
else
#
define
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
#
define
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
#
endif
#
ifdef
PROTOBUF_PRAGMA_INIT_SEG
#
error
PROTOBUF_PRAGMA_INIT_SEG
was
previously
defined
#
endif
#
ifdef
_MSC_VER
#
define
PROTOBUF_PRAGMA_INIT_SEG
__pragma
(
init_seg
(
lib
)
)
#
else
#
define
PROTOBUF_PRAGMA_INIT_SEG
#
endif
#
ifdef
PROTOBUF_ATTRIBUTE_WEAK
#
error
PROTOBUF_ATTRIBUTE_WEAK
was
previously
defined
#
endif
#
if
__has_attribute
(
weak
)
&
&
\
!
defined
(
__APPLE__
)
&
&
\
(
!
defined
(
_WIN32
)
|
|
__clang_major__
<
9
)
&
&
\
!
defined
(
__MINGW32__
)
#
define
PROTOBUF_ATTRIBUTE_WEAK
__attribute__
(
(
weak
)
)
#
define
PROTOBUF_HAVE_ATTRIBUTE_WEAK
1
#
else
#
define
PROTOBUF_ATTRIBUTE_WEAK
#
define
PROTOBUF_HAVE_ATTRIBUTE_WEAK
0
#
endif
#
ifdef
PROTOBUF_ASAN
#
error
PROTOBUF_ASAN
was
previously
defined
#
endif
#
ifdef
PROTOBUF_MSAN
#
error
PROTOBUF_MSAN
was
previously
defined
#
endif
#
ifdef
PROTOBUF_TSAN
#
error
PROTOBUF_TSAN
was
previously
defined
#
endif
#
if
defined
(
__clang__
)
#
if
__has_feature
(
address_sanitizer
)
#
define
PROTOBUF_ASAN
1
#
endif
#
if
__has_feature
(
thread_sanitizer
)
#
define
PROTOBUF_TSAN
1
#
endif
#
if
__has_feature
(
memory_sanitizer
)
#
define
PROTOBUF_MSAN
1
#
endif
#
elif
PROTOBUF_GNUC_MIN
(
3
0
)
#
ifdef
__SANITIZE_ADDRESS__
#
if
__SANITIZE_ADDRESS__
#
define
PROTOBUF_ASAN
1
#
endif
#
endif
#
ifdef
__SANITIZE_THREAD__
#
if
__SANITIZE_THREAD__
#
define
PROTOBUF_TSAN
1
#
endif
#
endif
#
endif
#
ifdef
PROTOBUF_TAIL_CALL_TABLE_PARSER_ENABLED
#
error
PROTOBUF_TAIL_CALL_TABLE_PARSER_ENABLED
was
previously
declared
#
endif
#
if
defined
(
PROTOBUF_EXPERIMENTAL_USE_TAIL_CALL_TABLE_PARSER
)
#
define
PROTOBUF_TAIL_CALL_TABLE_PARSER_ENABLED
1
#
endif
#
define
PROTOBUF_TC_PARAM_DECL
\
:
:
google
:
:
protobuf
:
:
MessageLite
*
msg
const
char
*
ptr
\
:
:
google
:
:
protobuf
:
:
internal
:
:
ParseContext
*
ctx
\
const
:
:
google
:
:
protobuf
:
:
internal
:
:
TcParseTableBase
*
table
\
uint64_t
hasbits
:
:
google
:
:
protobuf
:
:
internal
:
:
TcFieldData
data
#
ifdef
PROTOBUF_UNUSED
#
error
PROTOBUF_UNUSED
was
previously
defined
#
endif
#
if
__has_cpp_attribute
(
maybe_unused
)
|
|
\
(
PROTOBUF_MSC_VER_MIN
(
1911
)
&
&
PROTOBUF_CPLUSPLUS_MIN
(
201703L
)
)
#
define
PROTOBUF_UNUSED
[
[
maybe_unused
]
]
#
elif
__has_attribute
(
unused
)
|
|
PROTOBUF_GNUC_MIN
(
3
0
)
#
define
PROTOBUF_UNUSED
__attribute__
(
(
__unused__
)
)
#
else
#
define
PROTOBUF_UNUSED
#
endif
#
ifdef
_MSC_VER
#
pragma
push_macro
(
"
CREATE_NEW
"
)
#
undef
CREATE_NEW
#
pragma
push_macro
(
"
DELETE
"
)
#
undef
DELETE
#
pragma
push_macro
(
"
DOUBLE_CLICK
"
)
#
undef
DOUBLE_CLICK
#
pragma
push_macro
(
"
ERROR
"
)
#
undef
ERROR
#
pragma
push_macro
(
"
ERROR_BUSY
"
)
#
undef
ERROR_BUSY
#
pragma
push_macro
(
"
ERROR_INSTALL_FAILED
"
)
#
undef
ERROR_INSTALL_FAILED
#
pragma
push_macro
(
"
ERROR_NOT_FOUND
"
)
#
undef
ERROR_NOT_FOUND
#
pragma
push_macro
(
"
GetClassName
"
)
#
undef
GetClassName
#
pragma
push_macro
(
"
GetMessage
"
)
#
undef
GetMessage
#
pragma
push_macro
(
"
GetObject
"
)
#
undef
GetObject
#
pragma
push_macro
(
"
IGNORE
"
)
#
undef
IGNORE
#
pragma
push_macro
(
"
IN
"
)
#
undef
IN
#
pragma
push_macro
(
"
INPUT_KEYBOARD
"
)
#
undef
INPUT_KEYBOARD
#
pragma
push_macro
(
"
NO_ERROR
"
)
#
undef
NO_ERROR
#
pragma
push_macro
(
"
OUT
"
)
#
undef
OUT
#
pragma
push_macro
(
"
OPTIONAL
"
)
#
undef
OPTIONAL
#
pragma
push_macro
(
"
min
"
)
#
undef
min
#
pragma
push_macro
(
"
max
"
)
#
undef
max
#
pragma
push_macro
(
"
NEAR
"
)
#
undef
NEAR
#
pragma
push_macro
(
"
NO_DATA
"
)
#
undef
NO_DATA
#
pragma
push_macro
(
"
REASON_UNKNOWN
"
)
#
undef
REASON_UNKNOWN
#
pragma
push_macro
(
"
SERVICE_DISABLED
"
)
#
undef
SERVICE_DISABLED
#
pragma
push_macro
(
"
SEVERITY_ERROR
"
)
#
undef
SEVERITY_ERROR
#
pragma
push_macro
(
"
STATUS_PENDING
"
)
#
undef
STATUS_PENDING
#
pragma
push_macro
(
"
STRICT
"
)
#
undef
STRICT
#
pragma
push_macro
(
"
timezone
"
)
#
undef
timezone
#
endif
#
ifdef
__APPLE__
#
pragma
push_macro
(
"
DOMAIN
"
)
#
undef
DOMAIN
#
pragma
push_macro
(
"
TRUE
"
)
#
undef
TRUE
#
pragma
push_macro
(
"
FALSE
"
)
#
undef
FALSE
#
pragma
push_macro
(
"
UID_MAX
"
)
#
undef
UID_MAX
#
endif
#
if
defined
(
__clang__
)
|
|
PROTOBUF_GNUC_MIN
(
3
0
)
|
|
defined
(
_MSC_VER
)
#
pragma
push_macro
(
"
DEBUG
"
)
#
undef
DEBUG
#
endif
#
if
PROTOBUF_GNUC_MIN
(
3
0
)
#
pragma
GCC
diagnostic
push
#
pragma
GCC
diagnostic
ignored
"
-
Winvalid
-
offsetof
"
#
endif
#
ifdef
_MSC_VER
#
pragma
warning
(
push
)
#
pragma
warning
(
disable
:
4582
)
#
pragma
warning
(
disable
:
4583
)
#
pragma
warning
(
disable
:
4073
)
#
pragma
warning
(
disable
:
5031
)
#
pragma
warning
(
disable
:
4127
)
#
pragma
warning
(
disable
:
4125
)
#
endif
#
ifdef
PROTOBUF_has_cpp_attribute_DEFINED_
#
undef
__has_cpp_attribute
#
undef
PROTOBUF_has_cpp_attribute_DEFINED_
#
endif
#
ifdef
PROTOBUF_has_feature_DEFINED_
#
undef
__has_feature
#
undef
PROTOBUF_has_feature_DEFINED_
#
endif
#
ifdef
PROTOBUF_has_warning_DEFINED_
#
undef
__has_warning
#
undef
PROTOBUF_has_warning_DEFINED_
#
endif
#
ifdef
PROTOBUF_has_attribute_DEFINED_
#
undef
__has_attribute
#
undef
PROTOBUF_has_attribute_DEFINED_
#
endif
#
ifdef
PROTOBUF_has_builtin_DEFINED_
#
undef
__has_builtin
#
undef
PROTOBUF_has_builtin_DEFINED_
#
endif
