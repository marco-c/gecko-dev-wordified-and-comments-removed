"
use
strict
"
;
const
FRAME_SCRIPT_UTILS_URL
=
"
chrome
:
/
/
browser
/
content
/
devtools
/
frame
-
script
-
utils
.
js
"
;
loader
.
lazyRequireGetter
(
this
"
Task
"
"
resource
:
/
/
gre
/
modules
/
Task
.
jsm
"
true
)
;
loader
.
lazyRequireGetter
(
this
"
uuid
"
"
sdk
/
util
/
uuid
"
true
)
;
let
mm
=
null
;
exports
.
consoleMethod
=
function
(
.
.
.
args
)
{
if
(
!
mm
)
{
throw
new
Error
(
"
PMM_loadFrameScripts
(
)
must
be
called
before
using
frame
scripts
.
"
)
;
}
if
(
args
[
1
]
=
=
null
)
{
args
[
1
]
=
"
"
;
}
mm
.
sendAsyncMessage
(
"
devtools
:
test
:
console
"
args
)
;
}
;
exports
.
PMM_isProfilerActive
=
function
(
)
{
return
sendProfilerCommand
(
"
IsActive
"
)
;
}
;
exports
.
PMM_stopProfiler
=
function
(
)
{
return
Task
.
spawn
(
function
*
(
)
{
let
isActive
=
(
yield
sendProfilerCommand
(
"
IsActive
"
)
)
.
isActive
;
if
(
isActive
)
{
return
sendProfilerCommand
(
"
StopProfiler
"
)
;
}
}
)
;
}
;
exports
.
PMM_loadFrameScripts
=
function
(
gBrowser
)
{
mm
=
gBrowser
.
selectedBrowser
.
messageManager
;
mm
.
loadFrameScript
(
FRAME_SCRIPT_UTILS_URL
false
)
;
}
;
function
sendProfilerCommand
(
method
args
=
[
]
)
{
if
(
!
mm
)
{
throw
new
Error
(
"
PMM_loadFrameScripts
(
)
must
be
called
when
using
MessageManager
.
"
)
;
}
let
id
=
uuid
(
)
.
toString
(
)
;
return
new
Promise
(
resolve
=
>
{
mm
.
addMessageListener
(
"
devtools
:
test
:
profiler
:
response
"
handler
)
;
mm
.
sendAsyncMessage
(
"
devtools
:
test
:
profiler
"
{
method
args
id
}
)
;
function
handler
(
{
data
}
)
{
if
(
id
!
=
=
data
.
id
)
{
return
;
}
mm
.
removeMessageListener
(
"
devtools
:
test
:
profiler
:
response
"
handler
)
;
resolve
(
data
.
data
)
;
}
}
)
;
}
exports
.
sendProfilerCommand
=
sendProfilerCommand
;
