"
use
strict
"
;
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
}
=
Components
;
const
env
=
Cc
[
"
mozilla
.
org
/
process
/
environment
;
1
"
]
.
getService
(
Ci
.
nsIEnvironment
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
AddonManager
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Timer
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
TestRunner
"
"
chrome
:
/
/
mozscreenshots
/
content
/
TestRunner
.
jsm
"
)
;
function
install
(
data
reason
)
{
if
(
!
isAppSupported
(
)
)
{
uninstallExtension
(
data
)
;
return
;
}
AddonManager
.
getAddonByID
(
data
.
id
function
(
addon
)
{
if
(
addon
)
{
addon
.
userDisabled
=
false
;
}
}
)
;
}
function
startup
(
data
reason
)
{
if
(
!
isAppSupported
(
)
)
{
uninstallExtension
(
data
)
;
return
;
}
AddonManager
.
getAddonByID
(
data
.
id
function
(
addon
)
{
let
extensionPath
=
addon
.
getResourceURI
(
)
;
TestRunner
.
init
(
extensionPath
)
;
}
)
;
}
function
shutdown
(
data
reason
)
{
}
function
uninstall
(
data
reason
)
{
}
function
isAppSupported
(
)
{
return
true
;
}
function
uninstallExtension
(
data
)
{
AddonManager
.
getAddonByID
(
data
.
id
function
(
addon
)
{
addon
.
uninstall
(
)
;
}
)
;
}
