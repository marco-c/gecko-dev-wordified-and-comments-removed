function
getErrorCode
(
)
{
var
url
=
document
.
documentURI
;
var
error
=
url
.
search
(
/
e
\
=
/
)
;
var
duffUrl
=
url
.
search
(
/
\
&
u
\
=
/
)
;
return
decodeURIComponent
(
url
.
slice
(
error
+
2
duffUrl
)
)
;
}
function
getURL
(
)
{
var
url
=
document
.
documentURI
;
var
match
=
url
.
match
(
/
&
u
=
(
[
^
&
]
+
)
&
/
)
;
if
(
!
match
)
return
"
"
;
url
=
decodeURIComponent
(
match
[
1
]
)
;
if
(
url
.
startsWith
(
"
view
-
source
:
"
)
)
url
=
url
.
slice
(
12
)
;
return
url
;
}
function
getOverride
(
)
{
var
url
=
document
.
documentURI
;
var
match
=
url
.
match
(
/
&
o
=
1
&
/
)
;
return
!
!
match
;
}
function
getHostString
(
)
{
try
{
return
document
.
location
.
hostname
;
}
catch
(
e
)
{
return
getURL
(
)
;
}
}
function
onClickSeeDetails
(
)
{
let
details
=
document
.
getElementById
(
"
errorDescriptionContainer
"
)
;
if
(
details
.
hidden
)
{
details
.
removeAttribute
(
"
hidden
"
)
;
}
else
{
details
.
setAttribute
(
"
hidden
"
"
true
"
)
;
}
}
function
initPage
(
)
{
var
error
=
"
"
;
switch
(
getErrorCode
(
)
)
{
case
"
malwareBlocked
"
:
error
=
"
malware
"
;
break
;
case
"
deceptiveBlocked
"
:
error
=
"
phishing
"
;
break
;
case
"
unwantedBlocked
"
:
error
=
"
unwanted
"
;
break
;
case
"
harmfulBlocked
"
:
error
=
"
harmful
"
;
break
;
default
:
return
;
}
let
titleText
=
document
.
getElementById
(
"
errorTitleText
"
)
;
document
.
l10n
.
setAttributes
(
titleText
"
safeb
-
blocked
-
"
+
error
+
"
-
page
-
title
"
)
;
let
shortDesc
=
document
.
getElementById
(
"
errorShortDescText
"
)
;
document
.
l10n
.
setAttributes
(
shortDesc
"
safeb
-
blocked
-
"
+
error
+
"
-
page
-
short
-
desc
"
)
;
let
innerDesc
=
document
.
getElementById
(
"
errorInnerDescription
"
)
;
let
innerDescL10nID
=
"
safeb
-
blocked
-
"
+
error
+
"
-
page
-
error
-
desc
-
"
;
if
(
!
getOverride
(
)
)
{
innerDescL10nID
+
=
"
no
-
override
"
;
document
.
getElementById
(
"
ignore_warning_link
"
)
.
remove
(
)
;
}
else
{
innerDescL10nID
+
=
"
override
"
;
}
if
(
error
=
=
"
unwanted
"
|
|
error
=
=
"
harmful
"
)
{
document
.
getElementById
(
"
report_detection
"
)
.
remove
(
)
;
}
document
.
l10n
.
setAttributes
(
innerDesc
innerDescL10nID
{
sitename
:
getHostString
(
)
}
)
;
let
learnMore
=
document
.
getElementById
(
"
learn_more
"
)
;
document
.
l10n
.
setAttributes
(
learnMore
"
safeb
-
blocked
-
"
+
error
+
"
-
page
-
learn
-
more
"
)
;
let
errorSitename
=
document
.
getElementById
(
"
error_desc_sitename
"
)
;
errorSitename
.
setAttribute
(
"
class
"
"
sitename
"
)
;
let
titleEl
=
document
.
createElement
(
"
title
"
)
;
document
.
l10n
.
setAttributes
(
titleEl
"
safeb
-
blocked
-
"
+
error
+
"
-
page
-
title
"
)
;
document
.
head
.
appendChild
(
titleEl
)
;
var
event
=
new
CustomEvent
(
"
AboutBlockedLoaded
"
{
bubbles
:
true
detail
:
{
url
:
this
.
getURL
(
)
err
:
error
}
}
)
;
document
.
dispatchEvent
(
event
)
;
}
let
seeDetailsButton
=
document
.
getElementById
(
"
seeDetailsButton
"
)
;
seeDetailsButton
.
addEventListener
(
"
click
"
onClickSeeDetails
)
;
initPage
(
)
;
