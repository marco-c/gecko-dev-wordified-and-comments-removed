var
gSharedTabWarning
=
{
willShowSharedTabWarning
(
tab
)
{
if
(
!
this
.
_sharedTabWarningEnabled
)
{
return
false
;
}
let
shareState
=
webrtcUI
.
getWindowShareState
(
window
)
;
if
(
shareState
=
=
webrtcUI
.
SHARING_NONE
)
{
return
false
;
}
if
(
!
webrtcUI
.
shouldShowSharedTabWarning
(
tab
)
)
{
return
false
;
}
this
.
_createSharedTabWarningIfNeeded
(
)
;
let
panel
=
document
.
getElementById
(
"
sharing
-
tabs
-
warning
-
panel
"
)
;
let
hbox
=
panel
.
firstChild
;
if
(
shareState
=
=
webrtcUI
.
SHARING_SCREEN
)
{
hbox
.
setAttribute
(
"
type
"
"
screen
"
)
;
panel
.
setAttribute
(
"
aria
-
labelledby
"
"
sharing
-
screen
-
warning
-
panel
-
header
-
span
"
)
;
}
else
{
hbox
.
setAttribute
(
"
type
"
"
window
"
)
;
panel
.
setAttribute
(
"
aria
-
labelledby
"
"
sharing
-
window
-
warning
-
panel
-
header
-
span
"
)
;
}
let
allowForSessionCheckbox
=
document
.
getElementById
(
"
sharing
-
warning
-
disable
-
for
-
session
"
)
;
allowForSessionCheckbox
.
checked
=
false
;
panel
.
openPopup
(
tab
"
bottomleft
topleft
"
0
0
)
;
return
true
;
}
sharedTabWarningShown
(
)
{
let
allowButton
=
document
.
getElementById
(
"
sharing
-
warning
-
proceed
-
to
-
tab
"
)
;
allowButton
.
focus
(
)
;
}
allowSharedTabSwitch
(
)
{
let
panel
=
document
.
getElementById
(
"
sharing
-
tabs
-
warning
-
panel
"
)
;
let
allowForSession
=
document
.
getElementById
(
"
sharing
-
warning
-
disable
-
for
-
session
"
)
.
checked
;
let
tab
=
panel
.
anchorNode
;
webrtcUI
.
allowSharedTabSwitch
(
tab
allowForSession
)
;
this
.
_hideSharedTabWarning
(
)
;
}
tabAdded
(
tab
)
{
if
(
this
.
_sharedTabWarningEnabled
)
{
let
shareState
=
webrtcUI
.
getWindowShareState
(
window
)
;
if
(
shareState
!
=
webrtcUI
.
SHARING_NONE
)
{
webrtcUI
.
tabAddedWhileSharing
(
tab
)
;
}
}
}
get
_sharedTabWarningEnabled
(
)
{
delete
this
.
_sharedTabWarningEnabled
;
XPCOMUtils
.
defineLazyPreferenceGetter
(
this
"
_sharedTabWarningEnabled
"
"
privacy
.
webrtc
.
sharedTabWarning
"
)
;
return
this
.
_sharedTabWarningEnabled
;
}
_hideSharedTabWarning
(
)
{
let
panel
=
document
.
getElementById
(
"
sharing
-
tabs
-
warning
-
panel
"
)
;
if
(
panel
)
{
panel
.
hidePopup
(
)
;
}
}
_createSharedTabWarningIfNeeded
(
)
{
if
(
!
document
.
getElementById
(
"
sharing
-
tabs
-
warning
-
panel
"
)
)
{
let
template
=
document
.
getElementById
(
"
sharing
-
tabs
-
warning
-
panel
-
template
"
)
;
template
.
replaceWith
(
template
.
content
)
;
}
}
}
;
