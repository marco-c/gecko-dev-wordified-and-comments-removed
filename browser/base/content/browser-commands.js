"
use
strict
"
;
var
BrowserCommands
=
{
back
(
aEvent
)
{
const
where
=
BrowserUtils
.
whereToOpenLink
(
aEvent
false
true
)
;
if
(
where
=
=
"
current
"
)
{
try
{
gBrowser
.
goBack
(
)
;
}
catch
(
ex
)
{
}
}
else
{
duplicateTabIn
(
gBrowser
.
selectedTab
where
-
1
)
;
}
}
forward
(
aEvent
)
{
const
where
=
BrowserUtils
.
whereToOpenLink
(
aEvent
false
true
)
;
if
(
where
=
=
"
current
"
)
{
try
{
gBrowser
.
goForward
(
)
;
}
catch
(
ex
)
{
}
}
else
{
duplicateTabIn
(
gBrowser
.
selectedTab
where
1
)
;
}
}
handleBackspace
(
)
{
switch
(
Services
.
prefs
.
getIntPref
(
"
browser
.
backspace_action
"
)
)
{
case
0
:
this
.
back
(
)
;
break
;
case
1
:
goDoCommand
(
"
cmd_scrollPageUp
"
)
;
break
;
}
}
handleShiftBackspace
(
)
{
switch
(
Services
.
prefs
.
getIntPref
(
"
browser
.
backspace_action
"
)
)
{
case
0
:
this
.
forward
(
)
;
break
;
case
1
:
goDoCommand
(
"
cmd_scrollPageDown
"
)
;
break
;
}
}
gotoHistoryIndex
(
aEvent
)
{
aEvent
=
BrowserUtils
.
getRootEvent
(
aEvent
)
;
const
index
=
aEvent
.
target
.
getAttribute
(
"
index
"
)
;
if
(
!
index
)
{
return
false
;
}
const
where
=
BrowserUtils
.
whereToOpenLink
(
aEvent
)
;
if
(
where
=
=
"
current
"
)
{
try
{
gBrowser
.
gotoIndex
(
index
)
;
}
catch
(
ex
)
{
return
false
;
}
return
true
;
}
const
historyindex
=
aEvent
.
target
.
getAttribute
(
"
historyindex
"
)
;
duplicateTabIn
(
gBrowser
.
selectedTab
where
Number
(
historyindex
)
)
;
return
true
;
}
}
;
