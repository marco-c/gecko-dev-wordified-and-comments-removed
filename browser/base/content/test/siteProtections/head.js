var
protectionsPopup
=
document
.
getElementById
(
"
protections
-
popup
"
)
;
var
protectionsPopupMainView
=
document
.
getElementById
(
"
protections
-
popup
-
mainView
"
)
;
var
protectionsPopupHeader
=
document
.
getElementById
(
"
protections
-
popup
-
mainView
-
panel
-
header
"
)
;
async
function
openProtectionsPanel
(
toast
)
{
let
popupShownPromise
=
BrowserTestUtils
.
waitForEvent
(
protectionsPopup
"
popupshown
"
)
;
let
shieldIconContainer
=
document
.
getElementById
(
"
tracking
-
protection
-
icon
-
container
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
gURLBar
.
textbox
{
type
:
"
mousemove
"
}
)
;
EventUtils
.
synthesizeMouseAtCenter
(
shieldIconContainer
{
type
:
"
mousemove
"
}
)
;
if
(
!
toast
)
{
EventUtils
.
synthesizeMouseAtCenter
(
shieldIconContainer
{
}
)
;
}
else
{
gProtectionsHandler
.
showProtectionsPopup
(
{
toast
}
)
;
}
await
popupShownPromise
;
}
async
function
openProtectionsPanelWithKeyNav
(
)
{
let
popupShownPromise
=
BrowserTestUtils
.
waitForEvent
(
protectionsPopup
"
popupshown
"
)
;
gURLBar
.
focus
(
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Tab
"
{
shiftKey
:
true
}
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Enter
"
{
}
)
;
await
popupShownPromise
;
}
async
function
closeProtectionsPanel
(
)
{
let
popuphiddenPromise
=
BrowserTestUtils
.
waitForEvent
(
protectionsPopup
"
popuphidden
"
)
;
PanelMultiView
.
hidePopup
(
protectionsPopup
)
;
await
popuphiddenPromise
;
}
