"
use
strict
"
;
const
TRACKING_PAGE
=
"
http
:
/
/
tracking
.
example
.
org
/
browser
/
browser
/
base
/
content
/
test
/
protectionsUI
/
trackingPage
.
html
"
;
add_setup
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
protections_panel
.
toast
.
timeout
"
100
]
[
"
browser
.
contentblocking
.
report
.
monitor
.
enabled
"
false
]
[
"
browser
.
contentblocking
.
report
.
lockwise
.
enabled
"
false
]
[
"
browser
.
contentblocking
.
report
.
proxy
.
enabled
"
false
]
[
"
privacy
.
trackingprotection
.
enabled
"
true
]
[
"
browser
.
protections_panel
.
infoMessage
.
seen
"
false
]
]
}
)
;
let
oldCanRecord
=
Services
.
telemetry
.
canRecordExtended
;
Services
.
telemetry
.
canRecordExtended
=
true
;
Services
.
telemetry
.
clearEvents
(
)
;
registerCleanupFunction
(
(
)
=
>
{
Services
.
telemetry
.
canRecordExtended
=
oldCanRecord
;
Services
.
telemetry
.
clearEvents
(
)
;
}
)
;
Services
.
fog
.
testResetFOG
(
)
;
}
)
;
add_task
(
async
function
testPanelInfoMessage
(
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
TRACKING_PAGE
)
;
await
openProtectionsPanel
(
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
{
return
gProtectionsHandler
.
_protectionsPopup
.
hasAttribute
(
"
infoMessageShowing
"
)
;
}
)
;
let
container
=
document
.
getElementById
(
"
info
-
message
-
container
"
)
;
let
message
=
document
.
getElementById
(
"
protections
-
popup
-
message
"
)
;
let
learnMoreLink
=
document
.
querySelector
(
"
#
info
-
message
-
container
.
text
-
link
"
)
;
ok
(
BrowserTestUtils
.
isVisible
(
container
)
"
The
message
container
should
exist
.
"
)
;
ok
(
BrowserTestUtils
.
isVisible
(
message
)
"
The
message
should
be
visible
.
"
)
;
ok
(
BrowserTestUtils
.
isVisible
(
learnMoreLink
)
"
The
link
should
be
visible
.
"
)
;
let
messageEvents
=
Glean
.
securityUiProtectionspopup
.
openProtectionspopupCfr
.
testGetValue
(
)
;
is
(
messageEvents
.
length
1
"
recorded
telemetry
for
showing
the
info
message
"
)
;
Services
.
telemetry
.
clearEvents
(
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
