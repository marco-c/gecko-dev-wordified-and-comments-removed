"
use
strict
"
;
add_task
(
async
function
addNewTab_mouseup_submenu
(
)
{
let
newTabButton
=
gBrowser
.
tabContainer
.
newTabButton
;
ok
(
newTabButton
"
New
tab
button
exists
"
)
;
ok
(
!
newTabButton
.
hidden
"
New
tab
button
is
visible
"
)
;
let
popupShownPromise
=
BrowserTestUtils
.
waitForEvent
(
newTabButton
.
menupopup
"
popupshown
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
newTabButton
{
type
:
"
mousedown
"
}
)
;
await
popupShownPromise
;
await
new
Promise
(
r
=
>
setTimeout
(
r
300
)
)
;
const
menuItem
=
newTabButton
.
menupopup
.
firstChild
;
let
mousemoveEvent
=
BrowserTestUtils
.
waitForEvent
(
menuItem
"
mousemove
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
menuItem
{
type
:
"
mousemove
"
}
)
;
await
mousemoveEvent
;
let
atLeastOneTabIsOpened
=
BrowserTestUtils
.
waitForEvent
(
gBrowser
.
tabContainer
"
TabOpen
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
menuItem
{
type
:
"
mouseup
"
}
)
;
await
atLeastOneTabIsOpened
;
await
Promise
.
resolve
(
)
;
Assert
.
equal
(
gBrowser
.
tabs
.
length
2
)
;
BrowserTestUtils
.
removeTab
(
gBrowser
.
selectedTab
)
;
}
)
;
