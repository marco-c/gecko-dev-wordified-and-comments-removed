async
function
openContextMenu
(
)
{
let
contextMenu
=
document
.
getElementById
(
"
tabContextMenu
"
)
;
let
popupShown
=
BrowserTestUtils
.
waitForEvent
(
contextMenu
"
popupshown
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
gBrowser
.
selectedTab
{
type
:
"
contextmenu
"
button
:
2
}
)
;
await
popupShown
;
}
async
function
closeContextMenu
(
)
{
let
contextMenu
=
document
.
getElementById
(
"
tabContextMenu
"
)
;
let
popupHidden
=
BrowserTestUtils
.
waitForEvent
(
contextMenu
"
popuphidden
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Escape
"
)
;
await
popupHidden
;
}
add_task
(
async
function
test
(
)
{
if
(
Services
.
prefs
.
getBoolPref
(
"
widget
.
macos
.
native
-
context
-
menus
"
false
)
)
{
ok
(
true
"
This
bug
is
not
possible
when
native
context
menus
are
enabled
on
macOS
.
"
)
;
return
;
}
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
accessibility
.
tabfocus
"
7
]
]
}
)
;
let
tab1
=
gBrowser
.
selectedTab
;
let
tab2
=
BrowserTestUtils
.
addTab
(
gBrowser
)
;
tab1
.
focus
(
)
;
is
(
document
.
activeElement
tab1
"
tab1
should
be
focused
"
)
;
await
openContextMenu
(
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowDown
"
)
;
await
closeContextMenu
(
)
;
is
(
gBrowser
.
selectedTab
tab1
"
tab1
should
still
be
active
"
)
;
if
(
AppConstants
.
platform
=
=
"
macosx
"
)
{
tab1
.
focus
(
)
;
}
is
(
document
.
activeElement
tab1
"
tab1
should
be
focused
"
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
(
)
=
>
EventUtils
.
synthesizeKey
(
"
KEY_ArrowDown
"
)
)
;
is
(
gBrowser
.
selectedTab
tab2
"
should
have
switched
to
tab2
"
)
;
is
(
document
.
activeElement
tab2
"
tab2
should
now
be
focused
"
)
;
await
openContextMenu
(
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowUp
"
)
;
await
closeContextMenu
(
)
;
is
(
gBrowser
.
selectedTab
tab2
"
tab2
should
still
be
active
"
)
;
gBrowser
.
removeTab
(
tab2
)
;
}
)
;
