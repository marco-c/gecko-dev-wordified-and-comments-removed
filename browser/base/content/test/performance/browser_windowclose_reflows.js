"
use
strict
"
;
const
EXPECTED_REFLOWS
=
[
]
;
add_task
(
function
*
(
)
{
yield
new
Promise
(
resolve
=
>
{
waitForFocus
(
resolve
window
)
;
}
)
;
let
win
=
yield
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
yield
new
Promise
(
resolve
=
>
{
waitForFocus
(
resolve
win
)
;
}
)
;
Assert
.
equal
(
EXPECTED_REFLOWS
.
length
0
"
We
shouldn
'
t
have
added
any
new
expected
reflows
for
window
close
.
"
)
;
yield
withReflowObserver
(
async
function
(
)
{
let
promiseOrigBrowserFocused
=
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
{
return
Services
.
focus
.
activeWindow
=
=
window
;
}
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
await
promiseOrigBrowserFocused
;
}
EXPECTED_REFLOWS
win
)
;
}
)
;
