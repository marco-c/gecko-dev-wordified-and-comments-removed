"
use
strict
"
;
const
EXPECTED_REFLOWS
=
[
]
;
add_task
(
async
function
(
)
{
let
preloaded
=
gBrowser
.
_getPreloadedBrowser
(
)
;
if
(
preloaded
)
{
preloaded
.
remove
(
)
;
}
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
newtab
.
preload
"
false
]
]
}
)
;
let
aboutNewTabService
=
Cc
[
"
mozilla
.
org
/
browser
/
aboutnewtab
-
service
;
1
"
]
.
getService
(
Ci
.
nsIAboutNewTabService
)
;
aboutNewTabService
.
newTabURL
=
"
about
:
blank
"
;
registerCleanupFunction
(
(
)
=
>
{
aboutNewTabService
.
resetNewTabURL
(
)
;
}
)
;
let
origTab
=
gBrowser
.
selectedTab
;
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
tab
.
_fullyOpen
)
;
await
withReflowObserver
(
async
function
(
)
{
let
switchDone
=
BrowserTestUtils
.
waitForEvent
(
window
"
TabSwitchDone
"
)
;
gBrowser
.
removeTab
(
tab
{
animate
:
true
}
)
;
await
BrowserTestUtils
.
waitForEvent
(
tab
"
transitionend
"
false
e
=
>
e
.
propertyName
=
=
=
"
max
-
width
"
)
;
await
switchDone
;
}
EXPECTED_REFLOWS
window
origTab
)
;
is
(
EXPECTED_REFLOWS
.
length
0
"
No
reflows
are
expected
when
closing
a
tab
"
)
;
}
)
;
