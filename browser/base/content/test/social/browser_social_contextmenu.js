var
SocialService
=
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
SocialService
.
jsm
"
{
}
)
.
SocialService
;
var
manifest
=
{
name
:
"
provider
test1
"
origin
:
"
https
:
/
/
test1
.
example
.
com
"
workerURL
:
"
https
:
/
/
test1
.
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
social
/
social_worker
.
js
"
markURL
:
"
https
:
/
/
test1
.
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
social
/
social_mark
.
html
?
url
=
%
{
url
}
"
markedIcon
:
"
https
:
/
/
test1
.
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
social
/
unchecked
.
jpg
"
unmarkedIcon
:
"
https
:
/
/
test1
.
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
social
/
checked
.
jpg
"
iconURL
:
"
https
:
/
/
test1
.
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
general
/
moz
.
png
"
version
:
"
1
.
0
"
}
;
function
test
(
)
{
waitForExplicitFinish
(
)
;
runSocialTestWithProvider
(
manifest
function
(
finishcb
)
{
runSocialTests
(
tests
undefined
undefined
function
(
)
{
finishcb
(
)
;
}
)
;
}
)
;
}
var
tests
=
{
testMarkMicroformats
:
function
(
next
)
{
let
provider
=
Social
.
_getProviderFromOrigin
(
manifest
.
origin
)
;
let
port
=
provider
.
getWorkerPort
(
)
;
let
target
testTab
;
let
expecting
=
JSON
.
stringify
(
{
"
url
"
:
"
https
:
/
/
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
social
/
microformats
.
html
"
"
microformats
"
:
{
"
items
"
:
[
{
"
type
"
:
[
"
h
-
review
"
]
"
properties
"
:
{
"
rating
"
:
[
"
4
.
5
"
]
}
}
]
"
rels
"
:
{
}
"
rel
-
urls
"
:
{
}
}
}
)
;
port
.
onmessage
=
function
(
e
)
{
let
topic
=
e
.
data
.
topic
;
switch
(
topic
)
{
case
"
got
-
share
-
data
-
message
"
:
is
(
JSON
.
stringify
(
e
.
data
.
result
)
expecting
"
microformats
data
ok
"
)
;
gBrowser
.
removeTab
(
testTab
)
;
port
.
close
(
)
;
next
(
)
;
break
;
}
}
port
.
postMessage
(
{
topic
:
"
test
-
init
"
}
)
;
let
url
=
"
https
:
/
/
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
social
/
microformats
.
html
"
addTab
(
url
function
(
tab
)
{
testTab
=
tab
;
let
doc
=
tab
.
linkedBrowser
.
contentDocument
;
target
=
doc
.
getElementById
(
"
test
-
review
"
)
;
SocialMarks
.
markLink
(
manifest
.
origin
url
target
)
;
}
)
;
}
}
