ChromeUtils
.
defineModuleGetter
(
this
"
WindowsRegistry
"
"
resource
:
/
/
gre
/
modules
/
WindowsRegistry
.
jsm
"
)
;
function
readRegKeyExtended
(
aRoot
aPath
aKey
aRegistryNode
=
0
)
{
const
kRegMultiSz
=
7
;
const
kMode
=
Ci
.
nsIWindowsRegKey
.
ACCESS_READ
|
aRegistryNode
;
let
registry
=
Cc
[
"
mozilla
.
org
/
windows
-
registry
-
key
;
1
"
]
.
createInstance
(
Ci
.
nsIWindowsRegKey
)
;
try
{
registry
.
open
(
aRoot
aPath
kMode
)
;
if
(
registry
.
hasValue
(
aKey
)
)
{
let
type
=
registry
.
getValueType
(
aKey
)
;
switch
(
type
)
{
case
kRegMultiSz
:
let
str
=
registry
.
readStringValue
(
aKey
)
;
return
str
.
split
(
"
\
0
"
)
.
filter
(
v
=
>
v
)
;
case
Ci
.
nsIWindowsRegKey
.
TYPE_STRING
:
return
registry
.
readStringValue
(
aKey
)
;
case
Ci
.
nsIWindowsRegKey
.
TYPE_INT
:
return
registry
.
readIntValue
(
aKey
)
;
case
Ci
.
nsIWindowsRegKey
.
TYPE_BINARY
:
return
registry
.
readBinaryValue
(
aKey
)
;
default
:
throw
new
Error
(
"
Unsupported
registry
value
.
"
)
;
}
}
}
catch
(
ex
)
{
}
finally
{
registry
.
close
(
)
;
}
return
undefined
;
}
add_task
(
async
function
testWritesEnabledOnPrefChange
(
)
{
Services
.
prefs
.
setBoolPref
(
"
browser
.
startup
.
preXulSkeletonUI
"
true
)
;
const
win
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
let
enabled
=
WindowsRegistry
.
readRegKey
(
Ci
.
nsIWindowsRegKey
.
ROOT_KEY_CURRENT_USER
"
Software
\
\
Mozilla
\
\
Firefox
\
\
PreXULSkeletonUISettings
"
"
enabled
"
)
;
is
(
enabled
1
"
Pre
-
XUL
skeleton
UI
is
enabled
in
the
Windows
registry
"
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
startup
.
preXulSkeletonUI
"
false
)
;
enabled
=
WindowsRegistry
.
readRegKey
(
Ci
.
nsIWindowsRegKey
.
ROOT_KEY_CURRENT_USER
"
Software
\
\
Mozilla
\
\
Firefox
\
\
PreXULSkeletonUISettings
"
"
enabled
"
)
;
is
(
enabled
0
"
Pre
-
XUL
skeleton
UI
is
disabled
in
the
Windows
registry
"
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
}
)
;
add_task
(
async
function
testWritesSizeValuesOnChange
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
startup
.
preXulSkeletonUI
"
true
]
]
}
)
;
const
regKeys
=
[
"
width
"
"
height
"
"
screenX
"
"
screenY
"
"
cssToDevPixelScaling
"
]
;
for
(
let
key
of
regKeys
)
{
WindowsRegistry
.
removeRegKey
(
Ci
.
nsIWindowsRegKey
.
ROOT_KEY_CURRENT_USER
"
Software
\
\
Mozilla
\
\
Firefox
\
\
PreXULSkeletonUISettings
"
key
)
;
}
const
win
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
for
(
let
key
of
regKeys
)
{
let
value
=
readRegKeyExtended
(
Ci
.
nsIWindowsRegKey
.
ROOT_KEY_CURRENT_USER
"
Software
\
\
Mozilla
\
\
Firefox
\
\
PreXULSkeletonUISettings
"
key
)
;
ok
(
value
Skeleton
UI
registry
values
should
have
a
non
-
zero
value
for
{
key
}
)
;
if
(
value
.
length
)
{
let
hasNonZero
=
false
;
for
(
var
i
=
0
;
i
<
value
.
length
;
i
+
+
)
{
hasNonZero
=
hasNonZero
|
|
value
[
i
]
;
}
ok
(
hasNonZero
Value
should
have
non
-
zero
components
for
{
key
}
)
;
}
}
await
BrowserTestUtils
.
closeWindow
(
win
)
;
}
)
;
