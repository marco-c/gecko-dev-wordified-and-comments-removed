"
use
strict
"
;
const
TEST_URL
=
"
http
:
/
/
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
tabcrashed
/
file_contains_emptyiframe
.
html
"
;
const
DOMAIN
=
"
example
.
com
"
;
add_task
(
async
function
test
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
print
.
tab_modal
.
enabled
"
false
]
]
}
)
;
let
newTab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
TEST_URL
)
;
let
browser
=
newTab
.
linkedBrowser
;
await
SpecialPowers
.
spawn
(
browser
[
]
async
function
(
)
{
const
iframe
=
content
.
document
.
querySelector
(
"
iframe
"
)
;
const
loaded
=
new
Promise
(
resolve
=
>
{
iframe
.
addEventListener
(
"
load
"
(
)
=
>
{
resolve
(
)
;
}
{
once
:
true
}
)
;
}
)
;
iframe
.
src
=
"
http
:
/
/
test1
.
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
tabcrashed
/
file_iframe
.
html
"
;
await
loaded
;
}
)
;
await
SpecialPowers
.
spawn
(
browser
[
DOMAIN
]
async
function
(
domain
)
{
content
.
document
.
domain
=
domain
;
}
)
;
const
iframe
=
await
SpecialPowers
.
spawn
(
browser
[
]
(
)
=
>
{
return
content
.
document
.
querySelector
(
"
iframe
"
)
.
browsingContext
;
}
)
;
await
SpecialPowers
.
spawn
(
iframe
[
DOMAIN
]
domain
=
>
{
content
.
document
.
domain
=
domain
;
}
)
;
ok
(
!
gInPrintPreviewMode
"
Should
NOT
be
in
print
preview
mode
at
the
start
of
this
test
.
"
)
;
let
ppBrowser
=
PrintPreviewListener
.
getPrintPreviewBrowser
(
)
;
const
{
PrintingParent
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
actors
/
PrintingParent
.
jsm
"
)
;
let
printPreviewEntered
=
new
Promise
(
resolve
=
>
{
PrintingParent
.
setTestListener
(
browserPreviewing
=
>
{
if
(
browserPreviewing
=
=
ppBrowser
)
{
PrintingParent
.
setTestListener
(
null
)
;
resolve
(
)
;
}
}
)
;
}
)
;
document
.
getElementById
(
"
cmd_printPreview
"
)
.
doCommand
(
)
;
await
printPreviewEntered
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
gInPrintPreviewMode
"
Should
be
in
print
preview
mode
now
.
"
)
;
ok
(
true
"
We
did
not
crash
.
"
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
(
)
=
>
{
PrintUtils
.
exitPrintPreview
(
)
;
}
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
!
window
.
gInPrintPreviewMode
)
;
info
(
"
We
are
not
in
print
preview
anymore
.
"
)
;
BrowserTestUtils
.
removeTab
(
newTab
)
;
}
)
;
