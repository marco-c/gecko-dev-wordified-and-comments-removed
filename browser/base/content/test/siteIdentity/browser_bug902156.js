const
PREF_ACTIVE
=
"
security
.
mixed_content
.
block_active_content
"
;
const
HTTPS_TEST_ROOT_1
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
https
:
/
/
test1
.
example
.
com
"
)
;
const
HTTPS_TEST_ROOT_2
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
https
:
/
/
test2
.
example
.
com
"
)
;
var
origBlockActive
;
var
gTestBrowser
=
null
;
registerCleanupFunction
(
function
(
)
{
Services
.
prefs
.
setBoolPref
(
PREF_ACTIVE
origBlockActive
)
;
}
)
;
function
cleanUpAfterTests
(
)
{
gBrowser
.
removeCurrentTab
(
)
;
window
.
focus
(
)
;
finish
(
)
;
}
function
test1A
(
)
{
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
.
then
(
test1B
)
;
assertMixedContentBlockingState
(
gTestBrowser
{
activeLoaded
:
false
activeBlocked
:
true
passiveLoaded
:
false
}
)
;
let
{
gIdentityHandler
}
=
gTestBrowser
.
ownerGlobal
;
gIdentityHandler
.
disableMixedContentProtection
(
)
;
}
function
test1B
(
)
{
var
expected
=
"
Mixed
Content
Blocker
disabled
"
;
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
content
.
document
.
getElementById
(
"
mctestdiv
"
)
.
innerHTML
=
=
expected
"
Error
:
Waited
too
long
for
mixed
script
to
run
in
Test
1B
"
)
.
then
(
test1C
)
;
}
function
test1C
(
)
{
var
actual
=
content
.
document
.
getElementById
(
"
mctestdiv
"
)
.
innerHTML
;
is
(
actual
"
Mixed
Content
Blocker
disabled
"
"
OK
:
Executed
mixed
script
in
Test
1C
"
)
;
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
.
then
(
test1D
)
;
var
url
=
HTTPS_TEST_ROOT_1
+
"
file_bug902156_2
.
html
"
;
gTestBrowser
.
loadURI
(
url
)
;
}
function
test1D
(
)
{
assertMixedContentBlockingState
(
gTestBrowser
{
activeLoaded
:
true
activeBlocked
:
false
passiveLoaded
:
false
}
)
;
var
actual
=
content
.
document
.
getElementById
(
"
mctestdiv
"
)
.
innerHTML
;
is
(
actual
"
Mixed
Content
Blocker
disabled
"
"
OK
:
Executed
mixed
script
in
Test
1D
"
)
;
test2
(
)
;
}
function
test2
(
)
{
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
.
then
(
test2A
)
;
var
url
=
HTTPS_TEST_ROOT_2
+
"
file_bug902156_2
.
html
"
;
gTestBrowser
.
loadURI
(
url
)
;
}
function
test2A
(
)
{
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
.
then
(
test2B
)
;
assertMixedContentBlockingState
(
gTestBrowser
{
activeLoaded
:
false
activeBlocked
:
true
passiveLoaded
:
false
}
)
;
let
{
gIdentityHandler
}
=
gTestBrowser
.
ownerGlobal
;
gIdentityHandler
.
disableMixedContentProtection
(
)
;
}
function
test2B
(
)
{
var
expected
=
"
Mixed
Content
Blocker
disabled
"
;
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
content
.
document
.
getElementById
(
"
mctestdiv
"
)
.
innerHTML
=
=
expected
"
Error
:
Waited
too
long
for
mixed
script
to
run
in
Test
2B
"
)
.
then
(
test2C
)
;
}
function
test2C
(
)
{
var
actual
=
content
.
document
.
getElementById
(
"
mctestdiv
"
)
.
innerHTML
;
is
(
actual
"
Mixed
Content
Blocker
disabled
"
"
OK
:
Executed
mixed
script
in
Test
2C
"
)
;
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
.
then
(
test2D
)
;
var
mctestlink
=
content
.
document
.
getElementById
(
"
mctestlink
"
)
;
mctestlink
.
click
(
)
;
}
function
test2D
(
)
{
assertMixedContentBlockingState
(
gTestBrowser
{
activeLoaded
:
true
activeBlocked
:
false
passiveLoaded
:
false
}
)
;
var
actual
=
content
.
document
.
getElementById
(
"
mctestdiv
"
)
.
innerHTML
;
is
(
actual
"
Mixed
Content
Blocker
disabled
"
"
OK
:
Executed
mixed
script
in
Test
2D
"
)
;
test3
(
)
;
}
function
test3
(
)
{
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
.
then
(
test3A
)
;
var
url
=
HTTPS_TEST_ROOT_1
+
"
file_bug902156_3
.
html
"
;
gTestBrowser
.
loadURI
(
url
)
;
}
function
test3A
(
)
{
assertMixedContentBlockingState
(
gTestBrowser
{
activeLoaded
:
false
activeBlocked
:
true
passiveLoaded
:
false
}
)
;
cleanUpAfterTests
(
)
;
}
function
test
(
)
{
waitForExplicitFinish
(
)
;
origBlockActive
=
Services
.
prefs
.
getBoolPref
(
PREF_ACTIVE
)
;
Services
.
prefs
.
setBoolPref
(
PREF_ACTIVE
true
)
;
var
newTab
=
BrowserTestUtils
.
addTab
(
gBrowser
)
;
gBrowser
.
selectedTab
=
newTab
;
gTestBrowser
=
gBrowser
.
selectedBrowser
;
newTab
.
linkedBrowser
.
stop
(
)
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
.
then
(
test1A
)
;
var
url
=
HTTPS_TEST_ROOT_1
+
"
file_bug902156_1
.
html
"
;
gTestBrowser
.
loadURI
(
url
)
;
}
