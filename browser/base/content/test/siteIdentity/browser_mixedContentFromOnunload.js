const
HTTP_TEST_ROOT_1
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
http
:
/
/
example
.
com
"
)
;
const
HTTPS_TEST_ROOT_1
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
https
:
/
/
test1
.
example
.
com
"
)
;
const
HTTP_TEST_ROOT_2
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
http
:
/
/
example
.
net
"
)
;
const
HTTPS_TEST_ROOT_2
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
https
:
/
/
test2
.
example
.
com
"
)
;
add_task
(
function
*
(
)
{
let
url
=
HTTP_TEST_ROOT_1
+
"
file_mixedContentFromOnunload
.
html
"
;
yield
BrowserTestUtils
.
withNewTab
(
url
function
*
(
browser
)
{
yield
SpecialPowers
.
pushPrefEnv
(
{
"
set
"
:
[
[
"
security
.
mixed_content
.
block_active_content
"
true
]
[
"
security
.
mixed_content
.
block_display_content
"
false
]
]
}
)
;
url
=
HTTPS_TEST_ROOT_1
+
"
file_mixedContentFromOnunload_test1
.
html
"
;
yield
BrowserTestUtils
.
loadURI
(
browser
url
)
;
yield
BrowserTestUtils
.
browserLoaded
(
browser
)
;
isSecurityState
(
browser
"
secure
"
)
;
assertMixedContentBlockingState
(
browser
{
activeLoaded
:
false
activeBlocked
:
false
passiveLoaded
:
false
}
)
;
url
=
HTTP_TEST_ROOT_2
+
"
file_mixedContentFromOnunload
.
html
"
;
yield
BrowserTestUtils
.
loadURI
(
browser
url
)
;
yield
BrowserTestUtils
.
browserLoaded
(
browser
)
;
url
=
HTTPS_TEST_ROOT_2
+
"
file_mixedContentFromOnunload_test2
.
html
"
;
yield
BrowserTestUtils
.
loadURI
(
browser
url
)
;
yield
BrowserTestUtils
.
browserLoaded
(
browser
)
;
isSecurityState
(
browser
"
broken
"
)
;
assertMixedContentBlockingState
(
browser
{
activeLoaded
:
false
activeBlocked
:
false
passiveLoaded
:
true
}
)
;
}
)
;
}
)
;
