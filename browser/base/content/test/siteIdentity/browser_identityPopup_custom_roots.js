const
TEST_PATH
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
https
:
/
/
example
.
com
"
)
;
add_task
(
async
function
test_https
(
)
{
await
BrowserTestUtils
.
withNewTab
(
"
https
:
/
/
example
.
com
"
async
function
(
)
{
let
promisePanelOpen
=
BrowserTestUtils
.
waitForEvent
(
gIdentityHandler
.
_identityPopup
"
popupshown
"
)
;
gIdentityHandler
.
_identityBox
.
click
(
)
;
await
promisePanelOpen
;
let
customRootWarning
=
document
.
getElementById
(
"
identity
-
popup
-
security
-
decription
-
custom
-
root
"
)
;
ok
(
BrowserTestUtils
.
is_visible
(
customRootWarning
)
"
custom
root
warning
is
visible
"
)
;
let
securityView
=
document
.
getElementById
(
"
identity
-
popup
-
securityView
"
)
;
let
shown
=
BrowserTestUtils
.
waitForEvent
(
securityView
"
ViewShown
"
)
;
document
.
getElementById
(
"
identity
-
popup
-
security
-
expander
"
)
.
click
(
)
;
await
shown
;
let
subPanelInfo
=
document
.
getElementById
(
"
identity
-
popup
-
content
-
verifier
-
unknown
"
)
;
ok
(
BrowserTestUtils
.
is_visible
(
subPanelInfo
)
"
custom
root
warning
in
sub
panel
is
visible
"
)
;
}
)
;
}
)
;
add_task
(
async
function
test_http
(
)
{
await
BrowserTestUtils
.
withNewTab
(
"
http
:
/
/
example
.
com
"
async
function
(
)
{
let
promisePanelOpen
=
BrowserTestUtils
.
waitForEvent
(
gIdentityHandler
.
_identityPopup
"
popupshown
"
)
;
gIdentityHandler
.
_identityBox
.
click
(
)
;
await
promisePanelOpen
;
let
customRootWarning
=
document
.
getElementById
(
"
identity
-
popup
-
security
-
decription
-
custom
-
root
"
)
;
ok
(
BrowserTestUtils
.
is_hidden
(
customRootWarning
)
"
custom
root
warning
is
hidden
"
)
;
let
securityView
=
document
.
getElementById
(
"
identity
-
popup
-
securityView
"
)
;
let
shown
=
BrowserTestUtils
.
waitForEvent
(
securityView
"
ViewShown
"
)
;
document
.
getElementById
(
"
identity
-
popup
-
security
-
expander
"
)
.
click
(
)
;
await
shown
;
let
subPanelInfo
=
document
.
getElementById
(
"
identity
-
popup
-
content
-
verifier
-
unknown
"
)
;
ok
(
BrowserTestUtils
.
is_hidden
(
subPanelInfo
)
"
custom
root
warning
in
sub
panel
is
hidden
"
)
;
}
)
;
}
)
;
