const
SECURE_TEST_URI
=
"
https
:
/
/
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
siteIdentity
/
iframe_navigation
.
html
"
;
const
INSECURE_TEST_URI
=
"
http
:
/
/
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
siteIdentity
/
iframe_navigation
.
html
"
;
add_task
(
async
function
(
)
{
let
uri
=
SECURE_TEST_URI
+
"
#
blank
"
;
await
BrowserTestUtils
.
withNewTab
(
uri
async
(
browser
)
=
>
{
let
identityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
identityMode
"
verifiedDomain
"
"
identity
should
be
secure
before
"
)
;
await
ContentTask
.
spawn
(
browser
null
async
(
)
=
>
{
content
.
postMessage
(
"
"
"
*
"
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
{
return
!
content
.
document
.
body
.
classList
.
contains
(
"
running
"
)
;
}
)
;
}
)
;
let
newIdentityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
newIdentityMode
"
verifiedDomain
"
"
identity
should
be
secure
after
"
)
;
}
)
;
}
)
;
add_task
(
async
function
(
)
{
let
uri
=
SECURE_TEST_URI
+
"
#
insecure
"
;
await
BrowserTestUtils
.
withNewTab
(
uri
async
(
browser
)
=
>
{
let
identityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
identityMode
"
verifiedDomain
"
"
identity
should
be
secure
before
"
)
;
await
ContentTask
.
spawn
(
browser
null
async
(
)
=
>
{
content
.
postMessage
(
"
"
"
*
"
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
{
return
!
content
.
document
.
body
.
classList
.
contains
(
"
running
"
)
;
}
)
;
}
)
;
let
newIdentityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
classList
;
ok
(
newIdentityMode
.
contains
(
"
mixedActiveBlocked
"
)
"
identity
should
be
blocked
mixed
active
content
after
"
)
;
ok
(
newIdentityMode
.
contains
(
"
verifiedDomain
"
)
"
identity
should
still
contain
'
verifiedDomain
'
"
)
;
is
(
newIdentityMode
.
length
2
"
shouldn
'
t
have
any
other
identity
states
"
)
;
}
)
;
}
)
;
add_task
(
async
function
(
)
{
let
uri
=
INSECURE_TEST_URI
+
"
#
blank
"
;
await
BrowserTestUtils
.
withNewTab
(
uri
async
(
browser
)
=
>
{
let
identityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
identityMode
"
unknownIdentity
"
"
identity
should
be
'
unknown
'
before
"
)
;
await
ContentTask
.
spawn
(
browser
null
async
(
)
=
>
{
content
.
postMessage
(
"
"
"
*
"
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
{
return
!
content
.
document
.
body
.
classList
.
contains
(
"
running
"
)
;
}
)
;
}
)
;
let
newIdentityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
newIdentityMode
"
unknownIdentity
"
"
identity
should
be
'
unknown
'
after
"
)
;
}
)
;
}
)
;
add_task
(
async
function
(
)
{
let
uri
=
INSECURE_TEST_URI
+
"
#
secure
"
;
await
BrowserTestUtils
.
withNewTab
(
uri
async
(
browser
)
=
>
{
let
identityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
identityMode
"
unknownIdentity
"
"
identity
should
be
'
unknown
'
before
"
)
;
await
ContentTask
.
spawn
(
browser
null
async
(
)
=
>
{
content
.
postMessage
(
"
"
"
*
"
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
{
return
!
content
.
document
.
body
.
classList
.
contains
(
"
running
"
)
;
}
)
;
}
)
;
let
newIdentityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
newIdentityMode
"
unknownIdentity
"
"
identity
should
be
'
unknown
'
after
"
)
;
}
)
;
}
)
;
