const
ROOT_URI
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
https
:
/
/
example
.
com
"
)
;
const
SECURE_TEST_URI
=
ROOT_URI
+
"
iframe_navigation
.
html
"
;
const
INSECURE_TEST_URI
=
SECURE_TEST_URI
.
replace
(
"
https
:
/
/
"
"
http
:
/
/
"
)
;
add_task
(
async
function
(
)
{
let
uri
=
SECURE_TEST_URI
+
"
#
blank
"
;
await
BrowserTestUtils
.
withNewTab
(
uri
async
browser
=
>
{
let
identityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
identityMode
"
verifiedDomain
"
"
identity
should
be
secure
before
"
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
async
(
)
=
>
{
content
.
postMessage
(
"
"
"
*
"
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
{
return
!
content
.
document
.
body
.
classList
.
contains
(
"
running
"
)
;
}
)
;
}
)
;
let
newIdentityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
newIdentityMode
"
verifiedDomain
"
"
identity
should
be
secure
after
"
)
;
}
)
;
}
)
;
add_task
(
async
function
(
)
{
let
uri
=
SECURE_TEST_URI
+
"
#
insecure
"
;
await
BrowserTestUtils
.
withNewTab
(
uri
async
browser
=
>
{
let
identityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
identityMode
"
verifiedDomain
"
"
identity
should
be
secure
before
"
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
async
(
)
=
>
{
content
.
postMessage
(
"
"
"
*
"
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
{
return
!
content
.
document
.
body
.
classList
.
contains
(
"
running
"
)
;
}
)
;
}
)
;
let
newIdentityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
classList
;
ok
(
newIdentityMode
.
contains
(
"
mixedActiveBlocked
"
)
"
identity
should
be
blocked
mixed
active
content
after
"
)
;
ok
(
newIdentityMode
.
contains
(
"
verifiedDomain
"
)
"
identity
should
still
contain
'
verifiedDomain
'
"
)
;
is
(
newIdentityMode
.
length
2
"
shouldn
'
t
have
any
other
identity
states
"
)
;
}
)
;
}
)
;
add_task
(
async
function
(
)
{
let
uri
=
INSECURE_TEST_URI
+
"
#
blank
"
;
await
BrowserTestUtils
.
withNewTab
(
uri
async
browser
=
>
{
let
identityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
identityMode
"
notSecure
"
"
identity
should
be
'
not
secure
'
before
"
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
async
(
)
=
>
{
content
.
postMessage
(
"
"
"
*
"
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
{
return
!
content
.
document
.
body
.
classList
.
contains
(
"
running
"
)
;
}
)
;
}
)
;
let
newIdentityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
newIdentityMode
"
notSecure
"
"
identity
should
be
'
not
secure
'
after
"
)
;
}
)
;
}
)
;
add_task
(
async
function
(
)
{
let
uri
=
INSECURE_TEST_URI
+
"
#
secure
"
;
await
BrowserTestUtils
.
withNewTab
(
uri
async
browser
=
>
{
let
identityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
identityMode
"
notSecure
"
"
identity
should
be
'
not
secure
'
before
"
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
async
(
)
=
>
{
content
.
postMessage
(
"
"
"
*
"
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
{
return
!
content
.
document
.
body
.
classList
.
contains
(
"
running
"
)
;
}
)
;
}
)
;
let
newIdentityMode
=
window
.
document
.
getElementById
(
"
identity
-
box
"
)
.
className
;
is
(
newIdentityMode
"
notSecure
"
"
identity
should
be
'
not
secure
'
after
"
)
;
}
)
;
}
)
;
