const
gHttpTestRoot1
=
"
http
:
/
/
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
general
/
"
;
const
gHttpsTestRoot1
=
"
https
:
/
/
test1
.
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
general
/
"
;
const
gHttpTestRoot2
=
"
http
:
/
/
example
.
net
/
browser
/
browser
/
base
/
content
/
test
/
general
/
"
;
const
gHttpsTestRoot2
=
"
https
:
/
/
test2
.
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
general
/
"
;
var
gTestBrowser
=
null
;
add_task
(
function
*
(
)
{
let
url
=
gHttpTestRoot1
+
"
file_mixedContentFromOnunload
.
html
"
;
yield
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
}
function
*
(
)
{
yield
SpecialPowers
.
pushPrefEnv
(
{
"
set
"
:
[
[
"
security
.
mixed_content
.
block_active_content
"
true
]
[
"
security
.
mixed_content
.
block_display_content
"
false
]
]
}
)
;
gTestBrowser
=
gBrowser
.
selectedBrowser
;
url
=
gHttpsTestRoot1
+
"
file_mixedContentFromOnunload_test1
.
html
"
;
yield
BrowserTestUtils
.
loadURI
(
gTestBrowser
url
)
;
yield
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
;
isSecurityState
(
"
secure
"
)
;
assertMixedContentBlockingState
(
gTestBrowser
{
activeLoaded
:
false
activeBlocked
:
false
passiveLoaded
:
false
}
)
;
url
=
gHttpTestRoot2
+
"
file_mixedContentFromOnunload
.
html
"
;
yield
BrowserTestUtils
.
loadURI
(
gTestBrowser
url
)
;
yield
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
;
url
=
gHttpsTestRoot2
+
"
file_mixedContentFromOnunload_test2
.
html
"
;
yield
BrowserTestUtils
.
loadURI
(
gTestBrowser
url
)
;
yield
BrowserTestUtils
.
browserLoaded
(
gTestBrowser
)
;
isSecurityState
(
"
broken
"
)
;
assertMixedContentBlockingState
(
gTestBrowser
{
activeLoaded
:
false
activeBlocked
:
false
passiveLoaded
:
true
}
)
;
}
)
;
}
)
;
