add_task
(
function
*
test_content_and_chrome_selection
(
)
{
let
testPage
=
'
data
:
text
/
html
'
+
'
<
textarea
id
=
"
textarea
"
>
Write
something
here
<
/
textarea
>
'
;
let
DOMWindowUtils
=
EventUtils
.
_getDOMWindowUtils
(
window
)
;
let
selectedText
;
let
tab
=
yield
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
testPage
)
;
yield
BrowserTestUtils
.
synthesizeMouse
(
"
#
textarea
"
0
0
{
}
gBrowser
.
selectedBrowser
)
;
yield
BrowserTestUtils
.
synthesizeKey
(
"
KEY_ArrowRight
"
{
shiftKey
:
true
ctrlKey
:
true
code
:
"
ArrowRight
"
}
gBrowser
.
selectedBrowser
)
;
selectedText
=
DOMWindowUtils
.
GetSelectionAsPlaintext
(
)
;
is
(
selectedText
"
Write
something
here
"
"
The
macOS
services
got
the
selected
content
text
"
)
;
gURLBar
.
value
=
"
test
.
mozilla
.
org
"
;
yield
gURLBar
.
focus
(
)
;
yield
BrowserTestUtils
.
synthesizeKey
(
"
KEY_ArrowRight
"
{
shiftKey
:
true
ctrlKey
:
true
code
:
"
ArrowRight
"
}
gBrowser
.
selectedBrowser
)
;
selectedText
=
DOMWindowUtils
.
GetSelectionAsPlaintext
(
)
;
is
(
selectedText
"
test
.
mozilla
.
org
"
"
The
macOS
services
got
the
selected
chrome
text
"
)
;
yield
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
add_task
(
function
*
test_active_selection_switches_properly
(
)
{
let
testPage1
=
'
data
:
text
/
html
'
+
'
<
textarea
id
=
"
textarea
"
>
Write
something
here
<
/
textarea
>
'
;
let
testPage2
=
'
data
:
text
/
html
'
+
'
<
textarea
id
=
"
textarea
"
>
Nothing
available
<
/
textarea
>
'
;
let
DOMWindowUtils
=
EventUtils
.
_getDOMWindowUtils
(
window
)
;
let
selectedText
;
let
tab1
=
yield
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
testPage1
)
;
yield
BrowserTestUtils
.
synthesizeMouse
(
"
#
textarea
"
0
0
{
}
gBrowser
.
selectedBrowser
)
;
yield
BrowserTestUtils
.
synthesizeKey
(
"
KEY_ArrowRight
"
{
shiftKey
:
true
ctrlKey
:
true
code
:
"
ArrowRight
"
}
gBrowser
.
selectedBrowser
)
;
let
tab2
=
yield
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
testPage2
)
;
yield
BrowserTestUtils
.
synthesizeMouse
(
"
#
textarea
"
0
0
{
}
gBrowser
.
selectedBrowser
)
;
yield
BrowserTestUtils
.
synthesizeKey
(
"
KEY_ArrowRight
"
{
shiftKey
:
true
ctrlKey
:
true
code
:
"
ArrowRight
"
}
gBrowser
.
selectedBrowser
)
;
yield
BrowserTestUtils
.
switchTab
(
gBrowser
tab1
)
;
selectedText
=
DOMWindowUtils
.
GetSelectionAsPlaintext
(
)
;
is
(
selectedText
"
Write
something
here
"
"
The
macOS
services
got
the
selected
content
text
"
)
;
yield
BrowserTestUtils
.
switchTab
(
gBrowser
tab2
)
;
selectedText
=
DOMWindowUtils
.
GetSelectionAsPlaintext
(
)
;
is
(
selectedText
"
Nothing
available
"
"
The
macOS
services
got
the
selected
content
text
"
)
;
yield
BrowserTestUtils
.
removeTab
(
tab1
)
;
yield
BrowserTestUtils
.
removeTab
(
tab2
)
;
}
)
;
