const
gHttpTestRoot
=
"
http
:
/
/
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
general
/
"
;
var
gTestBrowser
=
null
;
function
SecStateTestsCompleted
(
)
{
gBrowser
.
removeCurrentTab
(
)
;
window
.
focus
(
)
;
finish
(
)
;
}
function
test
(
)
{
waitForExplicitFinish
(
)
;
SpecialPowers
.
pushPrefEnv
(
{
"
set
"
:
[
[
"
security
.
mixed_content
.
block_active_content
"
true
]
[
"
security
.
mixed_content
.
block_display_content
"
false
]
]
}
SecStateTests
)
;
}
function
SecStateTests
(
)
{
let
url
=
gHttpTestRoot
+
"
file_mixedContentFramesOnHttp
.
html
"
;
gBrowser
.
selectedTab
=
gBrowser
.
addTab
(
)
;
gTestBrowser
=
gBrowser
.
selectedBrowser
;
whenLoaded
(
gTestBrowser
SecStateTest1
)
;
gTestBrowser
.
contentWindow
.
location
=
url
;
}
function
SecStateTest1
(
)
{
isSecurityState
(
"
insecure
"
)
;
assertMixedContentBlockingState
(
gTestBrowser
{
activeLoaded
:
false
activeBlocked
:
false
passiveLoaded
:
true
}
)
;
SecStateTestsCompleted
(
)
;
}
function
whenLoaded
(
aElement
aCallback
)
{
aElement
.
addEventListener
(
"
load
"
function
onLoad
(
)
{
aElement
.
removeEventListener
(
"
load
"
onLoad
true
)
;
executeSoon
(
aCallback
)
;
}
true
)
;
}
