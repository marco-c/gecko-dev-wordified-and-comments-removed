"
use
strict
"
;
const
TEST_URL
=
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
browser
/
base
/
content
/
test
/
general
/
file_favicon_change_not_in_document
.
html
"
;
add_task
(
async
function
(
)
{
let
extraTab
=
gBrowser
.
selectedTab
=
BrowserTestUtils
.
addTab
(
gBrowser
)
;
let
domLinkAddedFired
=
0
;
let
domLinkChangedFired
=
0
;
const
linkAddedHandler
=
event
=
>
domLinkAddedFired
+
+
;
const
linkChangedhandler
=
event
=
>
domLinkChangedFired
+
+
;
BrowserTestUtils
.
addContentEventListener
(
gBrowser
.
selectedBrowser
"
DOMLinkAdded
"
linkAddedHandler
)
;
BrowserTestUtils
.
addContentEventListener
(
gBrowser
.
selectedBrowser
"
DOMLinkChanged
"
linkChangedhandler
)
;
extraTab
.
linkedBrowser
.
loadURI
(
TEST_URL
)
;
let
expectedFavicon
=
"
http
:
/
/
example
.
org
/
yet
-
another
-
icon
"
;
await
promiseTabLoaded
(
extraTab
)
;
try
{
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
{
return
gBrowser
.
getIcon
(
extraTab
)
=
=
=
expectedFavicon
;
}
"
wait
for
favicon
load
to
finish
"
1000
5
)
;
ok
(
true
"
Should
load
the
added
favicon
"
)
;
}
catch
(
e
)
{
ok
(
false
"
Should
'
ve
loaded
the
new
added
favicon
.
"
)
;
}
is
(
domLinkAddedFired
2
"
Should
fire
the
correct
number
of
DOMLinkAdded
event
.
"
)
;
is
(
domLinkChangedFired
0
"
Should
not
fire
any
DOMLinkChanged
event
.
"
)
;
gBrowser
.
removeTab
(
extraTab
)
;
}
)
;
