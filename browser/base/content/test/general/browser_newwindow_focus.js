"
use
strict
"
;
const
PAGE
=
data
:
text
/
html
<
a
id
=
"
target
"
href
=
"
%
23
"
onclick
=
"
window
.
open
(
'
http
:
/
/
www
.
example
.
com
'
'
_blank
'
'
width
=
100
height
=
100
'
)
;
"
>
Click
me
<
/
a
>
;
function
promiseNewWindow
(
)
{
return
new
Promise
(
resolve
=
>
{
let
observer
=
(
subject
topic
data
)
=
>
{
if
(
topic
=
=
"
domwindowopened
"
)
{
Services
.
ww
.
unregisterNotification
(
observer
)
;
let
win
=
subject
.
QueryInterface
(
Ci
.
nsIDOMWindow
)
;
win
.
addEventListener
(
"
load
"
function
(
)
{
resolve
(
win
)
;
}
{
once
:
true
}
)
;
}
}
;
Services
.
ww
.
registerNotification
(
observer
)
;
}
)
;
}
add_task
(
async
function
test_focus_browser
(
)
{
await
BrowserTestUtils
.
withNewTab
(
{
url
:
PAGE
gBrowser
}
async
function
(
browser
)
{
let
newWinPromise
=
promiseNewWindow
(
)
;
let
delayedStartupPromise
=
BrowserTestUtils
.
waitForNewWindow
(
)
;
await
BrowserTestUtils
.
synthesizeMouseAtCenter
(
"
#
target
"
{
}
browser
)
;
let
newWin
=
await
newWinPromise
;
await
BrowserTestUtils
.
contentPainted
(
newWin
.
gBrowser
.
selectedBrowser
)
;
await
delayedStartupPromise
;
let
focusedElement
=
Services
.
focus
.
getFocusedElementForWindow
(
newWin
false
{
}
)
;
Assert
.
equal
(
focusedElement
newWin
.
gBrowser
.
selectedBrowser
"
Initial
browser
should
be
focused
"
)
;
await
BrowserTestUtils
.
closeWindow
(
newWin
)
;
}
)
;
}
)
;
add_task
(
async
function
test_no_steal_focus
(
)
{
await
BrowserTestUtils
.
withNewTab
(
{
url
:
PAGE
gBrowser
}
async
function
(
browser
)
{
let
newWinPromise
=
promiseNewWindow
(
)
;
let
delayedStartupPromise
=
BrowserTestUtils
.
waitForNewWindow
(
)
;
await
BrowserTestUtils
.
synthesizeMouseAtCenter
(
"
#
target
"
{
}
browser
)
;
let
newWin
=
await
newWinPromise
;
newWin
.
gURLBar
.
focus
(
)
;
await
BrowserTestUtils
.
contentPainted
(
newWin
.
gBrowser
.
selectedBrowser
)
;
await
delayedStartupPromise
;
let
focusedElement
=
Services
.
focus
.
getFocusedElementForWindow
(
newWin
false
{
}
)
;
Assert
.
equal
(
focusedElement
newWin
.
gURLBar
.
inputField
"
URLBar
should
be
focused
"
)
;
await
BrowserTestUtils
.
closeWindow
(
newWin
)
;
}
)
;
}
)
;
