var
proxyPrefValue
;
function
test
(
)
{
waitForExplicitFinish
(
)
;
Services
.
io
.
offline
=
true
;
proxyPrefValue
=
Services
.
prefs
.
getIntPref
(
"
network
.
proxy
.
type
"
)
;
Services
.
prefs
.
setIntPref
(
"
network
.
proxy
.
type
"
0
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
cache
.
disk
.
enable
"
false
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
cache
.
memory
.
enable
"
false
)
;
gBrowser
.
selectedTab
=
gBrowser
.
addTab
(
"
http
:
/
/
example
.
com
/
"
)
;
let
contentScript
=
let
listener
=
function
(
)
{
removeEventListener
(
"
DOMContentLoaded
"
listener
)
;
sendAsyncMessage
(
"
Test
:
DOMContentLoaded
"
{
uri
:
content
.
document
.
documentURI
}
)
;
}
;
addEventListener
(
"
DOMContentLoaded
"
listener
)
;
;
function
pageloaded
(
{
data
}
)
{
mm
.
removeMessageListener
(
"
Test
:
DOMContentLoaded
"
pageloaded
)
;
checkPage
(
data
)
;
}
let
mm
=
gBrowser
.
selectedBrowser
.
messageManager
;
mm
.
addMessageListener
(
"
Test
:
DOMContentLoaded
"
pageloaded
)
;
mm
.
loadFrameScript
(
"
data
:
"
+
contentScript
true
)
;
}
function
checkPage
(
data
)
{
ok
(
Services
.
io
.
offline
"
Setting
Services
.
io
.
offline
to
true
.
"
)
;
is
(
data
.
uri
.
substring
(
0
27
)
"
about
:
neterror
?
e
=
netOffline
"
"
Loading
the
Offline
mode
neterror
page
.
"
)
;
Services
.
prefs
.
setIntPref
(
"
network
.
proxy
.
type
"
proxyPrefValue
)
;
Services
.
obs
.
addObserver
(
function
observer
(
aSubject
aTopic
)
{
ok
(
!
Services
.
io
.
offline
"
After
clicking
the
Try
Again
button
we
'
re
back
"
+
"
online
.
"
)
;
Services
.
obs
.
removeObserver
(
observer
"
network
:
offline
-
status
-
changed
"
)
;
finish
(
)
;
}
"
network
:
offline
-
status
-
changed
"
)
;
ContentTask
.
spawn
(
gBrowser
.
selectedBrowser
null
function
*
(
)
{
content
.
document
.
getElementById
(
"
errorTryAgain
"
)
.
click
(
)
;
}
)
;
}
registerCleanupFunction
(
function
(
)
{
Services
.
prefs
.
setBoolPref
(
"
browser
.
cache
.
disk
.
enable
"
true
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
cache
.
memory
.
enable
"
true
)
;
Services
.
io
.
offline
=
false
;
gBrowser
.
removeCurrentTab
(
)
;
}
)
;
