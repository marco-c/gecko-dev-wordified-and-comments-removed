add_task
(
function
*
(
)
{
yield
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
groupedhistory
.
enabled
"
true
]
]
}
)
;
function
awaitProcessChange
(
browser
)
{
return
new
Promise
(
resolve
=
>
{
browser
.
addEventListener
(
"
BrowserChangedProcess
"
function
bcp
(
e
)
{
browser
.
removeEventListener
(
"
BrowserChangedProcess
"
bcp
)
;
ok
(
true
"
The
browser
changed
process
!
"
)
;
resolve
(
)
;
}
)
;
}
)
;
}
let
tab2
;
yield
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
"
data
:
text
/
html
a
"
}
function
*
(
browser1
)
{
tab2
=
gBrowser
.
loadOneTab
(
"
data
:
text
/
html
b
"
{
referrerPolicy
:
Ci
.
nsIHttpChannel
.
REFERRER_POLICY_DEFAULT
allowThirdPartyFixup
:
true
relatedToCurrent
:
true
isPrerendered
:
true
}
)
;
}
)
;
todo
(
!
tab2
.
linkedBrowser
"
The
new
tab
should
be
closed
"
)
;
yield
BrowserTestUtils
.
removeTab
(
tab2
)
;
yield
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
"
data
:
text
/
html
a
"
}
function
*
(
browser1
)
{
tab2
=
gBrowser
.
loadOneTab
(
"
data
:
text
/
html
b
"
{
referrerPolicy
:
Ci
.
nsIHttpChannel
.
REFERRER_POLICY_DEFAULT
allowThirdPartyFixup
:
true
relatedToCurrent
:
true
isPrerendered
:
true
}
)
;
yield
BrowserTestUtils
.
browserLoaded
(
tab2
.
linkedBrowser
)
;
browser1
.
frameLoader
.
appendPartialSessionHistoryAndSwap
(
tab2
.
linkedBrowser
.
frameLoader
)
;
yield
awaitProcessChange
(
browser1
)
;
}
)
;
ok
(
!
tab2
.
linkedBrowser
"
The
new
tab
should
be
closed
"
)
;
}
)
;
