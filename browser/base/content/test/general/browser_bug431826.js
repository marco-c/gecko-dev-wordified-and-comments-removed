function
remote
(
task
)
{
return
ContentTask
.
spawn
(
gBrowser
.
selectedBrowser
null
task
)
;
}
add_task
(
function
*
(
)
{
gBrowser
.
selectedTab
=
gBrowser
.
addTab
(
)
;
let
promise
=
remote
(
function
(
)
{
return
ContentTaskUtils
.
waitForEvent
(
this
"
DOMContentLoaded
"
true
event
=
>
{
return
content
.
document
.
documentURI
!
=
"
about
:
blank
"
;
}
)
.
then
(
(
)
=
>
0
)
;
}
)
;
gBrowser
.
loadURI
(
"
https
:
/
/
nocert
.
example
.
com
/
"
)
;
yield
promise
;
yield
remote
(
(
)
=
>
{
let
uri
=
content
.
document
.
documentURI
;
Assert
.
ok
(
uri
.
startsWith
(
"
about
:
certerror
"
)
"
Broken
page
should
go
to
about
:
certerror
not
about
:
neterror
"
)
;
}
)
;
yield
remote
(
(
)
=
>
{
let
div
=
content
.
document
.
getElementById
(
"
badCertAdvancedPanel
"
)
;
Assert
.
ok
(
div
"
Advanced
content
div
should
exist
"
)
;
Assert
.
equal
(
div
.
ownerGlobal
.
getComputedStyle
(
div
)
.
display
"
none
"
"
Advanced
content
should
not
be
visible
by
default
"
)
;
}
)
;
gPrefService
.
setBoolPref
(
"
browser
.
xul
.
error_pages
.
expert_bad_cert
"
true
)
;
promise
=
remote
(
function
(
)
{
return
ContentTaskUtils
.
waitForEvent
(
this
"
DOMContentLoaded
"
true
)
;
}
)
;
gBrowser
.
reload
(
)
;
yield
promise
;
yield
remote
(
(
)
=
>
{
let
div
=
content
.
document
.
getElementById
(
"
badCertAdvancedPanel
"
)
;
Assert
.
ok
(
div
"
Advanced
content
div
should
exist
"
)
;
Assert
.
equal
(
div
.
ownerGlobal
.
getComputedStyle
(
div
)
.
display
"
block
"
"
Advanced
content
should
be
visible
by
default
"
)
;
}
)
;
gBrowser
.
removeCurrentTab
(
)
;
if
(
gPrefService
.
prefHasUserValue
(
"
browser
.
xul
.
error_pages
.
expert_bad_cert
"
)
)
gPrefService
.
clearUserPref
(
"
browser
.
xul
.
error_pages
.
expert_bad_cert
"
)
;
}
)
;
