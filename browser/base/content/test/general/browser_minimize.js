add_task
(
async
function
(
)
{
registerCleanupFunction
(
function
(
)
{
window
.
restore
(
)
;
}
)
;
function
isActive
(
)
{
return
gBrowser
.
selectedTab
.
linkedBrowser
.
docShellIsActive
;
}
ok
(
isActive
(
)
"
Docshell
should
be
active
when
starting
the
test
"
)
;
info
(
"
Calling
window
.
minimize
"
)
;
let
promiseSizeModeChange
=
BrowserTestUtils
.
waitForEvent
(
window
"
sizemodechange
"
)
;
window
.
minimize
(
)
;
await
promiseSizeModeChange
;
ok
(
!
isActive
(
)
"
Docshell
should
be
Inactive
"
)
;
info
(
"
Calling
window
.
restore
"
)
;
promiseSizeModeChange
=
BrowserTestUtils
.
waitForEvent
(
window
"
sizemodechange
"
)
;
window
.
restore
(
)
;
await
Promise
.
race
(
[
promiseSizeModeChange
new
Promise
(
(
resolve
reject
)
=
>
setTimeout
(
(
)
=
>
{
reject
(
"
timed
out
waiting
for
sizemodechange
event
"
)
;
}
5000
)
)
]
)
;
if
(
window
.
isFullyOccluded
)
{
await
BrowserTestUtils
.
waitForEvent
(
window
"
occlusionstatechange
"
)
;
}
ok
(
isActive
(
)
"
Docshell
should
be
active
again
"
)
;
}
)
;
