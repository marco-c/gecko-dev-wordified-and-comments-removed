"
use
strict
"
;
const
PAGE
=
"
http
:
/
/
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
general
/
page_style_sample
.
html
"
;
function
promiseStylesheetsUpdated
(
browser
)
{
return
ContentTask
.
spawn
(
browser
{
PAGE
}
function
*
(
args
)
{
return
new
Promise
(
(
resolve
)
=
>
{
addEventListener
(
"
pageshow
"
function
onPageShow
(
e
)
{
if
(
e
.
target
.
location
=
=
args
.
PAGE
)
{
removeEventListener
(
"
pageshow
"
onPageShow
)
;
content
.
setTimeout
(
resolve
0
)
;
}
}
)
;
}
)
}
)
;
}
add_task
(
function
*
(
)
{
let
tab
=
yield
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
blank
"
false
)
;
let
browser
=
tab
.
linkedBrowser
;
yield
BrowserTestUtils
.
loadURI
(
browser
PAGE
)
;
yield
promiseStylesheetsUpdated
(
browser
)
;
let
menupopup
=
document
.
getElementById
(
"
pageStyleMenu
"
)
.
menupopup
;
gPageStyleMenu
.
fillPopup
(
menupopup
)
;
let
selected
=
menupopup
.
querySelector
(
"
menuitem
[
checked
=
'
true
'
]
"
)
;
is
(
selected
.
getAttribute
(
"
label
"
)
"
6
"
"
Should
have
'
6
'
stylesheet
selected
by
default
"
)
;
let
targets
=
menupopup
.
querySelectorAll
(
"
menuitem
"
)
;
let
target
=
menupopup
.
querySelector
(
"
menuitem
[
label
=
'
1
'
]
"
)
;
target
.
click
(
)
;
yield
ContentTask
.
spawn
(
browser
{
}
function
*
(
)
{
dump
(
'
\
nJust
wasting
some
time
.
\
n
'
)
;
}
)
;
gPageStyleMenu
.
fillPopup
(
menupopup
)
;
selected
=
menupopup
.
querySelector
(
"
menuitem
[
checked
=
'
true
'
]
"
)
;
is
(
selected
.
getAttribute
(
"
label
"
)
"
1
"
"
Should
now
have
stylesheet
1
selected
"
)
;
yield
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
