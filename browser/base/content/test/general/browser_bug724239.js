const
{
TabStateFlusher
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
/
modules
/
sessionstore
/
TabStateFlusher
.
jsm
"
)
;
add_task
(
async
function
test_blank
(
)
{
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
"
about
:
blank
"
}
async
function
(
browser
)
{
BrowserTestUtils
.
loadURI
(
browser
"
http
:
/
/
example
.
com
"
)
;
await
BrowserTestUtils
.
browserLoaded
(
browser
)
;
ok
(
!
gBrowser
.
canGoBack
"
about
:
blank
wasn
'
t
added
to
session
history
"
)
;
}
)
;
}
)
;
add_task
(
async
function
test_newtab
(
)
{
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
"
about
:
blank
"
}
async
function
(
browser
)
{
let
stopped
=
BrowserTestUtils
.
browserStopped
(
browser
"
about
:
newtab
"
)
;
BrowserTestUtils
.
loadURI
(
browser
"
about
:
newtab
"
)
;
await
stopped
;
stopped
=
BrowserTestUtils
.
browserStopped
(
browser
"
http
:
/
/
example
.
com
/
"
)
;
BrowserTestUtils
.
loadURI
(
browser
"
http
:
/
/
example
.
com
/
"
)
;
await
stopped
;
await
TabStateFlusher
.
flush
(
browser
)
;
let
tab
=
gBrowser
.
getTabForBrowser
(
browser
)
;
let
tabState
=
JSON
.
parse
(
SessionStore
.
getTabState
(
tab
)
)
;
Assert
.
equal
(
tabState
.
entries
.
length
2
"
We
should
have
2
entries
in
the
session
history
.
"
)
;
Assert
.
equal
(
tabState
.
entries
[
0
]
.
url
"
about
:
newtab
"
"
about
:
newtab
should
be
the
first
entry
.
"
)
;
Assert
.
ok
(
gBrowser
.
canGoBack
"
Should
be
able
to
browse
back
.
"
)
;
}
)
;
}
)
;
