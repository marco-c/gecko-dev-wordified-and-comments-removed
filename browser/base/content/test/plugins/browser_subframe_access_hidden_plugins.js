"
use
strict
"
;
const
TEST_PLUGIN_NAME
=
"
Test
Plug
-
in
"
;
const
HIDDEN_CTP_PLUGIN_PREF
=
"
plugins
.
navigator
.
hidden_ctp_plugin
"
;
const
DOMAIN_1
=
"
http
:
/
/
example
.
com
"
;
const
DOMAIN_2
=
"
http
:
/
/
mochi
.
test
:
8888
"
;
add_task
(
function
*
setup
(
)
{
let
originalPluginState
=
getTestPluginEnabledState
(
)
;
setTestPluginEnabledState
(
Ci
.
nsIPluginTag
.
STATE_CLICKTOPLAY
)
;
registerCleanupFunction
(
(
)
=
>
{
setTestPluginEnabledState
(
originalPluginState
)
;
clearAllPluginPermissions
(
)
;
}
)
;
yield
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
HIDDEN_CTP_PLUGIN_PREF
TEST_PLUGIN_NAME
]
]
}
)
;
}
)
;
add_task
(
function
*
test_plugin_accessible_in_subframe
(
)
{
let
ssm
=
Services
.
scriptSecurityManager
;
let
principal
=
ssm
.
createCodebasePrincipalFromOrigin
(
DOMAIN_1
)
;
let
pluginHost
=
Cc
[
"
mozilla
.
org
/
plugin
/
host
;
1
"
]
.
getService
(
Ci
.
nsIPluginHost
)
;
let
permString
=
pluginHost
.
getPermissionStringForType
(
"
application
/
x
-
test
"
)
;
Services
.
perms
.
addFromPrincipal
(
principal
permString
Ci
.
nsIPermissionManager
.
ALLOW_ACTION
Ci
.
nsIPermissionManager
.
EXPIRE_NEVER
0
)
;
yield
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
DOMAIN_1
}
function
*
(
browser
)
{
yield
ContentTask
.
spawn
(
browser
[
TEST_PLUGIN_NAME
DOMAIN_2
]
function
*
(
[
pluginName
domain2
]
)
{
Assert
.
ok
(
content
.
navigator
.
plugins
[
pluginName
]
"
Top
-
level
document
should
find
Test
Plugin
"
)
;
let
subframe
=
content
.
document
.
createElement
(
"
iframe
"
)
;
subframe
.
src
=
domain2
;
let
loadedPromise
=
ContentTaskUtils
.
waitForEvent
(
subframe
"
load
"
)
;
content
.
document
.
body
.
appendChild
(
subframe
)
;
yield
loadedPromise
;
let
sawEvent
=
false
;
addEventListener
(
"
HiddenPlugin
"
function
onHiddenPlugin
(
e
)
{
sawEvent
=
true
;
removeEventListener
(
"
HiddenPlugin
"
onHiddenPlugin
true
)
;
}
true
)
;
Assert
.
ok
(
subframe
.
contentWindow
.
navigator
.
plugins
[
pluginName
]
"
Subframe
should
find
Test
Plugin
"
)
;
Assert
.
ok
(
!
sawEvent
"
Should
not
have
seen
the
HiddenPlugin
event
.
"
)
;
}
)
;
}
)
;
}
)
;
