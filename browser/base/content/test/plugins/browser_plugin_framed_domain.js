"
use
strict
"
;
var
rootDir
=
getRootDirectory
(
gTestPath
)
;
const
gTestRoot
=
rootDir
.
replace
(
"
chrome
:
/
/
mochitests
/
content
/
"
"
https
:
/
/
example
.
com
/
"
)
;
add_task
(
async
function
test_toplevel_frame_permission
(
)
{
await
BrowserTestUtils
.
withNewTab
(
gTestRoot
+
"
empty_file
.
html
"
async
browser
=
>
{
await
SpecialPowers
.
spawn
(
browser
.
browsingContext
[
]
async
function
(
)
{
let
doc
=
content
.
document
;
let
iframe
=
doc
.
createElement
(
"
iframe
"
)
;
let
loadPromise
=
ContentTaskUtils
.
waitForEvent
(
iframe
"
load
"
)
;
iframe
.
src
=
doc
.
location
.
href
.
replace
(
"
.
com
/
"
"
.
org
/
"
)
;
doc
.
body
.
appendChild
(
iframe
)
;
await
loadPromise
;
}
)
;
let
{
currentWindowGlobal
}
=
browser
.
browsingContext
.
children
[
0
]
;
let
actor
=
currentWindowGlobal
.
getActor
(
"
Plugin
"
)
;
const
kHost
=
Cc
[
"
mozilla
.
org
/
plugin
/
host
;
1
"
]
.
getService
(
Ci
.
nsIPluginHost
)
;
const
{
PLUGIN_CLICK_TO_PLAY
}
=
Ci
.
nsIObjectLoadingContent
;
let
plugin
=
kHost
.
getPluginTags
(
)
[
0
]
;
actor
.
showClickToPlayNotification
(
browser
{
id
:
plugin
.
id
fallbackType
:
PLUGIN_CLICK_TO_PLAY
}
false
)
;
let
notification
=
PopupNotifications
.
getNotification
(
"
click
-
to
-
play
-
plugins
"
browser
)
;
is
(
notification
.
options
.
principal
.
host
"
example
.
com
"
"
Should
use
top
host
for
permission
prompt
!
"
)
;
}
)
;
}
)
;
