var
testURL
=
"
http
:
/
/
example
.
org
/
browser
/
browser
/
base
/
content
/
test
/
urlbar
/
dummy_page
.
html
"
;
var
testActionURL
=
"
moz
-
action
:
switchtab
"
+
JSON
.
stringify
(
{
url
:
testURL
}
)
;
testURL
=
gURLBar
.
trimValue
(
testURL
)
;
var
testTab
;
function
runNextTest
(
)
{
if
(
tests
.
length
)
{
let
t
=
tests
.
shift
(
)
;
waitForClipboard
(
t
.
expected
t
.
setup
function
(
)
{
t
.
success
(
)
;
runNextTest
(
)
;
}
cleanup
)
;
}
else
{
cleanup
(
)
;
}
}
function
cleanup
(
)
{
gBrowser
.
removeTab
(
testTab
)
;
finish
(
)
;
}
var
tests
=
[
{
expected
:
testURL
setup
(
)
{
gURLBar
.
value
=
testActionURL
;
gURLBar
.
valueIsTyped
=
true
;
is
(
gURLBar
.
value
testActionURL
"
gURLBar
starts
with
the
correct
real
value
"
)
;
is
(
gURLBar
.
textValue
testURL
"
gURLBar
starts
with
the
correct
display
value
"
)
;
gURLBar
.
focus
(
)
;
gURLBar
.
select
(
)
;
goDoCommand
(
"
cmd_copy
"
)
;
}
success
(
)
{
is
(
gURLBar
.
value
testActionURL
"
gURLBar
.
value
didn
'
t
change
when
copying
"
)
;
}
}
{
expected
:
testURL
.
substring
(
0
10
)
setup
(
)
{
gURLBar
.
selectionStart
=
0
;
gURLBar
.
selectionEnd
=
10
;
goDoCommand
(
"
cmd_copy
"
)
;
}
success
(
)
{
is
(
gURLBar
.
value
testActionURL
"
gURLBar
.
value
didn
'
t
change
when
copying
"
)
;
}
}
{
expected
:
testURL
setup
(
)
{
gURLBar
.
select
(
)
;
goDoCommand
(
"
cmd_cut
"
)
;
}
success
(
)
{
is
(
gURLBar
.
value
"
"
"
gURLBar
.
value
is
now
empty
"
)
;
}
}
{
expected
:
testURL
.
substring
(
testURL
.
length
-
10
testURL
.
length
)
setup
(
)
{
gURLBar
.
value
=
testActionURL
;
gURLBar
.
valueIsTyped
=
true
;
is
(
gURLBar
.
value
testActionURL
"
gURLBar
starts
with
the
correct
real
value
"
)
;
is
(
gURLBar
.
textValue
testURL
"
gURLBar
starts
with
the
correct
display
value
"
)
;
gURLBar
.
selectionStart
=
testURL
.
length
-
10
;
gURLBar
.
selectionEnd
=
testURL
.
length
;
goDoCommand
(
"
cmd_cut
"
)
;
}
success
(
)
{
is
(
gURLBar
.
value
testURL
.
substring
(
0
testURL
.
length
-
10
)
"
gURLBar
.
value
has
the
correct
value
"
)
;
}
}
]
;
function
test
(
)
{
waitForExplicitFinish
(
)
;
testTab
=
gBrowser
.
addTab
(
)
;
gBrowser
.
selectedTab
=
testTab
;
runNextTest
(
)
;
}
