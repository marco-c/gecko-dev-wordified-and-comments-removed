"
use
strict
"
;
var
browser
=
null
;
var
aboutNewTabService
=
Cc
[
"
mozilla
.
org
/
browser
/
aboutnewtab
-
service
;
1
"
]
.
getService
(
Ci
.
nsIAboutNewTabService
)
;
const
ABOUT_NEWTAB_URI
=
"
about
:
newtab
"
;
const
PREF_URI
=
"
http
:
/
/
example
.
com
/
browser
/
browser
/
base
/
content
/
test
/
newtab
/
external_newtab
.
html
"
;
const
DEFAULT_URI
=
aboutNewTabService
.
newTabURL
;
function
testPref
(
)
{
aboutNewTabService
.
newTabURL
=
PREF_URI
;
ok
(
aboutNewTabService
.
overridden
"
sanity
check
:
default
URL
for
about
:
newtab
should
be
overriden
"
)
;
is
(
aboutNewTabService
.
newTabURL
PREF_URI
"
sanity
check
:
default
URL
for
about
:
newtab
should
return
the
new
URL
"
)
;
browser
.
contentWindow
.
location
=
ABOUT_NEWTAB_URI
;
browser
.
addEventListener
(
"
load
"
function
onLoad
(
)
{
browser
.
removeEventListener
(
"
load
"
onLoad
true
)
;
is
(
content
.
document
.
location
PREF_URI
"
document
.
location
should
match
the
external
resource
"
)
;
is
(
content
.
document
.
documentURI
PREF_URI
"
document
.
documentURI
should
match
the
external
resource
"
)
;
is
(
content
.
document
.
nodePrincipal
.
URI
.
spec
PREF_URI
"
nodePrincipal
should
match
the
external
resource
"
)
;
aboutNewTabService
.
resetNewTabURL
(
)
;
is
(
aboutNewTabService
.
newTabURL
DEFAULT_URI
"
sanity
check
:
resetting
the
URL
to
about
:
newtab
should
return
about
:
newtab
"
)
;
gBrowser
.
removeCurrentTab
(
)
;
TestRunner
.
next
(
)
;
}
true
)
;
}
function
runTests
(
)
{
yield
addNewTabPageTab
(
)
;
browser
=
gWindow
.
gBrowser
.
selectedBrowser
;
ok
(
!
aboutNewTabService
.
overridden
"
sanity
check
:
default
URL
for
about
:
newtab
should
not
be
overriden
"
)
;
browser
.
contentWindow
.
location
=
ABOUT_NEWTAB_URI
;
browser
.
addEventListener
(
"
load
"
function
onLoad
(
)
{
browser
.
removeEventListener
(
"
load
"
onLoad
true
)
;
is
(
content
.
document
.
location
ABOUT_NEWTAB_URI
"
document
.
location
should
match
about
:
newtab
"
)
;
is
(
content
.
document
.
documentURI
ABOUT_NEWTAB_URI
"
document
.
documentURI
should
match
about
:
newtab
"
)
;
is
(
content
.
document
.
nodePrincipal
Services
.
scriptSecurityManager
.
getSystemPrincipal
(
)
"
nodePrincipal
should
match
systemPrincipal
"
)
;
testPref
(
)
;
}
true
)
;
info
(
"
Waiting
for
about
:
newtab
to
load
.
.
.
"
)
;
yield
true
;
}
