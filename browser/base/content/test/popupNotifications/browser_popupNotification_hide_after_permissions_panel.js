add_task
(
async
function
test_hide_popup_with_permissions_panel_showing
(
)
{
await
BrowserTestUtils
.
withNewTab
(
"
https
:
/
/
test1
.
example
.
com
/
"
async
function
(
browser
)
{
let
popupShownPromise
=
waitForNotificationPanel
(
)
;
await
SpecialPowers
.
spawn
(
browser
[
]
async
function
(
)
{
content
.
navigator
.
geolocation
.
getCurrentPosition
(
(
)
=
>
{
}
)
;
}
)
;
await
popupShownPromise
;
let
principal
=
Services
.
scriptSecurityManager
.
createContentPrincipalFromOrigin
(
"
https
:
/
/
test1
.
example
.
com
"
)
;
SitePermissions
.
setForPrincipal
(
principal
"
camera
"
SitePermissions
.
ALLOW
)
;
popupShownPromise
=
BrowserTestUtils
.
waitForEvent
(
window
"
popupshown
"
true
event
=
>
event
.
target
=
=
gPermissionPanel
.
_permissionPopup
)
;
EventUtils
.
synthesizeMouseAtCenter
(
document
.
getElementById
(
"
identity
-
permission
-
box
"
)
{
}
)
;
await
popupShownPromise
;
Assert
.
ok
(
!
PopupNotifications
.
isPanelOpen
"
Geolocation
popup
is
hidden
"
)
;
let
popupHidden
=
BrowserTestUtils
.
waitForEvent
(
gPermissionPanel
.
_permissionPopup
"
popuphidden
"
)
;
gPermissionPanel
.
_permissionPopup
.
hidePopup
(
)
;
await
popupHidden
;
Assert
.
ok
(
PopupNotifications
.
isPanelOpen
"
Geolocation
popup
is
showing
"
)
;
}
)
;
}
)
;
