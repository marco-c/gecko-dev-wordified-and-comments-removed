"
use
strict
"
;
add_task
(
async
function
test_window_menu_list
(
)
{
const
windowTitle
=
window
.
document
.
title
;
await
checkWindowMenu
(
[
windowTitle
"
Browser
chrome
tests
"
]
)
;
let
newWindow
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
await
checkWindowMenu
(
[
windowTitle
"
Browser
chrome
tests
"
windowTitle
]
)
;
await
BrowserTestUtils
.
closeWindow
(
newWindow
)
;
}
)
;
async
function
checkWindowMenu
(
labels
)
{
let
menu
=
document
.
querySelector
(
"
#
windowMenu
"
)
;
await
new
Promise
(
resolve
=
>
{
menu
.
addEventListener
(
"
popupshown
"
resolve
{
once
:
true
}
)
;
menu
.
dispatchEvent
(
new
MouseEvent
(
"
popupshowing
"
)
)
;
menu
.
dispatchEvent
(
new
MouseEvent
(
"
popupshown
"
)
)
;
}
)
;
let
menuitems
=
[
.
.
.
menu
.
querySelectorAll
(
"
menuseparator
~
menuitem
"
)
]
;
is
(
menuitems
.
length
labels
.
length
"
Correct
number
of
windows
in
the
menu
"
)
;
is
(
menuitems
.
map
(
item
=
>
item
.
label
)
.
join
(
"
"
)
labels
.
join
(
"
"
)
"
Correct
labels
on
menuitems
"
)
;
for
(
let
menuitem
of
menuitems
)
{
ok
(
menuitem
instanceof
customElements
.
get
(
"
menuitem
"
)
"
sibling
is
menuitem
"
)
;
}
await
new
Promise
(
resolve
=
>
{
menu
.
addEventListener
(
"
popuphidden
"
resolve
{
once
:
true
}
)
;
menu
.
dispatchEvent
(
new
MouseEvent
(
"
popuphiding
"
)
)
;
menu
.
dispatchEvent
(
new
MouseEvent
(
"
popuphidden
"
)
)
;
}
)
;
}
