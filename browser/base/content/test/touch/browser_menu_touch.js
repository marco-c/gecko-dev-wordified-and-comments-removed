async
function
openAndCheckMenu
(
menu
target
)
{
is
(
menu
.
state
"
closed
"
"
Menu
panel
is
initally
closed
.
"
)
;
let
popupshown
=
BrowserTestUtils
.
waitForEvent
(
menu
"
popupshown
"
)
;
EventUtils
.
synthesizeNativeTapAtCenter
(
target
)
;
await
popupshown
;
is
(
menu
.
state
"
open
"
"
Menu
panel
is
open
.
"
)
;
is
(
menu
.
getAttribute
(
"
touchmode
"
)
"
true
"
"
Menu
panel
is
in
touchmode
.
"
)
;
menu
.
hidePopup
(
)
;
popupshown
=
BrowserTestUtils
.
waitForEvent
(
menu
"
popupshown
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
target
{
}
)
;
await
popupshown
;
is
(
menu
.
state
"
open
"
"
Menu
panel
is
open
.
"
)
;
ok
(
!
menu
.
hasAttribute
(
"
touchmode
"
)
"
Menu
panel
is
not
in
touchmode
.
"
)
;
menu
.
hidePopup
(
)
;
}
async
function
openAndCheckCustomizationUIMenu
(
target
)
{
EventUtils
.
synthesizeNativeTapAtCenter
(
target
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
document
.
getElementById
(
"
customizationui
-
widget
-
panel
"
)
!
=
null
)
;
let
menu
=
document
.
getElementById
(
"
customizationui
-
widget
-
panel
"
)
;
if
(
menu
.
state
!
=
"
open
"
)
{
await
BrowserTestUtils
.
waitForEvent
(
menu
"
popupshown
"
)
;
is
(
menu
.
state
"
open
"
"
Menu
is
open
"
)
;
}
is
(
menu
.
getAttribute
(
"
touchmode
"
)
"
true
"
"
Menu
is
in
touchmode
.
"
)
;
menu
.
hidePopup
(
)
;
EventUtils
.
synthesizeMouseAtCenter
(
target
{
}
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
document
.
getElementById
(
"
customizationui
-
widget
-
panel
"
)
!
=
null
)
;
menu
=
document
.
getElementById
(
"
customizationui
-
widget
-
panel
"
)
;
if
(
menu
.
state
!
=
"
open
"
)
{
await
BrowserTestUtils
.
waitForEvent
(
menu
"
popupshown
"
)
;
is
(
menu
.
state
"
open
"
"
Menu
is
open
"
)
;
}
ok
(
!
menu
.
hasAttribute
(
"
touchmode
"
)
"
Menu
is
not
in
touchmode
.
"
)
;
menu
.
hidePopup
(
)
;
}
add_task
(
async
function
test_main_menu_touch
(
)
{
if
(
!
gPhotonStructure
)
{
ok
(
true
"
Skipping
test
because
we
'
re
not
in
Photon
mode
"
)
;
return
;
}
let
mainMenu
=
document
.
getElementById
(
"
appMenu
-
popup
"
)
;
let
target
=
document
.
getElementById
(
"
PanelUI
-
menu
-
button
"
)
;
await
openAndCheckMenu
(
mainMenu
target
)
;
}
)
;
add_task
(
async
function
test_page_action_panel_touch
(
)
{
if
(
!
gPhotonStructure
)
{
ok
(
true
"
Skipping
test
because
we
'
re
not
in
Photon
mode
"
)
;
return
;
}
let
pageActionPanel
=
document
.
getElementById
(
"
page
-
action
-
panel
"
)
;
let
target
=
document
.
getElementById
(
"
urlbar
-
page
-
action
-
button
"
)
;
await
openAndCheckMenu
(
pageActionPanel
target
)
;
}
)
;
add_task
(
async
function
test_customizationui_panel_touch
(
)
{
if
(
!
gPhotonStructure
)
{
ok
(
true
"
Skipping
test
because
we
'
re
not
in
Photon
mode
"
)
;
return
;
}
CustomizableUI
.
addWidgetToArea
(
"
library
-
button
"
CustomizableUI
.
AREA_NAVBAR
)
;
CustomizableUI
.
addWidgetToArea
(
"
history
-
panelmenu
"
CustomizableUI
.
AREA_NAVBAR
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
CustomizableUI
.
getPlacementOfWidget
(
"
library
-
button
"
)
.
area
=
=
"
nav
-
bar
"
)
;
let
target
=
document
.
getElementById
(
"
library
-
button
"
)
;
await
openAndCheckCustomizationUIMenu
(
target
)
;
target
=
document
.
getElementById
(
"
history
-
panelmenu
"
)
;
await
openAndCheckCustomizationUIMenu
(
target
)
;
CustomizableUI
.
reset
(
)
;
}
)
;
