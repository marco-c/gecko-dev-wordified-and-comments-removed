ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
var
global
=
this
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
ContentMetaHandler
:
"
resource
:
/
/
/
modules
/
ContentMetaHandler
.
jsm
"
LoginFormFactory
:
"
resource
:
/
/
gre
/
modules
/
LoginManagerContent
.
jsm
"
InsecurePasswordUtils
:
"
resource
:
/
/
gre
/
modules
/
InsecurePasswordUtils
.
jsm
"
ContextMenuChild
:
"
resource
:
/
/
/
actors
/
ContextMenuChild
.
jsm
"
}
)
;
XPCOMUtils
.
defineLazyGetter
(
this
"
LoginManagerContent
"
(
)
=
>
{
let
tmp
=
{
}
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
LoginManagerContent
.
jsm
"
tmp
)
;
tmp
.
LoginManagerContent
.
setupEventListeners
(
global
)
;
return
tmp
.
LoginManagerContent
;
}
)
;
addMessageListener
(
"
RemoteLogins
:
fillForm
"
function
(
message
)
{
message
.
objects
.
inputElement
=
ContextMenuChild
.
getTarget
(
global
message
"
inputElement
"
)
;
LoginManagerContent
.
receiveMessage
(
message
content
)
;
}
)
;
addEventListener
(
"
DOMFormHasPassword
"
function
(
event
)
{
LoginManagerContent
.
onDOMFormHasPassword
(
event
content
)
;
let
formLike
=
LoginFormFactory
.
createFromForm
(
event
.
originalTarget
)
;
InsecurePasswordUtils
.
reportInsecurePasswords
(
formLike
)
;
}
)
;
addEventListener
(
"
DOMInputPasswordAdded
"
function
(
event
)
{
LoginManagerContent
.
onDOMInputPasswordAdded
(
event
content
)
;
let
formLike
=
LoginFormFactory
.
createFromField
(
event
.
originalTarget
)
;
InsecurePasswordUtils
.
reportInsecurePasswords
(
formLike
)
;
}
)
;
addEventListener
(
"
DOMAutoComplete
"
function
(
event
)
{
LoginManagerContent
.
onUsernameInput
(
event
)
;
}
)
;
ContentMetaHandler
.
init
(
this
)
;
void
content
;
addEventListener
(
"
DOMWindowFocus
"
function
(
event
)
{
sendAsyncMessage
(
"
DOMWindowFocus
"
{
}
)
;
}
false
)
;
