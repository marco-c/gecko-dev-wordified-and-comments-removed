var
gSyncUtils
=
{
get
fxAccountsEnabled
(
)
{
let
service
=
Components
.
classes
[
"
mozilla
.
org
/
weave
/
service
;
1
"
]
.
getService
(
Components
.
interfaces
.
nsISupports
)
.
wrappedJSObject
;
return
service
.
fxAccountsEnabled
;
}
_openLink
(
url
)
{
let
thisDocEl
=
document
.
documentElement
openerDocEl
=
window
.
opener
&
&
window
.
opener
.
document
.
documentElement
;
if
(
thisDocEl
.
id
=
=
"
accountSetup
"
&
&
window
.
opener
&
&
openerDocEl
.
id
=
=
"
BrowserPreferences
"
&
&
!
openerDocEl
.
instantApply
)
openUILinkIn
(
url
"
window
"
)
;
else
if
(
thisDocEl
.
id
=
=
"
BrowserPreferences
"
&
&
!
thisDocEl
.
instantApply
)
openUILinkIn
(
url
"
window
"
)
;
else
if
(
document
.
documentElement
.
id
=
=
"
change
-
dialog
"
)
Services
.
wm
.
getMostRecentWindow
(
"
navigator
:
browser
"
)
.
openUILinkIn
(
url
"
tab
"
)
;
else
openUILinkIn
(
url
"
tab
"
)
;
}
changeName
:
function
changeName
(
input
)
{
Weave
.
Service
.
clientsEngine
.
localName
=
input
.
value
;
input
.
value
=
Weave
.
Service
.
clientsEngine
.
localName
;
}
resetPassword
(
)
{
this
.
_openLink
(
Weave
.
Service
.
pwResetURL
)
;
}
get
tosURL
(
)
{
let
root
=
this
.
fxAccountsEnabled
?
"
fxa
.
"
:
"
"
;
return
Weave
.
Svc
.
Prefs
.
get
(
root
+
"
termsURL
"
)
;
}
get
privacyPolicyURL
(
)
{
let
root
=
this
.
fxAccountsEnabled
?
"
fxa
.
"
:
"
"
;
return
Weave
.
Svc
.
Prefs
.
get
(
root
+
"
privacyURL
"
)
;
}
}
;
