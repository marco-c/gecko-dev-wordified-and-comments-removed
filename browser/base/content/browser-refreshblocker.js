var
RefreshBlocker
=
{
init
(
)
{
gBrowser
.
addEventListener
(
"
RefreshBlocked
"
this
)
;
}
uninit
(
)
{
gBrowser
.
removeEventListener
(
"
RefreshBlocked
"
this
)
;
}
handleEvent
(
event
)
{
if
(
event
.
type
=
=
"
RefreshBlocked
"
)
{
this
.
block
(
event
.
originalTarget
event
.
detail
)
;
}
}
block
(
browser
data
)
{
let
brandBundle
=
document
.
getElementById
(
"
bundle_brand
"
)
;
let
brandShortName
=
brandBundle
.
getString
(
"
brandShortName
"
)
;
let
message
=
gNavigatorBundle
.
getFormattedString
(
data
.
sameURI
?
"
refreshBlocked
.
refreshLabel
"
:
"
refreshBlocked
.
redirectLabel
"
[
brandShortName
]
)
;
let
notificationBox
=
gBrowser
.
getNotificationBox
(
browser
)
;
let
notification
=
notificationBox
.
getNotificationWithValue
(
"
refresh
-
blocked
"
)
;
if
(
notification
)
{
notification
.
label
=
message
;
}
else
{
let
refreshButtonText
=
gNavigatorBundle
.
getString
(
"
refreshBlocked
.
goButton
"
)
;
let
refreshButtonAccesskey
=
gNavigatorBundle
.
getString
(
"
refreshBlocked
.
goButton
.
accesskey
"
)
;
let
buttons
=
[
{
label
:
refreshButtonText
accessKey
:
refreshButtonAccesskey
callback
(
)
{
if
(
browser
.
messageManager
)
{
browser
.
messageManager
.
sendAsyncMessage
(
"
RefreshBlocker
:
Refresh
"
data
)
;
}
}
}
]
;
notificationBox
.
appendNotification
(
message
"
refresh
-
blocked
"
"
chrome
:
/
/
browser
/
skin
/
Info
.
png
"
notificationBox
.
PRIORITY_INFO_MEDIUM
buttons
)
;
}
}
}
;
