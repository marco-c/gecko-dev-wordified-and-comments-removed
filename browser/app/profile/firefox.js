#
-
*
-
indent
-
tabs
-
mode
:
nil
;
js
-
indent
-
level
:
2
-
*
-
#
This
Source
Code
Form
is
subject
to
the
terms
of
the
Mozilla
Public
#
License
v
.
2
.
0
.
If
a
copy
of
the
MPL
was
not
distributed
with
this
#
file
You
can
obtain
one
at
http
:
/
/
mozilla
.
org
/
MPL
/
2
.
0
/
.
#
filter
substitution
#
#
SYNTAX
HINTS
:
#
#
-
Dashes
are
delimiters
;
use
underscores
instead
.
#
-
The
first
character
after
a
period
must
be
alphabetic
.
#
-
Computed
values
(
e
.
g
.
50
*
1024
)
don
'
t
work
.
#
#
ifdef
XP_UNIX
#
ifndef
XP_MACOSX
#
define
UNIX_BUT_NOT_MAC
#
endif
#
endif
pref
(
"
browser
.
chromeURL
"
"
chrome
:
/
/
browser
/
content
/
"
)
;
pref
(
"
browser
.
hiddenWindowChromeURL
"
"
chrome
:
/
/
browser
/
content
/
hiddenWindow
.
xul
"
)
;
pref
(
"
extensions
.
logging
.
enabled
"
false
)
;
pref
(
"
extensions
.
strictCompatibility
"
false
)
;
pref
(
"
extensions
.
minCompatibleAppVersion
"
"
4
.
0
"
)
;
pref
(
"
extensions
.
checkCompatibility
.
temporaryThemeOverride_minAppVersion
"
"
29
.
0a1
"
)
;
pref
(
"
xpinstall
.
customConfirmationUI
"
true
)
;
pref
(
"
extensions
.
webextPermissionPrompts
"
true
)
;
pref
(
"
extensions
.
webextOptionalPermissionPrompts
"
true
)
;
pref
(
"
extensions
.
getAddons
.
cache
.
enabled
"
true
)
;
pref
(
"
extensions
.
getAddons
.
maxResults
"
15
)
;
pref
(
"
extensions
.
getAddons
.
get
.
url
"
"
https
:
/
/
services
.
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
api
/
%
API_VERSION
%
/
search
/
guid
:
%
IDS
%
?
src
=
firefox
&
appOS
=
%
OS
%
&
appVersion
=
%
VERSION
%
"
)
;
pref
(
"
extensions
.
getAddons
.
getWithPerformance
.
url
"
"
https
:
/
/
services
.
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
api
/
%
API_VERSION
%
/
search
/
guid
:
%
IDS
%
?
src
=
firefox
&
appOS
=
%
OS
%
&
appVersion
=
%
VERSION
%
&
tMain
=
%
TIME_MAIN
%
&
tFirstPaint
=
%
TIME_FIRST_PAINT
%
&
tSessionRestored
=
%
TIME_SESSION_RESTORED
%
"
)
;
pref
(
"
extensions
.
getAddons
.
search
.
browseURL
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
search
?
q
=
%
TERMS
%
&
platform
=
%
OS
%
&
appver
=
%
VERSION
%
"
)
;
pref
(
"
extensions
.
getAddons
.
search
.
url
"
"
https
:
/
/
services
.
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
api
/
%
API_VERSION
%
/
search
/
%
TERMS
%
/
all
/
%
MAX_RESULTS
%
/
%
OS
%
/
%
VERSION
%
/
%
COMPATIBILITY_MODE
%
?
src
=
firefox
"
)
;
pref
(
"
extensions
.
webservice
.
discoverURL
"
"
https
:
/
/
discovery
.
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
discovery
/
pane
/
%
VERSION
%
/
%
OS
%
/
%
COMPATIBILITY_MODE
%
"
)
;
pref
(
"
extensions
.
getAddons
.
recommended
.
url
"
"
https
:
/
/
services
.
addons
.
mozilla
.
org
/
%
LOCALE
%
/
%
APP
%
/
api
/
%
API_VERSION
%
/
list
/
recommended
/
all
/
%
MAX_RESULTS
%
/
%
OS
%
/
%
VERSION
%
?
src
=
firefox
"
)
;
pref
(
"
extensions
.
getAddons
.
link
.
url
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
"
)
;
pref
(
"
extensions
.
getAddons
.
themes
.
browseURL
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
themes
/
?
src
=
firefox
"
)
;
pref
(
"
extensions
.
update
.
autoUpdateDefault
"
true
)
;
pref
(
"
extensions
.
hotfix
.
id
"
"
firefox
-
hotfix
mozilla
.
org
"
)
;
pref
(
"
extensions
.
hotfix
.
cert
.
checkAttributes
"
true
)
;
pref
(
"
extensions
.
hotfix
.
certs
.
1
.
sha1Fingerprint
"
"
91
:
53
:
98
:
0C
:
C1
:
86
:
DF
:
47
:
8F
:
35
:
22
:
9E
:
11
:
C9
:
A7
:
31
:
04
:
49
:
A1
:
AA
"
)
;
pref
(
"
extensions
.
hotfix
.
certs
.
2
.
sha1Fingerprint
"
"
39
:
E7
:
2B
:
7A
:
5B
:
CF
:
37
:
78
:
F9
:
5D
:
4A
:
E0
:
53
:
2D
:
2F
:
3D
:
68
:
53
:
C5
:
60
"
)
;
pref
(
"
extensions
.
systemAddon
.
update
.
url
"
"
https
:
/
/
aus5
.
mozilla
.
org
/
update
/
3
/
SystemAddons
/
%
VERSION
%
/
%
BUILD_ID
%
/
%
BUILD_TARGET
%
/
%
LOCALE
%
/
%
CHANNEL
%
/
%
OS_VERSION
%
/
%
DISTRIBUTION
%
/
%
DISTRIBUTION_VERSION
%
/
update
.
xml
"
)
;
pref
(
"
extensions
.
autoDisableScopes
"
15
)
;
pref
(
"
extensions
.
startupScanScopes
"
0
)
;
pref
(
"
extensions
.
geckoProfiler
.
symbols
.
url
"
"
http
:
/
/
symbols
.
mozilla
.
org
/
"
)
;
pref
(
"
extensions
.
geckoProfiler
.
acceptedExtensionIds
"
"
geckoprofiler
mozilla
.
com
quantum
-
foxfooding
mozilla
.
com
"
)
;
#
if
defined
(
XP_LINUX
)
|
|
defined
(
XP_MACOSX
)
pref
(
"
extensions
.
geckoProfiler
.
getSymbolRules
"
"
localBreakpad
remoteBreakpad
nm
"
)
;
#
else
/
/
defined
(
XP_WIN
)
pref
(
"
extensions
.
geckoProfiler
.
getSymbolRules
"
"
localBreakpad
remoteBreakpad
"
)
;
#
endif
pref
(
"
extensions
.
webextensions
.
base
-
content
-
security
-
policy
"
"
script
-
src
'
self
'
https
:
/
/
*
moz
-
extension
:
blob
:
filesystem
:
'
unsafe
-
eval
'
'
unsafe
-
inline
'
;
object
-
src
'
self
'
https
:
/
/
*
moz
-
extension
:
blob
:
filesystem
:
;
"
)
;
pref
(
"
extensions
.
webextensions
.
default
-
content
-
security
-
policy
"
"
script
-
src
'
self
'
;
object
-
src
'
self
'
;
"
)
;
#
ifdef
XP_WIN
pref
(
"
extensions
.
webextensions
.
remote
"
true
)
;
#
endif
pref
(
"
extensions
.
legacy
.
exceptions
"
"
{
972ce4c6
-
7e08
-
4474
-
a285
-
3208198ce6fd
}
testpilot
cliqz
.
com
testpilot
-
containers
jid1
-
NeEaf3sAHdKHPA
jetpack
activity
-
streams
pulse
mozilla
.
com
testpilot
-
addon
min
-
vid
tabcentertest1
mozilla
.
com
snoozetabs
mozilla
.
com
speaktome
mozilla
.
com
hoverpad
mozilla
.
com
"
)
;
pref
(
"
xpinstall
.
signatures
.
required
"
true
)
;
pref
(
"
xpinstall
.
signatures
.
devInfoURL
"
"
https
:
/
/
wiki
.
mozilla
.
org
/
Addons
/
Extension_Signing
"
)
;
pref
(
"
browser
.
dictionaries
.
download
.
url
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
dictionaries
/
"
)
;
pref
(
"
app
.
update
.
checkInstallTime
"
true
)
;
pref
(
"
app
.
update
.
timerMinimumDelay
"
120
)
;
pref
(
"
app
.
update
.
timerFirstInterval
"
30000
)
;
pref
(
"
app
.
update
.
altwindowtype
"
"
Browser
:
About
"
)
;
pref
(
"
app
.
update
.
log
"
false
)
;
pref
(
"
app
.
update
.
backgroundMaxErrors
"
10
)
;
pref
(
"
app
.
update
.
enabled
"
true
)
;
pref
(
"
app
.
update
.
doorhanger
"
true
)
;
pref
(
"
app
.
update
.
link
.
updateAvailableWhatsNew
"
"
update
-
available
-
whats
-
new
"
)
;
pref
(
"
app
.
update
.
link
.
updateManualWhatsNew
"
"
update
-
manual
-
whats
-
new
"
)
;
pref
(
"
app
.
update
.
download
.
promptMaxAttempts
"
2
)
;
pref
(
"
app
.
update
.
elevation
.
promptMaxAttempts
"
2
)
;
pref
(
"
app
.
update
.
auto
"
true
)
;
pref
(
"
app
.
update
.
silent
"
false
)
;
#
ifdef
XP_WIN
pref
(
"
app
.
update
.
staging
.
enabled
"
false
)
;
#
else
pref
(
"
app
.
update
.
staging
.
enabled
"
true
)
;
#
endif
pref
(
"
app
.
update
.
url
"
"
https
:
/
/
aus5
.
mozilla
.
org
/
update
/
6
/
%
PRODUCT
%
/
%
VERSION
%
/
%
BUILD_ID
%
/
%
BUILD_TARGET
%
/
%
LOCALE
%
/
%
CHANNEL
%
/
%
OS_VERSION
%
/
%
SYSTEM_CAPABILITIES
%
/
%
DISTRIBUTION
%
/
%
DISTRIBUTION_VERSION
%
/
update
.
xml
"
)
;
pref
(
"
app
.
update
.
idletime
"
60
)
;
#
ifdef
MOZ_MAINTENANCE_SERVICE
pref
(
"
app
.
update
.
service
.
enabled
"
true
)
;
#
endif
pref
(
"
extensions
.
update
.
enabled
"
true
)
;
pref
(
"
extensions
.
update
.
url
"
"
https
:
/
/
versioncheck
.
addons
.
mozilla
.
org
/
update
/
VersionCheck
.
php
?
reqVersion
=
%
REQ_VERSION
%
&
id
=
%
ITEM_ID
%
&
version
=
%
ITEM_VERSION
%
&
maxAppVersion
=
%
ITEM_MAXAPPVERSION
%
&
status
=
%
ITEM_STATUS
%
&
appID
=
%
APP_ID
%
&
appVersion
=
%
APP_VERSION
%
&
appOS
=
%
APP_OS
%
&
appABI
=
%
APP_ABI
%
&
locale
=
%
APP_LOCALE
%
&
currentAppVersion
=
%
CURRENT_APP_VERSION
%
&
updateType
=
%
UPDATE_TYPE
%
&
compatMode
=
%
COMPATIBILITY_MODE
%
"
)
;
pref
(
"
extensions
.
update
.
background
.
url
"
"
https
:
/
/
versioncheck
-
bg
.
addons
.
mozilla
.
org
/
update
/
VersionCheck
.
php
?
reqVersion
=
%
REQ_VERSION
%
&
id
=
%
ITEM_ID
%
&
version
=
%
ITEM_VERSION
%
&
maxAppVersion
=
%
ITEM_MAXAPPVERSION
%
&
status
=
%
ITEM_STATUS
%
&
appID
=
%
APP_ID
%
&
appVersion
=
%
APP_VERSION
%
&
appOS
=
%
APP_OS
%
&
appABI
=
%
APP_ABI
%
&
locale
=
%
APP_LOCALE
%
&
currentAppVersion
=
%
CURRENT_APP_VERSION
%
&
updateType
=
%
UPDATE_TYPE
%
&
compatMode
=
%
COMPATIBILITY_MODE
%
"
)
;
pref
(
"
extensions
.
update
.
interval
"
86400
)
;
pref
(
"
extensions
.
dss
.
switchPending
"
false
)
;
pref
(
"
extensions
.
{
972ce4c6
-
7e08
-
4474
-
a285
-
3208198ce6fd
}
.
name
"
"
chrome
:
/
/
browser
/
locale
/
browser
.
properties
"
)
;
pref
(
"
extensions
.
{
972ce4c6
-
7e08
-
4474
-
a285
-
3208198ce6fd
}
.
description
"
"
chrome
:
/
/
browser
/
locale
/
browser
.
properties
"
)
;
pref
(
"
extensions
.
webextensions
.
themes
.
enabled
"
true
)
;
pref
(
"
extensions
.
webextensions
.
themes
.
icons
.
buttons
"
"
back
forward
reload
stop
bookmark_star
bookmark_menu
downloads
home
app_menu
cut
copy
paste
new_window
new_private_window
save_page
print
history
full_screen
find
options
addons
developer
synced_tabs
open_file
sidebars
share_page
subscribe
text_encoding
email_link
forget
pocket
"
)
;
pref
(
"
lightweightThemes
.
update
.
enabled
"
true
)
;
pref
(
"
lightweightThemes
.
getMoreURL
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
themes
"
)
;
pref
(
"
lightweightThemes
.
recommendedThemes
"
"
[
{
\
"
id
\
"
:
\
"
recommended
-
1
\
"
\
"
homepageURL
\
"
:
\
"
https
:
/
/
addons
.
mozilla
.
org
/
firefox
/
addon
/
a
-
web
-
browser
-
renaissance
/
\
"
\
"
headerURL
\
"
:
\
"
resource
:
/
/
/
chrome
/
browser
/
content
/
browser
/
defaultthemes
/
1
.
header
.
jpg
\
"
\
"
textcolor
\
"
:
\
"
#
000000
\
"
\
"
accentcolor
\
"
:
\
"
#
f2d9b1
\
"
\
"
iconURL
\
"
:
\
"
resource
:
/
/
/
chrome
/
browser
/
content
/
browser
/
defaultthemes
/
1
.
icon
.
jpg
\
"
\
"
previewURL
\
"
:
\
"
resource
:
/
/
/
chrome
/
browser
/
content
/
browser
/
defaultthemes
/
1
.
preview
.
jpg
\
"
\
"
author
\
"
:
\
"
Sean
.
Martell
\
"
\
"
version
\
"
:
\
"
0
\
"
}
{
\
"
id
\
"
:
\
"
recommended
-
2
\
"
\
"
homepageURL
\
"
:
\
"
https
:
/
/
addons
.
mozilla
.
org
/
firefox
/
addon
/
space
-
fantasy
/
\
"
\
"
headerURL
\
"
:
\
"
resource
:
/
/
/
chrome
/
browser
/
content
/
browser
/
defaultthemes
/
2
.
header
.
jpg
\
"
\
"
textcolor
\
"
:
\
"
#
ffffff
\
"
\
"
accentcolor
\
"
:
\
"
#
d9d9d9
\
"
\
"
iconURL
\
"
:
\
"
resource
:
/
/
/
chrome
/
browser
/
content
/
browser
/
defaultthemes
/
2
.
icon
.
jpg
\
"
\
"
previewURL
\
"
:
\
"
resource
:
/
/
/
chrome
/
browser
/
content
/
browser
/
defaultthemes
/
2
.
preview
.
jpg
\
"
\
"
author
\
"
:
\
"
fx5800p
\
"
\
"
version
\
"
:
\
"
1
.
0
\
"
}
{
\
"
id
\
"
:
\
"
recommended
-
4
\
"
\
"
homepageURL
\
"
:
\
"
https
:
/
/
addons
.
mozilla
.
org
/
firefox
/
addon
/
pastel
-
gradient
/
\
"
\
"
headerURL
\
"
:
\
"
resource
:
/
/
/
chrome
/
browser
/
content
/
browser
/
defaultthemes
/
4
.
header
.
png
\
"
\
"
textcolor
\
"
:
\
"
#
000000
\
"
\
"
accentcolor
\
"
:
\
"
#
000000
\
"
\
"
iconURL
\
"
:
\
"
resource
:
/
/
/
chrome
/
browser
/
content
/
browser
/
defaultthemes
/
4
.
icon
.
png
\
"
\
"
previewURL
\
"
:
\
"
resource
:
/
/
/
chrome
/
browser
/
content
/
browser
/
defaultthemes
/
4
.
preview
.
png
\
"
\
"
author
\
"
:
\
"
darrinhenein
\
"
\
"
version
\
"
:
\
"
1
.
0
\
"
}
]
"
)
;
#
if
defined
(
MOZ_WIDEVINE_EME
)
pref
(
"
browser
.
eme
.
ui
.
enabled
"
true
)
;
#
else
pref
(
"
browser
.
eme
.
ui
.
enabled
"
false
)
;
#
endif
pref
(
"
browser
.
uitour
.
enabled
"
true
)
;
pref
(
"
browser
.
uitour
.
loglevel
"
"
Error
"
)
;
pref
(
"
browser
.
uitour
.
requireSecure
"
true
)
;
pref
(
"
browser
.
uitour
.
themeOrigin
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
themes
/
"
)
;
pref
(
"
browser
.
uitour
.
url
"
"
https
:
/
/
www
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
%
VERSION
%
/
tour
/
"
)
;
pref
(
"
browser
.
uitour
.
surveyDuration
"
7200
)
;
pref
(
"
browser
.
customizemode
.
tip0
.
shown
"
false
)
;
pref
(
"
browser
.
customizemode
.
tip0
.
learnMoreUrl
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
customize
"
)
;
pref
(
"
keyword
.
enabled
"
true
)
;
pref
(
"
browser
.
fixup
.
domainwhitelist
.
localhost
"
true
)
;
pref
(
"
general
.
useragent
.
locale
"
"
AB_CD
"
)
;
pref
(
"
general
.
skins
.
selectedSkin
"
"
classic
/
1
.
0
"
)
;
pref
(
"
general
.
smoothScroll
"
true
)
;
#
ifdef
UNIX_BUT_NOT_MAC
pref
(
"
general
.
autoScroll
"
false
)
;
#
else
pref
(
"
general
.
autoScroll
"
true
)
;
#
endif
pref
(
"
browser
.
stopReloadAnimation
.
enabled
"
true
)
;
pref
(
"
browser
.
uidensity
"
0
)
;
pref
(
"
browser
.
touchmode
.
auto
"
true
)
;
pref
(
"
browser
.
shell
.
checkDefaultBrowser
"
true
)
;
pref
(
"
browser
.
shell
.
shortcutFavicons
"
true
)
;
pref
(
"
browser
.
shell
.
mostRecentDateSetAsDefault
"
"
"
)
;
pref
(
"
browser
.
shell
.
skipDefaultBrowserCheckOnFirstRun
"
true
)
;
pref
(
"
browser
.
shell
.
didSkipDefaultBrowserCheckOnFirstRun
"
false
)
;
pref
(
"
browser
.
shell
.
defaultBrowserCheckCount
"
0
)
;
pref
(
"
browser
.
defaultbrowser
.
notificationbar
"
false
)
;
pref
(
"
browser
.
startup
.
page
"
1
)
;
pref
(
"
browser
.
startup
.
homepage
"
"
chrome
:
/
/
branding
/
locale
/
browserconfig
.
properties
"
)
;
pref
(
"
browser
.
startup
.
firstrunSkipsHomepage
"
true
)
;
pref
(
"
browser
.
slowStartup
.
notificationDisabled
"
false
)
;
pref
(
"
browser
.
slowStartup
.
timeThreshold
"
20000
)
;
pref
(
"
browser
.
slowStartup
.
maxSamples
"
5
)
;
pref
(
"
browser
.
aboutHomeSnippets
.
updateUrl
"
"
https
:
/
/
snippets
.
cdn
.
mozilla
.
net
/
%
STARTPAGE_VERSION
%
/
%
NAME
%
/
%
VERSION
%
/
%
APPBUILDID
%
/
%
BUILD_TARGET
%
/
%
LOCALE
%
/
%
CHANNEL
%
/
%
OS_VERSION
%
/
%
DISTRIBUTION
%
/
%
DISTRIBUTION_VERSION
%
/
"
)
;
pref
(
"
browser
.
enable_automatic_image_resizing
"
true
)
;
pref
(
"
browser
.
casting
.
enabled
"
false
)
;
pref
(
"
browser
.
chrome
.
site_icons
"
true
)
;
pref
(
"
browser
.
chrome
.
favicons
"
true
)
;
pref
(
"
browser
.
warnOnQuit
"
true
)
;
pref
(
"
browser
.
showQuitWarning
"
false
)
;
pref
(
"
browser
.
fullscreen
.
autohide
"
true
)
;
pref
(
"
browser
.
overlink
-
delay
"
80
)
;
#
ifdef
UNIX_BUT_NOT_MAC
pref
(
"
browser
.
urlbar
.
clickSelectsAll
"
false
)
;
#
else
pref
(
"
browser
.
urlbar
.
clickSelectsAll
"
true
)
;
#
endif
#
ifdef
UNIX_BUT_NOT_MAC
pref
(
"
browser
.
urlbar
.
doubleClickSelectsAll
"
true
)
;
#
else
pref
(
"
browser
.
urlbar
.
doubleClickSelectsAll
"
false
)
;
#
endif
pref
(
"
browser
.
urlbar
.
autoFill
"
true
)
;
pref
(
"
browser
.
urlbar
.
autoFill
.
typed
"
true
)
;
pref
(
"
browser
.
urlbar
.
speculativeConnect
.
enabled
"
true
)
;
pref
(
"
browser
.
urlbar
.
matchBehavior
"
1
)
;
pref
(
"
browser
.
urlbar
.
filter
.
javascript
"
true
)
;
pref
(
"
browser
.
urlbar
.
maxRichResults
"
10
)
;
pref
(
"
browser
.
urlbar
.
delay
"
50
)
;
pref
(
"
browser
.
urlbar
.
suggest
.
history
"
true
)
;
pref
(
"
browser
.
urlbar
.
suggest
.
bookmark
"
true
)
;
pref
(
"
browser
.
urlbar
.
suggest
.
openpage
"
true
)
;
pref
(
"
browser
.
urlbar
.
suggest
.
searches
"
true
)
;
pref
(
"
browser
.
urlbar
.
userMadeSearchSuggestionsChoice
"
false
)
;
pref
(
"
browser
.
urlbar
.
daysBeforeHidingSuggestionsPrompt
"
4
)
;
pref
(
"
browser
.
urlbar
.
lastSuggestionsPromptDate
"
20160601
)
;
pref
(
"
browser
.
urlbar
.
timesBeforeHidingSuggestionsHint
"
4
)
;
pref
(
"
browser
.
urlbar
.
maxCharsForSearchSuggestions
"
20
)
;
pref
(
"
browser
.
urlbar
.
suggest
.
history
.
onlyTyped
"
false
)
;
pref
(
"
browser
.
urlbar
.
formatting
.
enabled
"
true
)
;
pref
(
"
browser
.
urlbar
.
trimURLs
"
true
)
;
pref
(
"
browser
.
urlbar
.
oneOffSearches
"
true
)
;
pref
(
"
browser
.
urlbar
.
decodeURLsOnCopy
"
false
)
;
pref
(
"
browser
.
altClickSave
"
false
)
;
pref
(
"
browser
.
download
.
loglevel
"
"
Error
"
)
;
pref
(
"
browser
.
download
.
saveLinkAsFilenameTimeout
"
4000
)
;
pref
(
"
browser
.
download
.
useDownloadDir
"
true
)
;
pref
(
"
browser
.
download
.
folderList
"
1
)
;
pref
(
"
browser
.
download
.
manager
.
addToRecentDocs
"
true
)
;
pref
(
"
browser
.
download
.
manager
.
resumeOnWakeDelay
"
10000
)
;
pref
(
"
browser
.
download
.
animateNotifications
"
true
)
;
pref
(
"
browser
.
download
.
panel
.
shown
"
false
)
;
#
ifndef
XP_MACOSX
pref
(
"
browser
.
helperApps
.
deleteTempFileOnExit
"
true
)
;
#
endif
pref
(
"
browser
.
search
.
searchEnginesURL
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
search
-
engines
/
"
)
;
pref
(
"
browser
.
search
.
defaultenginename
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
search
.
order
.
1
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
search
.
order
.
2
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
search
.
order
.
3
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
search
.
geoSpecificDefaults
"
false
)
;
pref
(
"
browser
.
search
.
geoSpecificDefaults
.
url
"
"
https
:
/
/
search
.
services
.
mozilla
.
com
/
1
/
%
APP
%
/
%
VERSION
%
/
%
CHANNEL
%
/
%
LOCALE
%
/
%
REGION
%
/
%
DISTRIBUTION
%
/
%
DISTRIBUTION_VERSION
%
"
)
;
pref
(
"
browser
.
search
.
defaultenginename
.
US
"
"
data
:
text
/
plain
browser
.
search
.
defaultenginename
.
US
=
Yahoo
"
)
;
pref
(
"
browser
.
search
.
order
.
US
.
1
"
"
data
:
text
/
plain
browser
.
search
.
order
.
US
.
1
=
Yahoo
"
)
;
pref
(
"
browser
.
search
.
order
.
US
.
2
"
"
data
:
text
/
plain
browser
.
search
.
order
.
US
.
2
=
Google
"
)
;
pref
(
"
browser
.
search
.
order
.
US
.
3
"
"
data
:
text
/
plain
browser
.
search
.
order
.
US
.
3
=
Bing
"
)
;
pref
(
"
browser
.
search
.
openintab
"
false
)
;
pref
(
"
browser
.
search
.
context
.
loadInBackground
"
false
)
;
pref
(
"
browser
.
search
.
hiddenOneOffs
"
"
"
)
;
pref
(
"
browser
.
search
.
widget
.
inNavBar
"
true
)
;
#
ifndef
RELEASE_OR_BETA
pref
(
"
browser
.
search
.
reset
.
enabled
"
true
)
;
#
endif
pref
(
"
browser
.
sessionhistory
.
max_entries
"
50
)
;
pref
(
"
permissions
.
manager
.
defaultsUrl
"
"
resource
:
/
/
app
/
defaults
/
permissions
"
)
;
pref
(
"
browser
.
link
.
open_newwindow
"
3
)
;
pref
(
"
browser
.
link
.
open_newwindow
.
override
.
external
"
-
1
)
;
pref
(
"
browser
.
link
.
open_newwindow
.
restriction
"
2
)
;
#
ifdef
XP_MACOSX
pref
(
"
browser
.
link
.
open_newwindow
.
disabled_in_fullscreen
"
true
)
;
#
else
pref
(
"
browser
.
link
.
open_newwindow
.
disabled_in_fullscreen
"
false
)
;
#
endif
pref
(
"
browser
.
tabs
.
closeWindowWithLastTab
"
true
)
;
pref
(
"
browser
.
tabs
.
insertRelatedAfterCurrent
"
true
)
;
pref
(
"
browser
.
tabs
.
warnOnClose
"
true
)
;
pref
(
"
browser
.
tabs
.
warnOnCloseOtherTabs
"
true
)
;
pref
(
"
browser
.
tabs
.
warnOnOpen
"
true
)
;
pref
(
"
browser
.
tabs
.
maxOpenBeforeWarn
"
15
)
;
pref
(
"
browser
.
tabs
.
loadInBackground
"
true
)
;
pref
(
"
browser
.
tabs
.
opentabfor
.
middleclick
"
true
)
;
pref
(
"
browser
.
tabs
.
loadDivertedInBackground
"
false
)
;
pref
(
"
browser
.
tabs
.
loadBookmarksInBackground
"
false
)
;
pref
(
"
browser
.
tabs
.
tabClipWidth
"
140
)
;
#
ifdef
UNIX_BUT_NOT_MAC
pref
(
"
browser
.
tabs
.
drawInTitlebar
"
false
)
;
#
else
pref
(
"
browser
.
tabs
.
drawInTitlebar
"
true
)
;
#
endif
pref
(
"
browser
.
tabs
.
restorebutton
"
false
)
;
pref
(
"
browser
.
tabs
.
selectOwnerOnClose
"
true
)
;
pref
(
"
browser
.
tabs
.
showAudioPlayingIcon
"
true
)
;
pref
(
"
browser
.
tabs
.
delayHidingAudioPlayingIconMS
"
3000
)
;
pref
(
"
browser
.
ctrlTab
.
previews
"
false
)
;
pref
(
"
browser
.
bookmarks
.
autoExportHTML
"
false
)
;
pref
(
"
browser
.
bookmarks
.
max_backups
"
15
)
;
pref
(
"
browser
.
bookmarks
.
showRecentlyBookmarked
"
true
)
;
pref
(
"
dom
.
disable_open_during_load
"
true
)
;
pref
(
"
javascript
.
options
.
showInConsole
"
true
)
;
#
ifdef
DEBUG
pref
(
"
general
.
warnOnAboutConfig
"
false
)
;
#
endif
pref
(
"
dom
.
disable_window_open_feature
.
location
"
true
)
;
pref
(
"
dom
.
disable_window_status_change
"
true
)
;
pref
(
"
dom
.
disable_window_move_resize
"
false
)
;
pref
(
"
dom
.
disable_window_flip
"
true
)
;
pref
(
"
privacy
.
popups
.
policy
"
1
)
;
pref
(
"
privacy
.
popups
.
usecustom
"
true
)
;
pref
(
"
privacy
.
popups
.
showBrowserMessage
"
true
)
;
pref
(
"
privacy
.
item
.
cookies
"
false
)
;
pref
(
"
privacy
.
clearOnShutdown
.
history
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
formdata
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
downloads
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
cookies
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
cache
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
sessions
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
offlineApps
"
false
)
;
pref
(
"
privacy
.
clearOnShutdown
.
siteSettings
"
false
)
;
pref
(
"
privacy
.
clearOnShutdown
.
openWindows
"
false
)
;
pref
(
"
privacy
.
cpd
.
history
"
true
)
;
pref
(
"
privacy
.
cpd
.
formdata
"
true
)
;
pref
(
"
privacy
.
cpd
.
passwords
"
false
)
;
pref
(
"
privacy
.
cpd
.
downloads
"
true
)
;
pref
(
"
privacy
.
cpd
.
cookies
"
true
)
;
pref
(
"
privacy
.
cpd
.
cache
"
true
)
;
pref
(
"
privacy
.
cpd
.
sessions
"
true
)
;
pref
(
"
privacy
.
cpd
.
offlineApps
"
false
)
;
pref
(
"
privacy
.
cpd
.
siteSettings
"
false
)
;
pref
(
"
privacy
.
cpd
.
openWindows
"
false
)
;
pref
(
"
privacy
.
history
.
custom
"
false
)
;
pref
(
"
privacy
.
sanitize
.
timeSpan
"
1
)
;
pref
(
"
privacy
.
sanitize
.
sanitizeOnShutdown
"
false
)
;
pref
(
"
privacy
.
sanitize
.
migrateFx3Prefs
"
false
)
;
pref
(
"
privacy
.
panicButton
.
enabled
"
true
)
;
pref
(
"
privacy
.
temporary_permission_expire_time_ms
"
3600000
)
;
pref
(
"
network
.
proxy
.
share_proxy_settings
"
false
)
;
pref
(
"
browser
.
gesture
.
swipe
.
left
"
"
Browser
:
BackOrBackDuplicate
"
)
;
pref
(
"
browser
.
gesture
.
swipe
.
right
"
"
Browser
:
ForwardOrForwardDuplicate
"
)
;
pref
(
"
browser
.
gesture
.
swipe
.
up
"
"
cmd_scrollTop
"
)
;
pref
(
"
browser
.
gesture
.
swipe
.
down
"
"
cmd_scrollBottom
"
)
;
#
ifdef
XP_MACOSX
pref
(
"
browser
.
gesture
.
pinch
.
latched
"
true
)
;
pref
(
"
browser
.
gesture
.
pinch
.
threshold
"
150
)
;
#
else
pref
(
"
browser
.
gesture
.
pinch
.
latched
"
false
)
;
pref
(
"
browser
.
gesture
.
pinch
.
threshold
"
25
)
;
#
endif
#
ifdef
XP_WIN
pref
(
"
browser
.
gesture
.
pinch
.
out
"
"
cmd_fullZoomEnlarge
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
in
"
"
cmd_fullZoomReduce
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
out
.
shift
"
"
cmd_fullZoomReset
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
in
.
shift
"
"
cmd_fullZoomReset
"
)
;
#
else
pref
(
"
browser
.
gesture
.
pinch
.
out
"
"
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
in
"
"
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
out
.
shift
"
"
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
in
.
shift
"
"
"
)
;
#
endif
pref
(
"
browser
.
gesture
.
twist
.
latched
"
false
)
;
pref
(
"
browser
.
gesture
.
twist
.
threshold
"
0
)
;
pref
(
"
browser
.
gesture
.
twist
.
right
"
"
cmd_gestureRotateRight
"
)
;
pref
(
"
browser
.
gesture
.
twist
.
left
"
"
cmd_gestureRotateLeft
"
)
;
pref
(
"
browser
.
gesture
.
twist
.
end
"
"
cmd_gestureRotateEnd
"
)
;
pref
(
"
browser
.
gesture
.
tap
"
"
cmd_fullZoomReset
"
)
;
pref
(
"
browser
.
snapshots
.
limit
"
0
)
;
#
ifdef
XP_MACOSX
pref
(
"
mousewheel
.
with_alt
.
action
"
2
)
;
pref
(
"
mousewheel
.
with_shift
.
action
"
1
)
;
pref
(
"
mousewheel
.
with_meta
.
action
"
3
)
;
pref
(
"
mousewheel
.
with_control
.
action
.
override_x
"
0
)
;
pref
(
"
mousewheel
.
with_meta
.
action
.
override_x
"
0
)
;
#
else
pref
(
"
mousewheel
.
with_alt
.
action
"
1
)
;
pref
(
"
mousewheel
.
with_shift
.
action
"
2
)
;
pref
(
"
mousewheel
.
with_meta
.
action
"
1
)
;
#
endif
pref
(
"
mousewheel
.
with_control
.
action
"
3
)
;
pref
(
"
mousewheel
.
with_win
.
action
"
1
)
;
pref
(
"
browser
.
xul
.
error_pages
.
enabled
"
true
)
;
pref
(
"
browser
.
xul
.
error_pages
.
expert_bad_cert
"
false
)
;
pref
(
"
network
.
captive
-
portal
-
service
.
enabled
"
true
)
;
pref
(
"
network
.
manage
-
offline
-
status
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
external
.
mailto
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
external
.
news
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
external
.
snews
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
external
.
nntp
"
true
)
;
#
ifdef
XP_WIN
pref
(
"
network
.
protocol
-
handler
.
external
.
ms
-
windows
-
store
"
true
)
;
#
endif
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
mailto
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
news
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
snews
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
nntp
"
false
)
;
#
ifdef
XP_WIN
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
ms
-
windows
-
store
"
false
)
;
#
endif
pref
(
"
network
.
protocol
-
handler
.
expose
-
all
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
expose
.
mailto
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
expose
.
news
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
expose
.
snews
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
expose
.
nntp
"
false
)
;
pref
(
"
accessibility
.
typeaheadfind
"
false
)
;
pref
(
"
accessibility
.
typeaheadfind
.
timeout
"
5000
)
;
pref
(
"
accessibility
.
typeaheadfind
.
linksonly
"
false
)
;
pref
(
"
accessibility
.
typeaheadfind
.
flashBar
"
1
)
;
pref
(
"
accessibility
.
loadedInLastSession
"
false
)
;
pref
(
"
plugins
.
click_to_play
"
true
)
;
pref
(
"
plugins
.
testmode
"
false
)
;
pref
(
"
plugins
.
show_infobar
"
false
)
;
pref
(
"
plugins
.
remember_infobar_dismissal
"
true
)
;
pref
(
"
plugin
.
default
.
state
"
1
)
;
pref
(
"
plugin
.
defaultXpi
.
state
"
2
)
;
pref
(
"
plugin
.
state
.
java
"
1
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
plugin
.
state
.
flash
"
1
)
;
#
else
pref
(
"
plugin
.
state
.
flash
"
2
)
;
#
endif
pref
(
"
plugins
.
flashBlock
.
enabled
"
true
)
;
pref
(
"
plugins
.
favorfallback
.
mode
"
"
follow
-
ctp
"
)
;
pref
(
"
plugins
.
favorfallback
.
rules
"
"
nosrc
video
"
)
;
#
ifdef
XP_WIN
pref
(
"
browser
.
preferences
.
instantApply
"
false
)
;
#
else
pref
(
"
browser
.
preferences
.
instantApply
"
true
)
;
#
endif
pref
(
"
browser
.
preferences
.
search
"
true
)
;
pref
(
"
browser
.
preferences
.
useOldOrganization
"
false
)
;
#
if
defined
(
NIGHTLY_BUILD
)
pref
(
"
browser
.
preferences
.
offlineGroup
.
enabled
"
false
)
;
#
else
pref
(
"
browser
.
preferences
.
offlineGroup
.
enabled
"
true
)
;
#
endif
pref
(
"
browser
.
preferences
.
defaultPerformanceSettings
.
enabled
"
true
)
;
pref
(
"
browser
.
download
.
show_plugins_in_list
"
true
)
;
pref
(
"
browser
.
download
.
hide_plugins_without_extensions
"
true
)
;
#
ifdef
UNIX_BUT_NOT_MAC
pref
(
"
browser
.
backspace_action
"
2
)
;
#
else
pref
(
"
browser
.
backspace_action
"
0
)
;
#
endif
pref
(
"
layout
.
spellcheckDefault
"
1
)
;
pref
(
"
browser
.
send_pings
"
false
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
0
.
title
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
0
.
uri
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
0
.
type
"
"
application
/
vnd
.
mozilla
.
maybe
.
feed
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
1
.
title
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
1
.
uri
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
1
.
type
"
"
application
/
vnd
.
mozilla
.
maybe
.
feed
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
2
.
title
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
2
.
uri
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
2
.
type
"
"
application
/
vnd
.
mozilla
.
maybe
.
feed
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
3
.
title
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
3
.
uri
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
3
.
type
"
"
application
/
vnd
.
mozilla
.
maybe
.
feed
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
4
.
title
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
4
.
uri
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
4
.
type
"
"
application
/
vnd
.
mozilla
.
maybe
.
feed
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
5
.
title
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
5
.
uri
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
contentHandlers
.
types
.
5
.
type
"
"
application
/
vnd
.
mozilla
.
maybe
.
feed
"
)
;
pref
(
"
browser
.
feeds
.
handler
"
"
ask
"
)
;
pref
(
"
browser
.
videoFeeds
.
handler
"
"
ask
"
)
;
pref
(
"
browser
.
audioFeeds
.
handler
"
"
ask
"
)
;
pref
(
"
gecko
.
handlerService
.
defaultHandlersVersion
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
0
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
0
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
1
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
1
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
2
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
2
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
3
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
3
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
0
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
0
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
1
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
1
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
2
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
2
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
3
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
3
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
0
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
0
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
1
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
1
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
2
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
2
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
3
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
3
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
0
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
0
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
1
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
1
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
2
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
2
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
3
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
3
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
geolocation
.
warning
.
infoURL
"
"
https
:
/
/
www
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
geolocation
/
"
)
;
pref
(
"
browser
.
EULA
.
version
"
3
)
;
pref
(
"
browser
.
rights
.
version
"
3
)
;
pref
(
"
browser
.
rights
.
3
.
shown
"
false
)
;
#
ifdef
DEBUG
pref
(
"
browser
.
rights
.
override
"
true
)
;
#
endif
pref
(
"
browser
.
sessionstore
.
resume_from_crash
"
true
)
;
pref
(
"
browser
.
sessionstore
.
resume_session_once
"
false
)
;
pref
(
"
browser
.
sessionstore
.
interval
"
15000
)
;
pref
(
"
browser
.
sessionstore
.
interval
.
idle
"
3600000
)
;
pref
(
"
browser
.
sessionstore
.
idleDelay
"
180000
)
;
pref
(
"
browser
.
sessionstore
.
privacy_level
"
0
)
;
pref
(
"
browser
.
sessionstore
.
max_tabs_undo
"
10
)
;
pref
(
"
browser
.
sessionstore
.
max_windows_undo
"
3
)
;
pref
(
"
browser
.
sessionstore
.
max_resumed_crashes
"
1
)
;
pref
(
"
browser
.
sessionstore
.
max_serialize_back
"
10
)
;
pref
(
"
browser
.
sessionstore
.
max_serialize_forward
"
-
1
)
;
pref
(
"
browser
.
sessionstore
.
restore_on_demand
"
true
)
;
pref
(
"
browser
.
sessionstore
.
restore_hidden_tabs
"
false
)
;
pref
(
"
browser
.
sessionstore
.
restore_pinned_tabs_on_demand
"
false
)
;
pref
(
"
browser
.
sessionstore
.
upgradeBackup
.
latestBuildID
"
"
"
)
;
pref
(
"
browser
.
sessionstore
.
upgradeBackup
.
maxUpgradeBackups
"
3
)
;
pref
(
"
browser
.
sessionstore
.
debug
"
false
)
;
pref
(
"
browser
.
sessionstore
.
debug
.
no_auto_updates
"
false
)
;
pref
(
"
browser
.
sessionstore
.
cleanup
.
forget_closed_after
"
1209600000
)
;
pref
(
"
browser
.
sessionstore
.
dom_storage_limit
"
2048
)
;
pref
(
"
accessibility
.
blockautorefresh
"
false
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
browser
.
places
.
useAsyncTransactions
"
true
)
;
#
else
pref
(
"
browser
.
places
.
useAsyncTransactions
"
false
)
;
#
endif
pref
(
"
places
.
history
.
enabled
"
true
)
;
pref
(
"
places
.
frecency
.
numVisits
"
10
)
;
pref
(
"
places
.
frecency
.
firstBucketCutoff
"
4
)
;
pref
(
"
places
.
frecency
.
secondBucketCutoff
"
14
)
;
pref
(
"
places
.
frecency
.
thirdBucketCutoff
"
31
)
;
pref
(
"
places
.
frecency
.
fourthBucketCutoff
"
90
)
;
pref
(
"
places
.
frecency
.
firstBucketWeight
"
100
)
;
pref
(
"
places
.
frecency
.
secondBucketWeight
"
70
)
;
pref
(
"
places
.
frecency
.
thirdBucketWeight
"
50
)
;
pref
(
"
places
.
frecency
.
fourthBucketWeight
"
30
)
;
pref
(
"
places
.
frecency
.
defaultBucketWeight
"
10
)
;
pref
(
"
places
.
frecency
.
embedVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
framedLinkVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
linkVisitBonus
"
100
)
;
pref
(
"
places
.
frecency
.
typedVisitBonus
"
2000
)
;
pref
(
"
places
.
frecency
.
bookmarkVisitBonus
"
75
)
;
pref
(
"
places
.
frecency
.
redirectSourceVisitBonus
"
25
)
;
pref
(
"
places
.
frecency
.
downloadVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
permRedirectVisitBonus
"
50
)
;
pref
(
"
places
.
frecency
.
tempRedirectVisitBonus
"
40
)
;
pref
(
"
places
.
frecency
.
reloadVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
defaultVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
unvisitedBookmarkBonus
"
140
)
;
pref
(
"
places
.
frecency
.
unvisitedTypedBonus
"
200
)
;
pref
(
"
browser
.
ssl_override_behavior
"
2
)
;
pref
(
"
browser
.
offline
-
apps
.
notify
"
true
)
;
pref
(
"
browser
.
zoom
.
full
"
true
)
;
pref
(
"
browser
.
zoom
.
siteSpecific
"
true
)
;
pref
(
"
browser
.
zoom
.
updateBackgroundTabs
"
true
)
;
pref
(
"
breakpad
.
reportURL
"
"
https
:
/
/
crash
-
stats
.
mozilla
.
com
/
report
/
index
/
"
)
;
pref
(
"
toolkit
.
datacollection
.
infoURL
"
"
https
:
/
/
www
.
mozilla
.
org
/
legal
/
privacy
/
firefox
.
html
"
)
;
pref
(
"
toolkit
.
crashreporter
.
infoURL
"
"
https
:
/
/
www
.
mozilla
.
org
/
legal
/
privacy
/
firefox
.
html
#
crash
-
reporter
"
)
;
pref
(
"
app
.
support
.
baseURL
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
"
)
;
pref
(
"
app
.
support
.
e10sAccessibilityUrl
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
accessibility
-
ppt
"
)
;
#
ifdef
MOZ_DEV_EDITION
pref
(
"
app
.
feedback
.
baseURL
"
"
https
:
/
/
input
.
mozilla
.
org
/
%
LOCALE
%
/
feedback
/
firefoxdev
/
%
VERSION
%
/
"
)
;
#
else
pref
(
"
app
.
feedback
.
baseURL
"
"
https
:
/
/
input
.
mozilla
.
org
/
%
LOCALE
%
/
feedback
/
%
APP
%
/
%
VERSION
%
/
"
)
;
#
endif
pref
(
"
app
.
productInfo
.
baseURL
"
"
https
:
/
/
www
.
mozilla
.
org
/
firefox
/
features
/
"
)
;
pref
(
"
security
.
alternate_certificate_error_page
"
"
certerror
"
)
;
pref
(
"
browser
.
privatebrowsing
.
autostart
"
false
)
;
pref
(
"
browser
.
bookmarks
.
editDialog
.
firstEditField
"
"
namePicker
"
)
;
pref
(
"
dom
.
ipc
.
plugins
.
flash
.
disable
-
protected
-
mode
"
false
)
;
pref
(
"
browser
.
flash
-
protected
-
mode
-
flip
.
enable
"
false
)
;
pref
(
"
browser
.
flash
-
protected
-
mode
-
flip
.
done
"
false
)
;
pref
(
"
dom
.
ipc
.
shims
.
enabledWarnings
"
false
)
;
#
if
defined
(
XP_WIN
)
&
&
defined
(
MOZ_SANDBOX
)
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
default
"
0
)
;
#
if
defined
(
_AMD64_
)
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
flash
"
2
)
;
#
else
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
flash
"
0
)
;
#
endif
#
if
defined
(
MOZ_CONTENT_SANDBOX
)
pref
(
"
security
.
sandbox
.
content
.
level
"
3
)
;
pref
(
"
security
.
sandbox
.
windows
.
log
.
stackTraceDepth
"
0
)
;
#
endif
pref
(
"
security
.
sandbox
.
gpu
.
level
"
0
)
;
#
endif
#
if
defined
(
XP_MACOSX
)
&
&
defined
(
MOZ_SANDBOX
)
&
&
defined
(
MOZ_CONTENT_SANDBOX
)
pref
(
"
security
.
sandbox
.
content
.
level
"
3
)
;
#
endif
#
if
defined
(
XP_LINUX
)
&
&
defined
(
MOZ_SANDBOX
)
&
&
defined
(
MOZ_CONTENT_SANDBOX
)
#
ifdef
NIGHTLY_BUILD
pref
(
"
security
.
sandbox
.
content
.
level
"
3
)
;
#
else
pref
(
"
security
.
sandbox
.
content
.
level
"
2
)
;
#
endif
pref
(
"
security
.
sandbox
.
content
.
write_path_whitelist
"
"
"
)
;
pref
(
"
security
.
sandbox
.
content
.
read_path_whitelist
"
"
"
)
;
pref
(
"
security
.
sandbox
.
content
.
syscall_whitelist
"
"
"
)
;
#
endif
#
if
defined
(
XP_MACOSX
)
|
|
defined
(
XP_WIN
)
#
if
defined
(
MOZ_SANDBOX
)
&
&
defined
(
MOZ_CONTENT_SANDBOX
)
pref
(
"
security
.
sandbox
.
content
.
tempDirSuffix
"
"
"
)
;
#
endif
#
endif
#
if
defined
(
MOZ_SANDBOX
)
#
if
defined
(
XP_WIN
)
|
|
defined
(
XP_MACOSX
)
pref
(
"
security
.
sandbox
.
logging
.
enabled
"
false
)
;
#
else
pref
(
"
security
.
sandbox
.
logging
.
enabled
"
true
)
;
#
endif
#
endif
#
ifdef
XP_MACOSX
pref
(
"
dom
.
ipc
.
plugins
.
nativeCursorSupport
"
true
)
;
#
endif
#
ifdef
XP_WIN
pref
(
"
browser
.
taskbar
.
previews
.
enable
"
false
)
;
pref
(
"
browser
.
taskbar
.
previews
.
max
"
20
)
;
pref
(
"
browser
.
taskbar
.
previews
.
cachetime
"
5
)
;
pref
(
"
browser
.
taskbar
.
lists
.
enabled
"
true
)
;
pref
(
"
browser
.
taskbar
.
lists
.
frequent
.
enabled
"
true
)
;
pref
(
"
browser
.
taskbar
.
lists
.
recent
.
enabled
"
false
)
;
pref
(
"
browser
.
taskbar
.
lists
.
maxListItemCount
"
7
)
;
pref
(
"
browser
.
taskbar
.
lists
.
tasks
.
enabled
"
true
)
;
pref
(
"
browser
.
taskbar
.
lists
.
refreshInSeconds
"
120
)
;
#
endif
pref
(
"
services
.
sync
.
prefs
.
sync
.
accessibility
.
blockautorefresh
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
accessibility
.
browsewithcaret
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
accessibility
.
typeaheadfind
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
accessibility
.
typeaheadfind
.
linksonly
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
addons
.
ignoreUserEnabledChanges
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
ctrlTab
.
previews
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
download
.
useDownloadDir
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
formfill
.
enable
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
link
.
open_newwindow
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
enhanced
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
pinned
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
offline
-
apps
.
notify
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
safebrowsing
.
phishing
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
safebrowsing
.
malware
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
search
.
update
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
sessionstore
.
restore_on_demand
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
startup
.
homepage
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
startup
.
page
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
tabs
.
loadInBackground
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
tabs
.
warnOnClose
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
tabs
.
warnOnOpen
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
autocomplete
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
maxRichResults
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
suggest
.
bookmark
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
suggest
.
history
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
suggest
.
history
.
onlyTyped
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
suggest
.
openpage
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
suggest
.
searches
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
dom
.
disable_open_during_load
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
dom
.
disable_window_flip
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
dom
.
disable_window_move_resize
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
dom
.
event
.
contextmenu
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
extensions
.
personas
.
current
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
extensions
.
update
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
intl
.
accept_languages
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
layout
.
spellcheckDefault
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
lightweightThemes
.
selectedThemeID
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
lightweightThemes
.
usedThemes
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
network
.
cookie
.
cookieBehavior
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
network
.
cookie
.
lifetimePolicy
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
network
.
cookie
.
lifetime
.
days
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
network
.
cookie
.
thirdparty
.
sessionOnly
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
permissions
.
default
.
image
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
pref
.
advanced
.
images
.
disable_button
.
view_image
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
pref
.
advanced
.
javascript
.
disable_button
.
advanced
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
pref
.
downloads
.
disable_button
.
edit_actions
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
pref
.
privacy
.
disable_button
.
cookie_exceptions
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
cache
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
cookies
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
downloads
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
formdata
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
history
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
offlineApps
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
sessions
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
siteSettings
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
donottrackheader
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
sanitize
.
sanitizeOnShutdown
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
trackingprotection
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
trackingprotection
.
pbmode
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
security
.
OCSP
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
security
.
OCSP
.
require
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
security
.
default_personal_cert
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
security
.
tls
.
version
.
min
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
security
.
tls
.
version
.
max
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
services
.
sync
.
syncedTabs
.
showRemoteIcons
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
signon
.
rememberSignons
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
spellchecker
.
dictionary
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
xpinstall
.
whitelist
.
required
"
true
)
;
pref
(
"
services
.
sync
.
syncedTabs
.
showRemoteIcons
"
true
)
;
#
ifdef
MOZ_DEV_EDITION
sticky_pref
(
"
lightweightThemes
.
selectedThemeID
"
"
firefox
-
compact
-
dark
mozilla
.
org
"
)
;
#
else
sticky_pref
(
"
lightweightThemes
.
selectedThemeID
"
"
"
)
;
#
endif
pref
(
"
browser
.
menu
.
showCharacterEncoding
"
"
chrome
:
/
/
browser
/
locale
/
browser
.
properties
"
)
;
pref
(
"
prompts
.
tab_modal
.
enabled
"
true
)
;
pref
(
"
browser
.
newtab
.
preload
"
true
)
;
pref
(
"
browser
.
newtabpage
.
introShown
"
false
)
;
pref
(
"
browser
.
newtabpage
.
enabled
"
true
)
;
sticky_pref
(
"
browser
.
newtabpage
.
enhanced
"
true
)
;
pref
(
"
browser
.
newtabpage
.
compact
"
false
)
;
pref
(
"
browser
.
newtabpage
.
thumbnailPlaceholder
"
false
)
;
pref
(
"
browser
.
newtabpage
.
rows
"
3
)
;
pref
(
"
browser
.
newtabpage
.
columns
"
5
)
;
pref
(
"
browser
.
newtabpage
.
directory
.
source
"
"
https
:
/
/
tiles
.
services
.
mozilla
.
com
/
v3
/
links
/
fetch
/
%
LOCALE
%
/
%
CHANNEL
%
"
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
enabled
"
true
)
;
#
else
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
enabled
"
false
)
;
#
endif
pref
(
"
full
-
screen
-
api
.
enabled
"
true
)
;
pref
(
"
toolkit
.
startup
.
max_resumed_crashes
"
3
)
;
pref
(
"
pdfium
.
enabled
"
false
)
;
pref
(
"
pdfjs
.
disabled
"
false
)
;
pref
(
"
pdfjs
.
firstRun
"
true
)
;
pref
(
"
pdfjs
.
previousHandler
.
preferredAction
"
0
)
;
pref
(
"
pdfjs
.
previousHandler
.
alwaysAskBeforeHandling
"
false
)
;
pref
(
"
image
.
mem
.
max_decoded_image_kb
"
256000
)
;
pref
(
"
sidebar
.
position_start
"
true
)
;
pref
(
"
social
.
share
.
activationPanelEnabled
"
true
)
;
pref
(
"
social
.
shareDirectory
"
"
https
:
/
/
activations
.
cdn
.
mozilla
.
net
/
sharePanel
.
html
"
)
;
pref
(
"
security
.
mixed_content
.
block_active_content
"
true
)
;
pref
(
"
security
.
insecure_password
.
ui
.
enabled
"
true
)
;
pref
(
"
security
.
insecure_field_warning
.
contextual
.
enabled
"
true
)
;
pref
(
"
security
.
cert_pinning
.
enforcement_level
"
1
)
;
pref
(
"
plain_text
.
wrap_long_lines
"
true
)
;
pref
(
"
dom
.
debug
.
propagate_gesture_events_through_content
"
false
)
;
#
ifndef
EARLY_BETA_OR_EARLIER
pref
(
"
geo
.
wifi
.
uri
"
"
https
:
/
/
www
.
googleapis
.
com
/
geolocation
/
v1
/
geolocate
?
key
=
%
GOOGLE_API_KEY
%
"
)
;
#
ifdef
XP_MACOSX
pref
(
"
geo
.
provider
.
use_corelocation
"
false
)
;
#
endif
#
ifdef
XP_WIN
pref
(
"
geo
.
provider
.
ms
-
windows
-
location
"
false
)
;
#
endif
#
ifdef
MOZ_WIDGET_GTK
pref
(
"
geo
.
provider
.
use_gpsd
"
false
)
;
#
endif
#
else
pref
(
"
geo
.
wifi
.
uri
"
"
https
:
/
/
location
.
services
.
mozilla
.
com
/
v1
/
geolocate
?
key
=
%
MOZILLA_API_KEY
%
"
)
;
#
ifdef
XP_MACOSX
pref
(
"
geo
.
provider
.
use_corelocation
"
true
)
;
#
endif
#
if
defined
(
XP_WIN
)
&
&
defined
(
NIGHTLY_BUILD
)
pref
(
"
geo
.
provider
.
ms
-
windows
-
location
"
true
)
;
#
endif
#
if
defined
(
MOZ_WIDGET_GTK
)
&
&
defined
(
MOZ_GPSD
)
pref
(
"
geo
.
provider
.
use_gpsd
"
true
)
;
#
endif
#
endif
pref
(
"
network
.
disable
.
ipc
.
security
"
true
)
;
pref
(
"
browser
.
uiCustomization
.
debug
"
false
)
;
pref
(
"
browser
.
uiCustomization
.
state
"
"
"
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
signup
.
uri
"
"
https
:
/
/
accounts
.
firefox
.
com
/
signup
?
service
=
sync
&
context
=
fx_desktop_v3
"
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
force_auth
.
uri
"
"
https
:
/
/
accounts
.
firefox
.
com
/
force_auth
?
service
=
sync
&
context
=
fx_desktop_v3
"
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
signin
.
uri
"
"
https
:
/
/
accounts
.
firefox
.
com
/
signin
?
service
=
sync
&
context
=
fx_desktop_v3
"
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
webchannel
.
uri
"
"
https
:
/
/
accounts
.
firefox
.
com
/
"
)
;
pref
(
"
identity
.
fxaccounts
.
contextParam
"
"
fx_desktop_v3
"
)
;
pref
(
"
identity
.
fxaccounts
.
settings
.
uri
"
"
https
:
/
/
accounts
.
firefox
.
com
/
settings
?
service
=
sync
&
context
=
fx_desktop_v3
"
)
;
pref
(
"
identity
.
fxaccounts
.
settings
.
devices
.
uri
"
"
https
:
/
/
accounts
.
firefox
.
com
/
settings
/
clients
?
service
=
sync
&
context
=
fx_desktop_v3
"
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
profile
.
uri
"
"
https
:
/
/
profile
.
accounts
.
firefox
.
com
/
v1
"
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
oauth
.
uri
"
"
https
:
/
/
oauth
.
accounts
.
firefox
.
com
/
v1
"
)
;
pref
(
"
identity
.
sync
.
tokenserver
.
uri
"
"
https
:
/
/
token
.
services
.
mozilla
.
com
/
1
.
0
/
sync
/
1
.
5
"
)
;
pref
(
"
identity
.
mobilepromo
.
android
"
"
https
:
/
/
www
.
mozilla
.
org
/
firefox
/
android
/
?
utm_source
=
firefox
-
browser
&
utm_medium
=
firefox
-
browser
&
utm_campaign
=
"
)
;
pref
(
"
identity
.
mobilepromo
.
ios
"
"
https
:
/
/
www
.
mozilla
.
org
/
firefox
/
ios
/
?
utm_source
=
firefox
-
browser
&
utm_medium
=
firefox
-
browser
&
utm_campaign
=
"
)
;
#
ifdef
MOZ_DEV_EDITION
pref
(
"
identity
.
fxaccounts
.
migrateToDevEdition
"
true
)
;
#
else
pref
(
"
identity
.
fxaccounts
.
migrateToDevEdition
"
false
)
;
#
endif
#
ifdef
MOZ_WIDGET_GTK
pref
(
"
ui
.
key
.
menuAccessKeyFocuses
"
true
)
;
#
endif
#
ifdef
XP_LINUX
pref
(
"
media
.
eme
.
enabled
"
false
)
;
#
else
pref
(
"
media
.
eme
.
enabled
"
true
)
;
#
endif
#
ifdef
NIGHTLY_BUILD
pref
(
"
media
.
eme
.
vp9
-
in
-
mp4
.
enabled
"
true
)
;
#
else
pref
(
"
media
.
eme
.
vp9
-
in
-
mp4
.
enabled
"
false
)
;
#
endif
pref
(
"
media
.
gmp
.
trial
-
create
.
enabled
"
true
)
;
#
ifdef
MOZ_WIDEVINE_EME
pref
(
"
media
.
gmp
-
widevinecdm
.
visible
"
true
)
;
pref
(
"
media
.
gmp
-
widevinecdm
.
enabled
"
true
)
;
#
endif
pref
(
"
browser
.
cache
.
frecency_experiment
"
0
)
;
pref
(
"
browser
.
translation
.
detectLanguage
"
false
)
;
pref
(
"
browser
.
translation
.
neverForLanguages
"
"
"
)
;
pref
(
"
browser
.
translation
.
ui
.
show
"
false
)
;
pref
(
"
browser
.
translation
.
engine
"
"
bing
"
)
;
pref
(
"
toolkit
.
telemetry
.
archive
.
enabled
"
true
)
;
pref
(
"
toolkit
.
telemetry
.
shutdownPingSender
.
enabled
"
true
)
;
pref
(
"
toolkit
.
telemetry
.
shutdownPingSender
.
enabledFirstSession
"
false
)
;
pref
(
"
toolkit
.
telemetry
.
newProfilePing
.
enabled
"
true
)
;
pref
(
"
toolkit
.
telemetry
.
updatePing
.
enabled
"
true
)
;
pref
(
"
experiments
.
enabled
"
true
)
;
pref
(
"
experiments
.
manifest
.
fetchIntervalSeconds
"
86400
)
;
pref
(
"
experiments
.
manifest
.
uri
"
"
https
:
/
/
telemetry
-
experiment
.
cdn
.
mozilla
.
net
/
manifest
/
v1
/
firefox
/
%
VERSION
%
/
%
CHANNEL
%
"
)
;
pref
(
"
experiments
.
supported
"
true
)
;
pref
(
"
media
.
gmp
-
provider
.
enabled
"
true
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
privacy
.
trackingprotection
.
ui
.
enabled
"
true
)
;
#
else
pref
(
"
privacy
.
trackingprotection
.
ui
.
enabled
"
false
)
;
#
endif
pref
(
"
privacy
.
trackingprotection
.
introCount
"
0
)
;
pref
(
"
privacy
.
trackingprotection
.
introURL
"
"
https
:
/
/
www
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
%
VERSION
%
/
tracking
-
protection
/
start
/
"
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
privacy
.
userContext
.
enabled
"
true
)
;
pref
(
"
privacy
.
userContext
.
ui
.
enabled
"
true
)
;
pref
(
"
privacy
.
usercontext
.
about_newtab_segregation
.
enabled
"
true
)
;
pref
(
"
privacy
.
userContext
.
longPressBehavior
"
2
)
;
#
else
pref
(
"
privacy
.
userContext
.
enabled
"
false
)
;
pref
(
"
privacy
.
userContext
.
ui
.
enabled
"
false
)
;
pref
(
"
privacy
.
usercontext
.
about_newtab_segregation
.
enabled
"
false
)
;
pref
(
"
privacy
.
userContext
.
longPressBehavior
"
0
)
;
#
endif
pref
(
"
browser
.
tabs
.
remote
.
autostart
"
false
)
;
pref
(
"
browser
.
tabs
.
remote
.
desktopbehavior
"
true
)
;
#
if
!
defined
(
RELEASE_OR_BETA
)
|
|
defined
(
MOZ_DEV_EDITION
)
pref
(
"
browser
.
tabs
.
remote
.
autostart
.
1
"
false
)
;
pref
(
"
browser
.
tabs
.
remote
.
autostart
.
2
"
true
)
;
#
endif
pref
(
"
browser
.
tabs
.
crashReporting
.
sendReport
"
true
)
;
pref
(
"
browser
.
tabs
.
crashReporting
.
includeURL
"
false
)
;
pref
(
"
browser
.
tabs
.
crashReporting
.
requestEmail
"
false
)
;
pref
(
"
browser
.
tabs
.
crashReporting
.
emailMe
"
false
)
;
pref
(
"
browser
.
tabs
.
crashReporting
.
email
"
"
"
)
;
pref
(
"
extensions
.
interposition
.
enabled
"
true
)
;
pref
(
"
extensions
.
interposition
.
prefetching
"
true
)
;
#
if
defined
(
NIGHTLY_BUILD
)
pref
(
"
extensions
.
allow
-
non
-
mpc
-
extensions
"
false
)
;
#
endif
pref
(
"
extensions
.
legacy
.
enabled
"
false
)
;
#
if
defined
(
RELEASE_OR_BETA
)
&
&
!
defined
(
MOZ_DEV_EDITION
)
pref
(
"
extensions
.
e10sBlocksEnabling
"
true
)
;
pref
(
"
extensions
.
e10sMultiBlocksEnabling
"
true
)
;
#
endif
pref
(
"
dom
.
ipc
.
cpow
.
timeout
"
500
)
;
pref
(
"
dom
.
ipc
.
cpows
.
forbid
-
unsafe
-
from
-
browser
"
true
)
;
pref
(
"
dom
.
ipc
.
cpows
.
forbid
-
cpows
-
in
-
compat
-
addons
"
true
)
;
pref
(
"
dom
.
ipc
.
cpows
.
allow
-
cpows
-
in
-
compat
-
addons
"
"
{
b9db16a4
-
6edc
-
47ec
-
a1f4
-
b86292ed211d
}
firegestures
xuldev
.
org
{
DDC359D1
-
844A
-
42a7
-
9AA1
-
88A850A938A8
}
privateTab
infocatcher
mousegesturessuite
lemon_juice
.
addons
.
mozilla
.
org
treestyletab
piro
.
sakura
.
ne
.
jp
cliqz
cliqz
.
com
{
AE93811A
-
5C9A
-
4d34
-
8462
-
F7B864FC4696
}
contextsearch2
lwz
.
addons
.
mozilla
.
org
{
EF522540
-
89F5
-
46b9
-
B6FE
-
1829E2B572C6
}
{
677a8f98
-
fd64
-
40b0
-
a883
-
b8c95d0cbf17
}
images
wink
.
su
fx
-
devtools
url_advisor
kaspersky
.
com
{
d10d0bf8
-
f5b5
-
c8b4
-
a8b2
-
2b9879e08c5d
}
{
dc572301
-
7619
-
498c
-
a57d
-
39143191b318
}
dta
downthemall
.
net
{
86095750
-
AD15
-
46d8
-
BF32
-
C0789F7E6A32
}
screenwise
-
prod
google
.
com
{
91aa5abe
-
9de4
-
4347
-
b7b5
-
322c38dd9271
}
secureLogin
blueimp
.
net
ich
maltegoetz
.
de
come
.
back
.
block
.
image
.
from
cat
-
in
-
136
.
blogspot
.
com
{
7b1bf0b6
-
a1b9
-
42b0
-
b75d
-
252036438bdc
}
s3crypto
data
{
1e0fd655
-
5aea
-
4b4c
-
a583
-
f76ef1e3af9c
}
akahuku
.
fx
.
sp
toshiakisp
.
github
.
io
{
aff87fa2
-
a58e
-
4edd
-
b852
-
0a20203c1e17
}
{
1018e4d6
-
728f
-
4b20
-
ad56
-
37578a4de76b
}
rehostimage
engy
.
us
lazarus
interclue
.
com
{
b2e69492
-
2358
-
071a
-
7056
-
24ad0c3defb1
}
flashstopper
byo
.
co
.
il
{
e4a8a97b
-
f2ed
-
450b
-
b12d
-
ee082ba24781
}
jid1
-
f3mYMbCpz2AZYl
jetpack
{
8c550e28
-
88c9
-
4764
-
bb52
-
aa489cf2efcd
}
{
37fa1426
-
b82d
-
11db
-
8314
-
0800200c9a66
}
{
ac2cfa60
-
bc96
-
11e0
-
962b
-
0800200c9a66
}
igetter
presenta
.
net
killspinners
byo
.
co
.
il
abhere2
moztw
.
org
{
fc6339b8
-
9581
-
4fc7
-
b824
-
dffcb091fcb7
}
wampi
wink
.
su
backtrack
byalexv
.
co
.
uk
Gladiator_X
mail
.
ru
{
73a6fe31
-
595d
-
460b
-
a920
-
fcc0f8843232
}
{
46551EC9
-
40F0
-
4e47
-
8E18
-
8E5CF550CFB8
}
acewebextension_unlisted
acestream
.
org
screen_maker
yasearch
yandex
.
ru
sp
avast
.
com
s3google
translator
igetterextension
presenta
.
net
{
C1A2A613
-
35F1
-
4FCF
-
B27F
-
2840527B6556
}
screenwise
-
testing
google
.
com
helper
-
sig
savefrom
.
net
ImageSaver
Merci
.
chao
proxtube
abz
.
agency
wrc
avast
.
com
{
9AA46F4F
-
4DC7
-
4c06
-
97AF
-
5035170634FE
}
jid1
-
CikLKKPVkw6ipw
jetpack
artur
.
dubovoy
gmail
.
com
nlgfeb
nlgfeb
.
ext
{
A065A84F
-
95B6
-
433A
-
A0C8
-
4C040B77CE8A
}
fdm_ffext
freedownloadmanager
.
org
"
)
;
pref
(
"
dom
.
ipc
.
processHangMonitor
"
true
)
;
#
ifdef
DEBUG
pref
(
"
dom
.
ipc
.
reportProcessHangs
"
false
)
;
#
else
pref
(
"
dom
.
ipc
.
reportProcessHangs
"
true
)
;
#
endif
pref
(
"
reader
.
parse
-
node
-
limit
"
0
)
;
pref
(
"
reader
.
errors
.
includeURLs
"
true
)
;
pref
(
"
view_source
.
tab
"
true
)
;
pref
(
"
dom
.
serviceWorkers
.
enabled
"
true
)
;
pref
(
"
dom
.
serviceWorkers
.
openWindow
.
enabled
"
true
)
;
pref
(
"
dom
.
push
.
enabled
"
true
)
;
pref
(
"
toolkit
.
pageThumbs
.
minWidth
"
280
)
;
pref
(
"
toolkit
.
pageThumbs
.
minHeight
"
190
)
;
pref
(
"
media
.
webspeech
.
synth
.
enabled
"
true
)
;
pref
(
"
browser
.
esedbreader
.
loglevel
"
"
Error
"
)
;
pref
(
"
browser
.
laterrun
.
enabled
"
false
)
;
pref
(
"
dom
.
ipc
.
processPrelaunch
.
enabled
"
false
)
;
pref
(
"
browser
.
migrate
.
automigrate
.
enabled
"
false
)
;
pref
(
"
browser
.
migrate
.
automigrate
.
daysToOfferUndo
"
4
)
;
pref
(
"
browser
.
migrate
.
automigrate
.
ui
.
enabled
"
true
)
;
pref
(
"
browser
.
migrate
.
automigrate
.
inpage
.
ui
.
enabled
"
false
)
;
pref
(
"
browser
.
migrate
.
chrome
.
history
.
limit
"
2000
)
;
pref
(
"
browser
.
migrate
.
chrome
.
history
.
maxAgeInDays
"
180
)
;
pref
(
"
dom
.
mozBrowserFramesEnabled
"
true
)
;
pref
(
"
extensions
.
pocket
.
enabled
"
true
)
;
pref
(
"
signon
.
schemeUpgrades
"
true
)
;
#
ifdef
UNIX_BUT_NOT_MAC
#
if
defined
(
NIGHTLY_BUILD
)
pref
(
"
print
.
use_simplify_page
"
true
)
;
#
endif
#
else
pref
(
"
print
.
use_simplify_page
"
true
)
;
#
endif
pref
(
"
webchannel
.
allowObject
.
urlWhitelist
"
"
https
:
/
/
accounts
.
firefox
.
com
https
:
/
/
content
.
cdn
.
mozilla
.
net
https
:
/
/
input
.
mozilla
.
org
https
:
/
/
support
.
mozilla
.
org
https
:
/
/
install
.
mozilla
.
org
"
)
;
#
ifdef
EARLY_BETA_OR_EARLIER
pref
(
"
browser
.
crashReports
.
unsubmittedCheck
.
enabled
"
true
)
;
#
else
pref
(
"
browser
.
crashReports
.
unsubmittedCheck
.
enabled
"
false
)
;
#
endif
pref
(
"
browser
.
crashReports
.
unsubmittedCheck
.
chancesUntilSuppress
"
4
)
;
pref
(
"
browser
.
crashReports
.
unsubmittedCheck
.
autoSubmit
"
false
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
extensions
.
formautofill
.
available
"
"
on
"
)
;
#
else
pref
(
"
extensions
.
formautofill
.
available
"
"
detect
"
)
;
#
endif
pref
(
"
extensions
.
formautofill
.
addresses
.
enabled
"
true
)
;
pref
(
"
extensions
.
formautofill
.
creditCards
.
enabled
"
true
)
;
pref
(
"
extensions
.
formautofill
.
firstTimeUse
"
true
)
;
pref
(
"
extensions
.
formautofill
.
heuristics
.
enabled
"
true
)
;
pref
(
"
extensions
.
formautofill
.
loglevel
"
"
Warn
"
)
;
pref
(
"
browser
.
sessionstore
.
restore_tabs_lazily
"
true
)
;
pref
(
"
urlclassifier
.
malwareTable
"
"
goog
-
malware
-
proto
goog
-
unwanted
-
proto
test
-
malware
-
simple
test
-
unwanted
-
simple
test
-
harmful
-
simple
"
)
;
pref
(
"
urlclassifier
.
phishTable
"
"
goog
-
phish
-
proto
test
-
phish
-
simple
"
)
;
pref
(
"
browser
.
suppress_first_window_animation
"
true
)
;
pref
(
"
browser
.
onboarding
.
enabled
"
true
)
;
pref
(
"
browser
.
onboarding
.
tourset
-
version
"
1
)
;
pref
(
"
browser
.
onboarding
.
hidden
"
false
)
;
pref
(
"
browser
.
onboarding
.
notification
.
finished
"
false
)
;
pref
(
"
browser
.
onboarding
.
notification
.
mute
-
duration
-
on
-
first
-
session
-
ms
"
300000
)
;
pref
(
"
browser
.
onboarding
.
notification
.
max
-
life
-
time
-
per
-
tour
-
ms
"
432000000
)
;
pref
(
"
browser
.
onboarding
.
notification
.
max
-
prompt
-
count
-
per
-
tour
"
8
)
;
pref
(
"
browser
.
onboarding
.
newtour
"
"
private
addons
customize
search
default
sync
"
)
;
pref
(
"
browser
.
onboarding
.
updatetour
"
"
"
)
;
pref
(
"
extensions
.
screenshots
.
disabled
"
false
)
;
