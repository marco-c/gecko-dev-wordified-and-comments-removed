#
filter
substitution
#
ifdef
XP_UNIX
#
ifndef
XP_MACOSX
#
define
UNIX_BUT_NOT_MAC
#
endif
#
endif
pref
(
"
browser
.
hiddenWindowChromeURL
"
"
chrome
:
/
/
browser
/
content
/
hiddenWindowMac
.
xhtml
"
)
;
pref
(
"
extensions
.
logging
.
enabled
"
false
)
;
pref
(
"
extensions
.
strictCompatibility
"
false
)
;
pref
(
"
extensions
.
checkCompatibility
.
temporaryThemeOverride_minAppVersion
"
"
29
.
0a1
"
)
;
pref
(
"
extensions
.
webextPermissionPrompts
"
true
)
;
pref
(
"
extensions
.
webextOptionalPermissionPrompts
"
true
)
;
pref
(
"
extensions
.
getAddons
.
cache
.
enabled
"
true
)
;
pref
(
"
extensions
.
getAddons
.
get
.
url
"
"
https
:
/
/
services
.
addons
.
mozilla
.
org
/
api
/
v3
/
addons
/
search
/
?
guid
=
%
IDS
%
&
lang
=
%
LOCALE
%
"
)
;
pref
(
"
extensions
.
getAddons
.
search
.
browseURL
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
search
?
q
=
%
TERMS
%
&
platform
=
%
OS
%
&
appver
=
%
VERSION
%
"
)
;
pref
(
"
extensions
.
webservice
.
discoverURL
"
"
https
:
/
/
discovery
.
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
discovery
/
pane
/
%
VERSION
%
/
%
OS
%
/
%
COMPATIBILITY_MODE
%
"
)
;
pref
(
"
extensions
.
getAddons
.
link
.
url
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
"
)
;
pref
(
"
extensions
.
getAddons
.
langpacks
.
url
"
"
https
:
/
/
services
.
addons
.
mozilla
.
org
/
api
/
v3
/
addons
/
language
-
tools
/
?
app
=
firefox
&
type
=
language
&
appversion
=
%
VERSION
%
"
)
;
pref
(
"
extensions
.
getAddons
.
discovery
.
api_url
"
"
https
:
/
/
services
.
addons
.
mozilla
.
org
/
api
/
v4
/
discovery
/
?
lang
=
%
LOCALE
%
&
edition
=
%
DISTRIBUTION
%
"
)
;
pref
(
"
extensions
.
recommendations
.
privacyPolicyUrl
"
"
https
:
/
/
www
.
mozilla
.
org
/
privacy
/
firefox
/
?
utm_source
=
firefox
-
browser
&
utm_medium
=
firefox
-
browser
&
utm_content
=
privacy
-
policy
-
link
#
addons
"
)
;
pref
(
"
extensions
.
recommendations
.
themeRecommendationUrl
"
"
https
:
/
/
color
.
firefox
.
com
/
?
utm_source
=
firefox
-
browser
&
utm_medium
=
firefox
-
browser
&
utm_content
=
theme
-
footer
-
link
"
)
;
pref
(
"
extensions
.
update
.
autoUpdateDefault
"
true
)
;
pref
(
"
extensions
.
systemAddon
.
update
.
url
"
"
https
:
/
/
aus5
.
mozilla
.
org
/
update
/
3
/
SystemAddons
/
%
VERSION
%
/
%
BUILD_ID
%
/
%
BUILD_TARGET
%
/
%
LOCALE
%
/
%
CHANNEL
%
/
%
OS_VERSION
%
/
%
DISTRIBUTION
%
/
%
DISTRIBUTION_VERSION
%
/
update
.
xml
"
)
;
pref
(
"
extensions
.
systemAddon
.
update
.
enabled
"
true
)
;
pref
(
"
extensions
.
autoDisableScopes
"
15
)
;
pref
(
"
extensions
.
startupScanScopes
"
0
)
;
pref
(
"
extensions
.
geckoProfiler
.
acceptedExtensionIds
"
"
geckoprofiler
mozilla
.
com
quantum
-
foxfooding
mozilla
.
com
raptor
mozilla
.
org
"
)
;
pref
(
"
extensions
.
webextensions
.
base
-
content
-
security
-
policy
"
"
script
-
src
'
self
'
https
:
/
/
*
moz
-
extension
:
blob
:
filesystem
:
'
unsafe
-
eval
'
'
unsafe
-
inline
'
;
object
-
src
'
self
'
https
:
/
/
*
moz
-
extension
:
blob
:
filesystem
:
;
"
)
;
pref
(
"
extensions
.
webextensions
.
default
-
content
-
security
-
policy
"
"
script
-
src
'
self
'
;
object
-
src
'
self
'
;
"
)
;
pref
(
"
extensions
.
webextensions
.
remote
"
true
)
;
pref
(
"
extensions
.
webextensions
.
background
-
delayed
-
startup
"
true
)
;
pref
(
"
extensions
.
langpacks
.
signatures
.
required
"
true
)
;
pref
(
"
xpinstall
.
signatures
.
required
"
true
)
;
pref
(
"
xpinstall
.
signatures
.
devInfoURL
"
"
https
:
/
/
wiki
.
mozilla
.
org
/
Addons
/
Extension_Signing
"
)
;
pref
(
"
devtools
.
storage
.
extensionStorage
.
enabled
"
true
)
;
pref
(
"
browser
.
dictionaries
.
download
.
url
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
language
-
tools
/
"
)
;
pref
(
"
app
.
update
.
checkInstallTime
"
true
)
;
pref
(
"
app
.
update
.
timerMinimumDelay
"
120
)
;
pref
(
"
app
.
update
.
timerFirstInterval
"
30000
)
;
pref
(
"
app
.
update
.
log
"
false
)
;
pref
(
"
app
.
update
.
log
.
file
"
false
)
;
pref
(
"
app
.
update
.
backgroundMaxErrors
"
10
)
;
pref
(
"
app
.
update
.
link
.
updateAvailableWhatsNew
"
"
update
-
available
-
whats
-
new
"
)
;
pref
(
"
app
.
update
.
link
.
updateManualWhatsNew
"
"
update
-
manual
-
whats
-
new
"
)
;
pref
(
"
app
.
update
.
download
.
promptMaxAttempts
"
2
)
;
pref
(
"
app
.
update
.
elevation
.
promptMaxAttempts
"
2
)
;
#
ifndef
XP_WIN
pref
(
"
app
.
update
.
auto
"
true
)
;
#
endif
pref
(
"
app
.
update
.
staging
.
enabled
"
true
)
;
pref
(
"
app
.
update
.
url
"
"
https
:
/
/
aus5
.
mozilla
.
org
/
update
/
6
/
%
PRODUCT
%
/
%
VERSION
%
/
%
BUILD_ID
%
/
%
BUILD_TARGET
%
/
%
LOCALE
%
/
%
CHANNEL
%
/
%
OS_VERSION
%
/
%
SYSTEM_CAPABILITIES
%
/
%
DISTRIBUTION
%
/
%
DISTRIBUTION_VERSION
%
/
update
.
xml
"
)
;
#
ifdef
MOZ_MAINTENANCE_SERVICE
pref
(
"
app
.
update
.
service
.
enabled
"
true
)
;
#
endif
#
ifdef
MOZ_BITS_DOWNLOAD
pref
(
"
app
.
update
.
BITS
.
enabled
"
true
)
;
#
endif
pref
(
"
extensions
.
update
.
enabled
"
true
)
;
pref
(
"
extensions
.
update
.
url
"
"
https
:
/
/
versioncheck
.
addons
.
mozilla
.
org
/
update
/
VersionCheck
.
php
?
reqVersion
=
%
REQ_VERSION
%
&
id
=
%
ITEM_ID
%
&
version
=
%
ITEM_VERSION
%
&
maxAppVersion
=
%
ITEM_MAXAPPVERSION
%
&
status
=
%
ITEM_STATUS
%
&
appID
=
%
APP_ID
%
&
appVersion
=
%
APP_VERSION
%
&
appOS
=
%
APP_OS
%
&
appABI
=
%
APP_ABI
%
&
locale
=
%
APP_LOCALE
%
&
currentAppVersion
=
%
CURRENT_APP_VERSION
%
&
updateType
=
%
UPDATE_TYPE
%
&
compatMode
=
%
COMPATIBILITY_MODE
%
"
)
;
pref
(
"
extensions
.
update
.
background
.
url
"
"
https
:
/
/
versioncheck
-
bg
.
addons
.
mozilla
.
org
/
update
/
VersionCheck
.
php
?
reqVersion
=
%
REQ_VERSION
%
&
id
=
%
ITEM_ID
%
&
version
=
%
ITEM_VERSION
%
&
maxAppVersion
=
%
ITEM_MAXAPPVERSION
%
&
status
=
%
ITEM_STATUS
%
&
appID
=
%
APP_ID
%
&
appVersion
=
%
APP_VERSION
%
&
appOS
=
%
APP_OS
%
&
appABI
=
%
APP_ABI
%
&
locale
=
%
APP_LOCALE
%
&
currentAppVersion
=
%
CURRENT_APP_VERSION
%
&
updateType
=
%
UPDATE_TYPE
%
&
compatMode
=
%
COMPATIBILITY_MODE
%
"
)
;
pref
(
"
extensions
.
update
.
interval
"
86400
)
;
pref
(
"
lightweightThemes
.
getMoreURL
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
themes
"
)
;
#
if
defined
(
MOZ_WIDEVINE_EME
)
pref
(
"
browser
.
eme
.
ui
.
enabled
"
true
)
;
#
else
pref
(
"
browser
.
eme
.
ui
.
enabled
"
false
)
;
#
endif
pref
(
"
browser
.
uitour
.
enabled
"
true
)
;
pref
(
"
browser
.
uitour
.
loglevel
"
"
Error
"
)
;
pref
(
"
browser
.
uitour
.
requireSecure
"
true
)
;
pref
(
"
browser
.
uitour
.
themeOrigin
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
themes
/
"
)
;
pref
(
"
browser
.
uitour
.
url
"
"
https
:
/
/
www
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
%
VERSION
%
/
tour
/
"
)
;
pref
(
"
browser
.
uitour
.
surveyDuration
"
7200
)
;
pref
(
"
keyword
.
enabled
"
true
)
;
pref
(
"
browser
.
fixup
.
domainwhitelist
.
localhost
"
true
)
;
#
ifdef
UNIX_BUT_NOT_MAC
pref
(
"
general
.
autoScroll
"
false
)
;
#
else
pref
(
"
general
.
autoScroll
"
true
)
;
#
endif
pref
(
"
browser
.
stopReloadAnimation
.
enabled
"
true
)
;
pref
(
"
browser
.
uidensity
"
0
)
;
pref
(
"
browser
.
touchmode
.
auto
"
true
)
;
pref
(
"
browser
.
shell
.
checkDefaultBrowser
"
true
)
;
pref
(
"
browser
.
shell
.
shortcutFavicons
"
true
)
;
pref
(
"
browser
.
shell
.
mostRecentDateSetAsDefault
"
"
"
)
;
pref
(
"
browser
.
shell
.
skipDefaultBrowserCheckOnFirstRun
"
true
)
;
pref
(
"
browser
.
shell
.
didSkipDefaultBrowserCheckOnFirstRun
"
false
)
;
pref
(
"
browser
.
shell
.
defaultBrowserCheckCount
"
0
)
;
pref
(
"
browser
.
defaultbrowser
.
notificationbar
"
false
)
;
pref
(
"
browser
.
startup
.
page
"
1
)
;
pref
(
"
browser
.
startup
.
homepage
"
"
about
:
home
"
)
;
pref
(
"
browser
.
startup
.
firstrunSkipsHomepage
"
true
)
;
#
if
defined
(
XP_WIN
)
|
|
defined
(
MOZ_WIDGET_GTK
)
&
&
defined
(
NIGHTLY_BUILD
)
pref
(
"
browser
.
startup
.
blankWindow
"
true
)
;
#
else
pref
(
"
browser
.
startup
.
blankWindow
"
false
)
;
#
endif
pref
(
"
toolkit
.
lazyHiddenWindow
"
true
)
;
pref
(
"
browser
.
slowStartup
.
notificationDisabled
"
false
)
;
pref
(
"
browser
.
slowStartup
.
timeThreshold
"
20000
)
;
pref
(
"
browser
.
slowStartup
.
maxSamples
"
5
)
;
pref
(
"
browser
.
enable_automatic_image_resizing
"
true
)
;
pref
(
"
browser
.
chrome
.
site_icons
"
true
)
;
pref
(
"
browser
.
warnOnQuit
"
true
)
;
pref
(
"
browser
.
fullscreen
.
autohide
"
true
)
;
pref
(
"
browser
.
overlink
-
delay
"
80
)
;
#
ifdef
UNIX_BUT_NOT_MAC
pref
(
"
browser
.
urlbar
.
clickSelectsAll
"
false
)
;
#
else
pref
(
"
browser
.
urlbar
.
clickSelectsAll
"
true
)
;
#
endif
#
ifdef
UNIX_BUT_NOT_MAC
pref
(
"
browser
.
urlbar
.
doubleClickSelectsAll
"
true
)
;
#
else
pref
(
"
browser
.
urlbar
.
doubleClickSelectsAll
"
false
)
;
#
endif
pref
(
"
browser
.
urlbar
.
ctrlCanonizesURLs
"
true
)
;
pref
(
"
browser
.
urlbar
.
autoFill
"
true
)
;
pref
(
"
browser
.
urlbar
.
speculativeConnect
.
enabled
"
true
)
;
pref
(
"
browser
.
urlbar
.
filter
.
javascript
"
true
)
;
pref
(
"
browser
.
urlbar
.
maxRichResults
"
10
)
;
pref
(
"
browser
.
urlbar
.
delay
"
50
)
;
pref
(
"
browser
.
urlbar
.
maxHistoricalSearchSuggestions
"
0
)
;
pref
(
"
browser
.
urlbar
.
suggest
.
history
"
true
)
;
pref
(
"
browser
.
urlbar
.
suggest
.
bookmark
"
true
)
;
pref
(
"
browser
.
urlbar
.
suggest
.
openpage
"
true
)
;
pref
(
"
browser
.
urlbar
.
suggest
.
searches
"
true
)
;
pref
(
"
browser
.
urlbar
.
maxCharsForSearchSuggestions
"
20
)
;
pref
(
"
browser
.
urlbar
.
formatting
.
enabled
"
true
)
;
pref
(
"
browser
.
urlbar
.
trimURLs
"
true
)
;
pref
(
"
browser
.
urlbar
.
oneOffSearches
"
true
)
;
pref
(
"
browser
.
urlbar
.
decodeURLsOnCopy
"
false
)
;
pref
(
"
browser
.
urlbar
.
switchTabs
.
adoptIntoActiveWindow
"
false
)
;
pref
(
"
browser
.
urlbar
.
openintab
"
false
)
;
pref
(
"
browser
.
urlbar
.
usepreloadedtopurls
.
enabled
"
false
)
;
pref
(
"
browser
.
urlbar
.
usepreloadedtopurls
.
expire_days
"
14
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
browser
.
urlbar
.
update1
"
true
)
;
pref
(
"
browser
.
urlbar
.
update1
.
view
.
stripHttps
"
true
)
;
pref
(
"
browser
.
urlbar
.
openViewOnFocus
"
true
)
;
#
else
pref
(
"
browser
.
urlbar
.
update1
"
false
)
;
pref
(
"
browser
.
urlbar
.
update1
.
view
.
stripHttps
"
false
)
;
pref
(
"
browser
.
urlbar
.
openViewOnFocus
"
false
)
;
#
endif
pref
(
"
browser
.
urlbar
.
update1
.
expandTextOnFocus
"
false
)
;
pref
(
"
browser
.
urlbar
.
eventTelemetry
.
enabled
"
false
)
;
pref
(
"
browser
.
altClickSave
"
false
)
;
pref
(
"
browser
.
download
.
loglevel
"
"
Error
"
)
;
pref
(
"
browser
.
download
.
saveLinkAsFilenameTimeout
"
4000
)
;
pref
(
"
browser
.
download
.
useDownloadDir
"
true
)
;
pref
(
"
browser
.
download
.
folderList
"
1
)
;
pref
(
"
browser
.
download
.
manager
.
addToRecentDocs
"
true
)
;
pref
(
"
browser
.
download
.
manager
.
resumeOnWakeDelay
"
10000
)
;
pref
(
"
browser
.
download
.
animateNotifications
"
true
)
;
pref
(
"
browser
.
download
.
panel
.
shown
"
false
)
;
pref
(
"
browser
.
download
.
autohideButton
"
true
)
;
#
ifndef
XP_MACOSX
pref
(
"
browser
.
helperApps
.
deleteTempFileOnExit
"
true
)
;
#
endif
pref
(
"
browser
.
search
.
searchEnginesURL
"
"
https
:
/
/
addons
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
search
-
engines
/
"
)
;
pref
(
"
browser
.
search
.
geoSpecificDefaults
"
true
)
;
pref
(
"
browser
.
search
.
geoSpecificDefaults
.
url
"
"
https
:
/
/
search
.
services
.
mozilla
.
com
/
1
/
%
APP
%
/
%
VERSION
%
/
%
CHANNEL
%
/
%
LOCALE
%
/
%
REGION
%
/
%
DISTRIBUTION
%
/
%
DISTRIBUTION_VERSION
%
"
)
;
pref
(
"
browser
.
search
.
openintab
"
false
)
;
pref
(
"
browser
.
search
.
context
.
loadInBackground
"
false
)
;
pref
(
"
browser
.
search
.
hiddenOneOffs
"
"
"
)
;
pref
(
"
browser
.
search
.
widget
.
inNavBar
"
false
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
browser
.
search
.
separatePrivateDefault
.
ui
.
enabled
"
true
)
;
#
endif
pref
(
"
browser
.
search
.
separatePrivateDefault
.
ui
.
banner
.
max
"
0
)
;
pref
(
"
browser
.
sessionhistory
.
max_entries
"
50
)
;
pref
(
"
permissions
.
manager
.
defaultsUrl
"
"
resource
:
/
/
app
/
defaults
/
permissions
"
)
;
pref
(
"
permissions
.
default
.
camera
"
0
)
;
pref
(
"
permissions
.
default
.
microphone
"
0
)
;
pref
(
"
permissions
.
default
.
geo
"
0
)
;
pref
(
"
permissions
.
default
.
xr
"
0
)
;
pref
(
"
permissions
.
default
.
desktop
-
notification
"
0
)
;
pref
(
"
permissions
.
default
.
shortcuts
"
0
)
;
pref
(
"
permissions
.
desktop
-
notification
.
postPrompt
.
enabled
"
true
)
;
pref
(
"
permissions
.
desktop
-
notification
.
notNow
.
enabled
"
false
)
;
pref
(
"
permissions
.
fullscreen
.
allowed
"
false
)
;
pref
(
"
permissions
.
postPrompt
.
animate
"
true
)
;
pref
(
"
browser
.
link
.
open_newwindow
"
3
)
;
pref
(
"
browser
.
link
.
open_newwindow
.
override
.
external
"
-
1
)
;
pref
(
"
browser
.
link
.
open_newwindow
.
restriction
"
2
)
;
#
ifdef
XP_MACOSX
pref
(
"
browser
.
link
.
open_newwindow
.
disabled_in_fullscreen
"
true
)
;
#
else
pref
(
"
browser
.
link
.
open_newwindow
.
disabled_in_fullscreen
"
false
)
;
#
endif
pref
(
"
browser
.
tabs
.
multiselect
"
true
)
;
pref
(
"
browser
.
tabs
.
closeTabByDblclick
"
false
)
;
pref
(
"
browser
.
tabs
.
closeWindowWithLastTab
"
true
)
;
pref
(
"
browser
.
tabs
.
insertRelatedAfterCurrent
"
true
)
;
pref
(
"
browser
.
tabs
.
insertAfterCurrent
"
false
)
;
pref
(
"
browser
.
tabs
.
warnOnClose
"
true
)
;
pref
(
"
browser
.
tabs
.
warnOnCloseOtherTabs
"
true
)
;
pref
(
"
browser
.
tabs
.
warnOnOpen
"
true
)
;
pref
(
"
browser
.
tabs
.
maxOpenBeforeWarn
"
15
)
;
pref
(
"
browser
.
tabs
.
loadInBackground
"
true
)
;
pref
(
"
browser
.
tabs
.
opentabfor
.
middleclick
"
true
)
;
pref
(
"
browser
.
tabs
.
loadDivertedInBackground
"
false
)
;
pref
(
"
browser
.
tabs
.
loadBookmarksInBackground
"
false
)
;
pref
(
"
browser
.
tabs
.
loadBookmarksInTabs
"
false
)
;
pref
(
"
browser
.
tabs
.
tabClipWidth
"
140
)
;
pref
(
"
browser
.
tabs
.
tabMinWidth
"
76
)
;
#
ifndef
UNIX_BUT_NOT_MAC
pref
(
"
browser
.
tabs
.
drawInTitlebar
"
true
)
;
#
endif
pref
(
"
browser
.
tabs
.
tabmanager
.
enabled
"
false
)
;
pref
(
"
browser
.
tabs
.
extraDragSpace
"
false
)
;
pref
(
"
browser
.
tabs
.
selectOwnerOnClose
"
true
)
;
pref
(
"
browser
.
tabs
.
showAudioPlayingIcon
"
true
)
;
pref
(
"
browser
.
tabs
.
delayHidingAudioPlayingIconMS
"
3000
)
;
#
if
defined
(
NIGHTLY_BUILD
)
&
&
!
defined
(
MOZ_ASAN
)
pref
(
"
browser
.
tabs
.
remote
.
separatePrivilegedContentProcess
"
false
)
;
pref
(
"
browser
.
tabs
.
remote
.
separatePrivilegedMozillaWebContentProcess
"
true
)
;
pref
(
"
browser
.
tabs
.
remote
.
enforceRemoteTypeRestrictions
"
true
)
;
#
endif
pref
(
"
security
.
allow_eval_with_system_principal
"
false
)
;
pref
(
"
security
.
allow_eval_in_parent_process
"
false
)
;
pref
(
"
security
.
allow_parent_unrestricted_js_loads
"
false
)
;
pref
(
"
browser
.
tabs
.
unloadOnLowMemory
"
false
)
;
pref
(
"
browser
.
ctrlTab
.
recentlyUsedOrder
"
true
)
;
pref
(
"
browser
.
bookmarks
.
autoExportHTML
"
false
)
;
pref
(
"
browser
.
bookmarks
.
max_backups
"
15
)
;
pref
(
"
browser
.
bookmarks
.
openInTabClosesMenu
"
true
)
;
pref
(
"
dom
.
disable_open_during_load
"
true
)
;
pref
(
"
javascript
.
options
.
showInConsole
"
true
)
;
pref
(
"
dom
.
disable_window_open_feature
.
location
"
true
)
;
pref
(
"
dom
.
disable_window_move_resize
"
false
)
;
pref
(
"
dom
.
disable_window_flip
"
true
)
;
pref
(
"
privacy
.
popups
.
policy
"
1
)
;
pref
(
"
privacy
.
popups
.
usecustom
"
true
)
;
pref
(
"
privacy
.
popups
.
showBrowserMessage
"
true
)
;
pref
(
"
privacy
.
item
.
cookies
"
false
)
;
pref
(
"
privacy
.
clearOnShutdown
.
history
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
formdata
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
downloads
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
cookies
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
cache
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
sessions
"
true
)
;
pref
(
"
privacy
.
clearOnShutdown
.
offlineApps
"
false
)
;
pref
(
"
privacy
.
clearOnShutdown
.
siteSettings
"
false
)
;
pref
(
"
privacy
.
clearOnShutdown
.
openWindows
"
false
)
;
pref
(
"
privacy
.
cpd
.
history
"
true
)
;
pref
(
"
privacy
.
cpd
.
formdata
"
true
)
;
pref
(
"
privacy
.
cpd
.
passwords
"
false
)
;
pref
(
"
privacy
.
cpd
.
downloads
"
true
)
;
pref
(
"
privacy
.
cpd
.
cookies
"
true
)
;
pref
(
"
privacy
.
cpd
.
cache
"
true
)
;
pref
(
"
privacy
.
cpd
.
sessions
"
true
)
;
pref
(
"
privacy
.
cpd
.
offlineApps
"
false
)
;
pref
(
"
privacy
.
cpd
.
siteSettings
"
false
)
;
pref
(
"
privacy
.
cpd
.
openWindows
"
false
)
;
pref
(
"
privacy
.
history
.
custom
"
false
)
;
pref
(
"
privacy
.
sanitize
.
timeSpan
"
1
)
;
pref
(
"
privacy
.
sanitize
.
migrateFx3Prefs
"
false
)
;
pref
(
"
privacy
.
panicButton
.
enabled
"
true
)
;
pref
(
"
privacy
.
temporary_permission_expire_time_ms
"
3600000
)
;
pref
(
"
network
.
proxy
.
share_proxy_settings
"
false
)
;
pref
(
"
browser
.
gesture
.
swipe
.
left
"
"
Browser
:
BackOrBackDuplicate
"
)
;
pref
(
"
browser
.
gesture
.
swipe
.
right
"
"
Browser
:
ForwardOrForwardDuplicate
"
)
;
pref
(
"
browser
.
gesture
.
swipe
.
up
"
"
cmd_scrollTop
"
)
;
pref
(
"
browser
.
gesture
.
swipe
.
down
"
"
cmd_scrollBottom
"
)
;
#
ifdef
XP_MACOSX
pref
(
"
browser
.
gesture
.
pinch
.
latched
"
true
)
;
pref
(
"
browser
.
gesture
.
pinch
.
threshold
"
150
)
;
#
else
pref
(
"
browser
.
gesture
.
pinch
.
latched
"
false
)
;
pref
(
"
browser
.
gesture
.
pinch
.
threshold
"
25
)
;
#
endif
#
if
defined
(
XP_WIN
)
|
|
defined
(
MOZ_WIDGET_GTK
)
pref
(
"
browser
.
gesture
.
pinch
.
out
"
"
cmd_fullZoomEnlarge
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
in
"
"
cmd_fullZoomReduce
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
out
.
shift
"
"
cmd_fullZoomReset
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
in
.
shift
"
"
cmd_fullZoomReset
"
)
;
#
else
pref
(
"
browser
.
gesture
.
pinch
.
out
"
"
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
in
"
"
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
out
.
shift
"
"
"
)
;
pref
(
"
browser
.
gesture
.
pinch
.
in
.
shift
"
"
"
)
;
#
endif
pref
(
"
browser
.
gesture
.
twist
.
latched
"
false
)
;
pref
(
"
browser
.
gesture
.
twist
.
threshold
"
0
)
;
pref
(
"
browser
.
gesture
.
twist
.
right
"
"
cmd_gestureRotateRight
"
)
;
pref
(
"
browser
.
gesture
.
twist
.
left
"
"
cmd_gestureRotateLeft
"
)
;
pref
(
"
browser
.
gesture
.
twist
.
end
"
"
cmd_gestureRotateEnd
"
)
;
pref
(
"
browser
.
gesture
.
tap
"
"
cmd_fullZoomReset
"
)
;
pref
(
"
browser
.
history_swipe_animation
.
disabled
"
false
)
;
#
ifdef
XP_MACOSX
pref
(
"
mousewheel
.
with_shift
.
action
"
1
)
;
pref
(
"
mousewheel
.
with_alt
.
action
"
2
)
;
pref
(
"
mousewheel
.
with_meta
.
action
"
3
)
;
pref
(
"
mousewheel
.
with_control
.
action
.
override_x
"
0
)
;
pref
(
"
mousewheel
.
with_meta
.
action
.
override_x
"
0
)
;
#
else
pref
(
"
mousewheel
.
with_shift
.
action
"
4
)
;
pref
(
"
mousewheel
.
with_alt
.
action
"
2
)
;
pref
(
"
mousewheel
.
with_meta
.
action
"
1
)
;
#
endif
pref
(
"
mousewheel
.
with_control
.
action
"
3
)
;
pref
(
"
mousewheel
.
with_win
.
action
"
1
)
;
pref
(
"
browser
.
xul
.
error_pages
.
expert_bad_cert
"
false
)
;
pref
(
"
browser
.
xul
.
error_pages
.
show_safe_browsing_details_on_load
"
false
)
;
pref
(
"
network
.
captive
-
portal
-
service
.
enabled
"
true
)
;
pref
(
"
network
.
manage
-
offline
-
status
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
external
.
mailto
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
external
.
news
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
external
.
snews
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
external
.
nntp
"
true
)
;
#
ifdef
XP_WIN
pref
(
"
network
.
protocol
-
handler
.
external
.
ms
-
windows
-
store
"
true
)
;
#
endif
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
mailto
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
news
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
snews
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
nntp
"
false
)
;
#
ifdef
XP_WIN
pref
(
"
network
.
protocol
-
handler
.
warn
-
external
.
ms
-
windows
-
store
"
false
)
;
#
endif
pref
(
"
network
.
protocol
-
handler
.
expose
-
all
"
true
)
;
pref
(
"
network
.
protocol
-
handler
.
expose
.
mailto
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
expose
.
news
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
expose
.
snews
"
false
)
;
pref
(
"
network
.
protocol
-
handler
.
expose
.
nntp
"
false
)
;
pref
(
"
accessibility
.
typeaheadfind
"
false
)
;
pref
(
"
accessibility
.
typeaheadfind
.
timeout
"
5000
)
;
pref
(
"
accessibility
.
typeaheadfind
.
linksonly
"
false
)
;
pref
(
"
accessibility
.
typeaheadfind
.
flashBar
"
1
)
;
pref
(
"
accessibility
.
support
.
url
"
"
https
:
/
/
support
.
mozilla
.
org
/
%
LOCALE
%
/
kb
/
accessibility
-
services
"
)
;
pref
(
"
accessibility
.
indicator
.
enabled
"
false
)
;
pref
(
"
plugins
.
testmode
"
false
)
;
pref
(
"
plugins
.
show_infobar
"
false
)
;
#
if
defined
(
_ARM64_
)
&
&
defined
(
XP_WIN
)
pref
(
"
plugin
.
default
.
state
"
0
)
;
#
else
pref
(
"
plugin
.
default
.
state
"
1
)
;
#
endif
pref
(
"
plugins
.
flashBlock
.
enabled
"
true
)
;
pref
(
"
plugins
.
favorfallback
.
mode
"
"
follow
-
ctp
"
)
;
pref
(
"
plugins
.
favorfallback
.
rules
"
"
nosrc
video
"
)
;
#
ifdef
XP_WIN
pref
(
"
browser
.
preferences
.
instantApply
"
false
)
;
#
else
pref
(
"
browser
.
preferences
.
instantApply
"
true
)
;
#
endif
pref
(
"
browser
.
preferences
.
search
"
true
)
;
pref
(
"
browser
.
preferences
.
defaultPerformanceSettings
.
enabled
"
true
)
;
pref
(
"
browser
.
download
.
show_plugins_in_list
"
true
)
;
pref
(
"
browser
.
download
.
hide_plugins_without_extensions
"
true
)
;
#
ifdef
UNIX_BUT_NOT_MAC
pref
(
"
browser
.
backspace_action
"
2
)
;
#
else
pref
(
"
browser
.
backspace_action
"
0
)
;
#
endif
pref
(
"
layout
.
spellcheckDefault
"
1
)
;
pref
(
"
browser
.
send_pings
"
false
)
;
pref
(
"
gecko
.
handlerService
.
defaultHandlersVersion
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
0
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
0
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
1
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
1
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
2
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
2
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
3
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
webcal
.
3
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
0
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
0
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
1
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
1
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
2
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
2
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
3
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
mailto
.
3
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
0
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
0
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
1
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
1
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
2
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
2
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
3
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
irc
.
3
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
0
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
0
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
1
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
1
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
2
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
2
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
3
.
name
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
gecko
.
handlerService
.
schemes
.
ircs
.
3
.
uriTemplate
"
"
chrome
:
/
/
browser
-
region
/
locale
/
region
.
properties
"
)
;
pref
(
"
browser
.
geolocation
.
warning
.
infoURL
"
"
https
:
/
/
www
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
geolocation
/
"
)
;
pref
(
"
browser
.
xr
.
warning
.
infoURL
"
"
https
:
/
/
www
.
mozilla
.
org
/
%
LOCALE
%
/
firefox
/
xr
/
"
)
;
pref
(
"
browser
.
sessionstore
.
resume_from_crash
"
true
)
;
pref
(
"
browser
.
sessionstore
.
resume_session_once
"
false
)
;
pref
(
"
browser
.
sessionstore
.
resuming_after_os_restart
"
false
)
;
pref
(
"
browser
.
sessionstore
.
interval
"
15000
)
;
pref
(
"
browser
.
sessionstore
.
interval
.
idle
"
3600000
)
;
pref
(
"
browser
.
sessionstore
.
idleDelay
"
180000
)
;
pref
(
"
browser
.
sessionstore
.
privacy_level
"
0
)
;
pref
(
"
browser
.
sessionstore
.
max_tabs_undo
"
25
)
;
pref
(
"
browser
.
sessionstore
.
max_windows_undo
"
3
)
;
pref
(
"
browser
.
sessionstore
.
max_resumed_crashes
"
1
)
;
pref
(
"
browser
.
sessionstore
.
max_serialize_back
"
10
)
;
pref
(
"
browser
.
sessionstore
.
max_serialize_forward
"
-
1
)
;
pref
(
"
browser
.
sessionstore
.
restore_on_demand
"
true
)
;
pref
(
"
browser
.
sessionstore
.
restore_hidden_tabs
"
false
)
;
pref
(
"
browser
.
sessionstore
.
restore_pinned_tabs_on_demand
"
false
)
;
pref
(
"
browser
.
sessionstore
.
upgradeBackup
.
latestBuildID
"
"
"
)
;
pref
(
"
browser
.
sessionstore
.
upgradeBackup
.
maxUpgradeBackups
"
3
)
;
pref
(
"
browser
.
sessionstore
.
debug
"
false
)
;
pref
(
"
browser
.
sessionstore
.
debug
.
no_auto_updates
"
false
)
;
pref
(
"
browser
.
sessionstore
.
cleanup
.
forget_closed_after
"
1209600000
)
;
pref
(
"
browser
.
sessionstore
.
max_write_failures
"
5
)
;
pref
(
"
browser
.
sessionstore
.
warnOnQuit
"
false
)
;
pref
(
"
accessibility
.
blockautorefresh
"
false
)
;
pref
(
"
places
.
history
.
enabled
"
true
)
;
pref
(
"
places
.
frecency
.
numVisits
"
10
)
;
pref
(
"
places
.
frecency
.
firstBucketCutoff
"
4
)
;
pref
(
"
places
.
frecency
.
secondBucketCutoff
"
14
)
;
pref
(
"
places
.
frecency
.
thirdBucketCutoff
"
31
)
;
pref
(
"
places
.
frecency
.
fourthBucketCutoff
"
90
)
;
pref
(
"
places
.
frecency
.
firstBucketWeight
"
100
)
;
pref
(
"
places
.
frecency
.
secondBucketWeight
"
70
)
;
pref
(
"
places
.
frecency
.
thirdBucketWeight
"
50
)
;
pref
(
"
places
.
frecency
.
fourthBucketWeight
"
30
)
;
pref
(
"
places
.
frecency
.
defaultBucketWeight
"
10
)
;
pref
(
"
places
.
frecency
.
embedVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
framedLinkVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
linkVisitBonus
"
100
)
;
pref
(
"
places
.
frecency
.
typedVisitBonus
"
2000
)
;
pref
(
"
places
.
frecency
.
bookmarkVisitBonus
"
75
)
;
pref
(
"
places
.
frecency
.
redirectSourceVisitBonus
"
25
)
;
pref
(
"
places
.
frecency
.
downloadVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
permRedirectVisitBonus
"
50
)
;
pref
(
"
places
.
frecency
.
tempRedirectVisitBonus
"
40
)
;
pref
(
"
places
.
frecency
.
reloadVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
defaultVisitBonus
"
0
)
;
pref
(
"
places
.
frecency
.
unvisitedBookmarkBonus
"
140
)
;
pref
(
"
places
.
frecency
.
unvisitedTypedBonus
"
200
)
;
pref
(
"
browser
.
ssl_override_behavior
"
2
)
;
pref
(
"
browser
.
zoom
.
full
"
true
)
;
pref
(
"
browser
.
zoom
.
siteSpecific
"
true
)
;
pref
(
"
browser
.
zoom
.
updateBackgroundTabs
"
true
)
;
pref
(
"
breakpad
.
reportURL
"
"
https
:
/
/
crash
-
stats
.
mozilla
.
org
/
report
/
index
/
"
)
;
pref
(
"
toolkit
.
datacollection
.
infoURL
"
"
https
:
/
/
www
.
mozilla
.
org
/
legal
/
privacy
/
firefox
.
html
"
)
;
pref
(
"
toolkit
.
crashreporter
.
infoURL
"
"
https
:
/
/
www
.
mozilla
.
org
/
legal
/
privacy
/
firefox
.
html
#
crash
-
reporter
"
)
;
pref
(
"
app
.
support
.
baseURL
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
"
)
;
#
ifdef
MOZ_DEV_EDITION
pref
(
"
app
.
feedback
.
baseURL
"
"
https
:
/
/
input
.
mozilla
.
org
/
%
LOCALE
%
/
feedback
/
firefoxdev
/
%
VERSION
%
/
"
)
;
#
else
pref
(
"
app
.
feedback
.
baseURL
"
"
https
:
/
/
input
.
mozilla
.
org
/
%
LOCALE
%
/
feedback
/
%
APP
%
/
%
VERSION
%
/
"
)
;
#
endif
pref
(
"
security
.
alternate_certificate_error_page
"
"
certerror
"
)
;
pref
(
"
security
.
certerrors
.
recordEventTelemetry
"
true
)
;
pref
(
"
security
.
certerrors
.
permanentOverride
"
true
)
;
pref
(
"
security
.
certerrors
.
mitm
.
priming
.
enabled
"
true
)
;
pref
(
"
security
.
certerrors
.
mitm
.
priming
.
endpoint
"
"
https
:
/
/
mitmdetection
.
services
.
mozilla
.
com
/
"
)
;
pref
(
"
security
.
certerrors
.
mitm
.
auto_enable_enterprise_roots
"
true
)
;
pref
(
"
security
.
aboutcertificate
.
enabled
"
true
)
;
pref
(
"
browser
.
privatebrowsing
.
autostart
"
false
)
;
pref
(
"
browser
.
bookmarks
.
editDialog
.
showForNewBookmarks
"
true
)
;
pref
(
"
browser
.
bookmarks
.
editDialog
.
firstEditField
"
"
namePicker
"
)
;
pref
(
"
browser
.
bookmarks
.
editDialog
.
maxRecentFolders
"
7
)
;
pref
(
"
dom
.
ipc
.
plugins
.
flash
.
disable
-
protected
-
mode
"
false
)
;
pref
(
"
browser
.
flash
-
protected
-
mode
-
flip
.
enable
"
false
)
;
pref
(
"
browser
.
flash
-
protected
-
mode
-
flip
.
done
"
false
)
;
pref
(
"
browser
.
in
-
content
.
dark
-
mode
"
true
)
;
pref
(
"
dom
.
ipc
.
shims
.
enabledWarnings
"
false
)
;
#
if
defined
(
XP_WIN
)
&
&
defined
(
MOZ_SANDBOX
)
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
default
"
0
)
;
#
if
defined
(
_AMD64_
)
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
flash
"
3
)
;
#
else
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
flash
"
0
)
;
#
endif
pref
(
"
security
.
sandbox
.
content
.
level
"
5
)
;
pref
(
"
security
.
sandbox
.
windows
.
log
.
stackTraceDepth
"
0
)
;
pref
(
"
security
.
sandbox
.
gpu
.
level
"
0
)
;
pref
(
"
security
.
sandbox
.
rdd
.
win32k
-
disable
"
true
)
;
pref
(
"
security
.
sandbox
.
gmp
.
win32k
-
disable
"
false
)
;
#
endif
#
if
defined
(
XP_MACOSX
)
&
&
defined
(
MOZ_SANDBOX
)
pref
(
"
security
.
sandbox
.
content
.
mac
.
earlyinit
"
true
)
;
pref
(
"
security
.
sandbox
.
content
.
level
"
3
)
;
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
flash
"
1
)
;
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
flash
.
legacy
"
1
)
;
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
flash
.
max
-
legacy
-
os
-
minor
"
10
)
;
pref
(
"
dom
.
ipc
.
plugins
.
sandbox
-
level
.
default
"
1
)
;
#
endif
#
if
defined
(
XP_LINUX
)
&
&
defined
(
MOZ_SANDBOX
)
pref
(
"
security
.
sandbox
.
content
.
level
"
4
)
;
pref
(
"
security
.
sandbox
.
content
.
write_path_whitelist
"
"
"
)
;
pref
(
"
security
.
sandbox
.
content
.
read_path_whitelist
"
"
"
)
;
pref
(
"
security
.
sandbox
.
content
.
syscall_whitelist
"
"
"
)
;
#
endif
#
if
defined
(
XP_OPENBSD
)
&
&
defined
(
MOZ_SANDBOX
)
pref
(
"
security
.
sandbox
.
content
.
level
"
1
)
;
#
endif
#
if
defined
(
MOZ_SANDBOX
)
pref
(
"
security
.
sandbox
.
content
.
tempDirSuffix
"
"
"
)
;
pref
(
"
security
.
sandbox
.
plugin
.
tempDirSuffix
"
"
"
)
;
#
if
defined
(
XP_WIN
)
|
|
defined
(
XP_MACOSX
)
pref
(
"
security
.
sandbox
.
logging
.
enabled
"
false
)
;
#
endif
#
endif
#
ifdef
XP_MACOSX
pref
(
"
dom
.
ipc
.
plugins
.
nativeCursorSupport
"
true
)
;
#
endif
#
ifdef
XP_WIN
pref
(
"
browser
.
taskbar
.
previews
.
enable
"
false
)
;
pref
(
"
browser
.
taskbar
.
previews
.
max
"
20
)
;
pref
(
"
browser
.
taskbar
.
previews
.
cachetime
"
5
)
;
pref
(
"
browser
.
taskbar
.
lists
.
enabled
"
true
)
;
pref
(
"
browser
.
taskbar
.
lists
.
frequent
.
enabled
"
true
)
;
pref
(
"
browser
.
taskbar
.
lists
.
recent
.
enabled
"
false
)
;
pref
(
"
browser
.
taskbar
.
lists
.
maxListItemCount
"
7
)
;
pref
(
"
browser
.
taskbar
.
lists
.
tasks
.
enabled
"
true
)
;
pref
(
"
browser
.
taskbar
.
lists
.
refreshInSeconds
"
120
)
;
#
endif
pref
(
"
services
.
sync
.
prefs
.
sync
.
accessibility
.
blockautorefresh
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
accessibility
.
browsewithcaret
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
accessibility
.
typeaheadfind
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
accessibility
.
typeaheadfind
.
linksonly
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
addons
.
ignoreUserEnabledChanges
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
app
.
shield
.
optoutstudies
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
contentblocking
.
category
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
contentblocking
.
features
.
strict
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
crashReports
.
unsubmittedCheck
.
autoSubmit2
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
ctrlTab
.
recentlyUsedOrder
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
discovery
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
download
.
useDownloadDir
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
formfill
.
enable
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
link
.
open_newwindow
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
showSearch
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
showSponsored
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
feeds
.
topsites
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
topSitesRows
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
feeds
.
snippets
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
feeds
.
section
.
topstories
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
section
.
topstories
.
rows
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
feeds
.
section
.
highlights
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
section
.
highlights
.
includeVisited
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
section
.
highlights
.
includeBookmarks
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
section
.
highlights
.
includeDownloads
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
section
.
highlights
.
includePocket
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
activity
-
stream
.
section
.
highlights
.
rows
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
newtabpage
.
pinned
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
offline
-
apps
.
notify
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
search
.
update
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
search
.
widget
.
inNavBar
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
startup
.
homepage
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
startup
.
page
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
tabs
.
loadInBackground
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
tabs
.
warnOnClose
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
tabs
.
warnOnOpen
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
taskbar
.
previews
.
enable
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
matchBuckets
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
maxRichResults
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
suggest
.
bookmark
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
suggest
.
history
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
suggest
.
openpage
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
browser
.
urlbar
.
suggest
.
searches
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
dom
.
disable_open_during_load
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
dom
.
disable_window_flip
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
dom
.
disable_window_move_resize
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
dom
.
event
.
contextmenu
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
extensions
.
update
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
extensions
.
activeThemeID
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
intl
.
accept_languages
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
layout
.
spellcheckDefault
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
media
.
autoplay
.
default
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
media
.
eme
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
network
.
cookie
.
cookieBehavior
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
network
.
cookie
.
lifetimePolicy
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
network
.
cookie
.
thirdparty
.
sessionOnly
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
permissions
.
default
.
image
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
pref
.
downloads
.
disable_button
.
edit_actions
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
pref
.
privacy
.
disable_button
.
cookie_exceptions
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
cache
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
cookies
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
downloads
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
formdata
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
history
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
offlineApps
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
sessions
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
clearOnShutdown
.
siteSettings
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
donottrackheader
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
fuzzyfox
.
enabled
"
false
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
fuzzyfox
.
clockgrainus
"
false
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
sanitize
.
sanitizeOnShutdown
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
trackingprotection
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
trackingprotection
.
cryptomining
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
trackingprotection
.
fingerprinting
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
trackingprotection
.
pbmode
.
enabled
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
resistFingerprinting
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
reduceTimerPrecision
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
resistFingerprinting
.
reduceTimerPrecision
.
microseconds
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
privacy
.
resistFingerprinting
.
reduceTimerPrecision
.
jitter
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
security
.
default_personal_cert
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
services
.
sync
.
syncedTabs
.
showRemoteIcons
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
signon
.
rememberSignons
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
sync
.
spellchecker
.
dictionary
"
true
)
;
pref
(
"
services
.
sync
.
prefs
.
dangerously_allow_arbitrary
"
false
)
;
pref
(
"
services
.
sync
.
syncedTabs
.
showRemoteIcons
"
true
)
;
pref
(
"
browser
.
menu
.
showCharacterEncoding
"
"
chrome
:
/
/
browser
/
locale
/
browser
.
properties
"
)
;
pref
(
"
prompts
.
tab_modal
.
enabled
"
true
)
;
pref
(
"
browser
.
newtab
.
preload
"
true
)
;
#
ifndef
RELEASE_OR_BETA
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
debug
"
false
)
;
#
endif
pref
(
"
browser
.
library
.
activity
-
stream
.
enabled
"
true
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
fxaccounts
.
endpoint
"
"
https
:
/
/
accounts
.
firefox
.
com
/
"
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
improvesearch
.
topSiteSearchShortcuts
"
true
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
asrouter
.
providers
.
cfr
"
"
{
\
"
id
\
"
:
\
"
cfr
\
"
\
"
enabled
\
"
:
true
\
"
type
\
"
:
\
"
remote
-
settings
\
"
\
"
bucket
\
"
:
\
"
cfr
\
"
\
"
frequency
\
"
:
{
\
"
custom
\
"
:
[
{
\
"
period
\
"
:
\
"
daily
\
"
\
"
cap
\
"
:
1
}
]
}
\
"
categories
\
"
:
[
\
"
cfrAddons
\
"
\
"
cfrFeatures
\
"
]
\
"
updateCycleInMs
\
"
:
3600000
}
"
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
asrouter
.
providers
.
whats
-
new
-
panel
"
"
{
\
"
id
\
"
:
\
"
whats
-
new
-
panel
\
"
\
"
enabled
\
"
:
true
\
"
type
\
"
:
\
"
remote
-
settings
\
"
\
"
bucket
\
"
:
\
"
whats
-
new
-
panel
\
"
\
"
updateCycleInMs
\
"
:
3600000
}
"
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
asrouter
.
providers
.
message
-
groups
"
"
{
\
"
id
\
"
:
\
"
message
-
groups
\
"
\
"
enabled
\
"
:
true
\
"
type
\
"
:
\
"
remote
-
settings
\
"
\
"
bucket
\
"
:
\
"
message
-
groups
\
"
\
"
updateCycleInMs
\
"
:
3600000
}
"
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
asrouter
.
providers
.
snippets
"
"
{
\
"
id
\
"
:
\
"
snippets
\
"
\
"
enabled
\
"
:
true
\
"
type
\
"
:
\
"
remote
\
"
\
"
url
\
"
:
\
"
https
:
/
/
snippets
.
cdn
.
mozilla
.
net
/
%
STARTPAGE_VERSION
%
/
%
NAME
%
/
%
VERSION
%
/
%
APPBUILDID
%
/
%
BUILD_TARGET
%
/
%
LOCALE
%
/
%
CHANNEL
%
/
%
OS_VERSION
%
/
%
DISTRIBUTION
%
/
%
DISTRIBUTION_VERSION
%
/
\
"
\
"
updateCycleInMs
\
"
:
14400000
}
"
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
asrouter
.
useReleaseSnippets
"
true
)
;
#
endif
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
asrouter
.
useRemoteL10n
"
true
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
discoverystream
.
enabled
"
true
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
discoverystream
.
hardcoded
-
basic
-
layout
"
false
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
discoverystream
.
spocs
-
endpoint
"
"
"
)
;
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
discoverystream
.
lang
-
layout
-
config
"
"
en
"
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
improvesearch
.
handoffToAwesomebar
"
true
)
;
#
else
pref
(
"
browser
.
newtabpage
.
activity
-
stream
.
improvesearch
.
handoffToAwesomebar
"
false
)
;
#
endif
pref
(
"
trailhead
.
firstrun
.
branches
"
"
"
)
;
pref
(
"
browser
.
messaging
-
system
.
whatsNewPanel
.
enabled
"
true
)
;
pref
(
"
browser
.
messaging
-
system
.
personalized
-
cfr
.
scores
"
"
{
}
"
)
;
pref
(
"
browser
.
messaging
-
system
.
personalized
-
cfr
.
score
-
threshold
"
5000
)
;
pref
(
"
full
-
screen
-
api
.
enabled
"
true
)
;
pref
(
"
toolkit
.
startup
.
max_resumed_crashes
"
3
)
;
#
if
defined
(
XP_WIN
)
pref
(
"
toolkit
.
winRegisterApplicationRestart
"
true
)
;
#
endif
pref
(
"
pdfjs
.
disabled
"
false
)
;
pref
(
"
pdfjs
.
firstRun
"
true
)
;
pref
(
"
pdfjs
.
previousHandler
.
preferredAction
"
0
)
;
pref
(
"
pdfjs
.
previousHandler
.
alwaysAskBeforeHandling
"
false
)
;
pref
(
"
sidebar
.
position_start
"
true
)
;
pref
(
"
security
.
identitypopup
.
recordEventTelemetry
"
true
)
;
pref
(
"
security
.
protectionspopup
.
recordEventTelemetry
"
true
)
;
pref
(
"
security
.
app_menu
.
recordEventTelemetry
"
true
)
;
pref
(
"
security
.
mixed_content
.
block_active_content
"
true
)
;
pref
(
"
security
.
insecure_password
.
ui
.
enabled
"
true
)
;
pref
(
"
security
.
insecure_field_warning
.
contextual
.
enabled
"
true
)
;
pref
(
"
security
.
insecure_connection_icon
.
enabled
"
true
)
;
pref
(
"
security
.
insecure_connection_icon
.
pbmode
.
enabled
"
true
)
;
pref
(
"
security
.
secure_connection_icon_color_gray
"
true
)
;
pref
(
"
security
.
identityblock
.
show_extended_validation
"
false
)
;
pref
(
"
security
.
insecure_connection_text
.
enabled
"
false
)
;
pref
(
"
security
.
insecure_connection_text
.
pbmode
.
enabled
"
false
)
;
pref
(
"
security
.
cert_pinning
.
enforcement_level
"
1
)
;
pref
(
"
dom
.
debug
.
propagate_gesture_events_through_content
"
false
)
;
#
ifndef
EARLY_BETA_OR_EARLIER
pref
(
"
geo
.
wifi
.
uri
"
"
https
:
/
/
www
.
googleapis
.
com
/
geolocation
/
v1
/
geolocate
?
key
=
%
GOOGLE_LOCATION_SERVICE_API_KEY
%
"
)
;
#
else
pref
(
"
geo
.
wifi
.
uri
"
"
https
:
/
/
location
.
services
.
mozilla
.
com
/
v1
/
geolocate
?
key
=
%
MOZILLA_API_KEY
%
"
)
;
#
endif
#
ifdef
XP_MACOSX
pref
(
"
geo
.
provider
.
use_corelocation
"
true
)
;
#
endif
#
ifdef
XP_WIN
pref
(
"
geo
.
provider
.
ms
-
windows
-
location
"
true
)
;
#
endif
#
if
defined
(
MOZ_WIDGET_GTK
)
&
&
defined
(
MOZ_GPSD
)
pref
(
"
geo
.
provider
.
use_gpsd
"
true
)
;
#
endif
pref
(
"
browser
.
uiCustomization
.
debug
"
false
)
;
pref
(
"
browser
.
uiCustomization
.
state
"
"
"
)
;
pref
(
"
identity
.
fxaccounts
.
enabled
"
true
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
root
"
"
https
:
/
/
accounts
.
firefox
.
com
/
"
)
;
pref
(
"
identity
.
fxaccounts
.
contextParam
"
"
fx_desktop_v3
"
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
profile
.
uri
"
"
https
:
/
/
profile
.
accounts
.
firefox
.
com
/
v1
"
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
oauth
.
uri
"
"
https
:
/
/
oauth
.
accounts
.
firefox
.
com
/
v1
"
)
;
pref
(
"
identity
.
fxaccounts
.
pairing
.
enabled
"
true
)
;
pref
(
"
identity
.
fxaccounts
.
remote
.
pairing
.
uri
"
"
wss
:
/
/
channelserver
.
services
.
mozilla
.
com
"
)
;
pref
(
"
identity
.
sync
.
tokenserver
.
uri
"
"
https
:
/
/
token
.
services
.
mozilla
.
com
/
1
.
0
/
sync
/
1
.
5
"
)
;
pref
(
"
identity
.
fxaccounts
.
autoconfig
.
uri
"
"
"
)
;
pref
(
"
identity
.
sendtabpromo
.
url
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
send
-
tab
"
)
;
pref
(
"
identity
.
mobilepromo
.
android
"
"
https
:
/
/
www
.
mozilla
.
org
/
firefox
/
android
/
?
utm_source
=
firefox
-
browser
&
utm_medium
=
firefox
-
browser
&
utm_campaign
=
"
)
;
pref
(
"
identity
.
mobilepromo
.
ios
"
"
https
:
/
/
www
.
mozilla
.
org
/
firefox
/
ios
/
?
utm_source
=
firefox
-
browser
&
utm_medium
=
firefox
-
browser
&
utm_campaign
=
"
)
;
#
ifdef
MOZ_DEV_EDITION
pref
(
"
identity
.
fxaccounts
.
migrateToDevEdition
"
true
)
;
#
else
pref
(
"
identity
.
fxaccounts
.
migrateToDevEdition
"
false
)
;
#
endif
pref
(
"
identity
.
fxaccounts
.
commands
.
enabled
"
true
)
;
pref
(
"
identity
.
fxaccounts
.
commands
.
missed
.
fetch_interval
"
86400
)
;
#
ifdef
MOZ_WIDGET_GTK
pref
(
"
ui
.
key
.
menuAccessKeyFocuses
"
true
)
;
#
endif
pref
(
"
media
.
gmp
.
trial
-
create
.
enabled
"
true
)
;
#
ifdef
MOZ_WIDEVINE_EME
pref
(
"
media
.
gmp
-
widevinecdm
.
visible
"
true
)
;
pref
(
"
media
.
gmp
-
widevinecdm
.
enabled
"
true
)
;
#
endif
pref
(
"
media
.
gmp
-
gmpopenh264
.
visible
"
true
)
;
pref
(
"
media
.
gmp
-
gmpopenh264
.
enabled
"
true
)
;
pref
(
"
media
.
autoplay
.
enabled
.
user
-
gestures
-
needed
"
true
)
;
pref
(
"
media
.
autoplay
.
default
"
1
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
media
.
autoplay
.
block
-
webaudio
"
true
)
;
#
else
pref
(
"
media
.
autoplay
.
block
-
webaudio
"
false
)
;
#
endif
pref
(
"
media
.
videocontrols
.
picture
-
in
-
picture
.
enabled
"
true
)
;
pref
(
"
media
.
videocontrols
.
picture
-
in
-
picture
.
video
-
toggle
.
enabled
"
true
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
media
.
videocontrols
.
picture
-
in
-
picture
.
audio
-
toggle
.
enabled
"
true
)
;
#
else
pref
(
"
media
.
videocontrols
.
picture
-
in
-
picture
.
audio
-
toggle
.
enabled
"
false
)
;
#
endif
pref
(
"
browser
.
translation
.
detectLanguage
"
false
)
;
pref
(
"
browser
.
translation
.
neverForLanguages
"
"
"
)
;
pref
(
"
browser
.
translation
.
ui
.
show
"
false
)
;
pref
(
"
browser
.
translation
.
engine
"
"
Google
"
)
;
pref
(
"
toolkit
.
telemetry
.
archive
.
enabled
"
true
)
;
pref
(
"
toolkit
.
telemetry
.
shutdownPingSender
.
enabled
"
true
)
;
pref
(
"
toolkit
.
telemetry
.
shutdownPingSender
.
enabledFirstSession
"
false
)
;
pref
(
"
toolkit
.
telemetry
.
firstShutdownPing
.
enabled
"
true
)
;
pref
(
"
toolkit
.
telemetry
.
newProfilePing
.
enabled
"
true
)
;
pref
(
"
toolkit
.
telemetry
.
updatePing
.
enabled
"
true
)
;
pref
(
"
toolkit
.
telemetry
.
bhrPing
.
enabled
"
true
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
toolkit
.
telemetry
.
ecosystemtelemetry
.
enabled
"
true
)
;
#
else
pref
(
"
toolkit
.
telemetry
.
ecosystemtelemetry
.
enabled
"
false
)
;
#
endif
pref
(
"
browser
.
ping
-
centre
.
telemetry
"
true
)
;
pref
(
"
browser
.
ping
-
centre
.
log
"
false
)
;
pref
(
"
media
.
gmp
-
provider
.
enabled
"
true
)
;
pref
(
"
network
.
cookie
.
cookieBehavior
"
4
)
;
pref
(
"
privacy
.
trackingprotection
.
fingerprinting
.
enabled
"
true
)
;
pref
(
"
privacy
.
trackingprotection
.
cryptomining
.
enabled
"
true
)
;
pref
(
"
browser
.
contentblocking
.
database
.
enabled
"
true
)
;
pref
(
"
dom
.
storage_access
.
enabled
"
true
)
;
pref
(
"
browser
.
contentblocking
.
control
-
center
.
ui
.
showBlockedLabels
"
true
)
;
pref
(
"
browser
.
contentblocking
.
control
-
center
.
ui
.
showAllowedLabels
"
false
)
;
pref
(
"
browser
.
contentblocking
.
cryptomining
.
preferences
.
ui
.
enabled
"
true
)
;
pref
(
"
browser
.
contentblocking
.
fingerprinting
.
preferences
.
ui
.
enabled
"
true
)
;
pref
(
"
browser
.
contentblocking
.
features
.
strict
"
"
tp
tpPrivate
cookieBehavior4
cm
fp
stp
"
)
;
pref
(
"
browser
.
contentblocking
.
customBlockList
.
preferences
.
ui
.
enabled
"
false
)
;
pref
(
"
browser
.
contentblocking
.
reportBreakage
.
url
"
"
https
:
/
/
tracking
-
protection
-
issues
.
herokuapp
.
com
/
new
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
lockwise
.
enabled
"
true
)
;
pref
(
"
browser
.
contentblocking
.
report
.
monitor
.
enabled
"
true
)
;
pref
(
"
browser
.
contentblocking
.
report
.
proxy
.
enabled
"
false
)
;
pref
(
"
browser
.
contentblocking
.
report
.
monitor
.
url
"
"
https
:
/
/
monitor
.
firefox
.
com
/
?
entrypoint
=
protection_report_monitor
&
utm_source
=
about
-
protections
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
monitor
.
sign_in_url
"
"
https
:
/
/
monitor
.
firefox
.
com
/
oauth
/
init
?
entrypoint
=
protection_report_monitor
&
utm_source
=
about
-
protections
&
email
=
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
lockwise
.
url
"
"
https
:
/
/
lockwise
.
firefox
.
com
/
?
utm_source
=
firefox
-
desktop
&
utm_medium
=
referral
&
utm_campaign
=
about
-
protections
&
utm_content
=
about
-
protections
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
manage_devices
.
url
"
"
https
:
/
/
accounts
.
firefox
.
com
/
settings
/
clients
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
proxy_extension
.
url
"
"
https
:
/
/
fpn
.
firefox
.
com
/
browser
?
utm_source
=
firefox
-
desktop
&
utm_medium
=
referral
&
utm_campaign
=
about
-
protections
&
utm_content
=
about
-
protections
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
monitor
.
how_it_works
.
url
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
monitor
-
faq
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
lockwise
.
how_it_works
.
url
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
password
-
manager
-
report
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
social
.
url
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
social
-
media
-
tracking
-
report
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
cookie
.
url
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
cross
-
site
-
tracking
-
report
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
tracker
.
url
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
tracking
-
content
-
report
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
fingerprinter
.
url
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
fingerprinters
-
report
"
)
;
pref
(
"
browser
.
contentblocking
.
report
.
cryptominer
.
url
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
cryptominers
-
report
"
)
;
pref
(
"
browser
.
contentblocking
.
cfr
-
milestone
.
enabled
"
true
)
;
pref
(
"
browser
.
contentblocking
.
cfr
-
milestone
.
milestone
-
achieved
"
0
)
;
pref
(
"
browser
.
contentblocking
.
cfr
-
milestone
.
milestones
"
"
[
1000
5000
10000
25000
50000
100000
500000
]
"
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
browser
.
protections_panel
.
enabled
"
true
)
;
pref
(
"
browser
.
protections_panel
.
infoMessage
.
seen
"
false
)
;
#
endif
pref
(
"
privacy
.
usercontext
.
about_newtab_segregation
.
enabled
"
true
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
privacy
.
userContext
.
enabled
"
true
)
;
pref
(
"
privacy
.
userContext
.
ui
.
enabled
"
true
)
;
pref
(
"
privacy
.
userContext
.
longPressBehavior
"
2
)
;
#
else
pref
(
"
privacy
.
userContext
.
enabled
"
false
)
;
pref
(
"
privacy
.
userContext
.
ui
.
enabled
"
false
)
;
pref
(
"
privacy
.
userContext
.
longPressBehavior
"
0
)
;
#
endif
pref
(
"
privacy
.
userContext
.
extension
"
"
"
)
;
pref
(
"
browser
.
tabs
.
remote
.
autostart
"
true
)
;
pref
(
"
browser
.
tabs
.
remote
.
desktopbehavior
"
true
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
media
.
peerconnection
.
mtransport_process
"
true
)
;
#
else
pref
(
"
media
.
peerconnection
.
mtransport_process
"
false
)
;
#
endif
#
ifdef
NIGHTLY_BUILD
pref
(
"
network
.
process
.
enabled
"
true
)
;
#
else
pref
(
"
network
.
process
.
enabled
"
false
)
;
#
endif
pref
(
"
browser
.
tabs
.
remote
.
warmup
.
enabled
"
true
)
;
pref
(
"
browser
.
tabs
.
remote
.
tabCacheSize
"
0
)
;
pref
(
"
browser
.
tabs
.
remote
.
warmup
.
maxTabs
"
3
)
;
pref
(
"
browser
.
tabs
.
remote
.
warmup
.
unloadDelayMs
"
2000
)
;
pref
(
"
browser
.
tabs
.
crashReporting
.
sendReport
"
true
)
;
pref
(
"
browser
.
tabs
.
crashReporting
.
includeURL
"
false
)
;
pref
(
"
browser
.
tabs
.
crashReporting
.
requestEmail
"
false
)
;
pref
(
"
browser
.
tabs
.
crashReporting
.
emailMe
"
false
)
;
pref
(
"
browser
.
tabs
.
crashReporting
.
email
"
"
"
)
;
pref
(
"
extensions
.
legacy
.
enabled
"
false
)
;
pref
(
"
dom
.
ipc
.
cpows
.
forbid
-
unsafe
-
from
-
browser
"
true
)
;
#
if
defined
(
XP_WIN
)
pref
(
"
dom
.
ipc
.
processPriorityManager
.
enabled
"
true
)
;
#
endif
pref
(
"
reader
.
parse
-
node
-
limit
"
0
)
;
pref
(
"
reader
.
errors
.
includeURLs
"
true
)
;
pref
(
"
view_source
.
tab
"
true
)
;
pref
(
"
dom
.
serviceWorkers
.
enabled
"
true
)
;
pref
(
"
dom
.
push
.
enabled
"
true
)
;
pref
(
"
toolkit
.
pageThumbs
.
minWidth
"
280
)
;
pref
(
"
toolkit
.
pageThumbs
.
minHeight
"
190
)
;
pref
(
"
media
.
webspeech
.
synth
.
enabled
"
true
)
;
pref
(
"
browser
.
esedbreader
.
loglevel
"
"
Error
"
)
;
pref
(
"
browser
.
laterrun
.
enabled
"
false
)
;
pref
(
"
dom
.
ipc
.
processPrelaunch
.
enabled
"
true
)
;
pref
(
"
browser
.
migrate
.
chrome
.
history
.
limit
"
2000
)
;
pref
(
"
browser
.
migrate
.
chrome
.
history
.
maxAgeInDays
"
180
)
;
pref
(
"
dom
.
mozBrowserFramesEnabled
"
true
)
;
pref
(
"
extensions
.
pocket
.
api
"
"
api
.
getpocket
.
com
"
)
;
pref
(
"
extensions
.
pocket
.
enabled
"
true
)
;
pref
(
"
extensions
.
pocket
.
oAuthConsumerKey
"
"
40249
-
e88c401e1b1f2242d9e441c4
"
)
;
pref
(
"
extensions
.
pocket
.
site
"
"
getpocket
.
com
"
)
;
pref
(
"
signon
.
management
.
page
.
breach
-
alerts
.
enabled
"
true
)
;
pref
(
"
signon
.
management
.
page
.
sort
"
"
name
"
)
;
pref
(
"
signon
.
management
.
overrideURI
"
"
about
:
logins
?
filter
=
%
DOMAIN
%
"
)
;
pref
(
"
signon
.
management
.
page
.
mobileAndroidURL
"
"
https
:
/
/
app
.
adjust
.
com
/
6tteyjo
?
redirect
=
https
%
3A
%
2F
%
2Fplay
.
google
.
com
%
2Fstore
%
2Fapps
%
2Fdetails
%
3Fid
%
3Dmozilla
.
lockbox
&
utm_campaign
=
Desktop
&
utm_adgroup
=
InProduct
&
utm_creative
=
"
)
;
pref
(
"
signon
.
management
.
page
.
mobileAppleURL
"
"
https
:
/
/
app
.
adjust
.
com
/
6tteyjo
?
redirect
=
https
%
3A
%
2F
%
2Fitunes
.
apple
.
com
%
2Fapp
%
2Fid1314000270
%
3Fmt
%
3D8
&
utm_campaign
=
Desktop
&
utm_adgroup
=
InProduct
&
utm_creative
=
"
)
;
pref
(
"
signon
.
management
.
page
.
breachAlertUrl
"
"
https
:
/
/
monitor
.
firefox
.
com
/
breach
-
details
/
"
)
;
pref
(
"
signon
.
management
.
page
.
hideMobileFooter
"
false
)
;
pref
(
"
signon
.
management
.
page
.
showPasswordSyncNotification
"
true
)
;
pref
(
"
print
.
use_simplify_page
"
true
)
;
pref
(
"
webchannel
.
allowObject
.
urlWhitelist
"
"
https
:
/
/
content
.
cdn
.
mozilla
.
net
https
:
/
/
support
.
mozilla
.
org
https
:
/
/
install
.
mozilla
.
org
"
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
browser
.
crashReports
.
unsubmittedCheck
.
enabled
"
true
)
;
#
else
pref
(
"
browser
.
crashReports
.
unsubmittedCheck
.
enabled
"
false
)
;
#
endif
pref
(
"
browser
.
crashReports
.
unsubmittedCheck
.
chancesUntilSuppress
"
4
)
;
pref
(
"
browser
.
crashReports
.
unsubmittedCheck
.
autoSubmit2
"
false
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
extensions
.
formautofill
.
available
"
"
on
"
)
;
#
else
pref
(
"
extensions
.
formautofill
.
available
"
"
detect
"
)
;
#
endif
pref
(
"
extensions
.
formautofill
.
creditCards
.
available
"
false
)
;
pref
(
"
extensions
.
formautofill
.
addresses
.
enabled
"
true
)
;
pref
(
"
extensions
.
formautofill
.
creditCards
.
enabled
"
true
)
;
pref
(
"
extensions
.
formautofill
.
creditCards
.
used
"
0
)
;
pref
(
"
extensions
.
formautofill
.
firstTimeUse
"
true
)
;
pref
(
"
extensions
.
formautofill
.
heuristics
.
enabled
"
true
)
;
pref
(
"
extensions
.
formautofill
.
reauth
.
enabled
"
false
)
;
pref
(
"
extensions
.
formautofill
.
section
.
enabled
"
true
)
;
pref
(
"
extensions
.
formautofill
.
loglevel
"
"
Warn
"
)
;
#
ifdef
NIGHTLY_BUILD
pref
(
"
extensions
.
formautofill
.
supportedCountries
"
"
US
CA
DE
"
)
;
pref
(
"
extensions
.
formautofill
.
supportRTL
"
true
)
;
#
else
pref
(
"
extensions
.
formautofill
.
supportedCountries
"
"
US
"
)
;
pref
(
"
extensions
.
formautofill
.
supportRTL
"
false
)
;
#
endif
pref
(
"
browser
.
sessionstore
.
restore_tabs_lazily
"
true
)
;
pref
(
"
browser
.
suppress_first_window_animation
"
true
)
;
pref
(
"
extensions
.
screenshots
.
disabled
"
false
)
;
pref
(
"
extensions
.
screenshots
.
upload
-
disabled
"
false
)
;
pref
(
"
browser
.
chrome
.
errorReporter
.
infoURL
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
nightly
-
error
-
collection
"
)
;
pref
(
"
app
.
normandy
.
api_url
"
"
https
:
/
/
normandy
.
cdn
.
mozilla
.
net
/
api
/
v1
"
)
;
pref
(
"
app
.
normandy
.
dev_mode
"
false
)
;
pref
(
"
app
.
normandy
.
enabled
"
true
)
;
pref
(
"
app
.
normandy
.
first_run
"
true
)
;
pref
(
"
app
.
normandy
.
logging
.
level
"
50
)
;
pref
(
"
app
.
normandy
.
run_interval_seconds
"
21600
)
;
pref
(
"
app
.
normandy
.
shieldLearnMoreUrl
"
"
https
:
/
/
support
.
mozilla
.
org
/
1
/
firefox
/
%
VERSION
%
/
%
OS
%
/
%
LOCALE
%
/
shield
"
)
;
pref
(
"
app
.
normandy
.
last_seen_buildid
"
"
"
)
;
pref
(
"
app
.
normandy
.
onsync_skew_sec
"
600
)
;
#
ifdef
MOZ_DATA_REPORTING
pref
(
"
app
.
shield
.
optoutstudies
.
enabled
"
true
)
;
#
else
pref
(
"
app
.
shield
.
optoutstudies
.
enabled
"
false
)
;
#
endif
#
if
defined
(
RELEASE_OR_BETA
)
&
&
!
defined
(
MOZ_DEV_EDITION
)
pref
(
"
intl
.
multilingual
.
enabled
"
true
)
;
pref
(
"
intl
.
multilingual
.
downloadEnabled
"
true
)
;
#
else
pref
(
"
intl
.
multilingual
.
enabled
"
false
)
;
pref
(
"
intl
.
multilingual
.
downloadEnabled
"
false
)
;
#
endif
pref
(
"
fission
.
frontend
.
simulate
-
events
"
false
)
;
pref
(
"
fission
.
frontend
.
simulate
-
messages
"
false
)
;
pref
(
"
toolkit
.
coverage
.
enabled
"
false
)
;
pref
(
"
toolkit
.
coverage
.
endpoint
.
base
"
"
https
:
/
/
coverage
.
mozilla
.
org
"
)
;
pref
(
"
browser
.
discovery
.
enabled
"
true
)
;
pref
(
"
browser
.
discovery
.
containers
.
enabled
"
true
)
;
pref
(
"
browser
.
discovery
.
sites
"
"
addons
.
mozilla
.
org
"
)
;
pref
(
"
browser
.
engagement
.
recent_visited_origins
.
expiry
"
86400
)
;
pref
(
"
browser
.
aboutConfig
.
showWarning
"
true
)
;
pref
(
"
browser
.
toolbars
.
keyboard_navigation
"
true
)
;
pref
(
"
identity
.
fxaccounts
.
toolbar
.
enabled
"
true
)
;
pref
(
"
identity
.
fxaccounts
.
toolbar
.
accessed
"
false
)
;
pref
(
"
identity
.
fxaccounts
.
service
.
sendLoginUrl
"
"
https
:
/
/
send
.
firefox
.
com
/
login
/
"
)
;
pref
(
"
identity
.
fxaccounts
.
service
.
monitorLoginUrl
"
"
https
:
/
/
monitor
.
firefox
.
com
/
"
)
;
#
ifdef
RELEASE_OR_BETA
pref
(
"
corroborator
.
enabled
"
false
)
;
#
else
pref
(
"
corroborator
.
enabled
"
true
)
;
#
endif
pref
(
"
devtools
.
toolbox
.
footer
.
height
"
250
)
;
pref
(
"
devtools
.
toolbox
.
sidebar
.
width
"
500
)
;
pref
(
"
devtools
.
toolbox
.
host
"
"
bottom
"
)
;
pref
(
"
devtools
.
toolbox
.
previousHost
"
"
right
"
)
;
pref
(
"
devtools
.
toolbox
.
selectedTool
"
"
inspector
"
)
;
pref
(
"
devtools
.
toolbox
.
sideEnabled
"
true
)
;
pref
(
"
devtools
.
toolbox
.
zoomValue
"
"
1
"
)
;
pref
(
"
devtools
.
toolbox
.
splitconsoleEnabled
"
false
)
;
pref
(
"
devtools
.
toolbox
.
splitconsoleHeight
"
100
)
;
pref
(
"
devtools
.
toolbox
.
tabsOrder
"
"
"
)
;
#
if
defined
(
NIGHTLY_BUILD
)
pref
(
"
devtools
.
browsertoolbox
.
fission
"
true
)
;
#
else
pref
(
"
devtools
.
browsertoolbox
.
fission
"
false
)
;
#
endif
pref
(
"
devtools
.
contenttoolbox
.
fission
"
false
)
;
pref
(
"
devtools
.
target
-
switching
.
enabled
"
false
)
;
pref
(
"
devtools
.
command
-
button
-
pick
.
enabled
"
true
)
;
pref
(
"
devtools
.
command
-
button
-
frames
.
enabled
"
true
)
;
pref
(
"
devtools
.
command
-
button
-
splitconsole
.
enabled
"
true
)
;
pref
(
"
devtools
.
command
-
button
-
paintflashing
.
enabled
"
false
)
;
pref
(
"
devtools
.
command
-
button
-
responsive
.
enabled
"
true
)
;
pref
(
"
devtools
.
command
-
button
-
screenshot
.
enabled
"
false
)
;
pref
(
"
devtools
.
command
-
button
-
rulers
.
enabled
"
false
)
;
pref
(
"
devtools
.
command
-
button
-
measure
.
enabled
"
false
)
;
pref
(
"
devtools
.
command
-
button
-
noautohide
.
enabled
"
false
)
;
#
ifndef
MOZILLA_OFFICIAL
pref
(
"
devtools
.
command
-
button
-
fission
-
prefs
.
enabled
"
true
)
;
#
endif
pref
(
"
devtools
.
inspector
.
enabled
"
true
)
;
pref
(
"
devtools
.
inspector
.
activeSidebar
"
"
layoutview
"
)
;
pref
(
"
devtools
.
inspector
.
remote
"
false
)
;
pref
(
"
devtools
.
inspector
.
three
-
pane
-
enabled
"
true
)
;
pref
(
"
devtools
.
inspector
.
chrome
.
three
-
pane
-
enabled
"
false
)
;
pref
(
"
devtools
.
inspector
.
show_pseudo_elements
"
false
)
;
pref
(
"
devtools
.
inspector
.
imagePreviewTooltipSize
"
300
)
;
pref
(
"
devtools
.
inspector
.
showUserAgentStyles
"
false
)
;
pref
(
"
devtools
.
inspector
.
showAllAnonymousContent
"
false
)
;
pref
(
"
devtools
.
inspector
.
showUserAgentShadowRoots
"
false
)
;
pref
(
"
devtools
.
inspector
.
new
-
rulesview
.
enabled
"
false
)
;
pref
(
"
devtools
.
inspector
.
compatibility
.
enabled
"
false
)
;
pref
(
"
devtools
.
inspector
.
use
-
new
-
box
-
model
-
highlighter
"
false
)
;
pref
(
"
devtools
.
inspector
.
color
-
scheme
-
simulation
.
enabled
"
false
)
;
pref
(
"
devtools
.
gridinspector
.
gridOutlineMaxColumns
"
50
)
;
pref
(
"
devtools
.
gridinspector
.
gridOutlineMaxRows
"
50
)
;
pref
(
"
devtools
.
gridinspector
.
showGridAreas
"
false
)
;
pref
(
"
devtools
.
gridinspector
.
showGridLineNumbers
"
false
)
;
pref
(
"
devtools
.
gridinspector
.
showInfiniteLines
"
false
)
;
pref
(
"
devtools
.
gridinspector
.
maxHighlighters
"
3
)
;
pref
(
"
devtools
.
layout
.
boxmodel
.
opened
"
true
)
;
pref
(
"
devtools
.
layout
.
flexbox
.
opened
"
true
)
;
pref
(
"
devtools
.
layout
.
flex
-
container
.
opened
"
true
)
;
pref
(
"
devtools
.
layout
.
flex
-
item
.
opened
"
true
)
;
pref
(
"
devtools
.
layout
.
grid
.
opened
"
true
)
;
#
if
defined
(
NIGHTLY_BUILD
)
pref
(
"
devtools
.
layout
.
boxmodel
.
highlightProperty
"
true
)
;
#
else
pref
(
"
devtools
.
layout
.
boxmodel
.
highlightProperty
"
false
)
;
#
endif
pref
(
"
devtools
.
eyedropper
.
zoom
"
6
)
;
pref
(
"
devtools
.
markup
.
collapseAttributes
"
true
)
;
pref
(
"
devtools
.
markup
.
collapseAttributeLength
"
120
)
;
pref
(
"
devtools
.
markup
.
beautifyOnCopy
"
false
)
;
pref
(
"
devtools
.
markup
.
mutationBreakpoints
.
enabled
"
true
)
;
pref
(
"
devtools
.
defaultColorUnit
"
"
authored
"
)
;
pref
(
"
devtools
.
memory
.
enabled
"
true
)
;
pref
(
"
devtools
.
memory
.
custom
-
census
-
displays
"
"
{
}
"
)
;
pref
(
"
devtools
.
memory
.
custom
-
label
-
displays
"
"
{
}
"
)
;
pref
(
"
devtools
.
memory
.
custom
-
tree
-
map
-
displays
"
"
{
}
"
)
;
pref
(
"
devtools
.
memory
.
max
-
individuals
"
1000
)
;
pref
(
"
devtools
.
memory
.
max
-
retaining
-
paths
"
10
)
;
pref
(
"
devtools
.
performance
.
enabled
"
true
)
;
pref
(
"
devtools
.
performance
.
memory
.
sample
-
probability
"
"
0
.
05
"
)
;
pref
(
"
devtools
.
performance
.
memory
.
max
-
log
-
length
"
125000
)
;
pref
(
"
devtools
.
performance
.
timeline
.
hidden
-
markers
"
"
[
\
"
Composite
\
"
\
"
CompositeForwardTransaction
\
"
]
"
)
;
pref
(
"
devtools
.
performance
.
profiler
.
buffer
-
size
"
10000000
)
;
pref
(
"
devtools
.
performance
.
profiler
.
sample
-
frequency
-
hz
"
1000
)
;
pref
(
"
devtools
.
performance
.
ui
.
invert
-
call
-
tree
"
true
)
;
pref
(
"
devtools
.
performance
.
ui
.
invert
-
flame
-
graph
"
false
)
;
pref
(
"
devtools
.
performance
.
ui
.
flatten
-
tree
-
recursion
"
true
)
;
pref
(
"
devtools
.
performance
.
ui
.
show
-
platform
-
data
"
false
)
;
pref
(
"
devtools
.
performance
.
ui
.
show
-
idle
-
blocks
"
true
)
;
pref
(
"
devtools
.
performance
.
ui
.
enable
-
memory
"
false
)
;
pref
(
"
devtools
.
performance
.
ui
.
enable
-
allocations
"
false
)
;
pref
(
"
devtools
.
performance
.
ui
.
enable
-
framerate
"
true
)
;
pref
(
"
devtools
.
performance
.
ui
.
show
-
jit
-
optimizations
"
false
)
;
pref
(
"
devtools
.
performance
.
ui
.
show
-
triggers
-
for
-
gc
-
types
"
"
TOO_MUCH_MALLOC
ALLOC_TRIGGER
LAST_DITCH
EAGER_ALLOC_TRIGGER
"
)
;
pref
(
"
devtools
.
performance
.
ui
.
enable
-
memory
-
flame
"
false
)
;
#
if
defined
(
NIGHTLY_BUILD
)
pref
(
"
devtools
.
performance
.
ui
.
experimental
"
true
)
;
#
else
pref
(
"
devtools
.
performance
.
ui
.
experimental
"
false
)
;
#
endif
pref
(
"
devtools
.
cache
.
disabled
"
false
)
;
pref
(
"
devtools
.
serviceWorkers
.
testing
.
enabled
"
false
)
;
pref
(
"
devtools
.
netmonitor
.
enabled
"
true
)
;
pref
(
"
devtools
.
netmonitor
.
features
.
search
"
true
)
;
pref
(
"
devtools
.
netmonitor
.
features
.
requestBlocking
"
true
)
;
pref
(
"
devtools
.
application
.
enabled
"
false
)
;
pref
(
"
devtools
.
netmonitor
.
panes
-
network
-
details
-
width
"
550
)
;
pref
(
"
devtools
.
netmonitor
.
panes
-
network
-
details
-
height
"
450
)
;
pref
(
"
devtools
.
netmonitor
.
panes
-
search
-
width
"
550
)
;
pref
(
"
devtools
.
netmonitor
.
panes
-
search
-
height
"
450
)
;
pref
(
"
devtools
.
netmonitor
.
filters
"
"
[
\
"
all
\
"
]
"
)
;
pref
(
"
devtools
.
netmonitor
.
visibleColumns
"
"
[
\
"
status
\
"
\
"
method
\
"
\
"
domain
\
"
\
"
file
\
"
\
"
cause
\
"
\
"
type
\
"
\
"
transferred
\
"
\
"
contentSize
\
"
\
"
waterfall
\
"
]
"
)
;
pref
(
"
devtools
.
netmonitor
.
columnsData
"
'
[
{
"
name
"
:
"
status
"
"
minWidth
"
:
30
"
width
"
:
5
}
{
"
name
"
:
"
method
"
"
minWidth
"
:
30
"
width
"
:
5
}
{
"
name
"
:
"
domain
"
"
minWidth
"
:
30
"
width
"
:
10
}
{
"
name
"
:
"
file
"
"
minWidth
"
:
30
"
width
"
:
25
}
{
"
name
"
:
"
url
"
"
minWidth
"
:
30
"
width
"
:
25
}
{
"
name
"
:
"
cause
"
"
minWidth
"
:
30
"
width
"
:
10
}
{
"
name
"
:
"
type
"
"
minWidth
"
:
30
"
width
"
:
5
}
{
"
name
"
:
"
transferred
"
"
minWidth
"
:
30
"
width
"
:
10
}
{
"
name
"
:
"
contentSize
"
"
minWidth
"
:
30
"
width
"
:
5
}
{
"
name
"
:
"
waterfall
"
"
minWidth
"
:
150
"
width
"
:
25
}
]
'
)
;
pref
(
"
devtools
.
netmonitor
.
ws
.
payload
-
preview
-
height
"
128
)
;
pref
(
"
devtools
.
netmonitor
.
ws
.
visibleColumns
"
'
[
"
data
"
"
time
"
]
'
)
;
pref
(
"
devtools
.
netmonitor
.
ws
.
displayed
-
frames
.
limit
"
500
)
;
pref
(
"
devtools
.
netmonitor
.
response
.
ui
.
limit
"
10240
)
;
pref
(
"
devtools
.
netmonitor
.
saveRequestAndResponseBodies
"
true
)
;
pref
(
"
devtools
.
netmonitor
.
har
.
defaultLogDir
"
"
"
)
;
pref
(
"
devtools
.
netmonitor
.
har
.
defaultFileName
"
"
%
hostname_Archive
[
%
date
]
"
)
;
pref
(
"
devtools
.
netmonitor
.
har
.
jsonp
"
false
)
;
pref
(
"
devtools
.
netmonitor
.
har
.
jsonpCallback
"
"
"
)
;
pref
(
"
devtools
.
netmonitor
.
har
.
includeResponseBodies
"
true
)
;
pref
(
"
devtools
.
netmonitor
.
har
.
compress
"
false
)
;
pref
(
"
devtools
.
netmonitor
.
har
.
forceExport
"
false
)
;
pref
(
"
devtools
.
netmonitor
.
har
.
pageLoadedTimeout
"
1500
)
;
pref
(
"
devtools
.
netmonitor
.
har
.
enableAutoExportToFile
"
false
)
;
pref
(
"
devtools
.
netmonitor
.
features
.
webSockets
"
true
)
;
pref
(
"
devtools
.
storage
.
enabled
"
true
)
;
pref
(
"
devtools
.
styleeditor
.
enabled
"
true
)
;
pref
(
"
devtools
.
styleeditor
.
autocompletion
-
enabled
"
true
)
;
pref
(
"
devtools
.
styleeditor
.
showMediaSidebar
"
true
)
;
pref
(
"
devtools
.
styleeditor
.
mediaSidebarWidth
"
238
)
;
pref
(
"
devtools
.
styleeditor
.
navSidebarWidth
"
245
)
;
pref
(
"
devtools
.
styleeditor
.
transitions
"
true
)
;
pref
(
"
devtools
.
screenshot
.
clipboard
.
enabled
"
false
)
;
pref
(
"
devtools
.
screenshot
.
audio
.
enabled
"
true
)
;
pref
(
"
devtools
.
dom
.
enabled
"
false
)
;
pref
(
"
devtools
.
accessibility
.
enabled
"
true
)
;
pref
(
"
devtools
.
webconsole
.
filter
.
error
"
true
)
;
pref
(
"
devtools
.
webconsole
.
filter
.
warn
"
true
)
;
pref
(
"
devtools
.
webconsole
.
filter
.
info
"
true
)
;
pref
(
"
devtools
.
webconsole
.
filter
.
log
"
true
)
;
pref
(
"
devtools
.
webconsole
.
filter
.
debug
"
true
)
;
pref
(
"
devtools
.
webconsole
.
filter
.
css
"
false
)
;
pref
(
"
devtools
.
webconsole
.
filter
.
net
"
false
)
;
pref
(
"
devtools
.
webconsole
.
filter
.
netxhr
"
false
)
;
pref
(
"
devtools
.
webconsole
.
input
.
autocomplete
"
true
)
;
pref
(
"
devtools
.
webconsole
.
input
.
eagerEvaluation
"
false
)
;
pref
(
"
devtools
.
browserconsole
.
filter
.
error
"
true
)
;
pref
(
"
devtools
.
browserconsole
.
filter
.
warn
"
true
)
;
pref
(
"
devtools
.
browserconsole
.
filter
.
info
"
true
)
;
pref
(
"
devtools
.
browserconsole
.
filter
.
log
"
true
)
;
pref
(
"
devtools
.
browserconsole
.
filter
.
debug
"
true
)
;
pref
(
"
devtools
.
browserconsole
.
filter
.
css
"
false
)
;
pref
(
"
devtools
.
browserconsole
.
filter
.
net
"
false
)
;
pref
(
"
devtools
.
browserconsole
.
filter
.
netxhr
"
false
)
;
pref
(
"
devtools
.
webconsole
.
inputHistoryCount
"
300
)
;
pref
(
"
devtools
.
webconsole
.
persistlog
"
false
)
;
pref
(
"
devtools
.
netmonitor
.
persistlog
"
false
)
;
pref
(
"
devtools
.
webconsole
.
timestampMessages
"
false
)
;
#
if
defined
(
NIGHTLY_BUILD
)
pref
(
"
devtools
.
webconsole
.
sidebarToggle
"
true
)
;
#
else
pref
(
"
devtools
.
webconsole
.
sidebarToggle
"
false
)
;
#
endif
pref
(
"
devtools
.
webconsole
.
input
.
editor
"
false
)
;
pref
(
"
devtools
.
browserconsole
.
input
.
editor
"
false
)
;
pref
(
"
devtools
.
webconsole
.
input
.
editorWidth
"
0
)
;
pref
(
"
devtools
.
browserconsole
.
input
.
editorWidth
"
0
)
;
pref
(
"
devtools
.
webconsole
.
input
.
editorOnboarding
"
true
)
;
pref
(
"
devtools
.
performance
.
new
-
panel
-
enabled
"
false
)
;
pref
(
"
devtools
.
webconsole
.
groupWarningMessages
"
true
)
;
pref
(
"
devtools
.
browserconsole
.
contentMessages
"
false
)
;
pref
(
"
devtools
.
source
-
map
.
client
-
service
.
enabled
"
true
)
;
pref
(
"
devtools
.
hud
.
loglimit
"
10000
)
;
pref
(
"
devtools
.
editor
.
tabsize
"
2
)
;
pref
(
"
devtools
.
editor
.
expandtab
"
true
)
;
pref
(
"
devtools
.
editor
.
keymap
"
"
default
"
)
;
pref
(
"
devtools
.
editor
.
autoclosebrackets
"
true
)
;
pref
(
"
devtools
.
editor
.
detectindentation
"
true
)
;
pref
(
"
devtools
.
editor
.
enableCodeFolding
"
true
)
;
pref
(
"
devtools
.
editor
.
autocomplete
"
true
)
;
pref
(
"
devtools
.
responsive
.
viewport
.
angle
"
0
)
;
pref
(
"
devtools
.
responsive
.
viewport
.
width
"
320
)
;
pref
(
"
devtools
.
responsive
.
viewport
.
height
"
480
)
;
pref
(
"
devtools
.
responsive
.
viewport
.
pixelRatio
"
0
)
;
pref
(
"
devtools
.
responsive
.
leftAlignViewport
.
enabled
"
false
)
;
pref
(
"
devtools
.
responsive
.
reloadConditions
.
touchSimulation
"
false
)
;
pref
(
"
devtools
.
responsive
.
reloadConditions
.
userAgent
"
false
)
;
pref
(
"
devtools
.
responsive
.
reloadNotification
.
enabled
"
true
)
;
pref
(
"
devtools
.
responsive
.
touchSimulation
.
enabled
"
false
)
;
pref
(
"
devtools
.
responsive
.
metaViewport
.
enabled
"
true
)
;
pref
(
"
devtools
.
responsive
.
userAgent
"
"
"
)
;
pref
(
"
devtools
.
responsive
.
browserUI
.
enabled
"
false
)
;
#
if
defined
(
NIGHTLY_BUILD
)
pref
(
"
devtools
.
responsive
.
showUserAgentInput
"
true
)
;
#
else
pref
(
"
devtools
.
responsive
.
showUserAgentInput
"
false
)
;
#
endif
#
ifdef
MOZILLA_OFFICIAL
pref
(
"
devtools
.
aboutdebugging
.
local
-
tab
-
debugging
"
false
)
;
#
else
pref
(
"
devtools
.
aboutdebugging
.
local
-
tab
-
debugging
"
true
)
;
#
endif
pref
(
"
devtools
.
aboutdebugging
.
process
-
debugging
"
true
)
;
pref
(
"
devtools
.
aboutdebugging
.
network
-
locations
"
"
[
]
"
)
;
pref
(
"
devtools
.
aboutdebugging
.
collapsibilities
.
installedExtension
"
false
)
;
pref
(
"
devtools
.
aboutdebugging
.
collapsibilities
.
otherWorker
"
false
)
;
pref
(
"
devtools
.
aboutdebugging
.
collapsibilities
.
serviceWorker
"
false
)
;
pref
(
"
devtools
.
aboutdebugging
.
collapsibilities
.
sharedWorker
"
false
)
;
pref
(
"
devtools
.
aboutdebugging
.
collapsibilities
.
tab
"
false
)
;
pref
(
"
devtools
.
aboutdebugging
.
collapsibilities
.
temporaryExtension
"
false
)
;
#
ifdef
MOZILLA_OFFICIAL
pref
(
"
devtools
.
aboutdebugging
.
showHiddenAddons
"
false
)
;
#
else
pref
(
"
devtools
.
aboutdebugging
.
showHiddenAddons
"
true
)
;
#
endif
pref
(
"
devtools
.
debugger
.
features
.
map
-
await
-
expression
"
true
)
;
pref
(
"
devtools
.
popup
.
disable_autohide
"
false
)
;
pref
(
"
devtools
.
toolbox
.
content
-
frame
"
true
)
;
pref
(
"
devtools
.
whatsnew
.
enabled
"
true
)
;
pref
(
"
devtools
.
whatsnew
.
feature
-
enabled
"
true
)
;
pref
(
"
first
-
startup
.
timeout
"
30000
)
;
