#
ifndef
mozilla_SameBinary_h
#
define
mozilla_SameBinary_h
#
include
"
mozilla
/
LauncherResult
.
h
"
#
include
"
mozilla
/
NativeNt
.
h
"
#
include
"
nsWindowsHelpers
.
h
"
namespace
mozilla
{
static
inline
mozilla
:
:
LauncherResult
<
bool
>
IsSameBinaryAsParentProcess
(
)
{
mozilla
:
:
LauncherResult
<
DWORD
>
parentPid
=
mozilla
:
:
nt
:
:
GetParentProcessId
(
)
;
if
(
parentPid
.
isErr
(
)
)
{
return
LAUNCHER_ERROR_FROM_RESULT
(
parentPid
)
;
}
nsAutoHandle
parentProcess
(
:
:
OpenProcess
(
PROCESS_QUERY_LIMITED_INFORMATION
FALSE
parentPid
.
unwrap
(
)
)
)
;
if
(
!
parentProcess
.
get
(
)
)
{
DWORD
err
=
:
:
GetLastError
(
)
;
if
(
err
=
=
ERROR_INVALID_PARAMETER
)
{
return
false
;
}
return
LAUNCHER_ERROR_FROM_WIN32
(
err
)
;
}
WCHAR
parentExe
[
(
MAX_PATH
*
2
)
+
1
]
=
{
}
;
DWORD
parentExeLen
=
mozilla
:
:
ArrayLength
(
parentExe
)
;
if
(
!
:
:
QueryFullProcessImageNameW
(
parentProcess
.
get
(
)
PROCESS_NAME_NATIVE
parentExe
&
parentExeLen
)
)
{
return
LAUNCHER_ERROR_FROM_LAST
(
)
;
}
WCHAR
ourExe
[
MAX_PATH
+
1
]
=
{
}
;
DWORD
ourExeOk
=
:
:
GetModuleFileNameW
(
nullptr
ourExe
mozilla
:
:
ArrayLength
(
ourExe
)
)
;
if
(
!
ourExeOk
|
|
ourExeOk
=
=
mozilla
:
:
ArrayLength
(
ourExe
)
)
{
return
LAUNCHER_ERROR_FROM_LAST
(
)
;
}
mozilla
:
:
WindowsErrorResult
<
bool
>
isSame
=
mozilla
:
:
DoPathsPointToIdenticalFile
(
parentExe
ourExe
mozilla
:
:
PathType
:
:
eNtPath
)
;
if
(
isSame
.
isErr
(
)
)
{
return
LAUNCHER_ERROR_FROM_MOZ_WINDOWS_ERROR
(
isSame
.
unwrapErr
(
)
)
;
}
return
isSame
.
unwrap
(
)
;
}
}
#
endif
