#
ifndef
mozilla_freestanding_CheckForCaller_h
#
define
mozilla_freestanding_CheckForCaller_h
namespace
mozilla
{
#
if
defined
(
_MSC_VER
)
#
include
<
intrin
.
h
>
#
pragma
intrinsic
(
_ReturnAddress
)
#
define
RETURN_ADDRESS
(
)
_ReturnAddress
(
)
#
elif
defined
(
__GNUC__
)
|
|
defined
(
__clang__
)
#
define
RETURN_ADDRESS
(
)
\
__builtin_extract_return_addr
(
__builtin_return_address
(
0
)
)
#
endif
template
<
int
N
>
bool
CheckForAddress
(
void
*
aReturnAddress
const
wchar_t
(
&
aName
)
[
N
]
)
{
HMODULE
callingModule
;
if
(
!
:
:
GetModuleHandleExW
(
GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS
|
GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT
reinterpret_cast
<
LPCWSTR
>
(
aReturnAddress
)
&
callingModule
)
)
{
return
false
;
}
return
callingModule
&
&
callingModule
=
=
:
:
GetModuleHandleW
(
aName
)
;
}
}
#
endif
