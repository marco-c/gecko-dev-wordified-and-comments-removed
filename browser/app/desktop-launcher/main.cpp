#
include
<
iostream
>
#
include
<
optional
>
#
include
<
rpc
.
h
>
#
include
<
shellapi
.
h
>
#
include
<
string
>
#
include
<
windows
.
h
>
#
include
"
download_firefox
.
h
"
#
include
"
file_sink
.
h
"
#
include
"
find_firefox
.
h
"
#
include
"
tempfile_name
.
h
"
#
define
DOWNLOAD_PAGE
L
"
https
:
/
/
www
.
mozilla
.
org
/
firefox
/
new
/
"
int
wmain
(
)
{
std
:
:
optional
<
std
:
:
wstring
>
firefox_path
=
lookupFirefoxPath
(
)
;
if
(
firefox_path
.
has_value
(
)
)
{
std
:
:
wcout
<
<
L
"
Found
Firefox
at
path
"
<
<
firefox_path
.
value
(
)
<
<
std
:
:
endl
;
HINSTANCE
hinst
=
ShellExecuteW
(
nullptr
nullptr
firefox_path
.
value
(
)
.
c_str
(
)
nullptr
nullptr
SW_SHOWNORMAL
)
;
if
(
(
INT_PTR
)
hinst
>
32
)
{
std
:
:
wcout
<
<
L
"
Firefox
launched
"
<
<
std
:
:
endl
;
return
0
;
}
}
bool
download_completed
=
false
;
std
:
:
optional
<
std
:
:
wstring
>
tempfileName
=
get_tempfile_name
(
)
;
if
(
tempfileName
.
has_value
(
)
)
{
std
:
:
unique_ptr
<
FileSink
>
fileSink
=
std
:
:
make_unique
<
FileSink
>
(
)
;
if
(
fileSink
-
>
open
(
tempfileName
.
value
(
)
)
)
{
ErrCode
rc
=
download_firefox
(
fileSink
.
get
(
)
)
;
if
(
rc
=
=
ErrCode
:
:
OK
)
{
std
:
:
wcout
<
<
L
"
Firefox
installer
successfully
downloaded
"
<
<
std
:
:
endl
;
download_completed
=
true
;
}
}
}
if
(
download_completed
)
{
HINSTANCE
hinst
=
ShellExecuteW
(
nullptr
nullptr
tempfileName
.
value
(
)
.
c_str
(
)
L
"
/
Prompt
"
nullptr
SW_SHOWNORMAL
)
;
if
(
(
INT_PTR
)
hinst
>
32
)
{
std
:
:
wcout
<
<
L
"
Firefox
installer
launched
"
<
<
std
:
:
endl
;
return
0
;
}
}
HINSTANCE
default_browser_hinst
=
ShellExecuteW
(
nullptr
nullptr
DOWNLOAD_PAGE
nullptr
nullptr
SW_SHOWNORMAL
)
;
if
(
(
INT_PTR
)
default_browser_hinst
>
32
)
{
std
:
:
wcout
<
<
L
"
Opened
default
browser
to
the
download
page
"
<
<
std
:
:
endl
;
}
return
0
;
}
