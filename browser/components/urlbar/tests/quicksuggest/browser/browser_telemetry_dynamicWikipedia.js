"
use
strict
"
;
const
{
TELEMETRY_SCALARS
}
=
UrlbarProviderQuickSuggest
;
const
MERINO_SUGGESTION
=
{
block_id
:
1
url
:
"
https
:
/
/
example
.
com
/
dynamic
-
wikipedia
"
title
:
"
Dynamic
Wikipedia
suggestion
"
click_url
:
"
https
:
/
/
example
.
com
/
click
"
impression_url
:
"
https
:
/
/
example
.
com
/
impression
"
advertiser
:
"
dynamic
-
wikipedia
"
provider
:
"
wikipedia
"
iab_category
:
"
5
-
Education
"
}
;
const
suggestion_type
=
"
dynamic
-
wikipedia
"
;
const
match_type
=
"
firefox
-
suggest
"
;
const
index
=
1
;
const
position
=
index
+
1
;
requestLongerTimeout
(
3
)
;
add_setup
(
async
function
(
)
{
await
setUpTelemetryTest
(
{
merinoSuggestions
:
[
MERINO_SUGGESTION
]
}
)
;
}
)
;
add_tasks_with_rust
(
async
function
(
)
{
await
doTelemetryTest
(
{
index
suggestion
:
MERINO_SUGGESTION
impressionOnly
:
{
scalars
:
{
[
TELEMETRY_SCALARS
.
IMPRESSION_DYNAMIC_WIKIPEDIA
]
:
position
}
}
click
:
{
scalars
:
{
[
TELEMETRY_SCALARS
.
IMPRESSION_DYNAMIC_WIKIPEDIA
]
:
position
[
TELEMETRY_SCALARS
.
CLICK_DYNAMIC_WIKIPEDIA
]
:
position
"
urlbar
.
picked
.
dynamic_wikipedia
"
:
index
.
toString
(
)
}
}
commands
:
[
{
command
:
"
dismiss
"
scalars
:
{
[
TELEMETRY_SCALARS
.
IMPRESSION_DYNAMIC_WIKIPEDIA
]
:
position
[
TELEMETRY_SCALARS
.
BLOCK_DYNAMIC_WIKIPEDIA
]
:
position
}
}
]
}
)
;
}
)
;
