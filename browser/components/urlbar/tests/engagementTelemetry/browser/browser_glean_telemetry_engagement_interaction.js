"
use
strict
"
;
if
(
AppConstants
.
platform
=
=
"
macosx
"
)
{
requestLongerTimeout
(
3
)
;
}
add_setup
(
async
function
(
)
{
await
initInteractionTest
(
)
;
}
)
;
add_task
(
async
function
topsites
(
)
{
await
doTopsitesTest
(
{
trigger
:
(
)
=
>
doEnter
(
)
assert
:
(
)
=
>
assertEngagementTelemetry
(
[
{
interaction
:
"
topsites
"
}
]
)
}
)
;
}
)
;
add_task
(
async
function
typed
(
)
{
await
doTypedTest
(
{
trigger
:
(
)
=
>
doEnter
(
)
assert
:
(
)
=
>
assertEngagementTelemetry
(
[
{
interaction
:
"
typed
"
}
]
)
}
)
;
await
doTypedWithResultsPopupTest
(
{
trigger
:
(
)
=
>
doEnter
(
)
assert
:
(
)
=
>
assertEngagementTelemetry
(
[
{
interaction
:
"
typed
"
}
]
)
}
)
;
}
)
;
add_task
(
async
function
dropped
(
)
{
await
doTest
(
async
browser
=
>
{
await
doDropAndGo
(
"
example
.
com
"
)
;
assertEngagementTelemetry
(
[
{
interaction
:
"
dropped
"
}
]
)
;
}
)
;
await
doTest
(
async
browser
=
>
{
await
showResultByArrowDown
(
)
;
await
doDropAndGo
(
"
example
.
com
"
)
;
assertEngagementTelemetry
(
[
{
interaction
:
"
dropped
"
}
]
)
;
}
)
;
}
)
;
add_task
(
async
function
pasted
(
)
{
await
doPastedTest
(
{
trigger
:
(
)
=
>
doEnter
(
)
assert
:
(
)
=
>
assertEngagementTelemetry
(
[
{
interaction
:
"
pasted
"
}
]
)
}
)
;
await
doPastedWithResultsPopupTest
(
{
trigger
:
(
)
=
>
doEnter
(
)
assert
:
(
)
=
>
assertEngagementTelemetry
(
[
{
interaction
:
"
pasted
"
}
]
)
}
)
;
await
doTest
(
async
browser
=
>
{
await
doPasteAndGo
(
"
www
.
example
.
com
"
)
;
assertEngagementTelemetry
(
[
{
interaction
:
"
pasted
"
}
]
)
;
}
)
;
await
doTest
(
async
browser
=
>
{
await
showResultByArrowDown
(
)
;
await
doPasteAndGo
(
"
www
.
example
.
com
"
)
;
assertEngagementTelemetry
(
[
{
interaction
:
"
pasted
"
}
]
)
;
}
)
;
}
)
;
add_task
(
async
function
topsite_search
(
)
{
}
)
;
add_task
(
async
function
returned_restarted_refined
(
)
{
await
doReturnedRestartedRefinedTest
(
{
trigger
:
(
)
=
>
doEnter
(
)
assert
:
expected
=
>
assertEngagementTelemetry
(
[
{
interaction
:
expected
}
]
)
}
)
;
}
)
;
