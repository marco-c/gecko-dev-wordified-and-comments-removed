"
use
strict
"
;
add_task
(
async
function
dedupe_prefix
(
)
{
await
PlacesTestUtils
.
addVisits
(
[
{
uri
:
"
http
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
{
uri
:
"
http
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
{
uri
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
{
uri
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
]
)
;
let
context
=
createContext
(
"
example
.
com
/
foo
/
"
{
isPrivate
:
false
}
)
;
await
check_results
(
{
context
autofilled
:
"
example
.
com
/
foo
/
"
completed
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
matches
:
[
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
heuristic
:
true
}
)
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
)
]
}
)
;
for
(
let
i
=
0
;
i
<
3
;
i
+
+
)
{
await
PlacesTestUtils
.
addVisits
(
[
{
uri
:
"
http
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
]
)
;
}
context
=
createContext
(
"
example
.
com
/
foo
/
"
{
isPrivate
:
false
}
)
;
await
check_results
(
{
context
autofilled
:
"
example
.
com
/
foo
/
"
completed
:
"
http
:
/
/
www
.
example
.
com
/
foo
/
"
matches
:
[
makeVisitResult
(
context
{
uri
:
"
http
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
www
.
example
.
com
/
foo
/
"
heuristic
:
true
}
)
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
)
]
}
)
;
for
(
let
i
=
0
;
i
<
5
;
i
+
+
)
{
await
PlacesTestUtils
.
addVisits
(
[
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
]
)
;
}
context
=
createContext
(
"
example
.
com
/
foo
/
"
{
isPrivate
:
false
}
)
;
await
check_results
(
{
context
autofilled
:
"
example
.
com
/
foo
/
"
completed
:
"
https
:
/
/
example
.
com
/
foo
/
"
matches
:
[
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
https
:
/
/
example
.
com
/
foo
/
"
heuristic
:
true
}
)
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
)
]
}
)
;
await
cleanupPlaces
(
)
;
}
)
;
add_task
(
async
function
hideHeuristic
(
)
{
UrlbarPrefs
.
set
(
"
experimental
.
hideHeuristic
"
true
)
;
await
PlacesTestUtils
.
addVisits
(
[
{
uri
:
"
http
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
{
uri
:
"
http
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
{
uri
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
{
uri
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
]
)
;
let
context
=
createContext
(
"
example
.
com
/
foo
/
"
{
isPrivate
:
false
}
)
;
await
check_results
(
{
context
autofilled
:
"
example
.
com
/
foo
/
"
completed
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
matches
:
[
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
https
:
/
/
www
.
example
.
com
/
foo
/
"
heuristic
:
true
}
)
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
)
]
}
)
;
for
(
let
i
=
0
;
i
<
3
;
i
+
+
)
{
await
PlacesTestUtils
.
addVisits
(
[
{
uri
:
"
http
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
]
)
;
}
context
=
createContext
(
"
example
.
com
/
foo
/
"
{
isPrivate
:
false
}
)
;
await
check_results
(
{
context
autofilled
:
"
example
.
com
/
foo
/
"
completed
:
"
http
:
/
/
www
.
example
.
com
/
foo
/
"
matches
:
[
makeVisitResult
(
context
{
uri
:
"
http
:
/
/
www
.
example
.
com
/
foo
/
"
title
:
"
www
.
example
.
com
/
foo
/
"
heuristic
:
true
}
)
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
)
]
}
)
;
for
(
let
i
=
0
;
i
<
5
;
i
+
+
)
{
await
PlacesTestUtils
.
addVisits
(
[
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
]
)
;
}
context
=
createContext
(
"
example
.
com
/
foo
/
"
{
isPrivate
:
false
}
)
;
await
check_results
(
{
context
autofilled
:
"
example
.
com
/
foo
/
"
completed
:
"
https
:
/
/
example
.
com
/
foo
/
"
matches
:
[
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
https
:
/
/
example
.
com
/
foo
/
"
heuristic
:
true
}
)
makeVisitResult
(
context
{
uri
:
"
https
:
/
/
example
.
com
/
foo
/
"
title
:
"
Example
Page
"
}
)
]
}
)
;
await
cleanupPlaces
(
)
;
UrlbarPrefs
.
clear
(
"
experimental
.
hideHeuristic
"
)
;
}
)
;
