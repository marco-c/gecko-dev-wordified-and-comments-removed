testEngine_setup
(
)
;
add_task
(
async
function
test_prefix_space_noautofill
(
)
{
await
PlacesTestUtils
.
addVisits
(
{
uri
:
Services
.
io
.
newURI
(
"
http
:
/
/
moz
.
org
/
test
/
"
)
}
)
;
info
(
"
Should
not
try
to
autoFill
if
search
string
contains
a
space
"
)
;
let
context
=
createContext
(
"
mo
"
{
isPrivate
:
false
}
)
;
await
check_results
(
{
context
matches
:
[
makeSearchResult
(
context
{
engineName
:
SUGGESTIONS_ENGINE_NAME
query
:
"
mo
"
heuristic
:
true
}
)
makeVisitResult
(
context
{
uri
:
"
http
:
/
/
moz
.
org
/
test
/
"
title
:
"
test
visit
for
http
:
/
/
moz
.
org
/
test
/
"
}
)
]
}
)
;
await
cleanupPlaces
(
)
;
}
)
;
add_task
(
async
function
test_trailing_space_noautofill
(
)
{
await
PlacesTestUtils
.
addVisits
(
{
uri
:
Services
.
io
.
newURI
(
"
http
:
/
/
moz
.
org
/
test
/
"
)
}
)
;
info
(
"
Should
not
try
to
autoFill
if
search
string
contains
a
space
"
)
;
let
context
=
createContext
(
"
mo
"
{
isPrivate
:
false
}
)
;
await
check_results
(
{
context
matches
:
[
makeSearchResult
(
context
{
engineName
:
SUGGESTIONS_ENGINE_NAME
query
:
"
mo
"
heuristic
:
true
}
)
makeVisitResult
(
context
{
uri
:
"
http
:
/
/
moz
.
org
/
test
/
"
title
:
"
test
visit
for
http
:
/
/
moz
.
org
/
test
/
"
}
)
]
}
)
;
await
cleanupPlaces
(
)
;
}
)
;
