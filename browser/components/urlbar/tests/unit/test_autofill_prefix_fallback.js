add_task
(
async
function
(
)
{
registerCleanupFunction
(
async
(
)
=
>
{
Services
.
prefs
.
clearUserPref
(
"
browser
.
urlbar
.
suggest
.
searches
"
)
;
Services
.
prefs
.
clearUserPref
(
"
browser
.
urlbar
.
suggest
.
quickactions
"
)
;
}
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
urlbar
.
suggest
.
searches
"
false
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
urlbar
.
suggest
.
quickactions
"
false
)
;
let
host
=
"
example
.
com
"
;
let
prefixes
=
[
"
https
:
/
/
"
"
https
:
/
/
www
.
"
"
http
:
/
/
"
"
http
:
/
/
www
.
"
]
;
for
(
let
prefix
of
prefixes
)
{
await
PlacesUtils
.
bookmarks
.
insert
(
{
url
:
{
prefix
}
{
host
}
parentGuid
:
PlacesUtils
.
bookmarks
.
unfiledGuid
}
)
;
}
await
checkOriginsOrder
(
host
prefixes
)
;
let
context
=
createContext
(
"
ex
"
{
isPrivate
:
false
}
)
;
await
check_results
(
{
context
autofilled
:
{
host
}
/
completed
:
https
:
/
/
www
.
{
host
}
/
hasAutofillTitle
:
false
matches
:
[
makeVisitResult
(
context
{
uri
:
https
:
/
/
www
.
{
host
}
/
title
:
https
:
/
/
www
.
{
host
}
heuristic
:
true
}
)
makeBookmarkResult
(
context
{
uri
:
https
:
/
/
{
host
}
/
title
:
{
host
}
}
)
]
}
)
;
await
PlacesUtils
.
bookmarks
.
eraseEverything
(
)
;
await
PlacesUtils
.
history
.
clear
(
)
;
prefixes
=
[
"
https
:
/
/
www
.
"
"
http
:
/
/
"
"
https
:
/
/
"
"
http
:
/
/
www
.
"
]
;
for
(
let
prefix
of
prefixes
)
{
await
PlacesUtils
.
bookmarks
.
insert
(
{
url
:
{
prefix
}
{
host
}
parentGuid
:
PlacesUtils
.
bookmarks
.
unfiledGuid
}
)
;
}
await
checkOriginsOrder
(
host
prefixes
)
;
await
check_results
(
{
context
autofilled
:
{
host
}
/
completed
:
https
:
/
/
{
host
}
/
hasAutofillTitle
:
false
matches
:
[
makeVisitResult
(
context
{
uri
:
https
:
/
/
{
host
}
/
title
:
https
:
/
/
{
host
}
heuristic
:
true
}
)
makeBookmarkResult
(
context
{
uri
:
https
:
/
/
www
.
{
host
}
/
title
:
www
.
{
host
}
}
)
]
}
)
;
}
)
;
