"
use
strict
"
;
let
params
=
{
queryString
:
"
&
unsupported
=
1
"
}
;
let
preSteps
=
[
{
panelId
:
"
checkingForUpdates
"
checkActiveUpdate
:
null
continueFile
:
CONTINUE_CHECK
}
{
panelId
:
"
unsupportedSystem
"
checkActiveUpdate
:
null
continueFile
:
null
}
]
;
add_task
(
async
function
test
(
)
{
await
initUpdate
(
params
)
;
UrlbarProviderInterventions
.
checkForBrowserUpdate
(
true
)
;
await
processUpdateSteps
(
preSteps
)
;
let
downloadTab
=
await
doUpdateTest
(
{
searchString
:
SEARCH_STRINGS
.
UPDATE
tip
:
UrlbarProviderInterventions
.
TIP_TYPE
.
UPDATE_WEB
title
:
/
^
Get
the
latest
.
+
browser
\
.
/
button
:
"
Download
Now
"
awaitCallback
(
)
{
return
BrowserTestUtils
.
waitForNewTab
(
gBrowser
"
https
:
/
/
www
.
mozilla
.
org
/
firefox
/
new
/
"
)
;
}
}
)
;
Assert
.
equal
(
gBrowser
.
selectedTab
downloadTab
)
;
BrowserTestUtils
.
removeTab
(
downloadTab
)
;
}
)
;
