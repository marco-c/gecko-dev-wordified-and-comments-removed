"
use
strict
"
;
add_task
(
async
function
test
(
)
{
await
PlacesTestUtils
.
addVisits
(
"
http
:
/
/
example
.
com
/
"
)
;
registerCleanupFunction
(
async
function
(
)
{
await
PlacesUtils
.
history
.
clear
(
)
;
}
)
;
await
UrlbarTestUtils
.
promiseAutocompleteResultPopup
(
{
window
waitForFocus
:
SimpleTest
.
waitForFocus
value
:
"
"
fireInputEvent
:
true
}
)
;
Assert
.
equal
(
UrlbarTestUtils
.
getSelectedRowIndex
(
window
)
-
1
"
Nothing
selected
"
)
;
let
resultCount
=
UrlbarTestUtils
.
getResultCount
(
window
)
;
Assert
.
greater
(
resultCount
0
"
At
least
one
result
"
)
;
for
(
let
i
=
0
;
i
<
resultCount
;
i
+
+
)
{
EventUtils
.
synthesizeKey
(
"
KEY_ArrowDown
"
)
;
}
Assert
.
equal
(
UrlbarTestUtils
.
getSelectedRowIndex
(
window
)
resultCount
-
1
"
Last
result
selected
"
)
;
Assert
.
notEqual
(
gURLBar
.
value
"
"
"
Input
should
not
be
empty
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowDown
"
)
;
Assert
.
equal
(
UrlbarTestUtils
.
getSelectedRowIndex
(
window
)
-
1
"
Nothing
selected
"
)
;
Assert
.
equal
(
gURLBar
.
value
"
"
"
Input
should
be
empty
"
)
;
}
)
;
