const
SEARCH_STRING
=
"
chocolate
cake
"
;
add_setup
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
urlbar
.
showSearchTerms
.
featureGate
"
true
]
]
}
)
;
await
SearchTestUtils
.
installSearchExtension
(
{
name
:
"
MozSearch
"
search_url
:
"
https
:
/
/
www
.
example
.
com
/
"
search_url_get_params
:
"
q
=
{
searchTerms
}
&
pc
=
fake_code
"
}
{
setAsDefault
:
true
}
)
;
registerCleanupFunction
(
async
function
(
)
{
await
PlacesUtils
.
history
.
clear
(
)
;
}
)
;
}
)
;
add_task
(
async
function
ctrl_open
(
)
{
let
[
expectedSearchUrl
]
=
UrlbarUtils
.
getSearchQueryUrl
(
Services
.
search
.
defaultEngine
SEARCH_STRING
)
;
let
newTabPromise
=
BrowserTestUtils
.
waitForNewTab
(
gBrowser
expectedSearchUrl
)
;
await
UrlbarTestUtils
.
promiseAutocompleteResultPopup
(
{
window
value
:
SEARCH_STRING
fireInputEvent
:
true
}
)
;
gURLBar
.
focus
(
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Enter
"
{
altKey
:
true
shiftKey
:
true
}
)
;
let
backgroundTab
=
await
newTabPromise
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
backgroundTab
)
;
assertSearchStringIsInUrlbar
(
SEARCH_STRING
)
;
BrowserTestUtils
.
removeTab
(
backgroundTab
)
;
}
)
;
