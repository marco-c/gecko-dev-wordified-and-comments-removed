"
use
strict
"
;
const
mockRemoteClients
=
[
{
id
:
"
0
"
name
:
"
foo
"
type
:
"
mobile
"
}
{
id
:
"
1
"
name
:
"
bar
"
type
:
"
desktop
"
}
{
id
:
"
2
"
name
:
"
baz
"
type
:
"
mobile
"
}
]
;
add_task
(
async
function
copyURL
(
)
{
let
url
=
"
http
:
/
/
example
.
com
/
"
;
await
BrowserTestUtils
.
withNewTab
(
url
async
(
)
=
>
{
await
promisePageActionPanelOpen
(
)
;
let
copyURLButton
=
document
.
getElementById
(
"
pageAction
-
panel
-
copyURL
"
)
;
let
hiddenPromise
=
promisePageActionPanelHidden
(
)
;
EventUtils
.
synthesizeMouseAtCenter
(
copyURLButton
{
}
)
;
await
hiddenPromise
;
let
transferable
=
Cc
[
"
mozilla
.
org
/
widget
/
transferable
;
1
"
]
.
createInstance
(
Ci
.
nsITransferable
)
;
transferable
.
init
(
null
)
;
let
flavor
=
"
text
/
unicode
"
;
transferable
.
addDataFlavor
(
flavor
)
;
Services
.
clipboard
.
getData
(
transferable
Services
.
clipboard
.
kGlobalClipboard
)
;
let
strObj
=
{
}
;
transferable
.
getTransferData
(
flavor
strObj
)
;
Assert
.
ok
(
!
!
strObj
.
value
)
;
strObj
.
value
.
QueryInterface
(
Ci
.
nsISupportsString
)
;
Assert
.
equal
(
strObj
.
value
.
data
gBrowser
.
selectedBrowser
.
currentURI
.
spec
)
;
}
)
;
}
)
;
