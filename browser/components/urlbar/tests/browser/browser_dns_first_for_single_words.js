add_task
(
async
function
test
(
)
{
const
{
sinon
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
Sinon
.
sys
.
mjs
"
)
;
const
sandbox
=
sinon
.
createSandbox
(
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
fixup
.
dns_first_for_single_words
"
true
]
]
}
)
;
registerCleanupFunction
(
sandbox
.
restore
)
;
async
function
testVal
(
str
passthrough
)
{
sandbox
.
stub
(
gURLBar
"
_loadURL
"
)
.
callsFake
(
url
=
>
{
if
(
passthrough
)
{
Assert
.
equal
(
url
str
"
Should
pass
the
unmodified
search
string
"
)
;
}
else
{
Assert
.
ok
(
url
.
startsWith
(
"
http
"
)
"
Should
pass
an
url
"
)
;
}
}
)
;
await
UrlbarTestUtils
.
promiseAutocompleteResultPopup
(
{
window
value
:
str
}
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Enter
"
)
;
sandbox
.
restore
(
)
;
}
await
testVal
(
"
test
"
true
)
;
await
testVal
(
"
te
-
st
"
true
)
;
await
testVal
(
"
test
"
true
)
;
await
testVal
(
"
test
"
true
)
;
await
testVal
(
"
test
"
true
)
;
await
testVal
(
"
test
.
test
"
true
)
;
await
testVal
(
"
test
test
"
false
)
;
await
testVal
(
"
test
/
test
"
false
)
;
}
)
;
