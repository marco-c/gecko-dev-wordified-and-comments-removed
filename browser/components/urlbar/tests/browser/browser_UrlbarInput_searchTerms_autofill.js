"
use
strict
"
;
add_setup
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
urlbar
.
showSearchTerms
.
featureGate
"
true
]
]
}
)
;
let
cleanup
=
await
installPersistTestEngines
(
)
;
await
PlacesTestUtils
.
addBookmarkWithDetails
(
{
uri
:
"
https
:
/
/
somedomain
.
example
/
abc
"
title
:
"
somedomain
"
}
)
;
registerCleanupFunction
(
async
function
(
)
{
await
PlacesUtils
.
bookmarks
.
eraseEverything
(
)
;
await
PlacesUtils
.
history
.
clear
(
)
;
cleanup
(
)
;
}
)
;
}
)
;
add_task
(
async
function
persist_search_and_focus_twice
(
)
{
let
{
tab
}
=
await
searchWithTab
(
"
some
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
window
.
gURLBar
.
inputField
{
}
window
)
;
let
details
=
await
UrlbarTestUtils
.
getDetailsOfResultAt
(
window
0
)
;
Assert
.
ok
(
!
details
.
autofill
"
Not
autofilling
.
"
)
;
gURLBar
.
blur
(
)
;
EventUtils
.
synthesizeMouseAtCenter
(
window
.
gURLBar
.
inputField
{
}
window
)
;
details
=
await
UrlbarTestUtils
.
getDetailsOfResultAt
(
window
0
)
;
Assert
.
ok
(
!
details
.
autofill
"
Not
autofilling
.
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
add_task
(
async
function
persist_search_focus_and_modify
(
)
{
let
{
tab
}
=
await
searchWithTab
(
"
some
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
window
.
gURLBar
.
inputField
{
}
window
)
;
EventUtils
.
synthesizeKey
(
"
KEY_ArrowRight
"
)
;
EventUtils
.
synthesizeKey
(
"
d
"
)
;
let
details
=
await
UrlbarTestUtils
.
getDetailsOfResultAt
(
window
0
)
;
Assert
.
ok
(
details
.
autofill
"
Is
autofilling
.
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
