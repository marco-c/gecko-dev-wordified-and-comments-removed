"
use
strict
"
;
add_task
(
async
function
searchBookmarksFromBooksmarksMenu
(
)
{
CustomizableUI
.
addWidgetToArea
(
"
bookmarks
-
menu
-
button
"
CustomizableUI
.
AREA_NAVBAR
0
)
;
let
bookmarksMenuButton
=
document
.
getElementById
(
"
bookmarks
-
menu
-
button
"
)
;
ok
(
bookmarksMenuButton
"
Bookmarks
Menu
Button
added
"
)
;
let
bookmarksMenuPopup
=
document
.
getElementById
(
"
BMB_bookmarksPopup
"
)
;
let
PopupShownPromise
=
BrowserTestUtils
.
waitForEvent
(
bookmarksMenuPopup
"
popupshown
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
bookmarksMenuButton
{
type
:
"
mousedown
"
}
)
;
await
PopupShownPromise
;
ok
(
true
"
Bookmarks
Menu
Popup
shown
"
)
;
let
searchBookmarksButton
=
document
.
getElementById
(
"
BMB_searchBookmarks
"
)
;
ok
(
BrowserTestUtils
.
isVisible
(
searchBookmarksButton
"
'
Search
Bookmarks
Button
'
is
visible
.
"
)
)
;
EventUtils
.
synthesizeMouseAtCenter
(
searchBookmarksButton
{
}
)
;
await
new
Promise
(
resolve
=
>
{
window
.
gURLBar
.
controller
.
addQueryListener
(
{
onViewOpen
(
)
{
window
.
gURLBar
.
controller
.
removeQueryListener
(
this
)
;
resolve
(
)
;
}
}
)
;
}
)
;
is
(
gURLBar
.
searchMode
?
.
source
UrlbarUtils
.
RESULT_SOURCE
.
BOOKMARKS
"
Addressbar
in
correct
mode
.
"
)
;
resetCUIAndReinitUrlbarInput
(
)
;
}
)
;
