"
use
strict
"
;
const
TEST_URL
=
{
TEST_BASE_URL
}
file_blank_but_not_blank
.
html
;
add_task
(
async
function
(
)
{
for
(
let
page
of
gInitialPages
)
{
if
(
page
=
=
"
about
:
newtab
"
)
{
continue
;
}
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
page
)
;
ok
(
!
gURLBar
.
value
"
The
URL
bar
should
be
empty
if
we
load
a
plain
"
+
page
+
"
page
.
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
}
)
;
add_task
(
async
function
(
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
TEST_URL
)
;
is
(
gURLBar
.
value
UrlbarTestUtils
.
trimURL
(
TEST_URL
)
"
The
URL
bar
should
match
the
URI
"
)
;
let
browserLoaded
=
BrowserTestUtils
.
browserLoaded
(
tab
.
linkedBrowser
)
;
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
]
function
(
)
{
content
.
document
.
querySelector
(
"
a
"
)
.
click
(
)
;
}
)
;
await
browserLoaded
;
is
(
gURLBar
.
value
UrlbarTestUtils
.
trimURL
(
TEST_URL
)
"
The
URL
bar
should
be
the
previous
active
document
'
s
URI
.
"
)
;
await
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
]
async
function
(
)
{
content
.
location
.
reload
(
)
;
}
)
.
catch
(
e
=
>
{
}
)
;
is
(
gURLBar
.
value
UrlbarTestUtils
.
trimURL
(
TEST_URL
)
"
The
URL
bar
should
still
be
the
previous
active
document
'
s
URI
.
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
