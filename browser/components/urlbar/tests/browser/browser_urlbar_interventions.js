"
use
strict
"
;
const
TIPS
=
{
NONE
:
"
"
CLEAR
:
"
clear
"
REFRESH
:
"
refresh
"
UPDATE_RESTART
:
"
update_restart
"
UPDATE_ASK
:
"
update_ask
"
UPDATE_REFRESH
:
"
update_refresh
"
UPDATE_WEB
:
"
update_web
"
}
;
const
SEARCH_STRINGS
=
{
CLEAR
:
"
firefox
history
"
REFRESH
:
"
firefox
slow
"
UPDATE
:
"
firefox
update
"
}
;
const
REQ_LOC_CHANGE_EVENT
=
"
intl
:
requested
-
locales
-
changed
"
;
add_task
(
async
function
init
(
)
{
makeProfileResettable
(
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
urlbar
.
update1
.
interventions
"
true
]
]
}
)
;
}
)
;
add_task
(
async
function
refresh
(
)
{
await
checkIntervention
(
{
searchString
:
SEARCH_STRINGS
.
REFRESH
tip
:
TIPS
.
REFRESH
title
:
"
Restore
default
settings
and
remove
old
add
-
ons
for
optimal
performance
.
"
button
:
"
Refresh
Nightly
"
awaitCallback
(
)
{
return
promiseAlertDialog
(
"
cancel
"
[
"
chrome
:
/
/
global
/
content
/
resetProfile
.
xhtml
"
"
chrome
:
/
/
global
/
content
/
resetProfile
.
xul
"
]
)
;
}
}
)
;
}
)
;
add_task
(
async
function
clear
(
)
{
await
checkIntervention
(
{
searchString
:
SEARCH_STRINGS
.
CLEAR
tip
:
TIPS
.
CLEAR
title
:
"
Clear
your
cache
cookies
history
and
more
.
"
button
:
"
Choose
What
to
Clear
"
awaitCallback
(
)
{
return
promiseAlertDialog
(
"
cancel
"
[
"
chrome
:
/
/
browser
/
content
/
sanitize
.
xhtml
"
"
chrome
:
/
/
browser
/
content
/
sanitize
.
xul
"
]
)
;
}
}
)
;
}
)
;
add_task
(
async
function
clear_private
(
)
{
let
win
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
{
private
:
true
}
)
;
let
result
=
(
await
awaitTip
(
SEARCH_STRINGS
.
REFRESH
win
)
)
[
0
]
;
Assert
.
strictEqual
(
result
.
payload
.
type
TIPS
.
REFRESH
)
;
await
UrlbarTestUtils
.
promisePopupClose
(
win
(
)
=
>
win
.
gURLBar
.
blur
(
)
)
;
await
awaitNoTip
(
SEARCH_STRINGS
.
CLEAR
win
)
;
await
UrlbarTestUtils
.
promisePopupClose
(
win
(
)
=
>
win
.
gURLBar
.
blur
(
)
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
}
)
;
add_task
(
async
function
tipsAreEnglishOnly
(
)
{
let
result
=
(
await
awaitTip
(
SEARCH_STRINGS
.
REFRESH
window
)
)
[
0
]
;
Assert
.
strictEqual
(
result
.
payload
.
type
TIPS
.
REFRESH
)
;
await
UrlbarTestUtils
.
promisePopupClose
(
window
(
)
=
>
window
.
gURLBar
.
blur
(
)
)
;
let
searchReinit
=
SearchTestUtils
.
promiseSearchNotification
(
"
reinit
-
complete
"
)
;
const
originalAvailable
=
Services
.
locale
.
availableLocales
;
const
originalRequested
=
Services
.
locale
.
requestedLocales
;
Services
.
locale
.
availableLocales
=
[
"
en
-
US
"
"
de
"
]
;
Services
.
locale
.
requestedLocales
=
[
"
de
"
]
;
registerCleanupFunction
(
async
(
)
=
>
{
let
searchReinit2
=
SearchTestUtils
.
promiseSearchNotification
(
"
reinit
-
complete
"
)
;
Services
.
locale
.
requestedLocales
=
originalRequested
;
Services
.
locale
.
availableLocales
=
originalAvailable
;
await
searchReinit2
;
}
)
;
let
appLocales
=
Services
.
locale
.
appLocalesAsBCP47
;
Assert
.
equal
(
appLocales
[
0
]
"
de
"
)
;
await
searchReinit
;
await
awaitNoTip
(
SEARCH_STRINGS
.
CLEAR
window
)
;
await
UrlbarTestUtils
.
promisePopupClose
(
window
(
)
=
>
window
.
gURLBar
.
blur
(
)
)
;
}
)
;
