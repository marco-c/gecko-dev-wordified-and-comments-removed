"
use
strict
"
;
const
TEST_DATA
=
[
{
input
:
"
this
is
a
\
ntest
"
expected
:
"
this
is
a
test
"
}
{
input
:
"
https
:
\
n
/
/
\
nexample
.
\
ncom
"
expected
:
"
https
:
/
/
example
.
com
"
}
{
input
:
"
http
:
\
n
/
/
\
nexample
.
\
ncom
"
expected
:
"
example
.
com
"
}
{
input
:
"
javasc
\
nript
:
\
nalert
(
1
)
"
expected
:
"
alert
(
1
)
"
}
{
input
:
"
javascript
:
alert
(
1
)
"
expected
:
"
alert
(
1
)
"
}
{
input
:
"
Mozilla
Firefox
"
expected
:
"
Mozilla
Firefox
"
}
{
input
:
"
test
"
expected
:
"
test
"
}
]
;
add_task
(
async
function
test_paste_then_switch_tab
(
)
{
for
(
const
testData
of
TEST_DATA
)
{
gURLBar
.
focus
(
)
;
gURLBar
.
select
(
)
;
await
paste
(
testData
.
input
)
;
const
originalTab
=
gBrowser
.
selectedTab
;
const
newTab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
!
gURLBar
.
value
)
;
gBrowser
.
selectedTab
=
originalTab
;
Assert
.
equal
(
gURLBar
.
value
testData
.
expected
"
Value
on
urlbar
is
correct
"
)
;
BrowserTestUtils
.
removeTab
(
newTab
)
;
}
}
)
;
async
function
paste
(
input
)
{
await
SimpleTest
.
promiseClipboardChange
(
input
(
)
=
>
{
clipboardHelper
.
copyString
(
input
)
;
}
)
;
document
.
commandDispatcher
.
getControllerForCommand
(
"
cmd_paste
"
)
.
doCommand
(
"
cmd_paste
"
)
;
}
