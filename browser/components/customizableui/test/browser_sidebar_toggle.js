"
use
strict
"
;
registerCleanupFunction
(
async
function
(
)
{
await
resetCustomization
(
)
;
if
(
!
document
.
getElementById
(
"
sidebar
-
box
"
)
.
hidden
)
{
SidebarUI
.
hide
(
)
;
}
}
)
;
var
showSidebar
=
async
function
(
)
{
let
button
=
document
.
getElementById
(
"
sidebar
-
button
"
)
;
let
sidebarFocusedPromise
=
BrowserTestUtils
.
waitForEvent
(
document
"
SidebarFocused
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
button
{
}
)
;
await
sidebarFocusedPromise
;
ok
(
SidebarUI
.
isOpen
"
Sidebar
is
opened
"
)
;
ok
(
button
.
hasAttribute
(
"
checked
"
)
"
Toolbar
button
is
checked
"
)
;
}
;
var
hideSidebar
=
async
function
(
)
{
let
button
=
document
.
getElementById
(
"
sidebar
-
button
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
button
{
}
)
;
ok
(
!
SidebarUI
.
isOpen
"
Sidebar
is
closed
"
)
;
ok
(
!
button
.
hasAttribute
(
"
checked
"
)
"
Toolbar
button
isn
'
t
checked
"
)
;
}
;
add_task
(
async
function
(
)
{
CustomizableUI
.
addWidgetToArea
(
"
sidebar
-
button
"
"
nav
-
bar
"
)
;
await
showSidebar
(
)
;
is
(
SidebarUI
.
currentID
"
viewBookmarksSidebar
"
"
Default
sidebar
selected
"
)
;
await
SidebarUI
.
show
(
"
viewHistorySidebar
"
)
;
await
hideSidebar
(
)
;
await
showSidebar
(
)
;
is
(
SidebarUI
.
currentID
"
viewHistorySidebar
"
"
Selected
sidebar
remembered
"
)
;
}
)
;
