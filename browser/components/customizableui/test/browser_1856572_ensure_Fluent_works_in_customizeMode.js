"
use
strict
"
;
const
{
openFirefoxViewTab
withFirefoxView
init
:
FirefoxViewTestUtilsInit
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
testing
-
common
/
FirefoxViewTestUtils
.
sys
.
mjs
"
)
;
add_setup
(
async
function
(
)
{
FirefoxViewTestUtilsInit
(
this
window
)
;
}
)
;
add_task
(
async
function
test_data_l10n_customize_mode
(
)
{
await
withFirefoxView
(
{
win
:
window
}
async
function
(
browser
)
{
await
new
Promise
(
r
=
>
requestAnimationFrame
(
(
)
=
>
requestAnimationFrame
(
r
)
)
)
;
await
startCustomizing
(
)
;
await
endCustomizing
(
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
gBrowser
.
tabs
[
0
]
)
;
await
openFirefoxViewTab
(
window
)
;
const
{
document
}
=
browser
.
contentWindow
;
let
header
=
document
.
querySelector
(
"
h1
"
)
;
document
.
l10n
.
setAttributes
(
header
"
firefoxview
-
overview
-
header
"
)
;
let
previousText
=
await
document
.
l10n
.
formatValue
(
"
firefoxview
-
page
-
title
"
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
{
return
header
.
textContent
!
=
previousText
;
}
)
;
Assert
.
equal
(
header
.
getAttribute
(
"
data
-
l10n
-
id
"
)
"
firefoxview
-
overview
-
header
"
"
data
-
l10n
-
id
should
be
updated
"
)
;
Assert
.
notEqual
(
previousText
header
.
textContent
"
The
header
'
s
text
content
should
be
updated
"
)
;
let
translatedText
=
await
window
.
content
.
document
.
l10n
.
formatValue
(
"
firefoxview
-
overview
-
header
"
)
;
Assert
.
equal
(
translatedText
header
.
textContent
"
The
changed
text
should
be
the
translated
value
of
'
firefoxview
-
overview
-
header
"
)
;
}
)
;
}
)
;
