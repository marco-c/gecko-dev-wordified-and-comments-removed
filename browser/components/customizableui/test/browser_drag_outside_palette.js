"
use
strict
"
;
add_task
(
async
function
(
)
{
await
startCustomizing
(
)
;
let
panelContainer
=
document
.
getElementById
(
"
customization
-
panel
-
container
"
)
;
let
stopReloadButton
=
document
.
getElementById
(
"
stop
-
reload
-
button
"
)
;
let
oldNavbarPlacements
=
CustomizableUI
.
getWidgetIdsInArea
(
"
nav
-
bar
"
)
;
simulateItemDrag
(
stopReloadButton
panelContainer
)
;
assertAreaPlacements
(
CustomizableUI
.
AREA_NAVBAR
oldNavbarPlacements
.
filter
(
w
=
>
w
!
=
"
stop
-
reload
-
button
"
)
)
;
ok
(
stopReloadButton
.
closest
(
"
#
customization
-
palette
"
)
"
Button
should
be
in
the
palette
"
)
;
let
panelHolder
=
document
.
getElementById
(
"
customization
-
panelHolder
"
)
;
simulateItemDrag
(
stopReloadButton
panelHolder
)
;
assertAreaPlacements
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
[
"
stop
-
reload
-
button
"
]
)
;
simulateItemDrag
(
stopReloadButton
panelContainer
)
;
assertAreaPlacements
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
[
]
)
;
ok
(
stopReloadButton
.
closest
(
"
#
customization
-
palette
"
)
"
Button
should
be
in
the
palette
"
)
;
let
urlbar
=
document
.
getElementById
(
"
urlbar
-
container
"
)
;
simulateItemDrag
(
urlbar
panelContainer
)
;
assertAreaPlacements
(
CustomizableUI
.
AREA_NAVBAR
oldNavbarPlacements
.
filter
(
w
=
>
w
!
=
"
stop
-
reload
-
button
"
)
)
;
}
)
;
registerCleanupFunction
(
async
function
(
)
{
await
gCustomizeMode
.
reset
(
)
;
await
endCustomizing
(
)
;
}
)
;
