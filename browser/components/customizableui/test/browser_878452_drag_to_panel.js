"
use
strict
"
;
CustomizableUI
.
createWidget
(
{
id
:
"
cui
-
panel
-
item
-
to
-
drag
-
to
"
defaultArea
:
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
label
:
"
Item
in
panel
to
drag
to
"
}
)
;
add_task
(
async
function
(
)
{
await
startCustomizing
(
)
;
let
btn
=
document
.
getElementById
(
"
new
-
window
-
button
"
)
;
let
placements
=
getAreaWidgetIds
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
)
;
let
lastButtonIndex
=
placements
.
length
-
1
;
let
lastButton
=
placements
[
lastButtonIndex
]
;
let
placementsAfterInsert
=
placements
.
slice
(
0
lastButtonIndex
)
.
concat
(
[
"
new
-
window
-
button
"
lastButton
]
)
;
let
lastButtonNode
=
document
.
getElementById
(
lastButton
)
;
simulateItemDrag
(
btn
lastButtonNode
"
start
"
)
;
assertAreaPlacements
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
placementsAfterInsert
)
;
ok
(
!
CustomizableUI
.
inDefaultState
"
Should
no
longer
be
in
default
state
.
"
)
;
let
palette
=
document
.
getElementById
(
"
customization
-
palette
"
)
;
simulateItemDrag
(
btn
palette
)
;
CustomizableUI
.
removeWidgetFromArea
(
"
cui
-
panel
-
item
-
to
-
drag
-
to
"
)
;
ok
(
CustomizableUI
.
inDefaultState
"
Should
be
in
default
state
again
.
"
)
;
}
)
;
add_task
(
async
function
(
)
{
CustomizableUI
.
addWidgetToArea
(
"
cui
-
panel
-
item
-
to
-
drag
-
to
"
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
)
;
await
startCustomizing
(
)
;
let
btn
=
document
.
getElementById
(
"
new
-
window
-
button
"
)
;
let
panel
=
document
.
getElementById
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
)
;
let
placements
=
getAreaWidgetIds
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
)
;
let
placementsAfterAppend
=
placements
.
concat
(
[
"
new
-
window
-
button
"
]
)
;
simulateItemDrag
(
btn
panel
)
;
assertAreaPlacements
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
placementsAfterAppend
)
;
ok
(
!
CustomizableUI
.
inDefaultState
"
Should
no
longer
be
in
default
state
.
"
)
;
let
palette
=
document
.
getElementById
(
"
customization
-
palette
"
)
;
simulateItemDrag
(
btn
palette
)
;
CustomizableUI
.
removeWidgetFromArea
(
"
cui
-
panel
-
item
-
to
-
drag
-
to
"
)
;
ok
(
CustomizableUI
.
inDefaultState
"
Should
be
in
default
state
again
.
"
)
;
}
)
;
add_task
(
async
function
(
)
{
let
widgetIds
=
getAreaWidgetIds
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
)
;
while
(
widgetIds
.
length
)
{
CustomizableUI
.
removeWidgetFromArea
(
widgetIds
.
shift
(
)
)
;
}
await
startCustomizing
(
)
;
let
btn
=
document
.
getElementById
(
"
new
-
window
-
button
"
)
;
let
panel
=
document
.
getElementById
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
)
;
assertAreaPlacements
(
panel
.
id
[
]
)
;
let
placementsAfterAppend
=
[
"
new
-
window
-
button
"
]
;
simulateItemDrag
(
btn
panel
)
;
assertAreaPlacements
(
CustomizableUI
.
AREA_FIXED_OVERFLOW_PANEL
placementsAfterAppend
)
;
ok
(
!
CustomizableUI
.
inDefaultState
"
Should
no
longer
be
in
default
state
.
"
)
;
let
palette
=
document
.
getElementById
(
"
customization
-
palette
"
)
;
simulateItemDrag
(
btn
palette
)
;
assertAreaPlacements
(
panel
.
id
[
]
)
;
}
)
;
registerCleanupFunction
(
async
function
asyncCleanup
(
)
{
CustomizableUI
.
destroyWidget
(
"
cui
-
panel
-
item
-
to
-
drag
-
to
"
)
;
await
endCustomizing
(
)
;
await
resetCustomization
(
)
;
}
)
;
