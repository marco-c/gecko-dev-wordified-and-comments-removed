"
use
strict
"
;
let
gAppMenuStrings
=
new
Localization
(
[
"
branding
/
brand
.
ftl
"
"
browser
/
appmenu
.
ftl
"
]
true
)
;
const
CLONED_ATTRS
=
[
"
command
"
"
oncommand
"
"
onclick
"
"
key
"
"
disabled
"
]
;
add_task
(
async
function
test_help_panel_cloning
(
)
{
await
gCUITestUtils
.
openMainMenu
(
)
;
registerCleanupFunction
(
async
(
)
=
>
{
await
gCUITestUtils
.
hideMainMenu
(
)
;
}
)
;
let
anchor
=
document
.
getElementById
(
"
PanelUI
-
menu
-
button
"
)
;
PanelUI
.
showHelpView
(
anchor
)
;
let
appMenuHelpSubview
=
document
.
getElementById
(
"
PanelUI
-
helpView
"
)
;
await
BrowserTestUtils
.
waitForEvent
(
appMenuHelpSubview
"
ViewShowing
"
)
;
let
helpMenuPopup
=
document
.
getElementById
(
"
menu_HelpPopup
"
)
;
let
helpMenuPopupItems
=
helpMenuPopup
.
querySelectorAll
(
"
menuitem
"
)
;
for
(
let
helpMenuPopupItem
of
helpMenuPopupItems
)
{
if
(
helpMenuPopupItem
.
hidden
)
{
continue
;
}
let
appMenuHelpId
=
"
appMenu_
"
+
helpMenuPopupItem
.
id
;
info
(
Checking
{
appMenuHelpId
}
)
;
let
appMenuHelpItem
=
appMenuHelpSubview
.
querySelector
(
#
{
appMenuHelpId
}
)
;
Assert
.
ok
(
appMenuHelpItem
"
Should
have
found
a
cloned
AppMenu
help
item
"
)
;
let
appMenuHelpItemL10nId
=
appMenuHelpItem
.
dataset
.
l10nId
;
Assert
.
equal
(
helpMenuPopupItem
.
getAttribute
(
"
appmenu
-
data
-
l10n
-
id
"
)
appMenuHelpItemL10nId
"
Help
menuitem
supplied
a
data
-
l10n
-
id
for
the
AppMenu
Help
item
"
)
;
let
[
strings
]
=
gAppMenuStrings
.
formatMessagesSync
(
[
{
id
:
appMenuHelpItemL10nId
}
]
)
;
Assert
.
ok
(
strings
"
Should
have
found
strings
for
the
AppMenu
help
item
"
)
;
for
(
let
attr
of
CLONED_ATTRS
)
{
if
(
attr
=
=
"
oncommand
"
&
&
helpMenuPopupItem
.
hasAttribute
(
"
command
"
)
)
{
let
commandNode
=
document
.
getElementById
(
helpMenuPopupItem
.
getAttribute
(
"
command
"
)
)
;
Assert
.
equal
(
commandNode
.
getAttribute
(
"
oncommand
"
)
appMenuHelpItem
.
getAttribute
(
"
oncommand
"
)
"
oncommand
was
properly
cloned
.
"
)
;
}
else
{
Assert
.
equal
(
helpMenuPopupItem
.
getAttribute
(
attr
)
appMenuHelpItem
.
getAttribute
(
attr
)
{
attr
}
attribute
was
cloned
.
)
;
}
}
}
}
)
;
