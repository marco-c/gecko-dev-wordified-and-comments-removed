"
use
strict
"
;
const
TEST_SITE
=
"
http
:
/
/
127
.
0
.
0
.
1
"
;
const
RECENTLY_CLOSED_TABS_PANEL_ID
=
"
appMenu
-
library
-
recentlyClosedTabs
"
;
const
RECENTLY_CLOSED_TABS_ITEM_ID
=
"
appMenuRecentlyClosedTabs
"
;
function
assertHeaderSeparator
(
)
{
let
header
=
document
.
querySelector
(
#
{
RECENTLY_CLOSED_TABS_PANEL_ID
}
.
panel
-
header
)
;
Assert
.
equal
(
header
.
nextSibling
.
tagName
"
toolbarseparator
"
"
toolbarseparator
should
be
shown
below
header
"
)
;
}
add_task
(
async
function
test_setup
(
)
{
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
TEST_SITE
)
;
gBrowser
.
selectedTab
=
tab
;
let
browser
=
gBrowser
.
getBrowserForTab
(
tab
)
;
await
BrowserTestUtils
.
browserLoaded
(
browser
false
null
true
)
;
await
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
add_task
(
async
function
test_header_toolbarseparator
(
)
{
await
gCUITestUtils
.
openMainMenu
(
)
;
let
historyView
=
PanelMultiView
.
getViewNode
(
document
"
PanelUI
-
history
"
)
;
document
.
getElementById
(
"
appMenu
-
history
-
button
"
)
.
click
(
)
;
await
BrowserTestUtils
.
waitForEvent
(
historyView
"
ViewShown
"
)
;
let
closedTabsView
=
PanelMultiView
.
getViewNode
(
document
RECENTLY_CLOSED_TABS_PANEL_ID
)
;
Assert
.
ok
(
!
document
.
getElementById
(
RECENTLY_CLOSED_TABS_ITEM_ID
)
.
disabled
)
;
document
.
getElementById
(
RECENTLY_CLOSED_TABS_ITEM_ID
)
.
click
(
)
;
await
BrowserTestUtils
.
waitForEvent
(
closedTabsView
"
ViewShown
"
)
;
assertHeaderSeparator
(
)
;
document
.
querySelector
(
#
{
RECENTLY_CLOSED_TABS_PANEL_ID
}
.
subviewbutton
-
back
)
.
click
(
)
;
await
BrowserTestUtils
.
waitForEvent
(
historyView
"
ViewShown
"
)
;
document
.
getElementById
(
RECENTLY_CLOSED_TABS_ITEM_ID
)
.
click
(
)
;
await
BrowserTestUtils
.
waitForEvent
(
closedTabsView
"
ViewShown
"
)
;
assertHeaderSeparator
(
)
;
await
gCUITestUtils
.
hideMainMenu
(
)
;
}
)
;
