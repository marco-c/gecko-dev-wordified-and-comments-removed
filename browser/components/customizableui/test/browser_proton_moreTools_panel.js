"
use
strict
"
;
ChromeUtils
.
defineLazyGetter
(
this
"
DevToolsStartup
"
(
)
=
>
{
return
Cc
[
"
mozilla
.
org
/
devtools
/
startup
-
clh
;
1
"
]
.
getService
(
Ci
.
nsICommandLineHandler
)
.
wrappedJSObject
;
}
)
;
add_task
(
async
function
testDevToolsPanelInToolbar
(
)
{
DevToolsStartup
.
developerToggleCreated
=
false
;
CustomizableUI
.
destroyWidget
(
"
developer
-
button
"
)
;
const
win
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
CustomizableUI
.
addWidgetToArea
(
"
developer
-
button
"
CustomizableUI
.
AREA_NAVBAR
)
;
let
button
=
document
.
getElementById
(
"
developer
-
button
"
)
;
let
devToolsView
=
PanelMultiView
.
getViewNode
(
document
"
PanelUI
-
developer
-
tools
"
)
;
let
devToolsShownPromise
=
BrowserTestUtils
.
waitForEvent
(
devToolsView
"
ViewShown
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
button
{
}
)
;
await
devToolsShownPromise
;
ok
(
true
"
Dev
Tools
view
is
showing
"
)
;
is
(
devToolsView
.
children
.
length
1
"
Dev
tools
subview
is
the
only
child
of
panel
"
)
;
is
(
devToolsView
.
children
[
0
]
.
id
"
PanelUI
-
developer
-
tools
-
view
"
"
Dev
tools
child
has
correct
id
"
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
CustomizableUI
.
reset
(
)
;
}
)
;
