"
use
strict
"
;
add_setup
(
async
function
setup
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
firefox
-
view
.
view
-
count
"
0
]
]
}
)
;
}
)
;
add_task
(
async
function
test_keyboard_focus_after_tab_pickup_opened
(
)
{
TabsSetupFlowManager
.
resetInternalState
(
)
;
Services
.
prefs
.
clearUserPref
(
"
browser
.
tabs
.
firefox
-
view
.
ui
-
state
.
tab
-
pickup
.
open
"
)
;
const
sandbox
=
setupMocks
(
{
state
:
UIState
.
STATUS_NOT_CONFIGURED
syncEnabled
:
false
}
)
;
await
withFirefoxView
(
{
}
async
browser
=
>
{
const
{
document
}
=
browser
.
contentWindow
;
let
win
=
browser
.
ownerGlobal
;
is
(
document
.
activeElement
.
localName
"
body
"
"
document
body
element
is
initially
focused
"
)
;
const
tab
=
(
)
=
>
{
info
(
"
Tab
keypress
synthesized
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Tab
"
{
}
win
)
;
}
;
tab
(
)
;
let
tabPickupContainer
=
document
.
querySelector
(
"
#
tab
-
pickup
-
container
summary
.
page
-
section
-
header
"
)
;
is
(
document
.
activeElement
tabPickupContainer
"
tab
pickup
container
header
has
focus
"
)
;
tab
(
)
;
is
(
document
.
activeElement
.
id
"
firefoxview
-
tabpickup
-
step
-
signin
-
primarybutton
"
"
tab
pickup
primary
button
has
focus
"
)
;
}
)
;
await
tearDown
(
sandbox
)
;
await
SpecialPowers
.
popPrefEnv
(
)
;
}
)
;
add_task
(
async
function
test_keyboard_accessibility_tab_pickup
(
)
{
await
withFirefoxView
(
{
}
async
browser
=
>
{
const
win
=
browser
.
ownerGlobal
;
const
{
document
}
=
browser
.
contentWindow
;
const
enter
=
async
(
)
=
>
{
info
(
"
Enter
"
)
;
EventUtils
.
synthesizeKey
(
"
KEY_Enter
"
{
}
win
)
;
}
;
let
details
=
document
.
getElementById
(
"
tab
-
pickup
-
container
"
)
;
let
summary
=
details
.
querySelector
(
"
summary
"
)
;
ok
(
summary
"
summary
element
should
exist
"
)
;
ok
(
details
.
open
"
Tab
pickup
container
should
be
initially
open
on
load
"
)
;
summary
.
focus
(
)
;
await
enter
(
)
;
ok
(
!
details
.
open
"
Tab
pickup
container
should
be
closed
"
)
;
await
enter
(
)
;
ok
(
details
.
open
"
Tab
pickup
container
should
be
opened
"
)
;
}
)
;
cleanup_tab_pickup
(
)
;
}
)
;
