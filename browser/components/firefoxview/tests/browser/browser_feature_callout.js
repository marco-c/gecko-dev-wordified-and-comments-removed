const
calloutId
=
"
root
"
;
const
calloutSelector
=
#
{
calloutId
}
.
featureCallout
;
const
primaryButtonSelector
=
#
{
calloutId
}
.
primary
;
const
featureTourPref
=
"
browser
.
firefox
-
view
.
feature
-
tour
"
;
const
defaultPrefValue
=
JSON
.
stringify
(
{
message
:
"
FIREFOX_VIEW_FEATURE_TOUR
"
screen
:
"
FEATURE_CALLOUT_1
"
complete
:
false
}
)
;
const
waitForCalloutScreen
=
async
(
doc
screenId
)
=
>
{
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
{
return
doc
.
querySelector
(
{
calloutSelector
}
:
not
(
.
hidden
)
{
screenId
}
)
;
}
)
;
}
;
const
waitForCalloutRemoved
=
async
doc
=
>
{
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
{
return
!
doc
.
body
.
querySelector
(
calloutSelector
)
;
}
)
;
}
;
const
clickPrimaryButton
=
async
doc
=
>
{
doc
.
querySelector
(
primaryButtonSelector
)
.
click
(
)
;
}
;
add_task
(
async
function
feature_callout_renders_in_firefox_view
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
featureTourPref
defaultPrefValue
]
]
}
)
;
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
"
about
:
firefoxview
"
}
async
browser
=
>
{
const
{
document
}
=
browser
.
contentWindow
;
await
waitForCalloutScreen
(
document
"
.
FEATURE_CALLOUT_1
"
)
;
ok
(
document
.
querySelector
(
calloutSelector
)
"
Feature
Callout
element
exists
"
)
;
}
)
;
}
)
;
add_task
(
async
function
feature_callout_is_repositioned_if_it_does_not_fit
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
firefox
-
view
.
feature
-
tour
"
'
{
"
message
"
:
"
FIREFOX_VIEW_FEATURE_TOUR
"
"
screen
"
:
"
FEATURE_CALLOUT_3
"
"
complete
"
:
false
}
'
]
]
}
)
;
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
"
about
:
firefoxview
"
}
async
browser
=
>
{
const
{
document
}
=
browser
.
contentWindow
;
await
waitForCalloutScreen
(
document
"
.
FEATURE_CALLOUT_3
"
)
;
browser
.
contentWindow
.
resizeTo
(
1200
800
)
;
ok
(
document
.
querySelector
(
{
calloutSelector
}
.
arrow
-
inline
-
end
)
"
On
third
screen
the
callout
is
positioned
at
the
start
of
the
parent
element
originally
configured
"
)
;
browser
.
contentWindow
.
resizeTo
(
400
800
)
;
await
waitForCalloutScreen
(
document
"
.
FEATURE_CALLOUT_3
"
)
;
let
callout
=
document
.
querySelector
(
calloutSelector
)
;
await
BrowserTestUtils
.
waitForMutationCondition
(
callout
{
attributeFilter
:
[
"
style
"
]
attributes
:
true
}
(
)
=
>
{
return
true
;
}
)
;
ok
(
document
.
querySelector
(
{
calloutSelector
}
.
arrow
-
bottom
)
"
On
third
screen
with
very
narrow
window
the
callout
is
positioned
above
the
parent
element
"
)
;
}
)
;
}
)
;
