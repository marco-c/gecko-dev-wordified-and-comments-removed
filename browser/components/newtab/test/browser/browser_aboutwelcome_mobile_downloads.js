"
use
strict
"
;
const
BASE_CONTENT
=
{
id
:
"
MOBILE_DOWNLOADS
"
order
:
0
content
:
{
tiles
:
{
type
:
"
mobile_downloads
"
data
:
{
QR_code
:
{
image_url
:
"
chrome
:
/
/
browser
/
content
/
preferences
/
more
-
from
-
mozilla
-
qr
-
code
-
simple
.
svg
"
alt_text
:
"
Test
alt
"
}
email
:
{
link_text
:
{
string_id
:
"
spotlight
-
focus
-
promo
-
email
-
link
"
}
}
marketplace_buttons
:
{
}
}
}
}
}
;
async
function
openAboutWelcome
(
json
)
{
if
(
json
)
{
await
setAboutWelcomeMultiStage
(
json
)
;
}
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
welcome
"
true
)
;
registerCleanupFunction
(
(
)
=
>
{
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
return
tab
.
linkedBrowser
;
}
const
ALT_TEXT
=
BASE_CONTENT
.
content
.
tiles
.
data
.
QR_code
.
alt_text
;
add_task
(
async
function
test_aboutwelcome_mobile_downloads
(
)
{
const
TEST_JSON
=
JSON
.
stringify
(
[
BASE_CONTENT
]
)
;
let
browser
=
await
openAboutWelcome
(
TEST_JSON
)
;
await
test_screen_content
(
browser
"
renders
screen
with
all
mobile
download
elements
"
[
img
.
qr
-
code
-
image
[
alt
=
"
{
ALT_TEXT
}
"
]
"
ul
.
mobile
-
download
-
buttons
"
"
li
.
android
"
"
li
.
ios
"
"
button
.
email
-
link
"
]
)
;
}
)
;
add_task
(
async
function
test_aboutwelcome_mobile_downloads
(
)
{
const
SCREEN_CONTENT
=
Object
.
assign
(
{
}
BASE_CONTENT
)
;
delete
SCREEN_CONTENT
.
content
.
tiles
.
data
.
email
;
const
TEST_JSON
=
JSON
.
stringify
(
[
SCREEN_CONTENT
]
)
;
let
browser
=
await
openAboutWelcome
(
TEST_JSON
)
;
await
test_screen_content
(
browser
"
renders
screen
with
QR
code
and
marketplace
badges
"
[
img
.
qr
-
code
-
image
[
alt
=
"
{
ALT_TEXT
}
"
]
"
ul
.
mobile
-
download
-
buttons
"
"
li
.
android
"
"
li
.
ios
"
]
[
button
.
email
-
link
]
)
;
}
)
;
add_task
(
async
function
test_aboutwelcome_mobile_downloads
(
)
{
let
SCREEN_CONTENT
=
Object
.
assign
(
{
}
BASE_CONTENT
)
;
delete
SCREEN_CONTENT
.
content
.
tiles
.
data
.
email
;
delete
SCREEN_CONTENT
.
content
.
tiles
.
data
.
marketplace_buttons
;
const
TEST_JSON
=
JSON
.
stringify
(
[
SCREEN_CONTENT
]
)
;
let
browser
=
await
openAboutWelcome
(
TEST_JSON
)
;
await
test_screen_content
(
browser
"
renders
screen
with
QR
code
"
[
img
.
qr
-
code
-
image
[
alt
=
"
{
ALT_TEXT
}
"
]
]
[
"
button
.
email
-
link
"
"
li
.
android
"
"
li
.
ios
"
]
)
;
}
)
;
