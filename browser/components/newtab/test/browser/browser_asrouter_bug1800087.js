"
use
strict
"
;
const
{
ASRouterNewTabHook
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
activity
-
stream
/
lib
/
ASRouterNewTabHook
.
sys
.
mjs
"
)
;
const
{
ASRouterDefaultConfig
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
/
modules
/
asrouter
/
ASRouterDefaultConfig
.
jsm
"
)
;
add_setup
(
(
)
=
>
ASRouterNewTabHook
.
destroy
(
)
)
;
add_task
(
async
function
test_newtab_asrouter
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
newtabpage
.
activity
-
stream
.
asrouter
.
providers
.
cfr
"
JSON
.
stringify
(
{
id
:
"
cfr
"
enabled
:
true
type
:
"
local
"
bucket
:
"
cfr
"
updateCyleInMs
:
3600000
}
)
]
]
}
)
;
await
ASRouterNewTabHook
.
createInstance
(
ASRouterDefaultConfig
(
)
)
;
const
hook
=
await
ASRouterNewTabHook
.
getInstance
(
)
;
const
router
=
hook
.
_router
;
if
(
!
router
.
initialized
)
{
await
router
.
waitForInitialized
;
}
let
cfrProvider
=
router
.
state
.
providers
.
find
(
p
=
>
p
.
id
=
=
=
"
cfr
"
)
;
Assert
.
equal
(
cfrProvider
.
collection
"
cfr
"
"
The
collection
name
is
correct
"
)
;
Assert
.
ok
(
!
cfrProvider
.
bucket
"
The
bucket
name
is
removed
"
)
;
}
)
;
