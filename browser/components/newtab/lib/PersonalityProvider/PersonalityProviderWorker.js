"
use
strict
"
;
importScripts
(
"
resource
:
/
/
gre
/
modules
/
workers
/
require
.
js
"
"
resource
:
/
/
gre
/
modules
/
osfile
.
jsm
"
"
resource
:
/
/
activity
-
stream
/
lib
/
PersonalityProvider
/
Tokenize
.
jsm
"
"
resource
:
/
/
activity
-
stream
/
lib
/
PersonalityProvider
/
NaiveBayesTextTagger
.
jsm
"
"
resource
:
/
/
activity
-
stream
/
lib
/
PersonalityProvider
/
NmfTextTagger
.
jsm
"
"
resource
:
/
/
activity
-
stream
/
lib
/
PersonalityProvider
/
RecipeExecutor
.
jsm
"
"
resource
:
/
/
activity
-
stream
/
lib
/
PersonalityProvider
/
PersonalityProviderWorkerClass
.
jsm
"
)
;
const
PromiseWorker
=
require
(
"
resource
:
/
/
gre
/
modules
/
workers
/
PromiseWorker
.
js
"
)
;
const
personalityProviderWorker
=
new
PersonalityProviderWorker
(
)
;
const
worker
=
new
PromiseWorker
.
AbstractWorker
(
)
;
worker
.
dispatch
=
function
(
method
args
=
[
]
)
{
return
personalityProviderWorker
[
method
]
(
.
.
.
args
)
;
}
;
worker
.
postMessage
=
function
(
message
.
.
.
transfers
)
{
self
.
postMessage
(
message
.
.
.
transfers
)
;
}
;
worker
.
close
=
function
(
)
{
self
.
close
(
)
;
}
;
self
.
addEventListener
(
"
message
"
msg
=
>
worker
.
handleMessage
(
msg
)
)
;
self
.
addEventListener
(
"
unhandledrejection
"
function
(
error
)
{
throw
error
.
reason
;
}
)
;
