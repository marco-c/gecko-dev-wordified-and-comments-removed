"
use
strict
"
;
const
EXPORTED_SYMBOLS
=
[
"
AboutWelcomeDefaults
"
"
DEFAULT_WELCOME_CONTENT
"
]
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
{
AppConstants
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
AppConstants
.
jsm
"
)
;
const
lazy
=
{
}
;
XPCOMUtils
.
defineLazyModuleGetters
(
lazy
{
AddonRepository
:
"
resource
:
/
/
gre
/
modules
/
addons
/
AddonRepository
.
jsm
"
AttributionCode
:
"
resource
:
/
/
/
modules
/
AttributionCode
.
jsm
"
}
)
;
const
DEFAULT_WELCOME_CONTENT
=
{
id
:
"
DEFAULT_ABOUTWELCOME_PROTON
"
template
:
"
multistage
"
transitions
:
Services
.
prefs
.
getBoolPref
(
"
browser
.
aboutwelcome
.
transitions
"
true
)
backdrop
:
"
#
212121
url
(
'
chrome
:
/
/
activity
-
stream
/
content
/
data
/
content
/
assets
/
proton
-
bkg
.
avif
'
)
center
/
cover
no
-
repeat
fixed
"
screens
:
[
{
id
:
"
AW_PIN_FIREFOX
"
content
:
{
position
:
"
corner
"
logo
:
{
}
title
:
{
string_id
:
"
mr1
-
onboarding
-
pin
-
header
"
}
hero_text
:
{
string_id
:
"
mr1
-
welcome
-
screen
-
hero
-
text
"
}
help_text
:
{
string_id
:
"
mr1
-
onboarding
-
welcome
-
image
-
caption
"
}
has_noodles
:
true
primary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
pin
-
primary
-
button
-
label
"
}
action
:
{
navigate
:
true
type
:
"
PIN_FIREFOX_TO_TASKBAR
"
}
}
secondary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
set
-
default
-
secondary
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
secondary_button_top
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
sign
-
in
-
button
-
label
"
}
action
:
{
data
:
{
entrypoint
:
"
activity
-
stream
-
firstrun
"
}
type
:
"
SHOW_FIREFOX_ACCOUNTS
"
addFlowParams
:
true
}
}
}
}
{
id
:
"
AW_LANGUAGE_MISMATCH
"
content
:
{
logo
:
{
}
title
:
{
string_id
:
"
onboarding
-
live
-
language
-
header
"
}
has_noodles
:
true
languageSwitcher
:
{
downloading
:
{
string_id
:
"
onboarding
-
live
-
language
-
button
-
label
-
downloading
"
}
cancel
:
{
string_id
:
"
onboarding
-
live
-
language
-
secondary
-
cancel
-
download
"
}
waiting
:
{
string_id
:
"
onboarding
-
live
-
language
-
waiting
-
button
"
}
skip
:
{
string_id
:
"
onboarding
-
live
-
language
-
skip
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
}
}
{
id
:
"
AW_SET_DEFAULT
"
content
:
{
logo
:
{
}
title
:
{
string_id
:
"
mr1
-
onboarding
-
default
-
header
"
}
subtitle
:
{
string_id
:
"
mr1
-
onboarding
-
default
-
subtitle
"
}
has_noodles
:
true
primary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
default
-
primary
-
button
-
label
"
}
action
:
{
navigate
:
true
type
:
"
SET_DEFAULT_BROWSER
"
}
}
secondary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
set
-
default
-
secondary
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
}
}
{
id
:
"
AW_IMPORT_SETTINGS
"
content
:
{
logo
:
{
}
title
:
{
string_id
:
"
mr1
-
onboarding
-
import
-
header
"
}
subtitle
:
{
string_id
:
"
mr1
-
onboarding
-
import
-
subtitle
"
}
has_noodles
:
true
primary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
import
-
primary
-
button
-
label
-
no
-
attribution
"
}
action
:
{
type
:
"
SHOW_MIGRATION_WIZARD
"
data
:
{
}
navigate
:
true
}
}
secondary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
import
-
secondary
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
}
}
{
id
:
"
AW_CHOOSE_THEME
"
content
:
{
logo
:
{
}
title
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
header
"
}
subtitle
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
subtitle
"
}
has_noodles
:
true
tiles
:
{
type
:
"
theme
"
action
:
{
theme
:
"
<
event
>
"
}
data
:
[
{
theme
:
"
automatic
"
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
label
-
system
"
}
tooltip
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
tooltip
-
system
"
}
description
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
description
-
system
"
}
}
{
theme
:
"
light
"
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
label
-
light
"
}
tooltip
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
tooltip
-
light
"
}
description
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
description
-
light
"
}
}
{
theme
:
"
dark
"
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
label
-
dark
"
}
tooltip
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
tooltip
-
dark
"
}
description
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
description
-
dark
"
}
}
{
theme
:
"
alpenglow
"
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
label
-
alpenglow
"
}
tooltip
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
tooltip
-
alpenglow
"
}
description
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
description
-
alpenglow
"
}
}
]
}
primary_button
:
{
label
:
{
string_id
:
"
onboarding
-
theme
-
primary
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
secondary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
secondary
-
button
-
label
"
}
action
:
{
theme
:
"
automatic
"
navigate
:
true
}
}
}
}
]
}
;
const
MR_ABOUT_WELCOME_DEFAULT
=
{
id
:
"
MR_WELCOME_DEFAULT
"
template
:
"
multistage
"
transitions
:
Services
.
prefs
.
getBoolPref
(
"
browser
.
aboutwelcome
.
transitions
"
true
)
backdrop
:
"
#
438ab6
"
screens
:
[
{
id
:
"
AW_SET_DEFAULT
"
content
:
{
position
:
"
split
"
background
:
"
#
3191f8
"
logo
:
{
}
hero_text
:
{
string_id
:
"
mr1
-
welcome
-
screen
-
hero
-
text
"
}
title
:
{
string_id
:
"
mr1
-
onboarding
-
default
-
header
"
}
subtitle
:
{
string_id
:
"
mr1
-
onboarding
-
default
-
subtitle
"
}
primary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
default
-
primary
-
button
-
label
"
}
action
:
{
navigate
:
true
type
:
"
SET_DEFAULT_BROWSER
"
}
}
secondary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
set
-
default
-
secondary
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
}
}
{
id
:
"
AW_LANGUAGE_MISMATCH
"
content
:
{
position
:
"
split
"
background
:
"
#
3191f8
"
logo
:
{
}
title
:
{
string_id
:
"
onboarding
-
live
-
language
-
header
"
}
languageSwitcher
:
{
downloading
:
{
string_id
:
"
onboarding
-
live
-
language
-
button
-
label
-
downloading
"
}
cancel
:
{
string_id
:
"
onboarding
-
live
-
language
-
secondary
-
cancel
-
download
"
}
waiting
:
{
string_id
:
"
onboarding
-
live
-
language
-
waiting
-
button
"
}
skip
:
{
string_id
:
"
onboarding
-
live
-
language
-
skip
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
}
}
{
id
:
"
AW_IMPORT_SETTINGS
"
content
:
{
position
:
"
split
"
background
:
"
#
3191f8
"
logo
:
{
}
title
:
{
string_id
:
"
mr1
-
onboarding
-
import
-
header
"
}
subtitle
:
{
string_id
:
"
mr1
-
onboarding
-
import
-
subtitle
"
}
primary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
import
-
primary
-
button
-
label
-
no
-
attribution
"
}
action
:
{
type
:
"
SHOW_MIGRATION_WIZARD
"
data
:
{
}
navigate
:
true
}
}
secondary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
import
-
secondary
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
}
}
{
id
:
"
AW_CHOOSE_THEME
"
content
:
{
position
:
"
split
"
background
:
"
#
3191f8
"
logo
:
{
}
title
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
header
"
}
subtitle
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
subtitle
"
}
tiles
:
{
type
:
"
theme
"
action
:
{
theme
:
"
<
event
>
"
}
data
:
[
{
theme
:
"
automatic
"
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
label
-
system
"
}
tooltip
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
tooltip
-
system
"
}
description
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
description
-
system
"
}
}
{
theme
:
"
light
"
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
label
-
light
"
}
tooltip
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
tooltip
-
light
"
}
description
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
description
-
light
"
}
}
{
theme
:
"
dark
"
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
label
-
dark
"
}
tooltip
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
tooltip
-
dark
"
}
description
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
description
-
dark
"
}
}
{
theme
:
"
alpenglow
"
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
label
-
alpenglow
"
}
tooltip
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
tooltip
-
alpenglow
"
}
description
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
description
-
alpenglow
"
}
}
]
}
primary_button
:
{
label
:
{
string_id
:
"
onboarding
-
theme
-
primary
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
secondary_button
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
theme
-
secondary
-
button
-
label
"
}
action
:
{
theme
:
"
automatic
"
navigate
:
true
}
}
}
}
]
}
;
async
function
getAddonFromRepository
(
data
)
{
const
[
addonInfo
]
=
await
lazy
.
AddonRepository
.
getAddonsByIDs
(
[
data
]
)
;
if
(
addonInfo
.
sourceURI
.
scheme
!
=
=
"
https
"
)
{
return
null
;
}
return
{
name
:
addonInfo
.
name
url
:
addonInfo
.
sourceURI
.
spec
iconURL
:
addonInfo
.
icons
[
"
64
"
]
|
|
addonInfo
.
icons
[
"
32
"
]
type
:
addonInfo
.
type
screenshots
:
addonInfo
.
screenshots
}
;
}
async
function
getAddonInfo
(
attrbObj
)
{
let
{
content
source
}
=
attrbObj
;
try
{
if
(
!
content
|
|
source
!
=
=
"
addons
.
mozilla
.
org
"
)
{
return
null
;
}
while
(
content
.
includes
(
"
%
"
)
)
{
try
{
const
result
=
decodeURIComponent
(
content
)
;
if
(
result
=
=
=
content
)
{
break
;
}
content
=
result
;
}
catch
(
e
)
{
break
;
}
}
if
(
content
.
startsWith
(
"
rta
:
"
)
)
{
return
await
getAddonFromRepository
(
content
)
;
}
}
catch
(
e
)
{
Cu
.
reportError
(
"
Failed
to
get
the
latest
add
-
on
version
for
Return
to
AMO
"
)
;
}
return
null
;
}
async
function
getAttributionContent
(
)
{
let
attribution
=
await
lazy
.
AttributionCode
.
getAttrDataAsync
(
)
;
if
(
attribution
?
.
source
=
=
=
"
addons
.
mozilla
.
org
"
)
{
let
addonInfo
=
await
getAddonInfo
(
attribution
)
;
if
(
addonInfo
)
{
return
{
.
.
.
addonInfo
template
:
"
return_to_amo
"
}
;
}
}
if
(
attribution
?
.
ua
)
{
return
{
ua
:
decodeURIComponent
(
attribution
.
ua
)
}
;
}
return
null
;
}
function
getDefaults
(
templateMR
=
false
)
{
const
defaultContent
=
templateMR
?
MR_ABOUT_WELCOME_DEFAULT
:
DEFAULT_WELCOME_CONTENT
;
return
Cu
.
cloneInto
(
defaultContent
{
}
)
;
}
let
gSourceL10n
=
null
;
const
allowedUAs
=
[
"
chrome
"
"
edge
"
"
ie
"
]
;
function
getLocalizedUA
(
ua
)
{
if
(
!
gSourceL10n
)
{
gSourceL10n
=
new
Localization
(
[
"
browser
/
migration
.
ftl
"
]
)
;
}
if
(
allowedUAs
.
includes
(
ua
)
)
{
return
gSourceL10n
.
formatValue
(
source
-
name
-
{
ua
.
toLowerCase
(
)
}
)
;
}
return
null
;
}
function
prepareMRContent
(
content
)
{
return
content
;
}
async
function
prepareContentForReact
(
content
)
{
if
(
content
?
.
template
=
=
=
"
return_to_amo
"
)
{
return
content
;
}
if
(
content
.
templateMR
)
{
return
prepareMRContent
(
content
)
;
}
function
removeScreens
(
check
)
{
const
{
screens
}
=
content
;
for
(
let
i
=
0
;
i
<
screens
?
.
length
;
i
+
+
)
{
if
(
check
(
screens
[
i
]
)
)
{
screens
.
splice
(
i
-
-
1
)
;
}
}
}
if
(
AppConstants
.
isPlatformAndVersionAtMost
(
"
win
"
"
6
.
1
"
)
)
{
removeScreens
(
screen
=
>
[
"
theme
"
]
.
includes
(
screen
.
content
?
.
tiles
?
.
type
)
)
;
}
if
(
content
?
.
ua
)
{
const
{
label
action
}
=
content
?
.
screens
?
.
find
(
screen
=
>
screen
?
.
content
?
.
primary_button
?
.
action
?
.
type
=
=
=
"
SHOW_MIGRATION_WIZARD
"
)
?
.
content
?
.
primary_button
?
?
{
}
;
if
(
action
)
{
action
.
data
=
{
.
.
.
action
.
data
source
:
content
.
ua
}
;
}
let
browserStr
=
await
getLocalizedUA
(
content
.
ua
)
;
if
(
label
?
.
string_id
)
{
label
.
string_id
=
browserStr
?
"
mr1
-
onboarding
-
import
-
primary
-
button
-
label
-
attribution
"
:
"
mr1
-
onboarding
-
import
-
primary
-
button
-
label
-
no
-
attribution
"
;
label
.
args
=
browserStr
?
{
previous
:
browserStr
}
:
{
}
;
}
}
let
removeDefault
=
!
content
.
needDefault
;
if
(
!
content
.
needPin
)
{
const
pinScreen
=
content
.
screens
?
.
find
(
screen
=
>
screen
.
id
?
.
startsWith
(
"
AW_PIN_FIREFOX
"
)
)
;
if
(
pinScreen
?
.
content
)
{
pinScreen
.
id
=
removeDefault
?
"
AW_GET_STARTED
"
:
"
AW_ONLY_DEFAULT
"
;
pinScreen
.
content
.
title
=
{
string_id
:
"
mr1
-
onboarding
-
welcome
-
header
"
}
;
pinScreen
.
content
.
primary_button
=
{
label
:
{
string_id
:
removeDefault
?
"
mr1
-
onboarding
-
get
-
started
-
primary
-
button
-
label
"
:
"
mr1
-
onboarding
-
set
-
default
-
only
-
primary
-
button
-
label
"
}
action
:
{
navigate
:
true
}
}
;
if
(
removeDefault
)
{
delete
pinScreen
.
content
.
secondary_button
;
}
else
{
pinScreen
.
content
.
primary_button
.
action
.
type
=
"
SET_DEFAULT_BROWSER
"
;
removeDefault
=
true
;
}
}
}
if
(
removeDefault
)
{
removeScreens
(
screen
=
>
screen
.
id
?
.
startsWith
(
"
AW_SET_DEFAULT
"
)
)
;
}
if
(
!
Services
.
prefs
.
getBoolPref
(
"
identity
.
fxaccounts
.
enabled
"
false
)
)
{
delete
content
.
screens
?
.
find
(
screen
=
>
screen
.
content
?
.
secondary_button_top
?
.
action
?
.
type
=
=
=
"
SHOW_FIREFOX_ACCOUNTS
"
)
?
.
content
.
secondary_button_top
;
content
.
skipFxA
=
true
;
}
if
(
Services
.
locale
.
appLocaleAsBCP47
.
split
(
"
-
"
)
[
0
]
!
=
=
"
en
"
)
{
delete
content
.
screens
?
.
find
(
screen
=
>
screen
.
content
?
.
help_text
?
.
deleteIfNotEn
)
?
.
content
.
help_text
;
}
let
shouldRemoveLanguageMismatchScreen
=
true
;
if
(
content
.
languageMismatchEnabled
)
{
const
screen
=
content
?
.
screens
?
.
find
(
s
=
>
s
.
id
=
=
=
"
AW_LANGUAGE_MISMATCH
"
)
;
if
(
screen
&
&
content
.
appAndSystemLocaleInfo
.
canLiveReload
)
{
function
addMessageArgs
(
obj
)
{
for
(
const
value
of
Object
.
values
(
obj
)
)
{
if
(
value
?
.
string_id
)
{
value
.
args
=
content
.
appAndSystemLocaleInfo
.
displayNames
;
}
}
}
addMessageArgs
(
screen
.
content
.
languageSwitcher
)
;
addMessageArgs
(
screen
.
content
)
;
shouldRemoveLanguageMismatchScreen
=
false
;
}
}
if
(
shouldRemoveLanguageMismatchScreen
)
{
removeScreens
(
screen
=
>
screen
.
id
=
=
=
"
AW_LANGUAGE_MISMATCH
"
)
;
}
return
content
;
}
const
AboutWelcomeDefaults
=
{
prepareContentForReact
getDefaults
getAttributionContent
}
;
