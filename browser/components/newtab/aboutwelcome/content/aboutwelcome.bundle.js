(
function
(
modules
)
{
var
installedModules
=
{
}
;
function
__webpack_require__
(
moduleId
)
{
if
(
installedModules
[
moduleId
]
)
{
return
installedModules
[
moduleId
]
.
exports
;
}
var
module
=
installedModules
[
moduleId
]
=
{
i
:
moduleId
l
:
false
exports
:
{
}
}
;
modules
[
moduleId
]
.
call
(
module
.
exports
module
module
.
exports
__webpack_require__
)
;
module
.
l
=
true
;
return
module
.
exports
;
}
__webpack_require__
.
m
=
modules
;
__webpack_require__
.
c
=
installedModules
;
__webpack_require__
.
d
=
function
(
exports
name
getter
)
{
if
(
!
__webpack_require__
.
o
(
exports
name
)
)
{
Object
.
defineProperty
(
exports
name
{
enumerable
:
true
get
:
getter
}
)
;
}
}
;
__webpack_require__
.
r
=
function
(
exports
)
{
if
(
typeof
Symbol
!
=
=
'
undefined
'
&
&
Symbol
.
toStringTag
)
{
Object
.
defineProperty
(
exports
Symbol
.
toStringTag
{
value
:
'
Module
'
}
)
;
}
Object
.
defineProperty
(
exports
'
__esModule
'
{
value
:
true
}
)
;
}
;
__webpack_require__
.
t
=
function
(
value
mode
)
{
if
(
mode
&
1
)
value
=
__webpack_require__
(
value
)
;
if
(
mode
&
8
)
return
value
;
if
(
(
mode
&
4
)
&
&
typeof
value
=
=
=
'
object
'
&
&
value
&
&
value
.
__esModule
)
return
value
;
var
ns
=
Object
.
create
(
null
)
;
__webpack_require__
.
r
(
ns
)
;
Object
.
defineProperty
(
ns
'
default
'
{
enumerable
:
true
value
:
value
}
)
;
if
(
mode
&
2
&
&
typeof
value
!
=
'
string
'
)
for
(
var
key
in
value
)
__webpack_require__
.
d
(
ns
key
function
(
key
)
{
return
value
[
key
]
;
}
.
bind
(
null
key
)
)
;
return
ns
;
}
;
__webpack_require__
.
n
=
function
(
module
)
{
var
getter
=
module
&
&
module
.
__esModule
?
function
getDefault
(
)
{
return
module
[
'
default
'
]
;
}
:
function
getModuleExports
(
)
{
return
module
;
}
;
__webpack_require__
.
d
(
getter
'
a
'
getter
)
;
return
getter
;
}
;
__webpack_require__
.
o
=
function
(
object
property
)
{
return
Object
.
prototype
.
hasOwnProperty
.
call
(
object
property
)
;
}
;
__webpack_require__
.
p
=
"
"
;
return
__webpack_require__
(
__webpack_require__
.
s
=
0
)
;
}
)
(
[
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
var
react__WEBPACK_IMPORTED_MODULE_0__
=
__webpack_require__
(
1
)
;
var
react__WEBPACK_IMPORTED_MODULE_0___default
=
__webpack_require__
.
n
(
react__WEBPACK_IMPORTED_MODULE_0__
)
;
var
react_dom__WEBPACK_IMPORTED_MODULE_1__
=
__webpack_require__
(
2
)
;
var
react_dom__WEBPACK_IMPORTED_MODULE_1___default
=
__webpack_require__
.
n
(
react_dom__WEBPACK_IMPORTED_MODULE_1__
)
;
var
_components_MultiStageAboutWelcome__WEBPACK_IMPORTED_MODULE_2__
=
__webpack_require__
(
3
)
;
var
_components_ReturnToAMO__WEBPACK_IMPORTED_MODULE_3__
=
__webpack_require__
(
11
)
;
function
_extends
(
)
{
_extends
=
Object
.
assign
|
|
function
(
target
)
{
for
(
var
i
=
1
;
i
<
arguments
.
length
;
i
+
+
)
{
var
source
=
arguments
[
i
]
;
for
(
var
key
in
source
)
{
if
(
Object
.
prototype
.
hasOwnProperty
.
call
(
source
key
)
)
{
target
[
key
]
=
source
[
key
]
;
}
}
}
return
target
;
}
;
return
_extends
.
apply
(
this
arguments
)
;
}
class
AboutWelcome
extends
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
state
=
{
metricsFlowUri
:
null
}
;
this
.
fetchFxAFlowUri
=
this
.
fetchFxAFlowUri
.
bind
(
this
)
;
}
async
fetchFxAFlowUri
(
)
{
this
.
setState
(
{
metricsFlowUri
:
await
window
.
AWGetFxAMetricsFlowURI
(
)
}
)
;
}
componentDidMount
(
)
{
if
(
!
this
.
props
.
skipFxA
)
{
this
.
fetchFxAFlowUri
(
)
;
}
const
recordImpression
=
domState
=
>
{
const
{
domComplete
domInteractive
}
=
performance
.
getEntriesByType
(
"
navigation
"
)
.
pop
(
)
;
window
.
AWSendEventTelemetry
(
{
event
:
"
IMPRESSION
"
event_context
:
{
domComplete
domInteractive
mountStart
:
performance
.
getEntriesByName
(
"
mount
"
)
.
pop
(
)
.
startTime
domState
source
:
this
.
props
.
UTMTerm
page
:
"
about
:
welcome
"
}
message_id
:
this
.
props
.
messageId
}
)
;
}
;
if
(
document
.
readyState
=
=
=
"
complete
"
)
{
recordImpression
(
document
.
readyState
)
;
}
else
{
window
.
addEventListener
(
"
load
"
(
)
=
>
recordImpression
(
"
load
"
)
{
once
:
true
}
)
;
}
window
.
AWSendToParent
(
"
SET_WELCOME_MESSAGE_SEEN
"
this
.
props
.
messageId
)
;
}
render
(
)
{
const
{
props
}
=
this
;
if
(
props
.
template
=
=
=
"
return_to_amo
"
)
{
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_components_ReturnToAMO__WEBPACK_IMPORTED_MODULE_3__
[
"
ReturnToAMO
"
]
{
message_id
:
props
.
messageId
type
:
props
.
type
name
:
props
.
name
url
:
props
.
url
iconURL
:
props
.
iconURL
themeScreenshots
:
props
.
screenshots
metricsFlowUri
:
this
.
state
.
metricsFlowUri
}
)
;
}
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_components_MultiStageAboutWelcome__WEBPACK_IMPORTED_MODULE_2__
[
"
MultiStageAboutWelcome
"
]
{
message_id
:
props
.
messageId
screens
:
props
.
screens
metricsFlowUri
:
this
.
state
.
metricsFlowUri
utm_term
:
props
.
UTMTerm
transitions
:
props
.
transitions
backdrop
:
props
.
backdrop
appAndSystemLocaleInfo
:
props
.
appAndSystemLocaleInfo
}
)
;
}
}
function
ComputeTelemetryInfo
(
welcomeContent
experimentId
branchId
)
{
let
messageId
=
welcomeContent
.
template
=
=
=
"
return_to_amo
"
?
RTAMO_DEFAULT_WELCOME_
{
welcomeContent
.
type
.
toUpperCase
(
)
}
:
"
DEFAULT_ID
"
;
let
UTMTerm
=
"
default
"
;
if
(
welcomeContent
.
id
)
{
messageId
=
welcomeContent
.
id
.
toUpperCase
(
)
;
}
if
(
experimentId
&
&
branchId
)
{
UTMTerm
=
{
experimentId
}
-
{
branchId
}
.
toLowerCase
(
)
;
}
return
{
messageId
UTMTerm
}
;
}
async
function
retrieveRenderContent
(
)
{
let
featureConfig
=
await
window
.
AWGetFeatureConfig
(
)
;
let
{
messageId
UTMTerm
}
=
ComputeTelemetryInfo
(
featureConfig
featureConfig
.
slug
featureConfig
.
branch
&
&
featureConfig
.
branch
.
slug
)
;
return
{
featureConfig
messageId
UTMTerm
}
;
}
async
function
mount
(
)
{
let
{
featureConfig
:
aboutWelcomeProps
messageId
UTMTerm
}
=
await
retrieveRenderContent
(
)
;
react_dom__WEBPACK_IMPORTED_MODULE_1___default
.
a
.
render
(
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
AboutWelcome
_extends
(
{
messageId
:
messageId
UTMTerm
:
UTMTerm
}
aboutWelcomeProps
)
)
document
.
getElementById
(
"
root
"
)
)
;
}
performance
.
mark
(
"
mount
"
)
;
mount
(
)
;
}
)
(
function
(
module
exports
)
{
module
.
exports
=
React
;
}
)
(
function
(
module
exports
)
{
module
.
exports
=
ReactDOM
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
MultiStageAboutWelcome
"
function
(
)
{
return
MultiStageAboutWelcome
;
}
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
SecondaryCTA
"
function
(
)
{
return
SecondaryCTA
;
}
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
StepsIndicator
"
function
(
)
{
return
StepsIndicator
;
}
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
WelcomeScreen
"
function
(
)
{
return
WelcomeScreen
;
}
)
;
var
react__WEBPACK_IMPORTED_MODULE_0__
=
__webpack_require__
(
1
)
;
var
react__WEBPACK_IMPORTED_MODULE_0___default
=
__webpack_require__
.
n
(
react__WEBPACK_IMPORTED_MODULE_0__
)
;
var
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
=
__webpack_require__
(
4
)
;
var
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
=
__webpack_require__
(
5
)
;
var
_MultiStageProtonScreen__WEBPACK_IMPORTED_MODULE_3__
=
__webpack_require__
(
6
)
;
var
_LanguageSwitcher__WEBPACK_IMPORTED_MODULE_4__
=
__webpack_require__
(
9
)
;
var
_asrouter_templates_FirstRun_addUtmParams__WEBPACK_IMPORTED_MODULE_5__
=
__webpack_require__
(
10
)
;
const
TRANSITION_OUT_TIME
=
1000
;
const
MultiStageAboutWelcome
=
props
=
>
{
let
{
screens
}
=
props
;
const
[
index
setScreenIndex
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
0
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
screens
.
forEach
(
(
screen
order
)
=
>
{
if
(
index
=
=
=
order
)
{
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
[
"
AboutWelcomeUtils
"
]
.
sendImpressionTelemetry
(
{
props
.
message_id
}
_
{
order
}
_
{
screen
.
id
}
)
;
}
}
)
;
if
(
index
>
window
.
history
.
state
)
{
window
.
history
.
pushState
(
index
"
"
)
;
}
}
[
index
]
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
const
handler
=
(
{
state
}
)
=
>
setScreenIndex
(
Math
.
min
(
state
screens
.
length
-
1
)
)
;
handler
(
window
.
history
)
;
window
.
addEventListener
(
"
popstate
"
handler
)
;
return
(
)
=
>
window
.
removeEventListener
(
"
popstate
"
handler
)
;
}
[
]
)
;
const
[
flowParams
setFlowParams
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
null
)
;
const
{
metricsFlowUri
}
=
props
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
(
async
(
)
=
>
{
if
(
metricsFlowUri
)
{
setFlowParams
(
await
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
[
"
AboutWelcomeUtils
"
]
.
fetchFlowParams
(
metricsFlowUri
)
)
;
}
}
)
(
)
;
}
[
metricsFlowUri
]
)
;
const
[
transition
setTransition
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
props
.
transitions
?
"
in
"
:
"
"
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
if
(
transition
=
=
=
"
in
"
)
{
requestAnimationFrame
(
(
)
=
>
requestAnimationFrame
(
(
)
=
>
setTransition
(
"
"
)
)
)
;
}
}
[
transition
]
)
;
const
handleTransition
=
(
)
=
>
{
if
(
transition
=
=
=
"
out
"
)
{
return
;
}
setTransition
(
props
.
transitions
?
"
out
"
:
"
"
)
;
setTimeout
(
(
)
=
>
{
if
(
index
<
screens
.
length
-
1
)
{
setTransition
(
props
.
transitions
?
"
in
"
:
"
"
)
;
setScreenIndex
(
prevState
=
>
prevState
+
1
)
;
}
else
if
(
window
.
location
.
href
=
=
=
"
about
:
welcome
"
)
{
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
[
"
AboutWelcomeUtils
"
]
.
handleUserAction
(
{
type
:
"
OPEN_ABOUT_PAGE
"
data
:
{
args
:
"
home
"
where
:
"
current
"
}
}
)
;
}
}
props
.
transitions
?
TRANSITION_OUT_TIME
:
0
)
;
}
;
const
[
region
setRegion
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
null
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
(
async
(
)
=
>
{
setRegion
(
await
window
.
AWGetRegion
(
)
)
;
}
)
(
)
;
}
[
]
)
;
const
[
activeTheme
setActiveTheme
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
null
)
;
const
[
initialTheme
setInitialTheme
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
null
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
(
async
(
)
=
>
{
let
theme
=
await
window
.
AWGetSelectedTheme
(
)
;
setInitialTheme
(
theme
)
;
setActiveTheme
(
theme
)
;
}
)
(
)
;
}
[
]
)
;
const
useImportable
=
props
.
message_id
.
includes
(
"
IMPORTABLE
"
)
;
const
importTelemetrySent
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useRef
"
]
)
(
false
)
;
const
[
topSites
setTopSites
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
[
]
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
(
async
(
)
=
>
{
let
DEFAULT_SITES
=
await
window
.
AWGetDefaultSites
(
)
;
const
importable
=
JSON
.
parse
(
await
window
.
AWGetImportableSites
(
)
)
;
const
showImportable
=
useImportable
&
&
importable
.
length
>
=
5
;
if
(
!
importTelemetrySent
.
current
)
{
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
[
"
AboutWelcomeUtils
"
]
.
sendImpressionTelemetry
(
{
props
.
message_id
}
_SITES
{
display
:
showImportable
?
"
importable
"
:
"
static
"
importable
:
importable
.
length
}
)
;
importTelemetrySent
.
current
=
true
;
}
setTopSites
(
showImportable
?
{
data
:
importable
showImportable
}
:
{
data
:
DEFAULT_SITES
showImportable
}
)
;
}
)
(
)
;
}
[
useImportable
region
]
)
;
const
centeredScreens
=
props
.
screens
.
filter
(
s
=
>
s
.
content
.
position
!
=
=
"
corner
"
)
;
const
{
negotiatedLanguage
langPackInstallPhase
languageFilteredScreens
}
=
Object
(
_LanguageSwitcher__WEBPACK_IMPORTED_MODULE_4__
[
"
useLanguageSwitcher
"
]
)
(
props
.
appAndSystemLocaleInfo
screens
index
setScreenIndex
)
;
screens
=
languageFilteredScreens
;
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
Fragment
null
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
outer
-
wrapper
onboardingContainer
proton
transition
-
{
transition
}
style
:
props
.
backdrop
?
{
background
:
props
.
backdrop
}
:
{
}
}
screens
.
map
(
(
screen
order
)
=
>
{
const
isFirstCenteredScreen
=
screen
.
content
.
position
!
=
=
"
corner
"
&
&
screen
.
order
=
=
=
centeredScreens
[
0
]
.
order
;
const
isLastCenteredScreen
=
screen
.
content
.
position
!
=
=
"
corner
"
&
&
screen
.
order
=
=
=
centeredScreens
[
centeredScreens
.
length
-
1
]
.
order
;
return
index
=
=
=
order
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
WelcomeScreen
{
key
:
screen
.
id
+
order
id
:
screen
.
id
totalNumberOfScreens
:
screens
.
length
isFirstCenteredScreen
:
isFirstCenteredScreen
isLastCenteredScreen
:
isLastCenteredScreen
order
:
order
autoClose
:
screen
.
autoClose
content
:
screen
.
content
navigate
:
handleTransition
topSites
:
topSites
messageId
:
{
props
.
message_id
}
_
{
order
}
_
{
screen
.
id
}
UTMTerm
:
props
.
utm_term
flowParams
:
flowParams
activeTheme
:
activeTheme
initialTheme
:
initialTheme
setActiveTheme
:
setActiveTheme
appAndSystemLocaleInfo
:
props
.
appAndSystemLocaleInfo
negotiatedLanguage
:
negotiatedLanguage
langPackInstallPhase
:
langPackInstallPhase
}
)
:
null
;
}
)
)
)
;
}
;
const
SecondaryCTA
=
props
=
>
{
let
targetElement
=
props
.
position
?
secondary_button_
{
props
.
position
}
:
secondary_button
;
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
props
.
position
?
secondary
-
cta
{
props
.
position
}
:
"
secondary
-
cta
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
props
.
content
[
targetElement
]
.
text
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
span
"
null
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
props
.
content
[
targetElement
]
.
label
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
button
"
{
className
:
"
secondary
text
-
link
"
value
:
targetElement
onClick
:
props
.
handleAction
}
)
)
)
;
}
;
const
StepsIndicator
=
props
=
>
{
let
steps
=
[
]
;
for
(
let
i
=
0
;
i
<
props
.
totalNumberOfScreens
;
i
+
+
)
{
let
className
=
i
=
=
=
props
.
order
?
"
current
"
:
"
"
;
steps
.
push
(
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
key
:
i
className
:
indicator
{
className
}
}
)
)
;
}
return
steps
;
}
;
class
WelcomeScreen
extends
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
handleAction
=
this
.
handleAction
.
bind
(
this
)
;
}
handleOpenURL
(
action
flowParams
UTMTerm
)
{
let
{
type
data
}
=
action
;
if
(
type
=
=
=
"
SHOW_FIREFOX_ACCOUNTS
"
)
{
let
params
=
{
.
.
.
_asrouter_templates_FirstRun_addUtmParams__WEBPACK_IMPORTED_MODULE_5__
[
"
BASE_PARAMS
"
]
utm_term
:
aboutwelcome
-
{
UTMTerm
}
-
screen
}
;
if
(
action
.
addFlowParams
&
&
flowParams
)
{
params
=
{
.
.
.
params
.
.
.
flowParams
}
;
}
data
=
{
.
.
.
data
extraParams
:
params
}
;
}
else
if
(
type
=
=
=
"
OPEN_URL
"
)
{
let
url
=
new
URL
(
data
.
args
)
;
Object
(
_asrouter_templates_FirstRun_addUtmParams__WEBPACK_IMPORTED_MODULE_5__
[
"
addUtmParams
"
]
)
(
url
aboutwelcome
-
{
UTMTerm
}
-
screen
)
;
if
(
action
.
addFlowParams
&
&
flowParams
)
{
url
.
searchParams
.
append
(
"
device_id
"
flowParams
.
deviceId
)
;
url
.
searchParams
.
append
(
"
flow_id
"
flowParams
.
flowId
)
;
url
.
searchParams
.
append
(
"
flow_begin_time
"
flowParams
.
flowBeginTime
)
;
}
data
=
{
.
.
.
data
args
:
url
.
toString
(
)
}
;
}
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
[
"
AboutWelcomeUtils
"
]
.
handleUserAction
(
{
type
data
}
)
;
}
async
handleAction
(
event
)
{
let
{
props
}
=
this
;
let
targetContent
=
props
.
content
[
event
.
currentTarget
.
value
]
|
|
props
.
content
.
tiles
|
|
props
.
content
.
languageSwitcher
;
if
(
!
(
targetContent
&
&
targetContent
.
action
)
)
{
return
;
}
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
[
"
AboutWelcomeUtils
"
]
.
sendActionTelemetry
(
props
.
messageId
event
.
currentTarget
.
value
)
;
let
{
action
}
=
targetContent
;
if
(
[
"
OPEN_URL
"
"
SHOW_FIREFOX_ACCOUNTS
"
]
.
includes
(
action
.
type
)
)
{
this
.
handleOpenURL
(
action
props
.
flowParams
props
.
UTMTerm
)
;
}
else
if
(
action
.
type
)
{
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
[
"
AboutWelcomeUtils
"
]
.
handleUserAction
(
action
)
;
if
(
action
.
type
=
=
=
"
SHOW_MIGRATION_WIZARD
"
)
{
await
window
.
AWWaitForMigrationClose
(
)
;
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
[
"
AboutWelcomeUtils
"
]
.
sendActionTelemetry
(
props
.
messageId
"
migrate_close
"
)
;
}
}
if
(
action
.
theme
)
{
let
themeToUse
=
action
.
theme
=
=
=
"
<
event
>
"
?
event
.
currentTarget
.
value
:
this
.
props
.
initialTheme
|
|
action
.
theme
;
this
.
props
.
setActiveTheme
(
themeToUse
)
;
window
.
AWSelectTheme
(
themeToUse
)
;
}
if
(
action
.
navigate
)
{
props
.
navigate
(
)
;
}
}
render
(
)
{
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MultiStageProtonScreen__WEBPACK_IMPORTED_MODULE_3__
[
"
MultiStageProtonScreen
"
]
{
content
:
this
.
props
.
content
id
:
this
.
props
.
id
order
:
this
.
props
.
order
autoClose
:
this
.
props
.
autoClose
activeTheme
:
this
.
props
.
activeTheme
totalNumberOfScreens
:
this
.
props
.
totalNumberOfScreens
-
1
appAndSystemLocaleInfo
:
this
.
props
.
appAndSystemLocaleInfo
negotiatedLanguage
:
this
.
props
.
negotiatedLanguage
langPackInstallPhase
:
this
.
props
.
langPackInstallPhase
handleAction
:
this
.
handleAction
messageId
:
this
.
props
.
messageId
isFirstCenteredScreen
:
this
.
props
.
isFirstCenteredScreen
isLastCenteredScreen
:
this
.
props
.
isLastCenteredScreen
}
)
;
}
}
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
Localized
"
function
(
)
{
return
Localized
;
}
)
;
var
react__WEBPACK_IMPORTED_MODULE_0__
=
__webpack_require__
(
1
)
;
var
react__WEBPACK_IMPORTED_MODULE_0___default
=
__webpack_require__
.
n
(
react__WEBPACK_IMPORTED_MODULE_0__
)
;
const
MS_STRING_PROP
=
"
string_id
"
;
const
Localized
=
(
{
text
children
}
)
=
>
{
if
(
!
text
)
{
return
null
;
}
let
props
=
children
?
children
.
props
:
{
}
;
let
textNode
;
if
(
typeof
text
=
=
=
"
object
"
&
&
text
[
MS_STRING_PROP
]
)
{
props
=
{
.
.
.
props
}
;
props
[
"
data
-
l10n
-
id
"
]
=
text
[
MS_STRING_PROP
]
;
if
(
text
.
args
)
props
[
"
data
-
l10n
-
args
"
]
=
JSON
.
stringify
(
text
.
args
)
;
}
else
if
(
typeof
text
=
=
=
"
string
"
)
{
textNode
=
text
;
}
if
(
!
children
)
{
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
span
"
props
textNode
)
;
}
else
if
(
textNode
)
{
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
cloneElement
(
children
props
textNode
)
;
}
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
cloneElement
(
children
props
)
;
}
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
AboutWelcomeUtils
"
function
(
)
{
return
AboutWelcomeUtils
;
}
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
DEFAULT_RTAMO_CONTENT
"
function
(
)
{
return
DEFAULT_RTAMO_CONTENT
;
}
)
;
const
AboutWelcomeUtils
=
{
handleUserAction
(
action
)
{
window
.
AWSendToParent
(
"
SPECIAL_ACTION
"
action
)
;
}
sendImpressionTelemetry
(
messageId
context
)
{
window
.
AWSendEventTelemetry
(
{
event
:
"
IMPRESSION
"
event_context
:
context
message_id
:
messageId
}
)
;
}
sendActionTelemetry
(
messageId
elementId
)
{
const
ping
=
{
event
:
"
CLICK_BUTTON
"
event_context
:
{
source
:
elementId
page
:
"
about
:
welcome
"
}
message_id
:
messageId
}
;
window
.
AWSendEventTelemetry
(
ping
)
;
}
async
fetchFlowParams
(
metricsFlowUri
)
{
let
flowParams
;
try
{
const
response
=
await
fetch
(
metricsFlowUri
{
credentials
:
"
omit
"
}
)
;
if
(
response
.
status
=
=
=
200
)
{
const
{
deviceId
flowId
flowBeginTime
}
=
await
response
.
json
(
)
;
flowParams
=
{
deviceId
flowId
flowBeginTime
}
;
}
else
{
console
.
error
(
"
Non
-
200
response
"
response
)
;
}
}
catch
(
e
)
{
flowParams
=
null
;
}
return
flowParams
;
}
sendEvent
(
type
detail
)
{
document
.
dispatchEvent
(
new
CustomEvent
(
AWPage
:
{
type
}
{
bubbles
:
true
detail
}
)
)
;
}
}
;
const
DEFAULT_RTAMO_CONTENT
=
{
template
:
"
return_to_amo
"
utm_term
:
"
rtamo
"
order
:
0
content
:
{
position
:
"
corner
"
hero_text
:
{
string_id
:
"
mr1
-
welcome
-
screen
-
hero
-
text
"
}
title
:
{
string_id
:
"
return
-
to
-
amo
-
subtitle
"
}
has_noodles
:
true
subtitle
:
{
string_id
:
"
return
-
to
-
amo
-
addon
-
title
"
}
help_text
:
{
text
:
{
string_id
:
"
mr1
-
onboarding
-
welcome
-
image
-
caption
"
}
}
hide_logo
:
true
backdrop
:
"
#
212121
url
(
chrome
:
/
/
activity
-
stream
/
content
/
data
/
content
/
assets
/
proton
-
bkg
.
avif
)
center
/
cover
no
-
repeat
fixed
"
primary_button
:
{
label
:
{
string_id
:
"
return
-
to
-
amo
-
add
-
extension
-
label
"
}
source_id
:
"
ADD_EXTENSION_BUTTON
"
action
:
{
type
:
"
INSTALL_ADDON_FROM_URL
"
data
:
{
url
:
null
telemetrySource
:
"
rtamo
"
}
}
}
secondary_button
:
{
label
:
{
string_id
:
"
onboarding
-
not
-
now
-
button
-
label
"
}
source_id
:
"
RTAMO_START_BROWSING_BUTTON
"
action
:
{
type
:
"
OPEN_AWESOME_BAR
"
}
}
secondary_button_top
:
{
label
:
{
string_id
:
"
mr1
-
onboarding
-
sign
-
in
-
button
-
label
"
}
source_id
:
"
RTAMO_FXA_SIGNIN_BUTTON
"
action
:
{
data
:
{
entrypoint
:
"
activity
-
stream
-
firstrun
"
}
type
:
"
SHOW_FIREFOX_ACCOUNTS
"
addFlowParams
:
true
}
}
}
}
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
MultiStageProtonScreen
"
function
(
)
{
return
MultiStageProtonScreen
;
}
)
;
var
react__WEBPACK_IMPORTED_MODULE_0__
=
__webpack_require__
(
1
)
;
var
react__WEBPACK_IMPORTED_MODULE_0___default
=
__webpack_require__
.
n
(
react__WEBPACK_IMPORTED_MODULE_0__
)
;
var
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
=
__webpack_require__
(
4
)
;
var
_Colorways__WEBPACK_IMPORTED_MODULE_2__
=
__webpack_require__
(
7
)
;
var
_Themes__WEBPACK_IMPORTED_MODULE_3__
=
__webpack_require__
(
8
)
;
var
_MultiStageAboutWelcome__WEBPACK_IMPORTED_MODULE_4__
=
__webpack_require__
(
3
)
;
var
_LanguageSwitcher__WEBPACK_IMPORTED_MODULE_5__
=
__webpack_require__
(
9
)
;
class
MultiStageProtonScreen
extends
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
PureComponent
{
componentDidMount
(
)
{
this
.
mainContentHeader
.
focus
(
)
;
}
getLogoStyle
(
content
)
{
if
(
!
content
.
hide_logo
)
{
const
useDefaultLogo
=
!
content
.
logo
;
const
logoUrl
=
useDefaultLogo
?
"
chrome
:
/
/
branding
/
content
/
about
-
logo
.
svg
"
:
content
.
logo
.
imageURL
;
const
logoSize
=
useDefaultLogo
?
"
80px
"
:
content
.
logo
.
size
;
return
{
background
:
url
(
'
{
logoUrl
}
'
)
top
center
/
{
logoSize
}
no
-
repeat
height
:
logoSize
padding
:
{
logoSize
}
0
10px
}
;
}
return
{
}
;
}
handleAutoClose
(
windowObj
currentURL
)
{
const
autoCloseTime
=
20000
;
setTimeout
(
function
(
)
{
const
screenEl
=
windowObj
.
document
.
querySelector
(
"
.
screen
"
)
;
if
(
windowObj
.
location
.
href
=
=
=
currentURL
&
&
screenEl
.
className
.
includes
(
"
dialog
-
last
"
)
)
{
windowObj
.
location
.
href
=
"
about
:
home
"
;
}
}
autoCloseTime
)
;
}
getScreenClassName
(
isCornerPosition
isFirstCenteredScreen
isLastCenteredScreen
)
{
const
screenClass
=
isCornerPosition
?
"
"
:
screen
-
{
this
.
props
.
order
%
2
!
=
=
0
?
1
:
2
}
;
return
{
isFirstCenteredScreen
?
dialog
-
initial
:
}
{
isLastCenteredScreen
?
dialog
-
last
:
}
{
screenClass
}
;
}
renderContentTiles
(
)
{
const
{
content
}
=
this
.
props
;
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
Fragment
null
content
.
tiles
&
&
content
.
tiles
.
type
=
=
=
"
colorway
"
&
&
content
.
tiles
.
colorways
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_Colorways__WEBPACK_IMPORTED_MODULE_2__
[
"
Colorways
"
]
{
content
:
content
activeTheme
:
this
.
props
.
activeTheme
handleAction
:
this
.
props
.
handleAction
}
)
:
null
content
.
tiles
&
&
content
.
tiles
.
type
=
=
=
"
theme
"
&
&
content
.
tiles
.
data
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_Themes__WEBPACK_IMPORTED_MODULE_3__
[
"
Themes
"
]
{
content
:
content
activeTheme
:
this
.
props
.
activeTheme
handleAction
:
this
.
props
.
handleAction
}
)
:
null
)
;
}
renderNoodles
(
includeNoodles
isCornerPosition
)
{
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
Fragment
null
includeNoodles
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
noodle
orange
-
L
}
)
:
null
includeNoodles
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
noodle
purple
-
C
}
)
:
null
isCornerPosition
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
noodle
solid
-
L
}
)
:
null
includeNoodles
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
noodle
outline
-
L
}
)
:
null
includeNoodles
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
noodle
yellow
-
circle
}
)
:
null
)
;
}
renderLanguageSwitcher
(
)
{
return
this
.
props
.
content
.
languageSwitcher
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_LanguageSwitcher__WEBPACK_IMPORTED_MODULE_5__
[
"
LanguageSwitcher
"
]
{
content
:
this
.
props
.
content
langPackInstalled
:
this
.
props
.
langPackInstalled
handleAction
:
this
.
props
.
handleAction
negotiatedLanguage
:
this
.
props
.
negotiatedLanguage
langPackInstallPhase
:
this
.
props
.
langPackInstallPhase
messageId
:
this
.
props
.
messageId
}
)
:
null
;
}
render
(
)
{
var
_this
props
appAndSys
_content
primary_butt
;
const
{
autoClose
content
isRtamo
isTheme
isFirstCenteredScreen
isLastCenteredScreen
totalNumberOfScreens
:
total
}
=
this
.
props
;
const
windowObj
=
this
.
props
.
windowObj
|
|
window
;
let
currentURL
=
windowObj
.
location
.
href
;
const
includeNoodles
=
content
.
has_noodles
;
const
isCornerPosition
=
content
.
position
=
=
=
"
corner
"
;
const
hideStepsIndicator
=
autoClose
|
|
isCornerPosition
;
const
screenClassName
=
this
.
getScreenClassName
(
isCornerPosition
isFirstCenteredScreen
isLastCenteredScreen
)
;
if
(
autoClose
)
{
this
.
handleAutoClose
(
windowObj
currentURL
)
;
}
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
main
"
{
className
:
screen
{
this
.
props
.
id
|
|
"
"
}
{
screenClassName
}
role
:
"
dialog
"
pos
:
content
.
position
|
|
"
center
"
tabIndex
:
"
-
1
"
"
aria
-
labelledby
"
:
"
mainContentHeader
"
ref
:
input
=
>
{
this
.
mainContentHeader
=
input
;
}
}
isCornerPosition
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
section
-
left
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
message
-
text
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
spacer
-
top
"
}
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
content
.
hero_text
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
h1
"
null
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
spacer
-
bottom
"
}
)
)
content
.
help_text
&
&
content
.
help_text
.
text
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
content
.
help_text
.
text
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
span
"
{
className
:
"
attrib
-
text
"
}
)
)
:
null
)
:
null
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
section
-
main
{
includeNoodles
?
"
with
-
noodles
"
:
"
"
}
}
content
.
secondary_button_top
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MultiStageAboutWelcome__WEBPACK_IMPORTED_MODULE_4__
[
"
SecondaryCTA
"
]
{
content
:
content
handleAction
:
this
.
props
.
handleAction
position
:
"
top
"
}
)
:
null
this
.
renderNoodles
(
includeNoodles
isCornerPosition
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
main
-
content
{
hideStepsIndicator
?
"
no
-
steps
"
:
"
"
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
brand
-
logo
{
content
.
hide_logo
?
"
hide
"
:
"
"
}
style
:
this
.
getLogoStyle
(
content
)
}
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
{
isRtamo
?
"
rtamo
-
icon
"
:
"
hide
-
rtamo
-
icon
"
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
img
"
{
className
:
{
isTheme
?
"
rtamo
-
theme
-
icon
"
:
"
"
}
src
:
this
.
props
.
iconURL
role
:
"
presentation
"
alt
:
"
"
}
)
)
content
.
has_fancy_title
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
confetti
"
}
)
:
null
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
main
-
content
-
inner
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
welcome
-
text
{
content
.
has_fancy_title
?
"
fancy
-
headings
"
:
"
"
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
content
.
title
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
h1
"
{
id
:
"
mainContentHeader
"
}
)
)
content
.
subtitle
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
content
.
subtitle
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
h2
"
{
"
data
-
l10n
-
args
"
:
JSON
.
stringify
(
{
"
addon
-
name
"
:
this
.
props
.
addonName
.
.
.
(
(
_this
props
appAndSys
=
this
.
props
.
appAndSystemLocaleInfo
)
=
=
=
null
|
|
_this
props
appAndSys
=
=
=
void
0
?
void
0
:
_this
props
appAndSys
.
displayNames
)
}
)
}
)
)
:
null
)
this
.
renderContentTiles
(
)
this
.
renderLanguageSwitcher
(
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
null
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
content
.
primary_button
?
content
.
primary_button
.
label
:
null
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
button
"
{
className
:
"
primary
"
value
:
"
primary_button
"
disabled
:
(
(
_content
primary_butt
=
content
.
primary_button
)
=
=
=
null
|
|
_content
primary_butt
=
=
=
void
0
?
void
0
:
_content
primary_butt
.
disabled
)
=
=
=
true
onClick
:
this
.
props
.
handleAction
}
)
)
content
.
secondary_button
?
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MultiStageAboutWelcome__WEBPACK_IMPORTED_MODULE_4__
[
"
SecondaryCTA
"
]
{
content
:
content
handleAction
:
this
.
props
.
handleAction
}
)
:
null
)
)
hideStepsIndicator
?
null
:
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
nav
"
{
className
:
"
steps
"
"
data
-
l10n
-
id
"
:
"
onboarding
-
welcome
-
steps
-
indicator
"
"
data
-
l10n
-
args
"
:
JSON
.
stringify
(
{
current
:
this
.
props
.
order
total
}
)
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
br
"
null
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
p
"
null
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MultiStageAboutWelcome__WEBPACK_IMPORTED_MODULE_4__
[
"
StepsIndicator
"
]
{
order
:
this
.
props
.
order
-
1
totalNumberOfScreens
:
total
}
)
)
)
)
)
;
}
}
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
VariationsCircle
"
function
(
)
{
return
VariationsCircle
;
}
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
computeColorWay
"
function
(
)
{
return
computeColorWay
;
}
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
Colorways
"
function
(
)
{
return
Colorways
;
}
)
;
var
react__WEBPACK_IMPORTED_MODULE_0__
=
__webpack_require__
(
1
)
;
var
react__WEBPACK_IMPORTED_MODULE_0___default
=
__webpack_require__
.
n
(
react__WEBPACK_IMPORTED_MODULE_0__
)
;
var
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
=
__webpack_require__
(
4
)
;
const
VariationsCircle
=
props
=
>
{
const
{
activeTheme
colorway
colorwayText
nextColor
setVariation
transition
variations
}
=
props
;
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
colorway
-
variations
{
colorway
}
{
transition
}
next
:
nextColor
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
variations
-
disc
"
}
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
colorwayText
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
colorway
-
text
"
}
)
)
variations
=
=
=
null
|
|
variations
=
=
=
void
0
?
void
0
:
variations
.
map
(
(
{
id
label
tooltip
description
}
)
=
>
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
key
:
id
text
:
typeof
tooltip
=
=
=
"
object
"
?
tooltip
:
{
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
label
"
{
className
:
"
theme
colorway
"
title
:
label
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
typeof
description
=
=
=
"
object
"
?
description
:
{
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
input
"
{
type
:
"
radio
"
value
:
colorway
=
=
=
"
default
"
?
id
:
{
colorway
}
-
{
id
}
checked
:
activeTheme
=
=
=
null
|
|
activeTheme
=
=
=
void
0
?
void
0
:
activeTheme
.
includes
(
id
)
name
:
"
variationSelect
"
className
:
"
sr
-
only
input
"
onClick
:
setVariation
"
data
-
l10n
-
attrs
"
:
"
aria
-
description
"
}
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
label
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
text
variation
-
button
{
activeTheme
!
=
=
null
&
&
activeTheme
!
=
=
void
0
&
&
activeTheme
.
includes
(
id
)
?
"
selected
"
:
"
"
}
}
)
)
)
)
)
)
;
}
;
function
computeColorWay
(
themeName
systemVariations
)
{
return
!
themeName
|
|
themeName
=
=
=
"
alpenglow
"
|
|
systemVariations
.
find
(
variation
=
>
themeName
=
=
=
variation
.
id
)
?
"
default
"
:
themeName
.
split
(
"
-
"
)
[
0
]
;
}
function
Colorways
(
props
)
{
var
_colorways
find
;
let
{
colorways
defaultVariationIndex
systemVariations
variations
}
=
props
.
content
.
tiles
;
const
activeId
=
computeColorWay
(
props
.
activeTheme
systemVariations
)
;
const
[
colorwayId
setState
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
activeId
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
setState
(
computeColorWay
(
props
.
activeTheme
systemVariations
)
)
;
}
[
props
.
activeTheme
]
)
;
const
[
transition
setTransition
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
"
"
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
if
(
transition
=
=
=
"
in
"
)
{
let
variationIndex
=
systemVariations
.
findIndex
(
(
{
id
}
)
=
>
id
=
=
=
props
.
activeTheme
)
;
if
(
variationIndex
<
0
)
{
variationIndex
=
variations
.
findIndex
(
(
{
id
}
)
=
>
props
.
activeTheme
.
includes
(
id
)
)
;
}
if
(
variationIndex
<
0
)
{
variationIndex
=
defaultVariationIndex
;
}
props
.
handleAction
(
{
currentTarget
:
{
value
:
colorwayId
=
=
=
"
default
"
?
systemVariations
[
variationIndex
]
.
id
:
{
colorwayId
}
-
{
variations
[
variationIndex
]
.
id
}
}
}
)
;
requestAnimationFrame
(
(
)
=
>
requestAnimationFrame
(
(
)
=
>
setTransition
(
"
"
)
)
)
;
}
}
[
transition
]
)
;
function
handleColorwayClick
(
event
)
{
setState
(
event
.
currentTarget
.
dataset
.
colorway
)
;
if
(
transition
!
=
=
"
out
"
)
{
setTransition
(
"
out
"
)
;
setTimeout
(
(
)
=
>
setTransition
(
"
in
"
)
500
)
;
}
}
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
tiles
-
theme
-
container
colorway
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
null
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
fieldset
"
{
className
:
"
tiles
-
theme
-
section
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
props
.
content
.
subtitle
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
legend
"
{
className
:
"
sr
-
only
"
}
)
)
colorways
.
map
(
(
{
id
label
tooltip
description
}
)
=
>
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
key
:
id
+
label
text
:
typeof
tooltip
=
=
=
"
object
"
?
tooltip
:
{
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
label
"
{
className
:
"
theme
colorway
"
title
:
label
"
data
-
l10n
-
args
"
:
JSON
.
stringify
(
{
colorwayName
:
label
}
)
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
typeof
description
=
=
=
"
object
"
?
description
:
{
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
span
"
{
className
:
"
sr
-
only
colorway
label
"
id
:
{
id
}
-
label
"
data
-
l10n
-
args
"
:
JSON
.
stringify
(
{
colorwayName
:
label
}
)
}
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
typeof
description
=
=
=
"
object
"
?
description
:
{
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
input
"
{
type
:
"
radio
"
"
data
-
colorway
"
:
id
name
:
"
theme
"
checked
:
colorwayId
=
=
=
id
className
:
"
sr
-
only
input
"
onClick
:
handleColorwayClick
"
data
-
l10n
-
attrs
"
:
"
aria
-
description
"
"
data
-
l10n
-
args
"
:
JSON
.
stringify
(
{
colorwayName
:
label
}
)
"
aria
-
labelledby
"
:
{
id
}
-
label
}
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
icon
colorway
{
colorwayId
=
=
=
id
?
"
selected
"
:
"
"
}
{
id
}
}
)
)
)
)
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
VariationsCircle
{
nextColor
:
colorwayId
transition
:
transition
variations
:
activeId
=
=
=
"
default
"
?
systemVariations
:
variations
colorway
:
activeId
colorwayText
:
(
_colorways
find
=
colorways
.
find
(
colorway
=
>
colorway
.
id
=
=
=
activeId
)
)
=
=
=
null
|
|
_colorways
find
=
=
=
void
0
?
void
0
:
_colorways
find
.
label
setVariation
:
props
.
handleAction
activeTheme
:
props
.
activeTheme
}
)
)
;
}
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
Themes
"
function
(
)
{
return
Themes
;
}
)
;
var
react__WEBPACK_IMPORTED_MODULE_0__
=
__webpack_require__
(
1
)
;
var
react__WEBPACK_IMPORTED_MODULE_0___default
=
__webpack_require__
.
n
(
react__WEBPACK_IMPORTED_MODULE_0__
)
;
var
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
=
__webpack_require__
(
4
)
;
const
Themes
=
props
=
>
{
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
tiles
-
theme
-
container
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
null
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
fieldset
"
{
className
:
"
tiles
-
theme
-
section
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
props
.
content
.
subtitle
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
legend
"
{
className
:
"
sr
-
only
"
}
)
)
props
.
content
.
tiles
.
data
.
map
(
(
{
theme
label
tooltip
description
}
)
=
>
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
key
:
theme
+
label
text
:
typeof
tooltip
=
=
=
"
object
"
?
tooltip
:
{
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
label
"
{
className
:
"
theme
"
title
:
theme
+
label
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
typeof
description
=
=
=
"
object
"
?
description
:
{
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
input
"
{
type
:
"
radio
"
value
:
theme
name
:
"
theme
"
checked
:
theme
=
=
=
props
.
activeTheme
className
:
"
sr
-
only
input
"
onClick
:
props
.
handleAction
"
data
-
l10n
-
attrs
"
:
"
aria
-
description
"
}
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
icon
{
theme
=
=
=
props
.
activeTheme
?
"
selected
"
:
"
"
}
{
theme
}
}
)
label
&
&
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
label
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
text
"
}
)
)
)
)
)
)
)
)
;
}
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
useLanguageSwitcher
"
function
(
)
{
return
useLanguageSwitcher
;
}
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
LanguageSwitcher
"
function
(
)
{
return
LanguageSwitcher
;
}
)
;
var
react__WEBPACK_IMPORTED_MODULE_0__
=
__webpack_require__
(
1
)
;
var
react__WEBPACK_IMPORTED_MODULE_0___default
=
__webpack_require__
.
n
(
react__WEBPACK_IMPORTED_MODULE_0__
)
;
var
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
=
__webpack_require__
(
4
)
;
var
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
=
__webpack_require__
(
5
)
;
function
useLanguageSwitcher
(
appAndSystemLocaleInfo
screens
screenIndex
setScreenIndex
)
{
const
languageMismatchScreenIndex
=
screens
.
findIndex
(
(
{
id
}
)
=
>
id
=
=
=
"
AW_LANGUAGE_MISMATCH
"
)
;
const
screen
=
screens
[
languageMismatchScreenIndex
]
;
const
[
negotiatedLanguage
setNegotiatedLanguage
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
null
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
function
getNegotiatedLanguage
(
)
{
if
(
!
appAndSystemLocaleInfo
)
{
return
;
}
if
(
appAndSystemLocaleInfo
.
matchType
!
=
=
"
language
-
mismatch
"
)
{
return
;
}
(
async
(
)
=
>
{
const
langPack
=
await
window
.
AWNegotiateLangPackForLanguageMismatch
(
appAndSystemLocaleInfo
)
;
if
(
langPack
)
{
const
displayNames
=
new
Intl
.
DisplayNames
(
appAndSystemLocaleInfo
.
appLocaleRaw
{
type
:
"
language
"
}
)
;
setNegotiatedLanguage
(
{
displayName
:
displayNames
.
of
(
langPack
.
target_locale
)
langPack
requestSystemLocales
:
[
langPack
.
target_locale
appAndSystemLocaleInfo
.
appLocaleRaw
]
}
)
;
}
else
{
setNegotiatedLanguage
(
{
displayName
:
null
langPack
:
null
requestSystemLocales
:
null
}
)
;
}
}
)
(
)
;
}
[
appAndSystemLocaleInfo
]
)
;
const
[
langPackInstallPhase
setLangPackInstallPhase
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
"
before
-
installation
"
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
function
ensureLangPackInstalled
(
)
{
if
(
!
negotiatedLanguage
)
{
return
;
}
setLangPackInstallPhase
(
"
installing
"
)
;
window
.
AWEnsureLangPackInstalled
(
negotiatedLanguage
.
langPack
)
.
then
(
(
)
=
>
{
setLangPackInstallPhase
(
"
installed
"
)
;
}
error
=
>
{
console
.
error
(
error
)
;
setLangPackInstallPhase
(
"
installation
-
error
"
)
;
}
)
;
}
[
negotiatedLanguage
]
)
;
const
shouldHideLanguageSwitcher
=
screen
&
&
(
appAndSystemLocaleInfo
=
=
=
null
|
|
appAndSystemLocaleInfo
=
=
=
void
0
?
void
0
:
appAndSystemLocaleInfo
.
matchType
)
!
=
=
"
language
-
mismatch
"
;
const
[
languageFilteredScreens
setLanguageFilteredScreens
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
screens
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
function
filterScreen
(
)
{
if
(
shouldHideLanguageSwitcher
|
|
(
negotiatedLanguage
=
=
=
null
|
|
negotiatedLanguage
=
=
=
void
0
?
void
0
:
negotiatedLanguage
.
langPack
)
=
=
=
null
)
{
if
(
screenIndex
>
languageMismatchScreenIndex
)
{
setScreenIndex
(
screenIndex
-
1
)
;
}
setLanguageFilteredScreens
(
screens
.
filter
(
s
=
>
s
.
id
!
=
=
"
AW_LANGUAGE_MISMATCH
"
)
)
;
}
else
{
setLanguageFilteredScreens
(
screens
)
;
}
}
[
screens
negotiatedLanguage
]
)
;
return
{
negotiatedLanguage
langPackInstallPhase
languageFilteredScreens
}
;
}
function
LanguageSwitcher
(
props
)
{
const
{
content
negotiatedLanguage
langPackInstallPhase
}
=
props
;
const
[
isAwaitingLangpack
setIsAwaitingLangpack
]
=
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useState
"
]
)
(
false
)
;
Object
(
react__WEBPACK_IMPORTED_MODULE_0__
[
"
useEffect
"
]
)
(
(
)
=
>
{
if
(
isAwaitingLangpack
&
&
langPackInstallPhase
!
=
=
"
installing
"
)
{
window
.
AWSetRequestedLocales
(
negotiatedLanguage
.
requestSystemLocales
)
;
requestAnimationFrame
(
(
)
=
>
{
props
.
handleAction
(
{
currentTarget
:
{
value
:
"
download_complete
"
}
}
)
;
}
)
;
}
}
[
isAwaitingLangpack
langPackInstallPhase
]
)
;
const
withMessageArgs
=
obj
=
>
{
const
displayName
=
negotiatedLanguage
=
=
=
null
|
|
negotiatedLanguage
=
=
=
void
0
?
void
0
:
negotiatedLanguage
.
displayName
;
if
(
displayName
)
{
return
{
.
.
.
obj
args
:
{
.
.
.
obj
.
args
negotiatedLanguage
:
displayName
}
}
;
}
return
obj
;
}
;
let
showWaitingScreen
=
false
;
let
showPreloadingScreen
=
false
;
let
showReadyScreen
=
false
;
if
(
isAwaitingLangpack
&
&
langPackInstallPhase
!
=
=
"
installed
"
)
{
showWaitingScreen
=
true
;
}
else
if
(
langPackInstallPhase
=
=
=
"
before
-
installation
"
)
{
showPreloadingScreen
=
true
;
}
else
{
showReadyScreen
=
true
;
}
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
Fragment
null
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
style
:
{
display
:
showPreloadingScreen
?
"
block
"
:
"
none
"
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
button
"
{
className
:
"
primary
"
value
:
"
primary_button
"
disabled
:
true
type
:
"
button
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
img
"
{
className
:
"
language
-
loader
"
src
:
"
chrome
:
/
/
browser
/
skin
/
tabbrowser
/
tab
-
connecting
.
png
"
alt
:
"
"
}
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
content
.
languageSwitcher
.
waiting
}
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
secondary
-
cta
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
content
.
languageSwitcher
.
skip
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
button
"
{
value
:
"
decline_waiting
"
type
:
"
button
"
className
:
"
secondary
text
-
link
"
onClick
:
props
.
handleAction
}
)
)
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
style
:
{
display
:
showWaitingScreen
?
"
block
"
:
"
none
"
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
button
"
{
className
:
"
primary
"
value
:
"
primary_button
"
disabled
:
true
type
:
"
button
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
img
"
{
className
:
"
language
-
loader
"
src
:
"
chrome
:
/
/
browser
/
skin
/
tabbrowser
/
tab
-
connecting
.
png
"
alt
:
"
"
}
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
withMessageArgs
(
content
.
languageSwitcher
.
downloading
)
}
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
secondary
-
cta
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
content
.
languageSwitcher
.
cancel
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
button
"
{
type
:
"
button
"
className
:
"
secondary
text
-
link
"
onClick
:
(
)
=
>
{
setIsAwaitingLangpack
(
false
)
;
props
.
handleAction
(
{
currentTarget
:
{
value
:
"
cancel_waiting
"
}
}
)
;
}
}
)
)
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
style
:
{
display
:
showReadyScreen
?
"
block
"
:
"
none
"
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
null
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
withMessageArgs
(
content
.
languageSwitcher
.
switch
)
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
button
"
{
className
:
"
primary
"
value
:
"
primary_button
"
onClick
:
(
)
=
>
{
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_2__
[
"
AboutWelcomeUtils
"
]
.
sendActionTelemetry
(
props
.
messageId
"
download_langpack
"
)
;
setIsAwaitingLangpack
(
true
)
;
}
}
)
)
)
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
secondary
-
cta
"
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MSLocalized__WEBPACK_IMPORTED_MODULE_1__
[
"
Localized
"
]
{
text
:
content
.
languageSwitcher
.
not_now
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
button
"
{
type
:
"
button
"
className
:
"
secondary
text
-
link
"
value
:
"
decline
"
onClick
:
props
.
handleAction
}
)
)
)
)
)
;
}
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
BASE_PARAMS
"
function
(
)
{
return
BASE_PARAMS
;
}
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
addUtmParams
"
function
(
)
{
return
addUtmParams
;
}
)
;
const
BASE_PARAMS
=
{
utm_source
:
"
activity
-
stream
"
utm_campaign
:
"
firstrun
"
utm_medium
:
"
referral
"
}
;
function
addUtmParams
(
url
utmTerm
)
{
let
returnUrl
=
url
;
if
(
typeof
returnUrl
=
=
=
"
string
"
)
{
returnUrl
=
new
URL
(
url
)
;
}
Object
.
keys
(
BASE_PARAMS
)
.
forEach
(
key
=
>
{
returnUrl
.
searchParams
.
append
(
key
BASE_PARAMS
[
key
]
)
;
}
)
;
returnUrl
.
searchParams
.
append
(
"
utm_term
"
utmTerm
)
;
return
returnUrl
;
}
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
r
(
__webpack_exports__
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
ReturnToAMO
"
function
(
)
{
return
ReturnToAMO
;
}
)
;
var
react__WEBPACK_IMPORTED_MODULE_0__
=
__webpack_require__
(
1
)
;
var
react__WEBPACK_IMPORTED_MODULE_0___default
=
__webpack_require__
.
n
(
react__WEBPACK_IMPORTED_MODULE_0__
)
;
var
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_1__
=
__webpack_require__
(
5
)
;
var
_MultiStageProtonScreen__WEBPACK_IMPORTED_MODULE_2__
=
__webpack_require__
(
6
)
;
var
_asrouter_templates_FirstRun_addUtmParams__WEBPACK_IMPORTED_MODULE_3__
=
__webpack_require__
(
10
)
;
class
ReturnToAMO
extends
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
fetchFlowParams
=
this
.
fetchFlowParams
.
bind
(
this
)
;
this
.
handleAction
=
this
.
handleAction
.
bind
(
this
)
;
}
async
fetchFlowParams
(
)
{
if
(
this
.
props
.
metricsFlowUri
)
{
this
.
setState
(
{
flowParams
:
await
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_1__
[
"
AboutWelcomeUtils
"
]
.
fetchFlowParams
(
this
.
props
.
metricsFlowUri
)
}
)
;
}
}
componentDidUpdate
(
)
{
this
.
fetchFlowParams
(
)
;
}
handleAction
(
event
)
{
const
{
content
message_id
url
utm_term
}
=
this
.
props
;
let
{
action
source_id
}
=
content
[
event
.
currentTarget
.
value
]
;
let
{
type
data
}
=
action
;
if
(
type
=
=
=
"
INSTALL_ADDON_FROM_URL
"
)
{
if
(
!
data
)
{
return
;
}
data
=
{
.
.
.
data
url
}
;
}
else
if
(
type
=
=
=
"
SHOW_FIREFOX_ACCOUNTS
"
)
{
let
params
=
{
.
.
.
_asrouter_templates_FirstRun_addUtmParams__WEBPACK_IMPORTED_MODULE_3__
[
"
BASE_PARAMS
"
]
utm_term
:
aboutwelcome
-
{
utm_term
}
-
screen
}
;
if
(
action
.
addFlowParams
&
&
this
.
state
.
flowParams
)
{
params
=
{
.
.
.
params
.
.
.
this
.
state
.
flowParams
}
;
}
data
=
{
.
.
.
data
extraParams
:
params
}
;
}
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_1__
[
"
AboutWelcomeUtils
"
]
.
handleUserAction
(
{
type
data
}
)
;
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_1__
[
"
AboutWelcomeUtils
"
]
.
sendActionTelemetry
(
message_id
source_id
)
;
}
render
(
)
{
var
_this
props
themeScre
;
const
{
content
type
}
=
this
.
props
;
if
(
!
content
)
{
return
null
;
}
if
(
content
!
=
=
null
&
&
content
!
=
=
void
0
&
&
content
.
primary_button
.
label
)
{
content
.
primary_button
.
label
.
string_id
=
type
.
includes
(
"
theme
"
)
?
"
return
-
to
-
amo
-
add
-
theme
-
label
"
:
"
return
-
to
-
amo
-
add
-
extension
-
label
"
;
}
return
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
"
div
"
{
className
:
"
outer
-
wrapper
onboardingContainer
proton
"
style
:
content
.
backdrop
?
{
background
:
content
.
backdrop
}
:
{
}
}
react__WEBPACK_IMPORTED_MODULE_0___default
.
a
.
createElement
(
_MultiStageProtonScreen__WEBPACK_IMPORTED_MODULE_2__
[
"
MultiStageProtonScreen
"
]
{
content
:
content
isRtamo
:
true
isTheme
:
type
.
includes
(
"
theme
"
)
id
:
this
.
props
.
messageId
order
:
this
.
props
.
order
totalNumberOfScreens
:
this
.
props
.
totalNumberOfScreens
autoClose
:
this
.
props
.
autoClose
iconURL
:
type
.
includes
(
"
theme
"
)
?
(
_this
props
themeScre
=
this
.
props
.
themeScreenshots
[
0
]
)
=
=
=
null
|
|
_this
props
themeScre
=
=
=
void
0
?
void
0
:
_this
props
themeScre
.
url
:
this
.
props
.
iconURL
addonName
:
this
.
props
.
name
handleAction
:
this
.
handleAction
addExtension
:
this
.
onClickAddExtension
}
)
)
;
}
}
ReturnToAMO
.
defaultProps
=
_lib_aboutwelcome_utils__WEBPACK_IMPORTED_MODULE_1__
[
"
DEFAULT_RTAMO_CONTENT
"
]
;
}
)
]
)
;
