import
{
createSelector
}
from
"
reselect
"
;
export
const
selectLayoutRender
=
createSelector
(
[
state
=
>
state
.
DiscoveryStream
.
layout
state
=
>
state
.
DiscoveryStream
.
feeds
state
=
>
state
.
DiscoveryStream
.
spocs
]
function
layoutRender
(
layout
feeds
spocs
)
{
let
spocIndex
=
0
;
function
maybeInjectSpocs
(
data
spocsConfig
)
{
if
(
data
&
&
spocsConfig
&
&
spocsConfig
.
positions
&
&
spocsConfig
.
positions
.
length
&
&
spocs
.
data
.
spocs
&
&
spocs
.
data
.
spocs
.
length
)
{
const
recommendations
=
[
.
.
.
data
.
recommendations
]
;
for
(
let
position
of
spocsConfig
.
positions
)
{
let
rickRoll
=
Math
.
random
(
)
;
if
(
spocs
.
data
.
spocs
[
spocIndex
]
&
&
rickRoll
<
=
spocsConfig
.
probability
)
{
recommendations
.
splice
(
position
.
index
0
spocs
.
data
.
spocs
[
spocIndex
+
+
]
)
;
}
}
return
{
.
.
.
data
recommendations
}
;
}
return
data
;
}
return
layout
.
map
(
row
=
>
(
{
.
.
.
row
components
:
row
.
components
.
map
(
component
=
>
{
if
(
!
component
.
feed
|
|
!
feeds
[
component
.
feed
.
url
]
)
{
return
component
;
}
return
{
.
.
.
component
data
:
maybeInjectSpocs
(
feeds
[
component
.
feed
.
url
]
.
data
component
.
spocs
)
}
;
}
)
}
)
)
;
}
)
;
