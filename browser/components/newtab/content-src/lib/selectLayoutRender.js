import
{
createSelector
}
from
"
reselect
"
;
function
calculateSpocs
(
component
spocs
)
{
let
spocIndex
=
0
;
return
component
.
spocs
.
positions
.
map
(
position
=
>
{
const
rickRoll
=
Math
.
random
(
)
;
if
(
spocs
.
data
.
spocs
[
spocIndex
]
&
&
rickRoll
<
=
component
.
spocs
.
probability
)
{
return
{
.
.
.
position
result
:
spocs
.
data
.
spocs
[
spocIndex
+
+
]
}
;
}
return
position
;
}
)
;
}
export
const
selectLayoutRender
=
createSelector
(
[
state
=
>
state
.
DiscoveryStream
.
layout
state
=
>
state
.
DiscoveryStream
.
feeds
state
=
>
state
.
DiscoveryStream
.
spocs
]
function
layoutRender
(
layout
feeds
spocs
)
{
return
layout
.
map
(
row
=
>
(
{
.
.
.
row
components
:
row
.
components
.
map
(
component
=
>
{
if
(
!
component
.
feed
|
|
!
feeds
[
component
.
feed
.
url
]
)
{
return
component
;
}
if
(
component
.
spocs
&
&
spocs
.
data
.
spocs
&
&
spocs
.
data
.
spocs
.
length
)
{
component
.
spocs
=
{
.
.
.
component
.
spocs
positions
:
calculateSpocs
(
component
spocs
)
}
;
}
return
{
.
.
.
component
data
:
feeds
[
component
.
feed
.
url
]
.
data
}
;
}
)
}
)
)
;
}
)
;
