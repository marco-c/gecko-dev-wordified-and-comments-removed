const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
class
SharePicker
{
constructor
(
)
{
this
.
_initialized
=
false
;
}
get
classDescription
(
)
{
return
"
Web
Share
Picker
"
;
}
get
classID
(
)
{
return
Components
.
ID
(
"
{
1201d357
-
8417
-
4926
-
a694
-
e6408fbedcf8
}
"
)
;
}
get
contractID
(
)
{
return
"
mozilla
.
org
/
sharepicker
;
1
"
;
}
get
QueryInterface
(
)
{
return
ChromeUtils
.
generateQI
(
[
Ci
.
nsISharePicker
]
)
;
}
init
(
openerWindow
)
{
if
(
this
.
_initialized
)
{
throw
new
Error
(
"
Unexpected
re
-
initialization
.
This
is
not
allowed
.
"
)
;
}
this
.
_initialized
=
true
;
if
(
openerWindow
instanceof
Ci
.
nsIDOMWindow
=
=
=
false
)
{
throw
new
TypeError
(
"
Expected
nsIDOMWindow
"
)
;
}
this
.
_openerWindow
=
openerWindow
;
}
async
share
(
title
text
url
)
{
throw
new
DOMException
(
"
Not
supported
.
"
"
AbortError
"
)
;
}
get
openerWindow
(
)
{
return
this
.
_openerWindow
;
}
__init
(
)
{
}
}
const
NSGetFactory
=
XPCOMUtils
.
generateNSGetFactory
(
[
SharePicker
]
)
;
