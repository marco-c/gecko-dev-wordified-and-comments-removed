"
use
strict
"
;
this
.
omnibox
=
class
extends
ExtensionAPI
{
getAPI
(
context
)
{
return
{
omnibox
:
{
onInputChanged
:
new
EventManager
(
context
"
omnibox
.
onInputChanged
"
fire
=
>
{
let
listener
=
(
text
id
)
=
>
{
fire
.
asyncWithoutClone
(
text
suggestions
=
>
{
context
.
childManager
.
callParentFunctionNoReturn
(
"
omnibox_internal
.
addSuggestions
"
[
id
suggestions
]
)
;
}
)
;
}
;
context
.
childManager
.
getParentEvent
(
"
omnibox_internal
.
onInputChanged
"
)
.
addListener
(
listener
)
;
return
(
)
=
>
{
context
.
childManager
.
getParentEvent
(
"
omnibox_internal
.
onInputChanged
"
)
.
removeListener
(
listener
)
;
}
;
}
)
.
api
(
)
}
}
;
}
}
;
