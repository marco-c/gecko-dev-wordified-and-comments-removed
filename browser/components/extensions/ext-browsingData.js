"
use
strict
"
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
Preferences
"
"
resource
:
/
/
gre
/
modules
/
Preferences
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
Sanitizer
"
"
resource
:
/
/
/
modules
/
Sanitizer
.
jsm
"
)
;
extensions
.
registerSchemaAPI
(
"
browsingData
"
"
addon_parent
"
context
=
>
{
return
{
browsingData
:
{
settings
(
)
{
const
PREF_DOMAIN
=
"
privacy
.
cpd
.
"
;
const
PREF_LIST
=
[
"
cache
"
"
cookies
"
"
history
"
"
formdata
"
"
downloads
"
]
;
let
since
=
Sanitizer
.
getClearRange
(
)
[
0
]
/
1000
;
let
options
=
{
since
}
;
let
dataToRemove
=
{
}
;
let
dataRemovalPermitted
=
{
}
;
for
(
let
item
of
PREF_LIST
)
{
dataToRemove
[
item
]
=
Preferences
.
get
(
{
PREF_DOMAIN
}
{
item
}
)
;
dataRemovalPermitted
[
item
]
=
true
;
}
dataToRemove
.
formData
=
Preferences
.
get
(
{
PREF_DOMAIN
}
formdata
)
;
dataRemovalPermitted
.
formData
=
true
;
return
Promise
.
resolve
(
{
options
dataToRemove
dataRemovalPermitted
}
)
;
}
}
}
;
}
)
;
