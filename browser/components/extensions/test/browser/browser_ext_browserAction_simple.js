"
use
strict
"
;
add_task
(
async
function
(
)
{
let
extension
=
ExtensionTestUtils
.
loadExtension
(
{
manifest
:
{
"
browser_action
"
:
{
"
default_popup
"
:
"
popup
.
html
"
"
unrecognized_property
"
:
"
with
-
a
-
random
-
value
"
}
}
files
:
{
"
popup
.
html
"
:
<
!
DOCTYPE
html
>
<
html
>
<
body
>
<
script
src
=
"
popup
.
js
"
>
<
/
script
>
<
/
body
>
<
/
html
>
"
popup
.
js
"
:
function
(
)
{
window
.
onload
=
(
)
=
>
{
browser
.
runtime
.
sendMessage
(
"
from
-
popup
"
)
;
}
;
}
}
background
:
function
(
)
{
browser
.
runtime
.
onMessage
.
addListener
(
msg
=
>
{
browser
.
test
.
assertEq
(
msg
"
from
-
popup
"
"
correct
message
received
"
)
;
browser
.
test
.
sendMessage
(
"
popup
"
)
;
}
)
;
}
}
)
;
SimpleTest
.
waitForExplicitFinish
(
)
;
let
waitForConsole
=
new
Promise
(
resolve
=
>
{
SimpleTest
.
monitorConsole
(
resolve
[
{
message
:
/
Reading
manifest
:
Error
processing
browser_action
.
unrecognized_property
:
An
unexpected
property
was
found
/
}
]
)
;
}
)
;
await
extension
.
startup
(
)
;
for
(
let
i
=
0
;
i
<
3
;
i
+
+
)
{
clickBrowserAction
(
extension
)
;
await
extension
.
awaitMessage
(
"
popup
"
)
;
closeBrowserAction
(
extension
)
;
}
await
extension
.
unload
(
)
;
SimpleTest
.
endMonitorConsole
(
)
;
await
waitForConsole
;
}
)
;
