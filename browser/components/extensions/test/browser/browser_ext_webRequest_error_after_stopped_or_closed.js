"
use
strict
"
;
const
SLOW_PAGE
=
getRootDirectory
(
gTestPath
)
.
replace
(
"
chrome
:
/
/
mochitests
/
content
"
"
http
:
/
/
www
.
example
.
com
"
)
+
"
file_slowed_document
.
sjs
"
;
async
function
runTest
(
stopLoadFunc
)
{
async
function
background
(
)
{
let
urls
=
[
"
http
:
/
/
www
.
example
.
com
/
*
"
]
;
browser
.
webRequest
.
onCompleted
.
addListener
(
details
=
>
{
browser
.
test
.
sendMessage
(
"
done
"
{
msg
:
"
onCompleted
"
requestId
:
details
.
requestId
}
)
;
}
{
urls
}
)
;
browser
.
webRequest
.
onBeforeRequest
.
addListener
(
details
=
>
{
browser
.
test
.
sendMessage
(
"
onBeforeRequest
"
{
requestId
:
details
.
requestId
}
)
;
}
{
urls
}
[
"
blocking
"
]
)
;
browser
.
webRequest
.
onErrorOccurred
.
addListener
(
details
=
>
{
browser
.
test
.
sendMessage
(
"
done
"
{
msg
:
"
onErrorOccurred
"
requestId
:
details
.
requestId
}
)
;
}
{
urls
}
)
;
}
let
extension
=
ExtensionTestUtils
.
loadExtension
(
{
manifest
:
{
permissions
:
[
"
webRequest
"
"
webRequestBlocking
"
"
http
:
/
/
www
.
example
.
com
/
*
"
]
}
background
}
)
;
await
extension
.
startup
(
)
;
let
slowTab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
SLOW_PAGE
false
)
;
stopLoadFunc
(
slowTab
)
;
let
requestIdOnBeforeRequest
=
await
extension
.
awaitMessage
(
"
onBeforeRequest
"
)
;
let
doneMessage
=
await
extension
.
awaitMessage
(
"
done
"
)
;
is
(
doneMessage
.
msg
"
onErrorOccurred
"
"
received
onErrorOccurred
message
"
)
;
is
(
requestIdOnBeforeRequest
.
requestId
doneMessage
.
requestId
"
request
Ids
match
"
)
;
BrowserTestUtils
.
removeTab
(
slowTab
)
;
await
extension
.
unload
(
)
;
}
add_task
(
async
function
test_click_stop_button
(
)
{
await
runTest
(
async
slowTab
=
>
{
let
stopButton
=
document
.
getElementById
(
"
stop
-
button
"
)
;
await
TestUtils
.
waitForCondition
(
(
)
=
>
{
return
!
stopButton
.
disabled
;
}
)
;
stopButton
.
click
(
)
;
}
)
;
}
)
;
add_task
(
async
function
test_remove_tab
(
)
{
await
runTest
(
slowTab
=
>
{
BrowserTestUtils
.
removeTab
(
slowTab
)
;
}
)
;
}
)
;
