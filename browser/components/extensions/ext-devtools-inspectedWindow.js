"
use
strict
"
;
var
{
SpreadArgs
}
=
ExtensionUtils
;
this
.
devtools_inspectedWindow
=
class
extends
ExtensionAPI
{
getAPI
(
context
)
{
const
{
WebExtensionInspectedWindowFront
}
=
require
(
"
devtools
/
shared
/
fronts
/
webextension
-
inspected
-
window
"
)
;
let
waitForInspectedWindowFront
;
async
function
getInspectedWindowFront
(
)
{
const
clonedTarget
=
await
getDevToolsTargetForContext
(
context
)
;
return
new
WebExtensionInspectedWindowFront
(
clonedTarget
.
client
clonedTarget
.
form
)
;
}
const
callerInfo
=
{
addonId
:
context
.
extension
.
id
url
:
context
.
extension
.
baseURI
.
spec
}
;
return
{
devtools
:
{
inspectedWindow
:
{
async
eval
(
expression
options
)
{
if
(
!
waitForInspectedWindowFront
)
{
waitForInspectedWindowFront
=
getInspectedWindowFront
(
)
;
}
const
front
=
await
waitForInspectedWindowFront
;
return
front
.
eval
(
callerInfo
expression
options
|
|
{
}
)
.
then
(
evalResult
=
>
{
return
new
SpreadArgs
(
[
evalResult
.
value
evalResult
.
exceptionInfo
]
)
;
}
)
;
}
async
reload
(
options
)
{
const
{
ignoreCache
userAgent
injectedScript
}
=
options
|
|
{
}
;
if
(
!
waitForInspectedWindowFront
)
{
waitForInspectedWindowFront
=
getInspectedWindowFront
(
)
;
}
const
front
=
await
waitForInspectedWindowFront
;
front
.
reload
(
callerInfo
{
ignoreCache
userAgent
injectedScript
}
)
;
}
}
}
}
;
}
}
;
