add_task
(
async
function
setup
(
)
{
Services
.
prefs
.
setBoolPref
(
"
privacy
.
firstparty
.
isolate
"
true
)
;
registerCleanupFunction
(
function
(
)
{
Services
.
prefs
.
clearUserPref
(
"
privacy
.
firstparty
.
isolate
"
)
;
}
)
;
}
)
;
add_task
(
async
function
test_aboutNewTab
(
)
{
let
win
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
{
remote
:
false
}
)
;
let
gbrowser
=
win
.
gBrowser
;
let
tab
=
BrowserTestUtils
.
addTab
(
gbrowser
"
about
:
newtab
"
)
;
await
BrowserTestUtils
.
browserLoaded
(
tab
.
linkedBrowser
)
;
let
attrs
=
{
firstPartyDomain
:
"
about
.
ef2a7dd5
-
93bc
-
417f
-
a698
-
142c3116864f
.
mozilla
"
}
;
await
ContentTask
.
spawn
(
tab
.
linkedBrowser
{
attrs
}
async
function
(
args
)
{
info
(
"
principal
"
+
content
.
document
.
nodePrincipal
.
origin
)
;
Assert
.
equal
(
content
.
document
.
nodePrincipal
.
originAttributes
.
firstPartyDomain
args
.
attrs
.
firstPartyDomain
"
about
:
newtab
should
have
firstPartyDomain
set
"
)
;
Assert
.
ok
(
content
.
document
.
nodePrincipal
.
isCodebasePrincipal
"
The
principal
should
be
a
codebase
principal
.
"
)
;
}
)
;
gbrowser
.
removeTab
(
tab
)
;
win
.
close
(
)
;
}
)
;
