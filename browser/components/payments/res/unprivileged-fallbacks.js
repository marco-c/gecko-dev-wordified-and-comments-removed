"
use
strict
"
;
var
log
=
{
error
:
console
.
error
.
bind
(
console
"
paymentRequest
.
xhtml
:
"
)
warn
:
console
.
warn
.
bind
(
console
"
paymentRequest
.
xhtml
:
"
)
info
:
console
.
info
.
bind
(
console
"
paymentRequest
.
xhtml
:
"
)
debug
:
console
.
debug
.
bind
(
console
"
paymentRequest
.
xhtml
:
"
)
}
;
var
PaymentDialogUtils
=
{
getAddressLabel
(
address
addressFields
=
null
)
{
if
(
addressFields
)
{
let
requestedFields
=
addressFields
.
trim
(
)
.
split
(
/
\
s
+
/
)
;
return
requestedFields
.
filter
(
f
=
>
f
&
&
address
[
f
]
)
.
map
(
f
=
>
address
[
f
]
)
.
join
(
"
"
)
+
(
{
address
.
guid
}
)
;
}
return
{
address
.
name
}
(
{
address
.
guid
}
)
;
}
getCreditCardNetworks
(
)
{
return
[
"
amex
"
"
cartebancaire
"
"
diners
"
"
discover
"
"
jcb
"
"
mastercard
"
"
mir
"
"
unionpay
"
"
visa
"
]
;
}
isCCNumber
(
str
)
{
return
!
!
str
.
replace
(
/
[
-
\
s
]
/
g
"
"
)
.
match
(
/
^
\
d
{
9
}
/
)
;
}
DEFAULT_REGION
:
"
US
"
countries
:
new
Map
(
[
[
"
US
"
"
United
States
"
]
[
"
CA
"
"
Canada
"
]
[
"
DE
"
"
Germany
"
]
]
)
getFormFormat
(
country
)
{
if
(
country
=
=
"
DE
"
)
{
return
{
addressLevel3Label
:
"
suburb
"
addressLevel2Label
:
"
city
"
addressLevel1Label
:
"
province
"
postalCodeLabel
:
"
postalCode
"
fieldsOrder
:
[
{
fieldId
:
"
name
"
newLine
:
true
}
{
fieldId
:
"
organization
"
newLine
:
true
}
{
fieldId
:
"
street
-
address
"
newLine
:
true
}
{
fieldId
:
"
postal
-
code
"
}
{
fieldId
:
"
address
-
level2
"
}
]
postalCodePattern
:
"
\
\
d
{
5
}
"
countryRequiredFields
:
[
"
street
-
address
"
"
address
-
level2
"
"
postal
-
code
"
]
}
;
}
return
{
addressLevel3Label
:
"
suburb
"
addressLevel2Label
:
"
city
"
addressLevel1Label
:
country
=
=
"
US
"
?
"
state
"
:
"
province
"
postalCodeLabel
:
country
=
=
"
US
"
?
"
zip
"
:
"
postalCode
"
fieldsOrder
:
[
{
fieldId
:
"
name
"
newLine
:
true
}
{
fieldId
:
"
street
-
address
"
newLine
:
true
}
{
fieldId
:
"
address
-
level2
"
}
{
fieldId
:
"
address
-
level1
"
}
{
fieldId
:
"
postal
-
code
"
}
{
fieldId
:
"
organization
"
}
]
postalCodePattern
:
country
=
=
"
US
"
?
"
(
\
\
d
{
5
}
)
(
?
:
[
\
\
-
]
(
\
\
d
{
4
}
)
)
?
"
:
"
[
ABCEGHJKLMNPRSTVXY
]
\
\
d
[
ABCEGHJ
-
NPRSTV
-
Z
]
?
\
\
d
[
ABCEGHJ
-
NPRSTV
-
Z
]
\
\
d
"
countryRequiredFields
:
country
=
=
"
US
"
|
|
country
=
=
"
CA
"
?
[
"
street
-
address
"
"
address
-
level2
"
"
address
-
level1
"
"
postal
-
code
"
]
:
[
"
street
-
address
"
"
address
-
level2
"
"
postal
-
code
"
]
}
;
}
getDefaultPreferences
(
)
{
let
prefValues
=
{
saveCreditCardDefaultChecked
:
false
saveAddressDefaultChecked
:
true
}
;
return
prefValues
;
}
isOfficialBranding
(
)
{
return
false
;
}
}
;
