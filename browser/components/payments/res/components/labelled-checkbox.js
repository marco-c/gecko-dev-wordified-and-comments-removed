import
ObservedPropertiesMixin
from
"
.
.
/
mixins
/
ObservedPropertiesMixin
.
js
"
;
export
default
class
LabelledCheckbox
extends
ObservedPropertiesMixin
(
HTMLElement
)
{
static
get
observedAttributes
(
)
{
return
[
"
infoTooltip
"
"
form
"
"
label
"
"
value
"
]
;
}
constructor
(
)
{
super
(
)
;
this
.
_label
=
document
.
createElement
(
"
label
"
)
;
this
.
_labelSpan
=
document
.
createElement
(
"
span
"
)
;
this
.
_infoTooltip
=
document
.
createElement
(
"
span
"
)
;
this
.
_infoTooltip
.
className
=
"
info
-
tooltip
"
;
this
.
_infoTooltip
.
setAttribute
(
"
tabindex
"
"
0
"
)
;
this
.
_infoTooltip
.
setAttribute
(
"
role
"
"
tooltip
"
)
;
this
.
_checkbox
=
document
.
createElement
(
"
input
"
)
;
this
.
_checkbox
.
type
=
"
checkbox
"
;
}
connectedCallback
(
)
{
this
.
appendChild
(
this
.
_label
)
;
this
.
_label
.
appendChild
(
this
.
_checkbox
)
;
this
.
_label
.
appendChild
(
this
.
_labelSpan
)
;
this
.
_label
.
appendChild
(
this
.
_infoTooltip
)
;
this
.
render
(
)
;
}
render
(
)
{
this
.
_labelSpan
.
textContent
=
this
.
label
;
this
.
_infoTooltip
.
setAttribute
(
"
aria
-
label
"
this
.
infoTooltip
)
;
if
(
this
.
hasAttribute
(
"
form
"
)
)
{
this
.
_checkbox
.
setAttribute
(
"
form
"
this
.
getAttribute
(
"
form
"
)
)
;
}
else
{
this
.
_checkbox
.
removeAttribute
(
"
form
"
)
;
}
}
get
checked
(
)
{
return
this
.
_checkbox
.
checked
;
}
set
checked
(
value
)
{
return
(
this
.
_checkbox
.
checked
=
value
)
;
}
}
customElements
.
define
(
"
labelled
-
checkbox
"
LabelledCheckbox
)
;
