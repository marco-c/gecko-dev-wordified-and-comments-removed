"
use
strict
"
;
const
PTU
=
SpecialPowers
.
Cu
.
import
(
"
resource
:
/
/
testing
-
common
/
PaymentTestUtils
.
jsm
"
{
}
)
.
PaymentTestUtils
;
function
asyncElementRendered
(
)
{
return
Promise
.
resolve
(
)
;
}
function
promiseStateChange
(
store
)
{
return
new
Promise
(
resolve
=
>
{
store
.
subscribe
(
{
stateChangeCallback
(
state
)
{
store
.
unsubscribe
(
this
)
;
resolve
(
state
)
;
}
}
)
;
}
)
;
}
function
promiseContentToChromeMessage
(
messageType
)
{
return
new
Promise
(
resolve
=
>
{
document
.
addEventListener
(
"
paymentContentToChrome
"
function
onCToC
(
event
)
{
if
(
event
.
detail
.
messageType
!
=
messageType
)
{
return
;
}
document
.
removeEventListener
(
"
paymentContentToChrome
"
onCToC
)
;
resolve
(
event
.
detail
)
;
}
)
;
}
)
;
}
function
deepClone
(
obj
)
{
return
JSON
.
parse
(
JSON
.
stringify
(
obj
)
)
;
}
SpecialPowers
.
registerConsoleListener
(
function
onConsoleMessage
(
msg
)
{
if
(
msg
.
isWarning
|
|
!
msg
.
errorMessage
)
{
return
;
}
if
(
msg
.
category
=
=
"
CSP_CSPViolationWithURI
"
&
&
msg
.
errorMessage
.
includes
(
"
at
inline
"
)
)
{
return
;
}
ok
(
false
msg
.
message
|
|
msg
.
errorMessage
)
;
}
)
;
SimpleTest
.
registerCleanupFunction
(
function
cleanup
(
)
{
SpecialPowers
.
postConsoleSentinel
(
)
;
}
)
;
