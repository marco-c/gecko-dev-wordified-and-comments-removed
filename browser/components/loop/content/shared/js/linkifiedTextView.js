var
loop
=
loop
|
|
{
}
;
loop
.
shared
=
loop
.
shared
|
|
{
}
;
loop
.
shared
.
views
=
loop
.
shared
.
views
|
|
{
}
;
loop
.
shared
.
views
.
LinkifiedTextView
=
(
function
(
mozL10n
)
{
"
use
strict
"
;
var
LinkifiedTextView
=
React
.
createClass
(
{
displayName
:
"
LinkifiedTextView
"
propTypes
:
{
linkClickHandler
:
React
.
PropTypes
.
func
rawText
:
React
.
PropTypes
.
string
.
isRequired
sendReferrer
:
React
.
PropTypes
.
bool
suppressTarget
:
React
.
PropTypes
.
bool
}
mixins
:
[
React
.
addons
.
PureRenderMixin
]
_handleClickEvent
:
function
(
e
)
{
e
.
preventDefault
(
)
;
e
.
stopPropagation
(
)
;
this
.
props
.
linkClickHandler
(
e
.
currentTarget
.
href
)
;
}
_generateLinkAttributes
:
function
(
href
)
{
var
linkAttributes
=
{
href
:
href
}
;
if
(
this
.
props
.
linkClickHandler
)
{
linkAttributes
.
onClick
=
this
.
_handleClickEvent
;
return
linkAttributes
;
}
if
(
!
this
.
props
.
suppressTarget
)
{
linkAttributes
.
target
=
"
_blank
"
;
}
if
(
!
this
.
props
.
sendReferrer
)
{
linkAttributes
.
rel
=
"
noreferrer
"
;
}
return
linkAttributes
;
}
parseStringToElements
:
function
(
s
)
{
var
elements
=
[
]
;
var
result
=
loop
.
shared
.
urlRegExps
.
fullUrlMatch
.
exec
(
s
)
;
var
reactElementsCounter
=
0
;
while
(
result
)
{
if
(
result
.
index
)
{
elements
.
push
(
s
.
substr
(
0
result
.
index
)
)
;
s
=
s
.
substr
(
result
.
index
)
;
}
elements
.
push
(
React
.
createElement
(
"
a
"
React
.
__spread
(
{
}
this
.
_generateLinkAttributes
(
result
[
0
]
)
{
key
:
reactElementsCounter
+
+
}
)
result
[
0
]
)
)
;
s
=
s
.
substr
(
result
[
0
]
.
length
)
;
result
=
loop
.
shared
.
urlRegExps
.
fullUrlMatch
.
exec
(
s
)
;
}
if
(
s
)
{
elements
.
push
(
s
)
;
}
return
elements
;
}
render
:
function
(
)
{
return
(
React
.
createElement
(
"
p
"
null
this
.
parseStringToElements
(
this
.
props
.
rawText
)
)
)
;
}
}
)
;
return
LinkifiedTextView
;
}
)
(
navigator
.
mozL10n
|
|
document
.
mozL10n
)
;
