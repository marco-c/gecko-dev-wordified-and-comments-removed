"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
AboutProtectionsHandler
"
]
;
const
{
RemotePages
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
remotepagemanager
/
RemotePageManagerParent
.
jsm
"
)
;
var
AboutProtectionsHandler
=
{
_inited
:
false
_topics
:
[
"
openContentBlockingPreferences
"
]
init
(
)
{
this
.
pageListener
=
new
RemotePages
(
"
about
:
protections
"
)
;
for
(
let
topic
of
this
.
_topics
)
{
this
.
pageListener
.
addMessageListener
(
topic
this
.
receiveMessage
)
;
}
this
.
_inited
=
true
;
}
uninit
(
)
{
if
(
!
this
.
_inited
)
{
return
;
}
for
(
let
topic
of
this
.
_topics
)
{
this
.
pageListener
.
removeMessageListener
(
topic
this
.
receiveMessage
)
;
}
this
.
pageListener
.
destroy
(
)
;
}
receiveMessage
(
aMessage
)
{
let
win
=
aMessage
.
target
.
browser
.
ownerGlobal
;
switch
(
aMessage
.
name
)
{
case
"
openContentBlockingPreferences
"
:
win
.
openPreferences
(
"
privacy
-
trackingprotection
"
{
origin
:
"
about
-
protections
"
}
)
;
break
;
}
}
}
;
