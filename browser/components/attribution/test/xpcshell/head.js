"
use
strict
"
;
const
{
AttributionCode
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
/
modules
/
AttributionCode
.
sys
.
mjs
"
)
;
let
validAttrCodes
=
[
{
code
:
"
source
%
3Dgoogle
.
com
%
26medium
%
3Dorganic
%
26campaign
%
3D
(
not
%
20set
)
%
26content
%
3D
(
not
%
20set
)
"
parsed
:
{
source
:
"
google
.
com
"
medium
:
"
organic
"
campaign
:
"
(
not
%
20set
)
"
content
:
"
(
not
%
20set
)
"
}
}
{
code
:
"
source
%
3Dgoogle
.
com
%
26medium
%
3Dorganic
%
26campaign
%
3D
(
not
%
20set
)
%
26content
%
3D
(
not
%
20set
)
%
26msstoresignedin
%
3Dtrue
"
parsed
:
{
source
:
"
google
.
com
"
medium
:
"
organic
"
campaign
:
"
(
not
%
20set
)
"
content
:
"
(
not
%
20set
)
"
msstoresignedin
:
true
}
platforms
:
[
"
win
"
]
}
{
code
:
"
source
%
3Dgoogle
.
com
%
26medium
%
3Dorganic
%
26campaign
%
3D
%
26content
%
3D
"
parsed
:
{
source
:
"
google
.
com
"
medium
:
"
organic
"
}
doesNotRoundtrip
:
true
}
{
code
:
"
source
%
3Dgoogle
.
com
%
26medium
%
3Dorganic
%
26campaign
%
3D
(
not
%
20set
)
"
parsed
:
{
source
:
"
google
.
com
"
medium
:
"
organic
"
campaign
:
"
(
not
%
20set
)
"
}
}
{
code
:
"
source
%
3Dgoogle
.
com
%
26medium
%
3Dorganic
"
parsed
:
{
source
:
"
google
.
com
"
medium
:
"
organic
"
}
}
{
code
:
"
source
%
3Dgoogle
.
com
"
parsed
:
{
source
:
"
google
.
com
"
}
}
{
code
:
"
medium
%
3Dgoogle
.
com
"
parsed
:
{
medium
:
"
google
.
com
"
}
}
{
code
:
"
campaign
%
3Dgoogle
.
com
"
parsed
:
{
campaign
:
"
google
.
com
"
}
}
{
code
:
"
content
%
3Dgoogle
.
com
"
parsed
:
{
content
:
"
google
.
com
"
}
}
{
code
:
"
experiment
%
3Dexperimental
"
parsed
:
{
experiment
:
"
experimental
"
}
}
{
code
:
"
variation
%
3Dvaried
"
parsed
:
{
variation
:
"
varied
"
}
}
{
code
:
"
ua
%
3DGoogle
%
20Chrome
%
20123
"
parsed
:
{
ua
:
"
Google
%
20Chrome
%
20123
"
}
}
{
code
:
"
dltoken
%
3Dc18f86a3
-
f228
-
4d98
-
91bb
-
f90135c0aa9c
"
parsed
:
{
dltoken
:
"
c18f86a3
-
f228
-
4d98
-
91bb
-
f90135c0aa9c
"
}
}
{
code
:
"
dlsource
%
3Dsome
-
dl
-
source
"
parsed
:
{
dlsource
:
"
some
-
dl
-
source
"
}
}
]
;
let
invalidAttrCodes
=
[
"
"
"
source
=
google
.
com
&
medium
=
organic
&
campaign
=
(
not
set
)
&
content
=
(
not
set
)
"
"
campaign
%
3D
"
+
"
a
"
.
repeat
(
1000
)
"
source
%
3Dgoogle
.
com
%
26medium
%
3Dorganic
%
26large
%
3Dgeneticallymodified
"
"
source
%
3Dgoogle
.
com
%
26medium
%
3Dorganic
%
26
%
3Dgeneticallymodified
"
]
;
async
function
setupStubs
(
)
{
const
{
AppConstants
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
AppConstants
.
sys
.
mjs
"
)
;
const
{
sinon
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
Sinon
.
jsm
"
)
;
let
caller
=
Components
.
stack
.
caller
;
const
testID
=
caller
.
filename
.
toString
(
)
.
split
(
"
/
"
)
.
pop
(
)
.
split
(
"
.
"
)
[
0
]
;
notEqual
(
testID
"
head
"
)
;
let
applicationFile
=
do_get_tempdir
(
)
;
applicationFile
.
append
(
testID
)
;
applicationFile
.
append
(
"
App
.
app
"
)
;
if
(
AppConstants
.
platform
=
=
"
macosx
"
)
{
const
{
MacAttribution
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
/
modules
/
MacAttribution
.
sys
.
mjs
"
)
;
sinon
.
stub
(
MacAttribution
"
applicationPath
"
)
.
get
(
(
)
=
>
applicationFile
.
path
)
;
}
await
IOUtils
.
makeDirectory
(
applicationFile
.
path
{
from
:
do_get_tempdir
(
)
.
path
}
)
;
}
