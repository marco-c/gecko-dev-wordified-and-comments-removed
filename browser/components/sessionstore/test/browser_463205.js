"
use
strict
"
;
const
URL
=
ROOT
+
"
browser_463205_sample
.
html
"
;
add_task
(
async
function
test_check_urls_before_restoring
(
)
{
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
"
about
:
blank
"
)
;
let
browser
=
tab
.
linkedBrowser
;
await
promiseBrowserLoaded
(
browser
)
;
await
promiseTabState
(
tab
getState
(
URL
)
)
;
let
value
=
await
getInputValue
(
browser
{
id
:
"
text
"
}
)
;
is
(
value
"
foobar
"
"
value
was
restored
"
)
;
await
promiseTabState
(
tab
getState
(
"
http
:
/
/
example
.
com
/
"
)
)
;
value
=
await
getInputValue
(
browser
{
id
:
"
text
"
}
)
;
is
(
value
"
"
"
value
was
not
restored
"
)
;
gBrowser
.
removeTab
(
tab
)
;
}
)
;
function
getState
(
url
)
{
return
JSON
.
stringify
(
{
entries
:
[
{
url
:
URL
triggeringPrincipal_base64
}
]
formdata
:
{
url
id
:
{
text
:
"
foobar
"
}
}
}
)
;
}
