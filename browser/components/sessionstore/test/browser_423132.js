"
use
strict
"
;
add_task
(
async
function
(
)
{
const
testURL
=
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
"
+
"
browser
/
components
/
sessionstore
/
test
/
browser_423132_sample
.
html
"
;
Services
.
cookies
.
removeAll
(
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
sessionstore
.
interval
"
0
]
]
}
)
;
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
testURL
)
;
await
BrowserTestUtils
.
browserLoaded
(
tab
.
linkedBrowser
)
;
await
TabStateFlusher
.
flush
(
tab
.
linkedBrowser
)
;
let
state
=
ss
.
getBrowserState
(
)
;
let
i
=
0
;
for
(
var
cookie
of
Services
.
cookies
.
cookies
)
{
i
+
+
;
}
Assert
.
equal
(
i
1
"
expected
one
cookie
"
)
;
Services
.
cookies
.
removeAll
(
)
;
await
setBrowserState
(
state
)
;
for
(
var
cookie2
of
Services
.
cookies
.
cookies
)
{
if
(
cookie
.
name
=
=
cookie2
.
name
)
{
break
;
}
}
is
(
cookie
.
name
cookie2
.
name
"
cookie
name
successfully
restored
"
)
;
is
(
cookie
.
value
cookie2
.
value
"
cookie
value
successfully
restored
"
)
;
is
(
cookie
.
path
cookie2
.
path
"
cookie
path
successfully
restored
"
)
;
Services
.
cookies
.
removeAll
(
)
;
BrowserTestUtils
.
removeTab
(
gBrowser
.
tabs
[
1
]
)
;
}
)
;
