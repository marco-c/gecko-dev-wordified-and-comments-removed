"
use
strict
"
;
const
URL
=
"
data
:
text
/
html
<
title
>
initial
title
<
/
title
>
"
;
add_task
(
async
function
(
)
{
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
URL
)
;
await
promiseBrowserLoaded
(
tab
.
linkedBrowser
)
;
await
promiseRemoveTab
(
tab
)
;
let
[
{
state
:
{
entries
}
}
]
=
JSON
.
parse
(
ss
.
getClosedTabData
(
window
)
)
;
is
(
entries
[
0
]
.
title
"
initial
title
"
"
correct
title
"
)
;
}
)
;
add_task
(
async
function
(
)
{
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
URL
)
;
let
browser
=
tab
.
linkedBrowser
;
await
promiseBrowserLoaded
(
browser
)
;
await
TabStateFlusher
.
flush
(
browser
)
;
await
ContentTask
.
spawn
(
browser
null
async
function
(
)
{
return
new
Promise
(
resolve
=
>
{
addEventListener
(
"
DOMTitleChanged
"
function
onTitleChanged
(
)
{
removeEventListener
(
"
DOMTitleChanged
"
onTitleChanged
)
;
resolve
(
)
;
}
)
;
content
.
document
.
title
=
"
new
title
"
;
}
)
;
}
)
;
await
promiseRemoveTab
(
tab
)
;
let
[
{
state
:
{
entries
}
}
]
=
JSON
.
parse
(
ss
.
getClosedTabData
(
window
)
)
;
is
(
entries
[
0
]
.
title
"
new
title
"
"
correct
title
"
)
;
}
)
;
