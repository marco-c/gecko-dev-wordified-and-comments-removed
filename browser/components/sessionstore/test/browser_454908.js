"
use
strict
"
;
const
URL
=
ROOT
+
"
browser_454908_sample
.
html
"
;
const
PASS
=
"
pwd
-
"
+
Math
.
random
(
)
;
add_task
(
async
function
test_dont_save_passwords
(
)
{
Services
.
prefs
.
clearUserPref
(
"
browser
.
sessionstore
.
privacy_level
"
)
;
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
URL
)
;
let
browser
=
tab
.
linkedBrowser
;
await
promiseBrowserLoaded
(
browser
)
;
let
usernameValue
=
"
User
"
+
Math
.
random
(
)
;
await
setInputValue
(
browser
{
id
:
"
username
"
value
:
usernameValue
}
)
;
await
setInputValue
(
browser
{
id
:
"
passwd
"
value
:
PASS
}
)
;
await
promiseRemoveTab
(
tab
)
;
tab
=
ss
.
undoCloseTab
(
window
0
)
;
browser
=
tab
.
linkedBrowser
;
await
promiseTabRestored
(
tab
)
;
let
username
=
await
getInputValue
(
browser
{
id
:
"
username
"
}
)
;
is
(
username
usernameValue
"
username
was
saved
/
restored
"
)
;
let
passwd
=
await
getInputValue
(
browser
{
id
:
"
passwd
"
}
)
;
is
(
passwd
"
"
"
password
wasn
'
t
saved
/
restored
"
)
;
await
forceSaveState
(
)
;
await
promiseForEachSessionRestoreFile
(
(
state
key
)
=
>
ok
(
!
state
.
includes
(
PASS
)
"
password
has
not
been
written
to
file
"
+
key
)
)
;
gBrowser
.
removeTab
(
tab
)
;
}
)
;
