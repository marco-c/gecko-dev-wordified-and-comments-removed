add_task
(
function
*
test_synchronously_remove_window_state
(
)
{
let
state
=
JSON
.
parse
(
ss
.
getBrowserState
(
)
)
;
ok
(
state
"
Make
sure
we
can
get
the
state
"
)
;
let
initialWindows
=
state
.
windows
.
length
;
let
newWin
=
yield
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
let
browser
=
newWin
.
gBrowser
.
selectedBrowser
;
browser
.
loadURI
(
"
http
:
/
/
example
.
com
"
)
;
yield
BrowserTestUtils
.
browserLoaded
(
browser
)
;
yield
TabStateFlusher
.
flush
(
browser
)
;
state
=
JSON
.
parse
(
ss
.
getBrowserState
(
)
)
;
is
(
state
.
windows
.
length
initialWindows
+
1
"
The
new
window
to
be
in
the
state
"
)
;
let
windowClosed
=
BrowserTestUtils
.
windowClosed
(
newWin
)
;
newWin
.
close
(
)
;
state
=
JSON
.
parse
(
ss
.
getBrowserState
(
)
)
;
is
(
state
.
windows
.
length
initialWindows
"
The
new
window
should
have
been
removed
from
the
state
"
)
;
yield
windowClosed
;
}
)
;
