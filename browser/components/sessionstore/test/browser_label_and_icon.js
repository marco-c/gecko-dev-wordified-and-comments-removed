"
use
strict
"
;
add_task
(
async
function
test_label_and_icon
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
sessionstore
.
restore_on_demand
"
true
]
]
}
)
;
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
"
about
:
robots
"
)
;
let
browser
=
tab
.
linkedBrowser
;
await
promiseBrowserLoaded
(
browser
)
;
await
BrowserTestUtils
.
waitForCondition
(
(
)
=
>
{
return
gBrowser
.
getIcon
(
tab
)
!
=
null
;
}
"
wait
for
favicon
load
to
finish
"
100
5
)
;
await
TabStateFlusher
.
flush
(
browser
)
;
let
state
=
ss
.
getTabState
(
tab
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
browser
=
null
;
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
"
about
:
blank
"
)
;
ss
.
setTabState
(
tab
state
)
;
await
promiseTabRestoring
(
tab
)
;
is
(
gBrowser
.
getIcon
(
tab
)
"
chrome
:
/
/
browser
/
content
/
robot
.
ico
"
"
icon
is
set
"
)
;
is
(
tab
.
label
"
Gort
!
Klaatu
barada
nikto
!
"
"
label
is
set
"
)
;
let
serhelper
=
Cc
[
"
mozilla
.
org
/
network
/
serialization
-
helper
;
1
"
]
.
getService
(
Ci
.
nsISerializationHelper
)
;
let
serializedPrincipal
=
tab
.
getAttribute
(
"
iconloadingprincipal
"
)
;
let
iconLoadingPrincipal
=
serhelper
.
deserializeObject
(
serializedPrincipal
)
.
QueryInterface
(
Ci
.
nsIPrincipal
)
;
is
(
iconLoadingPrincipal
.
origin
"
about
:
robots
"
"
correct
loadingPrincipal
used
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
