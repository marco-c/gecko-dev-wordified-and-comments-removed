add_task
(
async
function
test
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
"
set
"
:
[
[
"
dom
.
require_user_interaction_for_beforeunload
"
false
]
]
}
)
;
let
url
=
"
about
:
robots
"
;
let
tab0
=
gBrowser
.
tabs
[
0
]
;
let
tab1
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
url
)
;
gBrowser
.
discardBrowser
(
tab0
)
;
ok
(
!
tab0
.
linkedPanel
"
tab0
is
suspended
"
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab0
)
;
gBrowser
.
discardBrowser
(
tab0
)
;
ok
(
tab0
.
linkedPanel
"
active
tab
is
not
able
to
be
suspended
"
)
;
gBrowser
.
_beginRemoveTab
(
tab1
)
;
gBrowser
.
discardBrowser
(
tab1
)
;
ok
(
tab1
.
linkedPanel
"
cannot
suspend
a
tab
that
is
closing
"
)
;
gBrowser
.
_endRemoveTab
(
tab1
)
;
url
=
"
http
:
/
/
example
.
com
/
browser
/
browser
/
components
/
sessionstore
/
test
/
browser_1284886_suspend_tab
.
html
"
;
tab1
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
url
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab0
)
;
gBrowser
.
discardBrowser
(
tab1
)
;
ok
(
tab1
.
linkedPanel
"
cannot
suspend
a
tab
with
beforeunload
handler
which
would
show
a
prompt
"
)
;
gBrowser
.
discardBrowser
(
tab1
true
)
;
ok
(
!
tab1
.
linkedPanel
"
force
suspending
a
tab
with
beforeunload
handler
which
would
show
a
prompt
"
)
;
BrowserTestUtils
.
removeTab
(
tab1
)
;
url
=
"
http
:
/
/
example
.
com
/
browser
/
browser
/
components
/
sessionstore
/
test
/
browser_1284886_suspend_tab_2
.
html
"
;
tab1
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
url
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab0
)
;
gBrowser
.
discardBrowser
(
tab1
)
;
ok
(
!
tab1
.
linkedPanel
"
can
suspend
a
tab
with
beforeunload
handler
which
would
not
show
a
prompt
"
)
;
BrowserTestUtils
.
removeTab
(
tab1
)
;
url
=
"
about
:
robots
"
;
tab1
=
BrowserTestUtils
.
addTab
(
gBrowser
url
{
forceNotRemote
:
true
}
)
;
await
promiseBrowserLoaded
(
tab1
.
linkedBrowser
true
url
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab1
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab0
)
;
gBrowser
.
discardBrowser
(
tab1
)
;
ok
(
tab1
.
linkedPanel
"
cannot
suspend
a
remote
tab
"
)
;
BrowserTestUtils
.
removeTab
(
tab1
)
;
}
)
;
