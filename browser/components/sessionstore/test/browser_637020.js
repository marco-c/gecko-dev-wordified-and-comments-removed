const
TEST_URL
=
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
browser
/
components
/
"
+
"
sessionstore
/
test
/
browser_637020_slow
.
sjs
"
;
const
TEST_STATE
=
{
windows
:
[
{
tabs
:
[
{
entries
:
[
{
url
:
"
about
:
mozilla
"
triggeringPrincipal_base64
}
]
}
{
entries
:
[
{
url
:
"
about
:
robots
"
triggeringPrincipal_base64
}
]
}
]
}
{
tabs
:
[
{
entries
:
[
{
url
:
TEST_URL
triggeringPrincipal_base64
}
]
}
{
entries
:
[
{
url
:
TEST_URL
triggeringPrincipal_base64
}
]
}
]
}
]
}
;
add_task
(
async
function
test
(
)
{
let
promiseWindow
=
new
Promise
(
resolve
=
>
{
Services
.
obs
.
addObserver
(
function
onOpened
(
subject
)
{
Services
.
obs
.
removeObserver
(
onOpened
"
domwindowopened
"
)
;
resolve
(
subject
)
;
}
"
domwindowopened
"
)
;
}
)
;
let
backupState
=
SessionStore
.
getBrowserState
(
)
;
SessionStore
.
setBrowserState
(
JSON
.
stringify
(
TEST_STATE
)
)
;
let
win
=
await
promiseWindow
;
await
promiseWindowRestored
(
win
)
;
info
(
"
the
window
has
been
opened
"
)
;
checkWindows
(
)
;
await
new
Promise
(
resolve
=
>
whenDelayedStartupFinished
(
win
resolve
)
)
;
info
(
"
the
delayed
startup
has
finished
"
)
;
checkWindows
(
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
await
promiseBrowserState
(
backupState
)
;
}
)
;
function
checkWindows
(
)
{
let
state
=
JSON
.
parse
(
SessionStore
.
getBrowserState
(
)
)
;
is
(
state
.
windows
[
0
]
.
tabs
.
length
2
"
first
window
has
two
tabs
"
)
;
is
(
state
.
windows
[
1
]
.
tabs
.
length
2
"
second
window
has
two
tabs
"
)
;
}
