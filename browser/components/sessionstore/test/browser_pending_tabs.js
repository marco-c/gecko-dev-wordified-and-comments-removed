"
use
strict
"
;
const
TAB_STATE
=
{
entries
:
[
{
url
:
"
about
:
mozilla
"
triggeringPrincipal_base64
}
{
url
:
"
about
:
robots
"
triggeringPrincipal_base64
}
]
index
:
1
}
;
add_task
(
async
function
(
)
{
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
"
about
:
blank
"
)
;
let
browser
=
tab
.
linkedBrowser
;
await
BrowserTestUtils
.
browserLoaded
(
browser
{
wantLoad
:
"
about
:
blank
"
}
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
sessionstore
.
restore_on_demand
"
true
)
;
let
promise
=
promiseTabRestoring
(
tab
)
;
ss
.
setTabState
(
tab
JSON
.
stringify
(
TAB_STATE
)
)
;
ok
(
tab
.
hasAttribute
(
"
pending
"
)
"
tab
is
pending
"
)
;
await
promise
;
await
TabStateFlusher
.
flush
(
browser
)
;
let
tabState
=
TabState
.
collect
(
tab
ss
.
getInternalObjectState
(
tab
)
)
;
is
(
tabState
.
index
TAB_STATE
.
index
"
correct
shistory
index
"
)
;
ok
(
!
tabState
.
userTypedValue
"
tab
didn
'
t
have
a
userTypedValue
"
)
;
gBrowser
.
removeTab
(
tab
)
;
}
)
;
