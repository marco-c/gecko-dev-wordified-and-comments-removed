add_task
(
async
function
testDiscardWithNotLoadedUserTypedValue
(
)
{
let
tab1
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
http
:
/
/
example
.
com
"
)
;
await
TabStateFlusher
.
flush
(
tab1
.
linkedBrowser
)
;
tab1
.
linkedBrowser
.
userTypedValue
=
"
mockUserTypedValue
"
;
let
tab2
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
robots
"
)
;
let
waitForTabDiscarded
=
BrowserTestUtils
.
waitForEvent
(
tab1
"
TabBrowserDiscarded
"
)
;
gBrowser
.
discardBrowser
(
tab1
)
;
await
waitForTabDiscarded
;
const
promiseTabLoaded
=
BrowserTestUtils
.
browserLoaded
(
tab1
.
linkedBrowser
false
"
http
:
/
/
example
.
com
/
"
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab1
)
;
info
(
"
Wait
for
the
restored
tab
to
load
http
:
/
/
example
.
com
"
)
;
await
promiseTabLoaded
;
is
(
tab1
.
linkedBrowser
.
currentURI
.
spec
"
http
:
/
/
example
.
com
/
"
"
Restored
discarded
tab
has
loaded
the
expected
url
"
)
;
BrowserTestUtils
.
removeTab
(
tab2
)
;
BrowserTestUtils
.
removeTab
(
tab1
)
;
}
)
;
