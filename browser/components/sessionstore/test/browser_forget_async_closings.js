"
use
strict
"
;
const
PAGE
=
"
http
:
/
/
example
.
com
/
"
;
let
forgetTabHelper
=
Task
.
async
(
function
*
(
forgetFn
)
{
yield
pushPrefs
(
[
"
browser
.
sessionstore
.
debug
.
no_auto_updates
"
true
]
)
;
Services
.
obs
.
notifyObservers
(
null
"
browser
:
purge
-
session
-
history
"
)
;
is
(
ss
.
getClosedTabCount
(
window
)
0
"
We
should
have
0
closed
tabs
being
stored
.
"
)
;
let
tab
=
gBrowser
.
addTab
(
PAGE
)
;
let
browser
=
tab
.
linkedBrowser
;
yield
BrowserTestUtils
.
browserLoaded
(
browser
false
PAGE
)
;
yield
TabStateFlusher
.
flush
(
browser
)
;
let
promise
=
BrowserTestUtils
.
removeTab
(
tab
)
;
forgetFn
(
)
;
is
(
ss
.
getClosedTabCount
(
window
)
0
"
Should
have
forgotten
the
closed
tab
"
)
;
yield
promise
;
is
(
ss
.
getClosedTabCount
(
window
)
0
"
Should
not
have
stored
the
forgotten
closed
tab
"
)
;
}
)
;
let
forgetWinHelper
=
Task
.
async
(
function
*
(
forgetFn
)
{
yield
pushPrefs
(
[
"
browser
.
sessionstore
.
debug
.
no_auto_updates
"
true
]
)
;
Services
.
obs
.
notifyObservers
(
null
"
browser
:
purge
-
session
-
history
"
)
;
is
(
ss
.
getClosedWindowCount
(
)
0
"
We
should
have
0
closed
windows
being
stored
.
"
)
;
let
newWin
=
yield
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
let
tab
=
newWin
.
gBrowser
.
selectedTab
;
let
browser
=
tab
.
linkedBrowser
;
browser
.
loadURI
(
PAGE
)
;
yield
BrowserTestUtils
.
browserLoaded
(
browser
false
PAGE
)
;
yield
TabStateFlusher
.
flush
(
browser
)
;
let
windowClosed
=
BrowserTestUtils
.
windowClosed
(
newWin
)
;
let
domWindowClosed
=
BrowserTestUtils
.
domWindowClosed
(
newWin
)
;
newWin
.
close
(
)
;
yield
domWindowClosed
;
forgetFn
(
)
;
is
(
ss
.
getClosedWindowCount
(
)
0
"
Should
have
forgotten
the
closed
window
"
)
;
yield
windowClosed
;
is
(
ss
.
getClosedWindowCount
(
)
0
"
Should
not
have
stored
the
closed
window
"
)
;
}
)
;
add_task
(
function
*
test_forget_closed_tab
(
)
{
yield
forgetTabHelper
(
(
)
=
>
{
ss
.
forgetClosedTab
(
window
0
)
;
}
)
;
}
)
;
add_task
(
function
*
test_forget_closed_window
(
)
{
yield
forgetWinHelper
(
(
)
=
>
{
ss
.
forgetClosedWindow
(
0
)
;
}
)
;
}
)
;
add_task
(
function
*
test_forget_purged_tab
(
)
{
yield
forgetTabHelper
(
(
)
=
>
{
Services
.
obs
.
notifyObservers
(
null
"
browser
:
purge
-
session
-
history
"
)
;
}
)
;
}
)
;
add_task
(
function
*
test_forget_purged_window
(
)
{
yield
forgetWinHelper
(
(
)
=
>
{
Services
.
obs
.
notifyObservers
(
null
"
browser
:
purge
-
session
-
history
"
)
;
}
)
;
}
)
;
