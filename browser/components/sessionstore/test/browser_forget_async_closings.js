"
use
strict
"
;
const
PAGE
=
"
http
:
/
/
example
.
com
/
"
;
let
forgetTabHelper
=
async
function
(
forgetFn
)
{
await
pushPrefs
(
[
"
browser
.
sessionstore
.
debug
.
no_auto_updates
"
true
]
)
;
Services
.
obs
.
notifyObservers
(
null
"
browser
:
purge
-
session
-
history
"
)
;
is
(
ss
.
getClosedTabCount
(
window
)
0
"
We
should
have
0
closed
tabs
being
stored
.
"
)
;
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
PAGE
)
;
let
browser
=
tab
.
linkedBrowser
;
await
BrowserTestUtils
.
browserLoaded
(
browser
false
PAGE
)
;
await
TabStateFlusher
.
flush
(
browser
)
;
let
promise
=
promiseRemoveTabAndSessionState
(
tab
)
;
forgetFn
(
)
;
is
(
ss
.
getClosedTabCount
(
window
)
0
"
Should
have
forgotten
the
closed
tab
"
)
;
await
promise
;
is
(
ss
.
getClosedTabCount
(
window
)
0
"
Should
not
have
stored
the
forgotten
closed
tab
"
)
;
}
;
let
forgetWinHelper
=
async
function
(
forgetFn
)
{
await
pushPrefs
(
[
"
browser
.
sessionstore
.
debug
.
no_auto_updates
"
true
]
)
;
Services
.
obs
.
notifyObservers
(
null
"
browser
:
purge
-
session
-
history
"
)
;
is
(
ss
.
getClosedWindowCount
(
)
0
"
We
should
have
0
closed
windows
being
stored
.
"
)
;
let
newWin
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
let
tab
=
newWin
.
gBrowser
.
selectedTab
;
let
browser
=
tab
.
linkedBrowser
;
BrowserTestUtils
.
loadURIString
(
browser
PAGE
)
;
await
BrowserTestUtils
.
browserLoaded
(
browser
false
PAGE
)
;
await
TabStateFlusher
.
flush
(
browser
)
;
let
windowClosed
=
BrowserTestUtils
.
windowClosed
(
newWin
)
;
let
handled
=
false
;
whenDomWindowClosedHandled
(
(
)
=
>
{
forgetFn
(
)
;
is
(
ss
.
getClosedWindowCount
(
)
0
"
Should
have
forgotten
the
closed
window
"
)
;
handled
=
true
;
}
)
;
newWin
.
close
(
)
;
await
windowClosed
;
ok
(
handled
"
domwindowclosed
should
already
be
handled
here
"
)
;
is
(
ss
.
getClosedWindowCount
(
)
0
"
Should
not
have
stored
the
closed
window
"
)
;
}
;
add_task
(
async
function
test_forget_closed_tab
(
)
{
await
forgetTabHelper
(
(
)
=
>
{
ss
.
forgetClosedTab
(
window
0
)
;
}
)
;
}
)
;
add_task
(
async
function
test_forget_closed_window
(
)
{
await
forgetWinHelper
(
(
)
=
>
{
ss
.
forgetClosedWindow
(
0
)
;
}
)
;
}
)
;
add_task
(
async
function
test_forget_purged_tab
(
)
{
await
forgetTabHelper
(
(
)
=
>
{
Services
.
obs
.
notifyObservers
(
null
"
browser
:
purge
-
session
-
history
"
)
;
}
)
;
}
)
;
add_task
(
async
function
test_forget_purged_window
(
)
{
await
forgetWinHelper
(
(
)
=
>
{
Services
.
obs
.
notifyObservers
(
null
"
browser
:
purge
-
session
-
history
"
)
;
}
)
;
}
)
;
