"
use
strict
"
;
this
.
EXPORTED_SYMBOLS
=
[
"
TabAttributes
"
]
;
const
ATTRIBUTES_TO_SKIP
=
new
Set
(
[
"
image
"
"
muted
"
"
pending
"
"
iconLoadingPrincipal
"
]
)
;
this
.
TabAttributes
=
Object
.
freeze
(
{
persist
:
function
(
name
)
{
return
TabAttributesInternal
.
persist
(
name
)
;
}
get
:
function
(
tab
)
{
return
TabAttributesInternal
.
get
(
tab
)
;
}
set
:
function
(
tab
data
=
{
}
)
{
TabAttributesInternal
.
set
(
tab
data
)
;
}
}
)
;
var
TabAttributesInternal
=
{
_attrs
:
new
Set
(
)
persist
:
function
(
name
)
{
if
(
this
.
_attrs
.
has
(
name
)
|
|
ATTRIBUTES_TO_SKIP
.
has
(
name
)
)
{
return
false
;
}
this
.
_attrs
.
add
(
name
)
;
return
true
;
}
get
:
function
(
tab
)
{
let
data
=
{
}
;
for
(
let
name
of
this
.
_attrs
)
{
if
(
tab
.
hasAttribute
(
name
)
)
{
data
[
name
]
=
tab
.
getAttribute
(
name
)
;
}
}
return
data
;
}
set
:
function
(
tab
data
=
{
}
)
{
for
(
let
name
of
this
.
_attrs
)
{
tab
.
removeAttribute
(
name
)
;
}
for
(
let
name
in
data
)
{
if
(
!
ATTRIBUTES_TO_SKIP
.
has
(
name
)
)
{
tab
.
setAttribute
(
name
data
[
name
]
)
;
}
}
}
}
;
