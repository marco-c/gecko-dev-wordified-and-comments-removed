"
use
strict
"
;
const
Ci
=
Components
.
interfaces
;
const
Cc
=
Components
.
classes
;
const
Cr
=
Components
.
results
;
const
Cu
=
Components
.
utils
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
PREF_LOGLEVEL
=
"
browser
.
policies
.
loglevel
"
;
XPCOMUtils
.
defineLazyGetter
(
this
"
log
"
(
)
=
>
{
let
{
ConsoleAPI
}
=
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Console
.
jsm
"
{
}
)
;
return
new
ConsoleAPI
(
{
prefix
:
"
Policies
.
jsm
"
maxLogLevel
:
"
error
"
maxLogLevelPref
:
PREF_LOGLEVEL
}
)
;
}
)
;
this
.
EXPORTED_SYMBOLS
=
[
"
Policies
"
]
;
this
.
Policies
=
{
"
block_about_config
"
:
{
onBeforeUIStartup
(
manager
param
)
{
if
(
param
=
=
true
)
{
manager
.
disallowFeature
(
"
about
:
config
"
true
)
;
}
}
}
}
;
