"
use
strict
"
;
const
MASTER_PASSWORD
=
"
omgsecret
!
"
;
const
mpToken
=
Cc
[
"
mozilla
.
org
/
security
/
pk11tokendb
;
1
"
]
.
getService
(
Ci
.
nsIPK11TokenDB
)
.
getInternalKeyToken
(
)
;
async
function
checkDeviceManager
(
{
buttonIsDisabled
}
)
{
let
deviceManagerWindow
=
window
.
openDialog
(
"
chrome
:
/
/
pippki
/
content
/
device_manager
.
xul
"
"
"
"
"
)
;
await
BrowserTestUtils
.
waitForEvent
(
deviceManagerWindow
"
load
"
)
;
let
tree
=
deviceManagerWindow
.
document
.
getElementById
(
"
device_tree
"
)
;
ok
(
tree
"
The
device
tree
exists
"
)
;
for
(
let
i
=
0
;
i
<
tree
.
view
.
rowCount
;
i
+
+
)
{
tree
.
view
.
selection
.
select
(
i
)
;
try
{
let
selected_token
=
deviceManagerWindow
.
selected_slot
.
getToken
(
)
;
if
(
selected_token
.
isInternalKeyToken
)
{
break
;
}
}
catch
(
e
)
{
}
}
let
changePwButton
=
deviceManagerWindow
.
document
.
getElementById
(
"
change_pw_button
"
)
;
is
(
changePwButton
.
getAttribute
(
"
disabled
"
)
=
=
"
true
"
buttonIsDisabled
"
Change
Password
button
is
in
the
correct
state
:
"
+
buttonIsDisabled
)
;
await
BrowserTestUtils
.
closeWindow
(
deviceManagerWindow
)
;
}
async
function
checkAboutPreferences
(
{
checkboxIsDisabled
}
)
{
await
BrowserTestUtils
.
withNewTab
(
"
about
:
preferences
#
privacy
"
async
browser
=
>
{
is
(
browser
.
contentDocument
.
getElementById
(
"
useMasterPassword
"
)
.
disabled
checkboxIsDisabled
"
Master
Password
checkbox
is
in
the
correct
state
:
"
+
checkboxIsDisabled
)
;
}
)
;
}
add_task
(
async
function
test_policy_disable_masterpassword
(
)
{
ok
(
!
mpToken
.
hasPassword
"
Starting
the
test
with
no
password
"
)
;
await
checkDeviceManager
(
{
buttonIsDisabled
:
false
}
)
;
await
checkAboutPreferences
(
{
checkboxIsDisabled
:
false
}
)
;
await
setupPolicyEngineWithJson
(
{
policies
:
{
DisableMasterPasswordCreation
:
true
}
}
)
;
await
checkDeviceManager
(
{
buttonIsDisabled
:
true
}
)
;
await
checkAboutPreferences
(
{
checkboxIsDisabled
:
true
}
)
;
mpToken
.
changePassword
(
"
"
MASTER_PASSWORD
)
;
ok
(
mpToken
.
hasPassword
"
Master
password
was
set
"
)
;
await
checkDeviceManager
(
{
buttonIsDisabled
:
false
}
)
;
await
checkAboutPreferences
(
{
checkboxIsDisabled
:
false
}
)
;
mpToken
.
changePassword
(
MASTER_PASSWORD
"
"
)
;
ok
(
!
mpToken
.
hasPassword
"
Master
password
was
cleaned
up
"
)
;
}
)
;
