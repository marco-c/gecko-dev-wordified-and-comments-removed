"
use
strict
"
;
var
updateService
=
Cc
[
"
mozilla
.
org
/
updates
/
update
-
service
;
1
"
]
.
getService
(
Ci
.
nsIApplicationUpdateService
)
;
add_task
(
async
function
test_updates_pre_policy
(
)
{
let
originalUpdateAutoValue
=
await
updateService
.
getAutoUpdateIsEnabled
(
)
;
await
updateService
.
setAutoUpdateIsEnabled
(
false
)
;
registerCleanupFunction
(
async
(
)
=
>
{
await
updateService
.
setAutoUpdateIsEnabled
(
originalUpdateAutoValue
)
;
}
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
"
set
"
:
[
[
"
app
.
update
.
disabledForTesting
"
false
]
]
}
)
;
is
(
Services
.
policies
.
isAllowed
(
"
appUpdate
"
)
true
"
Since
no
policies
have
been
set
appUpdate
should
be
allowed
by
default
"
)
;
is
(
updateService
.
canCheckForUpdates
true
"
Should
be
able
to
check
for
updates
before
any
policies
are
in
effect
.
"
)
;
}
)
;
