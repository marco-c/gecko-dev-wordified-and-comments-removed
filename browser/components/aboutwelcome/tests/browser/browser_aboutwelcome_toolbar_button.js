"
use
strict
"
;
const
{
AboutWelcomeTelemetry
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
/
modules
/
aboutwelcome
/
AboutWelcomeTelemetry
.
sys
.
mjs
"
)
;
const
{
AWToolbarButton
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
/
modules
/
aboutwelcome
/
AWToolbarUtils
.
sys
.
mjs
"
)
;
const
TOOLBAR_PREF
=
"
browser
.
aboutwelcome
.
toolbarButtonEnabled
"
;
const
DID_SEE_FINAL_SCREEN_PREF
=
"
browser
.
aboutwelcome
.
didSeeFinalScreen
"
;
async
function
openNewTab
(
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
newtab
"
false
)
;
registerCleanupFunction
(
async
(
)
=
>
{
BrowserTestUtils
.
removeTab
(
tab
)
;
await
SpecialPowers
.
popPrefEnv
(
)
;
}
)
;
return
tab
.
linkedBrowser
;
}
add_task
(
async
function
test_add_and_remove_toolbar_button
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
DID_SEE_FINAL_SCREEN_PREF
false
]
]
}
)
;
let
win
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
win
.
BrowserOpenTab
(
)
;
ok
(
win
"
browser
exists
"
)
;
await
AWToolbarButton
.
maybeAddSetupButton
(
)
;
ok
(
!
win
.
document
.
getElementById
(
"
aboutwelcome
-
button
"
)
"
Button
should
not
exist
"
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
TOOLBAR_PREF
true
]
]
}
)
;
await
AWToolbarButton
.
maybeAddSetupButton
(
)
;
ok
(
win
.
document
.
getElementById
(
"
aboutwelcome
-
button
"
)
"
Button
should
be
added
.
"
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
TOOLBAR_PREF
false
]
]
}
)
;
ok
(
!
win
.
document
.
getElementById
(
"
aboutwelcome
-
button
"
)
"
Button
should
be
removed
"
)
;
await
SpecialPowers
.
popPrefEnv
(
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
}
)
;
