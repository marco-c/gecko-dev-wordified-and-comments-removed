const
CC
=
Components
.
Constructor
;
let
gMaxAvailWidth
;
let
gMaxAvailHeight
;
add_setup
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
privacy
.
resistFingerprinting
"
true
]
]
}
)
;
let
maxAvailSize
=
await
calcMaximumAvailSize
(
)
;
gMaxAvailWidth
=
maxAvailSize
.
maxAvailWidth
;
gMaxAvailHeight
=
maxAvailSize
.
maxAvailHeight
;
}
)
;
add_task
(
async
function
test_new_window
(
)
{
let
win
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
win
.
gBrowser
TEST_PATH
+
"
file_dummy
.
html
"
)
;
await
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
{
gMaxAvailWidth
gMaxAvailHeight
}
]
async
function
(
input
)
{
is
(
content
.
innerWidth
input
.
gMaxAvailWidth
"
The
window
.
innerWidth
has
a
correct
rounded
value
"
)
;
is
(
content
.
innerHeight
input
.
gMaxAvailHeight
"
The
window
.
innerHeight
has
a
correct
rounded
value
"
)
;
}
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
await
BrowserTestUtils
.
closeWindow
(
win
)
;
}
)
;
