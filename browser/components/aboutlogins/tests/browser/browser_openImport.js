add_task
(
async
function
setup
(
)
{
let
aboutLoginsTab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
{
gBrowser
url
:
"
about
:
logins
"
}
)
;
registerCleanupFunction
(
(
)
=
>
{
BrowserTestUtils
.
removeTab
(
aboutLoginsTab
)
;
}
)
;
}
)
;
add_task
(
async
function
test_open_import
(
)
{
let
promiseImportWindow
=
BrowserTestUtils
.
domWindowOpened
(
)
;
let
browser
=
gBrowser
.
selectedBrowser
;
await
BrowserTestUtils
.
synthesizeMouseAtCenter
(
"
menu
-
button
"
{
}
browser
)
;
await
ContentTask
.
spawn
(
browser
null
async
(
)
=
>
{
return
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
{
let
menuButton
=
Cu
.
waiveXrays
(
content
.
document
.
querySelector
(
"
menu
-
button
"
)
)
;
return
menuButton
.
shadowRoot
.
querySelector
(
"
.
menu
"
)
.
getAttribute
(
"
aria
-
hidden
"
)
=
=
"
false
"
;
}
"
waiting
for
menu
to
open
"
)
;
}
)
;
let
{
x
y
}
=
await
ContentTask
.
spawn
(
browser
null
async
(
)
=
>
{
let
menuButton
=
Cu
.
waiveXrays
(
content
.
document
.
querySelector
(
"
menu
-
button
"
)
)
;
let
prefsItem
=
menuButton
.
shadowRoot
.
querySelector
(
"
.
menuitem
-
import
"
)
;
return
prefsItem
.
getBoundingClientRect
(
)
;
}
)
;
await
BrowserTestUtils
.
synthesizeMouseAtPoint
(
x
+
5
y
+
5
{
}
browser
)
;
info
(
"
waiting
for
Import
to
get
opened
"
)
;
let
importWindow
=
await
promiseImportWindow
;
ok
(
true
"
Import
opened
"
)
;
importWindow
.
close
(
)
;
}
)
;
