"
use
strict
"
;
function
asyncElementRendered
(
)
{
return
Promise
.
resolve
(
)
;
}
function
importDependencies
(
templateFrame
destinationEl
)
{
let
templates
=
templateFrame
.
contentDocument
.
querySelectorAll
(
"
template
"
)
;
isnot
(
templates
null
"
Check
some
templates
found
"
)
;
for
(
let
template
of
templates
)
{
let
imported
=
document
.
importNode
(
template
true
)
;
destinationEl
.
appendChild
(
imported
)
;
}
}
function
stubFluentL10n
(
argsMap
)
{
document
.
l10n
=
{
setAttributes
(
element
id
args
)
{
element
.
setAttribute
(
"
data
-
l10n
-
id
"
id
)
;
for
(
let
attrName
of
Object
.
keys
(
argsMap
)
)
{
let
varName
=
argsMap
[
attrName
]
;
element
.
setAttribute
(
attrName
args
[
varName
]
)
;
}
}
}
;
}
