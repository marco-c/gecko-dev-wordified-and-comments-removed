export
default
class
LoginListItemFactory
{
static
create
(
login
)
{
let
template
=
document
.
querySelector
(
"
#
login
-
list
-
item
-
template
"
)
;
let
fragment
=
template
.
content
.
cloneNode
(
true
)
;
let
listItem
=
fragment
.
firstElementChild
;
LoginListItemFactory
.
update
(
listItem
login
)
;
return
listItem
;
}
static
update
(
listItem
login
)
{
let
title
=
listItem
.
querySelector
(
"
.
title
"
)
;
let
username
=
listItem
.
querySelector
(
"
.
username
"
)
;
let
favicon
=
listItem
.
querySelector
(
"
.
favicon
"
)
;
let
faviconWrapper
=
listItem
.
querySelector
(
"
.
favicon
-
wrapper
"
)
;
let
alertIcon
=
listItem
.
querySelector
(
"
.
alert
-
icon
"
)
;
if
(
!
login
.
guid
)
{
listItem
.
id
=
"
new
-
login
-
list
-
item
"
;
document
.
l10n
.
setAttributes
(
title
"
login
-
list
-
item
-
title
-
new
-
login
"
)
;
document
.
l10n
.
setAttributes
(
username
"
login
-
list
-
item
-
subtitle
-
new
-
login
"
)
;
return
;
}
if
(
!
listItem
.
id
)
{
listItem
.
id
=
"
lli
-
"
+
login
.
guid
;
listItem
.
dataset
.
guid
=
login
.
guid
;
}
if
(
title
.
textContent
!
=
login
.
title
)
{
title
.
textContent
=
login
.
title
;
}
let
trimmedUsernameValue
=
login
.
username
.
trim
(
)
;
if
(
trimmedUsernameValue
)
{
if
(
username
.
textContent
!
=
trimmedUsernameValue
)
{
username
.
removeAttribute
(
"
data
-
l10n
-
id
"
)
;
username
.
textContent
=
trimmedUsernameValue
;
}
}
else
{
document
.
l10n
.
setAttributes
(
username
"
login
-
list
-
item
-
subtitle
-
missing
-
username
"
)
;
}
if
(
login
.
faviconDataURI
)
{
faviconWrapper
.
classList
.
add
(
"
hide
-
default
-
favicon
"
)
;
favicon
.
src
=
login
.
faviconDataURI
;
}
if
(
listItem
.
classList
.
contains
(
"
breached
"
)
)
{
alertIcon
.
src
=
"
chrome
:
/
/
browser
/
content
/
aboutlogins
/
icons
/
breached
-
website
.
svg
"
;
document
.
l10n
.
setAttributes
(
alertIcon
"
about
-
logins
-
list
-
item
-
breach
-
icon
"
)
;
}
else
if
(
listItem
.
classList
.
contains
(
"
vulnerable
"
)
)
{
alertIcon
.
src
=
"
chrome
:
/
/
browser
/
content
/
aboutlogins
/
icons
/
vulnerable
-
password
.
svg
"
;
document
.
l10n
.
setAttributes
(
alertIcon
"
about
-
logins
-
list
-
item
-
vulnerable
-
password
-
icon
"
)
;
}
else
{
alertIcon
.
src
=
"
"
;
}
}
}
