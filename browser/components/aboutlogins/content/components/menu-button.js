export
default
class
MenuButton
extends
HTMLElement
{
connectedCallback
(
)
{
if
(
this
.
children
.
length
)
{
return
;
}
let
MenuButtonTemplate
=
document
.
querySelector
(
"
#
menu
-
button
-
template
"
)
;
this
.
attachShadow
(
{
mode
:
"
open
"
}
)
.
appendChild
(
MenuButtonTemplate
.
content
.
cloneNode
(
true
)
)
;
this
.
shadowRoot
.
querySelector
(
"
.
menu
-
button
"
)
.
addEventListener
(
"
click
"
this
)
;
}
handleEvent
(
event
)
{
switch
(
event
.
type
)
{
case
"
click
"
:
{
if
(
event
.
currentTarget
=
=
document
.
documentElement
&
&
event
.
target
=
=
this
&
&
event
.
originalTarget
=
=
this
.
shadowRoot
.
querySelector
(
"
.
menu
-
button
"
)
)
{
return
;
}
this
.
toggleMenu
(
)
;
break
;
}
}
}
toggleMenu
(
)
{
let
wasHidden
=
this
.
shadowRoot
.
querySelector
(
"
.
menu
"
)
.
getAttribute
(
"
aria
-
hidden
"
)
=
=
"
true
"
;
if
(
wasHidden
)
{
this
.
showMenu
(
)
;
}
else
{
this
.
hideMenu
(
)
;
}
}
hideMenu
(
)
{
this
.
shadowRoot
.
querySelector
(
"
.
menu
"
)
.
setAttribute
(
"
aria
-
hidden
"
"
true
"
)
;
document
.
documentElement
.
removeEventListener
(
"
click
"
this
true
)
;
}
showMenu
(
)
{
this
.
shadowRoot
.
querySelector
(
"
.
menu
"
)
.
setAttribute
(
"
aria
-
hidden
"
"
false
"
)
;
document
.
documentElement
.
addEventListener
(
"
click
"
this
true
)
;
}
}
customElements
.
define
(
"
menu
-
button
"
MenuButton
)
;
