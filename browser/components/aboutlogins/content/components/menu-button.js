import
ReflectedFluentElement
from
"
chrome
:
/
/
browser
/
content
/
aboutlogins
/
components
/
reflected
-
fluent
-
element
.
js
"
;
export
default
class
MenuButton
extends
ReflectedFluentElement
{
connectedCallback
(
)
{
if
(
this
.
shadowRoot
)
{
return
;
}
let
MenuButtonTemplate
=
document
.
querySelector
(
"
#
menu
-
button
-
template
"
)
;
this
.
attachShadow
(
{
mode
:
"
open
"
}
)
.
appendChild
(
MenuButtonTemplate
.
content
.
cloneNode
(
true
)
)
;
this
.
reflectFluentStrings
(
)
;
this
.
shadowRoot
.
querySelector
(
"
.
menu
-
button
"
)
.
addEventListener
(
"
click
"
this
)
;
}
static
get
reflectedFluentIDs
(
)
{
return
[
"
button
-
title
"
"
menuitem
-
import
"
"
menuitem
-
preferences
"
]
;
}
static
get
observedAttributes
(
)
{
return
MenuButton
.
reflectedFluentIDs
;
}
handleSpecialCaseFluentString
(
attrName
)
{
if
(
attrName
!
=
"
button
-
title
"
)
{
return
false
;
}
this
.
shadowRoot
.
querySelector
(
"
.
menu
-
button
"
)
.
setAttribute
(
"
title
"
this
.
getAttribute
(
attrName
)
)
;
return
true
;
}
handleEvent
(
event
)
{
switch
(
event
.
type
)
{
case
"
click
"
:
{
if
(
event
.
currentTarget
=
=
document
.
documentElement
&
&
event
.
target
=
=
this
&
&
event
.
originalTarget
=
=
this
.
shadowRoot
.
querySelector
(
"
.
menu
-
button
"
)
)
{
return
;
}
let
classList
=
event
.
originalTarget
.
classList
;
if
(
classList
.
contains
(
"
menuitem
-
import
"
)
|
|
classList
.
contains
(
"
menuitem
-
preferences
"
)
)
{
let
eventName
=
event
.
originalTarget
.
dataset
.
eventName
;
document
.
dispatchEvent
(
new
CustomEvent
(
eventName
{
bubbles
:
true
}
)
)
;
this
.
hideMenu
(
)
;
break
;
}
this
.
toggleMenu
(
)
;
break
;
}
}
}
toggleMenu
(
)
{
let
wasHidden
=
this
.
shadowRoot
.
querySelector
(
"
.
menu
"
)
.
getAttribute
(
"
aria
-
hidden
"
)
=
=
"
true
"
;
if
(
wasHidden
)
{
this
.
showMenu
(
)
;
}
else
{
this
.
hideMenu
(
)
;
}
}
hideMenu
(
)
{
this
.
shadowRoot
.
querySelector
(
"
.
menu
"
)
.
setAttribute
(
"
aria
-
hidden
"
"
true
"
)
;
document
.
documentElement
.
removeEventListener
(
"
click
"
this
true
)
;
}
showMenu
(
)
{
this
.
shadowRoot
.
querySelector
(
"
.
menu
"
)
.
setAttribute
(
"
aria
-
hidden
"
"
false
"
)
;
document
.
documentElement
.
addEventListener
(
"
click
"
this
true
)
;
}
}
customElements
.
define
(
"
menu
-
button
"
MenuButton
)
;
