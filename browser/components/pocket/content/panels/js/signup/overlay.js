import
React
from
"
react
"
;
import
ReactDOM
from
"
react
-
dom
"
;
import
pktPanelMessaging
from
"
.
.
/
messages
.
js
"
;
import
Signup
from
"
.
.
/
components
/
Signup
/
Signup
"
;
var
SignupOverlay
=
function
(
options
)
{
this
.
inited
=
false
;
this
.
active
=
false
;
this
.
setupClickEvents
=
function
(
)
{
pktPanelMessaging
.
clickHelper
(
document
.
querySelector
(
.
pkt_ext_learnmore
)
{
source
:
learn_more
}
)
;
pktPanelMessaging
.
clickHelper
(
document
.
querySelector
(
.
signup
-
btn
-
firefox
)
{
source
:
sign_up_1
}
)
;
pktPanelMessaging
.
clickHelper
(
document
.
querySelector
(
.
signup
-
btn
-
email
)
{
source
:
sign_up_2
}
)
;
pktPanelMessaging
.
clickHelper
(
document
.
querySelector
(
.
pkt_ext_login
)
{
source
:
log_in
}
)
;
}
;
this
.
create
=
function
(
)
{
const
parser
=
new
DOMParser
(
)
;
let
elBody
=
document
.
querySelector
(
body
)
;
const
{
searchParams
}
=
new
URL
(
window
.
location
.
href
)
;
const
isEmailSignupEnabled
=
searchParams
.
get
(
emailButton
)
=
=
=
true
;
const
pockethost
=
searchParams
.
get
(
pockethost
)
|
|
getpocket
.
com
;
const
locale
=
searchParams
.
get
(
locale
)
|
|
;
const
language
=
locale
.
split
(
-
)
[
0
]
.
toLowerCase
(
)
;
const
utmCampaign
=
searchParams
.
get
(
utmCampaign
)
|
|
firefox_door_hanger_menu
;
const
utmSource
=
searchParams
.
get
(
utmSource
)
|
|
control
;
const
layoutRefresh
=
searchParams
.
get
(
layoutRefresh
)
=
=
=
true
;
if
(
this
.
active
)
{
return
;
}
this
.
active
=
true
;
if
(
layoutRefresh
)
{
document
.
querySelector
(
.
pkt_ext_containersignup
)
?
.
classList
.
remove
(
pkt_ext_containersignup
)
;
ReactDOM
.
render
(
<
Signup
pockethost
=
{
pockethost
}
locale
=
{
locale
}
/
>
document
.
querySelector
(
body
)
)
;
}
else
{
const
templateData
=
{
pockethost
utmCampaign
utmSource
}
;
if
(
language
)
{
elBody
.
classList
.
add
(
pkt_ext_signup_
{
language
}
)
;
}
elBody
.
append
(
parser
.
parseFromString
(
Handlebars
.
templates
.
signup_shell
(
templateData
)
text
/
html
)
.
documentElement
)
;
if
(
!
isEmailSignupEnabled
)
{
document
.
querySelector
(
.
btn
-
container
-
email
)
.
remove
(
)
;
}
this
.
setupClickEvents
(
)
;
}
pktPanelMessaging
.
sendMessage
(
"
PKT_show_signup
"
)
;
}
;
}
;
export
default
SignupOverlay
;
