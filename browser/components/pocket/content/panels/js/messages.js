var
pktPanelMessaging
=
(
function
(
)
{
function
panelIdFromURL
(
url
)
{
var
panelId
=
url
.
match
(
/
panelId
=
(
[
\
w
|
\
d
|
\
.
]
*
)
&
?
/
)
;
if
(
panelId
&
&
panelId
.
length
>
1
)
{
return
panelId
[
1
]
;
}
return
0
;
}
function
removeMessageListener
(
messageId
panelId
callback
)
{
RPMRemoveMessageListener
(
{
messageId
}
_
{
panelId
}
callback
)
;
}
function
addMessageListener
(
messageId
panelId
callback
=
(
)
=
>
{
}
)
{
RPMAddMessageListener
(
{
messageId
}
_
{
panelId
}
callback
)
;
}
function
sendMessage
(
messageId
panelId
payload
=
{
}
callback
)
{
var
messagePayload
=
{
panelId
payload
}
;
if
(
callback
)
{
const
responseMessageId
=
{
messageId
}
_response
;
var
responseListener
=
function
(
responsePayload
)
{
callback
(
responsePayload
)
;
removeMessageListener
(
responseMessageId
panelId
responseListener
)
;
}
;
addMessageListener
(
responseMessageId
panelId
responseListener
)
;
}
RPMSendAsyncMessage
(
messageId
messagePayload
)
;
}
function
log
(
)
{
RPMSendAsyncMessage
(
"
PKT_log
"
arguments
)
;
}
return
{
log
panelIdFromURL
addMessageListener
sendMessage
}
;
}
)
(
)
;
