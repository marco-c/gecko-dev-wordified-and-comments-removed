var
pktPanelMessaging
=
{
removeMessageListener
(
messageId
callback
)
{
RPMRemoveMessageListener
(
messageId
callback
)
;
}
addMessageListener
(
messageId
callback
=
(
)
=
>
{
}
)
{
RPMAddMessageListener
(
messageId
callback
)
;
}
sendMessage
(
messageId
payload
=
{
}
callback
)
{
if
(
callback
)
{
const
responseMessageId
=
{
messageId
}
_response
;
var
responseListener
=
responsePayload
=
>
{
callback
(
responsePayload
)
;
this
.
removeMessageListener
(
responseMessageId
responseListener
)
;
}
;
this
.
addMessageListener
(
responseMessageId
responseListener
)
;
}
RPMSendAsyncMessage
(
messageId
payload
)
;
}
clickHelper
(
element
{
source
=
"
"
position
}
)
{
element
?
.
addEventListener
(
click
event
=
>
{
event
.
preventDefault
(
)
;
this
.
sendMessage
(
"
PKT_openTabWithUrl
"
{
url
:
event
.
currentTarget
.
getAttribute
(
href
)
source
position
}
)
;
}
)
;
}
log
(
)
{
RPMSendAsyncMessage
(
"
PKT_log
"
arguments
)
;
}
}
;
export
default
pktPanelMessaging
;
