"
use
strict
"
;
function
test_runner
(
test
)
{
let
testTask
=
async
(
)
=
>
{
const
sandbox
=
sinon
.
createSandbox
(
)
;
try
{
await
test
(
{
sandbox
}
)
;
}
finally
{
sandbox
.
restore
(
)
;
}
}
;
Object
.
defineProperty
(
testTask
"
name
"
{
value
:
test
.
name
}
)
;
add_task
(
testTask
)
;
}
test_runner
(
async
function
test_pktpi_getRecsForItem
(
{
sandbox
}
)
{
const
apiRequestStub
=
sandbox
.
stub
(
pktApi
"
apiRequest
"
)
;
pktApi
.
getRecsForItem
(
"
1234
"
{
success
(
)
{
}
}
)
;
Assert
.
ok
(
apiRequestStub
.
calledOnce
)
;
Assert
.
equal
(
apiRequestStub
.
getCall
(
0
)
.
args
[
0
]
.
data
.
item_id
"
1234
"
)
;
}
)
;
