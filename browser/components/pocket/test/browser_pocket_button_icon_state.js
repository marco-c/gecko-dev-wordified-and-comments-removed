"
use
strict
"
;
ChromeUtils
.
defineModuleGetter
(
this
"
SaveToPocket
"
"
chrome
:
/
/
pocket
/
content
/
SaveToPocket
.
jsm
"
)
;
add_task
(
async
function
(
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
https
:
/
/
example
.
com
/
browser
/
browser
/
components
/
pocket
/
test
/
test
.
html
"
)
;
const
loggedInStub
=
sinon
.
stub
(
pktApi
"
isUserLoggedIn
"
)
.
callsFake
(
(
)
=
>
true
)
;
const
addLinkStub
=
sinon
.
stub
(
pktApi
"
addLink
"
)
.
callsFake
(
(
)
=
>
true
)
;
info
(
"
clicking
on
pocket
button
in
toolbar
"
)
;
let
pocketButton
=
document
.
getElementById
(
"
save
-
to
-
pocket
-
button
"
)
;
let
pocketPanelShowing
=
BrowserTestUtils
.
waitForEvent
(
document
"
popupshown
"
true
)
;
pocketButton
.
click
(
)
;
await
pocketPanelShowing
;
SaveToPocket
.
itemSaved
(
)
;
SaveToPocket
.
updateToolbarNodeState
(
window
)
;
is
(
pocketButton
.
open
true
"
Pocket
button
is
open
"
)
;
is
(
pocketButton
.
getAttribute
(
"
pocketed
"
)
"
true
"
"
Pocket
item
is
pocketed
"
)
;
let
pocketPanelHidden
=
BrowserTestUtils
.
waitForEvent
(
document
"
popuphidden
"
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
gBrowser
.
tabs
[
0
]
)
;
await
pocketPanelHidden
;
is
(
pocketButton
.
open
false
"
Pocket
button
is
closed
"
)
;
is
(
pocketButton
.
getAttribute
(
"
pocketed
"
)
"
"
"
Pocket
item
is
not
pocketed
"
)
;
loggedInStub
.
restore
(
)
;
addLinkStub
.
restore
(
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
