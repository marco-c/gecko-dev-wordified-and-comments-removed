"
use
strict
"
;
add_task
(
async
function
test_autoclose_from_welcome
(
)
{
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
blank
"
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
migrate
.
content
-
modal
.
about
-
welcome
-
behavior
"
"
autoclose
"
]
]
}
)
;
let
migrationDialogPromise
=
waitForMigrationWizardDialogTab
(
)
;
MigrationUtils
.
showMigrationWizard
(
window
{
entrypoint
:
MigrationUtils
.
MIGRATION_ENTRYPOINTS
.
NEWTAB
}
)
;
let
prefsBrowser
=
await
migrationDialogPromise
;
let
prefsTab
=
gBrowser
.
getTabForBrowser
(
prefsBrowser
)
;
let
tabClosed
=
BrowserTestUtils
.
waitForTabClosing
(
prefsTab
)
;
let
dialog
=
prefsBrowser
.
contentDocument
.
querySelector
(
"
#
migrationWizardDialog
"
)
;
let
dialogClosed
=
BrowserTestUtils
.
waitForEvent
(
dialog
"
close
"
)
;
await
BrowserTestUtils
.
synthesizeKey
(
"
VK_ESCAPE
"
{
}
prefsBrowser
)
;
await
dialogClosed
;
await
tabClosed
;
Assert
.
ok
(
true
"
Preferences
tab
closed
with
autoclose
behavior
.
"
)
;
}
)
;
add_task
(
async
function
test_no_autoclose_from_welcome
(
)
{
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
blank
"
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
migrate
.
content
-
modal
.
about
-
welcome
-
behavior
"
"
default
"
]
]
}
)
;
let
migrationDialogPromise
=
waitForMigrationWizardDialogTab
(
)
;
MigrationUtils
.
showMigrationWizard
(
window
{
entrypoint
:
MigrationUtils
.
MIGRATION_ENTRYPOINTS
.
NEWTAB
}
)
;
let
prefsBrowser
=
await
migrationDialogPromise
;
let
prefsTab
=
gBrowser
.
getTabForBrowser
(
prefsBrowser
)
;
let
dialog
=
prefsBrowser
.
contentDocument
.
querySelector
(
"
#
migrationWizardDialog
"
)
;
let
dialogClosed
=
BrowserTestUtils
.
waitForEvent
(
dialog
"
close
"
)
;
await
BrowserTestUtils
.
synthesizeKey
(
"
VK_ESCAPE
"
{
}
prefsBrowser
)
;
await
dialogClosed
;
Assert
.
ok
(
!
prefsTab
.
closing
"
about
:
preferences
tab
is
not
closing
.
"
)
;
BrowserTestUtils
.
removeTab
(
prefsTab
)
;
}
)
;
add_task
(
async
function
test_no_autoclose_from_welcome
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
migrate
.
content
-
modal
.
about
-
welcome
-
behavior
"
"
standalone
"
]
]
}
)
;
let
windowOpened
=
BrowserTestUtils
.
domWindowOpened
(
)
;
MigrationUtils
.
showMigrationWizard
(
window
{
entrypoint
:
MigrationUtils
.
MIGRATION_ENTRYPOINTS
.
NEWTAB
}
)
;
let
dialogWin
=
await
windowOpened
;
Assert
.
ok
(
dialogWin
"
Top
-
level
dialog
window
opened
for
the
migrator
.
"
)
;
await
BrowserTestUtils
.
waitForEvent
(
dialogWin
"
MigrationWizard
:
Ready
"
)
;
let
dialogClosed
=
BrowserTestUtils
.
domWindowClosed
(
dialogWin
)
;
dialogWin
.
close
(
)
;
await
dialogClosed
;
}
)
;
