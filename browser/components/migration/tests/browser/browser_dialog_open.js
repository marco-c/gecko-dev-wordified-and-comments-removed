"
use
strict
"
;
add_task
(
async
function
test_migration_dialog_open_in_tab_dialog_box
(
)
{
let
migrationDialogPromise
=
waitForMigrationWizardDialogTab
(
)
;
MigrationUtils
.
showMigrationWizard
(
window
{
}
)
;
let
prefsBrowser
=
await
migrationDialogPromise
;
Assert
.
ok
(
true
"
Migration
dialog
was
opened
"
)
;
let
dialog
=
prefsBrowser
.
contentDocument
.
querySelector
(
"
#
migrationWizardDialog
"
)
;
let
dialogClosed
=
BrowserTestUtils
.
waitForEvent
(
dialog
"
close
"
)
;
await
BrowserTestUtils
.
synthesizeKey
(
"
VK_ESCAPE
"
{
}
prefsBrowser
)
;
await
dialogClosed
;
BrowserTestUtils
.
startLoadingURIString
(
prefsBrowser
"
about
:
blank
"
)
;
await
BrowserTestUtils
.
browserLoaded
(
prefsBrowser
)
;
}
)
;
add_task
(
async
function
test_migration_dialog_open_in_xul_window
(
)
{
let
firstWindowOpened
=
BrowserTestUtils
.
domWindowOpened
(
)
;
MigrationUtils
.
showMigrationWizard
(
null
{
}
)
;
let
firstDialogWin
=
await
firstWindowOpened
;
await
BrowserTestUtils
.
waitForEvent
(
firstDialogWin
"
MigrationWizard
:
Ready
"
)
;
Assert
.
ok
(
true
"
Migration
dialog
was
opened
"
)
;
let
secondWindowOpened
=
BrowserTestUtils
.
domWindowOpened
(
)
;
MigrationUtils
.
showMigrationWizard
(
firstDialogWin
{
}
)
;
let
secondDialogWin
=
await
secondWindowOpened
;
await
BrowserTestUtils
.
waitForEvent
(
secondDialogWin
"
MigrationWizard
:
Ready
"
)
;
for
(
let
dialogWin
of
[
firstDialogWin
secondDialogWin
]
)
{
let
dialogClosed
=
BrowserTestUtils
.
domWindowClosed
(
dialogWin
)
;
dialogWin
.
close
(
)
;
await
dialogClosed
;
}
}
)
;
