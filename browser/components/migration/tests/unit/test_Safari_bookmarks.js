"
use
strict
"
;
add_task
(
async
function
(
)
{
registerFakePath
(
"
ULibDir
"
do_get_file
(
"
Library
/
"
)
)
;
let
migrator
=
await
MigrationUtils
.
getMigrator
(
"
safari
"
)
;
Assert
.
ok
(
await
migrator
.
isSourceAvailable
(
)
)
;
let
source
=
await
MigrationUtils
.
getLocalizedString
(
"
source
-
name
-
safari
"
)
;
let
label
=
await
MigrationUtils
.
getLocalizedString
(
"
imported
-
bookmarks
-
source
"
{
source
}
)
;
let
expectedParents
=
[
PlacesUtils
.
toolbarFolderId
]
;
let
itemCount
=
0
;
let
gotFolder
=
false
;
let
listener
=
events
=
>
{
for
(
let
event
of
events
)
{
if
(
event
.
title
!
=
label
)
{
itemCount
+
+
;
}
if
(
event
.
itemType
=
=
PlacesUtils
.
bookmarks
.
TYPE_FOLDER
&
&
event
.
title
=
=
"
Stuff
"
)
{
gotFolder
=
true
;
}
if
(
expectedParents
.
length
&
&
event
.
title
=
=
label
)
{
let
index
=
expectedParents
.
indexOf
(
event
.
parentId
)
;
Assert
.
ok
(
index
!
=
-
1
"
Found
expected
parent
"
)
;
expectedParents
.
splice
(
index
1
)
;
}
}
}
;
PlacesUtils
.
observers
.
addListener
(
[
"
bookmark
-
added
"
]
listener
)
;
await
promiseMigration
(
migrator
MigrationUtils
.
resourceTypes
.
BOOKMARKS
)
;
PlacesUtils
.
observers
.
removeListener
(
[
"
bookmark
-
added
"
]
listener
)
;
Assert
.
ok
(
!
expectedParents
.
length
"
No
more
expected
parents
"
)
;
Assert
.
ok
(
gotFolder
"
Should
have
seen
the
folder
get
imported
"
)
;
Assert
.
equal
(
itemCount
13
"
Should
import
all
13
items
.
"
)
;
Assert
.
equal
(
MigrationUtils
.
_importQuantities
.
bookmarks
itemCount
"
Telemetry
reporting
correct
.
"
)
;
}
)
;
