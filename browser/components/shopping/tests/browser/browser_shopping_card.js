"
use
strict
"
;
add_task
(
async
function
test_chevron_button_markup
(
)
{
await
BrowserTestUtils
.
withNewTab
(
{
url
:
"
about
:
shoppingsidebar
"
gBrowser
}
async
browser
=
>
{
await
SpecialPowers
.
spawn
(
browser
[
MOCK_UNANALYZED_PRODUCT_RESPONSE
]
async
mockData
=
>
{
let
shoppingContainer
=
content
.
document
.
querySelector
(
"
shopping
-
container
"
)
.
wrappedJSObject
;
shoppingContainer
.
data
=
Cu
.
cloneInto
(
mockData
content
)
;
await
shoppingContainer
.
updateComplete
;
let
shoppingSettings
=
content
.
document
.
querySelector
(
"
shopping
-
container
"
)
.
shadowRoot
.
querySelector
(
"
shopping
-
settings
"
)
;
let
shoppingCard
=
shoppingSettings
.
shadowRoot
.
querySelector
(
"
shopping
-
card
"
)
;
let
detailsEl
=
shoppingCard
.
shadowRoot
.
querySelector
(
"
details
"
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
detailsEl
.
querySelector
(
"
.
chevron
-
icon
"
)
)
;
let
chevronButton
=
detailsEl
.
querySelector
(
"
.
chevron
-
icon
"
)
;
is
(
chevronButton
.
getAttribute
(
"
aria
-
labelledby
"
)
"
header
"
"
The
chevron
button
is
has
an
accessible
name
"
)
;
}
)
;
}
)
;
}
)
;
