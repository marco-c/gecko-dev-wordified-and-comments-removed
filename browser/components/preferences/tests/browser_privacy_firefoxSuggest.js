"
use
strict
"
;
ChromeUtils
.
defineESModuleGetters
(
this
{
QuickSuggest
:
"
resource
:
/
/
/
modules
/
QuickSuggest
.
sys
.
mjs
"
}
)
;
const
DATA_COLLECTION_TOGGLE_ID
=
"
firefoxSuggestDataCollectionPrivacyToggle
"
;
const
EXPECTED
=
{
[
QuickSuggest
.
SETTINGS_UI
.
FULL
]
:
{
[
DATA_COLLECTION_TOGGLE_ID
]
:
{
isVisible
:
true
}
}
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
:
{
[
DATA_COLLECTION_TOGGLE_ID
]
:
{
isVisible
:
false
}
}
[
QuickSuggest
.
SETTINGS_UI
.
OFFLINE_ONLY
]
:
{
[
DATA_COLLECTION_TOGGLE_ID
]
:
{
isVisible
:
false
}
}
}
;
requestLongerTimeout
(
10
)
;
add_task
(
async
function
initiallyDisabled_disable
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
false
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
nimbusVariables
:
{
quickSuggestEnabled
:
false
}
}
)
;
}
)
;
add_task
(
async
function
initiallyDisabled_disable_settingsUIFull
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
false
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
nimbusVariables
:
{
quickSuggestEnabled
:
false
quickSuggestSettingsUi
:
QuickSuggest
.
SETTINGS_UI
.
FULL
}
}
)
;
}
)
;
add_task
(
async
function
initiallyDisabled_enable
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
false
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
nimbusVariables
:
{
quickSuggestEnabled
:
true
}
newExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
FULL
]
}
)
;
}
)
;
add_task
(
async
function
initiallyDisabled_enable_settingsUiFull
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
false
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
nimbusVariables
:
{
quickSuggestEnabled
:
true
quickSuggestSettingsUi
:
QuickSuggest
.
SETTINGS_UI
.
FULL
}
newExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
FULL
]
}
)
;
}
)
;
add_task
(
async
function
initiallyDisabled_enable_settingsUiNone
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
false
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
nimbusVariables
:
{
quickSuggestEnabled
:
true
quickSuggestSettingsUi
:
QuickSuggest
.
SETTINGS_UI
.
NONE
}
}
)
;
}
)
;
add_task
(
async
function
initiallyDisabled_enable_settingsUiOfflineOnly
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
false
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
nimbusVariables
:
{
quickSuggestEnabled
:
true
quickSuggestSettingsUi
:
QuickSuggest
.
SETTINGS_UI
.
OFFLINE_ONLY
}
newExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
OFFLINE_ONLY
]
}
)
;
}
)
;
add_task
(
async
function
initiallyEnabled_disable
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
true
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
FULL
]
nimbusVariables
:
{
quickSuggestEnabled
:
false
}
newExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
}
)
;
}
)
;
add_task
(
async
function
initiallyEnabled_disable_settingsUiFull
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
true
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
FULL
]
nimbusVariables
:
{
quickSuggestEnabled
:
false
quickSuggestSettingsUi
:
QuickSuggest
.
SETTINGS_UI
.
FULL
}
newExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
}
)
;
}
)
;
add_task
(
async
function
initiallyEnabled_enable
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
true
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
FULL
]
nimbusVariables
:
{
quickSuggestEnabled
:
true
}
}
)
;
}
)
;
add_task
(
async
function
initiallyEnabled_settingsUiFull
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
true
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
FULL
]
nimbusVariables
:
{
quickSuggestSettingsUi
:
QuickSuggest
.
SETTINGS_UI
.
FULL
}
}
)
;
}
)
;
add_task
(
async
function
initiallyEnabled_settingsUiNone
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
true
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
FULL
]
nimbusVariables
:
{
quickSuggestSettingsUi
:
QuickSuggest
.
SETTINGS_UI
.
NONE
}
newExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
NONE
]
}
)
;
}
)
;
add_task
(
async
function
initiallyEnabled_settingsUiOfflineOnly
(
)
{
await
doSuggestVisibilityTest
(
{
pane
:
"
privacy
"
initialSuggestEnabled
:
true
initialExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
FULL
]
nimbusVariables
:
{
quickSuggestSettingsUi
:
QuickSuggest
.
SETTINGS_UI
.
OFFLINE_ONLY
}
newExpected
:
EXPECTED
[
QuickSuggest
.
SETTINGS_UI
.
OFFLINE_ONLY
]
}
)
;
}
)
;
