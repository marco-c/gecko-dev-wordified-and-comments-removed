ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
BROWSER_LANGUAGES_URL
=
"
chrome
:
/
/
browser
/
content
/
preferences
/
browserLanguages
.
xul
"
;
function
assertLocaleOrder
(
list
locales
)
{
is
(
list
.
children
.
length
2
"
There
are
two
requested
locales
"
)
;
is
(
Array
.
from
(
list
.
children
)
.
map
(
child
=
>
child
.
value
)
.
join
(
"
"
)
locales
"
The
requested
locales
are
in
order
"
)
;
}
async
function
openDialog
(
doc
)
{
let
dialogLoaded
=
promiseLoadSubDialog
(
BROWSER_LANGUAGES_URL
)
;
doc
.
getElementById
(
"
manageBrowserLanguagesButton
"
)
.
doCommand
(
)
;
let
dialogWin
=
await
dialogLoaded
;
let
dialogDoc
=
dialogWin
.
document
;
let
list
=
dialogDoc
.
getElementById
(
"
activeLocales
"
)
;
let
dialog
=
dialogDoc
.
getElementById
(
"
BrowserLanguagesDialog
"
)
;
return
{
dialog
dialogDoc
list
}
;
}
add_task
(
async
function
testReorderingBrowserLanguages
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
intl
.
multilingual
.
enabled
"
true
]
[
"
intl
.
locale
.
requested
"
"
pl
en
-
US
"
]
]
}
)
;
await
openPreferencesViaOpenPreferencesAPI
(
"
paneGeneral
"
{
leaveOpen
:
true
}
)
;
let
doc
=
gBrowser
.
contentDocument
;
let
messageBar
=
doc
.
getElementById
(
"
confirmBrowserLanguage
"
)
;
is
(
messageBar
.
hidden
true
"
The
message
bar
is
hidden
at
first
"
)
;
let
{
dialog
dialogDoc
list
}
=
await
openDialog
(
doc
)
;
assertLocaleOrder
(
list
"
pl
en
-
US
"
)
;
dialogDoc
.
getElementById
(
"
down
"
)
.
doCommand
(
)
;
assertLocaleOrder
(
list
"
en
-
US
pl
"
)
;
let
dialogClosed
=
BrowserTestUtils
.
waitForEvent
(
dialogDoc
.
documentElement
"
dialogclosing
"
)
;
dialog
.
acceptDialog
(
)
;
await
dialogClosed
;
is
(
messageBar
.
hidden
false
"
The
message
bar
is
now
visible
"
)
;
is
(
messageBar
.
querySelector
(
"
button
"
)
.
getAttribute
(
"
locales
"
)
"
en
-
US
pl
"
"
The
locales
are
set
on
the
message
bar
button
"
)
;
let
newDialog
=
await
openDialog
(
doc
)
;
dialog
=
newDialog
.
dialog
;
dialogDoc
=
newDialog
.
dialogDoc
;
list
=
newDialog
.
list
;
assertLocaleOrder
(
list
"
en
-
US
pl
"
)
;
list
.
selectedItem
=
list
.
querySelector
(
"
[
value
=
'
pl
'
]
"
)
;
dialogDoc
.
getElementById
(
"
up
"
)
.
doCommand
(
)
;
assertLocaleOrder
(
list
"
pl
en
-
US
"
)
;
dialogClosed
=
BrowserTestUtils
.
waitForEvent
(
dialogDoc
.
documentElement
"
dialogclosing
"
)
;
dialog
.
acceptDialog
(
)
;
await
dialogClosed
;
is
(
messageBar
.
hidden
true
"
The
message
bar
is
hidden
again
"
)
;
BrowserTestUtils
.
removeTab
(
gBrowser
.
selectedTab
)
;
}
)
;
