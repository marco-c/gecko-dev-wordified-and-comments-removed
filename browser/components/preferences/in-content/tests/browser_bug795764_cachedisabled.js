const
{
interfaces
:
Ci
utils
:
Cu
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
PlacesUtils
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
NetUtil
.
jsm
"
)
;
function
test
(
)
{
waitForExplicitFinish
(
)
;
let
prefs
=
[
"
browser
.
cache
.
offline
.
enable
"
"
browser
.
cache
.
disk
.
enable
"
"
browser
.
cache
.
memory
.
enable
"
]
;
for
(
let
pref
of
prefs
)
{
Services
.
prefs
.
setBoolPref
(
pref
false
)
;
}
let
principal
=
Services
.
scriptSecurityManager
.
createCodebasePrincipalFromOrigin
(
"
https
:
/
/
www
.
foo
.
com
"
)
;
Services
.
perms
.
addFromPrincipal
(
principal
"
persistent
-
storage
"
Ci
.
nsIPermissionManager
.
ALLOW_ACTION
)
;
registerCleanupFunction
(
function
(
)
{
for
(
let
pref
of
prefs
)
{
Services
.
prefs
.
clearUserPref
(
pref
)
;
}
Services
.
perms
.
removeFromPrincipal
(
principal
"
persistent
-
storage
"
)
;
}
)
;
open_preferences
(
runTest
)
;
}
function
runTest
(
win
)
{
is
(
gBrowser
.
currentURI
.
spec
"
about
:
preferences
"
"
about
:
preferences
loaded
"
)
;
let
tab
=
win
.
document
;
let
elements
=
tab
.
getElementById
(
"
mainPrefPane
"
)
.
children
;
win
.
gotoPref
(
"
panePrivacy
"
)
;
for
(
let
element
of
elements
)
{
if
(
element
.
nodeName
=
=
"
preferences
"
)
{
continue
;
}
let
attributeValue
=
element
.
getAttribute
(
"
data
-
category
"
)
;
if
(
attributeValue
=
=
"
panePrivacy
"
)
{
is_element_visible
(
element
"
Privacy
elements
should
be
visible
"
)
;
}
else
{
is_element_hidden
(
element
"
Non
-
Privacy
elements
should
be
hidden
"
)
;
}
}
gBrowser
.
removeCurrentTab
(
)
;
win
.
close
(
)
;
finish
(
)
;
}
