const
PREF_NAME
=
"
browser
.
urlbar
.
matchBuckets
"
;
const
HISTORY_FIRST_PREF_VALUE
=
"
general
:
5
suggestion
:
Infinity
"
;
const
CHECKBOX_ID
=
"
showSearchSuggestionsFirstCheckbox
"
;
add_task
(
async
function
openWithSearchSuggestionsShownFirst
(
)
{
Assert
.
equal
(
Services
.
prefs
.
getCharPref
(
PREF_NAME
"
"
)
"
"
"
Pref
should
be
cleared
initially
"
)
;
await
openPreferencesViaOpenPreferencesAPI
(
"
search
"
{
leaveOpen
:
true
}
)
;
let
doc
=
gBrowser
.
selectedBrowser
.
contentDocument
;
let
checkbox
=
doc
.
getElementById
(
CHECKBOX_ID
)
;
Assert
.
equal
(
checkbox
.
checked
true
"
Checkbox
should
be
checked
"
)
;
checkbox
.
checked
=
false
;
checkbox
.
doCommand
(
)
;
Assert
.
equal
(
Services
.
prefs
.
getCharPref
(
PREF_NAME
"
"
)
HISTORY_FIRST_PREF_VALUE
"
Pref
should
now
be
set
to
show
history
first
"
)
;
Services
.
prefs
.
clearUserPref
(
PREF_NAME
)
;
Assert
.
equal
(
checkbox
.
checked
true
"
Checkbox
should
become
checked
after
clearing
pref
"
)
;
gBrowser
.
removeCurrentTab
(
)
;
}
)
;
add_task
(
async
function
openWithHistoryShownFirst
(
)
{
Services
.
prefs
.
setCharPref
(
PREF_NAME
HISTORY_FIRST_PREF_VALUE
)
;
await
openPreferencesViaOpenPreferencesAPI
(
"
search
"
{
leaveOpen
:
true
}
)
;
let
doc
=
gBrowser
.
selectedBrowser
.
contentDocument
;
let
checkbox
=
doc
.
getElementById
(
CHECKBOX_ID
)
;
Assert
.
equal
(
checkbox
.
checked
false
"
Checkbox
should
be
unchecked
"
)
;
checkbox
.
checked
=
true
;
checkbox
.
doCommand
(
)
;
Assert
.
equal
(
Services
.
prefs
.
getCharPref
(
PREF_NAME
"
"
)
"
"
"
Pref
should
now
be
cleared
to
show
search
suggestions
first
"
)
;
Services
.
prefs
.
setCharPref
(
PREF_NAME
HISTORY_FIRST_PREF_VALUE
)
;
Assert
.
equal
(
checkbox
.
checked
false
"
Checkbox
should
become
unchecked
after
setting
pref
"
)
;
gBrowser
.
removeCurrentTab
(
)
;
Services
.
prefs
.
clearUserPref
(
PREF_NAME
)
;
}
)
;
