"
use
strict
"
;
async
function
openTabInUserContext
(
uri
userContextId
)
{
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
uri
{
userContextId
}
)
;
let
browser
=
gBrowser
.
getBrowserForTab
(
tab
)
;
await
BrowserTestUtils
.
browserLoaded
(
browser
false
uri
)
;
return
{
tab
}
;
}
add_task
(
async
function
test_tab_color_updates
(
)
{
const
kId
=
2
;
let
{
tab
}
=
await
openTabInUserContext
(
"
https
:
/
/
example
.
com
/
"
kId
)
;
let
contextIdInfo
=
ContextualIdentityService
.
getPublicIdentityFromId
(
kId
)
;
ok
(
tab
.
classList
.
contains
(
"
identity
-
color
-
"
+
contextIdInfo
.
color
)
Should
use
color
{
contextIdInfo
.
color
}
for
tab
)
;
let
name
=
"
Foo
"
;
let
otherColor
=
contextIdInfo
.
color
=
=
"
green
"
?
"
orange
"
:
"
green
"
;
registerCleanupFunction
(
(
)
=
>
ContextualIdentityService
.
resetDefault
(
)
)
;
ContextualIdentityService
.
update
(
kId
name
contextIdInfo
.
icon
otherColor
)
;
ok
(
tab
.
classList
.
contains
(
"
identity
-
color
-
"
+
otherColor
)
Should
use
color
{
otherColor
}
for
tab
after
update
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
)
;
