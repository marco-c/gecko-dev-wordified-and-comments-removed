"
use
strict
"
;
requestLongerTimeout
(
2
)
;
add_task
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
signon
.
management
.
page
.
enabled
"
true
]
]
}
)
;
let
aboutURLs
=
[
]
;
let
skipURLs
=
[
"
addons
"
"
credits
"
"
telemetry
"
"
downloads
"
"
debugging
"
"
debugging
-
new
"
"
protections
"
]
;
for
(
let
cid
in
Cc
)
{
let
result
=
cid
.
match
(
/
mozilla
.
org
\
/
network
\
/
protocol
\
/
about
;
1
\
?
what
\
=
(
.
*
)
/
)
;
if
(
!
result
)
{
continue
;
}
let
aboutType
=
result
[
1
]
;
let
contract
=
"
mozilla
.
org
/
network
/
protocol
/
about
;
1
?
what
=
"
+
aboutType
;
try
{
let
am
=
Cc
[
contract
]
.
getService
(
Ci
.
nsIAboutModule
)
;
let
uri
=
Services
.
io
.
newURI
(
"
about
:
"
+
aboutType
)
;
let
flags
=
am
.
getURIFlags
(
uri
)
;
if
(
!
(
flags
&
Ci
.
nsIAboutModule
.
HIDE_FROM_ABOUTABOUT
)
&
&
!
skipURLs
.
includes
(
aboutType
)
)
{
aboutURLs
.
push
(
aboutType
)
;
}
}
catch
(
e
)
{
}
}
for
(
let
url
of
aboutURLs
)
{
info
(
"
Loading
about
:
"
+
url
)
;
let
tab
=
BrowserTestUtils
.
addTab
(
gBrowser
"
about
:
"
+
url
{
userContextId
:
1
}
)
;
await
BrowserTestUtils
.
browserLoaded
(
tab
.
linkedBrowser
)
;
ok
(
true
"
Done
loading
about
:
"
+
url
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
}
)
;
