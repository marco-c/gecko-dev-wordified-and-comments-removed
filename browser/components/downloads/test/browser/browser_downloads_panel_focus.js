"
use
strict
"
;
add_task
(
async
function
setup
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
download
.
improvements_to_download_panel
"
true
]
]
}
)
;
registerCleanupFunction
(
async
(
)
=
>
{
info
(
"
Resetting
downloads
and
closing
downloads
panel
"
)
;
await
task_resetState
(
)
;
}
)
;
let
downloadList
=
await
Downloads
.
getList
(
Downloads
.
ALL
)
;
let
downloadCount
=
(
await
downloadList
.
getAll
(
)
)
.
length
;
is
(
downloadCount
0
"
At
the
start
of
the
test
there
should
be
0
downloads
"
)
;
}
)
;
add_task
(
async
function
test_focus
(
)
{
info
(
"
creating
a
download
and
setting
it
to
in
progress
"
)
;
await
task_addDownloads
(
[
{
state
:
DownloadsCommon
.
DOWNLOAD_DOWNLOADING
}
]
)
;
let
publicList
=
await
Downloads
.
getList
(
Downloads
.
PUBLIC
)
;
let
downloads
=
await
publicList
.
getAll
(
)
;
downloads
[
0
]
.
stopped
=
false
;
info
(
"
waiting
for
the
panel
to
open
"
)
;
await
task_openPanel
(
)
;
is
(
DownloadsView
.
richListBox
.
itemCount
1
"
there
should
be
exactly
one
download
listed
"
)
;
is
(
Services
.
focus
.
focusedElement
DownloadsView
.
richListBox
"
the
downloads
list
should
have
focus
"
)
;
is
(
DownloadsView
.
richListBox
.
itemChildren
[
0
]
DownloadsView
.
richListBox
.
selectedItem
"
the
focused
item
should
be
the
only
download
in
the
list
"
)
;
info
(
"
closing
the
panel
and
creating
a
second
download
"
)
;
DownloadsPanel
.
hidePanel
(
)
;
await
task_addDownloads
(
[
{
state
:
DownloadsCommon
.
DOWNLOAD_DOWNLOADING
}
]
)
;
info
(
"
waiting
for
the
panel
to
open
after
starting
the
second
download
"
)
;
await
task_openPanel
(
)
;
is
(
DownloadsView
.
richListBox
.
itemCount
2
"
there
should
be
two
downloads
listed
"
)
;
is
(
Services
.
focus
.
focusedElement
DownloadsView
.
richListBox
"
the
downloads
list
should
have
focus
"
)
;
is
(
DownloadsView
.
richListBox
.
itemChildren
[
0
]
DownloadsView
.
richListBox
.
selectedItem
"
the
focused
item
should
be
the
first
download
in
the
list
"
)
;
info
(
"
closing
the
panel
and
creating
a
third
download
"
)
;
DownloadsPanel
.
hidePanel
(
)
;
await
task_addDownloads
(
[
{
state
:
DownloadsCommon
.
DOWNLOAD_DOWNLOADING
}
]
)
;
info
(
"
waiting
for
the
panel
to
open
after
starting
the
third
download
"
)
;
await
task_openPanel
(
)
;
is
(
DownloadsView
.
richListBox
.
itemCount
3
"
there
should
be
three
downloads
listed
"
)
;
is
(
Services
.
focus
.
focusedElement
DownloadsView
.
richListBox
"
the
downloads
list
should
have
focus
"
)
;
is
(
DownloadsView
.
richListBox
.
itemChildren
[
0
]
DownloadsView
.
richListBox
.
selectedItem
"
the
focused
item
should
be
the
first
download
in
the
list
"
)
;
}
)
;
