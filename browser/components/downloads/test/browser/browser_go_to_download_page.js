const
ReferrerInfo
=
Components
.
Constructor
(
"
mozilla
.
org
/
referrer
-
info
;
1
"
"
nsIReferrerInfo
"
"
init
"
)
;
const
TEST_REFERRER
=
"
https
:
/
/
example
.
com
/
"
;
registerCleanupFunction
(
async
function
(
)
{
await
task_resetState
(
)
;
await
PlacesUtils
.
history
.
clear
(
)
;
}
)
;
async
function
addDownload
(
referrerInfo
)
{
let
startTimeMs
=
Date
.
now
(
)
;
let
publicList
=
await
Downloads
.
getList
(
Downloads
.
PUBLIC
)
;
let
downloadData
=
{
source
:
{
url
:
"
http
:
/
/
www
.
example
.
com
/
test
-
download
.
txt
"
referrerInfo
}
target
:
{
path
:
gTestTargetFile
.
path
}
startTime
:
new
Date
(
startTimeMs
+
+
)
}
;
let
download
=
await
Downloads
.
createDownload
(
downloadData
)
;
await
publicList
.
add
(
download
)
;
await
download
.
start
(
)
;
}
add_task
(
async
function
test_go_to_download_page
(
)
{
let
referrerInfo
=
new
ReferrerInfo
(
Ci
.
nsIReferrerInfo
.
NO_REFERRER
true
NetUtil
.
newURI
(
TEST_REFERRER
)
)
;
let
tabPromise
=
BrowserTestUtils
.
waitForNewTab
(
gBrowser
TEST_REFERRER
)
;
await
promiseFocus
(
)
;
await
task_resetState
(
)
;
await
addDownload
(
referrerInfo
)
;
await
task_openPanel
(
)
;
let
win
=
await
openLibrary
(
"
Downloads
"
)
;
registerCleanupFunction
(
function
(
)
{
win
.
close
(
)
;
}
)
;
let
listbox
=
win
.
document
.
getElementById
(
"
downloadsListBox
"
)
;
ok
(
listbox
"
download
list
box
present
"
)
;
listbox
.
itemChildren
[
0
]
.
click
(
)
;
let
contextMenu
=
win
.
document
.
getElementById
(
"
downloadsContextMenu
"
)
;
let
popupShownPromise
=
BrowserTestUtils
.
waitForEvent
(
contextMenu
"
popupshown
"
)
;
EventUtils
.
synthesizeMouseAtCenter
(
listbox
.
itemChildren
[
0
]
{
type
:
"
contextmenu
"
button
:
2
}
win
)
;
await
popupShownPromise
;
let
goToDownloadButton
=
[
.
.
.
contextMenu
.
children
]
.
find
(
child
=
>
child
.
command
=
=
"
downloadsCmd_openReferrer
"
)
;
goToDownloadButton
.
click
(
)
;
let
newTab
=
await
tabPromise
;
ok
(
newTab
"
Go
To
Download
Page
opened
a
new
tab
"
)
;
gBrowser
.
removeTab
(
newTab
)
;
}
)
;
