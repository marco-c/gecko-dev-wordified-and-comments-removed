add_task
(
async
function
test_first_download_panel
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
download
.
autohideButton
"
false
]
]
}
)
;
await
promiseButtonShown
(
"
downloads
-
button
"
)
;
let
oldPrefValue
=
Services
.
prefs
.
getBoolPref
(
"
browser
.
download
.
panel
.
shown
"
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
download
.
panel
.
shown
"
false
)
;
registerCleanupFunction
(
async
function
(
)
{
await
task_resetState
(
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
download
.
panel
.
shown
"
oldPrefValue
)
;
}
)
;
await
task_resetState
(
)
;
DownloadsCommon
.
getData
(
window
)
.
panelHasShownBefore
=
false
;
info
(
"
waiting
for
panel
open
"
)
;
let
promise
=
promisePanelOpened
(
)
;
DownloadsCommon
.
getData
(
window
)
.
_notifyDownloadEvent
(
"
start
"
)
;
await
promise
;
DownloadsPanel
.
hidePanel
(
)
;
ok
(
DownloadsCommon
.
getData
(
window
)
.
panelHasShownBefore
"
Should
have
recorded
that
the
panel
was
opened
on
a
download
.
"
)
;
let
originalOnPopupShown
=
DownloadsPanel
.
onPopupShown
;
DownloadsPanel
.
onPopupShown
=
function
(
)
{
originalOnPopupShown
.
apply
(
this
arguments
)
;
ok
(
false
"
Should
not
have
opened
the
downloads
panel
.
"
)
;
}
;
DownloadsCommon
.
getData
(
window
)
.
_notifyDownloadEvent
(
"
start
"
)
;
await
new
Promise
(
resolve
=
>
setTimeout
(
resolve
2000
)
)
;
DownloadsPanel
.
onPopupShown
=
originalOnPopupShown
;
}
)
;
