"
use
strict
"
;
add_task
(
async
function
test_toggle_never_translate_language_menuitem
(
)
{
const
{
cleanup
runInPage
}
=
await
loadTestPage
(
{
page
:
SPANISH_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
prefs
:
[
[
"
browser
.
translations
.
neverTranslateLanguages
"
"
pl
fr
"
]
]
}
)
;
await
assertTranslationsButton
(
{
button
:
true
circleArrows
:
false
locale
:
false
icon
:
true
}
"
The
translations
button
is
visible
.
"
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
info
(
"
Simulate
clicking
never
-
translate
-
language
in
the
settings
menu
"
+
"
adding
the
document
language
from
the
neverTranslateLanguages
pref
"
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelDefaultView
}
)
;
await
openTranslationsSettingsMenu
(
)
;
await
assertIsNeverTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
clickNeverTranslateLanguage
(
)
;
await
assertIsNeverTranslateLanguage
(
"
es
"
{
checked
:
true
}
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
navigate
(
"
Reload
the
page
"
{
url
:
SPANISH_PAGE_URL
}
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
navigate
(
"
Navigate
to
a
different
Spanish
page
"
{
url
:
SPANISH_PAGE_URL_DOT_ORG
}
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
cleanup
(
)
;
}
)
;
add_task
(
async
function
test_toggle_never_translate_language_menuitem_with_active_translations
(
)
{
const
{
cleanup
resolveDownloads
runInPage
}
=
await
loadTestPage
(
{
page
:
SPANISH_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
prefs
:
[
[
"
browser
.
translations
.
neverTranslateLanguages
"
"
pl
fr
"
]
]
}
)
;
await
assertTranslationsButton
(
{
button
:
true
circleArrows
:
false
locale
:
false
icon
:
true
}
"
The
button
is
available
.
"
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelDefaultView
}
)
;
await
clickTranslateButton
(
{
downloadHandler
:
resolveDownloads
}
)
;
await
assertPageIsTranslated
(
"
es
"
"
en
"
runInPage
)
;
info
(
"
Simulate
clicking
never
-
translate
-
language
in
the
settings
menu
"
+
"
adding
the
document
language
from
the
neverTranslateLanguages
pref
"
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelRevisitView
}
)
;
await
openTranslationsSettingsMenu
(
)
;
await
assertIsNeverTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
clickNeverTranslateLanguage
(
)
;
await
assertIsNeverTranslateLanguage
(
"
es
"
{
checked
:
true
}
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
navigate
(
"
Reload
the
page
"
{
url
:
SPANISH_PAGE_URL
}
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
cleanup
(
)
;
}
)
;
add_task
(
async
function
test_toggle_never_translate_language_menuitem_with_always_translate_active
(
)
{
const
{
cleanup
resolveDownloads
runInPage
}
=
await
loadTestPage
(
{
page
:
SPANISH_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
prefs
:
[
[
"
browser
.
translations
.
alwaysTranslateLanguages
"
"
uk
it
"
]
[
"
browser
.
translations
.
neverTranslateLanguages
"
"
pl
fr
"
]
]
}
)
;
await
assertTranslationsButton
(
{
button
:
true
circleArrows
:
false
locale
:
false
icon
:
true
}
"
The
button
is
available
.
"
)
;
info
(
"
Simulate
clicking
always
-
translate
-
language
in
the
settings
menu
"
+
"
adding
the
document
language
to
the
alwaysTranslateLanguages
pref
"
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelDefaultView
}
)
;
await
openTranslationsSettingsMenu
(
)
;
await
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
assertIsNeverTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
clickAlwaysTranslateLanguage
(
)
;
await
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
true
}
)
;
await
assertIsNeverTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
assertTranslationsButton
(
{
button
:
true
circleArrows
:
true
locale
:
false
icon
:
true
}
"
The
icon
presents
the
loading
indicator
.
"
)
;
await
resolveDownloads
(
1
)
;
await
assertPageIsTranslated
(
"
es
"
"
en
"
runInPage
)
;
info
(
"
Simulate
clicking
never
-
translate
-
language
in
the
settings
menu
"
+
"
adding
the
document
language
from
the
neverTranslateLanguages
pref
"
+
"
and
removing
it
from
the
alwaysTranslateLanguages
pref
"
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelRevisitView
}
)
;
await
openTranslationsSettingsMenu
(
)
;
await
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
true
}
)
;
await
assertIsNeverTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
clickNeverTranslateLanguage
(
)
;
await
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
assertIsNeverTranslateLanguage
(
"
es
"
{
checked
:
true
}
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
navigate
(
"
Reload
the
page
"
{
url
:
SPANISH_PAGE_URL
}
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
cleanup
(
)
;
}
)
;
