"
use
strict
"
;
add_task
(
async
function
test_select_translations_panel_telemetry_translation_failure_then_succeed
(
)
{
const
{
cleanup
runInPage
rejectDownloads
resolveDownloads
}
=
await
loadTestPage
(
{
page
:
SELECT_TEST_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
prefs
:
[
[
"
browser
.
translations
.
select
.
enable
"
true
]
]
}
)
;
await
SelectTranslationsTestUtils
.
openPanel
(
runInPage
{
selectFrenchSection
:
true
openAtFrenchSection
:
true
expectedFromLanguage
:
"
fr
"
expectedToLanguage
:
"
en
"
downloadHandler
:
rejectDownloads
onOpenPanel
:
SelectTranslationsTestUtils
.
assertPanelViewTranslationFailure
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
open
{
expectedEventCount
:
1
expectNewFlowId
:
true
assertForMostRecentEvent
:
{
document_language
:
"
es
"
from_language
:
"
fr
"
to_language
:
"
en
"
top_preferred_language
:
"
en
-
US
"
text_source
:
"
selection
"
}
}
)
;
await
TestTranslationsTelemetry
.
assertLabeledCounter
(
Glean
.
translations
.
requestCount
[
[
"
full_page
"
0
]
[
"
select
"
1
]
]
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translations
.
translationRequest
{
expectedEventCount
:
1
assertForMostRecentEvent
:
{
document_language
:
"
es
"
from_language
:
"
fr
"
to_language
:
"
en
"
top_preferred_language
:
"
en
-
US
"
request_target
:
"
select
"
auto_translate
:
false
source_text_code_units
:
AppConstants
.
platform
=
=
=
"
win
"
?
1616
:
1607
source_text_word_count
:
257
}
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
translationFailureMessage
{
expectedEventCount
:
1
assertForMostRecentEvent
:
{
from_language
:
"
fr
"
to_language
:
"
en
"
}
}
)
;
await
SelectTranslationsTestUtils
.
clickTryAgainButton
(
{
downloadHandler
:
resolveDownloads
viewAssertion
:
SelectTranslationsTestUtils
.
assertPanelViewTranslated
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
tryAgainButton
{
expectedEventCount
:
1
}
)
;
await
TestTranslationsTelemetry
.
assertLabeledCounter
(
Glean
.
translations
.
requestCount
[
[
"
full_page
"
0
]
[
"
select
"
2
]
]
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translations
.
translationRequest
{
expectedEventCount
:
2
assertForMostRecentEvent
:
{
document_language
:
"
es
"
from_language
:
"
fr
"
to_language
:
"
en
"
top_preferred_language
:
"
en
-
US
"
request_target
:
"
select
"
auto_translate
:
false
source_text_code_units
:
AppConstants
.
platform
=
=
=
"
win
"
?
1616
:
1607
source_text_word_count
:
257
}
}
)
;
await
SelectTranslationsTestUtils
.
clickDoneButton
(
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
doneButton
{
expectedEventCount
:
1
}
)
;
await
TestTranslationsTelemetry
.
assertEvent
(
Glean
.
translationsSelectTranslationsPanel
.
close
{
expectedEventCount
:
1
}
)
;
await
TestTranslationsTelemetry
.
assertTranslationsEnginePerformance
(
{
expectedEventCount
:
1
}
)
;
await
cleanup
(
)
;
}
)
;
