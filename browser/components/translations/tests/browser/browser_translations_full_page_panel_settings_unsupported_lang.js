"
use
strict
"
;
add_task
(
async
function
test_unsupported_language_settings_menu_checkboxes
(
)
{
const
{
cleanup
resolveDownloads
runInPage
}
=
await
loadTestPage
(
{
page
:
SPANISH_PAGE_URL
languagePairs
:
[
{
fromLang
:
"
en
"
toLang
:
"
es
"
}
{
fromLang
:
"
es
"
toLang
:
"
en
"
}
]
}
)
;
await
FullPageTranslationsTestUtils
.
assertTranslationsButton
(
{
button
:
true
circleArrows
:
false
locale
:
false
icon
:
true
}
"
The
translations
button
is
visible
.
"
)
;
await
FullPageTranslationsTestUtils
.
openPanel
(
{
expectedFromLanguage
:
"
es
"
expectedToLanguage
:
"
en
"
onOpenPanel
:
FullPageTranslationsTestUtils
.
assertPanelViewIntro
}
)
;
await
FullPageTranslationsTestUtils
.
openTranslationsSettingsMenu
(
)
;
await
FullPageTranslationsTestUtils
.
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
FullPageTranslationsTestUtils
.
clickAlwaysTranslateLanguage
(
{
downloadHandler
:
resolveDownloads
}
)
;
await
FullPageTranslationsTestUtils
.
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
true
}
)
;
await
FullPageTranslationsTestUtils
.
assertOnlyIntersectingNodesAreTranslated
(
{
fromLanguage
:
"
es
"
toLanguage
:
"
en
"
runInPage
}
)
;
await
navigate
(
"
Navigate
to
a
page
in
an
unsupported
language
.
"
{
url
:
FRENCH_PAGE_URL
}
)
;
await
FullPageTranslationsTestUtils
.
assertTranslationsButton
(
{
button
:
false
}
"
The
translations
button
should
be
unavailable
.
"
)
;
await
FullPageTranslationsTestUtils
.
openPanel
(
{
openFromAppMenu
:
true
onOpenPanel
:
FullPageTranslationsTestUtils
.
assertPanelViewUnsupportedLanguage
}
)
;
await
FullPageTranslationsTestUtils
.
assertIsAlwaysTranslateLanguage
(
"
fr
"
{
checked
:
false
disabled
:
true
}
)
;
await
FullPageTranslationsTestUtils
.
assertIsNeverTranslateLanguage
(
"
fr
"
{
checked
:
false
disabled
:
true
}
)
;
await
cleanup
(
)
;
}
)
;
