"
use
strict
"
;
add_task
(
async
function
test_activate_always_translate_language_after_manual_translation
(
)
{
const
{
cleanup
resolveDownloads
runInPage
}
=
await
loadTestPage
(
{
page
:
SPANISH_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
prefs
:
[
[
"
browser
.
translations
.
alwaysTranslateLanguages
"
"
pl
fr
"
]
]
}
)
;
await
assertTranslationsButton
(
{
button
:
true
circleArrows
:
false
locale
:
false
icon
:
true
}
"
The
button
is
available
.
"
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelDefaultView
}
)
;
await
clickTranslateButton
(
{
downloadHandler
:
resolveDownloads
}
)
;
await
assertPageIsTranslated
(
"
es
"
"
en
"
runInPage
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelRevisitView
}
)
;
await
openTranslationsSettingsMenu
(
)
;
await
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
clickAlwaysTranslateLanguage
(
)
;
await
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
true
}
)
;
await
assertPageIsTranslated
(
"
es
"
"
en
"
runInPage
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelRevisitView
}
)
;
await
openTranslationsSettingsMenu
(
)
;
await
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
true
}
)
;
await
clickAlwaysTranslateLanguage
(
)
;
await
assertIsAlwaysTranslateLanguage
(
"
es
"
{
checked
:
false
}
)
;
await
assertTranslationsButton
(
{
button
:
true
circleArrows
:
false
locale
:
false
icon
:
true
}
"
Only
the
button
appears
"
)
;
await
assertPageIsUntranslated
(
runInPage
)
;
await
cleanup
(
)
;
}
)
;
