"
use
strict
"
;
add_task
(
async
function
test_translations_panel_firstrun
(
)
{
const
{
cleanup
}
=
await
loadTestPage
(
{
page
:
SPANISH_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
prefs
:
[
[
"
browser
.
translations
.
panelShown
"
false
]
]
}
)
;
await
assertTranslationsButton
(
{
button
:
true
circleArrows
:
false
locale
:
false
icon
:
true
}
"
The
button
is
available
.
"
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelFirstShowView
}
)
;
ok
(
getByL10nId
(
"
translations
-
panel
-
intro
-
description
"
)
"
The
intro
text
is
available
.
"
)
;
await
clickCancelButton
(
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelFirstShowView
}
)
;
ok
(
getByL10nId
(
"
translations
-
panel
-
intro
-
description
"
)
"
The
intro
text
is
available
.
"
)
;
await
clickCancelButton
(
)
;
await
navigate
(
"
Navigate
to
a
different
website
"
{
url
:
SPANISH_PAGE_URL_DOT_ORG
}
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelDefaultView
}
)
;
info
(
"
Checking
for
the
intro
text
to
be
hidden
.
"
)
;
await
waitForCondition
(
(
)
=
>
!
maybeGetByL10nId
(
"
translations
-
panel
-
intro
-
description
"
)
"
The
intro
text
is
no
longer
shown
.
"
)
;
await
clickCancelButton
(
)
;
await
navigate
(
"
Navigate
back
to
the
first
website
"
{
url
:
SPANISH_PAGE_URL
}
)
;
await
openTranslationsPanel
(
{
onOpenPanel
:
assertPanelDefaultView
}
)
;
info
(
"
Checking
for
the
intro
text
to
be
hidden
.
"
)
;
await
waitForCondition
(
(
)
=
>
!
maybeGetByL10nId
(
"
translations
-
panel
-
intro
-
description
"
)
"
The
intro
text
is
no
longer
shown
.
"
)
;
await
clickCancelButton
(
)
;
await
cleanup
(
)
;
}
)
;
