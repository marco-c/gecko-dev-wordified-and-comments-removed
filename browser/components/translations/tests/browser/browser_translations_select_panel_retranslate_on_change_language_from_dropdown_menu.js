"
use
strict
"
;
add_task
(
async
function
test_select_translations_panel_retranslate_on_change_from_language_via_popup
(
)
{
const
{
cleanup
runInPage
resolveDownloads
}
=
await
loadTestPage
(
{
page
:
SELECT_TEST_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
prefs
:
[
[
"
browser
.
translations
.
select
.
enable
"
true
]
]
}
)
;
await
SelectTranslationsTestUtils
.
openPanel
(
runInPage
{
openAtSpanishHyperlink
:
true
expectedFromLanguage
:
"
es
"
expectedToLanguage
:
"
en
"
downloadHandler
:
resolveDownloads
onOpenPanel
:
SelectTranslationsTestUtils
.
assertPanelViewTranslated
}
)
;
await
SelectTranslationsTestUtils
.
changeSelectedFromLanguage
(
[
"
uk
"
]
{
openDropdownMenu
:
true
pivotTranslation
:
true
downloadHandler
:
resolveDownloads
onChangeLanguage
:
SelectTranslationsTestUtils
.
assertPanelViewTranslated
}
)
;
await
cleanup
(
)
;
}
)
;
add_task
(
async
function
test_select_translations_panel_retranslate_on_change_to_language_via_popup
(
)
{
const
{
cleanup
runInPage
resolveDownloads
}
=
await
loadTestPage
(
{
page
:
SELECT_TEST_PAGE_URL
languagePairs
:
LANGUAGE_PAIRS
prefs
:
[
[
"
browser
.
translations
.
select
.
enable
"
true
]
]
}
)
;
await
SelectTranslationsTestUtils
.
openPanel
(
runInPage
{
openAtSpanishHyperlink
:
true
expectedFromLanguage
:
"
es
"
expectedToLanguage
:
"
en
"
downloadHandler
:
resolveDownloads
onOpenPanel
:
SelectTranslationsTestUtils
.
assertPanelViewTranslated
}
)
;
await
SelectTranslationsTestUtils
.
changeSelectedToLanguage
(
[
"
uk
"
]
{
openDropdownMenu
:
true
pivotTranslation
:
true
downloadHandler
:
resolveDownloads
onChangeLanguage
:
SelectTranslationsTestUtils
.
assertPanelViewTranslated
}
)
;
await
cleanup
(
)
;
}
)
;
