"
use
strict
"
;
let
win
;
add_setup
(
async
(
)
=
>
{
win
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
)
;
registerCleanupFunction
(
(
)
=
>
BrowserTestUtils
.
closeWindow
(
win
)
)
;
}
)
;
add_task
(
async
function
macDockWindowOpenInheritsSidebar
(
)
{
const
bookmarksSidebar
=
"
viewBookmarksSidebar
"
;
const
{
SidebarController
}
=
win
;
await
SidebarController
.
show
(
bookmarksSidebar
)
;
Assert
.
equal
(
SidebarController
.
currentID
bookmarksSidebar
"
Bookmarks
sidebar
should
be
shown
in
original
window
.
"
)
;
Assert
.
ok
(
SidebarController
.
isOpen
"
Sidebar
should
be
open
in
original
window
.
"
)
;
let
{
hiddenDOMWindow
}
=
Services
.
appShell
;
let
nextWindowPromise
=
BrowserTestUtils
.
waitForNewWindow
(
)
;
let
menuItem
=
hiddenDOMWindow
.
document
.
getElementById
(
"
macDockMenuNewWindow
"
)
;
menuItem
.
doCommand
(
)
;
let
nextWindow
=
await
nextWindowPromise
;
Assert
.
equal
(
SidebarController
.
currentID
bookmarksSidebar
"
Bookmarks
sidebar
should
be
shown
in
new
window
.
"
)
;
Assert
.
ok
(
SidebarController
.
isOpen
"
Sidebar
should
be
open
in
new
window
.
"
)
;
await
BrowserTestUtils
.
closeWindow
(
nextWindow
)
;
}
)
;
