"
use
strict
"
;
add_task
(
async
function
test_remote_sidebar_browser
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
shopping
.
experience2023
.
integratedSidebar
"
true
]
[
"
sidebar
.
main
.
tools
"
"
reviewchecker
syncedtabs
history
"
]
]
}
)
;
const
sidebar
=
document
.
querySelector
(
"
sidebar
-
main
"
)
;
ok
(
sidebar
"
Sidebar
is
shown
.
"
)
;
await
SidebarController
.
show
(
"
viewHistorySidebar
"
)
;
ok
(
SidebarController
.
browser
"
Sidebar
browser
is
shown
.
"
)
;
ok
(
!
SidebarController
.
browser
.
hasAttribute
(
"
remote
"
)
"
Sidebar
browser
is
not
remote
.
"
)
;
await
SidebarController
.
show
(
"
viewReviewCheckerSidebar
"
)
;
ok
(
SidebarController
.
browser
"
Sidebar
browser
is
shown
.
"
)
;
Assert
.
equal
(
SidebarController
.
browser
.
getAttribute
(
"
remote
"
)
"
true
"
"
Sidebar
browser
is
remote
.
"
)
;
Assert
.
equal
(
SidebarController
.
browser
.
getAttribute
(
"
type
"
)
"
content
"
"
Sidebar
browser
is
remote
.
"
)
;
await
SidebarController
.
show
(
"
viewTabsSidebar
"
)
;
ok
(
SidebarController
.
browser
"
Sidebar
browser
is
shown
.
"
)
;
ok
(
!
SidebarController
.
browser
.
hasAttribute
(
"
remote
"
)
"
Sidebar
browser
is
not
remote
.
"
)
;
await
SpecialPowers
.
popPrefEnv
(
)
;
}
)
;
