"
use
strict
"
;
var
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
fxAccounts
"
"
resource
:
/
/
gre
/
modules
/
FxAccounts
.
jsm
"
)
;
var
gTestTab
;
var
gContentAPI
;
var
gContentWindow
;
function
test
(
)
{
UITourTest
(
)
;
}
registerCleanupFunction
(
function
*
(
)
{
yield
signOut
(
)
;
gSync
.
updateAllUI
(
UIState
.
get
(
)
)
;
}
)
;
var
tests
=
[
taskify
(
function
*
test_highlight_accountStatus_loggedOut
(
)
{
let
userData
=
yield
fxAccounts
.
getSignedInUser
(
)
;
is
(
userData
null
"
Not
logged
in
initially
"
)
;
yield
showMenuPromise
(
"
appMenu
"
)
;
yield
showHighlightPromise
(
"
accountStatus
"
)
;
let
highlight
=
document
.
getElementById
(
"
UITourHighlightContainer
"
)
;
is
(
highlight
.
getAttribute
(
"
targetName
"
)
"
accountStatus
"
"
Correct
highlight
target
"
)
;
}
)
taskify
(
function
*
test_highlight_accountStatus_loggedIn
(
)
{
yield
setSignedInUser
(
)
;
let
userData
=
yield
fxAccounts
.
getSignedInUser
(
)
;
isnot
(
userData
null
"
Logged
in
now
"
)
;
gSync
.
updateAllUI
(
UIState
.
get
(
)
)
;
yield
showMenuPromise
(
"
appMenu
"
)
;
yield
showHighlightPromise
(
"
accountStatus
"
)
;
let
highlight
=
document
.
getElementById
(
"
UITourHighlightContainer
"
)
;
is
(
highlight
.
popupBoxObject
.
anchorNode
.
id
"
PanelUI
-
fxa
-
avatar
"
"
Anchored
on
avatar
"
)
;
is
(
highlight
.
getAttribute
(
"
targetName
"
)
"
accountStatus
"
"
Correct
highlight
target
"
)
;
}
)
]
;
function
setSignedInUser
(
data
)
{
if
(
!
data
)
{
data
=
{
email
:
"
foo
example
.
com
"
uid
:
"
1234
lcip
.
org
"
assertion
:
"
foobar
"
sessionToken
:
"
dead
"
kA
:
"
beef
"
kB
:
"
cafe
"
verified
:
true
}
;
}
return
fxAccounts
.
setSignedInUser
(
data
)
;
}
function
signOut
(
)
{
return
fxAccounts
.
signOut
(
true
)
;
}
