"
use
strict
"
;
var
gTestTab
;
var
gContentAPI
;
var
gContentWindow
;
registerCleanupFunction
(
function
(
)
{
Services
.
prefs
.
clearUserPref
(
"
services
.
sync
.
username
"
)
;
}
)
;
add_task
(
setup_UITourTest
)
;
add_UITour_task
(
function
*
test_checkSyncSetup_disabled
(
)
{
let
result
=
yield
getConfigurationPromise
(
"
sync
"
)
;
is
(
result
.
setup
false
"
Sync
shouldn
'
t
be
setup
by
default
"
)
;
}
)
;
add_UITour_task
(
function
*
test_checkSyncSetup_enabled
(
)
{
Services
.
prefs
.
setCharPref
(
"
services
.
sync
.
username
"
"
uitour
tests
.
mozilla
.
org
"
)
;
let
result
=
yield
getConfigurationPromise
(
"
sync
"
)
;
is
(
result
.
setup
true
"
Sync
should
be
setup
"
)
;
}
)
;
add_UITour_task
(
function
*
test_firefoxAccountsNoParams
(
)
{
yield
gContentAPI
.
showFirefoxAccounts
(
)
;
yield
BrowserTestUtils
.
browserLoaded
(
gTestTab
.
linkedBrowser
false
"
about
:
accounts
?
action
=
signup
&
entrypoint
=
uitour
"
)
;
}
)
;
add_UITour_task
(
function
*
test_firefoxAccountsValidParams
(
)
{
yield
gContentAPI
.
showFirefoxAccounts
(
{
utm_foo
:
"
foo
"
utm_bar
:
"
bar
"
}
)
;
yield
BrowserTestUtils
.
browserLoaded
(
gTestTab
.
linkedBrowser
false
"
about
:
accounts
?
action
=
signup
&
entrypoint
=
uitour
&
utm_foo
=
foo
&
utm_bar
=
bar
"
)
;
}
)
;
add_UITour_task
(
function
*
test_firefoxAccountsNonAlphaValue
(
)
{
let
value
=
"
foo
&
/
=
?
:
\
\
\
xa9
"
;
let
expected
=
encodeURIComponent
(
value
)
.
replace
(
/
%
20
/
g
"
+
"
)
;
yield
gContentAPI
.
showFirefoxAccounts
(
{
utm_foo
:
value
}
)
;
yield
BrowserTestUtils
.
browserLoaded
(
gTestTab
.
linkedBrowser
false
"
about
:
accounts
?
action
=
signup
&
entrypoint
=
uitour
&
utm_foo
=
"
+
expected
)
;
}
)
;
function
*
checkAboutAccountsNotLoaded
(
)
{
try
{
yield
waitForConditionPromise
(
(
)
=
>
{
return
gBrowser
.
selectedBrowser
.
currentURI
.
spec
.
startsWith
(
"
about
:
accounts
"
)
;
}
"
Check
if
about
:
accounts
opened
"
)
;
ok
(
false
"
No
about
:
accounts
tab
should
have
opened
"
)
;
}
catch
(
ex
)
{
ok
(
true
"
No
about
:
accounts
tab
opened
"
)
;
}
}
add_UITour_task
(
function
*
test_firefoxAccountsNonObject
(
)
{
yield
gContentAPI
.
showFirefoxAccounts
(
99
)
;
yield
checkAboutAccountsNotLoaded
(
)
;
}
)
;
add_UITour_task
(
function
*
test_firefoxAccountsNonUtmPrefix
(
)
{
yield
gContentAPI
.
showFirefoxAccounts
(
{
utm_foo
:
"
foo
"
bar
:
"
bar
"
}
)
;
yield
checkAboutAccountsNotLoaded
(
)
;
}
)
;
add_UITour_task
(
function
*
test_firefoxAccountsNonAlphaName
(
)
{
yield
gContentAPI
.
showFirefoxAccounts
(
{
utm_foo
:
"
foo
"
"
utm_bar
=
"
:
"
bar
"
}
)
;
yield
checkAboutAccountsNotLoaded
(
)
;
}
)
;
