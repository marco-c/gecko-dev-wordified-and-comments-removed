"
use
strict
"
;
var
gTestTab
;
var
gContentAPI
;
var
gContentWindow
;
var
handleDialog
;
var
didDialog
;
var
timer
;
function
startCallbackTimer
(
)
{
didDialog
=
false
;
const
dialogDelay
=
10
;
timer
=
Cc
[
"
mozilla
.
org
/
timer
;
1
"
]
.
createInstance
(
Ci
.
nsITimer
)
;
timer
.
init
(
observer
dialogDelay
Ci
.
nsITimer
.
TYPE_ONE_SHOT
)
;
}
var
observer
=
SpecialPowers
.
wrapCallbackObject
(
{
QueryInterface
(
iid
)
{
const
interfaces
=
[
Ci
.
nsIObserver
Ci
.
nsISupports
Ci
.
nsISupportsWeakReference
]
;
if
(
!
interfaces
.
some
(
function
(
v
)
{
return
iid
.
equals
(
v
)
;
}
)
)
throw
SpecialPowers
.
Components
.
results
.
NS_ERROR_NO_INTERFACE
;
return
this
;
}
observe
(
subject
topic
data
)
{
var
doc
=
getDialogDoc
(
)
;
if
(
doc
)
handleDialog
(
doc
)
;
else
startCallbackTimer
(
)
;
}
}
)
;
function
getDialogDoc
(
)
{
for
(
let
{
docShell
}
of
Services
.
wm
.
getEnumerator
(
null
)
)
{
var
containedDocShells
=
docShell
.
getDocShellEnumerator
(
docShell
.
typeChrome
docShell
.
ENUMERATE_FORWARDS
)
;
for
(
let
childDocShell
of
containedDocShells
)
{
if
(
childDocShell
.
busyFlags
!
=
Ci
.
nsIDocShell
.
BUSY_FLAGS_NONE
)
continue
;
var
childDoc
=
childDocShell
.
contentViewer
.
DOMDocument
;
if
(
childDoc
.
location
.
href
=
=
"
chrome
:
/
/
global
/
content
/
commonDialog
.
xul
"
)
return
childDoc
;
}
}
return
null
;
}
function
test
(
)
{
UITourTest
(
)
;
}
var
tests
=
[
taskify
(
async
function
test_modal_dialog_while_opening_tooltip
(
)
{
let
panelShown
;
let
popup
;
handleDialog
=
(
doc
)
=
>
{
popup
=
document
.
getElementById
(
"
UITourTooltip
"
)
;
gContentAPI
.
showInfo
(
"
appMenu
"
"
test
title
"
"
test
text
"
)
;
doc
.
defaultView
.
setTimeout
(
function
(
)
{
is
(
popup
.
state
"
closed
"
"
Popup
shouldn
'
t
be
shown
while
dialog
is
up
"
)
;
panelShown
=
promisePanelElementShown
(
window
popup
)
;
let
dialog
=
doc
.
getElementById
(
"
commonDialog
"
)
;
dialog
.
acceptDialog
(
)
;
}
1000
)
;
}
;
startCallbackTimer
(
)
;
executeSoon
(
(
)
=
>
alert
(
"
test
"
)
)
;
await
waitForConditionPromise
(
(
)
=
>
panelShown
"
Timed
out
waiting
for
panel
promise
to
be
assigned
"
100
)
;
await
panelShown
;
await
hideInfoPromise
(
)
;
}
)
]
;
