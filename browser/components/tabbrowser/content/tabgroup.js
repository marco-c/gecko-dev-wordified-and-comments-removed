"
use
strict
"
;
{
class
MozTabbrowserTabGroup
extends
MozXULElement
{
static
markup
=
<
label
class
=
"
tab
-
group
-
label
"
crop
=
"
end
"
/
>
<
html
:
slot
/
>
;
constructor
(
)
{
super
(
)
;
}
static
get
inheritedAttributes
(
)
{
return
{
"
.
tab
-
group
-
label
"
:
"
value
=
label
tooltiptext
=
label
"
}
;
}
connectedCallback
(
)
{
if
(
this
.
_initialized
)
{
return
;
}
this
.
textContent
=
"
"
;
this
.
appendChild
(
this
.
constructor
.
fragment
)
;
this
.
initializeAttributeInheritance
(
)
;
this
.
_initialized
=
true
;
}
get
color
(
)
{
return
this
.
style
.
getProperty
(
"
-
-
tab
-
group
-
color
"
)
;
}
set
color
(
val
)
{
this
.
style
.
setProperty
(
"
-
-
tab
-
group
-
color
"
val
)
;
}
get
id
(
)
{
return
this
.
getAttribute
(
"
id
"
)
;
}
set
id
(
val
)
{
this
.
setAttribute
(
"
id
"
val
)
;
}
get
label
(
)
{
return
this
.
getAttribute
(
"
label
"
)
;
}
set
label
(
val
)
{
this
.
setAttribute
(
"
label
"
val
)
;
}
get
tabs
(
)
{
return
Array
.
from
(
this
.
children
)
.
filter
(
node
=
>
node
.
matches
(
"
tab
"
)
)
;
}
addTabs
(
tabs
)
{
for
(
let
tab
of
tabs
)
{
gBrowser
.
moveTabToGroup
(
tab
this
)
;
}
}
}
customElements
.
define
(
"
tab
-
group
"
MozTabbrowserTabGroup
)
;
}
