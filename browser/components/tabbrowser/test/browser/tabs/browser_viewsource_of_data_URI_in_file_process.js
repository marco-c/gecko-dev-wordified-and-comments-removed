const
DUMMY_FILE
=
"
dummy_page
.
html
"
;
const
DATA_URI
=
"
data
:
text
/
html
Hi
"
;
const
DATA_URI_SOURCE
=
"
view
-
source
:
"
+
DATA_URI
;
add_task
(
async
function
(
)
{
let
dir
=
getChromeDir
(
getResolvedURI
(
gTestPath
)
)
;
dir
.
append
(
DUMMY_FILE
)
;
const
uriString
=
Services
.
io
.
newFileURI
(
dir
)
.
spec
;
await
BrowserTestUtils
.
withNewTab
(
uriString
async
function
(
fileBrowser
)
{
let
filePid
=
await
SpecialPowers
.
spawn
(
fileBrowser
[
]
(
)
=
>
{
return
Services
.
appinfo
.
processID
;
}
)
;
let
promiseLoad
=
BrowserTestUtils
.
browserLoaded
(
fileBrowser
false
DATA_URI
)
;
BrowserTestUtils
.
startLoadingURIString
(
fileBrowser
DATA_URI
)
;
let
href
=
await
promiseLoad
;
is
(
href
DATA_URI
"
Check
data
URI
loaded
.
"
)
;
let
dataPid
=
await
SpecialPowers
.
spawn
(
fileBrowser
[
]
(
)
=
>
{
return
Services
.
appinfo
.
processID
;
}
)
;
is
(
dataPid
filePid
"
Check
that
data
URI
loaded
in
file
content
process
.
"
)
;
let
promiseTab
=
BrowserTestUtils
.
waitForNewTab
(
gBrowser
DATA_URI_SOURCE
)
;
BrowserCommands
.
viewSource
(
fileBrowser
)
;
let
viewSourceTab
=
await
promiseTab
;
registerCleanupFunction
(
async
function
(
)
{
BrowserTestUtils
.
removeTab
(
viewSourceTab
)
;
}
)
;
await
SpecialPowers
.
spawn
(
viewSourceTab
.
linkedBrowser
[
DATA_URI_SOURCE
]
uri
=
>
{
is
(
content
.
document
.
documentURI
uri
"
Check
that
a
view
-
source
page
was
loaded
.
"
)
;
}
)
;
}
)
;
}
)
;
