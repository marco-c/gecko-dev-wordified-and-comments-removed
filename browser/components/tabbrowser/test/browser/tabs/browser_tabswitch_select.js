"
use
strict
"
;
add_task
(
async
function
(
)
{
let
tab1
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
about
:
support
"
)
;
let
tab2
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
"
data
:
text
/
html
Goodbye
"
)
;
gURLBar
.
select
(
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab1
)
;
let
focusPromise
=
BrowserTestUtils
.
waitForEvent
(
gURLBar
.
inputField
"
select
"
true
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab2
)
;
await
focusPromise
;
is
(
gURLBar
.
selectionStart
0
"
url
is
selected
"
)
;
is
(
gURLBar
.
selectionEnd
22
"
url
is
selected
"
)
;
let
fullScreenEntered
=
TestUtils
.
waitForCondition
(
(
)
=
>
document
.
documentElement
.
getAttribute
(
"
sizemode
"
)
=
=
"
fullscreen
"
)
;
BrowserCommands
.
fullScreen
(
)
;
await
fullScreenEntered
;
tab2
.
linkedBrowser
.
focus
(
)
;
focusPromise
=
BrowserTestUtils
.
waitForEvent
(
gURLBar
.
inputField
"
focus
"
true
)
;
EventUtils
.
synthesizeKey
(
"
T
"
{
accelKey
:
true
}
)
;
await
focusPromise
;
is
(
document
.
activeElement
gURLBar
.
inputField
"
urlbar
is
focused
"
)
;
let
fullScreenExited
=
TestUtils
.
waitForCondition
(
(
)
=
>
document
.
documentElement
.
getAttribute
(
"
sizemode
"
)
!
=
"
fullscreen
"
)
;
BrowserCommands
.
fullScreen
(
)
;
await
fullScreenExited
;
BrowserTestUtils
.
removeTab
(
gBrowser
.
selectedTab
)
;
BrowserTestUtils
.
removeTab
(
tab1
)
;
BrowserTestUtils
.
removeTab
(
tab2
)
;
}
)
;
