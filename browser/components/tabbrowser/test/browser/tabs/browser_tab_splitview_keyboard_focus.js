"
use
strict
"
;
add_setup
(
(
)
=
>
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
test
.
wait300msAfterTabSwitch
"
true
]
]
}
)
)
;
function
synthesizeKeyToChangeKeyboardFocus
(
element
keyName
)
{
let
focused
=
TestUtils
.
waitForCondition
(
(
)
=
>
{
return
element
.
classList
.
contains
(
"
tablist
-
keyboard
-
focus
"
)
;
}
"
Waiting
for
element
to
get
keyboard
focus
"
)
;
EventUtils
.
synthesizeKey
(
keyName
{
accelKey
:
true
}
)
;
return
focused
;
}
function
synthesizeKeyForKeyboardMovement
(
element
keyName
)
{
let
focused
=
TestUtils
.
waitForCondition
(
(
)
=
>
{
return
(
element
.
classList
.
contains
(
"
tablist
-
keyboard
-
focus
"
)
|
|
document
.
activeElement
=
=
element
)
;
}
"
Waiting
for
element
to
become
active
tab
and
/
or
get
keyboard
focus
"
)
;
EventUtils
.
synthesizeKey
(
keyName
)
;
return
focused
;
}
add_task
(
async
function
test_SplitViewKeyboardFocus
(
)
{
const
tab1
=
BrowserTestUtils
.
addTab
(
gBrowser
"
about
:
blank
"
)
;
const
tab2
=
BrowserTestUtils
.
addTab
(
gBrowser
"
about
:
blank
"
)
;
const
tab3
=
BrowserTestUtils
.
addTab
(
gBrowser
"
about
:
blank
"
)
;
const
tab4
=
BrowserTestUtils
.
addTab
(
gBrowser
"
about
:
blank
"
)
;
const
splitView
=
gBrowser
.
addTabSplitView
(
[
tab2
tab3
]
{
insertBefore
:
tab2
}
)
;
await
BrowserTestUtils
.
switchTab
(
gBrowser
tab2
)
;
info
(
"
Move
focus
to
the
active
tab
"
)
;
Services
.
focus
.
setFocus
(
tab2
Services
.
focus
.
FLAG_BYKEY
)
;
is
(
document
.
activeElement
tab2
"
Tab2
should
be
focused
"
)
;
is
(
gBrowser
.
tabContainer
.
ariaFocusedItem
tab2
"
Tab2
should
be
keyboard
-
focused
as
well
"
)
;
await
synthesizeKeyToChangeKeyboardFocus
(
tab1
"
KEY_ArrowLeft
"
)
;
is
(
gBrowser
.
tabContainer
.
ariaFocusedItem
tab1
"
Tab1
should
be
keyboard
-
focused
"
)
;
await
synthesizeKeyToChangeKeyboardFocus
(
tab2
"
KEY_ArrowRight
"
)
;
is
(
gBrowser
.
tabContainer
.
ariaFocusedItem
tab2
"
keyboard
focus
should
move
right
from
tab1
to
tab2
"
)
;
await
synthesizeKeyToChangeKeyboardFocus
(
tab1
"
KEY_ArrowUp
"
)
;
is
(
gBrowser
.
tabContainer
.
ariaFocusedItem
tab1
"
keyboard
focus
'
up
'
should
move
left
from
tab2
to
tab1
with
LTR
GUI
"
)
;
await
synthesizeKeyToChangeKeyboardFocus
(
tab2
"
KEY_ArrowDown
"
)
;
is
(
gBrowser
.
tabContainer
.
ariaFocusedItem
tab2
"
keyboard
focus
'
down
'
should
move
down
from
tab1
to
tab2
with
LTR
GUI
"
)
;
splitView
.
close
(
)
;
BrowserTestUtils
.
removeTab
(
tab1
)
;
BrowserTestUtils
.
removeTab
(
tab4
)
;
}
)
;
