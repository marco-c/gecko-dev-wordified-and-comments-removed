async
function
testWindowOpenLoad
(
target
checker
)
{
let
ssb
=
await
openSSB
(
gHttpsTestRoot
+
"
test_page
.
html
#
"
+
target
)
;
let
promise
=
checker
(
ssb
)
;
await
BrowserTestUtils
.
synthesizeMouseAtCenter
(
"
#
window
-
open
"
{
}
getBrowser
(
ssb
)
)
;
await
promise
;
await
BrowserTestUtils
.
closeWindow
(
ssb
)
;
}
add_task
(
async
function
local
(
)
{
await
testWindowOpenLoad
(
gHttpsTestRoot
+
"
empty_page
.
html
"
async
ssb
=
>
{
try
{
await
expectSSBLoad
(
ssb
)
;
Assert
.
equal
(
getBrowser
(
ssb
)
.
currentURI
.
spec
gHttpsTestRoot
+
"
empty_page
.
html
"
"
Should
have
loaded
the
right
uri
.
"
)
;
}
catch
(
e
)
{
}
}
)
;
}
)
;
add_task
(
async
function
insecure
(
)
{
await
testWindowOpenLoad
(
gHttpTestRoot
+
"
empty_page
.
html
"
async
ssb
=
>
{
try
{
let
tab
=
await
expectTabLoad
(
ssb
)
;
Assert
.
equal
(
tab
.
linkedBrowser
.
currentURI
.
spec
gHttpTestRoot
+
"
empty_page
.
html
"
"
Should
have
loaded
the
right
uri
.
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
catch
(
e
)
{
}
}
)
;
}
)
;
add_task
(
async
function
external
(
)
{
await
testWindowOpenLoad
(
gHttpsOtherRoot
+
"
empty_page
.
html
"
async
ssb
=
>
{
try
{
let
tab
=
await
expectTabLoad
(
ssb
)
;
Assert
.
equal
(
tab
.
linkedBrowser
.
currentURI
.
spec
gHttpsOtherRoot
+
"
empty_page
.
html
"
"
Should
have
loaded
the
right
uri
.
"
)
;
BrowserTestUtils
.
removeTab
(
tab
)
;
}
catch
(
e
)
{
}
}
)
;
}
)
;
