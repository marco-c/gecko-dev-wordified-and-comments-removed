LOCAL_INCLUDES
+
=
[
'
/
xpcom
/
build
'
]
BROWSER_CHROME_MANIFESTS
+
=
[
'
test
/
browser
.
ini
'
]
MOCHITEST_CHROME_MANIFESTS
+
=
[
'
test
/
chrome
.
ini
'
]
XPCSHELL_TESTS_MANIFESTS
+
=
[
'
test
/
unit
/
xpcshell
.
ini
'
]
JAR_MANIFESTS
+
=
[
'
jar
.
mn
'
]
XPIDL_SOURCES
+
=
[
'
nsIShellService
.
idl
'
]
if
CONFIG
[
'
MOZ_WIDGET_TOOLKIT
'
]
=
=
'
cocoa
'
:
XPIDL_SOURCES
+
=
[
'
nsIMacShellService
.
idl
'
]
SOURCES
+
=
[
'
nsMacShellService
.
cpp
'
]
LOCAL_INCLUDES
+
=
[
'
/
xpcom
/
io
'
]
elif
CONFIG
[
'
MOZ_WIDGET_TOOLKIT
'
]
=
=
'
gtk
'
:
XPIDL_SOURCES
+
=
[
'
nsIGNOMEShellService
.
idl
'
]
SOURCES
+
=
[
'
nsGNOMEShellService
.
cpp
'
]
if
CONFIG
[
'
MOZ_ENABLE_DBUS
'
]
:
SOURCES
+
=
[
'
nsGNOMEShellDBusHelper
.
cpp
'
'
nsGNOMEShellSearchProvider
.
cpp
'
]
include
(
'
/
ipc
/
chromium
/
chromium
-
config
.
mozbuild
'
)
elif
CONFIG
[
'
OS_ARCH
'
]
=
=
'
WINNT
'
:
XPIDL_SOURCES
+
=
[
'
nsIWindowsShellService
.
idl
'
]
SOURCES
+
=
[
'
nsWindowsShellService
.
cpp
'
]
LOCAL_INCLUDES
+
=
[
'
.
.
/
.
.
/
.
.
/
other
-
licenses
/
nsis
/
Contrib
/
CityHash
/
cityhash
'
]
XPIDL_MODULE
=
'
shellservice
'
if
SOURCES
:
FINAL_LIBRARY
=
'
browsercomps
'
EXTRA_JS_MODULES
+
=
[
'
HeadlessShell
.
jsm
'
'
ScreenshotChild
.
jsm
'
'
ShellService
.
jsm
'
]
for
var
in
(
'
MOZ_APP_NAME
'
'
MOZ_APP_VERSION
'
)
:
DEFINES
[
var
]
=
'
"
%
s
"
'
%
CONFIG
[
var
]
CXXFLAGS
+
=
CONFIG
[
'
TK_CFLAGS
'
]
if
CONFIG
[
'
MOZ_ENABLE_DBUS
'
]
:
CXXFLAGS
+
=
CONFIG
[
'
MOZ_DBUS_GLIB_CFLAGS
'
]
with
Files
(
'
*
*
'
)
:
BUG_COMPONENT
=
(
'
Firefox
'
'
Shell
Integration
'
)
