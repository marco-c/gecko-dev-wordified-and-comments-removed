#
include
"
gtest
/
gtest
.
h
"
#
include
"
nsDirectoryServiceDefs
.
h
"
#
include
"
nsDirectoryServiceUtils
.
h
"
#
include
"
nsWindowsShellServiceInternal
.
h
"
#
include
"
nsXULAppAPI
.
h
"
TEST
(
ShellLink
NarrowCharacterArguments
)
{
nsCOMPtr
<
nsIFile
>
exe
;
nsresult
rv
=
NS_GetSpecialDirectory
(
NS_OS_TEMP_DIR
getter_AddRefs
(
exe
)
)
;
ASSERT_TRUE
(
NS_SUCCEEDED
(
rv
)
)
;
RefPtr
<
IShellLinkW
>
link
;
rv
=
CreateShellLinkObject
(
exe
{
u
"
test
"
_ns
}
u
"
test
"
_ns
exe
0
u
"
aumid
"
_ns
getter_AddRefs
(
link
)
)
;
ASSERT_TRUE
(
NS_SUCCEEDED
(
rv
)
)
;
ASSERT_TRUE
(
link
!
=
nullptr
)
;
std
:
:
wstring
testArgs
=
L
"
\
"
test
\
"
"
;
wchar_t
resultArgs
[
sizeof
(
testArgs
)
]
;
HRESULT
hr
=
link
-
>
GetArguments
(
resultArgs
sizeof
(
resultArgs
)
)
;
ASSERT_TRUE
(
SUCCEEDED
(
hr
)
)
;
ASSERT_TRUE
(
testArgs
=
=
resultArgs
)
;
}
TEST
(
ShellLink
WideCharacterArguments
)
{
nsCOMPtr
<
nsIFile
>
exe
;
nsresult
rv
=
NS_GetSpecialDirectory
(
NS_OS_TEMP_DIR
getter_AddRefs
(
exe
)
)
;
ASSERT_TRUE
(
NS_SUCCEEDED
(
rv
)
)
;
RefPtr
<
IShellLinkW
>
link
;
rv
=
CreateShellLinkObject
(
exe
{
u
"
Test
\
\
\
\
Test
"
_ns
}
u
"
test
"
_ns
exe
0
u
"
aumid
"
_ns
getter_AddRefs
(
link
)
)
;
ASSERT_TRUE
(
NS_SUCCEEDED
(
rv
)
)
;
ASSERT_TRUE
(
link
!
=
nullptr
)
;
std
:
:
wstring
testArgs
=
L
"
\
"
Test
\
\
\
\
Test
\
"
"
;
wchar_t
resultArgs
[
sizeof
(
testArgs
)
]
;
HRESULT
hr
=
link
-
>
GetArguments
(
resultArgs
sizeof
(
resultArgs
)
)
;
ASSERT_TRUE
(
SUCCEEDED
(
hr
)
)
;
ASSERT_TRUE
(
testArgs
=
=
resultArgs
)
;
}
