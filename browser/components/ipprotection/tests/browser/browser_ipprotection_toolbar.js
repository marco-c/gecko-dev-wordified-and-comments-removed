"
use
strict
"
;
const
lazy
=
{
}
;
ChromeUtils
.
defineESModuleGetters
(
lazy
{
IPProtectionWidget
:
"
resource
:
/
/
/
modules
/
ipprotection
/
IPProtection
.
sys
.
mjs
"
}
)
;
add_task
(
async
function
toolbar_added_and_removed
(
)
{
let
widget
=
document
.
getElementById
(
lazy
.
IPProtectionWidget
.
WIDGET_ID
)
;
ok
(
BrowserTestUtils
.
isVisible
(
widget
)
"
IP
Protection
widget
should
be
added
to
the
navbar
"
)
;
let
position
=
CustomizableUI
.
getPlacementOfWidget
(
lazy
.
IPProtectionWidget
.
WIDGET_ID
)
.
position
;
is
(
position
7
"
IP
Protection
widget
added
in
the
correct
position
"
)
;
Services
.
prefs
.
clearUserPref
(
"
browser
.
ipProtection
.
enabled
"
)
;
widget
=
document
.
getElementById
(
lazy
.
IPProtectionWidget
.
WIDGET_ID
)
;
is
(
widget
null
"
IP
Protection
widget
is
removed
"
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
ipProtection
.
enabled
"
true
)
;
widget
=
document
.
getElementById
(
lazy
.
IPProtectionWidget
.
WIDGET_ID
)
;
ok
(
BrowserTestUtils
.
isVisible
(
widget
)
"
IP
Protection
widget
should
be
added
back
to
the
navbar
"
)
;
}
)
;
