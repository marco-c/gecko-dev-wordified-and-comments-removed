add_task
(
async
function
setup
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
dom
.
ipc
.
processCount
"
1
]
]
}
)
;
}
)
;
add_task
(
async
function
test
(
)
{
let
prefix
=
"
http
:
/
/
mochi
.
test
:
8888
/
browser
/
browser
/
components
/
privatebrowsing
/
test
/
browser
/
browser_privatebrowsing_concurrent_page
.
html
"
;
function
getElts
(
browser
)
{
return
browser
.
contentTitle
.
split
(
"
|
"
)
;
}
let
non_private_browser
=
gBrowser
.
selectedBrowser
;
let
url
=
prefix
+
"
?
action
=
set
&
name
=
test
&
value
=
value
&
initial
=
true
"
;
non_private_browser
.
loadURI
(
url
)
;
await
BrowserTestUtils
.
browserLoaded
(
non_private_browser
false
url
)
;
let
private_window
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
{
private
:
true
}
)
;
let
private_browser
=
private_window
.
getBrowser
(
)
.
selectedBrowser
;
url
=
prefix
+
"
?
action
=
set
&
name
=
test2
&
value
=
value2
"
;
private_browser
.
loadURI
(
url
)
;
await
BrowserTestUtils
.
browserLoaded
(
private_browser
false
url
)
;
url
=
prefix
+
"
?
action
=
get
&
name
=
test2
"
;
non_private_browser
.
loadURI
(
url
)
;
await
BrowserTestUtils
.
browserLoaded
(
non_private_browser
false
url
)
;
let
elts
=
await
getElts
(
non_private_browser
)
;
isnot
(
elts
[
0
]
"
value2
"
"
public
window
shouldn
'
t
see
private
storage
"
)
;
is
(
elts
[
1
]
"
1
"
"
public
window
should
only
see
public
items
"
)
;
url
=
prefix
+
"
?
action
=
get
&
name
=
test
"
;
private_browser
.
loadURI
(
url
)
;
await
BrowserTestUtils
.
browserLoaded
(
private_browser
false
url
)
;
elts
=
await
getElts
(
private_browser
)
;
isnot
(
elts
[
0
]
"
value
"
"
private
window
shouldn
'
t
see
public
storage
"
)
;
is
(
elts
[
1
]
"
1
"
"
private
window
should
only
see
private
items
"
)
;
private_window
.
close
(
)
;
private_window
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
{
private
:
false
}
)
;
private_browser
=
null
;
await
new
Promise
(
resolve
=
>
Cu
.
schedulePreciseGC
(
resolve
)
)
;
private_browser
=
private_window
.
getBrowser
(
)
.
selectedBrowser
;
url
=
prefix
+
"
?
action
=
get
&
name
=
test2
"
;
private_browser
.
loadURI
(
url
)
;
await
BrowserTestUtils
.
browserLoaded
(
private_browser
false
url
)
;
elts
=
await
getElts
(
private_browser
)
;
isnot
(
elts
[
0
]
"
value2
"
"
public
window
shouldn
'
t
see
cleared
private
storage
"
)
;
is
(
elts
[
1
]
"
1
"
"
public
window
should
only
see
public
items
"
)
;
private_window
.
close
(
)
;
private_window
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
{
private
:
true
}
)
;
private_browser
=
null
;
await
new
Promise
(
resolve
=
>
Cu
.
schedulePreciseGC
(
resolve
)
)
;
private_browser
=
private_window
.
getBrowser
(
)
.
selectedBrowser
;
url
=
prefix
+
"
?
action
=
set
&
name
=
test3
&
value
=
value3
"
;
private_browser
.
loadURI
(
url
)
;
await
BrowserTestUtils
.
browserLoaded
(
private_browser
false
url
)
;
elts
=
await
getElts
(
private_browser
)
;
is
(
elts
[
1
]
"
1
"
"
private
window
should
only
see
new
private
items
"
)
;
url
=
prefix
+
"
?
final
=
true
"
;
non_private_browser
.
loadURI
(
url
)
;
await
BrowserTestUtils
.
browserLoaded
(
non_private_browser
false
url
)
;
private_window
.
close
(
)
;
}
)
;
