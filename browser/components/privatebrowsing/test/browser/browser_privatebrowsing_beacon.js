const
TEST_DOMAIN
=
"
example
.
com
"
;
const
TEST_TOP
=
https
:
/
/
{
TEST_DOMAIN
}
;
const
TEST_URL
=
{
TEST_TOP
}
/
browser
/
browser
/
components
/
privatebrowsing
/
test
/
browser
/
title
.
sjs
;
add_task
(
async
function
(
)
{
let
privateWin
=
await
BrowserTestUtils
.
openNewBrowserWindow
(
{
private
:
true
}
)
;
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
privateWin
.
gBrowser
TEST_TOP
)
;
let
promise
=
BrowserUtils
.
promiseObserved
(
"
http
-
on
-
examine
-
response
"
subject
=
>
{
let
channel
=
subject
.
QueryInterface
(
Ci
.
nsIHttpChannel
)
;
let
url
=
channel
.
URI
.
spec
;
return
url
=
=
TEST_URL
;
}
)
;
await
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
TEST_URL
]
async
url
=
>
{
content
.
navigator
.
sendBeacon
(
url
)
;
}
)
;
await
BrowserTestUtils
.
closeWindow
(
privateWin
)
;
await
promise
;
const
cookies
=
Services
.
cookies
.
getCookiesFromHost
(
TEST_DOMAIN
{
privateBrowsingId
:
1
}
)
;
is
(
cookies
.
length
0
"
No
cookies
after
close
the
private
window
.
"
)
;
}
)
;
