"
use
strict
"
;
add_setup
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
test
.
wait300msAfterTabSwitch
"
true
]
]
}
)
;
}
)
;
add_task
(
async
function
test_events_prevented
(
)
{
await
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
SHORT_TEST_PAGE
}
async
browser
=
>
{
let
helper
=
new
ScreenshotsHelper
(
browser
)
;
await
ContentTask
.
spawn
(
browser
null
async
(
)
=
>
{
let
{
ScreenshotsComponentChild
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
/
actors
/
ScreenshotsComponentChild
.
sys
.
mjs
"
)
;
let
allOverlayEvents
=
ScreenshotsComponentChild
.
OVERLAY_EVENTS
.
concat
(
ScreenshotsComponentChild
.
PREVENTABLE_EVENTS
)
;
content
.
eventsReceived
=
[
]
;
function
eventListener
(
event
)
{
content
.
window
.
eventsReceived
.
push
(
event
.
type
)
;
}
for
(
let
eventName
of
[
.
.
.
allOverlayEvents
"
wheel
"
]
)
{
content
.
addEventListener
(
eventName
eventListener
true
)
;
}
}
)
;
helper
.
triggerUIFromToolbar
(
)
;
await
helper
.
waitForOverlay
(
)
;
await
key
.
down
(
"
s
"
)
;
await
key
.
up
(
"
s
"
)
;
await
key
.
press
(
"
s
"
)
;
await
touch
.
start
(
10
10
)
;
await
touch
.
move
(
20
20
)
;
await
touch
.
end
(
20
20
)
;
await
helper
.
clickTestPageElement
(
)
;
await
mouse
.
over
(
100
100
)
;
await
mouse
.
out
(
100
100
)
;
await
mouse
.
dblclick
(
100
100
)
;
await
mouse
.
auxclick
(
100
100
{
button
:
1
}
)
;
await
mouse
.
click
(
100
100
)
;
await
mouse
.
contextmenu
(
100
100
)
;
let
wheelEventPromise
=
helper
.
waitForContentEventOnce
(
"
wheel
"
)
;
await
ContentTask
.
spawn
(
browser
null
(
)
=
>
{
content
.
dispatchEvent
(
new
content
.
WheelEvent
(
"
wheel
"
)
)
;
}
)
;
await
wheelEventPromise
;
let
contentEventsReceived
=
await
ContentTask
.
spawn
(
browser
null
async
(
)
=
>
{
return
content
.
eventsReceived
;
}
)
;
is
(
contentEventsReceived
.
length
1
"
Only
1
wheel
event
should
reach
the
content
document
because
everything
else
was
prevent
and
stopped
propagation
"
)
;
is
(
contentEventsReceived
[
0
]
"
wheel
"
"
Only
1
wheel
event
should
reach
the
content
document
because
everything
else
was
prevent
and
stopped
propagation
"
)
;
}
)
;
}
)
;
