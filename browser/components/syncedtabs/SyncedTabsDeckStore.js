"
use
strict
"
;
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
let
{
EventEmitter
}
=
Cu
.
import
(
"
resource
:
/
/
/
modules
/
syncedtabs
/
EventEmitter
.
jsm
"
{
}
)
;
this
.
EXPORTED_SYMBOLS
=
[
"
SyncedTabsDeckStore
"
]
;
function
SyncedTabsDeckStore
(
)
{
EventEmitter
.
call
(
this
)
;
this
.
_panels
=
[
]
;
}
Object
.
assign
(
SyncedTabsDeckStore
.
prototype
EventEmitter
.
prototype
{
_change
(
isUpdatable
=
false
)
{
let
panels
=
this
.
_panels
.
map
(
panel
=
>
{
return
{
id
:
panel
selected
:
panel
=
=
=
this
.
_selectedPanel
}
;
}
)
;
this
.
emit
(
"
change
"
{
panels
isUpdatable
:
isUpdatable
}
)
;
}
selectPanel
(
panelId
)
{
if
(
this
.
_panels
.
indexOf
(
panelId
)
=
=
=
-
1
|
|
this
.
_selectedPanel
=
=
=
panelId
)
{
return
;
}
this
.
_selectedPanel
=
panelId
;
this
.
_change
(
true
)
;
}
setPanels
(
panels
)
{
if
(
panels
=
=
=
this
.
_panels
)
{
return
;
}
this
.
_panels
=
panels
|
|
[
]
;
this
.
_change
(
)
;
}
}
)
;
