"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
EventEmitter
"
]
;
function
EventEmitter
(
)
{
this
.
_events
=
new
Map
(
)
;
}
EventEmitter
.
prototype
=
{
on
(
event
listener
)
{
if
(
this
.
_events
.
has
(
event
)
)
{
this
.
_events
.
get
(
event
)
.
add
(
listener
)
;
}
else
{
this
.
_events
.
set
(
event
new
Set
(
[
listener
]
)
)
;
}
}
off
(
event
listener
)
{
if
(
!
this
.
_events
.
has
(
event
)
)
{
return
;
}
this
.
_events
.
get
(
event
)
.
delete
(
listener
)
;
}
emit
(
event
.
.
.
args
)
{
if
(
!
this
.
_events
.
has
(
event
)
)
{
return
;
}
for
(
let
listener
of
this
.
_events
.
get
(
event
)
.
values
(
)
)
{
try
{
listener
.
apply
(
this
args
)
;
}
catch
(
e
)
{
Cu
.
reportError
(
e
)
;
}
}
}
}
;
