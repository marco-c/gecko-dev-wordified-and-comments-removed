"
use
strict
"
;
add_common_setup
(
)
;
async
function
testDisabledByReportBrokenSite
(
menu
)
{
ensureReportBrokenSitePreffedOn
(
)
;
ensureReportSiteIssuePreffedOn
(
)
;
await
menu
.
open
(
)
;
menu
.
isReportSiteIssueHidden
(
)
;
await
menu
.
close
(
)
;
}
async
function
testDisabledByPref
(
menu
)
{
ensureReportBrokenSitePreffedOff
(
)
;
ensureReportSiteIssuePreffedOff
(
)
;
await
menu
.
open
(
)
;
menu
.
isReportSiteIssueHidden
(
)
;
await
menu
.
close
(
)
;
}
async
function
testDisabledForInvalidURLs
(
menu
)
{
ensureReportBrokenSitePreffedOff
(
)
;
ensureReportSiteIssuePreffedOn
(
)
;
await
menu
.
open
(
)
;
menu
.
isReportSiteIssueDisabled
(
)
;
await
menu
.
close
(
)
;
}
async
function
testEnabledForValidURLs
(
menu
)
{
ensureReportBrokenSitePreffedOff
(
)
;
ensureReportSiteIssuePreffedOn
(
)
;
await
BrowserTestUtils
.
withNewTab
(
REPORTABLE_PAGE_URL
async
function
(
browser
)
{
await
menu
.
open
(
)
;
menu
.
isReportSiteIssueEnabled
(
)
;
await
menu
.
close
(
)
;
}
)
;
}
add_task
(
async
function
testDisabledByReportBrokenSiteAppMenuHelpSubmenu
(
)
{
await
testDisabledByReportBrokenSite
(
AppMenuHelpSubmenu
(
)
)
;
}
)
;
add_task
(
async
function
testDisabledForInvalidURLsAppMenuHelpSubmenu
(
)
{
await
testDisabledForInvalidURLs
(
AppMenuHelpSubmenu
(
)
)
;
}
)
;
add_task
(
async
function
testEnabledForValidURLsAppMenuHelpSubmenu
(
)
{
await
testEnabledForValidURLs
(
AppMenuHelpSubmenu
(
)
)
;
}
)
;
add_task
(
async
function
testDisabledByReportBrokenSiteHelpMenu
(
)
{
await
testDisabledByReportBrokenSite
(
HelpMenu
(
)
)
;
}
)
;
add_task
(
async
function
testDisabledForInvalidURLsHelpMenu
(
)
{
await
testDisabledForInvalidURLs
(
HelpMenu
(
)
)
;
}
)
;
add_task
(
async
function
testEnabledForValidURLsHelpMenu
(
)
{
await
testEnabledForValidURLs
(
HelpMenu
(
)
)
;
}
)
;
