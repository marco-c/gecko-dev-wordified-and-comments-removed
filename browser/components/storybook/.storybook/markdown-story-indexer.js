const
{
loadCsf
}
=
require
(
"
storybook
/
csf
-
tools
"
)
;
const
{
compile
}
=
require
(
"
storybook
/
mdx2
-
csf
"
)
;
const
{
getStoryTitle
getMDXSource
}
=
require
(
"
.
/
markdown
-
story
-
utils
.
js
"
)
;
const
fs
=
require
(
"
fs
"
)
;
module
.
exports
=
async
(
fileName
opts
)
=
>
{
const
content
=
fs
.
readFileSync
(
fileName
"
utf8
"
)
;
const
title
=
getStoryTitle
(
fileName
)
;
const
code
=
getMDXSource
(
content
title
)
;
const
csfCode
=
await
compile
(
code
opts
)
;
let
csf
=
loadCsf
(
csfCode
{
fileName
makeTitle
:
(
)
=
>
title
}
)
.
parse
(
)
;
const
{
indexInputs
stories
}
=
csf
;
return
indexInputs
.
map
(
(
input
index
)
=
>
{
const
docsOnly
=
stories
[
index
]
.
parameters
?
.
docsOnly
;
const
tags
=
input
.
tags
?
input
.
tags
:
[
]
;
if
(
docsOnly
)
{
tags
.
push
(
"
stories
-
mdx
-
docsOnly
"
)
;
}
if
(
!
tags
.
includes
(
"
stories
-
mdx
"
)
)
{
tags
.
push
(
"
stories
-
mdx
"
)
;
}
return
{
.
.
.
input
tags
}
;
}
)
;
}
;
