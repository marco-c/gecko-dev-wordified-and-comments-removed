import
{
DOMLocalization
}
from
"
fluent
/
dom
"
;
import
{
FluentBundle
FluentResource
}
from
"
fluent
/
bundle
"
;
let
storybookBundle
=
new
FluentBundle
(
"
en
-
US
"
)
;
let
loadedResources
=
new
Set
(
)
;
function
*
generateBundles
(
)
{
yield
*
[
storybookBundle
]
;
}
document
.
l10n
=
new
DOMLocalization
(
[
]
generateBundles
)
;
document
.
l10n
.
connectRoot
(
document
.
documentElement
)
;
window
.
MozXULElement
=
{
async
insertFTLIfNeeded
(
name
)
{
if
(
loadedResources
.
has
(
name
)
)
{
return
;
}
let
root
=
name
.
split
(
"
/
"
)
[
0
]
;
let
ftlContents
;
if
(
root
=
=
"
toolkit
"
)
{
let
imported
=
await
import
(
toolkit
/
locales
/
en
-
US
/
{
name
}
)
;
ftlContents
=
imported
.
default
;
}
else
if
(
root
=
=
"
browser
"
)
{
let
imported
=
await
import
(
browser
/
locales
/
en
-
US
/
{
name
}
)
;
ftlContents
=
imported
.
default
;
}
if
(
loadedResources
.
has
(
name
)
)
{
return
;
}
let
ftlResource
=
new
FluentResource
(
ftlContents
)
;
storybookBundle
.
addResource
(
ftlResource
)
;
loadedResources
.
add
(
name
)
;
document
.
l10n
.
translateRoots
(
)
;
}
}
;
