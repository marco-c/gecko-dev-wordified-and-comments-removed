const
SECURE_CONTAINER_URL
=
"
https
:
/
/
example
.
com
/
browser
/
browser
/
components
/
safebrowsing
/
content
/
test
/
empty_file
.
html
"
;
add_task
(
async
function
testNormalBrowsing
(
)
{
await
BrowserTestUtils
.
withNewTab
(
SECURE_CONTAINER_URL
async
function
(
browser
)
{
await
new
Promise
(
resolve
=
>
waitForDBInit
(
resolve
)
)
;
let
promise
=
new
Promise
(
resolve
=
>
{
let
removeFunc
=
BrowserTestUtils
.
addContentEventListener
(
browser
"
AboutBlockedLoaded
"
(
)
=
>
{
removeFunc
(
)
;
resolve
(
)
;
}
{
wantUntrusted
:
true
}
)
;
}
)
;
await
SpecialPowers
.
spawn
(
browser
[
PHISH_URL
]
async
function
(
aPhishUrl
)
{
let
iframe
=
content
.
document
.
createElement
(
"
iframe
"
)
;
iframe
.
src
=
aPhishUrl
;
content
.
document
.
body
.
appendChild
(
iframe
)
;
}
)
;
await
promise
;
ok
(
true
"
about
:
blocked
is
successfully
loaded
!
"
)
;
}
)
;
}
)
;
