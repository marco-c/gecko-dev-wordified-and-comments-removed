const
{
classes
:
Cc
interfaces
:
Ci
results
:
Cr
}
=
Components
;
const
SECURE_CONTAINER_URL
=
"
https
:
/
/
example
.
com
/
browser
/
browser
/
components
/
safebrowsing
/
content
/
test
/
empty_file
.
html
"
;
add_task
(
async
function
testNormalBrowsing
(
)
{
await
BrowserTestUtils
.
withNewTab
(
SECURE_CONTAINER_URL
async
function
(
browser
)
{
await
new
Promise
(
resolve
=
>
waitForDBInit
(
resolve
)
)
;
await
ContentTask
.
spawn
(
browser
PHISH_URL
async
function
(
aPhishUrl
)
{
return
new
Promise
(
resolve
=
>
{
let
listener
=
e
=
>
{
removeEventListener
(
"
AboutBlockedLoaded
"
listener
false
true
)
;
resolve
(
)
;
}
;
addEventListener
(
"
AboutBlockedLoaded
"
listener
false
true
)
;
let
iframe
=
content
.
document
.
createElement
(
"
iframe
"
)
;
iframe
.
src
=
aPhishUrl
;
content
.
document
.
body
.
appendChild
(
iframe
)
;
}
)
;
}
)
;
ok
(
true
"
about
:
blocked
is
successfully
loaded
!
"
)
;
}
)
;
}
)
;
