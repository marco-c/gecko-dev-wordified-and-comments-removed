const
NORMAL_PAGE
=
"
http
:
/
/
example
.
com
"
;
const
PHISH_PAGE
=
"
http
:
/
/
www
.
itisatrap
.
org
/
firefox
/
its
-
a
-
trap
.
html
"
;
function
check_menu_at_page
(
url
testFn
)
{
return
BrowserTestUtils
.
withNewTab
(
{
gBrowser
url
:
"
about
:
blank
"
}
async
function
(
browser
)
{
let
dclPromise
=
ContentTask
.
spawn
(
browser
null
async
function
(
)
{
await
ContentTaskUtils
.
waitForEvent
(
this
"
DOMContentLoaded
"
false
)
;
}
)
;
browser
.
loadURI
(
url
)
;
await
dclPromise
;
let
menu
=
document
.
getElementById
(
"
menu_HelpPopup
"
)
;
ok
(
menu
"
Help
menu
should
exist
"
)
;
let
reportMenu
=
document
.
getElementById
(
"
menu_HelpPopup_reportPhishingtoolmenu
"
)
;
ok
(
reportMenu
"
Report
phishing
menu
item
should
exist
"
)
;
let
errorMenu
=
document
.
getElementById
(
"
menu_HelpPopup_reportPhishingErrortoolmenu
"
)
;
ok
(
errorMenu
"
Report
phishing
error
menu
item
should
exist
"
)
;
let
menuOpen
=
BrowserTestUtils
.
waitForEvent
(
menu
"
popupshown
"
)
;
menu
.
openPopup
(
null
"
"
0
0
false
null
)
;
await
menuOpen
;
testFn
(
reportMenu
errorMenu
)
;
let
menuClose
=
BrowserTestUtils
.
waitForEvent
(
menu
"
popuphidden
"
)
;
menu
.
hidePopup
(
)
;
await
menuClose
;
}
)
;
}
add_task
(
async
function
(
)
{
await
check_menu_at_page
(
NORMAL_PAGE
(
reportMenu
errorMenu
)
=
>
{
ok
(
!
reportMenu
.
hidden
"
Report
phishing
menu
should
be
visible
on
normal
sites
"
)
;
ok
(
errorMenu
.
hidden
"
Report
error
menu
item
should
be
hidden
on
normal
sites
"
)
;
}
)
;
}
)
;
add_task
(
async
function
(
)
{
await
check_menu_at_page
(
PHISH_PAGE
(
reportMenu
errorMenu
)
=
>
{
ok
(
reportMenu
.
hidden
"
Report
phishing
menu
should
be
hidden
on
phishing
sites
"
)
;
ok
(
!
errorMenu
.
hidden
"
Report
error
menu
item
should
be
visible
on
phishing
sites
"
)
;
}
)
;
}
)
;
