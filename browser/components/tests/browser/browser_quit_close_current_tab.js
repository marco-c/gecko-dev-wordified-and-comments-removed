"
use
strict
"
;
add_task
(
async
function
test_close_current_tab
(
)
{
let
tab
=
await
BrowserTestUtils
.
openNewForegroundTab
(
gBrowser
)
;
async
function
observer
(
subject
)
{
let
dialogElement
=
subject
.
document
.
getElementById
(
"
commonDialog
"
)
;
let
buttons
=
Array
.
from
(
dialogElement
.
buttonBox
.
getElementsByTagName
(
"
button
"
)
)
;
if
(
AppConstants
.
XP_UNIX
)
{
is
(
buttons
[
2
]
.
label
dialogElement
.
getButton
(
"
cancel
"
)
.
label
"
Cancel
button
should
be
at
position
2
"
)
;
}
let
closePromise
=
BrowserTestUtils
.
waitForTabClosing
(
tab
)
;
dialogElement
.
getButton
(
"
extra1
"
)
.
click
(
)
;
await
closePromise
;
is
(
gBrowser
.
tabs
.
find
(
t
=
>
t
=
=
=
tab
)
undefined
"
Tab
should
no
longer
be
open
"
)
;
}
Services
.
obs
.
addObserver
(
observer
"
common
-
dialog
-
loaded
"
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
warnOnQuitShortcut
"
true
]
[
"
browser
.
warnOnQuit
"
true
]
]
}
)
;
canQuitApplication
(
undefined
"
shortcut
"
)
;
Services
.
obs
.
removeObserver
(
observer
"
common
-
dialog
-
loaded
"
)
;
}
)
;
