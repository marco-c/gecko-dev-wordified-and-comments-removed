add_task
(
async
function
test_quit_shortcut
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
warnOnQuit
"
true
]
[
"
browser
.
warnOnQuitShortcut
"
true
]
]
}
)
;
function
checkDialog
(
dialog
)
{
let
dialogElement
=
dialog
.
document
.
getElementById
(
"
commonDialog
"
)
;
let
acceptLabel
=
dialogElement
.
getButton
(
"
accept
"
)
.
label
;
is
(
acceptLabel
.
indexOf
(
"
Quit
"
)
0
"
dialog
label
"
)
;
dialogElement
.
getButton
(
"
cancel
"
)
.
click
(
)
;
}
let
dialogOpened
=
false
;
function
setDialogOpened
(
)
{
dialogOpened
=
true
;
}
Services
.
obs
.
addObserver
(
setDialogOpened
"
common
-
dialog
-
loaded
"
)
;
let
quitPromise
=
BrowserTestUtils
.
promiseAlertDialog
(
"
cancel
"
undefined
{
callback
:
checkDialog
}
)
;
ok
(
!
canQuitApplication
(
undefined
"
shortcut
"
)
"
can
quit
with
dialog
"
)
;
ok
(
dialogOpened
"
confirmation
prompt
should
have
opened
"
)
;
await
quitPromise
;
dialogOpened
=
false
;
ok
(
canQuitApplication
(
undefined
"
"
)
"
can
quit
with
no
dialog
"
)
;
ok
(
!
dialogOpened
"
confirmation
prompt
should
not
have
opened
"
)
;
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
warnOnQuitShortcut
"
false
]
]
}
)
;
dialogOpened
=
false
;
ok
(
canQuitApplication
(
undefined
"
shortcut
"
)
"
can
quit
with
no
dialog
"
)
;
ok
(
!
dialogOpened
"
confirmation
prompt
should
not
have
opened
"
)
;
Services
.
obs
.
removeObserver
(
setDialogOpened
"
common
-
dialog
-
loaded
"
)
;
await
SpecialPowers
.
popPrefEnv
(
)
;
}
)
;
