function
run_test
(
)
{
create_bookmarks_html
(
"
bookmarks
.
glue
.
html
"
)
;
remove_all_JSON_backups
(
)
;
run_next_test
(
)
;
}
registerCleanupFunction
(
remove_bookmarks_html
)
;
add_task
(
async
function
(
)
{
await
createCorruptDB
(
)
;
Cc
[
"
mozilla
.
org
/
browser
/
browserglue
;
1
"
]
.
getService
(
Ci
.
nsISupports
)
;
Assert
.
equal
(
PlacesUtils
.
history
.
databaseStatus
PlacesUtils
.
history
.
DATABASE_STATUS_CORRUPT
)
;
await
promiseTopicObserved
(
"
places
-
browser
-
init
-
complete
"
)
;
let
bm
=
await
PlacesUtils
.
bookmarks
.
fetch
(
{
parentGuid
:
PlacesUtils
.
bookmarks
.
toolbarGuid
index
:
0
}
)
;
await
checkItemHasAnnotation
(
bm
.
guid
SMART_BOOKMARKS_ANNO
)
;
bm
=
await
PlacesUtils
.
bookmarks
.
fetch
(
{
parentGuid
:
PlacesUtils
.
bookmarks
.
toolbarGuid
index
:
SMART_BOOKMARKS_ON_TOOLBAR
}
)
;
Assert
.
equal
(
bm
.
title
"
example
"
)
;
}
)
;
