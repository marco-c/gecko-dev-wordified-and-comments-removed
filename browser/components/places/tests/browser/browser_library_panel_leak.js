const
TEST_URI
=
"
https
:
/
/
www
.
mozilla
.
org
/
"
;
add_task
(
async
function
test_no_leak_closing_library_with_history_selected
(
)
{
await
PlacesTestUtils
.
addVisits
(
TEST_URI
)
;
let
organizer
=
await
promiseLibrary
(
)
;
let
contentTree
=
organizer
.
document
.
getElementById
(
"
placeContent
"
)
;
Assert
.
notEqual
(
contentTree
null
"
Sanity
check
:
placeContent
tree
should
exist
"
)
;
Assert
.
notEqual
(
organizer
.
PlacesOrganizer
null
"
Sanity
check
:
PlacesOrganizer
should
exist
"
)
;
Assert
.
notEqual
(
organizer
.
gEditItemOverlay
null
"
Sanity
check
:
gEditItemOverlay
should
exist
"
)
;
Assert
.
ok
(
organizer
.
gEditItemOverlay
.
initialized
"
gEditItemOverlay
is
initialized
"
)
;
Assert
.
notEqual
(
organizer
.
gEditItemOverlay
.
_paneInfo
.
itemGuid
"
"
"
Editing
a
bookmark
"
)
;
organizer
.
PlacesOrganizer
.
selectLeftPaneBuiltIn
(
"
History
"
)
;
let
selection
=
contentTree
.
view
.
selection
;
selection
.
clearSelection
(
)
;
selection
.
rangedSelect
(
0
0
true
)
;
Assert
.
equal
(
organizer
.
gEditItemOverlay
.
_paneInfo
.
itemGuid
"
"
"
Editing
an
history
entry
"
)
;
organizer
.
close
(
)
;
await
PlacesUtils
.
history
.
clear
(
)
;
}
)
;
