var
{
XPCOMUtils
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
sys
.
mjs
"
)
;
ChromeUtils
.
defineESModuleGetters
(
this
{
PlacesTransactions
:
"
resource
:
/
/
gre
/
modules
/
PlacesTransactions
.
sys
.
mjs
"
PlacesUIUtils
:
"
resource
:
/
/
/
modules
/
PlacesUIUtils
.
sys
.
mjs
"
PlacesUtils
:
"
resource
:
/
/
gre
/
modules
/
PlacesUtils
.
sys
.
mjs
"
}
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
PrivateBrowsingUtils
:
"
resource
:
/
/
gre
/
modules
/
PrivateBrowsingUtils
.
jsm
"
}
)
;
XPCOMUtils
.
defineLazyScriptGetter
(
this
"
PlacesTreeView
"
"
chrome
:
/
/
browser
/
content
/
places
/
treeView
.
js
"
)
;
XPCOMUtils
.
defineLazyScriptGetter
(
this
[
"
PlacesInsertionPoint
"
"
PlacesController
"
"
PlacesControllerDragHelper
"
]
"
chrome
:
/
/
browser
/
content
/
places
/
controller
.
js
"
)
;
function
init
(
)
{
let
uidensity
=
window
.
top
.
document
.
documentElement
.
getAttribute
(
"
uidensity
"
)
;
if
(
uidensity
)
{
document
.
documentElement
.
setAttribute
(
"
uidensity
"
uidensity
)
;
}
document
.
getElementById
(
"
bookmarks
-
view
"
)
.
place
=
"
place
:
type
=
"
+
Ci
.
nsINavHistoryQueryOptions
.
RESULTS_AS_ROOTS_QUERY
;
window
.
addEventListener
(
"
pageshow
"
e
=
>
{
window
.
windowGlobalChild
.
getActor
(
"
LightweightTheme
"
)
.
handleEvent
(
e
)
;
}
{
once
:
true
}
)
;
}
function
searchBookmarks
(
aSearchString
)
{
var
tree
=
document
.
getElementById
(
"
bookmarks
-
view
"
)
;
if
(
!
aSearchString
)
{
tree
.
place
=
tree
.
place
;
}
else
{
tree
.
applyFilter
(
aSearchString
PlacesUtils
.
bookmarks
.
userContentRoots
)
;
}
}
window
.
addEventListener
(
"
SidebarFocused
"
(
)
=
>
document
.
getElementById
(
"
search
-
box
"
)
.
focus
(
)
)
;
