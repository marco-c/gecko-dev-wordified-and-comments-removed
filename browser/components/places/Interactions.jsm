"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
Interactions
"
]
;
const
{
XPCOMUtils
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetters
(
this
{
Services
:
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
}
)
;
class
_Interactions
{
#
interactions
=
new
WeakMap
(
)
;
init
(
)
{
if
(
!
Services
.
prefs
.
getBoolPref
(
"
browser
.
places
.
interactions
.
enabled
"
false
)
)
{
return
;
}
this
.
logConsole
=
console
.
createInstance
(
{
prefix
:
"
InteractionsManager
"
maxLogLevel
:
Services
.
prefs
.
getBoolPref
(
"
browser
.
places
.
interactions
.
log
"
false
)
?
"
Debug
"
:
"
Warn
"
}
)
;
this
.
logConsole
.
debug
(
"
init
"
)
;
ChromeUtils
.
registerWindowActor
(
"
Interactions
"
{
parent
:
{
moduleURI
:
"
resource
:
/
/
/
actors
/
InteractionsParent
.
jsm
"
}
child
:
{
moduleURI
:
"
resource
:
/
/
/
actors
/
InteractionsChild
.
jsm
"
group
:
"
browsers
"
events
:
{
DOMContentLoaded
:
{
}
}
}
}
)
;
}
registerNewInteraction
(
browser
docInfo
)
{
this
.
logConsole
.
debug
(
"
New
interaction
"
docInfo
)
;
this
.
#
interactions
.
set
(
browser
docInfo
)
;
}
_getInteractionFor
(
browser
)
{
return
this
.
#
interactions
.
get
(
browser
)
;
}
}
const
Interactions
=
new
_Interactions
(
)
;
