#
downloads
-
button
{
%
ifdef
MOZ_PHOTON_THEME
-
-
downloads
-
indicator
-
image
:
url
(
"
chrome
:
/
/
browser
/
skin
/
downloads
/
download
-
icons
.
svg
#
arrow
-
with
-
bar
"
)
;
%
else
-
-
downloads
-
indicator
-
image
:
url
(
"
chrome
:
/
/
browser
/
skin
/
download
.
svg
"
)
;
%
endif
}
#
downloads
-
indicator
-
anchor
{
min
-
width
:
16px
;
min
-
height
:
16px
;
}
#
downloads
-
indicator
-
progress
-
outer
{
width
:
16px
;
height
:
16px
;
background
-
size
:
16px
;
-
moz
-
context
-
properties
:
fill
;
%
ifdef
MOZ_PHOTON_ANIMATIONS
background
:
url
(
"
chrome
:
/
/
browser
/
skin
/
downloads
/
download
-
icons
.
svg
#
default
-
bar
"
)
center
no
-
repeat
;
%
else
background
:
var
(
-
-
downloads
-
indicator
-
image
)
center
no
-
repeat
;
%
endif
}
%
ifdef
MOZ_PHOTON_ANIMATIONS
#
downloads
-
button
[
attention
=
"
success
"
]
>
#
downloads
-
indicator
-
anchor
>
#
downloads
-
indicator
-
icon
%
endif
#
downloads
-
button
[
attention
=
"
success
"
]
>
#
downloads
-
indicator
-
anchor
>
#
downloads
-
indicator
-
progress
-
outer
{
fill
:
var
(
-
-
toolbarbutton
-
icon
-
fill
-
attention
)
;
}
%
ifdef
MOZ_PHOTON_ANIMATIONS
#
downloads
-
button
[
progress
]
>
#
downloads
-
indicator
-
anchor
>
#
downloads
-
indicator
-
progress
-
outer
{
background
:
url
(
"
chrome
:
/
/
browser
/
skin
/
downloads
/
download
-
icons
.
svg
#
progress
-
bar
-
bg
"
)
center
no
-
repeat
;
}
%
endif
#
downloads
-
button
[
attention
=
"
success
"
]
{
list
-
style
-
image
:
url
(
"
chrome
:
/
/
browser
/
skin
/
downloads
/
download
-
glow
-
menuPanel
.
png
"
)
;
-
moz
-
image
-
region
:
auto
;
}
%
ifdef
MOZ_PHOTON_ANIMATIONS
#
downloads
-
indicator
-
icon
{
-
moz
-
context
-
properties
:
fill
;
background
-
image
:
url
(
"
chrome
:
/
/
browser
/
skin
/
downloads
/
download
-
icons
.
svg
#
arrow
"
)
;
width
:
16px
;
height
:
16px
;
}
%
endif
#
downloads
-
indicator
-
progress
-
inner
{
%
ifdef
MOZ_PHOTON_ANIMATIONS
background
:
url
(
"
chrome
:
/
/
browser
/
skin
/
downloads
/
download
-
icons
.
svg
#
progress
-
bar
-
fg
"
)
left
no
-
repeat
;
margin
-
right
:
16px
;
%
else
background
:
var
(
-
-
downloads
-
indicator
-
image
)
bottom
no
-
repeat
;
margin
-
top
:
16px
;
%
endif
-
moz
-
context
-
properties
:
fill
;
fill
:
var
(
-
-
toolbarbutton
-
icon
-
fill
-
attention
)
;
background
-
size
:
16px
;
animation
-
play
-
state
:
paused
;
animation
-
delay
:
1s
;
animation
-
duration
:
100s
;
animation
-
timing
-
function
:
linear
;
animation
-
name
:
indicatorArrowProgress
;
}
%
ifndef
MOZ_PHOTON_ANIMATIONS
toolbar
[
brighttext
]
#
downloads
-
indicator
-
progress
-
inner
{
animation
-
name
:
indicatorArrowProgressDark
;
}
%
endif
%
ifdef
MOZ_PHOTON_ANIMATIONS
#
downloads
-
indicator
-
progress
-
inner
:
-
moz
-
locale
-
dir
(
rtl
)
{
animation
-
name
:
indicatorArrowProgressRTL
;
margin
-
left
:
16px
;
margin
-
right
:
0
;
}
%
endif
keyframes
indicatorArrowProgress
{
0
%
{
%
ifdef
MOZ_PHOTON_ANIMATIONS
margin
-
right
:
14px
;
%
else
margin
-
top
:
12px
;
filter
:
brightness
(
1
.
2
)
;
%
endif
}
100
%
{
%
ifdef
MOZ_PHOTON_ANIMATIONS
margin
-
right
:
2px
;
%
else
margin
-
top
:
2px
;
filter
:
brightness
(
1
)
;
%
endif
}
}
%
ifdef
MOZ_PHOTON_ANIMATIONS
keyframes
indicatorArrowProgressRTL
{
0
%
{
margin
-
left
:
14px
;
}
100
%
{
margin
-
left
:
2px
;
}
}
%
else
keyframes
indicatorArrowProgressDark
{
0
%
{
margin
-
top
:
12px
;
filter
:
brightness
(
0
.
7
)
;
}
100
%
{
margin
-
top
:
2px
;
filter
:
brightness
(
1
)
;
}
}
%
endif
#
downloads
-
button
[
attention
=
"
warning
"
]
>
.
toolbarbutton
-
badge
-
stack
>
.
toolbarbutton
-
badge
#
downloads
-
button
[
attention
=
"
severe
"
]
>
.
toolbarbutton
-
badge
-
stack
>
.
toolbarbutton
-
badge
{
display
:
-
moz
-
box
;
height
:
8px
;
width
:
8px
;
min
-
width
:
0
;
border
-
radius
:
50
%
;
margin
-
top
:
-
1px
!
important
;
margin
-
right
:
-
2px
!
important
;
}
#
downloads
-
button
[
cui
-
areatype
=
"
toolbar
"
]
>
.
toolbarbutton
-
badge
-
stack
>
.
toolbarbutton
-
badge
{
height
:
7px
;
width
:
7px
;
}
#
downloads
-
button
[
attention
=
"
severe
"
]
>
.
toolbarbutton
-
badge
-
stack
>
.
toolbarbutton
-
badge
{
background
:
#
D90000
;
}
#
downloads
-
button
[
attention
=
"
warning
"
]
>
.
toolbarbutton
-
badge
-
stack
>
.
toolbarbutton
-
badge
{
background
:
#
FFBF00
;
}
#
downloads
-
button
[
attention
=
"
severe
"
]
>
.
toolbarbutton
-
badge
-
stack
>
.
toolbarbutton
-
badge
:
-
moz
-
window
-
inactive
#
downloads
-
button
[
attention
=
"
warning
"
]
>
.
toolbarbutton
-
badge
-
stack
>
.
toolbarbutton
-
badge
:
-
moz
-
window
-
inactive
{
filter
:
none
;
}
%
ifdef
MOZ_PHOTON_ANIMATIONS
#
downloads
-
button
[
notification
=
"
start
"
]
>
#
downloads
-
indicator
-
anchor
>
#
downloads
-
indicator
-
icon
{
animation
-
name
:
downloadsIndicatorStartDip
;
animation
-
duration
:
360ms
;
animation
-
delay
:
400ms
;
animation
-
iteration
-
count
:
1
;
}
%
else
#
downloads
-
button
[
notification
=
"
start
"
]
>
#
downloads
-
indicator
-
anchor
>
#
downloads
-
indicator
-
progress
-
outer
{
animation
-
name
:
downloadsIndicatorStartJump
;
animation
-
duration
:
0
.
5s
;
animation
-
delay
:
1s
;
animation
-
iteration
-
count
:
2
;
}
%
endif
%
ifdef
MOZ_PHOTON_ANIMATIONS
keyframes
downloadsIndicatorStartDip
{
0
%
{
transform
:
translateY
(
0
)
;
animation
-
timing
-
function
:
linear
;
}
50
%
{
transform
:
translateY
(
0
)
;
animation
-
timing
-
function
:
ease
-
out
;
}
88
%
{
transform
:
translateY
(
3px
)
;
animation
-
timing
-
function
:
ease
-
out
;
}
100
%
{
transform
:
translateY
(
0
)
;
}
}
keyframes
downloadsIndicatorFinishPulse
{
from
{
transform
:
scale
(
1
)
;
}
37
.
5
%
{
transform
:
scale
(
1
.
4
)
;
animation
-
timing
-
function
:
ease
-
out
;
}
to
{
transform
:
scale
(
1
)
;
animation
-
timing
-
function
:
ease
-
in
;
}
}
%
else
keyframes
downloadsIndicatorStartJump
{
0
%
{
transform
:
translateY
(
0
)
;
animation
-
timing
-
function
:
ease
-
out
;
}
50
%
{
transform
:
translateY
(
-
3px
)
;
animation
-
timing
-
function
:
ease
-
in
;
}
100
%
{
transform
:
translateY
(
0
)
;
}
}
%
endif
%
ifdef
MOZ_PHOTON_ANIMATIONS
#
downloads
-
button
[
notification
=
"
finish
"
]
>
#
downloads
-
indicator
-
anchor
>
#
downloads
-
indicator
-
icon
{
animation
-
name
:
downloadsIndicatorFinishPulse
;
animation
-
delay
:
250ms
;
animation
-
duration
:
300ms
;
animation
-
iteration
-
count
:
2
;
}
%
endif
#
downloads
-
animation
-
container
{
min
-
height
:
1px
;
min
-
width
:
1px
;
height
:
1px
;
margin
-
bottom
:
-
1px
;
position
:
relative
;
z
-
index
:
5
;
}
%
ifdef
MOZ_PHOTON_ANIMATIONS
#
downloads
-
notification
-
anchor
{
width
:
42px
;
min
-
height
:
98px
;
max
-
height
:
98px
;
overflow
:
hidden
;
direction
:
ltr
;
}
%
endif
#
downloads
-
indicator
-
notification
{
opacity
:
0
;
%
ifdef
MOZ_PHOTON_ANIMATIONS
min
-
width
:
1344px
;
height
:
98px
;
-
moz
-
context
-
properties
:
fill
;
fill
:
#
737373
;
%
else
background
-
size
:
16px
;
background
-
position
:
center
;
background
-
repeat
:
no
-
repeat
;
width
:
16px
;
height
:
16px
;
%
endif
}
%
ifdef
MOZ_PHOTON_ANIMATIONS
keyframes
downloadsIndicatorNotificationStart
{
from
{
transform
:
translateX
(
0
)
;
}
to
{
transform
:
translateX
(
-
1302px
)
;
}
}
%
else
keyframes
downloadsIndicatorNotificationStartRight
{
from
{
opacity
:
0
;
transform
:
translate
(
-
128px
128px
)
scale
(
8
)
;
}
20
%
{
opacity
:
.
85
;
animation
-
timing
-
function
:
ease
-
out
;
}
to
{
opacity
:
0
;
transform
:
translate
(
0
)
scale
(
1
)
;
}
}
keyframes
downloadsIndicatorNotificationStartLeft
{
from
{
opacity
:
0
;
transform
:
translate
(
128px
128px
)
scale
(
8
)
;
}
20
%
{
opacity
:
.
85
;
animation
-
timing
-
function
:
ease
-
out
;
}
to
{
opacity
:
0
;
transform
:
translate
(
0
)
scale
(
1
)
;
}
}
keyframes
downloadsIndicatorNotificationFinish
{
from
{
opacity
:
0
;
transform
:
scale
(
1
)
;
}
20
%
{
opacity
:
.
65
;
animation
-
timing
-
function
:
ease
-
in
;
}
to
{
opacity
:
0
;
transform
:
scale
(
8
)
;
}
}
%
endif
#
downloads
-
notification
-
anchor
[
notification
=
"
start
"
]
>
#
downloads
-
indicator
-
notification
{
%
ifdef
MOZ_PHOTON_ANIMATIONS
opacity
:
1
;
background
:
url
(
"
chrome
:
/
/
browser
/
skin
/
downloads
/
notification
-
start
-
animation
.
svg
"
)
0
center
no
-
repeat
;
transform
:
translateX
(
0px
)
;
animation
-
name
:
downloadsIndicatorNotificationStart
;
animation
-
duration
:
540ms
;
animation
-
delay
:
64ms
;
animation
-
timing
-
function
:
steps
(
31
)
;
%
else
background
-
image
:
url
(
"
chrome
:
/
/
browser
/
skin
/
downloads
/
download
-
notification
-
start
.
png
"
)
;
animation
-
name
:
downloadsIndicatorNotificationStartRight
;
animation
-
duration
:
1s
;
%
endif
}
%
ifndef
MOZ_PHOTON_ANIMATIONS
#
downloads
-
notification
-
anchor
[
notification
=
"
start
"
]
:
-
moz
-
locale
-
dir
(
rtl
)
>
#
downloads
-
indicator
-
notification
{
animation
-
name
:
downloadsIndicatorNotificationStartLeft
;
}
#
downloads
-
notification
-
anchor
[
notification
=
"
finish
"
]
>
#
downloads
-
indicator
-
notification
{
background
-
image
:
url
(
"
chrome
:
/
/
browser
/
skin
/
downloads
/
download
-
notification
-
finish
.
png
"
)
;
animation
-
name
:
downloadsIndicatorNotificationFinish
;
animation
-
duration
:
1s
;
}
%
endif
