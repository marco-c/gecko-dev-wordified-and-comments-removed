var
{
AppConstants
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
AppConstants
.
sys
.
mjs
"
)
;
const
PREF_UPLOAD_ENABLED
=
"
datareporting
.
healthreport
.
uploadEnabled
"
;
window
.
addEventListener
(
"
DOMContentLoaded
"
(
)
=
>
{
initAboutInfo
(
)
;
initClearAllData
(
)
;
initSubmitHealthReport
(
)
;
initParentDependencies
(
)
;
}
{
once
:
true
}
)
;
function
initAboutInfo
(
)
{
document
.
getElementById
(
"
eFxrVersion
"
)
.
textContent
=
"
version
0
.
9
"
;
document
.
getElementById
(
"
eFxrDate
"
)
.
textContent
=
"
(
2019
-
12
-
17
)
"
;
document
.
getElementById
(
"
eFxVersion
"
)
.
textContent
=
"
Firefox
version
"
+
Services
.
appinfo
.
version
;
}
function
initClearAllData
(
)
{
let
eClearPrompt
=
document
.
getElementById
(
"
eClearPrompt
"
)
;
let
eClearTry
=
document
.
getElementById
(
"
eClearTry
"
)
;
eClearTry
.
addEventListener
(
"
click
"
(
)
=
>
{
showModalContainer
(
eClearPrompt
)
;
}
)
;
let
eClearCancel
=
document
.
getElementById
(
"
eClearCancel
"
)
;
eClearCancel
.
addEventListener
(
"
click
"
(
)
=
>
{
document
.
body
.
appendChild
(
clearModalContainer
(
)
)
;
}
)
;
document
.
getElementById
(
"
eClearConfirm
"
)
.
addEventListener
(
"
click
"
(
)
=
>
{
Services
.
clearData
.
deleteData
(
Ci
.
nsIClearDataService
.
CLEAR_ALL
function
(
aFailedFlags
)
{
if
(
aFailedFlags
=
=
0
)
{
eClearTry
.
textContent
=
"
Data
cleared
"
;
eClearTry
.
disabled
=
true
;
document
.
body
.
appendChild
(
clearModalContainer
(
)
)
;
}
else
{
eClearTry
.
textContent
=
"
Error
"
;
}
}
)
;
}
)
;
}
function
initSubmitHealthReport
(
)
{
let
checkbox
=
document
.
getElementById
(
"
eCrashConfig
"
)
;
if
(
Services
.
prefs
.
prefIsLocked
(
PREF_UPLOAD_ENABLED
)
|
|
!
AppConstants
.
MOZ_TELEMETRY_REPORTING
)
{
checkbox
.
disabled
=
true
;
}
else
{
checkbox
.
addEventListener
(
"
change
"
updateSubmitHealthReport
)
;
checkbox
.
checked
=
Services
.
prefs
.
getBoolPref
(
PREF_UPLOAD_ENABLED
)
&
&
AppConstants
.
MOZ_TELEMETRY_REPORTING
;
}
}
function
updateSubmitHealthReport
(
)
{
let
checkbox
=
document
.
getElementById
(
"
eCrashConfig
"
)
;
Services
.
prefs
.
setBoolPref
(
PREF_UPLOAD_ENABLED
checkbox
.
checked
)
;
}
function
initParentDependencies
(
)
{
if
(
window
.
parent
!
=
window
)
{
document
.
getElementById
(
"
eCloseSettings
"
)
.
addEventListener
(
"
click
"
(
)
=
>
{
window
.
parent
.
closeSettings
(
)
;
}
)
;
document
.
getElementById
(
"
ePrivacyPolicy
"
)
.
addEventListener
(
"
click
"
(
)
=
>
{
window
.
parent
.
showPrivacyPolicy
(
)
;
}
)
;
document
.
getElementById
(
"
eLicenseInfo
"
)
.
addEventListener
(
"
click
"
(
)
=
>
{
window
.
parent
.
showLicenseInfo
(
)
;
}
)
;
document
.
getElementById
(
"
eReportIssue
"
)
.
addEventListener
(
"
click
"
(
)
=
>
{
window
.
parent
.
showReportIssue
(
)
;
}
)
;
}
}
