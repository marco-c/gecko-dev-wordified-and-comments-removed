"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
PageStyleChild
"
]
;
class
PageStyleChild
extends
JSWindowActorChild
{
handleEvent
(
event
)
{
if
(
event
.
type
=
=
"
pageshow
"
)
{
if
(
this
.
browsingContext
.
top
=
=
=
this
.
browsingContext
)
{
this
.
sendAsyncMessage
(
"
PageStyle
:
Clear
"
)
;
}
let
window
=
event
.
target
.
ownerGlobal
;
window
.
requestIdleCallback
(
(
)
=
>
{
if
(
!
window
|
|
window
.
closed
)
{
return
;
}
let
filteredStyleSheets
=
this
.
_collectStyleSheets
(
window
)
;
this
.
sendAsyncMessage
(
"
PageStyle
:
Add
"
{
filteredStyleSheets
authorStyleDisabled
:
this
.
docShell
.
contentViewer
.
authorStyleDisabled
preferredStyleSheetSet
:
this
.
document
.
preferredStyleSheetSet
}
)
;
}
)
;
}
}
receiveMessage
(
msg
)
{
switch
(
msg
.
name
)
{
case
"
PageStyle
:
Switch
"
:
if
(
this
.
browsingContext
.
top
=
=
this
.
browsingContext
)
{
this
.
browsingContext
.
authorStyleDisabledDefault
=
false
;
}
this
.
docShell
.
contentViewer
.
authorStyleDisabled
=
false
;
this
.
_switchStylesheet
(
msg
.
data
.
title
)
;
break
;
case
"
PageStyle
:
Disable
"
:
if
(
this
.
browsingContext
.
top
=
=
this
.
browsingContext
)
{
this
.
browsingContext
.
authorStyleDisabledDefault
=
true
;
}
this
.
docShell
.
contentViewer
.
authorStyleDisabled
=
true
;
break
;
}
}
_switchStylesheet
(
title
)
{
let
docStyleSheets
=
this
.
document
.
styleSheets
;
let
docContainsStyleSheet
=
!
title
;
if
(
title
)
{
for
(
let
docStyleSheet
of
docStyleSheets
)
{
if
(
docStyleSheet
.
title
=
=
=
title
)
{
docContainsStyleSheet
=
true
;
break
;
}
}
}
for
(
let
docStyleSheet
of
docStyleSheets
)
{
if
(
docStyleSheet
.
title
)
{
if
(
docContainsStyleSheet
)
{
docStyleSheet
.
disabled
=
docStyleSheet
.
title
!
=
=
title
;
}
}
else
if
(
docStyleSheet
.
disabled
)
{
docStyleSheet
.
disabled
=
false
;
}
}
}
_collectStyleSheets
(
content
)
{
let
result
=
[
]
;
for
(
let
sheet
of
content
.
document
.
styleSheets
)
{
if
(
!
sheet
.
title
)
{
continue
;
}
let
media
=
sheet
.
media
.
mediaText
;
if
(
media
&
&
!
content
.
matchMedia
(
media
)
.
matches
)
{
continue
;
}
result
.
push
(
{
title
:
sheet
.
title
disabled
:
sheet
.
disabled
}
)
;
}
return
result
;
}
}
