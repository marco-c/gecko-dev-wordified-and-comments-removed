"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
AboutPluginsParent
"
]
;
const
lazy
=
{
}
;
ChromeUtils
.
defineModuleGetter
(
lazy
"
AddonManager
"
"
resource
:
/
/
gre
/
modules
/
AddonManager
.
jsm
"
)
;
const
NEEDED_PROPS
=
[
"
name
"
"
pluginLibraries
"
"
pluginFullpath
"
"
version
"
"
isActive
"
"
blocklistState
"
"
description
"
]
;
class
AboutPluginsParent
extends
JSWindowActorParent
{
async
receiveMessage
(
message
)
{
switch
(
message
.
name
)
{
case
"
RequestPlugins
"
:
function
filterProperties
(
plugin
)
{
let
filtered
=
{
}
;
for
(
let
prop
of
NEEDED_PROPS
)
{
filtered
[
prop
]
=
plugin
[
prop
]
;
}
return
filtered
;
}
let
plugins
=
await
lazy
.
AddonManager
.
getAddonsByTypes
(
[
"
plugin
"
]
)
;
return
plugins
.
map
(
filterProperties
)
;
}
return
undefined
;
}
}
