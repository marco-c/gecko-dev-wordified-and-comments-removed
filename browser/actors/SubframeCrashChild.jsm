"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
SubframeCrashChild
"
]
;
let
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
class
SubframeCrashChild
extends
JSWindowActorChild
{
receiveMessage
(
message
)
{
if
(
message
.
name
=
=
"
SubframeCrashed
"
)
{
this
.
onSubframeCrashed
(
message
.
data
.
id
)
;
}
}
onSubframeCrashed
(
browsingContextId
)
{
let
bc
=
BrowsingContext
.
get
(
browsingContextId
)
;
let
iframe
=
bc
.
embedderElement
;
let
uri
=
Services
.
io
.
newURI
(
iframe
.
src
)
;
iframe
.
removeAttribute
(
"
fission
"
)
;
iframe
.
removeAttribute
(
"
src
"
)
;
iframe
.
changeRemoteness
(
{
remoteType
:
null
}
)
;
let
docShell
=
iframe
.
frameLoader
.
docShell
;
docShell
.
displayLoadError
(
Cr
.
NS_ERROR_FRAME_CRASHED
uri
null
)
;
}
}
