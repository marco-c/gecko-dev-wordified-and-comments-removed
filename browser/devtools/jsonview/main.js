"
use
strict
"
;
const
{
Cu
Ci
Cc
}
=
require
(
"
chrome
"
)
;
const
JsonViewUtils
=
require
(
"
devtools
/
jsonview
/
utils
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
const
{
makeInfallible
}
=
require
(
"
devtools
/
toolkit
/
DevToolsUtils
.
js
"
)
;
const
globalMessageManager
=
Cc
[
"
mozilla
.
org
/
globalmessagemanager
;
1
"
]
.
getService
(
Ci
.
nsIMessageListenerManager
)
;
const
parentProcessMessageManager
=
Cc
[
"
mozilla
.
org
/
parentprocessmessagemanager
;
1
"
]
.
getService
(
Ci
.
nsIMessageBroadcaster
)
;
const
JSON_VIEW_PREF
=
"
devtools
.
jsonview
.
enabled
"
;
var
JsonView
=
{
initialize
:
makeInfallible
(
function
(
)
{
if
(
Services
.
prefs
.
getBoolPref
(
JSON_VIEW_PREF
)
)
{
globalMessageManager
.
loadFrameScript
(
"
resource
:
/
/
/
modules
/
devtools
/
jsonview
/
converter
-
child
.
js
"
true
)
;
this
.
onSaveListener
=
this
.
onSave
.
bind
(
this
)
;
parentProcessMessageManager
.
addMessageListener
(
"
devtools
:
jsonview
:
save
"
this
.
onSaveListener
)
;
}
}
)
destroy
:
makeInfallible
(
function
(
)
{
if
(
this
.
onSaveListener
)
{
parentProcessMessageManager
.
removeMessageListener
(
"
devtools
:
jsonview
:
save
"
this
.
onSaveListener
)
;
}
}
)
onSave
:
function
(
message
)
{
let
value
=
message
.
data
;
let
file
=
JsonViewUtils
.
getTargetFile
(
)
;
if
(
file
)
{
JsonViewUtils
.
saveToFile
(
file
value
)
;
}
}
}
;
module
.
exports
.
JsonView
=
JsonView
;
