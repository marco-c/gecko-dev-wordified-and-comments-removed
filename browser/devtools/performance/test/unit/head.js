"
use
strict
"
;
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
var
{
require
}
=
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
devtools
/
Loader
.
jsm
"
{
}
)
;
var
{
Services
}
=
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
{
}
)
;
var
{
console
}
=
require
(
"
resource
:
/
/
gre
/
modules
/
devtools
/
Console
.
jsm
"
)
;
const
RecordingUtils
=
require
(
"
devtools
/
toolkit
/
performance
/
utils
"
)
;
const
PLATFORM_DATA_PREF
=
"
devtools
.
performance
.
ui
.
show
-
platform
-
data
"
;
function
getFrameNodePath
(
root
path
)
{
let
calls
=
root
.
calls
;
let
node
;
for
(
let
key
of
path
.
split
(
"
>
"
)
)
{
node
=
calls
.
find
(
(
node
)
=
>
node
.
key
=
=
key
)
;
if
(
!
node
)
{
break
;
}
calls
=
node
.
calls
;
}
return
node
;
}
function
synthesizeProfileForTest
(
samples
)
{
samples
.
unshift
(
{
time
:
0
frames
:
[
{
location
:
"
(
root
)
"
}
]
}
)
;
let
uniqueStacks
=
new
RecordingUtils
.
UniqueStacks
(
)
;
return
RecordingUtils
.
deflateThread
(
{
samples
:
samples
markers
:
[
]
}
uniqueStacks
)
;
}
