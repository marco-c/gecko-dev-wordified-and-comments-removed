this
.
EXPORTED_SYMBOLS
=
[
"
UserContextUI
"
]
;
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
XPCOMUtils
.
defineLazyGetter
(
this
"
gBrowserBundle
"
function
(
)
{
return
Services
.
strings
.
createBundle
(
"
chrome
:
/
/
browser
/
locale
/
browser
.
properties
"
)
;
}
)
;
this
.
UserContextUI
=
{
getUserContextLabel
(
userContextId
)
{
switch
(
userContextId
)
{
case
0
:
return
"
"
;
case
1
:
return
gBrowserBundle
.
GetStringFromName
(
"
usercontext
.
personal
.
label
"
)
;
case
2
:
return
gBrowserBundle
.
GetStringFromName
(
"
usercontext
.
work
.
label
"
)
;
case
3
:
return
gBrowserBundle
.
GetStringFromName
(
"
usercontext
.
shopping
.
label
"
)
;
case
4
:
return
gBrowserBundle
.
GetStringFromName
(
"
usercontext
.
banking
.
label
"
)
;
default
:
return
"
Context
"
+
userContextId
;
}
}
}
