"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
Windows8WindowFrameColor
"
]
;
var
{
WindowsRegistry
:
Registry
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
WindowsRegistry
.
jsm
"
null
)
;
var
Windows8WindowFrameColor
=
{
_windowFrameColor
:
null
get
(
)
{
if
(
this
.
_windowFrameColor
)
return
this
.
_windowFrameColor
;
const
HKCU
=
Ci
.
nsIWindowsRegKey
.
ROOT_KEY_CURRENT_USER
;
const
dwmKey
=
"
Software
\
\
Microsoft
\
\
Windows
\
\
DWM
"
;
let
customizationColor
=
Registry
.
readRegKey
(
HKCU
dwmKey
"
ColorizationColor
"
)
;
if
(
customizationColor
=
=
undefined
)
{
return
[
158
158
158
]
;
}
let
customizationColorHex
=
customizationColor
.
toString
(
16
)
;
customizationColorHex
=
(
"
00000000
"
+
customizationColorHex
)
.
substr
(
-
8
)
;
let
customizationColorArray
=
customizationColorHex
.
match
(
/
.
.
/
g
)
;
let
[
fgR
fgG
fgB
]
=
customizationColorArray
.
map
(
val
=
>
parseInt
(
val
16
)
)
;
let
colorizationColorBalance
=
Registry
.
readRegKey
(
HKCU
dwmKey
"
ColorizationColorBalance
"
)
;
if
(
colorizationColorBalance
=
=
undefined
)
{
colorizationColorBalance
=
78
;
}
let
frameBaseColor
=
217
;
let
alpha
=
colorizationColorBalance
/
100
;
let
r
=
Math
.
round
(
fgR
*
alpha
+
frameBaseColor
*
(
1
-
alpha
)
)
;
let
g
=
Math
.
round
(
fgG
*
alpha
+
frameBaseColor
*
(
1
-
alpha
)
)
;
let
b
=
Math
.
round
(
fgB
*
alpha
+
frameBaseColor
*
(
1
-
alpha
)
)
;
return
this
.
_windowFrameColor
=
[
r
g
b
]
;
}
}
;
