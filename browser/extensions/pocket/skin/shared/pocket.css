#
pageActionActivatedActionPanel
[
actionID
=
"
pocket
"
]
>
.
panel
-
arrowcontainer
>
.
panel
-
arrowcontent
{
padding
-
top
:
0
;
padding
-
bottom
:
0
;
}
#
pageActionActivatedActionPanel
[
actionID
=
"
pocket
"
]
>
.
panel
-
arrowcontainer
>
.
panel
-
arrowbox
>
.
panel
-
arrow
{
fill
:
#
fbfbfb
;
}
#
pocket
-
button
#
pageAction
-
panel
-
pocket
{
list
-
style
-
image
:
url
(
"
chrome
:
/
/
pocket
-
shared
/
skin
/
pocket
-
outline
.
svg
"
)
;
}
#
appMenu
-
library
-
pocket
-
button
#
pocket
-
button
-
box
[
open
=
"
true
"
]
>
#
pocket
-
button
#
pocket
-
button
-
box
[
pocketed
=
"
true
"
]
>
#
pocket
-
button
{
list
-
style
-
image
:
url
(
"
chrome
:
/
/
pocket
-
shared
/
skin
/
pocket
.
svg
"
)
;
}
#
pocket
-
button
-
box
[
animate
=
"
true
"
]
>
#
pocket
-
button
#
pocket
-
button
[
open
=
"
true
"
]
[
animationsenabled
]
>
.
toolbarbutton
-
icon
{
fill
:
transparent
;
}
#
pocket
-
button
-
box
[
open
=
"
true
"
]
>
#
pocket
-
button
#
pocket
-
button
-
box
[
pocketed
=
"
true
"
]
>
#
pocket
-
button
{
fill
:
#
ef4056
;
fill
-
opacity
:
1
;
}
keyframes
pocket
-
animation
{
from
{
transform
:
translateX
(
0
)
;
}
to
{
transform
:
translateX
(
-
240px
)
;
}
}
keyframes
pocket
-
animation
-
rtl
{
from
{
transform
:
scaleX
(
-
1
)
translateX
(
0
)
;
}
to
{
transform
:
scaleX
(
-
1
)
translateX
(
-
240px
)
;
}
}
#
pocket
-
button
-
box
[
animate
=
"
true
"
]
>
#
pocket
-
animatable
-
box
#
pocket
-
button
>
.
toolbarbutton
-
animatable
-
box
{
position
:
absolute
;
overflow
:
hidden
;
top
:
calc
(
50
%
-
8px
)
;
margin
-
inline
-
start
:
calc
(
(
16px
+
2
*
var
(
-
-
toolbarbutton
-
inner
-
padding
)
-
20px
)
/
2
)
;
width
:
20px
;
height
:
16px
;
}
#
pocket
-
button
-
box
[
animate
=
"
true
"
]
>
#
pocket
-
animatable
-
box
{
margin
-
inline
-
start
:
4px
;
}
:
root
[
uidensity
=
compact
]
#
pocket
-
button
-
box
[
animate
=
"
true
"
]
>
#
pocket
-
animatable
-
box
{
margin
-
inline
-
start
:
2px
;
}
:
root
[
uidensity
=
touch
]
#
pocket
-
button
-
box
[
animate
=
"
true
"
]
>
#
pocket
-
animatable
-
box
{
margin
-
inline
-
start
:
5px
;
}
#
pocket
-
button
-
box
[
animate
=
"
true
"
]
>
#
pocket
-
animatable
-
box
>
#
pocket
-
animatable
-
image
#
pocket
-
button
>
.
toolbarbutton
-
animatable
-
box
>
.
toolbarbutton
-
animatable
-
image
{
height
:
var
(
-
-
toolbarbutton
-
height
)
;
}
#
pocket
-
button
-
box
[
animate
=
"
true
"
]
#
pocket
-
button
[
open
=
"
true
"
]
[
animationsenabled
]
[
cui
-
areatype
=
"
toolbar
"
]
:
not
(
[
overflowedItem
=
"
true
"
]
)
{
position
:
relative
;
}
#
pocket
-
button
-
box
:
not
(
[
animate
=
"
true
"
]
)
:
not
(
:
hover
)
>
#
pocket
-
animatable
-
box
{
display
:
none
;
}
#
pocket
-
button
-
box
:
not
(
[
animate
=
"
true
"
]
)
:
hover
>
#
pocket
-
animatable
-
box
>
#
pocket
-
animatable
-
image
#
pocket
-
button
[
animationsenabled
]
[
cui
-
areatype
=
"
toolbar
"
]
:
not
(
[
overflowedItem
=
"
true
"
]
)
:
not
(
[
open
=
"
true
"
]
)
:
hover
>
.
toolbarbutton
-
animatable
-
box
>
.
toolbarbutton
-
animatable
-
image
{
background
-
image
:
url
(
"
chrome
:
/
/
pocket
-
shared
/
skin
/
pocket
-
animation
.
svg
"
)
url
(
"
chrome
:
/
/
pocket
-
shared
/
skin
/
library
-
pocket
-
animation
.
svg
"
)
;
background
-
size
:
0
0
;
}
#
pocket
-
button
-
box
[
animate
=
"
true
"
]
>
#
pocket
-
animatable
-
box
>
#
pocket
-
animatable
-
image
#
pocket
-
button
[
open
=
"
true
"
]
[
animationsenabled
]
[
cui
-
areatype
=
"
toolbar
"
]
:
not
(
[
overflowedItem
=
"
true
"
]
)
>
.
toolbarbutton
-
animatable
-
box
>
.
toolbarbutton
-
animatable
-
image
{
animation
-
name
:
pocket
-
animation
;
animation
-
timing
-
function
:
steps
(
12
)
;
animation
-
duration
:
200ms
;
background
-
image
:
url
(
"
chrome
:
/
/
pocket
-
shared
/
skin
/
pocket
-
animation
.
svg
"
)
;
fill
:
#
ef4056
;
-
moz
-
context
-
properties
:
fill
;
width
:
260px
;
}
#
pocket
-
button
-
box
[
animate
=
"
true
"
]
:
-
moz
-
locale
-
dir
(
rtl
)
>
#
pocket
-
animatable
-
box
>
#
pocket
-
animatable
-
image
#
pocket
-
button
[
open
=
"
true
"
]
[
animationsenabled
]
[
cui
-
areatype
=
"
toolbar
"
]
:
not
(
[
overflowedItem
=
"
true
"
]
)
:
-
moz
-
locale
-
dir
(
rtl
)
>
.
toolbarbutton
-
animatable
-
box
>
.
toolbarbutton
-
animatable
-
image
{
animation
-
name
:
pocket
-
animation
-
rtl
;
}
keyframes
library
-
pocket
-
animation
{
from
{
transform
:
translateX
(
0
)
;
fill
:
inherit
;
}
25
%
{
fill
:
inherit
;
}
50
%
{
fill
:
#
ef4056
;
}
to
{
transform
:
translateX
(
-
1056px
)
;
fill
:
#
ef4056
;
}
}
keyframes
library
-
pocket
-
animation
-
rtl
{
from
{
transform
:
translateX
(
1056px
)
;
fill
:
inherit
;
}
25
%
{
fill
:
inherit
;
}
50
%
{
fill
:
#
ef4056
;
}
to
{
transform
:
translateX
(
0
)
;
fill
:
#
ef4056
;
}
}
keyframes
library
-
pocket
-
fade
{
from
{
fill
:
#
ef4056
;
}
to
{
fill
:
inherit
;
}
}
.
toolbarbutton
-
animatable
-
box
[
animate
=
"
pocket
"
]
>
.
toolbarbutton
-
animatable
-
image
{
background
-
image
:
url
(
"
chrome
:
/
/
pocket
-
shared
/
skin
/
library
-
pocket
-
animation
.
svg
"
)
;
width
:
1078px
;
animation
-
name
:
library
-
pocket
-
animation
;
animation
-
duration
:
800ms
;
animation
-
timing
-
function
:
steps
(
48
)
;
}
.
toolbarbutton
-
animatable
-
box
[
animate
=
"
pocket
"
]
:
-
moz
-
locale
-
dir
(
rtl
)
>
.
toolbarbutton
-
animatable
-
image
{
animation
-
name
:
library
-
pocket
-
animation
-
rtl
;
}
.
toolbarbutton
-
animatable
-
box
[
animate
=
"
pocket
"
]
[
fade
]
>
.
toolbarbutton
-
animatable
-
image
{
animation
-
name
:
library
-
pocket
-
fade
;
animation
-
duration
:
2s
;
animation
-
timing
-
function
:
ease
-
out
;
}
