"
use
strict
"
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
frameGlobal
=
{
}
;
ChromeUtils
.
defineModuleGetter
(
frameGlobal
"
AboutPages
"
"
resource
:
/
/
shield
-
recipe
-
client
-
content
/
AboutPages
.
jsm
"
)
;
class
ShieldFrameListener
{
handleEvent
(
event
)
{
if
(
!
this
.
ensureTrustedOrigin
(
)
)
{
return
;
}
addMessageListener
(
"
Shield
:
ShuttingDown
"
this
)
;
addMessageListener
(
"
Shield
:
ReceiveStudyList
"
this
)
;
switch
(
event
.
detail
.
action
)
{
case
"
GetRemoteValue
:
StudyList
"
:
sendAsyncMessage
(
"
Shield
:
GetStudyList
"
)
;
break
;
case
"
RemoveStudy
"
:
sendAsyncMessage
(
"
Shield
:
RemoveStudy
"
event
.
detail
.
data
)
;
break
;
case
"
GetRemoteValue
:
ShieldLearnMoreHref
"
:
this
.
triggerPageCallback
(
"
ReceiveRemoteValue
:
ShieldLearnMoreHref
"
frameGlobal
.
AboutPages
.
aboutStudies
.
getShieldLearnMoreHref
(
)
)
;
break
;
case
"
NavigateToDataPreferences
"
:
sendAsyncMessage
(
"
Shield
:
OpenDataPreferences
"
)
;
break
;
}
}
ensureTrustedOrigin
(
)
{
return
content
.
document
.
documentURI
.
startsWith
(
"
about
:
studies
"
)
;
}
receiveMessage
(
message
)
{
switch
(
message
.
name
)
{
case
"
Shield
:
ReceiveStudyList
"
:
this
.
triggerPageCallback
(
"
ReceiveRemoteValue
:
StudyList
"
message
.
data
.
studies
)
;
break
;
case
"
Shield
:
ShuttingDown
"
:
this
.
onShutdown
(
)
;
break
;
}
}
triggerPageCallback
(
type
detail
)
{
if
(
!
this
.
ensureTrustedOrigin
(
)
)
{
return
;
}
const
event
=
new
content
.
document
.
defaultView
.
CustomEvent
(
type
{
bubbles
:
true
detail
:
Cu
.
cloneInto
(
detail
content
.
document
.
defaultView
)
}
)
;
content
.
document
.
dispatchEvent
(
event
)
;
}
onShutdown
(
)
{
removeMessageListener
(
"
Shield
:
SendStudyList
"
this
)
;
removeMessageListener
(
"
Shield
:
ShuttingDown
"
this
)
;
removeEventListener
(
"
Shield
"
this
)
;
}
}
addEventListener
(
"
ShieldPageEvent
"
new
ShieldFrameListener
(
)
false
true
)
;
