"
use
strict
"
;
const
{
utils
:
Cu
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
LogManager
"
"
resource
:
/
/
shield
-
recipe
-
client
/
lib
/
LogManager
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
ShieldRecipeClient
"
"
resource
:
/
/
shield
-
recipe
-
client
/
lib
/
ShieldRecipeClient
.
jsm
"
)
;
this
.
install
=
function
(
)
{
}
;
this
.
startup
=
async
function
(
)
{
await
ShieldRecipeClient
.
startup
(
)
;
}
;
this
.
shutdown
=
function
(
data
reason
)
{
ShieldRecipeClient
.
shutdown
(
reason
)
;
const
log
=
LogManager
.
getLogger
(
"
bootstrap
"
)
;
const
modules
=
[
"
lib
/
ActionSandboxManager
.
jsm
"
"
lib
/
CleanupManager
.
jsm
"
"
lib
/
ClientEnvironment
.
jsm
"
"
lib
/
FilterExpressions
.
jsm
"
"
lib
/
EventEmitter
.
jsm
"
"
lib
/
Heartbeat
.
jsm
"
"
lib
/
LogManager
.
jsm
"
"
lib
/
NormandyApi
.
jsm
"
"
lib
/
NormandyDriver
.
jsm
"
"
lib
/
PreferenceExperiments
.
jsm
"
"
lib
/
RecipeRunner
.
jsm
"
"
lib
/
Sampling
.
jsm
"
"
lib
/
SandboxManager
.
jsm
"
"
lib
/
ShieldRecipeClient
.
jsm
"
"
lib
/
Storage
.
jsm
"
"
lib
/
Utils
.
jsm
"
]
;
for
(
const
module
of
modules
)
{
log
.
debug
(
Unloading
{
module
}
)
;
Cu
.
unload
(
resource
:
/
/
shield
-
recipe
-
client
/
{
module
}
)
;
}
}
;
this
.
uninstall
=
function
(
)
{
}
;
