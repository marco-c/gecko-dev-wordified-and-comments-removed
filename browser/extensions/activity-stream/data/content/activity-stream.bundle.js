(
function
(
modules
)
{
var
installedModules
=
{
}
;
function
__webpack_require__
(
moduleId
)
{
if
(
installedModules
[
moduleId
]
)
{
return
installedModules
[
moduleId
]
.
exports
;
}
var
module
=
installedModules
[
moduleId
]
=
{
i
:
moduleId
l
:
false
exports
:
{
}
}
;
modules
[
moduleId
]
.
call
(
module
.
exports
module
module
.
exports
__webpack_require__
)
;
module
.
l
=
true
;
return
module
.
exports
;
}
__webpack_require__
.
m
=
modules
;
__webpack_require__
.
c
=
installedModules
;
__webpack_require__
.
d
=
function
(
exports
name
getter
)
{
if
(
!
__webpack_require__
.
o
(
exports
name
)
)
{
Object
.
defineProperty
(
exports
name
{
configurable
:
false
enumerable
:
true
get
:
getter
}
)
;
}
}
;
__webpack_require__
.
n
=
function
(
module
)
{
var
getter
=
module
&
&
module
.
__esModule
?
function
getDefault
(
)
{
return
module
[
'
default
'
]
;
}
:
function
getModuleExports
(
)
{
return
module
;
}
;
__webpack_require__
.
d
(
getter
'
a
'
getter
)
;
return
getter
;
}
;
__webpack_require__
.
o
=
function
(
object
property
)
{
return
Object
.
prototype
.
hasOwnProperty
.
call
(
object
property
)
;
}
;
__webpack_require__
.
p
=
"
"
;
return
__webpack_require__
(
__webpack_require__
.
s
=
19
)
;
}
)
(
[
(
function
(
module
exports
)
{
module
.
exports
=
React
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
d
(
__webpack_exports__
"
b
"
function
(
)
{
return
actionCreators
;
}
)
;
__webpack_require__
.
d
(
__webpack_exports__
"
d
"
function
(
)
{
return
actionUtils
;
}
)
;
var
MAIN_MESSAGE_TYPE
=
"
ActivityStream
:
Main
"
;
var
CONTENT_MESSAGE_TYPE
=
"
ActivityStream
:
Content
"
;
var
PRELOAD_MESSAGE_TYPE
=
"
ActivityStream
:
PreloadedBrowser
"
;
var
UI_CODE
=
1
;
var
BACKGROUND_PROCESS
=
2
;
const
globalImportContext
=
typeof
Window
=
=
=
"
undefined
"
?
BACKGROUND_PROCESS
:
UI_CODE
;
const
actionTypes
=
{
}
;
__webpack_exports__
[
"
c
"
]
=
actionTypes
;
for
(
const
type
of
[
"
ARCHIVE_FROM_POCKET
"
"
AS_ROUTER_TELEMETRY_USER_EVENT
"
"
BLOCK_URL
"
"
BOOKMARK_URL
"
"
COPY_DOWNLOAD_LINK
"
"
DELETE_BOOKMARK_BY_ID
"
"
DELETE_FROM_POCKET
"
"
DELETE_HISTORY_URL
"
"
DIALOG_CANCEL
"
"
DIALOG_OPEN
"
"
DISABLE_ONBOARDING
"
"
DOWNLOAD_CHANGED
"
"
INIT
"
"
MIGRATION_CANCEL
"
"
MIGRATION_COMPLETED
"
"
MIGRATION_START
"
"
NEW_TAB_INIT
"
"
NEW_TAB_INITIAL_STATE
"
"
NEW_TAB_LOAD
"
"
NEW_TAB_REHYDRATED
"
"
NEW_TAB_STATE_REQUEST
"
"
NEW_TAB_UNLOAD
"
"
OPEN_DOWNLOAD_FILE
"
"
OPEN_LINK
"
"
OPEN_NEW_WINDOW
"
"
OPEN_PRIVATE_WINDOW
"
"
OPEN_WEBEXT_SETTINGS
"
"
PAGE_PRERENDERED
"
"
PLACES_BOOKMARK_ADDED
"
"
PLACES_BOOKMARK_REMOVED
"
"
PLACES_HISTORY_CLEARED
"
"
PLACES_LINKS_CHANGED
"
"
PLACES_LINK_BLOCKED
"
"
PLACES_LINK_DELETED
"
"
PLACES_SAVED_TO_POCKET
"
"
PREFS_INITIAL_VALUES
"
"
PREF_CHANGED
"
"
PREVIEW_REQUEST
"
"
PREVIEW_REQUEST_CANCEL
"
"
PREVIEW_RESPONSE
"
"
REMOVE_DOWNLOAD_FILE
"
"
RICH_ICON_MISSING
"
"
SAVE_SESSION_PERF_DATA
"
"
SAVE_TO_POCKET
"
"
SCREENSHOT_UPDATED
"
"
SECTION_DEREGISTER
"
"
SECTION_DISABLE
"
"
SECTION_ENABLE
"
"
SECTION_MOVE
"
"
SECTION_OPTIONS_CHANGED
"
"
SECTION_REGISTER
"
"
SECTION_UPDATE
"
"
SECTION_UPDATE_CARD
"
"
SETTINGS_CLOSE
"
"
SETTINGS_OPEN
"
"
SET_PREF
"
"
SHOW_DOWNLOAD_FILE
"
"
SHOW_FIREFOX_ACCOUNTS
"
"
SKIPPED_SIGNIN
"
"
SNIPPETS_BLOCKLIST_CLEARED
"
"
SNIPPETS_BLOCKLIST_UPDATED
"
"
SNIPPETS_DATA
"
"
SNIPPETS_RESET
"
"
SNIPPET_BLOCKED
"
"
SUBMIT_EMAIL
"
"
SYSTEM_TICK
"
"
TELEMETRY_IMPRESSION_STATS
"
"
TELEMETRY_PERFORMANCE_EVENT
"
"
TELEMETRY_UNDESIRED_EVENT
"
"
TELEMETRY_USER_EVENT
"
"
THEME_UPDATE
"
"
TOP_SITES_CANCEL_EDIT
"
"
TOP_SITES_EDIT
"
"
TOP_SITES_INSERT
"
"
TOP_SITES_PIN
"
"
TOP_SITES_PREFS_UPDATED
"
"
TOP_SITES_UNPIN
"
"
TOP_SITES_UPDATED
"
"
TOTAL_BOOKMARKS_REQUEST
"
"
TOTAL_BOOKMARKS_RESPONSE
"
"
UNINIT
"
"
UPDATE_SECTION_PREFS
"
"
WEBEXT_CLICK
"
"
WEBEXT_DISMISS
"
]
)
{
actionTypes
[
type
]
=
type
;
}
const
ASRouterActions
=
{
}
;
__webpack_exports__
[
"
a
"
]
=
ASRouterActions
;
for
(
const
type
of
[
"
OPEN_PRIVATE_BROWSER_WINDOW
"
"
OPEN_URL
"
"
OPEN_ABOUT_PAGE
"
]
)
{
ASRouterActions
[
type
]
=
type
;
}
function
_RouteMessage
(
action
options
)
{
const
meta
=
action
.
meta
?
Object
.
assign
(
{
}
action
.
meta
)
:
{
}
;
if
(
!
options
|
|
!
options
.
from
|
|
!
options
.
to
)
{
throw
new
Error
(
"
Routed
Messages
must
have
options
as
the
second
parameter
and
must
at
least
include
a
.
from
and
.
to
property
.
"
)
;
}
[
"
from
"
"
to
"
"
toTarget
"
"
fromTarget
"
"
skipMain
"
"
skipLocal
"
]
.
forEach
(
o
=
>
{
if
(
typeof
options
[
o
]
!
=
=
"
undefined
"
)
{
meta
[
o
]
=
options
[
o
]
;
}
else
if
(
meta
[
o
]
)
{
delete
meta
[
o
]
;
}
}
)
;
return
Object
.
assign
(
{
}
action
{
meta
}
)
;
}
function
AlsoToMain
(
action
fromTarget
skipLocal
)
{
return
_RouteMessage
(
action
{
from
:
CONTENT_MESSAGE_TYPE
to
:
MAIN_MESSAGE_TYPE
fromTarget
skipLocal
}
)
;
}
function
OnlyToMain
(
action
fromTarget
)
{
return
AlsoToMain
(
action
fromTarget
true
)
;
}
function
BroadcastToContent
(
action
)
{
return
_RouteMessage
(
action
{
from
:
MAIN_MESSAGE_TYPE
to
:
CONTENT_MESSAGE_TYPE
}
)
;
}
function
AlsoToOneContent
(
action
target
skipMain
)
{
if
(
!
target
)
{
throw
new
Error
(
"
You
must
provide
a
target
ID
as
the
second
parameter
of
AlsoToOneContent
.
If
you
want
to
send
to
all
content
processes
use
BroadcastToContent
"
)
;
}
return
_RouteMessage
(
action
{
from
:
MAIN_MESSAGE_TYPE
to
:
CONTENT_MESSAGE_TYPE
toTarget
:
target
skipMain
}
)
;
}
function
OnlyToOneContent
(
action
target
)
{
return
AlsoToOneContent
(
action
target
true
)
;
}
function
AlsoToPreloaded
(
action
)
{
return
_RouteMessage
(
action
{
from
:
MAIN_MESSAGE_TYPE
to
:
PRELOAD_MESSAGE_TYPE
}
)
;
}
function
UserEvent
(
data
)
{
return
AlsoToMain
(
{
type
:
actionTypes
.
TELEMETRY_USER_EVENT
data
}
)
;
}
function
ASRouterUserEvent
(
data
)
{
return
AlsoToMain
(
{
type
:
actionTypes
.
AS_ROUTER_TELEMETRY_USER_EVENT
data
}
)
;
}
function
UndesiredEvent
(
data
importContext
=
globalImportContext
)
{
const
action
=
{
type
:
actionTypes
.
TELEMETRY_UNDESIRED_EVENT
data
}
;
return
importContext
=
=
=
UI_CODE
?
AlsoToMain
(
action
)
:
action
;
}
function
PerfEvent
(
data
importContext
=
globalImportContext
)
{
const
action
=
{
type
:
actionTypes
.
TELEMETRY_PERFORMANCE_EVENT
data
}
;
return
importContext
=
=
=
UI_CODE
?
AlsoToMain
(
action
)
:
action
;
}
function
ImpressionStats
(
data
importContext
=
globalImportContext
)
{
const
action
=
{
type
:
actionTypes
.
TELEMETRY_IMPRESSION_STATS
data
}
;
return
importContext
=
=
=
UI_CODE
?
AlsoToMain
(
action
)
:
action
;
}
function
SetPref
(
name
value
importContext
=
globalImportContext
)
{
const
action
=
{
type
:
actionTypes
.
SET_PREF
data
:
{
name
value
}
}
;
return
importContext
=
=
=
UI_CODE
?
AlsoToMain
(
action
)
:
action
;
}
function
WebExtEvent
(
type
data
importContext
=
globalImportContext
)
{
if
(
!
data
|
|
!
data
.
source
)
{
throw
new
Error
(
"
WebExtEvent
actions
should
include
a
property
\
"
source
\
"
the
id
of
the
webextension
that
should
receive
the
event
.
"
)
;
}
const
action
=
{
type
data
}
;
return
importContext
=
=
=
UI_CODE
?
AlsoToMain
(
action
)
:
action
;
}
var
actionCreators
=
{
BroadcastToContent
UserEvent
ASRouterUserEvent
UndesiredEvent
PerfEvent
ImpressionStats
AlsoToOneContent
OnlyToOneContent
AlsoToMain
OnlyToMain
AlsoToPreloaded
SetPref
WebExtEvent
}
;
var
actionUtils
=
{
isSendToMain
(
action
)
{
if
(
!
action
.
meta
)
{
return
false
;
}
return
action
.
meta
.
to
=
=
=
MAIN_MESSAGE_TYPE
&
&
action
.
meta
.
from
=
=
=
CONTENT_MESSAGE_TYPE
;
}
isBroadcastToContent
(
action
)
{
if
(
!
action
.
meta
)
{
return
false
;
}
if
(
action
.
meta
.
to
=
=
=
CONTENT_MESSAGE_TYPE
&
&
!
action
.
meta
.
toTarget
)
{
return
true
;
}
return
false
;
}
isSendToOneContent
(
action
)
{
if
(
!
action
.
meta
)
{
return
false
;
}
if
(
action
.
meta
.
to
=
=
=
CONTENT_MESSAGE_TYPE
&
&
action
.
meta
.
toTarget
)
{
return
true
;
}
return
false
;
}
isSendToPreloaded
(
action
)
{
if
(
!
action
.
meta
)
{
return
false
;
}
return
action
.
meta
.
to
=
=
=
PRELOAD_MESSAGE_TYPE
&
&
action
.
meta
.
from
=
=
=
MAIN_MESSAGE_TYPE
;
}
isFromMain
(
action
)
{
if
(
!
action
.
meta
)
{
return
false
;
}
return
action
.
meta
.
from
=
=
=
MAIN_MESSAGE_TYPE
&
&
action
.
meta
.
to
=
=
=
CONTENT_MESSAGE_TYPE
;
}
getPortIdOfSender
(
action
)
{
return
action
.
meta
&
&
action
.
meta
.
fromTarget
|
|
null
;
}
_RouteMessage
}
;
}
)
(
function
(
module
exports
)
{
module
.
exports
=
ReactIntl
;
}
)
(
function
(
module
exports
)
{
var
g
;
g
=
(
function
(
)
{
return
this
;
}
)
(
)
;
try
{
g
=
g
|
|
Function
(
"
return
this
"
)
(
)
|
|
(
1
eval
)
(
"
this
"
)
;
}
catch
(
e
)
{
if
(
typeof
window
=
=
=
"
object
"
)
g
=
window
;
}
module
.
exports
=
g
;
}
)
(
function
(
module
exports
)
{
module
.
exports
=
ReactRedux
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
const
TOP_SITES_SOURCE
=
"
TOP_SITES
"
;
__webpack_exports__
[
"
d
"
]
=
TOP_SITES_SOURCE
;
const
TOP_SITES_CONTEXT_MENU_OPTIONS
=
[
"
CheckPinTopSite
"
"
EditTopSite
"
"
Separator
"
"
OpenInNewWindow
"
"
OpenInPrivateWindow
"
"
Separator
"
"
BlockUrl
"
"
DeleteUrl
"
]
;
__webpack_exports__
[
"
c
"
]
=
TOP_SITES_CONTEXT_MENU_OPTIONS
;
const
MIN_RICH_FAVICON_SIZE
=
96
;
__webpack_exports__
[
"
b
"
]
=
MIN_RICH_FAVICON_SIZE
;
const
MIN_CORNER_FAVICON_SIZE
=
16
;
__webpack_exports__
[
"
a
"
]
=
MIN_CORNER_FAVICON_SIZE
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
Actions
=
__webpack_require__
(
1
)
;
class
Dedupe
{
constructor
(
createKey
)
{
this
.
createKey
=
createKey
|
|
this
.
defaultCreateKey
;
}
defaultCreateKey
(
item
)
{
return
item
;
}
group
(
.
.
.
groups
)
{
const
globalKeys
=
new
Set
(
)
;
const
result
=
[
]
;
for
(
const
values
of
groups
)
{
const
valueMap
=
new
Map
(
)
;
for
(
const
value
of
values
)
{
const
key
=
this
.
createKey
(
value
)
;
if
(
!
globalKeys
.
has
(
key
)
&
&
!
valueMap
.
has
(
key
)
)
{
valueMap
.
set
(
key
value
)
;
}
}
result
.
push
(
valueMap
)
;
valueMap
.
forEach
(
(
value
key
)
=
>
globalKeys
.
add
(
key
)
)
;
}
return
result
.
map
(
m
=
>
Array
.
from
(
m
.
values
(
)
)
)
;
}
}
__webpack_require__
.
d
(
__webpack_exports__
"
b
"
function
(
)
{
return
reducers
;
}
)
;
const
TOP_SITES_DEFAULT_ROWS
=
1
;
const
TOP_SITES_MAX_SITES_PER_ROW
=
8
;
__webpack_exports__
[
"
a
"
]
=
TOP_SITES_MAX_SITES_PER_ROW
;
const
dedupe
=
new
Dedupe
(
site
=
>
site
&
&
site
.
url
)
;
const
INITIAL_STATE
=
{
App
:
{
initialized
:
false
version
:
null
}
Snippets
:
{
initialized
:
false
}
TopSites
:
{
initialized
:
false
rows
:
[
]
editForm
:
null
}
Prefs
:
{
initialized
:
false
values
:
{
}
}
Theme
:
{
className
:
"
"
}
Dialog
:
{
visible
:
false
data
:
{
}
}
Sections
:
[
]
}
;
function
App
(
prevState
=
INITIAL_STATE
.
App
action
)
{
switch
(
action
.
type
)
{
case
Actions
[
"
c
"
]
.
INIT
:
return
Object
.
assign
(
{
}
prevState
action
.
data
|
|
{
}
{
initialized
:
true
}
)
;
default
:
return
prevState
;
}
}
function
insertPinned
(
links
pinned
)
{
const
pinnedUrls
=
pinned
.
map
(
link
=
>
link
&
&
link
.
url
)
;
let
newLinks
=
links
.
filter
(
link
=
>
link
?
!
pinnedUrls
.
includes
(
link
.
url
)
:
false
)
;
newLinks
=
newLinks
.
map
(
link
=
>
{
if
(
link
&
&
link
.
isPinned
)
{
delete
link
.
isPinned
;
delete
link
.
pinIndex
;
}
return
link
;
}
)
;
pinned
.
forEach
(
(
val
index
)
=
>
{
if
(
!
val
)
{
return
;
}
let
link
=
Object
.
assign
(
{
}
val
{
isPinned
:
true
pinIndex
:
index
}
)
;
if
(
index
>
newLinks
.
length
)
{
newLinks
[
index
]
=
link
;
}
else
{
newLinks
.
splice
(
index
0
link
)
;
}
}
)
;
return
newLinks
;
}
function
TopSites
(
prevState
=
INITIAL_STATE
.
TopSites
action
)
{
let
hasMatch
;
let
newRows
;
switch
(
action
.
type
)
{
case
Actions
[
"
c
"
]
.
TOP_SITES_UPDATED
:
if
(
!
action
.
data
|
|
!
action
.
data
.
links
)
{
return
prevState
;
}
return
Object
.
assign
(
{
}
prevState
{
initialized
:
true
rows
:
action
.
data
.
links
}
action
.
data
.
pref
?
{
pref
:
action
.
data
.
pref
}
:
{
}
)
;
case
Actions
[
"
c
"
]
.
TOP_SITES_PREFS_UPDATED
:
return
Object
.
assign
(
{
}
prevState
{
pref
:
action
.
data
.
pref
}
)
;
case
Actions
[
"
c
"
]
.
TOP_SITES_EDIT
:
return
Object
.
assign
(
{
}
prevState
{
editForm
:
{
index
:
action
.
data
.
index
previewResponse
:
null
}
}
)
;
case
Actions
[
"
c
"
]
.
TOP_SITES_CANCEL_EDIT
:
return
Object
.
assign
(
{
}
prevState
{
editForm
:
null
}
)
;
case
Actions
[
"
c
"
]
.
PREVIEW_RESPONSE
:
if
(
!
prevState
.
editForm
|
|
action
.
data
.
url
!
=
=
prevState
.
editForm
.
previewUrl
)
{
return
prevState
;
}
return
Object
.
assign
(
{
}
prevState
{
editForm
:
{
index
:
prevState
.
editForm
.
index
previewResponse
:
action
.
data
.
preview
previewUrl
:
action
.
data
.
url
}
}
)
;
case
Actions
[
"
c
"
]
.
PREVIEW_REQUEST
:
if
(
!
prevState
.
editForm
)
{
return
prevState
;
}
return
Object
.
assign
(
{
}
prevState
{
editForm
:
{
index
:
prevState
.
editForm
.
index
previewResponse
:
null
previewUrl
:
action
.
data
.
url
}
}
)
;
case
Actions
[
"
c
"
]
.
PREVIEW_REQUEST_CANCEL
:
if
(
!
prevState
.
editForm
)
{
return
prevState
;
}
return
Object
.
assign
(
{
}
prevState
{
editForm
:
{
index
:
prevState
.
editForm
.
index
previewResponse
:
null
}
}
)
;
case
Actions
[
"
c
"
]
.
SCREENSHOT_UPDATED
:
newRows
=
prevState
.
rows
.
map
(
row
=
>
{
if
(
row
&
&
row
.
url
=
=
=
action
.
data
.
url
)
{
hasMatch
=
true
;
return
Object
.
assign
(
{
}
row
{
screenshot
:
action
.
data
.
screenshot
}
)
;
}
return
row
;
}
)
;
return
hasMatch
?
Object
.
assign
(
{
}
prevState
{
rows
:
newRows
}
)
:
prevState
;
case
Actions
[
"
c
"
]
.
PLACES_BOOKMARK_ADDED
:
if
(
!
action
.
data
)
{
return
prevState
;
}
newRows
=
prevState
.
rows
.
map
(
site
=
>
{
if
(
site
&
&
site
.
url
=
=
=
action
.
data
.
url
)
{
const
{
bookmarkGuid
bookmarkTitle
dateAdded
}
=
action
.
data
;
return
Object
.
assign
(
{
}
site
{
bookmarkGuid
bookmarkTitle
bookmarkDateCreated
:
dateAdded
}
)
;
}
return
site
;
}
)
;
return
Object
.
assign
(
{
}
prevState
{
rows
:
newRows
}
)
;
case
Actions
[
"
c
"
]
.
PLACES_BOOKMARK_REMOVED
:
if
(
!
action
.
data
)
{
return
prevState
;
}
newRows
=
prevState
.
rows
.
map
(
site
=
>
{
if
(
site
&
&
site
.
url
=
=
=
action
.
data
.
url
)
{
const
newSite
=
Object
.
assign
(
{
}
site
)
;
delete
newSite
.
bookmarkGuid
;
delete
newSite
.
bookmarkTitle
;
delete
newSite
.
bookmarkDateCreated
;
return
newSite
;
}
return
site
;
}
)
;
return
Object
.
assign
(
{
}
prevState
{
rows
:
newRows
}
)
;
case
Actions
[
"
c
"
]
.
PLACES_LINK_DELETED
:
if
(
!
action
.
data
)
{
return
prevState
;
}
newRows
=
prevState
.
rows
.
filter
(
site
=
>
action
.
data
.
url
!
=
=
site
.
url
)
;
return
Object
.
assign
(
{
}
prevState
{
rows
:
newRows
}
)
;
default
:
return
prevState
;
}
}
function
Dialog
(
prevState
=
INITIAL_STATE
.
Dialog
action
)
{
switch
(
action
.
type
)
{
case
Actions
[
"
c
"
]
.
DIALOG_OPEN
:
return
Object
.
assign
(
{
}
prevState
{
visible
:
true
data
:
action
.
data
}
)
;
case
Actions
[
"
c
"
]
.
DIALOG_CANCEL
:
return
Object
.
assign
(
{
}
prevState
{
visible
:
false
}
)
;
case
Actions
[
"
c
"
]
.
DELETE_HISTORY_URL
:
return
Object
.
assign
(
{
}
INITIAL_STATE
.
Dialog
)
;
default
:
return
prevState
;
}
}
function
Prefs
(
prevState
=
INITIAL_STATE
.
Prefs
action
)
{
let
newValues
;
switch
(
action
.
type
)
{
case
Actions
[
"
c
"
]
.
PREFS_INITIAL_VALUES
:
return
Object
.
assign
(
{
}
prevState
{
initialized
:
true
values
:
action
.
data
}
)
;
case
Actions
[
"
c
"
]
.
PREF_CHANGED
:
newValues
=
Object
.
assign
(
{
}
prevState
.
values
)
;
newValues
[
action
.
data
.
name
]
=
action
.
data
.
value
;
return
Object
.
assign
(
{
}
prevState
{
values
:
newValues
}
)
;
default
:
return
prevState
;
}
}
function
Sections
(
prevState
=
INITIAL_STATE
.
Sections
action
)
{
let
hasMatch
;
let
newState
;
switch
(
action
.
type
)
{
case
Actions
[
"
c
"
]
.
SECTION_DEREGISTER
:
return
prevState
.
filter
(
section
=
>
section
.
id
!
=
=
action
.
data
)
;
case
Actions
[
"
c
"
]
.
SECTION_REGISTER
:
newState
=
prevState
.
map
(
section
=
>
{
if
(
section
&
&
section
.
id
=
=
=
action
.
data
.
id
)
{
hasMatch
=
true
;
return
Object
.
assign
(
{
}
section
action
.
data
)
;
}
return
section
;
}
)
;
if
(
!
hasMatch
)
{
const
initialized
=
!
!
(
action
.
data
.
rows
&
&
action
.
data
.
rows
.
length
>
0
)
;
const
section
=
Object
.
assign
(
{
title
:
"
"
rows
:
[
]
enabled
:
false
}
action
.
data
{
initialized
}
)
;
newState
.
push
(
section
)
;
}
return
newState
;
case
Actions
[
"
c
"
]
.
SECTION_UPDATE
:
newState
=
prevState
.
map
(
section
=
>
{
if
(
section
&
&
section
.
id
=
=
=
action
.
data
.
id
)
{
const
initialized
=
action
.
data
.
rows
?
{
initialized
:
true
}
:
{
}
;
if
(
action
.
data
.
rows
&
&
action
.
data
.
rows
.
length
>
0
&
&
section
.
rows
.
find
(
card
=
>
card
.
pinned
)
)
{
const
rows
=
Array
.
from
(
action
.
data
.
rows
)
;
section
.
rows
.
forEach
(
(
card
index
)
=
>
{
if
(
card
.
pinned
)
{
rows
.
splice
(
index
0
card
)
;
}
}
)
;
return
Object
.
assign
(
{
}
section
initialized
Object
.
assign
(
{
}
action
.
data
{
rows
}
)
)
;
}
return
Object
.
assign
(
{
}
section
initialized
action
.
data
)
;
}
return
section
;
}
)
;
if
(
!
action
.
data
.
dedupeConfigurations
)
{
return
newState
;
}
action
.
data
.
dedupeConfigurations
.
forEach
(
dedupeConf
=
>
{
newState
=
newState
.
map
(
section
=
>
{
if
(
section
.
id
=
=
=
dedupeConf
.
id
)
{
const
dedupedRows
=
dedupeConf
.
dedupeFrom
.
reduce
(
(
rows
dedupeSectionId
)
=
>
{
const
dedupeSection
=
newState
.
find
(
s
=
>
s
.
id
=
=
=
dedupeSectionId
)
;
const
[
newRows
]
=
dedupe
.
group
(
dedupeSection
.
rows
rows
)
;
return
newRows
;
}
section
.
rows
)
;
return
Object
.
assign
(
{
}
section
{
rows
:
dedupedRows
}
)
;
}
return
section
;
}
)
;
}
)
;
return
newState
;
case
Actions
[
"
c
"
]
.
SECTION_UPDATE_CARD
:
return
prevState
.
map
(
section
=
>
{
if
(
section
&
&
section
.
id
=
=
=
action
.
data
.
id
&
&
section
.
rows
)
{
const
newRows
=
section
.
rows
.
map
(
card
=
>
{
if
(
card
.
url
=
=
=
action
.
data
.
url
)
{
return
Object
.
assign
(
{
}
card
action
.
data
.
options
)
;
}
return
card
;
}
)
;
return
Object
.
assign
(
{
}
section
{
rows
:
newRows
}
)
;
}
return
section
;
}
)
;
case
Actions
[
"
c
"
]
.
PLACES_BOOKMARK_ADDED
:
if
(
!
action
.
data
)
{
return
prevState
;
}
return
prevState
.
map
(
section
=
>
Object
.
assign
(
{
}
section
{
rows
:
section
.
rows
.
map
(
item
=
>
{
if
(
item
.
url
=
=
=
action
.
data
.
url
)
{
const
{
bookmarkGuid
bookmarkTitle
dateAdded
}
=
action
.
data
;
return
Object
.
assign
(
{
}
item
{
bookmarkGuid
bookmarkTitle
bookmarkDateCreated
:
dateAdded
type
:
"
bookmark
"
}
)
;
}
return
item
;
}
)
}
)
)
;
case
Actions
[
"
c
"
]
.
PLACES_SAVED_TO_POCKET
:
if
(
!
action
.
data
)
{
return
prevState
;
}
return
prevState
.
map
(
section
=
>
Object
.
assign
(
{
}
section
{
rows
:
section
.
rows
.
map
(
item
=
>
{
if
(
item
.
url
=
=
=
action
.
data
.
url
)
{
return
Object
.
assign
(
{
}
item
{
open_url
:
action
.
data
.
open_url
pocket_id
:
action
.
data
.
pocket_id
title
:
action
.
data
.
title
type
:
"
pocket
"
}
)
;
}
return
item
;
}
)
}
)
)
;
case
Actions
[
"
c
"
]
.
PLACES_BOOKMARK_REMOVED
:
if
(
!
action
.
data
)
{
return
prevState
;
}
return
prevState
.
map
(
section
=
>
Object
.
assign
(
{
}
section
{
rows
:
section
.
rows
.
map
(
item
=
>
{
if
(
item
.
url
=
=
=
action
.
data
.
url
)
{
const
newSite
=
Object
.
assign
(
{
}
item
)
;
delete
newSite
.
bookmarkGuid
;
delete
newSite
.
bookmarkTitle
;
delete
newSite
.
bookmarkDateCreated
;
if
(
!
newSite
.
type
|
|
newSite
.
type
=
=
=
"
bookmark
"
)
{
newSite
.
type
=
"
history
"
;
}
return
newSite
;
}
return
item
;
}
)
}
)
)
;
case
Actions
[
"
c
"
]
.
PLACES_LINK_DELETED
:
case
Actions
[
"
c
"
]
.
PLACES_LINK_BLOCKED
:
if
(
!
action
.
data
)
{
return
prevState
;
}
return
prevState
.
map
(
section
=
>
Object
.
assign
(
{
}
section
{
rows
:
section
.
rows
.
filter
(
site
=
>
site
.
url
!
=
=
action
.
data
.
url
)
}
)
)
;
case
Actions
[
"
c
"
]
.
DELETE_FROM_POCKET
:
case
Actions
[
"
c
"
]
.
ARCHIVE_FROM_POCKET
:
return
prevState
.
map
(
section
=
>
Object
.
assign
(
{
}
section
{
rows
:
section
.
rows
.
filter
(
site
=
>
site
.
pocket_id
!
=
=
action
.
data
.
pocket_id
)
}
)
)
;
default
:
return
prevState
;
}
}
function
Snippets
(
prevState
=
INITIAL_STATE
.
Snippets
action
)
{
switch
(
action
.
type
)
{
case
Actions
[
"
c
"
]
.
SNIPPETS_DATA
:
return
Object
.
assign
(
{
}
prevState
{
initialized
:
true
}
action
.
data
)
;
case
Actions
[
"
c
"
]
.
SNIPPET_BLOCKED
:
return
Object
.
assign
(
{
}
prevState
{
blockList
:
prevState
.
blockList
.
concat
(
action
.
data
)
}
)
;
case
Actions
[
"
c
"
]
.
SNIPPETS_BLOCKLIST_CLEARED
:
return
Object
.
assign
(
{
}
prevState
{
blockList
:
[
]
}
)
;
case
Actions
[
"
c
"
]
.
SNIPPETS_RESET
:
return
INITIAL_STATE
.
Snippets
;
default
:
return
prevState
;
}
}
function
Theme
(
prevState
=
INITIAL_STATE
.
Theme
action
)
{
switch
(
action
.
type
)
{
case
Actions
[
"
c
"
]
.
THEME_UPDATE
:
return
Object
.
assign
(
{
}
prevState
action
.
data
)
;
default
:
return
prevState
;
}
}
var
reducers
=
{
TopSites
App
Snippets
Prefs
Dialog
Sections
Theme
}
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
__webpack_exports__
[
"
b
"
]
=
initASRouter
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_content_src_lib_init_store__
=
__webpack_require__
(
8
)
;
var
__WEBPACK_IMPORTED_MODULE_2__components_ImpressionsWrapper_ImpressionsWrapper__
=
__webpack_require__
(
22
)
;
var
__WEBPACK_IMPORTED_MODULE_3__templates_OnboardingMessage_OnboardingMessage__
=
__webpack_require__
(
23
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_4_react__
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react_dom__
=
__webpack_require__
(
9
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react_dom___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_5_react_dom__
)
;
var
__WEBPACK_IMPORTED_MODULE_6__templates_SimpleSnippet_SimpleSnippet__
=
__webpack_require__
(
24
)
;
var
_extends
=
Object
.
assign
|
|
function
(
target
)
{
for
(
var
i
=
1
;
i
<
arguments
.
length
;
i
+
+
)
{
var
source
=
arguments
[
i
]
;
for
(
var
key
in
source
)
{
if
(
Object
.
prototype
.
hasOwnProperty
.
call
(
source
key
)
)
{
target
[
key
]
=
source
[
key
]
;
}
}
}
return
target
;
}
;
const
INCOMING_MESSAGE_NAME
=
"
ASRouter
:
parent
-
to
-
child
"
;
const
OUTGOING_MESSAGE_NAME
=
"
ASRouter
:
child
-
to
-
parent
"
;
const
ASRouterUtils
=
{
addListener
(
listener
)
{
global
.
addMessageListener
(
INCOMING_MESSAGE_NAME
listener
)
;
}
removeListener
(
listener
)
{
global
.
removeMessageListener
(
INCOMING_MESSAGE_NAME
listener
)
;
}
sendMessage
(
action
)
{
global
.
sendAsyncMessage
(
OUTGOING_MESSAGE_NAME
action
)
;
}
blockById
(
id
)
{
ASRouterUtils
.
sendMessage
(
{
type
:
"
BLOCK_MESSAGE_BY_ID
"
data
:
{
id
}
}
)
;
}
blockBundle
(
bundle
)
{
ASRouterUtils
.
sendMessage
(
{
type
:
"
BLOCK_BUNDLE
"
data
:
{
bundle
}
}
)
;
}
executeAction
(
{
button_action
button_action_params
}
)
{
if
(
button_action
in
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
a
"
]
)
{
ASRouterUtils
.
sendMessage
(
{
type
:
button_action
data
:
{
button_action_params
}
}
)
;
}
}
unblockById
(
id
)
{
ASRouterUtils
.
sendMessage
(
{
type
:
"
UNBLOCK_MESSAGE_BY_ID
"
data
:
{
id
}
}
)
;
}
unblockBundle
(
bundle
)
{
ASRouterUtils
.
sendMessage
(
{
type
:
"
UNBLOCK_BUNDLE
"
data
:
{
bundle
}
}
)
;
}
getNextMessage
(
)
{
ASRouterUtils
.
sendMessage
(
{
type
:
"
GET_NEXT_MESSAGE
"
}
)
;
}
overrideMessage
(
id
)
{
ASRouterUtils
.
sendMessage
(
{
type
:
"
OVERRIDE_MESSAGE
"
data
:
{
id
}
}
)
;
}
sendTelemetry
(
ping
)
{
const
payload
=
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
ASRouterUserEvent
(
ping
)
;
global
.
sendAsyncMessage
(
__WEBPACK_IMPORTED_MODULE_1_content_src_lib_init_store__
[
"
a
"
]
payload
)
;
}
}
;
__webpack_exports__
[
"
a
"
]
=
ASRouterUtils
;
function
shouldSendImpressionOnUpdate
(
nextProps
prevProps
)
{
return
nextProps
.
message
.
id
&
&
(
!
prevProps
.
message
|
|
prevProps
.
message
.
id
!
=
=
nextProps
.
message
.
id
)
;
}
class
ASRouterUISurface
extends
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onMessageFromParent
=
this
.
onMessageFromParent
.
bind
(
this
)
;
this
.
sendImpression
=
this
.
sendImpression
.
bind
(
this
)
;
this
.
sendUserActionTelemetry
=
this
.
sendUserActionTelemetry
.
bind
(
this
)
;
this
.
state
=
{
message
:
{
}
bundle
:
{
}
}
;
}
sendUserActionTelemetry
(
extraProps
=
{
}
)
{
const
{
message
bundle
}
=
this
.
state
;
if
(
!
message
&
&
!
extraProps
.
message_id
)
{
throw
new
Error
(
You
must
provide
a
message_id
for
bundled
messages
)
;
}
const
eventType
=
{
message
.
provider
|
|
bundle
.
provider
}
_user_event
;
ASRouterUtils
.
sendTelemetry
(
Object
.
assign
(
{
message_id
:
message
.
id
|
|
extraProps
.
message_id
source
:
this
.
props
.
id
action
:
eventType
}
extraProps
)
)
;
}
sendImpression
(
)
{
this
.
sendUserActionTelemetry
(
{
event
:
"
IMPRESSION
"
}
)
;
}
onBlockById
(
id
)
{
return
(
)
=
>
ASRouterUtils
.
blockById
(
id
)
;
}
clearBundle
(
bundle
)
{
return
(
)
=
>
ASRouterUtils
.
blockBundle
(
bundle
)
;
}
onMessageFromParent
(
{
data
:
action
}
)
{
switch
(
action
.
type
)
{
case
"
SET_MESSAGE
"
:
this
.
setState
(
{
message
:
action
.
data
}
)
;
break
;
case
"
SET_BUNDLED_MESSAGES
"
:
this
.
setState
(
{
bundle
:
action
.
data
}
)
;
break
;
case
"
CLEAR_MESSAGE
"
:
this
.
setState
(
{
message
:
{
}
bundle
:
{
}
}
)
;
break
;
}
}
componentWillMount
(
)
{
ASRouterUtils
.
addListener
(
this
.
onMessageFromParent
)
;
ASRouterUtils
.
sendMessage
(
{
type
:
"
CONNECT_UI_REQUEST
"
}
)
;
}
componentWillUnmount
(
)
{
ASRouterUtils
.
removeListener
(
this
.
onMessageFromParent
)
;
}
renderSnippets
(
)
{
return
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2__components_ImpressionsWrapper_ImpressionsWrapper__
[
"
a
"
]
{
message
:
this
.
state
.
message
sendImpression
:
this
.
sendImpression
shouldSendImpressionOnUpdate
:
shouldSendImpressionOnUpdate
document
:
this
.
props
.
document
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_6__templates_SimpleSnippet_SimpleSnippet__
[
"
a
"
]
_extends
(
{
}
this
.
state
.
message
{
UISurface
:
"
NEWTAB_FOOTER_BAR
"
getNextMessage
:
ASRouterUtils
.
getNextMessage
onBlock
:
this
.
onBlockById
(
this
.
state
.
message
.
id
)
sendUserActionTelemetry
:
this
.
sendUserActionTelemetry
}
)
)
)
;
}
renderOnboarding
(
)
{
return
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_3__templates_OnboardingMessage_OnboardingMessage__
[
"
a
"
]
_extends
(
{
}
this
.
state
.
bundle
{
UISurface
:
"
NEWTAB_OVERLAY
"
onAction
:
ASRouterUtils
.
executeAction
onDoneButton
:
this
.
clearBundle
(
this
.
state
.
bundle
.
bundle
)
getNextMessage
:
ASRouterUtils
.
getNextMessage
sendUserActionTelemetry
:
this
.
sendUserActionTelemetry
}
)
)
;
}
render
(
)
{
const
{
message
bundle
}
=
this
.
state
;
if
(
!
message
.
id
&
&
!
bundle
.
template
)
{
return
null
;
}
if
(
bundle
.
template
=
=
=
"
onboarding
"
)
{
return
this
.
renderOnboarding
(
)
;
}
return
this
.
renderSnippets
(
)
;
}
}
ASRouterUISurface
.
defaultProps
=
{
document
:
global
.
document
}
;
function
initASRouter
(
)
{
__WEBPACK_IMPORTED_MODULE_5_react_dom___default
.
a
.
render
(
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
ASRouterUISurface
null
)
document
.
getElementById
(
"
snippets
-
container
"
)
)
;
}
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
__webpack_exports__
[
"
b
"
]
=
initStore
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_redux__
=
__webpack_require__
(
21
)
;
var
__WEBPACK_IMPORTED_MODULE_1_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_redux__
)
;
const
MERGE_STORE_ACTION
=
"
NEW_TAB_INITIAL_STATE
"
;
const
OUTGOING_MESSAGE_NAME
=
"
ActivityStream
:
ContentToMain
"
;
__webpack_exports__
[
"
a
"
]
=
OUTGOING_MESSAGE_NAME
;
const
INCOMING_MESSAGE_NAME
=
"
ActivityStream
:
MainToContent
"
;
const
EARLY_QUEUED_ACTIONS
=
[
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SAVE_SESSION_PERF_DATA
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
PAGE_PRERENDERED
]
;
function
mergeStateReducer
(
mainReducer
)
{
return
(
prevState
action
)
=
>
{
if
(
action
.
type
=
=
=
MERGE_STORE_ACTION
)
{
return
Object
.
assign
(
{
}
prevState
action
.
data
)
;
}
return
mainReducer
(
prevState
action
)
;
}
;
}
const
messageMiddleware
=
store
=
>
next
=
>
action
=
>
{
const
skipLocal
=
action
.
meta
&
&
action
.
meta
.
skipLocal
;
if
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
d
"
]
.
isSendToMain
(
action
)
)
{
sendAsyncMessage
(
OUTGOING_MESSAGE_NAME
action
)
;
}
if
(
!
skipLocal
)
{
next
(
action
)
;
}
}
;
const
rehydrationMiddleware
=
store
=
>
next
=
>
action
=
>
{
if
(
store
.
_didRehydrate
)
{
return
next
(
action
)
;
}
const
isMergeStoreAction
=
action
.
type
=
=
=
MERGE_STORE_ACTION
;
const
isRehydrationRequest
=
action
.
type
=
=
=
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
NEW_TAB_STATE_REQUEST
;
if
(
isRehydrationRequest
)
{
store
.
_didRequestInitialState
=
true
;
return
next
(
action
)
;
}
if
(
isMergeStoreAction
)
{
store
.
_didRehydrate
=
true
;
return
next
(
action
)
;
}
if
(
store
.
_didRequestInitialState
&
&
action
.
type
=
=
=
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
INIT
)
{
return
next
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
NEW_TAB_STATE_REQUEST
}
)
)
;
}
if
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
d
"
]
.
isBroadcastToContent
(
action
)
|
|
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
d
"
]
.
isSendToOneContent
(
action
)
|
|
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
d
"
]
.
isSendToPreloaded
(
action
)
)
{
return
null
;
}
return
next
(
action
)
;
}
;
const
queueEarlyMessageMiddleware
=
store
=
>
next
=
>
action
=
>
{
if
(
store
.
_receivedFromMain
)
{
next
(
action
)
;
}
else
if
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
d
"
]
.
isFromMain
(
action
)
)
{
next
(
action
)
;
store
.
_receivedFromMain
=
true
;
if
(
store
.
_earlyActionQueue
)
{
store
.
_earlyActionQueue
.
forEach
(
next
)
;
store
.
_earlyActionQueue
=
[
]
;
}
}
else
if
(
EARLY_QUEUED_ACTIONS
.
includes
(
action
.
type
)
)
{
store
.
_earlyActionQueue
=
store
.
_earlyActionQueue
|
|
[
]
;
store
.
_earlyActionQueue
.
push
(
action
)
;
}
else
{
next
(
action
)
;
}
}
;
function
initStore
(
reducers
initialState
)
{
const
store
=
Object
(
__WEBPACK_IMPORTED_MODULE_1_redux__
[
"
createStore
"
]
)
(
mergeStateReducer
(
Object
(
__WEBPACK_IMPORTED_MODULE_1_redux__
[
"
combineReducers
"
]
)
(
reducers
)
)
initialState
global
.
addMessageListener
&
&
Object
(
__WEBPACK_IMPORTED_MODULE_1_redux__
[
"
applyMiddleware
"
]
)
(
rehydrationMiddleware
queueEarlyMessageMiddleware
messageMiddleware
)
)
;
store
.
_didRehydrate
=
false
;
store
.
_didRequestInitialState
=
false
;
if
(
global
.
addMessageListener
)
{
global
.
addMessageListener
(
INCOMING_MESSAGE_NAME
msg
=
>
{
try
{
store
.
dispatch
(
msg
.
data
)
;
}
catch
(
ex
)
{
console
.
error
(
"
Content
msg
:
"
msg
"
Dispatch
error
:
"
ex
)
;
dump
(
Content
msg
:
{
JSON
.
stringify
(
msg
)
}
\
nDispatch
error
:
{
ex
}
\
n
{
ex
.
stack
}
)
;
}
}
)
;
}
return
store
;
}
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
exports
)
{
module
.
exports
=
ReactDOM
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_0_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_react__
)
;
class
ErrorBoundaryFallback
extends
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
windowObj
=
this
.
props
.
windowObj
|
|
window
;
this
.
onClick
=
this
.
onClick
.
bind
(
this
)
;
}
onClick
(
)
{
this
.
windowObj
.
location
.
reload
(
true
)
;
}
render
(
)
{
const
defaultClass
=
"
as
-
error
-
fallback
"
;
let
className
;
if
(
"
className
"
in
this
.
props
)
{
className
=
{
this
.
props
.
className
}
{
defaultClass
}
;
}
else
{
className
=
defaultClass
;
}
return
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
div
"
{
className
:
className
}
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
div
"
null
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
defaultMessage
:
"
Oops
something
went
wrong
loading
this
content
.
"
id
:
"
error_fallback_default_info
"
}
)
)
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
span
"
null
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
a
"
{
href
:
"
#
"
className
:
"
reload
-
button
"
onClick
:
this
.
onClick
}
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
defaultMessage
:
"
Refresh
page
to
try
again
.
"
id
:
"
error_fallback_default_refresh_suggestion
"
}
)
)
)
)
;
}
}
ErrorBoundaryFallback
.
defaultProps
=
{
className
:
"
as
-
error
-
fallback
"
}
;
class
ErrorBoundary
extends
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
state
=
{
hasError
:
false
}
;
}
componentDidCatch
(
error
info
)
{
this
.
setState
(
{
hasError
:
true
}
)
;
}
render
(
)
{
if
(
!
this
.
state
.
hasError
)
{
return
this
.
props
.
children
;
}
return
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
this
.
props
.
FallbackComponent
{
className
:
this
.
props
.
className
}
)
;
}
}
__webpack_exports__
[
"
a
"
]
=
ErrorBoundary
;
ErrorBoundary
.
defaultProps
=
{
FallbackComponent
:
ErrorBoundaryFallback
}
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
const
_OpenInPrivateWindow
=
site
=
>
(
{
id
:
"
menu_action_open_private_window
"
icon
:
"
new
-
window
-
private
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
OPEN_PRIVATE_WINDOW
data
:
{
url
:
site
.
url
referrer
:
site
.
referrer
}
}
)
userEvent
:
"
OPEN_PRIVATE_WINDOW
"
}
)
;
const
GetPlatformString
=
platform
=
>
{
switch
(
platform
)
{
case
"
win
"
:
return
"
menu_action_show_file_windows
"
;
case
"
macosx
"
:
return
"
menu_action_show_file_mac_os
"
;
case
"
linux
"
:
return
"
menu_action_show_file_linux
"
;
default
:
return
"
menu_action_show_file_default
"
;
}
}
;
__webpack_exports__
[
"
a
"
]
=
GetPlatformString
;
const
LinkMenuOptions
=
{
Separator
:
(
)
=
>
(
{
type
:
"
separator
"
}
)
EmptyItem
:
(
)
=
>
(
{
type
:
"
empty
"
}
)
RemoveBookmark
:
site
=
>
(
{
id
:
"
menu_action_remove_bookmark
"
icon
:
"
bookmark
-
added
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
DELETE_BOOKMARK_BY_ID
data
:
site
.
bookmarkGuid
}
)
userEvent
:
"
BOOKMARK_DELETE
"
}
)
AddBookmark
:
site
=
>
(
{
id
:
"
menu_action_bookmark
"
icon
:
"
bookmark
-
hollow
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
BOOKMARK_URL
data
:
{
url
:
site
.
url
title
:
site
.
title
type
:
site
.
type
}
}
)
userEvent
:
"
BOOKMARK_ADD
"
}
)
OpenInNewWindow
:
site
=
>
(
{
id
:
"
menu_action_open_new_window
"
icon
:
"
new
-
window
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
OPEN_NEW_WINDOW
data
:
{
referrer
:
site
.
referrer
typedBonus
:
site
.
typedBonus
url
:
site
.
url
}
}
)
userEvent
:
"
OPEN_NEW_WINDOW
"
}
)
BlockUrl
:
(
site
index
eventSource
)
=
>
(
{
id
:
"
menu_action_dismiss
"
icon
:
"
dismiss
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
BLOCK_URL
data
:
{
url
:
site
.
url
pocket_id
:
site
.
pocket_id
}
}
)
impression
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
ImpressionStats
(
{
source
:
eventSource
block
:
0
tiles
:
[
{
id
:
site
.
guid
pos
:
index
}
]
}
)
userEvent
:
"
BLOCK
"
}
)
WebExtDismiss
:
(
site
index
eventSource
)
=
>
(
{
id
:
"
menu_action_webext_dismiss
"
string_id
:
"
menu_action_dismiss
"
icon
:
"
dismiss
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
WebExtEvent
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
WEBEXT_DISMISS
{
source
:
eventSource
url
:
site
.
url
action_position
:
index
}
)
}
)
DeleteUrl
:
(
site
index
eventSource
isEnabled
siteInfo
)
=
>
(
{
id
:
"
menu_action_delete
"
icon
:
"
delete
"
action
:
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
DIALOG_OPEN
data
:
{
onConfirm
:
[
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
DELETE_HISTORY_URL
data
:
{
url
:
site
.
url
pocket_id
:
site
.
pocket_id
forceBlock
:
site
.
bookmarkGuid
}
}
)
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
Object
.
assign
(
{
event
:
"
DELETE
"
source
:
eventSource
action_position
:
index
}
siteInfo
)
)
]
eventSource
body_string_id
:
[
"
confirm_history_delete_p1
"
"
confirm_history_delete_notice_p2
"
]
confirm_button_string_id
:
"
menu_action_delete
"
cancel_button_string_id
:
"
topsites_form_cancel_button
"
icon
:
"
modal
-
delete
"
}
}
userEvent
:
"
DIALOG_OPEN
"
}
)
ShowFile
:
(
site
index
eventSource
isEnabled
siteInfo
platform
)
=
>
(
{
id
:
GetPlatformString
(
platform
)
icon
:
"
search
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SHOW_DOWNLOAD_FILE
data
:
{
url
:
site
.
url
}
}
)
}
)
OpenFile
:
site
=
>
(
{
id
:
"
menu_action_open_file
"
icon
:
"
open
-
file
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
OPEN_DOWNLOAD_FILE
data
:
{
url
:
site
.
url
}
}
)
}
)
CopyDownloadLink
:
site
=
>
(
{
id
:
"
menu_action_copy_download_link
"
icon
:
"
copy
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
COPY_DOWNLOAD_LINK
data
:
{
url
:
site
.
url
}
}
)
}
)
GoToDownloadPage
:
site
=
>
(
{
id
:
"
menu_action_go_to_download_page
"
icon
:
"
download
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
OPEN_LINK
data
:
{
url
:
site
.
referrer
}
}
)
disabled
:
!
site
.
referrer
}
)
RemoveDownload
:
site
=
>
(
{
id
:
"
menu_action_remove_download
"
icon
:
"
delete
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
REMOVE_DOWNLOAD_FILE
data
:
{
url
:
site
.
url
}
}
)
}
)
PinTopSite
:
(
site
index
)
=
>
(
{
id
:
"
menu_action_pin
"
icon
:
"
pin
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
TOP_SITES_PIN
data
:
{
site
:
{
url
:
site
.
url
}
index
}
}
)
userEvent
:
"
PIN
"
}
)
UnpinTopSite
:
site
=
>
(
{
id
:
"
menu_action_unpin
"
icon
:
"
unpin
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
TOP_SITES_UNPIN
data
:
{
site
:
{
url
:
site
.
url
}
}
}
)
userEvent
:
"
UNPIN
"
}
)
SaveToPocket
:
(
site
index
eventSource
)
=
>
(
{
id
:
"
menu_action_save_to_pocket
"
icon
:
"
pocket
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SAVE_TO_POCKET
data
:
{
site
:
{
url
:
site
.
url
title
:
site
.
title
}
}
}
)
impression
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
ImpressionStats
(
{
source
:
eventSource
pocket
:
0
tiles
:
[
{
id
:
site
.
guid
pos
:
index
}
]
}
)
userEvent
:
"
SAVE_TO_POCKET
"
}
)
DeleteFromPocket
:
site
=
>
(
{
id
:
"
menu_action_delete_pocket
"
icon
:
"
delete
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
DELETE_FROM_POCKET
data
:
{
pocket_id
:
site
.
pocket_id
}
}
)
userEvent
:
"
DELETE_FROM_POCKET
"
}
)
ArchiveFromPocket
:
site
=
>
(
{
id
:
"
menu_action_archive_pocket
"
icon
:
"
check
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
ARCHIVE_FROM_POCKET
data
:
{
pocket_id
:
site
.
pocket_id
}
}
)
userEvent
:
"
ARCHIVE_FROM_POCKET
"
}
)
EditTopSite
:
(
site
index
)
=
>
(
{
id
:
"
edit_topsites_button_text
"
icon
:
"
edit
"
action
:
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
TOP_SITES_EDIT
data
:
{
index
}
}
}
)
CheckBookmark
:
site
=
>
site
.
bookmarkGuid
?
LinkMenuOptions
.
RemoveBookmark
(
site
)
:
LinkMenuOptions
.
AddBookmark
(
site
)
CheckPinTopSite
:
(
site
index
)
=
>
site
.
isPinned
?
LinkMenuOptions
.
UnpinTopSite
(
site
)
:
LinkMenuOptions
.
PinTopSite
(
site
index
)
CheckSavedToPocket
:
(
site
index
)
=
>
site
.
pocket_id
?
LinkMenuOptions
.
DeleteFromPocket
(
site
)
:
LinkMenuOptions
.
SaveToPocket
(
site
index
)
CheckBookmarkOrArchive
:
site
=
>
site
.
pocket_id
?
LinkMenuOptions
.
ArchiveFromPocket
(
site
)
:
LinkMenuOptions
.
CheckBookmark
(
site
)
OpenInPrivateWindow
:
(
site
index
eventSource
isEnabled
)
=
>
isEnabled
?
_OpenInPrivateWindow
(
site
)
:
LinkMenuOptions
.
EmptyItem
(
)
}
;
__webpack_exports__
[
"
b
"
]
=
LinkMenuOptions
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_redux__
=
__webpack_require__
(
4
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_react_redux__
)
;
var
__WEBPACK_IMPORTED_MODULE_2_content_src_components_ContextMenu_ContextMenu__
=
__webpack_require__
(
13
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_3_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_4_content_src_lib_link_menu_options__
=
__webpack_require__
(
11
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_5_react__
)
;
const
DEFAULT_SITE_MENU_OPTIONS
=
[
"
CheckPinTopSite
"
"
EditTopSite
"
"
Separator
"
"
OpenInNewWindow
"
"
OpenInPrivateWindow
"
"
Separator
"
"
BlockUrl
"
]
;
class
_LinkMenu
extends
__WEBPACK_IMPORTED_MODULE_5_react___default
.
a
.
PureComponent
{
getOptions
(
)
{
const
{
props
}
=
this
;
const
{
site
index
source
isPrivateBrowsingEnabled
siteInfo
platform
}
=
props
;
const
propOptions
=
!
site
.
isDefault
?
props
.
options
:
DEFAULT_SITE_MENU_OPTIONS
;
const
options
=
propOptions
.
map
(
o
=
>
__WEBPACK_IMPORTED_MODULE_4_content_src_lib_link_menu_options__
[
"
b
"
]
[
o
]
(
site
index
source
isPrivateBrowsingEnabled
siteInfo
platform
)
)
.
map
(
option
=
>
{
const
{
action
impression
id
string_id
type
userEvent
}
=
option
;
if
(
!
type
&
&
id
)
{
option
.
label
=
props
.
intl
.
formatMessage
(
{
id
:
string_id
|
|
id
}
)
;
option
.
onClick
=
(
)
=
>
{
props
.
dispatch
(
action
)
;
if
(
userEvent
)
{
const
userEventData
=
Object
.
assign
(
{
event
:
userEvent
source
action_position
:
index
}
siteInfo
)
;
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
userEventData
)
)
;
}
if
(
impression
&
&
props
.
shouldSendImpressionStats
)
{
props
.
dispatch
(
impression
)
;
}
}
;
}
return
option
;
}
)
;
options
[
0
]
.
first
=
true
;
options
[
options
.
length
-
1
]
.
last
=
true
;
return
options
;
}
render
(
)
{
return
__WEBPACK_IMPORTED_MODULE_5_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_content_src_components_ContextMenu_ContextMenu__
[
"
a
"
]
{
onUpdate
:
this
.
props
.
onUpdate
options
:
this
.
getOptions
(
)
}
)
;
}
}
const
getState
=
state
=
>
(
{
isPrivateBrowsingEnabled
:
state
.
Prefs
.
values
.
isPrivateBrowsingEnabled
platform
:
state
.
Prefs
.
values
.
platform
}
)
;
const
LinkMenu
=
Object
(
__WEBPACK_IMPORTED_MODULE_1_react_redux__
[
"
connect
"
]
)
(
getState
)
(
Object
(
__WEBPACK_IMPORTED_MODULE_3_react_intl__
[
"
injectIntl
"
]
)
(
_LinkMenu
)
)
;
__webpack_exports__
[
"
a
"
]
=
LinkMenu
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
var
__WEBPACK_IMPORTED_MODULE_0_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_0_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_0_react__
)
;
class
ContextMenu
extends
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
hideContext
=
this
.
hideContext
.
bind
(
this
)
;
this
.
onClick
=
this
.
onClick
.
bind
(
this
)
;
}
hideContext
(
)
{
this
.
props
.
onUpdate
(
false
)
;
}
componentDidMount
(
)
{
setTimeout
(
(
)
=
>
{
global
.
addEventListener
(
"
click
"
this
.
hideContext
)
;
}
0
)
;
}
componentWillUnmount
(
)
{
global
.
removeEventListener
(
"
click
"
this
.
hideContext
)
;
}
onClick
(
event
)
{
event
.
stopPropagation
(
)
;
}
render
(
)
{
return
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
createElement
(
"
span
"
{
className
:
"
context
-
menu
"
onClick
:
this
.
onClick
}
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
createElement
(
"
ul
"
{
role
:
"
menu
"
className
:
"
context
-
menu
-
list
"
}
this
.
props
.
options
.
map
(
(
option
i
)
=
>
option
.
type
=
=
=
"
separator
"
?
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
createElement
(
"
li
"
{
key
:
i
className
:
"
separator
"
}
)
:
option
.
type
!
=
=
"
empty
"
&
&
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
createElement
(
ContextMenuItem
{
key
:
i
option
:
option
hideContext
:
this
.
hideContext
}
)
)
)
)
;
}
}
__webpack_exports__
[
"
a
"
]
=
ContextMenu
;
class
ContextMenuItem
extends
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onClick
=
this
.
onClick
.
bind
(
this
)
;
this
.
onKeyDown
=
this
.
onKeyDown
.
bind
(
this
)
;
}
onClick
(
)
{
this
.
props
.
hideContext
(
)
;
this
.
props
.
option
.
onClick
(
)
;
}
onKeyDown
(
event
)
{
const
{
option
}
=
this
.
props
;
switch
(
event
.
key
)
{
case
"
Tab
"
:
if
(
event
.
shiftKey
&
&
option
.
first
|
|
!
event
.
shiftKey
&
&
option
.
last
)
{
this
.
props
.
hideContext
(
)
;
}
break
;
case
"
Enter
"
:
this
.
props
.
hideContext
(
)
;
option
.
onClick
(
)
;
break
;
}
}
render
(
)
{
const
{
option
}
=
this
.
props
;
return
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
createElement
(
"
li
"
{
role
:
"
menuitem
"
className
:
"
context
-
menu
-
item
"
}
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
createElement
(
"
a
"
{
onClick
:
this
.
onClick
onKeyDown
:
this
.
onKeyDown
tabIndex
:
"
0
"
className
:
option
.
disabled
?
"
disabled
"
:
"
"
}
option
.
icon
&
&
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
createElement
(
"
span
"
{
className
:
icon
icon
-
spacer
icon
-
{
option
.
icon
}
}
)
option
.
label
)
)
;
}
}
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
var
__WEBPACK_IMPORTED_MODULE_0_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_0_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_1_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_2_content_src_components_ErrorBoundary_ErrorBoundary__
=
__webpack_require__
(
10
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_3_react__
)
;
var
__WEBPACK_IMPORTED_MODULE_4_content_src_components_SectionMenu_SectionMenu__
=
__webpack_require__
(
34
)
;
var
__WEBPACK_IMPORTED_MODULE_5_content_src_lib_section_menu_options__
=
__webpack_require__
(
15
)
;
const
VISIBLE
=
"
visible
"
;
const
VISIBILITY_CHANGE_EVENT
=
"
visibilitychange
"
;
function
getFormattedMessage
(
message
)
{
return
typeof
message
=
=
=
"
string
"
?
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
null
message
)
:
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
message
)
;
}
class
Disclaimer
extends
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onAcknowledge
=
this
.
onAcknowledge
.
bind
(
this
)
;
}
onAcknowledge
(
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_1_common_Actions_jsm__
[
"
b
"
]
.
SetPref
(
this
.
props
.
disclaimerPref
false
)
)
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_1_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
"
DISCLAIMER_ACKED
"
source
:
this
.
props
.
eventSource
}
)
)
;
}
render
(
)
{
const
{
disclaimer
}
=
this
.
props
;
return
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
section
-
disclaimer
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
section
-
disclaimer
-
text
"
}
getFormattedMessage
(
disclaimer
.
text
)
disclaimer
.
link
&
&
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
a
"
{
href
:
disclaimer
.
link
.
href
target
:
"
_blank
"
rel
:
"
noopener
noreferrer
"
}
getFormattedMessage
(
disclaimer
.
link
.
title
|
|
disclaimer
.
link
)
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
button
"
{
onClick
:
this
.
onAcknowledge
}
getFormattedMessage
(
disclaimer
.
button
)
)
)
;
}
}
const
DisclaimerIntl
=
Object
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
injectIntl
"
]
)
(
Disclaimer
)
;
class
_CollapsibleSection
extends
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onBodyMount
=
this
.
onBodyMount
.
bind
(
this
)
;
this
.
onHeaderClick
=
this
.
onHeaderClick
.
bind
(
this
)
;
this
.
onTransitionEnd
=
this
.
onTransitionEnd
.
bind
(
this
)
;
this
.
enableOrDisableAnimation
=
this
.
enableOrDisableAnimation
.
bind
(
this
)
;
this
.
onMenuButtonClick
=
this
.
onMenuButtonClick
.
bind
(
this
)
;
this
.
onMenuButtonMouseEnter
=
this
.
onMenuButtonMouseEnter
.
bind
(
this
)
;
this
.
onMenuButtonMouseLeave
=
this
.
onMenuButtonMouseLeave
.
bind
(
this
)
;
this
.
onMenuUpdate
=
this
.
onMenuUpdate
.
bind
(
this
)
;
this
.
state
=
{
enableAnimation
:
true
isAnimating
:
false
menuButtonHover
:
false
showContextMenu
:
false
}
;
}
componentWillMount
(
)
{
this
.
props
.
document
.
addEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
enableOrDisableAnimation
)
;
}
componentWillUpdate
(
nextProps
)
{
if
(
!
this
.
props
.
collapsed
&
&
nextProps
.
collapsed
)
{
this
.
sectionBody
.
scrollHeight
;
}
}
componentWillUnmount
(
)
{
this
.
props
.
document
.
removeEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
enableOrDisableAnimation
)
;
}
enableOrDisableAnimation
(
)
{
const
visible
=
this
.
props
.
document
.
visibilityState
=
=
=
VISIBLE
;
if
(
this
.
state
.
enableAnimation
!
=
=
visible
)
{
this
.
setState
(
{
enableAnimation
:
visible
}
)
;
}
}
onBodyMount
(
node
)
{
this
.
sectionBody
=
node
;
}
onHeaderClick
(
)
{
if
(
!
this
.
sectionBody
|
|
this
.
props
.
collapsed
=
=
=
undefined
)
{
return
;
}
this
.
setState
(
{
isAnimating
:
true
maxHeight
:
{
this
.
sectionBody
.
scrollHeight
}
px
}
)
;
const
{
action
userEvent
}
=
__WEBPACK_IMPORTED_MODULE_5_content_src_lib_section_menu_options__
[
"
a
"
]
.
CheckCollapsed
(
this
.
props
)
;
this
.
props
.
dispatch
(
action
)
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_1_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
userEvent
source
:
this
.
props
.
source
}
)
)
;
}
onTransitionEnd
(
event
)
{
if
(
event
.
target
=
=
=
event
.
currentTarget
)
{
this
.
setState
(
{
isAnimating
:
false
}
)
;
}
}
renderIcon
(
)
{
const
{
icon
}
=
this
.
props
;
if
(
icon
&
&
icon
.
startsWith
(
"
moz
-
extension
:
/
/
"
)
)
{
return
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
{
className
:
"
icon
icon
-
small
-
spacer
"
style
:
{
backgroundImage
:
url
(
'
{
icon
}
'
)
}
}
)
;
}
return
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
{
className
:
icon
icon
-
small
-
spacer
icon
-
{
icon
|
|
"
webextension
"
}
}
)
;
}
onMenuButtonClick
(
event
)
{
event
.
preventDefault
(
)
;
this
.
setState
(
{
showContextMenu
:
true
}
)
;
}
onMenuButtonMouseEnter
(
)
{
this
.
setState
(
{
menuButtonHover
:
true
}
)
;
}
onMenuButtonMouseLeave
(
)
{
this
.
setState
(
{
menuButtonHover
:
false
}
)
;
}
onMenuUpdate
(
showContextMenu
)
{
this
.
setState
(
{
showContextMenu
}
)
;
}
render
(
)
{
const
isCollapsible
=
this
.
props
.
collapsed
!
=
=
undefined
;
const
{
enableAnimation
isAnimating
maxHeight
menuButtonHover
showContextMenu
}
=
this
.
state
;
const
{
id
eventSource
collapsed
disclaimer
title
extraMenuOptions
showPrefName
privacyNoticeURL
dispatch
isFirst
isLast
isWebExtension
}
=
this
.
props
;
const
disclaimerPref
=
section
.
{
id
}
.
showDisclaimer
;
const
needsDisclaimer
=
disclaimer
&
&
this
.
props
.
Prefs
.
values
[
disclaimerPref
]
;
const
active
=
menuButtonHover
|
|
showContextMenu
;
return
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
section
"
{
className
:
collapsible
-
section
{
this
.
props
.
className
}
{
enableAnimation
?
"
animation
-
enabled
"
:
"
"
}
{
collapsed
?
"
collapsed
"
:
"
"
}
{
active
?
"
active
"
:
"
"
}
"
data
-
section
-
id
"
:
id
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
section
-
top
-
bar
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
h3
"
{
className
:
"
section
-
title
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
{
className
:
"
click
-
target
"
onClick
:
this
.
onHeaderClick
}
this
.
renderIcon
(
)
getFormattedMessage
(
title
)
isCollapsible
&
&
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
{
className
:
collapsible
-
arrow
icon
{
collapsed
?
"
icon
-
arrowhead
-
forward
-
small
"
:
"
icon
-
arrowhead
-
down
-
small
"
}
}
)
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
null
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
context
-
menu
-
button
icon
"
onClick
:
this
.
onMenuButtonClick
onMouseEnter
:
this
.
onMenuButtonMouseEnter
onMouseLeave
:
this
.
onMenuButtonMouseLeave
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
{
className
:
"
sr
-
only
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
section_context_menu_button_sr
"
}
)
)
)
showContextMenu
&
&
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_4_content_src_components_SectionMenu_SectionMenu__
[
"
a
"
]
{
id
:
id
extraOptions
:
extraMenuOptions
eventSource
:
eventSource
showPrefName
:
showPrefName
privacyNoticeURL
:
privacyNoticeURL
collapsed
:
collapsed
onUpdate
:
this
.
onMenuUpdate
isFirst
:
isFirst
isLast
:
isLast
dispatch
:
dispatch
isWebExtension
:
isWebExtension
}
)
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_content_src_components_ErrorBoundary_ErrorBoundary__
[
"
a
"
]
{
className
:
"
section
-
body
-
fallback
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
section
-
body
{
isAnimating
?
"
animating
"
:
"
"
}
onTransitionEnd
:
this
.
onTransitionEnd
ref
:
this
.
onBodyMount
style
:
isAnimating
&
&
!
collapsed
?
{
maxHeight
}
:
null
}
needsDisclaimer
&
&
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
DisclaimerIntl
{
disclaimerPref
:
disclaimerPref
disclaimer
:
disclaimer
eventSource
:
eventSource
dispatch
:
this
.
props
.
dispatch
}
)
this
.
props
.
children
)
)
)
;
}
}
_CollapsibleSection
.
defaultProps
=
{
document
:
global
.
document
|
|
{
addEventListener
:
(
)
=
>
{
}
removeEventListener
:
(
)
=
>
{
}
visibilityState
:
"
hidden
"
}
Prefs
:
{
values
:
{
}
}
}
;
const
CollapsibleSection
=
Object
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
injectIntl
"
]
)
(
_CollapsibleSection
)
;
__webpack_exports__
[
"
a
"
]
=
CollapsibleSection
;
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
const
SectionMenuOptions
=
{
Separator
:
(
)
=
>
(
{
type
:
"
separator
"
}
)
MoveUp
:
section
=
>
(
{
id
:
"
section_menu_action_move_up
"
icon
:
"
arrowhead
-
up
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SECTION_MOVE
data
:
{
id
:
section
.
id
direction
:
-
1
}
}
)
userEvent
:
"
MENU_MOVE_UP
"
disabled
:
!
!
section
.
isFirst
}
)
MoveDown
:
section
=
>
(
{
id
:
"
section_menu_action_move_down
"
icon
:
"
arrowhead
-
down
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SECTION_MOVE
data
:
{
id
:
section
.
id
direction
:
+
1
}
}
)
userEvent
:
"
MENU_MOVE_DOWN
"
disabled
:
!
!
section
.
isLast
}
)
RemoveSection
:
section
=
>
(
{
id
:
"
section_menu_action_remove_section
"
icon
:
"
dismiss
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
SetPref
(
section
.
showPrefName
false
)
userEvent
:
"
MENU_REMOVE
"
}
)
CollapseSection
:
section
=
>
(
{
id
:
"
section_menu_action_collapse_section
"
icon
:
"
minimize
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
UPDATE_SECTION_PREFS
data
:
{
id
:
section
.
id
value
:
{
collapsed
:
true
}
}
}
)
userEvent
:
"
MENU_COLLAPSE
"
}
)
ExpandSection
:
section
=
>
(
{
id
:
"
section_menu_action_expand_section
"
icon
:
"
maximize
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
UPDATE_SECTION_PREFS
data
:
{
id
:
section
.
id
value
:
{
collapsed
:
false
}
}
}
)
userEvent
:
"
MENU_EXPAND
"
}
)
ManageSection
:
section
=
>
(
{
id
:
"
section_menu_action_manage_section
"
icon
:
"
settings
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SETTINGS_OPEN
}
)
userEvent
:
"
MENU_MANAGE
"
}
)
ManageWebExtension
:
section
=
>
(
{
id
:
"
section_menu_action_manage_webext
"
icon
:
"
settings
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
OPEN_WEBEXT_SETTINGS
data
:
section
.
id
}
)
}
)
AddTopSite
:
section
=
>
(
{
id
:
"
section_menu_action_add_topsite
"
icon
:
"
add
"
action
:
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
TOP_SITES_EDIT
data
:
{
index
:
-
1
}
}
userEvent
:
"
MENU_ADD_TOPSITE
"
}
)
PrivacyNotice
:
section
=
>
(
{
id
:
"
section_menu_action_privacy_notice
"
icon
:
"
info
"
action
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
OPEN_LINK
data
:
{
url
:
section
.
privacyNoticeURL
}
}
)
userEvent
:
"
MENU_PRIVACY_NOTICE
"
}
)
CheckCollapsed
:
section
=
>
section
.
collapsed
?
SectionMenuOptions
.
ExpandSection
(
section
)
:
SectionMenuOptions
.
CollapseSection
(
section
)
}
;
__webpack_exports__
[
"
a
"
]
=
SectionMenuOptions
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_common_PerfService_jsm__
=
__webpack_require__
(
17
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_2_react__
)
;
const
RECORDED_SECTIONS
=
[
"
highlights
"
"
topsites
"
]
;
class
ComponentPerfTimer
extends
__WEBPACK_IMPORTED_MODULE_2_react___default
.
a
.
Component
{
constructor
(
props
)
{
super
(
props
)
;
this
.
perfSvc
=
this
.
props
.
perfSvc
|
|
__WEBPACK_IMPORTED_MODULE_1_common_PerfService_jsm__
[
"
a
"
]
;
this
.
_sendBadStateEvent
=
this
.
_sendBadStateEvent
.
bind
(
this
)
;
this
.
_sendPaintedEvent
=
this
.
_sendPaintedEvent
.
bind
(
this
)
;
this
.
_reportMissingData
=
false
;
this
.
_timestampHandled
=
false
;
this
.
_recordedFirstRender
=
false
;
}
componentDidMount
(
)
{
if
(
!
RECORDED_SECTIONS
.
includes
(
this
.
props
.
id
)
)
{
return
;
}
this
.
_maybeSendPaintedEvent
(
)
;
}
componentDidUpdate
(
)
{
if
(
!
RECORDED_SECTIONS
.
includes
(
this
.
props
.
id
)
)
{
return
;
}
this
.
_maybeSendPaintedEvent
(
)
;
}
_afterFramePaint
(
callback
)
{
requestAnimationFrame
(
(
)
=
>
setTimeout
(
callback
0
)
)
;
}
_maybeSendBadStateEvent
(
)
{
if
(
!
this
.
props
.
initialized
)
{
this
.
_reportMissingData
=
true
;
}
else
if
(
this
.
_reportMissingData
)
{
this
.
_reportMissingData
=
false
;
this
.
_sendBadStateEvent
(
)
;
}
}
_maybeSendPaintedEvent
(
)
{
if
(
this
.
_timestampHandled
|
|
!
this
.
props
.
initialized
)
{
return
;
}
this
.
_timestampHandled
=
true
;
this
.
_afterFramePaint
(
this
.
_sendPaintedEvent
)
;
}
_ensureFirstRenderTsRecorded
(
)
{
if
(
!
this
.
_recordedFirstRender
)
{
this
.
_recordedFirstRender
=
true
;
const
key
=
{
this
.
props
.
id
}
_first_render_ts
;
this
.
perfSvc
.
mark
(
key
)
;
}
}
_sendBadStateEvent
(
)
{
const
dataReadyKey
=
{
this
.
props
.
id
}
_data_ready_ts
;
this
.
perfSvc
.
mark
(
dataReadyKey
)
;
try
{
const
firstRenderKey
=
{
this
.
props
.
id
}
_first_render_ts
;
const
value
=
parseInt
(
this
.
perfSvc
.
getMostRecentAbsMarkStartByName
(
dataReadyKey
)
-
this
.
perfSvc
.
getMostRecentAbsMarkStartByName
(
firstRenderKey
)
10
)
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SAVE_SESSION_PERF_DATA
data
:
{
[
{
this
.
props
.
id
}
_data_late_by_ms
]
:
value
}
}
)
)
;
}
catch
(
ex
)
{
}
}
_sendPaintedEvent
(
)
{
if
(
this
.
props
.
id
!
=
=
"
topsites
"
)
{
return
;
}
const
key
=
{
this
.
props
.
id
}
_first_painted_ts
;
this
.
perfSvc
.
mark
(
key
)
;
try
{
const
data
=
{
}
;
data
[
key
]
=
this
.
perfSvc
.
getMostRecentAbsMarkStartByName
(
key
)
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SAVE_SESSION_PERF_DATA
data
}
)
)
;
}
catch
(
ex
)
{
}
}
render
(
)
{
if
(
RECORDED_SECTIONS
.
includes
(
this
.
props
.
id
)
)
{
this
.
_ensureFirstRenderTsRecorded
(
)
;
this
.
_maybeSendBadStateEvent
(
)
;
}
return
this
.
props
.
children
;
}
}
__webpack_exports__
[
"
a
"
]
=
ComponentPerfTimer
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
d
(
__webpack_exports__
"
a
"
function
(
)
{
return
perfService
;
}
)
;
if
(
typeof
ChromeUtils
!
=
=
"
undefined
"
)
{
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
}
let
usablePerfObj
;
if
(
typeof
Services
!
=
=
"
undefined
"
)
{
usablePerfObj
=
Services
.
appShell
.
hiddenDOMWindow
.
performance
;
}
else
if
(
typeof
performance
!
=
=
"
undefined
"
)
{
usablePerfObj
=
performance
;
}
else
{
usablePerfObj
=
{
now
(
)
{
}
mark
(
)
{
}
}
;
}
function
_PerfService
(
options
)
{
if
(
options
&
&
options
.
performanceObj
)
{
this
.
_perf
=
options
.
performanceObj
;
}
else
{
this
.
_perf
=
usablePerfObj
;
}
}
_PerfService
.
prototype
=
{
mark
:
function
mark
(
str
)
{
this
.
_perf
.
mark
(
str
)
;
}
getEntriesByName
:
function
getEntriesByName
(
name
type
)
{
return
this
.
_perf
.
getEntriesByName
(
name
type
)
;
}
get
timeOrigin
(
)
{
return
this
.
_perf
.
timeOrigin
;
}
absNow
:
function
absNow
(
)
{
return
this
.
timeOrigin
+
this
.
_perf
.
now
(
)
;
}
getMostRecentAbsMarkStartByName
(
name
)
{
let
entries
=
this
.
getEntriesByName
(
name
"
mark
"
)
;
if
(
!
entries
.
length
)
{
throw
new
Error
(
No
marks
with
the
name
{
name
}
)
;
}
let
mostRecentEntry
=
entries
[
entries
.
length
-
1
]
;
return
this
.
_perf
.
timeOrigin
+
mostRecentEntry
.
startTime
;
}
}
;
var
perfService
=
new
_PerfService
(
)
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_2__TopSitesConstants__
=
__webpack_require__
(
5
)
;
var
__WEBPACK_IMPORTED_MODULE_3_content_src_components_LinkMenu_LinkMenu__
=
__webpack_require__
(
12
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_4_react__
)
;
var
__WEBPACK_IMPORTED_MODULE_5_common_Reducers_jsm__
=
__webpack_require__
(
6
)
;
var
_extends
=
Object
.
assign
|
|
function
(
target
)
{
for
(
var
i
=
1
;
i
<
arguments
.
length
;
i
+
+
)
{
var
source
=
arguments
[
i
]
;
for
(
var
key
in
source
)
{
if
(
Object
.
prototype
.
hasOwnProperty
.
call
(
source
key
)
)
{
target
[
key
]
=
source
[
key
]
;
}
}
}
return
target
;
}
;
class
TopSiteLink
extends
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onDragEvent
=
this
.
onDragEvent
.
bind
(
this
)
;
}
_allowDrop
(
e
)
{
return
e
.
dataTransfer
.
types
.
includes
(
"
text
/
topsite
-
index
"
)
;
}
onDragEvent
(
event
)
{
switch
(
event
.
type
)
{
case
"
click
"
:
if
(
this
.
dragged
)
{
event
.
preventDefault
(
)
;
}
break
;
case
"
dragstart
"
:
this
.
dragged
=
true
;
event
.
dataTransfer
.
effectAllowed
=
"
move
"
;
event
.
dataTransfer
.
setData
(
"
text
/
topsite
-
index
"
this
.
props
.
index
)
;
event
.
target
.
blur
(
)
;
this
.
props
.
onDragEvent
(
event
this
.
props
.
index
this
.
props
.
link
this
.
props
.
title
)
;
break
;
case
"
dragend
"
:
this
.
props
.
onDragEvent
(
event
)
;
break
;
case
"
dragenter
"
:
case
"
dragover
"
:
case
"
drop
"
:
if
(
this
.
_allowDrop
(
event
)
)
{
event
.
preventDefault
(
)
;
this
.
props
.
onDragEvent
(
event
this
.
props
.
index
)
;
}
break
;
case
"
mousedown
"
:
this
.
dragged
=
false
;
break
;
}
}
render
(
)
{
const
{
children
className
defaultStyle
isDraggable
link
onClick
title
}
=
this
.
props
;
const
topSiteOuterClassName
=
top
-
site
-
outer
{
className
?
{
className
}
:
"
"
}
{
link
.
isDragged
?
"
dragged
"
:
"
"
}
;
const
{
tippyTopIcon
faviconSize
}
=
link
;
const
[
letterFallback
]
=
title
;
let
imageClassName
;
let
imageStyle
;
let
showSmallFavicon
=
false
;
let
smallFaviconStyle
;
let
smallFaviconFallback
;
if
(
defaultStyle
)
{
smallFaviconFallback
=
false
;
}
else
if
(
link
.
customScreenshotURL
)
{
imageClassName
=
"
top
-
site
-
icon
rich
-
icon
"
;
imageStyle
=
{
backgroundColor
:
link
.
backgroundColor
backgroundImage
:
url
(
{
link
.
screenshot
}
)
}
;
}
else
if
(
tippyTopIcon
|
|
faviconSize
>
=
__WEBPACK_IMPORTED_MODULE_2__TopSitesConstants__
[
"
b
"
]
)
{
imageClassName
=
"
top
-
site
-
icon
rich
-
icon
"
;
imageStyle
=
{
backgroundColor
:
link
.
backgroundColor
backgroundImage
:
url
(
{
tippyTopIcon
|
|
link
.
favicon
}
)
}
;
}
else
{
imageClassName
=
screenshot
{
link
.
screenshot
?
"
active
"
:
"
"
}
;
imageStyle
=
{
backgroundImage
:
link
.
screenshot
?
url
(
{
link
.
screenshot
}
)
:
"
none
"
}
;
if
(
faviconSize
>
=
__WEBPACK_IMPORTED_MODULE_2__TopSitesConstants__
[
"
a
"
]
)
{
showSmallFavicon
=
true
;
smallFaviconStyle
=
{
backgroundImage
:
url
(
{
link
.
favicon
}
)
}
;
}
else
if
(
link
.
screenshot
)
{
showSmallFavicon
=
true
;
smallFaviconFallback
=
true
;
}
}
let
draggableProps
=
{
}
;
if
(
isDraggable
)
{
draggableProps
=
{
onClick
:
this
.
onDragEvent
onDragEnd
:
this
.
onDragEvent
onDragStart
:
this
.
onDragEvent
onMouseDown
:
this
.
onDragEvent
}
;
}
return
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
li
"
_extends
(
{
className
:
topSiteOuterClassName
onDrop
:
this
.
onDragEvent
onDragOver
:
this
.
onDragEvent
onDragEnter
:
this
.
onDragEvent
onDragLeave
:
this
.
onDragEvent
}
draggableProps
)
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
top
-
site
-
inner
"
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
a
"
{
href
:
link
.
url
onClick
:
onClick
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
tile
"
"
aria
-
hidden
"
:
true
"
data
-
fallback
"
:
letterFallback
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
div
"
{
className
:
imageClassName
style
:
imageStyle
}
)
showSmallFavicon
&
&
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
top
-
site
-
icon
default
-
icon
"
"
data
-
fallback
"
:
smallFaviconFallback
&
&
letterFallback
style
:
smallFaviconStyle
}
)
)
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
div
"
{
className
:
title
{
link
.
isPinned
?
"
pinned
"
:
"
"
}
}
link
.
isPinned
&
&
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
icon
icon
-
pin
-
small
"
}
)
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
span
"
{
dir
:
"
auto
"
}
title
)
)
)
children
)
)
;
}
}
__webpack_exports__
[
"
a
"
]
=
TopSiteLink
;
TopSiteLink
.
defaultProps
=
{
title
:
"
"
link
:
{
}
isDraggable
:
true
}
;
class
TopSite
extends
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
state
=
{
showContextMenu
:
false
}
;
this
.
onLinkClick
=
this
.
onLinkClick
.
bind
(
this
)
;
this
.
onMenuButtonClick
=
this
.
onMenuButtonClick
.
bind
(
this
)
;
this
.
onMenuUpdate
=
this
.
onMenuUpdate
.
bind
(
this
)
;
}
_getTelemetryInfo
(
)
{
const
value
=
{
icon_type
:
this
.
props
.
link
.
iconType
}
;
if
(
this
.
props
.
link
.
isPinned
)
{
value
.
card_type
=
"
pinned
"
;
}
return
{
value
}
;
}
userEvent
(
event
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
Object
.
assign
(
{
event
source
:
__WEBPACK_IMPORTED_MODULE_2__TopSitesConstants__
[
"
d
"
]
action_position
:
this
.
props
.
index
}
this
.
_getTelemetryInfo
(
)
)
)
)
;
}
onLinkClick
(
event
)
{
this
.
userEvent
(
"
CLICK
"
)
;
event
.
preventDefault
(
)
;
const
{
altKey
button
ctrlKey
metaKey
shiftKey
}
=
event
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
OPEN_LINK
data
:
Object
.
assign
(
this
.
props
.
link
{
event
:
{
altKey
button
ctrlKey
metaKey
shiftKey
}
}
)
}
)
)
;
}
onMenuButtonClick
(
event
)
{
event
.
preventDefault
(
)
;
this
.
props
.
onActivate
(
this
.
props
.
index
)
;
this
.
setState
(
{
showContextMenu
:
true
}
)
;
}
onMenuUpdate
(
showContextMenu
)
{
this
.
setState
(
{
showContextMenu
}
)
;
}
render
(
)
{
const
{
props
}
=
this
;
const
{
link
}
=
props
;
const
isContextMenuOpen
=
this
.
state
.
showContextMenu
&
&
props
.
activeIndex
=
=
=
props
.
index
;
const
title
=
link
.
label
|
|
link
.
hostname
;
return
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
TopSiteLink
_extends
(
{
}
props
{
onClick
:
this
.
onLinkClick
onDragEvent
:
this
.
props
.
onDragEvent
className
:
{
props
.
className
|
|
"
"
}
{
isContextMenuOpen
?
"
active
"
:
"
"
}
title
:
title
}
)
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
div
"
null
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
context
-
menu
-
button
icon
"
onClick
:
this
.
onMenuButtonClick
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
span
"
{
className
:
"
sr
-
only
"
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
context_menu_button_sr
"
values
:
{
title
}
}
)
)
)
isContextMenuOpen
&
&
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_3_content_src_components_LinkMenu_LinkMenu__
[
"
a
"
]
{
dispatch
:
props
.
dispatch
index
:
props
.
index
onUpdate
:
this
.
onMenuUpdate
options
:
__WEBPACK_IMPORTED_MODULE_2__TopSitesConstants__
[
"
c
"
]
site
:
link
siteInfo
:
this
.
_getTelemetryInfo
(
)
source
:
__WEBPACK_IMPORTED_MODULE_2__TopSitesConstants__
[
"
d
"
]
}
)
)
)
;
}
}
TopSite
.
defaultProps
=
{
link
:
{
}
onActivate
(
)
{
}
}
;
class
TopSitePlaceholder
extends
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onEditButtonClick
=
this
.
onEditButtonClick
.
bind
(
this
)
;
}
onEditButtonClick
(
)
{
this
.
props
.
dispatch
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
TOP_SITES_EDIT
data
:
{
index
:
this
.
props
.
index
}
}
)
;
}
render
(
)
{
return
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
TopSiteLink
_extends
(
{
}
this
.
props
{
className
:
placeholder
{
this
.
props
.
className
|
|
"
"
}
isDraggable
:
false
}
)
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
context
-
menu
-
button
edit
-
button
icon
"
title
:
this
.
props
.
intl
.
formatMessage
(
{
id
:
"
edit_topsites_edit_button
"
}
)
onClick
:
this
.
onEditButtonClick
}
)
)
;
}
}
class
_TopSiteList
extends
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
PureComponent
{
static
get
DEFAULT_STATE
(
)
{
return
{
activeIndex
:
null
draggedIndex
:
null
draggedSite
:
null
draggedTitle
:
null
topSitesPreview
:
null
}
;
}
constructor
(
props
)
{
super
(
props
)
;
this
.
state
=
_TopSiteList
.
DEFAULT_STATE
;
this
.
onDragEvent
=
this
.
onDragEvent
.
bind
(
this
)
;
this
.
onActivate
=
this
.
onActivate
.
bind
(
this
)
;
}
componentWillReceiveProps
(
nextProps
)
{
if
(
this
.
state
.
draggedSite
)
{
const
prevTopSites
=
this
.
props
.
TopSites
&
&
this
.
props
.
TopSites
.
rows
;
const
newTopSites
=
nextProps
.
TopSites
&
&
nextProps
.
TopSites
.
rows
;
if
(
prevTopSites
&
&
prevTopSites
[
this
.
state
.
draggedIndex
]
&
&
prevTopSites
[
this
.
state
.
draggedIndex
]
.
url
=
=
=
this
.
state
.
draggedSite
.
url
&
&
(
!
newTopSites
[
this
.
state
.
draggedIndex
]
|
|
newTopSites
[
this
.
state
.
draggedIndex
]
.
url
!
=
=
this
.
state
.
draggedSite
.
url
)
)
{
this
.
setState
(
_TopSiteList
.
DEFAULT_STATE
)
;
}
}
}
userEvent
(
event
index
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
source
:
__WEBPACK_IMPORTED_MODULE_2__TopSitesConstants__
[
"
d
"
]
action_position
:
index
}
)
)
;
}
onDragEvent
(
event
index
link
title
)
{
switch
(
event
.
type
)
{
case
"
dragstart
"
:
this
.
dropped
=
false
;
this
.
setState
(
{
draggedIndex
:
index
draggedSite
:
link
draggedTitle
:
title
activeIndex
:
null
}
)
;
this
.
userEvent
(
"
DRAG
"
index
)
;
break
;
case
"
dragend
"
:
if
(
!
this
.
dropped
)
{
this
.
setState
(
_TopSiteList
.
DEFAULT_STATE
)
;
}
break
;
case
"
dragenter
"
:
if
(
index
=
=
=
this
.
state
.
draggedIndex
)
{
this
.
setState
(
{
topSitesPreview
:
null
}
)
;
}
else
{
this
.
setState
(
{
topSitesPreview
:
this
.
_makeTopSitesPreview
(
index
)
}
)
;
}
break
;
case
"
drop
"
:
if
(
index
!
=
=
this
.
state
.
draggedIndex
)
{
this
.
dropped
=
true
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
TOP_SITES_INSERT
data
:
{
site
:
{
url
:
this
.
state
.
draggedSite
.
url
label
:
this
.
state
.
draggedTitle
customScreenshotURL
:
this
.
state
.
draggedSite
.
customScreenshotURL
}
index
draggedFromIndex
:
this
.
state
.
draggedIndex
}
}
)
)
;
this
.
userEvent
(
"
DROP
"
index
)
;
}
break
;
}
}
_getTopSites
(
)
{
let
topSites
=
this
.
props
.
TopSites
.
rows
.
slice
(
)
;
topSites
.
length
=
this
.
props
.
TopSitesRows
*
__WEBPACK_IMPORTED_MODULE_5_common_Reducers_jsm__
[
"
a
"
]
;
return
topSites
;
}
_makeTopSitesPreview
(
index
)
{
const
topSites
=
this
.
_getTopSites
(
)
;
topSites
[
this
.
state
.
draggedIndex
]
=
null
;
const
pinnedOnly
=
topSites
.
map
(
site
=
>
site
&
&
site
.
isPinned
?
site
:
null
)
;
const
unpinned
=
topSites
.
filter
(
site
=
>
site
&
&
!
site
.
isPinned
)
;
const
siteToInsert
=
Object
.
assign
(
{
}
this
.
state
.
draggedSite
{
isPinned
:
true
isDragged
:
true
}
)
;
if
(
!
pinnedOnly
[
index
]
)
{
pinnedOnly
[
index
]
=
siteToInsert
;
}
else
{
let
holeIndex
=
index
;
const
indexStep
=
index
>
this
.
state
.
draggedIndex
?
-
1
:
1
;
while
(
pinnedOnly
[
holeIndex
]
)
{
holeIndex
+
=
indexStep
;
}
const
shiftingStep
=
index
>
this
.
state
.
draggedIndex
?
1
:
-
1
;
while
(
holeIndex
!
=
=
index
)
{
const
nextIndex
=
holeIndex
+
shiftingStep
;
pinnedOnly
[
holeIndex
]
=
pinnedOnly
[
nextIndex
]
;
holeIndex
=
nextIndex
;
}
pinnedOnly
[
index
]
=
siteToInsert
;
}
const
preview
=
pinnedOnly
;
for
(
let
i
=
0
;
i
<
preview
.
length
;
i
+
+
)
{
if
(
!
preview
[
i
]
)
{
preview
[
i
]
=
unpinned
.
shift
(
)
|
|
null
;
}
}
return
preview
;
}
onActivate
(
index
)
{
this
.
setState
(
{
activeIndex
:
index
}
)
;
}
render
(
)
{
const
{
props
}
=
this
;
const
topSites
=
this
.
state
.
topSitesPreview
|
|
this
.
_getTopSites
(
)
;
const
topSitesUI
=
[
]
;
const
commonProps
=
{
onDragEvent
:
this
.
onDragEvent
dispatch
:
props
.
dispatch
intl
:
props
.
intl
}
;
let
holeIndex
=
0
;
const
maxNarrowVisibleIndex
=
props
.
TopSitesRows
*
6
;
for
(
let
i
=
0
l
=
topSites
.
length
;
i
<
l
;
i
+
+
)
{
const
link
=
topSites
[
i
]
&
&
Object
.
assign
(
{
}
topSites
[
i
]
{
iconType
:
this
.
props
.
topSiteIconType
(
topSites
[
i
]
)
}
)
;
const
slotProps
=
{
key
:
link
?
link
.
url
:
holeIndex
+
+
index
:
i
}
;
if
(
i
>
=
maxNarrowVisibleIndex
)
{
slotProps
.
className
=
"
hide
-
for
-
narrow
"
;
}
topSitesUI
.
push
(
!
link
?
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
TopSitePlaceholder
_extends
(
{
}
slotProps
commonProps
)
)
:
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
TopSite
_extends
(
{
link
:
link
activeIndex
:
this
.
state
.
activeIndex
onActivate
:
this
.
onActivate
}
slotProps
commonProps
)
)
)
;
}
return
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
ul
"
{
className
:
top
-
sites
-
list
{
this
.
state
.
draggedSite
?
"
dnd
-
active
"
:
"
"
}
}
topSitesUI
)
;
}
}
const
TopSiteList
=
Object
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
[
"
injectIntl
"
]
)
(
_TopSiteList
)
;
__webpack_exports__
[
"
b
"
]
=
TopSiteList
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
Object
.
defineProperty
(
__webpack_exports__
"
__esModule
"
{
value
:
true
}
)
;
(
function
(
global
)
{
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_content_src_lib_snippets__
=
__webpack_require__
(
20
)
;
var
__WEBPACK_IMPORTED_MODULE_2_content_src_components_Base_Base__
=
__webpack_require__
(
25
)
;
var
__WEBPACK_IMPORTED_MODULE_3_content_src_lib_detect_user_session_start__
=
__webpack_require__
(
39
)
;
var
__WEBPACK_IMPORTED_MODULE_4_content_src_lib_init_store__
=
__webpack_require__
(
8
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react_redux__
=
__webpack_require__
(
4
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_5_react_redux__
)
;
var
__WEBPACK_IMPORTED_MODULE_6_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_6_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_6_react__
)
;
var
__WEBPACK_IMPORTED_MODULE_7_react_dom__
=
__webpack_require__
(
9
)
;
var
__WEBPACK_IMPORTED_MODULE_7_react_dom___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_7_react_dom__
)
;
var
__WEBPACK_IMPORTED_MODULE_8_common_Reducers_jsm__
=
__webpack_require__
(
6
)
;
const
store
=
Object
(
__WEBPACK_IMPORTED_MODULE_4_content_src_lib_init_store__
[
"
b
"
]
)
(
__WEBPACK_IMPORTED_MODULE_8_common_Reducers_jsm__
[
"
b
"
]
global
.
gActivityStreamPrerenderedState
)
;
new
__WEBPACK_IMPORTED_MODULE_3_content_src_lib_detect_user_session_start__
[
"
a
"
]
(
store
)
.
sendEventOrAddListener
(
)
;
if
(
!
global
.
gActivityStreamPrerenderedState
)
{
store
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
NEW_TAB_STATE_REQUEST
}
)
)
;
}
__WEBPACK_IMPORTED_MODULE_7_react_dom___default
.
a
.
hydrate
(
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_5_react_redux__
[
"
Provider
"
]
{
store
:
store
}
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_content_src_components_Base_Base__
[
"
a
"
]
{
isFirstrun
:
global
.
document
.
location
.
href
=
=
=
"
about
:
welcome
"
isPrerendered
:
!
!
global
.
gActivityStreamPrerenderedState
locale
:
global
.
document
.
documentElement
.
lang
strings
:
global
.
gActivityStreamStrings
}
)
)
document
.
getElementById
(
"
root
"
)
)
;
Object
(
__WEBPACK_IMPORTED_MODULE_1_content_src_lib_snippets__
[
"
a
"
]
)
(
store
)
;
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
__webpack_exports__
[
"
a
"
]
=
addSnippetsSubscriber
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_content_src_asrouter_asrouter_content__
=
__webpack_require__
(
7
)
;
const
DATABASE_NAME
=
"
snippets_db
"
;
const
DATABASE_VERSION
=
1
;
const
SNIPPETS_OBJECTSTORE_NAME
=
"
snippets
"
;
const
SNIPPETS_UPDATE_INTERVAL_MS
=
14400000
;
const
SNIPPETS_ENABLED_EVENT
=
"
Snippets
:
Enabled
"
;
const
SNIPPETS_DISABLED_EVENT
=
"
Snippets
:
Disabled
"
;
class
SnippetsMap
extends
Map
{
constructor
(
dispatch
)
{
super
(
)
;
this
.
_db
=
null
;
this
.
_dispatch
=
dispatch
;
}
set
(
key
value
)
{
super
.
set
(
key
value
)
;
return
this
.
_dbTransaction
(
db
=
>
db
.
put
(
value
key
)
)
;
}
delete
(
key
)
{
super
.
delete
(
key
)
;
return
this
.
_dbTransaction
(
db
=
>
db
.
delete
(
key
)
)
;
}
clear
(
)
{
super
.
clear
(
)
;
this
.
_dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SNIPPETS_BLOCKLIST_CLEARED
}
)
)
;
return
this
.
_dbTransaction
(
db
=
>
db
.
clear
(
)
)
;
}
get
blockList
(
)
{
return
this
.
get
(
"
blockList
"
)
|
|
[
]
;
}
async
blockSnippetById
(
id
)
{
if
(
!
id
)
{
return
;
}
const
{
blockList
}
=
this
;
if
(
!
blockList
.
includes
(
id
)
)
{
blockList
.
push
(
id
)
;
this
.
_dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SNIPPETS_BLOCKLIST_UPDATED
data
:
id
}
)
)
;
await
this
.
set
(
"
blockList
"
blockList
)
;
}
}
disableOnboarding
(
)
{
this
.
_dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
DISABLE_ONBOARDING
}
)
)
;
}
showFirefoxAccounts
(
)
{
this
.
_dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SHOW_FIREFOX_ACCOUNTS
}
)
)
;
}
getTotalBookmarksCount
(
)
{
return
new
Promise
(
resolve
=
>
{
this
.
_dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
TOTAL_BOOKMARKS_REQUEST
}
)
)
;
global
.
addMessageListener
(
"
ActivityStream
:
MainToContent
"
function
onMessage
(
{
data
:
action
}
)
{
if
(
action
.
type
=
=
=
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
TOTAL_BOOKMARKS_RESPONSE
)
{
resolve
(
action
.
data
)
;
global
.
removeMessageListener
(
"
ActivityStream
:
MainToContent
"
onMessage
)
;
}
}
)
;
}
)
;
}
async
connect
(
)
{
const
db
=
await
this
.
_openDB
(
)
;
await
this
.
_restoreFromDb
(
db
)
;
this
.
_db
=
db
;
}
_dbTransaction
(
modifier
)
{
if
(
!
this
.
_db
)
{
return
Promise
.
resolve
(
)
;
}
return
new
Promise
(
(
resolve
reject
)
=
>
{
const
transaction
=
modifier
(
this
.
_db
.
transaction
(
SNIPPETS_OBJECTSTORE_NAME
"
readwrite
"
)
.
objectStore
(
SNIPPETS_OBJECTSTORE_NAME
)
)
;
transaction
.
onsuccess
=
event
=
>
resolve
(
)
;
transaction
.
onerror
=
event
=
>
reject
(
transaction
.
error
)
;
}
)
;
}
_openDB
(
)
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
const
openRequest
=
indexedDB
.
open
(
DATABASE_NAME
DATABASE_VERSION
)
;
openRequest
.
onerror
=
event
=
>
{
indexedDB
.
deleteDatabase
(
DATABASE_NAME
)
;
reject
(
event
)
;
}
;
openRequest
.
onupgradeneeded
=
event
=
>
{
const
db
=
event
.
target
.
result
;
if
(
!
db
.
objectStoreNames
.
contains
(
SNIPPETS_OBJECTSTORE_NAME
)
)
{
db
.
createObjectStore
(
SNIPPETS_OBJECTSTORE_NAME
)
;
}
}
;
openRequest
.
onsuccess
=
event
=
>
{
let
db
=
event
.
target
.
result
;
db
.
onerror
=
err
=
>
console
.
error
(
err
)
;
db
.
onversionchange
=
versionChangeEvent
=
>
versionChangeEvent
.
target
.
close
(
)
;
resolve
(
db
)
;
}
;
}
)
;
}
_restoreFromDb
(
db
)
{
return
new
Promise
(
(
resolve
reject
)
=
>
{
let
cursorRequest
;
try
{
cursorRequest
=
db
.
transaction
(
SNIPPETS_OBJECTSTORE_NAME
)
.
objectStore
(
SNIPPETS_OBJECTSTORE_NAME
)
.
openCursor
(
)
;
}
catch
(
err
)
{
reject
(
err
)
;
return
;
}
cursorRequest
.
onerror
=
event
=
>
reject
(
event
)
;
cursorRequest
.
onsuccess
=
event
=
>
{
let
cursor
=
event
.
target
.
result
;
if
(
cursor
)
{
if
(
cursor
.
value
!
=
=
"
blockList
"
)
{
this
.
set
(
cursor
.
key
cursor
.
value
)
;
}
cursor
.
continue
(
)
;
}
else
{
resolve
(
)
;
}
}
;
}
)
;
}
}
class
SnippetsProvider
{
constructor
(
dispatch
)
{
global
.
gSnippetsMap
=
new
SnippetsMap
(
dispatch
)
;
this
.
_onAction
=
this
.
_onAction
.
bind
(
this
)
;
}
get
snippetsMap
(
)
{
return
global
.
gSnippetsMap
;
}
async
_refreshSnippets
(
)
{
const
cachedVersion
=
this
.
snippetsMap
.
get
(
"
snippets
-
cached
-
version
"
)
;
if
(
cachedVersion
!
=
=
this
.
appData
.
version
)
{
this
.
snippetsMap
.
clear
(
)
;
}
const
lastUpdate
=
this
.
snippetsMap
.
get
(
"
snippets
-
last
-
update
"
)
;
const
needsUpdate
=
!
(
lastUpdate
>
=
0
)
|
|
Date
.
now
(
)
-
lastUpdate
>
SNIPPETS_UPDATE_INTERVAL_MS
;
if
(
needsUpdate
&
&
this
.
appData
.
snippetsURL
)
{
this
.
snippetsMap
.
set
(
"
snippets
-
last
-
update
"
Date
.
now
(
)
)
;
try
{
const
response
=
await
fetch
(
this
.
appData
.
snippetsURL
)
;
if
(
response
.
status
=
=
=
200
)
{
const
payload
=
await
response
.
text
(
)
;
this
.
snippetsMap
.
set
(
"
snippets
"
payload
)
;
this
.
snippetsMap
.
set
(
"
snippets
-
cached
-
version
"
this
.
appData
.
version
)
;
}
}
catch
(
e
)
{
console
.
error
(
e
)
;
}
}
}
_noSnippetFallback
(
)
{
}
_forceOnboardingVisibility
(
shouldBeVisible
)
{
const
onboardingEl
=
document
.
getElementById
(
"
onboarding
-
notification
-
bar
"
)
;
if
(
onboardingEl
)
{
onboardingEl
.
style
.
display
=
shouldBeVisible
?
"
"
:
"
none
"
;
}
}
_showRemoteSnippets
(
)
{
const
snippetsEl
=
document
.
getElementById
(
this
.
elementId
)
;
const
payload
=
this
.
snippetsMap
.
get
(
"
snippets
"
)
;
if
(
!
snippetsEl
)
{
throw
new
Error
(
No
element
was
found
with
id
'
{
this
.
elementId
}
'
.
)
;
}
if
(
!
payload
)
{
throw
new
Error
(
"
No
remote
snippets
were
found
in
gSnippetsMap
.
"
)
;
}
if
(
typeof
payload
!
=
=
"
string
"
)
{
throw
new
Error
(
"
Snippet
payload
was
incorrectly
formatted
"
)
;
}
snippetsEl
.
innerHTML
=
payload
;
for
(
const
scriptEl
of
snippetsEl
.
getElementsByTagName
(
"
script
"
)
)
{
const
relocatedScript
=
document
.
createElement
(
"
script
"
)
;
relocatedScript
.
text
=
scriptEl
.
text
;
scriptEl
.
parentNode
.
replaceChild
(
relocatedScript
scriptEl
)
;
}
}
_onAction
(
msg
)
{
if
(
msg
.
data
.
type
=
=
=
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SNIPPET_BLOCKED
)
{
if
(
!
this
.
snippetsMap
.
blockList
.
includes
(
msg
.
data
.
data
)
)
{
this
.
snippetsMap
.
set
(
"
blockList
"
this
.
snippetsMap
.
blockList
.
concat
(
msg
.
data
.
data
)
)
;
document
.
getElementById
(
"
snippets
-
container
"
)
.
style
.
display
=
"
none
"
;
}
}
}
async
init
(
options
)
{
Object
.
assign
(
this
{
appData
:
{
}
elementId
:
"
snippets
"
connect
:
true
}
options
)
;
if
(
global
.
addMessageListener
)
{
global
.
addMessageListener
(
"
ActivityStream
:
MainToContent
"
this
.
_onAction
)
;
}
if
(
this
.
connect
)
{
try
{
await
this
.
snippetsMap
.
connect
(
)
;
}
catch
(
e
)
{
console
.
error
(
e
)
;
}
}
for
(
const
key
of
Object
.
keys
(
this
.
appData
)
)
{
if
(
key
=
=
=
"
blockList
"
)
{
this
.
snippetsMap
.
set
(
"
blockList
"
this
.
appData
[
key
]
)
;
}
else
{
this
.
snippetsMap
.
set
(
appData
.
{
key
}
this
.
appData
[
key
]
)
;
}
}
await
this
.
_refreshSnippets
(
)
;
try
{
this
.
_showRemoteSnippets
(
)
;
}
catch
(
e
)
{
this
.
_noSnippetFallback
(
e
)
;
}
window
.
dispatchEvent
(
new
Event
(
SNIPPETS_ENABLED_EVENT
)
)
;
this
.
_forceOnboardingVisibility
(
true
)
;
this
.
initialized
=
true
;
}
uninit
(
)
{
window
.
dispatchEvent
(
new
Event
(
SNIPPETS_DISABLED_EVENT
)
)
;
this
.
_forceOnboardingVisibility
(
false
)
;
if
(
global
.
removeMessageListener
)
{
global
.
removeMessageListener
(
"
ActivityStream
:
MainToContent
"
this
.
_onAction
)
;
}
this
.
initialized
=
false
;
}
}
function
addSnippetsSubscriber
(
store
)
{
const
snippets
=
new
SnippetsProvider
(
store
.
dispatch
)
;
let
initializing
=
false
;
store
.
subscribe
(
async
(
)
=
>
{
const
state
=
store
.
getState
(
)
;
if
(
state
.
Prefs
.
values
[
"
feeds
.
snippets
"
]
&
&
!
state
.
Prefs
.
values
.
asrouterExperimentEnabled
&
&
!
state
.
Prefs
.
values
.
disableSnippets
&
&
state
.
Snippets
.
initialized
&
&
!
snippets
.
initialized
&
&
!
initializing
&
&
location
.
href
!
=
=
"
about
:
welcome
"
)
{
initializing
=
true
;
await
snippets
.
init
(
{
appData
:
state
.
Snippets
}
)
;
initializing
=
false
;
}
else
if
(
(
state
.
Prefs
.
values
[
"
feeds
.
snippets
"
]
=
=
=
false
|
|
state
.
Prefs
.
values
.
disableSnippets
=
=
=
true
)
&
&
snippets
.
initialized
)
{
snippets
.
uninit
(
)
;
}
if
(
state
.
Prefs
.
values
.
asrouterExperimentEnabled
)
{
Object
(
__WEBPACK_IMPORTED_MODULE_1_content_src_asrouter_asrouter_content__
[
"
b
"
]
)
(
)
;
}
}
)
;
return
snippets
;
}
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
exports
)
{
module
.
exports
=
Redux
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
var
__WEBPACK_IMPORTED_MODULE_0_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_0_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_0_react__
)
;
const
VISIBLE
=
"
visible
"
;
const
VISIBILITY_CHANGE_EVENT
=
"
visibilitychange
"
;
class
ImpressionsWrapper
extends
__WEBPACK_IMPORTED_MODULE_0_react___default
.
a
.
PureComponent
{
sendImpressionOrAddListener
(
)
{
if
(
this
.
props
.
document
.
visibilityState
=
=
=
VISIBLE
)
{
this
.
props
.
sendImpression
(
)
;
}
else
{
if
(
this
.
_onVisibilityChange
)
{
this
.
props
.
document
.
removeEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
this
.
_onVisibilityChange
=
(
)
=
>
{
if
(
this
.
props
.
document
.
visibilityState
=
=
=
VISIBLE
)
{
this
.
props
.
sendImpression
(
)
;
this
.
props
.
document
.
removeEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
}
;
this
.
props
.
document
.
addEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
}
componentWillUnmount
(
)
{
if
(
this
.
_onVisibilityChange
)
{
this
.
props
.
document
.
removeEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
}
componentDidMount
(
)
{
if
(
this
.
props
.
sendOnMount
)
{
this
.
sendImpressionOrAddListener
(
)
;
}
}
componentDidUpdate
(
prevProps
)
{
if
(
this
.
props
.
shouldSendImpressionOnUpdate
(
this
.
props
prevProps
)
)
{
this
.
sendImpressionOrAddListener
(
)
;
}
}
render
(
)
{
return
this
.
props
.
children
;
}
}
__webpack_exports__
[
"
a
"
]
=
ImpressionsWrapper
;
ImpressionsWrapper
.
defaultProps
=
{
document
:
global
.
document
sendOnMount
:
true
}
;
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
external__React_
=
__webpack_require__
(
0
)
;
var
external__React__default
=
__webpack_require__
.
n
(
external__React_
)
;
class
ModalOverlay_ModalOverlay
extends
external__React__default
.
a
.
PureComponent
{
componentWillMount
(
)
{
this
.
setState
(
{
active
:
true
}
)
;
document
.
body
.
classList
.
add
(
"
modal
-
open
"
)
;
}
componentWillUnmount
(
)
{
document
.
body
.
classList
.
remove
(
"
modal
-
open
"
)
;
this
.
setState
(
{
active
:
false
}
)
;
}
render
(
)
{
const
{
active
}
=
this
.
state
;
const
{
title
button_label
}
=
this
.
props
;
return
external__React__default
.
a
.
createElement
(
"
div
"
null
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
modalOverlayOuter
{
active
?
"
active
"
:
"
"
}
}
)
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
modalOverlayInner
{
active
?
"
active
"
:
"
"
}
}
external__React__default
.
a
.
createElement
(
"
h2
"
null
"
"
title
"
"
)
this
.
props
.
children
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
footer
"
}
external__React__default
.
a
.
createElement
(
"
button
"
{
onClick
:
this
.
props
.
onDoneButton
className
:
"
button
primary
modalButton
"
}
"
"
button_label
"
"
)
)
)
)
;
}
}
var
_extends
=
Object
.
assign
|
|
function
(
target
)
{
for
(
var
i
=
1
;
i
<
arguments
.
length
;
i
+
+
)
{
var
source
=
arguments
[
i
]
;
for
(
var
key
in
source
)
{
if
(
Object
.
prototype
.
hasOwnProperty
.
call
(
source
key
)
)
{
target
[
key
]
=
source
[
key
]
;
}
}
}
return
target
;
}
;
class
OnboardingMessage_OnboardingCard
extends
external__React__default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onClick
=
this
.
onClick
.
bind
(
this
)
;
}
onClick
(
)
{
const
{
props
}
=
this
;
props
.
sendUserActionTelemetry
(
{
event
:
"
TRY_NOW
"
message_id
:
props
.
id
}
)
;
props
.
onAction
(
props
.
content
)
;
}
render
(
)
{
const
{
content
}
=
this
.
props
;
return
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
onboardingMessage
"
}
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
onboardingMessageImage
{
content
.
icon
}
}
)
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
onboardingContent
"
}
external__React__default
.
a
.
createElement
(
"
span
"
null
external__React__default
.
a
.
createElement
(
"
h3
"
null
"
"
content
.
title
"
"
)
external__React__default
.
a
.
createElement
(
"
p
"
null
"
"
content
.
text
"
"
)
)
external__React__default
.
a
.
createElement
(
"
span
"
null
external__React__default
.
a
.
createElement
(
"
button
"
{
className
:
"
button
onboardingButton
"
onClick
:
this
.
onClick
}
"
"
content
.
button_label
"
"
)
)
)
)
;
}
}
class
OnboardingMessage_OnboardingMessage
extends
external__React__default
.
a
.
PureComponent
{
render
(
)
{
const
{
props
}
=
this
;
return
external__React__default
.
a
.
createElement
(
ModalOverlay_ModalOverlay
_extends
(
{
}
props
{
button_label
:
"
Start
Browsing
"
title
:
"
Welcome
to
Firefox
"
}
)
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
onboardingMessageContainer
"
}
props
.
bundle
.
map
(
message
=
>
external__React__default
.
a
.
createElement
(
OnboardingMessage_OnboardingCard
_extends
(
{
key
:
message
.
id
sendUserActionTelemetry
:
props
.
sendUserActionTelemetry
onAction
:
props
.
onAction
}
message
)
)
)
)
)
;
}
}
__webpack_exports__
[
"
a
"
]
=
OnboardingMessage_OnboardingMessage
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
external__React_
=
__webpack_require__
(
0
)
;
var
external__React__default
=
__webpack_require__
.
n
(
external__React_
)
;
function
safeURI
(
url
)
{
if
(
!
url
)
{
return
"
"
;
}
const
{
protocol
}
=
new
URL
(
url
)
;
const
isAllowed
=
[
"
http
:
"
"
https
:
"
"
data
:
"
"
resource
:
"
"
chrome
:
"
]
.
includes
(
protocol
)
;
if
(
!
isAllowed
)
{
console
.
warn
(
The
protocol
{
protocol
}
is
not
allowed
for
template
URLs
.
)
;
}
return
isAllowed
?
url
:
"
"
;
}
const
Button
=
props
=
>
external__React__default
.
a
.
createElement
(
"
a
"
{
href
:
safeURI
(
props
.
url
)
onClick
:
props
.
onClick
className
:
props
.
className
|
|
"
ASRouterButton
"
}
props
.
children
)
;
class
SnippetBase_SnippetBase
extends
external__React__default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onBlockClicked
=
this
.
onBlockClicked
.
bind
(
this
)
;
}
onBlockClicked
(
)
{
this
.
props
.
sendUserActionTelemetry
(
{
event
:
"
BLOCK
"
}
)
;
this
.
props
.
onBlock
(
)
;
}
render
(
)
{
const
{
props
}
=
this
;
const
containerClassName
=
SnippetBaseContainer
{
props
.
className
?
{
props
.
className
}
:
"
"
}
;
return
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
containerClassName
}
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
innerWrapper
"
}
props
.
children
)
external__React__default
.
a
.
createElement
(
"
button
"
{
className
:
"
blockButton
"
onClick
:
this
.
onBlockClicked
}
)
)
;
}
}
var
_extends
=
Object
.
assign
|
|
function
(
target
)
{
for
(
var
i
=
1
;
i
<
arguments
.
length
;
i
+
+
)
{
var
source
=
arguments
[
i
]
;
for
(
var
key
in
source
)
{
if
(
Object
.
prototype
.
hasOwnProperty
.
call
(
source
key
)
)
{
target
[
key
]
=
source
[
key
]
;
}
}
}
return
target
;
}
;
const
DEFAULT_ICON_PATH
=
"
chrome
:
/
/
branding
/
content
/
icon64
.
png
"
;
class
SimpleSnippet_SimpleSnippet
extends
external__React__default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onButtonClick
=
this
.
onButtonClick
.
bind
(
this
)
;
}
onButtonClick
(
)
{
this
.
props
.
sendUserActionTelemetry
(
{
event
:
"
CLICK_BUTTON
"
}
)
;
}
renderTitle
(
)
{
const
{
title
}
=
this
.
props
.
content
;
return
title
?
external__React__default
.
a
.
createElement
(
"
h3
"
{
className
:
"
title
"
}
title
)
:
null
;
}
renderButton
(
className
)
{
const
{
props
}
=
this
;
return
external__React__default
.
a
.
createElement
(
Button
{
className
:
className
onClick
:
this
.
onButtonClick
url
:
props
.
content
.
button_url
}
props
.
content
.
button_label
)
;
}
render
(
)
{
const
{
props
}
=
this
;
const
hasLink
=
props
.
content
.
button_url
&
&
props
.
content
.
button_type
=
=
=
"
anchor
"
;
const
hasButton
=
props
.
content
.
button_url
&
&
!
props
.
content
.
button_type
;
return
external__React__default
.
a
.
createElement
(
SnippetBase_SnippetBase
_extends
(
{
}
props
{
className
:
"
SimpleSnippet
"
}
)
external__React__default
.
a
.
createElement
(
"
img
"
{
src
:
safeURI
(
props
.
content
.
icon
)
|
|
DEFAULT_ICON_PATH
className
:
"
icon
"
}
)
external__React__default
.
a
.
createElement
(
"
div
"
null
this
.
renderTitle
(
)
"
"
external__React__default
.
a
.
createElement
(
"
p
"
{
className
:
"
body
"
}
props
.
content
.
text
)
"
"
hasLink
?
this
.
renderButton
(
"
ASRouterAnchor
"
)
:
null
)
hasButton
?
external__React__default
.
a
.
createElement
(
"
div
"
null
this
.
renderButton
(
)
)
:
null
)
;
}
}
__webpack_exports__
[
"
a
"
]
=
SimpleSnippet_SimpleSnippet
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_2_content_src_components_ASRouterAdmin_ASRouterAdmin__
=
__webpack_require__
(
26
)
;
var
__WEBPACK_IMPORTED_MODULE_3_content_src_components_ConfirmDialog_ConfirmDialog__
=
__webpack_require__
(
27
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react_redux__
=
__webpack_require__
(
4
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_4_react_redux__
)
;
var
__WEBPACK_IMPORTED_MODULE_5_content_src_components_ErrorBoundary_ErrorBoundary__
=
__webpack_require__
(
10
)
;
var
__WEBPACK_IMPORTED_MODULE_6_content_src_components_ManualMigration_ManualMigration__
=
__webpack_require__
(
28
)
;
var
__WEBPACK_IMPORTED_MODULE_7_common_PrerenderData_jsm__
=
__webpack_require__
(
29
)
;
var
__WEBPACK_IMPORTED_MODULE_8_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_8_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_8_react__
)
;
var
__WEBPACK_IMPORTED_MODULE_9_content_src_components_Search_Search__
=
__webpack_require__
(
30
)
;
var
__WEBPACK_IMPORTED_MODULE_10_content_src_components_Sections_Sections__
=
__webpack_require__
(
32
)
;
var
__WEBPACK_IMPORTED_MODULE_11_content_src_components_StartupOverlay_StartupOverlay__
=
__webpack_require__
(
38
)
;
const
PrefsButton
=
Object
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
[
"
injectIntl
"
]
)
(
props
=
>
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
prefs
-
button
"
}
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
icon
icon
-
settings
"
onClick
:
props
.
onClick
title
:
props
.
intl
.
formatMessage
(
{
id
:
"
settings_pane_button_label
"
}
)
}
)
)
)
;
function
addLocaleDataForReactIntl
(
locale
)
{
Object
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
[
"
addLocaleData
"
]
)
(
[
{
locale
parentLocale
:
"
en
"
}
]
)
;
}
class
_Base
extends
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
PureComponent
{
componentWillMount
(
)
{
const
{
App
locale
Theme
}
=
this
.
props
;
if
(
Theme
.
className
)
{
this
.
updateTheme
(
Theme
)
;
}
this
.
sendNewTabRehydrated
(
App
)
;
addLocaleDataForReactIntl
(
locale
)
;
}
componentDidMount
(
)
{
if
(
this
.
props
.
isPrerendered
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
NEW_TAB_STATE_REQUEST
}
)
)
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
PAGE_PRERENDERED
}
)
)
;
}
}
componentWillUnmount
(
)
{
this
.
updateTheme
(
{
className
:
"
"
}
)
;
}
componentWillUpdate
(
{
App
Theme
}
)
{
this
.
updateTheme
(
Theme
)
;
this
.
sendNewTabRehydrated
(
App
)
;
}
updateTheme
(
Theme
)
{
const
bodyClassName
=
[
"
activity
-
stream
"
Theme
.
className
this
.
props
.
isFirstrun
?
"
welcome
"
:
"
"
]
.
filter
(
v
=
>
v
)
.
join
(
"
"
)
;
global
.
document
.
body
.
className
=
bodyClassName
;
}
sendNewTabRehydrated
(
App
)
{
if
(
App
&
&
App
.
initialized
&
&
!
this
.
renderNotified
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
NEW_TAB_REHYDRATED
data
:
{
}
}
)
)
;
this
.
renderNotified
=
true
;
}
}
render
(
)
{
const
{
props
}
=
this
;
const
{
App
locale
strings
}
=
props
;
const
{
initialized
}
=
App
;
if
(
props
.
Prefs
.
values
.
asrouterExperimentEnabled
&
&
window
.
location
.
hash
=
=
=
"
#
asrouter
"
)
{
return
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_content_src_components_ASRouterAdmin_ASRouterAdmin__
[
"
a
"
]
null
)
;
}
if
(
!
props
.
isPrerendered
&
&
!
initialized
)
{
return
null
;
}
return
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
[
"
IntlProvider
"
]
{
locale
:
locale
messages
:
strings
}
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_5_content_src_components_ErrorBoundary_ErrorBoundary__
[
"
a
"
]
{
className
:
"
base
-
content
-
fallback
"
}
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
BaseContent
this
.
props
)
)
)
;
}
}
class
BaseContent
extends
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
openPreferences
=
this
.
openPreferences
.
bind
(
this
)
;
}
openPreferences
(
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
OnlyToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SETTINGS_OPEN
}
)
)
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
"
OPEN_NEWTAB_PREFS
"
}
)
)
;
}
render
(
)
{
const
{
props
}
=
this
;
const
{
App
}
=
props
;
const
{
initialized
}
=
App
;
const
prefs
=
props
.
Prefs
.
values
;
const
shouldBeFixedToTop
=
__WEBPACK_IMPORTED_MODULE_7_common_PrerenderData_jsm__
[
"
a
"
]
.
arePrefsValid
(
name
=
>
prefs
[
name
]
)
;
const
outerClassName
=
[
"
outer
-
wrapper
"
shouldBeFixedToTop
&
&
"
fixed
-
to
-
top
"
]
.
filter
(
v
=
>
v
)
.
join
(
"
"
)
;
return
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
"
div
"
null
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
"
div
"
{
className
:
outerClassName
}
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
"
main
"
null
prefs
.
showSearch
&
&
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
non
-
collapsible
-
section
"
}
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_5_content_src_components_ErrorBoundary_ErrorBoundary__
[
"
a
"
]
null
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_9_content_src_components_Search_Search__
[
"
a
"
]
null
)
)
)
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
"
div
"
{
className
:
body
-
wrapper
{
initialized
?
"
on
"
:
"
"
}
}
!
prefs
.
migrationExpired
&
&
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
non
-
collapsible
-
section
"
}
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_6_content_src_components_ManualMigration_ManualMigration__
[
"
a
"
]
null
)
)
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_10_content_src_components_Sections_Sections__
[
"
a
"
]
null
)
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
PrefsButton
{
onClick
:
this
.
openPreferences
}
)
)
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_3_content_src_components_ConfirmDialog_ConfirmDialog__
[
"
a
"
]
null
)
)
)
this
.
props
.
isFirstrun
&
&
__WEBPACK_IMPORTED_MODULE_8_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_11_content_src_components_StartupOverlay_StartupOverlay__
[
"
a
"
]
null
)
)
;
}
}
const
Base
=
Object
(
__WEBPACK_IMPORTED_MODULE_4_react_redux__
[
"
connect
"
]
)
(
state
=
>
(
{
App
:
state
.
App
Prefs
:
state
.
Prefs
Theme
:
state
.
Theme
}
)
)
(
_Base
)
;
__webpack_exports__
[
"
a
"
]
=
Base
;
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
=
__webpack_require__
(
7
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_react__
)
;
class
ASRouterAdmin
extends
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onMessage
=
this
.
onMessage
.
bind
(
this
)
;
this
.
findOtherBundledMessagesOfSameTemplate
=
this
.
findOtherBundledMessagesOfSameTemplate
.
bind
(
this
)
;
this
.
state
=
{
}
;
}
onMessage
(
{
data
:
action
}
)
{
if
(
action
.
type
=
=
=
"
ADMIN_SET_STATE
"
)
{
this
.
setState
(
action
.
data
)
;
}
}
componentWillMount
(
)
{
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
[
"
a
"
]
.
sendMessage
(
{
type
:
"
ADMIN_CONNECT_STATE
"
}
)
;
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
[
"
a
"
]
.
addListener
(
this
.
onMessage
)
;
}
componentWillUnmount
(
)
{
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
[
"
a
"
]
.
removeListener
(
this
.
onMessage
)
;
}
findOtherBundledMessagesOfSameTemplate
(
template
)
{
return
this
.
state
.
messages
.
filter
(
msg
=
>
msg
.
template
=
=
=
template
&
&
msg
.
bundled
)
;
}
handleBlock
(
msg
)
{
if
(
msg
.
bundled
)
{
let
bundle
=
this
.
findOtherBundledMessagesOfSameTemplate
(
msg
.
template
)
;
return
(
)
=
>
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
[
"
a
"
]
.
blockBundle
(
bundle
)
;
}
return
(
)
=
>
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
[
"
a
"
]
.
blockById
(
msg
.
id
)
;
}
handleUnblock
(
msg
)
{
if
(
msg
.
bundled
)
{
let
bundle
=
this
.
findOtherBundledMessagesOfSameTemplate
(
msg
.
template
)
;
return
(
)
=
>
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
[
"
a
"
]
.
unblockBundle
(
bundle
)
;
}
return
(
)
=
>
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
[
"
a
"
]
.
unblockById
(
msg
.
id
)
;
}
handleOverride
(
id
)
{
return
(
)
=
>
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
[
"
a
"
]
.
overrideMessage
(
id
)
;
}
renderMessageItem
(
msg
)
{
const
isCurrent
=
msg
.
id
=
=
=
this
.
state
.
currentId
;
const
isBlocked
=
this
.
state
.
blockList
.
includes
(
msg
.
id
)
;
let
itemClassName
=
"
message
-
item
"
;
if
(
isCurrent
)
{
itemClassName
+
=
"
current
"
;
}
if
(
isBlocked
)
{
itemClassName
+
=
"
blocked
"
;
}
return
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
tr
"
{
className
:
itemClassName
key
:
msg
.
id
}
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
td
"
{
className
:
"
message
-
id
"
}
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
span
"
null
msg
.
id
)
)
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
td
"
null
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
button
"
{
className
:
button
{
isBlocked
?
"
"
:
"
primary
"
}
onClick
:
isBlocked
?
this
.
handleUnblock
(
msg
)
:
this
.
handleBlock
(
msg
)
}
isBlocked
?
"
Unblock
"
:
"
Block
"
)
isBlocked
?
null
:
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
button
"
onClick
:
this
.
handleOverride
(
msg
.
id
)
}
"
Show
"
)
)
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
td
"
{
className
:
"
message
-
summary
"
}
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
pre
"
null
JSON
.
stringify
(
msg
null
2
)
)
)
)
;
}
renderMessages
(
)
{
if
(
!
this
.
state
.
messages
)
{
return
null
;
}
return
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
table
"
null
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
tbody
"
null
this
.
state
.
messages
.
map
(
msg
=
>
this
.
renderMessageItem
(
msg
)
)
)
)
;
}
renderProviders
(
)
{
return
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
table
"
null
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
tbody
"
null
this
.
state
.
providers
.
map
(
(
provider
i
)
=
>
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
tr
"
{
className
:
"
message
-
item
"
key
:
i
}
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
td
"
null
provider
.
id
)
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
td
"
null
provider
.
type
=
=
=
"
remote
"
?
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
a
"
{
target
:
"
_blank
"
href
:
provider
.
url
}
provider
.
url
)
:
"
(
local
)
"
)
)
)
)
)
;
}
render
(
)
{
return
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
asrouter
-
admin
outer
-
wrapper
"
}
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
h1
"
null
"
AS
Router
Admin
"
)
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
button
primary
"
onClick
:
__WEBPACK_IMPORTED_MODULE_0__asrouter_asrouter_content__
[
"
a
"
]
.
getNextMessage
}
"
Refresh
Current
Message
"
)
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
h2
"
null
"
Message
Providers
"
)
this
.
state
.
providers
?
this
.
renderProviders
(
)
:
null
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
h2
"
null
"
Messages
"
)
this
.
renderMessages
(
)
)
;
}
}
__webpack_exports__
[
"
a
"
]
=
ASRouterAdmin
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_redux__
=
__webpack_require__
(
4
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_react_redux__
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_3_react__
)
;
class
_ConfirmDialog
extends
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
_handleCancelBtn
=
this
.
_handleCancelBtn
.
bind
(
this
)
;
this
.
_handleConfirmBtn
=
this
.
_handleConfirmBtn
.
bind
(
this
)
;
}
_handleCancelBtn
(
)
{
this
.
props
.
dispatch
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
DIALOG_CANCEL
}
)
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
DIALOG_CANCEL
source
:
this
.
props
.
data
.
eventSource
}
)
)
;
}
_handleConfirmBtn
(
)
{
this
.
props
.
data
.
onConfirm
.
forEach
(
this
.
props
.
dispatch
)
;
}
_renderModalMessage
(
)
{
const
message_body
=
this
.
props
.
data
.
body_string_id
;
if
(
!
message_body
)
{
return
null
;
}
return
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
null
message_body
.
map
(
msg
=
>
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
p
"
{
key
:
msg
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
[
"
FormattedMessage
"
]
{
id
:
msg
}
)
)
)
)
;
}
render
(
)
{
if
(
!
this
.
props
.
visible
)
{
return
null
;
}
return
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
confirmation
-
dialog
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
modal
-
overlay
"
onClick
:
this
.
_handleCancelBtn
}
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
modal
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
section
"
{
className
:
"
modal
-
message
"
}
this
.
props
.
data
.
icon
&
&
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
{
className
:
icon
icon
-
spacer
icon
-
{
this
.
props
.
data
.
icon
}
}
)
this
.
_renderModalMessage
(
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
section
"
{
className
:
"
actions
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
button
"
{
onClick
:
this
.
_handleCancelBtn
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
[
"
FormattedMessage
"
]
{
id
:
this
.
props
.
data
.
cancel_button_string_id
}
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
done
"
onClick
:
this
.
_handleConfirmBtn
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
[
"
FormattedMessage
"
]
{
id
:
this
.
props
.
data
.
confirm_button_string_id
}
)
)
)
)
)
;
}
}
const
ConfirmDialog
=
Object
(
__WEBPACK_IMPORTED_MODULE_1_react_redux__
[
"
connect
"
]
)
(
state
=
>
state
.
Dialog
)
(
_ConfirmDialog
)
;
__webpack_exports__
[
"
a
"
]
=
ConfirmDialog
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_redux__
=
__webpack_require__
(
4
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_react_redux__
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_3_react__
)
;
class
_ManualMigration
extends
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onLaunchTour
=
this
.
onLaunchTour
.
bind
(
this
)
;
this
.
onCancelTour
=
this
.
onCancelTour
.
bind
(
this
)
;
}
onLaunchTour
(
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
MIGRATION_START
}
)
)
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
MIGRATION_START
}
)
)
;
}
onCancelTour
(
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
MIGRATION_CANCEL
}
)
)
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
MIGRATION_CANCEL
}
)
)
;
}
render
(
)
{
return
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
manual
-
migration
-
container
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
p
"
null
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
{
className
:
"
icon
icon
-
import
"
}
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
manual_migration_explanation2
"
}
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
manual
-
migration
-
actions
actions
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
dismiss
"
onClick
:
this
.
onCancelTour
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
manual_migration_cancel_button
"
}
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
button
"
{
onClick
:
this
.
onLaunchTour
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
manual_migration_import_button
"
}
)
)
)
)
;
}
}
const
ManualMigration
=
Object
(
__WEBPACK_IMPORTED_MODULE_1_react_redux__
[
"
connect
"
]
)
(
)
(
_ManualMigration
)
;
__webpack_exports__
[
"
a
"
]
=
ManualMigration
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
__webpack_require__
.
d
(
__webpack_exports__
"
a
"
function
(
)
{
return
PrerenderData
;
}
)
;
class
_PrerenderData
{
constructor
(
options
)
{
this
.
initialPrefs
=
options
.
initialPrefs
;
this
.
initialSections
=
options
.
initialSections
;
this
.
_setValidation
(
options
.
validation
)
;
}
get
validation
(
)
{
return
this
.
_validation
;
}
set
validation
(
value
)
{
this
.
_setValidation
(
value
)
;
}
get
invalidatingPrefs
(
)
{
return
this
.
_invalidatingPrefs
;
}
_setValidation
(
value
=
[
]
)
{
this
.
_validation
=
value
;
this
.
_invalidatingPrefs
=
value
.
reduce
(
(
result
next
)
=
>
{
if
(
typeof
next
=
=
=
"
string
"
)
{
result
.
push
(
next
)
;
return
result
;
}
else
if
(
next
&
&
next
.
oneOf
)
{
return
result
.
concat
(
next
.
oneOf
)
;
}
else
if
(
next
&
&
next
.
indexedDB
)
{
return
result
.
concat
(
next
.
indexedDB
)
;
}
throw
new
Error
(
"
Your
validation
configuration
is
not
properly
configured
"
)
;
}
[
]
)
;
}
arePrefsValid
(
getPref
indexedDBPrefs
)
{
for
(
const
prefs
of
this
.
validation
)
{
if
(
prefs
&
&
prefs
.
oneOf
&
&
!
prefs
.
oneOf
.
some
(
name
=
>
getPref
(
name
)
=
=
=
this
.
initialPrefs
[
name
]
)
)
{
return
false
;
}
else
if
(
indexedDBPrefs
&
&
prefs
&
&
prefs
.
indexedDB
)
{
const
anyModifiedPrefs
=
prefs
.
indexedDB
.
some
(
prefName
=
>
indexedDBPrefs
.
some
(
pref
=
>
pref
&
&
pref
[
prefName
]
)
)
;
if
(
anyModifiedPrefs
)
{
return
false
;
}
}
else
if
(
getPref
(
prefs
)
!
=
=
this
.
initialPrefs
[
prefs
]
)
{
return
false
;
}
}
return
true
;
}
}
var
PrerenderData
=
new
_PrerenderData
(
{
initialPrefs
:
{
"
migrationExpired
"
:
true
"
feeds
.
topsites
"
:
true
"
showSearch
"
:
true
"
topSitesRows
"
:
1
"
feeds
.
section
.
topstories
"
:
true
"
feeds
.
section
.
highlights
"
:
true
"
sectionOrder
"
:
"
topsites
topstories
highlights
"
"
collapsed
"
:
false
}
validation
:
[
"
feeds
.
topsites
"
"
showSearch
"
"
topSitesRows
"
"
sectionOrder
"
{
oneOf
:
[
"
feeds
.
section
.
topstories
"
"
feeds
.
section
.
highlights
"
]
}
{
indexedDB
:
[
"
collapsed
"
]
}
]
initialSections
:
[
{
enabled
:
true
icon
:
"
pocket
"
id
:
"
topstories
"
order
:
1
title
:
{
id
:
"
header_recommended_by
"
values
:
{
provider
:
"
Pocket
"
}
}
}
{
enabled
:
true
id
:
"
highlights
"
icon
:
"
highlights
"
order
:
2
title
:
{
id
:
"
header_highlights
"
}
}
]
}
)
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_0_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_1_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_redux__
=
__webpack_require__
(
4
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_2_react_redux__
)
;
var
__WEBPACK_IMPORTED_MODULE_3_content_src_lib_constants__
=
__webpack_require__
(
31
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_4_react__
)
;
class
_Search
extends
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onClick
=
this
.
onClick
.
bind
(
this
)
;
this
.
onInputMount
=
this
.
onInputMount
.
bind
(
this
)
;
}
handleEvent
(
event
)
{
if
(
event
.
detail
.
type
=
=
=
"
Search
"
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_1_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
"
SEARCH
"
}
)
)
;
}
}
onClick
(
event
)
{
window
.
gContentSearchController
.
search
(
event
)
;
}
componentWillUnmount
(
)
{
delete
window
.
gContentSearchController
;
}
onInputMount
(
input
)
{
if
(
input
)
{
const
healthReportKey
=
__WEBPACK_IMPORTED_MODULE_3_content_src_lib_constants__
[
"
a
"
]
?
"
newtab
"
:
"
abouthome
"
;
const
searchSource
=
__WEBPACK_IMPORTED_MODULE_3_content_src_lib_constants__
[
"
a
"
]
?
"
newtab
"
:
"
homepage
"
;
window
.
gContentSearchController
=
new
ContentSearchUIController
(
input
input
.
parentNode
healthReportKey
searchSource
)
;
addEventListener
(
"
ContentSearchClient
"
this
)
;
}
else
{
window
.
gContentSearchController
=
null
;
removeEventListener
(
"
ContentSearchClient
"
this
)
;
}
}
render
(
)
{
return
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
search
-
wrapper
"
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
label
"
{
htmlFor
:
"
newtab
-
search
-
text
"
className
:
"
search
-
label
"
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
span
"
{
className
:
"
sr
-
only
"
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
search_web_placeholder
"
}
)
)
)
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
input
"
{
id
:
"
newtab
-
search
-
text
"
maxLength
:
"
256
"
placeholder
:
this
.
props
.
intl
.
formatMessage
(
{
id
:
"
search_web_placeholder
"
}
)
ref
:
this
.
onInputMount
title
:
this
.
props
.
intl
.
formatMessage
(
{
id
:
"
search_web_placeholder
"
}
)
type
:
"
search
"
}
)
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
button
"
{
id
:
"
searchSubmit
"
className
:
"
search
-
button
"
onClick
:
this
.
onClick
title
:
this
.
props
.
intl
.
formatMessage
(
{
id
:
"
search_button
"
}
)
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
"
span
"
{
className
:
"
sr
-
only
"
}
__WEBPACK_IMPORTED_MODULE_4_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
search_button
"
}
)
)
)
)
;
}
}
const
Search
=
Object
(
__WEBPACK_IMPORTED_MODULE_2_react_redux__
[
"
connect
"
]
)
(
)
(
Object
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
injectIntl
"
]
)
(
_Search
)
)
;
__webpack_exports__
[
"
a
"
]
=
Search
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
const
IS_NEWTAB
=
global
.
document
&
&
global
.
document
.
documentURI
=
=
=
"
about
:
newtab
"
;
__webpack_exports__
[
"
a
"
]
=
IS_NEWTAB
;
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
var
__WEBPACK_IMPORTED_MODULE_0_content_src_components_Card_Card__
=
__webpack_require__
(
33
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_2_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_3_content_src_components_CollapsibleSection_CollapsibleSection__
=
__webpack_require__
(
14
)
;
var
__WEBPACK_IMPORTED_MODULE_4_content_src_components_ComponentPerfTimer_ComponentPerfTimer__
=
__webpack_require__
(
16
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react_redux__
=
__webpack_require__
(
4
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_5_react_redux__
)
;
var
__WEBPACK_IMPORTED_MODULE_6_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_6_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_6_react__
)
;
var
__WEBPACK_IMPORTED_MODULE_7_content_src_components_Topics_Topics__
=
__webpack_require__
(
35
)
;
var
__WEBPACK_IMPORTED_MODULE_8_content_src_components_TopSites_TopSites__
=
__webpack_require__
(
36
)
;
var
_extends
=
Object
.
assign
|
|
function
(
target
)
{
for
(
var
i
=
1
;
i
<
arguments
.
length
;
i
+
+
)
{
var
source
=
arguments
[
i
]
;
for
(
var
key
in
source
)
{
if
(
Object
.
prototype
.
hasOwnProperty
.
call
(
source
key
)
)
{
target
[
key
]
=
source
[
key
]
;
}
}
}
return
target
;
}
;
const
VISIBLE
=
"
visible
"
;
const
VISIBILITY_CHANGE_EVENT
=
"
visibilitychange
"
;
const
CARDS_PER_ROW
=
3
;
function
getFormattedMessage
(
message
)
{
return
typeof
message
=
=
=
"
string
"
?
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
span
"
null
message
)
:
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
[
"
FormattedMessage
"
]
message
)
;
}
class
Section
extends
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
PureComponent
{
_dispatchImpressionStats
(
)
{
const
{
props
}
=
this
;
const
maxCards
=
3
*
props
.
maxRows
;
const
cards
=
props
.
rows
.
slice
(
0
maxCards
)
;
if
(
this
.
needsImpressionStats
(
cards
)
)
{
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_2_common_Actions_jsm__
[
"
b
"
]
.
ImpressionStats
(
{
source
:
props
.
eventSource
tiles
:
cards
.
map
(
link
=
>
(
{
id
:
link
.
guid
}
)
)
}
)
)
;
this
.
impressionCardGuids
=
cards
.
map
(
link
=
>
link
.
guid
)
;
}
}
sendImpressionStatsOrAddListener
(
)
{
const
{
props
}
=
this
;
if
(
!
props
.
shouldSendImpressionStats
|
|
!
props
.
dispatch
)
{
return
;
}
if
(
props
.
document
.
visibilityState
=
=
=
VISIBLE
)
{
this
.
_dispatchImpressionStats
(
)
;
}
else
{
if
(
this
.
_onVisibilityChange
)
{
props
.
document
.
removeEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
this
.
_onVisibilityChange
=
(
)
=
>
{
if
(
props
.
document
.
visibilityState
=
=
=
VISIBLE
)
{
if
(
!
this
.
props
.
pref
.
collapsed
)
{
this
.
_dispatchImpressionStats
(
)
;
}
props
.
document
.
removeEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
}
;
props
.
document
.
addEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
}
componentDidMount
(
)
{
if
(
this
.
props
.
rows
.
length
&
&
!
this
.
props
.
pref
.
collapsed
)
{
this
.
sendImpressionStatsOrAddListener
(
)
;
}
}
componentDidUpdate
(
prevProps
)
{
const
{
props
}
=
this
;
const
isCollapsed
=
props
.
pref
.
collapsed
;
const
wasCollapsed
=
prevProps
.
pref
.
collapsed
;
if
(
props
.
rows
.
length
&
&
(
props
.
rows
!
=
=
prevProps
.
rows
&
&
!
isCollapsed
|
|
wasCollapsed
&
&
!
isCollapsed
)
)
{
this
.
sendImpressionStatsOrAddListener
(
)
;
}
}
componentWillUnmount
(
)
{
if
(
this
.
_onVisibilityChange
)
{
this
.
props
.
document
.
removeEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
}
needsImpressionStats
(
cards
)
{
if
(
!
this
.
impressionCardGuids
|
|
this
.
impressionCardGuids
.
length
!
=
=
cards
.
length
)
{
return
true
;
}
for
(
let
i
=
0
;
i
<
cards
.
length
;
i
+
+
)
{
if
(
cards
[
i
]
.
guid
!
=
=
this
.
impressionCardGuids
[
i
]
)
{
return
true
;
}
}
return
false
;
}
numberOfPlaceholders
(
items
)
{
if
(
items
=
=
=
0
)
{
return
CARDS_PER_ROW
;
}
const
remainder
=
items
%
CARDS_PER_ROW
;
if
(
remainder
=
=
=
0
)
{
return
0
;
}
return
CARDS_PER_ROW
-
remainder
;
}
render
(
)
{
const
{
id
eventSource
title
icon
rows
emptyState
dispatch
maxRows
contextMenuOptions
initialized
disclaimer
pref
privacyNoticeURL
isFirst
isLast
}
=
this
.
props
;
const
maxCards
=
CARDS_PER_ROW
*
maxRows
;
const
shouldShowTopics
=
id
=
=
=
"
topstories
"
&
&
(
!
this
.
props
.
topics
|
|
this
.
props
.
topics
.
length
>
0
)
;
const
realRows
=
rows
.
slice
(
0
maxCards
)
;
const
placeholders
=
this
.
numberOfPlaceholders
(
realRows
.
length
)
;
const
shouldShowEmptyState
=
initialized
&
&
!
rows
.
length
;
return
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_4_content_src_components_ComponentPerfTimer_ComponentPerfTimer__
[
"
a
"
]
this
.
props
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_3_content_src_components_CollapsibleSection_CollapsibleSection__
[
"
a
"
]
{
className
:
"
section
"
icon
:
icon
title
:
title
id
:
id
eventSource
:
eventSource
disclaimer
:
disclaimer
collapsed
:
this
.
props
.
pref
.
collapsed
showPrefName
:
pref
&
&
pref
.
feed
|
|
id
privacyNoticeURL
:
privacyNoticeURL
Prefs
:
this
.
props
.
Prefs
isFirst
:
isFirst
isLast
:
isLast
dispatch
:
this
.
props
.
dispatch
isWebExtension
:
this
.
props
.
isWebExtension
}
!
shouldShowEmptyState
&
&
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
ul
"
{
className
:
"
section
-
list
"
style
:
{
padding
:
0
}
}
realRows
.
map
(
(
link
index
)
=
>
link
&
&
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_content_src_components_Card_Card__
[
"
a
"
]
{
key
:
index
index
:
index
dispatch
:
dispatch
link
:
link
contextMenuOptions
:
contextMenuOptions
eventSource
:
eventSource
shouldSendImpressionStats
:
this
.
props
.
shouldSendImpressionStats
isWebExtension
:
this
.
props
.
isWebExtension
}
)
)
placeholders
>
0
&
&
[
.
.
.
new
Array
(
placeholders
)
]
.
map
(
(
_
i
)
=
>
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_content_src_components_Card_Card__
[
"
b
"
]
{
key
:
i
}
)
)
)
shouldShowEmptyState
&
&
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
section
-
empty
-
state
"
}
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
empty
-
state
"
}
emptyState
.
icon
&
&
emptyState
.
icon
.
startsWith
(
"
moz
-
extension
:
/
/
"
)
?
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
img
"
{
className
:
"
empty
-
state
-
icon
icon
"
style
:
{
"
background
-
image
"
:
url
(
'
{
emptyState
.
icon
}
'
)
}
}
)
:
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
img
"
{
className
:
empty
-
state
-
icon
icon
icon
-
{
emptyState
.
icon
}
}
)
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
p
"
{
className
:
"
empty
-
state
-
message
"
}
getFormattedMessage
(
emptyState
.
message
)
)
)
)
shouldShowTopics
&
&
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_7_content_src_components_Topics_Topics__
[
"
a
"
]
{
topics
:
this
.
props
.
topics
read_more_endpoint
:
this
.
props
.
read_more_endpoint
}
)
)
)
;
}
}
Section
.
defaultProps
=
{
document
:
global
.
document
rows
:
[
]
emptyState
:
{
}
pref
:
{
}
title
:
"
"
}
;
const
SectionIntl
=
Object
(
__WEBPACK_IMPORTED_MODULE_5_react_redux__
[
"
connect
"
]
)
(
state
=
>
(
{
Prefs
:
state
.
Prefs
}
)
)
(
Object
(
__WEBPACK_IMPORTED_MODULE_1_react_intl__
[
"
injectIntl
"
]
)
(
Section
)
)
;
class
_Sections
extends
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
PureComponent
{
renderSections
(
)
{
const
sections
=
[
]
;
const
enabledSections
=
this
.
props
.
Sections
.
filter
(
section
=
>
section
.
enabled
)
;
const
{
sectionOrder
"
feeds
.
topsites
"
:
showTopSites
}
=
this
.
props
.
Prefs
.
values
;
const
expectedCount
=
enabledSections
.
length
+
~
~
showTopSites
;
for
(
const
sectionId
of
sectionOrder
.
split
(
"
"
)
)
{
const
commonProps
=
{
key
:
sectionId
isFirst
:
sections
.
length
=
=
=
0
isLast
:
sections
.
length
=
=
=
expectedCount
-
1
}
;
if
(
sectionId
=
=
=
"
topsites
"
&
&
showTopSites
)
{
sections
.
push
(
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_8_content_src_components_TopSites_TopSites__
[
"
a
"
]
commonProps
)
)
;
}
else
{
const
section
=
enabledSections
.
find
(
s
=
>
s
.
id
=
=
=
sectionId
)
;
if
(
section
)
{
sections
.
push
(
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
SectionIntl
_extends
(
{
}
section
commonProps
)
)
)
;
}
}
}
return
sections
;
}
render
(
)
{
return
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
sections
-
list
"
}
this
.
renderSections
(
)
)
;
}
}
const
Sections
=
Object
(
__WEBPACK_IMPORTED_MODULE_5_react_redux__
[
"
connect
"
]
)
(
state
=
>
(
{
Sections
:
state
.
Sections
Prefs
:
state
.
Prefs
}
)
)
(
_Sections
)
;
__webpack_exports__
[
"
a
"
]
=
Sections
;
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
Actions
=
__webpack_require__
(
1
)
;
const
cardContextTypes
=
{
history
:
{
intlID
:
"
type_label_visited
"
icon
:
"
historyItem
"
}
bookmark
:
{
intlID
:
"
type_label_bookmarked
"
icon
:
"
bookmark
-
added
"
}
trending
:
{
intlID
:
"
type_label_recommended
"
icon
:
"
trending
"
}
now
:
{
intlID
:
"
type_label_now
"
icon
:
"
now
"
}
pocket
:
{
intlID
:
"
type_label_pocket
"
icon
:
"
pocket
"
}
download
:
{
intlID
:
"
type_label_downloaded
"
icon
:
"
download
"
}
}
;
var
external__ReactRedux_
=
__webpack_require__
(
4
)
;
var
external__ReactRedux__default
=
__webpack_require__
.
n
(
external__ReactRedux_
)
;
var
external__ReactIntl_
=
__webpack_require__
(
2
)
;
var
external__ReactIntl__default
=
__webpack_require__
.
n
(
external__ReactIntl_
)
;
var
link_menu_options
=
__webpack_require__
(
11
)
;
var
LinkMenu
=
__webpack_require__
(
12
)
;
var
external__React_
=
__webpack_require__
(
0
)
;
var
external__React__default
=
__webpack_require__
.
n
(
external__React_
)
;
const
gImageLoading
=
new
Map
(
)
;
class
Card__Card
extends
external__React__default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
state
=
{
activeCard
:
null
imageLoaded
:
false
showContextMenu
:
false
}
;
this
.
onMenuButtonClick
=
this
.
onMenuButtonClick
.
bind
(
this
)
;
this
.
onMenuUpdate
=
this
.
onMenuUpdate
.
bind
(
this
)
;
this
.
onLinkClick
=
this
.
onLinkClick
.
bind
(
this
)
;
}
async
maybeLoadImage
(
)
{
const
{
image
}
=
this
.
props
.
link
;
if
(
!
this
.
state
.
imageLoaded
&
&
image
)
{
if
(
!
gImageLoading
.
has
(
image
)
)
{
const
loaderPromise
=
new
Promise
(
(
resolve
reject
)
=
>
{
const
loader
=
new
Image
(
)
;
loader
.
addEventListener
(
"
load
"
resolve
)
;
loader
.
addEventListener
(
"
error
"
reject
)
;
loader
.
src
=
image
;
}
)
;
gImageLoading
.
set
(
image
loaderPromise
)
;
loaderPromise
.
catch
(
ex
=
>
ex
)
.
then
(
(
)
=
>
gImageLoading
.
delete
(
image
)
)
.
catch
(
)
;
}
await
gImageLoading
.
get
(
image
)
;
if
(
this
.
props
.
link
.
image
=
=
=
image
&
&
!
this
.
state
.
imageLoaded
)
{
this
.
setState
(
{
imageLoaded
:
true
}
)
;
}
}
}
onMenuButtonClick
(
event
)
{
event
.
preventDefault
(
)
;
this
.
setState
(
{
activeCard
:
this
.
props
.
index
showContextMenu
:
true
}
)
;
}
_getTelemetryInfo
(
)
{
if
(
this
.
props
.
link
.
type
!
=
=
"
history
"
)
{
return
{
value
:
{
card_type
:
this
.
props
.
link
.
type
}
}
;
}
return
null
;
}
onLinkClick
(
event
)
{
event
.
preventDefault
(
)
;
if
(
this
.
props
.
link
.
type
=
=
=
"
download
"
)
{
this
.
props
.
dispatch
(
Actions
[
"
b
"
]
.
OnlyToMain
(
{
type
:
Actions
[
"
c
"
]
.
SHOW_DOWNLOAD_FILE
data
:
this
.
props
.
link
}
)
)
;
}
else
{
const
{
altKey
button
ctrlKey
metaKey
shiftKey
}
=
event
;
this
.
props
.
dispatch
(
Actions
[
"
b
"
]
.
OnlyToMain
(
{
type
:
Actions
[
"
c
"
]
.
OPEN_LINK
data
:
Object
.
assign
(
this
.
props
.
link
{
event
:
{
altKey
button
ctrlKey
metaKey
shiftKey
}
}
)
}
)
)
;
}
if
(
this
.
props
.
isWebExtension
)
{
this
.
props
.
dispatch
(
Actions
[
"
b
"
]
.
WebExtEvent
(
Actions
[
"
c
"
]
.
WEBEXT_CLICK
{
source
:
this
.
props
.
eventSource
url
:
this
.
props
.
link
.
url
action_position
:
this
.
props
.
index
}
)
)
;
}
else
{
this
.
props
.
dispatch
(
Actions
[
"
b
"
]
.
UserEvent
(
Object
.
assign
(
{
event
:
"
CLICK
"
source
:
this
.
props
.
eventSource
action_position
:
this
.
props
.
index
}
this
.
_getTelemetryInfo
(
)
)
)
)
;
if
(
this
.
props
.
shouldSendImpressionStats
)
{
this
.
props
.
dispatch
(
Actions
[
"
b
"
]
.
ImpressionStats
(
{
source
:
this
.
props
.
eventSource
click
:
0
tiles
:
[
{
id
:
this
.
props
.
link
.
guid
pos
:
this
.
props
.
index
}
]
}
)
)
;
}
}
}
onMenuUpdate
(
showContextMenu
)
{
this
.
setState
(
{
showContextMenu
}
)
;
}
componentDidMount
(
)
{
this
.
maybeLoadImage
(
)
;
}
componentDidUpdate
(
)
{
this
.
maybeLoadImage
(
)
;
}
componentWillReceiveProps
(
nextProps
)
{
if
(
nextProps
.
link
.
image
!
=
=
this
.
props
.
link
.
image
)
{
this
.
setState
(
{
imageLoaded
:
false
}
)
;
}
}
render
(
)
{
const
{
index
link
dispatch
contextMenuOptions
eventSource
shouldSendImpressionStats
}
=
this
.
props
;
const
{
props
}
=
this
;
const
isContextMenuOpen
=
this
.
state
.
showContextMenu
&
&
this
.
state
.
activeCard
=
=
=
index
;
const
{
icon
intlID
}
=
cardContextTypes
[
link
.
type
=
=
=
"
now
"
?
"
trending
"
:
link
.
type
]
|
|
{
}
;
const
hasImage
=
link
.
image
|
|
link
.
hasImage
;
const
imageStyle
=
{
backgroundImage
:
link
.
image
?
url
(
{
link
.
image
}
)
:
"
none
"
}
;
return
external__React__default
.
a
.
createElement
(
"
li
"
{
className
:
card
-
outer
{
isContextMenuOpen
?
"
active
"
:
"
"
}
{
props
.
placeholder
?
"
placeholder
"
:
"
"
}
}
external__React__default
.
a
.
createElement
(
"
a
"
{
href
:
link
.
type
=
=
=
"
pocket
"
?
link
.
open_url
:
link
.
url
onClick
:
!
props
.
placeholder
?
this
.
onLinkClick
:
undefined
}
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
card
"
}
hasImage
&
&
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
card
-
preview
-
image
-
outer
"
}
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
card
-
preview
-
image
{
this
.
state
.
imageLoaded
?
"
loaded
"
:
"
"
}
style
:
imageStyle
}
)
)
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
card
-
details
{
hasImage
?
"
"
:
"
no
-
image
"
}
}
link
.
type
=
=
=
"
download
"
&
&
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
card
-
download
-
icon
icon
icon
-
download
-
folder
"
}
)
link
.
type
=
=
=
"
download
"
&
&
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
card
-
host
-
name
alternate
"
}
external__React__default
.
a
.
createElement
(
external__ReactIntl_
[
"
FormattedMessage
"
]
{
id
:
Object
(
link_menu_options
[
"
a
"
]
)
(
this
.
props
.
platform
)
}
)
)
link
.
hostname
&
&
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
card
-
host
-
name
"
}
link
.
hostname
)
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
[
"
card
-
text
"
icon
?
"
"
:
"
no
-
context
"
link
.
description
?
"
"
:
"
no
-
description
"
link
.
hostname
?
"
"
:
"
no
-
host
-
name
"
hasImage
?
"
"
:
"
no
-
image
"
]
.
join
(
"
"
)
}
external__React__default
.
a
.
createElement
(
"
h4
"
{
className
:
"
card
-
title
"
dir
:
"
auto
"
}
link
.
title
)
external__React__default
.
a
.
createElement
(
"
p
"
{
className
:
"
card
-
description
"
dir
:
"
auto
"
}
link
.
description
)
)
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
card
-
context
"
}
icon
&
&
!
link
.
context
&
&
external__React__default
.
a
.
createElement
(
"
span
"
{
className
:
card
-
context
-
icon
icon
icon
-
{
icon
}
}
)
link
.
icon
&
&
link
.
context
&
&
external__React__default
.
a
.
createElement
(
"
span
"
{
className
:
"
card
-
context
-
icon
icon
"
style
:
{
backgroundImage
:
url
(
'
{
link
.
icon
}
'
)
}
}
)
intlID
&
&
!
link
.
context
&
&
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
card
-
context
-
label
"
}
external__React__default
.
a
.
createElement
(
external__ReactIntl_
[
"
FormattedMessage
"
]
{
id
:
intlID
defaultMessage
:
"
Visited
"
}
)
)
link
.
context
&
&
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
card
-
context
-
label
"
}
link
.
context
)
)
)
)
)
!
props
.
placeholder
&
&
external__React__default
.
a
.
createElement
(
"
button
"
{
className
:
"
context
-
menu
-
button
icon
"
onClick
:
this
.
onMenuButtonClick
}
external__React__default
.
a
.
createElement
(
"
span
"
{
className
:
"
sr
-
only
"
}
Open
context
menu
for
{
link
.
title
}
)
)
isContextMenuOpen
&
&
external__React__default
.
a
.
createElement
(
LinkMenu
[
"
a
"
]
{
dispatch
:
dispatch
index
:
index
source
:
eventSource
onUpdate
:
this
.
onMenuUpdate
options
:
link
.
contextMenuOptions
|
|
contextMenuOptions
site
:
link
siteInfo
:
this
.
_getTelemetryInfo
(
)
shouldSendImpressionStats
:
shouldSendImpressionStats
}
)
)
;
}
}
Card__Card
.
defaultProps
=
{
link
:
{
}
}
;
const
Card
=
Object
(
external__ReactRedux_
[
"
connect
"
]
)
(
state
=
>
(
{
platform
:
state
.
Prefs
.
values
.
platform
}
)
)
(
Card__Card
)
;
__webpack_exports__
[
"
a
"
]
=
Card
;
const
PlaceholderCard
=
(
)
=
>
external__React__default
.
a
.
createElement
(
Card
{
placeholder
:
true
}
)
;
__webpack_exports__
[
"
b
"
]
=
PlaceholderCard
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_content_src_components_ContextMenu_ContextMenu__
=
__webpack_require__
(
13
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_3_react__
)
;
var
__WEBPACK_IMPORTED_MODULE_4_content_src_lib_section_menu_options__
=
__webpack_require__
(
15
)
;
const
DEFAULT_SECTION_MENU_OPTIONS
=
[
"
MoveUp
"
"
MoveDown
"
"
Separator
"
"
RemoveSection
"
"
CheckCollapsed
"
"
Separator
"
"
ManageSection
"
]
;
const
WEBEXT_SECTION_MENU_OPTIONS
=
[
"
MoveUp
"
"
MoveDown
"
"
Separator
"
"
CheckCollapsed
"
"
Separator
"
"
ManageWebExtension
"
]
;
class
_SectionMenu
extends
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
PureComponent
{
getOptions
(
)
{
const
{
props
}
=
this
;
const
propOptions
=
props
.
isWebExtension
?
[
.
.
.
WEBEXT_SECTION_MENU_OPTIONS
]
:
[
.
.
.
DEFAULT_SECTION_MENU_OPTIONS
]
;
if
(
props
.
extraOptions
)
{
propOptions
.
splice
(
0
0
.
.
.
props
.
extraOptions
"
Separator
"
)
;
}
if
(
props
.
privacyNoticeURL
)
{
propOptions
.
splice
(
-
1
0
"
PrivacyNotice
"
)
;
}
const
options
=
propOptions
.
map
(
o
=
>
__WEBPACK_IMPORTED_MODULE_4_content_src_lib_section_menu_options__
[
"
a
"
]
[
o
]
(
props
)
)
.
map
(
option
=
>
{
const
{
action
id
type
userEvent
}
=
option
;
if
(
!
type
&
&
id
)
{
option
.
label
=
props
.
intl
.
formatMessage
(
{
id
}
)
;
option
.
onClick
=
(
)
=
>
{
props
.
dispatch
(
action
)
;
if
(
userEvent
)
{
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
userEvent
source
:
props
.
source
}
)
)
;
}
}
;
}
return
option
;
}
)
;
options
[
0
]
.
first
=
true
;
options
[
options
.
length
-
1
]
.
last
=
true
;
return
options
;
}
render
(
)
{
return
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_1_content_src_components_ContextMenu_ContextMenu__
[
"
a
"
]
{
onUpdate
:
this
.
props
.
onUpdate
options
:
this
.
getOptions
(
)
}
)
;
}
}
const
SectionMenu
=
Object
(
__WEBPACK_IMPORTED_MODULE_2_react_intl__
[
"
injectIntl
"
]
)
(
_SectionMenu
)
;
__webpack_exports__
[
"
a
"
]
=
SectionMenu
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_0_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_1_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_1_react__
)
;
class
Topic
extends
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
PureComponent
{
render
(
)
{
const
{
url
name
}
=
this
.
props
;
return
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
li
"
null
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
a
"
{
key
:
name
className
:
"
topic
-
link
"
href
:
url
}
name
)
)
;
}
}
class
Topics
extends
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
PureComponent
{
render
(
)
{
const
{
topics
read_more_endpoint
}
=
this
.
props
;
return
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
topic
"
}
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
span
"
null
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
pocket_read_more
"
}
)
)
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
ul
"
null
topics
&
&
topics
.
map
(
t
=
>
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
Topic
{
key
:
t
.
name
url
:
t
.
url
name
:
t
.
name
}
)
)
)
read_more_endpoint
&
&
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
"
a
"
{
className
:
"
topic
-
read
-
more
"
href
:
read_more_endpoint
}
__WEBPACK_IMPORTED_MODULE_1_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
pocket_read_even_more
"
}
)
)
)
;
}
}
__webpack_exports__
[
"
a
"
]
=
Topics
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1__TopSitesConstants__
=
__webpack_require__
(
5
)
;
var
__WEBPACK_IMPORTED_MODULE_2_content_src_components_CollapsibleSection_CollapsibleSection__
=
__webpack_require__
(
14
)
;
var
__WEBPACK_IMPORTED_MODULE_3_content_src_components_ComponentPerfTimer_ComponentPerfTimer__
=
__webpack_require__
(
16
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react_redux__
=
__webpack_require__
(
4
)
;
var
__WEBPACK_IMPORTED_MODULE_4_react_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_4_react_redux__
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_5_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_5_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_6_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_6_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_6_react__
)
;
var
__WEBPACK_IMPORTED_MODULE_7_common_Reducers_jsm__
=
__webpack_require__
(
6
)
;
var
__WEBPACK_IMPORTED_MODULE_8__TopSiteForm__
=
__webpack_require__
(
37
)
;
var
__WEBPACK_IMPORTED_MODULE_9__TopSite__
=
__webpack_require__
(
18
)
;
var
_extends
=
Object
.
assign
|
|
function
(
target
)
{
for
(
var
i
=
1
;
i
<
arguments
.
length
;
i
+
+
)
{
var
source
=
arguments
[
i
]
;
for
(
var
key
in
source
)
{
if
(
Object
.
prototype
.
hasOwnProperty
.
call
(
source
key
)
)
{
target
[
key
]
=
source
[
key
]
;
}
}
}
return
target
;
}
;
function
topSiteIconType
(
link
)
{
if
(
link
.
customScreenshotURL
)
{
return
"
custom_screenshot
"
;
}
if
(
link
.
tippyTopIcon
|
|
link
.
faviconRef
=
=
=
"
tippytop
"
)
{
return
"
tippytop
"
;
}
if
(
link
.
faviconSize
>
=
__WEBPACK_IMPORTED_MODULE_1__TopSitesConstants__
[
"
b
"
]
)
{
return
"
rich_icon
"
;
}
if
(
link
.
screenshot
&
&
link
.
faviconSize
>
=
__WEBPACK_IMPORTED_MODULE_1__TopSitesConstants__
[
"
a
"
]
)
{
return
"
screenshot_with_icon
"
;
}
if
(
link
.
screenshot
)
{
return
"
screenshot
"
;
}
return
"
no_image
"
;
}
function
countTopSitesIconsTypes
(
topSites
)
{
const
countTopSitesTypes
=
(
acc
link
)
=
>
{
acc
[
topSiteIconType
(
link
)
]
+
+
;
return
acc
;
}
;
return
topSites
.
reduce
(
countTopSitesTypes
{
"
custom_screenshot
"
:
0
"
screenshot_with_icon
"
:
0
"
screenshot
"
:
0
"
tippytop
"
:
0
"
rich_icon
"
:
0
"
no_image
"
:
0
}
)
;
}
class
_TopSites
extends
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onFormClose
=
this
.
onFormClose
.
bind
(
this
)
;
}
_dispatchTopSitesStats
(
)
{
const
topSites
=
this
.
_getVisibleTopSites
(
)
;
const
topSitesIconsStats
=
countTopSitesIconsTypes
(
topSites
)
;
const
topSitesPinned
=
topSites
.
filter
(
site
=
>
!
!
site
.
isPinned
)
.
length
;
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SAVE_SESSION_PERF_DATA
data
:
{
topsites_icon_stats
:
topSitesIconsStats
topsites_pinned
:
topSitesPinned
}
}
)
)
;
}
_getVisibleTopSites
(
)
{
let
sitesPerRow
=
__WEBPACK_IMPORTED_MODULE_7_common_Reducers_jsm__
[
"
a
"
]
;
if
(
!
global
.
matchMedia
(
(
min
-
width
:
1072px
)
)
.
matches
)
{
sitesPerRow
-
=
2
;
}
return
this
.
props
.
TopSites
.
rows
.
slice
(
0
this
.
props
.
TopSitesRows
*
sitesPerRow
)
;
}
componentDidUpdate
(
)
{
this
.
_dispatchTopSitesStats
(
)
;
}
componentDidMount
(
)
{
this
.
_dispatchTopSitesStats
(
)
;
}
onFormClose
(
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
source
:
__WEBPACK_IMPORTED_MODULE_1__TopSitesConstants__
[
"
d
"
]
event
:
"
TOP_SITES_EDIT_CLOSE
"
}
)
)
;
this
.
props
.
dispatch
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
TOP_SITES_CANCEL_EDIT
}
)
;
}
render
(
)
{
const
{
props
}
=
this
;
const
{
editForm
}
=
props
.
TopSites
;
return
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_3_content_src_components_ComponentPerfTimer_ComponentPerfTimer__
[
"
a
"
]
{
id
:
"
topsites
"
initialized
:
props
.
TopSites
.
initialized
dispatch
:
props
.
dispatch
}
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_2_content_src_components_CollapsibleSection_CollapsibleSection__
[
"
a
"
]
{
className
:
"
top
-
sites
"
icon
:
"
topsites
"
id
:
"
topsites
"
title
:
{
id
:
"
header_top_sites
"
}
extraMenuOptions
:
[
"
AddTopSite
"
]
showPrefName
:
"
feeds
.
topsites
"
eventSource
:
__WEBPACK_IMPORTED_MODULE_1__TopSitesConstants__
[
"
d
"
]
collapsed
:
props
.
TopSites
.
pref
?
props
.
TopSites
.
pref
.
collapsed
:
undefined
isFirst
:
props
.
isFirst
isLast
:
props
.
isLast
dispatch
:
props
.
dispatch
}
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_9__TopSite__
[
"
b
"
]
{
TopSites
:
props
.
TopSites
TopSitesRows
:
props
.
TopSitesRows
dispatch
:
props
.
dispatch
intl
:
props
.
intl
topSiteIconType
:
topSiteIconType
}
)
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
edit
-
topsites
-
wrapper
"
}
editForm
&
&
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
edit
-
topsites
"
}
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
modal
-
overlay
"
onClick
:
this
.
onFormClose
}
)
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
modal
"
}
__WEBPACK_IMPORTED_MODULE_6_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_8__TopSiteForm__
[
"
a
"
]
_extends
(
{
site
:
props
.
TopSites
.
rows
[
editForm
.
index
]
onClose
:
this
.
onFormClose
dispatch
:
this
.
props
.
dispatch
intl
:
this
.
props
.
intl
}
editForm
)
)
)
)
)
)
)
;
}
}
const
TopSites
=
Object
(
__WEBPACK_IMPORTED_MODULE_4_react_redux__
[
"
connect
"
]
)
(
state
=
>
(
{
TopSites
:
state
.
TopSites
Prefs
:
state
.
Prefs
TopSitesRows
:
state
.
Prefs
.
values
.
topSitesRows
}
)
)
(
Object
(
__WEBPACK_IMPORTED_MODULE_5_react_intl__
[
"
injectIntl
"
]
)
(
_TopSites
)
)
;
__webpack_exports__
[
"
a
"
]
=
TopSites
;
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
Actions
=
__webpack_require__
(
1
)
;
var
external__ReactIntl_
=
__webpack_require__
(
2
)
;
var
external__ReactIntl__default
=
__webpack_require__
.
n
(
external__ReactIntl_
)
;
var
external__React_
=
__webpack_require__
(
0
)
;
var
external__React__default
=
__webpack_require__
.
n
(
external__React_
)
;
var
TopSitesConstants
=
__webpack_require__
(
5
)
;
class
TopSiteFormInput_TopSiteFormInput
extends
external__React__default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
state
=
{
validationError
:
this
.
props
.
validationError
}
;
this
.
onChange
=
this
.
onChange
.
bind
(
this
)
;
this
.
onMount
=
this
.
onMount
.
bind
(
this
)
;
}
componentWillReceiveProps
(
nextProps
)
{
if
(
nextProps
.
shouldFocus
&
&
!
this
.
props
.
shouldFocus
)
{
this
.
input
.
focus
(
)
;
}
if
(
nextProps
.
validationError
&
&
!
this
.
props
.
validationError
)
{
this
.
setState
(
{
validationError
:
true
}
)
;
}
if
(
this
.
state
.
validationError
&
&
!
nextProps
.
value
)
{
this
.
setState
(
{
validationError
:
false
}
)
;
}
}
onChange
(
ev
)
{
if
(
this
.
state
.
validationError
)
{
this
.
setState
(
{
validationError
:
false
}
)
;
}
this
.
props
.
onChange
(
ev
)
;
}
onMount
(
input
)
{
this
.
input
=
input
;
}
render
(
)
{
const
showClearButton
=
this
.
props
.
value
&
&
this
.
props
.
onClear
;
const
{
typeUrl
}
=
this
.
props
;
const
{
validationError
}
=
this
.
state
;
return
external__React__default
.
a
.
createElement
(
"
label
"
null
external__React__default
.
a
.
createElement
(
external__ReactIntl_
[
"
FormattedMessage
"
]
{
id
:
this
.
props
.
titleId
}
)
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
field
{
typeUrl
?
"
url
"
:
"
"
}
{
validationError
?
"
invalid
"
:
"
"
}
}
this
.
props
.
loading
?
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
loading
-
container
"
}
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
loading
-
animation
"
}
)
)
:
showClearButton
&
&
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
icon
icon
-
clear
-
input
"
onClick
:
this
.
props
.
onClear
}
)
external__React__default
.
a
.
createElement
(
"
input
"
{
type
:
"
text
"
value
:
this
.
props
.
value
ref
:
this
.
onMount
onChange
:
this
.
onChange
placeholder
:
this
.
props
.
intl
.
formatMessage
(
{
id
:
this
.
props
.
placeholderId
}
)
autoFocus
:
this
.
props
.
shouldFocus
disabled
:
this
.
props
.
loading
}
)
validationError
&
&
external__React__default
.
a
.
createElement
(
"
aside
"
{
className
:
"
error
-
tooltip
"
}
external__React__default
.
a
.
createElement
(
external__ReactIntl_
[
"
FormattedMessage
"
]
{
id
:
this
.
props
.
errorMessageId
}
)
)
)
)
;
}
}
TopSiteFormInput_TopSiteFormInput
.
defaultProps
=
{
showClearButton
:
false
value
:
"
"
validationError
:
false
}
;
var
TopSite
=
__webpack_require__
(
18
)
;
class
TopSiteForm_TopSiteForm
extends
external__React__default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
const
{
site
}
=
props
;
this
.
state
=
{
label
:
site
?
site
.
label
|
|
site
.
hostname
:
"
"
url
:
site
?
site
.
url
:
"
"
validationError
:
false
customScreenshotUrl
:
site
?
site
.
customScreenshotURL
:
"
"
showCustomScreenshotForm
:
site
?
site
.
customScreenshotURL
:
false
}
;
this
.
onClearScreenshotInput
=
this
.
onClearScreenshotInput
.
bind
(
this
)
;
this
.
onLabelChange
=
this
.
onLabelChange
.
bind
(
this
)
;
this
.
onUrlChange
=
this
.
onUrlChange
.
bind
(
this
)
;
this
.
onCancelButtonClick
=
this
.
onCancelButtonClick
.
bind
(
this
)
;
this
.
onClearUrlClick
=
this
.
onClearUrlClick
.
bind
(
this
)
;
this
.
onDoneButtonClick
=
this
.
onDoneButtonClick
.
bind
(
this
)
;
this
.
onCustomScreenshotUrlChange
=
this
.
onCustomScreenshotUrlChange
.
bind
(
this
)
;
this
.
onPreviewButtonClick
=
this
.
onPreviewButtonClick
.
bind
(
this
)
;
this
.
onEnableScreenshotUrlForm
=
this
.
onEnableScreenshotUrlForm
.
bind
(
this
)
;
this
.
validateUrl
=
this
.
validateUrl
.
bind
(
this
)
;
}
onLabelChange
(
event
)
{
this
.
setState
(
{
"
label
"
:
event
.
target
.
value
}
)
;
}
onUrlChange
(
event
)
{
this
.
setState
(
{
url
:
event
.
target
.
value
validationError
:
false
}
)
;
}
onClearUrlClick
(
)
{
this
.
setState
(
{
url
:
"
"
validationError
:
false
}
)
;
}
onEnableScreenshotUrlForm
(
)
{
this
.
setState
(
{
showCustomScreenshotForm
:
true
}
)
;
}
_updateCustomScreenshotInput
(
customScreenshotUrl
)
{
this
.
setState
(
{
customScreenshotUrl
validationError
:
false
}
)
;
this
.
props
.
dispatch
(
{
type
:
Actions
[
"
c
"
]
.
PREVIEW_REQUEST_CANCEL
}
)
;
}
onCustomScreenshotUrlChange
(
event
)
{
this
.
_updateCustomScreenshotInput
(
event
.
target
.
value
)
;
}
onClearScreenshotInput
(
)
{
this
.
_updateCustomScreenshotInput
(
"
"
)
;
}
onCancelButtonClick
(
ev
)
{
ev
.
preventDefault
(
)
;
this
.
props
.
onClose
(
)
;
}
onDoneButtonClick
(
ev
)
{
ev
.
preventDefault
(
)
;
if
(
this
.
validateForm
(
)
)
{
const
site
=
{
url
:
this
.
cleanUrl
(
this
.
state
.
url
)
}
;
const
{
index
}
=
this
.
props
;
if
(
this
.
state
.
label
!
=
=
"
"
)
{
site
.
label
=
this
.
state
.
label
;
}
if
(
this
.
state
.
customScreenshotUrl
)
{
site
.
customScreenshotURL
=
this
.
cleanUrl
(
this
.
state
.
customScreenshotUrl
)
;
}
else
if
(
this
.
props
.
site
&
&
this
.
props
.
site
.
customScreenshotURL
)
{
site
.
customScreenshotURL
=
null
;
}
this
.
props
.
dispatch
(
Actions
[
"
b
"
]
.
AlsoToMain
(
{
type
:
Actions
[
"
c
"
]
.
TOP_SITES_PIN
data
:
{
site
index
}
}
)
)
;
this
.
props
.
dispatch
(
Actions
[
"
b
"
]
.
UserEvent
(
{
source
:
TopSitesConstants
[
"
d
"
]
event
:
"
TOP_SITES_EDIT
"
action_position
:
index
}
)
)
;
this
.
props
.
onClose
(
)
;
}
}
onPreviewButtonClick
(
event
)
{
event
.
preventDefault
(
)
;
if
(
this
.
validateForm
(
)
)
{
this
.
props
.
dispatch
(
Actions
[
"
b
"
]
.
AlsoToMain
(
{
type
:
Actions
[
"
c
"
]
.
PREVIEW_REQUEST
data
:
{
url
:
this
.
cleanUrl
(
this
.
state
.
customScreenshotUrl
)
}
}
)
)
;
this
.
props
.
dispatch
(
Actions
[
"
b
"
]
.
UserEvent
(
{
source
:
TopSitesConstants
[
"
d
"
]
event
:
"
PREVIEW_REQUEST
"
}
)
)
;
}
}
cleanUrl
(
url
)
{
if
(
!
url
.
startsWith
(
"
http
:
"
)
&
&
!
url
.
startsWith
(
"
https
:
"
)
)
{
return
http
:
/
/
{
url
}
;
}
return
url
;
}
_tryParseUrl
(
url
)
{
try
{
return
new
URL
(
url
)
;
}
catch
(
e
)
{
return
null
;
}
}
validateUrl
(
url
)
{
const
validProtocols
=
[
"
http
:
"
"
https
:
"
]
;
const
urlObj
=
this
.
_tryParseUrl
(
url
)
|
|
this
.
_tryParseUrl
(
this
.
cleanUrl
(
url
)
)
;
return
urlObj
&
&
validProtocols
.
includes
(
urlObj
.
protocol
)
;
}
validateCustomScreenshotUrl
(
)
{
const
{
customScreenshotUrl
}
=
this
.
state
;
return
!
customScreenshotUrl
|
|
this
.
validateUrl
(
customScreenshotUrl
)
;
}
validateForm
(
)
{
const
validate
=
this
.
validateUrl
(
this
.
state
.
url
)
&
&
this
.
validateCustomScreenshotUrl
(
)
;
if
(
!
validate
)
{
this
.
setState
(
{
validationError
:
true
}
)
;
}
return
validate
;
}
_renderCustomScreenshotInput
(
)
{
const
{
customScreenshotUrl
}
=
this
.
state
;
const
requestFailed
=
this
.
props
.
previewResponse
=
=
=
"
"
;
const
validationError
=
this
.
state
.
validationError
&
&
!
this
.
validateCustomScreenshotUrl
(
)
|
|
requestFailed
;
const
shouldFocus
=
validationError
&
&
this
.
validateUrl
(
this
.
state
.
url
)
|
|
!
customScreenshotUrl
;
const
isLoading
=
this
.
props
.
previewResponse
=
=
=
null
&
&
customScreenshotUrl
&
&
this
.
props
.
previewUrl
=
=
=
this
.
cleanUrl
(
customScreenshotUrl
)
;
if
(
!
this
.
state
.
showCustomScreenshotForm
)
{
return
external__React__default
.
a
.
createElement
(
"
a
"
{
className
:
"
enable
-
custom
-
image
-
input
"
onClick
:
this
.
onEnableScreenshotUrlForm
}
external__React__default
.
a
.
createElement
(
external__ReactIntl_
[
"
FormattedMessage
"
]
{
id
:
"
topsites_form_use_image_link
"
}
)
)
;
}
return
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
custom
-
image
-
input
-
container
"
}
external__React__default
.
a
.
createElement
(
TopSiteFormInput_TopSiteFormInput
{
errorMessageId
:
requestFailed
?
"
topsites_form_image_validation
"
:
"
topsites_form_url_validation
"
loading
:
isLoading
onChange
:
this
.
onCustomScreenshotUrlChange
onClear
:
this
.
onClearScreenshotInput
shouldFocus
:
shouldFocus
typeUrl
:
true
value
:
customScreenshotUrl
validationError
:
validationError
titleId
:
"
topsites_form_image_url_label
"
placeholderId
:
"
topsites_form_url_placeholder
"
intl
:
this
.
props
.
intl
}
)
)
;
}
render
(
)
{
const
{
customScreenshotUrl
}
=
this
.
state
;
const
requestFailed
=
this
.
props
.
previewResponse
=
=
=
"
"
;
const
showAsAdd
=
!
this
.
props
.
site
;
const
previous
=
this
.
props
.
site
&
&
this
.
props
.
site
.
customScreenshotURL
|
|
"
"
;
const
changed
=
customScreenshotUrl
&
&
this
.
cleanUrl
(
customScreenshotUrl
)
!
=
=
previous
;
const
previewMode
=
changed
&
&
!
this
.
props
.
previewResponse
;
const
previewLink
=
Object
.
assign
(
{
}
this
.
props
.
site
)
;
if
(
this
.
props
.
previewResponse
)
{
previewLink
.
screenshot
=
this
.
props
.
previewResponse
;
previewLink
.
customScreenshotURL
=
this
.
props
.
previewUrl
;
}
return
external__React__default
.
a
.
createElement
(
"
form
"
{
className
:
"
topsite
-
form
"
}
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
form
-
input
-
container
"
}
external__React__default
.
a
.
createElement
(
"
h3
"
{
className
:
"
section
-
title
"
}
external__React__default
.
a
.
createElement
(
external__ReactIntl_
[
"
FormattedMessage
"
]
{
id
:
showAsAdd
?
"
topsites_form_add_header
"
:
"
topsites_form_edit_header
"
}
)
)
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
fields
-
and
-
preview
"
}
external__React__default
.
a
.
createElement
(
"
div
"
{
className
:
"
form
-
wrapper
"
}
external__React__default
.
a
.
createElement
(
TopSiteFormInput_TopSiteFormInput
{
onChange
:
this
.
onLabelChange
value
:
this
.
state
.
label
titleId
:
"
topsites_form_title_label
"
placeholderId
:
"
topsites_form_title_placeholder
"
intl
:
this
.
props
.
intl
}
)
external__React__default
.
a
.
createElement
(
TopSiteFormInput_TopSiteFormInput
{
onChange
:
this
.
onUrlChange
shouldFocus
:
this
.
state
.
validationError
&
&
!
this
.
validateUrl
(
this
.
state
.
url
)
value
:
this
.
state
.
url
onClear
:
this
.
onClearUrlClick
validationError
:
this
.
state
.
validationError
&
&
!
this
.
validateUrl
(
this
.
state
.
url
)
titleId
:
"
topsites_form_url_label
"
typeUrl
:
true
placeholderId
:
"
topsites_form_url_placeholder
"
errorMessageId
:
"
topsites_form_url_validation
"
intl
:
this
.
props
.
intl
}
)
this
.
_renderCustomScreenshotInput
(
)
)
external__React__default
.
a
.
createElement
(
TopSite
[
"
a
"
]
{
link
:
previewLink
defaultStyle
:
requestFailed
title
:
this
.
state
.
label
}
)
)
)
external__React__default
.
a
.
createElement
(
"
section
"
{
className
:
"
actions
"
}
external__React__default
.
a
.
createElement
(
"
button
"
{
className
:
"
cancel
"
type
:
"
button
"
onClick
:
this
.
onCancelButtonClick
}
external__React__default
.
a
.
createElement
(
external__ReactIntl_
[
"
FormattedMessage
"
]
{
id
:
"
topsites_form_cancel_button
"
}
)
)
previewMode
?
external__React__default
.
a
.
createElement
(
"
button
"
{
className
:
"
done
preview
"
type
:
"
submit
"
onClick
:
this
.
onPreviewButtonClick
}
external__React__default
.
a
.
createElement
(
external__ReactIntl_
[
"
FormattedMessage
"
]
{
id
:
"
topsites_form_preview_button
"
}
)
)
:
external__React__default
.
a
.
createElement
(
"
button
"
{
className
:
"
done
"
type
:
"
submit
"
onClick
:
this
.
onDoneButtonClick
}
external__React__default
.
a
.
createElement
(
external__ReactIntl_
[
"
FormattedMessage
"
]
{
id
:
showAsAdd
?
"
topsites_form_add_button
"
:
"
topsites_form_save_button
"
}
)
)
)
)
;
}
}
__webpack_exports__
[
"
a
"
]
=
TopSiteForm_TopSiteForm
;
TopSiteForm_TopSiteForm
.
defaultProps
=
{
site
:
null
index
:
-
1
}
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
var
__WEBPACK_IMPORTED_MODULE_0_react_intl__
=
__webpack_require__
(
2
)
;
var
__WEBPACK_IMPORTED_MODULE_0_react_intl___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
)
;
var
__WEBPACK_IMPORTED_MODULE_1_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_redux__
=
__webpack_require__
(
4
)
;
var
__WEBPACK_IMPORTED_MODULE_2_react_redux___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_2_react_redux__
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react__
=
__webpack_require__
(
0
)
;
var
__WEBPACK_IMPORTED_MODULE_3_react___default
=
__webpack_require__
.
n
(
__WEBPACK_IMPORTED_MODULE_3_react__
)
;
class
_StartupOverlay
extends
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
PureComponent
{
constructor
(
props
)
{
super
(
props
)
;
this
.
onInputChange
=
this
.
onInputChange
.
bind
(
this
)
;
this
.
onSubmit
=
this
.
onSubmit
.
bind
(
this
)
;
this
.
clickSkip
=
this
.
clickSkip
.
bind
(
this
)
;
this
.
initScene
=
this
.
initScene
.
bind
(
this
)
;
this
.
removeOverlay
=
this
.
removeOverlay
.
bind
(
this
)
;
this
.
state
=
{
emailInput
:
"
"
}
;
this
.
initScene
(
)
;
}
initScene
(
)
{
setTimeout
(
(
)
=
>
{
this
.
setState
(
{
show
:
true
}
)
;
}
10
)
;
}
removeOverlay
(
)
{
window
.
removeEventListener
(
"
visibilitychange
"
this
.
removeOverlay
)
;
this
.
setState
(
{
show
:
false
}
)
;
setTimeout
(
(
)
=
>
{
document
.
body
.
classList
.
remove
(
"
welcome
"
)
;
}
400
)
;
}
onInputChange
(
e
)
{
this
.
setState
(
{
emailInput
:
e
.
target
.
value
}
)
;
}
onSubmit
(
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_1_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
"
SUBMIT_EMAIL
"
}
)
)
;
window
.
addEventListener
(
"
visibilitychange
"
this
.
removeOverlay
)
;
}
clickSkip
(
)
{
this
.
props
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_1_common_Actions_jsm__
[
"
b
"
]
.
UserEvent
(
{
event
:
"
SKIPPED_SIGNIN
"
}
)
)
;
this
.
removeOverlay
(
)
;
}
render
(
)
{
let
termsLink
=
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
a
"
{
href
:
"
https
:
/
/
accounts
.
firefox
.
com
/
legal
/
terms
"
target
:
"
_blank
"
rel
:
"
noopener
noreferrer
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_terms_of_service
"
}
)
)
;
let
privacyLink
=
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
a
"
{
href
:
"
https
:
/
/
accounts
.
firefox
.
com
/
legal
/
privacy
"
target
:
"
_blank
"
rel
:
"
noopener
noreferrer
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_privacy_notice
"
}
)
)
;
return
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
overlay
-
wrapper
{
this
.
state
.
show
?
"
show
"
:
"
"
}
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
background
"
}
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
firstrun
-
scene
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
fxaccounts
-
container
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
firstrun
-
left
-
divider
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
h1
"
{
className
:
"
firstrun
-
title
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_title
"
}
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
p
"
{
className
:
"
firstrun
-
content
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_content
"
}
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
a
"
{
className
:
"
firstrun
-
link
"
href
:
"
https
:
/
/
www
.
mozilla
.
org
/
firefox
/
features
/
sync
/
"
target
:
"
_blank
"
rel
:
"
noopener
noreferrer
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_learn_more_link
"
}
)
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
firstrun
-
sign
-
in
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
p
"
{
className
:
"
form
-
header
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_form_header
"
}
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
span
"
null
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_form_sub_header
"
}
)
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
form
"
{
method
:
"
get
"
action
:
"
https
:
/
/
accounts
.
firefox
.
com
"
target
:
"
_blank
"
rel
:
"
noopener
noreferrer
"
onSubmit
:
this
.
onSubmit
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
input
"
{
name
:
"
service
"
type
:
"
hidden
"
value
:
"
sync
"
}
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
input
"
{
name
:
"
action
"
type
:
"
hidden
"
value
:
"
email
"
}
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
input
"
{
name
:
"
context
"
type
:
"
hidden
"
value
:
"
fx_desktop_v3
"
}
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
input
"
{
className
:
"
email
-
input
"
name
:
"
email
"
type
:
"
email
"
required
:
"
true
"
placeholder
:
this
.
props
.
intl
.
formatMessage
(
{
id
:
"
firstrun_email_input_placeholder
"
}
)
onChange
:
this
.
onInputChange
}
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
div
"
{
className
:
"
extra
-
links
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_extra_legal_links
"
values
:
{
terms
:
termsLink
privacy
:
privacyLink
}
}
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
continue
-
button
"
type
:
"
submit
"
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_continue_to_login
"
}
)
)
)
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
"
button
"
{
className
:
"
skip
-
button
"
disabled
:
!
!
this
.
state
.
emailInput
onClick
:
this
.
clickSkip
}
__WEBPACK_IMPORTED_MODULE_3_react___default
.
a
.
createElement
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
FormattedMessage
"
]
{
id
:
"
firstrun_skip_login
"
}
)
)
)
)
)
)
;
}
}
const
StartupOverlay
=
Object
(
__WEBPACK_IMPORTED_MODULE_2_react_redux__
[
"
connect
"
]
)
(
)
(
Object
(
__WEBPACK_IMPORTED_MODULE_0_react_intl__
[
"
injectIntl
"
]
)
(
_StartupOverlay
)
)
;
__webpack_exports__
[
"
a
"
]
=
StartupOverlay
;
}
)
(
function
(
module
__webpack_exports__
__webpack_require__
)
{
"
use
strict
"
;
(
function
(
global
)
{
var
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
=
__webpack_require__
(
1
)
;
var
__WEBPACK_IMPORTED_MODULE_1_common_PerfService_jsm__
=
__webpack_require__
(
17
)
;
const
VISIBLE
=
"
visible
"
;
const
VISIBILITY_CHANGE_EVENT
=
"
visibilitychange
"
;
class
DetectUserSessionStart
{
constructor
(
store
options
=
{
}
)
{
this
.
_store
=
store
;
this
.
document
=
options
.
document
|
|
global
.
document
;
this
.
_perfService
=
options
.
perfService
|
|
__WEBPACK_IMPORTED_MODULE_1_common_PerfService_jsm__
[
"
a
"
]
;
this
.
_onVisibilityChange
=
this
.
_onVisibilityChange
.
bind
(
this
)
;
}
sendEventOrAddListener
(
)
{
if
(
this
.
document
.
visibilityState
=
=
=
VISIBLE
)
{
this
.
_sendEvent
(
)
;
}
else
{
this
.
document
.
addEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
}
_sendEvent
(
)
{
this
.
_perfService
.
mark
(
"
visibility_event_rcvd_ts
"
)
;
try
{
let
visibility_event_rcvd_ts
=
this
.
_perfService
.
getMostRecentAbsMarkStartByName
(
"
visibility_event_rcvd_ts
"
)
;
this
.
_store
.
dispatch
(
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
b
"
]
.
AlsoToMain
(
{
type
:
__WEBPACK_IMPORTED_MODULE_0_common_Actions_jsm__
[
"
c
"
]
.
SAVE_SESSION_PERF_DATA
data
:
{
visibility_event_rcvd_ts
}
}
)
)
;
}
catch
(
ex
)
{
}
}
_onVisibilityChange
(
)
{
if
(
this
.
document
.
visibilityState
=
=
=
VISIBLE
)
{
this
.
_sendEvent
(
)
;
this
.
document
.
removeEventListener
(
VISIBILITY_CHANGE_EVENT
this
.
_onVisibilityChange
)
;
}
}
}
__webpack_exports__
[
"
a
"
]
=
DetectUserSessionStart
;
}
.
call
(
__webpack_exports__
__webpack_require__
(
3
)
)
)
}
)
]
)
;
