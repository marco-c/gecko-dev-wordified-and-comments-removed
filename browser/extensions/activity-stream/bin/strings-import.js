#
!
/
usr
/
bin
/
env
node
"
use
strict
"
;
const
fetch
=
require
(
"
node
-
fetch
"
)
;
require
(
"
shelljs
/
global
"
)
;
const
DEFAULT_LOCALE
=
"
en
-
US
"
;
const
L10N_CENTRAL
=
"
https
:
/
/
hg
.
mozilla
.
org
/
l10n
-
central
"
;
const
PROPERTIES_PATH
=
"
raw
-
file
/
default
/
browser
/
chrome
/
browser
/
activity
-
stream
/
newtab
.
properties
"
;
const
STRINGS_FILE
=
"
strings
.
properties
"
;
async
function
getLocales
(
)
{
console
.
log
(
Getting
locales
from
{
L10N_CENTRAL
}
)
;
const
locales
=
[
]
;
const
subrepos
=
await
(
await
fetch
(
{
L10N_CENTRAL
}
?
style
=
json
)
)
.
json
(
)
;
subrepos
.
entries
.
forEach
(
(
{
name
}
)
=
>
{
if
(
name
!
=
=
"
x
-
testing
"
)
{
locales
.
push
(
name
)
;
}
}
)
;
console
.
log
(
Got
{
locales
.
length
}
locales
:
{
locales
}
)
;
return
locales
;
}
async
function
saveProperties
(
locale
)
{
const
url
=
{
L10N_CENTRAL
}
/
{
locale
}
/
{
PROPERTIES_PATH
}
;
const
response
=
await
fetch
(
url
)
;
if
(
!
response
.
ok
)
{
return
locale
;
}
const
text
=
await
response
.
text
(
)
;
mkdir
(
locale
)
;
cd
(
locale
)
;
ShellString
(
text
)
.
to
(
STRINGS_FILE
)
;
cd
(
"
.
.
"
)
;
return
"
"
;
}
async
function
updateLocales
(
)
{
console
.
log
(
"
Switching
to
and
deleting
existing
l10n
tree
under
:
locales
"
)
;
cd
(
"
locales
"
)
;
ls
(
)
.
forEach
(
dir
=
>
{
if
(
dir
!
=
=
DEFAULT_LOCALE
)
{
rm
(
"
-
r
"
dir
)
;
}
}
)
;
const
locales
=
await
getLocales
(
)
;
const
missing
=
(
await
Promise
.
all
(
locales
.
map
(
saveProperties
)
)
)
.
filter
(
v
=
>
v
)
;
console
.
log
(
Skipped
{
missing
.
length
}
locales
without
strings
:
{
missing
.
sort
(
)
}
)
;
console
.
log
(
Please
check
the
diffs
add
/
remove
files
and
then
commit
the
result
.
Suggested
commit
message
:
chore
(
l10n
)
:
Update
from
l10n
-
central
{
new
Date
(
)
}
)
;
}
updateLocales
(
)
.
catch
(
console
.
error
)
;
