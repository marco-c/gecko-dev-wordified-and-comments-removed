"
use
strict
"
;
const
{
utils
:
Cu
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
{
Store
}
=
Cu
.
import
(
"
resource
:
/
/
activity
-
stream
/
lib
/
Store
.
jsm
"
{
}
)
;
const
{
actionTypes
:
at
}
=
Cu
.
import
(
"
resource
:
/
/
activity
-
stream
/
common
/
Actions
.
jsm
"
{
}
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
LocalizationFeed
"
"
resource
:
/
/
activity
-
stream
/
lib
/
LocalizationFeed
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
NewTabInit
"
"
resource
:
/
/
activity
-
stream
/
lib
/
NewTabInit
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
PlacesFeed
"
"
resource
:
/
/
activity
-
stream
/
lib
/
PlacesFeed
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
SearchFeed
"
"
resource
:
/
/
activity
-
stream
/
lib
/
SearchFeed
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
TelemetryFeed
"
"
resource
:
/
/
activity
-
stream
/
lib
/
TelemetryFeed
.
jsm
"
)
;
XPCOMUtils
.
defineLazyModuleGetter
(
this
"
TopSitesFeed
"
"
resource
:
/
/
activity
-
stream
/
lib
/
TopSitesFeed
.
jsm
"
)
;
const
feeds
=
{
"
feeds
.
localization
"
:
(
)
=
>
new
LocalizationFeed
(
)
"
feeds
.
newtabinit
"
:
(
)
=
>
new
NewTabInit
(
)
"
feeds
.
places
"
:
(
)
=
>
new
PlacesFeed
(
)
"
feeds
.
search
"
:
(
)
=
>
new
SearchFeed
(
)
"
feeds
.
telemetry
"
:
(
)
=
>
new
TelemetryFeed
(
)
"
feeds
.
topsites
"
:
(
)
=
>
new
TopSitesFeed
(
)
}
;
this
.
ActivityStream
=
class
ActivityStream
{
constructor
(
options
=
{
}
)
{
this
.
initialized
=
false
;
this
.
options
=
options
;
this
.
store
=
new
Store
(
)
;
this
.
feeds
=
feeds
;
}
init
(
)
{
this
.
initialized
=
true
;
this
.
store
.
init
(
this
.
feeds
)
;
this
.
store
.
dispatch
(
{
type
:
at
.
INIT
data
:
{
version
:
this
.
options
.
version
}
}
)
;
}
uninit
(
)
{
this
.
store
.
dispatch
(
{
type
:
at
.
UNINIT
}
)
;
this
.
store
.
uninit
(
)
;
this
.
initialized
=
false
;
}
}
;
this
.
EXPORTED_SYMBOLS
=
[
"
ActivityStream
"
]
;
