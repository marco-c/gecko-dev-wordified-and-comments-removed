const
{
GlobalOverrider
FakePrefs
}
=
require
(
"
test
/
unit
/
utils
"
)
;
const
{
chaiAssertions
}
=
require
(
"
test
/
schemas
/
pings
"
)
;
const
req
=
require
.
context
(
"
.
"
true
/
\
.
test
\
.
jsx
?
/
)
;
const
files
=
req
.
keys
(
)
;
sinon
.
assert
.
expose
(
assert
{
prefix
:
"
"
}
)
;
chai
.
use
(
chaiAssertions
)
;
let
overrider
=
new
GlobalOverrider
(
)
;
overrider
.
set
(
{
Components
:
{
interfaces
:
{
}
utils
:
{
import
(
)
{
}
importGlobalProperties
(
)
{
}
reportError
(
)
{
}
now
:
(
)
=
>
window
.
performance
.
now
(
)
}
}
ContentSearchUIController
:
function
(
)
{
}
dump
(
)
{
}
fetch
(
)
{
}
Preferences
:
FakePrefs
Services
:
{
locale
:
{
getRequestedLocale
(
)
{
}
}
mm
:
{
addMessageListener
:
(
msg
cb
)
=
>
cb
(
)
removeMessageListener
(
)
{
}
}
obs
:
{
addObserver
(
)
{
}
removeObserver
(
)
{
}
}
prefs
:
{
getDefaultBranch
(
)
{
return
{
setBoolPref
(
)
{
}
setIntPref
(
)
{
}
setStringPref
(
)
{
}
clearUserPref
(
)
{
}
}
;
}
}
}
XPCOMUtils
:
{
defineLazyModuleGetter
(
)
{
}
defineLazyServiceGetter
(
)
{
}
generateQI
(
)
{
return
{
}
;
}
}
}
)
;
describe
(
"
activity
-
stream
"
(
)
=
>
{
after
(
(
)
=
>
overrider
.
restore
(
)
)
;
files
.
forEach
(
file
=
>
req
(
file
)
)
;
}
)
;
