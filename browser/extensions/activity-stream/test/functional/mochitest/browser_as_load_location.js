"
use
strict
"
;
async
function
checkNewtabLoads
(
selector
message
)
{
BrowserOpenTab
(
)
;
let
browser
=
gBrowser
.
selectedBrowser
;
await
waitForPreloaded
(
browser
)
;
let
found
=
await
ContentTask
.
spawn
(
browser
selector
arg
=
>
content
.
document
.
querySelector
(
arg
)
!
=
=
null
)
;
ok
(
found
message
)
;
await
BrowserTestUtils
.
removeTab
(
gBrowser
.
selectedTab
)
;
}
async
function
checkActivityStreamLoads
(
)
{
await
checkNewtabLoads
(
"
body
.
activity
-
stream
"
"
Got
<
body
class
=
'
activity
-
stream
'
>
Element
"
)
;
}
add_task
(
async
function
checkActivityStreamNotPreloadedLoad
(
)
{
gBrowser
.
removePreloadedBrowser
(
)
;
await
checkActivityStreamLoads
(
)
;
}
)
;
add_task
(
checkActivityStreamLoads
)
;
async
function
checkNotActivityStreamLoads
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
browser
.
newtabpage
.
activity
-
stream
.
enabled
"
false
]
]
}
)
;
await
checkNewtabLoads
(
"
body
:
not
(
.
activity
-
stream
)
"
"
Got
<
body
>
Element
not
for
activity
-
stream
"
)
;
}
add_task
(
async
function
checkNotActivityStreamNotPreloadedLoad
(
)
{
gBrowser
.
removePreloadedBrowser
(
)
;
await
checkNotActivityStreamLoads
(
)
;
}
)
;
add_task
(
checkNotActivityStreamLoads
)
;
