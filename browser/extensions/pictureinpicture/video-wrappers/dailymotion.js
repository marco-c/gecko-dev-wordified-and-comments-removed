"
use
strict
"
;
class
PictureInPictureVideoWrapper
{
setCaptionContainerObserver
(
video
updateCaptionsFunction
)
{
let
container
=
video
.
closest
(
"
.
player
"
)
;
if
(
container
)
{
updateCaptionsFunction
(
"
"
)
;
const
callback
=
(
mutationList
=
[
]
)
=
>
{
if
(
mutationList
.
length
)
{
let
changed
=
false
;
for
(
const
mutation
of
mutationList
)
{
if
(
mutation
.
target
.
matches
?
.
(
"
.
subtitles
-
text
"
)
)
{
changed
=
true
;
break
;
}
}
if
(
!
changed
)
{
return
;
}
}
let
textNodeList
=
container
.
querySelector
(
"
.
subtitles
"
)
?
.
querySelectorAll
(
"
div
"
)
;
if
(
!
textNodeList
?
.
length
)
{
updateCaptionsFunction
(
"
"
)
;
return
;
}
updateCaptionsFunction
(
Array
.
from
(
textNodeList
x
=
>
x
.
innerText
)
.
join
(
"
\
n
"
)
)
;
}
;
callback
(
)
;
this
.
captionsObserver
=
new
MutationObserver
(
callback
)
;
this
.
captionsObserver
.
observe
(
container
{
childList
:
true
subtree
:
true
}
)
;
}
}
removeCaptionContainerObserver
(
)
{
this
.
captionsObserver
?
.
disconnect
(
)
;
}
}
this
.
PictureInPictureVideoWrapper
=
PictureInPictureVideoWrapper
;
