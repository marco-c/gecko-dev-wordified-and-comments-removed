"
use
strict
"
;
class
PictureInPictureVideoWrapper
{
constructor
(
video
)
{
this
.
video
=
video
.
wrappedJSObject
;
}
hasCvsdkSession
(
)
{
return
(
this
.
video
.
cvsdkSession
!
=
=
undefined
&
&
this
.
video
.
cvsdkSession
!
=
=
null
)
;
}
play
(
)
{
if
(
!
this
.
hasCvsdkSession
(
)
)
{
this
.
video
.
play
(
)
;
return
;
}
this
.
video
.
cvsdkSession
.
play
(
)
;
}
pause
(
)
{
if
(
!
this
.
hasCvsdkSession
(
)
)
{
this
.
video
.
pause
(
)
;
return
;
}
this
.
video
.
cvsdkSession
.
pause
(
)
;
}
setCurrentTime
(
video
position
wasPlaying
)
{
if
(
!
this
.
hasCvsdkSession
(
)
)
{
this
.
video
.
currentTime
=
position
;
return
;
}
this
.
video
.
cvsdkSession
.
seek
(
position
wasPlaying
)
;
}
setDefaultCaptionMutationObserver
(
video
updateCaptionsFunction
)
{
const
captionsQuery
=
"
[
data
-
t
-
subtitles
=
true
]
[
data
-
t
=
subtitles
]
"
;
const
getContainer
=
(
)
=
>
{
return
video
.
parentElement
.
querySelector
(
captionsQuery
)
;
}
;
updateCaptionsFunction
(
"
"
)
;
this
.
captionsObserver
=
new
MutationObserver
(
(
)
=
>
{
let
text
=
getContainer
(
)
.
innerText
;
updateCaptionsFunction
(
text
)
;
}
)
;
this
.
captionsObserver
.
observe
(
video
.
parentElement
{
attributes
:
false
childList
:
true
subtree
:
true
}
)
;
}
setCaptionContainerObserver
(
video
updateCaptionsFunction
)
{
if
(
!
this
.
hasCvsdkSession
(
)
)
{
this
.
setDefaultCaptionMutationObserver
(
video
updateCaptionsFunction
)
;
return
;
}
this
.
video
.
cvsdkSession
.
setSimpleCueHandler
(
updateCaptionsFunction
)
;
}
getDuration
(
)
{
if
(
!
this
.
hasCvsdkSession
(
)
)
{
return
this
.
video
.
duration
;
}
return
this
.
video
.
cvsdkSession
.
getDuration
(
)
;
}
getCurrentTime
(
)
{
if
(
!
this
.
hasCvsdkSession
(
)
)
{
return
this
.
video
.
currentTime
;
}
return
this
.
video
.
cvsdkSession
.
getCurrentTime
(
)
;
}
setMuted
(
video
shouldMute
)
{
if
(
!
this
.
hasCvsdkSession
(
)
)
{
this
.
video
.
muted
=
shouldMute
;
return
;
}
this
.
video
.
cvsdkSession
.
setMute
(
shouldMute
)
;
}
getMuted
(
)
{
if
(
!
this
.
hasCvsdkSession
(
)
)
{
return
this
.
video
.
muted
;
}
return
this
.
video
.
cvsdkSession
.
isMuted
(
)
;
}
}
this
.
PictureInPictureVideoWrapper
=
PictureInPictureVideoWrapper
;
