"
use
strict
"
;
class
PictureInPictureVideoWrapper
{
setMuted
(
video
shouldMute
)
{
let
muteButton
=
document
.
querySelector
(
"
#
player
.
ytp
-
mute
-
button
"
)
;
if
(
video
.
muted
!
=
=
shouldMute
&
&
muteButton
)
{
muteButton
.
click
(
)
;
}
else
{
video
.
muted
=
shouldMute
;
}
}
setCaptionContainerObserver
(
video
updateCaptionsFunction
)
{
let
container
=
document
.
getElementById
(
"
ytp
-
caption
-
window
-
container
"
)
;
if
(
container
)
{
updateCaptionsFunction
(
"
"
)
;
const
callback
=
function
(
mutationsList
observer
)
{
for
(
const
mutation
of
mutationsList
)
{
let
textNodeList
=
container
.
querySelector
(
"
.
captions
-
text
"
)
?
.
querySelectorAll
(
"
.
caption
-
visual
-
line
"
)
;
if
(
!
textNodeList
)
{
updateCaptionsFunction
(
"
"
)
;
return
;
}
updateCaptionsFunction
(
Array
.
from
(
textNodeList
x
=
>
x
.
textContent
)
.
join
(
"
\
n
"
)
)
;
}
}
;
callback
(
[
1
]
null
)
;
let
captionsObserver
=
new
MutationObserver
(
callback
)
;
captionsObserver
.
observe
(
container
{
attributes
:
false
childList
:
true
subtree
:
true
}
)
;
}
}
}
this
.
PictureInPictureVideoWrapper
=
PictureInPictureVideoWrapper
;
