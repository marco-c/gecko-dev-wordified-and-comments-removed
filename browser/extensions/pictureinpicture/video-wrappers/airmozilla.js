"
use
strict
"
;
class
PictureInPictureVideoWrapper
{
play
(
video
)
{
let
playPauseButton
=
document
.
querySelector
(
"
#
transportControls
#
playButton
"
)
;
playPauseButton
?
.
click
(
)
;
}
pause
(
video
)
{
let
playPauseButton
=
document
.
querySelector
(
"
#
transportControls
#
playButton
"
)
;
playPauseButton
?
.
click
(
)
;
}
setMuted
(
video
shouldMute
)
{
let
muteButton
=
document
.
querySelector
(
"
#
transportControls
#
muteButton
"
)
;
if
(
video
.
muted
!
=
=
shouldMute
&
&
muteButton
)
{
muteButton
.
click
(
)
;
}
}
setCaptionContainerObserver
(
video
updateCaptionsFunction
)
{
let
container
=
document
.
querySelector
(
"
#
absoluteControls
"
)
;
if
(
container
)
{
updateCaptionsFunction
(
"
"
)
;
const
callback
=
function
(
mutationsList
observer
)
{
let
text
=
container
?
.
querySelector
(
"
#
overlayCaption
"
)
.
innerText
;
if
(
!
text
)
{
updateCaptionsFunction
(
"
"
)
;
return
;
}
updateCaptionsFunction
(
text
)
;
}
;
callback
(
[
1
]
null
)
;
let
captionsObserver
=
new
MutationObserver
(
callback
)
;
captionsObserver
.
observe
(
container
{
attributes
:
false
childList
:
true
subtree
:
true
}
)
;
}
}
}
this
.
PictureInPictureVideoWrapper
=
PictureInPictureVideoWrapper
;
