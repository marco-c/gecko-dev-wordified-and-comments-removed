"
use
strict
"
;
class
PictureInPictureVideoWrapper
{
isLive
(
)
{
let
documentURI
=
document
.
documentURI
;
return
documentURI
.
includes
(
"
/
live
/
"
)
|
|
documentURI
.
includes
(
"
/
TV
/
"
)
;
}
getDuration
(
video
)
{
if
(
this
.
isLive
(
video
)
)
{
return
Infinity
;
}
return
video
.
duration
;
}
setCaptionContainerObserver
(
video
updateCaptionsFunction
)
{
let
container
=
document
.
querySelector
(
[
data
-
testid
=
"
playerRoot
"
]
)
|
|
document
.
querySelector
(
[
player
-
root
=
"
true
"
]
)
;
if
(
container
)
{
updateCaptionsFunction
(
"
"
)
;
const
callback
=
function
(
mutationsList
)
{
for
(
const
mutation
of
mutationsList
)
{
let
text
=
container
.
querySelector
(
"
.
rxp
-
texttrack
-
region
"
)
?
.
innerText
;
if
(
!
text
)
{
updateCaptionsFunction
(
"
"
)
;
return
;
}
updateCaptionsFunction
(
text
)
;
}
}
;
callback
(
[
1
]
null
)
;
this
.
captionsObserver
=
new
MutationObserver
(
callback
)
;
this
.
captionsObserver
.
observe
(
container
{
attributes
:
false
childList
:
true
subtree
:
true
}
)
;
}
}
removeCaptionContainerObserver
(
)
{
this
.
captionsObserver
?
.
disconnect
(
)
;
}
}
this
.
PictureInPictureVideoWrapper
=
PictureInPictureVideoWrapper
;
