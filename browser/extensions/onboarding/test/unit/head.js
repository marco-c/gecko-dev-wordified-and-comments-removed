"
use
strict
"
;
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
}
=
Components
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Preferences
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
const
EXTENSION_ID
=
"
onboarding
mozilla
.
org
"
;
let
extensionDir
=
Services
.
dirsvc
.
get
(
"
GreD
"
Ci
.
nsIFile
)
;
extensionDir
.
append
(
"
browser
"
)
;
extensionDir
.
append
(
"
features
"
)
;
extensionDir
.
append
(
EXTENSION_ID
)
;
if
(
!
extensionDir
.
exists
(
)
)
{
extensionDir
.
leafName
+
=
"
.
xpi
"
;
}
Components
.
manager
.
addBootstrappedManifestLocation
(
extensionDir
)
;
const
TOURSET_VERSION
=
1
;
const
NEXT_TOURSET_VERSION
=
2
;
const
PREF_TOUR_TYPE
=
"
browser
.
onboarding
.
tour
-
type
"
;
const
PREF_TOURSET_VERSION
=
"
browser
.
onboarding
.
tourset
-
version
"
;
const
PREF_SEEN_TOURSET_VERSION
=
"
browser
.
onboarding
.
seen
-
tourset
-
version
"
;
function
resetOnboardingDefaultState
(
)
{
Services
.
prefs
.
setIntPref
(
PREF_TOURSET_VERSION
TOURSET_VERSION
)
;
Services
.
prefs
.
clearUserPref
(
PREF_SEEN_TOURSET_VERSION
)
;
Services
.
prefs
.
clearUserPref
(
PREF_TOUR_TYPE
)
;
}
function
resetOldProfileDefaultState
(
)
{
Services
.
prefs
.
setIntPref
(
PREF_TOURSET_VERSION
TOURSET_VERSION
)
;
Services
.
prefs
.
setIntPref
(
PREF_SEEN_TOURSET_VERSION
0
)
;
Services
.
prefs
.
clearUserPref
(
PREF_TOUR_TYPE
)
;
}
