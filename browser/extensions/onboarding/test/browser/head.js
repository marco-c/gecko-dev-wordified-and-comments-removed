Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Preferences
.
jsm
"
)
;
function
promiseOnboardingOverlayLoaded
(
browser
)
{
let
condition
=
(
)
=
>
{
return
ContentTask
.
spawn
(
browser
{
}
function
(
)
{
return
new
Promise
(
resolve
=
>
{
let
doc
=
content
&
&
content
.
document
;
if
(
doc
&
&
doc
.
querySelector
(
"
#
onboarding
-
overlay
"
)
)
{
resolve
(
true
)
;
return
;
}
resolve
(
false
)
;
}
)
;
}
)
}
;
return
BrowserTestUtils
.
waitForCondition
(
condition
"
Should
load
onboarding
overlay
"
100
30
)
;
}
function
promiseOnboardingOverlayOpened
(
browser
)
{
let
condition
=
(
)
=
>
{
return
ContentTask
.
spawn
(
browser
{
}
function
(
)
{
return
new
Promise
(
resolve
=
>
{
let
overlay
=
content
.
document
.
querySelector
(
"
#
onboarding
-
overlay
"
)
;
if
(
overlay
.
classList
.
contains
(
"
opened
"
)
)
{
resolve
(
true
)
;
return
;
}
resolve
(
false
)
;
}
)
;
}
)
}
;
return
BrowserTestUtils
.
waitForCondition
(
condition
"
Should
open
onboarding
overlay
"
100
30
)
;
}
function
promisePrefUpdated
(
name
expectedValue
)
{
return
new
Promise
(
resolve
=
>
{
let
onUpdate
=
actualValue
=
>
{
Preferences
.
ignore
(
name
onUpdate
)
;
is
(
expectedValue
actualValue
Should
update
the
pref
of
{
name
}
)
;
resolve
(
)
;
}
;
Preferences
.
observe
(
name
onUpdate
)
;
}
)
;
}
