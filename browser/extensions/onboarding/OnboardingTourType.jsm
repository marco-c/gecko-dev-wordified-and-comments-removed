"
use
strict
"
;
this
.
EXPORTED_SYMBOLS
=
[
"
OnboardingTourType
"
]
;
const
{
utils
:
Cu
}
=
Components
;
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
ChromeUtils
.
defineModuleGetter
(
this
"
Services
"
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
var
OnboardingTourType
=
{
check
(
)
{
const
PREF_TOUR_TYPE
=
"
browser
.
onboarding
.
tour
-
type
"
;
const
PREF_SEEN_TOURSET_VERSION
=
"
browser
.
onboarding
.
seen
-
tourset
-
version
"
;
const
TOURSET_VERSION
=
Services
.
prefs
.
getIntPref
(
"
browser
.
onboarding
.
tourset
-
version
"
)
;
if
(
!
Services
.
prefs
.
prefHasUserValue
(
PREF_SEEN_TOURSET_VERSION
)
)
{
Services
.
prefs
.
setStringPref
(
PREF_TOUR_TYPE
"
new
"
)
;
}
else
if
(
Services
.
prefs
.
getIntPref
(
PREF_SEEN_TOURSET_VERSION
)
<
TOURSET_VERSION
)
{
Services
.
prefs
.
setStringPref
(
PREF_TOUR_TYPE
"
update
"
)
;
Services
.
prefs
.
setBoolPref
(
"
browser
.
onboarding
.
notification
.
finished
"
false
)
;
Services
.
prefs
.
clearUserPref
(
"
browser
.
onboarding
.
notification
.
prompt
-
count
"
)
;
Services
.
prefs
.
clearUserPref
(
"
browser
.
onboarding
.
notification
.
last
-
time
-
of
-
changing
-
tour
-
sec
"
)
;
Services
.
prefs
.
clearUserPref
(
"
browser
.
onboarding
.
notification
.
tour
-
ids
-
queue
"
)
;
Services
.
prefs
.
clearUserPref
(
"
browser
.
onboarding
.
state
"
)
;
}
Services
.
prefs
.
setIntPref
(
PREF_SEEN_TOURSET_VERSION
TOURSET_VERSION
)
;
}
}
;
