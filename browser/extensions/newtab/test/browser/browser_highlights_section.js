"
use
strict
"
;
add_setup
(
async
function
(
)
{
await
SpecialPowers
.
pushPrefEnv
(
{
set
:
[
[
"
test
.
wait300msAfterTabSwitch
"
true
]
]
}
)
;
}
)
;
function
test_highlights
(
bookmarkCount
test
)
{
test_newtab
(
{
async
before
(
{
tab
}
)
{
if
(
bookmarkCount
)
{
await
addHighlightsBookmarks
(
bookmarkCount
)
;
await
SpecialPowers
.
spawn
(
tab
.
linkedBrowser
[
]
async
(
)
=
>
{
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
content
.
document
.
querySelector
(
"
[
data
-
section
-
id
=
'
highlights
'
]
.
card
-
outer
:
not
(
.
placeholder
)
"
)
"
No
highlights
cards
found
.
"
)
;
}
)
;
}
}
test
async
after
(
)
{
await
clearHistoryAndBookmarks
(
)
;
await
clearHighlightsBookmarks
(
)
;
}
}
)
;
}
test_highlights
(
2
function
check_highlights_cards
(
)
{
let
found
=
content
.
document
.
querySelectorAll
(
"
[
data
-
section
-
id
=
'
highlights
'
]
.
card
-
outer
:
not
(
.
placeholder
)
"
)
.
length
;
is
(
found
2
"
there
should
be
2
highlights
cards
"
)
;
found
=
content
.
document
.
querySelectorAll
(
"
[
data
-
section
-
id
=
'
highlights
'
]
.
section
-
list
.
placeholder
"
)
.
length
;
is
(
found
2
"
there
should
be
1
row
*
4
-
2
=
2
highlights
placeholder
"
)
;
found
=
content
.
document
.
querySelectorAll
(
"
[
data
-
section
-
id
=
'
highlights
'
]
.
card
-
context
-
icon
.
icon
-
bookmark
-
added
"
)
.
length
;
is
(
found
2
"
there
should
be
2
bookmark
icons
"
)
;
}
)
;
test_highlights
(
1
function
check_highlights_context_menu
(
)
{
const
menuButton
=
content
.
document
.
querySelector
(
"
[
data
-
section
-
id
=
'
highlights
'
]
.
card
-
outer
.
context
-
menu
-
button
"
)
;
menuButton
.
click
(
)
;
const
found
=
content
.
document
.
querySelector
(
"
[
data
-
section
-
id
=
'
highlights
'
]
.
card
-
outer
.
context
-
menu
"
)
;
ok
(
found
&
&
!
found
.
hidden
"
Should
find
a
visible
context
menu
"
)
;
}
)
;
test_highlights
(
1
async
function
check_highlights_context_menu
(
)
{
const
menuButton
=
content
.
document
.
querySelector
(
"
[
data
-
section
-
id
=
'
highlights
'
]
.
card
-
outer
.
context
-
menu
-
button
"
)
;
menuButton
.
click
(
)
;
const
contextMenu
=
content
.
document
.
querySelector
(
"
[
data
-
section
-
id
=
'
highlights
'
]
.
card
-
outer
.
context
-
menu
"
)
;
ok
(
contextMenu
&
&
!
contextMenu
.
hidden
"
Should
find
a
visible
context
menu
"
)
;
const
removeBookmarkBtn
=
contextMenu
.
querySelector
(
"
[
data
-
section
-
id
=
'
highlights
'
]
button
"
)
;
removeBookmarkBtn
.
click
(
)
;
await
ContentTaskUtils
.
waitForCondition
(
(
)
=
>
content
.
document
.
querySelectorAll
(
"
[
data
-
section
-
id
=
'
highlights
'
]
.
card
-
outer
:
not
(
.
placeholder
)
"
)
"
no
more
bookmark
cards
should
be
visible
"
)
;
}
)
;
