"
use
strict
"
;
const
{
AppConstants
}
=
ChromeUtils
.
importESModule
(
"
resource
:
/
/
gre
/
modules
/
AppConstants
.
sys
.
mjs
"
)
;
XPCOMUtils
.
defineLazyServiceGetter
(
this
"
resProto
"
"
mozilla
.
org
/
network
/
protocol
;
1
?
name
=
resource
"
"
nsISubstitutingProtocolHandler
"
)
;
const
ResourceSubstitution
=
"
newtab
"
;
this
.
resourceMapping
=
class
extends
ExtensionAPI
{
#
manifest
=
null
;
onStartup
(
)
{
if
(
!
AppConstants
.
BROWSER_NEWTAB_AS_ADDON
)
{
return
;
}
const
{
rootURI
}
=
this
.
extension
;
resProto
.
setSubstitutionWithFlags
(
ResourceSubstitution
rootURI
Ci
.
nsISubstitutingProtocolHandler
.
ALLOW_CONTENT_ACCESS
)
;
if
(
this
.
extension
.
rootURI
instanceof
Ci
.
nsIJARURI
)
{
this
.
#
manifest
=
this
.
extension
.
rootURI
.
JARFile
.
QueryInterface
(
Ci
.
nsIFileURL
)
.
file
;
}
else
if
(
this
.
extension
.
rootURI
instanceof
Ci
.
nsIFileURL
)
{
this
.
#
manifest
=
this
.
extension
.
rootURI
.
file
;
}
Components
.
manager
.
addBootstrappedManifestLocation
(
this
.
#
manifest
)
;
}
onShutdown
(
)
{
if
(
!
AppConstants
.
BROWSER_NEWTAB_AS_ADDON
)
{
return
;
}
resProto
.
setSubstitution
(
ResourceSubstitution
null
)
;
Components
.
manager
.
removeBootstrappedManifestLocation
(
this
.
#
manifest
)
;
this
.
#
manifest
=
null
;
}
}
;
