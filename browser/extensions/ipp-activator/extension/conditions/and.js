class
ConditionAnd
extends
ConditionBase
{
#
conditions
;
constructor
(
factory
desc
)
{
super
(
factory
desc
)
;
this
.
#
conditions
=
desc
.
conditions
.
map
(
c
=
>
factory
.
create
(
c
)
)
;
}
async
init
(
)
{
for
(
const
c
of
this
.
#
conditions
)
{
await
c
.
init
(
)
;
}
}
check
(
)
{
for
(
const
c
of
this
.
#
conditions
)
{
if
(
!
c
.
check
(
)
)
{
return
false
;
}
}
return
true
;
}
}
globalThis
.
ConditionAnd
=
ConditionAnd
;
