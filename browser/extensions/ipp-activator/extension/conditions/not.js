class
ConditionNot
extends
ConditionBase
{
#
condition
;
constructor
(
factory
desc
)
{
super
(
factory
desc
)
;
this
.
#
condition
=
desc
?
.
condition
?
factory
.
create
(
desc
.
condition
)
:
null
;
}
async
init
(
)
{
if
(
this
.
#
condition
)
{
await
this
.
#
condition
.
init
(
)
;
}
}
check
(
)
{
if
(
!
this
.
#
condition
)
{
return
true
;
}
return
!
this
.
#
condition
.
check
(
)
;
}
}
globalThis
.
ConditionNot
=
ConditionNot
;
