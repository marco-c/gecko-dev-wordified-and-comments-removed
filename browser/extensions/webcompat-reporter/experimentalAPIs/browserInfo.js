"
use
strict
"
;
var
{
AppConstants
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
AppConstants
.
jsm
"
)
;
var
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
this
.
browserInfo
=
class
extends
ExtensionAPI
{
getAPI
(
context
)
{
return
{
browserInfo
:
{
async
getGraphicsPrefs
(
)
{
const
prefs
=
{
}
;
for
(
const
[
name
dflt
]
of
Object
.
entries
(
{
"
layers
.
acceleration
.
force
-
enabled
"
:
false
"
gfx
.
webrender
.
all
"
:
false
"
gfx
.
webrender
.
blob
-
images
"
:
true
"
gfx
.
webrender
.
enabled
"
:
false
"
image
.
mem
.
shared
"
:
true
}
)
)
{
prefs
[
name
]
=
Services
.
prefs
.
getBoolPref
(
name
dflt
)
;
}
return
prefs
;
}
async
getAppVersion
(
)
{
return
AppConstants
.
MOZ_APP_VERSION
;
}
async
getBlockList
(
)
{
const
trackingTable
=
Services
.
prefs
.
getCharPref
(
"
urlclassifier
.
trackingTable
"
)
;
return
trackingTable
.
includes
(
"
content
"
)
?
"
strict
"
:
"
basic
"
;
}
async
getBuildID
(
)
{
return
Services
.
appinfo
.
appBuildID
;
}
async
getUpdateChannel
(
)
{
return
AppConstants
.
MOZ_UPDATE_CHANNEL
;
}
async
getPlatform
(
)
{
return
AppConstants
.
platform
;
}
async
hasTouchScreen
(
)
{
const
gfxInfo
=
Cc
[
"
mozilla
.
org
/
gfx
/
info
;
1
"
]
.
getService
(
Ci
.
nsIGfxInfo
)
;
return
gfxInfo
.
getInfo
(
)
.
ApzTouchInput
=
=
1
;
}
}
}
;
}
}
;
