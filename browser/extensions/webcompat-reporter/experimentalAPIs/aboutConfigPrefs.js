"
use
strict
"
;
var
{
Services
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
this
.
aboutConfigPrefs
=
class
extends
ExtensionAPI
{
getAPI
(
context
)
{
const
EventManager
=
ExtensionCommon
.
EventManager
;
const
extensionIDBase
=
context
.
extension
.
id
.
split
(
"
"
)
[
0
]
;
const
endpointPrefName
=
extensions
.
{
extensionIDBase
}
.
newIssueEndpoint
;
return
{
aboutConfigPrefs
:
{
onEndpointPrefChange
:
new
EventManager
(
{
context
name
:
"
aboutConfigPrefs
.
onEndpointPrefChange
"
register
:
(
fire
)
=
>
{
const
callback
=
(
)
=
>
{
fire
.
async
(
)
.
catch
(
(
)
=
>
{
}
)
;
}
;
Services
.
prefs
.
addObserver
(
endpointPrefName
callback
)
;
return
(
)
=
>
{
Services
.
prefs
.
removeObserver
(
endpointPrefName
callback
)
;
}
;
}
}
)
.
api
(
)
async
getEndpointPref
(
)
{
return
Services
.
prefs
.
getStringPref
(
endpointPrefName
undefined
)
;
}
async
setEndpointPref
(
value
)
{
Services
.
prefs
.
setStringPref
(
endpointPrefName
value
)
;
}
}
}
;
}
}
;
