let
{
utils
:
Cu
}
=
Components
;
const
SCREENSHOT_MESSAGE
=
"
WebCompat
:
SendScreenshot
"
;
addMessageListener
(
SCREENSHOT_MESSAGE
function
handleMessage
(
message
)
{
removeMessageListener
(
SCREENSHOT_MESSAGE
handleMessage
)
;
try
{
let
sb
=
new
Cu
.
Sandbox
(
content
.
document
.
nodePrincipal
)
;
sb
.
win
=
content
;
sb
.
screenshotBlob
=
Cu
.
cloneInto
(
message
.
data
.
screenshot
content
)
;
sb
.
wcOrigin
=
Cu
.
cloneInto
(
message
.
data
.
origin
content
)
;
Cu
.
evalInSandbox
(
"
win
.
postMessage
(
screenshotBlob
wcOrigin
)
;
"
sb
)
;
Cu
.
nukeSandbox
(
sb
)
;
}
catch
(
ex
)
{
Cu
.
reportError
(
WebCompatReporter
:
sending
a
screenshot
failed
:
{
ex
}
)
;
}
}
)
;
