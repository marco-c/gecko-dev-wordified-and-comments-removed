"
use
strict
"
;
this
.
pageActionExtras
=
class
extends
ExtensionAPI
{
getAPI
(
context
)
{
const
extension
=
context
.
extension
;
const
pageActionAPI
=
extension
.
apiManager
.
getAPI
(
"
pageAction
"
extension
context
.
envType
)
;
const
{
Management
:
{
global
:
{
windowTracker
}
}
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Extension
.
jsm
"
null
)
;
return
{
pageActionExtras
:
{
async
setDefaultTitle
(
title
)
{
pageActionAPI
.
action
.
getContextData
(
null
)
.
title
=
title
;
for
(
const
window
of
windowTracker
.
browserWindows
(
)
)
{
const
tab
=
window
.
gBrowser
.
selectedTab
;
if
(
pageActionAPI
.
action
.
isShownForTab
(
tab
)
)
{
pageActionAPI
.
updateButton
(
window
)
;
}
}
}
async
setLabelForHistogram
(
label
)
{
pageActionAPI
.
browserPageAction
.
_labelForHistogram
=
label
;
}
async
setTooltipText
(
text
)
{
pageActionAPI
.
browserPageAction
.
setTooltip
(
text
)
;
}
}
}
;
}
}
;
