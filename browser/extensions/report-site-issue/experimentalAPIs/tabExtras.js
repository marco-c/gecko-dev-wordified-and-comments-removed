"
use
strict
"
;
const
lazy
=
{
}
;
const
DEFAULT_NEW_REPORT_ENDPOINT
=
"
https
:
/
/
webcompat
.
com
/
issues
/
new
"
;
const
NEW_REPORT_ENDPOINT_PREF
=
"
ui
.
new
-
webcompat
-
reporter
.
new
-
report
-
endpoint
"
;
this
.
tabExtras
=
class
extends
ExtensionAPI
{
getAPI
(
context
)
{
const
{
tabManager
}
=
context
.
extension
;
const
queryReportBrokenSiteActor
=
(
tabId
name
params
)
=
>
{
const
{
browser
}
=
tabManager
.
get
(
tabId
)
;
const
windowGlobal
=
browser
.
browsingContext
.
currentWindowGlobal
;
if
(
!
windowGlobal
)
{
return
null
;
}
return
windowGlobal
.
getActor
(
"
ReportBrokenSite
"
)
.
sendQuery
(
name
params
)
;
}
;
return
{
tabExtras
:
{
async
getWebcompatInfo
(
tabId
)
{
const
endpointUrl
=
Services
.
prefs
.
getStringPref
(
NEW_REPORT_ENDPOINT_PREF
DEFAULT_NEW_REPORT_ENDPOINT
)
;
const
webcompatInfo
=
await
queryReportBrokenSiteActor
(
tabId
"
GetWebCompatInfo
"
)
;
return
{
webcompatInfo
endpointUrl
}
;
}
async
sendWebcompatInfo
(
tabId
info
)
{
console
.
error
(
info
)
;
return
queryReportBrokenSiteActor
(
tabId
"
SendDataToWebcompatCom
"
info
)
;
}
}
}
;
}
}
;
