"
use
strict
"
;
ChromeUtils
.
defineLazyGetter
(
this
"
l10nStrings
"
function
(
)
{
return
Services
.
strings
.
createBundle
(
"
chrome
:
/
/
report
-
site
-
issue
/
locale
/
webcompat
.
properties
"
)
;
}
)
;
let
l10nManifest
;
this
.
l10n
=
class
extends
ExtensionAPI
{
onShutdown
(
isAppShutdown
)
{
if
(
!
isAppShutdown
&
&
l10nManifest
)
{
Components
.
manager
.
removeBootstrappedManifestLocation
(
l10nManifest
)
;
}
}
getAPI
(
context
)
{
if
(
context
.
extension
.
rootURI
instanceof
Ci
.
nsIJARURI
)
{
l10nManifest
=
context
.
extension
.
rootURI
.
JARFile
.
QueryInterface
(
Ci
.
nsIFileURL
)
.
file
;
}
else
if
(
context
.
extension
.
rootURI
instanceof
Ci
.
nsIFileURL
)
{
l10nManifest
=
context
.
extension
.
rootURI
.
file
;
}
if
(
l10nManifest
)
{
Components
.
manager
.
addBootstrappedManifestLocation
(
l10nManifest
)
;
}
else
{
console
.
error
(
"
Cannot
find
webcompat
reporter
chrome
.
manifest
for
registering
translated
strings
"
)
;
}
return
{
l10n
:
{
getMessage
(
name
)
{
try
{
return
Promise
.
resolve
(
l10nStrings
.
GetStringFromName
(
name
)
)
;
}
catch
(
e
)
{
return
Promise
.
reject
(
e
)
;
}
}
}
}
;
}
}
;
