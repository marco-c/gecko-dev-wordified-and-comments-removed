"
use
strict
"
;
(
(
)
=
>
{
const
nativeQuery
=
navigator
.
permissions
.
wrappedJSObject
.
query
.
bind
(
navigator
.
permissions
.
wrappedJSObject
)
;
Object
.
getPrototypeOf
(
navigator
.
permissions
)
.
wrappedJSObject
.
query
=
exportFunction
(
function
query
(
descriptor
)
{
if
(
typeof
descriptor
=
=
"
object
"
)
{
switch
(
descriptor
.
name
)
{
case
"
camera
"
:
case
"
microphone
"
:
{
console
.
log
(
"
permissions
.
query
(
)
has
been
overwriten
to
not
work
with
camera
and
microphone
.
See
https
:
/
/
bugzilla
.
mozilla
.
org
/
show_bug
.
cgi
?
id
=
1928216
#
c9
"
)
;
const
err
=
new
TypeError
(
'
{
descriptor
.
name
}
'
(
value
of
'
name
'
member
of
PermissionDescriptor
)
is
not
a
valid
value
for
enumeration
PermissionName
.
)
;
return
window
.
Promise
.
reject
(
cloneInto
(
err
window
)
)
;
}
}
}
return
nativeQuery
(
descriptor
)
;
}
navigator
.
permissions
)
;
}
)
(
)
;
