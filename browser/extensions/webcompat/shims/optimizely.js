if
(
!
window
.
optimizely
?
.
state
)
{
const
behavior
=
{
query
:
(
)
=
>
[
]
}
;
const
dcp
=
{
getAttributeValue
(
)
{
}
waitForAttributeValue
:
(
)
=
>
Promise
.
resolve
(
)
}
;
const
data
=
{
accountId
:
"
"
audiences
:
{
}
campaigns
:
{
}
clientName
:
"
js
"
clientVersion
:
"
0
.
166
.
0
"
dcpServiceId
:
null
events
:
{
}
experiments
:
{
}
groups
:
{
}
pages
:
{
}
projectId
:
"
"
revision
:
"
"
snippetId
:
null
variations
:
{
}
}
;
const
state
=
{
getActivationId
(
)
{
}
getActiveExperimentIds
(
)
{
}
getCampaignStateLists
(
)
{
}
getCampaignStates
(
)
{
}
getDecisionObject
(
)
{
}
getDecisionString
(
)
{
}
getExperimentStates
(
)
{
}
getPageStates
(
)
{
}
getRedirectInfo
(
)
{
}
getVariationMap
(
)
{
}
isGlobalHoldback
(
)
{
}
}
;
const
utils
=
{
Promise
:
window
.
Promise
observeSelector
(
)
{
}
poll
(
)
{
}
waitForElement
(
)
{
}
waitUntil
(
)
{
}
}
;
const
visitorId
=
{
randomId
:
"
"
}
;
let
browserVersion
=
"
"
;
try
{
browserVersion
=
navigator
.
userAgent
.
match
(
/
rv
:
(
.
*
)
\
)
/
)
[
1
]
;
}
catch
(
_
)
{
}
const
visitor
=
{
browserId
:
"
ff
"
browserVersion
currentTimestamp
:
Date
.
now
(
)
custom
:
{
}
customBehavior
:
{
}
device
:
"
desktop
"
device_type
:
"
desktop_laptop
"
events
:
[
]
first_session
:
true
offset
:
240
referrer
:
null
source_type
:
"
direct
"
visitorId
}
;
window
.
optimizely
=
{
data
:
{
note
:
"
Obsolete
use
optimizely
.
get
(
'
data
'
)
instead
"
}
get
(
e
)
{
switch
(
e
)
{
case
"
behavior
"
:
return
behavior
;
case
"
data
"
:
return
data
;
case
"
dcp
"
:
return
dcp
;
case
"
jquery
"
:
throw
new
Error
(
"
jQuery
not
implemented
"
)
;
case
"
session
"
:
return
undefined
;
case
"
state
"
:
return
state
;
case
"
utils
"
:
return
utils
;
case
"
visitor
"
:
return
visitor
;
case
"
visitor_id
"
:
return
visitorId
;
}
return
undefined
;
}
initialized
:
true
push
(
)
{
}
state
:
{
}
}
;
}
