"
use
strict
"
;
(
function
(
)
{
const
win
=
window
.
wrappedJSObject
;
const
emptyObj
=
new
win
.
Object
(
)
;
const
emptyArr
=
new
win
.
Array
(
)
;
const
emptyMsg
=
cloneInto
(
{
message
:
"
"
}
window
)
;
const
noOpFn
=
cloneInto
(
function
(
)
{
}
window
{
cloneFunctions
:
true
}
)
;
if
(
!
win
.
indexedDB
)
{
const
idb
=
{
open
:
(
)
=
>
win
.
Promise
.
reject
(
emptyMsg
)
}
;
Object
.
defineProperty
(
win
"
indexedDB
"
{
value
:
cloneInto
(
idb
window
{
cloneFunctions
:
true
}
)
}
)
;
}
for
(
const
name
of
[
"
IDBCursor
"
"
IDBDatabase
"
"
IDBIndex
"
"
IDBOpenDBRequest
"
"
IDBRequest
"
"
IDBTransaction
"
]
)
{
if
(
!
win
[
name
]
)
{
Object
.
defineProperty
(
win
name
{
value
:
emptyObj
}
)
;
}
}
if
(
!
win
.
serviceWorker
)
{
const
sw
=
{
addEventListener
(
)
{
}
getRegistrations
:
(
)
=
>
win
.
Promise
.
resolve
(
emptyArr
)
register
:
(
)
=
>
win
.
Promise
.
reject
(
emptyMsg
)
}
;
Object
.
defineProperty
(
navigator
.
wrappedJSObject
"
serviceWorker
"
{
value
:
cloneInto
(
sw
window
{
cloneFunctions
:
true
}
)
}
)
;
Object
.
defineProperty
(
navigator
.
wrappedJSObject
.
serviceWorker
"
ready
"
{
value
:
new
win
.
Promise
(
noOpFn
)
}
)
;
}
if
(
!
win
.
PushManager
)
{
Object
.
defineProperty
(
win
"
PushManager
"
{
value
:
emptyObj
}
)
;
}
if
(
!
win
.
PushSubscription
)
{
const
ps
=
{
prototype
:
{
getKey
(
)
{
}
}
}
;
Object
.
defineProperty
(
win
"
PushSubscription
"
{
value
:
cloneInto
(
ps
window
{
cloneFunctions
:
true
}
)
}
)
;
}
if
(
!
win
.
ServiceWorkerRegistration
)
{
const
swr
=
{
prototype
:
{
showNotification
(
)
{
}
}
}
;
Object
.
defineProperty
(
win
"
ServiceWorkerRegistration
"
{
value
:
cloneInto
(
swr
window
{
cloneFunctions
:
true
}
)
}
)
;
}
}
)
(
)
;
