"
use
strict
"
;
this
.
telemetryEnvironment
=
class
extends
ExtensionAPI
{
getAPI
(
context
)
{
const
{
TelemetryController
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
TelemetryController
.
jsm
"
{
}
)
;
const
{
TelemetryEnvironment
}
=
ChromeUtils
.
import
(
"
resource
:
/
/
gre
/
modules
/
TelemetryEnvironment
.
jsm
"
{
}
)
;
const
collectTelemetryEnvironmentBasedAttributes
=
(
)
=
>
{
const
environment
=
TelemetryEnvironment
.
currentEnvironment
;
return
{
systemMemoryMb
:
environment
.
system
.
memoryMB
systemCpuCount
:
environment
.
system
.
cpu
.
count
systemCpuCores
:
environment
.
system
.
cpu
.
cores
systemCpuVendor
:
environment
.
system
.
cpu
.
vendor
systemCpuFamily
:
environment
.
system
.
cpu
.
family
systemCpuModel
:
environment
.
system
.
cpu
.
model
systemCpuStepping
:
environment
.
system
.
cpu
.
stepping
systemCpuL2cacheKB
:
environment
.
system
.
cpu
.
l2cacheKB
systemCpuL3cacheKB
:
environment
.
system
.
cpu
.
l3cacheKB
systemCpuSpeedMhz
:
environment
.
system
.
cpu
.
speedMHz
systemCpuExtensions
:
environment
.
system
.
cpu
.
extensions
}
;
}
;
return
{
experiments
:
{
telemetryEnvironment
:
{
async
getTranslationRelevantFxTelemetryMetrics
(
)
{
await
TelemetryController
.
promiseInitialized
(
)
;
const
telemetryEnvironmentBasedAttributes
=
collectTelemetryEnvironmentBasedAttributes
(
)
;
return
{
.
.
.
telemetryEnvironmentBasedAttributes
}
;
}
}
}
}
;
}
}
;
