"
use
strict
"
;
const
{
classes
:
Cc
interfaces
:
Ci
utils
:
Cu
results
:
Cr
}
=
Components
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
gre
/
modules
/
XPCOMUtils
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
formautofill
/
FormAutofillContent
.
jsm
"
)
;
Cu
.
import
(
"
resource
:
/
/
formautofill
/
FormAutofillUtils
.
jsm
"
)
;
var
FormAutofillFrameScript
=
{
init
(
)
{
addEventListener
(
"
focusin
"
this
)
;
addMessageListener
(
"
FormAutofill
:
PreviewProfile
"
this
)
;
addMessageListener
(
"
FormAutoComplete
:
PopupClosed
"
this
)
;
}
handleEvent
(
evt
)
{
if
(
!
evt
.
isTrusted
)
{
return
;
}
if
(
!
Services
.
prefs
.
getBoolPref
(
"
extensions
.
formautofill
.
addresses
.
enabled
"
)
)
{
return
;
}
switch
(
evt
.
type
)
{
case
"
focusin
"
:
{
let
element
=
evt
.
target
;
if
(
!
FormAutofillUtils
.
isFieldEligibleForAutofill
(
element
)
)
{
return
;
}
FormAutofillContent
.
identifyAutofillFields
(
element
.
ownerDocument
)
;
break
;
}
}
}
receiveMessage
(
message
)
{
if
(
!
Services
.
prefs
.
getBoolPref
(
"
extensions
.
formautofill
.
addresses
.
enabled
"
)
)
{
return
;
}
switch
(
message
.
name
)
{
case
"
FormAutofill
:
PreviewProfile
"
:
case
"
FormAutoComplete
:
PopupClosed
"
:
FormAutofillContent
.
_previewProfile
(
content
.
document
)
;
break
;
}
}
}
;
FormAutofillFrameScript
.
init
(
)
;
