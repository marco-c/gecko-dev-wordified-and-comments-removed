"
use
strict
"
;
var
EXPORTED_SYMBOLS
=
[
"
OSKeyStoreTestUtils
"
]
;
ChromeUtils
.
import
(
"
resource
:
/
/
formautofill
/
OSKeyStore
.
jsm
"
this
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
LoginTestUtils
.
jsm
"
this
)
;
ChromeUtils
.
import
(
"
resource
:
/
/
testing
-
common
/
TestUtils
.
jsm
"
)
;
var
OSKeyStoreTestUtils
=
{
setup
(
)
{
this
.
ORIGINAL_STORE_LABEL
=
OSKeyStore
.
STORE_LABEL
;
OSKeyStore
.
STORE_LABEL
=
"
test
-
"
+
Math
.
random
(
)
.
toString
(
36
)
.
substr
(
2
)
;
}
async
cleanup
(
)
{
await
OSKeyStore
.
cleanup
(
)
;
OSKeyStore
.
STORE_LABEL
=
this
.
ORIGINAL_STORE_LABEL
;
}
canTestOSKeyStoreLogin
(
)
{
return
true
;
}
async
waitForOSKeyStoreLogin
(
login
=
false
)
{
}
async
waitForMasterPasswordDialog
(
login
=
false
)
{
let
[
subject
]
=
await
TestUtils
.
topicObserved
(
"
common
-
dialog
-
loaded
"
)
;
let
dialog
=
subject
.
Dialog
;
if
(
dialog
.
args
.
title
!
=
=
"
Password
Required
"
)
{
throw
new
Error
(
"
Incorrect
master
password
dialog
title
"
)
;
}
if
(
login
)
{
dialog
.
ui
.
password1Textbox
.
value
=
LoginTestUtils
.
masterPassword
.
masterPassword
;
dialog
.
ui
.
button0
.
click
(
)
;
}
else
{
dialog
.
ui
.
button1
.
click
(
)
;
}
await
TestUtils
.
waitForTick
(
)
;
}
}
;
