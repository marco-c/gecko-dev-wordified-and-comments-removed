var
loop
=
loop
|
|
{
}
;
loop
.
store
=
loop
.
store
|
|
{
}
;
loop
.
store
.
RemoteCursorStore
=
(
function
(
)
{
"
use
strict
"
;
var
CURSOR_MESSAGE_TYPES
=
loop
.
shared
.
utils
.
CURSOR_MESSAGE_TYPES
;
var
RemoteCursorStore
=
loop
.
store
.
createStore
(
{
actions
:
[
"
sendCursorData
"
"
receivedCursorData
"
"
videoDimensionsChanged
"
"
videoScreenStreamChanged
"
]
initialize
:
function
(
options
)
{
options
=
options
|
|
{
}
;
if
(
!
options
.
sdkDriver
)
{
throw
new
Error
(
"
Missing
option
sdkDriver
"
)
;
}
this
.
_sdkDriver
=
options
.
sdkDriver
;
loop
.
subscribe
(
"
CursorPositionChange
"
this
.
_cursorPositionChangeListener
.
bind
(
this
)
)
;
loop
.
subscribe
(
"
CursorClick
"
this
.
_cursorClickListener
.
bind
(
this
)
)
;
}
getInitialStoreState
:
function
(
)
{
return
{
realVideoSize
:
null
remoteCursorClick
:
null
remoteCursorPosition
:
null
}
;
}
_cursorClickListener
:
function
(
)
{
this
.
sendCursorData
(
{
type
:
CURSOR_MESSAGE_TYPES
.
CLICK
}
)
;
}
_cursorPositionChangeListener
:
function
(
event
)
{
this
.
sendCursorData
(
{
ratioX
:
event
.
ratioX
ratioY
:
event
.
ratioY
type
:
CURSOR_MESSAGE_TYPES
.
POSITION
}
)
;
}
sendCursorData
:
function
(
actionData
)
{
switch
(
actionData
.
type
)
{
case
CURSOR_MESSAGE_TYPES
.
POSITION
:
case
CURSOR_MESSAGE_TYPES
.
CLICK
:
this
.
_sdkDriver
.
sendCursorMessage
(
actionData
)
;
break
;
}
}
receivedCursorData
:
function
(
actionData
)
{
switch
(
actionData
.
type
)
{
case
CURSOR_MESSAGE_TYPES
.
POSITION
:
this
.
setStoreState
(
{
remoteCursorPosition
:
{
ratioX
:
actionData
.
ratioX
ratioY
:
actionData
.
ratioY
}
}
)
;
break
;
case
CURSOR_MESSAGE_TYPES
.
CLICK
:
this
.
setStoreState
(
{
remoteCursorClick
:
true
}
)
;
break
;
}
}
videoDimensionsChanged
:
function
(
actionData
)
{
if
(
actionData
.
videoType
!
=
=
"
screen
"
)
{
return
;
}
this
.
setStoreState
(
{
realVideoSize
:
{
height
:
actionData
.
dimensions
.
height
width
:
actionData
.
dimensions
.
width
}
}
)
;
}
videoScreenStreamChanged
:
function
(
actionData
)
{
if
(
actionData
.
hasVideo
)
{
return
;
}
this
.
setStoreState
(
{
remoteCursorPosition
:
null
}
)
;
}
}
)
;
return
RemoteCursorStore
;
}
)
(
)
;
