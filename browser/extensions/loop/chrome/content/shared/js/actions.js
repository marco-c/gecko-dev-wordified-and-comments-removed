var
loop
=
loop
|
|
{
}
;
loop
.
shared
=
loop
.
shared
|
|
{
}
;
loop
.
shared
.
actions
=
(
function
(
)
{
"
use
strict
"
;
function
Action
(
name
schema
values
)
{
var
validatedData
=
new
loop
.
validate
.
Validator
(
schema
|
|
{
}
)
.
validate
(
values
|
|
{
}
)
;
for
(
var
prop
in
validatedData
)
{
this
[
prop
]
=
validatedData
[
prop
]
;
}
this
.
name
=
name
;
}
Action
.
define
=
function
(
name
schema
)
{
return
Action
.
bind
(
null
name
schema
)
;
}
;
return
{
Action
:
Action
GetWindowData
:
Action
.
define
(
"
getWindowData
"
{
windowId
:
String
}
)
ExtractTokenInfo
:
Action
.
define
(
"
extractTokenInfo
"
{
windowPath
:
String
windowHash
:
String
}
)
SetupWindowData
:
Action
.
define
(
"
setupWindowData
"
{
windowId
:
String
type
:
String
}
)
FetchServerData
:
Action
.
define
(
"
fetchServerData
"
{
token
:
String
windowType
:
String
}
)
WindowUnload
:
Action
.
define
(
"
windowUnload
"
{
}
)
RemotePeerDisconnected
:
Action
.
define
(
"
remotePeerDisconnected
"
{
peerHungup
:
Boolean
}
)
ConnectionFailure
:
Action
.
define
(
"
connectionFailure
"
{
reason
:
String
}
)
ConnectedToSdkServers
:
Action
.
define
(
"
connectedToSdkServers
"
{
}
)
RemotePeerConnected
:
Action
.
define
(
"
remotePeerConnected
"
{
}
)
DataChannelsAvailable
:
Action
.
define
(
"
dataChannelsAvailable
"
{
available
:
Boolean
}
)
SendTextChatMessage
:
Action
.
define
(
"
sendTextChatMessage
"
{
contentType
:
String
message
:
String
sentTimestamp
:
String
}
)
ReceivedTextChatMessage
:
Action
.
define
(
"
receivedTextChatMessage
"
{
contentType
:
String
message
:
String
receivedTimestamp
:
String
}
)
SendCursorData
:
Action
.
define
(
"
sendCursorData
"
{
ratioX
:
Number
ratioY
:
Number
type
:
String
}
)
ReceivedCursorData
:
Action
.
define
(
"
receivedCursorData
"
{
ratioX
:
Number
ratioY
:
Number
type
:
String
}
)
SetupStreamElements
:
Action
.
define
(
"
setupStreamElements
"
{
publisherConfig
:
Object
}
)
TileShown
:
Action
.
define
(
"
tileShown
"
{
}
)
GotMediaPermission
:
Action
.
define
(
"
gotMediaPermission
"
{
}
)
MediaConnected
:
Action
.
define
(
"
mediaConnected
"
{
}
)
VideoDimensionsChanged
:
Action
.
define
(
"
videoDimensionsChanged
"
{
isLocal
:
Boolean
videoType
:
String
dimensions
:
Object
}
)
VideoScreenStreamChanged
:
Action
.
define
(
"
videoScreenStreamChanged
"
{
hasVideo
:
Boolean
}
)
MediaStreamCreated
:
Action
.
define
(
"
mediaStreamCreated
"
{
hasVideo
:
Boolean
isLocal
:
Boolean
srcMediaElement
:
Object
}
)
MediaStreamDestroyed
:
Action
.
define
(
"
mediaStreamDestroyed
"
{
isLocal
:
Boolean
}
)
RemoteVideoStatus
:
Action
.
define
(
"
remoteVideoStatus
"
{
videoEnabled
:
Boolean
}
)
SetMute
:
Action
.
define
(
"
setMute
"
{
type
:
String
enabled
:
Boolean
}
)
StartBrowserShare
:
Action
.
define
(
"
startBrowserShare
"
{
}
)
EndScreenShare
:
Action
.
define
(
"
endScreenShare
"
{
}
)
ToggleBrowserSharing
:
Action
.
define
(
"
toggleBrowserSharing
"
{
enabled
:
Boolean
}
)
ScreenSharingState
:
Action
.
define
(
"
screenSharingState
"
{
state
:
String
}
)
ReceivingScreenShare
:
Action
.
define
(
"
receivingScreenShare
"
{
receiving
:
Boolean
}
)
CreateRoom
:
Action
.
define
(
"
createRoom
"
{
}
)
CreatedRoom
:
Action
.
define
(
"
createdRoom
"
{
roomToken
:
String
}
)
CreateRoomError
:
Action
.
define
(
"
createRoomError
"
{
error
:
Object
}
)
DeleteRoom
:
Action
.
define
(
"
deleteRoom
"
{
roomToken
:
String
}
)
DeleteRoomError
:
Action
.
define
(
"
deleteRoomError
"
{
error
:
Object
}
)
GetAllRooms
:
Action
.
define
(
"
getAllRooms
"
{
}
)
GetAllRoomsError
:
Action
.
define
(
"
getAllRoomsError
"
{
error
:
[
Error
Object
]
}
)
UpdateRoomList
:
Action
.
define
(
"
updateRoomList
"
{
roomList
:
Array
}
)
OpenRoom
:
Action
.
define
(
"
openRoom
"
{
roomToken
:
String
}
)
UpdateRoomContext
:
Action
.
define
(
"
updateRoomContext
"
{
roomToken
:
String
}
)
UpdateRoomContextError
:
Action
.
define
(
"
updateRoomContextError
"
{
error
:
[
Error
Object
]
}
)
UpdateRoomContextDone
:
Action
.
define
(
"
updateRoomContextDone
"
{
}
)
CopyRoomUrl
:
Action
.
define
(
"
copyRoomUrl
"
{
from
:
String
roomUrl
:
String
}
)
EmailRoomUrl
:
Action
.
define
(
"
emailRoomUrl
"
{
from
:
String
roomUrl
:
String
}
)
FacebookShareRoomUrl
:
Action
.
define
(
"
facebookShareRoomUrl
"
{
from
:
String
roomUrl
:
String
}
)
ShareRoomUrl
:
Action
.
define
(
"
shareRoomUrl
"
{
provider
:
Object
roomUrl
:
String
}
)
AddSocialShareProvider
:
Action
.
define
(
"
addSocialShareProvider
"
{
}
)
RoomFailure
:
Action
.
define
(
"
roomFailure
"
{
error
:
Object
failedJoinRequest
:
Boolean
}
)
UpdateRoomInfo
:
Action
.
define
(
"
updateRoomInfo
"
{
roomUrl
:
String
}
)
UserAgentHandlesRoom
:
Action
.
define
(
"
userAgentHandlesRoom
"
{
handlesRoom
:
Boolean
}
)
UpdateSocialShareInfo
:
Action
.
define
(
"
updateSocialShareInfo
"
{
socialShareProviders
:
Array
}
)
JoinRoom
:
Action
.
define
(
"
joinRoom
"
{
}
)
MetricsLogJoinRoom
:
Action
.
define
(
"
metricsLogJoinRoom
"
{
userAgentHandledRoom
:
Boolean
}
)
RetryAfterRoomFailure
:
Action
.
define
(
"
retryAfterRoomFailure
"
{
}
)
JoinedRoom
:
Action
.
define
(
"
joinedRoom
"
{
apiKey
:
String
sessionToken
:
String
sessionId
:
String
expires
:
Number
}
)
LeaveRoom
:
Action
.
define
(
"
leaveRoom
"
{
}
)
ShowFeedbackForm
:
Action
.
define
(
"
showFeedbackForm
"
{
}
)
RecordClick
:
Action
.
define
(
"
recordClick
"
{
linkInfo
:
String
}
)
ConnectionStatus
:
Action
.
define
(
"
connectionStatus
"
{
event
:
String
state
:
String
connections
:
Number
sendStreams
:
Number
recvStreams
:
Number
}
)
}
;
}
)
(
)
;
