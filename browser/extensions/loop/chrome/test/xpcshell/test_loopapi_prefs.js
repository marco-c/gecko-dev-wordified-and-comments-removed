"
use
strict
"
;
const
{
LoopAPI
}
=
Cu
.
import
(
"
chrome
:
/
/
loop
/
content
/
modules
/
MozLoopAPI
.
jsm
"
{
}
)
;
var
[
gHandlers
]
=
LoopAPI
.
inspect
(
)
;
add_task
(
function
*
test_mozLoop_charPref
(
)
{
do_register_cleanup
(
function
(
)
{
Services
.
prefs
.
clearUserPref
(
"
loop
.
test
"
)
;
}
)
;
gHandlers
.
SetLoopPref
(
{
data
:
[
"
test
"
"
foo
"
Ci
.
nsIPrefBranch
.
PREF_STRING
]
}
(
)
=
>
{
}
)
;
Assert
.
equal
(
Services
.
prefs
.
getCharPref
(
"
loop
.
test
"
)
"
foo
"
"
should
set
loop
pref
value
correctly
"
)
;
gHandlers
.
GetLoopPref
(
{
data
:
[
"
test
"
]
}
result
=
>
{
Assert
.
equal
(
result
"
foo
"
"
should
get
loop
pref
value
correctly
"
)
;
}
)
;
}
)
;
add_task
(
function
*
test_mozLoop_boolPref
(
)
{
do_register_cleanup
(
function
(
)
{
Services
.
prefs
.
clearUserPref
(
"
loop
.
testBool
"
)
;
}
)
;
Services
.
prefs
.
setBoolPref
(
"
loop
.
testBool
"
true
)
;
gHandlers
.
GetLoopPref
(
{
data
:
[
"
testBool
"
]
}
result
=
>
{
Assert
.
equal
(
result
true
"
should
get
loop
pref
value
correctly
"
)
;
}
)
;
}
)
;
