"
use
strict
"
;
this
.
analytics
=
(
function
(
)
{
const
exports
=
{
}
;
let
telemetryEnabled
;
exports
.
incrementCount
=
function
(
scalar
)
{
const
allowedScalars
=
[
"
download
"
"
upload
"
"
copy
"
"
visible
"
"
full_page
"
"
custom
"
"
element
"
]
;
if
(
!
allowedScalars
.
includes
(
scalar
)
)
{
const
err
=
incrementCount
passed
an
unrecognized
scalar
{
scalar
}
;
log
.
warn
(
err
)
;
return
Promise
.
resolve
(
)
;
}
return
browser
.
telemetry
.
scalarAdd
(
screenshots
.
{
scalar
}
1
)
.
catch
(
err
=
>
{
log
.
warn
(
incrementCount
failed
with
error
:
{
err
}
)
;
}
)
;
}
;
exports
.
refreshTelemetryPref
=
function
(
)
{
return
browser
.
telemetry
.
canUpload
(
)
.
then
(
result
=
>
{
telemetryEnabled
=
result
;
}
error
=
>
{
telemetryEnabled
=
false
;
throw
error
;
}
)
;
}
;
exports
.
isTelemetryEnabled
=
function
(
)
{
catcher
.
watchPromise
(
exports
.
refreshTelemetryPref
(
)
)
;
return
telemetryEnabled
;
}
;
return
exports
;
}
)
(
)
;
