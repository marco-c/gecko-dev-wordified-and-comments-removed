import
pytest
ADDRESS_CSS
=
"
input
[
name
=
MailAddress
]
"
PASSWORD_CSS
=
"
input
[
name
=
Password
]
"
CLOSE_BUTTON_CSS
=
"
input
[
name
=
winclosebutton
]
"
UNAVAILABLE_TEXT
=
"
"
UNSUPPORTED_TEXT
=
"
"
async
def
load_site
(
client
)
:
    
await
client
.
navigate
(
"
https
:
/
/
www
.
mobilesuica
.
com
/
"
)
    
address
=
client
.
find_css
(
ADDRESS_CSS
)
    
password
=
client
.
find_css
(
PASSWORD_CSS
)
    
error1
=
client
.
find_css
(
CLOSE_BUTTON_CSS
)
    
error2
=
client
.
find_text
(
UNSUPPORTED_TEXT
)
    
site_is_down
=
client
.
find_text
(
UNAVAILABLE_TEXT
)
    
if
site_is_down
is
not
None
:
        
pytest
.
xfail
(
"
Site
is
currently
down
"
)
    
return
address
password
error1
or
error2
site_is_down
pytest
.
mark
.
asyncio
pytest
.
mark
.
with_interventions
async
def
test_enabled
(
client
)
:
    
address
password
error
site_is_down
=
await
load_site
(
client
)
    
if
site_is_down
:
        
return
    
assert
client
.
is_displayed
(
address
)
    
assert
client
.
is_displayed
(
password
)
    
assert
error
is
None
pytest
.
mark
.
asyncio
pytest
.
mark
.
without_interventions
async
def
test_disabled
(
client
)
:
    
address
password
error
site_is_down
=
await
load_site
(
client
)
    
if
site_is_down
:
        
return
    
assert
address
is
None
    
assert
password
is
None
    
assert
client
.
is_displayed
(
error
)
