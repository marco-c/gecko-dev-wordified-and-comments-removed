import
pytest
ADDRESS_CSS
=
"
input
[
name
=
MailAddress
]
"
PASSWORD_CSS
=
"
input
[
name
=
Password
]
"
CLOSE_BUTTON_CSS
=
"
input
[
name
=
winclosebutton
]
"
UNAVAILABLE_TEXT
=
"
"
UNSUPPORTED_TEXT
=
"
"
async
def
verify_site_loads
(
client
)
:
    
await
client
.
navigate
(
"
https
:
/
/
www
.
mobilesuica
.
com
/
"
)
    
error1
error2
site_is_down
address
=
client
.
await_first_element_of
(
        
[
            
client
.
css
(
CLOSE_BUTTON_CSS
)
            
client
.
text
(
UNSUPPORTED_TEXT
)
            
client
.
text
(
UNAVAILABLE_TEXT
)
            
client
.
css
(
ADDRESS_CSS
)
        
]
        
is_displayed
=
True
        
timeout
=
10
    
)
    
if
site_is_down
:
        
pytest
.
xfail
(
"
Site
is
currently
down
"
)
        
return
False
    
if
error1
or
error2
:
        
return
False
    
return
address
and
client
.
await_css
(
PASSWORD_CSS
is_displayed
=
True
)
pytest
.
mark
.
asyncio
pytest
.
mark
.
with_interventions
async
def
test_enabled
(
client
)
:
    
await
verify_site_loads
(
client
)
pytest
.
mark
.
asyncio
pytest
.
mark
.
without_interventions
async
def
test_disabled
(
client
)
:
    
assert
not
await
verify_site_loads
(
client
)
