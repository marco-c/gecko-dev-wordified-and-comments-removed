if
(
typeof
window
!
=
=
"
undefined
"
)
{
window
.
onerror
=
(
message
source
lineno
)
=
>
{
dump
(
TEST
-
UNEXPECTED
-
FAIL
|
{
source
}
line
{
lineno
}
:
{
message
}
\
n
)
;
}
;
}
var
TalosContentProfiler
;
(
function
(
)
{
var
initted
=
false
;
var
currentTest
=
"
unknown
"
;
var
interval
entries
featuresArray
threadsArray
profileDir
;
function
sendEventAndWait
(
name
data
=
{
}
)
{
if
(
typeof
sendAsyncMessage
!
=
=
"
undefined
"
)
{
return
new
Promise
(
resolve
=
>
{
sendAsyncMessage
(
"
TalosContentProfiler
:
Command
"
{
name
data
}
)
;
addMessageListener
(
"
TalosContentProfiler
:
Response
"
function
onMsg
(
msg
)
{
if
(
msg
.
data
.
name
!
=
name
)
{
return
;
}
removeMessageListener
(
"
TalosContentProfiler
:
Response
"
onMsg
)
;
resolve
(
msg
.
data
)
;
}
)
;
}
)
;
}
return
new
Promise
(
resolve
=
>
{
var
event
=
new
CustomEvent
(
"
TalosContentProfilerCommand
"
{
bubbles
:
true
detail
:
{
name
data
}
}
)
;
document
.
dispatchEvent
(
event
)
;
addEventListener
(
"
TalosContentProfilerResponse
"
function
onResponse
(
event
)
{
if
(
event
.
detail
.
name
!
=
name
)
{
return
;
}
removeEventListener
(
"
TalosContentProfilerResponse
"
onResponse
)
;
resolve
(
event
.
detail
.
data
)
;
}
)
;
}
)
;
}
function
searchToObject
(
locationSearch
)
{
var
pairs
=
locationSearch
.
substring
(
1
)
.
split
(
"
&
"
)
;
var
result
=
{
}
;
for
(
var
i
in
pairs
)
{
if
(
pairs
[
i
]
!
=
=
"
"
)
{
var
pair
=
pairs
[
i
]
.
split
(
"
=
"
)
;
result
[
decodeURIComponent
(
pair
[
0
]
)
]
=
decodeURIComponent
(
pair
[
1
]
|
|
"
"
)
;
}
}
return
result
;
}
TalosContentProfiler
=
{
initFromObject
(
obj
=
{
}
)
{
if
(
!
initted
)
{
if
(
"
gecko_profile_dir
"
in
obj
&
&
typeof
obj
.
gecko_profile_dir
=
=
"
string
"
&
&
"
gecko_profile_interval
"
in
obj
&
&
Number
.
isFinite
(
obj
.
gecko_profile_interval
*
1
)
&
&
"
gecko_profile_entries
"
in
obj
&
&
Number
.
isFinite
(
obj
.
gecko_profile_entries
*
1
)
&
&
"
gecko_profile_features
"
in
obj
&
&
typeof
obj
.
gecko_profile_features
=
=
"
string
"
&
&
"
gecko_profile_threads
"
in
obj
&
&
typeof
obj
.
gecko_profile_threads
=
=
"
string
"
)
{
interval
=
obj
.
gecko_profile_interval
;
entries
=
obj
.
gecko_profile_entries
;
featuresArray
=
obj
.
gecko_profile_features
.
split
(
"
"
)
;
threadsArray
=
obj
.
gecko_profile_threads
.
split
(
"
"
)
;
profileDir
=
obj
.
gecko_profile_dir
;
initted
=
true
;
}
else
{
console
.
error
(
"
Profiler
could
not
init
with
object
:
"
+
JSON
.
stringify
(
obj
)
)
;
}
}
}
initFromURLQueryParams
(
locationSearch
)
{
this
.
initFromObject
(
searchToObject
(
locationSearch
)
)
;
}
beginTest
(
testName
)
{
if
(
initted
)
{
currentTest
=
testName
;
return
sendEventAndWait
(
"
Profiler
:
Begin
"
{
interval
entries
featuresArray
threadsArray
}
)
;
}
return
Promise
.
resolve
(
)
;
}
finishTest
(
)
{
if
(
initted
)
{
let
profileFile
=
profileDir
+
"
/
"
+
currentTest
+
"
.
profile
"
;
return
sendEventAndWait
(
"
Profiler
:
Finish
"
{
profileFile
}
)
;
}
return
Promise
.
resolve
(
)
;
}
finishStartupProfiling
(
)
{
if
(
initted
)
{
let
profileFile
=
profileDir
+
"
/
startup
.
profile
"
;
return
sendEventAndWait
(
"
Profiler
:
Finish
"
{
profileFile
}
)
;
}
return
Promise
.
resolve
(
)
;
}
resume
(
marker
=
"
"
inittedInParent
=
false
)
{
if
(
initted
|
|
inittedInParent
)
{
return
sendEventAndWait
(
"
Profiler
:
Resume
"
{
marker
}
)
;
}
return
Promise
.
resolve
(
)
;
}
pause
(
marker
=
"
"
inittedInParent
=
false
startTime
=
undefined
)
{
if
(
initted
|
|
inittedInParent
)
{
return
sendEventAndWait
(
"
Profiler
:
Pause
"
{
marker
startTime
}
)
;
}
return
Promise
.
resolve
(
)
;
}
mark
(
marker
inittedInParent
=
false
startTime
=
undefined
)
{
if
(
initted
|
|
inittedInParent
)
{
if
(
!
marker
)
{
marker
=
currentTest
;
}
return
sendEventAndWait
(
"
Profiler
:
Marker
"
{
marker
startTime
}
)
;
}
return
Promise
.
resolve
(
)
;
}
}
;
if
(
typeof
sendAsyncMessage
!
=
=
"
undefined
"
)
{
content
.
wrappedJSObject
.
TalosContentProfiler
=
TalosContentProfiler
;
}
}
)
(
)
;
