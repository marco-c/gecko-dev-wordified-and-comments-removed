var
results
=
{
}
;
var
baseUrl
=
'
http
:
/
/
localhost
:
16932
'
;
var
testsTable
=
document
.
getElementById
(
'
tests
'
)
;
var
dontLog
=
true
;
function
log
(
msg
)
{
if
(
!
dontLog
)
{
var
div
=
document
.
getElementById
(
"
log
"
)
;
div
.
innerHTML
=
"
<
p
>
"
+
msg
+
"
<
/
p
>
"
;
}
}
var
updateResults
=
function
(
test
)
{
if
(
test
.
results
)
{
results
[
test
.
name
]
=
test
.
results
}
var
row
=
document
.
createElement
(
'
tr
'
)
;
var
nameCell
=
document
.
createElement
(
'
td
'
)
;
nameCell
.
textContent
=
test
.
name
;
var
outcomeCell
=
document
.
createElement
(
'
td
'
)
;
outcomeCell
.
textContent
=
test
.
results
;
row
.
appendChild
(
nameCell
)
;
row
.
appendChild
(
outcomeCell
)
;
testsTable
.
appendChild
(
row
)
;
}
;
var
tests
=
[
{
name
:
'
audio_peer_connection_quality
'
src
:
'
input16
.
wav
'
timeout
:
10
forceTimeout
:
15000
test
:
audioPCQuality
}
{
name
:
'
audio_playback_quality
'
src
:
'
input16
.
wav
'
timeout
:
10
forceTimeout
:
15000
test
:
audioPlayback
}
]
;
var
nextTestIndex
=
0
;
var
runNextTest
=
function
(
)
{
var
testIndex
=
nextTestIndex
+
+
;
if
(
testIndex
>
=
tests
.
length
)
{
dump
(
"
__start_report
\
n
"
)
;
dump
(
"
audio_playback_quality_snr_in_db
"
+
results
[
"
audio_playback_quality_snr_in_db
"
]
+
"
\
n
"
)
;
dump
(
"
audio_playback_quality_delay_in_ms
"
+
results
[
"
audio_playback_quality_delay_in_ms
"
]
+
"
\
n
"
)
;
dump
(
"
__end_report
\
n
"
)
;
dump
(
"
__startTimestamp
"
+
results
[
"
BEGIN_TIME_STAMP
"
]
+
"
__endTimestamp
\
n
"
)
;
var
request
=
new
XMLHttpRequest
(
)
;
var
url
=
baseUrl
+
'
/
server
/
config
/
stop
'
;
request
.
open
(
'
GET
'
url
false
)
;
request
.
send
(
)
;
goQuitApplication
(
)
;
window
.
close
(
)
;
}
else
{
var
test
=
tests
[
testIndex
]
;
setTimeout
(
function
(
)
{
checkTimeout
(
test
)
;
}
test
.
forceTimeout
)
;
test
.
test
(
)
;
}
}
;
var
checkTimeout
=
function
(
test
)
{
if
(
!
test
.
finished
)
{
test
.
finished
=
true
;
log
(
"
test
"
+
test
.
name
+
"
timed
out
"
)
;
runNextTest
(
)
;
}
}
;
results
[
'
BEGIN_TIME_STAMP
'
]
=
new
Date
(
)
.
getTime
(
)
;
setTimeout
(
runNextTest
100
)
;
