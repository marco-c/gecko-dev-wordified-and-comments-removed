"
use
strict
"
;
var
Services
=
Components
.
utils
.
import
(
"
resource
:
/
/
gre
/
modules
/
Services
.
jsm
"
{
}
)
.
Services
;
function
finish
(
)
{
Profiler
.
pause
(
"
This
test
measures
the
time
between
sessionRestoreInit
and
sessionRestored
ignore
everything
around
that
"
)
;
Profiler
.
initFromURLQueryParams
(
location
.
search
)
;
Profiler
.
finishStartupProfiling
(
)
;
setTimeout
(
function
(
)
{
var
startup_info
=
Services
.
startup
.
getStartupInfo
(
)
;
var
duration
=
startup_info
.
sessionRestored
-
startup_info
.
sessionRestoreInit
;
document
.
getElementById
(
"
sessionRestoreInit
-
to
-
sessionRestored
"
)
.
textContent
=
duration
+
"
ms
"
;
dumpLog
(
"
__start_report
"
+
duration
+
"
__end_report
\
n
\
n
"
)
;
dumpLog
(
"
__startTimestamp
"
+
Date
.
now
(
)
+
"
__endTimestamp
\
n
\
n
"
)
;
goQuitApplication
(
)
;
}
0
)
;
}
function
main
(
)
{
var
startup_info
=
Services
.
startup
.
getStartupInfo
(
)
;
if
(
typeof
startup_info
.
sessionRestored
!
=
"
undefined
"
&
&
typeof
startup_info
.
sessionRestoreInit
!
=
"
undefined
"
)
{
finish
(
)
;
return
;
}
Services
.
obs
.
addObserver
(
finish
"
sessionstore
-
windows
-
restored
"
false
)
;
}
main
(
)
;
