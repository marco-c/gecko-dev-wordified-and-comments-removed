var
Profiler
;
(
function
(
)
{
var
_profiler
;
var
test_name
=
this
.
document
?
this
.
document
.
location
.
pathname
:
"
unknown
"
;
var
enabled
=
false
;
var
currentTest
=
"
"
;
var
profiler_interval
profiler_entries
profiler_featuresArray
profiler_threadsArray
profiler_dir
;
try
{
_profiler
=
Cc
[
"
mozilla
.
org
/
tools
/
profiler
;
1
"
]
.
getService
(
Ci
.
nsIProfiler
)
;
}
catch
(
ex
)
{
(
typeof
dumpLog
=
=
"
undefined
"
?
dump
:
dumpLog
)
(
ex
+
"
\
n
"
)
;
}
function
searchToObject
(
locationSearch
)
{
var
pairs
=
locationSearch
.
substring
(
1
)
.
split
(
"
&
"
)
;
var
result
=
{
}
;
for
(
var
i
in
pairs
)
{
if
(
pairs
[
i
]
!
=
=
"
"
)
{
var
pair
=
pairs
[
i
]
.
split
(
"
=
"
)
;
result
[
decodeURIComponent
(
pair
[
0
]
)
]
=
decodeURIComponent
(
pair
[
1
]
|
|
"
"
)
;
}
}
return
result
;
}
Profiler
=
{
initFromObject
:
function
Profiler__initFromObject
(
obj
)
{
if
(
obj
&
&
"
gecko_profile_dir
"
in
obj
&
&
typeof
obj
.
gecko_profile_dir
=
=
"
string
"
&
&
"
gecko_profile_interval
"
in
obj
&
&
Number
.
isFinite
(
obj
.
gecko_profile_interval
*
1
)
&
&
"
gecko_profile_entries
"
in
obj
&
&
Number
.
isFinite
(
obj
.
gecko_profile_entries
*
1
)
&
&
"
gecko_profile_features
"
in
obj
&
&
typeof
obj
.
gecko_profile_features
=
=
"
string
"
&
&
"
gecko_profile_threads
"
in
obj
&
&
typeof
obj
.
gecko_profile_threads
=
=
"
string
"
)
{
profiler_interval
=
obj
.
gecko_profile_interval
;
profiler_entries
=
obj
.
gecko_profile_entries
;
profiler_featuresArray
=
obj
.
gecko_profile_features
.
split
(
"
"
)
;
profiler_threadsArray
=
obj
.
gecko_profile_threads
.
split
(
"
"
)
;
profiler_dir
=
obj
.
gecko_profile_dir
;
enabled
=
true
;
}
}
initFromURLQueryParams
:
function
Profiler__initFromURLQueryParams
(
locationSearch
)
{
this
.
initFromObject
(
searchToObject
(
locationSearch
)
)
;
}
beginTest
:
function
Profiler__beginTest
(
testName
)
{
currentTest
=
testName
;
if
(
_profiler
&
&
enabled
)
{
_profiler
.
StartProfiler
(
profiler_entries
profiler_interval
profiler_featuresArray
profiler_threadsArray
)
;
}
}
finishTest
:
function
Profiler__finishTest
(
)
{
if
(
_profiler
&
&
enabled
)
{
_profiler
.
Pause
(
)
;
_profiler
.
dumpProfileToFile
(
profiler_dir
+
"
/
"
+
currentTest
+
"
.
profile
"
)
;
_profiler
.
StopProfiler
(
)
;
}
}
finishStartupProfiling
:
function
Profiler__finishStartupProfiling
(
)
{
if
(
_profiler
&
&
enabled
)
{
_profiler
.
dumpProfileToFile
(
profiler_dir
+
"
/
startup
.
profile
"
)
;
_profiler
.
StopProfiler
(
)
;
}
}
subtestStart
:
function
Profiler__subtestStart
(
name
explicit
)
{
if
(
_profiler
)
{
ChromeUtils
.
addProfilerMarker
(
explicit
?
name
:
'
Start
of
test
"
'
+
(
name
|
|
test_name
)
+
'
"
'
{
category
:
"
Test
"
}
)
;
}
}
subtestEnd
:
function
Profiler__subtestEnd
(
name
explicit
)
{
if
(
_profiler
)
{
ChromeUtils
.
addProfilerMarker
(
explicit
?
name
:
'
End
of
test
"
'
+
(
name
|
|
test_name
)
+
'
"
'
{
category
:
"
Test
"
}
)
;
}
}
mark
:
function
Profiler__mark
(
marker
explicit
)
{
if
(
_profiler
)
{
ChromeUtils
.
addProfilerMarker
(
explicit
?
marker
:
'
Profiler
:
"
'
+
(
marker
|
|
test_name
)
+
'
"
'
{
category
:
"
Test
"
}
)
;
}
}
}
;
}
)
(
)
;
