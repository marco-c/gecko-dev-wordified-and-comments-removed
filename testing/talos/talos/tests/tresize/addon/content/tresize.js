var
dataSet
=
[
]
;
var
windowSize
=
425
;
var
resizeIncrement
=
2
;
var
count
=
0
;
var
max
=
300
;
var
dumpDataSet
=
false
;
var
doneCallback
=
null
;
function
painted
(
)
{
window
.
removeEventListener
(
"
MozAfterPaint
"
painted
true
)
;
var
paintTime
=
window
.
performance
.
now
(
)
;
Profiler
.
pause
(
"
resize
"
+
count
)
;
dataSet
[
count
]
.
end
=
paintTime
;
setTimeout
(
resizeCompleted
20
)
;
}
function
resizeTest
(
)
{
try
{
windowSize
+
=
resizeIncrement
;
window
.
addEventListener
(
"
MozAfterPaint
"
painted
true
)
;
Profiler
.
resume
(
"
resize
"
+
count
)
;
dataSet
[
count
]
=
{
"
start
"
:
window
.
performance
.
now
(
)
}
;
window
.
resizeTo
(
windowSize
windowSize
)
;
}
catch
(
ex
)
{
finish
(
{
error
:
ex
.
message
}
)
;
}
}
function
testCompleted
(
)
{
try
{
Profiler
.
finishTest
(
)
;
var
total
=
0
;
var
diffs
=
[
]
;
for
(
var
idx
=
0
;
idx
<
count
;
idx
+
+
)
{
var
diff
=
dataSet
[
idx
]
.
end
-
dataSet
[
idx
]
.
start
;
total
+
=
diff
;
diffs
.
push
(
diff
)
;
}
var
average
=
(
total
/
count
)
;
finish
(
{
diffs
average
}
)
;
}
catch
(
ex
)
{
finish
(
{
error
:
ex
.
message
}
)
;
}
}
function
resizeCompleted
(
)
{
count
+
+
;
if
(
count
>
=
max
)
{
testCompleted
(
)
;
}
else
{
resizeTest
(
)
;
}
}
function
runTest
(
callback
locationSearch
)
{
doneCallback
=
callback
;
window
.
moveTo
(
10
10
)
;
window
.
resizeTo
(
windowSize
windowSize
)
;
Profiler
.
initFromURLQueryParams
(
locationSearch
)
;
Profiler
.
beginTest
(
"
tresize
"
)
;
resizeTest
(
)
;
}
function
finish
(
msgs
)
{
if
(
doneCallback
)
{
doneCallback
(
msgs
)
;
}
}
