"
use
strict
"
;
const
{
EVENTS
}
=
require
(
"
devtools
/
client
/
netmonitor
/
src
/
constants
"
)
;
const
{
openToolbox
closeToolbox
reloadPageAndLog
testSetup
testTeardown
PAGES_BASE_URL
}
=
require
(
"
damp
-
test
/
tests
/
head
"
)
;
module
.
exports
=
async
function
(
)
{
await
testSetup
(
PAGES_BASE_URL
+
"
custom
/
panels
-
in
-
background
/
index
.
html
"
)
;
let
toolbox
=
await
openToolbox
(
"
webconsole
"
)
;
let
monitor
=
await
toolbox
.
selectTool
(
"
netmonitor
"
)
;
await
toolbox
.
selectTool
(
"
options
"
)
;
let
payloadReady
=
waitForPayload
(
601
monitor
.
panelWin
)
;
await
reloadPageAndLog
(
"
panelsInBackground
"
toolbox
)
;
await
payloadReady
;
await
closeToolbox
(
)
;
await
testTeardown
(
)
;
}
;
function
waitForPayload
(
count
panelWin
)
{
return
new
Promise
(
resolve
=
>
{
let
payloadReady
=
0
;
function
onPayloadReady
(
)
{
payloadReady
+
+
;
maybeResolve
(
)
;
}
function
maybeResolve
(
)
{
if
(
payloadReady
>
=
count
)
{
panelWin
.
api
.
off
(
EVENTS
.
PAYLOAD_READY
onPayloadReady
)
;
resolve
(
)
;
}
}
panelWin
.
api
.
on
(
EVENTS
.
PAYLOAD_READY
onPayloadReady
)
;
}
)
;
}
