"
use
strict
"
;
const
{
openToolboxAndLog
closeToolboxAndLog
runTest
testSetup
testTeardown
PAGES_BASE_URL
}
=
require
(
"
damp
-
test
/
tests
/
head
"
)
;
const
{
reloadConsoleAndLog
waitForConsoleOutputChildListChange
}
=
require
(
"
damp
-
test
/
tests
/
webconsole
/
webconsole
-
helpers
"
)
;
const
TEST_URL
=
PAGES_BASE_URL
+
"
custom
/
console
/
index
.
html
"
;
module
.
exports
=
async
function
(
)
{
const
sync
=
10000
stream
=
100
batch
=
10
batchSize
=
500
;
const
params
=
?
sync
=
{
sync
}
&
stream
=
{
stream
}
&
batch
=
{
batch
}
&
batchSize
=
{
batchSize
}
;
const
url
=
TEST_URL
+
params
;
await
testSetup
(
url
{
disableCache
:
true
}
)
;
const
toolbox
=
await
openToolboxAndLog
(
"
custom
.
webconsole
"
"
webconsole
"
)
;
const
{
hud
}
=
toolbox
.
getPanel
(
"
webconsole
"
)
;
await
waitForConsoleOutputChildListChange
(
hud
consoleOutput
=
>
{
const
messages
=
consoleOutput
.
querySelectorAll
(
"
.
message
-
body
"
)
;
return
(
messages
&
&
messages
[
messages
.
length
-
1
]
?
.
textContent
.
includes
(
"
very
last
message
"
)
)
;
}
)
;
await
reloadConsoleAndLog
(
"
custom
"
toolbox
[
{
text
:
"
very
last
message
"
}
]
)
;
dump
(
"
Clear
console
\
n
"
)
;
const
onMessageCleared
=
waitForConsoleOutputChildListChange
(
hud
consoleOutput
=
>
consoleOutput
.
querySelector
(
"
.
message
-
body
"
)
=
=
null
)
;
hud
.
ui
.
clearOutput
(
true
)
;
await
onMessageCleared
;
dump
(
"
Console
cleared
\
n
"
)
;
const
outOfOrderTest
=
runTest
(
"
custom
.
webconsole
.
out
-
of
-
order
"
)
;
const
TOTAL_MESSAGES
=
10000
;
hud
.
ui
.
wrapper
.
dispatchEvaluateExpression
(
for
(
let
i
=
0
;
i
<
{
TOTAL_MESSAGES
}
;
i
+
+
)
console
.
info
(
"
expression
log
"
i
)
)
;
await
waitForConsoleOutputChildListChange
(
hud
consoleOutput
=
>
{
const
infoMessages
=
consoleOutput
.
querySelectorAll
(
"
.
message
.
info
.
message
-
body
"
)
;
return
infoMessages
[
infoMessages
.
length
-
1
]
?
.
textContent
.
includes
(
"
expression
log
"
+
(
TOTAL_MESSAGES
-
1
)
)
;
}
)
;
outOfOrderTest
.
done
(
)
;
await
closeToolboxAndLog
(
"
custom
.
webconsole
"
toolbox
)
;
await
testTeardown
(
)
;
}
;
