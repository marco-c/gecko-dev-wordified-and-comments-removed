"
use
strict
"
;
const
{
openToolbox
closeToolbox
logTestResult
testSetup
testTeardown
SIMPLE_URL
}
=
require
(
"
damp
-
test
/
tests
/
head
"
)
;
module
.
exports
=
async
function
(
)
{
let
TOTAL_MESSAGES
=
100
;
let
tab
=
await
testSetup
(
SIMPLE_URL
)
;
let
messageManager
=
tab
.
linkedBrowser
.
messageManager
;
await
openToolbox
(
"
webconsole
"
)
;
messageManager
.
loadFrameScript
(
"
data
:
(
"
+
encodeURIComponent
(
function
(
)
{
let
count
=
0
;
let
startTime
=
content
.
performance
.
now
(
)
;
function
log
(
)
{
if
(
+
+
count
<
{
TOTAL_MESSAGES
}
)
{
content
.
document
.
querySelector
(
"
h1
"
)
.
textContent
+
=
count
+
"
\
\
n
"
;
content
.
console
.
log
(
'
damp
'
count
content
content
.
document
content
.
document
.
body
content
.
document
.
documentElement
new
Array
(
100
)
.
join
(
"
DAMP
?
DAMP
!
"
)
)
;
content
.
requestAnimationFrame
(
log
)
;
}
else
{
sendSyncMessage
(
"
done
"
(
content
.
performance
.
now
(
)
-
startTime
)
)
;
}
}
log
(
)
;
}
)
+
"
)
(
)
"
true
)
;
let
avgTime
=
await
new
Promise
(
resolve
=
>
{
messageManager
.
addMessageListener
(
"
done
"
e
=
>
{
resolve
(
e
.
data
)
;
}
)
;
}
)
;
logTestResult
(
"
console
.
streamlog
"
avgTime
)
;
await
closeToolbox
(
)
;
await
testTeardown
(
)
;
}
;
