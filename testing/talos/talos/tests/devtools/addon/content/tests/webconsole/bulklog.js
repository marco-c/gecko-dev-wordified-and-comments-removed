"
use
strict
"
;
const
{
openToolbox
closeToolbox
getBrowserWindow
runTest
testSetup
testTeardown
SIMPLE_URL
}
=
require
(
"
chrome
:
/
/
damp
/
content
/
tests
/
head
"
)
;
module
.
exports
=
async
function
(
)
{
let
TOTAL_MESSAGES
=
10
;
let
tab
=
await
testSetup
(
SIMPLE_URL
)
;
let
messageManager
=
tab
.
linkedBrowser
.
messageManager
;
let
toolbox
=
await
openToolbox
(
"
webconsole
"
)
;
let
webconsole
=
toolbox
.
getPanel
(
"
webconsole
"
)
;
let
allMessagesReceived
=
new
Promise
(
resolve
=
>
{
function
receiveMessages
(
messages
)
{
for
(
let
m
of
messages
)
{
if
(
m
.
node
.
textContent
.
includes
(
"
damp
"
+
TOTAL_MESSAGES
)
)
{
webconsole
.
hud
.
ui
.
off
(
"
new
-
messages
"
receiveMessages
)
;
getBrowserWindow
(
)
.
requestAnimationFrame
(
resolve
)
;
}
}
}
webconsole
.
hud
.
ui
.
on
(
"
new
-
messages
"
receiveMessages
)
;
}
)
;
messageManager
.
loadFrameScript
(
"
data
:
(
"
+
encodeURIComponent
(
function
(
)
{
addMessageListener
(
"
do
-
logs
"
function
(
)
{
for
(
var
i
=
0
;
i
<
{
TOTAL_MESSAGES
}
;
i
+
+
)
{
content
.
console
.
log
(
'
damp
'
i
+
1
content
)
;
}
}
)
;
}
)
+
"
)
(
)
"
true
)
;
messageManager
.
sendAsyncMessage
(
"
do
-
logs
"
)
;
let
test
=
runTest
(
"
console
.
bulklog
"
)
;
await
allMessagesReceived
;
test
.
done
(
)
;
await
closeToolbox
(
)
;
await
testTeardown
(
)
;
}
;
