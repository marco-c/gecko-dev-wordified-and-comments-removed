"
use
strict
"
;
const
{
EVENTS
}
=
require
(
"
devtools
/
client
/
netmonitor
/
src
/
constants
"
)
;
const
{
getToolbox
runTest
}
=
require
(
"
.
.
/
head
"
)
;
async
function
waitForAllRequestsFinished
(
expectedRequests
)
{
let
toolbox
=
await
getToolbox
(
)
;
let
window
=
toolbox
.
getCurrentPanel
(
)
.
panelWin
;
return
new
Promise
(
resolve
=
>
{
let
payloadReady
=
0
;
let
timingsUpdated
=
0
;
function
onPayloadReady
(
_
id
)
{
payloadReady
+
+
;
maybeResolve
(
)
;
}
function
onTimingsUpdated
(
_
id
)
{
timingsUpdated
+
+
;
maybeResolve
(
)
;
}
function
maybeResolve
(
)
{
if
(
payloadReady
>
=
expectedRequests
&
&
timingsUpdated
>
=
expectedRequests
)
{
window
.
api
.
off
(
EVENTS
.
PAYLOAD_READY
onPayloadReady
)
;
window
.
api
.
off
(
EVENTS
.
RECEIVED_EVENT_TIMINGS
onTimingsUpdated
)
;
resolve
(
)
;
}
}
window
.
api
.
on
(
EVENTS
.
PAYLOAD_READY
onPayloadReady
)
;
window
.
api
.
on
(
EVENTS
.
RECEIVED_EVENT_TIMINGS
onTimingsUpdated
)
;
}
)
;
}
exports
.
waitForNetworkRequests
=
async
function
(
label
toolbox
expectedRequests
)
{
let
test
=
runTest
(
label
+
"
.
requestsFinished
.
DAMP
"
)
;
await
waitForAllRequestsFinished
(
expectedRequests
)
;
test
.
done
(
)
;
}
;
exports
.
exportHar
=
async
function
(
label
toolbox
)
{
let
test
=
runTest
(
label
+
"
.
exportHar
"
)
;
await
toolbox
.
getHARFromNetMonitor
(
)
;
test
.
done
(
)
;
}
;
