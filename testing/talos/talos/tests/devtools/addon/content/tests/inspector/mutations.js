"
use
strict
"
;
const
{
openToolbox
closeToolbox
runTest
testSetup
testTeardown
SIMPLE_URL
}
=
require
(
"
.
.
/
head
"
)
;
module
.
exports
=
async
function
(
)
{
let
tab
=
await
testSetup
(
SIMPLE_URL
)
;
let
messageManager
=
tab
.
linkedBrowser
.
messageManager
;
let
toolbox
=
await
openToolbox
(
"
inspector
"
)
;
let
inspector
=
toolbox
.
getPanel
(
"
inspector
"
)
;
const
LIMIT
=
100
;
const
DELAY
=
5
;
messageManager
.
loadFrameScript
(
"
data
:
(
"
+
encodeURIComponent
(
function
(
)
{
const
LIMIT
=
{
LIMIT
}
;
addMessageListener
(
"
start
-
mutations
-
test
"
function
(
)
{
let
addElement
=
function
(
index
)
{
if
(
index
=
=
LIMIT
)
{
/
/
LIMIT
was
reached
stop
adding
elements
.
return
;
}
let
div
=
content
.
document
.
createElement
(
"
div
"
)
;
content
.
document
.
body
.
appendChild
(
div
)
;
content
.
setTimeout
(
(
)
=
>
addElement
(
index
+
1
)
{
DELAY
}
)
;
}
;
addElement
(
0
)
;
}
)
;
}
)
+
"
)
(
)
"
false
)
;
let
test
=
runTest
(
"
inspector
.
mutations
"
)
;
await
new
Promise
(
resolve
=
>
{
let
childListMutationsCounter
=
0
;
inspector
.
on
(
"
markupmutation
"
mutations
=
>
{
let
childListMutations
=
mutations
.
filter
(
m
=
>
m
.
type
=
=
=
"
childList
"
)
;
childListMutationsCounter
+
=
childListMutations
.
length
;
if
(
childListMutationsCounter
=
=
=
LIMIT
)
{
resolve
(
)
;
}
}
)
;
messageManager
.
sendAsyncMessage
(
"
start
-
mutations
-
test
"
)
;
}
)
;
test
.
done
(
)
;
await
closeToolbox
(
)
;
await
testTeardown
(
)
;
}
;
