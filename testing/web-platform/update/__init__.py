import
os
import
sys
from
mozfile
import
load_source
from
mozlog
import
structuredlog
here
=
os
.
path
.
split
(
__file__
)
[
0
]
load_source
(
    
"
localpaths
"
os
.
path
.
join
(
here
os
.
pardir
"
tests
"
"
tools
"
"
localpaths
.
py
"
)
)
from
wptrunner
.
update
import
WPTUpdate
setup_logging
from
wptrunner
.
update
.
base
import
exit_unclean
from
.
import
updatecommandline
from
.
update
import
UpdateRunner
def
run_update
(
logger
*
*
kwargs
)
:
    
updater
=
WPTUpdate
(
logger
runner_cls
=
UpdateRunner
*
*
kwargs
)
    
return
updater
.
run
(
)
if
__name__
=
=
"
__main__
"
:
    
args
=
updatecommandline
.
parse_args
(
)
    
logger
=
setup_logging
(
args
{
"
mach
"
:
sys
.
stdout
}
)
    
assert
structuredlog
.
get_default_logger
(
)
is
not
None
    
rv
=
run_update
(
logger
*
*
args
)
    
if
rv
is
exit_unclean
:
        
sys
.
exit
(
1
)
    
else
:
        
sys
.
exit
(
0
)
