import
{
Fixture
}
from
'
.
.
/
.
.
/
common
/
framework
/
fixture
.
js
'
;
import
{
getGPU
}
from
'
.
.
/
.
.
/
common
/
util
/
navigator_gpu
.
js
'
;
import
{
assert
}
from
'
.
.
/
.
.
/
common
/
util
/
util
.
js
'
;
export
class
IDLTest
extends
Fixture
{
async
init
(
)
{
getGPU
(
)
;
}
assertMember
(
act
exp
key
)
{
assert
(
key
in
act
(
)
=
>
Expected
key
{
key
}
missing
)
;
assert
(
act
[
key
]
=
=
=
exp
[
key
]
(
)
=
>
Value
of
[
{
key
}
]
was
{
act
[
key
]
}
expected
{
exp
[
key
]
}
)
;
}
assertMemberCount
(
act
exp
)
{
const
expKeys
=
Object
.
keys
(
exp
)
;
const
actKeys
=
Object
.
keys
(
act
)
;
assert
(
actKeys
.
length
=
=
=
expKeys
.
length
(
)
=
>
Had
{
actKeys
.
length
}
keys
expected
{
expKeys
.
length
}
)
;
}
}
