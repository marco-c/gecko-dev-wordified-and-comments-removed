import
{
kMaximumLimitBaseParams
makeLimitTestGroup
}
from
'
.
/
limit_utils
.
js
'
;
const
limit
=
'
maxTextureDimension1D
'
;
export
const
{
g
description
}
=
makeLimitTestGroup
(
limit
)
;
g
.
test
(
'
createTexture
at_over
'
)
.
desc
(
Test
using
at
and
over
{
limit
}
limit
)
.
params
(
kMaximumLimitBaseParams
)
.
fn
(
async
(
t
)
=
>
{
const
{
limitTest
testValueName
}
=
t
.
params
;
await
t
.
testDeviceWithRequestedMaximumLimits
(
limitTest
testValueName
async
(
{
device
testValue
shouldError
}
)
=
>
{
await
t
.
testForValidationErrorWithPossibleOutOfMemoryError
(
(
)
=
>
{
const
texture
=
device
.
createTexture
(
{
size
:
[
testValue
1
1
]
format
:
'
rgba8unorm
'
dimension
:
'
1d
'
usage
:
GPUTextureUsage
.
TEXTURE_BINDING
}
)
;
if
(
!
shouldError
)
{
texture
.
destroy
(
)
;
}
}
shouldError
)
;
}
)
;
}
)
;
