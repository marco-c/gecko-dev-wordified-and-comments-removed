promise_test
(
async
t
=
>
{
const
bc
=
new
BroadcastChannel
(
"
Coordinate
writables
"
)
;
function
firstReady
(
win
)
{
return
new
Promise
(
resolve
=
>
{
win
.
onblur
=
(
)
=
>
{
const
timeoutMs
=
400
;
setTimeout
(
(
)
=
>
{
resolve
(
win
)
;
}
timeoutMs
)
;
}
;
}
)
;
}
const
firstTabName
=
"
support
/
fs
-
open_writable_then_close_tab
.
sub
.
html
"
;
const
firstTab
=
await
firstReady
(
window
.
open
(
firstTabName
)
)
;
assert_true
(
firstTab
.
closed
"
Is
the
first
tab
already
closed
?
"
)
;
function
secondReady
(
win
)
{
return
new
Promise
(
resolve
=
>
{
bc
.
onmessage
=
e
=
>
{
if
(
e
.
data
=
=
=
"
Second
window
ready
!
"
)
{
resolve
(
win
)
;
}
}
;
}
)
;
}
const
secondTabName
=
"
support
/
fs
-
open_writable_after_trigger
.
sub
.
html
"
;
const
secondTab
=
await
secondReady
(
window
.
open
(
secondTabName
)
)
;
let
isDone
=
false
;
let
childStatus
=
"
Success
"
;
const
secondSucceeded
=
new
Promise
(
resolve
=
>
{
bc
.
onmessage
=
e
=
>
{
isDone
=
true
;
if
(
e
.
data
!
=
=
"
Success
"
)
{
childStatus
=
e
.
data
;
}
resolve
(
)
;
}
;
}
)
;
bc
.
postMessage
(
"
Create
writable
in
the
second
window
"
)
;
await
secondSucceeded
;
assert_true
(
isDone
"
Did
the
second
tab
respond
?
"
)
;
await
fetch_tests_from_window
(
secondTab
)
;
assert_equals
(
childStatus
"
Success
"
)
;
}
writable
available
for
other
tabs
after
one
tab
is
closed
)
;
