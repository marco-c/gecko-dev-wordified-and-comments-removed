const
reftestZoom
=
"
reftest
-
zoom
"
;
const
root
=
document
.
documentElement
;
if
(
!
root
.
hasAttribute
(
reftestZoom
)
)
{
throw
new
Error
(
{
reftestZoom
}
attribute
not
found
on
the
root
element
.
)
;
}
let
zoom
=
parseFloat
(
root
.
getAttribute
(
reftestZoom
)
)
;
if
(
Number
.
isNaN
(
zoom
)
)
{
throw
new
Error
(
{
reftestZoom
}
is
not
a
float
number
.
)
;
}
let
minZoom
=
SpecialPowers
.
getIntPref
(
"
zoom
.
minPercent
"
)
/
100
;
let
maxZoom
=
SpecialPowers
.
getIntPref
(
"
zoom
.
maxPercent
"
)
/
100
;
zoom
=
Math
.
min
(
Math
.
max
(
zoom
minZoom
)
maxZoom
)
;
const
originalZoom
=
SpecialPowers
.
getFullZoom
(
window
)
;
window
.
addEventListener
(
"
beforeunload
"
(
)
=
>
{
SpecialPowers
.
setFullZoom
(
window
originalZoom
)
;
}
)
;
SpecialPowers
.
setFullZoom
(
window
zoom
)
;
