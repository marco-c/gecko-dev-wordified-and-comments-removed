async
function
fetchJson
(
url
)
{
const
response
=
await
fetch
(
url
)
;
assert_true
(
response
.
ok
'
response
should
be
ok
'
)
;
return
response
.
json
(
)
;
}
promise_test
(
async
(
)
=
>
{
const
stateKey
=
token
(
)
;
const
controller
=
new
AbortController
(
)
;
await
fetch
(
/
fetch
/
api
/
resources
/
infinite
-
slow
-
response
.
py
?
stateKey
=
{
stateKey
}
{
signal
:
controller
.
signal
keepalive
:
true
}
)
;
const
before
=
await
fetchJson
(
/
fetch
/
api
/
resources
/
stash
-
take
.
py
?
key
=
{
stateKey
}
)
;
assert_equals
(
before
'
open
'
'
connection
should
be
open
'
)
;
controller
.
abort
(
)
;
while
(
true
)
{
const
after
=
await
fetchJson
(
/
fetch
/
api
/
resources
/
stash
-
take
.
py
?
key
=
{
stateKey
}
)
;
if
(
after
)
{
assert_equals
(
after
'
closed
'
'
connection
should
have
closed
'
)
;
break
;
}
}
}
'
aborting
a
keepalive
worker
should
work
'
)
;
