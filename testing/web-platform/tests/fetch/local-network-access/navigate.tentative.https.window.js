setup
(
(
)
=
>
{
assert_true
(
window
.
isSecureContext
)
;
}
)
;
subsetTestByKey
(
'
from
-
loopback
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
Server
.
HTTPS_LOOPBACK
target
:
Server
.
HTTPS_LOOPBACK
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
loopback
to
loopback
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
loopback
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
Server
.
HTTPS_LOOPBACK
target
:
Server
.
HTTPS_LOCAL
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
loopback
to
local
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
loopback
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
Server
.
HTTPS_LOOPBACK
target
:
Server
.
HTTPS_PUBLIC
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
loopback
to
public
:
no
preflight
required
.
'
)
;
subsetTestByKey
(
'
from
-
local
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
Server
.
HTTPS_LOCAL
target
:
Server
.
HTTPS_LOOPBACK
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
local
to
loopback
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
local
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
Server
.
HTTPS_LOCAL
target
:
Server
.
HTTPS_LOCAL
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
local
to
local
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
local
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
Server
.
HTTPS_LOCAL
target
:
Server
.
HTTPS_PUBLIC
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
local
to
public
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
public
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
Server
.
HTTPS_PUBLIC
target
:
Server
.
HTTPS_LOOPBACK
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
public
to
loopback
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
public
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
Server
.
HTTPS_PUBLIC
target
:
Server
.
HTTPS_LOCAL
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
public
to
local
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
public
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
Server
.
HTTPS_PUBLIC
target
:
Server
.
HTTPS_PUBLIC
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
public
to
public
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
treat
-
as
-
public
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
{
server
:
Server
.
HTTPS_LOOPBACK
treatAsPublic
:
true
}
target
:
Server
.
OTHER_HTTPS_LOOPBACK
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
treat
-
as
-
public
-
address
to
loopback
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
treat
-
as
-
public
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
{
server
:
Server
.
HTTPS_LOOPBACK
treatAsPublic
:
true
}
target
:
Server
.
HTTPS_LOOPBACK
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
treat
-
as
-
public
-
address
to
loopback
(
same
-
origin
)
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
treat
-
as
-
public
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
{
server
:
Server
.
HTTPS_LOOPBACK
treatAsPublic
:
true
}
target
:
Server
.
HTTPS_LOCAL
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
treat
-
as
-
public
-
address
to
local
:
no
permission
required
.
'
)
;
subsetTestByKey
(
'
from
-
treat
-
as
-
public
'
promise_test
t
=
>
navigateTest
(
t
{
source
:
{
server
:
Server
.
HTTPS_LOOPBACK
treatAsPublic
:
true
}
target
:
Server
.
HTTPS_PUBLIC
expected
:
NavigationTestResult
.
SUCCESS
}
)
'
treat
-
as
-
public
-
address
to
public
:
no
permission
required
.
'
)
;
