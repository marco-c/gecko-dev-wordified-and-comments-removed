'
use
strict
'
;
const
{
HTTPS_ORIGIN
HTTPS_NOTSAMESITE_ORIGIN
}
=
get_host_info
(
)
;
const
description
=
'
Permissions
policy
header
:
"
deferred
-
fetch
=
*
"
'
;
parallelPromiseTest
(
async
_
=
>
{
const
uuid
=
token
(
)
;
const
url
=
generateSetBeaconURL
(
uuid
)
;
fetchLater
(
url
{
activateAfter
:
0
}
)
;
await
expectBeacon
(
uuid
{
count
:
1
}
)
;
}
{
description
}
allows
fetchLater
(
)
in
the
top
-
level
document
.
)
;
async_test
(
t
=
>
{
test_feature_availability
(
'
fetchLater
(
)
'
t
getDeferredFetchPolicyInIframeHelperUrl
(
HTTPS_ORIGIN
)
expect_feature_available_default
)
;
}
{
description
}
allows
fetchLater
(
)
in
the
same
-
origin
iframe
.
)
;
async_test
(
t
=
>
{
test_feature_availability
(
'
fetchLater
(
)
'
t
getDeferredFetchPolicyInIframeHelperUrl
(
HTTPS_NOTSAMESITE_ORIGIN
)
expect_feature_available_default
)
;
}
{
description
}
allows
fetchLater
(
)
in
the
cross
-
origin
iframe
.
)
;
async_test
(
t
=
>
{
test_feature_availability
(
'
fetchLater
(
)
'
t
getDeferredFetchPolicyInIframeHelperUrl
(
HTTPS_NOTSAMESITE_ORIGIN
)
expect_feature_available_default
'
deferred
-
fetch
'
)
;
}
{
description
}
allow
=
"
deferred
-
fetch
"
allows
fetchLater
(
)
in
the
cross
-
origin
iframe
.
)
;
