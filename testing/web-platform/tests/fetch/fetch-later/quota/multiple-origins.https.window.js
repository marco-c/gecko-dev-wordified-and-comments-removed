'
use
strict
'
;
const
{
HTTPS_ORIGIN
HTTPS_NOTSAMESITE_ORIGIN
}
=
get_host_info
(
)
;
for
(
const
dataType
in
BeaconDataType
)
{
test
(
(
)
=
>
{
const
controller
=
new
AbortController
(
)
;
fetchLater
(
{
HTTPS_ORIGIN
}
/
{
method
:
'
POST
'
signal
:
controller
.
signal
body
:
makeBeaconData
(
generatePayload
(
QUOTA_PER_REPORTING_ORIGIN
/
2
+
1
)
dataType
)
}
)
;
fetchLater
(
{
HTTPS_NOTSAMESITE_ORIGIN
}
/
{
method
:
'
POST
'
signal
:
controller
.
signal
body
:
makeBeaconData
(
generatePayload
(
QUOTA_PER_REPORTING_ORIGIN
/
2
+
1
)
dataType
)
}
)
;
fetchLater
(
{
HTTPS_NOTSAMESITE_ORIGIN
}
/
{
method
:
'
GET
'
signal
:
controller
.
signal
}
)
;
controller
.
abort
(
)
;
}
fetchLater
(
)
has
per
-
request
-
origin
quota
for
its
POST
body
of
{
dataType
}
.
)
;
}
