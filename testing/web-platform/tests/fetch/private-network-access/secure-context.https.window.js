setup
(
(
)
=
>
{
assert_true
(
window
.
isSecureContext
)
;
}
)
;
promise_test
(
async
t
=
>
{
return
fetch
(
"
/
common
/
blank
.
html
"
)
.
catch
(
reason
=
>
{
unreached_func
(
reason
)
}
)
;
}
"
Local
secure
page
fetches
local
page
.
"
)
;
promise_test
(
async
t
=
>
{
let
iframe
=
await
appendIframe
(
t
document
"
resources
/
treat
-
as
-
public
-
address
.
https
.
html
"
)
;
let
reply
=
futureMessage
(
)
;
iframe
.
contentWindow
.
postMessage
(
"
/
common
/
blank
.
html
"
"
*
"
)
;
assert_equals
(
await
reply
"
success
"
)
;
}
"
Public
secure
page
fetches
local
page
.
"
)
;
