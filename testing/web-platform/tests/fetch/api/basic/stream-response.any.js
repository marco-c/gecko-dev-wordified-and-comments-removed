function
streamBody
(
reader
test
count
=
0
)
{
return
reader
.
read
(
)
.
then
(
function
(
data
)
{
if
(
!
data
.
done
&
&
count
<
2
)
{
count
+
=
1
;
return
streamBody
(
reader
test
count
)
;
}
else
{
test
.
step
(
function
(
)
{
assert_true
(
count
>
=
2
"
Retrieve
body
progressively
"
)
;
}
)
;
}
}
)
;
}
promise_test
(
function
(
test
)
{
return
fetch
(
RESOURCES_DIR
+
"
trickle
.
py
?
ms
=
30
&
count
=
100
"
)
.
then
(
function
(
resp
)
{
if
(
resp
.
body
)
return
streamBody
(
resp
.
body
.
getReader
(
)
test
)
;
else
test
.
step
(
function
(
)
{
assert_unreached
(
"
Body
does
not
exist
in
response
"
)
;
}
)
;
}
)
;
}
"
Stream
response
'
s
body
when
content
-
type
is
present
"
)
;
promise_test
(
function
(
test
)
{
return
fetch
(
RESOURCES_DIR
+
"
trickle
.
py
?
ms
=
300
&
count
=
10
&
notype
=
true
"
)
.
then
(
function
(
resp
)
{
if
(
resp
.
body
)
return
streamBody
(
resp
.
body
.
getReader
(
)
test
)
;
else
test
.
step
(
function
(
)
{
assert_unreached
(
"
Body
does
not
exist
in
response
"
)
;
}
)
;
}
)
;
}
"
Stream
response
'
s
body
when
content
-
type
is
not
present
"
)
;
