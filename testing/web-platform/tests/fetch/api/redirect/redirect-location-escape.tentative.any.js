function
redirectLocation
(
desc
redirectUrl
locationHeader
expectedUrlSuffix
)
{
promise_test
(
function
(
test
)
{
var
url
=
redirectUrl
+
'
?
simple
=
1
&
location
=
'
+
escape
(
locationHeader
)
;
return
fetch
(
url
{
'
redirect
'
:
'
follow
'
}
)
.
then
(
function
(
resp
)
{
assert_true
(
resp
.
url
.
endsWith
(
expectedUrlSuffix
)
resp
.
url
+
'
ends
with
'
+
expectedUrlSuffix
)
;
}
)
;
}
desc
)
;
}
var
redirUrl
=
RESOURCES_DIR
+
'
redirect
.
py
'
;
redirectLocation
(
'
Redirect
to
escaped
UTF
-
8
'
redirUrl
'
top
.
txt
?
%
E2
%
98
%
83
%
e2
%
98
%
83
'
'
top
.
txt
?
%
E2
%
98
%
83
%
e2
%
98
%
83
'
)
;
redirectLocation
(
'
Redirect
to
unescaped
UTF
-
8
'
redirUrl
'
top
.
txt
?
\
xe2
\
x98
\
x83
'
'
top
.
txt
?
%
E2
%
98
%
83
'
)
;
redirectLocation
(
'
Redirect
to
escaped
and
unescaped
UTF
-
8
'
redirUrl
'
top
.
txt
?
\
xe2
\
x98
\
x83
%
e2
%
98
%
83
'
'
top
.
txt
?
%
E2
%
98
%
83
%
e2
%
98
%
83
'
)
;
redirectLocation
(
'
Escaping
produces
double
-
percent
'
redirUrl
'
top
.
txt
?
%
\
xe2
\
x98
\
x83
'
'
top
.
txt
?
%
%
E2
%
98
%
83
'
)
;
redirectLocation
(
'
Redirect
to
invalid
UTF
-
8
'
redirUrl
'
top
.
txt
?
\
xff
'
'
top
.
txt
?
%
FF
'
)
;
done
(
)
;
