const
IframeAction
=
{
REMOVE_BEFORE_CREATION
:
'
remove
-
before
-
creation
'
REMOVE_AFTER_CREATION
:
'
remove
-
after
-
creation
'
}
;
async
function
detached_frame_test
(
t
action
)
{
const
iframe
=
await
with_iframe
(
'
about
:
blank
'
)
;
const
iframe_MessageChannel
=
iframe
.
contentWindow
.
MessageChannel
;
if
(
action
=
=
=
IframeAction
.
REMOVE_BEFORE_CREATION
)
{
iframe
.
remove
(
)
;
}
(
(
)
=
>
{
const
mc
=
new
iframe_MessageChannel
(
)
;
mc
.
port1
.
postMessage
(
"
boo
"
)
;
mc
.
port2
.
onmessage
=
t
.
unreached_func
(
"
message
event
received
"
)
;
mc
.
port2
.
onmessageerror
=
t
.
unreached_func
(
"
message
event
received
"
)
;
}
)
(
)
;
if
(
action
=
=
=
IframeAction
.
REMOVE_AFTER_CREATION
)
{
iframe
.
remove
(
)
;
}
await
garbageCollect
(
)
;
await
new
Promise
(
resolve
=
>
t
.
step_timeout
(
resolve
2000
)
)
;
}
promise_test
(
async
(
t
)
=
>
{
return
detached_frame_test
(
t
IframeAction
.
REMOVE_AFTER_CREATION
)
;
}
'
MessageChannel
created
from
a
detached
iframe
should
not
send
messages
(
remove
after
create
)
'
)
;
promise_test
(
async
(
t
)
=
>
{
return
detached_frame_test
(
t
IframeAction
.
REMOVE_BEFORE_CREATION
)
;
}
'
MessageChannel
created
from
a
detached
iframe
should
not
send
messages
(
remove
before
create
)
'
)
;
