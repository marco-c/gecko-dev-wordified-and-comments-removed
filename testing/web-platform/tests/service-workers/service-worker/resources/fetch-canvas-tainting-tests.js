const
NOT_TAINTED
=
'
NOT_TAINTED
'
;
const
TAINTED
=
'
TAINTED
'
;
const
LOAD_ERROR
=
'
LOAD_ERROR
'
;
let
frame
;
function
canvas_taint_test
(
url
cross_origin
expected_result
)
{
promise_test
(
t
=
>
{
return
frame
.
contentWindow
.
create_test_case_promise
(
url
cross_origin
)
.
then
(
result
=
>
{
assert_equals
(
result
expected_result
)
;
}
)
;
}
'
url
"
'
+
url
+
'
"
with
crossOrigin
"
'
+
cross_origin
+
'
"
should
be
'
+
expected_result
)
;
}
function
do_canvas_tainting_tests
(
params
)
{
const
host_info
=
get_host_info
(
)
;
let
resource_path
=
params
.
resource_path
;
if
(
params
.
cache
)
resource_path
+
=
"
&
cache
=
true
"
;
const
resource_url
=
host_info
[
'
HTTPS_ORIGIN
'
]
+
resource_path
;
const
remote_resource_url
=
host_info
[
'
HTTPS_REMOTE_ORIGIN
'
]
+
resource_path
;
promise_test
(
function
(
t
)
{
const
SCOPE
=
'
resources
/
fetch
-
canvas
-
tainting
-
iframe
.
html
'
;
const
SCRIPT
=
'
resources
/
fetch
-
rewrite
-
worker
.
js
'
;
const
host_info
=
get_host_info
(
)
;
return
login_https
(
t
)
.
then
(
function
(
)
{
return
service_worker_unregister_and_register
(
t
SCRIPT
SCOPE
)
;
}
)
.
then
(
function
(
registration
)
{
promise_test
(
(
)
=
>
{
if
(
frame
)
frame
.
remove
(
)
;
return
registration
.
unregister
(
)
;
}
'
restore
global
state
'
)
;
return
wait_for_state
(
t
registration
.
installing
'
activated
'
)
;
}
)
.
then
(
function
(
)
{
return
with_iframe
(
SCOPE
)
;
}
)
.
then
(
f
=
>
{
frame
=
f
;
}
)
;
}
'
initialize
global
state
'
)
;
canvas_taint_test
(
resource_url
+
'
&
reject
'
'
'
LOAD_ERROR
)
;
canvas_taint_test
(
resource_url
+
'
&
reject
'
'
anonymous
'
LOAD_ERROR
)
;
canvas_taint_test
(
resource_url
+
'
&
reject
'
'
use
-
credentials
'
LOAD_ERROR
)
;
canvas_taint_test
(
resource_url
+
'
&
ignore
'
'
'
NOT_TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
ignore
'
'
'
TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
ignore
'
'
anonymous
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
+
'
&
ignore
'
'
anonymous
'
NOT_TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
ignore
'
'
use
-
credentials
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
+
'
&
ignore
'
'
use
-
credentials
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
+
'
&
ACACredentials
=
true
&
ignore
'
'
use
-
credentials
'
NOT_TAINTED
)
;
canvas_taint_test
(
resource_url
+
'
&
Auth
&
ignore
'
'
'
NOT_TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
Auth
&
ignore
'
'
'
TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
Auth
&
ignore
'
'
anonymous
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
Auth
&
ignore
'
'
use
-
credentials
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
Auth
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
+
'
&
ignore
'
'
use
-
credentials
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
Auth
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
+
'
&
ACACredentials
=
true
&
ignore
'
'
use
-
credentials
'
NOT_TAINTED
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
same
-
origin
&
url
=
'
+
encodeURIComponent
(
resource_url
)
'
'
NOT_TAINTED
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
same
-
origin
&
url
=
'
+
encodeURIComponent
(
resource_url
)
'
anonymous
'
NOT_TAINTED
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
same
-
origin
&
url
=
'
+
encodeURIComponent
(
resource_url
)
'
use
-
credentials
'
NOT_TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
same
-
origin
&
url
=
'
+
encodeURIComponent
(
resource_url
)
'
'
NOT_TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
same
-
origin
&
url
=
'
+
encodeURIComponent
(
resource_url
)
'
anonymous
'
NOT_TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
same
-
origin
&
url
=
'
+
encodeURIComponent
(
resource_url
)
'
use
-
credentials
'
NOT_TAINTED
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
no
-
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
)
'
'
TAINTED
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
no
-
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
)
'
anonymous
'
LOAD_ERROR
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
no
-
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
)
'
use
-
credentials
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
no
-
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
)
'
'
TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
no
-
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
)
'
anonymous
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
no
-
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
)
'
use
-
credentials
'
LOAD_ERROR
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
'
LOAD_ERROR
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
cors
&
credentials
=
same
-
origin
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
'
NOT_TAINTED
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
anonymous
'
NOT_TAINTED
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
use
-
credentials
'
LOAD_ERROR
)
;
canvas_taint_test
(
resource_url
+
'
&
mode
=
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACACredentials
=
true
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
use
-
credentials
'
NOT_TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
cors
&
credentials
=
same
-
origin
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
'
NOT_TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
anonymous
'
NOT_TAINTED
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
use
-
credentials
'
LOAD_ERROR
)
;
canvas_taint_test
(
remote_resource_url
+
'
&
mode
=
cors
&
url
=
'
+
encodeURIComponent
(
remote_resource_url
+
'
&
ACACredentials
=
true
&
ACAOrigin
=
'
+
host_info
[
'
HTTPS_ORIGIN
'
]
)
'
use
-
credentials
'
NOT_TAINTED
)
;
}
