importScripts
(
'
/
common
/
get
-
host
-
info
.
sub
.
js
'
)
let
initial
=
true
;
function
is_initial_request
(
)
{
const
old
=
initial
;
initial
=
false
;
return
old
;
}
self
.
addEventListener
(
'
fetch
'
e
=
>
{
const
url
=
new
URL
(
e
.
request
.
url
)
;
if
(
url
.
search
.
indexOf
(
'
VIDEO
'
)
=
=
-
1
)
{
return
;
}
let
cross_origin_url
=
get_host_info
(
)
.
HTTPS_REMOTE_ORIGIN
+
url
.
pathname
+
url
.
search
;
if
(
is_initial_request
(
)
)
{
const
init
=
{
mode
:
'
no
-
cors
'
headers
:
e
.
request
.
headers
}
;
const
cross_origin_request
=
new
Request
(
cross_origin_url
init
)
;
e
.
respondWith
(
fetch
(
cross_origin_request
)
)
;
return
;
}
let
my_headers
=
new
Headers
;
if
(
e
.
request
.
headers
.
get
(
'
accept
'
)
)
my_headers
.
append
(
'
accept
'
e
.
request
.
headers
.
get
(
'
accept
'
)
)
;
if
(
e
.
request
.
headers
.
get
(
'
range
'
)
)
my_headers
.
append
(
'
range
'
e
.
request
.
headers
.
get
(
'
range
'
)
)
;
cross_origin_url
+
=
'
&
ACAOrigin
=
'
+
get_host_info
(
)
.
HTTPS_ORIGIN
;
cross_origin_url
+
=
'
&
ACAHeaders
=
accept
range
'
;
const
init
=
{
mode
:
'
cors
'
headers
:
my_headers
}
;
const
cross_origin_request
=
new
Request
(
cross_origin_url
init
)
;
e
.
respondWith
(
fetch
(
cross_origin_request
)
)
;
}
)
;
