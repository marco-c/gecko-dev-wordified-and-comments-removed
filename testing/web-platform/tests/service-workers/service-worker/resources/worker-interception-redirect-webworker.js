const
resources_url
=
new
URL
(
"
/
service
-
workers
/
service
-
worker
/
resources
/
"
self
.
location
)
;
let
greeting
=
'
%
GREETING_TEXT
%
'
;
if
(
!
greeting
)
greeting
=
'
the
shared
worker
script
was
served
from
network
'
;
let
echo_output
;
const
import_scripts_msg
=
encodeURIComponent
(
'
importScripts
:
served
from
network
'
)
;
const
import_scripts_url
=
new
URL
(
import
-
scripts
-
echo
.
py
?
msg
=
{
import_scripts_msg
}
resources_url
)
;
importScripts
(
import_scripts_url
)
;
const
import_scripts_greeting
=
echo_output
;
self
.
onconnect
=
async
function
(
e
)
{
const
port
=
e
.
ports
[
0
]
;
port
.
start
(
)
;
port
.
postMessage
(
greeting
)
;
port
.
postMessage
(
import_scripts_greeting
)
;
const
fetch_url
=
new
URL
(
'
simple
.
txt
'
resources_url
)
;
const
response
=
await
fetch
(
fetch_url
)
;
const
text
=
await
response
.
text
(
)
;
port
.
postMessage
(
'
fetch
(
)
:
'
+
text
)
;
port
.
postMessage
(
self
.
location
.
href
)
;
}
;
