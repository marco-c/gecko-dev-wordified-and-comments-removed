self
.
onfetch
=
function
(
e
)
{
if
(
/
\
/
clientId
/
.
test
(
e
.
request
.
url
)
)
{
e
.
respondWith
(
new
Response
(
e
.
clientId
)
)
;
return
;
}
}
;
self
.
onmessage
=
function
(
e
)
{
var
client_ids
=
e
.
data
.
clientIds
;
var
message
=
[
]
;
e
.
waitUntil
(
Promise
.
all
(
client_ids
.
map
(
function
(
client_id
)
{
return
self
.
clients
.
get
(
client_id
)
;
}
)
)
.
then
(
function
(
clients
)
{
if
(
clients
.
length
=
=
1
&
&
clients
[
0
]
=
=
undefined
)
{
e
.
source
.
postMessage
(
clients
[
0
]
)
;
}
else
{
clients
.
forEach
(
function
(
client
)
{
if
(
client
instanceof
Client
)
{
message
.
push
(
[
client
.
visibilityState
client
.
focused
client
.
url
client
.
type
client
.
frameType
]
)
;
}
else
{
message
.
push
(
client
)
;
}
}
)
;
e
.
source
.
postMessage
(
message
)
;
}
}
)
)
;
}
;
