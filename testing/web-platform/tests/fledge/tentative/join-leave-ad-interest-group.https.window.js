"
use
strict
;
"
const
BASE_INTEREST_GROUP
=
{
owner
:
window
.
location
.
origin
name
:
'
default
name
'
}
const
SIMPLE_JOIN_LEAVE_TEST_CASES
=
[
{
expectJoinSucces
:
false
expectLeaveSucces
:
false
interestGroup
:
null
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
false
interestGroup
:
{
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
BASE_INTEREST_GROUP
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
false
interestGroup
:
{
name
:
'
default
name
'
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
false
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
owner
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
false
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
owner
:
window
.
location
.
origin
.
replace
(
'
https
'
'
http
'
)
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
false
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
owner
:
window
.
location
.
origin
.
replace
(
'
https
'
'
wss
'
)
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
false
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
owner
:
'
{
{
hosts
[
]
[
www
]
}
}
'
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
false
interestGroup
:
{
owner
:
window
.
location
.
origin
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
name
:
'
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
priority
:
1
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
priority
:
0
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
priority
:
-
1
.
5
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
priorityVector
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
priorityVector
:
1
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
priorityVector
:
{
a
:
'
apple
'
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
priorityVector
:
{
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
priorityVector
:
{
a
:
1
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
priorityVector
:
{
'
a
'
:
1
'
b
'
:
-
4
.
5
'
a
.
b
'
:
0
}
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
prioritySignalsOverrides
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
prioritySignalsOverrides
:
1
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
prioritySignalsOverrides
:
{
a
:
'
apple
'
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
prioritySignalsOverrides
:
{
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
prioritySignalsOverrides
:
{
a
:
1
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
prioritySignalsOverrides
:
{
'
a
'
:
1
'
b
'
:
-
4
.
5
'
a
.
b
'
:
0
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
enableBiddingSignalsPrioritization
:
true
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
enableBiddingSignalsPrioritization
:
false
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingLogicURL
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingLogicURL
:
'
https
:
/
/
{
{
hosts
[
]
[
www
]
}
}
/
foo
.
js
'
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingLogicURL
:
'
data
:
text
/
javascript
Foo
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingLogicURL
:
{
window
.
location
.
origin
}
/
foo
.
js
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingLogicURL
:
'
relative
/
path
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingWasmHelperURL
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingWasmHelperURL
:
'
https
:
/
/
{
{
hosts
[
]
[
www
]
}
}
/
foo
.
js
'
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingWasmHelperURL
:
'
data
:
application
/
wasm
Foo
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingWasmHelperURL
:
{
window
.
location
.
origin
}
/
foo
.
js
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
biddingWasmHelperURL
:
'
relative
/
path
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
dailyUpdateUrl
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
dailyUpdateUrl
:
'
https
:
/
/
{
{
hosts
[
]
[
www
]
}
}
/
foo
.
js
'
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
dailyUpdateUrl
:
'
data
:
application
/
wasm
Foo
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
dailyUpdateUrl
:
{
window
.
location
.
origin
}
/
foo
.
js
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
dailyUpdateUrl
:
'
relative
/
path
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
executionMode
:
'
compatibility
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
executionMode
:
'
groupByOrigin
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
executionMode
:
'
unknownValuesAreValid
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
trustedBiddingSignalsURL
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
trustedBiddingSignalsURL
:
'
https
:
/
/
{
{
hosts
[
]
[
www
]
}
}
/
foo
.
js
'
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
trustedBiddingSignalsURL
:
'
data
:
application
/
json
{
}
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
trustedBiddingSignalsURL
:
{
window
.
location
.
origin
}
/
foo
.
js
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
trustedBiddingSignalsURL
:
'
relative
/
path
'
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
trustedBiddingSignalsKeys
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
trustedBiddingSignalsKeys
:
{
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
trustedBiddingSignalsKeys
:
[
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
trustedBiddingSignalsKeys
:
[
'
a
'
4
'
Foo
'
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
userBiddingSignals
:
null
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
userBiddingSignals
:
'
foo
'
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
userBiddingSignals
:
15
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
userBiddingSignals
:
[
5
'
foo
'
[
-
6
.
4
{
a
:
'
b
'
}
]
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
userBiddingSignals
:
{
a
:
[
5
'
foo
'
{
b
:
-
6
.
4
}
]
}
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
5
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
{
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
[
]
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
[
{
}
]
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
[
{
metadata
:
[
{
a
:
'
b
'
}
'
c
'
]
1
:
[
2
3
]
}
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
[
{
renderURL
:
'
https
:
/
/
somewhere
.
test
/
'
}
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
[
{
renderURL
:
'
https
:
/
/
somewhere
.
test
/
'
}
{
renderURL
:
'
https
:
/
/
somewhere
-
else
.
test
/
'
}
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
[
{
renderURL
:
'
https
:
/
/
somewhere
.
test
/
'
metadata
:
null
}
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
ads
:
[
{
renderURL
:
'
https
:
/
/
somewhere
.
test
/
'
metadata
:
null
someOtherField
:
'
foo
'
}
]
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
null
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
5
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
{
}
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
[
]
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
[
{
}
]
}
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
[
{
metadata
:
[
{
a
:
'
b
'
}
'
c
'
]
1
:
[
2
3
]
}
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
[
{
renderURL
:
'
https
:
/
/
somewhere
.
test
/
'
}
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
[
{
renderURL
:
'
https
:
/
/
somewhere
.
test
/
'
}
{
renderURL
:
'
https
:
/
/
elsewhere
.
test
/
'
}
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
[
{
renderURL
:
'
https
:
/
/
somewhere
.
test
/
'
metadata
:
null
}
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
adComponents
:
[
{
renderURL
:
'
https
:
/
/
somewhere
.
test
/
'
metadata
:
null
someOtherField
:
'
foo
'
}
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
extra
:
false
fields
:
{
do
:
'
not
'
}
matter
:
'
at
'
all
:
[
3
4
5
]
}
}
{
expectJoinSucces
:
true
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
name
:
'
a
'
.
repeat
(
1048516
)
}
testCaseName
:
"
Largest
possible
interest
group
dictionary
"
}
{
expectJoinSucces
:
false
expectLeaveSucces
:
true
interestGroup
:
{
.
.
.
BASE_INTEREST_GROUP
name
:
'
a
'
.
repeat
(
1048517
)
}
testCaseName
:
"
Oversized
interest
group
dictionary
"
}
]
;
for
(
testCase
of
SIMPLE_JOIN_LEAVE_TEST_CASES
)
{
var
test_name
=
'
Join
and
leave
interest
group
:
'
;
if
(
'
testCaseName
'
in
testCase
)
{
test_name
+
=
testCase
.
testCaseName
;
}
else
{
test_name
+
=
JSON
.
stringify
(
testCase
)
;
}
subsetTest
(
promise_test
(
async
(
testCase
)
=
>
{
const
INTEREST_GROUP_LIFETIME_SECS
=
1
;
let
join_promise
=
navigator
.
joinAdInterestGroup
(
testCase
.
interestGroup
INTEREST_GROUP_LIFETIME_SECS
)
;
assert_true
(
join_promise
instanceof
Promise
"
join
should
return
a
promise
"
)
;
if
(
testCase
.
expectJoinSucces
)
{
assert_equals
(
await
join_promise
undefined
)
;
}
else
{
let
joinExceptionThrown
=
false
;
try
{
await
join_promise
;
}
catch
(
e
)
{
joinExceptionThrown
=
true
;
}
assert_true
(
joinExceptionThrown
'
Exception
not
thrown
on
join
.
'
)
;
}
let
leave_promise
=
navigator
.
leaveAdInterestGroup
(
testCase
.
interestGroup
)
;
assert_true
(
leave_promise
instanceof
Promise
"
leave
should
return
a
promise
"
)
;
if
(
testCase
.
expectLeaveSucces
)
{
assert_equals
(
await
leave_promise
undefined
)
;
}
else
{
let
leaveExceptionThrown
=
false
;
try
{
await
leave_promise
;
}
catch
(
e
)
{
leaveExceptionThrown
=
true
;
}
assert_true
(
leaveExceptionThrown
'
Exception
not
thrown
on
leave
.
'
)
;
}
}
)
.
bind
(
undefined
testCase
)
test_name
)
;
}
subsetTest
(
promise_test
async
test
=
>
{
const
uuid
=
generateUuid
(
test
)
;
await
joinInterestGroup
(
test
uuid
{
biddingLogicURL
:
null
}
)
;
assert_equals
(
null
await
runBasicFledgeAuction
(
test
uuid
)
'
Auction
unexpectedly
had
a
winner
'
)
;
await
joinInterestGroup
(
test
uuid
)
;
let
config
=
await
runBasicFledgeAuction
(
test
uuid
)
;
assert_true
(
config
instanceof
FencedFrameConfig
'
Wrong
value
type
returned
from
auction
:
'
+
config
.
constructor
.
name
)
;
await
joinInterestGroup
(
test
uuid
{
biddingLogicURL
:
null
}
)
;
assert_equals
(
null
await
runBasicFledgeAuction
(
test
uuid
)
'
Auction
unexpectedly
had
a
winner
'
)
;
}
'
Join
same
interest
group
overwrites
old
matching
group
.
'
)
;
subsetTest
(
promise_test
async
test
=
>
{
const
uuid
=
generateUuid
(
test
)
;
await
joinInterestGroup
(
test
uuid
)
;
let
config
=
await
runBasicFledgeAuction
(
test
uuid
)
;
assert_true
(
config
instanceof
FencedFrameConfig
'
Wrong
value
type
returned
from
auction
:
'
+
config
.
constructor
.
name
)
;
await
leaveInterestGroup
(
)
;
assert_equals
(
null
await
runBasicFledgeAuction
(
test
uuid
)
'
Auction
unexpectedly
had
a
winner
'
)
;
}
'
Leaving
interest
group
actually
leaves
interest
group
.
'
)
;
subsetTest
(
promise_test
async
test
=
>
{
await
leaveInterestGroup
(
{
name
:
'
Never
join
group
'
}
)
;
}
'
Leave
an
interest
group
that
was
never
joined
.
'
)
;
subsetTest
(
promise_test
async
test
=
>
{
const
uuid
=
generateUuid
(
test
)
;
await
joinInterestGroup
(
test
uuid
{
}
0
.
2
)
;
while
(
await
runBasicFledgeAuction
(
test
uuid
)
!
=
=
null
)
;
}
'
Interest
group
duration
.
'
)
;
subsetTest
(
promise_test
async
test
=
>
{
const
uuid
=
generateUuid
(
test
)
;
await
joinInterestGroup
(
test
uuid
{
}
-
600
)
;
assert_true
(
await
runBasicFledgeAuction
(
test
uuid
)
=
=
=
null
)
;
}
'
Interest
group
duration
of
-
600
.
'
)
;
subsetTest
(
promise_test
async
test
=
>
{
const
uuid
=
generateUuid
(
test
)
;
await
joinInterestGroup
(
test
uuid
{
}
600
)
;
assert_true
(
await
runBasicFledgeAuction
(
test
uuid
)
!
=
=
null
)
;
await
joinInterestGroup
(
test
uuid
{
}
0
.
2
)
;
while
(
await
runBasicFledgeAuction
(
test
uuid
)
!
=
=
null
)
;
}
'
Interest
group
test
with
overwritten
duration
.
'
)
;
subsetTest
(
promise_test
async
test
=
>
{
const
uuid
=
generateUuid
(
test
)
;
await
joinInterestGroup
(
test
uuid
{
}
600
)
;
await
joinInterestGroup
(
test
uuid
{
}
-
600
)
;
assert_true
(
await
runBasicFledgeAuction
(
test
uuid
)
=
=
=
null
)
;
}
'
Interest
group
test
with
overwritten
duration
of
-
600
.
'
)
;
