promise_test
(
(
)
=
>
fetch
(
"
resources
/
urltestdata
.
json
"
)
.
then
(
res
=
>
res
.
json
(
)
)
.
then
(
runURLTests
)
"
Loading
data
"
)
;
function
setBase
(
base
)
{
document
.
getElementById
(
"
base
"
)
.
href
=
base
}
function
bURL
(
url
base
)
{
setBase
(
base
)
;
const
a
=
document
.
createElement
(
"
a
"
)
;
a
.
setAttribute
(
"
href
"
url
)
;
return
a
;
}
function
runURLTests
(
urlTests
)
{
for
(
const
expected
of
urlTests
)
{
if
(
typeof
expected
=
=
=
"
string
"
|
|
!
(
"
origin
"
in
expected
)
)
continue
;
if
(
expected
.
base
=
=
=
null
&
&
expected
.
input
.
startsWith
(
"
#
"
)
)
continue
;
if
(
expected
.
base
!
=
=
null
&
&
(
expected
.
base
.
startsWith
(
"
data
:
"
)
|
|
expected
.
base
.
startsWith
(
"
javascript
:
"
)
)
)
continue
;
const
base
=
expected
.
base
=
=
=
null
?
"
about
:
blank
"
:
expected
.
base
;
test
(
function
(
)
{
var
url
=
bURL
(
expected
.
input
base
)
assert_equals
(
url
.
origin
expected
.
origin
"
origin
"
)
}
"
Parsing
origin
:
<
"
+
expected
.
input
+
"
>
against
<
"
+
base
+
"
>
"
)
}
}
