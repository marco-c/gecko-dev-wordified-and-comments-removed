[
{
"
description
"
:
"
javascript
:
URL
that
fails
to
parse
due
to
invalid
host
"
"
input
"
:
"
javascript
:
/
/
test
:
test
/
%
0aglobalThis
.
shouldNotExistA
=
1
"
"
property
"
:
"
shouldNotExistA
"
"
expected
"
:
undefined
}
{
"
description
"
:
"
javascript
:
URL
that
fails
to
parse
due
to
invalid
host
and
has
a
U
+
0009
in
scheme
"
"
input
"
:
"
java
\
x09script
:
/
/
test
:
test
/
%
0aglobalThis
.
shouldNotExistB
=
1
"
"
property
"
:
"
shouldNotExistB
"
"
expected
"
:
undefined
}
{
"
description
"
:
"
javascript
:
URL
without
an
opaque
path
"
"
input
"
:
"
javascript
:
/
/
host
/
1
%
0a
/
/
.
.
/
0
/
;
globalThis
.
shouldBeOne
=
1
;
/
%
0aglobalThis
.
shouldBeOne
=
2
;
/
.
.
/
/
/
"
"
property
"
:
"
shouldBeOne
"
"
expected
"
:
1
}
{
"
description
"
:
"
javascript
:
URL
containing
a
JavaScript
string
split
over
path
and
query
"
"
input
"
:
"
javascript
:
globalThis
.
shouldBeAStringA
=
\
"
https
:
/
/
whatsoever
.
com
/
?
a
=
b
&
c
=
5
&
x
=
y
\
"
;
undefined
"
"
property
"
:
"
shouldBeAStringA
"
"
expected
"
:
"
https
:
/
/
whatsoever
.
com
/
?
a
=
b
&
c
=
5
&
x
=
y
"
}
{
"
description
"
:
"
javascript
:
URL
containing
a
JavaScript
string
split
over
path
and
query
and
has
a
U
+
000A
in
scheme
"
"
input
"
:
"
java
\
x0Ascript
:
globalThis
.
shouldBeAStringB
=
\
"
https
:
/
/
whatsoever
.
com
/
?
a
=
b
&
c
=
5
&
x
=
y
\
"
;
undefined
"
"
property
"
:
"
shouldBeAStringB
"
"
expected
"
:
"
https
:
/
/
whatsoever
.
com
/
?
a
=
b
&
c
=
5
&
x
=
y
"
}
]
.
forEach
(
(
{
description
input
property
expected
}
)
=
>
{
promise_test
(
t
=
>
{
const
anchor
=
document
.
body
.
appendChild
(
document
.
createElement
(
"
a
"
)
)
;
t
.
add_cleanup
(
(
)
=
>
anchor
.
remove
(
)
)
;
anchor
.
href
=
input
;
assert_equals
(
globalThis
[
property
]
undefined
"
Property
is
undefined
before
the
click
"
)
;
anchor
.
click
(
)
;
assert_equals
(
globalThis
[
property
]
undefined
"
Property
is
undefined
immediately
after
the
click
"
)
;
return
new
Promise
(
resolve
=
>
{
globalThis
.
verify
=
t
.
step_func
(
(
)
=
>
{
assert_equals
(
globalThis
[
property
]
expected
Property
is
{
expected
}
once
the
navigation
happened
)
;
resolve
(
)
;
}
)
;
anchor
.
href
=
"
javascript
:
globalThis
.
verify
(
)
"
;
anchor
.
click
(
)
;
}
)
;
}
description
)
;
}
)
;
