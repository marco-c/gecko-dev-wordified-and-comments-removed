function
resolveUrl
(
url
options
)
{
const
result
=
new
URL
(
url
window
.
location
)
;
if
(
options
=
=
=
undefined
)
{
return
result
;
}
const
{
port
protocol
}
=
options
;
if
(
port
!
=
=
undefined
)
{
result
.
port
=
port
;
}
if
(
protocol
!
=
=
undefined
)
{
result
.
protocol
=
protocol
;
}
return
result
;
}
promise_test
(
async
(
)
=
>
{
const
url
=
resolveUrl
(
"
/
common
/
blank
-
with
-
cors
.
html
"
{
protocol
:
"
https
:
"
port
:
"
{
{
ports
[
https
-
private
]
[
0
]
}
}
"
}
)
;
const
response
=
await
fetch
(
url
)
;
assert_true
(
response
.
ok
)
;
}
"
Fetch
from
https
-
private
port
works
.
"
)
;
promise_test
(
async
(
)
=
>
{
const
url
=
resolveUrl
(
"
/
common
/
blank
-
with
-
cors
.
html
"
{
protocol
:
"
http
:
"
port
:
"
{
{
ports
[
http
-
private
]
[
0
]
}
}
"
}
)
;
const
response
=
await
fetch
(
url
)
;
assert_true
(
response
.
ok
)
;
}
"
Fetch
from
http
-
private
port
works
.
"
)
;
promise_test
(
async
(
)
=
>
{
const
url
=
resolveUrl
(
"
/
common
/
blank
-
with
-
cors
.
html
"
{
protocol
:
"
https
:
"
port
:
"
{
{
ports
[
https
-
public
]
[
0
]
}
}
"
}
)
;
const
response
=
await
fetch
(
url
)
;
assert_true
(
response
.
ok
)
;
}
"
Fetch
from
https
-
public
port
works
.
"
)
;
promise_test
(
async
(
)
=
>
{
const
url
=
resolveUrl
(
"
/
common
/
blank
-
with
-
cors
.
html
"
{
protocol
:
"
http
:
"
port
:
"
{
{
ports
[
http
-
public
]
[
0
]
}
}
"
}
)
;
const
response
=
await
fetch
(
url
)
;
assert_true
(
response
.
ok
)
;
}
"
Fetch
from
http
-
public
port
works
.
"
)
;
