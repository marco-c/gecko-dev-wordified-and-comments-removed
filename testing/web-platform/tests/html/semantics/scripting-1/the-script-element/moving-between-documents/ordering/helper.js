function
runDelayEventTest
(
description
)
{
const
t
=
async_test
(
description
+
'
still
delay
the
load
event
in
the
original
Document
after
move
'
)
;
const
t_new
=
async_test
(
description
+
'
does
not
delay
the
load
event
in
the
new
Document
after
move
'
)
;
const
start_time
=
performance
.
now
(
)
;
const
iframe
=
document
.
createElement
(
'
iframe
'
)
;
iframe
.
setAttribute
(
'
src
'
'
delay
-
load
-
event
-
iframe
.
html
'
)
;
document
.
body
.
appendChild
(
iframe
)
;
window
.
onload
=
t
.
step_func_done
(
(
)
=
>
{
assert_greater_than
(
performance
.
now
(
)
-
start_time
2000
'
Load
event
should
be
delayed
until
script
is
loaded
'
)
;
}
)
;
window
.
onloadIframe
=
t_new
.
step_func_done
(
(
)
=
>
{
assert_less_than
(
performance
.
now
(
)
-
start_time
2500
'
Load
event
should
not
be
delayed
until
moved
script
is
loaded
'
)
;
}
)
;
t
.
step_timeout
(
(
)
=
>
{
const
script
=
document
.
querySelector
(
'
#
to
-
be
-
moved
'
)
;
iframe
.
contentDocument
.
body
.
appendChild
(
script
)
;
}
1000
)
;
}
