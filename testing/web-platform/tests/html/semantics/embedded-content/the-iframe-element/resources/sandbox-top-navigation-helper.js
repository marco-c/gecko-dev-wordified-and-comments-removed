async
function
createNestedIframe
(
parent
origin
frame_sandbox
header_sandbox
)
{
let
headers
=
[
]
;
if
(
header_sandbox
)
{
headers
.
push
(
[
"
Content
-
Security
-
Policy
"
"
sandbox
allow
-
scripts
"
+
header_sandbox
]
)
;
}
let
iframe_attributes
=
{
}
;
if
(
frame_sandbox
)
{
iframe_attributes
.
sandbox
=
"
allow
-
scripts
"
+
frame_sandbox
;
}
return
parent
.
addIframe
(
{
origin
:
origin
scripts
:
[
'
/
resources
/
testdriver
.
js
'
'
/
resources
/
testdriver
-
driver
.
js
'
'
/
resources
/
testdriver
-
vendor
.
js
'
]
headers
:
headers
}
iframe_attributes
)
;
}
async
function
attemptTopNavigation
(
iframe
should_succeed
)
{
let
did_succeed
;
try
{
await
iframe
.
executeScript
(
(
)
=
>
{
window
.
top
.
location
.
href
=
"
https
:
/
/
google
.
com
"
;
}
)
;
did_succeed
=
true
;
}
catch
(
e
)
{
did_succeed
=
false
;
}
assert_equals
(
did_succeed
should_succeed
should_succeed
?
"
The
navigation
should
succeed
.
"
:
"
The
navigation
should
fail
.
"
)
;
}
async
function
setupTest
(
)
{
const
rcHelper
=
new
RemoteContextHelper
(
)
;
return
rcHelper
.
addWindow
(
null
{
}
)
;
}
async
function
activate
(
iframe
)
{
return
iframe
.
executeScript
(
async
(
)
=
>
{
let
b
=
document
.
createElement
(
"
button
"
)
;
document
.
body
.
appendChild
(
b
)
;
test_driver
.
set_test_context
(
window
.
top
)
;
return
test_driver
.
send_keys
(
document
.
body
"
\
uE004
\
uE004
"
)
;
}
)
;
}
