const
DEBUG_URLS
=
false
;
var
isHttps
=
location
.
protocol
=
=
"
https
:
"
;
var
tests
=
[
{
href
:
existingSheet
(
)
success
:
true
description
:
"
Basic
load
of
stylesheet
"
}
{
href
:
nonexistentSheet
(
)
success
:
false
description
:
"
Attempted
load
of
nonexistent
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
{
existingSheet
(
)
}
"
)
success
:
true
description
:
"
Import
of
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
{
nonexistentSheet
(
)
}
"
)
success
:
false
description
:
"
Import
of
nonexistent
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
data
:
text
/
css
import
url
(
'
{
existingSheet
(
)
}
'
)
"
)
success
:
true
description
:
"
Import
of
import
of
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
data
:
text
/
css
import
url
(
'
{
nonexistentSheet
(
)
}
'
)
"
)
success
:
false
description
:
"
Import
of
import
of
nonexistent
stylesheet
"
}
{
href
:
makeUnique
(
"
"
)
success
:
false
description
:
"
Load
of
non
-
CSS
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
{
makeUnique
(
"
"
)
}
"
)
success
:
false
description
:
"
Import
of
non
-
CSS
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
data
:
text
/
css
import
url
(
'
{
makeUnique
(
"
"
)
}
'
)
"
)
success
:
false
description
:
"
Import
of
import
of
non
-
CSS
stylesheet
"
}
{
href
:
httpSheet
(
)
success
:
!
isHttps
description
:
"
Load
of
http
:
/
/
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
{
httpSheet
(
)
}
"
)
success
:
!
isHttps
description
:
"
Import
of
http
:
/
/
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
data
:
text
/
css
import
url
(
'
{
httpSheet
(
)
}
'
)
"
)
success
:
!
isHttps
description
:
"
Import
of
import
of
http
:
/
/
stylesheet
"
}
{
href
:
httpsSheet
(
)
success
:
true
description
:
"
Load
of
https
:
/
/
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
{
httpsSheet
(
)
}
"
)
success
:
true
description
:
"
Import
of
https
:
/
/
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
data
:
text
/
css
import
url
(
'
{
httpsSheet
(
)
}
'
)
"
)
success
:
true
description
:
"
Import
of
import
of
https
:
/
/
stylesheet
"
}
{
href
:
data
:
text
/
css
import
url
(
"
{
slowResponse
(
existingSheet
(
)
)
}
"
)
;
import
url
(
"
{
nonexistentSheet
(
)
}
"
)
;
success
:
false
description
:
"
Slow
successful
import
fast
failing
import
"
}
{
href
:
data
:
text
/
css
import
url
(
"
{
existingSheet
(
)
}
"
)
;
import
url
(
"
{
slowResponse
(
nonexistentSheet
(
)
)
}
"
)
;
success
:
false
description
:
"
Fast
successful
import
slow
failing
import
"
}
]
;
for
(
var
test
of
tests
)
{
let
{
href
success
description
}
=
test
;
var
t
=
async_test
(
description
)
;
var
link
=
document
.
createElement
(
"
link
"
)
;
link
.
rel
=
"
stylesheet
"
;
hrefString
=
DEBUG_URLS
?
:
{
href
}
:
"
"
;
if
(
success
)
{
link
.
onload
=
t
.
step_func_done
(
(
)
=
>
{
}
)
;
link
.
onerror
=
t
.
step_func_done
(
(
)
=
>
assert_unreached
(
error
fired
when
load
expected
{
hrefString
}
)
)
;
}
else
{
link
.
onerror
=
t
.
step_func_done
(
(
)
=
>
{
}
)
;
link
.
onload
=
t
.
step_func_done
(
(
)
=
>
assert_unreached
(
load
fired
when
error
expected
{
hrefString
}
)
)
;
}
link
.
href
=
href
;
document
.
head
.
appendChild
(
link
)
;
}
function
makeUnique
(
url
)
{
url
=
new
URL
(
url
location
.
href
)
;
url
.
searchParams
.
append
(
"
r
"
Math
.
random
(
)
)
;
return
url
;
}
function
existingSheet
(
)
{
return
makeUnique
(
"
resources
/
good
.
css
"
)
;
}
function
addPipe
(
url
pipeVal
)
{
url
=
new
URL
(
url
location
.
href
)
;
var
params
=
url
.
searchParams
;
var
oldVal
=
params
.
get
(
"
pipe
"
)
;
if
(
oldVal
)
{
params
.
set
(
"
pipe
"
oldVal
+
"
|
"
+
pipeVal
)
;
}
else
{
params
.
set
(
"
pipe
"
pipeVal
)
;
}
return
url
;
}
function
nonexistentSheet
(
)
{
return
addPipe
(
existingSheet
(
)
"
status
(
404
)
"
)
;
}
function
httpSheet
(
)
{
var
url
=
existingSheet
(
)
;
url
.
protocol
=
"
http
"
;
url
.
port
=
{
{
ports
[
http
]
[
0
]
}
}
;
return
url
;
}
function
httpsSheet
(
)
{
var
url
=
existingSheet
(
)
;
url
.
protocol
=
"
https
"
;
url
.
port
=
{
{
ports
[
https
]
[
0
]
}
}
;
return
url
;
}
function
slowResponse
(
url
)
{
return
addPipe
(
url
"
trickle
(
d1
)
"
)
;
}
