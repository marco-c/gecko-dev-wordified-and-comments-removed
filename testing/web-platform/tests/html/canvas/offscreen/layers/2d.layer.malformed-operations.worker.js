importScripts
(
"
/
resources
/
testharness
.
js
"
)
;
importScripts
(
"
/
html
/
canvas
/
resources
/
canvas
-
tests
.
js
"
)
;
test
(
t
=
>
{
const
canvas
=
new
OffscreenCanvas
(
200
200
)
;
const
ctx
=
canvas
.
getContext
(
'
2d
'
)
;
ctx
.
createPattern
(
canvas
'
repeat
'
)
;
ctx
.
createPattern
(
canvas
'
repeat
'
)
;
ctx
.
beginLayer
(
)
;
assert_throws_dom
(
"
InvalidStateError
"
(
)
=
>
ctx
.
createPattern
(
canvas
'
repeat
'
)
)
;
}
"
Throws
if
createPattern
is
called
while
layers
are
open
.
"
)
;
test
(
t
=
>
{
const
canvas
=
new
OffscreenCanvas
(
200
200
)
;
const
ctx
=
canvas
.
getContext
(
'
2d
'
)
;
const
canvas2
=
new
OffscreenCanvas
(
200
200
)
;
const
ctx2
=
canvas2
.
getContext
(
'
2d
'
)
;
ctx2
.
drawImage
(
canvas
0
0
)
;
ctx2
.
drawImage
(
canvas
0
0
)
;
ctx
.
beginLayer
(
)
;
assert_throws_dom
(
"
InvalidStateError
"
(
)
=
>
ctx2
.
drawImage
(
canvas
0
0
)
)
;
}
"
Throws
if
drawImage
is
called
while
layers
are
open
.
"
)
;
test
(
t
=
>
{
const
canvas
=
new
OffscreenCanvas
(
200
200
)
;
const
ctx
=
canvas
.
getContext
(
'
2d
'
)
;
ctx
.
getImageData
(
0
0
200
200
)
;
ctx
.
getImageData
(
0
0
200
200
)
;
ctx
.
beginLayer
(
)
;
assert_throws_dom
(
"
InvalidStateError
"
(
)
=
>
ctx
.
getImageData
(
0
0
200
200
)
)
;
}
"
Throws
if
getImageData
is
called
while
layers
are
open
.
"
)
;
test
(
t
=
>
{
const
canvas
=
new
OffscreenCanvas
(
200
200
)
;
const
ctx
=
canvas
.
getContext
(
'
2d
'
)
;
const
canvas2
=
new
OffscreenCanvas
(
200
200
)
;
const
ctx2
=
canvas2
.
getContext
(
'
2d
'
)
const
data
=
ctx2
.
getImageData
(
0
0
1
1
)
;
ctx
.
putImageData
(
data
0
0
)
;
ctx
.
putImageData
(
data
0
0
)
;
ctx
.
beginLayer
(
)
;
assert_throws_dom
(
"
InvalidStateError
"
(
)
=
>
ctx
.
putImageData
(
data
0
0
)
)
;
}
"
Throws
if
putImageData
is
called
while
layers
are
open
.
"
)
;
test
(
t
=
>
{
const
canvas
=
new
OffscreenCanvas
(
200
200
)
;
const
ctx
=
canvas
.
getContext
(
'
2d
'
)
;
canvas
.
transferToImageBitmap
(
)
;
canvas
.
transferToImageBitmap
(
)
;
ctx
.
beginLayer
(
)
;
assert_throws_dom
(
"
InvalidStateError
"
(
)
=
>
canvas
.
transferToImageBitmap
(
)
)
;
}
"
Throws
if
transferToImageBitmap
is
called
while
layers
are
open
.
"
)
;
done
(
)
;
