importScripts
(
"
/
resources
/
testharness
.
js
"
)
;
importScripts
(
"
/
html
/
canvas
/
resources
/
canvas
-
tests
.
js
"
)
;
var
t
=
async_test
(
"
Test
that
getTextClusters
(
)
splits
the
input
correctly
into
the
minimal
clusters
keeping
emojis
together
.
"
)
;
var
t_pass
=
t
.
done
.
bind
(
t
)
;
var
t_fail
=
t
.
step_func
(
function
(
reason
)
{
throw
reason
;
}
)
;
t
.
step
(
function
(
)
{
var
canvas
=
new
OffscreenCanvas
(
400
200
)
;
var
ctx
=
canvas
.
getContext
(
'
2d
'
)
;
ctx
.
font
=
'
50px
serif
'
;
const
text
=
'
ABC
'
;
ctx
.
fillText
(
text
20
100
)
;
const
tm
=
ctx
.
measureText
(
text
)
;
const
clusters
=
tm
.
getTextClusters
(
)
;
_assertSame
(
clusters
.
length
6
"
clusters
.
length
"
"
6
"
)
;
_assertSame
(
clusters
[
0
]
.
begin
0
"
clusters
[
\
"
"
+
(
0
)
+
"
\
"
]
.
begin
"
"
0
"
)
;
_assertSame
(
clusters
[
0
]
.
end
1
"
clusters
[
\
"
"
+
(
0
)
+
"
\
"
]
.
end
"
"
1
"
)
;
_assertSame
(
clusters
[
1
]
.
begin
1
"
clusters
[
\
"
"
+
(
1
)
+
"
\
"
]
.
begin
"
"
1
"
)
;
_assertSame
(
clusters
[
1
]
.
end
2
"
clusters
[
\
"
"
+
(
1
)
+
"
\
"
]
.
end
"
"
2
"
)
;
_assertSame
(
clusters
[
2
]
.
begin
2
"
clusters
[
\
"
"
+
(
2
)
+
"
\
"
]
.
begin
"
"
2
"
)
;
_assertSame
(
clusters
[
2
]
.
end
3
"
clusters
[
\
"
"
+
(
2
)
+
"
\
"
]
.
end
"
"
3
"
)
;
_assertSame
(
clusters
[
3
]
.
begin
3
"
clusters
[
\
"
"
+
(
3
)
+
"
\
"
]
.
begin
"
"
3
"
)
;
_assertSame
(
clusters
[
3
]
.
end
4
"
clusters
[
\
"
"
+
(
3
)
+
"
\
"
]
.
end
"
"
4
"
)
;
_assertSame
(
clusters
[
4
]
.
begin
4
"
clusters
[
\
"
"
+
(
4
)
+
"
\
"
]
.
begin
"
"
4
"
)
;
_assertSame
(
clusters
[
4
]
.
end
6
"
clusters
[
\
"
"
+
(
4
)
+
"
\
"
]
.
end
"
"
6
"
)
;
_assertSame
(
clusters
[
5
]
.
begin
6
"
clusters
[
\
"
"
+
(
5
)
+
"
\
"
]
.
begin
"
"
6
"
)
;
_assertSame
(
clusters
[
5
]
.
end
8
"
clusters
[
\
"
"
+
(
5
)
+
"
\
"
]
.
end
"
"
8
"
)
;
t
.
done
(
)
;
}
)
;
done
(
)
;
