importScripts
(
"
/
resources
/
testharness
.
js
"
)
;
importScripts
(
"
/
html
/
canvas
/
resources
/
canvas
-
tests
.
js
"
)
;
var
t
=
async_test
(
"
Testing
letter
spacing
and
word
spacing
"
)
;
var
t_pass
=
t
.
done
.
bind
(
t
)
;
var
t_fail
=
t
.
step_func
(
function
(
reason
)
{
throw
reason
;
}
)
;
t
.
step
(
function
(
)
{
var
offscreenCanvas
=
new
OffscreenCanvas
(
100
50
)
;
var
ctx
=
offscreenCanvas
.
getContext
(
'
2d
'
)
;
_assertSame
(
ctx
.
textLetterSpacing
0
"
ctx
.
textLetterSpacing
"
"
0
"
)
;
_assertSame
(
ctx
.
wordSpacing
0
"
ctx
.
wordSpacing
"
"
0
"
)
;
var
width_normal
=
ctx
.
measureText
(
'
Hello
World
'
)
.
width
;
ctx
.
textLetterSpacing
=
3
;
_assertSame
(
ctx
.
textLetterSpacing
3
"
ctx
.
textLetterSpacing
"
"
3
"
)
;
_assertSame
(
ctx
.
wordSpacing
0
"
ctx
.
wordSpacing
"
"
0
"
)
;
var
width_with_spacing
=
ctx
.
measureText
(
'
Hello
World
'
)
.
width
;
_assertSame
(
width_with_spacing
width_normal
+
33
"
width_with_spacing
"
"
width_normal
+
33
"
)
;
ctx
.
wordSpacing
=
5
;
ctx
.
textLetterSpacing
=
0
;
_assertSame
(
ctx
.
textLetterSpacing
0
"
ctx
.
textLetterSpacing
"
"
0
"
)
;
_assertSame
(
ctx
.
wordSpacing
5
"
ctx
.
wordSpacing
"
"
5
"
)
;
width_with_spacing
=
ctx
.
measureText
(
'
Hello
World
'
)
.
width
;
_assertSame
(
width_with_spacing
width_normal
+
5
"
width_with_spacing
"
"
width_normal
+
5
"
)
;
ctx
.
textLetterSpacing
=
-
2
;
ctx
.
wordSpacing
=
-
1
;
_assertSame
(
ctx
.
textLetterSpacing
-
2
"
ctx
.
textLetterSpacing
"
"
-
2
"
)
;
_assertSame
(
ctx
.
wordSpacing
-
1
"
ctx
.
wordSpacing
"
"
-
1
"
)
;
width_with_spacing
=
ctx
.
measureText
(
'
Hello
World
'
)
.
width
;
_assertSame
(
width_with_spacing
width_normal
-
23
"
width_with_spacing
"
"
width_normal
-
23
"
)
;
t
.
done
(
)
;
}
)
;
done
(
)
;
