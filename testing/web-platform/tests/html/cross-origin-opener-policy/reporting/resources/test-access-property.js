const
directory
=
"
/
html
/
cross
-
origin
-
opener
-
policy
/
reporting
"
;
const
executor_path
=
directory
+
"
/
resources
/
executor
.
html
?
pipe
=
"
;
const
coep_header
=
'
|
header
(
Cross
-
Origin
-
Embedder
-
Policy
require
-
corp
)
'
;
const
origin
=
[
[
"
cross
-
origin
"
get_host_info
(
)
.
HTTPS_REMOTE_ORIGIN
]
[
"
same
-
site
"
get_host_info
(
)
.
HTTPS_ORIGIN
]
]
;
let
testAccessProperty
=
(
property
op
message
)
=
>
{
origin
.
forEach
(
(
[
origin_name
origin
]
)
=
>
{
promise_test
(
async
t
=
>
{
const
report_token
=
token
(
)
;
const
openee_token
=
token
(
)
;
const
opener_token
=
token
(
)
;
const
reportTo
=
reportToHeaders
(
report_token
)
;
const
openee_url
=
origin
+
executor_path
+
reportTo
.
header
+
reportTo
.
coopReportOnlySameOriginHeader
+
coep_header
+
&
uuid
=
{
openee_token
}
;
const
openee
=
window
.
open
(
openee_url
)
;
t
.
add_cleanup
(
(
)
=
>
send
(
openee_token
"
window
.
close
(
)
"
)
)
send
(
openee_token
send
(
"
{
opener_token
}
"
"
Ready
"
)
;
)
;
assert_equals
(
await
receive
(
opener_token
)
"
Ready
"
)
;
send
(
openee_token
send
(
"
{
opener_token
}
"
"
Ready
"
)
;
)
;
assert_equals
(
await
receive
(
opener_token
)
"
Ready
"
)
;
try
{
op
(
openee
)
}
catch
(
e
)
{
}
let
report
=
await
receiveReport
(
report_token
"
access
-
to
-
coop
-
page
-
from
-
opener
"
)
;
assert_equals
(
report
.
body
.
property
property
)
;
}
{
origin_name
}
>
{
op
}
)
;
}
)
}
;
