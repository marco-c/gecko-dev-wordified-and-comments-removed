promise_test
(
async
test
=
>
{
const
iframe_B
=
newIframeCredentialless
(
origin
)
;
const
iframe_C
=
newIframe
(
origin
)
;
const
key_D
=
token
(
)
;
const
value_D
=
"
value_D
"
;
const
queue_B
=
token
(
)
;
send
(
iframe_B
const
iframe_D
=
document
.
createElement
(
"
iframe
"
)
;
document
.
body
.
appendChild
(
iframe_D
)
;
iframe_D
.
contentWindow
.
localStorage
.
setItem
(
"
{
key_D
}
"
"
{
value_D
}
"
)
;
send
(
"
{
queue_B
}
"
"
Done
"
)
;
)
;
const
key_E
=
token
(
)
;
const
value_E
=
"
value_E
"
;
const
queue_C
=
token
(
)
;
send
(
iframe_C
const
iframe_E
=
document
.
createElement
(
"
iframe
"
)
;
document
.
body
.
appendChild
(
iframe_E
)
;
iframe_E
.
contentWindow
.
localStorage
.
setItem
(
"
{
key_E
}
"
"
{
value_E
}
"
)
;
send
(
"
{
queue_C
}
"
"
Done
"
)
;
)
;
assert_equals
(
await
receive
(
queue_B
)
"
Done
"
)
;
assert_equals
(
await
receive
(
queue_C
)
"
Done
"
)
;
send
(
iframe_B
const
iframe_D
=
document
.
querySelector
(
"
iframe
"
)
;
const
value_D
=
iframe_D
.
contentWindow
.
localStorage
.
getItem
(
"
{
key_D
}
"
)
;
const
value_E
=
iframe_D
.
contentWindow
.
localStorage
.
getItem
(
"
{
key_E
}
"
)
;
send
(
"
{
queue_B
}
"
value_D
)
;
send
(
"
{
queue_B
}
"
value_E
)
;
)
;
send
(
iframe_C
const
iframe_E
=
document
.
querySelector
(
"
iframe
"
)
;
const
value_D
=
iframe_E
.
contentWindow
.
localStorage
.
getItem
(
"
{
key_D
}
"
)
;
const
value_E
=
iframe_E
.
contentWindow
.
localStorage
.
getItem
(
"
{
key_E
}
"
)
;
send
(
"
{
queue_C
}
"
value_D
)
;
send
(
"
{
queue_C
}
"
value_E
)
;
)
;
assert_equals
(
await
receive
(
queue_B
)
value_D
"
Credentialless
iframe
can
access
credentialless
context
"
)
;
assert_equals
(
await
receive
(
queue_B
)
"
"
"
Credentialless
iframe
can
'
t
access
credentialled
context
"
)
;
assert_equals
(
await
receive
(
queue_C
)
"
"
"
Credentialled
iframe
can
'
t
access
credentialless
context
"
)
;
assert_equals
(
await
receive
(
queue_C
)
value_E
"
Credentialled
iframe
can
access
credentialled
context
"
)
;
}
"
Local
storage
is
correctly
partitioned
with
regards
to
credentialless
"
+
"
iframe
in
initial
empty
documents
.
"
)
;
