const
isSandboxed
=
(
)
=
>
{
try
{
document
.
domain
=
document
.
domain
;
return
false
;
}
catch
(
error
)
{
return
true
;
}
}
promise_test
(
async
test
=
>
{
const
iframe_token
=
token
(
)
;
const
iframe_document
=
new
RemoteContext
(
iframe_token
)
;
const
iframe_url
=
remoteExecutorUrl
(
iframe_token
)
;
const
iframe
=
document
.
createElement
(
"
iframe
"
)
;
iframe
.
sandbox
=
"
allow
-
same
-
origin
allow
-
scripts
allow
-
popups
"
;
iframe
.
src
=
iframe_url
;
document
.
body
.
appendChild
(
iframe
)
;
assert_true
(
await
iframe_document
.
execute_script
(
isSandboxed
)
"
iframe
is
sandboxed
"
)
;
const
popup_token
=
token
(
)
;
const
popup_document
=
new
RemoteContext
(
popup_token
)
;
const
popup_url
=
remoteExecutorUrl
(
popup_token
)
;
iframe_document
.
execute_script
(
(
popup_url
)
=
>
{
let
iframe
=
document
.
createElement
(
"
iframe
"
)
;
iframe
.
name
=
"
iframe_name
"
;
document
.
body
.
appendChild
(
iframe
)
;
iframe_name
.
open
(
popup_url
)
;
}
[
popup_url
.
href
]
)
;
assert_true
(
await
popup_document
.
execute_script
(
isSandboxed
)
"
popup
is
sandboxed
"
)
;
}
)
;
