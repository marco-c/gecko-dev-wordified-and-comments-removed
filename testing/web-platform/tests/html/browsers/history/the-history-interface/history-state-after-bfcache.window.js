'
use
strict
'
;
promise_test
(
async
t
=
>
{
const
rcHelper
=
new
RemoteContextHelper
(
)
;
const
rc
=
await
rcHelper
.
addWindow
(
null
{
features
:
"
noopener
"
}
)
;
await
rc
.
executeScript
(
(
)
=
>
{
window
.
addEventListener
(
'
pageshow
'
(
event
)
=
>
{
window
.
pageshowEvent
=
event
;
}
)
;
history
.
replaceState
(
{
foo
:
'
bar
'
}
'
'
'
'
)
;
window
.
stashedHistoryState
=
history
.
state
;
}
)
;
const
rc2
=
await
rc
.
navigateToNew
(
)
;
await
rc2
.
historyBack
(
)
;
assert_implements_optional
(
await
rc
.
executeScript
(
(
)
=
>
window
.
pageshowEvent
.
persisted
)
'
precondition
:
document
was
bfcached
'
)
;
assert_equals
(
await
rc
.
executeScript
(
(
)
=
>
history
.
state
.
foo
)
'
bar
'
'
history
.
state
was
restored
correctly
'
)
;
assert_true
(
await
rc
.
executeScript
(
(
)
=
>
window
.
stashedHistoryState
=
=
=
history
.
state
)
'
history
.
state
did
not
get
serialized
and
deserialized
'
)
;
}
)
;
