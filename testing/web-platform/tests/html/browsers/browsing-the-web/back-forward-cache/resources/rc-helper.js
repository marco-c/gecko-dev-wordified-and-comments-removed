async
function
prepareForBFCache
(
remoteContextHelper
)
{
await
remoteContextHelper
.
executeScript
(
(
)
=
>
{
window
.
beforeBFCache
=
true
;
}
)
;
}
async
function
getBeforeBFCache
(
remoteContextHelper
)
{
return
await
remoteContextHelper
.
executeScript
(
(
)
=
>
{
return
window
.
beforeBFCache
;
}
)
;
}
async
function
assert_implements_bfcache
(
remoteContextHelper
)
{
var
beforeBFCache
=
await
getBeforeBFCache
(
remoteContextHelper
)
;
assert_implements_optional
(
beforeBFCache
=
=
true
'
BFCache
not
supported
.
'
)
;
}
async
function
assert_not_bfcached
(
remoteContextHelper
)
{
var
beforeBFCache
=
await
getBeforeBFCache
(
remoteContextHelper
)
;
assert_equals
(
beforeBFCache
undefined
)
;
}
async
function
assertBFCache
(
remoteContextHelper
shouldRestoreFromBFCache
)
{
await
prepareForBFCache
(
remoteContextHelper
)
;
const
newRemoteContextHelper
=
await
remoteContextHelper
.
navigateToNew
(
)
;
await
newRemoteContextHelper
.
historyBack
(
)
;
if
(
shouldRestoreFromBFCache
)
{
await
assert_implements_bfcache
(
remoteContextHelper
)
;
}
else
{
await
assert_not_bfcached
(
remoteContextHelper
)
;
}
}
