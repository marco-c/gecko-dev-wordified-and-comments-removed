'
use
strict
'
;
async
function
assertLocationIs
(
remoteContextWrapper
expectedLocation
)
{
assert_equals
(
await
remoteContextWrapper
.
executeScript
(
(
)
=
>
{
return
location
.
toString
(
)
;
}
)
expectedLocation
'
verify
location
'
)
;
}
promise_test
(
async
t
=
>
{
const
rcHelper
=
new
RemoteContextHelper
(
)
;
const
rc
=
await
rcHelper
.
addWindow
(
)
;
const
oldLocation
=
await
rc
.
executeScript
(
(
)
=
>
{
return
location
.
toString
(
)
;
}
)
;
const
newLocation
=
oldLocation
+
'
#
fragment
'
;
await
rc
.
navigateTo
(
newLocation
)
;
await
assertLocationIs
(
rc
newLocation
)
;
await
rc
.
historyBack
(
oldLocation
)
;
await
assertLocationIs
(
rc
oldLocation
)
;
}
)
;
