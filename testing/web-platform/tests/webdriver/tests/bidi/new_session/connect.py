import
pytest
import
asyncio
import
websockets
pytest
.
mark
.
asyncio
pytest
.
mark
.
capabilities
(
{
"
webSocketUrl
"
:
True
}
)
async
def
test_websocket_url_connect
(
session
)
:
    
websocket_url
=
session
.
capabilities
[
"
webSocketUrl
"
]
    
async
with
websockets
.
connect
(
websocket_url
)
as
websocket
:
        
await
websocket
.
send
(
"
Hello
world
!
"
)
        
await
websocket
.
close
(
)
pytest
.
mark
.
asyncio
pytest
.
mark
.
bidi
(
True
)
async
def
test_bidi_session_1
(
session
)
:
    
await
session
.
websocket_transport
.
send
(
"
test_bidi_session_1
"
)
    
await
session
.
websocket_transport
.
close
(
)
pytest
.
mark
.
asyncio
pytest
.
mark
.
bidi
(
True
)
async
def
test_bidi_session_2
(
session
)
:
    
await
session
.
websocket_transport
.
send
(
"
test_bidi_session_2
"
)
    
await
session
.
websocket_transport
.
close
(
)
pytest
.
mark
.
asyncio
pytest
.
mark
.
bidi
(
True
)
pytest
.
mark
.
capabilities
(
{
"
acceptInsecureCerts
"
:
True
}
)
async
def
test_bidi_session_3
(
session
)
:
    
await
session
.
websocket_transport
.
send
(
"
test_bidi_session_3
"
)
pytest
.
mark
.
asyncio
async
def
test_classic
(
session
)
:
    
pass
