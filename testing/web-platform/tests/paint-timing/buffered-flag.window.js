async_test
(
t
=
>
{
assert_implements
(
window
.
PerformancePaintTiming
"
Paint
Timing
isn
'
t
supported
.
"
)
;
let
entries_seen
=
0
;
new
PerformanceObserver
(
firstList
=
>
{
entries_seen
+
=
firstList
.
getEntries
(
)
.
length
;
if
(
entries_seen
<
2
)
return
;
let
firstPaintSeen
=
false
;
let
firstContentfulPaintSeen
=
false
;
new
PerformanceObserver
(
list
=
>
{
list
.
getEntries
(
)
.
forEach
(
t
.
step_func
(
entry
=
>
{
assert_equals
(
entry
.
entryType
'
paint
'
)
;
if
(
entry
.
name
=
=
=
'
first
-
paint
'
)
firstPaintSeen
=
true
;
else
if
(
entry
.
name
=
=
=
'
first
-
contentful
-
paint
'
)
firstContentfulPaintSeen
=
true
;
else
assert_unreached
(
'
The
observer
should
only
see
first
paint
or
first
contentful
paint
!
'
)
;
if
(
firstPaintSeen
&
&
firstContentfulPaintSeen
)
t
.
done
(
)
;
}
)
)
;
}
)
.
observe
(
{
'
type
'
:
'
paint
'
buffered
:
true
}
)
;
}
)
.
observe
(
{
'
entryTypes
'
:
[
'
paint
'
]
}
)
;
const
img
=
document
.
createElement
(
"
IMG
"
)
;
img
.
src
=
"
resources
/
circles
.
png
"
;
document
.
body
.
appendChild
(
img
)
;
}
"
PerformanceObserver
with
buffered
flag
sees
previous
paint
entries
.
"
)
;
