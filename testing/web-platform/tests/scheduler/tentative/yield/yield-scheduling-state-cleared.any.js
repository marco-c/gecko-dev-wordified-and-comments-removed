'
use
strict
'
;
promise_test
(
async
t
=
>
{
const
ids
=
[
]
;
const
{
promise
resolve
}
=
Promise
.
withResolvers
(
)
;
scheduler
.
postTask
(
async
(
)
=
>
{
setTimeout
(
async
(
)
=
>
{
let
task
=
scheduler
.
postTask
(
(
)
=
>
{
ids
.
push
(
'
task
'
)
;
}
{
priority
:
'
user
-
visible
'
}
)
;
await
scheduler
.
yield
(
)
;
ids
.
push
(
'
continuation
'
)
;
await
task
;
resolve
(
)
;
}
)
;
}
{
priority
:
'
background
'
}
)
;
await
promise
;
assert_equals
(
ids
.
toString
(
)
'
continuation
task
'
)
;
}
'
yield
(
)
does
not
leak
priority
across
tasks
'
)
;
