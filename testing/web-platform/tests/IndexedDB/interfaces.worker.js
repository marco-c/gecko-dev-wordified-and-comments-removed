"
use
strict
"
;
importScripts
(
"
/
resources
/
testharness
.
js
"
)
;
importScripts
(
"
/
resources
/
WebIDLParser
.
js
"
"
/
resources
/
idlharness
.
js
"
)
;
async_test
(
function
(
t
)
{
var
request
=
new
XMLHttpRequest
(
)
;
request
.
open
(
"
GET
"
"
/
interfaces
/
IndexedDB
.
idl
"
)
;
request
.
send
(
)
;
request
.
onload
=
t
.
step_func
(
function
(
)
{
var
idlArray
=
new
IdlArray
(
)
;
var
idls
=
request
.
responseText
;
idlArray
.
add_untested_idls
(
"
[
Exposed
=
Worker
]
interface
WorkerGlobalScope
{
}
;
"
)
;
idlArray
.
add_untested_idls
(
[
NoInterfaceObject
Exposed
=
(
Window
Worker
)
]
interface
WindowOrWorkerGlobalScope
{
}
;
)
;
idlArray
.
add_untested_idls
(
"
WorkerGlobalScope
implements
WindowOrWorkerGlobalScope
;
"
)
;
idlArray
.
add_untested_idls
(
"
[
Exposed
=
(
Window
Worker
)
]
interface
Event
{
}
;
"
)
;
idlArray
.
add_untested_idls
(
"
[
Exposed
=
(
Window
Worker
)
]
interface
EventTarget
{
}
;
"
)
;
idlArray
.
add_untested_idls
(
"
[
Exposed
=
(
Window
Worker
)
]
interface
DOMStringList
{
}
;
"
)
;
idlArray
.
add_idls
(
idls
)
;
idlArray
.
add_objects
(
{
IDBCursor
:
[
]
IDBCursorWithValue
:
[
]
IDBDatabase
:
[
]
IDBFactory
:
[
"
self
.
indexedDB
"
]
IDBIndex
:
[
]
IDBKeyRange
:
[
"
IDBKeyRange
.
only
(
0
)
"
]
IDBObjectStore
:
[
]
IDBOpenDBRequest
:
[
]
IDBRequest
:
[
]
IDBTransaction
:
[
]
IDBVersionChangeEvent
:
[
"
new
IDBVersionChangeEvent
(
'
foo
'
)
"
]
DOMStringList
:
[
]
}
)
;
idlArray
.
test
(
)
;
t
.
done
(
)
;
}
)
;
}
)
;
done
(
)
;
