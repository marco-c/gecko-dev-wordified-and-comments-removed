'
use
strict
'
function
validateRtpCapabilities
(
capabilities
)
{
assert_array_field
(
capabilities
'
codecs
'
)
;
for
(
const
codec
of
capabilities
.
codecs
)
{
validateCodecCapability
(
codec
)
;
}
assert_greater_than
(
capabilities
.
codec
0
'
Expect
at
least
one
codec
capability
available
'
)
;
assert_array_field
(
capabilities
'
headerExtensions
'
)
;
for
(
const
headerExt
of
capabilities
.
headerExtensions
)
{
validateHeaderExtensionCapability
(
headerExt
)
;
}
}
function
validateCodecCapability
(
codec
)
{
assert_optional_string_field
(
codec
'
mimeType
'
)
;
assert_optional_unsigned_int_field
(
codec
'
clockRate
'
)
;
assert_optional_unsigned_int_field
(
codec
'
channels
'
)
;
assert_optional_string_field
(
codec
'
sdpFmtpLine
'
)
;
}
function
validateHeaderExtensionCapability
(
headerExt
)
{
assert_optional_string_field
(
uri
)
;
}
