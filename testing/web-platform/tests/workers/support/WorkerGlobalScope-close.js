onmessage
=
function
(
evt
)
{
if
(
evt
.
data
=
=
"
closeWithPendingEvents
"
)
{
setTimeout
(
function
(
)
{
postMessage
(
"
pending
event
processed
"
)
;
throw
"
should
not
be
executed
"
;
}
1
)
;
var
start
=
new
Date
(
)
.
getTime
(
)
;
while
(
new
Date
(
)
.
getTime
(
)
-
start
<
100
)
;
close
(
)
;
}
else
if
(
evt
.
data
=
=
"
typeofClose
"
)
{
postMessage
(
"
typeof
close
:
"
+
(
typeof
close
)
)
;
}
else
if
(
evt
.
data
=
=
"
close
"
)
{
close
(
)
;
postMessage
(
"
Should
be
delivered
"
)
;
}
else
if
(
evt
.
data
=
=
"
ping
"
)
{
postMessage
(
"
pong
"
)
;
}
else
if
(
evt
.
data
=
=
"
throw
"
)
{
throw
"
should
never
be
executed
"
;
}
else
if
(
evt
.
data
=
=
"
closeWithError
"
)
{
close
(
)
;
nonExistentFunction
(
)
;
}
else
if
(
evt
.
data
=
=
"
close_post_loop
"
)
{
close
(
)
;
postMessage
(
"
closed
"
)
;
while
(
true
)
{
}
}
else
if
(
evt
.
data
=
=
"
take_port
"
)
{
messagePort
=
evt
.
ports
[
0
]
;
messagePort
.
onmessage
=
function
(
event
)
{
close
(
)
;
postMessage
(
"
echo_
"
+
event
.
data
)
;
}
}
else
if
(
evt
.
data
=
=
"
start_port
"
)
{
messagePort
.
start
(
)
;
}
else
{
postMessage
(
"
FAIL
:
Unknown
message
type
:
"
+
evt
.
data
)
;
}
}
