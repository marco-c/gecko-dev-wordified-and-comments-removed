let
test_cases
=
[
[
"
text
/
javascript
"
true
]
[
"
application
/
javascript
"
true
]
[
"
text
/
ecmascript
"
true
]
[
"
image
/
png
"
false
]
[
"
text
/
csv
"
false
]
[
"
video
/
mpeg
"
false
]
[
"
text
/
html
"
false
]
[
"
text
/
plain
"
false
]
[
"
application
/
xml
"
false
]
[
"
application
/
octet
-
stream
"
false
]
[
"
text
/
potato
"
false
]
[
"
potato
/
text
"
false
]
[
"
aaa
/
aaa
"
false
]
[
"
zzz
/
zzz
"
false
]
[
"
text
/
javascript
;
charset
=
utf
-
8
"
true
]
[
"
text
/
javascript
;
charset
=
utf
-
8
"
true
]
[
"
text
/
javascript
;
bla
;
bla
"
true
]
[
"
text
/
csv
;
charset
=
utf
-
8
"
false
]
[
"
text
/
csv
;
charset
=
utf
-
8
"
false
]
[
"
text
/
csv
;
bla
;
bla
"
false
]
[
"
Text
/
html
"
false
]
[
"
text
/
Html
"
false
]
[
"
TeXt
/
HtMl
"
false
]
[
"
TEXT
/
HTML
"
false
]
]
;
for
(
var
test_case
of
test_cases
)
{
test
(
t
=
>
{
let
import_url
=
"
/
workers
/
support
/
imported_script
.
py
?
mime
=
"
+
test_case
[
0
]
;
if
(
test_case
[
1
]
)
{
assert_equals
(
undefined
importScripts
(
import_url
)
)
;
}
else
{
assert_throws_dom
(
"
NetworkError
"
_
=
>
{
importScripts
(
import_url
)
}
)
}
}
"
importScripts
(
)
requires
scripty
MIME
types
:
"
+
test_case
[
0
]
+
"
is
"
+
(
test_case
[
1
]
?
"
allowed
"
:
"
blocked
"
)
+
"
.
"
)
;
}
