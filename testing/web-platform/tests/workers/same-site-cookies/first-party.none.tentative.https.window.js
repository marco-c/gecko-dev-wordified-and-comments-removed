'
use
strict
'
;
async_test
(
t
=
>
{
const
cookie_set_window
=
window
.
open
(
"
/
workers
/
same
-
site
-
cookies
/
resources
/
set_cookies
.
py
"
)
;
cookie_set_window
.
onload
=
t
.
step_func
(
_
=
>
{
const
worker
=
new
SharedWorker
(
"
/
workers
/
same
-
site
-
cookies
/
resources
/
worker_redirect
.
py
"
{
sameSiteCookies
:
"
none
"
}
)
;
worker
.
port
.
onmessage
=
t
.
step_func
(
e
=
>
{
getCookieNames
(
)
.
then
(
t
.
step_func
(
(
cookies
)
=
>
{
assert_equals
(
e
.
data
+
cookies
"
ReadOnLoad
:
None
ReadOnFetch
:
None
SetOnRedirectLoad
:
None
SetOnLoad
:
None
SetOnRedirectFetch
:
None
SetOnFetch
:
None
"
"
Worker
should
get
/
set
SameSite
=
None
cookies
only
"
)
;
cookie_set_window
.
close
(
)
;
t
.
done
(
)
;
}
)
)
;
}
)
;
}
)
;
}
"
Check
SharedWorker
sameSiteCookies
option
none
for
first
-
party
"
)
;
