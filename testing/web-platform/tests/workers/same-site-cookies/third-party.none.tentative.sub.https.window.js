'
use
strict
'
;
async_test
(
t
=
>
{
const
cookie_set_window
=
window
.
open
(
"
/
workers
/
same
-
site
-
cookies
/
resources
/
set_cookies
.
py
"
)
;
cookie_set_window
.
onload
=
t
.
step_func
(
_
=
>
{
window
.
addEventListener
(
"
message
"
t
.
step_func
(
e
=
>
{
getCookieNames
(
)
.
then
(
t
.
step_func
(
(
cookies
)
=
>
{
assert_equals
(
e
.
data
+
cookies
"
ReadOnLoad
:
None
ReadOnFetch
:
None
SetOnRedirectLoad
:
None
SetOnLoad
:
None
SetOnRedirectFetch
:
None
SetOnFetch
:
None
"
"
Worker
should
get
/
set
SameSite
=
None
cookies
only
"
)
;
cookie_set_window
.
close
(
)
;
t
.
done
(
)
;
}
)
)
;
}
)
)
;
let
iframe
=
document
.
createElement
(
"
iframe
"
)
;
iframe
.
src
=
"
https
:
/
/
{
{
hosts
[
alt
]
[
]
}
}
:
{
{
ports
[
https
]
[
0
]
}
}
/
workers
/
same
-
site
-
cookies
/
resources
/
iframe
.
sub
.
html
?
type
=
none
"
;
document
.
body
.
appendChild
(
iframe
)
;
}
)
;
}
"
Check
SharedWorker
sameSiteCookies
option
none
for
third
-
party
"
)
;
