function
runTest
(
config
)
{
function
test_session
(
keysystem
initDataType
initData
)
{
return
isInitDataTypeSupported
(
initDataType
)
.
then
(
function
(
result
)
{
if
(
!
result
)
return
Promise
.
resolve
(
'
Not
supported
'
)
;
return
navigator
.
requestMediaKeySystemAccess
(
keysystem
getSimpleConfigurationForInitDataType
(
initDataType
)
)
.
then
(
function
(
access
)
{
return
access
.
createMediaKeys
(
)
;
}
)
.
then
(
function
(
mediaKeys
)
{
var
mediaKeySession
=
mediaKeys
.
createSession
(
)
;
return
mediaKeySession
.
generateRequest
(
initDataType
initData
)
;
}
)
.
then
(
function
(
)
{
assert_unreached
(
'
generateRequest
(
)
succeeded
'
)
;
}
function
(
error
)
{
assert_equals
(
error
.
name
'
InvalidAccessError
'
)
;
return
Promise
.
resolve
(
'
success
'
)
;
}
)
;
}
)
}
promise_test
(
function
(
)
{
var
initData
=
new
Uint8Array
(
70000
)
;
return
test_session
(
config
.
keysystem
'
webm
'
initData
)
;
}
config
.
keysystem
+
'
:
generateRequest
(
)
with
webm
initData
longer
than
64Kb
characters
.
'
)
;
promise_test
(
function
(
)
{
var
initData
=
new
Uint8Array
(
70000
)
;
return
test_session
(
config
.
keysystem
'
cenc
'
initData
)
;
}
config
.
keysystem
+
'
:
generateRequest
(
)
with
cenc
initData
longer
than
64Kb
characters
.
'
)
;
promise_test
(
function
(
)
{
var
initData
=
new
Uint8Array
(
70000
)
;
return
test_session
(
config
.
keysystem
'
keyids
'
initData
)
;
}
config
.
keysystem
+
'
:
generateRequest
(
)
with
keyids
initData
longer
than
64Kb
characters
.
'
)
;
promise_test
(
function
(
)
{
var
initData
=
new
Uint8Array
(
[
0x00
0x00
0xff
0xff
0x70
0x73
0x73
0x68
0x00
0x00
0x00
0x00
0x10
0x77
0xEF
0xEC
0xC0
0xB2
0x4D
0x02
0xAC
0xE3
0x3C
0x1E
0x52
0xE2
0xFB
0x4B
0x00
0x00
0x00
0x00
]
)
;
return
test_session
(
config
.
keysystem
'
cenc
'
initData
)
;
}
config
.
keysystem
+
'
:
generateRequest
(
)
with
invalid
pssh
data
.
'
)
;
promise_test
(
function
(
)
{
var
initData
=
new
Uint8Array
(
[
0x00
0x00
0x00
0x00
0x70
0x73
0x73
0x73
0x00
0x00
0x00
0x00
0x10
0x77
0xEF
0xEC
0xC0
0xB2
0x4D
0x02
0xAC
0xE3
0x3C
0x1E
0x52
0xE2
0xFB
0x4B
0x00
0x00
0x00
0x00
]
)
;
return
test_session
(
config
.
keysystem
'
cenc
'
initData
)
;
}
config
.
keysystem
+
'
:
generateRequest
(
)
with
non
pssh
data
.
'
)
;
promise_test
(
function
(
)
{
var
keyId
=
new
Uint8Array
(
0
)
;
var
initData
=
stringToUint8Array
(
createKeyIDs
(
keyId
)
)
;
return
test_session
(
config
.
keysystem
'
keyids
'
initData
)
;
}
config
.
keysystem
+
'
:
generateRequest
(
)
with
too
short
key
ID
.
'
)
;
promise_test
(
function
(
)
{
var
keyId
=
new
Uint8Array
(
600
)
;
var
initData
=
stringToUint8Array
(
createKeyIDs
(
keyId
)
)
;
return
test_session
(
config
.
keysystem
'
keyids
'
initData
)
;
}
config
.
keysystem
+
'
:
generateRequest
(
)
with
too
long
key
ID
.
'
)
;
}
