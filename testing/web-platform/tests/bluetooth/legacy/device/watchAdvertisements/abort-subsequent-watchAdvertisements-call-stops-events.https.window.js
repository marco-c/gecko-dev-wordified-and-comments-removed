'
use
strict
'
;
const
test_desc
=
'
AbortController
on
subsequent
watchAdvertisements
(
)
call
'
+
'
cancels
the
watch
advertisements
operation
.
'
;
bluetooth_test
(
async
(
t
)
=
>
{
let
{
device
}
=
await
getDiscoveredHealthThermometerDevice
(
)
;
const
watcher
=
new
EventWatcher
(
t
device
[
'
advertisementreceived
'
]
)
;
await
device
.
watchAdvertisements
(
)
;
assert_true
(
device
.
watchingAdvertisements
)
;
let
abortController
=
new
AbortController
(
)
;
await
device
.
watchAdvertisements
(
{
signal
:
abortController
.
signal
}
)
;
abortController
.
abort
(
)
;
assert_false
(
device
.
watchingAdvertisements
)
;
await
fake_central
.
simulateAdvertisementReceived
(
heart_rate_ad_packet
)
;
}
test_desc
)
;
