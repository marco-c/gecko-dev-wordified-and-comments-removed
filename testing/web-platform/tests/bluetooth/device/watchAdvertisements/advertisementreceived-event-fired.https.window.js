'
use
strict
'
;
const
test_desc
=
watchAdvertisements
(
)
enables
'
advertisementreceived
'
+
events
to
be
fired
on
the
device
object
.
;
bluetooth_test
(
async
(
t
)
=
>
{
let
{
device
}
=
await
getDiscoveredHealthThermometerDevice
(
)
;
const
watcher
=
new
EventWatcher
(
t
device
[
'
advertisementreceived
'
]
)
;
await
device
.
watchAdvertisements
(
)
;
assert_true
(
device
.
watchingAdvertisements
)
;
await
fake_central
.
simulateAdvertisementReceived
(
heart_rate_ad_packet
)
;
let
advertisementreceivedPromise
=
watcher
.
wait_for
(
'
advertisementreceived
'
)
;
await
fake_central
.
simulateAdvertisementReceived
(
health_thermometer_ad_packet
)
;
let
evt
=
await
advertisementreceivedPromise
;
assert_equals
(
evt
.
device
device
)
;
}
test_desc
)
;
