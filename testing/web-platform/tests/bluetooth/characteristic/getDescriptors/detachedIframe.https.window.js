bluetooth_test
(
async
(
)
=
>
{
let
iframe
=
document
.
createElement
(
'
iframe
'
)
;
let
error
;
const
{
device
fakes
}
=
await
getHealthThermometerDeviceFromIframe
(
iframe
)
;
await
fakes
.
fake_peripheral
.
setNextGATTDiscoveryResponse
(
{
code
:
HCI_SUCCESS
}
)
;
let
service
=
await
device
.
gatt
.
getPrimaryService
(
health_thermometer
.
name
)
;
let
characteristic
=
await
service
.
getCharacteristic
(
measurement_interval
.
name
)
;
iframe
.
remove
(
)
;
iframe
=
null
;
await
runGarbageCollection
(
)
;
try
{
await
characteristic
.
getDescriptors
(
user_description
.
name
)
;
}
catch
(
e
)
{
error
=
e
;
}
assert_not_equals
(
error
undefined
)
;
assert_equals
(
error
.
name
'
NetworkError
'
)
;
}
'
getDescriptors
(
)
rejects
in
a
detached
context
'
)
;
