'
use
strict
'
;
const
test_desc
=
'
A
device
that
reconnects
during
the
'
+
'
gattserverdisconnected
event
should
still
receive
'
+
'
gattserverdisconnected
events
after
re
-
connection
.
'
;
bluetooth_bidi_test
(
async
(
)
=
>
{
const
{
device
fake_peripheral
}
=
await
getConnectedHealthThermometerDevice
(
)
;
const
reconnectPromise
=
new
Promise
(
async
(
resolve
)
=
>
{
device
.
addEventListener
(
'
gattserverdisconnected
'
async
(
)
=
>
{
await
fake_peripheral
.
setNextGATTConnectionResponse
(
{
code
:
HCI_SUCCESS
}
)
;
await
device
.
gatt
.
connect
(
)
;
const
disconnectPromise
=
eventPromise
(
device
'
gattserverdisconnected
'
)
;
fake_peripheral
.
simulateGATTDisconnection
(
)
;
resolve
(
disconnectPromise
)
;
}
{
once
:
true
}
)
;
}
)
;
await
fake_peripheral
.
simulateGATTDisconnection
(
)
;
await
reconnectPromise
;
}
test_desc
)
;
