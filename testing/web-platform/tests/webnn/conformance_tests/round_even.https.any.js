'
use
strict
'
;
const
getRoundEvenPrecisionTolerance
=
(
)
=
>
{
return
{
metricType
:
'
ULP
'
value
:
0
}
;
}
;
const
roundEvenTests
=
[
{
'
name
'
:
'
roundEven
float32
positive
0D
scalar
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
1
.
5
]
'
descriptor
'
:
{
shape
:
[
]
dataType
:
'
float32
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
2
]
'
descriptor
'
:
{
shape
:
[
]
dataType
:
'
float32
'
}
}
}
}
}
{
'
name
'
:
'
roundEven
float32
negative
1D
tensor
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
-
1
.
5
]
'
descriptor
'
:
{
shape
:
[
1
]
dataType
:
'
float32
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
-
2
]
'
descriptor
'
:
{
shape
:
[
1
]
dataType
:
'
float32
'
}
}
}
}
}
{
'
name
'
:
'
roundEven
float32
2D
tensor
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
-
1
.
5
0
.
5
]
'
descriptor
'
:
{
shape
:
[
1
2
]
dataType
:
'
float32
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
-
2
0
]
'
descriptor
'
:
{
shape
:
[
1
2
]
dataType
:
'
float32
'
}
}
}
}
}
{
'
name
'
:
'
roundEven
float32
3D
tensor
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
-
2
.
5
-
1
.
5
0
.
5
1
.
5
]
'
descriptor
'
:
{
shape
:
[
1
2
2
]
dataType
:
'
float32
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
-
2
-
2
0
2
]
'
descriptor
'
:
{
shape
:
[
1
2
2
]
dataType
:
'
float32
'
}
}
}
}
}
{
'
name
'
:
'
roundEven
float32
4D
tensor
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
-
2
.
5
-
1
.
5
0
.
5
1
.
5
]
'
descriptor
'
:
{
shape
:
[
1
2
1
2
]
dataType
:
'
float32
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
-
2
-
2
0
2
]
'
descriptor
'
:
{
shape
:
[
1
2
1
2
]
dataType
:
'
float32
'
}
}
}
}
}
{
'
name
'
:
'
roundEven
float16
positive
0D
scalar
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
1
.
5
]
'
descriptor
'
:
{
shape
:
[
]
dataType
:
'
float16
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
2
]
'
descriptor
'
:
{
shape
:
[
]
dataType
:
'
float16
'
}
}
}
}
}
{
'
name
'
:
'
roundEven
float16
negative
1D
tensor
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
-
1
.
5
]
'
descriptor
'
:
{
shape
:
[
1
]
dataType
:
'
float16
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
-
2
]
'
descriptor
'
:
{
shape
:
[
1
]
dataType
:
'
float16
'
}
}
}
}
}
{
'
name
'
:
'
roundEven
float16
2D
tensor
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
-
1
.
5
0
.
5
]
'
descriptor
'
:
{
shape
:
[
1
2
]
dataType
:
'
float16
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
-
2
0
]
'
descriptor
'
:
{
shape
:
[
1
2
]
dataType
:
'
float16
'
}
}
}
}
}
{
'
name
'
:
'
roundEven
float16
3D
tensor
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
-
2
.
5
-
1
.
5
0
.
5
1
.
5
]
'
descriptor
'
:
{
shape
:
[
1
2
2
]
dataType
:
'
float16
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
-
2
-
2
0
2
]
'
descriptor
'
:
{
shape
:
[
1
2
2
]
dataType
:
'
float16
'
}
}
}
}
}
{
'
name
'
:
'
roundEven
float16
4D
tensor
'
'
graph
'
:
{
'
inputs
'
:
{
'
roundEvenInput
'
:
{
'
data
'
:
[
-
2
.
5
-
1
.
5
0
.
5
1
.
5
]
'
descriptor
'
:
{
shape
:
[
1
2
1
2
]
dataType
:
'
float16
'
}
}
}
'
operators
'
:
[
{
'
name
'
:
'
roundEven
'
'
arguments
'
:
[
{
'
input
'
:
'
roundEvenInput
'
}
]
'
outputs
'
:
'
roundEvenOutput
'
}
]
'
expectedOutputs
'
:
{
'
roundEvenOutput
'
:
{
'
data
'
:
[
-
2
-
2
0
2
]
'
descriptor
'
:
{
shape
:
[
1
2
1
2
]
dataType
:
'
float16
'
}
}
}
}
}
]
webnn_conformance_test
(
roundEvenTests
buildAndExecuteGraph
getRoundEvenPrecisionTolerance
)
;
