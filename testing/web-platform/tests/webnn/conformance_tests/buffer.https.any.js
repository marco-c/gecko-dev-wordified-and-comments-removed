'
use
strict
'
;
if
(
navigator
.
ml
)
{
testCreateWebNNBuffer
(
'
create
'
{
dataType
:
'
float16
'
dimensions
:
[
2
3
]
}
)
;
testCreateWebNNBuffer
(
'
create
'
{
dataType
:
'
float32
'
dimensions
:
[
1
5
]
}
)
;
testCreateWebNNBuffer
(
'
create
'
{
dataType
:
'
int32
'
dimensions
:
[
4
]
}
)
;
testCreateWebNNBuffer
(
'
create
'
{
dataType
:
'
uint8
'
dimensions
:
[
3
2
4
]
}
)
;
testCreateWebNNBufferFails
(
'
createFailsEmptyDimension
'
{
dataType
:
'
int32
'
dimensions
:
[
2
0
3
]
}
)
;
testCreateWebNNBufferFails
(
'
createFailsTooLarge
'
{
dataType
:
'
int32
'
dimensions
:
[
kMaxUnsignedLong
kMaxUnsignedLong
kMaxUnsignedLong
]
}
)
;
testDestroyWebNNBuffer
(
'
destroyTwice
'
)
;
testReadWebNNBuffer
(
'
read
'
)
;
testWriteWebNNBuffer
(
'
write
'
)
;
testDispatchWebNNBuffer
(
'
dispatch
'
)
;
}
else
{
test
(
(
)
=
>
assert_implements
(
navigator
.
ml
'
missing
navigator
.
ml
'
)
)
;
}
