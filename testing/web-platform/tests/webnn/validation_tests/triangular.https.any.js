'
use
strict
'
;
promise_test
(
async
t
=
>
{
const
builder
=
new
MLGraphBuilder
(
context
)
;
for
(
let
shape
of
allWebNNShapesArray
.
slice
(
0
2
)
)
{
for
(
let
dataType
of
allWebNNOperandDataTypes
)
{
if
(
!
context
.
opSupportLimits
(
)
.
input
.
dataTypes
.
includes
(
dataType
)
)
{
continue
;
}
const
input
=
builder
.
input
(
input
{
+
+
inputIndex
}
{
dataType
shape
}
)
;
const
label
=
'
triangular_3
'
;
const
options
=
{
label
}
;
const
regrexp
=
new
RegExp
(
'
\
\
[
'
+
label
+
'
\
\
]
'
)
;
assert_throws_with_label
(
(
)
=
>
builder
.
triangular
(
input
options
)
regrexp
)
;
}
}
}
'
[
triangular
]
TypeError
is
expected
if
input
\
'
s
rank
is
less
than
2
'
)
;
validateInputFromAnotherBuilder
(
'
triangular
'
)
;
