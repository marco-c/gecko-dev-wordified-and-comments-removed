'
use
strict
'
;
function
createFakeWorld
(
width
height
length
front_wall_and_floor_type
=
"
plane
"
side_walls_type
=
"
mesh
"
ceiling_type
=
"
point
"
)
{
const
BOTTOM_LEFT_FRONT
=
{
x
:
-
width
/
2
y
:
0
z
:
-
length
/
2
w
:
1
}
;
const
BOTTOM_RIGHT_FRONT
=
{
x
:
width
/
2
y
:
0
z
:
-
length
/
2
w
:
1
}
;
const
TOP_LEFT_FRONT
=
{
x
:
-
width
/
2
y
:
height
z
:
-
length
/
2
w
:
1
}
;
const
TOP_RIGHT_FRONT
=
{
x
:
width
/
2
y
:
height
z
:
-
length
/
2
w
:
1
}
;
const
BOTTOM_LEFT_BACK
=
{
x
:
-
width
/
2
y
:
0
z
:
length
/
2
w
:
1
}
;
const
BOTTOM_RIGHT_BACK
=
{
x
:
width
/
2
y
:
0
z
:
length
/
2
w
:
1
}
;
const
TOP_LEFT_BACK
=
{
x
:
-
width
/
2
y
:
height
z
:
length
/
2
w
:
1
}
;
const
TOP_RIGHT_BACK
=
{
x
:
width
/
2
y
:
height
z
:
length
/
2
w
:
1
}
;
const
FRONT_WALL_AND_FLOOR_FACES
=
[
{
vertices
:
[
BOTTOM_LEFT_FRONT
BOTTOM_RIGHT_FRONT
TOP_RIGHT_FRONT
]
}
{
vertices
:
[
BOTTOM_LEFT_FRONT
TOP_RIGHT_FRONT
TOP_LEFT_FRONT
]
}
{
vertices
:
[
BOTTOM_LEFT_FRONT
BOTTOM_RIGHT_FRONT
BOTTOM_RIGHT_BACK
]
}
{
vertices
:
[
BOTTOM_LEFT_FRONT
BOTTOM_LEFT_BACK
BOTTOM_RIGHT_BACK
]
}
]
;
const
CEILING_FACES
=
[
{
vertices
:
[
TOP_LEFT_FRONT
TOP_RIGHT_FRONT
TOP_RIGHT_BACK
]
}
{
vertices
:
[
TOP_LEFT_FRONT
TOP_LEFT_BACK
TOP_RIGHT_BACK
]
}
]
;
const
SIDE_WALLS_FACES
=
[
{
vertices
:
[
BOTTOM_LEFT_FRONT
TOP_LEFT_FRONT
TOP_LEFT_BACK
]
}
{
vertices
:
[
BOTTOM_LEFT_FRONT
BOTTOM_LEFT_BACK
TOP_LEFT_BACK
]
}
{
vertices
:
[
BOTTOM_RIGHT_FRONT
TOP_RIGHT_FRONT
TOP_RIGHT_BACK
]
}
{
vertices
:
[
BOTTOM_RIGHT_FRONT
BOTTOM_RIGHT_BACK
TOP_RIGHT_BACK
]
}
]
;
const
FRONT_WALL_AND_FLOOR_REGION
=
{
type
:
front_wall_and_floor_type
faces
:
FRONT_WALL_AND_FLOOR_FACES
}
;
const
SIDE_WALLS_REGION
=
{
type
:
side_walls_type
faces
:
SIDE_WALLS_FACES
}
;
const
CEILING_REGION
=
{
type
:
ceiling_type
faces
:
CEILING_FACES
}
;
return
{
hitTestRegions
:
[
FRONT_WALL_AND_FLOOR_REGION
SIDE_WALLS_REGION
CEILING_REGION
]
}
;
}
const
VALID_FAKE_WORLD
=
createFakeWorld
(
5
.
0
2
.
0
5
.
0
)
;
