function
test_all_templates
(
)
{
let
templates
=
document
.
querySelectorAll
(
'
template
'
)
;
for
(
let
template
of
templates
)
{
test
(
(
t
)
=
>
{
t
.
add_cleanup
(
(
)
=
>
main
.
replaceChildren
(
)
)
;
main
.
append
(
template
.
content
.
cloneNode
(
true
)
)
;
let
cs
=
getComputedStyle
(
target
)
;
let
actual
=
cs
.
getPropertyValue
(
'
-
-
actual
'
)
;
let
expected
=
cs
.
getPropertyValue
(
'
-
-
expected
'
)
;
assert_equals
(
actual
expected
)
;
}
template
.
getAttribute
(
'
data
-
name
'
)
)
;
}
}
function
find_target
(
elements
)
{
for
(
let
e
of
(
elements
?
?
[
]
)
)
{
let
t
=
e
.
id
=
=
'
target
'
?
e
:
null
;
t
?
?
=
find_target
(
e
.
children
)
;
t
?
?
=
find_target
(
e
.
shadowRoot
?
.
children
)
;
if
(
t
)
{
return
t
;
}
}
return
null
;
}
function
test_all_shadows
(
)
{
let
hosts
=
document
.
querySelectorAll
(
'
div
[
data
-
name
]
'
)
;
for
(
let
host
of
hosts
)
{
test
(
(
t
)
=
>
{
let
target
=
find_target
(
[
host
]
)
;
assert_true
(
target
!
=
null
)
;
let
cs
=
getComputedStyle
(
target
)
;
let
actual
=
cs
.
getPropertyValue
(
'
-
-
actual
'
)
;
let
expected
=
cs
.
getPropertyValue
(
'
-
-
expected
'
)
;
assert_equals
(
actual
expected
)
;
}
host
.
getAttribute
(
'
data
-
name
'
)
)
;
}
}
