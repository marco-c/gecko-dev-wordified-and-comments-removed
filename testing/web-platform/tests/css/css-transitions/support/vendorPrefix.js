(
function
(
root
)
{
'
use
strict
'
;
var
prefixCache
=
{
}
;
function
camelCase
(
str
)
{
return
str
.
replace
(
/
\
-
(
\
w
)
/
g
function
(
match
letter
)
{
return
letter
.
toUpperCase
(
)
;
}
)
;
}
root
.
addVendorPrefix
=
function
(
name
)
{
var
prefix
=
getVendorPrefix
(
name
)
;
if
(
prefix
=
=
=
false
)
{
return
name
;
}
return
prefix
+
name
;
}
;
root
.
addValueVendorPrefix
=
function
(
property
value
)
{
var
prefix
=
getValueVendorPrefix
(
property
value
)
;
if
(
prefix
=
=
=
false
)
{
return
name
;
}
return
prefix
+
value
;
}
;
root
.
getVendorPrefix
=
function
(
name
)
{
if
(
prefixCache
[
name
]
!
=
=
undefined
)
{
return
prefixCache
[
name
]
;
}
var
elem
=
document
.
createElement
(
"
div
"
)
;
name
=
camelCase
(
name
)
;
if
(
name
in
elem
.
style
)
{
return
prefixCache
[
name
]
=
"
"
;
}
var
prefixes
=
[
"
Webkit
"
"
Moz
"
"
O
"
"
ms
"
]
;
var
styles
=
[
"
-
webkit
-
"
"
-
moz
-
"
"
-
o
-
"
"
-
ms
-
"
]
;
var
_name
=
name
.
substring
(
0
1
)
.
toUpperCase
(
)
+
name
.
substring
(
1
)
;
for
(
var
i
=
0
length
=
prefixes
.
length
;
i
<
length
;
i
+
+
)
{
if
(
prefixes
[
i
]
+
_name
in
elem
.
style
)
{
return
prefixCache
[
name
]
=
styles
[
i
]
;
}
}
return
prefixCache
[
name
]
=
name
in
elem
.
style
?
"
"
:
false
;
}
;
root
.
getValueVendorPrefix
=
function
(
property
value
)
{
var
elem
=
document
.
createElement
(
"
div
"
)
;
document
.
body
.
appendChild
(
elem
)
;
var
styles
=
[
"
-
webkit
-
"
"
-
moz
-
"
"
-
o
-
"
"
-
ms
-
"
"
"
]
;
var
_property
=
getVendorPrefix
(
property
)
+
property
;
for
(
var
i
=
0
length
=
styles
.
length
;
i
<
length
;
i
+
+
)
{
var
_value
=
styles
[
i
]
+
value
;
elem
.
setAttribute
(
'
style
'
_property
+
"
:
"
+
_value
)
;
var
_computed
=
computedStyle
(
elem
_property
)
;
if
(
_computed
&
&
_computed
!
=
=
'
none
'
)
{
document
.
body
.
removeChild
(
elem
)
;
return
styles
[
i
]
;
}
}
document
.
body
.
removeChild
(
elem
)
;
return
false
;
}
;
}
)
(
window
)
;
