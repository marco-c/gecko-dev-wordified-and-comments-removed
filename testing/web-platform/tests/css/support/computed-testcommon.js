'
use
strict
'
;
function
test_computed_value
(
property
specified
computed
)
{
if
(
!
computed
)
computed
=
specified
;
let
computedDesc
=
"
'
"
+
computed
+
"
'
"
;
if
(
Array
.
isArray
(
computed
)
)
computedDesc
=
'
[
'
+
computed
.
map
(
e
=
>
"
'
"
+
e
+
"
'
"
)
.
join
(
'
or
'
)
+
'
]
'
;
test
(
(
)
=
>
{
const
target
=
document
.
getElementById
(
'
target
'
)
;
assert_true
(
property
in
getComputedStyle
(
target
)
property
+
"
doesn
'
t
seem
to
be
supported
in
the
computed
style
"
)
;
assert_true
(
CSS
.
supports
(
property
specified
)
"
'
"
+
specified
+
"
'
is
a
supported
value
for
"
+
property
+
"
.
"
)
;
target
.
style
[
property
]
=
'
'
;
target
.
style
[
property
]
=
specified
;
let
readValue
=
getComputedStyle
(
target
)
[
property
]
;
if
(
Array
.
isArray
(
computed
)
)
{
assert_in_array
(
readValue
computed
)
;
}
else
{
assert_equals
(
readValue
computed
)
;
}
if
(
readValue
!
=
=
specified
)
{
target
.
style
[
property
]
=
'
'
;
target
.
style
[
property
]
=
readValue
;
assert_equals
(
getComputedStyle
(
target
)
[
property
]
readValue
'
computed
value
should
round
-
trip
'
)
;
}
}
"
Property
"
+
property
+
"
value
'
"
+
specified
+
"
'
computes
to
"
+
computedDesc
)
;
}
