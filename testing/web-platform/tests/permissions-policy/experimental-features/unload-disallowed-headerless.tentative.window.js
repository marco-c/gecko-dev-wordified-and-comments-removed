'
use
strict
'
;
promise_test
(
async
t
=
>
{
const
rcHelper
=
new
RemoteContextHelper
(
{
scripts
:
[
'
.
/
resources
/
unload
-
helper
.
js
'
]
}
)
;
const
main
=
await
rcHelper
.
addWindow
(
{
headers
:
[
[
'
Permissions
-
Policy
'
'
unload
=
(
)
'
]
]
}
)
;
const
url
=
new
URL
(
location
)
;
const
urlType
=
url
.
searchParams
.
get
(
'
urlType
'
)
;
if
(
urlType
=
=
'
srcdoc
'
)
{
const
subframe
=
await
main
.
addIframeSrcdoc
(
{
}
{
allow
:
'
unload
'
}
)
;
await
assertWindowRunsUnload
(
subframe
'
subframe
'
{
shouldRunUnload
:
false
}
)
;
}
else
{
const
subframe
=
await
main
.
addIframe
(
{
urlType
:
urlType
}
{
allow
:
'
unload
'
}
)
;
await
assertWindowAllowsUnload
(
subframe
'
subframe
'
{
shouldRunUnload
:
false
}
)
;
}
await
assertWindowRunsUnload
(
main
'
main
'
{
shouldRunUnload
:
false
}
)
;
}
)
;
