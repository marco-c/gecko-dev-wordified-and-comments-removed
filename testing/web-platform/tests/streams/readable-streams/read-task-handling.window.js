'
use
strict
'
;
function
performMicrotaskCheckpoint
(
)
{
document
.
createNodeIterator
(
document
-
1
{
acceptNode
(
)
{
return
NodeFilter
.
FILTER_ACCEPT
;
}
}
)
.
nextNode
(
)
;
}
test
(
(
)
=
>
{
Object
.
prototype
.
__defineGetter__
(
'
then
'
(
)
=
>
{
delete
Object
.
prototype
.
then
;
var
executed
=
false
;
Promise
.
resolve
(
)
.
then
(
_
=
>
{
executed
=
true
;
}
)
;
performMicrotaskCheckpoint
(
)
;
assert_false
(
executed
"
shouldn
'
t
have
run
microtasks
yet
"
)
;
return
undefined
;
}
)
;
const
readable
=
new
ReadableStream
(
{
pull
(
c
)
{
c
.
enqueue
(
{
}
)
;
}
}
{
highWaterMark
:
0
}
)
;
readable
.
getReader
(
)
.
read
(
)
;
}
"
reading
from
a
stream
should
occur
in
a
microtask
scope
"
)
;
