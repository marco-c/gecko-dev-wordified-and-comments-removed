function
init
(
e
method
)
{
var
docType
=
"
html
"
;
var
doc
=
e
.
target
.
contentDocument
;
var
element
=
doc
.
getElementById
(
"
root
"
)
;
setupSpecialElements
(
doc
element
)
;
var
outOfScope
=
element
.
cloneNode
(
true
)
;
traverse
(
outOfScope
function
(
elem
)
{
elem
.
setAttribute
(
"
data
-
clone
"
"
"
)
;
}
)
;
var
detached
=
element
.
cloneNode
(
true
)
;
var
fragment
=
doc
.
createDocumentFragment
(
)
;
fragment
.
appendChild
(
element
.
cloneNode
(
true
)
)
;
interfaceCheckMatches
(
method
"
Document
"
doc
)
;
interfaceCheckMatches
(
method
"
Detached
Element
"
detached
)
;
interfaceCheckMatches
(
method
"
Fragment
"
fragment
)
;
interfaceCheckMatches
(
method
"
In
-
document
Element
"
element
)
;
runSpecialMatchesTests
(
method
"
DIV
Element
"
element
)
;
runSpecialMatchesTests
(
method
"
NULL
Element
"
document
.
createElement
(
"
null
"
)
)
;
runSpecialMatchesTests
(
method
"
UNDEFINED
Element
"
document
.
createElement
(
"
undefined
"
)
)
;
runInvalidSelectorTestMatches
(
method
"
Document
"
doc
invalidSelectors
)
;
runInvalidSelectorTestMatches
(
method
"
Detached
Element
"
detached
invalidSelectors
)
;
runInvalidSelectorTestMatches
(
method
"
Fragment
"
fragment
invalidSelectors
)
;
runInvalidSelectorTestMatches
(
method
"
In
-
document
Element
"
element
invalidSelectors
)
;
runMatchesTest
(
method
"
In
-
document
"
doc
validSelectors
"
html
"
)
;
runMatchesTest
(
method
"
Detached
"
detached
validSelectors
"
html
"
)
;
runMatchesTest
(
method
"
Fragment
"
fragment
validSelectors
"
html
"
)
;
runMatchesTest
(
method
"
In
-
document
"
doc
scopedSelectors
"
html
"
)
;
}
