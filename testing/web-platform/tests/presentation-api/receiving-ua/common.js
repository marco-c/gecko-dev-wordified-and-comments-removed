(
window
=
>
{
window
.
stashIds
=
{
toController
:
'
0c382524
-
5738
-
4df0
-
837d
-
4f53ea8addc2
'
toReceiver
:
'
a9618cd1
-
ca2b
-
4155
-
b7f6
-
630dce953c44
'
}
const
parseValue
=
value
=
>
{
let
r
;
if
(
r
=
value
.
match
(
/
^
(
\
(
string
\
)
\
s
+
)
?
"
(
.
*
)
"
/
)
)
return
r
[
2
]
;
else
if
(
r
=
value
.
match
(
/
^
(
\
(
object
\
)
\
s
+
)
?
object
\
s
+
"
\
[
object
\
s
+
(
.
*
)
\
]
"
/
)
)
return
window
[
r
[
2
]
]
.
prototype
;
else
{
if
(
r
=
value
.
match
(
/
^
(
\
(
\
S
+
\
)
\
s
+
)
?
(
\
S
+
)
/
)
)
{
try
{
return
JSON
.
parse
(
r
[
2
]
)
;
}
catch
(
e
)
{
return
value
;
}
}
else
return
value
;
}
}
;
window
.
parseResult
=
message
=
>
{
let
r
=
message
.
match
(
/
^
(
assert_
.
*
)
:
\
s
+
(
.
*
)
/
)
;
if
(
r
)
{
const
assertion
=
r
[
1
]
;
const
body
=
r
[
2
]
;
let
args
;
switch
(
assertion
)
{
case
'
assert_equals
'
:
if
(
r
=
body
.
match
(
/
^
(
(
.
*
)
\
s
+
)
?
expected
\
s
+
(
(
\
(
\
S
*
\
)
\
s
+
)
?
(
\
S
+
|
(
\
S
+
\
s
+
)
?
\
"
.
*
\
"
)
)
\
s
+
but
\
s
+
got
\
s
+
(
(
\
(
\
S
*
\
)
\
s
+
)
?
(
\
S
+
|
(
\
S
+
\
s
+
)
?
\
"
.
*
\
"
)
)
/
)
)
args
=
[
parseValue
(
r
[
7
]
)
parseValue
(
r
[
3
]
)
r
[
2
]
]
;
break
;
case
'
assert_true
'
:
if
(
r
=
body
.
match
(
/
^
(
(
.
*
)
\
s
+
)
?
expected
\
s
+
(
true
|
false
)
\
s
+
got
\
s
+
(
\
S
+
|
(
\
S
+
\
s
+
)
?
\
"
.
*
\
"
)
/
)
)
args
=
[
parseValue
(
r
[
4
]
)
r
[
2
]
]
;
break
;
case
'
assert_unreached
'
:
if
(
r
=
body
.
match
(
/
^
(
(
.
*
)
\
s
+
)
?
Reached
\
s
+
unreachable
\
s
+
code
/
)
)
args
=
[
r
[
2
]
]
;
break
;
}
if
(
args
)
{
window
[
assertion
]
(
args
[
0
]
args
[
1
]
args
[
2
]
)
;
return
;
}
}
assert_unreached
(
'
Test
result
received
from
a
receiving
user
agent
:
'
+
message
+
'
:
'
)
;
}
;
}
)
(
window
)
;
