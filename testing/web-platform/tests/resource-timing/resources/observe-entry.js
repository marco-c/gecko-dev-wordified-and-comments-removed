const
observe_entry
=
entry_name
=
>
{
const
entry
=
new
Promise
(
resolve
=
>
{
new
PerformanceObserver
(
(
entry_list
observer
)
=
>
{
for
(
const
entry
of
entry_list
.
getEntries
(
)
)
{
if
(
entry
.
name
.
endsWith
(
entry_name
)
)
{
resolve
(
entry
)
;
observer
.
disconnect
(
)
;
return
;
}
}
}
)
.
observe
(
{
"
type
"
:
"
resource
"
"
buffered
"
:
true
}
)
;
}
)
;
const
timeout
=
new
Promise
(
(
resolve
reject
)
=
>
{
step_timeout
(
(
)
=
>
{
reject
(
new
Error
(
"
observe_entry
:
timeout
"
)
)
;
}
2000
)
;
}
)
;
return
Promise
.
race
(
[
entry
timeout
]
)
;
}
;
