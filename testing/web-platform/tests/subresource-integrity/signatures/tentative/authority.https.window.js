const
kAuthority
=
(
new
URL
(
window
.
location
.
href
)
)
.
host
;
const
kRequestsWithValidSignature
=
[
{
body
:
"
window
.
hello
=
world
;
"
digest
:
"
sha
-
256
=
:
PZJ
+
9CdAAIacg7wfUe4t
/
RkDQJVKM0mCZ2K7qiRhHFc
=
:
"
signatureInput
:
signature
=
(
"
unencoded
-
digest
"
;
sf
"
authority
"
;
req
)
;
keyid
=
"
{
kValidKeys
[
'
rfc
'
]
}
"
;
tag
=
"
sri
"
signatureBase
:
"
unencoded
-
digest
"
;
sf
:
sha
-
256
=
:
PZJ
+
9CdAAIacg7wfUe4t
/
RkDQJVKM0mCZ2K7qiRhHFc
=
:
"
authority
"
;
req
:
{
kAuthority
}
"
signature
-
params
"
:
(
"
unencoded
-
digest
"
;
sf
"
authority
"
;
req
)
;
keyid
=
"
JrQLj5P
/
89iXES9
+
vFgrIy29clF9CC
/
oPPsw3c5D0bs
=
"
;
tag
=
"
sri
"
}
{
body
:
"
window
.
hello
=
world
;
"
digest
:
"
sha
-
256
=
:
PZJ
+
9CdAAIacg7wfUe4t
/
RkDQJVKM0mCZ2K7qiRhHFc
=
:
"
signatureInput
:
signature
=
(
"
authority
"
;
req
"
unencoded
-
digest
"
;
sf
)
;
keyid
=
"
{
kValidKeys
[
'
rfc
'
]
}
"
;
tag
=
"
sri
"
signatureBase
:
"
authority
"
;
req
:
{
kAuthority
}
"
unencoded
-
digest
"
;
sf
:
sha
-
256
=
:
PZJ
+
9CdAAIacg7wfUe4t
/
RkDQJVKM0mCZ2K7qiRhHFc
=
:
"
signature
-
params
"
:
(
"
authority
"
;
req
"
unencoded
-
digest
"
;
sf
)
;
keyid
=
"
JrQLj5P
/
89iXES9
+
vFgrIy29clF9CC
/
oPPsw3c5D0bs
=
"
;
tag
=
"
sri
"
}
]
;
for
(
const
constRequest
of
kRequestsWithValidSignature
)
{
signSignatureBase
(
constRequest
.
signatureBase
kValidKeysJWK
[
'
rfc
'
]
)
.
then
(
plainSignature
=
>
{
let
request
=
{
.
.
.
constRequest
signature
:
signature
=
:
+
plainSignature
+
:
}
;
generate_fetch_test
(
request
{
}
EXPECT_LOADED
Valid
signature
(
{
request
.
signature
}
)
no
integrity
check
:
loads
.
)
;
generate_fetch_test
(
request
{
integrity
:
ed25519
-
{
kValidKeys
[
'
rfc
'
]
}
}
EXPECT_LOADED
Valid
signature
(
{
request
.
signature
}
)
matching
integrity
check
:
loads
.
)
;
generate_fetch_test
(
request
{
integrity
:
ed25519
-
{
kInvalidKey
}
}
EXPECT_BLOCKED
Valid
signature
(
{
request
.
signature
}
)
mismatched
integrity
check
:
blocked
.
)
;
generate_script_test
(
request
"
"
EXPECT_LOADED
Valid
signature
(
{
request
.
signature
}
)
no
integrity
check
:
loads
with
live
signature
.
)
;
generate_script_test
(
request
ed25519
-
{
kValidKeys
[
'
rfc
'
]
}
EXPECT_LOADED
Valid
signature
(
{
request
.
signature
}
)
matching
integrity
check
:
loads
with
live
signature
.
)
;
generate_script_test
(
request
ed25519
-
{
kInvalidKey
}
EXPECT_BLOCKED
Valid
signature
(
{
request
.
signature
}
)
mismatched
integrity
check
:
blocked
.
)
;
}
)
;
}
