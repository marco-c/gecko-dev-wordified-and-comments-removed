function
detachBuffer
(
buffer
)
{
const
channel
=
new
MessageChannel
(
)
;
channel
.
port1
.
postMessage
(
'
'
[
buffer
]
)
;
}
serial_test
(
async
(
t
fake
)
=
>
{
const
{
port
fakePort
}
=
await
getFakeSerialPort
(
fake
)
;
await
port
.
open
(
{
baudRate
:
9600
bufferSize
:
64
}
)
;
const
writer
=
port
.
writable
.
getWriter
(
)
;
const
data
=
new
Uint8Array
(
64
)
;
detachBuffer
(
data
.
buffer
)
;
await
writer
.
write
(
data
)
;
writer
.
releaseLock
(
)
;
await
port
.
close
(
)
;
}
'
Writing
a
detached
buffer
is
safe
'
)
;
serial_test
(
async
(
t
fake
)
=
>
{
const
{
port
fakePort
}
=
await
getFakeSerialPort
(
fake
)
;
await
port
.
open
(
{
baudRate
:
9600
bufferSize
:
64
}
)
;
const
writer
=
port
.
writable
.
getWriter
(
)
;
const
data
=
new
Uint8Array
(
1024
)
;
const
promise
=
writer
.
write
(
data
)
;
writer
.
releaseLock
(
)
;
await
fakePort
.
readable
(
)
;
await
fakePort
.
readWithLength
(
data
.
byteLength
/
2
)
;
detachBuffer
(
data
.
buffer
)
;
await
promise
;
await
port
.
close
(
)
;
}
'
Detaching
a
buffer
while
writing
is
safe
'
)
;
