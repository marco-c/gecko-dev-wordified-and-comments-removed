function
compareArrays
(
actual
expected
)
{
assert_true
(
actual
instanceof
Uint8Array
'
actual
is
Uint8Array
'
)
;
assert_true
(
expected
instanceof
Uint8Array
'
expected
is
Uint8Array
'
)
;
assert_equals
(
actual
.
byteLength
expected
.
byteLength
'
lengths
equal
'
)
;
for
(
let
i
=
0
;
i
<
expected
.
byteLength
;
+
+
i
)
assert_equals
(
actual
[
i
]
expected
[
i
]
Mismatch
at
position
{
i
}
.
)
;
}
async
function
readWithLength
(
reader
targetLength
)
{
const
chunks
=
[
]
;
let
actualLength
=
0
;
while
(
true
)
{
let
{
value
done
}
=
await
reader
.
read
(
)
;
chunks
.
push
(
value
)
;
actualLength
+
=
value
.
byteLength
;
if
(
actualLength
>
=
targetLength
|
|
done
)
{
const
buffer
=
new
Uint8Array
(
actualLength
)
;
chunks
.
reduce
(
(
offset
chunk
)
=
>
{
buffer
.
set
(
chunk
offset
)
;
return
offset
+
chunk
.
byteLength
;
}
0
)
;
return
buffer
;
}
}
}
