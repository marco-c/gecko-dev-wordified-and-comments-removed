'
use
strict
'
;
promise_test
(
async
t
=
>
{
const
uuid
=
token
(
)
;
const
url
=
generateSetBeaconCountURL
(
uuid
)
;
const
beacon
=
new
PendingGetBeacon
(
url
)
;
beacon
.
sendNow
(
)
;
await
expectBeaconCount
(
uuid
1
)
;
}
'
sendNow
(
)
sends
a
beacon
immediately
.
'
)
;
promise_test
(
async
t
=
>
{
const
uuid
=
token
(
)
;
const
url
=
generateSetBeaconCountURL
(
uuid
)
;
const
beacon
=
new
PendingGetBeacon
(
url
)
;
beacon
.
sendNow
(
)
;
await
expectBeaconCount
(
uuid
1
)
;
beacon
.
sendNow
(
)
;
await
expectBeaconCount
(
uuid
1
)
;
}
'
sendNow
(
)
doesn
\
'
t
send
the
same
beacon
twice
.
'
)
;
promise_test
(
async
t
=
>
{
const
uuid
=
token
(
)
;
const
url
=
generateSetBeaconCountURL
(
uuid
)
;
const
beacon1
=
new
PendingGetBeacon
(
url
)
;
beacon1
.
sendNow
(
)
;
const
beacon2
=
new
PendingGetBeacon
(
url
)
;
beacon2
.
sendNow
(
)
;
await
expectBeaconCount
(
uuid
2
)
;
}
'
sendNow
(
)
sends
multiple
beacons
.
'
)
;
