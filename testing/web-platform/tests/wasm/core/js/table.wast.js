(
function
table_wast_js
(
)
{
let
1
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x84
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x00
\
x00
"
)
;
let
2
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x84
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x00
\
x01
"
)
;
let
3
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x85
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x01
\
x00
\
x00
"
)
;
let
4
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x85
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x01
\
x00
\
x01
"
)
;
let
5
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x86
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x01
\
x01
\
x80
\
x02
"
)
;
let
6
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x87
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x01
\
x00
\
x80
\
x80
\
x04
"
)
;
let
7
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x89
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x01
\
x00
\
xff
\
xff
\
xff
\
xff
\
x0f
"
)
;
let
8
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x87
\
x80
\
x80
\
x80
\
x00
\
x02
\
x70
\
x00
\
x00
\
x70
\
x00
\
x00
"
)
;
let
9
=
instance
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x02
\
x94
\
x80
\
x80
\
x80
\
x00
\
x01
\
x08
\
x73
\
x70
\
x65
\
x63
\
x74
\
x65
\
x73
\
x74
\
x05
\
x74
\
x61
\
x62
\
x6c
\
x65
\
x01
\
x70
\
x00
\
x00
\
x04
\
x84
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x00
\
x00
"
)
;
assert_invalid
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x09
\
x86
\
x80
\
x80
\
x80
\
x00
\
x01
\
x00
\
x41
\
x00
\
x0b
\
x00
"
)
;
assert_invalid
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x01
\
x84
\
x80
\
x80
\
x80
\
x00
\
x01
\
x60
\
x00
\
x00
\
x03
\
x82
\
x80
\
x80
\
x80
\
x00
\
x01
\
x00
\
x09
\
x87
\
x80
\
x80
\
x80
\
x00
\
x01
\
x00
\
x41
\
x00
\
x0b
\
x01
\
x00
\
x0a
\
x88
\
x80
\
x80
\
x80
\
x00
\
x01
\
x82
\
x80
\
x80
\
x80
\
x00
\
x00
\
x0b
"
)
;
assert_invalid
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x85
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x01
\
x01
\
x00
"
)
;
assert_invalid
(
"
\
x00
\
x61
\
x73
\
x6d
\
x01
\
x00
\
x00
\
x00
\
x04
\
x89
\
x80
\
x80
\
x80
\
x00
\
x01
\
x70
\
x01
\
xff
\
xff
\
xff
\
xff
\
x0f
\
x00
"
)
;
assert_malformed
(
"
\
x3c
\
x6d
\
x61
\
x6c
\
x66
\
x6f
\
x72
\
x6d
\
x65
\
x64
\
x20
\
x71
\
x75
\
x6f
\
x74
\
x65
\
x3e
"
)
;
assert_malformed
(
"
\
x3c
\
x6d
\
x61
\
x6c
\
x66
\
x6f
\
x72
\
x6d
\
x65
\
x64
\
x20
\
x71
\
x75
\
x6f
\
x74
\
x65
\
x3e
"
)
;
assert_malformed
(
"
\
x3c
\
x6d
\
x61
\
x6c
\
x66
\
x6f
\
x72
\
x6d
\
x65
\
x64
\
x20
\
x71
\
x75
\
x6f
\
x74
\
x65
\
x3e
"
)
;
assert_malformed
(
"
\
x3c
\
x6d
\
x61
\
x6c
\
x66
\
x6f
\
x72
\
x6d
\
x65
\
x64
\
x20
\
x71
\
x75
\
x6f
\
x74
\
x65
\
x3e
"
)
;
assert_malformed
(
"
\
x3c
\
x6d
\
x61
\
x6c
\
x66
\
x6f
\
x72
\
x6d
\
x65
\
x64
\
x20
\
x71
\
x75
\
x6f
\
x74
\
x65
\
x3e
"
)
;
assert_malformed
(
"
\
x3c
\
x6d
\
x61
\
x6c
\
x66
\
x6f
\
x72
\
x6d
\
x65
\
x64
\
x20
\
x71
\
x75
\
x6f
\
x74
\
x65
\
x3e
"
)
;
reinitializeRegistry
(
)
;
}
)
(
)
;
