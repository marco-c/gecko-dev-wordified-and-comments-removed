[
"
compileStreaming
"
"
instantiateStreaming
"
]
.
forEach
(
method
=
>
{
promise_test
(
async
t
=
>
{
const
buffer
=
new
WasmModuleBuilder
(
)
.
toBuffer
(
)
;
const
argument
=
new
Response
(
buffer
{
headers
:
{
"
Content
-
Type
"
:
"
test
/
test
"
}
}
)
;
argument
.
headers
.
set
(
"
Content
-
Type
"
"
application
/
wasm
"
)
;
await
WebAssembly
[
method
]
(
argument
)
;
return
promise_rejects_js
(
t
TypeError
argument
.
blob
(
)
)
;
}
{
method
}
with
Content
-
Type
set
late
)
;
promise_test
(
async
t
=
>
{
const
buffer
=
new
WasmModuleBuilder
(
)
.
toBuffer
(
)
;
const
argument
=
new
Response
(
buffer
{
headers
:
{
"
Content
-
Type
"
:
"
application
/
wasm
"
}
}
)
;
argument
.
headers
.
delete
(
"
Content
-
Type
"
)
;
await
promise_rejects_js
(
t
TypeError
WebAssembly
[
method
]
(
argument
)
)
;
await
argument
.
arrayBuffer
(
)
;
}
{
method
}
with
Content
-
Type
removed
late
)
;
}
)
;
