'
use
strict
'
;
function
indexOfEmptyEntry
(
result
)
{
return
result
.
breakdown
.
findIndex
(
isEmptyBreakdownEntry
)
;
}
promise_test
(
async
testCase
=
>
{
assert_true
(
self
.
crossOriginIsolated
)
;
const
initial
=
await
performance
.
measureUserAgentSpecificMemory
(
)
;
let
observed_different_order
=
false
;
for
(
let
i
=
0
;
i
<
100
;
+
+
i
)
{
const
current
=
await
performance
.
measureUserAgentSpecificMemory
(
)
;
if
(
indexOfEmptyEntry
(
initial
)
!
=
indexOfEmptyEntry
(
current
)
)
{
observed_different_order
=
true
;
}
}
assert_true
(
observed_different_order
)
;
}
'
Well
-
formed
result
of
performance
.
measureUserAgentSpecificMemory
.
'
)
;
