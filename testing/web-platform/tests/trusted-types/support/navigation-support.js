function
navigateToJavascriptURL
(
reportOnly
)
{
const
params
=
new
URLSearchParams
(
location
.
search
)
;
if
(
!
!
params
.
get
(
"
defaultpolicy
"
)
)
{
trustedTypes
.
createPolicy
(
"
default
"
{
createScript
:
s
=
>
{
return
s
.
replace
(
"
continue
"
"
defaultpolicywashere
"
)
}
}
)
;
}
function
bounceEventToOpener
(
e
)
{
const
msg
=
{
}
;
for
(
const
field
of
[
"
effectiveDirective
"
"
sample
"
"
type
"
]
)
{
msg
[
field
]
=
e
[
field
]
;
}
msg
[
"
uri
"
]
=
location
.
href
;
window
.
opener
.
postMessage
(
msg
"
*
"
)
;
}
document
.
addEventListener
(
"
DOMContentLoaded
"
bounceEventToOpener
)
;
document
.
addEventListener
(
"
securitypolicyviolation
"
bounceEventToOpener
)
;
if
(
params
.
has
(
"
navigationattempted
"
)
)
{
return
;
}
let
url
=
new
URL
(
reportOnly
?
location
.
href
.
replace
(
"
-
report
-
only
"
"
"
)
:
location
.
href
)
;
url
.
searchParams
.
set
(
"
navigationattempted
"
1
)
;
url
.
searchParams
.
set
(
"
continue
"
1
)
;
let
target_script
=
location
.
href
=
'
{
url
.
toString
(
)
}
'
;
;
function
getAndPreparareNavigationElement
(
javaScriptURL
)
{
let
target
=
"
_self
"
;
if
(
!
!
params
.
get
(
"
frame
"
)
)
{
const
frame
=
document
.
createElement
(
"
iframe
"
)
;
frame
.
src
=
"
frame
-
without
-
trusted
-
types
.
html
"
;
frames
.
name
=
"
frame
"
;
document
.
body
.
appendChild
(
frame
)
;
target
=
"
frame
"
;
}
if
(
!
!
params
.
get
(
"
form
-
submission
"
)
)
{
const
submit
=
document
.
getElementById
(
"
submit
"
)
;
submit
.
formAction
=
javaScriptURL
;
submit
.
formTarget
=
target
;
return
submit
;
}
const
anchor
=
document
.
getElementById
(
"
anchor
"
)
;
anchor
.
href
=
javaScriptURL
;
anchor
.
target
=
target
;
return
anchor
;
}
const
navigationElement
=
getAndPreparareNavigationElement
(
javascript
:
{
target_script
}
)
;
document
.
addEventListener
(
"
DOMContentLoaded
"
_
=
>
navigationElement
.
click
(
)
)
;
}
