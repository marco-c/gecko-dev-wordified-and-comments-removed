function
passPlainStringToTrustedTypeSink
(
)
{
return
trusted_type_violation_for
(
TypeError
_
=
>
setTimeout
(
"
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
"
)
)
;
}
promise_test
(
async
(
)
=
>
{
let
violation
=
await
passPlainStringToTrustedTypeSink
(
)
;
let
baseURL
=
(
new
URL
(
location
.
href
)
)
.
origin
;
let
sourceFile
=
new
URL
(
"
/
trusted
-
types
/
support
/
should
-
sink
-
type
-
mismatch
-
violation
-
be
-
blocked
-
by
-
csp
-
location
.
js
"
baseURL
)
.
toString
(
)
;
assert_equals
(
violation
.
sourceFile
sourceFile
"
source
file
"
)
;
assert_equals
(
violation
.
lineNumber
3
"
line
number
"
)
;
assert_greater_than_equal
(
violation
.
columnNumber
5
"
column
number
"
)
;
}
Location
of
required
-
trusted
-
types
-
for
violations
.
)
;
