document
.
title
=
'
%
(
title
)
s
'
;
window
.
addEventListener
(
"
message
"
function
(
event
)
{
window
.
message_queue
.
push
(
event
)
;
window
.
process_next_event
(
)
;
}
false
)
;
window
.
process_next_event
=
function
(
)
{
if
(
!
window
.
testdriver_callback
)
{
return
;
}
var
event
=
window
.
message_queue
.
shift
(
)
;
if
(
!
event
)
{
return
;
}
var
data
=
event
.
data
;
var
payload
=
undefined
;
switch
(
data
.
type
)
{
case
"
complete
"
:
var
tests
=
event
.
data
.
tests
;
var
status
=
event
.
data
.
status
;
var
subtest_results
=
tests
.
map
(
function
(
x
)
{
return
[
x
.
name
x
.
status
x
.
message
x
.
stack
]
;
}
)
;
payload
=
[
status
.
status
status
.
message
status
.
stack
subtest_results
]
;
clearTimeout
(
window
.
timer
)
;
break
;
case
"
action
"
:
payload
=
data
;
break
;
default
:
return
;
}
var
callback
=
window
.
testdriver_callback
;
window
.
testdriver_callback
=
null
;
callback
(
[
window
.
url
data
.
type
payload
]
)
;
}
;
