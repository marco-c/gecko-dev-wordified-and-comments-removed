var
callback
=
arguments
[
arguments
.
length
-
1
]
;
var
observer
=
null
;
var
root
=
document
.
documentElement
;
function
wait_load
(
)
{
if
(
Document
.
prototype
.
hasOwnProperty
(
"
fonts
"
)
)
{
document
.
fonts
.
ready
.
then
(
wait_paints
)
;
}
else
{
wait_paints
(
)
;
}
}
function
wait_paints
(
)
{
requestAnimationFrame
(
function
(
)
{
requestAnimationFrame
(
function
(
)
{
screenshot_if_ready
(
)
;
}
)
;
}
)
;
}
function
screenshot_if_ready
(
)
{
if
(
root
.
classList
.
contains
(
"
reftest
-
wait
"
)
&
&
observer
=
=
=
null
)
{
observer
=
new
MutationObserver
(
wait_paints
)
;
observer
.
observe
(
root
{
attributes
:
true
}
)
;
var
event
=
new
Event
(
"
TestRendered
"
{
bubbles
:
true
}
)
;
root
.
dispatchEvent
(
event
)
;
return
;
}
if
(
observer
!
=
=
null
)
{
observer
.
disconnect
(
)
;
}
callback
(
)
;
}
if
(
document
.
readyState
!
=
"
complete
"
)
{
addEventListener
(
'
load
'
wait_load
)
;
}
else
{
wait_load
(
)
;
}
