(
function
(
)
{
var
props
=
{
output
:
%
(
output
)
d
debug
:
%
(
debug
)
s
}
;
setup
(
props
)
;
const
url
=
new
URL
(
location
.
href
)
;
testRunner
.
dumpAsText
(
)
;
testRunner
.
waitUntilDone
(
)
;
testRunner
.
setPopupBlockingEnabled
(
false
)
;
testRunner
.
setDumpJavaScriptDialogs
(
false
)
;
if
(
props
.
debug
)
{
testRunner
.
setDumpConsoleMessages
(
true
)
;
}
add_completion_callback
(
function
(
tests
harness_status
)
{
const
test_id
=
decodeURIComponent
(
url
.
pathname
)
+
decodeURIComponent
(
url
.
search
)
+
decodeURIComponent
(
url
.
hash
)
;
const
result_string
=
JSON
.
stringify
(
[
test_id
harness_status
.
status
harness_status
.
message
harness_status
.
stack
tests
.
map
(
function
(
t
)
{
return
[
t
.
name
t
.
status
t
.
message
t
.
stack
]
}
)
]
)
;
testRunner
.
setCustomTextOutput
(
result_string
)
;
testRunner
.
notifyDone
(
)
;
}
)
;
}
)
(
)
;
