import
pluggy
hookspec
=
pluggy
.
HookspecMarker
(
"
myproject
"
)
hookimpl
=
pluggy
.
HookimplMarker
(
"
myproject
"
)
class
MySpec
(
object
)
:
    
"
"
"
A
hook
specification
namespace
.
    
"
"
"
    
hookspec
    
def
myhook
(
self
arg1
arg2
)
:
        
"
"
"
My
special
little
hook
that
you
can
customize
.
        
"
"
"
class
Plugin_1
(
object
)
:
    
"
"
"
A
hook
implementation
namespace
.
    
"
"
"
    
hookimpl
    
def
myhook
(
self
arg1
arg2
)
:
        
print
(
"
inside
Plugin_1
.
myhook
(
)
"
)
        
return
arg1
+
arg2
class
Plugin_2
(
object
)
:
    
"
"
"
A
2nd
hook
implementation
namespace
.
    
"
"
"
    
hookimpl
    
def
myhook
(
self
arg1
arg2
)
:
        
print
(
"
inside
Plugin_2
.
myhook
(
)
"
)
        
return
arg1
-
arg2
pm
=
pluggy
.
PluginManager
(
"
myproject
"
)
pm
.
add_hookspecs
(
MySpec
)
pm
.
register
(
Plugin_1
(
)
)
pm
.
register
(
Plugin_2
(
)
)
results
=
pm
.
hook
.
myhook
(
arg1
=
1
arg2
=
2
)
print
(
results
)
