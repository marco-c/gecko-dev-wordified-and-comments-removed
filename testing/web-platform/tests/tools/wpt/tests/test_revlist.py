import
sys
import
mock
import
pytest
from
tools
.
wpt
import
revlist
def
test_calculate_cutoff_date
(
)
:
    
assert
revlist
.
calculate_cutoff_date
(
3601
3600
0
)
=
=
3600
    
assert
revlist
.
calculate_cutoff_date
(
3600
3600
0
)
=
=
3600
    
assert
revlist
.
calculate_cutoff_date
(
3599
3600
0
)
=
=
0
    
assert
revlist
.
calculate_cutoff_date
(
3600
3600
1
)
=
=
1
    
assert
revlist
.
calculate_cutoff_date
(
3600
3600
-
1
)
=
=
3599
pytest
.
mark
.
xfail
(
sys
.
version_info
>
=
(
3
)
reason
=
"
broken
on
Py3
"
)
def
test_parse_epoch
(
)
:
    
assert
revlist
.
parse_epoch
(
b
"
10h
"
)
=
=
36000
    
assert
revlist
.
parse_epoch
(
b
"
10d
"
)
=
=
864000
    
assert
revlist
.
parse_epoch
(
b
"
10w
"
)
=
=
6048000
def
check_revisions
(
tagged_revisions
expected_revisions
)
:
    
for
tagged
expected
in
zip
(
tagged_revisions
expected_revisions
)
:
        
assert
tagged
=
=
expected
mock
.
patch
(
'
subprocess
.
check_output
'
)
def
test_get_epoch_revisions
(
mocked_check_output
)
:
    
epoch
=
86400
    
until
=
1188000
    
mocked_check_output
.
return_value
=
b
'
'
'
merge_pr_O
O
1166400
_wed_
merge_pr_N
N
1080000
_tue_
merge_pr_M
M
1015200
_mon_
merge_pr_L
L
993600
_mon_
merge_pr_K
K
907200
_sun_
merge_pr_J
J
734400
_fri_
merge_pr_I
I
712800
_fri_
merge_pr_H
H
691200
_fri_
merge_pr_G
G
648000
_thu_
merge_pr_F
F
583200
_wed_
merge_pr_E
E
561600
_wed_
merge_pr_D
D
540000
_wed_
merge_pr_C
C
475200
_tue_
merge_pr_B
B
453600
_tue_
merge_pr_A
A
388800
_mon_
'
'
'
    
tagged_revisions
=
revlist
.
get_epoch_revisions
(
epoch
until
8
)
    
check_revisions
(
tagged_revisions
[
'
N
'
'
M
'
'
K
'
'
J
'
'
G
'
'
F
'
'
C
'
'
A
'
]
)
    
assert
len
(
list
(
tagged_revisions
)
)
=
=
0
    
epoch
=
86400
    
until
=
1015200
    
mocked_check_output
.
return_value
=
b
'
'
'
merge_pr_H
H
993600
_mon_
merge_pr_G
G
907200
_sun_
merge_pr_F
F
820800
_sat_
merge_pr_E
E
734400
_fri_
merge_pr_D
D
648000
_thu_
merge_pr_C
C
561600
_wed_
merge_pr_B
B
475200
_thu_
'
'
'
    
tagged_revisions
=
revlist
.
get_epoch_revisions
(
epoch
until
5
)
    
check_revisions
(
tagged_revisions
[
'
G
'
'
F
'
'
E
'
'
D
'
'
C
'
]
)
    
assert
len
(
list
(
tagged_revisions
)
)
=
=
0
    
epoch
=
86400
    
until
=
1015200
    
mocked_check_output
.
return_value
=
b
'
'
'
merge_pr_H
H
993600
_mon_
merge_pr_G
G
907200
_sun_
merge_pr_F
F
820800
_sat_
'
'
'
    
tagged_revisions
=
revlist
.
get_epoch_revisions
(
epoch
until
5
)
    
check_revisions
(
tagged_revisions
[
'
G
'
'
F
'
]
)
    
assert
len
(
list
(
tagged_revisions
)
)
=
=
0
    
epoch
=
86400
    
until
=
1296000
    
mocked_check_output
.
return_value
=
b
'
'
'
merge_pr_H
H
1296000
_wed_
merge_pr_G
G
950400
_mon_
merge_pr_F
F
921600
_sud_
'
'
'
    
tagged_revisions
=
revlist
.
get_epoch_revisions
(
epoch
until
3
)
    
check_revisions
(
tagged_revisions
[
'
G
'
'
F
'
]
)
    
assert
len
(
list
(
tagged_revisions
)
)
=
=
0
    
epoch
=
604800
    
moday
=
950400
    
until
=
moday
+
345600
    
mocked_check_output
.
return_value
=
b
'
'
'
merge_pr_H
H
1180800
_wed_
merge_pr_G
G
950400
_mon_
merge_pr_F
F
921600
_sud_
'
'
'
    
tagged_revisions
=
revlist
.
get_epoch_revisions
(
epoch
until
1
)
    
check_revisions
(
tagged_revisions
[
'
F
'
]
)
    
assert
len
(
list
(
tagged_revisions
)
)
=
=
0
