'
use
strict
'
;
pressure_test
(
async
(
t
mockPressureService
)
=
>
{
const
iframe
=
document
.
createElement
(
'
iframe
'
)
;
document
.
body
.
appendChild
(
iframe
)
;
iframe
.
contentWindow
.
focus
(
)
;
await
new
Promise
(
resolve
=
>
{
const
observer
=
new
PressureObserver
(
resolve
)
;
t
.
add_cleanup
(
(
)
=
>
{
observer
.
disconnect
(
)
;
iframe
.
remove
(
)
;
}
)
;
observer
.
observe
(
'
cpu
'
)
;
mockPressureService
.
setPressureUpdate
(
'
cpu
'
'
critical
'
)
;
mockPressureService
.
startPlatformCollector
(
5
.
0
)
;
}
)
;
}
'
Observer
in
main
frame
should
receive
PressureRecord
when
focused
on
same
-
origin
iframe
'
)
;
pressure_test
(
async
(
t
mockPressureService
)
=
>
{
const
iframe
=
document
.
createElement
(
'
iframe
'
)
;
document
.
body
.
appendChild
(
iframe
)
;
window
.
focus
(
)
;
await
new
Promise
(
resolve
=
>
{
const
observer
=
new
iframe
.
contentWindow
.
PressureObserver
(
resolve
)
;
t
.
add_cleanup
(
(
)
=
>
{
observer
.
disconnect
(
)
;
iframe
.
remove
(
)
;
}
)
;
observer
.
observe
(
'
cpu
'
)
;
mockPressureService
.
setPressureUpdate
(
'
cpu
'
'
critical
'
)
;
mockPressureService
.
startPlatformCollector
(
5
.
0
)
;
}
)
;
}
'
Observer
in
iframe
should
receive
PressureRecord
when
focused
on
same
-
origin
main
frame
'
)
;
