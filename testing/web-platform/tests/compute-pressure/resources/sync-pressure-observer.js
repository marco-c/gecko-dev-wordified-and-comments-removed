class
SyncPressureObserver
{
#
observer
=
null
;
#
changes
=
[
]
;
#
promisesWithResolver
=
[
Promise
.
withResolvers
(
)
]
;
#
currentPromisePosition
=
0
;
#
currentResolvePosition
=
0
;
constructor
(
t
)
{
this
.
#
observer
=
new
PressureObserver
(
changes
=
>
{
this
.
#
changes
.
push
(
changes
)
;
if
(
this
.
#
currentResolvePosition
=
=
=
this
.
#
promisesWithResolver
.
length
)
{
this
.
#
promisesWithResolver
.
push
(
Promise
.
withResolvers
(
)
)
;
}
this
.
#
promisesWithResolver
[
this
.
#
currentResolvePosition
+
+
]
.
resolve
(
)
;
}
)
;
t
.
add_cleanup
(
(
)
=
>
{
this
.
#
observer
.
disconnect
(
)
}
)
;
}
changes
(
)
{
return
this
.
#
changes
;
}
observer
(
)
{
return
this
.
#
observer
;
}
async
waitForUpdate
(
)
{
if
(
this
.
#
currentPromisePosition
=
=
=
this
.
#
promisesWithResolver
.
length
)
{
this
.
#
promisesWithResolver
.
push
(
Promise
.
withResolvers
(
)
)
;
}
await
this
.
#
promisesWithResolver
[
this
.
#
currentPromisePosition
+
+
]
.
promise
;
}
}
;
