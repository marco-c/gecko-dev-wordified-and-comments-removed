(
function
(
)
{
'
use
strict
'
;
var
variants
=
{
'
default
'
:
{
description
:
'
Global
Promise
constructor
removed
.
'
apply
:
function
(
)
{
delete
window
.
Promise
;
}
}
'
keep
-
promise
'
:
{
description
:
'
No
modification
of
global
environment
.
'
apply
:
function
(
)
{
}
}
}
;
var
match
=
window
.
location
.
search
.
match
(
/
\
?
(
.
*
)
/
)
;
var
variantName
=
(
match
&
&
match
[
1
]
)
|
|
'
default
'
;
if
(
!
Object
.
hasOwnProperty
.
call
(
variants
variantName
)
)
{
window
.
location
=
'
javascript
:
"
Unrecognized
variant
:
'
+
variantName
+
'
"
;
'
;
document
.
close
(
)
;
return
;
}
if
(
typeof
test
=
=
=
'
function
'
)
{
test
(
function
(
)
{
assert_unreached
(
'
variants
.
js
must
be
included
before
testharness
.
js
'
)
;
}
)
;
}
var
variant
=
variants
[
variantName
]
;
var
variantNode
=
document
.
createElement
(
'
div
'
)
;
variantNode
.
innerHTML
=
'
<
p
>
This
testharness
.
js
test
was
executed
with
'
+
'
the
variant
named
"
'
+
variantName
+
'
"
.
'
+
variant
.
description
+
'
<
/
p
>
<
p
>
Refer
to
the
test
harness
README
file
for
more
information
.
<
/
p
>
'
;
function
onReady
(
)
{
if
(
document
.
readyState
!
=
=
'
complete
'
)
{
return
;
}
document
.
body
.
insertBefore
(
variantNode
document
.
body
.
firstChild
)
;
}
onReady
(
)
;
document
.
addEventListener
(
'
readystatechange
'
onReady
)
;
variant
.
apply
(
)
;
}
(
)
)
;
