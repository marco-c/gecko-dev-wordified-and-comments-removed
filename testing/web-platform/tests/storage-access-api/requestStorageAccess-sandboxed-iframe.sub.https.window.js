'
use
strict
'
;
const
{
testPrefix
topLevelDocument
}
=
processQueryParams
(
)
;
promise_test
(
async
(
)
=
>
{
assert_not_equals
(
document
.
requestStorageAccess
undefined
)
;
}
[
{
testPrefix
}
]
document
.
requestStorageAccess
(
)
should
exist
on
the
document
interface
)
;
if
(
!
topLevelDocument
)
{
if
(
testPrefix
.
includes
(
'
allow
-
storage
-
access
-
by
-
user
-
activation
'
)
)
{
promise_test
(
async
t
=
>
{
await
test_driver
.
set_permission
(
{
name
:
'
storage
-
access
'
}
'
granted
'
)
;
await
MaybeSetStorageAccess
(
'
*
'
'
*
'
'
blocked
'
)
;
await
document
.
requestStorageAccess
(
)
;
assert_true
(
await
CanAccessCookiesViaHTTP
(
)
'
After
obtaining
storage
access
subresource
requests
from
the
frame
should
send
and
set
cookies
.
'
)
;
assert_true
(
CanAccessCookiesViaJS
(
)
'
After
obtaining
storage
access
scripts
in
the
frame
should
be
able
to
access
cookies
.
'
)
;
}
[
{
testPrefix
}
]
document
.
requestStorageAccess
(
)
should
resolve
even
without
a
user
gesture
when
already
granted
.
)
;
promise_test
(
async
(
)
=
>
{
await
test_driver
.
set_permission
(
{
name
:
'
storage
-
access
'
}
'
granted
'
)
;
await
MaybeSetStorageAccess
(
'
*
'
'
*
'
'
blocked
'
)
;
await
RunCallbackWithGesture
(
async
(
)
=
>
{
await
document
.
requestStorageAccess
(
)
;
}
)
;
assert_true
(
await
CanAccessCookiesViaHTTP
(
)
'
After
obtaining
storage
access
subresource
requests
from
the
frame
should
send
and
set
cookies
.
'
)
;
assert_true
(
CanAccessCookiesViaJS
(
)
'
After
obtaining
storage
access
scripts
in
the
frame
should
be
able
to
access
cookies
.
'
)
;
}
[
{
testPrefix
}
]
document
.
requestStorageAccess
(
)
should
resolve
with
a
user
gesture
)
;
}
else
{
promise_test
(
async
t
=
>
{
await
test_driver
.
set_permission
(
{
name
:
'
storage
-
access
'
}
'
granted
'
)
;
await
MaybeSetStorageAccess
(
'
*
'
'
*
'
'
blocked
'
)
;
return
promise_rejects_dom
(
t
'
NotAllowedError
'
document
.
requestStorageAccess
(
)
'
document
.
requestStorageAccess
(
)
call
without
user
gesture
.
'
)
;
}
'
[
'
+
testPrefix
+
'
]
document
.
requestStorageAccess
(
)
should
reject
with
a
NotAllowedError
with
no
user
gesture
.
'
)
;
promise_test
(
async
t
=
>
{
await
test_driver
.
set_permission
(
{
name
:
'
storage
-
access
'
}
'
granted
'
)
;
await
MaybeSetStorageAccess
(
'
*
'
'
*
'
'
blocked
'
)
;
await
RunCallbackWithGesture
(
async
(
)
=
>
{
await
promise_rejects_dom
(
t
'
NotAllowedError
'
document
.
requestStorageAccess
(
)
'
document
.
requestStorageAccess
(
)
call
with
user
gesture
.
'
)
;
}
)
;
}
[
{
testPrefix
}
]
document
.
requestStorageAccess
(
)
should
reject
with
a
NotAllowedError
even
with
a
user
gesture
)
;
}
}
