'
use
strict
'
;
let
expectAccessAllowed
=
true
;
let
testPrefix
=
"
top
-
level
-
context
"
;
let
topLevelDocument
=
true
;
let
queryParams
=
window
.
location
.
search
.
substring
(
1
)
.
split
(
"
&
"
)
;
queryParams
.
forEach
(
function
(
param
index
)
{
if
(
param
.
toLowerCase
(
)
=
=
"
allowed
=
false
"
)
{
expectAccessAllowed
=
false
;
}
else
if
(
param
.
toLowerCase
(
)
=
=
"
rootdocument
=
false
"
)
{
topLevelDocument
=
false
;
}
else
if
(
param
.
split
(
"
=
"
)
[
0
]
.
toLowerCase
(
)
=
=
"
testcase
"
)
{
testPrefix
=
param
.
split
(
"
=
"
)
[
1
]
;
}
}
)
;
test
(
(
)
=
>
{
assert_not_equals
(
document
.
hasStorageAccess
undefined
)
;
}
"
[
"
+
testPrefix
+
"
]
document
.
hasStorageAccess
(
)
should
be
supported
on
the
document
interface
"
)
;
promise_test
(
(
)
=
>
{
return
document
.
hasStorageAccess
(
)
.
then
(
hasAccess
=
>
{
assert_equals
(
hasAccess
expectAccessAllowed
"
Access
should
be
granted
by
default
:
"
+
expectAccessAllowed
)
;
}
)
;
}
"
[
"
+
testPrefix
+
"
]
document
.
hasStorageAccess
(
)
should
be
allowed
by
default
:
"
+
expectAccessAllowed
)
;
promise_test
(
(
)
=
>
{
let
createdDocument
=
document
.
implementation
.
createDocument
(
"
"
null
)
;
return
createdDocument
.
hasStorageAccess
(
)
.
then
(
hasAccess
=
>
{
assert_false
(
hasAccess
"
Access
should
be
denied
to
a
generated
document
not
part
of
the
DOM
.
"
)
;
}
)
;
}
"
[
"
+
testPrefix
+
"
]
document
.
hasStorageAccess
(
)
should
work
on
a
document
object
.
"
)
;
if
(
topLevelDocument
)
{
RunTestsInIFrame
(
"
resources
/
hasStorageAccess
-
iframe
.
html
?
testCase
=
same
-
origin
-
frame
&
rootdocument
=
false
"
)
;
RunTestsInIFrame
(
"
http
:
/
/
{
{
domains
[
www
]
}
}
:
{
{
ports
[
http
]
[
0
]
}
}
/
storage
-
access
-
api
/
resources
/
hasStorageAccess
-
iframe
.
html
?
testCase
=
cross
-
origin
-
frame
&
rootdocument
=
false
"
)
;
RunTestsInNestedIFrame
(
"
resources
/
hasStorageAccess
-
iframe
.
html
?
testCase
=
nested
-
same
-
origin
-
frame
&
rootdocument
=
false
"
)
;
RunTestsInNestedIFrame
(
"
http
:
/
/
{
{
domains
[
www
]
}
}
:
{
{
ports
[
http
]
[
0
]
}
}
/
storage
-
access
-
api
/
resources
/
hasStorageAccess
-
iframe
.
html
?
testCase
=
nested
-
cross
-
origin
-
frame
&
rootdocument
=
false
"
)
;
}
