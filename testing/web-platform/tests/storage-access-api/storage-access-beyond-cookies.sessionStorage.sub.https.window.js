'
use
strict
'
;
async_test
(
t
=
>
{
window
.
addEventListener
(
"
message
"
t
.
step_func
(
e
=
>
{
if
(
e
.
data
.
type
!
=
"
result
"
)
{
return
;
}
assert_equals
(
e
.
data
.
message
"
HasAccess
for
sessionStorage
"
"
Storage
Access
API
should
be
accessible
and
return
first
-
party
data
"
)
;
window
.
sessionStorage
.
setItem
(
"
window_event
"
id
)
;
}
)
)
;
const
id
=
String
(
Date
.
now
(
)
)
;
window
.
sessionStorage
.
setItem
(
"
test
"
id
)
;
window
.
addEventListener
(
"
storage
"
t
.
step_func
(
e
=
>
{
if
(
e
.
key
=
=
"
handle_event
"
)
{
assert_equals
(
e
.
newValue
id
)
;
assert_equals
(
e
.
storageArea
window
.
sessionStorage
)
;
window
.
sessionStorage
.
clear
(
)
;
t
.
done
(
)
;
}
}
)
)
;
let
iframe
=
document
.
createElement
(
"
iframe
"
)
;
iframe
.
src
=
"
https
:
/
/
{
{
hosts
[
alt
]
[
]
}
}
:
{
{
ports
[
https
]
[
0
]
}
}
/
storage
-
access
-
api
/
resources
/
storage
-
access
-
beyond
-
cookies
-
iframe
.
sub
.
html
?
type
=
sessionStorage
&
id
=
"
+
id
;
document
.
body
.
appendChild
(
iframe
)
;
}
"
Verify
StorageAccessAPIBeyondCookies
for
Session
Storage
"
)
;
