window
.
onScriptError
=
event
=
>
{
window
.
registrationResult
=
{
type
:
'
FetchError
'
error
:
event
.
error
}
;
return
false
;
}
;
window
.
windowErrorHandler
=
event
=
>
{
window
.
registrationResult
=
{
type
:
'
ParseError
'
error
:
event
.
error
}
;
return
false
;
}
;
window
.
addEventListener
(
'
error
'
window
.
windowErrorHandler
)
;
window
.
addEventListener
(
'
message
'
event
=
>
{
if
(
event
.
data
.
action
!
=
=
'
resolve
'
)
{
parent
.
postMessage
(
{
type
:
'
Failure
'
result
:
'
Error
'
message
:
'
Invalid
Action
:
'
+
event
.
data
.
action
}
'
*
'
)
;
return
;
}
window
.
specifierToResolve
=
event
.
data
.
specifier
;
document
.
querySelector
(
'
base
'
)
.
href
=
event
.
data
.
baseURL
;
const
inlineScript
=
document
.
createElement
(
'
script
'
)
;
inlineScript
.
type
=
'
module
'
;
inlineScript
.
textContent
=
try
{
const
result
=
import
.
meta
.
resolve
(
window
.
specifierToResolve
)
;
parent
.
postMessage
(
{
type
:
'
ResolutionSuccess
'
result
}
'
*
'
)
;
}
catch
(
e
)
{
parent
.
postMessage
(
{
type
:
'
Failure
'
result
:
e
.
name
message
:
e
.
message
}
'
*
'
)
;
}
;
document
.
body
.
append
(
inlineScript
)
;
}
)
;
