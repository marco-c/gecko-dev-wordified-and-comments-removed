function
audioParamLinearRamp
(
t
v0
t0
v1
t1
)
{
if
(
t
>
=
t1
)
return
v1
;
return
(
v0
+
(
v1
-
v0
)
*
(
t
-
t0
)
/
(
t1
-
t0
)
)
}
function
audioParamExponentialRamp
(
t
v0
t0
v1
t1
)
{
if
(
t
>
=
t1
)
return
v1
;
return
v0
*
Math
.
pow
(
v1
/
v0
(
t
-
t0
)
/
(
t1
-
t0
)
)
;
}
function
audioParamSetTarget
(
t
v0
t0
vFinal
timeConstant
)
{
return
vFinal
+
(
v0
-
vFinal
)
*
Math
.
exp
(
-
(
t
-
t0
)
/
timeConstant
)
;
}
function
audioParamSetValueCurve
(
t
curve
t0
duration
)
{
if
(
t
>
t0
+
duration
)
return
curve
[
curve
.
length
-
1
]
;
let
curvePointsPerSecond
=
(
curve
.
length
-
1
)
/
duration
;
let
virtualIndex
=
(
t
-
t0
)
*
curvePointsPerSecond
;
let
index
=
Math
.
floor
(
virtualIndex
)
;
let
delta
=
virtualIndex
-
index
;
let
c0
=
curve
[
index
]
;
let
c1
=
curve
[
Math
.
min
(
index
+
1
curve
.
length
-
1
)
]
;
return
c0
+
(
c1
-
c0
)
*
delta
;
}
