const
params
=
new
URLSearchParams
(
location
.
search
)
;
const
key
=
params
.
get
(
'
key
'
)
;
const
target_hint
=
params
.
get
(
'
target_hint
'
)
;
const
rule_extras
=
{
target_hint
}
;
const
block
=
location
.
pathname
.
endsWith
(
'
csp
-
script
-
src
-
self
.
html
'
)
;
const
run_test
=
params
.
has
(
'
run
-
test
'
)
;
if
(
!
run_test
)
{
const
done_key
=
token
(
)
;
const
url
=
new
URL
(
document
.
URL
)
;
url
.
searchParams
.
append
(
'
run
-
test
'
'
'
)
;
url
.
searchParams
.
append
(
'
done
-
key
'
done_key
)
;
if
(
block
)
{
document
.
addEventListener
(
'
securitypolicyviolation
'
e
=
>
{
if
(
e
.
effectiveDirective
!
=
'
script
-
src
'
&
&
e
.
effectiveDirective
!
=
'
script
-
src
-
elem
'
)
{
const
message
=
'
unexpected
effective
directive
:
'
+
e
.
effectiveDirective
;
writeValueToServer
(
key
message
)
.
then
(
(
)
=
>
{
window
.
close
(
)
;
}
)
;
}
else
{
const
message
=
'
blocked
by
'
+
e
.
effectiveDirective
;
writeValueToServer
(
key
message
)
.
then
(
(
)
=
>
{
window
.
close
(
)
;
}
)
;
}
}
)
;
}
startPrerendering
(
url
.
toString
(
)
rule_extras
)
;
nextValueFromServer
(
done_key
)
.
then
(
(
)
=
>
{
window
.
close
(
)
;
}
)
;
}
else
{
if
(
block
)
{
writeValueToServer
(
key
'
unexpected
prerendering
'
)
;
}
else
{
writeValueToServer
(
key
document
.
prerendering
)
;
const
done_key
=
params
.
get
(
'
done
-
key
'
)
;
writeValueToServer
(
done_key
"
done
"
)
;
}
}
