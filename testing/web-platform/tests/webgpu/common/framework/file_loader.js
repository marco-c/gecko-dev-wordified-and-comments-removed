import
{
parseQuery
}
from
'
.
/
query
/
parseQuery
.
js
'
;
import
{
loadTreeForQuery
}
from
'
.
/
tree
.
js
'
;
export
class
TestFileLoader
{
importSpecFile
(
suite
path
)
{
return
this
.
import
(
{
suite
}
/
{
path
.
join
(
'
/
'
)
}
.
spec
.
js
)
;
}
async
loadTree
(
query
subqueriesToExpand
=
[
]
)
{
return
loadTreeForQuery
(
this
query
subqueriesToExpand
.
map
(
q
=
>
parseQuery
(
q
)
)
)
;
}
async
loadCases
(
query
)
{
const
tree
=
await
this
.
loadTree
(
query
)
;
return
tree
.
iterateLeaves
(
)
;
}
}
export
class
DefaultTestFileLoader
extends
TestFileLoader
{
async
listing
(
suite
)
{
return
(
await
import
(
.
.
/
.
.
/
{
suite
}
/
listing
.
js
)
)
.
listing
;
}
import
(
path
)
{
return
import
(
.
.
/
.
.
/
{
path
}
)
;
}
}
