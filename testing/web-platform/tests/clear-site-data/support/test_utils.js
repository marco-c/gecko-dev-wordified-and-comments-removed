var
TestUtils
=
(
function
(
)
{
function
randomString
(
)
{
var
result
=
"
"
;
for
(
var
i
=
0
;
i
<
5
;
i
+
+
)
result
+
=
String
.
fromCharCode
(
97
+
Math
.
floor
(
Math
.
random
(
)
*
26
)
)
;
return
result
;
}
;
var
Datatype
;
var
TestUtils
=
{
}
;
TestUtils
.
DATATYPES
=
[
{
"
name
"
:
"
cookies
"
"
add
"
:
function
(
)
{
return
new
Promise
(
function
(
resolve
reject
)
{
document
.
cookie
=
randomString
(
)
+
"
=
"
+
randomString
(
)
;
resolve
(
)
;
}
)
;
}
"
isEmpty
"
:
function
(
)
{
return
new
Promise
(
function
(
resolve
reject
)
{
resolve
(
!
document
.
cookie
)
;
}
)
;
}
}
{
"
name
"
:
"
storage
"
"
add
"
:
function
(
)
{
return
new
Promise
(
function
(
resolve
reject
)
{
localStorage
.
setItem
(
randomString
(
)
randomString
(
)
)
;
resolve
(
)
;
}
)
;
}
"
isEmpty
"
:
function
(
)
{
return
new
Promise
(
function
(
resolve
reject
)
{
resolve
(
!
localStorage
.
length
)
;
}
)
;
}
}
]
;
TestUtils
.
COMBINATIONS
=
(
function
(
)
{
var
combinations
=
[
]
;
for
(
var
mask
=
0
;
mask
<
(
1
<
<
TestUtils
.
DATATYPES
.
length
)
;
mask
+
+
)
{
var
combination
=
[
]
;
for
(
var
datatype
=
0
;
datatype
<
TestUtils
.
DATATYPES
.
length
;
datatype
+
+
)
{
if
(
mask
&
(
1
<
<
datatype
)
)
combination
.
push
(
TestUtils
.
DATATYPES
[
datatype
]
)
;
}
combinations
.
push
(
combination
)
;
}
return
combinations
;
}
)
(
)
;
TestUtils
.
getClearSiteDataUrl
=
function
(
datatypes
)
{
names
=
datatypes
.
map
(
function
(
e
)
{
return
e
.
name
}
)
;
return
"
support
/
echo
-
clear
-
site
-
data
.
py
?
"
+
names
.
join
(
"
&
"
)
;
}
return
TestUtils
;
}
)
(
)
;
