test
(
(
)
=
>
{
assert_true
(
!
!
self
.
PerformanceObserver
"
PerformanceObserver
"
)
;
assert_true
(
!
!
self
.
PerformanceObserver
.
supportedEntryTypes
"
PerformanceObserver
.
supportedEntryTypes
"
)
;
}
"
PerformanceObserver
.
supportedEntryTypes
exists
"
)
;
[
[
"
navigation
"
"
PerformanceNavigationTiming
"
]
[
"
paint
"
"
PerformancePaintTiming
"
]
[
"
longtask
"
"
PerformanceLongTaskTiming
"
]
]
.
forEach
(
test_support
)
;
if
(
self
.
document
)
document
.
head
.
parentNode
.
appendChild
(
document
.
createTextNode
(
'
text
inserted
on
purpose
'
)
)
;
function
syncWait
(
waitDuration
)
{
if
(
waitDuration
<
=
0
)
return
;
const
startTime
=
performance
.
now
(
)
;
let
unused
=
'
'
;
for
(
let
i
=
0
;
i
<
10000
;
i
+
+
)
unused
+
=
'
'
+
Math
.
random
(
)
;
return
syncWait
(
waitDuration
-
(
performance
.
now
(
)
-
startTime
)
)
;
}
syncWait
(
50
)
;
